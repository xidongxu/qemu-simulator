
build/stm32-qemu.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20001238 	andcs	r1, r0, r8, lsr r2
 8000004:	08001a5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, fp, ip}
 8000008:	08000819 	stmdaeq	r0, {r0, r3, r4, fp}
 800000c:	080001d1 	stmdaeq	r0, {r0, r4, r6, r7, r8}
 8000010:	0800082d 	stmdaeq	r0, {r0, r2, r3, r5, fp}
 8000014:	08000841 	stmdaeq	r0, {r0, r6, fp}
 8000018:	08000855 	stmdaeq	r0, {r0, r2, r4, r6, fp}
	...
 800002c:	08000869 	stmdaeq	r0, {r0, r3, r5, r6, fp}
 8000030:	0800086b 	stmdaeq	r0, {r0, r1, r3, r5, r6, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	0800086d 	stmdaeq	r0, {r0, r2, r3, r5, r6, fp}
 800003c:	0800086f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, fp}
 8000040:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000044:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000048:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800004c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000050:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000054:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000058:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800005c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000060:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000064:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000068:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800006c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000070:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000074:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000078:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800007c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000080:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000084:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000088:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800008c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000090:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000094:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000098:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800009c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000a0:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000a4:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000a8:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000ac:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000b0:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000b4:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000b8:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000bc:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000c0:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000c4:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000c8:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000cc:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000d0:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000d4:	08000879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp}
 80000d8:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000dc:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000e0:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000e4:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000e8:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000ec:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000f0:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000f4:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000f8:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 80000fc:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000100:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000104:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000108:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800010c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000110:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000114:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000118:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800011c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000120:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000124:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000128:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800012c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000130:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
	...
 800013c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000140:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000144:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000148:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800014c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000150:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000154:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000158:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800015c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000160:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000164:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000168:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 800016c:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000170:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000174:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
	...
 8000180:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}
 8000184:	08001aad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, fp, ip}

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000070 	andcs	r0, r0, r0, ror r0
 80001ac:	00000000 	andeq	r0, r0, r0
 80001b0:	08002b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp, sp}

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	andeq	r0, r0, r0
 80001c8:	20000074 	andcs	r0, r0, r4, ror r0
 80001cc:	08002b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp, sp}

080001d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    ldr     r3, =fd_code_stack_base     /* r3 = &fd_code_stack_base */
 80001d0:	4b0d      	ldr	r3, [pc, #52]	; (8000208 <stack_invalid+0x8>)
    ldr     r1, [r3]                    /* r1 = fd_code_stack_base  */
 80001d2:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_code_stack_full     /* r3 = &fd_code_stack_full */
 80001d4:	4b0d      	ldr	r3, [pc, #52]	; (800020c <stack_invalid+0xc>)
    ldr     r2, [r3]                    /* r2 = fd_code_stack_full  */
 80001d6:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
 80001d8:	f01e 0f04 	tst.w	lr, #4
    ite     eq
 80001dc:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
 80001de:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001e2:	f3ef 8009 	mrsne	r0, PSP

    cmp     r0, r1                      /* compare sp and stack base addr */
 80001e6:	4288      	cmp	r0, r1
    blt     stack_invalid               /* sp < stack_base_addr, sp is invalid */
 80001e8:	db0a      	blt.n	8000200 <stack_invalid>
    cmp     r0, r2                      /* compare sp and stack full addr */
 80001ea:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* sp > stack_base_addr, sp is invalid */
 80001ec:	dc08      	bgt.n	8000200 <stack_invalid>

    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
 80001ee:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0*/
 80001f2:	f01e 0f04 	tst.w	lr, #4
    ite     eq
 80001f6:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
 80001f8:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001fc:	f3ef 8009 	mrsne	r0, PSP

08000200 <stack_invalid>:
stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
 8000200:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000202:	4a03      	ldr	r2, [pc, #12]	; (8000210 <stack_invalid+0x10>)
    bx      r2                          /* jump to fault_dump_handler */                        
 8000204:	4710      	bx	r2
 8000206:	01dc0000 	bicseq	r0, ip, r0
    ldr     r3, =fd_code_stack_base     /* r3 = &fd_code_stack_base */
 800020a:	01e02000 	mvneq	r2, r0
    ldr     r3, =fd_code_stack_full     /* r3 = &fd_code_stack_full */
 800020e:	18d12000 	ldmne	r1, {sp}^
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000212:	00000800 	andeq	r0, r0, r0, lsl #16
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <__io_putchar>:
  * @brief  Retargets the C library printf function to the USART.
  * @param  None
  * @retval None
  */
PUTCHAR_PROTOTYPE
{
 80005c4:	b500      	push	{lr}
 80005c6:	b083      	sub	sp, #12
 80005c8:	9001      	str	r0, [sp, #4]
  /* Place your implementation of fputc here */
  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 80005ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80005ce:	2201      	movs	r2, #1
 80005d0:	a901      	add	r1, sp, #4
 80005d2:	4803      	ldr	r0, [pc, #12]	; (80005e0 <__io_putchar+0x1c>)
 80005d4:	f000 fb68 	bl	8000ca8 <HAL_UART_Transmit>
  return ch;
}
 80005d8:	9801      	ldr	r0, [sp, #4]
 80005da:	b003      	add	sp, #12
 80005dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80005e0:	2000008c 	andcs	r0, r0, ip, lsl #1

080005e4 <fault_unalign_trigger>:
  c = (a + (b / c));
  printf("c = %d\r\n", c);
}

void fault_unalign_trigger(void) 
{
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	b083      	sub	sp, #12
  volatile int *addr = NULL;
  volatile int value = 0;
 80005e8:	2400      	movs	r4, #0
 80005ea:	9401      	str	r4, [sp, #4]
  SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
 80005ec:	4a0e      	ldr	r2, [pc, #56]	; (8000628 <fault_unalign_trigger+0x44>)
 80005ee:	6953      	ldr	r3, [r2, #20]
 80005f0:	f043 0308 	orr.w	r3, r3, #8
 80005f4:	6153      	str	r3, [r2, #20]

  addr = (int*)0x00;
  value = *addr;
 80005f6:	6823      	ldr	r3, [r4, #0]
 80005f8:	9301      	str	r3, [sp, #4]
  printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 80005fa:	9a01      	ldr	r2, [sp, #4]
 80005fc:	4d0b      	ldr	r5, [pc, #44]	; (800062c <fault_unalign_trigger+0x48>)
 80005fe:	4621      	mov	r1, r4
 8000600:	4628      	mov	r0, r5
 8000602:	f001 fa87 	bl	8001b14 <iprintf>
  addr = (int*)0x04;
  value = *addr;
 8000606:	6863      	ldr	r3, [r4, #4]
 8000608:	9301      	str	r3, [sp, #4]
  printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 800060a:	9a01      	ldr	r2, [sp, #4]
 800060c:	2104      	movs	r1, #4
 800060e:	4628      	mov	r0, r5
 8000610:	f001 fa80 	bl	8001b14 <iprintf>
  addr = (int*)0x03;
  value = *addr;
 8000614:	f8d4 3003 	ldr.w	r3, [r4, #3]
 8000618:	9301      	str	r3, [sp, #4]
  printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 800061a:	9a01      	ldr	r2, [sp, #4]
 800061c:	2103      	movs	r1, #3
 800061e:	4628      	mov	r0, r5
 8000620:	f001 fa78 	bl	8001b14 <iprintf>
}
 8000624:	b003      	add	sp, #12
 8000626:	bd30      	pop	{r4, r5, pc}
 8000628:	e000ed00 	and	lr, r0, r0, lsl #26
 800062c:	08002b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, sp}

08000630 <test0>:

void test0(void)
{
 8000630:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000632:	4903      	ldr	r1, [pc, #12]	; (8000640 <test0+0x10>)
 8000634:	4803      	ldr	r0, [pc, #12]	; (8000644 <test0+0x14>)
 8000636:	f001 fa6d 	bl	8001b14 <iprintf>
  // trigger a fault.
  //float a = 0.0, b = 1.1;
  //printf("this is %f.\r\n", (a + b));
  fault_unalign_trigger();
 800063a:	f7ff ffd3 	bl	80005e4 <fault_unalign_trigger>
}
 800063e:	bd08      	pop	{r3, pc}
 8000640:	08002bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp, sp}
 8000644:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000648 <test1>:

void test1(void)
{
 8000648:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 800064a:	4903      	ldr	r1, [pc, #12]	; (8000658 <test1+0x10>)
 800064c:	4803      	ldr	r0, [pc, #12]	; (800065c <test1+0x14>)
 800064e:	f001 fa61 	bl	8001b14 <iprintf>
  test0();
 8000652:	f7ff ffed 	bl	8000630 <test0>
}
 8000656:	bd08      	pop	{r3, pc}
 8000658:	08002bb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, fp, sp}
 800065c:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000660 <test2>:

void test2(void)
{
 8000660:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000662:	4903      	ldr	r1, [pc, #12]	; (8000670 <test2+0x10>)
 8000664:	4803      	ldr	r0, [pc, #12]	; (8000674 <test2+0x14>)
 8000666:	f001 fa55 	bl	8001b14 <iprintf>
  test1();
 800066a:	f7ff ffed 	bl	8000648 <test1>
}
 800066e:	bd08      	pop	{r3, pc}
 8000670:	08002ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp, sp}
 8000674:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000678 <test3>:

void test3(void)
{
 8000678:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 800067a:	4903      	ldr	r1, [pc, #12]	; (8000688 <test3+0x10>)
 800067c:	4803      	ldr	r0, [pc, #12]	; (800068c <test3+0x14>)
 800067e:	f001 fa49 	bl	8001b14 <iprintf>
  test2();
 8000682:	f7ff ffed 	bl	8000660 <test2>
}
 8000686:	bd08      	pop	{r3, pc}
 8000688:	08002ba0 	stmdaeq	r0, {r5, r7, r8, r9, fp, sp}
 800068c:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000690 <test4>:

void test4(void)
{
 8000690:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000692:	4903      	ldr	r1, [pc, #12]	; (80006a0 <test4+0x10>)
 8000694:	4803      	ldr	r0, [pc, #12]	; (80006a4 <test4+0x14>)
 8000696:	f001 fa3d 	bl	8001b14 <iprintf>
  test3();
 800069a:	f7ff ffed 	bl	8000678 <test3>
}
 800069e:	bd08      	pop	{r3, pc}
 80006a0:	08002b98 	stmdaeq	r0, {r3, r4, r7, r8, r9, fp, sp}
 80006a4:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

080006a8 <test5>:

void test5(void)
{
 80006a8:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 80006aa:	4903      	ldr	r1, [pc, #12]	; (80006b8 <test5+0x10>)
 80006ac:	4803      	ldr	r0, [pc, #12]	; (80006bc <test5+0x14>)
 80006ae:	f001 fa31 	bl	8001b14 <iprintf>
  test4();
 80006b2:	f7ff ffed 	bl	8000690 <test4>
}
 80006b6:	bd08      	pop	{r3, pc}
 80006b8:	08002b90 	stmdaeq	r0, {r4, r7, r8, r9, fp, sp}
 80006bc:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

080006c0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80006c0:	b508      	push	{r3, lr}
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80006c2:	f000 ffd5 	bl	8001670 <HAL_Init>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80006c6:	f000 f827 	bl	8000718 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80006ca:	f000 f84b 	bl	8000764 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  fault_dump_init();
 80006ce:	f001 f899 	bl	8001804 <fault_dump_init>
  test5();
 80006d2:	f7ff ffe9 	bl	80006a8 <test5>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    printf("%s", "hello qemu.\r\n");
 80006d6:	4804      	ldr	r0, [pc, #16]	; (80006e8 <main+0x28>)
 80006d8:	f001 faa2 	bl	8001c20 <puts>
    HAL_Delay(1000);
 80006dc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80006e0:	f000 fff2 	bl	80016c8 <HAL_Delay>
  while (1)
 80006e4:	e7f7      	b.n	80006d6 <main+0x16>
 80006e6:	bf00      	nop
 80006e8:	08002b60 	stmdaeq	r0, {r5, r6, r8, r9, fp, sp}

080006ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80006ec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN Error_Handler_Debug */
	printf("this is %s.\r\n", __func__);
 80006ee:	4903      	ldr	r1, [pc, #12]	; (80006fc <Error_Handler+0x10>)
 80006f0:	4803      	ldr	r0, [pc, #12]	; (8000700 <Error_Handler+0x14>)
 80006f2:	f001 fa0f 	bl	8001b14 <iprintf>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80006f6:	b672      	cpsid	i
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80006f8:	e7fe      	b.n	80006f8 <Error_Handler+0xc>
 80006fa:	bf00      	nop
 80006fc:	08002b80 	stmdaeq	r0, {r7, r8, r9, fp, sp}
 8000700:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000704 <assert_failed>:
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
 8000704:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 6 */
  printf("this is %s.\r\n", __func__);
 8000706:	4902      	ldr	r1, [pc, #8]	; (8000710 <assert_failed+0xc>)
 8000708:	4802      	ldr	r0, [pc, #8]	; (8000714 <assert_failed+0x10>)
 800070a:	f001 fa03 	bl	8001b14 <iprintf>
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
 800070e:	bd08      	pop	{r3, pc}
 8000710:	08002b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp, sp}
 8000714:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000718 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000718:	b084      	sub	sp, #16

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800071a:	2200      	movs	r2, #0
 800071c:	9201      	str	r2, [sp, #4]
 800071e:	4b10      	ldr	r3, [pc, #64]	; (8000760 <MX_GPIO_Init+0x48>)
 8000720:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000722:	f041 0104 	orr.w	r1, r1, #4
 8000726:	6319      	str	r1, [r3, #48]	; 0x30
 8000728:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800072a:	f001 0104 	and.w	r1, r1, #4
 800072e:	9101      	str	r1, [sp, #4]
 8000730:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000732:	9202      	str	r2, [sp, #8]
 8000734:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000736:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800073a:	6319      	str	r1, [r3, #48]	; 0x30
 800073c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800073e:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000742:	9102      	str	r1, [sp, #8]
 8000744:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000746:	9203      	str	r2, [sp, #12]
 8000748:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800074a:	f042 0201 	orr.w	r2, r2, #1
 800074e:	631a      	str	r2, [r3, #48]	; 0x30
 8000750:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000752:	f003 0301 	and.w	r3, r3, #1
 8000756:	9303      	str	r3, [sp, #12]
 8000758:	9b03      	ldr	r3, [sp, #12]

}
 800075a:	b004      	add	sp, #16
 800075c:	4770      	bx	lr
 800075e:	bf00      	nop
 8000760:	40023800 	andmi	r3, r2, r0, lsl #16

08000764 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8000764:	b508      	push	{r3, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000766:	480a      	ldr	r0, [pc, #40]	; (8000790 <MX_USART1_UART_Init+0x2c>)
 8000768:	4b0a      	ldr	r3, [pc, #40]	; (8000794 <MX_USART1_UART_Init+0x30>)
 800076a:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 800076c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000770:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000772:	2300      	movs	r3, #0
 8000774:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000776:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000778:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800077a:	220c      	movs	r2, #12
 800077c:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800077e:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000780:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000782:	f000 f9fb 	bl	8000b7c <HAL_UART_Init>
 8000786:	b900      	cbnz	r0, 800078a <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000788:	bd08      	pop	{r3, pc}
    Error_Handler();
 800078a:	f7ff ffaf 	bl	80006ec <Error_Handler>
}
 800078e:	e7fb      	b.n	8000788 <MX_USART1_UART_Init+0x24>
 8000790:	2000008c 	andcs	r0, r0, ip, lsl #1
 8000794:	40011000 	andmi	r1, r1, r0

08000798 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8000798:	b510      	push	{r4, lr}
 800079a:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800079c:	2300      	movs	r3, #0
 800079e:	9303      	str	r3, [sp, #12]
 80007a0:	9304      	str	r3, [sp, #16]
 80007a2:	9305      	str	r3, [sp, #20]
 80007a4:	9306      	str	r3, [sp, #24]
 80007a6:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 80007a8:	6802      	ldr	r2, [r0, #0]
 80007aa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80007ae:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80007b2:	429a      	cmp	r2, r3
 80007b4:	d001      	beq.n	80007ba <HAL_UART_MspInit+0x22>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 80007b6:	b008      	add	sp, #32
 80007b8:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 80007ba:	2400      	movs	r4, #0
 80007bc:	9401      	str	r4, [sp, #4]
 80007be:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 80007c2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80007c4:	f042 0210 	orr.w	r2, r2, #16
 80007c8:	645a      	str	r2, [r3, #68]	; 0x44
 80007ca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80007cc:	f002 0210 	and.w	r2, r2, #16
 80007d0:	9201      	str	r2, [sp, #4]
 80007d2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80007d4:	9402      	str	r4, [sp, #8]
 80007d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80007d8:	f042 0201 	orr.w	r2, r2, #1
 80007dc:	631a      	str	r2, [r3, #48]	; 0x30
 80007de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007e0:	f003 0301 	and.w	r3, r3, #1
 80007e4:	9302      	str	r3, [sp, #8]
 80007e6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80007e8:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80007ec:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80007ee:	2302      	movs	r3, #2
 80007f0:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80007f2:	2303      	movs	r3, #3
 80007f4:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80007f6:	2307      	movs	r3, #7
 80007f8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80007fa:	a903      	add	r1, sp, #12
 80007fc:	4805      	ldr	r0, [pc, #20]	; (8000814 <HAL_UART_MspInit+0x7c>)
 80007fe:	f000 fcaf 	bl	8001160 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8000802:	4622      	mov	r2, r4
 8000804:	4621      	mov	r1, r4
 8000806:	2025      	movs	r0, #37	; 0x25
 8000808:	f000 fe9a 	bl	8001540 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 800080c:	2025      	movs	r0, #37	; 0x25
 800080e:	f000 fedd 	bl	80015cc <HAL_NVIC_EnableIRQ>
}
 8000812:	e7d0      	b.n	80007b6 <HAL_UART_MspInit+0x1e>
 8000814:	40020000 	andmi	r0, r2, r0

08000818 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000818:	b508      	push	{r3, lr}
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 800081a:	4902      	ldr	r1, [pc, #8]	; (8000824 <NMI_Handler+0xc>)
 800081c:	4802      	ldr	r0, [pc, #8]	; (8000828 <NMI_Handler+0x10>)
 800081e:	f001 f979 	bl	8001b14 <iprintf>
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000822:	e7fe      	b.n	8000822 <NMI_Handler+0xa>
 8000824:	08002bfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, fp, sp}
 8000828:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

0800082c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800082c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 800082e:	4902      	ldr	r1, [pc, #8]	; (8000838 <MemManage_Handler+0xc>)
 8000830:	4802      	ldr	r0, [pc, #8]	; (800083c <MemManage_Handler+0x10>)
 8000832:	f001 f96f 	bl	8001b14 <iprintf>
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000836:	e7fe      	b.n	8000836 <MemManage_Handler+0xa>
 8000838:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}
 800083c:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000840 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000840:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BusFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 8000842:	4902      	ldr	r1, [pc, #8]	; (800084c <BusFault_Handler+0xc>)
 8000844:	4802      	ldr	r0, [pc, #8]	; (8000850 <BusFault_Handler+0x10>)
 8000846:	f001 f965 	bl	8001b14 <iprintf>
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800084a:	e7fe      	b.n	800084a <BusFault_Handler+0xa>
 800084c:	08002bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, sp}
 8000850:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000854 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000854:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UsageFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 8000856:	4902      	ldr	r1, [pc, #8]	; (8000860 <UsageFault_Handler+0xc>)
 8000858:	4802      	ldr	r0, [pc, #8]	; (8000864 <UsageFault_Handler+0x10>)
 800085a:	f001 f95b 	bl	8001b14 <iprintf>
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800085e:	e7fe      	b.n	800085e <UsageFault_Handler+0xa>
 8000860:	08002bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp, sp}
 8000864:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}

08000868 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000868:	4770      	bx	lr

0800086a <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800086a:	4770      	bx	lr

0800086c <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800086c:	4770      	bx	lr

0800086e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800086e:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000870:	f000 ff18 	bl	80016a4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000874:	bd08      	pop	{r3, pc}
	...

08000878 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000878:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800087a:	4802      	ldr	r0, [pc, #8]	; (8000884 <USART1_IRQHandler+0xc>)
 800087c:	f000 fb06 	bl	8000e8c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8000880:	bd08      	pop	{r3, pc}
 8000882:	bf00      	nop
 8000884:	2000008c 	andcs	r0, r0, ip, lsl #1

08000888 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000888:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800088a:	2100      	movs	r1, #0
 800088c:	9100      	str	r1, [sp, #0]
 800088e:	4b0b      	ldr	r3, [pc, #44]	; (80008bc <HAL_MspInit+0x34>)
 8000890:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000892:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000896:	645a      	str	r2, [r3, #68]	; 0x44
 8000898:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800089a:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800089e:	9200      	str	r2, [sp, #0]
 80008a0:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008a2:	9101      	str	r1, [sp, #4]
 80008a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80008a6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80008aa:	641a      	str	r2, [r3, #64]	; 0x40
 80008ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80008ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80008b2:	9301      	str	r3, [sp, #4]
 80008b4:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80008b6:	b002      	add	sp, #8
 80008b8:	4770      	bx	lr
 80008ba:	bf00      	nop
 80008bc:	40023800 	andmi	r3, r2, r0, lsl #16

080008c0 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80008c0:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80008c2:	f102 030c 	add.w	r3, r2, #12
 80008c6:	e853 3f00 	ldrex	r3, [r3]
 80008ca:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80008ce:	320c      	adds	r2, #12
 80008d0:	e842 3100 	strex	r1, r3, [r2]
 80008d4:	2900      	cmp	r1, #0
 80008d6:	d1f3      	bne.n	80008c0 <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80008d8:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80008da:	f102 0314 	add.w	r3, r2, #20
 80008de:	e853 3f00 	ldrex	r3, [r3]
 80008e2:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80008e6:	3214      	adds	r2, #20
 80008e8:	e842 3100 	strex	r1, r3, [r2]
 80008ec:	2900      	cmp	r1, #0
 80008ee:	d1f3      	bne.n	80008d8 <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80008f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80008f2:	2b01      	cmp	r3, #1
 80008f4:	d005      	beq.n	8000902 <UART_EndRxTransfer+0x42>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80008f6:	2320      	movs	r3, #32
 80008f8:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80008fc:	2300      	movs	r3, #0
 80008fe:	6303      	str	r3, [r0, #48]	; 0x30
}
 8000900:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000902:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000904:	f102 030c 	add.w	r3, r2, #12
 8000908:	e853 3f00 	ldrex	r3, [r3]
 800090c:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000910:	320c      	adds	r2, #12
 8000912:	e842 3100 	strex	r1, r3, [r2]
 8000916:	2900      	cmp	r1, #0
 8000918:	d1f3      	bne.n	8000902 <UART_EndRxTransfer+0x42>
 800091a:	e7ec      	b.n	80008f6 <UART_EndRxTransfer+0x36>

0800091c <UART_Transmit_IT>:
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800091c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000920:	b2db      	uxtb	r3, r3
 8000922:	2b21      	cmp	r3, #33	; 0x21
 8000924:	d001      	beq.n	800092a <UART_Transmit_IT+0xe>
    }
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8000926:	2002      	movs	r0, #2
  }
}
 8000928:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800092a:	6883      	ldr	r3, [r0, #8]
 800092c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000930:	d017      	beq.n	8000962 <UART_Transmit_IT+0x46>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8000932:	6a03      	ldr	r3, [r0, #32]
 8000934:	1c5a      	adds	r2, r3, #1
 8000936:	6202      	str	r2, [r0, #32]
 8000938:	781a      	ldrb	r2, [r3, #0]
 800093a:	6803      	ldr	r3, [r0, #0]
 800093c:	605a      	str	r2, [r3, #4]
    if (--huart->TxXferCount == 0U)
 800093e:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8000940:	b29b      	uxth	r3, r3
 8000942:	3b01      	subs	r3, #1
 8000944:	b29b      	uxth	r3, r3
 8000946:	84c3      	strh	r3, [r0, #38]	; 0x26
 8000948:	b94b      	cbnz	r3, 800095e <UART_Transmit_IT+0x42>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800094a:	6802      	ldr	r2, [r0, #0]
 800094c:	68d3      	ldr	r3, [r2, #12]
 800094e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000952:	60d3      	str	r3, [r2, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8000954:	6802      	ldr	r2, [r0, #0]
 8000956:	68d3      	ldr	r3, [r2, #12]
 8000958:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800095c:	60d3      	str	r3, [r2, #12]
    return HAL_OK;
 800095e:	2000      	movs	r0, #0
 8000960:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000962:	6903      	ldr	r3, [r0, #16]
 8000964:	2b00      	cmp	r3, #0
 8000966:	d1e4      	bne.n	8000932 <UART_Transmit_IT+0x16>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8000968:	6a03      	ldr	r3, [r0, #32]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800096a:	881b      	ldrh	r3, [r3, #0]
 800096c:	6802      	ldr	r2, [r0, #0]
 800096e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000972:	6053      	str	r3, [r2, #4]
      huart->pTxBuffPtr += 2U;
 8000974:	6a03      	ldr	r3, [r0, #32]
 8000976:	3302      	adds	r3, #2
 8000978:	6203      	str	r3, [r0, #32]
 800097a:	e7e0      	b.n	800093e <UART_Transmit_IT+0x22>

0800097c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800097c:	b538      	push	{r3, r4, r5, lr}
 800097e:	4604      	mov	r4, r0
  uint32_t tmpreg;
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000980:	6842      	ldr	r2, [r0, #4]
 8000982:	4b57      	ldr	r3, [pc, #348]	; (8000ae0 <UART_SetConfig+0x164>)
 8000984:	429a      	cmp	r2, r3
 8000986:	d83f      	bhi.n	8000a08 <UART_SetConfig+0x8c>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000988:	68e3      	ldr	r3, [r4, #12]
 800098a:	b113      	cbz	r3, 8000992 <UART_SetConfig+0x16>
 800098c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000990:	d140      	bne.n	8000a14 <UART_SetConfig+0x98>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000992:	6923      	ldr	r3, [r4, #16]
 8000994:	b12b      	cbz	r3, 80009a2 <UART_SetConfig+0x26>
 8000996:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800099a:	d002      	beq.n	80009a2 <UART_SetConfig+0x26>
 800099c:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80009a0:	d13e      	bne.n	8000a20 <UART_SetConfig+0xa4>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 80009a2:	6963      	ldr	r3, [r4, #20]
 80009a4:	f64f 72f3 	movw	r2, #65523	; 0xfff3
 80009a8:	4213      	tst	r3, r2
 80009aa:	d100      	bne.n	80009ae <UART_SetConfig+0x32>
 80009ac:	b923      	cbnz	r3, 80009b8 <UART_SetConfig+0x3c>
 80009ae:	f640 6178 	movw	r1, #3704	; 0xe78
 80009b2:	484c      	ldr	r0, [pc, #304]	; (8000ae4 <UART_SetConfig+0x168>)
 80009b4:	f7ff fea6 	bl	8000704 <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80009b8:	6822      	ldr	r2, [r4, #0]
 80009ba:	6913      	ldr	r3, [r2, #16]
 80009bc:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80009c0:	68e1      	ldr	r1, [r4, #12]
 80009c2:	430b      	orrs	r3, r1
 80009c4:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80009c6:	68a3      	ldr	r3, [r4, #8]
 80009c8:	6922      	ldr	r2, [r4, #16]
 80009ca:	4313      	orrs	r3, r2
 80009cc:	6962      	ldr	r2, [r4, #20]
 80009ce:	4313      	orrs	r3, r2
 80009d0:	69e2      	ldr	r2, [r4, #28]
 80009d2:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1,
 80009d4:	6821      	ldr	r1, [r4, #0]
 80009d6:	68cb      	ldr	r3, [r1, #12]
 80009d8:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 80009dc:	f023 030c 	bic.w	r3, r3, #12
 80009e0:	4313      	orrs	r3, r2
 80009e2:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80009e4:	6822      	ldr	r2, [r4, #0]
 80009e6:	6953      	ldr	r3, [r2, #20]
 80009e8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80009ec:	69a1      	ldr	r1, [r4, #24]
 80009ee:	430b      	orrs	r3, r1
 80009f0:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80009f2:	6823      	ldr	r3, [r4, #0]
 80009f4:	4a3c      	ldr	r2, [pc, #240]	; (8000ae8 <UART_SetConfig+0x16c>)
 80009f6:	4293      	cmp	r3, r2
 80009f8:	d018      	beq.n	8000a2c <UART_SetConfig+0xb0>
 80009fa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80009fe:	4293      	cmp	r3, r2
 8000a00:	d014      	beq.n	8000a2c <UART_SetConfig+0xb0>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8000a02:	f000 fb8d 	bl	8001120 <HAL_RCC_GetPCLK1Freq>
 8000a06:	e013      	b.n	8000a30 <UART_SetConfig+0xb4>
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000a08:	f640 6175 	movw	r1, #3701	; 0xe75
 8000a0c:	4835      	ldr	r0, [pc, #212]	; (8000ae4 <UART_SetConfig+0x168>)
 8000a0e:	f7ff fe79 	bl	8000704 <assert_failed>
 8000a12:	e7b9      	b.n	8000988 <UART_SetConfig+0xc>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000a14:	f640 6176 	movw	r1, #3702	; 0xe76
 8000a18:	4832      	ldr	r0, [pc, #200]	; (8000ae4 <UART_SetConfig+0x168>)
 8000a1a:	f7ff fe73 	bl	8000704 <assert_failed>
 8000a1e:	e7b8      	b.n	8000992 <UART_SetConfig+0x16>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000a20:	f640 6177 	movw	r1, #3703	; 0xe77
 8000a24:	482f      	ldr	r0, [pc, #188]	; (8000ae4 <UART_SetConfig+0x168>)
 8000a26:	f7ff fe6d 	bl	8000704 <assert_failed>
 8000a2a:	e7ba      	b.n	80009a2 <UART_SetConfig+0x26>
      pclk = HAL_RCC_GetPCLK2Freq();
 8000a2c:	f000 fb88 	bl	8001140 <HAL_RCC_GetPCLK2Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8000a30:	69e3      	ldr	r3, [r4, #28]
 8000a32:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000a36:	d029      	beq.n	8000a8c <UART_SetConfig+0x110>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8000a38:	2100      	movs	r1, #0
 8000a3a:	1803      	adds	r3, r0, r0
 8000a3c:	4149      	adcs	r1, r1
 8000a3e:	181b      	adds	r3, r3, r0
 8000a40:	f141 0100 	adc.w	r1, r1, #0
 8000a44:	00c9      	lsls	r1, r1, #3
 8000a46:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
 8000a4a:	00db      	lsls	r3, r3, #3
 8000a4c:	1818      	adds	r0, r3, r0
 8000a4e:	6863      	ldr	r3, [r4, #4]
 8000a50:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8000a54:	ea4f 7393 	mov.w	r3, r3, lsr #30
 8000a58:	f141 0100 	adc.w	r1, r1, #0
 8000a5c:	f7ff fc30 	bl	80002c0 <__aeabi_uldivmod>
 8000a60:	4d22      	ldr	r5, [pc, #136]	; (8000aec <UART_SetConfig+0x170>)
 8000a62:	fba5 3200 	umull	r3, r2, r5, r0
 8000a66:	0951      	lsrs	r1, r2, #5
 8000a68:	2364      	movs	r3, #100	; 0x64
 8000a6a:	fb03 0311 	mls	r3, r3, r1, r0
 8000a6e:	011b      	lsls	r3, r3, #4
 8000a70:	3332      	adds	r3, #50	; 0x32
 8000a72:	fba5 2303 	umull	r2, r3, r5, r3
 8000a76:	095b      	lsrs	r3, r3, #5
 8000a78:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8000a7c:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000a80:	f003 030f 	and.w	r3, r3, #15
 8000a84:	6821      	ldr	r1, [r4, #0]
 8000a86:	4413      	add	r3, r2
 8000a88:	608b      	str	r3, [r1, #8]
  }
}
 8000a8a:	bd38      	pop	{r3, r4, r5, pc}
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	1802      	adds	r2, r0, r0
 8000a90:	eb43 0103 	adc.w	r1, r3, r3
 8000a94:	1812      	adds	r2, r2, r0
 8000a96:	f141 0100 	adc.w	r1, r1, #0
 8000a9a:	00c9      	lsls	r1, r1, #3
 8000a9c:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8000aa0:	00d2      	lsls	r2, r2, #3
 8000aa2:	1810      	adds	r0, r2, r0
 8000aa4:	f141 0100 	adc.w	r1, r1, #0
 8000aa8:	6862      	ldr	r2, [r4, #4]
 8000aaa:	1892      	adds	r2, r2, r2
 8000aac:	415b      	adcs	r3, r3
 8000aae:	f7ff fc07 	bl	80002c0 <__aeabi_uldivmod>
 8000ab2:	4d0e      	ldr	r5, [pc, #56]	; (8000aec <UART_SetConfig+0x170>)
 8000ab4:	fba5 3200 	umull	r3, r2, r5, r0
 8000ab8:	0951      	lsrs	r1, r2, #5
 8000aba:	2364      	movs	r3, #100	; 0x64
 8000abc:	fb03 0311 	mls	r3, r3, r1, r0
 8000ac0:	00db      	lsls	r3, r3, #3
 8000ac2:	3332      	adds	r3, #50	; 0x32
 8000ac4:	fba5 2303 	umull	r2, r3, r5, r3
 8000ac8:	095b      	lsrs	r3, r3, #5
 8000aca:	005a      	lsls	r2, r3, #1
 8000acc:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8000ad0:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000ad4:	f003 0307 	and.w	r3, r3, #7
 8000ad8:	6821      	ldr	r1, [r4, #0]
 8000ada:	4413      	add	r3, r2
 8000adc:	608b      	str	r3, [r1, #8]
 8000ade:	e7d4      	b.n	8000a8a <UART_SetConfig+0x10e>
 8000ae0:	00a037a0 	adceq	r3, r0, r0, lsr #15
 8000ae4:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
 8000ae8:	40011000 	andmi	r1, r1, r0
 8000aec:	51eb851f 	mvnpl	r8, pc, lsl r5

08000af0 <UART_WaitOnFlagUntilTimeout>:
{
 8000af0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000af4:	b083      	sub	sp, #12
 8000af6:	4605      	mov	r5, r0
 8000af8:	460e      	mov	r6, r1
 8000afa:	4617      	mov	r7, r2
 8000afc:	4699      	mov	r9, r3
 8000afe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8000b02:	682c      	ldr	r4, [r5, #0]
 8000b04:	6824      	ldr	r4, [r4, #0]
 8000b06:	ea36 0304 	bics.w	r3, r6, r4
 8000b0a:	bf0c      	ite	eq
 8000b0c:	f04f 0c01 	moveq.w	ip, #1
 8000b10:	f04f 0c00 	movne.w	ip, #0
 8000b14:	45bc      	cmp	ip, r7
 8000b16:	d128      	bne.n	8000b6a <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8000b18:	f1b8 3fff 	cmp.w	r8, #4294967295
 8000b1c:	d0f1      	beq.n	8000b02 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8000b1e:	f000 fdcd 	bl	80016bc <HAL_GetTick>
 8000b22:	eba0 0009 	sub.w	r0, r0, r9
 8000b26:	4540      	cmp	r0, r8
 8000b28:	d823      	bhi.n	8000b72 <UART_WaitOnFlagUntilTimeout+0x82>
 8000b2a:	f1b8 0f00 	cmp.w	r8, #0
 8000b2e:	d022      	beq.n	8000b76 <UART_WaitOnFlagUntilTimeout+0x86>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8000b30:	682b      	ldr	r3, [r5, #0]
 8000b32:	68da      	ldr	r2, [r3, #12]
 8000b34:	f012 0f04 	tst.w	r2, #4
 8000b38:	d0e3      	beq.n	8000b02 <UART_WaitOnFlagUntilTimeout+0x12>
 8000b3a:	2e80      	cmp	r6, #128	; 0x80
 8000b3c:	d0e1      	beq.n	8000b02 <UART_WaitOnFlagUntilTimeout+0x12>
 8000b3e:	2e40      	cmp	r6, #64	; 0x40
 8000b40:	d0df      	beq.n	8000b02 <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8000b42:	681a      	ldr	r2, [r3, #0]
 8000b44:	f012 0f08 	tst.w	r2, #8
 8000b48:	d0db      	beq.n	8000b02 <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8000b4a:	2400      	movs	r4, #0
 8000b4c:	9401      	str	r4, [sp, #4]
 8000b4e:	681a      	ldr	r2, [r3, #0]
 8000b50:	9201      	str	r2, [sp, #4]
 8000b52:	685b      	ldr	r3, [r3, #4]
 8000b54:	9301      	str	r3, [sp, #4]
 8000b56:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8000b58:	4628      	mov	r0, r5
 8000b5a:	f7ff feb1 	bl	80008c0 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8000b5e:	2308      	movs	r3, #8
 8000b60:	646b      	str	r3, [r5, #68]	; 0x44
          __HAL_UNLOCK(huart);
 8000b62:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
          return HAL_ERROR;
 8000b66:	2001      	movs	r0, #1
 8000b68:	e000      	b.n	8000b6c <UART_WaitOnFlagUntilTimeout+0x7c>
  return HAL_OK;
 8000b6a:	2000      	movs	r0, #0
}
 8000b6c:	b003      	add	sp, #12
 8000b6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
 8000b72:	2003      	movs	r0, #3
 8000b74:	e7fa      	b.n	8000b6c <UART_WaitOnFlagUntilTimeout+0x7c>
 8000b76:	2003      	movs	r0, #3
 8000b78:	e7f8      	b.n	8000b6c <UART_WaitOnFlagUntilTimeout+0x7c>
	...

08000b7c <HAL_UART_Init>:
  if (huart == NULL)
 8000b7c:	2800      	cmp	r0, #0
 8000b7e:	f000 808c 	beq.w	8000c9a <HAL_UART_Init+0x11e>
{
 8000b82:	b510      	push	{r4, lr}
 8000b84:	4604      	mov	r4, r0
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8000b86:	6983      	ldr	r3, [r0, #24]
 8000b88:	2b00      	cmp	r3, #0
 8000b8a:	d056      	beq.n	8000c3a <HAL_UART_Init+0xbe>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8000b8c:	6803      	ldr	r3, [r0, #0]
 8000b8e:	4a44      	ldr	r2, [pc, #272]	; (8000ca0 <HAL_UART_Init+0x124>)
 8000b90:	4293      	cmp	r3, r2
 8000b92:	d010      	beq.n	8000bb6 <HAL_UART_Init+0x3a>
 8000b94:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000b98:	4293      	cmp	r3, r2
 8000b9a:	d00c      	beq.n	8000bb6 <HAL_UART_Init+0x3a>
 8000b9c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	d008      	beq.n	8000bb6 <HAL_UART_Init+0x3a>
 8000ba4:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8000ba8:	4293      	cmp	r3, r2
 8000baa:	d004      	beq.n	8000bb6 <HAL_UART_Init+0x3a>
 8000bac:	f240 1173 	movw	r1, #371	; 0x173
 8000bb0:	483c      	ldr	r0, [pc, #240]	; (8000ca4 <HAL_UART_Init+0x128>)
 8000bb2:	f7ff fda7 	bl	8000704 <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000bb6:	69a3      	ldr	r3, [r4, #24]
 8000bb8:	b143      	cbz	r3, 8000bcc <HAL_UART_Init+0x50>
 8000bba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000bbe:	d005      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000bc0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000bc4:	d002      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000bc6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000bca:	d130      	bne.n	8000c2e <HAL_UART_Init+0xb2>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000bcc:	68a3      	ldr	r3, [r4, #8]
 8000bce:	b113      	cbz	r3, 8000bd6 <HAL_UART_Init+0x5a>
 8000bd0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000bd4:	d14f      	bne.n	8000c76 <HAL_UART_Init+0xfa>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000bd6:	69e3      	ldr	r3, [r4, #28]
 8000bd8:	b113      	cbz	r3, 8000be0 <HAL_UART_Init+0x64>
 8000bda:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000bde:	d150      	bne.n	8000c82 <HAL_UART_Init+0x106>
  if (huart->gState == HAL_UART_STATE_RESET)
 8000be0:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
 8000be4:	2b00      	cmp	r3, #0
 8000be6:	d052      	beq.n	8000c8e <HAL_UART_Init+0x112>
  huart->gState = HAL_UART_STATE_BUSY;
 8000be8:	2324      	movs	r3, #36	; 0x24
 8000bea:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UART_DISABLE(huart);
 8000bee:	6822      	ldr	r2, [r4, #0]
 8000bf0:	68d3      	ldr	r3, [r2, #12]
 8000bf2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000bf6:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8000bf8:	4620      	mov	r0, r4
 8000bfa:	f7ff febf 	bl	800097c <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8000bfe:	6822      	ldr	r2, [r4, #0]
 8000c00:	6913      	ldr	r3, [r2, #16]
 8000c02:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8000c06:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8000c08:	6822      	ldr	r2, [r4, #0]
 8000c0a:	6953      	ldr	r3, [r2, #20]
 8000c0c:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8000c10:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8000c12:	6822      	ldr	r2, [r4, #0]
 8000c14:	68d3      	ldr	r3, [r2, #12]
 8000c16:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000c1a:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000c1c:	2000      	movs	r0, #0
 8000c1e:	6460      	str	r0, [r4, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 8000c20:	2320      	movs	r3, #32
 8000c22:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8000c26:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000c2a:	6360      	str	r0, [r4, #52]	; 0x34
}
 8000c2c:	bd10      	pop	{r4, pc}
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000c2e:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8000c32:	481c      	ldr	r0, [pc, #112]	; (8000ca4 <HAL_UART_Init+0x128>)
 8000c34:	f7ff fd66 	bl	8000704 <assert_failed>
 8000c38:	e7c8      	b.n	8000bcc <HAL_UART_Init+0x50>
    assert_param(IS_UART_INSTANCE(huart->Instance));
 8000c3a:	6803      	ldr	r3, [r0, #0]
 8000c3c:	4a18      	ldr	r2, [pc, #96]	; (8000ca0 <HAL_UART_Init+0x124>)
 8000c3e:	4293      	cmp	r3, r2
 8000c40:	d0c4      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000c42:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000c46:	4293      	cmp	r3, r2
 8000c48:	d0c0      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000c4a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c4e:	4293      	cmp	r3, r2
 8000c50:	d0bc      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000c52:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c56:	4293      	cmp	r3, r2
 8000c58:	d0b8      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000c5a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c5e:	4293      	cmp	r3, r2
 8000c60:	d0b4      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000c62:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8000c66:	4293      	cmp	r3, r2
 8000c68:	d0b0      	beq.n	8000bcc <HAL_UART_Init+0x50>
 8000c6a:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8000c6e:	480d      	ldr	r0, [pc, #52]	; (8000ca4 <HAL_UART_Init+0x128>)
 8000c70:	f7ff fd48 	bl	8000704 <assert_failed>
 8000c74:	e7aa      	b.n	8000bcc <HAL_UART_Init+0x50>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000c76:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8000c7a:	480a      	ldr	r0, [pc, #40]	; (8000ca4 <HAL_UART_Init+0x128>)
 8000c7c:	f7ff fd42 	bl	8000704 <assert_failed>
 8000c80:	e7a9      	b.n	8000bd6 <HAL_UART_Init+0x5a>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000c82:	f240 117b 	movw	r1, #379	; 0x17b
 8000c86:	4807      	ldr	r0, [pc, #28]	; (8000ca4 <HAL_UART_Init+0x128>)
 8000c88:	f7ff fd3c 	bl	8000704 <assert_failed>
 8000c8c:	e7a8      	b.n	8000be0 <HAL_UART_Init+0x64>
    huart->Lock = HAL_UNLOCKED;
 8000c8e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_UART_MspInit(huart);
 8000c92:	4620      	mov	r0, r4
 8000c94:	f7ff fd80 	bl	8000798 <HAL_UART_MspInit>
 8000c98:	e7a6      	b.n	8000be8 <HAL_UART_Init+0x6c>
    return HAL_ERROR;
 8000c9a:	2001      	movs	r0, #1
}
 8000c9c:	4770      	bx	lr
 8000c9e:	bf00      	nop
 8000ca0:	40011000 	andmi	r1, r1, r0
 8000ca4:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}

08000ca8 <HAL_UART_Transmit>:
{
 8000ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cac:	b082      	sub	sp, #8
 8000cae:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8000cb0:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000cb4:	b2db      	uxtb	r3, r3
 8000cb6:	2b20      	cmp	r3, #32
 8000cb8:	d156      	bne.n	8000d68 <HAL_UART_Transmit+0xc0>
 8000cba:	4604      	mov	r4, r0
 8000cbc:	460d      	mov	r5, r1
 8000cbe:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8000cc0:	2900      	cmp	r1, #0
 8000cc2:	d055      	beq.n	8000d70 <HAL_UART_Transmit+0xc8>
 8000cc4:	b90a      	cbnz	r2, 8000cca <HAL_UART_Transmit+0x22>
      return  HAL_ERROR;
 8000cc6:	2001      	movs	r0, #1
 8000cc8:	e04f      	b.n	8000d6a <HAL_UART_Transmit+0xc2>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000cca:	2300      	movs	r3, #0
 8000ccc:	6443      	str	r3, [r0, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8000cce:	2321      	movs	r3, #33	; 0x21
 8000cd0:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    tickstart = HAL_GetTick();
 8000cd4:	f000 fcf2 	bl	80016bc <HAL_GetTick>
 8000cd8:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8000cda:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8000cde:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000ce2:	68a3      	ldr	r3, [r4, #8]
 8000ce4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000ce8:	d002      	beq.n	8000cf0 <HAL_UART_Transmit+0x48>
      pdata16bits = NULL;
 8000cea:	f04f 0800 	mov.w	r8, #0
 8000cee:	e014      	b.n	8000d1a <HAL_UART_Transmit+0x72>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000cf0:	6923      	ldr	r3, [r4, #16]
 8000cf2:	b32b      	cbz	r3, 8000d40 <HAL_UART_Transmit+0x98>
      pdata16bits = NULL;
 8000cf4:	f04f 0800 	mov.w	r8, #0
 8000cf8:	e00f      	b.n	8000d1a <HAL_UART_Transmit+0x72>
        huart->gState = HAL_UART_STATE_READY;
 8000cfa:	2320      	movs	r3, #32
 8000cfc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        return HAL_TIMEOUT;
 8000d00:	2003      	movs	r0, #3
 8000d02:	e032      	b.n	8000d6a <HAL_UART_Transmit+0xc2>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8000d04:	f838 3b02 	ldrh.w	r3, [r8], #2
 8000d08:	6822      	ldr	r2, [r4, #0]
 8000d0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000d0e:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8000d10:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000d12:	b292      	uxth	r2, r2
 8000d14:	3a01      	subs	r2, #1
 8000d16:	b292      	uxth	r2, r2
 8000d18:	84e2      	strh	r2, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8000d1a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000d1c:	b29b      	uxth	r3, r3
 8000d1e:	b193      	cbz	r3, 8000d46 <HAL_UART_Transmit+0x9e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8000d20:	9600      	str	r6, [sp, #0]
 8000d22:	463b      	mov	r3, r7
 8000d24:	2200      	movs	r2, #0
 8000d26:	2180      	movs	r1, #128	; 0x80
 8000d28:	4620      	mov	r0, r4
 8000d2a:	f7ff fee1 	bl	8000af0 <UART_WaitOnFlagUntilTimeout>
 8000d2e:	2800      	cmp	r0, #0
 8000d30:	d1e3      	bne.n	8000cfa <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 8000d32:	2d00      	cmp	r5, #0
 8000d34:	d0e6      	beq.n	8000d04 <HAL_UART_Transmit+0x5c>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8000d36:	f815 2b01 	ldrb.w	r2, [r5], #1
 8000d3a:	6823      	ldr	r3, [r4, #0]
 8000d3c:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8000d3e:	e7e7      	b.n	8000d10 <HAL_UART_Transmit+0x68>
      pdata16bits = (const uint16_t *) pData;
 8000d40:	46a8      	mov	r8, r5
      pdata8bits  = NULL;
 8000d42:	2500      	movs	r5, #0
 8000d44:	e7e9      	b.n	8000d1a <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8000d46:	9600      	str	r6, [sp, #0]
 8000d48:	463b      	mov	r3, r7
 8000d4a:	2200      	movs	r2, #0
 8000d4c:	2140      	movs	r1, #64	; 0x40
 8000d4e:	4620      	mov	r0, r4
 8000d50:	f7ff fece 	bl	8000af0 <UART_WaitOnFlagUntilTimeout>
 8000d54:	b918      	cbnz	r0, 8000d5e <HAL_UART_Transmit+0xb6>
    huart->gState = HAL_UART_STATE_READY;
 8000d56:	2320      	movs	r3, #32
 8000d58:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    return HAL_OK;
 8000d5c:	e005      	b.n	8000d6a <HAL_UART_Transmit+0xc2>
      huart->gState = HAL_UART_STATE_READY;
 8000d5e:	2320      	movs	r3, #32
 8000d60:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      return HAL_TIMEOUT;
 8000d64:	2003      	movs	r0, #3
 8000d66:	e000      	b.n	8000d6a <HAL_UART_Transmit+0xc2>
    return HAL_BUSY;
 8000d68:	2002      	movs	r0, #2
}
 8000d6a:	b002      	add	sp, #8
 8000d6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 8000d70:	2001      	movs	r0, #1
 8000d72:	e7fa      	b.n	8000d6a <HAL_UART_Transmit+0xc2>

08000d74 <HAL_UART_TxCpltCallback>:
}
 8000d74:	4770      	bx	lr

08000d76 <UART_EndTransmit_IT>:
{
 8000d76:	b508      	push	{r3, lr}
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8000d78:	6801      	ldr	r1, [r0, #0]
 8000d7a:	68ca      	ldr	r2, [r1, #12]
 8000d7c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000d80:	60ca      	str	r2, [r1, #12]
  huart->gState = HAL_UART_STATE_READY;
 8000d82:	2220      	movs	r2, #32
 8000d84:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
  HAL_UART_TxCpltCallback(huart);
 8000d88:	f7ff fff4 	bl	8000d74 <HAL_UART_TxCpltCallback>
}
 8000d8c:	2000      	movs	r0, #0
 8000d8e:	bd08      	pop	{r3, pc}

08000d90 <HAL_UART_RxCpltCallback>:
}
 8000d90:	4770      	bx	lr

08000d92 <HAL_UART_ErrorCallback>:
}
 8000d92:	4770      	bx	lr

08000d94 <UART_DMAAbortOnError>:
{
 8000d94:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8000d96:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8000d98:	2300      	movs	r3, #0
 8000d9a:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8000d9c:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8000d9e:	f7ff fff8 	bl	8000d92 <HAL_UART_ErrorCallback>
}
 8000da2:	bd08      	pop	{r3, pc}

08000da4 <HAL_UARTEx_RxEventCallback>:
}
 8000da4:	4770      	bx	lr

08000da6 <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8000da6:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 8000daa:	b2db      	uxtb	r3, r3
 8000dac:	2b22      	cmp	r3, #34	; 0x22
 8000dae:	d169      	bne.n	8000e84 <UART_Receive_IT+0xde>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000db0:	6883      	ldr	r3, [r0, #8]
 8000db2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000db6:	d04f      	beq.n	8000e58 <UART_Receive_IT+0xb2>
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8000db8:	6a82      	ldr	r2, [r0, #40]	; 0x28
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8000dba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000dbe:	d004      	beq.n	8000dca <UART_Receive_IT+0x24>
 8000dc0:	2b00      	cmp	r3, #0
 8000dc2:	d156      	bne.n	8000e72 <UART_Receive_IT+0xcc>
 8000dc4:	6903      	ldr	r3, [r0, #16]
 8000dc6:	2b00      	cmp	r3, #0
 8000dc8:	d153      	bne.n	8000e72 <UART_Receive_IT+0xcc>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8000dca:	6803      	ldr	r3, [r0, #0]
 8000dcc:	685b      	ldr	r3, [r3, #4]
 8000dce:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr += 1U;
 8000dd0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000dd2:	3301      	adds	r3, #1
 8000dd4:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8000dd6:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8000dd8:	b29b      	uxth	r3, r3
 8000dda:	3b01      	subs	r3, #1
 8000ddc:	b29b      	uxth	r3, r3
 8000dde:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	d151      	bne.n	8000e88 <UART_Receive_IT+0xe2>
{
 8000de4:	b500      	push	{lr}
 8000de6:	b083      	sub	sp, #12
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8000de8:	6802      	ldr	r2, [r0, #0]
 8000dea:	68d3      	ldr	r3, [r2, #12]
 8000dec:	f023 0320 	bic.w	r3, r3, #32
 8000df0:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8000df2:	6802      	ldr	r2, [r0, #0]
 8000df4:	68d3      	ldr	r3, [r2, #12]
 8000df6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000dfa:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8000dfc:	6802      	ldr	r2, [r0, #0]
 8000dfe:	6953      	ldr	r3, [r2, #20]
 8000e00:	f023 0301 	bic.w	r3, r3, #1
 8000e04:	6153      	str	r3, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8000e06:	2320      	movs	r3, #32
 8000e08:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	6343      	str	r3, [r0, #52]	; 0x34
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000e10:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000e12:	2b01      	cmp	r3, #1
 8000e14:	d133      	bne.n	8000e7e <UART_Receive_IT+0xd8>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000e16:	2300      	movs	r3, #0
 8000e18:	6303      	str	r3, [r0, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000e1a:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000e1c:	f102 030c 	add.w	r3, r2, #12
 8000e20:	e853 3f00 	ldrex	r3, [r3]
 8000e24:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000e28:	320c      	adds	r2, #12
 8000e2a:	e842 3100 	strex	r1, r3, [r2]
 8000e2e:	2900      	cmp	r1, #0
 8000e30:	d1f3      	bne.n	8000e1a <UART_Receive_IT+0x74>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8000e32:	6803      	ldr	r3, [r0, #0]
 8000e34:	681a      	ldr	r2, [r3, #0]
 8000e36:	f012 0f10 	tst.w	r2, #16
 8000e3a:	d006      	beq.n	8000e4a <UART_Receive_IT+0xa4>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000e3c:	2200      	movs	r2, #0
 8000e3e:	9201      	str	r2, [sp, #4]
 8000e40:	681a      	ldr	r2, [r3, #0]
 8000e42:	9201      	str	r2, [sp, #4]
 8000e44:	685b      	ldr	r3, [r3, #4]
 8000e46:	9301      	str	r3, [sp, #4]
 8000e48:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8000e4a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8000e4c:	f7ff ffaa 	bl	8000da4 <HAL_UARTEx_RxEventCallback>
      return HAL_OK;
 8000e50:	2000      	movs	r0, #0
}
 8000e52:	b003      	add	sp, #12
 8000e54:	f85d fb04 	ldr.w	pc, [sp], #4
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000e58:	6902      	ldr	r2, [r0, #16]
 8000e5a:	2a00      	cmp	r2, #0
 8000e5c:	d1ac      	bne.n	8000db8 <UART_Receive_IT+0x12>
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8000e5e:	6a82      	ldr	r2, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8000e60:	6803      	ldr	r3, [r0, #0]
 8000e62:	685b      	ldr	r3, [r3, #4]
 8000e64:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000e68:	8013      	strh	r3, [r2, #0]
      huart->pRxBuffPtr += 2U;
 8000e6a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e6c:	3302      	adds	r3, #2
 8000e6e:	6283      	str	r3, [r0, #40]	; 0x28
 8000e70:	e7b1      	b.n	8000dd6 <UART_Receive_IT+0x30>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8000e72:	6803      	ldr	r3, [r0, #0]
 8000e74:	685b      	ldr	r3, [r3, #4]
 8000e76:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000e7a:	7013      	strb	r3, [r2, #0]
 8000e7c:	e7a8      	b.n	8000dd0 <UART_Receive_IT+0x2a>
        HAL_UART_RxCpltCallback(huart);
 8000e7e:	f7ff ff87 	bl	8000d90 <HAL_UART_RxCpltCallback>
 8000e82:	e7e5      	b.n	8000e50 <UART_Receive_IT+0xaa>
    return HAL_BUSY;
 8000e84:	2002      	movs	r0, #2
 8000e86:	4770      	bx	lr
    return HAL_OK;
 8000e88:	2000      	movs	r0, #0
}
 8000e8a:	4770      	bx	lr

08000e8c <HAL_UART_IRQHandler>:
{
 8000e8c:	b530      	push	{r4, r5, lr}
 8000e8e:	b083      	sub	sp, #12
 8000e90:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8000e92:	6802      	ldr	r2, [r0, #0]
 8000e94:	6813      	ldr	r3, [r2, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8000e96:	68d0      	ldr	r0, [r2, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8000e98:	6951      	ldr	r1, [r2, #20]
  if (errorflags == RESET)
 8000e9a:	f013 050f 	ands.w	r5, r3, #15
 8000e9e:	d105      	bne.n	8000eac <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000ea0:	f013 0f20 	tst.w	r3, #32
 8000ea4:	d002      	beq.n	8000eac <HAL_UART_IRQHandler+0x20>
 8000ea6:	f010 0f20 	tst.w	r0, #32
 8000eaa:	d119      	bne.n	8000ee0 <HAL_UART_IRQHandler+0x54>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8000eac:	b12d      	cbz	r5, 8000eba <HAL_UART_IRQHandler+0x2e>
 8000eae:	f011 0101 	ands.w	r1, r1, #1
 8000eb2:	d119      	bne.n	8000ee8 <HAL_UART_IRQHandler+0x5c>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8000eb4:	f410 7f90 	tst.w	r0, #288	; 0x120
 8000eb8:	d116      	bne.n	8000ee8 <HAL_UART_IRQHandler+0x5c>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000eba:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000ebc:	2901      	cmp	r1, #1
 8000ebe:	d07d      	beq.n	8000fbc <HAL_UART_IRQHandler+0x130>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8000ec0:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000ec4:	d003      	beq.n	8000ece <HAL_UART_IRQHandler+0x42>
 8000ec6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000eca:	f040 8119 	bne.w	8001100 <HAL_UART_IRQHandler+0x274>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8000ece:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000ed2:	d003      	beq.n	8000edc <HAL_UART_IRQHandler+0x50>
 8000ed4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000ed8:	f040 8116 	bne.w	8001108 <HAL_UART_IRQHandler+0x27c>
}
 8000edc:	b003      	add	sp, #12
 8000ede:	bd30      	pop	{r4, r5, pc}
      UART_Receive_IT(huart);
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f7ff ff60 	bl	8000da6 <UART_Receive_IT>
      return;
 8000ee6:	e7f9      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8000ee8:	f013 0f01 	tst.w	r3, #1
 8000eec:	d006      	beq.n	8000efc <HAL_UART_IRQHandler+0x70>
 8000eee:	f410 7f80 	tst.w	r0, #256	; 0x100
 8000ef2:	d003      	beq.n	8000efc <HAL_UART_IRQHandler+0x70>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8000ef4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ef6:	f042 0201 	orr.w	r2, r2, #1
 8000efa:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000efc:	f013 0f04 	tst.w	r3, #4
 8000f00:	d004      	beq.n	8000f0c <HAL_UART_IRQHandler+0x80>
 8000f02:	b119      	cbz	r1, 8000f0c <HAL_UART_IRQHandler+0x80>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8000f04:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f06:	f042 0202 	orr.w	r2, r2, #2
 8000f0a:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000f0c:	f013 0f02 	tst.w	r3, #2
 8000f10:	d004      	beq.n	8000f1c <HAL_UART_IRQHandler+0x90>
 8000f12:	b119      	cbz	r1, 8000f1c <HAL_UART_IRQHandler+0x90>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8000f14:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f16:	f042 0204 	orr.w	r2, r2, #4
 8000f1a:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8000f1c:	f013 0f08 	tst.w	r3, #8
 8000f20:	d007      	beq.n	8000f32 <HAL_UART_IRQHandler+0xa6>
 8000f22:	f010 0f20 	tst.w	r0, #32
 8000f26:	d100      	bne.n	8000f2a <HAL_UART_IRQHandler+0x9e>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8000f28:	b119      	cbz	r1, 8000f32 <HAL_UART_IRQHandler+0xa6>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8000f2a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f2c:	f042 0208 	orr.w	r2, r2, #8
 8000f30:	6462      	str	r2, [r4, #68]	; 0x44
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8000f32:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f34:	2a00      	cmp	r2, #0
 8000f36:	d0d1      	beq.n	8000edc <HAL_UART_IRQHandler+0x50>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000f38:	f013 0f20 	tst.w	r3, #32
 8000f3c:	d002      	beq.n	8000f44 <HAL_UART_IRQHandler+0xb8>
 8000f3e:	f010 0f20 	tst.w	r0, #32
 8000f42:	d129      	bne.n	8000f98 <HAL_UART_IRQHandler+0x10c>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8000f44:	6823      	ldr	r3, [r4, #0]
 8000f46:	695b      	ldr	r3, [r3, #20]
 8000f48:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8000f4c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f4e:	f012 0f08 	tst.w	r2, #8
 8000f52:	d100      	bne.n	8000f56 <HAL_UART_IRQHandler+0xca>
 8000f54:	b363      	cbz	r3, 8000fb0 <HAL_UART_IRQHandler+0x124>
        UART_EndRxTransfer(huart);
 8000f56:	4620      	mov	r0, r4
 8000f58:	f7ff fcb2 	bl	80008c0 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000f5c:	6823      	ldr	r3, [r4, #0]
 8000f5e:	695b      	ldr	r3, [r3, #20]
 8000f60:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f64:	d020      	beq.n	8000fa8 <HAL_UART_IRQHandler+0x11c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8000f66:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000f68:	f102 0314 	add.w	r3, r2, #20
 8000f6c:	e853 3f00 	ldrex	r3, [r3]
 8000f70:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000f74:	3214      	adds	r2, #20
 8000f76:	e842 3100 	strex	r1, r3, [r2]
 8000f7a:	2900      	cmp	r1, #0
 8000f7c:	d1f3      	bne.n	8000f66 <HAL_UART_IRQHandler+0xda>
          if (huart->hdmarx != NULL)
 8000f7e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8000f80:	b173      	cbz	r3, 8000fa0 <HAL_UART_IRQHandler+0x114>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8000f82:	4a63      	ldr	r2, [pc, #396]	; (8001110 <HAL_UART_IRQHandler+0x284>)
 8000f84:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8000f86:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f88:	f000 faa8 	bl	80014dc <HAL_DMA_Abort_IT>
 8000f8c:	2800      	cmp	r0, #0
 8000f8e:	d0a5      	beq.n	8000edc <HAL_UART_IRQHandler+0x50>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8000f90:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f92:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000f94:	4798      	blx	r3
 8000f96:	e7a1      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
        UART_Receive_IT(huart);
 8000f98:	4620      	mov	r0, r4
 8000f9a:	f7ff ff04 	bl	8000da6 <UART_Receive_IT>
 8000f9e:	e7d1      	b.n	8000f44 <HAL_UART_IRQHandler+0xb8>
            HAL_UART_ErrorCallback(huart);
 8000fa0:	4620      	mov	r0, r4
 8000fa2:	f7ff fef6 	bl	8000d92 <HAL_UART_ErrorCallback>
 8000fa6:	e799      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
          HAL_UART_ErrorCallback(huart);
 8000fa8:	4620      	mov	r0, r4
 8000faa:	f7ff fef2 	bl	8000d92 <HAL_UART_ErrorCallback>
 8000fae:	e795      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
        HAL_UART_ErrorCallback(huart);
 8000fb0:	4620      	mov	r0, r4
 8000fb2:	f7ff feee 	bl	8000d92 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	6463      	str	r3, [r4, #68]	; 0x44
    return;
 8000fba:	e78f      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8000fbc:	f013 0f10 	tst.w	r3, #16
 8000fc0:	f43f af7e 	beq.w	8000ec0 <HAL_UART_IRQHandler+0x34>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8000fc4:	f010 0f10 	tst.w	r0, #16
 8000fc8:	f43f af7a 	beq.w	8000ec0 <HAL_UART_IRQHandler+0x34>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000fcc:	2300      	movs	r3, #0
 8000fce:	9301      	str	r3, [sp, #4]
 8000fd0:	6813      	ldr	r3, [r2, #0]
 8000fd2:	9301      	str	r3, [sp, #4]
 8000fd4:	6853      	ldr	r3, [r2, #4]
 8000fd6:	9301      	str	r3, [sp, #4]
 8000fd8:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000fda:	6953      	ldr	r3, [r2, #20]
 8000fdc:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000fe0:	d052      	beq.n	8001088 <HAL_UART_IRQHandler+0x1fc>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8000fe2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8000fe4:	6813      	ldr	r3, [r2, #0]
 8000fe6:	685b      	ldr	r3, [r3, #4]
 8000fe8:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8000fea:	2b00      	cmp	r3, #0
 8000fec:	f43f af76 	beq.w	8000edc <HAL_UART_IRQHandler+0x50>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8000ff0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8000ff2:	4299      	cmp	r1, r3
 8000ff4:	f67f af72 	bls.w	8000edc <HAL_UART_IRQHandler+0x50>
        huart->RxXferCount = nb_remaining_rx_data;
 8000ff8:	85e3      	strh	r3, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8000ffa:	69d3      	ldr	r3, [r2, #28]
 8000ffc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001000:	d037      	beq.n	8001072 <HAL_UART_IRQHandler+0x1e6>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8001002:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001004:	f102 030c 	add.w	r3, r2, #12
 8001008:	e853 3f00 	ldrex	r3, [r3]
 800100c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001010:	320c      	adds	r2, #12
 8001012:	e842 3100 	strex	r1, r3, [r2]
 8001016:	2900      	cmp	r1, #0
 8001018:	d1f3      	bne.n	8001002 <HAL_UART_IRQHandler+0x176>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800101a:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800101c:	f102 0314 	add.w	r3, r2, #20
 8001020:	e853 3f00 	ldrex	r3, [r3]
 8001024:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001028:	3214      	adds	r2, #20
 800102a:	e842 3100 	strex	r1, r3, [r2]
 800102e:	2900      	cmp	r1, #0
 8001030:	d1f3      	bne.n	800101a <HAL_UART_IRQHandler+0x18e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8001032:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001034:	f102 0314 	add.w	r3, r2, #20
 8001038:	e853 3f00 	ldrex	r3, [r3]
 800103c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001040:	3214      	adds	r2, #20
 8001042:	e842 3100 	strex	r1, r3, [r2]
 8001046:	2900      	cmp	r1, #0
 8001048:	d1f3      	bne.n	8001032 <HAL_UART_IRQHandler+0x1a6>
          huart->RxState = HAL_UART_STATE_READY;
 800104a:	2320      	movs	r3, #32
 800104c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001050:	2300      	movs	r3, #0
 8001052:	6323      	str	r3, [r4, #48]	; 0x30
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001054:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001056:	f102 030c 	add.w	r3, r2, #12
 800105a:	e853 3f00 	ldrex	r3, [r3]
 800105e:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001062:	320c      	adds	r2, #12
 8001064:	e842 3100 	strex	r1, r3, [r2]
 8001068:	2900      	cmp	r1, #0
 800106a:	d1f3      	bne.n	8001054 <HAL_UART_IRQHandler+0x1c8>
          (void)HAL_DMA_Abort(huart->hdmarx);
 800106c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800106e:	f000 f9eb 	bl	8001448 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8001072:	2302      	movs	r3, #2
 8001074:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8001076:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001078:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800107a:	b29b      	uxth	r3, r3
 800107c:	1ac9      	subs	r1, r1, r3
 800107e:	b289      	uxth	r1, r1
 8001080:	4620      	mov	r0, r4
 8001082:	f7ff fe8f 	bl	8000da4 <HAL_UARTEx_RxEventCallback>
      return;
 8001086:	e729      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8001088:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800108a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800108c:	b29b      	uxth	r3, r3
 800108e:	1ac9      	subs	r1, r1, r3
 8001090:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 8001092:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001094:	b29b      	uxth	r3, r3
 8001096:	2b00      	cmp	r3, #0
 8001098:	f43f af20 	beq.w	8000edc <HAL_UART_IRQHandler+0x50>
          && (nb_rx_data > 0U))
 800109c:	2900      	cmp	r1, #0
 800109e:	f43f af1d 	beq.w	8000edc <HAL_UART_IRQHandler+0x50>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80010a2:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010a4:	f102 030c 	add.w	r3, r2, #12
 80010a8:	e853 3f00 	ldrex	r3, [r3]
 80010ac:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010b0:	320c      	adds	r2, #12
 80010b2:	e842 3000 	strex	r0, r3, [r2]
 80010b6:	2800      	cmp	r0, #0
 80010b8:	d1f3      	bne.n	80010a2 <HAL_UART_IRQHandler+0x216>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80010ba:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010bc:	f102 0314 	add.w	r3, r2, #20
 80010c0:	e853 3f00 	ldrex	r3, [r3]
 80010c4:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010c8:	3214      	adds	r2, #20
 80010ca:	e842 3000 	strex	r0, r3, [r2]
 80010ce:	2800      	cmp	r0, #0
 80010d0:	d1f3      	bne.n	80010ba <HAL_UART_IRQHandler+0x22e>
        huart->RxState = HAL_UART_STATE_READY;
 80010d2:	2320      	movs	r3, #32
 80010d4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80010d8:	2300      	movs	r3, #0
 80010da:	6323      	str	r3, [r4, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80010dc:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010de:	f102 030c 	add.w	r3, r2, #12
 80010e2:	e853 3f00 	ldrex	r3, [r3]
 80010e6:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010ea:	320c      	adds	r2, #12
 80010ec:	e842 3000 	strex	r0, r3, [r2]
 80010f0:	2800      	cmp	r0, #0
 80010f2:	d1f3      	bne.n	80010dc <HAL_UART_IRQHandler+0x250>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80010f4:	2302      	movs	r3, #2
 80010f6:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80010f8:	4620      	mov	r0, r4
 80010fa:	f7ff fe53 	bl	8000da4 <HAL_UARTEx_RxEventCallback>
      return;
 80010fe:	e6ed      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
    UART_Transmit_IT(huart);
 8001100:	4620      	mov	r0, r4
 8001102:	f7ff fc0b 	bl	800091c <UART_Transmit_IT>
    return;
 8001106:	e6e9      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
    UART_EndTransmit_IT(huart);
 8001108:	4620      	mov	r0, r4
 800110a:	f7ff fe34 	bl	8000d76 <UART_EndTransmit_IT>
    return;
 800110e:	e6e5      	b.n	8000edc <HAL_UART_IRQHandler+0x50>
 8001110:	08000d95 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, fp}

08001114 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8001114:	4b01      	ldr	r3, [pc, #4]	; (800111c <HAL_RCC_GetHCLKFreq+0x8>)
 8001116:	6818      	ldr	r0, [r3, #0]
 8001118:	4770      	bx	lr
 800111a:	bf00      	nop
 800111c:	20000008 	andcs	r0, r0, r8

08001120 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8001120:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8001122:	f7ff fff7 	bl	8001114 <HAL_RCC_GetHCLKFreq>
 8001126:	4b04      	ldr	r3, [pc, #16]	; (8001138 <HAL_RCC_GetPCLK1Freq+0x18>)
 8001128:	689b      	ldr	r3, [r3, #8]
 800112a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800112e:	4a03      	ldr	r2, [pc, #12]	; (800113c <HAL_RCC_GetPCLK1Freq+0x1c>)
 8001130:	5cd3      	ldrb	r3, [r2, r3]
}
 8001132:	40d8      	lsrs	r0, r3
 8001134:	bd08      	pop	{r3, pc}
 8001136:	bf00      	nop
 8001138:	40023800 	andmi	r3, r2, r0, lsl #16
 800113c:	08002cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp, sp}

08001140 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8001140:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8001142:	f7ff ffe7 	bl	8001114 <HAL_RCC_GetHCLKFreq>
 8001146:	4b04      	ldr	r3, [pc, #16]	; (8001158 <HAL_RCC_GetPCLK2Freq+0x18>)
 8001148:	689b      	ldr	r3, [r3, #8]
 800114a:	f3c3 3342 	ubfx	r3, r3, #13, #3
 800114e:	4a03      	ldr	r2, [pc, #12]	; (800115c <HAL_RCC_GetPCLK2Freq+0x1c>)
 8001150:	5cd3      	ldrb	r3, [r2, r3]
}
 8001152:	40d8      	lsrs	r0, r3
 8001154:	bd08      	pop	{r3, pc}
 8001156:	bf00      	nop
 8001158:	40023800 	andmi	r3, r2, r0, lsl #16
 800115c:	08002cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp, sp}

08001160 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001164:	b082      	sub	sp, #8
 8001166:	4607      	mov	r7, r0
 8001168:	460e      	mov	r6, r1
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 800116a:	4b54      	ldr	r3, [pc, #336]	; (80012bc <HAL_GPIO_Init+0x15c>)
 800116c:	4298      	cmp	r0, r3
 800116e:	d023      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 8001170:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001174:	4298      	cmp	r0, r3
 8001176:	d01f      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 8001178:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800117c:	4298      	cmp	r0, r3
 800117e:	d01b      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 8001180:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001184:	4298      	cmp	r0, r3
 8001186:	d017      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 8001188:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800118c:	4298      	cmp	r0, r3
 800118e:	d013      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 8001190:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001194:	4298      	cmp	r0, r3
 8001196:	d00f      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 8001198:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800119c:	4298      	cmp	r0, r3
 800119e:	d00b      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 80011a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011a4:	4298      	cmp	r0, r3
 80011a6:	d007      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 80011a8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011ac:	4298      	cmp	r0, r3
 80011ae:	d003      	beq.n	80011b8 <HAL_GPIO_Init+0x58>
 80011b0:	21ac      	movs	r1, #172	; 0xac
 80011b2:	4843      	ldr	r0, [pc, #268]	; (80012c0 <HAL_GPIO_Init+0x160>)
 80011b4:	f7ff faa6 	bl	8000704 <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 80011b8:	6833      	ldr	r3, [r6, #0]
 80011ba:	b29a      	uxth	r2, r3
 80011bc:	b112      	cbz	r2, 80011c4 <HAL_GPIO_Init+0x64>
 80011be:	0c1b      	lsrs	r3, r3, #16
 80011c0:	041b      	lsls	r3, r3, #16
 80011c2:	b11b      	cbz	r3, 80011cc <HAL_GPIO_Init+0x6c>
 80011c4:	21ad      	movs	r1, #173	; 0xad
 80011c6:	483e      	ldr	r0, [pc, #248]	; (80012c0 <HAL_GPIO_Init+0x160>)
 80011c8:	f7ff fa9c 	bl	8000704 <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80011cc:	6873      	ldr	r3, [r6, #4]
 80011ce:	2b01      	cmp	r3, #1
 80011d0:	d919      	bls.n	8001206 <HAL_GPIO_Init+0xa6>
 80011d2:	2b11      	cmp	r3, #17
 80011d4:	d017      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011d6:	2b02      	cmp	r3, #2
 80011d8:	d015      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011da:	2b12      	cmp	r3, #18
 80011dc:	d013      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011de:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 80011e2:	d010      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011e4:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 80011e8:	d00d      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011ea:	f5b3 1f44 	cmp.w	r3, #3211264	; 0x310000
 80011ee:	d00a      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011f0:	f5b3 1f90 	cmp.w	r3, #1179648	; 0x120000
 80011f4:	d007      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011f6:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 80011fa:	d004      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 80011fc:	f5b3 1f48 	cmp.w	r3, #3276800	; 0x320000
 8001200:	d001      	beq.n	8001206 <HAL_GPIO_Init+0xa6>
 8001202:	2b03      	cmp	r3, #3
 8001204:	d101      	bne.n	800120a <HAL_GPIO_Init+0xaa>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001206:	2400      	movs	r4, #0
 8001208:	e092      	b.n	8001330 <HAL_GPIO_Init+0x1d0>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 800120a:	21ae      	movs	r1, #174	; 0xae
 800120c:	482c      	ldr	r0, [pc, #176]	; (80012c0 <HAL_GPIO_Init+0x160>)
 800120e:	f7ff fa79 	bl	8000704 <assert_failed>
 8001212:	e7f8      	b.n	8001206 <HAL_GPIO_Init+0xa6>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 8001214:	68f3      	ldr	r3, [r6, #12]
 8001216:	2b03      	cmp	r3, #3
 8001218:	d813      	bhi.n	8001242 <HAL_GPIO_Init+0xe2>
        temp = GPIOx->OSPEEDR; 
 800121a:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800121c:	0061      	lsls	r1, r4, #1
 800121e:	2303      	movs	r3, #3
 8001220:	408b      	lsls	r3, r1
 8001222:	ea22 0203 	bic.w	r2, r2, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001226:	68f3      	ldr	r3, [r6, #12]
 8001228:	408b      	lsls	r3, r1
 800122a:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 800122c:	60bb      	str	r3, [r7, #8]
        temp = GPIOx->OTYPER;
 800122e:	687a      	ldr	r2, [r7, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001230:	ea22 0205 	bic.w	r2, r2, r5
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001234:	6873      	ldr	r3, [r6, #4]
 8001236:	f3c3 1500 	ubfx	r5, r3, #4, #1
 800123a:	40a5      	lsls	r5, r4
 800123c:	4315      	orrs	r5, r2
        GPIOx->OTYPER = temp;
 800123e:	607d      	str	r5, [r7, #4]
 8001240:	e087      	b.n	8001352 <HAL_GPIO_Init+0x1f2>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 8001242:	21c0      	movs	r1, #192	; 0xc0
 8001244:	481e      	ldr	r0, [pc, #120]	; (80012c0 <HAL_GPIO_Init+0x160>)
 8001246:	f7ff fa5d 	bl	8000704 <assert_failed>
 800124a:	e7e6      	b.n	800121a <HAL_GPIO_Init+0xba>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 800124c:	21d1      	movs	r1, #209	; 0xd1
 800124e:	481c      	ldr	r0, [pc, #112]	; (80012c0 <HAL_GPIO_Init+0x160>)
 8001250:	f7ff fa58 	bl	8000704 <assert_failed>
 8001254:	e086      	b.n	8001364 <HAL_GPIO_Init+0x204>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 8001256:	6933      	ldr	r3, [r6, #16]
 8001258:	b1bb      	cbz	r3, 800128a <HAL_GPIO_Init+0x12a>
 800125a:	2b09      	cmp	r3, #9
 800125c:	d015      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 800125e:	2b01      	cmp	r3, #1
 8001260:	d013      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 8001262:	2b02      	cmp	r3, #2
 8001264:	d011      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 8001266:	2b03      	cmp	r3, #3
 8001268:	d00f      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 800126a:	2b04      	cmp	r3, #4
 800126c:	d00d      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 800126e:	2b05      	cmp	r3, #5
 8001270:	d00b      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 8001272:	2b06      	cmp	r3, #6
 8001274:	d009      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 8001276:	2b07      	cmp	r3, #7
 8001278:	d007      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 800127a:	2b08      	cmp	r3, #8
 800127c:	d005      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 800127e:	2b0a      	cmp	r3, #10
 8001280:	d003      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 8001282:	2b0c      	cmp	r3, #12
 8001284:	d001      	beq.n	800128a <HAL_GPIO_Init+0x12a>
 8001286:	2b0f      	cmp	r3, #15
 8001288:	d110      	bne.n	80012ac <HAL_GPIO_Init+0x14c>
        temp = GPIOx->AFR[position >> 3U];
 800128a:	08e2      	lsrs	r2, r4, #3
 800128c:	3208      	adds	r2, #8
 800128e:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001292:	f004 0307 	and.w	r3, r4, #7
 8001296:	0099      	lsls	r1, r3, #2
 8001298:	230f      	movs	r3, #15
 800129a:	408b      	lsls	r3, r1
 800129c:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80012a0:	6933      	ldr	r3, [r6, #16]
 80012a2:	408b      	lsls	r3, r1
 80012a4:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3U] = temp;
 80012a6:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
 80012aa:	e06b      	b.n	8001384 <HAL_GPIO_Init+0x224>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 80012ac:	21de      	movs	r1, #222	; 0xde
 80012ae:	4804      	ldr	r0, [pc, #16]	; (80012c0 <HAL_GPIO_Init+0x160>)
 80012b0:	f7ff fa28 	bl	8000704 <assert_failed>
 80012b4:	e7e9      	b.n	800128a <HAL_GPIO_Init+0x12a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80012b6:	2307      	movs	r3, #7
 80012b8:	e005      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 80012ba:	bf00      	nop
 80012bc:	40020000 	andmi	r0, r2, r0
 80012c0:	08002c44 	stmdaeq	r0, {r2, r6, sl, fp, sp}
 80012c4:	2300      	movs	r3, #0
 80012c6:	408b      	lsls	r3, r1
 80012c8:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2U] = temp;
 80012ca:	3202      	adds	r2, #2
 80012cc:	495a      	ldr	r1, [pc, #360]	; (8001438 <HAL_GPIO_Init+0x2d8>)
 80012ce:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80012d2:	4b5a      	ldr	r3, [pc, #360]	; (800143c <HAL_GPIO_Init+0x2dc>)
 80012d4:	689a      	ldr	r2, [r3, #8]
        temp &= ~((uint32_t)iocurrent);
 80012d6:	ea6f 0308 	mvn.w	r3, r8
 80012da:	ea22 0108 	bic.w	r1, r2, r8
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80012de:	6870      	ldr	r0, [r6, #4]
 80012e0:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 80012e4:	d001      	beq.n	80012ea <HAL_GPIO_Init+0x18a>
        {
          temp |= iocurrent;
 80012e6:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->RTSR = temp;
 80012ea:	4a54      	ldr	r2, [pc, #336]	; (800143c <HAL_GPIO_Init+0x2dc>)
 80012ec:	6091      	str	r1, [r2, #8]

        temp = EXTI->FTSR;
 80012ee:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80012f0:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80012f4:	6870      	ldr	r0, [r6, #4]
 80012f6:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 80012fa:	d001      	beq.n	8001300 <HAL_GPIO_Init+0x1a0>
        {
          temp |= iocurrent;
 80012fc:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->FTSR = temp;
 8001300:	4a4e      	ldr	r2, [pc, #312]	; (800143c <HAL_GPIO_Init+0x2dc>)
 8001302:	60d1      	str	r1, [r2, #12]

        temp = EXTI->EMR;
 8001304:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 8001306:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800130a:	6870      	ldr	r0, [r6, #4]
 800130c:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 8001310:	d001      	beq.n	8001316 <HAL_GPIO_Init+0x1b6>
        {
          temp |= iocurrent;
 8001312:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->EMR = temp;
 8001316:	4a49      	ldr	r2, [pc, #292]	; (800143c <HAL_GPIO_Init+0x2dc>)
 8001318:	6051      	str	r1, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800131a:	6812      	ldr	r2, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800131c:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800131e:	6871      	ldr	r1, [r6, #4]
 8001320:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 8001324:	d001      	beq.n	800132a <HAL_GPIO_Init+0x1ca>
        {
          temp |= iocurrent;
 8001326:	ea48 0302 	orr.w	r3, r8, r2
        }
        EXTI->IMR = temp;
 800132a:	4a44      	ldr	r2, [pc, #272]	; (800143c <HAL_GPIO_Init+0x2dc>)
 800132c:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800132e:	3401      	adds	r4, #1
 8001330:	2c0f      	cmp	r4, #15
 8001332:	d87e      	bhi.n	8001432 <HAL_GPIO_Init+0x2d2>
    ioposition = 0x01U << position;
 8001334:	2501      	movs	r5, #1
 8001336:	40a5      	lsls	r5, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001338:	6833      	ldr	r3, [r6, #0]
 800133a:	ea03 0805 	and.w	r8, r3, r5
    if(iocurrent == ioposition)
 800133e:	ea35 0303 	bics.w	r3, r5, r3
 8001342:	d1f4      	bne.n	800132e <HAL_GPIO_Init+0x1ce>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001344:	6873      	ldr	r3, [r6, #4]
 8001346:	f003 0303 	and.w	r3, r3, #3
 800134a:	3b01      	subs	r3, #1
 800134c:	2b01      	cmp	r3, #1
 800134e:	f67f af61 	bls.w	8001214 <HAL_GPIO_Init+0xb4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001352:	6873      	ldr	r3, [r6, #4]
 8001354:	f003 0303 	and.w	r3, r3, #3
 8001358:	2b03      	cmp	r3, #3
 800135a:	d00d      	beq.n	8001378 <HAL_GPIO_Init+0x218>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 800135c:	68b3      	ldr	r3, [r6, #8]
 800135e:	2b02      	cmp	r3, #2
 8001360:	f63f af74 	bhi.w	800124c <HAL_GPIO_Init+0xec>
        temp = GPIOx->PUPDR;
 8001364:	68fa      	ldr	r2, [r7, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001366:	0061      	lsls	r1, r4, #1
 8001368:	2303      	movs	r3, #3
 800136a:	408b      	lsls	r3, r1
 800136c:	ea22 0203 	bic.w	r2, r2, r3
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001370:	68b3      	ldr	r3, [r6, #8]
 8001372:	408b      	lsls	r3, r1
 8001374:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 8001376:	60fb      	str	r3, [r7, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001378:	6873      	ldr	r3, [r6, #4]
 800137a:	f003 0303 	and.w	r3, r3, #3
 800137e:	2b02      	cmp	r3, #2
 8001380:	f43f af69 	beq.w	8001256 <HAL_GPIO_Init+0xf6>
      temp = GPIOx->MODER;
 8001384:	683a      	ldr	r2, [r7, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001386:	0061      	lsls	r1, r4, #1
 8001388:	2303      	movs	r3, #3
 800138a:	408b      	lsls	r3, r1
 800138c:	ea22 0203 	bic.w	r2, r2, r3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001390:	6873      	ldr	r3, [r6, #4]
 8001392:	f003 0303 	and.w	r3, r3, #3
 8001396:	408b      	lsls	r3, r1
 8001398:	4313      	orrs	r3, r2
      GPIOx->MODER = temp;
 800139a:	603b      	str	r3, [r7, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800139c:	6873      	ldr	r3, [r6, #4]
 800139e:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 80013a2:	d0c4      	beq.n	800132e <HAL_GPIO_Init+0x1ce>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80013a4:	2300      	movs	r3, #0
 80013a6:	9301      	str	r3, [sp, #4]
 80013a8:	4b25      	ldr	r3, [pc, #148]	; (8001440 <HAL_GPIO_Init+0x2e0>)
 80013aa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80013ac:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80013b0:	645a      	str	r2, [r3, #68]	; 0x44
 80013b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013b4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80013b8:	9301      	str	r3, [sp, #4]
 80013ba:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80013bc:	08a2      	lsrs	r2, r4, #2
 80013be:	1c91      	adds	r1, r2, #2
 80013c0:	4b1d      	ldr	r3, [pc, #116]	; (8001438 <HAL_GPIO_Init+0x2d8>)
 80013c2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80013c6:	f004 0303 	and.w	r3, r4, #3
 80013ca:	0099      	lsls	r1, r3, #2
 80013cc:	230f      	movs	r3, #15
 80013ce:	408b      	lsls	r3, r1
 80013d0:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80013d4:	4b1b      	ldr	r3, [pc, #108]	; (8001444 <HAL_GPIO_Init+0x2e4>)
 80013d6:	429f      	cmp	r7, r3
 80013d8:	f43f af74 	beq.w	80012c4 <HAL_GPIO_Init+0x164>
 80013dc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013e0:	429f      	cmp	r7, r3
 80013e2:	d01a      	beq.n	800141a <HAL_GPIO_Init+0x2ba>
 80013e4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013e8:	429f      	cmp	r7, r3
 80013ea:	d018      	beq.n	800141e <HAL_GPIO_Init+0x2be>
 80013ec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013f0:	429f      	cmp	r7, r3
 80013f2:	d016      	beq.n	8001422 <HAL_GPIO_Init+0x2c2>
 80013f4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013f8:	429f      	cmp	r7, r3
 80013fa:	d014      	beq.n	8001426 <HAL_GPIO_Init+0x2c6>
 80013fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001400:	429f      	cmp	r7, r3
 8001402:	d012      	beq.n	800142a <HAL_GPIO_Init+0x2ca>
 8001404:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001408:	429f      	cmp	r7, r3
 800140a:	d010      	beq.n	800142e <HAL_GPIO_Init+0x2ce>
 800140c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001410:	429f      	cmp	r7, r3
 8001412:	f43f af50 	beq.w	80012b6 <HAL_GPIO_Init+0x156>
 8001416:	2308      	movs	r3, #8
 8001418:	e755      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 800141a:	2301      	movs	r3, #1
 800141c:	e753      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 800141e:	2302      	movs	r3, #2
 8001420:	e751      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 8001422:	2303      	movs	r3, #3
 8001424:	e74f      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 8001426:	2304      	movs	r3, #4
 8001428:	e74d      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 800142a:	2305      	movs	r3, #5
 800142c:	e74b      	b.n	80012c6 <HAL_GPIO_Init+0x166>
 800142e:	2306      	movs	r3, #6
 8001430:	e749      	b.n	80012c6 <HAL_GPIO_Init+0x166>
      }
    }
  }
}
 8001432:	b002      	add	sp, #8
 8001434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001438:	40013800 	andmi	r3, r1, r0, lsl #16
 800143c:	40013c00 	andmi	r3, r1, r0, lsl #24
 8001440:	40023800 	andmi	r3, r2, r0, lsl #16
 8001444:	40020000 	andmi	r0, r2, r0

08001448 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8001448:	b570      	push	{r4, r5, r6, lr}
 800144a:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800144c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 800144e:	f000 f935 	bl	80016bc <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001452:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8001456:	b2db      	uxtb	r3, r3
 8001458:	2b02      	cmp	r3, #2
 800145a:	d006      	beq.n	800146a <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800145c:	2380      	movs	r3, #128	; 0x80
 800145e:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001460:	2300      	movs	r3, #0
 8001462:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 8001466:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8001468:	bd70      	pop	{r4, r5, r6, pc}
 800146a:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800146c:	6822      	ldr	r2, [r4, #0]
 800146e:	6813      	ldr	r3, [r2, #0]
 8001470:	f023 0316 	bic.w	r3, r3, #22
 8001474:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001476:	6822      	ldr	r2, [r4, #0]
 8001478:	6953      	ldr	r3, [r2, #20]
 800147a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800147e:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001480:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001482:	b1e3      	cbz	r3, 80014be <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8001484:	6822      	ldr	r2, [r4, #0]
 8001486:	6813      	ldr	r3, [r2, #0]
 8001488:	f023 0308 	bic.w	r3, r3, #8
 800148c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 800148e:	6822      	ldr	r2, [r4, #0]
 8001490:	6813      	ldr	r3, [r2, #0]
 8001492:	f023 0301 	bic.w	r3, r3, #1
 8001496:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001498:	6823      	ldr	r3, [r4, #0]
 800149a:	681b      	ldr	r3, [r3, #0]
 800149c:	f013 0f01 	tst.w	r3, #1
 80014a0:	d011      	beq.n	80014c6 <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80014a2:	f000 f90b 	bl	80016bc <HAL_GetTick>
 80014a6:	1b43      	subs	r3, r0, r5
 80014a8:	2b05      	cmp	r3, #5
 80014aa:	d9f5      	bls.n	8001498 <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80014ac:	2320      	movs	r3, #32
 80014ae:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80014b0:	2003      	movs	r0, #3
 80014b2:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80014b6:	2300      	movs	r3, #0
 80014b8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 80014bc:	e7d4      	b.n	8001468 <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80014be:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	d1df      	bne.n	8001484 <HAL_DMA_Abort+0x3c>
 80014c4:	e7e3      	b.n	800148e <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80014c6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80014c8:	233f      	movs	r3, #63	; 0x3f
 80014ca:	4093      	lsls	r3, r2
 80014cc:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 80014ce:	2301      	movs	r3, #1
 80014d0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 80014d4:	2000      	movs	r0, #0
 80014d6:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 80014da:	e7c5      	b.n	8001468 <HAL_DMA_Abort+0x20>

080014dc <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80014dc:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80014e0:	b2db      	uxtb	r3, r3
 80014e2:	2b02      	cmp	r3, #2
 80014e4:	d003      	beq.n	80014ee <HAL_DMA_Abort_IT+0x12>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80014e6:	2380      	movs	r3, #128	; 0x80
 80014e8:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80014ea:	2001      	movs	r0, #1
 80014ec:	4770      	bx	lr
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80014ee:	2305      	movs	r3, #5
 80014f0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80014f4:	6802      	ldr	r2, [r0, #0]
 80014f6:	6813      	ldr	r3, [r2, #0]
 80014f8:	f023 0301 	bic.w	r3, r3, #1
 80014fc:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 80014fe:	2000      	movs	r0, #0
}
 8001500:	4770      	bx	lr
	...

08001504 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001504:	b510      	push	{r4, lr}
 8001506:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 8001508:	1ec3      	subs	r3, r0, #3
 800150a:	2b04      	cmp	r3, #4
 800150c:	d80f      	bhi.n	800152e <HAL_NVIC_SetPriorityGrouping+0x2a>
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800150e:	4a0a      	ldr	r2, [pc, #40]	; (8001538 <HAL_NVIC_SetPriorityGrouping+0x34>)
 8001510:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001512:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001516:	041b      	lsls	r3, r3, #16
 8001518:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800151a:	0224      	lsls	r4, r4, #8
 800151c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001520:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 8001522:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001526:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800152a:	60d3      	str	r3, [r2, #12]
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800152c:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 800152e:	2190      	movs	r1, #144	; 0x90
 8001530:	4802      	ldr	r0, [pc, #8]	; (800153c <HAL_NVIC_SetPriorityGrouping+0x38>)
 8001532:	f7ff f8e7 	bl	8000704 <assert_failed>
 8001536:	e7ea      	b.n	800150e <HAL_NVIC_SetPriorityGrouping+0xa>
 8001538:	e000ed00 	and	lr, r0, r0, lsl #26
 800153c:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}

08001540 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001540:	b570      	push	{r4, r5, r6, lr}
 8001542:	4605      	mov	r5, r0
 8001544:	460c      	mov	r4, r1
 8001546:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00U;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001548:	2a0f      	cmp	r2, #15
 800154a:	d825      	bhi.n	8001598 <HAL_NVIC_SetPriority+0x58>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 800154c:	2c0f      	cmp	r4, #15
 800154e:	d828      	bhi.n	80015a2 <HAL_NVIC_SetPriority+0x62>
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001550:	4b1b      	ldr	r3, [pc, #108]	; (80015c0 <HAL_NVIC_SetPriority+0x80>)
 8001552:	68db      	ldr	r3, [r3, #12]
 8001554:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001558:	f1c3 0107 	rsb	r1, r3, #7
 800155c:	2904      	cmp	r1, #4
 800155e:	bf28      	it	cs
 8001560:	2104      	movcs	r1, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001562:	1d1a      	adds	r2, r3, #4
 8001564:	2a06      	cmp	r2, #6
 8001566:	d921      	bls.n	80015ac <HAL_NVIC_SetPriority+0x6c>
 8001568:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800156a:	f04f 32ff 	mov.w	r2, #4294967295
 800156e:	fa02 f101 	lsl.w	r1, r2, r1
 8001572:	ea24 0401 	bic.w	r4, r4, r1
 8001576:	409c      	lsls	r4, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001578:	fa02 f303 	lsl.w	r3, r2, r3
 800157c:	ea26 0603 	bic.w	r6, r6, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001580:	4334      	orrs	r4, r6
  if ((int32_t)(IRQn) >= 0)
 8001582:	2d00      	cmp	r5, #0
 8001584:	db14      	blt.n	80015b0 <HAL_NVIC_SetPriority+0x70>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001586:	0124      	lsls	r4, r4, #4
 8001588:	b2e4      	uxtb	r4, r4
 800158a:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 800158e:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 8001592:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001596:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001598:	21a8      	movs	r1, #168	; 0xa8
 800159a:	480a      	ldr	r0, [pc, #40]	; (80015c4 <HAL_NVIC_SetPriority+0x84>)
 800159c:	f7ff f8b2 	bl	8000704 <assert_failed>
 80015a0:	e7d4      	b.n	800154c <HAL_NVIC_SetPriority+0xc>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 80015a2:	21a9      	movs	r1, #169	; 0xa9
 80015a4:	4807      	ldr	r0, [pc, #28]	; (80015c4 <HAL_NVIC_SetPriority+0x84>)
 80015a6:	f7ff f8ad 	bl	8000704 <assert_failed>
 80015aa:	e7d1      	b.n	8001550 <HAL_NVIC_SetPriority+0x10>
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015ac:	2300      	movs	r3, #0
 80015ae:	e7dc      	b.n	800156a <HAL_NVIC_SetPriority+0x2a>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80015b0:	f005 050f 	and.w	r5, r5, #15
 80015b4:	0124      	lsls	r4, r4, #4
 80015b6:	b2e4      	uxtb	r4, r4
 80015b8:	4b03      	ldr	r3, [pc, #12]	; (80015c8 <HAL_NVIC_SetPriority+0x88>)
 80015ba:	555c      	strb	r4, [r3, r5]
}
 80015bc:	e7eb      	b.n	8001596 <HAL_NVIC_SetPriority+0x56>
 80015be:	bf00      	nop
 80015c0:	e000ed00 	and	lr, r0, r0, lsl #26
 80015c4:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
 80015c8:	e000ed14 	and	lr, r0, r4, lsl sp

080015cc <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80015cc:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 80015ce:	1e04      	subs	r4, r0, #0
 80015d0:	db0a      	blt.n	80015e8 <HAL_NVIC_EnableIRQ+0x1c>
  if ((int32_t)(IRQn) >= 0)
 80015d2:	2c00      	cmp	r4, #0
 80015d4:	db07      	blt.n	80015e6 <HAL_NVIC_EnableIRQ+0x1a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015d6:	f004 021f 	and.w	r2, r4, #31
 80015da:	0964      	lsrs	r4, r4, #5
 80015dc:	2301      	movs	r3, #1
 80015de:	4093      	lsls	r3, r2
 80015e0:	4a04      	ldr	r2, [pc, #16]	; (80015f4 <HAL_NVIC_EnableIRQ+0x28>)
 80015e2:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80015e6:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 80015e8:	21bc      	movs	r1, #188	; 0xbc
 80015ea:	4803      	ldr	r0, [pc, #12]	; (80015f8 <HAL_NVIC_EnableIRQ+0x2c>)
 80015ec:	f7ff f88a 	bl	8000704 <assert_failed>
 80015f0:	e7ef      	b.n	80015d2 <HAL_NVIC_EnableIRQ+0x6>
 80015f2:	bf00      	nop
 80015f4:	e000e100 	and	lr, r0, r0, lsl #2
 80015f8:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}

080015fc <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80015fc:	3801      	subs	r0, #1
 80015fe:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001602:	d20b      	bcs.n	800161c <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001604:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001608:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800160a:	4a05      	ldr	r2, [pc, #20]	; (8001620 <HAL_SYSTICK_Config+0x24>)
 800160c:	21f0      	movs	r1, #240	; 0xf0
 800160e:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001612:	2000      	movs	r0, #0
 8001614:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001616:	2207      	movs	r2, #7
 8001618:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800161a:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 800161c:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800161e:	4770      	bx	lr
 8001620:	e000ed00 	and	lr, r0, r0, lsl #26

08001624 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001624:	b510      	push	{r4, lr}
 8001626:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001628:	4b0e      	ldr	r3, [pc, #56]	; (8001664 <HAL_InitTick+0x40>)
 800162a:	7818      	ldrb	r0, [r3, #0]
 800162c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001630:	fbb3 f3f0 	udiv	r3, r3, r0
 8001634:	4a0c      	ldr	r2, [pc, #48]	; (8001668 <HAL_InitTick+0x44>)
 8001636:	6810      	ldr	r0, [r2, #0]
 8001638:	fbb0 f0f3 	udiv	r0, r0, r3
 800163c:	f7ff ffde 	bl	80015fc <HAL_SYSTICK_Config>
 8001640:	b968      	cbnz	r0, 800165e <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001642:	2c0f      	cmp	r4, #15
 8001644:	d901      	bls.n	800164a <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 8001646:	2001      	movs	r0, #1
 8001648:	e00a      	b.n	8001660 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800164a:	2200      	movs	r2, #0
 800164c:	4621      	mov	r1, r4
 800164e:	f04f 30ff 	mov.w	r0, #4294967295
 8001652:	f7ff ff75 	bl	8001540 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001656:	4b05      	ldr	r3, [pc, #20]	; (800166c <HAL_InitTick+0x48>)
 8001658:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800165a:	2000      	movs	r0, #0
 800165c:	e000      	b.n	8001660 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 800165e:	2001      	movs	r0, #1
}
 8001660:	bd10      	pop	{r4, pc}
 8001662:	bf00      	nop
 8001664:	20000000 	andcs	r0, r0, r0
 8001668:	20000008 	andcs	r0, r0, r8
 800166c:	20000004 	andcs	r0, r0, r4

08001670 <HAL_Init>:
{
 8001670:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001672:	4b0b      	ldr	r3, [pc, #44]	; (80016a0 <HAL_Init+0x30>)
 8001674:	681a      	ldr	r2, [r3, #0]
 8001676:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800167a:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800167c:	681a      	ldr	r2, [r3, #0]
 800167e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001682:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001684:	681a      	ldr	r2, [r3, #0]
 8001686:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800168a:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800168c:	2003      	movs	r0, #3
 800168e:	f7ff ff39 	bl	8001504 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001692:	200f      	movs	r0, #15
 8001694:	f7ff ffc6 	bl	8001624 <HAL_InitTick>
  HAL_MspInit();
 8001698:	f7ff f8f6 	bl	8000888 <HAL_MspInit>
}
 800169c:	2000      	movs	r0, #0
 800169e:	bd08      	pop	{r3, pc}
 80016a0:	40023c00 	andmi	r3, r2, r0, lsl #24

080016a4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80016a4:	4a03      	ldr	r2, [pc, #12]	; (80016b4 <HAL_IncTick+0x10>)
 80016a6:	6811      	ldr	r1, [r2, #0]
 80016a8:	4b03      	ldr	r3, [pc, #12]	; (80016b8 <HAL_IncTick+0x14>)
 80016aa:	781b      	ldrb	r3, [r3, #0]
 80016ac:	440b      	add	r3, r1
 80016ae:	6013      	str	r3, [r2, #0]
}
 80016b0:	4770      	bx	lr
 80016b2:	bf00      	nop
 80016b4:	200000d4 	ldrdcs	r0, [r0], -r4
 80016b8:	20000000 	andcs	r0, r0, r0

080016bc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80016bc:	4b01      	ldr	r3, [pc, #4]	; (80016c4 <HAL_GetTick+0x8>)
 80016be:	6818      	ldr	r0, [r3, #0]
}
 80016c0:	4770      	bx	lr
 80016c2:	bf00      	nop
 80016c4:	200000d4 	ldrdcs	r0, [r0], -r4

080016c8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80016c8:	b538      	push	{r3, r4, r5, lr}
 80016ca:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80016cc:	f7ff fff6 	bl	80016bc <HAL_GetTick>
 80016d0:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80016d2:	f1b4 3fff 	cmp.w	r4, #4294967295
 80016d6:	d002      	beq.n	80016de <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 80016d8:	4b04      	ldr	r3, [pc, #16]	; (80016ec <HAL_Delay+0x24>)
 80016da:	781b      	ldrb	r3, [r3, #0]
 80016dc:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80016de:	f7ff ffed 	bl	80016bc <HAL_GetTick>
 80016e2:	1b40      	subs	r0, r0, r5
 80016e4:	42a0      	cmp	r0, r4
 80016e6:	d3fa      	bcc.n	80016de <HAL_Delay+0x16>
  {
  }
}
 80016e8:	bd38      	pop	{r3, r4, r5, pc}
 80016ea:	bf00      	nop
 80016ec:	20000000 	andcs	r0, r0, r0

080016f0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80016f0:	4a03      	ldr	r2, [pc, #12]	; (8001700 <SystemInit+0x10>)
 80016f2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80016f6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80016fa:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80016fe:	4770      	bx	lr
 8001700:	e000ed00 	and	lr, r0, r0, lsl #26

08001704 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001704:	b510      	push	{r4, lr}
 8001706:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001708:	4a0c      	ldr	r2, [pc, #48]	; (800173c <_sbrk+0x38>)
 800170a:	490d      	ldr	r1, [pc, #52]	; (8001740 <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800170c:	480d      	ldr	r0, [pc, #52]	; (8001744 <_sbrk+0x40>)
 800170e:	6800      	ldr	r0, [r0, #0]
 8001710:	b140      	cbz	r0, 8001724 <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001712:	480c      	ldr	r0, [pc, #48]	; (8001744 <_sbrk+0x40>)
 8001714:	6800      	ldr	r0, [r0, #0]
 8001716:	4403      	add	r3, r0
 8001718:	1a52      	subs	r2, r2, r1
 800171a:	4293      	cmp	r3, r2
 800171c:	d806      	bhi.n	800172c <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 800171e:	4a09      	ldr	r2, [pc, #36]	; (8001744 <_sbrk+0x40>)
 8001720:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 8001722:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8001724:	4807      	ldr	r0, [pc, #28]	; (8001744 <_sbrk+0x40>)
 8001726:	4c08      	ldr	r4, [pc, #32]	; (8001748 <_sbrk+0x44>)
 8001728:	6004      	str	r4, [r0, #0]
 800172a:	e7f2      	b.n	8001712 <_sbrk+0xe>
    errno = ENOMEM;
 800172c:	f000 f9c0 	bl	8001ab0 <__errno>
 8001730:	230c      	movs	r3, #12
 8001732:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001734:	f04f 30ff 	mov.w	r0, #4294967295
 8001738:	e7f3      	b.n	8001722 <_sbrk+0x1e>
 800173a:	bf00      	nop
 800173c:	20001238 	andcs	r1, r0, r8, lsr r2
 8001740:	00000800 	andeq	r0, r0, r0, lsl #16
 8001744:	200000d8 	ldrdcs	r0, [r0], -r8
 8001748:	20000238 	andcs	r0, r0, r8, lsr r2

0800174c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800174c:	b570      	push	{r4, r5, r6, lr}
 800174e:	460c      	mov	r4, r1
 8001750:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001752:	2500      	movs	r5, #0
 8001754:	e006      	b.n	8001764 <_read+0x18>
  {
    *ptr++ = __io_getchar();
 8001756:	f3af 8000 	nop.w
 800175a:	4621      	mov	r1, r4
 800175c:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001760:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 8001762:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001764:	42b5      	cmp	r5, r6
 8001766:	dbf6      	blt.n	8001756 <_read+0xa>
  }

  return len;
}
 8001768:	4630      	mov	r0, r6
 800176a:	bd70      	pop	{r4, r5, r6, pc}

0800176c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800176c:	b570      	push	{r4, r5, r6, lr}
 800176e:	460c      	mov	r4, r1
 8001770:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001772:	2500      	movs	r5, #0
 8001774:	e004      	b.n	8001780 <_write+0x14>
  {
    __io_putchar(*ptr++);
 8001776:	f814 0b01 	ldrb.w	r0, [r4], #1
 800177a:	f7fe ff23 	bl	80005c4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800177e:	3501      	adds	r5, #1
 8001780:	42b5      	cmp	r5, r6
 8001782:	dbf8      	blt.n	8001776 <_write+0xa>
  }
  return len;
}
 8001784:	4630      	mov	r0, r6
 8001786:	bd70      	pop	{r4, r5, r6, pc}

08001788 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8001788:	f04f 30ff 	mov.w	r0, #4294967295
 800178c:	4770      	bx	lr

0800178e <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 800178e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001792:	604b      	str	r3, [r1, #4]
  return 0;
}
 8001794:	2000      	movs	r0, #0
 8001796:	4770      	bx	lr

08001798 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8001798:	2001      	movs	r0, #1
 800179a:	4770      	bx	lr

0800179c <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 800179c:	2000      	movs	r0, #0
 800179e:	4770      	bx	lr

080017a0 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
 80017a0:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
 80017a2:	2300      	movs	r3, #0
 80017a4:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80017a6:	e007      	b.n	80017b8 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
 80017a8:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80017ac:	aa02      	add	r2, sp, #8
 80017ae:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80017b2:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80017b6:	3301      	adds	r3, #1
 80017b8:	2b01      	cmp	r3, #1
 80017ba:	d9f5      	bls.n	80017a8 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
 80017bc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
 80017c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
 80017c4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80017c8:	b002      	add	sp, #8
 80017ca:	4770      	bx	lr

080017cc <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80017cc:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80017d0:	0c00      	lsrs	r0, r0, #16
 80017d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
 80017d6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 80017da:	d00a      	beq.n	80017f2 <opcode_is_bl_or_blx+0x26>
 80017dc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 80017e0:	d009      	beq.n	80017f6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
 80017e2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
 80017e6:	d008      	beq.n	80017fa <opcode_is_bl_or_blx+0x2e>
 80017e8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
 80017ec:	d007      	beq.n	80017fe <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
 80017ee:	2000      	movs	r0, #0
 80017f0:	4770      	bx	lr
        return true;
 80017f2:	2001      	movs	r0, #1
 80017f4:	4770      	bx	lr
 80017f6:	2001      	movs	r0, #1
 80017f8:	4770      	bx	lr
        return true;
 80017fa:	2001      	movs	r0, #1
 80017fc:	4770      	bx	lr
 80017fe:	2001      	movs	r0, #1
}
 8001800:	4770      	bx	lr
	...

08001804 <fault_dump_init>:
void fault_dump_init(void) {
 8001804:	b508      	push	{r3, lr}
    fd_code_stack_base = FD_CODE_STACK_BASE;
 8001806:	490a      	ldr	r1, [pc, #40]	; (8001830 <fault_dump_init+0x2c>)
 8001808:	4b0a      	ldr	r3, [pc, #40]	; (8001834 <fault_dump_init+0x30>)
 800180a:	6019      	str	r1, [r3, #0]
    fd_code_stack_full = FD_CODE_STACK_FULL;
 800180c:	4a0a      	ldr	r2, [pc, #40]	; (8001838 <fault_dump_init+0x34>)
 800180e:	4b0b      	ldr	r3, [pc, #44]	; (800183c <fault_dump_init+0x38>)
 8001810:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
 8001812:	1a53      	subs	r3, r2, r1
 8001814:	480a      	ldr	r0, [pc, #40]	; (8001840 <fault_dump_init+0x3c>)
 8001816:	f000 f97d 	bl	8001b14 <iprintf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
 800181a:	490a      	ldr	r1, [pc, #40]	; (8001844 <fault_dump_init+0x40>)
 800181c:	4a0a      	ldr	r2, [pc, #40]	; (8001848 <fault_dump_init+0x44>)
 800181e:	1a53      	subs	r3, r2, r1
 8001820:	480a      	ldr	r0, [pc, #40]	; (800184c <fault_dump_init+0x48>)
 8001822:	f000 f977 	bl	8001b14 <iprintf>
    printf("Code Stack Growth Downward:%d\r\n", 
 8001826:	2101      	movs	r1, #1
 8001828:	4809      	ldr	r0, [pc, #36]	; (8001850 <fault_dump_init+0x4c>)
 800182a:	f000 f973 	bl	8001b14 <iprintf>
}
 800182e:	bd08      	pop	{r3, pc}
 8001830:	20000a38 	andcs	r0, r0, r8, lsr sl
 8001834:	200001dc 	ldrdcs	r0, [r0], -ip
 8001838:	20001238 	andcs	r1, r0, r8, lsr r2
 800183c:	200001e0 	andcs	r0, r0, r0, ror #3
 8001840:	08002cc4 	stmdaeq	r0, {r2, r6, r7, sl, fp, sp}
 8001844:	08000190 	stmdaeq	r0, {r4, r7, r8}
 8001848:	08002b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, sp}
 800184c:	08002ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp, sp}
 8001850:	08002d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp, sp}

08001854 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
 8001854:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
 8001858:	b348      	cbz	r0, 80018ae <fault_dump_callstack+0x5a>
 800185a:	460f      	mov	r7, r1
 800185c:	4614      	mov	r4, r2
 800185e:	461d      	mov	r5, r3
 8001860:	4680      	mov	r8, r0
 8001862:	b339      	cbz	r1, 80018b4 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
 8001864:	b34a      	cbz	r2, 80018ba <fault_dump_callstack+0x66>
 8001866:	429a      	cmp	r2, r3
 8001868:	d82a      	bhi.n	80018c0 <fault_dump_callstack+0x6c>
    int count = 0;
 800186a:	2600      	movs	r6, #0
 800186c:	e000      	b.n	8001870 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
 800186e:	3404      	adds	r4, #4
 8001870:	b1d4      	cbz	r4, 80018a8 <fault_dump_callstack+0x54>
 8001872:	42ac      	cmp	r4, r5
 8001874:	d818      	bhi.n	80018a8 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
 8001876:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
 8001878:	4813      	ldr	r0, [pc, #76]	; (80018c8 <fault_dump_callstack+0x74>)
 800187a:	4290      	cmp	r0, r2
 800187c:	d8f7      	bhi.n	800186e <fault_dump_callstack+0x1a>
 800187e:	4b13      	ldr	r3, [pc, #76]	; (80018cc <fault_dump_callstack+0x78>)
 8001880:	4293      	cmp	r3, r2
 8001882:	d3f4      	bcc.n	800186e <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
 8001884:	f012 0f01 	tst.w	r2, #1
 8001888:	d0f1      	beq.n	800186e <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
 800188a:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
 800188e:	d0ee      	beq.n	800186e <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
 8001890:	4648      	mov	r0, r9
 8001892:	f7ff ff85 	bl	80017a0 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
 8001896:	f7ff ff99 	bl	80017cc <opcode_is_bl_or_blx>
 800189a:	2800      	cmp	r0, #0
 800189c:	d0e7      	beq.n	800186e <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
 800189e:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
 80018a2:	3601      	adds	r6, #1
        if (count >= size) {
 80018a4:	42be      	cmp	r6, r7
 80018a6:	d3e2      	bcc.n	800186e <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
 80018a8:	4630      	mov	r0, r6
 80018aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
 80018ae:	f06f 0601 	mvn.w	r6, #1
 80018b2:	e7f9      	b.n	80018a8 <fault_dump_callstack+0x54>
 80018b4:	f06f 0601 	mvn.w	r6, #1
 80018b8:	e7f6      	b.n	80018a8 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
 80018ba:	f06f 0602 	mvn.w	r6, #2
 80018be:	e7f3      	b.n	80018a8 <fault_dump_callstack+0x54>
 80018c0:	f06f 0602 	mvn.w	r6, #2
 80018c4:	e7f0      	b.n	80018a8 <fault_dump_callstack+0x54>
 80018c6:	bf00      	nop
 80018c8:	08000190 	stmdaeq	r0, {r4, r7, r8}
 80018cc:	08002b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, sp}

080018d0 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
 80018d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018d2:	4605      	mov	r5, r0
 80018d4:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
 80018d6:	6803      	ldr	r3, [r0, #0]
 80018d8:	4c47      	ldr	r4, [pc, #284]	; (80019f8 <fault_dump_handler+0x128>)
 80018da:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
 80018dc:	6843      	ldr	r3, [r0, #4]
 80018de:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
 80018e0:	6883      	ldr	r3, [r0, #8]
 80018e2:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
 80018e4:	68c3      	ldr	r3, [r0, #12]
 80018e6:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
 80018e8:	6903      	ldr	r3, [r0, #16]
 80018ea:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
 80018ec:	6943      	ldr	r3, [r0, #20]
 80018ee:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
 80018f0:	6983      	ldr	r3, [r0, #24]
 80018f2:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
 80018f4:	69c3      	ldr	r3, [r0, #28]
 80018f6:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
 80018f8:	6a03      	ldr	r3, [r0, #32]
 80018fa:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
 80018fc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80018fe:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
 8001900:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001902:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
 8001904:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001906:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
 8001908:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800190a:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
 800190c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800190e:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
 8001910:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001912:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
 8001914:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8001916:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
 8001918:	4f38      	ldr	r7, [pc, #224]	; (80019fc <fault_dump_handler+0x12c>)
 800191a:	4638      	mov	r0, r7
 800191c:	f000 f980 	bl	8001c20 <puts>
    printf(" HardFault Information Dump \r\n");
 8001920:	4837      	ldr	r0, [pc, #220]	; (8001a00 <fault_dump_handler+0x130>)
 8001922:	f000 f97d 	bl	8001c20 <puts>
    printf(" Stack Frame   \r\n");
 8001926:	4837      	ldr	r0, [pc, #220]	; (8001a04 <fault_dump_handler+0x134>)
 8001928:	f000 f97a 	bl	8001c20 <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
 800192c:	6a21      	ldr	r1, [r4, #32]
 800192e:	4836      	ldr	r0, [pc, #216]	; (8001a08 <fault_dump_handler+0x138>)
 8001930:	f000 f8f0 	bl	8001b14 <iprintf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
 8001934:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001936:	4835      	ldr	r0, [pc, #212]	; (8001a0c <fault_dump_handler+0x13c>)
 8001938:	f000 f8ec 	bl	8001b14 <iprintf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
 800193c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800193e:	4834      	ldr	r0, [pc, #208]	; (8001a10 <fault_dump_handler+0x140>)
 8001940:	f000 f8e8 	bl	8001b14 <iprintf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
 8001944:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001946:	4833      	ldr	r0, [pc, #204]	; (8001a14 <fault_dump_handler+0x144>)
 8001948:	f000 f8e4 	bl	8001b14 <iprintf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
 800194c:	6821      	ldr	r1, [r4, #0]
 800194e:	4832      	ldr	r0, [pc, #200]	; (8001a18 <fault_dump_handler+0x148>)
 8001950:	f000 f8e0 	bl	8001b14 <iprintf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
 8001954:	6861      	ldr	r1, [r4, #4]
 8001956:	4831      	ldr	r0, [pc, #196]	; (8001a1c <fault_dump_handler+0x14c>)
 8001958:	f000 f8dc 	bl	8001b14 <iprintf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
 800195c:	68a1      	ldr	r1, [r4, #8]
 800195e:	4830      	ldr	r0, [pc, #192]	; (8001a20 <fault_dump_handler+0x150>)
 8001960:	f000 f8d8 	bl	8001b14 <iprintf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
 8001964:	68e1      	ldr	r1, [r4, #12]
 8001966:	482f      	ldr	r0, [pc, #188]	; (8001a24 <fault_dump_handler+0x154>)
 8001968:	f000 f8d4 	bl	8001b14 <iprintf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
 800196c:	6921      	ldr	r1, [r4, #16]
 800196e:	482e      	ldr	r0, [pc, #184]	; (8001a28 <fault_dump_handler+0x158>)
 8001970:	f000 f8d0 	bl	8001b14 <iprintf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
 8001974:	6961      	ldr	r1, [r4, #20]
 8001976:	482d      	ldr	r0, [pc, #180]	; (8001a2c <fault_dump_handler+0x15c>)
 8001978:	f000 f8cc 	bl	8001b14 <iprintf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
 800197c:	69a1      	ldr	r1, [r4, #24]
 800197e:	482c      	ldr	r0, [pc, #176]	; (8001a30 <fault_dump_handler+0x160>)
 8001980:	f000 f8c8 	bl	8001b14 <iprintf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
 8001984:	69e1      	ldr	r1, [r4, #28]
 8001986:	482b      	ldr	r0, [pc, #172]	; (8001a34 <fault_dump_handler+0x164>)
 8001988:	f000 f8c4 	bl	8001b14 <iprintf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
 800198c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800198e:	482a      	ldr	r0, [pc, #168]	; (8001a38 <fault_dump_handler+0x168>)
 8001990:	f000 f8c0 	bl	8001b14 <iprintf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
 8001994:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001996:	4829      	ldr	r0, [pc, #164]	; (8001a3c <fault_dump_handler+0x16c>)
 8001998:	f000 f8bc 	bl	8001b14 <iprintf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
 800199c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800199e:	4828      	ldr	r0, [pc, #160]	; (8001a40 <fault_dump_handler+0x170>)
 80019a0:	f000 f8b8 	bl	8001b14 <iprintf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
 80019a4:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80019a6:	4827      	ldr	r0, [pc, #156]	; (8001a44 <fault_dump_handler+0x174>)
 80019a8:	f000 f8b4 	bl	8001b14 <iprintf>
    printf("\r\n");
 80019ac:	4638      	mov	r0, r7
 80019ae:	f000 f937 	bl	8001c20 <puts>
    printf(" EXE_RETURN: 0x%08X \r\n", linker);
 80019b2:	4631      	mov	r1, r6
 80019b4:	4824      	ldr	r0, [pc, #144]	; (8001a48 <fault_dump_handler+0x178>)
 80019b6:	f000 f8ad 	bl	8001b14 <iprintf>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
 80019ba:	4b24      	ldr	r3, [pc, #144]	; (8001a4c <fault_dump_handler+0x17c>)
 80019bc:	f105 0240 	add.w	r2, r5, #64	; 0x40
 80019c0:	2140      	movs	r1, #64	; 0x40
 80019c2:	4823      	ldr	r0, [pc, #140]	; (8001a50 <fault_dump_handler+0x180>)
 80019c4:	f7ff ff46 	bl	8001854 <fault_dump_callstack>
 80019c8:	4605      	mov	r5, r0
    printf(" Stack Call: ");
 80019ca:	4822      	ldr	r0, [pc, #136]	; (8001a54 <fault_dump_handler+0x184>)
 80019cc:	f000 f8a2 	bl	8001b14 <iprintf>
    printf("%08X ", (unsigned int)frame.except.pc);
 80019d0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80019d2:	4821      	ldr	r0, [pc, #132]	; (8001a58 <fault_dump_handler+0x188>)
 80019d4:	f000 f89e 	bl	8001b14 <iprintf>
    for (index = 0; index < count; index++) {
 80019d8:	2400      	movs	r4, #0
 80019da:	e006      	b.n	80019ea <fault_dump_handler+0x11a>
        printf("%08X ", buffer[index]);
 80019dc:	4b1c      	ldr	r3, [pc, #112]	; (8001a50 <fault_dump_handler+0x180>)
 80019de:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 80019e2:	481d      	ldr	r0, [pc, #116]	; (8001a58 <fault_dump_handler+0x188>)
 80019e4:	f000 f896 	bl	8001b14 <iprintf>
    for (index = 0; index < count; index++) {
 80019e8:	3401      	adds	r4, #1
 80019ea:	42ac      	cmp	r4, r5
 80019ec:	dbf6      	blt.n	80019dc <fault_dump_handler+0x10c>
    printf("\r\n");
 80019ee:	4803      	ldr	r0, [pc, #12]	; (80019fc <fault_dump_handler+0x12c>)
 80019f0:	f000 f916 	bl	8001c20 <puts>
    while (1);
 80019f4:	e7fe      	b.n	80019f4 <fault_dump_handler+0x124>
 80019f6:	bf00      	nop
 80019f8:	200001e4 	andcs	r0, r0, r4, ror #3
 80019fc:	08002d48 	stmdaeq	r0, {r3, r6, r8, sl, fp, sp}
 8001a00:	08002d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp, sp}
 8001a04:	08002d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp, sp}
 8001a08:	08002d60 	stmdaeq	r0, {r5, r6, r8, sl, fp, sp}
 8001a0c:	08002d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp, sp}
 8001a10:	08002d88 	stmdaeq	r0, {r3, r7, r8, sl, fp, sp}
 8001a14:	08002d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp, sp}
 8001a18:	08002db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, sp}
 8001a1c:	08002dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp, sp}
 8001a20:	08002dd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, fp, sp}
 8001a24:	08002dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp, sp}
 8001a28:	08002e00 	stmdaeq	r0, {r9, sl, fp, sp}
 8001a2c:	08002e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, sp}
 8001a30:	08002e28 	stmdaeq	r0, {r3, r5, r9, sl, fp, sp}
 8001a34:	08002e3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, fp, sp}
 8001a38:	08002e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, sp}
 8001a3c:	08002e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, sp}
 8001a40:	08002e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp, sp}
 8001a44:	08002e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp, sp}
 8001a48:	08002ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp, sp}
 8001a4c:	20001238 	andcs	r1, r0, r8, lsr r2
 8001a50:	200000dc 	ldrdcs	r0, [r0], -ip
 8001a54:	08002eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, sp}
 8001a58:	08002ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp, sp}

08001a5c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001a5c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001a94 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001a60:	f7ff fe46 	bl	80016f0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001a64:	480c      	ldr	r0, [pc, #48]	; (8001a98 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001a66:	490d      	ldr	r1, [pc, #52]	; (8001a9c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001a68:	4a0d      	ldr	r2, [pc, #52]	; (8001aa0 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001a6a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001a6c:	e002      	b.n	8001a74 <LoopCopyDataInit>

08001a6e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001a6e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001a70:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001a72:	3304      	adds	r3, #4

08001a74 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001a74:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001a76:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001a78:	d3f9      	bcc.n	8001a6e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001a7a:	4a0a      	ldr	r2, [pc, #40]	; (8001aa4 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001a7c:	4c0a      	ldr	r4, [pc, #40]	; (8001aa8 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001a7e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001a80:	e001      	b.n	8001a86 <LoopFillZerobss>

08001a82 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001a82:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001a84:	3204      	adds	r2, #4

08001a86 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001a86:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001a88:	d3fb      	bcc.n	8001a82 <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001a8a:	f000 f817 	bl	8001abc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001a8e:	f7fe fe17 	bl	80006c0 <main>
  bx  lr    
 8001a92:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001a94:	20001238 	andcs	r1, r0, r8, lsr r2
  ldr r0, =_sdata
 8001a98:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 8001a9c:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r2, =_sidata
 8001aa0:	08002f78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, fp, sp}
  ldr r2, =_sbss
 8001aa4:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r4, =_ebss
 8001aa8:	20000234 	andcs	r0, r0, r4, lsr r2

08001aac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001aac:	e7fe      	b.n	8001aac <ADC_IRQHandler>
	...

08001ab0 <__errno>:
 8001ab0:	4b01      	ldr	r3, [pc, #4]	; (8001ab8 <__errno+0x8>)
 8001ab2:	6818      	ldr	r0, [r3, #0]
 8001ab4:	4770      	bx	lr
 8001ab6:	bf00      	nop
 8001ab8:	2000000c 	andcs	r0, r0, ip

08001abc <__libc_init_array>:
 8001abc:	b570      	push	{r4, r5, r6, lr}
 8001abe:	4d0d      	ldr	r5, [pc, #52]	; (8001af4 <__libc_init_array+0x38>)
 8001ac0:	4c0d      	ldr	r4, [pc, #52]	; (8001af8 <__libc_init_array+0x3c>)
 8001ac2:	1b64      	subs	r4, r4, r5
 8001ac4:	10a4      	asrs	r4, r4, #2
 8001ac6:	2600      	movs	r6, #0
 8001ac8:	42a6      	cmp	r6, r4
 8001aca:	d109      	bne.n	8001ae0 <__libc_init_array+0x24>
 8001acc:	4d0b      	ldr	r5, [pc, #44]	; (8001afc <__libc_init_array+0x40>)
 8001ace:	4c0c      	ldr	r4, [pc, #48]	; (8001b00 <__libc_init_array+0x44>)
 8001ad0:	f001 f824 	bl	8002b1c <_init>
 8001ad4:	1b64      	subs	r4, r4, r5
 8001ad6:	10a4      	asrs	r4, r4, #2
 8001ad8:	2600      	movs	r6, #0
 8001ada:	42a6      	cmp	r6, r4
 8001adc:	d105      	bne.n	8001aea <__libc_init_array+0x2e>
 8001ade:	bd70      	pop	{r4, r5, r6, pc}
 8001ae0:	f855 3b04 	ldr.w	r3, [r5], #4
 8001ae4:	4798      	blx	r3
 8001ae6:	3601      	adds	r6, #1
 8001ae8:	e7ee      	b.n	8001ac8 <__libc_init_array+0xc>
 8001aea:	f855 3b04 	ldr.w	r3, [r5], #4
 8001aee:	4798      	blx	r3
 8001af0:	3601      	adds	r6, #1
 8001af2:	e7f2      	b.n	8001ada <__libc_init_array+0x1e>
 8001af4:	08002f70 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, fp, sp}
 8001af8:	08002f70 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, fp, sp}
 8001afc:	08002f70 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, fp, sp}
 8001b00:	08002f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp, sp}

08001b04 <memset>:
 8001b04:	4402      	add	r2, r0
 8001b06:	4603      	mov	r3, r0
 8001b08:	4293      	cmp	r3, r2
 8001b0a:	d100      	bne.n	8001b0e <memset+0xa>
 8001b0c:	4770      	bx	lr
 8001b0e:	f803 1b01 	strb.w	r1, [r3], #1
 8001b12:	e7f9      	b.n	8001b08 <memset+0x4>

08001b14 <iprintf>:
 8001b14:	b40f      	push	{r0, r1, r2, r3}
 8001b16:	4b0a      	ldr	r3, [pc, #40]	; (8001b40 <iprintf+0x2c>)
 8001b18:	b513      	push	{r0, r1, r4, lr}
 8001b1a:	681c      	ldr	r4, [r3, #0]
 8001b1c:	b124      	cbz	r4, 8001b28 <iprintf+0x14>
 8001b1e:	69a3      	ldr	r3, [r4, #24]
 8001b20:	b913      	cbnz	r3, 8001b28 <iprintf+0x14>
 8001b22:	4620      	mov	r0, r4
 8001b24:	f000 fa5e 	bl	8001fe4 <__sinit>
 8001b28:	ab05      	add	r3, sp, #20
 8001b2a:	9a04      	ldr	r2, [sp, #16]
 8001b2c:	68a1      	ldr	r1, [r4, #8]
 8001b2e:	9301      	str	r3, [sp, #4]
 8001b30:	4620      	mov	r0, r4
 8001b32:	f000 fc67 	bl	8002404 <_vfiprintf_r>
 8001b36:	b002      	add	sp, #8
 8001b38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001b3c:	b004      	add	sp, #16
 8001b3e:	4770      	bx	lr
 8001b40:	2000000c 	andcs	r0, r0, ip

08001b44 <_puts_r>:
 8001b44:	b570      	push	{r4, r5, r6, lr}
 8001b46:	460e      	mov	r6, r1
 8001b48:	4605      	mov	r5, r0
 8001b4a:	b118      	cbz	r0, 8001b54 <_puts_r+0x10>
 8001b4c:	6983      	ldr	r3, [r0, #24]
 8001b4e:	b90b      	cbnz	r3, 8001b54 <_puts_r+0x10>
 8001b50:	f000 fa48 	bl	8001fe4 <__sinit>
 8001b54:	69ab      	ldr	r3, [r5, #24]
 8001b56:	68ac      	ldr	r4, [r5, #8]
 8001b58:	b913      	cbnz	r3, 8001b60 <_puts_r+0x1c>
 8001b5a:	4628      	mov	r0, r5
 8001b5c:	f000 fa42 	bl	8001fe4 <__sinit>
 8001b60:	4b2c      	ldr	r3, [pc, #176]	; (8001c14 <_puts_r+0xd0>)
 8001b62:	429c      	cmp	r4, r3
 8001b64:	d120      	bne.n	8001ba8 <_puts_r+0x64>
 8001b66:	686c      	ldr	r4, [r5, #4]
 8001b68:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001b6a:	07db      	lsls	r3, r3, #31
 8001b6c:	d405      	bmi.n	8001b7a <_puts_r+0x36>
 8001b6e:	89a3      	ldrh	r3, [r4, #12]
 8001b70:	0598      	lsls	r0, r3, #22
 8001b72:	d402      	bmi.n	8001b7a <_puts_r+0x36>
 8001b74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001b76:	f000 fad3 	bl	8002120 <__retarget_lock_acquire_recursive>
 8001b7a:	89a3      	ldrh	r3, [r4, #12]
 8001b7c:	0719      	lsls	r1, r3, #28
 8001b7e:	d51d      	bpl.n	8001bbc <_puts_r+0x78>
 8001b80:	6923      	ldr	r3, [r4, #16]
 8001b82:	b1db      	cbz	r3, 8001bbc <_puts_r+0x78>
 8001b84:	3e01      	subs	r6, #1
 8001b86:	68a3      	ldr	r3, [r4, #8]
 8001b88:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001b8c:	3b01      	subs	r3, #1
 8001b8e:	60a3      	str	r3, [r4, #8]
 8001b90:	bb39      	cbnz	r1, 8001be2 <_puts_r+0x9e>
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	da38      	bge.n	8001c08 <_puts_r+0xc4>
 8001b96:	4622      	mov	r2, r4
 8001b98:	210a      	movs	r1, #10
 8001b9a:	4628      	mov	r0, r5
 8001b9c:	f000 f848 	bl	8001c30 <__swbuf_r>
 8001ba0:	3001      	adds	r0, #1
 8001ba2:	d011      	beq.n	8001bc8 <_puts_r+0x84>
 8001ba4:	250a      	movs	r5, #10
 8001ba6:	e011      	b.n	8001bcc <_puts_r+0x88>
 8001ba8:	4b1b      	ldr	r3, [pc, #108]	; (8001c18 <_puts_r+0xd4>)
 8001baa:	429c      	cmp	r4, r3
 8001bac:	d101      	bne.n	8001bb2 <_puts_r+0x6e>
 8001bae:	68ac      	ldr	r4, [r5, #8]
 8001bb0:	e7da      	b.n	8001b68 <_puts_r+0x24>
 8001bb2:	4b1a      	ldr	r3, [pc, #104]	; (8001c1c <_puts_r+0xd8>)
 8001bb4:	429c      	cmp	r4, r3
 8001bb6:	bf08      	it	eq
 8001bb8:	68ec      	ldreq	r4, [r5, #12]
 8001bba:	e7d5      	b.n	8001b68 <_puts_r+0x24>
 8001bbc:	4621      	mov	r1, r4
 8001bbe:	4628      	mov	r0, r5
 8001bc0:	f000 f888 	bl	8001cd4 <__swsetup_r>
 8001bc4:	2800      	cmp	r0, #0
 8001bc6:	d0dd      	beq.n	8001b84 <_puts_r+0x40>
 8001bc8:	f04f 35ff 	mov.w	r5, #4294967295
 8001bcc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001bce:	07da      	lsls	r2, r3, #31
 8001bd0:	d405      	bmi.n	8001bde <_puts_r+0x9a>
 8001bd2:	89a3      	ldrh	r3, [r4, #12]
 8001bd4:	059b      	lsls	r3, r3, #22
 8001bd6:	d402      	bmi.n	8001bde <_puts_r+0x9a>
 8001bd8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001bda:	f000 faa2 	bl	8002122 <__retarget_lock_release_recursive>
 8001bde:	4628      	mov	r0, r5
 8001be0:	bd70      	pop	{r4, r5, r6, pc}
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	da04      	bge.n	8001bf0 <_puts_r+0xac>
 8001be6:	69a2      	ldr	r2, [r4, #24]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	dc06      	bgt.n	8001bfa <_puts_r+0xb6>
 8001bec:	290a      	cmp	r1, #10
 8001bee:	d004      	beq.n	8001bfa <_puts_r+0xb6>
 8001bf0:	6823      	ldr	r3, [r4, #0]
 8001bf2:	1c5a      	adds	r2, r3, #1
 8001bf4:	6022      	str	r2, [r4, #0]
 8001bf6:	7019      	strb	r1, [r3, #0]
 8001bf8:	e7c5      	b.n	8001b86 <_puts_r+0x42>
 8001bfa:	4622      	mov	r2, r4
 8001bfc:	4628      	mov	r0, r5
 8001bfe:	f000 f817 	bl	8001c30 <__swbuf_r>
 8001c02:	3001      	adds	r0, #1
 8001c04:	d1bf      	bne.n	8001b86 <_puts_r+0x42>
 8001c06:	e7df      	b.n	8001bc8 <_puts_r+0x84>
 8001c08:	6823      	ldr	r3, [r4, #0]
 8001c0a:	250a      	movs	r5, #10
 8001c0c:	1c5a      	adds	r2, r3, #1
 8001c0e:	6022      	str	r2, [r4, #0]
 8001c10:	701d      	strb	r5, [r3, #0]
 8001c12:	e7db      	b.n	8001bcc <_puts_r+0x88>
 8001c14:	08002ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp, sp}
 8001c18:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 8001c1c:	08002ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, sp}

08001c20 <puts>:
 8001c20:	4b02      	ldr	r3, [pc, #8]	; (8001c2c <puts+0xc>)
 8001c22:	4601      	mov	r1, r0
 8001c24:	6818      	ldr	r0, [r3, #0]
 8001c26:	f7ff bf8d 	b.w	8001b44 <_puts_r>
 8001c2a:	bf00      	nop
 8001c2c:	2000000c 	andcs	r0, r0, ip

08001c30 <__swbuf_r>:
 8001c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c32:	460e      	mov	r6, r1
 8001c34:	4614      	mov	r4, r2
 8001c36:	4605      	mov	r5, r0
 8001c38:	b118      	cbz	r0, 8001c42 <__swbuf_r+0x12>
 8001c3a:	6983      	ldr	r3, [r0, #24]
 8001c3c:	b90b      	cbnz	r3, 8001c42 <__swbuf_r+0x12>
 8001c3e:	f000 f9d1 	bl	8001fe4 <__sinit>
 8001c42:	4b21      	ldr	r3, [pc, #132]	; (8001cc8 <__swbuf_r+0x98>)
 8001c44:	429c      	cmp	r4, r3
 8001c46:	d12b      	bne.n	8001ca0 <__swbuf_r+0x70>
 8001c48:	686c      	ldr	r4, [r5, #4]
 8001c4a:	69a3      	ldr	r3, [r4, #24]
 8001c4c:	60a3      	str	r3, [r4, #8]
 8001c4e:	89a3      	ldrh	r3, [r4, #12]
 8001c50:	071a      	lsls	r2, r3, #28
 8001c52:	d52f      	bpl.n	8001cb4 <__swbuf_r+0x84>
 8001c54:	6923      	ldr	r3, [r4, #16]
 8001c56:	b36b      	cbz	r3, 8001cb4 <__swbuf_r+0x84>
 8001c58:	6923      	ldr	r3, [r4, #16]
 8001c5a:	6820      	ldr	r0, [r4, #0]
 8001c5c:	1ac0      	subs	r0, r0, r3
 8001c5e:	6963      	ldr	r3, [r4, #20]
 8001c60:	b2f6      	uxtb	r6, r6
 8001c62:	4283      	cmp	r3, r0
 8001c64:	4637      	mov	r7, r6
 8001c66:	dc04      	bgt.n	8001c72 <__swbuf_r+0x42>
 8001c68:	4621      	mov	r1, r4
 8001c6a:	4628      	mov	r0, r5
 8001c6c:	f000 f926 	bl	8001ebc <_fflush_r>
 8001c70:	bb30      	cbnz	r0, 8001cc0 <__swbuf_r+0x90>
 8001c72:	68a3      	ldr	r3, [r4, #8]
 8001c74:	3b01      	subs	r3, #1
 8001c76:	60a3      	str	r3, [r4, #8]
 8001c78:	6823      	ldr	r3, [r4, #0]
 8001c7a:	1c5a      	adds	r2, r3, #1
 8001c7c:	6022      	str	r2, [r4, #0]
 8001c7e:	701e      	strb	r6, [r3, #0]
 8001c80:	6963      	ldr	r3, [r4, #20]
 8001c82:	3001      	adds	r0, #1
 8001c84:	4283      	cmp	r3, r0
 8001c86:	d004      	beq.n	8001c92 <__swbuf_r+0x62>
 8001c88:	89a3      	ldrh	r3, [r4, #12]
 8001c8a:	07db      	lsls	r3, r3, #31
 8001c8c:	d506      	bpl.n	8001c9c <__swbuf_r+0x6c>
 8001c8e:	2e0a      	cmp	r6, #10
 8001c90:	d104      	bne.n	8001c9c <__swbuf_r+0x6c>
 8001c92:	4621      	mov	r1, r4
 8001c94:	4628      	mov	r0, r5
 8001c96:	f000 f911 	bl	8001ebc <_fflush_r>
 8001c9a:	b988      	cbnz	r0, 8001cc0 <__swbuf_r+0x90>
 8001c9c:	4638      	mov	r0, r7
 8001c9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ca0:	4b0a      	ldr	r3, [pc, #40]	; (8001ccc <__swbuf_r+0x9c>)
 8001ca2:	429c      	cmp	r4, r3
 8001ca4:	d101      	bne.n	8001caa <__swbuf_r+0x7a>
 8001ca6:	68ac      	ldr	r4, [r5, #8]
 8001ca8:	e7cf      	b.n	8001c4a <__swbuf_r+0x1a>
 8001caa:	4b09      	ldr	r3, [pc, #36]	; (8001cd0 <__swbuf_r+0xa0>)
 8001cac:	429c      	cmp	r4, r3
 8001cae:	bf08      	it	eq
 8001cb0:	68ec      	ldreq	r4, [r5, #12]
 8001cb2:	e7ca      	b.n	8001c4a <__swbuf_r+0x1a>
 8001cb4:	4621      	mov	r1, r4
 8001cb6:	4628      	mov	r0, r5
 8001cb8:	f000 f80c 	bl	8001cd4 <__swsetup_r>
 8001cbc:	2800      	cmp	r0, #0
 8001cbe:	d0cb      	beq.n	8001c58 <__swbuf_r+0x28>
 8001cc0:	f04f 37ff 	mov.w	r7, #4294967295
 8001cc4:	e7ea      	b.n	8001c9c <__swbuf_r+0x6c>
 8001cc6:	bf00      	nop
 8001cc8:	08002ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp, sp}
 8001ccc:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 8001cd0:	08002ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, sp}

08001cd4 <__swsetup_r>:
 8001cd4:	4b32      	ldr	r3, [pc, #200]	; (8001da0 <__swsetup_r+0xcc>)
 8001cd6:	b570      	push	{r4, r5, r6, lr}
 8001cd8:	681d      	ldr	r5, [r3, #0]
 8001cda:	4606      	mov	r6, r0
 8001cdc:	460c      	mov	r4, r1
 8001cde:	b125      	cbz	r5, 8001cea <__swsetup_r+0x16>
 8001ce0:	69ab      	ldr	r3, [r5, #24]
 8001ce2:	b913      	cbnz	r3, 8001cea <__swsetup_r+0x16>
 8001ce4:	4628      	mov	r0, r5
 8001ce6:	f000 f97d 	bl	8001fe4 <__sinit>
 8001cea:	4b2e      	ldr	r3, [pc, #184]	; (8001da4 <__swsetup_r+0xd0>)
 8001cec:	429c      	cmp	r4, r3
 8001cee:	d10f      	bne.n	8001d10 <__swsetup_r+0x3c>
 8001cf0:	686c      	ldr	r4, [r5, #4]
 8001cf2:	89a3      	ldrh	r3, [r4, #12]
 8001cf4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001cf8:	0719      	lsls	r1, r3, #28
 8001cfa:	d42c      	bmi.n	8001d56 <__swsetup_r+0x82>
 8001cfc:	06dd      	lsls	r5, r3, #27
 8001cfe:	d411      	bmi.n	8001d24 <__swsetup_r+0x50>
 8001d00:	2309      	movs	r3, #9
 8001d02:	6033      	str	r3, [r6, #0]
 8001d04:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001d08:	81a3      	strh	r3, [r4, #12]
 8001d0a:	f04f 30ff 	mov.w	r0, #4294967295
 8001d0e:	e03e      	b.n	8001d8e <__swsetup_r+0xba>
 8001d10:	4b25      	ldr	r3, [pc, #148]	; (8001da8 <__swsetup_r+0xd4>)
 8001d12:	429c      	cmp	r4, r3
 8001d14:	d101      	bne.n	8001d1a <__swsetup_r+0x46>
 8001d16:	68ac      	ldr	r4, [r5, #8]
 8001d18:	e7eb      	b.n	8001cf2 <__swsetup_r+0x1e>
 8001d1a:	4b24      	ldr	r3, [pc, #144]	; (8001dac <__swsetup_r+0xd8>)
 8001d1c:	429c      	cmp	r4, r3
 8001d1e:	bf08      	it	eq
 8001d20:	68ec      	ldreq	r4, [r5, #12]
 8001d22:	e7e6      	b.n	8001cf2 <__swsetup_r+0x1e>
 8001d24:	0758      	lsls	r0, r3, #29
 8001d26:	d512      	bpl.n	8001d4e <__swsetup_r+0x7a>
 8001d28:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001d2a:	b141      	cbz	r1, 8001d3e <__swsetup_r+0x6a>
 8001d2c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001d30:	4299      	cmp	r1, r3
 8001d32:	d002      	beq.n	8001d3a <__swsetup_r+0x66>
 8001d34:	4630      	mov	r0, r6
 8001d36:	f000 fa5b 	bl	80021f0 <_free_r>
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	6363      	str	r3, [r4, #52]	; 0x34
 8001d3e:	89a3      	ldrh	r3, [r4, #12]
 8001d40:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001d44:	81a3      	strh	r3, [r4, #12]
 8001d46:	2300      	movs	r3, #0
 8001d48:	6063      	str	r3, [r4, #4]
 8001d4a:	6923      	ldr	r3, [r4, #16]
 8001d4c:	6023      	str	r3, [r4, #0]
 8001d4e:	89a3      	ldrh	r3, [r4, #12]
 8001d50:	f043 0308 	orr.w	r3, r3, #8
 8001d54:	81a3      	strh	r3, [r4, #12]
 8001d56:	6923      	ldr	r3, [r4, #16]
 8001d58:	b94b      	cbnz	r3, 8001d6e <__swsetup_r+0x9a>
 8001d5a:	89a3      	ldrh	r3, [r4, #12]
 8001d5c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001d60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001d64:	d003      	beq.n	8001d6e <__swsetup_r+0x9a>
 8001d66:	4621      	mov	r1, r4
 8001d68:	4630      	mov	r0, r6
 8001d6a:	f000 fa01 	bl	8002170 <__smakebuf_r>
 8001d6e:	89a0      	ldrh	r0, [r4, #12]
 8001d70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001d74:	f010 0301 	ands.w	r3, r0, #1
 8001d78:	d00a      	beq.n	8001d90 <__swsetup_r+0xbc>
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	60a3      	str	r3, [r4, #8]
 8001d7e:	6963      	ldr	r3, [r4, #20]
 8001d80:	425b      	negs	r3, r3
 8001d82:	61a3      	str	r3, [r4, #24]
 8001d84:	6923      	ldr	r3, [r4, #16]
 8001d86:	b943      	cbnz	r3, 8001d9a <__swsetup_r+0xc6>
 8001d88:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001d8c:	d1ba      	bne.n	8001d04 <__swsetup_r+0x30>
 8001d8e:	bd70      	pop	{r4, r5, r6, pc}
 8001d90:	0781      	lsls	r1, r0, #30
 8001d92:	bf58      	it	pl
 8001d94:	6963      	ldrpl	r3, [r4, #20]
 8001d96:	60a3      	str	r3, [r4, #8]
 8001d98:	e7f4      	b.n	8001d84 <__swsetup_r+0xb0>
 8001d9a:	2000      	movs	r0, #0
 8001d9c:	e7f7      	b.n	8001d8e <__swsetup_r+0xba>
 8001d9e:	bf00      	nop
 8001da0:	2000000c 	andcs	r0, r0, ip
 8001da4:	08002ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp, sp}
 8001da8:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 8001dac:	08002ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, sp}

08001db0 <__sflush_r>:
 8001db0:	898a      	ldrh	r2, [r1, #12]
 8001db2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001db6:	4605      	mov	r5, r0
 8001db8:	0710      	lsls	r0, r2, #28
 8001dba:	460c      	mov	r4, r1
 8001dbc:	d458      	bmi.n	8001e70 <__sflush_r+0xc0>
 8001dbe:	684b      	ldr	r3, [r1, #4]
 8001dc0:	2b00      	cmp	r3, #0
 8001dc2:	dc05      	bgt.n	8001dd0 <__sflush_r+0x20>
 8001dc4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	dc02      	bgt.n	8001dd0 <__sflush_r+0x20>
 8001dca:	2000      	movs	r0, #0
 8001dcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001dd0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001dd2:	2e00      	cmp	r6, #0
 8001dd4:	d0f9      	beq.n	8001dca <__sflush_r+0x1a>
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001ddc:	682f      	ldr	r7, [r5, #0]
 8001dde:	602b      	str	r3, [r5, #0]
 8001de0:	d032      	beq.n	8001e48 <__sflush_r+0x98>
 8001de2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001de4:	89a3      	ldrh	r3, [r4, #12]
 8001de6:	075a      	lsls	r2, r3, #29
 8001de8:	d505      	bpl.n	8001df6 <__sflush_r+0x46>
 8001dea:	6863      	ldr	r3, [r4, #4]
 8001dec:	1ac0      	subs	r0, r0, r3
 8001dee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001df0:	b10b      	cbz	r3, 8001df6 <__sflush_r+0x46>
 8001df2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001df4:	1ac0      	subs	r0, r0, r3
 8001df6:	2300      	movs	r3, #0
 8001df8:	4602      	mov	r2, r0
 8001dfa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001dfc:	6a21      	ldr	r1, [r4, #32]
 8001dfe:	4628      	mov	r0, r5
 8001e00:	47b0      	blx	r6
 8001e02:	1c43      	adds	r3, r0, #1
 8001e04:	89a3      	ldrh	r3, [r4, #12]
 8001e06:	d106      	bne.n	8001e16 <__sflush_r+0x66>
 8001e08:	6829      	ldr	r1, [r5, #0]
 8001e0a:	291d      	cmp	r1, #29
 8001e0c:	d82c      	bhi.n	8001e68 <__sflush_r+0xb8>
 8001e0e:	4a2a      	ldr	r2, [pc, #168]	; (8001eb8 <__sflush_r+0x108>)
 8001e10:	40ca      	lsrs	r2, r1
 8001e12:	07d6      	lsls	r6, r2, #31
 8001e14:	d528      	bpl.n	8001e68 <__sflush_r+0xb8>
 8001e16:	2200      	movs	r2, #0
 8001e18:	6062      	str	r2, [r4, #4]
 8001e1a:	04d9      	lsls	r1, r3, #19
 8001e1c:	6922      	ldr	r2, [r4, #16]
 8001e1e:	6022      	str	r2, [r4, #0]
 8001e20:	d504      	bpl.n	8001e2c <__sflush_r+0x7c>
 8001e22:	1c42      	adds	r2, r0, #1
 8001e24:	d101      	bne.n	8001e2a <__sflush_r+0x7a>
 8001e26:	682b      	ldr	r3, [r5, #0]
 8001e28:	b903      	cbnz	r3, 8001e2c <__sflush_r+0x7c>
 8001e2a:	6560      	str	r0, [r4, #84]	; 0x54
 8001e2c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001e2e:	602f      	str	r7, [r5, #0]
 8001e30:	2900      	cmp	r1, #0
 8001e32:	d0ca      	beq.n	8001dca <__sflush_r+0x1a>
 8001e34:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001e38:	4299      	cmp	r1, r3
 8001e3a:	d002      	beq.n	8001e42 <__sflush_r+0x92>
 8001e3c:	4628      	mov	r0, r5
 8001e3e:	f000 f9d7 	bl	80021f0 <_free_r>
 8001e42:	2000      	movs	r0, #0
 8001e44:	6360      	str	r0, [r4, #52]	; 0x34
 8001e46:	e7c1      	b.n	8001dcc <__sflush_r+0x1c>
 8001e48:	6a21      	ldr	r1, [r4, #32]
 8001e4a:	2301      	movs	r3, #1
 8001e4c:	4628      	mov	r0, r5
 8001e4e:	47b0      	blx	r6
 8001e50:	1c41      	adds	r1, r0, #1
 8001e52:	d1c7      	bne.n	8001de4 <__sflush_r+0x34>
 8001e54:	682b      	ldr	r3, [r5, #0]
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d0c4      	beq.n	8001de4 <__sflush_r+0x34>
 8001e5a:	2b1d      	cmp	r3, #29
 8001e5c:	d001      	beq.n	8001e62 <__sflush_r+0xb2>
 8001e5e:	2b16      	cmp	r3, #22
 8001e60:	d101      	bne.n	8001e66 <__sflush_r+0xb6>
 8001e62:	602f      	str	r7, [r5, #0]
 8001e64:	e7b1      	b.n	8001dca <__sflush_r+0x1a>
 8001e66:	89a3      	ldrh	r3, [r4, #12]
 8001e68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001e6c:	81a3      	strh	r3, [r4, #12]
 8001e6e:	e7ad      	b.n	8001dcc <__sflush_r+0x1c>
 8001e70:	690f      	ldr	r7, [r1, #16]
 8001e72:	2f00      	cmp	r7, #0
 8001e74:	d0a9      	beq.n	8001dca <__sflush_r+0x1a>
 8001e76:	0793      	lsls	r3, r2, #30
 8001e78:	680e      	ldr	r6, [r1, #0]
 8001e7a:	bf08      	it	eq
 8001e7c:	694b      	ldreq	r3, [r1, #20]
 8001e7e:	600f      	str	r7, [r1, #0]
 8001e80:	bf18      	it	ne
 8001e82:	2300      	movne	r3, #0
 8001e84:	eba6 0807 	sub.w	r8, r6, r7
 8001e88:	608b      	str	r3, [r1, #8]
 8001e8a:	f1b8 0f00 	cmp.w	r8, #0
 8001e8e:	dd9c      	ble.n	8001dca <__sflush_r+0x1a>
 8001e90:	6a21      	ldr	r1, [r4, #32]
 8001e92:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001e94:	4643      	mov	r3, r8
 8001e96:	463a      	mov	r2, r7
 8001e98:	4628      	mov	r0, r5
 8001e9a:	47b0      	blx	r6
 8001e9c:	2800      	cmp	r0, #0
 8001e9e:	dc06      	bgt.n	8001eae <__sflush_r+0xfe>
 8001ea0:	89a3      	ldrh	r3, [r4, #12]
 8001ea2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001ea6:	81a3      	strh	r3, [r4, #12]
 8001ea8:	f04f 30ff 	mov.w	r0, #4294967295
 8001eac:	e78e      	b.n	8001dcc <__sflush_r+0x1c>
 8001eae:	4407      	add	r7, r0
 8001eb0:	eba8 0800 	sub.w	r8, r8, r0
 8001eb4:	e7e9      	b.n	8001e8a <__sflush_r+0xda>
 8001eb6:	bf00      	nop
 8001eb8:	20400001 	subcs	r0, r0, r1

08001ebc <_fflush_r>:
 8001ebc:	b538      	push	{r3, r4, r5, lr}
 8001ebe:	690b      	ldr	r3, [r1, #16]
 8001ec0:	4605      	mov	r5, r0
 8001ec2:	460c      	mov	r4, r1
 8001ec4:	b913      	cbnz	r3, 8001ecc <_fflush_r+0x10>
 8001ec6:	2500      	movs	r5, #0
 8001ec8:	4628      	mov	r0, r5
 8001eca:	bd38      	pop	{r3, r4, r5, pc}
 8001ecc:	b118      	cbz	r0, 8001ed6 <_fflush_r+0x1a>
 8001ece:	6983      	ldr	r3, [r0, #24]
 8001ed0:	b90b      	cbnz	r3, 8001ed6 <_fflush_r+0x1a>
 8001ed2:	f000 f887 	bl	8001fe4 <__sinit>
 8001ed6:	4b14      	ldr	r3, [pc, #80]	; (8001f28 <_fflush_r+0x6c>)
 8001ed8:	429c      	cmp	r4, r3
 8001eda:	d11b      	bne.n	8001f14 <_fflush_r+0x58>
 8001edc:	686c      	ldr	r4, [r5, #4]
 8001ede:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001ee2:	2b00      	cmp	r3, #0
 8001ee4:	d0ef      	beq.n	8001ec6 <_fflush_r+0xa>
 8001ee6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001ee8:	07d0      	lsls	r0, r2, #31
 8001eea:	d404      	bmi.n	8001ef6 <_fflush_r+0x3a>
 8001eec:	0599      	lsls	r1, r3, #22
 8001eee:	d402      	bmi.n	8001ef6 <_fflush_r+0x3a>
 8001ef0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001ef2:	f000 f915 	bl	8002120 <__retarget_lock_acquire_recursive>
 8001ef6:	4628      	mov	r0, r5
 8001ef8:	4621      	mov	r1, r4
 8001efa:	f7ff ff59 	bl	8001db0 <__sflush_r>
 8001efe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001f00:	07da      	lsls	r2, r3, #31
 8001f02:	4605      	mov	r5, r0
 8001f04:	d4e0      	bmi.n	8001ec8 <_fflush_r+0xc>
 8001f06:	89a3      	ldrh	r3, [r4, #12]
 8001f08:	059b      	lsls	r3, r3, #22
 8001f0a:	d4dd      	bmi.n	8001ec8 <_fflush_r+0xc>
 8001f0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001f0e:	f000 f908 	bl	8002122 <__retarget_lock_release_recursive>
 8001f12:	e7d9      	b.n	8001ec8 <_fflush_r+0xc>
 8001f14:	4b05      	ldr	r3, [pc, #20]	; (8001f2c <_fflush_r+0x70>)
 8001f16:	429c      	cmp	r4, r3
 8001f18:	d101      	bne.n	8001f1e <_fflush_r+0x62>
 8001f1a:	68ac      	ldr	r4, [r5, #8]
 8001f1c:	e7df      	b.n	8001ede <_fflush_r+0x22>
 8001f1e:	4b04      	ldr	r3, [pc, #16]	; (8001f30 <_fflush_r+0x74>)
 8001f20:	429c      	cmp	r4, r3
 8001f22:	bf08      	it	eq
 8001f24:	68ec      	ldreq	r4, [r5, #12]
 8001f26:	e7da      	b.n	8001ede <_fflush_r+0x22>
 8001f28:	08002ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp, sp}
 8001f2c:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 8001f30:	08002ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, sp}

08001f34 <std>:
 8001f34:	2300      	movs	r3, #0
 8001f36:	b510      	push	{r4, lr}
 8001f38:	4604      	mov	r4, r0
 8001f3a:	e9c0 3300 	strd	r3, r3, [r0]
 8001f3e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001f42:	6083      	str	r3, [r0, #8]
 8001f44:	8181      	strh	r1, [r0, #12]
 8001f46:	6643      	str	r3, [r0, #100]	; 0x64
 8001f48:	81c2      	strh	r2, [r0, #14]
 8001f4a:	6183      	str	r3, [r0, #24]
 8001f4c:	4619      	mov	r1, r3
 8001f4e:	2208      	movs	r2, #8
 8001f50:	305c      	adds	r0, #92	; 0x5c
 8001f52:	f7ff fdd7 	bl	8001b04 <memset>
 8001f56:	4b05      	ldr	r3, [pc, #20]	; (8001f6c <std+0x38>)
 8001f58:	6263      	str	r3, [r4, #36]	; 0x24
 8001f5a:	4b05      	ldr	r3, [pc, #20]	; (8001f70 <std+0x3c>)
 8001f5c:	62a3      	str	r3, [r4, #40]	; 0x28
 8001f5e:	4b05      	ldr	r3, [pc, #20]	; (8001f74 <std+0x40>)
 8001f60:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001f62:	4b05      	ldr	r3, [pc, #20]	; (8001f78 <std+0x44>)
 8001f64:	6224      	str	r4, [r4, #32]
 8001f66:	6323      	str	r3, [r4, #48]	; 0x30
 8001f68:	bd10      	pop	{r4, pc}
 8001f6a:	bf00      	nop
 8001f6c:	080029ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp, sp}
 8001f70:	080029cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, fp, sp}
 8001f74:	08002a07 	stmdaeq	r0, {r0, r1, r2, r9, fp, sp}
 8001f78:	08002a2b 	stmdaeq	r0, {r0, r1, r3, r5, r9, fp, sp}

08001f7c <_cleanup_r>:
 8001f7c:	4901      	ldr	r1, [pc, #4]	; (8001f84 <_cleanup_r+0x8>)
 8001f7e:	f000 b8af 	b.w	80020e0 <_fwalk_reent>
 8001f82:	bf00      	nop
 8001f84:	08001ebd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, ip}

08001f88 <__sfmoreglue>:
 8001f88:	b570      	push	{r4, r5, r6, lr}
 8001f8a:	2268      	movs	r2, #104	; 0x68
 8001f8c:	1e4d      	subs	r5, r1, #1
 8001f8e:	4355      	muls	r5, r2
 8001f90:	460e      	mov	r6, r1
 8001f92:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8001f96:	f000 f997 	bl	80022c8 <_malloc_r>
 8001f9a:	4604      	mov	r4, r0
 8001f9c:	b140      	cbz	r0, 8001fb0 <__sfmoreglue+0x28>
 8001f9e:	2100      	movs	r1, #0
 8001fa0:	e9c0 1600 	strd	r1, r6, [r0]
 8001fa4:	300c      	adds	r0, #12
 8001fa6:	60a0      	str	r0, [r4, #8]
 8001fa8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001fac:	f7ff fdaa 	bl	8001b04 <memset>
 8001fb0:	4620      	mov	r0, r4
 8001fb2:	bd70      	pop	{r4, r5, r6, pc}

08001fb4 <__sfp_lock_acquire>:
 8001fb4:	4801      	ldr	r0, [pc, #4]	; (8001fbc <__sfp_lock_acquire+0x8>)
 8001fb6:	f000 b8b3 	b.w	8002120 <__retarget_lock_acquire_recursive>
 8001fba:	bf00      	nop
 8001fbc:	20000225 	andcs	r0, r0, r5, lsr #4

08001fc0 <__sfp_lock_release>:
 8001fc0:	4801      	ldr	r0, [pc, #4]	; (8001fc8 <__sfp_lock_release+0x8>)
 8001fc2:	f000 b8ae 	b.w	8002122 <__retarget_lock_release_recursive>
 8001fc6:	bf00      	nop
 8001fc8:	20000225 	andcs	r0, r0, r5, lsr #4

08001fcc <__sinit_lock_acquire>:
 8001fcc:	4801      	ldr	r0, [pc, #4]	; (8001fd4 <__sinit_lock_acquire+0x8>)
 8001fce:	f000 b8a7 	b.w	8002120 <__retarget_lock_acquire_recursive>
 8001fd2:	bf00      	nop
 8001fd4:	20000226 	andcs	r0, r0, r6, lsr #4

08001fd8 <__sinit_lock_release>:
 8001fd8:	4801      	ldr	r0, [pc, #4]	; (8001fe0 <__sinit_lock_release+0x8>)
 8001fda:	f000 b8a2 	b.w	8002122 <__retarget_lock_release_recursive>
 8001fde:	bf00      	nop
 8001fe0:	20000226 	andcs	r0, r0, r6, lsr #4

08001fe4 <__sinit>:
 8001fe4:	b510      	push	{r4, lr}
 8001fe6:	4604      	mov	r4, r0
 8001fe8:	f7ff fff0 	bl	8001fcc <__sinit_lock_acquire>
 8001fec:	69a3      	ldr	r3, [r4, #24]
 8001fee:	b11b      	cbz	r3, 8001ff8 <__sinit+0x14>
 8001ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ff4:	f7ff bff0 	b.w	8001fd8 <__sinit_lock_release>
 8001ff8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001ffc:	6523      	str	r3, [r4, #80]	; 0x50
 8001ffe:	4b13      	ldr	r3, [pc, #76]	; (800204c <__sinit+0x68>)
 8002000:	4a13      	ldr	r2, [pc, #76]	; (8002050 <__sinit+0x6c>)
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	62a2      	str	r2, [r4, #40]	; 0x28
 8002006:	42a3      	cmp	r3, r4
 8002008:	bf04      	itt	eq
 800200a:	2301      	moveq	r3, #1
 800200c:	61a3      	streq	r3, [r4, #24]
 800200e:	4620      	mov	r0, r4
 8002010:	f000 f820 	bl	8002054 <__sfp>
 8002014:	6060      	str	r0, [r4, #4]
 8002016:	4620      	mov	r0, r4
 8002018:	f000 f81c 	bl	8002054 <__sfp>
 800201c:	60a0      	str	r0, [r4, #8]
 800201e:	4620      	mov	r0, r4
 8002020:	f000 f818 	bl	8002054 <__sfp>
 8002024:	2200      	movs	r2, #0
 8002026:	60e0      	str	r0, [r4, #12]
 8002028:	2104      	movs	r1, #4
 800202a:	6860      	ldr	r0, [r4, #4]
 800202c:	f7ff ff82 	bl	8001f34 <std>
 8002030:	68a0      	ldr	r0, [r4, #8]
 8002032:	2201      	movs	r2, #1
 8002034:	2109      	movs	r1, #9
 8002036:	f7ff ff7d 	bl	8001f34 <std>
 800203a:	68e0      	ldr	r0, [r4, #12]
 800203c:	2202      	movs	r2, #2
 800203e:	2112      	movs	r1, #18
 8002040:	f7ff ff78 	bl	8001f34 <std>
 8002044:	2301      	movs	r3, #1
 8002046:	61a3      	str	r3, [r4, #24]
 8002048:	e7d2      	b.n	8001ff0 <__sinit+0xc>
 800204a:	bf00      	nop
 800204c:	08002ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp, sp}
 8002050:	08001f7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip}

08002054 <__sfp>:
 8002054:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002056:	4607      	mov	r7, r0
 8002058:	f7ff ffac 	bl	8001fb4 <__sfp_lock_acquire>
 800205c:	4b1e      	ldr	r3, [pc, #120]	; (80020d8 <__sfp+0x84>)
 800205e:	681e      	ldr	r6, [r3, #0]
 8002060:	69b3      	ldr	r3, [r6, #24]
 8002062:	b913      	cbnz	r3, 800206a <__sfp+0x16>
 8002064:	4630      	mov	r0, r6
 8002066:	f7ff ffbd 	bl	8001fe4 <__sinit>
 800206a:	3648      	adds	r6, #72	; 0x48
 800206c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8002070:	3b01      	subs	r3, #1
 8002072:	d503      	bpl.n	800207c <__sfp+0x28>
 8002074:	6833      	ldr	r3, [r6, #0]
 8002076:	b30b      	cbz	r3, 80020bc <__sfp+0x68>
 8002078:	6836      	ldr	r6, [r6, #0]
 800207a:	e7f7      	b.n	800206c <__sfp+0x18>
 800207c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8002080:	b9d5      	cbnz	r5, 80020b8 <__sfp+0x64>
 8002082:	4b16      	ldr	r3, [pc, #88]	; (80020dc <__sfp+0x88>)
 8002084:	60e3      	str	r3, [r4, #12]
 8002086:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800208a:	6665      	str	r5, [r4, #100]	; 0x64
 800208c:	f000 f847 	bl	800211e <__retarget_lock_init_recursive>
 8002090:	f7ff ff96 	bl	8001fc0 <__sfp_lock_release>
 8002094:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002098:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800209c:	6025      	str	r5, [r4, #0]
 800209e:	61a5      	str	r5, [r4, #24]
 80020a0:	2208      	movs	r2, #8
 80020a2:	4629      	mov	r1, r5
 80020a4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80020a8:	f7ff fd2c 	bl	8001b04 <memset>
 80020ac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80020b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80020b4:	4620      	mov	r0, r4
 80020b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80020b8:	3468      	adds	r4, #104	; 0x68
 80020ba:	e7d9      	b.n	8002070 <__sfp+0x1c>
 80020bc:	2104      	movs	r1, #4
 80020be:	4638      	mov	r0, r7
 80020c0:	f7ff ff62 	bl	8001f88 <__sfmoreglue>
 80020c4:	4604      	mov	r4, r0
 80020c6:	6030      	str	r0, [r6, #0]
 80020c8:	2800      	cmp	r0, #0
 80020ca:	d1d5      	bne.n	8002078 <__sfp+0x24>
 80020cc:	f7ff ff78 	bl	8001fc0 <__sfp_lock_release>
 80020d0:	230c      	movs	r3, #12
 80020d2:	603b      	str	r3, [r7, #0]
 80020d4:	e7ee      	b.n	80020b4 <__sfp+0x60>
 80020d6:	bf00      	nop
 80020d8:	08002ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp, sp}
 80020dc:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

080020e0 <_fwalk_reent>:
 80020e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80020e4:	4606      	mov	r6, r0
 80020e6:	4688      	mov	r8, r1
 80020e8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80020ec:	2700      	movs	r7, #0
 80020ee:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80020f2:	f1b9 0901 	subs.w	r9, r9, #1
 80020f6:	d505      	bpl.n	8002104 <_fwalk_reent+0x24>
 80020f8:	6824      	ldr	r4, [r4, #0]
 80020fa:	2c00      	cmp	r4, #0
 80020fc:	d1f7      	bne.n	80020ee <_fwalk_reent+0xe>
 80020fe:	4638      	mov	r0, r7
 8002100:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002104:	89ab      	ldrh	r3, [r5, #12]
 8002106:	2b01      	cmp	r3, #1
 8002108:	d907      	bls.n	800211a <_fwalk_reent+0x3a>
 800210a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800210e:	3301      	adds	r3, #1
 8002110:	d003      	beq.n	800211a <_fwalk_reent+0x3a>
 8002112:	4629      	mov	r1, r5
 8002114:	4630      	mov	r0, r6
 8002116:	47c0      	blx	r8
 8002118:	4307      	orrs	r7, r0
 800211a:	3568      	adds	r5, #104	; 0x68
 800211c:	e7e9      	b.n	80020f2 <_fwalk_reent+0x12>

0800211e <__retarget_lock_init_recursive>:
 800211e:	4770      	bx	lr

08002120 <__retarget_lock_acquire_recursive>:
 8002120:	4770      	bx	lr

08002122 <__retarget_lock_release_recursive>:
 8002122:	4770      	bx	lr

08002124 <__swhatbuf_r>:
 8002124:	b570      	push	{r4, r5, r6, lr}
 8002126:	460e      	mov	r6, r1
 8002128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800212c:	2900      	cmp	r1, #0
 800212e:	b096      	sub	sp, #88	; 0x58
 8002130:	4614      	mov	r4, r2
 8002132:	461d      	mov	r5, r3
 8002134:	da08      	bge.n	8002148 <__swhatbuf_r+0x24>
 8002136:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800213a:	2200      	movs	r2, #0
 800213c:	602a      	str	r2, [r5, #0]
 800213e:	061a      	lsls	r2, r3, #24
 8002140:	d410      	bmi.n	8002164 <__swhatbuf_r+0x40>
 8002142:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002146:	e00e      	b.n	8002166 <__swhatbuf_r+0x42>
 8002148:	466a      	mov	r2, sp
 800214a:	f000 fc95 	bl	8002a78 <_fstat_r>
 800214e:	2800      	cmp	r0, #0
 8002150:	dbf1      	blt.n	8002136 <__swhatbuf_r+0x12>
 8002152:	9a01      	ldr	r2, [sp, #4]
 8002154:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8002158:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800215c:	425a      	negs	r2, r3
 800215e:	415a      	adcs	r2, r3
 8002160:	602a      	str	r2, [r5, #0]
 8002162:	e7ee      	b.n	8002142 <__swhatbuf_r+0x1e>
 8002164:	2340      	movs	r3, #64	; 0x40
 8002166:	2000      	movs	r0, #0
 8002168:	6023      	str	r3, [r4, #0]
 800216a:	b016      	add	sp, #88	; 0x58
 800216c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002170 <__smakebuf_r>:
 8002170:	898b      	ldrh	r3, [r1, #12]
 8002172:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002174:	079d      	lsls	r5, r3, #30
 8002176:	4606      	mov	r6, r0
 8002178:	460c      	mov	r4, r1
 800217a:	d507      	bpl.n	800218c <__smakebuf_r+0x1c>
 800217c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8002180:	6023      	str	r3, [r4, #0]
 8002182:	6123      	str	r3, [r4, #16]
 8002184:	2301      	movs	r3, #1
 8002186:	6163      	str	r3, [r4, #20]
 8002188:	b002      	add	sp, #8
 800218a:	bd70      	pop	{r4, r5, r6, pc}
 800218c:	ab01      	add	r3, sp, #4
 800218e:	466a      	mov	r2, sp
 8002190:	f7ff ffc8 	bl	8002124 <__swhatbuf_r>
 8002194:	9900      	ldr	r1, [sp, #0]
 8002196:	4605      	mov	r5, r0
 8002198:	4630      	mov	r0, r6
 800219a:	f000 f895 	bl	80022c8 <_malloc_r>
 800219e:	b948      	cbnz	r0, 80021b4 <__smakebuf_r+0x44>
 80021a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80021a4:	059a      	lsls	r2, r3, #22
 80021a6:	d4ef      	bmi.n	8002188 <__smakebuf_r+0x18>
 80021a8:	f023 0303 	bic.w	r3, r3, #3
 80021ac:	f043 0302 	orr.w	r3, r3, #2
 80021b0:	81a3      	strh	r3, [r4, #12]
 80021b2:	e7e3      	b.n	800217c <__smakebuf_r+0xc>
 80021b4:	4b0d      	ldr	r3, [pc, #52]	; (80021ec <__smakebuf_r+0x7c>)
 80021b6:	62b3      	str	r3, [r6, #40]	; 0x28
 80021b8:	89a3      	ldrh	r3, [r4, #12]
 80021ba:	6020      	str	r0, [r4, #0]
 80021bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80021c0:	81a3      	strh	r3, [r4, #12]
 80021c2:	9b00      	ldr	r3, [sp, #0]
 80021c4:	6163      	str	r3, [r4, #20]
 80021c6:	9b01      	ldr	r3, [sp, #4]
 80021c8:	6120      	str	r0, [r4, #16]
 80021ca:	b15b      	cbz	r3, 80021e4 <__smakebuf_r+0x74>
 80021cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80021d0:	4630      	mov	r0, r6
 80021d2:	f000 fc63 	bl	8002a9c <_isatty_r>
 80021d6:	b128      	cbz	r0, 80021e4 <__smakebuf_r+0x74>
 80021d8:	89a3      	ldrh	r3, [r4, #12]
 80021da:	f023 0303 	bic.w	r3, r3, #3
 80021de:	f043 0301 	orr.w	r3, r3, #1
 80021e2:	81a3      	strh	r3, [r4, #12]
 80021e4:	89a0      	ldrh	r0, [r4, #12]
 80021e6:	4305      	orrs	r5, r0
 80021e8:	81a5      	strh	r5, [r4, #12]
 80021ea:	e7cd      	b.n	8002188 <__smakebuf_r+0x18>
 80021ec:	08001f7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip}

080021f0 <_free_r>:
 80021f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80021f2:	2900      	cmp	r1, #0
 80021f4:	d044      	beq.n	8002280 <_free_r+0x90>
 80021f6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80021fa:	9001      	str	r0, [sp, #4]
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	f1a1 0404 	sub.w	r4, r1, #4
 8002202:	bfb8      	it	lt
 8002204:	18e4      	addlt	r4, r4, r3
 8002206:	f000 fc6b 	bl	8002ae0 <__malloc_lock>
 800220a:	4a1e      	ldr	r2, [pc, #120]	; (8002284 <_free_r+0x94>)
 800220c:	9801      	ldr	r0, [sp, #4]
 800220e:	6813      	ldr	r3, [r2, #0]
 8002210:	b933      	cbnz	r3, 8002220 <_free_r+0x30>
 8002212:	6063      	str	r3, [r4, #4]
 8002214:	6014      	str	r4, [r2, #0]
 8002216:	b003      	add	sp, #12
 8002218:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800221c:	f000 bc66 	b.w	8002aec <__malloc_unlock>
 8002220:	42a3      	cmp	r3, r4
 8002222:	d908      	bls.n	8002236 <_free_r+0x46>
 8002224:	6825      	ldr	r5, [r4, #0]
 8002226:	1961      	adds	r1, r4, r5
 8002228:	428b      	cmp	r3, r1
 800222a:	bf01      	itttt	eq
 800222c:	6819      	ldreq	r1, [r3, #0]
 800222e:	685b      	ldreq	r3, [r3, #4]
 8002230:	1949      	addeq	r1, r1, r5
 8002232:	6021      	streq	r1, [r4, #0]
 8002234:	e7ed      	b.n	8002212 <_free_r+0x22>
 8002236:	461a      	mov	r2, r3
 8002238:	685b      	ldr	r3, [r3, #4]
 800223a:	b10b      	cbz	r3, 8002240 <_free_r+0x50>
 800223c:	42a3      	cmp	r3, r4
 800223e:	d9fa      	bls.n	8002236 <_free_r+0x46>
 8002240:	6811      	ldr	r1, [r2, #0]
 8002242:	1855      	adds	r5, r2, r1
 8002244:	42a5      	cmp	r5, r4
 8002246:	d10b      	bne.n	8002260 <_free_r+0x70>
 8002248:	6824      	ldr	r4, [r4, #0]
 800224a:	4421      	add	r1, r4
 800224c:	1854      	adds	r4, r2, r1
 800224e:	42a3      	cmp	r3, r4
 8002250:	6011      	str	r1, [r2, #0]
 8002252:	d1e0      	bne.n	8002216 <_free_r+0x26>
 8002254:	681c      	ldr	r4, [r3, #0]
 8002256:	685b      	ldr	r3, [r3, #4]
 8002258:	6053      	str	r3, [r2, #4]
 800225a:	4421      	add	r1, r4
 800225c:	6011      	str	r1, [r2, #0]
 800225e:	e7da      	b.n	8002216 <_free_r+0x26>
 8002260:	d902      	bls.n	8002268 <_free_r+0x78>
 8002262:	230c      	movs	r3, #12
 8002264:	6003      	str	r3, [r0, #0]
 8002266:	e7d6      	b.n	8002216 <_free_r+0x26>
 8002268:	6825      	ldr	r5, [r4, #0]
 800226a:	1961      	adds	r1, r4, r5
 800226c:	428b      	cmp	r3, r1
 800226e:	bf04      	itt	eq
 8002270:	6819      	ldreq	r1, [r3, #0]
 8002272:	685b      	ldreq	r3, [r3, #4]
 8002274:	6063      	str	r3, [r4, #4]
 8002276:	bf04      	itt	eq
 8002278:	1949      	addeq	r1, r1, r5
 800227a:	6021      	streq	r1, [r4, #0]
 800227c:	6054      	str	r4, [r2, #4]
 800227e:	e7ca      	b.n	8002216 <_free_r+0x26>
 8002280:	b003      	add	sp, #12
 8002282:	bd30      	pop	{r4, r5, pc}
 8002284:	20000228 	andcs	r0, r0, r8, lsr #4

08002288 <sbrk_aligned>:
 8002288:	b570      	push	{r4, r5, r6, lr}
 800228a:	4e0e      	ldr	r6, [pc, #56]	; (80022c4 <sbrk_aligned+0x3c>)
 800228c:	460c      	mov	r4, r1
 800228e:	6831      	ldr	r1, [r6, #0]
 8002290:	4605      	mov	r5, r0
 8002292:	b911      	cbnz	r1, 800229a <sbrk_aligned+0x12>
 8002294:	f000 fb7a 	bl	800298c <_sbrk_r>
 8002298:	6030      	str	r0, [r6, #0]
 800229a:	4621      	mov	r1, r4
 800229c:	4628      	mov	r0, r5
 800229e:	f000 fb75 	bl	800298c <_sbrk_r>
 80022a2:	1c43      	adds	r3, r0, #1
 80022a4:	d00a      	beq.n	80022bc <sbrk_aligned+0x34>
 80022a6:	1cc4      	adds	r4, r0, #3
 80022a8:	f024 0403 	bic.w	r4, r4, #3
 80022ac:	42a0      	cmp	r0, r4
 80022ae:	d007      	beq.n	80022c0 <sbrk_aligned+0x38>
 80022b0:	1a21      	subs	r1, r4, r0
 80022b2:	4628      	mov	r0, r5
 80022b4:	f000 fb6a 	bl	800298c <_sbrk_r>
 80022b8:	3001      	adds	r0, #1
 80022ba:	d101      	bne.n	80022c0 <sbrk_aligned+0x38>
 80022bc:	f04f 34ff 	mov.w	r4, #4294967295
 80022c0:	4620      	mov	r0, r4
 80022c2:	bd70      	pop	{r4, r5, r6, pc}
 80022c4:	2000022c 	andcs	r0, r0, ip, lsr #4

080022c8 <_malloc_r>:
 80022c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80022cc:	1ccd      	adds	r5, r1, #3
 80022ce:	f025 0503 	bic.w	r5, r5, #3
 80022d2:	3508      	adds	r5, #8
 80022d4:	2d0c      	cmp	r5, #12
 80022d6:	bf38      	it	cc
 80022d8:	250c      	movcc	r5, #12
 80022da:	2d00      	cmp	r5, #0
 80022dc:	4607      	mov	r7, r0
 80022de:	db01      	blt.n	80022e4 <_malloc_r+0x1c>
 80022e0:	42a9      	cmp	r1, r5
 80022e2:	d905      	bls.n	80022f0 <_malloc_r+0x28>
 80022e4:	230c      	movs	r3, #12
 80022e6:	603b      	str	r3, [r7, #0]
 80022e8:	2600      	movs	r6, #0
 80022ea:	4630      	mov	r0, r6
 80022ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80022f0:	4e2e      	ldr	r6, [pc, #184]	; (80023ac <_malloc_r+0xe4>)
 80022f2:	f000 fbf5 	bl	8002ae0 <__malloc_lock>
 80022f6:	6833      	ldr	r3, [r6, #0]
 80022f8:	461c      	mov	r4, r3
 80022fa:	bb34      	cbnz	r4, 800234a <_malloc_r+0x82>
 80022fc:	4629      	mov	r1, r5
 80022fe:	4638      	mov	r0, r7
 8002300:	f7ff ffc2 	bl	8002288 <sbrk_aligned>
 8002304:	1c43      	adds	r3, r0, #1
 8002306:	4604      	mov	r4, r0
 8002308:	d14d      	bne.n	80023a6 <_malloc_r+0xde>
 800230a:	6834      	ldr	r4, [r6, #0]
 800230c:	4626      	mov	r6, r4
 800230e:	2e00      	cmp	r6, #0
 8002310:	d140      	bne.n	8002394 <_malloc_r+0xcc>
 8002312:	6823      	ldr	r3, [r4, #0]
 8002314:	4631      	mov	r1, r6
 8002316:	4638      	mov	r0, r7
 8002318:	eb04 0803 	add.w	r8, r4, r3
 800231c:	f000 fb36 	bl	800298c <_sbrk_r>
 8002320:	4580      	cmp	r8, r0
 8002322:	d13a      	bne.n	800239a <_malloc_r+0xd2>
 8002324:	6821      	ldr	r1, [r4, #0]
 8002326:	3503      	adds	r5, #3
 8002328:	1a6d      	subs	r5, r5, r1
 800232a:	f025 0503 	bic.w	r5, r5, #3
 800232e:	3508      	adds	r5, #8
 8002330:	2d0c      	cmp	r5, #12
 8002332:	bf38      	it	cc
 8002334:	250c      	movcc	r5, #12
 8002336:	4629      	mov	r1, r5
 8002338:	4638      	mov	r0, r7
 800233a:	f7ff ffa5 	bl	8002288 <sbrk_aligned>
 800233e:	3001      	adds	r0, #1
 8002340:	d02b      	beq.n	800239a <_malloc_r+0xd2>
 8002342:	6823      	ldr	r3, [r4, #0]
 8002344:	442b      	add	r3, r5
 8002346:	6023      	str	r3, [r4, #0]
 8002348:	e00e      	b.n	8002368 <_malloc_r+0xa0>
 800234a:	6822      	ldr	r2, [r4, #0]
 800234c:	1b52      	subs	r2, r2, r5
 800234e:	d41e      	bmi.n	800238e <_malloc_r+0xc6>
 8002350:	2a0b      	cmp	r2, #11
 8002352:	d916      	bls.n	8002382 <_malloc_r+0xba>
 8002354:	1961      	adds	r1, r4, r5
 8002356:	42a3      	cmp	r3, r4
 8002358:	6025      	str	r5, [r4, #0]
 800235a:	bf18      	it	ne
 800235c:	6059      	strne	r1, [r3, #4]
 800235e:	6863      	ldr	r3, [r4, #4]
 8002360:	bf08      	it	eq
 8002362:	6031      	streq	r1, [r6, #0]
 8002364:	5162      	str	r2, [r4, r5]
 8002366:	604b      	str	r3, [r1, #4]
 8002368:	4638      	mov	r0, r7
 800236a:	f104 060b 	add.w	r6, r4, #11
 800236e:	f000 fbbd 	bl	8002aec <__malloc_unlock>
 8002372:	f026 0607 	bic.w	r6, r6, #7
 8002376:	1d23      	adds	r3, r4, #4
 8002378:	1af2      	subs	r2, r6, r3
 800237a:	d0b6      	beq.n	80022ea <_malloc_r+0x22>
 800237c:	1b9b      	subs	r3, r3, r6
 800237e:	50a3      	str	r3, [r4, r2]
 8002380:	e7b3      	b.n	80022ea <_malloc_r+0x22>
 8002382:	6862      	ldr	r2, [r4, #4]
 8002384:	42a3      	cmp	r3, r4
 8002386:	bf0c      	ite	eq
 8002388:	6032      	streq	r2, [r6, #0]
 800238a:	605a      	strne	r2, [r3, #4]
 800238c:	e7ec      	b.n	8002368 <_malloc_r+0xa0>
 800238e:	4623      	mov	r3, r4
 8002390:	6864      	ldr	r4, [r4, #4]
 8002392:	e7b2      	b.n	80022fa <_malloc_r+0x32>
 8002394:	4634      	mov	r4, r6
 8002396:	6876      	ldr	r6, [r6, #4]
 8002398:	e7b9      	b.n	800230e <_malloc_r+0x46>
 800239a:	230c      	movs	r3, #12
 800239c:	603b      	str	r3, [r7, #0]
 800239e:	4638      	mov	r0, r7
 80023a0:	f000 fba4 	bl	8002aec <__malloc_unlock>
 80023a4:	e7a1      	b.n	80022ea <_malloc_r+0x22>
 80023a6:	6025      	str	r5, [r4, #0]
 80023a8:	e7de      	b.n	8002368 <_malloc_r+0xa0>
 80023aa:	bf00      	nop
 80023ac:	20000228 	andcs	r0, r0, r8, lsr #4

080023b0 <__sfputc_r>:
 80023b0:	6893      	ldr	r3, [r2, #8]
 80023b2:	3b01      	subs	r3, #1
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	b410      	push	{r4}
 80023b8:	6093      	str	r3, [r2, #8]
 80023ba:	da08      	bge.n	80023ce <__sfputc_r+0x1e>
 80023bc:	6994      	ldr	r4, [r2, #24]
 80023be:	42a3      	cmp	r3, r4
 80023c0:	db01      	blt.n	80023c6 <__sfputc_r+0x16>
 80023c2:	290a      	cmp	r1, #10
 80023c4:	d103      	bne.n	80023ce <__sfputc_r+0x1e>
 80023c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80023ca:	f7ff bc31 	b.w	8001c30 <__swbuf_r>
 80023ce:	6813      	ldr	r3, [r2, #0]
 80023d0:	1c58      	adds	r0, r3, #1
 80023d2:	6010      	str	r0, [r2, #0]
 80023d4:	7019      	strb	r1, [r3, #0]
 80023d6:	4608      	mov	r0, r1
 80023d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80023dc:	4770      	bx	lr

080023de <__sfputs_r>:
 80023de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023e0:	4606      	mov	r6, r0
 80023e2:	460f      	mov	r7, r1
 80023e4:	4614      	mov	r4, r2
 80023e6:	18d5      	adds	r5, r2, r3
 80023e8:	42ac      	cmp	r4, r5
 80023ea:	d101      	bne.n	80023f0 <__sfputs_r+0x12>
 80023ec:	2000      	movs	r0, #0
 80023ee:	e007      	b.n	8002400 <__sfputs_r+0x22>
 80023f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80023f4:	463a      	mov	r2, r7
 80023f6:	4630      	mov	r0, r6
 80023f8:	f7ff ffda 	bl	80023b0 <__sfputc_r>
 80023fc:	1c43      	adds	r3, r0, #1
 80023fe:	d1f3      	bne.n	80023e8 <__sfputs_r+0xa>
 8002400:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08002404 <_vfiprintf_r>:
 8002404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002408:	460d      	mov	r5, r1
 800240a:	b09d      	sub	sp, #116	; 0x74
 800240c:	4614      	mov	r4, r2
 800240e:	4698      	mov	r8, r3
 8002410:	4606      	mov	r6, r0
 8002412:	b118      	cbz	r0, 800241c <_vfiprintf_r+0x18>
 8002414:	6983      	ldr	r3, [r0, #24]
 8002416:	b90b      	cbnz	r3, 800241c <_vfiprintf_r+0x18>
 8002418:	f7ff fde4 	bl	8001fe4 <__sinit>
 800241c:	4b89      	ldr	r3, [pc, #548]	; (8002644 <_vfiprintf_r+0x240>)
 800241e:	429d      	cmp	r5, r3
 8002420:	d11b      	bne.n	800245a <_vfiprintf_r+0x56>
 8002422:	6875      	ldr	r5, [r6, #4]
 8002424:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002426:	07d9      	lsls	r1, r3, #31
 8002428:	d405      	bmi.n	8002436 <_vfiprintf_r+0x32>
 800242a:	89ab      	ldrh	r3, [r5, #12]
 800242c:	059a      	lsls	r2, r3, #22
 800242e:	d402      	bmi.n	8002436 <_vfiprintf_r+0x32>
 8002430:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002432:	f7ff fe75 	bl	8002120 <__retarget_lock_acquire_recursive>
 8002436:	89ab      	ldrh	r3, [r5, #12]
 8002438:	071b      	lsls	r3, r3, #28
 800243a:	d501      	bpl.n	8002440 <_vfiprintf_r+0x3c>
 800243c:	692b      	ldr	r3, [r5, #16]
 800243e:	b9eb      	cbnz	r3, 800247c <_vfiprintf_r+0x78>
 8002440:	4629      	mov	r1, r5
 8002442:	4630      	mov	r0, r6
 8002444:	f7ff fc46 	bl	8001cd4 <__swsetup_r>
 8002448:	b1c0      	cbz	r0, 800247c <_vfiprintf_r+0x78>
 800244a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800244c:	07dc      	lsls	r4, r3, #31
 800244e:	d50e      	bpl.n	800246e <_vfiprintf_r+0x6a>
 8002450:	f04f 30ff 	mov.w	r0, #4294967295
 8002454:	b01d      	add	sp, #116	; 0x74
 8002456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800245a:	4b7b      	ldr	r3, [pc, #492]	; (8002648 <_vfiprintf_r+0x244>)
 800245c:	429d      	cmp	r5, r3
 800245e:	d101      	bne.n	8002464 <_vfiprintf_r+0x60>
 8002460:	68b5      	ldr	r5, [r6, #8]
 8002462:	e7df      	b.n	8002424 <_vfiprintf_r+0x20>
 8002464:	4b79      	ldr	r3, [pc, #484]	; (800264c <_vfiprintf_r+0x248>)
 8002466:	429d      	cmp	r5, r3
 8002468:	bf08      	it	eq
 800246a:	68f5      	ldreq	r5, [r6, #12]
 800246c:	e7da      	b.n	8002424 <_vfiprintf_r+0x20>
 800246e:	89ab      	ldrh	r3, [r5, #12]
 8002470:	0598      	lsls	r0, r3, #22
 8002472:	d4ed      	bmi.n	8002450 <_vfiprintf_r+0x4c>
 8002474:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002476:	f7ff fe54 	bl	8002122 <__retarget_lock_release_recursive>
 800247a:	e7e9      	b.n	8002450 <_vfiprintf_r+0x4c>
 800247c:	2300      	movs	r3, #0
 800247e:	9309      	str	r3, [sp, #36]	; 0x24
 8002480:	2320      	movs	r3, #32
 8002482:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002486:	f8cd 800c 	str.w	r8, [sp, #12]
 800248a:	2330      	movs	r3, #48	; 0x30
 800248c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8002650 <_vfiprintf_r+0x24c>
 8002490:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002494:	f04f 0901 	mov.w	r9, #1
 8002498:	4623      	mov	r3, r4
 800249a:	469a      	mov	sl, r3
 800249c:	f813 2b01 	ldrb.w	r2, [r3], #1
 80024a0:	b10a      	cbz	r2, 80024a6 <_vfiprintf_r+0xa2>
 80024a2:	2a25      	cmp	r2, #37	; 0x25
 80024a4:	d1f9      	bne.n	800249a <_vfiprintf_r+0x96>
 80024a6:	ebba 0b04 	subs.w	fp, sl, r4
 80024aa:	d00b      	beq.n	80024c4 <_vfiprintf_r+0xc0>
 80024ac:	465b      	mov	r3, fp
 80024ae:	4622      	mov	r2, r4
 80024b0:	4629      	mov	r1, r5
 80024b2:	4630      	mov	r0, r6
 80024b4:	f7ff ff93 	bl	80023de <__sfputs_r>
 80024b8:	3001      	adds	r0, #1
 80024ba:	f000 80aa 	beq.w	8002612 <_vfiprintf_r+0x20e>
 80024be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80024c0:	445a      	add	r2, fp
 80024c2:	9209      	str	r2, [sp, #36]	; 0x24
 80024c4:	f89a 3000 	ldrb.w	r3, [sl]
 80024c8:	2b00      	cmp	r3, #0
 80024ca:	f000 80a2 	beq.w	8002612 <_vfiprintf_r+0x20e>
 80024ce:	2300      	movs	r3, #0
 80024d0:	f04f 32ff 	mov.w	r2, #4294967295
 80024d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80024d8:	f10a 0a01 	add.w	sl, sl, #1
 80024dc:	9304      	str	r3, [sp, #16]
 80024de:	9307      	str	r3, [sp, #28]
 80024e0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80024e4:	931a      	str	r3, [sp, #104]	; 0x68
 80024e6:	4654      	mov	r4, sl
 80024e8:	2205      	movs	r2, #5
 80024ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80024ee:	4858      	ldr	r0, [pc, #352]	; (8002650 <_vfiprintf_r+0x24c>)
 80024f0:	f7fd fe96 	bl	8000220 <memchr>
 80024f4:	9a04      	ldr	r2, [sp, #16]
 80024f6:	b9d8      	cbnz	r0, 8002530 <_vfiprintf_r+0x12c>
 80024f8:	06d1      	lsls	r1, r2, #27
 80024fa:	bf44      	itt	mi
 80024fc:	2320      	movmi	r3, #32
 80024fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002502:	0713      	lsls	r3, r2, #28
 8002504:	bf44      	itt	mi
 8002506:	232b      	movmi	r3, #43	; 0x2b
 8002508:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800250c:	f89a 3000 	ldrb.w	r3, [sl]
 8002510:	2b2a      	cmp	r3, #42	; 0x2a
 8002512:	d015      	beq.n	8002540 <_vfiprintf_r+0x13c>
 8002514:	9a07      	ldr	r2, [sp, #28]
 8002516:	4654      	mov	r4, sl
 8002518:	2000      	movs	r0, #0
 800251a:	f04f 0c0a 	mov.w	ip, #10
 800251e:	4621      	mov	r1, r4
 8002520:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002524:	3b30      	subs	r3, #48	; 0x30
 8002526:	2b09      	cmp	r3, #9
 8002528:	d94e      	bls.n	80025c8 <_vfiprintf_r+0x1c4>
 800252a:	b1b0      	cbz	r0, 800255a <_vfiprintf_r+0x156>
 800252c:	9207      	str	r2, [sp, #28]
 800252e:	e014      	b.n	800255a <_vfiprintf_r+0x156>
 8002530:	eba0 0308 	sub.w	r3, r0, r8
 8002534:	fa09 f303 	lsl.w	r3, r9, r3
 8002538:	4313      	orrs	r3, r2
 800253a:	9304      	str	r3, [sp, #16]
 800253c:	46a2      	mov	sl, r4
 800253e:	e7d2      	b.n	80024e6 <_vfiprintf_r+0xe2>
 8002540:	9b03      	ldr	r3, [sp, #12]
 8002542:	1d19      	adds	r1, r3, #4
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	9103      	str	r1, [sp, #12]
 8002548:	2b00      	cmp	r3, #0
 800254a:	bfbb      	ittet	lt
 800254c:	425b      	neglt	r3, r3
 800254e:	f042 0202 	orrlt.w	r2, r2, #2
 8002552:	9307      	strge	r3, [sp, #28]
 8002554:	9307      	strlt	r3, [sp, #28]
 8002556:	bfb8      	it	lt
 8002558:	9204      	strlt	r2, [sp, #16]
 800255a:	7823      	ldrb	r3, [r4, #0]
 800255c:	2b2e      	cmp	r3, #46	; 0x2e
 800255e:	d10c      	bne.n	800257a <_vfiprintf_r+0x176>
 8002560:	7863      	ldrb	r3, [r4, #1]
 8002562:	2b2a      	cmp	r3, #42	; 0x2a
 8002564:	d135      	bne.n	80025d2 <_vfiprintf_r+0x1ce>
 8002566:	9b03      	ldr	r3, [sp, #12]
 8002568:	1d1a      	adds	r2, r3, #4
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	9203      	str	r2, [sp, #12]
 800256e:	2b00      	cmp	r3, #0
 8002570:	bfb8      	it	lt
 8002572:	f04f 33ff 	movlt.w	r3, #4294967295
 8002576:	3402      	adds	r4, #2
 8002578:	9305      	str	r3, [sp, #20]
 800257a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8002660 <_vfiprintf_r+0x25c>
 800257e:	7821      	ldrb	r1, [r4, #0]
 8002580:	2203      	movs	r2, #3
 8002582:	4650      	mov	r0, sl
 8002584:	f7fd fe4c 	bl	8000220 <memchr>
 8002588:	b140      	cbz	r0, 800259c <_vfiprintf_r+0x198>
 800258a:	2340      	movs	r3, #64	; 0x40
 800258c:	eba0 000a 	sub.w	r0, r0, sl
 8002590:	fa03 f000 	lsl.w	r0, r3, r0
 8002594:	9b04      	ldr	r3, [sp, #16]
 8002596:	4303      	orrs	r3, r0
 8002598:	3401      	adds	r4, #1
 800259a:	9304      	str	r3, [sp, #16]
 800259c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80025a0:	482c      	ldr	r0, [pc, #176]	; (8002654 <_vfiprintf_r+0x250>)
 80025a2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80025a6:	2206      	movs	r2, #6
 80025a8:	f7fd fe3a 	bl	8000220 <memchr>
 80025ac:	2800      	cmp	r0, #0
 80025ae:	d03f      	beq.n	8002630 <_vfiprintf_r+0x22c>
 80025b0:	4b29      	ldr	r3, [pc, #164]	; (8002658 <_vfiprintf_r+0x254>)
 80025b2:	bb1b      	cbnz	r3, 80025fc <_vfiprintf_r+0x1f8>
 80025b4:	9b03      	ldr	r3, [sp, #12]
 80025b6:	3307      	adds	r3, #7
 80025b8:	f023 0307 	bic.w	r3, r3, #7
 80025bc:	3308      	adds	r3, #8
 80025be:	9303      	str	r3, [sp, #12]
 80025c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80025c2:	443b      	add	r3, r7
 80025c4:	9309      	str	r3, [sp, #36]	; 0x24
 80025c6:	e767      	b.n	8002498 <_vfiprintf_r+0x94>
 80025c8:	fb0c 3202 	mla	r2, ip, r2, r3
 80025cc:	460c      	mov	r4, r1
 80025ce:	2001      	movs	r0, #1
 80025d0:	e7a5      	b.n	800251e <_vfiprintf_r+0x11a>
 80025d2:	2300      	movs	r3, #0
 80025d4:	3401      	adds	r4, #1
 80025d6:	9305      	str	r3, [sp, #20]
 80025d8:	4619      	mov	r1, r3
 80025da:	f04f 0c0a 	mov.w	ip, #10
 80025de:	4620      	mov	r0, r4
 80025e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80025e4:	3a30      	subs	r2, #48	; 0x30
 80025e6:	2a09      	cmp	r2, #9
 80025e8:	d903      	bls.n	80025f2 <_vfiprintf_r+0x1ee>
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d0c5      	beq.n	800257a <_vfiprintf_r+0x176>
 80025ee:	9105      	str	r1, [sp, #20]
 80025f0:	e7c3      	b.n	800257a <_vfiprintf_r+0x176>
 80025f2:	fb0c 2101 	mla	r1, ip, r1, r2
 80025f6:	4604      	mov	r4, r0
 80025f8:	2301      	movs	r3, #1
 80025fa:	e7f0      	b.n	80025de <_vfiprintf_r+0x1da>
 80025fc:	ab03      	add	r3, sp, #12
 80025fe:	9300      	str	r3, [sp, #0]
 8002600:	462a      	mov	r2, r5
 8002602:	4b16      	ldr	r3, [pc, #88]	; (800265c <_vfiprintf_r+0x258>)
 8002604:	a904      	add	r1, sp, #16
 8002606:	4630      	mov	r0, r6
 8002608:	f3af 8000 	nop.w
 800260c:	4607      	mov	r7, r0
 800260e:	1c78      	adds	r0, r7, #1
 8002610:	d1d6      	bne.n	80025c0 <_vfiprintf_r+0x1bc>
 8002612:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002614:	07d9      	lsls	r1, r3, #31
 8002616:	d405      	bmi.n	8002624 <_vfiprintf_r+0x220>
 8002618:	89ab      	ldrh	r3, [r5, #12]
 800261a:	059a      	lsls	r2, r3, #22
 800261c:	d402      	bmi.n	8002624 <_vfiprintf_r+0x220>
 800261e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002620:	f7ff fd7f 	bl	8002122 <__retarget_lock_release_recursive>
 8002624:	89ab      	ldrh	r3, [r5, #12]
 8002626:	065b      	lsls	r3, r3, #25
 8002628:	f53f af12 	bmi.w	8002450 <_vfiprintf_r+0x4c>
 800262c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800262e:	e711      	b.n	8002454 <_vfiprintf_r+0x50>
 8002630:	ab03      	add	r3, sp, #12
 8002632:	9300      	str	r3, [sp, #0]
 8002634:	462a      	mov	r2, r5
 8002636:	4b09      	ldr	r3, [pc, #36]	; (800265c <_vfiprintf_r+0x258>)
 8002638:	a904      	add	r1, sp, #16
 800263a:	4630      	mov	r0, r6
 800263c:	f000 f880 	bl	8002740 <_printf_i>
 8002640:	e7e4      	b.n	800260c <_vfiprintf_r+0x208>
 8002642:	bf00      	nop
 8002644:	08002ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp, sp}
 8002648:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 800264c:	08002ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, sp}
 8002650:	08002f34 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, fp, sp}
 8002654:	08002f3e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl, fp, sp}
 8002658:	00000000 	andeq	r0, r0, r0
 800265c:	080023df 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sp}
 8002660:	08002f3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, fp, sp}

08002664 <_printf_common>:
 8002664:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002668:	4616      	mov	r6, r2
 800266a:	4699      	mov	r9, r3
 800266c:	688a      	ldr	r2, [r1, #8]
 800266e:	690b      	ldr	r3, [r1, #16]
 8002670:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002674:	4293      	cmp	r3, r2
 8002676:	bfb8      	it	lt
 8002678:	4613      	movlt	r3, r2
 800267a:	6033      	str	r3, [r6, #0]
 800267c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002680:	4607      	mov	r7, r0
 8002682:	460c      	mov	r4, r1
 8002684:	b10a      	cbz	r2, 800268a <_printf_common+0x26>
 8002686:	3301      	adds	r3, #1
 8002688:	6033      	str	r3, [r6, #0]
 800268a:	6823      	ldr	r3, [r4, #0]
 800268c:	0699      	lsls	r1, r3, #26
 800268e:	bf42      	ittt	mi
 8002690:	6833      	ldrmi	r3, [r6, #0]
 8002692:	3302      	addmi	r3, #2
 8002694:	6033      	strmi	r3, [r6, #0]
 8002696:	6825      	ldr	r5, [r4, #0]
 8002698:	f015 0506 	ands.w	r5, r5, #6
 800269c:	d106      	bne.n	80026ac <_printf_common+0x48>
 800269e:	f104 0a19 	add.w	sl, r4, #25
 80026a2:	68e3      	ldr	r3, [r4, #12]
 80026a4:	6832      	ldr	r2, [r6, #0]
 80026a6:	1a9b      	subs	r3, r3, r2
 80026a8:	42ab      	cmp	r3, r5
 80026aa:	dc26      	bgt.n	80026fa <_printf_common+0x96>
 80026ac:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80026b0:	1e13      	subs	r3, r2, #0
 80026b2:	6822      	ldr	r2, [r4, #0]
 80026b4:	bf18      	it	ne
 80026b6:	2301      	movne	r3, #1
 80026b8:	0692      	lsls	r2, r2, #26
 80026ba:	d42b      	bmi.n	8002714 <_printf_common+0xb0>
 80026bc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80026c0:	4649      	mov	r1, r9
 80026c2:	4638      	mov	r0, r7
 80026c4:	47c0      	blx	r8
 80026c6:	3001      	adds	r0, #1
 80026c8:	d01e      	beq.n	8002708 <_printf_common+0xa4>
 80026ca:	6823      	ldr	r3, [r4, #0]
 80026cc:	68e5      	ldr	r5, [r4, #12]
 80026ce:	6832      	ldr	r2, [r6, #0]
 80026d0:	f003 0306 	and.w	r3, r3, #6
 80026d4:	2b04      	cmp	r3, #4
 80026d6:	bf08      	it	eq
 80026d8:	1aad      	subeq	r5, r5, r2
 80026da:	68a3      	ldr	r3, [r4, #8]
 80026dc:	6922      	ldr	r2, [r4, #16]
 80026de:	bf0c      	ite	eq
 80026e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80026e4:	2500      	movne	r5, #0
 80026e6:	4293      	cmp	r3, r2
 80026e8:	bfc4      	itt	gt
 80026ea:	1a9b      	subgt	r3, r3, r2
 80026ec:	18ed      	addgt	r5, r5, r3
 80026ee:	2600      	movs	r6, #0
 80026f0:	341a      	adds	r4, #26
 80026f2:	42b5      	cmp	r5, r6
 80026f4:	d11a      	bne.n	800272c <_printf_common+0xc8>
 80026f6:	2000      	movs	r0, #0
 80026f8:	e008      	b.n	800270c <_printf_common+0xa8>
 80026fa:	2301      	movs	r3, #1
 80026fc:	4652      	mov	r2, sl
 80026fe:	4649      	mov	r1, r9
 8002700:	4638      	mov	r0, r7
 8002702:	47c0      	blx	r8
 8002704:	3001      	adds	r0, #1
 8002706:	d103      	bne.n	8002710 <_printf_common+0xac>
 8002708:	f04f 30ff 	mov.w	r0, #4294967295
 800270c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002710:	3501      	adds	r5, #1
 8002712:	e7c6      	b.n	80026a2 <_printf_common+0x3e>
 8002714:	18e1      	adds	r1, r4, r3
 8002716:	1c5a      	adds	r2, r3, #1
 8002718:	2030      	movs	r0, #48	; 0x30
 800271a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800271e:	4422      	add	r2, r4
 8002720:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002724:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002728:	3302      	adds	r3, #2
 800272a:	e7c7      	b.n	80026bc <_printf_common+0x58>
 800272c:	2301      	movs	r3, #1
 800272e:	4622      	mov	r2, r4
 8002730:	4649      	mov	r1, r9
 8002732:	4638      	mov	r0, r7
 8002734:	47c0      	blx	r8
 8002736:	3001      	adds	r0, #1
 8002738:	d0e6      	beq.n	8002708 <_printf_common+0xa4>
 800273a:	3601      	adds	r6, #1
 800273c:	e7d9      	b.n	80026f2 <_printf_common+0x8e>
	...

08002740 <_printf_i>:
 8002740:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002744:	7e0f      	ldrb	r7, [r1, #24]
 8002746:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002748:	2f78      	cmp	r7, #120	; 0x78
 800274a:	4691      	mov	r9, r2
 800274c:	4680      	mov	r8, r0
 800274e:	460c      	mov	r4, r1
 8002750:	469a      	mov	sl, r3
 8002752:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002756:	d807      	bhi.n	8002768 <_printf_i+0x28>
 8002758:	2f62      	cmp	r7, #98	; 0x62
 800275a:	d80a      	bhi.n	8002772 <_printf_i+0x32>
 800275c:	2f00      	cmp	r7, #0
 800275e:	f000 80d8 	beq.w	8002912 <_printf_i+0x1d2>
 8002762:	2f58      	cmp	r7, #88	; 0x58
 8002764:	f000 80a3 	beq.w	80028ae <_printf_i+0x16e>
 8002768:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800276c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002770:	e03a      	b.n	80027e8 <_printf_i+0xa8>
 8002772:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002776:	2b15      	cmp	r3, #21
 8002778:	d8f6      	bhi.n	8002768 <_printf_i+0x28>
 800277a:	a101      	add	r1, pc, #4	; (adr r1, 8002780 <_printf_i+0x40>)
 800277c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002780:	080027d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, sp}
 8002784:	080027ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp}
 8002788:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 800278c:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 8002790:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 8002794:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 8002798:	080027ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp}
 800279c:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027a0:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027a4:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027a8:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027ac:	080028f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, sp}
 80027b0:	0800281d 	stmdaeq	r0, {r0, r2, r3, r4, fp, sp}
 80027b4:	080028db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, fp, sp}
 80027b8:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027bc:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027c0:	0800291b 	stmdaeq	r0, {r0, r1, r3, r4, r8, fp, sp}
 80027c4:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027c8:	0800281d 	stmdaeq	r0, {r0, r2, r3, r4, fp, sp}
 80027cc:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027d0:	08002769 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, sp}
 80027d4:	080028e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, fp, sp}
 80027d8:	682b      	ldr	r3, [r5, #0]
 80027da:	1d1a      	adds	r2, r3, #4
 80027dc:	681b      	ldr	r3, [r3, #0]
 80027de:	602a      	str	r2, [r5, #0]
 80027e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80027e4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80027e8:	2301      	movs	r3, #1
 80027ea:	e0a3      	b.n	8002934 <_printf_i+0x1f4>
 80027ec:	6820      	ldr	r0, [r4, #0]
 80027ee:	6829      	ldr	r1, [r5, #0]
 80027f0:	0606      	lsls	r6, r0, #24
 80027f2:	f101 0304 	add.w	r3, r1, #4
 80027f6:	d50a      	bpl.n	800280e <_printf_i+0xce>
 80027f8:	680e      	ldr	r6, [r1, #0]
 80027fa:	602b      	str	r3, [r5, #0]
 80027fc:	2e00      	cmp	r6, #0
 80027fe:	da03      	bge.n	8002808 <_printf_i+0xc8>
 8002800:	232d      	movs	r3, #45	; 0x2d
 8002802:	4276      	negs	r6, r6
 8002804:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002808:	485e      	ldr	r0, [pc, #376]	; (8002984 <_printf_i+0x244>)
 800280a:	230a      	movs	r3, #10
 800280c:	e019      	b.n	8002842 <_printf_i+0x102>
 800280e:	680e      	ldr	r6, [r1, #0]
 8002810:	602b      	str	r3, [r5, #0]
 8002812:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002816:	bf18      	it	ne
 8002818:	b236      	sxthne	r6, r6
 800281a:	e7ef      	b.n	80027fc <_printf_i+0xbc>
 800281c:	682b      	ldr	r3, [r5, #0]
 800281e:	6820      	ldr	r0, [r4, #0]
 8002820:	1d19      	adds	r1, r3, #4
 8002822:	6029      	str	r1, [r5, #0]
 8002824:	0601      	lsls	r1, r0, #24
 8002826:	d501      	bpl.n	800282c <_printf_i+0xec>
 8002828:	681e      	ldr	r6, [r3, #0]
 800282a:	e002      	b.n	8002832 <_printf_i+0xf2>
 800282c:	0646      	lsls	r6, r0, #25
 800282e:	d5fb      	bpl.n	8002828 <_printf_i+0xe8>
 8002830:	881e      	ldrh	r6, [r3, #0]
 8002832:	4854      	ldr	r0, [pc, #336]	; (8002984 <_printf_i+0x244>)
 8002834:	2f6f      	cmp	r7, #111	; 0x6f
 8002836:	bf0c      	ite	eq
 8002838:	2308      	moveq	r3, #8
 800283a:	230a      	movne	r3, #10
 800283c:	2100      	movs	r1, #0
 800283e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002842:	6865      	ldr	r5, [r4, #4]
 8002844:	60a5      	str	r5, [r4, #8]
 8002846:	2d00      	cmp	r5, #0
 8002848:	bfa2      	ittt	ge
 800284a:	6821      	ldrge	r1, [r4, #0]
 800284c:	f021 0104 	bicge.w	r1, r1, #4
 8002850:	6021      	strge	r1, [r4, #0]
 8002852:	b90e      	cbnz	r6, 8002858 <_printf_i+0x118>
 8002854:	2d00      	cmp	r5, #0
 8002856:	d04d      	beq.n	80028f4 <_printf_i+0x1b4>
 8002858:	4615      	mov	r5, r2
 800285a:	fbb6 f1f3 	udiv	r1, r6, r3
 800285e:	fb03 6711 	mls	r7, r3, r1, r6
 8002862:	5dc7      	ldrb	r7, [r0, r7]
 8002864:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002868:	4637      	mov	r7, r6
 800286a:	42bb      	cmp	r3, r7
 800286c:	460e      	mov	r6, r1
 800286e:	d9f4      	bls.n	800285a <_printf_i+0x11a>
 8002870:	2b08      	cmp	r3, #8
 8002872:	d10b      	bne.n	800288c <_printf_i+0x14c>
 8002874:	6823      	ldr	r3, [r4, #0]
 8002876:	07de      	lsls	r6, r3, #31
 8002878:	d508      	bpl.n	800288c <_printf_i+0x14c>
 800287a:	6923      	ldr	r3, [r4, #16]
 800287c:	6861      	ldr	r1, [r4, #4]
 800287e:	4299      	cmp	r1, r3
 8002880:	bfde      	ittt	le
 8002882:	2330      	movle	r3, #48	; 0x30
 8002884:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002888:	f105 35ff 	addle.w	r5, r5, #4294967295
 800288c:	1b52      	subs	r2, r2, r5
 800288e:	6122      	str	r2, [r4, #16]
 8002890:	f8cd a000 	str.w	sl, [sp]
 8002894:	464b      	mov	r3, r9
 8002896:	aa03      	add	r2, sp, #12
 8002898:	4621      	mov	r1, r4
 800289a:	4640      	mov	r0, r8
 800289c:	f7ff fee2 	bl	8002664 <_printf_common>
 80028a0:	3001      	adds	r0, #1
 80028a2:	d14c      	bne.n	800293e <_printf_i+0x1fe>
 80028a4:	f04f 30ff 	mov.w	r0, #4294967295
 80028a8:	b004      	add	sp, #16
 80028aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80028ae:	4835      	ldr	r0, [pc, #212]	; (8002984 <_printf_i+0x244>)
 80028b0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80028b4:	6829      	ldr	r1, [r5, #0]
 80028b6:	6823      	ldr	r3, [r4, #0]
 80028b8:	f851 6b04 	ldr.w	r6, [r1], #4
 80028bc:	6029      	str	r1, [r5, #0]
 80028be:	061d      	lsls	r5, r3, #24
 80028c0:	d514      	bpl.n	80028ec <_printf_i+0x1ac>
 80028c2:	07df      	lsls	r7, r3, #31
 80028c4:	bf44      	itt	mi
 80028c6:	f043 0320 	orrmi.w	r3, r3, #32
 80028ca:	6023      	strmi	r3, [r4, #0]
 80028cc:	b91e      	cbnz	r6, 80028d6 <_printf_i+0x196>
 80028ce:	6823      	ldr	r3, [r4, #0]
 80028d0:	f023 0320 	bic.w	r3, r3, #32
 80028d4:	6023      	str	r3, [r4, #0]
 80028d6:	2310      	movs	r3, #16
 80028d8:	e7b0      	b.n	800283c <_printf_i+0xfc>
 80028da:	6823      	ldr	r3, [r4, #0]
 80028dc:	f043 0320 	orr.w	r3, r3, #32
 80028e0:	6023      	str	r3, [r4, #0]
 80028e2:	2378      	movs	r3, #120	; 0x78
 80028e4:	4828      	ldr	r0, [pc, #160]	; (8002988 <_printf_i+0x248>)
 80028e6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80028ea:	e7e3      	b.n	80028b4 <_printf_i+0x174>
 80028ec:	0659      	lsls	r1, r3, #25
 80028ee:	bf48      	it	mi
 80028f0:	b2b6      	uxthmi	r6, r6
 80028f2:	e7e6      	b.n	80028c2 <_printf_i+0x182>
 80028f4:	4615      	mov	r5, r2
 80028f6:	e7bb      	b.n	8002870 <_printf_i+0x130>
 80028f8:	682b      	ldr	r3, [r5, #0]
 80028fa:	6826      	ldr	r6, [r4, #0]
 80028fc:	6961      	ldr	r1, [r4, #20]
 80028fe:	1d18      	adds	r0, r3, #4
 8002900:	6028      	str	r0, [r5, #0]
 8002902:	0635      	lsls	r5, r6, #24
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	d501      	bpl.n	800290c <_printf_i+0x1cc>
 8002908:	6019      	str	r1, [r3, #0]
 800290a:	e002      	b.n	8002912 <_printf_i+0x1d2>
 800290c:	0670      	lsls	r0, r6, #25
 800290e:	d5fb      	bpl.n	8002908 <_printf_i+0x1c8>
 8002910:	8019      	strh	r1, [r3, #0]
 8002912:	2300      	movs	r3, #0
 8002914:	6123      	str	r3, [r4, #16]
 8002916:	4615      	mov	r5, r2
 8002918:	e7ba      	b.n	8002890 <_printf_i+0x150>
 800291a:	682b      	ldr	r3, [r5, #0]
 800291c:	1d1a      	adds	r2, r3, #4
 800291e:	602a      	str	r2, [r5, #0]
 8002920:	681d      	ldr	r5, [r3, #0]
 8002922:	6862      	ldr	r2, [r4, #4]
 8002924:	2100      	movs	r1, #0
 8002926:	4628      	mov	r0, r5
 8002928:	f7fd fc7a 	bl	8000220 <memchr>
 800292c:	b108      	cbz	r0, 8002932 <_printf_i+0x1f2>
 800292e:	1b40      	subs	r0, r0, r5
 8002930:	6060      	str	r0, [r4, #4]
 8002932:	6863      	ldr	r3, [r4, #4]
 8002934:	6123      	str	r3, [r4, #16]
 8002936:	2300      	movs	r3, #0
 8002938:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800293c:	e7a8      	b.n	8002890 <_printf_i+0x150>
 800293e:	6923      	ldr	r3, [r4, #16]
 8002940:	462a      	mov	r2, r5
 8002942:	4649      	mov	r1, r9
 8002944:	4640      	mov	r0, r8
 8002946:	47d0      	blx	sl
 8002948:	3001      	adds	r0, #1
 800294a:	d0ab      	beq.n	80028a4 <_printf_i+0x164>
 800294c:	6823      	ldr	r3, [r4, #0]
 800294e:	079b      	lsls	r3, r3, #30
 8002950:	d413      	bmi.n	800297a <_printf_i+0x23a>
 8002952:	68e0      	ldr	r0, [r4, #12]
 8002954:	9b03      	ldr	r3, [sp, #12]
 8002956:	4298      	cmp	r0, r3
 8002958:	bfb8      	it	lt
 800295a:	4618      	movlt	r0, r3
 800295c:	e7a4      	b.n	80028a8 <_printf_i+0x168>
 800295e:	2301      	movs	r3, #1
 8002960:	4632      	mov	r2, r6
 8002962:	4649      	mov	r1, r9
 8002964:	4640      	mov	r0, r8
 8002966:	47d0      	blx	sl
 8002968:	3001      	adds	r0, #1
 800296a:	d09b      	beq.n	80028a4 <_printf_i+0x164>
 800296c:	3501      	adds	r5, #1
 800296e:	68e3      	ldr	r3, [r4, #12]
 8002970:	9903      	ldr	r1, [sp, #12]
 8002972:	1a5b      	subs	r3, r3, r1
 8002974:	42ab      	cmp	r3, r5
 8002976:	dcf2      	bgt.n	800295e <_printf_i+0x21e>
 8002978:	e7eb      	b.n	8002952 <_printf_i+0x212>
 800297a:	2500      	movs	r5, #0
 800297c:	f104 0619 	add.w	r6, r4, #25
 8002980:	e7f5      	b.n	800296e <_printf_i+0x22e>
 8002982:	bf00      	nop
 8002984:	08002f45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, sp}
 8002988:	08002f56 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, sl, fp, sp}

0800298c <_sbrk_r>:
 800298c:	b538      	push	{r3, r4, r5, lr}
 800298e:	4d06      	ldr	r5, [pc, #24]	; (80029a8 <_sbrk_r+0x1c>)
 8002990:	2300      	movs	r3, #0
 8002992:	4604      	mov	r4, r0
 8002994:	4608      	mov	r0, r1
 8002996:	602b      	str	r3, [r5, #0]
 8002998:	f7fe feb4 	bl	8001704 <_sbrk>
 800299c:	1c43      	adds	r3, r0, #1
 800299e:	d102      	bne.n	80029a6 <_sbrk_r+0x1a>
 80029a0:	682b      	ldr	r3, [r5, #0]
 80029a2:	b103      	cbz	r3, 80029a6 <_sbrk_r+0x1a>
 80029a4:	6023      	str	r3, [r4, #0]
 80029a6:	bd38      	pop	{r3, r4, r5, pc}
 80029a8:	20000230 	andcs	r0, r0, r0, lsr r2

080029ac <__sread>:
 80029ac:	b510      	push	{r4, lr}
 80029ae:	460c      	mov	r4, r1
 80029b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80029b4:	f000 f8a0 	bl	8002af8 <_read_r>
 80029b8:	2800      	cmp	r0, #0
 80029ba:	bfab      	itete	ge
 80029bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80029be:	89a3      	ldrhlt	r3, [r4, #12]
 80029c0:	181b      	addge	r3, r3, r0
 80029c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80029c6:	bfac      	ite	ge
 80029c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80029ca:	81a3      	strhlt	r3, [r4, #12]
 80029cc:	bd10      	pop	{r4, pc}

080029ce <__swrite>:
 80029ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80029d2:	461f      	mov	r7, r3
 80029d4:	898b      	ldrh	r3, [r1, #12]
 80029d6:	05db      	lsls	r3, r3, #23
 80029d8:	4605      	mov	r5, r0
 80029da:	460c      	mov	r4, r1
 80029dc:	4616      	mov	r6, r2
 80029de:	d505      	bpl.n	80029ec <__swrite+0x1e>
 80029e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80029e4:	2302      	movs	r3, #2
 80029e6:	2200      	movs	r2, #0
 80029e8:	f000 f868 	bl	8002abc <_lseek_r>
 80029ec:	89a3      	ldrh	r3, [r4, #12]
 80029ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80029f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80029f6:	81a3      	strh	r3, [r4, #12]
 80029f8:	4632      	mov	r2, r6
 80029fa:	463b      	mov	r3, r7
 80029fc:	4628      	mov	r0, r5
 80029fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002a02:	f000 b817 	b.w	8002a34 <_write_r>

08002a06 <__sseek>:
 8002a06:	b510      	push	{r4, lr}
 8002a08:	460c      	mov	r4, r1
 8002a0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a0e:	f000 f855 	bl	8002abc <_lseek_r>
 8002a12:	1c43      	adds	r3, r0, #1
 8002a14:	89a3      	ldrh	r3, [r4, #12]
 8002a16:	bf15      	itete	ne
 8002a18:	6560      	strne	r0, [r4, #84]	; 0x54
 8002a1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002a1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002a22:	81a3      	strheq	r3, [r4, #12]
 8002a24:	bf18      	it	ne
 8002a26:	81a3      	strhne	r3, [r4, #12]
 8002a28:	bd10      	pop	{r4, pc}

08002a2a <__sclose>:
 8002a2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a2e:	f000 b813 	b.w	8002a58 <_close_r>
	...

08002a34 <_write_r>:
 8002a34:	b538      	push	{r3, r4, r5, lr}
 8002a36:	4d07      	ldr	r5, [pc, #28]	; (8002a54 <_write_r+0x20>)
 8002a38:	4604      	mov	r4, r0
 8002a3a:	4608      	mov	r0, r1
 8002a3c:	4611      	mov	r1, r2
 8002a3e:	2200      	movs	r2, #0
 8002a40:	602a      	str	r2, [r5, #0]
 8002a42:	461a      	mov	r2, r3
 8002a44:	f7fe fe92 	bl	800176c <_write>
 8002a48:	1c43      	adds	r3, r0, #1
 8002a4a:	d102      	bne.n	8002a52 <_write_r+0x1e>
 8002a4c:	682b      	ldr	r3, [r5, #0]
 8002a4e:	b103      	cbz	r3, 8002a52 <_write_r+0x1e>
 8002a50:	6023      	str	r3, [r4, #0]
 8002a52:	bd38      	pop	{r3, r4, r5, pc}
 8002a54:	20000230 	andcs	r0, r0, r0, lsr r2

08002a58 <_close_r>:
 8002a58:	b538      	push	{r3, r4, r5, lr}
 8002a5a:	4d06      	ldr	r5, [pc, #24]	; (8002a74 <_close_r+0x1c>)
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	4604      	mov	r4, r0
 8002a60:	4608      	mov	r0, r1
 8002a62:	602b      	str	r3, [r5, #0]
 8002a64:	f7fe fe90 	bl	8001788 <_close>
 8002a68:	1c43      	adds	r3, r0, #1
 8002a6a:	d102      	bne.n	8002a72 <_close_r+0x1a>
 8002a6c:	682b      	ldr	r3, [r5, #0]
 8002a6e:	b103      	cbz	r3, 8002a72 <_close_r+0x1a>
 8002a70:	6023      	str	r3, [r4, #0]
 8002a72:	bd38      	pop	{r3, r4, r5, pc}
 8002a74:	20000230 	andcs	r0, r0, r0, lsr r2

08002a78 <_fstat_r>:
 8002a78:	b538      	push	{r3, r4, r5, lr}
 8002a7a:	4d07      	ldr	r5, [pc, #28]	; (8002a98 <_fstat_r+0x20>)
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	4604      	mov	r4, r0
 8002a80:	4608      	mov	r0, r1
 8002a82:	4611      	mov	r1, r2
 8002a84:	602b      	str	r3, [r5, #0]
 8002a86:	f7fe fe82 	bl	800178e <_fstat>
 8002a8a:	1c43      	adds	r3, r0, #1
 8002a8c:	d102      	bne.n	8002a94 <_fstat_r+0x1c>
 8002a8e:	682b      	ldr	r3, [r5, #0]
 8002a90:	b103      	cbz	r3, 8002a94 <_fstat_r+0x1c>
 8002a92:	6023      	str	r3, [r4, #0]
 8002a94:	bd38      	pop	{r3, r4, r5, pc}
 8002a96:	bf00      	nop
 8002a98:	20000230 	andcs	r0, r0, r0, lsr r2

08002a9c <_isatty_r>:
 8002a9c:	b538      	push	{r3, r4, r5, lr}
 8002a9e:	4d06      	ldr	r5, [pc, #24]	; (8002ab8 <_isatty_r+0x1c>)
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	4604      	mov	r4, r0
 8002aa4:	4608      	mov	r0, r1
 8002aa6:	602b      	str	r3, [r5, #0]
 8002aa8:	f7fe fe76 	bl	8001798 <_isatty>
 8002aac:	1c43      	adds	r3, r0, #1
 8002aae:	d102      	bne.n	8002ab6 <_isatty_r+0x1a>
 8002ab0:	682b      	ldr	r3, [r5, #0]
 8002ab2:	b103      	cbz	r3, 8002ab6 <_isatty_r+0x1a>
 8002ab4:	6023      	str	r3, [r4, #0]
 8002ab6:	bd38      	pop	{r3, r4, r5, pc}
 8002ab8:	20000230 	andcs	r0, r0, r0, lsr r2

08002abc <_lseek_r>:
 8002abc:	b538      	push	{r3, r4, r5, lr}
 8002abe:	4d07      	ldr	r5, [pc, #28]	; (8002adc <_lseek_r+0x20>)
 8002ac0:	4604      	mov	r4, r0
 8002ac2:	4608      	mov	r0, r1
 8002ac4:	4611      	mov	r1, r2
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	602a      	str	r2, [r5, #0]
 8002aca:	461a      	mov	r2, r3
 8002acc:	f7fe fe66 	bl	800179c <_lseek>
 8002ad0:	1c43      	adds	r3, r0, #1
 8002ad2:	d102      	bne.n	8002ada <_lseek_r+0x1e>
 8002ad4:	682b      	ldr	r3, [r5, #0]
 8002ad6:	b103      	cbz	r3, 8002ada <_lseek_r+0x1e>
 8002ad8:	6023      	str	r3, [r4, #0]
 8002ada:	bd38      	pop	{r3, r4, r5, pc}
 8002adc:	20000230 	andcs	r0, r0, r0, lsr r2

08002ae0 <__malloc_lock>:
 8002ae0:	4801      	ldr	r0, [pc, #4]	; (8002ae8 <__malloc_lock+0x8>)
 8002ae2:	f7ff bb1d 	b.w	8002120 <__retarget_lock_acquire_recursive>
 8002ae6:	bf00      	nop
 8002ae8:	20000224 	andcs	r0, r0, r4, lsr #4

08002aec <__malloc_unlock>:
 8002aec:	4801      	ldr	r0, [pc, #4]	; (8002af4 <__malloc_unlock+0x8>)
 8002aee:	f7ff bb18 	b.w	8002122 <__retarget_lock_release_recursive>
 8002af2:	bf00      	nop
 8002af4:	20000224 	andcs	r0, r0, r4, lsr #4

08002af8 <_read_r>:
 8002af8:	b538      	push	{r3, r4, r5, lr}
 8002afa:	4d07      	ldr	r5, [pc, #28]	; (8002b18 <_read_r+0x20>)
 8002afc:	4604      	mov	r4, r0
 8002afe:	4608      	mov	r0, r1
 8002b00:	4611      	mov	r1, r2
 8002b02:	2200      	movs	r2, #0
 8002b04:	602a      	str	r2, [r5, #0]
 8002b06:	461a      	mov	r2, r3
 8002b08:	f7fe fe20 	bl	800174c <_read>
 8002b0c:	1c43      	adds	r3, r0, #1
 8002b0e:	d102      	bne.n	8002b16 <_read_r+0x1e>
 8002b10:	682b      	ldr	r3, [r5, #0]
 8002b12:	b103      	cbz	r3, 8002b16 <_read_r+0x1e>
 8002b14:	6023      	str	r3, [r4, #0]
 8002b16:	bd38      	pop	{r3, r4, r5, pc}
 8002b18:	20000230 	andcs	r0, r0, r0, lsr r2

08002b1c <_init>:
 8002b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b1e:	bf00      	nop
 8002b20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002b22:	bc08      	pop	{r3}
 8002b24:	469e      	mov	lr, r3
 8002b26:	4770      	bx	lr

08002b28 <_fini>:
 8002b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b2a:	bf00      	nop
 8002b2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002b2e:	bc08      	pop	{r3}
 8002b30:	469e      	mov	lr, r3
 8002b32:	4770      	bx	lr

Disassembly of section .rodata:

08002b34 <__func__.0-0x3c>:
 8002b34:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 8002b38:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
 8002b3c:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
 8002b40:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8002b44:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
 8002b48:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002b4c:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002b50:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8002b54:	20736920 	rsbscs	r6, r3, r0, lsr #18
 8002b58:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
 8002b5c:	0000000a 	andeq	r0, r0, sl
 8002b60:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 8002b64:	6571206f 	ldrbvs	r2, [r1, #-111]!	; 0xffffff91
 8002b68:	0d2e756d 	cfstr32eq	mvfx7, [lr, #-436]!	; 0xfffffe4c
 8002b6c:	00000000 	andeq	r0, r0, r0

08002b70 <__func__.0>:
 8002b70:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
 8002b74:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
 8002b78:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8002b7c:	00000064 	andeq	r0, r0, r4, rrx

08002b80 <__func__.1>:
 8002b80:	6f727245 	svcvs	0x00727245
 8002b84:	61485f72 	hvcvs	34290	; 0x85f2
 8002b88:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002b8c:	00000072 	andeq	r0, r0, r2, ror r0

08002b90 <__func__.2>:
 8002b90:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002b94:	00000035 	andeq	r0, r0, r5, lsr r0

08002b98 <__func__.3>:
 8002b98:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002b9c:	00000034 	andeq	r0, r0, r4, lsr r0

08002ba0 <__func__.4>:
 8002ba0:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002ba4:	00000033 	andeq	r0, r0, r3, lsr r0

08002ba8 <__func__.5>:
 8002ba8:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002bac:	00000032 	andeq	r0, r0, r2, lsr r0

08002bb0 <__func__.6>:
 8002bb0:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002bb4:	00000031 	andeq	r0, r0, r1, lsr r0

08002bb8 <__func__.7>:
 8002bb8:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002bbc:	00000030 	andeq	r0, r0, r0, lsr r0

08002bc0 <__func__.0>:
 8002bc0:	67617355 			; <UNDEFINED> instruction: 0x67617355
 8002bc4:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
 8002bc8:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8002bcc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 8002bd0:	00007265 	andeq	r7, r0, r5, ror #4

08002bd4 <__func__.1>:
 8002bd4:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 8002bd8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 8002bdc:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 8002be0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 8002be4:	00000000 	andeq	r0, r0, r0

08002be8 <__func__.2>:
 8002be8:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
 8002bec:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 8002bf0:	61485f65 	cmpvs	r8, r5, ror #30
 8002bf4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002bf8:	00000072 	andeq	r0, r0, r2, ror r0

08002bfc <__func__.4>:
 8002bfc:	5f494d4e 	svcpl	0x00494d4e
 8002c00:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 8002c04:	0072656c 	rsbseq	r6, r2, ip, ror #10
 8002c08:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002c10 <__func__.4+0x14>
 8002c0c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002c10:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002c14:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002c18:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002c1c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002c20:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002c24:	2f726576 	svccs	0x00726576
 8002c28:	2f637253 	svccs	0x00637253
 8002c2c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002c30:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002c34:	61685f78 	smcvs	34296	; 0x85f8
 8002c38:	61755f6c 	cmnvs	r5, ip, ror #30
 8002c3c:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 8002c40:	00000000 	andeq	r0, r0, r0
 8002c44:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002c4c <__func__.4+0x50>
 8002c48:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002c4c:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002c50:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002c54:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002c58:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002c5c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002c60:	2f726576 	svccs	0x00726576
 8002c64:	2f637253 	svccs	0x00637253
 8002c68:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002c6c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002c70:	61685f78 	smcvs	34296	; 0x85f8
 8002c74:	70675f6c 	rsbvc	r5, r7, ip, ror #30
 8002c78:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 8002c7c:	00000000 	andeq	r0, r0, r0
 8002c80:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002c88 <__func__.4+0x8c>
 8002c84:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002c88:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002c8c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002c90:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002c94:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002c98:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002c9c:	2f726576 	svccs	0x00726576
 8002ca0:	2f637253 	svccs	0x00637253
 8002ca4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002ca8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002cac:	61685f78 	smcvs	34296	; 0x85f8
 8002cb0:	6f635f6c 	svcvs	0x00635f6c
 8002cb4:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 8002cb8:	0000632e 	andeq	r6, r0, lr, lsr #6

08002cbc <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 8002cbc:	00000000 	andeq	r0, r0, r0
 8002cc0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8002cc4:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002cc8:	61745320 	cmnvs	r4, r0, lsr #6
 8002ccc:	5b3a6b63 	blpl	8e9da60 <_siccmram+0xe9aa78>
 8002cd0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002cd4:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002cd8:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002cdc:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002ce0:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002ce4:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002ce8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002cec:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
 8002cf0:	5b3a2074 	blpl	8e8aec8 <_siccmram+0xe87ee0>
 8002cf4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002cf8:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002cfc:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002d00:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002d04:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002d08:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002d0c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002d10:	61745320 	cmnvs	r4, r0, lsr #6
 8002d14:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
 8002d18:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
 8002d1c:	6f442068 	svcvs	0x00442068
 8002d20:	61776e77 	cmnvs	r7, r7, ror lr
 8002d24:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
 8002d28:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002d2c:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
 8002d30:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 8002d34:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
 8002d38:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
 8002d3c:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8002d40:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
 8002d44:	20706d75 	rsbscs	r6, r0, r5, ror sp
 8002d48:	0000000d 	andeq	r0, r0, sp
 8002d4c:	61745320 	cmnvs	r4, r0, lsr #6
 8002d50:	46206b63 	strtmi	r6, [r0], -r3, ror #22
 8002d54:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8002d58:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
 8002d5c:	00000000 	andeq	r0, r0, r0
 8002d60:	20305220 	eorscs	r5, r0, r0, lsr #4
 8002d64:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002d68:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002d6c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002d70:	0000000a 	andeq	r0, r0, sl
 8002d74:	20315220 	eorscs	r5, r1, r0, lsr #4
 8002d78:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002d7c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002d80:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002d84:	0000000a 	andeq	r0, r0, sl
 8002d88:	20325220 	eorscs	r5, r2, r0, lsr #4
 8002d8c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002d90:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002d94:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002d98:	0000000a 	andeq	r0, r0, sl
 8002d9c:	20335220 	eorscs	r5, r3, r0, lsr #4
 8002da0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002da4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002da8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002dac:	0000000a 	andeq	r0, r0, sl
 8002db0:	20345220 	eorscs	r5, r4, r0, lsr #4
 8002db4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002db8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002dbc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002dc0:	0000000a 	andeq	r0, r0, sl
 8002dc4:	20355220 	eorscs	r5, r5, r0, lsr #4
 8002dc8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002dcc:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002dd0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002dd4:	0000000a 	andeq	r0, r0, sl
 8002dd8:	20365220 	eorscs	r5, r6, r0, lsr #4
 8002ddc:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002de0:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002de4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002de8:	0000000a 	andeq	r0, r0, sl
 8002dec:	20375220 	eorscs	r5, r7, r0, lsr #4
 8002df0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002df4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002df8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002dfc:	0000000a 	andeq	r0, r0, sl
 8002e00:	20385220 	eorscs	r5, r8, r0, lsr #4
 8002e04:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e08:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e0c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e10:	0000000a 	andeq	r0, r0, sl
 8002e14:	20395220 	eorscs	r5, r9, r0, lsr #4
 8002e18:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e1c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e24:	0000000a 	andeq	r0, r0, sl
 8002e28:	30315220 	eorscc	r5, r1, r0, lsr #4
 8002e2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e30:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e38:	0000000a 	andeq	r0, r0, sl
 8002e3c:	31315220 	teqcc	r1, r0, lsr #4
 8002e40:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e44:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e4c:	0000000a 	andeq	r0, r0, sl
 8002e50:	32315220 	eorscc	r5, r1, #32, 4
 8002e54:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e58:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e60:	0000000a 	andeq	r0, r0, sl
 8002e64:	20524c20 	subscs	r4, r2, r0, lsr #24
 8002e68:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e6c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e74:	0000000a 	andeq	r0, r0, sl
 8002e78:	20435020 	subcs	r5, r3, r0, lsr #32
 8002e7c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e80:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e84:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e88:	0000000a 	andeq	r0, r0, sl
 8002e8c:	52535020 	subspl	r5, r3, #32
 8002e90:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e94:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e98:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e9c:	0000000a 	andeq	r0, r0, sl
 8002ea0:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
 8002ea4:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
 8002ea8:	3a4e5255 	bcc	9397804 <_siccmram+0x139481c>
 8002eac:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8002eb0:	20583830 	subscs	r3, r8, r0, lsr r8
 8002eb4:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002eb8:	61745320 	cmnvs	r4, r0, lsr #6
 8002ebc:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
 8002ec0:	3a6c6c61 	bcc	9b1e04c <_siccmram+0x1b1b064>
 8002ec4:	00000020 	andeq	r0, r0, r0, lsr #32
 8002ec8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002ecc:	00000020 	andeq	r0, r0, r0, lsr #32

08002ed0 <_global_impure_ptr>:
 8002ed0:	20000010 	andcs	r0, r0, r0, lsl r0

08002ed4 <__sf_fake_stderr>:
	...

08002ef4 <__sf_fake_stdin>:
	...

08002f14 <__sf_fake_stdout>:
	...
 8002f34:	2b302d23 	blcs	8c0e3c8 <_siccmram+0xc0b3e0>
 8002f38:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
 8002f3c:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
 8002f40:	47464567 	strbmi	r4, [r6, -r7, ror #10]
 8002f44:	32313000 	eorscc	r3, r1, #0
 8002f48:	36353433 			; <UNDEFINED> instruction: 0x36353433
 8002f4c:	41393837 	teqmi	r9, r7, lsr r8
 8002f50:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 8002f54:	31300046 	teqcc	r0, r6, asr #32
 8002f58:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8002f5c:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 8002f60:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8002f64:	00006665 	andeq	r6, r0, r5, ror #12

Disassembly of section .ARM:

08002f68 <__exidx_start>:
 8002f68:	7fffd388 	svcvc	0x00ffd388
 8002f6c:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

08002f70 <__frame_dummy_init_array_entry>:
 8002f70:	080001b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8}

Disassembly of section .fini_array:

08002f74 <__do_global_dtors_aux_fini_array_entry>:
 8002f74:	08000191 	stmdaeq	r0, {r0, r4, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <_impure_ptr>:
2000000c:	20000010 	andcs	r0, r0, r0, lsl r0

20000010 <impure_data>:
20000010:	00000000 	andeq	r0, r0, r0
20000014:	08002ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp, sp}
20000018:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
2000001c:	08002ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, sp}
	...

Disassembly of section .bss:

20000070 <__bss_start__>:
20000070:	00000000 	andeq	r0, r0, r0

20000074 <object.0>:
	...

2000008c <huart1>:
	...

200000d4 <uwTick>:
__IO uint32_t uwTick;
200000d4:	00000000 	andeq	r0, r0, r0

200000d8 <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
200000d8:	00000000 	andeq	r0, r0, r0

200000dc <buffer.0>:
	...

200001dc <fd_code_stack_base>:
volatile unsigned int fd_code_stack_base = 0;
200001dc:	00000000 	andeq	r0, r0, r0

200001e0 <fd_code_stack_full>:
volatile unsigned int fd_code_stack_full = 0;
200001e0:	00000000 	andeq	r0, r0, r0

200001e4 <frame.1>:
	...

20000224 <__lock___malloc_recursive_mutex>:
	...

20000225 <__lock___sfp_recursive_mutex>:
	...

20000226 <__lock___sinit_recursive_mutex>:
	...

20000228 <__malloc_free_list>:
20000228:	00000000 	andeq	r0, r0, r0

2000022c <__malloc_sbrk_start>:
2000022c:	00000000 	andeq	r0, r0, r0

20000230 <errno>:
20000230:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

20000234 <_end-0x4>:
20000234:	00000000 	andeq	r0, r0, r0

20000238 <_end>:
	...

20000a38 <_sstack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   0:	00002f41 	andeq	r2, r0, r1, asr #30
   4:	61656100 	cmnvs	r5, r0, lsl #2
int _execve(char *name, char **argv, char **env)
{
  (void)name;
  (void)argv;
  (void)env;
  errno = ENOMEM;
   8:	01006962 	tsteq	r0, r2, ror #18
  return -1;
}
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  while (1)
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc

    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6

    /* USART1 interrupt Deinit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }
}
  28:	011b011a 	tsteq	fp, sl, lsl r1
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
       4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	000005d7 	ldrdeq	r0, [r0], -r7
      10:	0007130c 	andeq	r1, r7, ip, lsl #6
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00042000 	andeq	r2, r4, r0
	...
}
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	000005c5 	andeq	r0, r0, r5, asr #11
      30:	00006603 	andeq	r6, r0, r3, lsl #12
    if (status != HAL_OK)
      34:	182b0300 	stmdane	fp!, {r8, r9}
      uwTickFreq = prevTickFreq;
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	c3080102 	movwgt	r0, #33026	; 0x8102
      40:	02000005 	andeq	r0, r0, #5
      44:	03fa0502 	mvnseq	r0, #8388608	; 0x800000
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      
      if (pllsource != 0)
      48:	5c030000 	stcpl	0, cr0, [r3], {-0}
      4c:	03000007 	movweq	r0, #7
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00561939 	subseq	r1, r6, r9, lsr r9
      54:	02020000 	andeq	r0, r2, #0
      58:	0007f607 	andeq	pc, r7, r7, lsl #12
      5c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000002ec 	andeq	r0, r0, ip, ror #5
      64:	0002c203 	andeq	ip, r2, r3, lsl #4
      68:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
      SystemCoreClock = pllvco/pllp;
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	b3070402 	movwlt	r0, #29698	; 0x7402
      break;
      74:	02000000 	andeq	r0, r0, #0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
      7c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      80:	0000ae07 	andeq	sl, r0, r7, lsl #28
      84:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      88:	00746e69 	rsbseq	r6, r4, r9, ror #28
      8c:	00008505 	andeq	r8, r0, r5, lsl #10
      90:	07040200 	streq	r0, [r4, -r0, lsl #4]
      94:	000000b8 	strheq	r0, [r0], -r8
      98:	00006803 	andeq	r6, r0, r3, lsl #16
      9c:	13180400 	tstne	r8, #0, 8
    Error_Handler();
      a0:	00000030 	andeq	r0, r0, r0, lsr r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	00009805 	andeq	r9, r0, r5, lsl #16
      a8:	00980600 	addseq	r0, r8, r0, lsl #12
      ac:	5e030000 	cdppl	0, 0, cr0, cr3, cr0, {0}
      b0:	04000007 	streq	r0, [r0], #-7
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	004a1424 	subeq	r1, sl, r4, lsr #8
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	ae050000 	cdpge	0, 0, cr0, cr5, cr0, {0}
      bc:	03000000 	movweq	r0, #0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	000002c4 	andeq	r0, r0, r4, asr #5
      c4:	64143004 	ldrvs	r3, [r4], #-4
      c8:	05000000 	streq	r0, [r0, #-0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d0:	0000cb06 	andeq	ip, r0, r6, lsl #22
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	058c0700 	streq	r0, [ip, #1792]	; 0x700
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	310901bd 			; <UNDEFINED> instruction: 0x310901bd
      dc:	08000002 	stmdaeq	r0, {r1}
      e0:	00000101 	andeq	r0, r0, r1, lsl #2
    if (huart->hdmarx != NULL)
      e4:	1201bf05 	andne	fp, r1, #5, 30
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
      f0:	00000389 	andeq	r0, r0, r9, lsl #7
    huart->TxXferCount = 0x00U;
      f4:	1201c005 	andne	ip, r1, #5
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	000000cb 	andeq	r0, r0, fp, asr #1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000363 	andeq	r0, r0, r3, ror #6
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	1201c105 	andne	ip, r1, #1073741825	; 0x40000001
    HAL_UART_AbortCpltCallback(huart);
     108:	000000cb 	andeq	r0, r0, fp, asr #1
     10c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
  uint32_t AbortCplt = 0x01U;
     110:	000003a2 	andeq	r0, r0, r2, lsr #7
  if (AbortCplt == 0x01U)
     114:	1201c205 	andne	ip, r1, #1342177280	; 0x50000000
}
     118:	000000cb 	andeq	r0, r0, fp, asr #1
     11c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     120:	00524353 	subseq	r4, r2, r3, asr r3
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
     124:	1201c305 	andne	ip, r1, #335544320	; 0x14000000
    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	000000cb 	andeq	r0, r0, fp, asr #1
     12c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     130:	00524343 	subseq	r4, r2, r3, asr #6
     134:	1201c405 	andne	ip, r1, #83886080	; 0x5000000
     138:	000000cb 	andeq	r0, r0, fp, asr #1
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     140:	00504853 	subseq	r4, r0, r3, asr r8
     144:	1201c505 	andne	ip, r1, #20971520	; 0x1400000
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00000241 	andeq	r0, r0, r1, asr #4
     14c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	000005d1 	ldrdeq	r0, [r0], -r1
     154:	1201c605 	andne	ip, r1, #5242880	; 0x500000
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	000000cb 	andeq	r0, r0, fp, asr #1
     15c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	000004c6 	andeq	r0, r0, r6, asr #9
     164:	1201c705 	andne	ip, r1, #1310720	; 0x140000
     168:	000000cb 	andeq	r0, r0, fp, asr #1
     16c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     170:	0000091a 	andeq	r0, r0, sl, lsl r9

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    }
  }
}
     174:	1201c805 	andne	ip, r1, #327680	; 0x50000
     178:	000000cb 	andeq	r0, r0, fp, asr #1
     17c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     180:	000003a8 	andeq	r0, r0, r8, lsr #7
}
     184:	1201c905 	andne	ip, r1, #81920	; 0x14000
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	000000cb 	andeq	r0, r0, fp, asr #1
     18c:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	000003c6 	andeq	r0, r0, r6, asr #7
     194:	1201ca05 	andne	ip, r1, #20480	; 0x5000
     198:	000000cb 	andeq	r0, r0, fp, asr #1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     1a0:	0000029c 	muleq	r0, ip, r2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	1201cb05 	andne	ip, r1, #5120	; 0x1400
     1a8:	000000cb 	andeq	r0, r0, fp, asr #1
     1ac:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	000007d6 	ldrdeq	r0, [r0], -r6
     1b4:	1201cc05 	andne	ip, r1, #1280	; 0x500
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000000cb 	andeq	r0, r0, fp, asr #1
     1bc:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1c0:	00524650 	subseq	r4, r2, r0, asr r6
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	1201cd05 	andne	ip, r1, #320	; 0x140
     1c8:	0000025b 	andeq	r0, r0, fp, asr r2
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1d0:	00524644 	subseq	r4, r2, r4, asr #12
     1d4:	1201ce05 	andne	ip, r1, #5, 28	; 0x50
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     1dc:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00524441 	subseq	r4, r2, r1, asr #8
     1e4:	1201cf05 	andne	ip, r1, #5, 30
     1e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     1f0:	000003f5 	strdeq	r0, [r0], -r5
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	1201d005 	andne	sp, r1, #5
     1f8:	00000275 	andeq	r0, r0, r5, ror r2
     1fc:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0000014e 	andeq	r0, r0, lr, asr #2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	1201d105 	andne	sp, r1, #1073741825	; 0x40000001
     208:	0000028f 	andeq	r0, r0, pc, lsl #5
     20c:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0000055e 	andeq	r0, r0, lr, asr r5
     214:	1201d205 	andne	sp, r1, #1342177280	; 0x50000000
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000294 	muleq	r0, r4, r2
     21c:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	0000054a 	andeq	r0, r0, sl, asr #10
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	1201d305 	andne	sp, r1, #335544320	; 0x14000000
     228:	000000cb 	andeq	r0, r0, fp, asr #1
  tmp = hdma->Instance->FCR;
     22c:	01882303 	orreq	r2, r8, r3, lsl #6
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00a40a00 	adceq	r0, r4, r0, lsl #20
  tmp |= hdma->Init.FIFOMode;
     234:	02410000 	subeq	r0, r1, #0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	910b0000 	mrsls	r0, (UNDEF: 11)
    tmp |= hdma->Init.FIFOThreshold;
     23c:	0b000000 	bleq	244 <_Min_Heap_Size-0x5bc>
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	02310500 	eorseq	r0, r1, #0, 10
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	d00a0000 	andle	r0, sl, r0
     248:	56000000 	strpl	r0, [r0], -r0
  hdma->Instance->FCR = tmp;
     24c:	0b000002 	bleq	25c <_Min_Heap_Size-0x5a4>
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000091 	muleq	r0, r1, r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	46060001 	strmi	r0, [r6], -r1
     258:	05000002 	streq	r0, [r0, #-2]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000256 	andeq	r0, r0, r6, asr r2
  hdma->State = HAL_DMA_STATE_READY;
     260:	0000d00a 	andeq	sp, r0, sl
     264:	00027000 	andeq	r7, r2, r0
  return HAL_OK;
     268:	00910b00 	addseq	r0, r1, r0, lsl #22
     26c:	00030000 	andeq	r0, r3, r0
     270:	00026006 	andeq	r6, r2, r6
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	02700500 	rsbseq	r0, r0, #0, 10
     278:	d00a0000 	andle	r0, sl, r0
     27c:	8a000000 	bhi	284 <_Min_Heap_Size-0x57c>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0b000002 	bleq	290 <_Min_Heap_Size-0x570>
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000091 	muleq	r0, r1, r0
        return HAL_ERROR; 
     288:	7a060004 	bvc	1802a0 <_Min_Heap_Size+0x17faa0>
    return HAL_ERROR;
     28c:	05000002 	streq	r0, [r0, #-2]
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	0000028a 	andeq	r0, r0, sl, lsl #5
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0000bf0a 	andeq	fp, r0, sl, lsl #30
     298:	0002a400 	andeq	sl, r2, r0, lsl #8
      tickstart = HAL_GetTick();
     29c:	00910b00 	addseq	r0, r1, r0, lsl #22
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00040000 	andeq	r0, r4, r0
     2a4:	0002d70c 	andeq	sp, r2, ip, lsl #14
     2a8:	01d40500 	bicseq	r0, r4, r0, lsl #10
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0000d503 	andeq	sp, r0, r3, lsl #10
     2b0:	00bf0a00 	adcseq	r0, pc, r0, lsl #20
     2b4:	02c10000 	sbceq	r0, r1, #0
          return HAL_TIMEOUT;
     2b8:	910b0000 	mrsls	r0, (UNDEF: 11)
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	01000000 	mrseq	r0, (UNDEF: 0)
     2c0:	06180700 	ldreq	r0, [r8], -r0, lsl #14
     2c4:	2b090144 	blcs	2407dc <_Min_Heap_Size+0x23ffdc>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	09000003 	stmdbeq	r0, {r0, r1}
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	06005243 	streq	r5, [r0], -r3, asr #4
     2d0:	cb110146 	blgt	4407f0 <_Min_Heap_Size+0x43fff0>
     2d4:	02000000 	andeq	r0, r0, #0
      tickstart = HAL_GetTick();
     2d8:	bc080023 	stclt	0, cr0, [r8], {35}	; 0x23
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	06000007 	streq	r0, [r0], -r7
     2e0:	cb110147 	blgt	440804 <_Min_Heap_Size+0x440004>
     2e4:	02000000 	andeq	r0, r0, #0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	50090423 	andpl	r0, r9, r3, lsr #8
     2ec:	06005241 	streq	r5, [r0], -r1, asr #4
          return HAL_TIMEOUT;
     2f0:	cb110148 	blgt	440818 <_Min_Heap_Size+0x440018>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	02000000 	andeq	r0, r0, #0
     2f8:	42080823 	andmi	r0, r8, #2293760	; 0x230000
     2fc:	06000000 	streq	r0, [r0], -r0
     300:	cb110149 	blgt	44082c <_Min_Heap_Size+0x44002c>
     304:	02000000 	andeq	r0, r0, #0
     308:	15080c23 	strne	r0, [r8, #-3107]	; 0xfffff3dd
     30c:	06000008 	streq	r0, [r0], -r8
     310:	cb11014a 	blgt	440840 <_Min_Heap_Size+0x440040>
      tickstart = HAL_GetTick();
     314:	02000000 	andeq	r0, r0, #0
     318:	46091023 	strmi	r1, [r9], -r3, lsr #32
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	06005243 	streq	r5, [r0], -r3, asr #4
     320:	cb11014b 	blgt	440854 <_Min_Heap_Size+0x440054>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	02000000 	andeq	r0, r0, #0
     328:	0c001423 	cfstrseq	mvf1, [r0], {35}	; 0x23
     32c:	000007db 	ldrdeq	r0, [r0], -fp
     330:	03014c06 	movweq	r4, #7174	; 0x1c06
          return HAL_TIMEOUT;
     334:	000002c1 	andeq	r0, r0, r1, asr #5
    if(pwrclkchanged == SET)
     338:	ea060807 	b	18235c <_Min_Heap_Size+0x181b5c>
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	03620901 	cmneq	r2, #16384	; 0x4000
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	43090000 	movwmi	r0, #36864	; 0x9000
     344:	ec060052 	stc	0, cr0, [r6], {82}	; 0x52
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00cb1101 	sbceq	r1, fp, r1, lsl #2
     34c:	23020000 	movwcs	r0, #8192	; 0x2000
     350:	53430900 	movtpl	r0, #14592	; 0x3900
     354:	ed060052 	stc	0, cr0, [r6, #-328]	; 0xfffffeb8
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00cb1101 	sbceq	r1, fp, r1, lsl #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	23020000 	movwcs	r0, #8192	; 0x2000
     360:	aa0c0004 	bge	300378 <_Min_Heap_Size+0x2ffb78>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	06000001 	streq	r0, [r0], -r1
     368:	380301ee 	stmdacc	r3, {r1, r2, r3, r5, r6, r7, r8}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	07000003 	streq	r0, [r0, -r3]
     370:	01f40688 	mvnseq	r0, r8, lsl #13
     374:	00055b09 	andeq	r5, r5, r9, lsl #22
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	52430900 	subpl	r0, r3, #0, 18
     37c:	01f60600 	mvnseq	r0, r0, lsl #12
     380:	0000cb11 	andeq	ip, r0, r1, lsl fp
     384:	00230200 	eoreq	r0, r3, r0, lsl #4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00028208 	andeq	r8, r2, r8, lsl #4
     38c:	01f70600 	mvnseq	r0, r0, lsl #12
        __HAL_RCC_PLL_DISABLE();
     390:	0000cb11 	andeq	ip, r0, r1, lsl fp
     394:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
        tickstart = HAL_GetTick();
     398:	00028508 	andeq	r8, r2, r8, lsl #10
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	01f80600 	mvnseq	r0, r0, lsl #12
     3a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3a4:	08230200 	stmdaeq	r3!, {r9}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
     3ac:	01f90600 	mvnseq	r0, r0, lsl #12
            return HAL_TIMEOUT;
     3b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3b8:	00016608 	andeq	r6, r1, r8, lsl #12
     3bc:	01fa0600 	mvnseq	r0, r0, lsl #12
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3c4:	10230200 	eorne	r0, r3, r0, lsl #4
     3c8:	00077e08 	andeq	r7, r7, r8, lsl #28
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	01fb0600 	mvnseq	r0, r0, lsl #12
     3d0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3d4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	0006d008 	andeq	sp, r6, r8
     3dc:	01fc0600 	mvnseq	r0, r0, lsl #12
     3e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	18230200 	stmdane	r3!, {r9}
     3e8:	00055e08 	andeq	r5, r5, r8, lsl #28
     3ec:	01fd0600 	mvnseq	r0, r0, lsl #12
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0000bf11 	andeq	fp, r0, r1, lsl pc
     3f4:	1c230200 	sfmne	f0, 4, [r3], #-0
     3f8:	00053b08 	andeq	r3, r5, r8, lsl #22
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01fe0600 	mvnseq	r0, r0, lsl #12
     400:	0000cb11 	andeq	ip, r0, r1, lsl fp
     404:	20230200 	eorcs	r0, r3, r0, lsl #4
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0001f908 	andeq	pc, r1, r8, lsl #18
     40c:	01ff0600 	mvnseq	r0, r0, lsl #12
     410:	0000cb11 	andeq	ip, r0, r1, lsl fp
     414:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     418:	00056808 	andeq	r6, r5, r8, lsl #16
     41c:	02000600 	andeq	r0, r0, #0, 12
     420:	0002b111 	andeq	fp, r2, r1, lsl r1
     424:	28230200 	stmdacs	r3!, {r9}
        __HAL_RCC_PLL_ENABLE();
     428:	0008d408 	andeq	sp, r8, r8, lsl #8
     42c:	02010600 	andeq	r0, r1, #0, 12
        tickstart = HAL_GetTick();
     430:	0000cb11 	andeq	ip, r0, r1, lsl fp
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	30230200 	eorcc	r0, r3, r0, lsl #4
     438:	0007ee08 	andeq	lr, r7, r8, lsl #28
     43c:	02020600 	andeq	r0, r2, #0, 12
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0000cb11 	andeq	ip, r0, r1, lsl fp
     444:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
            return HAL_TIMEOUT;
     448:	0004d608 	andeq	sp, r4, r8, lsl #12
  return HAL_OK;
     44c:	02030600 	andeq	r0, r3, #0, 12
        __HAL_RCC_PLL_DISABLE();
     450:	0000cb11 	andeq	ip, r0, r1, lsl fp
     454:	38230200 	stmdacc	r3!, {r9}
        tickstart = HAL_GetTick();
     458:	00057208 	andeq	r7, r5, r8, lsl #4
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	02040600 	andeq	r0, r4, #0, 12
     460:	0000bf11 	andeq	fp, r0, r1, lsl pc
     464:	3c230200 	sfmcc	f0, 4, [r3], #-0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00070b08 	andeq	r0, r7, r8, lsl #22
     46c:	02050600 	andeq	r0, r5, #0, 12
            return HAL_TIMEOUT;
     470:	0000cb11 	andeq	ip, r0, r1, lsl fp
  return HAL_OK;
     474:	40230200 	eormi	r0, r3, r0, lsl #4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	0006c808 	andeq	ip, r6, r8, lsl #16
        pll_config = RCC->PLLCFGR;
     47c:	02060600 	andeq	r0, r6, #0, 12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0000cb11 	andeq	ip, r0, r1, lsl fp
     484:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00057c08 	andeq	r7, r5, r8, lsl #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	02070600 	andeq	r0, r7, #0, 12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	0002b111 	andeq	fp, r2, r1, lsl r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	48230200 	stmdami	r3!, {r9}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00012b08 	andeq	r2, r1, r8, lsl #22
     49c:	02080600 	andeq	r0, r8, #0, 12
     4a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	50230200 	eorpl	r0, r3, r0, lsl #4
     4a8:	00051008 	andeq	r1, r5, r8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	02090600 	andeq	r0, r9, #0, 12
     4b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00069608 	andeq	r9, r6, r8, lsl #12
     4bc:	020a0600 	andeq	r0, sl, #0, 12
  return HAL_OK;
     4c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
}
     4c4:	58230200 	stmdapl	r3!, {r9}
        return HAL_ERROR;
     4c8:	00058608 	andeq	r8, r5, r8, lsl #12
        return HAL_ERROR;
     4cc:	020b0600 	andeq	r0, fp, #0, 12
}
     4d0:	0000bf11 	andeq	fp, r0, r1, lsl pc
        return HAL_ERROR;
     4d4:	5c230200 	sfmpl	f0, 4, [r3], #-0
          return HAL_ERROR;
     4d8:	00001b08 	andeq	r1, r0, r8, lsl #22
     4dc:	020c0600 	andeq	r0, ip, #0, 12
     4e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4e4:	60230200 	eorvs	r0, r3, r0, lsl #4
     4e8:	0003eb08 	andeq	lr, r3, r8, lsl #22
     4ec:	020d0600 	andeq	r0, sp, #0, 12
     4f0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4f4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     4f8:	00059008 	andeq	r9, r5, r8
     4fc:	020e0600 	andeq	r0, lr, #0, 12
     500:	0002b111 	andeq	fp, r2, r1, lsl r1
     504:	68230200 	stmdavs	r3!, {r9}
     508:	00087008 	andeq	r7, r8, r8
     50c:	020f0600 	andeq	r0, pc, #0, 12
     510:	0000cb11 	andeq	ip, r0, r1, lsl fp
     514:	70230200 	eorvc	r0, r3, r0, lsl #4
     518:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     51c:	02100600 	andseq	r0, r0, #0, 12
     520:	0000cb11 	andeq	ip, r0, r1, lsl fp
     524:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     528:	00059a08 	andeq	r9, r5, r8, lsl #20
     52c:	02110600 	andseq	r0, r1, #0, 12
     530:	0002b111 	andeq	fp, r2, r1, lsl r1
     534:	78230200 	stmdavc	r3!, {r9}
     538:	00083f08 	andeq	r3, r8, r8, lsl #30
     53c:	02120600 	andseq	r0, r2, #0, 12
     540:	0000cb11 	andeq	ip, r0, r1, lsl fp
     544:	80230300 	eorhi	r0, r3, r0, lsl #6
     548:	037e0801 	cmneq	lr, #65536	; 0x10000
     54c:	13060000 	movwne	r0, #24576	; 0x6000
     550:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     554:	23030000 	movwcs	r0, #12288	; 0x3000
     558:	0c000184 	stfeqs	f0, [r0], {132}	; 0x84
     55c:	000001cd 	andeq	r0, r0, sp, asr #3
     560:	03021406 	movweq	r1, #9222	; 0x2406
     564:	0000036f 	andeq	r0, r0, pc, ror #6
     568:	95061c07 	strls	r1, [r6, #-3079]	; 0xfffff3f9
     56c:	05e10902 	strbeq	r0, [r1, #2306]!	; 0x902
     570:	53090000 	movwpl	r0, #36864	; 0x9000
     574:	97060052 	smlsdls	r6, r2, r0, r0
     578:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     57c:	23020000 	movwcs	r0, #8192	; 0x2000
     580:	52440900 	subpl	r0, r4, #0, 18
     584:	02980600 	addseq	r0, r8, #0, 12
     588:	0000cb11 	andeq	ip, r0, r1, lsl fp
     58c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     590:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     594:	02990600 	addseq	r0, r9, #0, 12
     598:	0000cb11 	andeq	ip, r0, r1, lsl fp
     59c:	08230200 	stmdaeq	r3!, {r9}
     5a0:	31524309 	cmpcc	r2, r9, lsl #6
     5a4:	029a0600 	addseq	r0, sl, #0, 12
     5a8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5ac:	0c230200 	sfmeq	f0, 4, [r3], #-0
     5b0:	32524309 	subscc	r4, r2, #603979776	; 0x24000000
     5b4:	029b0600 	addseq	r0, fp, #0, 12
     5b8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5bc:	10230200 	eorne	r0, r3, r0, lsl #4
     5c0:	33524309 	cmpcc	r2, #603979776	; 0x24000000
     5c4:	029c0600 	addseq	r0, ip, #0, 12
     5c8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5cc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     5d0:	00018908 	andeq	r8, r1, r8, lsl #18
     5d4:	029d0600 	addseq	r0, sp, #0, 12
     5d8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5dc:	18230200 	stmdane	r3!, {r9}
     5e0:	03dd0c00 	bicseq	r0, sp, #0, 24
     5e4:	9e060000 	cdpls	0, 0, cr0, cr6, cr0, {0}
     5e8:	05680302 	strbeq	r0, [r8, #-770]!	; 0xfffffcfe
     5ec:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     5f0:	00072604 	andeq	r2, r7, r4, lsl #12
     5f4:	01070d00 	tsteq	r7, r0, lsl #26
     5f8:	0000003c 	andeq	r0, r0, ip, lsr r0
     5fc:	1c012707 	stcne	7, cr2, [r1], {7}
     600:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     604:	0000035c 	andeq	r0, r0, ip, asr r3
     608:	07010e00 	streq	r0, [r1, -r0, lsl #28]
     60c:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     610:	00000909 	andeq	r0, r0, r9, lsl #18
     614:	033d0e02 	teqeq	sp, #2, 28
     618:	00030000 	andeq	r0, r3, r0
     61c:	3c01070d 	stccc	7, cr0, [r1], {13}
     620:	07000000 	streq	r0, [r0, -r0]
     624:	06370132 			; <UNDEFINED> instruction: 0x06370132
     628:	fc0e0000 	stc2	0, cr0, [lr], {-0}
     62c:	00000008 	andeq	r0, r0, r8
     630:	0004cb0e 	andeq	ip, r4, lr, lsl #22
     634:	03000100 	movweq	r0, #256	; 0x100
     638:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
     63c:	1c033507 	cfstr32ne	mvfx3, [r3], {7}
     640:	0f000006 	svceq	0x00000006
     644:	092d0818 	pusheq	{r3, r4, fp}
     648:	000006a7 	andeq	r0, r0, r7, lsr #13
     64c:	00008010 	andeq	r8, r0, r0, lsl r0
     650:	0c2f0800 	stceq	8, cr0, [pc], #-0	; 658 <_Min_Heap_Size-0x1a8>
     654:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     658:	10002302 	andne	r2, r0, r2, lsl #6
     65c:	000006a0 	andeq	r0, r0, r0, lsr #13
     660:	bf0c3208 	svclt	0x000c3208
     664:	02000000 	andeq	r0, r0, #0
     668:	89100423 	ldmdbhi	r0, {r0, r1, r5, sl}
     66c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     670:	00bf0c35 	adcseq	r0, pc, r5, lsr ip	; <UNPREDICTABLE>
     674:	23020000 	movwcs	r0, #8192	; 0x2000
     678:	008e1008 	addeq	r1, lr, r8
     67c:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
     680:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     684:	0c230200 	sfmeq	f0, 4, [r3], #-0
     688:	00009310 	andeq	r9, r0, r0, lsl r3
     68c:	0c3c0800 	ldceq	8, cr0, [ip], #-0
     690:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     694:	10102302 	andsne	r2, r0, r2, lsl #6
     698:	00000098 	muleq	r0, r8, r0
     69c:	bf0c3f08 	svclt	0x000c3f08
     6a0:	02000000 	andeq	r0, r0, #0
     6a4:	03001423 	movweq	r1, #1059	; 0x423
     6a8:	000008b7 			; <UNDEFINED> instruction: 0x000008b7
     6ac:	43024908 	movwmi	r4, #10504	; 0x2908
     6b0:	0f000006 	svceq	0x00000006
     6b4:	09310930 	ldmdbeq	r1!, {r4, r5, r8, fp}
     6b8:	00000726 	andeq	r0, r0, r6, lsr #14
     6bc:	0003b710 	andeq	fp, r3, r0, lsl r7
     6c0:	0c330900 			; <UNDEFINED> instruction: 0x0c330900
     6c4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     6c8:	10002302 	andne	r2, r0, r2, lsl #6
     6cc:	00000307 	andeq	r0, r0, r7, lsl #6
     6d0:	bf0c3609 	svclt	0x000c3609
     6d4:	02000000 	andeq	r0, r0, #0
     6d8:	e6100423 	ldr	r0, [r0], -r3, lsr #8
     6dc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     6e0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     6e4:	23020000 	movwcs	r0, #8192	; 0x2000
     6e8:	02411008 	subeq	r1, r1, #8
     6ec:	3c090000 	stccc	0, cr0, [r9], {-0}
     6f0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     6f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     6f8:	00026010 	andeq	r6, r2, r0, lsl r0
     6fc:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
     700:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     704:	10102302 	andsne	r2, r0, r2, lsl #6
     708:	0000020c 	andeq	r0, r0, ip, lsl #4
     70c:	bf0c4209 	svclt	0x000c4209
     710:	02000000 	andeq	r0, r0, #0
     714:	50111423 	andspl	r1, r1, r3, lsr #8
     718:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
     71c:	06a71645 	strteq	r1, [r7], r5, asr #12
     720:	23020000 	movwcs	r0, #8192	; 0x2000
     724:	53030018 	movwpl	r0, #12312	; 0x3018
     728:	09000001 	stmdbeq	r0, {r0}
     72c:	06b30246 	ldrteq	r0, [r3], r6, asr #4
     730:	140f0000 	strne	r0, [pc], #-0	; 738 <_Min_Heap_Size-0xc8>
     734:	87094b09 	strhi	r4, [r9, -r9, lsl #22]
     738:	10000007 	andne	r0, r0, r7
     73c:	000008ca 	andeq	r0, r0, sl, asr #17
     740:	bf0c4d09 	svclt	0x000c4d09
     744:	02000000 	andeq	r0, r0, #0
     748:	5d100023 	ldcpl	0, cr0, [r0, #-140]	; 0xffffff74
     74c:	09000009 	stmdbeq	r0, {r0, r3}
     750:	00bf0c50 	adcseq	r0, pc, r0, asr ip	; <UNPREDICTABLE>
     754:	23020000 	movwcs	r0, #8192	; 0x2000
     758:	04041004 	streq	r1, [r4], #-4
     75c:	53090000 	movwpl	r0, #36864	; 0x9000
     760:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     764:	08230200 	stmdaeq	r3!, {r9}
     768:	00005710 	andeq	r5, r0, r0, lsl r7
     76c:	0c560900 	mrrceq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
     770:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     774:	100c2302 	andne	r2, ip, r2, lsl #6
     778:	0000079a 	muleq	r0, sl, r7
     77c:	bf0c5909 	svclt	0x000c5909
     780:	02000000 	andeq	r0, r0, #0
     784:	03001023 	movweq	r1, #35	; 0x23
     788:	00000521 	andeq	r0, r0, r1, lsr #10
     78c:	32025c09 	andcc	r5, r2, #2304	; 0x900
     790:	0f000007 	svceq	0x00000007
     794:	09300a30 	ldmdbeq	r0!, {r4, r5, r9, fp}
     798:	00000851 	andeq	r0, r0, r1, asr r8
     79c:	0005bb10 	andeq	fp, r5, r0, lsl fp
     7a0:	0c320a00 			; <UNDEFINED> instruction: 0x0c320a00
     7a4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7a8:	10002302 	andne	r2, r0, r2, lsl #6
     7ac:	000002cd 	andeq	r0, r0, sp, asr #5
     7b0:	bf0c350a 	svclt	0x000c350a
     7b4:	02000000 	andeq	r0, r0, #0
     7b8:	02100423 	andseq	r0, r0, #587202560	; 0x23000000
     7bc:	0a000002 	beq	7cc <_Min_Heap_Size-0x34>
     7c0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     7c4:	23020000 	movwcs	r0, #8192	; 0x2000
     7c8:	07871008 	streq	r1, [r7, r8]
     7cc:	3c0a0000 	stccc	0, cr0, [sl], {-0}
     7d0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     7d4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     7d8:	00081a10 	andeq	r1, r8, r0, lsl sl
     7dc:	0c3f0a00 			; <UNDEFINED> instruction: 0x0c3f0a00
     7e0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7e4:	10102302 	andsne	r2, r0, r2, lsl #6
     7e8:	000003cc 	andeq	r0, r0, ip, asr #7
     7ec:	bf0c420a 	svclt	0x000c420a
     7f0:	02000000 	andeq	r0, r0, #0
     7f4:	f1101423 			; <UNDEFINED> instruction: 0xf1101423
     7f8:	0a000006 	beq	818 <_Min_Heap_Size+0x18>
     7fc:	00bf0c45 	adcseq	r0, pc, r5, asr #24
     800:	23020000 	movwcs	r0, #8192	; 0x2000
     804:	1f9a1018 	svcne	0x009a1018
     808:	4a0a0000 	bmi	280810 <_Min_Heap_Size+0x280010>
     80c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     810:	1c230200 	sfmne	f0, 4, [r3], #-0
     814:	0006ed10 	andeq	lr, r6, r0, lsl sp
     818:	0c4d0a00 	mcrreq	10, 0, r0, sp, cr0
     81c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     820:	10202302 	eorne	r2, r0, r2, lsl #6
     824:	00000732 	andeq	r0, r0, r2, lsr r7
     828:	bf0c520a 	svclt	0x000c520a
     82c:	02000000 	andeq	r0, r0, #0
     830:	15102423 	ldrne	r2, [r0, #-1059]	; 0xfffffbdd
     834:	0a000002 	beq	844 <_Min_Heap_Size+0x44>
     838:	00bf0c55 	adcseq	r0, pc, r5, asr ip	; <UNPREDICTABLE>
     83c:	23020000 	movwcs	r0, #8192	; 0x2000
     840:	078e1028 	streq	r1, [lr, r8, lsr #32]
     844:	5b0a0000 	blpl	28084c <_Min_Heap_Size+0x28004c>
     848:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     84c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     850:	00470300 	subeq	r0, r7, r0, lsl #6
     854:	600a0000 	andvs	r0, sl, r0
     858:	00079302 	andeq	r9, r7, r2, lsl #6
     85c:	01070d00 	tsteq	r7, r0, lsl #26
     860:	0000003c 	andeq	r0, r0, ip, lsr r0
     864:	9001670a 	andls	r6, r1, sl, lsl #14
     868:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
     86c:	00000310 	andeq	r0, r0, r0, lsl r3
     870:	03290e00 			; <UNDEFINED> instruction: 0x03290e00
     874:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     878:	0000046c 	andeq	r0, r0, ip, ror #8
     87c:	08960e02 	ldmeq	r6, {r1, r9, sl, fp}
     880:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     884:	0000022d 	andeq	r0, r0, sp, lsr #4
     888:	038e0e04 	orreq	r0, lr, #4, 28	; 0x40
     88c:	00050000 	andeq	r0, r5, r0
     890:	00067c03 	andeq	r7, r6, r3, lsl #24
     894:	026e0a00 	rsbeq	r0, lr, #0, 20
     898:	0000085d 	andeq	r0, r0, sp, asr r8
     89c:	00089005 	andeq	r9, r8, r5
     8a0:	06d91200 	ldrbeq	r1, [r9], r0, lsl #4
     8a4:	0a600000 	beq	18008ac <_Min_Heap_Size+0x18000ac>
     8a8:	0981108a 	stmibeq	r1, {r1, r3, r7, ip}
     8ac:	de100000 	cdple	0, 1, cr0, cr0, cr0, {0}
     8b0:	0a000004 	beq	8c8 <_Min_Heap_Size+0xc8>
     8b4:	09811f8c 	stmibeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip}
     8b8:	23020000 	movwcs	r0, #8192	; 0x2000
     8bc:	1a7c1000 	bne	1f048c4 <_Min_Heap_Size+0x1f040c4>
     8c0:	8e0a0000 	cdphi	0, 0, cr0, cr10, cr0, {0}
     8c4:	0008511e 	andeq	r5, r8, lr, lsl r1
     8c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     8cc:	0002a810 	andeq	sl, r2, r0, lsl r8
     8d0:	1e900a00 	vfnmsne.f32	s0, s0, s0
     8d4:	00000637 	andeq	r0, r0, r7, lsr r6
     8d8:	10342302 	eorsne	r2, r4, r2, lsl #6
     8dc:	0000030a 	andeq	r0, r0, sl, lsl #6
     8e0:	9c1e920a 	lfmls	f1, 1, [lr], {10}
     8e4:	02000008 	andeq	r0, r0, #8
     8e8:	a1103523 	tstge	r0, r3, lsr #10
     8ec:	0a000002 	beq	8fc <_Min_Heap_Size+0xfc>
     8f0:	09871f94 	stmibeq	r7, {r2, r4, r7, r8, r9, sl, fp, ip}
     8f4:	23020000 	movwcs	r0, #8192	; 0x2000
     8f8:	093f1038 	ldmdbeq	pc!, {r3, r4, r5, ip}	; <UNPREDICTABLE>
     8fc:	960a0000 	strls	r0, [sl], -r0
     900:	00099b21 	andeq	r9, r9, r1, lsr #22
     904:	3c230200 	sfmcc	f0, 4, [r3], #-0
     908:	0001d910 	andeq	sp, r1, r0, lsl r9
     90c:	21980a00 	orrscs	r0, r8, r0, lsl #20
     910:	0000099b 	muleq	r0, fp, r9
     914:	10402302 	subne	r2, r0, r2, lsl #6
     918:	00000197 	muleq	r0, r7, r1
     91c:	9b219a0a 	blls	86714c <_Min_Heap_Size+0x86694c>
     920:	02000009 	andeq	r0, r0, #9
     924:	a4104423 	ldrge	r4, [r0], #-1059	; 0xfffffbdd
     928:	0a000005 	beq	944 <_Min_Heap_Size+0x144>
     92c:	099b219c 	ldmibeq	fp, {r2, r3, r4, r7, r8, sp}
     930:	23020000 	movwcs	r0, #8192	; 0x2000
     934:	04e71048 	strbteq	r1, [r7], #72	; 0x48
     938:	9e0a0000 	cdpls	0, 0, cr0, cr10, cr0, {0}
     93c:	00099b21 	andeq	r9, r9, r1, lsr #22
     940:	4c230200 	sfmmi	f0, 4, [r3], #-0
     944:	00092d10 	andeq	r2, r9, r0, lsl sp
     948:	21a00a00 	lslcs	r0, r0, #20
     94c:	0000099b 	muleq	r0, fp, r9
     950:	10502302 	subsne	r2, r0, r2, lsl #6
     954:	000003ad 	andeq	r0, r0, sp, lsr #7
     958:	cb1ea20a 	blgt	7a9188 <_Min_Heap_Size+0x7a8988>
     95c:	02000000 	andeq	r0, r0, #0
     960:	8a105423 	bhi	4159f4 <_Min_Heap_Size+0x4151f4>
     964:	0a000002 	beq	974 <_Min_Heap_Size+0x174>
     968:	00bf1ea4 	adcseq	r1, pc, r4, lsr #29
     96c:	23020000 	movwcs	r0, #8192	; 0x2000
     970:	03501058 	cmpeq	r0, #88	; 0x58
     974:	a60a0000 	strge	r0, [sl], -r0
     978:	0000bf1e 	andeq	fp, r0, lr, lsl pc
     97c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     980:	2b041300 	blcs	105588 <_Min_Heap_Size+0x104d88>
     984:	14000003 	strne	r0, [r0], #-3
     988:	95011504 	strls	r1, [r1, #-1284]	; 0xfffffafc
     98c:	16000009 	strne	r0, [r0], -r9
     990:	00000995 	muleq	r0, r5, r9
     994:	a1041300 	mrsge	r1, LR_abt
     998:	13000008 	movwne	r0, #8
     99c:	00098904 	andeq	r8, r9, r4, lsl #18
     9a0:	06db0300 	ldrbeq	r0, [fp], r0, lsl #6
     9a4:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
     9a8:	0008a102 	andeq	sl, r8, r2, lsl #2
     9ac:	0b1c0f00 	bleq	7045b4 <_Min_Heap_Size+0x703db4>
     9b0:	0a20092e 	beq	802e70 <_Min_Heap_Size+0x802670>
     9b4:	8e100000 	cdphi	0, 1, cr0, cr0, cr0, {0}
     9b8:	0b000001 	bleq	9c4 <_Min_Heap_Size+0x1c4>
     9bc:	00bf0c30 	adcseq	r0, pc, r0, lsr ip	; <UNPREDICTABLE>
     9c0:	23020000 	movwcs	r0, #8192	; 0x2000
     9c4:	06f61000 	ldrbteq	r1, [r6], r0
     9c8:	360b0000 	strcc	r0, [fp], -r0
     9cc:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     9d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     9d4:	00027910 	andeq	r7, r2, r0, lsl r9
     9d8:	0c390b00 			; <UNDEFINED> instruction: 0x0c390b00
     9dc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     9e0:	10082302 	andne	r2, r8, r2, lsl #6
     9e4:	00000534 	andeq	r0, r0, r4, lsr r5
     9e8:	bf0c3c0b 	svclt	0x000c3c0b
     9ec:	02000000 	andeq	r0, r0, #0
     9f0:	f1100c23 			; <UNDEFINED> instruction: 0xf1100c23
     9f4:	0b000006 	bleq	a14 <_Min_Heap_Size+0x214>
     9f8:	00bf0c43 	adcseq	r0, pc, r3, asr #24
     9fc:	23020000 	movwcs	r0, #8192	; 0x2000
     a00:	088c1010 	stmeq	ip, {r4, ip}
     a04:	460b0000 	strmi	r0, [fp], -r0
     a08:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     a0c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     a10:	00013510 	andeq	r3, r1, r0, lsl r5
     a14:	0c490b00 	mcrreq	11, 0, r0, r9, cr0
     a18:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a1c:	00182302 	andseq	r2, r8, r2, lsl #6
     a20:	00082e03 	andeq	r2, r8, r3, lsl #28
     a24:	034b0b00 	movteq	r0, #47872	; 0xbb00
     a28:	000009ad 	andeq	r0, r0, sp, lsr #19
     a2c:	3c01070d 	stccc	7, cr0, [r1], {13}
     a30:	0b000000 	bleq	a38 <_Min_Heap_Size+0x238>
     a34:	0a6b0175 	beq	1ac1010 <_Min_Heap_Size+0x1ac0810>
     a38:	c10e0000 	mrsgt	r0, (UNDEF: 14)
     a3c:	00000007 	andeq	r0, r0, r7
     a40:	0002ad0e 	andeq	sl, r2, lr, lsl #26
     a44:	e80e2000 	stmda	lr, {sp}
     a48:	24000008 	strcs	r0, [r0], #-8
     a4c:	0004f90e 	andeq	pc, r4, lr, lsl #18
     a50:	670e2100 	strvs	r2, [lr, -r0, lsl #2]
     a54:	22000007 	andcs	r0, r0, #7
     a58:	00016f0e 	andeq	r6, r1, lr, lsl #30
     a5c:	750e2300 	strvc	r2, [lr, #-768]	; 0xfffffd00
     a60:	a0000008 	andge	r0, r0, r8
     a64:	0006b30e 	andeq	fp, r6, lr, lsl #6
     a68:	0300e000 	movweq	lr, #0
     a6c:	00000025 	andeq	r0, r0, r5, lsr #32
     a70:	2c03870b 	stccs	7, cr8, [r3], {11}
     a74:	0500000a 	streq	r0, [r0, #-10]
     a78:	00000a6b 	andeq	r0, r0, fp, ror #20
     a7c:	00084503 	andeq	r4, r8, r3, lsl #10
     a80:	12900b00 	addsne	r0, r0, #0, 22
     a84:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a88:	000a7c05 	andeq	r7, sl, r5, lsl #24
     a8c:	00ca0300 	sbceq	r0, sl, r0, lsl #6
     a90:	9b0b0000 	blls	2c0a98 <_Min_Heap_Size+0x2c0298>
     a94:	0000bf12 	andeq	fp, r0, r2, lsl pc
     a98:	0a8d0500 	beq	fe341ea0 <_estack+0xde340c68>
     a9c:	a3120000 	tstge	r2, #0
     aa0:	48000004 	stmdami	r0, {r2}
     aa4:	9c10a00b 	ldcls	0, cr10, [r0], {11}
     aa8:	1000000b 	andne	r0, r0, fp
     aac:	000004de 	ldrdeq	r0, [r0], -lr
     ab0:	9c22a20b 	sfmls	f2, 1, [r2], #-44	; 0xffffffd4
     ab4:	0200000b 	andeq	r0, r0, #11
     ab8:	7c100023 	ldcvc	0, cr0, [r0], {35}	; 0x23
     abc:	0b00001a 	bleq	b2c <_Min_Heap_Size+0x32c>
     ac0:	0a2021a4 	beq	809158 <_Min_Heap_Size+0x808958>
     ac4:	23020000 	movwcs	r0, #8192	; 0x2000
     ac8:	01ee1004 	mvneq	r1, r4
     acc:	a60b0000 	strge	r0, [fp], -r0
     ad0:	000ba222 	andeq	sl, fp, r2, lsr #4
     ad4:	20230200 	eorcs	r0, r3, r0, lsl #4
     ad8:	00037310 	andeq	r7, r3, r0, lsl r3
     adc:	21a80b00 			; <UNDEFINED> instruction: 0x21a80b00
     ae0:	000000ae 	andeq	r0, r0, lr, lsr #1
     ae4:	10242302 	eorne	r2, r4, r2, lsl #6
     ae8:	00000142 	andeq	r0, r0, r2, asr #2
     aec:	ba21aa0b 	blt	86b320 <_Min_Heap_Size+0x86ab20>
     af0:	02000000 	andeq	r0, r0, #0
     af4:	ac102623 	ldcge	6, cr2, [r0], {35}	; 0x23
     af8:	0b000008 	bleq	b20 <_Min_Heap_Size+0x320>
     afc:	0ba822ac 	bleq	fea095b4 <_estack+0xdea0837c>
     b00:	23020000 	movwcs	r0, #8192	; 0x2000
     b04:	03681028 	cmneq	r8, #40	; 0x28
     b08:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
     b0c:	0000ae21 	andeq	sl, r0, r1, lsr #28
     b10:	2c230200 	sfmcs	f0, 4, [r3], #-0
     b14:	0008dc10 	andeq	sp, r8, r0, lsl ip
     b18:	21b00b00 	lslscs	r0, r0, #22
     b1c:	000000ba 	strheq	r0, [r0], -sl
     b20:	102e2302 	eorne	r2, lr, r2, lsl #6
     b24:	0000091f 	andeq	r0, r0, pc, lsl r9
     b28:	881fb20b 	ldmdahi	pc, {r0, r1, r3, r9, ip, sp, pc}	; <UNPREDICTABLE>
     b2c:	0200000a 	andeq	r0, r0, #10
     b30:	91103023 	tstls	r0, r3, lsr #32
     b34:	0b000010 	bleq	b7c <_Min_Heap_Size+0x37c>
     b38:	0a9924b4 	beq	fe649e10 <_estack+0xde648bd8>
     b3c:	23020000 	movwcs	r0, #8192	; 0x2000
     b40:	051a1034 	ldreq	r1, [sl, #-52]	; 0xffffffcc
     b44:	b60b0000 	strlt	r0, [fp], -r0
     b48:	000bae22 	andeq	sl, fp, r2, lsr #28
     b4c:	38230200 	stmdacc	r3!, {r9}
     b50:	0002e010 	andeq	lr, r2, r0, lsl r0
     b54:	22b80b00 	adcscs	r0, r8, #0, 22
     b58:	00000bae 	andeq	r0, r0, lr, lsr #23
     b5c:	103c2302 	eorsne	r2, ip, r2, lsl #6
     b60:	000002a8 	andeq	r0, r0, r8, lsr #5
     b64:	3721ba0b 	strcc	fp, [r1, -fp, lsl #20]!
     b68:	02000006 	andeq	r0, r0, #6
     b6c:	3b104023 	blcc	410c00 <_Min_Heap_Size+0x410400>
     b70:	0b000000 	bleq	b78 <_Min_Heap_Size+0x378>
     b74:	0a7721bc 	beq	1dc926c <_Min_Heap_Size+0x1dc8a6c>
     b78:	23020000 	movwcs	r0, #8192	; 0x2000
     b7c:	09121041 	ldmdbeq	r2, {r0, r6, ip}
     b80:	c00b0000 	andgt	r0, fp, r0
     b84:	000a7721 	andeq	r7, sl, r1, lsr #14
     b88:	42230200 	eormi	r0, r3, #0, 4
     b8c:	0003ad10 	andeq	sl, r3, r0, lsl sp
     b90:	21c30b00 	biccs	r0, r3, r0, lsl #22
     b94:	000000cb 	andeq	r0, r0, fp, asr #1
     b98:	00442302 	subeq	r2, r4, r2, lsl #6
     b9c:	05e10413 	strbeq	r0, [r1, #1043]!	; 0x413
     ba0:	04130000 	ldreq	r0, [r3], #-0
     ba4:	000000a9 	andeq	r0, r0, r9, lsr #1
     ba8:	00980413 	addseq	r0, r8, r3, lsl r4
     bac:	04130000 	ldreq	r0, [r3], #-0
     bb0:	000009a1 	andeq	r0, r0, r1, lsr #19
     bb4:	0004a503 	andeq	sl, r4, r3, lsl #10
     bb8:	03d50b00 	bicseq	r0, r5, #0, 22
     bbc:	00000a9e 	muleq	r0, lr, sl
     bc0:	00034917 	andeq	r4, r3, r7, lsl r9
     bc4:	1b230c00 	blne	8c3bcc <_Min_Heap_Size+0x8c33cc>
     bc8:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
     bcc:	01020101 	tsteq	r2, r1, lsl #2
     bd0:	0005cc08 	andeq	ip, r5, r8, lsl #24
     bd4:	0bce0600 	bleq	ff3823dc <_estack+0xdf3811a4>
     bd8:	01180000 	tsteq	r8, r0
     bdc:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
     be0:	06010c01 	streq	r0, [r1], -r1, lsl #24
     be4:	00070401 	andeq	r0, r7, r1, lsl #8
     be8:	00071808 	andeq	r1, r7, r8, lsl #16
     bec:	00000008 	andeq	r0, r0, r8
     bf0:	0c4d0100 	stfeqe	f0, [sp], {-0}
     bf4:	91190000 	tstls	r9, r0
     bf8:	01000006 	tsteq	r0, r6
     bfc:	a81d010c 	ldmdage	sp, {r2, r3, r8}
     c00:	2400000b 	strcs	r0, [r0], #-11
     c04:	20000000 	andcs	r0, r0, r0
     c08:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     c0c:	00000324 	andeq	r0, r0, r4, lsr #6
     c10:	2c010c01 	stccs	12, cr0, [r1], {1}
     c14:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     c18:	00000049 	andeq	r0, r0, r9, asr #32
     c1c:	00000045 	andeq	r0, r0, r5, asr #32
     c20:	0006aa1a 	andeq	sl, r6, sl, lsl sl
     c24:	000c5d00 	andeq	r5, ip, r0, lsl #26
     c28:	03050100 	movweq	r0, #20736	; 0x5100
     c2c:	08002b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp, sp}
     c30:	00070e1b 	andeq	r0, r7, fp, lsl lr
     c34:	00115908 	andseq	r5, r1, r8, lsl #18
     c38:	50011c00 	andpl	r1, r1, r0, lsl #24
     c3c:	2b500305 	blcs	1401858 <_Min_Heap_Size+0x1401058>
     c40:	011c0800 	tsteq	ip, r0, lsl #16
     c44:	70030551 	andvc	r0, r3, r1, asr r5
     c48:	0008002b 	andeq	r0, r8, fp, lsr #32
     c4c:	0bd50a00 	bleq	ff543454 <_estack+0xdf54221c>
     c50:	0c5d0000 	mraeq	r0, sp, acc0
     c54:	910b0000 	mrsls	r0, (UNDEF: 11)
     c58:	0d000000 	stceq	0, cr0, [r0, #-0]
     c5c:	0c4d0600 	mcrreq	6, 0, r0, sp, cr0
     c60:	011d0000 	tsteq	sp, r0
     c64:	00000412 	andeq	r0, r0, r2, lsl r4
     c68:	0106f801 	tsteq	r6, r1, lsl #16	; <UNPREDICTABLE>
     c6c:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
     c70:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
     c74:	0000006a 	andeq	r0, r0, sl, rrx
     c78:	000cbf01 	andeq	fp, ip, r1, lsl #30
     c7c:	06aa1a00 	strteq	r1, [sl], r0, lsl #20
     c80:	0c5d0000 	mraeq	r0, sp, acc0
     c84:	05010000 	streq	r0, [r1, #-0]
     c88:	002b8003 	eoreq	r8, fp, r3
     c8c:	114e1e08 	cmpne	lr, r8, lsl #28
     c90:	06f60000 	ldrbteq	r0, [r6], r0
     c94:	f6010800 			; <UNDEFINED> instruction: 0xf6010800
     c98:	f8080006 			; <UNDEFINED> instruction: 0xf8080006
     c9c:	01080006 	tsteq	r8, r6
     ca0:	f61b03fd 			; <UNDEFINED> instruction: 0xf61b03fd
     ca4:	59080006 	stmdbpl	r8, {r1, r2}
     ca8:	1c000011 	stcne	0, cr0, [r0], {17}
     cac:	03055001 	movweq	r5, #20481	; 0x5001
     cb0:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}
     cb4:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     cb8:	002b8003 	eoreq	r8, fp, r3
     cbc:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
     cc0:	0007a901 	andeq	sl, r7, r1, lsl #18
     cc4:	06c60100 	strbeq	r0, [r6], r0, lsl #2
     cc8:	00000001 	andeq	r0, r0, r1
     ccc:	00000000 	andeq	r0, r0, r0
     cd0:	00008a00 	andeq	r8, r0, r0, lsl #20
     cd4:	0d950100 	ldfeqs	f0, [r5]
     cd8:	ef1f0000 	svc	0x001f0000
     cdc:	01000000 	mrseq	r0, (UNDEF: 0)
     ce0:	072616c8 	streq	r1, [r6, -r8, asr #13]!
     ce4:	91020000 	mrsls	r0, (UNDEF: 2)
     ce8:	02f51f48 	rscseq	r1, r5, #72, 30	; 0x120
     cec:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
     cf0:	00078716 	andeq	r8, r7, r6, lsl r7
     cf4:	b4910300 	ldrlt	r0, [r1], #768	; 0x300
     cf8:	0000207f 	andeq	r2, r0, pc, ror r0
     cfc:	00000000 	andeq	r0, r0, r0
     d00:	0d170000 	ldceq	0, cr0, [r7, #-0]
     d04:	b61f0000 	ldrlt	r0, [pc], -r0
     d08:	01000001 	tsteq	r0, r1
     d0c:	00cb03cd 	sbceq	r0, fp, sp, asr #7
     d10:	91030000 	mrsls	r0, (UNDEF: 3)
     d14:	20007fac 	andcs	r7, r0, ip, lsr #31
	...
     d20:	00000d35 	andeq	r0, r0, r5, lsr sp
     d24:	0001b61f 	andeq	fp, r1, pc, lsl r6
     d28:	03ce0100 	biceq	r0, lr, #0, 2
     d2c:	000000cb 	andeq	r0, r0, fp, asr #1
     d30:	7fb09103 	svcvc	0x00b09103
     d34:	00002100 	andeq	r2, r0, r0, lsl #2
     d38:	11670000 	cmnne	r7, r0
     d3c:	0d540000 	ldcleq	0, cr0, [r4, #-0]
     d40:	011c0000 	tsteq	ip, r0
     d44:	48910250 	ldmmi	r1, {r4, r6, r9}
     d48:	0151011c 	cmpeq	r1, ip, lsl r1
     d4c:	52011c30 	andpl	r1, r1, #48, 24	; 0x3000
     d50:	00300802 	eorseq	r0, r0, r2, lsl #16
     d54:	00000021 	andeq	r0, r0, r1, lsr #32
     d58:	00117400 	andseq	r7, r1, r0, lsl #8
     d5c:	000d6800 	andeq	r6, sp, r0, lsl #16
     d60:	50011c00 	andpl	r1, r1, r0, lsl #24
     d64:	00489102 	subeq	r9, r8, r2, lsl #2
     d68:	00000021 	andeq	r0, r0, r1, lsr #32
     d6c:	00118300 	andseq	r8, r1, r0, lsl #6
     d70:	000d8200 	andeq	r8, sp, r0, lsl #4
     d74:	50011c00 	andpl	r1, r1, r0, lsl #24
     d78:	7fb49103 	svcvc	0x00b49103
     d7c:	0151011c 	cmpeq	r1, ip, lsl r1
     d80:	00220035 	eoreq	r0, r2, r5, lsr r0
     d84:	62000000 	andvs	r0, r0, #0
     d88:	2200000c 	andcs	r0, r0, #12
     d8c:	00000000 	andeq	r0, r0, r0
     d90:	00000c62 	andeq	r0, r0, r2, ror #24
     d94:	74012300 	strvc	r2, [r1], #-768	; 0xfffffd00
     d98:	01000002 	tsteq	r0, r2
     d9c:	85010596 	strhi	r0, [r1, #-1430]	; 0xfffffa6a
     da0:	c0000000 	andgt	r0, r0, r0
     da4:	ec080006 	stc	0, cr0, [r8], {6}
     da8:	d0080006 	andle	r0, r8, r6
     dac:	01000000 	mrseq	r0, (UNDEF: 0)
     db0:	00000e0a 	andeq	r0, r0, sl, lsl #28
     db4:	0006c622 	andeq	ip, r6, r2, lsr #12
     db8:	00119208 	andseq	r9, r1, r8, lsl #4
     dbc:	06ca2200 	strbeq	r2, [sl], r0, lsl #4
     dc0:	11a00800 	lslne	r0, r0, #16
     dc4:	ce220000 	cdpgt	0, 2, cr0, cr2, cr0, {0}
     dc8:	ae080006 	cdpge	0, 0, cr0, cr8, cr6, {0}
     dcc:	22000011 	andcs	r0, r0, #17
     dd0:	080006d2 	stmdaeq	r0, {r1, r4, r6, r7, r9, sl}
     dd4:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
     dd8:	0006d622 	andeq	sp, r6, r2, lsr #12
     ddc:	000e0a08 	andeq	r0, lr, r8, lsl #20
     de0:	06dc2100 	ldrbeq	r2, [ip], r0, lsl #2
     de4:	11ca0800 	bicne	r0, sl, r0, lsl #16
     de8:	0df80000 	ldcleq	0, cr0, [r8]
     dec:	011c0000 	tsteq	ip, r0
     df0:	60030550 	andvs	r0, r3, r0, asr r5
     df4:	0008002b 	andeq	r0, r8, fp, lsr #32
     df8:	0006e41b 	andeq	lr, r6, fp, lsl r4
     dfc:	0011d708 	andseq	sp, r1, r8, lsl #14
     e00:	50011c00 	andpl	r1, r1, r0, lsl #24
     e04:	03e80a03 	mvneq	r0, #12288	; 0x3000
     e08:	011d0000 	tsteq	sp, r0
     e0c:	00000113 	andeq	r0, r0, r3, lsl r1
     e10:	01068b01 	tsteq	r6, r1, lsl #22
     e14:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
     e18:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
     e1c:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e20:	000e5f01 	andeq	r5, lr, r1, lsl #30
     e24:	06aa1a00 	strteq	r1, [sl], r0, lsl #20
     e28:	0e6f0000 	cdpeq	0, 6, cr0, cr15, cr0, {0}
     e2c:	05010000 	streq	r0, [r1, #-0]
     e30:	002b9003 	eoreq	r9, fp, r3
     e34:	06b22108 	ldrteq	r2, [r2], r8, lsl #2
     e38:	11590800 	cmpne	r9, r0, lsl #16
     e3c:	0e550000 	cdpeq	0, 5, cr0, cr5, cr0, {0}
     e40:	011c0000 	tsteq	ip, r0
     e44:	50030550 	andpl	r0, r3, r0, asr r5
     e48:	1c08002b 	stcne	0, cr0, [r8], {43}	; 0x2b
     e4c:	03055101 	movweq	r5, #20737	; 0x5101
     e50:	08002b90 	stmdaeq	r0, {r4, r7, r8, r9, fp, sp}
     e54:	06b62200 	ldrteq	r2, [r6], r0, lsl #4
     e58:	0e740800 	cdpeq	8, 7, cr0, cr4, cr0, {0}
     e5c:	0a000000 	beq	e64 <_Min_Heap_Size+0x664>
     e60:	00000bd5 	ldrdeq	r0, [r0], -r5
     e64:	00000e6f 	andeq	r0, r0, pc, ror #28
     e68:	0000910b 	andeq	r9, r0, fp, lsl #2
     e6c:	06000500 	streq	r0, [r0], -r0, lsl #10
     e70:	00000e5f 	andeq	r0, r0, pc, asr lr
     e74:	010d011d 	tsteq	sp, sp, lsl r1
     e78:	85010000 	strhi	r0, [r1, #-0]
     e7c:	06900106 	ldreq	r0, [r0], r6, lsl #2
     e80:	06a80800 	strteq	r0, [r8], r0, lsl #16
     e84:	01100800 	tsteq	r0, r0, lsl #16
     e88:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
     e8c:	1a00000e 	bne	ecc <_Min_Heap_Size+0x6cc>
     e90:	000006aa 	andeq	r0, r0, sl, lsr #13
     e94:	00000e6f 	andeq	r0, r0, pc, ror #28
     e98:	98030501 	stmdals	r3, {r0, r8, sl}
     e9c:	2108002b 	tstcs	r8, fp, lsr #32
     ea0:	0800069a 	stmdaeq	r0, {r1, r3, r4, r7, r9, sl}
     ea4:	00001159 	andeq	r1, r0, r9, asr r1
     ea8:	00000ebf 			; <UNDEFINED> instruction: 0x00000ebf
     eac:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
     eb0:	002b5003 	eoreq	r5, fp, r3
     eb4:	51011c08 	tstpl	r1, r8, lsl #24
     eb8:	2b980305 	blcs	fe601ad4 <_estack+0xde60089c>
     ebc:	22000800 	andcs	r0, r0, #0, 16
     ec0:	0800069e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl}
     ec4:	00000ec9 	andeq	r0, r0, r9, asr #29
     ec8:	07011d00 	streq	r1, [r1, -r0, lsl #26]
     ecc:	01000001 	tsteq	r0, r1
     ed0:	7801067f 	stmdavc	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl}
     ed4:	90080006 	andls	r0, r8, r6
     ed8:	30080006 	andcc	r0, r8, r6
     edc:	01000001 	tsteq	r0, r1
     ee0:	00000f1e 	andeq	r0, r0, lr, lsl pc
     ee4:	0006aa1a 	andeq	sl, r6, sl, lsl sl
     ee8:	000e6f00 	andeq	r6, lr, r0, lsl #30
     eec:	03050100 	movweq	r0, #20736	; 0x5100
     ef0:	08002ba0 	stmdaeq	r0, {r5, r7, r8, r9, fp, sp}
     ef4:	00068221 	andeq	r8, r6, r1, lsr #4
     ef8:	00115908 	andseq	r5, r1, r8, lsl #18
     efc:	000f1400 	andeq	r1, pc, r0, lsl #8
     f00:	50011c00 	andpl	r1, r1, r0, lsl #24
     f04:	2b500305 	blcs	1401b20 <_Min_Heap_Size+0x1401320>
     f08:	011c0800 	tsteq	ip, r0, lsl #16
     f0c:	a0030551 	andge	r0, r3, r1, asr r5
     f10:	0008002b 	andeq	r0, r8, fp, lsr #32
     f14:	00068622 	andeq	r8, r6, r2, lsr #12
     f18:	000f1e08 	andeq	r1, pc, r8, lsl #28
     f1c:	011d0000 	tsteq	sp, r0
     f20:	00000544 	andeq	r0, r0, r4, asr #10
     f24:	01067901 	tsteq	r6, r1, lsl #18
     f28:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
     f2c:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
     f30:	00000150 	andeq	r0, r0, r0, asr r1
     f34:	000f7301 	andeq	r7, pc, r1, lsl #6
     f38:	06aa1a00 	strteq	r1, [sl], r0, lsl #20
     f3c:	0e6f0000 	cdpeq	0, 6, cr0, cr15, cr0, {0}
     f40:	05010000 	streq	r0, [r1, #-0]
     f44:	002ba803 	eoreq	sl, fp, r3, lsl #16
     f48:	066a2108 	strbteq	r2, [sl], -r8, lsl #2
     f4c:	11590800 	cmpne	r9, r0, lsl #16
     f50:	0f690000 	svceq	0x00690000
     f54:	011c0000 	tsteq	ip, r0
     f58:	50030550 	andpl	r0, r3, r0, asr r5
     f5c:	1c08002b 	stcne	0, cr0, [r8], {43}	; 0x2b
     f60:	03055101 	movweq	r5, #20737	; 0x5101
     f64:	08002ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp, sp}
     f68:	066e2200 	strbteq	r2, [lr], -r0, lsl #4
     f6c:	0f730800 	svceq	0x00730800
     f70:	1d000000 	stcne	0, cr0, [r0, #-0]
     f74:	00080f01 	andeq	r0, r8, r1, lsl #30
     f78:	06730100 	ldrbteq	r0, [r3], -r0, lsl #2
     f7c:	00064801 	andeq	r4, r6, r1, lsl #16
     f80:	00066008 	andeq	r6, r6, r8
     f84:	00017008 	andeq	r7, r1, r8
     f88:	0fc80100 	svceq	0x00c80100
     f8c:	aa1a0000 	bge	680f94 <_Min_Heap_Size+0x680794>
     f90:	6f000006 	svcvs	0x00000006
     f94:	0100000e 	tsteq	r0, lr
     f98:	2bb00305 	blcs	fec01bb4 <_estack+0xdec0097c>
     f9c:	52210800 	eorpl	r0, r1, #0, 16
     fa0:	59080006 	stmdbpl	r8, {r1, r2}
     fa4:	be000011 	mcrlt	0, 0, r0, cr0, cr1, {0}
     fa8:	1c00000f 	stcne	0, cr0, [r0], {15}
     fac:	03055001 	movweq	r5, #20481	; 0x5001
     fb0:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}
     fb4:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     fb8:	002bb003 	eoreq	fp, fp, r3
     fbc:	56220008 	strtpl	r0, [r2], -r8
     fc0:	c8080006 	stmdagt	r8, {r1, r2}
     fc4:	0000000f 	andeq	r0, r0, pc
     fc8:	0809011d 	stmdaeq	r9, {r0, r2, r3, r4, r8}
     fcc:	6a010000 	bvs	40fd4 <_Min_Heap_Size+0x407d4>
     fd0:	06300106 	ldrteq	r0, [r0], -r6, lsl #2
     fd4:	06480800 	strbeq	r0, [r8], -r0, lsl #16
     fd8:	01900800 	orrseq	r0, r0, r0, lsl #16
     fdc:	1d010000 	stcne	0, cr0, [r1, #-0]
     fe0:	1a000010 	bne	1028 <_Min_Heap_Size+0x828>
     fe4:	000006aa 	andeq	r0, r0, sl, lsr #13
     fe8:	00000e6f 	andeq	r0, r0, pc, ror #28
     fec:	b8030501 	stmdalt	r3, {r0, r8, sl}
     ff0:	2108002b 	tstcs	r8, fp, lsr #32
     ff4:	0800063a 	stmdaeq	r0, {r1, r3, r4, r5, r9, sl}
     ff8:	00001159 	andeq	r1, r0, r9, asr r1
     ffc:	00001013 	andeq	r1, r0, r3, lsl r0
    1000:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
    1004:	002b5003 	eoreq	r5, fp, r3
    1008:	51011c08 	tstpl	r1, r8, lsl #24
    100c:	2bb80305 	blcs	fee01c28 <_estack+0xdee009f0>
    1010:	22000800 	andcs	r0, r0, #0, 16
    1014:	0800063e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, sl}
    1018:	0000101d 	andeq	r1, r0, sp, lsl r0
    101c:	4a011d00 	bmi	48424 <_Min_Heap_Size+0x47c24>
    1020:	01000002 	tsteq	r0, r2
    1024:	e4010659 	str	r0, [r1], #-1625	; 0xfffff9a7
    1028:	30080005 	andcc	r0, r8, r5
    102c:	b0080006 	andlt	r0, r8, r6
    1030:	01000001 	tsteq	r0, r1
    1034:	000010a4 	andeq	r1, r0, r4, lsr #1
    1038:	0000c524 	andeq	ip, r0, r4, lsr #10
    103c:	115b0100 	cmpne	fp, r0, lsl #2
    1040:	000010a4 	andeq	r1, r0, r4, lsr #1
    1044:	000001ee 	andeq	r0, r0, lr, ror #3
    1048:	000001e8 	andeq	r0, r0, r8, ror #3
    104c:	001f0e1f 	andseq	r0, pc, pc, lsl lr	; <UNPREDICTABLE>
    1050:	105c0100 	subsne	r0, ip, r0, lsl #2
    1054:	0000008c 	andeq	r0, r0, ip, lsl #1
    1058:	216c9102 	cmncs	ip, r2, lsl #2
    105c:	08000606 	stmdaeq	r0, {r1, r2, r9, sl}
    1060:	00001159 	andeq	r1, r0, r9, asr r1
    1064:	00001075 	andeq	r1, r0, r5, ror r0
    1068:	0250011c 	subseq	r0, r0, #28, 2
    106c:	011c0075 	tsteq	ip, r5, ror r0
    1070:	00740251 	rsbseq	r0, r4, r1, asr r2
    1074:	06142100 	ldreq	r2, [r4], -r0, lsl #2
    1078:	11590800 	cmpne	r9, r0, lsl #16
    107c:	108e0000 	addne	r0, lr, r0
    1080:	011c0000 	tsteq	ip, r0
    1084:	00750250 	rsbseq	r0, r5, r0, asr r2
    1088:	0151011c 	cmpeq	r1, ip, lsl r1
    108c:	241b0034 	ldrcs	r0, [fp], #-52	; 0xffffffcc
    1090:	59080006 	stmdbpl	r8, {r1, r2}
    1094:	1c000011 	stcne	0, cr0, [r0], {17}
    1098:	75025001 	strvc	r5, [r2, #-1]
    109c:	51011c00 	tstpl	r1, r0, lsl #24
    10a0:	00003301 	andeq	r3, r0, r1, lsl #6
    10a4:	008c0413 	addeq	r0, ip, r3, lsl r4
    10a8:	011d0000 	tsteq	sp, r0
    10ac:	0000048c 	andeq	r0, r0, ip, lsl #9
    10b0:	01065001 	tsteq	r6, r1
	...
    10bc:	0000021a 	andeq	r0, r0, sl, lsl r2
    10c0:	0010ff01 	andseq	pc, r0, r1, lsl #30
    10c4:	00612500 	rsbeq	r2, r1, r0, lsl #10
    10c8:	85075201 	strhi	r5, [r7, #-513]	; 0xfffffdff
    10cc:	00000000 	andeq	r0, r0, r0
    10d0:	01006225 	tsteq	r0, r5, lsr #4
    10d4:	00850e52 	addeq	r0, r5, r2, asr lr
    10d8:	25000000 	strcs	r0, [r0, #-0]
    10dc:	52010063 	andpl	r0, r1, #99	; 0x63
    10e0:	00008515 	andeq	r8, r0, r5, lsl r5
    10e4:	001b0000 	andseq	r0, fp, r0
    10e8:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    10ec:	1c000011 	stcne	0, cr0, [r0], {17}
    10f0:	03055001 	movweq	r5, #20481	; 0x5001
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	0151011c 	cmpeq	r1, ip, lsl r1
    10fc:	23000030 	movwcs	r0, #48	; 0x30
    1100:	00047f01 	andeq	r7, r4, r1, lsl #30
    1104:	01480100 	mrseq	r0, (UNDEF: 88)
    1108:	00008501 	andeq	r8, r0, r1, lsl #10
    110c:	0005c400 	andeq	ip, r5, r0, lsl #8
    1110:	0005e408 	andeq	lr, r5, r8, lsl #8
    1114:	00023a08 	andeq	r3, r2, r8, lsl #20
    1118:	114e0100 	mrsne	r0, (UNDEF: 94)
    111c:	63260000 			; <UNDEFINED> instruction: 0x63260000
    1120:	48010068 	stmdami	r1, {r3, r5, r6}
    1124:	00008501 	andeq	r8, r0, r1, lsl #10
    1128:	00027600 	andeq	r7, r2, r0, lsl #12
    112c:	00027200 	andeq	r7, r2, r0, lsl #4
    1130:	05d81b00 	ldrbeq	r1, [r8, #2816]	; 0xb00
    1134:	11e50800 	mvnne	r0, r0, lsl #16
    1138:	011c0000 	tsteq	ip, r0
    113c:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    1140:	0152011c 	cmpeq	r2, ip, lsl r1
    1144:	53011c31 	movwpl	r1, #7217	; 0x1c31
    1148:	ffff0a03 			; <UNDEFINED> instruction: 0xffff0a03
    114c:	50270000 	eorpl	r0, r7, r0
    1150:	02000005 	andeq	r0, r0, #5
    1154:	011b03c0 	tsteq	fp, r0, asr #7
    1158:	01012803 	tsteq	r1, r3, lsl #16
	...
    1164:	2905c80d 	stmdbcs	r5, {r0, r2, r3, fp, lr, pc}
    1168:	00a70101 	adceq	r0, r7, r1, lsl #2
    116c:	009d0000 	addseq	r0, sp, r0
    1170:	00110000 	andseq	r0, r1, r0
    1174:	4001012a 	andmi	r0, r1, sl, lsr #2
    1178:	40000007 	andmi	r0, r0, r7
    117c:	09000007 	stmdbeq	r0, {r0, r1, r2}
    1180:	2a1304db 	bcs	4c24f4 <_Min_Heap_Size+0x4c1cf4>
    1184:	085c0101 	ldmdaeq	ip, {r0, r8}^
    1188:	085c0000 	ldmdaeq	ip, {}^	; <UNPREDICTABLE>
    118c:	dc090000 	stcle	0, cr0, [r9], {-0}
    1190:	01281304 			; <UNDEFINED> instruction: 0x01281304
    1194:	00046301 	andeq	r6, r4, r1, lsl #6
    1198:	00046300 	andeq	r6, r4, r0, lsl #6
    119c:	13db0e00 	bicsne	r0, fp, #0, 28
    11a0:	50010128 	andpl	r0, r1, r8, lsr #2
    11a4:	50000009 	andpl	r0, r0, r9
    11a8:	0f000009 	svceq	0x00000009
    11ac:	01280627 			; <UNDEFINED> instruction: 0x01280627
    11b0:	00000701 	andeq	r0, r0, r1, lsl #14
    11b4:	00000700 	andeq	r0, r0, r0, lsl #14
    11b8:	06290c00 	strteq	r0, [r9], -r0, lsl #24
    11bc:	70010128 	andvc	r0, r1, r8, lsr #2
    11c0:	70000000 	andvc	r0, r0, r0
    11c4:	10000000 	andne	r0, r0, r0
    11c8:	01290642 			; <UNDEFINED> instruction: 0x01290642
    11cc:	00022801 	andeq	r2, r2, r1, lsl #16
    11d0:	00021e00 	andeq	r1, r2, r0, lsl #28
    11d4:	28001100 	stmdacs	r0, {r8, ip}
    11d8:	07520101 	ldrbeq	r0, [r2, -r1, lsl #2]
    11dc:	07520000 	ldrbeq	r0, [r2, -r0]
    11e0:	e90e0000 	stmdb	lr, {}	; <UNPREDICTABLE>
    11e4:	01012a06 	tsteq	r1, r6, lsl #20
    11e8:	00000119 	andeq	r0, r0, r9, lsl r1
    11ec:	00000119 	andeq	r0, r0, r9, lsl r1
    11f0:	1302e90b 	movwne	lr, #10507	; 0x290b
    11f4:	00030400 	andeq	r0, r3, r0, lsl #8
    11f8:	88000200 	stmdahi	r0, {r9}
    11fc:	04000002 	streq	r0, [r0], #-2
    1200:	0005d701 	andeq	sp, r5, r1, lsl #14
    1204:	096a0c00 	stmdbeq	sl!, {sl, fp}^
    1208:	04200000 	strteq	r0, [r0], #-0
    120c:	00700000 	rsbseq	r0, r0, r0
	...
    1218:	05630000 	strbeq	r0, [r3, #-0]!
    121c:	01020000 	mrseq	r0, (UNDEF: 2)
    1220:	0005c506 	andeq	ip, r5, r6, lsl #10
    1224:	08010200 	stmdaeq	r1, {r9}
    1228:	000005c3 	andeq	r0, r0, r3, asr #11
    122c:	fa050202 	blx	141a3c <_Min_Heap_Size+0x14123c>
    1230:	02000003 	andeq	r0, r0, #3
    1234:	07f60702 	ldrbeq	r0, [r6, r2, lsl #14]!
    1238:	04020000 	streq	r0, [r2], #-0
    123c:	0002ec05 	andeq	lr, r2, r5, lsl #24
    1240:	02c20300 	sbceq	r0, r2, #0, 6
    1244:	4f020000 	svcmi	0x00020000
    1248:	00005819 	andeq	r5, r0, r9, lsl r8
    124c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1250:	000000b3 	strheq	r0, [r0], -r3
    1254:	e7050802 	str	r0, [r5, -r2, lsl #16]
    1258:	02000002 	andeq	r0, r0, #2
    125c:	00ae0708 	adceq	r0, lr, r8, lsl #14
    1260:	04040000 	streq	r0, [r4], #-0
    1264:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1268:	07040200 	streq	r0, [r4, -r0, lsl #4]
    126c:	000000b8 	strheq	r0, [r0], -r8
    1270:	0002c403 	andeq	ip, r2, r3, lsl #8
    1274:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    1278:	0000004c 	andeq	r0, r0, ip, asr #32
    127c:	00007b05 	andeq	r7, r0, r5, lsl #22
    1280:	007b0600 	rsbseq	r0, fp, r0, lsl #12
    1284:	009c0000 	addseq	r0, ip, r0
    1288:	74070000 	strvc	r0, [r7], #-0
    128c:	01000000 	mrseq	r0, (UNDEF: 0)
    1290:	04880800 	streq	r0, [r8], #2048	; 0x800
    1294:	880901f4 	stmdahi	r9, {r2, r4, r5, r6, r7, r8}
    1298:	09000002 	stmdbeq	r0, {r1}
    129c:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    12a0:	871101f6 			; <UNDEFINED> instruction: 0x871101f6
    12a4:	02000000 	andeq	r0, r0, #0
    12a8:	820a0023 	andhi	r0, sl, #35	; 0x23
    12ac:	04000002 	streq	r0, [r0], #-2
    12b0:	871101f7 			; <UNDEFINED> instruction: 0x871101f7
    12b4:	02000000 	andeq	r0, r0, #0
    12b8:	850a0423 	strhi	r0, [sl, #-1059]	; 0xfffffbdd
    12bc:	04000002 	streq	r0, [r0], #-2
    12c0:	871101f8 			; <UNDEFINED> instruction: 0x871101f8
    12c4:	02000000 	andeq	r0, r0, #0
    12c8:	43090823 	movwmi	r0, #38947	; 0x9823
    12cc:	04005249 	streq	r5, [r0], #-585	; 0xfffffdb7
    12d0:	871101f9 			; <UNDEFINED> instruction: 0x871101f9
    12d4:	02000000 	andeq	r0, r0, #0
    12d8:	660a0c23 	strvs	r0, [sl], -r3, lsr #24
    12dc:	04000001 	streq	r0, [r0], #-1
    12e0:	871101fa 			; <UNDEFINED> instruction: 0x871101fa
    12e4:	02000000 	andeq	r0, r0, #0
    12e8:	7e0a1023 	cdpvc	0, 0, cr1, cr10, cr3, {1}
    12ec:	04000007 	streq	r0, [r0], #-7
    12f0:	871101fb 			; <UNDEFINED> instruction: 0x871101fb
    12f4:	02000000 	andeq	r0, r0, #0
    12f8:	d00a1423 	andle	r1, sl, r3, lsr #8
    12fc:	04000006 	streq	r0, [r0], #-6
    1300:	871101fc 			; <UNDEFINED> instruction: 0x871101fc
    1304:	02000000 	andeq	r0, r0, #0
    1308:	5e0a1823 	cdppl	8, 0, cr1, cr10, cr3, {1}
    130c:	04000005 	streq	r0, [r0], #-5
    1310:	7b1101fd 	blvc	441b0c <_Min_Heap_Size+0x44130c>
    1314:	02000000 	andeq	r0, r0, #0
    1318:	3b0a1c23 	blcc	2883ac <_Min_Heap_Size+0x287bac>
    131c:	04000005 	streq	r0, [r0], #-5
    1320:	871101fe 			; <UNDEFINED> instruction: 0x871101fe
    1324:	02000000 	andeq	r0, r0, #0
    1328:	f90a2023 			; <UNDEFINED> instruction: 0xf90a2023
    132c:	04000001 	streq	r0, [r0], #-1
    1330:	871101ff 			; <UNDEFINED> instruction: 0x871101ff
    1334:	02000000 	andeq	r0, r0, #0
    1338:	680a2423 	stmdavs	sl, {r0, r1, r5, sl, sp}
    133c:	04000005 	streq	r0, [r0], #-5
    1340:	8c110200 	lfmhi	f0, 4, [r1], {-0}
    1344:	02000000 	andeq	r0, r0, #0
    1348:	d40a2823 	strle	r2, [sl], #-2083	; 0xfffff7dd
    134c:	04000008 	streq	r0, [r0], #-8
    1350:	87110201 	ldrhi	r0, [r1, -r1, lsl #4]
    1354:	02000000 	andeq	r0, r0, #0
    1358:	ee0a3023 	cdp	0, 0, cr3, cr10, cr3, {1}
    135c:	04000007 	streq	r0, [r0], #-7
    1360:	87110202 	ldrhi	r0, [r1, -r2, lsl #4]
    1364:	02000000 	andeq	r0, r0, #0
    1368:	d60a3423 	strle	r3, [sl], -r3, lsr #8
    136c:	04000004 	streq	r0, [r0], #-4
    1370:	87110203 	ldrhi	r0, [r1, -r3, lsl #4]
    1374:	02000000 	andeq	r0, r0, #0
    1378:	720a3823 	andvc	r3, sl, #2293760	; 0x230000
    137c:	04000005 	streq	r0, [r0], #-5
    1380:	7b110204 	blvc	441b98 <_Min_Heap_Size+0x441398>
    1384:	02000000 	andeq	r0, r0, #0
    1388:	0b0a3c23 	bleq	29041c <_Min_Heap_Size+0x28fc1c>
    138c:	04000007 	streq	r0, [r0], #-7
    1390:	87110205 	ldrhi	r0, [r1, -r5, lsl #4]
    1394:	02000000 	andeq	r0, r0, #0
    1398:	c80a4023 	stmdagt	sl, {r0, r1, r5, lr}
    139c:	04000006 	streq	r0, [r0], #-6
    13a0:	87110206 	ldrhi	r0, [r1, -r6, lsl #4]
    13a4:	02000000 	andeq	r0, r0, #0
    13a8:	7c0a4423 	cfstrsvc	mvf4, [sl], {35}	; 0x23
    13ac:	04000005 	streq	r0, [r0], #-5
    13b0:	8c110207 	lfmhi	f0, 4, [r1], {7}
    13b4:	02000000 	andeq	r0, r0, #0
    13b8:	2b0a4823 	blcs	29344c <_Min_Heap_Size+0x292c4c>
    13bc:	04000001 	streq	r0, [r0], #-1
    13c0:	87110208 	ldrhi	r0, [r1, -r8, lsl #4]
    13c4:	02000000 	andeq	r0, r0, #0
    13c8:	100a5023 	andne	r5, sl, r3, lsr #32
    13cc:	04000005 	streq	r0, [r0], #-5
    13d0:	87110209 	ldrhi	r0, [r1, -r9, lsl #4]
    13d4:	02000000 	andeq	r0, r0, #0
    13d8:	960a5423 	strls	r5, [sl], -r3, lsr #8
    13dc:	04000006 	streq	r0, [r0], #-6
    13e0:	8711020a 	ldrhi	r0, [r1, -sl, lsl #4]
    13e4:	02000000 	andeq	r0, r0, #0
    13e8:	860a5823 	strhi	r5, [sl], -r3, lsr #16
    13ec:	04000005 	streq	r0, [r0], #-5
    13f0:	7b11020b 	blvc	441c24 <_Min_Heap_Size+0x441424>
    13f4:	02000000 	andeq	r0, r0, #0
    13f8:	1b0a5c23 	blne	29848c <_Min_Heap_Size+0x297c8c>
    13fc:	04000000 	streq	r0, [r0], #-0
    1400:	8711020c 	ldrhi	r0, [r1, -ip, lsl #4]
    1404:	02000000 	andeq	r0, r0, #0
    1408:	eb0a6023 	bl	29949c <_Min_Heap_Size+0x298c9c>
    140c:	04000003 	streq	r0, [r0], #-3
    1410:	8711020d 	ldrhi	r0, [r1, -sp, lsl #4]
    1414:	02000000 	andeq	r0, r0, #0
    1418:	900a6423 	andls	r6, sl, r3, lsr #8
    141c:	04000005 	streq	r0, [r0], #-5
    1420:	8c11020e 	lfmhi	f0, 4, [r1], {14}
    1424:	02000000 	andeq	r0, r0, #0
    1428:	700a6823 	andvc	r6, sl, r3, lsr #16
    142c:	04000008 	streq	r0, [r0], #-8
    1430:	8711020f 	ldrhi	r0, [r1, -pc, lsl #4]
    1434:	02000000 	andeq	r0, r0, #0
    1438:	43097023 	movwmi	r7, #36899	; 0x9023
    143c:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    1440:	87110210 			; <UNDEFINED> instruction: 0x87110210
    1444:	02000000 	andeq	r0, r0, #0
    1448:	9a0a7423 	bls	29e4dc <_Min_Heap_Size+0x29dcdc>
    144c:	04000005 	streq	r0, [r0], #-5
    1450:	8c110211 	lfmhi	f0, 4, [r1], {17}
    1454:	02000000 	andeq	r0, r0, #0
    1458:	3f0a7823 	svccc	0x000a7823
    145c:	04000008 	streq	r0, [r0], #-8
    1460:	87110212 			; <UNDEFINED> instruction: 0x87110212
    1464:	03000000 	movweq	r0, #0
    1468:	0a018023 	beq	614fc <_Min_Heap_Size+0x60cfc>
    146c:	0000037e 	andeq	r0, r0, lr, ror r3
    1470:	11021304 	tstne	r2, r4, lsl #6
    1474:	00000087 	andeq	r0, r0, r7, lsl #1
    1478:	01842303 	orreq	r2, r4, r3, lsl #6
    147c:	01cd0b00 	biceq	r0, sp, r0, lsl #22
    1480:	14040000 	strne	r0, [r4], #-0
    1484:	009c0302 	addseq	r0, ip, r2, lsl #6
    1488:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    148c:	00072604 	andeq	r2, r7, r4, lsl #12
    1490:	50010c00 	andpl	r0, r1, r0, lsl #24
    1494:	01000009 	tsteq	r0, r9
    1498:	1801062a 	stmdane	r1, {r1, r3, r5, r9, sl}
    149c:	64080007 	strvs	r0, [r8], #-7
    14a0:	95080007 	strls	r0, [r8, #-7]
    14a4:	01000002 	tsteq	r0, r2
    14a8:	00071a0d 	andeq	r1, r7, sp, lsl #20
    14ac:	00073208 	andeq	r3, r7, r8, lsl #4
    14b0:	0002d008 	andeq	sp, r2, r8
    14b4:	01b60e00 			; <UNDEFINED> instruction: 0x01b60e00
    14b8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    14bc:	00008703 	andeq	r8, r0, r3, lsl #14
    14c0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    14c4:	07320d00 	ldreq	r0, [r2, -r0, lsl #26]!
    14c8:	07460800 	strbeq	r0, [r6, -r0, lsl #16]
    14cc:	02ed0800 	rsceq	r0, sp, #0, 16
    14d0:	b60e0000 	strlt	r0, [lr], -r0
    14d4:	01000001 	tsteq	r0, r1
    14d8:	0087032f 	addeq	r0, r7, pc, lsr #6
    14dc:	91020000 	mrsls	r0, (UNDEF: 2)
    14e0:	460f0078 			; <UNDEFINED> instruction: 0x460f0078
    14e4:	5a080007 	bpl	201508 <_Min_Heap_Size+0x200d08>
    14e8:	0e080007 	cdpeq	0, 0, cr0, cr8, cr7, {0}
    14ec:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    14f0:	87033001 	strhi	r3, [r3, -r1]
    14f4:	02000000 	andeq	r0, r0, #0
    14f8:	00007c91 	muleq	r0, r1, ip
    14fc:	000d6400 	andeq	r6, sp, r0, lsl #8
    1500:	5b000200 	blpl	1d08 <_Min_Heap_Size+0x1508>
    1504:	04000003 	streq	r0, [r0], #-3
    1508:	0005d701 	andeq	sp, r5, r1, lsl #14
    150c:	0eaf0c00 	cdpeq	12, 10, cr0, cr15, cr0, {0}
    1510:	04200000 	strteq	r0, [r0], #-0
    1514:	00800000 	addeq	r0, r0, r0
	...
    1520:	06d20000 	ldrbeq	r0, [r2], r0
    1524:	05020000 	streq	r0, [r2, #-0]
    1528:	00023c01 	andeq	r3, r2, r1, lsl #24
    152c:	01420400 	cmpeq	r2, r0, lsl #8
    1530:	0000023c 	andeq	r0, r0, ip, lsr r2
    1534:	000be003 	andeq	lr, fp, r3
    1538:	0f037200 	svceq	0x00037200
    153c:	7400000c 	strvc	r0, [r0], #-12
    1540:	000c6f03 	andeq	r6, ip, r3, lsl #30
    1544:	16037500 	strne	r7, [r3], -r0, lsl #10
    1548:	7600000b 	strvc	r0, [r0], -fp
    154c:	000cc103 	andeq	ip, ip, r3, lsl #2
    1550:	3c037b00 			; <UNDEFINED> instruction: 0x3c037b00
    1554:	7c00000e 	stcvc	0, cr0, [r0], {14}
    1558:	000f1a03 	andeq	r1, pc, r3, lsl #20
    155c:	88037e00 	stmdahi	r3, {r9, sl, fp, ip, sp, lr}
    1560:	7f00000a 	svcvc	0x0000000a
    1564:	000bf404 	andeq	pc, fp, r4, lsl #8
    1568:	e0040000 	and	r0, r4, r0
    156c:	0100000d 	tsteq	r0, sp
    1570:	000c2504 	andeq	r2, ip, r4, lsl #10
    1574:	83040200 	movwhi	r0, #16896	; 0x4200
    1578:	03000009 	movweq	r0, #9
    157c:	0009ed04 	andeq	lr, r9, r4, lsl #26
    1580:	6f040400 	svcvs	0x00040400
    1584:	0500000e 	streq	r0, [r0, #-14]
    1588:	000e0d04 	andeq	r0, lr, r4, lsl #26
    158c:	80040600 	andhi	r0, r4, r0, lsl #12
    1590:	0700000b 	streq	r0, [r0, -fp]
    1594:	00099104 	andeq	r9, r9, r4, lsl #2
    1598:	0f040800 	svceq	0x00040800
    159c:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    15a0:	000cfc04 	andeq	pc, ip, r4, lsl #24
    15a4:	58040a00 	stmdapl	r4, {r9, fp}
    15a8:	0b00000d 	bleq	15e4 <_Min_Heap_Size+0xde4>
    15ac:	000d2204 	andeq	r2, sp, r4, lsl #4
    15b0:	b2040c00 	andlt	r0, r4, #0, 24
    15b4:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    15b8:	000e7804 	andeq	r7, lr, r4, lsl #16
    15bc:	18040e00 	stmdane	r4, {r9, sl, fp}
    15c0:	0f00000e 	svceq	0x0000000e
    15c4:	000b9804 	andeq	r9, fp, r4, lsl #16
    15c8:	9c041000 	stcls	0, cr1, [r4], {-0}
    15cc:	11000009 	tstne	r0, r9
    15d0:	000dd704 	andeq	sp, sp, r4, lsl #14
    15d4:	8b041200 	blhi	105ddc <_Min_Heap_Size+0x1055dc>
    15d8:	1300000b 	movwne	r0, #11
    15dc:	000b3404 	andeq	r3, fp, r4, lsl #8
    15e0:	dd041400 	cfstrsle	mvf1, [r4, #-0]
    15e4:	1500000e 	strne	r0, [r0, #-14]
    15e8:	000c3504 	andeq	r3, ip, r4, lsl #10
    15ec:	eb041600 	bl	106df4 <_Min_Heap_Size+0x1065f4>
    15f0:	1700000e 	strne	r0, [r0, -lr]
    15f4:	000c8804 	andeq	r8, ip, r4, lsl #16
    15f8:	9c041800 	stcls	8, cr1, [r4], {-0}
    15fc:	1900000e 	stmdbne	r0, {r1, r2, r3}
    1600:	000a7004 	andeq	r7, sl, r4
    1604:	73041a00 	movwvc	r1, #18944	; 0x4a00
    1608:	1b00000b 	blne	163c <_Min_Heap_Size+0xe3c>
    160c:	0009f804 	andeq	pc, r9, r4, lsl #16
    1610:	95041c00 	strls	r1, [r4, #-3072]	; 0xfffff400
    1614:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    1618:	000b4204 	andeq	r4, fp, r4, lsl #4
    161c:	66041e00 	strvs	r1, [r4], -r0, lsl #28
    1620:	1f00000b 	svcne	0x0000000b
    1624:	000ae604 	andeq	lr, sl, r4, lsl #12
    1628:	15042000 	strne	r2, [r4, #-0]
    162c:	2100000d 	tstcs	r0, sp
    1630:	000c5a04 	andeq	r5, ip, r4, lsl #20
    1634:	b7042200 	strlt	r2, [r4, -r0, lsl #4]
    1638:	2300000c 	movwcs	r0, #12
    163c:	000a2d04 	andeq	r2, sl, r4, lsl #26
    1640:	9f042400 	svcls	0x00042400
    1644:	2500000d 	strcs	r0, [r0, #-13]
    1648:	000b4c04 	andeq	r4, fp, r4, lsl #24
    164c:	95042600 	strls	r2, [r4, #-1536]	; 0xfffffa00
    1650:	2700000a 	strcs	r0, [r0, -sl]
    1654:	000d8604 	andeq	r8, sp, r4, lsl #12
    1658:	6a042800 	bvs	10b660 <_Min_Heap_Size+0x10ae60>
    165c:	2900000d 	stmdbcs	r0, {r0, r2, r3}
    1660:	000ceb04 	andeq	lr, ip, r4, lsl #22
    1664:	37042a00 	strcc	r2, [r4, -r0, lsl #20]
    1668:	2b00000a 	blcs	1698 <_Min_Heap_Size+0xe98>
    166c:	0009ae04 	andeq	sl, r9, r4, lsl #28
    1670:	aa042c00 	bge	10c678 <_Min_Heap_Size+0x10be78>
    1674:	2d00000b 	stccs	0, cr0, [r0, #-44]	; 0xffffffd4
    1678:	000ef804 	andeq	pc, lr, r4, lsl #16
    167c:	39042e00 	stmdbcc	r4, {r9, sl, fp, sp}
    1680:	2f00000f 	svccs	0x0000000f
    1684:	000df004 	andeq	pc, sp, r4
    1688:	05043000 	streq	r3, [r4, #-0]
    168c:	3100000f 	tstcc	r0, pc
    1690:	000b0c04 	andeq	r0, fp, r4, lsl #24
    1694:	e3043200 	movw	r3, #16896	; 0x4200
    1698:	33000009 	movwcc	r0, #9
    169c:	000cd604 	andeq	sp, ip, r4, lsl #12
    16a0:	7d043400 	cfstrsvc	mvf3, [r4, #-0]
    16a4:	3500000c 	strcc	r0, [r0, #-12]
    16a8:	000d0704 	andeq	r0, sp, r4, lsl #14
    16ac:	9b043600 	blls	10eeb4 <_Min_Heap_Size+0x10e6b4>
    16b0:	3700000c 	strcc	r0, [r0, -ip]
    16b4:	000c4304 	andeq	r4, ip, r4, lsl #6
    16b8:	d1043800 	tstle	r4, r0, lsl #16
    16bc:	39000009 	stmdbcc	r0, {r0, r3}
    16c0:	000f4b04 	andeq	r4, pc, r4, lsl #22
    16c4:	34043a00 	strcc	r3, [r4], #-2560	; 0xfffff600
    16c8:	3b00000d 	blcc	1704 <_Min_Heap_Size+0xf04>
    16cc:	000ac404 	andeq	ip, sl, r4, lsl #8
    16d0:	46043c00 	strmi	r3, [r4], -r0, lsl #24
    16d4:	3f00000d 	svccc	0x0000000d
    16d8:	000a0204 	andeq	r0, sl, r4, lsl #4
    16dc:	c9044000 	stmdbgt	r4, {lr}
    16e0:	4100000d 	tstmi	r0, sp
    16e4:	000afe04 	andeq	pc, sl, r4, lsl #28
    16e8:	d4044200 	strle	r4, [r4], #-512	; 0xfffffe00
    16ec:	4300000b 	movwmi	r0, #11
    16f0:	000a5e04 	andeq	r5, sl, r4, lsl #28
    16f4:	2a044400 	bcs	1126fc <_Min_Heap_Size+0x111efc>
    16f8:	4500000e 	strmi	r0, [r0, #-14]
    16fc:	000bc204 	andeq	ip, fp, r4, lsl #4
    1700:	10044600 	andne	r4, r4, r0, lsl #12
    1704:	4700000a 	strmi	r0, [r0, -sl]
    1708:	000e4e04 	andeq	r4, lr, r4, lsl #28
    170c:	79044800 	stmdbvc	r4, {fp, lr}
    1710:	4900000d 	stmdbmi	r0, {r0, r2, r3}
    1714:	000ec304 	andeq	ip, lr, r4, lsl #6
    1718:	26044a00 	strcs	r4, [r4], -r0, lsl #20
    171c:	4b00000f 	blmi	1760 <_Min_Heap_Size+0xf60>
    1720:	000bfe04 	andeq	pc, fp, r4, lsl #28
    1724:	a5044c00 	strge	r4, [r4, #-3072]	; 0xfffff400
    1728:	4d00000c 	stcmi	0, cr0, [r0, #-48]	; 0xffffffd0
    172c:	000dc004 	andeq	ip, sp, r4
    1730:	cd045000 	stcgt	0, cr5, [r4, #-0]
    1734:	5100000c 	tstpl	r0, ip
    1738:	06010500 	streq	r0, [r1], -r0, lsl #10
    173c:	000005c5 	andeq	r0, r0, r5, asr #11
    1740:	00006606 	andeq	r6, r0, r6, lsl #12
    1744:	182b0200 	stmdane	fp!, {r9}
    1748:	0000024f 	andeq	r0, r0, pc, asr #4
    174c:	c3080105 	movwgt	r0, #33029	; 0x8105
    1750:	05000005 	streq	r0, [r0, #-5]
    1754:	03fa0502 	mvnseq	r0, #8388608	; 0x800000
    1758:	5c060000 	stcpl	0, cr0, [r6], {-0}
    175c:	02000007 	andeq	r0, r0, #7
    1760:	02691939 	rsbeq	r1, r9, #933888	; 0xe4000
    1764:	02050000 	andeq	r0, r5, #0
    1768:	0007f607 	andeq	pc, r7, r7, lsl #12
    176c:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    1770:	000002ec 	andeq	r0, r0, ip, ror #5
    1774:	0002c206 	andeq	ip, r2, r6, lsl #4
    1778:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    177c:	00000283 	andeq	r0, r0, r3, lsl #5
    1780:	b3070405 	movwlt	r0, #29701	; 0x7405
    1784:	05000000 	streq	r0, [r0, #-0]
    1788:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    178c:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    1790:	0000ae07 	andeq	sl, r0, r7, lsl #28
    1794:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    1798:	00746e69 	rsbseq	r6, r4, r9, ror #28
    179c:	b8070405 	stmdalt	r7, {r0, r2, sl}
    17a0:	06000000 	streq	r0, [r0], -r0
    17a4:	00000068 	andeq	r0, r0, r8, rrx
    17a8:	43131803 	tstmi	r3, #196608	; 0x30000
    17ac:	08000002 	stmdaeq	r0, {r1}
    17b0:	000002a6 	andeq	r0, r0, r6, lsr #5
    17b4:	00075e06 	andeq	r5, r7, r6, lsl #28
    17b8:	14240300 	strtne	r0, [r4], #-768	; 0xfffffd00
    17bc:	0000025d 	andeq	r0, r0, sp, asr r2
    17c0:	0002b709 	andeq	fp, r2, r9, lsl #14
    17c4:	02c40600 	sbceq	r0, r4, #0, 12
    17c8:	30030000 	andcc	r0, r3, r0
    17cc:	00027714 	andeq	r7, r2, r4, lsl r7
    17d0:	02c80900 	sbceq	r0, r8, #0, 18
    17d4:	c80a0000 	stmdagt	sl, {}	; <UNPREDICTABLE>
    17d8:	e9000002 	stmdb	r0, {r1}
    17dc:	0b000002 	bleq	17ec <_Min_Heap_Size+0xfec>
    17e0:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    17e4:	180c0001 	stmdane	ip, {r0}
    17e8:	09014404 	stmdbeq	r1, {r2, sl, lr}
    17ec:	00000353 	andeq	r0, r0, r3, asr r3
    17f0:	0052430d 	subseq	r4, r2, sp, lsl #6
    17f4:	11014604 	tstne	r1, r4, lsl #12
    17f8:	000002d4 	ldrdeq	r0, [r0], -r4
    17fc:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    1800:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
    1804:	11014704 	tstne	r1, r4, lsl #14
    1808:	000002d4 	ldrdeq	r0, [r0], -r4
    180c:	0d042302 	stceq	3, cr2, [r4, #-8]
    1810:	00524150 	subseq	r4, r2, r0, asr r1
    1814:	11014804 	tstne	r1, r4, lsl #16
    1818:	000002d4 	ldrdeq	r0, [r0], -r4
    181c:	0e082302 	cdpeq	3, 0, cr2, cr8, cr2, {0}
    1820:	00000042 	andeq	r0, r0, r2, asr #32
    1824:	11014904 	tstne	r1, r4, lsl #18
    1828:	000002d4 	ldrdeq	r0, [r0], -r4
    182c:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    1830:	00000815 	andeq	r0, r0, r5, lsl r8
    1834:	11014a04 	tstne	r1, r4, lsl #20
    1838:	000002d4 	ldrdeq	r0, [r0], -r4
    183c:	0d102302 	ldceq	3, cr2, [r0, #-8]
    1840:	00524346 	subseq	r4, r2, r6, asr #6
    1844:	11014b04 	tstne	r1, r4, lsl #22
    1848:	000002d4 	ldrdeq	r0, [r0], -r4
    184c:	00142302 	andseq	r2, r4, r2, lsl #6
    1850:	0007db0f 	andeq	sp, r7, pc, lsl #22
    1854:	014c0400 	cmpeq	ip, r0, lsl #8
    1858:	0002e903 	andeq	lr, r2, r3, lsl #18
    185c:	04280c00 	strteq	r0, [r8], #-3072	; 0xfffff400
    1860:	fb0901ae 	blx	241f22 <_Min_Heap_Size+0x241722>
    1864:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1868:	00000ed7 	ldrdeq	r0, [r0], -r7
    186c:	1101b004 	tstne	r1, r4
    1870:	000002d4 	ldrdeq	r0, [r0], -r4
    1874:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    1878:	00000de9 	andeq	r0, r0, r9, ror #27
    187c:	1101b104 	tstne	r1, r4, lsl #2
    1880:	000002d4 	ldrdeq	r0, [r0], -r4
    1884:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    1888:	00000c67 	andeq	r0, r0, r7, ror #24
    188c:	1101b204 	tstne	r1, r4, lsl #4
    1890:	000002d4 	ldrdeq	r0, [r0], -r4
    1894:	0e082302 	cdpeq	3, 0, cr2, cr8, cr2, {0}
    1898:	00000cb1 			; <UNDEFINED> instruction: 0x00000cb1
    189c:	1101b304 	tstne	r1, r4, lsl #6
    18a0:	000002d4 	ldrdeq	r0, [r0], -r4
    18a4:	0d0c2302 	stceq	3, cr2, [ip, #-8]
    18a8:	00524449 	subseq	r4, r2, r9, asr #8
    18ac:	1101b404 	tstne	r1, r4, lsl #8
    18b0:	000002d4 	ldrdeq	r0, [r0], -r4
    18b4:	0d102302 	ldceq	3, cr2, [r0, #-8]
    18b8:	0052444f 	subseq	r4, r2, pc, asr #8
    18bc:	1101b504 	tstne	r1, r4, lsl #10
    18c0:	000002d4 	ldrdeq	r0, [r0], -r4
    18c4:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    18c8:	00000e8a 	andeq	r0, r0, sl, lsl #29
    18cc:	1101b604 	tstne	r1, r4, lsl #12
    18d0:	000002d4 	ldrdeq	r0, [r0], -r4
    18d4:	0e182302 	cdpeq	3, 1, cr2, cr8, cr2, {0}
    18d8:	00000c55 	andeq	r0, r0, r5, asr ip
    18dc:	1101b704 	tstne	r1, r4, lsl #14
    18e0:	000002d4 	ldrdeq	r0, [r0], -r4
    18e4:	0d1c2302 	ldceq	3, cr2, [ip, #-8]
    18e8:	00524641 	subseq	r4, r2, r1, asr #12
    18ec:	1101b804 	tstne	r1, r4, lsl #16
    18f0:	0000040b 	andeq	r0, r0, fp, lsl #8
    18f4:	00202302 	eoreq	r2, r0, r2, lsl #6
    18f8:	0002d40a 	andeq	sp, r2, sl, lsl #8
    18fc:	00040b00 	andeq	r0, r4, r0, lsl #22
    1900:	029f0b00 	addseq	r0, pc, #0, 22
    1904:	00010000 	andeq	r0, r1, r0
    1908:	0003fb09 	andeq	pc, r3, r9, lsl #22
    190c:	0e8f0f00 	cdpeq	15, 8, cr0, cr15, cr0, {0}
    1910:	b9040000 	stmdblt	r4, {}	; <UNPREDICTABLE>
    1914:	03600301 	cmneq	r0, #67108864	; 0x4000000
    1918:	880c0000 	stmdahi	ip, {}	; <UNPREDICTABLE>
    191c:	0901f404 	stmdbeq	r1, {r2, sl, ip, sp, lr, pc}
    1920:	00000609 	andeq	r0, r0, r9, lsl #12
    1924:	0052430d 	subseq	r4, r2, sp, lsl #6
    1928:	1101f604 	tstne	r1, r4, lsl #12	; <UNPREDICTABLE>
    192c:	000002d4 	ldrdeq	r0, [r0], -r4
    1930:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    1934:	00000282 	andeq	r0, r0, r2, lsl #5
    1938:	1101f704 	tstne	r1, r4, lsl #14	; <UNPREDICTABLE>
    193c:	000002d4 	ldrdeq	r0, [r0], -r4
    1940:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    1944:	00000285 	andeq	r0, r0, r5, lsl #5
    1948:	1101f804 	tstne	r1, r4, lsl #16	; <UNPREDICTABLE>
    194c:	000002d4 	ldrdeq	r0, [r0], -r4
    1950:	0d082302 	stceq	3, cr2, [r8, #-8]
    1954:	00524943 	subseq	r4, r2, r3, asr #18
    1958:	1101f904 	tstne	r1, r4, lsl #18	; <UNPREDICTABLE>
    195c:	000002d4 	ldrdeq	r0, [r0], -r4
    1960:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    1964:	00000166 	andeq	r0, r0, r6, ror #2
    1968:	1101fa04 	tstne	r1, r4, lsl #20	; <UNPREDICTABLE>
    196c:	000002d4 	ldrdeq	r0, [r0], -r4
    1970:	0e102302 	cdpeq	3, 1, cr2, cr0, cr2, {0}
    1974:	0000077e 	andeq	r0, r0, lr, ror r7
    1978:	1101fb04 	tstne	r1, r4, lsl #22	; <UNPREDICTABLE>
    197c:	000002d4 	ldrdeq	r0, [r0], -r4
    1980:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    1984:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1988:	1101fc04 	tstne	r1, r4, lsl #24	; <UNPREDICTABLE>
    198c:	000002d4 	ldrdeq	r0, [r0], -r4
    1990:	0e182302 	cdpeq	3, 1, cr2, cr8, cr2, {0}
    1994:	0000055e 	andeq	r0, r0, lr, asr r5
    1998:	1101fd04 	tstne	r1, r4, lsl #26	; <UNPREDICTABLE>
    199c:	000002c8 	andeq	r0, r0, r8, asr #5
    19a0:	0e1c2302 	cdpeq	3, 1, cr2, cr12, cr2, {0}
    19a4:	0000053b 	andeq	r0, r0, fp, lsr r5
    19a8:	1101fe04 	tstne	r1, r4, lsl #28	; <UNPREDICTABLE>
    19ac:	000002d4 	ldrdeq	r0, [r0], -r4
    19b0:	0e202302 	cdpeq	3, 2, cr2, cr0, cr2, {0}
    19b4:	000001f9 	strdeq	r0, [r0], -r9
    19b8:	1101ff04 	tstne	r1, r4, lsl #30	; <UNPREDICTABLE>
    19bc:	000002d4 	ldrdeq	r0, [r0], -r4
    19c0:	0e242302 	cdpeq	3, 2, cr2, cr4, cr2, {0}
    19c4:	00000568 	andeq	r0, r0, r8, ror #10
    19c8:	11020004 	tstne	r2, r4
    19cc:	000002d9 	ldrdeq	r0, [r0], -r9
    19d0:	0e282302 	cdpeq	3, 2, cr2, cr8, cr2, {0}
    19d4:	000008d4 	ldrdeq	r0, [r0], -r4
    19d8:	11020104 	tstne	r2, r4, lsl #2
    19dc:	000002d4 	ldrdeq	r0, [r0], -r4
    19e0:	0e302302 	cdpeq	3, 3, cr2, cr0, cr2, {0}
    19e4:	000007ee 	andeq	r0, r0, lr, ror #15
    19e8:	11020204 	tstne	r2, r4, lsl #4
    19ec:	000002d4 	ldrdeq	r0, [r0], -r4
    19f0:	0e342302 	cdpeq	3, 3, cr2, cr4, cr2, {0}
    19f4:	000004d6 	ldrdeq	r0, [r0], -r6
    19f8:	11020304 	tstne	r2, r4, lsl #6
    19fc:	000002d4 	ldrdeq	r0, [r0], -r4
    1a00:	0e382302 	cdpeq	3, 3, cr2, cr8, cr2, {0}
    1a04:	00000572 	andeq	r0, r0, r2, ror r5
    1a08:	11020404 	tstne	r2, r4, lsl #8
    1a0c:	000002c8 	andeq	r0, r0, r8, asr #5
    1a10:	0e3c2302 	cdpeq	3, 3, cr2, cr12, cr2, {0}
    1a14:	0000070b 	andeq	r0, r0, fp, lsl #14
    1a18:	11020504 	tstne	r2, r4, lsl #10
    1a1c:	000002d4 	ldrdeq	r0, [r0], -r4
    1a20:	0e402302 	cdpeq	3, 4, cr2, cr0, cr2, {0}
    1a24:	000006c8 	andeq	r0, r0, r8, asr #13
    1a28:	11020604 	tstne	r2, r4, lsl #12
    1a2c:	000002d4 	ldrdeq	r0, [r0], -r4
    1a30:	0e442302 	cdpeq	3, 4, cr2, cr4, cr2, {0}
    1a34:	0000057c 	andeq	r0, r0, ip, ror r5
    1a38:	11020704 	tstne	r2, r4, lsl #14
    1a3c:	000002d9 	ldrdeq	r0, [r0], -r9
    1a40:	0e482302 	cdpeq	3, 4, cr2, cr8, cr2, {0}
    1a44:	0000012b 	andeq	r0, r0, fp, lsr #2
    1a48:	11020804 	tstne	r2, r4, lsl #16
    1a4c:	000002d4 	ldrdeq	r0, [r0], -r4
    1a50:	0e502302 	cdpeq	3, 5, cr2, cr0, cr2, {0}
    1a54:	00000510 	andeq	r0, r0, r0, lsl r5
    1a58:	11020904 	tstne	r2, r4, lsl #18
    1a5c:	000002d4 	ldrdeq	r0, [r0], -r4
    1a60:	0e542302 	cdpeq	3, 5, cr2, cr4, cr2, {0}
    1a64:	00000696 	muleq	r0, r6, r6
    1a68:	11020a04 	tstne	r2, r4, lsl #20
    1a6c:	000002d4 	ldrdeq	r0, [r0], -r4
    1a70:	0e582302 	cdpeq	3, 5, cr2, cr8, cr2, {0}
    1a74:	00000586 	andeq	r0, r0, r6, lsl #11
    1a78:	11020b04 	tstne	r2, r4, lsl #22
    1a7c:	000002c8 	andeq	r0, r0, r8, asr #5
    1a80:	0e5c2302 	cdpeq	3, 5, cr2, cr12, cr2, {0}
    1a84:	0000001b 	andeq	r0, r0, fp, lsl r0
    1a88:	11020c04 	tstne	r2, r4, lsl #24
    1a8c:	000002d4 	ldrdeq	r0, [r0], -r4
    1a90:	0e602302 	cdpeq	3, 6, cr2, cr0, cr2, {0}
    1a94:	000003eb 	andeq	r0, r0, fp, ror #7
    1a98:	11020d04 	tstne	r2, r4, lsl #26
    1a9c:	000002d4 	ldrdeq	r0, [r0], -r4
    1aa0:	0e642302 	cdpeq	3, 6, cr2, cr4, cr2, {0}
    1aa4:	00000590 	muleq	r0, r0, r5
    1aa8:	11020e04 	tstne	r2, r4, lsl #28
    1aac:	000002d9 	ldrdeq	r0, [r0], -r9
    1ab0:	0e682302 	cdpeq	3, 6, cr2, cr8, cr2, {0}
    1ab4:	00000870 	andeq	r0, r0, r0, ror r8
    1ab8:	11020f04 	tstne	r2, r4, lsl #30
    1abc:	000002d4 	ldrdeq	r0, [r0], -r4
    1ac0:	0d702302 	ldcleq	3, cr2, [r0, #-8]!
    1ac4:	00525343 	subseq	r5, r2, r3, asr #6
    1ac8:	11021004 	tstne	r2, r4
    1acc:	000002d4 	ldrdeq	r0, [r0], -r4
    1ad0:	0e742302 	cdpeq	3, 7, cr2, cr4, cr2, {0}
    1ad4:	0000059a 	muleq	r0, sl, r5
    1ad8:	11021104 	tstne	r2, r4, lsl #2
    1adc:	000002d9 	ldrdeq	r0, [r0], -r9
    1ae0:	0e782302 	cdpeq	3, 7, cr2, cr8, cr2, {0}
    1ae4:	0000083f 	andeq	r0, r0, pc, lsr r8
    1ae8:	11021204 	tstne	r2, r4, lsl #4
    1aec:	000002d4 	ldrdeq	r0, [r0], -r4
    1af0:	01802303 	orreq	r2, r0, r3, lsl #6
    1af4:	00037e0e 	andeq	r7, r3, lr, lsl #28
    1af8:	02130400 	andseq	r0, r3, #0, 8
    1afc:	0002d411 	andeq	sp, r2, r1, lsl r4
    1b00:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    1b04:	cd0f0001 	stcgt	0, cr0, [pc, #-4]	; 1b08 <_Min_Heap_Size+0x1308>
    1b08:	04000001 	streq	r0, [r0], #-1
    1b0c:	1d030214 	sfmne	f0, 4, [r3, #-80]	; 0xffffffb0
    1b10:	0c000004 	stceq	0, cr0, [r0], {4}
    1b14:	0295041c 	addseq	r0, r5, #28, 8	; 0x1c000000
    1b18:	00068f09 	andeq	r8, r6, r9, lsl #30
    1b1c:	52530d00 	subspl	r0, r3, #0, 26
    1b20:	02970400 	addseq	r0, r7, #0, 8
    1b24:	0002d411 	andeq	sp, r2, r1, lsl r4
    1b28:	00230200 	eoreq	r0, r3, r0, lsl #4
    1b2c:	0052440d 	subseq	r4, r2, sp, lsl #8
    1b30:	11029804 	tstne	r2, r4, lsl #16
    1b34:	000002d4 	ldrdeq	r0, [r0], -r4
    1b38:	0d042302 	stceq	3, cr2, [r4, #-8]
    1b3c:	00525242 	subseq	r5, r2, r2, asr #4
    1b40:	11029904 	tstne	r2, r4, lsl #18
    1b44:	000002d4 	ldrdeq	r0, [r0], -r4
    1b48:	0d082302 	stceq	3, cr2, [r8, #-8]
    1b4c:	00315243 	eorseq	r5, r1, r3, asr #4
    1b50:	11029a04 	tstne	r2, r4, lsl #20
    1b54:	000002d4 	ldrdeq	r0, [r0], -r4
    1b58:	0d0c2302 	stceq	3, cr2, [ip, #-8]
    1b5c:	00325243 	eorseq	r5, r2, r3, asr #4
    1b60:	11029b04 	tstne	r2, r4, lsl #22
    1b64:	000002d4 	ldrdeq	r0, [r0], -r4
    1b68:	0d102302 	ldceq	3, cr2, [r0, #-8]
    1b6c:	00335243 	eorseq	r5, r3, r3, asr #4
    1b70:	11029c04 	tstne	r2, r4, lsl #24
    1b74:	000002d4 	ldrdeq	r0, [r0], -r4
    1b78:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    1b7c:	00000189 	andeq	r0, r0, r9, lsl #3
    1b80:	11029d04 	tstne	r2, r4, lsl #26
    1b84:	000002d4 	ldrdeq	r0, [r0], -r4
    1b88:	00182302 	andseq	r2, r8, r2, lsl #6
    1b8c:	0003dd0f 	andeq	sp, r3, pc, lsl #26
    1b90:	029e0400 	addseq	r0, lr, #0, 8
    1b94:	00061603 	andeq	r1, r6, r3, lsl #12
    1b98:	04080500 	streq	r0, [r8], #-1280	; 0xfffffb00
    1b9c:	00000726 	andeq	r0, r0, r6, lsr #14
    1ba0:	4f010702 	svcmi	0x00010702
    1ba4:	05000002 	streq	r0, [r0, #-2]
    1ba8:	06ca0127 	strbeq	r0, [sl], r7, lsr #2
    1bac:	5c040000 	stcpl	0, cr0, [r4], {-0}
    1bb0:	00000003 	andeq	r0, r0, r3
    1bb4:	00070104 	andeq	r0, r7, r4, lsl #2
    1bb8:	09040100 	stmdbeq	r4, {r8}
    1bbc:	02000009 	andeq	r0, r0, #9
    1bc0:	00033d04 	andeq	r3, r3, r4, lsl #26
    1bc4:	02000300 	andeq	r0, r0, #0, 6
    1bc8:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    1bcc:	32050000 	andcc	r0, r5, #0
    1bd0:	0006e501 	andeq	lr, r6, r1, lsl #10
    1bd4:	08fc0400 	ldmeq	ip!, {sl}^
    1bd8:	04000000 	streq	r0, [r0], #-0
    1bdc:	000004cb 	andeq	r0, r0, fp, asr #9
    1be0:	bd060001 	stclt	0, cr0, [r6, #-4]
    1be4:	05000001 	streq	r0, [r0, #-1]
    1be8:	06ca0335 			; <UNDEFINED> instruction: 0x06ca0335
    1bec:	14100000 	ldrne	r0, [r0], #-0
    1bf0:	46092e06 	strmi	r2, [r9], -r6, lsl #28
    1bf4:	11000007 	tstne	r0, r7
    1bf8:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1bfc:	c80c3006 	stmdagt	ip, {r1, r2, ip, sp}
    1c00:	02000002 	andeq	r0, r0, #2
    1c04:	f1120023 			; <UNDEFINED> instruction: 0xf1120023
    1c08:	06000006 	streq	r0, [r0], -r6
    1c0c:	02c80c33 	sbceq	r0, r8, #13056	; 0x3300
    1c10:	23020000 	movwcs	r0, #8192	; 0x2000
    1c14:	0d531204 	lfmeq	f1, 2, [r3, #-16]
    1c18:	36060000 	strcc	r0, [r6], -r0
    1c1c:	0002c80c 	andeq	ip, r2, ip, lsl #16
    1c20:	08230200 	stmdaeq	r3!, {r9}
    1c24:	00097d12 	andeq	r7, r9, r2, lsl sp
    1c28:	0c390600 	ldceq	6, cr0, [r9], #-0
    1c2c:	000002c8 	andeq	r0, r0, r8, asr #5
    1c30:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    1c34:	00000ce1 	andeq	r0, r0, r1, ror #25
    1c38:	c80c3c06 	stmdagt	ip, {r1, r2, sl, fp, ip, sp}
    1c3c:	02000002 	andeq	r0, r0, #2
    1c40:	06001023 	streq	r1, [r0], -r3, lsr #32
    1c44:	00000aa1 	andeq	r0, r0, r1, lsr #21
    1c48:	f1023e06 			; <UNDEFINED> instruction: 0xf1023e06
    1c4c:	10000006 	andne	r0, r0, r6
    1c50:	09300730 	ldmdbeq	r0!, {r4, r5, r8, r9, sl}
    1c54:	00000810 	andeq	r0, r0, r0, lsl r8
    1c58:	0005bb12 	andeq	fp, r5, r2, lsl fp
    1c5c:	0c320700 	ldceq	7, cr0, [r2], #-0
    1c60:	000002c8 	andeq	r0, r0, r8, asr #5
    1c64:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    1c68:	000002cd 	andeq	r0, r0, sp, asr #5
    1c6c:	c80c3507 	stmdagt	ip, {r0, r1, r2, r8, sl, ip, sp}
    1c70:	02000002 	andeq	r0, r0, #2
    1c74:	02120423 	andseq	r0, r2, #587202560	; 0x23000000
    1c78:	07000002 	streq	r0, [r0, -r2]
    1c7c:	02c80c39 	sbceq	r0, r8, #14592	; 0x3900
    1c80:	23020000 	movwcs	r0, #8192	; 0x2000
    1c84:	07871208 	streq	r1, [r7, r8, lsl #4]
    1c88:	3c070000 	stccc	0, cr0, [r7], {-0}
    1c8c:	0002c80c 	andeq	ip, r2, ip, lsl #16
    1c90:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1c94:	00081a12 	andeq	r1, r8, r2, lsl sl
    1c98:	0c3f0700 	ldceq	7, cr0, [pc], #-0	; 1ca0 <_Min_Heap_Size+0x14a0>
    1c9c:	000002c8 	andeq	r0, r0, r8, asr #5
    1ca0:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    1ca4:	000003cc 	andeq	r0, r0, ip, asr #7
    1ca8:	c80c4207 	stmdagt	ip, {r0, r1, r2, r9, lr}
    1cac:	02000002 	andeq	r0, r0, #2
    1cb0:	f1121423 			; <UNDEFINED> instruction: 0xf1121423
    1cb4:	07000006 	streq	r0, [r0, -r6]
    1cb8:	02c80c45 	sbceq	r0, r8, #17664	; 0x4500
    1cbc:	23020000 	movwcs	r0, #8192	; 0x2000
    1cc0:	1f9a1218 	svcne	0x009a1218
    1cc4:	4a070000 	bmi	1c1ccc <_Min_Heap_Size+0x1c14cc>
    1cc8:	0002c80c 	andeq	ip, r2, ip, lsl #16
    1ccc:	1c230200 	sfmne	f0, 4, [r3], #-0
    1cd0:	0006ed12 	andeq	lr, r6, r2, lsl sp
    1cd4:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    1cd8:	000002c8 	andeq	r0, r0, r8, asr #5
    1cdc:	12202302 	eorne	r2, r0, #134217728	; 0x8000000
    1ce0:	00000732 	andeq	r0, r0, r2, lsr r7
    1ce4:	c80c5207 	stmdagt	ip, {r0, r1, r2, r9, ip, lr}
    1ce8:	02000002 	andeq	r0, r0, #2
    1cec:	15122423 	ldrne	r2, [r2, #-1059]	; 0xfffffbdd
    1cf0:	07000002 	streq	r0, [r0, -r2]
    1cf4:	02c80c55 	sbceq	r0, r8, #21760	; 0x5500
    1cf8:	23020000 	movwcs	r0, #8192	; 0x2000
    1cfc:	078e1228 	streq	r1, [lr, r8, lsr #4]
    1d00:	5b070000 	blpl	1c1d08 <_Min_Heap_Size+0x1c1508>
    1d04:	0002c80c 	andeq	ip, r2, ip, lsl #16
    1d08:	2c230200 	sfmcs	f0, 4, [r3], #-0
    1d0c:	00470600 	subeq	r0, r7, r0, lsl #12
    1d10:	60070000 	andvs	r0, r7, r0
    1d14:	00075202 	andeq	r5, r7, r2, lsl #4
    1d18:	01070200 	mrseq	r0, (UNDEF: 39)
    1d1c:	0000024f 	andeq	r0, r0, pc, asr #4
    1d20:	4f016707 	svcmi	0x00016707
    1d24:	04000008 	streq	r0, [r0], #-8
    1d28:	00000310 	andeq	r0, r0, r0, lsl r3
    1d2c:	03290400 			; <UNDEFINED> instruction: 0x03290400
    1d30:	04010000 	streq	r0, [r1], #-0
    1d34:	0000046c 	andeq	r0, r0, ip, ror #8
    1d38:	08960402 	ldmeq	r6, {r1, sl}
    1d3c:	04030000 	streq	r0, [r3], #-0
    1d40:	0000022d 	andeq	r0, r0, sp, lsr #4
    1d44:	038e0404 	orreq	r0, lr, #4, 8	; 0x4000000
    1d48:	00050000 	andeq	r0, r5, r0
    1d4c:	00067c06 	andeq	r7, r6, r6, lsl #24
    1d50:	026e0700 	rsbeq	r0, lr, #0, 14
    1d54:	0000081c 	andeq	r0, r0, ip, lsl r8
    1d58:	00084f09 	andeq	r4, r8, r9, lsl #30
    1d5c:	06d91300 	ldrbeq	r1, [r9], r0, lsl #6
    1d60:	07600000 	strbeq	r0, [r0, -r0]!
    1d64:	0940108a 	stmdbeq	r0, {r1, r3, r7, ip}^
    1d68:	de120000 	cdple	0, 1, cr0, cr2, cr0, {0}
    1d6c:	07000004 	streq	r0, [r0, -r4]
    1d70:	09401f8c 	stmdbeq	r0, {r2, r3, r7, r8, r9, sl, fp, ip}^
    1d74:	23020000 	movwcs	r0, #8192	; 0x2000
    1d78:	1a7c1200 	bne	1f06580 <_Min_Heap_Size+0x1f05d80>
    1d7c:	8e070000 	cdphi	0, 0, cr0, cr7, cr0, {0}
    1d80:	0008101e 	andeq	r1, r8, lr, lsl r0
    1d84:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1d88:	0002a812 	andeq	sl, r2, r2, lsl r8
    1d8c:	1e900700 	cdpne	7, 9, cr0, cr0, cr0, {0}
    1d90:	000006e5 	andeq	r0, r0, r5, ror #13
    1d94:	12342302 	eorsne	r2, r4, #134217728	; 0x8000000
    1d98:	0000030a 	andeq	r0, r0, sl, lsl #6
    1d9c:	5b1e9207 	blpl	7a65c0 <_Min_Heap_Size+0x7a5dc0>
    1da0:	02000008 	andeq	r0, r0, #8
    1da4:	a1123523 	tstge	r2, r3, lsr #10
    1da8:	07000002 	streq	r0, [r0, -r2]
    1dac:	09461f94 	stmdbeq	r6, {r2, r4, r7, r8, r9, sl, fp, ip}^
    1db0:	23020000 	movwcs	r0, #8192	; 0x2000
    1db4:	093f1238 	ldmdbeq	pc!, {r3, r4, r5, r9, ip}	; <UNPREDICTABLE>
    1db8:	96070000 	strls	r0, [r7], -r0
    1dbc:	00095a21 	andeq	r5, r9, r1, lsr #20
    1dc0:	3c230200 	sfmcc	f0, 4, [r3], #-0
    1dc4:	0001d912 	andeq	sp, r1, r2, lsl r9
    1dc8:	21980700 	orrscs	r0, r8, r0, lsl #14
    1dcc:	0000095a 	andeq	r0, r0, sl, asr r9
    1dd0:	12402302 	subne	r2, r0, #134217728	; 0x8000000
    1dd4:	00000197 	muleq	r0, r7, r1
    1dd8:	5a219a07 	bpl	8685fc <_Min_Heap_Size+0x867dfc>
    1ddc:	02000009 	andeq	r0, r0, #9
    1de0:	a4124423 	ldrge	r4, [r2], #-1059	; 0xfffffbdd
    1de4:	07000005 	streq	r0, [r0, -r5]
    1de8:	095a219c 	ldmdbeq	sl, {r2, r3, r4, r7, r8, sp}^
    1dec:	23020000 	movwcs	r0, #8192	; 0x2000
    1df0:	04e71248 	strbteq	r1, [r7], #584	; 0x248
    1df4:	9e070000 	cdpls	0, 0, cr0, cr7, cr0, {0}
    1df8:	00095a21 	andeq	r5, r9, r1, lsr #20
    1dfc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    1e00:	00092d12 	andeq	r2, r9, r2, lsl sp
    1e04:	21a00700 	lslcs	r0, r0, #14
    1e08:	0000095a 	andeq	r0, r0, sl, asr r9
    1e0c:	12502302 	subsne	r2, r0, #134217728	; 0x8000000
    1e10:	000003ad 	andeq	r0, r0, sp, lsr #7
    1e14:	d41ea207 	ldrle	sl, [lr], #-519	; 0xfffffdf9
    1e18:	02000002 	andeq	r0, r0, #2
    1e1c:	8a125423 	bhi	496eb0 <_Min_Heap_Size+0x4966b0>
    1e20:	07000002 	streq	r0, [r0, -r2]
    1e24:	02c81ea4 	sbceq	r1, r8, #164, 28	; 0xa40
    1e28:	23020000 	movwcs	r0, #8192	; 0x2000
    1e2c:	03501258 	cmpeq	r0, #88, 4	; 0x80000005
    1e30:	a6070000 	strge	r0, [r7], -r0
    1e34:	0002c81e 	andeq	ip, r2, lr, lsl r8
    1e38:	5c230200 	sfmpl	f0, 4, [r3], #-0
    1e3c:	53041400 	movwpl	r1, #17408	; 0x4400
    1e40:	15000003 	strne	r0, [r0, #-3]
    1e44:	54011604 	strpl	r1, [r1], #-1540	; 0xfffff9fc
    1e48:	17000009 	strne	r0, [r0, -r9]
    1e4c:	00000954 	andeq	r0, r0, r4, asr r9
    1e50:	60041400 	andvs	r1, r4, r0, lsl #8
    1e54:	14000008 	strne	r0, [r0], #-8
    1e58:	00094804 	andeq	r4, r9, r4, lsl #16
    1e5c:	06db0600 	ldrbeq	r0, [fp], r0, lsl #12
    1e60:	a8070000 	stmdage	r7, {}	; <UNPREDICTABLE>
    1e64:	00086002 	andeq	r6, r8, r2
    1e68:	081c1000 	ldmdaeq	ip, {ip}
    1e6c:	09df092e 	ldmibeq	pc, {r1, r2, r3, r5, r8, fp}^	; <UNPREDICTABLE>
    1e70:	8e120000 	cdphi	0, 1, cr0, cr2, cr0, {0}
    1e74:	08000001 	stmdaeq	r0, {r0}
    1e78:	02c80c30 	sbceq	r0, r8, #48, 24	; 0x3000
    1e7c:	23020000 	movwcs	r0, #8192	; 0x2000
    1e80:	06f61200 	ldrbteq	r1, [r6], r0, lsl #4
    1e84:	36080000 	strcc	r0, [r8], -r0
    1e88:	0002c80c 	andeq	ip, r2, ip, lsl #16
    1e8c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1e90:	00027912 	andeq	r7, r2, r2, lsl r9
    1e94:	0c390800 	ldceq	8, cr0, [r9], #-0
    1e98:	000002c8 	andeq	r0, r0, r8, asr #5
    1e9c:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    1ea0:	00000534 	andeq	r0, r0, r4, lsr r5
    1ea4:	c80c3c08 	stmdagt	ip, {r3, sl, fp, ip, sp}
    1ea8:	02000002 	andeq	r0, r0, #2
    1eac:	f1120c23 			; <UNDEFINED> instruction: 0xf1120c23
    1eb0:	08000006 	stmdaeq	r0, {r1, r2}
    1eb4:	02c80c43 	sbceq	r0, r8, #17152	; 0x4300
    1eb8:	23020000 	movwcs	r0, #8192	; 0x2000
    1ebc:	088c1210 	stmeq	ip, {r4, r9, ip}
    1ec0:	46080000 	strmi	r0, [r8], -r0
    1ec4:	0002c80c 	andeq	ip, r2, ip, lsl #16
    1ec8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1ecc:	00013512 	andeq	r3, r1, r2, lsl r5
    1ed0:	0c490800 	mcrreq	8, 0, r0, r9, cr0
    1ed4:	000002c8 	andeq	r0, r0, r8, asr #5
    1ed8:	00182302 	andseq	r2, r8, r2, lsl #6
    1edc:	00082e06 	andeq	r2, r8, r6, lsl #28
    1ee0:	034b0800 	movteq	r0, #47104	; 0xb800
    1ee4:	0000096c 	andeq	r0, r0, ip, ror #18
    1ee8:	4f010702 	svcmi	0x00010702
    1eec:	08000002 	stmdaeq	r0, {r1}
    1ef0:	0a2a0175 	beq	a824cc <_Min_Heap_Size+0xa81ccc>
    1ef4:	c1040000 	mrsgt	r0, (UNDEF: 4)
    1ef8:	00000007 	andeq	r0, r0, r7
    1efc:	0002ad04 	andeq	sl, r2, r4, lsl #26
    1f00:	e8042000 	stmda	r4, {sp}
    1f04:	24000008 	strcs	r0, [r0], #-8
    1f08:	0004f904 	andeq	pc, r4, r4, lsl #18
    1f0c:	67042100 	strvs	r2, [r4, -r0, lsl #2]
    1f10:	22000007 	andcs	r0, r0, #7
    1f14:	00016f04 	andeq	r6, r1, r4, lsl #30
    1f18:	75042300 	strvc	r2, [r4, #-768]	; 0xfffffd00
    1f1c:	a0000008 	andge	r0, r0, r8
    1f20:	0006b304 	andeq	fp, r6, r4, lsl #6
    1f24:	0600e000 	streq	lr, [r0], -r0
    1f28:	00000025 	andeq	r0, r0, r5, lsr #32
    1f2c:	eb038708 	bl	e3b54 <_Min_Heap_Size+0xe3354>
    1f30:	09000009 	stmdbeq	r0, {r0, r3}
    1f34:	00000a2a 	andeq	r0, r0, sl, lsr #20
    1f38:	00084506 	andeq	r4, r8, r6, lsl #10
    1f3c:	12900800 	addsne	r0, r0, #0, 16
    1f40:	000002c8 	andeq	r0, r0, r8, asr #5
    1f44:	000a3b09 	andeq	r3, sl, r9, lsl #22
    1f48:	00ca0600 	sbceq	r0, sl, r0, lsl #12
    1f4c:	9b080000 	blls	201f54 <_Min_Heap_Size+0x201754>
    1f50:	0002c812 	andeq	ip, r2, r2, lsl r8
    1f54:	0a4c0900 	beq	130435c <_Min_Heap_Size+0x1303b5c>
    1f58:	a3130000 	tstge	r3, #0
    1f5c:	48000004 	stmdami	r0, {r2}
    1f60:	5b10a008 	blpl	429f88 <_Min_Heap_Size+0x429788>
    1f64:	1200000b 	andne	r0, r0, #11
    1f68:	000004de 	ldrdeq	r0, [r0], -lr
    1f6c:	5b22a208 	blpl	8aa794 <_Min_Heap_Size+0x8a9f94>
    1f70:	0200000b 	andeq	r0, r0, #11
    1f74:	7c120023 	ldcvc	0, cr0, [r2], {35}	; 0x23
    1f78:	0800001a 	stmdaeq	r0, {r1, r3, r4}
    1f7c:	09df21a4 	ldmibeq	pc, {r2, r5, r7, r8, sp}^	; <UNPREDICTABLE>
    1f80:	23020000 	movwcs	r0, #8192	; 0x2000
    1f84:	01ee1204 	mvneq	r1, r4, lsl #4
    1f88:	a6080000 	strge	r0, [r8], -r0
    1f8c:	000b6122 	andeq	r6, fp, r2, lsr #2
    1f90:	20230200 	eorcs	r0, r3, r0, lsl #4
    1f94:	00037312 	andeq	r7, r3, r2, lsl r3
    1f98:	21a80800 			; <UNDEFINED> instruction: 0x21a80800
    1f9c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    1fa0:	12242302 	eorne	r2, r4, #134217728	; 0x8000000
    1fa4:	00000142 	andeq	r0, r0, r2, asr #2
    1fa8:	c321aa08 			; <UNDEFINED> instruction: 0xc321aa08
    1fac:	02000002 	andeq	r0, r0, #2
    1fb0:	ac122623 	ldcge	6, cr2, [r2], {35}	; 0x23
    1fb4:	08000008 	stmdaeq	r0, {r3}
    1fb8:	0b6722ac 	bleq	19caa70 <_Min_Heap_Size+0x19ca270>
    1fbc:	23020000 	movwcs	r0, #8192	; 0x2000
    1fc0:	03681228 	cmneq	r8, #40, 4	; 0x80000002
    1fc4:	ae080000 	cdpge	0, 0, cr0, cr8, cr0, {0}
    1fc8:	0002b721 	andeq	fp, r2, r1, lsr #14
    1fcc:	2c230200 	sfmcs	f0, 4, [r3], #-0
    1fd0:	0008dc12 	andeq	sp, r8, r2, lsl ip
    1fd4:	21b00800 	lslscs	r0, r0, #16
    1fd8:	000002c3 	andeq	r0, r0, r3, asr #5
    1fdc:	122e2302 	eorne	r2, lr, #134217728	; 0x8000000
    1fe0:	0000091f 	andeq	r0, r0, pc, lsl r9
    1fe4:	471fb208 	ldrmi	fp, [pc, -r8, lsl #4]
    1fe8:	0200000a 	andeq	r0, r0, #10
    1fec:	91123023 	tstls	r2, r3, lsr #32
    1ff0:	08000010 	stmdaeq	r0, {r4}
    1ff4:	0a5824b4 	beq	160b2cc <_Min_Heap_Size+0x160aacc>
    1ff8:	23020000 	movwcs	r0, #8192	; 0x2000
    1ffc:	051a1234 	ldreq	r1, [sl, #-564]	; 0xfffffdcc
    2000:	b6080000 	strlt	r0, [r8], -r0
    2004:	000b6d22 	andeq	r6, fp, r2, lsr #26
    2008:	38230200 	stmdacc	r3!, {r9}
    200c:	0002e012 	andeq	lr, r2, r2, lsl r0
    2010:	22b80800 	adcscs	r0, r8, #0, 16
    2014:	00000b6d 	andeq	r0, r0, sp, ror #22
    2018:	123c2302 	eorsne	r2, ip, #134217728	; 0x8000000
    201c:	000002a8 	andeq	r0, r0, r8, lsr #5
    2020:	e521ba08 	str	fp, [r1, #-2568]!	; 0xfffff5f8
    2024:	02000006 	andeq	r0, r0, #6
    2028:	3b124023 	blcc	4920bc <_Min_Heap_Size+0x4918bc>
    202c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2030:	0a3621bc 	beq	d8a728 <_Min_Heap_Size+0xd89f28>
    2034:	23020000 	movwcs	r0, #8192	; 0x2000
    2038:	09121241 	ldmdbeq	r2, {r0, r6, r9, ip}
    203c:	c0080000 	andgt	r0, r8, r0
    2040:	000a3621 	andeq	r3, sl, r1, lsr #12
    2044:	42230200 	eormi	r0, r3, #0, 4
    2048:	0003ad12 	andeq	sl, r3, r2, lsl sp
    204c:	21c30800 	biccs	r0, r3, r0, lsl #16
    2050:	000002d4 	ldrdeq	r0, [r0], -r4
    2054:	00442302 	subeq	r2, r4, r2, lsl #6
    2058:	068f0414 	pkhbteq	r0, pc, r4, lsl #8	; <UNPREDICTABLE>
    205c:	04140000 	ldreq	r0, [r4], #-0
    2060:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    2064:	02a60414 	adceq	r0, r6, #20, 8	; 0x14000000
    2068:	04140000 	ldreq	r0, [r4], #-0
    206c:	00000960 	andeq	r0, r0, r0, ror #18
    2070:	0004a506 	andeq	sl, r4, r6, lsl #10
    2074:	03d50800 	bicseq	r0, r5, #0, 16
    2078:	00000a5d 	andeq	r0, r0, sp, asr sl
    207c:	00034918 	andeq	r4, r3, r8, lsl r9
    2080:	1b230b00 	blne	8c4c88 <_Min_Heap_Size+0x8c4488>
    2084:	00000b73 	andeq	r0, r0, r3, ror fp
    2088:	7f190101 	svcvc	0x00190101
    208c:	0100000b 	tsteq	r0, fp
    2090:	0305141b 	movweq	r1, #21531	; 0x541b
    2094:	2000008c 	andcs	r0, r0, ip, lsl #1
    2098:	0a4b011a 	beq	12c2508 <_Min_Heap_Size+0x12c1d08>
    209c:	5c010000 	stcpl	0, cr0, [r1], {-0}
    20a0:	00000106 	andeq	r0, r0, r6, lsl #2
    20a4:	00000000 	andeq	r0, r0, r0
    20a8:	02c10000 	sbceq	r0, r1, #0
    20ac:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    20b0:	1b00000b 	blne	20e4 <_Min_Heap_Size+0x18e4>
    20b4:	00000af3 	strdeq	r0, [r0], -r3
    20b8:	f92d5c01 			; <UNDEFINED> instruction: 0xf92d5c01
    20bc:	e900000b 	stmdb	r0, {r0, r1, r3}
    20c0:	e1000002 	tst	r0, r2
    20c4:	1c000002 	stcne	0, cr0, [r0], {2}
    20c8:	00000000 	andeq	r0, r0, r0
    20cc:	00000d01 	andeq	r0, r0, r1, lsl #26
    20d0:	00000be8 	andeq	r0, r0, r8, ror #23
    20d4:	0550011d 	ldrbeq	r0, [r0, #-285]	; 0xfffffee3
    20d8:	0200000c 	andeq	r0, r0, #12
    20dc:	51011d40 	tstpl	r1, r0, asr #26
    20e0:	06000a03 	streq	r0, [r0], -r3, lsl #20
    20e4:	00001e00 	andeq	r1, r0, r0, lsl #28
    20e8:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 20f0 <_Min_Heap_Size+0x18f0>
    20ec:	011d0000 	tsteq	sp, r0
    20f0:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    20f4:	04140000 	ldreq	r0, [r4], #-0
    20f8:	00000b73 	andeq	r0, r0, r3, ror fp
    20fc:	0a1c011a 	beq	70256c <_Min_Heap_Size+0x701d6c>
    2100:	3b010000 	blcc	42108 <_Min_Heap_Size+0x41908>
    2104:	07980106 	ldreq	r0, [r8, r6, lsl #2]
    2108:	08180800 	ldmdaeq	r8, {fp}
    210c:	03230800 			; <UNDEFINED> instruction: 0x03230800
    2110:	c5010000 	strgt	r0, [r1, #-0]
    2114:	1b00000c 	blne	214c <_Min_Heap_Size+0x194c>
    2118:	00000af3 	strdeq	r0, [r0], -r3
    211c:	f92b3b01 			; <UNDEFINED> instruction: 0xf92b3b01
    2120:	6f00000b 	svcvs	0x0000000b
    2124:	67000003 	strvs	r0, [r0, -r3]
    2128:	1f000003 	svcne	0x00000003
    212c:	000009c1 	andeq	r0, r0, r1, asr #19
    2130:	46143e01 	ldrmi	r3, [r4], -r1, lsl #28
    2134:	02000007 	andeq	r0, r0, #7
    2138:	ba206491 	blt	81b384 <_Min_Heap_Size+0x81ab84>
    213c:	d4080007 	strle	r0, [r8], #-7
    2140:	5a080007 	bpl	202164 <_Min_Heap_Size+0x201964>
    2144:	1f00000c 	svcne	0x0000000c
    2148:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    214c:	d4054501 	strle	r4, [r5], #-1281	; 0xfffffaff
    2150:	02000002 	andeq	r0, r0, #2
    2154:	20005c91 	mulcs	r0, r1, ip
    2158:	080007d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl}
    215c:	080007e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl}
    2160:	00000c77 	andeq	r0, r0, r7, ror ip
    2164:	0001b61f 	andeq	fp, r1, pc, lsl r6
    2168:	05470100 	strbeq	r0, [r7, #-256]	; 0xffffff00
    216c:	000002d4 	ldrdeq	r0, [r0], -r4
    2170:	00609102 	rsbeq	r9, r0, r2, lsl #2
    2174:	0008021c 	andeq	r0, r8, ip, lsl r2
    2178:	000d1e08 	andeq	r1, sp, r8, lsl #28
    217c:	000c9400 	andeq	r9, ip, r0, lsl #8
    2180:	50011d00 	andpl	r1, r1, r0, lsl #26
    2184:	00000c05 	andeq	r0, r0, r5, lsl #24
    2188:	011d4002 	tsteq	sp, r2
    218c:	64910251 	ldrvs	r0, [r1], #593	; 0x251
    2190:	080c1c00 	stmdaeq	ip, {sl, fp, ip}
    2194:	0d2c0800 	stceq	8, cr0, [ip, #-0]
    2198:	0cb40000 	ldceq	0, cr0, [r4]
    219c:	011d0000 	tsteq	sp, r0
    21a0:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    21a4:	0251011d 	subseq	r0, r1, #1073741831	; 0x40000007
    21a8:	011d0074 	tsteq	sp, r4, ror r0
    21ac:	00740252 	rsbseq	r0, r4, r2, asr r2
    21b0:	08121e00 	ldmdaeq	r2, {r9, sl, fp, ip}
    21b4:	0d3b0800 	ldceq	8, cr0, [fp, #-0]
    21b8:	011d0000 	tsteq	sp, r0
    21bc:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    21c0:	011a0000 	tsteq	sl, r0
    21c4:	00000007 	andeq	r0, r0, r7
    21c8:	01061f01 	tsteq	r6, r1, lsl #30
    21cc:	08000764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl}
    21d0:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
    21d4:	000003a9 	andeq	r0, r0, r9, lsr #7
    21d8:	000d0101 	andeq	r0, sp, r1, lsl #2
    21dc:	07861c00 	streq	r1, [r6, r0, lsl #24]
    21e0:	0d4a0800 	stcleq	8, cr0, [sl, #-0]
    21e4:	0cf70000 	ldcleq	0, cr0, [r7]
    21e8:	011d0000 	tsteq	sp, r0
    21ec:	8c030550 	cfstr32hi	mvfx0, [r3], {80}	; 0x50
    21f0:	00200000 	eoreq	r0, r0, r0
    21f4:	00078e21 	andeq	r8, r7, r1, lsr #28
    21f8:	000d5908 	andeq	r5, sp, r8, lsl #18
    21fc:	01220000 			; <UNDEFINED> instruction: 0x01220000
    2200:	000ad601 	andeq	sp, sl, r1, lsl #12
    2204:	000ad600 	andeq	sp, sl, r0, lsl #12
    2208:	07e10600 	strbeq	r0, [r1, r0, lsl #12]!
    220c:	5b010123 	blpl	426a0 <_Min_Heap_Size+0x41ea0>
    2210:	5b00000e 	blpl	2250 <_Min_Heap_Size+0x1a50>
    2214:	0900000e 	stmdbeq	r0, {r1, r2, r3}
    2218:	22060107 	andcs	r0, r6, #-1073741823	; 0xc0000001
    221c:	0b260101 	bleq	982628 <_Min_Heap_Size+0x981e28>
    2220:	0b260000 	bleq	982228 <_Min_Heap_Size+0x981a28>
    2224:	e0060000 	and	r0, r6, r0
    2228:	01012307 	tsteq	r1, r7, lsl #6
    222c:	00000dab 	andeq	r0, r0, fp, lsr #27
    2230:	00000dab 	andeq	r0, r0, fp, lsr #27
    2234:	06010509 	streq	r0, [r1], -r9, lsl #10
    2238:	fa010123 	blx	426cc <_Min_Heap_Size+0x41ecc>
    223c:	fa00000d 	blx	2278 <_Min_Heap_Size+0x1a78>
    2240:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    2244:	23060106 	movwcs	r0, #24838	; 0x6106
    2248:	0b580101 	bleq	1602654 <_Min_Heap_Size+0x1601e54>
    224c:	0b580000 	bleq	1602254 <_Min_Heap_Size+0x1601a54>
    2250:	ce080000 	cdpgt	0, 0, cr0, cr8, cr0, {0}
    2254:	01221302 			; <UNDEFINED> instruction: 0x01221302
    2258:	00041201 	andeq	r1, r4, r1, lsl #4
    225c:	00041200 	andeq	r1, r4, r0, lsl #4
    2260:	06350a00 	ldrteq	r0, [r5], -r0, lsl #20
    2264:	0008bd00 	andeq	fp, r8, r0, lsl #26
    2268:	42000200 	andmi	r0, r0, #0, 4
    226c:	04000005 	streq	r0, [r0], #-5
    2270:	0005d701 	andeq	sp, r5, r1, lsl #14
    2274:	10270c00 	eorne	r0, r7, r0, lsl #24
    2278:	04200000 	strteq	r0, [r0], #-0
    227c:	00a00000 	adceq	r0, r0, r0
	...
    2288:	09da0000 	ldmibeq	sl, {}^	; <UNPREDICTABLE>
    228c:	01020000 	mrseq	r0, (UNDEF: 2)
    2290:	0005c506 	andeq	ip, r5, r6, lsl #10
    2294:	00660300 	rsbeq	r0, r6, r0, lsl #6
    2298:	2b020000 	blcs	822a0 <_Min_Heap_Size+0x81aa0>
    229c:	00003c18 	andeq	r3, r0, r8, lsl ip
    22a0:	08010200 	stmdaeq	r1, {r9}
    22a4:	000005c3 	andeq	r0, r0, r3, asr #11
    22a8:	fa050202 	blx	142ab8 <_Min_Heap_Size+0x1422b8>
    22ac:	03000003 	movweq	r0, #3
    22b0:	0000075c 	andeq	r0, r0, ip, asr r7
    22b4:	56193902 	ldrpl	r3, [r9], -r2, lsl #18
    22b8:	02000000 	andeq	r0, r0, #0
    22bc:	07f60702 	ldrbeq	r0, [r6, r2, lsl #14]!
    22c0:	04020000 	streq	r0, [r2], #-0
    22c4:	0002ec05 	andeq	lr, r2, r5, lsl #24
    22c8:	02c20300 	sbceq	r0, r2, #0, 6
    22cc:	4f020000 	svcmi	0x00020000
    22d0:	00007019 	andeq	r7, r0, r9, lsl r0
    22d4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    22d8:	000000b3 	strheq	r0, [r0], -r3
    22dc:	e7050802 	str	r0, [r5, -r2, lsl #16]
    22e0:	02000002 	andeq	r0, r0, #2
    22e4:	00ae0708 	adceq	r0, lr, r8, lsl #14
    22e8:	04040000 	streq	r0, [r4], #-0
    22ec:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    22f0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    22f4:	000000b8 	strheq	r0, [r0], -r8
    22f8:	00006803 	andeq	r6, r0, r3, lsl #16
    22fc:	13180300 	tstne	r8, #0, 6
    2300:	00000030 	andeq	r0, r0, r0, lsr r0
    2304:	00009305 	andeq	r9, r0, r5, lsl #6
    2308:	075e0300 	ldrbeq	r0, [lr, -r0, lsl #6]
    230c:	24030000 	strcs	r0, [r3], #-0
    2310:	00004a14 	andeq	r4, r0, r4, lsl sl
    2314:	00a40600 	adceq	r0, r4, r0, lsl #12
    2318:	c4030000 	strgt	r0, [r3], #-0
    231c:	03000002 	movweq	r0, #2
    2320:	00641430 	rsbeq	r1, r4, r0, lsr r4
    2324:	b5060000 	strlt	r0, [r6, #-0]
    2328:	07000000 	streq	r0, [r0, -r0]
    232c:	01440418 	cmpeq	r4, r8, lsl r4
    2330:	00013009 	andeq	r3, r1, r9
    2334:	52430800 	subpl	r0, r3, #0, 16
    2338:	01460400 	cmpeq	r6, r0, lsl #8
    233c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2340:	00230200 	eoreq	r0, r3, r0, lsl #4
    2344:	0007bc09 	andeq	fp, r7, r9, lsl #24
    2348:	01470400 	cmpeq	r7, r0, lsl #8
    234c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2350:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2354:	52415008 	subpl	r5, r1, #8
    2358:	01480400 	cmpeq	r8, r0, lsl #8
    235c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2360:	08230200 	stmdaeq	r3!, {r9}
    2364:	00004209 	andeq	r4, r0, r9, lsl #4
    2368:	01490400 	cmpeq	r9, r0, lsl #8
    236c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2370:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2374:	00081509 	andeq	r1, r8, r9, lsl #10
    2378:	014a0400 	cmpeq	sl, r0, lsl #8
    237c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2380:	10230200 	eorne	r0, r3, r0, lsl #4
    2384:	52434608 	subpl	r4, r3, #8, 12	; 0x800000
    2388:	014b0400 	cmpeq	fp, r0, lsl #8
    238c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2390:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2394:	07db0a00 	ldrbeq	r0, [fp, r0, lsl #20]
    2398:	4c040000 	stcmi	0, cr0, [r4], {-0}
    239c:	00c60301 	sbceq	r0, r6, r1, lsl #6
    23a0:	1c070000 	stcne	0, cr0, [r7], {-0}
    23a4:	09029504 	stmdbeq	r2, {r2, r8, sl, ip, pc}
    23a8:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    23ac:	00525308 	subseq	r5, r2, r8, lsl #6
    23b0:	11029704 	tstne	r2, r4, lsl #14
    23b4:	000000c1 	andeq	r0, r0, r1, asr #1
    23b8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    23bc:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    23c0:	c1110298 			; <UNDEFINED> instruction: 0xc1110298
    23c4:	02000000 	andeq	r0, r0, #0
    23c8:	42080423 	andmi	r0, r8, #587202560	; 0x23000000
    23cc:	04005252 	streq	r5, [r0], #-594	; 0xfffffdae
    23d0:	c1110299 			; <UNDEFINED> instruction: 0xc1110299
    23d4:	02000000 	andeq	r0, r0, #0
    23d8:	43080823 	movwmi	r0, #34851	; 0x8823
    23dc:	04003152 	streq	r3, [r0], #-338	; 0xfffffeae
    23e0:	c111029a 			; <UNDEFINED> instruction: 0xc111029a
    23e4:	02000000 	andeq	r0, r0, #0
    23e8:	43080c23 	movwmi	r0, #35875	; 0x8c23
    23ec:	04003252 	streq	r3, [r0], #-594	; 0xfffffdae
    23f0:	c111029b 			; <UNDEFINED> instruction: 0xc111029b
    23f4:	02000000 	andeq	r0, r0, #0
    23f8:	43081023 	movwmi	r1, #32803	; 0x8023
    23fc:	04003352 	streq	r3, [r0], #-850	; 0xfffffcae
    2400:	c111029c 			; <UNDEFINED> instruction: 0xc111029c
    2404:	02000000 	andeq	r0, r0, #0
    2408:	89091423 	stmdbhi	r9, {r0, r1, r5, sl, ip}
    240c:	04000001 	streq	r0, [r0], #-1
    2410:	c111029d 			; <UNDEFINED> instruction: 0xc111029d
    2414:	02000000 	andeq	r0, r0, #0
    2418:	0a001823 	beq	84ac <_Min_Heap_Size+0x7cac>
    241c:	000003dd 	ldrdeq	r0, [r0], -sp
    2420:	03029e04 	movweq	r9, #11780	; 0x2e04
    2424:	0000013d 	andeq	r0, r0, sp, lsr r1
    2428:	26040802 	strcs	r0, [r4], -r2, lsl #16
    242c:	0b000007 	bleq	2450 <_Min_Heap_Size+0x1c50>
    2430:	003c0107 	eorseq	r0, ip, r7, lsl #2
    2434:	32050000 	andcc	r0, r5, #0
    2438:	0001e501 	andeq	lr, r1, r1, lsl #10
    243c:	08fc0c00 	ldmeq	ip!, {sl, fp}^
    2440:	0c000000 	stceq	0, cr0, [r0], {-0}
    2444:	000004cb 	andeq	r0, r0, fp, asr #9
    2448:	bd030001 	stclt	0, cr0, [r3, #-4]
    244c:	05000001 	streq	r0, [r0, #-1]
    2450:	01ca0335 	biceq	r0, sl, r5, lsr r3
    2454:	300d0000 	andcc	r0, sp, r0
    2458:	af093006 	svcge	0x00093006
    245c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    2460:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    2464:	b50c3206 	strlt	r3, [ip, #-518]	; 0xfffffdfa
    2468:	02000000 	andeq	r0, r0, #0
    246c:	cd0e0023 	stcgt	0, cr0, [lr, #-140]	; 0xffffff74
    2470:	06000002 	streq	r0, [r0], -r2
    2474:	00b50c35 	adcseq	r0, r5, r5, lsr ip
    2478:	23020000 	movwcs	r0, #8192	; 0x2000
    247c:	02020e04 	andeq	r0, r2, #4, 28	; 0x40
    2480:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
    2484:	0000b50c 	andeq	fp, r0, ip, lsl #10
    2488:	08230200 	stmdaeq	r3!, {r9}
    248c:	0007870e 	andeq	r8, r7, lr, lsl #14
    2490:	0c3c0600 	ldceq	6, cr0, [ip], #-0
    2494:	000000b5 	strheq	r0, [r0], -r5
    2498:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    249c:	0000081a 	andeq	r0, r0, sl, lsl r8
    24a0:	b50c3f06 	strlt	r3, [ip, #-3846]	; 0xfffff0fa
    24a4:	02000000 	andeq	r0, r0, #0
    24a8:	cc0e1023 	stcgt	0, cr1, [lr], {35}	; 0x23
    24ac:	06000003 	streq	r0, [r0], -r3
    24b0:	00b50c42 	adcseq	r0, r5, r2, asr #24
    24b4:	23020000 	movwcs	r0, #8192	; 0x2000
    24b8:	06f10e14 	usateq	r0, #17, r4, lsl #28
    24bc:	45060000 	strmi	r0, [r6, #-0]
    24c0:	0000b50c 	andeq	fp, r0, ip, lsl #10
    24c4:	18230200 	stmdane	r3!, {r9}
    24c8:	001f9a0e 	andseq	r9, pc, lr, lsl #20
    24cc:	0c4a0600 	mcrreq	6, 0, r0, sl, cr0
    24d0:	000000b5 	strheq	r0, [r0], -r5
    24d4:	0e1c2302 	cdpeq	3, 1, cr2, cr12, cr2, {0}
    24d8:	000006ed 	andeq	r0, r0, sp, ror #13
    24dc:	b50c4d06 	strlt	r4, [ip, #-3334]	; 0xfffff2fa
    24e0:	02000000 	andeq	r0, r0, #0
    24e4:	320e2023 	andcc	r2, lr, #35	; 0x23
    24e8:	06000007 	streq	r0, [r0], -r7
    24ec:	00b50c52 	adcseq	r0, r5, r2, asr ip
    24f0:	23020000 	movwcs	r0, #8192	; 0x2000
    24f4:	02150e24 	andseq	r0, r5, #36, 28	; 0x240
    24f8:	55060000 	strpl	r0, [r6, #-0]
    24fc:	0000b50c 	andeq	fp, r0, ip, lsl #10
    2500:	28230200 	stmdacs	r3!, {r9}
    2504:	00078e0e 	andeq	r8, r7, lr, lsl #28
    2508:	0c5b0600 	mrrceq	6, 0, r0, fp, cr0
    250c:	000000b5 	strheq	r0, [r0], -r5
    2510:	002c2302 	eoreq	r2, ip, r2, lsl #6
    2514:	00004703 	andeq	r4, r0, r3, lsl #14
    2518:	02600600 	rsbeq	r0, r0, #0, 12
    251c:	000001f1 	strdeq	r0, [r0], -r1
    2520:	3c01070b 	stccc	7, cr0, [r1], {11}
    2524:	06000000 	streq	r0, [r0], -r0
    2528:	02ee0167 	rsceq	r0, lr, #-1073741799	; 0xc0000019
    252c:	100c0000 	andne	r0, ip, r0
    2530:	00000003 	andeq	r0, r0, r3
    2534:	0003290c 	andeq	r2, r3, ip, lsl #18
    2538:	6c0c0100 	stfvss	f0, [ip], {-0}
    253c:	02000004 	andeq	r0, r0, #4
    2540:	0008960c 	andeq	r9, r8, ip, lsl #12
    2544:	2d0c0300 	stccs	3, cr0, [ip, #-0]
    2548:	04000002 	streq	r0, [r0], #-2
    254c:	00038e0c 	andeq	r8, r3, ip, lsl #28
    2550:	03000500 	movweq	r0, #1280	; 0x500
    2554:	0000067c 	andeq	r0, r0, ip, ror r6
    2558:	bb026e06 	bllt	9dd78 <_Min_Heap_Size+0x9d578>
    255c:	06000002 	streq	r0, [r0], -r2
    2560:	000002ee 	andeq	r0, r0, lr, ror #5
    2564:	0006d90f 	andeq	sp, r6, pc, lsl #18
    2568:	8a066000 	bhi	19a570 <_Min_Heap_Size+0x199d70>
    256c:	0003df10 	andeq	sp, r3, r0, lsl pc
    2570:	04de0e00 	ldrbeq	r0, [lr], #3584	; 0xe00
    2574:	8c060000 	stchi	0, cr0, [r6], {-0}
    2578:	0003df1f 	andeq	sp, r3, pc, lsl pc
    257c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2580:	001a7c0e 	andseq	r7, sl, lr, lsl #24
    2584:	1e8e0600 	cdpne	6, 8, cr0, cr14, cr0, {0}
    2588:	000002af 	andeq	r0, r0, pc, lsr #5
    258c:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    2590:	000002a8 	andeq	r0, r0, r8, lsr #5
    2594:	e51e9006 	ldr	r9, [lr, #-6]
    2598:	02000001 	andeq	r0, r0, #1
    259c:	0a0e3423 	beq	38f630 <_Min_Heap_Size+0x38ee30>
    25a0:	06000003 	streq	r0, [r0], -r3
    25a4:	02fa1e92 	rscseq	r1, sl, #2336	; 0x920
    25a8:	23020000 	movwcs	r0, #8192	; 0x2000
    25ac:	02a10e35 	adceq	r0, r1, #848	; 0x350
    25b0:	94060000 	strls	r0, [r6], #-0
    25b4:	0003e51f 	andeq	lr, r3, pc, lsl r5
    25b8:	38230200 	stmdacc	r3!, {r9}
    25bc:	00093f0e 	andeq	r3, r9, lr, lsl #30
    25c0:	21960600 	orrscs	r0, r6, r0, lsl #12
    25c4:	000003f9 	strdeq	r0, [r0], -r9
    25c8:	0e3c2302 	cdpeq	3, 3, cr2, cr12, cr2, {0}
    25cc:	000001d9 	ldrdeq	r0, [r0], -r9
    25d0:	f9219806 			; <UNDEFINED> instruction: 0xf9219806
    25d4:	02000003 	andeq	r0, r0, #3
    25d8:	970e4023 	strls	r4, [lr, -r3, lsr #32]
    25dc:	06000001 	streq	r0, [r0], -r1
    25e0:	03f9219a 	mvnseq	r2, #-2147483610	; 0x80000026
    25e4:	23020000 	movwcs	r0, #8192	; 0x2000
    25e8:	05a40e44 	streq	r0, [r4, #3652]!	; 0xe44
    25ec:	9c060000 	stcls	0, cr0, [r6], {-0}
    25f0:	0003f921 	andeq	pc, r3, r1, lsr #18
    25f4:	48230200 	stmdami	r3!, {r9}
    25f8:	0004e70e 	andeq	lr, r4, lr, lsl #14
    25fc:	219e0600 	orrscs	r0, lr, r0, lsl #12
    2600:	000003f9 	strdeq	r0, [r0], -r9
    2604:	0e4c2302 	cdpeq	3, 4, cr2, cr12, cr2, {0}
    2608:	0000092d 	andeq	r0, r0, sp, lsr #18
    260c:	f921a006 			; <UNDEFINED> instruction: 0xf921a006
    2610:	02000003 	andeq	r0, r0, #3
    2614:	ad0e5023 	stcge	0, cr5, [lr, #-140]	; 0xffffff74
    2618:	06000003 	streq	r0, [r0], -r3
    261c:	00c11ea2 	sbceq	r1, r1, r2, lsr #29
    2620:	23020000 	movwcs	r0, #8192	; 0x2000
    2624:	028a0e54 	addeq	r0, sl, #84, 28	; 0x540
    2628:	a4060000 	strge	r0, [r6], #-0
    262c:	0000b51e 	andeq	fp, r0, lr, lsl r5
    2630:	58230200 	stmdapl	r3!, {r9}
    2634:	0003500e 	andeq	r5, r3, lr
    2638:	1ea60600 	cdpne	6, 10, cr0, cr6, cr0, {0}
    263c:	000000b5 	strheq	r0, [r0], -r5
    2640:	005c2302 	subseq	r2, ip, r2, lsl #6
    2644:	01300410 	teqeq	r0, r0, lsl r4
    2648:	04110000 	ldreq	r0, [r1], #-0
    264c:	03f30112 	mvnseq	r0, #-2147483644	; 0x80000004
    2650:	f3130000 	vhadd.u16	d0, d3, d0
    2654:	00000003 	andeq	r0, r0, r3
    2658:	02ff0410 	rscseq	r0, pc, #16, 8	; 0x10000000
    265c:	04100000 	ldreq	r0, [r0], #-0
    2660:	000003e7 	andeq	r0, r0, r7, ror #7
    2664:	0006db03 	andeq	sp, r6, r3, lsl #22
    2668:	02a80600 	adceq	r0, r8, #0, 12
    266c:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2670:	2e071c0d 	cdpcs	12, 0, cr1, cr7, cr13, {0}
    2674:	00047e09 	andeq	r7, r4, r9, lsl #28
    2678:	018e0e00 	orreq	r0, lr, r0, lsl #28
    267c:	30070000 	andcc	r0, r7, r0
    2680:	0000b50c 	andeq	fp, r0, ip, lsl #10
    2684:	00230200 	eoreq	r0, r3, r0, lsl #4
    2688:	0006f60e 	andeq	pc, r6, lr, lsl #12
    268c:	0c360700 	ldceq	7, cr0, [r6], #-0
    2690:	000000b5 	strheq	r0, [r0], -r5
    2694:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    2698:	00000279 	andeq	r0, r0, r9, ror r2
    269c:	b50c3907 	strlt	r3, [ip, #-2311]	; 0xfffff6f9
    26a0:	02000000 	andeq	r0, r0, #0
    26a4:	340e0823 	strcc	r0, [lr], #-2083	; 0xfffff7dd
    26a8:	07000005 	streq	r0, [r0, -r5]
    26ac:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
    26b0:	23020000 	movwcs	r0, #8192	; 0x2000
    26b4:	06f10e0c 	ldrbteq	r0, [r1], ip, lsl #28
    26b8:	43070000 	movwmi	r0, #28672	; 0x7000
    26bc:	0000b50c 	andeq	fp, r0, ip, lsl #10
    26c0:	10230200 	eorne	r0, r3, r0, lsl #4
    26c4:	00088c0e 	andeq	r8, r8, lr, lsl #24
    26c8:	0c460700 	mcrreq	7, 0, r0, r6, cr0
    26cc:	000000b5 	strheq	r0, [r0], -r5
    26d0:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    26d4:	00000135 	andeq	r0, r0, r5, lsr r1
    26d8:	b50c4907 	strlt	r4, [ip, #-2311]	; 0xfffff6f9
    26dc:	02000000 	andeq	r0, r0, #0
    26e0:	03001823 	movweq	r1, #2083	; 0x823
    26e4:	0000082e 	andeq	r0, r0, lr, lsr #16
    26e8:	0b034b07 	bleq	d530c <_Min_Heap_Size+0xd4b0c>
    26ec:	0b000004 	bleq	2704 <_Min_Heap_Size+0x1f04>
    26f0:	003c0107 	eorseq	r0, ip, r7, lsl #2
    26f4:	75070000 	strvc	r0, [r7, #-0]
    26f8:	0004c901 	andeq	ip, r4, r1, lsl #18
    26fc:	07c10c00 	strbeq	r0, [r1, r0, lsl #24]
    2700:	0c000000 	stceq	0, cr0, [r0], {-0}
    2704:	000002ad 	andeq	r0, r0, sp, lsr #5
    2708:	08e80c20 	stmiaeq	r8!, {r5, sl, fp}^
    270c:	0c240000 	stceq	0, cr0, [r4], #-0
    2710:	000004f9 	strdeq	r0, [r0], -r9
    2714:	07670c21 	strbeq	r0, [r7, -r1, lsr #24]!
    2718:	0c220000 	stceq	0, cr0, [r2], #-0
    271c:	0000016f 	andeq	r0, r0, pc, ror #2
    2720:	08750c23 	ldmdaeq	r5!, {r0, r1, r5, sl, fp}^
    2724:	0ca00000 	stceq	0, cr0, [r0]
    2728:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    272c:	250300e0 	strcs	r0, [r3, #-224]	; 0xffffff20
    2730:	07000000 	streq	r0, [r0, -r0]
    2734:	048a0387 	streq	r0, [sl], #903	; 0x387
    2738:	c9060000 	stmdbgt	r6, {}	; <UNPREDICTABLE>
    273c:	03000004 	movweq	r0, #4
    2740:	00000845 	andeq	r0, r0, r5, asr #16
    2744:	b5129007 	ldrlt	r9, [r2, #-7]
    2748:	06000000 	streq	r0, [r0], -r0
    274c:	000004da 	ldrdeq	r0, [r0], -sl
    2750:	0000ca03 	andeq	ip, r0, r3, lsl #20
    2754:	129b0700 	addsne	r0, fp, #0, 14
    2758:	000000b5 	strheq	r0, [r0], -r5
    275c:	0004eb06 	andeq	lr, r4, r6, lsl #22
    2760:	04a30f00 	strteq	r0, [r3], #3840	; 0xf00
    2764:	07480000 	strbeq	r0, [r8, -r0]
    2768:	05fa10a0 	ldrbeq	r1, [sl, #160]!	; 0xa0
    276c:	de0e0000 	cdple	0, 0, cr0, cr14, cr0, {0}
    2770:	07000004 	streq	r0, [r0, -r4]
    2774:	05fa22a2 	ldrbeq	r2, [sl, #674]!	; 0x2a2
    2778:	23020000 	movwcs	r0, #8192	; 0x2000
    277c:	1a7c0e00 	bne	1f05f84 <_Min_Heap_Size+0x1f05784>
    2780:	a4070000 	strge	r0, [r7], #-0
    2784:	00047e21 	andeq	r7, r4, r1, lsr #28
    2788:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    278c:	0001ee0e 	andeq	lr, r1, lr, lsl #28
    2790:	22a60700 	adccs	r0, r6, #0, 14
    2794:	00000600 	andeq	r0, r0, r0, lsl #12
    2798:	0e202302 	cdpeq	3, 2, cr2, cr0, cr2, {0}
    279c:	00000373 	andeq	r0, r0, r3, ror r3
    27a0:	a421a807 	strtge	sl, [r1], #-2055	; 0xfffff7f9
    27a4:	02000000 	andeq	r0, r0, #0
    27a8:	420e2423 	andmi	r2, lr, #587202560	; 0x23000000
    27ac:	07000001 	streq	r0, [r0, -r1]
    27b0:	00b021aa 	adcseq	r2, r0, sl, lsr #3
    27b4:	23020000 	movwcs	r0, #8192	; 0x2000
    27b8:	08ac0e26 	stmiaeq	ip!, {r1, r2, r5, r9, sl, fp}
    27bc:	ac070000 	stcge	0, cr0, [r7], {-0}
    27c0:	00060622 	andeq	r0, r6, r2, lsr #12
    27c4:	28230200 	stmdacs	r3!, {r9}
    27c8:	0003680e 	andeq	r6, r3, lr, lsl #16
    27cc:	21ae0700 			; <UNDEFINED> instruction: 0x21ae0700
    27d0:	000000a4 	andeq	r0, r0, r4, lsr #1
    27d4:	0e2c2302 	cdpeq	3, 2, cr2, cr12, cr2, {0}
    27d8:	000008dc 	ldrdeq	r0, [r0], -ip
    27dc:	b021b007 	eorlt	fp, r1, r7
    27e0:	02000000 	andeq	r0, r0, #0
    27e4:	1f0e2e23 	svcne	0x000e2e23
    27e8:	07000009 	streq	r0, [r0, -r9]
    27ec:	04e61fb2 	strbteq	r1, [r6], #4018	; 0xfb2
    27f0:	23020000 	movwcs	r0, #8192	; 0x2000
    27f4:	10910e30 	addsne	r0, r1, r0, lsr lr
    27f8:	b4070000 	strlt	r0, [r7], #-0
    27fc:	0004f724 	andeq	pc, r4, r4, lsr #14
    2800:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    2804:	00051a0e 	andeq	r1, r5, lr, lsl #20
    2808:	22b60700 	adcscs	r0, r6, #0, 14
    280c:	0000060c 	andeq	r0, r0, ip, lsl #12
    2810:	0e382302 	cdpeq	3, 3, cr2, cr8, cr2, {0}
    2814:	000002e0 	andeq	r0, r0, r0, ror #5
    2818:	0c22b807 	stceq	8, cr11, [r2], #-28	; 0xffffffe4
    281c:	02000006 	andeq	r0, r0, #6
    2820:	a80e3c23 	stmdage	lr, {r0, r1, r5, sl, fp, ip, sp}
    2824:	07000002 	streq	r0, [r0, -r2]
    2828:	01e521ba 	strheq	r2, [r5, #26]!
    282c:	23020000 	movwcs	r0, #8192	; 0x2000
    2830:	003b0e40 	eorseq	r0, fp, r0, asr #28
    2834:	bc070000 	stclt	0, cr0, [r7], {-0}
    2838:	0004d521 	andeq	sp, r4, r1, lsr #10
    283c:	41230200 			; <UNDEFINED> instruction: 0x41230200
    2840:	0009120e 	andeq	r1, r9, lr, lsl #4
    2844:	21c00700 	biccs	r0, r0, r0, lsl #14
    2848:	000004d5 	ldrdeq	r0, [r0], -r5
    284c:	0e422302 	cdpeq	3, 4, cr2, cr2, cr2, {0}
    2850:	000003ad 	andeq	r0, r0, sp, lsr #7
    2854:	c121c307 			; <UNDEFINED> instruction: 0xc121c307
    2858:	02000000 	andeq	r0, r0, #0
    285c:	10004423 	andne	r4, r0, r3, lsr #8
    2860:	0001b604 	andeq	fp, r1, r4, lsl #12
    2864:	9f041000 	svcls	0x00041000
    2868:	10000000 	andne	r0, r0, r0
    286c:	00009304 	andeq	r9, r0, r4, lsl #6
    2870:	ff041000 			; <UNDEFINED> instruction: 0xff041000
    2874:	03000003 	movweq	r0, #3
    2878:	000004a5 	andeq	r0, r0, r5, lsr #9
    287c:	fc03d507 	stc2	5, cr13, [r3], {7}
    2880:	02000004 	andeq	r0, r0, #4
    2884:	05cc0801 	strbeq	r0, [ip, #2049]	; 0x801
    2888:	1e050000 	cdpne	0, 0, cr0, cr5, cr0, {0}
    288c:	14000006 	strne	r0, [r0], #-6
    2890:	00000349 	andeq	r0, r0, r9, asr #6
    2894:	121b3b01 	andsne	r3, fp, #1024	; 0x400
    2898:	01000006 	tsteq	r0, r6
    289c:	90011501 	andls	r1, r1, r1, lsl #10
    28a0:	0100000f 	tsteq	r0, pc
    28a4:	780106cd 	stmdavc	r1, {r0, r2, r3, r6, r7, r9, sl}
    28a8:	88080008 	stmdahi	r8, {r3}
    28ac:	c9080008 	stmdbgt	r8, {r3}
    28b0:	01000003 	tsteq	r0, r3
    28b4:	0000065d 	andeq	r0, r0, sp, asr r6
    28b8:	00088016 	andeq	r8, r8, r6, lsl r0
    28bc:	00089508 	andeq	r9, r8, r8, lsl #10
    28c0:	01150000 	tsteq	r5, r0
    28c4:	00000fe5 	andeq	r0, r0, r5, ror #31
    28c8:	0106b801 	tsteq	r6, r1, lsl #16
    28cc:	0800086e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp}
    28d0:	08000876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp}
    28d4:	000003e9 	andeq	r0, r0, r9, ror #7
    28d8:	00068201 	andeq	r8, r6, r1, lsl #4
    28dc:	08741600 	ldmdaeq	r4!, {r9, sl, ip}^
    28e0:	08a40800 	stmiaeq	r4!, {fp}
    28e4:	17000000 	strne	r0, [r0, -r0]
    28e8:	00100601 	andseq	r0, r0, r1, lsl #12
    28ec:	06ab0100 	strteq	r0, [fp], r0, lsl #2
    28f0:	00086c01 	andeq	r6, r8, r1, lsl #24
    28f4:	00086e08 	andeq	r6, r8, r8, lsl #28
    28f8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    28fc:	c8011701 	stmdagt	r1, {r0, r8, r9, sl, ip}
    2900:	0100000f 	tsteq	r0, pc
    2904:	6a01069e 	bvs	44384 <_Min_Heap_Size+0x43b84>
    2908:	6c080008 	stcvs	0, cr0, [r8], {8}
    290c:	02080008 	andeq	r0, r8, #8
    2910:	1701007d 	smlsdxne	r1, sp, r0, r0
    2914:	000fd901 	andeq	sp, pc, r1, lsl #18
    2918:	06910100 	ldreq	r0, [r1], r0, lsl #2
    291c:	00086801 	andeq	r6, r8, r1, lsl #16
    2920:	00086a08 	andeq	r6, r8, r8, lsl #20
    2924:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    2928:	5d011501 	cfstr32pl	mvfx1, [r1, #-4]
    292c:	0100000f 	tsteq	r0, pc
    2930:	54010682 	strpl	r0, [r1], #-1666	; 0xfffff97e
    2934:	68080008 	stmdavs	r8, {r3}
    2938:	09080008 	stmdbeq	r8, {r3}
    293c:	01000004 	tsteq	r0, r4
    2940:	0000070c 	andeq	r0, r0, ip, lsl #14
    2944:	0006aa18 	andeq	sl, r6, r8, lsl sl
    2948:	00071c00 	andeq	r1, r7, r0, lsl #24
    294c:	03050100 	movweq	r0, #20736	; 0x5100
    2950:	08002bc0 	stmdaeq	r0, {r6, r7, r8, r9, fp, sp}
    2954:	00085e19 	andeq	r5, r8, r9, lsl lr
    2958:	0008b208 	andeq	fp, r8, r8, lsl #4
    295c:	50011a00 	andpl	r1, r1, r0, lsl #20
    2960:	2b500305 	blcs	140357c <_Min_Heap_Size+0x1402d7c>
    2964:	011a0800 	tsteq	sl, r0, lsl #16
    2968:	c0030551 	andgt	r0, r3, r1, asr r5
    296c:	0008002b 	andeq	r0, r8, fp, lsr #32
    2970:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    2974:	071c0000 	ldreq	r0, [ip, -r0]
    2978:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    297c:	12000000 	andne	r0, r0, #0
    2980:	070c0500 	streq	r0, [ip, -r0, lsl #10]
    2984:	01150000 	tsteq	r5, r0
    2988:	00000ff5 	strdeq	r0, [r0], -r5
    298c:	01067301 	tsteq	r6, r1, lsl #6
    2990:	08000840 	stmdaeq	r0, {r6, fp}
    2994:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
    2998:	00000429 	andeq	r0, r0, r9, lsr #8
    299c:	00076901 	andeq	r6, r7, r1, lsl #18
    29a0:	06aa1800 	strteq	r1, [sl], r0, lsl #16
    29a4:	07790000 	ldrbeq	r0, [r9, -r0]!
    29a8:	05010000 	streq	r0, [r1, #-0]
    29ac:	002bd403 	eoreq	sp, fp, r3, lsl #8
    29b0:	084a1908 	stmdaeq	sl, {r3, r8, fp, ip}^
    29b4:	08b20800 	ldmeq	r2!, {fp}
    29b8:	011a0000 	tsteq	sl, r0
    29bc:	50030550 	andpl	r0, r3, r0, asr r5
    29c0:	1a08002b 	bne	202a74 <_Min_Heap_Size+0x202274>
    29c4:	03055101 	movweq	r5, #20737	; 0x5101
    29c8:	08002bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, sp}
    29cc:	251b0000 	ldrcs	r0, [fp, #-0]
    29d0:	79000006 	stmdbvc	r0, {r1, r2}
    29d4:	1c000007 	stcne	0, cr0, [r0], {7}
    29d8:	0000008c 	andeq	r0, r0, ip, lsl #1
    29dc:	69050010 	stmdbvs	r5, {r4}
    29e0:	15000007 	strne	r0, [r0, #-7]
    29e4:	00101501 	andseq	r1, r0, r1, lsl #10
    29e8:	06640100 	strbteq	r0, [r4], -r0, lsl #2
    29ec:	00082c01 	andeq	r2, r8, r1, lsl #24
    29f0:	00084008 	andeq	r4, r8, r8
    29f4:	00044908 	andeq	r4, r4, r8, lsl #18
    29f8:	07c60100 	strbeq	r0, [r6, r0, lsl #2]
    29fc:	aa180000 	bge	602a04 <_Min_Heap_Size+0x602204>
    2a00:	d6000006 	strle	r0, [r0], -r6
    2a04:	01000007 	tsteq	r0, r7
    2a08:	2be80305 	blcs	ffa03624 <_estack+0xdfa023ec>
    2a0c:	36190800 	ldrcc	r0, [r9], -r0, lsl #16
    2a10:	b2080008 	andlt	r0, r8, #8
    2a14:	1a000008 	bne	2a3c <_Min_Heap_Size+0x223c>
    2a18:	03055001 	movweq	r5, #20481	; 0x5001
    2a1c:	08002b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, sp}
    2a20:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    2a24:	002be803 	eoreq	lr, fp, r3, lsl #16
    2a28:	1b000008 	blne	2a50 <_Min_Heap_Size+0x2250>
    2a2c:	00000625 	andeq	r0, r0, r5, lsr #12
    2a30:	000007d6 	ldrdeq	r0, [r0], -r6
    2a34:	00008c1c 	andeq	r8, r0, ip, lsl ip
    2a38:	05001100 	streq	r1, [r0, #-256]	; 0xffffff00
    2a3c:	000007c6 	andeq	r0, r0, r6, asr #15
    2a40:	0fae0115 	svceq	0x00ae0115
    2a44:	55010000 	strpl	r0, [r1, #-0]
    2a48:	00000106 	andeq	r0, r0, r6, lsl #2
    2a4c:	00000000 	andeq	r0, r0, r0
    2a50:	04690000 	strbteq	r0, [r9], #-0
    2a54:	23010000 	movwcs	r0, #4096	; 0x1000
    2a58:	18000008 	stmdane	r0, {r3}
    2a5c:	000006aa 	andeq	r0, r0, sl, lsr #13
    2a60:	00000833 	andeq	r0, r0, r3, lsr r8
    2a64:	00030501 	andeq	r0, r3, r1, lsl #10
    2a68:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    2a6c:	00000000 	andeq	r0, r0, r0
    2a70:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    2a74:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2a78:	002b5003 	eoreq	r5, fp, r3
    2a7c:	51011a08 	tstpl	r1, r8, lsl #20
    2a80:	00000305 	andeq	r0, r0, r5, lsl #6
    2a84:	00000000 	andeq	r0, r0, r0
    2a88:	0006251b 	andeq	r2, r6, fp, lsl r5
    2a8c:	00083300 	andeq	r3, r8, r0, lsl #6
    2a90:	008c1c00 	addeq	r1, ip, r0, lsl #24
    2a94:	00190000 	andseq	r0, r9, r0
    2a98:	00082305 	andeq	r2, r8, r5, lsl #6
    2a9c:	84011500 	strhi	r1, [r1], #-1280	; 0xfffffb00
    2aa0:	0100000f 	tsteq	r0, pc
    2aa4:	18010646 	stmdane	r1, {r1, r2, r6, r9, sl}
    2aa8:	2c080008 	stccs	0, cr0, [r8], {8}
    2aac:	89080008 	stmdbhi	r8, {r3}
    2ab0:	01000004 	tsteq	r0, r4
    2ab4:	00000880 	andeq	r0, r0, r0, lsl #17
    2ab8:	0006aa18 	andeq	sl, r6, r8, lsl sl
    2abc:	00089000 	andeq	r9, r8, r0
    2ac0:	03050100 	movweq	r0, #20736	; 0x5100
    2ac4:	08002bfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, fp, sp}
    2ac8:	00082219 	andeq	r2, r8, r9, lsl r2
    2acc:	0008b208 	andeq	fp, r8, r8, lsl #4
    2ad0:	50011a00 	andpl	r1, r1, r0, lsl #20
    2ad4:	2b500305 	blcs	14036f0 <_Min_Heap_Size+0x1402ef0>
    2ad8:	011a0800 	tsteq	sl, r0, lsl #16
    2adc:	fc030551 	stc2	5, cr0, [r3], {81}	; 0x51
    2ae0:	0008002b 	andeq	r0, r8, fp, lsr #32
    2ae4:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    2ae8:	08900000 	ldmeq	r0, {}	; <UNPREDICTABLE>
    2aec:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    2af0:	0b000000 	bleq	2af8 <_Min_Heap_Size+0x22f8>
    2af4:	08800500 	stmeq	r0, {r8, sl}
    2af8:	011d0000 	tsteq	sp, r0
    2afc:	000f7001 	andeq	r7, pc, r1
    2b00:	000f7000 	andeq	r7, pc, r0
    2b04:	03020700 	movweq	r0, #9984	; 0x2700
    2b08:	01011e06 	tsteq	r1, r6, lsl #28
    2b0c:	00000fa2 	andeq	r0, r0, r2, lsr #31
    2b10:	00000fa2 	andeq	r0, r0, r2, lsr #31
    2b14:	1e06e808 	cdpne	8, 0, cr14, cr6, cr8, {0}
    2b18:	00000101 	andeq	r0, r0, r1, lsl #2
    2b1c:	00000000 	andeq	r0, r0, r0
    2b20:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
    2b24:	02e70005 	rsceq	r0, r7, #5
    2b28:	00020000 	andeq	r0, r2, r0
    2b2c:	000006ea 	andeq	r0, r0, sl, ror #13
    2b30:	05d70104 	ldrbeq	r0, [r7, #260]	; 0x104
    2b34:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
    2b38:	20000010 	andcs	r0, r0, r0, lsl r0
    2b3c:	f8000004 			; <UNDEFINED> instruction: 0xf8000004
	...
    2b48:	2d000000 	stccs	0, cr0, [r0, #-0]
    2b4c:	0200000d 	andeq	r0, r0, #13
    2b50:	05c50601 	strbeq	r0, [r5, #1537]	; 0x601
    2b54:	01020000 	mrseq	r0, (UNDEF: 2)
    2b58:	0005c308 	andeq	ip, r5, r8, lsl #6
    2b5c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2b60:	000003fa 	strdeq	r0, [r0], -sl
    2b64:	f6070202 			; <UNDEFINED> instruction: 0xf6070202
    2b68:	02000007 	andeq	r0, r0, #7
    2b6c:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    2b70:	c2030000 	andgt	r0, r3, #0
    2b74:	02000002 	andeq	r0, r0, #2
    2b78:	0058194f 	subseq	r1, r8, pc, asr #18
    2b7c:	04020000 	streq	r0, [r2], #-0
    2b80:	0000b307 	andeq	fp, r0, r7, lsl #6
    2b84:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2b88:	000002e7 	andeq	r0, r0, r7, ror #5
    2b8c:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    2b90:	04000000 	streq	r0, [r0], #-0
    2b94:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2b98:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2b9c:	0000b807 	andeq	fp, r0, r7, lsl #16
    2ba0:	02c40300 	sbceq	r0, r4, #0, 6
    2ba4:	30030000 	andcc	r0, r3, r0
    2ba8:	00004c14 	andeq	r4, r0, r4, lsl ip
    2bac:	007b0500 	rsbseq	r0, fp, r0, lsl #10
    2bb0:	7b060000 	blvc	182bb8 <_Min_Heap_Size+0x1823b8>
    2bb4:	9c000000 	stcls	0, cr0, [r0], {-0}
    2bb8:	07000000 	streq	r0, [r0, -r0]
    2bbc:	00000074 	andeq	r0, r0, r4, ror r0
    2bc0:	88080001 	stmdahi	r8, {r0}
    2bc4:	0901f404 	stmdbeq	r1, {r2, sl, ip, sp, lr, pc}
    2bc8:	00000288 	andeq	r0, r0, r8, lsl #5
    2bcc:	00524309 	subseq	r4, r2, r9, lsl #6
    2bd0:	1101f604 	tstne	r1, r4, lsl #12	; <UNPREDICTABLE>
    2bd4:	00000087 	andeq	r0, r0, r7, lsl #1
    2bd8:	0a002302 	beq	b7e8 <_Min_Heap_Size+0xafe8>
    2bdc:	00000282 	andeq	r0, r0, r2, lsl #5
    2be0:	1101f704 	tstne	r1, r4, lsl #14	; <UNPREDICTABLE>
    2be4:	00000087 	andeq	r0, r0, r7, lsl #1
    2be8:	0a042302 	beq	10b7f8 <_Min_Heap_Size+0x10aff8>
    2bec:	00000285 	andeq	r0, r0, r5, lsl #5
    2bf0:	1101f804 	tstne	r1, r4, lsl #16	; <UNPREDICTABLE>
    2bf4:	00000087 	andeq	r0, r0, r7, lsl #1
    2bf8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    2bfc:	00524943 	subseq	r4, r2, r3, asr #18
    2c00:	1101f904 	tstne	r1, r4, lsl #18	; <UNPREDICTABLE>
    2c04:	00000087 	andeq	r0, r0, r7, lsl #1
    2c08:	0a0c2302 	beq	30b818 <_Min_Heap_Size+0x30b018>
    2c0c:	00000166 	andeq	r0, r0, r6, ror #2
    2c10:	1101fa04 	tstne	r1, r4, lsl #20	; <UNPREDICTABLE>
    2c14:	00000087 	andeq	r0, r0, r7, lsl #1
    2c18:	0a102302 	beq	40b828 <_Min_Heap_Size+0x40b028>
    2c1c:	0000077e 	andeq	r0, r0, lr, ror r7
    2c20:	1101fb04 	tstne	r1, r4, lsl #22	; <UNPREDICTABLE>
    2c24:	00000087 	andeq	r0, r0, r7, lsl #1
    2c28:	0a142302 	beq	50b838 <_Min_Heap_Size+0x50b038>
    2c2c:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2c30:	1101fc04 	tstne	r1, r4, lsl #24	; <UNPREDICTABLE>
    2c34:	00000087 	andeq	r0, r0, r7, lsl #1
    2c38:	0a182302 	beq	60b848 <_Min_Heap_Size+0x60b048>
    2c3c:	0000055e 	andeq	r0, r0, lr, asr r5
    2c40:	1101fd04 	tstne	r1, r4, lsl #26	; <UNPREDICTABLE>
    2c44:	0000007b 	andeq	r0, r0, fp, ror r0
    2c48:	0a1c2302 	beq	70b858 <_Min_Heap_Size+0x70b058>
    2c4c:	0000053b 	andeq	r0, r0, fp, lsr r5
    2c50:	1101fe04 	tstne	r1, r4, lsl #28	; <UNPREDICTABLE>
    2c54:	00000087 	andeq	r0, r0, r7, lsl #1
    2c58:	0a202302 	beq	80b868 <_Min_Heap_Size+0x80b068>
    2c5c:	000001f9 	strdeq	r0, [r0], -r9
    2c60:	1101ff04 	tstne	r1, r4, lsl #30	; <UNPREDICTABLE>
    2c64:	00000087 	andeq	r0, r0, r7, lsl #1
    2c68:	0a242302 	beq	90b878 <_Min_Heap_Size+0x90b078>
    2c6c:	00000568 	andeq	r0, r0, r8, ror #10
    2c70:	11020004 	tstne	r2, r4
    2c74:	0000008c 	andeq	r0, r0, ip, lsl #1
    2c78:	0a282302 	beq	a0b888 <_Min_Heap_Size+0xa0b088>
    2c7c:	000008d4 	ldrdeq	r0, [r0], -r4
    2c80:	11020104 	tstne	r2, r4, lsl #2
    2c84:	00000087 	andeq	r0, r0, r7, lsl #1
    2c88:	0a302302 	beq	c0b898 <_Min_Heap_Size+0xc0b098>
    2c8c:	000007ee 	andeq	r0, r0, lr, ror #15
    2c90:	11020204 	tstne	r2, r4, lsl #4
    2c94:	00000087 	andeq	r0, r0, r7, lsl #1
    2c98:	0a342302 	beq	d0b8a8 <_Min_Heap_Size+0xd0b0a8>
    2c9c:	000004d6 	ldrdeq	r0, [r0], -r6
    2ca0:	11020304 	tstne	r2, r4, lsl #6
    2ca4:	00000087 	andeq	r0, r0, r7, lsl #1
    2ca8:	0a382302 	beq	e0b8b8 <_Min_Heap_Size+0xe0b0b8>
    2cac:	00000572 	andeq	r0, r0, r2, ror r5
    2cb0:	11020404 	tstne	r2, r4, lsl #8
    2cb4:	0000007b 	andeq	r0, r0, fp, ror r0
    2cb8:	0a3c2302 	beq	f0b8c8 <_Min_Heap_Size+0xf0b0c8>
    2cbc:	0000070b 	andeq	r0, r0, fp, lsl #14
    2cc0:	11020504 	tstne	r2, r4, lsl #10
    2cc4:	00000087 	andeq	r0, r0, r7, lsl #1
    2cc8:	0a402302 	beq	100b8d8 <_Min_Heap_Size+0x100b0d8>
    2ccc:	000006c8 	andeq	r0, r0, r8, asr #13
    2cd0:	11020604 	tstne	r2, r4, lsl #12
    2cd4:	00000087 	andeq	r0, r0, r7, lsl #1
    2cd8:	0a442302 	beq	110b8e8 <_Min_Heap_Size+0x110b0e8>
    2cdc:	0000057c 	andeq	r0, r0, ip, ror r5
    2ce0:	11020704 	tstne	r2, r4, lsl #14
    2ce4:	0000008c 	andeq	r0, r0, ip, lsl #1
    2ce8:	0a482302 	beq	120b8f8 <_Min_Heap_Size+0x120b0f8>
    2cec:	0000012b 	andeq	r0, r0, fp, lsr #2
    2cf0:	11020804 	tstne	r2, r4, lsl #16
    2cf4:	00000087 	andeq	r0, r0, r7, lsl #1
    2cf8:	0a502302 	beq	140b908 <_Min_Heap_Size+0x140b108>
    2cfc:	00000510 	andeq	r0, r0, r0, lsl r5
    2d00:	11020904 	tstne	r2, r4, lsl #18
    2d04:	00000087 	andeq	r0, r0, r7, lsl #1
    2d08:	0a542302 	beq	150b918 <_Min_Heap_Size+0x150b118>
    2d0c:	00000696 	muleq	r0, r6, r6
    2d10:	11020a04 	tstne	r2, r4, lsl #20
    2d14:	00000087 	andeq	r0, r0, r7, lsl #1
    2d18:	0a582302 	beq	160b928 <_Min_Heap_Size+0x160b128>
    2d1c:	00000586 	andeq	r0, r0, r6, lsl #11
    2d20:	11020b04 	tstne	r2, r4, lsl #22
    2d24:	0000007b 	andeq	r0, r0, fp, ror r0
    2d28:	0a5c2302 	beq	170b938 <_Min_Heap_Size+0x170b138>
    2d2c:	0000001b 	andeq	r0, r0, fp, lsl r0
    2d30:	11020c04 	tstne	r2, r4, lsl #24
    2d34:	00000087 	andeq	r0, r0, r7, lsl #1
    2d38:	0a602302 	beq	180b948 <_Min_Heap_Size+0x180b148>
    2d3c:	000003eb 	andeq	r0, r0, fp, ror #7
    2d40:	11020d04 	tstne	r2, r4, lsl #26
    2d44:	00000087 	andeq	r0, r0, r7, lsl #1
    2d48:	0a642302 	beq	190b958 <_Min_Heap_Size+0x190b158>
    2d4c:	00000590 	muleq	r0, r0, r5
    2d50:	11020e04 	tstne	r2, r4, lsl #28
    2d54:	0000008c 	andeq	r0, r0, ip, lsl #1
    2d58:	0a682302 	beq	1a0b968 <_Min_Heap_Size+0x1a0b168>
    2d5c:	00000870 	andeq	r0, r0, r0, ror r8
    2d60:	11020f04 	tstne	r2, r4, lsl #30
    2d64:	00000087 	andeq	r0, r0, r7, lsl #1
    2d68:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    2d6c:	00525343 	subseq	r5, r2, r3, asr #6
    2d70:	11021004 	tstne	r2, r4
    2d74:	00000087 	andeq	r0, r0, r7, lsl #1
    2d78:	0a742302 	beq	1d0b988 <_Min_Heap_Size+0x1d0b188>
    2d7c:	0000059a 	muleq	r0, sl, r5
    2d80:	11021104 	tstne	r2, r4, lsl #2
    2d84:	0000008c 	andeq	r0, r0, ip, lsl #1
    2d88:	0a782302 	beq	1e0b998 <_Min_Heap_Size+0x1e0b198>
    2d8c:	0000083f 	andeq	r0, r0, pc, lsr r8
    2d90:	11021204 	tstne	r2, r4, lsl #4
    2d94:	00000087 	andeq	r0, r0, r7, lsl #1
    2d98:	01802303 	orreq	r2, r0, r3, lsl #6
    2d9c:	00037e0a 	andeq	r7, r3, sl, lsl #28
    2da0:	02130400 	andseq	r0, r3, #0, 8
    2da4:	00008711 	andeq	r8, r0, r1, lsl r7
    2da8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    2dac:	cd0b0001 	stcgt	0, cr0, [fp, #-4]
    2db0:	04000001 	streq	r0, [r0], #-1
    2db4:	9c030214 	sfmls	f0, 4, [r3], {20}
    2db8:	02000000 	andeq	r0, r0, #0
    2dbc:	07260408 	streq	r0, [r6, -r8, lsl #8]!
    2dc0:	010c0000 	mrseq	r0, (UNDEF: 12)
    2dc4:	00001042 	andeq	r1, r0, r2, asr #32
    2dc8:	01063f01 	tsteq	r6, r1, lsl #30
    2dcc:	08000888 	stmdaeq	r0, {r3, r7, fp}
    2dd0:	080008c0 	stmdaeq	r0, {r6, r7, fp}
    2dd4:	000004a9 	andeq	r0, r0, r9, lsr #9
    2dd8:	088a0d01 	stmeq	sl, {r0, r8, sl, fp}
    2ddc:	08a20800 	stmiaeq	r2!, {fp}
    2de0:	02d00800 	sbcseq	r0, r0, #0, 16
    2de4:	b60e0000 	strlt	r0, [lr], -r0
    2de8:	01000001 	tsteq	r0, r1
    2dec:	00870346 	addeq	r0, r7, r6, asr #6
    2df0:	91020000 	mrsls	r0, (UNDEF: 2)
    2df4:	a20f0078 	andge	r0, pc, #120	; 0x78
    2df8:	b6080008 	strlt	r0, [r8], -r8
    2dfc:	0e080008 	cdpeq	0, 0, cr0, cr8, cr8, {0}
    2e00:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    2e04:	87034701 	strhi	r4, [r3, -r1, lsl #14]
    2e08:	02000000 	andeq	r0, r0, #0
    2e0c:	00007c91 	muleq	r0, r1, ip
    2e10:	00462a00 	subeq	r2, r6, r0, lsl #20
    2e14:	bd000200 	sfmlt	f0, 4, [r0, #-0]
    2e18:	04000007 	streq	r0, [r0], #-7
    2e1c:	0005d701 	andeq	sp, r5, r1, lsl #14
    2e20:	13160c00 	tstne	r6, #0, 24
    2e24:	04200000 	strteq	r0, [r0], #-0
    2e28:	01200000 			; <UNDEFINED> instruction: 0x01200000
	...
    2e34:	0ea30000 	cdpeq	0, 10, cr0, cr3, cr0, {0}
    2e38:	01020000 	mrseq	r0, (UNDEF: 2)
    2e3c:	0005c506 	andeq	ip, r5, r6, lsl #10
    2e40:	00660300 	rsbeq	r0, r6, r0, lsl #6
    2e44:	2b030000 	blcs	c2e4c <_Min_Heap_Size+0xc264c>
    2e48:	00003c18 	andeq	r3, r0, r8, lsl ip
    2e4c:	08010200 	stmdaeq	r1, {r9}
    2e50:	000005c3 	andeq	r0, r0, r3, asr #11
    2e54:	fa050202 	blx	143664 <_Min_Heap_Size+0x142e64>
    2e58:	03000003 	movweq	r0, #3
    2e5c:	0000075c 	andeq	r0, r0, ip, asr r7
    2e60:	56193903 	ldrpl	r3, [r9], -r3, lsl #18
    2e64:	02000000 	andeq	r0, r0, #0
    2e68:	07f60702 	ldrbeq	r0, [r6, r2, lsl #14]!
    2e6c:	04020000 	streq	r0, [r2], #-0
    2e70:	0002ec05 	andeq	lr, r2, r5, lsl #24
    2e74:	02c20300 	sbceq	r0, r2, #0, 6
    2e78:	4f030000 	svcmi	0x00030000
    2e7c:	00007019 	andeq	r7, r0, r9, lsl r0
    2e80:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2e84:	000000b3 	strheq	r0, [r0], -r3
    2e88:	e7050802 	str	r0, [r5, -r2, lsl #16]
    2e8c:	03000002 	movweq	r0, #2
    2e90:	000014aa 	andeq	r1, r0, sl, lsr #9
    2e94:	8a196903 	bhi	65d2a8 <_Min_Heap_Size+0x65caa8>
    2e98:	02000000 	andeq	r0, r0, #0
    2e9c:	00ae0708 	adceq	r0, lr, r8, lsl #14
    2ea0:	04040000 	streq	r0, [r4], #-0
    2ea4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2ea8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2eac:	000000b8 	strheq	r0, [r0], -r8
    2eb0:	00006803 	andeq	r6, r0, r3, lsl #16
    2eb4:	13180400 	tstne	r8, #0, 8
    2eb8:	00000030 	andeq	r0, r0, r0, lsr r0
    2ebc:	00009f05 	andeq	r9, r0, r5, lsl #30
    2ec0:	075e0300 	ldrbeq	r0, [lr, -r0, lsl #6]
    2ec4:	24040000 	strcs	r0, [r4], #-0
    2ec8:	00004a14 	andeq	r4, r0, r4, lsl sl
    2ecc:	00b00600 	adcseq	r0, r0, r0, lsl #12
    2ed0:	b0050000 	andlt	r0, r5, r0
    2ed4:	03000000 	movweq	r0, #0
    2ed8:	000002c4 	andeq	r0, r0, r4, asr #5
    2edc:	64143004 	ldrvs	r3, [r4], #-4
    2ee0:	06000000 	streq	r0, [r0], -r0
    2ee4:	000000c6 	andeq	r0, r0, r6, asr #1
    2ee8:	0000c605 	andeq	ip, r0, r5, lsl #12
    2eec:	14ac0300 	strtne	r0, [ip], #768	; 0x300
    2ef0:	3c040000 	stccc	0, cr0, [r4], {-0}
    2ef4:	00007e14 	andeq	r7, r0, r4, lsl lr
    2ef8:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
    2efc:	52090144 	andpl	r0, r9, #68, 2
    2f00:	08000001 	stmdaeq	r0, {r0}
    2f04:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2f08:	d2110146 	andsle	r0, r1, #-2147483631	; 0x80000011
    2f0c:	02000000 	andeq	r0, r0, #0
    2f10:	bc090023 	stclt	0, cr0, [r9], {35}	; 0x23
    2f14:	05000007 	streq	r0, [r0, #-7]
    2f18:	d2110147 	andsle	r0, r1, #-1073741807	; 0xc0000011
    2f1c:	02000000 	andeq	r0, r0, #0
    2f20:	50080423 	andpl	r0, r8, r3, lsr #8
    2f24:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
    2f28:	d2110148 	andsle	r0, r1, #72, 2
    2f2c:	02000000 	andeq	r0, r0, #0
    2f30:	42090823 	andmi	r0, r9, #2293760	; 0x230000
    2f34:	05000000 	streq	r0, [r0, #-0]
    2f38:	d2110149 	andsle	r0, r1, #1073741842	; 0x40000012
    2f3c:	02000000 	andeq	r0, r0, #0
    2f40:	15090c23 	strne	r0, [r9, #-3107]	; 0xfffff3dd
    2f44:	05000008 	streq	r0, [r0, #-8]
    2f48:	d211014a 	andsle	r0, r1, #-2147483630	; 0x80000012
    2f4c:	02000000 	andeq	r0, r0, #0
    2f50:	46081023 	strmi	r1, [r8], -r3, lsr #32
    2f54:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2f58:	d211014b 	andsle	r0, r1, #-1073741806	; 0xc0000012
    2f5c:	02000000 	andeq	r0, r0, #0
    2f60:	0a001423 	beq	7ff4 <_Min_Heap_Size+0x77f4>
    2f64:	000007db 	ldrdeq	r0, [r0], -fp
    2f68:	03014c05 	movweq	r4, #7173	; 0x1c05
    2f6c:	000000e8 	andeq	r0, r0, r8, ror #1
    2f70:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
    2f74:	01d80902 	bicseq	r0, r8, r2, lsl #18
    2f78:	53080000 	movwpl	r0, #32768	; 0x8000
    2f7c:	97050052 	smlsdls	r5, r2, r0, r0
    2f80:	00d21102 	sbcseq	r1, r2, r2, lsl #2
    2f84:	23020000 	movwcs	r0, #8192	; 0x2000
    2f88:	52440800 	subpl	r0, r4, #0, 16
    2f8c:	02980500 	addseq	r0, r8, #0, 10
    2f90:	0000d211 	andeq	sp, r0, r1, lsl r2
    2f94:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2f98:	52524208 	subspl	r4, r2, #8, 4	; 0x80000000
    2f9c:	02990500 	addseq	r0, r9, #0, 10
    2fa0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fa4:	08230200 	stmdaeq	r3!, {r9}
    2fa8:	31524308 	cmpcc	r2, r8, lsl #6
    2fac:	029a0500 	addseq	r0, sl, #0, 10
    2fb0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fb4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2fb8:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
    2fbc:	029b0500 	addseq	r0, fp, #0, 10
    2fc0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fc4:	10230200 	eorne	r0, r3, r0, lsl #4
    2fc8:	33524308 	cmpcc	r2, #8, 6	; 0x20000000
    2fcc:	029c0500 	addseq	r0, ip, #0, 10
    2fd0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fd4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2fd8:	00018909 	andeq	r8, r1, r9, lsl #18
    2fdc:	029d0500 	addseq	r0, sp, #0, 10
    2fe0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fe4:	18230200 	stmdane	r3!, {r9}
    2fe8:	03dd0a00 	bicseq	r0, sp, #0, 20
    2fec:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    2ff0:	015f0302 	cmpeq	pc, r2, lsl #6
    2ff4:	070b0000 	streq	r0, [fp, -r0]
    2ff8:	00003c01 	andeq	r3, r0, r1, lsl #24
    2ffc:	01b90600 			; <UNDEFINED> instruction: 0x01b90600
    3000:	00000200 	andeq	r0, r0, r0, lsl #4
    3004:	00031e0c 	andeq	r1, r3, ip, lsl #28
    3008:	530d0000 	movwpl	r0, #53248	; 0xd000
    300c:	01005445 	tsteq	r0, r5, asr #8
    3010:	10c10300 	sbcne	r0, r1, r0, lsl #6
    3014:	bc060000 	stclt	0, cr0, [r6], {-0}
    3018:	0001e503 	andeq	lr, r1, r3, lsl #10
    301c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    3020:	00000726 	andeq	r0, r0, r6, lsr #14
    3024:	3c01070b 	stccc	7, cr0, [r1], {11}
    3028:	07000000 	streq	r0, [r0, -r0]
    302c:	023a0127 	eorseq	r0, sl, #-1073741815	; 0xc0000009
    3030:	5c0c0000 	stcpl	0, cr0, [ip], {-0}
    3034:	00000003 	andeq	r0, r0, r3
    3038:	0007010c 	andeq	r0, r7, ip, lsl #2
    303c:	090c0100 	stmdbeq	ip, {r8}
    3040:	02000009 	andeq	r0, r0, #9
    3044:	00033d0c 	andeq	r3, r3, ip, lsl #26
    3048:	03000300 	movweq	r0, #768	; 0x300
    304c:	000012f6 	strdeq	r1, [r0], -r6
    3050:	13032c07 	movwne	r2, #15367	; 0x3c07
    3054:	0b000002 	bleq	3064 <_Min_Heap_Size+0x2864>
    3058:	003c0107 	eorseq	r0, ip, r7, lsl #2
    305c:	32070000 	andcc	r0, r7, #0
    3060:	00026101 	andeq	r6, r2, r1, lsl #2
    3064:	08fc0c00 	ldmeq	ip!, {sl, fp}^
    3068:	0c000000 	stceq	0, cr0, [r0], {-0}
    306c:	000004cb 	andeq	r0, r0, fp, asr #9
    3070:	bd030001 	stclt	0, cr0, [r3, #-4]
    3074:	07000001 	streq	r0, [r0, -r1]
    3078:	02460335 	subeq	r0, r6, #-738197504	; 0xd4000000
    307c:	300e0000 	andcc	r0, lr, r0
    3080:	2b093008 	blcs	24f0a8 <_Min_Heap_Size+0x24e8a8>
    3084:	0f000003 	svceq	0x00000003
    3088:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    308c:	c60c3208 	strgt	r3, [ip], -r8, lsl #4
    3090:	02000000 	andeq	r0, r0, #0
    3094:	cd0f0023 	stcgt	0, cr0, [pc, #-140]	; 3010 <_Min_Heap_Size+0x2810>
    3098:	08000002 	stmdaeq	r0, {r1}
    309c:	00c60c35 	sbceq	r0, r6, r5, lsr ip
    30a0:	23020000 	movwcs	r0, #8192	; 0x2000
    30a4:	02020f04 	andeq	r0, r2, #4, 30
    30a8:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    30ac:	0000c60c 	andeq	ip, r0, ip, lsl #12
    30b0:	08230200 	stmdaeq	r3!, {r9}
    30b4:	0007870f 	andeq	r8, r7, pc, lsl #14
    30b8:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    30bc:	000000c6 	andeq	r0, r0, r6, asr #1
    30c0:	0f0c2302 	svceq	0x000c2302
    30c4:	0000081a 	andeq	r0, r0, sl, lsl r8
    30c8:	c60c3f08 	strgt	r3, [ip], -r8, lsl #30
    30cc:	02000000 	andeq	r0, r0, #0
    30d0:	cc0f1023 	stcgt	0, cr1, [pc], {35}	; 0x23
    30d4:	08000003 	stmdaeq	r0, {r0, r1}
    30d8:	00c60c42 	sbceq	r0, r6, r2, asr #24
    30dc:	23020000 	movwcs	r0, #8192	; 0x2000
    30e0:	06f10f14 	usateq	r0, #17, r4, lsl #30
    30e4:	45080000 	strmi	r0, [r8, #-0]
    30e8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    30ec:	18230200 	stmdane	r3!, {r9}
    30f0:	001f9a0f 	andseq	r9, pc, pc, lsl #20
    30f4:	0c4a0800 	mcrreq	8, 0, r0, sl, cr0
    30f8:	000000c6 	andeq	r0, r0, r6, asr #1
    30fc:	0f1c2302 	svceq	0x001c2302
    3100:	000006ed 	andeq	r0, r0, sp, ror #13
    3104:	c60c4d08 	strgt	r4, [ip], -r8, lsl #26
    3108:	02000000 	andeq	r0, r0, #0
    310c:	320f2023 	andcc	r2, pc, #35	; 0x23
    3110:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3114:	00c60c52 	sbceq	r0, r6, r2, asr ip
    3118:	23020000 	movwcs	r0, #8192	; 0x2000
    311c:	02150f24 	andseq	r0, r5, #36, 30	; 0x90
    3120:	55080000 	strpl	r0, [r8, #-0]
    3124:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3128:	28230200 	stmdacs	r3!, {r9}
    312c:	00078e0f 	andeq	r8, r7, pc, lsl #28
    3130:	0c5b0800 	mrrceq	8, 0, r0, fp, cr0
    3134:	000000c6 	andeq	r0, r0, r6, asr #1
    3138:	002c2302 	eoreq	r2, ip, r2, lsl #6
    313c:	00004703 	andeq	r4, r0, r3, lsl #14
    3140:	02600800 	rsbeq	r0, r0, #0, 16
    3144:	0000026d 	andeq	r0, r0, sp, ror #4
    3148:	3c01070b 	stccc	7, cr0, [r1], {11}
    314c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3150:	036a0167 	cmneq	sl, #-1073741799	; 0xc0000019
    3154:	100c0000 	andne	r0, ip, r0
    3158:	00000003 	andeq	r0, r0, r3
    315c:	0003290c 	andeq	r2, r3, ip, lsl #18
    3160:	6c0c0100 	stfvss	f0, [ip], {-0}
    3164:	02000004 	andeq	r0, r0, #4
    3168:	0008960c 	andeq	r9, r8, ip, lsl #12
    316c:	2d0c0300 	stccs	3, cr0, [ip, #-0]
    3170:	04000002 	streq	r0, [r0], #-2
    3174:	00038e0c 	andeq	r8, r3, ip, lsl #28
    3178:	03000500 	movweq	r0, #1280	; 0x500
    317c:	0000067c 	andeq	r0, r0, ip, ror r6
    3180:	37026e08 	strcc	r6, [r2, -r8, lsl #28]
    3184:	06000003 	streq	r0, [r0], -r3
    3188:	0000036a 	andeq	r0, r0, sl, ror #6
    318c:	0006d910 	andeq	sp, r6, r0, lsl r9
    3190:	8a086000 	bhi	21b198 <_Min_Heap_Size+0x21a998>
    3194:	00045b10 	andeq	r5, r4, r0, lsl fp
    3198:	04de0f00 	ldrbeq	r0, [lr], #3840	; 0xf00
    319c:	8c080000 	stchi	0, cr0, [r8], {-0}
    31a0:	00045b1f 	andeq	r5, r4, pc, lsl fp
    31a4:	00230200 	eoreq	r0, r3, r0, lsl #4
    31a8:	001a7c0f 	andseq	r7, sl, pc, lsl #24
    31ac:	1e8e0800 	cdpne	8, 8, cr0, cr14, cr0, {0}
    31b0:	0000032b 	andeq	r0, r0, fp, lsr #6
    31b4:	0f042302 	svceq	0x00042302
    31b8:	000002a8 	andeq	r0, r0, r8, lsr #5
    31bc:	611e9008 	tstvs	lr, r8
    31c0:	02000002 	andeq	r0, r0, #2
    31c4:	0a0f3423 	beq	3d0258 <_Min_Heap_Size+0x3cfa58>
    31c8:	08000003 	stmdaeq	r0, {r0, r1}
    31cc:	03761e92 	cmneq	r6, #2336	; 0x920
    31d0:	23020000 	movwcs	r0, #8192	; 0x2000
    31d4:	02a10f35 	adceq	r0, r1, #53, 30	; 0xd4
    31d8:	94080000 	strls	r0, [r8], #-0
    31dc:	0004611f 	andeq	r6, r4, pc, lsl r1
    31e0:	38230200 	stmdacc	r3!, {r9}
    31e4:	00093f0f 	andeq	r3, r9, pc, lsl #30
    31e8:	21960800 	orrscs	r0, r6, r0, lsl #16
    31ec:	00000475 	andeq	r0, r0, r5, ror r4
    31f0:	0f3c2302 	svceq	0x003c2302
    31f4:	000001d9 	ldrdeq	r0, [r0], -r9
    31f8:	75219808 	strvc	r9, [r1, #-2056]!	; 0xfffff7f8
    31fc:	02000004 	andeq	r0, r0, #4
    3200:	970f4023 	strls	r4, [pc, -r3, lsr #32]
    3204:	08000001 	stmdaeq	r0, {r0}
    3208:	0475219a 	ldrbteq	r2, [r5], #-410	; 0xfffffe66
    320c:	23020000 	movwcs	r0, #8192	; 0x2000
    3210:	05a40f44 	streq	r0, [r4, #3908]!	; 0xf44
    3214:	9c080000 	stcls	0, cr0, [r8], {-0}
    3218:	00047521 	andeq	r7, r4, r1, lsr #10
    321c:	48230200 	stmdami	r3!, {r9}
    3220:	0004e70f 	andeq	lr, r4, pc, lsl #14
    3224:	219e0800 	orrscs	r0, lr, r0, lsl #16
    3228:	00000475 	andeq	r0, r0, r5, ror r4
    322c:	0f4c2302 	svceq	0x004c2302
    3230:	0000092d 	andeq	r0, r0, sp, lsr #18
    3234:	7521a008 	strvc	sl, [r1, #-8]!
    3238:	02000004 	andeq	r0, r0, #4
    323c:	ad0f5023 	stcge	0, cr5, [pc, #-140]	; 31b8 <_Min_Heap_Size+0x29b8>
    3240:	08000003 	stmdaeq	r0, {r0, r1}
    3244:	00d21ea2 	sbcseq	r1, r2, r2, lsr #29
    3248:	23020000 	movwcs	r0, #8192	; 0x2000
    324c:	028a0f54 	addeq	r0, sl, #84, 30	; 0x150
    3250:	a4080000 	strge	r0, [r8], #-0
    3254:	0000c61e 	andeq	ip, r0, lr, lsl r6
    3258:	58230200 	stmdapl	r3!, {r9}
    325c:	0003500f 	andeq	r5, r3, pc
    3260:	1ea60800 	cdpne	8, 10, cr0, cr6, cr0, {0}
    3264:	000000c6 	andeq	r0, r0, r6, asr #1
    3268:	005c2302 	subseq	r2, ip, r2, lsl #6
    326c:	01520411 	cmpeq	r2, r1, lsl r4
    3270:	04120000 	ldreq	r0, [r2], #-0
    3274:	046f0113 	strbteq	r0, [pc], #-275	; 327c <_Min_Heap_Size+0x2a7c>
    3278:	6f140000 	svcvs	0x00140000
    327c:	00000004 	andeq	r0, r0, r4
    3280:	037b0411 	cmneq	fp, #285212672	; 0x11000000
    3284:	04110000 	ldreq	r0, [r1], #-0
    3288:	00000463 	andeq	r0, r0, r3, ror #8
    328c:	0006db03 	andeq	sp, r6, r3, lsl #22
    3290:	02a80800 	adceq	r0, r8, #0, 16
    3294:	0000037b 	andeq	r0, r0, fp, ror r3
    3298:	2e091c0e 	cdpcs	12, 0, cr1, cr9, cr14, {0}
    329c:	0004fa09 	andeq	pc, r4, r9, lsl #20
    32a0:	018e0f00 	orreq	r0, lr, r0, lsl #30
    32a4:	30090000 	andcc	r0, r9, r0
    32a8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    32ac:	00230200 	eoreq	r0, r3, r0, lsl #4
    32b0:	0006f60f 	andeq	pc, r6, pc, lsl #12
    32b4:	0c360900 			; <UNDEFINED> instruction: 0x0c360900
    32b8:	000000c6 	andeq	r0, r0, r6, asr #1
    32bc:	0f042302 	svceq	0x00042302
    32c0:	00000279 	andeq	r0, r0, r9, ror r2
    32c4:	c60c3909 	strgt	r3, [ip], -r9, lsl #18
    32c8:	02000000 	andeq	r0, r0, #0
    32cc:	340f0823 	strcc	r0, [pc], #-2083	; 32d4 <_Min_Heap_Size+0x2ad4>
    32d0:	09000005 	stmdbeq	r0, {r0, r2}
    32d4:	00c60c3c 	sbceq	r0, r6, ip, lsr ip
    32d8:	23020000 	movwcs	r0, #8192	; 0x2000
    32dc:	06f10f0c 	ldrbteq	r0, [r1], ip, lsl #30
    32e0:	43090000 	movwmi	r0, #36864	; 0x9000
    32e4:	0000c60c 	andeq	ip, r0, ip, lsl #12
    32e8:	10230200 	eorne	r0, r3, r0, lsl #4
    32ec:	00088c0f 	andeq	r8, r8, pc, lsl #24
    32f0:	0c460900 	mcrreq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
    32f4:	000000c6 	andeq	r0, r0, r6, asr #1
    32f8:	0f142302 	svceq	0x00142302
    32fc:	00000135 	andeq	r0, r0, r5, lsr r1
    3300:	c60c4909 	strgt	r4, [ip], -r9, lsl #18
    3304:	02000000 	andeq	r0, r0, #0
    3308:	03001823 	movweq	r1, #2083	; 0x823
    330c:	0000082e 	andeq	r0, r0, lr, lsr #16
    3310:	87034b09 	strhi	r4, [r3, -r9, lsl #22]
    3314:	0b000004 	bleq	332c <_Min_Heap_Size+0x2b2c>
    3318:	003c0107 	eorseq	r0, ip, r7, lsl #2
    331c:	75090000 	strvc	r0, [r9, #-0]
    3320:	00054501 	andeq	r4, r5, r1, lsl #10
    3324:	07c10c00 	strbeq	r0, [r1, r0, lsl #24]
    3328:	0c000000 	stceq	0, cr0, [r0], {-0}
    332c:	000002ad 	andeq	r0, r0, sp, lsr #5
    3330:	08e80c20 	stmiaeq	r8!, {r5, sl, fp}^
    3334:	0c240000 	stceq	0, cr0, [r4], #-0
    3338:	000004f9 	strdeq	r0, [r0], -r9
    333c:	07670c21 	strbeq	r0, [r7, -r1, lsr #24]!
    3340:	0c220000 	stceq	0, cr0, [r2], #-0
    3344:	0000016f 	andeq	r0, r0, pc, ror #2
    3348:	08750c23 	ldmdaeq	r5!, {r0, r1, r5, sl, fp}^
    334c:	0ca00000 	stceq	0, cr0, [r0]
    3350:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    3354:	250300e0 	strcs	r0, [r3, #-224]	; 0xffffff20
    3358:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    335c:	05060387 	streq	r0, [r6, #-903]	; 0xfffffc79
    3360:	45060000 	strmi	r0, [r6, #-0]
    3364:	03000005 	movweq	r0, #5
    3368:	00000845 	andeq	r0, r0, r5, asr #16
    336c:	c6129009 	ldrgt	r9, [r2], -r9
    3370:	06000000 	streq	r0, [r0], -r0
    3374:	00000556 	andeq	r0, r0, r6, asr r5
    3378:	0000ca03 	andeq	ip, r0, r3, lsl #20
    337c:	129b0900 	addsne	r0, fp, #0, 18
    3380:	000000c6 	andeq	r0, r0, r6, asr #1
    3384:	00056706 	andeq	r6, r5, r6, lsl #14
    3388:	04a31000 	strteq	r1, [r3], #0
    338c:	09480000 	stmdbeq	r8, {}^	; <UNPREDICTABLE>
    3390:	067610a0 	ldrbteq	r1, [r6], -r0, lsr #1
    3394:	de0f0000 	cdple	0, 0, cr0, cr15, cr0, {0}
    3398:	09000004 	stmdbeq	r0, {r2}
    339c:	067622a2 	ldrbteq	r2, [r6], -r2, lsr #5
    33a0:	23020000 	movwcs	r0, #8192	; 0x2000
    33a4:	1a7c0f00 	bne	1f06fac <_Min_Heap_Size+0x1f067ac>
    33a8:	a4090000 	strge	r0, [r9], #-0
    33ac:	0004fa21 	andeq	pc, r4, r1, lsr #20
    33b0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    33b4:	0001ee0f 	andeq	lr, r1, pc, lsl #28
    33b8:	22a60900 	adccs	r0, r6, #0, 18
    33bc:	0000067c 	andeq	r0, r0, ip, ror r6
    33c0:	0f202302 	svceq	0x00202302
    33c4:	00000373 	andeq	r0, r0, r3, ror r3
    33c8:	b021a809 	eorlt	sl, r1, r9, lsl #16
    33cc:	02000000 	andeq	r0, r0, #0
    33d0:	420f2423 	andmi	r2, pc, #587202560	; 0x23000000
    33d4:	09000001 	stmdbeq	r0, {r0}
    33d8:	00bc21aa 	adcseq	r2, ip, sl, lsr #3
    33dc:	23020000 	movwcs	r0, #8192	; 0x2000
    33e0:	08ac0f26 	stmiaeq	ip!, {r1, r2, r5, r8, r9, sl, fp}
    33e4:	ac090000 	stcge	0, cr0, [r9], {-0}
    33e8:	00068222 	andeq	r8, r6, r2, lsr #4
    33ec:	28230200 	stmdacs	r3!, {r9}
    33f0:	0003680f 	andeq	r6, r3, pc, lsl #16
    33f4:	21ae0900 			; <UNDEFINED> instruction: 0x21ae0900
    33f8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    33fc:	0f2c2302 	svceq	0x002c2302
    3400:	000008dc 	ldrdeq	r0, [r0], -ip
    3404:	bc21b009 	stclt	0, cr11, [r1], #-36	; 0xffffffdc
    3408:	02000000 	andeq	r0, r0, #0
    340c:	1f0f2e23 	svcne	0x000f2e23
    3410:	09000009 	stmdbeq	r0, {r0, r3}
    3414:	05621fb2 	strbeq	r1, [r2, #-4018]!	; 0xfffff04e
    3418:	23020000 	movwcs	r0, #8192	; 0x2000
    341c:	10910f30 	addsne	r0, r1, r0, lsr pc
    3420:	b4090000 	strlt	r0, [r9], #-0
    3424:	00057324 	andeq	r7, r5, r4, lsr #6
    3428:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    342c:	00051a0f 	andeq	r1, r5, pc, lsl #20
    3430:	22b60900 	adcscs	r0, r6, #0, 18
    3434:	00000688 	andeq	r0, r0, r8, lsl #13
    3438:	0f382302 	svceq	0x00382302
    343c:	000002e0 	andeq	r0, r0, r0, ror #5
    3440:	8822b809 	stmdahi	r2!, {r0, r3, fp, ip, sp, pc}
    3444:	02000006 	andeq	r0, r0, #6
    3448:	a80f3c23 	stmdage	pc, {r0, r1, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    344c:	09000002 	stmdbeq	r0, {r1}
    3450:	026121ba 	rsbeq	r2, r1, #-2147483602	; 0x8000002e
    3454:	23020000 	movwcs	r0, #8192	; 0x2000
    3458:	003b0f40 	eorseq	r0, fp, r0, asr #30
    345c:	bc090000 	stclt	0, cr0, [r9], {-0}
    3460:	00055121 	andeq	r5, r5, r1, lsr #2
    3464:	41230200 			; <UNDEFINED> instruction: 0x41230200
    3468:	0009120f 	andeq	r1, r9, pc, lsl #4
    346c:	21c00900 	biccs	r0, r0, r0, lsl #18
    3470:	00000551 	andeq	r0, r0, r1, asr r5
    3474:	0f422302 	svceq	0x00422302
    3478:	000003ad 	andeq	r0, r0, sp, lsr #7
    347c:	d221c309 	eorle	ip, r1, #603979776	; 0x24000000
    3480:	02000000 	andeq	r0, r0, #0
    3484:	11004423 	tstne	r0, r3, lsr #8
    3488:	0001d804 	andeq	sp, r1, r4, lsl #16
    348c:	ab041100 	blge	107894 <_Min_Heap_Size+0x107094>
    3490:	11000000 	mrsne	r0, (UNDEF: 0)
    3494:	00009f04 	andeq	r9, r0, r4, lsl #30
    3498:	7b041100 	blvc	1078a0 <_Min_Heap_Size+0x1070a0>
    349c:	03000004 	movweq	r0, #4
    34a0:	000004a5 	andeq	r0, r0, r5, lsr #9
    34a4:	7803d509 	stmdavc	r3, {r0, r3, r8, sl, ip, lr, pc}
    34a8:	05000005 	streq	r0, [r0, #-5]
    34ac:	0000068e 	andeq	r0, r0, lr, lsl #13
    34b0:	00126915 	andseq	r6, r2, r5, lsl r9
    34b4:	0e6f0100 	poweqe	f0, f7, f0
    34b8:	097c010d 	ldmdbeq	ip!, {r0, r2, r3, r8}^
    34bc:	0af00800 	beq	ffc054c4 <_estack+0xdfc0428c>
    34c0:	04d50800 	ldrbeq	r0, [r5], #2048	; 0x800
    34c4:	96010000 	strls	r0, [r1], -r0
    34c8:	16000007 	strne	r0, [r0], -r7
    34cc:	000014f7 	strdeq	r1, [r0], -r7
    34d0:	300e6f01 	andcc	r6, lr, r1, lsl #30
    34d4:	00000796 	muleq	r0, r6, r7
    34d8:	000004fd 	strdeq	r0, [r0], -sp
    34dc:	000004f5 	strdeq	r0, [r0], -r5
    34e0:	0001b617 	andeq	fp, r1, r7, lsl r6
    34e4:	0e710100 	rpweqs	f0, f1, f0
    34e8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    34ec:	00053300 	andeq	r3, r5, r0, lsl #6
    34f0:	00053100 	andeq	r3, r5, r0, lsl #2
    34f4:	15301700 	ldrne	r1, [r0, #-1792]!	; 0xfffff900
    34f8:	72010000 	andvc	r0, r1, #0
    34fc:	00c60c0e 	sbceq	r0, r6, lr, lsl #24
    3500:	054c0000 	strbeq	r0, [ip, #-0]
    3504:	05460000 	strbeq	r0, [r6, #-0]
    3508:	b8180000 	ldmdalt	r8, {}	; <UNPREDICTABLE>
    350c:	ab080009 	blge	203538 <_Min_Heap_Size+0x202d38>
    3510:	17000045 	strne	r0, [r0, -r5, asr #32]
    3514:	19000007 	stmdbne	r0, {r0, r1, r2}
    3518:	03055001 	movweq	r5, #20481	; 0x5001
    351c:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    3520:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    3524:	000e780a 	andeq	r7, lr, sl, lsl #16
    3528:	000a061a 	andeq	r0, sl, sl, lsl r6
    352c:	0045ba08 	subeq	fp, r5, r8, lsl #20
    3530:	0a121800 	beq	489538 <_Min_Heap_Size+0x488d38>
    3534:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3538:	073e0000 	ldreq	r0, [lr, -r0]!
    353c:	01190000 	tsteq	r9, r0
    3540:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    3544:	1908002c 	stmdbne	r8, {r2, r3, r5}
    3548:	0a035101 	beq	d7954 <_Min_Heap_Size+0xd7154>
    354c:	18000e75 	stmdane	r0, {r0, r2, r4, r5, r6, r9, sl, fp}
    3550:	08000a1e 	stmdaeq	r0, {r1, r2, r3, r4, r9, fp}
    3554:	000045ab 	andeq	r4, r0, fp, lsr #11
    3558:	0000075c 	andeq	r0, r0, ip, asr r7
    355c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3560:	002c0803 	eoreq	r0, ip, r3, lsl #16
    3564:	51011908 	tstpl	r1, r8, lsl #18
    3568:	0e760a03 	vaddeq.f32	s1, s12, s6
    356c:	0a2a1800 	beq	a89574 <_Min_Heap_Size+0xa88d74>
    3570:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3574:	077a0000 	ldrbeq	r0, [sl, -r0]!
    3578:	01190000 	tsteq	r9, r0
    357c:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    3580:	1908002c 	stmdbne	r8, {r2, r3, r5}
    3584:	0a035101 	beq	d7990 <_Min_Heap_Size+0xd7190>
    3588:	1a000e77 	bne	6f6c <_Min_Heap_Size+0x676c>
    358c:	08000a30 	stmdaeq	r0, {r4, r5, r9, fp}
    3590:	000045c9 	andeq	r4, r0, r9, asr #11
    3594:	000a601a 	andeq	r6, sl, sl, lsl r0
    3598:	0045d808 	subeq	sp, r5, r8, lsl #16
    359c:	0ab21a00 	beq	fec89da4 <_estack+0xdec88b6c>
    35a0:	45d80800 	ldrbmi	r0, [r8, #2048]	; 0x800
    35a4:	11000000 	mrsne	r0, (UNDEF: 0)
    35a8:	00068e04 	andeq	r8, r6, r4, lsl #28
    35ac:	17071b00 	strne	r1, [r7, -r0, lsl #22]
    35b0:	0a010000 	beq	435b8 <_Min_Heap_Size+0x42db8>
    35b4:	3a011a0e 	bcc	49df4 <_Min_Heap_Size+0x495f4>
    35b8:	a6000002 	strge	r0, [r0], -r2
    35bc:	8c08000d 	stchi	0, cr0, [r8], {13}
    35c0:	7508000e 	strvc	r0, [r8, #-14]
    35c4:	01000005 	tsteq	r0, r5
    35c8:	000008cf 	andeq	r0, r0, pc, asr #17
    35cc:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    35d0:	0e0a0100 	adfeqe	f0, f2, f0
    35d4:	0007963e 	andeq	r9, r7, lr, lsr r6
    35d8:	0005e100 	andeq	lr, r5, r0, lsl #2
    35dc:	0005d100 	andeq	sp, r5, r0, lsl #2
    35e0:	11741700 	cmnne	r4, r0, lsl #14
    35e4:	0c010000 	stceq	0, cr0, [r1], {-0}
    35e8:	06820d0e 	streq	r0, [r2], lr, lsl #26
    35ec:	06530000 	ldrbeq	r0, [r3], -r0
    35f0:	064d0000 	strbeq	r0, [sp], -r0
    35f4:	de170000 	cdple	0, 1, cr0, cr7, cr0, {0}
    35f8:	01000011 	tsteq	r0, r1, lsl r0
    35fc:	cf0d0e0d 	svcgt	0x000d0e0d
    3600:	83000008 	movwhi	r0, #8
    3604:	7d000006 	stcvc	0, cr0, [r0, #-24]	; 0xffffffe8
    3608:	1c000006 	stcne	0, cr0, [r0], {6}
    360c:	08000e1a 	stmdaeq	r0, {r1, r3, r4, r9, sl, fp}
    3610:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
    3614:	00000892 	muleq	r0, r2, r8
    3618:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    361c:	0e420100 	dvfeqs	f0, f2, f0
    3620:	0000c609 	andeq	ip, r0, r9, lsl #12
    3624:	0006b000 	andeq	fp, r6, r0
    3628:	0006ae00 	andeq	sl, r6, r0, lsl #28
    362c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    3630:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    3634:	00000800 	andeq	r0, r0, r0, lsl #16
    3638:	08000e1c 	stmdaeq	r0, {r2, r3, r4, r9, sl, fp}
    363c:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
    3640:	090e4201 	stmdbeq	lr, {r0, r9, lr}
    3644:	00000852 	andeq	r0, r0, r2, asr r8
    3648:	0045901f 	subeq	r9, r5, pc, lsl r0
    364c:	0006c900 	andeq	ip, r6, r0, lsl #18
    3650:	0006c300 	andeq	ip, r6, r0, lsl #6
    3654:	459d2000 	ldrmi	r2, [sp]
    3658:	06f80000 	ldrbteq	r0, [r8], r0
    365c:	06f60000 	ldrbteq	r0, [r6], r0
    3660:	21000000 	mrscs	r0, (UNDEF: 0)
    3664:	0000453c 	andeq	r4, r0, ip, lsr r5
    3668:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
    366c:	0e280001 	cdpeq	0, 2, cr0, cr8, cr1, {0}
    3670:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
    3674:	42010800 	andmi	r0, r1, #0, 16
    3678:	5c1f090e 			; <UNDEFINED> instruction: 0x5c1f090e
    367c:	0f000045 	svceq	0x00000045
    3680:	0b000007 	bleq	36a4 <_Min_Heap_Size+0x2ea4>
    3684:	1f000007 	svcne	0x00000007
    3688:	0000454f 	andeq	r4, r0, pc, asr #10
    368c:	00000731 	andeq	r0, r0, r1, lsr r7
    3690:	0000072f 	andeq	r0, r0, pc, lsr #14
    3694:	00456920 	subeq	r6, r5, r0, lsr #18
    3698:	00074600 	andeq	r4, r7, r0, lsl #12
    369c:	00074400 	andeq	r4, r7, r0, lsl #8
    36a0:	1c000000 	stcne	0, cr0, [r0], {-0}
    36a4:	08000e3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, fp}
    36a8:	08000e4a 	stmdaeq	r0, {r1, r3, r6, r9, sl, fp}
    36ac:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
    36b0:	0001b622 	andeq	fp, r1, r2, lsr #12
    36b4:	0e480100 	dvfeqe	f0, f0, f0
    36b8:	0000d20b 	andeq	sp, r0, fp, lsl #4
    36bc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    36c0:	0e501800 	cdpeq	8, 5, cr1, cr0, cr0, {0}
    36c4:	1a8f0800 	bne	fe3c56cc <_estack+0xde3c4494>
    36c8:	08c50000 	stmiaeq	r5, {}^	; <UNPREDICTABLE>
    36cc:	01190000 	tsteq	r9, r0
    36d0:	01f30350 	mvnseq	r0, r0, asr r3
    36d4:	821a0050 	andshi	r0, sl, #80	; 0x50
    36d8:	a008000e 	andge	r0, r8, lr
    36dc:	0000001b 	andeq	r0, r0, fp, lsl r0
    36e0:	00b00411 	adcseq	r0, r0, r1, lsl r4
    36e4:	161b0000 	ldrne	r0, [fp], -r0
    36e8:	01000016 	tsteq	r0, r6, lsl r0
    36ec:	011a0df1 			; <UNDEFINED> instruction: 0x011a0df1
    36f0:	0000023a 	andeq	r0, r0, sl, lsr r2
    36f4:	08000d76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, fp}
    36f8:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
    36fc:	00000759 	andeq	r0, r0, r9, asr r7
    3700:	00091b01 	andeq	r1, r9, r1, lsl #22
    3704:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    3708:	f1010000 	setend	le
    370c:	0796420d 	ldreq	r4, [r6, sp, lsl #4]
    3710:	077d0000 	ldrbeq	r0, [sp, -r0]!
    3714:	07790000 	ldrbeq	r0, [r9, -r0]!
    3718:	8c230000 	stchi	0, cr0, [r3], #-0
    371c:	f608000d 			; <UNDEFINED> instruction: 0xf608000d
    3720:	1900001b 	stmdbne	r0, {r0, r1, r3, r4}
    3724:	f3035001 	vhadd.u8	d5, d3, d1
    3728:	00005001 	andeq	r5, r0, r1
    372c:	0015b324 	andseq	fp, r5, r4, lsr #6
    3730:	0dc90100 	stfeqe	f0, [r9]
    3734:	023a011a 	eorseq	r0, sl, #-2147483642	; 0x80000006
    3738:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    373c:	097c0800 	ldmdbeq	ip!, {fp}^
    3740:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3744:	09640100 	stmdbeq	r4!, {r8}^
    3748:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    374c:	01000014 	tsteq	r0, r4, lsl r0
    3750:	963f0dc9 	ldrtls	r0, [pc], -r9, asr #27
    3754:	a8000007 	stmdage	r0, {r0, r1, r2}
    3758:	9e000007 	cdpls	0, 0, cr0, cr0, cr7, {0}
    375c:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    3760:	00706d74 	rsbseq	r6, r0, r4, ror sp
    3764:	130dcb01 	movwne	ip, #56065	; 0xdb01
    3768:	00000964 	andeq	r0, r0, r4, ror #18
    376c:	000007f1 	strdeq	r0, [r0], -r1
    3770:	000007ed 	andeq	r0, r0, sp, ror #15
    3774:	c1041100 	mrsgt	r1, (UNDEF: 20)
    3778:	15000000 	strne	r0, [r0, #-0]
    377c:	000012cf 	andeq	r1, r0, pc, asr #5
    3780:	0d0daf01 	stceq	15, cr10, [sp, #-4]
    3784:	00000001 	andeq	r0, r0, r1
    3788:	00000000 	andeq	r0, r0, r0
    378c:	00081000 	andeq	r1, r8, r0
    3790:	09b90100 	ldmibeq	r9!, {r8}
    3794:	7f160000 	svcvc	0x00160000
    3798:	01000013 	tsteq	r0, r3, lsl r0
    379c:	883c0daf 	ldmdahi	ip!, {r0, r1, r2, r3, r5, r7, r8, sl, fp}
    37a0:	34000006 	strcc	r0, [r0], #-6
    37a4:	30000008 	andcc	r0, r0, r8
    37a8:	17000008 	strne	r0, [r0, -r8]
    37ac:	000014f7 	strdeq	r1, [r0], -r7
    37b0:	170db101 	strne	fp, [sp, -r1, lsl #2]
    37b4:	00000796 	muleq	r0, r6, r7
    37b8:	00000857 	andeq	r0, r0, r7, asr r8
    37bc:	00000855 	andeq	r0, r0, r5, asr r8
    37c0:	0000001a 	andeq	r0, r0, sl, lsl r0
    37c4:	001ac900 	andseq	ip, sl, r0, lsl #18
    37c8:	be150000 	cdplt	0, 1, cr0, cr5, cr0, {0}
    37cc:	01000016 	tsteq	r0, r6, lsl r0
    37d0:	010d0d93 			; <UNDEFINED> instruction: 0x010d0d93
	...
    37dc:	0000086a 	andeq	r0, r0, sl, ror #16
    37e0:	000a0801 	andeq	r0, sl, r1, lsl #16
    37e4:	137f1600 	cmnne	pc, #0, 12
    37e8:	93010000 	movwls	r0, #4096	; 0x1000
    37ec:	06883c0d 	streq	r3, [r8], sp, lsl #24
    37f0:	088e0000 	stmeq	lr, {}	; <UNPREDICTABLE>
    37f4:	088a0000 	stmeq	sl, {}	; <UNPREDICTABLE>
    37f8:	f7170000 			; <UNDEFINED> instruction: 0xf7170000
    37fc:	01000014 	tsteq	r0, r4, lsl r0
    3800:	96170d95 			; <UNDEFINED> instruction: 0x96170d95
    3804:	b1000007 	tstlt	r0, r7
    3808:	af000008 	svcge	0x00000008
    380c:	1a000008 	bne	3834 <_Min_Heap_Size+0x3034>
    3810:	00000000 	andeq	r0, r0, r0
    3814:	00001af4 	strdeq	r1, [r0], -r4
    3818:	12821500 	addne	r1, r2, #0, 10
    381c:	65010000 	strvs	r0, [r1, #-0]
    3820:	00010d0d 	andeq	r0, r1, sp, lsl #26
    3824:	00000000 	andeq	r0, r0, r0
    3828:	c4000000 	strgt	r0, [r0], #-0
    382c:	01000008 	tsteq	r0, r8
    3830:	00000a57 	andeq	r0, r0, r7, asr sl
    3834:	00137f16 	andseq	r7, r3, r6, lsl pc
    3838:	0d650100 	stfeqe	f0, [r5, #-0]
    383c:	00068838 	andeq	r8, r6, r8, lsr r8
    3840:	0008e800 	andeq	lr, r8, r0, lsl #16
    3844:	0008e400 	andeq	lr, r8, r0, lsl #8
    3848:	14f71700 	ldrbtne	r1, [r7], #1792	; 0x700
    384c:	67010000 	strvs	r0, [r1, -r0]
    3850:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    3854:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    3858:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    385c:	001a0000 	andseq	r0, sl, r0
    3860:	1f000000 	svcne	0x00000000
    3864:	0000001b 	andeq	r0, r0, fp, lsl r0
    3868:	00136715 	andseq	r6, r3, r5, lsl r7
    386c:	0d370100 	ldfeqs	f0, [r7, #-0]
    3870:	0000010d 	andeq	r0, r0, sp, lsl #2
    3874:	00000000 	andeq	r0, r0, r0
    3878:	091e0000 	ldmdbeq	lr, {}	; <UNPREDICTABLE>
    387c:	a6010000 	strge	r0, [r1], -r0
    3880:	1600000a 	strne	r0, [r0], -sl
    3884:	0000137f 	andeq	r1, r0, pc, ror r3
    3888:	380d3701 	stmdacc	sp, {r0, r8, r9, sl, ip, sp}
    388c:	00000688 	andeq	r0, r0, r8, lsl #13
    3890:	00000942 	andeq	r0, r0, r2, asr #18
    3894:	0000093e 	andeq	r0, r0, lr, lsr r9
    3898:	0014f717 	andseq	pc, r4, r7, lsl r7	; <UNPREDICTABLE>
    389c:	0d390100 	ldfeqs	f0, [r9, #-0]
    38a0:	00079617 	andeq	r9, r7, r7, lsl r6
    38a4:	00096500 	andeq	r6, r9, r0, lsl #10
    38a8:	00096300 	andeq	r6, r9, r0, lsl #6
    38ac:	00001a00 	andeq	r1, r0, r0, lsl #20
    38b0:	1b1f0000 	blne	7c38b8 <_Min_Heap_Size+0x7c30b8>
    38b4:	15000000 	strne	r0, [r0, #-0]
    38b8:	000015c4 	andeq	r1, r0, r4, asr #11
    38bc:	0d0d1f01 	stceq	15, cr1, [sp, #-4]
    38c0:	000d9401 	andeq	r9, sp, r1, lsl #8
    38c4:	000da408 	andeq	sl, sp, r8, lsl #8
    38c8:	00097808 	andeq	r7, r9, r8, lsl #16
    38cc:	0af50100 	beq	ffd43cd4 <_estack+0xdfd42a9c>
    38d0:	7f160000 	svcvc	0x00160000
    38d4:	01000013 	tsteq	r0, r3, lsl r0
    38d8:	88350d1f 	ldmdahi	r5!, {r0, r1, r2, r3, r4, r8, sl, fp}
    38dc:	9c000006 	stcls	0, cr0, [r0], {6}
    38e0:	98000009 	stmdals	r0, {r0, r3}
    38e4:	17000009 	strne	r0, [r0, -r9]
    38e8:	000014f7 	strdeq	r1, [r0], -r7
    38ec:	170d2101 	strne	r2, [sp, -r1, lsl #2]
    38f0:	00000796 	muleq	r0, r6, r7
    38f4:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    38f8:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
    38fc:	000da21a 	andeq	sl, sp, sl, lsl r2
    3900:	001b4a08 	andseq	r4, fp, r8, lsl #20
    3904:	4e250000 	cdpmi	0, 2, cr0, cr5, cr0, {0}
    3908:	01000011 	tsteq	r0, r1, lsl r0
    390c:	010d0d07 	tsteq	sp, r7, lsl #26
    3910:	080008c0 	stmdaeq	r0, {r6, r7, fp}
    3914:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
    3918:	01007d02 	tsteq	r0, r2, lsl #26
    391c:	00000ce9 	andeq	r0, r0, r9, ror #25
    3920:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    3924:	0d070100 	stfeqs	f0, [r7, #-0]
    3928:	00079634 	andeq	r9, r7, r4, lsr r6
    392c:	0009d400 	andeq	sp, r9, r0, lsl #8
    3930:	0009d200 	andeq	sp, r9, r0, lsl #4
    3934:	08c01c00 	stmiaeq	r0, {sl, fp, ip}^
    3938:	08d80800 	ldmeq	r8, {fp}^
    393c:	0bbc0800 	bleq	fef05944 <_estack+0xdef0470c>
    3940:	761d0000 	ldrvc	r0, [sp], -r0
    3944:	01006c61 	tsteq	r0, r1, ror #24
    3948:	c6030d0a 	strgt	r0, [r3], -sl, lsl #26
    394c:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    3950:	e7000009 	str	r0, [r0, -r9]
    3954:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    3958:	0000457d 	andeq	r4, r0, sp, ror r5
    395c:	080008c2 	stmdaeq	r0, {r1, r6, r7, fp}
    3960:	08c20000 	stmiaeq	r2, {}^	; <UNPREDICTABLE>
    3964:	08ca0800 	stmiaeq	sl, {fp}^
    3968:	0a010800 	beq	45970 <_Min_Heap_Size+0x45170>
    396c:	0b7c030d 	bleq	1f045a8 <_Min_Heap_Size+0x1f03da8>
    3970:	901f0000 	andsls	r0, pc, r0
    3974:	02000045 	andeq	r0, r0, #69	; 0x45
    3978:	fc00000a 	stc2	0, cr0, [r0], {10}
    397c:	20000009 	andcs	r0, r0, r9
    3980:	0000459d 	muleq	r0, sp, r5
    3984:	00000a31 	andeq	r0, r0, r1, lsr sl
    3988:	00000a2f 	andeq	r0, r0, pc, lsr #20
    398c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3990:	08ce0000 	stmiaeq	lr, {}^	; <UNPREDICTABLE>
    3994:	00010800 	andeq	r0, r1, r0, lsl #16
    3998:	080008ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, fp}
    399c:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
    39a0:	030d0a01 	movweq	r0, #55809	; 0xda01
    39a4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    39a8:	000a4800 	andeq	r4, sl, r0, lsl #16
    39ac:	000a4400 	andeq	r4, sl, r0, lsl #8
    39b0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2ab8 <_Min_Heap_Size+0x22b8>
    39b4:	0a6a0000 	beq	1a839bc <_Min_Heap_Size+0x1a831bc>
    39b8:	0a680000 	beq	1a039c0 <_Min_Heap_Size+0x1a031c0>
    39bc:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    39c0:	7f000045 	svcvc	0x00000045
    39c4:	7d00000a 	stcvc	0, cr0, [r0, #-40]	; 0xffffffd8
    39c8:	0000000a 	andeq	r0, r0, sl
    39cc:	08d81c00 	ldmeq	r8, {sl, fp, ip}^
    39d0:	08f00800 	ldmeq	r0!, {fp}^
    39d4:	0c540800 	mrrceq	8, 0, r0, r4, cr0
    39d8:	761d0000 	ldrvc	r0, [sp], -r0
    39dc:	01006c61 	tsteq	r0, r1, ror #24
    39e0:	c6030d0b 	strgt	r0, [r3], -fp, lsl #26
    39e4:	94000000 	strls	r0, [r0], #-0
    39e8:	9200000a 	andls	r0, r0, #10
    39ec:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    39f0:	0000457d 	andeq	r4, r0, sp, ror r5
    39f4:	080008da 	stmdaeq	r0, {r1, r3, r4, r6, r7, fp}
    39f8:	08da0000 	ldmeq	sl, {}^	; <UNPREDICTABLE>
    39fc:	08e20800 	stmiaeq	r2!, {fp}^
    3a00:	0b010800 	bleq	45a08 <_Min_Heap_Size+0x45208>
    3a04:	0c14030d 	ldceq	3, cr0, [r4], {13}
    3a08:	901f0000 	andsls	r0, pc, r0
    3a0c:	ad000045 	stcge	0, cr0, [r0, #-276]	; 0xfffffeec
    3a10:	a700000a 	strge	r0, [r0, -sl]
    3a14:	2000000a 	andcs	r0, r0, sl
    3a18:	0000459d 	muleq	r0, sp, r5
    3a1c:	00000adc 	ldrdeq	r0, [r0], -ip
    3a20:	00000ada 	ldrdeq	r0, [r0], -sl
    3a24:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3a28:	08e60000 	stmiaeq	r6!, {}^	; <UNPREDICTABLE>
    3a2c:	00010800 	andeq	r0, r1, r0, lsl #16
    3a30:	080008e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp}
    3a34:	080008ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp}
    3a38:	030d0b01 	movweq	r0, #56065	; 0xdb01
    3a3c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3a40:	000af300 	andeq	pc, sl, r0, lsl #6
    3a44:	000aef00 	andeq	lr, sl, r0, lsl #30
    3a48:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2b50 <_Min_Heap_Size+0x2350>
    3a4c:	0b150000 	bleq	543a54 <_Min_Heap_Size+0x543254>
    3a50:	0b130000 	bleq	4c3a58 <_Min_Heap_Size+0x4c3258>
    3a54:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3a58:	2a000045 	bcs	3b74 <_Min_Heap_Size+0x3374>
    3a5c:	2800000b 	stmdacs	r0, {r0, r1, r3}
    3a60:	0000000b 	andeq	r0, r0, fp
    3a64:	09022600 	stmdbeq	r2, {r9, sl, sp}
    3a68:	091c0800 	ldmdbeq	ip, {fp}
    3a6c:	761d0800 	ldrvc	r0, [sp], -r0, lsl #16
    3a70:	01006c61 	tsteq	r0, r1, ror #24
    3a74:	c6050d10 			; <UNDEFINED> instruction: 0xc6050d10
    3a78:	3f000000 	svccc	0x00000000
    3a7c:	3d00000b 	stccc	0, cr0, [r0, #-44]	; 0xffffffd4
    3a80:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    3a84:	0000457d 	andeq	r4, r0, sp, ror r5
    3a88:	08000904 	stmdaeq	r0, {r2, r8, fp}
    3a8c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    3a90:	090c0800 	stmdbeq	ip, {fp}
    3a94:	10010800 	andne	r0, r1, r0, lsl #16
    3a98:	0ca8050d 	cfstr32eq	mvfx0, [r8], #52	; 0x34
    3a9c:	901f0000 	andsls	r0, pc, r0
    3aa0:	58000045 	stmdapl	r0, {r0, r2, r6}
    3aa4:	5200000b 	andpl	r0, r0, #11
    3aa8:	2000000b 	andcs	r0, r0, fp
    3aac:	0000459d 	muleq	r0, sp, r5
    3ab0:	00000b87 	andeq	r0, r0, r7, lsl #23
    3ab4:	00000b85 	andeq	r0, r0, r5, lsl #23
    3ab8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3abc:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    3ac0:	00010800 	andeq	r0, r1, r0, lsl #16
    3ac4:	08000910 	stmdaeq	r0, {r4, r8, fp}
    3ac8:	08000916 	stmdaeq	r0, {r1, r2, r4, r8, fp}
    3acc:	050d1001 	streq	r1, [sp, #-1]
    3ad0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3ad4:	000b9e00 	andeq	r9, fp, r0, lsl #28
    3ad8:	000b9a00 	andeq	r9, fp, r0, lsl #20
    3adc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2be4 <_Min_Heap_Size+0x23e4>
    3ae0:	0bc00000 	bleq	ff003ae8 <_estack+0xdf0028b0>
    3ae4:	0bbe0000 	bleq	fef83aec <_estack+0xdef828b4>
    3ae8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3aec:	d5000045 	strle	r0, [r0, #-69]	; 0xffffffbb
    3af0:	d300000b 	movwle	r0, #11
    3af4:	0000000b 	andeq	r0, r0, fp
    3af8:	61250000 			; <UNDEFINED> instruction: 0x61250000
    3afc:	01000011 	tsteq	r0, r1, lsl r0
    3b00:	010d0cf9 	strdeq	r0, [sp, -r9]
	...
    3b0c:	01007d02 	tsteq	r0, r2, lsl #26
    3b10:	00000dad 	andeq	r0, r0, sp, lsr #27
    3b14:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    3b18:	0cf90100 	ldfeqe	f0, [r9]
    3b1c:	00079634 	andeq	r9, r7, r4, lsr r6
    3b20:	000bea00 	andeq	lr, fp, r0, lsl #20
    3b24:	000be800 	andeq	lr, fp, r0, lsl #16
    3b28:	00002600 	andeq	r2, r0, r0, lsl #12
    3b2c:	00000000 	andeq	r0, r0, r0
    3b30:	761d0000 	ldrvc	r0, [sp], -r0
    3b34:	01006c61 	tsteq	r0, r1, ror #24
    3b38:	c6030cfc 			; <UNDEFINED> instruction: 0xc6030cfc
    3b3c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    3b40:	fd00000b 	stc2	0, cr0, [r0, #-44]	; 0xffffffd4
    3b44:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    3b48:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    3b58:	fc010000 	stc2	0, cr0, [r1], {-0}
    3b5c:	0d6c030c 	stcleq	3, cr0, [ip, #-48]!	; 0xffffffd0
    3b60:	901f0000 	andsls	r0, pc, r0
    3b64:	18000045 	stmdane	r0, {r0, r2, r6}
    3b68:	1200000c 	andne	r0, r0, #12
    3b6c:	2000000c 	andcs	r0, r0, ip
    3b70:	0000459d 	muleq	r0, sp, r5
    3b74:	00000c47 	andeq	r0, r0, r7, asr #24
    3b78:	00000c45 	andeq	r0, r0, r5, asr #24
    3b7c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3b80:	00000000 	andeq	r0, r0, r0
    3b84:	00010000 	andeq	r0, r1, r0
	...
    3b90:	030cfc01 	movweq	pc, #52225	; 0xcc01	; <UNPREDICTABLE>
    3b94:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3b98:	000c5e00 	andeq	r5, ip, r0, lsl #28
    3b9c:	000c5a00 	andeq	r5, ip, r0, lsl #20
    3ba0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2ca8 <_Min_Heap_Size+0x24a8>
    3ba4:	0c800000 	stceq	0, cr0, [r0], {0}
    3ba8:	0c7e0000 	ldcleq	0, cr0, [lr], #-0
    3bac:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3bb0:	95000045 	strls	r0, [r0, #-69]	; 0xffffffbb
    3bb4:	9300000c 	movwls	r0, #12
    3bb8:	0000000c 	andeq	r0, r0, ip
    3bbc:	01270000 			; <UNDEFINED> instruction: 0x01270000
    3bc0:	00001477 	andeq	r1, r0, r7, ror r4
    3bc4:	130cc701 	movwne	ip, #50945	; 0xc701
    3bc8:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    3bd4:	000ca800 	andeq	sl, ip, r0, lsl #16
    3bd8:	10190100 	andsne	r0, r9, r0, lsl #2
    3bdc:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    3be0:	01000014 	tsteq	r0, r4, lsl r0
    3be4:	963e0cc7 	ldrtls	r0, [lr], -r7, asr #25
    3be8:	e6000007 	str	r0, [r0], -r7
    3bec:	e000000c 	and	r0, r0, ip
    3bf0:	1600000c 	strne	r0, [r0], -ip
    3bf4:	00001148 	andeq	r1, r0, r8, asr #2
    3bf8:	4e0cc701 	cdpmi	7, 0, cr12, cr12, cr1, {0}
    3bfc:	00000682 	andeq	r0, r0, r2, lsl #13
    3c00:	00000d18 	andeq	r0, r0, r8, lsl sp
    3c04:	00000d12 	andeq	r0, r0, r2, lsl sp
    3c08:	0024dc16 	eoreq	sp, r4, r6, lsl ip
    3c0c:	0cc70100 	stfeqe	f0, [r7], {0}
    3c10:	0000b05e 	andeq	fp, r0, lr, asr r0
    3c14:	000d4c00 	andeq	r4, sp, r0, lsl #24
    3c18:	000d4400 	andeq	r4, sp, r0, lsl #8
    3c1c:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    3c20:	c9010070 	stmdbgt	r1, {r4, r5, r6}
    3c24:	10190d0c 	andsne	r0, r9, ip, lsl #26
    3c28:	0d870000 	stceq	0, cr0, [r7]
    3c2c:	0d850000 	stceq	0, cr0, [r5]
    3c30:	001c0000 	andseq	r0, ip, r0
    3c34:	00000000 	andeq	r0, r0, r0
    3c38:	3f000000 	svccc	0x00000000
    3c3c:	2200000e 	andcs	r0, r0, #14
    3c40:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    3c44:	030ce201 	movweq	lr, #49665	; 0xc201
    3c48:	000000d2 	ldrdeq	r0, [r0], -r2
    3c4c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    3c50:	0000001c 	andeq	r0, r0, ip, lsl r0
    3c54:	00000000 	andeq	r0, r0, r0
    3c58:	000ed700 	andeq	sp, lr, r0, lsl #14
    3c5c:	61761d00 	cmnvs	r6, r0, lsl #26
    3c60:	e701006c 	str	r0, [r1, -ip, rrx]
    3c64:	00c6050c 	sbceq	r0, r6, ip, lsl #10
    3c68:	0da10000 	stceq	0, cr0, [r1]
    3c6c:	0d9f0000 	ldceq	0, cr0, [pc]	; 3c74 <_Min_Heap_Size+0x3474>
    3c70:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3c74:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3c84:	0ce70100 	stfeqe	f0, [r7]
    3c88:	000e9705 	andeq	r9, lr, r5, lsl #14
    3c8c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3c90:	0dba0000 	ldceq	0, cr0, [sl]
    3c94:	0db40000 	ldceq	0, cr0, [r4]
    3c98:	9d200000 	stcls	0, cr0, [r0, #-0]
    3c9c:	e9000045 	stmdb	r0, {r0, r2, r6}
    3ca0:	e700000d 	str	r0, [r0, -sp]
    3ca4:	0000000d 	andeq	r0, r0, sp
    3ca8:	00453c21 	subeq	r3, r5, r1, lsr #24
    3cac:	00000000 	andeq	r0, r0, r0
    3cb0:	00000100 	andeq	r0, r0, r0, lsl #2
    3cb4:	00000000 	andeq	r0, r0, r0
    3cb8:	01000000 	mrseq	r0, (UNDEF: 0)
    3cbc:	1f050ce7 	svcne	0x00050ce7
    3cc0:	0000455c 	andeq	r4, r0, ip, asr r5
    3cc4:	00000e00 	andeq	r0, r0, r0, lsl #28
    3cc8:	00000dfc 	strdeq	r0, [r0], -ip
    3ccc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3cd0:	000e2200 	andeq	r2, lr, r0, lsl #4
    3cd4:	000e2000 	andeq	r2, lr, r0
    3cd8:	45692000 	strbmi	r2, [r9, #-0]!
    3cdc:	0e370000 	cdpeq	0, 3, cr0, cr7, cr0, {0}
    3ce0:	0e350000 	cdpeq	0, 3, cr0, cr5, cr0, {0}
    3ce4:	00000000 	andeq	r0, r0, r0
    3ce8:	0000001c 	andeq	r0, r0, ip, lsl r0
    3cec:	00000000 	andeq	r0, r0, r0
    3cf0:	000f6f00 	andeq	r6, pc, r0, lsl #30
    3cf4:	61761d00 	cmnvs	r6, r0, lsl #26
    3cf8:	eb01006c 	bl	43eb0 <_Min_Heap_Size+0x436b0>
    3cfc:	00c6030c 	sbceq	r0, r6, ip, lsl #6
    3d00:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
    3d04:	0e4a0000 	cdpeq	0, 4, cr0, cr10, cr0, {0}
    3d08:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3d0c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3d1c:	0ceb0100 	stfeqe	f0, [fp]
    3d20:	000f2f03 	andeq	r2, pc, r3, lsl #30
    3d24:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3d28:	0e650000 	cdpeq	0, 6, cr0, cr5, cr0, {0}
    3d2c:	0e5f0000 	cdpeq	0, 5, cr0, cr15, cr0, {0}
    3d30:	9d200000 	stcls	0, cr0, [r0, #-0]
    3d34:	94000045 	strls	r0, [r0], #-69	; 0xffffffbb
    3d38:	9200000e 	andls	r0, r0, #14
    3d3c:	0000000e 	andeq	r0, r0, lr
    3d40:	00453c21 	subeq	r3, r5, r1, lsr #24
    3d44:	00000000 	andeq	r0, r0, r0
    3d48:	00000100 	andeq	r0, r0, r0, lsl #2
    3d4c:	00000000 	andeq	r0, r0, r0
    3d50:	01000000 	mrseq	r0, (UNDEF: 0)
    3d54:	1f030ceb 	svcne	0x00030ceb
    3d58:	0000455c 	andeq	r4, r0, ip, asr r5
    3d5c:	00000eab 	andeq	r0, r0, fp, lsr #29
    3d60:	00000ea7 	andeq	r0, r0, r7, lsr #29
    3d64:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3d68:	000ecd00 	andeq	ip, lr, r0, lsl #26
    3d6c:	000ecb00 	andeq	ip, lr, r0, lsl #22
    3d70:	45692000 	strbmi	r2, [r9, #-0]!
    3d74:	0ee20000 	cdpeq	0, 14, cr0, cr2, cr0, {0}
    3d78:	0ee00000 	cdpeq	0, 14, cr0, cr0, cr0, {0}
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	0000001c 	andeq	r0, r0, ip, lsl r0
    3d84:	00000000 	andeq	r0, r0, r0
    3d88:	00100700 	andseq	r0, r0, r0, lsl #14
    3d8c:	61761d00 	cmnvs	r6, r0, lsl #26
    3d90:	ef01006c 	svc	0x0001006c
    3d94:	00c6030c 	sbceq	r0, r6, ip, lsl #6
    3d98:	0ef70000 	cdpeq	0, 15, cr0, cr7, cr0, {0}
    3d9c:	0ef50000 	cdpeq	0, 15, cr0, cr5, cr0, {0}
    3da0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3da4:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3db4:	0cef0100 	stfeqe	f0, [pc]	; 3dbc <_Min_Heap_Size+0x35bc>
    3db8:	000fc703 	andeq	ip, pc, r3, lsl #14
    3dbc:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3dc0:	0f100000 	svceq	0x00100000
    3dc4:	0f0a0000 	svceq	0x000a0000
    3dc8:	9d200000 	stcls	0, cr0, [r0, #-0]
    3dcc:	3f000045 	svccc	0x00000045
    3dd0:	3d00000f 	stccc	0, cr0, [r0, #-60]	; 0xffffffc4
    3dd4:	0000000f 	andeq	r0, r0, pc
    3dd8:	00453c21 	subeq	r3, r5, r1, lsr #24
    3ddc:	00000000 	andeq	r0, r0, r0
    3de0:	00000100 	andeq	r0, r0, r0, lsl #2
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	01000000 	mrseq	r0, (UNDEF: 0)
    3dec:	1f030cef 	svcne	0x00030cef
    3df0:	0000455c 	andeq	r4, r0, ip, asr r5
    3df4:	00000f56 	andeq	r0, r0, r6, asr pc
    3df8:	00000f52 	andeq	r0, r0, r2, asr pc
    3dfc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3e00:	000f7800 	andeq	r7, pc, r0, lsl #16
    3e04:	000f7600 	andeq	r7, pc, r0, lsl #12
    3e08:	45692000 	strbmi	r2, [r9, #-0]!
    3e0c:	0f8d0000 	svceq	0x008d0000
    3e10:	0f8b0000 	svceq	0x008b0000
    3e14:	00000000 	andeq	r0, r0, r0
    3e18:	00000023 	andeq	r0, r0, r3, lsr #32
    3e1c:	0045e300 	subeq	lr, r5, r0, lsl #6
    3e20:	52011900 	andpl	r1, r1, #0, 18
    3e24:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    3e28:	04110000 	ldreq	r0, [r1], #-0
    3e2c:	000000c6 	andeq	r0, r0, r6, asr #1
    3e30:	12530128 	subsne	r0, r3, #40, 2
    3e34:	a4010000 	strge	r0, [r1], #-0
    3e38:	3a01130c 	bcc	48a70 <_Min_Heap_Size+0x48270>
    3e3c:	00000002 	andeq	r0, r0, r2
    3e40:	00000000 	andeq	r0, r0, r0
    3e44:	02000000 	andeq	r0, r0, #0
    3e48:	7801007d 	stmdavc	r1, {r0, r2, r3, r4, r5, r6}
    3e4c:	16000010 			; <UNDEFINED> instruction: 0x16000010
    3e50:	000014f7 	strdeq	r1, [r0], -r7
    3e54:	3d0ca401 	cfstrscc	mvf10, [ip, #-4]
    3e58:	00000796 	muleq	r0, r6, r7
    3e5c:	00000fa4 	andeq	r0, r0, r4, lsr #31
    3e60:	00000fa0 	andeq	r0, r0, r0, lsr #31
    3e64:	00114829 	andseq	r4, r1, r9, lsr #16
    3e68:	0ca40100 	stfeqs	f0, [r4]
    3e6c:	0006824d 	andeq	r8, r6, sp, asr #4
    3e70:	16510100 	ldrbne	r0, [r1], -r0, lsl #2
    3e74:	000024dc 	ldrdeq	r2, [r0], -ip
    3e78:	5d0ca401 	cfstrspl	mvf10, [ip, #-4]
    3e7c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    3e80:	00000fcb 	andeq	r0, r0, fp, asr #31
    3e84:	00000fc5 	andeq	r0, r0, r5, asr #31
    3e88:	14181b00 	ldrne	r1, [r8], #-2816	; 0xfffff500
    3e8c:	71010000 	mrsvc	r0, (UNDEF: 1)
    3e90:	3a011a0c 	bcc	4a6c8 <_Min_Heap_Size+0x49ec8>
    3e94:	f0000002 			; <UNDEFINED> instruction: 0xf0000002
    3e98:	7a08000a 	bvc	203ec8 <_Min_Heap_Size+0x2036c8>
    3e9c:	f808000b 			; <UNDEFINED> instruction: 0xf808000b
    3ea0:	0100000f 	tsteq	r0, pc
    3ea4:	00001138 	andeq	r1, r0, r8, lsr r1
    3ea8:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    3eac:	0c710100 	ldfeqe	f0, [r1], #-0
    3eb0:	0007964a 	andeq	r9, r7, sl, asr #12
    3eb4:	00104000 	andseq	r4, r0, r0
    3eb8:	00103c00 	andseq	r3, r0, r0, lsl #24
    3ebc:	11d91600 	bicsne	r1, r9, r0, lsl #12
    3ec0:	71010000 	mrsvc	r0, (UNDEF: 1)
    3ec4:	00c65a0c 	sbceq	r5, r6, ip, lsl #20
    3ec8:	10620000 	rsbne	r0, r2, r0
    3ecc:	105e0000 	subsne	r0, lr, r0
    3ed0:	c5160000 	ldrgt	r0, [r6, #-0]
    3ed4:	01000010 	tsteq	r0, r0, lsl r0
    3ed8:	006b0c71 	rsbeq	r0, fp, r1, ror ip
    3edc:	84000002 	strhi	r0, [r0], #-2
    3ee0:	80000010 	andhi	r0, r0, r0, lsl r0
    3ee4:	16000010 			; <UNDEFINED> instruction: 0x16000010
    3ee8:	00001206 	andeq	r1, r0, r6, lsl #4
    3eec:	3f0c7201 	svccc	0x000c7201
    3ef0:	000000c6 	andeq	r0, r0, r6, asr #1
    3ef4:	000010a9 	andeq	r1, r0, r9, lsr #1
    3ef8:	000010a5 	andeq	r1, r0, r5, lsr #1
    3efc:	00142c16 	andseq	r2, r4, r6, lsl ip
    3f00:	0c720100 	ldfeqe	f0, [r2], #-0
    3f04:	0000c653 	andeq	ip, r0, r3, asr r6
    3f08:	0010cb00 	andseq	ip, r0, r0, lsl #22
    3f0c:	0010c700 	andseq	ip, r0, r0, lsl #14
    3f10:	0b4a1c00 	bleq	128af18 <_Min_Heap_Size+0x128a718>
    3f14:	0b580800 	bleq	1605f1c <_Min_Heap_Size+0x160571c>
    3f18:	111e0800 	tstne	lr, r0, lsl #16
    3f1c:	b6220000 	strtlt	r0, [r2], -r0
    3f20:	01000001 	tsteq	r0, r1
    3f24:	d20b0c85 	andle	r0, fp, #34048	; 0x8500
    3f28:	02000000 	andeq	r0, r0, #0
    3f2c:	1a005c91 	bne	1b178 <_Min_Heap_Size+0x1a978>
    3f30:	08000b22 	stmdaeq	r0, {r1, r5, r8, r9, fp}
    3f34:	000045f2 	strdeq	r4, [r0], -r2
    3f38:	000b5e23 	andeq	r5, fp, r3, lsr #28
    3f3c:	000af508 	andeq	pc, sl, r8, lsl #10
    3f40:	50011900 	andpl	r1, r1, r0, lsl #18
    3f44:	00007502 	andeq	r7, r0, r2, lsl #10
    3f48:	138d1500 	orrne	r1, sp, #0, 10
    3f4c:	47010000 	strmi	r0, [r1, -r0]
    3f50:	00010d0c 	andeq	r0, r1, ip, lsl #26
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	eb000000 	bl	3f60 <_Min_Heap_Size+0x3760>
    3f5c:	01000010 	tsteq	r0, r0, lsl r0
    3f60:	000011cb 	andeq	r1, r0, fp, asr #3
    3f64:	00137f16 	andseq	r7, r3, r6, lsl pc
    3f68:	0c470100 	stfeqe	f0, [r7], {-0}
    3f6c:	0006882e 	andeq	r8, r6, lr, lsr #16
    3f70:	00111300 	andseq	r1, r1, r0, lsl #6
    3f74:	00110b00 	andseq	r0, r1, r0, lsl #22
    3f78:	15931700 	ldrne	r1, [r3, #1792]	; 0x700
    3f7c:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    3f80:	00c60c0c 	sbceq	r0, r6, ip, lsl #24
    3f84:	11570000 	cmpne	r7, r0
    3f88:	114d0000 	mrsne	r0, (UNDEF: 77)
    3f8c:	f7170000 			; <UNDEFINED> instruction: 0xf7170000
    3f90:	01000014 	tsteq	r0, r4, lsl r0
    3f94:	96170c4a 	ldrls	r0, [r7], -sl, asr #24
    3f98:	bb000007 	bllt	3fbc <_Min_Heap_Size+0x37bc>
    3f9c:	b9000011 	stmdblt	r0, {r0, r4}
    3fa0:	18000011 	stmdane	r0, {r0, r4}
    3fa4:	00000000 	andeq	r0, r0, r0
    3fa8:	00001b4a 	andeq	r1, r0, sl, asr #22
    3fac:	000011a6 	andeq	r1, r0, r6, lsr #3
    3fb0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3fb4:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    3fb8:	00000000 	andeq	r0, r0, r0
    3fbc:	00000ce9 	andeq	r0, r0, r9, ror #25
    3fc0:	000011ba 			; <UNDEFINED> instruction: 0x000011ba
    3fc4:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3fc8:	23000074 	movwcs	r0, #116	; 0x74
    3fcc:	00000000 	andeq	r0, r0, r0
    3fd0:	00000af5 	strdeq	r0, [r0], -r5
    3fd4:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3fd8:	00000074 	andeq	r0, r0, r4, ror r0
    3fdc:	0013b915 	andseq	fp, r3, r5, lsl r9
    3fe0:	0c200100 	stfeqs	f0, [r0], #-0
    3fe4:	0000010d 	andeq	r0, r0, sp, lsl #2
    3fe8:	00000000 	andeq	r0, r0, r0
    3fec:	11ce0000 	bicne	r0, lr, r0
    3ff0:	23010000 	movwcs	r0, #4096	; 0x1000
    3ff4:	16000012 			; <UNDEFINED> instruction: 0x16000012
    3ff8:	0000137f 	andeq	r1, r0, pc, ror r3
    3ffc:	330c2001 	movwcc	r2, #49153	; 0xc001
    4000:	00000688 	andeq	r0, r0, r8, lsl #13
    4004:	000011f2 	strdeq	r1, [r0], -r2
    4008:	000011ee 	andeq	r1, r0, lr, ror #3
    400c:	0014f717 	andseq	pc, r4, r7, lsl r7	; <UNPREDICTABLE>
    4010:	0c220100 	stfeqs	f0, [r2], #-0
    4014:	00079617 	andeq	r9, r7, r7, lsl r6
    4018:	00121700 	andseq	r1, r2, r0, lsl #14
    401c:	00121300 	andseq	r1, r2, r0, lsl #6
    4020:	00001a00 	andeq	r1, r0, r0, lsl #20
    4024:	1b750000 	blne	1d4402c <_Min_Heap_Size+0x1d4382c>
    4028:	001a0000 	andseq	r0, sl, r0
    402c:	8f000000 	svchi	0x00000000
    4030:	0000001a 	andeq	r0, r0, sl, lsl r0
    4034:	00117f15 	andseq	r7, r1, r5, lsl pc
    4038:	0be20100 	bleq	ff884440 <_estack+0xdf883208>
    403c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4040:	00000000 	andeq	r0, r0, r0
    4044:	12350000 	eorsne	r0, r5, #0
    4048:	db010000 	blle	44050 <_Min_Heap_Size+0x43850>
    404c:	16000014 			; <UNDEFINED> instruction: 0x16000014
    4050:	0000137f 	andeq	r1, r0, pc, ror r3
    4054:	340be201 	strcc	lr, [fp], #-513	; 0xfffffdff
    4058:	00000688 	andeq	r0, r0, r8, lsl #13
    405c:	0000125b 	andeq	r1, r0, fp, asr r2
    4060:	00001255 	andeq	r1, r0, r5, asr r2
    4064:	0014f717 	andseq	pc, r4, r7, lsl r7	; <UNPREDICTABLE>
    4068:	0be40100 	bleq	ff904470 <_estack+0xdf903238>
    406c:	00079617 	andeq	r9, r7, r7, lsl r6
    4070:	00128b00 	andseq	r8, r2, r0, lsl #22
    4074:	00128700 	andseq	r8, r2, r0, lsl #14
    4078:	00001c00 	andeq	r1, r0, r0, lsl #24
    407c:	00000000 	andeq	r0, r0, r0
    4080:	13000000 	movwne	r0, #0
    4084:	761d0000 	ldrvc	r0, [sp], -r0
    4088:	01006c61 	tsteq	r0, r1, ror #24
    408c:	c6050bec 	strgt	r0, [r5], -ip, ror #23
    4090:	ab000000 	blge	4098 <_Min_Heap_Size+0x3898>
    4094:	a9000012 	stmdbge	r0, {r1, r4}
    4098:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    409c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    40ac:	ec010000 	stc	0, cr0, [r1], {-0}
    40b0:	12c0050b 	sbcne	r0, r0, #46137344	; 0x2c00000
    40b4:	901f0000 	andsls	r0, pc, r0
    40b8:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    40bc:	be000012 	mcrlt	0, 0, r0, cr0, cr2, {0}
    40c0:	20000012 	andcs	r0, r0, r2, lsl r0
    40c4:	0000459d 	muleq	r0, sp, r5
    40c8:	000012f3 	strdeq	r1, [r0], -r3
    40cc:	000012f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    40d0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    40d4:	00000000 	andeq	r0, r0, r0
    40d8:	00010000 	andeq	r0, r1, r0
	...
    40e4:	050bec01 	streq	lr, [fp, #-3073]	; 0xfffff3ff
    40e8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    40ec:	00130a00 	andseq	r0, r3, r0, lsl #20
    40f0:	00130600 	andseq	r0, r3, r0, lsl #12
    40f4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 31fc <_Min_Heap_Size+0x29fc>
    40f8:	132c0000 			; <UNDEFINED> instruction: 0x132c0000
    40fc:	132a0000 			; <UNDEFINED> instruction: 0x132a0000
    4100:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4104:	41000045 	tstmi	r0, r5, asr #32
    4108:	3f000013 	svccc	0x00000013
    410c:	00000013 	andeq	r0, r0, r3, lsl r0
    4110:	00001c00 	andeq	r1, r0, r0, lsl #24
    4114:	00000000 	andeq	r0, r0, r0
    4118:	13980000 	orrsne	r0, r8, #0
    411c:	761d0000 	ldrvc	r0, [sp], -r0
    4120:	01006c61 	tsteq	r0, r1, ror #24
    4124:	c6050bed 	strgt	r0, [r5], -sp, ror #23
    4128:	56000000 	strpl	r0, [r0], -r0
    412c:	54000013 	strpl	r0, [r0], #-19	; 0xffffffed
    4130:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    4134:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4144:	ed010000 	stc	0, cr0, [r1, #-0]
    4148:	1358050b 	cmpne	r8, #46137344	; 0x2c00000
    414c:	901f0000 	andsls	r0, pc, r0
    4150:	6f000045 	svcvs	0x00000045
    4154:	69000013 	stmdbvs	r0, {r0, r1, r4}
    4158:	20000013 	andcs	r0, r0, r3, lsl r0
    415c:	0000459d 	muleq	r0, sp, r5
    4160:	0000139e 	muleq	r0, lr, r3
    4164:	0000139c 	muleq	r0, ip, r3
    4168:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    416c:	00000000 	andeq	r0, r0, r0
    4170:	00010000 	andeq	r0, r1, r0
	...
    417c:	050bed01 	streq	lr, [fp, #-3329]	; 0xfffff2ff
    4180:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4184:	0013b500 	andseq	fp, r3, r0, lsl #10
    4188:	0013b100 	andseq	fp, r3, r0, lsl #2
    418c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3294 <_Min_Heap_Size+0x2a94>
    4190:	13d70000 	bicsne	r0, r7, #0
    4194:	13d50000 	bicsne	r0, r5, #0
    4198:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    419c:	ec000045 	stc	0, cr0, [r0], {69}	; 0x45
    41a0:	ea000013 	b	41f4 <_Min_Heap_Size+0x39f4>
    41a4:	00000013 	andeq	r0, r0, r3, lsl r0
    41a8:	00001c00 	andeq	r1, r0, r0, lsl #24
    41ac:	00000000 	andeq	r0, r0, r0
    41b0:	14300000 	ldrtne	r0, [r0], #-0
    41b4:	761d0000 	ldrvc	r0, [sp], -r0
    41b8:	01006c61 	tsteq	r0, r1, ror #24
    41bc:	c6050bf1 			; <UNDEFINED> instruction: 0xc6050bf1
    41c0:	01000000 	mrseq	r0, (UNDEF: 0)
    41c4:	ff000014 			; <UNDEFINED> instruction: 0xff000014
    41c8:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    41cc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    41dc:	f1010000 	setend	le
    41e0:	13f0050b 	mvnsne	r0, #46137344	; 0x2c00000
    41e4:	901f0000 	andsls	r0, pc, r0
    41e8:	1a000045 	bne	4304 <_Min_Heap_Size+0x3b04>
    41ec:	14000014 	strne	r0, [r0], #-20	; 0xffffffec
    41f0:	20000014 	andcs	r0, r0, r4, lsl r0
    41f4:	0000459d 	muleq	r0, sp, r5
    41f8:	00001449 	andeq	r1, r0, r9, asr #8
    41fc:	00001447 	andeq	r1, r0, r7, asr #8
    4200:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4204:	00000000 	andeq	r0, r0, r0
    4208:	00010000 	andeq	r0, r1, r0
	...
    4214:	050bf101 	streq	pc, [fp, #-257]	; 0xfffffeff
    4218:	00455c1f 	subeq	r5, r5, pc, lsl ip
    421c:	00146000 	andseq	r6, r4, r0
    4220:	00145c00 	andseq	r5, r4, r0, lsl #24
    4224:	454f1f00 	strbmi	r1, [pc, #-3840]	; 332c <_Min_Heap_Size+0x2b2c>
    4228:	14820000 	strne	r0, [r2], #0
    422c:	14800000 	strne	r0, [r0], #0
    4230:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4234:	97000045 	strls	r0, [r0, -r5, asr #32]
    4238:	95000014 	strls	r0, [r0, #-20]	; 0xffffffec
    423c:	00000014 	andeq	r0, r0, r4, lsl r0
    4240:	00001c00 	andeq	r1, r0, r0, lsl #24
    4244:	00000000 	andeq	r0, r0, r0
    4248:	14c80000 	strbne	r0, [r8], #0
    424c:	761d0000 	ldrvc	r0, [sp], -r0
    4250:	01006c61 	tsteq	r0, r1, ror #24
    4254:	c6070bf9 			; <UNDEFINED> instruction: 0xc6070bf9
    4258:	ac000000 	stcge	0, cr0, [r0], {-0}
    425c:	aa000014 	bge	42b4 <_Min_Heap_Size+0x3ab4>
    4260:	1e000014 	mcrne	0, 0, r0, cr0, cr4, {0}
    4264:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4274:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    4278:	1488070b 	strne	r0, [r8], #1803	; 0x70b
    427c:	901f0000 	andsls	r0, pc, r0
    4280:	c5000045 	strgt	r0, [r0, #-69]	; 0xffffffbb
    4284:	bf000014 	svclt	0x00000014
    4288:	20000014 	andcs	r0, r0, r4, lsl r0
    428c:	0000459d 	muleq	r0, sp, r5
    4290:	000014f4 	strdeq	r1, [r0], -r4
    4294:	000014f2 	strdeq	r1, [r0], -r2
    4298:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    429c:	00000000 	andeq	r0, r0, r0
    42a0:	00010000 	andeq	r0, r1, r0
	...
    42ac:	070bf901 	streq	pc, [fp, -r1, lsl #18]
    42b0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    42b4:	00150b00 	andseq	r0, r5, r0, lsl #22
    42b8:	00150700 	andseq	r0, r5, r0, lsl #14
    42bc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 33c4 <_Min_Heap_Size+0x2bc4>
    42c0:	152d0000 	strne	r0, [sp, #-0]!
    42c4:	152b0000 	strne	r0, [fp, #-0]!
    42c8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    42cc:	42000045 	andmi	r0, r0, #69	; 0x45
    42d0:	40000015 	andmi	r0, r0, r5, lsl r0
    42d4:	00000015 	andeq	r0, r0, r5, lsl r0
    42d8:	00001a00 	andeq	r1, r0, r0, lsl #20
    42dc:	1ba00000 	blne	fe8042e4 <_estack+0xde8030ac>
    42e0:	001a0000 	andseq	r0, sl, r0
    42e4:	8f000000 	svchi	0x00000000
    42e8:	0000001a 	andeq	r0, r0, sl, lsl r0
    42ec:	00119315 	andseq	r9, r1, r5, lsl r3
    42f0:	0bcf0100 	bleq	ff3c46f8 <_estack+0xdf3c34c0>
    42f4:	0000010d 	andeq	r0, r0, sp, lsl #2
    42f8:	00000000 	andeq	r0, r0, r0
    42fc:	15550000 	ldrbne	r0, [r5, #-0]
    4300:	2a010000 	bcs	44308 <_Min_Heap_Size+0x43b08>
    4304:	16000015 			; <UNDEFINED> instruction: 0x16000015
    4308:	0000137f 	andeq	r1, r0, pc, ror r3
    430c:	330bcf01 	movwcc	ip, #48897	; 0xbf01
    4310:	00000688 	andeq	r0, r0, r8, lsl #13
    4314:	00001579 	andeq	r1, r0, r9, ror r5
    4318:	00001575 	andeq	r1, r0, r5, ror r5
    431c:	0014f717 	andseq	pc, r4, r7, lsl r7	; <UNPREDICTABLE>
    4320:	0bd10100 	bleq	ff444728 <_estack+0xdf4434f0>
    4324:	00079617 	andeq	r9, r7, r7, lsl r6
    4328:	00159e00 	andseq	r9, r5, r0, lsl #28
    432c:	00159a00 	andseq	r9, r5, r0, lsl #20
    4330:	00001a00 	andeq	r1, r0, r0, lsl #20
    4334:	1bcb0000 	blne	ff2c433c <_estack+0xdf2c3104>
    4338:	15000000 	strne	r0, [r0, #-0]
    433c:	000015e4 	andeq	r1, r0, r4, ror #11
    4340:	0d0bac01 	stceq	12, cr10, [fp, #-4]
    4344:	00000001 	andeq	r0, r0, r1
    4348:	00000000 	andeq	r0, r0, r0
    434c:	0015bd00 	andseq	fp, r5, r0, lsl #26
    4350:	16a90100 	strtne	r0, [r9], r0, lsl #2
    4354:	7f160000 	svcvc	0x00160000
    4358:	01000013 	tsteq	r0, r3, lsl r0
    435c:	88350bac 	ldmdahi	r5!, {r2, r3, r5, r7, r8, r9, fp}
    4360:	e3000006 	movw	r0, #6
    4364:	dd000015 	stcle	0, cr0, [r0, #-84]	; 0xffffffac
    4368:	17000015 	smladne	r0, r5, r0, r0
    436c:	000014f7 	strdeq	r1, [r0], -r7
    4370:	170bae01 	strne	sl, [fp, -r1, lsl #28]
    4374:	00000796 	muleq	r0, r6, r7
    4378:	00001613 	andeq	r1, r0, r3, lsl r6
    437c:	0000160f 	andeq	r1, r0, pc, lsl #12
    4380:	0000001c 	andeq	r0, r0, ip, lsl r0
    4384:	00000000 	andeq	r0, r0, r0
    4388:	00160700 	andseq	r0, r6, r0, lsl #14
    438c:	61761d00 	cmnvs	r6, r0, lsl #26
    4390:	b601006c 	strlt	r0, [r1], -ip, rrx
    4394:	00c6050b 	sbceq	r0, r6, fp, lsl #10
    4398:	16330000 	ldrtne	r0, [r3], -r0
    439c:	16310000 	ldrtne	r0, [r1], -r0
    43a0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    43a4:	00000045 	andeq	r0, r0, r5, asr #32
	...
    43b4:	0bb60100 	bleq	fed847bc <_estack+0xded83584>
    43b8:	0015c705 	andseq	ip, r5, r5, lsl #14
    43bc:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    43c0:	164c0000 	strbne	r0, [ip], -r0
    43c4:	16460000 	strbne	r0, [r6], -r0
    43c8:	9d200000 	stcls	0, cr0, [r0, #-0]
    43cc:	7b000045 	blvc	44e8 <_Min_Heap_Size+0x3ce8>
    43d0:	79000016 	stmdbvc	r0, {r1, r2, r4}
    43d4:	00000016 	andeq	r0, r0, r6, lsl r0
    43d8:	00453c21 	subeq	r3, r5, r1, lsr #24
    43dc:	00000000 	andeq	r0, r0, r0
    43e0:	00000100 	andeq	r0, r0, r0, lsl #2
    43e4:	00000000 	andeq	r0, r0, r0
    43e8:	01000000 	mrseq	r0, (UNDEF: 0)
    43ec:	1f050bb6 	svcne	0x00050bb6
    43f0:	0000455c 	andeq	r4, r0, ip, asr r5
    43f4:	00001692 	muleq	r0, r2, r6
    43f8:	0000168e 	andeq	r1, r0, lr, lsl #13
    43fc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4400:	0016b400 	andseq	fp, r6, r0, lsl #8
    4404:	0016b200 	andseq	fp, r6, r0, lsl #4
    4408:	45692000 	strbmi	r2, [r9, #-0]!
    440c:	16c90000 	strbne	r0, [r9], r0
    4410:	16c70000 	strbne	r0, [r7], r0
    4414:	00000000 	andeq	r0, r0, r0
    4418:	0000001c 	andeq	r0, r0, ip, lsl r0
    441c:	00000000 	andeq	r0, r0, r0
    4420:	00169f00 	andseq	r9, r6, r0, lsl #30
    4424:	61761d00 	cmnvs	r6, r0, lsl #26
    4428:	b901006c 	stmdblt	r1, {r2, r3, r5, r6}
    442c:	00c6050b 	sbceq	r0, r6, fp, lsl #10
    4430:	16de0000 	ldrbne	r0, [lr], r0
    4434:	16dc0000 	ldrbne	r0, [ip], r0
    4438:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    443c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    444c:	0bb90100 	bleq	fee44854 <_estack+0xdee4361c>
    4450:	00165f05 	andseq	r5, r6, r5, lsl #30
    4454:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4458:	16f70000 	ldrbtne	r0, [r7], r0
    445c:	16f10000 	ldrbtne	r0, [r1], r0
    4460:	9d200000 	stcls	0, cr0, [r0, #-0]
    4464:	26000045 	strcs	r0, [r0], -r5, asr #32
    4468:	24000017 	strcs	r0, [r0], #-23	; 0xffffffe9
    446c:	00000017 	andeq	r0, r0, r7, lsl r0
    4470:	00453c21 	subeq	r3, r5, r1, lsr #24
    4474:	00000000 	andeq	r0, r0, r0
    4478:	00000100 	andeq	r0, r0, r0, lsl #2
    447c:	00000000 	andeq	r0, r0, r0
    4480:	01000000 	mrseq	r0, (UNDEF: 0)
    4484:	1f050bb9 	svcne	0x00050bb9
    4488:	0000455c 	andeq	r4, r0, ip, asr r5
    448c:	0000173d 	andeq	r1, r0, sp, lsr r7
    4490:	00001739 	andeq	r1, r0, r9, lsr r7
    4494:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4498:	00175f00 	andseq	r5, r7, r0, lsl #30
    449c:	00175d00 	andseq	r5, r7, r0, lsl #26
    44a0:	45692000 	strbmi	r2, [r9, #-0]!
    44a4:	17740000 	ldrbne	r0, [r4, -r0]!
    44a8:	17720000 	ldrbne	r0, [r2, -r0]!
    44ac:	00000000 	andeq	r0, r0, r0
    44b0:	0000001a 	andeq	r0, r0, sl, lsl r0
    44b4:	001bf600 	andseq	pc, fp, r0, lsl #12
    44b8:	01280000 			; <UNDEFINED> instruction: 0x01280000
    44bc:	00001136 	andeq	r1, r0, r6, lsr r1
    44c0:	0a0b7f01 	beq	2e40cc <_Min_Heap_Size+0x2e38cc>
    44c4:	0000c601 	andeq	ip, r0, r1, lsl #12
	...
    44d0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    44d4:	0016de01 	andseq	sp, r6, r1, lsl #28
    44d8:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    44dc:	7f010000 	svcvc	0x00010000
    44e0:	16de360b 	ldrbne	r3, [lr], fp, lsl #12
    44e4:	178b0000 	strne	r0, [fp, r0]
    44e8:	17870000 	strne	r0, [r7, r0]
    44ec:	11000000 	mrsne	r0, (UNDEF: 0)
    44f0:	00069a04 	andeq	r9, r6, r4, lsl #20
    44f4:	b4012800 	strlt	r2, [r1], #-2048	; 0xfffff800
    44f8:	01000012 	tsteq	r0, r2, lsl r0
    44fc:	01170b70 	tsteq	r7, r0, ror fp
    4500:	00000545 	andeq	r0, r0, r5, asr #10
	...
    450c:	01007d02 	tsteq	r0, r2, lsl #26
    4510:	00001743 	andeq	r1, r0, r3, asr #14
    4514:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    4518:	0b700100 	bleq	1c04920 <_Min_Heap_Size+0x1c04120>
    451c:	0016de43 	andseq	sp, r6, r3, asr #28
    4520:	0017b000 	andseq	fp, r7, r0
    4524:	0017ac00 	andseq	sl, r7, r0, lsl #24
    4528:	15351700 	ldrne	r1, [r5, #-1792]!	; 0xfffff900
    452c:	72010000 	andvc	r0, r1, #0
    4530:	00c60c0b 	sbceq	r0, r6, fp, lsl #24
    4534:	17d50000 	ldrbne	r0, [r5, r0]
    4538:	17d10000 	ldrbne	r0, [r1, r0]
    453c:	3b170000 	blcc	5c4544 <_Min_Heap_Size+0x5c3d44>
    4540:	01000015 	tsteq	r0, r5, lsl r0
    4544:	c61b0b72 			; <UNDEFINED> instruction: 0xc61b0b72
    4548:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    454c:	f4000017 	vst4.8	{d0-d3}, [r0 :64], r7
    4550:	00000017 	andeq	r0, r0, r7, lsl r0
    4554:	15120128 	ldrne	r0, [r2, #-296]	; 0xfffffed8
    4558:	37010000 	strcc	r0, [r1, -r0]
    455c:	3a01130b 	bcc	49190 <_Min_Heap_Size+0x48990>
    4560:	00000002 	andeq	r0, r0, r2
    4564:	00000000 	andeq	r0, r0, r0
    4568:	02000000 	andeq	r0, r0, #0
    456c:	8d01007d 	stchi	0, cr0, [r1, #-500]	; 0xfffffe0c
    4570:	16000017 			; <UNDEFINED> instruction: 0x16000017
    4574:	000014f7 	strdeq	r1, [r0], -r7
    4578:	450b3701 	strmi	r3, [fp, #-1793]	; 0xfffff8ff
    457c:	00000796 	muleq	r0, r6, r7
    4580:	0000181f 	andeq	r1, r0, pc, lsl r8
    4584:	00001817 	andeq	r1, r0, r7, lsl r8
    4588:	0001b617 	andeq	fp, r1, r7, lsl r6
    458c:	0b390100 	bleq	e44994 <_Min_Heap_Size+0xe44194>
    4590:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4594:	00186100 	andseq	r6, r8, r0, lsl #2
    4598:	00185900 	andseq	r5, r8, r0, lsl #18
    459c:	01280000 			; <UNDEFINED> instruction: 0x01280000
    45a0:	000010dd 	ldrdeq	r1, [r0], -sp
    45a4:	130b1401 	movwne	r1, #46081	; 0xb401
    45a8:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    45b4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    45b8:	0017d701 	andseq	sp, r7, r1, lsl #14
    45bc:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    45c0:	14010000 	strne	r0, [r1], #-0
    45c4:	0796480b 	ldreq	r4, [r6, fp, lsl #16]
    45c8:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    45cc:	18980000 	ldmne	r8, {}	; <UNPREDICTABLE>
    45d0:	b6170000 	ldrlt	r0, [r7], -r0
    45d4:	01000001 	tsteq	r0, r1
    45d8:	c60c0b16 			; <UNDEFINED> instruction: 0xc60c0b16
    45dc:	e2000000 	and	r0, r0, #0
    45e0:	da000018 	ble	4648 <_Min_Heap_Size+0x3e48>
    45e4:	00000018 	andeq	r0, r0, r8, lsl r0
    45e8:	14d70127 	ldrbne	r0, [r7], #295	; 0x127
    45ec:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    45f0:	3a01130a 	bcc	49220 <_Min_Heap_Size+0x48a20>
    45f4:	00000002 	andeq	r0, r0, r2
    45f8:	00000000 	andeq	r0, r0, r0
    45fc:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    4600:	01000019 	tsteq	r0, r9, lsl r0
    4604:	000018bf 			; <UNDEFINED> instruction: 0x000018bf
    4608:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    460c:	0af80100 	beq	ffe04a14 <_estack+0xdfe037dc>
    4610:	00079647 	andeq	r9, r7, r7, asr #12
    4614:	00193d00 	andseq	r3, r9, r0, lsl #26
    4618:	00193900 	andseq	r3, r9, r0, lsl #18
    461c:	00001c00 	andeq	r1, r0, r0, lsl #24
    4620:	00000000 	andeq	r0, r0, r0
    4624:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
    4628:	761d0000 	ldrvc	r0, [sp], -r0
    462c:	01006c61 	tsteq	r0, r1, ror #24
    4630:	c6030b03 	strgt	r0, [r3], -r3, lsl #22
    4634:	5d000000 	stcpl	0, cr0, [r0, #-0]
    4638:	5b000019 	blpl	46a4 <_Min_Heap_Size+0x3ea4>
    463c:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    4640:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4650:	03010000 	movweq	r0, #4096	; 0x1000
    4654:	1864030b 	stmdane	r4!, {r0, r1, r3, r8, r9}^
    4658:	901f0000 	andsls	r0, pc, r0
    465c:	76000045 	strvc	r0, [r0], -r5, asr #32
    4660:	70000019 	andvc	r0, r0, r9, lsl r0
    4664:	20000019 	andcs	r0, r0, r9, lsl r0
    4668:	0000459d 	muleq	r0, sp, r5
    466c:	000019a5 	andeq	r1, r0, r5, lsr #19
    4670:	000019a3 	andeq	r1, r0, r3, lsr #19
    4674:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4678:	00000000 	andeq	r0, r0, r0
    467c:	00010000 	andeq	r0, r1, r0
	...
    4688:	030b0301 	movweq	r0, #45825	; 0xb301
    468c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4690:	0019bc00 	andseq	fp, r9, r0, lsl #24
    4694:	0019b800 	andseq	fp, r9, r0, lsl #16
    4698:	454f1f00 	strbmi	r1, [pc, #-3840]	; 37a0 <_Min_Heap_Size+0x2fa0>
    469c:	19de0000 	ldmibne	lr, {}^	; <UNPREDICTABLE>
    46a0:	19dc0000 	ldmibne	ip, {}^	; <UNPREDICTABLE>
    46a4:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    46a8:	f3000045 	vhadd.u8	q0, q0, <illegal reg q2.5>
    46ac:	f1000019 	cps	#25
    46b0:	00000019 	andeq	r0, r0, r9, lsl r0
    46b4:	00002300 	andeq	r2, r0, r0, lsl #6
    46b8:	45ab0000 	strmi	r0, [fp, #0]!
    46bc:	01190000 	tsteq	r9, r0
    46c0:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    46c4:	1908002c 	stmdbne	r8, {r2, r3, r5}
    46c8:	0a035101 	beq	d8ad4 <_Min_Heap_Size+0xd82d4>
    46cc:	00000afb 	strdeq	r0, [r0], -fp
    46d0:	169d0127 	ldrne	r0, [sp], r7, lsr #2
    46d4:	dc010000 	stcle	0, cr0, [r1], {-0}
    46d8:	3a01130a 	bcc	49308 <_Min_Heap_Size+0x48b08>
    46dc:	00000002 	andeq	r0, r0, r2
    46e0:	00000000 	andeq	r0, r0, r0
    46e4:	06000000 	streq	r0, [r0], -r0
    46e8:	0100001a 	tsteq	r0, sl, lsl r0
    46ec:	000019a7 	andeq	r1, r0, r7, lsr #19
    46f0:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    46f4:	0adc0100 	beq	ff704afc <_estack+0xdf7038c4>
    46f8:	00079648 	andeq	r9, r7, r8, asr #12
    46fc:	001a2a00 	andseq	r2, sl, r0, lsl #20
    4700:	001a2600 	andseq	r2, sl, r0, lsl #12
    4704:	00001c00 	andeq	r1, r0, r0, lsl #24
    4708:	00000000 	andeq	r0, r0, r0
    470c:	198c0000 	stmibne	ip, {}	; <UNPREDICTABLE>
    4710:	761d0000 	ldrvc	r0, [sp], -r0
    4714:	01006c61 	tsteq	r0, r1, ror #24
    4718:	c6030ae7 	strgt	r0, [r3], -r7, ror #21
    471c:	4a000000 	bmi	4724 <_Min_Heap_Size+0x3f24>
    4720:	4800001a 	stmdami	r0, {r1, r3, r4}
    4724:	1e00001a 	mcrne	0, 0, r0, cr0, cr10, {0}
    4728:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4738:	e7010000 	str	r0, [r1, -r0]
    473c:	194c030a 	stmdbne	ip, {r1, r3, r8, r9}^
    4740:	901f0000 	andsls	r0, pc, r0
    4744:	63000045 	movwvs	r0, #69	; 0x45
    4748:	5d00001a 	stcpl	0, cr0, [r0, #-104]	; 0xffffff98
    474c:	2000001a 	andcs	r0, r0, sl, lsl r0
    4750:	0000459d 	muleq	r0, sp, r5
    4754:	00001a92 	muleq	r0, r2, sl
    4758:	00001a90 	muleq	r0, r0, sl
    475c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4760:	00000000 	andeq	r0, r0, r0
    4764:	00010000 	andeq	r0, r1, r0
	...
    4770:	030ae701 	movweq	lr, #42753	; 0xa701
    4774:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4778:	001aa900 	andseq	sl, sl, r0, lsl #18
    477c:	001aa500 	andseq	sl, sl, r0, lsl #10
    4780:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3888 <_Min_Heap_Size+0x3088>
    4784:	1acb0000 	bne	ff2c478c <_estack+0xdf2c3554>
    4788:	1ac90000 	bne	ff244790 <_estack+0xdf243558>
    478c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4790:	e0000045 	and	r0, r0, r5, asr #32
    4794:	de00001a 	mcrle	0, 0, r0, cr0, cr10, {0}
    4798:	0000001a 	andeq	r0, r0, sl, lsl r0
    479c:	00002300 	andeq	r2, r0, r0, lsl #6
    47a0:	45ab0000 	strmi	r0, [fp, #0]!
    47a4:	01190000 	tsteq	r9, r0
    47a8:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    47ac:	1908002c 	stmdbne	r8, {r2, r3, r5}
    47b0:	0a035101 	beq	d8bbc <_Min_Heap_Size+0xd83bc>
    47b4:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    47b8:	10af0127 	adcne	r0, pc, r7, lsr #2
    47bc:	c1010000 	mrsgt	r0, (UNDEF: 1)
    47c0:	3a01130a 	bcc	493f0 <_Min_Heap_Size+0x48bf0>
    47c4:	00000002 	andeq	r0, r0, r2
    47c8:	00000000 	andeq	r0, r0, r0
    47cc:	f3000000 	vhadd.u8	d0, d0, d0
    47d0:	0100001a 	tsteq	r0, sl, lsl r0
    47d4:	00001a8f 	andeq	r1, r0, pc, lsl #21
    47d8:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    47dc:	0ac10100 	beq	ff044be4 <_estack+0xdf0439ac>
    47e0:	00079639 	andeq	r9, r7, r9, lsr r6
    47e4:	001b1700 	andseq	r1, fp, r0, lsl #14
    47e8:	001b1300 	andseq	r1, fp, r0, lsl #6
    47ec:	00001c00 	andeq	r1, r0, r0, lsl #24
    47f0:	00000000 	andeq	r0, r0, r0
    47f4:	1a740000 	bne	1d047fc <_Min_Heap_Size+0x1d03ffc>
    47f8:	761d0000 	ldrvc	r0, [sp], -r0
    47fc:	01006c61 	tsteq	r0, r1, ror #24
    4800:	c6030acc 	strgt	r0, [r3], -ip, asr #21
    4804:	37000000 	strcc	r0, [r0, -r0]
    4808:	3500001b 	strcc	r0, [r0, #-27]	; 0xffffffe5
    480c:	1e00001b 	mcrne	0, 0, r0, cr0, cr11, {0}
    4810:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4820:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4824:	1a34030a 	bne	d05454 <_Min_Heap_Size+0xd04c54>
    4828:	901f0000 	andsls	r0, pc, r0
    482c:	50000045 	andpl	r0, r0, r5, asr #32
    4830:	4a00001b 	bmi	48a4 <_Min_Heap_Size+0x40a4>
    4834:	2000001b 	andcs	r0, r0, fp, lsl r0
    4838:	0000459d 	muleq	r0, sp, r5
    483c:	00001b7f 	andeq	r1, r0, pc, ror fp
    4840:	00001b7d 	andeq	r1, r0, sp, ror fp
    4844:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4848:	00000000 	andeq	r0, r0, r0
    484c:	00010000 	andeq	r0, r1, r0
	...
    4858:	030acc01 	movweq	ip, #44033	; 0xac01
    485c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4860:	001b9600 	andseq	r9, fp, r0, lsl #12
    4864:	001b9200 	andseq	r9, fp, r0, lsl #4
    4868:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3970 <_Min_Heap_Size+0x3170>
    486c:	1bb80000 	blne	fee04874 <_estack+0xdee0363c>
    4870:	1bb60000 	blne	fed84878 <_estack+0xded83640>
    4874:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4878:	cd000045 	stcgt	0, cr0, [r0, #-276]	; 0xfffffeec
    487c:	cb00001b 	blgt	48f0 <_Min_Heap_Size+0x40f0>
    4880:	0000001b 	andeq	r0, r0, fp, lsl r0
    4884:	00002300 	andeq	r2, r0, r0, lsl #6
    4888:	45ab0000 	strmi	r0, [fp, #0]!
    488c:	01190000 	tsteq	r9, r0
    4890:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    4894:	1908002c 	stmdbne	r8, {r2, r3, r5}
    4898:	0a035101 	beq	d8ca4 <_Min_Heap_Size+0xd84a4>
    489c:	00000ac4 	andeq	r0, r0, r4, asr #21
    48a0:	1105012a 	tstne	r5, sl, lsr #2
    48a4:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    48a8:	a4010d0a 	strge	r0, [r1], #-3338	; 0xfffff2f6
    48ac:	a608000d 	strge	r0, [r8], -sp
    48b0:	0208000d 	andeq	r0, r8, #13
    48b4:	c901007d 	stmdbgt	r1, {r0, r2, r3, r4, r5, r6}
    48b8:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    48bc:	000014f7 	strdeq	r1, [r0], -r7
    48c0:	3c0a9901 			; <UNDEFINED> instruction: 0x3c0a9901
    48c4:	00000796 	muleq	r0, r6, r7
    48c8:	dc295001 	stcle	0, cr5, [r9], #-4
    48cc:	01000024 	tsteq	r0, r4, lsr #32
    48d0:	b04c0a99 	umaallt	r0, ip, r9, sl
    48d4:	01000000 	mrseq	r0, (UNDEF: 0)
    48d8:	012a0051 	qsubeq	r0, r1, sl
    48dc:	000011b7 			; <UNDEFINED> instruction: 0x000011b7
    48e0:	0d0a8801 	stceq	8, cr8, [sl, #-4]
    48e4:	00000001 	andeq	r0, r0, r1
    48e8:	00000000 	andeq	r0, r0, r0
    48ec:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    48f0:	001af401 	andseq	pc, sl, r1, lsl #8
    48f4:	14f72900 	ldrbtne	r2, [r7], #2304	; 0x900
    48f8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    48fc:	0796430a 	ldreq	r4, [r6, sl, lsl #6]
    4900:	50010000 	andpl	r0, r1, r0
    4904:	34012a00 	strcc	r2, [r1], #-2560	; 0xfffff600
    4908:	01000014 	tsteq	r0, r4, lsl r0
    490c:	010d0a79 	tsteq	sp, r9, ror sl
	...
    4918:	01007d02 	tsteq	r0, r2, lsl #26
    491c:	00001b1f 	andeq	r1, r0, pc, lsl fp
    4920:	0014f729 	andseq	pc, r4, r9, lsr #14
    4924:	0a790100 	beq	1e44d2c <_Min_Heap_Size+0x1e4452c>
    4928:	00079644 	andeq	r9, r7, r4, asr #12
    492c:	00500100 	subseq	r0, r0, r0, lsl #2
    4930:	1578012a 	ldrbne	r0, [r8, #-298]!	; 0xfffffed6
    4934:	6a010000 	bvs	4493c <_Min_Heap_Size+0x4413c>
    4938:	00010d0a 	andeq	r0, r1, sl, lsl #26
    493c:	00000000 	andeq	r0, r0, r0
    4940:	02000000 	andeq	r0, r0, #0
    4944:	4a01007d 	bmi	44b40 <_Min_Heap_Size+0x44340>
    4948:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    494c:	000014f7 	strdeq	r1, [r0], -r7
    4950:	3c0a6a01 			; <UNDEFINED> instruction: 0x3c0a6a01
    4954:	00000796 	muleq	r0, r6, r7
    4958:	2a005001 	bcs	18964 <_Min_Heap_Size+0x18164>
    495c:	00164601 	andseq	r4, r6, r1, lsl #12
    4960:	0a5c0100 	beq	1704d68 <_Min_Heap_Size+0x1704568>
    4964:	0d92010d 	ldfeqs	f0, [r2, #52]	; 0x34
    4968:	0d940800 	ldceq	8, cr0, [r4]
    496c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4970:	1b750100 	blne	1d44d78 <_Min_Heap_Size+0x1d44578>
    4974:	f7290000 			; <UNDEFINED> instruction: 0xf7290000
    4978:	01000014 	tsteq	r0, r4, lsl r0
    497c:	96380a5c 			; <UNDEFINED> instruction: 0x96380a5c
    4980:	01000007 	tsteq	r0, r7
    4984:	012a0050 	qsubeq	r0, r0, sl
    4988:	000011ea 	andeq	r1, r0, sl, ror #3
    498c:	0d0a4d01 	stceq	13, cr4, [sl, #-4]
    4990:	00000001 	andeq	r0, r0, r1
    4994:	00000000 	andeq	r0, r0, r0
    4998:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    499c:	001ba001 	andseq	sl, fp, r1
    49a0:	14f72900 	ldrbtne	r2, [r7], #2304	; 0x900
    49a4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    49a8:	07963d0a 	ldreq	r3, [r6, sl, lsl #26]
    49ac:	50010000 	andpl	r0, r1, r0
    49b0:	4b012a00 	blmi	4f1b8 <_Min_Heap_Size+0x4e9b8>
    49b4:	01000015 	tsteq	r0, r5, lsl r0
    49b8:	010d0a3e 	tsteq	sp, lr, lsr sl
    49bc:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
    49c0:	08000d92 	stmdaeq	r0, {r1, r4, r7, r8, sl, fp}
    49c4:	01007d02 	tsteq	r0, r2, lsl #26
    49c8:	00001bcb 	andeq	r1, r0, fp, asr #23
    49cc:	0014f729 	andseq	pc, r4, r9, lsr #14
    49d0:	0a3e0100 	beq	f84dd8 <_Min_Heap_Size+0xf845d8>
    49d4:	00079639 	andeq	r9, r7, r9, lsr r6
    49d8:	00500100 	subseq	r0, r0, r0, lsl #2
    49dc:	162a012a 	strtne	r0, [sl], -sl, lsr #2
    49e0:	2f010000 	svccs	0x00010000
    49e4:	00010d0a 	andeq	r0, r1, sl, lsl #26
    49e8:	00000000 	andeq	r0, r0, r0
    49ec:	02000000 	andeq	r0, r0, #0
    49f0:	f601007d 			; <UNDEFINED> instruction: 0xf601007d
    49f4:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    49f8:	000014f7 	strdeq	r1, [r0], -r7
    49fc:	3d0a2f01 	stccc	15, cr2, [sl, #-4]
    4a00:	00000796 	muleq	r0, r6, r7
    4a04:	2a005001 	bcs	18a10 <_Min_Heap_Size+0x18210>
    4a08:	00134f01 	andseq	r4, r3, r1, lsl #30
    4a0c:	0a200100 	beq	804e14 <_Min_Heap_Size+0x804614>
    4a10:	0d74010d 	ldfeqe	f0, [r4, #-52]!	; 0xffffffcc
    4a14:	0d760800 	ldcleq	8, cr0, [r6, #-0]
    4a18:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4a1c:	1c210100 	stfnes	f0, [r1], #-0
    4a20:	f7290000 			; <UNDEFINED> instruction: 0xf7290000
    4a24:	01000014 	tsteq	r0, r4, lsl r0
    4a28:	96390a20 	ldrtls	r0, [r9], -r0, lsr #20
    4a2c:	01000007 	tsteq	r0, r7
    4a30:	012b0050 	qsubeq	r0, r0, fp
    4a34:	00000f70 	andeq	r0, r0, r0, ror pc
    4a38:	06092e01 	streq	r2, [r9], -r1, lsl #28
    4a3c:	000e8c01 	andeq	r8, lr, r1, lsl #24
    4a40:	00111408 	andseq	r1, r1, r8, lsl #8
    4a44:	001be008 	andseq	lr, fp, r8
    4a48:	22ae0100 	adccs	r0, lr, #0, 2
    4a4c:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    4a50:	01000014 	tsteq	r0, r4, lsl r0
    4a54:	962e092e 	strtls	r0, [lr], -lr, lsr #18
    4a58:	28000007 	stmdacs	r0, {r0, r1, r2}
    4a5c:	2400001c 	strcs	r0, [r0], #-28	; 0xffffffe4
    4a60:	1700001c 	smladne	r0, ip, r0, r0
    4a64:	00001384 	andeq	r1, r0, r4, lsl #7
    4a68:	0c093001 	stceq	0, cr3, [r9], {1}
    4a6c:	000000c6 	andeq	r0, r0, r6, asr #1
    4a70:	00001c54 	andeq	r1, r0, r4, asr ip
    4a74:	00001c46 	andeq	r1, r0, r6, asr #24
    4a78:	0016da17 	andseq	sp, r6, r7, lsl sl
    4a7c:	09310100 	ldmdbeq	r1!, {r8}
    4a80:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4a84:	001cb900 	andseq	fp, ip, r0, lsl #18
    4a88:	001ca900 	andseq	sl, ip, r0, lsl #18
    4a8c:	10fe1700 	rscsne	r1, lr, r0, lsl #14
    4a90:	32010000 	andcc	r0, r1, #0
    4a94:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    4a98:	1d1d0000 	ldcne	0, cr0, [sp, #-0]
    4a9c:	1d190000 	ldcne	0, cr0, [r9, #-0]
    4aa0:	eb170000 	bl	5c4aa8 <_Min_Heap_Size+0x5c42a8>
    4aa4:	01000012 	tsteq	r0, r2, lsl r0
    4aa8:	c60c0933 			; <UNDEFINED> instruction: 0xc60c0933
    4aac:	41000000 	mrsmi	r0, (UNDEF: 0)
    4ab0:	3b00001d 	blcc	4b2c <_Min_Heap_Size+0x432c>
    4ab4:	1700001d 	smladne	r0, sp, r0, r0
    4ab8:	00001593 	muleq	r0, r3, r5
    4abc:	0c093401 	cfstrseq	mvf3, [r9], {1}
    4ac0:	000000c6 	andeq	r0, r0, r6, asr #1
    4ac4:	00001d7b 	andeq	r1, r0, fp, ror sp
    4ac8:	00001d6f 	andeq	r1, r0, pc, ror #26
    4acc:	000f661c 	andeq	r6, pc, ip, lsl r6	; <UNPREDICTABLE>
    4ad0:	000f7e08 	andeq	r7, pc, r8, lsl #28
    4ad4:	001d5308 	andseq	r5, sp, r8, lsl #6
    4ad8:	61761d00 	cmnvs	r6, r0, lsl #26
    4adc:	7501006c 	strvc	r0, [r1, #-108]	; 0xffffff94
    4ae0:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4ae4:	1dd90000 	ldclne	0, cr0, [r9]
    4ae8:	1dd70000 	ldclne	0, cr0, [r7]
    4aec:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4af0:	68000045 	stmdavs	r0, {r0, r2, r6}
    4af4:	0008000f 	andeq	r0, r8, pc
    4af8:	000f6800 	andeq	r6, pc, r0, lsl #16
    4afc:	000f7008 	andeq	r7, pc, r8
    4b00:	09750108 	ldmdbeq	r5!, {r3, r8}^
    4b04:	001d130b 	andseq	r1, sp, fp, lsl #6
    4b08:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4b0c:	1df20000 	ldclne	0, cr0, [r2]
    4b10:	1dec0000 	stclne	0, cr0, [ip]
    4b14:	9d200000 	stcls	0, cr0, [r0, #-0]
    4b18:	21000045 	tstcs	r0, r5, asr #32
    4b1c:	1f00001e 	svcne	0x0000001e
    4b20:	0000001e 	andeq	r0, r0, lr, lsl r0
    4b24:	00453c21 	subeq	r3, r5, r1, lsr #24
    4b28:	000f7400 	andeq	r7, pc, r0, lsl #8
    4b2c:	74000108 	strvc	r0, [r0], #-264	; 0xfffffef8
    4b30:	7a08000f 	bvc	204b74 <_Min_Heap_Size+0x204374>
    4b34:	0108000f 	tsteq	r8, pc
    4b38:	1f0b0975 	svcne	0x000b0975
    4b3c:	0000455c 	andeq	r4, r0, ip, asr r5
    4b40:	00001e38 	andeq	r1, r0, r8, lsr lr
    4b44:	00001e34 	andeq	r1, r0, r4, lsr lr
    4b48:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4b4c:	001e5a00 	andseq	r5, lr, r0, lsl #20
    4b50:	001e5800 	andseq	r5, lr, r0, lsl #16
    4b54:	45692000 	strbmi	r2, [r9, #-0]!
    4b58:	1e6f0000 	cdpne	0, 6, cr0, cr15, cr0, {0}
    4b5c:	1e6d0000 	cdpne	0, 6, cr0, cr13, cr0, {0}
    4b60:	00000000 	andeq	r0, r0, r0
    4b64:	000fcc1c 	andeq	ip, pc, ip, lsl ip	; <UNPREDICTABLE>
    4b68:	000fda08 	andeq	sp, pc, r8, lsl #20
    4b6c:	001d7108 	andseq	r7, sp, r8, lsl #2
    4b70:	01b62200 			; <UNDEFINED> instruction: 0x01b62200
    4b74:	b3010000 	movwlt	r0, #4096	; 0x1000
    4b78:	00d20509 	sbcseq	r0, r2, r9, lsl #10
    4b7c:	91020000 	mrsls	r0, (UNDEF: 2)
    4b80:	e21c006c 	ands	r0, ip, #108	; 0x6c
    4b84:	8808000f 	stmdahi	r8, {r0, r1, r2, r3}
    4b88:	0d080010 	stceq	0, cr0, [r8, #-64]	; 0xffffffc0
    4b8c:	17000020 	strne	r0, [r0, -r0, lsr #32]
    4b90:	00001563 	andeq	r1, r0, r3, ror #10
    4b94:	1009bc01 	andne	fp, r9, r1, lsl #24
    4b98:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    4b9c:	00001e86 	andeq	r1, r0, r6, lsl #29
    4ba0:	00001e82 	andeq	r1, r0, r2, lsl #29
    4ba4:	0010021c 	andseq	r0, r0, ip, lsl r2
    4ba8:	00101a08 	andseq	r1, r0, r8, lsl #20
    4bac:	001e2b08 	andseq	r2, lr, r8, lsl #22
    4bb0:	61761d00 	cmnvs	r6, r0, lsl #26
    4bb4:	c701006c 	strgt	r0, [r1, -ip, rrx]
    4bb8:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4bbc:	1ea70000 	cdpne	0, 10, cr0, cr7, cr0, {0}
    4bc0:	1ea50000 	cdpne	0, 10, cr0, cr5, cr0, {0}
    4bc4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4bc8:	04000045 	streq	r0, [r0], #-69	; 0xffffffbb
    4bcc:	00080010 	andeq	r0, r8, r0, lsl r0
    4bd0:	00100400 	andseq	r0, r0, r0, lsl #8
    4bd4:	00100c08 	andseq	r0, r0, r8, lsl #24
    4bd8:	09c70108 	stmibeq	r7, {r3, r8}^
    4bdc:	001deb0b 	andseq	lr, sp, fp, lsl #22
    4be0:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4be4:	1ec00000 	cdpne	0, 12, cr0, cr0, cr0, {0}
    4be8:	1eba0000 	cdpne	0, 11, cr0, cr10, cr0, {0}
    4bec:	9d200000 	stcls	0, cr0, [r0, #-0]
    4bf0:	ef000045 	svc	0x00000045
    4bf4:	ed00001e 	stc	0, cr0, [r0, #-120]	; 0xffffff88
    4bf8:	0000001e 	andeq	r0, r0, lr, lsl r0
    4bfc:	00453c21 	subeq	r3, r5, r1, lsr #24
    4c00:	00101000 	andseq	r1, r0, r0
    4c04:	10000108 	andne	r0, r0, r8, lsl #2
    4c08:	16080010 			; <UNDEFINED> instruction: 0x16080010
    4c0c:	01080010 	tsteq	r8, r0, lsl r0
    4c10:	1f0b09c7 	svcne	0x000b09c7
    4c14:	0000455c 	andeq	r4, r0, ip, asr r5
    4c18:	00001f06 	andeq	r1, r0, r6, lsl #30
    4c1c:	00001f02 	andeq	r1, r0, r2, lsl #30
    4c20:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4c24:	001f2800 	andseq	r2, pc, r0, lsl #16
    4c28:	001f2600 	andseq	r2, pc, r0, lsl #12
    4c2c:	45692000 	strbmi	r2, [r9, #-0]!
    4c30:	1f3d0000 	svcne	0x003d0000
    4c34:	1f3b0000 	svcne	0x003b0000
    4c38:	00000000 	andeq	r0, r0, r0
    4c3c:	00101a1c 	andseq	r1, r0, ip, lsl sl
    4c40:	00103208 	andseq	r3, r0, r8, lsl #4
    4c44:	001ec308 	andseq	ip, lr, r8, lsl #6
    4c48:	61761d00 	cmnvs	r6, r0, lsl #26
    4c4c:	c801006c 	stmdagt	r1, {r2, r3, r5, r6}
    4c50:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4c54:	1f520000 	svcne	0x00520000
    4c58:	1f500000 	svcne	0x00500000
    4c5c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4c60:	1c000045 	stcne	0, cr0, [r0], {69}	; 0x45
    4c64:	00080010 	andeq	r0, r8, r0, lsl r0
    4c68:	00101c00 	andseq	r1, r0, r0, lsl #24
    4c6c:	00102408 	andseq	r2, r0, r8, lsl #8
    4c70:	09c80108 	stmibeq	r8, {r3, r8}^
    4c74:	001e830b 	andseq	r8, lr, fp, lsl #6
    4c78:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4c7c:	1f6b0000 	svcne	0x006b0000
    4c80:	1f650000 	svcne	0x00650000
    4c84:	9d200000 	stcls	0, cr0, [r0, #-0]
    4c88:	9a000045 	bls	4da4 <_Min_Heap_Size+0x45a4>
    4c8c:	9800001f 	stmdals	r0, {r0, r1, r2, r3, r4}
    4c90:	0000001f 	andeq	r0, r0, pc, lsl r0
    4c94:	00453c21 	subeq	r3, r5, r1, lsr #24
    4c98:	00102800 	andseq	r2, r0, r0, lsl #16
    4c9c:	28000108 	stmdacs	r0, {r3, r8}
    4ca0:	2e080010 	mcrcs	0, 0, r0, cr8, cr0, {0}
    4ca4:	01080010 	tsteq	r8, r0, lsl r0
    4ca8:	1f0b09c8 	svcne	0x000b09c8
    4cac:	0000455c 	andeq	r4, r0, ip, asr r5
    4cb0:	00001fb1 			; <UNDEFINED> instruction: 0x00001fb1
    4cb4:	00001fad 	andeq	r1, r0, sp, lsr #31
    4cb8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4cbc:	001fd300 	andseq	sp, pc, r0, lsl #6
    4cc0:	001fd100 	andseq	sp, pc, r0, lsl #2
    4cc4:	45692000 	strbmi	r2, [r9, #-0]!
    4cc8:	1fe80000 	svcne	0x00e80000
    4ccc:	1fe60000 	svcne	0x00e60000
    4cd0:	00000000 	andeq	r0, r0, r0
    4cd4:	0010321c 	andseq	r3, r0, ip, lsl r2
    4cd8:	00104a08 	andseq	r4, r0, r8, lsl #20
    4cdc:	001f5b08 	andseq	r5, pc, r8, lsl #22
    4ce0:	61761d00 	cmnvs	r6, r0, lsl #26
    4ce4:	cc01006c 	stcgt	0, cr0, [r1], {108}	; 0x6c
    4ce8:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4cec:	1ffd0000 	svcne	0x00fd0000
    4cf0:	1ffb0000 	svcne	0x00fb0000
    4cf4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4cf8:	34000045 	strcc	r0, [r0], #-69	; 0xffffffbb
    4cfc:	00080010 	andeq	r0, r8, r0, lsl r0
    4d00:	00103400 	andseq	r3, r0, r0, lsl #8
    4d04:	00103c08 	andseq	r3, r0, r8, lsl #24
    4d08:	09cc0108 	stmibeq	ip, {r3, r8}^
    4d0c:	001f1b0b 	andseq	r1, pc, fp, lsl #22
    4d10:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4d14:	20160000 	andscs	r0, r6, r0
    4d18:	20100000 	andscs	r0, r0, r0
    4d1c:	9d200000 	stcls	0, cr0, [r0, #-0]
    4d20:	45000045 	strmi	r0, [r0, #-69]	; 0xffffffbb
    4d24:	43000020 	movwmi	r0, #32
    4d28:	00000020 	andeq	r0, r0, r0, lsr #32
    4d2c:	00453c21 	subeq	r3, r5, r1, lsr #24
    4d30:	00104000 	andseq	r4, r0, r0
    4d34:	40000108 	andmi	r0, r0, r8, lsl #2
    4d38:	46080010 			; <UNDEFINED> instruction: 0x46080010
    4d3c:	01080010 	tsteq	r8, r0, lsl r0
    4d40:	1f0b09cc 	svcne	0x000b09cc
    4d44:	0000455c 	andeq	r4, r0, ip, asr r5
    4d48:	0000205c 	andeq	r2, r0, ip, asr r0
    4d4c:	00002058 	andeq	r2, r0, r8, asr r0
    4d50:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4d54:	00207e00 	eoreq	r7, r0, r0, lsl #28
    4d58:	00207c00 	eoreq	r7, r0, r0, lsl #24
    4d5c:	45692000 	strbmi	r2, [r9, #-0]!
    4d60:	20930000 	addscs	r0, r3, r0
    4d64:	20910000 	addscs	r0, r1, r0
    4d68:	00000000 	andeq	r0, r0, r0
    4d6c:	0010541c 	andseq	r5, r0, ip, lsl r4
    4d70:	00106c08 	andseq	r6, r0, r8, lsl #24
    4d74:	001ff308 	andseq	pc, pc, r8, lsl #6
    4d78:	61761d00 	cmnvs	r6, r0, lsl #26
    4d7c:	d201006c 	andle	r0, r1, #108	; 0x6c
    4d80:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4d84:	20a80000 	adccs	r0, r8, r0
    4d88:	20a60000 	adccs	r0, r6, r0
    4d8c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4d90:	56000045 	strpl	r0, [r0], -r5, asr #32
    4d94:	00080010 	andeq	r0, r8, r0, lsl r0
    4d98:	00105600 	andseq	r5, r0, r0, lsl #12
    4d9c:	00105e08 	andseq	r5, r0, r8, lsl #28
    4da0:	09d20108 	ldmibeq	r2, {r3, r8}^
    4da4:	001fb30b 	andseq	fp, pc, fp, lsl #6
    4da8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4dac:	20c10000 	sbccs	r0, r1, r0
    4db0:	20bb0000 	adcscs	r0, fp, r0
    4db4:	9d200000 	stcls	0, cr0, [r0, #-0]
    4db8:	f0000045 			; <UNDEFINED> instruction: 0xf0000045
    4dbc:	ee000020 	cdp	0, 0, cr0, cr0, cr0, {1}
    4dc0:	00000020 	andeq	r0, r0, r0, lsr #32
    4dc4:	00453c21 	subeq	r3, r5, r1, lsr #24
    4dc8:	00106200 	andseq	r6, r0, r0, lsl #4
    4dcc:	62000108 	andvs	r0, r0, #8, 2
    4dd0:	68080010 	stmdavs	r8, {r4}
    4dd4:	01080010 	tsteq	r8, r0, lsl r0
    4dd8:	1f0b09d2 	svcne	0x000b09d2
    4ddc:	0000455c 	andeq	r4, r0, ip, asr r5
    4de0:	00002107 	andeq	r2, r0, r7, lsl #2
    4de4:	00002103 	andeq	r2, r0, r3, lsl #2
    4de8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4dec:	00212900 	eoreq	r2, r1, r0, lsl #18
    4df0:	00212700 	eoreq	r2, r1, r0, lsl #14
    4df4:	45692000 	strbmi	r2, [r9, #-0]!
    4df8:	213e0000 	teqcs	lr, r0
    4dfc:	213c0000 	teqcs	ip, r0
    4e00:	00000000 	andeq	r0, r0, r0
    4e04:	0010721a 	andseq	r7, r0, sl, lsl r2
    4e08:	00460008 	subeq	r0, r6, r8
    4e0c:	10862300 	addne	r2, r6, r0, lsl #6
    4e10:	1a8f0800 	bne	fe3c6e18 <_estack+0xde3c5be0>
    4e14:	01190000 	tsteq	r9, r0
    4e18:	00740250 	rsbseq	r0, r4, r0, asr r2
    4e1c:	881c0000 	ldmdahi	ip, {}	; <UNPREDICTABLE>
    4e20:	00080010 	andeq	r0, r8, r0, lsl r0
    4e24:	08080011 	stmdaeq	r8, {r0, r4}
    4e28:	17000022 	strne	r0, [r0, -r2, lsr #32]
    4e2c:	000015d9 	ldrdeq	r1, [r0], -r9
    4e30:	1009eb01 	andne	lr, r9, r1, lsl #22
    4e34:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    4e38:	00002153 	andeq	r2, r0, r3, asr r1
    4e3c:	00002151 	andeq	r2, r0, r1, asr r1
    4e40:	0010a21c 	andseq	sl, r0, ip, lsl r2
    4e44:	0010ba08 	andseq	fp, r0, r8, lsl #20
    4e48:	0020c708 	eoreq	ip, r0, r8, lsl #14
    4e4c:	61761d00 	cmnvs	r6, r0, lsl #26
    4e50:	f001006c 			; <UNDEFINED> instruction: 0xf001006c
    4e54:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4e58:	21680000 	cmncs	r8, r0
    4e5c:	21660000 	cmncs	r6, r0
    4e60:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4e64:	a4000045 	strge	r0, [r0], #-69	; 0xffffffbb
    4e68:	00080010 	andeq	r0, r8, r0, lsl r0
    4e6c:	0010a400 	andseq	sl, r0, r0, lsl #8
    4e70:	0010ac08 	andseq	sl, r0, r8, lsl #24
    4e74:	09f00108 	ldmibeq	r0!, {r3, r8}^
    4e78:	00208709 	eoreq	r8, r0, r9, lsl #14
    4e7c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4e80:	21810000 	orrcs	r0, r1, r0
    4e84:	217b0000 	cmncs	fp, r0
    4e88:	9d200000 	stcls	0, cr0, [r0, #-0]
    4e8c:	b0000045 	andlt	r0, r0, r5, asr #32
    4e90:	ae000021 	cdpge	0, 0, cr0, cr0, cr1, {1}
    4e94:	00000021 	andeq	r0, r0, r1, lsr #32
    4e98:	00453c21 	subeq	r3, r5, r1, lsr #24
    4e9c:	0010b000 	andseq	fp, r0, r0
    4ea0:	b0000108 	andlt	r0, r0, r8, lsl #2
    4ea4:	b6080010 			; <UNDEFINED> instruction: 0xb6080010
    4ea8:	01080010 	tsteq	r8, r0, lsl r0
    4eac:	1f0909f0 	svcne	0x000909f0
    4eb0:	0000455c 	andeq	r4, r0, ip, asr r5
    4eb4:	000021c7 	andeq	r2, r0, r7, asr #3
    4eb8:	000021c3 	andeq	r2, r0, r3, asr #3
    4ebc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4ec0:	0021e900 	eoreq	lr, r1, r0, lsl #18
    4ec4:	0021e700 	eoreq	lr, r1, r0, lsl #14
    4ec8:	45692000 	strbmi	r2, [r9, #-0]!
    4ecc:	21fe0000 	mvnscs	r0, r0
    4ed0:	21fc0000 	mvnscs	r0, r0
    4ed4:	00000000 	andeq	r0, r0, r0
    4ed8:	0010ba1c 	andseq	fp, r0, ip, lsl sl
    4edc:	0010d208 	andseq	sp, r0, r8, lsl #4
    4ee0:	00215f08 	eoreq	r5, r1, r8, lsl #30
    4ee4:	61761d00 	cmnvs	r6, r0, lsl #26
    4ee8:	f301006c 	vhadd.u8	q0, <illegal reg q0.5>, q14
    4eec:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4ef0:	22130000 	andscs	r0, r3, #0
    4ef4:	22110000 	andscs	r0, r1, #0
    4ef8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4efc:	bc000045 	stclt	0, cr0, [r0], {69}	; 0x45
    4f00:	00080010 	andeq	r0, r8, r0, lsl r0
    4f04:	0010bc00 	andseq	fp, r0, r0, lsl #24
    4f08:	0010c408 	andseq	ip, r0, r8, lsl #8
    4f0c:	09f30108 	ldmibeq	r3!, {r3, r8}^
    4f10:	00211f09 	eoreq	r1, r1, r9, lsl #30
    4f14:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4f18:	222c0000 	eorcs	r0, ip, #0
    4f1c:	22260000 	eorcs	r0, r6, #0
    4f20:	9d200000 	stcls	0, cr0, [r0, #-0]
    4f24:	5b000045 	blpl	5040 <_Min_Heap_Size+0x4840>
    4f28:	59000022 	stmdbpl	r0, {r1, r5}
    4f2c:	00000022 	andeq	r0, r0, r2, lsr #32
    4f30:	00453c21 	subeq	r3, r5, r1, lsr #24
    4f34:	0010c800 	andseq	ip, r0, r0, lsl #16
    4f38:	c8000108 	stmdagt	r0, {r3, r8}
    4f3c:	ce080010 	mcrgt	0, 0, r0, cr8, cr0, {0}
    4f40:	01080010 	tsteq	r8, r0, lsl r0
    4f44:	1f0909f3 	svcne	0x000909f3
    4f48:	0000455c 	andeq	r4, r0, ip, asr r5
    4f4c:	00002272 	andeq	r2, r0, r2, ror r2
    4f50:	0000226e 	andeq	r2, r0, lr, ror #4
    4f54:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4f58:	00229400 	eoreq	r9, r2, r0, lsl #8
    4f5c:	00229200 	eoreq	r9, r2, r0, lsl #4
    4f60:	45692000 	strbmi	r2, [r9, #-0]!
    4f64:	22a90000 	adccs	r0, r9, #0
    4f68:	22a70000 	adccs	r0, r7, #0
    4f6c:	00000000 	andeq	r0, r0, r0
    4f70:	0010dc1c 	andseq	sp, r0, ip, lsl ip
    4f74:	0010f408 	andseq	pc, r0, r8, lsl #8
    4f78:	0021f708 	eoreq	pc, r1, r8, lsl #14
    4f7c:	61761d00 	cmnvs	r6, r0, lsl #26
    4f80:	f901006c 			; <UNDEFINED> instruction: 0xf901006c
    4f84:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4f88:	22be0000 	adcscs	r0, lr, #0
    4f8c:	22bc0000 	adcscs	r0, ip, #0
    4f90:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4f94:	de000045 	cdple	0, 0, cr0, cr0, cr5, {2}
    4f98:	00080010 	andeq	r0, r8, r0, lsl r0
    4f9c:	0010de00 	andseq	sp, r0, r0, lsl #28
    4fa0:	0010e608 	andseq	lr, r0, r8, lsl #12
    4fa4:	09f90108 	ldmibeq	r9!, {r3, r8}^
    4fa8:	0021b709 	eoreq	fp, r1, r9, lsl #14
    4fac:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4fb0:	22d70000 	sbcscs	r0, r7, #0
    4fb4:	22d10000 	sbcscs	r0, r1, #0
    4fb8:	9d200000 	stcls	0, cr0, [r0, #-0]
    4fbc:	06000045 	streq	r0, [r0], -r5, asr #32
    4fc0:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    4fc4:	00000023 	andeq	r0, r0, r3, lsr #32
    4fc8:	00453c21 	subeq	r3, r5, r1, lsr #24
    4fcc:	0010ea00 	andseq	lr, r0, r0, lsl #20
    4fd0:	ea000108 	b	53f8 <_Min_Heap_Size+0x4bf8>
    4fd4:	f0080010 			; <UNDEFINED> instruction: 0xf0080010
    4fd8:	01080010 	tsteq	r8, r0, lsl r0
    4fdc:	1f0909f9 	svcne	0x000909f9
    4fe0:	0000455c 	andeq	r4, r0, ip, asr r5
    4fe4:	0000231d 	andeq	r2, r0, sp, lsl r3
    4fe8:	00002319 	andeq	r2, r0, r9, lsl r3
    4fec:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4ff0:	00233f00 	eoreq	r3, r3, r0, lsl #30
    4ff4:	00233d00 	eoreq	r3, r3, r0, lsl #26
    4ff8:	45692000 	strbmi	r2, [r9, #-0]!
    4ffc:	23540000 	cmpcs	r4, #0
    5000:	23520000 	cmpcs	r2, #0
    5004:	00000000 	andeq	r0, r0, r0
    5008:	0010fe23 	andseq	pc, r0, r3, lsr #28
    500c:	001a8f08 	andseq	r8, sl, r8, lsl #30
    5010:	50011900 	andpl	r1, r1, r0, lsl #18
    5014:	00007402 	andeq	r7, r0, r2, lsl #8
    5018:	0ee61800 	cdpeq	8, 14, cr1, cr6, cr0, {0}
    501c:	079c0800 	ldreq	r0, [ip, r0, lsl #16]
    5020:	221c0000 	andscs	r0, ip, #0
    5024:	01190000 	tsteq	r9, r0
    5028:	00740250 	rsbseq	r0, r4, r0, asr r2
    502c:	0f5c1800 	svceq	0x005c1800
    5030:	0af50800 	beq	ffd47038 <_estack+0xdfd45e00>
    5034:	22300000 	eorscs	r0, r0, #0
    5038:	01190000 	tsteq	r9, r0
    503c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5040:	0f8c1a00 	svceq	0x008c1a00
    5044:	460f0800 	strmi	r0, [pc], -r0, lsl #16
    5048:	9e180000 	cdpls	0, 1, cr0, cr8, cr0, {0}
    504c:	9c08000f 	stcls	0, cr0, [r8], {15}
    5050:	4d000007 	stcmi	0, cr0, [r0, #-28]	; 0xffffffe4
    5054:	19000022 	stmdbne	r0, {r1, r5}
    5058:	74025001 	strvc	r5, [r2], #-1
    505c:	a6180000 	ldrge	r0, [r8], -r0
    5060:	4a08000f 	bmi	2050a4 <_Min_Heap_Size+0x2048a4>
    5064:	6100001b 	tstvs	r0, fp, lsl r0
    5068:	19000022 	stmdbne	r0, {r1, r5}
    506c:	74025001 	strvc	r5, [r2], #-1
    5070:	ae180000 	cdpge	0, 1, cr0, cr8, cr0, {0}
    5074:	4a08000f 	bmi	2050b8 <_Min_Heap_Size+0x2048b8>
    5078:	7500001b 	strvc	r0, [r0, #-27]	; 0xffffffe5
    507c:	19000022 	stmdbne	r0, {r1, r5}
    5080:	74025001 	strvc	r5, [r2], #-1
    5084:	b6180000 	ldrlt	r0, [r8], -r0
    5088:	4a08000f 	bmi	2050cc <_Min_Heap_Size+0x2048cc>
    508c:	8900001b 	stmdbhi	r0, {r0, r1, r3, r4}
    5090:	19000022 	stmdbne	r0, {r1, r5}
    5094:	74025001 	strvc	r5, [r2], #-1
    5098:	06180000 	ldreq	r0, [r8], -r0
    509c:	1b080011 	blne	2050e8 <_Min_Heap_Size+0x2048e8>
    50a0:	9d000009 	stcls	0, cr0, [r0, #-36]	; 0xffffffdc
    50a4:	19000022 	stmdbne	r0, {r1, r5}
    50a8:	74025001 	strvc	r5, [r2], #-1
    50ac:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
    50b0:	d5080011 	strle	r0, [r8, #-17]	; 0xffffffef
    50b4:	19000008 	stmdbne	r0, {r3}
    50b8:	74025001 	strvc	r5, [r2], #-1
    50bc:	2c000000 	stccs	0, cr0, [r0], {-0}
    50c0:	0013e101 	andseq	lr, r3, r1, lsl #2
    50c4:	08e00100 	stmiaeq	r0!, {r8}^
    50c8:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    50d4:	23670000 	cmncs	r7, #0
    50d8:	71010000 	mrsvc	r0, (UNDEF: 1)
    50dc:	16000025 	strne	r0, [r0], -r5, lsr #32
    50e0:	000014f7 	strdeq	r1, [r0], -r7
    50e4:	4008e001 	andmi	lr, r8, r1
    50e8:	00000796 	muleq	r0, r6, r7
    50ec:	00002395 	muleq	r0, r5, r3
    50f0:	00002387 	andeq	r2, r0, r7, lsl #7
    50f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    50f8:	00000000 	andeq	r0, r0, r0
    50fc:	00237b00 	eoreq	r7, r3, r0, lsl #22
    5100:	61761d00 	cmnvs	r6, r0, lsl #26
    5104:	e301006c 	movw	r0, #4204	; 0x106c
    5108:	00c60308 	sbceq	r0, r6, r8, lsl #6
    510c:	23ef0000 	mvncs	r0, #0
    5110:	23ed0000 	mvncs	r0, #0
    5114:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    5118:	00000045 	andeq	r0, r0, r5, asr #32
	...
    5128:	08e30100 	stmiaeq	r3!, {r8}^
    512c:	00233b03 	eoreq	r3, r3, r3, lsl #22
    5130:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    5134:	24080000 	strcs	r0, [r8], #-0
    5138:	24020000 	strcs	r0, [r2], #-0
    513c:	9d200000 	stcls	0, cr0, [r0, #-0]
    5140:	37000045 	strcc	r0, [r0, -r5, asr #32]
    5144:	35000024 	strcc	r0, [r0, #-36]	; 0xffffffdc
    5148:	00000024 	andeq	r0, r0, r4, lsr #32
    514c:	00453c21 	subeq	r3, r5, r1, lsr #24
    5150:	00000000 	andeq	r0, r0, r0
    5154:	00000100 	andeq	r0, r0, r0, lsl #2
    5158:	00000000 	andeq	r0, r0, r0
    515c:	01000000 	mrseq	r0, (UNDEF: 0)
    5160:	1f0308e3 	svcne	0x000308e3
    5164:	0000455c 	andeq	r4, r0, ip, asr r5
    5168:	0000244e 	andeq	r2, r0, lr, asr #8
    516c:	0000244a 	andeq	r2, r0, sl, asr #8
    5170:	00454f1f 	subeq	r4, r5, pc, lsl pc
    5174:	00247000 	eoreq	r7, r4, r0
    5178:	00246e00 	eoreq	r6, r4, r0, lsl #28
    517c:	45692000 	strbmi	r2, [r9, #-0]!
    5180:	24850000 	strcs	r0, [r5], #0
    5184:	24830000 	strcs	r0, [r3], #0
    5188:	00000000 	andeq	r0, r0, r0
    518c:	0000001c 	andeq	r0, r0, ip, lsl r0
    5190:	00000000 	andeq	r0, r0, r0
    5194:	00241300 	eoreq	r1, r4, r0, lsl #6
    5198:	61761d00 	cmnvs	r6, r0, lsl #26
    519c:	e401006c 	str	r0, [r1], #-108	; 0xffffff94
    51a0:	00c60308 	sbceq	r0, r6, r8, lsl #6
    51a4:	249a0000 	ldrcs	r0, [sl], #0
    51a8:	24980000 	ldrcs	r0, [r8], #0
    51ac:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    51b0:	00000045 	andeq	r0, r0, r5, asr #32
	...
    51c0:	08e40100 	stmiaeq	r4!, {r8}^
    51c4:	0023d303 	eoreq	sp, r3, r3, lsl #6
    51c8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    51cc:	24b30000 	ldrtcs	r0, [r3], #0
    51d0:	24ad0000 	strtcs	r0, [sp], #0
    51d4:	9d200000 	stcls	0, cr0, [r0, #-0]
    51d8:	e2000045 	and	r0, r0, #69	; 0x45
    51dc:	e0000024 	and	r0, r0, r4, lsr #32
    51e0:	00000024 	andeq	r0, r0, r4, lsr #32
    51e4:	00453c21 	subeq	r3, r5, r1, lsr #24
    51e8:	00000000 	andeq	r0, r0, r0
    51ec:	00000100 	andeq	r0, r0, r0, lsl #2
    51f0:	00000000 	andeq	r0, r0, r0
    51f4:	01000000 	mrseq	r0, (UNDEF: 0)
    51f8:	1f0308e4 	svcne	0x000308e4
    51fc:	0000455c 	andeq	r4, r0, ip, asr r5
    5200:	000024f9 	strdeq	r2, [r0], -r9
    5204:	000024f5 	strdeq	r2, [r0], -r5
    5208:	00454f1f 	subeq	r4, r5, pc, lsl pc
    520c:	00251b00 	eoreq	r1, r5, r0, lsl #22
    5210:	00251900 	eoreq	r1, r5, r0, lsl #18
    5214:	45692000 	strbmi	r2, [r9, #-0]!
    5218:	25300000 	ldrcs	r0, [r0, #-0]!
    521c:	252e0000 	strcs	r0, [lr, #-0]!
    5220:	00000000 	andeq	r0, r0, r0
    5224:	0000001c 	andeq	r0, r0, ip, lsl r0
    5228:	00000000 	andeq	r0, r0, r0
    522c:	0024ab00 	eoreq	sl, r4, r0, lsl #22
    5230:	61761d00 	cmnvs	r6, r0, lsl #26
    5234:	e901006c 	stmdb	r1, {r2, r3, r5, r6}
    5238:	00c60508 	sbceq	r0, r6, r8, lsl #10
    523c:	25450000 	strbcs	r0, [r5, #-0]
    5240:	25430000 	strbcs	r0, [r3, #-0]
    5244:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    5248:	00000045 	andeq	r0, r0, r5, asr #32
	...
    5258:	08e90100 	stmiaeq	r9!, {r8}^
    525c:	00246b05 	eoreq	r6, r4, r5, lsl #22
    5260:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    5264:	255e0000 	ldrbcs	r0, [lr, #-0]
    5268:	25580000 	ldrbcs	r0, [r8, #-0]
    526c:	9d200000 	stcls	0, cr0, [r0, #-0]
    5270:	8d000045 	stchi	0, cr0, [r0, #-276]	; 0xfffffeec
    5274:	8b000025 	blhi	5310 <_Min_Heap_Size+0x4b10>
    5278:	00000025 	andeq	r0, r0, r5, lsr #32
    527c:	00453c21 	subeq	r3, r5, r1, lsr #24
    5280:	00000000 	andeq	r0, r0, r0
    5284:	00000100 	andeq	r0, r0, r0, lsl #2
    5288:	00000000 	andeq	r0, r0, r0
    528c:	01000000 	mrseq	r0, (UNDEF: 0)
    5290:	1f0508e9 	svcne	0x000508e9
    5294:	0000455c 	andeq	r4, r0, ip, asr r5
    5298:	000025a4 	andeq	r2, r0, r4, lsr #11
    529c:	000025a0 	andeq	r2, r0, r0, lsr #11
    52a0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    52a4:	0025c600 	eoreq	ip, r5, r0, lsl #12
    52a8:	0025c400 	eoreq	ip, r5, r0, lsl #8
    52ac:	45692000 	strbmi	r2, [r9, #-0]!
    52b0:	25db0000 	ldrbcs	r0, [fp]
    52b4:	25d90000 	ldrbcs	r0, [r9]
    52b8:	00000000 	andeq	r0, r0, r0
    52bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    52c0:	00000000 	andeq	r0, r0, r0
    52c4:	00254300 	eoreq	r4, r5, r0, lsl #6
    52c8:	61761d00 	cmnvs	r6, r0, lsl #26
    52cc:	ef01006c 	svc	0x0001006c
    52d0:	00c60508 	sbceq	r0, r6, r8, lsl #10
    52d4:	25f00000 	ldrbcs	r0, [r0, #0]!
    52d8:	25ee0000 	strbcs	r0, [lr, #0]!
    52dc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    52e0:	00000045 	andeq	r0, r0, r5, asr #32
	...
    52f0:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    52f4:	00250305 	eoreq	r0, r5, r5, lsl #6
    52f8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    52fc:	26090000 	strcs	r0, [r9], -r0
    5300:	26030000 	strcs	r0, [r3], -r0
    5304:	9d200000 	stcls	0, cr0, [r0, #-0]
    5308:	38000045 	stmdacc	r0, {r0, r2, r6}
    530c:	36000026 	strcc	r0, [r0], -r6, lsr #32
    5310:	00000026 	andeq	r0, r0, r6, lsr #32
    5314:	00453c21 	subeq	r3, r5, r1, lsr #24
    5318:	00000000 	andeq	r0, r0, r0
    531c:	00000100 	andeq	r0, r0, r0, lsl #2
    5320:	00000000 	andeq	r0, r0, r0
    5324:	01000000 	mrseq	r0, (UNDEF: 0)
    5328:	1f0508ef 	svcne	0x000508ef
    532c:	0000455c 	andeq	r4, r0, ip, asr r5
    5330:	0000264f 	andeq	r2, r0, pc, asr #12
    5334:	0000264b 	andeq	r2, r0, fp, asr #12
    5338:	00454f1f 	subeq	r4, r5, pc, lsl pc
    533c:	00267100 	eoreq	r7, r6, r0, lsl #2
    5340:	00266f00 	eoreq	r6, r6, r0, lsl #30
    5344:	45692000 	strbmi	r2, [r9, #-0]!
    5348:	26860000 	strcs	r0, [r6], r0
    534c:	26840000 	strcs	r0, [r4], r0
    5350:	00000000 	andeq	r0, r0, r0
    5354:	0000001a 	andeq	r0, r0, sl, lsl r0
    5358:	00460f00 	subeq	r0, r6, r0, lsl #30
    535c:	00001800 	andeq	r1, r0, r0, lsl #16
    5360:	1ac90000 	bne	ff245368 <_estack+0xdf244130>
    5364:	25600000 	strbcs	r0, [r0, #-0]!
    5368:	01190000 	tsteq	r9, r0
    536c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5370:	00002300 	andeq	r2, r0, r0, lsl #6
    5374:	1ac90000 	bne	ff24537c <_estack+0xdf244144>
    5378:	01190000 	tsteq	r9, r0
    537c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5380:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    5384:	0000129a 	muleq	r0, sl, r2
    5388:	13089301 	movwne	r9, #33537	; 0x8301
    538c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5398:	00269900 	eoreq	r9, r6, r0, lsl #18
    539c:	27040100 	strcs	r0, [r4, -r0, lsl #2]
    53a0:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    53a4:	01000014 	tsteq	r0, r4, lsl r0
    53a8:	96410893 			; <UNDEFINED> instruction: 0x96410893
    53ac:	c7000007 	strgt	r0, [r0, -r7]
    53b0:	b9000026 	stmdblt	r0, {r1, r2, r5}
    53b4:	1c000026 	stcne	0, cr0, [r0], {38}	; 0x26
	...
    53c0:	0000263e 	andeq	r2, r0, lr, lsr r6
    53c4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    53c8:	08960100 	ldmeq	r6, {r8}
    53cc:	0000c603 	andeq	ip, r0, r3, lsl #12
    53d0:	00272100 	eoreq	r2, r7, r0, lsl #2
    53d4:	00271f00 	eoreq	r1, r7, r0, lsl #30
    53d8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    53ec:	03089601 	movweq	r9, #34305	; 0x8601
    53f0:	000025fe 	strdeq	r2, [r0], -lr
    53f4:	0045901f 	subeq	r9, r5, pc, lsl r0
    53f8:	00273a00 	eoreq	r3, r7, r0, lsl #20
    53fc:	00273400 	eoreq	r3, r7, r0, lsl #8
    5400:	459d2000 	ldrmi	r2, [sp]
    5404:	27690000 	strbcs	r0, [r9, -r0]!
    5408:	27670000 	strbcs	r0, [r7, -r0]!
    540c:	21000000 	mrscs	r0, (UNDEF: 0)
    5410:	0000453c 	andeq	r4, r0, ip, lsr r5
    5414:	00000000 	andeq	r0, r0, r0
    5418:	00000001 	andeq	r0, r0, r1
    541c:	00000000 	andeq	r0, r0, r0
    5420:	96010000 	strls	r0, [r1], -r0
    5424:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    5428:	80000045 	andhi	r0, r0, r5, asr #32
    542c:	7c000027 	stcvc	0, cr0, [r0], {39}	; 0x27
    5430:	1f000027 	svcne	0x00000027
    5434:	0000454f 	andeq	r4, r0, pc, asr #10
    5438:	000027a2 	andeq	r2, r0, r2, lsr #15
    543c:	000027a0 	andeq	r2, r0, r0, lsr #15
    5440:	00456920 	subeq	r6, r5, r0, lsr #18
    5444:	0027b700 	eoreq	fp, r7, r0, lsl #14
    5448:	0027b500 	eoreq	fp, r7, r0, lsl #10
    544c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5458:	000026d6 	ldrdeq	r2, [r0], -r6
    545c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5460:	089b0100 	ldmeq	fp, {r8}
    5464:	0000c605 	andeq	ip, r0, r5, lsl #12
    5468:	0027cc00 	eoreq	ip, r7, r0, lsl #24
    546c:	0027ca00 	eoreq	ip, r7, r0, lsl #20
    5470:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5484:	05089b01 	streq	r9, [r8, #-2817]	; 0xfffff4ff
    5488:	00002696 	muleq	r0, r6, r6
    548c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5490:	0027e500 	eoreq	lr, r7, r0, lsl #10
    5494:	0027df00 	eoreq	sp, r7, r0, lsl #30
    5498:	459d2000 	ldrmi	r2, [sp]
    549c:	28140000 	ldmdacs	r4, {}	; <UNPREDICTABLE>
    54a0:	28120000 	ldmdacs	r2, {}	; <UNPREDICTABLE>
    54a4:	21000000 	mrscs	r0, (UNDEF: 0)
    54a8:	0000453c 	andeq	r4, r0, ip, lsr r5
    54ac:	00000000 	andeq	r0, r0, r0
    54b0:	00000001 	andeq	r0, r0, r1
    54b4:	00000000 	andeq	r0, r0, r0
    54b8:	9b010000 	blls	454c0 <_Min_Heap_Size+0x44cc0>
    54bc:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    54c0:	2b000045 	blcs	55dc <_Min_Heap_Size+0x4ddc>
    54c4:	27000028 	strcs	r0, [r0, -r8, lsr #32]
    54c8:	1f000028 	svcne	0x00000028
    54cc:	0000454f 	andeq	r4, r0, pc, asr #10
    54d0:	0000284d 	andeq	r2, r0, sp, asr #16
    54d4:	0000284b 	andeq	r2, r0, fp, asr #16
    54d8:	00456920 	subeq	r6, r5, r0, lsr #18
    54dc:	00286200 	eoreq	r6, r8, r0, lsl #4
    54e0:	00286000 	eoreq	r6, r8, r0
    54e4:	1a000000 	bne	54ec <_Min_Heap_Size+0x4cec>
    54e8:	00000000 	andeq	r0, r0, r0
    54ec:	0000460f 	andeq	r4, r0, pc, lsl #12
    54f0:	00000018 	andeq	r0, r0, r8, lsl r0
    54f4:	001af400 	andseq	pc, sl, r0, lsl #8
    54f8:	0026f300 	eoreq	pc, r6, r0, lsl #6
    54fc:	50011900 	andpl	r1, r1, r0, lsl #18
    5500:	00007402 	andeq	r7, r0, r2, lsl #8
    5504:	00000023 	andeq	r0, r0, r3, lsr #32
    5508:	001af400 	andseq	pc, sl, r0, lsl #8
    550c:	50011900 	andpl	r1, r1, r0, lsl #18
    5510:	00007402 	andeq	r7, r0, r2, lsl #8
    5514:	a7012700 	strge	r2, [r1, -r0, lsl #14]
    5518:	01000013 	tsteq	r0, r3, lsl r0
    551c:	0113080c 	tsteq	r3, ip, lsl #16
    5520:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    552c:	00002875 	andeq	r2, r0, r5, ror r8
    5530:	002a6901 	eoreq	r6, sl, r1, lsl #18
    5534:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    5538:	0c010000 	stceq	0, cr0, [r1], {-0}
    553c:	07963908 	ldreq	r3, [r6, r8, lsl #18]
    5540:	289f0000 	ldmcs	pc, {}	; <UNPREDICTABLE>
    5544:	28950000 	ldmcs	r5, {}	; <UNPREDICTABLE>
    5548:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    554c:	01000012 	tsteq	r0, r2, lsl r0
    5550:	c60c080e 	strgt	r0, [ip], -lr, lsl #16
    5554:	eb000000 	bl	555c <_Min_Heap_Size+0x4d5c>
    5558:	e1000028 	tst	r0, r8, lsr #32
    555c:	1c000028 	stcne	0, cr0, [r0], {40}	; 0x28
	...
    5568:	000027e6 	andeq	r2, r0, r6, ror #15
    556c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5570:	08110100 	ldmdaeq	r1, {r8}
    5574:	0000c603 	andeq	ip, r0, r3, lsl #12
    5578:	00292f00 	eoreq	r2, r9, r0, lsl #30
    557c:	00292d00 	eoreq	r2, r9, r0, lsl #26
    5580:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5594:	03081101 	movweq	r1, #33025	; 0x8101
    5598:	000027a6 	andeq	r2, r0, r6, lsr #15
    559c:	0045901f 	subeq	r9, r5, pc, lsl r0
    55a0:	00294800 	eoreq	r4, r9, r0, lsl #16
    55a4:	00294200 	eoreq	r4, r9, r0, lsl #4
    55a8:	459d2000 	ldrmi	r2, [sp]
    55ac:	29770000 	ldmdbcs	r7!, {}^	; <UNPREDICTABLE>
    55b0:	29750000 	ldmdbcs	r5!, {}^	; <UNPREDICTABLE>
    55b4:	21000000 	mrscs	r0, (UNDEF: 0)
    55b8:	0000453c 	andeq	r4, r0, ip, lsr r5
    55bc:	00000000 	andeq	r0, r0, r0
    55c0:	00000001 	andeq	r0, r0, r1
    55c4:	00000000 	andeq	r0, r0, r0
    55c8:	11010000 	mrsne	r0, (UNDEF: 1)
    55cc:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    55d0:	8e000045 	cdphi	0, 0, cr0, cr0, cr5, {2}
    55d4:	8a000029 	bhi	5680 <_Min_Heap_Size+0x4e80>
    55d8:	1f000029 	svcne	0x00000029
    55dc:	0000454f 	andeq	r4, r0, pc, asr #10
    55e0:	000029b0 			; <UNDEFINED> instruction: 0x000029b0
    55e4:	000029ae 	andeq	r2, r0, lr, lsr #19
    55e8:	00456920 	subeq	r6, r5, r0, lsr #18
    55ec:	0029c500 	eoreq	ip, r9, r0, lsl #10
    55f0:	0029c300 	eoreq	ip, r9, r0, lsl #6
    55f4:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5600:	0000287e 	andeq	r2, r0, lr, ror r8
    5604:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5608:	08120100 	ldmdaeq	r2, {r8}
    560c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5610:	0029da00 	eoreq	sp, r9, r0, lsl #20
    5614:	0029d800 	eoreq	sp, r9, r0, lsl #16
    5618:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    562c:	03081201 	movweq	r1, #33281	; 0x8201
    5630:	0000283e 	andeq	r2, r0, lr, lsr r8
    5634:	0045901f 	subeq	r9, r5, pc, lsl r0
    5638:	0029f300 	eoreq	pc, r9, r0, lsl #6
    563c:	0029ed00 	eoreq	lr, r9, r0, lsl #26
    5640:	459d2000 	ldrmi	r2, [sp]
    5644:	2a220000 	bcs	88564c <_Min_Heap_Size+0x884e4c>
    5648:	2a200000 	bcs	805650 <_Min_Heap_Size+0x804e50>
    564c:	21000000 	mrscs	r0, (UNDEF: 0)
    5650:	0000453c 	andeq	r4, r0, ip, lsr r5
    5654:	00000000 	andeq	r0, r0, r0
    5658:	00000001 	andeq	r0, r0, r1
    565c:	00000000 	andeq	r0, r0, r0
    5660:	12010000 	andne	r0, r1, #0
    5664:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    5668:	39000045 	stmdbcc	r0, {r0, r2, r6}
    566c:	3500002a 	strcc	r0, [r0, #-42]	; 0xffffffd6
    5670:	1f00002a 	svcne	0x0000002a
    5674:	0000454f 	andeq	r4, r0, pc, asr #10
    5678:	00002a5b 	andeq	r2, r0, fp, asr sl
    567c:	00002a59 	andeq	r2, r0, r9, asr sl
    5680:	00456920 	subeq	r6, r5, r0, lsr #18
    5684:	002a7000 	eoreq	r7, sl, r0
    5688:	002a6e00 	eoreq	r6, sl, r0, lsl #28
    568c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5698:	00002916 	andeq	r2, r0, r6, lsl r9
    569c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    56a0:	08170100 	ldmdaeq	r7, {r8}
    56a4:	0000c605 	andeq	ip, r0, r5, lsl #12
    56a8:	002a8500 	eoreq	r8, sl, r0, lsl #10
    56ac:	002a8300 	eoreq	r8, sl, r0, lsl #6
    56b0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    56c4:	05081701 	streq	r1, [r8, #-1793]	; 0xfffff8ff
    56c8:	000028d6 	ldrdeq	r2, [r0], -r6
    56cc:	0045901f 	subeq	r9, r5, pc, lsl r0
    56d0:	002a9e00 	eoreq	r9, sl, r0, lsl #28
    56d4:	002a9800 	eoreq	r9, sl, r0, lsl #16
    56d8:	459d2000 	ldrmi	r2, [sp]
    56dc:	2acd0000 	bcs	ff3456e4 <_estack+0xdf3444ac>
    56e0:	2acb0000 	bcs	ff2c56e8 <_estack+0xdf2c44b0>
    56e4:	21000000 	mrscs	r0, (UNDEF: 0)
    56e8:	0000453c 	andeq	r4, r0, ip, lsr r5
    56ec:	00000000 	andeq	r0, r0, r0
    56f0:	00000001 	andeq	r0, r0, r1
    56f4:	00000000 	andeq	r0, r0, r0
    56f8:	17010000 	strne	r0, [r1, -r0]
    56fc:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    5700:	e4000045 	str	r0, [r0], #-69	; 0xffffffbb
    5704:	e000002a 	and	r0, r0, sl, lsr #32
    5708:	1f00002a 	svcne	0x0000002a
    570c:	0000454f 	andeq	r4, r0, pc, asr #10
    5710:	00002b06 	andeq	r2, r0, r6, lsl #22
    5714:	00002b04 	andeq	r2, r0, r4, lsl #22
    5718:	00456920 	subeq	r6, r5, r0, lsr #18
    571c:	002b1b00 	eoreq	r1, fp, r0, lsl #22
    5720:	002b1900 	eoreq	r1, fp, r0, lsl #18
    5724:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5730:	000029ae 	andeq	r2, r0, lr, lsr #19
    5734:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5738:	083d0100 	ldmdaeq	sp!, {r8}
    573c:	0000c605 	andeq	ip, r0, r5, lsl #12
    5740:	002b3200 	eoreq	r3, fp, r0, lsl #4
    5744:	002b2e00 	eoreq	r2, fp, r0, lsl #28
    5748:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    575c:	05083d01 	streq	r3, [r8, #-3329]	; 0xfffff2ff
    5760:	0000296e 	andeq	r2, r0, lr, ror #18
    5764:	0045901f 	subeq	r9, r5, pc, lsl r0
    5768:	002b5600 	eoreq	r5, fp, r0, lsl #12
    576c:	002b5000 	eoreq	r5, fp, r0
    5770:	459d2000 	ldrmi	r2, [sp]
    5774:	2b850000 	blcs	fe14577c <_estack+0xde144544>
    5778:	2b830000 	blcs	fe0c5780 <_estack+0xde0c4548>
    577c:	21000000 	mrscs	r0, (UNDEF: 0)
    5780:	0000453c 	andeq	r4, r0, ip, lsr r5
    5784:	00000000 	andeq	r0, r0, r0
    5788:	00000001 	andeq	r0, r0, r1
    578c:	00000000 	andeq	r0, r0, r0
    5790:	3d010000 	stccc	0, cr0, [r1, #-0]
    5794:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    5798:	9c000045 	stcls	0, cr0, [r0], {69}	; 0x45
    579c:	9800002b 	stmdals	r0, {r0, r1, r3, r5}
    57a0:	1f00002b 	svcne	0x0000002b
    57a4:	0000454f 	andeq	r4, r0, pc, asr #10
    57a8:	00002bbe 			; <UNDEFINED> instruction: 0x00002bbe
    57ac:	00002bbc 			; <UNDEFINED> instruction: 0x00002bbc
    57b0:	00456920 	subeq	r6, r5, r0, lsr #18
    57b4:	002bd300 	eoreq	sp, fp, r0, lsl #6
    57b8:	002bd100 	eoreq	sp, fp, r0, lsl #2
    57bc:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    57c8:	00002a46 	andeq	r2, r0, r6, asr #20
    57cc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    57d0:	08540100 	ldmdaeq	r4, {r8}^
    57d4:	0000c605 	andeq	ip, r0, r5, lsl #12
    57d8:	002be800 	eoreq	lr, fp, r0, lsl #16
    57dc:	002be600 	eoreq	lr, fp, r0, lsl #12
    57e0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    57f4:	05085401 	streq	r5, [r8, #-1025]	; 0xfffffbff
    57f8:	00002a06 	andeq	r2, r0, r6, lsl #20
    57fc:	0045901f 	subeq	r9, r5, pc, lsl r0
    5800:	002c0100 	eoreq	r0, ip, r0, lsl #2
    5804:	002bfb00 	eoreq	pc, fp, r0, lsl #22
    5808:	459d2000 	ldrmi	r2, [sp]
    580c:	2c300000 	ldccs	0, cr0, [r0], #-0
    5810:	2c2e0000 	stccs	0, cr0, [lr], #-0
    5814:	21000000 	mrscs	r0, (UNDEF: 0)
    5818:	0000453c 	andeq	r4, r0, ip, lsr r5
    581c:	00000000 	andeq	r0, r0, r0
    5820:	00000001 	andeq	r0, r0, r1
    5824:	00000000 	andeq	r0, r0, r0
    5828:	54010000 	strpl	r0, [r1], #-0
    582c:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    5830:	47000045 	strmi	r0, [r0, -r5, asr #32]
    5834:	4300002c 	movwmi	r0, #44	; 0x2c
    5838:	1f00002c 	svcne	0x0000002c
    583c:	0000454f 	andeq	r4, r0, pc, asr #10
    5840:	00002c69 	andeq	r2, r0, r9, ror #24
    5844:	00002c67 	andeq	r2, r0, r7, ror #24
    5848:	00456920 	subeq	r6, r5, r0, lsr #18
    584c:	002c7e00 	eoreq	r7, ip, r0, lsl #28
    5850:	002c7c00 	eoreq	r7, ip, r0, lsl #24
    5854:	1a000000 	bne	585c <_Min_Heap_Size+0x505c>
    5858:	00000000 	andeq	r0, r0, r0
    585c:	0000460f 	andeq	r4, r0, pc, lsl #12
    5860:	0000001a 	andeq	r0, r0, sl, lsl r0
    5864:	00460f00 	subeq	r0, r6, r0, lsl #30
    5868:	00002300 	andeq	r2, r0, r0, lsl #6
    586c:	1b1f0000 	blne	7c5874 <_Min_Heap_Size+0x7c5074>
    5870:	01190000 	tsteq	r9, r0
    5874:	00740250 	rsbseq	r0, r4, r0, asr r2
    5878:	01270000 			; <UNDEFINED> instruction: 0x01270000
    587c:	00001120 	andeq	r1, r0, r0, lsr #2
    5880:	1307cf01 	movwne	ip, #32513	; 0x7f01
    5884:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5890:	002c9100 	eoreq	r9, ip, r0, lsl #2
    5894:	2d110100 	ldfcss	f0, [r1, #-0]
    5898:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    589c:	01000014 	tsteq	r0, r4, lsl r0
    58a0:	963d07cf 	ldrtls	r0, [sp], -pc, asr #15
    58a4:	b9000007 	stmdblt	r0, {r0, r1, r2}
    58a8:	b100002c 	tstlt	r0, ip, lsr #32
    58ac:	1c00002c 	stcne	0, cr0, [r0], {44}	; 0x2c
	...
    58b8:	00002b36 	andeq	r2, r0, r6, lsr fp
    58bc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    58c0:	07d20100 	ldrbeq	r0, [r2, r0, lsl #2]
    58c4:	0000c603 	andeq	ip, r0, r3, lsl #12
    58c8:	002cef00 	eoreq	lr, ip, r0, lsl #30
    58cc:	002ced00 	eoreq	lr, ip, r0, lsl #26
    58d0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    58e4:	0307d201 	movweq	sp, #29185	; 0x7201
    58e8:	00002af6 	strdeq	r2, [r0], -r6
    58ec:	0045901f 	subeq	r9, r5, pc, lsl r0
    58f0:	002d0800 	eoreq	r0, sp, r0, lsl #16
    58f4:	002d0200 	eoreq	r0, sp, r0, lsl #4
    58f8:	459d2000 	ldrmi	r2, [sp]
    58fc:	2d370000 	ldccs	0, cr0, [r7, #-0]
    5900:	2d350000 	ldccs	0, cr0, [r5, #-0]
    5904:	21000000 	mrscs	r0, (UNDEF: 0)
    5908:	0000453c 	andeq	r4, r0, ip, lsr r5
    590c:	00000000 	andeq	r0, r0, r0
    5910:	00000001 	andeq	r0, r0, r1
    5914:	00000000 	andeq	r0, r0, r0
    5918:	d2010000 	andle	r0, r1, #0
    591c:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5920:	4e000045 	cdpmi	0, 0, cr0, cr0, cr5, {2}
    5924:	4a00002d 	bmi	59e0 <_Min_Heap_Size+0x51e0>
    5928:	1f00002d 	svcne	0x0000002d
    592c:	0000454f 	andeq	r4, r0, pc, asr #10
    5930:	00002d70 	andeq	r2, r0, r0, ror sp
    5934:	00002d6e 	andeq	r2, r0, lr, ror #26
    5938:	00456920 	subeq	r6, r5, r0, lsr #18
    593c:	002d8500 	eoreq	r8, sp, r0, lsl #10
    5940:	002d8300 	eoreq	r8, sp, r0, lsl #6
    5944:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5950:	00002bce 	andeq	r2, r0, lr, asr #23
    5954:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5958:	07d30100 	ldrbeq	r0, [r3, r0, lsl #2]
    595c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5960:	002d9a00 	eoreq	r9, sp, r0, lsl #20
    5964:	002d9800 	eoreq	r9, sp, r0, lsl #16
    5968:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    597c:	0307d301 	movweq	sp, #29441	; 0x7301
    5980:	00002b8e 	andeq	r2, r0, lr, lsl #23
    5984:	0045901f 	subeq	r9, r5, pc, lsl r0
    5988:	002db300 	eoreq	fp, sp, r0, lsl #6
    598c:	002dad00 	eoreq	sl, sp, r0, lsl #26
    5990:	459d2000 	ldrmi	r2, [sp]
    5994:	2de20000 	stclcs	0, cr0, [r2]
    5998:	2de00000 	stclcs	0, cr0, [r0]
    599c:	21000000 	mrscs	r0, (UNDEF: 0)
    59a0:	0000453c 	andeq	r4, r0, ip, lsr r5
    59a4:	00000000 	andeq	r0, r0, r0
    59a8:	00000001 	andeq	r0, r0, r1
    59ac:	00000000 	andeq	r0, r0, r0
    59b0:	d3010000 	movwle	r0, #4096	; 0x1000
    59b4:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    59b8:	f9000045 			; <UNDEFINED> instruction: 0xf9000045
    59bc:	f500002d 			; <UNDEFINED> instruction: 0xf500002d
    59c0:	1f00002d 	svcne	0x0000002d
    59c4:	0000454f 	andeq	r4, r0, pc, asr #10
    59c8:	00002e1b 	andeq	r2, r0, fp, lsl lr
    59cc:	00002e19 	andeq	r2, r0, r9, lsl lr
    59d0:	00456920 	subeq	r6, r5, r0, lsr #18
    59d4:	002e3000 	eoreq	r3, lr, r0
    59d8:	002e2e00 	eoreq	r2, lr, r0, lsl #28
    59dc:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    59e8:	00002c66 	andeq	r2, r0, r6, ror #24
    59ec:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    59f0:	07d80100 	ldrbeq	r0, [r8, r0, lsl #2]
    59f4:	0000c605 	andeq	ip, r0, r5, lsl #12
    59f8:	002e4500 	eoreq	r4, lr, r0, lsl #10
    59fc:	002e4300 	eoreq	r4, lr, r0, lsl #6
    5a00:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5a14:	0507d801 	streq	sp, [r7, #-2049]	; 0xfffff7ff
    5a18:	00002c26 	andeq	r2, r0, r6, lsr #24
    5a1c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5a20:	002e5e00 	eoreq	r5, lr, r0, lsl #28
    5a24:	002e5800 	eoreq	r5, lr, r0, lsl #16
    5a28:	459d2000 	ldrmi	r2, [sp]
    5a2c:	2e8d0000 	cdpcs	0, 8, cr0, cr13, cr0, {0}
    5a30:	2e8b0000 	cdpcs	0, 8, cr0, cr11, cr0, {0}
    5a34:	21000000 	mrscs	r0, (UNDEF: 0)
    5a38:	0000453c 	andeq	r4, r0, ip, lsr r5
    5a3c:	00000000 	andeq	r0, r0, r0
    5a40:	00000001 	andeq	r0, r0, r1
    5a44:	00000000 	andeq	r0, r0, r0
    5a48:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    5a4c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5a50:	a4000045 	strge	r0, [r0], #-69	; 0xffffffbb
    5a54:	a000002e 	andge	r0, r0, lr, lsr #32
    5a58:	1f00002e 	svcne	0x0000002e
    5a5c:	0000454f 	andeq	r4, r0, pc, asr #10
    5a60:	00002ec6 	andeq	r2, r0, r6, asr #29
    5a64:	00002ec4 	andeq	r2, r0, r4, asr #29
    5a68:	00456920 	subeq	r6, r5, r0, lsr #18
    5a6c:	002edb00 	eoreq	sp, lr, r0, lsl #22
    5a70:	002ed900 	eoreq	sp, lr, r0, lsl #18
    5a74:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5a80:	00002cfe 	strdeq	r2, [r0], -lr
    5a84:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5a88:	07de0100 	ldrbeq	r0, [lr, r0, lsl #2]
    5a8c:	0000c605 	andeq	ip, r0, r5, lsl #12
    5a90:	002ef000 	eoreq	pc, lr, r0
    5a94:	002eee00 	eoreq	lr, lr, r0, lsl #28
    5a98:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5aac:	0507de01 	streq	sp, [r7, #-3585]	; 0xfffff1ff
    5ab0:	00002cbe 			; <UNDEFINED> instruction: 0x00002cbe
    5ab4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5ab8:	002f0900 	eoreq	r0, pc, r0, lsl #18
    5abc:	002f0300 	eoreq	r0, pc, r0, lsl #6
    5ac0:	459d2000 	ldrmi	r2, [sp]
    5ac4:	2f380000 	svccs	0x00380000
    5ac8:	2f360000 	svccs	0x00360000
    5acc:	21000000 	mrscs	r0, (UNDEF: 0)
    5ad0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5ad4:	00000000 	andeq	r0, r0, r0
    5ad8:	00000001 	andeq	r0, r0, r1
    5adc:	00000000 	andeq	r0, r0, r0
    5ae0:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    5ae4:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5ae8:	4f000045 	svcmi	0x00000045
    5aec:	4b00002f 	blmi	5bb0 <_Min_Heap_Size+0x53b0>
    5af0:	1f00002f 	svcne	0x0000002f
    5af4:	0000454f 	andeq	r4, r0, pc, asr #10
    5af8:	00002f71 	andeq	r2, r0, r1, ror pc
    5afc:	00002f6f 	andeq	r2, r0, pc, ror #30
    5b00:	00456920 	subeq	r6, r5, r0, lsr #18
    5b04:	002f8600 	eoreq	r8, pc, r0, lsl #12
    5b08:	002f8400 	eoreq	r8, pc, r0, lsl #8
    5b0c:	1a000000 	bne	5b14 <_Min_Heap_Size+0x5314>
    5b10:	00000000 	andeq	r0, r0, r0
    5b14:	00004600 	andeq	r4, r0, r0, lsl #12
    5b18:	0000001a 	andeq	r0, r0, sl, lsl r0
    5b1c:	00461e00 	subeq	r1, r6, r0, lsl #28
    5b20:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5b24:	00001460 	andeq	r1, r0, r0, ror #8
    5b28:	13079c01 	movwne	r9, #31745	; 0x7c01
    5b2c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5b38:	002f9900 	eoreq	r9, pc, r0, lsl #18
    5b3c:	2e890100 	rmfcse	f0, f1, f0
    5b40:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    5b44:	01000014 	tsteq	r0, r4, lsl r0
    5b48:	963e079c 			; <UNDEFINED> instruction: 0x963e079c
    5b4c:	bd000007 	stclt	0, cr0, [r0, #-28]	; 0xffffffe4
    5b50:	b900002f 	stmdblt	r0, {r0, r1, r2, r3, r5}
    5b54:	1c00002f 	stcne	0, cr0, [r0], {47}	; 0x2f
	...
    5b60:	00002dde 	ldrdeq	r2, [r0], -lr
    5b64:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5b68:	079f0100 	ldreq	r0, [pc, r0, lsl #2]
    5b6c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5b70:	002fdd00 	eoreq	sp, pc, r0, lsl #26
    5b74:	002fdb00 	eoreq	sp, pc, r0, lsl #22
    5b78:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5b8c:	03079f01 	movweq	r9, #32513	; 0x7f01
    5b90:	00002d9e 	muleq	r0, lr, sp
    5b94:	0045901f 	subeq	r9, r5, pc, lsl r0
    5b98:	002ff600 	eoreq	pc, pc, r0, lsl #12
    5b9c:	002ff000 	eoreq	pc, pc, r0
    5ba0:	459d2000 	ldrmi	r2, [sp]
    5ba4:	30250000 	eorcc	r0, r5, r0
    5ba8:	30230000 	eorcc	r0, r3, r0
    5bac:	21000000 	mrscs	r0, (UNDEF: 0)
    5bb0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5bb4:	00000000 	andeq	r0, r0, r0
    5bb8:	00000001 	andeq	r0, r0, r1
    5bbc:	00000000 	andeq	r0, r0, r0
    5bc0:	9f010000 	svcls	0x00010000
    5bc4:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5bc8:	3c000045 	stccc	0, cr0, [r0], {69}	; 0x45
    5bcc:	38000030 	stmdacc	r0, {r4, r5}
    5bd0:	1f000030 	svcne	0x00000030
    5bd4:	0000454f 	andeq	r4, r0, pc, asr #10
    5bd8:	0000305e 	andeq	r3, r0, lr, asr r0
    5bdc:	0000305c 	andeq	r3, r0, ip, asr r0
    5be0:	00456920 	subeq	r6, r5, r0, lsr #18
    5be4:	00307300 	eorseq	r7, r0, r0, lsl #6
    5be8:	00307100 	eorseq	r7, r0, r0, lsl #2
    5bec:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5bf8:	00002e76 	andeq	r2, r0, r6, ror lr
    5bfc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5c00:	07a40100 	streq	r0, [r4, r0, lsl #2]!
    5c04:	0000c605 	andeq	ip, r0, r5, lsl #12
    5c08:	00308800 	eorseq	r8, r0, r0, lsl #16
    5c0c:	00308600 	eorseq	r8, r0, r0, lsl #12
    5c10:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5c24:	0507a401 	streq	sl, [r7, #-1025]	; 0xfffffbff
    5c28:	00002e36 	andeq	r2, r0, r6, lsr lr
    5c2c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5c30:	0030a100 	eorseq	sl, r0, r0, lsl #2
    5c34:	00309b00 	eorseq	r9, r0, r0, lsl #22
    5c38:	459d2000 	ldrmi	r2, [sp]
    5c3c:	30d00000 	sbcscc	r0, r0, r0
    5c40:	30ce0000 	sbccc	r0, lr, r0
    5c44:	21000000 	mrscs	r0, (UNDEF: 0)
    5c48:	0000453c 	andeq	r4, r0, ip, lsr r5
    5c4c:	00000000 	andeq	r0, r0, r0
    5c50:	00000001 	andeq	r0, r0, r1
    5c54:	00000000 	andeq	r0, r0, r0
    5c58:	a4010000 	strge	r0, [r1], #-0
    5c5c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5c60:	e7000045 	str	r0, [r0, -r5, asr #32]
    5c64:	e3000030 	movw	r0, #48	; 0x30
    5c68:	1f000030 	svcne	0x00000030
    5c6c:	0000454f 	andeq	r4, r0, pc, asr #10
    5c70:	00003109 	andeq	r3, r0, r9, lsl #2
    5c74:	00003107 	andeq	r3, r0, r7, lsl #2
    5c78:	00456920 	subeq	r6, r5, r0, lsr #18
    5c7c:	00311e00 	eorseq	r1, r1, r0, lsl #28
    5c80:	00311c00 	eorseq	r1, r1, r0, lsl #24
    5c84:	1a000000 	bne	5c8c <_Min_Heap_Size+0x548c>
    5c88:	00000000 	andeq	r0, r0, r0
    5c8c:	00004600 	andeq	r4, r0, r0, lsl #12
    5c90:	0000001a 	andeq	r0, r0, sl, lsl r0
    5c94:	00461e00 	subeq	r1, r6, r0, lsl #28
    5c98:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5c9c:	000016f4 	strdeq	r1, [r0], -r4
    5ca0:	13074301 	movwne	r4, #29441	; 0x7301
    5ca4:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5cb0:	00313100 	eorseq	r3, r1, r0, lsl #2
    5cb4:	31db0100 	bicscc	r0, fp, r0, lsl #2
    5cb8:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    5cbc:	01000014 	tsteq	r0, r4, lsl r0
    5cc0:	96360743 	ldrtls	r0, [r6], -r3, asr #14
    5cc4:	59000007 	stmdbpl	r0, {r0, r1, r2}
    5cc8:	51000031 	tstpl	r0, r1, lsr r0
    5ccc:	1c000031 	stcne	0, cr0, [r0], {49}	; 0x31
	...
    5cd8:	00002f56 	andeq	r2, r0, r6, asr pc
    5cdc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5ce0:	07460100 	strbeq	r0, [r6, -r0, lsl #2]
    5ce4:	0000c603 	andeq	ip, r0, r3, lsl #12
    5ce8:	00318f00 	eorseq	r8, r1, r0, lsl #30
    5cec:	00318d00 	eorseq	r8, r1, r0, lsl #26
    5cf0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5d04:	03074601 	movweq	r4, #30209	; 0x7601
    5d08:	00002f16 	andeq	r2, r0, r6, lsl pc
    5d0c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5d10:	0031a800 	eorseq	sl, r1, r0, lsl #16
    5d14:	0031a200 	eorseq	sl, r1, r0, lsl #4
    5d18:	459d2000 	ldrmi	r2, [sp]
    5d1c:	31d70000 	bicscc	r0, r7, r0
    5d20:	31d50000 	bicscc	r0, r5, r0
    5d24:	21000000 	mrscs	r0, (UNDEF: 0)
    5d28:	0000453c 	andeq	r4, r0, ip, lsr r5
    5d2c:	00000000 	andeq	r0, r0, r0
    5d30:	00000001 	andeq	r0, r0, r1
    5d34:	00000000 	andeq	r0, r0, r0
    5d38:	46010000 	strmi	r0, [r1], -r0
    5d3c:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5d40:	ee000045 	cdp	0, 0, cr0, cr0, cr5, {2}
    5d44:	ea000031 	b	5e10 <_Min_Heap_Size+0x5610>
    5d48:	1f000031 	svcne	0x00000031
    5d4c:	0000454f 	andeq	r4, r0, pc, asr #10
    5d50:	00003210 	andeq	r3, r0, r0, lsl r2
    5d54:	0000320e 	andeq	r3, r0, lr, lsl #4
    5d58:	00456920 	subeq	r6, r5, r0, lsr #18
    5d5c:	00322500 	eorseq	r2, r2, r0, lsl #10
    5d60:	00322300 	eorseq	r2, r2, r0, lsl #6
    5d64:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5d70:	00002fee 	andeq	r2, r0, lr, ror #31
    5d74:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5d78:	07470100 	strbeq	r0, [r7, -r0, lsl #2]
    5d7c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5d80:	00323a00 	eorseq	r3, r2, r0, lsl #20
    5d84:	00323800 	eorseq	r3, r2, r0, lsl #16
    5d88:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5d9c:	03074701 	movweq	r4, #30465	; 0x7701
    5da0:	00002fae 	andeq	r2, r0, lr, lsr #31
    5da4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5da8:	00325300 	eorseq	r5, r2, r0, lsl #6
    5dac:	00324d00 	eorseq	r4, r2, r0, lsl #26
    5db0:	459d2000 	ldrmi	r2, [sp]
    5db4:	32820000 	addcc	r0, r2, #0
    5db8:	32800000 	addcc	r0, r0, #0
    5dbc:	21000000 	mrscs	r0, (UNDEF: 0)
    5dc0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5dc4:	00000000 	andeq	r0, r0, r0
    5dc8:	00000001 	andeq	r0, r0, r1
    5dcc:	00000000 	andeq	r0, r0, r0
    5dd0:	47010000 	strmi	r0, [r1, -r0]
    5dd4:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5dd8:	99000045 	stmdbls	r0, {r0, r2, r6}
    5ddc:	95000032 	strls	r0, [r0, #-50]	; 0xffffffce
    5de0:	1f000032 	svcne	0x00000032
    5de4:	0000454f 	andeq	r4, r0, pc, asr #10
    5de8:	000032bb 			; <UNDEFINED> instruction: 0x000032bb
    5dec:	000032b9 			; <UNDEFINED> instruction: 0x000032b9
    5df0:	00456920 	subeq	r6, r5, r0, lsr #18
    5df4:	0032d000 	eorseq	sp, r2, r0
    5df8:	0032ce00 	eorseq	ip, r2, r0, lsl #28
    5dfc:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5e08:	00003086 	andeq	r3, r0, r6, lsl #1
    5e0c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5e10:	074c0100 	strbeq	r0, [ip, -r0, lsl #2]
    5e14:	0000c605 	andeq	ip, r0, r5, lsl #12
    5e18:	0032e500 	eorseq	lr, r2, r0, lsl #10
    5e1c:	0032e300 	eorseq	lr, r2, r0, lsl #6
    5e20:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5e34:	05074c01 	streq	r4, [r7, #-3073]	; 0xfffff3ff
    5e38:	00003046 	andeq	r3, r0, r6, asr #32
    5e3c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5e40:	0032fe00 	eorseq	pc, r2, r0, lsl #28
    5e44:	0032f800 	eorseq	pc, r2, r0, lsl #16
    5e48:	459d2000 	ldrmi	r2, [sp]
    5e4c:	332d0000 			; <UNDEFINED> instruction: 0x332d0000
    5e50:	332b0000 			; <UNDEFINED> instruction: 0x332b0000
    5e54:	21000000 	mrscs	r0, (UNDEF: 0)
    5e58:	0000453c 	andeq	r4, r0, ip, lsr r5
    5e5c:	00000000 	andeq	r0, r0, r0
    5e60:	00000001 	andeq	r0, r0, r1
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	4c010000 	stcmi	0, cr0, [r1], {-0}
    5e6c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5e70:	44000045 	strmi	r0, [r0], #-69	; 0xffffffbb
    5e74:	40000033 	andmi	r0, r0, r3, lsr r0
    5e78:	1f000033 	svcne	0x00000033
    5e7c:	0000454f 	andeq	r4, r0, pc, asr #10
    5e80:	00003366 	andeq	r3, r0, r6, ror #6
    5e84:	00003364 	andeq	r3, r0, r4, ror #6
    5e88:	00456920 	subeq	r6, r5, r0, lsr #18
    5e8c:	00337b00 	eorseq	r7, r3, r0, lsl #22
    5e90:	00337900 	eorseq	r7, r3, r0, lsl #18
    5e94:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5ea0:	0000311e 	andeq	r3, r0, lr, lsl r1
    5ea4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5ea8:	07520100 	ldrbeq	r0, [r2, -r0, lsl #2]
    5eac:	0000c605 	andeq	ip, r0, r5, lsl #12
    5eb0:	00339000 	eorseq	r9, r3, r0
    5eb4:	00338e00 	eorseq	r8, r3, r0, lsl #28
    5eb8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5ecc:	05075201 	streq	r5, [r7, #-513]	; 0xfffffdff
    5ed0:	000030de 	ldrdeq	r3, [r0], -lr
    5ed4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5ed8:	0033a900 	eorseq	sl, r3, r0, lsl #18
    5edc:	0033a300 	eorseq	sl, r3, r0, lsl #6
    5ee0:	459d2000 	ldrmi	r2, [sp]
    5ee4:	33d80000 	bicscc	r0, r8, #0
    5ee8:	33d60000 	bicscc	r0, r6, #0
    5eec:	21000000 	mrscs	r0, (UNDEF: 0)
    5ef0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5ef4:	00000000 	andeq	r0, r0, r0
    5ef8:	00000001 	andeq	r0, r0, r1
    5efc:	00000000 	andeq	r0, r0, r0
    5f00:	52010000 	andpl	r0, r1, #0
    5f04:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5f08:	ef000045 	svc	0x00000045
    5f0c:	eb000033 	bl	5fe0 <_Min_Heap_Size+0x57e0>
    5f10:	1f000033 	svcne	0x00000033
    5f14:	0000454f 	andeq	r4, r0, pc, asr #10
    5f18:	00003411 	andeq	r3, r0, r1, lsl r4
    5f1c:	0000340f 	andeq	r3, r0, pc, lsl #8
    5f20:	00456920 	subeq	r6, r5, r0, lsr #18
    5f24:	00342600 	eorseq	r2, r4, r0, lsl #12
    5f28:	00342400 	eorseq	r2, r4, r0, lsl #8
    5f2c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5f38:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    5f3c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5f40:	076b0100 	strbeq	r0, [fp, -r0, lsl #2]!
    5f44:	0000c605 	andeq	ip, r0, r5, lsl #12
    5f48:	00343b00 	eorseq	r3, r4, r0, lsl #22
    5f4c:	00343900 	eorseq	r3, r4, r0, lsl #18
    5f50:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5f64:	05076b01 	streq	r6, [r7, #-2817]	; 0xfffff4ff
    5f68:	00003176 	andeq	r3, r0, r6, ror r1
    5f6c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5f70:	00345400 	eorseq	r5, r4, r0, lsl #8
    5f74:	00344e00 	eorseq	r4, r4, r0, lsl #28
    5f78:	459d2000 	ldrmi	r2, [sp]
    5f7c:	34830000 	strcc	r0, [r3], #0
    5f80:	34810000 	strcc	r0, [r1], #0
    5f84:	21000000 	mrscs	r0, (UNDEF: 0)
    5f88:	0000453c 	andeq	r4, r0, ip, lsr r5
    5f8c:	00000000 	andeq	r0, r0, r0
    5f90:	00000001 	andeq	r0, r0, r1
    5f94:	00000000 	andeq	r0, r0, r0
    5f98:	6b010000 	blvs	45fa0 <_Min_Heap_Size+0x457a0>
    5f9c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5fa0:	9a000045 	bls	60bc <_Min_Heap_Size+0x58bc>
    5fa4:	96000034 			; <UNDEFINED> instruction: 0x96000034
    5fa8:	1f000034 	svcne	0x00000034
    5fac:	0000454f 	andeq	r4, r0, pc, asr #10
    5fb0:	000034bc 			; <UNDEFINED> instruction: 0x000034bc
    5fb4:	000034ba 			; <UNDEFINED> instruction: 0x000034ba
    5fb8:	00456920 	subeq	r6, r5, r0, lsr #18
    5fbc:	0034d100 	eorseq	sp, r4, r0, lsl #2
    5fc0:	0034cf00 	eorseq	ip, r4, r0, lsl #30
    5fc4:	1a000000 	bne	5fcc <_Min_Heap_Size+0x57cc>
    5fc8:	00000000 	andeq	r0, r0, r0
    5fcc:	00004600 	andeq	r4, r0, r0, lsl #12
    5fd0:	0000001a 	andeq	r0, r0, sl, lsl r0
    5fd4:	00460000 	subeq	r0, r6, r0
    5fd8:	00001a00 	andeq	r1, r0, r0, lsl #20
    5fdc:	461e0000 	ldrmi	r0, [lr], -r0
    5fe0:	001a0000 	andseq	r0, sl, r0
    5fe4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5fe8:	00000046 	andeq	r0, r0, r6, asr #32
    5fec:	10830128 	addne	r0, r3, r8, lsr #2
    5ff0:	31010000 	mrscc	r0, (UNDEF: 1)
    5ff4:	67011d07 	strvs	r1, [r1, -r7, lsl #26]
    5ff8:	00000005 	andeq	r0, r0, r5
    5ffc:	00000000 	andeq	r0, r0, r0
    6000:	02000000 	andeq	r0, r0, #0
    6004:	1001007d 	andne	r0, r1, sp, ror r0
    6008:	16000032 			; <UNDEFINED> instruction: 0x16000032
    600c:	000014f7 	strdeq	r1, [r0], -r7
    6010:	4b073101 	blmi	1d241c <_Min_Heap_Size+0x1d1c1c>
    6014:	00000796 	muleq	r0, r6, r7
    6018:	000034e8 	andeq	r3, r0, r8, ror #9
    601c:	000034e4 	andeq	r3, r0, r4, ror #9
    6020:	f9012700 			; <UNDEFINED> instruction: 0xf9012700
    6024:	01000015 	tsteq	r0, r5, lsl r0
    6028:	011306ed 	tsteq	r3, sp, ror #13
    602c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6038:	00003509 	andeq	r3, r0, r9, lsl #10
    603c:	00334b01 	eorseq	r4, r3, r1, lsl #22
    6040:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    6044:	ed010000 	stc	0, cr0, [r1, #-0]
    6048:	07964406 	ldreq	r4, [r6, r6, lsl #8]
    604c:	35750000 	ldrbcc	r0, [r5, #-0]!
    6050:	35650000 	strbcc	r0, [r5, #-0]!
    6054:	48160000 	ldmdami	r6, {}	; <UNPREDICTABLE>
    6058:	01000011 	tsteq	r0, r1, lsl r0
    605c:	825406ed 	subshi	r0, r4, #248512512	; 0xed00000
    6060:	e2000006 	and	r0, r0, #6
    6064:	d8000035 	stmdale	r0, {r0, r2, r4, r5}
    6068:	16000035 			; <UNDEFINED> instruction: 0x16000035
    606c:	000024dc 	ldrdeq	r2, [r0], -ip
    6070:	6406ed01 	strvs	lr, [r6], #-3329	; 0xfffff2ff
    6074:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6078:	00003631 	andeq	r3, r0, r1, lsr r6
    607c:	00003627 	andeq	r3, r0, r7, lsr #12
    6080:	00199617 	andseq	r9, r9, r7, lsl r6
    6084:	06ef0100 	strbteq	r0, [pc], r0, lsl #2
    6088:	00023a15 	andeq	r3, r2, r5, lsl sl
    608c:	00367c00 	eorseq	r7, r6, r0, lsl #24
    6090:	00367600 	eorseq	r7, r6, r0, lsl #12
    6094:	00001c00 	andeq	r1, r0, r0, lsl #24
    6098:	00000000 	andeq	r0, r0, r0
    609c:	32a20000 	adccc	r0, r2, #0
    60a0:	b6220000 	strtlt	r0, [r2], -r0
    60a4:	01000001 	tsteq	r0, r1
    60a8:	d2090704 	andle	r0, r9, #4, 14	; 0x100000
    60ac:	02000000 	andeq	r0, r0, #0
    60b0:	1c007491 	cfstrsne	mvf7, [r0], {145}	; 0x91
	...
    60bc:	0000333a 	andeq	r3, r0, sl, lsr r3
    60c0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    60c4:	07050100 	streq	r0, [r5, -r0, lsl #2]
    60c8:	0000c609 	andeq	ip, r0, r9, lsl #12
    60cc:	0036a800 	eorseq	sl, r6, r0, lsl #16
    60d0:	0036a600 	eorseq	sl, r6, r0, lsl #12
    60d4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    60e8:	09070501 	stmdbeq	r7, {r0, r8, sl}
    60ec:	000032fa 	strdeq	r3, [r0], -sl
    60f0:	0045901f 	subeq	r9, r5, pc, lsl r0
    60f4:	0036c100 	eorseq	ip, r6, r0, lsl #2
    60f8:	0036bb00 	eorseq	fp, r6, r0, lsl #22
    60fc:	459d2000 	ldrmi	r2, [sp]
    6100:	36f00000 	ldrbtcc	r0, [r0], r0
    6104:	36ee0000 	strbtcc	r0, [lr], r0
    6108:	21000000 	mrscs	r0, (UNDEF: 0)
    610c:	0000453c 	andeq	r4, r0, ip, lsr r5
    6110:	00000000 	andeq	r0, r0, r0
    6114:	00000001 	andeq	r0, r0, r1
    6118:	00000000 	andeq	r0, r0, r0
    611c:	05010000 	streq	r0, [r1, #-0]
    6120:	5c1f0907 			; <UNDEFINED> instruction: 0x5c1f0907
    6124:	07000045 	streq	r0, [r0, -r5, asr #32]
    6128:	03000037 	movweq	r0, #55	; 0x37
    612c:	1f000037 	svcne	0x00000037
    6130:	0000454f 	andeq	r4, r0, pc, asr #10
    6134:	00003729 	andeq	r3, r0, r9, lsr #14
    6138:	00003727 	andeq	r3, r0, r7, lsr #14
    613c:	00456920 	subeq	r6, r5, r0, lsr #18
    6140:	00373e00 	eorseq	r3, r7, r0, lsl #28
    6144:	00373c00 	eorseq	r3, r7, r0, lsl #24
    6148:	23000000 	movwcs	r0, #0
    614c:	00000000 	andeq	r0, r0, r0
    6150:	00000dad 	andeq	r0, r0, sp, lsr #27
    6154:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6158:	00000074 	andeq	r0, r0, r4, ror r0
    615c:	148e0127 	strne	r0, [lr], #295	; 0x127
    6160:	b1010000 	mrslt	r0, (UNDEF: 1)
    6164:	3a011306 	bcc	4ad84 <_Min_Heap_Size+0x4a584>
    6168:	00000002 	andeq	r0, r0, r2
    616c:	00000000 	andeq	r0, r0, r0
    6170:	51000000 	mrspl	r0, (UNDEF: 0)
    6174:	01000037 	tsteq	r0, r7, lsr r0
    6178:	00003486 	andeq	r3, r0, r6, lsl #9
    617c:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6180:	06b10100 	ldrteq	r0, [r1], r0, lsl #2
    6184:	00079643 	andeq	r9, r7, r3, asr #12
    6188:	0037bd00 	eorseq	fp, r7, r0, lsl #26
    618c:	0037ad00 	eorseq	sl, r7, r0, lsl #26
    6190:	11481600 	cmpne	r8, r0, lsl #12
    6194:	b1010000 	mrslt	r0, (UNDEF: 1)
    6198:	06825306 	streq	r5, [r2], r6, lsl #6
    619c:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    61a0:	38200000 	stmdacc	r0!, {}	; <UNPREDICTABLE>
    61a4:	dc160000 	ldcle	0, cr0, [r6], {-0}
    61a8:	01000024 	tsteq	r0, r4, lsr #32
    61ac:	b06306b1 	strhtlt	r0, [r3], #-97	; 0xffffff9f
    61b0:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    61b4:	6f000038 	svcvs	0x00000038
    61b8:	17000038 	smladxne	r0, r8, r0, r0
    61bc:	00001996 	muleq	r0, r6, r9
    61c0:	1506b301 	strne	fp, [r6, #-769]	; 0xfffffcff
    61c4:	0000023a 	andeq	r0, r0, sl, lsr r2
    61c8:	000038c4 	andeq	r3, r0, r4, asr #17
    61cc:	000038be 			; <UNDEFINED> instruction: 0x000038be
    61d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    61d4:	00000000 	andeq	r0, r0, r0
    61d8:	0033dd00 	eorseq	sp, r3, r0, lsl #26
    61dc:	01b62200 			; <UNDEFINED> instruction: 0x01b62200
    61e0:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    61e4:	00d20906 	sbcseq	r0, r2, r6, lsl #18
    61e8:	91020000 	mrsls	r0, (UNDEF: 2)
    61ec:	001c0074 	andseq	r0, ip, r4, ror r0
    61f0:	00000000 	andeq	r0, r0, r0
    61f4:	75000000 	strvc	r0, [r0, #-0]
    61f8:	1d000034 	stcne	0, cr0, [r0, #-208]	; 0xffffff30
    61fc:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6200:	0906c901 	stmdbeq	r6, {r0, r8, fp, lr, pc}
    6204:	000000c6 	andeq	r0, r0, r6, asr #1
    6208:	000038f0 	strdeq	r3, [r0], -r0
    620c:	000038ee 	andeq	r3, r0, lr, ror #17
    6210:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6220:	01000000 	mrseq	r0, (UNDEF: 0)
    6224:	350906c9 	strcc	r0, [r9, #-1737]	; 0xfffff937
    6228:	1f000034 	svcne	0x00000034
    622c:	00004590 	muleq	r0, r0, r5
    6230:	00003909 	andeq	r3, r0, r9, lsl #18
    6234:	00003903 	andeq	r3, r0, r3, lsl #18
    6238:	00459d20 	subeq	r9, r5, r0, lsr #26
    623c:	00393800 	eorseq	r3, r9, r0, lsl #16
    6240:	00393600 	eorseq	r3, r9, r0, lsl #12
    6244:	3c210000 	stccc	0, cr0, [r1], #-0
    6248:	00000045 	andeq	r0, r0, r5, asr #32
    624c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6258:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    625c:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    6260:	394f0000 	stmdbcc	pc, {}^	; <UNPREDICTABLE>
    6264:	394b0000 	stmdbcc	fp, {}^	; <UNPREDICTABLE>
    6268:	4f1f0000 	svcmi	0x001f0000
    626c:	71000045 	tstvc	r0, r5, asr #32
    6270:	6f000039 	svcvs	0x00000039
    6274:	20000039 	andcs	r0, r0, r9, lsr r0
    6278:	00004569 	andeq	r4, r0, r9, ror #10
    627c:	00003986 	andeq	r3, r0, r6, lsl #19
    6280:	00003984 	andeq	r3, r0, r4, lsl #19
    6284:	00230000 	eoreq	r0, r3, r0
    6288:	1f000000 	svcne	0x00000000
    628c:	19000010 	stmdbne	r0, {r4}
    6290:	74025001 	strvc	r5, [r2], #-1
    6294:	27000000 	strcs	r0, [r0, -r0]
    6298:	00168401 	andseq	r8, r6, r1, lsl #8
    629c:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    62a0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    62ac:	39990000 	ldmibcc	r9, {}	; <UNPREDICTABLE>
    62b0:	7f010000 	svcvc	0x00010000
    62b4:	16000035 			; <UNDEFINED> instruction: 0x16000035
    62b8:	000014f7 	strdeq	r1, [r0], -r7
    62bc:	40063401 	andmi	r3, r6, r1, lsl #8
    62c0:	00000796 	muleq	r0, r6, r7
    62c4:	000039ed 	andeq	r3, r0, sp, ror #19
    62c8:	000039dd 	ldrdeq	r3, [r0], -sp
    62cc:	00114816 	andseq	r4, r1, r6, lsl r8
    62d0:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    62d4:	00068250 	andeq	r8, r6, r0, asr r2
    62d8:	003a6200 	eorseq	r6, sl, r0, lsl #4
    62dc:	003a5000 	eorseq	r5, sl, r0
    62e0:	24dc1600 	ldrbcs	r1, [ip], #1536	; 0x600
    62e4:	34010000 	strcc	r0, [r1], #-0
    62e8:	00b06006 	adcseq	r6, r0, r6
    62ec:	3ae00000 	bcc	ff8062f4 <_estack+0xdf8050bc>
    62f0:	3ad60000 	bcc	ff5862f8 <_estack+0xdf5850c0>
    62f4:	fa160000 	blx	5862fc <_Min_Heap_Size+0x585afc>
    62f8:	01000013 	tsteq	r0, r3, lsl r0
    62fc:	cf700634 	svcgt	0x00700634
    6300:	29000008 	stmdbcs	r0, {r3}
    6304:	2500003b 	strcs	r0, [r0, #-59]	; 0xffffffc5
    6308:	1600003b 			; <UNDEFINED> instruction: 0x1600003b
    630c:	0000142c 	andeq	r1, r0, ip, lsr #8
    6310:	35063501 	strcc	r3, [r6, #-1281]	; 0xfffffaff
    6314:	000000c6 	andeq	r0, r0, r6, asr #1
    6318:	00003b4b 	andeq	r3, r0, fp, asr #22
    631c:	00003b47 	andeq	r3, r0, r7, asr #22
    6320:	00117417 	andseq	r7, r1, r7, lsl r4
    6324:	06370100 	ldrteq	r0, [r7], -r0, lsl #2
    6328:	0006820d 	andeq	r8, r6, sp, lsl #4
    632c:	003b6f00 	eorseq	r6, fp, r0, lsl #30
    6330:	003b6b00 	eorseq	r6, fp, r0, lsl #22
    6334:	11de1700 	bicsne	r1, lr, r0, lsl #14
    6338:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    633c:	08cf0d06 	stmiaeq	pc, {r1, r2, r8, sl, fp}^	; <UNPREDICTABLE>
    6340:	3b950000 	blcc	fe546348 <_estack+0xde545110>
    6344:	3b8d0000 	blcc	fe34634c <_estack+0xde345114>
    6348:	41170000 	tstmi	r7, r0
    634c:	01000015 	tsteq	r0, r5, lsl r0
    6350:	c60c0639 			; <UNDEFINED> instruction: 0xc60c0639
    6354:	cf000000 	svcgt	0x00000000
    6358:	cb00003b 	blgt	644c <_Min_Heap_Size+0x5c4c>
    635c:	1c00003b 	stcne	0, cr0, [r0], {59}	; 0x3b
	...
    6368:	0000356c 	andeq	r3, r0, ip, ror #10
    636c:	0001b622 	andeq	fp, r1, r2, lsr #12
    6370:	06640100 	strbteq	r0, [r4], -r0, lsl #2
    6374:	0000d209 	andeq	sp, r0, r9, lsl #4
    6378:	5c910200 	lfmpl	f0, 4, [r1], {0}
    637c:	00001a00 	andeq	r1, r0, r0, lsl #20
    6380:	45f20000 	ldrbmi	r0, [r2, #0]!
    6384:	001a0000 	andseq	r0, sl, r0
    6388:	f2000000 	vhadd.s8	d0, d0, d0
    638c:	00000045 	andeq	r0, r0, r5, asr #32
    6390:	14c60127 	strbne	r0, [r6], #295	; 0x127
    6394:	fd010000 	stc2	0, cr0, [r1, #-0]
    6398:	3a011305 	bcc	4afb4 <_Min_Heap_Size+0x4a7b4>
    639c:	00000002 	andeq	r0, r0, r2
    63a0:	00000000 	andeq	r0, r0, r0
    63a4:	ed000000 	stc	0, cr0, [r0, #-0]
    63a8:	0100003b 	tsteq	r0, fp, lsr r0
    63ac:	00003730 	andeq	r3, r0, r0, lsr r7
    63b0:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    63b4:	05fd0100 	ldrbeq	r0, [sp, #256]!	; 0x100
    63b8:	00079638 	andeq	r9, r7, r8, lsr r6
    63bc:	003c1500 	eorseq	r1, ip, r0, lsl #10
    63c0:	003c0d00 	eorseq	r0, ip, r0, lsl #26
    63c4:	15931700 	ldrne	r1, [r3, #1792]	; 0x700
    63c8:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    63cc:	00c60c05 	sbceq	r0, r6, r5, lsl #24
    63d0:	3c530000 	mracc	r0, r3, acc0
    63d4:	3c490000 	marcc	acc0, r0, r9
    63d8:	001c0000 	andseq	r0, ip, r0
    63dc:	00000000 	andeq	r0, r0, r0
    63e0:	61000000 	mrsvs	r0, (UNDEF: 0)
    63e4:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    63e8:	006c6176 	rsbeq	r6, ip, r6, ror r1
    63ec:	05060a01 	streq	r0, [r6, #-2561]	; 0xfffff5ff
    63f0:	000000c6 	andeq	r0, r0, r6, asr #1
    63f4:	00003cb7 			; <UNDEFINED> instruction: 0x00003cb7
    63f8:	00003cb5 			; <UNDEFINED> instruction: 0x00003cb5
    63fc:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    640c:	01000000 	mrseq	r0, (UNDEF: 0)
    6410:	2105060a 	tstcs	r5, sl, lsl #12
    6414:	1f000036 	svcne	0x00000036
    6418:	00004590 	muleq	r0, r0, r5
    641c:	00003cd0 	ldrdeq	r3, [r0], -r0
    6420:	00003cca 	andeq	r3, r0, sl, asr #25
    6424:	00459d20 	subeq	r9, r5, r0, lsr #26
    6428:	003cff00 	eorseq	pc, ip, r0, lsl #30
    642c:	003cfd00 	eorseq	pc, ip, r0, lsl #26
    6430:	3c210000 	stccc	0, cr0, [r1], #-0
    6434:	00000045 	andeq	r0, r0, r5, asr #32
    6438:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6444:	060a0100 	streq	r0, [sl], -r0, lsl #2
    6448:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    644c:	3d160000 	ldccc	0, cr0, [r6, #-0]
    6450:	3d120000 	ldccc	0, cr0, [r2, #-0]
    6454:	4f1f0000 	svcmi	0x001f0000
    6458:	38000045 	stmdacc	r0, {r0, r2, r6}
    645c:	3600003d 			; <UNDEFINED> instruction: 0x3600003d
    6460:	2000003d 	andcs	r0, r0, sp, lsr r0
    6464:	00004569 	andeq	r4, r0, r9, ror #10
    6468:	00003d4d 	andeq	r3, r0, sp, asr #26
    646c:	00003d4b 	andeq	r3, r0, fp, asr #26
    6470:	001c0000 	andseq	r0, ip, r0
    6474:	00000000 	andeq	r0, r0, r0
    6478:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    647c:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    6480:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6484:	05061801 	streq	r1, [r6, #-2049]	; 0xfffff7ff
    6488:	000000c6 	andeq	r0, r0, r6, asr #1
    648c:	00003d62 	andeq	r3, r0, r2, ror #26
    6490:	00003d60 	andeq	r3, r0, r0, ror #26
    6494:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    64a4:	01000000 	mrseq	r0, (UNDEF: 0)
    64a8:	b9050618 	stmdblt	r5, {r3, r4, r9, sl}
    64ac:	1f000036 	svcne	0x00000036
    64b0:	00004590 	muleq	r0, r0, r5
    64b4:	00003d7b 	andeq	r3, r0, fp, ror sp
    64b8:	00003d75 	andeq	r3, r0, r5, ror sp
    64bc:	00459d20 	subeq	r9, r5, r0, lsr #26
    64c0:	003daa00 	eorseq	sl, sp, r0, lsl #20
    64c4:	003da800 	eorseq	sl, sp, r0, lsl #16
    64c8:	3c210000 	stccc	0, cr0, [r1], #-0
    64cc:	00000045 	andeq	r0, r0, r5, asr #32
    64d0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    64dc:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    64e0:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    64e4:	3dc10000 	stclcc	0, cr0, [r1]
    64e8:	3dbd0000 	ldccc	0, cr0, [sp]
    64ec:	4f1f0000 	svcmi	0x001f0000
    64f0:	e3000045 	movw	r0, #69	; 0x45
    64f4:	e100003d 	tst	r0, sp, lsr r0
    64f8:	2000003d 	andcs	r0, r0, sp, lsr r0
    64fc:	00004569 	andeq	r4, r0, r9, ror #10
    6500:	00003df8 	strdeq	r3, [r0], -r8
    6504:	00003df6 	strdeq	r3, [r0], -r6
    6508:	001a0000 	andseq	r0, sl, r0
    650c:	00000000 	andeq	r0, r0, r0
    6510:	18000046 	stmdane	r0, {r1, r2, r6}
    6514:	00000000 	andeq	r0, r0, r0
    6518:	00000ce9 	andeq	r0, r0, r9, ror #25
    651c:	00003716 	andeq	r3, r0, r6, lsl r7
    6520:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6524:	1a000074 	bne	66fc <_Min_Heap_Size+0x5efc>
    6528:	00000000 	andeq	r0, r0, r0
    652c:	00004600 	andeq	r4, r0, r0, lsl #12
    6530:	00000023 	andeq	r0, r0, r3, lsr #32
    6534:	000af500 	andeq	pc, sl, r0, lsl #10
    6538:	50011900 	andpl	r1, r1, r0, lsl #18
    653c:	00007402 	andeq	r7, r0, r2, lsl #8
    6540:	e1012700 	tst	r1, r0, lsl #14
    6544:	01000016 	tsteq	r0, r6, lsl r0
    6548:	011305db 			; <UNDEFINED> instruction: 0x011305db
    654c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6558:	00003e0b 	andeq	r3, r0, fp, lsl #28
    655c:	0039e001 	eorseq	lr, r9, r1
    6560:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    6564:	db010000 	blle	4656c <_Min_Heap_Size+0x45d6c>
    6568:	07963a05 	ldreq	r3, [r6, r5, lsl #20]
    656c:	3e3f0000 	cdpcc	0, 3, cr0, cr15, cr0, {0}
    6570:	3e370000 	cdpcc	0, 3, cr0, cr7, cr0, {0}
    6574:	001c0000 	andseq	r0, ip, r0
    6578:	00000000 	andeq	r0, r0, r0
    657c:	fd000000 	stc2	0, cr0, [r0, #-0]
    6580:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    6584:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6588:	0505e101 	streq	lr, [r5, #-257]	; 0xfffffeff
    658c:	000000c6 	andeq	r0, r0, r6, asr #1
    6590:	00003e7b 	andeq	r3, r0, fp, ror lr
    6594:	00003e79 	andeq	r3, r0, r9, ror lr
    6598:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    65a8:	01000000 	mrseq	r0, (UNDEF: 0)
    65ac:	bd0505e1 	cfstr32lt	mvfx0, [r5, #-900]	; 0xfffffc7c
    65b0:	1f000037 	svcne	0x00000037
    65b4:	00004590 	muleq	r0, r0, r5
    65b8:	00003e94 	muleq	r0, r4, lr
    65bc:	00003e8e 	andeq	r3, r0, lr, lsl #29
    65c0:	00459d20 	subeq	r9, r5, r0, lsr #26
    65c4:	003ec300 	eorseq	ip, lr, r0, lsl #6
    65c8:	003ec100 	eorseq	ip, lr, r0, lsl #2
    65cc:	3c210000 	stccc	0, cr0, [r1], #-0
    65d0:	00000045 	andeq	r0, r0, r5, asr #32
    65d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    65e0:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
    65e4:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    65e8:	3eda0000 	cdpcc	0, 13, cr0, cr10, cr0, {0}
    65ec:	3ed60000 	cdpcc	0, 13, cr0, cr6, cr0, {0}
    65f0:	4f1f0000 	svcmi	0x001f0000
    65f4:	fc000045 	stc2	0, cr0, [r0], {69}	; 0x45
    65f8:	fa00003e 	blx	66f8 <_Min_Heap_Size+0x5ef8>
    65fc:	2000003e 	andcs	r0, r0, lr, lsr r0
    6600:	00004569 	andeq	r4, r0, r9, ror #10
    6604:	00003f11 	andeq	r3, r0, r1, lsl pc
    6608:	00003f0f 	andeq	r3, r0, pc, lsl #30
    660c:	001c0000 	andseq	r0, ip, r0
    6610:	00000000 	andeq	r0, r0, r0
    6614:	1b000000 	blne	661c <_Min_Heap_Size+0x5e1c>
    6618:	22000038 	andcs	r0, r0, #56	; 0x38
    661c:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    6620:	0505e701 	streq	lr, [r5, #-1793]	; 0xfffff8ff
    6624:	000000d2 	ldrdeq	r0, [r0], -r2
    6628:	007c9102 	rsbseq	r9, ip, r2, lsl #2
    662c:	0000001c 	andeq	r0, r0, ip, lsl r0
    6630:	00000000 	andeq	r0, r0, r0
    6634:	0038b300 	eorseq	fp, r8, r0, lsl #6
    6638:	61761d00 	cmnvs	r6, r0, lsl #26
    663c:	ec01006c 	stc	0, cr0, [r1], {108}	; 0x6c
    6640:	00c60705 	sbceq	r0, r6, r5, lsl #14
    6644:	3f260000 	svccc	0x00260000
    6648:	3f240000 	svccc	0x00240000
    664c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6650:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6660:	05ec0100 	strbeq	r0, [ip, #256]!	; 0x100
    6664:	00387307 	eorseq	r7, r8, r7, lsl #6
    6668:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    666c:	3f3f0000 	svccc	0x003f0000
    6670:	3f390000 	svccc	0x00390000
    6674:	9d200000 	stcls	0, cr0, [r0, #-0]
    6678:	6e000045 	cdpvs	0, 0, cr0, cr0, cr5, {2}
    667c:	6c00003f 	stcvs	0, cr0, [r0], {63}	; 0x3f
    6680:	0000003f 	andeq	r0, r0, pc, lsr r0
    6684:	00453c21 	subeq	r3, r5, r1, lsr #24
    6688:	00000000 	andeq	r0, r0, r0
    668c:	00000100 	andeq	r0, r0, r0, lsl #2
    6690:	00000000 	andeq	r0, r0, r0
    6694:	01000000 	mrseq	r0, (UNDEF: 0)
    6698:	1f0705ec 	svcne	0x000705ec
    669c:	0000455c 	andeq	r4, r0, ip, asr r5
    66a0:	00003f85 	andeq	r3, r0, r5, lsl #31
    66a4:	00003f81 	andeq	r3, r0, r1, lsl #31
    66a8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    66ac:	003fa700 	eorseq	sl, pc, r0, lsl #14
    66b0:	003fa500 	eorseq	sl, pc, r0, lsl #10
    66b4:	45692000 	strbmi	r2, [r9, #-0]!
    66b8:	3fbc0000 	svccc	0x00bc0000
    66bc:	3fba0000 	svccc	0x00ba0000
    66c0:	00000000 	andeq	r0, r0, r0
    66c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    66c8:	00000000 	andeq	r0, r0, r0
    66cc:	00394b00 	eorseq	r4, r9, r0, lsl #22
    66d0:	61761d00 	cmnvs	r6, r0, lsl #26
    66d4:	ee01006c 	cdp	0, 0, cr0, cr1, cr12, {3}
    66d8:	00c60505 	sbceq	r0, r6, r5, lsl #10
    66dc:	3fd10000 	svccc	0x00d10000
    66e0:	3fcf0000 	svccc	0x00cf0000
    66e4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    66e8:	00000045 	andeq	r0, r0, r5, asr #32
	...
    66f8:	05ee0100 	strbeq	r0, [lr, #256]!	; 0x100
    66fc:	00390b05 	eorseq	r0, r9, r5, lsl #22
    6700:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6704:	3fea0000 	svccc	0x00ea0000
    6708:	3fe40000 	svccc	0x00e40000
    670c:	9d200000 	stcls	0, cr0, [r0, #-0]
    6710:	19000045 	stmdbne	r0, {r0, r2, r6}
    6714:	17000040 	strne	r0, [r0, -r0, asr #32]
    6718:	00000040 	andeq	r0, r0, r0, asr #32
    671c:	00453c21 	subeq	r3, r5, r1, lsr #24
    6720:	00000000 	andeq	r0, r0, r0
    6724:	00000100 	andeq	r0, r0, r0, lsl #2
    6728:	00000000 	andeq	r0, r0, r0
    672c:	01000000 	mrseq	r0, (UNDEF: 0)
    6730:	1f0505ee 	svcne	0x000505ee
    6734:	0000455c 	andeq	r4, r0, ip, asr r5
    6738:	00004030 	andeq	r4, r0, r0, lsr r0
    673c:	0000402c 	andeq	r4, r0, ip, lsr #32
    6740:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6744:	00405200 	subeq	r5, r0, r0, lsl #4
    6748:	00405000 	subeq	r5, r0, r0
    674c:	45692000 	strbmi	r2, [r9, #-0]!
    6750:	40670000 	rsbmi	r0, r7, r0
    6754:	40650000 	rsbmi	r0, r5, r0
    6758:	00000000 	andeq	r0, r0, r0
    675c:	00000026 	andeq	r0, r0, r6, lsr #32
    6760:	00000000 	andeq	r0, r0, r0
    6764:	61761d00 	cmnvs	r6, r0, lsl #26
    6768:	f101006c 	setend	le
    676c:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6770:	407c0000 	rsbsmi	r0, ip, r0
    6774:	407a0000 	rsbsmi	r0, sl, r0
    6778:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    677c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    678c:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    6790:	00399f05 	eorseq	r9, r9, r5, lsl #30
    6794:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6798:	40950000 	addsmi	r0, r5, r0
    679c:	408f0000 	addmi	r0, pc, r0
    67a0:	9d200000 	stcls	0, cr0, [r0, #-0]
    67a4:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    67a8:	c2000040 	andgt	r0, r0, #64	; 0x40
    67ac:	00000040 	andeq	r0, r0, r0, asr #32
    67b0:	00453c21 	subeq	r3, r5, r1, lsr #24
    67b4:	00000000 	andeq	r0, r0, r0
    67b8:	00000100 	andeq	r0, r0, r0, lsl #2
    67bc:	00000000 	andeq	r0, r0, r0
    67c0:	01000000 	mrseq	r0, (UNDEF: 0)
    67c4:	1f0505f1 	svcne	0x000505f1
    67c8:	0000455c 	andeq	r4, r0, ip, asr r5
    67cc:	000040db 	ldrdeq	r4, [r0], -fp
    67d0:	000040d7 	ldrdeq	r4, [r0], -r7
    67d4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    67d8:	0040fd00 	subeq	pc, r0, r0, lsl #26
    67dc:	0040fb00 	subeq	pc, r0, r0, lsl #22
    67e0:	45692000 	strbmi	r2, [r9, #-0]!
    67e4:	41120000 	tstmi	r2, r0
    67e8:	41100000 	tstmi	r0, r0
    67ec:	00000000 	andeq	r0, r0, r0
    67f0:	9d012800 	stcls	8, cr2, [r1, #-0]
    67f4:	01000010 	tsteq	r0, r0, lsl r0
    67f8:	011305bc 			; <UNDEFINED> instruction: 0x011305bc
    67fc:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6808:	01007d02 	tsteq	r0, r2, lsl #26
    680c:	00003c86 	andeq	r3, r0, r6, lsl #25
    6810:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6814:	05bc0100 	ldreq	r0, [ip, #256]!	; 0x100
    6818:	00079639 	andeq	r9, r7, r9, lsr r6
    681c:	00412b00 	subeq	r2, r1, r0, lsl #22
    6820:	00412500 	subeq	r2, r1, r0, lsl #10
    6824:	15931700 	ldrne	r1, [r3, #1792]	; 0x700
    6828:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    682c:	00c60c05 	sbceq	r0, r6, r5, lsl #24
    6830:	41610000 	cmnmi	r1, r0
    6834:	41570000 	cmpmi	r7, r0
    6838:	001c0000 	andseq	r0, ip, r0
    683c:	00000000 	andeq	r0, r0, r0
    6840:	c1000000 	mrsgt	r0, (UNDEF: 0)
    6844:	1d00003a 	stcne	0, cr0, [r0, #-232]	; 0xffffff18
    6848:	006c6176 	rsbeq	r6, ip, r6, ror r1
    684c:	0505c401 	streq	ip, [r5, #-1025]	; 0xfffffbff
    6850:	000000c6 	andeq	r0, r0, r6, asr #1
    6854:	000041bf 			; <UNDEFINED> instruction: 0x000041bf
    6858:	000041bd 			; <UNDEFINED> instruction: 0x000041bd
    685c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    686c:	01000000 	mrseq	r0, (UNDEF: 0)
    6870:	810505c4 	smlabthi	r5, r4, r5, r0
    6874:	1f00003a 	svcne	0x0000003a
    6878:	00004590 	muleq	r0, r0, r5
    687c:	000041d8 	ldrdeq	r4, [r0], -r8
    6880:	000041d2 	ldrdeq	r4, [r0], -r2
    6884:	00459d20 	subeq	r9, r5, r0, lsr #26
    6888:	00420700 	subeq	r0, r2, r0, lsl #14
    688c:	00420500 	subeq	r0, r2, r0, lsl #10
    6890:	3c210000 	stccc	0, cr0, [r1], #-0
    6894:	00000045 	andeq	r0, r0, r5, asr #32
    6898:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    68a4:	05c40100 	strbeq	r0, [r4, #256]	; 0x100
    68a8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    68ac:	421e0000 	andsmi	r0, lr, #0
    68b0:	421a0000 	andsmi	r0, sl, #0
    68b4:	4f1f0000 	svcmi	0x001f0000
    68b8:	40000045 	andmi	r0, r0, r5, asr #32
    68bc:	3e000042 	cdpcc	0, 0, cr0, cr0, cr2, {2}
    68c0:	20000042 	andcs	r0, r0, r2, asr #32
    68c4:	00004569 	andeq	r4, r0, r9, ror #10
    68c8:	00004255 	andeq	r4, r0, r5, asr r2
    68cc:	00004253 	andeq	r4, r0, r3, asr r2
    68d0:	001c0000 	andseq	r0, ip, r0
    68d4:	00000000 	andeq	r0, r0, r0
    68d8:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    68dc:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    68e0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    68e4:	0505cb01 	streq	ip, [r5, #-2817]	; 0xfffff4ff
    68e8:	000000c6 	andeq	r0, r0, r6, asr #1
    68ec:	0000426a 	andeq	r4, r0, sl, ror #4
    68f0:	00004268 	andeq	r4, r0, r8, ror #4
    68f4:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6904:	01000000 	mrseq	r0, (UNDEF: 0)
    6908:	190505cb 	stmdbne	r5, {r0, r1, r3, r6, r7, r8, sl}
    690c:	1f00003b 	svcne	0x0000003b
    6910:	00004590 	muleq	r0, r0, r5
    6914:	00004283 	andeq	r4, r0, r3, lsl #5
    6918:	0000427d 	andeq	r4, r0, sp, ror r2
    691c:	00459d20 	subeq	r9, r5, r0, lsr #26
    6920:	0042b200 	subeq	fp, r2, r0, lsl #4
    6924:	0042b000 	subeq	fp, r2, r0
    6928:	3c210000 	stccc	0, cr0, [r1], #-0
    692c:	00000045 	andeq	r0, r0, r5, asr #32
    6930:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    693c:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    6940:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6944:	42c90000 	sbcmi	r0, r9, #0
    6948:	42c50000 	sbcmi	r0, r5, #0
    694c:	4f1f0000 	svcmi	0x001f0000
    6950:	eb000045 	bl	6a6c <_Min_Heap_Size+0x626c>
    6954:	e9000042 	stmdb	r0, {r1, r6}
    6958:	20000042 	andcs	r0, r0, r2, asr #32
    695c:	00004569 	andeq	r4, r0, r9, ror #10
    6960:	00004300 	andeq	r4, r0, r0, lsl #6
    6964:	000042fe 	strdeq	r4, [r0], -lr
    6968:	001c0000 	andseq	r0, ip, r0
    696c:	00000000 	andeq	r0, r0, r0
    6970:	f1000000 	cps	#0
    6974:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    6978:	006c6176 	rsbeq	r6, ip, r6, ror r1
    697c:	0505cc01 	streq	ip, [r5, #-3073]	; 0xfffff3ff
    6980:	000000c6 	andeq	r0, r0, r6, asr #1
    6984:	00004315 	andeq	r4, r0, r5, lsl r3
    6988:	00004313 	andeq	r4, r0, r3, lsl r3
    698c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    699c:	01000000 	mrseq	r0, (UNDEF: 0)
    69a0:	b10505cc 	smlabtlt	r5, ip, r5, r0
    69a4:	1f00003b 	svcne	0x0000003b
    69a8:	00004590 	muleq	r0, r0, r5
    69ac:	0000432e 	andeq	r4, r0, lr, lsr #6
    69b0:	00004328 	andeq	r4, r0, r8, lsr #6
    69b4:	00459d20 	subeq	r9, r5, r0, lsr #26
    69b8:	00435d00 	subeq	r5, r3, r0, lsl #26
    69bc:	00435b00 	subeq	r5, r3, r0, lsl #22
    69c0:	3c210000 	stccc	0, cr0, [r1], #-0
    69c4:	00000045 	andeq	r0, r0, r5, asr #32
    69c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    69d4:	05cc0100 	strbeq	r0, [ip, #256]	; 0x100
    69d8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    69dc:	43740000 	cmnmi	r4, #0
    69e0:	43700000 	cmnmi	r0, #0
    69e4:	4f1f0000 	svcmi	0x001f0000
    69e8:	96000045 	strls	r0, [r0], -r5, asr #32
    69ec:	94000043 	strls	r0, [r0], #-67	; 0xffffffbd
    69f0:	20000043 	andcs	r0, r0, r3, asr #32
    69f4:	00004569 	andeq	r4, r0, r9, ror #10
    69f8:	000043ab 	andeq	r4, r0, fp, lsr #7
    69fc:	000043a9 	andeq	r4, r0, r9, lsr #7
    6a00:	00260000 	eoreq	r0, r6, r0
    6a04:	00000000 	andeq	r0, r0, r0
    6a08:	1d000000 	stcne	0, cr0, [r0, #-0]
    6a0c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6a10:	0505cf01 	streq	ip, [r5, #-3841]	; 0xfffff0ff
    6a14:	000000c6 	andeq	r0, r0, r6, asr #1
    6a18:	000043c0 	andeq	r4, r0, r0, asr #7
    6a1c:	000043be 			; <UNDEFINED> instruction: 0x000043be
    6a20:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6a30:	01000000 	mrseq	r0, (UNDEF: 0)
    6a34:	450505cf 	strmi	r0, [r5, #-1487]	; 0xfffffa31
    6a38:	1f00003c 	svcne	0x0000003c
    6a3c:	00004590 	muleq	r0, r0, r5
    6a40:	000043d9 	ldrdeq	r4, [r0], -r9
    6a44:	000043d3 	ldrdeq	r4, [r0], -r3
    6a48:	00459d20 	subeq	r9, r5, r0, lsr #26
    6a4c:	00440800 	subeq	r0, r4, r0, lsl #16
    6a50:	00440600 	subeq	r0, r4, r0, lsl #12
    6a54:	3c210000 	stccc	0, cr0, [r1], #-0
    6a58:	00000045 	andeq	r0, r0, r5, asr #32
    6a5c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6a68:	05cf0100 	strbeq	r0, [pc, #256]	; 6b70 <_Min_Heap_Size+0x6370>
    6a6c:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6a70:	441f0000 	ldrmi	r0, [pc], #-0	; 6a78 <_Min_Heap_Size+0x6278>
    6a74:	441b0000 	ldrmi	r0, [fp], #-0
    6a78:	4f1f0000 	svcmi	0x001f0000
    6a7c:	41000045 	tstmi	r0, r5, asr #32
    6a80:	3f000044 	svccc	0x00000044
    6a84:	20000044 	andcs	r0, r0, r4, asr #32
    6a88:	00004569 	andeq	r4, r0, r9, ror #10
    6a8c:	00004456 	andeq	r4, r0, r6, asr r4
    6a90:	00004454 	andeq	r4, r0, r4, asr r4
    6a94:	27000000 	strcs	r0, [r0, -r0]
    6a98:	0013cc01 	andseq	ip, r3, r1, lsl #24
    6a9c:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    6aa0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6aac:	44690000 	strbtmi	r0, [r9], #-0
    6ab0:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    6ab4:	1600003c 			; <UNDEFINED> instruction: 0x1600003c
    6ab8:	000014f7 	strdeq	r1, [r0], -r7
    6abc:	3c05a101 	stfccd	f2, [r5], {1}
    6ac0:	00000796 	muleq	r0, r6, r7
    6ac4:	00004499 	muleq	r0, r9, r4
    6ac8:	00004489 	andeq	r4, r0, r9, lsl #9
    6acc:	00114816 	andseq	r4, r1, r6, lsl r8
    6ad0:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    6ad4:	0006824c 	andeq	r8, r6, ip, asr #4
    6ad8:	00450f00 	subeq	r0, r5, r0, lsl #30
    6adc:	00450500 	subeq	r0, r5, r0, lsl #10
    6ae0:	24dc1600 	ldrbcs	r1, [ip], #1536	; 0x600
    6ae4:	a1010000 	mrsge	r0, (UNDEF: 1)
    6ae8:	00b05c05 	adcseq	r5, r0, r5, lsl #24
    6aec:	455e0000 	ldrbmi	r0, [lr, #-0]
    6af0:	45540000 	ldrbmi	r0, [r4, #-0]
    6af4:	00230000 	eoreq	r0, r3, r0
    6af8:	ad000000 	stcge	0, cr0, [r0, #-0]
    6afc:	1900000d 	stmdbne	r0, {r0, r2, r3}
    6b00:	f3035001 	vhadd.u8	d5, d3, d1
    6b04:	00005001 	andeq	r5, r0, r1
    6b08:	166e0127 	strbtne	r0, [lr], -r7, lsr #2
    6b0c:	63010000 	movwvs	r0, #4096	; 0x1000
    6b10:	3a011305 	bcc	4b72c <_Min_Heap_Size+0x4af2c>
    6b14:	00000002 	andeq	r0, r0, r2
    6b18:	00000000 	andeq	r0, r0, r0
    6b1c:	a3000000 	movwge	r0, #0
    6b20:	01000045 	tsteq	r0, r5, asr #32
    6b24:	00003e11 	andeq	r3, r0, r1, lsl lr
    6b28:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6b2c:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    6b30:	0007963d 	andeq	r9, r7, sp, lsr r6
    6b34:	0045d300 	subeq	sp, r5, r0, lsl #6
    6b38:	0045c300 	subeq	ip, r5, r0, lsl #6
    6b3c:	11481600 	cmpne	r8, r0, lsl #12
    6b40:	63010000 	movwvs	r0, #4096	; 0x1000
    6b44:	067c5305 	ldrbteq	r5, [ip], -r5, lsl #6
    6b48:	46430000 	strbmi	r0, [r3], -r0
    6b4c:	46390000 	ldrtmi	r0, [r9], -r0
    6b50:	dc160000 	ldcle	0, cr0, [r6], {-0}
    6b54:	01000024 	tsteq	r0, r4, lsr #32
    6b58:	b0630563 	rsblt	r0, r3, r3, ror #10
    6b5c:	92000000 	andls	r0, r0, #0
    6b60:	88000046 	stmdahi	r0, {r1, r2, r6}
    6b64:	1d000046 	stcne	0, cr0, [r0, #-280]	; 0xfffffee8
    6b68:	00706d74 	rsbseq	r6, r0, r4, ror sp
    6b6c:	13056501 	movwne	r6, #21761	; 0x5501
    6b70:	00003e11 	andeq	r3, r0, r1, lsl lr
    6b74:	000046d9 	ldrdeq	r4, [r0], -r9
    6b78:	000046d7 	ldrdeq	r4, [r0], -r7
    6b7c:	0001082d 	andeq	r0, r1, sp, lsr #16
    6b80:	003dff00 	eorseq	pc, sp, r0, lsl #30
    6b84:	61761d00 	cmnvs	r6, r0, lsl #26
    6b88:	8b01006c 	blhi	46d40 <_Min_Heap_Size+0x46540>
    6b8c:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6b90:	46f30000 	ldrbtmi	r0, [r3], r0
    6b94:	46f10000 	ldrbtmi	r0, [r1], r0
    6b98:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6b9c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6bac:	058b0100 	streq	r0, [fp, #256]	; 0x100
    6bb0:	003dbf05 	eorseq	fp, sp, r5, lsl #30
    6bb4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6bb8:	470c0000 	strmi	r0, [ip, -r0]
    6bbc:	47060000 	strmi	r0, [r6, -r0]
    6bc0:	9d200000 	stcls	0, cr0, [r0, #-0]
    6bc4:	3b000045 	blcc	6ce0 <_Min_Heap_Size+0x64e0>
    6bc8:	39000047 	stmdbcc	r0, {r0, r1, r2, r6}
    6bcc:	00000047 	andeq	r0, r0, r7, asr #32
    6bd0:	00453c21 	subeq	r3, r5, r1, lsr #24
    6bd4:	00000000 	andeq	r0, r0, r0
    6bd8:	00000100 	andeq	r0, r0, r0, lsl #2
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	01000000 	mrseq	r0, (UNDEF: 0)
    6be4:	1f05058b 	svcne	0x0005058b
    6be8:	0000455c 	andeq	r4, r0, ip, asr r5
    6bec:	00004752 	andeq	r4, r0, r2, asr r7
    6bf0:	0000474e 	andeq	r4, r0, lr, asr #14
    6bf4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6bf8:	00477400 	subeq	r7, r7, r0, lsl #8
    6bfc:	00477200 	subeq	r7, r7, r0, lsl #4
    6c00:	45692000 	strbmi	r2, [r9, #-0]!
    6c04:	47890000 	strmi	r0, [r9, r0]
    6c08:	47870000 	strmi	r0, [r7, r0]
    6c0c:	00000000 	andeq	r0, r0, r0
    6c10:	00000023 	andeq	r0, r0, r3, lsr #32
    6c14:	0045e300 	subeq	lr, r5, r0, lsl #6
    6c18:	51011900 	tstpl	r1, r0, lsl #18
    6c1c:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    6c20:	04110000 	ldreq	r0, [r1], #-0
    6c24:	000000d7 	ldrdeq	r0, [r0], -r7
    6c28:	17030127 	strne	r0, [r3, -r7, lsr #2]
    6c2c:	43010000 	movwmi	r0, #4096	; 0x1000
    6c30:	3a011305 	bcc	4b84c <_Min_Heap_Size+0x4b04c>
    6c34:	00000002 	andeq	r0, r0, r2
    6c38:	00000000 	andeq	r0, r0, r0
    6c3c:	9c000000 	stcls	0, cr0, [r0], {-0}
    6c40:	01000047 	tsteq	r0, r7, asr #32
    6c44:	00003e88 	andeq	r3, r0, r8, lsl #29
    6c48:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6c4c:	05430100 	strbeq	r0, [r3, #-256]	; 0xffffff00
    6c50:	0007963b 	andeq	r9, r7, fp, lsr r6
    6c54:	0047cc00 	subeq	ip, r7, r0, lsl #24
    6c58:	0047bc00 	subeq	fp, r7, r0, lsl #24
    6c5c:	11481600 	cmpne	r8, r0, lsl #12
    6c60:	43010000 	movwmi	r0, #4096	; 0x1000
    6c64:	06824b05 	streq	r4, [r2], r5, lsl #22
    6c68:	48420000 	stmdami	r2, {}^	; <UNPREDICTABLE>
    6c6c:	48380000 	ldmdami	r8!, {}	; <UNPREDICTABLE>
    6c70:	dc160000 	ldcle	0, cr0, [r6], {-0}
    6c74:	01000024 	tsteq	r0, r4, lsr #32
    6c78:	b05b0543 	subslt	r0, fp, r3, asr #10
    6c7c:	91000000 	mrsls	r0, (UNDEF: 0)
    6c80:	87000048 	strhi	r0, [r0, -r8, asr #32]
    6c84:	23000048 	movwcs	r0, #72	; 0x48
    6c88:	00000000 	andeq	r0, r0, r0
    6c8c:	0000101f 	andeq	r1, r0, pc, lsl r0
    6c90:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    6c94:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    6c98:	af012800 	svcge	0x00012800
    6c9c:	01000015 	tsteq	r0, r5, lsl r0
    6ca0:	0113051c 	tsteq	r3, ip, lsl r5
    6ca4:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6cb0:	01007d02 	tsteq	r0, r2, lsl #26
    6cb4:	00003ee7 	andeq	r3, r0, r7, ror #29
    6cb8:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6cbc:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    6cc0:	0007963c 	andeq	r9, r7, ip, lsr r6
    6cc4:	0048e600 	subeq	lr, r8, r0, lsl #12
    6cc8:	0048d600 	subeq	sp, r8, r0, lsl #12
    6ccc:	11481600 	cmpne	r8, r0, lsl #12
    6cd0:	1c010000 	stcne	0, cr0, [r1], {-0}
    6cd4:	067c5205 	ldrbteq	r5, [ip], -r5, lsl #4
    6cd8:	495a0000 	ldmdbmi	sl, {}^	; <UNPREDICTABLE>
    6cdc:	49520000 	ldmdbmi	r2, {}^	; <UNPREDICTABLE>
    6ce0:	dc160000 	ldcle	0, cr0, [r6], {-0}
    6ce4:	01000024 	tsteq	r0, r4, lsr #32
    6ce8:	b062051c 	rsblt	r0, r2, ip, lsl r5
    6cec:	9a000000 	bls	6cf4 <_Min_Heap_Size+0x64f4>
    6cf0:	92000049 	andls	r0, r0, #73	; 0x49
    6cf4:	00000049 	andeq	r0, r0, r9, asr #32
    6cf8:	159e0127 	ldrne	r0, [lr, #295]	; 0x127
    6cfc:	c5010000 	strgt	r0, [r1, #-0]
    6d00:	3a011304 	bcc	4b918 <_Min_Heap_Size+0x4b118>
    6d04:	00000002 	andeq	r0, r0, r2
    6d08:	00000000 	andeq	r0, r0, r0
    6d0c:	d2000000 	andle	r0, r0, #0
    6d10:	01000049 	tsteq	r0, r9, asr #32
    6d14:	00003fcc 	andeq	r3, r0, ip, asr #31
    6d18:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6d1c:	04c50100 	strbeq	r0, [r5], #256	; 0x100
    6d20:	00079638 	andeq	r9, r7, r8, lsr r6
    6d24:	004a2600 	subeq	r2, sl, r0, lsl #12
    6d28:	004a1600 	subeq	r1, sl, r0, lsl #12
    6d2c:	11481600 	cmpne	r8, r0, lsl #12
    6d30:	c5010000 	strgt	r0, [r1, #-0]
    6d34:	06824804 	streq	r4, [r2], r4, lsl #16
    6d38:	4a970000 	bmi	fe5c6d40 <_estack+0xde5c5b08>
    6d3c:	4a890000 	bmi	fe246d44 <_estack+0xde245b0c>
    6d40:	dc160000 	ldcle	0, cr0, [r6], {-0}
    6d44:	01000024 	tsteq	r0, r4, lsr #32
    6d48:	b05804c5 	subslt	r0, r8, r5, asr #9
    6d4c:	fc000000 	stc2	0, cr0, [r0], {-0}
    6d50:	f200004a 	vhadd.s8	q0, q0, q5
    6d54:	1600004a 	strne	r0, [r0], -sl, asr #32
    6d58:	0000142c 	andeq	r1, r0, ip, lsr #8
    6d5c:	6704c501 	strvs	ip, [r4, -r1, lsl #10]
    6d60:	000000c6 	andeq	r0, r0, r6, asr #1
    6d64:	00004b45 	andeq	r4, r0, r5, asr #22
    6d68:	00004b41 	andeq	r4, r0, r1, asr #22
    6d6c:	00117417 	andseq	r7, r1, r7, lsl r4
    6d70:	04c70100 	strbeq	r0, [r7], #256	; 0x100
    6d74:	0006820d 	andeq	r8, r6, sp, lsl #4
    6d78:	004b6500 	subeq	r6, fp, r0, lsl #10
    6d7c:	004b6300 	subeq	r6, fp, r0, lsl #6
    6d80:	11de1700 	bicsne	r1, lr, r0, lsl #14
    6d84:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    6d88:	08cf0d04 	stmiaeq	pc, {r2, r8, sl, fp}^	; <UNPREDICTABLE>
    6d8c:	4b7e0000 	blmi	1f86d94 <_Min_Heap_Size+0x1f86594>
    6d90:	4b780000 	blmi	1e06d98 <_Min_Heap_Size+0x1e06598>
    6d94:	41170000 	tstmi	r7, r0
    6d98:	01000015 	tsteq	r0, r5, lsl r0
    6d9c:	c60c04c9 	strgt	r0, [ip], -r9, asr #9
    6da0:	b3000000 	movwlt	r0, #0
    6da4:	a900004b 	stmdbge	r0, {r0, r1, r3, r6}
    6da8:	1a00004b 	bne	6edc <_Min_Heap_Size+0x66dc>
    6dac:	00000000 	andeq	r0, r0, r0
    6db0:	000045f2 	strdeq	r4, [r0], -r2
    6db4:	00000023 	andeq	r0, r0, r3, lsr #32
    6db8:	00107800 	andseq	r7, r0, r0, lsl #16
    6dbc:	50011900 	andpl	r1, r1, r0, lsl #18
    6dc0:	19007402 	stmdbne	r0, {r1, sl, ip, sp, lr}
    6dc4:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    6dc8:	52011920 	andpl	r1, r1, #32, 18	; 0x80000
    6dcc:	01193001 	tsteq	r9, r1
    6dd0:	00770253 	rsbseq	r0, r7, r3, asr r2
    6dd4:	007d0219 	rsbseq	r0, sp, r9, lsl r2
    6dd8:	00007602 	andeq	r7, r0, r2, lsl #12
    6ddc:	19012700 	stmdbne	r1, {r8, r9, sl, sp}
    6de0:	01000001 	tsteq	r0, r1
    6de4:	0113046f 	tsteq	r3, pc, ror #8
    6de8:	0000023a 	andeq	r0, r0, sl, lsr r2
    6dec:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
    6df0:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
    6df4:	00004bf5 	strdeq	r4, [r0], -r5
    6df8:	0040dd01 	subeq	sp, r0, r1, lsl #26
    6dfc:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    6e00:	6f010000 	svcvs	0x00010000
    6e04:	07963904 	ldreq	r3, [r6, r4, lsl #18]
    6e08:	4c490000 	marmi	acc0, r0, r9
    6e0c:	4c390000 	ldcmi	0, cr0, [r9], #-0
    6e10:	48160000 	ldmdami	r6, {}	; <UNPREDICTABLE>
    6e14:	01000011 	tsteq	r0, r1, lsl r0
    6e18:	7c4f046f 	cfstrdvc	mvd0, [pc], {111}	; 0x6f
    6e1c:	be000006 	cdplt	0, 0, cr0, cr0, cr6, {0}
    6e20:	ac00004c 	stcge	0, cr0, [r0], {76}	; 0x4c
    6e24:	1600004c 	strne	r0, [r0], -ip, asr #32
    6e28:	000024dc 	ldrdeq	r2, [r0], -ip
    6e2c:	5f046f01 	svcpl	0x00046f01
    6e30:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6e34:	00004d3c 	andeq	r4, r0, ip, lsr sp
    6e38:	00004d32 	andeq	r4, r0, r2, lsr sp
    6e3c:	00142c16 	andseq	r2, r4, r6, lsl ip
    6e40:	046f0100 	strbteq	r0, [pc], #-256	; 6e48 <_Min_Heap_Size+0x6648>
    6e44:	0000c66e 	andeq	ip, r0, lr, ror #12
    6e48:	004d8500 	subeq	r8, sp, r0, lsl #10
    6e4c:	004d8100 	subeq	r8, sp, r0, lsl #2
    6e50:	11741700 	cmnne	r4, r0, lsl #14
    6e54:	71010000 	mrsvc	r0, (UNDEF: 1)
    6e58:	067c1304 	ldrbteq	r1, [ip], -r4, lsl #6
    6e5c:	4dab0000 	stcmi	0, cr0, [fp]
    6e60:	4da30000 	stcmi	0, cr0, [r3]
    6e64:	de170000 	cdple	0, 1, cr0, cr7, cr0, {0}
    6e68:	01000011 	tsteq	r0, r1, lsl r0
    6e6c:	64130472 	ldrvs	r0, [r3], #-1138	; 0xfffffb8e
    6e70:	e9000009 	stmdb	r0, {r0, r3}
    6e74:	e100004d 	crc32b	r0, r0, sp
    6e78:	1700004d 	strne	r0, [r0, -sp, asr #32]
    6e7c:	00001541 	andeq	r1, r0, r1, asr #10
    6e80:	0c047301 	stceq	3, cr7, [r4], {1}
    6e84:	000000c6 	andeq	r0, r0, r6, asr #1
    6e88:	00004e2d 	andeq	r4, r0, sp, lsr #28
    6e8c:	00004e1f 	andeq	r4, r0, pc, lsl lr
    6e90:	000cd81a 	andeq	sp, ip, sl, lsl r8
    6e94:	0045f208 	subeq	pc, r5, r8, lsl #4
    6e98:	0d2e1800 	stceq	8, cr1, [lr, #-0]
    6e9c:	10780800 	rsbsne	r0, r8, r0, lsl #16
    6ea0:	40b40000 	adcsmi	r0, r4, r0
    6ea4:	01190000 	tsteq	r9, r0
    6ea8:	00740250 	rsbseq	r0, r4, r0, asr r2
    6eac:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
    6eb0:	01198008 	tsteq	r9, r8
    6eb4:	19300152 	ldmdbne	r0!, {r1, r4, r6, r8}
    6eb8:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6ebc:	7d021900 	vstrvc.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    6ec0:	00760200 	rsbseq	r0, r6, r0, lsl #4
    6ec4:	0d542300 	ldcleq	3, cr2, [r4, #-0]
    6ec8:	10780800 	rsbsne	r0, r8, r0, lsl #16
    6ecc:	01190000 	tsteq	r9, r0
    6ed0:	00740250 	rsbseq	r0, r4, r0, asr r2
    6ed4:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
    6ed8:	01194008 	tsteq	r9, r8
    6edc:	19300152 	ldmdbne	r0!, {r1, r4, r6, r8}
    6ee0:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6ee4:	7d021900 	vstrvc.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    6ee8:	00760200 	rsbseq	r0, r6, r0, lsl #4
    6eec:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    6ef0:	00000a4b 	andeq	r0, r0, fp, asr #20
    6ef4:	0d02da01 	vstreq	s26, [r2, #-4]
    6ef8:	00000001 	andeq	r0, r0, r1
    6efc:	00000000 	andeq	r0, r0, r0
    6f00:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    6f04:	00410801 	subeq	r0, r1, r1, lsl #16
    6f08:	14f72900 	ldrbtne	r2, [r7], #2304	; 0x900
    6f0c:	da010000 	ble	46f14 <_Min_Heap_Size+0x46714>
    6f10:	07963402 	ldreq	r3, [r6, r2, lsl #8]
    6f14:	50010000 	andpl	r0, r1, r0
    6f18:	1c012a00 			; <UNDEFINED> instruction: 0x1c012a00
    6f1c:	0100000a 	tsteq	r0, sl
    6f20:	010d02cb 	smlabteq	sp, fp, r2, r0
	...
    6f2c:	01007d02 	tsteq	r0, r2, lsl #26
    6f30:	00004133 	andeq	r4, r0, r3, lsr r1
    6f34:	0014f729 	andseq	pc, r4, r9, lsr #14
    6f38:	02cb0100 	sbceq	r0, fp, #0, 2
    6f3c:	00079632 	andeq	r9, r7, r2, lsr r6
    6f40:	00500100 	subseq	r0, r0, r0, lsl #2
    6f44:	12240127 	eorne	r0, r4, #-1073741815	; 0xc0000009
    6f48:	9d010000 	stcls	0, cr0, [r1, #-0]
    6f4c:	3a011302 	bcc	4bb5c <_Min_Heap_Size+0x4b35c>
    6f50:	00000002 	andeq	r0, r0, r2
    6f54:	00000000 	andeq	r0, r0, r0
    6f58:	85000000 	strhi	r0, [r0, #-0]
    6f5c:	0100004e 	tsteq	r0, lr, asr #32
    6f60:	00004197 	muleq	r0, r7, r1
    6f64:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6f68:	029d0100 	addseq	r0, sp, #0, 2
    6f6c:	00079637 	andeq	r9, r7, r7, lsr r6
    6f70:	004eb900 	subeq	fp, lr, r0, lsl #18
    6f74:	004eb100 	subeq	fp, lr, r0, lsl #2
    6f78:	00001800 	andeq	r1, r0, r0, lsl #16
    6f7c:	45ab0000 	strmi	r0, [fp, #0]!
    6f80:	41860000 	orrmi	r0, r6, r0
    6f84:	01190000 	tsteq	r9, r0
    6f88:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    6f8c:	1908002c 	stmdbne	r8, {r2, r3, r5}
    6f90:	0a035101 	beq	db39c <_Min_Heap_Size+0xdab9c>
    6f94:	230002a6 	movwcs	r0, #678	; 0x2a6
    6f98:	00000000 	andeq	r0, r0, r0
    6f9c:	000040dd 	ldrdeq	r4, [r0], -sp
    6fa0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6fa4:	00000074 	andeq	r0, r0, r4, ror r0
    6fa8:	14000127 	strne	r0, [r0], #-295	; 0xfffffed9
    6fac:	4f010000 	svcmi	0x00010000
    6fb0:	3a011302 	bcc	4bbc0 <_Min_Heap_Size+0x4b3c0>
    6fb4:	00000002 	andeq	r0, r0, r2
    6fb8:	00000000 	andeq	r0, r0, r0
    6fbc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    6fc0:	0100004e 	tsteq	r0, lr, asr #32
    6fc4:	000042b1 			; <UNDEFINED> instruction: 0x000042b1
    6fc8:	0014f716 	andseq	pc, r4, r6, lsl r7	; <UNPREDICTABLE>
    6fcc:	024f0100 	subeq	r0, pc, #0, 2
    6fd0:	0007963f 	andeq	r9, r7, pc, lsr r6
    6fd4:	004f2400 	subeq	r2, pc, r0, lsl #8
    6fd8:	004f1c00 	subeq	r1, pc, r0, lsl #24
    6fdc:	1ccc1600 	stclne	6, cr1, [ip], {0}
    6fe0:	4f010000 	svcmi	0x00010000
    6fe4:	009f4e02 	addseq	r4, pc, r2, lsl #28
    6fe8:	4f610000 	svcmi	0x00610000
    6fec:	4f5b0000 	svcmi	0x005b0000
    6ff0:	34160000 	ldrcc	r0, [r6], #-0
    6ff4:	01000012 	tsteq	r0, r2, lsl r0
    6ff8:	c660024f 	strbtgt	r0, [r0], -pc, asr #4
    6ffc:	97000000 	strls	r0, [r0, -r0]
    7000:	8d00004f 	stchi	0, cr0, [r0, #-316]	; 0xfffffec4
    7004:	1800004f 	stmdane	r0, {r0, r1, r2, r3, r6}
    7008:	00000000 	andeq	r0, r0, r0
    700c:	000045ab 	andeq	r4, r0, fp, lsr #11
    7010:	00004214 	andeq	r4, r0, r4, lsl r2
    7014:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7018:	002c0803 	eoreq	r0, ip, r3, lsl #16
    701c:	51011908 	tstpl	r1, r8, lsl #18
    7020:	02580a03 	subseq	r0, r8, #12288	; 0x3000
    7024:	00001800 	andeq	r1, r0, r0, lsl #16
    7028:	069f0000 	ldreq	r0, [pc], r0
    702c:	42280000 	eormi	r0, r8, #0
    7030:	01190000 	tsteq	r9, r0
    7034:	00740250 	rsbseq	r0, r4, r0, asr r2
    7038:	00001800 	andeq	r1, r0, r0, lsl #16
    703c:	45ab0000 	strmi	r0, [fp, #0]!
    7040:	42460000 	submi	r0, r6, #0
    7044:	01190000 	tsteq	r9, r0
    7048:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    704c:	1908002c 	stmdbne	r8, {r2, r3, r5}
    7050:	0a035101 	beq	db45c <_Min_Heap_Size+0xdac5c>
    7054:	1800025b 	stmdane	r0, {r0, r1, r3, r4, r6, r9}
    7058:	00000000 	andeq	r0, r0, r0
    705c:	000045ab 	andeq	r4, r0, fp, lsr #11
    7060:	00004264 	andeq	r4, r0, r4, ror #4
    7064:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7068:	002c0803 	eoreq	r0, ip, r3, lsl #16
    706c:	51011908 	tstpl	r1, r8, lsl #18
    7070:	025c0a03 	subseq	r0, ip, #12288	; 0x3000
    7074:	00001800 	andeq	r1, r0, r0, lsl #16
    7078:	45ab0000 	strmi	r0, [fp, #0]!
    707c:	42820000 	addmi	r0, r2, #0
    7080:	01190000 	tsteq	r9, r0
    7084:	08030550 	stmdaeq	r3, {r4, r6, r8, sl}
    7088:	1908002c 	stmdbne	r8, {r2, r3, r5}
    708c:	0a035101 	beq	db498 <_Min_Heap_Size+0xdac98>
    7090:	1800025d 	stmdane	r0, {r0, r2, r3, r4, r6, r9}
    7094:	00000000 	andeq	r0, r0, r0
    7098:	000045ab 	andeq	r4, r0, fp, lsr #11
    709c:	000042a0 	andeq	r4, r0, r0, lsr #5
    70a0:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    70a4:	002c0803 	eoreq	r0, ip, r3, lsl #16
    70a8:	51011908 	tstpl	r1, r8, lsl #18
    70ac:	025e0a03 	subseq	r0, lr, #12288	; 0x3000
    70b0:	00002300 	andeq	r2, r0, r0, lsl #6
    70b4:	41080000 	mrsmi	r0, (UNDEF: 8)
    70b8:	01190000 	tsteq	r9, r0
    70bc:	00740250 	rsbseq	r0, r4, r0, asr r2
    70c0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    70c4:	00001717 	andeq	r1, r0, r7, lsl r7
    70c8:	1301fd01 	movwne	pc, #7425	; 0x1d01	; <UNPREDICTABLE>
    70cc:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    70d8:	004fd900 	subeq	sp, pc, r0, lsl #18
    70dc:	43980100 	orrsmi	r0, r8, #0, 2
    70e0:	f7160000 			; <UNDEFINED> instruction: 0xf7160000
    70e4:	01000014 	tsteq	r0, r4, lsl r0
    70e8:	963401fd 			; <UNDEFINED> instruction: 0x963401fd
    70ec:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    70f0:	05000050 	streq	r0, [r0, #-80]	; 0xffffffb0
    70f4:	16000050 			; <UNDEFINED> instruction: 0x16000050
    70f8:	00001241 	andeq	r1, r0, r1, asr #4
    70fc:	4401fd01 	strmi	pc, [r1], #-3329	; 0xfffff2ff
    7100:	000000c6 	andeq	r0, r0, r6, asr #1
    7104:	0000504e 	andeq	r5, r0, lr, asr #32
    7108:	00005044 	andeq	r5, r0, r4, asr #32
    710c:	00000018 	andeq	r0, r0, r8, lsl r0
    7110:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7114:	00431900 	subeq	r1, r3, r0, lsl #18
    7118:	50011900 	andpl	r1, r1, r0, lsl #18
    711c:	2c080305 	stccs	3, cr0, [r8], {5}
    7120:	01190800 	tsteq	r9, r0, lsl #16
    7124:	060a0351 			; <UNDEFINED> instruction: 0x060a0351
    7128:	00180002 	andseq	r0, r8, r2
    712c:	9f000000 	svcls	0x00000000
    7130:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    7134:	19000043 	stmdbne	r0, {r0, r1, r6}
    7138:	74025001 	strvc	r5, [r2], #-1
    713c:	00180000 	andseq	r0, r8, r0
    7140:	ab000000 	blge	7148 <_Min_Heap_Size+0x6948>
    7144:	4b000045 	blmi	7260 <_Min_Heap_Size+0x6a60>
    7148:	19000043 	stmdbne	r0, {r0, r1, r6}
    714c:	03055001 	movweq	r5, #20481	; 0x5001
    7150:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    7154:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7158:	0002090a 	andeq	r0, r2, sl, lsl #18
    715c:	00000018 	andeq	r0, r0, r8, lsl r0
    7160:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7164:	00436900 	subeq	r6, r3, r0, lsl #18
    7168:	50011900 	andpl	r1, r1, r0, lsl #18
    716c:	2c080305 	stccs	3, cr0, [r8], {5}
    7170:	01190800 	tsteq	r9, r0, lsl #16
    7174:	0a0a0351 	beq	287ec0 <_Min_Heap_Size+0x2876c0>
    7178:	00180002 	andseq	r0, r8, r2
    717c:	ab000000 	blge	7184 <_Min_Heap_Size+0x6984>
    7180:	87000045 	strhi	r0, [r0, -r5, asr #32]
    7184:	19000043 	stmdbne	r0, {r0, r1, r6}
    7188:	03055001 	movweq	r5, #20481	; 0x5001
    718c:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    7190:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7194:	00020b0a 	andeq	r0, r2, sl, lsl #22
    7198:	00000023 	andeq	r0, r0, r3, lsr #32
    719c:	00410800 	subeq	r0, r1, r0, lsl #16
    71a0:	50011900 	andpl	r1, r1, r0, lsl #18
    71a4:	00007402 	andeq	r7, r0, r2, lsl #8
    71a8:	10012700 	andne	r2, r1, r0, lsl #14
    71ac:	01000012 	tsteq	r0, r2, lsl r0
    71b0:	011301b3 			; <UNDEFINED> instruction: 0x011301b3
    71b4:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    71c0:	00005090 	muleq	r0, r0, r0
    71c4:	00444c01 	subeq	r4, r4, r1, lsl #24
    71c8:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    71cc:	b3010000 	movwlt	r0, #4096	; 0x1000
    71d0:	07963b01 	ldreq	r3, [r6, r1, lsl #22]
    71d4:	50c40000 	sbcpl	r0, r4, r0
    71d8:	50bc0000 	adcspl	r0, ip, r0
    71dc:	00180000 	andseq	r0, r8, r0
    71e0:	ab000000 	blge	71e8 <_Min_Heap_Size+0x69e8>
    71e4:	eb000045 	bl	7300 <_Min_Heap_Size+0x6b00>
    71e8:	19000043 	stmdbne	r0, {r0, r1, r6}
    71ec:	03055001 	movweq	r5, #20481	; 0x5001
    71f0:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    71f4:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    71f8:	0001bc0a 	andeq	fp, r1, sl, lsl #24
    71fc:	00000018 	andeq	r0, r0, r8, lsl r0
    7200:	00069f00 	andeq	r9, r6, r0, lsl #30
    7204:	0043ff00 	subeq	pc, r3, r0, lsl #30
    7208:	50011900 	andpl	r1, r1, r0, lsl #18
    720c:	00007402 	andeq	r7, r0, r2, lsl #8
    7210:	00000018 	andeq	r0, r0, r8, lsl r0
    7214:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7218:	00441d00 	subeq	r1, r4, r0, lsl #26
    721c:	50011900 	andpl	r1, r1, r0, lsl #18
    7220:	2c080305 	stccs	3, cr0, [r8], {5}
    7224:	01190800 	tsteq	r9, r0, lsl #16
    7228:	bd0a0351 	stclt	3, cr0, [sl, #-324]	; 0xfffffebc
    722c:	00180001 	andseq	r0, r8, r1
    7230:	ab000000 	blge	7238 <_Min_Heap_Size+0x6a38>
    7234:	3b000045 	blcc	7350 <_Min_Heap_Size+0x6b50>
    7238:	19000044 	stmdbne	r0, {r2, r6}
    723c:	03055001 	movweq	r5, #20481	; 0x5001
    7240:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    7244:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7248:	0001be0a 	andeq	fp, r1, sl, lsl #28
    724c:	00000023 	andeq	r0, r0, r3, lsr #32
    7250:	00410800 	subeq	r0, r1, r0, lsl #16
    7254:	50011900 	andpl	r1, r1, r0, lsl #18
    7258:	00007402 	andeq	r7, r0, r2, lsl #8
    725c:	58012700 	stmdapl	r1, {r8, r9, sl, sp}
    7260:	0100000b 	tsteq	r0, fp
    7264:	01130165 	tsteq	r3, r5, ror #2
    7268:	0000023a 	andeq	r0, r0, sl, lsr r2
    726c:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
    7270:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
    7274:	000050fb 	strdeq	r5, [r0], -fp
    7278:	00453c01 	subeq	r3, r5, r1, lsl #24
    727c:	14f71600 	ldrbtne	r1, [r7], #1536	; 0x600
    7280:	65010000 	strvs	r0, [r1, #-0]
    7284:	07963501 	ldreq	r3, [r6, r1, lsl #10]
    7288:	51330000 	teqpl	r3, r0
    728c:	51270000 			; <UNDEFINED> instruction: 0x51270000
    7290:	b6180000 	ldrlt	r0, [r8], -r0
    7294:	ab08000b 	blge	2072c8 <_Min_Heap_Size+0x206ac8>
    7298:	9f000045 	svcls	0x00000045
    729c:	19000044 	stmdbne	r0, {r2, r6}
    72a0:	03055001 	movweq	r5, #20481	; 0x5001
    72a4:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    72a8:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    72ac:	0001730a 	andeq	r7, r1, sl, lsl #6
    72b0:	000bfe18 	andeq	pc, fp, r8, lsl lr	; <UNPREDICTABLE>
    72b4:	00069f08 	andeq	r9, r6, r8, lsl #30
    72b8:	0044b300 	subeq	fp, r4, r0, lsl #6
    72bc:	50011900 	andpl	r1, r1, r0, lsl #18
    72c0:	00007402 	andeq	r7, r0, r2, lsl #8
    72c4:	000c3818 	andeq	r3, ip, r8, lsl r8
    72c8:	0045ab08 	subeq	sl, r5, r8, lsl #22
    72cc:	0044d100 	subeq	sp, r4, r0, lsl #2
    72d0:	50011900 	andpl	r1, r1, r0, lsl #18
    72d4:	2c080305 	stccs	3, cr0, [r8], {5}
    72d8:	01190800 	tsteq	r9, r0, lsl #16
    72dc:	740a0351 	strvc	r0, [sl], #-849	; 0xfffffcaf
    72e0:	74180001 	ldrvc	r0, [r8], #-1
    72e4:	ab08000c 	blge	20731c <_Min_Heap_Size+0x206b1c>
    72e8:	ef000045 	svc	0x00000045
    72ec:	19000044 	stmdbne	r0, {r2, r6}
    72f0:	03055001 	movweq	r5, #20481	; 0x5001
    72f4:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    72f8:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    72fc:	0001780a 	andeq	r7, r1, sl, lsl #16
    7300:	000c8018 	andeq	r8, ip, r8, lsl r0
    7304:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7308:	00450d00 	subeq	r0, r5, r0, lsl #26
    730c:	50011900 	andpl	r1, r1, r0, lsl #18
    7310:	2c080305 	stccs	3, cr0, [r8], {5}
    7314:	01190800 	tsteq	r9, r0, lsl #16
    7318:	7a0a0351 	bvc	288064 <_Min_Heap_Size+0x287864>
    731c:	8c180001 	ldchi	0, cr0, [r8], {1}
    7320:	ab08000c 	blge	207358 <_Min_Heap_Size+0x206b58>
    7324:	2b000045 	blcs	7440 <_Min_Heap_Size+0x6c40>
    7328:	19000045 	stmdbne	r0, {r0, r2, r6}
    732c:	03055001 	movweq	r5, #20481	; 0x5001
    7330:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
    7334:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7338:	00017b0a 	andeq	r7, r1, sl, lsl #22
    733c:	000c9823 	andeq	r9, ip, r3, lsr #16
    7340:	00410808 	subeq	r0, r1, r8, lsl #16
    7344:	50011900 	andpl	r1, r1, r0, lsl #18
    7348:	00007402 	andeq	r7, r0, r2, lsl #8
    734c:	12c62e00 	sbcne	r2, r6, #0, 28
    7350:	0f020000 	svceq	0x00020000
    7354:	c6011f02 	strgt	r1, [r1], -r2, lsl #30
    7358:	03000000 	movweq	r0, #0
    735c:	00004577 	andeq	r4, r0, r7, ror r5
    7360:	001f0e2f 	andseq	r0, pc, pc, lsr #28
    7364:	020f0200 	andeq	r0, pc, #0, 4
    7368:	0000c631 	andeq	ip, r0, r1, lsr r6
    736c:	00c52f00 	sbceq	r2, r5, r0, lsl #30
    7370:	0f020000 	svceq	0x00020000
    7374:	45774b02 	ldrbmi	r4, [r7, #-2818]!	; 0xfffff4fe
    7378:	24300000 	ldrtcs	r0, [r0], #-0
    737c:	02000017 	andeq	r0, r0, #23
    7380:	c60d0211 			; <UNDEFINED> instruction: 0xc60d0211
    7384:	00000000 	andeq	r0, r0, r0
    7388:	00d20411 	sbcseq	r0, r2, r1, lsl r4
    738c:	572e0000 	strpl	r0, [lr, -r0]!
    7390:	02000014 	andeq	r0, r0, #20
    7394:	011f01dc 			; <UNDEFINED> instruction: 0x011f01dc
    7398:	000000c6 	andeq	r0, r0, r6, asr #1
    739c:	0045ab03 	subeq	sl, r5, r3, lsl #22
    73a0:	00c52f00 	sbceq	r2, r5, r0, lsl #30
    73a4:	dc020000 	stcle	0, cr0, [r2], {-0}
    73a8:	45773b01 	ldrbmi	r3, [r7, #-2817]!	; 0xfffff4ff
    73ac:	24300000 	ldrtcs	r0, [r0], #-0
    73b0:	02000017 	andeq	r0, r0, #23
    73b4:	c60e01de 			; <UNDEFINED> instruction: 0xc60e01de
    73b8:	00000000 	andeq	r0, r0, r0
    73bc:	b8010131 	stmdalt	r1, {r0, r4, r5, r8}
    73c0:	b8000004 	stmdalt	r0, {r2}
    73c4:	0a000004 	beq	73dc <_Min_Heap_Size+0x6bdc>
    73c8:	310801e6 	smlattcc	r8, r6, r1, r0
    73cc:	106e0101 	rsbne	r0, lr, r1, lsl #2
    73d0:	106e0000 	rsbne	r0, lr, r0
    73d4:	ea0b0000 	b	2c73dc <_Min_Heap_Size+0x2c6bdc>
    73d8:	01310a04 	teqeq	r1, r4, lsl #20
    73dc:	0014fd01 	andseq	pc, r4, r1, lsl #26
    73e0:	0014fd00 	andseq	pc, r4, r0, lsl #26
    73e4:	04eb0b00 	strbteq	r0, [fp], #2816	; 0xb00
    73e8:	0101320a 	tsteq	r1, sl, lsl #4
    73ec:	000014b5 			; <UNDEFINED> instruction: 0x000014b5
    73f0:	000014b5 			; <UNDEFINED> instruction: 0x000014b5
    73f4:	a6010131 			; <UNDEFINED> instruction: 0xa6010131
    73f8:	a6000011 			; <UNDEFINED> instruction: 0xa6000011
    73fc:	08000011 	stmdaeq	r0, {r0, r4}
    7400:	33130297 	tstcc	r3, #1879048201	; 0x70000009
    7404:	139b0101 	orrsne	r0, fp, #1073741824	; 0x40000000
    7408:	139b0000 	orrsne	r0, fp, #0
    740c:	ea0c0000 	b	307414 <_Min_Heap_Size+0x306c14>
    7410:	0101310a 	tsteq	r1, sl, lsl #2
    7414:	00001308 	andeq	r1, r0, r8, lsl #6
    7418:	00001308 	andeq	r1, r0, r8, lsl #6
    741c:	13029808 	movwne	r9, #10248	; 0x2808
    7420:	cc010131 	stfgts	f0, [r1], {49}	; 0x31
    7424:	cc000010 	stcgt	0, cr0, [r0], {16}
    7428:	08000010 	stmdaeq	r0, {r4}
    742c:	31130299 			; <UNDEFINED> instruction: 0x31130299
    7430:	165d0101 	ldrbne	r0, [sp], -r1, lsl #2
    7434:	165d0000 	ldrbne	r0, [sp], -r0
    7438:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    743c:	7f001602 	svcvc	0x00001602
    7440:	0200000e 	andeq	r0, r0, #14
    7444:	000b1300 	andeq	r1, fp, r0, lsl #6
    7448:	d7010400 	strle	r0, [r1, -r0, lsl #8]
    744c:	0c000005 	stceq	0, cr0, [r0], {5}
    7450:	0000188e 	andeq	r1, r0, lr, lsl #17
    7454:	00000420 	andeq	r0, r0, r0, lsr #8
    7458:	00000330 	andeq	r0, r0, r0, lsr r3
	...
    7464:	0000539b 	muleq	r0, fp, r3
    7468:	c5060102 	strgt	r0, [r6, #-258]	; 0xfffffefe
    746c:	03000005 	movweq	r0, #5
    7470:	00000066 	andeq	r0, r0, r6, rrx
    7474:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    7478:	02000000 	andeq	r0, r0, #0
    747c:	05c30801 	strbeq	r0, [r3, #2049]	; 0x801
    7480:	02020000 	andeq	r0, r2, #0
    7484:	0003fa05 	andeq	pc, r3, r5, lsl #20
    7488:	075c0300 	ldrbeq	r0, [ip, -r0, lsl #6]
    748c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    7490:	00005619 	andeq	r5, r0, r9, lsl r6
    7494:	07020200 	streq	r0, [r2, -r0, lsl #4]
    7498:	000007f6 	strdeq	r0, [r0], -r6
    749c:	ec050402 	cfstrs	mvf0, [r5], {2}
    74a0:	03000002 	movweq	r0, #2
    74a4:	000002c2 	andeq	r0, r0, r2, asr #5
    74a8:	70194f02 	andsvc	r4, r9, r2, lsl #30
    74ac:	02000000 	andeq	r0, r0, #0
    74b0:	00b30704 	adcseq	r0, r3, r4, lsl #14
    74b4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    74b8:	0002e705 	andeq	lr, r2, r5, lsl #14
    74bc:	14aa0300 	strtne	r0, [sl], #768	; 0x300
    74c0:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
    74c4:	00008a19 	andeq	r8, r0, r9, lsl sl
    74c8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    74cc:	000000ae 	andeq	r0, r0, lr, lsr #1
    74d0:	69050404 	stmdbvs	r5, {r2, sl}
    74d4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    74d8:	00b80704 	adcseq	r0, r8, r4, lsl #14
    74dc:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    74e0:	03000000 	movweq	r0, #0
    74e4:	00301318 	eorseq	r1, r0, r8, lsl r3
    74e8:	9f050000 	svcls	0x00050000
    74ec:	03000000 	movweq	r0, #0
    74f0:	0000075e 	andeq	r0, r0, lr, asr r7
    74f4:	4a142403 	bmi	510508 <_Min_Heap_Size+0x50fd08>
    74f8:	03000000 	movweq	r0, #0
    74fc:	000002c4 	andeq	r0, r0, r4, asr #5
    7500:	64143003 	ldrvs	r3, [r4], #-3
    7504:	06000000 	streq	r0, [r0], -r0
    7508:	000000bc 	strheq	r0, [r0], -ip
    750c:	0014ac03 	andseq	sl, r4, r3, lsl #24
    7510:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
    7514:	0000007e 	andeq	r0, r0, lr, ror r0
    7518:	0000bc07 	andeq	fp, r0, r7, lsl #24
    751c:	0000e900 	andeq	lr, r0, r0, lsl #18
    7520:	00980800 	addseq	r0, r8, r0, lsl #16
    7524:	00010000 	andeq	r0, r1, r0
    7528:	0017f609 	andseq	pc, r7, r9, lsl #12
    752c:	11390400 	teqne	r9, r0, lsl #8
    7530:	000000bc 	strheq	r0, [r0], -ip
    7534:	ab070101 	blge	1c7940 <_Min_Heap_Size+0x1c7140>
    7538:	07000000 	streq	r0, [r0, -r0]
    753c:	08000001 	stmdaeq	r0, {r0}
    7540:	00000098 	muleq	r0, r8, r0
    7544:	f705000f 			; <UNDEFINED> instruction: 0xf705000f
    7548:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    754c:	000017b6 			; <UNDEFINED> instruction: 0x000017b6
    7550:	07173b04 	ldreq	r3, [r7, -r4, lsl #22]
    7554:	01000001 	tsteq	r0, r1
    7558:	00ab0701 	adceq	r0, fp, r1, lsl #14
    755c:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    7560:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    7564:	07000000 	streq	r0, [r0, -r0]
    7568:	011a0500 	tsteq	sl, r0, lsl #10
    756c:	52090000 	andpl	r0, r9, #0
    7570:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    7574:	012a173c 			; <UNDEFINED> instruction: 0x012a173c
    7578:	01010000 	mrseq	r0, (UNDEF: 1)
    757c:	68051c0a 	stmdavs	r5, {r1, r3, sl, fp, ip}
    7580:	01b60901 			; <UNDEFINED> instruction: 0x01b60901
    7584:	410b0000 	mrsmi	r0, (UNDEF: 11)
    7588:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    758c:	c811016a 	ldmdagt	r1, {r1, r3, r5, r6, r8}
    7590:	02000000 	andeq	r0, r0, #0
    7594:	7e0c0023 	cdpvc	0, 0, cr0, cr12, cr3, {1}
    7598:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    759c:	c811016b 	ldmdagt	r1, {r0, r1, r3, r5, r6, r8}
    75a0:	02000000 	andeq	r0, r0, #0
    75a4:	7b0c0423 	blvc	308638 <_Min_Heap_Size+0x307e38>
    75a8:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    75ac:	c811016c 	ldmdagt	r1, {r2, r3, r5, r6, r8}
    75b0:	02000000 	andeq	r0, r0, #0
    75b4:	530b0823 	movwpl	r0, #47139	; 0xb823
    75b8:	6d050052 	stcvs	0, cr0, [r5, #-328]	; 0xfffffeb8
    75bc:	00c81101 	sbceq	r1, r8, r1, lsl #2
    75c0:	23020000 	movwcs	r0, #8192	; 0x2000
    75c4:	52430b0c 	subpl	r0, r3, #12, 22	; 0x3000
    75c8:	016e0500 	cmneq	lr, r0, lsl #10
    75cc:	0000c811 	andeq	ip, r0, r1, lsl r8
    75d0:	10230200 	eorne	r0, r3, r0, lsl #4
    75d4:	0017600c 	andseq	r6, r7, ip
    75d8:	016f0500 	cmneq	pc, r0, lsl #10
    75dc:	0000c811 	andeq	ip, r0, r1, lsl r8
    75e0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    75e4:	0017920c 	andseq	r9, r7, ip, lsl #4
    75e8:	01700500 	cmneq	r0, r0, lsl #10
    75ec:	0000c811 	andeq	ip, r0, r1, lsl r8
    75f0:	18230200 	stmdane	r3!, {r9}
    75f4:	17660d00 	strbne	r0, [r6, -r0, lsl #26]!
    75f8:	71050000 	mrsvc	r0, (UNDEF: 5)
    75fc:	013d0301 	teqeq	sp, r1, lsl #6
    7600:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    7604:	0901ae05 	stmdbeq	r1, {r0, r2, r9, sl, fp, sp, pc}
    7608:	0000025e 	andeq	r0, r0, lr, asr r2
    760c:	000ed70c 	andeq	sp, lr, ip, lsl #14
    7610:	01b00500 	lslseq	r0, r0, #10
    7614:	0000c811 	andeq	ip, r0, r1, lsl r8
    7618:	00230200 	eoreq	r0, r3, r0, lsl #4
    761c:	000de90c 	andeq	lr, sp, ip, lsl #18
    7620:	01b10500 			; <UNDEFINED> instruction: 0x01b10500
    7624:	0000c811 	andeq	ip, r0, r1, lsl r8
    7628:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    762c:	000c670c 	andeq	r6, ip, ip, lsl #14
    7630:	01b20500 			; <UNDEFINED> instruction: 0x01b20500
    7634:	0000c811 	andeq	ip, r0, r1, lsl r8
    7638:	08230200 	stmdaeq	r3!, {r9}
    763c:	000cb10c 	andeq	fp, ip, ip, lsl #2
    7640:	01b30500 			; <UNDEFINED> instruction: 0x01b30500
    7644:	0000c811 	andeq	ip, r0, r1, lsl r8
    7648:	0c230200 	sfmeq	f0, 4, [r3], #-0
    764c:	5244490b 	subpl	r4, r4, #180224	; 0x2c000
    7650:	01b40500 			; <UNDEFINED> instruction: 0x01b40500
    7654:	0000c811 	andeq	ip, r0, r1, lsl r8
    7658:	10230200 	eorne	r0, r3, r0, lsl #4
    765c:	52444f0b 	subpl	r4, r4, #11, 30	; 0x2c
    7660:	01b50500 			; <UNDEFINED> instruction: 0x01b50500
    7664:	0000c811 	andeq	ip, r0, r1, lsl r8
    7668:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    766c:	000e8a0c 	andeq	r8, lr, ip, lsl #20
    7670:	01b60500 			; <UNDEFINED> instruction: 0x01b60500
    7674:	0000c811 	andeq	ip, r0, r1, lsl r8
    7678:	18230200 	stmdane	r3!, {r9}
    767c:	000c550c 	andeq	r5, ip, ip, lsl #10
    7680:	01b70500 			; <UNDEFINED> instruction: 0x01b70500
    7684:	0000c811 	andeq	ip, r0, r1, lsl r8
    7688:	1c230200 	sfmne	f0, 4, [r3], #-0
    768c:	5246410b 	subpl	r4, r6, #-1073741822	; 0xc0000002
    7690:	01b80500 			; <UNDEFINED> instruction: 0x01b80500
    7694:	00026e11 	andeq	r6, r2, r1, lsl lr
    7698:	20230200 	eorcs	r0, r3, r0, lsl #4
    769c:	00c80700 	sbceq	r0, r8, r0, lsl #14
    76a0:	026e0000 	rsbeq	r0, lr, #0
    76a4:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    76a8:	01000000 	mrseq	r0, (UNDEF: 0)
    76ac:	025e0600 	subseq	r0, lr, #0, 12
    76b0:	8f0d0000 	svchi	0x000d0000
    76b4:	0500000e 	streq	r0, [r0, #-14]
    76b8:	c30301b9 	movwgt	r0, #12729	; 0x31b9
    76bc:	0a000001 	beq	76c8 <_Min_Heap_Size+0x6ec8>
    76c0:	01ea0508 	mvneq	r0, r8, lsl #10
    76c4:	0002aa09 	andeq	sl, r2, r9, lsl #20
    76c8:	52430b00 	subpl	r0, r3, #0, 22
    76cc:	01ec0500 	mvneq	r0, r0, lsl #10
    76d0:	0000c811 	andeq	ip, r0, r1, lsl r8
    76d4:	00230200 	eoreq	r0, r3, r0, lsl #4
    76d8:	5253430b 	subspl	r4, r3, #738197504	; 0x2c000000
    76dc:	01ed0500 	mvneq	r0, r0, lsl #10
    76e0:	0000c811 	andeq	ip, r0, r1, lsl r8
    76e4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    76e8:	01aa0d00 			; <UNDEFINED> instruction: 0x01aa0d00
    76ec:	ee050000 	cdp	0, 0, cr0, cr5, cr0, {0}
    76f0:	02800301 	addeq	r0, r0, #67108864	; 0x4000000
    76f4:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    76f8:	0901f405 	stmdbeq	r1, {r0, r2, sl, ip, sp, lr, pc}
    76fc:	000004a3 	andeq	r0, r0, r3, lsr #9
    7700:	0052430b 	subseq	r4, r2, fp, lsl #6
    7704:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    7708:	000000c8 	andeq	r0, r0, r8, asr #1
    770c:	0c002302 	stceq	3, cr2, [r0], {2}
    7710:	00000282 	andeq	r0, r0, r2, lsl #5
    7714:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    7718:	000000c8 	andeq	r0, r0, r8, asr #1
    771c:	0c042302 	stceq	3, cr2, [r4], {2}
    7720:	00000285 	andeq	r0, r0, r5, lsl #5
    7724:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    7728:	000000c8 	andeq	r0, r0, r8, asr #1
    772c:	0b082302 	bleq	21033c <_Min_Heap_Size+0x20fb3c>
    7730:	00524943 	subseq	r4, r2, r3, asr #18
    7734:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    7738:	000000c8 	andeq	r0, r0, r8, asr #1
    773c:	0c0c2302 	stceq	3, cr2, [ip], {2}
    7740:	00000166 	andeq	r0, r0, r6, ror #2
    7744:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    7748:	000000c8 	andeq	r0, r0, r8, asr #1
    774c:	0c102302 	ldceq	3, cr2, [r0], {2}
    7750:	0000077e 	andeq	r0, r0, lr, ror r7
    7754:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    7758:	000000c8 	andeq	r0, r0, r8, asr #1
    775c:	0c142302 	ldceq	3, cr2, [r4], {2}
    7760:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    7764:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    7768:	000000c8 	andeq	r0, r0, r8, asr #1
    776c:	0c182302 	ldceq	3, cr2, [r8], {2}
    7770:	0000055e 	andeq	r0, r0, lr, asr r5
    7774:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    7778:	000000bc 	strheq	r0, [r0], -ip
    777c:	0c1c2302 	ldceq	3, cr2, [ip], {2}
    7780:	0000053b 	andeq	r0, r0, fp, lsr r5
    7784:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    7788:	000000c8 	andeq	r0, r0, r8, asr #1
    778c:	0c202302 	stceq	3, cr2, [r0], #-8
    7790:	000001f9 	strdeq	r0, [r0], -r9
    7794:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    7798:	000000c8 	andeq	r0, r0, r8, asr #1
    779c:	0c242302 	stceq	3, cr2, [r4], #-8
    77a0:	00000568 	andeq	r0, r0, r8, ror #10
    77a4:	11020005 	tstne	r2, r5
    77a8:	000000d9 	ldrdeq	r0, [r0], -r9
    77ac:	0c282302 	stceq	3, cr2, [r8], #-8
    77b0:	000008d4 	ldrdeq	r0, [r0], -r4
    77b4:	11020105 	tstne	r2, r5, lsl #2
    77b8:	000000c8 	andeq	r0, r0, r8, asr #1
    77bc:	0c302302 	ldceq	3, cr2, [r0], #-8
    77c0:	000007ee 	andeq	r0, r0, lr, ror #15
    77c4:	11020205 	tstne	r2, r5, lsl #4
    77c8:	000000c8 	andeq	r0, r0, r8, asr #1
    77cc:	0c342302 	ldceq	3, cr2, [r4], #-8
    77d0:	000004d6 	ldrdeq	r0, [r0], -r6
    77d4:	11020305 	tstne	r2, r5, lsl #6
    77d8:	000000c8 	andeq	r0, r0, r8, asr #1
    77dc:	0c382302 	ldceq	3, cr2, [r8], #-8
    77e0:	00000572 	andeq	r0, r0, r2, ror r5
    77e4:	11020405 	tstne	r2, r5, lsl #8
    77e8:	000000bc 	strheq	r0, [r0], -ip
    77ec:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    77f0:	0000070b 	andeq	r0, r0, fp, lsl #14
    77f4:	11020505 	tstne	r2, r5, lsl #10
    77f8:	000000c8 	andeq	r0, r0, r8, asr #1
    77fc:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    7800:	000006c8 	andeq	r0, r0, r8, asr #13
    7804:	11020605 	tstne	r2, r5, lsl #12
    7808:	000000c8 	andeq	r0, r0, r8, asr #1
    780c:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    7810:	0000057c 	andeq	r0, r0, ip, ror r5
    7814:	11020705 	tstne	r2, r5, lsl #14
    7818:	000000d9 	ldrdeq	r0, [r0], -r9
    781c:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    7820:	0000012b 	andeq	r0, r0, fp, lsr #2
    7824:	11020805 	tstne	r2, r5, lsl #16
    7828:	000000c8 	andeq	r0, r0, r8, asr #1
    782c:	0c502302 	mrrceq	3, 0, r2, r0, cr2
    7830:	00000510 	andeq	r0, r0, r0, lsl r5
    7834:	11020905 	tstne	r2, r5, lsl #18
    7838:	000000c8 	andeq	r0, r0, r8, asr #1
    783c:	0c542302 	mrrceq	3, 0, r2, r4, cr2
    7840:	00000696 	muleq	r0, r6, r6
    7844:	11020a05 	tstne	r2, r5, lsl #20
    7848:	000000c8 	andeq	r0, r0, r8, asr #1
    784c:	0c582302 	mrrceq	3, 0, r2, r8, cr2
    7850:	00000586 	andeq	r0, r0, r6, lsl #11
    7854:	11020b05 	tstne	r2, r5, lsl #22
    7858:	000000bc 	strheq	r0, [r0], -ip
    785c:	0c5c2302 	mrrceq	3, 0, r2, ip, cr2
    7860:	0000001b 	andeq	r0, r0, fp, lsl r0
    7864:	11020c05 	tstne	r2, r5, lsl #24
    7868:	000000c8 	andeq	r0, r0, r8, asr #1
    786c:	0c602302 	stcleq	3, cr2, [r0], #-8
    7870:	000003eb 	andeq	r0, r0, fp, ror #7
    7874:	11020d05 	tstne	r2, r5, lsl #26
    7878:	000000c8 	andeq	r0, r0, r8, asr #1
    787c:	0c642302 	stcleq	3, cr2, [r4], #-8
    7880:	00000590 	muleq	r0, r0, r5
    7884:	11020e05 	tstne	r2, r5, lsl #28
    7888:	000000d9 	ldrdeq	r0, [r0], -r9
    788c:	0c682302 	stcleq	3, cr2, [r8], #-8
    7890:	00000870 	andeq	r0, r0, r0, ror r8
    7894:	11020f05 	tstne	r2, r5, lsl #30
    7898:	000000c8 	andeq	r0, r0, r8, asr #1
    789c:	0b702302 	bleq	1c104ac <_Min_Heap_Size+0x1c0fcac>
    78a0:	00525343 	subseq	r5, r2, r3, asr #6
    78a4:	11021005 	tstne	r2, r5
    78a8:	000000c8 	andeq	r0, r0, r8, asr #1
    78ac:	0c742302 	ldcleq	3, cr2, [r4], #-8
    78b0:	0000059a 	muleq	r0, sl, r5
    78b4:	11021105 	tstne	r2, r5, lsl #2
    78b8:	000000d9 	ldrdeq	r0, [r0], -r9
    78bc:	0c782302 	ldcleq	3, cr2, [r8], #-8
    78c0:	0000083f 	andeq	r0, r0, pc, lsr r8
    78c4:	11021205 	tstne	r2, r5, lsl #4
    78c8:	000000c8 	andeq	r0, r0, r8, asr #1
    78cc:	01802303 	orreq	r2, r0, r3, lsl #6
    78d0:	00037e0c 	andeq	r7, r3, ip, lsl #28
    78d4:	02130500 	andseq	r0, r3, #0, 10
    78d8:	0000c811 	andeq	ip, r0, r1, lsl r8
    78dc:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    78e0:	cd0d0001 	stcgt	0, cr0, [sp, #-4]
    78e4:	05000001 	streq	r0, [r0, #-1]
    78e8:	b7030214 	smladlt	r3, r4, r2, r0
    78ec:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    78f0:	003c0107 	eorseq	r0, ip, r7, lsl #2
    78f4:	b9060000 	stmdblt	r6, {}	; <UNPREDICTABLE>
    78f8:	0004cb01 	andeq	ip, r4, r1, lsl #22
    78fc:	031e0f00 	tsteq	lr, #0, 30
    7900:	10000000 	andne	r0, r0, r0
    7904:	00544553 	subseq	r4, r4, r3, asr r5
    7908:	c1030001 	tstgt	r3, r1
    790c:	06000010 			; <UNDEFINED> instruction: 0x06000010
    7910:	04b003bc 	ldrteq	r0, [r0], #956	; 0x3bc
    7914:	070e0000 	streq	r0, [lr, -r0]
    7918:	00003c01 	andeq	r3, r0, r1, lsl #24
    791c:	01bf0600 			; <UNDEFINED> instruction: 0x01bf0600
    7920:	000004f2 	strdeq	r0, [r0], -r2
    7924:	00178a0f 	andseq	r8, r7, pc, lsl #20
    7928:	740f0000 	strvc	r0, [pc], #-0	; 7930 <_Min_Heap_Size+0x7130>
    792c:	01000017 	tsteq	r0, r7, lsl r0
    7930:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    7934:	00000726 	andeq	r0, r0, r6, lsr #14
    7938:	3c01070e 	stccc	7, cr0, [r1], {14}
    793c:	07000000 	streq	r0, [r0, -r0]
    7940:	05200127 	streq	r0, [r0, #-295]!	; 0xfffffed9
    7944:	5c0f0000 	stcpl	0, cr0, [pc], {-0}
    7948:	00000003 	andeq	r0, r0, r3
    794c:	0007010f 	andeq	r0, r7, pc, lsl #2
    7950:	090f0100 	stmdbeq	pc, {r8}	; <UNPREDICTABLE>
    7954:	02000009 	andeq	r0, r0, #9
    7958:	00033d0f 	andeq	r3, r3, pc, lsl #26
    795c:	03000300 	movweq	r0, #768	; 0x300
    7960:	000012f6 	strdeq	r1, [r0], -r6
    7964:	f9032c07 			; <UNDEFINED> instruction: 0xf9032c07
    7968:	11000004 	tstne	r0, r4
    796c:	092d0818 	pusheq	{r3, r4, fp}
    7970:	00000590 	muleq	r0, r0, r5
    7974:	00008012 	andeq	r8, r0, r2, lsl r0
    7978:	0c2f0800 	stceq	8, cr0, [pc], #-0	; 7980 <_Min_Heap_Size+0x7180>
    797c:	000000bc 	strheq	r0, [r0], -ip
    7980:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    7984:	000006a0 	andeq	r0, r0, r0, lsr #13
    7988:	bc0c3208 	sfmlt	f3, 4, [ip], {8}
    798c:	02000000 	andeq	r0, r0, #0
    7990:	89120423 	ldmdbhi	r2, {r0, r1, r5, sl}
    7994:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7998:	00bc0c35 	adcseq	r0, ip, r5, lsr ip
    799c:	23020000 	movwcs	r0, #8192	; 0x2000
    79a0:	008e1208 	addeq	r1, lr, r8, lsl #4
    79a4:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
    79a8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    79ac:	0c230200 	sfmeq	f0, 4, [r3], #-0
    79b0:	00009312 	andeq	r9, r0, r2, lsl r3
    79b4:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    79b8:	000000bc 	strheq	r0, [r0], -ip
    79bc:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    79c0:	00000098 	muleq	r0, r8, r0
    79c4:	bc0c3f08 	stclt	15, cr3, [ip], {8}
    79c8:	02000000 	andeq	r0, r0, #0
    79cc:	03001423 	movweq	r1, #1059	; 0x423
    79d0:	000008b7 			; <UNDEFINED> instruction: 0x000008b7
    79d4:	2c024908 			; <UNDEFINED> instruction: 0x2c024908
    79d8:	11000005 	tstne	r0, r5
    79dc:	09310930 	ldmdbeq	r1!, {r4, r5, r8, fp}
    79e0:	0000060f 	andeq	r0, r0, pc, lsl #12
    79e4:	0003b712 	andeq	fp, r3, r2, lsl r7
    79e8:	0c330900 			; <UNDEFINED> instruction: 0x0c330900
    79ec:	000000bc 	strheq	r0, [r0], -ip
    79f0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    79f4:	00000307 	andeq	r0, r0, r7, lsl #6
    79f8:	bc0c3609 	stclt	6, cr3, [ip], {9}
    79fc:	02000000 	andeq	r0, r0, #0
    7a00:	e6120423 	ldr	r0, [r2], -r3, lsr #8
    7a04:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7a08:	00bc0c39 	adcseq	r0, ip, r9, lsr ip
    7a0c:	23020000 	movwcs	r0, #8192	; 0x2000
    7a10:	02411208 	subeq	r1, r1, #8, 4	; 0x80000000
    7a14:	3c090000 	stccc	0, cr0, [r9], {-0}
    7a18:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7a1c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    7a20:	00026012 	andeq	r6, r2, r2, lsl r0
    7a24:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
    7a28:	000000bc 	strheq	r0, [r0], -ip
    7a2c:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    7a30:	0000020c 	andeq	r0, r0, ip, lsl #4
    7a34:	bc0c4209 	sfmlt	f4, 4, [ip], {9}
    7a38:	02000000 	andeq	r0, r0, #0
    7a3c:	50131423 	andspl	r1, r3, r3, lsr #8
    7a40:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
    7a44:	05901645 	ldreq	r1, [r0, #1605]	; 0x645
    7a48:	23020000 	movwcs	r0, #8192	; 0x2000
    7a4c:	53030018 	movwpl	r0, #12312	; 0x3018
    7a50:	09000001 	stmdbeq	r0, {r0}
    7a54:	059c0246 	ldreq	r0, [ip, #582]	; 0x246
    7a58:	14110000 	ldrne	r0, [r1], #-0
    7a5c:	70094b09 	andvc	r4, r9, r9, lsl #22
    7a60:	12000006 	andne	r0, r0, #6
    7a64:	000008ca 	andeq	r0, r0, sl, asr #17
    7a68:	bc0c4d09 	stclt	13, cr4, [ip], {9}
    7a6c:	02000000 	andeq	r0, r0, #0
    7a70:	5d120023 	ldcpl	0, cr0, [r2, #-140]	; 0xffffff74
    7a74:	09000009 	stmdbeq	r0, {r0, r3}
    7a78:	00bc0c50 	adcseq	r0, ip, r0, asr ip
    7a7c:	23020000 	movwcs	r0, #8192	; 0x2000
    7a80:	04041204 	streq	r1, [r4], #-516	; 0xfffffdfc
    7a84:	53090000 	movwpl	r0, #36864	; 0x9000
    7a88:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7a8c:	08230200 	stmdaeq	r3!, {r9}
    7a90:	00005712 	andeq	r5, r0, r2, lsl r7
    7a94:	0c560900 	mrrceq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
    7a98:	000000bc 	strheq	r0, [r0], -ip
    7a9c:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    7aa0:	0000079a 	muleq	r0, sl, r7
    7aa4:	bc0c5909 			; <UNDEFINED> instruction: 0xbc0c5909
    7aa8:	02000000 	andeq	r0, r0, #0
    7aac:	03001023 	movweq	r1, #35	; 0x23
    7ab0:	00000521 	andeq	r0, r0, r1, lsr #10
    7ab4:	1b025c09 	blne	9eae0 <_Min_Heap_Size+0x9e2e0>
    7ab8:	11000006 	tstne	r0, r6
    7abc:	092e0a14 	stmdbeq	lr!, {r2, r4, r9, fp}
    7ac0:	000006d1 	ldrdeq	r0, [r0], -r1
    7ac4:	6e695013 	mcrvs	0, 3, r5, cr9, cr3, {0}
    7ac8:	0c300a00 			; <UNDEFINED> instruction: 0x0c300a00
    7acc:	000000bc 	strheq	r0, [r0], -ip
    7ad0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    7ad4:	000006f1 	strdeq	r0, [r0], -r1
    7ad8:	bc0c330a 	stclt	3, cr3, [ip], {10}
    7adc:	02000000 	andeq	r0, r0, #0
    7ae0:	53120423 	tstpl	r2, #587202560	; 0x23000000
    7ae4:	0a00000d 	beq	7b20 <_Min_Heap_Size+0x7320>
    7ae8:	00bc0c36 	adcseq	r0, ip, r6, lsr ip
    7aec:	23020000 	movwcs	r0, #8192	; 0x2000
    7af0:	097d1208 	ldmdbeq	sp!, {r3, r9, ip}^
    7af4:	390a0000 	stmdbcc	sl, {}	; <UNPREDICTABLE>
    7af8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7afc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    7b00:	000ce112 	andeq	lr, ip, r2, lsl r1
    7b04:	0c3c0a00 			; <UNDEFINED> instruction: 0x0c3c0a00
    7b08:	000000bc 	strheq	r0, [r0], -ip
    7b0c:	00102302 	andseq	r2, r0, r2, lsl #6
    7b10:	000aa103 	andeq	sl, sl, r3, lsl #2
    7b14:	023e0a00 	eorseq	r0, lr, #0, 20
    7b18:	0000067c 	andeq	r0, r0, ip, ror r6
    7b1c:	00181e09 	andseq	r1, r8, r9, lsl #28
    7b20:	11cd0b00 	bicne	r0, sp, r0, lsl #22
    7b24:	000000bc 	strheq	r0, [r0], -ip
    7b28:	01140101 	tsteq	r4, r1, lsl #2
    7b2c:	0000172b 	andeq	r1, r0, fp, lsr #14
    7b30:	0d044b01 	vstreq	d4, [r4, #-4]
    7b34:	00000001 	andeq	r0, r0, r1
    7b38:	00000000 	andeq	r0, r0, r0
    7b3c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7b40:	ee011501 	cfsh32	mvfx1, mvfx1, #1
    7b44:	01000018 	tsteq	r0, r8, lsl r0
    7b48:	0106043a 	tsteq	r6, sl, lsr r4
	...
    7b54:	00005180 	andeq	r5, r0, r0, lsl #3
    7b58:	00072801 	andeq	r2, r7, r1, lsl #16
    7b5c:	00001600 	andeq	r1, r0, r0, lsl #12
    7b60:	06eb0000 	strbteq	r0, [fp], r0
    7b64:	17000000 	strne	r0, [r0, -r0]
    7b68:	00186301 	andseq	r6, r8, r1, lsl #6
    7b6c:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
    7b70:	00000106 	andeq	r0, r0, r6, lsl #2
    7b74:	00000000 	andeq	r0, r0, r0
    7b78:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7b7c:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    7b80:	f5180000 			; <UNDEFINED> instruction: 0xf5180000
    7b84:	01000002 	tsteq	r0, r2
    7b88:	62320420 	eorsvs	r0, r2, #32, 8	; 0x20000000
    7b8c:	01000007 	tsteq	r0, r7
    7b90:	18cf1850 	stmiane	pc, {r4, r6, fp, ip}^	; <UNPREDICTABLE>
    7b94:	20010000 	andcs	r0, r1, r0
    7b98:	07684f04 	strbeq	r4, [r8, -r4, lsl #30]!
    7b9c:	51010000 	mrspl	r0, (UNDEF: 1)
    7ba0:	70041900 	andvc	r1, r4, r0, lsl #18
    7ba4:	19000006 	stmdbne	r0, {r1, r2}
    7ba8:	0000bc04 	andeq	fp, r0, r4, lsl #24
    7bac:	d9011700 	stmdble	r1, {r8, r9, sl, ip}
    7bb0:	01000018 	tsteq	r0, r8, lsl r0
    7bb4:	010d03d1 	ldrdeq	r0, [sp, -r1]
	...
    7bc0:	01007d02 	tsteq	r0, r2, lsl #26
    7bc4:	00000799 	muleq	r0, r9, r7
    7bc8:	0000ef18 	andeq	lr, r0, r8, lsl pc
    7bcc:	03d10100 	bicseq	r0, r1, #0, 2
    7bd0:	00079937 	andeq	r9, r7, r7, lsr r9
    7bd4:	00500100 	subseq	r0, r0, r0, lsl #2
    7bd8:	060f0419 			; <UNDEFINED> instruction: 0x060f0419
    7bdc:	011a0000 	tsteq	sl, r0
    7be0:	000014fd 	strdeq	r1, [r0], -sp
    7be4:	0a03c401 	beq	f8bf0 <_Min_Heap_Size+0xf83f0>
    7be8:	0000bc01 	andeq	fp, r0, r1, lsl #24
    7bec:	00114000 	andseq	r4, r1, r0
    7bf0:	00116008 	andseq	r6, r1, r8
    7bf4:	0051a008 	subseq	sl, r1, r8
    7bf8:	07c90100 	strbeq	r0, [r9, r0, lsl #2]
    7bfc:	46160000 	ldrmi	r0, [r6], -r0
    7c00:	f3080011 	vqadd.u8	d0, d8, d1
    7c04:	00000007 	andeq	r0, r0, r7
    7c08:	106e011a 	rsbne	r0, lr, sl, lsl r1
    7c0c:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    7c10:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    7c14:	20000000 	andcs	r0, r0, r0
    7c18:	40080011 	andmi	r0, r8, r1, lsl r0
    7c1c:	c0080011 	andgt	r0, r8, r1, lsl r0
    7c20:	01000051 	qaddeq	r0, r1, r0
    7c24:	000007f3 	strdeq	r0, [r0], -r3
    7c28:	00112616 	andseq	r2, r1, r6, lsl r6
    7c2c:	0007f308 	andeq	pc, r7, r8, lsl #6
    7c30:	011b0000 	tsteq	fp, r0
    7c34:	0000187a 	andeq	r1, r0, sl, ror r8
    7c38:	0a03ad01 	beq	f3044 <_Min_Heap_Size+0xf2844>
    7c3c:	0000bc01 	andeq	fp, r0, r1, lsl #24
    7c40:	00111400 	andseq	r1, r1, r0, lsl #8
    7c44:	00112008 	andseq	r2, r1, r8
    7c48:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    7c4c:	2e011a01 	vmlacs.f32	s2, s2, s2
    7c50:	01000018 	tsteq	r0, r8, lsl r0
    7c54:	01110375 	tsteq	r1, r5, ror r3
    7c58:	000000bc 	strheq	r0, [r0], -ip
	...
    7c64:	000051e0 	andeq	r5, r0, r0, ror #3
    7c68:	00089501 	andeq	r9, r8, r1, lsl #10
    7c6c:	18291c00 	stmdane	r9!, {sl, fp, ip}
    7c70:	77010000 	strvc	r0, [r1, -r0]
    7c74:	00bc0c03 	adcseq	r0, ip, r3, lsl #24
    7c78:	52080000 	andpl	r0, r8, #0
    7c7c:	52000000 	andpl	r0, r0, #0
    7c80:	831c0000 	tsthi	ip, #0
    7c84:	01000017 	tsteq	r0, r7, lsl r0
    7c88:	bc170377 	ldclt	3, cr0, [r7], {119}	; 0x77
    7c8c:	46000000 	strmi	r0, [r0], -r0
    7c90:	3e000052 	mcrcc	0, 0, r0, cr0, cr2, {2}
    7c94:	1c000052 	stcne	0, cr0, [r0], {82}	; 0x52
    7c98:	0000173f 	andeq	r1, r0, pc, lsr r7
    7c9c:	24037701 	strcs	r7, [r3], #-1793	; 0xfffff8ff
    7ca0:	000000bc 	strheq	r0, [r0], -ip
    7ca4:	00005283 	andeq	r5, r0, r3, lsl #5
    7ca8:	0000527d 	andeq	r5, r0, sp, ror r2
    7cac:	0017c41c 	andseq	ip, r7, ip, lsl r4
    7cb0:	03780100 	cmneq	r8, #0, 2
    7cb4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7cb8:	0052b600 	subseq	fp, r2, r0, lsl #12
    7cbc:	0052ae00 	subseq	sl, r2, r0, lsl #28
    7cc0:	00001600 	andeq	r1, r0, r0, lsl #12
    7cc4:	0e3e0000 	cdpeq	0, 3, cr0, cr14, cr0, {0}
    7cc8:	00160000 	andseq	r0, r6, r0
    7ccc:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    7cd0:	0000000e 	andeq	r0, r0, lr
    7cd4:	17d10114 	bfine	r0, r4, #2, #16
    7cd8:	52010000 	andpl	r0, r1, #0
    7cdc:	00010603 	andeq	r0, r1, r3, lsl #12
    7ce0:	00000000 	andeq	r0, r0, r0
    7ce4:	02000000 	andeq	r0, r0, #0
    7ce8:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    7cec:	0017a401 	andseq	sl, r7, r1, lsl #8
    7cf0:	03490100 	movteq	r0, #37120	; 0x9100
    7cf4:	00000106 	andeq	r0, r0, r6, lsl #2
    7cf8:	00000000 	andeq	r0, r0, r0
    7cfc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7d00:	01150100 	tsteq	r5, r0, lsl #2
    7d04:	000017e4 	andeq	r1, r0, r4, ror #15
    7d08:	06030701 	streq	r0, [r3], -r1, lsl #14
    7d0c:	00000001 	andeq	r0, r0, r1
    7d10:	00000000 	andeq	r0, r0, r0
    7d14:	0052f100 	subseq	pc, r2, r0, lsl #2
    7d18:	0a190100 	beq	648120 <_Min_Heap_Size+0x647920>
    7d1c:	c61d0000 	ldrgt	r0, [sp], -r0
    7d20:	01000018 	tsteq	r0, r8, lsl r0
    7d24:	bc210307 	stclt	3, cr0, [r1], #-28	; 0xffffffe4
    7d28:	43000000 	movwmi	r0, #0
    7d2c:	35000053 	strcc	r0, [r0, #-83]	; 0xffffffad
    7d30:	1d000053 	stcne	0, cr0, [r0, #-332]	; 0xfffffeb4
    7d34:	00001855 	andeq	r1, r0, r5, asr r8
    7d38:	34030701 	strcc	r0, [r3], #-1793	; 0xfffff8ff
    7d3c:	000000bc 	strheq	r0, [r0], -ip
    7d40:	000053a6 	andeq	r5, r0, r6, lsr #7
    7d44:	0000539e 	muleq	r0, lr, r3
    7d48:	0017991d 	andseq	r9, r7, sp, lsl r9
    7d4c:	03070100 	movweq	r0, #28928	; 0x7100
    7d50:	0000bc4c 	andeq	fp, r0, ip, asr #24
    7d54:	0053e800 	subseq	lr, r3, r0, lsl #16
    7d58:	0053da00 	subseq	sp, r3, r0, lsl #20
    7d5c:	09c11e00 	stmibeq	r1, {r9, sl, fp, ip}^
    7d60:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    7d64:	06d11403 	ldrbeq	r1, [r1], r3, lsl #8
    7d68:	91020000 	mrsls	r0, (UNDEF: 2)
    7d6c:	00001f5c 	andeq	r1, r0, ip, asr pc
    7d70:	00000000 	andeq	r0, r0, r0
    7d74:	094c0000 	stmdbeq	ip, {}^	; <UNPREDICTABLE>
    7d78:	b61e0000 	ldrlt	r0, [lr], -r0
    7d7c:	01000001 	tsteq	r0, r1
    7d80:	c8050313 	stmdagt	r5, {r0, r1, r4, r8, r9}
    7d84:	02000000 	andeq	r0, r0, #0
    7d88:	1f005491 	svcne	0x00005491
	...
    7d94:	0000096a 	andeq	r0, r0, sl, ror #18
    7d98:	0001b61e 	andeq	fp, r1, lr, lsl r6
    7d9c:	032b0100 			; <UNDEFINED> instruction: 0x032b0100
    7da0:	0000c805 	andeq	ip, r0, r5, lsl #16
    7da4:	58910200 	ldmpl	r1, {r9}
    7da8:	00002000 	andeq	r2, r0, r0
    7dac:	0e490000 	cdpeq	0, 4, cr0, cr9, cr0, {0}
    7db0:	09870000 	stmibeq	r7, {}	; <UNPREDICTABLE>
    7db4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7db8:	000c0550 	andeq	r0, ip, r0, asr r5
    7dbc:	21400200 	mrscs	r0, (UNDEF: 96)
    7dc0:	91025101 	tstls	r2, r1, lsl #2
    7dc4:	0020005c 	eoreq	r0, r0, ip, asr r0
    7dc8:	57000000 	strpl	r0, [r0, -r0]
    7dcc:	a500000e 	strge	r0, [r0, #-14]
    7dd0:	21000009 	tstcs	r0, r9
    7dd4:	03055001 	movweq	r5, #20481	; 0x5001
    7dd8:	00000000 	andeq	r0, r0, r0
    7ddc:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7de0:	00030b0a 	andeq	r0, r3, sl, lsl #22
    7de4:	00000020 	andeq	r0, r0, r0, lsr #32
    7de8:	000e5700 	andeq	r5, lr, r0, lsl #14
    7dec:	0009c300 	andeq	ip, r9, r0, lsl #6
    7df0:	50012100 	andpl	r2, r1, r0, lsl #2
    7df4:	00000305 	andeq	r0, r0, r5, lsl #6
    7df8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7dfc:	0c0a0351 	stceq	3, cr0, [sl], {81}	; 0x51
    7e00:	00200003 	eoreq	r0, r0, r3
    7e04:	57000000 	strpl	r0, [r0, -r0]
    7e08:	e100000e 	tst	r0, lr
    7e0c:	21000009 	tstcs	r0, r9
    7e10:	03055001 	movweq	r5, #20481	; 0x5001
    7e14:	00000000 	andeq	r0, r0, r0
    7e18:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7e1c:	0003100a 	andeq	r1, r3, sl
    7e20:	00000020 	andeq	r0, r0, r0, lsr #32
    7e24:	000e4900 	andeq	r4, lr, r0, lsl #18
    7e28:	0009fe00 	andeq	pc, r9, r0, lsl #28
    7e2c:	50012100 	andpl	r2, r1, r0, lsl #2
    7e30:	08000c05 	stmdaeq	r0, {r0, r2, sl, fp}
    7e34:	01214002 			; <UNDEFINED> instruction: 0x01214002
    7e38:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    7e3c:	00002200 	andeq	r2, r0, r0, lsl #4
    7e40:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7e44:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7e48:	00030550 	andeq	r0, r3, r0, asr r5
    7e4c:	21000000 	mrscs	r0, (UNDEF: 0)
    7e50:	0a035101 	beq	dc25c <_Min_Heap_Size+0xdba5c>
    7e54:	00000328 	andeq	r0, r0, r8, lsr #6
    7e58:	085c011a 	ldmdaeq	ip, {r1, r3, r4, r8}^
    7e5c:	4f010000 	svcmi	0x00010000
    7e60:	20011302 	andcs	r1, r1, r2, lsl #6
    7e64:	00000005 	andeq	r0, r0, r5
    7e68:	00000000 	andeq	r0, r0, r0
    7e6c:	43000000 	movwmi	r0, #0
    7e70:	01000054 	qaddeq	r0, r4, r0
    7e74:	00000b4d 	andeq	r0, r0, sp, asr #22
    7e78:	0002f51d 	andeq	pc, r2, sp, lsl r5	; <UNPREDICTABLE>
    7e7c:	024f0100 	subeq	r0, pc, #0, 2
    7e80:	0007623c 	andeq	r6, r7, ip, lsr r2
    7e84:	00548900 	subseq	r8, r4, r0, lsl #18
    7e88:	00547b00 	subseq	r7, r4, r0, lsl #22
    7e8c:	18d01d00 	ldmne	r0, {r8, sl, fp, ip}^
    7e90:	4f010000 	svcmi	0x00010000
    7e94:	00bc5802 	adcseq	r5, ip, r2, lsl #16
    7e98:	54ed0000 	strbtpl	r0, [sp], #0
    7e9c:	54e10000 	strbtpl	r0, [r1], #0
    7ea0:	411c0000 	tstmi	ip, r0
    7ea4:	01000015 	tsteq	r0, r5, lsl r0
    7ea8:	bc0c0251 	sfmlt	f0, 4, [ip], {81}	; 0x51
    7eac:	3b000000 	blcc	7eb4 <_Min_Heap_Size+0x76b4>
    7eb0:	37000055 	smlsdcc	r0, r5, r0, r0
    7eb4:	16000055 			; <UNDEFINED> instruction: 0x16000055
    7eb8:	00000000 	andeq	r0, r0, r0
    7ebc:	00000e66 	andeq	r0, r0, r6, ror #28
    7ec0:	00000016 	andeq	r0, r0, r6, lsl r0
    7ec4:	000e6600 	andeq	r6, lr, r0, lsl #12
    7ec8:	00002000 	andeq	r2, r0, r0
    7ecc:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7ed0:	0aa80000 	beq	fea07ed8 <_estack+0xdea06ca0>
    7ed4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7ed8:	00030550 	andeq	r0, r3, r0, asr r5
    7edc:	21000000 	mrscs	r0, (UNDEF: 0)
    7ee0:	0a035101 	beq	dc2ec <_Min_Heap_Size+0xdbaec>
    7ee4:	2000025a 	andcs	r0, r0, sl, asr r2
    7ee8:	00000000 	andeq	r0, r0, r0
    7eec:	00000e57 	andeq	r0, r0, r7, asr lr
    7ef0:	00000ac6 	andeq	r0, r0, r6, asr #21
    7ef4:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7ef8:	00000003 	andeq	r0, r0, r3
    7efc:	51012100 	mrspl	r2, (UNDEF: 17)
    7f00:	025b0a03 	subseq	r0, fp, #12288	; 0x3000
    7f04:	00002000 	andeq	r2, r0, r0
    7f08:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7f0c:	0ae40000 	beq	ff907f14 <_estack+0xdf906cdc>
    7f10:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f14:	00030550 	andeq	r0, r3, r0, asr r5
    7f18:	21000000 	mrscs	r0, (UNDEF: 0)
    7f1c:	0a035101 	beq	dc328 <_Min_Heap_Size+0xdbb28>
    7f20:	2000027e 	andcs	r0, r0, lr, ror r2
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	00000e57 	andeq	r0, r0, r7, asr lr
    7f2c:	00000b02 	andeq	r0, r0, r2, lsl #22
    7f30:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7f34:	00000003 	andeq	r0, r0, r3
    7f38:	51012100 	mrspl	r2, (UNDEF: 17)
    7f3c:	02850a03 	addeq	r0, r5, #12288	; 0x3000
    7f40:	00001600 	andeq	r1, r0, r0, lsl #12
    7f44:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
    7f48:	00160000 	andseq	r0, r6, r0
    7f4c:	74000000 	strvc	r0, [r0], #-0
    7f50:	2000000e 	andcs	r0, r0, lr
    7f54:	00000000 	andeq	r0, r0, r0
    7f58:	00000e57 	andeq	r0, r0, r7, asr lr
    7f5c:	00000b32 	andeq	r0, r0, r2, lsr fp
    7f60:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7f64:	00000003 	andeq	r0, r0, r3
    7f68:	51012100 	mrspl	r2, (UNDEF: 17)
    7f6c:	02c30a03 	sbceq	r0, r3, #12288	; 0x3000
    7f70:	00002200 	andeq	r2, r0, r0, lsl #4
    7f74:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7f78:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f7c:	00030550 	andeq	r0, r3, r0, asr r5
    7f80:	21000000 	mrscs	r0, (UNDEF: 0)
    7f84:	0a035101 	beq	dc390 <_Min_Heap_Size+0xdbb90>
    7f88:	000002ca 	andeq	r0, r0, sl, asr #5
    7f8c:	07400123 	strbeq	r0, [r0, -r3, lsr #2]
    7f90:	db010000 	blle	47f98 <_Min_Heap_Size+0x47798>
    7f94:	0520011a 	streq	r0, [r0, #-282]!	; 0xfffffee6
	...
    7fa0:	55590000 	ldrbpl	r0, [r9, #-0]
    7fa4:	24010000 	strcs	r0, [r1], #-0
    7fa8:	2400000e 	strcs	r0, [r0], #-14
    7fac:	000000ef 	andeq	r0, r0, pc, ror #1
    7fb0:	9941db01 	stmdbls	r1, {r0, r8, r9, fp, ip, lr, pc}^
    7fb4:	cf000007 	svcgt	0x00000007
    7fb8:	b5000055 	strlt	r0, [r0, #-85]	; 0xffffffab
    7fbc:	25000055 	strcs	r0, [r0, #-85]	; 0xffffffab
    7fc0:	00001541 	andeq	r1, r0, r1, asr #10
    7fc4:	bc0cdd01 	stclt	13, cr13, [ip], {1}
    7fc8:	a6000000 	strge	r0, [r0], -r0
    7fcc:	72000056 	andvc	r0, r0, #86	; 0x56
    7fd0:	25000056 	strcs	r0, [r0, #-86]	; 0xffffffaa
    7fd4:	00001813 	andeq	r1, r0, r3, lsl r8
    7fd8:	bc17dd01 	ldclt	13, cr13, [r7], {1}
    7fdc:	d0000000 	andle	r0, r0, r0
    7fe0:	cc000057 	stcgt	0, cr0, [r0], {87}	; 0x57
    7fe4:	26000057 			; <UNDEFINED> instruction: 0x26000057
    7fe8:	00000318 	andeq	r0, r0, r8, lsl r3
    7fec:	00000c39 	andeq	r0, r0, r9, lsr ip
    7ff0:	0017441c 	andseq	r4, r7, ip, lsl r4
    7ff4:	01870100 	orreq	r0, r7, r0, lsl #2
    7ff8:	0004cb16 	andeq	ip, r4, r6, lsl fp
    7ffc:	0057fa00 	subseq	pc, r7, r0, lsl #20
    8000:	0057ee00 	subseq	lr, r7, r0, lsl #28
    8004:	00001f00 	andeq	r1, r0, r0, lsl #30
    8008:	00000000 	andeq	r0, r0, r0
    800c:	0be40000 	bleq	ff908014 <_estack+0xdf906ddc>
    8010:	b61e0000 	ldrlt	r0, [lr], -r0
    8014:	01000001 	tsteq	r0, r1
    8018:	c8070190 	stmdagt	r7, {r4, r7, r8}
    801c:	02000000 	andeq	r0, r0, #0
    8020:	16006c91 			; <UNDEFINED> instruction: 0x16006c91
    8024:	00000000 	andeq	r0, r0, r0
    8028:	00000e66 	andeq	r0, r0, r6, ror #28
    802c:	00000016 	andeq	r0, r0, r6, lsl r0
    8030:	000e6600 	andeq	r6, lr, r0, lsl #12
    8034:	00002000 	andeq	r2, r0, r0
    8038:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    803c:	0c140000 	ldceq	0, cr0, [r4], {-0}
    8040:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8044:	00030550 	andeq	r0, r3, r0, asr r5
    8048:	21000000 	mrscs	r0, (UNDEF: 0)
    804c:	0a035101 	beq	dc458 <_Min_Heap_Size+0xdbc58>
    8050:	1600018a 	strne	r0, [r0], -sl, lsl #3
    8054:	00000000 	andeq	r0, r0, r0
    8058:	00000e66 	andeq	r0, r0, r6, ror #28
    805c:	00000016 	andeq	r0, r0, r6, lsl r0
    8060:	000e6600 	andeq	r6, lr, r0, lsl #12
    8064:	00001600 	andeq	r1, r0, r0, lsl #12
    8068:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    806c:	00160000 	andseq	r0, r6, r0
    8070:	66000000 	strvs	r0, [r0], -r0
    8074:	0000000e 	andeq	r0, r0, lr
    8078:	00000016 	andeq	r0, r0, r6, lsl r0
    807c:	000e6600 	andeq	r6, lr, r0, lsl #12
    8080:	00001600 	andeq	r1, r0, r0, lsl #12
    8084:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8088:	00200000 	eoreq	r0, r0, r0
    808c:	57000000 	strpl	r0, [r0, -r0]
    8090:	6800000e 	stmdavs	r0, {r1, r2, r3}
    8094:	2100000c 	tstcs	r0, ip
    8098:	03055001 	movweq	r5, #20481	; 0x5001
    809c:	00000000 	andeq	r0, r0, r0
    80a0:	02510121 	subseq	r0, r1, #1073741832	; 0x40000008
    80a4:	2000e608 	andcs	lr, r0, r8, lsl #12
    80a8:	00000000 	andeq	r0, r0, r0
    80ac:	00000e57 	andeq	r0, r0, r7, asr lr
    80b0:	00000c85 	andeq	r0, r0, r5, lsl #25
    80b4:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    80b8:	00000003 	andeq	r0, r0, r3
    80bc:	51012100 	mrspl	r2, (UNDEF: 17)
    80c0:	00eb0802 	rsceq	r0, fp, r2, lsl #16
    80c4:	00000016 	andeq	r0, r0, r6, lsl r0
    80c8:	000e6600 	andeq	r6, lr, r0, lsl #12
    80cc:	00001600 	andeq	r1, r0, r0, lsl #12
    80d0:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    80d4:	00160000 	andseq	r0, r6, r0
    80d8:	66000000 	strvs	r0, [r0], -r0
    80dc:	1600000e 	strne	r0, [r0], -lr
    80e0:	00000000 	andeq	r0, r0, r0
    80e4:	00000e66 	andeq	r0, r0, r6, ror #28
    80e8:	00000020 	andeq	r0, r0, r0, lsr #32
    80ec:	000e5700 	andeq	r5, lr, r0, lsl #14
    80f0:	000cc700 	andeq	ip, ip, r0, lsl #14
    80f4:	50012100 	andpl	r2, r1, r0, lsl #2
    80f8:	00000305 	andeq	r0, r0, r5, lsl #6
    80fc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8100:	1d0a0351 	stcne	3, cr0, [sl, #-324]	; 0xfffffebc
    8104:	00200001 	eoreq	r0, r0, r1
    8108:	57000000 	strpl	r0, [r0, -r0]
    810c:	e500000e 	str	r0, [r0, #-14]
    8110:	2100000c 	tstcs	r0, ip
    8114:	03055001 	movweq	r5, #20481	; 0x5001
    8118:	00000000 	andeq	r0, r0, r0
    811c:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8120:	00011e0a 	andeq	r1, r1, sl, lsl #28
    8124:	00000016 	andeq	r0, r0, r6, lsl r0
    8128:	000e6600 	andeq	r6, lr, r0, lsl #12
    812c:	00001600 	andeq	r1, r0, r0, lsl #12
    8130:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8134:	00160000 	andseq	r0, r6, r0
    8138:	66000000 	strvs	r0, [r0], -r0
    813c:	1600000e 	strne	r0, [r0], -lr
    8140:	00000000 	andeq	r0, r0, r0
    8144:	00000e66 	andeq	r0, r0, r6, ror #28
    8148:	00000020 	andeq	r0, r0, r0, lsr #32
    814c:	000e5700 	andeq	r5, lr, r0, lsl #14
    8150:	000d2700 	andeq	r2, sp, r0, lsl #14
    8154:	50012100 	andpl	r2, r1, r0, lsl #2
    8158:	00000305 	andeq	r0, r0, r5, lsl #6
    815c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8160:	5e0a0351 	mcrpl	3, 0, r0, cr10, cr1, {2}
    8164:	00160001 	andseq	r0, r6, r1
    8168:	66000000 	strvs	r0, [r0], -r0
    816c:	1600000e 	strne	r0, [r0], -lr
    8170:	00000000 	andeq	r0, r0, r0
    8174:	00000e66 	andeq	r0, r0, r6, ror #28
    8178:	00000016 	andeq	r0, r0, r6, lsl r0
    817c:	000e6600 	andeq	r6, lr, r0, lsl #12
    8180:	00001600 	andeq	r1, r0, r0, lsl #12
    8184:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8188:	00200000 	eoreq	r0, r0, r0
    818c:	57000000 	strpl	r0, [r0, -r0]
    8190:	6900000e 	stmdbvs	r0, {r1, r2, r3}
    8194:	2100000d 	tstcs	r0, sp
    8198:	03055001 	movweq	r5, #20481	; 0x5001
    819c:	00000000 	andeq	r0, r0, r0
    81a0:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    81a4:	0001cd0a 	andeq	ip, r1, sl, lsl #26
    81a8:	00000020 	andeq	r0, r0, r0, lsr #32
    81ac:	000e5700 	andeq	r5, lr, r0, lsl #14
    81b0:	000d8700 	andeq	r8, sp, r0, lsl #14
    81b4:	50012100 	andpl	r2, r1, r0, lsl #2
    81b8:	00000305 	andeq	r0, r0, r5, lsl #6
    81bc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    81c0:	d60a0351 			; <UNDEFINED> instruction: 0xd60a0351
    81c4:	00200001 	eoreq	r0, r0, r1
    81c8:	57000000 	strpl	r0, [r0, -r0]
    81cc:	a500000e 	strge	r0, [r0, #-14]
    81d0:	2100000d 	tstcs	r0, sp
    81d4:	03055001 	movweq	r5, #20481	; 0x5001
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    81e0:	0001d70a 	andeq	sp, r1, sl, lsl #14
    81e4:	00000020 	andeq	r0, r0, r0, lsr #32
    81e8:	000e5700 	andeq	r5, lr, r0, lsl #14
    81ec:	000dc300 	andeq	ip, sp, r0, lsl #6
    81f0:	50012100 	andpl	r2, r1, r0, lsl #2
    81f4:	00000305 	andeq	r0, r0, r5, lsl #6
    81f8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    81fc:	d80a0351 	stmdale	sl, {r0, r4, r6, r8, r9}
    8200:	00200001 	eoreq	r0, r0, r1
    8204:	57000000 	strpl	r0, [r0, -r0]
    8208:	e100000e 	tst	r0, lr
    820c:	2100000d 	tstcs	r0, sp
    8210:	03055001 	movweq	r5, #20481	; 0x5001
    8214:	00000000 	andeq	r0, r0, r0
    8218:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    821c:	0001d90a 	andeq	sp, r1, sl, lsl #18
    8220:	00000020 	andeq	r0, r0, r0, lsr #32
    8224:	000e5700 	andeq	r5, lr, r0, lsl #14
    8228:	000dff00 	andeq	pc, sp, r0, lsl #30
    822c:	50012100 	andpl	r2, r1, r0, lsl #2
    8230:	00000305 	andeq	r0, r0, r5, lsl #6
    8234:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8238:	da0a0351 	ble	288f84 <_Min_Heap_Size+0x288784>
    823c:	00160001 	andseq	r0, r6, r1
    8240:	66000000 	strvs	r0, [r0], -r0
    8244:	1600000e 	strne	r0, [r0], -lr
    8248:	00000000 	andeq	r0, r0, r0
    824c:	00000e66 	andeq	r0, r0, r6, ror #28
    8250:	00000016 	andeq	r0, r0, r6, lsl r0
    8254:	000e6600 	andeq	r6, lr, r0, lsl #12
    8258:	00001600 	andeq	r1, r0, r0, lsl #12
    825c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8260:	27000000 	strcs	r0, [r0, -r0]
    8264:	00184601 	andseq	r4, r8, r1, lsl #12
    8268:	1ac80100 	bne	ff208670 <_estack+0xdf207438>
    826c:	00052001 	andeq	r2, r5, r1
	...
    8278:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    827c:	01012801 	tsteq	r1, r1, lsl #16
    8280:	000014b5 			; <UNDEFINED> instruction: 0x000014b5
    8284:	000014b5 			; <UNDEFINED> instruction: 0x000014b5
    8288:	26010129 	strcs	r0, [r1], -r9, lsr #2
    828c:	2600000b 	strcs	r0, [r0], -fp
    8290:	0a00000b 	beq	82c4 <_Min_Heap_Size+0x7ac4>
    8294:	012a07e0 	smulwteq	sl, r0, r7
    8298:	0004b801 	andeq	fp, r4, r1, lsl #16
    829c:	0004b800 	andeq	fp, r4, r0, lsl #16
    82a0:	01e60c00 	mvneq	r0, r0, lsl #24
    82a4:	01012908 	tsteq	r1, r8, lsl #18
    82a8:	0000139b 	muleq	r0, fp, r3
    82ac:	0000139b 	muleq	r0, fp, r3
    82b0:	290aea0b 	stmdbcs	sl, {r0, r1, r3, r9, fp, sp, lr, pc}
    82b4:	18060101 	stmdane	r6, {r0, r8}
    82b8:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    82bc:	df0b0000 	svcle	0x000b0000
    82c0:	09da0013 	ldmibeq	sl, {r0, r1, r4}^
    82c4:	00020000 	andeq	r0, r2, r0
    82c8:	00000dd1 	ldrdeq	r0, [r0], -r1
    82cc:	05d70104 	ldrbeq	r0, [r7, #260]	; 0x104
    82d0:	050c0000 	streq	r0, [ip, #-0]
    82d4:	2000001a 	andcs	r0, r0, sl, lsl r0
    82d8:	a8000004 	stmdage	r0, {r2}
    82dc:	00000003 	andeq	r0, r0, r3
    82e0:	00000000 	andeq	r0, r0, r0
    82e4:	46000000 	strmi	r0, [r0], -r0
    82e8:	02000060 	andeq	r0, r0, #96	; 0x60
    82ec:	05c50601 	strbeq	r0, [r5, #1537]	; 0x601
    82f0:	66030000 	strvs	r0, [r3], -r0
    82f4:	02000000 	andeq	r0, r0, #0
    82f8:	003c182b 	eorseq	r1, ip, fp, lsr #16
    82fc:	01020000 	mrseq	r0, (UNDEF: 2)
    8300:	0005c308 	andeq	ip, r5, r8, lsl #6
    8304:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8308:	000003fa 	strdeq	r0, [r0], -sl
    830c:	00075c03 	andeq	r5, r7, r3, lsl #24
    8310:	19390200 	ldmdbne	r9!, {r9}
    8314:	00000056 	andeq	r0, r0, r6, asr r0
    8318:	f6070202 			; <UNDEFINED> instruction: 0xf6070202
    831c:	02000007 	andeq	r0, r0, #7
    8320:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    8324:	c2030000 	andgt	r0, r3, #0
    8328:	02000002 	andeq	r0, r0, #2
    832c:	0070194f 	rsbseq	r1, r0, pc, asr #18
    8330:	04020000 	streq	r0, [r2], #-0
    8334:	0000b307 	andeq	fp, r0, r7, lsl #6
    8338:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    833c:	000002e7 	andeq	r0, r0, r7, ror #5
    8340:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    8344:	04000000 	streq	r0, [r0], #-0
    8348:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    834c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    8350:	0000b807 	andeq	fp, r0, r7, lsl #16
    8354:	00680300 	rsbeq	r0, r8, r0, lsl #6
    8358:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    835c:	00003013 	andeq	r3, r0, r3, lsl r0
    8360:	075e0300 	ldrbeq	r0, [lr, -r0, lsl #6]
    8364:	24030000 	strcs	r0, [r3], #-0
    8368:	00004a14 	andeq	r4, r0, r4, lsl sl
    836c:	02c40300 	sbceq	r0, r4, #0, 6
    8370:	30030000 	andcc	r0, r3, r0
    8374:	00006414 	andeq	r6, r0, r4, lsl r4
    8378:	00ab0500 	adceq	r0, fp, r0, lsl #10
    837c:	ab060000 	blge	188384 <_Min_Heap_Size+0x187b84>
    8380:	cc000000 	stcgt	0, cr0, [r0], {-0}
    8384:	07000000 	streq	r0, [r0, -r0]
    8388:	0000008c 	andeq	r0, r0, ip, lsl #1
    838c:	18080001 	stmdane	r8, {r0}
    8390:	09015a04 	stmdbeq	r1, {r2, r9, fp, ip, lr}
    8394:	00000136 	andeq	r0, r0, r6, lsr r1
    8398:	524d4909 	subpl	r4, sp, #147456	; 0x24000
    839c:	015c0400 	cmpeq	ip, r0, lsl #8
    83a0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83a4:	00230200 	eoreq	r0, r3, r0, lsl #4
    83a8:	524d4509 	subpl	r4, sp, #37748736	; 0x2400000
    83ac:	015d0400 	cmpeq	sp, r0, lsl #8
    83b0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83b4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    83b8:	0019fa0a 	andseq	pc, r9, sl, lsl #20
    83bc:	015e0400 	cmpeq	lr, r0, lsl #8
    83c0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83c4:	08230200 	stmdaeq	r3!, {r9}
    83c8:	0019c30a 	andseq	ip, r9, sl, lsl #6
    83cc:	015f0400 	cmpeq	pc, r0, lsl #8
    83d0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83d4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    83d8:	001a550a 	andseq	r5, sl, sl, lsl #10
    83dc:	01600400 	cmneq	r0, r0, lsl #8
    83e0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83e4:	10230200 	eorne	r0, r3, r0, lsl #4
    83e8:	00525009 	subseq	r5, r2, r9
    83ec:	11016104 	tstne	r1, r4, lsl #2
    83f0:	000000b7 	strheq	r0, [r0], -r7
    83f4:	00142302 	andseq	r2, r4, r2, lsl #6
    83f8:	00195d0b 	andseq	r5, r9, fp, lsl #26
    83fc:	01620400 	cmneq	r2, r0, lsl #8
    8400:	0000cc03 	andeq	ip, r0, r3, lsl #24
    8404:	04280800 	strteq	r0, [r8], #-2048	; 0xfffff800
    8408:	de0901ae 	adfle<illegal precision>p	f0, f1, #0.5
    840c:	0a000001 	beq	8418 <_Min_Heap_Size+0x7c18>
    8410:	00000ed7 	ldrdeq	r0, [r0], -r7
    8414:	1101b004 	tstne	r1, r4
    8418:	000000b7 	strheq	r0, [r0], -r7
    841c:	0a002302 	beq	1102c <_Min_Heap_Size+0x1082c>
    8420:	00000de9 	andeq	r0, r0, r9, ror #27
    8424:	1101b104 	tstne	r1, r4, lsl #2
    8428:	000000b7 	strheq	r0, [r0], -r7
    842c:	0a042302 	beq	11103c <_Min_Heap_Size+0x11083c>
    8430:	00000c67 	andeq	r0, r0, r7, ror #24
    8434:	1101b204 	tstne	r1, r4, lsl #4
    8438:	000000b7 	strheq	r0, [r0], -r7
    843c:	0a082302 	beq	21104c <_Min_Heap_Size+0x21084c>
    8440:	00000cb1 			; <UNDEFINED> instruction: 0x00000cb1
    8444:	1101b304 	tstne	r1, r4, lsl #6
    8448:	000000b7 	strheq	r0, [r0], -r7
    844c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
    8450:	00524449 	subseq	r4, r2, r9, asr #8
    8454:	1101b404 	tstne	r1, r4, lsl #8
    8458:	000000b7 	strheq	r0, [r0], -r7
    845c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
    8460:	0052444f 	subseq	r4, r2, pc, asr #8
    8464:	1101b504 	tstne	r1, r4, lsl #10
    8468:	000000b7 	strheq	r0, [r0], -r7
    846c:	0a142302 	beq	51107c <_Min_Heap_Size+0x51087c>
    8470:	00000e8a 	andeq	r0, r0, sl, lsl #29
    8474:	1101b604 	tstne	r1, r4, lsl #12
    8478:	000000b7 	strheq	r0, [r0], -r7
    847c:	0a182302 	beq	61108c <_Min_Heap_Size+0x61088c>
    8480:	00000c55 	andeq	r0, r0, r5, asr ip
    8484:	1101b704 	tstne	r1, r4, lsl #14
    8488:	000000b7 	strheq	r0, [r0], -r7
    848c:	091c2302 	ldmdbeq	ip, {r1, r8, r9, sp}
    8490:	00524641 	subseq	r4, r2, r1, asr #12
    8494:	1101b804 	tstne	r1, r4, lsl #16
    8498:	000001ee 	andeq	r0, r0, lr, ror #3
    849c:	00202302 	eoreq	r2, r0, r2, lsl #6
    84a0:	0000b706 	andeq	fp, r0, r6, lsl #14
    84a4:	0001ee00 	andeq	lr, r1, r0, lsl #28
    84a8:	008c0700 	addeq	r0, ip, r0, lsl #14
    84ac:	00010000 	andeq	r0, r1, r0
    84b0:	0001de05 	andeq	sp, r1, r5, lsl #28
    84b4:	0e8f0b00 	vdiveq.f64	d0, d15, d0
    84b8:	b9040000 	stmdblt	r4, {}	; <UNPREDICTABLE>
    84bc:	01430301 	cmpeq	r3, r1, lsl #6
    84c0:	24080000 	strcs	r0, [r8], #-0
    84c4:	0901bf04 	stmdbeq	r1, {r2, r8, r9, sl, fp, ip, sp, pc}
    84c8:	0000025b 	andeq	r0, r0, fp, asr r2
    84cc:	00192a0a 	andseq	r2, r9, sl, lsl #20
    84d0:	01c10400 	biceq	r0, r1, r0, lsl #8
    84d4:	0000b711 	andeq	fp, r0, r1, lsl r7
    84d8:	00230200 	eoreq	r0, r3, r0, lsl #4
    84dc:	434d5009 	movtmi	r5, #53257	; 0xd009
    84e0:	01c20400 	biceq	r0, r2, r0, lsl #8
    84e4:	0000b711 	andeq	fp, r0, r1, lsl r7
    84e8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    84ec:	0019310a 	andseq	r3, r9, sl, lsl #2
    84f0:	01c30400 	biceq	r0, r3, r0, lsl #8
    84f4:	00026b11 	andeq	r6, r2, r1, lsl fp
    84f8:	08230200 	stmdaeq	r3!, {r9}
    84fc:	001a3e0a 	andseq	r3, sl, sl, lsl #28
    8500:	01c40400 	biceq	r0, r4, r0, lsl #8
    8504:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8508:	18230200 	stmdane	r3!, {r9}
    850c:	00198d0a 	andseq	r8, r9, sl, lsl #26
    8510:	01c50400 	biceq	r0, r5, r0, lsl #8
    8514:	0000b711 	andeq	fp, r0, r1, lsl r7
    8518:	20230200 	eorcs	r0, r3, r0, lsl #4
    851c:	00b70600 	adcseq	r0, r7, r0, lsl #12
    8520:	026b0000 	rsbeq	r0, fp, #0
    8524:	8c070000 	stchi	0, cr0, [r7], {-0}
    8528:	03000000 	movweq	r0, #0
    852c:	025b0500 	subseq	r0, fp, #0, 10
    8530:	eb0b0000 	bl	2c8538 <_Min_Heap_Size+0x2c7d38>
    8534:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    8538:	000301c6 	andeq	r0, r3, r6, asr #3
    853c:	08000002 	stmdaeq	r0, {r1}
    8540:	01f40488 	mvnseq	r0, r8, lsl #9
    8544:	00046909 	andeq	r6, r4, r9, lsl #18
    8548:	52430900 	subpl	r0, r3, #0, 18
    854c:	01f60400 	mvnseq	r0, r0, lsl #8
    8550:	0000b711 	andeq	fp, r0, r1, lsl r7
    8554:	00230200 	eoreq	r0, r3, r0, lsl #4
    8558:	0002820a 	andeq	r8, r2, sl, lsl #4
    855c:	01f70400 	mvnseq	r0, r0, lsl #8
    8560:	0000b711 	andeq	fp, r0, r1, lsl r7
    8564:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8568:	0002850a 	andeq	r8, r2, sl, lsl #10
    856c:	01f80400 	mvnseq	r0, r0, lsl #8
    8570:	0000b711 	andeq	fp, r0, r1, lsl r7
    8574:	08230200 	stmdaeq	r3!, {r9}
    8578:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
    857c:	01f90400 	mvnseq	r0, r0, lsl #8
    8580:	0000b711 	andeq	fp, r0, r1, lsl r7
    8584:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8588:	0001660a 	andeq	r6, r1, sl, lsl #12
    858c:	01fa0400 	mvnseq	r0, r0, lsl #8
    8590:	0000b711 	andeq	fp, r0, r1, lsl r7
    8594:	10230200 	eorne	r0, r3, r0, lsl #4
    8598:	00077e0a 	andeq	r7, r7, sl, lsl #28
    859c:	01fb0400 	mvnseq	r0, r0, lsl #8
    85a0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85a4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    85a8:	0006d00a 	andeq	sp, r6, sl
    85ac:	01fc0400 	mvnseq	r0, r0, lsl #8
    85b0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85b4:	18230200 	stmdane	r3!, {r9}
    85b8:	00055e0a 	andeq	r5, r5, sl, lsl #28
    85bc:	01fd0400 	mvnseq	r0, r0, lsl #8
    85c0:	0000ab11 	andeq	sl, r0, r1, lsl fp
    85c4:	1c230200 	sfmne	f0, 4, [r3], #-0
    85c8:	00053b0a 	andeq	r3, r5, sl, lsl #22
    85cc:	01fe0400 	mvnseq	r0, r0, lsl #8
    85d0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85d4:	20230200 	eorcs	r0, r3, r0, lsl #4
    85d8:	0001f90a 	andeq	pc, r1, sl, lsl #18
    85dc:	01ff0400 	mvnseq	r0, r0, lsl #8
    85e0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85e4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    85e8:	0005680a 	andeq	r6, r5, sl, lsl #16
    85ec:	02000400 	andeq	r0, r0, #0, 8
    85f0:	0000bc11 	andeq	fp, r0, r1, lsl ip
    85f4:	28230200 	stmdacs	r3!, {r9}
    85f8:	0008d40a 	andeq	sp, r8, sl, lsl #8
    85fc:	02010400 	andeq	r0, r1, #0, 8
    8600:	0000b711 	andeq	fp, r0, r1, lsl r7
    8604:	30230200 	eorcc	r0, r3, r0, lsl #4
    8608:	0007ee0a 	andeq	lr, r7, sl, lsl #28
    860c:	02020400 	andeq	r0, r2, #0, 8
    8610:	0000b711 	andeq	fp, r0, r1, lsl r7
    8614:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    8618:	0004d60a 	andeq	sp, r4, sl, lsl #12
    861c:	02030400 	andeq	r0, r3, #0, 8
    8620:	0000b711 	andeq	fp, r0, r1, lsl r7
    8624:	38230200 	stmdacc	r3!, {r9}
    8628:	0005720a 	andeq	r7, r5, sl, lsl #4
    862c:	02040400 	andeq	r0, r4, #0, 8
    8630:	0000ab11 	andeq	sl, r0, r1, lsl fp
    8634:	3c230200 	sfmcc	f0, 4, [r3], #-0
    8638:	00070b0a 	andeq	r0, r7, sl, lsl #22
    863c:	02050400 	andeq	r0, r5, #0, 8
    8640:	0000b711 	andeq	fp, r0, r1, lsl r7
    8644:	40230200 	eormi	r0, r3, r0, lsl #4
    8648:	0006c80a 	andeq	ip, r6, sl, lsl #16
    864c:	02060400 	andeq	r0, r6, #0, 8
    8650:	0000b711 	andeq	fp, r0, r1, lsl r7
    8654:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    8658:	00057c0a 	andeq	r7, r5, sl, lsl #24
    865c:	02070400 	andeq	r0, r7, #0, 8
    8660:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8664:	48230200 	stmdami	r3!, {r9}
    8668:	00012b0a 	andeq	r2, r1, sl, lsl #22
    866c:	02080400 	andeq	r0, r8, #0, 8
    8670:	0000b711 	andeq	fp, r0, r1, lsl r7
    8674:	50230200 	eorpl	r0, r3, r0, lsl #4
    8678:	0005100a 	andeq	r1, r5, sl
    867c:	02090400 	andeq	r0, r9, #0, 8
    8680:	0000b711 	andeq	fp, r0, r1, lsl r7
    8684:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    8688:	0006960a 	andeq	r9, r6, sl, lsl #12
    868c:	020a0400 	andeq	r0, sl, #0, 8
    8690:	0000b711 	andeq	fp, r0, r1, lsl r7
    8694:	58230200 	stmdapl	r3!, {r9}
    8698:	0005860a 	andeq	r8, r5, sl, lsl #12
    869c:	020b0400 	andeq	r0, fp, #0, 8
    86a0:	0000ab11 	andeq	sl, r0, r1, lsl fp
    86a4:	5c230200 	sfmpl	f0, 4, [r3], #-0
    86a8:	00001b0a 	andeq	r1, r0, sl, lsl #22
    86ac:	020c0400 	andeq	r0, ip, #0, 8
    86b0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86b4:	60230200 	eorvs	r0, r3, r0, lsl #4
    86b8:	0003eb0a 	andeq	lr, r3, sl, lsl #22
    86bc:	020d0400 	andeq	r0, sp, #0, 8
    86c0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86c4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    86c8:	0005900a 	andeq	r9, r5, sl
    86cc:	020e0400 	andeq	r0, lr, #0, 8
    86d0:	0000bc11 	andeq	fp, r0, r1, lsl ip
    86d4:	68230200 	stmdavs	r3!, {r9}
    86d8:	0008700a 	andeq	r7, r8, sl
    86dc:	020f0400 	andeq	r0, pc, #0, 8
    86e0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86e4:	70230200 	eorvc	r0, r3, r0, lsl #4
    86e8:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
    86ec:	02100400 	andseq	r0, r0, #0, 8
    86f0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86f4:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    86f8:	00059a0a 	andeq	r9, r5, sl, lsl #20
    86fc:	02110400 	andseq	r0, r1, #0, 8
    8700:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8704:	78230200 	stmdavc	r3!, {r9}
    8708:	00083f0a 	andeq	r3, r8, sl, lsl #30
    870c:	02120400 	andseq	r0, r2, #0, 8
    8710:	0000b711 	andeq	fp, r0, r1, lsl r7
    8714:	80230300 	eorhi	r0, r3, r0, lsl #6
    8718:	037e0a01 	cmneq	lr, #4096	; 0x1000
    871c:	13040000 	movwne	r0, #16384	; 0x4000
    8720:	00b71102 	adcseq	r1, r7, r2, lsl #2
    8724:	23030000 	movwcs	r0, #12288	; 0x3000
    8728:	0b000184 	bleq	8d40 <_Min_Heap_Size+0x8540>
    872c:	000001cd 	andeq	r0, r0, sp, asr #3
    8730:	03021404 	movweq	r1, #9220	; 0x2404
    8734:	0000027d 	andeq	r0, r0, sp, ror r2
    8738:	3c01070c 	stccc	7, cr0, [r1], {12}
    873c:	05000000 	streq	r0, [r0, #-0]
    8740:	049101b9 	ldreq	r0, [r1], #441	; 0x1b9
    8744:	1e0d0000 	cdpne	0, 0, cr0, cr13, cr0, {0}
    8748:	00000003 	andeq	r0, r0, r3
    874c:	5445530e 	strbpl	r5, [r5], #-782	; 0xfffffcf2
    8750:	02000100 	andeq	r0, r0, #0, 2
    8754:	07260408 	streq	r0, [r6, -r8, lsl #8]!
    8758:	070c0000 	streq	r0, [ip, -r0]
    875c:	00003c01 	andeq	r3, r0, r1, lsl #24
    8760:	01270600 			; <UNDEFINED> instruction: 0x01270600
    8764:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    8768:	00035c0d 	andeq	r5, r3, sp, lsl #24
    876c:	010d0000 	mrseq	r0, (UNDEF: 13)
    8770:	01000007 	tsteq	r0, r7
    8774:	0009090d 	andeq	r0, r9, sp, lsl #18
    8778:	3d0d0200 	sfmcc	f0, 4, [sp, #-0]
    877c:	03000003 	movweq	r0, #3
    8780:	12f60300 	rscsne	r0, r6, #0, 6
    8784:	2c060000 	stccs	0, cr0, [r6], {-0}
    8788:	00049803 	andeq	r9, r4, r3, lsl #16
    878c:	07140f00 	ldreq	r0, [r4, -r0, lsl #30]
    8790:	0520092e 	streq	r0, [r0, #-2350]!	; 0xfffff6d2
    8794:	50100000 	andspl	r0, r0, r0
    8798:	07006e69 	streq	r6, [r0, -r9, ror #28]
    879c:	00ab0c30 	adceq	r0, fp, r0, lsr ip
    87a0:	23020000 	movwcs	r0, #8192	; 0x2000
    87a4:	06f11100 	ldrbteq	r1, [r1], r0, lsl #2
    87a8:	33070000 	movwcc	r0, #28672	; 0x7000
    87ac:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    87b0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    87b4:	000d5311 	andeq	r5, sp, r1, lsl r3
    87b8:	0c360700 	ldceq	7, cr0, [r6], #-0
    87bc:	000000ab 	andeq	r0, r0, fp, lsr #1
    87c0:	11082302 	tstne	r8, r2, lsl #6
    87c4:	0000097d 	andeq	r0, r0, sp, ror r9
    87c8:	ab0c3907 	blge	316bec <_Min_Heap_Size+0x3163ec>
    87cc:	02000000 	andeq	r0, r0, #0
    87d0:	e1110c23 	tst	r1, r3, lsr #24
    87d4:	0700000c 	streq	r0, [r0, -ip]
    87d8:	00ab0c3c 	adceq	r0, fp, ip, lsr ip
    87dc:	23020000 	movwcs	r0, #8192	; 0x2000
    87e0:	a1030010 	tstge	r3, r0, lsl r0
    87e4:	0700000a 	streq	r0, [r0, -sl]
    87e8:	04cb023e 	strbeq	r0, [fp], #574	; 0x23e
    87ec:	070c0000 	streq	r0, [ip, -r0]
    87f0:	00003c01 	andeq	r3, r0, r1, lsl #24
    87f4:	01440700 	cmpeq	r4, r0, lsl #14
    87f8:	00000547 	andeq	r0, r0, r7, asr #10
    87fc:	00199d0d 	andseq	r9, r9, sp, lsl #26
    8800:	500d0000 	andpl	r0, sp, r0
    8804:	01000019 	tsteq	r0, r9, lsl r0
    8808:	1a470300 	bne	11c9410 <_Min_Heap_Size+0x11c8c10>
    880c:	47070000 	strmi	r0, [r7, -r0]
    8810:	00052c02 	andeq	r2, r5, r2, lsl #24
    8814:	ac011200 	sfmge	f1, 4, [r1], {-0}
    8818:	01000019 	tsteq	r0, r9, lsl r0
    881c:	010d01fb 	strdeq	r0, [sp, -fp]
	...
    8828:	01007d02 	tsteq	r0, r2, lsl #26
    882c:	0000057e 	andeq	r0, r0, lr, ror r5
    8830:	00190513 	andseq	r0, r9, r3, lsl r5
    8834:	01fb0100 	mvnseq	r0, r0, lsl #2
    8838:	00009f2d 	andeq	r9, r0, sp, lsr #30
    883c:	00500100 	subseq	r0, r0, r0, lsl #2
    8840:	19c80114 	stmibne	r8, {r2, r4, r8}^
    8844:	ec010000 	stc	0, cr0, [r1], {-0}
    8848:	00010601 	andeq	r0, r1, r1, lsl #12
    884c:	00000000 	andeq	r0, r0, r0
    8850:	47000000 	strmi	r0, [r0, -r0]
    8854:	01000058 	qaddeq	r0, r8, r0
    8858:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
    885c:	00190515 	andseq	r0, r9, r5, lsl r5
    8860:	01ec0100 	mvneq	r0, r0, lsl #2
    8864:	00009f28 	andeq	r9, r0, r8, lsr #30
    8868:	00586f00 	subseq	r6, r8, r0, lsl #30
    886c:	00586700 	subseq	r6, r8, r0, lsl #14
    8870:	00001600 	andeq	r1, r0, r0, lsl #12
    8874:	05530000 	ldrbeq	r0, [r3, #-0]
    8878:	17000000 	strne	r0, [r0, -r0]
    887c:	00190e01 	andseq	r0, r9, r1, lsl #28
    8880:	01ca0100 	biceq	r0, sl, r0, lsl #2
    8884:	04bf0113 	ldrteq	r0, [pc], #275	; 888c <_Min_Heap_Size+0x808c>
	...
    8890:	58a90000 	stmiapl	r9!, {}	; <UNPREDICTABLE>
    8894:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8898:	15000006 	strne	r0, [r0, #-6]
    889c:	000019ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    88a0:	3201ca01 	andcc	ip, r1, #4096	; 0x1000
    88a4:	0000062e 	andeq	r0, r0, lr, lsr #12
    88a8:	000058f5 	strdeq	r5, [r0], -r5	; <UNPREDICTABLE>
    88ac:	000058ed 	andeq	r5, r0, sp, ror #17
    88b0:	00190515 	andseq	r0, r9, r5, lsl r5
    88b4:	01ca0100 	biceq	r0, sl, r0, lsl #2
    88b8:	00009f42 	andeq	r9, r0, r2, asr #30
    88bc:	00593100 	subseq	r3, r9, r0, lsl #2
    88c0:	00592900 	subseq	r2, r9, r0, lsl #18
    88c4:	6d741800 	ldclvs	8, cr1, [r4, #-0]
    88c8:	cc010070 	stcgt	0, cr0, [r1], {112}	; 0x70
    88cc:	00b71101 	adcseq	r1, r7, r1, lsl #2
    88d0:	91020000 	mrsls	r0, (UNDEF: 2)
    88d4:	0000196c 	andeq	r1, r0, ip, ror #18
    88d8:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    88dc:	011a0000 	tsteq	sl, r0
    88e0:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    88e4:	1a08002c 	bne	20899c <_Min_Heap_Size+0x20819c>
    88e8:	0a035101 	beq	dccf4 <_Min_Heap_Size+0xdc4f4>
    88ec:	000001cf 	andeq	r0, r0, pc, asr #3
    88f0:	01f3041b 	mvnseq	r0, fp, lsl r4
    88f4:	01140000 	tsteq	r4, r0
    88f8:	00001938 	andeq	r1, r0, r8, lsr r9
    88fc:	0601b101 	streq	fp, [r1], -r1, lsl #2
    8900:	00000001 	andeq	r0, r0, r1
    8904:	00000000 	andeq	r0, r0, r0
    8908:	00596b00 	subseq	r6, r9, r0, lsl #22
    890c:	06aa0100 	strteq	r0, [sl], r0, lsl #2
    8910:	ff150000 			; <UNDEFINED> instruction: 0xff150000
    8914:	01000019 	tsteq	r0, r9, lsl r0
    8918:	2e2701b1 	mcrcs	1, 1, r0, cr7, cr1, {5}
    891c:	93000006 	movwls	r0, #6
    8920:	8b000059 	blhi	8a8c <_Min_Heap_Size+0x828c>
    8924:	15000059 	strne	r0, [r0, #-89]	; 0xffffffa7
    8928:	00001905 	andeq	r1, r0, r5, lsl #18
    892c:	3701b101 	strcc	fp, [r1, -r1, lsl #2]
    8930:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8934:	000059cf 	andeq	r5, r0, pc, asr #19
    8938:	000059c7 	andeq	r5, r0, r7, asr #19
    893c:	72646f1c 	rsbvc	r6, r4, #28, 30	; 0x70
    8940:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    8944:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    8948:	005a0b00 	subseq	r0, sl, r0, lsl #22
    894c:	005a0900 	subseq	r0, sl, r0, lsl #18
    8950:	00001900 	andeq	r1, r0, r0, lsl #18
    8954:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8958:	011a0000 	tsteq	sl, r0
    895c:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    8960:	1a08002c 	bne	208a18 <_Min_Heap_Size+0x208218>
    8964:	0a035101 	beq	dcd70 <_Min_Heap_Size+0xdc570>
    8968:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    896c:	197b0114 	ldmdbne	fp!, {r2, r4, r8}^
    8970:	9a010000 	bls	48978 <_Min_Heap_Size+0x48178>
    8974:	00010601 	andeq	r0, r1, r1, lsl #12
    8978:	00000000 	andeq	r0, r0, r0
    897c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    8980:	0100005a 	qaddeq	r0, sl, r0
    8984:	0000073e 	andeq	r0, r0, lr, lsr r7
    8988:	0019ff15 	andseq	pc, r9, r5, lsl pc	; <UNPREDICTABLE>
    898c:	019a0100 	orrseq	r0, sl, r0, lsl #2
    8990:	00062e26 	andeq	r2, r6, r6, lsr #28
    8994:	005a4600 	subseq	r4, sl, r0, lsl #12
    8998:	005a3e00 	subseq	r3, sl, r0, lsl #28
    899c:	19051500 	stmdbne	r5, {r8, sl, ip}
    89a0:	9a010000 	bls	489a8 <_Min_Heap_Size+0x481a8>
    89a4:	009f3601 	addseq	r3, pc, r1, lsl #12
    89a8:	5a820000 	bpl	fe0889b0 <_estack+0xde087778>
    89ac:	5a7a0000 	bpl	1e889b4 <_Min_Heap_Size+0x1e881b4>
    89b0:	4c150000 	ldcmi	0, cr0, [r5], {-0}
    89b4:	0100001a 	tsteq	r0, sl, lsl r0
    89b8:	474e019a 			; <UNDEFINED> instruction: 0x474e019a
    89bc:	c4000005 	strgt	r0, [r0], #-5
    89c0:	bc00005a 	stclt	0, cr0, [r0], {90}	; 0x5a
    89c4:	1d00005a 	stcne	0, cr0, [r0, #-360]	; 0xfffffe98
    89c8:	00000000 	andeq	r0, r0, r0
    89cc:	000009ce 	andeq	r0, r0, lr, asr #19
    89d0:	00000723 	andeq	r0, r0, r3, lsr #14
    89d4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    89d8:	002c4403 	eoreq	r4, ip, r3, lsl #8
    89dc:	51011a08 	tstpl	r1, r8, lsl #20
    89e0:	019d0a03 	orrseq	r0, sp, r3, lsl #20
    89e4:	00001900 	andeq	r1, r0, r0, lsl #18
    89e8:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    89ec:	011a0000 	tsteq	sl, r0
    89f0:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    89f4:	1a08002c 	bne	208aac <_Min_Heap_Size+0x2082ac>
    89f8:	0a035101 	beq	dce04 <_Min_Heap_Size+0xdc604>
    89fc:	0000019e 	muleq	r0, lr, r1
    8a00:	196a0117 	stmdbne	sl!, {r0, r1, r2, r4, r8}^
    8a04:	77010000 	strvc	r0, [r1, -r0]
    8a08:	47010f01 	strmi	r0, [r1, -r1, lsl #30]
    8a0c:	00000005 	andeq	r0, r0, r5
    8a10:	00000000 	andeq	r0, r0, r0
    8a14:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    8a18:	0100005a 	qaddeq	r0, sl, r0
    8a1c:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
    8a20:	0019ff15 	andseq	pc, r9, r5, lsl pc	; <UNPREDICTABLE>
    8a24:	01770100 	cmneq	r7, r0, lsl #2
    8a28:	00062e2e 	andeq	r2, r6, lr, lsr #28
    8a2c:	005b2600 	subseq	r2, fp, r0, lsl #12
    8a30:	005b1e00 	subseq	r1, fp, r0, lsl #28
    8a34:	19051500 	stmdbne	r5, {r8, sl, ip}
    8a38:	77010000 	strvc	r0, [r1, -r0]
    8a3c:	009f3e01 	addseq	r3, pc, r1, lsl #28
    8a40:	5b620000 	blpl	1888a48 <_Min_Heap_Size+0x1888248>
    8a44:	5b5a0000 	blpl	1688a4c <_Min_Heap_Size+0x168824c>
    8a48:	931e0000 	tstls	lr, #0
    8a4c:	01000019 	tsteq	r0, r9, lsl r0
    8a50:	47110179 			; <UNDEFINED> instruction: 0x47110179
    8a54:	9e000005 	cdpls	0, 0, cr0, cr0, cr5, {0}
    8a58:	9c00005b 	stcls	0, cr0, [r0], {91}	; 0x5b
    8a5c:	1900005b 	stmdbne	r0, {r0, r1, r3, r4, r6}
    8a60:	00000000 	andeq	r0, r0, r0
    8a64:	000009ce 	andeq	r0, r0, lr, asr #19
    8a68:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8a6c:	002c4403 	eoreq	r4, ip, r3, lsl #8
    8a70:	51011a08 	tstpl	r1, r8, lsl #20
    8a74:	017c0a03 	cmneq	ip, r3, lsl #20
    8a78:	01140000 	tsteq	r4, r0
    8a7c:	00000ad6 	ldrdeq	r0, [r0], -r6
    8a80:	06012601 	streq	r2, [r1], -r1, lsl #12
    8a84:	00000001 	andeq	r0, r0, r1
    8a88:	00000000 	andeq	r0, r0, r0
    8a8c:	005bb100 	subseq	fp, fp, r0, lsl #2
    8a90:	086d0100 	stmdaeq	sp!, {r8}^
    8a94:	ff150000 			; <UNDEFINED> instruction: 0xff150000
    8a98:	01000019 	tsteq	r0, r9, lsl r0
    8a9c:	2e250126 	sufcssp	f0, f5, f6
    8aa0:	d7000006 	strle	r0, [r0, -r6]
    8aa4:	d100005b 	qaddle	r0, fp, r0
    8aa8:	1500005b 	strne	r0, [r0, #-91]	; 0xffffffa5
    8aac:	00001905 	andeq	r1, r0, r5, lsl #18
    8ab0:	35012601 	strcc	r2, [r1, #-1537]	; 0xfffff9ff
    8ab4:	000000ab 	andeq	r0, r0, fp, lsr #1
    8ab8:	00005c09 	andeq	r5, r0, r9, lsl #24
    8abc:	00005c03 	andeq	r5, r0, r3, lsl #24
    8ac0:	0019211e 	andseq	r2, r9, lr, lsl r1
    8ac4:	01280100 			; <UNDEFINED> instruction: 0x01280100
    8ac8:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    8acc:	005c3700 	subseq	r3, ip, r0, lsl #14
    8ad0:	005c3500 	subseq	r3, ip, r0, lsl #10
    8ad4:	191f1e00 	ldmdbne	pc, {r9, sl, fp, ip}	; <UNPREDICTABLE>
    8ad8:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    8adc:	00ab0c01 	adceq	r0, fp, r1, lsl #24
    8ae0:	5c520000 	mrapl	r0, r2, acc0
    8ae4:	5c4a0000 	marpl	acc0, r0, sl
    8ae8:	e11e0000 	tst	lr, r0
    8aec:	01000019 	tsteq	r0, r9, lsl r0
    8af0:	ab0c012a 	blge	308fa0 <_Min_Heap_Size+0x3087a0>
    8af4:	95000000 	strls	r0, [r0, #-0]
    8af8:	8b00005c 	blhi	8c70 <_Min_Heap_Size+0x8470>
    8afc:	1c00005c 	stcne	0, cr0, [r0], {92}	; 0x5c
    8b00:	00706d74 	rsbseq	r6, r0, r4, ror sp
    8b04:	0c012b01 			; <UNDEFINED> instruction: 0x0c012b01
    8b08:	000000ab 	andeq	r0, r0, fp, lsr #1
    8b0c:	00005ce9 	andeq	r5, r0, r9, ror #25
    8b10:	00005ce1 	andeq	r5, r0, r1, ror #25
    8b14:	00000019 	andeq	r0, r0, r9, lsl r0
    8b18:	0009ce00 	andeq	ip, r9, r0, lsl #28
    8b1c:	50011a00 	andpl	r1, r1, r0, lsl #20
    8b20:	2c440305 	mcrrcs	3, 0, r0, r4, cr5
    8b24:	011a0800 	tsteq	sl, r0, lsl #16
    8b28:	2e0a0351 	mcrcs	3, 0, r0, cr10, cr1, {2}
    8b2c:	1f000001 	svcne	0x00000001
    8b30:	000b2601 	andeq	r2, fp, r1, lsl #12
    8b34:	06a40100 	strteq	r0, [r4], r0, lsl #2
    8b38:	00116001 	andseq	r6, r1, r1
    8b3c:	00144808 	andseq	r4, r4, r8, lsl #16
    8b40:	005d1e08 	subseq	r1, sp, r8, lsl #28
    8b44:	09c80100 	stmibeq	r8, {r8}^
    8b48:	ff200000 			; <UNDEFINED> instruction: 0xff200000
    8b4c:	01000019 	tsteq	r0, r9, lsl r0
    8b50:	062e23a4 	strteq	r2, [lr], -r4, lsr #7
    8b54:	5d5c0000 	ldclpl	0, cr0, [ip, #-0]
    8b58:	5d560000 	ldclpl	0, cr0, [r6, #-0]
    8b5c:	2a200000 	bcs	808b64 <_Min_Heap_Size+0x808364>
    8b60:	0100000b 	tsteq	r0, fp
    8b64:	09c83ca4 	stmibeq	r8, {r2, r5, r7, sl, fp, ip, sp}^
    8b68:	5d8e0000 	stcpl	0, cr0, [lr]
    8b6c:	5d880000 	stcpl	0, cr0, [r8]
    8b70:	21210000 			; <UNDEFINED> instruction: 0x21210000
    8b74:	01000019 	tsteq	r0, r9, lsl r0
    8b78:	00ab0ca6 	adceq	r0, fp, r6, lsr #25
    8b7c:	5dbc0000 	ldcpl	0, cr0, [ip]
    8b80:	5dba0000 	ldcpl	0, cr0, [sl]
    8b84:	1f210000 	svcne	0x00210000
    8b88:	01000019 	tsteq	r0, r9, lsl r0
    8b8c:	00ab0ca7 	adceq	r0, fp, r7, lsr #25
    8b90:	5de10000 	stclpl	0, cr0, [r1]
    8b94:	5dcf0000 	stclpl	0, cr0, [pc]	; 8b9c <_Min_Heap_Size+0x839c>
    8b98:	e1210000 			; <UNDEFINED> instruction: 0xe1210000
    8b9c:	01000019 	tsteq	r0, r9, lsl r0
    8ba0:	00ab0ca8 	adceq	r0, fp, r8, lsr #25
    8ba4:	5e680000 	cdppl	0, 6, cr0, cr8, cr0, {0}
    8ba8:	5e620000 	cdppl	0, 6, cr0, cr2, cr0, {0}
    8bac:	4b210000 	blmi	848bb4 <_Min_Heap_Size+0x8483b4>
    8bb0:	01000019 	tsteq	r0, r9, lsl r0
    8bb4:	00ab0ca9 	adceq	r0, fp, r9, lsr #25
    8bb8:	5ec20000 	cdppl	0, 12, cr0, cr2, cr0, {0}
    8bbc:	5e920000 	cdppl	0, 9, cr0, cr2, cr0, {0}
    8bc0:	a4220000 	strtge	r0, [r2], #-0
    8bc4:	bc080013 	stclt	0, cr0, [r8], {19}
    8bc8:	1d080013 	stcne	0, cr0, [r8, #-76]	; 0xffffffb4
    8bcc:	23000009 	movwcs	r0, #9
    8bd0:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    8bd4:	b709f101 	strlt	pc, [r9, -r1, lsl #2]
    8bd8:	02000000 	andeq	r0, r0, #0
    8bdc:	1d006491 	cfstrsne	mvf6, [r0, #-580]	; 0xfffffdbc
    8be0:	080011b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, ip}
    8be4:	000009ce 	andeq	r0, r0, lr, asr #19
    8be8:	0000093a 	andeq	r0, r0, sl, lsr r9
    8bec:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8bf0:	002c4403 	eoreq	r4, ip, r3, lsl #8
    8bf4:	51011a08 	tstpl	r1, r8, lsl #20
    8bf8:	00ac0802 	adceq	r0, ip, r2, lsl #16
    8bfc:	0011cc1d 	andseq	ip, r1, sp, lsl ip
    8c00:	0009ce08 	andeq	ip, r9, r8, lsl #28
    8c04:	00095700 	andeq	r5, r9, r0, lsl #14
    8c08:	50011a00 	andpl	r1, r1, r0, lsl #20
    8c0c:	2c440305 	mcrrcs	3, 0, r0, r4, cr5
    8c10:	011a0800 	tsteq	sl, r0, lsl #16
    8c14:	ad080251 	sfmge	f0, 4, [r8, #-324]	; 0xfffffebc
    8c18:	12121d00 	andsne	r1, r2, #0, 26
    8c1c:	09ce0800 	stmibeq	lr, {fp}^
    8c20:	09740000 	ldmdbeq	r4!, {}^	; <UNPREDICTABLE>
    8c24:	011a0000 	tsteq	sl, r0
    8c28:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    8c2c:	1a08002c 	bne	208ce4 <_Min_Heap_Size+0x2084e4>
    8c30:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    8c34:	4a1d00ae 	bmi	748ef4 <_Min_Heap_Size+0x7486f4>
    8c38:	ce080012 	mcrgt	0, 0, r0, cr8, cr2, {0}
    8c3c:	91000009 	tstls	r0, r9
    8c40:	1a000009 	bne	8c6c <_Min_Heap_Size+0x846c>
    8c44:	03055001 	movweq	r5, #20481	; 0x5001
    8c48:	08002c44 	stmdaeq	r0, {r2, r6, sl, fp, sp}
    8c4c:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    8c50:	1d00c008 	stcne	0, cr12, [r0, #-32]	; 0xffffffe0
    8c54:	08001254 	stmdaeq	r0, {r2, r4, r6, r9, ip}
    8c58:	000009ce 	andeq	r0, r0, lr, asr #19
    8c5c:	000009ae 	andeq	r0, r0, lr, lsr #19
    8c60:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8c64:	002c4403 	eoreq	r4, ip, r3, lsl #8
    8c68:	51011a08 	tstpl	r1, r8, lsl #20
    8c6c:	00d10802 	sbcseq	r0, r1, r2, lsl #16
    8c70:	0012b419 	andseq	fp, r2, r9, lsl r4
    8c74:	0009ce08 	andeq	ip, r9, r8, lsl #28
    8c78:	50011a00 	andpl	r1, r1, r0, lsl #20
    8c7c:	2c440305 	mcrrcs	3, 0, r0, r4, cr5
    8c80:	011a0800 	tsteq	sl, r0, lsl #16
    8c84:	de080251 	mcrle	2, 0, r0, cr8, cr1, {2}
    8c88:	041b0000 	ldreq	r0, [fp], #-0
    8c8c:	00000520 	andeq	r0, r0, r0, lsr #10
    8c90:	b8010124 	stmdalt	r1, {r2, r5, r8}
    8c94:	b8000004 	stmdalt	r0, {r2}
    8c98:	08000004 	stmdaeq	r0, {r2}
    8c9c:	000801e6 	andeq	r0, r8, r6, ror #3
    8ca0:	00000dd3 	ldrdeq	r0, [r0], -r3
    8ca4:	101b0002 	andsne	r0, fp, r2
    8ca8:	01040000 	mrseq	r0, (UNDEF: 4)
    8cac:	000005d7 	ldrdeq	r0, [r0], -r7
    8cb0:	001b4a0c 	andseq	r4, fp, ip, lsl #20
    8cb4:	00042000 	andeq	r2, r4, r0
    8cb8:	0003f000 	andeq	pc, r3, r0
	...
    8cc4:	0068cb00 	rsbeq	ip, r8, r0, lsl #22
    8cc8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    8ccc:	000000ae 	andeq	r0, r0, lr, lsr #1
    8cd0:	b8070402 	stmdalt	r7, {r1, sl}
    8cd4:	02000000 	andeq	r0, r0, #0
    8cd8:	05c50601 	strbeq	r0, [r5, #1537]	; 0x601
    8cdc:	66030000 	strvs	r0, [r3], -r0
    8ce0:	02000000 	andeq	r0, r0, #0
    8ce4:	004a182b 	subeq	r1, sl, fp, lsr #16
    8ce8:	01020000 	mrseq	r0, (UNDEF: 2)
    8cec:	0005c308 	andeq	ip, r5, r8, lsl #6
    8cf0:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8cf4:	000003fa 	strdeq	r0, [r0], -sl
    8cf8:	f6070202 			; <UNDEFINED> instruction: 0xf6070202
    8cfc:	02000007 	andeq	r0, r0, #7
    8d00:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    8d04:	c2030000 	andgt	r0, r3, #0
    8d08:	02000002 	andeq	r0, r0, #2
    8d0c:	0072194f 	rsbseq	r1, r2, pc, asr #18
    8d10:	04020000 	streq	r0, [r2], #-0
    8d14:	0000b307 	andeq	fp, r0, r7, lsl #6
    8d18:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    8d1c:	000002e7 	andeq	r0, r0, r7, ror #5
    8d20:	69050404 	stmdbvs	r5, {r2, sl}
    8d24:	0300746e 	movweq	r7, #1134	; 0x46e
    8d28:	00000068 	andeq	r0, r0, r8, rrx
    8d2c:	3e131803 	cdpcc	8, 1, cr1, cr3, cr3, {0}
    8d30:	05000000 	streq	r0, [r0, #-0]
    8d34:	00000087 	andeq	r0, r0, r7, lsl #1
    8d38:	0002c403 	andeq	ip, r2, r3, lsl #8
    8d3c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    8d40:	00000066 	andeq	r0, r0, r6, rrx
    8d44:	00009806 	andeq	r9, r0, r6, lsl #16
    8d48:	17f60700 	ldrbne	r0, [r6, r0, lsl #14]!
    8d4c:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    8d50:	00009811 	andeq	r9, r0, r1, lsl r8
    8d54:	08010100 	stmdaeq	r1, {r8}
    8d58:	00000093 	muleq	r0, r3, r0
    8d5c:	000000c7 	andeq	r0, r0, r7, asr #1
    8d60:	00003009 	andeq	r3, r0, r9
    8d64:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    8d68:	000000b7 	strheq	r0, [r0], -r7
    8d6c:	4404180a 	strmi	r1, [r4], #-2058	; 0xfffff7f6
    8d70:	01360901 	teqeq	r6, r1, lsl #18
    8d74:	430b0000 	movwmi	r0, #45056	; 0xb000
    8d78:	46040052 			; <UNDEFINED> instruction: 0x46040052
    8d7c:	00a41101 	adceq	r1, r4, r1, lsl #2
    8d80:	23020000 	movwcs	r0, #8192	; 0x2000
    8d84:	07bc0c00 	ldreq	r0, [ip, r0, lsl #24]!
    8d88:	47040000 	strmi	r0, [r4, -r0]
    8d8c:	00a41101 	adceq	r1, r4, r1, lsl #2
    8d90:	23020000 	movwcs	r0, #8192	; 0x2000
    8d94:	41500b04 	cmpmi	r0, r4, lsl #22
    8d98:	48040052 	stmdami	r4, {r1, r4, r6}
    8d9c:	00a41101 	adceq	r1, r4, r1, lsl #2
    8da0:	23020000 	movwcs	r0, #8192	; 0x2000
    8da4:	00420c08 	subeq	r0, r2, r8, lsl #24
    8da8:	49040000 	stmdbmi	r4, {}	; <UNPREDICTABLE>
    8dac:	00a41101 	adceq	r1, r4, r1, lsl #2
    8db0:	23020000 	movwcs	r0, #8192	; 0x2000
    8db4:	08150c0c 	ldmdaeq	r5, {r2, r3, sl, fp}
    8db8:	4a040000 	bmi	108dc0 <_Min_Heap_Size+0x1085c0>
    8dbc:	00a41101 	adceq	r1, r4, r1, lsl #2
    8dc0:	23020000 	movwcs	r0, #8192	; 0x2000
    8dc4:	43460b10 	movtmi	r0, #27408	; 0x6b10
    8dc8:	4b040052 	blmi	108f18 <_Min_Heap_Size+0x108718>
    8dcc:	00a41101 	adceq	r1, r4, r1, lsl #2
    8dd0:	23020000 	movwcs	r0, #8192	; 0x2000
    8dd4:	db0d0014 	blle	348e2c <_Min_Heap_Size+0x34862c>
    8dd8:	04000007 	streq	r0, [r0], #-7
    8ddc:	cc03014c 	stfgts	f0, [r3], {76}	; 0x4c
    8de0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8de4:	004a0107 	subeq	r0, sl, r7, lsl #2
    8de8:	b9050000 	stmdblt	r5, {}	; <UNPREDICTABLE>
    8dec:	00015e01 	andeq	r5, r1, r1, lsl #28
    8df0:	031e0f00 	tsteq	lr, #0, 30
    8df4:	10000000 	andne	r0, r0, r0
    8df8:	00544553 	subseq	r4, r4, r3, asr r5
    8dfc:	08020001 	stmdaeq	r2, {r0}
    8e00:	00072604 	andeq	r2, r7, r4, lsl #12
    8e04:	01070e00 	tsteq	r7, r0, lsl #28
    8e08:	0000004a 	andeq	r0, r0, sl, asr #32
    8e0c:	8c012706 	stchi	7, cr2, [r1], {6}
    8e10:	0f000001 	svceq	0x00000001
    8e14:	0000035c 	andeq	r0, r0, ip, asr r3
    8e18:	07010f00 	streq	r0, [r1, -r0, lsl #30]
    8e1c:	0f010000 	svceq	0x00010000
    8e20:	00000909 	andeq	r0, r0, r9, lsl #18
    8e24:	033d0f02 	teqeq	sp, #2, 30
    8e28:	00030000 	andeq	r0, r3, r0
    8e2c:	0012f603 	andseq	pc, r2, r3, lsl #12
    8e30:	032c0600 			; <UNDEFINED> instruction: 0x032c0600
    8e34:	00000165 	andeq	r0, r0, r5, ror #2
    8e38:	4a01070e 	bmi	4aa78 <_Min_Heap_Size+0x4a278>
    8e3c:	06000000 	streq	r0, [r0], -r0
    8e40:	01b30132 			; <UNDEFINED> instruction: 0x01b30132
    8e44:	fc0f0000 	stc2	0, cr0, [pc], {-0}
    8e48:	00000008 	andeq	r0, r0, r8
    8e4c:	0004cb0f 	andeq	ip, r4, pc, lsl #22
    8e50:	03000100 	movweq	r0, #256	; 0x100
    8e54:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
    8e58:	98033506 	stmdals	r3, {r1, r2, r8, sl, ip, sp}
    8e5c:	11000001 	tstne	r0, r1
    8e60:	09300730 	ldmdbeq	r0!, {r4, r5, r8, r9, sl}
    8e64:	0000027d 	andeq	r0, r0, sp, ror r2
    8e68:	0005bb12 	andeq	fp, r5, r2, lsl fp
    8e6c:	0c320700 	ldceq	7, cr0, [r2], #-0
    8e70:	00000098 	muleq	r0, r8, r0
    8e74:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    8e78:	000002cd 	andeq	r0, r0, sp, asr #5
    8e7c:	980c3507 	stmdals	ip, {r0, r1, r2, r8, sl, ip, sp}
    8e80:	02000000 	andeq	r0, r0, #0
    8e84:	02120423 	andseq	r0, r2, #587202560	; 0x23000000
    8e88:	07000002 	streq	r0, [r0, -r2]
    8e8c:	00980c39 	addseq	r0, r8, r9, lsr ip
    8e90:	23020000 	movwcs	r0, #8192	; 0x2000
    8e94:	07871208 	streq	r1, [r7, r8, lsl #4]
    8e98:	3c070000 	stccc	0, cr0, [r7], {-0}
    8e9c:	0000980c 	andeq	r9, r0, ip, lsl #16
    8ea0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8ea4:	00081a12 	andeq	r1, r8, r2, lsl sl
    8ea8:	0c3f0700 	ldceq	7, cr0, [pc], #-0	; 8eb0 <_Min_Heap_Size+0x86b0>
    8eac:	00000098 	muleq	r0, r8, r0
    8eb0:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    8eb4:	000003cc 	andeq	r0, r0, ip, asr #7
    8eb8:	980c4207 	stmdals	ip, {r0, r1, r2, r9, lr}
    8ebc:	02000000 	andeq	r0, r0, #0
    8ec0:	f1121423 			; <UNDEFINED> instruction: 0xf1121423
    8ec4:	07000006 	streq	r0, [r0, -r6]
    8ec8:	00980c45 	addseq	r0, r8, r5, asr #24
    8ecc:	23020000 	movwcs	r0, #8192	; 0x2000
    8ed0:	1f9a1218 	svcne	0x009a1218
    8ed4:	4a070000 	bmi	1c8edc <_Min_Heap_Size+0x1c86dc>
    8ed8:	0000980c 	andeq	r9, r0, ip, lsl #16
    8edc:	1c230200 	sfmne	f0, 4, [r3], #-0
    8ee0:	0006ed12 	andeq	lr, r6, r2, lsl sp
    8ee4:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    8ee8:	00000098 	muleq	r0, r8, r0
    8eec:	12202302 	eorne	r2, r0, #134217728	; 0x8000000
    8ef0:	00000732 	andeq	r0, r0, r2, lsr r7
    8ef4:	980c5207 	stmdals	ip, {r0, r1, r2, r9, ip, lr}
    8ef8:	02000000 	andeq	r0, r0, #0
    8efc:	15122423 	ldrne	r2, [r2, #-1059]	; 0xfffffbdd
    8f00:	07000002 	streq	r0, [r0, -r2]
    8f04:	00980c55 	addseq	r0, r8, r5, asr ip
    8f08:	23020000 	movwcs	r0, #8192	; 0x2000
    8f0c:	078e1228 	streq	r1, [lr, r8, lsr #4]
    8f10:	5b070000 	blpl	1c8f18 <_Min_Heap_Size+0x1c8718>
    8f14:	0000980c 	andeq	r9, r0, ip, lsl #16
    8f18:	2c230200 	sfmcs	f0, 4, [r3], #-0
    8f1c:	00470300 	subeq	r0, r7, r0, lsl #6
    8f20:	60070000 	andvs	r0, r7, r0
    8f24:	0001bf02 	andeq	fp, r1, r2, lsl #30
    8f28:	01070e00 	tsteq	r7, r0, lsl #28
    8f2c:	0000004a 	andeq	r0, r0, sl, asr #32
    8f30:	bc016707 	stclt	7, cr6, [r1], {7}
    8f34:	0f000002 	svceq	0x00000002
    8f38:	00000310 	andeq	r0, r0, r0, lsl r3
    8f3c:	03290f00 			; <UNDEFINED> instruction: 0x03290f00
    8f40:	0f010000 	svceq	0x00010000
    8f44:	0000046c 	andeq	r0, r0, ip, ror #8
    8f48:	08960f02 	ldmeq	r6, {r1, r8, r9, sl, fp}
    8f4c:	0f030000 	svceq	0x00030000
    8f50:	0000022d 	andeq	r0, r0, sp, lsr #4
    8f54:	038e0f04 	orreq	r0, lr, #4, 30
    8f58:	00050000 	andeq	r0, r5, r0
    8f5c:	00067c03 	andeq	r7, r6, r3, lsl #24
    8f60:	026e0700 	rsbeq	r0, lr, #0, 14
    8f64:	00000289 	andeq	r0, r0, r9, lsl #5
    8f68:	0002bc06 	andeq	fp, r2, r6, lsl #24
    8f6c:	01070e00 	tsteq	r7, r0, lsl #28
    8f70:	0000004a 	andeq	r0, r0, sl, asr #32
    8f74:	e8017407 	stmda	r1, {r0, r1, r2, sl, ip, sp, lr}
    8f78:	0f000002 	svceq	0x00000002
    8f7c:	00001b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
    8f80:	1b260f00 	blne	98cb88 <_Min_Heap_Size+0x98c388>
    8f84:	00010000 	andeq	r0, r1, r0
    8f88:	001b8203 	andseq	r8, fp, r3, lsl #4
    8f8c:	02770700 	rsbseq	r0, r7, #0, 14
    8f90:	000002cd 	andeq	r0, r0, sp, asr #5
    8f94:	4a01070e 	bmi	4abd4 <_Min_Heap_Size+0x4a3d4>
    8f98:	07000000 	streq	r0, [r0, -r0]
    8f9c:	032d017d 			; <UNDEFINED> instruction: 0x032d017d
    8fa0:	be0f0000 	cdplt	0, 0, cr0, cr15, cr0, {0}
    8fa4:	0000001a 	andeq	r0, r0, sl, lsl r0
    8fa8:	001c890f 	andseq	r8, ip, pc, lsl #18
    8fac:	e40f0100 	str	r0, [pc], #-256	; 8fb4 <_Min_Heap_Size+0x87b4>
    8fb0:	0200001a 	andeq	r0, r0, #26
    8fb4:	001ca50f 	andseq	sl, ip, pc, lsl #10
    8fb8:	0d0f0300 	stceq	3, cr0, [pc, #-0]	; 8fc0 <_Min_Heap_Size+0x87c0>
    8fbc:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8fc0:	001a5b0f 	andseq	r5, sl, pc, lsl #22
    8fc4:	470f0500 	strmi	r0, [pc, -r0, lsl #10]
    8fc8:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    8fcc:	1bc30300 	blne	ff0c9bd4 <_estack+0xdf0c899c>
    8fd0:	85070000 	strhi	r0, [r7, #-0]
    8fd4:	0002f402 	andeq	pc, r2, r2, lsl #8
    8fd8:	06d91300 	ldrbeq	r1, [r9], r0, lsl #6
    8fdc:	07600000 	strbeq	r0, [r0, -r0]!
    8fe0:	0419108a 	ldreq	r1, [r9], #-138	; 0xffffff76
    8fe4:	de120000 	cdple	0, 1, cr0, cr2, cr0, {0}
    8fe8:	07000004 	streq	r0, [r0, -r4]
    8fec:	04191f8c 	ldreq	r1, [r9], #-3980	; 0xfffff074
    8ff0:	23020000 	movwcs	r0, #8192	; 0x2000
    8ff4:	1a7c1200 	bne	1f0d7fc <_Min_Heap_Size+0x1f0cffc>
    8ff8:	8e070000 	cdphi	0, 0, cr0, cr7, cr0, {0}
    8ffc:	00027d1e 	andeq	r7, r2, lr, lsl sp
    9000:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9004:	0002a812 	andeq	sl, r2, r2, lsl r8
    9008:	1e900700 	cdpne	7, 9, cr0, cr0, cr0, {0}
    900c:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    9010:	12342302 	eorsne	r2, r4, #134217728	; 0x8000000
    9014:	0000030a 	andeq	r0, r0, sl, lsl #6
    9018:	c81e9207 	ldmdagt	lr, {r0, r1, r2, r9, ip, pc}
    901c:	02000002 	andeq	r0, r0, #2
    9020:	a1123523 	tstge	r2, r3, lsr #10
    9024:	07000002 	streq	r0, [r0, -r2]
    9028:	041f1f94 	ldreq	r1, [pc], #-3988	; 9030 <_Min_Heap_Size+0x8830>
    902c:	23020000 	movwcs	r0, #8192	; 0x2000
    9030:	093f1238 	ldmdbeq	pc!, {r3, r4, r5, r9, ip}	; <UNPREDICTABLE>
    9034:	96070000 	strls	r0, [r7], -r0
    9038:	00043321 	andeq	r3, r4, r1, lsr #6
    903c:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9040:	0001d912 	andeq	sp, r1, r2, lsl r9
    9044:	21980700 	orrscs	r0, r8, r0, lsl #14
    9048:	00000433 	andeq	r0, r0, r3, lsr r4
    904c:	12402302 	subne	r2, r0, #134217728	; 0x8000000
    9050:	00000197 	muleq	r0, r7, r1
    9054:	33219a07 			; <UNDEFINED> instruction: 0x33219a07
    9058:	02000004 	andeq	r0, r0, #4
    905c:	a4124423 	ldrge	r4, [r2], #-1059	; 0xfffffbdd
    9060:	07000005 	streq	r0, [r0, -r5]
    9064:	0433219c 	ldrteq	r2, [r3], #-412	; 0xfffffe64
    9068:	23020000 	movwcs	r0, #8192	; 0x2000
    906c:	04e71248 	strbteq	r1, [r7], #584	; 0x248
    9070:	9e070000 	cdpls	0, 0, cr0, cr7, cr0, {0}
    9074:	00043321 	andeq	r3, r4, r1, lsr #6
    9078:	4c230200 	sfmmi	f0, 4, [r3], #-0
    907c:	00092d12 	andeq	r2, r9, r2, lsl sp
    9080:	21a00700 	lslcs	r0, r0, #14
    9084:	00000433 	andeq	r0, r0, r3, lsr r4
    9088:	12502302 	subsne	r2, r0, #134217728	; 0x8000000
    908c:	000003ad 	andeq	r0, r0, sp, lsr #7
    9090:	a41ea207 	ldrge	sl, [lr], #-519	; 0xfffffdf9
    9094:	02000000 	andeq	r0, r0, #0
    9098:	8a125423 	bhi	49e12c <_Min_Heap_Size+0x49d92c>
    909c:	07000002 	streq	r0, [r0, -r2]
    90a0:	00981ea4 	addseq	r1, r8, r4, lsr #29
    90a4:	23020000 	movwcs	r0, #8192	; 0x2000
    90a8:	03501258 	cmpeq	r0, #88, 4	; 0x80000005
    90ac:	a6070000 	strge	r0, [r7], -r0
    90b0:	0000981e 	andeq	r9, r0, lr, lsl r8
    90b4:	5c230200 	sfmpl	f0, 4, [r3], #-0
    90b8:	36041400 	strcc	r1, [r4], -r0, lsl #8
    90bc:	15000001 	strne	r0, [r0, #-1]
    90c0:	2d011604 	stccs	6, cr1, [r1, #-16]
    90c4:	17000004 	strne	r0, [r0, -r4]
    90c8:	0000042d 	andeq	r0, r0, sp, lsr #8
    90cc:	39041400 	stmdbcc	r4, {sl, ip}
    90d0:	14000003 	strne	r0, [r0], #-3
    90d4:	00042104 	andeq	r2, r4, r4, lsl #2
    90d8:	06db0300 	ldrbeq	r0, [fp], r0, lsl #6
    90dc:	a8070000 	stmdage	r7, {}	; <UNPREDICTABLE>
    90e0:	00033902 	andeq	r3, r3, r2, lsl #18
    90e4:	39041400 	stmdbcc	r4, {sl, ip}
    90e8:	11000004 	tstne	r0, r4
    90ec:	096f010c 	stmdbeq	pc!, {r2, r3, r8}^	; <UNPREDICTABLE>
    90f0:	00000482 	andeq	r0, r0, r2, lsl #9
    90f4:	52534918 	subspl	r4, r3, #24, 18	; 0x60000
    90f8:	11710100 	cmnne	r1, r0, lsl #2
    90fc:	000000a4 	andeq	r0, r0, r4, lsr #1
    9100:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    9104:	00001a9a 	muleq	r0, sl, sl
    9108:	a4117201 	ldrge	r7, [r1], #-513	; 0xfffffdff
    910c:	02000000 	andeq	r0, r0, #0
    9110:	eb120423 	bl	48a1a4 <_Min_Heap_Size+0x4899a4>
    9114:	0100001b 	tsteq	r0, fp, lsl r0
    9118:	00a41173 	adceq	r1, r4, r3, ror r1
    911c:	23020000 	movwcs	r0, #8192	; 0x2000
    9120:	5e030008 	cdppl	0, 0, cr0, cr3, cr8, {0}
    9124:	0100001c 	tsteq	r0, ip, lsl r0
    9128:	044b0374 	strbeq	r0, [fp], #-884	; 0xfffffc8c
    912c:	06190000 	ldreq	r0, [r9], -r0
    9130:	0100001c 	tsteq	r0, ip, lsl r0
    9134:	011a04bd 			; <UNDEFINED> instruction: 0x011a04bd
    9138:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9144:	01007d02 	tsteq	r0, r2, lsl #26
    9148:	000004ec 	andeq	r0, r0, ip, ror #9
    914c:	00137f1a 	andseq	r7, r3, sl, lsl pc
    9150:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
    9154:	00044540 	andeq	r4, r4, r0, asr #10
    9158:	00601600 	rsbeq	r1, r0, r0, lsl #12
    915c:	005fda00 	subseq	sp, pc, r0, lsl #20
    9160:	19961b00 	ldmibne	r6, {r8, r9, fp, ip}
    9164:	bf010000 	svclt	0x00010000
    9168:	018c1504 	orreq	r1, ip, r4, lsl #10
    916c:	61990000 	orrsvs	r0, r9, r0
    9170:	61950000 	orrsvs	r0, r5, r0
    9174:	741c0000 	ldrvc	r0, [ip], #-0
    9178:	0100706d 	tsteq	r0, sp, rrx
    917c:	980c04c0 	stmdals	ip, {r6, r7, sl}
    9180:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    9184:	b8000061 	stmdalt	r0, {r0, r5, r6}
    9188:	00000061 	andeq	r0, r0, r1, rrx
    918c:	001c711d 	andseq	r7, ip, sp, lsl r1
    9190:	04a10100 	strteq	r0, [r1], #256	; 0x100
    9194:	00980111 	addseq	r0, r8, r1, lsl r1
	...
    91a0:	63510000 	cmpvs	r1, #0
    91a4:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    91a8:	1a000005 	bne	91c4 <_Min_Heap_Size+0x89c4>
    91ac:	0000137f 	andeq	r1, r0, pc, ror r3
    91b0:	3c04a101 	stfccd	f2, [r4], {1}
    91b4:	00000445 	andeq	r0, r0, r5, asr #8
    91b8:	0000638f 	andeq	r6, r0, pc, lsl #7
    91bc:	00006389 	andeq	r6, r0, r9, lsl #7
    91c0:	001bb51b 	andseq	fp, fp, fp, lsl r5
    91c4:	04a30100 	strteq	r0, [r3], #256	; 0x100
    91c8:	0000980c 	andeq	r9, r0, ip, lsl #16
    91cc:	0063bf00 	rsbeq	fp, r3, r0, lsl #30
    91d0:	0063bb00 	rsbeq	fp, r3, r0, lsl #22
    91d4:	1aa41e00 	bne	fe9109dc <_estack+0xde90f7a4>
    91d8:	a6010000 	strge	r0, [r1], -r0
    91dc:	00c71804 	sbceq	r1, r7, r4, lsl #16
    91e0:	03050000 	movweq	r0, #20480	; 0x5000
    91e4:	00000000 	andeq	r0, r0, r0
    91e8:	1b3c1f00 	blne	f10df0 <_Min_Heap_Size+0xf105f0>
    91ec:	7f010000 	svcvc	0x00010000
    91f0:	00010d04 	andeq	r0, r1, r4, lsl #26
    91f4:	00000000 	andeq	r0, r0, r0
    91f8:	fa000000 	blx	9200 <_Min_Heap_Size+0x8a00>
    91fc:	01000063 	tsteq	r0, r3, rrx
    9200:	000005a7 	andeq	r0, r0, r7, lsr #11
    9204:	00137f20 	andseq	r7, r3, r0, lsr #30
    9208:	047f0100 	ldrbteq	r0, [pc], #-256	; 9210 <_Min_Heap_Size+0x8a10>
    920c:	0004452e 	andeq	r4, r4, lr, lsr #10
    9210:	20500100 	subscs	r0, r0, r0, lsl #2
    9214:	00001cc9 	andeq	r1, r0, r9, asr #25
    9218:	3d047f01 	stccc	15, cr7, [r4, #-4]
    921c:	00000098 	muleq	r0, r8, r0
    9220:	f0205101 			; <UNDEFINED> instruction: 0xf0205101
    9224:	0100001b 	tsteq	r0, fp, lsl r0
    9228:	9852047f 	ldmdals	r2, {r0, r1, r2, r3, r4, r5, r6, sl}^
    922c:	01000000 	mrseq	r0, (UNDEF: 0)
    9230:	1cd41a52 	vldmiane	r4, {s3-s84}
    9234:	7f010000 	svcvc	0x00010000
    9238:	00986704 	addseq	r6, r8, r4, lsl #14
    923c:	643c0000 	ldrtvs	r0, [ip], #-0
    9240:	64320000 	ldrtvs	r0, [r2], #-0
    9244:	21000000 	mrscs	r0, (UNDEF: 0)
    9248:	00165d01 	andseq	r5, r6, r1, lsl #26
    924c:	04650100 	strbteq	r0, [r5], #-256	; 0xffffff00
    9250:	0098010a 	addseq	r0, r8, sl, lsl #2
	...
    925c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9260:	05dc0100 	ldrbeq	r0, [ip, #256]	; 0x100
    9264:	7f1a0000 	svcvc	0x001a0000
    9268:	01000013 	tsteq	r0, r3, lsl r0
    926c:	452e0465 	strmi	r0, [lr, #-1125]!	; 0xfffffb9b
    9270:	87000004 	strhi	r0, [r0, -r4]
    9274:	83000064 	movwhi	r0, #100	; 0x64
    9278:	00000064 	andeq	r0, r0, r4, rrx
    927c:	1cdf0121 	ldfnee	f0, [pc], {33}	; 0x21
    9280:	5a010000 	bpl	49288 <_Min_Heap_Size+0x48a88>
    9284:	bc011604 	stclt	6, cr1, [r1], {4}
    9288:	00000002 	andeq	r0, r0, r2
    928c:	00000000 	andeq	r0, r0, r0
    9290:	02000000 	andeq	r0, r0, #0
    9294:	1101007d 	tstne	r1, sp, ror r0
    9298:	1a000006 	bne	92b8 <_Min_Heap_Size+0x8ab8>
    929c:	0000137f 	andeq	r1, r0, pc, ror r3
    92a0:	3a045a01 	bcc	11faac <_Min_Heap_Size+0x11f2ac>
    92a4:	00000445 	andeq	r0, r0, r5, asr #8
    92a8:	000064ac 	andeq	r6, r0, ip, lsr #9
    92ac:	000064a8 	andeq	r6, r0, r8, lsr #9
    92b0:	19012100 	stmdbne	r1, {r8, sp}
    92b4:	0100001c 	tsteq	r0, ip, lsl r0
    92b8:	01130405 	tsteq	r3, r5, lsl #8
    92bc:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    92c8:	01007d02 	tsteq	r0, r2, lsl #26
    92cc:	0000066a 	andeq	r0, r0, sl, ror #12
    92d0:	00137f1a 	andseq	r7, r3, sl, lsl pc
    92d4:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    92d8:	00044541 	andeq	r4, r4, r1, asr #10
    92dc:	0064d500 	rsbeq	sp, r4, r0, lsl #10
    92e0:	0064cd00 	rsbeq	ip, r4, r0, lsl #26
    92e4:	1bfb2000 	blne	ffed12ec <_estack+0xdfed00b4>
    92e8:	05010000 	streq	r0, [r1, #-0]
    92ec:	032d6104 			; <UNDEFINED> instruction: 0x032d6104
    92f0:	51010000 	mrspl	r0, (UNDEF: 1)
    92f4:	0019961b 	andseq	r9, r9, fp, lsl r6
    92f8:	04070100 	streq	r0, [r7], #-256	; 0xffffff00
    92fc:	00018c15 	andeq	r8, r1, r5, lsl ip
    9300:	00650f00 	rsbeq	r0, r5, r0, lsl #30
    9304:	00650900 	rsbeq	r0, r5, r0, lsl #18
    9308:	01210000 			; <UNDEFINED> instruction: 0x01210000
    930c:	00001a81 	andeq	r1, r0, r1, lsl #21
    9310:	1303c701 	movwne	ip, #14081	; 0x3701
    9314:	00018c01 	andeq	r8, r1, r1, lsl #24
	...
    9320:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9324:	0006d801 	andeq	sp, r6, r1, lsl #16
    9328:	137f1a00 	cmnne	pc, #0, 20
    932c:	c7010000 	strgt	r0, [r1, -r0]
    9330:	04453f03 	strbeq	r3, [r5], #-3843	; 0xfffff0fd
    9334:	653e0000 	ldrvs	r0, [lr, #-0]!
    9338:	653a0000 	ldrvs	r0, [sl, #-0]!
    933c:	fb200000 	blx	809346 <_Min_Heap_Size+0x808b46>
    9340:	0100001b 	tsteq	r0, fp, lsl r0
    9344:	2d5f03c7 	ldclcs	3, cr0, [pc, #-796]	; 9030 <_Min_Heap_Size+0x8830>
    9348:	01000003 	tsteq	r0, r3
    934c:	1cf01a51 	vldmiane	r0!, {s3-s83}
    9350:	c7010000 	strgt	r0, [r1, -r0]
    9354:	06e47303 	strbteq	r7, [r4], r3, lsl #6
    9358:	65620000 	strbvs	r0, [r2, #-0]!
    935c:	655c0000 	ldrbvs	r0, [ip, #-0]
    9360:	961b0000 	ldrls	r0, [fp], -r0
    9364:	01000019 	tsteq	r0, r9, lsl r0
    9368:	8c1503ca 	ldchi	3, cr0, [r5], {202}	; 0xca
    936c:	94000001 	strls	r0, [r0], #-1
    9370:	8e000065 	cdphi	0, 0, cr0, cr0, cr5, {3}
    9374:	00000065 	andeq	r0, r0, r5, rrx
    9378:	06e40116 	usateq	r0, #4, r6, lsl #2
    937c:	45170000 	ldrmi	r0, [r7, #-0]
    9380:	00000004 	andeq	r0, r0, r4
    9384:	06d80414 			; <UNDEFINED> instruction: 0x06d80414
    9388:	01220000 			; <UNDEFINED> instruction: 0x01220000
    938c:	00001c34 	andeq	r1, r0, r4, lsr ip
    9390:	0602ea01 	streq	lr, [r2], -r1, lsl #20
    9394:	00000001 	andeq	r0, r0, r1
    9398:	00000000 	andeq	r0, r0, r0
    939c:	0065bf00 	rsbeq	fp, r5, r0, lsl #30
    93a0:	07e70100 	strbeq	r0, [r7, r0, lsl #2]!
    93a4:	7f1a0000 	svcvc	0x001a0000
    93a8:	01000013 	tsteq	r0, r3, lsl r0
    93ac:	452c02ea 	strmi	r0, [ip, #-746]!	; 0xfffffd16
    93b0:	05000004 	streq	r0, [r0, #-4]
    93b4:	f7000066 			; <UNDEFINED> instruction: 0xf7000066
    93b8:	1b000065 	blne	9554 <_Min_Heap_Size+0x8d54>
    93bc:	00001ab7 			; <UNDEFINED> instruction: 0x00001ab7
    93c0:	0c02ec01 	stceq	12, cr14, [r2], {1}
    93c4:	00000098 	muleq	r0, r8, r0
    93c8:	0000665f 	andeq	r6, r0, pc, asr r6
    93cc:	0000665d 	andeq	r6, r0, sp, asr r6
    93d0:	001cc31e 	andseq	ip, ip, lr, lsl r3
    93d4:	02ed0100 	rsceq	r0, sp, #0, 2
    93d8:	0000a411 	andeq	sl, r0, r1, lsl r4
    93dc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    93e0:	001cfa1b 	andseq	pc, ip, fp, lsl sl	; <UNPREDICTABLE>
    93e4:	02ee0100 	rsceq	r0, lr, #0, 2
    93e8:	0000980c 	andeq	r9, r0, ip, lsl #16
    93ec:	00667400 	rsbeq	r7, r6, r0, lsl #8
    93f0:	00667200 	rsbeq	r7, r6, r0, lsl #4
    93f4:	1d021b00 	vstrne	d1, [r2, #-0]
    93f8:	f1010000 	setend	le
    93fc:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    9400:	66890000 	strvs	r0, [r9], r0
    9404:	66870000 	strvs	r0, [r7], r0
    9408:	00230000 	eoreq	r0, r3, r0
    940c:	7a000000 	bvc	9414 <_Min_Heap_Size+0x8c14>
    9410:	24000007 	strcs	r0, [r0], #-7
    9414:	74025001 	strvc	r5, [r2], #-1
    9418:	00230000 	eoreq	r0, r3, r0
    941c:	8a000000 	bhi	9424 <_Min_Heap_Size+0x8c24>
    9420:	24000007 	strcs	r0, [r0], #-7
    9424:	74025001 	strvc	r5, [r2], #-1
    9428:	00230000 	eoreq	r0, r3, r0
    942c:	9a000000 	bls	9434 <_Min_Heap_Size+0x8c34>
    9430:	24000007 	strcs	r0, [r0], #-7
    9434:	74025001 	strvc	r5, [r2], #-1
    9438:	00230000 	eoreq	r0, r3, r0
    943c:	aa000000 	bge	9444 <_Min_Heap_Size+0x8c44>
    9440:	24000007 	strcs	r0, [r0], #-7
    9444:	74025001 	strvc	r5, [r2], #-1
    9448:	00230000 	eoreq	r0, r3, r0
    944c:	ba000000 	blt	9454 <_Min_Heap_Size+0x8c54>
    9450:	24000007 	strcs	r0, [r0], #-7
    9454:	74025001 	strvc	r5, [r2], #-1
    9458:	00230000 	eoreq	r0, r3, r0
    945c:	ca000000 	bgt	9464 <_Min_Heap_Size+0x8c64>
    9460:	24000007 	strcs	r0, [r0], #-7
    9464:	74025001 	strvc	r5, [r2], #-1
    9468:	00230000 	eoreq	r0, r3, r0
    946c:	da000000 	ble	9474 <_Min_Heap_Size+0x8c74>
    9470:	24000007 	strcs	r0, [r0], #-7
    9474:	74025001 	strvc	r5, [r2], #-1
    9478:	00250000 	eoreq	r0, r5, r0
    947c:	24000000 	strcs	r0, [r0], #-0
    9480:	74025001 	strvc	r5, [r2], #-1
    9484:	14000000 	strne	r0, [r0], #-0
    9488:	00048204 	andeq	r8, r4, r4, lsl #4
    948c:	16012600 	strne	r2, [r1], -r0, lsl #12
    9490:	0100001d 	tsteq	r0, sp, lsl r0
    9494:	01130262 	tsteq	r3, r2, ror #4
    9498:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    94a4:	0000669c 	muleq	r0, ip, r6
    94a8:	0008d101 	andeq	sp, r8, r1, lsl #2
    94ac:	137f1a00 	cmnne	pc, #0, 20
    94b0:	62010000 	andvs	r0, r1, #0
    94b4:	04453e02 	strbeq	r3, [r5], #-3586	; 0xfffff1fe
    94b8:	66c00000 	strbvs	r0, [r0], r0
    94bc:	66bc0000 	ldrtvs	r0, [ip], r0
    94c0:	dd1a0000 	ldcle	0, cr0, [sl, #-0]
    94c4:	0100001b 	tsteq	r0, fp, lsl r0
    94c8:	e8610262 	stmda	r1!, {r1, r5, r6, r9}^
    94cc:	e2000002 	and	r0, r0, #2
    94d0:	de000066 	cdple	0, 0, cr0, cr0, cr6, {3}
    94d4:	1a000066 	bne	9674 <_Min_Heap_Size+0x8e74>
    94d8:	0000142c 	andeq	r1, r0, ip, lsr #8
    94dc:	79026201 	stmdbvc	r2, {r0, r9, sp, lr}
    94e0:	00000098 	muleq	r0, r8, r0
    94e4:	00006707 	andeq	r6, r0, r7, lsl #14
    94e8:	00006703 	andeq	r6, r0, r3, lsl #14
    94ec:	00199627 	andseq	r9, r9, r7, lsr #12
    94f0:	02640100 	rsbeq	r0, r4, #0, 2
    94f4:	00018c15 	andeq	r8, r1, r5, lsl ip
    94f8:	071b0000 	ldreq	r0, [fp, -r0]
    94fc:	0100001d 	tsteq	r0, sp, lsl r0
    9500:	980c0265 	stmdals	ip, {r0, r2, r5, r6, r9}
    9504:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    9508:	25000067 	strcs	r0, [r0, #-103]	; 0xffffff99
    950c:	1b000067 	blne	96b0 <_Min_Heap_Size+0x8eb0>
    9510:	00001541 	andeq	r1, r0, r1, asr #10
    9514:	0c026601 	stceq	6, cr6, [r2], {1}
    9518:	00000098 	muleq	r0, r8, r0
    951c:	00006755 	andeq	r6, r0, r5, asr r7
    9520:	00006747 	andeq	r6, r0, r7, asr #14
    9524:	001ab71b 	andseq	fp, sl, fp, lsl r7
    9528:	02670100 	rsbeq	r0, r7, #0, 2
    952c:	0000980c 	andeq	r9, r0, ip, lsl #16
    9530:	0067ae00 	rsbeq	sl, r7, r0, lsl #28
    9534:	0067aa00 	rsbeq	sl, r7, r0, lsl #20
    9538:	1d021b00 	vstrne	d1, [r2, #-0]
    953c:	6a010000 	bvs	49544 <_Min_Heap_Size+0x48d44>
    9540:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    9544:	67d00000 	ldrbvs	r0, [r0, r0]
    9548:	67cc0000 	strbvs	r0, [ip, r0]
    954c:	00280000 	eoreq	r0, r8, r0
    9550:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    9554:	2800000d 	stmdacs	r0, {r0, r2, r3}
    9558:	00000000 	andeq	r0, r0, r0
    955c:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    9560:	00000029 	andeq	r0, r0, r9, lsr #32
    9564:	00090600 	andeq	r0, r9, r0, lsl #12
    9568:	50012400 	andpl	r2, r1, r0, lsl #8
    956c:	00007402 	andeq	r7, r0, r2, lsl #8
    9570:	cc012100 	stfgts	f2, [r1], {-0}
    9574:	01000010 	tsteq	r0, r0, lsl r0
    9578:	01130244 	tsteq	r3, r4, asr #4
    957c:	0000018c 	andeq	r0, r0, ip, lsl #3
    9580:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
    9584:	08001502 	stmdaeq	r0, {r1, r8, sl, ip}
    9588:	01007d02 	tsteq	r0, r2, lsl #26
    958c:	00000906 	andeq	r0, r0, r6, lsl #18
    9590:	00137f1a 	andseq	r7, r3, sl, lsl pc
    9594:	02440100 	subeq	r0, r4, #0, 2
    9598:	00044537 	andeq	r4, r4, r7, lsr r5
    959c:	0067f600 	rsbeq	pc, r7, r0, lsl #12
    95a0:	0067ee00 	rsbeq	lr, r7, r0, lsl #28
    95a4:	01260000 			; <UNDEFINED> instruction: 0x01260000
    95a8:	00001308 	andeq	r1, r0, r8, lsl #6
    95ac:	13020101 	movwne	r0, #8449	; 0x2101
    95b0:	00018c01 	andeq	r8, r1, r1, lsl #24
    95b4:	00144800 	andseq	r4, r4, r0, lsl #16
    95b8:	0014dc08 	andseq	sp, r4, r8, lsl #24
    95bc:	00683008 	rsbeq	r3, r8, r8
    95c0:	09780100 	ldmdbeq	r8!, {r8}^
    95c4:	7f1a0000 	svcvc	0x001a0000
    95c8:	01000013 	tsteq	r0, r3, lsl r0
    95cc:	45340201 	ldrmi	r0, [r4, #-513]!	; 0xfffffdff
    95d0:	54000004 	strpl	r0, [r0], #-4
    95d4:	50000068 	andpl	r0, r0, r8, rrx
    95d8:	1b000068 	blne	9780 <_Min_Heap_Size+0x8f80>
    95dc:	00001d02 	andeq	r1, r0, r2, lsl #26
    95e0:	17020401 	strne	r0, [r2, -r1, lsl #8]
    95e4:	000007e7 	andeq	r0, r0, r7, ror #15
    95e8:	00006874 	andeq	r6, r0, r4, ror r8
    95ec:	00006872 	andeq	r6, r0, r2, ror r8
    95f0:	0015411b 	andseq	r4, r5, fp, lsl r1
    95f4:	02060100 	andeq	r0, r6, #0, 2
    95f8:	0000980c 	andeq	r9, r0, ip, lsl #16
    95fc:	00689100 	rsbeq	r9, r8, r0, lsl #2
    9600:	00688700 	rsbeq	r8, r8, r0, lsl #14
    9604:	14522800 	ldrbne	r2, [r2], #-2048	; 0xfffff800
    9608:	0db90800 	ldceq	8, cr0, [r9]
    960c:	a6280000 	strtge	r0, [r8], -r0
    9610:	b9080014 	stmdblt	r8, {r2, r4}
    9614:	0000000d 	andeq	r0, r0, sp
    9618:	11a60126 			; <UNDEFINED> instruction: 0x11a60126
    961c:	c3010000 	movwgt	r0, #4096	; 0x1000
    9620:	8c011301 	stchi	3, cr1, [r1], {1}
    9624:	00000001 	andeq	r0, r0, r1
    9628:	00000000 	andeq	r0, r0, r0
    962c:	d0000000 	andle	r0, r0, r0
    9630:	01000068 	tsteq	r0, r8, rrx
    9634:	00000a57 	andeq	r0, r0, r7, asr sl
    9638:	00137f1a 	andseq	r7, r3, sl, lsl pc
    963c:	01c30100 	biceq	r0, r3, r0, lsl #2
    9640:	00044537 	andeq	r4, r4, r7, lsr r5
    9644:	0068f800 	rsbeq	pc, r8, r0, lsl #16
    9648:	0068f000 	rsbeq	pc, r8, r0
    964c:	1cc91a00 	vstmiane	r9, {s3-s2}
    9650:	c3010000 	movwgt	r0, #4096	; 0x1000
    9654:	00984601 	addseq	r4, r8, r1, lsl #12
    9658:	69340000 	ldmdbvs	r4!, {}	; <UNPREDICTABLE>
    965c:	692c0000 	stmdbvs	ip!, {}	; <UNPREDICTABLE>
    9660:	f01a0000 			; <UNDEFINED> instruction: 0xf01a0000
    9664:	0100001b 	tsteq	r0, fp, lsl r0
    9668:	985b01c3 	ldmdals	fp, {r0, r1, r6, r7, r8}^
    966c:	6c000000 	stcvs	0, cr0, [r0], {-0}
    9670:	68000069 	stmdavs	r0, {r0, r3, r5, r6}
    9674:	1a000069 	bne	9820 <_Min_Heap_Size+0x9020>
    9678:	00001cd4 	ldrdeq	r1, [r0], -r4
    967c:	7001c301 	andvc	ip, r1, r1, lsl #6
    9680:	00000098 	muleq	r0, r8, r0
    9684:	0000698e 	andeq	r6, r0, lr, lsl #19
    9688:	0000698a 	andeq	r6, r0, sl, lsl #19
    968c:	0019961b 	andseq	r9, r9, fp, lsl r6
    9690:	01c50100 	biceq	r0, r5, r0, lsl #2
    9694:	00018c15 	andeq	r8, r1, r5, lsl ip
    9698:	0069b200 	rsbeq	fp, r9, r0, lsl #4
    969c:	0069ac00 	rsbeq	sl, r9, r0, lsl #24
    96a0:	1d021b00 	vstrne	d1, [r2, #-0]
    96a4:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    96a8:	07e71701 	strbeq	r1, [r7, r1, lsl #14]!
    96ac:	69e00000 	stmibvs	r0!, {}^	; <UNPREDICTABLE>
    96b0:	69de0000 	ldmibvs	lr, {}^	; <UNPREDICTABLE>
    96b4:	002a0000 	eoreq	r0, sl, r0
    96b8:	c7000000 	strgt	r0, [r0, -r0]
    96bc:	3400000d 	strcc	r0, [r0], #-13
    96c0:	2400000a 	strcs	r0, [r0], #-10
    96c4:	03055001 	movweq	r5, #20481	; 0x5001
    96c8:	00000000 	andeq	r0, r0, r0
    96cc:	03510124 	cmpeq	r1, #36, 2
    96d0:	0001cb0a 	andeq	ip, r1, sl, lsl #22
    96d4:	00000029 	andeq	r0, r0, r9, lsr #32
    96d8:	00054900 	andeq	r4, r5, r0, lsl #18
    96dc:	50012400 	andpl	r2, r1, r0, lsl #8
    96e0:	24007402 	strcs	r7, [r0], #-1026	; 0xfffffbfe
    96e4:	76025101 	strvc	r5, [r2], -r1, lsl #2
    96e8:	52012400 	andpl	r2, r1, #0, 8
    96ec:	24007702 	strcs	r7, [r0], #-1794	; 0xfffff8fe
    96f0:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    96f4:	26000000 	strcs	r0, [r0], -r0
    96f8:	001ad601 	andseq	sp, sl, r1, lsl #12
    96fc:	01970100 	orrseq	r0, r7, r0, lsl #2
    9700:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    970c:	69f30000 	ldmibvs	r3!, {}^	; <UNPREDICTABLE>
    9710:	21010000 	mrscs	r0, (UNDEF: 1)
    9714:	1a00000b 	bne	9748 <_Min_Heap_Size+0x8f48>
    9718:	0000137f 	andeq	r1, r0, pc, ror r3
    971c:	34019701 	strcc	r9, [r1], #-1793	; 0xfffff8ff
    9720:	00000445 	andeq	r0, r0, r5, asr #8
    9724:	00006a1b 	andeq	r6, r0, fp, lsl sl
    9728:	00006a13 	andeq	r6, r0, r3, lsl sl
    972c:	001cc91a 	andseq	ip, ip, sl, lsl r9
    9730:	01970100 	orrseq	r0, r7, r0, lsl #2
    9734:	00009843 	andeq	r9, r0, r3, asr #16
    9738:	006a5700 	rsbeq	r5, sl, r0, lsl #14
    973c:	006a4f00 	rsbeq	r4, sl, r0, lsl #30
    9740:	1bf01a00 	blne	ffc0ff48 <_estack+0xdfc0ed10>
    9744:	97010000 	strls	r0, [r1, -r0]
    9748:	00985801 	addseq	r5, r8, r1, lsl #16
    974c:	6a8f0000 	bvs	fe3c9754 <_estack+0xde3c851c>
    9750:	6a8b0000 	bvs	fe2c9758 <_estack+0xde2c8520>
    9754:	d41a0000 	ldrle	r0, [sl], #-0
    9758:	0100001c 	tsteq	r0, ip, lsl r0
    975c:	986d0197 	stmdals	sp!, {r0, r1, r2, r4, r7, r8}^
    9760:	b1000000 	mrslt	r0, (UNDEF: 0)
    9764:	ad00006a 	stcge	0, cr0, [r0, #-424]	; 0xfffffe58
    9768:	1b00006a 	blne	9918 <_Min_Heap_Size+0x9118>
    976c:	00001996 	muleq	r0, r6, r9
    9770:	15019901 	strne	r9, [r1, #-2305]	; 0xfffff6ff
    9774:	0000018c 	andeq	r0, r0, ip, lsl #3
    9778:	00006ad5 	ldrdeq	r6, [r0], -r5
    977c:	00006acf 	andeq	r6, r0, pc, asr #21
    9780:	0000002a 	andeq	r0, r0, sl, lsr #32
    9784:	000dc700 	andeq	ip, sp, r0, lsl #14
    9788:	000afe00 	andeq	pc, sl, r0, lsl #28
    978c:	50012400 	andpl	r2, r1, r0, lsl #8
    9790:	00000305 	andeq	r0, r0, r5, lsl #6
    9794:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9798:	9c0a0351 	stcls	3, cr0, [sl], {81}	; 0x51
    979c:	00290001 	eoreq	r0, r9, r1
    97a0:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    97a4:	24000005 	strcs	r0, [r0], #-5
    97a8:	74025001 	strvc	r5, [r2], #-1
    97ac:	51012400 	tstpl	r1, r0, lsl #8
    97b0:	24007602 	strcs	r7, [r0], #-1538	; 0xfffff9fe
    97b4:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    97b8:	53012400 	movwpl	r2, #5120	; 0x1400
    97bc:	00007502 	andeq	r7, r0, r2, lsl #10
    97c0:	fe012600 	cdp2	6, 0, cr2, cr1, cr0, {0}
    97c4:	0100001a 	tsteq	r0, sl, lsl r0
    97c8:	01130135 	tsteq	r3, r5, lsr r1
    97cc:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    97d8:	00006b01 	andeq	r6, r0, r1, lsl #22
    97dc:	000b9a01 	andeq	r9, fp, r1, lsl #20
    97e0:	137f1a00 	cmnne	pc, #0, 20
    97e4:	35010000 	strcc	r0, [r1, #-0]
    97e8:	04453501 	strbeq	r3, [r5], #-1281	; 0xfffffaff
    97ec:	6b350000 	blvs	d497f4 <_Min_Heap_Size+0xd48ff4>
    97f0:	6b2d0000 	blvs	b497f8 <_Min_Heap_Size+0xb48ff8>
    97f4:	021b0000 	andseq	r0, fp, #0
    97f8:	0100001d 	tsteq	r0, sp, lsl r0
    97fc:	e7170137 			; <UNDEFINED> instruction: 0xe7170137
    9800:	6e000007 	cdpvs	0, 0, cr0, cr0, cr7, {0}
    9804:	6c00006b 	stcvs	0, cr0, [r0], {107}	; 0x6b
    9808:	2a00006b 	bcs	99bc <_Min_Heap_Size+0x91bc>
    980c:	00000000 	andeq	r0, r0, r0
    9810:	00000dc7 	andeq	r0, r0, r7, asr #27
    9814:	00000b89 	andeq	r0, r0, r9, lsl #23
    9818:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    981c:	00000003 	andeq	r0, r0, r3
    9820:	51012400 	tstpl	r1, r0, lsl #8
    9824:	01470a03 	cmpeq	r7, r3, lsl #20
    9828:	00002900 	andeq	r2, r0, r0, lsl #18
    982c:	04ec0000 	strbteq	r0, [ip], #0
    9830:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9834:	00750250 	rsbseq	r0, r5, r0, asr r2
    9838:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    983c:	00001a74 	andeq	r1, r0, r4, ror sl
    9840:	0113aa01 	tsteq	r3, r1, lsl #20
    9844:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9850:	00006b81 	andeq	r6, r0, r1, lsl #23
    9854:	000db901 	andeq	fp, sp, r1, lsl #18
    9858:	137f2c00 	cmnne	pc, #0, 24
    985c:	aa010000 	bge	49864 <_Min_Heap_Size+0x49064>
    9860:	00044533 	andeq	r4, r4, r3, lsr r5
    9864:	006ba500 	rsbeq	sl, fp, r0, lsl #10
    9868:	006ba100 	rsbeq	sl, fp, r0, lsl #2
    986c:	6d742d00 	ldclvs	13, cr2, [r4, #-0]
    9870:	ac010070 	stcge	0, cr0, [r1], {112}	; 0x70
    9874:	0000980c 	andeq	r9, r0, ip, lsl #16
    9878:	006bd500 	rsbeq	sp, fp, r0, lsl #10
    987c:	006bc300 	rsbeq	ip, fp, r0, lsl #6
    9880:	15412e00 	strbne	r2, [r1, #-3584]	; 0xfffff200
    9884:	ad010000 	stcge	0, cr0, [r1, #-0]
    9888:	0000980c 	andeq	r9, r0, ip, lsl #16
    988c:	006c4d00 	rsbeq	r4, ip, r0, lsl #26
    9890:	006c4300 	rsbeq	r4, ip, r0, lsl #6
    9894:	1d022e00 	stcne	14, cr2, [r2, #-0]
    9898:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    989c:	0007e717 	andeq	lr, r7, r7, lsl r7
    98a0:	006c8e00 	rsbeq	r8, ip, r0, lsl #28
    98a4:	006c8c00 	rsbeq	r8, ip, r0, lsl #24
    98a8:	00002800 	andeq	r2, r0, r0, lsl #16
    98ac:	0db90000 	ldceq	0, cr0, [r9]
    98b0:	002a0000 	eoreq	r0, sl, r0
    98b4:	c7000000 	strgt	r0, [r0, -r0]
    98b8:	2f00000d 	svccs	0x0000000d
    98bc:	2400000c 	strcs	r0, [r0], #-12
    98c0:	03055001 	movweq	r5, #20481	; 0x5001
    98c4:	00000000 	andeq	r0, r0, r0
    98c8:	02510124 	subseq	r0, r1, #36, 2
    98cc:	2800b708 	stmdacs	r0, {r3, r8, r9, sl, ip, sp, pc}
    98d0:	00000000 	andeq	r0, r0, r0
    98d4:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    98d8:	0000002a 	andeq	r0, r0, sl, lsr #32
    98dc:	000dc700 	andeq	ip, sp, r0, lsl #14
    98e0:	000c5500 	andeq	r5, ip, r0, lsl #10
    98e4:	50012400 	andpl	r2, r1, r0, lsl #8
    98e8:	00000305 	andeq	r0, r0, r5, lsl #6
    98ec:	01240000 			; <UNDEFINED> instruction: 0x01240000
    98f0:	b8080251 	stmdalt	r8, {r0, r4, r6, r9}
    98f4:	00002a00 	andeq	r2, r0, r0, lsl #20
    98f8:	0dc70000 	stcleq	0, cr0, [r7]
    98fc:	0c720000 	ldcleq	0, cr0, [r2], #-0
    9900:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9904:	00030550 	andeq	r0, r3, r0, asr r5
    9908:	24000000 	strcs	r0, [r0], #-0
    990c:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9910:	002a00b9 	strhteq	r0, [sl], -r9
    9914:	c7000000 	strgt	r0, [r0, -r0]
    9918:	8f00000d 	svchi	0x0000000d
    991c:	2400000c 	strcs	r0, [r0], #-12
    9920:	03055001 	movweq	r5, #20481	; 0x5001
    9924:	00000000 	andeq	r0, r0, r0
    9928:	02510124 	subseq	r0, r1, #36, 2
    992c:	2a00ba08 	bcs	38154 <_Min_Heap_Size+0x37954>
    9930:	00000000 	andeq	r0, r0, r0
    9934:	00000dc7 	andeq	r0, r0, r7, asr #27
    9938:	00000cac 	andeq	r0, r0, ip, lsr #25
    993c:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9940:	00000003 	andeq	r0, r0, r3
    9944:	51012400 	tstpl	r1, r0, lsl #8
    9948:	00bb0802 	adcseq	r0, fp, r2, lsl #16
    994c:	0000002a 	andeq	r0, r0, sl, lsr #32
    9950:	000dc700 	andeq	ip, sp, r0, lsl #14
    9954:	000cc900 	andeq	ip, ip, r0, lsl #18
    9958:	50012400 	andpl	r2, r1, r0, lsl #8
    995c:	00000305 	andeq	r0, r0, r5, lsl #6
    9960:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9964:	bc080251 	sfmlt	f0, 4, [r8], {81}	; 0x51
    9968:	00002a00 	andeq	r2, r0, r0, lsl #20
    996c:	0dc70000 	stcleq	0, cr0, [r7]
    9970:	0ce60000 	stcleq	0, cr0, [r6]
    9974:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9978:	00030550 	andeq	r0, r3, r0, asr r5
    997c:	24000000 	strcs	r0, [r0], #-0
    9980:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9984:	002a00bd 	strhteq	r0, [sl], -sp
    9988:	c7000000 	strgt	r0, [r0, -r0]
    998c:	0300000d 	movweq	r0, #13
    9990:	2400000d 	strcs	r0, [r0], #-13
    9994:	03055001 	movweq	r5, #20481	; 0x5001
    9998:	00000000 	andeq	r0, r0, r0
    999c:	02510124 	subseq	r0, r1, #36, 2
    99a0:	2a00be08 	bcs	391c8 <_Min_Heap_Size+0x389c8>
    99a4:	00000000 	andeq	r0, r0, r0
    99a8:	00000dc7 	andeq	r0, r0, r7, asr #27
    99ac:	00000d20 	andeq	r0, r0, r0, lsr #26
    99b0:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    99b4:	00000003 	andeq	r0, r0, r3
    99b8:	51012400 	tstpl	r1, r0, lsl #8
    99bc:	00bf0802 	adcseq	r0, pc, r2, lsl #16
    99c0:	0000002a 	andeq	r0, r0, sl, lsr #32
    99c4:	000dc700 	andeq	ip, sp, r0, lsl #14
    99c8:	000d3d00 	andeq	r3, sp, r0, lsl #26
    99cc:	50012400 	andpl	r2, r1, r0, lsl #8
    99d0:	00000305 	andeq	r0, r0, r5, lsl #6
    99d4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    99d8:	c0080251 	andgt	r0, r8, r1, asr r2
    99dc:	00002a00 	andeq	r2, r0, r0, lsl #20
    99e0:	0dc70000 	stcleq	0, cr0, [r7]
    99e4:	0d5a0000 	ldcleq	0, cr0, [sl, #-0]
    99e8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    99ec:	00030550 	andeq	r0, r3, r0, asr r5
    99f0:	24000000 	strcs	r0, [r0], #-0
    99f4:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    99f8:	002a00c5 	eoreq	r0, sl, r5, asr #1
    99fc:	c7000000 	strgt	r0, [r0, -r0]
    9a00:	7700000d 	strvc	r0, [r0, -sp]
    9a04:	2400000d 	strcs	r0, [r0], #-13
    9a08:	03055001 	movweq	r5, #20481	; 0x5001
    9a0c:	00000000 	andeq	r0, r0, r0
    9a10:	02510124 	subseq	r0, r1, #36, 2
    9a14:	2a00c608 	bcs	3b23c <_Min_Heap_Size+0x3aa3c>
    9a18:	00000000 	andeq	r0, r0, r0
    9a1c:	00000dc7 	andeq	r0, r0, r7, asr #27
    9a20:	00000d94 	muleq	r0, r4, sp
    9a24:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9a28:	00000003 	andeq	r0, r0, r3
    9a2c:	51012400 	tstpl	r1, r0, lsl #8
    9a30:	00c70802 	sbceq	r0, r7, r2, lsl #16
    9a34:	0000002a 	andeq	r0, r0, sl, lsr #32
    9a38:	00048e00 	andeq	r8, r4, r0, lsl #28
    9a3c:	000da800 	andeq	sl, sp, r0, lsl #16
    9a40:	50012400 	andpl	r2, r1, r0, lsl #8
    9a44:	00007402 	andeq	r7, r0, r2, lsl #8
    9a48:	00000029 	andeq	r0, r0, r9, lsr #32
    9a4c:	0004ec00 	andeq	lr, r4, r0, lsl #24
    9a50:	50012400 	andpl	r2, r1, r0, lsl #8
    9a54:	00007402 	andeq	r7, r0, r2, lsl #8
    9a58:	01012f00 	tsteq	r1, r0, lsl #30
    9a5c:	0000139b 	muleq	r0, fp, r3
    9a60:	0000139b 	muleq	r0, fp, r3
    9a64:	300aea09 	andcc	lr, sl, r9, lsl #20
    9a68:	04b80101 	ldrteq	r0, [r8], #257	; 0x101
    9a6c:	04b80000 	ldrteq	r0, [r8], #0
    9a70:	e60a0000 	str	r0, [sl], -r0
    9a74:	24000801 	strcs	r0, [r0], #-2049	; 0xfffff7ff
    9a78:	02000014 	andeq	r0, r0, #20
    9a7c:	00132e00 	andseq	r2, r3, r0, lsl #28
    9a80:	d7010400 	strle	r0, [r1, -r0, lsl #8]
    9a84:	0c000005 	stceq	0, cr0, [r0], {5}
    9a88:	00001d40 	andeq	r1, r0, r0, asr #26
    9a8c:	00000420 	andeq	r0, r0, r0, lsr #8
    9a90:	00000500 	andeq	r0, r0, r0, lsl #10
	...
    9a9c:	000078df 	ldrdeq	r7, [r0], -pc	; <UNPREDICTABLE>
    9aa0:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    9aa4:	04000002 	streq	r0, [r0], #-2
    9aa8:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    9aac:	e0030000 	and	r0, r3, r0
    9ab0:	7200000b 	andvc	r0, r0, #11
    9ab4:	000c0f03 	andeq	r0, ip, r3, lsl #30
    9ab8:	6f037400 	svcvs	0x00037400
    9abc:	7500000c 	strvc	r0, [r0, #-12]
    9ac0:	000b1603 	andeq	r1, fp, r3, lsl #12
    9ac4:	c1037600 	tstgt	r3, r0, lsl #12
    9ac8:	7b00000c 	blvc	9b00 <_Min_Heap_Size+0x9300>
    9acc:	000e3c03 	andeq	r3, lr, r3, lsl #24
    9ad0:	1a037c00 	bne	e8ad8 <_Min_Heap_Size+0xe82d8>
    9ad4:	7e00000f 	cdpvc	0, 0, cr0, cr0, cr15, {0}
    9ad8:	000a8803 	andeq	r8, sl, r3, lsl #16
    9adc:	f4047f00 			; <UNDEFINED> instruction: 0xf4047f00
    9ae0:	0000000b 	andeq	r0, r0, fp
    9ae4:	000de004 	andeq	lr, sp, r4
    9ae8:	25040100 	strcs	r0, [r4, #-256]	; 0xffffff00
    9aec:	0200000c 	andeq	r0, r0, #12
    9af0:	00098304 	andeq	r8, r9, r4, lsl #6
    9af4:	ed040300 	stc	3, cr0, [r4, #-0]
    9af8:	04000009 	streq	r0, [r0], #-9
    9afc:	000e6f04 	andeq	r6, lr, r4, lsl #30
    9b00:	0d040500 	cfstr32eq	mvfx0, [r4, #-0]
    9b04:	0600000e 	streq	r0, [r0], -lr
    9b08:	000b8004 	andeq	r8, fp, r4
    9b0c:	91040700 	tstls	r4, r0, lsl #14
    9b10:	08000009 	stmdaeq	r0, {r0, r3}
    9b14:	000f0f04 	andeq	r0, pc, r4, lsl #30
    9b18:	fc040900 	stc2	9, cr0, [r4], {-0}	; <UNPREDICTABLE>
    9b1c:	0a00000c 	beq	9b54 <_Min_Heap_Size+0x9354>
    9b20:	000d5804 	andeq	r5, sp, r4, lsl #16
    9b24:	22040b00 	andcs	r0, r4, #0, 22
    9b28:	0c00000d 	stceq	0, cr0, [r0], {13}
    9b2c:	000ab204 	andeq	fp, sl, r4, lsl #4
    9b30:	78040d00 	stmdavc	r4, {r8, sl, fp}
    9b34:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    9b38:	000e1804 	andeq	r1, lr, r4, lsl #16
    9b3c:	98040f00 	stmdals	r4, {r8, r9, sl, fp}
    9b40:	1000000b 	andne	r0, r0, fp
    9b44:	00099c04 	andeq	r9, r9, r4, lsl #24
    9b48:	d7041100 	strle	r1, [r4, -r0, lsl #2]
    9b4c:	1200000d 	andne	r0, r0, #13
    9b50:	000b8b04 	andeq	r8, fp, r4, lsl #22
    9b54:	34041300 	strcc	r1, [r4], #-768	; 0xfffffd00
    9b58:	1400000b 	strne	r0, [r0], #-11
    9b5c:	000edd04 	andeq	sp, lr, r4, lsl #26
    9b60:	35041500 	strcc	r1, [r4, #-1280]	; 0xfffffb00
    9b64:	1600000c 	strne	r0, [r0], -ip
    9b68:	000eeb04 	andeq	lr, lr, r4, lsl #22
    9b6c:	88041700 	stmdahi	r4, {r8, r9, sl, ip}
    9b70:	1800000c 	stmdane	r0, {r2, r3}
    9b74:	000e9c04 	andeq	r9, lr, r4, lsl #24
    9b78:	70041900 	andvc	r1, r4, r0, lsl #18
    9b7c:	1a00000a 	bne	9bac <_Min_Heap_Size+0x93ac>
    9b80:	000b7304 	andeq	r7, fp, r4, lsl #6
    9b84:	f8041b00 			; <UNDEFINED> instruction: 0xf8041b00
    9b88:	1c000009 	stcne	0, cr0, [r0], {9}
    9b8c:	000d9504 	andeq	r9, sp, r4, lsl #10
    9b90:	42041d00 	andmi	r1, r4, #0, 26
    9b94:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    9b98:	000b6604 	andeq	r6, fp, r4, lsl #12
    9b9c:	e6041f00 	str	r1, [r4], -r0, lsl #30
    9ba0:	2000000a 	andcs	r0, r0, sl
    9ba4:	000d1504 	andeq	r1, sp, r4, lsl #10
    9ba8:	5a042100 	bpl	111fb0 <_Min_Heap_Size+0x1117b0>
    9bac:	2200000c 	andcs	r0, r0, #12
    9bb0:	000cb704 	andeq	fp, ip, r4, lsl #14
    9bb4:	2d042300 	stccs	3, cr2, [r4, #-0]
    9bb8:	2400000a 	strcs	r0, [r0], #-10
    9bbc:	000d9f04 	andeq	r9, sp, r4, lsl #30
    9bc0:	4c042500 	cfstr32mi	mvfx2, [r4], {-0}
    9bc4:	2600000b 	strcs	r0, [r0], -fp
    9bc8:	000a9504 	andeq	r9, sl, r4, lsl #10
    9bcc:	86042700 	strhi	r2, [r4], -r0, lsl #14
    9bd0:	2800000d 	stmdacs	r0, {r0, r2, r3}
    9bd4:	000d6a04 	andeq	r6, sp, r4, lsl #20
    9bd8:	eb042900 	bl	113fe0 <_Min_Heap_Size+0x1137e0>
    9bdc:	2a00000c 	bcs	9c14 <_Min_Heap_Size+0x9414>
    9be0:	000a3704 	andeq	r3, sl, r4, lsl #14
    9be4:	ae042b00 	vmlage.f64	d2, d4, d0
    9be8:	2c000009 	stccs	0, cr0, [r0], {9}
    9bec:	000baa04 	andeq	sl, fp, r4, lsl #20
    9bf0:	f8042d00 			; <UNDEFINED> instruction: 0xf8042d00
    9bf4:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    9bf8:	000f3904 	andeq	r3, pc, r4, lsl #18
    9bfc:	f0042f00 			; <UNDEFINED> instruction: 0xf0042f00
    9c00:	3000000d 	andcc	r0, r0, sp
    9c04:	000f0504 	andeq	r0, pc, r4, lsl #10
    9c08:	0c043100 	stfeqs	f3, [r4], {-0}
    9c0c:	3200000b 	andcc	r0, r0, #11
    9c10:	0009e304 	andeq	lr, r9, r4, lsl #6
    9c14:	d6043300 	strle	r3, [r4], -r0, lsl #6
    9c18:	3400000c 	strcc	r0, [r0], #-12
    9c1c:	000c7d04 	andeq	r7, ip, r4, lsl #26
    9c20:	07043500 	streq	r3, [r4, -r0, lsl #10]
    9c24:	3600000d 	strcc	r0, [r0], -sp
    9c28:	000c9b04 	andeq	r9, ip, r4, lsl #22
    9c2c:	43043700 	movwmi	r3, #18176	; 0x4700
    9c30:	3800000c 	stmdacc	r0, {r2, r3}
    9c34:	0009d104 	andeq	sp, r9, r4, lsl #2
    9c38:	4b043900 	blmi	118040 <_Min_Heap_Size+0x117840>
    9c3c:	3a00000f 	bcc	9c80 <_Min_Heap_Size+0x9480>
    9c40:	000d3404 	andeq	r3, sp, r4, lsl #8
    9c44:	c4043b00 	strgt	r3, [r4], #-2816	; 0xfffff500
    9c48:	3c00000a 	stccc	0, cr0, [r0], {10}
    9c4c:	000d4604 	andeq	r4, sp, r4, lsl #12
    9c50:	02043f00 	andeq	r3, r4, #0, 30
    9c54:	4000000a 	andmi	r0, r0, sl
    9c58:	000dc904 	andeq	ip, sp, r4, lsl #18
    9c5c:	fe044100 	cdp2	1, 0, cr4, cr4, cr0, {0}
    9c60:	4200000a 	andmi	r0, r0, #10
    9c64:	000bd404 	andeq	sp, fp, r4, lsl #8
    9c68:	5e044300 	cdppl	3, 0, cr4, cr4, cr0, {0}
    9c6c:	4400000a 	strmi	r0, [r0], #-10
    9c70:	000e2a04 	andeq	r2, lr, r4, lsl #20
    9c74:	c2044500 	andgt	r4, r4, #0, 10
    9c78:	4600000b 	strmi	r0, [r0], -fp
    9c7c:	000a1004 	andeq	r1, sl, r4
    9c80:	4e044700 	cdpmi	7, 0, cr4, cr4, cr0, {0}
    9c84:	4800000e 	stmdami	r0, {r1, r2, r3}
    9c88:	000d7904 	andeq	r7, sp, r4, lsl #18
    9c8c:	c3044900 	movwgt	r4, #18688	; 0x4900
    9c90:	4a00000e 	bmi	9cd0 <_Min_Heap_Size+0x94d0>
    9c94:	000f2604 	andeq	r2, pc, r4, lsl #12
    9c98:	fe044b00 	vseleq.f64	d4, d4, d0
    9c9c:	4c00000b 	stcmi	0, cr0, [r0], {11}
    9ca0:	000ca504 	andeq	sl, ip, r4, lsl #10
    9ca4:	c0044d00 	andgt	r4, r4, r0, lsl #26
    9ca8:	5000000d 	andpl	r0, r0, sp
    9cac:	000ccd04 	andeq	ip, ip, r4, lsl #26
    9cb0:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    9cb4:	05c50601 	strbeq	r0, [r5, #1537]	; 0x601
    9cb8:	c0060000 	andgt	r0, r6, r0
    9cbc:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    9cc0:	0029039b 	mlaeq	r9, fp, r3, r0
    9cc4:	66060000 	strvs	r0, [r6], -r0
    9cc8:	05000000 	streq	r0, [r0, #-0]
    9ccc:	025b182b 	subseq	r1, fp, #2818048	; 0x2b0000
    9cd0:	01050000 	mrseq	r0, (UNDEF: 5)
    9cd4:	0005c308 	andeq	ip, r5, r8, lsl #6
    9cd8:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    9cdc:	000003fa 	strdeq	r0, [r0], -sl
    9ce0:	00075c06 	andeq	r5, r7, r6, lsl #24
    9ce4:	19390500 	ldmdbne	r9!, {r8, sl}
    9ce8:	00000275 	andeq	r0, r0, r5, ror r2
    9cec:	f6070205 			; <UNDEFINED> instruction: 0xf6070205
    9cf0:	06000007 	streq	r0, [r0], -r7
    9cf4:	00001f45 	andeq	r1, r0, r5, asr #30
    9cf8:	88184d05 	ldmdahi	r8, {r0, r2, r8, sl, fp, lr}
    9cfc:	05000002 	streq	r0, [r0, #-2]
    9d00:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    9d04:	c2060000 	andgt	r0, r6, #0
    9d08:	05000002 	streq	r0, [r0, #-2]
    9d0c:	029b194f 	addseq	r1, fp, #1294336	; 0x13c000
    9d10:	04050000 	streq	r0, [r5], #-0
    9d14:	0000b307 	andeq	fp, r0, r7, lsl #6
    9d18:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    9d1c:	000002e7 	andeq	r0, r0, r7, ror #5
    9d20:	ae070805 	cdpge	8, 0, cr0, cr7, cr5, {0}
    9d24:	07000000 	streq	r0, [r0, -r0]
    9d28:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    9d2c:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    9d30:	0000b807 	andeq	fp, r0, r7, lsl #16
    9d34:	00680600 	rsbeq	r0, r8, r0, lsl #12
    9d38:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    9d3c:	00024f13 	andeq	r4, r2, r3, lsl pc
    9d40:	02be0800 	adcseq	r0, lr, #0, 16
    9d44:	5e060000 	cdppl	0, 0, cr0, cr6, cr0, {0}
    9d48:	06000007 	streq	r0, [r0], -r7
    9d4c:	02691424 	rsbeq	r1, r9, #36, 8	; 0x24000000
    9d50:	47060000 	strmi	r0, [r6, -r0]
    9d54:	0600001f 			; <UNDEFINED> instruction: 0x0600001f
    9d58:	027c132c 	rsbseq	r1, ip, #44, 6	; 0xb0000000
    9d5c:	c4060000 	strgt	r0, [r6], #-0
    9d60:	06000002 	streq	r0, [r0], -r2
    9d64:	028f1430 	addeq	r1, pc, #48, 8	; 0x30000000
    9d68:	e7080000 	str	r0, [r8, -r0]
    9d6c:	09000002 	stmdbeq	r0, {r1}
    9d70:	000002f3 	strdeq	r0, [r0], -r3
    9d74:	020e040a 	andeq	r0, lr, #167772160	; 0xa000000
    9d78:	e309019b 	movw	r0, #37275	; 0x919b
    9d7c:	0b000003 	bleq	9d90 <_Min_Heap_Size+0x9590>
    9d80:	00002058 	andeq	r2, r0, r8, asr r0
    9d84:	12019d02 	andne	r9, r1, #2, 26	; 0x80
    9d88:	000003f3 	strdeq	r0, [r0], -r3
    9d8c:	0b002302 	bleq	1299c <_Min_Heap_Size+0x1219c>
    9d90:	0000055e 	andeq	r0, r0, lr, asr r5
    9d94:	12019e02 	andne	r9, r1, #2, 28
    9d98:	000003f8 	strdeq	r0, [r0], -r8
    9d9c:	0b202302 	bleq	8129ac <_Min_Heap_Size+0x8121ac>
    9da0:	00001ff7 	strdeq	r1, [r0], -r7
    9da4:	12019f02 	andne	r9, r1, #2, 30
    9da8:	000003f3 	strdeq	r0, [r0], -r3
    9dac:	01802303 	orreq	r2, r0, r3, lsl #6
    9db0:	0005680b 	andeq	r6, r5, fp, lsl #16
    9db4:	01a00200 	lsleq	r0, r0, #4
    9db8:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9dbc:	a0230300 	eorge	r0, r3, r0, lsl #6
    9dc0:	1dac0b01 			; <UNDEFINED> instruction: 0x1dac0b01
    9dc4:	a1020000 	mrsge	r0, (UNDEF: 2)
    9dc8:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9dcc:	23030000 	movwcs	r0, #12288	; 0x3000
    9dd0:	720b0280 	andvc	r0, fp, #128, 4
    9dd4:	02000005 	andeq	r0, r0, #5
    9dd8:	f81201a2 			; <UNDEFINED> instruction: 0xf81201a2
    9ddc:	03000003 	movweq	r0, #3
    9de0:	0b02a023 	bleq	b1e74 <_Min_Heap_Size+0xb1674>
    9de4:	00001d2e 	andeq	r1, r0, lr, lsr #26
    9de8:	1201a302 	andne	sl, r1, #134217728	; 0x8000000
    9dec:	000003f3 	strdeq	r0, [r0], -r3
    9df0:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
    9df4:	00057c0b 	andeq	r7, r5, fp, lsl #24
    9df8:	01a40200 			; <UNDEFINED> instruction: 0x01a40200
    9dfc:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9e00:	a0230300 	eorge	r0, r3, r0, lsl #6
    9e04:	1fc30b03 	svcne	0x00c30b03
    9e08:	a5020000 	strge	r0, [r2, #-0]
    9e0c:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9e10:	23030000 	movwcs	r0, #12288	; 0x3000
    9e14:	860b0480 	strhi	r0, [fp], -r0, lsl #9
    9e18:	02000005 	andeq	r0, r0, #5
    9e1c:	081201a6 	ldmdaeq	r2, {r1, r2, r5, r7, r8}
    9e20:	03000004 	movweq	r0, #4
    9e24:	0c04a023 	stceq	0, cr10, [r4], {35}	; 0x23
    9e28:	02005049 	andeq	r5, r0, #73	; 0x49
    9e2c:	281201a7 	ldmdacs	r2, {r0, r1, r2, r5, r7, r8}
    9e30:	03000004 	movweq	r0, #4
    9e34:	0b068023 	bleq	1a9ec8 <_Min_Heap_Size+0x1a96c8>
    9e38:	00000590 	muleq	r0, r0, r5
    9e3c:	1201a802 	andne	sl, r1, #131072	; 0x20000
    9e40:	0000042d 	andeq	r0, r0, sp, lsr #8
    9e44:	07f02303 	ldrbeq	r2, [r0, r3, lsl #6]!
    9e48:	00217b0b 	eoreq	r7, r1, fp, lsl #22
    9e4c:	01a90200 			; <UNDEFINED> instruction: 0x01a90200
    9e50:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e54:	80230300 	eorhi	r0, r3, r0, lsl #6
    9e58:	f30d001c 	vqadd.u8	d0, d13, d12
    9e5c:	f3000002 	vhadd.u8	d0, d0, d2
    9e60:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    9e64:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    9e68:	e3080007 	movw	r0, #32775	; 0x8007
    9e6c:	0d000003 	stceq	0, cr0, [r0, #-12]
    9e70:	000002e7 	andeq	r0, r0, r7, ror #5
    9e74:	00000408 	andeq	r0, r0, r8, lsl #8
    9e78:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9e7c:	0d001700 	stceq	7, cr1, [r0, #-0]
    9e80:	000002e7 	andeq	r0, r0, r7, ror #5
    9e84:	00000418 	andeq	r0, r0, r8, lsl r4
    9e88:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9e8c:	0d003700 	stceq	7, cr3, [r0, #-0]
    9e90:	000002ca 	andeq	r0, r0, sl, asr #5
    9e94:	00000428 	andeq	r0, r0, r8, lsr #8
    9e98:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9e9c:	0800ef00 	stmdaeq	r0, {r8, r9, sl, fp, sp, lr, pc}
    9ea0:	00000418 	andeq	r0, r0, r8, lsl r4
    9ea4:	0002e70d 	andeq	lr, r2, sp, lsl #14
    9ea8:	00043e00 	andeq	r3, r4, r0, lsl #28
    9eac:	02b70f00 	adcseq	r0, r7, #0, 30
    9eb0:	02830000 	addeq	r0, r3, #0
    9eb4:	205d1000 	subscs	r1, sp, r0
    9eb8:	aa020000 	bge	89ec0 <_Min_Heap_Size+0x896c0>
    9ebc:	02fd0401 	rscseq	r0, sp, #16777216	; 0x1000000
    9ec0:	8c110000 	ldchi	0, cr0, [r1], {-0}
    9ec4:	0901bd02 	stmdbeq	r1, {r1, r8, sl, fp, ip, sp, pc}
    9ec8:	000005a7 	andeq	r0, r0, r7, lsr #11
    9ecc:	0001010b 	andeq	r0, r1, fp, lsl #2
    9ed0:	01bf0200 			; <UNDEFINED> instruction: 0x01bf0200
    9ed4:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9ed8:	00230200 	eoreq	r0, r3, r0, lsl #4
    9edc:	0003890b 	andeq	r8, r3, fp, lsl #18
    9ee0:	01c00200 	biceq	r0, r0, r0, lsl #4
    9ee4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ee8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9eec:	0003630b 	andeq	r6, r3, fp, lsl #6
    9ef0:	01c10200 	biceq	r0, r1, r0, lsl #4
    9ef4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ef8:	08230200 	stmdaeq	r3!, {r9}
    9efc:	0003a20b 	andeq	sl, r3, fp, lsl #4
    9f00:	01c20200 	biceq	r0, r2, r0, lsl #4
    9f04:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f08:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9f0c:	5243530c 	subpl	r5, r3, #12, 6	; 0x30000000
    9f10:	01c30200 	biceq	r0, r3, r0, lsl #4
    9f14:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f18:	10230200 	eorne	r0, r3, r0, lsl #4
    9f1c:	5243430c 	subpl	r4, r3, #12, 6	; 0x30000000
    9f20:	01c40200 	biceq	r0, r4, r0, lsl #4
    9f24:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f28:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9f2c:	5048530c 	subpl	r5, r8, ip, lsl #6
    9f30:	01c50200 	biceq	r0, r5, r0, lsl #4
    9f34:	0005b712 	andeq	fp, r5, r2, lsl r7
    9f38:	18230200 	stmdane	r3!, {r9}
    9f3c:	0005d10b 	andeq	sp, r5, fp, lsl #2
    9f40:	01c60200 	biceq	r0, r6, r0, lsl #4
    9f44:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f48:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9f4c:	0004c60b 	andeq	ip, r4, fp, lsl #12
    9f50:	01c70200 	biceq	r0, r7, r0, lsl #4
    9f54:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f58:	28230200 	stmdacs	r3!, {r9}
    9f5c:	00091a0b 	andeq	r1, r9, fp, lsl #20
    9f60:	01c80200 	biceq	r0, r8, r0, lsl #4
    9f64:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f68:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9f6c:	0003a80b 	andeq	sl, r3, fp, lsl #16
    9f70:	01c90200 	biceq	r0, r9, r0, lsl #4
    9f74:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f78:	30230200 	eorcc	r0, r3, r0, lsl #4
    9f7c:	0003c60b 	andeq	ip, r3, fp, lsl #12
    9f80:	01ca0200 	biceq	r0, sl, r0, lsl #4
    9f84:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f88:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    9f8c:	00029c0b 	andeq	r9, r2, fp, lsl #24
    9f90:	01cb0200 	biceq	r0, fp, r0, lsl #4
    9f94:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f98:	38230200 	stmdacc	r3!, {r9}
    9f9c:	0007d60b 	andeq	sp, r7, fp, lsl #12
    9fa0:	01cc0200 	biceq	r0, ip, r0, lsl #4
    9fa4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9fa8:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9fac:	5246500c 	subpl	r5, r6, #12
    9fb0:	01cd0200 	biceq	r0, sp, r0, lsl #4
    9fb4:	0005d112 	andeq	sp, r5, r2, lsl r1
    9fb8:	40230200 	eormi	r0, r3, r0, lsl #4
    9fbc:	5246440c 	subpl	r4, r6, #12, 8	; 0xc000000
    9fc0:	01ce0200 	biceq	r0, lr, r0, lsl #4
    9fc4:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9fc8:	48230200 	stmdami	r3!, {r9}
    9fcc:	5244410c 	subpl	r4, r4, #12, 2
    9fd0:	01cf0200 	biceq	r0, pc, r0, lsl #4
    9fd4:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9fd8:	4c230200 	sfmmi	f0, 4, [r3], #-0
    9fdc:	0003f50b 	andeq	pc, r3, fp, lsl #10
    9fe0:	01d00200 	bicseq	r0, r0, r0, lsl #4
    9fe4:	0005eb12 	andeq	lr, r5, r2, lsl fp
    9fe8:	50230200 	eorpl	r0, r3, r0, lsl #4
    9fec:	00014e0b 	andeq	r4, r1, fp, lsl #28
    9ff0:	01d10200 	bicseq	r0, r1, r0, lsl #4
    9ff4:	00060512 	andeq	r0, r6, r2, lsl r5
    9ff8:	60230200 	eorvs	r0, r3, r0, lsl #4
    9ffc:	00055e0b 	andeq	r5, r5, fp, lsl #28
    a000:	01d20200 	bicseq	r0, r2, r0, lsl #4
    a004:	00060a12 	andeq	r0, r6, r2, lsl sl
    a008:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    a00c:	00054a0b 	andeq	r4, r5, fp, lsl #20
    a010:	01d30200 	bicseq	r0, r3, r0, lsl #4
    a014:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a018:	88230300 	stmdahi	r3!, {r8, r9}
    a01c:	ca0d0001 	bgt	34a028 <_Min_Heap_Size+0x349828>
    a020:	b7000002 	strlt	r0, [r0, -r2]
    a024:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    a028:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    a02c:	a708000b 	strge	r0, [r8, -fp]
    a030:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    a034:	000002f8 	strdeq	r0, [r0], -r8
    a038:	000005cc 	andeq	r0, r0, ip, asr #11
    a03c:	0002b70e 	andeq	fp, r2, lr, lsl #14
    a040:	09000100 	stmdbeq	r0, {r8}
    a044:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    a048:	0005cc08 	andeq	ip, r5, r8, lsl #24
    a04c:	02f80d00 	rscseq	r0, r8, #0, 26
    a050:	05e60000 	strbeq	r0, [r6, #0]!
    a054:	b70e0000 	strlt	r0, [lr, -r0]
    a058:	03000002 	movweq	r0, #2
    a05c:	05d60900 	ldrbeq	r0, [r6, #2304]	; 0x900
    a060:	e6080000 	str	r0, [r8], -r0
    a064:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    a068:	000002f8 	strdeq	r0, [r0], -r8
    a06c:	00000600 	andeq	r0, r0, r0, lsl #12
    a070:	0002b70e 	andeq	fp, r2, lr, lsl #14
    a074:	09000400 	stmdbeq	r0, {sl}
    a078:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a07c:	00060008 	andeq	r0, r6, r8
    a080:	02e70d00 	rsceq	r0, r7, #0, 26
    a084:	061a0000 	ldreq	r0, [sl], -r0
    a088:	b70e0000 	strlt	r0, [lr, -r0]
    a08c:	04000002 	streq	r0, [r0], #-2
    a090:	02d71000 	sbcseq	r1, r7, #0
    a094:	d4020000 	strle	r0, [r2], #-0
    a098:	044b0301 	strbeq	r0, [fp], #-769	; 0xfffffcff
    a09c:	10110000 	andsne	r0, r1, r0
    a0a0:	0902fc02 	stmdbeq	r2, {r1, sl, fp, ip, sp, lr, pc}
    a0a4:	00000672 	andeq	r0, r0, r2, ror r6
    a0a8:	00214a0b 	eoreq	r4, r1, fp, lsl #20
    a0ac:	02fe0200 	rscseq	r0, lr, #0, 4
    a0b0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a0b4:	00230200 	eoreq	r0, r3, r0, lsl #4
    a0b8:	001fb80b 	andseq	fp, pc, fp, lsl #16
    a0bc:	02ff0200 	rscseq	r0, pc, #0, 4
    a0c0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a0c4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a0c8:	4c41560c 	mcrrmi	6, 0, r5, r1, cr12
    a0cc:	03000200 	movweq	r0, #512	; 0x200
    a0d0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a0d4:	08230200 	stmdaeq	r3!, {r9}
    a0d8:	001f140b 	andseq	r1, pc, fp, lsl #8
    a0dc:	03010200 	movweq	r0, #4608	; 0x1200
    a0e0:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    a0e4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a0e8:	1ebf1000 	cdpne	0, 11, cr1, cr15, cr0, {0}
    a0ec:	02020000 	andeq	r0, r2, #0
    a0f0:	06270303 	strteq	r0, [r7], -r3, lsl #6
    a0f4:	2c110000 	ldccs	0, cr0, [r1], {-0}
    a0f8:	0904bd02 	stmdbeq	r4, {r1, r8, sl, fp, ip, sp, pc}
    a0fc:	0000073a 	andeq	r0, r0, sl, lsr r7
    a100:	0020f50b 	eoreq	pc, r0, fp, lsl #10
    a104:	04bf0200 	ldrteq	r0, [pc], #512	; a10c <_Min_Heap_Size+0x990c>
    a108:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    a10c:	00230200 	eoreq	r0, r3, r0, lsl #4
    a110:	00214a0b 	eoreq	r4, r1, fp, lsl #20
    a114:	04c00200 	strbeq	r0, [r0], #512	; 0x200
    a118:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a11c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a120:	524e520c 	subpl	r5, lr, #12, 4	; 0xc0000000
    a124:	04c10200 	strbeq	r0, [r1], #512	; 0x200
    a128:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a12c:	08230200 	stmdaeq	r3!, {r9}
    a130:	0020aa0b 	eoreq	sl, r0, fp, lsl #20
    a134:	04c20200 	strbeq	r0, [r2], #512	; 0x200
    a138:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a13c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a140:	0020d40b 	eoreq	sp, r0, fp, lsl #8
    a144:	04c30200 	strbeq	r0, [r3], #512	; 0x200
    a148:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a14c:	10230200 	eorne	r0, r3, r0, lsl #4
    a150:	001e5f0b 	andseq	r5, lr, fp, lsl #30
    a154:	04c40200 	strbeq	r0, [r4], #512	; 0x200
    a158:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a15c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    a160:	001e0c0b 	andseq	r0, lr, fp, lsl #24
    a164:	04c50200 	strbeq	r0, [r5], #512	; 0x200
    a168:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a16c:	18230200 	stmdane	r3!, {r9}
    a170:	001e670b 	andseq	r6, lr, fp, lsl #14
    a174:	04c60200 	strbeq	r0, [r6], #512	; 0x200
    a178:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a17c:	1c230200 	sfmne	f0, 4, [r3], #-0
    a180:	001e940b 	andseq	r9, lr, fp, lsl #8
    a184:	04c70200 	strbeq	r0, [r7], #512	; 0x200
    a188:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a18c:	20230200 	eorcs	r0, r3, r0, lsl #4
    a190:	001e6f0b 	andseq	r6, lr, fp, lsl #30
    a194:	04c80200 	strbeq	r0, [r8], #512	; 0x200
    a198:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a19c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    a1a0:	001da40b 	andseq	sl, sp, fp, lsl #8
    a1a4:	04c90200 	strbeq	r0, [r9], #512	; 0x200
    a1a8:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a1ac:	28230200 	stmdacs	r3!, {r9}
    a1b0:	21b61000 			; <UNDEFINED> instruction: 0x21b61000
    a1b4:	ca020000 	bgt	8a1bc <_Min_Heap_Size+0x899bc>
    a1b8:	067f0304 	ldrbteq	r0, [pc], -r4, lsl #6
    a1bc:	07020000 	streq	r0, [r2, -r0]
    a1c0:	00025b01 	andeq	r5, r2, r1, lsl #22
    a1c4:	01b90700 			; <UNDEFINED> instruction: 0x01b90700
    a1c8:	00000762 	andeq	r0, r0, r2, ror #14
    a1cc:	00031e04 	andeq	r1, r3, r4, lsl #28
    a1d0:	53120000 	tstpl	r2, #0
    a1d4:	01005445 	tsteq	r0, r5, asr #8
    a1d8:	04080500 	streq	r0, [r8], #-1280	; 0xfffffb00
    a1dc:	00000726 	andeq	r0, r0, r6, lsr #14
    a1e0:	2e081013 	mcrcs	0, 0, r1, cr8, cr3, {0}
    a1e4:	00081809 	andeq	r1, r8, r9, lsl #16
    a1e8:	21431400 	cmpcs	r3, r0, lsl #8
    a1ec:	30080000 	andcc	r0, r8, r0
    a1f0:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a1f4:	00230200 	eoreq	r0, r3, r0, lsl #4
    a1f8:	001fa314 	andseq	sl, pc, r4, lsl r3	; <UNPREDICTABLE>
    a1fc:	1a320800 	bne	c8c204 <_Min_Heap_Size+0xc8ba04>
    a200:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a204:	14012302 	strne	r2, [r1], #-770	; 0xfffffcfe
    a208:	00000290 	muleq	r0, r0, r2
    a20c:	e71a3408 	ldr	r3, [sl, -r8, lsl #8]
    a210:	02000002 	andeq	r0, r0, #2
    a214:	dc140423 	cfldrsle	mvf0, [r4], {35}	; 0x23
    a218:	08000024 	stmdaeq	r0, {r2, r5}
    a21c:	02be1a35 	adcseq	r1, lr, #217088	; 0x35000
    a220:	23020000 	movwcs	r0, #8192	; 0x2000
    a224:	20471408 	subcs	r1, r7, r8, lsl #8
    a228:	37080000 	strcc	r0, [r8, -r0]
    a22c:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a230:	09230200 	stmdbeq	r3!, {r9}
    a234:	001d3314 	andseq	r3, sp, r4, lsl r3
    a238:	1a390800 	bne	e4c240 <_Min_Heap_Size+0xe4ba40>
    a23c:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a240:	140a2302 	strne	r2, [sl], #-770	; 0xfffffcfe
    a244:	00001f2b 	andeq	r1, r0, fp, lsr #30
    a248:	be1a3b08 	vnmlslt.f64	d3, d10, d8
    a24c:	02000002 	andeq	r0, r0, #2
    a250:	35140b23 	ldrcc	r0, [r4, #-2851]	; 0xfffff4dd
    a254:	08000020 	stmdaeq	r0, {r5}
    a258:	02be1a3d 	adcseq	r1, lr, #249856	; 0x3d000
    a25c:	23020000 	movwcs	r0, #8192	; 0x2000
    a260:	2180140c 	orrcs	r1, r0, ip, lsl #8
    a264:	3f080000 	svccc	0x00080000
    a268:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a26c:	0d230200 	sfmeq	f0, 4, [r3, #-0]
    a270:	001eb314 	andseq	fp, lr, r4, lsl r3
    a274:	1a410800 	bne	104c27c <_Min_Heap_Size+0x104ba7c>
    a278:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a27c:	140e2302 	strne	r2, [lr], #-770	; 0xfffffcfe
    a280:	00001db1 			; <UNDEFINED> instruction: 0x00001db1
    a284:	be1a4308 	cdplt	3, 1, cr4, cr10, cr8, {0}
    a288:	02000002 	andeq	r0, r0, #2
    a28c:	06000f23 	streq	r0, [r0], -r3, lsr #30
    a290:	00001e9c 	muleq	r0, ip, lr
    a294:	69024508 	stmdbvs	r2, {r3, r8, sl, lr}
    a298:	15000007 	strne	r0, [r0, #-7]
    a29c:	00202001 	eoreq	r2, r0, r1
    a2a0:	01e90100 	mvneq	r0, r0, lsl #2
    a2a4:	0000010d 	andeq	r0, r0, sp, lsl #2
    a2a8:	00000000 	andeq	r0, r0, r0
    a2ac:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a2b0:	01160100 	tsteq	r6, r0, lsl #2
    a2b4:	00001dcc 	andeq	r1, r0, ip, asr #27
    a2b8:	0601e001 	streq	lr, [r1], -r1
    a2bc:	00000001 	andeq	r0, r0, r1
    a2c0:	00000000 	andeq	r0, r0, r0
    a2c4:	006ca100 	rsbeq	sl, ip, r0, lsl #2
    a2c8:	08610100 	stmdaeq	r1!, {r8}^
    a2cc:	00170000 	andseq	r0, r7, r0
    a2d0:	24000000 	strcs	r0, [r0], #-0
    a2d4:	00000008 	andeq	r0, r0, r8
    a2d8:	20d90116 	sbcscs	r0, r9, r6, lsl r1
    a2dc:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    a2e0:	00010601 	andeq	r0, r1, r1, lsl #12
    a2e4:	00000000 	andeq	r0, r0, r0
    a2e8:	c1000000 	mrsgt	r0, (UNDEF: 0)
    a2ec:	0100006c 	tsteq	r0, ip, rrx
    a2f0:	000008ad 	andeq	r0, r0, sp, lsr #17
    a2f4:	00096018 	andeq	r6, r9, r8, lsl r0
    a2f8:	01ce0100 	biceq	r0, lr, r0, lsl #2
    a2fc:	0002e72b 	andeq	lr, r2, fp, lsr #14
    a300:	006ce900 	rsbeq	lr, ip, r0, lsl #18
    a304:	006ce100 	rsbeq	lr, ip, r0, lsl #2
    a308:	00001900 	andeq	r1, r0, r0, lsl #18
    a30c:	14180000 	ldrne	r0, [r8], #-0
    a310:	011a0000 	tsteq	sl, r0
    a314:	80030550 	andhi	r0, r3, r0, asr r5
    a318:	1a08002c 	bne	20a3d0 <_Min_Heap_Size+0x209bd0>
    a31c:	0a035101 	beq	de728 <_Min_Heap_Size+0xddf28>
    a320:	000001d1 	ldrdeq	r0, [r0], -r1
    a324:	1f6a011b 	svcne	0x006a011b
    a328:	bd010000 	stclt	0, cr0, [r1, #-0]
    a32c:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a330:	00000002 	andeq	r0, r0, r2
    a334:	00000000 	andeq	r0, r0, r0
    a338:	1d000000 	stcne	0, cr0, [r0, #-0]
    a33c:	0100006d 	tsteq	r0, sp, rrx
    a340:	00000921 	andeq	r0, r0, r1, lsr #18
    a344:	000eaa18 	andeq	sl, lr, r8, lsl sl
    a348:	01bd0100 			; <UNDEFINED> instruction: 0x01bd0100
    a34c:	00024327 	andeq	r4, r2, r7, lsr #6
    a350:	006d4500 	rsbeq	r4, sp, r0, lsl #10
    a354:	006d3d00 	rsbeq	r3, sp, r0, lsl #26
    a358:	12fb1c00 	rscsne	r1, fp, #0, 24
    a35c:	00000000 	andeq	r0, r0, r0
    a360:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    a364:	01000004 	tsteq	r0, r4
    a368:	060a01c3 	streq	r0, [sl], -r3, asr #3
    a36c:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a370:	0000130e 	andeq	r1, r0, lr, lsl #6
    a374:	00006d83 	andeq	r6, r0, r3, lsl #27
    a378:	00006d7f 	andeq	r6, r0, pc, ror sp
    a37c:	00001900 	andeq	r1, r0, r0, lsl #18
    a380:	14180000 	ldrne	r0, [r8], #-0
    a384:	011a0000 	tsteq	sl, r0
    a388:	80030550 	andhi	r0, r3, r0, asr r5
    a38c:	1a08002c 	bne	20a444 <_Min_Heap_Size+0x209c44>
    a390:	0a035101 	beq	de79c <_Min_Heap_Size+0xddf9c>
    a394:	000001c0 	andeq	r0, r0, r0, asr #3
    a398:	1de30116 	stfnee	f0, [r3, #88]!	; 0x58
    a39c:	ac010000 	stcge	0, cr0, [r1], {-0}
    a3a0:	00010601 	andeq	r0, r1, r1, lsl #12
    a3a4:	00000000 	andeq	r0, r0, r0
    a3a8:	a1000000 	mrsge	r0, (UNDEF: 0)
    a3ac:	0100006d 	tsteq	r0, sp, rrx
    a3b0:	00000995 	muleq	r0, r5, r9
    a3b4:	000eaa18 	andeq	sl, lr, r8, lsl sl
    a3b8:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    a3bc:	00024329 	andeq	r4, r2, r9, lsr #6
    a3c0:	006dc900 	rsbeq	ip, sp, r0, lsl #18
    a3c4:	006dc100 	rsbeq	ip, sp, r0, lsl #2
    a3c8:	131c1e00 	tstne	ip, #0, 28
    a3cc:	00000000 	andeq	r0, r0, r0
    a3d0:	00010000 	andeq	r0, r1, r0
    a3d4:	00000000 	andeq	r0, r0, r0
    a3d8:	01000000 	mrseq	r0, (UNDEF: 0)
    a3dc:	7a0301b2 	bvc	caaac <_Min_Heap_Size+0xca2ac>
    a3e0:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a3e4:	0000132b 	andeq	r1, r0, fp, lsr #6
    a3e8:	00006e05 	andeq	r6, r0, r5, lsl #28
    a3ec:	00006e03 	andeq	r6, r0, r3, lsl #28
    a3f0:	00001900 	andeq	r1, r0, r0, lsl #18
    a3f4:	14180000 	ldrne	r0, [r8], #-0
    a3f8:	011a0000 	tsteq	sl, r0
    a3fc:	80030550 	andhi	r0, r3, r0, asr r5
    a400:	1a08002c 	bne	20a4b8 <_Min_Heap_Size+0x209cb8>
    a404:	0a035101 	beq	de810 <_Min_Heap_Size+0xde010>
    a408:	000001af 	andeq	r0, r0, pc, lsr #3
    a40c:	1ede011b 	mrcne	1, 6, r0, cr14, cr11, {0}
    a410:	9c010000 	stcls	0, cr0, [r1], {-0}
    a414:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a418:	00000002 	andeq	r0, r0, r2
    a41c:	00000000 	andeq	r0, r0, r0
    a420:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a424:	0100006e 	tsteq	r0, lr, rrx
    a428:	00000a09 	andeq	r0, r0, r9, lsl #20
    a42c:	000eaa18 	andeq	sl, lr, r8, lsl sl
    a430:	019c0100 	orrseq	r0, ip, r0, lsl #2
    a434:	0002432b 	andeq	r4, r2, fp, lsr #6
    a438:	006e4000 	rsbeq	r4, lr, r0
    a43c:	006e3800 	rsbeq	r3, lr, r0, lsl #16
    a440:	13561c00 	cmpne	r6, #0, 24
    a444:	00000000 	andeq	r0, r0, r0
    a448:	d0010000 	andle	r0, r1, r0
    a44c:	01000004 	tsteq	r0, r4
    a450:	ee0a01a2 	adf<illegal precision>p	f0, f2, f2
    a454:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a458:	00001369 	andeq	r1, r0, r9, ror #6
    a45c:	00006e7e 	andeq	r6, r0, lr, ror lr
    a460:	00006e7a 	andeq	r6, r0, sl, ror lr
    a464:	00001900 	andeq	r1, r0, r0, lsl #18
    a468:	14180000 	ldrne	r0, [r8], #-0
    a46c:	011a0000 	tsteq	sl, r0
    a470:	80030550 	andhi	r0, r3, r0, asr r5
    a474:	1a08002c 	bne	20a52c <_Min_Heap_Size+0x209d2c>
    a478:	0a035101 	beq	de884 <_Min_Heap_Size+0xde084>
    a47c:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    a480:	219f0116 	orrscs	r0, pc, r6, lsl r1	; <UNPREDICTABLE>
    a484:	8a010000 	bhi	4a48c <_Min_Heap_Size+0x49c8c>
    a488:	00010601 	andeq	r0, r1, r1, lsl #12
    a48c:	00000000 	andeq	r0, r0, r0
    a490:	9c000000 	stcls	0, cr0, [r0], {-0}
    a494:	0100006e 	tsteq	r0, lr, rrx
    a498:	00000a7d 	andeq	r0, r0, sp, ror sl
    a49c:	000eaa18 	andeq	sl, lr, r8, lsl sl
    a4a0:	018a0100 	orreq	r0, sl, r0, lsl #2
    a4a4:	00024327 	andeq	r4, r2, r7, lsr #6
    a4a8:	006ec400 	rsbeq	ip, lr, r0, lsl #8
    a4ac:	006ebc00 	rsbeq	fp, lr, r0, lsl #24
    a4b0:	13391e00 	teqne	r9, #0, 28
    a4b4:	00000000 	andeq	r0, r0, r0
    a4b8:	00010000 	andeq	r0, r1, r0
    a4bc:	00000000 	andeq	r0, r0, r0
    a4c0:	01000000 	mrseq	r0, (UNDEF: 0)
    a4c4:	62030190 	andvs	r0, r3, #144, 2	; 0x24
    a4c8:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    a4cc:	00001348 	andeq	r1, r0, r8, asr #6
    a4d0:	00006f00 	andeq	r6, r0, r0, lsl #30
    a4d4:	00006efe 	strdeq	r6, [r0], -lr
    a4d8:	00001900 	andeq	r1, r0, r0, lsl #18
    a4dc:	14180000 	ldrne	r0, [r8], #-0
    a4e0:	011a0000 	tsteq	sl, r0
    a4e4:	80030550 	andhi	r0, r3, r0, asr r5
    a4e8:	1a08002c 	bne	20a5a0 <_Min_Heap_Size+0x209da0>
    a4ec:	0a035101 	beq	de8f8 <_Min_Heap_Size+0xde0f8>
    a4f0:	0000018d 	andeq	r0, r0, sp, lsl #3
    a4f4:	1e200116 	mcrne	1, 1, r0, cr0, cr6, {0}
    a4f8:	7b010000 	blvc	4a500 <_Min_Heap_Size+0x49d00>
    a4fc:	00010601 	andeq	r0, r1, r1, lsl #12
    a500:	00000000 	andeq	r0, r0, r0
    a504:	13000000 	movwne	r0, #0
    a508:	0100006f 	tsteq	r0, pc, rrx
    a50c:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a510:	000eaa18 	andeq	sl, lr, r8, lsl sl
    a514:	017b0100 	cmneq	fp, r0, lsl #2
    a518:	00024325 	andeq	r4, r2, r5, lsr #6
    a51c:	006f3b00 	rsbeq	r3, pc, r0, lsl #22
    a520:	006f3300 	rsbeq	r3, pc, r0, lsl #6
    a524:	1dbe1800 	ldcne	8, cr1, [lr]
    a528:	7b010000 	blvc	4a530 <_Min_Heap_Size+0x49d30>
    a52c:	02e73401 	rsceq	r3, r7, #16777216	; 0x1000000
    a530:	6f7f0000 	svcvs	0x007f0000
    a534:	6f750000 	svcvs	0x00750000
    a538:	1a180000 	bne	60a540 <_Min_Heap_Size+0x609d40>
    a53c:	0100001f 	tsteq	r0, pc, lsl r0
    a540:	a44d017b 	strbge	r0, [sp], #-379	; 0xfffffe85
    a544:	c900000b 	stmdbgt	r0, {r0, r1, r3}
    a548:	c100006f 	tstgt	r0, pc, rrx
    a54c:	1800006f 	stmdane	r0, {r0, r1, r2, r3, r5, r6}
    a550:	00001f96 	muleq	r0, r6, pc	; <UNPREDICTABLE>
    a554:	69017b01 	stmdbvs	r1, {r0, r8, r9, fp, ip, sp, lr}
    a558:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a55c:	00007001 	andeq	r7, r0, r1
    a560:	00006ffd 	strdeq	r6, [r0], -sp
    a564:	0012b01c 	andseq	fp, r2, ip, lsl r0
    a568:	00000000 	andeq	r0, r0, r0
    a56c:	04a00100 	strteq	r0, [r0], #256	; 0x100
    a570:	80010000 	andhi	r0, r1, r0
    a574:	0b110301 	bleq	44b180 <_Min_Heap_Size+0x44a980>
    a578:	c31d0000 	tstgt	sp, #0
    a57c:	23000012 	movwcs	r0, #18
    a580:	1f000070 	svcne	0x00000070
    a584:	00000070 	andeq	r0, r0, r0, ror r0
    a588:	0011e31c 	andseq	lr, r1, ip, lsl r3
    a58c:	00000000 	andeq	r0, r0, r0
    a590:	04b80100 	ldrteq	r0, [r8], #256	; 0x100
    a594:	80010000 	andhi	r0, r1, r0
    a598:	0b890301 	bleq	fe24b1a4 <_estack+0xde249f6c>
    a59c:	191d0000 	ldmdbne	sp, {}	; <UNPREDICTABLE>
    a5a0:	45000012 	strmi	r0, [r0, #-18]	; 0xffffffee
    a5a4:	41000070 	tstmi	r0, r0, ror r0
    a5a8:	1d000070 	stcne	0, cr0, [r0, #-448]	; 0xfffffe40
    a5ac:	0000120c 	andeq	r1, r0, ip, lsl #4
    a5b0:	00007067 	andeq	r7, r0, r7, rrx
    a5b4:	00007063 	andeq	r7, r0, r3, rrx
    a5b8:	0011ff1d 	andseq	pc, r1, sp, lsl pc	; <UNPREDICTABLE>
    a5bc:	00708b00 	rsbseq	r8, r0, r0, lsl #22
    a5c0:	00708500 	rsbseq	r8, r0, r0, lsl #10
    a5c4:	11f21d00 	mvnsne	r1, r0, lsl #26
    a5c8:	70bb0000 	adcsvc	r0, fp, r0
    a5cc:	70b70000 	adcsvc	r0, r7, r0
    a5d0:	b81f0000 	ldmdalt	pc, {}	; <UNPREDICTABLE>
    a5d4:	20000004 	andcs	r0, r0, r4
    a5d8:	00001226 	andeq	r1, r0, r6, lsr #4
    a5dc:	000070e3 	andeq	r7, r0, r3, ror #1
    a5e0:	000070d9 	ldrdeq	r7, [r0], -r9
    a5e4:	00123320 	andseq	r3, r2, r0, lsr #6
    a5e8:	00713100 	rsbseq	r3, r1, r0, lsl #2
    a5ec:	00712b00 	rsbseq	r2, r1, r0, lsl #22
    a5f0:	12402000 	subne	r2, r0, #0
    a5f4:	71780000 	cmnvc	r8, r0
    a5f8:	71760000 	cmnvc	r6, r0
    a5fc:	00000000 	andeq	r0, r0, r0
    a600:	00000019 	andeq	r0, r0, r9, lsl r0
    a604:	00141800 	andseq	r1, r4, r0, lsl #16
    a608:	50011a00 	andpl	r1, r1, r0, lsl #20
    a60c:	2c800305 	stccs	3, cr0, [r0], {5}
    a610:	011a0800 	tsteq	sl, r0, lsl #16
    a614:	7e0a0351 	mcrvc	3, 0, r0, cr10, cr1, {2}
    a618:	21000001 	tstcs	r0, r1
    a61c:	0002e704 	andeq	lr, r2, r4, lsl #14
    a620:	0ba40900 	bleq	fe90ca28 <_estack+0xde90b7f0>
    a624:	01220000 			; <UNDEFINED> instruction: 0x01220000
    a628:	0000211e 	andeq	r2, r0, lr, lsl r1
    a62c:	0a016001 	beq	62638 <_Min_Heap_Size+0x61e38>
    a630:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    a63c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    a640:	000be501 	andeq	lr, fp, r1, lsl #10
    a644:	13b12300 			; <UNDEFINED> instruction: 0x13b12300
    a648:	00000000 	andeq	r0, r0, r0
    a64c:	00020000 	andeq	r0, r2, r0
    a650:	00000000 	andeq	r0, r0, r0
    a654:	01000000 	mrseq	r0, (UNDEF: 0)
    a658:	000a0163 	andeq	r0, sl, r3, ror #2
    a65c:	1d8e0115 	stfnes	f0, [lr, #84]	; 0x54
    a660:	56010000 	strpl	r0, [r1], -r0
    a664:	00010601 	andeq	r0, r1, r1, lsl #12
    a668:	00000000 	andeq	r0, r0, r0
    a66c:	02000000 	andeq	r0, r0, #0
    a670:	1601007d 			; <UNDEFINED> instruction: 0x1601007d
    a674:	0020fa01 	eoreq	pc, r0, r1, lsl #20
    a678:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    a67c:	00000106 	andeq	r0, r0, r6, lsl #2
    a680:	00000000 	andeq	r0, r0, r0
    a684:	718b0000 	orrvc	r0, fp, r0
    a688:	56010000 	strpl	r0, [r1], -r0
    a68c:	1800000d 	stmdane	r0, {r0, r2, r3}
    a690:	00001e77 	andeq	r1, r0, r7, ror lr
    a694:	33012a01 	movwcc	r2, #6657	; 0x1a01
    a698:	00000d56 	andeq	r0, r0, r6, asr sp
    a69c:	000071b3 			; <UNDEFINED> instruction: 0x000071b3
    a6a0:	000071ab 	andeq	r7, r0, fp, lsr #3
    a6a4:	00000024 	andeq	r0, r0, r4, lsr #32
    a6a8:	00141800 	andseq	r1, r4, r0, lsl #16
    a6ac:	000c4b00 	andeq	r4, ip, r0, lsl #22
    a6b0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a6b4:	2c800305 	stccs	3, cr0, [r0], {5}
    a6b8:	011a0800 	tsteq	sl, r0, lsl #16
    a6bc:	2d0a0351 	stccs	3, cr0, [sl, #-324]	; 0xfffffebc
    a6c0:	00240001 	eoreq	r0, r4, r1
    a6c4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a6c8:	69000014 	stmdbvs	r0, {r2, r4}
    a6cc:	1a00000c 	bne	a704 <_Min_Heap_Size+0x9f04>
    a6d0:	03055001 	movweq	r5, #20481	; 0x5001
    a6d4:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    a6d8:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a6dc:	00012e0a 	andeq	r2, r1, sl, lsl #28
    a6e0:	00000024 	andeq	r0, r0, r4, lsr #32
    a6e4:	00141800 	andseq	r1, r4, r0, lsl #16
    a6e8:	000c8700 	andeq	r8, ip, r0, lsl #14
    a6ec:	50011a00 	andpl	r1, r1, r0, lsl #20
    a6f0:	2c800305 	stccs	3, cr0, [r0], {5}
    a6f4:	011a0800 	tsteq	sl, r0, lsl #16
    a6f8:	360a0351 			; <UNDEFINED> instruction: 0x360a0351
    a6fc:	00240001 	eoreq	r0, r4, r1
    a700:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a704:	a5000014 	strge	r0, [r0, #-20]	; 0xffffffec
    a708:	1a00000c 	bne	a740 <_Min_Heap_Size+0x9f40>
    a70c:	03055001 	movweq	r5, #20481	; 0x5001
    a710:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    a714:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a718:	0001370a 	andeq	r3, r1, sl, lsl #14
    a71c:	00000024 	andeq	r0, r0, r4, lsr #32
    a720:	00141800 	andseq	r1, r4, r0, lsl #16
    a724:	000cc300 	andeq	ip, ip, r0, lsl #6
    a728:	50011a00 	andpl	r1, r1, r0, lsl #20
    a72c:	2c800305 	stccs	3, cr0, [r0], {5}
    a730:	011a0800 	tsteq	sl, r0, lsl #16
    a734:	380a0351 	stmdacc	sl, {r0, r4, r6, r8, r9}
    a738:	00240001 	eoreq	r0, r4, r1
    a73c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a740:	e1000014 	tst	r0, r4, lsl r0
    a744:	1a00000c 	bne	a77c <_Min_Heap_Size+0x9f7c>
    a748:	03055001 	movweq	r5, #20481	; 0x5001
    a74c:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    a750:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a754:	0001390a 	andeq	r3, r1, sl, lsl #18
    a758:	00000024 	andeq	r0, r0, r4, lsr #32
    a75c:	00141800 	andseq	r1, r4, r0, lsl #16
    a760:	000cff00 	andeq	pc, ip, r0, lsl #30
    a764:	50011a00 	andpl	r1, r1, r0, lsl #20
    a768:	2c800305 	stccs	3, cr0, [r0], {5}
    a76c:	011a0800 	tsteq	sl, r0, lsl #16
    a770:	3a0a0351 	bcc	28b4bc <_Min_Heap_Size+0x28acbc>
    a774:	00240001 	eoreq	r0, r4, r1
    a778:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a77c:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    a780:	1a00000d 	bne	a7bc <_Min_Heap_Size+0x9fbc>
    a784:	03055001 	movweq	r5, #20481	; 0x5001
    a788:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    a78c:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a790:	00013b0a 	andeq	r3, r1, sl, lsl #22
    a794:	00000024 	andeq	r0, r0, r4, lsr #32
    a798:	00141800 	andseq	r1, r4, r0, lsl #16
    a79c:	000d3b00 	andeq	r3, sp, r0, lsl #22
    a7a0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a7a4:	2c800305 	stccs	3, cr0, [r0], {5}
    a7a8:	011a0800 	tsteq	sl, r0, lsl #16
    a7ac:	3c0a0351 	stccc	3, cr0, [sl], {81}	; 0x51
    a7b0:	00190001 	andseq	r0, r9, r1
    a7b4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a7b8:	1a000014 	bne	a810 <_Min_Heap_Size+0xa010>
    a7bc:	03055001 	movweq	r5, #20481	; 0x5001
    a7c0:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    a7c4:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a7c8:	00013d0a 	andeq	r3, r1, sl, lsl #26
    a7cc:	18042100 	stmdane	r4, {r8, sp}
    a7d0:	25000008 	strcs	r0, [r0, #-8]
    a7d4:	00213b01 	eoreq	r3, r1, r1, lsl #22
    a7d8:	01170100 	tsteq	r7, r0, lsl #2
    a7dc:	00000106 	andeq	r0, r0, r6, lsl #2
    a7e0:	00000000 	andeq	r0, r0, r0
    a7e4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a7e8:	0db90100 	ldfeqs	f0, [r9]
    a7ec:	14180000 	ldrne	r0, [r8], #-0
    a7f0:	0100001e 	tsteq	r0, lr, lsl r0
    a7f4:	e71e0117 			; <UNDEFINED> instruction: 0xe71e0117
    a7f8:	eb000002 	bl	a808 <_Min_Heap_Size+0xa008>
    a7fc:	e7000071 	smlsdx	r0, r1, r0, r0
    a800:	23000071 	movwcs	r0, #113	; 0x71
    a804:	00001402 	andeq	r1, r0, r2, lsl #8
    a808:	00000000 	andeq	r0, r0, r0
    a80c:	00000001 	andeq	r0, r0, r1
    a810:	00000000 	andeq	r0, r0, r0
    a814:	01200100 			; <UNDEFINED> instruction: 0x01200100
    a818:	140d2303 	strne	r2, [sp], #-771	; 0xfffffcfd
    a81c:	00000000 	andeq	r0, r0, r0
    a820:	00010000 	andeq	r0, r1, r0
    a824:	00000000 	andeq	r0, r0, r0
    a828:	01000000 	mrseq	r0, (UNDEF: 0)
    a82c:	00030121 	andeq	r0, r3, r1, lsr #2
    a830:	1dfc0125 	ldfnee	f0, [ip, #148]!	; 0x94
    a834:	00010000 	andeq	r0, r1, r0
    a838:	00010601 	andeq	r0, r1, r1, lsl #12
    a83c:	00000000 	andeq	r0, r0, r0
    a840:	02000000 	andeq	r0, r0, #0
    a844:	eb01007d 	bl	4aa40 <_Min_Heap_Size+0x4a240>
    a848:	2300000d 	movwcs	r0, #13
    a84c:	000013f7 	strdeq	r1, [r0], -r7
    a850:	00000000 	andeq	r0, r0, r0
    a854:	00000002 	andeq	r0, r0, r2
    a858:	00000000 	andeq	r0, r0, r0
    a85c:	01030100 	mrseq	r0, (UNDEF: 19)
    a860:	01260003 			; <UNDEFINED> instruction: 0x01260003
    a864:	00001d7b 	andeq	r1, r0, fp, ror sp
    a868:	010ae301 	tsteq	sl, r1, lsl #6
    a86c:	000002e7 	andeq	r0, r0, r7, ror #5
    a870:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
    a874:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
    a878:	01007d02 	tsteq	r0, r2, lsl #26
    a87c:	00000e72 	andeq	r0, r0, r2, ror lr
    a880:	0020ca27 	eoreq	ip, r0, r7, lsr #20
    a884:	26e30100 	strbtcs	r0, [r3], r0, lsl #2
    a888:	000002e7 	andeq	r0, r0, r7, ror #5
    a88c:	00007212 	andeq	r7, r0, r2, lsl r2
    a890:	0000720c 	andeq	r7, r0, ip, lsl #4
    a894:	0011b628 	andseq	fp, r1, r8, lsr #12
    a898:	0015fc00 	andseq	pc, r5, r0, lsl #24
    a89c:	15fc0208 	ldrbne	r0, [ip, #520]!	; 0x208
    a8a0:	161e0800 	ldrne	r0, [lr], -r0, lsl #16
    a8a4:	e5010800 	str	r0, [r1, #-2048]	; 0xfffff800
    a8a8:	11c91d0b 	bicne	r1, r9, fp, lsl #26
    a8ac:	72460000 	subvc	r0, r6, #0
    a8b0:	72400000 	subvc	r0, r0, #0
    a8b4:	d1290000 			; <UNDEFINED> instruction: 0xd1290000
    a8b8:	0a000012 	beq	a908 <_Min_Heap_Size+0xa108>
    a8bc:	01080016 	tsteq	r8, r6, lsl r0
    a8c0:	0800160a 	stmdaeq	r0, {r1, r3, r9, sl, ip}
    a8c4:	08001612 	stmdaeq	r0, {r1, r4, r9, sl, ip}
    a8c8:	0307ee02 	movweq	lr, #32258	; 0x7e02
    a8cc:	0012ed1d 	andseq	lr, r2, sp, lsl sp
    a8d0:	00727600 	rsbseq	r7, r2, r0, lsl #12
    a8d4:	00727400 	rsbseq	r7, r2, r0, lsl #8
    a8d8:	12e01d00 	rscne	r1, r0, #0, 26
    a8dc:	728c0000 	addvc	r0, ip, #0
    a8e0:	728a0000 	addvc	r0, sl, #0
    a8e4:	00000000 	andeq	r0, r0, r0
    a8e8:	f5012a00 			; <UNDEFINED> instruction: 0xf5012a00
    a8ec:	0100001e 	tsteq	r0, lr, lsl r0
    a8f0:	000106d6 	ldrdeq	r0, [r1], -r6
    a8f4:	00000000 	andeq	r0, r0, r0
    a8f8:	02000000 	andeq	r0, r0, #0
    a8fc:	cf01007d 	svcgt	0x0001007d
    a900:	2800000e 	stmdacs	r0, {r1, r2, r3}
    a904:	000011d7 	ldrdeq	r1, [r0], -r7
    a908:	00000000 	andeq	r0, r0, r0
    a90c:	00000002 	andeq	r0, r0, r2
    a910:	00000000 	andeq	r0, r0, r0
    a914:	03d90100 	bicseq	r0, r9, #0, 2
    a918:	00140223 	andseq	r0, r4, r3, lsr #4
    a91c:	00000000 	andeq	r0, r0, r0
    a920:	00000400 	andeq	r0, r0, r0, lsl #8
    a924:	00000000 	andeq	r0, r0, r0
    a928:	94020000 	strls	r0, [r2], #-0
    a92c:	02230307 	eoreq	r0, r3, #469762048	; 0x1c000000
    a930:	00000014 	andeq	r0, r0, r4, lsl r0
    a934:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a940:	03079902 	movweq	r9, #30978	; 0x7902
    a944:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    a948:	00000e5b 	andeq	r0, r0, fp, asr lr
    a94c:	0106c901 	tsteq	r6, r1, lsl #18
	...
    a958:	000072a1 	andeq	r7, r0, r1, lsr #5
    a95c:	000f6b01 	andeq	r6, pc, r1, lsl #22
    a960:	0eaa2700 	cdpeq	7, 10, cr2, cr10, cr0, {0}
    a964:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    a968:	00024324 	andeq	r4, r2, r4, lsr #6
    a96c:	0072c900 	rsbseq	ip, r2, r0, lsl #18
    a970:	0072c100 	rsbseq	ip, r2, r0, lsl #2
    a974:	13772c00 	cmnne	r7, #0, 24
    a978:	00000000 	andeq	r0, r0, r0
    a97c:	00010000 	andeq	r0, r1, r0
    a980:	00000000 	andeq	r0, r0, r0
    a984:	01000000 	mrseq	r0, (UNDEF: 0)
    a988:	0f5103cf 	svceq	0x005103cf
    a98c:	861d0000 	ldrhi	r0, [sp], -r0
    a990:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    a994:	03000073 	movweq	r0, #115	; 0x73
    a998:	23000073 	movwcs	r0, #115	; 0x73
    a99c:	00001402 	andeq	r1, r0, r2, lsl #8
    a9a0:	00000000 	andeq	r0, r0, r0
    a9a4:	00000001 	andeq	r0, r0, r1
    a9a8:	00000000 	andeq	r0, r0, r0
    a9ac:	06bf0200 	ldrteq	r0, [pc], r0, lsl #4
    a9b0:	140d2305 	strne	r2, [sp], #-773	; 0xfffffcfb
    a9b4:	00000000 	andeq	r0, r0, r0
    a9b8:	00010000 	andeq	r0, r1, r0
    a9bc:	00000000 	andeq	r0, r0, r0
    a9c0:	02000000 	andeq	r0, r0, #0
    a9c4:	000506c0 	andeq	r0, r5, r0, asr #13
    a9c8:	00000019 	andeq	r0, r0, r9, lsl r0
    a9cc:	00141800 	andseq	r1, r4, r0, lsl #16
    a9d0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a9d4:	2c800305 	stccs	3, cr0, [r0], {5}
    a9d8:	011a0800 	tsteq	sl, r0, lsl #16
    a9dc:	cc080251 	sfmgt	f0, 4, [r8], {81}	; 0x51
    a9e0:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    a9e4:	00000dfa 	strdeq	r0, [r0], -sl
    a9e8:	0106b901 	tsteq	r6, r1, lsl #18
    a9ec:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    a9f0:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
    a9f4:	00007318 	andeq	r7, r0, r8, lsl r3
    a9f8:	000fdb01 	andeq	sp, pc, r1, lsl #22
    a9fc:	0eaa2700 	cdpeq	7, 10, cr2, cr10, cr0, {0}
    aa00:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    aa04:	00024323 	andeq	r4, r2, r3, lsr #6
    aa08:	00734000 	rsbseq	r4, r3, r0
    aa0c:	00733800 	rsbseq	r3, r3, r0, lsl #16
    aa10:	13942c00 	orrsne	r2, r4, #0, 24
    aa14:	15d20000 	ldrbne	r0, [r2]
    aa18:	d2010800 	andle	r0, r1, #0, 16
    aa1c:	e6080015 			; <UNDEFINED> instruction: 0xe6080015
    aa20:	01080015 	tsteq	r8, r5, lsl r0
    aa24:	0fc103bf 	svceq	0x00c103bf
    aa28:	a31d0000 	tstge	sp, #0
    aa2c:	7c000013 	stcvc	0, cr0, [r0], {19}
    aa30:	7a000073 	bvc	ac04 <_Min_Heap_Size+0xa404>
    aa34:	00000073 	andeq	r0, r0, r3, ror r0
    aa38:	0015f019 	andseq	pc, r5, r9, lsl r0	; <UNPREDICTABLE>
    aa3c:	00141808 	andseq	r1, r4, r8, lsl #16
    aa40:	50011a00 	andpl	r1, r1, r0, lsl #20
    aa44:	2c800305 	stccs	3, cr0, [r0], {5}
    aa48:	011a0800 	tsteq	sl, r0, lsl #16
    aa4c:	bc080251 	sfmlt	f0, 4, [r8], {81}	; 0x51
    aa50:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    aa54:	00000dab 	andeq	r0, r0, fp, lsr #27
    aa58:	0106a301 	tsteq	r6, r1, lsl #6
    aa5c:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    aa60:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    aa64:	0000738f 	andeq	r7, r0, pc, lsl #7
    aa68:	00112c01 	andseq	r2, r1, r1, lsl #24
    aa6c:	0eaa2700 	cdpeq	7, 10, cr2, cr10, cr0, {0}
    aa70:	a3010000 	movwge	r0, #4096	; 0x1000
    aa74:	00024325 	andeq	r4, r2, r5, lsr #6
    aa78:	0073b700 	rsbseq	fp, r3, r0, lsl #14
    aa7c:	0073af00 	rsbseq	sl, r3, r0, lsl #30
    aa80:	1f1b2700 	svcne	0x001b2700
    aa84:	a3010000 	movwge	r0, #4096	; 0x1000
    aa88:	0002e734 	andeq	lr, r2, r4, lsr r7
    aa8c:	0073fd00 	rsbseq	pc, r3, r0, lsl #26
    aa90:	0073f100 	rsbseq	pc, r3, r0, lsl #2
    aa94:	1f972700 	svcne	0x00972700
    aa98:	a3010000 	movwge	r0, #4096	; 0x1000
    aa9c:	0002e74e 	andeq	lr, r2, lr, asr #14
    aaa0:	00745900 	rsbseq	r5, r4, r0, lsl #18
    aaa4:	00744d00 	rsbseq	r4, r4, r0, lsl #26
    aaa8:	1faa2d00 	svcne	0x00aa2d00
    aaac:	a5010000 	strge	r0, [r1, #-0]
    aab0:	0002e70c 	andeq	lr, r2, ip, lsl #14
    aab4:	0074b500 	rsbseq	fp, r4, r0, lsl #10
    aab8:	0074a900 	rsbseq	sl, r4, r0, lsl #18
    aabc:	13b12e00 			; <UNDEFINED> instruction: 0x13b12e00
    aac0:	15500000 	ldrbne	r0, [r0, #-0]
    aac4:	50010800 	andpl	r0, r1, r0, lsl #16
    aac8:	58080015 	stmdapl	r8, {r0, r2, r4}
    aacc:	01080015 	tsteq	r8, r5, lsl r0
    aad0:	4e2f13ab 	cdpmi	3, 2, cr1, cr15, cr11, {5}
    aad4:	58000012 	stmdapl	r0, {r1, r4}
    aad8:	02080015 	andeq	r0, r8, #21
    aadc:	00000470 	andeq	r0, r0, r0, ror r4
    aae0:	c503ad01 	strgt	sl, [r3, #-3329]	; 0xfffff2ff
    aae4:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    aae8:	0000127b 	andeq	r1, r0, fp, ror r2
    aaec:	0000750b 	andeq	r7, r0, fp, lsl #10
    aaf0:	00007505 	andeq	r7, r0, r5, lsl #10
    aaf4:	00126e1d 	andseq	r6, r2, sp, lsl lr
    aaf8:	00753d00 	rsbseq	r3, r5, r0, lsl #26
    aafc:	00753700 	rsbseq	r3, r5, r0, lsl #14
    ab00:	12611d00 	rsbne	r1, r1, #0, 26
    ab04:	75710000 	ldrbvc	r0, [r1, #-0]!
    ab08:	75690000 	strbvc	r0, [r9, #-0]!
    ab0c:	701f0000 	andsvc	r0, pc, r0
    ab10:	20000004 	andcs	r0, r0, r4
    ab14:	00001288 	andeq	r1, r0, r8, lsl #5
    ab18:	000075b1 			; <UNDEFINED> instruction: 0x000075b1
    ab1c:	000075a9 	andeq	r7, r0, r9, lsr #11
    ab20:	00129520 	andseq	r9, r2, r0, lsr #10
    ab24:	0075ed00 	rsbseq	lr, r5, r0, lsl #26
    ab28:	0075e900 	rsbseq	lr, r5, r0, lsl #18
    ab2c:	12a22000 	adcne	r2, r2, #0
    ab30:	760d0000 	strvc	r0, [sp], -r0
    ab34:	760b0000 	strvc	r0, [fp], -r0
    ab38:	00000000 	andeq	r0, r0, r0
    ab3c:	0012d12f 	andseq	sp, r2, pc, lsr #2
    ab40:	00158200 	andseq	r8, r5, r0, lsl #4
    ab44:	04880108 	streq	r0, [r8], #264	; 0x108
    ab48:	ad010000 	stcge	0, cr0, [r1, #-0]
    ab4c:	0010f503 	andseq	pc, r0, r3, lsl #10
    ab50:	12ed1d00 	rscne	r1, sp, #0, 26
    ab54:	76240000 	strtvc	r0, [r4], -r0
    ab58:	76200000 	strtvc	r0, [r0], -r0
    ab5c:	e01d0000 	ands	r0, sp, r0
    ab60:	46000012 			; <UNDEFINED> instruction: 0x46000012
    ab64:	42000076 	andmi	r0, r0, #118	; 0x76
    ab68:	00000076 	andeq	r0, r0, r6, ror r0
    ab6c:	0015a024 	andseq	sl, r5, r4, lsr #32
    ab70:	00141808 	andseq	r1, r4, r8, lsl #16
    ab74:	00111200 	andseq	r1, r1, r0, lsl #4
    ab78:	50011a00 	andpl	r1, r1, r0, lsl #20
    ab7c:	2c800305 	stccs	3, cr0, [r0], {5}
    ab80:	011a0800 	tsteq	sl, r0, lsl #16
    ab84:	a8080251 	stmdage	r8, {r0, r4, r6, r9}
    ab88:	15aa1900 	strne	r1, [sl, #2304]!	; 0x900
    ab8c:	14180800 	ldrne	r0, [r8], #-2048	; 0xfffff800
    ab90:	011a0000 	tsteq	sl, r0
    ab94:	80030550 	andhi	r0, r3, r0, asr r5
    ab98:	1a08002c 	bne	20ac50 <_Min_Heap_Size+0x20a450>
    ab9c:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    aba0:	2b0000a9 	blcs	ae4c <_Min_Heap_Size+0xa64c>
    aba4:	00206701 	eoreq	r6, r0, r1, lsl #14
    aba8:	068d0100 	streq	r0, [sp], r0, lsl #2
    abac:	00150401 	andseq	r0, r5, r1, lsl #8
    abb0:	00154008 	andseq	r4, r5, r8
    abb4:	00766408 	rsbseq	r6, r6, r8, lsl #8
    abb8:	11b60100 			; <UNDEFINED> instruction: 0x11b60100
    abbc:	be270000 	cdplt	0, 2, cr0, cr7, cr0, {0}
    abc0:	0100001d 	tsteq	r0, sp, lsl r0
    abc4:	02e72c8d 	rsceq	r2, r7, #36096	; 0x8d00
    abc8:	768e0000 	strvc	r0, [lr], r0
    abcc:	76840000 	strvc	r0, [r4], r0
    abd0:	c02c0000 	eorgt	r0, ip, r0
    abd4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    abd8:	01080015 	tsteq	r8, r5, lsl r0
    abdc:	0800150e 	stmdaeq	r0, {r1, r2, r3, r8, sl, ip}
    abe0:	0800152c 	stmdaeq	r0, {r2, r3, r5, r8, sl, ip}
    abe4:	9c039301 	stcls	3, cr9, [r3], {1}
    abe8:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    abec:	000013cf 	andeq	r1, r0, pc, asr #7
    abf0:	000076d4 	ldrdeq	r7, [r0], -r4
    abf4:	000076d0 	ldrdeq	r7, [r0], -r0
    abf8:	0013dc20 	andseq	sp, r3, r0, lsr #24
    abfc:	0076fb00 	rsbseq	pc, r6, r0, lsl #22
    ac00:	0076f500 	rsbseq	pc, r6, r0, lsl #10
    ac04:	13e92000 	mvnne	r2, #0
    ac08:	77280000 	strvc	r0, [r8, -r0]!
    ac0c:	77240000 	strvc	r0, [r4, -r0]!
    ac10:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ac14:	08001536 	stmdaeq	r0, {r1, r2, r4, r5, r8, sl, ip}
    ac18:	00001418 	andeq	r1, r0, r8, lsl r4
    ac1c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ac20:	002c8003 	eoreq	r8, ip, r3
    ac24:	51011a08 	tstpl	r1, r8, lsl #20
    ac28:	00900802 	addseq	r0, r0, r2, lsl #16
    ac2c:	210f3000 	mrscs	r3, CPSR
    ac30:	e6020000 	str	r0, [r2], -r0
    ac34:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    ac38:	03000002 	movweq	r0, #2
    ac3c:	000011d7 	ldrdeq	r1, [r0], -r7
    ac40:	001fbd31 	andseq	fp, pc, r1, lsr sp	; <UNPREDICTABLE>
    ac44:	07e60200 	strbeq	r0, [r6, r0, lsl #4]!
    ac48:	0002e732 	andeq	lr, r2, r2, lsr r7
    ac4c:	4c320000 	ldcmi	0, cr0, [r2], #-0
    ac50:	0200001e 	andeq	r0, r0, #30
    ac54:	01220792 			; <UNDEFINED> instruction: 0x01220792
    ac58:	0c330301 	ldceq	3, cr0, [r3], #-4
    ac5c:	02000020 	andeq	r0, r0, #32
    ac60:	01160760 	tsteq	r6, r0, ror #14
    ac64:	00124e03 	andseq	r4, r2, r3, lsl #28
    ac68:	1f9a3100 	svcne	0x009a3100
    ac6c:	60020000 	andvs	r0, r2, r0
    ac70:	02e73407 	rsceq	r3, r7, #117440512	; 0x7000000
    ac74:	be310000 	cdplt	0, 3, cr0, cr1, cr0, {0}
    ac78:	0200001d 	andeq	r0, r0, #29
    ac7c:	e7470760 	strb	r0, [r7, -r0, ror #14]
    ac80:	31000002 	tstcc	r0, r2
    ac84:	00001f1a 	andeq	r1, r0, sl, lsl pc
    ac88:	66076002 	strvs	r6, [r7], -r2
    ac8c:	00000baa 	andeq	r0, r0, sl, lsr #23
    ac90:	001f9631 	andseq	r9, pc, r1, lsr r6	; <UNPREDICTABLE>
    ac94:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    ac98:	000baa88 	andeq	sl, fp, r8, lsl #21
    ac9c:	20af3400 	adccs	r3, pc, r0, lsl #8
    aca0:	62020000 	andvs	r0, r2, #0
    aca4:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    aca8:	80340000 	eorshi	r0, r4, r0
    acac:	0200001e 	andeq	r0, r0, #30
    acb0:	e70c0763 	str	r0, [ip, -r3, ror #14]
    acb4:	34000002 	strcc	r0, [r0], #-2
    acb8:	00001ffc 	strdeq	r1, [r0], -ip
    acbc:	0c076402 	cfstrseq	mvf6, [r7], {2}
    acc0:	000002e7 	andeq	r0, r0, r7, ror #5
    acc4:	1fe33000 	svcne	0x00e33000
    acc8:	45020000 	strmi	r0, [r2, #-0]
    accc:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    acd0:	03000002 	movweq	r0, #2
    acd4:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    acd8:	001dbe31 	andseq	fp, sp, r1, lsr lr
    acdc:	07450200 	strbeq	r0, [r5, -r0, lsl #4]
    ace0:	0002e738 	andeq	lr, r2, r8, lsr r7
    ace4:	1f1b3100 	svcne	0x001b3100
    ace8:	45020000 	strmi	r0, [r2, #-0]
    acec:	02e75007 	rsceq	r5, r7, #7
    acf0:	97310000 	ldrls	r0, [r1, -r0]!
    acf4:	0200001f 	andeq	r0, r0, #31
    acf8:	e76a0745 	strb	r0, [sl, -r5, asr #14]!
    acfc:	34000002 	strcc	r0, [r0], #-2
    ad00:	000020af 	andeq	r2, r0, pc, lsr #1
    ad04:	0c074702 	stceq	7, cr4, [r7], {2}
    ad08:	000002e7 	andeq	r0, r0, r7, ror #5
    ad0c:	001e8034 	andseq	r8, lr, r4, lsr r0
    ad10:	07480200 	strbeq	r0, [r8, -r0, lsl #4]
    ad14:	0002e70c 	andeq	lr, r2, ip, lsl #14
    ad18:	1ffc3400 	svcne	0x00fc3400
    ad1c:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    ad20:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    ad24:	30000000 	andcc	r0, r0, r0
    ad28:	00001f83 	andeq	r1, r0, r3, lsl #31
    ad2c:	1a072c02 	bne	1d5d3c <_Min_Heap_Size+0x1d553c>
    ad30:	0002e701 	andeq	lr, r2, r1, lsl #14
    ad34:	12d10300 	sbcsne	r0, r1, #0, 6
    ad38:	aa310000 	bge	c4ad40 <_Min_Heap_Size+0xc4a540>
    ad3c:	0200000e 	andeq	r0, r0, #14
    ad40:	4337072c 	teqmi	r7, #44, 14	; 0xb00000
    ad44:	00000002 	andeq	r0, r0, r2
    ad48:	00218c33 	eoreq	r8, r1, r3, lsr ip
    ad4c:	07160200 	ldreq	r0, [r6, -r0, lsl #4]
    ad50:	fb030116 	blx	cb1b2 <_Min_Heap_Size+0xca9b2>
    ad54:	31000012 	tstcc	r0, r2, lsl r0
    ad58:	00000eaa 	andeq	r0, r0, sl, lsr #29
    ad5c:	33071602 	movwcc	r1, #30210	; 0x7602
    ad60:	00000243 	andeq	r0, r0, r3, asr #4
    ad64:	001f3c31 	andseq	r3, pc, r1, lsr ip	; <UNPREDICTABLE>
    ad68:	07160200 	ldreq	r0, [r6, -r0, lsl #4]
    ad6c:	0002e742 	andeq	lr, r2, r2, asr #14
    ad70:	4f300000 	svcmi	0x00300000
    ad74:	02000021 	andeq	r0, r0, #33	; 0x21
    ad78:	011a0700 	tsteq	sl, r0, lsl #14
    ad7c:	000002e7 	andeq	r0, r0, r7, ror #5
    ad80:	00131c03 	andseq	r1, r3, r3, lsl #24
    ad84:	0eaa3100 	fdveqe	f3, f2, f0
    ad88:	00020000 	andeq	r0, r2, r0
    ad8c:	02433507 	subeq	r3, r3, #29360128	; 0x1c00000
    ad90:	33000000 	movwcc	r0, #0
    ad94:	00001e35 	andeq	r1, r0, r5, lsr lr
    ad98:	1606ef02 	strne	lr, [r6], -r2, lsl #30
    ad9c:	13390301 	teqne	r9, #67108864	; 0x4000000
    ada0:	aa310000 	bge	c4ada8 <_Min_Heap_Size+0xc4a5a8>
    ada4:	0200000e 	andeq	r0, r0, #14
    ada8:	433706ef 	teqmi	r7, #250609664	; 0xef00000
    adac:	00000002 	andeq	r0, r0, r2
    adb0:	00208433 	eoreq	r8, r0, r3, lsr r4
    adb4:	06e00200 	strbteq	r0, [r0], r0, lsl #4
    adb8:	56030116 			; <UNDEFINED> instruction: 0x56030116
    adbc:	31000013 	tstcc	r0, r3, lsl r0
    adc0:	00000eaa 	andeq	r0, r0, sl, lsr #29
    adc4:	3506e002 	strcc	lr, [r6, #-2]
    adc8:	00000243 	andeq	r0, r0, r3, asr #4
    adcc:	1fc83000 	svcne	0x00c83000
    add0:	cd020000 	stcgt	0, cr0, [r2, #-0]
    add4:	e7011a06 	str	r1, [r1, -r6, lsl #20]
    add8:	03000002 	movweq	r0, #2
    addc:	00001377 	andeq	r1, r0, r7, ror r3
    ade0:	000eaa31 	andeq	sl, lr, r1, lsr sl
    ade4:	06cd0200 	strbeq	r0, [sp], r0, lsl #4
    ade8:	00024339 	andeq	r4, r2, r9, lsr r3
    adec:	cc330000 	ldcgt	0, cr0, [r3], #-0
    adf0:	0200001e 	andeq	r0, r0, #30
    adf4:	011606ba 			; <UNDEFINED> instruction: 0x011606ba
    adf8:	00139403 	andseq	r9, r3, r3, lsl #8
    adfc:	0eaa3100 	fdveqe	f3, f2, f0
    ae00:	ba020000 	blt	8ae08 <_Min_Heap_Size+0x8a608>
    ae04:	02433206 	subeq	r3, r3, #1610612736	; 0x60000000
    ae08:	33000000 	movwcc	r0, #0
    ae0c:	00002099 	muleq	r0, r9, r0
    ae10:	16069402 	strne	r9, [r6], -r2, lsl #8
    ae14:	13b10301 			; <UNDEFINED> instruction: 0x13b10301
    ae18:	aa310000 	bge	c4ae20 <_Min_Heap_Size+0xc4a620>
    ae1c:	0200000e 	andeq	r0, r0, #14
    ae20:	43310694 	teqmi	r1, #148, 12	; 0x9400000
    ae24:	00000002 	andeq	r0, r0, r2
    ae28:	00216035 	eoreq	r6, r1, r5, lsr r0
    ae2c:	06880200 	streq	r0, [r8], r0, lsl #4
    ae30:	02e7011a 	rsceq	r0, r7, #-2147483642	; 0x80000006
    ae34:	33030000 	movwcc	r0, #12288	; 0x3000
    ae38:	00001f4f 	andeq	r1, r0, pc, asr #30
    ae3c:	16067502 	strne	r7, [r6], -r2, lsl #10
    ae40:	13f70301 	mvnsne	r0, #67108864	; 0x4000000
    ae44:	be310000 	cdplt	0, 3, cr0, cr1, cr0, {0}
    ae48:	0200001d 	andeq	r0, r0, #29
    ae4c:	e73a0675 			; <UNDEFINED> instruction: 0xe73a0675
    ae50:	34000002 	strcc	r0, [r0], #-2
    ae54:	00001f0a 	andeq	r1, r0, sl, lsl #30
    ae58:	0c067702 	stceq	7, cr7, [r6], {2}
    ae5c:	000002e7 	andeq	r0, r0, r7, ror #5
    ae60:	0020af34 	eoreq	sl, r0, r4, lsr pc
    ae64:	06780200 	ldrbteq	r0, [r8], -r0, lsl #4
    ae68:	0002e70c 	andeq	lr, r2, ip, lsl #14
    ae6c:	41360000 	teqmi	r6, r0
    ae70:	03000020 	movweq	r0, #32
    ae74:	011b0118 	tsteq	fp, r8, lsl r1
    ae78:	1f7d3603 	svcne	0x007d3603
    ae7c:	0d030000 	stceq	0, cr0, [r3, #-0]
    ae80:	03011b01 	movweq	r1, #6913	; 0x1b01
    ae84:	001fdd36 	andseq	sp, pc, r6, lsr sp	; <UNPREDICTABLE>
    ae88:	01020300 	mrseq	r0, LR_svc
    ae8c:	3703011b 	smladcc	r3, fp, r1, r0
    ae90:	04b80101 	ldrteq	r0, [r8], #257	; 0x101
    ae94:	04b80000 	ldrteq	r0, [r8], #0
    ae98:	e6090000 	str	r0, [r9], -r0
    ae9c:	fe000801 	vcmla.f16	d0, d0, d1[0], #0
    aea0:	0200000a 	andeq	r0, r0, #10
    aea4:	0016ec00 	andseq	lr, r6, r0, lsl #24
    aea8:	d7010400 	strle	r0, [r1, -r0, lsl #8]
    aeac:	0c000005 	stceq	0, cr0, [r0], {5}
    aeb0:	000023f5 	strdeq	r2, [r0], -r5
    aeb4:	00000420 	andeq	r0, r0, r0, lsr #8
    aeb8:	000005a0 	andeq	r0, r0, r0, lsr #11
	...
    aec4:	000081d1 	ldrdeq	r8, [r0], -r1
    aec8:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    aecc:	05000002 	streq	r0, [r0, #-2]
    aed0:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    aed4:	e0030000 	and	r0, r3, r0
    aed8:	7200000b 	andvc	r0, r0, #11
    aedc:	000c0f03 	andeq	r0, ip, r3, lsl #30
    aee0:	6f037400 	svcvs	0x00037400
    aee4:	7500000c 	strvc	r0, [r0, #-12]
    aee8:	000b1603 	andeq	r1, fp, r3, lsl #12
    aeec:	c1037600 	tstgt	r3, r0, lsl #12
    aef0:	7b00000c 	blvc	af28 <_Min_Heap_Size+0xa728>
    aef4:	000e3c03 	andeq	r3, lr, r3, lsl #24
    aef8:	1a037c00 	bne	e9f00 <_Min_Heap_Size+0xe9700>
    aefc:	7e00000f 	cdpvc	0, 0, cr0, cr0, cr15, {0}
    af00:	000a8803 	andeq	r8, sl, r3, lsl #16
    af04:	f4047f00 			; <UNDEFINED> instruction: 0xf4047f00
    af08:	0000000b 	andeq	r0, r0, fp
    af0c:	000de004 	andeq	lr, sp, r4
    af10:	25040100 	strcs	r0, [r4, #-256]	; 0xffffff00
    af14:	0200000c 	andeq	r0, r0, #12
    af18:	00098304 	andeq	r8, r9, r4, lsl #6
    af1c:	ed040300 	stc	3, cr0, [r4, #-0]
    af20:	04000009 	streq	r0, [r0], #-9
    af24:	000e6f04 	andeq	r6, lr, r4, lsl #30
    af28:	0d040500 	cfstr32eq	mvfx0, [r4, #-0]
    af2c:	0600000e 	streq	r0, [r0], -lr
    af30:	000b8004 	andeq	r8, fp, r4
    af34:	91040700 	tstls	r4, r0, lsl #14
    af38:	08000009 	stmdaeq	r0, {r0, r3}
    af3c:	000f0f04 	andeq	r0, pc, r4, lsl #30
    af40:	fc040900 	stc2	9, cr0, [r4], {-0}	; <UNPREDICTABLE>
    af44:	0a00000c 	beq	af7c <_Min_Heap_Size+0xa77c>
    af48:	000d5804 	andeq	r5, sp, r4, lsl #16
    af4c:	22040b00 	andcs	r0, r4, #0, 22
    af50:	0c00000d 	stceq	0, cr0, [r0], {13}
    af54:	000ab204 	andeq	fp, sl, r4, lsl #4
    af58:	78040d00 	stmdavc	r4, {r8, sl, fp}
    af5c:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    af60:	000e1804 	andeq	r1, lr, r4, lsl #16
    af64:	98040f00 	stmdals	r4, {r8, r9, sl, fp}
    af68:	1000000b 	andne	r0, r0, fp
    af6c:	00099c04 	andeq	r9, r9, r4, lsl #24
    af70:	d7041100 	strle	r1, [r4, -r0, lsl #2]
    af74:	1200000d 	andne	r0, r0, #13
    af78:	000b8b04 	andeq	r8, fp, r4, lsl #22
    af7c:	34041300 	strcc	r1, [r4], #-768	; 0xfffffd00
    af80:	1400000b 	strne	r0, [r0], #-11
    af84:	000edd04 	andeq	sp, lr, r4, lsl #26
    af88:	35041500 	strcc	r1, [r4, #-1280]	; 0xfffffb00
    af8c:	1600000c 	strne	r0, [r0], -ip
    af90:	000eeb04 	andeq	lr, lr, r4, lsl #22
    af94:	88041700 	stmdahi	r4, {r8, r9, sl, ip}
    af98:	1800000c 	stmdane	r0, {r2, r3}
    af9c:	000e9c04 	andeq	r9, lr, r4, lsl #24
    afa0:	70041900 	andvc	r1, r4, r0, lsl #18
    afa4:	1a00000a 	bne	afd4 <_Min_Heap_Size+0xa7d4>
    afa8:	000b7304 	andeq	r7, fp, r4, lsl #6
    afac:	f8041b00 			; <UNDEFINED> instruction: 0xf8041b00
    afb0:	1c000009 	stcne	0, cr0, [r0], {9}
    afb4:	000d9504 	andeq	r9, sp, r4, lsl #10
    afb8:	42041d00 	andmi	r1, r4, #0, 26
    afbc:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    afc0:	000b6604 	andeq	r6, fp, r4, lsl #12
    afc4:	e6041f00 	str	r1, [r4], -r0, lsl #30
    afc8:	2000000a 	andcs	r0, r0, sl
    afcc:	000d1504 	andeq	r1, sp, r4, lsl #10
    afd0:	5a042100 	bpl	1133d8 <_Min_Heap_Size+0x112bd8>
    afd4:	2200000c 	andcs	r0, r0, #12
    afd8:	000cb704 	andeq	fp, ip, r4, lsl #14
    afdc:	2d042300 	stccs	3, cr2, [r4, #-0]
    afe0:	2400000a 	strcs	r0, [r0], #-10
    afe4:	000d9f04 	andeq	r9, sp, r4, lsl #30
    afe8:	4c042500 	cfstr32mi	mvfx2, [r4], {-0}
    afec:	2600000b 	strcs	r0, [r0], -fp
    aff0:	000a9504 	andeq	r9, sl, r4, lsl #10
    aff4:	86042700 	strhi	r2, [r4], -r0, lsl #14
    aff8:	2800000d 	stmdacs	r0, {r0, r2, r3}
    affc:	000d6a04 	andeq	r6, sp, r4, lsl #20
    b000:	eb042900 	bl	115408 <_Min_Heap_Size+0x114c08>
    b004:	2a00000c 	bcs	b03c <_Min_Heap_Size+0xa83c>
    b008:	000a3704 	andeq	r3, sl, r4, lsl #14
    b00c:	ae042b00 	vmlage.f64	d2, d4, d0
    b010:	2c000009 	stccs	0, cr0, [r0], {9}
    b014:	000baa04 	andeq	sl, fp, r4, lsl #20
    b018:	f8042d00 			; <UNDEFINED> instruction: 0xf8042d00
    b01c:	2e00000e 	cdpcs	0, 0, cr0, cr0, cr14, {0}
    b020:	000f3904 	andeq	r3, pc, r4, lsl #18
    b024:	f0042f00 			; <UNDEFINED> instruction: 0xf0042f00
    b028:	3000000d 	andcc	r0, r0, sp
    b02c:	000f0504 	andeq	r0, pc, r4, lsl #10
    b030:	0c043100 	stfeqs	f3, [r4], {-0}
    b034:	3200000b 	andcc	r0, r0, #11
    b038:	0009e304 	andeq	lr, r9, r4, lsl #6
    b03c:	d6043300 	strle	r3, [r4], -r0, lsl #6
    b040:	3400000c 	strcc	r0, [r0], #-12
    b044:	000c7d04 	andeq	r7, ip, r4, lsl #26
    b048:	07043500 	streq	r3, [r4, -r0, lsl #10]
    b04c:	3600000d 	strcc	r0, [r0], -sp
    b050:	000c9b04 	andeq	r9, ip, r4, lsl #22
    b054:	43043700 	movwmi	r3, #18176	; 0x4700
    b058:	3800000c 	stmdacc	r0, {r2, r3}
    b05c:	0009d104 	andeq	sp, r9, r4, lsl #2
    b060:	4b043900 	blmi	119468 <_Min_Heap_Size+0x118c68>
    b064:	3a00000f 	bcc	b0a8 <_Min_Heap_Size+0xa8a8>
    b068:	000d3404 	andeq	r3, sp, r4, lsl #8
    b06c:	c4043b00 	strgt	r3, [r4], #-2816	; 0xfffff500
    b070:	3c00000a 	stccc	0, cr0, [r0], {10}
    b074:	000d4604 	andeq	r4, sp, r4, lsl #12
    b078:	02043f00 	andeq	r3, r4, #0, 30
    b07c:	4000000a 	andmi	r0, r0, sl
    b080:	000dc904 	andeq	ip, sp, r4, lsl #18
    b084:	fe044100 	cdp2	1, 0, cr4, cr4, cr0, {0}
    b088:	4200000a 	andmi	r0, r0, #10
    b08c:	000bd404 	andeq	sp, fp, r4, lsl #8
    b090:	5e044300 	cdppl	3, 0, cr4, cr4, cr0, {0}
    b094:	4400000a 	strmi	r0, [r0], #-10
    b098:	000e2a04 	andeq	r2, lr, r4, lsl #20
    b09c:	c2044500 	andgt	r4, r4, #0, 10
    b0a0:	4600000b 	strmi	r0, [r0], -fp
    b0a4:	000a1004 	andeq	r1, sl, r4
    b0a8:	4e044700 	cdpmi	7, 0, cr4, cr4, cr0, {0}
    b0ac:	4800000e 	stmdami	r0, {r1, r2, r3}
    b0b0:	000d7904 	andeq	r7, sp, r4, lsl #18
    b0b4:	c3044900 	movwgt	r4, #18688	; 0x4900
    b0b8:	4a00000e 	bmi	b0f8 <_Min_Heap_Size+0xa8f8>
    b0bc:	000f2604 	andeq	r2, pc, r4, lsl #12
    b0c0:	fe044b00 	vseleq.f64	d4, d4, d0
    b0c4:	4c00000b 	stcmi	0, cr0, [r0], {11}
    b0c8:	000ca504 	andeq	sl, ip, r4, lsl #10
    b0cc:	c0044d00 	andgt	r4, r4, r0, lsl #26
    b0d0:	5000000d 	andpl	r0, r0, sp
    b0d4:	000ccd04 	andeq	ip, ip, r4, lsl #26
    b0d8:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    b0dc:	05c50601 	strbeq	r0, [r5, #1537]	; 0x601
    b0e0:	66060000 	strvs	r0, [r6], -r0
    b0e4:	02000000 	andeq	r0, r0, #0
    b0e8:	024f182b 	subeq	r1, pc, #2818048	; 0x2b0000
    b0ec:	01050000 	mrseq	r0, (UNDEF: 5)
    b0f0:	0005c308 	andeq	ip, r5, r8, lsl #6
    b0f4:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    b0f8:	000003fa 	strdeq	r0, [r0], -sl
    b0fc:	f6070205 			; <UNDEFINED> instruction: 0xf6070205
    b100:	05000007 	streq	r0, [r0, #-7]
    b104:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    b108:	c2060000 	andgt	r0, r6, #0
    b10c:	02000002 	andeq	r0, r0, #2
    b110:	0277194f 	rsbseq	r1, r7, #1294336	; 0x13c000
    b114:	04050000 	streq	r0, [r5], #-0
    b118:	0000b307 	andeq	fp, r0, r7, lsl #6
    b11c:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    b120:	000002e7 	andeq	r0, r0, r7, ror #5
    b124:	ae070805 	cdpge	8, 0, cr0, cr7, cr5, {0}
    b128:	07000000 	streq	r0, [r0, -r0]
    b12c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    b130:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    b134:	0000b807 	andeq	fp, r0, r7, lsl #16
    b138:	00680600 	rsbeq	r0, r8, r0, lsl #12
    b13c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    b140:	00024313 	andeq	r4, r2, r3, lsl r3
    b144:	02c40600 	sbceq	r0, r4, #0, 12
    b148:	30030000 	andcc	r0, r3, r0
    b14c:	00026b14 	andeq	r6, r2, r4, lsl fp
    b150:	02a60800 	adceq	r0, r6, #0, 16
    b154:	b2090000 	andlt	r0, r9, #0
    b158:	0a000002 	beq	b168 <_Min_Heap_Size+0xa968>
    b15c:	02fc0410 	rscseq	r0, ip, #16, 8	; 0x10000000
    b160:	00030709 	andeq	r0, r3, r9, lsl #14
    b164:	214a0b00 	cmpcs	sl, r0, lsl #22
    b168:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    b16c:	02b21202 	adcseq	r1, r2, #536870912	; 0x20000000
    b170:	23020000 	movwcs	r0, #8192	; 0x2000
    b174:	1fb80b00 	svcne	0x00b80b00
    b178:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    b17c:	02b21202 	adcseq	r1, r2, #536870912	; 0x20000000
    b180:	23020000 	movwcs	r0, #8192	; 0x2000
    b184:	41560c04 	cmpmi	r6, r4, lsl #24
    b188:	0004004c 	andeq	r0, r4, ip, asr #32
    b18c:	02b21203 	adcseq	r1, r2, #805306368	; 0x30000000
    b190:	23020000 	movwcs	r0, #8192	; 0x2000
    b194:	1f140b08 	svcne	0x00140b08
    b198:	01040000 	mrseq	r0, (UNDEF: 4)
    b19c:	02b71203 	adcseq	r1, r7, #805306368	; 0x30000000
    b1a0:	23020000 	movwcs	r0, #8192	; 0x2000
    b1a4:	bf0d000c 	svclt	0x000d000c
    b1a8:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b1ac:	bc030302 	stclt	3, cr0, [r3], {2}
    b1b0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    b1b4:	000002a6 	andeq	r0, r0, r6, lsr #5
    b1b8:	00000324 	andeq	r0, r0, r4, lsr #6
    b1bc:	0002930f 	andeq	r9, r2, pc, lsl #6
    b1c0:	10000100 	andne	r0, r0, r0, lsl #2
    b1c4:	000017f6 	strdeq	r1, [r0], -r6
    b1c8:	a6113909 	ldrge	r3, [r1], -r9, lsl #18
    b1cc:	01000002 	tsteq	r0, r2
    b1d0:	05100a01 	ldreq	r0, [r0, #-2561]	; 0xfffff5ff
    b1d4:	7c090137 	stfvcs	f0, [r9], {55}	; 0x37
    b1d8:	0b000003 	bleq	b1ec <_Min_Heap_Size+0xa9ec>
    b1dc:	00002202 	andeq	r2, r0, r2, lsl #4
    b1e0:	11013905 	tstne	r1, r5, lsl #18
    b1e4:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b1e8:	0c002302 	stceq	3, cr2, [r0], {2}
    b1ec:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    b1f0:	b211013a 	andslt	r0, r1, #-2147483634	; 0x8000000e
    b1f4:	02000002 	andeq	r0, r0, #2
    b1f8:	4b0b0423 	blmi	2cc28c <_Min_Heap_Size+0x2cba8c>
    b1fc:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    b200:	b211013b 	andslt	r0, r1, #-1073741810	; 0xc000000e
    b204:	02000002 	andeq	r0, r0, #2
    b208:	050b0823 	streq	r0, [fp, #-2083]	; 0xfffff7dd
    b20c:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    b210:	b211013c 	andslt	r0, r1, #60, 2
    b214:	02000002 	andeq	r0, r0, #2
    b218:	0d000c23 	stceq	12, cr0, [r0, #-140]	; 0xffffff74
    b21c:	000023a1 	andeq	r2, r0, r1, lsr #7
    b220:	03013d05 	movweq	r3, #7429	; 0x1d05
    b224:	00000332 	andeq	r0, r0, r2, lsr r3
    b228:	68051c0a 	stmdavs	r5, {r1, r3, sl, fp, ip}
    b22c:	04020901 	streq	r0, [r2], #-2305	; 0xfffff6ff
    b230:	410c0000 	mrsmi	r0, (UNDEF: 12)
    b234:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    b238:	b211016a 	andslt	r0, r1, #-2147483622	; 0x8000001a
    b23c:	02000002 	andeq	r0, r0, #2
    b240:	7e0b0023 	cdpvc	0, 0, cr0, cr11, cr3, {1}
    b244:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    b248:	b211016b 	andslt	r0, r1, #-1073741798	; 0xc000001a
    b24c:	02000002 	andeq	r0, r0, #2
    b250:	7b0b0423 	blvc	2cc2e4 <_Min_Heap_Size+0x2cbae4>
    b254:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    b258:	b211016c 	andslt	r0, r1, #108, 2
    b25c:	02000002 	andeq	r0, r0, #2
    b260:	530c0823 	movwpl	r0, #51235	; 0xc823
    b264:	6d050052 	stcvs	0, cr0, [r5, #-328]	; 0xfffffeb8
    b268:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b26c:	23020000 	movwcs	r0, #8192	; 0x2000
    b270:	52430c0c 	subpl	r0, r3, #12, 24	; 0xc00
    b274:	016e0500 	cmneq	lr, r0, lsl #10
    b278:	0002b211 	andeq	fp, r2, r1, lsl r2
    b27c:	10230200 	eorne	r0, r3, r0, lsl #4
    b280:	0017600b 	andseq	r6, r7, fp
    b284:	016f0500 	cmneq	pc, r0, lsl #10
    b288:	0002b211 	andeq	fp, r2, r1, lsl r2
    b28c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    b290:	0017920b 	andseq	r9, r7, fp, lsl #4
    b294:	01700500 	cmneq	r0, r0, lsl #10
    b298:	0002b211 	andeq	fp, r2, r1, lsl r2
    b29c:	18230200 	stmdane	r3!, {r9}
    b2a0:	17660d00 	strbne	r0, [r6, -r0, lsl #26]!
    b2a4:	71050000 	mrsvc	r0, (UNDEF: 5)
    b2a8:	03890301 	orreq	r0, r9, #67108864	; 0x4000000
    b2ac:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    b2b0:	0901f405 	stmdbeq	r1, {r0, r2, sl, ip, sp, lr, pc}
    b2b4:	000005fb 	strdeq	r0, [r0], -fp
    b2b8:	0052430c 	subseq	r4, r2, ip, lsl #6
    b2bc:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    b2c0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b2c4:	0b002302 	bleq	13ed4 <_Min_Heap_Size+0x136d4>
    b2c8:	00000282 	andeq	r0, r0, r2, lsl #5
    b2cc:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    b2d0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b2d4:	0b042302 	bleq	113ee4 <_Min_Heap_Size+0x1136e4>
    b2d8:	00000285 	andeq	r0, r0, r5, lsl #5
    b2dc:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    b2e0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b2e4:	0c082302 	stceq	3, cr2, [r8], {2}
    b2e8:	00524943 	subseq	r4, r2, r3, asr #18
    b2ec:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    b2f0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b2f4:	0b0c2302 	bleq	313f04 <_Min_Heap_Size+0x313704>
    b2f8:	00000166 	andeq	r0, r0, r6, ror #2
    b2fc:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    b300:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b304:	0b102302 	bleq	413f14 <_Min_Heap_Size+0x413714>
    b308:	0000077e 	andeq	r0, r0, lr, ror r7
    b30c:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    b310:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b314:	0b142302 	bleq	513f24 <_Min_Heap_Size+0x513724>
    b318:	000006d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b31c:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    b320:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b324:	0b182302 	bleq	613f34 <_Min_Heap_Size+0x613734>
    b328:	0000055e 	andeq	r0, r0, lr, asr r5
    b32c:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    b330:	000002a6 	andeq	r0, r0, r6, lsr #5
    b334:	0b1c2302 	bleq	713f44 <_Min_Heap_Size+0x713744>
    b338:	0000053b 	andeq	r0, r0, fp, lsr r5
    b33c:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    b340:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b344:	0b202302 	bleq	813f54 <_Min_Heap_Size+0x813754>
    b348:	000001f9 	strdeq	r0, [r0], -r9
    b34c:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    b350:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b354:	0b242302 	bleq	913f64 <_Min_Heap_Size+0x913764>
    b358:	00000568 	andeq	r0, r0, r8, ror #10
    b35c:	11020005 	tstne	r2, r5
    b360:	00000314 	andeq	r0, r0, r4, lsl r3
    b364:	0b282302 	bleq	a13f74 <_Min_Heap_Size+0xa13774>
    b368:	000008d4 	ldrdeq	r0, [r0], -r4
    b36c:	11020105 	tstne	r2, r5, lsl #2
    b370:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b374:	0b302302 	bleq	c13f84 <_Min_Heap_Size+0xc13784>
    b378:	000007ee 	andeq	r0, r0, lr, ror #15
    b37c:	11020205 	tstne	r2, r5, lsl #4
    b380:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b384:	0b342302 	bleq	d13f94 <_Min_Heap_Size+0xd13794>
    b388:	000004d6 	ldrdeq	r0, [r0], -r6
    b38c:	11020305 	tstne	r2, r5, lsl #6
    b390:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b394:	0b382302 	bleq	e13fa4 <_Min_Heap_Size+0xe137a4>
    b398:	00000572 	andeq	r0, r0, r2, ror r5
    b39c:	11020405 	tstne	r2, r5, lsl #8
    b3a0:	000002a6 	andeq	r0, r0, r6, lsr #5
    b3a4:	0b3c2302 	bleq	f13fb4 <_Min_Heap_Size+0xf137b4>
    b3a8:	0000070b 	andeq	r0, r0, fp, lsl #14
    b3ac:	11020505 	tstne	r2, r5, lsl #10
    b3b0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3b4:	0b402302 	bleq	1013fc4 <_Min_Heap_Size+0x10137c4>
    b3b8:	000006c8 	andeq	r0, r0, r8, asr #13
    b3bc:	11020605 	tstne	r2, r5, lsl #12
    b3c0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3c4:	0b442302 	bleq	1113fd4 <_Min_Heap_Size+0x11137d4>
    b3c8:	0000057c 	andeq	r0, r0, ip, ror r5
    b3cc:	11020705 	tstne	r2, r5, lsl #14
    b3d0:	00000314 	andeq	r0, r0, r4, lsl r3
    b3d4:	0b482302 	bleq	1213fe4 <_Min_Heap_Size+0x12137e4>
    b3d8:	0000012b 	andeq	r0, r0, fp, lsr #2
    b3dc:	11020805 	tstne	r2, r5, lsl #16
    b3e0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3e4:	0b502302 	bleq	1413ff4 <_Min_Heap_Size+0x14137f4>
    b3e8:	00000510 	andeq	r0, r0, r0, lsl r5
    b3ec:	11020905 	tstne	r2, r5, lsl #18
    b3f0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3f4:	0b542302 	bleq	1514004 <_Min_Heap_Size+0x1513804>
    b3f8:	00000696 	muleq	r0, r6, r6
    b3fc:	11020a05 	tstne	r2, r5, lsl #20
    b400:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b404:	0b582302 	bleq	1614014 <_Min_Heap_Size+0x1613814>
    b408:	00000586 	andeq	r0, r0, r6, lsl #11
    b40c:	11020b05 	tstne	r2, r5, lsl #22
    b410:	000002a6 	andeq	r0, r0, r6, lsr #5
    b414:	0b5c2302 	bleq	1714024 <_Min_Heap_Size+0x1713824>
    b418:	0000001b 	andeq	r0, r0, fp, lsl r0
    b41c:	11020c05 	tstne	r2, r5, lsl #24
    b420:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b424:	0b602302 	bleq	1814034 <_Min_Heap_Size+0x1813834>
    b428:	000003eb 	andeq	r0, r0, fp, ror #7
    b42c:	11020d05 	tstne	r2, r5, lsl #26
    b430:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b434:	0b642302 	bleq	1914044 <_Min_Heap_Size+0x1913844>
    b438:	00000590 	muleq	r0, r0, r5
    b43c:	11020e05 	tstne	r2, r5, lsl #28
    b440:	00000314 	andeq	r0, r0, r4, lsl r3
    b444:	0b682302 	bleq	1a14054 <_Min_Heap_Size+0x1a13854>
    b448:	00000870 	andeq	r0, r0, r0, ror r8
    b44c:	11020f05 	tstne	r2, r5, lsl #30
    b450:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b454:	0c702302 	ldcleq	3, cr2, [r0], #-8
    b458:	00525343 	subseq	r5, r2, r3, asr #6
    b45c:	11021005 	tstne	r2, r5
    b460:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b464:	0b742302 	bleq	1d14074 <_Min_Heap_Size+0x1d13874>
    b468:	0000059a 	muleq	r0, sl, r5
    b46c:	11021105 	tstne	r2, r5, lsl #2
    b470:	00000314 	andeq	r0, r0, r4, lsl r3
    b474:	0b782302 	bleq	1e14084 <_Min_Heap_Size+0x1e13884>
    b478:	0000083f 	andeq	r0, r0, pc, lsr r8
    b47c:	11021205 	tstne	r2, r5, lsl #4
    b480:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b484:	01802303 	orreq	r2, r0, r3, lsl #6
    b488:	00037e0b 	andeq	r7, r3, fp, lsl #28
    b48c:	02130500 	andseq	r0, r3, #0, 10
    b490:	0002b211 	andeq	fp, r2, r1, lsl r2
    b494:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    b498:	cd0d0001 	stcgt	0, cr0, [sp, #-4]
    b49c:	05000001 	streq	r0, [r0, #-1]
    b4a0:	0f030214 	svceq	0x00030214
    b4a4:	02000004 	andeq	r0, r0, #4
    b4a8:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    b4ac:	bf060000 	svclt	0x00060000
    b4b0:	00062301 	andeq	r2, r6, r1, lsl #6
    b4b4:	178a0400 	strne	r0, [sl, r0, lsl #8]
    b4b8:	04000000 	streq	r0, [r0], #-0
    b4bc:	00001774 	andeq	r1, r0, r4, ror r7
    b4c0:	08050001 	stmdaeq	r5, {r0}
    b4c4:	00072604 	andeq	r2, r7, r4, lsl #12
    b4c8:	01070200 	mrseq	r0, (UNDEF: 39)
    b4cc:	0000024f 	andeq	r0, r0, pc, asr #4
    b4d0:	51012707 	tstpl	r1, r7, lsl #14
    b4d4:	04000006 	streq	r0, [r0], #-6
    b4d8:	0000035c 	andeq	r0, r0, ip, asr r3
    b4dc:	07010400 	streq	r0, [r1, -r0, lsl #8]
    b4e0:	04010000 	streq	r0, [r1], #-0
    b4e4:	00000909 	andeq	r0, r0, r9, lsl #18
    b4e8:	033d0402 	teqeq	sp, #33554432	; 0x2000000
    b4ec:	00030000 	andeq	r0, r3, r0
    b4f0:	0012f606 	andseq	pc, r2, r6, lsl #12
    b4f4:	032c0700 			; <UNDEFINED> instruction: 0x032c0700
    b4f8:	0000062a 	andeq	r0, r0, sl, lsr #12
    b4fc:	4f010702 	svcmi	0x00010702
    b500:	08000002 	stmdaeq	r0, {r1}
    b504:	06840132 			; <UNDEFINED> instruction: 0x06840132
    b508:	46040000 	strmi	r0, [r4], -r0
    b50c:	64000022 	strvs	r0, [r0], #-34	; 0xffffffde
    b510:	00228604 	eoreq	r8, r2, r4, lsl #12
    b514:	d5040a00 	strle	r0, [r4, #-2560]	; 0xfffff600
    b518:	01000022 	tsteq	r0, r2, lsr #32
    b51c:	00232604 	eoreq	r2, r3, r4, lsl #12
    b520:	06000100 	streq	r0, [r0], -r0, lsl #2
    b524:	000021d1 	ldrdeq	r2, [r0], -r1
    b528:	5d033708 	stcpl	7, cr3, [r3, #-32]	; 0xffffffe0
    b52c:	10000006 	andne	r0, r0, r6
    b530:	000022ce 	andeq	r2, r0, lr, asr #5
    b534:	b216cc08 	andslt	ip, r6, #8, 24	; 0x800
    b538:	01000002 	tsteq	r0, r2
    b53c:	181e1001 	ldmdane	lr, {r0, ip}
    b540:	cd080000 	stcgt	0, cr0, [r8, #-0]
    b544:	0002a611 	andeq	sl, r2, r1, lsl r6
    b548:	10010100 	andne	r0, r1, r0, lsl #2
    b54c:	000022c3 	andeq	r2, r0, r3, asr #5
    b550:	841cce08 	ldrhi	ip, [ip], #-3592	; 0xfffff1f8
    b554:	01000006 	tsteq	r0, r6
    b558:	06901101 	ldreq	r1, [r0], r1, lsl #2
    b55c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    b560:	d403050f 	strle	r0, [r3], #-1295	; 0xfffffaf1
    b564:	11200000 			; <UNDEFINED> instruction: 0x11200000
    b568:	0000069e 	muleq	r0, lr, r6
    b56c:	050a5f01 	streq	r5, [sl, #-3841]	; 0xfffff0ff
    b570:	00000403 	andeq	r0, r0, r3, lsl #8
    b574:	06ac1120 	strteq	r1, [ip], r0, lsr #2
    b578:	60010000 	andvs	r0, r1, r0
    b57c:	00030515 	andeq	r0, r3, r5, lsl r5
    b580:	12200000 	eorne	r0, r0, #0
    b584:	00220901 	eoreq	r0, r2, r1, lsl #18
    b588:	02330100 	eorseq	r0, r3, #0, 2
    b58c:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b598:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b59c:	01120100 	tsteq	r2, r0, lsl #2
    b5a0:	00002319 	andeq	r2, r0, r9, lsl r3
    b5a4:	0a022a01 	beq	95db0 <_Min_Heap_Size+0x955b0>
    b5a8:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b5b4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b5b8:	0c011201 	sfmeq	f1, 4, [r1], {1}
    b5bc:	01000023 	tsteq	r0, r3, lsr #32
    b5c0:	010a0221 	tsteq	sl, r1, lsr #4
    b5c4:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    b5d0:	01007d02 	tsteq	r0, r2, lsl #26
    b5d4:	24290113 	strtcs	r0, [r9], #-275	; 0xfffffeed
    b5d8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    b5dc:	00010602 	andeq	r0, r1, r2, lsl #12
    b5e0:	00000000 	andeq	r0, r0, r0
    b5e4:	02000000 	andeq	r0, r0, #0
    b5e8:	1301007d 	movwne	r0, #4221	; 0x107d
    b5ec:	0023da01 	eoreq	sp, r3, r1, lsl #20
    b5f0:	020d0100 	andeq	r0, sp, #0, 2
    b5f4:	00000106 	andeq	r0, r0, r6, lsl #2
    b5f8:	00000000 	andeq	r0, r0, r0
    b5fc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b600:	01130100 	tsteq	r3, r0, lsl #2
    b604:	00002352 	andeq	r2, r0, r2, asr r3
    b608:	06020201 	streq	r0, [r2], -r1, lsl #4
    b60c:	00000001 	andeq	r0, r0, r1
    b610:	00000000 	andeq	r0, r0, r0
    b614:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b618:	16011301 	strne	r1, [r1], -r1, lsl #6
    b61c:	01000022 	tsteq	r0, r2, lsr #32
    b620:	010601f9 	strdeq	r0, [r6, -r9]
	...
    b62c:	01007d02 	tsteq	r0, r2, lsl #26
    b630:	229a0113 	addscs	r0, sl, #-1073741820	; 0xc0000004
    b634:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    b638:	00010601 	andeq	r0, r1, r1, lsl #12
    b63c:	00000000 	andeq	r0, r0, r0
    b640:	02000000 	andeq	r0, r0, #0
    b644:	1301007d 	movwne	r0, #4221	; 0x107d
    b648:	0022e801 	eoreq	lr, r2, r1, lsl #16
    b64c:	01e70100 	mvneq	r0, r0, lsl #2
    b650:	00000106 	andeq	r0, r0, r6, lsl #2
    b654:	00000000 	andeq	r0, r0, r0
    b658:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b65c:	01130100 	tsteq	r3, r0, lsl #2
    b660:	00002267 	andeq	r2, r0, r7, ror #4
    b664:	0601de01 	streq	sp, [r1], -r1, lsl #28
    b668:	00000001 	andeq	r0, r0, r1
    b66c:	00000000 	andeq	r0, r0, r0
    b670:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b674:	83011301 	movwhi	r1, #4865	; 0x1301
    b678:	01000023 	tsteq	r0, r3, lsr #32
    b67c:	010601d5 	ldrdeq	r0, [r6, -r5]
	...
    b688:	01007d02 	tsteq	r0, r2, lsl #26
    b68c:	24450112 	strbcs	r0, [r5], #-274	; 0xfffffeee
    b690:	cc010000 	stcgt	0, cr0, [r1], {-0}
    b694:	a6010a01 	strge	r0, [r1], -r1, lsl #20
    b698:	00000002 	andeq	r0, r0, r2
    b69c:	00000000 	andeq	r0, r0, r0
    b6a0:	02000000 	andeq	r0, r0, #0
    b6a4:	1201007d 	andne	r0, r1, #125	; 0x7d
    b6a8:	0023b001 	eoreq	fp, r3, r1
    b6ac:	01c30100 	biceq	r0, r3, r0, lsl #2
    b6b0:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b6bc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b6c0:	01120100 	tsteq	r2, r0, lsl #2
    b6c4:	000021bf 			; <UNDEFINED> instruction: 0x000021bf
    b6c8:	0a01ba01 	beq	79ed4 <_Min_Heap_Size+0x796d4>
    b6cc:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b6d8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b6dc:	3c011301 	stccc	3, cr1, [r1], {1}
    b6e0:	01000023 	tsteq	r0, r3, lsr #32
    b6e4:	010d01b0 			; <UNDEFINED> instruction: 0x010d01b0
	...
    b6f0:	01007d02 	tsteq	r0, r2, lsl #26
    b6f4:	23730113 	cmncs	r3, #-1073741820	; 0xc0000004
    b6f8:	a0010000 	andge	r0, r1, r0
    b6fc:	00010d01 	andeq	r0, r1, r1, lsl #26
    b700:	00000000 	andeq	r0, r0, r0
    b704:	02000000 	andeq	r0, r0, #0
    b708:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    b70c:	00075201 	andeq	r5, r7, r1, lsl #4
    b710:	01860100 	orreq	r0, r6, r0, lsl #2
    b714:	16c8010d 	strbne	r0, [r8], sp, lsl #2
    b718:	16f00800 	ldrbtne	r0, [r0], r0, lsl #16
    b71c:	774f0800 	strbvc	r0, [pc, -r0, lsl #16]
    b720:	da010000 	ble	4b728 <_Min_Heap_Size+0x4af28>
    b724:	15000008 	strne	r0, [r0, #-8]
    b728:	00000756 	andeq	r0, r0, r6, asr r7
    b72c:	20018601 	andcs	r8, r1, r1, lsl #12
    b730:	000002a6 	andeq	r0, r0, r6, lsr #5
    b734:	00007775 	andeq	r7, r0, r5, ror r7
    b738:	0000776f 	andeq	r7, r0, pc, ror #14
    b73c:	00154116 	andseq	r4, r5, r6, lsl r1
    b740:	01880100 	orreq	r0, r8, r0, lsl #2
    b744:	0002a60c 	andeq	sl, r2, ip, lsl #12
    b748:	0077a500 	rsbseq	sl, r7, r0, lsl #10
    b74c:	0077a100 	rsbseq	sl, r7, r0, lsl #2
    b750:	25f61600 	ldrbcs	r1, [r6, #1536]!	; 0x600
    b754:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    b758:	02a60c01 	adceq	r0, r6, #256	; 0x100
    b75c:	77c50000 	strbvc	r0, [r5, r0]
    b760:	77c30000 	strbvc	r0, [r3, r0]
    b764:	d0170000 	andsle	r0, r7, r0
    b768:	97080016 	smladls	r8, r6, r0, r0
    b76c:	17000009 	strne	r0, [r0, -r9]
    b770:	080016e2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, ip}
    b774:	00000997 	muleq	r0, r7, r9
    b778:	bd011200 	sfmlt	f1, 4, [r1, #-0]
    b77c:	01000023 	tsteq	r0, r3, lsr #32
    b780:	01150176 	tsteq	r5, r6, ror r1
    b784:	00000684 	andeq	r0, r0, r4, lsl #13
	...
    b790:	01007d02 	tsteq	r0, r2, lsl #26
    b794:	21f20118 	mvnscs	r0, r8, lsl r1
    b798:	55010000 	strpl	r0, [r1, #-0]
    b79c:	51011301 	tstpl	r1, r1, lsl #6
    b7a0:	00000006 	andeq	r0, r0, r6
    b7a4:	00000000 	andeq	r0, r0, r0
    b7a8:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    b7ac:	01000077 	tsteq	r0, r7, ror r0
    b7b0:	0000097c 	andeq	r0, r0, ip, ror r9
    b7b4:	00107e15 	andseq	r7, r0, r5, lsl lr
    b7b8:	01550100 	cmpeq	r5, r0, lsl #2
    b7bc:	00068437 	andeq	r8, r6, r7, lsr r4
    b7c0:	00780000 	rsbseq	r0, r8, r0
    b7c4:	0077f800 	rsbseq	pc, r7, r0, lsl #16
    b7c8:	19961600 	ldmibne	r6, {r9, sl, ip}
    b7cc:	57010000 	strpl	r0, [r1, -r0]
    b7d0:	06511501 	ldrbeq	r1, [r1], -r1, lsl #10
    b7d4:	78420000 	stmdavc	r2, {}^	; <UNPREDICTABLE>
    b7d8:	783a0000 	ldmdavc	sl!, {}	; <UNPREDICTABLE>
    b7dc:	cd160000 	ldcgt	0, cr0, [r6, #-0]
    b7e0:	01000023 	tsteq	r0, r3, lsr #32
    b7e4:	84170158 	ldrhi	r0, [r7], #-344	; 0xfffffea8
    b7e8:	7a000006 	bvc	b808 <_Min_Heap_Size+0xb008>
    b7ec:	78000078 	stmdavc	r0, {r3, r4, r5, r6}
    b7f0:	19000078 	stmdbne	r0, {r3, r4, r5, r6}
    b7f4:	00000000 	andeq	r0, r0, r0
    b7f8:	00000ac5 	andeq	r0, r0, r5, asr #21
    b7fc:	00000972 	andeq	r0, r0, r2, ror r9
    b800:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    b804:	00000003 	andeq	r0, r0, r3
    b808:	51011a00 	tstpl	r1, r0, lsl #20
    b80c:	015a0a03 	cmpeq	sl, r3, lsl #20
    b810:	00001700 	andeq	r1, r0, r0, lsl #14
    b814:	09c90000 	stmibeq	r9, {}^	; <UNPREDICTABLE>
    b818:	12000000 	andne	r0, r0, #0
    b81c:	00223601 	eoreq	r3, r2, r1, lsl #12
    b820:	014c0100 	mrseq	r0, (UNDEF: 92)
    b824:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b830:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b834:	01120100 	tsteq	r2, r0, lsl #2
    b838:	0000139b 	muleq	r0, fp, r3
    b83c:	11014301 	tstne	r1, r1, lsl #6
    b840:	0002a601 	andeq	sl, r2, r1, lsl #12
    b844:	0016bc00 	andseq	fp, r6, r0, lsl #24
    b848:	0016c808 	andseq	ip, r6, r8, lsl #16
    b84c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    b850:	a2011301 	andge	r1, r1, #67108864	; 0x4000000
    b854:	0100000f 	tsteq	r0, pc
    b858:	010d0138 	tsteq	sp, r8, lsr r1
    b85c:	080016a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, ip}
    b860:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
    b864:	01007d02 	tsteq	r0, r2, lsl #26
    b868:	1806011b 	stmdane	r6, {r0, r1, r3, r4, r8}
    b86c:	fd010000 	stc2	0, cr0, [r1, #-0]
    b870:	0651011a 			; <UNDEFINED> instruction: 0x0651011a
    b874:	16240000 	strtne	r0, [r4], -r0
    b878:	16700800 	ldrbtne	r0, [r0], -r0, lsl #16
    b87c:	788d0800 	stmvc	sp, {fp}
    b880:	21010000 	mrscs	r0, (UNDEF: 1)
    b884:	1c00000a 	stcne	0, cr0, [r0], {10}
    b888:	000021e5 	andeq	r2, r0, r5, ror #3
    b88c:	a630fd01 	ldrtge	pc, [r0], -r1, lsl #26	; <UNPREDICTABLE>
    b890:	b3000002 	movwlt	r0, #2
    b894:	ad000078 	stcge	0, cr0, [r0, #-480]	; 0xfffffe20
    b898:	17000078 	smlsdxne	r0, r8, r0, r0
    b89c:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
    b8a0:	00000ad4 	ldrdeq	r0, [r0], -r4
    b8a4:	0016561d 	andseq	r5, r6, sp, lsl r6
    b8a8:	000ae308 	andeq	lr, sl, r8, lsl #6
    b8ac:	50011a00 	andpl	r1, r1, r0, lsl #20
    b8b0:	1aff0902 	bne	fffcdcc0 <_estack+0xdffcca88>
    b8b4:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    b8b8:	52011a00 	andpl	r1, r1, #0, 20
    b8bc:	00003001 	andeq	r3, r0, r1
    b8c0:	2259011e 	subscs	r0, r9, #-2147483641	; 0x80000007
    b8c4:	e6010000 	str	r0, [r1], -r0
    b8c8:	0000010d 	andeq	r0, r0, sp, lsl #2
    b8cc:	00000000 	andeq	r0, r0, r0
    b8d0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b8d4:	011e0100 	tsteq	lr, r0, lsl #2
    b8d8:	00001042 	andeq	r1, r0, r2, asr #32
    b8dc:	010ddb01 	tsteq	sp, r1, lsl #22
	...
    b8e8:	01007d02 	tsteq	r0, r2, lsl #26
    b8ec:	22b8011b 	adcscs	r0, r8, #-1073741818	; 0xc0000006
    b8f0:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    b8f4:	06510113 			; <UNDEFINED> instruction: 0x06510113
	...
    b900:	78df0000 	ldmvc	pc, {}^	; <UNPREDICTABLE>
    b904:	76010000 	strvc	r0, [r1], -r0
    b908:	1700000a 	strne	r0, [r0, -sl]
    b90c:	00000000 	andeq	r0, r0, r0
    b910:	00000a21 	andeq	r0, r0, r1, lsr #20
    b914:	63011b00 	movwvs	r1, #6912	; 0x1b00
    b918:	01000004 	tsteq	r0, r4
    b91c:	5101139d 			; <UNDEFINED> instruction: 0x5101139d
    b920:	70000006 	andvc	r0, r0, r6
    b924:	a4080016 	strge	r0, [r8], #-22	; 0xffffffea
    b928:	ff080016 			; <UNDEFINED> instruction: 0xff080016
    b92c:	01000078 	tsteq	r0, r8, ror r0
    b930:	00000ac5 	andeq	r0, r0, r5, asr #21
    b934:	00169219 	andseq	r9, r6, r9, lsl r2
    b938:	000af208 	andeq	pc, sl, r8, lsl #4
    b93c:	000aa800 	andeq	sl, sl, r0, lsl #16
    b940:	50011a00 	andpl	r1, r1, r0, lsl #20
    b944:	19003301 	stmdbne	r0, {r0, r8, r9, ip, sp}
    b948:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
    b94c:	000009c9 	andeq	r0, r0, r9, asr #19
    b950:	00000abb 			; <UNDEFINED> instruction: 0x00000abb
    b954:	0150011a 	cmpeq	r0, sl, lsl r1
    b958:	9c17003f 	ldcls	0, cr0, [r7], {63}	; 0x3f
    b95c:	37080016 	smladcc	r8, r6, r0, r0
    b960:	0000000a 	andeq	r0, r0, sl
    b964:	b801011f 	stmdalt	r1, {r0, r1, r2, r3, r4, r8}
    b968:	b8000004 	stmdalt	r0, {r2}
    b96c:	0a000004 	beq	b984 <_Min_Heap_Size+0xb184>
    b970:	1f0801e6 	svcne	0x000801e6
    b974:	1d7b0101 	ldfnee	f0, [fp, #-4]!
    b978:	1d7b0000 	ldclne	0, cr0, [fp, #-0]
    b97c:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    b980:	011f0a01 	tsteq	pc, r1, lsl #20
    b984:	000dab01 	andeq	sl, sp, r1, lsl #22
    b988:	000dab00 	andeq	sl, sp, r0, lsl #22
    b98c:	01050b00 	tsteq	r5, r0, lsl #22
    b990:	01011f06 	tsteq	r1, r6, lsl #30
    b994:	00002067 	andeq	r2, r0, r7, rrx
    b998:	00002067 	andeq	r2, r0, r7, rrx
    b99c:	0601040b 	streq	r0, [r1], -fp, lsl #8
    b9a0:	0005af00 	andeq	sl, r5, r0, lsl #30
    b9a4:	f5000200 			; <UNDEFINED> instruction: 0xf5000200
    b9a8:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    b9ac:	0005d701 	andeq	sp, r5, r1, lsl #14
    b9b0:	24520c00 	ldrbcs	r0, [r2], #-3072	; 0xfffff400
    b9b4:	04200000 	strteq	r0, [r0], #-0
    b9b8:	06800000 	streq	r0, [r0], r0
	...
    b9c4:	87930000 	ldrhi	r0, [r3, r0]
    b9c8:	01020000 	mrseq	r0, (UNDEF: 2)
    b9cc:	0005c506 	andeq	ip, r5, r6, lsl #10
    b9d0:	00660300 	rsbeq	r0, r6, r0, lsl #6
    b9d4:	2b020000 	blcs	8b9dc <_Min_Heap_Size+0x8b1dc>
    b9d8:	00003c18 	andeq	r3, r0, r8, lsl ip
    b9dc:	08010200 	stmdaeq	r1, {r9}
    b9e0:	000005c3 	andeq	r0, r0, r3, asr #11
    b9e4:	fa050202 	blx	14c1f4 <_Min_Heap_Size+0x14b9f4>
    b9e8:	02000003 	andeq	r0, r0, #3
    b9ec:	07f60702 	ldrbeq	r0, [r6, r2, lsl #14]!
    b9f0:	04020000 	streq	r0, [r2], #-0
    b9f4:	0002ec05 	andeq	lr, r2, r5, lsl #24
    b9f8:	02c20300 	sbceq	r0, r2, #0, 6
    b9fc:	4f020000 	svcmi	0x00020000
    ba00:	00006419 	andeq	r6, r0, r9, lsl r4
    ba04:	07040200 	streq	r0, [r4, -r0, lsl #4]
    ba08:	000000b3 	strheq	r0, [r0], -r3
    ba0c:	e7050802 	str	r0, [r5, -r2, lsl #16]
    ba10:	02000002 	andeq	r0, r0, #2
    ba14:	00ae0708 	adceq	r0, lr, r8, lsl #14
    ba18:	04040000 	streq	r0, [r4], #-0
    ba1c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    ba20:	07040200 	streq	r0, [r4, -r0, lsl #4]
    ba24:	000000b8 	strheq	r0, [r0], -r8
    ba28:	00006803 	andeq	r6, r0, r3, lsl #16
    ba2c:	13180300 	tstne	r8, #0, 6
    ba30:	00000030 	andeq	r0, r0, r0, lsr r0
    ba34:	00008705 	andeq	r8, r0, r5, lsl #14
    ba38:	00870600 	addeq	r0, r7, r0, lsl #12
    ba3c:	c4030000 	strgt	r0, [r3], #-0
    ba40:	03000002 	movweq	r0, #2
    ba44:	00581430 	subseq	r1, r8, r0, lsr r4
    ba48:	9d050000 	stcls	0, cr0, [r5, #-0]
    ba4c:	06000000 	streq	r0, [r0], -r0
    ba50:	000000a9 	andeq	r0, r0, r9, lsr #1
    ba54:	bd048c07 	stclt	12, cr8, [r4, #-28]	; 0xffffffe4
    ba58:	020f0901 	andeq	r0, pc, #16384	; 0x4000
    ba5c:	01080000 	mrseq	r0, (UNDEF: 8)
    ba60:	04000001 	streq	r0, [r0], #-1
    ba64:	ae1201bf 	mrcge	1, 0, r0, cr2, cr15, {5}
    ba68:	02000000 	andeq	r0, r0, #0
    ba6c:	89080023 	stmdbhi	r8, {r0, r1, r5}
    ba70:	04000003 	streq	r0, [r0], #-3
    ba74:	a91201c0 	ldmdbge	r2, {r6, r7, r8}
    ba78:	02000000 	andeq	r0, r0, #0
    ba7c:	63080423 	movwvs	r0, #33827	; 0x8423
    ba80:	04000003 	streq	r0, [r0], #-3
    ba84:	a91201c1 	ldmdbge	r2, {r0, r6, r7, r8}
    ba88:	02000000 	andeq	r0, r0, #0
    ba8c:	a2080823 	andge	r0, r8, #2293760	; 0x230000
    ba90:	04000003 	streq	r0, [r0], #-3
    ba94:	a91201c2 	ldmdbge	r2, {r1, r6, r7, r8}
    ba98:	02000000 	andeq	r0, r0, #0
    ba9c:	53090c23 	movwpl	r0, #39971	; 0x9c23
    baa0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    baa4:	a91201c3 	ldmdbge	r2, {r0, r1, r6, r7, r8}
    baa8:	02000000 	andeq	r0, r0, #0
    baac:	43091023 	movwmi	r1, #36899	; 0x9023
    bab0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    bab4:	a91201c4 	ldmdbge	r2, {r2, r6, r7, r8}
    bab8:	02000000 	andeq	r0, r0, #0
    babc:	53091423 	movwpl	r1, #37923	; 0x9423
    bac0:	04005048 	streq	r5, [r0], #-72	; 0xffffffb8
    bac4:	1f1201c5 	svcne	0x001201c5
    bac8:	02000002 	andeq	r0, r0, #2
    bacc:	d1081823 	tstle	r8, r3, lsr #16
    bad0:	04000005 	streq	r0, [r0], #-5
    bad4:	a91201c6 	ldmdbge	r2, {r1, r2, r6, r7, r8}
    bad8:	02000000 	andeq	r0, r0, #0
    badc:	c6082423 	strgt	r2, [r8], -r3, lsr #8
    bae0:	04000004 	streq	r0, [r0], #-4
    bae4:	a91201c7 	ldmdbge	r2, {r0, r1, r2, r6, r7, r8}
    bae8:	02000000 	andeq	r0, r0, #0
    baec:	1a082823 	bne	215b80 <_Min_Heap_Size+0x215380>
    baf0:	04000009 	streq	r0, [r0], #-9
    baf4:	a91201c8 	ldmdbge	r2, {r3, r6, r7, r8}
    baf8:	02000000 	andeq	r0, r0, #0
    bafc:	a8082c23 	stmdage	r8, {r0, r1, r5, sl, fp, sp}
    bb00:	04000003 	streq	r0, [r0], #-3
    bb04:	a91201c9 	ldmdbge	r2, {r0, r3, r6, r7, r8}
    bb08:	02000000 	andeq	r0, r0, #0
    bb0c:	c6083023 	strgt	r3, [r8], -r3, lsr #32
    bb10:	04000003 	streq	r0, [r0], #-3
    bb14:	a91201ca 	ldmdbge	r2, {r1, r3, r6, r7, r8}
    bb18:	02000000 	andeq	r0, r0, #0
    bb1c:	9c083423 	cfstrsls	mvf3, [r8], {35}	; 0x23
    bb20:	04000002 	streq	r0, [r0], #-2
    bb24:	a91201cb 	ldmdbge	r2, {r0, r1, r3, r6, r7, r8}
    bb28:	02000000 	andeq	r0, r0, #0
    bb2c:	d6083823 	strle	r3, [r8], -r3, lsr #16
    bb30:	04000007 	streq	r0, [r0], #-7
    bb34:	a91201cc 	ldmdbge	r2, {r2, r3, r6, r7, r8}
    bb38:	02000000 	andeq	r0, r0, #0
    bb3c:	50093c23 	andpl	r3, r9, r3, lsr #24
    bb40:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    bb44:	391201cd 	ldmdbcc	r2, {r0, r2, r3, r6, r7, r8}
    bb48:	02000002 	andeq	r0, r0, #2
    bb4c:	44094023 	strmi	r4, [r9], #-35	; 0xffffffdd
    bb50:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    bb54:	ae1201ce 	mufgedm	f0, f2, #0.5
    bb58:	02000000 	andeq	r0, r0, #0
    bb5c:	41094823 	tstmi	r9, r3, lsr #16
    bb60:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    bb64:	ae1201cf 	mufgedm	f0, f2, #10.0
    bb68:	02000000 	andeq	r0, r0, #0
    bb6c:	f5084c23 			; <UNDEFINED> instruction: 0xf5084c23
    bb70:	04000003 	streq	r0, [r0], #-3
    bb74:	531201d0 	tstpl	r2, #208, 2	; 0x34
    bb78:	02000002 	andeq	r0, r0, #2
    bb7c:	4e085023 	cdpmi	0, 0, cr5, cr8, cr3, {1}
    bb80:	04000001 	streq	r0, [r0], #-1
    bb84:	6d1201d1 	ldfvss	f0, [r2, #-836]	; 0xfffffcbc
    bb88:	02000002 	andeq	r0, r0, #2
    bb8c:	5e086023 	cdppl	0, 0, cr6, cr8, cr3, {1}
    bb90:	04000005 	streq	r0, [r0], #-5
    bb94:	721201d2 	andsvc	r0, r2, #-2147483596	; 0x80000034
    bb98:	02000002 	andeq	r0, r0, #2
    bb9c:	4a087423 	bmi	228c30 <_Min_Heap_Size+0x228430>
    bba0:	04000005 	streq	r0, [r0], #-5
    bba4:	a91201d3 	ldmdbge	r2, {r0, r1, r4, r6, r7, r8}
    bba8:	03000000 	movweq	r0, #0
    bbac:	00018823 	andeq	r8, r1, r3, lsr #16
    bbb0:	0000930a 	andeq	r9, r0, sl, lsl #6
    bbb4:	00021f00 	andeq	r1, r2, r0, lsl #30
    bbb8:	00800b00 	addeq	r0, r0, r0, lsl #22
    bbbc:	000b0000 	andeq	r0, fp, r0
    bbc0:	00020f05 	andeq	r0, r2, r5, lsl #30
    bbc4:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    bbc8:	02340000 	eorseq	r0, r4, #0
    bbcc:	800b0000 	andhi	r0, fp, r0
    bbd0:	01000000 	mrseq	r0, (UNDEF: 0)
    bbd4:	02240600 	eoreq	r0, r4, #0, 12
    bbd8:	34050000 	strcc	r0, [r5], #-0
    bbdc:	0a000002 	beq	bbec <_Min_Heap_Size+0xb3ec>
    bbe0:	000000ae 	andeq	r0, r0, lr, lsr #1
    bbe4:	0000024e 	andeq	r0, r0, lr, asr #4
    bbe8:	0000800b 	andeq	r8, r0, fp
    bbec:	06000300 	streq	r0, [r0], -r0, lsl #6
    bbf0:	0000023e 	andeq	r0, r0, lr, lsr r2
    bbf4:	00024e05 	andeq	r4, r2, r5, lsl #28
    bbf8:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    bbfc:	02680000 	rsbeq	r0, r8, #0
    bc00:	800b0000 	andhi	r0, fp, r0
    bc04:	04000000 	streq	r0, [r0], #-0
    bc08:	02580600 	subseq	r0, r8, #0, 12
    bc0c:	68050000 	stmdavs	r5, {}	; <UNPREDICTABLE>
    bc10:	0a000002 	beq	bc20 <_Min_Heap_Size+0xb420>
    bc14:	0000009d 	muleq	r0, sp, r0
    bc18:	00000282 	andeq	r0, r0, r2, lsl #5
    bc1c:	0000800b 	andeq	r8, r0, fp
    bc20:	0c000400 	cfstrseq	mvf0, [r0], {-0}
    bc24:	000002d7 	ldrdeq	r0, [r0], -r7
    bc28:	0301d404 	movweq	sp, #5124	; 0x1404
    bc2c:	000000b3 	strheq	r0, [r0], -r3
    bc30:	00009d0a 	andeq	r9, r0, sl, lsl #26
    bc34:	00029f00 	andeq	r9, r2, r0, lsl #30
    bc38:	00800b00 	addeq	r0, r0, r0, lsl #22
    bc3c:	00010000 	andeq	r0, r1, r0
    bc40:	0017f60d 	andseq	pc, r7, sp, lsl #12
    bc44:	11390500 	teqne	r9, r0, lsl #10
    bc48:	0000009d 	muleq	r0, sp, r0
    bc4c:	980a0101 	stmdals	sl, {r0, r8}
    bc50:	bd000000 	stclt	0, cr0, [r0, #-0]
    bc54:	0b000002 	bleq	bc64 <_Min_Heap_Size+0xb464>
    bc58:	00000080 	andeq	r0, r0, r0, lsl #1
    bc5c:	ad06000f 	stcge	0, cr0, [r6, #-60]	; 0xffffffc4
    bc60:	0d000002 	stceq	0, cr0, [r0, #-8]
    bc64:	000017b6 			; <UNDEFINED> instruction: 0x000017b6
    bc68:	bd173b05 	vldrlt	d3, [r7, #-20]	; 0xffffffec
    bc6c:	01000002 	tsteq	r0, r2
    bc70:	00980a01 	addseq	r0, r8, r1, lsl #20
    bc74:	02e00000 	rsceq	r0, r0, #0
    bc78:	800b0000 	andhi	r0, fp, r0
    bc7c:	07000000 	streq	r0, [r0, -r0]
    bc80:	02d00600 	sbcseq	r0, r0, #0, 12
    bc84:	520d0000 	andpl	r0, sp, #0
    bc88:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    bc8c:	02e0173c 	rsceq	r1, r0, #60, 14	; 0xf00000
    bc90:	01010000 	mrseq	r0, (UNDEF: 1)
    bc94:	f4068807 	vst2.8	{d8-d9}, [r6], r7
    bc98:	04df0901 	ldrbeq	r0, [pc], #2305	; bca0 <_Min_Heap_Size+0xb4a0>
    bc9c:	43090000 	movwmi	r0, #36864	; 0x9000
    bca0:	f6060052 			; <UNDEFINED> instruction: 0xf6060052
    bca4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bca8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcac:	02820800 	addeq	r0, r2, #0, 16
    bcb0:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
    bcb4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcb8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcbc:	02850804 	addeq	r0, r5, #4, 16	; 0x40000
    bcc0:	f8060000 			; <UNDEFINED> instruction: 0xf8060000
    bcc4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcc8:	23020000 	movwcs	r0, #8192	; 0x2000
    bccc:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    bcd0:	f9060052 			; <UNDEFINED> instruction: 0xf9060052
    bcd4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcd8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcdc:	0166080c 	cmneq	r6, ip, lsl #16
    bce0:	fa060000 	blx	18bce8 <_Min_Heap_Size+0x18b4e8>
    bce4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bce8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcec:	077e0810 			; <UNDEFINED> instruction: 0x077e0810
    bcf0:	fb060000 	blx	18bcfa <_Min_Heap_Size+0x18b4fa>
    bcf4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcf8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcfc:	06d00814 			; <UNDEFINED> instruction: 0x06d00814
    bd00:	fc060000 	stc2	0, cr0, [r6], {-0}
    bd04:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd08:	23020000 	movwcs	r0, #8192	; 0x2000
    bd0c:	055e0818 	ldrbeq	r0, [lr, #-2072]	; 0xfffff7e8
    bd10:	fd060000 	stc2	0, cr0, [r6, #-0]
    bd14:	009d1101 	addseq	r1, sp, r1, lsl #2
    bd18:	23020000 	movwcs	r0, #8192	; 0x2000
    bd1c:	053b081c 	ldreq	r0, [fp, #-2076]!	; 0xfffff7e4
    bd20:	fe060000 	cdp2	0, 0, cr0, cr6, cr0, {0}
    bd24:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd28:	23020000 	movwcs	r0, #8192	; 0x2000
    bd2c:	01f90820 	mvnseq	r0, r0, lsr #16
    bd30:	ff060000 			; <UNDEFINED> instruction: 0xff060000
    bd34:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd38:	23020000 	movwcs	r0, #8192	; 0x2000
    bd3c:	05680824 	strbeq	r0, [r8, #-2084]!	; 0xfffff7dc
    bd40:	00060000 	andeq	r0, r6, r0
    bd44:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bd48:	23020000 	movwcs	r0, #8192	; 0x2000
    bd4c:	08d40828 	ldmeq	r4, {r3, r5, fp}^
    bd50:	01060000 	mrseq	r0, (UNDEF: 6)
    bd54:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd58:	23020000 	movwcs	r0, #8192	; 0x2000
    bd5c:	07ee0830 			; <UNDEFINED> instruction: 0x07ee0830
    bd60:	02060000 	andeq	r0, r6, #0
    bd64:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd68:	23020000 	movwcs	r0, #8192	; 0x2000
    bd6c:	04d60834 	ldrbeq	r0, [r6], #2100	; 0x834
    bd70:	03060000 	movweq	r0, #24576	; 0x6000
    bd74:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd78:	23020000 	movwcs	r0, #8192	; 0x2000
    bd7c:	05720838 	ldrbeq	r0, [r2, #-2104]!	; 0xfffff7c8
    bd80:	04060000 	streq	r0, [r6], #-0
    bd84:	009d1102 	addseq	r1, sp, r2, lsl #2
    bd88:	23020000 	movwcs	r0, #8192	; 0x2000
    bd8c:	070b083c 	smladxeq	fp, ip, r8, r0
    bd90:	05060000 	streq	r0, [r6, #-0]
    bd94:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd98:	23020000 	movwcs	r0, #8192	; 0x2000
    bd9c:	06c80840 	strbeq	r0, [r8], r0, asr #16
    bda0:	06060000 	streq	r0, [r6], -r0
    bda4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bda8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdac:	057c0844 	ldrbeq	r0, [ip, #-2116]!	; 0xfffff7bc
    bdb0:	07060000 	streq	r0, [r6, -r0]
    bdb4:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bdb8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdbc:	012b0848 			; <UNDEFINED> instruction: 0x012b0848
    bdc0:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    bdc4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bdc8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdcc:	05100850 	ldreq	r0, [r0, #-2128]	; 0xfffff7b0
    bdd0:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    bdd4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bdd8:	23020000 	movwcs	r0, #8192	; 0x2000
    bddc:	06960854 			; <UNDEFINED> instruction: 0x06960854
    bde0:	0a060000 	beq	18bde8 <_Min_Heap_Size+0x18b5e8>
    bde4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bde8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdec:	05860858 	streq	r0, [r6, #2136]	; 0x858
    bdf0:	0b060000 	bleq	18bdf8 <_Min_Heap_Size+0x18b5f8>
    bdf4:	009d1102 	addseq	r1, sp, r2, lsl #2
    bdf8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdfc:	001b085c 	andseq	r0, fp, ip, asr r8
    be00:	0c060000 	stceq	0, cr0, [r6], {-0}
    be04:	00a91102 	adceq	r1, r9, r2, lsl #2
    be08:	23020000 	movwcs	r0, #8192	; 0x2000
    be0c:	03eb0860 	mvneq	r0, #96, 16	; 0x600000
    be10:	0d060000 	stceq	0, cr0, [r6, #-0]
    be14:	00a91102 	adceq	r1, r9, r2, lsl #2
    be18:	23020000 	movwcs	r0, #8192	; 0x2000
    be1c:	05900864 	ldreq	r0, [r0, #2148]	; 0x864
    be20:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    be24:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    be28:	23020000 	movwcs	r0, #8192	; 0x2000
    be2c:	08700868 	ldmdaeq	r0!, {r3, r5, r6, fp}^
    be30:	0f060000 	svceq	0x00060000
    be34:	00a91102 	adceq	r1, r9, r2, lsl #2
    be38:	23020000 	movwcs	r0, #8192	; 0x2000
    be3c:	53430970 	movtpl	r0, #14704	; 0x3970
    be40:	10060052 	andne	r0, r6, r2, asr r0
    be44:	00a91102 	adceq	r1, r9, r2, lsl #2
    be48:	23020000 	movwcs	r0, #8192	; 0x2000
    be4c:	059a0874 	ldreq	r0, [sl, #2164]	; 0x874
    be50:	11060000 	mrsne	r0, (UNDEF: 6)
    be54:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    be58:	23020000 	movwcs	r0, #8192	; 0x2000
    be5c:	083f0878 	ldmdaeq	pc!, {r3, r4, r5, r6, fp}	; <UNPREDICTABLE>
    be60:	12060000 	andne	r0, r6, #0
    be64:	00a91102 	adceq	r1, r9, r2, lsl #2
    be68:	23030000 	movwcs	r0, #12288	; 0x3000
    be6c:	7e080180 	adfvc<illegal precision>	f0, f0, f0
    be70:	06000003 	streq	r0, [r0], -r3
    be74:	a9110213 	ldmdbge	r1, {r0, r1, r4, r9}
    be78:	03000000 	movweq	r0, #0
    be7c:	00018423 	andeq	r8, r1, r3, lsr #8
    be80:	0001cd0c 	andeq	ip, r1, ip, lsl #26
    be84:	02140600 	andseq	r0, r4, #0, 12
    be88:	0002f303 	andeq	pc, r2, r3, lsl #6
    be8c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    be90:	00000726 	andeq	r0, r0, r6, lsr #14
    be94:	00029f0e 	andeq	r9, r2, lr, lsl #30
    be98:	0a890100 	beq	fe24c2a0 <_estack+0xde24b068>
    be9c:	00080305 	andeq	r0, r8, r5, lsl #6
    bea0:	c20e2000 	andgt	r2, lr, #0
    bea4:	01000002 	tsteq	r0, r2
    bea8:	03050f8a 	movweq	r0, #24458	; 0x5f8a
    beac:	00000000 	andeq	r0, r0, r0
    beb0:	0002e50e 	andeq	lr, r2, lr, lsl #10
    beb4:	0f8b0100 	svceq	0x008b0100
    beb8:	2cbc0305 	ldccs	3, cr0, [ip], #20
    bebc:	010f0800 	tsteq	pc, r0, lsl #16
    bec0:	0000247b 	andeq	r2, r0, fp, ror r4
    bec4:	0106dc01 	tsteq	r6, r1, lsl #24
	...
    bed0:	01007d02 	tsteq	r0, r2, lsl #26
    bed4:	0000059c 	muleq	r0, ip, r5
    bed8:	706d7410 	rsbvc	r7, sp, r0, lsl r4
    bedc:	0cde0100 	ldfeqe	f0, [lr], {0}
    bee0:	0000009d 	muleq	r0, sp, r0
    bee4:	0000792b 	andeq	r7, r0, fp, lsr #18
    bee8:	0000791f 	andeq	r7, r0, pc, lsl r9
    beec:	00178311 	andseq	r8, r7, r1, lsl r3
    bef0:	15de0100 	ldrbne	r0, [lr, #256]	; 0x100
    bef4:	0000009d 	muleq	r0, sp, r0
    bef8:	00007980 	andeq	r7, r0, r0, lsl #19
    befc:	00007976 	andeq	r7, r0, r6, ror r9
    bf00:	00173f11 	andseq	r3, r7, r1, lsl pc
    bf04:	21de0100 	bicscs	r0, lr, r0, lsl #2
    bf08:	0000009d 	muleq	r0, sp, r0
    bf0c:	000079ca 	andeq	r7, r0, sl, asr #19
    bf10:	000079c2 	andeq	r7, r0, r2, asr #19
    bf14:	00247111 	eoreq	r7, r4, r1, lsl r1
    bf18:	2bde0100 	blcs	ff78c320 <_estack+0xdf78b0e8>
    bf1c:	0000009d 	muleq	r0, sp, r0
    bf20:	00007a07 	andeq	r7, r0, r7, lsl #20
    bf24:	00007a01 	andeq	r7, r0, r1, lsl #20
    bf28:	00182911 	andseq	r2, r8, r1, lsl r9
    bf2c:	3ade0100 	bcc	ff78c334 <_estack+0xdf78b0fc>
    bf30:	0000009d 	muleq	r0, sp, r0
    bf34:	00007a41 	andeq	r7, r0, r1, asr #20
    bf38:	00007a39 	andeq	r7, r0, r9, lsr sl
    bf3c:	91011200 	mrsls	r1, R9_usr
    bf40:	01000024 	tsteq	r0, r4, lsr #32
    bf44:	f00106a7 			; <UNDEFINED> instruction: 0xf00106a7
    bf48:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    bf4c:	02080017 	andeq	r0, r8, #23
    bf50:	0001007d 	andeq	r0, r1, sp, ror r0
    bf54:	00000181 	andeq	r0, r0, r1, lsl #3
    bf58:	1a100002 	bne	40bf68 <_Min_Heap_Size+0x40b768>
    bf5c:	01040000 	mrseq	r0, (UNDEF: 4)
    bf60:	000005d7 	ldrdeq	r0, [r0], -r7
    bf64:	0024b20c 	eoreq	fp, r4, ip, lsl #4
    bf68:	00042000 	andeq	r2, r4, r0
    bf6c:	00069800 	andeq	r9, r6, r0, lsl #16
	...
    bf78:	008a0200 	addeq	r0, sl, r0, lsl #4
    bf7c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    bf80:	00746e69 	rsbseq	r6, r4, r9, ror #28
    bf84:	0024c703 	eoreq	ip, r4, r3, lsl #14
    bf88:	1a8f0200 	bne	fe3cc790 <_estack+0xde3cb558>
    bf8c:	00000029 	andeq	r0, r0, r9, lsr #32
    bf90:	b8070404 	stmdalt	r7, {r2, sl}
    bf94:	04000000 	streq	r0, [r0], #-0
    bf98:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    bf9c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    bfa0:	00072604 	andeq	r2, r7, r4, lsl #12
    bfa4:	06010400 	streq	r0, [r1], -r0, lsl #8
    bfa8:	000005c5 	andeq	r0, r0, r5, asr #11
    bfac:	00006603 	andeq	r6, r0, r3, lsl #12
    bfb0:	182b0300 	stmdane	fp!, {r8, r9}
    bfb4:	00000064 	andeq	r0, r0, r4, rrx
    bfb8:	c3080104 	movwgt	r0, #33028	; 0x8104
    bfbc:	04000005 	streq	r0, [r0], #-5
    bfc0:	03fa0502 	mvnseq	r0, #8388608	; 0x800000
    bfc4:	02040000 	andeq	r0, r4, #0
    bfc8:	0007f607 	andeq	pc, r7, r7, lsl #12
    bfcc:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    bfd0:	000002ec 	andeq	r0, r0, ip, ror #5
    bfd4:	0002c203 	andeq	ip, r2, r3, lsl #4
    bfd8:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    bfdc:	0000008c 	andeq	r0, r0, ip, lsl #1
    bfe0:	b3070404 	movwlt	r0, #29700	; 0x7404
    bfe4:	04000000 	streq	r0, [r0], #-0
    bfe8:	00ae0708 	adceq	r0, lr, r8, lsl #14
    bfec:	04050000 	streq	r0, [r5], #-0
    bff0:	cc080104 	stfgts	f0, [r8], {4}
    bff4:	03000005 	movweq	r0, #5
    bff8:	00000068 	andeq	r0, r0, r8, rrx
    bffc:	58131804 	ldmdapl	r3, {r2, fp, ip}
    c000:	06000000 	streq	r0, [r0], -r0
    c004:	000000a3 	andeq	r0, r0, r3, lsr #1
    c008:	0002c403 	andeq	ip, r2, r3, lsl #8
    c00c:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    c010:	00000080 	andeq	r0, r0, r0, lsl #1
    c014:	0000b406 	andeq	fp, r0, r6, lsl #8
    c018:	24ef0700 	strbtcs	r0, [pc], #1792	; c020 <_Min_Heap_Size+0xb820>
    c01c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    c020:	0000d711 	andeq	sp, r0, r1, lsl r7
    c024:	d8030500 	stmdale	r3, {r8, sl}
    c028:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    c02c:	0000a304 	andeq	sl, r0, r4, lsl #6
    c030:	07010900 	streq	r0, [r1, -r0, lsl #18]
    c034:	01000025 	tsteq	r0, r5, lsr #32
    c038:	9a010735 	bls	4dd14 <_Min_Heap_Size+0x4d514>
    c03c:	04000000 	streq	r0, [r0], #-0
    c040:	4c080017 	stcmi	0, cr0, [r8], {23}
    c044:	77080017 	smladvc	r8, r7, r0, r0
    c048:	0100007a 	tsteq	r0, sl, ror r0
    c04c:	00000170 	andeq	r0, r0, r0, ror r1
    c050:	0024ea0a 	eoreq	lr, r4, sl, lsl #20
    c054:	17350100 	ldrne	r0, [r5, -r0, lsl #2]!
    c058:	00000030 	andeq	r0, r0, r0, lsr r0
    c05c:	00007aa1 	andeq	r7, r0, r1, lsr #21
    c060:	00007a97 	muleq	r0, r7, sl
    c064:	0024fa0b 	eoreq	pc, r4, fp, lsl #20
    c068:	12370100 	eorsne	r0, r7, #0, 2
    c06c:	000000a3 	andeq	r0, r0, r3, lsr #1
    c070:	9c0b0101 	stflss	f0, [fp], {1}
    c074:	01000024 	tsteq	r0, r4, lsr #32
    c078:	00a31238 	adceq	r1, r3, r8, lsr r2
    c07c:	01010000 	mrseq	r0, (UNDEF: 1)
    c080:	0024d10b 	eoreq	sp, r4, fp, lsl #2
    c084:	13390100 	teqne	r9, #0, 2
    c088:	000000b4 	strheq	r0, [r0], -r4
    c08c:	0d0c0101 	stfeqs	f0, [ip, #-4]
    c090:	01000025 	tsteq	r0, r5, lsr #32
    c094:	00c0123a 	sbceq	r1, r0, sl, lsr r2
    c098:	e10c0000 	mrs	r0, (UNDEF: 12)
    c09c:	01000024 	tsteq	r0, r4, lsr #32
    c0a0:	0170123b 	cmneq	r0, fp, lsr r2
    c0a4:	a40d0000 	strge	r0, [sp], #-0
    c0a8:	01000024 	tsteq	r0, r4, lsr #32
    c0ac:	00d70c3c 	sbcseq	r0, r7, ip, lsr ip
    c0b0:	7ae80000 	bvc	ffa0c0b8 <_estack+0xdfa0ae80>
    c0b4:	7ae60000 	bvc	ff98c0bc <_estack+0xdf98ae84>
    c0b8:	300e0000 	andcc	r0, lr, r0
    c0bc:	76080017 			; <UNDEFINED> instruction: 0x76080017
    c0c0:	00000001 	andeq	r0, r0, r1
    c0c4:	00af0408 	adceq	r0, pc, r8, lsl #8
    c0c8:	010f0000 	mrseq	r0, CPSR
    c0cc:	0024ff01 	eoreq	pc, r4, r1, lsl #30
    c0d0:	0024ff00 	eoreq	pc, r4, r0, lsl #30
    c0d4:	0d0f0500 	cfstr32eq	mvfx0, [pc, #-0]	; c0dc <_Min_Heap_Size+0xb8dc>
    c0d8:	00083100 	andeq	r3, r8, r0, lsl #2
    c0dc:	fa000200 	blx	c8e4 <_Min_Heap_Size+0xc0e4>
    c0e0:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    c0e4:	0005d701 	andeq	sp, r5, r1, lsl #14
    c0e8:	26f80c00 	ldrbtcs	r0, [r8], r0, lsl #24
    c0ec:	04200000 	strteq	r0, [r0], #-0
    c0f0:	06a80000 	strteq	r0, [r8], r0
	...
    c0fc:	8be80000 	blhi	ffa0c104 <_estack+0xdfa0aecc>
    c100:	01020000 	mrseq	r0, (UNDEF: 2)
    c104:	0005c506 	andeq	ip, r5, r6, lsl #10
    c108:	08010200 	stmdaeq	r1, {r9}
    c10c:	000005c3 	andeq	r0, r0, r3, asr #11
    c110:	fa050202 	blx	14c920 <_Min_Heap_Size+0x14c120>
    c114:	02000003 	andeq	r0, r0, #3
    c118:	07f60702 	ldrbeq	r0, [r6, r2, lsl #14]!
    c11c:	04020000 	streq	r0, [r2], #-0
    c120:	0002ec05 	andeq	lr, r2, r5, lsl #24
    c124:	02c20300 	sbceq	r0, r2, #0, 6
    c128:	4f020000 	svcmi	0x00020000
    c12c:	00005819 	andeq	r5, r0, r9, lsl r8
    c130:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c134:	000000b3 	strheq	r0, [r0], -r3
    c138:	e7050802 	str	r0, [r5, -r2, lsl #16]
    c13c:	02000002 	andeq	r0, r0, #2
    c140:	00ae0708 	adceq	r0, lr, r8, lsl #14
    c144:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    c148:	02000025 	andeq	r0, r0, #37	; 0x25
    c14c:	005f1ec8 	subseq	r1, pc, r8, asr #29
    c150:	04040000 	streq	r0, [r4], #-0
    c154:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    c158:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c15c:	000000b8 	strheq	r0, [r0], -r8
    c160:	26040802 	strcs	r0, [r4], -r2, lsl #16
    c164:	03000007 	movweq	r0, #7
    c168:	000026ed 	andeq	r2, r0, sp, ror #13
    c16c:	450e1e03 	strmi	r1, [lr, #-3587]	; 0xfffff1fd
    c170:	03000000 	movweq	r0, #0
    c174:	00002631 	andeq	r2, r0, r1, lsr r6
    c178:	450e2203 	strmi	r2, [lr, #-515]	; 0xfffffdfd
    c17c:	03000000 	movweq	r0, #0
    c180:	000026b6 			; <UNDEFINED> instruction: 0x000026b6
    c184:	450e2e03 	strmi	r2, [lr, #-3587]	; 0xfffff1fd
    c188:	03000000 	movweq	r0, #0
    c18c:	000026ad 	andeq	r2, r0, sp, lsr #13
    c190:	370f3803 	strcc	r3, [pc, -r3, lsl #16]
    c194:	03000000 	movweq	r0, #0
    c198:	000026cb 	andeq	r2, r0, fp, asr #13
    c19c:	3e183c03 	cdpcc	12, 1, cr3, cr8, cr3, {0}
    c1a0:	03000000 	movweq	r0, #0
    c1a4:	0000270f 	andeq	r2, r0, pc, lsl #14
    c1a8:	3e183f03 	cdpcc	15, 1, cr3, cr8, cr3, {0}
    c1ac:	03000000 	movweq	r0, #0
    c1b0:	0000266c 	andeq	r2, r0, ip, ror #12
    c1b4:	3e184b03 	vnmlscc.f64	d4, d8, d3
    c1b8:	03000000 	movweq	r0, #0
    c1bc:	000025cb 	andeq	r2, r0, fp, asr #11
    c1c0:	4c145a03 			; <UNDEFINED> instruction: 0x4c145a03
    c1c4:	03000000 	movweq	r0, #0
    c1c8:	000026b5 			; <UNDEFINED> instruction: 0x000026b5
    c1cc:	a6106603 	ldrge	r6, [r0], -r3, lsl #12
    c1d0:	03000000 	movweq	r0, #0
    c1d4:	000025e6 	andeq	r2, r0, r6, ror #11
    c1d8:	3e18d103 	mnfcce	f5, f3
    c1dc:	05000000 	streq	r0, [r0, #-0]
    c1e0:	00010c04 	andeq	r0, r1, r4, lsl #24
    c1e4:	08010200 	stmdaeq	r1, {r9}
    c1e8:	000005cc 	andeq	r0, r0, ip, asr #11
    c1ec:	00258703 	eoreq	r8, r5, r3, lsl #14
    c1f0:	122a0400 	eorne	r0, sl, #0, 8
    c1f4:	0000006d 	andeq	r0, r0, sp, rrx
    c1f8:	0026c206 	eoreq	ip, r6, r6, lsl #4
    c1fc:	2f051000 	svccs	0x00051000
    c200:	00014b08 	andeq	r4, r1, r8, lsl #22
    c204:	254b0700 	strbcs	r0, [fp, #-1792]	; 0xfffff900
    c208:	30050000 	andcc	r0, r5, r0
    c20c:	00011309 	andeq	r1, r1, r9, lsl #6
    c210:	00230200 	eoreq	r0, r3, r0, lsl #4
    c214:	00261507 	eoreq	r1, r6, r7, lsl #10
    c218:	07310500 	ldreq	r0, [r1, -r0, lsl #10]!
    c21c:	00000045 	andeq	r0, r0, r5, asr #32
    c220:	00082302 	andeq	r2, r8, r2, lsl #6
    c224:	0026ef03 	eoreq	lr, r6, r3, lsl #30
    c228:	14610600 	strbtne	r0, [r1], #-1536	; 0xfffffa00
    c22c:	0000008e 	andeq	r0, r0, lr, lsl #1
    c230:	00263303 	eoreq	r3, r6, r3, lsl #6
    c234:	15660600 	strbne	r0, [r6, #-1536]!	; 0xfffffa00
    c238:	0000009a 	muleq	r0, sl, r0
    c23c:	00252103 	eoreq	r2, r5, r3, lsl #2
    c240:	136b0600 	cmnne	fp, #0, 12
    c244:	00000058 	andeq	r0, r0, r8, asr r0
    c248:	00266e03 	eoreq	r6, r6, r3, lsl #28
    c24c:	128b0600 	addne	r0, fp, #0, 12
    c250:	000000d6 	ldrdeq	r0, [r0], -r6
    c254:	0026b703 	eoreq	fp, r6, r3, lsl #14
    c258:	129d0600 	addsne	r0, sp, #0, 12
    c25c:	000000ee 	andeq	r0, r0, lr, ror #1
    c260:	0026af03 	eoreq	sl, r6, r3, lsl #30
    c264:	12a10600 	adcne	r0, r1, #0, 12
    c268:	000000b2 	strheq	r0, [r0], -r2
    c26c:	0026cd03 	eoreq	ip, r6, r3, lsl #26
    c270:	12a50600 	adcne	r0, r5, #0, 12
    c274:	000000be 	strheq	r0, [r0], -lr
    c278:	00271103 	eoreq	r1, r7, r3, lsl #2
    c27c:	12a90600 	adcne	r0, r9, #0, 12
    c280:	000000ca 	andeq	r0, r0, sl, asr #1
    c284:	0025cd03 	eoreq	ip, r5, r3, lsl #26
    c288:	12bd0600 	adcsne	r0, sp, #0, 12
    c28c:	000000e2 	andeq	r0, r0, r2, ror #1
    c290:	0025e803 	eoreq	lr, r5, r3, lsl #16
    c294:	13c20600 	bicne	r0, r2, #0, 12
    c298:	000000fa 	strdeq	r0, [r0], -sl
    c29c:	00255306 	eoreq	r5, r5, r6, lsl #6
    c2a0:	1b075800 	blne	1e22a8 <_Min_Heap_Size+0x1e1aa8>
    c2a4:	0002a308 	andeq	sl, r2, r8, lsl #6
    c2a8:	25730700 	ldrbcs	r0, [r3, #-1792]!	; 0xfffff900
    c2ac:	1d070000 	stcne	0, cr0, [r7, #-0]
    c2b0:	0001870a 	andeq	r8, r1, sl, lsl #14
    c2b4:	00230200 	eoreq	r0, r3, r0, lsl #4
    c2b8:	0025fb07 	eoreq	pc, r5, r7, lsl #22
    c2bc:	0a1e0700 	beq	78dec4 <_Min_Heap_Size+0x78d6c4>
    c2c0:	0000016f 	andeq	r0, r0, pc, ror #2
    c2c4:	07022302 	streq	r2, [r2, -r2, lsl #6]
    c2c8:	000026d3 	ldrdeq	r2, [r0], -r3
    c2cc:	ab0a1f07 	blge	293ef0 <_Min_Heap_Size+0x2936f0>
    c2d0:	02000001 	andeq	r0, r0, #1
    c2d4:	1d070423 	cfstrsne	mvf0, [r7, #-140]	; 0xffffff74
    c2d8:	07000026 	streq	r0, [r0, -r6, lsr #32]
    c2dc:	01b70b20 			; <UNDEFINED> instruction: 0x01b70b20
    c2e0:	23020000 	movwcs	r0, #8192	; 0x2000
    c2e4:	267e0708 	ldrbtcs	r0, [lr], -r8, lsl #14
    c2e8:	21070000 	mrscs	r0, (UNDEF: 7)
    c2ec:	0001930a 	andeq	r9, r1, sl, lsl #6
    c2f0:	0a230200 	beq	8ccaf8 <_Min_Heap_Size+0x8cc2f8>
    c2f4:	0025c407 	eoreq	ip, r5, r7, lsl #8
    c2f8:	0a220700 	beq	88df00 <_Min_Heap_Size+0x88d700>
    c2fc:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    c300:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    c304:	00002519 	andeq	r2, r0, r9, lsl r5
    c308:	870a2307 	strhi	r2, [sl, -r7, lsl #6]
    c30c:	02000001 	andeq	r0, r0, #1
    c310:	85070e23 	strhi	r0, [r7, #-3619]	; 0xfffff1dd
    c314:	07000026 	streq	r0, [r0, -r6, lsr #32]
    c318:	017b0a24 	cmneq	fp, r4, lsr #20
    c31c:	23020000 	movwcs	r0, #8192	; 0x2000
    c320:	263d0710 			; <UNDEFINED> instruction: 0x263d0710
    c324:	2a070000 	bcs	1cc32c <_Min_Heap_Size+0x1cbb2c>
    c328:	00011f13 	andeq	r1, r1, r3, lsl pc
    c32c:	18230200 	stmdane	r3!, {r9}
    c330:	00266407 	eoreq	r6, r6, r7, lsl #8
    c334:	132b0700 			; <UNDEFINED> instruction: 0x132b0700
    c338:	0000011f 	andeq	r0, r0, pc, lsl r1
    c33c:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    c340:	00002558 	andeq	r2, r0, r8, asr r5
    c344:	1f132c07 	svcne	0x00132c07
    c348:	02000001 	andeq	r0, r0, #1
    c34c:	9e073823 	cdpls	8, 0, cr3, cr7, cr3, {1}
    c350:	07000025 	streq	r0, [r0, -r5, lsr #32]
    c354:	0157112d 	cmpeq	r7, sp, lsr #2
    c358:	23020000 	movwcs	r0, #8192	; 0x2000
    c35c:	26520748 	ldrbcs	r0, [r2], -r8, asr #14
    c360:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    c364:	00014b0c 	andeq	r4, r1, ip, lsl #22
    c368:	4c230200 	sfmmi	f0, 4, [r3], #-0
    c36c:	00268d07 	eoreq	r8, r6, r7, lsl #26
    c370:	09300700 	ldmdbeq	r0!, {r8, r9, sl}
    c374:	000002a3 	andeq	r0, r0, r3, lsr #5
    c378:	00502302 	subseq	r2, r0, r2, lsl #6
    c37c:	00004508 	andeq	r4, r0, r8, lsl #10
    c380:	0002b300 	andeq	fp, r2, r0, lsl #6
    c384:	00800900 	addeq	r0, r0, r0, lsl #18
    c388:	00010000 	andeq	r0, r1, r0
    c38c:	736d740a 	cmnvc	sp, #167772160	; 0xa000000
    c390:	11081000 	mrsne	r1, (UNDEF: 8)
    c394:	0002fd08 	andeq	pc, r2, r8, lsl #26
    c398:	26db0700 	ldrbcs	r0, [fp], r0, lsl #14
    c39c:	12080000 	andne	r0, r8, #0
    c3a0:	0001630a 	andeq	r6, r1, sl, lsl #6
    c3a4:	00230200 	eoreq	r0, r3, r0, lsl #4
    c3a8:	00267407 	eoreq	r7, r6, r7, lsl #8
    c3ac:	0a130800 	beq	4ce3b4 <_Min_Heap_Size+0x4cdbb4>
    c3b0:	00000163 	andeq	r0, r0, r3, ror #2
    c3b4:	07042302 	streq	r2, [r4, -r2, lsl #6]
    c3b8:	00002538 	andeq	r2, r0, r8, lsr r5
    c3bc:	630a1408 	movwvs	r1, #41992	; 0xa408
    c3c0:	02000001 	andeq	r0, r0, #1
    c3c4:	d4070823 	strle	r0, [r7], #-2083	; 0xfffff7dd
    c3c8:	08000025 	stmdaeq	r0, {r0, r2, r5}
    c3cc:	01630a15 	cmneq	r3, r5, lsl sl
    c3d0:	23020000 	movwcs	r0, #8192	; 0x2000
    c3d4:	0608000c 	streq	r0, [r8], -ip
    c3d8:	0d000001 	stceq	0, cr0, [r0, #-4]
    c3dc:	09000003 	stmdbeq	r0, {r0, r1}
    c3e0:	00000080 	andeq	r0, r0, r0, lsl #1
    c3e4:	600b0000 	andvs	r0, fp, r0
    c3e8:	01000025 	tsteq	r0, r5, lsr #32
    c3ec:	02fd0727 	rscseq	r0, sp, #10223616	; 0x9c0000
    c3f0:	05010000 	streq	r0, [r1, #-0]
    c3f4:	00000003 	andeq	r0, r0, r3
    c3f8:	25290b00 	strcs	r0, [r9, #-2816]!	; 0xfffff500
    c3fc:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    c400:	00033308 	andeq	r3, r3, r8, lsl #6
    c404:	03050100 	movweq	r0, #20736	; 0x5100
    c408:	00000000 	andeq	r0, r0, r0
    c40c:	01060405 	tsteq	r6, r5, lsl #8
    c410:	010c0000 	mrseq	r0, (UNDEF: 12)
    c414:	00002543 	andeq	r2, r0, r3, asr #10
    c418:	0105a901 	tsteq	r5, r1, lsl #18
    c41c:	00000079 	andeq	r0, r0, r9, ror r0
	...
    c428:	00007afb 	strdeq	r7, [r0], -fp
    c42c:	00039e01 	andeq	r9, r3, r1, lsl #28
    c430:	25f00d00 	ldrbcs	r0, [r0, #3328]!	; 0xd00
    c434:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    c438:	00010613 	andeq	r0, r1, r3, lsl r6
    c43c:	007b1f00 	rsbseq	r1, fp, r0, lsl #30
    c440:	007b1b00 	rsbseq	r1, fp, r0, lsl #22
    c444:	262c0d00 	strtcs	r0, [ip], -r0, lsl #26
    c448:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    c44c:	00033320 	andeq	r3, r3, r0, lsr #6
    c450:	007b4400 	rsbseq	r4, fp, r0, lsl #8
    c454:	007b4000 	rsbseq	r4, fp, r0
    c458:	6e650e00 	cdpvs	14, 6, cr0, cr5, cr0, {0}
    c45c:	a9010076 	stmdbge	r1, {r1, r2, r4, r5, r6}
    c460:	0003332d 	andeq	r3, r3, sp, lsr #6
    c464:	007b6900 	rsbseq	r6, fp, r0, lsl #18
    c468:	007b6500 	rsbseq	r6, fp, r0, lsl #10
    c46c:	00000f00 	andeq	r0, r0, r0, lsl #30
    c470:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    c474:	0c000000 	stceq	0, cr0, [r0], {-0}
    c478:	00269f01 	eoreq	r9, r6, r1, lsl #30
    c47c:	05a30100 	streq	r0, [r3, #256]!	; 0x100
    c480:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    c48c:	007b8a00 	rsbseq	r8, fp, r0, lsl #20
    c490:	03c70100 	biceq	r0, r7, #0, 2
    c494:	000f0000 	andeq	r0, pc, r0
    c498:	0a000000 	beq	c4a0 <_Min_Heap_Size+0xbca0>
    c49c:	00000008 	andeq	r0, r0, r8
    c4a0:	2645010c 	strbcs	r0, [r5], -ip, lsl #2
    c4a4:	9b010000 	blls	4c4ac <_Min_Heap_Size+0x4bcac>
    c4a8:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    c4b4:	7baa0000 	blvc	fea8c4bc <_estack+0xdea8b284>
    c4b8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    c4bc:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    c4c0:	00646c6f 	rsbeq	r6, r4, pc, ror #24
    c4c4:	06119b01 	ldreq	r9, [r1], -r1, lsl #22
    c4c8:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
    c4cc:	ca00007b 	bgt	c6c0 <_Min_Heap_Size+0xbec0>
    c4d0:	0e00007b 	mcreq	0, 0, r0, cr0, cr11, {3}
    c4d4:	0077656e 	rsbseq	r6, r7, lr, ror #10
    c4d8:	061c9b01 	ldreq	r9, [ip], -r1, lsl #22
    c4dc:	f3000001 	vhadd.u8	d0, d0, d1
    c4e0:	ef00007b 	svc	0x0000007b
    c4e4:	0f00007b 	svceq	0x0000007b
    c4e8:	00000000 	andeq	r0, r0, r0
    c4ec:	0000080a 	andeq	r0, r0, sl, lsl #16
    c4f0:	52011000 	andpl	r1, r1, #0
    c4f4:	01000025 	tsteq	r0, r5, lsr #32
    c4f8:	79010594 	stmdbvc	r1, {r2, r4, r7, r8, sl}
	...
    c504:	02000000 	andeq	r0, r0, #0
    c508:	5801007d 	stmdapl	r1, {r0, r2, r3, r4, r5, r6}
    c50c:	0d000004 	stceq	0, cr0, [r0, #-16]
    c510:	00000691 	muleq	r0, r1, r6
    c514:	06119401 	ldreq	r9, [r1], -r1, lsl #8
    c518:	18000001 	stmdane	r0, {r0}
    c51c:	1400007c 	strne	r0, [r0], #-124	; 0xffffff84
    c520:	1100007c 	tstne	r0, ip, ror r0
    c524:	01007473 	tsteq	r0, r3, ror r4
    c528:	04582494 	ldrbeq	r2, [r8], #-1172	; 0xfffffb6c
    c52c:	51010000 	mrspl	r0, (UNDEF: 1)
    c530:	c3040500 	movwgt	r0, #17664	; 0x4500
    c534:	10000001 	andne	r0, r0, r1
    c538:	0025df01 	eoreq	sp, r5, r1, lsl #30
    c53c:	058e0100 	streq	r0, [lr, #256]	; 0x100
    c540:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    c54c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c550:	00049101 	andeq	r9, r4, r1, lsl #2
    c554:	75620e00 	strbvc	r0, [r2, #-3584]!	; 0xfffff200
    c558:	8e010066 	cdphi	0, 0, cr0, cr1, cr6, {3}
    c55c:	00049118 	andeq	r9, r4, r8, lsl r1
    c560:	007c3d00 	rsbseq	r3, ip, r0, lsl #26
    c564:	007c3900 	rsbseq	r3, ip, r0, lsl #18
    c568:	04050000 	streq	r0, [r5], #-0
    c56c:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    c570:	26e5010c 	strbtcs	r0, [r5], ip, lsl #2
    c574:	87010000 	strhi	r0, [r1, -r0]
    c578:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    c584:	7c5e0000 	mravc	r0, lr, acc0
    c588:	d4010000 	strle	r0, [r1], #-0
    c58c:	0d000004 	stceq	0, cr0, [r0, #-16]
    c590:	000025f0 	strdeq	r2, [r0], -r0
    c594:	06138701 	ldreq	r8, [r3], -r1, lsl #14
    c598:	82000001 	andhi	r0, r0, #1
    c59c:	7e00007c 	mcrvc	0, 0, r0, cr0, cr12, {3}
    c5a0:	0f00007c 	svceq	0x0000007c
    c5a4:	00000000 	andeq	r0, r0, r0
    c5a8:	0000080a 	andeq	r0, r0, sl, lsl #16
    c5ac:	f5010c00 			; <UNDEFINED> instruction: 0xf5010c00
    c5b0:	01000025 	tsteq	r0, r5, lsr #32
    c5b4:	79010580 	stmdbvc	r1, {r7, r8, sl}
	...
    c5c0:	a3000000 	movwge	r0, #0
    c5c4:	0100007c 	tsteq	r0, ip, ror r0
    c5c8:	00000511 	andeq	r0, r0, r1, lsl r5
    c5cc:	0019960d 	andseq	r9, r9, sp, lsl #12
    c5d0:	10800100 	addne	r0, r0, r0, lsl #2
    c5d4:	00000511 	andeq	r0, r0, r1, lsl r5
    c5d8:	00007cc7 	andeq	r7, r0, r7, asr #25
    c5dc:	00007cc3 	andeq	r7, r0, r3, asr #25
    c5e0:	0000000f 	andeq	r0, r0, pc
    c5e4:	00080a00 	andeq	r0, r8, r0, lsl #20
    c5e8:	04050000 	streq	r0, [r5], #-0
    c5ec:	00000079 	andeq	r0, r0, r9, ror r0
    c5f0:	2626010c 	strtcs	r0, [r6], -ip, lsl #2
    c5f4:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    c5f8:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    c604:	7ce80000 	stclvc	0, cr0, [r8]
    c608:	5b010000 	blpl	4c610 <_Min_Heap_Size+0x4be10>
    c60c:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    c610:	000026bd 			; <UNDEFINED> instruction: 0x000026bd
    c614:	06117801 	ldreq	r7, [r1], -r1, lsl #16
    c618:	18000001 	stmdane	r0, {r0}
    c61c:	1400007d 	strne	r0, [r0], #-125	; 0xffffff83
    c620:	1200007d 	andne	r0, r0, #125	; 0x7d
    c624:	000012f0 	strdeq	r1, [r0], -r0
    c628:	791b7801 	ldmdbvc	fp, {r0, fp, ip, sp, lr}
    c62c:	02000000 	andeq	r0, r0, #0
    c630:	00137491 	mulseq	r3, r1, r4
    c634:	25310110 	ldrcs	r0, [r1, #-272]!	; 0xfffffef0
    c638:	70010000 	andvc	r0, r1, r0
    c63c:	00790105 	rsbseq	r0, r9, r5, lsl #2
    c640:	179c0000 	ldrne	r0, [ip, r0]
    c644:	17a00800 	strne	r0, [r0, r0, lsl #16]!
    c648:	7d020800 	stcvc	8, cr0, [r2, #-0]
    c64c:	05aa0100 	streq	r0, [sl, #256]!	; 0x100
    c650:	910d0000 	mrsls	r0, (UNDEF: 13)
    c654:	01000006 	tsteq	r0, r6
    c658:	00791070 	rsbseq	r1, r9, r0, ror r0
    c65c:	7d3d0000 	ldcvc	0, cr0, [sp, #-0]
    c660:	7d390000 	ldcvc	0, cr0, [r9, #-0]
    c664:	70110000 	andsvc	r0, r1, r0
    c668:	01007274 	tsteq	r0, r4, ror r2
    c66c:	00791a70 	rsbseq	r1, r9, r0, ror sl
    c670:	51010000 	mrspl	r0, (UNDEF: 1)
    c674:	72696411 	rsbvc	r6, r9, #285212672	; 0x11000000
    c678:	23700100 	cmncs	r0, #0, 2
    c67c:	00000079 	andeq	r0, r0, r9, ror r0
    c680:	10005201 	andne	r5, r0, r1, lsl #4
    c684:	00265c01 	eoreq	r5, r6, r1, lsl #24
    c688:	056a0100 	strbeq	r0, [sl, #-256]!	; 0xffffff00
    c68c:	00007901 	andeq	r7, r0, r1, lsl #18
    c690:	00179800 	andseq	r9, r7, r0, lsl #16
    c694:	00179c08 	andseq	r9, r7, r8, lsl #24
    c698:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    c69c:	0005dd01 	andeq	sp, r5, r1, lsl #26
    c6a0:	06910d00 	ldreq	r0, [r1], r0, lsl #26
    c6a4:	6a010000 	bvs	4c6ac <_Min_Heap_Size+0x4beac>
    c6a8:	00007911 	andeq	r7, r0, r1, lsl r9
    c6ac:	007d6200 	rsbseq	r6, sp, r0, lsl #4
    c6b0:	007d5e00 	rsbseq	r5, sp, r0, lsl #28
    c6b4:	01100000 	tsteq	r0, r0
    c6b8:	0000257a 	andeq	r2, r0, sl, ror r5
    c6bc:	01056301 	tsteq	r5, r1, lsl #6
    c6c0:	00000079 	andeq	r0, r0, r9, ror r0
    c6c4:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
    c6c8:	08001798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, ip}
    c6cc:	01007d02 	tsteq	r0, r2, lsl #26
    c6d0:	0000061d 	andeq	r0, r0, sp, lsl r6
    c6d4:	0006910d 	andeq	r9, r6, sp, lsl #2
    c6d8:	10630100 	rsbne	r0, r3, r0, lsl #2
    c6dc:	00000079 	andeq	r0, r0, r9, ror r0
    c6e0:	00007d87 	andeq	r7, r0, r7, lsl #27
    c6e4:	00007d83 	andeq	r7, r0, r3, lsl #27
    c6e8:	00747311 	rsbseq	r7, r4, r1, lsl r3
    c6ec:	58236301 	stmdapl	r3!, {r0, r8, r9, sp, lr}
    c6f0:	01000004 	tsteq	r0, r4
    c6f4:	01100051 	tsteq	r0, r1, asr r0
    c6f8:	0000264b 	andeq	r2, r0, fp, asr #12
    c6fc:	01055c01 	tsteq	r5, r1, lsl #24
    c700:	00000079 	andeq	r0, r0, r9, ror r0
    c704:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
    c708:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
    c70c:	01007d02 	tsteq	r0, r2, lsl #26
    c710:	00000650 	andeq	r0, r0, r0, asr r6
    c714:	0006910d 	andeq	r9, r6, sp, lsl #2
    c718:	105c0100 	subsne	r0, ip, r0, lsl #2
    c71c:	00000079 	andeq	r0, r0, r9, ror r0
    c720:	00007dac 	andeq	r7, r0, ip, lsr #27
    c724:	00007da8 	andeq	r7, r0, r8, lsr #27
    c728:	6c010c00 	stcvs	12, cr0, [r1], {-0}
    c72c:	01000025 	tsteq	r0, r5, lsr #32
    c730:	79011b50 	stmdbvc	r1, {r4, r6, r8, r9, fp, ip}
    c734:	6c000000 	stcvs	0, cr0, [r0], {-0}
    c738:	88080017 	stmdahi	r8, {r0, r1, r2, r4}
    c73c:	cd080017 	stcgt	0, cr0, [r8, #-92]	; 0xffffffa4
    c740:	0100007d 	tsteq	r0, sp, ror r0
    c744:	000006c9 	andeq	r0, r0, r9, asr #13
    c748:	0006910d 	andeq	r9, r6, sp, lsl #2
    c74c:	26500100 	ldrbcs	r0, [r0], -r0, lsl #2
    c750:	00000079 	andeq	r0, r0, r9, ror r0
    c754:	00007df1 	strdeq	r7, [r0], -r1
    c758:	00007ded 	andeq	r7, r0, sp, ror #27
    c75c:	7274700e 	rsbsvc	r7, r4, #14
    c760:	32500100 	subscc	r0, r0, #0, 2
    c764:	00000106 	andeq	r0, r0, r6, lsl #2
    c768:	00007e1a 	andeq	r7, r0, sl, lsl lr
    c76c:	00007e12 	andeq	r7, r0, r2, lsl lr
    c770:	6e656c0e 	cdpvs	12, 6, cr6, cr5, cr14, {0}
    c774:	3b500100 	blcc	140cb7c <_Min_Heap_Size+0x140c37c>
    c778:	00000079 	andeq	r0, r0, r9, ror r0
    c77c:	00007e54 	andeq	r7, r0, r4, asr lr
    c780:	00007e50 	andeq	r7, r0, r0, asr lr
    c784:	00269714 	eoreq	r9, r6, r4, lsl r7
    c788:	07530100 	ldrbeq	r0, [r3, -r0, lsl #2]
    c78c:	00000079 	andeq	r0, r0, r9, ror r0
    c790:	00007e76 	andeq	r7, r0, r6, ror lr
    c794:	00007e72 	andeq	r7, r0, r2, ror lr
    c798:	00177e0f 	andseq	r7, r7, pc, lsl #28
    c79c:	00081808 	andeq	r1, r8, r8, lsl #16
    c7a0:	010c0000 	mrseq	r0, (UNDEF: 12)
    c7a4:	00002602 	andeq	r2, r0, r2, lsl #12
    c7a8:	011b4301 	tsteq	fp, r1, lsl #6
    c7ac:	00000079 	andeq	r0, r0, r9, ror r0
    c7b0:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
    c7b4:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    c7b8:	00007e95 	muleq	r0, r5, lr
    c7bc:	00074201 	andeq	r4, r7, r1, lsl #4
    c7c0:	06910d00 	ldreq	r0, [r1], r0, lsl #26
    c7c4:	43010000 	movwmi	r0, #4096	; 0x1000
    c7c8:	00007925 	andeq	r7, r0, r5, lsr #18
    c7cc:	007eb900 	rsbseq	fp, lr, r0, lsl #18
    c7d0:	007eb500 	rsbseq	fp, lr, r0, lsl #10
    c7d4:	74700e00 	ldrbtvc	r0, [r0], #-3584	; 0xfffff200
    c7d8:	43010072 	movwmi	r0, #4210	; 0x1072
    c7dc:	00010631 	andeq	r0, r1, r1, lsr r6
    c7e0:	007ee200 	rsbseq	lr, lr, r0, lsl #4
    c7e4:	007eda00 	rsbseq	sp, lr, r0, lsl #20
    c7e8:	656c0e00 	strbvs	r0, [ip, #-3584]!	; 0xfffff200
    c7ec:	4301006e 	movwmi	r0, #4206	; 0x106e
    c7f0:	0000793a 	andeq	r7, r0, sl, lsr r9
    c7f4:	007f1c00 	rsbseq	r1, pc, r0, lsl #24
    c7f8:	007f1800 	rsbseq	r1, pc, r0, lsl #16
    c7fc:	26971400 	ldrcs	r1, [r7], r0, lsl #8
    c800:	46010000 	strmi	r0, [r1], -r0
    c804:	00007907 	andeq	r7, r0, r7, lsl #18
    c808:	007f3e00 	rsbseq	r3, pc, r0, lsl #28
    c80c:	007f3a00 	rsbseq	r3, pc, r0, lsl #20
    c810:	175a0f00 	ldrbne	r0, [sl, -r0, lsl #30]
    c814:	08260800 	stmdaeq	r6!, {fp}
    c818:	15000000 	strne	r0, [r0, #-0]
    c81c:	00256601 	eoreq	r6, r5, r1, lsl #12
    c820:	063d0100 	ldrteq	r0, [sp], -r0, lsl #2
    c824:	00000101 	andeq	r0, r0, r1, lsl #2
    c828:	00000000 	andeq	r0, r0, r0
    c82c:	7f5d0000 	svcvc	0x005d0000
    c830:	8a010000 	bhi	4c838 <_Min_Heap_Size+0x4c038>
    c834:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    c838:	00001996 	muleq	r0, r6, r9
    c83c:	79113d01 	ldmdbvc	r1, {r0, r8, sl, fp, ip, sp}
    c840:	81000000 	mrshi	r0, (UNDEF: 0)
    c844:	7d00007f 	stcvc	0, cr0, [r0, #-508]	; 0xfffffe04
    c848:	1600007f 			; <UNDEFINED> instruction: 0x1600007f
    c84c:	00000000 	andeq	r0, r0, r0
    c850:	0000078a 	andeq	r0, r0, sl, lsl #15
    c854:	03500117 	cmpeq	r0, #-1073741819	; 0xc0000005
    c858:	175001f3 	smmlsrne	r0, r3, r1, r0
    c85c:	09025101 	stmdbeq	r2, {r0, r8, ip, lr}
    c860:	0c0000ff 	stceq	0, cr0, [r0], {255}	; 0xff
    c864:	00258101 	eoreq	r8, r5, r1, lsl #2
    c868:	05350100 	ldreq	r0, [r5, #-256]!	; 0xffffff00
    c86c:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    c878:	007fa200 	rsbseq	sl, pc, r0, lsl #4
    c87c:	07db0100 	ldrbeq	r0, [fp, r0, lsl #2]
    c880:	700e0000 	andvc	r0, lr, r0
    c884:	01006469 	tsteq	r0, r9, ror #8
    c888:	00790f35 	rsbseq	r0, r9, r5, lsr pc
    c88c:	7fc60000 	svcvc	0x00c60000
    c890:	7fc20000 	svcvc	0x00c20000
    c894:	730e0000 	movwvc	r0, #57344	; 0xe000
    c898:	01006769 	tsteq	r0, r9, ror #14
    c89c:	00791835 	rsbseq	r1, r9, r5, lsr r8
    c8a0:	7feb0000 	svcvc	0x00eb0000
    c8a4:	7fe70000 	svcvc	0x00e70000
    c8a8:	000f0000 	andeq	r0, pc, r0
    c8ac:	0a000000 	beq	c8b4 <_Min_Heap_Size+0xc0b4>
    c8b0:	00000008 	andeq	r0, r0, r8
    c8b4:	26a50118 	ssatcs	r0, #6, r8, lsl #2
    c8b8:	30010000 	andcc	r0, r1, r0
    c8bc:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    c8c8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c8cc:	01190100 	tsteq	r9, r0, lsl #2
    c8d0:	000025a9 	andeq	r2, r0, r9, lsr #11
    c8d4:	00062c01 	andeq	r2, r6, r1, lsl #24
    c8d8:	00000000 	andeq	r0, r0, r0
    c8dc:	02000000 	andeq	r0, r0, #0
    c8e0:	1a01007d 	bne	4cadc <_Min_Heap_Size+0x4c2dc>
    c8e4:	24ff0101 	ldrbtcs	r0, [pc], #257	; c8ec <_Min_Heap_Size+0xc0ec>
    c8e8:	24ff0000 	ldrbtcs	r0, [pc], #0	; c8f0 <_Min_Heap_Size+0xc0f0>
    c8ec:	0f090000 	svceq	0x00090000
    c8f0:	01011a0d 	tsteq	r1, sp, lsl #20
    c8f4:	0000047f 	andeq	r0, r0, pc, ror r4
    c8f8:	0000047f 	andeq	r0, r0, pc, ror r4
    c8fc:	1a0c2301 	bne	315508 <_Min_Heap_Size+0x314d08>
    c900:	26080101 	strcs	r0, [r8], -r1, lsl #2
    c904:	26080000 	strcs	r0, [r8], -r0
    c908:	24010000 	strcs	r0, [r1], #-0
    c90c:	0835000c 	ldmdaeq	r5!, {r2, r3}
    c910:	00020000 	andeq	r0, r2, r0
    c914:	00001cbe 			; <UNDEFINED> instruction: 0x00001cbe
    c918:	05d70104 	ldrbeq	r0, [r7, #260]	; 0x104
    c91c:	190c0000 	stmdbne	ip, {}	; <UNPREDICTABLE>
    c920:	20000028 	andcs	r0, r0, r8, lsr #32
    c924:	40000004 	andmi	r0, r0, r4
    c928:	00000007 	andeq	r0, r0, r7
    c92c:	00000000 	andeq	r0, r0, r0
    c930:	03000000 	movweq	r0, #0
    c934:	02000090 	andeq	r0, r0, #144	; 0x90
    c938:	05c50601 	strbeq	r0, [r5, #1537]	; 0x601
    c93c:	01020000 	mrseq	r0, (UNDEF: 2)
    c940:	0005c308 	andeq	ip, r5, r8, lsl #6
    c944:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    c948:	000003fa 	strdeq	r0, [r0], -sl
    c94c:	00075c03 	andeq	r5, r7, r3, lsl #24
    c950:	19390300 	ldmdbne	r9!, {r8, r9}
    c954:	0000004a 	andeq	r0, r0, sl, asr #32
    c958:	f6070202 			; <UNDEFINED> instruction: 0xf6070202
    c95c:	02000007 	andeq	r0, r0, #7
    c960:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    c964:	c2030000 	andgt	r0, r3, #0
    c968:	03000002 	movweq	r0, #2
    c96c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    c970:	04020000 	streq	r0, [r2], #-0
    c974:	0000b307 	andeq	fp, r0, r7, lsl #6
    c978:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    c97c:	000002e7 	andeq	r0, r0, r7, ror #5
    c980:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    c984:	04000000 	streq	r0, [r0], #-0
    c988:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c98c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c990:	0000b807 	andeq	fp, r0, r7, lsl #16
    c994:	00800500 	addeq	r0, r0, r0, lsl #10
    c998:	36030000 	strcc	r0, [r3], -r0
    c99c:	04000026 	streq	r0, [r0], #-38	; 0xffffffda
    c9a0:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    c9a4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c9a8:	00072604 	andeq	r2, r7, r4, lsl #12
    c9ac:	08010200 	stmdaeq	r1, {r9}
    c9b0:	000005cc 	andeq	r0, r0, ip, asr #11
    c9b4:	00075e03 	andeq	r5, r7, r3, lsl #28
    c9b8:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    c9bc:	0000003e 	andeq	r0, r0, lr, lsr r0
    c9c0:	0002c403 	andeq	ip, r2, r3, lsl #8
    c9c4:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    c9c8:	00000058 	andeq	r0, r0, r8, asr r0
    c9cc:	0027fe03 	eoreq	pc, r7, r3, lsl #28
    c9d0:	23240600 			; <UNDEFINED> instruction: 0x23240600
    c9d4:	000000ca 	andeq	r0, r0, sl, asr #1
    c9d8:	00284706 	eoreq	r4, r8, r6, lsl #14
    c9dc:	25062000 	strcs	r2, [r6, #-0]
    c9e0:	00014a08 	andeq	r4, r1, r8, lsl #20
    c9e4:	30720700 	rsbscc	r0, r2, r0, lsl #14
    c9e8:	12260600 	eorne	r0, r6, #0, 12
    c9ec:	00000080 	andeq	r0, r0, r0, lsl #1
    c9f0:	07002302 	streq	r2, [r0, -r2, lsl #6]
    c9f4:	06003172 			; <UNDEFINED> instruction: 0x06003172
    c9f8:	00801227 	addeq	r1, r0, r7, lsr #4
    c9fc:	23020000 	movwcs	r0, #8192	; 0x2000
    ca00:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    ca04:	12280600 	eorne	r0, r8, #0, 12
    ca08:	00000080 	andeq	r0, r0, r0, lsl #1
    ca0c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    ca10:	06003372 			; <UNDEFINED> instruction: 0x06003372
    ca14:	00801229 	addeq	r1, r0, r9, lsr #4
    ca18:	23020000 	movwcs	r0, #8192	; 0x2000
    ca1c:	3172070c 	cmncc	r2, ip, lsl #14
    ca20:	2a060032 	bcs	18caf0 <_Min_Heap_Size+0x18c2f0>
    ca24:	00008012 	andeq	r8, r0, r2, lsl r0
    ca28:	10230200 	eorne	r0, r3, r0, lsl #4
    ca2c:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    ca30:	80122b06 	andshi	r2, r2, r6, lsl #22
    ca34:	02000000 	andeq	r0, r0, #0
    ca38:	70071423 	andvc	r1, r7, r3, lsr #8
    ca3c:	2c060063 	stccs	0, cr0, [r6], {99}	; 0x63
    ca40:	00008012 	andeq	r8, r0, r2, lsl r0
    ca44:	18230200 	stmdane	r3!, {r9}
    ca48:	72737007 	rsbsvc	r7, r3, #7
    ca4c:	122d0600 	eorne	r0, sp, #0, 12
    ca50:	00000080 	andeq	r0, r0, r0, lsl #1
    ca54:	001c2302 	andseq	r2, ip, r2, lsl #6
    ca58:	0027ba03 	eoreq	fp, r7, r3, lsl #20
    ca5c:	23300600 	teqcs	r0, #0, 12
    ca60:	00000156 	andeq	r0, r0, r6, asr r1
    ca64:	0027df06 	eoreq	sp, r7, r6, lsl #30
    ca68:	31062000 	mrscc	r2, (UNDEF: 6)
    ca6c:	0001d608 	andeq	sp, r1, r8, lsl #12
    ca70:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    ca74:	12320600 	eorsne	r0, r2, #0, 12
    ca78:	00000080 	andeq	r0, r0, r0, lsl #1
    ca7c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    ca80:	06003572 			; <UNDEFINED> instruction: 0x06003572
    ca84:	00801233 	addeq	r1, r0, r3, lsr r2
    ca88:	23020000 	movwcs	r0, #8192	; 0x2000
    ca8c:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    ca90:	12340600 	eorsne	r0, r4, #0, 12
    ca94:	00000080 	andeq	r0, r0, r0, lsl #1
    ca98:	07082302 	streq	r2, [r8, -r2, lsl #6]
    ca9c:	06003772 			; <UNDEFINED> instruction: 0x06003772
    caa0:	00801235 	addeq	r1, r0, r5, lsr r2
    caa4:	23020000 	movwcs	r0, #8192	; 0x2000
    caa8:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    caac:	12360600 	eorsne	r0, r6, #0, 12
    cab0:	00000080 	andeq	r0, r0, r0, lsl #1
    cab4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    cab8:	06003972 			; <UNDEFINED> instruction: 0x06003972
    cabc:	00801237 	addeq	r1, r0, r7, lsr r2
    cac0:	23020000 	movwcs	r0, #8192	; 0x2000
    cac4:	31720714 	cmncc	r2, r4, lsl r7
    cac8:	38060030 	stmdacc	r6, {r4, r5}
    cacc:	00008012 	andeq	r8, r0, r2, lsl r0
    cad0:	18230200 	stmdane	r3!, {r9}
    cad4:	31317207 	teqcc	r1, r7, lsl #4
    cad8:	12390600 	eorsne	r0, r9, #0, 12
    cadc:	00000080 	andeq	r0, r0, r0, lsl #1
    cae0:	001c2302 	andseq	r2, ip, r2, lsl #6
    cae4:	00273203 	eoreq	r3, r7, r3, lsl #4
    cae8:	1c3c0600 	ldcne	6, cr0, [ip], #-0
    caec:	000001e2 	andeq	r0, r0, r2, ror #3
    caf0:	0027f206 	eoreq	pc, r7, r6, lsl #4
    caf4:	3d064000 	stccc	0, cr4, [r6, #-0]
    caf8:	00020e08 	andeq	r0, r2, r8, lsl #28
    cafc:	27eb0800 	strbcs	r0, [fp, r0, lsl #16]!
    cb00:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    cb04:	00014a1a 	andeq	r4, r1, sl, lsl sl
    cb08:	00230200 	eoreq	r0, r3, r0, lsl #4
    cb0c:	00285308 	eoreq	r5, r8, r8, lsl #6
    cb10:	1a3f0600 	bne	fce318 <_Min_Heap_Size+0xfcdb18>
    cb14:	000000be 	strheq	r0, [r0], -lr
    cb18:	00202302 	eoreq	r2, r0, r2, lsl #6
    cb1c:	00271709 	eoreq	r1, r7, r9, lsl #14
    cb20:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    cb24:	00000080 	andeq	r0, r0, r0, lsl #1
    cb28:	9a090101 	bls	24cf34 <_Min_Heap_Size+0x24c734>
    cb2c:	01000028 	tsteq	r0, r8, lsr #32
    cb30:	0080151e 	addeq	r1, r0, lr, lsl r5
    cb34:	01010000 	mrseq	r0, (UNDEF: 1)
    cb38:	00276a09 	eoreq	r6, r7, r9, lsl #20
    cb3c:	151f0100 	ldrne	r0, [pc, #-256]	; ca44 <_Min_Heap_Size+0xc244>
    cb40:	00000080 	andeq	r0, r0, r0, lsl #1
    cb44:	9c090101 	stflss	f0, [r9], {1}
    cb48:	01000024 	tsteq	r0, r4, lsr #32
    cb4c:	00801520 	addeq	r1, r0, r0, lsr #10
    cb50:	01010000 	mrseq	r0, (UNDEF: 1)
    cb54:	0028870a 	eoreq	r8, r8, sl, lsl #14
    cb58:	17660100 	strbne	r0, [r6, -r0, lsl #2]!
    cb5c:	00000087 	andeq	r0, r0, r7, lsl #1
    cb60:	dc030501 	cfstr32le	mvfx0, [r3], {1}
    cb64:	0a200001 	beq	80cb70 <_Min_Heap_Size+0x80c370>
    cb68:	00002874 	andeq	r2, r0, r4, ror r8
    cb6c:	87176701 	ldrhi	r6, [r7, -r1, lsl #14]
    cb70:	01000000 	mrseq	r0, (UNDEF: 0)
    cb74:	01e00305 	mvneq	r0, r5, lsl #6
    cb78:	010b2000 	mrseq	r2, (UNDEF: 11)
    cb7c:	00002750 	andeq	r2, r0, r0, asr r7
    cb80:	010ef901 	tsteq	lr, r1, lsl #18	; <UNPREDICTABLE>
    cb84:	00000080 	andeq	r0, r0, r0, lsl #1
	...
    cb90:	01007d02 	tsteq	r0, r2, lsl #26
    cb94:	2772010c 	ldrbcs	r0, [r2, -ip, lsl #2]!
    cb98:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    cb9c:	0080010e 	addeq	r0, r0, lr, lsl #2
	...
    cba8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    cbac:	02c80100 	sbceq	r0, r8, #0, 2
    cbb0:	fc0d0000 	stc2	0, cr0, [sp], {-0}
    cbb4:	00000007 	andeq	r0, r0, r7
    cbb8:	02000000 	andeq	r0, r0, #0
	...
    cbc4:	0e0cf601 	cfmadd32eq	mvax0, mvfx15, mvfx12, mvfx1
    cbc8:	0000080f 	andeq	r0, r0, pc, lsl #16
    cbcc:	0000800e 	andeq	r8, r0, lr
    cbd0:	0000800c 	andeq	r8, r0, ip
    cbd4:	010f0000 	mrseq	r0, CPSR
    cbd8:	0000279e 	muleq	r0, lr, r7
    cbdc:	0105c901 	tsteq	r5, r1, lsl #18
    cbe0:	00000079 	andeq	r0, r0, r9, ror r0
    cbe4:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
    cbe8:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    cbec:	00008021 	andeq	r8, r0, r1, lsr #32
    cbf0:	0003a201 	andeq	sl, r3, r1, lsl #4
    cbf4:	285a1000 	ldmdacs	sl, {ip}^
    cbf8:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    cbfc:	0003a228 	andeq	sl, r3, r8, lsr #4
    cc00:	00804900 	addeq	r4, r0, r0, lsl #18
    cc04:	00804100 	addeq	r4, r0, r0, lsl #2
    cc08:	26881000 	strcs	r1, [r8], r0
    cc0c:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    cc10:	00008c37 	andeq	r8, r0, r7, lsr ip
    cc14:	00808800 	addeq	r8, r0, r0, lsl #16
    cc18:	00808000 	addeq	r8, r0, r0
    cc1c:	27801000 	strcs	r1, [r0, r0]
    cc20:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    cc24:	0003a24b 	andeq	sl, r3, fp, asr #4
    cc28:	0080c500 	addeq	ip, r0, r0, lsl #10
    cc2c:	0080bf00 	addeq	fp, r0, r0, lsl #30
    cc30:	275e1000 	ldrbcs	r1, [lr, -r0]
    cc34:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    cc38:	0003a266 	andeq	sl, r3, r6, ror #4
    cc3c:	0080f900 	addeq	pc, r0, r0, lsl #18
    cc40:	0080f100 	addeq	pc, r0, r0, lsl #2
    cc44:	1cc31100 	stfnee	f1, [r3], {0}
    cc48:	ca010000 	bgt	4cc50 <_Min_Heap_Size+0x4c450>
    cc4c:	00007909 	andeq	r7, r0, r9, lsl #18
    cc50:	00813600 	addeq	r3, r1, r0, lsl #12
    cc54:	00813000 	addeq	r3, r1, r0
    cc58:	63701200 	cmnvs	r0, #0, 4
    cc5c:	12cb0100 	sbcne	r0, fp, #0, 2
    cc60:	00000080 	andeq	r0, r0, r0, lsl #1
    cc64:	0000816b 	andeq	r8, r0, fp, ror #2
    cc68:	00008161 	andeq	r8, r0, r1, ror #2
    cc6c:	00706f12 	rsbseq	r6, r0, r2, lsl pc
    cc70:	801acb01 	andshi	ip, sl, r1, lsl #22
    cc74:	b4000000 	strlt	r0, [r0], #-0
    cc78:	ae000081 	cdpge	0, 0, cr0, cr0, cr1, {4}
    cc7c:	12000081 	andne	r0, r0, #129	; 0x81
    cc80:	01007073 	tsteq	r0, r3, ror r0
    cc84:	03a223cb 			; <UNDEFINED> instruction: 0x03a223cb
    cc88:	81e50000 	mvnhi	r0, r0
    cc8c:	81df0000 	bicshi	r0, pc, r0
    cc90:	96130000 	ldrls	r0, [r3], -r0
    cc94:	19080018 	stmdbne	r8, {r3, r4}
    cc98:	98000007 	stmdals	r0, {r0, r1, r2}
    cc9c:	14000003 	strne	r0, [r0], #-3
    cca0:	79025001 	stmdbvc	r2, {r0, ip, lr}
    cca4:	9a150000 	bls	54ccac <_Min_Heap_Size+0x54c4ac>
    cca8:	b8080018 	stmdalt	r8, {r3, r4}
    ccac:	00000006 	andeq	r0, r0, r6
    ccb0:	00800416 	addeq	r0, r0, r6, lsl r4
    ccb4:	01170000 	tsteq	r7, r0
    ccb8:	00002861 	andeq	r2, r0, r1, ror #16
    ccbc:	01068e01 	tsteq	r6, r1, lsl #28
    ccc0:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    ccc4:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
    ccc8:	00008210 	andeq	r8, r0, r0, lsl r2
    cccc:	0006a801 	andeq	sl, r6, r1, lsl #16
    ccd0:	249e1000 	ldrcs	r1, [lr], #0
    ccd4:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    ccd8:	0003a227 	andeq	sl, r3, r7, lsr #4
    ccdc:	00823600 	addeq	r3, r2, r0, lsl #12
    cce0:	00823000 	addeq	r3, r2, r0
    cce4:	27b31000 	ldrcs	r1, [r3, r0]!
    cce8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    ccec:	0000803b 	andeq	r8, r0, fp, lsr r0
    ccf0:	00826600 	addeq	r6, r2, r0, lsl #12
    ccf4:	00826200 	addeq	r6, r2, r0, lsl #4
    ccf8:	1cc31100 	stfnee	f1, [r3], {0}
    ccfc:	8f010000 	svchi	0x00010000
    cd00:	00007909 	andeq	r7, r0, r9, lsl #18
    cd04:	00828a00 	addeq	r8, r2, r0, lsl #20
    cd08:	00828400 	addeq	r8, r2, r0, lsl #8
    cd0c:	274a1100 	strbcs	r1, [sl, -r0, lsl #2]
    cd10:	8f010000 	svchi	0x00010000
    cd14:	00007914 	andeq	r7, r0, r4, lsl r9
    cd18:	0082bc00 	addeq	fp, r2, r0, lsl #24
    cd1c:	0082b400 	addeq	fp, r2, r0, lsl #8
    cd20:	27861100 	strcs	r1, [r6, r0, lsl #2]
    cd24:	90010000 	andls	r0, r1, r0
    cd28:	0003a213 	andeq	sl, r3, r3, lsl r2
    cd2c:	00831900 	addeq	r1, r3, r0, lsl #18
    cd30:	0082f300 	addeq	pc, r2, r0, lsl #6
    cd34:	27f81800 	ldrbcs	r1, [r8, r0, lsl #16]!
    cd38:	91010000 	mrsls	r0, (UNDEF: 1)
    cd3c:	0001d61a 	andeq	sp, r1, sl, lsl r6
    cd40:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
    cd44:	18200001 	stmdane	r0!, {r0}
    cd48:	0000285a 	andeq	r2, r0, sl, asr r8
    cd4c:	a8199201 	ldmdage	r9, {r0, r9, ip, pc}
    cd50:	05000006 	streq	r0, [r0, #-6]
    cd54:	0000dc03 	andeq	sp, r0, r3, lsl #24
    cd58:	19201320 	stmdbne	r0!, {r5, r8, r9, ip}
    cd5c:	081d0800 	ldmdaeq	sp, {fp}
    cd60:	045f0000 	ldrbeq	r0, [pc], #-0	; cd68 <_Min_Heap_Size+0xc568>
    cd64:	01140000 	tsteq	r4, r0
    cd68:	00770250 	rsbseq	r0, r7, r0, asr r2
    cd6c:	19261300 	stmdbne	r6!, {r8, r9, ip}
    cd70:	081d0800 	ldmdaeq	sp, {fp}
    cd74:	04760000 	ldrbteq	r0, [r6], #-0
    cd78:	01140000 	tsteq	r4, r0
    cd7c:	2c030550 	cfstr32cs	mvfx0, [r3], {80}	; 0x50
    cd80:	0008002d 	andeq	r0, r8, sp, lsr #32
    cd84:	00192c13 	andseq	r2, r9, r3, lsl ip
    cd88:	00081d08 	andeq	r1, r8, r8, lsl #26
    cd8c:	00048d00 	andeq	r8, r4, r0, lsl #26
    cd90:	50011400 	andpl	r1, r1, r0, lsl #8
    cd94:	2d4c0305 	stclcs	3, cr0, [ip, #-20]	; 0xffffffec
    cd98:	13000800 	movwne	r0, #2048	; 0x800
    cd9c:	08001934 	stmdaeq	r0, {r2, r4, r5, r8, fp, ip}
    cda0:	0000082a 	andeq	r0, r0, sl, lsr #16
    cda4:	000004a4 	andeq	r0, r0, r4, lsr #9
    cda8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cdac:	002d6003 	eoreq	r6, sp, r3
    cdb0:	3c130008 	ldccc	0, cr0, [r3], {8}
    cdb4:	2a080019 	bcs	20ce20 <_Min_Heap_Size+0x20c620>
    cdb8:	bb000008 	bllt	cde0 <_Min_Heap_Size+0xc5e0>
    cdbc:	14000004 	strne	r0, [r0], #-4
    cdc0:	03055001 	movweq	r5, #20481	; 0x5001
    cdc4:	08002d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp, sp}
    cdc8:	19441300 	stmdbne	r4, {r8, r9, ip}^
    cdcc:	082a0800 	stmdaeq	sl!, {fp}
    cdd0:	04d20000 	ldrbeq	r0, [r2], #0
    cdd4:	01140000 	tsteq	r4, r0
    cdd8:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
    cddc:	0008002d 	andeq	r0, r8, sp, lsr #32
    cde0:	00194c13 	andseq	r4, r9, r3, lsl ip
    cde4:	00082a08 	andeq	r2, r8, r8, lsl #20
    cde8:	0004e900 	andeq	lr, r4, r0, lsl #18
    cdec:	50011400 	andpl	r1, r1, r0, lsl #8
    cdf0:	2d9c0305 	ldccs	3, cr0, [ip, #20]
    cdf4:	13000800 	movwne	r0, #2048	; 0x800
    cdf8:	08001954 	stmdaeq	r0, {r2, r4, r6, r8, fp, ip}
    cdfc:	0000082a 	andeq	r0, r0, sl, lsr #16
    ce00:	00000500 	andeq	r0, r0, r0, lsl #10
    ce04:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ce08:	002db003 	eoreq	fp, sp, r3
    ce0c:	5c130008 	ldcpl	0, cr0, [r3], {8}
    ce10:	2a080019 	bcs	20ce7c <_Min_Heap_Size+0x20c67c>
    ce14:	17000008 	strne	r0, [r0, -r8]
    ce18:	14000005 	strne	r0, [r0], #-5
    ce1c:	03055001 	movweq	r5, #20481	; 0x5001
    ce20:	08002dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp, sp}
    ce24:	19641300 	stmdbne	r4!, {r8, r9, ip}^
    ce28:	082a0800 	stmdaeq	sl!, {fp}
    ce2c:	052e0000 	streq	r0, [lr, #-0]!
    ce30:	01140000 	tsteq	r4, r0
    ce34:	d8030550 	stmdale	r3, {r4, r6, r8, sl}
    ce38:	0008002d 	andeq	r0, r8, sp, lsr #32
    ce3c:	00196c13 	andseq	r6, r9, r3, lsl ip
    ce40:	00082a08 	andeq	r2, r8, r8, lsl #20
    ce44:	00054500 	andeq	r4, r5, r0, lsl #10
    ce48:	50011400 	andpl	r1, r1, r0, lsl #8
    ce4c:	2dec0305 	stclcs	3, cr0, [ip, #20]!
    ce50:	13000800 	movwne	r0, #2048	; 0x800
    ce54:	08001974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp, ip}
    ce58:	0000082a 	andeq	r0, r0, sl, lsr #16
    ce5c:	0000055c 	andeq	r0, r0, ip, asr r5
    ce60:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ce64:	002e0003 	eoreq	r0, lr, r3
    ce68:	7c130008 	ldcvc	0, cr0, [r3], {8}
    ce6c:	2a080019 	bcs	20ced8 <_Min_Heap_Size+0x20c6d8>
    ce70:	73000008 	movwvc	r0, #8
    ce74:	14000005 	strne	r0, [r0], #-5
    ce78:	03055001 	movweq	r5, #20481	; 0x5001
    ce7c:	08002e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, sp}
    ce80:	19841300 	stmibne	r4, {r8, r9, ip}
    ce84:	082a0800 	stmdaeq	sl!, {fp}
    ce88:	058a0000 	streq	r0, [sl]
    ce8c:	01140000 	tsteq	r4, r0
    ce90:	28030550 	stmdacs	r3, {r4, r6, r8, sl}
    ce94:	0008002e 	andeq	r0, r8, lr, lsr #32
    ce98:	00198c13 	andseq	r8, r9, r3, lsl ip
    ce9c:	00082a08 	andeq	r2, r8, r8, lsl #20
    cea0:	0005a100 	andeq	sl, r5, r0, lsl #2
    cea4:	50011400 	andpl	r1, r1, r0, lsl #8
    cea8:	2e3c0305 	cdpcs	3, 3, cr0, cr12, cr5, {0}
    ceac:	13000800 	movwne	r0, #2048	; 0x800
    ceb0:	08001994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip}
    ceb4:	0000082a 	andeq	r0, r0, sl, lsr #16
    ceb8:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    cebc:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cec0:	002e5003 	eoreq	r5, lr, r3
    cec4:	9c130008 	ldcls	0, cr0, [r3], {8}
    cec8:	2a080019 	bcs	20cf34 <_Min_Heap_Size+0x20c734>
    cecc:	cf000008 	svcgt	0x00000008
    ced0:	14000005 	strne	r0, [r0], #-5
    ced4:	03055001 	movweq	r5, #20481	; 0x5001
    ced8:	08002e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, sp}
    cedc:	19a41300 	stmibne	r4!, {r8, r9, ip}
    cee0:	082a0800 	stmdaeq	sl!, {fp}
    cee4:	05e60000 	strbeq	r0, [r6, #0]!
    cee8:	01140000 	tsteq	r4, r0
    ceec:	78030550 	stmdavc	r3, {r4, r6, r8, sl}
    cef0:	0008002e 	andeq	r0, r8, lr, lsr #32
    cef4:	0019ac13 	andseq	sl, r9, r3, lsl ip
    cef8:	00082a08 	andeq	r2, r8, r8, lsl #20
    cefc:	0005fd00 	andeq	pc, r5, r0, lsl #26
    cf00:	50011400 	andpl	r1, r1, r0, lsl #8
    cf04:	2e8c0305 	cdpcs	3, 8, cr0, cr12, cr5, {0}
    cf08:	13000800 	movwne	r0, #2048	; 0x800
    cf0c:	080019b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, fp, ip}
    cf10:	0000081d 	andeq	r0, r0, sp, lsl r8
    cf14:	00000611 	andeq	r0, r0, r1, lsl r6
    cf18:	02500114 	subseq	r0, r0, #20, 2
    cf1c:	13000077 	movwne	r0, #119	; 0x77
    cf20:	080019ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, fp, ip}
    cf24:	0000082a 	andeq	r0, r0, sl, lsr #16
    cf28:	0000062e 	andeq	r0, r0, lr, lsr #12
    cf2c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cf30:	002ea003 	eoreq	sl, lr, r3
    cf34:	51011408 	tstpl	r1, r8, lsl #8
    cf38:	00007602 	andeq	r7, r0, r2, lsl #12
    cf3c:	0019c813 	andseq	ip, r9, r3, lsl r8
    cf40:	0002c808 	andeq	ip, r2, r8, lsl #16
    cf44:	00065200 	andeq	r5, r6, r0, lsl #4
    cf48:	50011400 	andpl	r1, r1, r0, lsl #8
    cf4c:	00dc0305 	sbcseq	r0, ip, r5, lsl #6
    cf50:	01142000 	tsteq	r4, r0
    cf54:	40080251 	andmi	r0, r8, r1, asr r2
    cf58:	03520114 	cmpeq	r2, #20, 2
    cf5c:	0000c075 	andeq	ip, r0, r5, ror r0
    cf60:	0019d013 	andseq	sp, r9, r3, lsl r0
    cf64:	00082a08 	andeq	r2, r8, r8, lsl #20
    cf68:	00066900 	andeq	r6, r6, r0, lsl #18
    cf6c:	50011400 	andpl	r1, r1, r0, lsl #8
    cf70:	2eb80305 	cdpcs	3, 11, cr0, cr8, cr5, {0}
    cf74:	13000800 	movwne	r0, #2048	; 0x800
    cf78:	080019d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, ip}
    cf7c:	0000082a 	andeq	r0, r0, sl, lsr #16
    cf80:	00000680 	andeq	r0, r0, r0, lsl #13
    cf84:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cf88:	002ec803 	eoreq	ip, lr, r3, lsl #16
    cf8c:	e8130008 	ldmda	r3, {r3}
    cf90:	2a080019 	bcs	20cffc <_Min_Heap_Size+0x20c7fc>
    cf94:	97000008 	strls	r0, [r0, -r8]
    cf98:	14000006 	strne	r0, [r0], #-6
    cf9c:	03055001 	movweq	r5, #20481	; 0x5001
    cfa0:	08002ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp, sp}
    cfa4:	19f41900 	ldmibne	r4!, {r8, fp, ip}^
    cfa8:	081d0800 	ldmdaeq	sp, {fp}
    cfac:	01140000 	tsteq	r4, r0
    cfb0:	00770250 	rsbseq	r0, r7, r0, asr r2
    cfb4:	801a0000 	andshi	r0, sl, r0
    cfb8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    cfbc:	1b000006 	blne	cfdc <_Min_Heap_Size+0xc7dc>
    cfc0:	00000080 	andeq	r0, r0, r0, lsl #1
    cfc4:	1e1c003f 	mrcne	0, 0, r0, cr12, cr15, {1}
    cfc8:	01000027 	tsteq	r0, r7, lsr #32
    cfcc:	12010d7f 	andne	r0, r1, #8128	; 0x1fc0
    cfd0:	cc000007 	stcgt	0, cr0, [r0], {7}
    cfd4:	02080017 	andeq	r0, r8, #23
    cfd8:	02080018 	andeq	r0, r8, #24
    cfdc:	1201007d 	andne	r0, r1, #125	; 0x7d
    cfe0:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    cfe4:	00736e69 	rsbseq	r6, r3, r9, ror #28
    cfe8:	802e7f01 	eorhi	r7, lr, r1, lsl #30
    cfec:	1f000000 	svcne	0x00000000
    cff0:	1b000084 	blne	d208 <_Min_Heap_Size+0xca08>
    cff4:	11000084 	smlabbne	r0, r4, r0, r0
    cff8:	000027cf 	andeq	r2, r0, pc, asr #15
    cffc:	a60e8301 	strge	r8, [lr], -r1, lsl #6
    d000:	42000000 	andmi	r0, r0, #0
    d004:	40000084 	andmi	r0, r0, r4, lsl #1
    d008:	11000084 	smlabbne	r0, r4, r0, r0
    d00c:	000027d7 	ldrdeq	r2, [r0], -r7
    d010:	a60e8401 	strge	r8, [lr], -r1, lsl #8
    d014:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    d018:	55000084 	strpl	r0, [r0, #-132]	; 0xffffff7c
    d01c:	00000084 	andeq	r0, r0, r4, lsl #1
    d020:	13020102 	movwne	r0, #8450	; 0x2102
    d024:	1e000028 	cdpne	0, 0, cr0, cr0, cr8, {1}
    d028:	0000278c 	andeq	r2, r0, ip, lsl #15
    d02c:	01157401 	tsteq	r5, r1, lsl #8
    d030:	00000080 	andeq	r0, r0, r0, lsl #1
    d034:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    d038:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    d03c:	0000850c 	andeq	r8, r0, ip, lsl #10
    d040:	00078a01 	andeq	r8, r7, r1, lsl #20
    d044:	63701d00 	cmnvs	r0, #0, 26
    d048:	34740100 	ldrbtcc	r0, [r4], #-256	; 0xffffff00
    d04c:	00000080 	andeq	r0, r0, r0, lsl #1
    d050:	0000853c 	andeq	r8, r0, ip, lsr r5
    d054:	00008538 	andeq	r8, r0, r8, lsr r5
    d058:	001f0e18 	andseq	r0, pc, r8, lsl lr	; <UNPREDICTABLE>
    d05c:	0e750100 	rpweqs	f0, f5, f0
    d060:	0000078a 	andeq	r0, r0, sl, lsl #15
    d064:	117c9102 	cmnne	ip, r2, lsl #2
    d068:	00002797 	muleq	r0, r7, r7
    d06c:	80127601 	andshi	r7, r2, r1, lsl #12
    d070:	63000000 	movwvs	r0, #0
    d074:	5d000085 	stcpl	0, cr0, [r0, #-532]	; 0xfffffdec
    d078:	1f000085 	svcne	0x00000085
    d07c:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
    d080:	080017bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip}
    d084:	01006912 	tsteq	r0, r2, lsl r9
    d088:	00790e77 	rsbseq	r0, r9, r7, ror lr
    d08c:	85980000 	ldrhi	r0, [r8]
    d090:	85940000 	ldrhi	r0, [r4]
    d094:	00000000 	andeq	r0, r0, r0
    d098:	0000a61a 	andeq	sl, r0, sl, lsl r6
    d09c:	00079a00 	andeq	r9, r7, r0, lsl #20
    d0a0:	00801b00 	addeq	r1, r0, r0, lsl #22
    d0a4:	00010000 	andeq	r0, r1, r0
    d0a8:	00700117 	rsbseq	r0, r0, r7, lsl r1
    d0ac:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    d0b0:	18040106 	stmdane	r4, {r1, r2, r8}
    d0b4:	18540800 	ldmdane	r4, {fp}^
    d0b8:	85b70800 	ldrhi	r0, [r7, #2048]!	; 0x800
    d0bc:	fc010000 	stc2	0, cr0, [r1], {-0}
    d0c0:	13000007 	movwne	r0, #7
    d0c4:	0800181a 	stmdaeq	r0, {r1, r3, r4, fp, ip}
    d0c8:	0000082a 	andeq	r0, r0, sl, lsr #16
    d0cc:	000007cc 	andeq	r0, r0, ip, asr #15
    d0d0:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    d0d4:	002cc403 	eoreq	ip, ip, r3, lsl #8
    d0d8:	26130008 	ldrcs	r0, [r3], -r8
    d0dc:	2a080018 	bcs	20d144 <_Min_Heap_Size+0x20c944>
    d0e0:	e3000008 	movw	r0, #8
    d0e4:	14000007 	strne	r0, [r0], #-7
    d0e8:	03055001 	movweq	r5, #20481	; 0x5001
    d0ec:	08002ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp, sp}
    d0f0:	182e1900 	stmdane	lr!, {r8, fp, ip}
    d0f4:	082a0800 	stmdaeq	sl!, {fp}
    d0f8:	01140000 	tsteq	r4, r0
    d0fc:	0c030550 	cfstr32eq	mvfx0, [r3], {80}	; 0x50
    d100:	1408002d 	strne	r0, [r8], #-45	; 0xffffffd3
    d104:	31015101 	tstcc	r1, r1, lsl #2
    d108:	40200000 	eormi	r0, r0, r0
    d10c:	02000027 	andeq	r0, r0, #39	; 0x27
    d110:	011f0463 	tsteq	pc, r3, ror #8
    d114:	000000b2 	strheq	r0, [r0], -r2
    d118:	00081d03 	andeq	r1, r8, r3, lsl #26
    d11c:	17242100 	strne	r2, [r4, -r0, lsl #2]!
    d120:	65020000 	strvs	r0, [r2, #-0]
    d124:	00b20c04 	adcseq	r0, r2, r4, lsl #24
    d128:	22000000 	andcs	r0, r0, #0
    d12c:	02280101 	eoreq	r0, r8, #1073741824	; 0x40000000
    d130:	021e0000 	andseq	r0, lr, #0
    d134:	00070000 	andeq	r0, r7, r0
    d138:	00010123 	andeq	r0, r1, r3, lsr #2
    d13c:	00000000 	andeq	r0, r0, r0
    d140:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    d144:	1e0005c8 	cfsh32ne	mvfx0, mvfx0, #-24
    d148:	02000000 	andeq	r0, r0, #0
    d14c:	001f2500 	andseq	r2, pc, r0, lsl #10
    d150:	7c010400 	cfstrsvc	mvf0, [r1], {-0}
    d154:	80000095 	mulhi	r0, r5, r0
    d158:	a1000007 	tstge	r0, r7
    d15c:	20000028 	andcs	r0, r0, r8, lsr #32
    d160:	b7000004 	strlt	r0, [r0, -r4]
    d164:	01000028 	tsteq	r0, r8, lsr #32
    d168:	00002280 	andeq	r2, r0, r0, lsl #5
    d16c:	37000200 	strcc	r0, [r0, -r0, lsl #4]
    d170:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    d174:	0095f201 	addseq	pc, r5, r1, lsl #4
    d178:	0001d000 	andeq	sp, r1, r0
    d17c:	00021408 	andeq	r1, r2, r8, lsl #8
    d180:	0028c508 	eoreq	ip, r8, r8, lsl #10
    d184:	00042000 	andeq	r2, r4, r0
    d188:	0028b700 	eoreq	fp, r8, r0, lsl #14
    d18c:	Address 0x0000d18c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
  errno = ENOMEM;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Heap_Size+0xf8244c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Heap_Size+0x2ce064>
}
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	0b0b0024 	bleq	2c00c8 <_Min_Heap_Size+0x2bf8c8>
    if (status != HAL_OK)
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      uwTickFreq = prevTickFreq;
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
      44:	00001349 	andeq	r1, r0, r9, asr #6
      if (pllsource != 0)
      48:	0b011307 	bleq	44c6c <_Min_Heap_Size+0x4446c>
      4c:	3b0b3a0b 	blcc	2ce880 <_Min_Heap_Size+0x2ce080>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	010b3905 	tsteq	fp, r5, lsl #18
      54:	08000013 	stmdaeq	r0, {r0, r1, r4}
      58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	13490b39 	movtne	r0, #39737	; 0x9b39
      64:	00000a38 	andeq	r0, r0, r8, lsr sl
      68:	03000d09 	movweq	r0, #3337	; 0xd09
      SystemCoreClock = pllvco/pllp;
      6c:	3b0b3a08 	blcc	2ce894 <_Min_Heap_Size+0x2ce094>
      70:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      break;
      74:	000a3813 	andeq	r3, sl, r3, lsl r8
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	01010a00 	tsteq	r1, r0, lsl #20
      7c:	13011349 	movwne	r1, #4937	; 0x1349
      80:	210b0000 	mrscs	r0, (UNDEF: 11)
      84:	2f134900 	svccs	0x00134900
      88:	0c00000b 	stceq	0, cr0, [r0], {11}
      8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      90:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      94:	13490b39 	movtne	r0, #39737	; 0x9b39
      98:	040d0000 	streq	r0, [sp], #-0
      9c:	0b0b3e01 	bleq	2cf8a8 <_Min_Heap_Size+0x2cf0a8>
      a0:	3a13490b 	bcc	4d24d4 <_Min_Heap_Size+0x4d1cd4>
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      a8:	0013010b 	andseq	r0, r3, fp, lsl #2
      ac:	00280e00 	eoreq	r0, r8, r0, lsl #28
      b0:	0b1c0e03 	bleq	7038c4 <_Min_Heap_Size+0x7030c4>
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	130f0000 	movwne	r0, #61440	; 0xf000
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	3a0b0b01 	bcc	2c2cc4 <_Min_Heap_Size+0x2c24c4>
      bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0013010b 	andseq	r0, r3, fp, lsl #2
      c4:	000d1000 	andeq	r1, sp, r0
      c8:	0b3a0e03 	bleq	e838dc <_Min_Heap_Size+0xe830dc>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0b390b3b 	bleq	e42dc0 <_Min_Heap_Size+0xe425c0>
      d0:	0a381349 	beq	e04dfc <_Min_Heap_Size+0xe045fc>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	0d110000 	ldceq	0, cr0, [r1, #-0]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	3a080300 	bcc	200ce0 <_Min_Heap_Size+0x2004e0>
      dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    if (huart->hdmarx != NULL)
      e4:	1200000a 	andne	r0, r0, #10
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0b3a0b0b 	bleq	e82d20 <_Min_Heap_Size+0xe82520>
      f0:	0b390b3b 	bleq	e42de4 <_Min_Heap_Size+0xe425e4>
    huart->TxXferCount = 0x00U;
      f4:	00001301 	andeq	r1, r0, r1, lsl #6
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	0b000f13 	bleq	3d4c <_Min_Heap_Size+0x354c>
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0013490b 	andseq	r4, r3, fp, lsl #18
    huart->RxState = HAL_UART_STATE_READY;
     100:	000f1400 	andeq	r1, pc, r0, lsl #8
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000b0b 	andeq	r0, r0, fp, lsl #22
    HAL_UART_AbortCpltCallback(huart);
     108:	27011515 	smladcs	r1, r5, r5, r1
     10c:	0013010c 	andseq	r0, r3, ip, lsl #2
  uint32_t AbortCplt = 0x01U;
     110:	00051600 	andeq	r1, r5, r0, lsl #12
  if (AbortCplt == 0x01U)
     114:	00001349 	andeq	r1, r0, r9, asr #6
}
     118:	03003417 	movweq	r3, #1047	; 0x417
     11c:	3b0b3a0e 	blcc	2ce95c <_Min_Heap_Size+0x2ce15c>
     120:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     124:	3c0c3f13 	stccc	15, cr3, [ip], {19}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	1800000c 	stmdane	r0, {r2, r3}
     12c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7c <_Min_Heap_Size-0x784>
     130:	0b3a0e03 	bleq	e83944 <_Min_Heap_Size+0xe83144>
     134:	0b39053b 	bleq	e41628 <_Min_Heap_Size+0xe40e28>
     138:	01110c27 	tsteq	r1, r7, lsr #24
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     140:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     144:	19000013 	stmdbne	r0, {r0, r1, r4}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     14c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	13490b39 	movtne	r0, #39737	; 0x9b39
     154:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	1a000006 	bne	178 <_Min_Heap_Size-0x688>
     15c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     164:	00000a02 	andeq	r0, r0, r2, lsl #20
     168:	0182891b 	orreq	r8, r2, fp, lsl r9
     16c:	31011101 	tstcc	r1, r1, lsl #2
     170:	1c000013 	stcne	0, cr0, [r0], {19}
}
     174:	0001828a 	andeq	r8, r1, sl, lsl #5
     178:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     17c:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
     180:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d0 <_Min_Heap_Size-0x730>
}
     184:	0b3a0e03 	bleq	e83998 <_Min_Heap_Size+0xe83198>
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0b390b3b 	bleq	e42e7c <_Min_Heap_Size+0xe4267c>
     18c:	01110c27 	tsteq	r1, r7, lsr #24
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	06400112 			; <UNDEFINED> instruction: 0x06400112
     194:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     198:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	1331001d 	teqne	r1, #29
     1a0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     1a8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     1ac:	000b570b 	andeq	r5, fp, fp, lsl #14
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00341f00 	eorseq	r1, r4, r0, lsl #30
     1b4:	0b3a0e03 	bleq	e839c8 <_Min_Heap_Size+0xe831c8>
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	0b390b3b 	bleq	e42eac <_Min_Heap_Size+0xe426ac>
     1bc:	0a021349 	beq	84ee8 <_Min_Heap_Size+0x846e8>
     1c0:	0b200000 	bleq	8001c8 <_Min_Heap_Size+0x7ff9c8>
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     1c8:	00130101 	andseq	r0, r3, r1, lsl #2
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	82892100 	addhi	r2, r9, #0, 2
     1d0:	01110101 	tsteq	r1, r1, lsl #2
     1d4:	13011331 	movwne	r1, #4913	; 0x1331
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
     1dc:	11000182 	smlabbne	r0, r2, r1, r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00133101 	andseq	r3, r3, r1, lsl #2
     1e4:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     1e8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	0b3b0b3a 	bleq	ec2edc <_Min_Heap_Size+0xec26dc>
     1f0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	01111349 	tsteq	r1, r9, asr #6
     1f8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     1fc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     208:	0b3b0b3a 	bleq	ec2ef8 <_Min_Heap_Size+0xec26f8>
     20c:	13490b39 	movtne	r0, #39737	; 0x9b39
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     214:	25000006 	strcs	r0, [r0, #-6]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	08030034 	stmdaeq	r3, {r2, r4, r5}
     21c:	0b3b0b3a 	bleq	ec2f0c <_Min_Heap_Size+0xec270c>
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	13490b39 	movtne	r0, #39737	; 0x9b39
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	00000b1c 	andeq	r0, r0, ip, lsl fp
     228:	03000526 	movweq	r0, #1318	; 0x526
  tmp = hdma->Instance->FCR;
     22c:	3b0b3a08 	blcc	2cea54 <_Min_Heap_Size+0x2ce254>
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  tmp |= hdma->Init.FIFOMode;
     234:	b7060213 	smladlt	r6, r3, r2, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	00000642 	andeq	r0, r0, r2, asr #12
    tmp |= hdma->Init.FIFOThreshold;
     23c:	03002e27 	movweq	r2, #3623	; 0xe27
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	3b0b3a0e 	blcc	2cea80 <_Min_Heap_Size+0x2ce280>
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     248:	000b200c 	andeq	r2, fp, ip
  hdma->Instance->FCR = tmp;
     24c:	002e2800 	eoreq	r2, lr, r0, lsl #16
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	030e4087 	movweq	r4, #57479	; 0xe087
     258:	3b0b3a0e 	blcc	2cea98 <_Min_Heap_Size+0x2ce298>
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	000b390b 	andeq	r3, fp, fp, lsl #18
  hdma->State = HAL_DMA_STATE_READY;
     260:	002e2900 	eoreq	r2, lr, r0, lsl #18
     264:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
  return HAL_OK;
     268:	030e4087 	movweq	r4, #57479	; 0xe087
     26c:	3b0b3a0e 	blcc	2ceaac <_Min_Heap_Size+0x2ce2ac>
     270:	2a00000b 	bcs	2a4 <_Min_Heap_Size-0x55c>
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1c4 <_Min_Heap_Size-0x63c>
     278:	40870c3c 	addmi	r0, r7, ip, lsr ip
     27c:	3a0e030e 	bcc	380ebc <_Min_Heap_Size+0x3806bc>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
        hdma->State = HAL_DMA_STATE_READY;
     284:	0000000b 	andeq	r0, r0, fp
        return HAL_ERROR; 
     288:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    return HAL_ERROR;
     28c:	030b130e 	movweq	r1, #45838	; 0xb30e
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     298:	00061001 	andeq	r1, r6, r1
      tickstart = HAL_GetTick();
     29c:	00240200 	eoreq	r0, r4, r0, lsl #4
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	0b3e0b0b 	bleq	f82ed4 <_Min_Heap_Size+0xf826d4>
     2a4:	00000e03 	andeq	r0, r0, r3, lsl #28
     2a8:	03001603 	movweq	r1, #1539	; 0x603
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	3b0b3a0e 	blcc	2ceaec <_Min_Heap_Size+0x2ce2ec>
     2b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     2b4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
          return HAL_TIMEOUT;
     2b8:	0b0b0024 	bleq	2c0350 <_Min_Heap_Size+0x2bfb50>
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     2c0:	35050000 	strcc	r0, [r5, #-0]
     2c4:	00134900 	andseq	r4, r3, r0, lsl #18
    FlagStatus       pwrclkchanged = RESET;
     2c8:	01010600 	tsteq	r1, r0, lsl #12
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	13011349 	movwne	r1, #4937	; 0x1349
     2d0:	21070000 	mrscs	r0, (UNDEF: 7)
     2d4:	2f134900 	svccs	0x00134900
      tickstart = HAL_GetTick();
     2d8:	0800000b 	stmdaeq	r0, {r0, r1, r3}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0b0b0113 	bleq	2c0730 <_Min_Heap_Size+0x2bff30>
     2e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2e4:	13010b39 	movwne	r0, #6969	; 0x1b39
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	0d090000 	stceq	0, cr0, [r9, #-0]
     2ec:	3a080300 	bcc	200ef4 <_Min_Heap_Size+0x2006f4>
          return HAL_TIMEOUT;
     2f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     2f8:	0a00000a 	beq	328 <_Min_Heap_Size-0x4d8>
     2fc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     300:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     304:	13490b39 	movtne	r0, #39737	; 0x9b39
     308:	00000a38 	andeq	r0, r0, r8, lsr sl
     30c:	0300160b 	movweq	r1, #1547	; 0x60b
     310:	3b0b3a0e 	blcc	2ceb50 <_Min_Heap_Size+0x2ce350>
      tickstart = HAL_GetTick();
     314:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     318:	0c000013 	stceq	0, cr0, [r0], {19}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 26c <_Min_Heap_Size-0x594>
     320:	0b3a0e03 	bleq	e83b34 <_Min_Heap_Size+0xe83334>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	0b390b3b 	bleq	e43018 <_Min_Heap_Size+0xe42818>
     328:	01110c27 	tsteq	r1, r7, lsr #24
     32c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     330:	000c4297 	muleq	ip, r7, r2
          return HAL_TIMEOUT;
     334:	010b0d00 	tsteq	fp, r0, lsl #26
    if(pwrclkchanged == SET)
     338:	01120111 	tsteq	r2, r1, lsl r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	00001301 	andeq	r1, r0, r1, lsl #6
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	0300340e 	movweq	r3, #1038	; 0x40e
     344:	3b0b3a0e 	blcc	2ceb84 <_Min_Heap_Size+0x2ce384>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     34c:	000a0213 	andeq	r0, sl, r3, lsl r2
     350:	010b0f00 	tsteq	fp, r0, lsl #30
     354:	01120111 	tsteq	r2, r1, lsl r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	01000000 	mrseq	r0, (UNDEF: 0)
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     360:	0e030b13 	vmoveq.32	d3[0], r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     368:	01520111 	cmpeq	r2, r1, lsl r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	00000610 	andeq	r0, r0, r0, lsl r6
     370:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
     374:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	3b0b3a13 	blcc	2cebcc <_Min_Heap_Size+0x2ce3cc>
     37c:	010b390b 	tsteq	fp, fp, lsl #18
     380:	03000013 	movweq	r0, #19
     384:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000d1c 	andeq	r0, r0, ip, lsl sp
     38c:	03002804 	movweq	r2, #2052	; 0x804
        __HAL_RCC_PLL_DISABLE();
     390:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     394:	00240500 	eoreq	r0, r4, r0, lsl #10
        tickstart = HAL_GetTick();
     398:	0b3e0b0b 	bleq	f82fcc <_Min_Heap_Size+0xf827cc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00000e03 	andeq	r0, r0, r3, lsl #28
     3a0:	03001606 	movweq	r1, #1542	; 0x606
     3a4:	3b0b3a0e 	blcc	2cebe4 <_Min_Heap_Size+0x2ce3e4>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     3ac:	07000013 	smladeq	r0, r3, r0, r0
            return HAL_TIMEOUT;
     3b0:	0b0b0024 	bleq	2c0448 <_Min_Heap_Size+0x2bfc48>
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     3b8:	26080000 	strcs	r0, [r8], -r0
     3bc:	00134900 	andseq	r4, r3, r0, lsl #18
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00350900 	eorseq	r0, r5, r0, lsl #18
     3c4:	00001349 	andeq	r1, r0, r9, asr #6
     3c8:	4901010a 	stmdbmi	r1, {r1, r3, r8}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00130113 	andseq	r0, r3, r3, lsl r1
     3d0:	00210b00 	eoreq	r0, r1, r0, lsl #22
     3d4:	0b2f1349 	bleq	bc5100 <_Min_Heap_Size+0xbc4900>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	130c0000 	movwne	r0, #49152	; 0xc000
     3dc:	3a0b0b01 	bcc	2c2fe8 <_Min_Heap_Size+0x2c27e8>
     3e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	0013010b 	andseq	r0, r3, fp, lsl #2
     3e8:	000d0d00 	andeq	r0, sp, r0, lsl #26
     3ec:	0b3a0803 	bleq	e82400 <_Min_Heap_Size+0xe81c00>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0b39053b 	bleq	e418e4 <_Min_Heap_Size+0xe410e4>
     3f4:	0a381349 	beq	e05120 <_Min_Heap_Size+0xe04920>
     3f8:	0d0e0000 	stceq	0, cr0, [lr, #-0]
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	3a0e0300 	bcc	381004 <_Min_Heap_Size+0x380804>
     400:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     404:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0f00000a 	svceq	0x0000000a
     40c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     410:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     414:	13490b39 	movtne	r0, #39737	; 0x9b39
     418:	13100000 	tstne	r0, #0
     41c:	3a0b0b01 	bcc	2c3028 <_Min_Heap_Size+0x2c2828>
     420:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     424:	0013010b 	andseq	r0, r3, fp, lsl #2
        __HAL_RCC_PLL_ENABLE();
     428:	000d1100 	andeq	r1, sp, r0, lsl #2
     42c:	0b3a0803 	bleq	e82440 <_Min_Heap_Size+0xe81c40>
        tickstart = HAL_GetTick();
     430:	0b390b3b 	bleq	e43124 <_Min_Heap_Size+0xe42924>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0a381349 	beq	e05160 <_Min_Heap_Size+0xe04960>
     438:	0d120000 	ldceq	0, cr0, [r2, #-0]
     43c:	3a0e0300 	bcc	381044 <_Min_Heap_Size+0x380844>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     444:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
            return HAL_TIMEOUT;
     448:	1300000a 	movwne	r0, #10
  return HAL_OK;
     44c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        __HAL_RCC_PLL_DISABLE();
     450:	0b3a0b0b 	bleq	e83084 <_Min_Heap_Size+0xe82884>
     454:	0b390b3b 	bleq	e43148 <_Min_Heap_Size+0xe42948>
        tickstart = HAL_GetTick();
     458:	00001301 	andeq	r1, r0, r1, lsl #6
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0b000f14 	bleq	40b4 <_Min_Heap_Size+0x38b4>
     460:	0013490b 	andseq	r4, r3, fp, lsl #18
     464:	000f1500 	andeq	r1, pc, r0, lsl #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00000b0b 	andeq	r0, r0, fp, lsl #22
     46c:	27011516 	smladcs	r1, r6, r5, r1
            return HAL_TIMEOUT;
     470:	0013010c 	andseq	r0, r3, ip, lsl #2
  return HAL_OK;
     474:	00051700 	andeq	r1, r5, r0, lsl #14
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00001349 	andeq	r1, r0, r9, asr #6
        pll_config = RCC->PLLCFGR;
     47c:	03003418 	movweq	r3, #1048	; 0x418
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	3b0b3a0e 	blcc	2cecc0 <_Min_Heap_Size+0x2ce4c0>
     484:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	3c0c3f13 	stccc	15, cr3, [ip], {19}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	1900000c 	stmdbne	r0, {r2, r3}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	13470034 	movtne	r0, #28724	; 0x7034
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	0b3b0b3a 	bleq	ec3184 <_Min_Heap_Size+0xec2984>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0a020b39 	beq	83184 <_Min_Heap_Size+0x82984>
     49c:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     4a0:	030c3f01 	movweq	r3, #52993	; 0xcf01
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	3b0b3a0e 	blcc	2cece4 <_Min_Heap_Size+0x2ce4e4>
     4a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	1201110c 	andne	r1, r1, #12, 2
     4b0:	97064001 	strls	r4, [r6, -r1]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	13010c42 	movwne	r0, #7234	; 0x1c42
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	051b0000 	ldreq	r0, [fp, #-0]
     4bc:	3a0e0300 	bcc	3810c4 <_Min_Heap_Size+0x3808c4>
  return HAL_OK;
     4c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
}
     4c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
        return HAL_ERROR;
     4c8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
        return HAL_ERROR;
     4cc:	891c0000 	ldmdbhi	ip, {}	; <UNPREDICTABLE>
}
     4d0:	11010182 	smlabbne	r1, r2, r1, r0
        return HAL_ERROR;
     4d4:	01133101 	tsteq	r3, r1, lsl #2
          return HAL_ERROR;
     4d8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     4dc:	0001828a 	andeq	r8, r1, sl, lsl #5
     4e0:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     4e4:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     4e8:	01018289 	smlabbeq	r1, r9, r2, r8
     4ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
     4f0:	341f0000 	ldrcc	r0, [pc], #-0	; 4f8 <_Min_Heap_Size-0x308>
     4f4:	3a0e0300 	bcc	3810fc <_Min_Heap_Size+0x3808fc>
     4f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     500:	2000000a 	andcs	r0, r0, sl
     504:	0111010b 	tsteq	r1, fp, lsl #2
     508:	13010112 	movwne	r0, #4370	; 0x1112
     50c:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     510:	11000182 	smlabbne	r0, r2, r1, r0
     514:	00133101 	andseq	r3, r3, r1, lsl #2
     518:	002e2200 	eoreq	r2, lr, r0, lsl #4
     51c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     520:	030e4087 	movweq	r4, #57479	; 0xe087
     524:	3b0b3a0e 	blcc	2ced64 <_Min_Heap_Size+0x2ce564>
     528:	000b390b 	andeq	r3, fp, fp, lsl #18
     52c:	002e2300 	eoreq	r2, lr, r0, lsl #6
     530:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     534:	030e4087 	movweq	r4, #57479	; 0xe087
     538:	3b0b3a0e 	blcc	2ced78 <_Min_Heap_Size+0x2ce578>
     53c:	000b3905 	andeq	r3, fp, r5, lsl #18
     540:	11010000 	mrsne	r0, (UNDEF: 1)
     544:	130e2501 	movwne	r2, #58625	; 0xe501
     548:	1b0e030b 	blne	38117c <_Min_Heap_Size+0x38097c>
     54c:	1106550e 	tstne	r6, lr, lsl #10
     550:	10015201 	andne	r5, r1, r1, lsl #4
     554:	02000006 	andeq	r0, r0, #6
     558:	0b0b0024 	bleq	2c05f0 <_Min_Heap_Size+0x2bfdf0>
     55c:	0e030b3e 	vmoveq.16	d3[0], r0
     560:	16030000 	strne	r0, [r3], -r0
     564:	3a0e0300 	bcc	38116c <_Min_Heap_Size+0x38096c>
     568:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     56c:	0013490b 	andseq	r4, r3, fp, lsl #18
     570:	00240400 	eoreq	r0, r4, r0, lsl #8
     574:	0b3e0b0b 	bleq	f831a8 <_Min_Heap_Size+0xf829a8>
     578:	00000803 	andeq	r0, r0, r3, lsl #16
     57c:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     580:	06000013 			; <UNDEFINED> instruction: 0x06000013
     584:	13490035 	movtne	r0, #36917	; 0x9035
     588:	13070000 	movwne	r0, #28672	; 0x7000
     58c:	3a0b0b01 	bcc	2c3198 <_Min_Heap_Size+0x2c2998>
     590:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     594:	0013010b 	andseq	r0, r3, fp, lsl #2
     598:	000d0800 	andeq	r0, sp, r0, lsl #16
     59c:	0b3a0803 	bleq	e825b0 <_Min_Heap_Size+0xe81db0>
     5a0:	0b39053b 	bleq	e41a94 <_Min_Heap_Size+0xe41294>
     5a4:	0a381349 	beq	e052d0 <_Min_Heap_Size+0xe04ad0>
     5a8:	0d090000 	stceq	0, cr0, [r9, #-0]
     5ac:	3a0e0300 	bcc	3811b4 <_Min_Heap_Size+0x3809b4>
     5b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     5b4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     5b8:	0a00000a 	beq	5e8 <_Min_Heap_Size-0x218>
     5bc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     5c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     5c4:	13490b39 	movtne	r0, #39737	; 0x9b39
     5c8:	040b0000 	streq	r0, [fp], #-0
     5cc:	0b0b3e01 	bleq	2cfdd8 <_Min_Heap_Size+0x2cf5d8>
     5d0:	3a13490b 	bcc	4d2a04 <_Min_Heap_Size+0x4d2204>
     5d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5d8:	0013010b 	andseq	r0, r3, fp, lsl #2
     5dc:	00280c00 	eoreq	r0, r8, r0, lsl #24
     5e0:	0b1c0e03 	bleq	703df4 <_Min_Heap_Size+0x7035f4>
     5e4:	130d0000 	movwne	r0, #53248	; 0xd000
     5e8:	3a0b0b01 	bcc	2c31f4 <_Min_Heap_Size+0x2c29f4>
     5ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f0:	0013010b 	andseq	r0, r3, fp, lsl #2
     5f4:	000d0e00 	andeq	r0, sp, r0, lsl #28
     5f8:	0b3a0e03 	bleq	e83e0c <_Min_Heap_Size+0xe8360c>
     5fc:	0b390b3b 	bleq	e432f0 <_Min_Heap_Size+0xe42af0>
     600:	0a381349 	beq	e0532c <_Min_Heap_Size+0xe04b2c>
     604:	130f0000 	movwne	r0, #61440	; 0xf000
     608:	0b0e0301 	bleq	381214 <_Min_Heap_Size+0x380a14>
     60c:	3b0b3a0b 	blcc	2cee40 <_Min_Heap_Size+0x2ce640>
     610:	010b390b 	tsteq	fp, fp, lsl #18
     614:	10000013 	andne	r0, r0, r3, lsl r0
     618:	0b0b000f 	bleq	2c065c <_Min_Heap_Size+0x2bfe5c>
     61c:	00001349 	andeq	r1, r0, r9, asr #6
     620:	0b000f11 	bleq	426c <_Min_Heap_Size+0x3a6c>
     624:	1200000b 	andne	r0, r0, #11
     628:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     62c:	00001301 	andeq	r1, r0, r1, lsl #6
     630:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
     634:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     638:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     63c:	0b3b0b3a 	bleq	ec332c <_Min_Heap_Size+0xec2b2c>
     640:	13490b39 	movtne	r0, #39737	; 0x9b39
     644:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     648:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     64c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     650:	3b0b3a0e 	blcc	2cee90 <_Min_Heap_Size+0x2ce690>
     654:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     658:	1201110c 	andne	r1, r1, #12, 2
     65c:	97064001 	strls	r4, [r6, -r1]
     660:	13010c42 	movwne	r0, #7234	; 0x1c42
     664:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     668:	11000182 	smlabbne	r0, r2, r1, r0
     66c:	00133101 	andseq	r3, r3, r1, lsl #2
     670:	002e1700 	eoreq	r1, lr, r0, lsl #14
     674:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     678:	0b3b0b3a 	bleq	ec3368 <_Min_Heap_Size+0xec2b68>
     67c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     680:	01120111 	tsteq	r2, r1, lsl r1
     684:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     688:	1800000c 	stmdane	r0, {r2, r3}
     68c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     690:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     694:	00000a02 	andeq	r0, r0, r2, lsl #20
     698:	01828919 	orreq	r8, r2, r9, lsl r9
     69c:	31011101 	tstcc	r1, r1, lsl #2
     6a0:	1a000013 	bne	6f4 <_Min_Heap_Size-0x10c>
     6a4:	0001828a 	andeq	r8, r1, sl, lsl #5
     6a8:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     6ac:	1b00000a 	blne	6dc <_Min_Heap_Size-0x124>
     6b0:	13490101 	movtne	r0, #37121	; 0x9101
     6b4:	00001301 	andeq	r1, r0, r1, lsl #6
     6b8:	4900211c 	stmdbmi	r0, {r2, r3, r4, r8, sp}
     6bc:	000b2f13 	andeq	r2, fp, r3, lsl pc
     6c0:	002e1d00 	eoreq	r1, lr, r0, lsl #26
     6c4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6c8:	030e4087 	movweq	r4, #57479	; 0xe087
     6cc:	3b0b3a0e 	blcc	2cef0c <_Min_Heap_Size+0x2ce70c>
     6d0:	000b3905 	andeq	r3, fp, r5, lsl #18
     6d4:	002e1e00 	eoreq	r1, lr, r0, lsl #28
     6d8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6dc:	030e4087 	movweq	r4, #57479	; 0xe087
     6e0:	3b0b3a0e 	blcc	2cef20 <_Min_Heap_Size+0x2ce720>
     6e4:	000b390b 	andeq	r3, fp, fp, lsl #18
     6e8:	11010000 	mrsne	r0, (UNDEF: 1)
     6ec:	130e2501 	movwne	r2, #58625	; 0xe501
     6f0:	1b0e030b 	blne	381324 <_Min_Heap_Size+0x380b24>
     6f4:	1106550e 	tstne	r6, lr, lsl #10
     6f8:	10015201 	andne	r5, r1, r1, lsl #4
     6fc:	02000006 	andeq	r0, r0, #6
     700:	0b0b0024 	bleq	2c0798 <_Min_Heap_Size+0x2bff98>
     704:	0e030b3e 	vmoveq.16	d3[0], r0
     708:	16030000 	strne	r0, [r3], -r0
     70c:	3a0e0300 	bcc	381314 <_Min_Heap_Size+0x380b14>
     710:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     714:	0013490b 	andseq	r4, r3, fp, lsl #18
     718:	00240400 	eoreq	r0, r4, r0, lsl #8
     71c:	0b3e0b0b 	bleq	f83350 <_Min_Heap_Size+0xf82b50>
     720:	00000803 	andeq	r0, r0, r3, lsl #16
     724:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     728:	06000013 			; <UNDEFINED> instruction: 0x06000013
     72c:	13490101 	movtne	r0, #37121	; 0x9101
     730:	00001301 	andeq	r1, r0, r1, lsl #6
     734:	49002107 	stmdbmi	r0, {r0, r1, r2, r8, sp}
     738:	000b2f13 	andeq	r2, fp, r3, lsl pc
     73c:	01130800 	tsteq	r3, r0, lsl #16
     740:	0b3a0b0b 	bleq	e83374 <_Min_Heap_Size+0xe82b74>
     744:	0b39053b 	bleq	e41c38 <_Min_Heap_Size+0xe41438>
     748:	00001301 	andeq	r1, r0, r1, lsl #6
     74c:	03000d09 	movweq	r0, #3337	; 0xd09
     750:	3b0b3a08 	blcc	2cef78 <_Min_Heap_Size+0x2ce778>
     754:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     758:	000a3813 	andeq	r3, sl, r3, lsl r8
     75c:	000d0a00 	andeq	r0, sp, r0, lsl #20
     760:	0b3a0e03 	bleq	e83f74 <_Min_Heap_Size+0xe83774>
     764:	0b39053b 	bleq	e41c58 <_Min_Heap_Size+0xe41458>
     768:	0a381349 	beq	e05494 <_Min_Heap_Size+0xe04c94>
     76c:	160b0000 	strne	r0, [fp], -r0
     770:	3a0e0300 	bcc	381378 <_Min_Heap_Size+0x380b78>
     774:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     778:	0013490b 	andseq	r4, r3, fp, lsl #18
     77c:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
     780:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     784:	0b3b0b3a 	bleq	ec3474 <_Min_Heap_Size+0xec2c74>
     788:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     78c:	01120111 	tsteq	r2, r1, lsl r1
     790:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     794:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     798:	0111010b 	tsteq	r1, fp, lsl #2
     79c:	13010112 	movwne	r0, #4370	; 0x1112
     7a0:	340e0000 	strcc	r0, [lr], #-0
     7a4:	3a0e0300 	bcc	3813ac <_Min_Heap_Size+0x380bac>
     7a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     7b0:	0f00000a 	svceq	0x0000000a
     7b4:	0111010b 	tsteq	r1, fp, lsl #2
     7b8:	00000112 	andeq	r0, r0, r2, lsl r1
     7bc:	01110100 	tsteq	r1, r0, lsl #2
     7c0:	0b130e25 	bleq	4c405c <_Min_Heap_Size+0x4c385c>
     7c4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     7c8:	01110655 	tsteq	r1, r5, asr r6
     7cc:	06100152 			; <UNDEFINED> instruction: 0x06100152
     7d0:	24020000 	strcs	r0, [r2], #-0
     7d4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7d8:	000e030b 	andeq	r0, lr, fp, lsl #6
     7dc:	00160300 	andseq	r0, r6, r0, lsl #6
     7e0:	0b3a0e03 	bleq	e83ff4 <_Min_Heap_Size+0xe837f4>
     7e4:	0b390b3b 	bleq	e434d8 <_Min_Heap_Size+0xe42cd8>
     7e8:	00001349 	andeq	r1, r0, r9, asr #6
     7ec:	0b002404 	bleq	9804 <_Min_Heap_Size+0x9004>
     7f0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     7f4:	05000008 	streq	r0, [r0, #-8]
     7f8:	13490026 	movtne	r0, #36902	; 0x9026
     7fc:	35060000 	strcc	r0, [r6, #-0]
     800:	00134900 	andseq	r4, r3, r0, lsl #18
     804:	01130700 	tsteq	r3, r0, lsl #14
     808:	0b3a0b0b 	bleq	e8343c <_Min_Heap_Size+0xe82c3c>
     80c:	0b39053b 	bleq	e41d00 <_Min_Heap_Size+0xe41500>
     810:	00001301 	andeq	r1, r0, r1, lsl #6
     814:	03000d08 	movweq	r0, #3336	; 0xd08
     818:	3b0b3a08 	blcc	2cf040 <_Min_Heap_Size+0x2ce840>
     81c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     820:	000a3813 	andeq	r3, sl, r3, lsl r8
     824:	000d0900 	andeq	r0, sp, r0, lsl #18
     828:	0b3a0e03 	bleq	e8403c <_Min_Heap_Size+0xe8383c>
     82c:	0b39053b 	bleq	e41d20 <_Min_Heap_Size+0xe41520>
     830:	0a381349 	beq	e0555c <_Min_Heap_Size+0xe04d5c>
     834:	160a0000 	strne	r0, [sl], -r0
     838:	3a0e0300 	bcc	381440 <_Min_Heap_Size+0x380c40>
     83c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     840:	0013490b 	andseq	r4, r3, fp, lsl #18
     844:	01040b00 	tsteq	r4, r0, lsl #22
     848:	0b0b0b3e 	bleq	2c3548 <_Min_Heap_Size+0x2c2d48>
     84c:	0b3a1349 	bleq	e85578 <_Min_Heap_Size+0xe84d78>
     850:	0b390b3b 	bleq	e43544 <_Min_Heap_Size+0xe42d44>
     854:	00001301 	andeq	r1, r0, r1, lsl #6
     858:	0300280c 	movweq	r2, #2060	; 0x80c
     85c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     860:	00280d00 	eoreq	r0, r8, r0, lsl #26
     864:	0b1c0803 	bleq	702878 <_Min_Heap_Size+0x702078>
     868:	130e0000 	movwne	r0, #57344	; 0xe000
     86c:	3a0b0b01 	bcc	2c3478 <_Min_Heap_Size+0x2c2c78>
     870:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     874:	0013010b 	andseq	r0, r3, fp, lsl #2
     878:	000d0f00 	andeq	r0, sp, r0, lsl #30
     87c:	0b3a0e03 	bleq	e84090 <_Min_Heap_Size+0xe83890>
     880:	0b390b3b 	bleq	e43574 <_Min_Heap_Size+0xe42d74>
     884:	0a381349 	beq	e055b0 <_Min_Heap_Size+0xe04db0>
     888:	13100000 	tstne	r0, #0
     88c:	0b0e0301 	bleq	381498 <_Min_Heap_Size+0x380c98>
     890:	3b0b3a0b 	blcc	2cf0c4 <_Min_Heap_Size+0x2ce8c4>
     894:	010b390b 	tsteq	fp, fp, lsl #18
     898:	11000013 	tstne	r0, r3, lsl r0
     89c:	0b0b000f 	bleq	2c08e0 <_Min_Heap_Size+0x2c00e0>
     8a0:	00001349 	andeq	r1, r0, r9, asr #6
     8a4:	0b000f12 	bleq	44f4 <_Min_Heap_Size+0x3cf4>
     8a8:	1300000b 	movwne	r0, #11
     8ac:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     8b0:	00001301 	andeq	r1, r0, r1, lsl #6
     8b4:	49000514 	stmdbmi	r0, {r2, r4, r8, sl}
     8b8:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     8bc:	0e03012e 	adfeqsp	f0, f3, #0.5
     8c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8c4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     8c8:	01120111 	tsteq	r2, r1, lsl r1
     8cc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     8d0:	0013010c 	andseq	r0, r3, ip, lsl #2
     8d4:	00051600 	andeq	r1, r5, r0, lsl #12
     8d8:	0b3a0e03 	bleq	e840ec <_Min_Heap_Size+0xe838ec>
     8dc:	0b39053b 	bleq	e41dd0 <_Min_Heap_Size+0xe415d0>
     8e0:	06021349 	streq	r1, [r2], -r9, asr #6
     8e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     8e8:	00341700 	eorseq	r1, r4, r0, lsl #14
     8ec:	0b3a0e03 	bleq	e84100 <_Min_Heap_Size+0xe83900>
     8f0:	0b39053b 	bleq	e41de4 <_Min_Heap_Size+0xe415e4>
     8f4:	06021349 	streq	r1, [r2], -r9, asr #6
     8f8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     8fc:	82891800 	addhi	r1, r9, #0, 16
     900:	01110101 	tsteq	r1, r1, lsl #2
     904:	13011331 	movwne	r1, #4913	; 0x1331
     908:	8a190000 	bhi	640910 <_Min_Heap_Size+0x640110>
     90c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     910:	0a42910a 	beq	10a4d40 <_Min_Heap_Size+0x10a4540>
     914:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
     918:	11000182 	smlabbne	r0, r2, r1, r0
     91c:	00133101 	andseq	r3, r3, r1, lsl #2
     920:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     924:	0b3a0e03 	bleq	e84138 <_Min_Heap_Size+0xe83938>
     928:	0b39053b 	bleq	e41e1c <_Min_Heap_Size+0xe4161c>
     92c:	13490c27 	movtne	r0, #39975	; 0x9c27
     930:	01120111 	tsteq	r2, r1, lsl r1
     934:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     938:	0013010c 	andseq	r0, r3, ip, lsl #2
     93c:	010b1c00 	tsteq	fp, r0, lsl #24
     940:	01120111 	tsteq	r2, r1, lsl r1
     944:	00001301 	andeq	r1, r0, r1, lsl #6
     948:	0300341d 	movweq	r3, #1053	; 0x41d
     94c:	3b0b3a08 	blcc	2cf174 <_Min_Heap_Size+0x2ce974>
     950:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     954:	b7060213 	smladlt	r6, r3, r2, r0
     958:	00000642 	andeq	r0, r0, r2, asr #12
     95c:	31011d1e 	tstcc	r1, lr, lsl sp
     960:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     964:	01110542 	tsteq	r1, r2, asr #10
     968:	0b580112 	bleq	1600db8 <_Min_Heap_Size+0x16005b8>
     96c:	0b570559 	bleq	15c1ed8 <_Min_Heap_Size+0x15c16d8>
     970:	00001301 	andeq	r1, r0, r1, lsl #6
     974:	3100051f 	tstcc	r0, pc, lsl r5
     978:	b7060213 	smladlt	r6, r3, r2, r0
     97c:	00000642 	andeq	r0, r0, r2, asr #12
     980:	31003420 	tstcc	r0, r0, lsr #8
     984:	b7060213 	smladlt	r6, r3, r2, r0
     988:	00000642 	andeq	r0, r0, r2, asr #12
     98c:	31011d21 	tstcc	r1, r1, lsr #26
     990:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     994:	01110542 	tsteq	r1, r2, asr #10
     998:	0b580112 	bleq	1600de8 <_Min_Heap_Size+0x16005e8>
     99c:	0b570559 	bleq	15c1f08 <_Min_Heap_Size+0x15c1708>
     9a0:	34220000 	strtcc	r0, [r2], #-0
     9a4:	3a0e0300 	bcc	3815ac <_Min_Heap_Size+0x380dac>
     9a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     9b0:	2300000a 	movwcs	r0, #10
     9b4:	01018289 	smlabbeq	r1, r9, r2, r8
     9b8:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9bc:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     9c0:	3a0e0301 	bcc	3815cc <_Min_Heap_Size+0x380dcc>
     9c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     9cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     9d0:	970a4001 	strls	r4, [sl, -r1]
     9d4:	13010c42 	movwne	r0, #7234	; 0x1c42
     9d8:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     9dc:	3a0e0301 	bcc	3815e8 <_Min_Heap_Size+0x380de8>
     9e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9e4:	110c270b 	tstne	ip, fp, lsl #14
     9e8:	40011201 	andmi	r1, r1, r1, lsl #4
     9ec:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     9f0:	00001301 	andeq	r1, r0, r1, lsl #6
     9f4:	11010b26 	tstne	r1, r6, lsr #22
     9f8:	00011201 	andeq	r1, r1, r1, lsl #4
     9fc:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
     a00:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     a04:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a08:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a0c:	01111349 	tsteq	r1, r9, asr #6
     a10:	06400112 			; <UNDEFINED> instruction: 0x06400112
     a14:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     a18:	28000013 	stmdacs	r0, {r0, r1, r4}
     a1c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 96c <_Min_Heap_Size+0x16c>
     a20:	0b3a0e03 	bleq	e84234 <_Min_Heap_Size+0xe83a34>
     a24:	0b39053b 	bleq	e41f18 <_Min_Heap_Size+0xe41718>
     a28:	13490c27 	movtne	r0, #39975	; 0x9c27
     a2c:	01120111 	tsteq	r2, r1, lsl r1
     a30:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     a34:	0013010c 	andseq	r0, r3, ip, lsl #2
     a38:	00052900 	andeq	r2, r5, r0, lsl #18
     a3c:	0b3a0e03 	bleq	e84250 <_Min_Heap_Size+0xe83a50>
     a40:	0b39053b 	bleq	e41f34 <_Min_Heap_Size+0xe41734>
     a44:	0a021349 	beq	85770 <_Min_Heap_Size+0x84f70>
     a48:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
     a4c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a50:	3b0b3a0e 	blcc	2cf290 <_Min_Heap_Size+0x2cea90>
     a54:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a58:	1201110c 	andne	r1, r1, #12, 2
     a5c:	970a4001 	strls	r4, [sl, -r1]
     a60:	13010c42 	movwne	r0, #7234	; 0x1c42
     a64:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     a68:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a6c:	3b0b3a0e 	blcc	2cf2ac <_Min_Heap_Size+0x2ceaac>
     a70:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a74:	1201110c 	andne	r1, r1, #12, 2
     a78:	96064001 	strls	r4, [r6], -r1
     a7c:	13010c42 	movwne	r0, #7234	; 0x1c42
     a80:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     a84:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a88:	3b0b3a0e 	blcc	2cf2c8 <_Min_Heap_Size+0x2ceac8>
     a8c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a90:	1113490c 	tstne	r3, ip, lsl #18
     a94:	40011201 	andmi	r1, r1, r1, lsl #4
     a98:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     a9c:	00001301 	andeq	r1, r0, r1, lsl #6
     aa0:	55010b2d 	strpl	r0, [r1, #-2861]	; 0xfffff4d3
     aa4:	00130106 	andseq	r0, r3, r6, lsl #2
     aa8:	012e2e00 			; <UNDEFINED> instruction: 0x012e2e00
     aac:	0b3a0e03 	bleq	e842c0 <_Min_Heap_Size+0xe83ac0>
     ab0:	0b39053b 	bleq	e41fa4 <_Min_Heap_Size+0xe417a4>
     ab4:	13490c27 	movtne	r0, #39975	; 0x9c27
     ab8:	13010b20 	movwne	r0, #6944	; 0x1b20
     abc:	052f0000 	streq	r0, [pc, #-0]!	; ac4 <_Min_Heap_Size+0x2c4>
     ac0:	3a0e0300 	bcc	3816c8 <_Min_Heap_Size+0x380ec8>
     ac4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ac8:	0013490b 	andseq	r4, r3, fp, lsl #18
     acc:	00343000 	eorseq	r3, r4, r0
     ad0:	0b3a0e03 	bleq	e842e4 <_Min_Heap_Size+0xe83ae4>
     ad4:	0b39053b 	bleq	e41fc8 <_Min_Heap_Size+0xe417c8>
     ad8:	00001349 	andeq	r1, r0, r9, asr #6
     adc:	3f002e31 	svccc	0x00002e31
     ae0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     ae4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     ae8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     aec:	00000b39 	andeq	r0, r0, r9, lsr fp
     af0:	3f002e32 	svccc	0x00002e32
     af4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     af8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     afc:	2e330000 	cdpcs	0, 3, cr0, cr3, cr0, {0}
     b00:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     b04:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     b08:	0b3a0e03 	bleq	e8431c <_Min_Heap_Size+0xe83b1c>
     b0c:	0b390b3b 	bleq	e43800 <_Min_Heap_Size+0xe43000>
     b10:	01000000 	mrseq	r0, (UNDEF: 0)
     b14:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     b18:	0e030b13 	vmoveq.32	d3[0], r0
     b1c:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     b20:	01520111 	cmpeq	r2, r1, lsl r1
     b24:	00000610 	andeq	r0, r0, r0, lsl r6
     b28:	0b002402 	bleq	9b38 <_Min_Heap_Size+0x9338>
     b2c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b30:	0300000e 	movweq	r0, #14
     b34:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b38:	0b3b0b3a 	bleq	ec3828 <_Min_Heap_Size+0xec3028>
     b3c:	13490b39 	movtne	r0, #39737	; 0x9b39
     b40:	24040000 	strcs	r0, [r4], #-0
     b44:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     b48:	0008030b 	andeq	r0, r8, fp, lsl #6
     b4c:	00260500 	eoreq	r0, r6, r0, lsl #10
     b50:	00001349 	andeq	r1, r0, r9, asr #6
     b54:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     b58:	07000013 	smladeq	r0, r3, r0, r0
     b5c:	13490101 	movtne	r0, #37121	; 0x9101
     b60:	00001301 	andeq	r1, r0, r1, lsl #6
     b64:	49002108 	stmdbmi	r0, {r3, r8, sp}
     b68:	000b2f13 	andeq	r2, fp, r3, lsl pc
     b6c:	00340900 	eorseq	r0, r4, r0, lsl #18
     b70:	0b3a0e03 	bleq	e84384 <_Min_Heap_Size+0xe83b84>
     b74:	0b390b3b 	bleq	e43868 <_Min_Heap_Size+0xe43068>
     b78:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; a5c <_Min_Heap_Size+0x25c>
     b7c:	00000c3c 	andeq	r0, r0, ip, lsr ip
     b80:	0b01130a 	bleq	457b0 <_Min_Heap_Size+0x44fb0>
     b84:	3b0b3a0b 	blcc	2cf3b8 <_Min_Heap_Size+0x2cebb8>
     b88:	010b3905 	tsteq	fp, r5, lsl #18
     b8c:	0b000013 	bleq	be0 <_Min_Heap_Size+0x3e0>
     b90:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     b94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b98:	13490b39 	movtne	r0, #39737	; 0x9b39
     b9c:	00000a38 	andeq	r0, r0, r8, lsr sl
     ba0:	03000d0c 	movweq	r0, #3340	; 0xd0c
     ba4:	3b0b3a0e 	blcc	2cf3e4 <_Min_Heap_Size+0x2cebe4>
     ba8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     bac:	000a3813 	andeq	r3, sl, r3, lsl r8
     bb0:	00160d00 	andseq	r0, r6, r0, lsl #26
     bb4:	0b3a0e03 	bleq	e843c8 <_Min_Heap_Size+0xe83bc8>
     bb8:	0b39053b 	bleq	e420ac <_Min_Heap_Size+0xe418ac>
     bbc:	00001349 	andeq	r1, r0, r9, asr #6
     bc0:	3e01040e 	cdpcc	4, 0, cr0, cr1, cr14, {0}
     bc4:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     bc8:	3b0b3a13 	blcc	2cf41c <_Min_Heap_Size+0x2cec1c>
     bcc:	010b390b 	tsteq	fp, fp, lsl #18
     bd0:	0f000013 	svceq	0x00000013
     bd4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     bd8:	00000b1c 	andeq	r0, r0, ip, lsl fp
     bdc:	03002810 	movweq	r2, #2064	; 0x810
     be0:	000b1c08 	andeq	r1, fp, r8, lsl #24
     be4:	01131100 	tsteq	r3, r0, lsl #2
     be8:	0b3a0b0b 	bleq	e8381c <_Min_Heap_Size+0xe8301c>
     bec:	0b390b3b 	bleq	e438e0 <_Min_Heap_Size+0xe430e0>
     bf0:	00001301 	andeq	r1, r0, r1, lsl #6
     bf4:	03000d12 	movweq	r0, #3346	; 0xd12
     bf8:	3b0b3a0e 	blcc	2cf438 <_Min_Heap_Size+0x2cec38>
     bfc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c00:	000a3813 	andeq	r3, sl, r3, lsl r8
     c04:	000d1300 	andeq	r1, sp, r0, lsl #6
     c08:	0b3a0803 	bleq	e82c1c <_Min_Heap_Size+0xe8241c>
     c0c:	0b390b3b 	bleq	e43900 <_Min_Heap_Size+0xe43100>
     c10:	0a381349 	beq	e0593c <_Min_Heap_Size+0xe0513c>
     c14:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     c18:	030c3f00 	movweq	r3, #52992	; 0xcf00
     c1c:	3b0b3a0e 	blcc	2cf45c <_Min_Heap_Size+0x2cec5c>
     c20:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c24:	1201110c 	andne	r1, r1, #12, 2
     c28:	970a4001 	strls	r4, [sl, -r1]
     c2c:	00000c42 	andeq	r0, r0, r2, asr #24
     c30:	3f012e15 	svccc	0x00012e15
     c34:	3a0e030c 	bcc	38186c <_Min_Heap_Size+0x38106c>
     c38:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c3c:	110c270b 	tstne	ip, fp, lsl #14
     c40:	40011201 	andmi	r1, r1, r1, lsl #4
     c44:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     c48:	00001301 	andeq	r1, r0, r1, lsl #6
     c4c:	01828916 	orreq	r8, r2, r6, lsl r9
     c50:	31011100 	mrscc	r1, (UNDEF: 17)
     c54:	17000013 	smladne	r0, r3, r0, r0
     c58:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ba8 <_Min_Heap_Size+0x3a8>
     c5c:	0b3a0e03 	bleq	e84470 <_Min_Heap_Size+0xe83c70>
     c60:	0b39053b 	bleq	e42154 <_Min_Heap_Size+0xe41954>
     c64:	01110c27 	tsteq	r1, r7, lsr #24
     c68:	0a400112 	beq	10010b8 <_Min_Heap_Size+0x10008b8>
     c6c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c70:	18000013 	stmdane	r0, {r0, r1, r4}
     c74:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     c78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c7c:	13490b39 	movtne	r0, #39737	; 0x9b39
     c80:	00000a02 	andeq	r0, r0, r2, lsl #20
     c84:	0b000f19 	bleq	48f0 <_Min_Heap_Size+0x40f0>
     c88:	0013490b 	andseq	r4, r3, fp, lsl #18
     c8c:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     c90:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c98:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c9c:	01111349 	tsteq	r1, r9, asr #6
     ca0:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ca4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ca8:	1b000013 	blne	cfc <_Min_Heap_Size+0x4fc>
     cac:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; bfc <_Min_Heap_Size+0x3fc>
     cb0:	0b3a0e03 	bleq	e844c4 <_Min_Heap_Size+0xe83cc4>
     cb4:	0b39053b 	bleq	e421a8 <_Min_Heap_Size+0xe419a8>
     cb8:	13490c27 	movtne	r0, #39975	; 0x9c27
     cbc:	01120111 	tsteq	r2, r1, lsl r1
     cc0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     cc4:	1c00000c 	stcne	0, cr0, [r0], {12}
     cc8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     ccc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cd0:	13490b39 	movtne	r0, #39737	; 0x9b39
     cd4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     cd8:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     cdc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ce0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ce4:	13490b39 	movtne	r0, #39737	; 0x9b39
     ce8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     cec:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
     cf0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     cf4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cf8:	13490b39 	movtne	r0, #39737	; 0x9b39
     cfc:	00000a02 	andeq	r0, r0, r2, lsl #20
     d00:	11010b1f 	tstne	r1, pc, lsl fp
     d04:	01011201 	tsteq	r1, r1, lsl #4
     d08:	20000013 	andcs	r0, r0, r3, lsl r0
     d0c:	01018289 	smlabbeq	r1, r9, r2, r8
     d10:	13310111 	teqne	r1, #1073741828	; 0x40000004
     d14:	00001301 	andeq	r1, r0, r1, lsl #6
     d18:	01828a21 	orreq	r8, r2, r1, lsr #20
     d1c:	910a0200 	mrsls	r0, R10_fiq
     d20:	00000a42 	andeq	r0, r0, r2, asr #20
     d24:	01828922 	orreq	r8, r2, r2, lsr #18
     d28:	31011101 	tstcc	r1, r1, lsl #2
     d2c:	23000013 	movwcs	r0, #19
     d30:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c80 <_Min_Heap_Size+0x480>
     d34:	0b3a0e03 	bleq	e84548 <_Min_Heap_Size+0xe83d48>
     d38:	0b390b3b 	bleq	e43a2c <_Min_Heap_Size+0xe4322c>
     d3c:	13490c27 	movtne	r0, #39975	; 0x9c27
     d40:	01120111 	tsteq	r2, r1, lsl r1
     d44:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     d48:	0013010c 	andseq	r0, r3, ip, lsl #2
     d4c:	00052400 	andeq	r2, r5, r0, lsl #8
     d50:	0b3a0e03 	bleq	e84564 <_Min_Heap_Size+0xe83d64>
     d54:	0b390b3b 	bleq	e43a48 <_Min_Heap_Size+0xe43248>
     d58:	06021349 	streq	r1, [r2], -r9, asr #6
     d5c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d60:	00342500 	eorseq	r2, r4, r0, lsl #10
     d64:	0b3a0e03 	bleq	e84578 <_Min_Heap_Size+0xe83d78>
     d68:	0b390b3b 	bleq	e43a5c <_Min_Heap_Size+0xe4325c>
     d6c:	06021349 	streq	r1, [r2], -r9, asr #6
     d70:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d74:	010b2600 	tsteq	fp, r0, lsl #12
     d78:	13010655 	movwne	r0, #5717	; 0x1655
     d7c:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     d80:	030c3f00 	movweq	r3, #52992	; 0xcf00
     d84:	3b0b3a0e 	blcc	2cf5c4 <_Min_Heap_Size+0x2cedc4>
     d88:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d8c:	1113490c 	tstne	r3, ip, lsl #18
     d90:	40011201 	andmi	r1, r1, r1, lsl #4
     d94:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     d98:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
     d9c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     da0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     da4:	00000e03 	andeq	r0, r0, r3, lsl #28
     da8:	3f002e29 	svccc	0x00002e29
     dac:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     db0:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     db4:	0b3b0b3a 	bleq	ec3aa4 <_Min_Heap_Size+0xec32a4>
     db8:	00000b39 	andeq	r0, r0, r9, lsr fp
     dbc:	3f002e2a 	svccc	0x00002e2a
     dc0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     dc4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     dc8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dcc:	00000b39 	andeq	r0, r0, r9, lsr fp
     dd0:	01110100 	tsteq	r1, r0, lsl #2
     dd4:	0b130e25 	bleq	4c4670 <_Min_Heap_Size+0x4c3e70>
     dd8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     ddc:	01110655 	tsteq	r1, r5, asr r6
     de0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     de4:	24020000 	strcs	r0, [r2], #-0
     de8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     dec:	000e030b 	andeq	r0, lr, fp, lsl #6
     df0:	00160300 	andseq	r0, r6, r0, lsl #6
     df4:	0b3a0e03 	bleq	e84608 <_Min_Heap_Size+0xe83e08>
     df8:	0b390b3b 	bleq	e43aec <_Min_Heap_Size+0xe432ec>
     dfc:	00001349 	andeq	r1, r0, r9, asr #6
     e00:	0b002404 	bleq	9e18 <_Min_Heap_Size+0x9618>
     e04:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     e08:	05000008 	streq	r0, [r0, #-8]
     e0c:	13490035 	movtne	r0, #36917	; 0x9035
     e10:	01060000 	mrseq	r0, (UNDEF: 6)
     e14:	01134901 	tsteq	r3, r1, lsl #18
     e18:	07000013 	smladeq	r0, r3, r0, r0
     e1c:	13490021 	movtne	r0, #36897	; 0x9021
     e20:	00000b2f 	andeq	r0, r0, pc, lsr #22
     e24:	0b011308 	bleq	45a4c <_Min_Heap_Size+0x4524c>
     e28:	3b0b3a0b 	blcc	2cf65c <_Min_Heap_Size+0x2cee5c>
     e2c:	010b3905 	tsteq	fp, r5, lsl #18
     e30:	09000013 	stmdbeq	r0, {r0, r1, r4}
     e34:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e38:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e3c:	13490b39 	movtne	r0, #39737	; 0x9b39
     e40:	00000a38 	andeq	r0, r0, r8, lsr sl
     e44:	03000d0a 	movweq	r0, #3338	; 0xd0a
     e48:	3b0b3a0e 	blcc	2cf688 <_Min_Heap_Size+0x2cee88>
     e4c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e50:	000a3813 	andeq	r3, sl, r3, lsl r8
     e54:	00160b00 	andseq	r0, r6, r0, lsl #22
     e58:	0b3a0e03 	bleq	e8466c <_Min_Heap_Size+0xe83e6c>
     e5c:	0b39053b 	bleq	e42350 <_Min_Heap_Size+0xe41b50>
     e60:	00001349 	andeq	r1, r0, r9, asr #6
     e64:	3e01040c 	cdpcc	4, 0, cr0, cr1, cr12, {0}
     e68:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     e6c:	3b0b3a13 	blcc	2cf6c0 <_Min_Heap_Size+0x2ceec0>
     e70:	010b390b 	tsteq	fp, fp, lsl #18
     e74:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     e78:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     e7c:	00000b1c 	andeq	r0, r0, ip, lsl fp
     e80:	0300280e 	movweq	r2, #2062	; 0x80e
     e84:	000b1c08 	andeq	r1, fp, r8, lsl #24
     e88:	01130f00 	tsteq	r3, r0, lsl #30
     e8c:	0b3a0b0b 	bleq	e83ac0 <_Min_Heap_Size+0xe832c0>
     e90:	0b390b3b 	bleq	e43b84 <_Min_Heap_Size+0xe43384>
     e94:	00001301 	andeq	r1, r0, r1, lsl #6
     e98:	03000d10 	movweq	r0, #3344	; 0xd10
     e9c:	3b0b3a08 	blcc	2cf6c4 <_Min_Heap_Size+0x2ceec4>
     ea0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ea4:	000a3813 	andeq	r3, sl, r3, lsl r8
     ea8:	000d1100 	andeq	r1, sp, r0, lsl #2
     eac:	0b3a0e03 	bleq	e846c0 <_Min_Heap_Size+0xe83ec0>
     eb0:	0b390b3b 	bleq	e43ba4 <_Min_Heap_Size+0xe433a4>
     eb4:	0a381349 	beq	e05be0 <_Min_Heap_Size+0xe053e0>
     eb8:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     ebc:	030c3f01 	movweq	r3, #52993	; 0xcf01
     ec0:	3b0b3a0e 	blcc	2cf700 <_Min_Heap_Size+0x2cef00>
     ec4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     ec8:	1201110c 	andne	r1, r1, #12, 2
     ecc:	970a4001 	strls	r4, [sl, -r1]
     ed0:	13010c42 	movwne	r0, #7234	; 0x1c42
     ed4:	05130000 	ldreq	r0, [r3, #-0]
     ed8:	3a0e0300 	bcc	381ae0 <_Min_Heap_Size+0x3812e0>
     edc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ee0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ee4:	1400000a 	strne	r0, [r0], #-10
     ee8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e38 <_Min_Heap_Size+0x638>
     eec:	0b3a0e03 	bleq	e84700 <_Min_Heap_Size+0xe83f00>
     ef0:	0b39053b 	bleq	e423e4 <_Min_Heap_Size+0xe41be4>
     ef4:	01110c27 	tsteq	r1, r7, lsr #24
     ef8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     efc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     f00:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     f04:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     f08:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f0c:	13490b39 	movtne	r0, #39737	; 0x9b39
     f10:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     f14:	16000006 	strne	r0, [r0], -r6
     f18:	00018289 	andeq	r8, r1, r9, lsl #5
     f1c:	13310111 	teqne	r1, #1073741828	; 0x40000004
     f20:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     f24:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f28:	3b0b3a0e 	blcc	2cf768 <_Min_Heap_Size+0x2cef68>
     f2c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f30:	1113490c 	tstne	r3, ip, lsl #18
     f34:	40011201 	andmi	r1, r1, r1, lsl #4
     f38:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     f3c:	00001301 	andeq	r1, r0, r1, lsl #6
     f40:	03003418 	movweq	r3, #1048	; 0x418
     f44:	3b0b3a08 	blcc	2cf76c <_Min_Heap_Size+0x2cef6c>
     f48:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f4c:	000a0213 	andeq	r0, sl, r3, lsl r2
     f50:	82891900 	addhi	r1, r9, #0, 18
     f54:	01110101 	tsteq	r1, r1, lsl #2
     f58:	00001331 	andeq	r1, r0, r1, lsr r3
     f5c:	01828a1a 	orreq	r8, r2, sl, lsl sl
     f60:	910a0200 	mrsls	r0, R10_fiq
     f64:	00000a42 	andeq	r0, r0, r2, asr #20
     f68:	0b000f1b 	bleq	4bdc <_Min_Heap_Size+0x43dc>
     f6c:	0013490b 	andseq	r4, r3, fp, lsl #18
     f70:	00341c00 	eorseq	r1, r4, r0, lsl #24
     f74:	0b3a0803 	bleq	e82f88 <_Min_Heap_Size+0xe82788>
     f78:	0b39053b 	bleq	e4246c <_Min_Heap_Size+0xe41c6c>
     f7c:	06021349 	streq	r1, [r2], -r9, asr #6
     f80:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     f84:	82891d00 	addhi	r1, r9, #0, 26
     f88:	01110101 	tsteq	r1, r1, lsl #2
     f8c:	13011331 	movwne	r1, #4913	; 0x1331
     f90:	341e0000 	ldrcc	r0, [lr], #-0
     f94:	3a0e0300 	bcc	381b9c <_Min_Heap_Size+0x38139c>
     f98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f9c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fa0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     fa4:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     fa8:	030c3f01 	movweq	r3, #52993	; 0xcf01
     fac:	3b0b3a0e 	blcc	2cf7ec <_Min_Heap_Size+0x2cefec>
     fb0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     fb4:	1201110c 	andne	r1, r1, #12, 2
     fb8:	97064001 	strls	r4, [r6, -r1]
     fbc:	13010c42 	movwne	r0, #7234	; 0x1c42
     fc0:	05200000 	streq	r0, [r0, #-0]!
     fc4:	3a0e0300 	bcc	381bcc <_Min_Heap_Size+0x3813cc>
     fc8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fcc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fd0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     fd4:	34210000 	strtcc	r0, [r1], #-0
     fd8:	3a0e0300 	bcc	381be0 <_Min_Heap_Size+0x3813e0>
     fdc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fe0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fe4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     fe8:	0b220000 	bleq	880ff0 <_Min_Heap_Size+0x8807f0>
     fec:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     ff0:	00130101 	andseq	r0, r3, r1, lsl #2
     ff4:	00342300 	eorseq	r2, r4, r0, lsl #6
     ff8:	0b3a0e03 	bleq	e8480c <_Min_Heap_Size+0xe8400c>
     ffc:	0b390b3b 	bleq	e43cf0 <_Min_Heap_Size+0xe434f0>
    1000:	0a021349 	beq	85d2c <_Min_Heap_Size+0x8552c>
    1004:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    1008:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    100c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1010:	0b3a0e03 	bleq	e84824 <_Min_Heap_Size+0xe84024>
    1014:	0b39053b 	bleq	e42508 <_Min_Heap_Size+0xe41d08>
    1018:	01000000 	mrseq	r0, (UNDEF: 0)
    101c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1020:	0e030b13 	vmoveq.32	d3[0], r0
    1024:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1028:	01520111 	cmpeq	r2, r1, lsl r1
    102c:	00000610 	andeq	r0, r0, r0, lsl r6
    1030:	0b002402 	bleq	a040 <_Min_Heap_Size+0x9840>
    1034:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1038:	0300000e 	movweq	r0, #14
    103c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1040:	0b3b0b3a 	bleq	ec3d30 <_Min_Heap_Size+0xec3530>
    1044:	13490b39 	movtne	r0, #39737	; 0x9b39
    1048:	24040000 	strcs	r0, [r4], #-0
    104c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1050:	0008030b 	andeq	r0, r8, fp, lsl #6
    1054:	00260500 	eoreq	r0, r6, r0, lsl #10
    1058:	00001349 	andeq	r1, r0, r9, asr #6
    105c:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1060:	07000013 	smladeq	r0, r3, r0, r0
    1064:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1068:	0b3b0b3a 	bleq	ec3d58 <_Min_Heap_Size+0xec3558>
    106c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1070:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1074:	01080000 	mrseq	r0, (UNDEF: 8)
    1078:	01134901 	tsteq	r3, r1, lsl #18
    107c:	09000013 	stmdbeq	r0, {r0, r1, r4}
    1080:	13490021 	movtne	r0, #36897	; 0x9021
    1084:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1088:	0b01130a 	bleq	45cb8 <_Min_Heap_Size+0x454b8>
    108c:	3b0b3a0b 	blcc	2cf8c0 <_Min_Heap_Size+0x2cf0c0>
    1090:	010b3905 	tsteq	fp, r5, lsl #18
    1094:	0b000013 	bleq	10e8 <_Min_Heap_Size+0x8e8>
    1098:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    109c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    10a0:	13490b39 	movtne	r0, #39737	; 0x9b39
    10a4:	00000a38 	andeq	r0, r0, r8, lsr sl
    10a8:	03000d0c 	movweq	r0, #3340	; 0xd0c
    10ac:	3b0b3a0e 	blcc	2cf8ec <_Min_Heap_Size+0x2cf0ec>
    10b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10b4:	000a3813 	andeq	r3, sl, r3, lsl r8
    10b8:	00160d00 	andseq	r0, r6, r0, lsl #26
    10bc:	0b3a0e03 	bleq	e848d0 <_Min_Heap_Size+0xe840d0>
    10c0:	0b39053b 	bleq	e425b4 <_Min_Heap_Size+0xe41db4>
    10c4:	00001349 	andeq	r1, r0, r9, asr #6
    10c8:	3e01040e 	cdpcc	4, 0, cr0, cr1, cr14, {0}
    10cc:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    10d0:	3b0b3a13 	blcc	2cf924 <_Min_Heap_Size+0x2cf124>
    10d4:	010b390b 	tsteq	fp, fp, lsl #18
    10d8:	0f000013 	svceq	0x00000013
    10dc:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    10e0:	00000b1c 	andeq	r0, r0, ip, lsl fp
    10e4:	03002810 	movweq	r2, #2064	; 0x810
    10e8:	000b1c08 	andeq	r1, fp, r8, lsl #24
    10ec:	01131100 	tsteq	r3, r0, lsl #2
    10f0:	0b3a0b0b 	bleq	e83d24 <_Min_Heap_Size+0xe83524>
    10f4:	0b390b3b 	bleq	e43de8 <_Min_Heap_Size+0xe435e8>
    10f8:	00001301 	andeq	r1, r0, r1, lsl #6
    10fc:	03000d12 	movweq	r0, #3346	; 0xd12
    1100:	3b0b3a0e 	blcc	2cf940 <_Min_Heap_Size+0x2cf140>
    1104:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1108:	000a3813 	andeq	r3, sl, r3, lsl r8
    110c:	01131300 	tsteq	r3, r0, lsl #6
    1110:	0b0b0e03 	bleq	2c4924 <_Min_Heap_Size+0x2c4124>
    1114:	0b3b0b3a 	bleq	ec3e04 <_Min_Heap_Size+0xec3604>
    1118:	13010b39 	movwne	r0, #6969	; 0x1b39
    111c:	0f140000 	svceq	0x00140000
    1120:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1124:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1128:	0b0b000f 	bleq	2c116c <_Min_Heap_Size+0x2c096c>
    112c:	15160000 	ldrne	r0, [r6, #-0]
    1130:	010c2701 	tsteq	ip, r1, lsl #14
    1134:	17000013 	smladne	r0, r3, r0, r0
    1138:	13490005 	movtne	r0, #36869	; 0x9005
    113c:	0d180000 	ldceq	0, cr0, [r8, #-0]
    1140:	3a080300 	bcc	201d48 <_Min_Heap_Size+0x201548>
    1144:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1148:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    114c:	1900000a 	stmdbne	r0, {r1, r3}
    1150:	0e03012e 	adfeqsp	f0, f3, #0.5
    1154:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1158:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    115c:	01111349 	tsteq	r1, r9, asr #6
    1160:	0a400112 	beq	10015b0 <_Min_Heap_Size+0x1000db0>
    1164:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1168:	1a000013 	bne	11bc <_Min_Heap_Size+0x9bc>
    116c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1170:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1174:	13490b39 	movtne	r0, #39737	; 0x9b39
    1178:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    117c:	1b000006 	blne	119c <_Min_Heap_Size+0x99c>
    1180:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1184:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1188:	13490b39 	movtne	r0, #39737	; 0x9b39
    118c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1190:	1c000006 	stcne	0, cr0, [r0], {6}
    1194:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1198:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    119c:	13490b39 	movtne	r0, #39737	; 0x9b39
    11a0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    11a4:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    11a8:	0e03012e 	adfeqsp	f0, f3, #0.5
    11ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11b0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    11b4:	01111349 	tsteq	r1, r9, asr #6
    11b8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    11bc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    11c0:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    11c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    11c8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11cc:	13490b39 	movtne	r0, #39737	; 0x9b39
    11d0:	00000a02 	andeq	r0, r0, r2, lsl #20
    11d4:	03012e1f 	movweq	r2, #7711	; 0x1e1f
    11d8:	3b0b3a0e 	blcc	2cfa18 <_Min_Heap_Size+0x2cf218>
    11dc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    11e0:	1201110c 	andne	r1, r1, #12, 2
    11e4:	97064001 	strls	r4, [r6, -r1]
    11e8:	13010c42 	movwne	r0, #7234	; 0x1c42
    11ec:	05200000 	streq	r0, [r0, #-0]!
    11f0:	3a0e0300 	bcc	381df8 <_Min_Heap_Size+0x3815f8>
    11f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11fc:	2100000a 	tstcs	r0, sl
    1200:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1150 <_Min_Heap_Size+0x950>
    1204:	0b3a0e03 	bleq	e84a18 <_Min_Heap_Size+0xe84218>
    1208:	0b39053b 	bleq	e426fc <_Min_Heap_Size+0xe41efc>
    120c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1210:	01120111 	tsteq	r2, r1, lsl r1
    1214:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1218:	0013010c 	andseq	r0, r3, ip, lsl #2
    121c:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    1220:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1224:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1228:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    122c:	01120111 	tsteq	r2, r1, lsl r1
    1230:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1234:	0013010c 	andseq	r0, r3, ip, lsl #2
    1238:	82892300 	addhi	r2, r9, #0, 6
    123c:	01110101 	tsteq	r1, r1, lsl #2
    1240:	00001301 	andeq	r1, r0, r1, lsl #6
    1244:	01828a24 	orreq	r8, r2, r4, lsr #20
    1248:	910a0200 	mrsls	r0, R10_fiq
    124c:	00000a42 	andeq	r0, r0, r2, asr #20
    1250:	01828925 	orreq	r8, r2, r5, lsr #18
    1254:	00011101 	andeq	r1, r1, r1, lsl #2
    1258:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    125c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1260:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1264:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1268:	01111349 	tsteq	r1, r9, asr #6
    126c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1270:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1274:	27000013 	smladcs	r0, r3, r0, r0
    1278:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    127c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1280:	13490b39 	movtne	r0, #39737	; 0x9b39
    1284:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1288:	01828928 	orreq	r8, r2, r8, lsr #18
    128c:	31011100 	mrscc	r1, (UNDEF: 17)
    1290:	29000013 	stmdbcs	r0, {r0, r1, r4}
    1294:	01018289 	smlabbeq	r1, r9, r2, r8
    1298:	13310111 	teqne	r1, #1073741828	; 0x40000004
    129c:	892a0000 	stmdbhi	sl!, {}	; <UNPREDICTABLE>
    12a0:	11010182 	smlabbne	r1, r2, r1, r0
    12a4:	01133101 	tsteq	r3, r1, lsl #2
    12a8:	2b000013 	blcs	12fc <_Min_Heap_Size+0xafc>
    12ac:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 11fc <_Min_Heap_Size+0x9fc>
    12b0:	0b3a0e03 	bleq	e84ac4 <_Min_Heap_Size+0xe842c4>
    12b4:	0b390b3b 	bleq	e43fa8 <_Min_Heap_Size+0xe437a8>
    12b8:	13490c27 	movtne	r0, #39975	; 0x9c27
    12bc:	01120111 	tsteq	r2, r1, lsl r1
    12c0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    12c4:	0013010c 	andseq	r0, r3, ip, lsl #2
    12c8:	00052c00 	andeq	r2, r5, r0, lsl #24
    12cc:	0b3a0e03 	bleq	e84ae0 <_Min_Heap_Size+0xe842e0>
    12d0:	0b390b3b 	bleq	e43fc4 <_Min_Heap_Size+0xe437c4>
    12d4:	06021349 	streq	r1, [r2], -r9, asr #6
    12d8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    12dc:	00342d00 	eorseq	r2, r4, r0, lsl #26
    12e0:	0b3a0803 	bleq	e832f4 <_Min_Heap_Size+0xe82af4>
    12e4:	0b390b3b 	bleq	e43fd8 <_Min_Heap_Size+0xe437d8>
    12e8:	06021349 	streq	r1, [r2], -r9, asr #6
    12ec:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    12f0:	00342e00 	eorseq	r2, r4, r0, lsl #28
    12f4:	0b3a0e03 	bleq	e84b08 <_Min_Heap_Size+0xe84308>
    12f8:	0b390b3b 	bleq	e43fec <_Min_Heap_Size+0xe437ec>
    12fc:	06021349 	streq	r1, [r2], -r9, asr #6
    1300:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1304:	002e2f00 	eoreq	r2, lr, r0, lsl #30
    1308:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    130c:	030e4087 	movweq	r4, #57479	; 0xe087
    1310:	3b0b3a0e 	blcc	2cfb50 <_Min_Heap_Size+0x2cf350>
    1314:	000b390b 	andeq	r3, fp, fp, lsl #18
    1318:	002e3000 	eoreq	r3, lr, r0
    131c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1320:	030e4087 	movweq	r4, #57479	; 0xe087
    1324:	3b0b3a0e 	blcc	2cfb64 <_Min_Heap_Size+0x2cf364>
    1328:	000b3905 	andeq	r3, fp, r5, lsl #18
    132c:	11010000 	mrsne	r0, (UNDEF: 1)
    1330:	130e2501 	movwne	r2, #58625	; 0xe501
    1334:	1b0e030b 	blne	381f68 <_Min_Heap_Size+0x381768>
    1338:	1106550e 	tstne	r6, lr, lsl #10
    133c:	10015201 	andne	r5, r1, r1, lsl #4
    1340:	02000006 	andeq	r0, r0, #6
    1344:	0b3e0104 	bleq	f8175c <_Min_Heap_Size+0xf80f5c>
    1348:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    134c:	0b3b0b3a 	bleq	ec403c <_Min_Heap_Size+0xec383c>
    1350:	13010b39 	movwne	r0, #6969	; 0x1b39
    1354:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    1358:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    135c:	0400000d 	streq	r0, [r0], #-13
    1360:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1364:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1368:	0b002405 	bleq	a384 <_Min_Heap_Size+0x9b84>
    136c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1370:	0600000e 	streq	r0, [r0], -lr
    1374:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1378:	0b3b0b3a 	bleq	ec4068 <_Min_Heap_Size+0xec3868>
    137c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1380:	24070000 	strcs	r0, [r7], #-0
    1384:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1388:	0008030b 	andeq	r0, r8, fp, lsl #6
    138c:	00350800 	eorseq	r0, r5, r0, lsl #16
    1390:	00001349 	andeq	r1, r0, r9, asr #6
    1394:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
    1398:	0a000013 	beq	13ec <_Min_Heap_Size+0xbec>
    139c:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
    13a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13a4:	13010b39 	movwne	r0, #6969	; 0x1b39
    13a8:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    13ac:	3a0e0300 	bcc	381fb4 <_Min_Heap_Size+0x3817b4>
    13b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13b4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    13b8:	0c00000a 	stceq	0, cr0, [r0], {10}
    13bc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    13c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13c4:	13490b39 	movtne	r0, #39737	; 0x9b39
    13c8:	00000a38 	andeq	r0, r0, r8, lsr sl
    13cc:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
    13d0:	00130113 	andseq	r0, r3, r3, lsl r1
    13d4:	00210e00 	eoreq	r0, r1, r0, lsl #28
    13d8:	0b2f1349 	bleq	bc6104 <_Min_Heap_Size+0xbc5904>
    13dc:	210f0000 	mrscs	r0, CPSR
    13e0:	2f134900 	svccs	0x00134900
    13e4:	10000005 	andne	r0, r0, r5
    13e8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    13ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    13f4:	13110000 	tstne	r1, #0
    13f8:	3a0b0b01 	bcc	2c4004 <_Min_Heap_Size+0x2c3804>
    13fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1400:	0013010b 	andseq	r0, r3, fp, lsl #2
    1404:	00281200 	eoreq	r1, r8, r0, lsl #4
    1408:	0b1c0803 	bleq	70341c <_Min_Heap_Size+0x702c1c>
    140c:	13130000 	tstne	r3, #0
    1410:	3a0b0b01 	bcc	2c401c <_Min_Heap_Size+0x2c381c>
    1414:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1418:	0013010b 	andseq	r0, r3, fp, lsl #2
    141c:	000d1400 	andeq	r1, sp, r0, lsl #8
    1420:	0b3a0e03 	bleq	e84c34 <_Min_Heap_Size+0xe84434>
    1424:	0b390b3b 	bleq	e44118 <_Min_Heap_Size+0xe43918>
    1428:	0a381349 	beq	e06154 <_Min_Heap_Size+0xe05954>
    142c:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    1430:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1434:	3b0b3a0e 	blcc	2cfc74 <_Min_Heap_Size+0x2cf474>
    1438:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    143c:	1201110c 	andne	r1, r1, #12, 2
    1440:	970a4001 	strls	r4, [sl, -r1]
    1444:	00000c42 	andeq	r0, r0, r2, asr #24
    1448:	3f012e16 	svccc	0x00012e16
    144c:	3a0e030c 	bcc	382084 <_Min_Heap_Size+0x381884>
    1450:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1454:	110c270b 	tstne	ip, fp, lsl #14
    1458:	40011201 	andmi	r1, r1, r1, lsl #4
    145c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1460:	00001301 	andeq	r1, r0, r1, lsl #6
    1464:	01828917 	orreq	r8, r2, r7, lsl r9
    1468:	31011100 	mrscc	r1, (UNDEF: 17)
    146c:	18000013 	stmdane	r0, {r0, r1, r4}
    1470:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1474:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1478:	13490b39 	movtne	r0, #39737	; 0x9b39
    147c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1480:	19000006 	stmdbne	r0, {r1, r2}
    1484:	01018289 	smlabbeq	r1, r9, r2, r8
    1488:	13310111 	teqne	r1, #1073741828	; 0x40000004
    148c:	8a1a0000 	bhi	681494 <_Min_Heap_Size+0x680c94>
    1490:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1494:	0a42910a 	beq	10a58c4 <_Min_Heap_Size+0x10a50c4>
    1498:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    149c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    14a0:	3b0b3a0e 	blcc	2cfce0 <_Min_Heap_Size+0x2cf4e0>
    14a4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    14a8:	1113490c 	tstne	r3, ip, lsl #18
    14ac:	40011201 	andmi	r1, r1, r1, lsl #4
    14b0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    14b4:	00001301 	andeq	r1, r0, r1, lsl #6
    14b8:	31011d1c 	tstcc	r1, ip, lsl sp
    14bc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    14c0:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    14c4:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    14c8:	13010b57 	movwne	r0, #6999	; 0x1b57
    14cc:	051d0000 	ldreq	r0, [sp, #-0]
    14d0:	02133100 	andseq	r3, r3, #0, 2
    14d4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    14d8:	1d1e0000 	ldcne	0, cr0, [lr, #-0]
    14dc:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    14e0:	0b42b801 	bleq	10af4ec <_Min_Heap_Size+0x10aecec>
    14e4:	01120111 	tsteq	r2, r1, lsl r1
    14e8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    14ec:	13010b57 	movwne	r0, #6999	; 0x1b57
    14f0:	0b1f0000 	bleq	7c14f8 <_Min_Heap_Size+0x7c0cf8>
    14f4:	00065501 	andeq	r5, r6, r1, lsl #10
    14f8:	00342000 	eorseq	r2, r4, r0
    14fc:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1500:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1504:	000f2100 	andeq	r2, pc, r0, lsl #2
    1508:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    150c:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    1510:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1514:	3b0b3a0e 	blcc	2cfd54 <_Min_Heap_Size+0x2cf554>
    1518:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    151c:	1113490c 	tstne	r3, ip, lsl #18
    1520:	40011201 	andmi	r1, r1, r1, lsl #4
    1524:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1528:	00001301 	andeq	r1, r0, r1, lsl #6
    152c:	31001d23 	tstcc	r0, r3, lsr #26
    1530:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1534:	01110b42 	tsteq	r1, r2, asr #22
    1538:	0b580112 	bleq	1601988 <_Min_Heap_Size+0x1601188>
    153c:	0b570559 	bleq	15c2aa8 <_Min_Heap_Size+0x15c22a8>
    1540:	89240000 	stmdbhi	r4!, {}	; <UNPREDICTABLE>
    1544:	11010182 	smlabbne	r1, r2, r1, r0
    1548:	01133101 	tsteq	r3, r1, lsl #2
    154c:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1550:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 14a0 <_Min_Heap_Size+0xca0>
    1554:	0b3a0e03 	bleq	e84d68 <_Min_Heap_Size+0xe84568>
    1558:	0b39053b 	bleq	e42a4c <_Min_Heap_Size+0xe4224c>
    155c:	01110c27 	tsteq	r1, r7, lsr #24
    1560:	0a400112 	beq	10019b0 <_Min_Heap_Size+0x10011b0>
    1564:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1568:	26000013 			; <UNDEFINED> instruction: 0x26000013
    156c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 14bc <_Min_Heap_Size+0xcbc>
    1570:	0b3a0e03 	bleq	e84d84 <_Min_Heap_Size+0xe84584>
    1574:	0b390b3b 	bleq	e44268 <_Min_Heap_Size+0xe43a68>
    1578:	13490c27 	movtne	r0, #39975	; 0x9c27
    157c:	01120111 	tsteq	r2, r1, lsl r1
    1580:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1584:	0013010c 	andseq	r0, r3, ip, lsl #2
    1588:	00052700 	andeq	r2, r5, r0, lsl #14
    158c:	0b3a0e03 	bleq	e84da0 <_Min_Heap_Size+0xe845a0>
    1590:	0b390b3b 	bleq	e44284 <_Min_Heap_Size+0xe43a84>
    1594:	06021349 	streq	r1, [r2], -r9, asr #6
    1598:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    159c:	011d2800 	tsteq	sp, r0, lsl #16
    15a0:	01521331 	cmpeq	r2, r1, lsr r3
    15a4:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    15a8:	58011201 	stmdapl	r1, {r0, r9, ip}
    15ac:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    15b0:	2900000b 	stmdbcs	r0, {r0, r1, r3}
    15b4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    15b8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    15bc:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    15c0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    15c4:	000b5705 	andeq	r5, fp, r5, lsl #14
    15c8:	012e2a00 			; <UNDEFINED> instruction: 0x012e2a00
    15cc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    15d0:	0b3b0b3a 	bleq	ec42c0 <_Min_Heap_Size+0xec3ac0>
    15d4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    15d8:	01120111 	tsteq	r2, r1, lsl r1
    15dc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    15e0:	0013010c 	andseq	r0, r3, ip, lsl #2
    15e4:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    15e8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    15ec:	0b3b0b3a 	bleq	ec42dc <_Min_Heap_Size+0xec3adc>
    15f0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    15f4:	01120111 	tsteq	r2, r1, lsl r1
    15f8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    15fc:	0013010c 	andseq	r0, r3, ip, lsl #2
    1600:	011d2c00 	tsteq	sp, r0, lsl #24
    1604:	01521331 	cmpeq	r2, r1, lsr r3
    1608:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    160c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1610:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1614:	0013010b 	andseq	r0, r3, fp, lsl #2
    1618:	00342d00 	eorseq	r2, r4, r0, lsl #26
    161c:	0b3a0e03 	bleq	e84e30 <_Min_Heap_Size+0xe84630>
    1620:	0b390b3b 	bleq	e44314 <_Min_Heap_Size+0xe43b14>
    1624:	06021349 	streq	r1, [r2], -r9, asr #6
    1628:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    162c:	001d2e00 	andseq	r2, sp, r0, lsl #28
    1630:	01521331 	cmpeq	r2, r1, lsr r3
    1634:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1638:	58011201 	stmdapl	r1, {r0, r9, ip}
    163c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1640:	2f00000b 	svccs	0x0000000b
    1644:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1648:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    164c:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
    1650:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1654:	0013010b 	andseq	r0, r3, fp, lsl #2
    1658:	012e3000 			; <UNDEFINED> instruction: 0x012e3000
    165c:	0b3a0e03 	bleq	e84e70 <_Min_Heap_Size+0xe84670>
    1660:	0b39053b 	bleq	e42b54 <_Min_Heap_Size+0xe42354>
    1664:	13490c27 	movtne	r0, #39975	; 0x9c27
    1668:	13010b20 	movwne	r0, #6944	; 0x1b20
    166c:	05310000 	ldreq	r0, [r1, #-0]!
    1670:	3a0e0300 	bcc	382278 <_Min_Heap_Size+0x381a78>
    1674:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1678:	0013490b 	andseq	r4, r3, fp, lsl #18
    167c:	002e3200 	eoreq	r3, lr, r0, lsl #4
    1680:	0b3a0e03 	bleq	e84e94 <_Min_Heap_Size+0xe84694>
    1684:	0b39053b 	bleq	e42b78 <_Min_Heap_Size+0xe42378>
    1688:	01870c27 	orreq	r0, r7, r7, lsr #24
    168c:	000b200c 	andeq	r2, fp, ip
    1690:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
    1694:	0b3a0e03 	bleq	e84ea8 <_Min_Heap_Size+0xe846a8>
    1698:	0b39053b 	bleq	e42b8c <_Min_Heap_Size+0xe4238c>
    169c:	0b200c27 	bleq	804740 <_Min_Heap_Size+0x803f40>
    16a0:	00001301 	andeq	r1, r0, r1, lsl #6
    16a4:	03003434 	movweq	r3, #1076	; 0x434
    16a8:	3b0b3a0e 	blcc	2cfee8 <_Min_Heap_Size+0x2cf6e8>
    16ac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    16b0:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
    16b4:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    16b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16bc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    16c0:	0b201349 	bleq	8063ec <_Min_Heap_Size+0x805bec>
    16c4:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
    16c8:	3a0e0300 	bcc	3822d0 <_Min_Heap_Size+0x381ad0>
    16cc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16d0:	200c270b 	andcs	r2, ip, fp, lsl #14
    16d4:	3700000b 	strcc	r0, [r0, -fp]
    16d8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1628 <_Min_Heap_Size+0xe28>
    16dc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    16e0:	3a0e030e 	bcc	382320 <_Min_Heap_Size+0x381b20>
    16e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16e8:	0000000b 	andeq	r0, r0, fp
    16ec:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    16f0:	030b130e 	movweq	r1, #45838	; 0xb30e
    16f4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    16f8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    16fc:	00061001 	andeq	r1, r6, r1
    1700:	01040200 	mrseq	r0, R12_usr
    1704:	0b0b0b3e 	bleq	2c4404 <_Min_Heap_Size+0x2c3c04>
    1708:	0b3a1349 	bleq	e86434 <_Min_Heap_Size+0xe85c34>
    170c:	0b390b3b 	bleq	e44400 <_Min_Heap_Size+0xe43c00>
    1710:	00001301 	andeq	r1, r0, r1, lsl #6
    1714:	03002803 	movweq	r2, #2051	; 0x803
    1718:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    171c:	00280400 	eoreq	r0, r8, r0, lsl #8
    1720:	0b1c0e03 	bleq	704f34 <_Min_Heap_Size+0x704734>
    1724:	24050000 	strcs	r0, [r5], #-0
    1728:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    172c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1730:	00160600 	andseq	r0, r6, r0, lsl #12
    1734:	0b3a0e03 	bleq	e84f48 <_Min_Heap_Size+0xe84748>
    1738:	0b390b3b 	bleq	e4442c <_Min_Heap_Size+0xe43c2c>
    173c:	00001349 	andeq	r1, r0, r9, asr #6
    1740:	0b002407 	bleq	a764 <_Min_Heap_Size+0x9f64>
    1744:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1748:	08000008 	stmdaeq	r0, {r3}
    174c:	13490035 	movtne	r0, #36917	; 0x9035
    1750:	26090000 	strcs	r0, [r9], -r0
    1754:	00134900 	andseq	r4, r3, r0, lsl #18
    1758:	01130a00 	tsteq	r3, r0, lsl #20
    175c:	0b3a0b0b 	bleq	e84390 <_Min_Heap_Size+0xe83b90>
    1760:	0b39053b 	bleq	e42c54 <_Min_Heap_Size+0xe42454>
    1764:	00001301 	andeq	r1, r0, r1, lsl #6
    1768:	03000d0b 	movweq	r0, #3339	; 0xd0b
    176c:	3b0b3a0e 	blcc	2cffac <_Min_Heap_Size+0x2cf7ac>
    1770:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1774:	000a3813 	andeq	r3, sl, r3, lsl r8
    1778:	000d0c00 	andeq	r0, sp, r0, lsl #24
    177c:	0b3a0803 	bleq	e83790 <_Min_Heap_Size+0xe82f90>
    1780:	0b39053b 	bleq	e42c74 <_Min_Heap_Size+0xe42474>
    1784:	0a381349 	beq	e064b0 <_Min_Heap_Size+0xe05cb0>
    1788:	160d0000 	strne	r0, [sp], -r0
    178c:	3a0e0300 	bcc	382394 <_Min_Heap_Size+0x381b94>
    1790:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1794:	0013490b 	andseq	r4, r3, fp, lsl #18
    1798:	01010e00 	tsteq	r1, r0, lsl #28
    179c:	13011349 	movwne	r1, #4937	; 0x1349
    17a0:	210f0000 	mrscs	r0, CPSR
    17a4:	2f134900 	svccs	0x00134900
    17a8:	1000000b 	andne	r0, r0, fp
    17ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    17b0:	0b3b0b3a 	bleq	ec44a0 <_Min_Heap_Size+0xec3ca0>
    17b4:	13490b39 	movtne	r0, #39737	; 0x9b39
    17b8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    17bc:	34110000 	ldrcc	r0, [r1], #-0
    17c0:	3a134700 	bcc	4d33c8 <_Min_Heap_Size+0x4d2bc8>
    17c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17c8:	000a020b 	andeq	r0, sl, fp, lsl #4
    17cc:	002e1200 	eoreq	r1, lr, r0, lsl #4
    17d0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    17d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17d8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    17dc:	01111349 	tsteq	r1, r9, asr #6
    17e0:	0a400112 	beq	1001c30 <_Min_Heap_Size+0x1001430>
    17e4:	000c4297 	muleq	ip, r7, r2
    17e8:	002e1300 	eoreq	r1, lr, r0, lsl #6
    17ec:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    17f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17f4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    17f8:	01120111 	tsteq	r2, r1, lsl r1
    17fc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1800:	1400000c 	strne	r0, [r0], #-12
    1804:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1754 <_Min_Heap_Size+0xf54>
    1808:	0b3a0e03 	bleq	e8501c <_Min_Heap_Size+0xe8481c>
    180c:	0b39053b 	bleq	e42d00 <_Min_Heap_Size+0xe42500>
    1810:	01110c27 	tsteq	r1, r7, lsr #24
    1814:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1818:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    181c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1820:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1824:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1828:	13490b39 	movtne	r0, #39737	; 0x9b39
    182c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1830:	16000006 	strne	r0, [r0], -r6
    1834:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1838:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    183c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1840:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1844:	17000006 	strne	r0, [r0, -r6]
    1848:	00018289 	andeq	r8, r1, r9, lsl #5
    184c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1850:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    1854:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1858:	3b0b3a0e 	blcc	2d0098 <_Min_Heap_Size+0x2cf898>
    185c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1860:	1113490c 	tstne	r3, ip, lsl #18
    1864:	40011201 	andmi	r1, r1, r1, lsl #4
    1868:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    186c:	00001301 	andeq	r1, r0, r1, lsl #6
    1870:	01828919 	orreq	r8, r2, r9, lsl r9
    1874:	31011101 	tstcc	r1, r1, lsl #2
    1878:	00130113 	andseq	r0, r3, r3, lsl r1
    187c:	828a1a00 	addhi	r1, sl, #0, 20
    1880:	0a020001 	beq	8188c <_Min_Heap_Size+0x8108c>
    1884:	000a4291 	muleq	sl, r1, r2
    1888:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    188c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1890:	0b3b0b3a 	bleq	ec4580 <_Min_Heap_Size+0xec3d80>
    1894:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1898:	01111349 	tsteq	r1, r9, asr #6
    189c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    18a0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    18a4:	1c000013 	stcne	0, cr0, [r0], {19}
    18a8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    18ac:	0b3b0b3a 	bleq	ec459c <_Min_Heap_Size+0xec3d9c>
    18b0:	13490b39 	movtne	r0, #39737	; 0x9b39
    18b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    18b8:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    18bc:	01018289 	smlabbeq	r1, r9, r2, r8
    18c0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    18c4:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    18c8:	030c3f00 	movweq	r3, #52992	; 0xcf00
    18cc:	3b0b3a0e 	blcc	2d010c <_Min_Heap_Size+0x2cf90c>
    18d0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    18d4:	1201110c 	andne	r1, r1, #12, 2
    18d8:	970a4001 	strls	r4, [sl, -r1]
    18dc:	00000c42 	andeq	r0, r0, r2, asr #24
    18e0:	3f002e1f 	svccc	0x00002e1f
    18e4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    18e8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    18ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    18f0:	00000b39 	andeq	r0, r0, r9, lsr fp
    18f4:	01110100 	tsteq	r1, r0, lsl #2
    18f8:	0b130e25 	bleq	4c5194 <_Min_Heap_Size+0x4c4994>
    18fc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1900:	01110655 	tsteq	r1, r5, asr r6
    1904:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1908:	24020000 	strcs	r0, [r2], #-0
    190c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1910:	000e030b 	andeq	r0, lr, fp, lsl #6
    1914:	00160300 	andseq	r0, r6, r0, lsl #6
    1918:	0b3a0e03 	bleq	e8512c <_Min_Heap_Size+0xe8492c>
    191c:	0b390b3b 	bleq	e44610 <_Min_Heap_Size+0xe43e10>
    1920:	00001349 	andeq	r1, r0, r9, asr #6
    1924:	0b002404 	bleq	a93c <_Min_Heap_Size+0xa13c>
    1928:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    192c:	05000008 	streq	r0, [r0, #-8]
    1930:	13490035 	movtne	r0, #36917	; 0x9035
    1934:	26060000 	strcs	r0, [r6], -r0
    1938:	00134900 	andseq	r4, r3, r0, lsl #18
    193c:	01130700 	tsteq	r3, r0, lsl #14
    1940:	0b3a0b0b 	bleq	e84574 <_Min_Heap_Size+0xe83d74>
    1944:	0b39053b 	bleq	e42e38 <_Min_Heap_Size+0xe42638>
    1948:	00001301 	andeq	r1, r0, r1, lsl #6
    194c:	03000d08 	movweq	r0, #3336	; 0xd08
    1950:	3b0b3a0e 	blcc	2d0190 <_Min_Heap_Size+0x2cf990>
    1954:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1958:	000a3813 	andeq	r3, sl, r3, lsl r8
    195c:	000d0900 	andeq	r0, sp, r0, lsl #18
    1960:	0b3a0803 	bleq	e83974 <_Min_Heap_Size+0xe83174>
    1964:	0b39053b 	bleq	e42e58 <_Min_Heap_Size+0xe42658>
    1968:	0a381349 	beq	e06694 <_Min_Heap_Size+0xe05e94>
    196c:	010a0000 	mrseq	r0, (UNDEF: 10)
    1970:	01134901 	tsteq	r3, r1, lsl #18
    1974:	0b000013 	bleq	19c8 <_Min_Heap_Size+0x11c8>
    1978:	13490021 	movtne	r0, #36897	; 0x9021
    197c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1980:	0300160c 	movweq	r1, #1548	; 0x60c
    1984:	3b0b3a0e 	blcc	2d01c4 <_Min_Heap_Size+0x2cf9c4>
    1988:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    198c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1990:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1994:	0b3b0b3a 	bleq	ec4684 <_Min_Heap_Size+0xec3e84>
    1998:	13490b39 	movtne	r0, #39737	; 0x9b39
    199c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    19a0:	340e0000 	strcc	r0, [lr], #-0
    19a4:	3a134700 	bcc	4d35ac <_Min_Heap_Size+0x4d2dac>
    19a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19ac:	000a020b 	andeq	r0, sl, fp, lsl #4
    19b0:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    19b4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    19b8:	0b3b0b3a 	bleq	ec46a8 <_Min_Heap_Size+0xec3ea8>
    19bc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    19c0:	01120111 	tsteq	r2, r1, lsl r1
    19c4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    19c8:	0013010c 	andseq	r0, r3, ip, lsl #2
    19cc:	00341000 	eorseq	r1, r4, r0
    19d0:	0b3a0803 	bleq	e839e4 <_Min_Heap_Size+0xe831e4>
    19d4:	0b390b3b 	bleq	e446c8 <_Min_Heap_Size+0xe43ec8>
    19d8:	06021349 	streq	r1, [r2], -r9, asr #6
    19dc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    19e0:	00341100 	eorseq	r1, r4, r0, lsl #2
    19e4:	0b3a0e03 	bleq	e851f8 <_Min_Heap_Size+0xe849f8>
    19e8:	0b390b3b 	bleq	e446dc <_Min_Heap_Size+0xe43edc>
    19ec:	06021349 	streq	r1, [r2], -r9, asr #6
    19f0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    19f4:	002e1200 	eoreq	r1, lr, r0, lsl #4
    19f8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    19fc:	0b3b0b3a 	bleq	ec46ec <_Min_Heap_Size+0xec3eec>
    1a00:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a04:	01120111 	tsteq	r2, r1, lsl r1
    1a08:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1a0c:	0000000c 	andeq	r0, r0, ip
    1a10:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1a14:	030b130e 	movweq	r1, #45838	; 0xb30e
    1a18:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1a1c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1a20:	00061001 	andeq	r1, r6, r1
    1a24:	00240200 	eoreq	r0, r4, r0, lsl #4
    1a28:	0b3e0b0b 	bleq	f8465c <_Min_Heap_Size+0xf83e5c>
    1a2c:	00000803 	andeq	r0, r0, r3, lsl #16
    1a30:	03001603 	movweq	r1, #1539	; 0x603
    1a34:	3b0b3a0e 	blcc	2d0274 <_Min_Heap_Size+0x2cfa74>
    1a38:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a3c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1a40:	0b0b0024 	bleq	2c1ad8 <_Min_Heap_Size+0x2c12d8>
    1a44:	0e030b3e 	vmoveq.16	d3[0], r0
    1a48:	0f050000 	svceq	0x00050000
    1a4c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1a50:	00260600 	eoreq	r0, r6, r0, lsl #12
    1a54:	00001349 	andeq	r1, r0, r9, asr #6
    1a58:	03003407 	movweq	r3, #1031	; 0x407
    1a5c:	3b0b3a0e 	blcc	2d029c <_Min_Heap_Size+0x2cfa9c>
    1a60:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a64:	000a0213 	andeq	r0, sl, r3, lsl r2
    1a68:	000f0800 	andeq	r0, pc, r0, lsl #16
    1a6c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1a70:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    1a74:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1a78:	3b0b3a0e 	blcc	2d02b8 <_Min_Heap_Size+0x2cfab8>
    1a7c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1a80:	1113490c 	tstne	r3, ip, lsl #18
    1a84:	40011201 	andmi	r1, r1, r1, lsl #4
    1a88:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1a8c:	00001301 	andeq	r1, r0, r1, lsl #6
    1a90:	0300050a 	movweq	r0, #1290	; 0x50a
    1a94:	3b0b3a0e 	blcc	2d02d4 <_Min_Heap_Size+0x2cfad4>
    1a98:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a9c:	b7060213 	smladlt	r6, r3, r2, r0
    1aa0:	00000642 	andeq	r0, r0, r2, asr #12
    1aa4:	0300340b 	movweq	r3, #1035	; 0x40b
    1aa8:	3b0b3a0e 	blcc	2d02e8 <_Min_Heap_Size+0x2cfae8>
    1aac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ab0:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    1ab4:	0c00000c 	stceq	0, cr0, [r0], {12}
    1ab8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1abc:	0b3b0b3a 	bleq	ec47ac <_Min_Heap_Size+0xec3fac>
    1ac0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ac4:	340d0000 	strcc	r0, [sp], #-0
    1ac8:	3a0e0300 	bcc	3826d0 <_Min_Heap_Size+0x381ed0>
    1acc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ad0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ad4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1ad8:	890e0000 	stmdbhi	lr, {}	; <UNPREDICTABLE>
    1adc:	11000182 	smlabbne	r0, r2, r1, r0
    1ae0:	00133101 	andseq	r3, r3, r1, lsl #2
    1ae4:	002e0f00 	eoreq	r0, lr, r0, lsl #30
    1ae8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1aec:	030e4087 	movweq	r4, #57479	; 0xe087
    1af0:	3b0b3a0e 	blcc	2d0330 <_Min_Heap_Size+0x2cfb30>
    1af4:	000b390b 	andeq	r3, fp, fp, lsl #18
    1af8:	11010000 	mrsne	r0, (UNDEF: 1)
    1afc:	130e2501 	movwne	r2, #58625	; 0xe501
    1b00:	1b0e030b 	blne	382734 <_Min_Heap_Size+0x381f34>
    1b04:	1106550e 	tstne	r6, lr, lsl #10
    1b08:	10015201 	andne	r5, r1, r1, lsl #4
    1b0c:	02000006 	andeq	r0, r0, #6
    1b10:	0b0b0024 	bleq	2c1ba8 <_Min_Heap_Size+0x2c13a8>
    1b14:	0e030b3e 	vmoveq.16	d3[0], r0
    1b18:	16030000 	strne	r0, [r3], -r0
    1b1c:	3a0e0300 	bcc	382724 <_Min_Heap_Size+0x381f24>
    1b20:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b24:	0013490b 	andseq	r4, r3, fp, lsl #18
    1b28:	00240400 	eoreq	r0, r4, r0, lsl #8
    1b2c:	0b3e0b0b 	bleq	f84760 <_Min_Heap_Size+0xf83f60>
    1b30:	00000803 	andeq	r0, r0, r3, lsl #16
    1b34:	0b000f05 	bleq	5750 <_Min_Heap_Size+0x4f50>
    1b38:	0013490b 	andseq	r4, r3, fp, lsl #18
    1b3c:	01130600 	tsteq	r3, r0, lsl #12
    1b40:	0b0b0e03 	bleq	2c5354 <_Min_Heap_Size+0x2c4b54>
    1b44:	0b3b0b3a 	bleq	ec4834 <_Min_Heap_Size+0xec4034>
    1b48:	13010b39 	movwne	r0, #6969	; 0x1b39
    1b4c:	0d070000 	stceq	0, cr0, [r7, #-0]
    1b50:	3a0e0300 	bcc	382758 <_Min_Heap_Size+0x381f58>
    1b54:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b58:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1b5c:	0800000a 	stmdaeq	r0, {r1, r3}
    1b60:	13490101 	movtne	r0, #37121	; 0x9101
    1b64:	00001301 	andeq	r1, r0, r1, lsl #6
    1b68:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
    1b6c:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1b70:	01130a00 	tsteq	r3, r0, lsl #20
    1b74:	0b0b0803 	bleq	2c3b88 <_Min_Heap_Size+0x2c3388>
    1b78:	0b3b0b3a 	bleq	ec4868 <_Min_Heap_Size+0xec4068>
    1b7c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1b80:	340b0000 	strcc	r0, [fp], #-0
    1b84:	3a0e0300 	bcc	38278c <_Min_Heap_Size+0x381f8c>
    1b88:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b8c:	3f13490b 	svccc	0x0013490b
    1b90:	000a020c 	andeq	r0, sl, ip, lsl #4
    1b94:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    1b98:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b9c:	0b3b0b3a 	bleq	ec488c <_Min_Heap_Size+0xec408c>
    1ba0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1ba4:	01111349 	tsteq	r1, r9, asr #6
    1ba8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1bac:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1bb0:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1bb4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1bb8:	0b3b0b3a 	bleq	ec48a8 <_Min_Heap_Size+0xec40a8>
    1bbc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bc0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1bc4:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    1bc8:	08030005 	stmdaeq	r3, {r0, r2}
    1bcc:	0b3b0b3a 	bleq	ec48bc <_Min_Heap_Size+0xec40bc>
    1bd0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bd4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1bd8:	0f000006 	svceq	0x00000006
    1bdc:	00018289 	andeq	r8, r1, r9, lsl #5
    1be0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1be4:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    1be8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1bec:	3b0b3a0e 	blcc	2d042c <_Min_Heap_Size+0x2cfc2c>
    1bf0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1bf4:	1113490c 	tstne	r3, ip, lsl #18
    1bf8:	40011201 	andmi	r1, r1, r1, lsl #4
    1bfc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1c00:	00001301 	andeq	r1, r0, r1, lsl #6
    1c04:	03000511 	movweq	r0, #1297	; 0x511
    1c08:	3b0b3a08 	blcc	2d0430 <_Min_Heap_Size+0x2cfc30>
    1c0c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c10:	000a0213 	andeq	r0, sl, r3, lsl r2
    1c14:	00051200 	andeq	r1, r5, r0, lsl #4
    1c18:	0b3a0e03 	bleq	e8542c <_Min_Heap_Size+0xe84c2c>
    1c1c:	0b390b3b 	bleq	e44910 <_Min_Heap_Size+0xe44110>
    1c20:	0a021349 	beq	8694c <_Min_Heap_Size+0x8614c>
    1c24:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
    1c28:	14000000 	strne	r0, [r0], #-0
    1c2c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1c30:	0b3b0b3a 	bleq	ec4920 <_Min_Heap_Size+0xec4120>
    1c34:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c38:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1c3c:	15000006 	strne	r0, [r0, #-6]
    1c40:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1b90 <_Min_Heap_Size+0x1390>
    1c44:	0b3a0e03 	bleq	e85458 <_Min_Heap_Size+0xe84c58>
    1c48:	0b390b3b 	bleq	e4493c <_Min_Heap_Size+0xe4413c>
    1c4c:	01870c27 	orreq	r0, r7, r7, lsr #24
    1c50:	1201110c 	andne	r1, r1, #12, 2
    1c54:	97064001 	strls	r4, [r6, -r1]
    1c58:	13010c42 	movwne	r0, #7234	; 0x1c42
    1c5c:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    1c60:	11010182 	smlabbne	r1, r2, r1, r0
    1c64:	00133101 	andseq	r3, r3, r1, lsl #2
    1c68:	828a1700 	addhi	r1, sl, #0, 14
    1c6c:	0a020001 	beq	81c78 <_Min_Heap_Size+0x81478>
    1c70:	000a4291 	muleq	sl, r1, r2
    1c74:	002e1800 	eoreq	r1, lr, r0, lsl #16
    1c78:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1c7c:	0b3b0b3a 	bleq	ec496c <_Min_Heap_Size+0xec416c>
    1c80:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1c84:	01111349 	tsteq	r1, r9, asr #6
    1c88:	0a400112 	beq	10020d8 <_Min_Heap_Size+0x10018d8>
    1c8c:	000c4297 	muleq	ip, r7, r2
    1c90:	002e1900 	eoreq	r1, lr, r0, lsl #18
    1c94:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1c98:	0b3b0b3a 	bleq	ec4988 <_Min_Heap_Size+0xec4188>
    1c9c:	01110b39 	tsteq	r1, r9, lsr fp
    1ca0:	0a400112 	beq	10020f0 <_Min_Heap_Size+0x10018f0>
    1ca4:	000c4297 	muleq	ip, r7, r2
    1ca8:	002e1a00 	eoreq	r1, lr, r0, lsl #20
    1cac:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1cb0:	030e4087 	movweq	r4, #57479	; 0xe087
    1cb4:	3b0b3a0e 	blcc	2d04f4 <_Min_Heap_Size+0x2cfcf4>
    1cb8:	000b390b 	andeq	r3, fp, fp, lsl #18
    1cbc:	11010000 	mrsne	r0, (UNDEF: 1)
    1cc0:	130e2501 	movwne	r2, #58625	; 0xe501
    1cc4:	1b0e030b 	blne	3828f8 <_Min_Heap_Size+0x3820f8>
    1cc8:	1106550e 	tstne	r6, lr, lsl #10
    1ccc:	10015201 	andne	r5, r1, r1, lsl #4
    1cd0:	02000006 	andeq	r0, r0, #6
    1cd4:	0b0b0024 	bleq	2c1d6c <_Min_Heap_Size+0x2c156c>
    1cd8:	0e030b3e 	vmoveq.16	d3[0], r0
    1cdc:	16030000 	strne	r0, [r3], -r0
    1ce0:	3a0e0300 	bcc	3828e8 <_Min_Heap_Size+0x3820e8>
    1ce4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ce8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1cec:	00240400 	eoreq	r0, r4, r0, lsl #8
    1cf0:	0b3e0b0b 	bleq	f84924 <_Min_Heap_Size+0xf84124>
    1cf4:	00000803 	andeq	r0, r0, r3, lsl #16
    1cf8:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1cfc:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1d00:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1d04:	0b3a0b0b 	bleq	e84938 <_Min_Heap_Size+0xe84138>
    1d08:	0b390b3b 	bleq	e449fc <_Min_Heap_Size+0xe441fc>
    1d0c:	00001301 	andeq	r1, r0, r1, lsl #6
    1d10:	03000d07 	movweq	r0, #3335	; 0xd07
    1d14:	3b0b3a08 	blcc	2d053c <_Min_Heap_Size+0x2cfd3c>
    1d18:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d1c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1d20:	000d0800 	andeq	r0, sp, r0, lsl #16
    1d24:	0b3a0e03 	bleq	e85538 <_Min_Heap_Size+0xe84d38>
    1d28:	0b390b3b 	bleq	e44a1c <_Min_Heap_Size+0xe4421c>
    1d2c:	0a381349 	beq	e06a58 <_Min_Heap_Size+0xe06258>
    1d30:	34090000 	strcc	r0, [r9], #-0
    1d34:	3a0e0300 	bcc	38293c <_Min_Heap_Size+0x38213c>
    1d38:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d3c:	3f13490b 	svccc	0x0013490b
    1d40:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1d44:	00340a00 	eorseq	r0, r4, r0, lsl #20
    1d48:	0b3a0e03 	bleq	e8555c <_Min_Heap_Size+0xe84d5c>
    1d4c:	0b390b3b 	bleq	e44a40 <_Min_Heap_Size+0xe44240>
    1d50:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1c34 <_Min_Heap_Size+0x1434>
    1d54:	00000a02 	andeq	r0, r0, r2, lsl #20
    1d58:	3f002e0b 	svccc	0x00002e0b
    1d5c:	3a0e030c 	bcc	382994 <_Min_Heap_Size+0x382194>
    1d60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d64:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1d68:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d6c:	970a4001 	strls	r4, [sl, -r1]
    1d70:	00000c42 	andeq	r0, r0, r2, asr #24
    1d74:	3f012e0c 	svccc	0x00012e0c
    1d78:	3a0e030c 	bcc	3829b0 <_Min_Heap_Size+0x3821b0>
    1d7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d80:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1d84:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d88:	970a4001 	strls	r4, [sl, -r1]
    1d8c:	13010c42 	movwne	r0, #7234	; 0x1c42
    1d90:	1d0d0000 	stcne	0, cr0, [sp, #-0]
    1d94:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1d98:	0b42b801 	bleq	10afda4 <_Min_Heap_Size+0x10af5a4>
    1d9c:	01120111 	tsteq	r2, r1, lsl r1
    1da0:	0b590b58 	bleq	1644b08 <_Min_Heap_Size+0x1644308>
    1da4:	00000b57 	andeq	r0, r0, r7, asr fp
    1da8:	3100340e 	tstcc	r0, lr, lsl #8
    1dac:	b7060213 	smladlt	r6, r3, r2, r0
    1db0:	00000642 	andeq	r0, r0, r2, asr #12
    1db4:	3f012e0f 	svccc	0x00012e0f
    1db8:	3a0e030c 	bcc	3829f0 <_Min_Heap_Size+0x3821f0>
    1dbc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1dc0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1dc4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1dc8:	97064001 	strls	r4, [r6, -r1]
    1dcc:	13010c42 	movwne	r0, #7234	; 0x1c42
    1dd0:	05100000 	ldreq	r0, [r0, #-0]
    1dd4:	3a0e0300 	bcc	3829dc <_Min_Heap_Size+0x3821dc>
    1dd8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ddc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1de0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1de4:	34110000 	ldrcc	r0, [r1], #-0
    1de8:	3a0e0300 	bcc	3829f0 <_Min_Heap_Size+0x3821f0>
    1dec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1df0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1df4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1df8:	34120000 	ldrcc	r0, [r2], #-0
    1dfc:	3a080300 	bcc	202a04 <_Min_Heap_Size+0x202204>
    1e00:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e04:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e08:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1e0c:	89130000 	ldmdbhi	r3, {}	; <UNPREDICTABLE>
    1e10:	11010182 	smlabbne	r1, r2, r1, r0
    1e14:	01133101 	tsteq	r3, r1, lsl #2
    1e18:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1e1c:	0001828a 	andeq	r8, r1, sl, lsl #5
    1e20:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1e24:	1500000a 	strne	r0, [r0, #-10]
    1e28:	00018289 	andeq	r8, r1, r9, lsl #5
    1e2c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1e30:	0f160000 	svceq	0x00160000
    1e34:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1e38:	17000013 	smladne	r0, r3, r0, r0
    1e3c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1d8c <_Min_Heap_Size+0x158c>
    1e40:	0b3a0e03 	bleq	e85654 <_Min_Heap_Size+0xe84e54>
    1e44:	0b390b3b 	bleq	e44b38 <_Min_Heap_Size+0xe44338>
    1e48:	01110c27 	tsteq	r1, r7, lsr #24
    1e4c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1e50:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e54:	18000013 	stmdane	r0, {r0, r1, r4}
    1e58:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e5c:	0b3b0b3a 	bleq	ec4b4c <_Min_Heap_Size+0xec434c>
    1e60:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e64:	00000a02 	andeq	r0, r0, r2, lsl #20
    1e68:	01828919 	orreq	r8, r2, r9, lsl r9
    1e6c:	31011101 	tstcc	r1, r1, lsl #2
    1e70:	1a000013 	bne	1ec4 <_Min_Heap_Size+0x16c4>
    1e74:	13490101 	movtne	r0, #37121	; 0x9101
    1e78:	00001301 	andeq	r1, r0, r1, lsl #6
    1e7c:	4900211b 	stmdbmi	r0, {r0, r1, r3, r4, r8, sp}
    1e80:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1e84:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    1e88:	0b3a0e03 	bleq	e8569c <_Min_Heap_Size+0xe84e9c>
    1e8c:	0b390b3b 	bleq	e44b80 <_Min_Heap_Size+0xe44380>
    1e90:	13490c27 	movtne	r0, #39975	; 0x9c27
    1e94:	01120111 	tsteq	r2, r1, lsl r1
    1e98:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1e9c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1ea0:	00051d00 	andeq	r1, r5, r0, lsl #26
    1ea4:	0b3a0803 	bleq	e83eb8 <_Min_Heap_Size+0xe836b8>
    1ea8:	0b390b3b 	bleq	e44b9c <_Min_Heap_Size+0xe4439c>
    1eac:	06021349 	streq	r1, [r2], -r9, asr #6
    1eb0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1eb4:	012e1e00 			; <UNDEFINED> instruction: 0x012e1e00
    1eb8:	0b3a0e03 	bleq	e856cc <_Min_Heap_Size+0xe84ecc>
    1ebc:	0b390b3b 	bleq	e44bb0 <_Min_Heap_Size+0xe443b0>
    1ec0:	13490c27 	movtne	r0, #39975	; 0x9c27
    1ec4:	01120111 	tsteq	r2, r1, lsl r1
    1ec8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1ecc:	0013010c 	andseq	r0, r3, ip, lsl #2
    1ed0:	010b1f00 	tsteq	fp, r0, lsl #30
    1ed4:	01120111 	tsteq	r2, r1, lsl r1
    1ed8:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
    1edc:	3a0e0301 	bcc	382ae8 <_Min_Heap_Size+0x3822e8>
    1ee0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ee4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1ee8:	010b2013 	tsteq	fp, r3, lsl r0
    1eec:	21000013 	tstcs	r0, r3, lsl r0
    1ef0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ef4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1ef8:	13490b39 	movtne	r0, #39737	; 0x9b39
    1efc:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    1f00:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1f04:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1f08:	0b3a0e03 	bleq	e8571c <_Min_Heap_Size+0xe84f1c>
    1f0c:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1f10:	3f002e23 	svccc	0x00002e23
    1f14:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1f18:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1f1c:	0b3b0b3a 	bleq	ec4c0c <_Min_Heap_Size+0xec440c>
    1f20:	00000b39 	andeq	r0, r0, r9, lsr fp
    1f24:	00110100 	andseq	r0, r1, r0, lsl #2
    1f28:	06550610 			; <UNDEFINED> instruction: 0x06550610
    1f2c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1f30:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    1f34:	01000000 	mrseq	r0, (UNDEF: 0)
    1f38:	06100011 			; <UNDEFINED> instruction: 0x06100011
    1f3c:	01120111 	tsteq	r2, r1, lsl r1
    1f40:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1f44:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    1f48:	Address 0x00001f48 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
       4:	08000706 	stmdaeq	r0, {r1, r2, r8, r9, sl}
  errno = ENOMEM;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	08000706 	stmdaeq	r0, {r1, r2, r8, r9, sl}
      10:	08000718 	stmdaeq	r0, {r3, r4, r8, r9, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      24:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
}
      28:	0800070a 	stmdaeq	r0, {r1, r3, r8, r9, sl}
      2c:	0a500001 	beq	1400038 <_Min_Heap_Size+0x13ff838>
      30:	18080007 	stmdane	r8, {r0, r1, r2}
    if (status != HAL_OK)
      34:	04080007 	streq	r0, [r8], #-7
      uwTickFreq = prevTickFreq;
      38:	5001f300 	andpl	pc, r1, r0, lsl #6
      3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
      if (pllsource != 0)
      48:	00070400 	andeq	r0, r7, r0, lsl #8
      4c:	00070808 	andeq	r0, r7, r8, lsl #16
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	51000108 	tstpl	r0, r8, lsl #2
      54:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
      58:	08000718 	stmdaeq	r0, {r3, r4, r8, r9, sl}
      5c:	01f30004 	mvnseq	r0, r4
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00009f51 	andeq	r9, r0, r1, asr pc
      64:	00000000 	andeq	r0, r0, r0
      68:	06ec0000 	strbteq	r0, [ip], r0
      SystemCoreClock = pllvco/pllp;
      6c:	06ee0800 	strbteq	r0, [lr], r0, lsl #16
      70:	00020800 	andeq	r0, r2, r0, lsl #16
      break;
      74:	06ee007d 	uxtabeq	r0, lr, sp
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	07040800 	streq	r0, [r4, -r0, lsl #16]
      7c:	00020800 	andeq	r0, r2, r0, lsl #16
      80:	0000087d 	andeq	r0, r0, sp, ror r8
	...
      90:	00020000 	andeq	r0, r2, r0
      94:	0000007d 	andeq	r0, r0, sp, ror r0
      98:	00000000 	andeq	r0, r0, r0
      9c:	00020000 	andeq	r0, r2, r0
      a0:	0000047d 	andeq	r0, r0, sp, ror r4
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	00000000 	andeq	r0, r0, r0
      a8:	00030000 	andeq	r0, r3, r0
      ac:	0000d87d 	andeq	sp, r0, sp, ror r8
      b0:	00000000 	andeq	r0, r0, r0
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	02000000 	andeq	r0, r0, #0
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00047d00 	andeq	r7, r4, r0, lsl #26
      bc:	00000000 	andeq	r0, r0, r0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	03000000 	movweq	r0, #0
      c4:	00d87d00 	sbcseq	r7, r8, r0, lsl #26
	...
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      d0:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	080006c2 	stmdaeq	r0, {r1, r6, r7, r9, sl}
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	007d0002 	rsbseq	r0, sp, r2
      dc:	080006c2 	stmdaeq	r0, {r1, r6, r7, r9, sl}
      e0:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
    if (huart->hdmarx != NULL)
      e4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
        huart->hdmarx->XferAbortCallback = NULL;
      f0:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
    huart->TxXferCount = 0x00U;
      f4:	080006aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sl}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	007d0002 	rsbseq	r0, sp, r2
    huart->gState  = HAL_UART_STATE_READY;
      fc:	080006aa 	stmdaeq	r0, {r1, r3, r5, r7, r9, sl}
    huart->RxState = HAL_UART_STATE_READY;
     100:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  uint32_t AbortCplt = 0x01U;
     110:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  if (AbortCplt == 0x01U)
     114:	08000692 	stmdaeq	r0, {r1, r4, r7, r9, sl}
}
     118:	007d0002 	rsbseq	r0, sp, r2
     11c:	08000692 	stmdaeq	r0, {r1, r4, r7, r9, sl}
     120:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
     124:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     130:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
     134:	0800067a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl}
     138:	007d0002 	rsbseq	r0, sp, r2
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	0800067a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl}
     140:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
     144:	087d0002 	ldmdaeq	sp!, {r1}^
	...
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
     154:	08000662 	stmdaeq	r0, {r1, r5, r6, r9, sl}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	007d0002 	rsbseq	r0, sp, r2
     15c:	08000662 	stmdaeq	r0, {r1, r5, r6, r9, sl}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
     164:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     170:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
}
     174:	0800064a 	stmdaeq	r0, {r1, r3, r6, r9, sl}
     178:	007d0002 	rsbseq	r0, sp, r2
     17c:	0800064a 	stmdaeq	r0, {r1, r3, r6, r9, sl}
     180:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
}
     184:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
     194:	08000632 	stmdaeq	r0, {r1, r4, r5, r9, sl}
     198:	007d0002 	rsbseq	r0, sp, r2
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	08000632 	stmdaeq	r0, {r1, r4, r5, r9, sl}
     1a0:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
     1b4:	080005e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	007d0002 	rsbseq	r0, sp, r2
     1bc:	080005e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl}
     1c0:	080005e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
     1c8:	080005e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	08000626 	stmdaeq	r0, {r1, r2, r5, r9, sl}
     1d0:	187d0002 	ldmdane	sp!, {r1}^
     1d4:	08000626 	stmdaeq	r0, {r1, r2, r5, r9, sl}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
     1dc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e8:	01010101 	tsteq	r1, r1, lsl #2
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	05e80001 	strbeq	r0, [r8, #1]!
     1f0:	06060800 	streq	r0, [r6], -r0, lsl #16
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	00020800 	andeq	r0, r2, r0, lsl #16
     1f8:	06069f30 			; <UNDEFINED> instruction: 0x06069f30
     1fc:	06140800 	ldreq	r0, [r4], -r0, lsl #16
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00020800 	andeq	r0, r2, r0, lsl #16
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	06149f34 	sasxeq	r9, r4, r4
     208:	06300800 	ldrteq	r0, [r0], -r0, lsl #16
     20c:	00020800 	andeq	r0, r2, r0, lsl #16
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	00009f33 	andeq	r9, r0, r3, lsr pc
	...
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00020000 	andeq	r0, r2, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	0000007d 	andeq	r0, r0, sp, ror r0
     228:	00000000 	andeq	r0, r0, r0
  tmp = hdma->Instance->FCR;
     22c:	00020000 	andeq	r0, r2, r0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	0000087d 	andeq	r0, r0, sp, ror r8
  tmp |= hdma->Init.FIFOMode;
     234:	00000000 	andeq	r0, r0, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	05c40000 	strbeq	r0, [r4]
    tmp |= hdma->Init.FIFOThreshold;
     23c:	05c60800 	strbeq	r0, [r6, #2048]	; 0x800
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00020800 	andeq	r0, r2, r0, lsl #16
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	05c6007d 	strbeq	r0, [r6, #125]	; 0x7d
     248:	05c80800 	strbeq	r0, [r8, #2048]	; 0x800
  hdma->Instance->FCR = tmp;
     24c:	00020800 	andeq	r0, r2, r0, lsl #16
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	05c8047d 	strbeq	r0, [r8, #1149]	; 0x47d
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	05dc0800 	ldrbeq	r0, [ip, #2048]	; 0x800
     258:	00020800 	andeq	r0, r2, r0, lsl #16
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	05dc107d 	ldrbeq	r1, [ip, #125]	; 0x7d
  hdma->State = HAL_DMA_STATE_READY;
     260:	05e40800 	strbeq	r0, [r4, #2048]!	; 0x800
     264:	00020800 	andeq	r0, r2, r0, lsl #16
  return HAL_OK;
     268:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	05c40000 	strbeq	r0, [r4]
     278:	05d40800 	ldrbeq	r0, [r4, #2048]	; 0x800
     27c:	00010800 	andeq	r0, r1, r0, lsl #16
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0005d450 	andeq	sp, r5, r0, asr r4
        hdma->State = HAL_DMA_STATE_READY;
     284:	0005d708 	andeq	sp, r5, r8, lsl #14
        return HAL_ERROR; 
     288:	71000208 	tstvc	r0, r8, lsl #4
	...
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00071800 	andeq	r1, r7, r0, lsl #16
     298:	00071a08 	andeq	r1, r7, r8, lsl #20
      tickstart = HAL_GetTick();
     29c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00071a00 	andeq	r1, r7, r0, lsl #20
     2a4:	00075c08 	andeq	r5, r7, r8, lsl #24
     2a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	00075c10 	andeq	r5, r7, r0, lsl ip
     2b0:	00076408 	andeq	r6, r7, r8, lsl #8
     2b4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
    FlagStatus       pwrclkchanged = RESET;
     2c8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2d4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
      tickstart = HAL_GetTick();
     2d8:	00000008 	andeq	r0, r0, r8
	...
          return HAL_TIMEOUT;
     2f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2fc:	01f30004 	mvnseq	r0, r4
     300:	00009f50 	andeq	r9, r0, r0, asr pc
     304:	00000000 	andeq	r0, r0, r0
     308:	00010000 	andeq	r0, r1, r0
     30c:	00000050 	andeq	r0, r0, r0, asr r0
     310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
     314:	f3000400 	vshl.u8	d0, d0, d0
     318:	009f5001 	addseq	r5, pc, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	00000000 	andeq	r0, r0, r0
     320:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	9a080007 	bls	200348 <_Min_Heap_Size+0x1ffb48>
     328:	02080007 	andeq	r0, r8, #7
     32c:	9a007d00 	bls	1f734 <_Min_Heap_Size+0x1ef34>
     330:	9c080007 	stcls	0, cr0, [r8], {7}
          return HAL_TIMEOUT;
     334:	02080007 	andeq	r0, r8, #7
    if(pwrclkchanged == SET)
     338:	9c087d00 	stcls	13, cr7, [r8], {-0}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	b8080007 	stmdalt	r8, {r0, r1, r2}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	02080007 	andeq	r0, r8, #7
     344:	b8287d00 	stmdalt	r8!, {r8, sl, fp, ip, sp, lr}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	ba080007 	blt	20036c <_Min_Heap_Size+0x1ffb6c>
     34c:	02080007 	andeq	r0, r8, #7
     350:	ba087d00 	blt	21f758 <_Min_Heap_Size+0x21ef58>
     354:	18080007 	stmdane	r8, {r0, r1, r2}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	02080008 	andeq	r0, r8, #8
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     370:	b6080007 	strlt	r0, [r8], -r7
     374:	01080007 	tsteq	r8, r7
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	07b65000 	ldreq	r5, [r6, r0]!
     37c:	07ba0800 	ldreq	r0, [sl, r0, lsl #16]!
     380:	00040800 	andeq	r0, r4, r0, lsl #16
     384:	9f5001f3 	svcls	0x005001f3
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	080007ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl}
     38c:	080007fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
        __HAL_RCC_PLL_DISABLE();
     390:	fe500001 	cdp2	0, 5, cr0, cr0, cr1, {0}
     394:	18080007 	stmdane	r8, {r0, r1, r2}
        tickstart = HAL_GetTick();
     398:	04080008 	streq	r0, [r8], #-8
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	5001f300 	andpl	pc, r1, r0, lsl #6
     3a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     3a4:	00000000 	andeq	r0, r0, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	00076400 	andeq	r6, r7, r0, lsl #8
     3ac:	00076608 	andeq	r6, r7, r8, lsl #12
            return HAL_TIMEOUT;
     3b0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00076600 	andeq	r6, r7, r0, lsl #12
     3b8:	00079808 	andeq	r9, r7, r8, lsl #16
     3bc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00000008 	andeq	r0, r0, r8
     3c4:	00000000 	andeq	r0, r0, r0
     3c8:	00087800 	andeq	r7, r8, r0, lsl #16
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00087a08 	andeq	r7, r8, r8, lsl #20
     3d0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     3d4:	00087a00 	andeq	r7, r8, r0, lsl #20
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00088808 	andeq	r8, r8, r8, lsl #16
     3dc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     3e0:	00000008 	andeq	r0, r0, r8
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00000000 	andeq	r0, r0, r0
     3e8:	00086e00 	andeq	r6, r8, r0, lsl #28
     3ec:	00087008 	andeq	r7, r8, r8
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     3f4:	00087000 	andeq	r7, r8, r0
     3f8:	00087608 	andeq	r7, r8, r8, lsl #12
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     400:	00000008 	andeq	r0, r0, r8
     404:	00000000 	andeq	r0, r0, r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00085400 	andeq	r5, r8, r0, lsl #8
     40c:	00085608 	andeq	r5, r8, r8, lsl #12
     410:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     414:	00085600 	andeq	r5, r8, r0, lsl #12
     418:	00086808 	andeq	r6, r8, r8, lsl #16
     41c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     420:	00000008 	andeq	r0, r0, r8
     424:	00000000 	andeq	r0, r0, r0
        __HAL_RCC_PLL_ENABLE();
     428:	00084000 	andeq	r4, r8, r0
     42c:	00084208 	andeq	r4, r8, r8, lsl #4
        tickstart = HAL_GetTick();
     430:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00084200 	andeq	r4, r8, r0, lsl #4
     438:	00085408 	andeq	r5, r8, r8, lsl #8
     43c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000008 	andeq	r0, r0, r8
     444:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
     448:	00082c00 	andeq	r2, r8, r0, lsl #24
  return HAL_OK;
     44c:	00082e08 	andeq	r2, r8, r8, lsl #28
        __HAL_RCC_PLL_DISABLE();
     450:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     454:	00082e00 	andeq	r2, r8, r0, lsl #28
        tickstart = HAL_GetTick();
     458:	00084008 	andeq	r4, r8, r8
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     460:	00000008 	andeq	r0, r0, r8
	...
            return HAL_TIMEOUT;
     470:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
        pll_config = RCC->PLLCFGR;
     47c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00000008 	andeq	r0, r0, r8
     484:	00000000 	andeq	r0, r0, r0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00081800 	andeq	r1, r8, r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	00081a08 	andeq	r1, r8, r8, lsl #20
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00081a00 	andeq	r1, r8, r0, lsl #20
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00082c08 	andeq	r2, r8, r8, lsl #24
     49c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     4a0:	00000008 	andeq	r0, r0, r8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	00088800 	andeq	r8, r8, r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	00088a08 	andeq	r8, r8, r8, lsl #20
     4b0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00088a00 	andeq	r8, r8, r0, lsl #20
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	0008b808 	andeq	fp, r8, r8, lsl #16
     4bc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
  return HAL_OK;
     4c0:	0008b808 	andeq	fp, r8, r8, lsl #16
}
     4c4:	0008c008 	andeq	ip, r8, r8
        return HAL_ERROR;
     4c8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
        return HAL_ERROR;
     4d4:	00097c00 	andeq	r7, r9, r0, lsl #24
          return HAL_ERROR;
     4d8:	00097e08 	andeq	r7, r9, r8, lsl #28
     4dc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     4e0:	00097e00 	andeq	r7, r9, r0, lsl #28
     4e4:	000af008 	andeq	pc, sl, r8
     4e8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     4ec:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     4fc:	00097c00 	andeq	r7, r9, r0, lsl #24
     500:	00098808 	andeq	r8, r9, r8, lsl #16
     504:	50000108 	andpl	r0, r0, r8, lsl #2
     508:	08000988 	stmdaeq	r0, {r3, r7, r8, fp}
     50c:	08000a08 	stmdaeq	r0, {r3, r9, fp}
     510:	08540001 	ldmdaeq	r4, {r0}^
     514:	0e08000a 	cdpeq	0, 0, cr0, cr8, cr10, {0}
     518:	0108000a 	tsteq	r8, sl
     51c:	0a0e5000 	beq	394524 <_Min_Heap_Size+0x393d24>
     520:	0af00800 	beq	ffc02528 <_estack+0xdfc012f0>
     524:	00010800 	andeq	r0, r1, r0, lsl #16
     528:	00000054 	andeq	r0, r0, r4, asr r0
     52c:	00000000 	andeq	r0, r0, r0
     530:	d4000000 	strle	r0, [r0], #-0
     534:	e6080009 	str	r0, [r8], -r9
     538:	01080009 	tsteq	r8, r9
     53c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     54c:	08000a06 	stmdaeq	r0, {r1, r2, r9, fp}
     550:	08000a08 	stmdaeq	r0, {r3, r9, fp}
     554:	30500001 	subscc	r0, r0, r1
     558:	4e08000a 	cdpmi	0, 0, cr0, cr8, cr10, {0}
     55c:	0108000a 	tsteq	r8, sl
     560:	0a8c5000 	beq	fe314568 <_estack+0xde313330>
     564:	0aa40800 	beq	fe90256c <_estack+0xde901334>
     568:	00010800 	andeq	r0, r1, r0, lsl #16
     56c:	00000050 	andeq	r0, r0, r0, asr r0
     570:	00000000 	andeq	r0, r0, r0
     574:	000da600 	andeq	sl, sp, r0, lsl #12
     578:	000de608 	andeq	lr, sp, r8, lsl #12
     57c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     580:	000de600 	andeq	lr, sp, r0, lsl #12
     584:	000de808 	andeq	lr, sp, r8, lsl #16
     588:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     58c:	000de804 	andeq	lr, sp, r4, lsl #16
     590:	000e5408 	andeq	r5, lr, r8, lsl #8
     594:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     598:	000e5410 	andeq	r5, lr, r0, lsl r4
     59c:	000e5808 	andeq	r5, lr, r8, lsl #16
     5a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5a4:	000e5804 	andeq	r5, lr, r4, lsl #16
     5a8:	000e7e08 	andeq	r7, lr, r8, lsl #28
     5ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5b0:	000e7e00 	andeq	r7, lr, r0, lsl #28
     5b4:	000e8408 	andeq	r8, lr, r8, lsl #8
     5b8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5bc:	000e8410 	andeq	r8, lr, r0, lsl r4
     5c0:	000e8c08 	andeq	r8, lr, r8, lsl #24
     5c4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
     5e0:	000da600 	andeq	sl, sp, r0, lsl #12
     5e4:	000e4f08 	andeq	r4, lr, r8, lsl #30
     5e8:	50000108 	andpl	r0, r0, r8, lsl #2
     5ec:	08000e4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r9, sl, fp}
     5f0:	08000e58 	stmdaeq	r0, {r3, r4, r6, r9, sl, fp}
     5f4:	01f30004 	mvnseq	r0, r4
     5f8:	0e589f50 	mrceq	15, 2, r9, cr8, cr0, {2}
     5fc:	0e810800 	cdpeq	8, 8, cr0, cr1, cr0, {0}
     600:	00010800 	andeq	r0, r1, r0, lsl #16
     604:	000e8150 	andeq	r8, lr, r0, asr r1
     608:	000e8408 	andeq	r8, lr, r8, lsl #8
     60c:	f3000408 	vshl.u8	d0, d8, d0
     610:	849f5001 	ldrhi	r5, [pc], #1	; 618 <_Min_Heap_Size-0x1e8>
     614:	8608000e 	strhi	r0, [r8], -lr
     618:	0108000e 	tsteq	r8, lr
     61c:	0e865000 	cdpeq	0, 8, cr5, cr6, cr0, {0}
     620:	0e880800 	cdpeq	8, 8, cr0, cr8, cr0, {0}
     624:	00040800 	andeq	r0, r4, r0, lsl #16
     628:	9f5001f3 	svcls	0x005001f3
     62c:	08000e88 	stmdaeq	r0, {r3, r7, r9, sl, fp}
     630:	08000e8a 	stmdaeq	r0, {r1, r3, r7, r9, sl, fp}
     634:	8a500001 	bhi	1400640 <_Min_Heap_Size+0x13ffe40>
     638:	8c08000e 	stchi	0, cr0, [r8], {14}
     63c:	0408000e 	streq	r0, [r8], #-14
     640:	5001f300 	andpl	pc, r1, r0, lsl #6
     644:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     648:	00000000 	andeq	r0, r0, r0
     64c:	01000000 	mrseq	r0, (UNDEF: 0)
     650:	ba000000 	blt	658 <_Min_Heap_Size-0x1a8>
     654:	d608000d 	strle	r0, [r8], -sp
     658:	0108000d 	tsteq	r8, sp
     65c:	0e5e5200 	cdpeq	2, 5, cr5, cr14, cr0, {0}
     660:	0e720800 	cdpeq	8, 7, cr0, cr2, cr0, {0}
     664:	00020800 	andeq	r0, r2, r0, lsl #16
     668:	0e729f30 	mrceq	15, 3, r9, cr2, cr0, {1}
     66c:	0e7e0800 	cdpeq	8, 7, cr0, cr14, cr0, {0}
     670:	00010800 	andeq	r0, r1, r0, lsl #16
     674:	00000052 	andeq	r0, r0, r2, asr r0
     678:	00000000 	andeq	r0, r0, r0
     67c:	00000100 	andeq	r0, r0, r0, lsl #2
     680:	ba000000 	blt	688 <_Min_Heap_Size-0x178>
     684:	d608000d 	strle	r0, [r8], -sp
     688:	0208000d 	andeq	r0, r8, #13
     68c:	609f3000 	addsvs	r3, pc, r0
     690:	7208000e 	andvc	r0, r8, #14
     694:	0108000e 	tsteq	r8, lr
     698:	0e725200 	cdpeq	2, 7, cr5, cr2, cr0, {0}
     69c:	0e7e0800 	cdpeq	8, 7, cr0, cr14, cr0, {0}
     6a0:	00020800 	andeq	r0, r2, r0, lsl #16
     6a4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     6b0:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
     6b4:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
     6b8:	00530001 	subseq	r0, r3, r1
	...
     6c8:	000e1c01 	andeq	r1, lr, r1, lsl #24
     6cc:	000e2008 	andeq	r2, lr, r8
     6d0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     6d4:	0e209f0c 	cdpeq	15, 2, cr9, cr0, cr12, {0}
     6d8:	0e240800 	cdpeq	8, 2, cr0, cr4, cr0, {0}
     6dc:	00010800 	andeq	r0, r1, r0, lsl #16
     6e0:	000e2453 	andeq	r2, lr, r3, asr r4
     6e4:	000e2408 	andeq	r2, lr, r8, lsl #8
     6e8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     6ec:	00009f0c 	andeq	r9, r0, ip, lsl #30
     6f0:	00000000 	andeq	r0, r0, r0
     6f4:	01000000 	mrseq	r0, (UNDEF: 0)
     6f8:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
     6fc:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
     700:	00530001 	subseq	r0, r3, r1
     704:	00000000 	andeq	r0, r0, r0
     708:	01000000 	mrseq	r0, (UNDEF: 0)
     70c:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
     710:	2a08000e 	bcs	200750 <_Min_Heap_Size+0x1fff50>
     714:	0308000e 	movweq	r0, #32782	; 0x800e
     718:	9f0c7200 	svcls	0x000c7200
     71c:	08000e2a 	stmdaeq	r0, {r1, r3, r5, r9, sl, fp}
     720:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
     724:	00520001 	subseq	r0, r2, r1
     728:	00000000 	andeq	r0, r0, r0
     72c:	01000000 	mrseq	r0, (UNDEF: 0)
     730:	000e2801 	andeq	r2, lr, r1, lsl #16
     734:	000e2e08 	andeq	r2, lr, r8, lsl #28
     738:	53000108 	movwpl	r0, #264	; 0x108
	...
     744:	0e2e0100 	sufeqe	f0, f6, f0
     748:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
     74c:	00010800 	andeq	r0, r1, r0, lsl #16
     750:	00000051 	andeq	r0, r0, r1, asr r0
     754:	00000000 	andeq	r0, r0, r0
     758:	000d7600 	andeq	r7, sp, r0, lsl #12
     75c:	000d7808 	andeq	r7, sp, r8, lsl #16
     760:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     764:	000d7800 	andeq	r7, sp, r0, lsl #16
     768:	000d9008 	andeq	r9, sp, r8
     76c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     770:	00000008 	andeq	r0, r0, r8
	...
     77c:	000d7600 	andeq	r7, sp, r0, lsl #12
     780:	000d8b08 	andeq	r8, sp, r8, lsl #22
     784:	50000108 	andpl	r0, r0, r8, lsl #2
     788:	08000d8b 	stmdaeq	r0, {r0, r1, r3, r7, r8, sl, fp}
     78c:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
     790:	01f30004 	mvnseq	r0, r4
     794:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     7a8:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
     7ac:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
     7b0:	28500001 	ldmdacs	r0, {r0}^
     7b4:	2a080009 	bcs	2007e0 <_Min_Heap_Size+0x1fffe0>
     7b8:	04080009 	streq	r0, [r8], #-9
     7bc:	5001f300 	andpl	pc, r1, r0, lsl #6
     7c0:	00092a9f 	muleq	r9, pc, sl	; <UNPREDICTABLE>
     7c4:	00096008 	andeq	r6, r9, r8
     7c8:	50000108 	andpl	r0, r0, r8, lsl #2
     7cc:	08000960 	stmdaeq	r0, {r5, r6, r8, fp}
     7d0:	08000962 	stmdaeq	r0, {r1, r5, r6, r8, fp}
     7d4:	01f30004 	mvnseq	r0, r4
     7d8:	09629f50 	stmdbeq	r2!, {r4, r6, r8, r9, sl, fp, ip, pc}^
     7dc:	097c0800 	ldmdbeq	ip!, {fp}^
     7e0:	00010800 	andeq	r0, r1, r0, lsl #16
     7e4:	00000050 	andeq	r0, r0, r0, asr r0
	...
     7f0:	00096a00 	andeq	r6, r9, r0, lsl #20
     7f4:	00096c08 	andeq	r6, r9, r8, lsl #24
     7f8:	53000108 	movwpl	r0, #264	; 0x108
     7fc:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
     800:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
     804:	20700002 	rsbscs	r0, r0, r2
	...
     818:	007d0002 	rsbseq	r0, sp, r2
	...
     824:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     83c:	00500001 	subseq	r0, r0, r1
     840:	00000000 	andeq	r0, r0, r0
     844:	04000000 	streq	r0, [r0], #-0
     848:	5001f300 	andpl	pc, r1, r0, lsl #6
     84c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     85c:	01000000 	mrseq	r0, (UNDEF: 0)
     860:	00005000 	andeq	r5, r0, r0
	...
     870:	00020000 	andeq	r0, r2, r0
     874:	0000007d 	andeq	r0, r0, sp, ror r0
     878:	00000000 	andeq	r0, r0, r0
     87c:	00020000 	andeq	r0, r2, r0
     880:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     894:	00010000 	andeq	r0, r1, r0
     898:	00000050 	andeq	r0, r0, r0, asr r0
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	f3000400 	vshl.u8	d0, d0, d0
     8a4:	009f5001 	addseq	r5, pc, r1
	...
     8b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     8cc:	007d0002 	rsbseq	r0, sp, r2
	...
     8d8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     8f0:	00500001 	subseq	r0, r0, r1
     8f4:	00000000 	andeq	r0, r0, r0
     8f8:	04000000 	streq	r0, [r0], #-0
     8fc:	5001f300 	andpl	pc, r1, r0, lsl #6
     900:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     910:	01000000 	mrseq	r0, (UNDEF: 0)
     914:	00005000 	andeq	r5, r0, r0
	...
     924:	00020000 	andeq	r0, r2, r0
     928:	0000007d 	andeq	r0, r0, sp, ror r0
     92c:	00000000 	andeq	r0, r0, r0
     930:	00020000 	andeq	r0, r2, r0
     934:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     948:	00010000 	andeq	r0, r1, r0
     94c:	00000050 	andeq	r0, r0, r0, asr r0
     950:	00000000 	andeq	r0, r0, r0
     954:	f3000400 	vshl.u8	d0, d0, d0
     958:	009f5001 	addseq	r5, pc, r1
	...
     96c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     978:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
     97c:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
     980:	007d0002 	rsbseq	r0, sp, r2
     984:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
     988:	08000da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp}
     98c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     99c:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
     9a0:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
     9a4:	98500001 	ldmdals	r0, {r0}^
     9a8:	a408000d 	strge	r0, [r8], #-13
     9ac:	0408000d 	streq	r0, [r8], #-13
     9b0:	5001f300 	andpl	pc, r1, r0, lsl #6
     9b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     9b8:	00000000 	andeq	r0, r0, r0
     9bc:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     9c0:	a108000d 	tstge	r8, sp
     9c4:	0108000d 	tsteq	r8, sp
     9c8:	00005000 	andeq	r5, r0, r0
     9cc:	00000000 	andeq	r0, r0, r0
     9d0:	00010000 	andeq	r0, r1, r0
     9d4:	080008c0 	stmdaeq	r0, {r6, r7, fp}
     9d8:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
     9dc:	00500001 	subseq	r0, r0, r1
	...
     9e8:	0008ce00 	andeq	ip, r8, r0, lsl #28
     9ec:	0008d808 	andeq	sp, r8, r8, lsl #16
     9f0:	53000108 	movwpl	r0, #264	; 0x108
	...
     a00:	08c20100 	stmiaeq	r2, {r8}^
     a04:	08c60800 	stmiaeq	r6, {fp}^
     a08:	00030800 	andeq	r0, r3, r0, lsl #16
     a0c:	c69f0c72 			; <UNDEFINED> instruction: 0xc69f0c72
     a10:	ca080008 	bgt	200a38 <_Min_Heap_Size+0x200238>
     a14:	01080008 	tsteq	r8, r8
     a18:	08ca5300 	stmiaeq	sl, {r8, r9, ip, lr}^
     a1c:	08ca0800 	stmiaeq	sl, {fp}^
     a20:	00030800 	andeq	r0, r3, r0, lsl #16
     a24:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     a30:	0008ca01 	andeq	ip, r8, r1, lsl #20
     a34:	0008ca08 	andeq	ip, r8, r8, lsl #20
     a38:	53000108 	movwpl	r0, #264	; 0x108
	...
     a44:	01000001 	tsteq	r0, r1
     a48:	080008ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, fp}
     a4c:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
     a50:	0c720003 	ldcleq	0, cr0, [r2], #-12
     a54:	0008d09f 	muleq	r8, pc, r0	; <UNPREDICTABLE>
     a58:	0008d408 	andeq	sp, r8, r8, lsl #8
     a5c:	52000108 	andpl	r0, r0, #8, 2
	...
     a68:	08ce0101 	stmiaeq	lr, {r0, r8}^
     a6c:	08d40800 	ldmeq	r4, {fp}^
     a70:	00010800 	andeq	r0, r1, r0, lsl #16
     a74:	00000053 	andeq	r0, r0, r3, asr r0
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	d4010000 	strle	r0, [r1], #-0
     a80:	d4080008 	strle	r0, [r8], #-8
     a84:	01080008 	tsteq	r8, r8
     a88:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     a94:	080008e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp}
     a98:	080008f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, fp}
     a9c:	00530001 	subseq	r0, r3, r1
	...
     aac:	0008da01 	andeq	sp, r8, r1, lsl #20
     ab0:	0008de08 	andeq	sp, r8, r8, lsl #28
     ab4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     ab8:	08de9f14 	ldmeq	lr, {r2, r4, r8, r9, sl, fp, ip, pc}^
     abc:	08e20800 	stmiaeq	r2!, {fp}^
     ac0:	00010800 	andeq	r0, r1, r0, lsl #16
     ac4:	0008e253 	andeq	lr, r8, r3, asr r2
     ac8:	0008e208 	andeq	lr, r8, r8, lsl #4
     acc:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     ad0:	00009f14 	andeq	r9, r0, r4, lsl pc
     ad4:	00000000 	andeq	r0, r0, r0
     ad8:	01000000 	mrseq	r0, (UNDEF: 0)
     adc:	080008e2 	stmdaeq	r0, {r1, r5, r6, r7, fp}
     ae0:	080008e2 	stmdaeq	r0, {r1, r5, r6, r7, fp}
     ae4:	00530001 	subseq	r0, r3, r1
     ae8:	00000000 	andeq	r0, r0, r0
     aec:	01000000 	mrseq	r0, (UNDEF: 0)
     af0:	e6010000 	str	r0, [r1], -r0
     af4:	e8080008 	stmda	r8, {r3}
     af8:	03080008 	movweq	r0, #32776	; 0x8008
     afc:	9f147200 	svcls	0x00147200
     b00:	080008e8 	stmdaeq	r0, {r3, r5, r6, r7, fp}
     b04:	080008ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp}
     b08:	00520001 	subseq	r0, r2, r1
     b0c:	00000000 	andeq	r0, r0, r0
     b10:	01000000 	mrseq	r0, (UNDEF: 0)
     b14:	0008e601 	andeq	lr, r8, r1, lsl #12
     b18:	0008ec08 	andeq	lr, r8, r8, lsl #24
     b1c:	53000108 	movwpl	r0, #264	; 0x108
	...
     b28:	08ec0100 	stmiaeq	ip!, {r8}^
     b2c:	08ec0800 	stmiaeq	ip!, {fp}^
     b30:	00010800 	andeq	r0, r1, r0, lsl #16
     b34:	00000051 	andeq	r0, r0, r1, asr r0
     b38:	00000000 	andeq	r0, r0, r0
     b3c:	10000000 	andne	r0, r0, r0
     b40:	1c080009 	stcne	0, cr0, [r8], {9}
     b44:	01080009 	tsteq	r8, r9
     b48:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     b54:	01000000 	mrseq	r0, (UNDEF: 0)
     b58:	08000904 	stmdaeq	r0, {r2, r8, fp}
     b5c:	08000908 	stmdaeq	r0, {r3, r8, fp}
     b60:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b64:	0009089f 	muleq	r9, pc, r8	; <UNPREDICTABLE>
     b68:	00090c08 	andeq	r0, r9, r8, lsl #24
     b6c:	53000108 	movwpl	r0, #264	; 0x108
     b70:	0800090c 	stmdaeq	r0, {r2, r3, r8, fp}
     b74:	0800090c 	stmdaeq	r0, {r2, r3, r8, fp}
     b78:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b80:	00000000 	andeq	r0, r0, r0
     b84:	0c010000 	stceq	0, cr0, [r1], {-0}
     b88:	0c080009 	stceq	0, cr0, [r8], {9}
     b8c:	01080009 	tsteq	r8, r9
     b90:	00005300 	andeq	r5, r0, r0, lsl #6
     b94:	00000000 	andeq	r0, r0, r0
     b98:	00010000 	andeq	r0, r1, r0
     b9c:	09100100 	ldmdbeq	r0, {r8}
     ba0:	09120800 	ldmdbeq	r2, {fp}
     ba4:	00030800 	andeq	r0, r3, r0, lsl #16
     ba8:	129f0c72 	addsne	r0, pc, #29184	; 0x7200
     bac:	16080009 	strne	r0, [r8], -r9
     bb0:	01080009 	tsteq	r8, r9
     bb4:	00005200 	andeq	r5, r0, r0, lsl #4
     bb8:	00000000 	andeq	r0, r0, r0
     bbc:	01010000 	mrseq	r0, (UNDEF: 1)
     bc0:	08000910 	stmdaeq	r0, {r4, r8, fp}
     bc4:	08000916 	stmdaeq	r0, {r1, r2, r4, r8, fp}
     bc8:	00530001 	subseq	r0, r3, r1
	...
     bd4:	00091601 	andeq	r1, r9, r1, lsl #12
     bd8:	00091608 	andeq	r1, r9, r8, lsl #12
     bdc:	51000108 	tstpl	r0, r8, lsl #2
	...
     be8:	00000001 	andeq	r0, r0, r1
     bec:	00000000 	andeq	r0, r0, r0
     bf0:	00010000 	andeq	r0, r1, r0
     bf4:	00000050 	andeq	r0, r0, r0, asr r0
	...
     c04:	01000000 	mrseq	r0, (UNDEF: 0)
     c08:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     c14:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     c20:	0c720003 	ldcleq	0, cr0, [r2], #-12
     c24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	53000100 	movwpl	r0, #256	; 0x100
	...
     c38:	0c720003 	ldcleq	0, cr0, [r2], #-12
     c3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c40:	00000000 	andeq	r0, r0, r0
     c44:	00010000 	andeq	r0, r1, r0
     c48:	00000000 	andeq	r0, r0, r0
     c4c:	01000000 	mrseq	r0, (UNDEF: 0)
     c50:	00005300 	andeq	r5, r0, r0, lsl #6
     c54:	00000000 	andeq	r0, r0, r0
     c58:	00010000 	andeq	r0, r1, r0
     c5c:	00000100 	andeq	r0, r0, r0, lsl #2
     c60:	00000000 	andeq	r0, r0, r0
     c64:	00030000 	andeq	r0, r3, r0
     c68:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	01000000 	mrseq	r0, (UNDEF: 0)
     c74:	00005200 	andeq	r5, r0, r0, lsl #4
     c78:	00000000 	andeq	r0, r0, r0
     c7c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
     c88:	00530001 	subseq	r0, r3, r1
	...
     c94:	00000001 	andeq	r0, r0, r1
     c98:	00000000 	andeq	r0, r0, r0
     c9c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     cb0:	007d0002 	rsbseq	r0, sp, r2
	...
     cbc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     cc8:	187d0002 	ldmdane	sp!, {r1}^
	...
     cd4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     cec:	00010000 	andeq	r0, r1, r0
     cf0:	00000050 	andeq	r0, r0, r0, asr r0
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
     d04:	01f30004 	mvnseq	r0, r4
     d08:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     d20:	00510001 	subseq	r0, r1, r1
     d24:	00000000 	andeq	r0, r0, r0
     d28:	01000000 	mrseq	r0, (UNDEF: 0)
     d2c:	00005200 	andeq	r5, r0, r0, lsl #4
     d30:	00000000 	andeq	r0, r0, r0
     d34:	00040000 	andeq	r0, r4, r0
     d38:	9f5101f3 	svcls	0x005101f3
	...
     d54:	00520001 	subseq	r0, r2, r1
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	02000000 	andeq	r0, r0, #0
     d60:	002c7000 	eoreq	r7, ip, r0
     d64:	00000000 	andeq	r0, r0, r0
     d68:	02000000 	andeq	r0, r0, #0
     d6c:	002c7400 	eoreq	r7, ip, r0, lsl #8
     d70:	00000000 	andeq	r0, r0, r0
     d74:	04000000 	streq	r0, [r0], #-0
     d78:	5201f300 	andpl	pc, r1, #0, 6
     d7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d80:	00000000 	andeq	r0, r0, r0
     d84:	00000100 	andeq	r0, r0, r0, lsl #2
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	06000000 	streq	r0, [r0], -r0
     d90:	3bf3f200 	blcc	ffcfd598 <_estack+0xdfcfc360>
	...
     da8:	53000100 	movwpl	r0, #256	; 0x100
	...
     db8:	00000100 	andeq	r0, r0, r0, lsl #2
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00030000 	andeq	r0, r3, r0
     dc4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     dc8:	00000000 	andeq	r0, r0, r0
     dcc:	01000000 	mrseq	r0, (UNDEF: 0)
     dd0:	00005300 	andeq	r5, r0, r0, lsl #6
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	00030000 	andeq	r0, r3, r0
     ddc:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     de8:	00000001 	andeq	r0, r0, r1
     dec:	00000000 	andeq	r0, r0, r0
     df0:	53000100 	movwpl	r0, #256	; 0x100
	...
     dfc:	01000001 	tsteq	r0, r1
	...
     e08:	0c720003 	ldcleq	0, cr0, [r2], #-12
     e0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e10:	00000000 	andeq	r0, r0, r0
     e14:	52000100 	andpl	r0, r0, #0, 2
	...
     e20:	00000101 	andeq	r0, r0, r1, lsl #2
     e24:	00000000 	andeq	r0, r0, r0
     e28:	00010000 	andeq	r0, r1, r0
     e2c:	00000053 	andeq	r0, r0, r3, asr r0
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00010000 	andeq	r0, r1, r0
     e38:	00000000 	andeq	r0, r0, r0
     e3c:	01000000 	mrseq	r0, (UNDEF: 0)
     e40:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     e54:	00530001 	subseq	r0, r3, r1
	...
     e64:	00000001 	andeq	r0, r0, r1
     e68:	00000000 	andeq	r0, r0, r0
     e6c:	72000300 	andvc	r0, r0, #0, 6
     e70:	00009f14 	andeq	r9, r0, r4, lsl pc
     e74:	00000000 	andeq	r0, r0, r0
     e78:	00010000 	andeq	r0, r1, r0
     e7c:	00000053 	andeq	r0, r0, r3, asr r0
     e80:	00000000 	andeq	r0, r0, r0
     e84:	72000300 	andvc	r0, r0, #0, 6
     e88:	00009f14 	andeq	r9, r0, r4, lsl pc
     e8c:	00000000 	andeq	r0, r0, r0
     e90:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     e9c:	00530001 	subseq	r0, r3, r1
     ea0:	00000000 	andeq	r0, r0, r0
     ea4:	01000000 	mrseq	r0, (UNDEF: 0)
     ea8:	00010000 	andeq	r0, r1, r0
     eac:	00000000 	andeq	r0, r0, r0
     eb0:	03000000 	movweq	r0, #0
     eb4:	9f147200 	svcls	0x00147200
	...
     ec0:	00520001 	subseq	r0, r2, r1
     ec4:	00000000 	andeq	r0, r0, r0
     ec8:	01000000 	mrseq	r0, (UNDEF: 0)
     ecc:	00000001 	andeq	r0, r0, r1
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	53000100 	movwpl	r0, #256	; 0x100
	...
     ee0:	00000100 	andeq	r0, r0, r0, lsl #2
     ee4:	00000000 	andeq	r0, r0, r0
     ee8:	00010000 	andeq	r0, r1, r0
     eec:	00000051 	andeq	r0, r0, r1, asr r0
	...
     efc:	01000000 	mrseq	r0, (UNDEF: 0)
     f00:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     f0c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     f18:	14720003 	ldrbtne	r0, [r2], #-3
     f1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f20:	00000000 	andeq	r0, r0, r0
     f24:	53000100 	movwpl	r0, #256	; 0x100
	...
     f30:	14720003 	ldrbtne	r0, [r2], #-3
     f34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	00010000 	andeq	r0, r1, r0
     f40:	00000000 	andeq	r0, r0, r0
     f44:	01000000 	mrseq	r0, (UNDEF: 0)
     f48:	00005300 	andeq	r5, r0, r0, lsl #6
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	00010000 	andeq	r0, r1, r0
     f54:	00000100 	andeq	r0, r0, r0, lsl #2
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	00030000 	andeq	r0, r3, r0
     f60:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
     f64:	00000000 	andeq	r0, r0, r0
     f68:	01000000 	mrseq	r0, (UNDEF: 0)
     f6c:	00005200 	andeq	r5, r0, r0, lsl #4
     f70:	00000000 	andeq	r0, r0, r0
     f74:	01010000 	mrseq	r0, (UNDEF: 1)
	...
     f80:	00530001 	subseq	r0, r3, r1
	...
     f8c:	00000001 	andeq	r0, r0, r1
     f90:	00000000 	andeq	r0, r0, r0
     f94:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     fac:	00500001 	subseq	r0, r0, r1
     fb0:	00000000 	andeq	r0, r0, r0
     fb4:	04000000 	streq	r0, [r0], #-0
     fb8:	5001f300 	andpl	pc, r1, r0, lsl #6
     fbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     fd0:	01000000 	mrseq	r0, (UNDEF: 0)
     fd4:	00005200 	andeq	r5, r0, r0, lsl #4
     fd8:	00000000 	andeq	r0, r0, r0
     fdc:	00020000 	andeq	r0, r2, r0
     fe0:	00002c70 	andeq	r2, r0, r0, ror ip
     fe4:	00000000 	andeq	r0, r0, r0
     fe8:	00040000 	andeq	r0, r4, r0
     fec:	9f5201f3 	svcls	0x005201f3
	...
     ff8:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
     ffc:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
    1000:	007d0002 	rsbseq	r0, sp, r2
    1004:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
    1008:	08000af6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, fp}
    100c:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    1010:	08000af6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, fp}
    1014:	08000b6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, fp}
    1018:	287d0002 	ldmdacs	sp!, {r1}^
    101c:	08000b6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, fp}
    1020:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
    1024:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    1028:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
    102c:	08000b7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, fp}
    1030:	287d0002 	ldmdacs	sp!, {r1}^
	...
    103c:	00010100 	andeq	r0, r1, r0, lsl #2
    1040:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
    1044:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
    1048:	02500001 	subseq	r0, r0, #1
    104c:	7a08000b 	bvc	201080 <_Min_Heap_Size+0x200880>
    1050:	0108000b 	tsteq	r8, fp
    1054:	00005500 	andeq	r5, r0, r0, lsl #10
    1058:	00000000 	andeq	r0, r0, r0
    105c:	01000000 	mrseq	r0, (UNDEF: 0)
    1060:	0af00001 	beq	ffc0106c <_estack+0xdfbffe34>
    1064:	0b020800 	bleq	8306c <_Min_Heap_Size+0x8286c>
    1068:	00010800 	andeq	r0, r1, r0, lsl #16
    106c:	000b0251 	andeq	r0, fp, r1, asr r2
    1070:	000b7a08 	andeq	r7, fp, r8, lsl #20
    1074:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    1080:	00010100 	andeq	r0, r1, r0, lsl #2
    1084:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
    1088:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
    108c:	02520001 	subseq	r0, r2, #1
    1090:	7a08000b 	bvc	2010c4 <_Min_Heap_Size+0x2008c4>
    1094:	0408000b 	streq	r0, [r8], #-11
    1098:	5201f300 	andpl	pc, r1, #0, 6
    109c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    10a0:	00000000 	andeq	r0, r0, r0
    10a4:	01010000 	mrseq	r0, (UNDEF: 1)
    10a8:	000af000 	andeq	pc, sl, r0
    10ac:	000b0208 	andeq	r0, fp, r8, lsl #4
    10b0:	53000108 	movwpl	r0, #264	; 0x108
    10b4:	08000b02 	stmdaeq	r0, {r1, r8, r9, fp}
    10b8:	08000b7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, fp}
    10bc:	00590001 	subseq	r0, r9, r1
	...
    10c8:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    10cc:	7208000a 	andvc	r0, r8, #10
    10d0:	0208000b 	andeq	r0, r8, #11
    10d4:	72009100 	andvc	r9, r0, #0, 2
    10d8:	7a08000b 	bvc	20110c <_Min_Heap_Size+0x20090c>
    10dc:	0208000b 	andeq	r0, r8, #11
    10e0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    10f0:	02000000 	andeq	r0, r0, #0
    10f4:	00007d00 	andeq	r7, r0, r0, lsl #26
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	02000000 	andeq	r0, r0, #0
    1100:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1118:	01000000 	mrseq	r0, (UNDEF: 0)
    111c:	00005000 	andeq	r5, r0, r0
    1120:	00000000 	andeq	r0, r0, r0
    1124:	00040000 	andeq	r0, r4, r0
    1128:	9f5001f3 	svcls	0x005001f3
	...
    1134:	00500001 	subseq	r0, r0, r1
    1138:	00000000 	andeq	r0, r0, r0
    113c:	04000000 	streq	r0, [r0], #-0
    1140:	5001f300 	andpl	pc, r1, r0, lsl #6
    1144:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1148:	00000000 	andeq	r0, r0, r0
    114c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    115c:	02000000 	andeq	r0, r0, #0
    1160:	009f3000 	addseq	r3, pc, r0
    1164:	00000000 	andeq	r0, r0, r0
    1168:	0b000000 	bleq	1170 <_Min_Heap_Size+0x970>
    116c:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    1170:	2e301a80 	vaddcs.f32	s2, s1, s0
    1174:	9f1aff08 	svcls	0x001aff08
	...
    1180:	00720008 	rsbseq	r0, r2, r8
    1184:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    1188:	00009f1a 	andeq	r9, r0, sl, lsl pc
    118c:	00000000 	andeq	r0, r0, r0
    1190:	000b0000 	andeq	r0, fp, r0
    1194:	80080072 	andhi	r0, r8, r2, ror r0
    1198:	082e301a 	stmdaeq	lr!, {r1, r3, r4, ip, sp}
    119c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    11a0:	00000000 	andeq	r0, r0, r0
    11a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    11a8:	30007200 	andcc	r7, r0, r0, lsl #4
    11ac:	1aff082e 	bne	fffc326c <_estack+0xdffc2034>
    11b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    11c0:	01000000 	mrseq	r0, (UNDEF: 0)
    11c4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    11d4:	00020000 	andeq	r0, r2, r0
    11d8:	0000007d 	andeq	r0, r0, sp, ror r0
    11dc:	00000000 	andeq	r0, r0, r0
    11e0:	00020000 	andeq	r0, r2, r0
    11e4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    11f8:	00010000 	andeq	r0, r1, r0
    11fc:	00000050 	andeq	r0, r0, r0, asr r0
    1200:	00000000 	andeq	r0, r0, r0
    1204:	f3000400 	vshl.u8	d0, d0, d0
    1208:	009f5001 	addseq	r5, pc, r1
	...
    121c:	01000000 	mrseq	r0, (UNDEF: 0)
    1220:	00005000 	andeq	r5, r0, r0
    1224:	00000000 	andeq	r0, r0, r0
    1228:	00010000 	andeq	r0, r1, r0
    122c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    123c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1248:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    124c:	00000008 	andeq	r0, r0, r8
	...
    1260:	01000000 	mrseq	r0, (UNDEF: 0)
    1264:	00005000 	andeq	r5, r0, r0
    1268:	00000000 	andeq	r0, r0, r0
    126c:	00010000 	andeq	r0, r1, r0
    1270:	00000053 	andeq	r0, r0, r3, asr r0
    1274:	00000000 	andeq	r0, r0, r0
    1278:	f3000400 	vshl.u8	d0, d0, d0
    127c:	009f5001 	addseq	r5, pc, r1
	...
    1290:	01000000 	mrseq	r0, (UNDEF: 0)
    1294:	00005000 	andeq	r5, r0, r0
    1298:	00000000 	andeq	r0, r0, r0
    129c:	00010000 	andeq	r0, r1, r0
    12a0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    12b0:	01000000 	mrseq	r0, (UNDEF: 0)
    12b4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    12c0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    12cc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    12d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12d4:	00000000 	andeq	r0, r0, r0
    12d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    12e4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    12e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12ec:	00000000 	andeq	r0, r0, r0
    12f0:	00010000 	andeq	r0, r1, r0
    12f4:	00000000 	andeq	r0, r0, r0
    12f8:	01000000 	mrseq	r0, (UNDEF: 0)
    12fc:	00005300 	andeq	r5, r0, r0, lsl #6
    1300:	00000000 	andeq	r0, r0, r0
    1304:	00010000 	andeq	r0, r1, r0
    1308:	00000100 	andeq	r0, r0, r0, lsl #2
    130c:	00000000 	andeq	r0, r0, r0
    1310:	00030000 	andeq	r0, r3, r0
    1314:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1318:	00000000 	andeq	r0, r0, r0
    131c:	01000000 	mrseq	r0, (UNDEF: 0)
    1320:	00005200 	andeq	r5, r0, r0, lsl #4
    1324:	00000000 	andeq	r0, r0, r0
    1328:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1334:	00530001 	subseq	r0, r3, r1
	...
    1340:	00000001 	andeq	r0, r0, r1
    1344:	00000000 	andeq	r0, r0, r0
    1348:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    135c:	00010000 	andeq	r0, r1, r0
    1360:	00000053 	andeq	r0, r0, r3, asr r0
	...
    136c:	00010000 	andeq	r0, r1, r0
    1370:	00000000 	andeq	r0, r0, r0
    1374:	03000000 	movweq	r0, #0
    1378:	9f147200 	svcls	0x00147200
	...
    1384:	00530001 	subseq	r0, r3, r1
    1388:	00000000 	andeq	r0, r0, r0
    138c:	03000000 	movweq	r0, #0
    1390:	9f147200 	svcls	0x00147200
	...
    139c:	00000100 	andeq	r0, r0, r0, lsl #2
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	00010000 	andeq	r0, r1, r0
    13a8:	00000053 	andeq	r0, r0, r3, asr r0
    13ac:	00000000 	andeq	r0, r0, r0
    13b0:	00000100 	andeq	r0, r0, r0, lsl #2
    13b4:	00000001 	andeq	r0, r0, r1
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	72000300 	andvc	r0, r0, #0, 6
    13c0:	00009f14 	andeq	r9, r0, r4, lsl pc
    13c4:	00000000 	andeq	r0, r0, r0
    13c8:	00010000 	andeq	r0, r1, r0
    13cc:	00000052 	andeq	r0, r0, r2, asr r0
    13d0:	00000000 	andeq	r0, r0, r0
    13d4:	00010100 	andeq	r0, r1, r0, lsl #2
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	01000000 	mrseq	r0, (UNDEF: 0)
    13e0:	00005300 	andeq	r5, r0, r0, lsl #6
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    13f4:	00510001 	subseq	r0, r1, r1
	...
    1408:	53000100 	movwpl	r0, #256	; 0x100
	...
    1418:	00000100 	andeq	r0, r0, r0, lsl #2
    141c:	00000000 	andeq	r0, r0, r0
    1420:	00030000 	andeq	r0, r3, r0
    1424:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1428:	00000000 	andeq	r0, r0, r0
    142c:	01000000 	mrseq	r0, (UNDEF: 0)
    1430:	00005300 	andeq	r5, r0, r0, lsl #6
    1434:	00000000 	andeq	r0, r0, r0
    1438:	00030000 	andeq	r0, r3, r0
    143c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1448:	00000001 	andeq	r0, r0, r1
    144c:	00000000 	andeq	r0, r0, r0
    1450:	53000100 	movwpl	r0, #256	; 0x100
	...
    145c:	01000001 	tsteq	r0, r1
	...
    1468:	14720003 	ldrbtne	r0, [r2], #-3
    146c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1470:	00000000 	andeq	r0, r0, r0
    1474:	52000100 	andpl	r0, r0, #0, 2
	...
    1480:	00000101 	andeq	r0, r0, r1, lsl #2
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00010000 	andeq	r0, r1, r0
    148c:	00000053 	andeq	r0, r0, r3, asr r0
    1490:	00000000 	andeq	r0, r0, r0
    1494:	00010000 	andeq	r0, r1, r0
    1498:	00000000 	andeq	r0, r0, r0
    149c:	01000000 	mrseq	r0, (UNDEF: 0)
    14a0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    14b4:	00530001 	subseq	r0, r3, r1
	...
    14c4:	00000001 	andeq	r0, r0, r1
    14c8:	00000000 	andeq	r0, r0, r0
    14cc:	72000300 	andvc	r0, r0, #0, 6
    14d0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	00010000 	andeq	r0, r1, r0
    14dc:	00000053 	andeq	r0, r0, r3, asr r0
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	72000300 	andvc	r0, r0, #0, 6
    14e8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    14fc:	00530001 	subseq	r0, r3, r1
    1500:	00000000 	andeq	r0, r0, r0
    1504:	01000000 	mrseq	r0, (UNDEF: 0)
    1508:	00010000 	andeq	r0, r1, r0
    150c:	00000000 	andeq	r0, r0, r0
    1510:	03000000 	movweq	r0, #0
    1514:	9f0c7200 	svcls	0x000c7200
	...
    1520:	00520001 	subseq	r0, r2, r1
    1524:	00000000 	andeq	r0, r0, r0
    1528:	01000000 	mrseq	r0, (UNDEF: 0)
    152c:	00000001 	andeq	r0, r0, r1
    1530:	00000000 	andeq	r0, r0, r0
    1534:	53000100 	movwpl	r0, #256	; 0x100
	...
    1540:	00000100 	andeq	r0, r0, r0, lsl #2
    1544:	00000000 	andeq	r0, r0, r0
    1548:	00010000 	andeq	r0, r1, r0
    154c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    155c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1568:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    156c:	00000008 	andeq	r0, r0, r8
	...
    1580:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    158c:	01f30004 	mvnseq	r0, r4
    1590:	00009f50 	andeq	r9, r0, r0, asr pc
    1594:	00000000 	andeq	r0, r0, r0
    1598:	00010000 	andeq	r0, r1, r0
	...
    15a4:	00020000 	andeq	r0, r2, r0
    15a8:	00003870 	andeq	r3, r0, r0, ror r8
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00010000 	andeq	r0, r1, r0
    15b4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    15c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    15d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    15d4:	00000008 	andeq	r0, r0, r8
	...
    15e8:	01000000 	mrseq	r0, (UNDEF: 0)
    15ec:	00005000 	andeq	r5, r0, r0
    15f0:	00000000 	andeq	r0, r0, r0
    15f4:	00010000 	andeq	r0, r1, r0
    15f8:	00000053 	andeq	r0, r0, r3, asr r0
    15fc:	00000000 	andeq	r0, r0, r0
    1600:	f3000400 	vshl.u8	d0, d0, d0
    1604:	009f5001 	addseq	r5, pc, r1
	...
    1618:	01000000 	mrseq	r0, (UNDEF: 0)
    161c:	00005000 	andeq	r5, r0, r0
    1620:	00000000 	andeq	r0, r0, r0
    1624:	00010000 	andeq	r0, r1, r0
    1628:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1638:	01000000 	mrseq	r0, (UNDEF: 0)
    163c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1648:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1654:	14720003 	ldrbtne	r0, [r2], #-3
    1658:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    165c:	00000000 	andeq	r0, r0, r0
    1660:	53000100 	movwpl	r0, #256	; 0x100
	...
    166c:	14720003 	ldrbtne	r0, [r2], #-3
    1670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1674:	00000000 	andeq	r0, r0, r0
    1678:	00010000 	andeq	r0, r1, r0
    167c:	00000000 	andeq	r0, r0, r0
    1680:	01000000 	mrseq	r0, (UNDEF: 0)
    1684:	00005300 	andeq	r5, r0, r0, lsl #6
    1688:	00000000 	andeq	r0, r0, r0
    168c:	00010000 	andeq	r0, r1, r0
    1690:	00000100 	andeq	r0, r0, r0, lsl #2
    1694:	00000000 	andeq	r0, r0, r0
    1698:	00030000 	andeq	r0, r3, r0
    169c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    16a0:	00000000 	andeq	r0, r0, r0
    16a4:	01000000 	mrseq	r0, (UNDEF: 0)
    16a8:	00005200 	andeq	r5, r0, r0, lsl #4
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    16bc:	00530001 	subseq	r0, r3, r1
	...
    16c8:	00000001 	andeq	r0, r0, r1
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    16e4:	00010000 	andeq	r0, r1, r0
    16e8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    16f4:	00010000 	andeq	r0, r1, r0
    16f8:	00000000 	andeq	r0, r0, r0
    16fc:	03000000 	movweq	r0, #0
    1700:	9f0c7200 	svcls	0x000c7200
	...
    170c:	00530001 	subseq	r0, r3, r1
    1710:	00000000 	andeq	r0, r0, r0
    1714:	03000000 	movweq	r0, #0
    1718:	9f0c7200 	svcls	0x000c7200
	...
    1724:	00000100 	andeq	r0, r0, r0, lsl #2
    1728:	00000000 	andeq	r0, r0, r0
    172c:	00010000 	andeq	r0, r1, r0
    1730:	00000053 	andeq	r0, r0, r3, asr r0
    1734:	00000000 	andeq	r0, r0, r0
    1738:	00000100 	andeq	r0, r0, r0, lsl #2
    173c:	00000001 	andeq	r0, r0, r1
    1740:	00000000 	andeq	r0, r0, r0
    1744:	72000300 	andvc	r0, r0, #0, 6
    1748:	00009f0c 	andeq	r9, r0, ip, lsl #30
    174c:	00000000 	andeq	r0, r0, r0
    1750:	00010000 	andeq	r0, r1, r0
    1754:	00000052 	andeq	r0, r0, r2, asr r0
    1758:	00000000 	andeq	r0, r0, r0
    175c:	00010100 	andeq	r0, r1, r0, lsl #2
    1760:	00000000 	andeq	r0, r0, r0
    1764:	01000000 	mrseq	r0, (UNDEF: 0)
    1768:	00005300 	andeq	r5, r0, r0, lsl #6
    176c:	00000000 	andeq	r0, r0, r0
    1770:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    177c:	00510001 	subseq	r0, r1, r1
	...
    1790:	01000000 	mrseq	r0, (UNDEF: 0)
    1794:	00005000 	andeq	r5, r0, r0
    1798:	00000000 	andeq	r0, r0, r0
    179c:	00040000 	andeq	r0, r4, r0
    17a0:	9f5001f3 	svcls	0x005001f3
	...
    17b8:	00500001 	subseq	r0, r0, r1
    17bc:	00000000 	andeq	r0, r0, r0
    17c0:	04000000 	streq	r0, [r0], #-0
    17c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    17c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17cc:	00000000 	andeq	r0, r0, r0
    17d0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    17dc:	30000200 	andcc	r0, r0, r0, lsl #4
    17e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    17f4:	00000002 	andeq	r0, r0, r2
	...
    1800:	9f300002 	svcls	0x00300002
	...
    180c:	00500001 	subseq	r0, r0, r1
	...
    1824:	01000000 	mrseq	r0, (UNDEF: 0)
    1828:	00005000 	andeq	r5, r0, r0
    182c:	00000000 	andeq	r0, r0, r0
    1830:	00040000 	andeq	r0, r4, r0
    1834:	9f5001f3 	svcls	0x005001f3
	...
    1840:	00500001 	subseq	r0, r0, r1
    1844:	00000000 	andeq	r0, r0, r0
    1848:	04000000 	streq	r0, [r0], #-0
    184c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1850:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1854:	00000000 	andeq	r0, r0, r0
    1858:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1868:	30000200 	andcc	r0, r0, r0, lsl #4
    186c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1870:	00000000 	andeq	r0, r0, r0
    1874:	53000100 	movwpl	r0, #256	; 0x100
	...
    1880:	0c720002 	ldcleq	0, cr0, [r2], #-8
	...
    188c:	9f300002 	svcls	0x00300002
	...
    18a8:	00500001 	subseq	r0, r0, r1
    18ac:	00000000 	andeq	r0, r0, r0
    18b0:	04000000 	streq	r0, [r0], #-0
    18b4:	5001f300 	andpl	pc, r1, r0, lsl #6
    18b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    18cc:	01f30004 	mvnseq	r0, r4
    18d0:	00009f50 	andeq	r9, r0, r0, asr pc
    18d4:	00000000 	andeq	r0, r0, r0
    18d8:	00020000 	andeq	r0, r2, r0
	...
    18e8:	00020000 	andeq	r0, r2, r0
    18ec:	00009f30 	andeq	r9, r0, r0, lsr pc
    18f0:	00000000 	andeq	r0, r0, r0
    18f4:	00010000 	andeq	r0, r1, r0
    18f8:	00000053 	andeq	r0, r0, r3, asr r0
    18fc:	00000000 	andeq	r0, r0, r0
    1900:	72000200 	andvc	r0, r0, #0, 4
    1904:	0000000c 	andeq	r0, r0, ip
    1908:	00000000 	andeq	r0, r0, r0
    190c:	30000200 	andcc	r0, r0, r0, lsl #4
    1910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1920:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    192c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1930:	00000008 	andeq	r0, r0, r8
	...
    1944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1950:	00540001 	subseq	r0, r4, r1
	...
    1964:	53000100 	movwpl	r0, #256	; 0x100
	...
    1974:	00000100 	andeq	r0, r0, r0, lsl #2
    1978:	00000000 	andeq	r0, r0, r0
    197c:	00030000 	andeq	r0, r3, r0
    1980:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1984:	00000000 	andeq	r0, r0, r0
    1988:	01000000 	mrseq	r0, (UNDEF: 0)
    198c:	00005300 	andeq	r5, r0, r0, lsl #6
    1990:	00000000 	andeq	r0, r0, r0
    1994:	00030000 	andeq	r0, r3, r0
    1998:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    19a4:	00000001 	andeq	r0, r0, r1
    19a8:	00000000 	andeq	r0, r0, r0
    19ac:	53000100 	movwpl	r0, #256	; 0x100
	...
    19b8:	01000001 	tsteq	r0, r1
	...
    19c4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    19c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    19cc:	00000000 	andeq	r0, r0, r0
    19d0:	52000100 	andpl	r0, r0, #0, 2
	...
    19dc:	00000101 	andeq	r0, r0, r1, lsl #2
    19e0:	00000000 	andeq	r0, r0, r0
    19e4:	00010000 	andeq	r0, r1, r0
    19e8:	00000053 	andeq	r0, r0, r3, asr r0
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	00010000 	andeq	r0, r1, r0
    19f4:	00000000 	andeq	r0, r0, r0
    19f8:	01000000 	mrseq	r0, (UNDEF: 0)
    19fc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1a0c:	00020000 	andeq	r0, r2, r0
    1a10:	0000007d 	andeq	r0, r0, sp, ror r0
    1a14:	00000000 	andeq	r0, r0, r0
    1a18:	00020000 	andeq	r0, r2, r0
    1a1c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1a30:	00010000 	andeq	r0, r1, r0
    1a34:	00000050 	andeq	r0, r0, r0, asr r0
    1a38:	00000000 	andeq	r0, r0, r0
    1a3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    1a50:	00010000 	andeq	r0, r1, r0
    1a54:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1a60:	00010000 	andeq	r0, r1, r0
    1a64:	00000000 	andeq	r0, r0, r0
    1a68:	03000000 	movweq	r0, #0
    1a6c:	9f0c7200 	svcls	0x000c7200
	...
    1a78:	00530001 	subseq	r0, r3, r1
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	03000000 	movweq	r0, #0
    1a84:	9f0c7200 	svcls	0x000c7200
	...
    1a90:	00000100 	andeq	r0, r0, r0, lsl #2
    1a94:	00000000 	andeq	r0, r0, r0
    1a98:	00010000 	andeq	r0, r1, r0
    1a9c:	00000053 	andeq	r0, r0, r3, asr r0
    1aa0:	00000000 	andeq	r0, r0, r0
    1aa4:	00000100 	andeq	r0, r0, r0, lsl #2
    1aa8:	00000001 	andeq	r0, r0, r1
    1aac:	00000000 	andeq	r0, r0, r0
    1ab0:	72000300 	andvc	r0, r0, #0, 6
    1ab4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1ab8:	00000000 	andeq	r0, r0, r0
    1abc:	00010000 	andeq	r0, r1, r0
    1ac0:	00000052 	andeq	r0, r0, r2, asr r0
    1ac4:	00000000 	andeq	r0, r0, r0
    1ac8:	00010100 	andeq	r0, r1, r0, lsl #2
    1acc:	00000000 	andeq	r0, r0, r0
    1ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ad4:	00005300 	andeq	r5, r0, r0, lsl #6
    1ad8:	00000000 	andeq	r0, r0, r0
    1adc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1ae8:	00510001 	subseq	r0, r1, r1
	...
    1af8:	02000000 	andeq	r0, r0, #0
    1afc:	00007d00 	andeq	r7, r0, r0, lsl #26
    1b00:	00000000 	andeq	r0, r0, r0
    1b04:	02000000 	andeq	r0, r0, #0
    1b08:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1b1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b20:	00005000 	andeq	r5, r0, r0
    1b24:	00000000 	andeq	r0, r0, r0
    1b28:	00010000 	andeq	r0, r1, r0
    1b2c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b40:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1b4c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1b58:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1b5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	53000100 	movwpl	r0, #256	; 0x100
	...
    1b70:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1b74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b78:	00000000 	andeq	r0, r0, r0
    1b7c:	00010000 	andeq	r0, r1, r0
    1b80:	00000000 	andeq	r0, r0, r0
    1b84:	01000000 	mrseq	r0, (UNDEF: 0)
    1b88:	00005300 	andeq	r5, r0, r0, lsl #6
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	00010000 	andeq	r0, r1, r0
    1b94:	00000100 	andeq	r0, r0, r0, lsl #2
    1b98:	00000000 	andeq	r0, r0, r0
    1b9c:	00030000 	andeq	r0, r3, r0
    1ba0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1ba4:	00000000 	andeq	r0, r0, r0
    1ba8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bac:	00005200 	andeq	r5, r0, r0, lsl #4
    1bb0:	00000000 	andeq	r0, r0, r0
    1bb4:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1bc0:	00530001 	subseq	r0, r3, r1
	...
    1bcc:	00000001 	andeq	r0, r0, r1
    1bd0:	00000000 	andeq	r0, r0, r0
    1bd4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1be0:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
    1be4:	08000e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp}
    1be8:	007d0002 	rsbseq	r0, sp, r2
    1bec:	08000e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp}
    1bf0:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    1bf4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    1bf8:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    1bfc:	08000ede 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, sl, fp}
    1c00:	187d0002 	ldmdane	sp!, {r1}^
    1c04:	08000ede 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, sl, fp}
    1c08:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}
    1c0c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    1c10:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}
    1c14:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
    1c18:	187d0002 	ldmdane	sp!, {r1}^
	...
    1c28:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
    1c2c:	08000e98 	stmdaeq	r0, {r3, r4, r7, r9, sl, fp}
    1c30:	98500001 	ldmdals	r0, {r0}^
    1c34:	1408000e 	strne	r0, [r8], #-14
    1c38:	01080011 	tsteq	r8, r1, lsl r0
    1c3c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    1c54:	08000e96 	stmdaeq	r0, {r1, r2, r4, r7, r9, sl, fp}
    1c58:	08000edc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, fp}
    1c5c:	e0530001 	subs	r0, r3, r1
    1c60:	e508000e 	str	r0, [r8, #-14]
    1c64:	0108000e 	tsteq	r8, lr
    1c68:	0ee85300 	cdpeq	3, 14, cr5, cr8, cr0, {0}
    1c6c:	0f440800 	svceq	0x00440800
    1c70:	00010800 	andeq	r0, r1, r0, lsl #16
    1c74:	000f9853 	andeq	r9, pc, r3, asr r8	; <UNPREDICTABLE>
    1c78:	000f9d08 	andeq	r9, pc, r8, lsl #26
    1c7c:	53000108 	movwpl	r0, #264	; 0x108
    1c80:	08000fbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, fp}
    1c84:	08000fce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
    1c88:	00530001 	subseq	r0, r3, r1
    1c8c:	05080011 	streq	r0, [r8, #-17]	; 0xffffffef
    1c90:	01080011 	tsteq	r8, r1, lsl r0
    1c94:	11085300 	mrsne	r5, (UNDEF: 56)
    1c98:	110d0800 	tstne	sp, r0, lsl #16
    1c9c:	00010800 	andeq	r0, r1, r0, lsl #16
    1ca0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1cb8:	000e9800 	andeq	r9, lr, r0, lsl #16
    1cbc:	000edc08 	andeq	sp, lr, r8, lsl #24
    1cc0:	50000108 	andpl	r0, r0, r8, lsl #2
    1cc4:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}
    1cc8:	08000ee2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, fp}
    1ccc:	e8500001 	ldmda	r0, {r0}^
    1cd0:	4408000e 	strmi	r0, [r8], #-14
    1cd4:	0108000f 	tsteq	r8, pc
    1cd8:	0f985000 	svceq	0x00985000
    1cdc:	0f9a0800 	svceq	0x009a0800
    1ce0:	00010800 	andeq	r0, r1, r0, lsl #16
    1ce4:	000fbc50 	andeq	fp, pc, r0, asr ip	; <UNPREDICTABLE>
    1ce8:	00106e08 	andseq	r6, r0, r8, lsl #28
    1cec:	50000108 	andpl	r0, r0, r8, lsl #2
    1cf0:	08001088 	stmdaeq	r0, {r3, r7, ip}
    1cf4:	080010a2 	stmdaeq	r0, {r1, r5, r7, ip}
    1cf8:	00500001 	subseq	r0, r0, r1
    1cfc:	02080011 	andeq	r0, r8, #17
    1d00:	01080011 	tsteq	r8, r1, lsl r0
    1d04:	11085000 	mrsne	r5, (UNDEF: 8)
    1d08:	110a0800 	tstne	sl, r0, lsl #16
    1d0c:	00010800 	andeq	r0, r1, r0, lsl #16
    1d10:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1d1c:	000e9a00 	andeq	r9, lr, r0, lsl #20
    1d20:	000eb208 	andeq	fp, lr, r8, lsl #4
    1d24:	51000108 	tstpl	r0, r8, lsl #2
    1d28:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}
    1d2c:	08000ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp}
    1d30:	00510001 	subseq	r0, r1, r1
    1d34:	00000000 	andeq	r0, r0, r0
    1d38:	01000000 	mrseq	r0, (UNDEF: 0)
    1d3c:	00000303 	andeq	r0, r0, r3, lsl #6
    1d40:	000e9a00 	andeq	r9, lr, r0, lsl #20
    1d44:	000e9a08 	andeq	r9, lr, r8, lsl #20
    1d48:	30000208 	andcc	r0, r0, r8, lsl #4
    1d4c:	000e9a9f 	muleq	lr, pc, sl	; <UNPREDICTABLE>
    1d50:	000e9e08 	andeq	r9, lr, r8, lsl #28
    1d54:	73000508 	movwvc	r0, #1288	; 0x508
    1d58:	9f1a3f00 	svcls	0x001a3f00
    1d5c:	08000e9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl, fp}
    1d60:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
    1d64:	00550001 	subseq	r0, r5, r1
    1d68:	00000000 	andeq	r0, r0, r0
    1d6c:	02000000 	andeq	r0, r0, #0
	...
    1d78:	9a000000 	bls	1d80 <_Min_Heap_Size+0x1580>
    1d7c:	dc08000e 	stcle	0, cr0, [r8], {14}
    1d80:	0208000e 	andeq	r0, r8, #14
    1d84:	e09f3000 	adds	r3, pc, r0
    1d88:	4c08000e 	stcmi	0, cr0, [r8], {14}
    1d8c:	0208000f 	andeq	r0, r8, #15
    1d90:	4c9f3000 	ldcmi	0, cr3, [pc], {0}
    1d94:	5b08000f 	blpl	201dd8 <_Min_Heap_Size+0x2015d8>
    1d98:	0808000f 	stmdaeq	r8, {r0, r1, r2, r3}
    1d9c:	30007300 	andcc	r7, r0, r0, lsl #6
    1da0:	1aff082e 	bne	fffc3e60 <_estack+0xdffc2c28>
    1da4:	000f989f 	muleq	pc, pc, r8	; <UNPREDICTABLE>
    1da8:	000fa008 	andeq	sl, pc, r8
    1dac:	30000208 	andcc	r0, r0, r8, lsl #4
    1db0:	000fb09f 	muleq	pc, pc, r0	; <UNPREDICTABLE>
    1db4:	000fb508 	andeq	fp, pc, r8, lsl #10
    1db8:	73000808 	movwvc	r0, #2056	; 0x808
    1dbc:	082e3000 	stmdaeq	lr!, {ip, sp}
    1dc0:	bc9f1aff 	vldmialt	pc, {s2-s256}
    1dc4:	1408000f 	strne	r0, [r8], #-15
    1dc8:	02080011 	andeq	r0, r8, #17
    1dcc:	009f3000 	addseq	r3, pc, r0
	...
    1dd8:	000f7400 	andeq	r7, pc, r0, lsl #8
    1ddc:	000f8008 	andeq	r8, pc, r8
    1de0:	53000108 	movwpl	r0, #264	; 0x108
	...
    1df0:	0f680100 	svceq	0x00680100
    1df4:	0f6c0800 	svceq	0x006c0800
    1df8:	00030800 	andeq	r0, r3, r0, lsl #16
    1dfc:	6c9f1472 	cfldrsvs	mvf1, [pc], {114}	; 0x72
    1e00:	7008000f 	andvc	r0, r8, pc
    1e04:	0108000f 	tsteq	r8, pc
    1e08:	0f705300 	svceq	0x00705300
    1e0c:	0f700800 	svceq	0x00700800
    1e10:	00030800 	andeq	r0, r3, r0, lsl #16
    1e14:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1e20:	000f7001 	andeq	r7, pc, r1
    1e24:	000f7008 	andeq	r7, pc, r8
    1e28:	53000108 	movwpl	r0, #264	; 0x108
	...
    1e34:	01000001 	tsteq	r0, r1
    1e38:	08000f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp}
    1e3c:	08000f76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, fp}
    1e40:	14720003 	ldrbtne	r0, [r2], #-3
    1e44:	000f769f 	muleq	pc, pc, r6	; <UNPREDICTABLE>
    1e48:	000f7a08 	andeq	r7, pc, r8, lsl #20
    1e4c:	52000108 	andpl	r0, r0, #8, 2
	...
    1e58:	0f740101 	svceq	0x00740101
    1e5c:	0f7a0800 	svceq	0x007a0800
    1e60:	00010800 	andeq	r0, r1, r0, lsl #16
    1e64:	00000053 	andeq	r0, r0, r3, asr r0
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	7a010000 	bvc	41e74 <_Min_Heap_Size+0x41674>
    1e70:	7a08000f 	bvc	201eb4 <_Min_Heap_Size+0x2016b4>
    1e74:	0108000f 	tsteq	r8, pc
    1e78:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1e84:	0fea0000 	svceq	0x00ea0000
    1e88:	0ffc0800 	svceq	0x00fc0800
    1e8c:	00010800 	andeq	r0, r1, r0, lsl #16
    1e90:	000ffc53 	andeq	pc, pc, r3, asr ip	; <UNPREDICTABLE>
    1e94:	00105008 	andseq	r5, r0, r8
    1e98:	74000208 	strvc	r0, [r0], #-520	; 0xfffffdf8
    1e9c:	0000002e 	andeq	r0, r0, lr, lsr #32
    1ea0:	00000000 	andeq	r0, r0, r0
    1ea4:	10000000 	andne	r0, r0, r0
    1ea8:	1a080010 	bne	201ef0 <_Min_Heap_Size+0x2016f0>
    1eac:	01080010 	tsteq	r8, r0, lsl r0
    1eb0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1ebc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ec0:	08001004 	stmdaeq	r0, {r2, ip}
    1ec4:	08001008 	stmdaeq	r0, {r3, ip}
    1ec8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1ecc:	0010089f 	mulseq	r0, pc, r8	; <UNPREDICTABLE>
    1ed0:	00100c08 	andseq	r0, r0, r8, lsl #24
    1ed4:	53000108 	movwpl	r0, #264	; 0x108
    1ed8:	0800100c 	stmdaeq	r0, {r2, r3, ip}
    1edc:	0800100c 	stmdaeq	r0, {r2, r3, ip}
    1ee0:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1ee4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ee8:	00000000 	andeq	r0, r0, r0
    1eec:	0c010000 	stceq	0, cr0, [r1], {-0}
    1ef0:	0c080010 	stceq	0, cr0, [r8], {16}
    1ef4:	01080010 	tsteq	r8, r0, lsl r0
    1ef8:	00005300 	andeq	r5, r0, r0, lsl #6
    1efc:	00000000 	andeq	r0, r0, r0
    1f00:	00010000 	andeq	r0, r1, r0
    1f04:	10100100 	andsne	r0, r0, r0, lsl #2
    1f08:	10120800 	andsne	r0, r2, r0, lsl #16
    1f0c:	00030800 	andeq	r0, r3, r0, lsl #16
    1f10:	129f0c72 	addsne	r0, pc, #29184	; 0x7200
    1f14:	16080010 			; <UNDEFINED> instruction: 0x16080010
    1f18:	01080010 	tsteq	r8, r0, lsl r0
    1f1c:	00005200 	andeq	r5, r0, r0, lsl #4
    1f20:	00000000 	andeq	r0, r0, r0
    1f24:	01010000 	mrseq	r0, (UNDEF: 1)
    1f28:	08001010 	stmdaeq	r0, {r4, ip}
    1f2c:	08001016 	stmdaeq	r0, {r1, r2, r4, ip}
    1f30:	00530001 	subseq	r0, r3, r1
	...
    1f3c:	00101601 	andseq	r1, r0, r1, lsl #12
    1f40:	00101608 	andseq	r1, r0, r8, lsl #12
    1f44:	51000108 	tstpl	r0, r8, lsl #2
	...
    1f50:	10280000 	eorne	r0, r8, r0
    1f54:	10320800 	eorsne	r0, r2, r0, lsl #16
    1f58:	00010800 	andeq	r0, r1, r0, lsl #16
    1f5c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1f68:	1c010000 	stcne	0, cr0, [r1], {-0}
    1f6c:	20080010 	andcs	r0, r8, r0, lsl r0
    1f70:	03080010 	movweq	r0, #32784	; 0x8010
    1f74:	9f147200 	svcls	0x00147200
    1f78:	08001020 	stmdaeq	r0, {r5, ip}
    1f7c:	08001024 	stmdaeq	r0, {r2, r5, ip}
    1f80:	24530001 	ldrbcs	r0, [r3], #-1
    1f84:	24080010 	strcs	r0, [r8], #-16
    1f88:	03080010 	movweq	r0, #32784	; 0x8010
    1f8c:	9f147200 	svcls	0x00147200
	...
    1f98:	10240100 	eorne	r0, r4, r0, lsl #2
    1f9c:	10240800 	eorne	r0, r4, r0, lsl #16
    1fa0:	00010800 	andeq	r0, r1, r0, lsl #16
    1fa4:	00000053 	andeq	r0, r0, r3, asr r0
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	00000100 	andeq	r0, r0, r0, lsl #2
    1fb0:	00102801 	andseq	r2, r0, r1, lsl #16
    1fb4:	00102a08 	andseq	r2, r0, r8, lsl #20
    1fb8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    1fbc:	102a9f14 	eorne	r9, sl, r4, lsl pc
    1fc0:	102e0800 	eorne	r0, lr, r0, lsl #16
    1fc4:	00010800 	andeq	r0, r1, r0, lsl #16
    1fc8:	00000052 	andeq	r0, r0, r2, asr r0
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	28010100 	stmdacs	r1, {r8}
    1fd4:	2e080010 	mcrcs	0, 0, r0, cr8, cr0, {0}
    1fd8:	01080010 	tsteq	r8, r0, lsl r0
    1fdc:	00005300 	andeq	r5, r0, r0, lsl #6
    1fe0:	00000000 	andeq	r0, r0, r0
    1fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fe8:	0800102e 	stmdaeq	r0, {r1, r2, r3, r5, ip}
    1fec:	0800102e 	stmdaeq	r0, {r1, r2, r3, r5, ip}
    1ff0:	00510001 	subseq	r0, r1, r1
	...
    1ffc:	00104000 	andseq	r4, r0, r0
    2000:	00104c08 	andseq	r4, r0, r8, lsl #24
    2004:	53000108 	movwpl	r0, #264	; 0x108
	...
    2014:	10340100 	eorsne	r0, r4, r0, lsl #2
    2018:	10380800 	eorsne	r0, r8, r0, lsl #16
    201c:	00030800 	andeq	r0, r3, r0, lsl #16
    2020:	389f1472 	ldmcc	pc, {r1, r4, r5, r6, sl, ip}	; <UNPREDICTABLE>
    2024:	3c080010 	stccc	0, cr0, [r8], {16}
    2028:	01080010 	tsteq	r8, r0, lsl r0
    202c:	103c5300 	eorsne	r5, ip, r0, lsl #6
    2030:	103c0800 	eorsne	r0, ip, r0, lsl #16
    2034:	00030800 	andeq	r0, r3, r0, lsl #16
    2038:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2044:	00103c01 	andseq	r3, r0, r1, lsl #24
    2048:	00103c08 	andseq	r3, r0, r8, lsl #24
    204c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2058:	01000001 	tsteq	r0, r1
    205c:	08001040 	stmdaeq	r0, {r6, ip}
    2060:	08001042 	stmdaeq	r0, {r1, r6, ip}
    2064:	14720003 	ldrbtne	r0, [r2], #-3
    2068:	0010429f 	mulseq	r0, pc, r2	; <UNPREDICTABLE>
    206c:	00104608 	andseq	r4, r0, r8, lsl #12
    2070:	52000108 	andpl	r0, r0, #8, 2
	...
    207c:	10400101 	subne	r0, r0, r1, lsl #2
    2080:	10460800 	subne	r0, r6, r0, lsl #16
    2084:	00010800 	andeq	r0, r1, r0, lsl #16
    2088:	00000053 	andeq	r0, r0, r3, asr r0
    208c:	00000000 	andeq	r0, r0, r0
    2090:	46010000 	strmi	r0, [r1], -r0
    2094:	46080010 			; <UNDEFINED> instruction: 0x46080010
    2098:	01080010 	tsteq	r8, r0, lsl r0
    209c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    20a8:	08001062 	stmdaeq	r0, {r1, r5, r6, ip}
    20ac:	08001071 	stmdaeq	r0, {r0, r4, r5, r6, ip}
    20b0:	00530001 	subseq	r0, r3, r1
	...
    20c0:	00105601 	andseq	r5, r0, r1, lsl #12
    20c4:	00105a08 	andseq	r5, r0, r8, lsl #20
    20c8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    20cc:	105a9f0c 	subsne	r9, sl, ip, lsl #30
    20d0:	105e0800 	subsne	r0, lr, r0, lsl #16
    20d4:	00010800 	andeq	r0, r1, r0, lsl #16
    20d8:	00105e53 	andseq	r5, r0, r3, asr lr
    20dc:	00105e08 	andseq	r5, r0, r8, lsl #28
    20e0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    20e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    20e8:	00000000 	andeq	r0, r0, r0
    20ec:	01000000 	mrseq	r0, (UNDEF: 0)
    20f0:	0800105e 	stmdaeq	r0, {r1, r2, r3, r4, r6, ip}
    20f4:	0800105e 	stmdaeq	r0, {r1, r2, r3, r4, r6, ip}
    20f8:	00530001 	subseq	r0, r3, r1
    20fc:	00000000 	andeq	r0, r0, r0
    2100:	01000000 	mrseq	r0, (UNDEF: 0)
    2104:	62010000 	andvs	r0, r1, #0
    2108:	64080010 	strvs	r0, [r8], #-16
    210c:	03080010 	movweq	r0, #32784	; 0x8010
    2110:	9f0c7200 	svcls	0x000c7200
    2114:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
    2118:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
    211c:	00520001 	subseq	r0, r2, r1
    2120:	00000000 	andeq	r0, r0, r0
    2124:	01000000 	mrseq	r0, (UNDEF: 0)
    2128:	00106201 	andseq	r6, r0, r1, lsl #4
    212c:	00106808 	andseq	r6, r0, r8, lsl #16
    2130:	53000108 	movwpl	r0, #264	; 0x108
	...
    213c:	10680100 	rsbne	r0, r8, r0, lsl #2
    2140:	10680800 	rsbne	r0, r8, r0, lsl #16
    2144:	00010800 	andeq	r0, r1, r0, lsl #16
    2148:	00000051 	andeq	r0, r0, r1, asr r0
    214c:	00000000 	andeq	r0, r0, r0
    2150:	92000000 	andls	r0, r0, #0
    2154:	fd080010 	stc2	0, cr0, [r8, #-64]	; 0xffffffc0
    2158:	01080010 	tsteq	r8, r0, lsl r0
    215c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2168:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
    216c:	080010ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, ip}
    2170:	00530001 	subseq	r0, r3, r1
	...
    2180:	0010a401 	andseq	sl, r0, r1, lsl #8
    2184:	0010a808 	andseq	sl, r0, r8, lsl #16
    2188:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    218c:	10a89f0c 	adcne	r9, r8, ip, lsl #30
    2190:	10ac0800 	adcne	r0, ip, r0, lsl #16
    2194:	00010800 	andeq	r0, r1, r0, lsl #16
    2198:	0010ac53 	andseq	sl, r0, r3, asr ip
    219c:	0010ac08 	andseq	sl, r0, r8, lsl #24
    21a0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    21a4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    21a8:	00000000 	andeq	r0, r0, r0
    21ac:	01000000 	mrseq	r0, (UNDEF: 0)
    21b0:	080010ac 	stmdaeq	r0, {r2, r3, r5, r7, ip}
    21b4:	080010ac 	stmdaeq	r0, {r2, r3, r5, r7, ip}
    21b8:	00530001 	subseq	r0, r3, r1
    21bc:	00000000 	andeq	r0, r0, r0
    21c0:	01000000 	mrseq	r0, (UNDEF: 0)
    21c4:	b0010000 	andlt	r0, r1, r0
    21c8:	b2080010 	andlt	r0, r8, #16
    21cc:	03080010 	movweq	r0, #32784	; 0x8010
    21d0:	9f0c7200 	svcls	0x000c7200
    21d4:	080010b2 	stmdaeq	r0, {r1, r4, r5, r7, ip}
    21d8:	080010b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, ip}
    21dc:	00520001 	subseq	r0, r2, r1
    21e0:	00000000 	andeq	r0, r0, r0
    21e4:	01000000 	mrseq	r0, (UNDEF: 0)
    21e8:	0010b001 	andseq	fp, r0, r1
    21ec:	0010b608 	andseq	fp, r0, r8, lsl #12
    21f0:	53000108 	movwpl	r0, #264	; 0x108
	...
    21fc:	10b60100 	adcsne	r0, r6, r0, lsl #2
    2200:	10b60800 	adcsne	r0, r6, r0, lsl #16
    2204:	00010800 	andeq	r0, r1, r0, lsl #16
    2208:	00000050 	andeq	r0, r0, r0, asr r0
    220c:	00000000 	andeq	r0, r0, r0
    2210:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    2214:	d4080010 	strle	r0, [r8], #-16
    2218:	01080010 	tsteq	r8, r0, lsl r0
    221c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2228:	01000000 	mrseq	r0, (UNDEF: 0)
    222c:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
    2230:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    2234:	14720003 	ldrbtne	r0, [r2], #-3
    2238:	0010c09f 	mulseq	r0, pc, r0	; <UNPREDICTABLE>
    223c:	0010c408 	andseq	ip, r0, r8, lsl #8
    2240:	53000108 	movwpl	r0, #264	; 0x108
    2244:	080010c4 	stmdaeq	r0, {r2, r6, r7, ip}
    2248:	080010c4 	stmdaeq	r0, {r2, r6, r7, ip}
    224c:	14720003 	ldrbtne	r0, [r2], #-3
    2250:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2254:	00000000 	andeq	r0, r0, r0
    2258:	c4010000 	strgt	r0, [r1], #-0
    225c:	c4080010 	strgt	r0, [r8], #-16
    2260:	01080010 	tsteq	r8, r0, lsl r0
    2264:	00005300 	andeq	r5, r0, r0, lsl #6
    2268:	00000000 	andeq	r0, r0, r0
    226c:	00010000 	andeq	r0, r1, r0
    2270:	10c80100 	sbcne	r0, r8, r0, lsl #2
    2274:	10ca0800 	sbcne	r0, sl, r0, lsl #16
    2278:	00030800 	andeq	r0, r3, r0, lsl #16
    227c:	ca9f1472 	bgt	fe7c744c <_estack+0xde7c6214>
    2280:	ce080010 	mcrgt	0, 0, r0, cr8, cr0, {0}
    2284:	01080010 	tsteq	r8, r0, lsl r0
    2288:	00005200 	andeq	r5, r0, r0, lsl #4
    228c:	00000000 	andeq	r0, r0, r0
    2290:	01010000 	mrseq	r0, (UNDEF: 1)
    2294:	080010c8 	stmdaeq	r0, {r3, r6, r7, ip}
    2298:	080010ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, ip}
    229c:	00530001 	subseq	r0, r3, r1
	...
    22a8:	0010ce01 	andseq	ip, r0, r1, lsl #28
    22ac:	0010ce08 	andseq	ip, r0, r8, lsl #28
    22b0:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    22bc:	10ea0000 	rscne	r0, sl, r0
    22c0:	10f60800 	rscsne	r0, r6, r0, lsl #16
    22c4:	00010800 	andeq	r0, r1, r0, lsl #16
    22c8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    22d4:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    22d8:	e2080010 	and	r0, r8, #16
    22dc:	03080010 	movweq	r0, #32784	; 0x8010
    22e0:	9f0c7200 	svcls	0x000c7200
    22e4:	080010e2 	stmdaeq	r0, {r1, r5, r6, r7, ip}
    22e8:	080010e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, ip}
    22ec:	e6530001 	ldrb	r0, [r3], -r1
    22f0:	e6080010 			; <UNDEFINED> instruction: 0xe6080010
    22f4:	03080010 	movweq	r0, #32784	; 0x8010
    22f8:	9f0c7200 	svcls	0x000c7200
	...
    2304:	10e60100 	rscne	r0, r6, r0, lsl #2
    2308:	10e60800 	rscne	r0, r6, r0, lsl #16
    230c:	00010800 	andeq	r0, r1, r0, lsl #16
    2310:	00000053 	andeq	r0, r0, r3, asr r0
    2314:	00000000 	andeq	r0, r0, r0
    2318:	00000100 	andeq	r0, r0, r0, lsl #2
    231c:	0010ea01 	andseq	lr, r0, r1, lsl #20
    2320:	0010ec08 	andseq	lr, r0, r8, lsl #24
    2324:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2328:	10ec9f0c 	rscne	r9, ip, ip, lsl #30
    232c:	10f00800 	rscsne	r0, r0, r0, lsl #16
    2330:	00010800 	andeq	r0, r1, r0, lsl #16
    2334:	00000052 	andeq	r0, r0, r2, asr r0
    2338:	00000000 	andeq	r0, r0, r0
    233c:	ea010100 	b	42744 <_Min_Heap_Size+0x41f44>
    2340:	f0080010 			; <UNDEFINED> instruction: 0xf0080010
    2344:	01080010 	tsteq	r8, r0, lsl r0
    2348:	00005300 	andeq	r5, r0, r0, lsl #6
    234c:	00000000 	andeq	r0, r0, r0
    2350:	01000000 	mrseq	r0, (UNDEF: 0)
    2354:	080010f0 	stmdaeq	r0, {r4, r5, r6, r7, ip}
    2358:	080010f0 	stmdaeq	r0, {r4, r5, r6, r7, ip}
    235c:	00500001 	subseq	r0, r0, r1
	...
    236c:	02000000 	andeq	r0, r0, #0
    2370:	00007d00 	andeq	r7, r0, r0, lsl #26
    2374:	00000000 	andeq	r0, r0, r0
    2378:	02000000 	andeq	r0, r0, #0
    237c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    239c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    23a8:	00540001 	subseq	r0, r4, r1
    23ac:	00000000 	andeq	r0, r0, r0
    23b0:	01000000 	mrseq	r0, (UNDEF: 0)
    23b4:	00005000 	andeq	r5, r0, r0
    23b8:	00000000 	andeq	r0, r0, r0
    23bc:	00010000 	andeq	r0, r1, r0
    23c0:	00000054 	andeq	r0, r0, r4, asr r0
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    23d4:	00540001 	subseq	r0, r4, r1
    23d8:	00000000 	andeq	r0, r0, r0
    23dc:	04000000 	streq	r0, [r0], #-0
    23e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    23e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    23f4:	01000000 	mrseq	r0, (UNDEF: 0)
    23f8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2404:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2410:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2414:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2418:	00000000 	andeq	r0, r0, r0
    241c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2428:	0c720003 	ldcleq	0, cr0, [r2], #-12
    242c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2430:	00000000 	andeq	r0, r0, r0
    2434:	00010000 	andeq	r0, r1, r0
    2438:	00000000 	andeq	r0, r0, r0
    243c:	01000000 	mrseq	r0, (UNDEF: 0)
    2440:	00005300 	andeq	r5, r0, r0, lsl #6
    2444:	00000000 	andeq	r0, r0, r0
    2448:	00010000 	andeq	r0, r1, r0
    244c:	00000100 	andeq	r0, r0, r0, lsl #2
    2450:	00000000 	andeq	r0, r0, r0
    2454:	00030000 	andeq	r0, r3, r0
    2458:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    245c:	00000000 	andeq	r0, r0, r0
    2460:	01000000 	mrseq	r0, (UNDEF: 0)
    2464:	00005200 	andeq	r5, r0, r0, lsl #4
    2468:	00000000 	andeq	r0, r0, r0
    246c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2478:	00530001 	subseq	r0, r3, r1
	...
    2484:	00000001 	andeq	r0, r0, r1
    2488:	00000000 	andeq	r0, r0, r0
    248c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    24a0:	00010000 	andeq	r0, r1, r0
    24a4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    24b0:	00010000 	andeq	r0, r1, r0
    24b4:	00000000 	andeq	r0, r0, r0
    24b8:	03000000 	movweq	r0, #0
    24bc:	9f147200 	svcls	0x00147200
	...
    24c8:	00530001 	subseq	r0, r3, r1
    24cc:	00000000 	andeq	r0, r0, r0
    24d0:	03000000 	movweq	r0, #0
    24d4:	9f147200 	svcls	0x00147200
	...
    24e0:	00000100 	andeq	r0, r0, r0, lsl #2
    24e4:	00000000 	andeq	r0, r0, r0
    24e8:	00010000 	andeq	r0, r1, r0
    24ec:	00000053 	andeq	r0, r0, r3, asr r0
    24f0:	00000000 	andeq	r0, r0, r0
    24f4:	00000100 	andeq	r0, r0, r0, lsl #2
    24f8:	00000001 	andeq	r0, r0, r1
    24fc:	00000000 	andeq	r0, r0, r0
    2500:	72000300 	andvc	r0, r0, #0, 6
    2504:	00009f14 	andeq	r9, r0, r4, lsl pc
    2508:	00000000 	andeq	r0, r0, r0
    250c:	00010000 	andeq	r0, r1, r0
    2510:	00000052 	andeq	r0, r0, r2, asr r0
    2514:	00000000 	andeq	r0, r0, r0
    2518:	00010100 	andeq	r0, r1, r0, lsl #2
    251c:	00000000 	andeq	r0, r0, r0
    2520:	01000000 	mrseq	r0, (UNDEF: 0)
    2524:	00005300 	andeq	r5, r0, r0, lsl #6
    2528:	00000000 	andeq	r0, r0, r0
    252c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2538:	00510001 	subseq	r0, r1, r1
	...
    254c:	53000100 	movwpl	r0, #256	; 0x100
	...
    255c:	00000100 	andeq	r0, r0, r0, lsl #2
    2560:	00000000 	andeq	r0, r0, r0
    2564:	00030000 	andeq	r0, r3, r0
    2568:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    256c:	00000000 	andeq	r0, r0, r0
    2570:	01000000 	mrseq	r0, (UNDEF: 0)
    2574:	00005300 	andeq	r5, r0, r0, lsl #6
    2578:	00000000 	andeq	r0, r0, r0
    257c:	00030000 	andeq	r0, r3, r0
    2580:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    258c:	00000001 	andeq	r0, r0, r1
    2590:	00000000 	andeq	r0, r0, r0
    2594:	53000100 	movwpl	r0, #256	; 0x100
	...
    25a0:	01000001 	tsteq	r0, r1
	...
    25ac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    25b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25b4:	00000000 	andeq	r0, r0, r0
    25b8:	52000100 	andpl	r0, r0, #0, 2
	...
    25c4:	00000101 	andeq	r0, r0, r1, lsl #2
    25c8:	00000000 	andeq	r0, r0, r0
    25cc:	00010000 	andeq	r0, r1, r0
    25d0:	00000053 	andeq	r0, r0, r3, asr r0
    25d4:	00000000 	andeq	r0, r0, r0
    25d8:	00010000 	andeq	r0, r1, r0
    25dc:	00000000 	andeq	r0, r0, r0
    25e0:	01000000 	mrseq	r0, (UNDEF: 0)
    25e4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    25f8:	00530001 	subseq	r0, r3, r1
	...
    2608:	00000001 	andeq	r0, r0, r1
    260c:	00000000 	andeq	r0, r0, r0
    2610:	72000300 	andvc	r0, r0, #0, 6
    2614:	00009f14 	andeq	r9, r0, r4, lsl pc
    2618:	00000000 	andeq	r0, r0, r0
    261c:	00010000 	andeq	r0, r1, r0
    2620:	00000053 	andeq	r0, r0, r3, asr r0
    2624:	00000000 	andeq	r0, r0, r0
    2628:	72000300 	andvc	r0, r0, #0, 6
    262c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2630:	00000000 	andeq	r0, r0, r0
    2634:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2640:	00530001 	subseq	r0, r3, r1
    2644:	00000000 	andeq	r0, r0, r0
    2648:	01000000 	mrseq	r0, (UNDEF: 0)
    264c:	00010000 	andeq	r0, r1, r0
    2650:	00000000 	andeq	r0, r0, r0
    2654:	03000000 	movweq	r0, #0
    2658:	9f147200 	svcls	0x00147200
	...
    2664:	00520001 	subseq	r0, r2, r1
    2668:	00000000 	andeq	r0, r0, r0
    266c:	01000000 	mrseq	r0, (UNDEF: 0)
    2670:	00000001 	andeq	r0, r0, r1
    2674:	00000000 	andeq	r0, r0, r0
    2678:	53000100 	movwpl	r0, #256	; 0x100
	...
    2684:	00000100 	andeq	r0, r0, r0, lsl #2
    2688:	00000000 	andeq	r0, r0, r0
    268c:	00010000 	andeq	r0, r1, r0
    2690:	00000051 	andeq	r0, r0, r1, asr r0
	...
    26a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    26ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    26b0:	00000008 	andeq	r0, r0, r8
	...
    26cc:	01000000 	mrseq	r0, (UNDEF: 0)
    26d0:	00005000 	andeq	r5, r0, r0
    26d4:	00000000 	andeq	r0, r0, r0
    26d8:	00010000 	andeq	r0, r1, r0
    26dc:	00000054 	andeq	r0, r0, r4, asr r0
    26e0:	00000000 	andeq	r0, r0, r0
    26e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    26f0:	00540001 	subseq	r0, r4, r1
    26f4:	00000000 	andeq	r0, r0, r0
    26f8:	01000000 	mrseq	r0, (UNDEF: 0)
    26fc:	00005000 	andeq	r5, r0, r0
    2700:	00000000 	andeq	r0, r0, r0
    2704:	00010000 	andeq	r0, r1, r0
    2708:	00000054 	andeq	r0, r0, r4, asr r0
    270c:	00000000 	andeq	r0, r0, r0
    2710:	f3000400 	vshl.u8	d0, d0, d0
    2714:	009f5001 	addseq	r5, pc, r1
	...
    2728:	53000100 	movwpl	r0, #256	; 0x100
	...
    2738:	00000100 	andeq	r0, r0, r0, lsl #2
    273c:	00000000 	andeq	r0, r0, r0
    2740:	00030000 	andeq	r0, r3, r0
    2744:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2748:	00000000 	andeq	r0, r0, r0
    274c:	01000000 	mrseq	r0, (UNDEF: 0)
    2750:	00005300 	andeq	r5, r0, r0, lsl #6
    2754:	00000000 	andeq	r0, r0, r0
    2758:	00030000 	andeq	r0, r3, r0
    275c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2768:	00000001 	andeq	r0, r0, r1
    276c:	00000000 	andeq	r0, r0, r0
    2770:	53000100 	movwpl	r0, #256	; 0x100
	...
    277c:	01000001 	tsteq	r0, r1
	...
    2788:	0c720003 	ldcleq	0, cr0, [r2], #-12
    278c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2790:	00000000 	andeq	r0, r0, r0
    2794:	52000100 	andpl	r0, r0, #0, 2
	...
    27a0:	00000101 	andeq	r0, r0, r1, lsl #2
    27a4:	00000000 	andeq	r0, r0, r0
    27a8:	00010000 	andeq	r0, r1, r0
    27ac:	00000053 	andeq	r0, r0, r3, asr r0
    27b0:	00000000 	andeq	r0, r0, r0
    27b4:	00010000 	andeq	r0, r1, r0
    27b8:	00000000 	andeq	r0, r0, r0
    27bc:	01000000 	mrseq	r0, (UNDEF: 0)
    27c0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    27d4:	00530001 	subseq	r0, r3, r1
	...
    27e4:	00000001 	andeq	r0, r0, r1
    27e8:	00000000 	andeq	r0, r0, r0
    27ec:	72000300 	andvc	r0, r0, #0, 6
    27f0:	00009f14 	andeq	r9, r0, r4, lsl pc
    27f4:	00000000 	andeq	r0, r0, r0
    27f8:	00010000 	andeq	r0, r1, r0
    27fc:	00000053 	andeq	r0, r0, r3, asr r0
    2800:	00000000 	andeq	r0, r0, r0
    2804:	72000300 	andvc	r0, r0, #0, 6
    2808:	00009f14 	andeq	r9, r0, r4, lsl pc
    280c:	00000000 	andeq	r0, r0, r0
    2810:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    281c:	00530001 	subseq	r0, r3, r1
    2820:	00000000 	andeq	r0, r0, r0
    2824:	01000000 	mrseq	r0, (UNDEF: 0)
    2828:	00010000 	andeq	r0, r1, r0
    282c:	00000000 	andeq	r0, r0, r0
    2830:	03000000 	movweq	r0, #0
    2834:	9f147200 	svcls	0x00147200
	...
    2840:	00520001 	subseq	r0, r2, r1
    2844:	00000000 	andeq	r0, r0, r0
    2848:	01000000 	mrseq	r0, (UNDEF: 0)
    284c:	00000001 	andeq	r0, r0, r1
    2850:	00000000 	andeq	r0, r0, r0
    2854:	53000100 	movwpl	r0, #256	; 0x100
	...
    2860:	00000100 	andeq	r0, r0, r0, lsl #2
    2864:	00000000 	andeq	r0, r0, r0
    2868:	00010000 	andeq	r0, r1, r0
    286c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    287c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2888:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    288c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    28a4:	01000000 	mrseq	r0, (UNDEF: 0)
    28a8:	00005000 	andeq	r5, r0, r0
    28ac:	00000000 	andeq	r0, r0, r0
    28b0:	00010000 	andeq	r0, r1, r0
    28b4:	00000054 	andeq	r0, r0, r4, asr r0
    28b8:	00000000 	andeq	r0, r0, r0
    28bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    28c8:	00540001 	subseq	r0, r4, r1
    28cc:	00000000 	andeq	r0, r0, r0
    28d0:	04000000 	streq	r0, [r0], #-0
    28d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    28d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    28dc:	00000000 	andeq	r0, r0, r0
    28e0:	00000100 	andeq	r0, r0, r0, lsl #2
    28e4:	00020101 	andeq	r0, r2, r1, lsl #2
	...
    28f0:	02000000 	andeq	r0, r0, #0
    28f4:	009f3100 	addseq	r3, pc, r0, lsl #2
    28f8:	00000000 	andeq	r0, r0, r0
    28fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2900:	00005500 	andeq	r5, r0, r0, lsl #10
    2904:	00000000 	andeq	r0, r0, r0
    2908:	00020000 	andeq	r0, r2, r0
    290c:	00009f31 	andeq	r9, r0, r1, lsr pc
    2910:	00000000 	andeq	r0, r0, r0
    2914:	00020000 	andeq	r0, r2, r0
    2918:	00009f31 	andeq	r9, r0, r1, lsr pc
    291c:	00000000 	andeq	r0, r0, r0
    2920:	00010000 	andeq	r0, r1, r0
    2924:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2934:	01000000 	mrseq	r0, (UNDEF: 0)
    2938:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2944:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2950:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2954:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2958:	00000000 	andeq	r0, r0, r0
    295c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2968:	0c720003 	ldcleq	0, cr0, [r2], #-12
    296c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2970:	00000000 	andeq	r0, r0, r0
    2974:	00010000 	andeq	r0, r1, r0
    2978:	00000000 	andeq	r0, r0, r0
    297c:	01000000 	mrseq	r0, (UNDEF: 0)
    2980:	00005300 	andeq	r5, r0, r0, lsl #6
    2984:	00000000 	andeq	r0, r0, r0
    2988:	00010000 	andeq	r0, r1, r0
    298c:	00000100 	andeq	r0, r0, r0, lsl #2
    2990:	00000000 	andeq	r0, r0, r0
    2994:	00030000 	andeq	r0, r3, r0
    2998:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    299c:	00000000 	andeq	r0, r0, r0
    29a0:	01000000 	mrseq	r0, (UNDEF: 0)
    29a4:	00005200 	andeq	r5, r0, r0, lsl #4
    29a8:	00000000 	andeq	r0, r0, r0
    29ac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    29b8:	00530001 	subseq	r0, r3, r1
	...
    29c4:	00000001 	andeq	r0, r0, r1
    29c8:	00000000 	andeq	r0, r0, r0
    29cc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    29e0:	00010000 	andeq	r0, r1, r0
    29e4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    29f0:	00010000 	andeq	r0, r1, r0
    29f4:	00000000 	andeq	r0, r0, r0
    29f8:	03000000 	movweq	r0, #0
    29fc:	9f147200 	svcls	0x00147200
	...
    2a08:	00530001 	subseq	r0, r3, r1
    2a0c:	00000000 	andeq	r0, r0, r0
    2a10:	03000000 	movweq	r0, #0
    2a14:	9f147200 	svcls	0x00147200
	...
    2a20:	00000100 	andeq	r0, r0, r0, lsl #2
    2a24:	00000000 	andeq	r0, r0, r0
    2a28:	00010000 	andeq	r0, r1, r0
    2a2c:	00000053 	andeq	r0, r0, r3, asr r0
    2a30:	00000000 	andeq	r0, r0, r0
    2a34:	00000100 	andeq	r0, r0, r0, lsl #2
    2a38:	00000001 	andeq	r0, r0, r1
    2a3c:	00000000 	andeq	r0, r0, r0
    2a40:	72000300 	andvc	r0, r0, #0, 6
    2a44:	00009f14 	andeq	r9, r0, r4, lsl pc
    2a48:	00000000 	andeq	r0, r0, r0
    2a4c:	00010000 	andeq	r0, r1, r0
    2a50:	00000052 	andeq	r0, r0, r2, asr r0
    2a54:	00000000 	andeq	r0, r0, r0
    2a58:	00010100 	andeq	r0, r1, r0, lsl #2
    2a5c:	00000000 	andeq	r0, r0, r0
    2a60:	01000000 	mrseq	r0, (UNDEF: 0)
    2a64:	00005300 	andeq	r5, r0, r0, lsl #6
    2a68:	00000000 	andeq	r0, r0, r0
    2a6c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2a78:	00510001 	subseq	r0, r1, r1
	...
    2a8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a9c:	00000100 	andeq	r0, r0, r0, lsl #2
    2aa0:	00000000 	andeq	r0, r0, r0
    2aa4:	00030000 	andeq	r0, r3, r0
    2aa8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2aac:	00000000 	andeq	r0, r0, r0
    2ab0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ab4:	00005300 	andeq	r5, r0, r0, lsl #6
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	00030000 	andeq	r0, r3, r0
    2ac0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2acc:	00000001 	andeq	r0, r0, r1
    2ad0:	00000000 	andeq	r0, r0, r0
    2ad4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ae0:	01000001 	tsteq	r0, r1
	...
    2aec:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2af0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2af4:	00000000 	andeq	r0, r0, r0
    2af8:	52000100 	andpl	r0, r0, #0, 2
	...
    2b04:	00000101 	andeq	r0, r0, r1, lsl #2
    2b08:	00000000 	andeq	r0, r0, r0
    2b0c:	00010000 	andeq	r0, r1, r0
    2b10:	00000053 	andeq	r0, r0, r3, asr r0
    2b14:	00000000 	andeq	r0, r0, r0
    2b18:	00010000 	andeq	r0, r1, r0
    2b1c:	00000000 	andeq	r0, r0, r0
    2b20:	01000000 	mrseq	r0, (UNDEF: 0)
    2b24:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2b38:	00010000 	andeq	r0, r1, r0
    2b3c:	00000053 	andeq	r0, r0, r3, asr r0
    2b40:	00000000 	andeq	r0, r0, r0
    2b44:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b54:	00000100 	andeq	r0, r0, r0, lsl #2
    2b58:	00000000 	andeq	r0, r0, r0
    2b5c:	00030000 	andeq	r0, r3, r0
    2b60:	009f1471 	addseq	r1, pc, r1, ror r4	; <UNPREDICTABLE>
    2b64:	00000000 	andeq	r0, r0, r0
    2b68:	01000000 	mrseq	r0, (UNDEF: 0)
    2b6c:	00005300 	andeq	r5, r0, r0, lsl #6
    2b70:	00000000 	andeq	r0, r0, r0
    2b74:	00030000 	andeq	r0, r3, r0
    2b78:	009f1471 	addseq	r1, pc, r1, ror r4	; <UNPREDICTABLE>
	...
    2b84:	00000001 	andeq	r0, r0, r1
    2b88:	00000000 	andeq	r0, r0, r0
    2b8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b98:	01000001 	tsteq	r0, r1
	...
    2ba4:	14710003 	ldrbtne	r0, [r1], #-3
    2ba8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2bac:	00000000 	andeq	r0, r0, r0
    2bb0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2bbc:	00000101 	andeq	r0, r0, r1, lsl #2
    2bc0:	00000000 	andeq	r0, r0, r0
    2bc4:	00010000 	andeq	r0, r1, r0
    2bc8:	00000053 	andeq	r0, r0, r3, asr r0
    2bcc:	00000000 	andeq	r0, r0, r0
    2bd0:	00010000 	andeq	r0, r1, r0
    2bd4:	00000000 	andeq	r0, r0, r0
    2bd8:	01000000 	mrseq	r0, (UNDEF: 0)
    2bdc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    2bf0:	00530001 	subseq	r0, r3, r1
	...
    2c00:	00000001 	andeq	r0, r0, r1
    2c04:	00000000 	andeq	r0, r0, r0
    2c08:	72000300 	andvc	r0, r0, #0, 6
    2c0c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2c10:	00000000 	andeq	r0, r0, r0
    2c14:	00010000 	andeq	r0, r1, r0
    2c18:	00000053 	andeq	r0, r0, r3, asr r0
    2c1c:	00000000 	andeq	r0, r0, r0
    2c20:	72000300 	andvc	r0, r0, #0, 6
    2c24:	00009f14 	andeq	r9, r0, r4, lsl pc
    2c28:	00000000 	andeq	r0, r0, r0
    2c2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2c38:	00530001 	subseq	r0, r3, r1
    2c3c:	00000000 	andeq	r0, r0, r0
    2c40:	01000000 	mrseq	r0, (UNDEF: 0)
    2c44:	00010000 	andeq	r0, r1, r0
    2c48:	00000000 	andeq	r0, r0, r0
    2c4c:	03000000 	movweq	r0, #0
    2c50:	9f147200 	svcls	0x00147200
	...
    2c5c:	00520001 	subseq	r0, r2, r1
    2c60:	00000000 	andeq	r0, r0, r0
    2c64:	01000000 	mrseq	r0, (UNDEF: 0)
    2c68:	00000001 	andeq	r0, r0, r1
    2c6c:	00000000 	andeq	r0, r0, r0
    2c70:	53000100 	movwpl	r0, #256	; 0x100
	...
    2c7c:	00000100 	andeq	r0, r0, r0, lsl #2
    2c80:	00000000 	andeq	r0, r0, r0
    2c84:	00010000 	andeq	r0, r1, r0
    2c88:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2c98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2ca4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2ca8:	00000008 	andeq	r0, r0, r8
	...
    2cc0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2ccc:	00540001 	subseq	r0, r4, r1
    2cd0:	00000000 	andeq	r0, r0, r0
    2cd4:	01000000 	mrseq	r0, (UNDEF: 0)
    2cd8:	00005000 	andeq	r5, r0, r0
    2cdc:	00000000 	andeq	r0, r0, r0
    2ce0:	00010000 	andeq	r0, r1, r0
    2ce4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2cf4:	01000000 	mrseq	r0, (UNDEF: 0)
    2cf8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2d04:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2d10:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2d14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2d18:	00000000 	andeq	r0, r0, r0
    2d1c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2d28:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2d2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2d30:	00000000 	andeq	r0, r0, r0
    2d34:	00010000 	andeq	r0, r1, r0
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d40:	00005300 	andeq	r5, r0, r0, lsl #6
    2d44:	00000000 	andeq	r0, r0, r0
    2d48:	00010000 	andeq	r0, r1, r0
    2d4c:	00000100 	andeq	r0, r0, r0, lsl #2
    2d50:	00000000 	andeq	r0, r0, r0
    2d54:	00030000 	andeq	r0, r3, r0
    2d58:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2d5c:	00000000 	andeq	r0, r0, r0
    2d60:	01000000 	mrseq	r0, (UNDEF: 0)
    2d64:	00005200 	andeq	r5, r0, r0, lsl #4
    2d68:	00000000 	andeq	r0, r0, r0
    2d6c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2d78:	00530001 	subseq	r0, r3, r1
	...
    2d84:	00000001 	andeq	r0, r0, r1
    2d88:	00000000 	andeq	r0, r0, r0
    2d8c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2da0:	00010000 	andeq	r0, r1, r0
    2da4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2db0:	00010000 	andeq	r0, r1, r0
    2db4:	00000000 	andeq	r0, r0, r0
    2db8:	03000000 	movweq	r0, #0
    2dbc:	9f147200 	svcls	0x00147200
	...
    2dc8:	00530001 	subseq	r0, r3, r1
    2dcc:	00000000 	andeq	r0, r0, r0
    2dd0:	03000000 	movweq	r0, #0
    2dd4:	9f147200 	svcls	0x00147200
	...
    2de0:	00000100 	andeq	r0, r0, r0, lsl #2
    2de4:	00000000 	andeq	r0, r0, r0
    2de8:	00010000 	andeq	r0, r1, r0
    2dec:	00000053 	andeq	r0, r0, r3, asr r0
    2df0:	00000000 	andeq	r0, r0, r0
    2df4:	00000100 	andeq	r0, r0, r0, lsl #2
    2df8:	00000001 	andeq	r0, r0, r1
    2dfc:	00000000 	andeq	r0, r0, r0
    2e00:	72000300 	andvc	r0, r0, #0, 6
    2e04:	00009f14 	andeq	r9, r0, r4, lsl pc
    2e08:	00000000 	andeq	r0, r0, r0
    2e0c:	00010000 	andeq	r0, r1, r0
    2e10:	00000052 	andeq	r0, r0, r2, asr r0
    2e14:	00000000 	andeq	r0, r0, r0
    2e18:	00010100 	andeq	r0, r1, r0, lsl #2
    2e1c:	00000000 	andeq	r0, r0, r0
    2e20:	01000000 	mrseq	r0, (UNDEF: 0)
    2e24:	00005300 	andeq	r5, r0, r0, lsl #6
    2e28:	00000000 	andeq	r0, r0, r0
    2e2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2e38:	00510001 	subseq	r0, r1, r1
	...
    2e4c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2e5c:	00000100 	andeq	r0, r0, r0, lsl #2
    2e60:	00000000 	andeq	r0, r0, r0
    2e64:	00030000 	andeq	r0, r3, r0
    2e68:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2e6c:	00000000 	andeq	r0, r0, r0
    2e70:	01000000 	mrseq	r0, (UNDEF: 0)
    2e74:	00005300 	andeq	r5, r0, r0, lsl #6
    2e78:	00000000 	andeq	r0, r0, r0
    2e7c:	00030000 	andeq	r0, r3, r0
    2e80:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2e8c:	00000001 	andeq	r0, r0, r1
    2e90:	00000000 	andeq	r0, r0, r0
    2e94:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ea0:	01000001 	tsteq	r0, r1
	...
    2eac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2eb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2eb4:	00000000 	andeq	r0, r0, r0
    2eb8:	52000100 	andpl	r0, r0, #0, 2
	...
    2ec4:	00000101 	andeq	r0, r0, r1, lsl #2
    2ec8:	00000000 	andeq	r0, r0, r0
    2ecc:	00010000 	andeq	r0, r1, r0
    2ed0:	00000053 	andeq	r0, r0, r3, asr r0
    2ed4:	00000000 	andeq	r0, r0, r0
    2ed8:	00010000 	andeq	r0, r1, r0
    2edc:	00000000 	andeq	r0, r0, r0
    2ee0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ee4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2ef8:	00530001 	subseq	r0, r3, r1
	...
    2f08:	00000001 	andeq	r0, r0, r1
    2f0c:	00000000 	andeq	r0, r0, r0
    2f10:	72000300 	andvc	r0, r0, #0, 6
    2f14:	00009f14 	andeq	r9, r0, r4, lsl pc
    2f18:	00000000 	andeq	r0, r0, r0
    2f1c:	00010000 	andeq	r0, r1, r0
    2f20:	00000053 	andeq	r0, r0, r3, asr r0
    2f24:	00000000 	andeq	r0, r0, r0
    2f28:	72000300 	andvc	r0, r0, #0, 6
    2f2c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2f30:	00000000 	andeq	r0, r0, r0
    2f34:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f40:	00530001 	subseq	r0, r3, r1
    2f44:	00000000 	andeq	r0, r0, r0
    2f48:	01000000 	mrseq	r0, (UNDEF: 0)
    2f4c:	00010000 	andeq	r0, r1, r0
    2f50:	00000000 	andeq	r0, r0, r0
    2f54:	03000000 	movweq	r0, #0
    2f58:	9f147200 	svcls	0x00147200
	...
    2f64:	00520001 	subseq	r0, r2, r1
    2f68:	00000000 	andeq	r0, r0, r0
    2f6c:	01000000 	mrseq	r0, (UNDEF: 0)
    2f70:	00000001 	andeq	r0, r0, r1
    2f74:	00000000 	andeq	r0, r0, r0
    2f78:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f84:	00000100 	andeq	r0, r0, r0, lsl #2
    2f88:	00000000 	andeq	r0, r0, r0
    2f8c:	00010000 	andeq	r0, r1, r0
    2f90:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2fa0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2fac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2fb0:	00000008 	andeq	r0, r0, r8
	...
    2fc4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2fd0:	00540001 	subseq	r0, r4, r1
	...
    2fe4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ff4:	00000100 	andeq	r0, r0, r0, lsl #2
    2ff8:	00000000 	andeq	r0, r0, r0
    2ffc:	00030000 	andeq	r0, r3, r0
    3000:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3004:	00000000 	andeq	r0, r0, r0
    3008:	01000000 	mrseq	r0, (UNDEF: 0)
    300c:	00005300 	andeq	r5, r0, r0, lsl #6
    3010:	00000000 	andeq	r0, r0, r0
    3014:	00030000 	andeq	r0, r3, r0
    3018:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    3024:	00000001 	andeq	r0, r0, r1
    3028:	00000000 	andeq	r0, r0, r0
    302c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3038:	01000001 	tsteq	r0, r1
	...
    3044:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3048:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    304c:	00000000 	andeq	r0, r0, r0
    3050:	52000100 	andpl	r0, r0, #0, 2
	...
    305c:	00000101 	andeq	r0, r0, r1, lsl #2
    3060:	00000000 	andeq	r0, r0, r0
    3064:	00010000 	andeq	r0, r1, r0
    3068:	00000053 	andeq	r0, r0, r3, asr r0
    306c:	00000000 	andeq	r0, r0, r0
    3070:	00010000 	andeq	r0, r1, r0
    3074:	00000000 	andeq	r0, r0, r0
    3078:	01000000 	mrseq	r0, (UNDEF: 0)
    307c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3090:	00530001 	subseq	r0, r3, r1
	...
    30a0:	00000001 	andeq	r0, r0, r1
    30a4:	00000000 	andeq	r0, r0, r0
    30a8:	72000300 	andvc	r0, r0, #0, 6
    30ac:	00009f14 	andeq	r9, r0, r4, lsl pc
    30b0:	00000000 	andeq	r0, r0, r0
    30b4:	00010000 	andeq	r0, r1, r0
    30b8:	00000053 	andeq	r0, r0, r3, asr r0
    30bc:	00000000 	andeq	r0, r0, r0
    30c0:	72000300 	andvc	r0, r0, #0, 6
    30c4:	00009f14 	andeq	r9, r0, r4, lsl pc
    30c8:	00000000 	andeq	r0, r0, r0
    30cc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    30d8:	00530001 	subseq	r0, r3, r1
    30dc:	00000000 	andeq	r0, r0, r0
    30e0:	01000000 	mrseq	r0, (UNDEF: 0)
    30e4:	00010000 	andeq	r0, r1, r0
    30e8:	00000000 	andeq	r0, r0, r0
    30ec:	03000000 	movweq	r0, #0
    30f0:	9f147200 	svcls	0x00147200
	...
    30fc:	00520001 	subseq	r0, r2, r1
    3100:	00000000 	andeq	r0, r0, r0
    3104:	01000000 	mrseq	r0, (UNDEF: 0)
    3108:	00000001 	andeq	r0, r0, r1
    310c:	00000000 	andeq	r0, r0, r0
    3110:	53000100 	movwpl	r0, #256	; 0x100
	...
    311c:	00000100 	andeq	r0, r0, r0, lsl #2
    3120:	00000000 	andeq	r0, r0, r0
    3124:	00010000 	andeq	r0, r1, r0
    3128:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3138:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3144:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3148:	00000008 	andeq	r0, r0, r8
	...
    3160:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    316c:	00540001 	subseq	r0, r4, r1
    3170:	00000000 	andeq	r0, r0, r0
    3174:	01000000 	mrseq	r0, (UNDEF: 0)
    3178:	00005000 	andeq	r5, r0, r0
    317c:	00000000 	andeq	r0, r0, r0
    3180:	00010000 	andeq	r0, r1, r0
    3184:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3194:	01000000 	mrseq	r0, (UNDEF: 0)
    3198:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    31a4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    31b0:	0c720003 	ldcleq	0, cr0, [r2], #-12
    31b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31b8:	00000000 	andeq	r0, r0, r0
    31bc:	53000100 	movwpl	r0, #256	; 0x100
	...
    31c8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    31cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31d0:	00000000 	andeq	r0, r0, r0
    31d4:	00010000 	andeq	r0, r1, r0
    31d8:	00000000 	andeq	r0, r0, r0
    31dc:	01000000 	mrseq	r0, (UNDEF: 0)
    31e0:	00005300 	andeq	r5, r0, r0, lsl #6
    31e4:	00000000 	andeq	r0, r0, r0
    31e8:	00010000 	andeq	r0, r1, r0
    31ec:	00000100 	andeq	r0, r0, r0, lsl #2
    31f0:	00000000 	andeq	r0, r0, r0
    31f4:	00030000 	andeq	r0, r3, r0
    31f8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    31fc:	00000000 	andeq	r0, r0, r0
    3200:	01000000 	mrseq	r0, (UNDEF: 0)
    3204:	00005200 	andeq	r5, r0, r0, lsl #4
    3208:	00000000 	andeq	r0, r0, r0
    320c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3218:	00530001 	subseq	r0, r3, r1
	...
    3224:	00000001 	andeq	r0, r0, r1
    3228:	00000000 	andeq	r0, r0, r0
    322c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3240:	00010000 	andeq	r0, r1, r0
    3244:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3250:	00010000 	andeq	r0, r1, r0
    3254:	00000000 	andeq	r0, r0, r0
    3258:	03000000 	movweq	r0, #0
    325c:	9f147200 	svcls	0x00147200
	...
    3268:	00530001 	subseq	r0, r3, r1
    326c:	00000000 	andeq	r0, r0, r0
    3270:	03000000 	movweq	r0, #0
    3274:	9f147200 	svcls	0x00147200
	...
    3280:	00000100 	andeq	r0, r0, r0, lsl #2
    3284:	00000000 	andeq	r0, r0, r0
    3288:	00010000 	andeq	r0, r1, r0
    328c:	00000053 	andeq	r0, r0, r3, asr r0
    3290:	00000000 	andeq	r0, r0, r0
    3294:	00000100 	andeq	r0, r0, r0, lsl #2
    3298:	00000001 	andeq	r0, r0, r1
    329c:	00000000 	andeq	r0, r0, r0
    32a0:	72000300 	andvc	r0, r0, #0, 6
    32a4:	00009f14 	andeq	r9, r0, r4, lsl pc
    32a8:	00000000 	andeq	r0, r0, r0
    32ac:	00010000 	andeq	r0, r1, r0
    32b0:	00000052 	andeq	r0, r0, r2, asr r0
    32b4:	00000000 	andeq	r0, r0, r0
    32b8:	00010100 	andeq	r0, r1, r0, lsl #2
    32bc:	00000000 	andeq	r0, r0, r0
    32c0:	01000000 	mrseq	r0, (UNDEF: 0)
    32c4:	00005300 	andeq	r5, r0, r0, lsl #6
    32c8:	00000000 	andeq	r0, r0, r0
    32cc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    32d8:	00510001 	subseq	r0, r1, r1
	...
    32ec:	53000100 	movwpl	r0, #256	; 0x100
	...
    32fc:	00000100 	andeq	r0, r0, r0, lsl #2
    3300:	00000000 	andeq	r0, r0, r0
    3304:	00030000 	andeq	r0, r3, r0
    3308:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    330c:	00000000 	andeq	r0, r0, r0
    3310:	01000000 	mrseq	r0, (UNDEF: 0)
    3314:	00005300 	andeq	r5, r0, r0, lsl #6
    3318:	00000000 	andeq	r0, r0, r0
    331c:	00030000 	andeq	r0, r3, r0
    3320:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    332c:	00000001 	andeq	r0, r0, r1
    3330:	00000000 	andeq	r0, r0, r0
    3334:	53000100 	movwpl	r0, #256	; 0x100
	...
    3340:	01000001 	tsteq	r0, r1
	...
    334c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3350:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3354:	00000000 	andeq	r0, r0, r0
    3358:	52000100 	andpl	r0, r0, #0, 2
	...
    3364:	00000101 	andeq	r0, r0, r1, lsl #2
    3368:	00000000 	andeq	r0, r0, r0
    336c:	00010000 	andeq	r0, r1, r0
    3370:	00000053 	andeq	r0, r0, r3, asr r0
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00010000 	andeq	r0, r1, r0
    337c:	00000000 	andeq	r0, r0, r0
    3380:	01000000 	mrseq	r0, (UNDEF: 0)
    3384:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3398:	00530001 	subseq	r0, r3, r1
	...
    33a8:	00000001 	andeq	r0, r0, r1
    33ac:	00000000 	andeq	r0, r0, r0
    33b0:	72000300 	andvc	r0, r0, #0, 6
    33b4:	00009f14 	andeq	r9, r0, r4, lsl pc
    33b8:	00000000 	andeq	r0, r0, r0
    33bc:	00010000 	andeq	r0, r1, r0
    33c0:	00000053 	andeq	r0, r0, r3, asr r0
    33c4:	00000000 	andeq	r0, r0, r0
    33c8:	72000300 	andvc	r0, r0, #0, 6
    33cc:	00009f14 	andeq	r9, r0, r4, lsl pc
    33d0:	00000000 	andeq	r0, r0, r0
    33d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    33e0:	00530001 	subseq	r0, r3, r1
    33e4:	00000000 	andeq	r0, r0, r0
    33e8:	01000000 	mrseq	r0, (UNDEF: 0)
    33ec:	00010000 	andeq	r0, r1, r0
    33f0:	00000000 	andeq	r0, r0, r0
    33f4:	03000000 	movweq	r0, #0
    33f8:	9f147200 	svcls	0x00147200
	...
    3404:	00520001 	subseq	r0, r2, r1
    3408:	00000000 	andeq	r0, r0, r0
    340c:	01000000 	mrseq	r0, (UNDEF: 0)
    3410:	00000001 	andeq	r0, r0, r1
    3414:	00000000 	andeq	r0, r0, r0
    3418:	53000100 	movwpl	r0, #256	; 0x100
	...
    3424:	00000100 	andeq	r0, r0, r0, lsl #2
    3428:	00000000 	andeq	r0, r0, r0
    342c:	00010000 	andeq	r0, r1, r0
    3430:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3440:	01000000 	mrseq	r0, (UNDEF: 0)
    3444:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3450:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    345c:	14720003 	ldrbtne	r0, [r2], #-3
    3460:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3464:	00000000 	andeq	r0, r0, r0
    3468:	53000100 	movwpl	r0, #256	; 0x100
	...
    3474:	14720003 	ldrbtne	r0, [r2], #-3
    3478:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    347c:	00000000 	andeq	r0, r0, r0
    3480:	00010000 	andeq	r0, r1, r0
    3484:	00000000 	andeq	r0, r0, r0
    3488:	01000000 	mrseq	r0, (UNDEF: 0)
    348c:	00005300 	andeq	r5, r0, r0, lsl #6
    3490:	00000000 	andeq	r0, r0, r0
    3494:	00010000 	andeq	r0, r1, r0
    3498:	00000100 	andeq	r0, r0, r0, lsl #2
    349c:	00000000 	andeq	r0, r0, r0
    34a0:	00030000 	andeq	r0, r3, r0
    34a4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    34a8:	00000000 	andeq	r0, r0, r0
    34ac:	01000000 	mrseq	r0, (UNDEF: 0)
    34b0:	00005200 	andeq	r5, r0, r0, lsl #4
    34b4:	00000000 	andeq	r0, r0, r0
    34b8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    34c4:	00530001 	subseq	r0, r3, r1
	...
    34d0:	00000001 	andeq	r0, r0, r1
    34d4:	00000000 	andeq	r0, r0, r0
    34d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    34f0:	00500001 	subseq	r0, r0, r1
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	04000000 	streq	r0, [r0], #-0
    34fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3510:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    351c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3520:	00000008 	andeq	r0, r0, r8
    3524:	00000000 	andeq	r0, r0, r0
    3528:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    352c:	00000010 	andeq	r0, r0, r0, lsl r0
    3530:	00000000 	andeq	r0, r0, r0
    3534:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3538:	00000008 	andeq	r0, r0, r8
    353c:	00000000 	andeq	r0, r0, r0
    3540:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3544:	00000010 	andeq	r0, r0, r0, lsl r0
    3548:	00000000 	andeq	r0, r0, r0
    354c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3558:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    355c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    357c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3588:	00540001 	subseq	r0, r4, r1
    358c:	00000000 	andeq	r0, r0, r0
    3590:	01000000 	mrseq	r0, (UNDEF: 0)
    3594:	00005000 	andeq	r5, r0, r0
    3598:	00000000 	andeq	r0, r0, r0
    359c:	00010000 	andeq	r0, r1, r0
    35a0:	00000054 	andeq	r0, r0, r4, asr r0
    35a4:	00000000 	andeq	r0, r0, r0
    35a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    35b4:	01f30004 	mvnseq	r0, r4
    35b8:	00009f50 	andeq	r9, r0, r0, asr pc
    35bc:	00000000 	andeq	r0, r0, r0
    35c0:	00010000 	andeq	r0, r1, r0
    35c4:	00000050 	andeq	r0, r0, r0, asr r0
    35c8:	00000000 	andeq	r0, r0, r0
    35cc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    35e8:	00010000 	andeq	r0, r1, r0
    35ec:	00000051 	andeq	r0, r0, r1, asr r0
    35f0:	00000000 	andeq	r0, r0, r0
    35f4:	f3000400 	vshl.u8	d0, d0, d0
    35f8:	009f5101 	addseq	r5, pc, r1, lsl #2
    35fc:	00000000 	andeq	r0, r0, r0
    3600:	01000000 	mrseq	r0, (UNDEF: 0)
    3604:	00005100 	andeq	r5, r0, r0, lsl #2
    3608:	00000000 	andeq	r0, r0, r0
    360c:	00040000 	andeq	r0, r4, r0
    3610:	9f5101f3 	svcls	0x005101f3
	...
    361c:	00510001 	subseq	r0, r1, r1
	...
    3638:	52000100 	andpl	r0, r0, #0, 2
	...
    3644:	01f30004 	mvnseq	r0, r4
    3648:	00009f52 	andeq	r9, r0, r2, asr pc
    364c:	00000000 	andeq	r0, r0, r0
    3650:	00010000 	andeq	r0, r1, r0
    3654:	00000052 	andeq	r0, r0, r2, asr r0
    3658:	00000000 	andeq	r0, r0, r0
    365c:	f3000400 	vshl.u8	d0, d0, d0
    3660:	009f5201 	addseq	r5, pc, r1, lsl #4
    3664:	00000000 	andeq	r0, r0, r0
    3668:	01000000 	mrseq	r0, (UNDEF: 0)
    366c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    3684:	00500001 	subseq	r0, r0, r1
    3688:	00000000 	andeq	r0, r0, r0
    368c:	02000000 	andeq	r0, r0, #0
    3690:	009f3100 	addseq	r3, pc, r0, lsl #2
    3694:	00000000 	andeq	r0, r0, r0
    3698:	01000000 	mrseq	r0, (UNDEF: 0)
    369c:	00005000 	andeq	r5, r0, r0
	...
    36b0:	00530001 	subseq	r0, r3, r1
	...
    36c0:	00000001 	andeq	r0, r0, r1
    36c4:	00000000 	andeq	r0, r0, r0
    36c8:	72000300 	andvc	r0, r0, #0, 6
    36cc:	00009f0c 	andeq	r9, r0, ip, lsl #30
    36d0:	00000000 	andeq	r0, r0, r0
    36d4:	00010000 	andeq	r0, r1, r0
    36d8:	00000053 	andeq	r0, r0, r3, asr r0
    36dc:	00000000 	andeq	r0, r0, r0
    36e0:	72000300 	andvc	r0, r0, #0, 6
    36e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    36e8:	00000000 	andeq	r0, r0, r0
    36ec:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    36f8:	00530001 	subseq	r0, r3, r1
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	01000000 	mrseq	r0, (UNDEF: 0)
    3704:	00010000 	andeq	r0, r1, r0
    3708:	00000000 	andeq	r0, r0, r0
    370c:	03000000 	movweq	r0, #0
    3710:	9f0c7200 	svcls	0x000c7200
	...
    371c:	00520001 	subseq	r0, r2, r1
    3720:	00000000 	andeq	r0, r0, r0
    3724:	01000000 	mrseq	r0, (UNDEF: 0)
    3728:	00000001 	andeq	r0, r0, r1
    372c:	00000000 	andeq	r0, r0, r0
    3730:	53000100 	movwpl	r0, #256	; 0x100
	...
    373c:	00000100 	andeq	r0, r0, r0, lsl #2
    3740:	00000000 	andeq	r0, r0, r0
    3744:	00010000 	andeq	r0, r1, r0
    3748:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3758:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3764:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3768:	00000008 	andeq	r0, r0, r8
    376c:	00000000 	andeq	r0, r0, r0
    3770:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3774:	00000010 	andeq	r0, r0, r0, lsl r0
    3778:	00000000 	andeq	r0, r0, r0
    377c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3780:	00000008 	andeq	r0, r0, r8
    3784:	00000000 	andeq	r0, r0, r0
    3788:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    378c:	00000010 	andeq	r0, r0, r0, lsl r0
    3790:	00000000 	andeq	r0, r0, r0
    3794:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    37a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    37a4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    37c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    37d0:	00540001 	subseq	r0, r4, r1
    37d4:	00000000 	andeq	r0, r0, r0
    37d8:	01000000 	mrseq	r0, (UNDEF: 0)
    37dc:	00005000 	andeq	r5, r0, r0
    37e0:	00000000 	andeq	r0, r0, r0
    37e4:	00010000 	andeq	r0, r1, r0
    37e8:	00000054 	andeq	r0, r0, r4, asr r0
    37ec:	00000000 	andeq	r0, r0, r0
    37f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    37fc:	01f30004 	mvnseq	r0, r4
    3800:	00009f50 	andeq	r9, r0, r0, asr pc
    3804:	00000000 	andeq	r0, r0, r0
    3808:	00010000 	andeq	r0, r1, r0
    380c:	00000050 	andeq	r0, r0, r0, asr r0
    3810:	00000000 	andeq	r0, r0, r0
    3814:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3830:	00010000 	andeq	r0, r1, r0
    3834:	00000051 	andeq	r0, r0, r1, asr r0
    3838:	00000000 	andeq	r0, r0, r0
    383c:	f3000400 	vshl.u8	d0, d0, d0
    3840:	009f5101 	addseq	r5, pc, r1, lsl #2
    3844:	00000000 	andeq	r0, r0, r0
    3848:	01000000 	mrseq	r0, (UNDEF: 0)
    384c:	00005100 	andeq	r5, r0, r0, lsl #2
    3850:	00000000 	andeq	r0, r0, r0
    3854:	00040000 	andeq	r0, r4, r0
    3858:	9f5101f3 	svcls	0x005101f3
	...
    3864:	00510001 	subseq	r0, r1, r1
	...
    3880:	52000100 	andpl	r0, r0, #0, 2
	...
    388c:	01f30004 	mvnseq	r0, r4
    3890:	00009f52 	andeq	r9, r0, r2, asr pc
    3894:	00000000 	andeq	r0, r0, r0
    3898:	00010000 	andeq	r0, r1, r0
    389c:	00000052 	andeq	r0, r0, r2, asr r0
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	f3000400 	vshl.u8	d0, d0, d0
    38a8:	009f5201 	addseq	r5, pc, r1, lsl #4
    38ac:	00000000 	andeq	r0, r0, r0
    38b0:	01000000 	mrseq	r0, (UNDEF: 0)
    38b4:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    38cc:	00500001 	subseq	r0, r0, r1
    38d0:	00000000 	andeq	r0, r0, r0
    38d4:	02000000 	andeq	r0, r0, #0
    38d8:	009f3100 	addseq	r3, pc, r0, lsl #2
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	01000000 	mrseq	r0, (UNDEF: 0)
    38e4:	00005000 	andeq	r5, r0, r0
	...
    38f8:	00530001 	subseq	r0, r3, r1
	...
    3908:	00000001 	andeq	r0, r0, r1
    390c:	00000000 	andeq	r0, r0, r0
    3910:	72000300 	andvc	r0, r0, #0, 6
    3914:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3918:	00000000 	andeq	r0, r0, r0
    391c:	00010000 	andeq	r0, r1, r0
    3920:	00000053 	andeq	r0, r0, r3, asr r0
    3924:	00000000 	andeq	r0, r0, r0
    3928:	72000300 	andvc	r0, r0, #0, 6
    392c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3930:	00000000 	andeq	r0, r0, r0
    3934:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3940:	00530001 	subseq	r0, r3, r1
    3944:	00000000 	andeq	r0, r0, r0
    3948:	01000000 	mrseq	r0, (UNDEF: 0)
    394c:	00010000 	andeq	r0, r1, r0
    3950:	00000000 	andeq	r0, r0, r0
    3954:	03000000 	movweq	r0, #0
    3958:	9f0c7200 	svcls	0x000c7200
	...
    3964:	00520001 	subseq	r0, r2, r1
    3968:	00000000 	andeq	r0, r0, r0
    396c:	01000000 	mrseq	r0, (UNDEF: 0)
    3970:	00000001 	andeq	r0, r0, r1
    3974:	00000000 	andeq	r0, r0, r0
    3978:	53000100 	movwpl	r0, #256	; 0x100
	...
    3984:	00000100 	andeq	r0, r0, r0, lsl #2
    3988:	00000000 	andeq	r0, r0, r0
    398c:	00010000 	andeq	r0, r1, r0
    3990:	00000051 	andeq	r0, r0, r1, asr r0
	...
    39a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    39ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    39b4:	00000000 	andeq	r0, r0, r0
    39b8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39bc:	00000028 	andeq	r0, r0, r8, lsr #32
    39c0:	00000000 	andeq	r0, r0, r0
    39c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    39cc:	00000000 	andeq	r0, r0, r0
    39d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39d4:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    39f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a00:	00540001 	subseq	r0, r4, r1
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	01000000 	mrseq	r0, (UNDEF: 0)
    3a0c:	00005000 	andeq	r5, r0, r0
    3a10:	00000000 	andeq	r0, r0, r0
    3a14:	00010000 	andeq	r0, r1, r0
    3a18:	00000054 	andeq	r0, r0, r4, asr r0
    3a1c:	00000000 	andeq	r0, r0, r0
    3a20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a2c:	01f30004 	mvnseq	r0, r4
    3a30:	00009f50 	andeq	r9, r0, r0, asr pc
    3a34:	00000000 	andeq	r0, r0, r0
    3a38:	00010000 	andeq	r0, r1, r0
    3a3c:	00000050 	andeq	r0, r0, r0, asr r0
    3a40:	00000000 	andeq	r0, r0, r0
    3a44:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3a68:	00010000 	andeq	r0, r1, r0
    3a6c:	00000051 	andeq	r0, r0, r1, asr r0
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3a80:	01f30004 	mvnseq	r0, r4
    3a84:	00009f51 	andeq	r9, r0, r1, asr pc
    3a88:	00000000 	andeq	r0, r0, r0
    3a8c:	00010000 	andeq	r0, r1, r0
    3a90:	00000055 	andeq	r0, r0, r5, asr r0
    3a94:	00000000 	andeq	r0, r0, r0
    3a98:	59000100 	stmdbpl	r0, {r8}
	...
    3aa4:	01f30004 	mvnseq	r0, r4
    3aa8:	00009f51 	andeq	r9, r0, r1, asr pc
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	00010000 	andeq	r0, r1, r0
    3ab4:	00000051 	andeq	r0, r0, r1, asr r0
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	f3000400 	vshl.u8	d0, d0, d0
    3ac0:	009f5101 	addseq	r5, pc, r1, lsl #2
    3ac4:	00000000 	andeq	r0, r0, r0
    3ac8:	01000000 	mrseq	r0, (UNDEF: 0)
    3acc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3ae8:	00520001 	subseq	r0, r2, r1
    3aec:	00000000 	andeq	r0, r0, r0
    3af0:	04000000 	streq	r0, [r0], #-0
    3af4:	5201f300 	andpl	pc, r1, #0, 6
    3af8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3afc:	00000000 	andeq	r0, r0, r0
    3b00:	52000100 	andpl	r0, r0, #0, 2
	...
    3b0c:	01f30004 	mvnseq	r0, r4
    3b10:	00009f52 	andeq	r9, r0, r2, asr pc
    3b14:	00000000 	andeq	r0, r0, r0
    3b18:	00010000 	andeq	r0, r1, r0
    3b1c:	00000052 	andeq	r0, r0, r2, asr r0
	...
    3b30:	53000100 	movwpl	r0, #256	; 0x100
	...
    3b3c:	00560001 	subseq	r0, r6, r1
	...
    3b50:	02000000 	andeq	r0, r0, #0
    3b54:	00009100 	andeq	r9, r0, r0, lsl #2
    3b58:	00000000 	andeq	r0, r0, r0
    3b5c:	02000000 	andeq	r0, r0, #0
    3b60:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    3b74:	01000000 	mrseq	r0, (UNDEF: 0)
    3b78:	00005500 	andeq	r5, r0, r0, lsl #10
    3b7c:	00000000 	andeq	r0, r0, r0
    3b80:	00010000 	andeq	r0, r1, r0
    3b84:	00000055 	andeq	r0, r0, r5, asr r0
	...
    3b90:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3b9c:	59000100 	stmdbpl	r0, {r8}
	...
    3ba8:	00590001 	subseq	r0, r9, r1
    3bac:	00000000 	andeq	r0, r0, r0
    3bb0:	03000000 	movweq	r0, #0
    3bb4:	9f7e7900 	svcls	0x007e7900
	...
    3bc0:	00590001 	subseq	r0, r9, r1
	...
    3bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bd8:	00005000 	andeq	r5, r0, r0
    3bdc:	00000000 	andeq	r0, r0, r0
    3be0:	00010000 	andeq	r0, r1, r0
    3be4:	00000058 	andeq	r0, r0, r8, asr r0
	...
    3bf4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3c00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3c04:	00000008 	andeq	r0, r0, r8
	...
    3c1c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3c28:	00540001 	subseq	r0, r4, r1
    3c2c:	00000000 	andeq	r0, r0, r0
    3c30:	01000000 	mrseq	r0, (UNDEF: 0)
    3c34:	00005000 	andeq	r5, r0, r0
    3c38:	00000000 	andeq	r0, r0, r0
    3c3c:	00010000 	andeq	r0, r1, r0
    3c40:	00000054 	andeq	r0, r0, r4, asr r0
    3c44:	00000000 	andeq	r0, r0, r0
    3c48:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    3c58:	02000000 	andeq	r0, r0, #0
    3c5c:	009f3000 	addseq	r3, pc, r0
    3c60:	00000000 	andeq	r0, r0, r0
    3c64:	0b000000 	bleq	3c6c <_Min_Heap_Size+0x346c>
    3c68:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    3c6c:	2e301a80 	vaddcs.f32	s2, s1, s0
    3c70:	9f1aff08 	svcls	0x001aff08
	...
    3c7c:	00720008 	rsbseq	r0, r2, r8
    3c80:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    3c84:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3c88:	00000000 	andeq	r0, r0, r0
    3c8c:	000b0000 	andeq	r0, fp, r0
    3c90:	80080072 	andhi	r0, r8, r2, ror r0
    3c94:	082e301a 	stmdaeq	lr!, {r1, r3, r4, ip, sp}
    3c98:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    3c9c:	00000000 	andeq	r0, r0, r0
    3ca0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3ca4:	30007200 	andcc	r7, r0, r0, lsl #4
    3ca8:	1aff082e 	bne	fffc5d68 <_estack+0xdffc4b30>
    3cac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3cbc:	01000000 	mrseq	r0, (UNDEF: 0)
    3cc0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3ccc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3cd8:	14720003 	ldrbtne	r0, [r2], #-3
    3cdc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ce0:	00000000 	andeq	r0, r0, r0
    3ce4:	53000100 	movwpl	r0, #256	; 0x100
	...
    3cf0:	14720003 	ldrbtne	r0, [r2], #-3
    3cf4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3cf8:	00000000 	andeq	r0, r0, r0
    3cfc:	00010000 	andeq	r0, r1, r0
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	01000000 	mrseq	r0, (UNDEF: 0)
    3d08:	00005300 	andeq	r5, r0, r0, lsl #6
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	00010000 	andeq	r0, r1, r0
    3d14:	00000100 	andeq	r0, r0, r0, lsl #2
    3d18:	00000000 	andeq	r0, r0, r0
    3d1c:	00030000 	andeq	r0, r3, r0
    3d20:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	01000000 	mrseq	r0, (UNDEF: 0)
    3d2c:	00005200 	andeq	r5, r0, r0, lsl #4
    3d30:	00000000 	andeq	r0, r0, r0
    3d34:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3d40:	00530001 	subseq	r0, r3, r1
	...
    3d4c:	00000001 	andeq	r0, r0, r1
    3d50:	00000000 	andeq	r0, r0, r0
    3d54:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3d68:	00010000 	andeq	r0, r1, r0
    3d6c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3d78:	00010000 	andeq	r0, r1, r0
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	03000000 	movweq	r0, #0
    3d84:	9f147200 	svcls	0x00147200
	...
    3d90:	00530001 	subseq	r0, r3, r1
    3d94:	00000000 	andeq	r0, r0, r0
    3d98:	03000000 	movweq	r0, #0
    3d9c:	9f147200 	svcls	0x00147200
	...
    3da8:	00000100 	andeq	r0, r0, r0, lsl #2
    3dac:	00000000 	andeq	r0, r0, r0
    3db0:	00010000 	andeq	r0, r1, r0
    3db4:	00000053 	andeq	r0, r0, r3, asr r0
    3db8:	00000000 	andeq	r0, r0, r0
    3dbc:	00000100 	andeq	r0, r0, r0, lsl #2
    3dc0:	00000001 	andeq	r0, r0, r1
    3dc4:	00000000 	andeq	r0, r0, r0
    3dc8:	72000300 	andvc	r0, r0, #0, 6
    3dcc:	00009f14 	andeq	r9, r0, r4, lsl pc
    3dd0:	00000000 	andeq	r0, r0, r0
    3dd4:	00010000 	andeq	r0, r1, r0
    3dd8:	00000052 	andeq	r0, r0, r2, asr r0
    3ddc:	00000000 	andeq	r0, r0, r0
    3de0:	00010100 	andeq	r0, r1, r0, lsl #2
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	01000000 	mrseq	r0, (UNDEF: 0)
    3dec:	00005300 	andeq	r5, r0, r0, lsl #6
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3e00:	00510001 	subseq	r0, r1, r1
	...
    3e10:	02000000 	andeq	r0, r0, #0
    3e14:	00007d00 	andeq	r7, r0, r0, lsl #26
    3e18:	00000000 	andeq	r0, r0, r0
    3e1c:	02000000 	andeq	r0, r0, #0
    3e20:	00087d00 	andeq	r7, r8, r0, lsl #26
    3e24:	00000000 	andeq	r0, r0, r0
    3e28:	02000000 	andeq	r0, r0, #0
    3e2c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    3e44:	01000000 	mrseq	r0, (UNDEF: 0)
    3e48:	00005000 	andeq	r5, r0, r0
    3e4c:	00000000 	andeq	r0, r0, r0
    3e50:	00040000 	andeq	r0, r4, r0
    3e54:	9f5001f3 	svcls	0x005001f3
	...
    3e60:	00500001 	subseq	r0, r0, r1
    3e64:	00000000 	andeq	r0, r0, r0
    3e68:	04000000 	streq	r0, [r0], #-0
    3e6c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3e80:	01000000 	mrseq	r0, (UNDEF: 0)
    3e84:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3e90:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3e9c:	14720003 	ldrbtne	r0, [r2], #-3
    3ea0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ea4:	00000000 	andeq	r0, r0, r0
    3ea8:	53000100 	movwpl	r0, #256	; 0x100
	...
    3eb4:	14720003 	ldrbtne	r0, [r2], #-3
    3eb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ebc:	00000000 	andeq	r0, r0, r0
    3ec0:	00010000 	andeq	r0, r1, r0
    3ec4:	00000000 	andeq	r0, r0, r0
    3ec8:	01000000 	mrseq	r0, (UNDEF: 0)
    3ecc:	00005300 	andeq	r5, r0, r0, lsl #6
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	00010000 	andeq	r0, r1, r0
    3ed8:	00000100 	andeq	r0, r0, r0, lsl #2
    3edc:	00000000 	andeq	r0, r0, r0
    3ee0:	00030000 	andeq	r0, r3, r0
    3ee4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3ee8:	00000000 	andeq	r0, r0, r0
    3eec:	01000000 	mrseq	r0, (UNDEF: 0)
    3ef0:	00005200 	andeq	r5, r0, r0, lsl #4
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3f04:	00530001 	subseq	r0, r3, r1
	...
    3f10:	00000001 	andeq	r0, r0, r1
    3f14:	00000000 	andeq	r0, r0, r0
    3f18:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3f2c:	00010000 	andeq	r0, r1, r0
    3f30:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3f3c:	00010000 	andeq	r0, r1, r0
    3f40:	00000000 	andeq	r0, r0, r0
    3f44:	03000000 	movweq	r0, #0
    3f48:	9f0c7200 	svcls	0x000c7200
	...
    3f54:	00530001 	subseq	r0, r3, r1
    3f58:	00000000 	andeq	r0, r0, r0
    3f5c:	03000000 	movweq	r0, #0
    3f60:	9f0c7200 	svcls	0x000c7200
	...
    3f6c:	00000100 	andeq	r0, r0, r0, lsl #2
    3f70:	00000000 	andeq	r0, r0, r0
    3f74:	00010000 	andeq	r0, r1, r0
    3f78:	00000053 	andeq	r0, r0, r3, asr r0
    3f7c:	00000000 	andeq	r0, r0, r0
    3f80:	00000100 	andeq	r0, r0, r0, lsl #2
    3f84:	00000001 	andeq	r0, r0, r1
    3f88:	00000000 	andeq	r0, r0, r0
    3f8c:	72000300 	andvc	r0, r0, #0, 6
    3f90:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3f94:	00000000 	andeq	r0, r0, r0
    3f98:	00010000 	andeq	r0, r1, r0
    3f9c:	00000052 	andeq	r0, r0, r2, asr r0
    3fa0:	00000000 	andeq	r0, r0, r0
    3fa4:	00010100 	andeq	r0, r1, r0, lsl #2
    3fa8:	00000000 	andeq	r0, r0, r0
    3fac:	01000000 	mrseq	r0, (UNDEF: 0)
    3fb0:	00005300 	andeq	r5, r0, r0, lsl #6
    3fb4:	00000000 	andeq	r0, r0, r0
    3fb8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3fc4:	00510001 	subseq	r0, r1, r1
	...
    3fd8:	53000100 	movwpl	r0, #256	; 0x100
	...
    3fe8:	00000100 	andeq	r0, r0, r0, lsl #2
    3fec:	00000000 	andeq	r0, r0, r0
    3ff0:	00030000 	andeq	r0, r3, r0
    3ff4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3ff8:	00000000 	andeq	r0, r0, r0
    3ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    4000:	00005300 	andeq	r5, r0, r0, lsl #6
    4004:	00000000 	andeq	r0, r0, r0
    4008:	00030000 	andeq	r0, r3, r0
    400c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    4018:	00000001 	andeq	r0, r0, r1
    401c:	00000000 	andeq	r0, r0, r0
    4020:	53000100 	movwpl	r0, #256	; 0x100
	...
    402c:	01000001 	tsteq	r0, r1
	...
    4038:	14720003 	ldrbtne	r0, [r2], #-3
    403c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4040:	00000000 	andeq	r0, r0, r0
    4044:	52000100 	andpl	r0, r0, #0, 2
	...
    4050:	00000101 	andeq	r0, r0, r1, lsl #2
    4054:	00000000 	andeq	r0, r0, r0
    4058:	00010000 	andeq	r0, r1, r0
    405c:	00000053 	andeq	r0, r0, r3, asr r0
    4060:	00000000 	andeq	r0, r0, r0
    4064:	00010000 	andeq	r0, r1, r0
    4068:	00000000 	andeq	r0, r0, r0
    406c:	01000000 	mrseq	r0, (UNDEF: 0)
    4070:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4084:	00530001 	subseq	r0, r3, r1
	...
    4094:	00000001 	andeq	r0, r0, r1
    4098:	00000000 	andeq	r0, r0, r0
    409c:	72000300 	andvc	r0, r0, #0, 6
    40a0:	00009f14 	andeq	r9, r0, r4, lsl pc
    40a4:	00000000 	andeq	r0, r0, r0
    40a8:	00010000 	andeq	r0, r1, r0
    40ac:	00000053 	andeq	r0, r0, r3, asr r0
    40b0:	00000000 	andeq	r0, r0, r0
    40b4:	72000300 	andvc	r0, r0, #0, 6
    40b8:	00009f14 	andeq	r9, r0, r4, lsl pc
    40bc:	00000000 	andeq	r0, r0, r0
    40c0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    40cc:	00530001 	subseq	r0, r3, r1
    40d0:	00000000 	andeq	r0, r0, r0
    40d4:	01000000 	mrseq	r0, (UNDEF: 0)
    40d8:	00010000 	andeq	r0, r1, r0
    40dc:	00000000 	andeq	r0, r0, r0
    40e0:	03000000 	movweq	r0, #0
    40e4:	9f147200 	svcls	0x00147200
	...
    40f0:	00520001 	subseq	r0, r2, r1
    40f4:	00000000 	andeq	r0, r0, r0
    40f8:	01000000 	mrseq	r0, (UNDEF: 0)
    40fc:	00000001 	andeq	r0, r0, r1
    4100:	00000000 	andeq	r0, r0, r0
    4104:	53000100 	movwpl	r0, #256	; 0x100
	...
    4110:	00000100 	andeq	r0, r0, r0, lsl #2
    4114:	00000000 	andeq	r0, r0, r0
    4118:	00010000 	andeq	r0, r1, r0
    411c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4130:	01000000 	mrseq	r0, (UNDEF: 0)
    4134:	00005000 	andeq	r5, r0, r0
    4138:	00000000 	andeq	r0, r0, r0
    413c:	00040000 	andeq	r0, r4, r0
    4140:	9f5001f3 	svcls	0x005001f3
	...
    414c:	00500001 	subseq	r0, r0, r1
    4150:	00000000 	andeq	r0, r0, r0
    4154:	02000000 	andeq	r0, r0, #0
	...
    4168:	30000200 	andcc	r0, r0, r0, lsl #4
    416c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4170:	00000000 	andeq	r0, r0, r0
    4174:	72000800 	andvc	r0, r0, #0, 16
    4178:	082e3000 	stmdaeq	lr!, {ip, sp}
    417c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    4180:	00000000 	andeq	r0, r0, r0
    4184:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4188:	30007200 	andcc	r7, r0, r0, lsl #4
    418c:	1aff082e 	bne	fffc624c <_estack+0xdffc5014>
    4190:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4194:	00000000 	andeq	r0, r0, r0
    4198:	72000800 	andvc	r0, r0, #0, 16
    419c:	082e3000 	stmdaeq	lr!, {ip, sp}
    41a0:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    41a4:	00000000 	andeq	r0, r0, r0
    41a8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    41ac:	30007200 	andcc	r7, r0, r0, lsl #4
    41b0:	1aff082e 	bne	fffc6270 <_estack+0xdffc5038>
    41b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    41c4:	01000000 	mrseq	r0, (UNDEF: 0)
    41c8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    41d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    41e0:	14720003 	ldrbtne	r0, [r2], #-3
    41e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    41e8:	00000000 	andeq	r0, r0, r0
    41ec:	53000100 	movwpl	r0, #256	; 0x100
	...
    41f8:	14720003 	ldrbtne	r0, [r2], #-3
    41fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4200:	00000000 	andeq	r0, r0, r0
    4204:	00010000 	andeq	r0, r1, r0
    4208:	00000000 	andeq	r0, r0, r0
    420c:	01000000 	mrseq	r0, (UNDEF: 0)
    4210:	00005300 	andeq	r5, r0, r0, lsl #6
    4214:	00000000 	andeq	r0, r0, r0
    4218:	00010000 	andeq	r0, r1, r0
    421c:	00000100 	andeq	r0, r0, r0, lsl #2
    4220:	00000000 	andeq	r0, r0, r0
    4224:	00030000 	andeq	r0, r3, r0
    4228:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    422c:	00000000 	andeq	r0, r0, r0
    4230:	01000000 	mrseq	r0, (UNDEF: 0)
    4234:	00005200 	andeq	r5, r0, r0, lsl #4
    4238:	00000000 	andeq	r0, r0, r0
    423c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4248:	00530001 	subseq	r0, r3, r1
	...
    4254:	00000001 	andeq	r0, r0, r1
    4258:	00000000 	andeq	r0, r0, r0
    425c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4270:	00010000 	andeq	r0, r1, r0
    4274:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4280:	00010000 	andeq	r0, r1, r0
    4284:	00000000 	andeq	r0, r0, r0
    4288:	03000000 	movweq	r0, #0
    428c:	9f0c7200 	svcls	0x000c7200
	...
    4298:	00530001 	subseq	r0, r3, r1
    429c:	00000000 	andeq	r0, r0, r0
    42a0:	03000000 	movweq	r0, #0
    42a4:	9f0c7200 	svcls	0x000c7200
	...
    42b0:	00000100 	andeq	r0, r0, r0, lsl #2
    42b4:	00000000 	andeq	r0, r0, r0
    42b8:	00010000 	andeq	r0, r1, r0
    42bc:	00000053 	andeq	r0, r0, r3, asr r0
    42c0:	00000000 	andeq	r0, r0, r0
    42c4:	00000100 	andeq	r0, r0, r0, lsl #2
    42c8:	00000001 	andeq	r0, r0, r1
    42cc:	00000000 	andeq	r0, r0, r0
    42d0:	72000300 	andvc	r0, r0, #0, 6
    42d4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    42d8:	00000000 	andeq	r0, r0, r0
    42dc:	00010000 	andeq	r0, r1, r0
    42e0:	00000052 	andeq	r0, r0, r2, asr r0
    42e4:	00000000 	andeq	r0, r0, r0
    42e8:	00010100 	andeq	r0, r1, r0, lsl #2
    42ec:	00000000 	andeq	r0, r0, r0
    42f0:	01000000 	mrseq	r0, (UNDEF: 0)
    42f4:	00005300 	andeq	r5, r0, r0, lsl #6
    42f8:	00000000 	andeq	r0, r0, r0
    42fc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4308:	00510001 	subseq	r0, r1, r1
	...
    431c:	53000100 	movwpl	r0, #256	; 0x100
	...
    432c:	00000100 	andeq	r0, r0, r0, lsl #2
    4330:	00000000 	andeq	r0, r0, r0
    4334:	00030000 	andeq	r0, r3, r0
    4338:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    433c:	00000000 	andeq	r0, r0, r0
    4340:	01000000 	mrseq	r0, (UNDEF: 0)
    4344:	00005300 	andeq	r5, r0, r0, lsl #6
    4348:	00000000 	andeq	r0, r0, r0
    434c:	00030000 	andeq	r0, r3, r0
    4350:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    435c:	00000001 	andeq	r0, r0, r1
    4360:	00000000 	andeq	r0, r0, r0
    4364:	53000100 	movwpl	r0, #256	; 0x100
	...
    4370:	01000001 	tsteq	r0, r1
	...
    437c:	14720003 	ldrbtne	r0, [r2], #-3
    4380:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4384:	00000000 	andeq	r0, r0, r0
    4388:	52000100 	andpl	r0, r0, #0, 2
	...
    4394:	00000101 	andeq	r0, r0, r1, lsl #2
    4398:	00000000 	andeq	r0, r0, r0
    439c:	00010000 	andeq	r0, r1, r0
    43a0:	00000053 	andeq	r0, r0, r3, asr r0
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	00010000 	andeq	r0, r1, r0
    43ac:	00000000 	andeq	r0, r0, r0
    43b0:	01000000 	mrseq	r0, (UNDEF: 0)
    43b4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    43c8:	00530001 	subseq	r0, r3, r1
	...
    43d8:	00000001 	andeq	r0, r0, r1
    43dc:	00000000 	andeq	r0, r0, r0
    43e0:	72000300 	andvc	r0, r0, #0, 6
    43e4:	00009f14 	andeq	r9, r0, r4, lsl pc
    43e8:	00000000 	andeq	r0, r0, r0
    43ec:	00010000 	andeq	r0, r1, r0
    43f0:	00000053 	andeq	r0, r0, r3, asr r0
    43f4:	00000000 	andeq	r0, r0, r0
    43f8:	72000300 	andvc	r0, r0, #0, 6
    43fc:	00009f14 	andeq	r9, r0, r4, lsl pc
    4400:	00000000 	andeq	r0, r0, r0
    4404:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4410:	00530001 	subseq	r0, r3, r1
    4414:	00000000 	andeq	r0, r0, r0
    4418:	01000000 	mrseq	r0, (UNDEF: 0)
    441c:	00010000 	andeq	r0, r1, r0
    4420:	00000000 	andeq	r0, r0, r0
    4424:	03000000 	movweq	r0, #0
    4428:	9f147200 	svcls	0x00147200
	...
    4434:	00520001 	subseq	r0, r2, r1
    4438:	00000000 	andeq	r0, r0, r0
    443c:	01000000 	mrseq	r0, (UNDEF: 0)
    4440:	00000001 	andeq	r0, r0, r1
    4444:	00000000 	andeq	r0, r0, r0
    4448:	53000100 	movwpl	r0, #256	; 0x100
	...
    4454:	00000100 	andeq	r0, r0, r0, lsl #2
    4458:	00000000 	andeq	r0, r0, r0
    445c:	00010000 	andeq	r0, r1, r0
    4460:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4470:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    447c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4480:	00000008 	andeq	r0, r0, r8
	...
    44a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    44ac:	01f30004 	mvnseq	r0, r4
    44b0:	00009f50 	andeq	r9, r0, r0, asr pc
    44b4:	00000000 	andeq	r0, r0, r0
    44b8:	00010000 	andeq	r0, r1, r0
    44bc:	00000050 	andeq	r0, r0, r0, asr r0
    44c0:	00000000 	andeq	r0, r0, r0
    44c4:	f3000400 	vshl.u8	d0, d0, d0
    44c8:	009f5001 	addseq	r5, pc, r1
    44cc:	00000000 	andeq	r0, r0, r0
    44d0:	01000000 	mrseq	r0, (UNDEF: 0)
    44d4:	00005000 	andeq	r5, r0, r0
    44d8:	00000000 	andeq	r0, r0, r0
    44dc:	00040000 	andeq	r0, r4, r0
    44e0:	9f5001f3 	svcls	0x005001f3
	...
    44ec:	00500001 	subseq	r0, r0, r1
    44f0:	00000000 	andeq	r0, r0, r0
    44f4:	04000000 	streq	r0, [r0], #-0
    44f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    44fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4514:	01000000 	mrseq	r0, (UNDEF: 0)
    4518:	00005100 	andeq	r5, r0, r0, lsl #2
    451c:	00000000 	andeq	r0, r0, r0
    4520:	00040000 	andeq	r0, r4, r0
    4524:	9f5101f3 	svcls	0x005101f3
	...
    4530:	00510001 	subseq	r0, r1, r1
    4534:	00000000 	andeq	r0, r0, r0
    4538:	04000000 	streq	r0, [r0], #-0
    453c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4540:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4544:	00000000 	andeq	r0, r0, r0
    4548:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4564:	00010000 	andeq	r0, r1, r0
    4568:	00000052 	andeq	r0, r0, r2, asr r0
    456c:	00000000 	andeq	r0, r0, r0
    4570:	f3000400 	vshl.u8	d0, d0, d0
    4574:	009f5201 	addseq	r5, pc, r1, lsl #4
    4578:	00000000 	andeq	r0, r0, r0
    457c:	01000000 	mrseq	r0, (UNDEF: 0)
    4580:	00005200 	andeq	r5, r0, r0, lsl #4
    4584:	00000000 	andeq	r0, r0, r0
    4588:	00040000 	andeq	r0, r4, r0
    458c:	9f5201f3 	svcls	0x005201f3
	...
    4598:	00520001 	subseq	r0, r2, r1
	...
    45a8:	02000000 	andeq	r0, r0, #0
    45ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    45b0:	00000000 	andeq	r0, r0, r0
    45b4:	02000000 	andeq	r0, r0, #0
    45b8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    45d8:	01000000 	mrseq	r0, (UNDEF: 0)
    45dc:	00005000 	andeq	r5, r0, r0
    45e0:	00000000 	andeq	r0, r0, r0
    45e4:	00040000 	andeq	r0, r4, r0
    45e8:	9f5001f3 	svcls	0x005001f3
	...
    45f4:	00500001 	subseq	r0, r0, r1
    45f8:	00000000 	andeq	r0, r0, r0
    45fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4600:	00005400 	andeq	r5, r0, r0, lsl #8
    4604:	00000000 	andeq	r0, r0, r0
    4608:	00010000 	andeq	r0, r1, r0
    460c:	00000050 	andeq	r0, r0, r0, asr r0
    4610:	00000000 	andeq	r0, r0, r0
    4614:	f3000400 	vshl.u8	d0, d0, d0
    4618:	009f5001 	addseq	r5, pc, r1
    461c:	00000000 	andeq	r0, r0, r0
    4620:	01000000 	mrseq	r0, (UNDEF: 0)
    4624:	00005000 	andeq	r5, r0, r0
    4628:	00000000 	andeq	r0, r0, r0
    462c:	00010000 	andeq	r0, r1, r0
    4630:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4648:	01000000 	mrseq	r0, (UNDEF: 0)
    464c:	00005100 	andeq	r5, r0, r0, lsl #2
    4650:	00000000 	andeq	r0, r0, r0
    4654:	00040000 	andeq	r0, r4, r0
    4658:	9f5101f3 	svcls	0x005101f3
	...
    4664:	00510001 	subseq	r0, r1, r1
    4668:	00000000 	andeq	r0, r0, r0
    466c:	04000000 	streq	r0, [r0], #-0
    4670:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4674:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4678:	00000000 	andeq	r0, r0, r0
    467c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4698:	00010000 	andeq	r0, r1, r0
    469c:	00000052 	andeq	r0, r0, r2, asr r0
    46a0:	00000000 	andeq	r0, r0, r0
    46a4:	f3000400 	vshl.u8	d0, d0, d0
    46a8:	009f5201 	addseq	r5, pc, r1, lsl #4
    46ac:	00000000 	andeq	r0, r0, r0
    46b0:	01000000 	mrseq	r0, (UNDEF: 0)
    46b4:	00005200 	andeq	r5, r0, r0, lsl #4
    46b8:	00000000 	andeq	r0, r0, r0
    46bc:	00040000 	andeq	r0, r4, r0
    46c0:	9f5201f3 	svcls	0x005201f3
	...
    46cc:	00520001 	subseq	r0, r2, r1
    46d0:	00000000 	andeq	r0, r0, r0
    46d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    46e0:	f2000600 	vmax.s8	d0, d0, d0
    46e4:	00006b3d 	andeq	r6, r0, sp, lsr fp
	...
    46f8:	01000000 	mrseq	r0, (UNDEF: 0)
    46fc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4708:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4714:	14720003 	ldrbtne	r0, [r2], #-3
    4718:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    471c:	00000000 	andeq	r0, r0, r0
    4720:	53000100 	movwpl	r0, #256	; 0x100
	...
    472c:	14720003 	ldrbtne	r0, [r2], #-3
    4730:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4734:	00000000 	andeq	r0, r0, r0
    4738:	00010000 	andeq	r0, r1, r0
    473c:	00000000 	andeq	r0, r0, r0
    4740:	01000000 	mrseq	r0, (UNDEF: 0)
    4744:	00005300 	andeq	r5, r0, r0, lsl #6
    4748:	00000000 	andeq	r0, r0, r0
    474c:	00010000 	andeq	r0, r1, r0
    4750:	00000100 	andeq	r0, r0, r0, lsl #2
    4754:	00000000 	andeq	r0, r0, r0
    4758:	00030000 	andeq	r0, r3, r0
    475c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4760:	00000000 	andeq	r0, r0, r0
    4764:	01000000 	mrseq	r0, (UNDEF: 0)
    4768:	00005200 	andeq	r5, r0, r0, lsl #4
    476c:	00000000 	andeq	r0, r0, r0
    4770:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    477c:	00530001 	subseq	r0, r3, r1
	...
    4788:	00000001 	andeq	r0, r0, r1
    478c:	00000000 	andeq	r0, r0, r0
    4790:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    47a4:	007d0002 	rsbseq	r0, sp, r2
	...
    47b0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    47d4:	00500001 	subseq	r0, r0, r1
    47d8:	00000000 	andeq	r0, r0, r0
    47dc:	04000000 	streq	r0, [r0], #-0
    47e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    47e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    47e8:	00000000 	andeq	r0, r0, r0
    47ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    47f8:	01f30004 	mvnseq	r0, r4
    47fc:	00009f50 	andeq	r9, r0, r0, asr pc
    4800:	00000000 	andeq	r0, r0, r0
    4804:	00010000 	andeq	r0, r1, r0
    4808:	00000050 	andeq	r0, r0, r0, asr r0
    480c:	00000000 	andeq	r0, r0, r0
    4810:	f3000400 	vshl.u8	d0, d0, d0
    4814:	009f5001 	addseq	r5, pc, r1
    4818:	00000000 	andeq	r0, r0, r0
    481c:	01000000 	mrseq	r0, (UNDEF: 0)
    4820:	00005000 	andeq	r5, r0, r0
    4824:	00000000 	andeq	r0, r0, r0
    4828:	00040000 	andeq	r0, r4, r0
    482c:	9f5001f3 	svcls	0x005001f3
	...
    4848:	00010000 	andeq	r0, r1, r0
    484c:	00000051 	andeq	r0, r0, r1, asr r0
    4850:	00000000 	andeq	r0, r0, r0
    4854:	f3000400 	vshl.u8	d0, d0, d0
    4858:	009f5101 	addseq	r5, pc, r1, lsl #2
    485c:	00000000 	andeq	r0, r0, r0
    4860:	01000000 	mrseq	r0, (UNDEF: 0)
    4864:	00005100 	andeq	r5, r0, r0, lsl #2
    4868:	00000000 	andeq	r0, r0, r0
    486c:	00040000 	andeq	r0, r4, r0
    4870:	9f5101f3 	svcls	0x005101f3
	...
    487c:	00510001 	subseq	r0, r1, r1
	...
    4898:	52000100 	andpl	r0, r0, #0, 2
	...
    48a4:	01f30004 	mvnseq	r0, r4
    48a8:	00009f52 	andeq	r9, r0, r2, asr pc
    48ac:	00000000 	andeq	r0, r0, r0
    48b0:	00010000 	andeq	r0, r1, r0
    48b4:	00000052 	andeq	r0, r0, r2, asr r0
    48b8:	00000000 	andeq	r0, r0, r0
    48bc:	f3000400 	vshl.u8	d0, d0, d0
    48c0:	009f5201 	addseq	r5, pc, r1, lsl #4
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	01000000 	mrseq	r0, (UNDEF: 0)
    48cc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    48ec:	00010000 	andeq	r0, r1, r0
    48f0:	00000050 	andeq	r0, r0, r0, asr r0
    48f4:	00000000 	andeq	r0, r0, r0
    48f8:	f3000400 	vshl.u8	d0, d0, d0
    48fc:	009f5001 	addseq	r5, pc, r1
    4900:	00000000 	andeq	r0, r0, r0
    4904:	01000000 	mrseq	r0, (UNDEF: 0)
    4908:	00005000 	andeq	r5, r0, r0
    490c:	00000000 	andeq	r0, r0, r0
    4910:	00040000 	andeq	r0, r4, r0
    4914:	9f5001f3 	svcls	0x005001f3
	...
    4920:	00500001 	subseq	r0, r0, r1
    4924:	00000000 	andeq	r0, r0, r0
    4928:	04000000 	streq	r0, [r0], #-0
    492c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4930:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4934:	00000000 	andeq	r0, r0, r0
    4938:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4944:	01f30004 	mvnseq	r0, r4
    4948:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4960:	00010000 	andeq	r0, r1, r0
    4964:	00000051 	andeq	r0, r0, r1, asr r0
    4968:	00000000 	andeq	r0, r0, r0
    496c:	70000200 	andvc	r0, r0, r0, lsl #4
    4970:	00000020 	andeq	r0, r0, r0, lsr #32
    4974:	00000000 	andeq	r0, r0, r0
    4978:	f3000400 	vshl.u8	d0, d0, d0
    497c:	009f5101 	addseq	r5, pc, r1, lsl #2
    4980:	00000000 	andeq	r0, r0, r0
    4984:	01000000 	mrseq	r0, (UNDEF: 0)
    4988:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    49a0:	00010000 	andeq	r0, r1, r0
    49a4:	00000052 	andeq	r0, r0, r2, asr r0
    49a8:	00000000 	andeq	r0, r0, r0
    49ac:	70000200 	andvc	r0, r0, r0, lsl #4
    49b0:	00000024 	andeq	r0, r0, r4, lsr #32
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	f3000400 	vshl.u8	d0, d0, d0
    49bc:	009f5201 	addseq	r5, pc, r1, lsl #4
    49c0:	00000000 	andeq	r0, r0, r0
    49c4:	01000000 	mrseq	r0, (UNDEF: 0)
    49c8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    49d8:	00020000 	andeq	r0, r2, r0
    49dc:	0000007d 	andeq	r0, r0, sp, ror r0
    49e0:	00000000 	andeq	r0, r0, r0
    49e4:	00020000 	andeq	r0, r2, r0
    49e8:	0000187d 	andeq	r1, r0, sp, ror r8
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	00020000 	andeq	r0, r2, r0
    49f4:	0000207d 	andeq	r2, r0, sp, ror r0
    49f8:	00000000 	andeq	r0, r0, r0
    49fc:	00020000 	andeq	r0, r2, r0
    4a00:	0000187d 	andeq	r1, r0, sp, ror r8
    4a04:	00000000 	andeq	r0, r0, r0
    4a08:	00020000 	andeq	r0, r2, r0
    4a0c:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    4a2c:	00010000 	andeq	r0, r1, r0
    4a30:	00000050 	andeq	r0, r0, r0, asr r0
    4a34:	00000000 	andeq	r0, r0, r0
    4a38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a44:	00500001 	subseq	r0, r0, r1
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a50:	00005400 	andeq	r5, r0, r0, lsl #8
    4a54:	00000000 	andeq	r0, r0, r0
    4a58:	00010000 	andeq	r0, r1, r0
    4a5c:	00000050 	andeq	r0, r0, r0, asr r0
    4a60:	00000000 	andeq	r0, r0, r0
    4a64:	f3000400 	vshl.u8	d0, d0, d0
    4a68:	009f5001 	addseq	r5, pc, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	01000000 	mrseq	r0, (UNDEF: 0)
    4a74:	00005000 	andeq	r5, r0, r0
    4a78:	00000000 	andeq	r0, r0, r0
    4a7c:	00010000 	andeq	r0, r1, r0
    4a80:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4a9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4aa0:	00005100 	andeq	r5, r0, r0, lsl #2
    4aa4:	00000000 	andeq	r0, r0, r0
    4aa8:	00010000 	andeq	r0, r1, r0
    4aac:	00000055 	andeq	r0, r0, r5, asr r0
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	58000100 	stmdapl	r0, {r8}
	...
    4ac0:	01f30004 	mvnseq	r0, r4
    4ac4:	00009f51 	andeq	r9, r0, r1, asr pc
    4ac8:	00000000 	andeq	r0, r0, r0
    4acc:	00010000 	andeq	r0, r1, r0
    4ad0:	00000051 	andeq	r0, r0, r1, asr r0
    4ad4:	00000000 	andeq	r0, r0, r0
    4ad8:	f3000400 	vshl.u8	d0, d0, d0
    4adc:	009f5101 	addseq	r5, pc, r1, lsl #2
    4ae0:	00000000 	andeq	r0, r0, r0
    4ae4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ae8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4b04:	00520001 	subseq	r0, r2, r1
    4b08:	00000000 	andeq	r0, r0, r0
    4b0c:	04000000 	streq	r0, [r0], #-0
    4b10:	5201f300 	andpl	pc, r1, #0, 6
    4b14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	52000100 	andpl	r0, r0, #0, 2
	...
    4b28:	01f30004 	mvnseq	r0, r4
    4b2c:	00009f52 	andeq	r9, r0, r2, asr pc
    4b30:	00000000 	andeq	r0, r0, r0
    4b34:	00010000 	andeq	r0, r1, r0
    4b38:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4b4c:	53000100 	movwpl	r0, #256	; 0x100
	...
    4b58:	00560001 	subseq	r0, r6, r1
	...
    4b6c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4b78:	01000000 	mrseq	r0, (UNDEF: 0)
    4b7c:	00000001 	andeq	r0, r0, r1
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	00010000 	andeq	r0, r1, r0
    4b88:	00000058 	andeq	r0, r0, r8, asr r0
    4b8c:	00000000 	andeq	r0, r0, r0
    4b90:	78000300 	stmdavc	r0, {r8, r9}
    4b94:	00009f7e 	andeq	r9, r0, lr, ror pc
    4b98:	00000000 	andeq	r0, r0, r0
    4b9c:	00010000 	andeq	r0, r1, r0
    4ba0:	00000058 	andeq	r0, r0, r8, asr r0
    4ba4:	00000000 	andeq	r0, r0, r0
    4ba8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4bb8:	02000000 	andeq	r0, r0, #0
    4bbc:	009f3000 	addseq	r3, pc, r0
    4bc0:	00000000 	andeq	r0, r0, r0
    4bc4:	01000000 	mrseq	r0, (UNDEF: 0)
    4bc8:	00005000 	andeq	r5, r0, r0
    4bcc:	00000000 	andeq	r0, r0, r0
    4bd0:	00010000 	andeq	r0, r1, r0
    4bd4:	00000057 	andeq	r0, r0, r7, asr r0
    4bd8:	00000000 	andeq	r0, r0, r0
    4bdc:	30000200 	andcc	r0, r0, r0, lsl #4
    4be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	30000200 	andcc	r0, r0, r0, lsl #4
    4bec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4bf0:	00000000 	andeq	r0, r0, r0
    4bf4:	000ca800 	andeq	sl, ip, r0, lsl #16
    4bf8:	000cac08 	andeq	sl, ip, r8, lsl #24
    4bfc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c00:	000cac00 	andeq	sl, ip, r0, lsl #24
    4c04:	000cae08 	andeq	sl, ip, r8, lsl #28
    4c08:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c0c:	000cae18 	andeq	sl, ip, r8, lsl lr
    4c10:	000d6c08 	andeq	r6, sp, r8, lsl #24
    4c14:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c18:	000d6c20 	andeq	r6, sp, r0, lsr #24
    4c1c:	000d7008 	andeq	r7, sp, r8
    4c20:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c24:	000d7018 	andeq	r7, sp, r8, lsl r0
    4c28:	000d7408 	andeq	r7, sp, r8, lsl #8
    4c2c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c30:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    4c48:	000ca800 	andeq	sl, ip, r0, lsl #16
    4c4c:	000cc808 	andeq	ip, ip, r8, lsl #16
    4c50:	50000108 	andpl	r0, r0, r8, lsl #2
    4c54:	08000cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp}
    4c58:	08000cca 	stmdaeq	r0, {r1, r3, r6, r7, sl, fp}
    4c5c:	ca540001 	bgt	1504c68 <_Min_Heap_Size+0x1504468>
    4c60:	d708000c 	strle	r0, [r8, -ip]
    4c64:	0108000c 	tsteq	r8, ip
    4c68:	0cd75000 	ldcleq	0, cr5, [r7], {0}
    4c6c:	0d680800 	stcleq	8, cr0, [r8, #-0]
    4c70:	00010800 	andeq	r0, r1, r0, lsl #16
    4c74:	000d6854 	andeq	r6, sp, r4, asr r8
    4c78:	000d6a08 	andeq	r6, sp, r8, lsl #20
    4c7c:	50000108 	andpl	r0, r0, r8, lsl #2
    4c80:	08000d6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl, fp}
    4c84:	08000d70 	stmdaeq	r0, {r4, r5, r6, r8, sl, fp}
    4c88:	01f30004 	mvnseq	r0, r4
    4c8c:	0d709f50 	ldcleq	15, cr9, [r0, #-320]!	; 0xfffffec0
    4c90:	0d720800 	ldcleq	8, cr0, [r2, #-0]
    4c94:	00010800 	andeq	r0, r1, r0, lsl #16
    4c98:	000d7250 	andeq	r7, sp, r0, asr r2
    4c9c:	000d7408 	andeq	r7, sp, r8, lsl #8
    4ca0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    4cbc:	0ca80000 	stceq	0, cr0, [r8]
    4cc0:	0cd70800 	ldcleq	8, cr0, [r7], {0}
    4cc4:	00010800 	andeq	r0, r1, r0, lsl #16
    4cc8:	000cd751 	andeq	sp, ip, r1, asr r7
    4ccc:	000cfa08 	andeq	pc, ip, r8, lsl #20
    4cd0:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    4cd4:	08000cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp}
    4cd8:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
    4cdc:	01f30004 	mvnseq	r0, r4
    4ce0:	0d409f51 	stcleq	15, cr9, [r0, #-324]	; 0xfffffebc
    4ce4:	0d440800 	stcleq	8, cr0, [r4, #-0]
    4ce8:	00010800 	andeq	r0, r1, r0, lsl #16
    4cec:	000d4455 	andeq	r4, sp, r5, asr r4
    4cf0:	000d4608 	andeq	r4, sp, r8, lsl #12
    4cf4:	58000108 	stmdapl	r0, {r3, r8}
    4cf8:	08000d46 	stmdaeq	r0, {r1, r2, r6, r8, sl, fp}
    4cfc:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
    4d00:	01f30004 	mvnseq	r0, r4
    4d04:	0d689f51 	stcleq	15, cr9, [r8, #-324]!	; 0xfffffebc
    4d08:	0d6a0800 	stcleq	8, cr0, [sl, #-0]
    4d0c:	00010800 	andeq	r0, r1, r0, lsl #16
    4d10:	000d6a51 	andeq	r6, sp, r1, asr sl
    4d14:	000d7008 	andeq	r7, sp, r8
    4d18:	f3000408 	vshl.u8	d0, d8, d0
    4d1c:	709f5101 	addsvc	r5, pc, r1, lsl #2
    4d20:	7408000d 	strvc	r0, [r8], #-13
    4d24:	0108000d 	tsteq	r8, sp
    4d28:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4d3c:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
    4d40:	08000cd7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, sl, fp}
    4d44:	d7520001 	ldrble	r0, [r2, -r1]
    4d48:	6808000c 	stmdavs	r8, {r2, r3}
    4d4c:	0408000d 	streq	r0, [r8], #-13
    4d50:	5201f300 	andpl	pc, r1, #0, 6
    4d54:	000d689f 	muleq	sp, pc, r8	; <UNPREDICTABLE>
    4d58:	000d6a08 	andeq	r6, sp, r8, lsl #20
    4d5c:	52000108 	andpl	r0, r0, #8, 2
    4d60:	08000d6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl, fp}
    4d64:	08000d70 	stmdaeq	r0, {r4, r5, r6, r8, sl, fp}
    4d68:	01f30004 	mvnseq	r0, r4
    4d6c:	0d709f52 	ldcleq	15, cr9, [r0, #-328]!	; 0xfffffeb8
    4d70:	0d740800 	ldcleq	8, cr0, [r4, #-0]
    4d74:	00010800 	andeq	r0, r1, r0, lsl #16
    4d78:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4d84:	000ca800 	andeq	sl, ip, r0, lsl #16
    4d88:	000cb408 	andeq	fp, ip, r8, lsl #8
    4d8c:	53000108 	movwpl	r0, #264	; 0x108
    4d90:	08000cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp}
    4d94:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
    4d98:	00560001 	subseq	r0, r6, r1
	...
    4da4:	01010000 	mrseq	r0, (UNDEF: 1)
    4da8:	fa000000 	blx	4db0 <_Min_Heap_Size+0x45b0>
    4dac:	3a08000c 	bcc	204de4 <_Min_Heap_Size+0x2045e4>
    4db0:	0108000d 	tsteq	r8, sp
    4db4:	0d3a5500 	cfldr32eq	mvfx5, [sl, #-0]
    4db8:	0d3e0800 	ldceq	8, cr0, [lr, #-0]
    4dbc:	00030800 	andeq	r0, r3, r0, lsl #16
    4dc0:	3e9f7f75 	mrccc	15, 4, r7, cr15, cr5, {3}
    4dc4:	4008000d 	andmi	r0, r8, sp
    4dc8:	0108000d 	tsteq	r8, sp
    4dcc:	0d465500 	cfstr64eq	mvdx5, [r6, #-0]
    4dd0:	0d680800 	stcleq	8, cr0, [r8, #-0]
    4dd4:	00010800 	andeq	r0, r1, r0, lsl #16
    4dd8:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4de4:	00000101 	andeq	r0, r0, r1, lsl #2
    4de8:	000cfa00 	andeq	pc, ip, r0, lsl #20
    4dec:	000d0808 	andeq	r0, sp, r8, lsl #16
    4df0:	58000108 	stmdapl	r0, {r3, r8}
    4df4:	08000d08 	stmdaeq	r0, {r3, r8, sl, fp}
    4df8:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
    4dfc:	7e780003 	cdpvc	0, 7, cr0, cr8, cr3, {0}
    4e00:	000d109f 	muleq	sp, pc, r0	; <UNPREDICTABLE>
    4e04:	000d4008 	andeq	r4, sp, r8
    4e08:	58000108 	stmdapl	r0, {r3, r8}
    4e0c:	08000d46 	stmdaeq	r0, {r1, r2, r6, r8, sl, fp}
    4e10:	08000d68 	stmdaeq	r0, {r3, r5, r6, r8, sl, fp}
    4e14:	00580001 	subseq	r0, r8, r1
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	03000000 	movweq	r0, #0
	...
    4e2c:	000cb000 	andeq	fp, ip, r0
    4e30:	000cda08 	andeq	sp, ip, r8, lsl #20
    4e34:	30000208 	andcc	r0, r0, r8, lsl #4
    4e38:	000cda9f 	muleq	ip, pc, sl	; <UNPREDICTABLE>
    4e3c:	000cfa08 	andeq	pc, ip, r8, lsl #20
    4e40:	50000108 	andpl	r0, r0, r8, lsl #2
    4e44:	08000cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp}
    4e48:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
    4e4c:	40570001 	subsmi	r0, r7, r1
    4e50:	4608000d 	strmi	r0, [r8], -sp
    4e54:	0108000d 	tsteq	r8, sp
    4e58:	0d465000 	stcleq	0, cr5, [r6, #-0]
    4e5c:	0d680800 	stcleq	8, cr0, [r8, #-0]
    4e60:	00010800 	andeq	r0, r1, r0, lsl #16
    4e64:	000d6857 	andeq	r6, sp, r7, asr r8
    4e68:	000d6a08 	andeq	r6, sp, r8, lsl #20
    4e6c:	30000208 	andcc	r0, r0, r8, lsl #4
    4e70:	000d709f 	muleq	sp, pc, r0	; <UNPREDICTABLE>
    4e74:	000d7408 	andeq	r7, sp, r8, lsl #8
    4e78:	30000208 	andcc	r0, r0, r8, lsl #4
    4e7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4e8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4e98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4e9c:	00000008 	andeq	r0, r0, r8
    4ea0:	00000000 	andeq	r0, r0, r0
    4ea4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4ec0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4ecc:	00540001 	subseq	r0, r4, r1
    4ed0:	00000000 	andeq	r0, r0, r0
    4ed4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ed8:	00005000 	andeq	r5, r0, r0
    4edc:	00000000 	andeq	r0, r0, r0
    4ee0:	00040000 	andeq	r0, r4, r0
    4ee4:	9f5001f3 	svcls	0x005001f3
	...
    4ef8:	007d0002 	rsbseq	r0, sp, r2
	...
    4f04:	107d0002 	rsbsne	r0, sp, r2
	...
    4f10:	007d0002 	rsbseq	r0, sp, r2
	...
    4f2c:	00500001 	subseq	r0, r0, r1
    4f30:	00000000 	andeq	r0, r0, r0
    4f34:	01000000 	mrseq	r0, (UNDEF: 0)
    4f38:	00005400 	andeq	r5, r0, r0, lsl #8
    4f3c:	00000000 	andeq	r0, r0, r0
    4f40:	00010000 	andeq	r0, r1, r0
    4f44:	00000050 	andeq	r0, r0, r0, asr r0
    4f48:	00000000 	andeq	r0, r0, r0
    4f4c:	f3000400 	vshl.u8	d0, d0, d0
    4f50:	009f5001 	addseq	r5, pc, r1
	...
    4f68:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4f74:	01f30004 	mvnseq	r0, r4
    4f78:	00009f51 	andeq	r9, r0, r1, asr pc
    4f7c:	00000000 	andeq	r0, r0, r0
    4f80:	00010000 	andeq	r0, r1, r0
    4f84:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4f9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4fa0:	00005200 	andeq	r5, r0, r0, lsl #4
    4fa4:	00000000 	andeq	r0, r0, r0
    4fa8:	00010000 	andeq	r0, r1, r0
    4fac:	00000056 	andeq	r0, r0, r6, asr r0
    4fb0:	00000000 	andeq	r0, r0, r0
    4fb4:	f3000400 	vshl.u8	d0, d0, d0
    4fb8:	009f5201 	addseq	r5, pc, r1, lsl #4
    4fbc:	00000000 	andeq	r0, r0, r0
    4fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    4fc4:	00005600 	andeq	r5, r0, r0, lsl #12
    4fc8:	00000000 	andeq	r0, r0, r0
    4fcc:	00010000 	andeq	r0, r1, r0
    4fd0:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4fe0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4fec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4ff0:	00000010 	andeq	r0, r0, r0, lsl r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5014:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5020:	00540001 	subseq	r0, r4, r1
    5024:	00000000 	andeq	r0, r0, r0
    5028:	01000000 	mrseq	r0, (UNDEF: 0)
    502c:	00005000 	andeq	r5, r0, r0
    5030:	00000000 	andeq	r0, r0, r0
    5034:	00040000 	andeq	r0, r4, r0
    5038:	9f5001f3 	svcls	0x005001f3
	...
    5054:	00010000 	andeq	r0, r1, r0
    5058:	00000051 	andeq	r0, r0, r1, asr r0
    505c:	00000000 	andeq	r0, r0, r0
    5060:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    506c:	01f30004 	mvnseq	r0, r4
    5070:	00009f51 	andeq	r9, r0, r1, asr pc
    5074:	00000000 	andeq	r0, r0, r0
    5078:	00010000 	andeq	r0, r1, r0
    507c:	00000055 	andeq	r0, r0, r5, asr r0
    5080:	00000000 	andeq	r0, r0, r0
    5084:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5098:	007d0002 	rsbseq	r0, sp, r2
	...
    50a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    50b0:	007d0002 	rsbseq	r0, sp, r2
	...
    50cc:	00500001 	subseq	r0, r0, r1
    50d0:	00000000 	andeq	r0, r0, r0
    50d4:	01000000 	mrseq	r0, (UNDEF: 0)
    50d8:	00005400 	andeq	r5, r0, r0, lsl #8
    50dc:	00000000 	andeq	r0, r0, r0
    50e0:	00010000 	andeq	r0, r1, r0
    50e4:	00000050 	andeq	r0, r0, r0, asr r0
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	f3000400 	vshl.u8	d0, d0, d0
    50f0:	009f5001 	addseq	r5, pc, r1
    50f4:	00000000 	andeq	r0, r0, r0
    50f8:	7c000000 	stcvc	0, cr0, [r0], {-0}
    50fc:	8408000b 	strhi	r0, [r8], #-11
    5100:	0208000b 	andeq	r0, r8, #11
    5104:	84007d00 	strhi	r7, [r0], #-3328	; 0xfffff300
    5108:	9a08000b 	bls	20513c <_Min_Heap_Size+0x20493c>
    510c:	0208000c 	andeq	r0, r8, #12
    5110:	9a087d00 	bls	224518 <_Min_Heap_Size+0x223d18>
    5114:	a808000c 	stmdage	r8, {r2, r3}
    5118:	0208000c 	andeq	r0, r8, #12
    511c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    5130:	7c000000 	stcvc	0, cr0, [r0], {-0}
    5134:	b208000b 	andlt	r0, r8, #11
    5138:	0108000b 	tsteq	r8, fp
    513c:	0bb25000 	bleq	fec99144 <_estack+0xdec97f0c>
    5140:	0c3a0800 	ldceq	8, cr0, [sl], #-0
    5144:	00010800 	andeq	r0, r1, r0, lsl #16
    5148:	000c3a54 	andeq	r3, ip, r4, asr sl
    514c:	000c7008 	andeq	r7, ip, r8
    5150:	50000108 	andpl	r0, r0, r8, lsl #2
    5154:	08000c70 	stmdaeq	r0, {r4, r5, r6, sl, fp}
    5158:	08000c9a 	stmdaeq	r0, {r1, r3, r4, r7, sl, fp}
    515c:	9a540001 	bls	1505168 <_Min_Heap_Size+0x1504968>
    5160:	9c08000c 	stcls	0, cr0, [r8], {12}
    5164:	0108000c 	tsteq	r8, ip
    5168:	0c9c5000 	ldceq	0, cr5, [ip], {0}
    516c:	0ca80800 	stceq	8, cr0, [r8]
    5170:	00040800 	andeq	r0, r4, r0, lsl #16
    5174:	9f5001f3 	svcls	0x005001f3
	...
    5188:	007d0002 	rsbseq	r0, sp, r2
	...
    5194:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51a0:	08001140 	stmdaeq	r0, {r6, r8, ip}
    51a4:	08001142 	stmdaeq	r0, {r1, r6, r8, ip}
    51a8:	007d0002 	rsbseq	r0, sp, r2
    51ac:	08001142 	stmdaeq	r0, {r1, r6, r8, ip}
    51b0:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
    51b4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51c0:	08001120 	stmdaeq	r0, {r5, r8, ip}
    51c4:	08001122 	stmdaeq	r0, {r1, r5, r8, ip}
    51c8:	007d0002 	rsbseq	r0, sp, r2
    51cc:	08001122 	stmdaeq	r0, {r1, r5, r8, ip}
    51d0:	08001140 	stmdaeq	r0, {r6, r8, ip}
    51d4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51e8:	007d0002 	rsbseq	r0, sp, r2
	...
    51f4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5200:	00000001 	andeq	r0, r0, r1
    5204:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5210:	9f300002 	svcls	0x00300002
	...
    521c:	00520001 	subseq	r0, r2, r1
    5220:	00000000 	andeq	r0, r0, r0
    5224:	01000000 	mrseq	r0, (UNDEF: 0)
    5228:	00005200 	andeq	r5, r0, r0, lsl #4
    522c:	00000000 	andeq	r0, r0, r0
    5230:	00020000 	andeq	r0, r2, r0
    5234:	00009f30 	andeq	r9, r0, r0, lsr pc
    5238:	00000000 	andeq	r0, r0, r0
    523c:	00010000 	andeq	r0, r1, r0
    5240:	00000000 	andeq	r0, r0, r0
    5244:	00000100 	andeq	r0, r0, r0, lsl #2
    5248:	00000000 	andeq	r0, r0, r0
    524c:	00020000 	andeq	r0, r2, r0
    5250:	00009f30 	andeq	r9, r0, r0, lsr pc
    5254:	00000000 	andeq	r0, r0, r0
    5258:	00010000 	andeq	r0, r1, r0
    525c:	00000050 	andeq	r0, r0, r0, asr r0
    5260:	00000000 	andeq	r0, r0, r0
    5264:	30000200 	andcc	r0, r0, r0, lsl #4
    5268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    526c:	00000000 	andeq	r0, r0, r0
    5270:	30000200 	andcc	r0, r0, r0, lsl #4
    5274:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5278:	00000000 	andeq	r0, r0, r0
    527c:	00000100 	andeq	r0, r0, r0, lsl #2
    5280:	00010000 	andeq	r0, r1, r0
    5284:	00000000 	andeq	r0, r0, r0
    5288:	02000000 	andeq	r0, r0, #0
    528c:	009f3000 	addseq	r3, pc, r0
    5290:	00000000 	andeq	r0, r0, r0
    5294:	01000000 	mrseq	r0, (UNDEF: 0)
    5298:	00005300 	andeq	r5, r0, r0, lsl #6
    529c:	00000000 	andeq	r0, r0, r0
    52a0:	00020000 	andeq	r0, r2, r0
    52a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    52a8:	00000000 	andeq	r0, r0, r0
    52ac:	00020000 	andeq	r0, r2, r0
    52b0:	00000000 	andeq	r0, r0, r0
    52b4:	00000100 	andeq	r0, r0, r0, lsl #2
    52b8:	00000000 	andeq	r0, r0, r0
    52bc:	00020000 	andeq	r0, r2, r0
    52c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    52c4:	00000000 	andeq	r0, r0, r0
    52c8:	00010000 	andeq	r0, r1, r0
    52cc:	00000050 	andeq	r0, r0, r0, asr r0
    52d0:	00000000 	andeq	r0, r0, r0
    52d4:	30000200 	andcc	r0, r0, r0, lsl #4
    52d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    52dc:	00000000 	andeq	r0, r0, r0
    52e0:	0c000600 	stceq	6, cr0, [r0], {-0}
    52e4:	00f42400 	rscseq	r2, r4, r0, lsl #8
    52e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    52f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5304:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5308:	00000010 	andeq	r0, r0, r0, lsl r0
    530c:	00000000 	andeq	r0, r0, r0
    5310:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5314:	00000030 	andeq	r0, r0, r0, lsr r0
    5318:	00000000 	andeq	r0, r0, r0
    531c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5320:	00000010 	andeq	r0, r0, r0, lsl r0
    5324:	00000000 	andeq	r0, r0, r0
    5328:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    532c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
    5348:	01000000 	mrseq	r0, (UNDEF: 0)
    534c:	00005000 	andeq	r5, r0, r0
    5350:	00000000 	andeq	r0, r0, r0
    5354:	00010000 	andeq	r0, r1, r0
    5358:	00000056 	andeq	r0, r0, r6, asr r0
    535c:	00000000 	andeq	r0, r0, r0
    5360:	f3000400 	vshl.u8	d0, d0, d0
    5364:	009f5001 	addseq	r5, pc, r1
    5368:	00000000 	andeq	r0, r0, r0
    536c:	01000000 	mrseq	r0, (UNDEF: 0)
    5370:	00005000 	andeq	r5, r0, r0
    5374:	00000000 	andeq	r0, r0, r0
    5378:	00010000 	andeq	r0, r1, r0
    537c:	00000056 	andeq	r0, r0, r6, asr r0
    5380:	00000000 	andeq	r0, r0, r0
    5384:	f3000400 	vshl.u8	d0, d0, d0
    5388:	009f5001 	addseq	r5, pc, r1
    538c:	00000000 	andeq	r0, r0, r0
    5390:	01000000 	mrseq	r0, (UNDEF: 0)
    5394:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    53ac:	00010000 	andeq	r0, r1, r0
    53b0:	00000051 	andeq	r0, r0, r1, asr r0
    53b4:	00000000 	andeq	r0, r0, r0
    53b8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    53c4:	00510001 	subseq	r0, r1, r1
    53c8:	00000000 	andeq	r0, r0, r0
    53cc:	01000000 	mrseq	r0, (UNDEF: 0)
    53d0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    53f0:	00520001 	subseq	r0, r2, r1
    53f4:	00000000 	andeq	r0, r0, r0
    53f8:	01000000 	mrseq	r0, (UNDEF: 0)
    53fc:	00005400 	andeq	r5, r0, r0, lsl #8
    5400:	00000000 	andeq	r0, r0, r0
    5404:	00040000 	andeq	r0, r4, r0
    5408:	9f5201f3 	svcls	0x005201f3
	...
    5414:	00520001 	subseq	r0, r2, r1
    5418:	00000000 	andeq	r0, r0, r0
    541c:	01000000 	mrseq	r0, (UNDEF: 0)
    5420:	00005400 	andeq	r5, r0, r0, lsl #8
    5424:	00000000 	andeq	r0, r0, r0
    5428:	00040000 	andeq	r0, r4, r0
    542c:	9f5201f3 	svcls	0x005201f3
	...
    5438:	00540001 	subseq	r0, r4, r1
	...
    5448:	02000000 	andeq	r0, r0, #0
    544c:	00007d00 	andeq	r7, r0, r0, lsl #26
    5450:	00000000 	andeq	r0, r0, r0
    5454:	02000000 	andeq	r0, r0, #0
    5458:	00107d00 	andseq	r7, r0, r0, lsl #26
    545c:	00000000 	andeq	r0, r0, r0
    5460:	02000000 	andeq	r0, r0, #0
    5464:	00007d00 	andeq	r7, r0, r0, lsl #26
    5468:	00000000 	andeq	r0, r0, r0
    546c:	02000000 	andeq	r0, r0, #0
    5470:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5490:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    549c:	00540001 	subseq	r0, r4, r1
    54a0:	00000000 	andeq	r0, r0, r0
    54a4:	01000000 	mrseq	r0, (UNDEF: 0)
    54a8:	00005000 	andeq	r5, r0, r0
    54ac:	00000000 	andeq	r0, r0, r0
    54b0:	00010000 	andeq	r0, r1, r0
    54b4:	00000054 	andeq	r0, r0, r4, asr r0
    54b8:	00000000 	andeq	r0, r0, r0
    54bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    54c8:	01f30004 	mvnseq	r0, r4
    54cc:	00009f50 	andeq	r9, r0, r0, asr pc
    54d0:	00000000 	andeq	r0, r0, r0
    54d4:	00010000 	andeq	r0, r1, r0
    54d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    54f4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5500:	00550001 	subseq	r0, r5, r1
    5504:	00000000 	andeq	r0, r0, r0
    5508:	01000000 	mrseq	r0, (UNDEF: 0)
    550c:	00005100 	andeq	r5, r0, r0, lsl #2
    5510:	00000000 	andeq	r0, r0, r0
    5514:	00010000 	andeq	r0, r1, r0
    5518:	00000055 	andeq	r0, r0, r5, asr r0
    551c:	00000000 	andeq	r0, r0, r0
    5520:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    552c:	00550001 	subseq	r0, r5, r1
	...
    5538:	00000101 	andeq	r0, r0, r1, lsl #2
    553c:	00000000 	andeq	r0, r0, r0
    5540:	01000000 	mrseq	r0, (UNDEF: 0)
    5544:	00005000 	andeq	r5, r0, r0
    5548:	00000000 	andeq	r0, r0, r0
    554c:	00010000 	andeq	r0, r1, r0
    5550:	00000056 	andeq	r0, r0, r6, asr r0
	...
    5560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    556c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5570:	00000010 	andeq	r0, r0, r0, lsl r0
    5574:	00000000 	andeq	r0, r0, r0
    5578:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    557c:	00000018 	andeq	r0, r0, r8, lsl r0
    5580:	00000000 	andeq	r0, r0, r0
    5584:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5590:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5594:	00000018 	andeq	r0, r0, r8, lsl r0
    5598:	00000000 	andeq	r0, r0, r0
    559c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    55a0:	00000010 	andeq	r0, r0, r0, lsl r0
    55a4:	00000000 	andeq	r0, r0, r0
    55a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    55ac:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    55d4:	01000000 	mrseq	r0, (UNDEF: 0)
    55d8:	00005000 	andeq	r5, r0, r0
    55dc:	00000000 	andeq	r0, r0, r0
    55e0:	00010000 	andeq	r0, r1, r0
    55e4:	00000054 	andeq	r0, r0, r4, asr r0
    55e8:	00000000 	andeq	r0, r0, r0
    55ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    55f8:	00540001 	subseq	r0, r4, r1
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	04000000 	streq	r0, [r0], #-0
    5604:	5001f300 	andpl	pc, r1, r0, lsl #6
    5608:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    560c:	00000000 	andeq	r0, r0, r0
    5610:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    561c:	01f30004 	mvnseq	r0, r4
    5620:	00009f50 	andeq	r9, r0, r0, asr pc
    5624:	00000000 	andeq	r0, r0, r0
    5628:	00010000 	andeq	r0, r1, r0
    562c:	00000054 	andeq	r0, r0, r4, asr r0
    5630:	00000000 	andeq	r0, r0, r0
    5634:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5640:	01f30004 	mvnseq	r0, r4
    5644:	00009f50 	andeq	r9, r0, r0, asr pc
    5648:	00000000 	andeq	r0, r0, r0
    564c:	00010000 	andeq	r0, r1, r0
    5650:	00000054 	andeq	r0, r0, r4, asr r0
    5654:	00000000 	andeq	r0, r0, r0
    5658:	f3000400 	vshl.u8	d0, d0, d0
    565c:	009f5001 	addseq	r5, pc, r1
    5660:	00000000 	andeq	r0, r0, r0
    5664:	01000000 	mrseq	r0, (UNDEF: 0)
    5668:	00005400 	andeq	r5, r0, r0, lsl #8
    566c:	00000000 	andeq	r0, r0, r0
    5670:	01000000 	mrseq	r0, (UNDEF: 0)
    5674:	01000001 	tsteq	r0, r1
    5678:	01000001 	tsteq	r0, r1
    567c:	01000001 	tsteq	r0, r1
    5680:	01000001 	tsteq	r0, r1
    5684:	01000001 	tsteq	r0, r1
    5688:	01000001 	tsteq	r0, r1
    568c:	01000001 	tsteq	r0, r1
    5690:	01000001 	tsteq	r0, r1
    5694:	01000001 	tsteq	r0, r1
    5698:	00000001 	andeq	r0, r0, r1
    569c:	01000000 	mrseq	r0, (UNDEF: 0)
    56a0:	01000001 	tsteq	r0, r1
    56a4:	00000001 	andeq	r0, r0, r1
    56a8:	00000000 	andeq	r0, r0, r0
    56ac:	00010000 	andeq	r0, r1, r0
    56b0:	00000050 	andeq	r0, r0, r0, asr r0
    56b4:	00000000 	andeq	r0, r0, r0
    56b8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    56c4:	00500001 	subseq	r0, r0, r1
    56c8:	00000000 	andeq	r0, r0, r0
    56cc:	01000000 	mrseq	r0, (UNDEF: 0)
    56d0:	00005500 	andeq	r5, r0, r0, lsl #10
    56d4:	00000000 	andeq	r0, r0, r0
    56d8:	00010000 	andeq	r0, r1, r0
    56dc:	00000050 	andeq	r0, r0, r0, asr r0
    56e0:	00000000 	andeq	r0, r0, r0
    56e4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    56f0:	00500001 	subseq	r0, r0, r1
    56f4:	00000000 	andeq	r0, r0, r0
    56f8:	01000000 	mrseq	r0, (UNDEF: 0)
    56fc:	00005500 	andeq	r5, r0, r0, lsl #10
    5700:	00000000 	andeq	r0, r0, r0
    5704:	00010000 	andeq	r0, r1, r0
    5708:	00000050 	andeq	r0, r0, r0, asr r0
    570c:	00000000 	andeq	r0, r0, r0
    5710:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    571c:	00500001 	subseq	r0, r0, r1
    5720:	00000000 	andeq	r0, r0, r0
    5724:	01000000 	mrseq	r0, (UNDEF: 0)
    5728:	00005500 	andeq	r5, r0, r0, lsl #10
    572c:	00000000 	andeq	r0, r0, r0
    5730:	00010000 	andeq	r0, r1, r0
    5734:	00000050 	andeq	r0, r0, r0, asr r0
    5738:	00000000 	andeq	r0, r0, r0
    573c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5748:	00500001 	subseq	r0, r0, r1
    574c:	00000000 	andeq	r0, r0, r0
    5750:	01000000 	mrseq	r0, (UNDEF: 0)
    5754:	00005600 	andeq	r5, r0, r0, lsl #12
    5758:	00000000 	andeq	r0, r0, r0
    575c:	00010000 	andeq	r0, r1, r0
    5760:	00000050 	andeq	r0, r0, r0, asr r0
    5764:	00000000 	andeq	r0, r0, r0
    5768:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5774:	00500001 	subseq	r0, r0, r1
    5778:	00000000 	andeq	r0, r0, r0
    577c:	01000000 	mrseq	r0, (UNDEF: 0)
    5780:	00005500 	andeq	r5, r0, r0, lsl #10
    5784:	00000000 	andeq	r0, r0, r0
    5788:	00010000 	andeq	r0, r1, r0
    578c:	00000056 	andeq	r0, r0, r6, asr r0
    5790:	00000000 	andeq	r0, r0, r0
    5794:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    57a0:	00500001 	subseq	r0, r0, r1
    57a4:	00000000 	andeq	r0, r0, r0
    57a8:	01000000 	mrseq	r0, (UNDEF: 0)
    57ac:	00005400 	andeq	r5, r0, r0, lsl #8
    57b0:	00000000 	andeq	r0, r0, r0
    57b4:	00010000 	andeq	r0, r1, r0
    57b8:	00000050 	andeq	r0, r0, r0, asr r0
    57bc:	00000000 	andeq	r0, r0, r0
    57c0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    57d8:	00530001 	subseq	r0, r3, r1
    57dc:	00000000 	andeq	r0, r0, r0
    57e0:	01000000 	mrseq	r0, (UNDEF: 0)
    57e4:	00005300 	andeq	r5, r0, r0, lsl #6
    57e8:	00000000 	andeq	r0, r0, r0
    57ec:	02010000 	andeq	r0, r1, #0
    57f0:	00000002 	andeq	r0, r0, r2
	...
    5800:	00020000 	andeq	r0, r2, r0
    5804:	00009f30 	andeq	r9, r0, r0, lsr pc
    5808:	00000000 	andeq	r0, r0, r0
    580c:	00020000 	andeq	r0, r2, r0
    5810:	00009f31 	andeq	r9, r0, r1, lsr pc
    5814:	00000000 	andeq	r0, r0, r0
    5818:	00010000 	andeq	r0, r1, r0
    581c:	00000055 	andeq	r0, r0, r5, asr r0
    5820:	00000000 	andeq	r0, r0, r0
    5824:	30000200 	andcc	r0, r0, r0, lsl #4
    5828:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    582c:	00000000 	andeq	r0, r0, r0
    5830:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    583c:	00550001 	subseq	r0, r5, r1
	...
    584c:	02000000 	andeq	r0, r0, #0
    5850:	00007d00 	andeq	r7, r0, r0, lsl #26
    5854:	00000000 	andeq	r0, r0, r0
    5858:	02000000 	andeq	r0, r0, #0
    585c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    5874:	01000000 	mrseq	r0, (UNDEF: 0)
    5878:	00005000 	andeq	r5, r0, r0
    587c:	00000000 	andeq	r0, r0, r0
    5880:	00040000 	andeq	r0, r4, r0
    5884:	9f5001f3 	svcls	0x005001f3
	...
    5890:	00500001 	subseq	r0, r0, r1
    5894:	00000000 	andeq	r0, r0, r0
    5898:	04000000 	streq	r0, [r0], #-0
    589c:	5001f300 	andpl	pc, r1, r0, lsl #6
    58a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    58b0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    58bc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58c0:	0000000c 	andeq	r0, r0, ip
    58c4:	00000000 	andeq	r0, r0, r0
    58c8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58cc:	00000018 	andeq	r0, r0, r8, lsl r0
    58d0:	00000000 	andeq	r0, r0, r0
    58d4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58d8:	0000000c 	andeq	r0, r0, ip
    58dc:	00000000 	andeq	r0, r0, r0
    58e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58e4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    58fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5908:	00540001 	subseq	r0, r4, r1
    590c:	00000000 	andeq	r0, r0, r0
    5910:	01000000 	mrseq	r0, (UNDEF: 0)
    5914:	00005000 	andeq	r5, r0, r0
    5918:	00000000 	andeq	r0, r0, r0
    591c:	00010000 	andeq	r0, r1, r0
    5920:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5938:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5944:	01f30004 	mvnseq	r0, r4
    5948:	00009f51 	andeq	r9, r0, r1, asr pc
    594c:	00000000 	andeq	r0, r0, r0
    5950:	00010000 	andeq	r0, r1, r0
    5954:	00000051 	andeq	r0, r0, r1, asr r0
    5958:	00000000 	andeq	r0, r0, r0
    595c:	f3000400 	vshl.u8	d0, d0, d0
    5960:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5970:	02000000 	andeq	r0, r0, #0
    5974:	00007d00 	andeq	r7, r0, r0, lsl #26
    5978:	00000000 	andeq	r0, r0, r0
    597c:	02000000 	andeq	r0, r0, #0
    5980:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5998:	01000000 	mrseq	r0, (UNDEF: 0)
    599c:	00005000 	andeq	r5, r0, r0
    59a0:	00000000 	andeq	r0, r0, r0
    59a4:	00010000 	andeq	r0, r1, r0
    59a8:	00000055 	andeq	r0, r0, r5, asr r0
    59ac:	00000000 	andeq	r0, r0, r0
    59b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    59bc:	00550001 	subseq	r0, r5, r1
	...
    59d4:	01000000 	mrseq	r0, (UNDEF: 0)
    59d8:	00005100 	andeq	r5, r0, r0, lsl #2
    59dc:	00000000 	andeq	r0, r0, r0
    59e0:	00040000 	andeq	r0, r4, r0
    59e4:	9f5101f3 	svcls	0x005101f3
	...
    59f0:	00510001 	subseq	r0, r1, r1
    59f4:	00000000 	andeq	r0, r0, r0
    59f8:	04000000 	streq	r0, [r0], #-0
    59fc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5a00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5a10:	01000000 	mrseq	r0, (UNDEF: 0)
    5a14:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5a24:	00020000 	andeq	r0, r2, r0
    5a28:	0000007d 	andeq	r0, r0, sp, ror r0
    5a2c:	00000000 	andeq	r0, r0, r0
    5a30:	00020000 	andeq	r0, r2, r0
    5a34:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5a4c:	00010000 	andeq	r0, r1, r0
    5a50:	00000050 	andeq	r0, r0, r0, asr r0
    5a54:	00000000 	andeq	r0, r0, r0
    5a58:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5a64:	00500001 	subseq	r0, r0, r1
    5a68:	00000000 	andeq	r0, r0, r0
    5a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5a70:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5a88:	00010000 	andeq	r0, r1, r0
    5a8c:	00000051 	andeq	r0, r0, r1, asr r0
    5a90:	00000000 	andeq	r0, r0, r0
    5a94:	f3000400 	vshl.u8	d0, d0, d0
    5a98:	009f5101 	addseq	r5, pc, r1, lsl #2
    5a9c:	00000000 	andeq	r0, r0, r0
    5aa0:	01000000 	mrseq	r0, (UNDEF: 0)
    5aa4:	00005100 	andeq	r5, r0, r0, lsl #2
    5aa8:	00000000 	andeq	r0, r0, r0
    5aac:	00040000 	andeq	r0, r4, r0
    5ab0:	9f5101f3 	svcls	0x005101f3
	...
    5acc:	00520001 	subseq	r0, r2, r1
    5ad0:	00000000 	andeq	r0, r0, r0
    5ad4:	04000000 	streq	r0, [r0], #-0
    5ad8:	5201f300 	andpl	pc, r1, #0, 6
    5adc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5ae0:	00000000 	andeq	r0, r0, r0
    5ae4:	52000100 	andpl	r0, r0, #0, 2
	...
    5af0:	01f30004 	mvnseq	r0, r4
    5af4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    5b04:	00020000 	andeq	r0, r2, r0
    5b08:	0000007d 	andeq	r0, r0, sp, ror r0
    5b0c:	00000000 	andeq	r0, r0, r0
    5b10:	00020000 	andeq	r0, r2, r0
    5b14:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5b2c:	00010000 	andeq	r0, r1, r0
    5b30:	00000050 	andeq	r0, r0, r0, asr r0
    5b34:	00000000 	andeq	r0, r0, r0
    5b38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5b44:	00500001 	subseq	r0, r0, r1
    5b48:	00000000 	andeq	r0, r0, r0
    5b4c:	01000000 	mrseq	r0, (UNDEF: 0)
    5b50:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5b68:	00010000 	andeq	r0, r1, r0
    5b6c:	00000051 	andeq	r0, r0, r1, asr r0
    5b70:	00000000 	andeq	r0, r0, r0
    5b74:	f3000400 	vshl.u8	d0, d0, d0
    5b78:	009f5101 	addseq	r5, pc, r1, lsl #2
    5b7c:	00000000 	andeq	r0, r0, r0
    5b80:	01000000 	mrseq	r0, (UNDEF: 0)
    5b84:	00005100 	andeq	r5, r0, r0, lsl #2
    5b88:	00000000 	andeq	r0, r0, r0
    5b8c:	00040000 	andeq	r0, r4, r0
    5b90:	9f5101f3 	svcls	0x005101f3
	...
    5ba4:	00010000 	andeq	r0, r1, r0
    5ba8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    5bb8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5bc4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5bc8:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    5bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    5be0:	00005000 	andeq	r5, r0, r0
    5be4:	00000000 	andeq	r0, r0, r0
    5be8:	00010000 	andeq	r0, r1, r0
    5bec:	00000054 	andeq	r0, r0, r4, asr r0
    5bf0:	00000000 	andeq	r0, r0, r0
    5bf4:	f3000400 	vshl.u8	d0, d0, d0
    5bf8:	009f5001 	addseq	r5, pc, r1
	...
    5c10:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5c1c:	00550001 	subseq	r0, r5, r1
    5c20:	00000000 	andeq	r0, r0, r0
    5c24:	04000000 	streq	r0, [r0], #-0
    5c28:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5c2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5c3c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c40:	00005300 	andeq	r5, r0, r0, lsl #6
    5c44:	00000000 	andeq	r0, r0, r0
    5c48:	00020000 	andeq	r0, r2, r0
	...
    5c58:	00020000 	andeq	r0, r2, r0
    5c5c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5c60:	00000000 	andeq	r0, r0, r0
    5c64:	00010000 	andeq	r0, r1, r0
    5c68:	00000052 	andeq	r0, r0, r2, asr r0
    5c6c:	00000000 	andeq	r0, r0, r0
    5c70:	31000500 	tstcc	r0, r0, lsl #10
    5c74:	9f240073 	svcls	0x00240073
	...
    5c80:	00520001 	subseq	r0, r2, r1
    5c84:	00000000 	andeq	r0, r0, r0
    5c88:	03000000 	movweq	r0, #0
	...
    5c9c:	30000200 	andcc	r0, r0, r0, lsl #4
    5ca0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5ca4:	00000000 	andeq	r0, r0, r0
    5ca8:	5c000100 	stfpls	f0, [r0], {-0}
	...
    5cb4:	00720006 	rsbseq	r0, r2, r6
    5cb8:	9f1a0075 	svcls	0x001a0075
	...
    5cc4:	73310008 	teqvc	r1, #8
    5cc8:	00752400 	rsbseq	r2, r5, r0, lsl #8
    5ccc:	00009f1a 	andeq	r9, r0, sl, lsl pc
    5cd0:	00000000 	andeq	r0, r0, r0
    5cd4:	00010000 	andeq	r0, r1, r0
    5cd8:	0000005c 	andeq	r0, r0, ip, asr r0
    5cdc:	00000000 	andeq	r0, r0, r0
    5ce0:	00000400 	andeq	r0, r0, r0, lsl #8
    5ce4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5cf0:	30000200 	andcc	r0, r0, r0, lsl #4
    5cf4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5cf8:	00000000 	andeq	r0, r0, r0
    5cfc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d08:	00500001 	subseq	r0, r0, r1
    5d0c:	00000000 	andeq	r0, r0, r0
    5d10:	01000000 	mrseq	r0, (UNDEF: 0)
    5d14:	00005700 	andeq	r5, r0, r0, lsl #14
    5d18:	00000000 	andeq	r0, r0, r0
    5d1c:	11600000 	cmnne	r0, r0
    5d20:	11640800 	cmnne	r4, r0, lsl #16
    5d24:	00020800 	andeq	r0, r2, r0, lsl #16
    5d28:	1164007d 	smcne	16397	; 0x400d
    5d2c:	11660800 	cmnne	r6, r0, lsl #16
    5d30:	00020800 	andeq	r0, r2, r0, lsl #16
    5d34:	1166187d 	smcne	24973	; 0x618d
    5d38:	14340800 	ldrtne	r0, [r4], #-2048	; 0xfffff800
    5d3c:	00020800 	andeq	r0, r2, r0, lsl #16
    5d40:	1434207d 	ldrtne	r2, [r4], #-125	; 0xffffff83
    5d44:	14480800 	strbne	r0, [r8], #-2048	; 0xfffff800
    5d48:	00020800 	andeq	r0, r2, r0, lsl #16
    5d4c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    5d5c:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
    5d60:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
    5d64:	b4500001 	ldrblt	r0, [r0], #-1
    5d68:	38080011 	stmdacc	r8, {r0, r4}
    5d6c:	01080014 	tsteq	r8, r4, lsl r0
    5d70:	14385700 	ldrtne	r5, [r8], #-1792	; 0xfffff900
    5d74:	14480800 	strbne	r0, [r8], #-2048	; 0xfffff800
    5d78:	00040800 	andeq	r0, r4, r0, lsl #16
    5d7c:	9f5001f3 	svcls	0x005001f3
	...
    5d8c:	11600000 	cmnne	r0, r0
    5d90:	11b20800 			; <UNDEFINED> instruction: 0x11b20800
    5d94:	00010800 	andeq	r0, r1, r0, lsl #16
    5d98:	0011b251 	andseq	fp, r1, r1, asr r2
    5d9c:	00143808 	andseq	r3, r4, r8, lsl #16
    5da0:	56000108 	strpl	r0, [r0], -r8, lsl #2
    5da4:	08001438 	stmdaeq	r0, {r3, r4, r5, sl, ip}
    5da8:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
    5dac:	01f30004 	mvnseq	r0, r4
    5db0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5dbc:	08001214 	stmdaeq	r0, {r2, r4, r9, ip}
    5dc0:	08001438 	stmdaeq	r0, {r3, r4, r5, sl, ip}
    5dc4:	00540001 	subseq	r0, r4, r1
    5dc8:	00000000 	andeq	r0, r0, r0
    5dcc:	02000000 	andeq	r0, r0, #0
	...
    5de0:	00116a00 	andseq	r6, r1, r0, lsl #20
    5de4:	00121408 	andseq	r1, r2, r8, lsl #8
    5de8:	30000208 	andcc	r0, r0, r8, lsl #4
    5dec:	0012149f 	mulseq	r2, pc, r4	; <UNPREDICTABLE>
    5df0:	00123a08 	andseq	r3, r2, r8, lsl #20
    5df4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5df8:	0800123a 	stmdaeq	r0, {r1, r3, r4, r5, r9, ip}
    5dfc:	08001242 	stmdaeq	r0, {r1, r6, r9, ip}
    5e00:	74310005 	ldrtvc	r0, [r1], #-5
    5e04:	429f2400 	addsmi	r2, pc, #0, 8
    5e08:	4c080012 	stcmi	0, cr0, [r8], {18}
    5e0c:	01080012 	tsteq	r8, r2, lsl r0
    5e10:	124c5500 	subne	r5, ip, #0, 10
    5e14:	13300800 	teqne	r0, #0, 16
    5e18:	00050800 	andeq	r0, r5, r0, lsl #16
    5e1c:	24007431 	strcs	r7, [r0], #-1073	; 0xfffffbcf
    5e20:	0013389f 	mulseq	r3, pc, r8	; <UNPREDICTABLE>
    5e24:	00135208 	andseq	r5, r3, r8, lsl #4
    5e28:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5e2c:	08001352 	stmdaeq	r0, {r1, r4, r6, r8, r9, ip}
    5e30:	0800141c 	stmdaeq	r0, {r2, r3, r4, sl, ip}
    5e34:	74310005 	ldrtvc	r0, [r1], #-5
    5e38:	1c9f2400 	cfldrsne	mvf2, [pc], {0}
    5e3c:	1e080014 	mcrne	0, 0, r0, cr8, cr4, {0}
    5e40:	06080014 			; <UNDEFINED> instruction: 0x06080014
    5e44:	74007300 	strvc	r7, [r0], #-768	; 0xfffffd00
    5e48:	1e9f2400 	cdpne	4, 9, cr2, cr15, cr0, {0}
    5e4c:	32080014 	andcc	r0, r8, #20
    5e50:	05080014 	streq	r0, [r8, #-20]	; 0xffffffec
    5e54:	00743100 	rsbseq	r3, r4, r0, lsl #2
    5e58:	00009f24 	andeq	r9, r0, r4, lsr #30
    5e5c:	00000000 	andeq	r0, r0, r0
    5e60:	00030000 	andeq	r0, r3, r0
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	0800116a 	stmdaeq	r0, {r1, r3, r5, r6, r8, ip}
    5e6c:	08001214 	stmdaeq	r0, {r2, r4, r9, ip}
    5e70:	9f300002 	svcls	0x00300002
    5e74:	08001214 	stmdaeq	r0, {r2, r4, r9, ip}
    5e78:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
    5e7c:	3e580001 	cdpcc	0, 5, cr0, cr8, cr1, {0}
    5e80:	32080013 	andcc	r0, r8, #19
    5e84:	01080014 	tsteq	r8, r4, lsl r0
    5e88:	00005800 	andeq	r5, r0, r0, lsl #16
    5e8c:	00000000 	andeq	r0, r0, r0
    5e90:	00040000 	andeq	r0, r4, r0
	...
    5ec0:	116a0000 	cmnne	sl, r0
    5ec4:	12140800 	andsne	r0, r4, #0, 16
    5ec8:	00020800 	andeq	r0, r2, r0, lsl #16
    5ecc:	121c9f30 	andsne	r9, ip, #48, 30	; 0xc0
    5ed0:	122c0800 	eorne	r0, ip, #0, 16
    5ed4:	00010800 	andeq	r0, r1, r0, lsl #16
    5ed8:	00122c52 	andseq	r2, r2, r2, asr ip
    5edc:	00123008 	andseq	r3, r2, r8
    5ee0:	53000108 	movwpl	r0, #264	; 0x108
    5ee4:	08001230 	stmdaeq	r0, {r4, r5, r9, ip}
    5ee8:	0800123e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, ip}
    5eec:	3e520001 	cdpcc	0, 5, cr0, cr2, cr1, {0}
    5ef0:	42080012 	andmi	r0, r8, #18
    5ef4:	01080012 	tsteq	r8, r2, lsl r0
    5ef8:	12925500 	addsne	r5, r2, #0, 10
    5efc:	12a60800 	adcne	r0, r6, #0, 16
    5f00:	00010800 	andeq	r0, r1, r0, lsl #16
    5f04:	0012a650 	andseq	sl, r2, r0, asr r6
    5f08:	0012ac08 	andseq	sl, r2, r8, lsl #24
    5f0c:	53000108 	movwpl	r0, #264	; 0x108
    5f10:	080012b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, ip}
    5f14:	080012ca 	stmdaeq	r0, {r1, r3, r6, r7, r9, ip}
    5f18:	ca500001 	bgt	1405f24 <_Min_Heap_Size+0x1405724>
    5f1c:	d4080012 	strle	r0, [r8], #-18	; 0xffffffee
    5f20:	01080012 	tsteq	r8, r2, lsl r0
    5f24:	12d45300 	sbcsne	r5, r4, #0, 6
    5f28:	12d60800 	sbcsne	r0, r6, #0, 16
    5f2c:	00070800 	andeq	r0, r7, r0, lsl #16
    5f30:	24320072 	ldrtcs	r0, [r2], #-114	; 0xffffff8e
    5f34:	d6220071 			; <UNDEFINED> instruction: 0xd6220071
    5f38:	de080012 	mcrle	0, 0, r0, cr8, cr2, {0}
    5f3c:	01080012 	tsteq	r8, r2, lsl r0
    5f40:	12de5200 	sbcsne	r5, lr, #0, 4
    5f44:	12f00800 	rscsne	r0, r0, #0, 16
    5f48:	00010800 	andeq	r0, r1, r0, lsl #16
    5f4c:	0012f051 	andseq	pc, r2, r1, asr r0	; <UNPREDICTABLE>
    5f50:	0012f408 	andseq	pc, r2, r8, lsl #8
    5f54:	52000108 	andpl	r0, r0, #8, 2
    5f58:	080012f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, ip}
    5f5c:	08001306 	stmdaeq	r0, {r1, r2, r8, r9, ip}
    5f60:	06510001 	ldrbeq	r0, [r1], -r1
    5f64:	0a080013 	beq	205fb8 <_Min_Heap_Size+0x2057b8>
    5f68:	01080013 	tsteq	r8, r3, lsl r0
    5f6c:	130a5200 	movwne	r5, #41472	; 0xa200
    5f70:	131c0800 	tstne	ip, #0, 16
    5f74:	00010800 	andeq	r0, r1, r0, lsl #16
    5f78:	00131c51 	andseq	r1, r3, r1, asr ip
    5f7c:	00131e08 	andseq	r1, r3, r8, lsl #28
    5f80:	52000108 	andpl	r0, r0, #8, 2
    5f84:	0800131e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, ip}
    5f88:	0800132e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, ip}
    5f8c:	66530001 	ldrbvs	r0, [r3], -r1
    5f90:	76080013 			; <UNDEFINED> instruction: 0x76080013
    5f94:	01080013 	tsteq	r8, r3, lsl r0
    5f98:	13765200 	cmnne	r6, #0, 4
    5f9c:	13780800 	cmnne	r8, #0, 16
    5fa0:	00010800 	andeq	r0, r1, r0, lsl #16
    5fa4:	00138653 	andseq	r8, r3, r3, asr r6
    5fa8:	00139a08 	andseq	r9, r3, r8, lsl #20
    5fac:	52000108 	andpl	r0, r0, #8, 2
    5fb0:	0800139a 	stmdaeq	r0, {r1, r3, r4, r7, r8, r9, ip}
    5fb4:	0800139e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, ip}
    5fb8:	9e530001 	cdpls	0, 5, cr0, cr3, cr1, {0}
    5fbc:	a8080013 	stmdage	r8, {r0, r1, r4}
    5fc0:	02080013 	andeq	r0, r8, #19
    5fc4:	c6007700 	strgt	r7, [r0], -r0, lsl #14
    5fc8:	32080013 	andcc	r0, r8, #19
    5fcc:	01080014 	tsteq	r8, r4, lsl r0
    5fd0:	00005000 	andeq	r5, r0, r0
	...
    601c:	00010000 	andeq	r0, r1, r0
    6020:	00000050 	andeq	r0, r0, r0, asr r0
    6024:	00000000 	andeq	r0, r0, r0
    6028:	f3000400 	vshl.u8	d0, d0, d0
    602c:	009f5001 	addseq	r5, pc, r1
    6030:	00000000 	andeq	r0, r0, r0
    6034:	01000000 	mrseq	r0, (UNDEF: 0)
    6038:	00005000 	andeq	r5, r0, r0
    603c:	00000000 	andeq	r0, r0, r0
    6040:	00040000 	andeq	r0, r4, r0
    6044:	9f5001f3 	svcls	0x005001f3
	...
    6050:	00500001 	subseq	r0, r0, r1
    6054:	00000000 	andeq	r0, r0, r0
    6058:	04000000 	streq	r0, [r0], #-0
    605c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6060:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6064:	00000000 	andeq	r0, r0, r0
    6068:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6074:	01f30004 	mvnseq	r0, r4
    6078:	00009f50 	andeq	r9, r0, r0, asr pc
    607c:	00000000 	andeq	r0, r0, r0
    6080:	00010000 	andeq	r0, r1, r0
    6084:	00000050 	andeq	r0, r0, r0, asr r0
    6088:	00000000 	andeq	r0, r0, r0
    608c:	f3000400 	vshl.u8	d0, d0, d0
    6090:	009f5001 	addseq	r5, pc, r1
    6094:	00000000 	andeq	r0, r0, r0
    6098:	01000000 	mrseq	r0, (UNDEF: 0)
    609c:	00005000 	andeq	r5, r0, r0
    60a0:	00000000 	andeq	r0, r0, r0
    60a4:	00040000 	andeq	r0, r4, r0
    60a8:	9f5001f3 	svcls	0x005001f3
	...
    60b4:	00500001 	subseq	r0, r0, r1
    60b8:	00000000 	andeq	r0, r0, r0
    60bc:	04000000 	streq	r0, [r0], #-0
    60c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    60c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    60c8:	00000000 	andeq	r0, r0, r0
    60cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60d8:	01f30004 	mvnseq	r0, r4
    60dc:	00009f50 	andeq	r9, r0, r0, asr pc
    60e0:	00000000 	andeq	r0, r0, r0
    60e4:	00010000 	andeq	r0, r1, r0
    60e8:	00000050 	andeq	r0, r0, r0, asr r0
    60ec:	00000000 	andeq	r0, r0, r0
    60f0:	f3000400 	vshl.u8	d0, d0, d0
    60f4:	009f5001 	addseq	r5, pc, r1
    60f8:	00000000 	andeq	r0, r0, r0
    60fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6100:	00005000 	andeq	r5, r0, r0
    6104:	00000000 	andeq	r0, r0, r0
    6108:	00040000 	andeq	r0, r4, r0
    610c:	9f5001f3 	svcls	0x005001f3
	...
    6118:	00500001 	subseq	r0, r0, r1
    611c:	00000000 	andeq	r0, r0, r0
    6120:	04000000 	streq	r0, [r0], #-0
    6124:	5001f300 	andpl	pc, r1, r0, lsl #6
    6128:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    612c:	00000000 	andeq	r0, r0, r0
    6130:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    613c:	01f30004 	mvnseq	r0, r4
    6140:	00009f50 	andeq	r9, r0, r0, asr pc
    6144:	00000000 	andeq	r0, r0, r0
    6148:	00010000 	andeq	r0, r1, r0
    614c:	00000050 	andeq	r0, r0, r0, asr r0
    6150:	00000000 	andeq	r0, r0, r0
    6154:	f3000400 	vshl.u8	d0, d0, d0
    6158:	009f5001 	addseq	r5, pc, r1
    615c:	00000000 	andeq	r0, r0, r0
    6160:	01000000 	mrseq	r0, (UNDEF: 0)
    6164:	00005000 	andeq	r5, r0, r0
    6168:	00000000 	andeq	r0, r0, r0
    616c:	00040000 	andeq	r0, r4, r0
    6170:	9f5001f3 	svcls	0x005001f3
	...
    617c:	00500001 	subseq	r0, r0, r1
    6180:	00000000 	andeq	r0, r0, r0
    6184:	04000000 	streq	r0, [r0], #-0
    6188:	5001f300 	andpl	pc, r1, r0, lsl #6
    618c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6190:	00000000 	andeq	r0, r0, r0
    6194:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    61a0:	30000200 	andcc	r0, r0, r0, lsl #4
    61a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    61a8:	00000000 	andeq	r0, r0, r0
    61ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    61f4:	00010000 	andeq	r0, r1, r0
    61f8:	00000053 	andeq	r0, r0, r3, asr r0
    61fc:	00000000 	andeq	r0, r0, r0
    6200:	70000200 	andvc	r0, r0, r0, lsl #4
    6204:	00000028 	andeq	r0, r0, r8, lsr #32
    6208:	00000000 	andeq	r0, r0, r0
    620c:	f3000500 	vrshl.u8	d0, d0, d0
    6210:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    621c:	00530001 	subseq	r0, r3, r1
    6220:	00000000 	andeq	r0, r0, r0
    6224:	02000000 	andeq	r0, r0, #0
    6228:	00287000 	eoreq	r7, r8, r0
    622c:	00000000 	andeq	r0, r0, r0
    6230:	05000000 	streq	r0, [r0, #-0]
    6234:	5001f300 	andpl	pc, r1, r0, lsl #6
    6238:	00002823 	andeq	r2, r0, r3, lsr #16
    623c:	00000000 	andeq	r0, r0, r0
    6240:	00010000 	andeq	r0, r1, r0
    6244:	00000053 	andeq	r0, r0, r3, asr r0
    6248:	00000000 	andeq	r0, r0, r0
    624c:	70000200 	andvc	r0, r0, r0, lsl #4
    6250:	00000028 	andeq	r0, r0, r8, lsr #32
    6254:	00000000 	andeq	r0, r0, r0
    6258:	f3000500 	vrshl.u8	d0, d0, d0
    625c:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6268:	00530001 	subseq	r0, r3, r1
    626c:	00000000 	andeq	r0, r0, r0
    6270:	02000000 	andeq	r0, r0, #0
    6274:	00287000 	eoreq	r7, r8, r0
    6278:	00000000 	andeq	r0, r0, r0
    627c:	05000000 	streq	r0, [r0, #-0]
    6280:	5001f300 	andpl	pc, r1, r0, lsl #6
    6284:	00002823 	andeq	r2, r0, r3, lsr #16
    6288:	00000000 	andeq	r0, r0, r0
    628c:	00010000 	andeq	r0, r1, r0
    6290:	00000053 	andeq	r0, r0, r3, asr r0
    6294:	00000000 	andeq	r0, r0, r0
    6298:	70000200 	andvc	r0, r0, r0, lsl #4
    629c:	00000028 	andeq	r0, r0, r8, lsr #32
    62a0:	00000000 	andeq	r0, r0, r0
    62a4:	f3000500 	vrshl.u8	d0, d0, d0
    62a8:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    62b4:	28700002 	ldmdacs	r0!, {r1}^
	...
    62c0:	01f30005 	mvnseq	r0, r5
    62c4:	00282350 	eoreq	r2, r8, r0, asr r3
    62c8:	00000000 	andeq	r0, r0, r0
    62cc:	02000000 	andeq	r0, r0, #0
    62d0:	00287000 	eoreq	r7, r8, r0
    62d4:	00000000 	andeq	r0, r0, r0
    62d8:	05000000 	streq	r0, [r0, #-0]
    62dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    62e0:	00002823 	andeq	r2, r0, r3, lsr #16
    62e4:	00000000 	andeq	r0, r0, r0
    62e8:	00010000 	andeq	r0, r1, r0
    62ec:	00000053 	andeq	r0, r0, r3, asr r0
    62f0:	00000000 	andeq	r0, r0, r0
    62f4:	70000200 	andvc	r0, r0, r0, lsl #4
    62f8:	00000028 	andeq	r0, r0, r8, lsr #32
    62fc:	00000000 	andeq	r0, r0, r0
    6300:	f3000500 	vrshl.u8	d0, d0, d0
    6304:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6310:	28700002 	ldmdacs	r0!, {r1}^
	...
    631c:	01f30005 	mvnseq	r0, r5
    6320:	00282350 	eoreq	r2, r8, r0, asr r3
    6324:	00000000 	andeq	r0, r0, r0
    6328:	01000000 	mrseq	r0, (UNDEF: 0)
    632c:	00005300 	andeq	r5, r0, r0, lsl #6
    6330:	00000000 	andeq	r0, r0, r0
    6334:	00020000 	andeq	r0, r2, r0
    6338:	00002870 	andeq	r2, r0, r0, ror r8
    633c:	00000000 	andeq	r0, r0, r0
    6340:	00050000 	andeq	r0, r5, r0
    6344:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    6348:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    6358:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6364:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6368:	00000004 	andeq	r0, r0, r4
    636c:	00000000 	andeq	r0, r0, r0
    6370:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    637c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6380:	00000004 	andeq	r0, r0, r4
	...
    6394:	01000000 	mrseq	r0, (UNDEF: 0)
    6398:	00005000 	andeq	r5, r0, r0
    639c:	00000000 	andeq	r0, r0, r0
    63a0:	00040000 	andeq	r0, r4, r0
    63a4:	9f5001f3 	svcls	0x005001f3
	...
    63b0:	00500001 	subseq	r0, r0, r1
	...
    63c4:	01000000 	mrseq	r0, (UNDEF: 0)
    63c8:	00005200 	andeq	r5, r0, r0, lsl #4
    63cc:	00000000 	andeq	r0, r0, r0
    63d0:	001e0000 	andseq	r0, lr, r0
    63d4:	30f70071 	rscscc	r0, r7, r1, ror r0
    63d8:	29f429f7 	ldmibcs	r4!, {r0, r1, r2, r4, r5, r6, r7, r8, fp, sp}^
    63dc:	aaaaab08 	bge	feab1004 <_estack+0xdeaafdcc>
    63e0:	000000aa 	andeq	r0, r0, sl, lsr #1
    63e4:	20081e00 	andcs	r1, r8, r0, lsl #28
    63e8:	f72529f7 			; <UNDEFINED> instruction: 0xf72529f7
    63ec:	3400f730 	strcc	pc, [r0], #-1840	; 0xfffff8d0
    63f0:	00009f25 	andeq	r9, r0, r5, lsr #30
	...
    6400:	00020000 	andeq	r0, r2, r0
    6404:	0000007d 	andeq	r0, r0, sp, ror r0
    6408:	00000000 	andeq	r0, r0, r0
    640c:	00020000 	andeq	r0, r2, r0
    6410:	0000087d 	andeq	r0, r0, sp, ror r8
    6414:	00000000 	andeq	r0, r0, r0
    6418:	00020000 	andeq	r0, r2, r0
    641c:	0000007d 	andeq	r0, r0, sp, ror r0
    6420:	00000000 	andeq	r0, r0, r0
    6424:	00020000 	andeq	r0, r2, r0
    6428:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6444:	00530001 	subseq	r0, r3, r1
    6448:	00000000 	andeq	r0, r0, r0
    644c:	02000000 	andeq	r0, r0, #0
    6450:	00047400 	andeq	r7, r4, r0, lsl #8
    6454:	00000000 	andeq	r0, r0, r0
    6458:	04000000 	streq	r0, [r0], #-0
    645c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    6460:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6464:	00000000 	andeq	r0, r0, r0
    6468:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    646c:	00000004 	andeq	r0, r0, r4
    6470:	00000000 	andeq	r0, r0, r0
    6474:	f3000400 	vshl.u8	d0, d0, d0
    6478:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    648c:	01000000 	mrseq	r0, (UNDEF: 0)
    6490:	00005000 	andeq	r5, r0, r0
    6494:	00000000 	andeq	r0, r0, r0
    6498:	00040000 	andeq	r0, r4, r0
    649c:	9f5001f3 	svcls	0x005001f3
	...
    64b4:	00500001 	subseq	r0, r0, r1
    64b8:	00000000 	andeq	r0, r0, r0
    64bc:	04000000 	streq	r0, [r0], #-0
    64c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    64c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    64dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    64e8:	00530001 	subseq	r0, r3, r1
    64ec:	00000000 	andeq	r0, r0, r0
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
    64f4:	00005000 	andeq	r5, r0, r0
    64f8:	00000000 	andeq	r0, r0, r0
    64fc:	00010000 	andeq	r0, r1, r0
    6500:	00000053 	andeq	r0, r0, r3, asr r0
    6504:	00000000 	andeq	r0, r0, r0
    6508:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    6514:	02000000 	andeq	r0, r0, #0
    6518:	009f3000 	addseq	r3, pc, r0
    651c:	00000000 	andeq	r0, r0, r0
    6520:	01000000 	mrseq	r0, (UNDEF: 0)
    6524:	00005000 	andeq	r5, r0, r0
    6528:	00000000 	andeq	r0, r0, r0
    652c:	00020000 	andeq	r0, r2, r0
    6530:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    6544:	00010000 	andeq	r0, r1, r0
    6548:	00000050 	andeq	r0, r0, r0, asr r0
    654c:	00000000 	andeq	r0, r0, r0
    6550:	53000100 	movwpl	r0, #256	; 0x100
	...
    6568:	00010000 	andeq	r0, r1, r0
    656c:	00000052 	andeq	r0, r0, r2, asr r0
    6570:	00000000 	andeq	r0, r0, r0
    6574:	f3000400 	vshl.u8	d0, d0, d0
    6578:	009f5201 	addseq	r5, pc, r1, lsl #4
    657c:	00000000 	andeq	r0, r0, r0
    6580:	01000000 	mrseq	r0, (UNDEF: 0)
    6584:	00005200 	andeq	r5, r0, r0, lsl #4
    6588:	00000000 	andeq	r0, r0, r0
    658c:	00010000 	andeq	r0, r1, r0
	...
    659c:	9f300002 	svcls	0x00300002
	...
    65a8:	00500001 	subseq	r0, r0, r1
    65ac:	00000000 	andeq	r0, r0, r0
    65b0:	02000000 	andeq	r0, r0, #0
    65b4:	009f3000 	addseq	r3, pc, r0
	...
    65c4:	02000000 	andeq	r0, r0, #0
    65c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    65cc:	00000000 	andeq	r0, r0, r0
    65d0:	02000000 	andeq	r0, r0, #0
    65d4:	00147d00 	andseq	r7, r4, r0, lsl #26
    65d8:	00000000 	andeq	r0, r0, r0
    65dc:	02000000 	andeq	r0, r0, #0
    65e0:	00207d00 	eoreq	r7, r0, r0, lsl #26
    65e4:	00000000 	andeq	r0, r0, r0
    65e8:	02000000 	andeq	r0, r0, #0
    65ec:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    660c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6618:	00540001 	subseq	r0, r4, r1
    661c:	00000000 	andeq	r0, r0, r0
    6620:	01000000 	mrseq	r0, (UNDEF: 0)
    6624:	00005000 	andeq	r5, r0, r0
    6628:	00000000 	andeq	r0, r0, r0
    662c:	00010000 	andeq	r0, r1, r0
    6630:	00000054 	andeq	r0, r0, r4, asr r0
    6634:	00000000 	andeq	r0, r0, r0
    6638:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6644:	00540001 	subseq	r0, r4, r1
    6648:	00000000 	andeq	r0, r0, r0
    664c:	04000000 	streq	r0, [r0], #-0
    6650:	5001f300 	andpl	pc, r1, r0, lsl #6
    6654:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6664:	01000000 	mrseq	r0, (UNDEF: 0)
    6668:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    667c:	00550001 	subseq	r0, r5, r1
	...
    6690:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    66a4:	007d0002 	rsbseq	r0, sp, r2
	...
    66b0:	207d0002 	rsbscs	r0, sp, r2
	...
    66c8:	00500001 	subseq	r0, r0, r1
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	01000000 	mrseq	r0, (UNDEF: 0)
    66d4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    66e8:	00010000 	andeq	r0, r1, r0
    66ec:	00000051 	andeq	r0, r0, r1, asr r0
    66f0:	00000000 	andeq	r0, r0, r0
    66f4:	f3000400 	vshl.u8	d0, d0, d0
    66f8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    670c:	01000000 	mrseq	r0, (UNDEF: 0)
    6710:	00005200 	andeq	r5, r0, r0, lsl #4
    6714:	00000000 	andeq	r0, r0, r0
    6718:	00010000 	andeq	r0, r1, r0
    671c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6730:	5a000100 	bpl	6b38 <_Min_Heap_Size+0x6338>
	...
    673c:	005a0001 	subseq	r0, sl, r1
	...
    6748:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    675c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6768:	00500001 	subseq	r0, r0, r1
    676c:	00000000 	andeq	r0, r0, r0
    6770:	01000000 	mrseq	r0, (UNDEF: 0)
    6774:	00005900 	andeq	r5, r0, r0, lsl #18
    6778:	00000000 	andeq	r0, r0, r0
    677c:	00010000 	andeq	r0, r1, r0
    6780:	00000050 	andeq	r0, r0, r0, asr r0
    6784:	00000000 	andeq	r0, r0, r0
    6788:	59000100 	stmdbpl	r0, {r8}
	...
    6794:	00500001 	subseq	r0, r0, r1
    6798:	00000000 	andeq	r0, r0, r0
    679c:	01000000 	mrseq	r0, (UNDEF: 0)
    67a0:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    67b4:	00010000 	andeq	r0, r1, r0
    67b8:	00000053 	andeq	r0, r0, r3, asr r0
    67bc:	00000000 	andeq	r0, r0, r0
    67c0:	53000100 	movwpl	r0, #256	; 0x100
	...
    67d8:	00570001 	subseq	r0, r7, r1
    67dc:	00000000 	andeq	r0, r0, r0
    67e0:	01000000 	mrseq	r0, (UNDEF: 0)
    67e4:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    67f4:	14dc0000 	ldrbne	r0, [ip], #0
    67f8:	14ec0800 	strbtne	r0, [ip], #2048	; 0x800
    67fc:	00010800 	andeq	r0, r1, r0, lsl #16
    6800:	0014ec50 	andseq	lr, r4, r0, asr ip
    6804:	0014ee08 	andseq	lr, r4, r8, lsl #28
    6808:	f3000408 	vshl.u8	d0, d8, d0
    680c:	ee9f5001 	cdp	0, 9, cr5, cr15, cr1, {0}
    6810:	00080014 	andeq	r0, r8, r4, lsl r0
    6814:	01080015 	tsteq	r8, r5, lsl r0
    6818:	15005000 	strne	r5, [r0, #-0]
    681c:	15020800 	strne	r0, [r2, #-2048]	; 0xfffff800
    6820:	00040800 	andeq	r0, r4, r0, lsl #16
    6824:	9f5001f3 	svcls	0x005001f3
	...
    6830:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
    6834:	0800144a 	stmdaeq	r0, {r1, r3, r6, sl, ip}
    6838:	007d0002 	rsbseq	r0, sp, r2
    683c:	0800144a 	stmdaeq	r0, {r1, r3, r6, sl, ip}
    6840:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
    6844:	107d0002 	rsbsne	r0, sp, r2
	...
    6854:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
    6858:	08001451 	stmdaeq	r0, {r0, r4, r6, sl, ip}
    685c:	51500001 	cmppl	r0, r1
    6860:	dc080014 	stcle	0, cr0, [r8], {20}
    6864:	01080014 	tsteq	r8, r4, lsl r0
    6868:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6874:	0800144e 	stmdaeq	r0, {r1, r2, r3, r6, sl, ip}
    6878:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
    687c:	00560001 	subseq	r0, r6, r1
	...
    6888:	01010000 	mrseq	r0, (UNDEF: 1)
    688c:	00000000 	andeq	r0, r0, r0
    6890:	00145200 	andseq	r5, r4, r0, lsl #4
    6894:	00146808 	andseq	r6, r4, r8, lsl #16
    6898:	50000108 	andpl	r0, r0, r8, lsl #2
    689c:	0800146a 	stmdaeq	r0, {r1, r3, r5, r6, sl, ip}
    68a0:	08001498 	stmdaeq	r0, {r3, r4, r7, sl, ip}
    68a4:	98500001 	ldmdals	r0, {r0}^
    68a8:	be080014 	mcrlt	0, 0, r0, cr8, cr4, {0}
    68ac:	01080014 	tsteq	r8, r4, lsl r0
    68b0:	14be5500 	ldrtne	r5, [lr], #1280	; 0x500
    68b4:	14c60800 	strbne	r0, [r6], #2048	; 0x800
    68b8:	00010800 	andeq	r0, r1, r0, lsl #16
    68bc:	0014c650 	andseq	ip, r4, r0, asr r6
    68c0:	0014dc08 	andseq	sp, r4, r8, lsl #24
    68c4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    68d8:	007d0002 	rsbseq	r0, sp, r2
	...
    68e4:	187d0002 	ldmdane	sp!, {r1}^
	...
    6900:	00500001 	subseq	r0, r0, r1
    6904:	00000000 	andeq	r0, r0, r0
    6908:	01000000 	mrseq	r0, (UNDEF: 0)
    690c:	00005400 	andeq	r5, r0, r0, lsl #8
    6910:	00000000 	andeq	r0, r0, r0
    6914:	00010000 	andeq	r0, r1, r0
    6918:	00000050 	andeq	r0, r0, r0, asr r0
    691c:	00000000 	andeq	r0, r0, r0
    6920:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    693c:	00510001 	subseq	r0, r1, r1
    6940:	00000000 	andeq	r0, r0, r0
    6944:	01000000 	mrseq	r0, (UNDEF: 0)
    6948:	00005600 	andeq	r5, r0, r0, lsl #12
    694c:	00000000 	andeq	r0, r0, r0
    6950:	00010000 	andeq	r0, r1, r0
    6954:	00000051 	andeq	r0, r0, r1, asr r0
    6958:	00000000 	andeq	r0, r0, r0
    695c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    6974:	00520001 	subseq	r0, r2, r1
    6978:	00000000 	andeq	r0, r0, r0
    697c:	01000000 	mrseq	r0, (UNDEF: 0)
    6980:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    6994:	00010000 	andeq	r0, r1, r0
    6998:	00000053 	andeq	r0, r0, r3, asr r0
    699c:	00000000 	andeq	r0, r0, r0
    69a0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    69ac:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    69b8:	00020000 	andeq	r0, r2, r0
    69bc:	00009f30 	andeq	r9, r0, r0, lsr pc
    69c0:	00000000 	andeq	r0, r0, r0
    69c4:	00020000 	andeq	r0, r2, r0
    69c8:	00009f32 	andeq	r9, r0, r2, lsr pc
    69cc:	00000000 	andeq	r0, r0, r0
    69d0:	00020000 	andeq	r0, r2, r0
    69d4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    69e8:	00580001 	subseq	r0, r8, r1
	...
    69f8:	02000000 	andeq	r0, r0, #0
    69fc:	00007d00 	andeq	r7, r0, r0, lsl #26
    6a00:	00000000 	andeq	r0, r0, r0
    6a04:	02000000 	andeq	r0, r0, #0
    6a08:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    6a20:	01000000 	mrseq	r0, (UNDEF: 0)
    6a24:	00005000 	andeq	r5, r0, r0
    6a28:	00000000 	andeq	r0, r0, r0
    6a2c:	00010000 	andeq	r0, r1, r0
    6a30:	00000054 	andeq	r0, r0, r4, asr r0
    6a34:	00000000 	andeq	r0, r0, r0
    6a38:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a44:	00540001 	subseq	r0, r4, r1
	...
    6a5c:	01000000 	mrseq	r0, (UNDEF: 0)
    6a60:	00005100 	andeq	r5, r0, r0, lsl #2
    6a64:	00000000 	andeq	r0, r0, r0
    6a68:	00010000 	andeq	r0, r1, r0
    6a6c:	00000056 	andeq	r0, r0, r6, asr r0
    6a70:	00000000 	andeq	r0, r0, r0
    6a74:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6a80:	00560001 	subseq	r0, r6, r1
	...
    6a94:	01000000 	mrseq	r0, (UNDEF: 0)
    6a98:	00005200 	andeq	r5, r0, r0, lsl #4
    6a9c:	00000000 	andeq	r0, r0, r0
    6aa0:	00010000 	andeq	r0, r1, r0
    6aa4:	00000057 	andeq	r0, r0, r7, asr r0
	...
    6ab8:	53000100 	movwpl	r0, #256	; 0x100
	...
    6ac4:	00550001 	subseq	r0, r5, r1
    6ac8:	00000000 	andeq	r0, r0, r0
    6acc:	01000000 	mrseq	r0, (UNDEF: 0)
    6ad0:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    6adc:	30000200 	andcc	r0, r0, r0, lsl #4
    6ae0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ae4:	00000000 	andeq	r0, r0, r0
    6ae8:	32000200 	andcc	r0, r0, #0, 4
    6aec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6af0:	00000000 	andeq	r0, r0, r0
    6af4:	30000200 	andcc	r0, r0, r0, lsl #4
    6af8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6b08:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b14:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b18:	00000010 	andeq	r0, r0, r0, lsl r0
    6b1c:	00000000 	andeq	r0, r0, r0
    6b20:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b48:	00550001 	subseq	r0, r5, r1
    6b4c:	00000000 	andeq	r0, r0, r0
    6b50:	01000000 	mrseq	r0, (UNDEF: 0)
    6b54:	00005000 	andeq	r5, r0, r0
    6b58:	00000000 	andeq	r0, r0, r0
    6b5c:	00040000 	andeq	r0, r4, r0
    6b60:	9f5001f3 	svcls	0x005001f3
	...
    6b74:	00010000 	andeq	r0, r1, r0
    6b78:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6b88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b94:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b98:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6bac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6bb8:	00540001 	subseq	r0, r4, r1
    6bbc:	00000000 	andeq	r0, r0, r0
    6bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bc4:	00000001 	andeq	r0, r0, r1
	...
    6bdc:	30000200 	andcc	r0, r0, r0, lsl #4
    6be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6be4:	00000000 	andeq	r0, r0, r0
    6be8:	30000200 	andcc	r0, r0, r0, lsl #4
    6bec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6bf0:	00000000 	andeq	r0, r0, r0
    6bf4:	52000100 	andpl	r0, r0, #0, 2
	...
    6c00:	00500001 	subseq	r0, r0, r1
    6c04:	00000000 	andeq	r0, r0, r0
    6c08:	01000000 	mrseq	r0, (UNDEF: 0)
    6c0c:	00005200 	andeq	r5, r0, r0, lsl #4
    6c10:	00000000 	andeq	r0, r0, r0
    6c14:	00010000 	andeq	r0, r1, r0
    6c18:	00000055 	andeq	r0, r0, r5, asr r0
    6c1c:	00000000 	andeq	r0, r0, r0
    6c20:	52000100 	andpl	r0, r0, #0, 2
	...
    6c2c:	00550001 	subseq	r0, r5, r1
    6c30:	00000000 	andeq	r0, r0, r0
    6c34:	02000000 	andeq	r0, r0, #0
    6c38:	009f3000 	addseq	r3, pc, r0
	...
    6c44:	00010000 	andeq	r0, r1, r0
	...
    6c54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c60:	00550001 	subseq	r0, r5, r1
    6c64:	00000000 	andeq	r0, r0, r0
    6c68:	01000000 	mrseq	r0, (UNDEF: 0)
    6c6c:	00005500 	andeq	r5, r0, r0, lsl #10
    6c70:	00000000 	andeq	r0, r0, r0
    6c74:	00010000 	andeq	r0, r1, r0
    6c78:	00000055 	andeq	r0, r0, r5, asr r0
    6c7c:	00000000 	andeq	r0, r0, r0
    6c80:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c94:	00010000 	andeq	r0, r1, r0
    6c98:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6ca8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6cb4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6cb8:	00000008 	andeq	r0, r0, r8
	...
    6cc8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6cd4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6cd8:	00000008 	andeq	r0, r0, r8
	...
    6cf0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6cfc:	00540001 	subseq	r0, r4, r1
    6d00:	00000000 	andeq	r0, r0, r0
    6d04:	01000000 	mrseq	r0, (UNDEF: 0)
    6d08:	00005000 	andeq	r5, r0, r0
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	00010000 	andeq	r0, r1, r0
    6d14:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6d24:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6d30:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6d34:	00000008 	andeq	r0, r0, r8
	...
    6d4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d58:	01f30004 	mvnseq	r0, r4
    6d5c:	00009f50 	andeq	r9, r0, r0, asr pc
    6d60:	00000000 	andeq	r0, r0, r0
    6d64:	00010000 	andeq	r0, r1, r0
    6d68:	00000050 	andeq	r0, r0, r0, asr r0
    6d6c:	00000000 	andeq	r0, r0, r0
    6d70:	f3000400 	vshl.u8	d0, d0, d0
    6d74:	009f5001 	addseq	r5, pc, r1
    6d78:	00000000 	andeq	r0, r0, r0
    6d7c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6d88:	01000000 	mrseq	r0, (UNDEF: 0)
    6d8c:	00005400 	andeq	r5, r0, r0, lsl #8
    6d90:	00000000 	andeq	r0, r0, r0
    6d94:	00010000 	andeq	r0, r1, r0
    6d98:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6da8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6db4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6db8:	00000008 	andeq	r0, r0, r8
	...
    6dd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ddc:	01f30004 	mvnseq	r0, r4
    6de0:	00009f50 	andeq	r9, r0, r0, asr pc
    6de4:	00000000 	andeq	r0, r0, r0
    6de8:	00010000 	andeq	r0, r1, r0
    6dec:	00000050 	andeq	r0, r0, r0, asr r0
    6df0:	00000000 	andeq	r0, r0, r0
    6df4:	f3000400 	vshl.u8	d0, d0, d0
    6df8:	009f5001 	addseq	r5, pc, r1
    6dfc:	00000000 	andeq	r0, r0, r0
    6e00:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6e0c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6e20:	007d0002 	rsbseq	r0, sp, r2
	...
    6e2c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6e48:	00500001 	subseq	r0, r0, r1
    6e4c:	00000000 	andeq	r0, r0, r0
    6e50:	04000000 	streq	r0, [r0], #-0
    6e54:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6e5c:	00000000 	andeq	r0, r0, r0
    6e60:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6e6c:	01f30004 	mvnseq	r0, r4
    6e70:	00009f50 	andeq	r9, r0, r0, asr pc
    6e74:	00000000 	andeq	r0, r0, r0
    6e78:	00010000 	andeq	r0, r1, r0
	...
    6e84:	00010000 	andeq	r0, r1, r0
    6e88:	00000054 	andeq	r0, r0, r4, asr r0
    6e8c:	00000000 	andeq	r0, r0, r0
    6e90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6ea4:	007d0002 	rsbseq	r0, sp, r2
	...
    6eb0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6ecc:	00500001 	subseq	r0, r0, r1
    6ed0:	00000000 	andeq	r0, r0, r0
    6ed4:	04000000 	streq	r0, [r0], #-0
    6ed8:	5001f300 	andpl	pc, r1, r0, lsl #6
    6edc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ee0:	00000000 	andeq	r0, r0, r0
    6ee4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ef0:	01f30004 	mvnseq	r0, r4
    6ef4:	00009f50 	andeq	r9, r0, r0, asr pc
    6ef8:	00000000 	andeq	r0, r0, r0
    6efc:	00010000 	andeq	r0, r1, r0
	...
    6f08:	00540001 	subseq	r0, r4, r1
	...
    6f18:	02000000 	andeq	r0, r0, #0
    6f1c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6f20:	00000000 	andeq	r0, r0, r0
    6f24:	02000000 	andeq	r0, r0, #0
    6f28:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    6f40:	01000000 	mrseq	r0, (UNDEF: 0)
    6f44:	00005000 	andeq	r5, r0, r0
    6f48:	00000000 	andeq	r0, r0, r0
    6f4c:	00040000 	andeq	r0, r4, r0
    6f50:	9f5001f3 	svcls	0x005001f3
	...
    6f5c:	00500001 	subseq	r0, r0, r1
    6f60:	00000000 	andeq	r0, r0, r0
    6f64:	04000000 	streq	r0, [r0], #-0
    6f68:	5001f300 	andpl	pc, r1, r0, lsl #6
    6f6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6f84:	01000000 	mrseq	r0, (UNDEF: 0)
    6f88:	00005100 	andeq	r5, r0, r0, lsl #2
    6f8c:	00000000 	andeq	r0, r0, r0
    6f90:	00010000 	andeq	r0, r1, r0
    6f94:	00000054 	andeq	r0, r0, r4, asr r0
    6f98:	00000000 	andeq	r0, r0, r0
    6f9c:	f3000400 	vshl.u8	d0, d0, d0
    6fa0:	009f5101 	addseq	r5, pc, r1, lsl #2
    6fa4:	00000000 	andeq	r0, r0, r0
    6fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    6fac:	00005100 	andeq	r5, r0, r0, lsl #2
    6fb0:	00000000 	andeq	r0, r0, r0
    6fb4:	00010000 	andeq	r0, r1, r0
    6fb8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6fd0:	52000100 	andpl	r0, r0, #0, 2
	...
    6fdc:	00570001 	subseq	r0, r7, r1
    6fe0:	00000000 	andeq	r0, r0, r0
    6fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    6fe8:	00005200 	andeq	r5, r0, r0, lsl #4
    6fec:	00000000 	andeq	r0, r0, r0
    6ff0:	00010000 	andeq	r0, r1, r0
    6ff4:	00000057 	andeq	r0, r0, r7, asr r0
	...
    7008:	53000100 	movwpl	r0, #256	; 0x100
	...
    7014:	00560001 	subseq	r0, r6, r1
    7018:	00000000 	andeq	r0, r0, r0
    701c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7028:	01000000 	mrseq	r0, (UNDEF: 0)
    702c:	00005500 	andeq	r5, r0, r0, lsl #10
    7030:	00000000 	andeq	r0, r0, r0
    7034:	00010000 	andeq	r0, r1, r0
    7038:	00000055 	andeq	r0, r0, r5, asr r0
	...
    704c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    7058:	00560001 	subseq	r0, r6, r1
	...
    706c:	01000000 	mrseq	r0, (UNDEF: 0)
    7070:	00005700 	andeq	r5, r0, r0, lsl #14
    7074:	00000000 	andeq	r0, r0, r0
    7078:	00010000 	andeq	r0, r1, r0
    707c:	00000057 	andeq	r0, r0, r7, asr r0
	...
    7090:	01000000 	mrseq	r0, (UNDEF: 0)
    7094:	00005400 	andeq	r5, r0, r0, lsl #8
    7098:	00000000 	andeq	r0, r0, r0
    709c:	00040000 	andeq	r0, r4, r0
    70a0:	9f5101f3 	svcls	0x005101f3
	...
    70ac:	00540001 	subseq	r0, r4, r1
	...
    70c0:	01000000 	mrseq	r0, (UNDEF: 0)
    70c4:	00005300 	andeq	r5, r0, r0, lsl #6
    70c8:	00000000 	andeq	r0, r0, r0
    70cc:	00010000 	andeq	r0, r1, r0
    70d0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    70e8:	01000000 	mrseq	r0, (UNDEF: 0)
    70ec:	00005100 	andeq	r5, r0, r0, lsl #2
    70f0:	00000000 	andeq	r0, r0, r0
    70f4:	00030000 	andeq	r0, r3, r0
    70f8:	009f7c70 	addseq	r7, pc, r0, ror ip	; <UNPREDICTABLE>
    70fc:	00000000 	andeq	r0, r0, r0
    7100:	06000000 	streq	r0, [r0], -r0
    7104:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7108:	009f1a37 	addseq	r1, pc, r7, lsr sl	; <UNPREDICTABLE>
    710c:	00000000 	andeq	r0, r0, r0
    7110:	01000000 	mrseq	r0, (UNDEF: 0)
    7114:	00005100 	andeq	r5, r0, r0, lsl #2
    7118:	00000000 	andeq	r0, r0, r0
    711c:	00030000 	andeq	r0, r3, r0
    7120:	009f7c70 	addseq	r7, pc, r0, ror ip	; <UNPREDICTABLE>
	...
    7138:	52000100 	andpl	r0, r0, #0, 2
	...
    7144:	f334001d 	vqadd.u64	d0, d4, d13
    7148:	37205101 	strcc	r5, [r0, -r1, lsl #2]!
    714c:	5101f31a 	tstpl	r1, sl, lsl r3	; <UNPREDICTABLE>
    7150:	401a3720 	andsmi	r3, sl, r0, lsr #14
    7154:	0c22244b 	cfstrseq	mvf2, [r2], #-300	; 0xfffffed4
    7158:	80000004 	andhi	r0, r0, r4
    715c:	0001282a 	andeq	r2, r1, sl, lsr #16
    7160:	009f1316 	addseq	r1, pc, r6, lsl r3	; <UNPREDICTABLE>
    7164:	00000000 	andeq	r0, r0, r0
    7168:	01000000 	mrseq	r0, (UNDEF: 0)
    716c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7180:	00510001 	subseq	r0, r1, r1
	...
    7190:	02000000 	andeq	r0, r0, #0
    7194:	00007d00 	andeq	r7, r0, r0, lsl #26
    7198:	00000000 	andeq	r0, r0, r0
    719c:	02000000 	andeq	r0, r0, #0
    71a0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    71b8:	01000000 	mrseq	r0, (UNDEF: 0)
    71bc:	00005000 	andeq	r5, r0, r0
    71c0:	00000000 	andeq	r0, r0, r0
    71c4:	00010000 	andeq	r0, r1, r0
    71c8:	00000054 	andeq	r0, r0, r4, asr r0
    71cc:	00000000 	andeq	r0, r0, r0
    71d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    71dc:	00540001 	subseq	r0, r4, r1
	...
    71f0:	01000000 	mrseq	r0, (UNDEF: 0)
    71f4:	00005000 	andeq	r5, r0, r0
    71f8:	00000000 	andeq	r0, r0, r0
    71fc:	00040000 	andeq	r0, r4, r0
    7200:	9f5001f3 	svcls	0x005001f3
	...
    7210:	15fc0000 	ldrbne	r0, [ip, #0]!
    7214:	15fe0800 	ldrbne	r0, [lr, #2048]!	; 0x800
    7218:	00010800 	andeq	r0, r1, r0, lsl #16
    721c:	0015fe50 	andseq	pc, r5, r0, asr lr	; <UNPREDICTABLE>
    7220:	00161408 	andseq	r1, r6, r8, lsl #8
    7224:	70000308 	andvc	r0, r0, r8, lsl #6
    7228:	16149f01 	ldrne	r9, [r4], -r1, lsl #30
    722c:	16240800 	strtne	r0, [r4], -r0, lsl #16
    7230:	00040800 	andeq	r0, r4, r0, lsl #16
    7234:	9f5001f3 	svcls	0x005001f3
	...
    7240:	00000002 	andeq	r0, r0, r2
    7244:	15fc0000 	ldrbne	r0, [ip, #0]!
    7248:	15fe0800 	ldrbne	r0, [lr, #2048]!	; 0x800
    724c:	00010800 	andeq	r0, r1, r0, lsl #16
    7250:	0015fe50 	andseq	pc, r5, r0, asr lr	; <UNPREDICTABLE>
    7254:	00161408 	andseq	r1, r6, r8, lsl #8
    7258:	70000308 	andvc	r0, r0, r8, lsl #6
    725c:	16149f01 	ldrne	r9, [r4], -r1, lsl #30
    7260:	161e0800 	ldrne	r0, [lr], -r0, lsl #16
    7264:	00040800 	andeq	r0, r4, r0, lsl #16
    7268:	9f5001f3 	svcls	0x005001f3
	...
    7274:	160a0001 	strne	r0, [sl], -r1
    7278:	16120800 	ldrne	r0, [r2], -r0, lsl #16
    727c:	00020800 	andeq	r0, r2, r0, lsl #16
    7280:	00009f3f 	andeq	r9, r0, pc, lsr pc
    7284:	00000000 	andeq	r0, r0, r0
    7288:	00010000 	andeq	r0, r1, r0
    728c:	0800160a 	stmdaeq	r0, {r1, r3, r9, sl, ip}
    7290:	08001612 	stmdaeq	r0, {r1, r4, r9, sl, ip}
    7294:	ff090003 			; <UNDEFINED> instruction: 0xff090003
    7298:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    72a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    72b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    72b8:	00000008 	andeq	r0, r0, r8
	...
    72d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    72dc:	01f30004 	mvnseq	r0, r4
    72e0:	00009f50 	andeq	r9, r0, r0, asr pc
    72e4:	00000000 	andeq	r0, r0, r0
    72e8:	00010000 	andeq	r0, r1, r0
    72ec:	00000050 	andeq	r0, r0, r0, asr r0
    72f0:	00000000 	andeq	r0, r0, r0
    72f4:	f3000400 	vshl.u8	d0, d0, d0
    72f8:	009f5001 	addseq	r5, pc, r1
    72fc:	00000000 	andeq	r0, r0, r0
    7300:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    730c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7318:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    731c:	080015ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, ip}
    7320:	007d0002 	rsbseq	r0, sp, r2
    7324:	080015ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, ip}
    7328:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
    732c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7340:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    7344:	080015d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, ip}
    7348:	d2500001 	subsle	r0, r0, #1
    734c:	e8080015 	stmda	r8, {r0, r2, r4}
    7350:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    7354:	5001f300 	andpl	pc, r1, r0, lsl #6
    7358:	0015e89f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
    735c:	0015ec08 	andseq	lr, r5, r8, lsl #24
    7360:	50000108 	andpl	r0, r0, r8, lsl #2
    7364:	080015ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, ip}
    7368:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
    736c:	01f30004 	mvnseq	r0, r4
    7370:	00009f50 	andeq	r9, r0, r0, asr pc
    7374:	00000000 	andeq	r0, r0, r0
    7378:	00010000 	andeq	r0, r1, r0
    737c:	080015d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, ip}
    7380:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
    7384:	00540001 	subseq	r0, r4, r1
    7388:	00000000 	andeq	r0, r0, r0
    738c:	40000000 	andmi	r0, r0, r0
    7390:	42080015 	andmi	r0, r8, #21
    7394:	02080015 	andeq	r0, r8, #21
    7398:	42007d00 	andmi	r7, r0, #0, 26
    739c:	cc080015 	stcgt	0, cr0, [r8], {21}
    73a0:	02080015 	andeq	r0, r8, #21
    73a4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    73b4:	40000000 	andmi	r0, r0, r0
    73b8:	4c080015 	stcmi	0, cr0, [r8], {21}
    73bc:	01080015 	tsteq	r8, r5, lsl r0
    73c0:	154c5000 	strbne	r5, [ip, #-0]
    73c4:	15980800 	ldrne	r0, [r8, #2048]	; 0x800
    73c8:	00040800 	andeq	r0, r4, r0, lsl #16
    73cc:	9f5001f3 	svcls	0x005001f3
    73d0:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
    73d4:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    73d8:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    73dc:	cc080015 	stcgt	0, cr0, [r8], {21}
    73e0:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    73e4:	5001f300 	andpl	pc, r1, r0, lsl #6
    73e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    73fc:	00154000 	andseq	r4, r5, r0
    7400:	00154c08 	andseq	r4, r5, r8, lsl #24
    7404:	51000108 	tstpl	r0, r8, lsl #2
    7408:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    740c:	08001576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, ip}
    7410:	76540001 	ldrbvc	r0, [r4], -r1
    7414:	98080015 	stmdals	r8, {r0, r2, r4}
    7418:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    741c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7420:	0015989f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
    7424:	00159a08 	andseq	r9, r5, r8, lsl #20
    7428:	51000108 	tstpl	r0, r8, lsl #2
    742c:	0800159a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, ip}
    7430:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    7434:	b0540001 	subslt	r0, r4, r1
    7438:	cc080015 	stcgt	0, cr0, [r8], {21}
    743c:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    7440:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7444:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7458:	00154000 	andseq	r4, r5, r0
    745c:	00154c08 	andseq	r4, r5, r8, lsl #24
    7460:	52000108 	andpl	r0, r0, #8, 2
    7464:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    7468:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
    746c:	80560001 	subshi	r0, r6, r1
    7470:	98080015 	stmdals	r8, {r0, r2, r4}
    7474:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    7478:	5201f300 	andpl	pc, r1, #0, 6
    747c:	0015989f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
    7480:	00159f08 	andseq	r9, r5, r8, lsl #30
    7484:	52000108 	andpl	r0, r0, #8, 2
    7488:	0800159f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r8, sl, ip}
    748c:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    7490:	b0560001 	subslt	r0, r6, r1
    7494:	cc080015 	stcgt	0, cr0, [r8], {21}
    7498:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    749c:	5201f300 	andpl	pc, r1, #0, 6
    74a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    74a4:	00000000 	andeq	r0, r0, r0
    74a8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    74b4:	00154800 	andseq	r4, r5, r0, lsl #16
    74b8:	00155808 	andseq	r5, r5, r8, lsl #16
    74bc:	30000208 	andcc	r0, r0, r8, lsl #4
    74c0:	0015589f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
    74c4:	00156a08 	andseq	r6, r5, r8, lsl #20
    74c8:	53000108 	movwpl	r0, #264	; 0x108
    74cc:	0800156a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl, ip}
    74d0:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    74d4:	7c720003 	ldclvc	0, cr0, [r2], #-12
    74d8:	0015989f 	mulseq	r5, pc, r8	; <UNPREDICTABLE>
    74dc:	0015ac08 	andseq	sl, r5, r8, lsl #24
    74e0:	30000208 	andcc	r0, r0, r8, lsl #4
    74e4:	0015ac9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    74e8:	0015ae08 	andseq	sl, r5, r8, lsl #28
    74ec:	53000108 	movwpl	r0, #264	; 0x108
    74f0:	080015ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, sl, ip}
    74f4:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    74f8:	7c720003 	ldclvc	0, cr0, [r2], #-12
    74fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7500:	00000000 	andeq	r0, r0, r0
    7504:	00000200 	andeq	r0, r0, r0, lsl #4
    7508:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    750c:	80080015 	andhi	r0, r8, r5, lsl r0
    7510:	01080015 	tsteq	r8, r5, lsl r0
    7514:	15805600 	strne	r5, [r0, #1536]	; 0x600
    7518:	15820800 	strne	r0, [r2, #2048]	; 0x800
    751c:	00040800 	andeq	r0, r4, r0, lsl #16
    7520:	9f5201f3 	svcls	0x005201f3
    7524:	080015ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, sl, ip}
    7528:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    752c:	00560001 	subseq	r0, r6, r1
    7530:	00000000 	andeq	r0, r0, r0
    7534:	02000000 	andeq	r0, r0, #0
    7538:	00000000 	andeq	r0, r0, r0
    753c:	00155800 	andseq	r5, r5, r0, lsl #16
    7540:	00157608 	andseq	r7, r5, r8, lsl #12
    7544:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7548:	08001576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, ip}
    754c:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
    7550:	01f30004 	mvnseq	r0, r4
    7554:	15ac9f51 	strne	r9, [ip, #3921]!	; 0xf51
    7558:	15b00800 	ldrne	r0, [r0, #2048]!	; 0x800
    755c:	00010800 	andeq	r0, r1, r0, lsl #16
    7560:	00000054 	andeq	r0, r0, r4, asr r0
    7564:	00000000 	andeq	r0, r0, r0
    7568:	00000200 	andeq	r0, r0, r0, lsl #4
    756c:	00000000 	andeq	r0, r0, r0
    7570:	00155800 	andseq	r5, r5, r0, lsl #16
    7574:	00156a08 	andseq	r6, r5, r8, lsl #20
    7578:	53000108 	movwpl	r0, #264	; 0x108
    757c:	0800156a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl, ip}
    7580:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    7584:	7c720003 	ldclvc	0, cr0, [r2], #-12
    7588:	0015ac9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    758c:	0015ae08 	andseq	sl, r5, r8, lsl #28
    7590:	53000108 	movwpl	r0, #264	; 0x108
    7594:	080015ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, sl, ip}
    7598:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    759c:	7c720003 	ldclvc	0, cr0, [r2], #-12
    75a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    75a4:	00000000 	andeq	r0, r0, r0
    75a8:	00000400 	andeq	r0, r0, r0, lsl #8
    75ac:	00000000 	andeq	r0, r0, r0
    75b0:	00155800 	andseq	r5, r5, r0, lsl #16
    75b4:	00156a08 	andseq	r6, r5, r8, lsl #20
    75b8:	53000108 	movwpl	r0, #264	; 0x108
    75bc:	0800156a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl, ip}
    75c0:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    75c4:	7c720003 	ldclvc	0, cr0, [r2], #-12
    75c8:	0015ac9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    75cc:	0015ae08 	andseq	sl, r5, r8, lsl #28
    75d0:	53000108 	movwpl	r0, #264	; 0x108
    75d4:	080015ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, sl, ip}
    75d8:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    75dc:	7c720003 	ldclvc	0, cr0, [r2], #-12
    75e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    75ec:	00156200 	andseq	r6, r5, r0, lsl #4
    75f0:	00157208 	andseq	r7, r5, r8, lsl #4
    75f4:	51000108 	tstpl	r0, r8, lsl #2
    75f8:	080015ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, sl, ip}
    75fc:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    7600:	00510001 	subseq	r0, r1, r1
	...
    760c:	00156a00 	andseq	r6, r5, r0, lsl #20
    7610:	00157c08 	andseq	r7, r5, r8, lsl #24
    7614:	53000108 	movwpl	r0, #264	; 0x108
	...
    7624:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
    7628:	08001588 	stmdaeq	r0, {r3, r7, r8, sl, ip}
    762c:	b0540001 	subslt	r0, r4, r1
    7630:	b6080015 			; <UNDEFINED> instruction: 0xb6080015
    7634:	01080015 	tsteq	r8, r5, lsl r0
    7638:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7644:	15820000 	strne	r0, [r2]
    7648:	158e0800 	strne	r0, [lr, #2048]	; 0x800
    764c:	00010800 	andeq	r0, r1, r0, lsl #16
    7650:	0015b055 	andseq	fp, r5, r5, asr r0
    7654:	0015b408 	andseq	fp, r5, r8, lsl #8
    7658:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    7664:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
    7668:	08001506 	stmdaeq	r0, {r1, r2, r8, sl, ip}
    766c:	007d0002 	rsbseq	r0, sp, r2
    7670:	08001506 	stmdaeq	r0, {r1, r2, r8, sl, ip}
    7674:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    7678:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    768c:	15040000 	strne	r0, [r4, #-0]
    7690:	150e0800 	strne	r0, [lr, #-2048]	; 0xfffff800
    7694:	00010800 	andeq	r0, r1, r0, lsl #16
    7698:	00150e50 	andseq	r0, r5, r0, asr lr
    769c:	00151c08 	andseq	r1, r5, r8, lsl #24
    76a0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    76a4:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
    76a8:	0800152e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, ip}
    76ac:	01f30004 	mvnseq	r0, r4
    76b0:	152e9f50 	strne	r9, [lr, #-3920]!	; 0xfffff0b0
    76b4:	15320800 	ldrne	r0, [r2, #-2048]!	; 0xfffff800
    76b8:	00010800 	andeq	r0, r1, r0, lsl #16
    76bc:	00153250 	andseq	r3, r5, r0, asr r2
    76c0:	00154008 	andseq	r4, r5, r8
    76c4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    76d0:	00000001 	andeq	r0, r0, r1
    76d4:	0800150e 	stmdaeq	r0, {r1, r2, r3, r8, sl, ip}
    76d8:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
    76dc:	1c540001 	mrrcne	0, 0, r0, r4, cr1
    76e0:	2c080015 	stccs	0, cr0, [r8], {21}
    76e4:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    76e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    76ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    76f8:	12000000 	andne	r0, r0, #0
    76fc:	16080015 			; <UNDEFINED> instruction: 0x16080015
    7700:	01080015 	tsteq	r8, r5, lsl r0
    7704:	151a5300 	ldrne	r5, [sl, #-768]	; 0xfffffd00
    7708:	15220800 	strne	r0, [r2, #-2048]!	; 0xfffff800
    770c:	00010800 	andeq	r0, r1, r0, lsl #16
    7710:	00152a53 	andseq	r2, r5, r3, asr sl
    7714:	00152c08 	andseq	r2, r5, r8, lsl #24
    7718:	53000108 	movwpl	r0, #264	; 0x108
	...
    7724:	00000004 	andeq	r0, r0, r4
    7728:	0800150e 	stmdaeq	r0, {r1, r2, r3, r8, sl, ip}
    772c:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
    7730:	00740005 	rsbseq	r0, r4, r5
    7734:	1c9f1a37 	vldmiane	pc, {s2-s56}
    7738:	2e080015 	mcrcs	0, 0, r0, cr8, cr5, {0}
    773c:	06080015 			; <UNDEFINED> instruction: 0x06080015
    7740:	5001f300 	andpl	pc, r1, r0, lsl #6
    7744:	009f1a37 	addseq	r1, pc, r7, lsr sl	; <UNPREDICTABLE>
    7748:	00000000 	andeq	r0, r0, r0
    774c:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    7750:	ca080016 	bgt	2077b0 <_Min_Heap_Size+0x206fb0>
    7754:	02080016 	andeq	r0, r8, #22
    7758:	ca007d00 	bgt	26b60 <_Min_Heap_Size+0x26360>
    775c:	f0080016 			; <UNDEFINED> instruction: 0xf0080016
    7760:	02080016 	andeq	r0, r8, #22
    7764:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7774:	0016c800 	andseq	ip, r6, r0, lsl #16
    7778:	0016cf08 	andseq	ip, r6, r8, lsl #30
    777c:	50000108 	andpl	r0, r0, r8, lsl #2
    7780:	080016cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r9, sl, ip}
    7784:	080016de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, sl, ip}
    7788:	de540001 	cdple	0, 5, cr0, cr4, cr1, {0}
    778c:	f0080016 			; <UNDEFINED> instruction: 0xf0080016
    7790:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7794:	5001f300 	andpl	pc, r1, r0, lsl #6
    7798:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    77a4:	0016d200 	andseq	sp, r6, r0, lsl #4
    77a8:	0016de08 	andseq	sp, r6, r8, lsl #28
    77ac:	50000108 	andpl	r0, r0, r8, lsl #2
    77b0:	080016de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, sl, ip}
    77b4:	080016ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, sl, ip}
    77b8:	00550001 	subseq	r0, r5, r1
    77bc:	00000000 	andeq	r0, r0, r0
    77c0:	01000000 	mrseq	r0, (UNDEF: 0)
    77c4:	0016d200 	andseq	sp, r6, r0, lsl #4
    77c8:	0016ea08 	andseq	lr, r6, r8, lsl #20
    77cc:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    77e0:	007d0002 	rsbseq	r0, sp, r2
	...
    77ec:	107d0002 	rsbsne	r0, sp, r2
	...
    7808:	00500001 	subseq	r0, r0, r1
    780c:	00000000 	andeq	r0, r0, r0
    7810:	04000000 	streq	r0, [r0], #-0
    7814:	5001f300 	andpl	pc, r1, r0, lsl #6
    7818:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    781c:	00000000 	andeq	r0, r0, r0
    7820:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    782c:	01f30004 	mvnseq	r0, r4
    7830:	00009f50 	andeq	r9, r0, r0, asr pc
    7834:	00000000 	andeq	r0, r0, r0
    7838:	00010000 	andeq	r0, r1, r0
	...
    7848:	00020000 	andeq	r0, r2, r0
    784c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7850:	00000000 	andeq	r0, r0, r0
    7854:	00010000 	andeq	r0, r1, r0
    7858:	00000050 	andeq	r0, r0, r0, asr r0
    785c:	00000000 	andeq	r0, r0, r0
    7860:	30000200 	andcc	r0, r0, r0, lsl #4
    7864:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7868:	00000000 	andeq	r0, r0, r0
    786c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7878:	00000001 	andeq	r0, r0, r1
    787c:	00000000 	andeq	r0, r0, r0
    7880:	00010000 	andeq	r0, r1, r0
    7884:	00000055 	andeq	r0, r0, r5, asr r0
    7888:	00000000 	andeq	r0, r0, r0
    788c:	00162400 	andseq	r2, r6, r0, lsl #8
    7890:	00162608 	andseq	r2, r6, r8, lsl #12
    7894:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7898:	00162600 	andseq	r2, r6, r0, lsl #12
    789c:	00167008 	andseq	r7, r6, r8
    78a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    78a4:	00000008 	andeq	r0, r0, r8
	...
    78b0:	24000000 	strcs	r0, [r0], #-0
    78b4:	2c080016 	stccs	0, cr0, [r8], {22}
    78b8:	01080016 	tsteq	r8, r6, lsl r0
    78bc:	162c5000 	strtne	r5, [ip], -r0
    78c0:	16620800 	strbtne	r0, [r2], -r0, lsl #16
    78c4:	00010800 	andeq	r0, r1, r0, lsl #16
    78c8:	00166254 	andseq	r6, r6, r4, asr r2
    78cc:	00167008 	andseq	r7, r6, r8
    78d0:	f3000408 	vshl.u8	d0, d8, d0
    78d4:	009f5001 	addseq	r5, pc, r1
	...
    78e4:	02000000 	andeq	r0, r0, #0
    78e8:	00007d00 	andeq	r7, r0, r0, lsl #26
    78ec:	00000000 	andeq	r0, r0, r0
    78f0:	02000000 	andeq	r0, r0, #0
    78f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    78f8:	00000000 	andeq	r0, r0, r0
    78fc:	70000000 	andvc	r0, r0, r0
    7900:	72080016 	andvc	r0, r8, #22
    7904:	02080016 	andeq	r0, r8, #22
    7908:	72007d00 	andvc	r7, r0, #0, 26
    790c:	a4080016 	strge	r0, [r8], #-22	; 0xffffffea
    7910:	02080016 	andeq	r0, r8, #22
    7914:	00087d00 	andeq	r7, r8, r0, lsl #26
    7918:	00000000 	andeq	r0, r0, r0
    791c:	02000000 	andeq	r0, r0, #0
	...
    7930:	02000000 	andeq	r0, r0, #0
    7934:	009f3000 	addseq	r3, pc, r0
    7938:	00000000 	andeq	r0, r0, r0
    793c:	01000000 	mrseq	r0, (UNDEF: 0)
    7940:	00005300 	andeq	r5, r0, r0, lsl #6
    7944:	00000000 	andeq	r0, r0, r0
    7948:	00010000 	andeq	r0, r1, r0
    794c:	00000053 	andeq	r0, r0, r3, asr r0
    7950:	00000000 	andeq	r0, r0, r0
    7954:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7960:	00530001 	subseq	r0, r3, r1
    7964:	00000000 	andeq	r0, r0, r0
    7968:	01000000 	mrseq	r0, (UNDEF: 0)
    796c:	00005300 	andeq	r5, r0, r0, lsl #6
    7970:	00000000 	andeq	r0, r0, r0
    7974:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    7988:	9f300002 	svcls	0x00300002
	...
    7994:	9f300002 	svcls	0x00300002
	...
    79a0:	00530001 	subseq	r0, r3, r1
    79a4:	00000000 	andeq	r0, r0, r0
    79a8:	02000000 	andeq	r0, r0, #0
    79ac:	009f3000 	addseq	r3, pc, r0
    79b0:	00000000 	andeq	r0, r0, r0
    79b4:	01000000 	mrseq	r0, (UNDEF: 0)
    79b8:	00005300 	andeq	r5, r0, r0, lsl #6
    79bc:	00000000 	andeq	r0, r0, r0
    79c0:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    79d0:	00020000 	andeq	r0, r2, r0
    79d4:	00009f32 	andeq	r9, r0, r2, lsr pc
    79d8:	00000000 	andeq	r0, r0, r0
    79dc:	00020000 	andeq	r0, r2, r0
    79e0:	00009f32 	andeq	r9, r0, r2, lsr pc
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	00010000 	andeq	r0, r1, r0
    79ec:	00000052 	andeq	r0, r0, r2, asr r0
    79f0:	00000000 	andeq	r0, r0, r0
    79f4:	32000200 	andcc	r0, r0, #0, 4
    79f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    79fc:	00000000 	andeq	r0, r0, r0
    7a00:	00010200 	andeq	r0, r1, r0, lsl #4
	...
    7a0c:	02000000 	andeq	r0, r0, #0
    7a10:	009f3000 	addseq	r3, pc, r0
    7a14:	00000000 	andeq	r0, r0, r0
    7a18:	02000000 	andeq	r0, r0, #0
    7a1c:	009f3000 	addseq	r3, pc, r0
    7a20:	00000000 	andeq	r0, r0, r0
    7a24:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7a28:	09007100 	stmdbeq	r0, {r8, ip, sp, lr}
    7a2c:	253324ed 	ldrcs	r2, [r3, #-1261]!	; 0xfffffb13
    7a30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a34:	00000000 	andeq	r0, r0, r0
    7a38:	00010200 	andeq	r0, r1, r0, lsl #4
	...
    7a48:	32000200 	andcc	r0, r0, #0, 4
    7a4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	32000200 	andcc	r0, r0, #0, 4
    7a58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	52000100 	andpl	r0, r0, #0, 2
	...
    7a6c:	00520001 	subseq	r0, r2, r1
    7a70:	00000000 	andeq	r0, r0, r0
    7a74:	04000000 	streq	r0, [r0], #-0
    7a78:	06080017 			; <UNDEFINED> instruction: 0x06080017
    7a7c:	02080017 	andeq	r0, r8, #23
    7a80:	06007d00 	streq	r7, [r0], -r0, lsl #26
    7a84:	4c080017 	stcmi	0, cr0, [r8], {23}
    7a88:	02080017 	andeq	r0, r8, #23
    7a8c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7aa0:	00170400 	andseq	r0, r7, r0, lsl #8
    7aa4:	00170e08 	andseq	r0, r7, r8, lsl #28
    7aa8:	50000108 	andpl	r0, r0, r8, lsl #2
    7aac:	0800170e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, ip}
    7ab0:	08001718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip}
    7ab4:	18530001 	ldmdane	r3, {r0}^
    7ab8:	24080017 	strcs	r0, [r8], #-23	; 0xffffffe9
    7abc:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    7ac0:	5001f300 	andpl	pc, r1, r0, lsl #6
    7ac4:	0017249f 	mulseq	r7, pc, r4	; <UNPREDICTABLE>
    7ac8:	00172c08 	andseq	r2, r7, r8, lsl #24
    7acc:	53000108 	movwpl	r0, #264	; 0x108
    7ad0:	0800172c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, ip}
    7ad4:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
    7ad8:	01f30004 	mvnseq	r0, r4
    7adc:	00009f50 	andeq	r9, r0, r0, asr pc
    7ae0:	00000000 	andeq	r0, r0, r0
    7ae4:	01010000 	mrseq	r0, (UNDEF: 1)
    7ae8:	0800171e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, ip}
    7aec:	08001722 	stmdaeq	r0, {r1, r5, r8, r9, sl, ip}
    7af0:	00500001 	subseq	r0, r0, r1
	...
    7b00:	02000000 	andeq	r0, r0, #0
    7b04:	00007d00 	andeq	r7, r0, r0, lsl #26
    7b08:	00000000 	andeq	r0, r0, r0
    7b0c:	02000000 	andeq	r0, r0, #0
    7b10:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7b24:	01000000 	mrseq	r0, (UNDEF: 0)
    7b28:	00005000 	andeq	r5, r0, r0
    7b2c:	00000000 	andeq	r0, r0, r0
    7b30:	00040000 	andeq	r0, r4, r0
    7b34:	9f5001f3 	svcls	0x005001f3
	...
    7b4c:	00510001 	subseq	r0, r1, r1
    7b50:	00000000 	andeq	r0, r0, r0
    7b54:	04000000 	streq	r0, [r0], #-0
    7b58:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7b5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7b70:	52000100 	andpl	r0, r0, #0, 2
	...
    7b7c:	01f30004 	mvnseq	r0, r4
    7b80:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    7b90:	00020000 	andeq	r0, r2, r0
    7b94:	0000007d 	andeq	r0, r0, sp, ror r0
    7b98:	00000000 	andeq	r0, r0, r0
    7b9c:	00020000 	andeq	r0, r2, r0
    7ba0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7bb0:	00020000 	andeq	r0, r2, r0
    7bb4:	0000007d 	andeq	r0, r0, sp, ror r0
    7bb8:	00000000 	andeq	r0, r0, r0
    7bbc:	00020000 	andeq	r0, r2, r0
    7bc0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7bd4:	00010000 	andeq	r0, r1, r0
    7bd8:	00000050 	andeq	r0, r0, r0, asr r0
    7bdc:	00000000 	andeq	r0, r0, r0
    7be0:	f3000400 	vshl.u8	d0, d0, d0
    7be4:	009f5001 	addseq	r5, pc, r1
	...
    7bf8:	01000000 	mrseq	r0, (UNDEF: 0)
    7bfc:	00005100 	andeq	r5, r0, r0, lsl #2
    7c00:	00000000 	andeq	r0, r0, r0
    7c04:	00040000 	andeq	r0, r4, r0
    7c08:	9f5101f3 	svcls	0x005101f3
	...
    7c20:	00500001 	subseq	r0, r0, r1
    7c24:	00000000 	andeq	r0, r0, r0
    7c28:	04000000 	streq	r0, [r0], #-0
    7c2c:	5001f300 	andpl	pc, r1, r0, lsl #6
    7c30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7c44:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7c50:	01f30004 	mvnseq	r0, r4
    7c54:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7c64:	00020000 	andeq	r0, r2, r0
    7c68:	0000007d 	andeq	r0, r0, sp, ror r0
    7c6c:	00000000 	andeq	r0, r0, r0
    7c70:	00020000 	andeq	r0, r2, r0
    7c74:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7c88:	00010000 	andeq	r0, r1, r0
    7c8c:	00000050 	andeq	r0, r0, r0, asr r0
    7c90:	00000000 	andeq	r0, r0, r0
    7c94:	f3000400 	vshl.u8	d0, d0, d0
    7c98:	009f5001 	addseq	r5, pc, r1
	...
    7ca8:	02000000 	andeq	r0, r0, #0
    7cac:	00007d00 	andeq	r7, r0, r0, lsl #26
    7cb0:	00000000 	andeq	r0, r0, r0
    7cb4:	02000000 	andeq	r0, r0, #0
    7cb8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7ccc:	01000000 	mrseq	r0, (UNDEF: 0)
    7cd0:	00005000 	andeq	r5, r0, r0
    7cd4:	00000000 	andeq	r0, r0, r0
    7cd8:	00040000 	andeq	r0, r4, r0
    7cdc:	9f5001f3 	svcls	0x005001f3
	...
    7cf0:	007d0002 	rsbseq	r0, sp, r2
	...
    7cfc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    7d08:	007d0002 	rsbseq	r0, sp, r2
	...
    7d20:	00500001 	subseq	r0, r0, r1
    7d24:	00000000 	andeq	r0, r0, r0
    7d28:	04000000 	streq	r0, [r0], #-0
    7d2c:	5001f300 	andpl	pc, r1, r0, lsl #6
    7d30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7d3c:	00179c00 	andseq	r9, r7, r0, lsl #24
    7d40:	00179e08 	andseq	r9, r7, r8, lsl #28
    7d44:	50000108 	andpl	r0, r0, r8, lsl #2
    7d48:	0800179e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, sl, ip}
    7d4c:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    7d50:	01f30004 	mvnseq	r0, r4
    7d54:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7d60:	17980000 	ldrne	r0, [r8, r0]
    7d64:	179a0800 	ldrne	r0, [sl, r0, lsl #16]
    7d68:	00010800 	andeq	r0, r1, r0, lsl #16
    7d6c:	00179a50 	andseq	r9, r7, r0, asr sl
    7d70:	00179c08 	andseq	r9, r7, r8, lsl #24
    7d74:	f3000408 	vshl.u8	d0, d8, d0
    7d78:	009f5001 	addseq	r5, pc, r1
	...
    7d84:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    7d88:	96080017 			; <UNDEFINED> instruction: 0x96080017
    7d8c:	01080017 	tsteq	r8, r7, lsl r0
    7d90:	17965000 	ldrne	r5, [r6, r0]
    7d94:	17980800 	ldrne	r0, [r8, r0, lsl #16]
    7d98:	00040800 	andeq	r0, r4, r0, lsl #16
    7d9c:	9f5001f3 	svcls	0x005001f3
	...
    7dac:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
    7db0:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
    7db4:	8c500001 	mrrchi	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7db8:	8e080017 	mcrhi	0, 0, r0, cr8, cr7, {0}
    7dbc:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    7dc0:	5001f300 	andpl	pc, r1, r0, lsl #6
    7dc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7dc8:	00000000 	andeq	r0, r0, r0
    7dcc:	00176c00 	andseq	r6, r7, r0, lsl #24
    7dd0:	00176e08 	andseq	r6, r7, r8, lsl #28
    7dd4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7dd8:	00176e00 	andseq	r6, r7, r0, lsl #28
    7ddc:	00178808 	andseq	r8, r7, r8, lsl #16
    7de0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7de4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7df0:	00176c00 	andseq	r6, r7, r0, lsl #24
    7df4:	00177608 	andseq	r7, r7, r8, lsl #12
    7df8:	50000108 	andpl	r0, r0, r8, lsl #2
    7dfc:	08001776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, ip}
    7e00:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
    7e04:	01f30004 	mvnseq	r0, r4
    7e08:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7e14:	00010100 	andeq	r0, r1, r0, lsl #2
    7e18:	176c0000 	strbne	r0, [ip, -r0]!
    7e1c:	17760800 	ldrbne	r0, [r6, -r0, lsl #16]!
    7e20:	00010800 	andeq	r0, r1, r0, lsl #16
    7e24:	00177651 	andseq	r7, r7, r1, asr r6
    7e28:	00177608 	andseq	r7, r7, r8, lsl #12
    7e2c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7e30:	08001776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, ip}
    7e34:	0800177a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl, ip}
    7e38:	01740003 	cmneq	r4, r3
    7e3c:	00177a9f 	mulseq	r7, pc, sl	; <UNPREDICTABLE>
    7e40:	00178808 	andseq	r8, r7, r8, lsl #16
    7e44:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    7e54:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    7e58:	08001776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, ip}
    7e5c:	76520001 	ldrbvc	r0, [r2], -r1
    7e60:	88080017 	stmdahi	r8, {r0, r1, r2, r4}
    7e64:	01080017 	tsteq	r8, r7, lsl r0
    7e68:	00005600 	andeq	r5, r0, r0, lsl #12
    7e6c:	00000000 	andeq	r0, r0, r0
    7e70:	00030000 	andeq	r0, r3, r0
    7e74:	17720000 	ldrbne	r0, [r2, -r0]!
    7e78:	17760800 	ldrbne	r0, [r6, -r0, lsl #16]!
    7e7c:	00020800 	andeq	r0, r2, r0, lsl #16
    7e80:	17769f30 			; <UNDEFINED> instruction: 0x17769f30
    7e84:	17880800 	strne	r0, [r8, r0, lsl #16]
    7e88:	00010800 	andeq	r0, r1, r0, lsl #16
    7e8c:	00000055 	andeq	r0, r0, r5, asr r0
    7e90:	00000000 	andeq	r0, r0, r0
    7e94:	00174c00 	andseq	r4, r7, r0, lsl #24
    7e98:	00174e08 	andseq	r4, r7, r8, lsl #28
    7e9c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7ea0:	00174e00 	andseq	r4, r7, r0, lsl #28
    7ea4:	00176c08 	andseq	r6, r7, r8, lsl #24
    7ea8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7eac:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7eb8:	00174c00 	andseq	r4, r7, r0, lsl #24
    7ebc:	00175608 	andseq	r5, r7, r8, lsl #12
    7ec0:	50000108 	andpl	r0, r0, r8, lsl #2
    7ec4:	08001756 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, sl, ip}
    7ec8:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    7ecc:	01f30004 	mvnseq	r0, r4
    7ed0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7ee0:	174c0000 	strbne	r0, [ip, -r0]
    7ee4:	17590800 	ldrbne	r0, [r9, -r0, lsl #16]
    7ee8:	00010800 	andeq	r0, r1, r0, lsl #16
    7eec:	00175951 	andseq	r5, r7, r1, asr r9
    7ef0:	00175c08 	andseq	r5, r7, r8, lsl #24
    7ef4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7ef8:	0800175c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, ip}
    7efc:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
    7f00:	01710003 	cmneq	r1, r3
    7f04:	0017609f 	mulseq	r7, pc, r0	; <UNPREDICTABLE>
    7f08:	00176c08 	andseq	r6, r7, r8, lsl #24
    7f0c:	51000108 	tstpl	r0, r8, lsl #2
	...
    7f1c:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
    7f20:	08001756 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, sl, ip}
    7f24:	56520001 	ldrbpl	r0, [r2], -r1
    7f28:	6c080017 	stcvs	0, cr0, [r8], {23}
    7f2c:	01080017 	tsteq	r8, r7, lsl r0
    7f30:	00005600 	andeq	r5, r0, r0, lsl #12
    7f34:	00000000 	andeq	r0, r0, r0
    7f38:	00030000 	andeq	r0, r3, r0
    7f3c:	17520000 	ldrbne	r0, [r2, -r0]
    7f40:	17560800 	ldrbne	r0, [r6, -r0, lsl #16]
    7f44:	00020800 	andeq	r0, r2, r0, lsl #16
    7f48:	17569f30 	smmlarne	r6, r0, pc, r9	; <UNPREDICTABLE>
    7f4c:	176c0800 	strbne	r0, [ip, -r0, lsl #16]!
    7f50:	00010800 	andeq	r0, r1, r0, lsl #16
    7f54:	00000055 	andeq	r0, r0, r5, asr r0
	...
    7f64:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7f70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7f74:	00000008 	andeq	r0, r0, r8
	...
    7f88:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7f94:	01f30004 	mvnseq	r0, r4
    7f98:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7fa8:	00020000 	andeq	r0, r2, r0
    7fac:	0000007d 	andeq	r0, r0, sp, ror r0
    7fb0:	00000000 	andeq	r0, r0, r0
    7fb4:	00020000 	andeq	r0, r2, r0
    7fb8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7fcc:	00010000 	andeq	r0, r1, r0
    7fd0:	00000050 	andeq	r0, r0, r0, asr r0
    7fd4:	00000000 	andeq	r0, r0, r0
    7fd8:	f3000400 	vshl.u8	d0, d0, d0
    7fdc:	009f5001 	addseq	r5, pc, r1
	...
    7ff0:	01000000 	mrseq	r0, (UNDEF: 0)
    7ff4:	00005100 	andeq	r5, r0, r0, lsl #2
    7ff8:	00000000 	andeq	r0, r0, r0
    7ffc:	00040000 	andeq	r0, r4, r0
    8000:	9f5101f3 	svcls	0x005101f3
	...
    800c:	00000100 	andeq	r0, r0, r0, lsl #2
    8010:	00000000 	andeq	r0, r0, r0
    8014:	00010000 	andeq	r0, r1, r0
    8018:	00000050 	andeq	r0, r0, r0, asr r0
    801c:	00000000 	andeq	r0, r0, r0
    8020:	00185400 	andseq	r5, r8, r0, lsl #8
    8024:	00185808 	andseq	r5, r8, r8, lsl #16
    8028:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    802c:	00185800 	andseq	r5, r8, r0, lsl #16
    8030:	0018d008 	andseq	sp, r8, r8
    8034:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8038:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    8048:	00185400 	andseq	r5, r8, r0, lsl #8
    804c:	00186e08 	andseq	r6, r8, r8, lsl #28
    8050:	50000108 	andpl	r0, r0, r8, lsl #2
    8054:	0800186e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp, ip}
    8058:	080018a8 	stmdaeq	r0, {r3, r5, r7, fp, ip}
    805c:	a8580001 	ldmdage	r8, {r0}^
    8060:	ae080018 	mcrge	0, 0, r0, cr8, cr8, {0}
    8064:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    8068:	5001f300 	andpl	pc, r1, r0, lsl #6
    806c:	0018ae9f 	mulseq	r8, pc, lr	; <UNPREDICTABLE>
    8070:	0018d008 	andseq	sp, r8, r8
    8074:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    8088:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
    808c:	0800186e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp, ip}
    8090:	6e510001 	cdpvs	0, 5, cr0, cr1, cr1, {0}
    8094:	a8080018 	stmdage	r8, {r3, r4}
    8098:	01080018 	tsteq	r8, r8, lsl r0
    809c:	18a85700 	stmiane	r8!, {r8, r9, sl, ip, lr}
    80a0:	18ae0800 	stmiane	lr!, {fp}
    80a4:	00040800 	andeq	r0, r4, r0, lsl #16
    80a8:	9f5101f3 	svcls	0x005101f3
    80ac:	080018ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp, ip}
    80b0:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    80b4:	00510001 	subseq	r0, r1, r1
	...
    80c4:	00185400 	andseq	r5, r8, r0, lsl #8
    80c8:	00186e08 	andseq	r6, r8, r8, lsl #28
    80cc:	52000108 	andpl	r0, r0, #8, 2
    80d0:	0800186e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp, ip}
    80d4:	080018ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp, ip}
    80d8:	01f30004 	mvnseq	r0, r4
    80dc:	18ae9f52 	stmiane	lr!, {r1, r4, r6, r8, r9, sl, fp, ip, pc}
    80e0:	18d00800 	ldmne	r0, {fp}^
    80e4:	00010800 	andeq	r0, r1, r0, lsl #16
    80e8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    80f8:	00185400 	andseq	r5, r8, r0, lsl #8
    80fc:	00186e08 	andseq	r6, r8, r8, lsl #28
    8100:	53000108 	movwpl	r0, #264	; 0x108
    8104:	0800186e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp, ip}
    8108:	080018a8 	stmdaeq	r0, {r3, r5, r7, fp, ip}
    810c:	a8550001 	ldmdage	r5, {r0}^
    8110:	ae080018 	mcrge	0, 0, r0, cr8, cr8, {0}
    8114:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    8118:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    811c:	0018ae9f 	mulseq	r8, pc, lr	; <UNPREDICTABLE>
    8120:	0018d008 	andseq	sp, r8, r8
    8124:	53000108 	movwpl	r0, #264	; 0x108
	...
    8130:	00000001 	andeq	r0, r0, r1
    8134:	18580000 	ldmdane	r8, {}^	; <UNPREDICTABLE>
    8138:	186e0800 	stmdane	lr!, {fp}^
    813c:	00020800 	andeq	r0, r2, r0, lsl #16
    8140:	186e9f30 	stmdane	lr!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    8144:	18a80800 	stmiane	r8!, {fp}
    8148:	00010800 	andeq	r0, r1, r0, lsl #16
    814c:	0018ae56 	andseq	sl, r8, r6, asr lr
    8150:	0018c408 	andseq	ip, r8, r8, lsl #8
    8154:	30000208 	andcc	r0, r0, r8, lsl #4
    8158:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    815c:	00000000 	andeq	r0, r0, r0
    8160:	00000200 	andeq	r0, r0, r0, lsl #4
    8164:	00000101 	andeq	r0, r0, r1, lsl #2
    8168:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    816c:	6e080018 	mcrvs	0, 0, r0, cr8, cr8, {0}
    8170:	02080018 	andeq	r0, r8, #24
    8174:	789f3000 	ldmvc	pc, {ip, sp}	; <UNPREDICTABLE>
    8178:	8a080018 	bhi	2081e0 <_Min_Heap_Size+0x2079e0>
    817c:	01080018 	tsteq	r8, r8, lsl r0
    8180:	188a5200 	stmne	sl, {r9, ip, lr}
    8184:	188e0800 	stmne	lr, {fp}
    8188:	00030800 	andeq	r0, r3, r0, lsl #16
    818c:	8e9f7f72 	mrchi	15, 4, r7, cr15, cr2, {3}
    8190:	a8080018 	stmdage	r8, {r3, r4}
    8194:	01080018 	tsteq	r8, r8, lsl r0
    8198:	18ae5900 	stmiane	lr!, {r8, fp, ip, lr}
    819c:	18d00800 	ldmne	r0, {fp}^
    81a0:	00020800 	andeq	r0, r2, r0, lsl #16
    81a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    81a8:	00000000 	andeq	r0, r0, r0
    81ac:	00020000 	andeq	r0, r2, r0
    81b0:	00000000 	andeq	r0, r0, r0
    81b4:	08001858 	stmdaeq	r0, {r3, r4, r6, fp, ip}
    81b8:	0800186e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp, ip}
    81bc:	9f300002 	svcls	0x00300002
    81c0:	08001896 	stmdaeq	r0, {r1, r2, r4, r7, fp, ip}
    81c4:	08001899 	stmdaeq	r0, {r0, r3, r4, r7, fp, ip}
    81c8:	ae500001 	cdpge	0, 5, cr0, cr0, cr1, {0}
    81cc:	d0080018 	andle	r0, r8, r8, lsl r0
    81d0:	02080018 	andeq	r0, r8, #24
    81d4:	009f3000 	addseq	r3, pc, r0
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	02000000 	andeq	r0, r0, #0
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	00185800 	andseq	r5, r8, r0, lsl #16
    81e8:	00186e08 	andseq	r6, r8, r8, lsl #28
    81ec:	30000208 	andcc	r0, r0, r8, lsl #4
    81f0:	00186e9f 	mulseq	r8, pc, lr	; <UNPREDICTABLE>
    81f4:	0018a808 	andseq	sl, r8, r8, lsl #16
    81f8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    81fc:	080018ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp, ip}
    8200:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    8204:	9f300002 	svcls	0x00300002
	...
    8210:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    8214:	080018d2 	stmdaeq	r0, {r1, r4, r6, r7, fp, ip}
    8218:	007d0002 	rsbseq	r0, sp, r2
    821c:	080018d2 	stmdaeq	r0, {r1, r4, r6, r7, fp, ip}
    8220:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
    8224:	187d0002 	ldmdane	sp!, {r1}^
	...
    8234:	18d00000 	ldmne	r0, {}^	; <UNPREDICTABLE>
    8238:	191c0800 	ldmdbne	ip, {fp}
    823c:	00010800 	andeq	r0, r1, r0, lsl #16
    8240:	00191c50 	andseq	r1, r9, r0, asr ip
    8244:	0019ca08 	andseq	ip, r9, r8, lsl #20
    8248:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    824c:	080019ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, fp, ip}
    8250:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
    8254:	01f30004 	mvnseq	r0, r4
    8258:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8264:	18d00000 	ldmne	r0, {}^	; <UNPREDICTABLE>
    8268:	191f0800 	ldmdbne	pc, {fp}	; <UNPREDICTABLE>
    826c:	00010800 	andeq	r0, r1, r0, lsl #16
    8270:	00191f51 	andseq	r1, r9, r1, asr pc
    8274:	001a5c08 	andseq	r5, sl, r8, lsl #24
    8278:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    8284:	00000001 	andeq	r0, r0, r1
    8288:	18d60000 	ldmne	r6, {}^	; <UNPREDICTABLE>
    828c:	19ca0800 	stmibne	sl, {fp}^
    8290:	00020800 	andeq	r0, r2, r0, lsl #16
    8294:	19ca9f30 	stmibne	sl, {r4, r5, r8, r9, sl, fp, ip, pc}^
    8298:	19cc0800 	stmibne	ip, {fp}^
    829c:	00010800 	andeq	r0, r1, r0, lsl #16
    82a0:	0019cc50 	andseq	ip, r9, r0, asr ip
    82a4:	001a5c08 	andseq	r5, sl, r8, lsl #24
    82a8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    82b4:	01010101 	tsteq	r1, r1, lsl #2
    82b8:	00000001 	andeq	r0, r0, r1
    82bc:	080018d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, fp, ip}
    82c0:	080019ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, fp, ip}
    82c4:	9f300002 	svcls	0x00300002
    82c8:	080019ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, fp, ip}
    82cc:	080019d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, ip}
    82d0:	9f400002 	svcls	0x00400002
    82d4:	080019d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, ip}
    82d8:	080019dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip}
    82dc:	9f300002 	svcls	0x00300002
    82e0:	080019dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip}
    82e4:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
    82e8:	00540001 	subseq	r0, r4, r1
    82ec:	00000000 	andeq	r0, r0, r0
    82f0:	02000000 	andeq	r0, r0, #0
    82f4:	01010505 	tsteq	r1, r5, lsl #10
    82f8:	01010101 	tsteq	r1, r1, lsl #2
    82fc:	01010101 	tsteq	r1, r1, lsl #2
    8300:	01010101 	tsteq	r1, r1, lsl #2
    8304:	01010101 	tsteq	r1, r1, lsl #2
    8308:	01010101 	tsteq	r1, r1, lsl #2
    830c:	01010101 	tsteq	r1, r1, lsl #2
    8310:	01010101 	tsteq	r1, r1, lsl #2
    8314:	00000000 	andeq	r0, r0, r0
    8318:	0018d600 	andseq	sp, r8, r0, lsl #12
    831c:	0018d608 	andseq	sp, r8, r8, lsl #12
    8320:	50000108 	andpl	r0, r0, r8, lsl #2
    8324:	080018d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, fp, ip}
    8328:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
    832c:	04700003 	ldrbteq	r0, [r0], #-3
    8330:	0018dc9f 	mulseq	r8, pc, ip	; <UNPREDICTABLE>
    8334:	0018e008 	andseq	lr, r8, r8
    8338:	70000308 	andvc	r0, r0, r8, lsl #6
    833c:	18e09f08 	stmiane	r0!, {r3, r8, r9, sl, fp, ip, pc}^
    8340:	18e40800 	stmiane	r4!, {fp}^
    8344:	00030800 	andeq	r0, r3, r0, lsl #16
    8348:	e49f0c70 	ldr	r0, [pc], #3184	; 8350 <_Min_Heap_Size+0x7b50>
    834c:	e8080018 	stmda	r8, {r3, r4}
    8350:	03080018 	movweq	r0, #32792	; 0x8018
    8354:	9f107000 	svcls	0x00107000
    8358:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
    835c:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
    8360:	14700003 	ldrbtne	r0, [r0], #-3
    8364:	0018ec9f 	mulseq	r8, pc, ip	; <UNPREDICTABLE>
    8368:	0018f008 	andseq	pc, r8, r8
    836c:	70000308 	andvc	r0, r0, r8, lsl #6
    8370:	18f09f18 	ldmne	r0!, {r3, r4, r8, r9, sl, fp, ip, pc}^
    8374:	18f40800 	ldmne	r4!, {fp}^
    8378:	00030800 	andeq	r0, r3, r0, lsl #16
    837c:	f49f1c70 			; <UNDEFINED> instruction: 0xf49f1c70
    8380:	f8080018 			; <UNDEFINED> instruction: 0xf8080018
    8384:	03080018 	movweq	r0, #32792	; 0x8018
    8388:	9f207000 	svcls	0x00207000
    838c:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
    8390:	080018fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, ip}
    8394:	24700003 	ldrbtcs	r0, [r0], #-3
    8398:	0018fc9f 	mulseq	r8, pc, ip	; <UNPREDICTABLE>
    839c:	00190008 	andseq	r0, r9, r8
    83a0:	70000308 	andvc	r0, r0, r8, lsl #6
    83a4:	19009f28 	stmdbne	r0, {r3, r5, r8, r9, sl, fp, ip, pc}
    83a8:	19040800 	stmdbne	r4, {fp}
    83ac:	00030800 	andeq	r0, r3, r0, lsl #16
    83b0:	049f2c70 	ldreq	r2, [pc], #3184	; 83b8 <_Min_Heap_Size+0x7bb8>
    83b4:	08080019 	stmdaeq	r8, {r0, r3, r4}
    83b8:	03080019 	movweq	r0, #32793	; 0x8019
    83bc:	9f307000 	svcls	0x00307000
    83c0:	08001908 	stmdaeq	r0, {r3, r8, fp, ip}
    83c4:	0800190c 	stmdaeq	r0, {r2, r3, r8, fp, ip}
    83c8:	34700003 	ldrbtcc	r0, [r0], #-3
    83cc:	00190c9f 	mulseq	r9, pc, ip	; <UNPREDICTABLE>
    83d0:	00191008 	andseq	r1, r9, r8
    83d4:	70000308 	andvc	r0, r0, r8, lsl #6
    83d8:	19109f38 	ldmdbne	r0, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
    83dc:	19140800 	ldmdbne	r4, {fp}
    83e0:	00030800 	andeq	r0, r3, r0, lsl #16
    83e4:	149f3c70 	ldrne	r3, [pc], #3184	; 83ec <_Min_Heap_Size+0x7bec>
    83e8:	1c080019 	stcne	0, cr0, [r8], {25}
    83ec:	04080019 	streq	r0, [r8], #-25	; 0xffffffe7
    83f0:	00c07000 	sbceq	r7, r0, r0
    83f4:	00191c9f 	mulseq	r9, pc, ip	; <UNPREDICTABLE>
    83f8:	0019ca08 	andseq	ip, r9, r8, lsl #20
    83fc:	75000408 	strvc	r0, [r0, #-1032]	; 0xfffffbf8
    8400:	ca9f00c0 	bgt	fe7c8708 <_estack+0xde7c74d0>
    8404:	5c080019 	stcpl	0, cr0, [r8], {25}
    8408:	0608001a 			; <UNDEFINED> instruction: 0x0608001a
    840c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8410:	009f4023 	addseq	r4, pc, r3, lsr #32
	...
    841c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    8420:	d2080017 	andle	r0, r8, #23
    8424:	01080017 	tsteq	r8, r7, lsl r0
    8428:	17d25000 	ldrbne	r5, [r2, r0]
    842c:	18020800 	stmdane	r2, {fp}
    8430:	00040800 	andeq	r0, r4, r0, lsl #16
    8434:	9f5001f3 	svcls	0x005001f3
	...
    8440:	17d00000 	ldrbne	r0, [r0, r0]
    8444:	18020800 	stmdane	r2, {fp}
    8448:	00010800 	andeq	r0, r1, r0, lsl #16
    844c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    8468:	0017d600 	andseq	sp, r7, r0, lsl #12
    846c:	0017f008 	andseq	pc, r7, r8
    8470:	50000108 	andpl	r0, r0, r8, lsl #2
    8474:	080017f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, ip}
    8478:	080017f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, sl, ip}
    847c:	01f3000a 	mvnseq	r0, sl
    8480:	0a254050 	beq	9585c8 <_Min_Heap_Size+0x957dc8>
    8484:	9f1af800 	svcls	0x001af800
    8488:	080017f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, sl, ip}
    848c:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
    8490:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
    8494:	f6080017 			; <UNDEFINED> instruction: 0xf6080017
    8498:	0a080017 	beq	2084fc <_Min_Heap_Size+0x207cfc>
    849c:	5001f300 	andpl	pc, r1, r0, lsl #6
    84a0:	000a2540 	andeq	r2, sl, r0, asr #10
    84a4:	f69f1af8 			; <UNDEFINED> instruction: 0xf69f1af8
    84a8:	f8080017 			; <UNDEFINED> instruction: 0xf8080017
    84ac:	01080017 	tsteq	r8, r7, lsl r0
    84b0:	17f85000 	ldrbne	r5, [r8, r0]!
    84b4:	17fa0800 	ldrbne	r0, [sl, r0, lsl #16]!
    84b8:	000a0800 	andeq	r0, sl, r0, lsl #16
    84bc:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    84c0:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    84c4:	17fa9f1a 			; <UNDEFINED> instruction: 0x17fa9f1a
    84c8:	17fc0800 	ldrbne	r0, [ip, r0, lsl #16]!
    84cc:	00010800 	andeq	r0, r1, r0, lsl #16
    84d0:	0017fc50 	andseq	pc, r7, r0, asr ip	; <UNPREDICTABLE>
    84d4:	0017fe08 	andseq	pc, r7, r8, lsl #28
    84d8:	f3000a08 	vpmax.u8	d0, d0, d8
    84dc:	25405001 	strbcs	r5, [r0, #-1]
    84e0:	1af8000a 	bne	ffe08510 <_estack+0xdfe072d8>
    84e4:	0017fe9f 	mulseq	r7, pc, lr	; <UNPREDICTABLE>
    84e8:	00180008 	andseq	r0, r8, r8
    84ec:	50000108 	andpl	r0, r0, r8, lsl #2
    84f0:	08001800 	stmdaeq	r0, {fp, ip}
    84f4:	08001802 	stmdaeq	r0, {r1, fp, ip}
    84f8:	01f3000a 	mvnseq	r0, sl
    84fc:	0a254050 	beq	958644 <_Min_Heap_Size+0x957e44>
    8500:	9f1af800 	svcls	0x001af800
	...
    850c:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    8510:	080017a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, ip}
    8514:	007d0002 	rsbseq	r0, sp, r2
    8518:	080017a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, ip}
    851c:	080017ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl, ip}
    8520:	087d0002 	ldmdaeq	sp!, {r1}^
    8524:	080017ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl, ip}
    8528:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    852c:	007d0002 	rsbseq	r0, sp, r2
	...
    853c:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    8540:	080017c0 	stmdaeq	r0, {r6, r7, r8, r9, sl, ip}
    8544:	c0500001 	subsgt	r0, r0, r1
    8548:	cc080017 	stcgt	0, cr0, [r8], {23}
    854c:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    8550:	5001f300 	andpl	pc, r1, r0, lsl #6
    8554:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8558:	00000000 	andeq	r0, r0, r0
    855c:	00000100 	andeq	r0, r0, r0, lsl #2
    8560:	a6000000 	strge	r0, [r0], -r0
    8564:	c4080017 	strgt	r0, [r8], #-23	; 0xffffffe9
    8568:	02080017 	andeq	r0, r8, #23
    856c:	c49f3000 	ldrgt	r3, [pc], #0	; 8574 <_Min_Heap_Size+0x7d74>
    8570:	c8080017 	stmdagt	r8, {r0, r1, r2, r4}
    8574:	08080017 	stmdaeq	r8, {r0, r1, r2, r4}
    8578:	40007000 	andmi	r7, r0, r0
    857c:	21007324 	tstcs	r0, r4, lsr #6
    8580:	0017c89f 	mulseq	r7, pc, r8	; <UNPREDICTABLE>
    8584:	0017cc08 	andseq	ip, r7, r8, lsl #24
    8588:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    8594:	00000003 	andeq	r0, r0, r3
    8598:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
    859c:	080017a8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, ip}
    85a0:	9f300002 	svcls	0x00300002
    85a4:	080017a8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, ip}
    85a8:	080017c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, ip}
    85ac:	00530001 	subseq	r0, r3, r1
    85b0:	00000000 	andeq	r0, r0, r0
    85b4:	04000000 	streq	r0, [r0], #-0
    85b8:	06080018 			; <UNDEFINED> instruction: 0x06080018
    85bc:	02080018 	andeq	r0, r8, #24
    85c0:	06007d00 	streq	r7, [r0], -r0, lsl #26
    85c4:	54080018 	strpl	r0, [r8], #-24	; 0xffffffe8
    85c8:	02080018 	andeq	r0, r8, #24
    85cc:	00087d00 	andeq	r7, r8, r0, lsl #26
    85d0:	00000000 	andeq	r0, r0, r0
    85d4:	Address 0x000085d4 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000007c 	andeq	r0, r0, ip, ror r0
   4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	00000000 	andeq	r0, r0, r0
  1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  24:	0000004c 	andeq	r0, r0, ip, asr #32
}
  28:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
    if (status != HAL_OK)
  34:	00000018 	andeq	r0, r0, r8, lsl r0
      uwTickFreq = prevTickFreq;
  38:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
  44:	00000018 	andeq	r0, r0, r8, lsl r0
      if (pllsource != 0)
  48:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
  5c:	0000002c 	andeq	r0, r0, ip, lsr #32
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	00000000 	andeq	r0, r0, r0
      SystemCoreClock = pllvco/pllp;
  6c:	000000a4 	andeq	r0, r0, r4, lsr #1
  70:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
      break;
  74:	00000014 	andeq	r0, r0, r4, lsl r0
	...
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	11f50002 	mvnsne	r0, r2
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	08000718 	stmdaeq	r0, {r3, r4, r8, r9, sl}
  94:	0000004c 	andeq	r0, r0, ip, asr #32
	...
  a0:	0000002c 	andeq	r0, r0, ip, lsr #32
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  a4:	14fd0002 	ldrbtne	r0, [sp], #2
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	08000764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000034 	andeq	r0, r0, r4, lsr r0
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
  bc:	00000080 	andeq	r0, r0, r0, lsl #1
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	00000000 	andeq	r0, r0, r0
  c4:	00000034 	andeq	r0, r0, r4, lsr r0
	...
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  d0:	00000064 	andeq	r0, r0, r4, rrx
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	22650002 	rsbcs	r0, r5, #2
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	00040000 	andeq	r0, r4, r0
  dc:	00000000 	andeq	r0, r0, r0
  e0:	08000818 	stmdaeq	r0, {r3, r4, fp}
    if (huart->hdmarx != NULL)
  e4:	00000014 	andeq	r0, r0, r4, lsl r0
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	00000000 	andeq	r0, r0, r0
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	00000014 	andeq	r0, r0, r4, lsl r0
  f0:	0800082c 	stmdaeq	r0, {r2, r3, r5, fp}
    huart->TxXferCount = 0x00U;
  f4:	00000014 	andeq	r0, r0, r4, lsl r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	08000840 	stmdaeq	r0, {r6, fp}
    huart->gState  = HAL_UART_STATE_READY;
  fc:	00000014 	andeq	r0, r0, r4, lsl r0
    huart->RxState = HAL_UART_STATE_READY;
 100:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000014 	andeq	r0, r0, r4, lsl r0
    HAL_UART_AbortCpltCallback(huart);
 108:	08000868 	stmdaeq	r0, {r3, r5, r6, fp}
 10c:	00000002 	andeq	r0, r0, r2
  uint32_t AbortCplt = 0x01U;
 110:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
  if (AbortCplt == 0x01U)
 114:	00000002 	andeq	r0, r0, r2
}
 118:	0800086c 	stmdaeq	r0, {r2, r3, r5, r6, fp}
 11c:	00000002 	andeq	r0, r0, r2
 120:	0800086e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp}
 124:	00000008 	andeq	r0, r0, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
 12c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	2b260002 	blcs	98014c <_Min_Heap_Size+0x97f94c>
 140:	00040000 	andeq	r0, r4, r0
 144:	00000000 	andeq	r0, r0, r0
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	08000888 	stmdaeq	r0, {r3, r7, fp}
 14c:	00000038 	andeq	r0, r0, r8, lsr r0
	...
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	00000204 	andeq	r0, r0, r4, lsl #4
 15c:	2e110002 	cdpcs	0, 1, cr0, cr1, cr2, {0}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	00040000 	andeq	r0, r4, r0
	...
 16c:	00000020 	andeq	r0, r0, r0, lsr #32
 170:	080008c0 	stmdaeq	r0, {r6, r7, fp}
}
 174:	0000005c 	andeq	r0, r0, ip, asr r0
 178:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
 17c:	00000060 	andeq	r0, r0, r0, rrx
 180:	0800097c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp}
}
 184:	00000174 	andeq	r0, r0, r4, ror r1
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
 18c:	0000008a 	andeq	r0, r0, sl, lsl #1
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000000 	andeq	r0, r0, r0
 194:	00000002 	andeq	r0, r0, r2
 198:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	0000012c 	andeq	r0, r0, ip, lsr #2
 1a0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	000000e0 	andeq	r0, r0, r0, ror #1
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	000000fc 	strdeq	r0, [r0], -ip
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000124 	andeq	r0, r0, r4, lsr #2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000002 	andeq	r0, r0, r2
 1c0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000078 	andeq	r0, r0, r8, ror r0
 1c8:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	000000cc 	andeq	r0, r0, ip, asr #1
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	000000d2 	ldrdeq	r0, [r0], -r2
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	00000038 	andeq	r0, r0, r8, lsr r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	00000084 	andeq	r0, r0, r4, lsl #1
 1e8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000094 	muleq	r0, r4, r0
 1f0:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000096 	muleq	r0, r6, r0
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	00000084 	andeq	r0, r0, r4, lsl #1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000000 	andeq	r0, r0, r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000120 	andeq	r0, r0, r0, lsr #2
 208:	00000000 	andeq	r0, r0, r0
 20c:	00000004 	andeq	r0, r0, r4
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000000 	andeq	r0, r0, r0
 214:	000000f2 	strdeq	r0, [r0], -r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	00000000 	andeq	r0, r0, r0
 21c:	0000006c 	andeq	r0, r0, ip, rrx
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000000 	andeq	r0, r0, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	000000a6 	andeq	r0, r0, r6, lsr #1
 228:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	00000002 	andeq	r0, r0, r2
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000000 	andeq	r0, r0, r0
  tmp |= hdma->Init.FIFOMode;
 234:	0000004c 	andeq	r0, r0, ip, asr #32
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	08000d76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, fp}
    tmp |= hdma->Init.FIFOThreshold;
 23c:	0000001a 	andeq	r0, r0, sl, lsl r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000000 	andeq	r0, r0, r0
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000002 	andeq	r0, r0, r2
 248:	00000000 	andeq	r0, r0, r0
  hdma->Instance->FCR = tmp;
 24c:	0000000a 	andeq	r0, r0, sl
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000002 	andeq	r0, r0, r2
 258:	00000000 	andeq	r0, r0, r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000002 	andeq	r0, r0, r2
  hdma->State = HAL_DMA_STATE_READY;
 260:	08000d92 	stmdaeq	r0, {r1, r4, r7, r8, sl, fp}
 264:	00000002 	andeq	r0, r0, r2
  return HAL_OK;
 268:	00000000 	andeq	r0, r0, r0
 26c:	00000058 	andeq	r0, r0, r8, asr r0
 270:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000010 	andeq	r0, r0, r0, lsl r0
 278:	00000000 	andeq	r0, r0, r0
 27c:	00000002 	andeq	r0, r0, r2
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000000 	andeq	r0, r0, r0
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000124 	andeq	r0, r0, r4, lsr #2
        return HAL_ERROR; 
 288:	00000000 	andeq	r0, r0, r0
    return HAL_ERROR;
 28c:	0000002c 	andeq	r0, r0, ip, lsr #32
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000000 	andeq	r0, r0, r0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	0000002c 	andeq	r0, r0, ip, lsr #32
 298:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 29c:	00000002 	andeq	r0, r0, r2
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	00000080 	andeq	r0, r0, r0, lsl #1
 2a8:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000014 	andeq	r0, r0, r4, lsl r0
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000002 	andeq	r0, r0, r2
          return HAL_TIMEOUT;
 2b8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	000000bc 	strheq	r0, [r0], -ip
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000016 	andeq	r0, r0, r6, lsl r0
    FlagStatus       pwrclkchanged = RESET;
 2c8:	08000da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp}
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000002 	andeq	r0, r0, r2
 2d0:	08000da6 	stmdaeq	r0, {r1, r2, r5, r7, r8, sl, fp}
 2d4:	000000e6 	andeq	r0, r0, r6, ror #1
      tickstart = HAL_GetTick();
 2d8:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000288 	andeq	r0, r0, r8, lsl #5
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000001e 	andeq	r0, r0, lr, lsl r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	0000009a 	muleq	r0, sl, r0
          return HAL_TIMEOUT;
 2f0:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000084 	andeq	r0, r0, r4, lsl #1
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000088 	andeq	r0, r0, r8, lsl #1
 300:	00000000 	andeq	r0, r0, r0
 304:	00000088 	andeq	r0, r0, r8, lsl #1
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000036 	andeq	r0, r0, r6, lsr r0
 310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 314:	00000036 	andeq	r0, r0, r6, lsr r0
 318:	00000000 	andeq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	0000000c 	andeq	r0, r0, ip
 320:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000004 	andeq	r0, r0, r4
 328:	00000000 	andeq	r0, r0, r0
 32c:	00000036 	andeq	r0, r0, r6, lsr r0
 330:	00000000 	andeq	r0, r0, r0
          return HAL_TIMEOUT;
 334:	00000026 	andeq	r0, r0, r6, lsr #32
    if(pwrclkchanged == SET)
 338:	00000000 	andeq	r0, r0, r0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000066 	andeq	r0, r0, r6, rrx
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000000 	andeq	r0, r0, r0
 344:	000000a4 	andeq	r0, r0, r4, lsr #1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000026 	andeq	r0, r0, r6, lsr #32
 350:	00000000 	andeq	r0, r0, r0
 354:	00000066 	andeq	r0, r0, r6, rrx
	...
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 360:	00000084 	andeq	r0, r0, r4, lsl #1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	743f0002 	ldrtvc	r0, [pc], #-2	; 36c <_Min_Heap_Size-0x494>
 368:	00040000 	andeq	r0, r4, r0
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 374:	00000004 	andeq	r0, r0, r4
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000000 	andeq	r0, r0, r0
 37c:	000004fc 	strdeq	r0, [r0], -ip
 380:	00000000 	andeq	r0, r0, r0
 384:	00000118 	andeq	r0, r0, r8, lsl r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000000c 	andeq	r0, r0, ip
        __HAL_RCC_PLL_DISABLE();
 390:	00000000 	andeq	r0, r0, r0
 394:	0000000c 	andeq	r0, r0, ip
        tickstart = HAL_GetTick();
 398:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	000000d4 	ldrdeq	r0, [r0], -r4
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	0000021c 	andeq	r0, r0, ip, lsl r2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
 3ac:	0000000c 	andeq	r0, r0, ip
            return HAL_TIMEOUT;
 3b0:	08001120 	stmdaeq	r0, {r5, r8, ip}
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000020 	andeq	r0, r0, r0, lsr #32
 3b8:	08001140 	stmdaeq	r0, {r6, r8, ip}
 3bc:	00000020 	andeq	r0, r0, r0, lsr #32
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	000000cc 	andeq	r0, r0, ip, asr #1
 3c8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	0000003c 	andeq	r0, r0, ip, lsr r0
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	00000002 	andeq	r0, r0, r2
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	00000020 	andeq	r0, r0, r0, lsr #32
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e8:	00000054 	andeq	r0, r0, r4, asr r0
 3ec:	82c20002 	sbchi	r0, r2, #2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00040000 	andeq	r0, r4, r0
 3f4:	00000000 	andeq	r0, r0, r0
 3f8:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	000002e8 	andeq	r0, r0, r8, ror #5
 400:	00000000 	andeq	r0, r0, r0
 404:	00000184 	andeq	r0, r0, r4, lsl #3
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000000 	andeq	r0, r0, r0
 40c:	00000028 	andeq	r0, r0, r8, lsr #32
 410:	00000000 	andeq	r0, r0, r0
 414:	00000038 	andeq	r0, r0, r8, lsr r0
 418:	00000000 	andeq	r0, r0, r0
 41c:	0000002c 	andeq	r0, r0, ip, lsr #32
 420:	00000000 	andeq	r0, r0, r0
 424:	00000048 	andeq	r0, r0, r8, asr #32
        __HAL_RCC_PLL_ENABLE();
 428:	00000000 	andeq	r0, r0, r0
 42c:	00000002 	andeq	r0, r0, r2
        tickstart = HAL_GetTick();
 430:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	0000008c 	andeq	r0, r0, ip, lsl #1
 444:	8ca00002 	stchi	0, cr0, [r0], #8
            return HAL_TIMEOUT;
 448:	00040000 	andeq	r0, r4, r0
	...
        __HAL_RCC_PLL_DISABLE();
 454:	0000002c 	andeq	r0, r0, ip, lsr #32
        tickstart = HAL_GetTick();
 458:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000044 	andeq	r0, r0, r4, asr #32
 460:	00000000 	andeq	r0, r0, r0
 464:	0000008e 	andeq	r0, r0, lr, lsl #1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000000 	andeq	r0, r0, r0
 46c:	0000028e 	andeq	r0, r0, lr, lsl #5
            return HAL_TIMEOUT;
 470:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 474:	000000dc 	ldrdeq	r0, [r0], -ip
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	00000000 	andeq	r0, r0, r0
        pll_config = RCC->PLLCFGR;
 47c:	00000078 	andeq	r0, r0, r8, ror r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	00000000 	andeq	r0, r0, r0
 484:	00000098 	muleq	r0, r8, r0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	00000094 	muleq	r0, r4, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	00000026 	andeq	r0, r0, r6, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	00000000 	andeq	r0, r0, r0
 49c:	00000128 	andeq	r0, r0, r8, lsr #2
 4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	000001dc 	ldrdeq	r0, [r0], -ip
 4a8:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	0000005a 	andeq	r0, r0, sl, asr r0
 4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	0000006e 	andeq	r0, r0, lr, rrx
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000006 	andeq	r0, r0, r6
  return HAL_OK;
 4c0:	00000000 	andeq	r0, r0, r0
}
 4c4:	00000004 	andeq	r0, r0, r4
	...
 4d0:	000000ac 	andeq	r0, r0, ip, lsr #1
        return HAL_ERROR;
 4d4:	9a770002 	bls	1dc04e4 <_Min_Heap_Size+0x1dbfce4>
          return HAL_ERROR;
 4d8:	00040000 	andeq	r0, r4, r0
 4dc:	00000000 	andeq	r0, r0, r0
 4e0:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
 4e4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4e8:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 4ec:	0000008c 	andeq	r0, r0, ip, lsl #1
 4f0:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
 4f4:	00000030 	andeq	r0, r0, r0, lsr r0
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	00000038 	andeq	r0, r0, r8, lsr r0
 500:	00000000 	andeq	r0, r0, r0
 504:	00000024 	andeq	r0, r0, r4, lsr #32
 508:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
 50c:	00000028 	andeq	r0, r0, r8, lsr #32
 510:	00000000 	andeq	r0, r0, r0
 514:	0000001c 	andeq	r0, r0, ip, lsl r0
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000020 	andeq	r0, r0, r0, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000128 	andeq	r0, r0, r8, lsr #2
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000006 	andeq	r0, r0, r6
 530:	00000000 	andeq	r0, r0, r0
 534:	00000010 	andeq	r0, r0, r0, lsl r0
 538:	00000000 	andeq	r0, r0, r0
 53c:	0000007c 	andeq	r0, r0, ip, ror r0
 540:	00000000 	andeq	r0, r0, r0
 544:	00000034 	andeq	r0, r0, r4, lsr r0
 548:	00000000 	andeq	r0, r0, r0
 54c:	0000003c 	andeq	r0, r0, ip, lsr r0
 550:	00000000 	andeq	r0, r0, r0
 554:	00000034 	andeq	r0, r0, r4, lsr r0
 558:	00000000 	andeq	r0, r0, r0
 55c:	0000003c 	andeq	r0, r0, ip, lsr r0
 560:	00000000 	andeq	r0, r0, r0
 564:	0000003c 	andeq	r0, r0, ip, lsr r0
 568:	00000000 	andeq	r0, r0, r0
 56c:	00000002 	andeq	r0, r0, r2
 570:	00000000 	andeq	r0, r0, r0
 574:	00000008 	andeq	r0, r0, r8
	...
 580:	000000ec 	andeq	r0, r0, ip, ror #1
 584:	ae9f0002 	cdpge	0, 9, cr0, cr15, cr2, {0}
 588:	00040000 	andeq	r0, r4, r0
	...
 594:	00000002 	andeq	r0, r0, r2
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000002 	andeq	r0, r0, r2
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	0000003c 	andeq	r0, r0, ip, lsr r0
 5a8:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
 5ac:	0000004c 	andeq	r0, r0, ip, asr #32
 5b0:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
 5b4:	00000034 	andeq	r0, r0, r4, lsr r0
 5b8:	080016a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, ip}
 5bc:	00000018 	andeq	r0, r0, r8, lsl r0
 5c0:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
 5c4:	0000000c 	andeq	r0, r0, ip
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	0000000c 	andeq	r0, r0, ip
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000048 	andeq	r0, r0, r8, asr #32
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000000c 	andeq	r0, r0, ip
 5e0:	080016c8 	stmdaeq	r0, {r3, r6, r7, r9, sl, ip}
 5e4:	00000028 	andeq	r0, r0, r8, lsr #32
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	0000000e 	andeq	r0, r0, lr
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000000e 	andeq	r0, r0, lr
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000008 	andeq	r0, r0, r8
 600:	00000000 	andeq	r0, r0, r0
 604:	0000000c 	andeq	r0, r0, ip
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000010 	andeq	r0, r0, r0, lsl r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000010 	andeq	r0, r0, r0, lsl r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000010 	andeq	r0, r0, r0, lsl r0
 620:	00000000 	andeq	r0, r0, r0
 624:	00000010 	andeq	r0, r0, r0, lsl r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	00000010 	andeq	r0, r0, r0, lsl r0
 630:	00000000 	andeq	r0, r0, r0
 634:	00000010 	andeq	r0, r0, r0, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000010 	andeq	r0, r0, r0, lsl r0
 640:	00000000 	andeq	r0, r0, r0
 644:	00000010 	andeq	r0, r0, r0, lsl r0
 648:	00000000 	andeq	r0, r0, r0
 64c:	00000010 	andeq	r0, r0, r0, lsl r0
 650:	00000000 	andeq	r0, r0, r0
 654:	0000000c 	andeq	r0, r0, ip
 658:	00000000 	andeq	r0, r0, r0
 65c:	0000000c 	andeq	r0, r0, ip
 660:	00000000 	andeq	r0, r0, r0
 664:	0000000c 	andeq	r0, r0, ip
	...
 670:	00000024 	andeq	r0, r0, r4, lsr #32
 674:	b9a10002 	stmiblt	r1!, {r1}
 678:	00040000 	andeq	r0, r4, r0
 67c:	00000000 	andeq	r0, r0, r0
 680:	080016f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip}
 684:	00000014 	andeq	r0, r0, r4, lsl r0
 688:	00000000 	andeq	r0, r0, r0
 68c:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 698:	0000001c 	andeq	r0, r0, ip, lsl r0
 69c:	bf540002 	svclt	0x00540002
 6a0:	00040000 	andeq	r0, r4, r0
 6a4:	00000000 	andeq	r0, r0, r0
 6a8:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 6ac:	00000048 	andeq	r0, r0, r8, asr #32
	...
 6b8:	000000a4 	andeq	r0, r0, r4, lsr #1
 6bc:	c0d90002 	sbcsgt	r0, r9, r2
 6c0:	00040000 	andeq	r0, r4, r0
	...
 6cc:	00000002 	andeq	r0, r0, r2
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000004 	andeq	r0, r0, r4
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	00000010 	andeq	r0, r0, r0, lsl r0
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	0000000c 	andeq	r0, r0, ip
 6e8:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
 6ec:	00000020 	andeq	r0, r0, r0, lsr #32
 6f0:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
 6f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 6f8:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
 6fc:	00000006 	andeq	r0, r0, r6
 700:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
 704:	0000000a 	andeq	r0, r0, sl
 708:	08001798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, ip}
 70c:	00000004 	andeq	r0, r0, r4
 710:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 714:	00000004 	andeq	r0, r0, r4
 718:	00000000 	andeq	r0, r0, r0
 71c:	0000000a 	andeq	r0, r0, sl
 720:	00000000 	andeq	r0, r0, r0
 724:	00000010 	andeq	r0, r0, r0, lsl r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00000010 	andeq	r0, r0, r0, lsl r0
 730:	00000000 	andeq	r0, r0, r0
 734:	00000006 	andeq	r0, r0, r6
 738:	00000000 	andeq	r0, r0, r0
 73c:	0000000a 	andeq	r0, r0, sl
 740:	00000000 	andeq	r0, r0, r0
 744:	00000010 	andeq	r0, r0, r0, lsl r0
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000010 	andeq	r0, r0, r0, lsl r0
 750:	00000000 	andeq	r0, r0, r0
 754:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 760:	0000004c 	andeq	r0, r0, ip, asr #32
 764:	c90e0002 	stmdbgt	lr, {r1}
 768:	00040000 	andeq	r0, r4, r0
 76c:	00000000 	andeq	r0, r0, r0
 770:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 774:	0000002c 	andeq	r0, r0, ip, lsr #32
 778:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 77c:	00000036 	andeq	r0, r0, r6, lsr r0
 780:	08001804 	stmdaeq	r0, {r2, fp, ip}
 784:	00000050 	andeq	r0, r0, r0, asr r0
 788:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
 78c:	0000007c 	andeq	r0, r0, ip, ror r0
 790:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
 794:	0000018c 	andeq	r0, r0, ip, lsl #3
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000006 	andeq	r0, r0, r6
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000008 	andeq	r0, r0, r8
	...
 7b0:	00000024 	andeq	r0, r0, r4, lsr #32
 7b4:	d1470002 	cmple	r7, r2
 7b8:	00040000 	andeq	r0, r4, r0
 7bc:	00000000 	andeq	r0, r0, r0
 7c0:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
 7c4:	00000050 	andeq	r0, r0, r0, asr r0
 7c8:	08001aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp, ip}
 7cc:	00000002 	andeq	r0, r0, r2
	...
 7d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7dc:	d1690002 	cmnle	r9, r2
 7e0:	00040000 	andeq	r0, r4, r0
 7e4:	00000000 	andeq	r0, r0, r0
 7e8:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
 7ec:	00000044 	andeq	r0, r0, r4, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
   4:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  errno = ENOMEM;
   8:	00000001 	andeq	r0, r0, r1
}
   c:	00000001 	andeq	r0, r0, r1
  10:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
  1c:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  24:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
}
  28:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  2c:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
  30:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
    if (status != HAL_OK)
  34:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
      uwTickFreq = prevTickFreq;
  38:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  3c:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  40:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  44:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
      if (pllsource != 0)
  48:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
  4c:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
  54:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
  58:	00000001 	andeq	r0, r0, r1
  5c:	00000001 	andeq	r0, r0, r1
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
  64:	08000718 	stmdaeq	r0, {r3, r4, r8, r9, sl}
	...
      SystemCoreClock = pllvco/pllp;
  70:	08000718 	stmdaeq	r0, {r3, r4, r8, r9, sl}
      break;
  74:	08000764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl}
	...
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  80:	08000764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl}
  84:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
  88:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
  8c:	08000818 	stmdaeq	r0, {r3, r4, fp}
  90:	00000001 	andeq	r0, r0, r1
  94:	00000001 	andeq	r0, r0, r1
	...
  a0:	08000818 	stmdaeq	r0, {r3, r4, fp}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  a4:	0800082c 	stmdaeq	r0, {r2, r3, r5, fp}
  a8:	00000001 	andeq	r0, r0, r1
  ac:	00000001 	andeq	r0, r0, r1
  b0:	0800082c 	stmdaeq	r0, {r2, r3, r5, fp}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	08000840 	stmdaeq	r0, {r6, fp}
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000840 	stmdaeq	r0, {r6, fp}
  bc:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
  c4:	08000868 	stmdaeq	r0, {r3, r5, r6, fp}
  c8:	08000868 	stmdaeq	r0, {r3, r5, r6, fp}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
  d0:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	0800086c 	stmdaeq	r0, {r2, r3, r5, r6, fp}
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	0800086c 	stmdaeq	r0, {r2, r3, r5, r6, fp}
  dc:	0800086e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp}
  e0:	0800086e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp}
    if (huart->hdmarx != NULL)
  e4:	08000876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	08000888 	stmdaeq	r0, {r3, r7, fp}
	...
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	08000888 	stmdaeq	r0, {r3, r7, fp}
    huart->gState  = HAL_UART_STATE_READY;
  fc:	080008c0 	stmdaeq	r0, {r6, r7, fp}
	...
    HAL_UART_AbortCpltCallback(huart);
 108:	00000001 	andeq	r0, r0, r1
 10c:	00000001 	andeq	r0, r0, r1
  uint32_t AbortCplt = 0x01U;
 110:	00000001 	andeq	r0, r0, r1
  if (AbortCplt == 0x01U)
 114:	00000001 	andeq	r0, r0, r1
	...
}
 120:	00000001 	andeq	r0, r0, r1
 124:	00000001 	andeq	r0, r0, r1
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	080008c0 	stmdaeq	r0, {r6, r7, fp}
 12c:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
 130:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
 134:	0800097c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp}
 138:	0800097c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp}
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
 140:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
 144:	08000b7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, fp}
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	00000001 	andeq	r0, r0, r1
 14c:	00000001 	andeq	r0, r0, r1
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
 154:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	00000001 	andeq	r0, r0, r1
 15c:	00000001 	andeq	r0, r0, r1
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	00000001 	andeq	r0, r0, r1
 16c:	00000001 	andeq	r0, r0, r1
 170:	00000001 	andeq	r0, r0, r1
}
 174:	00000001 	andeq	r0, r0, r1
 178:	00000001 	andeq	r0, r0, r1
 17c:	00000001 	andeq	r0, r0, r1
 180:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
}
 184:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	00000001 	andeq	r0, r0, r1
 18c:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
 198:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
 1e4:	08000d76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, fp}
 1e8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	08000d76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, fp}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
 1f8:	00000001 	andeq	r0, r0, r1
 1fc:	00000001 	andeq	r0, r0, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000001 	andeq	r0, r0, r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000001 	andeq	r0, r0, r1
 208:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
 20c:	08000d92 	stmdaeq	r0, {r1, r4, r7, r8, sl, fp}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	08000d92 	stmdaeq	r0, {r1, r4, r7, r8, sl, fp}
 21c:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	00000001 	andeq	r0, r0, r1
 228:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	08000da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000001 	andeq	r0, r0, r1
  tmp |= hdma->Init.FIFOMode;
 234:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	00000001 	andeq	r0, r0, r1
    tmp |= hdma->Init.FIFOThreshold;
 23c:	00000001 	andeq	r0, r0, r1
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000001 	andeq	r0, r0, r1
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
  hdma->Instance->FCR = tmp;
 24c:	00000001 	andeq	r0, r0, r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	00000001 	andeq	r0, r0, r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000001 	andeq	r0, r0, r1
 258:	00000001 	andeq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000001 	andeq	r0, r0, r1
  hdma->State = HAL_DMA_STATE_READY;
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000001 	andeq	r0, r0, r1
 278:	00000001 	andeq	r0, r0, r1
 27c:	00000001 	andeq	r0, r0, r1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	08000da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp}
        hdma->State = HAL_DMA_STATE_READY;
 284:	08000da6 	stmdaeq	r0, {r1, r2, r5, r7, r8, sl, fp}
        return HAL_ERROR; 
 288:	08000da6 	stmdaeq	r0, {r1, r2, r5, r7, r8, sl, fp}
    return HAL_ERROR;
 28c:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
 298:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 29c:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000001 	andeq	r0, r0, r1
 2a4:	00000001 	andeq	r0, r0, r1
 2a8:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2b8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000001 	andeq	r0, r0, r1
 2c0:	00000001 	andeq	r0, r0, r1
 2c4:	00000001 	andeq	r0, r0, r1
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000001 	andeq	r0, r0, r1
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 2d8:	00000001 	andeq	r0, r0, r1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	00000001 	andeq	r0, r0, r1
 2e4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2f0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000001 	andeq	r0, r0, r1
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
	...
      tickstart = HAL_GetTick();
 318:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000001 	andeq	r0, r0, r1
 320:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000001 	andeq	r0, r0, r1
	...
 330:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 334:	00000001 	andeq	r0, r0, r1
    if(pwrclkchanged == SET)
 338:	00000001 	andeq	r0, r0, r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000001 	andeq	r0, r0, r1
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000001 	andeq	r0, r0, r1
 368:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	08001120 	stmdaeq	r0, {r5, r8, ip}
 370:	08001120 	stmdaeq	r0, {r5, r8, ip}
 374:	08001140 	stmdaeq	r0, {r6, r8, ip}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	08001140 	stmdaeq	r0, {r6, r8, ip}
 37c:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 398:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	00000001 	andeq	r0, r0, r1
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
 3ac:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
            return HAL_TIMEOUT;
 3b0:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000001 	andeq	r0, r0, r1
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000001 	andeq	r0, r0, r1
 3d0:	00000001 	andeq	r0, r0, r1
 3d4:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000001 	andeq	r0, r0, r1
	...
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_ENABLE();
 428:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
 42c:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
        tickstart = HAL_GetTick();
 430:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	08001502 	stmdaeq	r0, {r1, r8, sl, ip}
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 448:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 44c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 458:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
	...
            return HAL_TIMEOUT;
 470:	08001558 	stmdaeq	r0, {r3, r4, r6, r8, sl, ip}
  return HAL_OK;
 474:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	080015ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, sl, ip}
        pll_config = RCC->PLLCFGR;
 47c:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
	...
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	08001582 	stmdaeq	r0, {r1, r7, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	08001596 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	080015bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, ip}
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 4a0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000001 	andeq	r0, r0, r1
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 4c0:	00000001 	andeq	r0, r0, r1
}
 4c4:	00000001 	andeq	r0, r0, r1
	...
 4d0:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4d4:	00000001 	andeq	r0, r0, r1
          return HAL_ERROR;
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
	...
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
	...
 500:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
 504:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 508:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 50c:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
 510:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
 514:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
 520:	00000001 	andeq	r0, r0, r1
 524:	00000001 	andeq	r0, r0, r1
 528:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
 52c:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
 570:	00000001 	andeq	r0, r0, r1
 574:	00000001 	andeq	r0, r0, r1
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
 588:	00000001 	andeq	r0, r0, r1
 58c:	00000001 	andeq	r0, r0, r1
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
	...
 5a0:	00000001 	andeq	r0, r0, r1
 5a4:	00000001 	andeq	r0, r0, r1
 5a8:	00000001 	andeq	r0, r0, r1
 5ac:	00000001 	andeq	r0, r0, r1
 5b0:	00000001 	andeq	r0, r0, r1
 5b4:	00000001 	andeq	r0, r0, r1
 5b8:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
 5bc:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
 5c0:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
 5c4:	080016a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, ip}
 5c8:	080016a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, ip}
 5cc:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
 5d0:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
 5d4:	080016c8 	stmdaeq	r0, {r3, r6, r7, r9, sl, ip}
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	00000001 	andeq	r0, r0, r1
 5e4:	00000001 	andeq	r0, r0, r1
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	080016c8 	stmdaeq	r0, {r3, r6, r7, r9, sl, ip}
 5f4:	080016f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip}
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
 658:	00000001 	andeq	r0, r0, r1
 65c:	00000001 	andeq	r0, r0, r1
 660:	00000001 	andeq	r0, r0, r1
 664:	00000001 	andeq	r0, r0, r1
 668:	00000001 	andeq	r0, r0, r1
 66c:	00000001 	andeq	r0, r0, r1
 670:	00000001 	andeq	r0, r0, r1
 674:	00000001 	andeq	r0, r0, r1
	...
 680:	080016f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip}
 684:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
	...
 698:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 69c:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
	...
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
 6b8:	00000001 	andeq	r0, r0, r1
 6bc:	00000001 	andeq	r0, r0, r1
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
 6cc:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
 6d0:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
 6d4:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
 6d8:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
 6dc:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
 6e0:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
 6e4:	08001798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, ip}
 6e8:	08001798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, ip}
 6ec:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 6f0:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 6f4:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
 708:	00000001 	andeq	r0, r0, r1
 70c:	00000001 	andeq	r0, r0, r1
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
 720:	00000001 	andeq	r0, r0, r1
 724:	00000001 	andeq	r0, r0, r1
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
	...
 740:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 744:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 748:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 74c:	08001802 	stmdaeq	r0, {r1, fp, ip}
 750:	08001804 	stmdaeq	r0, {r2, fp, ip}
 754:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
 758:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
 75c:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
 760:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
 764:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
 768:	00000001 	andeq	r0, r0, r1
 76c:	00000001 	andeq	r0, r0, r1
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
	...
 780:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 784:	00000000 	andeq	r0, r0, r0
 788:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
 78c:	08001aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp, ip}
 790:	08001aac 	stmdaeq	r0, {r2, r3, r5, r7, r9, fp, ip}
 794:	08001aae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, fp, ip}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000055f 	andeq	r0, r0, pc, asr r5
       4:	02df0003 	sbcseq	r0, pc, #3
  errno = ENOMEM;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	6f432f2e 	svcvs	0x00432f2e
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
      24:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
}
      28:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
      2c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
      30:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    if (status != HAL_OK)
      34:	2f534953 	svccs	0x00534953
      uwTickFreq = prevTickFreq;
      38:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
      3c:	00656475 	rsbeq	r6, r5, r5, ror r4
      40:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
      44:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
      if (pllsource != 0)
      48:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
      4c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
      54:	615c6d61 	cmpvs	ip, r1, ror #26
      58:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
      5c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
      64:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      68:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      SystemCoreClock = pllvco/pllp;
      6c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      70:	2e30312d 	rsfcssp	f3, f0, #5.0
      break;
      74:	30322d33 	eorscc	r2, r2, r3, lsr sp
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
      7c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
      80:	6f6e2d6d 	svcvs	0x006e2d6d
      84:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
      88:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
      8c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      90:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
      94:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
      98:	00656e69 	rsbeq	r6, r5, r9, ror #28
      9c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
      a0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
      a8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
      ac:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
      b0:	615c6d61 	cmpvs	ip, r1, ror #26
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
      bc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      c8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	2e30312d 	rsfcssp	f3, f0, #5.0
      d0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
      dc:	6f6e2d6d 	svcvs	0x006e2d6d
      e0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    if (huart->hdmarx != NULL)
      e4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
      f0:	00737973 	rsbseq	r7, r3, r3, ror r9
    huart->TxXferCount = 0x00U;
      f4:	442f2e2e 	strtmi	r2, [pc], #-3630	; fc <_Min_Heap_Size-0x704>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    huart->gState  = HAL_UART_STATE_READY;
      fc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    huart->RxState = HAL_UART_STATE_READY;
     100:	5349534d 	movtpl	r5, #37709	; 0x934d
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    HAL_UART_AbortCpltCallback(huart);
     108:	2f656369 	svccs	0x00656369
     10c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
  uint32_t AbortCplt = 0x01U;
     110:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
  if (AbortCplt == 0x01U)
     114:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
}
     118:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     11c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     120:	2f2e2e00 	svccs	0x002e2e00
     124:	76697244 	strbtvc	r7, [r9], -r4, asr #4
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	2f737265 	svccs	0x00737265
     12c:	334d5453 	movtcc	r5, #54355	; 0xd453
     130:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     134:	41485f78 	hvcmi	34296	; 0x85f8
     138:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     140:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     144:	2f2e2e00 	svccs	0x002e2e00
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     14c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     154:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     15c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     164:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     168:	5f6d7261 	svcpl	0x006d7261
     16c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     170:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
}
     174:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     178:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     17c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     180:	30312d69 	eorscc	r2, r1, r9, ror #26
}
     184:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     18c:	615c3031 	cmpvs	ip, r1, lsr r0
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     194:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     198:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     1a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	2f2e2e00 	svccs	0x002e2e00
     1a8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     1ac:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
     1b4:	662f736c 	strtvs	r7, [pc], -ip, ror #6
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1bc:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     1c0:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	6d000063 	stcvs	0, cr0, [r0, #-396]	; 0xfffffe74
     1c8:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00010063 	andeq	r0, r1, r3, rrx
     1d0:	736d6300 	cmnvc	sp, #0, 6
     1d4:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
     1dc:	00000200 	andeq	r0, r0, r0, lsl #4
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     1e4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1e8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     1f0:	00000300 	andeq	r0, r0, r0, lsl #6
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     1f8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     1fc:	00040068 	andeq	r0, r4, r8, rrx
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	726f6300 	rsbvc	r6, pc, #0, 6
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     208:	00682e34 	rsbeq	r2, r8, r4, lsr lr
     20c:	73000002 	movwvc	r0, #2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     214:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     21c:	00000500 	andeq	r0, r0, r0, lsl #10
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     228:	61685f78 	smcvs	34296	; 0x85f8
  tmp = hdma->Instance->FCR;
     22c:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00682e66 	rsbeq	r2, r8, r6, ror #28
  tmp |= hdma->Init.FIFOMode;
     234:	73000006 	movwvc	r0, #6
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    tmp |= hdma->Init.FIFOThreshold;
     23c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
     248:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
  hdma->Instance->FCR = tmp;
     24c:	00060068 	andeq	r0, r6, r8, rrx
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	6d747300 	ldclvs	3, cr7, [r4, #-0]
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     258:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
  hdma->State = HAL_DMA_STATE_READY;
     260:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
     264:	00000600 	andeq	r0, r0, r0, lsl #12
  return HAL_OK;
     268:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     26c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     270:	61685f78 	smcvs	34296	; 0x85f8
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
     278:	00682e61 	rsbeq	r2, r8, r1, ror #28
     27c:	73000006 	movwvc	r0, #6
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
        hdma->State = HAL_DMA_STATE_READY;
     284:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
        return HAL_ERROR; 
     288:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    return HAL_ERROR;
     28c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00682e74 	rsbeq	r2, r8, r4, ror lr
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	75000006 	strvc	r0, [r0, #-6]
     298:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
      tickstart = HAL_GetTick();
     29c:	0700682e 	streq	r6, [r0, -lr, lsr #16]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	74730000 	ldrbtvc	r0, [r3], #-0
     2a4:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
     2a8:	00080068 	andeq	r0, r8, r8, rrx
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     2b0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     2b4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
          return HAL_TIMEOUT;
     2b8:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00000600 	andeq	r0, r0, r0, lsl #12
     2c0:	6f697067 	svcvs	0x00697067
     2c4:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    FlagStatus       pwrclkchanged = RESET;
     2c8:	61660000 	cmnvs	r6, r0
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
     2d0:	706d7564 	rsbvc	r7, sp, r4, ror #10
     2d4:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
      tickstart = HAL_GetTick();
     2d8:	623c0000 	eorsvs	r0, ip, #0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     2e0:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
     2e4:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00010500 	andeq	r0, r1, r0, lsl #10
     2ec:	05c40205 	strbeq	r0, [r4, #517]	; 0x205
          return HAL_TIMEOUT;
     2f0:	c8030800 	stmdagt	r3, {fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	01060100 	mrseq	r0, (UNDEF: 22)
     2f8:	3f060305 	svccc	0x00060305
     2fc:	2f065806 	svccs	0x00065806
     300:	13060105 	movwne	r0, #24837	; 0x6105
     304:	01000602 	tsteq	r0, r2, lsl #12
     308:	00010501 	andeq	r0, r1, r1, lsl #10
     30c:	00000205 	andeq	r0, r0, r5, lsl #4
     310:	d0030000 	andle	r0, r3, r0
      tickstart = HAL_GetTick();
     314:	03050100 	movweq	r0, #20736	; 0x5100
     318:	0c051421 	cfstrseq	mvf1, [r5], {33}	; 0x21
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	03050106 	movweq	r0, #20742	; 0x5106
     320:	05135906 	ldreq	r5, [r3, #-2310]	; 0xfffff6fa
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	024b0601 	subeq	r0, fp, #1048576	; 0x100000
     328:	01010006 	tsteq	r1, r6
     32c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     330:	0005e402 	andeq	lr, r5, r2, lsl #8
          return HAL_TIMEOUT;
     334:	00d90308 	sbcseq	r0, r9, r8, lsl #6
    if(pwrclkchanged == SET)
     338:	2f030501 	svccs	0x00030501
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	06100513 			; <UNDEFINED> instruction: 0x06100513
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	06030501 	streq	r0, [r3], -r1, lsl #10
     344:	060c052f 	streq	r0, [ip], -pc, lsr #10
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	06030501 	streq	r0, [r3], -r1, lsl #10
     34c:	0b05135a 	bleq	1450bc <_Min_Heap_Size+0x1448bc>
     350:	09050106 	stmdbeq	r5, {r1, r2, r8}
     354:	06030520 	streq	r0, [r3], -r0, lsr #10
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	05136721 	ldreq	r6, [r3, #-1825]	; 0xfffff8df
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     360:	03052009 	movweq	r2, #20489	; 0x5009
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	13592106 	cmpne	r9, #-2147483647	; 0x80000001
     368:	01060b05 	tsteq	r6, r5, lsl #22
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
     370:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     374:	02590601 	subseq	r0, r9, #1048576	; 0x100000
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	01010006 	tsteq	r1, r6
     37c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     380:	00063002 	andeq	r3, r6, r2
     384:	00ea0308 	rsceq	r0, sl, r8, lsl #6
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	21030501 	tstcs	r3, r1, lsl #10
     38c:	0601054e 	streq	r0, [r1], -lr, asr #10
        __HAL_RCC_PLL_DISABLE();
     390:	0005022f 	andeq	r0, r5, pc, lsr #4
     394:	01050101 	tsteq	r5, r1, lsl #2
        tickstart = HAL_GetTick();
     398:	48020500 	stmdami	r2, {r8, sl}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	03080006 	movweq	r0, #32774	; 0x8006
     3a0:	050100f3 	streq	r0, [r1, #-243]	; 0xffffff0d
     3a4:	054b2103 	strbeq	r2, [fp, #-259]	; 0xfffffefd
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3ac:	01010005 	tsteq	r1, r5
            return HAL_TIMEOUT;
     3b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00066002 	andeq	r6, r6, r2
     3b8:	00f90308 	rscseq	r0, r9, r8, lsl #6
     3bc:	21030501 	tstcs	r3, r1, lsl #10
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	0601054b 	streq	r0, [r1], -fp, asr #10
     3c4:	0005022f 	andeq	r0, r5, pc, lsr #4
     3c8:	01050101 	tsteq	r5, r1, lsl #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	78020500 	stmdavc	r2, {r8, sl}
     3d0:	03080006 	movweq	r0, #32774	; 0x8006
     3d4:	050100ff 	streq	r0, [r1, #-255]	; 0xffffff01
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	054b2103 	strbeq	r2, [fp, #-259]	; 0xfffffefd
     3dc:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3e0:	01010005 	tsteq	r1, r5
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     3e8:	00069002 	andeq	r9, r6, r2
     3ec:	01850308 	orreq	r0, r5, r8, lsl #6
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	21030501 	tstcs	r3, r1, lsl #10
     3f4:	0601054b 	streq	r0, [r1], -fp, asr #10
     3f8:	0005022f 	andeq	r0, r5, pc, lsr #4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01050101 	tsteq	r5, r1, lsl #2
     400:	a8020500 	stmdage	r2, {r8, sl}
     404:	03080006 	movweq	r0, #32774	; 0x8006
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0501018b 	streq	r0, [r1, #-395]	; 0xfffffe75
     40c:	054b2103 	strbeq	r2, [fp, #-259]	; 0xfffffefd
     410:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     414:	01010005 	tsteq	r1, r5
     418:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     41c:	0006c002 	andeq	ip, r6, r2
     420:	01960308 	orrseq	r0, r6, r8, lsl #6
     424:	03030501 	movweq	r0, #13569	; 0x3501
        __HAL_RCC_PLL_ENABLE();
     428:	0e032009 	cdpeq	0, 0, cr2, cr3, cr9, {0}
     42c:	2f302f2e 	svccs	0x00302f2e
        tickstart = HAL_GetTick();
     430:	01040200 	mrseq	r0, R12_usr
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00050533 	andeq	r0, r5, r3, lsr r5
     438:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
     43c:	01040200 	mrseq	r0, R12_usr
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0009053d 	andeq	r0, r9, sp, lsr r5
     444:	47010402 	strmi	r0, [r1, -r2, lsl #8]
            return HAL_TIMEOUT;
     448:	01000402 	tsteq	r0, r2, lsl #8
  return HAL_OK;
     44c:	00010501 	andeq	r0, r1, r1, lsl #10
        __HAL_RCC_PLL_DISABLE();
     450:	06ec0205 	strbteq	r0, [ip], r5, lsl #4
     454:	f8030800 			; <UNDEFINED> instruction: 0xf8030800
        tickstart = HAL_GetTick();
     458:	02050101 	andeq	r0, r5, #1073741824	; 0x40000000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	4c030522 	cfstr32mi	mvfx0, [r3], {34}	; 0x22
     460:	1b050204 	blne	140c78 <_Min_Heap_Size+0x140478>
     464:	0105c303 	tsteq	r5, r3, lsl #6
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
     46c:	04020001 	streq	r0, [r2], #-1
            return HAL_TIMEOUT;
     470:	7abc0301 	bvc	fef0107c <_estack+0xdeeffe44>
  return HAL_OK;
     474:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	09051401 	stmdbeq	r5, {r0, sl, ip}
        pll_config = RCC->PLLCFGR;
     47c:	01040200 	mrseq	r0, R12_usr
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00060210 	andeq	r0, r6, r0, lsl r2
     484:	01050101 	tsteq	r5, r1, lsl #2
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00020500 	andeq	r0, r2, r0, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	03000000 	movweq	r0, #0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	050101c6 	streq	r0, [r1, #-454]	; 0xfffffe3a
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	16052f03 	strne	r2, [r5], -r3, lsl #30
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	03050106 	movweq	r0, #20742	; 0x5106
     49c:	16055906 	strne	r5, [r5], -r6, lsl #18
     4a0:	03050106 	movweq	r0, #20742	; 0x5106
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	20016a06 	andcs	r6, r1, r6, lsl #20
     4a8:	13204a58 			; <UNDEFINED> instruction: 0x13204a58
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	4a582001 	bmi	16084b8 <_Min_Heap_Size+0x1607cb8>
     4b0:	24051720 	strcs	r1, [r5], #-1824	; 0xfffff8e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	03050106 	movweq	r0, #20742	; 0x5106
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
     4bc:	03050106 	movweq	r0, #20742	; 0x5106
  return HAL_OK;
     4c0:	29052f06 	stmdbcs	r5, {r1, r2, r8, r9, sl, fp, sp}
}
     4c4:	03050106 	movweq	r0, #20742	; 0x5106
        return HAL_ERROR;
     4c8:	22052f06 	andcs	r2, r5, #6, 30
        return HAL_ERROR;
     4cc:	03050106 	movweq	r0, #20742	; 0x5106
}
     4d0:	23052106 	movwcs	r2, #20742	; 0x5106
        return HAL_ERROR;
     4d4:	03050106 	movweq	r0, #20742	; 0x5106
          return HAL_ERROR;
     4d8:	1e052106 	adfnes	f2, f5, f6
     4dc:	03050106 	movweq	r0, #20742	; 0x5106
     4e0:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
     4e4:	03050106 	movweq	r0, #20742	; 0x5106
     4e8:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
     4ec:	03050106 	movweq	r0, #20742	; 0x5106
     4f0:	1e052106 	adfnes	f2, f5, f6
     4f4:	03050106 	movweq	r0, #20742	; 0x5106
     4f8:	07052f06 	streq	r2, [r5, -r6, lsl #30]
     4fc:	06050106 	streq	r0, [r5], -r6, lsl #2
     500:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
     504:	061f0527 	ldreq	r0, [pc], -r7, lsr #10
     508:	06030501 	streq	r0, [r3], -r1, lsl #10
     50c:	06220530 			; <UNDEFINED> instruction: 0x06220530
     510:	06030501 	streq	r0, [r3], -r1, lsl #10
     514:	0623052f 	strteq	r0, [r3], -pc, lsr #10
     518:	06030501 	streq	r0, [r3], -r1, lsl #10
     51c:	0624052f 	strteq	r0, [r4], -pc, lsr #10
     520:	06030501 	streq	r0, [r3], -r1, lsl #10
     524:	0624053d 			; <UNDEFINED> instruction: 0x0624053d
     528:	06030501 	streq	r0, [r3], -r1, lsl #10
     52c:	0607053e 			; <UNDEFINED> instruction: 0x0607053e
     530:	4a060501 	bmi	18193c <_Min_Heap_Size+0x18113c>
     534:	05240105 	streq	r0, [r4, #-261]!	; 0xfffffefb
     538:	70030605 	andvc	r0, r3, r5, lsl #12
     53c:	2e0e033c 	mcrcs	3, 0, r0, cr14, cr12, {1}
     540:	01000602 	tsteq	r0, r2, lsl #12
     544:	00010501 	andeq	r0, r1, r1, lsl #10
     548:	07040205 	streq	r0, [r4, -r5, lsl #4]
     54c:	8c030800 	stchi	8, cr0, [r3], {-0}
     550:	01060102 	tsteq	r6, r2, lsl #2
     554:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     558:	05202006 	streq	r2, [r0, #-6]!
     55c:	05023201 	streq	r3, [r2, #-513]	; 0xfffffdff
     560:	6b010100 	blvs	40968 <_Min_Heap_Size+0x40168>
     564:	03000001 	movweq	r0, #1
     568:	00013c00 	andeq	r3, r1, r0, lsl #24
     56c:	fb010200 	blx	40d76 <_Min_Heap_Size+0x40576>
     570:	01000d0e 	tsteq	r0, lr, lsl #26
     574:	00010101 	andeq	r0, r1, r1, lsl #2
     578:	00010000 	andeq	r0, r1, r0
     57c:	2e2e0100 	sufcse	f0, f6, f0
     580:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     584:	72532f65 	subsvc	r2, r3, #404	; 0x194
     588:	3a630063 	bcc	18c071c <_Min_Heap_Size+0x18bff1c>
     58c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     590:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     594:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     598:	6f72705c 	svcvs	0x0072705c
     59c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     5a0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     5a4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     5a8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     5ac:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     5b0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     5b4:	61652d65 	cmnvs	r5, r5, ror #26
     5b8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     5bc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     5c0:	31323032 	teqcc	r2, r2, lsr r0
     5c4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     5c8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     5cc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     5d0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     5d4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     5d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5dc:	616d5c65 	cmnvs	sp, r5, ror #24
     5e0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     5e4:	3a630065 	bcc	18c0780 <_Min_Heap_Size+0x18bff80>
     5e8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     5ec:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     5f0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     5f4:	6f72705c 	svcvs	0x0072705c
     5f8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     5fc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     600:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     604:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     608:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     60c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     610:	61652d65 	cmnvs	r5, r5, ror #26
     614:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     618:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     61c:	31323032 	teqcc	r2, r2, lsr r0
     620:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     624:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     628:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     62c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     630:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     634:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     638:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     63c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     640:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     644:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     648:	534d432f 	movtpl	r4, #54063	; 0xd32f
     64c:	442f5349 	strtmi	r5, [pc], #-841	; 654 <_Min_Heap_Size-0x1ac>
     650:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     654:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     658:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     65c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     660:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     664:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     668:	00006564 	andeq	r6, r0, r4, ror #10
     66c:	6f697067 	svcvs	0x00697067
     670:	0100632e 	tsteq	r0, lr, lsr #6
     674:	645f0000 	ldrbvs	r0, [pc], #-0	; 67c <_Min_Heap_Size-0x184>
     678:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     67c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 684 <_Min_Heap_Size-0x17c>
     680:	73657079 	cmnvc	r5, #121	; 0x79
     684:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     688:	735f0000 	cmpvc	pc, #0
     68c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     690:	00682e74 	rsbeq	r2, r8, r4, ror lr
     694:	73000003 	movwvc	r0, #3
     698:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     69c:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
     6a0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     6a4:	00000400 	andeq	r0, r0, r0, lsl #8
     6a8:	00010500 	andeq	r0, r1, r0, lsl #10
     6ac:	07180205 	ldreq	r0, [r8, -r5, lsl #4]
     6b0:	2a030800 	bcs	c26b8 <_Min_Heap_Size+0xc1eb8>
     6b4:	23030501 	movwcs	r0, #13569	; 0x3501
     6b8:	4a582e01 	bmi	160bec4 <_Min_Heap_Size+0x160b6c4>
     6bc:	20011320 	andcs	r1, r1, r0, lsr #6
     6c0:	13204a4a 			; <UNDEFINED> instruction: 0x13204a4a
     6c4:	4a4a2001 	bmi	12886d0 <_Min_Heap_Size+0x1287ed0>
     6c8:	06010520 	streq	r0, [r1], -r0, lsr #10
     6cc:	00050214 	andeq	r0, r5, r4, lsl r2
     6d0:	03040101 	movweq	r0, #16641	; 0x4101
     6d4:	00030000 	andeq	r0, r3, r0
     6d8:	000001fa 	strdeq	r0, [r0], -sl
     6dc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     6e0:	0101000d 	tsteq	r1, sp
     6e4:	00000101 	andeq	r0, r0, r1, lsl #2
     6e8:	00000100 	andeq	r0, r0, r0, lsl #2
     6ec:	2f2e2e01 	svccs	0x002e2e01
     6f0:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     6f4:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     6f8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     6fc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     700:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     704:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     708:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     70c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     710:	5f6d7261 	svcpl	0x006d7261
     714:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     718:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     71c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     720:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     724:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     728:	30312d69 	eorscc	r2, r1, r9, ror #26
     72c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     730:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     734:	615c3031 	cmpvs	ip, r1, lsr r0
     738:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     73c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     740:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     744:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     748:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     74c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     750:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     754:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     758:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     75c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     760:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     764:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     768:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     76c:	5f6d7261 	svcpl	0x006d7261
     770:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     774:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     778:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     77c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     780:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     784:	30312d69 	eorscc	r2, r1, r9, ror #26
     788:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     78c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     790:	615c3031 	cmpvs	ip, r1, lsr r0
     794:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     798:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     79c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     7a0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     7a4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     7a8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     7ac:	2f2e2e00 	svccs	0x002e2e00
     7b0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     7b4:	2f737265 	svccs	0x00737265
     7b8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     7bc:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     7c0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     7c4:	2f54532f 	svccs	0x0054532f
     7c8:	334d5453 	movtcc	r5, #54355	; 0xd453
     7cc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     7d0:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     7d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     7d8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     7dc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     7e0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     7e4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     7e8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     7ec:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     7f0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 7f8 <_Min_Heap_Size-0x8>
     7f4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     7f8:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
     7fc:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
     800:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     804:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     808:	75000063 	strvc	r0, [r0, #-99]	; 0xffffff9d
     80c:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
     810:	0100632e 	tsteq	r0, lr, lsr #6
     814:	645f0000 	ldrbvs	r0, [pc], #-0	; 81c <_Min_Heap_Size+0x1c>
     818:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     81c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 824 <_Min_Heap_Size+0x24>
     820:	73657079 	cmnvc	r5, #121	; 0x79
     824:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     828:	735f0000 	cmpvc	pc, #0
     82c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     830:	00682e74 	rsbeq	r2, r8, r4, ror lr
     834:	73000003 	movwvc	r0, #3
     838:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     83c:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
     840:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     844:	00000400 	andeq	r0, r0, r0, lsl #8
     848:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     84c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     850:	61685f78 	smcvs	34296	; 0x85f8
     854:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
     858:	00682e66 	rsbeq	r2, r8, r6, ror #28
     85c:	73000005 	movwvc	r0, #5
     860:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     864:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     868:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     86c:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
     870:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     874:	73000005 	movwvc	r0, #5
     878:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     87c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     880:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     884:	616d645f 	cmnvs	sp, pc, asr r4
     888:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     88c:	74730000 	ldrbtvc	r0, [r3], #-0
     890:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     894:	5f787834 	svcpl	0x00787834
     898:	5f6c6168 	svcpl	0x006c6168
     89c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     8a0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     8a4:	74730000 	ldrbtvc	r0, [r3], #-0
     8a8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     8ac:	5f787834 	svcpl	0x00787834
     8b0:	5f6c6168 	svcpl	0x006c6168
     8b4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
     8b8:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
     8bc:	00000500 	andeq	r0, r0, r0, lsl #10
     8c0:	6e69616d 	powvsez	f6, f1, #5.0
     8c4:	0600682e 	streq	r6, [r0], -lr, lsr #16
     8c8:	73750000 	cmnvc	r5, #0
     8cc:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     8d0:	00060068 	andeq	r0, r6, r8, rrx
     8d4:	01050000 	mrseq	r0, (UNDEF: 5)
     8d8:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
     8dc:	03080007 	movweq	r0, #32775	; 0x8007
     8e0:	0305011f 	movweq	r0, #20767	; 0x511f
     8e4:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
     8e8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     8ec:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     8f0:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     8f4:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     8f8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     8fc:	052f0603 	streq	r0, [pc, #-1539]!	; 301 <_Min_Heap_Size-0x4ff>
     900:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     904:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     908:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     90c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     910:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     914:	052f0603 	streq	r0, [pc, #-1539]!	; 319 <_Min_Heap_Size-0x4e7>
     918:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
     91c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     920:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
     924:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     928:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     92c:	01052e06 	tsteq	r5, r6, lsl #28
     930:	06050528 	streq	r0, [r5], -r8, lsr #10
     934:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
     938:	02340601 	eorseq	r0, r4, #1048576	; 0x100000
     93c:	01010005 	tsteq	r1, r5
     940:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     944:	00079802 	andeq	r9, r7, r2, lsl #16
     948:	013b0308 	teqeq	fp, r8, lsl #6
     94c:	03050106 	movweq	r0, #20742	; 0x5106
     950:	14053006 	strne	r3, [r5], #-6
     954:	03050106 	movweq	r0, #20742	; 0x5106
     958:	10056706 	andne	r6, r5, r6, lsl #14
     95c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     960:	03010520 	movweq	r0, #5408	; 0x1520
     964:	0505661b 	streq	r6, [r5, #-1563]	; 0xfffff9e5
     968:	2e6b0306 	cdpcs	3, 6, cr0, cr11, cr6, {0}
     96c:	4a662e01 	bmi	198c178 <_Min_Heap_Size+0x198b978>
     970:	20011420 	andcs	r1, r1, r0, lsr #8
     974:	17204a4a 	strne	r4, [r0, -sl, asr #20]!
     978:	01061905 	tsteq	r6, r5, lsl #18
     97c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     980:	01061a05 	tsteq	r6, r5, lsl #20
     984:	2f060505 	svccs	0x00060505
     988:	061b0513 			; <UNDEFINED> instruction: 0x061b0513
     98c:	06050501 	streq	r0, [r5], -r1, lsl #10
     990:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
     994:	06050501 	streq	r0, [r5], -r1, lsl #10
     998:	062e062f 	strteq	r0, [lr], -pc, lsr #12
     99c:	01055931 	tsteq	r5, r1, lsr r9
     9a0:	03024106 	movweq	r4, #8454	; 0x2106
     9a4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     9a8:	02050001 	andeq	r0, r5, #1
     9ac:	00000000 	andeq	r0, r0, r0
     9b0:	0100dc03 	tsteq	r0, r3, lsl #24
     9b4:	03050106 	movweq	r0, #20742	; 0x5106
     9b8:	10052206 	andne	r2, r5, r6, lsl #4
     9bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     9c0:	03010520 	movweq	r0, #5408	; 0x1520
     9c4:	05053c14 	streq	r3, [r5, #-3092]	; 0xfffff3ec
     9c8:	20720306 	rsbscs	r0, r2, r6, lsl #6
     9cc:	063c065e 			; <UNDEFINED> instruction: 0x063c065e
     9d0:	06010531 			; <UNDEFINED> instruction: 0x06010531
     9d4:	00070241 	andeq	r0, r7, r1, asr #4
     9d8:	034f0101 	movteq	r0, #61697	; 0xf101
     9dc:	00030000 	andeq	r0, r3, r0
     9e0:	00000220 	andeq	r0, r0, r0, lsr #4
     9e4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     9e8:	0101000d 	tsteq	r1, sp
     9ec:	00000101 	andeq	r0, r0, r1, lsl #2
     9f0:	00000100 	andeq	r0, r0, r0, lsl #2
     9f4:	2f2e2e01 	svccs	0x002e2e01
     9f8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     9fc:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     a00:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     a04:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     a08:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     a0c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     a10:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     a14:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     a18:	5f6d7261 	svcpl	0x006d7261
     a1c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     a20:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     a24:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     a28:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     a2c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     a30:	30312d69 	eorscc	r2, r1, r9, ror #26
     a34:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     a38:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     a3c:	615c3031 	cmpvs	ip, r1, lsr r0
     a40:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     a44:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     a48:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     a4c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     a50:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     a54:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     a58:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     a5c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     a60:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     a64:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     a68:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     a6c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     a70:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     a74:	5f6d7261 	svcpl	0x006d7261
     a78:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     a7c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     a80:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     a84:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     a88:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     a8c:	30312d69 	eorscc	r2, r1, r9, ror #26
     a90:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     a94:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     a98:	615c3031 	cmpvs	ip, r1, lsr r0
     a9c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     aa0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     aa4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     aa8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     aac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     ab0:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     ab4:	2f2e2e00 	svccs	0x002e2e00
     ab8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     abc:	2f737265 	svccs	0x00737265
     ac0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     ac4:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     ac8:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     acc:	2f54532f 	svccs	0x0054532f
     ad0:	334d5453 	movtcc	r5, #54355	; 0xd453
     ad4:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     ad8:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     adc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     ae0:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     ae4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     ae8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     aec:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     af0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     af4:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     af8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; b00 <_Min_Heap_Size+0x300>
     afc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     b00:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
     b04:	3a630063 	bcc	18c0c98 <_Min_Heap_Size+0x18c0498>
     b08:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     b0c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     b10:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     b14:	6f72705c 	svcvs	0x0072705c
     b18:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     b1c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     b20:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     b24:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     b28:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     b2c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     b30:	61652d65 	cmnvs	r5, r5, ror #26
     b34:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     b38:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     b3c:	31323032 	teqcc	r2, r2, lsr r0
     b40:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     b44:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     b48:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     b4c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     b50:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     b54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     b58:	73000065 	movwvc	r0, #101	; 0x65
     b5c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     b60:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     b64:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
     b68:	00010063 	andeq	r0, r1, r3, rrx
     b6c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     b70:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     b74:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     b78:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     b7c:	00020068 	andeq	r0, r2, r8, rrx
     b80:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     b84:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     b88:	0300682e 	movweq	r6, #2094	; 0x82e
     b8c:	74730000 	ldrbtvc	r0, [r3], #-0
     b90:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     b94:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
     b98:	00682e78 	rsbeq	r2, r8, r8, ror lr
     b9c:	73000004 	movwvc	r0, #4
     ba0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     ba4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     ba8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     bac:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     bb0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     bb4:	74730000 	ldrbtvc	r0, [r3], #-0
     bb8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     bbc:	5f787834 	svcpl	0x00787834
     bc0:	5f6c6168 	svcpl	0x006c6168
     bc4:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
     bc8:	00050068 	andeq	r0, r5, r8, rrx
     bcc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     bd0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     bd4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     bd8:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; ffffff7f <_estack+0xdfffed47>
     bdc:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     be0:	00050068 	andeq	r0, r5, r8, rrx
     be4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     be8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     bec:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     bf0:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
     bf4:	00000500 	andeq	r0, r0, r0, lsl #10
     bf8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     bfc:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     c00:	00000006 	andeq	r0, r0, r6
     c04:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     c08:	00081802 	andeq	r1, r8, r2, lsl #16
     c0c:	00c60308 	sbceq	r0, r6, r8, lsl #6
     c10:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     c14:	01040200 	mrseq	r0, R12_usr
     c18:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
     c1c:	09051401 	stmdbeq	r5, {r0, sl, ip}
     c20:	01040200 	mrseq	r0, R12_usr
     c24:	00050210 	andeq	r0, r5, r0, lsl r2
     c28:	01050101 	tsteq	r5, r1, lsl #2
     c2c:	00020500 	andeq	r0, r2, r0, lsl #10
     c30:	03000000 	movweq	r0, #0
     c34:	050100d5 	streq	r0, [r1, #-213]	; 0xffffff2b
     c38:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
     c3c:	004c0104 	subeq	r0, ip, r4, lsl #2
     c40:	16010402 	strne	r0, [r1], -r2, lsl #8
     c44:	02000905 	andeq	r0, r0, #81920	; 0x14000
     c48:	020e0104 	andeq	r0, lr, #4, 2
     c4c:	01010005 	tsteq	r1, r5
     c50:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     c54:	00082c02 	andeq	r2, r8, r2, lsl #24
     c58:	00e40308 	rsceq	r0, r4, r8, lsl #6
     c5c:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     c60:	01040200 	mrseq	r0, R12_usr
     c64:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     c68:	09051601 	stmdbeq	r5, {r0, r9, sl, ip}
     c6c:	01040200 	mrseq	r0, R12_usr
     c70:	0005020e 	andeq	r0, r5, lr, lsl #4
     c74:	01050101 	tsteq	r5, r1, lsl #2
     c78:	40020500 	andmi	r0, r2, r0, lsl #10
     c7c:	03080008 	movweq	r0, #32776	; 0x8008
     c80:	050100f3 	streq	r0, [r1, #-243]	; 0xffffff0d
     c84:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
     c88:	004c0104 	subeq	r0, ip, r4, lsl #2
     c8c:	16010402 	strne	r0, [r1], -r2, lsl #8
     c90:	02000905 	andeq	r0, r0, #81920	; 0x14000
     c94:	020e0104 	andeq	r0, lr, #4, 2
     c98:	01010005 	tsteq	r1, r5
     c9c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     ca0:	00085402 	andeq	r5, r8, r2, lsl #8
     ca4:	01820308 	orreq	r0, r2, r8, lsl #6
     ca8:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     cac:	01040200 	mrseq	r0, R12_usr
     cb0:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     cb4:	09051601 	stmdbeq	r5, {r0, r9, sl, ip}
     cb8:	01040200 	mrseq	r0, R12_usr
     cbc:	0005020e 	andeq	r0, r5, lr, lsl #4
     cc0:	01050101 	tsteq	r5, r1, lsl #2
     cc4:	68020500 	stmdavs	r2, {r8, sl}
     cc8:	03080008 	movweq	r0, #32776	; 0x8008
     ccc:	19010191 	stmdbne	r1, {r0, r4, r7, r8}
     cd0:	01000102 	tsteq	r0, r2, lsl #2
     cd4:	00010501 	andeq	r0, r1, r1, lsl #10
     cd8:	086a0205 	stmdaeq	sl!, {r0, r2, r9}^
     cdc:	9e030800 	cdpls	8, 0, cr0, cr3, cr0, {0}
     ce0:	02190101 	andseq	r0, r9, #1073741824	; 0x40000000
     ce4:	01010001 	tsteq	r1, r1
     ce8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     cec:	00086c02 	andeq	r6, r8, r2, lsl #24
     cf0:	01ab0308 			; <UNDEFINED> instruction: 0x01ab0308
     cf4:	01021901 	tsteq	r2, r1, lsl #18
     cf8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     cfc:	02050001 	andeq	r0, r5, #1
     d00:	0800086e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp}
     d04:	0101b803 	tsteq	r1, r3, lsl #16
     d08:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
     d0c:	02320601 	eorseq	r0, r2, #1048576	; 0x100000
     d10:	01010001 	tsteq	r1, r1
     d14:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     d18:	00087802 	andeq	r7, r8, r2, lsl #16
     d1c:	01cd0308 	biceq	r0, sp, r8, lsl #6
     d20:	24030501 	strcs	r0, [r3], #-1281	; 0xfffffaff
     d24:	40060105 	andmi	r0, r6, r5, lsl #2
     d28:	01000402 	tsteq	r0, r2, lsl #8
     d2c:	00017201 	andeq	r7, r1, r1, lsl #4
     d30:	49000300 	stmdbmi	r0, {r8, r9}
     d34:	02000001 	andeq	r0, r0, #1
     d38:	0d0efb01 	vstreq	d15, [lr, #-4]
     d3c:	01010100 	mrseq	r0, (UNDEF: 17)
     d40:	00000001 	andeq	r0, r0, r1
     d44:	01000001 	tsteq	r0, r1
     d48:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     d4c:	2f65726f 	svccs	0x0065726f
     d50:	00637253 	rsbeq	r7, r3, r3, asr r2
     d54:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     d58:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     d5c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     d60:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     d64:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     d68:	615c6d61 	cmpvs	ip, r1, ror #26
     d6c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     d70:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     d74:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     d78:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     d7c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     d80:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d84:	2e30312d 	rsfcssp	f3, f0, #5.0
     d88:	30322d33 	eorscc	r2, r2, r3, lsr sp
     d8c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     d90:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     d94:	6f6e2d6d 	svcvs	0x006e2d6d
     d98:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     d9c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     da0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     da4:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     da8:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     dac:	00656e69 	rsbeq	r6, r5, r9, ror #28
     db0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     db4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     db8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     dbc:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     dc0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     dc4:	615c6d61 	cmpvs	ip, r1, ror #26
     dc8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     dcc:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     dd0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     dd4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     dd8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     ddc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     de0:	2e30312d 	rsfcssp	f3, f0, #5.0
     de4:	30322d33 	eorscc	r2, r2, r3, lsr sp
     de8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     dec:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     df0:	6f6e2d6d 	svcvs	0x006e2d6d
     df4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     df8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     dfc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     e00:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     e04:	00737973 	rsbseq	r7, r3, r3, ror r9
     e08:	442f2e2e 	strtmi	r2, [pc], #-3630	; e10 <_Min_Heap_Size+0x610>
     e0c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     e10:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     e14:	5349534d 	movtpl	r5, #37709	; 0x934d
     e18:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     e1c:	2f656369 	svccs	0x00656369
     e20:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
     e24:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     e28:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     e2c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     e30:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     e34:	74730000 	ldrbtvc	r0, [r3], #-0
     e38:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     e3c:	5f787834 	svcpl	0x00787834
     e40:	5f6c6168 	svcpl	0x006c6168
     e44:	2e70736d 	cdpcs	3, 7, cr7, cr0, cr13, {3}
     e48:	00010063 	andeq	r0, r1, r3, rrx
     e4c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     e50:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     e54:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     e58:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     e5c:	00020068 	andeq	r0, r2, r8, rrx
     e60:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     e64:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     e68:	0300682e 	movweq	r6, #2094	; 0x82e
     e6c:	74730000 	ldrbtvc	r0, [r3], #-0
     e70:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     e74:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
     e78:	00682e78 	rsbeq	r2, r8, r8, ror lr
     e7c:	00000004 	andeq	r0, r0, r4
     e80:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     e84:	00088802 	andeq	r8, r8, r2, lsl #16
     e88:	013f0308 	teqeq	pc, r8, lsl #6
     e8c:	01260305 			; <UNDEFINED> instruction: 0x01260305
     e90:	204a582e 	subcs	r5, sl, lr, lsr #16
     e94:	4a200113 	bmi	8012e8 <_Min_Heap_Size+0x800ae8>
     e98:	0105204a 	tsteq	r5, sl, asr #32
     e9c:	05021906 	streq	r1, [r2, #-2310]	; 0xfffff6fa
     ea0:	f4010100 	vst4.8	{d0,d2,d4,d6}, [r1], r0
     ea4:	03000044 	movweq	r0, #68	; 0x44
     ea8:	00025100 	andeq	r5, r2, r0, lsl #2
     eac:	fb010200 	blx	416b6 <_Min_Heap_Size+0x40eb6>
     eb0:	01000d0e 	tsteq	r0, lr, lsl #26
     eb4:	00010101 	andeq	r0, r1, r1, lsl #2
     eb8:	00010000 	andeq	r0, r1, r0
     ebc:	2e2e0100 	sufcse	f0, f6, f0
     ec0:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     ec4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     ec8:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     ecc:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     ed0:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     ed4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; edc <_Min_Heap_Size+0x6dc>
     ed8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     edc:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
     ee0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
     ee4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     ee8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     eec:	534d432f 	movtpl	r4, #54063	; 0xd32f
     ef0:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
     ef4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     ef8:	63006564 	movwvs	r6, #1380	; 0x564
     efc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     f00:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     f04:	6f646978 	svcvs	0x00646978
     f08:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     f0c:	6172676f 	cmnvs	r2, pc, ror #14
     f10:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     f14:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     f18:	63675c63 	cmnvs	r7, #25344	; 0x6300
     f1c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     f20:	6f6e2d6d 	svcvs	0x006e2d6d
     f24:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     f28:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     f2c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     f30:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     f34:	30312e31 	eorscc	r2, r1, r1, lsr lr
     f38:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     f3c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     f40:	61652d65 	cmnvs	r5, r5, ror #26
     f44:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     f48:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     f4c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     f50:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     f54:	6300656e 	movwvs	r6, #1390	; 0x56e
     f58:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     f5c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     f60:	6f646978 	svcvs	0x00646978
     f64:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     f68:	6172676f 	cmnvs	r2, pc, ror #14
     f6c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     f70:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     f74:	63675c63 	cmnvs	r7, #25344	; 0x6300
     f78:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     f7c:	6f6e2d6d 	svcvs	0x006e2d6d
     f80:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     f84:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     f88:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     f8c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     f90:	30312e31 	eorscc	r2, r1, r1, lsr lr
     f94:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     f98:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     f9c:	61652d65 	cmnvs	r5, r5, ror #26
     fa0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     fa4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     fa8:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     fac:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     fb0:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     fb4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     fb8:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     fbc:	2f534953 	svccs	0x00534953
     fc0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     fc4:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
     fc8:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     fcc:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     fd0:	2f787834 	svccs	0x00787834
     fd4:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     fd8:	00656475 	rsbeq	r6, r5, r5, ror r4
     fdc:	442f2e2e 	strtmi	r2, [pc], #-3630	; fe4 <_Min_Heap_Size+0x7e4>
     fe0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     fe4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     fe8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     fec:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     ff0:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     ff4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     ff8:	2f726576 	svccs	0x00726576
     ffc:	00636e49 	rsbeq	r6, r3, r9, asr #28
    1000:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    1004:	2f65726f 	svccs	0x0065726f
    1008:	00636e49 	rsbeq	r6, r3, r9, asr #28
    100c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1010:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1014:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1018:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; 3bf <_Min_Heap_Size-0x441>
    101c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    1020:	00010063 	andeq	r0, r1, r3, rrx
    1024:	736d6300 	cmnvc	sp, #0, 6
    1028:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    102c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    1030:	00000200 	andeq	r0, r0, r0, lsl #4
    1034:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1038:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    103c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1040:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1044:	00000300 	andeq	r0, r0, r0, lsl #6
    1048:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    104c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1050:	00040068 	andeq	r0, r4, r8, rrx
    1054:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1058:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    105c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    1060:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1064:	74730000 	ldrbtvc	r0, [r3], #-0
    1068:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    106c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    1070:	00050068 	andeq	r0, r5, r8, rrx
    1074:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1078:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    107c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1080:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 1088 <_Min_Heap_Size+0x888>
    1084:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1088:	00000600 	andeq	r0, r0, r0, lsl #12
    108c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1090:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1094:	61685f78 	smcvs	34296	; 0x85f8
    1098:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
    109c:	00682e61 	rsbeq	r2, r8, r1, ror #28
    10a0:	73000006 	movwvc	r0, #6
    10a4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10a8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    10ac:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    10b0:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    10b4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    10b8:	73000006 	movwvc	r0, #6
    10bc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10c0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    10c4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    10c8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    10cc:	00682e66 	rsbeq	r2, r8, r6, ror #28
    10d0:	73000007 	movwvc	r0, #7
    10d4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10d8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    10dc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    10e0:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    10e4:	0600682e 	streq	r6, [r0], -lr, lsr #16
    10e8:	74730000 	ldrbtvc	r0, [r3], #-0
    10ec:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    10f0:	5f787834 	svcpl	0x00787834
    10f4:	2e6c6168 	powcsez	f6, f4, #0.0
    10f8:	00060068 	andeq	r0, r6, r8, rrx
    10fc:	01050000 	mrseq	r0, (UNDEF: 5)
    1100:	00020500 	andeq	r0, r2, r0, lsl #10
    1104:	03000000 	movweq	r0, #0
    1108:	050119f9 	streq	r1, [r1, #-2553]	; 0xfffff607
    110c:	04020003 	streq	r0, [r2], #-3
    1110:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1114:	00010104 	andeq	r0, r1, r4, lsl #2
    1118:	01010402 	tsteq	r1, r2, lsl #8
    111c:	01040200 	mrseq	r0, R12_usr
    1120:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1124:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1128:	69e00301 	stmibvs	r0!, {r0, r8, r9}^
    112c:	00050520 	andeq	r0, r5, r0, lsr #10
    1130:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1134:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1138:	00140104 	andseq	r0, r4, r4, lsl #2
    113c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1140:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1144:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1148:	06010402 	streq	r0, [r1], -r2, lsl #8
    114c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1150:	04020003 	streq	r0, [r2], #-3
    1154:	169b0301 	ldrne	r0, [fp], r1, lsl #6
    1158:	04020001 	streq	r0, [r2], #-1
    115c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1160:	001f0502 	andseq	r0, pc, r2, lsl #10
    1164:	03010402 	movweq	r0, #5122	; 0x1402
    1168:	05016a93 	streq	r6, [r1, #-2707]	; 0xfffff56d
    116c:	04020004 	streq	r0, [r2], #-4
    1170:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1174:	00140104 	andseq	r0, r4, r4, lsl #2
    1178:	06010402 	streq	r0, [r1], -r2, lsl #8
    117c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1180:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1184:	06010402 	streq	r0, [r1], -r2, lsl #8
    1188:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    118c:	04020003 	streq	r0, [r2], #-3
    1190:	15e80301 	strbne	r0, [r8, #769]!	; 0x301
    1194:	04020001 	streq	r0, [r2], #-1
    1198:	002e0602 	eoreq	r0, lr, r2, lsl #12
    119c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    11a0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    11a4:	01060204 	tsteq	r6, r4, lsl #4
    11a8:	02040200 	andeq	r0, r4, #0, 4
    11ac:	00010520 	andeq	r0, r1, r0, lsr #10
    11b0:	2f020402 	svccs	0x00020402
    11b4:	01000102 	tsteq	r0, r2, lsl #2
    11b8:	00010501 	andeq	r0, r1, r1, lsl #10
    11bc:	08c00205 	stmiaeq	r0, {r0, r2, r9}^
    11c0:	87030800 	strhi	r0, [r3, -r0, lsl #16]
    11c4:	0305011a 	movweq	r0, #20762	; 0x511a
    11c8:	01040200 	mrseq	r0, R12_usr
    11cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    11d0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    11d4:	00010104 	andeq	r0, r1, r4, lsl #2
    11d8:	01010402 	tsteq	r1, r2, lsl #8
    11dc:	1f050204 	svcne	0x00050204
    11e0:	01040200 	mrseq	r0, R12_usr
    11e4:	2069d203 	rsbcs	sp, r9, r3, lsl #4
    11e8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    11ec:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    11f0:	04020004 	streq	r0, [r2], #-4
    11f4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    11f8:	2e060104 	adfcss	f0, f6, f4
    11fc:	01040200 	mrseq	r0, R12_usr
    1200:	02002f06 	andeq	r2, r0, #6, 30
    1204:	01060104 	tsteq	r6, r4, lsl #2
    1208:	03050104 	movweq	r0, #20740	; 0x5104
    120c:	01040200 	mrseq	r0, R12_usr
    1210:	0116a903 	tsteq	r6, r3, lsl #18
    1214:	01040200 	mrseq	r0, R12_usr
    1218:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    121c:	02001f05 	andeq	r1, r0, #5, 30
    1220:	85030104 	strhi	r0, [r3, #-260]	; 0xfffffefc
    1224:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    1228:	01040200 	mrseq	r0, R12_usr
    122c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1230:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1234:	20060104 	andcs	r0, r6, r4, lsl #2
    1238:	01040200 	mrseq	r0, R12_usr
    123c:	02002f06 	andeq	r2, r0, #6, 30
    1240:	01060104 	tsteq	r6, r4, lsl #2
    1244:	03050104 	movweq	r0, #20740	; 0x5104
    1248:	01040200 	mrseq	r0, R12_usr
    124c:	0115f603 	tsteq	r5, r3, lsl #12	; <UNPREDICTABLE>
    1250:	01040200 	mrseq	r0, R12_usr
    1254:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1258:	00010601 	andeq	r0, r1, r1, lsl #12
    125c:	13010402 	movwne	r0, #5122	; 0x1402
    1260:	01040200 	mrseq	r0, R12_usr
    1264:	04020001 	streq	r0, [r2], #-1
    1268:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    126c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1270:	001f0502 	andseq	r0, pc, r2, lsl #10
    1274:	03010402 	movweq	r0, #5122	; 0x1402
    1278:	052069d1 	streq	r6, [r0, #-2513]!	; 0xfffff62f
    127c:	04020005 	streq	r0, [r2], #-5
    1280:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1284:	01040200 	mrseq	r0, R12_usr
    1288:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    128c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1290:	06010402 	streq	r0, [r1], -r2, lsl #8
    1294:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1298:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    129c:	00030501 	andeq	r0, r3, r1, lsl #10
    12a0:	03010402 	movweq	r0, #5122	; 0x1402
    12a4:	000116aa 	andeq	r1, r1, sl, lsr #13
    12a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    12ac:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    12b0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    12b4:	6a840301 	bvs	fe101ec0 <_estack+0xde100c88>
    12b8:	00040501 	andeq	r0, r4, r1, lsl #10
    12bc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    12c0:	01040200 	mrseq	r0, R12_usr
    12c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    12c8:	00200601 	eoreq	r0, r0, r1, lsl #12
    12cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    12d0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    12d4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    12d8:	00030501 	andeq	r0, r3, r1, lsl #10
    12dc:	03010402 	movweq	r0, #5122	; 0x1402
    12e0:	000115f7 	strdeq	r1, [r1], -r7
    12e4:	06020402 	streq	r0, [r2], -r2, lsl #8
    12e8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    12ec:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    12f0:	02040200 	andeq	r0, r4, #0, 4
    12f4:	06050106 	streq	r0, [r5], -r6, lsl #2
    12f8:	02040200 	andeq	r0, r4, #0, 4
    12fc:	00050520 	andeq	r0, r5, r0, lsr #10
    1300:	06020402 	streq	r0, [r2], -r2, lsl #8
    1304:	00030530 	andeq	r0, r3, r0, lsr r5
    1308:	16020402 	strne	r0, [r2], -r2, lsl #8
    130c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    1310:	01060204 	tsteq	r6, r4, lsl #4
    1314:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1318:	3d060204 	sfmcc	f0, 4, [r6, #-16]
    131c:	02001805 	andeq	r1, r0, #327680	; 0x50000
    1320:	01060204 	tsteq	r6, r4, lsl #4
    1324:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    1328:	052f0204 	streq	r0, [pc, #-516]!	; 112c <_Min_Heap_Size+0x92c>
    132c:	04020005 	streq	r0, [r2], #-5
    1330:	7a030601 	bvc	c2b3c <_Min_Heap_Size+0xc233c>
    1334:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1338:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    133c:	00010104 	andeq	r0, r1, r4, lsl #2
    1340:	01010402 	tsteq	r1, r2, lsl #8
    1344:	1f050204 	svcne	0x00050204
    1348:	01040200 	mrseq	r0, R12_usr
    134c:	2069cc03 	rsbcs	ip, r9, r3, lsl #24
    1350:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1354:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1358:	04020004 	streq	r0, [r2], #-4
    135c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1360:	2e060104 	adfcss	f0, f6, f4
    1364:	01040200 	mrseq	r0, R12_usr
    1368:	02002f06 	andeq	r2, r0, #6, 30
    136c:	01060104 	tsteq	r6, r4, lsl #2
    1370:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1374:	01040200 	mrseq	r0, R12_usr
    1378:	0116af03 	tsteq	r6, r3, lsl #30
    137c:	01040200 	mrseq	r0, R12_usr
    1380:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    1384:	02001f05 	andeq	r1, r0, #5, 30
    1388:	ff030104 			; <UNDEFINED> instruction: 0xff030104
    138c:	04050169 	streq	r0, [r5], #-361	; 0xfffffe97
    1390:	01040200 	mrseq	r0, R12_usr
    1394:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1398:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    139c:	20060104 	andcs	r0, r6, r4, lsl #2
    13a0:	01040200 	mrseq	r0, R12_usr
    13a4:	02002f06 	andeq	r2, r0, #6, 30
    13a8:	01060104 	tsteq	r6, r4, lsl #2
    13ac:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    13b0:	01040200 	mrseq	r0, R12_usr
    13b4:	0115fc03 	tsteq	r5, r3, lsl #24	; <UNPREDICTABLE>
    13b8:	01000302 	tsteq	r0, r2, lsl #6
    13bc:	00010501 	andeq	r0, r1, r1, lsl #10
    13c0:	091c0205 	ldmdbeq	ip, {r0, r2, r9}
    13c4:	c9030800 	stmdbgt	r3, {fp}
    13c8:	0305011b 	movweq	r0, #20763	; 0x511b
    13cc:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    13d0:	06050106 	streq	r0, [r5], -r6, lsl #2
    13d4:	030c053c 	movweq	r0, #50492	; 0xc53c
    13d8:	01052e19 	tsteq	r5, r9, lsl lr
    13dc:	06050522 	streq	r0, [r5], -r2, lsr #10
    13e0:	05206703 	streq	r6, [r0, #-1795]!	; 0xfffff8fd
    13e4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    13e8:	07052008 	streq	r2, [r5, -r8]
    13ec:	2d054406 	cfstrscs	mvf4, [r5, #-24]	; 0xffffffe8
    13f0:	39050106 	stmdbcc	r5, {r1, r2, r8}
    13f4:	2e270520 	cfsh64cs	mvdx0, mvdx7, #16
    13f8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    13fc:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    1400:	10052306 	andne	r2, r5, r6, lsl #6
    1404:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1408:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
    140c:	31060705 	tstcc	r6, r5, lsl #14
    1410:	5a05055b 	bpl	142984 <_Min_Heap_Size+0x142184>
    1414:	01060c05 	tsteq	r6, r5, lsl #24
    1418:	00470520 	subeq	r0, r7, r0, lsr #10
    141c:	03010402 	movweq	r0, #5122	; 0x1402
    1420:	3805206d 	stmdacc	r5, {r0, r2, r3, r5, r6, sp}
    1424:	01040200 	mrseq	r0, R12_usr
    1428:	06070520 	streq	r0, [r7], -r0, lsr #10
    142c:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    1430:	06070501 	streq	r0, [r7], -r1, lsl #10
    1434:	06280521 	strteq	r0, [r8], -r1, lsr #10
    1438:	200c0501 	andcs	r0, ip, r1, lsl #10
    143c:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    1440:	07052e1b 	smladeq	r5, fp, lr, r2
    1444:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    1448:	04020106 	streq	r0, [r2], #-262	; 0xfffffefa
    144c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1450:	02050001 	andeq	r0, r5, #1
    1454:	0800097c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp}
    1458:	011cef03 	tsteq	ip, r3, lsl #30
    145c:	03050106 	movweq	r0, #20742	; 0x5106
    1460:	15132f06 	ldrne	r2, [r3, #-3846]	; 0xfffff0fa
    1464:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    1468:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    146c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1470:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1474:	3c020402 	cfstrscc	mvf0, [r2], {2}
    1478:	02003d06 	andeq	r3, r0, #384	; 0x180
    147c:	58060204 	stmdapl	r6, {r2, r9}
    1480:	03040200 	movweq	r0, #16896	; 0x4200
    1484:	035d0620 	cmpeq	sp, #32, 12	; 0x2000000
    1488:	21057409 	tstcs	r5, r9, lsl #8
    148c:	3a050106 	bcc	1418ac <_Min_Heap_Size+0x1410ac>
    1490:	202d0520 	eorcs	r0, sp, r0, lsr #10
    1494:	05204f05 	streq	r4, [r0, #-3845]!	; 0xfffff0fb
    1498:	62052042 	andvs	r2, r5, #66	; 0x42
    149c:	200a0520 	andcs	r0, sl, r0, lsr #10
    14a0:	21060305 	tstcs	r6, r5, lsl #6
    14a4:	05200688 	streq	r0, [r0, #-1672]!	; 0xfffff978
    14a8:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
    14ac:	060f0566 	streq	r0, [pc], -r6, ror #10
    14b0:	20080501 	andcs	r0, r8, r1, lsl #10
    14b4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    14b8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    14bc:	0c030607 	stceq	6, cr0, [r3], {7}
    14c0:	060e054a 	streq	r0, [lr], -sl, asr #10
    14c4:	03052e01 	movweq	r2, #24065	; 0x5e01
    14c8:	01040200 	mrseq	r0, R12_usr
    14cc:	00205303 	eoreq	r5, r0, r3, lsl #6
    14d0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    14d4:	02040200 	andeq	r0, r4, #0, 4
    14d8:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    14dc:	07056703 	streq	r6, [r5, -r3, lsl #14]
    14e0:	66210306 	strtvs	r0, [r1], -r6, lsl #6
    14e4:	01060e05 	tsteq	r6, r5, lsl #28
    14e8:	03060305 	movweq	r0, #25349	; 0x6305
    14ec:	12052e0d 	andne	r2, r5, #13, 28	; 0xd0
    14f0:	06050106 	streq	r0, [r5], -r6, lsl #2
    14f4:	06050520 	streq	r0, [r5], -r0, lsr #10
    14f8:	061c0542 	ldreq	r0, [ip], -r2, asr #10
    14fc:	0a05ac01 	beq	16c508 <_Min_Heap_Size+0x16bd08>
    1500:	1c059e08 	stcne	14, cr9, [r5], {8}
    1504:	201a0520 	andscs	r0, sl, r0, lsr #10
    1508:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    150c:	7a030605 	bvc	c2d28 <_Min_Heap_Size+0xc2528>
    1510:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    1514:	0a05ba01 	beq	16fd20 <_Min_Heap_Size+0x16f520>
    1518:	1c059008 	stcne	0, cr9, [r5], {8}
    151c:	201a0520 	andscs	r0, sl, r0, lsr #10
    1520:	01000a02 	tsteq	r0, r2, lsl #20
    1524:	00010501 	andeq	r0, r1, r1, lsl #10
    1528:	0af00205 	beq	ffc01d44 <_estack+0xdfc00b0c>
    152c:	f2030800 	vadd.i8	d0, d3, d0
    1530:	01060118 	tsteq	r6, r8, lsl r1
    1534:	92060305 	andls	r0, r6, #335544320	; 0x14000000
    1538:	05010905 	streq	r0, [r1, #-2309]	; 0xfffff6fb
    153c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1540:	09052e32 	stmdbeq	r5, {r1, r4, r5, r9, sl, fp, sp}
    1544:	06050574 			; <UNDEFINED> instruction: 0x06050574
    1548:	06080531 			; <UNDEFINED> instruction: 0x06080531
    154c:	06070501 	streq	r0, [r7], -r1, lsl #10
    1550:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    1554:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    1558:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    155c:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    1560:	07052e01 	streq	r2, [r5, -r1, lsl #28]
    1564:	0c054206 	sfmeq	f4, 4, [r5], {6}
    1568:	0a050106 	beq	141988 <_Min_Heap_Size+0x141188>
    156c:	0040052e 	subeq	r0, r0, lr, lsr #10
    1570:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1574:	02005b05 	andeq	r5, r0, #5120	; 0x1400
    1578:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    157c:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    1580:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1584:	0b05200c 	bleq	1495bc <_Min_Heap_Size+0x148dbc>
    1588:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    158c:	17202e2e 	strne	r2, [r0, -lr, lsr #28]!
    1590:	061c053e 			; <UNDEFINED> instruction: 0x061c053e
    1594:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1598:	142e0131 	strtne	r0, [lr], #-305	; 0xfffffecf
    159c:	01061205 	tsteq	r6, r5, lsl #4
    15a0:	05330a05 	ldreq	r0, [r3, #-2565]!	; 0xfffff5fb
    15a4:	10052101 	andne	r2, r5, r1, lsl #2
    15a8:	023c6603 	eorseq	r6, ip, #3145728	; 0x300000
    15ac:	01010004 	tsteq	r1, r4
    15b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    15b4:	00000002 	andeq	r0, r0, r2
    15b8:	05cb0300 	strbeq	r0, [fp, #768]	; 0x300
    15bc:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    15c0:	16060105 	strne	r0, [r6], -r5, lsl #2
    15c4:	01000102 	tsteq	r0, r2, lsl #2
    15c8:	00010501 	andeq	r0, r1, r1, lsl #10
    15cc:	0b7c0205 	bleq	1f01de8 <_Min_Heap_Size+0x1f015e8>
    15d0:	e5030800 	str	r0, [r3, #-2048]	; 0xfffff800
    15d4:	03050102 	movweq	r0, #20738	; 0x5102
    15d8:	06060514 			; <UNDEFINED> instruction: 0x06060514
    15dc:	3a010501 	bcc	429e8 <_Min_Heap_Size+0x421e8>
    15e0:	36060305 	strcc	r0, [r6], -r5, lsl #6
    15e4:	01061205 	tsteq	r6, r5, lsl #4
    15e8:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    15ec:	00330605 	eorseq	r0, r3, r5, lsl #12
    15f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    15f4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    15f8:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    15fc:	004a0304 	subeq	r0, sl, r4, lsl #6
    1600:	4a040402 	bmi	102610 <_Min_Heap_Size+0x101e10>
    1604:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1608:	002f063c 	eoreq	r0, pc, ip, lsr r6	; <UNPREDICTABLE>
    160c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1610:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1614:	02003c02 	andeq	r3, r0, #512	; 0x200
    1618:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    161c:	00420603 	subeq	r0, r2, r3, lsl #12
    1620:	06010402 	streq	r0, [r1], -r2, lsl #8
    1624:	003d062e 	eorseq	r0, sp, lr, lsr #12
    1628:	06010402 	streq	r0, [r1], -r2, lsl #8
    162c:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    1630:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1634:	03052e06 	movweq	r2, #24070	; 0x5e06
    1638:	2e150306 	cdpcs	3, 1, cr0, cr5, cr6, {0}
    163c:	01061105 	tsteq	r6, r5, lsl #2
    1640:	3f060305 	svccc	0x00060305
    1644:	5b59415b 	blpl	1651bb8 <_Min_Heap_Size+0x16513b8>
    1648:	0614055b 			; <UNDEFINED> instruction: 0x0614055b
    164c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1650:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1654:	06030501 	streq	r0, [r3], -r1, lsl #10
    1658:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    165c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1660:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1664:	06030501 	streq	r0, [r3], -r1, lsl #10
    1668:	06010522 	streq	r0, [r1], -r2, lsr #10
    166c:	00050513 	andeq	r0, r5, r3, lsl r5
    1670:	03040402 	movweq	r0, #17410	; 0x4402
    1674:	6a06204a 	bvs	1897a4 <_Min_Heap_Size+0x188fa4>
    1678:	01040200 	mrseq	r0, R12_usr
    167c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1680:	004a0204 	subeq	r0, sl, r4, lsl #4
    1684:	4a030402 	bmi	c2694 <_Min_Heap_Size+0xc1e94>
    1688:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    168c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1690:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    1694:	004a0604 	subeq	r0, sl, r4, lsl #12
    1698:	3c060402 	cfstrscc	mvf0, [r6], {2}
    169c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    16a0:	003e0204 	eorseq	r0, lr, r4, lsl #4
    16a4:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    16a8:	6b060505 	blvs	182ac4 <_Min_Heap_Size+0x1822c4>
    16ac:	01061105 	tsteq	r6, r5, lsl #2
    16b0:	03060505 	movweq	r0, #25861	; 0x6505
    16b4:	0c052e0e 	stceq	14, cr2, [r5], {14}
    16b8:	4a5c0306 	bmi	17022d8 <_Min_Heap_Size+0x1701ad8>
    16bc:	c0030105 	andgt	r0, r3, r5, lsl #2
    16c0:	06022000 	streq	r2, [r2], -r0
    16c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    16c8:	02050001 	andeq	r0, r5, #1
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	0103b303 	tsteq	r3, r3, lsl #6
    16d4:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    16d8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    16dc:	03052c01 	movweq	r2, #23553	; 0x5c01
    16e0:	02003606 	andeq	r3, r0, #6291456	; 0x600000
    16e4:	4a060104 	bmi	181afc <_Min_Heap_Size+0x1812fc>
    16e8:	02040200 	andeq	r0, r4, #0, 4
    16ec:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    16f0:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    16f4:	004a0404 	subeq	r0, sl, r4, lsl #8
    16f8:	4a050402 	bmi	142708 <_Min_Heap_Size+0x141f08>
    16fc:	06040200 	streq	r0, [r4], -r0, lsl #4
    1700:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1704:	2f063c06 	svccs	0x00063c06
    1708:	01040200 	mrseq	r0, R12_usr
    170c:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    1710:	01040200 	mrseq	r0, R12_usr
    1714:	3e062e06 	cdpcc	14, 0, cr2, cr6, cr6, {0}
    1718:	01060c05 	tsteq	r6, r5, lsl #24
    171c:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    1720:	15030603 	strne	r0, [r3, #-1539]	; 0xfffff9fd
    1724:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1728:	06030501 	streq	r0, [r3], -r1, lsl #10
    172c:	59415b3f 	stmdbpl	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}^
    1730:	055b5b5b 	ldrbeq	r5, [fp, #-2907]	; 0xfffff4a5
    1734:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1738:	052f0603 	streq	r0, [pc, #-1539]!	; 113d <_Min_Heap_Size+0x93d>
    173c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1740:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    1744:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1748:	052f0603 	streq	r0, [pc, #-1539]!	; 114d <_Min_Heap_Size+0x94d>
    174c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1750:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    1754:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1758:	04020003 	streq	r0, [r2], #-3
    175c:	204d0302 	subcs	r0, sp, r2, lsl #6
    1760:	02040200 	andeq	r0, r4, #0, 4
    1764:	06050567 	streq	r0, [r5], -r7, ror #10
    1768:	0611056b 	ldreq	r0, [r1], -fp, ror #10
    176c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1770:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    1774:	6703060c 	strvs	r0, [r3, -ip, lsl #12]
    1778:	0301054a 	movweq	r0, #5450	; 0x154a
    177c:	06022038 			; <UNDEFINED> instruction: 0x06022038
    1780:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1784:	02050001 	andeq	r0, r5, #1
    1788:	00000000 	andeq	r0, r0, r0
    178c:	0103fd03 	tsteq	r3, r3, lsl #26	; <UNPREDICTABLE>
    1790:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1794:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1798:	03052c01 	movweq	r2, #23553	; 0x5c01
    179c:	02004406 	andeq	r4, r0, #100663296	; 0x6000000
    17a0:	4a060104 	bmi	181bb8 <_Min_Heap_Size+0x1813b8>
    17a4:	02040200 	andeq	r0, r4, #0, 4
    17a8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    17ac:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    17b0:	004a0404 	subeq	r0, sl, r4, lsl #8
    17b4:	4a050402 	bmi	1427c4 <_Min_Heap_Size+0x141fc4>
    17b8:	06040200 	streq	r0, [r4], -r0, lsl #4
    17bc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    17c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    17c4:	06200604 	strteq	r0, [r0], -r4, lsl #12
    17c8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    17cc:	06200601 	strteq	r0, [r0], -r1, lsl #12
    17d0:	053e3d2f 	ldreq	r3, [lr, #-3375]!	; 0xfffff2d1
    17d4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    17d8:	03052e06 	movweq	r2, #24070	; 0x5e06
    17dc:	2e150306 	cdpcs	3, 1, cr0, cr5, cr6, {0}
    17e0:	01061105 	tsteq	r6, r5, lsl #2
    17e4:	3f060305 	svccc	0x00060305
    17e8:	5b59415b 	blpl	1651d5c <_Min_Heap_Size+0x165155c>
    17ec:	3c06595b 			; <UNDEFINED> instruction: 0x3c06595b
    17f0:	055b2306 	ldrbeq	r2, [fp, #-774]	; 0xfffffcfa
    17f4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    17f8:	052f0603 	streq	r0, [pc, #-1539]!	; 11fd <_Min_Heap_Size+0x9fd>
    17fc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1800:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    1804:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1808:	052f0603 	streq	r0, [pc, #-1539]!	; 120d <_Min_Heap_Size+0xa0d>
    180c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1810:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    1814:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1818:	04020003 	streq	r0, [r2], #-3
    181c:	20480302 	subcs	r0, r8, r2, lsl #6
    1820:	01040200 	mrseq	r0, R12_usr
    1824:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    1828:	05056701 	streq	r6, [r5, #-1793]	; 0xfffff8ff
    182c:	11056b06 	tstne	r5, r6, lsl #22
    1830:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1834:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    1838:	03060c05 	movweq	r0, #27653	; 0x6c05
    183c:	01054a64 	tsteq	r5, r4, ror #20
    1840:	02203f03 	eoreq	r3, r0, #3, 30
    1844:	01010005 	tsteq	r1, r5
    1848:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    184c:	00000002 	andeq	r0, r0, r2
    1850:	04cf0300 	strbeq	r0, [pc], #768	; 1858 <_Min_Heap_Size+0x1058>
    1854:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1858:	01060605 	tsteq	r6, r5, lsl #12
    185c:	053a0105 	ldreq	r0, [sl, #-261]!	; 0xfffffefb
    1860:	06520603 	ldrbeq	r0, [r2], -r3, lsl #12
    1864:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1868:	02002e01 	andeq	r2, r0, #1, 28
    186c:	004a0204 	subeq	r0, sl, r4, lsl #4
    1870:	4a030402 	bmi	c2880 <_Min_Heap_Size+0xc2080>
    1874:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1878:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    187c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    1880:	004a0604 	subeq	r0, sl, r4, lsl #12
    1884:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
    1888:	06040200 	streq	r0, [r4], -r0, lsl #4
    188c:	00310620 	eorseq	r0, r1, r0, lsr #12
    1890:	06010402 	streq	r0, [r1], -r2, lsl #8
    1894:	2f3d0620 	svccs	0x003d0620
    1898:	01040200 	mrseq	r0, R12_usr
    189c:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    18a0:	01040200 	mrseq	r0, R12_usr
    18a4:	3e062e06 	cdpcc	14, 0, cr2, cr6, cr6, {0}
    18a8:	01060c05 	tsteq	r6, r5, lsl #24
    18ac:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    18b0:	15030603 	strne	r0, [r3, #-1539]	; 0xfffff9fd
    18b4:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    18b8:	06030501 	streq	r0, [r3], -r1, lsl #10
    18bc:	59415b3f 	stmdbpl	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}^
    18c0:	594d595b 	stmdbpl	sp, {r0, r1, r3, r4, r6, r8, fp, ip, lr}^
    18c4:	23063c06 	movwcs	r3, #27654	; 0x6c06
    18c8:	0614055b 			; <UNDEFINED> instruction: 0x0614055b
    18cc:	06030501 	streq	r0, [r3], -r1, lsl #10
    18d0:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    18d4:	06030501 	streq	r0, [r3], -r1, lsl #10
    18d8:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    18dc:	06030501 	streq	r0, [r3], -r1, lsl #10
    18e0:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    18e4:	06030501 	streq	r0, [r3], -r1, lsl #10
    18e8:	06010522 	streq	r0, [r1], -r2, lsr #10
    18ec:	00030513 	andeq	r0, r3, r3, lsl r5
    18f0:	03020402 	movweq	r0, #9218	; 0x2402
    18f4:	02002046 	andeq	r2, r0, #70	; 0x46
    18f8:	00670104 	rsbeq	r0, r7, r4, lsl #2
    18fc:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    1900:	02040200 	andeq	r0, r4, #0, 4
    1904:	06050567 	streq	r0, [r5], -r7, ror #10
    1908:	0611056b 	ldreq	r0, [r1], -fp, ror #10
    190c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1910:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    1914:	6303060c 	movwvs	r0, #13836	; 0x360c
    1918:	0301054a 	movweq	r0, #5450	; 0x154a
    191c:	022000c1 	eoreq	r0, r0, #193	; 0xc1
    1920:	01010006 	tsteq	r1, r6
    1924:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1928:	00000002 	andeq	r0, r0, r2
    192c:	05da0300 	ldrbeq	r0, [sl, #768]	; 0x300
    1930:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1934:	16060105 	strne	r0, [r6], -r5, lsl #2
    1938:	01000102 	tsteq	r0, r2, lsl #2
    193c:	00010501 	andeq	r0, r1, r1, lsl #10
    1940:	00000205 	andeq	r0, r0, r5, lsl #4
    1944:	9d030000 	stcls	0, cr0, [r3, #-0]
    1948:	03050105 	movweq	r0, #20741	; 0x5105
    194c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    1950:	1e010501 	cfsh32ne	mvfx0, mvfx1, #1
    1954:	36060305 	strcc	r0, [r6], -r5, lsl #6
    1958:	01040200 	mrseq	r0, R12_usr
    195c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1960:	004a0204 	subeq	r0, sl, r4, lsl #4
    1964:	4a030402 	bmi	c2974 <_Min_Heap_Size+0xc2174>
    1968:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    196c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1970:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    1974:	004a0604 	subeq	r0, sl, r4, lsl #12
    1978:	3c060402 	cfstrscc	mvf0, [r6], {2}
    197c:	11053006 	tstne	r5, r6
    1980:	03050106 	movweq	r0, #20742	; 0x5106
    1984:	0b033f06 	bleq	d15a4 <_Min_Heap_Size+0xd0da4>
    1988:	14053f58 	strne	r3, [r5], #-3928	; 0xfffff0a8
    198c:	03050106 	movweq	r0, #20742	; 0x5106
    1990:	11052f06 	tstne	r5, r6, lsl #30
    1994:	03050106 	movweq	r0, #20742	; 0x5106
    1998:	12052f06 	andne	r2, r5, #6, 30
    199c:	03050106 	movweq	r0, #20742	; 0x5106
    19a0:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    19a4:	03050106 	movweq	r0, #20742	; 0x5106
    19a8:	16052106 	strne	r2, [r5], -r6, lsl #2
    19ac:	03050106 	movweq	r0, #20742	; 0x5106
    19b0:	2e012306 	cdpcs	3, 0, cr2, cr1, cr6, {0}
    19b4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    19b8:	030c0513 	movweq	r0, #50451	; 0xc513
    19bc:	0105205f 	qaddeq	r2, pc, r5	; <UNPREDICTABLE>
    19c0:	02202103 	eoreq	r2, r0, #-1073741824	; 0xc0000000
    19c4:	01010005 	tsteq	r1, r5
    19c8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    19cc:	000ca802 	andeq	sl, ip, r2, lsl #16
    19d0:	08ef0308 	stmiaeq	pc!, {r3, r8, r9}^	; <UNPREDICTABLE>
    19d4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    19d8:	134b0603 	movtne	r0, #46595	; 0xb603
    19dc:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    19e0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    19e4:	05052006 	streq	r2, [r5, #-6]
    19e8:	08055a06 	stmdaeq	r5, {r1, r2, r9, fp, ip, lr}
    19ec:	19050106 	stmdbne	r5, {r1, r2, r8}
    19f0:	01040200 	mrseq	r0, R12_usr
    19f4:	220f052e 	andcs	r0, pc, #192937984	; 0xb800000
    19f8:	06050520 	streq	r0, [r5], -r0, lsr #10
    19fc:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    1a00:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a04:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1a08:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a0c:	0611053f 			; <UNDEFINED> instruction: 0x0611053f
    1a10:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1a14:	17052206 	strne	r2, [r5, -r6, lsl #4]
    1a18:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1a1c:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    1a20:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1a24:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    1a28:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1a2c:	44130520 	ldrmi	r0, [r3], #-1312	; 0xfffffae0
    1a30:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    1a34:	78030104 	stmdavc	r3, {r2, r8}
    1a38:	0038053c 	eorseq	r0, r8, ip, lsr r5
    1a3c:	20010402 	andcs	r0, r1, r2, lsl #8
    1a40:	05281305 	streq	r1, [r8, #-773]!	; 0xfffffcfb
    1a44:	05430609 	strbeq	r0, [r3, #-1545]	; 0xfffff9f7
    1a48:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    1a4c:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    1a50:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1a54:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1a58:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    1a5c:	1f052e0e 	svcne	0x00052e0e
    1a60:	2e1d0520 	cfmul64cs	mvdx0, mvdx13, mvdx0
    1a64:	21060905 	tstcs	r6, r5, lsl #18
    1a68:	05190705 	ldreq	r0, [r9, #-1797]	; 0xfffff8fb
    1a6c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1a70:	0b052e19 	bleq	14d2dc <_Min_Heap_Size+0x14cadc>
    1a74:	3c6e0306 	stclcc	3, cr0, [lr], #-24	; 0xffffffe8
    1a78:	01061105 	tsteq	r6, r5, lsl #2
    1a7c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    1a80:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    1a84:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1a88:	0705740a 	streq	r7, [r5, -sl, lsl #8]
    1a8c:	0a053406 	beq	14eaac <_Min_Heap_Size+0x14e2ac>
    1a90:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1a94:	29053506 	stmdbcs	r5, {r1, r2, r8, sl, ip, sp}
    1a98:	0e050106 	adfeqs	f0, f5, f6
    1a9c:	201d052e 	andscs	r0, sp, lr, lsr #10
    1aa0:	21060905 	tstcs	r6, r5, lsl #18
    1aa4:	13050106 	movwne	r0, #20742	; 0x5106
    1aa8:	1f206803 	svcne	0x00206803
    1aac:	06050520 	streq	r0, [r5], -r0, lsr #10
    1ab0:	05201e03 	streq	r1, [r0, #-3587]!	; 0xfffff1fd
    1ab4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    1ab8:	05057408 	streq	r7, [r5, #-1032]	; 0xfffffbf8
    1abc:	13052806 	movwne	r2, #22534	; 0x5806
    1ac0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1ac4:	0c053e06 	stceq	14, cr3, [r5], {6}
    1ac8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1acc:	20780306 	rsbscs	r0, r8, r6, lsl #6
    1ad0:	01061505 	tsteq	r6, r5, lsl #10
    1ad4:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    1ad8:	01060e05 	tsteq	r6, r5, lsl #28
    1adc:	0a030c05 	beq	c4af8 <_Min_Heap_Size+0xc42f8>
    1ae0:	2201052e 	andcs	r0, r1, #192937984	; 0xb800000
    1ae4:	43030f05 	movwmi	r0, #16133	; 0x3f05
    1ae8:	0102203c 	tsteq	r2, ip, lsr r0
    1aec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1af0:	02050001 	andeq	r0, r5, #1
    1af4:	00000000 	andeq	r0, r0, r0
    1af8:	0109c503 	tsteq	r9, r3, lsl #10
    1afc:	03050106 	movweq	r0, #20742	; 0x5106
    1b00:	13134b06 	tstne	r3, #6144	; 0x1800
    1b04:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    1b08:	06052e01 	streq	r2, [r5], -r1, lsl #28
    1b0c:	06050520 	streq	r0, [r5], -r0, lsr #10
    1b10:	0608055a 			; <UNDEFINED> instruction: 0x0608055a
    1b14:	00190501 	andseq	r0, r9, r1, lsl #10
    1b18:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1b1c:	20220f05 	eorcs	r0, r2, r5, lsl #30
    1b20:	23060505 	movwcs	r0, #25861	; 0x6505
    1b24:	01061605 	tsteq	r6, r5, lsl #12
    1b28:	2f060505 	svccs	0x00060505
    1b2c:	01061405 	tsteq	r6, r5, lsl #8
    1b30:	06050520 	streq	r0, [r5], -r0, lsr #10
    1b34:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    1b38:	06050501 	streq	r0, [r5], -r1, lsl #10
    1b3c:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    1b40:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1b44:	17052206 	strne	r2, [r5, -r6, lsl #4]
    1b48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b4c:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    1b50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b54:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    1b58:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1b5c:	44130520 	ldrmi	r0, [r3], #-1312	; 0xfffffae0
    1b60:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    1b64:	78030104 	stmdavc	r3, {r2, r8}
    1b68:	0038053c 	eorseq	r0, r8, ip, lsr r5
    1b6c:	20010402 	andcs	r0, r1, r2, lsl #8
    1b70:	37281305 	strcc	r1, [r8, -r5, lsl #6]!
    1b74:	0905201f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sp}
    1b78:	200e0306 	andcs	r0, lr, r6, lsl #6
    1b7c:	01061805 	tsteq	r6, r5, lsl #16
    1b80:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    1b84:	01061005 	tsteq	r6, r5
    1b88:	32060905 	andcc	r0, r6, #81920	; 0x14000
    1b8c:	01062805 	tsteq	r6, r5, lsl #16
    1b90:	05203205 	streq	r3, [r0, #-517]!	; 0xfffffdfb
    1b94:	16052018 			; <UNDEFINED> instruction: 0x16052018
    1b98:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1b9c:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    1ba0:	0526060b 	streq	r0, [r6, #-1547]!	; 0xfffff9f5
    1ba4:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    1ba8:	17052032 	smladxne	r5, r2, r0, r2
    1bac:	06090520 	streq	r0, [r9], -r0, lsr #10
    1bb0:	06130526 	ldreq	r0, [r3], -r6, lsr #10
    1bb4:	06070501 	streq	r0, [r7], -r1, lsl #10
    1bb8:	060c0522 	streq	r0, [ip], -r2, lsr #10
    1bbc:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    1bc0:	03060b05 	movweq	r0, #27397	; 0x6b05
    1bc4:	11053c67 	tstne	r5, r7, ror #24
    1bc8:	0b050106 	bleq	141fe8 <_Min_Heap_Size+0x1417e8>
    1bcc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1bd0:	060b0522 	streq	r0, [fp], -r2, lsr #10
    1bd4:	740a0501 	strvc	r0, [sl], #-1281	; 0xfffffaff
    1bd8:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    1bdc:	01060a05 	tsteq	r6, r5, lsl #20
    1be0:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    1be4:	01061905 	tsteq	r6, r5, lsl #18
    1be8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1bec:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1bf0:	7e053c01 	cdpvc	12, 0, cr3, cr5, cr1, {0}
    1bf4:	02040200 	andeq	r0, r4, #0, 4
    1bf8:	006f0520 	rsbeq	r0, pc, r0, lsr #10
    1bfc:	20020402 	andcs	r0, r2, r2, lsl #8
    1c00:	34060b05 	strcc	r0, [r6], #-2821	; 0xfffff4fb
    1c04:	01062805 	tsteq	r6, r5, lsl #16
    1c08:	05203205 	streq	r3, [r0, #-517]!	; 0xfffffdfb
    1c0c:	17052019 	smladne	r5, r9, r0, r2
    1c10:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1c14:	06140536 			; <UNDEFINED> instruction: 0x06140536
    1c18:	06050501 	streq	r0, [r5], -r1, lsl #10
    1c1c:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1c20:	01053201 	tsteq	r5, r1, lsl #4
    1c24:	030f0522 	movweq	r0, #62754	; 0xf522
    1c28:	02203c41 	eoreq	r3, r0, #16640	; 0x4100
    1c2c:	01010001 	tsteq	r1, r1
    1c30:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1c34:	00000002 	andeq	r0, r0, r2
    1c38:	0a9c0300 	beq	fe702840 <_estack+0xde701608>
    1c3c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1c40:	01060c05 	tsteq	r6, r5, lsl #24
    1c44:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    1c48:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    1c4c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1c50:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1c54:	05052001 	streq	r2, [r5, #-1]
    1c58:	17052506 	strne	r2, [r5, -r6, lsl #10]
    1c5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c60:	17052106 	strne	r2, [r5, -r6, lsl #2]
    1c64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c68:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1c6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c70:	16052206 	strne	r2, [r5], -r6, lsl #4
    1c74:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c78:	13052f06 	movwne	r2, #24326	; 0x5f06
    1c7c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1c80:	06310605 	ldrteq	r0, [r1], -r5, lsl #12
    1c84:	054c0620 	strbeq	r0, [ip, #-1568]	; 0xfffff9e0
    1c88:	2001060c 	andcs	r0, r1, ip, lsl #12
    1c8c:	0e052024 	cdpeq	0, 0, cr2, cr5, cr4, {1}
    1c90:	20206f03 	eorcs	r6, r0, r3, lsl #30
    1c94:	03010520 	movweq	r0, #5408	; 0x1520
    1c98:	01022013 	tsteq	r2, r3, lsl r0
    1c9c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ca0:	02050001 	andeq	r0, r5, #1
    1ca4:	00000000 	andeq	r0, r0, r0
    1ca8:	010ae303 	tsteq	sl, r3, lsl #6
    1cac:	03050106 	movweq	r0, #20742	; 0x5106
    1cb0:	05152106 	ldreq	r2, [r5, #-262]	; 0xfffffefa
    1cb4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1cb8:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    1cbc:	08053e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    1cc0:	19050106 	stmdbne	r5, {r1, r2, r8}
    1cc4:	01040200 	mrseq	r0, R12_usr
    1cc8:	220e052e 	andcs	r0, lr, #192937984	; 0xb800000
    1ccc:	27030105 	strcs	r0, [r3, -r5, lsl #2]
    1cd0:	06050520 	streq	r0, [r5], -r0, lsr #10
    1cd4:	05205c03 	streq	r5, [r0, #-3075]!	; 0xfffff3fd
    1cd8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    1cdc:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1ce0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    1ce4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1ce8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1cec:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    1cf0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1cf4:	052f0605 	streq	r0, [pc, #-1541]!	; 16f7 <_Min_Heap_Size+0xef7>
    1cf8:	20010613 	andcs	r0, r1, r3, lsl r6
    1cfc:	31060505 	tstcc	r6, r5, lsl #10
    1d00:	01060a05 	tsteq	r6, r5, lsl #20
    1d04:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    1d08:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    1d0c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1d10:	05052029 	streq	r2, [r5, #-41]	; 0xffffffd7
    1d14:	0a053106 	beq	14e134 <_Min_Heap_Size+0x14d934>
    1d18:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1d1c:	06050520 	streq	r0, [r5], -r0, lsr #10
    1d20:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    1d24:	20260501 	eorcs	r0, r6, r1, lsl #10
    1d28:	23060505 	movwcs	r0, #25861	; 0x6505
    1d2c:	064d0513 			; <UNDEFINED> instruction: 0x064d0513
    1d30:	20050501 	andcs	r0, r5, r1, lsl #10
    1d34:	003f062e 	eorseq	r0, pc, lr, lsr #12
    1d38:	4e010402 	cdpmi	4, 0, cr0, cr1, cr2, {0}
    1d3c:	01040200 	mrseq	r0, R12_usr
    1d40:	04020001 	streq	r0, [r2], #-1
    1d44:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1d48:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1d4c:	001f0502 	andseq	r0, pc, r2, lsl #10
    1d50:	03010402 	movweq	r0, #5122	; 0x1402
    1d54:	052078d1 	streq	r7, [r0, #-2257]!	; 0xfffff72f
    1d58:	04020005 	streq	r0, [r2], #-5
    1d5c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1d60:	01040200 	mrseq	r0, R12_usr
    1d64:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1d68:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1d6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1d70:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1d74:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1d78:	00050501 	andeq	r0, r5, r1, lsl #10
    1d7c:	03010402 	movweq	r0, #5122	; 0x1402
    1d80:	000107aa 	andeq	r0, r1, sl, lsr #15
    1d84:	06010402 	streq	r0, [r1], -r2, lsl #8
    1d88:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1d8c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1d90:	79840301 	stmibvc	r4, {r0, r8, r9}
    1d94:	00040501 	andeq	r0, r4, r1, lsl #10
    1d98:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1d9c:	01040200 	mrseq	r0, R12_usr
    1da0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1da4:	00200601 	eoreq	r0, r0, r1, lsl #12
    1da8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dac:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1db0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1db4:	00050501 	andeq	r0, r5, r1, lsl #10
    1db8:	03010402 	movweq	r0, #5122	; 0x1402
    1dbc:	050106f7 	streq	r0, [r1, #-1783]	; 0xfffff909
    1dc0:	162e300c 	strtne	r3, [lr], -ip
    1dc4:	030e0520 	movweq	r0, #58656	; 0xe520
    1dc8:	0220205b 	eoreq	r2, r0, #91	; 0x5b
    1dcc:	01010008 	tsteq	r1, r8
    1dd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1dd4:	00000002 	andeq	r0, r0, r2
    1dd8:	0bbc0300 	bleq	fef029e0 <_estack+0xdef017a8>
    1ddc:	13030501 	movwne	r0, #13569	; 0x3501
    1de0:	06100514 			; <UNDEFINED> instruction: 0x06100514
    1de4:	06030501 	streq	r0, [r3], -r1, lsl #10
    1de8:	060d054b 	streq	r0, [sp], -fp, asr #10
    1dec:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    1df0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1df4:	31060204 	tstcc	r6, r4, lsl #4
    1df8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1dfc:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    1e00:	04020010 	streq	r0, [r2], #-16
    1e04:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    1e08:	04020003 	streq	r0, [r2], #-3
    1e0c:	054b0602 	strbeq	r0, [fp, #-1538]	; 0xfffff9fe
    1e10:	0402000d 	streq	r0, [r2], #-13
    1e14:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    1e18:	04020006 	streq	r0, [r2], #-6
    1e1c:	05053c02 	streq	r3, [r5, #-3074]	; 0xfffff3fe
    1e20:	02040200 	andeq	r0, r4, #0, 4
    1e24:	03053506 	movweq	r3, #21766	; 0x5506
    1e28:	02040200 	andeq	r0, r4, #0, 4
    1e2c:	00010515 	andeq	r0, r1, r5, lsl r5
    1e30:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e34:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1e38:	31052002 	tstcc	r5, r2
    1e3c:	01040200 	mrseq	r0, R12_usr
    1e40:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    1e44:	04020005 	streq	r0, [r2], #-5
    1e48:	00310601 	eorseq	r0, r1, r1, lsl #12
    1e4c:	01010402 	tsteq	r1, r2, lsl #8
    1e50:	01040200 	mrseq	r0, R12_usr
    1e54:	04020001 	streq	r0, [r2], #-1
    1e58:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1e5c:	02001f05 	andeq	r1, r0, #5, 30
    1e60:	98030104 	stmdals	r3, {r2, r8}
    1e64:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    1e68:	01040200 	mrseq	r0, R12_usr
    1e6c:	00040514 	andeq	r0, r4, r4, lsl r5
    1e70:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1e74:	01040200 	mrseq	r0, R12_usr
    1e78:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1e7c:	2f060104 	svccs	0x00060104
    1e80:	01040200 	mrseq	r0, R12_usr
    1e84:	01040106 	tsteq	r4, r6, lsl #2
    1e88:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1e8c:	e3030104 	movw	r0, #12548	; 0x3104
    1e90:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    1e94:	2e060104 	adfcss	f0, f6, f4
    1e98:	1f050204 	svcne	0x00050204
    1e9c:	01040200 	mrseq	r0, R12_usr
    1ea0:	0178cb03 	cmneq	r8, r3, lsl #22
    1ea4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1ea8:	00140104 	andseq	r0, r4, r4, lsl #2
    1eac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1eb0:	01040200 	mrseq	r0, R12_usr
    1eb4:	02002006 	andeq	r2, r0, #6
    1eb8:	2f060104 	svccs	0x00060104
    1ebc:	01040200 	mrseq	r0, R12_usr
    1ec0:	01040106 	tsteq	r4, r6, lsl #2
    1ec4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1ec8:	b0030104 	andlt	r0, r3, r4, lsl #2
    1ecc:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    1ed0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1ed4:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    1ed8:	05051601 	streq	r1, [r5, #-1537]	; 0xfffff9ff
    1edc:	01040200 	mrseq	r0, R12_usr
    1ee0:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    1ee4:	00010104 	andeq	r0, r1, r4, lsl #2
    1ee8:	01010402 	tsteq	r1, r2, lsl #8
    1eec:	01040200 	mrseq	r0, R12_usr
    1ef0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1ef4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1ef8:	78910301 	ldmvc	r1, {r0, r8, r9}
    1efc:	00050520 	andeq	r0, r5, r0, lsr #10
    1f00:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1f04:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1f08:	00140104 	andseq	r0, r4, r4, lsl #2
    1f0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1f14:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1f18:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f1c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1f20:	04020005 	streq	r0, [r2], #-5
    1f24:	07ea0301 	strbeq	r0, [sl, r1, lsl #6]!
    1f28:	04020001 	streq	r0, [r2], #-1
    1f2c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1f30:	001f0502 	andseq	r0, pc, r2, lsl #10
    1f34:	03010402 	movweq	r0, #5122	; 0x1402
    1f38:	050178c4 	streq	r7, [r1, #-2244]	; 0xfffff73c
    1f3c:	04020004 	streq	r0, [r2], #-4
    1f40:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1f44:	00140104 	andseq	r0, r4, r4, lsl #2
    1f48:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f4c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1f50:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1f54:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f58:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1f5c:	04020005 	streq	r0, [r2], #-5
    1f60:	07b70301 	ldreq	r0, [r7, r1, lsl #6]!
    1f64:	04020001 	streq	r0, [r2], #-1
    1f68:	02002e01 	andeq	r2, r0, #1, 28
    1f6c:	01060104 	tsteq	r6, r4, lsl #2
    1f70:	01040200 	mrseq	r0, R12_usr
    1f74:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1f78:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1f7c:	00010104 	andeq	r0, r1, r4, lsl #2
    1f80:	01010402 	tsteq	r1, r2, lsl #8
    1f84:	1f050204 	svcne	0x00050204
    1f88:	01040200 	mrseq	r0, R12_usr
    1f8c:	20789003 	rsbscs	r9, r8, r3
    1f90:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1f94:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1f98:	04020004 	streq	r0, [r2], #-4
    1f9c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1fa0:	2e060104 	adfcss	f0, f6, f4
    1fa4:	01040200 	mrseq	r0, R12_usr
    1fa8:	02002f06 	andeq	r2, r0, #6, 30
    1fac:	01060104 	tsteq	r6, r4, lsl #2
    1fb0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1fb4:	01040200 	mrseq	r0, R12_usr
    1fb8:	0107eb03 	tsteq	r7, r3, lsl #22
    1fbc:	01040200 	mrseq	r0, R12_usr
    1fc0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    1fc4:	02001f05 	andeq	r1, r0, #5, 30
    1fc8:	c3030104 	movwgt	r0, #12548	; 0x3104
    1fcc:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    1fd0:	01040200 	mrseq	r0, R12_usr
    1fd4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1fd8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1fdc:	20060104 	andcs	r0, r6, r4, lsl #2
    1fe0:	01040200 	mrseq	r0, R12_usr
    1fe4:	02002f06 	andeq	r2, r0, #6, 30
    1fe8:	01060104 	tsteq	r6, r4, lsl #2
    1fec:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1ff0:	01040200 	mrseq	r0, R12_usr
    1ff4:	0107b803 	tsteq	r7, r3, lsl #16
    1ff8:	01040200 	mrseq	r0, R12_usr
    1ffc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2000:	00010601 	andeq	r0, r1, r1, lsl #12
    2004:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    2008:	01040200 	mrseq	r0, R12_usr
    200c:	04020001 	streq	r0, [r2], #-1
    2010:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2014:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2018:	001f0502 	andseq	r0, pc, r2, lsl #10
    201c:	03010402 	movweq	r0, #5122	; 0x1402
    2020:	0520788d 	streq	r7, [r0, #-2189]!	; 0xfffff773
    2024:	04020005 	streq	r0, [r2], #-5
    2028:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    202c:	01040200 	mrseq	r0, R12_usr
    2030:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2034:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2038:	06010402 	streq	r0, [r1], -r2, lsl #8
    203c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2040:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2044:	00050501 	andeq	r0, r5, r1, lsl #10
    2048:	03010402 	movweq	r0, #5122	; 0x1402
    204c:	000107ee 	andeq	r0, r1, lr, ror #15
    2050:	06010402 	streq	r0, [r1], -r2, lsl #8
    2054:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2058:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    205c:	78c00301 	stmiavc	r0, {r0, r8, r9}^
    2060:	00040501 	andeq	r0, r4, r1, lsl #10
    2064:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2068:	01040200 	mrseq	r0, R12_usr
    206c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2070:	00200601 	eoreq	r0, r0, r1, lsl #12
    2074:	06010402 	streq	r0, [r1], -r2, lsl #8
    2078:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    207c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2080:	00050501 	andeq	r0, r5, r1, lsl #10
    2084:	03010402 	movweq	r0, #5122	; 0x1402
    2088:	020107bb 	andeq	r0, r1, #49020928	; 0x2ec0000
    208c:	01010003 	tsteq	r1, r3
    2090:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2094:	00000002 	andeq	r0, r0, r2
    2098:	0bdb0300 	bleq	ff6c2ca0 <_estack+0xdf6c1a68>
    209c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    20a0:	01060c05 	tsteq	r6, r5, lsl #24
    20a4:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    20a8:	04020005 	streq	r0, [r2], #-5
    20ac:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    20b0:	04020003 	streq	r0, [r2], #-3
    20b4:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    20b8:	02040200 	andeq	r0, r4, #0, 4
    20bc:	06050106 	streq	r0, [r5], -r6, lsl #2
    20c0:	02040200 	andeq	r0, r4, #0, 4
    20c4:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    20c8:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    20cc:	01051503 	tsteq	r5, r3, lsl #10
    20d0:	05201306 	streq	r1, [r0, #-774]!	; 0xfffffcfa
    20d4:	04020005 	streq	r0, [r2], #-5
    20d8:	6c030601 	stcvs	6, cr0, [r3], {1}
    20dc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    20e0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    20e4:	00010104 	andeq	r0, r1, r4, lsl #2
    20e8:	01010402 	tsteq	r1, r2, lsl #8
    20ec:	1f050204 	svcne	0x00050204
    20f0:	01040200 	mrseq	r0, R12_usr
    20f4:	2077fb03 	rsbscs	pc, r7, r3, lsl #22
    20f8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    20fc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2100:	04020004 	streq	r0, [r2], #-4
    2104:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2108:	2e060104 	adfcss	f0, f6, f4
    210c:	01040200 	mrseq	r0, R12_usr
    2110:	02002f06 	andeq	r2, r0, #6, 30
    2114:	01060104 	tsteq	r6, r4, lsl #2
    2118:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    211c:	01040200 	mrseq	r0, R12_usr
    2120:	01088003 	tsteq	r8, r3
    2124:	01040200 	mrseq	r0, R12_usr
    2128:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    212c:	02001f05 	andeq	r1, r0, #5, 30
    2130:	ae030104 	adfges	f0, f3, f4
    2134:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    2138:	01040200 	mrseq	r0, R12_usr
    213c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2140:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2144:	20060104 	andcs	r0, r6, r4, lsl #2
    2148:	01040200 	mrseq	r0, R12_usr
    214c:	02002f06 	andeq	r2, r0, #6, 30
    2150:	01060104 	tsteq	r6, r4, lsl #2
    2154:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2158:	01040200 	mrseq	r0, R12_usr
    215c:	0107cd03 	tsteq	r7, r3, lsl #26
    2160:	01040200 	mrseq	r0, R12_usr
    2164:	0d01053c 	cfstr32eq	mvfx0, [r1, #-240]	; 0xffffff10
    2168:	03060505 	movweq	r0, #25861	; 0x6505
    216c:	2e01200b 	cdpcs	0, 0, cr2, cr1, cr11, {0}
    2170:	15202e3c 	strne	r2, [r0, #-3644]!	; 0xfffff1c4
    2174:	01061405 	tsteq	r6, r5, lsl #8
    2178:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    217c:	04020007 	streq	r0, [r2], #-7
    2180:	00220601 	eoreq	r0, r2, r1, lsl #12
    2184:	01010402 	tsteq	r1, r2, lsl #8
    2188:	01040200 	mrseq	r0, R12_usr
    218c:	04020001 	streq	r0, [r2], #-1
    2190:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2194:	02001f05 	andeq	r1, r0, #5, 30
    2198:	f0030104 			; <UNDEFINED> instruction: 0xf0030104
    219c:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    21a0:	01040200 	mrseq	r0, R12_usr
    21a4:	00040514 	andeq	r0, r4, r4, lsl r5
    21a8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    21ac:	01040200 	mrseq	r0, R12_usr
    21b0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    21b4:	2f060104 	svccs	0x00060104
    21b8:	01040200 	mrseq	r0, R12_usr
    21bc:	01040106 	tsteq	r4, r6, lsl #2
    21c0:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    21c4:	8b030104 	blhi	c25dc <_Min_Heap_Size+0xc1ddc>
    21c8:	02000108 	andeq	r0, r0, #8, 2
    21cc:	2e060104 	adfcss	f0, f6, f4
    21d0:	1f050204 	svcne	0x00050204
    21d4:	01040200 	mrseq	r0, R12_usr
    21d8:	0178a303 	cmneq	r8, r3, lsl #6
    21dc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    21e0:	00140104 	andseq	r0, r4, r4, lsl #2
    21e4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    21e8:	01040200 	mrseq	r0, R12_usr
    21ec:	02002006 	andeq	r2, r0, #6
    21f0:	2f060104 	svccs	0x00060104
    21f4:	01040200 	mrseq	r0, R12_usr
    21f8:	01040106 	tsteq	r4, r6, lsl #2
    21fc:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    2200:	d8030104 	stmdale	r3, {r2, r8}
    2204:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2208:	002e0104 	eoreq	r0, lr, r4, lsl #2
    220c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2210:	00050501 	andeq	r0, r5, r1, lsl #10
    2214:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2218:	01040200 	mrseq	r0, R12_usr
    221c:	04020001 	streq	r0, [r2], #-1
    2220:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2224:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2228:	001f0502 	andseq	r0, pc, r2, lsl #10
    222c:	03010402 	movweq	r0, #5122	; 0x1402
    2230:	052077ee 	streq	r7, [r0, #-2030]!	; 0xfffff812
    2234:	04020005 	streq	r0, [r2], #-5
    2238:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    223c:	01040200 	mrseq	r0, R12_usr
    2240:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2244:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2248:	06010402 	streq	r0, [r1], -r2, lsl #8
    224c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2250:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2254:	00050501 	andeq	r0, r5, r1, lsl #10
    2258:	03010402 	movweq	r0, #5122	; 0x1402
    225c:	0001088d 	andeq	r0, r1, sp, lsl #17
    2260:	06010402 	streq	r0, [r1], -r2, lsl #8
    2264:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2268:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    226c:	78a10301 	stmiavc	r1!, {r0, r8, r9}
    2270:	00040501 	andeq	r0, r4, r1, lsl #10
    2274:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2278:	01040200 	mrseq	r0, R12_usr
    227c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2280:	00200601 	eoreq	r0, r0, r1, lsl #12
    2284:	06010402 	streq	r0, [r1], -r2, lsl #8
    2288:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    228c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2290:	00050501 	andeq	r0, r5, r1, lsl #10
    2294:	03010402 	movweq	r0, #5122	; 0x1402
    2298:	000107da 	ldrdeq	r0, [r1], -sl
    229c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    22a0:	01040200 	mrseq	r0, R12_usr
    22a4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    22a8:	00150104 	andseq	r0, r5, r4, lsl #2
    22ac:	01010402 	tsteq	r1, r2, lsl #8
    22b0:	01040200 	mrseq	r0, R12_usr
    22b4:	04020001 	streq	r0, [r2], #-1
    22b8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    22bc:	02001f05 	andeq	r1, r0, #5, 30
    22c0:	eb030104 	bl	c26d8 <_Min_Heap_Size+0xc1ed8>
    22c4:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    22c8:	01040200 	mrseq	r0, R12_usr
    22cc:	00040514 	andeq	r0, r4, r4, lsl r5
    22d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    22d4:	01040200 	mrseq	r0, R12_usr
    22d8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    22dc:	2f060104 	svccs	0x00060104
    22e0:	01040200 	mrseq	r0, R12_usr
    22e4:	01040106 	tsteq	r4, r6, lsl #2
    22e8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    22ec:	90030104 	andls	r0, r3, r4, lsl #2
    22f0:	02000108 	andeq	r0, r0, #8, 2
    22f4:	2e060104 	adfcss	f0, f6, f4
    22f8:	1f050204 	svcne	0x00050204
    22fc:	01040200 	mrseq	r0, R12_usr
    2300:	01789e03 	cmneq	r8, r3, lsl #28
    2304:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2308:	00140104 	andseq	r0, r4, r4, lsl #2
    230c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2310:	01040200 	mrseq	r0, R12_usr
    2314:	02002006 	andeq	r2, r0, #6
    2318:	2f060104 	svccs	0x00060104
    231c:	01040200 	mrseq	r0, R12_usr
    2320:	01040106 	tsteq	r4, r6, lsl #2
    2324:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2328:	dd030104 	stfles	f0, [r3, #-16]
    232c:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2330:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2334:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2338:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    233c:	04020001 	streq	r0, [r2], #-1
    2340:	00130602 	andseq	r0, r3, r2, lsl #12
    2344:	20020402 	andcs	r0, r2, r2, lsl #8
    2348:	01000202 	tsteq	r0, r2, lsl #4
    234c:	00010501 	andeq	r0, r1, r1, lsl #10
    2350:	00000205 	andeq	r0, r0, r5, lsl #4
    2354:	fd030000 	stc2	0, cr0, [r3, #-0]
    2358:	0106010b 	tsteq	r6, fp, lsl #2
    235c:	2f060305 	svccs	0x00060305
    2360:	0610051a 			; <UNDEFINED> instruction: 0x0610051a
    2364:	06030501 	streq	r0, [r3], -r1, lsl #10
    2368:	060d052f 	streq	r0, [sp], -pc, lsr #10
    236c:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    2370:	03060305 	movweq	r0, #25349	; 0x6305
    2374:	10052e0d 	andne	r2, r5, sp, lsl #28
    2378:	03050106 	movweq	r0, #20742	; 0x5106
    237c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    2380:	06050106 	streq	r0, [r5], -r6, lsl #2
    2384:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    2388:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    238c:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    2390:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    2394:	65030104 	strvs	r0, [r3, #-260]	; 0xfffffefc
    2398:	0005052e 	andeq	r0, r5, lr, lsr #10
    239c:	06010402 	streq	r0, [r1], -r2, lsl #8
    23a0:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    23a4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    23a8:	00010104 	andeq	r0, r1, r4, lsl #2
    23ac:	01010402 	tsteq	r1, r2, lsl #8
    23b0:	1f050204 	svcne	0x00050204
    23b4:	01040200 	mrseq	r0, R12_usr
    23b8:	2077d203 	rsbscs	sp, r7, r3, lsl #4
    23bc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    23c0:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    23c4:	04020004 	streq	r0, [r2], #-4
    23c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    23cc:	2e060104 	adfcss	f0, f6, f4
    23d0:	01040200 	mrseq	r0, R12_usr
    23d4:	02002f06 	andeq	r2, r0, #6, 30
    23d8:	01060104 	tsteq	r6, r4, lsl #2
    23dc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    23e0:	01040200 	mrseq	r0, R12_usr
    23e4:	0108a903 	tsteq	r8, r3, lsl #18
    23e8:	01040200 	mrseq	r0, R12_usr
    23ec:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    23f0:	02001f05 	andeq	r1, r0, #5, 30
    23f4:	85030104 	strhi	r0, [r3, #-260]	; 0xfffffefc
    23f8:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    23fc:	01040200 	mrseq	r0, R12_usr
    2400:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2404:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2408:	20060104 	andcs	r0, r6, r4, lsl #2
    240c:	01040200 	mrseq	r0, R12_usr
    2410:	02002f06 	andeq	r2, r0, #6, 30
    2414:	01060104 	tsteq	r6, r4, lsl #2
    2418:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    241c:	01040200 	mrseq	r0, R12_usr
    2420:	0107f603 	tsteq	r7, r3, lsl #12	; <UNPREDICTABLE>
    2424:	02040200 	andeq	r0, r4, #0, 4
    2428:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    242c:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    2430:	0402000e 	streq	r0, [r2], #-14
    2434:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2438:	04020008 	streq	r0, [r2], #-8
    243c:	07052002 	streq	r2, [r5, -r2]
    2440:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    2444:	00320530 	eorseq	r0, r2, r0, lsr r5
    2448:	06010402 	streq	r0, [r1], -r2, lsl #8
    244c:	0005054f 	andeq	r0, r5, pc, asr #10
    2450:	06010402 	streq	r0, [r1], -r2, lsl #8
    2454:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    2458:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    245c:	00010104 	andeq	r0, r1, r4, lsl #2
    2460:	01010402 	tsteq	r1, r2, lsl #8
    2464:	1f050204 	svcne	0x00050204
    2468:	01040200 	mrseq	r0, R12_usr
    246c:	2077c403 	rsbscs	ip, r7, r3, lsl #8
    2470:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2474:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2478:	04020004 	streq	r0, [r2], #-4
    247c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2480:	2e060104 	adfcss	f0, f6, f4
    2484:	01040200 	mrseq	r0, R12_usr
    2488:	02002f06 	andeq	r2, r0, #6, 30
    248c:	01060104 	tsteq	r6, r4, lsl #2
    2490:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2494:	01040200 	mrseq	r0, R12_usr
    2498:	0108b703 	tsteq	r8, r3, lsl #14
    249c:	01040200 	mrseq	r0, R12_usr
    24a0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    24a4:	02001f05 	andeq	r1, r0, #5, 30
    24a8:	f7030104 			; <UNDEFINED> instruction: 0xf7030104
    24ac:	04050177 	streq	r0, [r5], #-375	; 0xfffffe89
    24b0:	01040200 	mrseq	r0, R12_usr
    24b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    24b8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    24bc:	20060104 	andcs	r0, r6, r4, lsl #2
    24c0:	01040200 	mrseq	r0, R12_usr
    24c4:	02002f06 	andeq	r2, r0, #6, 30
    24c8:	01060104 	tsteq	r6, r4, lsl #2
    24cc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    24d0:	01040200 	mrseq	r0, R12_usr
    24d4:	01088403 	tsteq	r8, r3, lsl #8
    24d8:	02040200 	andeq	r0, r4, #0, 4
    24dc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    24e0:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    24e4:	0402000e 	streq	r0, [r2], #-14
    24e8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    24ec:	04020008 	streq	r0, [r2], #-8
    24f0:	07052002 	streq	r2, [r5, -r2]
    24f4:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    24f8:	00040230 	andeq	r0, r4, r0, lsr r2
    24fc:	01050101 	tsteq	r5, r1, lsl #2
    2500:	00020500 	andeq	r0, r2, r0, lsl #10
    2504:	03000000 	movweq	r0, #0
    2508:	06010cb5 			; <UNDEFINED> instruction: 0x06010cb5
    250c:	06030501 	streq	r0, [r3], -r1, lsl #10
    2510:	15131359 	ldrne	r1, [r3, #-857]	; 0xfffffca7
    2514:	01060c05 	tsteq	r6, r5, lsl #24
    2518:	2006052e 	andcs	r0, r6, lr, lsr #10
    251c:	5a060505 	bpl	183938 <_Min_Heap_Size+0x183138>
    2520:	01060805 	tsteq	r6, r5, lsl #16
    2524:	02001905 	andeq	r1, r0, #81920	; 0x14000
    2528:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    252c:	0520220f 	streq	r2, [r0, #-527]!	; 0xfffffdf1
    2530:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2534:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2538:	052f0605 	streq	r0, [pc, #-1541]!	; 1f3b <_Min_Heap_Size+0x173b>
    253c:	20010614 	andcs	r0, r1, r4, lsl r6
    2540:	2f060505 	svccs	0x00060505
    2544:	01061a05 	tsteq	r6, r5, lsl #20
    2548:	2f060505 	svccs	0x00060505
    254c:	01061805 	tsteq	r6, r5, lsl #16
    2550:	23060505 	movwcs	r0, #25861	; 0x6505
    2554:	01061105 	tsteq	r6, r5, lsl #2
    2558:	0605052e 	streq	r0, [r5], -lr, lsr #10
    255c:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    2560:	06050501 	streq	r0, [r5], -r1, lsl #10
    2564:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    2568:	06050501 	streq	r0, [r5], -r1, lsl #10
    256c:	06150531 			; <UNDEFINED> instruction: 0x06150531
    2570:	20080501 	andcs	r0, r8, r1, lsl #10
    2574:	05441305 	strbeq	r1, [r4, #-773]	; 0xfffffcfb
    2578:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
    257c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2580:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    2584:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2588:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    258c:	20710301 	rsbscs	r0, r1, r1, lsl #6
    2590:	02003805 	andeq	r3, r0, #327680	; 0x50000
    2594:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    2598:	1f372813 	svcne	0x00372813
    259c:	060b0520 	streq	r0, [fp], -r0, lsr #10
    25a0:	05201903 	streq	r1, [r0, #-2307]!	; 0xfffff6fd
    25a4:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    25a8:	052f060b 	streq	r0, [pc, #-1547]!	; 1fa5 <_Min_Heap_Size+0x17a5>
    25ac:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    25b0:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    25b4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    25b8:	0903060b 	stmdbeq	r3, {r0, r1, r3, r9, sl}
    25bc:	0634052e 	ldrteq	r0, [r4], -lr, lsr #10
    25c0:	201a0501 	andscs	r0, sl, r1, lsl #10
    25c4:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    25c8:	062f060b 	strteq	r0, [pc], -fp, lsl #12
    25cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    25d0:	06340526 	ldrteq	r0, [r4], -r6, lsr #10
    25d4:	20190501 	andscs	r0, r9, r1, lsl #10
    25d8:	27060b05 	strcs	r0, [r6, -r5, lsl #22]
    25dc:	01061505 	tsteq	r6, r5, lsl #10
    25e0:	23060905 	movwcs	r0, #26885	; 0x6905
    25e4:	01061005 	tsteq	r6, r5
    25e8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    25ec:	01060e05 	tsteq	r6, r5, lsl #28
    25f0:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    25f4:	05400607 	strbeq	r0, [r0, #-1543]	; 0xfffff9f9
    25f8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    25fc:	5203060b 	andpl	r0, r3, #11534336	; 0xb00000
    2600:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    2604:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    2608:	31060705 	tstcc	r6, r5, lsl #14
    260c:	01060b05 	tsteq	r6, r5, lsl #22
    2610:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2614:	013f0609 	teqeq	pc, r9, lsl #12
    2618:	202e2e2e 	eorcs	r2, lr, lr, lsr #28
    261c:	060d0516 			; <UNDEFINED> instruction: 0x060d0516
    2620:	200c0501 	andcs	r0, ip, r1, lsl #10
    2624:	03060705 	movweq	r0, #26373	; 0x6705
    2628:	0b052e0a 	bleq	14de58 <_Min_Heap_Size+0x14d658>
    262c:	0a050106 	beq	142a4c <_Min_Heap_Size+0x14224c>
    2630:	06090520 	streq	r0, [r9], -r0, lsr #10
    2634:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    2638:	060b0501 	streq	r0, [fp], -r1, lsl #10
    263c:	061b0535 			; <UNDEFINED> instruction: 0x061b0535
    2640:	200e0501 	andcs	r0, lr, r1, lsl #10
    2644:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    2648:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    264c:	02000180 	andeq	r0, r0, #128, 2
    2650:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2654:	04020071 	streq	r0, [r2], #-113	; 0xffffff8f
    2658:	0d052002 	stceq	0, cr2, [r5, #-8]
    265c:	34053406 	strcc	r3, [r5], #-1030	; 0xfffffbfa
    2660:	1b050106 	blne	142a80 <_Min_Heap_Size+0x142280>
    2664:	2e190520 	cfmul64cs	mvdx0, mvdx9, mvdx0
    2668:	03060905 	movweq	r0, #26885	; 0x6905
    266c:	0f052e0d 	svceq	0x00052e0d
    2670:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    2674:	2e0c052e 	cfsh32cs	mvfx0, mvfx12, #30
    2678:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    267c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    2680:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    2684:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2688:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    268c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2690:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    2694:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    2698:	20052027 	andcs	r2, r5, r7, lsr #32
    269c:	200c052e 	andcs	r0, ip, lr, lsr #10
    26a0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    26a4:	01061405 	tsteq	r6, r5, lsl #8
    26a8:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    26ac:	01060c05 	tsteq	r6, r5, lsl #24
    26b0:	22010532 	andcs	r0, r1, #209715200	; 0xc800000
    26b4:	9e030f05 	cdpls	15, 0, cr0, cr3, cr5, {0}
    26b8:	02203c7f 	eoreq	r3, r0, #32512	; 0x7f00
    26bc:	01010001 	tsteq	r1, r1
    26c0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    26c4:	00000002 	andeq	r0, r0, r2
    26c8:	0eb10300 	cdpeq	3, 11, cr0, cr1, cr0, {0}
    26cc:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    26d0:	01060f05 	tsteq	r6, r5, lsl #30
    26d4:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    26d8:	01010001 	tsteq	r1, r1
    26dc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    26e0:	00000002 	andeq	r0, r0, r2
    26e4:	0ec30300 	cdpeq	3, 12, cr0, cr3, cr0, {0}
    26e8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    26ec:	04020003 	streq	r0, [r2], #-3
    26f0:	00300601 	eorseq	r0, r0, r1, lsl #12
    26f4:	01010402 	tsteq	r1, r2, lsl #8
    26f8:	01040200 	mrseq	r0, R12_usr
    26fc:	04020001 	streq	r0, [r2], #-1
    2700:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2704:	02001f05 	andeq	r1, r0, #5, 30
    2708:	96030104 	strls	r0, [r3], -r4, lsl #2
    270c:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    2710:	01040200 	mrseq	r0, R12_usr
    2714:	00040514 	andeq	r0, r4, r4, lsl r5
    2718:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    271c:	01040200 	mrseq	r0, R12_usr
    2720:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2724:	2f060104 	svccs	0x00060104
    2728:	01040200 	mrseq	r0, R12_usr
    272c:	01040106 	tsteq	r4, r6, lsl #2
    2730:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2734:	e5030104 	str	r0, [r3, #-260]	; 0xfffffefc
    2738:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    273c:	2e060104 	adfcss	f0, f6, f4
    2740:	1f050204 	svcne	0x00050204
    2744:	01040200 	mrseq	r0, R12_usr
    2748:	0175c903 	cmneq	r5, r3, lsl #18
    274c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2750:	00140104 	andseq	r0, r4, r4, lsl #2
    2754:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2758:	01040200 	mrseq	r0, R12_usr
    275c:	02002006 	andeq	r2, r0, #6
    2760:	2f060104 	svccs	0x00060104
    2764:	01040200 	mrseq	r0, R12_usr
    2768:	01040106 	tsteq	r4, r6, lsl #2
    276c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2770:	b2030104 	andlt	r0, r3, #4, 2
    2774:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2778:	002e0104 	eoreq	r0, lr, r4, lsl #2
    277c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2780:	04020001 	streq	r0, [r2], #-1
    2784:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    2788:	00010104 	andeq	r0, r1, r4, lsl #2
    278c:	01010402 	tsteq	r1, r2, lsl #8
    2790:	01040200 	mrseq	r0, R12_usr
    2794:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2798:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    279c:	75950301 	ldrvc	r0, [r5, #769]	; 0x301
    27a0:	00050520 	andeq	r0, r5, r0, lsr #10
    27a4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    27a8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    27ac:	00140104 	andseq	r0, r4, r4, lsl #2
    27b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    27b4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    27b8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    27bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    27c0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    27c4:	04020003 	streq	r0, [r2], #-3
    27c8:	0ae60301 	beq	ff9833d4 <_estack+0xdf98219c>
    27cc:	04020001 	streq	r0, [r2], #-1
    27d0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    27d4:	001f0502 	andseq	r0, pc, r2, lsl #10
    27d8:	03010402 	movweq	r0, #5122	; 0x1402
    27dc:	050175c8 	streq	r7, [r1, #-1480]	; 0xfffffa38
    27e0:	04020004 	streq	r0, [r2], #-4
    27e4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    27e8:	00140104 	andseq	r0, r4, r4, lsl #2
    27ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    27f0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    27f4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    27f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    27fc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2800:	04020003 	streq	r0, [r2], #-3
    2804:	0ab30301 	beq	fecc3410 <_estack+0xdecc21d8>
    2808:	04020001 	streq	r0, [r2], #-1
    280c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2810:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2814:	02000c05 	andeq	r0, r0, #1280	; 0x500
    2818:	01060204 	tsteq	r6, r4, lsl #4
    281c:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2820:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2824:	04020005 	streq	r0, [r2], #-5
    2828:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    282c:	04020003 	streq	r0, [r2], #-3
    2830:	07051602 	streq	r1, [r5, -r2, lsl #12]
    2834:	02040200 	andeq	r0, r4, #0, 4
    2838:	06050106 	streq	r0, [r5], -r6, lsl #2
    283c:	02040200 	andeq	r0, r4, #0, 4
    2840:	0005052e 	andeq	r0, r5, lr, lsr #10
    2844:	06010402 	streq	r0, [r1], -r2, lsl #8
    2848:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    284c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2850:	00010104 	andeq	r0, r1, r4, lsl #2
    2854:	01010402 	tsteq	r1, r2, lsl #8
    2858:	1f050204 	svcne	0x00050204
    285c:	01040200 	mrseq	r0, R12_usr
    2860:	20758a03 	rsbscs	r8, r5, r3, lsl #20
    2864:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2868:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    286c:	04020004 	streq	r0, [r2], #-4
    2870:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2874:	2e060104 	adfcss	f0, f6, f4
    2878:	01040200 	mrseq	r0, R12_usr
    287c:	02002f06 	andeq	r2, r0, #6, 30
    2880:	01060104 	tsteq	r6, r4, lsl #2
    2884:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2888:	01040200 	mrseq	r0, R12_usr
    288c:	010af103 	tsteq	sl, r3, lsl #2	; <UNPREDICTABLE>
    2890:	01040200 	mrseq	r0, R12_usr
    2894:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2898:	02001f05 	andeq	r1, r0, #5, 30
    289c:	bd030104 	stflts	f0, [r3, #-16]
    28a0:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    28a4:	01040200 	mrseq	r0, R12_usr
    28a8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    28ac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    28b0:	20060104 	andcs	r0, r6, r4, lsl #2
    28b4:	01040200 	mrseq	r0, R12_usr
    28b8:	02002f06 	andeq	r2, r0, #6, 30
    28bc:	01060104 	tsteq	r6, r4, lsl #2
    28c0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    28c4:	01040200 	mrseq	r0, R12_usr
    28c8:	010abe03 	tsteq	sl, r3, lsl #28
    28cc:	02040200 	andeq	r0, r4, #0, 4
    28d0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    28d4:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    28d8:	0402000e 	streq	r0, [r2], #-14
    28dc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    28e0:	04020008 	streq	r0, [r2], #-8
    28e4:	07052002 	streq	r2, [r5, -r2]
    28e8:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    28ec:	07050106 	streq	r0, [r5, -r6, lsl #2]
    28f0:	0b053006 	bleq	14e910 <_Min_Heap_Size+0x14e110>
    28f4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    28f8:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    28fc:	200e0306 	andcs	r0, lr, r6, lsl #6
    2900:	01060705 	tsteq	r6, r5, lsl #14
    2904:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    2908:	04020005 	streq	r0, [r2], #-5
    290c:	003e0601 	eorseq	r0, lr, r1, lsl #12
    2910:	01010402 	tsteq	r1, r2, lsl #8
    2914:	01040200 	mrseq	r0, R12_usr
    2918:	04020001 	streq	r0, [r2], #-1
    291c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2920:	02001f05 	andeq	r1, r0, #5, 30
    2924:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    2928:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    292c:	01040200 	mrseq	r0, R12_usr
    2930:	00040514 	andeq	r0, r4, r4, lsl r5
    2934:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2938:	01040200 	mrseq	r0, R12_usr
    293c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2940:	2f060104 	svccs	0x00060104
    2944:	01040200 	mrseq	r0, R12_usr
    2948:	01040106 	tsteq	r4, r6, lsl #2
    294c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2950:	8a030104 	bhi	c2d68 <_Min_Heap_Size+0xc2568>
    2954:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2958:	2e060104 	adfcss	f0, f6, f4
    295c:	1f050204 	svcne	0x00050204
    2960:	01040200 	mrseq	r0, R12_usr
    2964:	0175a403 	cmneq	r5, r3, lsl #8
    2968:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    296c:	00140104 	andseq	r0, r4, r4, lsl #2
    2970:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2974:	01040200 	mrseq	r0, R12_usr
    2978:	02002006 	andeq	r2, r0, #6
    297c:	2f060104 	svccs	0x00060104
    2980:	01040200 	mrseq	r0, R12_usr
    2984:	01040106 	tsteq	r4, r6, lsl #2
    2988:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    298c:	d7030104 	strle	r0, [r3, -r4, lsl #2]
    2990:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2994:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2998:	02040200 	andeq	r0, r4, #0, 4
    299c:	000e0515 	andeq	r0, lr, r5, lsl r5
    29a0:	06020402 	streq	r0, [r2], -r2, lsl #8
    29a4:	00080501 	andeq	r0, r8, r1, lsl #10
    29a8:	20020402 	andcs	r0, r2, r2, lsl #8
    29ac:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    29b0:	01062805 	tsteq	r6, r5, lsl #16
    29b4:	30060705 	andcc	r0, r6, r5, lsl #14
    29b8:	01060b05 	tsteq	r6, r5, lsl #22
    29bc:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
    29c0:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    29c4:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    29c8:	06030501 	streq	r0, [r3], -r1, lsl #10
    29cc:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    29d0:	06030501 	streq	r0, [r3], -r1, lsl #10
    29d4:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    29d8:	06030501 	streq	r0, [r3], -r1, lsl #10
    29dc:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    29e0:	06030501 	streq	r0, [r3], -r1, lsl #10
    29e4:	0611053d 			; <UNDEFINED> instruction: 0x0611053d
    29e8:	06030501 	streq	r0, [r3], -r1, lsl #10
    29ec:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    29f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    29f4:	06010522 	streq	r0, [r1], -r2, lsr #10
    29f8:	00050513 	andeq	r0, r5, r3, lsl r5
    29fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a00:	207fbe03 	rsbscs	fp, pc, r3, lsl #28
    2a04:	01040200 	mrseq	r0, R12_usr
    2a08:	04020001 	streq	r0, [r2], #-1
    2a0c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2a10:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2a14:	001f0502 	andseq	r0, pc, r2, lsl #10
    2a18:	03010402 	movweq	r0, #5122	; 0x1402
    2a1c:	05207590 	streq	r7, [r0, #-1424]!	; 0xfffffa70
    2a20:	04020005 	streq	r0, [r2], #-5
    2a24:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2a28:	01040200 	mrseq	r0, R12_usr
    2a2c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2a30:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2a34:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a38:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2a3c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2a40:	00050501 	andeq	r0, r5, r1, lsl #10
    2a44:	03010402 	movweq	r0, #5122	; 0x1402
    2a48:	00010aeb 	andeq	r0, r1, fp, ror #21
    2a4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a50:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2a54:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2a58:	75c30301 	strbvc	r0, [r3, #769]	; 0x301
    2a5c:	00040501 	andeq	r0, r4, r1, lsl #10
    2a60:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2a64:	01040200 	mrseq	r0, R12_usr
    2a68:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2a6c:	00200601 	eoreq	r0, r0, r1, lsl #12
    2a70:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a74:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2a78:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2a7c:	00050501 	andeq	r0, r5, r1, lsl #10
    2a80:	03010402 	movweq	r0, #5122	; 0x1402
    2a84:	00010ab8 			; <UNDEFINED> instruction: 0x00010ab8
    2a88:	3c010402 	cfstrscc	mvf0, [r1], {2}
    2a8c:	03060905 	movweq	r0, #26885	; 0x6905
    2a90:	0d050111 	stfeqs	f0, [r5, #-68]	; 0xffffffbc
    2a94:	0c050106 	stfeqs	f0, [r5], {6}
    2a98:	060b053c 			; <UNDEFINED> instruction: 0x060b053c
    2a9c:	061c0531 			; <UNDEFINED> instruction: 0x061c0531
    2aa0:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2aa4:	06120530 			; <UNDEFINED> instruction: 0x06120530
    2aa8:	06090501 	streq	r0, [r9], -r1, lsl #10
    2aac:	052e1403 	streq	r1, [lr, #-1027]!	; 0xfffffbfd
    2ab0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2ab4:	0b053c0c 	bleq	151aec <_Min_Heap_Size+0x1512ec>
    2ab8:	1c053106 	stfnes	f3, [r5], {6}
    2abc:	0b050106 	bleq	142edc <_Min_Heap_Size+0x1426dc>
    2ac0:	12053006 	andne	r3, r5, #6
    2ac4:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2ac8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2acc:	02050001 	andeq	r0, r5, #1
    2ad0:	00000000 	andeq	r0, r0, r0
    2ad4:	010f9c03 	tsteq	pc, r3, lsl #24
    2ad8:	03050106 	movweq	r0, #20742	; 0x5106
    2adc:	01040200 	mrseq	r0, R12_usr
    2ae0:	02003006 	andeq	r3, r0, #6
    2ae4:	00010104 	andeq	r0, r1, r4, lsl #2
    2ae8:	01010402 	tsteq	r1, r2, lsl #8
    2aec:	01040200 	mrseq	r0, R12_usr
    2af0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2af4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2af8:	74bd0301 	ldrtvc	r0, [sp], #769	; 0x301
    2afc:	00050520 	andeq	r0, r5, r0, lsr #10
    2b00:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2b04:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2b08:	00140104 	andseq	r0, r4, r4, lsl #2
    2b0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2b14:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2b18:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b1c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2b20:	04020003 	streq	r0, [r2], #-3
    2b24:	0bbe0301 	bleq	fef83730 <_estack+0xdef824f8>
    2b28:	04020001 	streq	r0, [r2], #-1
    2b2c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2b30:	001f0502 	andseq	r0, pc, r2, lsl #10
    2b34:	03010402 	movweq	r0, #5122	; 0x1402
    2b38:	050174f0 	streq	r7, [r1, #-1264]	; 0xfffffb10
    2b3c:	04020004 	streq	r0, [r2], #-4
    2b40:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2b44:	00140104 	andseq	r0, r4, r4, lsl #2
    2b48:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b4c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2b50:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2b54:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b58:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2b5c:	04020003 	streq	r0, [r2], #-3
    2b60:	0b8b0301 	bleq	fe2c376c <_estack+0xde2c2534>
    2b64:	04020001 	streq	r0, [r2], #-1
    2b68:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2b6c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2b70:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    2b74:	01060204 	tsteq	r6, r4, lsl #4
    2b78:	02040200 	andeq	r0, r4, #0, 4
    2b7c:	00060520 	andeq	r0, r6, r0, lsr #10
    2b80:	20020402 	andcs	r0, r2, r2, lsl #8
    2b84:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2b88:	3e060104 	adfccs	f0, f6, f4
    2b8c:	01040200 	mrseq	r0, R12_usr
    2b90:	04020001 	streq	r0, [r2], #-1
    2b94:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2b98:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2b9c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2ba0:	03010402 	movweq	r0, #5122	; 0x1402
    2ba4:	052074b8 	streq	r7, [r0, #-1208]!	; 0xfffffb48
    2ba8:	04020005 	streq	r0, [r2], #-5
    2bac:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2bb0:	01040200 	mrseq	r0, R12_usr
    2bb4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2bb8:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2bbc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2bc0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2bc4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2bc8:	00050501 	andeq	r0, r5, r1, lsl #10
    2bcc:	03010402 	movweq	r0, #5122	; 0x1402
    2bd0:	00010bc3 	andeq	r0, r1, r3, asr #23
    2bd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2bd8:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2bdc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2be0:	74eb0301 	strbtvc	r0, [fp], #769	; 0x301
    2be4:	00040501 	andeq	r0, r4, r1, lsl #10
    2be8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2bec:	01040200 	mrseq	r0, R12_usr
    2bf0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2bf4:	00200601 	eoreq	r0, r0, r1, lsl #12
    2bf8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2bfc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2c00:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2c04:	00050501 	andeq	r0, r5, r1, lsl #10
    2c08:	03010402 	movweq	r0, #5122	; 0x1402
    2c0c:	00010b90 	muleq	r1, r0, fp
    2c10:	06020402 	streq	r0, [r2], -r2, lsl #8
    2c14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2c18:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2c1c:	02040200 	andeq	r0, r4, #0, 4
    2c20:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2c24:	02040200 	andeq	r0, r4, #0, 4
    2c28:	06070520 	streq	r0, [r7], -r0, lsr #10
    2c2c:	06280524 	strteq	r0, [r8], -r4, lsr #10
    2c30:	06070501 	streq	r0, [r7], -r1, lsl #10
    2c34:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    2c38:	0a052001 	beq	14ac44 <_Min_Heap_Size+0x14a444>
    2c3c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    2c40:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    2c44:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2c48:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    2c4c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2c50:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    2c54:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2c58:	6e030609 	cfmadd32vs	mvax0, mvfx0, mvfx3, mvfx9
    2c5c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2c60:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    2c64:	31060b05 	tstcc	r6, r5, lsl #22
    2c68:	01061c05 	tsteq	r6, r5, lsl #24
    2c6c:	30060b05 	andcc	r0, r6, r5, lsl #22
    2c70:	01061205 	tsteq	r6, r5, lsl #4
    2c74:	01000202 	tsteq	r0, r2, lsl #4
    2c78:	00010501 	andeq	r0, r1, r1, lsl #10
    2c7c:	00000205 	andeq	r0, r0, r5, lsl #4
    2c80:	cf030000 	svcgt	0x00030000
    2c84:	0106010f 	tsteq	r6, pc, lsl #2
    2c88:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2c8c:	30060104 	andcc	r0, r6, r4, lsl #2
    2c90:	01040200 	mrseq	r0, R12_usr
    2c94:	04020001 	streq	r0, [r2], #-1
    2c98:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2c9c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2ca0:	001f0502 	andseq	r0, pc, r2, lsl #10
    2ca4:	03010402 	movweq	r0, #5122	; 0x1402
    2ca8:	0520748a 	streq	r7, [r0, #-1162]!	; 0xfffffb76
    2cac:	04020005 	streq	r0, [r2], #-5
    2cb0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2cb4:	01040200 	mrseq	r0, R12_usr
    2cb8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2cbc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2cc0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2cc4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2cc8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2ccc:	00030501 	andeq	r0, r3, r1, lsl #10
    2cd0:	03010402 	movweq	r0, #5122	; 0x1402
    2cd4:	00010bf1 	strdeq	r0, [r1], -r1
    2cd8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2cdc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2ce0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2ce4:	74bd0301 	ldrtvc	r0, [sp], #769	; 0x301
    2ce8:	00040501 	andeq	r0, r4, r1, lsl #10
    2cec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2cf0:	01040200 	mrseq	r0, R12_usr
    2cf4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2cf8:	00200601 	eoreq	r0, r0, r1, lsl #12
    2cfc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d00:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2d04:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2d08:	00030501 	andeq	r0, r3, r1, lsl #10
    2d0c:	03010402 	movweq	r0, #5122	; 0x1402
    2d10:	00010bbe 			; <UNDEFINED> instruction: 0x00010bbe
    2d14:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2d18:	01040200 	mrseq	r0, R12_usr
    2d1c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    2d20:	00130104 	andseq	r0, r3, r4, lsl #2
    2d24:	01010402 	tsteq	r1, r2, lsl #8
    2d28:	01040200 	mrseq	r0, R12_usr
    2d2c:	04020001 	streq	r0, [r2], #-1
    2d30:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2d34:	02001f05 	andeq	r1, r0, #5, 30
    2d38:	89030104 	stmdbhi	r3, {r2, r8}
    2d3c:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    2d40:	01040200 	mrseq	r0, R12_usr
    2d44:	00040514 	andeq	r0, r4, r4, lsl r5
    2d48:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2d4c:	01040200 	mrseq	r0, R12_usr
    2d50:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2d54:	2f060104 	svccs	0x00060104
    2d58:	01040200 	mrseq	r0, R12_usr
    2d5c:	01040106 	tsteq	r4, r6, lsl #2
    2d60:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2d64:	f2030104 	vrhadd.s8	d0, d3, d4
    2d68:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2d6c:	2e060104 	adfcss	f0, f6, f4
    2d70:	1f050204 	svcne	0x00050204
    2d74:	01040200 	mrseq	r0, R12_usr
    2d78:	0174bc03 	cmneq	r4, r3, lsl #24
    2d7c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2d80:	00140104 	andseq	r0, r4, r4, lsl #2
    2d84:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2d88:	01040200 	mrseq	r0, R12_usr
    2d8c:	02002006 	andeq	r2, r0, #6
    2d90:	2f060104 	svccs	0x00060104
    2d94:	01040200 	mrseq	r0, R12_usr
    2d98:	01040106 	tsteq	r4, r6, lsl #2
    2d9c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2da0:	bf030104 	svclt	0x00030104
    2da4:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2da8:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2dac:	02040200 	andeq	r0, r4, #0, 4
    2db0:	000c0515 	andeq	r0, ip, r5, lsl r5
    2db4:	06020402 	streq	r0, [r2], -r2, lsl #8
    2db8:	00060501 	andeq	r0, r6, r1, lsl #10
    2dbc:	20020402 	andcs	r0, r2, r2, lsl #8
    2dc0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2dc4:	30060204 	andcc	r0, r6, r4, lsl #4
    2dc8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2dcc:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    2dd0:	04020007 	streq	r0, [r2], #-7
    2dd4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2dd8:	04020006 	streq	r0, [r2], #-6
    2ddc:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
    2de0:	01040200 	mrseq	r0, R12_usr
    2de4:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    2de8:	00010104 	andeq	r0, r1, r4, lsl #2
    2dec:	01010402 	tsteq	r1, r2, lsl #8
    2df0:	01040200 	mrseq	r0, R12_usr
    2df4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2df8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2dfc:	73fe0301 	mvnsvc	r0, #67108864	; 0x4000000
    2e00:	00050520 	andeq	r0, r5, r0, lsr #10
    2e04:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2e08:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2e0c:	00140104 	andseq	r0, r4, r4, lsl #2
    2e10:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2e18:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2e1c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e20:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2e24:	04020005 	streq	r0, [r2], #-5
    2e28:	0bfd0301 	bleq	fff43a34 <_estack+0xdff427fc>
    2e2c:	04020001 	streq	r0, [r2], #-1
    2e30:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2e34:	001f0502 	andseq	r0, pc, r2, lsl #10
    2e38:	03010402 	movweq	r0, #5122	; 0x1402
    2e3c:	050174b1 	streq	r7, [r1, #-1201]	; 0xfffffb4f
    2e40:	04020004 	streq	r0, [r2], #-4
    2e44:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2e48:	00140104 	andseq	r0, r4, r4, lsl #2
    2e4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e50:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2e54:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2e58:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e5c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2e60:	04020005 	streq	r0, [r2], #-5
    2e64:	0bca0301 	bleq	ff283a70 <_estack+0xdf282838>
    2e68:	04020001 	streq	r0, [r2], #-1
    2e6c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2e70:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2e74:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2e78:	01060204 	tsteq	r6, r4, lsl #4
    2e7c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2e80:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2e84:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    2e88:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2e8c:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    2e90:	2001060b 	andcs	r0, r1, fp, lsl #12
    2e94:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2e98:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    2e9c:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    2ea0:	06030501 	streq	r0, [r3], -r1, lsl #10
    2ea4:	06120531 			; <UNDEFINED> instruction: 0x06120531
    2ea8:	06030501 	streq	r0, [r3], -r1, lsl #10
    2eac:	0618053d 			; <UNDEFINED> instruction: 0x0618053d
    2eb0:	06030501 	streq	r0, [r3], -r1, lsl #10
    2eb4:	06010522 	streq	r0, [r1], -r2, lsr #10
    2eb8:	00050513 	andeq	r0, r5, r3, lsl r5
    2ebc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ec0:	00205c03 	eoreq	r5, r0, r3, lsl #24
    2ec4:	01010402 	tsteq	r1, r2, lsl #8
    2ec8:	01040200 	mrseq	r0, R12_usr
    2ecc:	04020001 	streq	r0, [r2], #-1
    2ed0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2ed4:	02001f05 	andeq	r1, r0, #5, 30
    2ed8:	84030104 	strhi	r0, [r3], #-260	; 0xfffffefc
    2edc:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    2ee0:	01040200 	mrseq	r0, R12_usr
    2ee4:	00040514 	andeq	r0, r4, r4, lsl r5
    2ee8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2eec:	01040200 	mrseq	r0, R12_usr
    2ef0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2ef4:	2f060104 	svccs	0x00060104
    2ef8:	01040200 	mrseq	r0, R12_usr
    2efc:	01040106 	tsteq	r4, r6, lsl #2
    2f00:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2f04:	f7030104 			; <UNDEFINED> instruction: 0xf7030104
    2f08:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2f0c:	2e060104 	adfcss	f0, f6, f4
    2f10:	1f050204 	svcne	0x00050204
    2f14:	01040200 	mrseq	r0, R12_usr
    2f18:	0174b703 	cmneq	r4, r3, lsl #14
    2f1c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2f20:	00140104 	andseq	r0, r4, r4, lsl #2
    2f24:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2f28:	01040200 	mrseq	r0, R12_usr
    2f2c:	02002006 	andeq	r2, r0, #6
    2f30:	2f060104 	svccs	0x00060104
    2f34:	01040200 	mrseq	r0, R12_usr
    2f38:	01040106 	tsteq	r4, r6, lsl #2
    2f3c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2f40:	c4030104 	strgt	r0, [r3], #-260	; 0xfffffefc
    2f44:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2f48:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    2f4c:	11030609 	tstne	r3, r9, lsl #12
    2f50:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2f54:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    2f58:	31060b05 	tstcc	r6, r5, lsl #22
    2f5c:	01061c05 	tsteq	r6, r5, lsl #24
    2f60:	30060b05 	andcc	r0, r6, r5, lsl #22
    2f64:	01061205 	tsteq	r6, r5, lsl #4
    2f68:	01000202 	tsteq	r0, r2, lsl #4
    2f6c:	00010501 	andeq	r0, r1, r1, lsl #10
    2f70:	0d740205 	lfmeq	f0, 2, [r4, #-20]!	; 0xffffffec
    2f74:	a0030800 	andge	r0, r3, r0, lsl #16
    2f78:	03050114 	movweq	r0, #20756	; 0x5114
    2f7c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    2f80:	00010216 	andeq	r0, r1, r6, lsl r2
    2f84:	01050101 	tsteq	r5, r1, lsl #2
    2f88:	00020500 	andeq	r0, r2, r0, lsl #10
    2f8c:	03000000 	movweq	r0, #0
    2f90:	060117ac 	streq	r1, [r1], -ip, lsr #15
    2f94:	06030501 	streq	r0, [r3], -r1, lsl #10
    2f98:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    2f9c:	06030501 	streq	r0, [r3], -r1, lsl #10
    2fa0:	060c0522 	streq	r0, [ip], -r2, lsr #10
    2fa4:	20160501 	andscs	r0, r6, r1, lsl #10
    2fa8:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    2fac:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    2fb0:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2fb4:	04020005 	streq	r0, [r2], #-5
    2fb8:	00320601 	eorseq	r0, r2, r1, lsl #12
    2fbc:	01010402 	tsteq	r1, r2, lsl #8
    2fc0:	01040200 	mrseq	r0, R12_usr
    2fc4:	04020001 	streq	r0, [r2], #-1
    2fc8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2fcc:	02001f05 	andeq	r1, r0, #5, 30
    2fd0:	a6030104 	strge	r0, [r3], -r4, lsl #2
    2fd4:	0505206c 	streq	r2, [r5, #-108]	; 0xffffff94
    2fd8:	01040200 	mrseq	r0, R12_usr
    2fdc:	00040514 	andeq	r0, r4, r4, lsl r5
    2fe0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2fe4:	01040200 	mrseq	r0, R12_usr
    2fe8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2fec:	2f060104 	svccs	0x00060104
    2ff0:	01040200 	mrseq	r0, R12_usr
    2ff4:	01040106 	tsteq	r4, r6, lsl #2
    2ff8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2ffc:	d5030104 	strle	r0, [r3, #-260]	; 0xfffffefc
    3000:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    3004:	2e060104 	adfcss	f0, f6, f4
    3008:	1f050204 	svcne	0x00050204
    300c:	01040200 	mrseq	r0, R12_usr
    3010:	016cd903 	cmneq	ip, r3, lsl #18
    3014:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3018:	00140104 	andseq	r0, r4, r4, lsl #2
    301c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3020:	01040200 	mrseq	r0, R12_usr
    3024:	02002006 	andeq	r2, r0, #6
    3028:	2f060104 	svccs	0x00060104
    302c:	01040200 	mrseq	r0, R12_usr
    3030:	01040106 	tsteq	r4, r6, lsl #2
    3034:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3038:	a2030104 	andge	r0, r3, #4, 2
    303c:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    3040:	002e0104 	eoreq	r0, lr, r4, lsl #2
    3044:	06010402 	streq	r0, [r1], -r2, lsl #8
    3048:	04020001 	streq	r0, [r2], #-1
    304c:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    3050:	00010104 	andeq	r0, r1, r4, lsl #2
    3054:	01010402 	tsteq	r1, r2, lsl #8
    3058:	01040200 	mrseq	r0, R12_usr
    305c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3060:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3064:	6ca30301 	stcvs	3, cr0, [r3], #4
    3068:	00050520 	andeq	r0, r5, r0, lsr #10
    306c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3070:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3074:	00140104 	andseq	r0, r4, r4, lsl #2
    3078:	06010402 	streq	r0, [r1], -r2, lsl #8
    307c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3080:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3084:	06010402 	streq	r0, [r1], -r2, lsl #8
    3088:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    308c:	04020005 	streq	r0, [r2], #-5
    3090:	13d80301 	bicsne	r0, r8, #67108864	; 0x4000000
    3094:	04020001 	streq	r0, [r2], #-1
    3098:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    309c:	001f0502 	andseq	r0, pc, r2, lsl #10
    30a0:	03010402 	movweq	r0, #5122	; 0x1402
    30a4:	05016cd6 	streq	r6, [r1, #-3286]	; 0xfffff32a
    30a8:	04020004 	streq	r0, [r2], #-4
    30ac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    30b0:	00140104 	andseq	r0, r4, r4, lsl #2
    30b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    30b8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    30bc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    30c0:	06010402 	streq	r0, [r1], -r2, lsl #8
    30c4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    30c8:	04020005 	streq	r0, [r2], #-5
    30cc:	13a50301 			; <UNDEFINED> instruction: 0x13a50301
    30d0:	04020001 	streq	r0, [r2], #-1
    30d4:	01052e01 	tsteq	r5, r1, lsl #28
    30d8:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
    30dc:	051d0605 	ldreq	r0, [sp, #-1541]	; 0xfffff9fb
    30e0:	02310601 	eorseq	r0, r1, #1048576	; 0x100000
    30e4:	01010001 	tsteq	r1, r1
    30e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    30ec:	000d7602 	andeq	r7, sp, r2, lsl #12
    30f0:	1bf10308 	blne	ffc43d18 <_estack+0xdfc42ae0>
    30f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    30f8:	5b220603 	blpl	88490c <_Min_Heap_Size+0x88410c>
    30fc:	01061105 	tsteq	r6, r5, lsl #2
    3100:	43060305 	movwmi	r0, #25349	; 0x6305
    3104:	06010531 			; <UNDEFINED> instruction: 0x06010531
    3108:	00020213 	andeq	r0, r2, r3, lsl r2
    310c:	01050101 	tsteq	r5, r1, lsl #2
    3110:	00020500 	andeq	r0, r2, r0, lsl #10
    3114:	03000000 	movweq	r0, #0
    3118:	050114af 	streq	r1, [r1, #-1199]	; 0xfffffb51
    311c:	01051403 	tsteq	r5, r3, lsl #8
    3120:	01021606 	tsteq	r2, r6, lsl #12
    3124:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3128:	02050001 	andeq	r0, r5, #1
    312c:	00000000 	andeq	r0, r0, r0
    3130:	0117cf03 	tsteq	r7, r3, lsl #30
    3134:	03050106 	movweq	r0, #20742	; 0x5106
    3138:	06192106 	ldreq	r2, [r9], -r6, lsl #2
    313c:	30010520 	andcc	r0, r1, r0, lsr #10
    3140:	01000102 	tsteq	r0, r2, lsl #2
    3144:	00010501 	andeq	r0, r1, r1, lsl #10
    3148:	0d900205 	lfmeq	f0, 4, [r0, #20]
    314c:	be030800 	cdplt	8, 0, cr0, cr3, cr0, {0}
    3150:	03050114 	movweq	r0, #20756	; 0x5114
    3154:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3158:	00010216 	andeq	r0, r1, r6, lsl r2
    315c:	01050101 	tsteq	r5, r1, lsl #2
    3160:	00020500 	andeq	r0, r2, r0, lsl #10
    3164:	03000000 	movweq	r0, #0
    3168:	050114cd 	streq	r1, [r1, #-1229]	; 0xfffffb33
    316c:	01051403 	tsteq	r5, r3, lsl #8
    3170:	01021606 	tsteq	r2, r6, lsl #12
    3174:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3178:	02050001 	andeq	r0, r5, #1
    317c:	08000d92 	stmdaeq	r0, {r1, r4, r7, r8, sl, fp}
    3180:	0114dc03 	tsteq	r4, r3, lsl #24
    3184:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3188:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    318c:	01010001 	tsteq	r1, r1
    3190:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3194:	00000002 	andeq	r0, r0, r2
    3198:	18c70300 	stmiane	r7, {r8, r9}^
    319c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    31a0:	13210603 			; <UNDEFINED> instruction: 0x13210603
    31a4:	01061705 	tsteq	r6, r5, lsl #14
    31a8:	23060305 	movwcs	r0, #25349	; 0x6305
    31ac:	01061005 	tsteq	r6, r5
    31b0:	2f060305 	svccs	0x00060305
    31b4:	01060d05 	tsteq	r6, r5, lsl #26
    31b8:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    31bc:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
    31c0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    31c4:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
    31c8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    31cc:	03053c06 	movweq	r3, #23558	; 0x5c06
    31d0:	14053406 	strne	r3, [r5], #-1030	; 0xfffffbfa
    31d4:	03050106 	movweq	r0, #20742	; 0x5106
    31d8:	01055006 	tsteq	r5, r6
    31dc:	05203e06 	streq	r3, [r0, #-3590]!	; 0xfffff1fa
    31e0:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    31e4:	2e6a0301 	cdpcs	3, 6, cr0, cr10, cr1, {0}
    31e8:	30060505 	andcc	r0, r6, r5, lsl #10
    31ec:	01061805 	tsteq	r6, r5, lsl #16
    31f0:	2f060505 	svccs	0x00060505
    31f4:	32052006 	andcc	r2, r5, #6
    31f8:	01040200 	mrseq	r0, R12_usr
    31fc:	06050541 	streq	r0, [r5], -r1, asr #10
    3200:	06180530 			; <UNDEFINED> instruction: 0x06180530
    3204:	06050501 	streq	r0, [r5], -r1, lsl #10
    3208:	023c062f 	eorseq	r0, ip, #49283072	; 0x2f00000
    320c:	01010001 	tsteq	r1, r1
    3210:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3214:	000d9402 	andeq	r9, sp, r2, lsl #8
    3218:	1a9f0308 	bne	fe7c3e40 <_estack+0xde7c2c08>
    321c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3220:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    3224:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3228:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    322c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3230:	052f0603 	streq	r0, [pc, #-1539]!	; 2c35 <_Min_Heap_Size+0x2435>
    3234:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3238:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
    323c:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    3240:	01010001 	tsteq	r1, r1
    3244:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3248:	00000002 	andeq	r0, r0, r2
    324c:	14ea0300 	strbtne	r0, [sl], #768	; 0x300
    3250:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3254:	17060105 	strne	r0, [r6, -r5, lsl #2]
    3258:	01000102 	tsteq	r0, r2, lsl #2
    325c:	00010501 	andeq	r0, r1, r1, lsl #10
    3260:	00000205 	andeq	r0, r0, r5, lsl #4
    3264:	8c030000 	stchi	0, cr0, [r3], {-0}
    3268:	01060110 	tsteq	r6, r0, lsl r1
    326c:	2f060305 	svccs	0x00060305
    3270:	01040200 	mrseq	r0, R12_usr
    3274:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    3278:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    327c:	00010104 	andeq	r0, r1, r4, lsl #2
    3280:	01010402 	tsteq	r1, r2, lsl #8
    3284:	1f050204 	svcne	0x00050204
    3288:	01040200 	mrseq	r0, R12_usr
    328c:	2073cb03 	rsbscs	ip, r3, r3, lsl #22
    3290:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3294:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3298:	04020004 	streq	r0, [r2], #-4
    329c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    32a0:	2e060104 	adfcss	f0, f6, f4
    32a4:	01040200 	mrseq	r0, R12_usr
    32a8:	02002f06 	andeq	r2, r0, #6, 30
    32ac:	01060104 	tsteq	r6, r4, lsl #2
    32b0:	03050104 	movweq	r0, #20740	; 0x5104
    32b4:	01040200 	mrseq	r0, R12_usr
    32b8:	010cb003 	tsteq	ip, r3
    32bc:	01040200 	mrseq	r0, R12_usr
    32c0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    32c4:	02001f05 	andeq	r1, r0, #5, 30
    32c8:	fe030104 	cdp2	1, 0, cr0, cr3, cr4, {0}
    32cc:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    32d0:	01040200 	mrseq	r0, R12_usr
    32d4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    32d8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    32dc:	20060104 	andcs	r0, r6, r4, lsl #2
    32e0:	01040200 	mrseq	r0, R12_usr
    32e4:	02002f06 	andeq	r2, r0, #6, 30
    32e8:	01060104 	tsteq	r6, r4, lsl #2
    32ec:	03050104 	movweq	r0, #20740	; 0x5104
    32f0:	01040200 	mrseq	r0, R12_usr
    32f4:	010bfd03 	tsteq	fp, r3, lsl #26	; <UNPREDICTABLE>
    32f8:	01040200 	mrseq	r0, R12_usr
    32fc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3300:	00010601 	andeq	r0, r1, r1, lsl #12
    3304:	13010402 	movwne	r0, #5122	; 0x1402
    3308:	01040200 	mrseq	r0, R12_usr
    330c:	04020001 	streq	r0, [r2], #-1
    3310:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3314:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3318:	001f0502 	andseq	r0, pc, r2, lsl #10
    331c:	03010402 	movweq	r0, #5122	; 0x1402
    3320:	052073ca 	streq	r7, [r0, #-970]!	; 0xfffffc36
    3324:	04020005 	streq	r0, [r2], #-5
    3328:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    332c:	01040200 	mrseq	r0, R12_usr
    3330:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3334:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3338:	06010402 	streq	r0, [r1], -r2, lsl #8
    333c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3340:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3344:	00030501 	andeq	r0, r3, r1, lsl #10
    3348:	03010402 	movweq	r0, #5122	; 0x1402
    334c:	00010cb1 			; <UNDEFINED> instruction: 0x00010cb1
    3350:	06010402 	streq	r0, [r1], -r2, lsl #8
    3354:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3358:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    335c:	73fd0301 	mvnsvc	r0, #67108864	; 0x4000000
    3360:	00040501 	andeq	r0, r4, r1, lsl #10
    3364:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3368:	01040200 	mrseq	r0, R12_usr
    336c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3370:	00200601 	eoreq	r0, r0, r1, lsl #12
    3374:	06010402 	streq	r0, [r1], -r2, lsl #8
    3378:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    337c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3380:	00030501 	andeq	r0, r3, r1, lsl #10
    3384:	03010402 	movweq	r0, #5122	; 0x1402
    3388:	00010bfe 	strdeq	r0, [r1], -lr
    338c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3390:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3394:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    3398:	02040200 	andeq	r0, r4, #0, 4
    339c:	06050106 	streq	r0, [r5], -r6, lsl #2
    33a0:	02040200 	andeq	r0, r4, #0, 4
    33a4:	00050520 	andeq	r0, r5, r0, lsr #10
    33a8:	06020402 	streq	r0, [r2], -r2, lsl #8
    33ac:	00030530 	andeq	r0, r3, r0, lsr r5
    33b0:	18020402 	stmdane	r2, {r1, sl}
    33b4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    33b8:	01060204 	tsteq	r6, r4, lsl #4
    33bc:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    33c0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    33c4:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    33c8:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    33cc:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    33d0:	28053e06 	stmdacs	r5, {r1, r2, r9, sl, fp, ip, sp}
    33d4:	03050106 	movweq	r0, #20742	; 0x5106
    33d8:	0c053606 	stceq	6, cr3, [r5], {6}
    33dc:	06050106 	streq	r0, [r5], -r6, lsl #2
    33e0:	06050520 	streq	r0, [r5], -r0, lsr #10
    33e4:	06090524 	streq	r0, [r9], -r4, lsr #10
    33e8:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    33ec:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    33f0:	01062805 	tsteq	r6, r5, lsl #16
    33f4:	03060305 	movweq	r0, #25349	; 0x6305
    33f8:	07052e09 	streq	r2, [r5, -r9, lsl #28]
    33fc:	06050106 	streq	r0, [r5], -r6, lsl #2
    3400:	0005052e 	andeq	r0, r5, lr, lsr #10
    3404:	06010402 	streq	r0, [r1], -r2, lsl #8
    3408:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    340c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3410:	00010104 	andeq	r0, r1, r4, lsl #2
    3414:	01010402 	tsteq	r1, r2, lsl #8
    3418:	1f050204 	svcne	0x00050204
    341c:	01040200 	mrseq	r0, R12_usr
    3420:	20739f03 	rsbscs	r9, r3, r3, lsl #30
    3424:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3428:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    342c:	04020004 	streq	r0, [r2], #-4
    3430:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3434:	2e060104 	adfcss	f0, f6, f4
    3438:	01040200 	mrseq	r0, R12_usr
    343c:	02002f06 	andeq	r2, r0, #6, 30
    3440:	01060104 	tsteq	r6, r4, lsl #2
    3444:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3448:	01040200 	mrseq	r0, R12_usr
    344c:	010cdc03 	tsteq	ip, r3, lsl #24
    3450:	01040200 	mrseq	r0, R12_usr
    3454:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3458:	02001f05 	andeq	r1, r0, #5, 30
    345c:	d2030104 	andle	r0, r3, #4, 2
    3460:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    3464:	01040200 	mrseq	r0, R12_usr
    3468:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    346c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3470:	20060104 	andcs	r0, r6, r4, lsl #2
    3474:	01040200 	mrseq	r0, R12_usr
    3478:	02003d06 	andeq	r3, r0, #384	; 0x180
    347c:	01060104 	tsteq	r6, r4, lsl #2
    3480:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3484:	01040200 	mrseq	r0, R12_usr
    3488:	010ca903 	tsteq	ip, r3, lsl #18
    348c:	02040200 	andeq	r0, r4, #0, 4
    3490:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3494:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3498:	0402000e 	streq	r0, [r2], #-14
    349c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    34a0:	04020008 	streq	r0, [r2], #-8
    34a4:	07052002 	streq	r2, [r5, -r2]
    34a8:	0b053406 	bleq	1504c8 <_Min_Heap_Size+0x14fcc8>
    34ac:	0a050106 	beq	1438cc <_Min_Heap_Size+0x1430cc>
    34b0:	0609052e 	streq	r0, [r9], -lr, lsr #10
    34b4:	060e0522 	streq	r0, [lr], -r2, lsr #10
    34b8:	202a0501 	eorcs	r0, sl, r1, lsl #10
    34bc:	46030c05 	strmi	r0, [r3], -r5, lsl #24
    34c0:	0005052e 	andeq	r0, r5, lr, lsr #10
    34c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    34c8:	002e0903 	eoreq	r0, lr, r3, lsl #18
    34cc:	01010402 	tsteq	r1, r2, lsl #8
    34d0:	01040200 	mrseq	r0, R12_usr
    34d4:	04020001 	streq	r0, [r2], #-1
    34d8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    34dc:	02001f05 	andeq	r1, r0, #5, 30
    34e0:	c5030104 	strgt	r0, [r3, #-260]	; 0xfffffefc
    34e4:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    34e8:	01040200 	mrseq	r0, R12_usr
    34ec:	00040514 	andeq	r0, r4, r4, lsl r5
    34f0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    34f4:	01040200 	mrseq	r0, R12_usr
    34f8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    34fc:	2f060104 	svccs	0x00060104
    3500:	01040200 	mrseq	r0, R12_usr
    3504:	01040106 	tsteq	r4, r6, lsl #2
    3508:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    350c:	b6030104 	strlt	r0, [r3], -r4, lsl #2
    3510:	0200010c 	andeq	r0, r0, #12, 2
    3514:	2e060104 	adfcss	f0, f6, f4
    3518:	1f050204 	svcne	0x00050204
    351c:	01040200 	mrseq	r0, R12_usr
    3520:	0173f803 	cmneq	r3, r3, lsl #16	; <UNPREDICTABLE>
    3524:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3528:	00140104 	andseq	r0, r4, r4, lsl #2
    352c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3530:	01040200 	mrseq	r0, R12_usr
    3534:	02002006 	andeq	r2, r0, #6
    3538:	2f060104 	svccs	0x00060104
    353c:	01040200 	mrseq	r0, R12_usr
    3540:	01040106 	tsteq	r4, r6, lsl #2
    3544:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3548:	83030104 	movwhi	r0, #12548	; 0x3104
    354c:	0200010c 	andeq	r0, r0, #12, 2
    3550:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3554:	10030607 	andne	r0, r3, r7, lsl #12
    3558:	06280501 	strteq	r0, [r8], -r1, lsl #10
    355c:	06070501 	streq	r0, [r7], -r1, lsl #10
    3560:	053c0e03 	ldreq	r0, [ip, #-3587]!	; 0xfffff1fd
    3564:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3568:	3c59030c 	mrrccc	3, 0, r0, r9, cr12
    356c:	03060305 	movweq	r0, #25349	; 0x6305
    3570:	052000c4 	streq	r0, [r0, #-196]!	; 0xffffff3c
    3574:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    3578:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    357c:	01040200 	mrseq	r0, R12_usr
    3580:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    3584:	00010104 	andeq	r0, r1, r4, lsl #2
    3588:	01010402 	tsteq	r1, r2, lsl #8
    358c:	01040200 	mrseq	r0, R12_usr
    3590:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3594:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3598:	73880301 	orrvc	r0, r8, #67108864	; 0x4000000
    359c:	00050520 	andeq	r0, r5, r0, lsr #10
    35a0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    35a4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    35a8:	00140104 	andseq	r0, r4, r4, lsl #2
    35ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    35b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    35b4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    35b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    35bc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    35c0:	04020005 	streq	r0, [r2], #-5
    35c4:	0cf30301 	ldcleq	3, cr0, [r3], #4
    35c8:	04020001 	streq	r0, [r2], #-1
    35cc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    35d0:	001f0502 	andseq	r0, pc, r2, lsl #10
    35d4:	03010402 	movweq	r0, #5122	; 0x1402
    35d8:	050173bb 	streq	r7, [r1, #-955]	; 0xfffffc45
    35dc:	04020004 	streq	r0, [r2], #-4
    35e0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    35e4:	00140104 	andseq	r0, r4, r4, lsl #2
    35e8:	06010402 	streq	r0, [r1], -r2, lsl #8
    35ec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    35f0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    35f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    35f8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    35fc:	04020005 	streq	r0, [r2], #-5
    3600:	0cc00301 	stcleq	3, cr0, [r0], {1}
    3604:	04020001 	streq	r0, [r2], #-1
    3608:	002e0602 	eoreq	r0, lr, r2, lsl #12
    360c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3610:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    3614:	01060204 	tsteq	r6, r4, lsl #4
    3618:	02000805 	andeq	r0, r0, #327680	; 0x50000
    361c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3620:	05260607 	streq	r0, [r6, #-1543]!	; 0xfffff9f9
    3624:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    3628:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    362c:	0e052206 	cdpeq	2, 0, cr2, cr5, cr6, {0}
    3630:	2a050106 	bcs	143a50 <_Min_Heap_Size+0x143250>
    3634:	06090520 	streq	r0, [r9], -r0, lsr #10
    3638:	0303052f 	movweq	r0, #13615	; 0x352f
    363c:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
    3640:	06180515 			; <UNDEFINED> instruction: 0x06180515
    3644:	06050501 	streq	r0, [r5], -r1, lsl #10
    3648:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    364c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3650:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    3654:	06050501 	streq	r0, [r5], -r1, lsl #10
    3658:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    365c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3660:	0614053d 			; <UNDEFINED> instruction: 0x0614053d
    3664:	06050501 	streq	r0, [r5], -r1, lsl #10
    3668:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    366c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3670:	060c0528 	streq	r0, [ip], -r8, lsr #10
    3674:	4a7f9003 	bmi	1fe7688 <_Min_Heap_Size+0x1fe6e88>
    3678:	03060305 	movweq	r0, #25349	; 0x6305
    367c:	052e00dc 	streq	r0, [lr, #-220]!	; 0xffffff24
    3680:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3684:	18030603 	stmdane	r3, {r0, r1, r9, sl}
    3688:	0601052e 	streq	r0, [r1], -lr, lsr #10
    368c:	05022e13 	streq	r2, [r2, #-3603]	; 0xfffff1ed
    3690:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3694:	02050001 	andeq	r0, r5, #1
    3698:	00000000 	andeq	r0, r0, r0
    369c:	011ae503 	tsteq	sl, r3, lsl #10
    36a0:	03050106 	movweq	r0, #20742	; 0x5106
    36a4:	17052106 	strne	r2, [r5, -r6, lsl #2]
    36a8:	03050106 	movweq	r0, #20742	; 0x5106
    36ac:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
    36b0:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    36b4:	06030520 	streq	r0, [r3], -r0, lsr #10
    36b8:	060c0531 			; <UNDEFINED> instruction: 0x060c0531
    36bc:	20060501 	andcs	r0, r6, r1, lsl #10
    36c0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    36c4:	01061605 	tsteq	r6, r5, lsl #12
    36c8:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    36cc:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
    36d0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    36d4:	052f0603 	streq	r0, [pc, #-1539]!	; 30d9 <_Min_Heap_Size+0x28d9>
    36d8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    36dc:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    36e0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    36e4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    36e8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    36ec:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    36f0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    36f4:	052f0603 	streq	r0, [pc, #-1539]!	; 30f9 <_Min_Heap_Size+0x28f9>
    36f8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    36fc:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    3700:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    3704:	01010001 	tsteq	r1, r1
    3708:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    370c:	00000002 	andeq	r0, r0, r2
    3710:	1ab70300 	bne	fedc4318 <_estack+0xdedc30e0>
    3714:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3718:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    371c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3720:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    3724:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3728:	03052024 	movweq	r2, #20516	; 0x5024
    372c:	0c053106 	stfeqs	f3, [r5], {6}
    3730:	06050106 	streq	r0, [r5], -r6, lsl #2
    3734:	06050520 	streq	r0, [r5], -r0, lsr #10
    3738:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    373c:	20080501 	andcs	r0, r8, r1, lsl #10
    3740:	27060305 	strcs	r0, [r6, -r5, lsl #6]
    3744:	01061605 	tsteq	r6, r5, lsl #12
    3748:	2f060305 	svccs	0x00060305
    374c:	01061605 	tsteq	r6, r5, lsl #12
    3750:	23060305 	movwcs	r0, #25349	; 0x6305
    3754:	01061405 	tsteq	r6, r5, lsl #8
    3758:	23060305 	movwcs	r0, #25349	; 0x6305
    375c:	01061205 	tsteq	r6, r5, lsl #4
    3760:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3764:	01061205 	tsteq	r6, r5, lsl #4
    3768:	2f060305 	svccs	0x00060305
    376c:	01061805 	tsteq	r6, r5, lsl #16
    3770:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    3774:	30060105 	andcc	r0, r6, r5, lsl #2
    3778:	01000102 	tsteq	r0, r2, lsl #2
    377c:	00010501 	andeq	r0, r1, r1, lsl #10
    3780:	00000205 	andeq	r0, r0, r5, lsl #4
    3784:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    3788:	03050114 	movweq	r0, #20756	; 0x5114
    378c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3790:	00010217 	andeq	r0, r1, r7, lsl r2
    3794:	01050101 	tsteq	r5, r1, lsl #2
    3798:	00020500 	andeq	r0, r2, r0, lsl #10
    379c:	03000000 	movweq	r0, #0
    37a0:	06011193 			; <UNDEFINED> instruction: 0x06011193
    37a4:	00030501 	andeq	r0, r3, r1, lsl #10
    37a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    37ac:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    37b0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    37b4:	00010104 	andeq	r0, r1, r4, lsl #2
    37b8:	01010402 	tsteq	r1, r2, lsl #8
    37bc:	1f050204 	svcne	0x00050204
    37c0:	01040200 	mrseq	r0, R12_usr
    37c4:	2072c603 	rsbscs	ip, r2, r3, lsl #12
    37c8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    37cc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    37d0:	04020004 	streq	r0, [r2], #-4
    37d4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    37d8:	2e060104 	adfcss	f0, f6, f4
    37dc:	01040200 	mrseq	r0, R12_usr
    37e0:	02002f06 	andeq	r2, r0, #6, 30
    37e4:	01060104 	tsteq	r6, r4, lsl #2
    37e8:	03050104 	movweq	r0, #20740	; 0x5104
    37ec:	01040200 	mrseq	r0, R12_usr
    37f0:	010db503 	tsteq	sp, r3, lsl #10
    37f4:	01040200 	mrseq	r0, R12_usr
    37f8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    37fc:	02001f05 	andeq	r1, r0, #5, 30
    3800:	f9030104 			; <UNDEFINED> instruction: 0xf9030104
    3804:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3808:	01040200 	mrseq	r0, R12_usr
    380c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3810:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3814:	20060104 	andcs	r0, r6, r4, lsl #2
    3818:	01040200 	mrseq	r0, R12_usr
    381c:	02002f06 	andeq	r2, r0, #6, 30
    3820:	01060104 	tsteq	r6, r4, lsl #2
    3824:	03050104 	movweq	r0, #20740	; 0x5104
    3828:	01040200 	mrseq	r0, R12_usr
    382c:	010d8203 	tsteq	sp, r3, lsl #4
    3830:	02040200 	andeq	r0, r4, #0, 4
    3834:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3838:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    383c:	04020007 	streq	r0, [r2], #-7
    3840:	00010602 	andeq	r0, r1, r2, lsl #12
    3844:	20020402 	andcs	r0, r2, r2, lsl #8
    3848:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    384c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3850:	04020005 	streq	r0, [r2], #-5
    3854:	003e0601 	eorseq	r0, lr, r1, lsl #12
    3858:	01010402 	tsteq	r1, r2, lsl #8
    385c:	01040200 	mrseq	r0, R12_usr
    3860:	04020001 	streq	r0, [r2], #-1
    3864:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3868:	02001f05 	andeq	r1, r0, #5, 30
    386c:	c1030104 	tstgt	r3, r4, lsl #2
    3870:	05052072 	streq	r2, [r5, #-114]	; 0xffffff8e
    3874:	01040200 	mrseq	r0, R12_usr
    3878:	00040514 	andeq	r0, r4, r4, lsl r5
    387c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3880:	01040200 	mrseq	r0, R12_usr
    3884:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3888:	2f060104 	svccs	0x00060104
    388c:	01040200 	mrseq	r0, R12_usr
    3890:	01040106 	tsteq	r4, r6, lsl #2
    3894:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3898:	ba030104 	blt	c3cb0 <_Min_Heap_Size+0xc34b0>
    389c:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    38a0:	2e060104 	adfcss	f0, f6, f4
    38a4:	1f050204 	svcne	0x00050204
    38a8:	01040200 	mrseq	r0, R12_usr
    38ac:	0172f403 	cmneq	r2, r3, lsl #8	; <UNPREDICTABLE>
    38b0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    38b4:	00140104 	andseq	r0, r4, r4, lsl #2
    38b8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    38bc:	01040200 	mrseq	r0, R12_usr
    38c0:	02002006 	andeq	r2, r0, #6
    38c4:	2f060104 	svccs	0x00060104
    38c8:	01040200 	mrseq	r0, R12_usr
    38cc:	01040106 	tsteq	r4, r6, lsl #2
    38d0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    38d4:	87030104 	strhi	r0, [r3, -r4, lsl #2]
    38d8:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    38dc:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    38e0:	02040200 	andeq	r0, r4, #0, 4
    38e4:	000e0515 	andeq	r0, lr, r5, lsl r5
    38e8:	06020402 	streq	r0, [r2], -r2, lsl #8
    38ec:	00080501 	andeq	r0, r8, r1, lsl #10
    38f0:	20020402 	andcs	r0, r2, r2, lsl #8
    38f4:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    38f8:	01062805 	tsteq	r6, r5, lsl #16
    38fc:	31060705 	tstcc	r6, r5, lsl #14
    3900:	01060b05 	tsteq	r6, r5, lsl #22
    3904:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    3908:	23060905 	movwcs	r0, #26885	; 0x6905
    390c:	01060e05 	tsteq	r6, r5, lsl #28
    3910:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    3914:	07052009 	streq	r2, [r5, -r9]
    3918:	1a053406 	bne	150938 <_Min_Heap_Size+0x150138>
    391c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3920:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    3924:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3928:	20064406 	andcs	r4, r6, r6, lsl #8
    392c:	43060505 	movwmi	r0, #25861	; 0x6505
    3930:	01061805 	tsteq	r6, r5, lsl #16
    3934:	31060505 	tstcc	r6, r5, lsl #10
    3938:	01061305 	tsteq	r6, r5, lsl #6
    393c:	44060505 	strmi	r0, [r6], #-1285	; 0xfffffafb
    3940:	03052006 	movweq	r2, #20486	; 0x5006
    3944:	01053206 	tsteq	r5, r6, lsl #4
    3948:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    394c:	01010002 	tsteq	r1, r2
    3950:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3954:	00000002 	andeq	r0, r0, r2
    3958:	1b930300 	blne	fe4c4560 <_estack+0xde4c3328>
    395c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3960:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    3964:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3968:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    396c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3970:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    3974:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3978:	05440603 	strbeq	r0, [r4, #-1539]	; 0xfffff9fd
    397c:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    3980:	01010001 	tsteq	r1, r1
    3984:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3988:	00000002 	andeq	r0, r0, r2
    398c:	15880300 	strne	r0, [r8, #768]	; 0x300
    3990:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3994:	17060105 	strne	r0, [r6, -r5, lsl #2]
    3998:	01000102 	tsteq	r0, r2, lsl #2
    399c:	00010501 	andeq	r0, r1, r1, lsl #10
    39a0:	00000205 	andeq	r0, r0, r5, lsl #4
    39a4:	e0030000 	and	r0, r3, r0
    39a8:	01060111 	tsteq	r6, r1, lsl r1
    39ac:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    39b0:	30060104 	andcc	r0, r6, r4, lsl #2
    39b4:	01040200 	mrseq	r0, R12_usr
    39b8:	04020001 	streq	r0, [r2], #-1
    39bc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    39c0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    39c4:	001f0502 	andseq	r0, pc, r2, lsl #10
    39c8:	03010402 	movweq	r0, #5122	; 0x1402
    39cc:	052071f9 	streq	r7, [r0, #-505]!	; 0xfffffe07
    39d0:	04020005 	streq	r0, [r2], #-5
    39d4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    39d8:	01040200 	mrseq	r0, R12_usr
    39dc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    39e0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    39e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    39e8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    39ec:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    39f0:	00030501 	andeq	r0, r3, r1, lsl #10
    39f4:	03010402 	movweq	r0, #5122	; 0x1402
    39f8:	00010e82 	andeq	r0, r1, r2, lsl #29
    39fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a00:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3a04:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3a08:	72ac0301 	adcvc	r0, ip, #67108864	; 0x4000000
    3a0c:	00040501 	andeq	r0, r4, r1, lsl #10
    3a10:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3a14:	01040200 	mrseq	r0, R12_usr
    3a18:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3a1c:	00200601 	eoreq	r0, r0, r1, lsl #12
    3a20:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a24:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3a28:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3a2c:	00030501 	andeq	r0, r3, r1, lsl #10
    3a30:	03010402 	movweq	r0, #5122	; 0x1402
    3a34:	00010dcf 	andeq	r0, r1, pc, asr #27
    3a38:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3a3c:	01040200 	mrseq	r0, R12_usr
    3a40:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3a44:	00130104 	andseq	r0, r3, r4, lsl #2
    3a48:	01010402 	tsteq	r1, r2, lsl #8
    3a4c:	01040200 	mrseq	r0, R12_usr
    3a50:	04020001 	streq	r0, [r2], #-1
    3a54:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3a58:	02001f05 	andeq	r1, r0, #5, 30
    3a5c:	f8030104 			; <UNDEFINED> instruction: 0xf8030104
    3a60:	05052071 	streq	r2, [r5, #-113]	; 0xffffff8f
    3a64:	01040200 	mrseq	r0, R12_usr
    3a68:	00040514 	andeq	r0, r4, r4, lsl r5
    3a6c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3a70:	01040200 	mrseq	r0, R12_usr
    3a74:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3a78:	2f060104 	svccs	0x00060104
    3a7c:	01040200 	mrseq	r0, R12_usr
    3a80:	01040106 	tsteq	r4, r6, lsl #2
    3a84:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3a88:	83030104 	movwhi	r0, #12548	; 0x3104
    3a8c:	0200010e 	andeq	r0, r0, #-2147483645	; 0x80000003
    3a90:	2e060104 	adfcss	f0, f6, f4
    3a94:	1f050204 	svcne	0x00050204
    3a98:	01040200 	mrseq	r0, R12_usr
    3a9c:	0172ab03 	cmneq	r2, r3, lsl #22
    3aa0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3aa4:	00140104 	andseq	r0, r4, r4, lsl #2
    3aa8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3aac:	01040200 	mrseq	r0, R12_usr
    3ab0:	02002006 	andeq	r2, r0, #6
    3ab4:	2f060104 	svccs	0x00060104
    3ab8:	01040200 	mrseq	r0, R12_usr
    3abc:	01040106 	tsteq	r4, r6, lsl #2
    3ac0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3ac4:	d0030104 	andle	r0, r3, r4, lsl #2
    3ac8:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    3acc:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    3ad0:	02040200 	andeq	r0, r4, #0, 4
    3ad4:	000c0515 	andeq	r0, ip, r5, lsl r5
    3ad8:	06020402 	streq	r0, [r2], -r2, lsl #8
    3adc:	00060501 	andeq	r0, r6, r1, lsl #10
    3ae0:	20020402 	andcs	r0, r2, r2, lsl #8
    3ae4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3ae8:	30060204 	andcc	r0, r6, r4, lsl #4
    3aec:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3af0:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    3af4:	04020007 	streq	r0, [r2], #-7
    3af8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3afc:	04020006 	streq	r0, [r2], #-6
    3b00:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
    3b04:	01040200 	mrseq	r0, R12_usr
    3b08:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    3b0c:	00010104 	andeq	r0, r1, r4, lsl #2
    3b10:	01010402 	tsteq	r1, r2, lsl #8
    3b14:	01040200 	mrseq	r0, R12_usr
    3b18:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3b1c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3b20:	71ed0301 	mvnvc	r0, r1, lsl #6
    3b24:	00050520 	andeq	r0, r5, r0, lsr #10
    3b28:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3b2c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3b30:	00140104 	andseq	r0, r4, r4, lsl #2
    3b34:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3b3c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3b40:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b44:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3b48:	04020005 	streq	r0, [r2], #-5
    3b4c:	0e8e0301 	cdpeq	3, 8, cr0, cr14, cr1, {0}
    3b50:	04020001 	streq	r0, [r2], #-1
    3b54:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3b58:	001f0502 	andseq	r0, pc, r2, lsl #10
    3b5c:	03010402 	movweq	r0, #5122	; 0x1402
    3b60:	050172a0 	streq	r7, [r1, #-672]	; 0xfffffd60
    3b64:	04020004 	streq	r0, [r2], #-4
    3b68:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3b6c:	00140104 	andseq	r0, r4, r4, lsl #2
    3b70:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b74:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3b78:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3b7c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b80:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3b84:	04020005 	streq	r0, [r2], #-5
    3b88:	0ddb0301 	ldcleq	3, cr0, [fp, #4]
    3b8c:	04020001 	streq	r0, [r2], #-1
    3b90:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3b94:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3b98:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    3b9c:	01060204 	tsteq	r6, r4, lsl #4
    3ba0:	02000805 	andeq	r0, r0, #327680	; 0x50000
    3ba4:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3ba8:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    3bac:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3bb0:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    3bb4:	2001060b 	andcs	r0, r1, fp, lsl #12
    3bb8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    3bbc:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    3bc0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3bc4:	09052016 	stmdbeq	r5, {r1, r2, r4, sp}
    3bc8:	00050520 	andeq	r0, r5, r0, lsr #10
    3bcc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bd0:	002e6d03 	eoreq	r6, lr, r3, lsl #26
    3bd4:	01010402 	tsteq	r1, r2, lsl #8
    3bd8:	01040200 	mrseq	r0, R12_usr
    3bdc:	04020001 	streq	r0, [r2], #-1
    3be0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3be4:	02001f05 	andeq	r1, r0, #5, 30
    3be8:	f3030104 	vrhadd.u8	d0, d3, d4
    3bec:	05052071 	streq	r2, [r5, #-113]	; 0xffffff8f
    3bf0:	01040200 	mrseq	r0, R12_usr
    3bf4:	00040514 	andeq	r0, r4, r4, lsl r5
    3bf8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3bfc:	01040200 	mrseq	r0, R12_usr
    3c00:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3c04:	2f060104 	svccs	0x00060104
    3c08:	01040200 	mrseq	r0, R12_usr
    3c0c:	01040106 	tsteq	r4, r6, lsl #2
    3c10:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3c14:	88030104 	stmdahi	r3, {r2, r8}
    3c18:	0200010e 	andeq	r0, r0, #-2147483645	; 0x80000003
    3c1c:	2e060104 	adfcss	f0, f6, f4
    3c20:	1f050204 	svcne	0x00050204
    3c24:	01040200 	mrseq	r0, R12_usr
    3c28:	0172a603 	cmneq	r2, r3, lsl #12
    3c2c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3c30:	00140104 	andseq	r0, r4, r4, lsl #2
    3c34:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3c38:	01040200 	mrseq	r0, R12_usr
    3c3c:	02002006 	andeq	r2, r0, #6
    3c40:	2f060104 	svccs	0x00060104
    3c44:	01040200 	mrseq	r0, R12_usr
    3c48:	01040106 	tsteq	r4, r6, lsl #2
    3c4c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3c50:	d5030104 	strle	r0, [r3, #-260]	; 0xfffffefc
    3c54:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    3c58:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3c5c:	19030607 	stmdbne	r3, {r0, r1, r2, r9, sl}
    3c60:	061a0501 	ldreq	r0, [sl], -r1, lsl #10
    3c64:	06070501 	streq	r0, [r7], -r1, lsl #10
    3c68:	06160531 			; <UNDEFINED> instruction: 0x06160531
    3c6c:	06070501 	streq	r0, [r7], -r1, lsl #10
    3c70:	061c053d 			; <UNDEFINED> instruction: 0x061c053d
    3c74:	06070501 	streq	r0, [r7], -r1, lsl #10
    3c78:	05200628 	streq	r0, [r0, #-1576]!	; 0xfffff9d8
    3c7c:	05430605 	strbeq	r0, [r3, #-1541]	; 0xfffff9fb
    3c80:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3c84:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    3c88:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3c8c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    3c90:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3c94:	06280605 	strteq	r0, [r8], -r5, lsl #12
    3c98:	06030520 	streq	r0, [r3], -r0, lsr #10
    3c9c:	06010532 			; <UNDEFINED> instruction: 0x06010532
    3ca0:	02022e13 	andeq	r2, r2, #304	; 0x130
    3ca4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3ca8:	02050001 	andeq	r0, r5, #1
    3cac:	00000000 	andeq	r0, r0, r0
    3cb0:	011baf03 	tsteq	fp, r3, lsl #30
    3cb4:	03050106 	movweq	r0, #20742	; 0x5106
    3cb8:	17052106 	strne	r2, [r5, -r6, lsl #2]
    3cbc:	03050106 	movweq	r0, #20742	; 0x5106
    3cc0:	16052206 	strne	r2, [r5], -r6, lsl #4
    3cc4:	03050106 	movweq	r0, #20742	; 0x5106
    3cc8:	12053106 	andne	r3, r5, #-2147483647	; 0x80000001
    3ccc:	03050106 	movweq	r0, #20742	; 0x5106
    3cd0:	18053d06 	stmdane	r5, {r1, r2, r8, sl, fp, ip, sp}
    3cd4:	03050106 	movweq	r0, #20742	; 0x5106
    3cd8:	01052806 	tsteq	r5, r6, lsl #16
    3cdc:	01023006 	tsteq	r2, r6
    3ce0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3ce4:	02050001 	andeq	r0, r5, #1
    3ce8:	08000da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp}
    3cec:	01159903 	tsteq	r5, r3, lsl #18
    3cf0:	13140305 	tstne	r4, #335544320	; 0x14000000
    3cf4:	17060105 	strne	r0, [r6, -r5, lsl #2]
    3cf8:	01000102 	tsteq	r0, r2, lsl #2
    3cfc:	00010501 	andeq	r0, r1, r1, lsl #10
    3d00:	0da60205 	sfmeq	f0, 4, [r6, #20]!
    3d04:	8a030800 	bhi	c5d0c <_Min_Heap_Size+0xc550c>
    3d08:	0305011c 	movweq	r0, #20764	; 0x511c
    3d0c:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    3d10:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3d14:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    3d18:	15053006 	strne	r3, [r5, #-6]
    3d1c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3d20:	06070520 	streq	r0, [r7], -r0, lsr #10
    3d24:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    3d28:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3d2c:	14210607 	strtne	r0, [r1], #-1543	; 0xfffff9f9
    3d30:	01060a05 	tsteq	r6, r5, lsl #20
    3d34:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    3d38:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3d3c:	0402007c 	streq	r0, [r2], #-124	; 0xffffff84
    3d40:	6d052e02 	stcvs	14, cr2, [r5, #-8]
    3d44:	02040200 	andeq	r0, r4, #0, 4
    3d48:	06090520 	streq	r0, [r9], -r0, lsr #10
    3d4c:	06260530 			; <UNDEFINED> instruction: 0x06260530
    3d50:	20300501 	eorscs	r0, r0, r1, lsl #10
    3d54:	05201505 	streq	r1, [r0, #-1285]!	; 0xfffffafb
    3d58:	05260607 	streq	r0, [r6, #-1543]!	; 0xfffff9f9
    3d5c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    3d60:	053f0605 	ldreq	r0, [pc, #-1541]!	; 3763 <_Min_Heap_Size+0x2f63>
    3d64:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3d68:	08052e09 	stmdaeq	r5, {r0, r3, r9, sl, fp, sp}
    3d6c:	0301052e 	movweq	r0, #5422	; 0x152e
    3d70:	07053c62 	streq	r3, [r5, -r2, ror #24]
    3d74:	2e210306 	cdpcs	3, 2, cr0, cr1, cr6, {0}
    3d78:	055b5b5b 	ldrbeq	r5, [fp, #-2907]	; 0xfffff4a5
    3d7c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3d80:	053f0607 	ldreq	r0, [pc, #-1543]!	; 3781 <_Min_Heap_Size+0x2f81>
    3d84:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3d88:	05320607 	ldreq	r0, [r2, #-1543]!	; 0xfffff9f9
    3d8c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3d90:	0905200a 	stmdbeq	r5, {r1, r3, sp}
    3d94:	1e053106 	adfnes	f3, f5, f6
    3d98:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3d9c:	01040200 	mrseq	r0, R12_usr
    3da0:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    3da4:	00010104 	andeq	r0, r1, r4, lsl #2
    3da8:	01010402 	tsteq	r1, r2, lsl #8
    3dac:	01040200 	mrseq	r0, R12_usr
    3db0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3db4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3db8:	679a0301 	ldrvs	r0, [sl, r1, lsl #6]
    3dbc:	00050520 	andeq	r0, r5, r0, lsr #10
    3dc0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3dc4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3dc8:	00140104 	andseq	r0, r4, r4, lsl #2
    3dcc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3dd0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3dd4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3dd8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ddc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3de0:	04020009 	streq	r0, [r2], #-9
    3de4:	18e10301 	stmiane	r1!, {r0, r8, r9}^
    3de8:	04020001 	streq	r0, [r2], #-1
    3dec:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3df0:	001f0502 	andseq	r0, pc, r2, lsl #10
    3df4:	03010402 	movweq	r0, #5122	; 0x1402
    3df8:	050167cd 	streq	r6, [r1, #-1997]	; 0xfffff833
    3dfc:	04020004 	streq	r0, [r2], #-4
    3e00:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3e04:	00140104 	andseq	r0, r4, r4, lsl #2
    3e08:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e0c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3e10:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3e14:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e18:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3e1c:	04020009 	streq	r0, [r2], #-9
    3e20:	18ae0301 	stmiane	lr!, {r0, r8, r9}
    3e24:	04020001 	streq	r0, [r2], #-1
    3e28:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3e2c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3e30:	02000d05 	andeq	r0, r0, #320	; 0x140
    3e34:	01060204 	tsteq	r6, r4, lsl #4
    3e38:	02040200 	andeq	r0, r4, #0, 4
    3e3c:	000c0520 	andeq	r0, ip, r0, lsr #10
    3e40:	20020402 	andcs	r0, r2, r2, lsl #8
    3e44:	3f060b05 	svccc	0x00060b05
    3e48:	2e2e2e01 	cdpcs	14, 2, cr2, cr14, cr1, {0}
    3e4c:	01040200 	mrseq	r0, R12_usr
    3e50:	00090520 	andeq	r0, r9, r0, lsr #10
    3e54:	1a010402 	bne	44e64 <_Min_Heap_Size+0x44664>
    3e58:	0f030705 	svceq	0x00030705
    3e5c:	060e053c 			; <UNDEFINED> instruction: 0x060e053c
    3e60:	28010501 	stmdacs	r1, {r0, r8, sl}
    3e64:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    3e68:	ab030104 	blge	c4280 <_Min_Heap_Size+0xc3a80>
    3e6c:	38053c7f 	stmdacc	r5, {r0, r1, r2, r3, r4, r5, r6, sl, fp, ip, sp}
    3e70:	01040200 	mrseq	r0, R12_usr
    3e74:	06070520 	streq	r0, [r7], -r0, lsr #10
    3e78:	13051330 	movwne	r1, #21296	; 0x5330
    3e7c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3e80:	26052106 	strcs	r2, [r5], -r6, lsl #2
    3e84:	30050106 	andcc	r0, r5, r6, lsl #2
    3e88:	20160520 	andscs	r0, r6, r0, lsr #10
    3e8c:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    3e90:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    3e94:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    3e98:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    3e9c:	0626054a 	strteq	r0, [r6], -sl, asr #10
    3ea0:	20300501 	eorscs	r0, r0, r1, lsl #10
    3ea4:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    3ea8:	09052e15 	stmdbeq	r5, {r0, r2, r4, r9, sl, fp, sp}
    3eac:	2e370306 	cdpcs	3, 3, cr0, cr7, cr6, {0}
    3eb0:	0c052e06 	stceq	14, cr2, [r5], {6}
    3eb4:	20200a03 	eorcs	r0, r0, r3, lsl #20
    3eb8:	2601051c 			; <UNDEFINED> instruction: 0x2601051c
    3ebc:	01000102 	tsteq	r0, r2, lsl #2
    3ec0:	00010501 	andeq	r0, r1, r1, lsl #10
    3ec4:	0e8c0205 	cdpeq	2, 8, cr0, cr12, cr5, {0}
    3ec8:	ae030800 	cdpge	8, 0, cr0, cr3, cr0, {0}
    3ecc:	01060112 	tsteq	r6, r2, lsl r1
    3ed0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3ed4:	01061905 	tsteq	r6, r5, lsl #18
    3ed8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    3edc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    3ee0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3ee4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    3ee8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3eec:	13210603 			; <UNDEFINED> instruction: 0x13210603
    3ef0:	06051315 			; <UNDEFINED> instruction: 0x06051315
    3ef4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3ef8:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    3efc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3f00:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3f04:	03053c01 	movweq	r3, #23553	; 0x5c01
    3f08:	06054406 	streq	r4, [r5], -r6, lsl #8
    3f0c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    3f10:	01040200 	mrseq	r0, R12_usr
    3f14:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3f18:	21052e01 	tstcs	r5, r1, lsl #28
    3f1c:	06030521 	streq	r0, [r3], -r1, lsr #10
    3f20:	3c00eb03 			; <UNDEFINED> instruction: 0x3c00eb03
    3f24:	01060d05 	tsteq	r6, r5, lsl #26
    3f28:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    3f2c:	dd030603 	stcle	6, cr0, [r3, #-12]
    3f30:	06052e00 	streq	r2, [r5], -r0, lsl #28
    3f34:	2c050106 	stfcss	f0, [r5], {6}
    3f38:	01040200 	mrseq	r0, R12_usr
    3f3c:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    3f40:	06060551 			; <UNDEFINED> instruction: 0x06060551
    3f44:	002b0501 	eoreq	r0, fp, r1, lsl #10
    3f48:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3f4c:	054f0105 	strbeq	r0, [pc, #-261]	; 3e4f <_Min_Heap_Size+0x364f>
    3f50:	a5030607 	strge	r0, [r3, #-1543]	; 0xfffff9f9
    3f54:	20062e7e 	andcs	r2, r6, lr, ror lr
    3f58:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    3f5c:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    3f60:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3f64:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    3f68:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3f6c:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    3f70:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3f74:	08054e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, lr}
    3f78:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3f7c:	01040200 	mrseq	r0, R12_usr
    3f80:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    3f84:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    3f88:	06050501 	streq	r0, [r5], -r1, lsl #10
    3f8c:	0608054e 	streq	r0, [r8], -lr, asr #10
    3f90:	002d0501 	eoreq	r0, sp, r1, lsl #10
    3f94:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3f98:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    3f9c:	01061805 	tsteq	r6, r5, lsl #16
    3fa0:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    3fa4:	01060805 	tsteq	r6, r5, lsl #16
    3fa8:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    3fac:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3fb0:	07053d32 	smladxeq	r5, r2, sp, r3
    3fb4:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    3fb8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3fbc:	0e054e06 	cdpeq	14, 0, cr4, cr5, cr6, {0}
    3fc0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3fc4:	06070520 	streq	r0, [r7], -r0, lsr #10
    3fc8:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    3fcc:	00310501 	eorseq	r0, r1, r1, lsl #10
    3fd0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3fd4:	43060705 	movwmi	r0, #26373	; 0x6705
    3fd8:	01061405 	tsteq	r6, r5, lsl #8
    3fdc:	4b060705 	blmi	185bf8 <_Min_Heap_Size+0x1853f8>
    3fe0:	01061205 	tsteq	r6, r5, lsl #4
    3fe4:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    3fe8:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3fec:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    3ff0:	053f2506 	ldreq	r2, [pc, #-1286]!	; 3af2 <_Min_Heap_Size+0x32f2>
    3ff4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    3ff8:	0b052e0c 	bleq	14f830 <_Min_Heap_Size+0x14f030>
    3ffc:	01040200 	mrseq	r0, R12_usr
    4000:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    4004:	00010104 	andeq	r0, r1, r4, lsl #2
    4008:	01010402 	tsteq	r1, r2, lsl #8
    400c:	01040200 	mrseq	r0, R12_usr
    4010:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4014:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4018:	70e70301 	rscvc	r0, r7, r1, lsl #6
    401c:	00050520 	andeq	r0, r5, r0, lsr #10
    4020:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4024:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4028:	00140104 	andseq	r0, r4, r4, lsl #2
    402c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4030:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4034:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4038:	06010402 	streq	r0, [r1], -r2, lsl #8
    403c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4040:	0402000b 	streq	r0, [r2], #-11
    4044:	0f940301 	svceq	0x00940301
    4048:	04020001 	streq	r0, [r2], #-1
    404c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4050:	001f0502 	andseq	r0, pc, r2, lsl #10
    4054:	03010402 	movweq	r0, #5122	; 0x1402
    4058:	0501719a 	streq	r7, [r1, #-410]	; 0xfffffe66
    405c:	04020004 	streq	r0, [r2], #-4
    4060:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4064:	00140104 	andseq	r0, r4, r4, lsl #2
    4068:	06010402 	streq	r0, [r1], -r2, lsl #8
    406c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4070:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4074:	06010402 	streq	r0, [r1], -r2, lsl #8
    4078:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    407c:	0402000b 	streq	r0, [r2], #-11
    4080:	0ee10301 	cdpeq	3, 14, cr0, cr1, cr1, {0}
    4084:	04020001 	streq	r0, [r2], #-1
    4088:	002e0602 	eoreq	r0, lr, r2, lsl #12
    408c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    4090:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    4094:	01060204 	tsteq	r6, r4, lsl #4
    4098:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    409c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    40a0:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    40a4:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    40a8:	052f060d 	streq	r0, [pc, #-1549]!	; 3aa3 <_Min_Heap_Size+0x32a3>
    40ac:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    40b0:	0f053c10 	svceq	0x00053c10
    40b4:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    40b8:	1c050106 	stfnes	f0, [r5], {6}
    40bc:	200f0520 	andcs	r0, pc, r0, lsr #10
    40c0:	03060905 	movweq	r0, #26885	; 0x6905
    40c4:	20062e65 	andcs	r2, r6, r5, ror #28
    40c8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    40cc:	05202603 	streq	r2, [r0, #-1539]!	; 0xfffff9fd
    40d0:	4a0c030b 	bmi	304d04 <_Min_Heap_Size+0x304504>
    40d4:	0d030905 	vstreq.16	s0, [r3, #-10]	; <UNPREDICTABLE>
    40d8:	1a053f4a 	bne	153e08 <_Min_Heap_Size+0x153608>
    40dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    40e0:	07053106 	streq	r3, [r5, -r6, lsl #2]
    40e4:	054b2606 	strbeq	r2, [fp, #-1542]	; 0xfffff9fa
    40e8:	014c0605 	cmpeq	ip, r5, lsl #12
    40ec:	20062006 	andcs	r2, r6, r6
    40f0:	15202e2e 	strne	r2, [r0, #-3630]!	; 0xfffff1d2
    40f4:	01060905 	tsteq	r6, r5, lsl #18
    40f8:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    40fc:	05420607 	strbeq	r0, [r2, #-1543]	; 0xfffff9f9
    4100:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    4104:	07053c10 	smladeq	r5, r0, ip, r3
    4108:	0a052106 	beq	14c528 <_Min_Heap_Size+0x14bd28>
    410c:	2b050106 	blcs	14452c <_Min_Heap_Size+0x143d2c>
    4110:	200b053d 	andcs	r0, fp, sp, lsr r5
    4114:	3f060905 	svccc	0x00060905
    4118:	01061c05 	tsteq	r6, r5, lsl #24
    411c:	23060905 	movwcs	r0, #26885	; 0x6905
    4120:	01062005 	tsteq	r6, r5
    4124:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    4128:	0402000b 	streq	r0, [r2], #-11
    412c:	003f0601 	eorseq	r0, pc, r1, lsl #12
    4130:	01010402 	tsteq	r1, r2, lsl #8
    4134:	01040200 	mrseq	r0, R12_usr
    4138:	04020001 	streq	r0, [r2], #-1
    413c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4140:	02001f05 	andeq	r1, r0, #5, 30
    4144:	95030104 	strls	r0, [r3, #-260]	; 0xfffffefc
    4148:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    414c:	01040200 	mrseq	r0, R12_usr
    4150:	00040514 	andeq	r0, r4, r4, lsl r5
    4154:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4158:	01040200 	mrseq	r0, R12_usr
    415c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4160:	2f060104 	svccs	0x00060104
    4164:	01040200 	mrseq	r0, R12_usr
    4168:	01040106 	tsteq	r4, r6, lsl #2
    416c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4170:	e6030104 	str	r0, [r3], -r4, lsl #2
    4174:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4178:	2e060104 	adfcss	f0, f6, f4
    417c:	1f050204 	svcne	0x00050204
    4180:	01040200 	mrseq	r0, R12_usr
    4184:	0170c803 	cmneq	r0, r3, lsl #16
    4188:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    418c:	00140104 	andseq	r0, r4, r4, lsl #2
    4190:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4194:	01040200 	mrseq	r0, R12_usr
    4198:	02002006 	andeq	r2, r0, #6
    419c:	2f060104 	svccs	0x00060104
    41a0:	01040200 	mrseq	r0, R12_usr
    41a4:	01040106 	tsteq	r4, r6, lsl #2
    41a8:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    41ac:	b3030104 	movwlt	r0, #12548	; 0x3104
    41b0:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    41b4:	002e0104 	eoreq	r0, lr, r4, lsl #2
    41b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    41bc:	04020001 	streq	r0, [r2], #-1
    41c0:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    41c4:	00010104 	andeq	r0, r1, r4, lsl #2
    41c8:	01010402 	tsteq	r1, r2, lsl #8
    41cc:	01040200 	mrseq	r0, R12_usr
    41d0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    41d4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    41d8:	70940301 	addsvc	r0, r4, r1, lsl #6
    41dc:	00050520 	andeq	r0, r5, r0, lsr #10
    41e0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    41e4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    41e8:	00140104 	andseq	r0, r4, r4, lsl #2
    41ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    41f0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    41f4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    41f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    41fc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4200:	0402000b 	streq	r0, [r2], #-11
    4204:	0fe70301 	svceq	0x00e70301
    4208:	04020001 	streq	r0, [r2], #-1
    420c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4210:	001f0502 	andseq	r0, pc, r2, lsl #10
    4214:	03010402 	movweq	r0, #5122	; 0x1402
    4218:	050170c7 	streq	r7, [r1, #-199]	; 0xffffff39
    421c:	04020004 	streq	r0, [r2], #-4
    4220:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4224:	00140104 	andseq	r0, r4, r4, lsl #2
    4228:	06010402 	streq	r0, [r1], -r2, lsl #8
    422c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4230:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4234:	06010402 	streq	r0, [r1], -r2, lsl #8
    4238:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    423c:	0402000b 	streq	r0, [r2], #-11
    4240:	0fb40301 	svceq	0x00b40301
    4244:	04020001 	streq	r0, [r2], #-1
    4248:	02002e01 	andeq	r2, r0, #1, 28
    424c:	01060104 	tsteq	r6, r4, lsl #2
    4250:	01040200 	mrseq	r0, R12_usr
    4254:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4258:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    425c:	00010104 	andeq	r0, r1, r4, lsl #2
    4260:	01010402 	tsteq	r1, r2, lsl #8
    4264:	1f050204 	svcne	0x00050204
    4268:	01040200 	mrseq	r0, R12_usr
    426c:	20709003 	rsbscs	r9, r0, r3
    4270:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4274:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4278:	04020004 	streq	r0, [r2], #-4
    427c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4280:	2e060104 	adfcss	f0, f6, f4
    4284:	01040200 	mrseq	r0, R12_usr
    4288:	02002f06 	andeq	r2, r0, #6, 30
    428c:	01060104 	tsteq	r6, r4, lsl #2
    4290:	0b050104 	bleq	1446a8 <_Min_Heap_Size+0x143ea8>
    4294:	01040200 	mrseq	r0, R12_usr
    4298:	010feb03 	tsteq	pc, r3, lsl #22
    429c:	01040200 	mrseq	r0, R12_usr
    42a0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    42a4:	02001f05 	andeq	r1, r0, #5, 30
    42a8:	c3030104 	movwgt	r0, #12548	; 0x3104
    42ac:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    42b0:	01040200 	mrseq	r0, R12_usr
    42b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    42b8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    42bc:	20060104 	andcs	r0, r6, r4, lsl #2
    42c0:	01040200 	mrseq	r0, R12_usr
    42c4:	02002f06 	andeq	r2, r0, #6, 30
    42c8:	01060104 	tsteq	r6, r4, lsl #2
    42cc:	0b050104 	bleq	1446e4 <_Min_Heap_Size+0x143ee4>
    42d0:	01040200 	mrseq	r0, R12_usr
    42d4:	010fb803 	tsteq	pc, r3, lsl #16
    42d8:	02040200 	andeq	r0, r4, #0, 4
    42dc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    42e0:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    42e4:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    42e8:	00010602 	andeq	r0, r1, r2, lsl #12
    42ec:	20020402 	andcs	r0, r2, r2, lsl #8
    42f0:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    42f4:	2f060204 	svccs	0x00060204
    42f8:	02002005 	andeq	r2, r0, #5
    42fc:	01060204 	tsteq	r6, r4, lsl #4
    4300:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4304:	30060104 	andcc	r0, r6, r4, lsl #2
    4308:	01040200 	mrseq	r0, R12_usr
    430c:	04020001 	streq	r0, [r2], #-1
    4310:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4314:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4318:	001f0502 	andseq	r0, pc, r2, lsl #10
    431c:	03010402 	movweq	r0, #5122	; 0x1402
    4320:	0520708a 	streq	r7, [r0, #-138]!	; 0xffffff76
    4324:	04020005 	streq	r0, [r2], #-5
    4328:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    432c:	01040200 	mrseq	r0, R12_usr
    4330:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4334:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4338:	06010402 	streq	r0, [r1], -r2, lsl #8
    433c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4340:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4344:	000b0501 	andeq	r0, fp, r1, lsl #10
    4348:	03010402 	movweq	r0, #5122	; 0x1402
    434c:	00010ff1 	strdeq	r0, [r1], -r1
    4350:	06010402 	streq	r0, [r1], -r2, lsl #8
    4354:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4358:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    435c:	70bd0301 	adcsvc	r0, sp, r1, lsl #6
    4360:	00040501 	andeq	r0, r4, r1, lsl #10
    4364:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4368:	01040200 	mrseq	r0, R12_usr
    436c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4370:	00200601 	eoreq	r0, r0, r1, lsl #12
    4374:	06010402 	streq	r0, [r1], -r2, lsl #8
    4378:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    437c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4380:	000b0501 	andeq	r0, fp, r1, lsl #10
    4384:	03010402 	movweq	r0, #5122	; 0x1402
    4388:	00010fbe 			; <UNDEFINED> instruction: 0x00010fbe
    438c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4390:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4394:	11051502 	tstne	r5, r2, lsl #10
    4398:	02040200 	andeq	r0, r4, #0, 4
    439c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    43a0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    43a4:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    43a8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    43ac:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    43b0:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    43b4:	09052045 	stmdbeq	r5, {r0, r2, r6, sp}
    43b8:	0607052e 	streq	r0, [r7], -lr, lsr #10
    43bc:	0620065b 			; <UNDEFINED> instruction: 0x0620065b
    43c0:	06220519 			; <UNDEFINED> instruction: 0x06220519
    43c4:	20360501 	eorscs	r0, r6, r1, lsl #10
    43c8:	052e1005 	streq	r1, [lr, #-5]!
    43cc:	052f0607 	streq	r0, [pc, #-1543]!	; 3dcd <_Min_Heap_Size+0x35cd>
    43d0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    43d4:	0b052e0a 	bleq	14fc04 <_Min_Heap_Size+0x14f404>
    43d8:	0009053d 	andeq	r0, r9, sp, lsr r5
    43dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    43e0:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    43e4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    43e8:	00010104 	andeq	r0, r1, r4, lsl #2
    43ec:	01010402 	tsteq	r1, r2, lsl #8
    43f0:	1f050204 	svcne	0x00050204
    43f4:	01040200 	mrseq	r0, R12_usr
    43f8:	206fec03 	rsbcs	lr, pc, r3, lsl #24
    43fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4400:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4404:	04020004 	streq	r0, [r2], #-4
    4408:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    440c:	2e060104 	adfcss	f0, f6, f4
    4410:	01040200 	mrseq	r0, R12_usr
    4414:	02002f06 	andeq	r2, r0, #6, 30
    4418:	01060104 	tsteq	r6, r4, lsl #2
    441c:	09050104 	stmdbeq	r5, {r2, r8}
    4420:	01040200 	mrseq	r0, R12_usr
    4424:	01108f03 	tsteq	r0, r3, lsl #30
    4428:	01040200 	mrseq	r0, R12_usr
    442c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4430:	02001f05 	andeq	r1, r0, #5, 30
    4434:	9f030104 	svcls	0x00030104
    4438:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    443c:	01040200 	mrseq	r0, R12_usr
    4440:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4444:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4448:	20060104 	andcs	r0, r6, r4, lsl #2
    444c:	01040200 	mrseq	r0, R12_usr
    4450:	02002f06 	andeq	r2, r0, #6, 30
    4454:	01060104 	tsteq	r6, r4, lsl #2
    4458:	09050104 	stmdbeq	r5, {r2, r8}
    445c:	01040200 	mrseq	r0, R12_usr
    4460:	010fdc03 	tsteq	pc, r3, lsl #24
    4464:	01040200 	mrseq	r0, R12_usr
    4468:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    446c:	00010601 	andeq	r0, r1, r1, lsl #12
    4470:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    4474:	01040200 	mrseq	r0, R12_usr
    4478:	04020001 	streq	r0, [r2], #-1
    447c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4480:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4484:	001f0502 	andseq	r0, pc, r2, lsl #10
    4488:	03010402 	movweq	r0, #5122	; 0x1402
    448c:	05206fe9 	streq	r6, [r0, #-4073]!	; 0xfffff017
    4490:	04020005 	streq	r0, [r2], #-5
    4494:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4498:	01040200 	mrseq	r0, R12_usr
    449c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    44a0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    44a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    44a8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    44ac:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    44b0:	00090501 	andeq	r0, r9, r1, lsl #10
    44b4:	03010402 	movweq	r0, #5122	; 0x1402
    44b8:	00011092 	muleq	r1, r2, r0
    44bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    44c0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    44c4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    44c8:	709c0301 	addsvc	r0, ip, r1, lsl #6
    44cc:	00040501 	andeq	r0, r4, r1, lsl #10
    44d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    44d4:	01040200 	mrseq	r0, R12_usr
    44d8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    44dc:	00200601 	eoreq	r0, r0, r1, lsl #12
    44e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    44e4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    44e8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    44ec:	00090501 	andeq	r0, r9, r1, lsl #10
    44f0:	03010402 	movweq	r0, #5122	; 0x1402
    44f4:	00010fdf 	ldrdeq	r0, [r1], -pc	; <UNPREDICTABLE>
    44f8:	06020402 	streq	r0, [r2], -r2, lsl #8
    44fc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4500:	18051502 	stmdane	r5, {r1, r8, sl, ip}
    4504:	02040200 	andeq	r0, r4, #0, 4
    4508:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    450c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4510:	04020009 	streq	r0, [r2], #-9
    4514:	052f0602 	streq	r0, [pc, #-1538]!	; 3f1a <_Min_Heap_Size+0x371a>
    4518:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    451c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4520:	04020009 	streq	r0, [r2], #-9
    4524:	00300601 	eorseq	r0, r0, r1, lsl #12
    4528:	01010402 	tsteq	r1, r2, lsl #8
    452c:	01040200 	mrseq	r0, R12_usr
    4530:	04020001 	streq	r0, [r2], #-1
    4534:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4538:	02001f05 	andeq	r1, r0, #5, 30
    453c:	e3030104 	movw	r0, #12548	; 0x3104
    4540:	0505206f 	streq	r2, [r5, #-111]	; 0xffffff91
    4544:	01040200 	mrseq	r0, R12_usr
    4548:	00040514 	andeq	r0, r4, r4, lsl r5
    454c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4550:	01040200 	mrseq	r0, R12_usr
    4554:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4558:	2f060104 	svccs	0x00060104
    455c:	01040200 	mrseq	r0, R12_usr
    4560:	01040106 	tsteq	r4, r6, lsl #2
    4564:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4568:	98030104 	stmdals	r3, {r2, r8}
    456c:	02000110 	andeq	r0, r0, #16, 2
    4570:	2e060104 	adfcss	f0, f6, f4
    4574:	1f050204 	svcne	0x00050204
    4578:	01040200 	mrseq	r0, R12_usr
    457c:	01709603 	cmneq	r0, r3, lsl #12
    4580:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4584:	00140104 	andseq	r0, r4, r4, lsl #2
    4588:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    458c:	01040200 	mrseq	r0, R12_usr
    4590:	02002006 	andeq	r2, r0, #6
    4594:	2f060104 	svccs	0x00060104
    4598:	01040200 	mrseq	r0, R12_usr
    459c:	01040106 	tsteq	r4, r6, lsl #2
    45a0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    45a4:	e5030104 	str	r0, [r3, #-260]	; 0xfffffefc
    45a8:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    45ac:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    45b0:	02040200 	andeq	r0, r4, #0, 4
    45b4:	001c0516 	andseq	r0, ip, r6, lsl r5
    45b8:	06020402 	streq	r0, [r2], -r2, lsl #8
    45bc:	04020001 	streq	r0, [r2], #-1
    45c0:	09052002 	stmdbeq	r5, {r1, sp}
    45c4:	02040200 	andeq	r0, r4, #0, 4
    45c8:	07052706 	streq	r2, [r5, -r6, lsl #14]
    45cc:	02040200 	andeq	r0, r4, #0, 4
    45d0:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    45d4:	05200602 	streq	r0, [r0, #-1538]!	; 0xfffff9fe
    45d8:	06190605 	ldreq	r0, [r9], -r5, lsl #12
    45dc:	262f0620 	strtcs	r0, [pc], -r0, lsr #12
    45e0:	2f062006 	svccs	0x00062006
    45e4:	01000302 	tsteq	r0, r2, lsl #6
    45e8:	00010501 	andeq	r0, r1, r1, lsl #10
    45ec:	00000205 	andeq	r0, r0, r5, lsl #4
    45f0:	a0030000 	andge	r0, r3, r0
    45f4:	01060118 	tsteq	r6, r8, lsl r1
    45f8:	21060305 	tstcs	r6, r5, lsl #6
    45fc:	01061705 	tsteq	r6, r5, lsl #14
    4600:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
    4604:	01061605 	tsteq	r6, r5, lsl #12
    4608:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
    460c:	01060c05 	tsteq	r6, r5, lsl #24
    4610:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    4614:	12030605 	andne	r0, r3, #5242880	; 0x500000
    4618:	0601052e 	streq	r0, [r1], -lr, lsr #10
    461c:	06050531 			; <UNDEFINED> instruction: 0x06050531
    4620:	05207203 	streq	r7, [r0, #-515]!	; 0xfffffdfd
    4624:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    4628:	023c2005 	eorseq	r2, ip, #5
    462c:	01010001 	tsteq	r1, r1
    4630:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4634:	00000002 	andeq	r0, r0, r2
    4638:	17e20300 	strbne	r0, [r2, r0, lsl #6]!
    463c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4640:	052f0603 	streq	r0, [pc, #-1539]!	; 4045 <_Min_Heap_Size+0x3845>
    4644:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4648:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    464c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4650:	06052016 			; <UNDEFINED> instruction: 0x06052016
    4654:	06050520 	streq	r0, [r5], -r0, lsr #10
    4658:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    465c:	00050501 	andeq	r0, r5, r1, lsl #10
    4660:	06010402 	streq	r0, [r1], -r2, lsl #8
    4664:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4668:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    466c:	00010104 	andeq	r0, r1, r4, lsl #2
    4670:	01010402 	tsteq	r1, r2, lsl #8
    4674:	1f050204 	svcne	0x00050204
    4678:	01040200 	mrseq	r0, R12_usr
    467c:	206bf003 	rsbcs	pc, fp, r3
    4680:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4684:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4688:	04020004 	streq	r0, [r2], #-4
    468c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4690:	2e060104 	adfcss	f0, f6, f4
    4694:	01040200 	mrseq	r0, R12_usr
    4698:	02002f06 	andeq	r2, r0, #6, 30
    469c:	01060104 	tsteq	r6, r4, lsl #2
    46a0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    46a4:	01040200 	mrseq	r0, R12_usr
    46a8:	01148b03 	tsteq	r4, r3, lsl #22
    46ac:	01040200 	mrseq	r0, R12_usr
    46b0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    46b4:	02001f05 	andeq	r1, r0, #5, 30
    46b8:	a3030104 	movwge	r0, #12548	; 0x3104
    46bc:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    46c0:	01040200 	mrseq	r0, R12_usr
    46c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    46c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    46cc:	20060104 	andcs	r0, r6, r4, lsl #2
    46d0:	01040200 	mrseq	r0, R12_usr
    46d4:	02002f06 	andeq	r2, r0, #6, 30
    46d8:	01060104 	tsteq	r6, r4, lsl #2
    46dc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    46e0:	01040200 	mrseq	r0, R12_usr
    46e4:	0113d803 	tsteq	r3, r3, lsl #16
    46e8:	01040200 	mrseq	r0, R12_usr
    46ec:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    46f0:	00010601 	andeq	r0, r1, r1, lsl #12
    46f4:	13010402 	movwne	r0, #5122	; 0x1402
    46f8:	01040200 	mrseq	r0, R12_usr
    46fc:	04020001 	streq	r0, [r2], #-1
    4700:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4704:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4708:	001f0502 	andseq	r0, pc, r2, lsl #10
    470c:	03010402 	movweq	r0, #5122	; 0x1402
    4710:	05206bef 	streq	r6, [r0, #-3055]!	; 0xfffff411
    4714:	04020005 	streq	r0, [r2], #-5
    4718:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    471c:	01040200 	mrseq	r0, R12_usr
    4720:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4724:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4728:	06010402 	streq	r0, [r1], -r2, lsl #8
    472c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4730:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4734:	00050501 	andeq	r0, r5, r1, lsl #10
    4738:	03010402 	movweq	r0, #5122	; 0x1402
    473c:	0001148c 	andeq	r1, r1, ip, lsl #9
    4740:	06010402 	streq	r0, [r1], -r2, lsl #8
    4744:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4748:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    474c:	6ca20301 	stcvs	3, cr0, [r2], #4
    4750:	00040501 	andeq	r0, r4, r1, lsl #10
    4754:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4758:	01040200 	mrseq	r0, R12_usr
    475c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4760:	00200601 	eoreq	r0, r0, r1, lsl #12
    4764:	06010402 	streq	r0, [r1], -r2, lsl #8
    4768:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    476c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4770:	00050501 	andeq	r0, r5, r1, lsl #10
    4774:	03010402 	movweq	r0, #5122	; 0x1402
    4778:	000113d9 	ldrdeq	r1, [r1], -r9
    477c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4780:	01040200 	mrseq	r0, R12_usr
    4784:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4788:	00160104 	andseq	r0, r6, r4, lsl #2
    478c:	01010402 	tsteq	r1, r2, lsl #8
    4790:	01040200 	mrseq	r0, R12_usr
    4794:	04020001 	streq	r0, [r2], #-1
    4798:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    479c:	02001f05 	andeq	r1, r0, #5, 30
    47a0:	eb030104 	bl	c4bb8 <_Min_Heap_Size+0xc43b8>
    47a4:	0505206b 	streq	r2, [r5, #-107]	; 0xffffff95
    47a8:	01040200 	mrseq	r0, R12_usr
    47ac:	00040514 	andeq	r0, r4, r4, lsl r5
    47b0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    47b4:	01040200 	mrseq	r0, R12_usr
    47b8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    47bc:	2f060104 	svccs	0x00060104
    47c0:	01040200 	mrseq	r0, R12_usr
    47c4:	01040106 	tsteq	r4, r6, lsl #2
    47c8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    47cc:	90030104 	andls	r0, r3, r4, lsl #2
    47d0:	02000114 	andeq	r0, r0, #20, 2
    47d4:	2e060104 	adfcss	f0, f6, f4
    47d8:	1f050204 	svcne	0x00050204
    47dc:	01040200 	mrseq	r0, R12_usr
    47e0:	016c9e03 	cmneq	ip, r3, lsl #28
    47e4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    47e8:	00140104 	andseq	r0, r4, r4, lsl #2
    47ec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    47f0:	01040200 	mrseq	r0, R12_usr
    47f4:	02002006 	andeq	r2, r0, #6
    47f8:	2f060104 	svccs	0x00060104
    47fc:	01040200 	mrseq	r0, R12_usr
    4800:	01040106 	tsteq	r4, r6, lsl #2
    4804:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4808:	dd030104 	stfles	f0, [r3, #-16]
    480c:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    4810:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4814:	02040200 	andeq	r0, r4, #0, 4
    4818:	00140515 	andseq	r0, r4, r5, lsl r5
    481c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4820:	04020001 	streq	r0, [r2], #-1
    4824:	05052002 	streq	r2, [r5, #-2]
    4828:	02040200 	andeq	r0, r4, #0, 4
    482c:	0e053106 	adfeqs	f3, f5, f6
    4830:	02040200 	andeq	r0, r4, #0, 4
    4834:	08050106 	stmdaeq	r5, {r1, r2, r8}
    4838:	02040200 	andeq	r0, r4, #0, 4
    483c:	00070520 	andeq	r0, r7, r0, lsr #10
    4840:	06020402 	streq	r0, [r2], -r2, lsl #8
    4844:	00030530 	andeq	r0, r3, r0, lsr r5
    4848:	18020402 	stmdane	r2, {r1, sl}
    484c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4850:	01060204 	tsteq	r6, r4, lsl #4
    4854:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4858:	32060204 	andcc	r0, r6, #4, 4	; 0x40000000
    485c:	02000c05 	andeq	r0, r0, #1280	; 0x500
    4860:	01060204 	tsteq	r6, r4, lsl #4
    4864:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    4868:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    486c:	12030605 	andne	r0, r3, #5242880	; 0x500000
    4870:	0601052e 	streq	r0, [r1], -lr, lsr #10
    4874:	00070531 	andeq	r0, r7, r1, lsr r5
    4878:	06010402 	streq	r0, [r1], -r2, lsl #8
    487c:	00206103 	eoreq	r6, r0, r3, lsl #2
    4880:	01010402 	tsteq	r1, r2, lsl #8
    4884:	01040200 	mrseq	r0, R12_usr
    4888:	04020001 	streq	r0, [r2], #-1
    488c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4890:	02001f05 	andeq	r1, r0, #5, 30
    4894:	e3030104 	movw	r0, #12548	; 0x3104
    4898:	0505206b 	streq	r2, [r5, #-107]	; 0xffffff95
    489c:	01040200 	mrseq	r0, R12_usr
    48a0:	00040514 	andeq	r0, r4, r4, lsl r5
    48a4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    48a8:	01040200 	mrseq	r0, R12_usr
    48ac:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    48b0:	2f060104 	svccs	0x00060104
    48b4:	01040200 	mrseq	r0, R12_usr
    48b8:	01040106 	tsteq	r4, r6, lsl #2
    48bc:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    48c0:	98030104 	stmdals	r3, {r2, r8}
    48c4:	02000114 	andeq	r0, r0, #20, 2
    48c8:	2e060104 	adfcss	f0, f6, f4
    48cc:	1f050204 	svcne	0x00050204
    48d0:	01040200 	mrseq	r0, R12_usr
    48d4:	016c9603 	cmneq	ip, r3, lsl #12
    48d8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    48dc:	00140104 	andseq	r0, r4, r4, lsl #2
    48e0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    48e4:	01040200 	mrseq	r0, R12_usr
    48e8:	02002006 	andeq	r2, r0, #6
    48ec:	2f060104 	svccs	0x00060104
    48f0:	01040200 	mrseq	r0, R12_usr
    48f4:	01040106 	tsteq	r4, r6, lsl #2
    48f8:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    48fc:	e5030104 	str	r0, [r3, #-260]	; 0xfffffefc
    4900:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    4904:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4908:	11030605 	tstne	r3, r5, lsl #12
    490c:	023c0601 	eorseq	r0, ip, #1048576	; 0x100000
    4910:	01010001 	tsteq	r1, r1
    4914:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4918:	00000002 	andeq	r0, r0, r2
    491c:	15c10300 	strbne	r0, [r1, #768]	; 0x300
    4920:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4924:	00300603 	eorseq	r0, r0, r3, lsl #12
    4928:	06010402 	streq	r0, [r1], -r2, lsl #8
    492c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4930:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4934:	004a0304 	subeq	r0, sl, r4, lsl #6
    4938:	4a040402 	bmi	105948 <_Min_Heap_Size+0x105148>
    493c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    4940:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4944:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4948:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    494c:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    4950:	004a0204 	subeq	r0, sl, r4, lsl #4
    4954:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4958:	02040200 	andeq	r0, r4, #0, 4
    495c:	00110514 	andseq	r0, r1, r4, lsl r5
    4960:	06020402 	streq	r0, [r2], -r2, lsl #8
    4964:	00030501 	andeq	r0, r3, r1, lsl #10
    4968:	06010402 	streq	r0, [r1], -r2, lsl #8
    496c:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    4970:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4974:	00010104 	andeq	r0, r1, r4, lsl #2
    4978:	01010402 	tsteq	r1, r2, lsl #8
    497c:	1f050204 	svcne	0x00050204
    4980:	01040200 	mrseq	r0, R12_usr
    4984:	206e9003 	rsbcs	r9, lr, r3
    4988:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    498c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4990:	04020004 	streq	r0, [r2], #-4
    4994:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4998:	2e060104 	adfcss	f0, f6, f4
    499c:	01040200 	mrseq	r0, R12_usr
    49a0:	02002f06 	andeq	r2, r0, #6, 30
    49a4:	01060104 	tsteq	r6, r4, lsl #2
    49a8:	03050104 	movweq	r0, #20740	; 0x5104
    49ac:	01040200 	mrseq	r0, R12_usr
    49b0:	0111eb03 	tsteq	r1, r3, lsl #22
    49b4:	01040200 	mrseq	r0, R12_usr
    49b8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    49bc:	02001f05 	andeq	r1, r0, #5, 30
    49c0:	c3030104 	movwgt	r0, #12548	; 0x3104
    49c4:	0405016e 	streq	r0, [r5], #-366	; 0xfffffe92
    49c8:	01040200 	mrseq	r0, R12_usr
    49cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    49d0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    49d4:	20060104 	andcs	r0, r6, r4, lsl #2
    49d8:	01040200 	mrseq	r0, R12_usr
    49dc:	02002f06 	andeq	r2, r0, #6, 30
    49e0:	01060104 	tsteq	r6, r4, lsl #2
    49e4:	03050104 	movweq	r0, #20740	; 0x5104
    49e8:	01040200 	mrseq	r0, R12_usr
    49ec:	0111b803 	tsteq	r1, r3, lsl #16
    49f0:	02040200 	andeq	r0, r4, #0, 4
    49f4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    49f8:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    49fc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4a00:	00010602 	andeq	r0, r1, r2, lsl #12
    4a04:	20020402 	andcs	r0, r2, r2, lsl #8
    4a08:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4a0c:	31060204 	tstcc	r6, r4, lsl #4
    4a10:	02040200 	andeq	r0, r4, #0, 4
    4a14:	04020001 	streq	r0, [r2], #-1
    4a18:	02003c02 	andeq	r3, r0, #512	; 0x200
    4a1c:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4a20:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    4a24:	20730303 	rsbscs	r0, r3, r3, lsl #6
    4a28:	01000602 	tsteq	r0, r2, lsl #12
    4a2c:	00010501 	andeq	r0, r1, r1, lsl #10
    4a30:	00000205 	andeq	r0, r0, r5, lsl #4
    4a34:	dc030000 	stcle	0, cr0, [r3], {-0}
    4a38:	01060115 	tsteq	r6, r5, lsl r1
    4a3c:	30060305 	andcc	r0, r6, r5, lsl #6
    4a40:	01040200 	mrseq	r0, R12_usr
    4a44:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4a48:	004a0204 	subeq	r0, sl, r4, lsl #4
    4a4c:	4a030402 	bmi	c5a5c <_Min_Heap_Size+0xc525c>
    4a50:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4a54:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4a58:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    4a5c:	004a0604 	subeq	r0, sl, r4, lsl #12
    4a60:	3c060402 	cfstrscc	mvf0, [r6], {2}
    4a64:	00013106 	andeq	r3, r1, r6, lsl #2
    4a68:	4a020402 	bmi	85a78 <_Min_Heap_Size+0x85278>
    4a6c:	02040200 	andeq	r0, r4, #0, 4
    4a70:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4a74:	11051402 	tstne	r5, r2, lsl #8
    4a78:	02040200 	andeq	r0, r4, #0, 4
    4a7c:	03050106 	movweq	r0, #20742	; 0x5106
    4a80:	01040200 	mrseq	r0, R12_usr
    4a84:	02003f06 	andeq	r3, r0, #6, 30
    4a88:	00010104 	andeq	r0, r1, r4, lsl #2
    4a8c:	01010402 	tsteq	r1, r2, lsl #8
    4a90:	01040200 	mrseq	r0, R12_usr
    4a94:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4a98:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4a9c:	6df50301 	ldclvs	3, cr0, [r5, #4]!
    4aa0:	00050520 	andeq	r0, r5, r0, lsr #10
    4aa4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4aa8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4aac:	00140104 	andseq	r0, r4, r4, lsl #2
    4ab0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ab4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4ab8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4abc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ac0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4ac4:	04020003 	streq	r0, [r2], #-3
    4ac8:	12860301 	addne	r0, r6, #67108864	; 0x4000000
    4acc:	04020001 	streq	r0, [r2], #-1
    4ad0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4ad4:	001f0502 	andseq	r0, pc, r2, lsl #10
    4ad8:	03010402 	movweq	r0, #5122	; 0x1402
    4adc:	05016ea8 	streq	r6, [r1, #-3752]	; 0xfffff158
    4ae0:	04020004 	streq	r0, [r2], #-4
    4ae4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4ae8:	00140104 	andseq	r0, r4, r4, lsl #2
    4aec:	06010402 	streq	r0, [r1], -r2, lsl #8
    4af0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4af4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4af8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4afc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4b00:	04020003 	streq	r0, [r2], #-3
    4b04:	11d30301 	bicsne	r0, r3, r1, lsl #6
    4b08:	04020001 	streq	r0, [r2], #-1
    4b0c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    4b10:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4b14:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4b18:	01060204 	tsteq	r6, r4, lsl #4
    4b1c:	02040200 	andeq	r0, r4, #0, 4
    4b20:	00030520 	andeq	r0, r3, r0, lsr #10
    4b24:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b28:	0016052f 	andseq	r0, r6, pc, lsr #10
    4b2c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b30:	00030501 	andeq	r0, r3, r1, lsl #10
    4b34:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b38:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4b3c:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    4b40:	002e0204 	eoreq	r0, lr, r4, lsl #4
    4b44:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4b48:	13060105 	movwne	r0, #24837	; 0x6105
    4b4c:	72030305 	andvc	r0, r3, #335544320	; 0x14000000
    4b50:	00070220 	andeq	r0, r7, r0, lsr #4
    4b54:	01050101 	tsteq	r5, r1, lsl #2
    4b58:	00020500 	andeq	r0, r2, r0, lsl #10
    4b5c:	03000000 	movweq	r0, #0
    4b60:	060115f8 			; <UNDEFINED> instruction: 0x060115f8
    4b64:	06030501 	streq	r0, [r3], -r1, lsl #10
    4b68:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    4b6c:	004a0601 	subeq	r0, sl, r1, lsl #12
    4b70:	4a020402 	bmi	85b80 <_Min_Heap_Size+0x85380>
    4b74:	03040200 	movweq	r0, #16896	; 0x4200
    4b78:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4b7c:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    4b80:	004a0504 	subeq	r0, sl, r4, lsl #10
    4b84:	4a060402 	bmi	185b94 <_Min_Heap_Size+0x185394>
    4b88:	06040200 	streq	r0, [r4], -r0, lsl #4
    4b8c:	0131063c 	teqeq	r1, ip, lsr r6
    4b90:	02040200 	andeq	r0, r4, #0, 4
    4b94:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4b98:	02003c02 	andeq	r3, r0, #512	; 0x200
    4b9c:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4ba0:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4ba4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4ba8:	04020003 	streq	r0, [r2], #-3
    4bac:	003f0601 	eorseq	r0, pc, r1, lsl #12
    4bb0:	01010402 	tsteq	r1, r2, lsl #8
    4bb4:	01040200 	mrseq	r0, R12_usr
    4bb8:	04020001 	streq	r0, [r2], #-1
    4bbc:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4bc0:	02001f05 	andeq	r1, r0, #5, 30
    4bc4:	d9030104 	stmdble	r3, {r2, r8}
    4bc8:	0505206d 	streq	r2, [r5, #-109]	; 0xffffff93
    4bcc:	01040200 	mrseq	r0, R12_usr
    4bd0:	00040514 	andeq	r0, r4, r4, lsl r5
    4bd4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4bd8:	01040200 	mrseq	r0, R12_usr
    4bdc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4be0:	2f060104 	svccs	0x00060104
    4be4:	01040200 	mrseq	r0, R12_usr
    4be8:	01040106 	tsteq	r4, r6, lsl #2
    4bec:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4bf0:	a2030104 	andge	r0, r3, #4, 2
    4bf4:	02000112 	andeq	r0, r0, #-2147483644	; 0x80000004
    4bf8:	2e060104 	adfcss	f0, f6, f4
    4bfc:	1f050204 	svcne	0x00050204
    4c00:	01040200 	mrseq	r0, R12_usr
    4c04:	016e8c03 	cmneq	lr, r3, lsl #24
    4c08:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4c0c:	00140104 	andseq	r0, r4, r4, lsl #2
    4c10:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4c14:	01040200 	mrseq	r0, R12_usr
    4c18:	02002006 	andeq	r2, r0, #6
    4c1c:	2f060104 	svccs	0x00060104
    4c20:	01040200 	mrseq	r0, R12_usr
    4c24:	01040106 	tsteq	r4, r6, lsl #2
    4c28:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4c2c:	ef030104 	svc	0x00030104
    4c30:	02000111 	andeq	r0, r0, #1073741828	; 0x40000004
    4c34:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4c38:	02040200 	andeq	r0, r4, #0, 4
    4c3c:	00110514 	andseq	r0, r1, r4, lsl r5
    4c40:	06020402 	streq	r0, [r2], -r2, lsl #8
    4c44:	04020001 	streq	r0, [r2], #-1
    4c48:	03052002 	movweq	r2, #20482	; 0x5002
    4c4c:	02040200 	andeq	r0, r4, #0, 4
    4c50:	16052f06 	strne	r2, [r5], -r6, lsl #30
    4c54:	02040200 	andeq	r0, r4, #0, 4
    4c58:	03050106 	movweq	r0, #20742	; 0x5106
    4c5c:	02040200 	andeq	r0, r4, #0, 4
    4c60:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4c64:	00010204 	andeq	r0, r1, r4, lsl #4
    4c68:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    4c6c:	02040200 	andeq	r0, r4, #0, 4
    4c70:	06010514 			; <UNDEFINED> instruction: 0x06010514
    4c74:	03030513 	movweq	r0, #13587	; 0x3513
    4c78:	07022072 	smlsdxeq	r2, r2, r0, r2
    4c7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4c80:	02050001 	andeq	r0, r5, #1
    4c84:	00000000 	andeq	r0, r0, r0
    4c88:	01169403 	tsteq	r6, r3, lsl #8
    4c8c:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    4c90:	04020001 	streq	r0, [r2], #-1
    4c94:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4c98:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4c9c:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4ca0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4ca4:	01060204 	tsteq	r6, r4, lsl #4
    4ca8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4cac:	3f060204 	svccc	0x00060204
    4cb0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4cb4:	01060204 	tsteq	r6, r4, lsl #4
    4cb8:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4cbc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4cc0:	04020003 	streq	r0, [r2], #-3
    4cc4:	05230602 	streq	r0, [r3, #-1538]!	; 0xfffff9fe
    4cc8:	0402000a 	streq	r0, [r2], #-10
    4ccc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4cd0:	04020003 	streq	r0, [r2], #-3
    4cd4:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    4cd8:	0402000a 	streq	r0, [r2], #-10
    4cdc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4ce0:	04020003 	streq	r0, [r2], #-3
    4ce4:	00310602 	eorseq	r0, r1, r2, lsl #12
    4ce8:	22020402 	andcs	r0, r2, #33554432	; 0x2000000
    4cec:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4cf0:	01060204 	tsteq	r6, r4, lsl #4
    4cf4:	02040200 	andeq	r0, r4, #0, 4
    4cf8:	00030520 	andeq	r0, r3, r0, lsr #10
    4cfc:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d00:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4d04:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    4d08:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4d0c:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4d10:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4d14:	01060204 	tsteq	r6, r4, lsl #4
    4d18:	02040200 	andeq	r0, r4, #0, 4
    4d1c:	03030520 	movweq	r0, #13600	; 0x3520
    4d20:	0105206b 	tsteq	r5, fp, rrx
    4d24:	02201603 	eoreq	r1, r0, #3145728	; 0x300000
    4d28:	01010001 	tsteq	r1, r1
    4d2c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4d30:	00000002 	andeq	r0, r0, r2
    4d34:	16b70300 	ldrtne	r0, [r7], r0, lsl #6
    4d38:	13030501 	movwne	r0, #13569	; 0x3501
    4d3c:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    4d40:	004a0204 	subeq	r0, sl, r4, lsl #4
    4d44:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4d48:	02040200 	andeq	r0, r4, #0, 4
    4d4c:	00110514 	andseq	r0, r1, r4, lsl r5
    4d50:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d54:	00030501 	andeq	r0, r3, r1, lsl #10
    4d58:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d5c:	0011053f 	andseq	r0, r1, pc, lsr r5
    4d60:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d64:	000a0501 	andeq	r0, sl, r1, lsl #10
    4d68:	20020402 	andcs	r0, r2, r2, lsl #8
    4d6c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4d70:	23060204 	movwcs	r0, #25092	; 0x6204
    4d74:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4d78:	01060204 	tsteq	r6, r4, lsl #4
    4d7c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4d80:	31060204 	tstcc	r6, r4, lsl #4
    4d84:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4d88:	01060204 	tsteq	r6, r4, lsl #4
    4d8c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4d90:	31060204 	tstcc	r6, r4, lsl #4
    4d94:	02040200 	andeq	r0, r4, #0, 4
    4d98:	00110522 	andseq	r0, r1, r2, lsr #10
    4d9c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4da0:	04020001 	streq	r0, [r2], #-1
    4da4:	03052002 	movweq	r2, #20482	; 0x5002
    4da8:	02040200 	andeq	r0, r4, #0, 4
    4dac:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4db0:	00010204 	andeq	r0, r1, r4, lsl #4
    4db4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4db8:	02040200 	andeq	r0, r4, #0, 4
    4dbc:	000a0514 	andeq	r0, sl, r4, lsl r5
    4dc0:	06020402 	streq	r0, [r2], -r2, lsl #8
    4dc4:	04020001 	streq	r0, [r2], #-1
    4dc8:	03052002 	movweq	r2, #20482	; 0x5002
    4dcc:	05206b03 	streq	r6, [r0, #-2819]!	; 0xfffff4fd
    4dd0:	20160301 	andscs	r0, r6, r1, lsl #6
    4dd4:	01000102 	tsteq	r0, r2, lsl #2
    4dd8:	00010501 	andeq	r0, r1, r1, lsl #10
    4ddc:	00000205 	andeq	r0, r0, r5, lsl #4
    4de0:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    4de4:	03050116 	movweq	r0, #20758	; 0x5116
    4de8:	10051313 	andne	r1, r5, r3, lsl r3
    4dec:	03050106 	movweq	r0, #20742	; 0x5106
    4df0:	10052f06 	andne	r2, r5, r6, lsl #30
    4df4:	03050106 	movweq	r0, #20742	; 0x5106
    4df8:	01053006 	tsteq	r5, r6
    4dfc:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    4e00:	01010001 	tsteq	r1, r1
    4e04:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4e08:	00000002 	andeq	r0, r0, r2
    4e0c:	16ff0300 	ldrbtne	r0, [pc], r0, lsl #6
    4e10:	13030501 	movwne	r0, #13569	; 0x3501
    4e14:	01060f05 	tsteq	r6, r5, lsl #30
    4e18:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    4e1c:	01010001 	tsteq	r1, r1
    4e20:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4e24:	00000002 	andeq	r0, r0, r2
    4e28:	19a40300 	stmibne	r4!, {r8, r9}
    4e2c:	13030501 	movwne	r0, #13569	; 0x3501
    4e30:	01061505 	tsteq	r6, r5, lsl #10
    4e34:	21060305 	tstcs	r6, r5, lsl #6
    4e38:	01061505 	tsteq	r6, r5, lsl #10
    4e3c:	21060305 	tstcs	r6, r5, lsl #6
    4e40:	01061605 	tsteq	r6, r5, lsl #12
    4e44:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    4e48:	01061405 	tsteq	r6, r5, lsl #8
    4e4c:	2f060305 	svccs	0x00060305
    4e50:	01061205 	tsteq	r6, r5, lsl #4
    4e54:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    4e58:	01061205 	tsteq	r6, r5, lsl #4
    4e5c:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    4e60:	06230605 	strteq	r0, [r3], -r5, lsl #12
    4e64:	06030520 	streq	r0, [r3], -r0, lsr #10
    4e68:	055a5b4e 	ldrbeq	r5, [sl, #-2894]	; 0xfffff4b2
    4e6c:	20130601 	andscs	r0, r3, r1, lsl #12
    4e70:	01000102 	tsteq	r0, r2, lsl #2
    4e74:	00010501 	andeq	r0, r1, r1, lsl #10
    4e78:	00000205 	andeq	r0, r0, r5, lsl #4
    4e7c:	c3030000 	movwgt	r0, #12288	; 0x3000
    4e80:	0106010a 	tsteq	r6, sl, lsl #2
    4e84:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    4e88:	01060c05 	tsteq	r6, r5, lsl #24
    4e8c:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    4e90:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    4e94:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4e98:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    4e9c:	0e052001 	cdpeq	0, 0, cr2, cr5, cr1, {0}
    4ea0:	03010522 	movweq	r0, #5410	; 0x1522
    4ea4:	0505200c 	streq	r2, [r5, #-12]
    4ea8:	20780306 	rsbscs	r0, r8, r6, lsl #6
    4eac:	01061a05 	tsteq	r6, r5, lsl #20
    4eb0:	30060505 	andcc	r0, r6, r5, lsl #10
    4eb4:	01060d05 	tsteq	r6, r5, lsl #26
    4eb8:	240c052e 	strcs	r0, [ip], #-1326	; 0xfffffad2
    4ebc:	030e0520 	movweq	r0, #58656	; 0xe520
    4ec0:	02202076 	eoreq	r2, r0, #118	; 0x76
    4ec4:	01010001 	tsteq	r1, r1
    4ec8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4ecc:	00000002 	andeq	r0, r0, r2
    4ed0:	0db10300 	ldceq	3, cr0, [r1]
    4ed4:	13030501 	movwne	r0, #13569	; 0x3501
    4ed8:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    4edc:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    4ee0:	052a0105 	streq	r0, [sl, #-261]!	; 0xfffffefb
    4ee4:	05420605 	strbeq	r0, [r2, #-1541]	; 0xfffff9fb
    4ee8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4eec:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    4ef0:	0e052001 	cdpeq	0, 0, cr2, cr5, cr1, {0}
    4ef4:	03010522 	movweq	r0, #5410	; 0x1522
    4ef8:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
    4efc:	2e630306 	cdpcs	3, 6, cr0, cr3, cr6, {0}
    4f00:	01061a05 	tsteq	r6, r5, lsl #20
    4f04:	2f060505 	svccs	0x00060505
    4f08:	01061805 	tsteq	r6, r5, lsl #16
    4f0c:	30060505 	andcc	r0, r6, r5, lsl #10
    4f10:	01060f05 	tsteq	r6, r5, lsl #30
    4f14:	31060505 	tstcc	r6, r5, lsl #10
    4f18:	01060805 	tsteq	r6, r5, lsl #16
    4f1c:	30060705 	andcc	r0, r6, r5, lsl #14
    4f20:	01061005 	tsteq	r6, r5
    4f24:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    4f28:	2e0b0310 	mcrcs	3, 0, r0, cr11, cr0, {0}
    4f2c:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    4f30:	01060c05 	tsteq	r6, r5, lsl #24
    4f34:	03060905 	movweq	r0, #26885	; 0x6905
    4f38:	2e012073 	mcrcs	0, 0, r2, cr1, cr3, {3}
    4f3c:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    4f40:	00200104 	eoreq	r0, r0, r4, lsl #2
    4f44:	13010402 	movwne	r0, #5122	; 0x1402
    4f48:	01040200 	mrseq	r0, R12_usr
    4f4c:	04020001 	streq	r0, [r2], #-1
    4f50:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4f54:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4f58:	001f0502 	andseq	r0, pc, r2, lsl #10
    4f5c:	03010402 	movweq	r0, #5122	; 0x1402
    4f60:	05207693 	streq	r7, [r0, #-1683]!	; 0xfffff96d
    4f64:	04020005 	streq	r0, [r2], #-5
    4f68:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4f6c:	01040200 	mrseq	r0, R12_usr
    4f70:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4f74:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4f78:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f7c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4f80:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4f84:	00090501 	andeq	r0, r9, r1, lsl #10
    4f88:	03010402 	movweq	r0, #5122	; 0x1402
    4f8c:	000109e8 	andeq	r0, r1, r8, ror #19
    4f90:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f94:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4f98:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4f9c:	76c60301 	strbvc	r0, [r6], r1, lsl #6
    4fa0:	00040501 	andeq	r0, r4, r1, lsl #10
    4fa4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4fa8:	01040200 	mrseq	r0, R12_usr
    4fac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4fb0:	00200601 	eoreq	r0, r0, r1, lsl #12
    4fb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fb8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4fbc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4fc0:	00090501 	andeq	r0, r9, r1, lsl #10
    4fc4:	03010402 	movweq	r0, #5122	; 0x1402
    4fc8:	000109b5 			; <UNDEFINED> instruction: 0x000109b5
    4fcc:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4fd0:	10030c05 	andne	r0, r3, r5, lsl #24
    4fd4:	22010501 	andcs	r0, r1, #4194304	; 0x400000
    4fd8:	5f030e05 	svcpl	0x00030e05
    4fdc:	01022020 	tsteq	r2, r0, lsr #32
    4fe0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4fe4:	02050001 	andeq	r0, r5, #1
    4fe8:	00000000 	andeq	r0, r0, r0
    4fec:	0119c703 	tsteq	r9, r3, lsl #14
    4ff0:	03050106 	movweq	r0, #20742	; 0x5106
    4ff4:	05144b06 	ldreq	r4, [r4, #-2822]	; 0xfffff4fa
    4ff8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4ffc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5000:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5004:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    5008:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    500c:	052f0603 	streq	r0, [pc, #-1539]!	; 4a11 <_Min_Heap_Size+0x4211>
    5010:	20010612 	andcs	r0, r1, r2, lsl r6
    5014:	31060305 	tstcc	r6, r5, lsl #6
    5018:	01060805 	tsteq	r6, r5, lsl #16
    501c:	20202305 	eorcs	r2, r0, r5, lsl #6
    5020:	23060305 	movwcs	r0, #25349	; 0x6305
    5024:	01060805 	tsteq	r6, r5, lsl #16
    5028:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    502c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    5030:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5034:	03052024 	movweq	r2, #20516	; 0x5024
    5038:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    503c:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    5040:	06030520 	streq	r0, [r3], -r0, lsr #10
    5044:	33051323 	movwcc	r1, #21283	; 0x5323
    5048:	03050106 	movweq	r0, #20742	; 0x5106
    504c:	3f062e20 	svccc	0x00062e20
    5050:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    5054:	12051420 	andne	r1, r5, #32, 8	; 0x20000000
    5058:	06050106 	streq	r0, [r5], -r6, lsl #2
    505c:	00050520 	andeq	r0, r5, r0, lsr #10
    5060:	06010402 	streq	r0, [r1], -r2, lsl #8
    5064:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    5068:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    506c:	00010104 	andeq	r0, r1, r4, lsl #2
    5070:	01010402 	tsteq	r1, r2, lsl #8
    5074:	1f050204 	svcne	0x00050204
    5078:	01040200 	mrseq	r0, R12_usr
    507c:	2069f503 	rsbcs	pc, r9, r3, lsl #10
    5080:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5084:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    5088:	04020004 	streq	r0, [r2], #-4
    508c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    5090:	2e060104 	adfcss	f0, f6, f4
    5094:	01040200 	mrseq	r0, R12_usr
    5098:	02002f06 	andeq	r2, r0, #6, 30
    509c:	01060104 	tsteq	r6, r4, lsl #2
    50a0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    50a4:	01040200 	mrseq	r0, R12_usr
    50a8:	01168603 	tsteq	r6, r3, lsl #12
    50ac:	01040200 	mrseq	r0, R12_usr
    50b0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    50b4:	02001f05 	andeq	r1, r0, #5, 30
    50b8:	a8030104 	stmdage	r3, {r2, r8}
    50bc:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    50c0:	01040200 	mrseq	r0, R12_usr
    50c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    50c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    50cc:	20060104 	andcs	r0, r6, r4, lsl #2
    50d0:	01040200 	mrseq	r0, R12_usr
    50d4:	02002f06 	andeq	r2, r0, #6, 30
    50d8:	01060104 	tsteq	r6, r4, lsl #2
    50dc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    50e0:	01040200 	mrseq	r0, R12_usr
    50e4:	0115d303 	tsteq	r5, r3, lsl #6
    50e8:	01040200 	mrseq	r0, R12_usr
    50ec:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    50f0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    50f4:	04020003 	streq	r0, [r2], #-3
    50f8:	02001601 	andeq	r1, r0, #1048576	; 0x100000
    50fc:	00010104 	andeq	r0, r1, r4, lsl #2
    5100:	01010402 	tsteq	r1, r2, lsl #8
    5104:	01040200 	mrseq	r0, R12_usr
    5108:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    510c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5110:	69f10301 	ldmibvs	r1!, {r0, r8, r9}^
    5114:	00050520 	andeq	r0, r5, r0, lsr #10
    5118:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    511c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5120:	00140104 	andseq	r0, r4, r4, lsl #2
    5124:	06010402 	streq	r0, [r1], -r2, lsl #8
    5128:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    512c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    5130:	06010402 	streq	r0, [r1], -r2, lsl #8
    5134:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5138:	04020003 	streq	r0, [r2], #-3
    513c:	168a0301 	strne	r0, [sl], r1, lsl #6
    5140:	04020001 	streq	r0, [r2], #-1
    5144:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    5148:	001f0502 	andseq	r0, pc, r2, lsl #10
    514c:	03010402 	movweq	r0, #5122	; 0x1402
    5150:	05016aa4 	streq	r6, [r1, #-2724]	; 0xfffff55c
    5154:	04020004 	streq	r0, [r2], #-4
    5158:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    515c:	00140104 	andseq	r0, r4, r4, lsl #2
    5160:	06010402 	streq	r0, [r1], -r2, lsl #8
    5164:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5168:	002f0601 	eoreq	r0, pc, r1, lsl #12
    516c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5170:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5174:	04020003 	streq	r0, [r2], #-3
    5178:	15d70301 	ldrbne	r0, [r7, #769]	; 0x301
    517c:	04020001 	streq	r0, [r2], #-1
    5180:	02002e01 	andeq	r2, r0, #1, 28
    5184:	01060104 	tsteq	r6, r4, lsl #2
    5188:	01040200 	mrseq	r0, R12_usr
    518c:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    5190:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    5194:	00010104 	andeq	r0, r1, r4, lsl #2
    5198:	01010402 	tsteq	r1, r2, lsl #8
    519c:	1f050204 	svcne	0x00050204
    51a0:	01040200 	mrseq	r0, R12_usr
    51a4:	2069ed03 	rsbcs	lr, r9, r3, lsl #26
    51a8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    51ac:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    51b0:	04020004 	streq	r0, [r2], #-4
    51b4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    51b8:	2e060104 	adfcss	f0, f6, f4
    51bc:	01040200 	mrseq	r0, R12_usr
    51c0:	02002f06 	andeq	r2, r0, #6, 30
    51c4:	01060104 	tsteq	r6, r4, lsl #2
    51c8:	03050104 	movweq	r0, #20740	; 0x5104
    51cc:	01040200 	mrseq	r0, R12_usr
    51d0:	01168e03 	tsteq	r6, r3, lsl #28
    51d4:	01040200 	mrseq	r0, R12_usr
    51d8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    51dc:	02001f05 	andeq	r1, r0, #5, 30
    51e0:	a0030104 	andge	r0, r3, r4, lsl #2
    51e4:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    51e8:	01040200 	mrseq	r0, R12_usr
    51ec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    51f0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    51f4:	20060104 	andcs	r0, r6, r4, lsl #2
    51f8:	01040200 	mrseq	r0, R12_usr
    51fc:	02002f06 	andeq	r2, r0, #6, 30
    5200:	01060104 	tsteq	r6, r4, lsl #2
    5204:	03050104 	movweq	r0, #20740	; 0x5104
    5208:	01040200 	mrseq	r0, R12_usr
    520c:	0115db03 	tsteq	r5, r3, lsl #22
    5210:	02040200 	andeq	r0, r4, #0, 4
    5214:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5218:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    521c:	04020001 	streq	r0, [r2], #-1
    5220:	00130602 	andseq	r0, r3, r2, lsl #12
    5224:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5228:	01000602 	tsteq	r0, r2, lsl #12
    522c:	00010501 	andeq	r0, r1, r1, lsl #10
    5230:	00000205 	andeq	r0, r0, r5, lsl #4
    5234:	a1030000 	mrsge	r0, (UNDEF: 3)
    5238:	0106010b 	tsteq	r6, fp, lsl #2
    523c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    5240:	01060c05 	tsteq	r6, r5, lsl #24
    5244:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    5248:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    524c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5250:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    5254:	0e052001 	cdpeq	0, 0, cr2, cr5, cr1, {0}
    5258:	03010522 	movweq	r0, #5410	; 0x1522
    525c:	0505200c 	streq	r2, [r5, #-12]
    5260:	20780306 	rsbscs	r0, r8, r6, lsl #6
    5264:	01061a05 	tsteq	r6, r5, lsl #20
    5268:	30060505 	andcc	r0, r6, r5, lsl #10
    526c:	01060d05 	tsteq	r6, r5, lsl #26
    5270:	240c052e 	strcs	r0, [ip], #-1326	; 0xfffffad2
    5274:	030e0520 	movweq	r0, #58656	; 0xe520
    5278:	02202076 	eoreq	r2, r0, #118	; 0x76
    527c:	01010001 	tsteq	r1, r1
    5280:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5284:	00000002 	andeq	r0, r0, r2
    5288:	0ded0300 	stcleq	3, cr0, [sp]
    528c:	13030501 	movwne	r0, #13569	; 0x3501
    5290:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    5294:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    5298:	052a0105 	streq	r0, [sl, #-261]!	; 0xfffffefb
    529c:	05420605 	strbeq	r0, [r2, #-1541]	; 0xfffff9fb
    52a0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    52a4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    52a8:	0e052001 	cdpeq	0, 0, cr2, cr5, cr1, {0}
    52ac:	03010522 	movweq	r0, #5410	; 0x1522
    52b0:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
    52b4:	2e630306 	cdpcs	3, 6, cr0, cr3, cr6, {0}
    52b8:	01061a05 	tsteq	r6, r5, lsl #20
    52bc:	2f060505 	svccs	0x00060505
    52c0:	01061805 	tsteq	r6, r5, lsl #16
    52c4:	30060505 	andcc	r0, r6, r5, lsl #10
    52c8:	01060f05 	tsteq	r6, r5, lsl #30
    52cc:	31060505 	tstcc	r6, r5, lsl #10
    52d0:	01060805 	tsteq	r6, r5, lsl #16
    52d4:	30060705 	andcc	r0, r6, r5, lsl #14
    52d8:	01061005 	tsteq	r6, r5
    52dc:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    52e0:	2e0b0310 	mcrcs	3, 0, r0, cr11, cr0, {0}
    52e4:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    52e8:	01060c05 	tsteq	r6, r5, lsl #24
    52ec:	03060905 	movweq	r0, #26885	; 0x6905
    52f0:	2e012073 	mcrcs	0, 0, r2, cr1, cr3, {3}
    52f4:	02002e3c 	andeq	r2, r0, #60, 28	; 0x3c0
    52f8:	00200104 	eoreq	r0, r0, r4, lsl #2
    52fc:	13010402 	movwne	r0, #5122	; 0x1402
    5300:	01040200 	mrseq	r0, R12_usr
    5304:	04020001 	streq	r0, [r2], #-1
    5308:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    530c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    5310:	001f0502 	andseq	r0, pc, r2, lsl #10
    5314:	03010402 	movweq	r0, #5122	; 0x1402
    5318:	052075d7 	streq	r7, [r0, #-1495]!	; 0xfffffa29
    531c:	04020005 	streq	r0, [r2], #-5
    5320:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    5324:	01040200 	mrseq	r0, R12_usr
    5328:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    532c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5330:	06010402 	streq	r0, [r1], -r2, lsl #8
    5334:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5338:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    533c:	00090501 	andeq	r0, r9, r1, lsl #10
    5340:	03010402 	movweq	r0, #5122	; 0x1402
    5344:	00010aa4 	andeq	r0, r1, r4, lsr #21
    5348:	06010402 	streq	r0, [r1], -r2, lsl #8
    534c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5350:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5354:	768a0301 	strvc	r0, [sl], r1, lsl #6
    5358:	00040501 	andeq	r0, r4, r1, lsl #10
    535c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5360:	01040200 	mrseq	r0, R12_usr
    5364:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5368:	00200601 	eoreq	r0, r0, r1, lsl #12
    536c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5370:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5374:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5378:	00090501 	andeq	r0, r9, r1, lsl #10
    537c:	03010402 	movweq	r0, #5122	; 0x1402
    5380:	000109f1 	strdeq	r0, [r1], -r1
    5384:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5388:	10030c05 	andne	r0, r3, r5, lsl #24
    538c:	22010501 	andcs	r0, r1, #4194304	; 0x400000
    5390:	5f030e05 	svcpl	0x00030e05
    5394:	01022020 	tsteq	r2, r0, lsr #32
    5398:	a7010100 	strge	r0, [r1, -r0, lsl #2]
    539c:	0300000c 	movweq	r0, #12
    53a0:	00024100 	andeq	r4, r2, r0, lsl #2
    53a4:	fb010200 	blx	45bae <_Min_Heap_Size+0x453ae>
    53a8:	01000d0e 	tsteq	r0, lr, lsl #26
    53ac:	00010101 	andeq	r0, r1, r1, lsl #2
    53b0:	00010000 	andeq	r0, r1, r0
    53b4:	2e2e0100 	sufcse	f0, f6, f0
    53b8:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    53bc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    53c0:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    53c4:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    53c8:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    53cc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 53d4 <_Min_Heap_Size+0x4bd4>
    53d0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    53d4:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    53d8:	3a630063 	bcc	18c556c <_Min_Heap_Size+0x18c4d6c>
    53dc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    53e0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    53e4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    53e8:	6f72705c 	svcvs	0x0072705c
    53ec:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    53f0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    53f4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    53f8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    53fc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    5400:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    5404:	61652d65 	cmnvs	r5, r5, ror #26
    5408:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    540c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    5410:	31323032 	teqcc	r2, r2, lsr r0
    5414:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    5418:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    541c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    5420:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    5424:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    5428:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    542c:	616d5c65 	cmnvs	sp, r5, ror #24
    5430:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    5434:	3a630065 	bcc	18c55d0 <_Min_Heap_Size+0x18c4dd0>
    5438:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    543c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    5440:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    5444:	6f72705c 	svcvs	0x0072705c
    5448:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    544c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    5450:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    5454:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    5458:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    545c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    5460:	61652d65 	cmnvs	r5, r5, ror #26
    5464:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    5468:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    546c:	31323032 	teqcc	r2, r2, lsr r0
    5470:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    5474:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    5478:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    547c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    5480:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    5484:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5488:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    548c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    5490:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    5494:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    5498:	534d432f 	movtpl	r4, #54063	; 0xd32f
    549c:	442f5349 	strtmi	r5, [pc], #-841	; 54a4 <_Min_Heap_Size+0x4ca4>
    54a0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    54a4:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    54a8:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    54ac:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    54b0:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    54b4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    54b8:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    54bc:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    54c0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    54c4:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    54c8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    54cc:	5f787834 	svcpl	0x00787834
    54d0:	5f4c4148 	svcpl	0x004c4148
    54d4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    54d8:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    54dc:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    54e0:	6f432f2e 	svcvs	0x00432f2e
    54e4:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    54e8:	0000636e 	andeq	r6, r0, lr, ror #6
    54ec:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    54f0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    54f4:	61685f78 	smcvs	34296	; 0x85f8
    54f8:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    54fc:	00632e63 	rsbeq	r2, r3, r3, ror #28
    5500:	5f000001 	svcpl	0x00000001
    5504:	61666564 	cmnvs	r6, r4, ror #10
    5508:	5f746c75 	svcpl	0x00746c75
    550c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    5510:	00682e73 	rsbeq	r2, r8, r3, ror lr
    5514:	5f000002 	svcpl	0x00000002
    5518:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    551c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    5520:	00000300 	andeq	r0, r0, r0, lsl #6
    5524:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    5528:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    552c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5530:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5534:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    5538:	74730000 	ldrbtvc	r0, [r3], #-0
    553c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5540:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    5544:	00682e78 	rsbeq	r2, r8, r8, ror lr
    5548:	73000004 	movwvc	r0, #4
    554c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5550:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5554:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    5558:	74730000 	ldrbtvc	r0, [r3], #-0
    555c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5560:	5f787834 	svcpl	0x00787834
    5564:	5f6c6168 	svcpl	0x006c6168
    5568:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    556c:	00050068 	andeq	r0, r5, r8, rrx
    5570:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5574:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5578:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    557c:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    5580:	655f6363 	ldrbvs	r6, [pc, #-867]	; 5225 <_Min_Heap_Size+0x4a25>
    5584:	00682e78 	rsbeq	r2, r8, r8, ror lr
    5588:	73000005 	movwvc	r0, #5
    558c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5590:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5594:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5598:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    559c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    55a0:	74730000 	ldrbtvc	r0, [r3], #-0
    55a4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    55a8:	5f787834 	svcpl	0x00787834
    55ac:	5f6c6168 	svcpl	0x006c6168
    55b0:	6f697067 	svcvs	0x00697067
    55b4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    55b8:	74730000 	ldrbtvc	r0, [r3], #-0
    55bc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    55c0:	5f787834 	svcpl	0x00787834
    55c4:	2e6c6168 	powcsez	f6, f4, #0.0
    55c8:	00050068 	andeq	r0, r5, r8, rrx
    55cc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    55d0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    55d4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    55d8:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    55dc:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    55e0:	00060068 	andeq	r0, r6, r8, rrx
    55e4:	01050000 	mrseq	r0, (UNDEF: 5)
    55e8:	00020500 	andeq	r0, r2, r0, lsl #10
    55ec:	03000000 	movweq	r0, #0
    55f0:	050101c8 	streq	r0, [r1, #-456]	; 0xfffffe38
    55f4:	01051303 	tsteq	r5, r3, lsl #6
    55f8:	02021306 	andeq	r1, r2, #402653184	; 0x18000000
    55fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5600:	02050001 	andeq	r0, r5, #1
    5604:	00000000 	andeq	r0, r0, r0
    5608:	0101db03 	tsteq	r1, r3, lsl #22
    560c:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    5610:	01060505 	tsteq	r6, r5, lsl #10
    5614:	05380105 	ldreq	r0, [r8, #-261]!	; 0xfffffefb
    5618:	0a030603 	beq	c6e2c <_Min_Heap_Size+0xc662c>
    561c:	19053e3c 	stmdbne	r5, {r2, r3, r4, r5, r9, sl, fp, ip, sp}
    5620:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5624:	003f0620 	eorseq	r0, pc, r0, lsr #12
    5628:	06010402 	streq	r0, [r1], -r2, lsl #8
    562c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5630:	3e063c02 	cdpcc	12, 0, cr3, cr6, cr2, {0}
    5634:	01060905 	tsteq	r6, r5, lsl #18
    5638:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    563c:	04020009 	streq	r0, [r2], #-9
    5640:	3c052f01 	stccc	15, cr2, [r5], {1}
    5644:	01040200 	mrseq	r0, R12_usr
    5648:	06070549 	streq	r0, [r7], -r9, asr #10
    564c:	012e0b03 			; <UNDEFINED> instruction: 0x012e0b03
    5650:	02040200 	andeq	r0, r4, #0, 4
    5654:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5658:	02003c05 	andeq	r3, r0, #1280	; 0x500
    565c:	00580504 	subseq	r0, r8, r4, lsl #10
    5660:	4a070402 	bmi	1c6670 <_Min_Heap_Size+0x1c5e70>
    5664:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5668:	001c0515 	andseq	r0, ip, r5, lsl r5
    566c:	06070402 	streq	r0, [r7], -r2, lsl #8
    5670:	00090501 	andeq	r0, r9, r1, lsl #10
    5674:	20070402 	andcs	r0, r7, r2, lsl #8
    5678:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    567c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5680:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5684:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5688:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    568c:	3e060b05 	vmlacc.f64	d0, d6, d5
    5690:	01060f05 	tsteq	r6, r5, lsl #30
    5694:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5698:	1405200d 	strne	r2, [r5], #-13
    569c:	00030530 	andeq	r0, r3, r0, lsr r5
    56a0:	03010402 	movweq	r0, #5122	; 0x1402
    56a4:	02002e61 	andeq	r2, r0, #1552	; 0x610
    56a8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    56ac:	04020005 	streq	r0, [r2], #-5
    56b0:	44054103 	strmi	r4, [r5], #-259	; 0xfffffefd
    56b4:	2e3c055b 	mrccs	5, 1, r0, cr12, cr11, {2}
    56b8:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    56bc:	01060b05 	tsteq	r6, r5, lsl #22
    56c0:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    56c4:	0402004e 	streq	r0, [r2], #-78	; 0xffffffb2
    56c8:	39053c01 	stmdbcc	r5, {r0, sl, fp, ip, sp}
    56cc:	01040200 	mrseq	r0, R12_usr
    56d0:	06030520 	streq	r0, [r3], -r0, lsr #10
    56d4:	053c2a03 	ldreq	r2, [ip, #-2563]!	; 0xfffff5fd
    56d8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    56dc:	3f062005 	svccc	0x00062005
    56e0:	09053f3d 	stmdbeq	r5, {r0, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp}
    56e4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    56e8:	0009052e 	andeq	r0, r9, lr, lsr #10
    56ec:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    56f0:	02003c05 	andeq	r3, r0, #1280	; 0x500
    56f4:	05490104 	strbeq	r0, [r9, #-260]	; 0xfffffefc
    56f8:	12030607 	andne	r0, r3, #7340032	; 0x700000
    56fc:	061c052e 	ldreq	r0, [ip], -lr, lsr #10
    5700:	20090501 	andcs	r0, r9, r1, lsl #10
    5704:	053f3106 	ldreq	r3, [pc, #-262]!	; 5606 <_Min_Heap_Size+0x4e06>
    5708:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    570c:	053f0609 	ldreq	r0, [pc, #-1545]!	; 510b <_Min_Heap_Size+0x490b>
    5710:	0f05010e 	svceq	0x0005010e
    5714:	0e050106 	adfeqs	f0, f5, f6
    5718:	060b052e 	streq	r0, [fp], -lr, lsr #10
    571c:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5720:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5724:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5728:	07053014 	smladeq	r5, r4, r0, r3
    572c:	01040200 	mrseq	r0, R12_usr
    5730:	7fb80306 	svcvc	0x00b80306
    5734:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5738:	02006604 	andeq	r6, r0, #4, 12	; 0x400000
    573c:	05580404 	ldrbeq	r0, [r8, #-1028]	; 0xfffffbfc
    5740:	58140309 	ldmdapl	r4, {r0, r3, r8, r9}
    5744:	01061505 	tsteq	r6, r5, lsl #10
    5748:	3f060905 	svccc	0x00060905
    574c:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    5750:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5754:	0b052e0e 	bleq	150f94 <_Min_Heap_Size+0x150794>
    5758:	0f053e06 	svceq	0x00053e06
    575c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    5760:	200d052e 	andcs	r0, sp, lr, lsr #10
    5764:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    5768:	04020005 	streq	r0, [r2], #-5
    576c:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
    5770:	01040200 	mrseq	r0, R12_usr
    5774:	6a440567 	bvs	1106d18 <_Min_Heap_Size+0x1106518>
    5778:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
    577c:	053f0607 	ldreq	r0, [pc, #-1543]!	; 517d <_Min_Heap_Size+0x497d>
    5780:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5784:	4e052e09 	cdpmi	14, 0, cr2, cr5, cr9, {0}
    5788:	01040200 	mrseq	r0, R12_usr
    578c:	0039053c 	eorseq	r0, r9, ip, lsr r5
    5790:	20010402 	andcs	r0, r1, r2, lsl #8
    5794:	44060905 	strmi	r0, [r6], #-2309	; 0xfffff6fb
    5798:	2e030305 	cdpcs	3, 0, cr0, cr3, cr5, {0}
    579c:	06190582 	ldreq	r0, [r9], -r2, lsl #11
    57a0:	20050501 	andcs	r0, r5, r1, lsl #10
    57a4:	053f3f06 	ldreq	r3, [pc, #-3846]!	; 48a6 <_Min_Heap_Size+0x40a6>
    57a8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    57ac:	23062007 	movwcs	r2, #24583	; 0x6007
    57b0:	0613054d 	ldreq	r0, [r3], -sp, asr #10
    57b4:	06070501 	streq	r0, [r7], -r1, lsl #10
    57b8:	010c053f 	tsteq	ip, pc, lsr r5
    57bc:	01060d05 	tsteq	r6, r5, lsl #26
    57c0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    57c4:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    57c8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    57cc:	0b052e1b 	bleq	151040 <_Min_Heap_Size+0x150840>
    57d0:	30120520 	andscc	r0, r2, r0, lsr #10
    57d4:	03060905 	movweq	r0, #26885	; 0x6905
    57d8:	3f952e57 	svccc	0x00952e57
    57dc:	01061505 	tsteq	r6, r5, lsl #10
    57e0:	3f060905 	svccc	0x00060905
    57e4:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    57e8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    57ec:	0b052e0e 	bleq	15102c <_Min_Heap_Size+0x15082c>
    57f0:	0f053e06 	svceq	0x00053e06
    57f4:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    57f8:	200d052e 	andcs	r0, sp, lr, lsr #10
    57fc:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    5800:	04020005 	streq	r0, [r2], #-5
    5804:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
    5808:	03060705 	movweq	r0, #26373	; 0x6705
    580c:	054d6617 	strbeq	r6, [sp, #-1559]	; 0xfffff9e9
    5810:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    5814:	053f0607 	ldreq	r0, [pc, #-1543]!	; 5215 <_Min_Heap_Size+0x4a15>
    5818:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    581c:	0c050106 	stfeqs	f0, [r5], {6}
    5820:	0609052e 	streq	r0, [r9], -lr, lsr #10
    5824:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    5828:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    582c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    5830:	03053012 	movweq	r3, #20498	; 0x5012
    5834:	19058806 	stmdbne	r5, {r1, r2, fp, pc}
    5838:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    583c:	153e0620 	ldrne	r0, [lr, #-1568]!	; 0xfffff9e0
    5840:	01040200 	mrseq	r0, R12_usr
    5844:	32063c06 	andcc	r3, r6, #1536	; 0x600
    5848:	01060805 	tsteq	r6, r5, lsl #16
    584c:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    5850:	582e013e 	stmdapl	lr!, {r1, r2, r3, r4, r5, r8}
    5854:	0513204a 	ldreq	r2, [r3, #-74]	; 0xffffffb6
    5858:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    585c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    5860:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5864:	05052e07 	streq	r2, [r5, #-3591]	; 0xfffff1f9
    5868:	3c120306 	ldccc	3, cr0, [r2], {6}
    586c:	04020001 	streq	r0, [r2], #-1
    5870:	02003c02 	andeq	r3, r0, #512	; 0x200
    5874:	002e0504 	eoreq	r0, lr, r4, lsl #10
    5878:	58050402 	stmdapl	r5, {r1, sl}
    587c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5880:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5884:	1a051407 	bne	14a8a8 <_Min_Heap_Size+0x14a0a8>
    5888:	07040200 	streq	r0, [r4, -r0, lsl #4]
    588c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5890:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5894:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
    5898:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    589c:	053f0607 	ldreq	r0, [pc, #-1543]!	; 529d <_Min_Heap_Size+0x4a9d>
    58a0:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    58a4:	0c050106 	stfeqs	f0, [r5], {6}
    58a8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    58ac:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    58b0:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    58b4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    58b8:	05054c12 	streq	r4, [r5, #-3090]	; 0xfffff3ee
    58bc:	02040200 	andeq	r0, r4, #0, 4
    58c0:	052e5803 	streq	r5, [lr, #-2051]!	; 0xfffff7fd
    58c4:	07056316 	smladeq	r5, r6, r3, r6
    58c8:	2e100306 	cdpcs	3, 1, cr0, cr0, cr6, {0}
    58cc:	0613055b 			; <UNDEFINED> instruction: 0x0613055b
    58d0:	06070501 	streq	r0, [r7], -r1, lsl #10
    58d4:	010c053e 	tsteq	ip, lr, lsr r5
    58d8:	01060d05 	tsteq	r6, r5, lsl #26
    58dc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    58e0:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    58e4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    58e8:	0b052e1b 	bleq	15115c <_Min_Heap_Size+0x15095c>
    58ec:	30120520 	andscc	r0, r2, r0, lsr #10
    58f0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    58f4:	34060104 	strcc	r0, [r6], #-260	; 0xfffffefc
    58f8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    58fc:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5900:	07055804 	streq	r5, [r5, -r4, lsl #16]
    5904:	05581303 	ldrbeq	r1, [r8, #-771]	; 0xfffffcfd
    5908:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    590c:	053f0607 	ldreq	r0, [pc, #-1543]!	; 530d <_Min_Heap_Size+0x4b0d>
    5910:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    5914:	0c050106 	stfeqs	f0, [r5], {6}
    5918:	0609052e 	streq	r0, [r9], -lr, lsr #10
    591c:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    5920:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    5924:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    5928:	05054c12 	streq	r4, [r5, #-3090]	; 0xfffff3ee
    592c:	07053406 	streq	r3, [r5, -r6, lsl #8]
    5930:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    5934:	3d190603 	ldccc	6, cr0, [r9, #-12]
    5938:	01061e05 	tsteq	r6, r5, lsl #28
    593c:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    5940:	053f0605 	ldreq	r0, [pc, #-1541]!	; 5343 <_Min_Heap_Size+0x4b43>
    5944:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5948:	3e064a07 	vmlacc.f32	s8, s12, s14
    594c:	01060905 	tsteq	r6, r5, lsl #18
    5950:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    5954:	2e060104 	adfcss	f0, f6, f4
    5958:	594b3d06 	stmdbpl	fp, {r1, r2, r8, sl, fp, ip, sp}^
    595c:	01040200 	mrseq	r0, R12_usr
    5960:	02003c06 	andeq	r3, r0, #1536	; 0x600
    5964:	002e0204 	eoreq	r0, lr, r4, lsl #4
    5968:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    596c:	3f4d2f06 	svccc	0x004d2f06
    5970:	01061505 	tsteq	r6, r5, lsl #10
    5974:	3f060905 	svccc	0x00060905
    5978:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    597c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5980:	0b052e0e 	bleq	1511c0 <_Min_Heap_Size+0x1509c0>
    5984:	0f053e06 	svceq	0x00053e06
    5988:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    598c:	200d052e 	andcs	r0, sp, lr, lsr #10
    5990:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    5994:	61030607 	tstvs	r3, r7, lsl #12
    5998:	0566062e 	strbeq	r0, [r6, #-1582]!	; 0xfffff9d2
    599c:	04020003 	streq	r0, [r2], #-3
    59a0:	09051701 	stmdbeq	r5, {r0, r8, r9, sl, ip}
    59a4:	02040200 	andeq	r0, r4, #0, 4
    59a8:	00660903 	rsbeq	r0, r6, r3, lsl #18
    59ac:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    59b0:	01040200 	mrseq	r0, R12_usr
    59b4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    59b8:	02006704 	andeq	r6, r0, #4, 14	; 0x100000
    59bc:	06670104 	strbteq	r0, [r7], -r4, lsl #2
    59c0:	f8661203 			; <UNDEFINED> instruction: 0xf8661203
    59c4:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    59c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    59cc:	010e053f 	tsteq	lr, pc, lsr r5
    59d0:	01060f05 	tsteq	r6, r5, lsl #30
    59d4:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    59d8:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    59dc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    59e0:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    59e4:	30140520 	andscc	r0, r4, r0, lsr #10
    59e8:	37030a05 	strcc	r0, [r3, -r5, lsl #20]
    59ec:	0609052e 	streq	r0, [r9], -lr, lsr #10
    59f0:	3f2e5003 	svccc	0x002e5003
    59f4:	01061505 	tsteq	r6, r5, lsl #10
    59f8:	3f060905 	svccc	0x00060905
    59fc:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    5a00:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5a04:	0b052e0e 	bleq	151244 <_Min_Heap_Size+0x150a44>
    5a08:	0f053e06 	svceq	0x00053e06
    5a0c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    5a10:	200d052e 	andcs	r0, sp, lr, lsr #10
    5a14:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    5a18:	2e26030a 	cdpcs	3, 2, cr0, cr6, cr10, {0}
    5a1c:	03060705 	movweq	r0, #26373	; 0x6705
    5a20:	09052e62 	stmdbeq	r5, {r1, r5, r6, r9, sl, fp, sp}
    5a24:	35060106 	strcc	r0, [r6, #-262]	; 0xfffffefa
    5a28:	01061405 	tsteq	r6, r5, lsl #8
    5a2c:	03060905 	movweq	r0, #26885	; 0x6905
    5a30:	0e052e0a 	cdpeq	14, 0, cr2, cr5, cr10, {0}
    5a34:	50051306 	andpl	r1, r5, r6, lsl #6
    5a38:	1f40052e 	svcne	0x0040052e
    5a3c:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    5a40:	5c052e56 	stcpl	14, cr2, [r5], {86}	; 0x56
    5a44:	304f051f 	subcc	r0, pc, pc, lsl r5	; <UNPREDICTABLE>
    5a48:	051f6f05 	ldreq	r6, [pc, #-3845]	; 4b4b <_Min_Heap_Size+0x434b>
    5a4c:	5105680e 	tstpl	r5, lr, lsl #16
    5a50:	2057052e 	subscs	r0, r7, lr, lsr #10
    5a54:	05205e05 	streq	r5, [r0, #-3589]!	; 0xfffff1fb
    5a58:	0e051f6f 	cdpeq	15, 0, cr1, cr5, cr15, {3}
    5a5c:	2e4f053e 	mcrcs	5, 2, r0, cr15, cr14, {1}
    5a60:	051f7e05 	ldreq	r7, [pc, #-3589]	; 4c63 <_Min_Heap_Size+0x4463>
    5a64:	3c09030a 	stccc	3, cr0, [r9], {10}
    5a68:	af030c05 	svcge	0x00030c05
    5a6c:	01052e7d 	tsteq	r5, sp, ror lr
    5a70:	2002d203 	andcs	sp, r2, r3, lsl #4
    5a74:	be031005 	cdplt	0, 0, cr1, cr3, cr5, {0}
    5a78:	3503207d 	strcc	r2, [r3, #-125]	; 0xffffff83
    5a7c:	030a052e 	movweq	r0, #42286	; 0xa52e
    5a80:	052e028c 	streq	r0, [lr, #-652]!	; 0xfffffd74
    5a84:	10052101 	andne	r2, r5, r1, lsl #2
    5a88:	052e6303 	streq	r6, [lr, #-771]!	; 0xfffffcfd
    5a8c:	2e170312 	mrccs	3, 0, r0, cr7, cr2, {0}
    5a90:	000202f2 	strdeq	r0, [r2], -r2
    5a94:	01050101 	tsteq	r5, r1, lsl #2
    5a98:	00020500 	andeq	r0, r2, r0, lsl #10
    5a9c:	03000000 	movweq	r0, #0
    5aa0:	06010687 	streq	r0, [r1], -r7, lsl #13
    5aa4:	06030501 	streq	r0, [r3], -r1, lsl #10
    5aa8:	002f1459 	eoreq	r1, pc, r9, asr r4	; <UNPREDICTABLE>
    5aac:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ab0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5ab4:	02003c02 	andeq	r3, r0, #512	; 0x200
    5ab8:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5abc:	3c040402 	cfstrscc	mvf0, [r4], {2}
    5ac0:	05053e06 	streq	r3, [r5, #-3590]	; 0xfffff1fa
    5ac4:	30060106 	andcc	r0, r6, r6, lsl #2
    5ac8:	01040200 	mrseq	r0, R12_usr
    5acc:	02002006 	andeq	r2, r0, #6
    5ad0:	003c0204 	eorseq	r0, ip, r4, lsl #4
    5ad4:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5ad8:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    5adc:	4a062006 	bmi	18dafc <_Min_Heap_Size+0x18d2fc>
    5ae0:	0515204a 	ldreq	r2, [r5, #-74]	; 0xffffffb6
    5ae4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5ae8:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    5aec:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5af0:	052f0605 	streq	r0, [pc, #-1541]!	; 54f3 <_Min_Heap_Size+0x4cf3>
    5af4:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    5af8:	052f0605 	streq	r0, [pc, #-1541]!	; 54fb <_Min_Heap_Size+0x4cfb>
    5afc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5b00:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    5b04:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    5b08:	4d210605 	stcmi	6, cr0, [r1, #-20]!	; 0xffffffec
    5b0c:	01054a06 	tsteq	r5, r6, lsl #20
    5b10:	052e2003 	streq	r2, [lr, #-3]!
    5b14:	04020003 	streq	r0, [r2], #-3
    5b18:	2e4d0301 	cdpcs	3, 4, cr0, cr13, cr1, {0}
    5b1c:	01040200 	mrseq	r0, R12_usr
    5b20:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5b24:	02002001 	andeq	r2, r0, #1
    5b28:	002e0104 	eoreq	r0, lr, r4, lsl #2
    5b2c:	21050402 	tstcs	r5, r2, lsl #8
    5b30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5b34:	066a0404 	strbteq	r0, [sl], -r4, lsl #8
    5b38:	00661803 	rsbeq	r1, r6, r3, lsl #16
    5b3c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5b40:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5b44:	02003c02 	andeq	r3, r0, #512	; 0x200
    5b48:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    5b4c:	062e013f 			; <UNDEFINED> instruction: 0x062e013f
    5b50:	4a4a0620 	bmi	12873d8 <_Min_Heap_Size+0x1286bd8>
    5b54:	19051520 	stmdbne	r5, {r5, r8, sl, ip}
    5b58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5b5c:	1a053d06 	bne	154f7c <_Min_Heap_Size+0x15477c>
    5b60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5b64:	1b052f06 	blne	151784 <_Min_Heap_Size+0x150f84>
    5b68:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5b6c:	1a052f06 	bne	15178c <_Min_Heap_Size+0x150f8c>
    5b70:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5b74:	1f052106 	svcne	0x00052106
    5b78:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5b7c:	064d2106 	strbeq	r2, [sp], -r6, lsl #2
    5b80:	36010558 			; <UNDEFINED> instruction: 0x36010558
    5b84:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5b88:	6a030404 	bvs	c6ba0 <_Min_Heap_Size+0xc63a0>
    5b8c:	000e0220 	andeq	r0, lr, r0, lsr #4
    5b90:	01050101 	tsteq	r5, r1, lsl #2
    5b94:	00020500 	andeq	r0, r2, r0, lsl #10
    5b98:	03000000 	movweq	r0, #0
    5b9c:	050106c9 	streq	r0, [r1, #-1737]	; 0xfffff937
    5ba0:	26051303 	strcs	r1, [r5], -r3, lsl #6
    5ba4:	01050106 	tsteq	r5, r6, lsl #2
    5ba8:	0003023d 	andeq	r0, r3, sp, lsr r2
    5bac:	01050101 	tsteq	r5, r1, lsl #2
    5bb0:	00020500 	andeq	r0, r2, r0, lsl #10
    5bb4:	03000000 	movweq	r0, #0
    5bb8:	050106d2 	streq	r0, [r1, #-1746]	; 0xfffff92e
    5bbc:	26051303 	strcs	r1, [r5], -r3, lsl #6
    5bc0:	01050106 	tsteq	r5, r6, lsl #2
    5bc4:	0003023d 	andeq	r0, r3, sp, lsr r2
    5bc8:	01050101 	tsteq	r5, r1, lsl #2
    5bcc:	00020500 	andeq	r0, r2, r0, lsl #10
    5bd0:	03000000 	movweq	r0, #0
    5bd4:	050106f5 	streq	r0, [r1, #-1781]	; 0xfffff90b
    5bd8:	15132103 	ldrne	r2, [r3, #-259]	; 0xfffffefd
    5bdc:	01060e05 	tsteq	r6, r5, lsl #28
    5be0:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    5be4:	07052e03 	streq	r2, [r5, -r3, lsl #28]
    5be8:	4a100306 	bmi	406808 <_Min_Heap_Size+0x406008>
    5bec:	01061105 	tsteq	r6, r5, lsl #2
    5bf0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    5bf4:	052f0607 	streq	r0, [pc, #-1543]!	; 55f5 <_Min_Heap_Size+0x4df5>
    5bf8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5bfc:	3f062009 	svccc	0x00062009
    5c00:	01064805 	tsteq	r6, r5, lsl #16
    5c04:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
    5c08:	82052e35 	andhi	r2, r5, #848	; 0x350
    5c0c:	05660801 	strbeq	r0, [r6, #-2049]!	; 0xfffff7ff
    5c10:	057b0607 	ldrbeq	r0, [fp, #-1543]!	; 0xfffff9f9
    5c14:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5c18:	4c052e33 	stcmi	14, cr2, [r5], {51}	; 0x33
    5c1c:	200c052e 	andcs	r0, ip, lr, lsr #10
    5c20:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    5c24:	01061405 	tsteq	r6, r5, lsl #8
    5c28:	2f060705 	svccs	0x00060705
    5c2c:	051b0905 	ldreq	r0, [fp, #-2309]	; 0xfffff6fb
    5c30:	05010648 	streq	r0, [r1, #-1608]	; 0xfffff9b8
    5c34:	35052e38 	strcc	r2, [r5, #-3640]	; 0xfffff1c8
    5c38:	0182052e 	orreq	r0, r2, lr, lsr #10
    5c3c:	05746608 	ldrbeq	r6, [r4, #-1544]!	; 0xfffff9f8
    5c40:	20700314 	rsbscs	r0, r0, r4, lsl r3
    5c44:	77030305 	strvc	r0, [r3, -r5, lsl #6]
    5c48:	2603062e 	strcs	r0, [r3], -lr, lsr #12
    5c4c:	06010520 	streq	r0, [r1], -r0, lsr #10
    5c50:	00080213 	andeq	r0, r8, r3, lsl r2
    5c54:	01050101 	tsteq	r5, r1, lsl #2
    5c58:	00020500 	andeq	r0, r2, r0, lsl #10
    5c5c:	03000000 	movweq	r0, #0
    5c60:	050104cf 	streq	r0, [r1, #-1231]	; 0xfffffb31
    5c64:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    5c68:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    5c6c:	03053801 	movweq	r3, #22529	; 0x5801
    5c70:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5c74:	1105354b 	tstne	r5, fp, asr #10
    5c78:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5c7c:	4031064a 	eorsmi	r0, r1, sl, asr #12
    5c80:	01060805 	tsteq	r6, r5, lsl #16
    5c84:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
    5c88:	05430603 	strbeq	r0, [r3, #-1539]	; 0xfffff9fd
    5c8c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5c90:	40062005 	andmi	r2, r6, r5
    5c94:	01060705 	tsteq	r6, r5, lsl #14
    5c98:	05053e06 	streq	r3, [r5, #-3590]	; 0xfffff1fa
    5c9c:	061b055b 			; <UNDEFINED> instruction: 0x061b055b
    5ca0:	20070501 	andcs	r0, r7, r1, lsl #10
    5ca4:	05053e06 	streq	r3, [r5, #-3590]	; 0xfffff1fa
    5ca8:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
    5cac:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5cb0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    5cb4:	03040200 	movweq	r0, #16896	; 0x4200
    5cb8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5cbc:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
    5cc0:	002e0504 	eoreq	r0, lr, r4, lsl #10
    5cc4:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
    5cc8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ccc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5cd0:	2f062e08 	svccs	0x00062e08
    5cd4:	05780305 	ldrbeq	r0, [r8, #-773]!	; 0xfffffcfb
    5cd8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5cdc:	3e062005 	cdpcc	0, 0, cr2, cr6, cr5, {0}
    5ce0:	0619053f 			; <UNDEFINED> instruction: 0x0619053f
    5ce4:	20070501 	andcs	r0, r7, r1, lsl #10
    5ce8:	03060a05 	movweq	r0, #27141	; 0x6a05
    5cec:	4c052e09 	stcmi	14, cr2, [r5], {9}
    5cf0:	0c050106 	stfeqs	f0, [r5], {6}
    5cf4:	06070520 	streq	r0, [r7], -r0, lsr #10
    5cf8:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    5cfc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5d00:	05052e09 	streq	r2, [r5, #-3593]	; 0xfffff1f7
    5d04:	05695006 	strbeq	r5, [r9, #-6]!
    5d08:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5d0c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    5d10:	0c05010b 	stfeqs	f0, [r5], {11}
    5d14:	3f050106 	svccc	0x00050106
    5d18:	200b054a 	andcs	r0, fp, sl, asr #10
    5d1c:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    5d20:	01060c05 	tsteq	r6, r5, lsl #24
    5d24:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    5d28:	1005200a 	andne	r2, r5, sl
    5d2c:	0003054c 	andeq	r0, r3, ip, asr #10
    5d30:	03010402 	movweq	r0, #5122	; 0x1402
    5d34:	002e7fad 	eoreq	r7, lr, sp, lsr #31
    5d38:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5d3c:	01040200 	mrseq	r0, R12_usr
    5d40:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5d44:	05053d01 	streq	r3, [r5, #-3329]	; 0xfffff2ff
    5d48:	09040200 	stmdbeq	r4, {r9}
    5d4c:	00662303 	rsbeq	r2, r6, r3, lsl #6
    5d50:	6d010402 	cfstrsvs	mvf0, [r1, #-8]
    5d54:	6c060705 	stcvs	7, cr0, [r6], {5}
    5d58:	01060a05 	tsteq	r6, r5, lsl #20
    5d5c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    5d60:	07053e10 	smladeq	r5, r0, lr, r3
    5d64:	0a053606 	beq	153584 <_Min_Heap_Size+0x152d84>
    5d68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5d6c:	3e10052e 	cfmul64cc	mvdx0, mvdx0, mvdx14
    5d70:	03060305 	movweq	r0, #25349	; 0x6305
    5d74:	11052e1c 	tstne	r5, ip, lsl lr
    5d78:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5d7c:	4031064a 	eorsmi	r0, r1, sl, asr #12
    5d80:	01060805 	tsteq	r6, r5, lsl #16
    5d84:	053c0705 	ldreq	r0, [ip, #-1797]!	; 0xfffff8fb
    5d88:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
    5d8c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5d90:	3e062005 	cdpcc	0, 0, cr2, cr6, cr5, {0}
    5d94:	01040200 	mrseq	r0, R12_usr
    5d98:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5d9c:	003c0204 	eorseq	r0, ip, r4, lsl #4
    5da0:	3c030402 	cfstrscc	mvf0, [r3], {2}
    5da4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5da8:	053d063c 	ldreq	r0, [sp, #-1596]!	; 0xfffff9c4
    5dac:	19057803 	stmdbne	r5, {r0, r1, fp, ip, sp, lr}
    5db0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5db4:	003e0620 	eorseq	r0, lr, r0, lsr #12
    5db8:	06010402 	streq	r0, [r1], -r2, lsl #8
    5dbc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5dc0:	02003c02 	andeq	r3, r0, #512	; 0x200
    5dc4:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5dc8:	3c040402 	cfstrscc	mvf0, [r4], {2}
    5dcc:	03053d06 	movweq	r3, #23814	; 0x5d06
    5dd0:	06150586 	ldreq	r0, [r5], -r6, lsl #11
    5dd4:	2e440501 	cdpcs	5, 4, cr0, cr4, cr1, {0}
    5dd8:	052e5b05 	streq	r5, [lr, #-2821]!	; 0xfffff4fb
    5ddc:	2f052e3f 	svccs	0x00052e3f
    5de0:	2013052e 	andscs	r0, r3, lr, lsr #10
    5de4:	31060305 	tstcc	r6, r5, lsl #6
    5de8:	060a054c 	streq	r0, [sl], -ip, asr #10
    5dec:	21010501 	tstcs	r1, r1, lsl #10
    5df0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5df4:	6e030504 	cfsh32vs	mvfx0, mvfx3, #4
    5df8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5dfc:	0c056d05 	stceq	13, cr6, [r5], {5}
    5e00:	667f8c03 	ldrbtvs	r8, [pc], -r3, lsl #24
    5e04:	ff030105 			; <UNDEFINED> instruction: 0xff030105
    5e08:	0e052000 	cdpeq	0, 0, cr2, cr5, cr0, {0}
    5e0c:	207f9603 	rsbscs	r9, pc, r3, lsl #12
    5e10:	35031005 	strcc	r1, [r3, #-5]
    5e14:	030e052e 	movweq	r0, #58670	; 0xe52e
    5e18:	0e022e1c 	mcreq	14, 0, r2, cr2, cr12, {0}
    5e1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5e20:	02050001 	andeq	r0, r5, #1
    5e24:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
    5e28:	0107ad03 	tsteq	r7, r3, lsl #26
    5e2c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    5e30:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    5e34:	01010006 	tsteq	r1, r6
    5e38:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e3c:	00112002 	andseq	r2, r1, r2
    5e40:	07b80308 	ldreq	r0, [r8, r8, lsl #6]!
    5e44:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    5e48:	01060b05 	tsteq	r6, r5, lsl #22
    5e4c:	052e3605 	streq	r3, [lr, #-1541]!	; 0xfffff9fb
    5e50:	31052e4e 	tstcc	r5, lr, asr #28
    5e54:	2f01052e 	svccs	0x0001052e
    5e58:	01000702 	tsteq	r0, r2, lsl #14
    5e5c:	00010501 	andeq	r0, r1, r1, lsl #10
    5e60:	11400205 	cmpne	r0, r5, lsl #4
    5e64:	c4030800 	strgt	r0, [r3], #-2048	; 0xfffff800
    5e68:	03050107 	movweq	r0, #20743	; 0x5107
    5e6c:	060b0522 	streq	r0, [fp], -r2, lsr #10
    5e70:	2e350501 	cdpcs	5, 3, cr0, cr5, cr1, {0}
    5e74:	052e4d05 	streq	r4, [lr, #-3333]!	; 0xfffff2fb
    5e78:	01052e30 	tsteq	r5, r0, lsr lr
    5e7c:	0007022f 	andeq	r0, r7, pc, lsr #4
    5e80:	01050101 	tsteq	r5, r1, lsl #2
    5e84:	00020500 	andeq	r0, r2, r0, lsl #10
    5e88:	03000000 	movweq	r0, #0
    5e8c:	050107d1 	streq	r0, [r1, #-2001]	; 0xfffff82f
    5e90:	25051403 	strcs	r1, [r5, #-1027]	; 0xfffffbfd
    5e94:	03050106 	movweq	r0, #20742	; 0x5106
    5e98:	0a053106 	beq	1522b8 <_Min_Heap_Size+0x151ab8>
    5e9c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5ea0:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    5ea4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5ea8:	0c030603 	stceq	6, cr0, [r3], {3}
    5eac:	060a053c 			; <UNDEFINED> instruction: 0x060a053c
    5eb0:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5eb4:	21053e06 	tstcs	r5, r6, lsl #28
    5eb8:	03050106 	movweq	r0, #20742	; 0x5106
    5ebc:	3b053506 	blcc	1532dc <_Min_Heap_Size+0x152adc>
    5ec0:	2c050106 	stfcss	f0, [r5], {6}
    5ec4:	2e2a052e 	cfsh64cs	mvdx0, mvdx10, #30
    5ec8:	23060305 	movwcs	r0, #25349	; 0x6305
    5ecc:	01060a05 	tsteq	r6, r5, lsl #20
    5ed0:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5ed4:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    5ed8:	06030501 	streq	r0, [r3], -r1, lsl #10
    5edc:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    5ee0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5ee4:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    5ee8:	01062105 	tsteq	r6, r5, lsl #2
    5eec:	36060305 	strcc	r0, [r6], -r5, lsl #6
    5ef0:	01060a05 	tsteq	r6, r5, lsl #20
    5ef4:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    5ef8:	0625053e 			; <UNDEFINED> instruction: 0x0625053e
    5efc:	06030501 	streq	r0, [r3], -r1, lsl #10
    5f00:	06340534 			; <UNDEFINED> instruction: 0x06340534
    5f04:	2e260501 	cfsh64cs	mvdx0, mvdx6, #1
    5f08:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    5f0c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5f10:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    5f14:	1f052021 	svcne	0x00052021
    5f18:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5f1c:	06300521 	ldrteq	r0, [r0], -r1, lsr #10
    5f20:	20210501 	eorcs	r0, r1, r1, lsl #10
    5f24:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    5f28:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5f2c:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    5f30:	5005203c 	andpl	r2, r5, ip, lsr r0
    5f34:	2e21052e 	cfsh64cs	mvdx0, mvdx1, #30
    5f38:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    5f3c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5f40:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    5f44:	1f052021 	svcne	0x00052021
    5f48:	2101052e 	tstcs	r1, lr, lsr #10
    5f4c:	03060805 	movweq	r0, #26629	; 0x6805
    5f50:	0f052045 	svceq	0x00052045
    5f54:	0a050106 	beq	146374 <_Min_Heap_Size+0x145b74>
    5f58:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5f5c:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    5f60:	06050501 	streq	r0, [r5], -r1, lsl #10
    5f64:	0621054e 	strteq	r0, [r1], -lr, asr #10
    5f68:	06050501 	streq	r0, [r5], -r1, lsl #10
    5f6c:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    5f70:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f74:	0a030608 	beq	c779c <_Min_Heap_Size+0xc6f9c>
    5f78:	060f053c 			; <UNDEFINED> instruction: 0x060f053c
    5f7c:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    5f80:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    5f84:	01062105 	tsteq	r6, r5, lsl #2
    5f88:	40060505 	andmi	r0, r6, r5, lsl #10
    5f8c:	01062105 	tsteq	r6, r5, lsl #2
    5f90:	03060505 	movweq	r0, #25861	; 0x6505
    5f94:	21053c0a 	tstcs	r5, sl, lsl #24
    5f98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f9c:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5fa0:	01062505 	tsteq	r6, r5, lsl #10
    5fa4:	01000602 	tsteq	r0, r2, lsl #12
    5fa8:	00010501 	andeq	r0, r1, r1, lsl #10
    5fac:	00000205 	andeq	r0, r0, r5, lsl #4
    5fb0:	a0030000 	andge	r0, r3, r0
    5fb4:	03050108 	movweq	r0, #20744	; 0x5108
    5fb8:	06200514 			; <UNDEFINED> instruction: 0x06200514
    5fbc:	06030501 	streq	r0, [r3], -r1, lsl #10
    5fc0:	06330531 			; <UNDEFINED> instruction: 0x06330531
    5fc4:	2e250501 	cfsh64cs	mvdx0, mvdx5, #1
    5fc8:	052e2305 	streq	r2, [lr, #-773]!	; 0xfffffcfb
    5fcc:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    5fd0:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    5fd4:	24052026 	strcs	r2, [r5], #-38	; 0xffffffda
    5fd8:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5fdc:	06350523 	ldrteq	r0, [r5], -r3, lsr #10
    5fe0:	20270501 	eorcs	r0, r7, r1, lsl #10
    5fe4:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    5fe8:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    5fec:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    5ff0:	25052027 	strcs	r2, [r5, #-39]	; 0xffffffd9
    5ff4:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    5ff8:	06200523 	strteq	r0, [r0], -r3, lsr #10
    5ffc:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    6000:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    6004:	05022101 	streq	r2, [r2, #-257]	; 0xfffffeff
    6008:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    600c:	02050001 	andeq	r0, r5, #1
    6010:	00000000 	andeq	r0, r0, r0
    6014:	0108cb03 	tsteq	r8, r3, lsl #22
    6018:	00010216 	andeq	r0, r1, r6, lsl r2
    601c:	01050101 	tsteq	r5, r1, lsl #2
    6020:	00020500 	andeq	r0, r2, r0, lsl #10
    6024:	03000000 	movweq	r0, #0
    6028:	050108ba 	streq	r0, [r1, #-2234]	; 0xfffff746
    602c:	06052203 	streq	r2, [r5], -r3, lsl #4
    6030:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6034:	4401052e 	strmi	r0, [r1], #-1326	; 0xfffffad2
    6038:	1b060505 	blne	187454 <_Min_Heap_Size+0x186c54>
    603c:	06010531 			; <UNDEFINED> instruction: 0x06010531
    6040:	0004023e 	andeq	r0, r4, lr, lsr r2
    6044:	08810101 	stmeq	r1, {r0, r8}
    6048:	00030000 	andeq	r0, r3, r0
    604c:	000001e8 	andeq	r0, r0, r8, ror #3
    6050:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6054:	0101000d 	tsteq	r1, sp
    6058:	00000101 	andeq	r0, r0, r1, lsl #2
    605c:	00000100 	andeq	r0, r0, r0, lsl #2
    6060:	2f2e2e01 	svccs	0x002e2e01
    6064:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6068:	2f737265 	svccs	0x00737265
    606c:	334d5453 	movtcc	r5, #54355	; 0xd453
    6070:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    6074:	41485f78 	hvcmi	34296	; 0x85f8
    6078:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    607c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6080:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    6084:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    6088:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    608c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    6090:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    6094:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    6098:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    609c:	5f6d7261 	svcpl	0x006d7261
    60a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    60a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    60a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    60ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    60b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    60b4:	30312d69 	eorscc	r2, r1, r9, ror #26
    60b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    60bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    60c0:	615c3031 	cmpvs	ip, r1, lsr r0
    60c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    60c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    60cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    60d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    60d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    60d8:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    60dc:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    60e0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    60e4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    60e8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    60ec:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    60f0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    60f4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    60f8:	5f6d7261 	svcpl	0x006d7261
    60fc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    6100:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    6104:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6108:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    610c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6110:	30312d69 	eorscc	r2, r1, r9, ror #26
    6114:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    6118:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    611c:	615c3031 	cmpvs	ip, r1, lsr r0
    6120:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6124:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6128:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    612c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    6130:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6134:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    6138:	2f2e2e00 	svccs	0x002e2e00
    613c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6140:	2f737265 	svccs	0x00737265
    6144:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    6148:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    614c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    6150:	2f54532f 	svccs	0x0054532f
    6154:	334d5453 	movtcc	r5, #54355	; 0xd453
    6158:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    615c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    6160:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6164:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    6168:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    616c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    6170:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    6174:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    6178:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    617c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 6184 <_Min_Heap_Size+0x5984>
    6180:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6184:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    6188:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    618c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    6190:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    6194:	73000063 	movwvc	r0, #99	; 0x63
    6198:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    619c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    61a0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    61a4:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    61a8:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    61ac:	5f000001 	svcpl	0x00000001
    61b0:	61666564 	cmnvs	r6, r4, ror #10
    61b4:	5f746c75 	svcpl	0x00746c75
    61b8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    61bc:	00682e73 	rsbeq	r2, r8, r3, ror lr
    61c0:	5f000002 	svcpl	0x00000002
    61c4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    61c8:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    61cc:	00000300 	andeq	r0, r0, r0, lsl #6
    61d0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    61d4:	30346632 	eorscc	r6, r4, r2, lsr r6
    61d8:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    61dc:	00040068 	andeq	r0, r4, r8, rrx
    61e0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    61e4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    61e8:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    61ec:	00000400 	andeq	r0, r0, r0, lsl #8
    61f0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    61f4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    61f8:	61685f78 	smcvs	34296	; 0x85f8
    61fc:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    6200:	00682e66 	rsbeq	r2, r8, r6, ror #28
    6204:	73000005 	movwvc	r0, #5
    6208:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    620c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6210:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    6214:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    6218:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    621c:	73000005 	movwvc	r0, #5
    6220:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6224:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6228:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    622c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    6230:	00682e66 	rsbeq	r2, r8, r6, ror #28
    6234:	00000006 	andeq	r0, r0, r6
    6238:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    623c:	00116002 	andseq	r6, r1, r2
    6240:	01a40308 			; <UNDEFINED> instruction: 0x01a40308
    6244:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6248:	13590603 	cmpne	r9, #3145728	; 0x300000
    624c:	00151313 	andseq	r1, r5, r3, lsl r3
    6250:	06010402 	streq	r0, [r1], -r2, lsl #8
    6254:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6258:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    625c:	004a0304 	subeq	r0, sl, r4, lsl #6
    6260:	4a040402 	bmi	107270 <_Min_Heap_Size+0x106a70>
    6264:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6268:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    626c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    6270:	004a0704 	subeq	r0, sl, r4, lsl #14
    6274:	4a080402 	bmi	207284 <_Min_Heap_Size+0x206a84>
    6278:	09040200 	stmdbeq	r4, {r9}
    627c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6280:	02002009 	andeq	r2, r0, #9
    6284:	06200904 	strteq	r0, [r0], -r4, lsl #18
    6288:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    628c:	003c0602 	eorseq	r0, ip, r2, lsl #12
    6290:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6294:	02004b06 	andeq	r4, r0, #6144	; 0x1800
    6298:	3c060104 	stfccs	f0, [r6], {4}
    629c:	02040200 	andeq	r0, r4, #0, 4
    62a0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    62a4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    62a8:	002e0404 	eoreq	r0, lr, r4, lsl #8
    62ac:	3c050402 	cfstrscc	mvf0, [r5], {2}
    62b0:	06040200 	streq	r0, [r4], -r0, lsl #4
    62b4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    62b8:	02003c07 	andeq	r3, r0, #1792	; 0x700
    62bc:	003c0804 	eorseq	r0, ip, r4, lsl #16
    62c0:	3c090402 	cfstrscc	mvf0, [r9], {2}
    62c4:	0a040200 	beq	106acc <_Min_Heap_Size+0x1062cc>
    62c8:	001d053c 	andseq	r0, sp, ip, lsr r5
    62cc:	03010402 	movweq	r0, #5122	; 0x1402
    62d0:	052e00c7 	streq	r0, [lr, #-199]!	; 0xffffff39
    62d4:	04020003 	streq	r0, [r2], #-3
    62d8:	7fb9030b 	svcvc	0x00b9030b
    62dc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    62e0:	3e581203 	cdpcc	2, 5, cr1, cr8, cr3, {0}
    62e4:	01060e05 	tsteq	r6, r5, lsl #28
    62e8:	21060905 	tstcs	r6, r5, lsl #18
    62ec:	01063705 	tsteq	r6, r5, lsl #14
    62f0:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    62f4:	09052e0e 	stmdbeq	r5, {r1, r2, r3, r9, sl, fp, sp}
    62f8:	1b052f06 	blne	151f18 <_Min_Heap_Size+0x151718>
    62fc:	23050106 	movwcs	r0, #20742	; 0x5106
    6300:	200e0520 	andcs	r0, lr, r0, lsr #10
    6304:	21060905 	tstcs	r6, r5, lsl #18
    6308:	01061805 	tsteq	r6, r5, lsl #16
    630c:	23060905 	movwcs	r0, #26885	; 0x6905
    6310:	01060e05 	tsteq	r6, r5, lsl #28
    6314:	21060905 	tstcs	r6, r5, lsl #18
    6318:	01060e05 	tsteq	r6, r5, lsl #28
    631c:	2f060905 	svccs	0x00060905
    6320:	01061d05 	tsteq	r6, r5, lsl #26
    6324:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    6328:	0e052e47 	cdpeq	14, 0, cr2, cr5, cr7, {2}
    632c:	06090520 	streq	r0, [r9], -r0, lsr #10
    6330:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    6334:	00090501 	andeq	r0, r9, r1, lsl #10
    6338:	03010402 	movweq	r0, #5122	; 0x1402
    633c:	02002e75 	andeq	r2, r0, #1872	; 0x750
    6340:	11030104 	tstne	r3, r4, lsl #2
    6344:	0d030658 	stceq	6, cr0, [r3, #-352]	; 0xfffffea0
    6348:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    634c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6350:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
    6354:	08040200 	stmdaeq	r4, {r9}
    6358:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    635c:	02002e0b 	andeq	r2, r0, #11, 28	; 0xb0
    6360:	002e0c04 	eoreq	r0, lr, r4, lsl #24
    6364:	2e0f0402 	cdpcs	4, 0, cr0, cr15, cr2, {0}
    6368:	12040200 	andne	r0, r4, #0, 4
    636c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6370:	02002e14 	andeq	r2, r0, #20, 28	; 0x140
    6374:	002e1704 	eoreq	r1, lr, r4, lsl #14
    6378:	2e1c0402 	cfmulscs	mvf0, mvf12, mvf2
    637c:	1e040200 	cdpne	2, 0, cr0, cr4, cr0, {0}
    6380:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6384:	30062e21 	andcc	r2, r6, r1, lsr #28
    6388:	01062405 	tsteq	r6, r5, lsl #8
    638c:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    6390:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    6394:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    6398:	18052e39 	stmdane	r5, {r0, r3, r4, r5, r9, sl, fp, sp}
    639c:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    63a0:	2f060905 	svccs	0x00060905
    63a4:	01062605 	tsteq	r6, r5, lsl #12
    63a8:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    63ac:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    63b0:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
    63b4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    63b8:	22040200 	andcs	r0, r4, #0, 4
    63bc:	031d0537 	tsteq	sp, #230686720	; 0xdc00000
    63c0:	12055817 	andne	r5, r5, #1507328	; 0x170000
    63c4:	00340574 	eorseq	r0, r4, r4, ror r5
    63c8:	20200402 	eorcs	r0, r0, r2, lsl #8
    63cc:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    63d0:	05202004 	streq	r2, [r0, #-4]!
    63d4:	04020009 	streq	r0, [r2], #-9
    63d8:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
    63dc:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    63e0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    63e4:	04020009 	streq	r0, [r2], #-9
    63e8:	054d0620 	strbeq	r0, [sp, #-1568]	; 0xfffff9e0
    63ec:	0402000e 	streq	r0, [r2], #-14
    63f0:	00010620 	andeq	r0, r1, r0, lsr #12
    63f4:	20200402 	eorcs	r0, r0, r2, lsl #8
    63f8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    63fc:	21062004 	tstcs	r6, r4
    6400:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    6404:	01062004 	tsteq	r6, r4
    6408:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    640c:	052e2004 	streq	r2, [lr, #-4]!
    6410:	04020009 	streq	r0, [r2], #-9
    6414:	052f0620 	streq	r0, [pc, #-1568]!	; 5dfc <_Min_Heap_Size+0x55fc>
    6418:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    641c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6420:	0402000b 	streq	r0, [r2], #-11
    6424:	3e062020 	cdpcc	0, 0, cr2, cr6, cr0, {1}
    6428:	01061005 	tsteq	r6, r5
    642c:	30060905 	andcc	r0, r6, r5, lsl #18
    6430:	01061405 	tsteq	r6, r5, lsl #8
    6434:	30060905 	andcc	r0, r6, r5, lsl #18
    6438:	01060e05 	tsteq	r6, r5, lsl #28
    643c:	21060905 	tstcs	r6, r5, lsl #18
    6440:	01060e05 	tsteq	r6, r5, lsl #28
    6444:	2f060905 	svccs	0x00060905
    6448:	01061605 	tsteq	r6, r5, lsl #12
    644c:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    6450:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    6454:	06090501 	streq	r0, [r9], -r1, lsl #10
    6458:	06140530 			; <UNDEFINED> instruction: 0x06140530
    645c:	06090501 	streq	r0, [r9], -r1, lsl #10
    6460:	060e0530 			; <UNDEFINED> instruction: 0x060e0530
    6464:	06090501 	streq	r0, [r9], -r1, lsl #10
    6468:	060e0521 	streq	r0, [lr], -r1, lsr #10
    646c:	06090501 	streq	r0, [r9], -r1, lsl #10
    6470:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    6474:	200b0501 	andcs	r0, fp, r1, lsl #10
    6478:	10053e06 	andne	r3, r5, r6, lsl #28
    647c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6480:	13053006 	movwne	r3, #20486	; 0x5006
    6484:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6488:	0e053106 	adfeqs	f3, f5, f6
    648c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6490:	0e052106 	adfeqs	f2, f5, f6
    6494:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6498:	16052106 	strne	r2, [r5], -r6, lsl #2
    649c:	0b050106 	bleq	1468bc <_Min_Heap_Size+0x1460bc>
    64a0:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    64a4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    64a8:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    64ac:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    64b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    64b4:	99030602 	stmdbls	r3, {r1, r9, sl}
    64b8:	36052e7f 			; <UNDEFINED> instruction: 0x36052e7f
    64bc:	02040200 	andeq	r0, r4, #0, 4
    64c0:	16050106 	strne	r0, [r5], -r6, lsl #2
    64c4:	01040200 	mrseq	r0, R12_usr
    64c8:	03052006 	movweq	r2, #20486	; 0x5006
    64cc:	01040200 	mrseq	r0, R12_usr
    64d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    64d4:	10053106 	andne	r3, r5, r6, lsl #2
    64d8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    64dc:	25053006 	strcs	r3, [r5, #-6]
    64e0:	0f050106 	svceq	0x00050106
    64e4:	06050520 	streq	r0, [r5], -r0, lsr #10
    64e8:	06070530 			; <UNDEFINED> instruction: 0x06070530
    64ec:	05400601 	strbeq	r0, [r0, #-1537]	; 0xfffff9ff
    64f0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    64f4:	3905201c 	stmdbcc	r5, {r2, r3, r4, sp}
    64f8:	2009052e 	andcs	r0, r9, lr, lsr #10
    64fc:	03060705 	movweq	r0, #26373	; 0x6705
    6500:	14053c12 	strne	r3, [r5], #-3090	; 0xfffff3ee
    6504:	1b050106 	blne	146924 <_Min_Heap_Size+0x146124>
    6508:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
    650c:	054d3106 	strbeq	r3, [sp, #-262]	; 0xfffffefa
    6510:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6514:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6518:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    651c:	0e052025 	cdpeq	0, 0, cr2, cr5, cr5, {1}
    6520:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6524:	061c052f 	ldreq	r0, [ip], -pc, lsr #10
    6528:	20240501 	eorcs	r0, r4, r1, lsl #10
    652c:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    6530:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6534:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6538:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    653c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6540:	0905201b 	stmdbeq	r5, {r0, r1, r3, r4, sp}
    6544:	0607052e 	streq	r0, [r7], -lr, lsr #10
    6548:	053c0c03 	ldreq	r0, [ip, #-3075]!	; 0xfffff3fd
    654c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    6550:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    6554:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    6558:	0c052023 	stceq	0, cr2, [r5], {35}	; 0x23
    655c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    6560:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    6564:	20210501 	eorcs	r0, r1, r1, lsl #10
    6568:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
    656c:	0705200c 	streq	r2, [r5, -ip]
    6570:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    6574:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6578:	14052406 	strne	r2, [r5], #-1030	; 0xfffffbfa
    657c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6580:	013f0620 	teqeq	pc, r0, lsr #12
    6584:	204a582e 	subcs	r5, sl, lr, lsr #16
    6588:	06280514 			; <UNDEFINED> instruction: 0x06280514
    658c:	200e0501 	andcs	r0, lr, r1, lsl #10
    6590:	4b060905 	blmi	1889ac <_Min_Heap_Size+0x1881ac>
    6594:	01062c05 	tsteq	r6, r5, lsl #24
    6598:	052e2005 	streq	r2, [lr, #-5]!
    659c:	0e052019 	mcreq	0, 0, r2, cr5, cr9, {0}
    65a0:	0609052e 	streq	r0, [r9], -lr, lsr #10
    65a4:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    65a8:	001d0501 	andseq	r0, sp, r1, lsl #10
    65ac:	4a010402 	bmi	475bc <_Min_Heap_Size+0x46dbc>
    65b0:	03040200 	movweq	r0, #16896	; 0x4200
    65b4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    65b8:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    65bc:	004a0704 	subeq	r0, sl, r4, lsl #14
    65c0:	4a090402 	bmi	2475d0 <_Min_Heap_Size+0x246dd0>
    65c4:	0b040200 	bleq	106dcc <_Min_Heap_Size+0x1065cc>
    65c8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    65cc:	3c584a0d 	mrrccc	10, 0, r4, r8, cr13
    65d0:	03010520 	movweq	r0, #5408	; 0x1520
    65d4:	023c9e27 	eorseq	r9, ip, #624	; 0x270
    65d8:	01010008 	tsteq	r1, r8
    65dc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    65e0:	00000002 	andeq	r0, r0, r2
    65e4:	02a60300 	adceq	r0, r6, #0, 6
    65e8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    65ec:	133d0603 	teqne	sp, #3145728	; 0x300000
    65f0:	00151313 	andseq	r1, r5, r3, lsl r3
    65f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    65f8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    65fc:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    6600:	004a0304 	subeq	r0, sl, r4, lsl #6
    6604:	4a040402 	bmi	107614 <_Min_Heap_Size+0x106e14>
    6608:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    660c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6610:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    6614:	004a0704 	subeq	r0, sl, r4, lsl #14
    6618:	4a080402 	bmi	207628 <_Min_Heap_Size+0x206e28>
    661c:	09040200 	stmdbeq	r4, {r9}
    6620:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6624:	02002e09 	andeq	r2, r0, #9, 28	; 0x90
    6628:	05200904 	streq	r0, [r0, #-2308]!	; 0xfffff6fc
    662c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6630:	2e0f0301 	cdpcs	3, 0, cr0, cr15, cr1, {0}
    6634:	2e12052e 	cfmul64cs	mvdx0, mvdx2, mvdx14
    6638:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    663c:	05202004 	streq	r2, [r0, #-4]!
    6640:	04020009 	streq	r0, [r2], #-9
    6644:	07052e20 	streq	r2, [r5, -r0, lsr #28]
    6648:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
    664c:	01061405 	tsteq	r6, r5, lsl #8
    6650:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    6654:	1405202b 	strne	r2, [r5], #-43	; 0xffffffd5
    6658:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    665c:	0622053f 			; <UNDEFINED> instruction: 0x0622053f
    6660:	58300501 	ldmdapl	r0!, {r0, r8, sl}
    6664:	052e4d05 	streq	r4, [lr, #-3333]!	; 0xfffff2fb
    6668:	22052e2c 	andcs	r2, r5, #44, 28	; 0x2c0
    666c:	0607054a 	streq	r0, [r7], -sl, asr #10
    6670:	0614054d 	ldreq	r0, [r4], -sp, asr #10
    6674:	06070501 	streq	r0, [r7], -r1, lsl #10
    6678:	0616054d 	ldreq	r0, [r6], -sp, asr #10
    667c:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    6680:	16052306 	strne	r2, [r5], -r6, lsl #6
    6684:	2e050106 	adfcss	f0, f5, f6
    6688:	02040200 	andeq	r0, r4, #0, 4
    668c:	4a570306 	bmi	15c72ac <_Min_Heap_Size+0x15c6aac>
    6690:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    6694:	01060204 	tsteq	r6, r4, lsl #4
    6698:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    669c:	20060104 	andcs	r0, r6, r4, lsl #2
    66a0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    66a4:	01060104 	tsteq	r6, r4, lsl #2
    66a8:	31060505 	tstcc	r6, r5, lsl #10
    66ac:	01061005 	tsteq	r6, r5
    66b0:	30060505 	andcc	r0, r6, r5, lsl #10
    66b4:	01060f05 	tsteq	r6, r5, lsl #30
    66b8:	30060505 	andcc	r0, r6, r5, lsl #10
    66bc:	01060705 	tsteq	r6, r5, lsl #14
    66c0:	25053f06 	strcs	r3, [r5, #-3846]	; 0xfffff0fa
    66c4:	0b050106 	bleq	146ae4 <_Min_Heap_Size+0x1462e4>
    66c8:	0607052e 	streq	r0, [r7], -lr, lsr #10
    66cc:	06280559 			; <UNDEFINED> instruction: 0x06280559
    66d0:	2e1c0501 	cfmul32cs	mvfx0, mvfx12, mvfx1
    66d4:	05201505 	streq	r1, [r0, #-1285]!	; 0xfffffafb
    66d8:	07053c0b 	streq	r3, [r5, -fp, lsl #24]
    66dc:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    66e0:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    66e4:	01040200 	mrseq	r0, R12_usr
    66e8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    66ec:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    66f0:	004a0504 	subeq	r0, sl, r4, lsl #10
    66f4:	4a070402 	bmi	1c7704 <_Min_Heap_Size+0x1c6f04>
    66f8:	09040200 	stmdbeq	r4, {r9}
    66fc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6700:	02004a0b 	andeq	r4, r0, #45056	; 0xb000
    6704:	4a4a0d04 	bmi	1289b1c <_Min_Heap_Size+0x128931c>
    6708:	d9060905 	stmdble	r6, {r0, r2, r8, fp}
    670c:	01061305 	tsteq	r6, r5, lsl #6
    6710:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6714:	0613053d 			; <UNDEFINED> instruction: 0x0613053d
    6718:	06090501 	streq	r0, [r9], -r1, lsl #10
    671c:	0614054d 	ldreq	r0, [r4], -sp, asr #10
    6720:	06090501 	streq	r0, [r9], -r1, lsl #10
    6724:	0614054b 	ldreq	r0, [r4], -fp, asr #10
    6728:	06090501 	streq	r0, [r9], -r1, lsl #10
    672c:	2805134d 	stmdacs	r5, {r0, r2, r3, r6, r8, r9, ip}
    6730:	01050106 	tsteq	r5, r6, lsl #2
    6734:	209e1403 	addscs	r1, lr, r3, lsl #8
    6738:	01000802 	tsteq	r0, r2, lsl #16
    673c:	00010501 	andeq	r0, r1, r1, lsl #10
    6740:	00000205 	andeq	r0, r0, r5, lsl #4
    6744:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    6748:	01060102 	tsteq	r6, r2, lsl #2
    674c:	2f060305 	svccs	0x00060305
    6750:	0c053015 	stceq	0, cr3, [r5], {21}
    6754:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6758:	300f0520 	andcc	r0, pc, r0, lsr #10
    675c:	26060305 	strcs	r0, [r6], -r5, lsl #6
    6760:	13060105 	movwne	r0, #24837	; 0x6105
    6764:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    6768:	75030304 	strvc	r0, [r3, #-772]	; 0xfffffcfc
    676c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6770:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6774:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    6778:	0502440f 	streq	r4, [r2, #-1039]	; 0xfffffbf1
    677c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6780:	02050001 	andeq	r0, r5, #1
    6784:	00000000 	andeq	r0, r0, r0
    6788:	01039a03 	tsteq	r3, r3, lsl #20
    678c:	03050106 	movweq	r0, #20742	; 0x5106
    6790:	302f3e06 	eorcc	r3, pc, r6, lsl #28
    6794:	01060505 	tsteq	r6, r5, lsl #10
    6798:	11052206 	tstne	r5, r6, lsl #4
    679c:	01050106 	tsteq	r5, r6, lsl #2
    67a0:	00030526 	andeq	r0, r3, r6, lsr #10
    67a4:	03030402 	movweq	r0, #13314	; 0x3402
    67a8:	02002075 	andeq	r2, r0, #117	; 0x75
    67ac:	002e0304 	eoreq	r0, lr, r4, lsl #6
    67b0:	20030402 	andcs	r0, r3, r2, lsl #8
    67b4:	03040200 	movweq	r0, #16896	; 0x4200
    67b8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    67bc:	05052101 	streq	r2, [r5, #-257]	; 0xfffffeff
    67c0:	26056e06 	strcs	r6, [r5], -r6, lsl #28
    67c4:	11050106 	tstne	r5, r6, lsl #2
    67c8:	22010520 	andcs	r0, r1, #32, 10	; 0x8000000
    67cc:	01000402 	tsteq	r0, r2, lsl #8
    67d0:	00010501 	andeq	r0, r1, r1, lsl #10
    67d4:	00000205 	andeq	r0, r0, r5, lsl #4
    67d8:	b1030000 	mrslt	r0, (UNDEF: 3)
    67dc:	01060103 	tsteq	r6, r3, lsl #2
    67e0:	2f060305 	svccs	0x00060305
    67e4:	07053115 	smladeq	r5, r5, r1, r3
    67e8:	03050106 	movweq	r0, #20742	; 0x5106
    67ec:	17052306 	strne	r2, [r5, -r6, lsl #6]
    67f0:	3b050106 	blcc	146c10 <_Min_Heap_Size+0x146410>
    67f4:	2e33052e 	cdpcs	5, 3, cr0, cr3, cr14, {1}
    67f8:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    67fc:	03052101 	movweq	r2, #20737	; 0x5101
    6800:	03040200 	movweq	r0, #16896	; 0x4200
    6804:	00207903 	eoreq	r7, r0, r3, lsl #18
    6808:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    680c:	03040200 	movweq	r0, #16896	; 0x4200
    6810:	00060220 	andeq	r0, r6, r0, lsr #4
    6814:	01050101 	tsteq	r5, r1, lsl #2
    6818:	00020500 	andeq	r0, r2, r0, lsl #10
    681c:	03000000 	movweq	r0, #0
    6820:	060103ca 	streq	r0, [r1], -sl, asr #7
    6824:	06030501 	streq	r0, [r3], -r1, lsl #10
    6828:	0611053d 			; <UNDEFINED> instruction: 0x0611053d
    682c:	06030501 	streq	r0, [r3], -r1, lsl #10
    6830:	0705313f 	smladxeq	r5, pc, r1, r3	; <UNPREDICTABLE>
    6834:	03050106 	movweq	r0, #20742	; 0x5106
    6838:	0f053e06 	svceq	0x00053e06
    683c:	03050106 	movweq	r0, #20742	; 0x5106
    6840:	0f053006 	svceq	0x00053006
    6844:	03050106 	movweq	r0, #20742	; 0x5106
    6848:	0f052206 	svceq	0x00052206
    684c:	03050106 	movweq	r0, #20742	; 0x5106
    6850:	0e053006 	cdpeq	0, 0, cr3, cr5, cr6, {0}
    6854:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6858:	06020520 	streq	r0, [r2], -r0, lsr #10
    685c:	060b0523 	streq	r0, [fp], -r3, lsr #10
    6860:	20040501 	andcs	r0, r4, r1, lsl #10
    6864:	053e0c05 	ldreq	r0, [lr, #-3077]!	; 0xfffff3fb
    6868:	03052601 	movweq	r2, #22017	; 0x5601
    686c:	03040200 	movweq	r0, #16896	; 0x4200
    6870:	002e6a03 	eoreq	r6, lr, r3, lsl #20
    6874:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6878:	03040200 	movweq	r0, #16896	; 0x4200
    687c:	030c0520 	movweq	r0, #50464	; 0xc520
    6880:	05023c14 	streq	r3, [r2, #-3092]	; 0xfffff3ec
    6884:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6888:	02050001 	andeq	r0, r5, #1
    688c:	00000000 	andeq	r0, r0, r0
    6890:	0103fb03 	tsteq	r3, r3, lsl #22	; <UNPREDICTABLE>
    6894:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    6898:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    689c:	01010001 	tsteq	r1, r1
    68a0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    68a4:	00000002 	andeq	r0, r0, r2
    68a8:	03ec0300 	mvneq	r0, #0, 6
    68ac:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    68b0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    68b4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    68b8:	01052e05 	tsteq	r5, r5, lsl #28
    68bc:	06050533 			; <UNDEFINED> instruction: 0x06050533
    68c0:	01052f1d 	tsteq	r5, sp, lsl pc
    68c4:	04023006 	streq	r3, [r2], #-6
    68c8:	10010100 	andne	r0, r1, r0, lsl #2
    68cc:	03000010 	movweq	r0, #16
    68d0:	00020f00 	andeq	r0, r2, r0, lsl #30
    68d4:	fb010200 	blx	470de <_Min_Heap_Size+0x468de>
    68d8:	01000d0e 	tsteq	r0, lr, lsl #26
    68dc:	00010101 	andeq	r0, r1, r1, lsl #2
    68e0:	00010000 	andeq	r0, r1, r0
    68e4:	2e2e0100 	sufcse	f0, f6, f0
    68e8:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    68ec:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    68f0:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    68f4:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    68f8:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    68fc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 6904 <_Min_Heap_Size+0x6104>
    6900:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6904:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    6908:	3a630063 	bcc	18c6a9c <_Min_Heap_Size+0x18c629c>
    690c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    6910:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    6914:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    6918:	6f72705c 	svcvs	0x0072705c
    691c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    6920:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6924:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    6928:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    692c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    6930:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    6934:	61652d65 	cmnvs	r5, r5, ror #26
    6938:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    693c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    6940:	31323032 	teqcc	r2, r2, lsr r0
    6944:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    6948:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    694c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    6950:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6954:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    6958:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    695c:	616d5c65 	cmnvs	sp, r5, ror #24
    6960:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    6964:	3a630065 	bcc	18c6b00 <_Min_Heap_Size+0x18c6300>
    6968:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    696c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    6970:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    6974:	6f72705c 	svcvs	0x0072705c
    6978:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    697c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6980:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    6984:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    6988:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    698c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    6990:	61652d65 	cmnvs	r5, r5, ror #26
    6994:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    6998:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    699c:	31323032 	teqcc	r2, r2, lsr r0
    69a0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    69a4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    69a8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    69ac:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    69b0:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    69b4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    69b8:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    69bc:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    69c0:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    69c4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    69c8:	534d432f 	movtpl	r4, #54063	; 0xd32f
    69cc:	442f5349 	strtmi	r5, [pc], #-841	; 69d4 <_Min_Heap_Size+0x61d4>
    69d0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    69d4:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    69d8:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    69dc:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    69e0:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    69e4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    69e8:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    69ec:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    69f0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    69f4:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    69f8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    69fc:	5f787834 	svcpl	0x00787834
    6a00:	5f4c4148 	svcpl	0x004c4148
    6a04:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6a08:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    6a0c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    6a10:	6f432f2e 	svcvs	0x00432f2e
    6a14:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    6a18:	0000636e 	andeq	r6, r0, lr, ror #6
    6a1c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6a20:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6a24:	61685f78 	smcvs	34296	; 0x85f8
    6a28:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
    6a2c:	00632e61 	rsbeq	r2, r3, r1, ror #28
    6a30:	5f000001 	svcpl	0x00000001
    6a34:	61666564 	cmnvs	r6, r4, ror #10
    6a38:	5f746c75 	svcpl	0x00746c75
    6a3c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    6a40:	00682e73 	rsbeq	r2, r8, r3, ror lr
    6a44:	5f000002 	svcpl	0x00000002
    6a48:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    6a4c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    6a50:	00000300 	andeq	r0, r0, r0, lsl #6
    6a54:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6a58:	30346632 	eorscc	r6, r4, r2, lsr r6
    6a5c:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    6a60:	00040068 	andeq	r0, r4, r8, rrx
    6a64:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6a68:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6a6c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    6a70:	00000400 	andeq	r0, r0, r0, lsl #8
    6a74:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6a78:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6a7c:	61685f78 	smcvs	34296	; 0x85f8
    6a80:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    6a84:	00682e66 	rsbeq	r2, r8, r6, ror #28
    6a88:	73000005 	movwvc	r0, #5
    6a8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6a90:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6a94:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    6a98:	616d645f 	cmnvs	sp, pc, asr r4
    6a9c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6aa0:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    6aa4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    6aa8:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    6aac:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6ab0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    6ab4:	00000400 	andeq	r0, r0, r0, lsl #8
    6ab8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6abc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6ac0:	61685f78 	smcvs	34296	; 0x85f8
    6ac4:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    6ac8:	73000005 	movwvc	r0, #5
    6acc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6ad0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6ad4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    6ad8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    6adc:	00682e66 	rsbeq	r2, r8, r6, ror #28
    6ae0:	00000006 	andeq	r0, r0, r6
    6ae4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6ae8:	00000002 	andeq	r0, r0, r2
    6aec:	08ff0300 	ldmeq	pc!, {r8, r9}^	; <UNPREDICTABLE>
    6af0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6af4:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    6af8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6afc:	03052016 	movweq	r2, #20502	; 0x5016
    6b00:	07054d06 	streq	r4, [r5, -r6, lsl #26]
    6b04:	18050106 	stmdane	r5, {r1, r2, r8}
    6b08:	06030520 	streq	r0, [r3], -r0, lsr #10
    6b0c:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    6b10:	20050501 	andcs	r0, r5, r1, lsl #10
    6b14:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    6b18:	01060905 	tsteq	r6, r5, lsl #18
    6b1c:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    6b20:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    6b24:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    6b28:	0105201a 	tsteq	r5, sl, lsl r0
    6b2c:	06050522 	streq	r0, [r5], -r2, lsr #10
    6b30:	052e7203 	streq	r7, [lr, #-515]!	; 0xfffffdfd
    6b34:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    6b38:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    6b3c:	09052306 	stmdbeq	r5, {r1, r2, r8, r9, sp}
    6b40:	1a050106 	bne	146f60 <_Min_Heap_Size+0x146760>
    6b44:	00020220 	andeq	r0, r2, r0, lsr #4
    6b48:	01050101 	tsteq	r5, r1, lsl #2
    6b4c:	00020500 	andeq	r0, r2, r0, lsl #10
    6b50:	03000000 	movweq	r0, #0
    6b54:	060109a1 	streq	r0, [r1], -r1, lsr #19
    6b58:	06030501 	streq	r0, [r3], -r1, lsl #10
    6b5c:	062c0521 	strteq	r0, [ip], -r1, lsr #10
    6b60:	20370501 	eorscs	r0, r7, r1, lsl #10
    6b64:	05204005 	streq	r4, [r0, #-5]!
    6b68:	0305200c 	movweq	r2, #20492	; 0x500c
    6b6c:	05134d06 	ldreq	r4, [r3, #-3334]	; 0xfffff2fa
    6b70:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    6b74:	03052e15 	movweq	r2, #24085	; 0x5e15
    6b78:	06052206 	streq	r2, [r5], -r6, lsl #4
    6b7c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6b80:	3a053106 	bcc	152fa0 <_Min_Heap_Size+0x1527a0>
    6b84:	51050106 	tstpl	r5, r6, lsl #2
    6b88:	201d054a 	andscs	r0, sp, sl, asr #10
    6b8c:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    6b90:	13060105 	movwne	r0, #24837	; 0x6105
    6b94:	06050520 	streq	r0, [r5], -r0, lsr #10
    6b98:	06390538 			; <UNDEFINED> instruction: 0x06390538
    6b9c:	4a1d0501 	bmi	747fa8 <_Min_Heap_Size+0x7477a8>
    6ba0:	01000702 	tsteq	r0, r2, lsl #14
    6ba4:	00010501 	andeq	r0, r1, r1, lsl #10
    6ba8:	00000205 	andeq	r0, r0, r5, lsl #4
    6bac:	bd030000 	stclt	0, cr0, [r3, #-0]
    6bb0:	03050109 	movweq	r0, #20745	; 0x5109
    6bb4:	0c051313 	stceq	3, cr1, [r5], {19}
    6bb8:	03050106 	movweq	r0, #20742	; 0x5106
    6bbc:	10052306 	andne	r2, r5, r6, lsl #6
    6bc0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6bc4:	06220620 	strteq	r0, [r2], -r0, lsr #12
    6bc8:	06070566 	streq	r0, [r7], -r6, ror #10
    6bcc:	06160524 	ldreq	r0, [r6], -r4, lsr #10
    6bd0:	200a0501 	andcs	r0, sl, r1, lsl #10
    6bd4:	76031505 	strvc	r1, [r3], -r5, lsl #10
    6bd8:	0705203c 	smladxeq	r5, ip, r0, r2
    6bdc:	20100306 	andscs	r0, r0, r6, lsl #6
    6be0:	01061505 	tsteq	r6, r5, lsl #10
    6be4:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6be8:	3c700315 	ldclcc	3, cr0, [r0], #-84	; 0xffffffac
    6bec:	06080520 	streq	r0, [r8], -r0, lsr #10
    6bf0:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    6bf4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6bf8:	1c030605 	stcne	6, cr0, [r3], {5}
    6bfc:	5207053c 	andpl	r0, r7, #60, 10	; 0xf000000
    6c00:	01061605 	tsteq	r6, r5, lsl #12
    6c04:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6c08:	7fbf0315 	svcvc	0x00bf0315
    6c0c:	0505203c 	streq	r2, [r5, #-60]	; 0xffffffc4
    6c10:	201f0306 	andscs	r0, pc, r6, lsl #6
    6c14:	07057406 	streq	r7, [r5, -r6, lsl #8]
    6c18:	16052706 	strne	r2, [r5], -r6, lsl #14
    6c1c:	0a050106 	beq	14703c <_Min_Heap_Size+0x14683c>
    6c20:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    6c24:	05203c5a 	streq	r3, [r0, #-3162]!	; 0xfffff3a6
    6c28:	2c030607 	stccs	6, cr0, [r3], {7}
    6c2c:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    6c30:	200a0501 	andcs	r0, sl, r1, lsl #10
    6c34:	54031505 	strpl	r1, [r3], #-1285	; 0xfffffafb
    6c38:	1005203c 	andne	r2, r5, ip, lsr r0
    6c3c:	20200c03 	eorcs	r0, r0, r3, lsl #24
    6c40:	0e052026 	cdpeq	0, 0, cr2, cr5, cr6, {1}
    6c44:	20201103 	eorcs	r1, r0, r3, lsl #2
    6c48:	20251005 	eorcs	r1, r5, r5
    6c4c:	0e052026 	cdpeq	0, 0, cr2, cr5, cr6, {1}
    6c50:	20201003 	eorcs	r1, r0, r3
    6c54:	201b0505 	andscs	r0, fp, r5, lsl #10
    6c58:	0a031005 	beq	cac74 <_Min_Heap_Size+0xca474>
    6c5c:	06030520 	streq	r0, [r3], -r0, lsr #10
    6c60:	06010528 	streq	r0, [r1], -r8, lsr #10
    6c64:	00010213 	andeq	r0, r1, r3, lsl r2
    6c68:	01050101 	tsteq	r5, r1, lsl #2
    6c6c:	00020500 	andeq	r0, r2, r0, lsl #10
    6c70:	03000000 	movweq	r0, #0
    6c74:	060101aa 	streq	r0, [r1], -sl, lsr #3
    6c78:	06030501 	streq	r0, [r3], -r1, lsl #10
    6c7c:	1805132f 	stmdane	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    6c80:	03050106 	movweq	r0, #20742	; 0x5106
    6c84:	05152f06 	ldreq	r2, [r5, #-3846]	; 0xfffff0fa
    6c88:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    6c8c:	00500603 	subseq	r0, r0, r3, lsl #12
    6c90:	06010402 	streq	r0, [r1], -r2, lsl #8
    6c94:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c98:	02003c02 	andeq	r3, r0, #512	; 0x200
    6c9c:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6ca0:	3c040402 	cfstrscc	mvf0, [r4], {2}
    6ca4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6ca8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6cac:	02003c06 	andeq	r3, r0, #1536	; 0x600
    6cb0:	003c0704 	eorseq	r0, ip, r4, lsl #14
    6cb4:	3c080402 	cfstrscc	mvf0, [r8], {2}
    6cb8:	09040200 	stmdbeq	r4, {r9}
    6cbc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6cc0:	02003c0a 	andeq	r3, r0, #2560	; 0xa00
    6cc4:	003c0b04 	eorseq	r0, ip, r4, lsl #22
    6cc8:	3c0c0402 	cfstrscc	mvf0, [ip], {2}
    6ccc:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    6cd0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6cd4:	02003c0e 	andeq	r3, r0, #3584	; 0xe00
    6cd8:	003c0f04 	eorseq	r0, ip, r4, lsl #30
    6cdc:	3c100402 	cfldrscc	mvf0, [r0], {2}
    6ce0:	10040200 	andne	r0, r4, r0, lsl #4
    6ce4:	002f062e 	eoreq	r0, pc, lr, lsr #12
    6ce8:	06010402 	streq	r0, [r1], -r2, lsl #8
    6cec:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6cf0:	02003c02 	andeq	r3, r0, #512	; 0x200
    6cf4:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6cf8:	3c040402 	cfstrscc	mvf0, [r4], {2}
    6cfc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6d00:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d04:	02003c06 	andeq	r3, r0, #1536	; 0x600
    6d08:	063c0704 	ldrteq	r0, [ip], -r4, lsl #14
    6d0c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6d10:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6d14:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    6d18:	02002f06 	andeq	r2, r0, #6, 30
    6d1c:	4a060104 	bmi	187134 <_Min_Heap_Size+0x186934>
    6d20:	02002f06 	andeq	r2, r0, #6, 30
    6d24:	4a060104 	bmi	18713c <_Min_Heap_Size+0x18693c>
    6d28:	02002f06 	andeq	r2, r0, #6, 30
    6d2c:	2e060104 	adfcss	f0, f6, f4
    6d30:	02040200 	andeq	r0, r4, #0, 4
    6d34:	003d063c 	eorseq	r0, sp, ip, lsr r6
    6d38:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d3c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6d40:	3d063c02 	stccc	12, cr3, [r6, #-8]
    6d44:	01040200 	mrseq	r0, R12_usr
    6d48:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6d4c:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    6d50:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    6d54:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6d58:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6d5c:	03040200 	movweq	r0, #16896	; 0x4200
    6d60:	003d063c 	eorseq	r0, sp, ip, lsr r6
    6d64:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d68:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    6d6c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6d70:	22062005 	andcs	r2, r6, #5
    6d74:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6d78:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6d7c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6d80:	03040200 	movweq	r0, #16896	; 0x4200
    6d84:	003d063c 	eorseq	r0, sp, ip, lsr r6
    6d88:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d8c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6d90:	02003c02 	andeq	r3, r0, #512	; 0x200
    6d94:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    6d98:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
    6d9c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6da0:	013f0603 	teqeq	pc, r3, lsl #12
    6da4:	055b153c 	ldrbeq	r1, [fp, #-1340]	; 0xfffffac4
    6da8:	0e050108 	adfeqs	f0, f5, #0.0
    6dac:	18050106 	stmdane	r5, {r1, r2, r8}
    6db0:	20080520 	andcs	r0, r8, r0, lsr #10
    6db4:	3f060505 	svccc	0x00060505
    6db8:	01060905 	tsteq	r6, r5, lsl #18
    6dbc:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    6dc0:	31062007 	tstcc	r6, r7
    6dc4:	01061705 	tsteq	r6, r5, lsl #14
    6dc8:	31060705 	tstcc	r6, r5, lsl #14
    6dcc:	01061305 	tsteq	r6, r5, lsl #6
    6dd0:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    6dd4:	03060105 	movweq	r0, #24837	; 0x6105
    6dd8:	050100ce 	streq	r0, [r1, #-206]	; 0xffffff32
    6ddc:	04020003 	streq	r0, [r2], #-3
    6de0:	7f8b0308 	svcvc	0x008b0308
    6de4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6de8:	02005903 	andeq	r5, r0, #49152	; 0xc000
    6dec:	00590204 	subseq	r0, r9, r4, lsl #4
    6df0:	59020402 	stmdbpl	r2, {r1, sl}
    6df4:	03040200 	movweq	r0, #16896	; 0x4200
    6df8:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6dfc:	02005903 	andeq	r5, r0, #49152	; 0xc000
    6e00:	00590304 	subseq	r0, r9, r4, lsl #6
    6e04:	59040402 	stmdbpl	r4, {r1, sl}
    6e08:	02040200 	andeq	r0, r4, #0, 4
    6e0c:	00050559 	andeq	r0, r5, r9, asr r5
    6e10:	5d010402 	cfstrspl	mvf0, [r1, #-8]
    6e14:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6e18:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6e1c:	03055904 	movweq	r5, #22788	; 0x5904
    6e20:	581d0306 	ldmdapl	sp, {r1, r2, r8, r9}
    6e24:	01060705 	tsteq	r6, r5, lsl #14
    6e28:	23060305 	movwcs	r0, #25349	; 0x6305
    6e2c:	01060705 	tsteq	r6, r5, lsl #14
    6e30:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    6e34:	01061505 	tsteq	r6, r5, lsl #10
    6e38:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    6e3c:	1505202a 	strne	r2, [r5, #-42]	; 0xffffffd6
    6e40:	1f480521 	svcne	0x00480521
    6e44:	05213605 	streq	r3, [r1, #-1541]!	; 0xfffff9fb
    6e48:	1505202a 	strne	r2, [r5, #-42]	; 0xffffffd6
    6e4c:	1f480521 	svcne	0x00480521
    6e50:	05213605 	streq	r3, [r1, #-1541]!	; 0xfffff9fb
    6e54:	1505202a 	strne	r2, [r5, #-42]	; 0xffffffd6
    6e58:	1f480521 	svcne	0x00480521
    6e5c:	05213605 	streq	r3, [r1, #-1541]!	; 0xfffff9fb
    6e60:	0705202a 	streq	r2, [r5, -sl, lsr #32]
    6e64:	0603051d 			; <UNDEFINED> instruction: 0x0603051d
    6e68:	06100526 	ldreq	r0, [r0], -r6, lsr #10
    6e6c:	20050501 	andcs	r0, r5, r1, lsl #10
    6e70:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
    6e74:	01061605 	tsteq	r6, r5, lsl #12
    6e78:	23060305 	movwcs	r0, #25349	; 0x6305
    6e7c:	01060d05 	tsteq	r6, r5, lsl #26
    6e80:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    6e84:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6e88:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6e8c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    6e90:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6e94:	03052007 	movweq	r2, #20487	; 0x5007
    6e98:	05052306 	streq	r2, [r5, #-774]	; 0xfffffcfa
    6e9c:	31060106 	tstcc	r6, r6, lsl #2
    6ea0:	01061605 	tsteq	r6, r5, lsl #12
    6ea4:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    6ea8:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    6eac:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    6eb0:	07052008 	streq	r2, [r5, -r8]
    6eb4:	0b052206 	bleq	14f6d4 <_Min_Heap_Size+0x14eed4>
    6eb8:	0a050106 	beq	1472d8 <_Min_Heap_Size+0x146ad8>
    6ebc:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    6ec0:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    6ec4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6ec8:	05240603 	streq	r0, [r4, #-1539]!	; 0xfffff9fd
    6ecc:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6ed0:	053f0603 	ldreq	r0, [pc, #-1539]!	; 68d5 <_Min_Heap_Size+0x60d5>
    6ed4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    6ed8:	0e052016 	mcreq	0, 0, r2, cr5, cr6, {0}
    6edc:	0603052e 	streq	r0, [r3], -lr, lsr #10
    6ee0:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    6ee4:	03052001 	movweq	r2, #20481	; 0x5001
    6ee8:	0f052306 	svceq	0x00052306
    6eec:	03050106 	movweq	r0, #20742	; 0x5106
    6ef0:	0a053e06 	beq	156710 <_Min_Heap_Size+0x155f10>
    6ef4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6ef8:	744a0306 	strbvc	r0, [sl], #-774	; 0xfffffcfa
    6efc:	01061705 	tsteq	r6, r5, lsl #14
    6f00:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    6f04:	09052021 	stmdbeq	r5, {r0, r5, sp}
    6f08:	03062020 	movweq	r2, #24608	; 0x6020
    6f0c:	1905201c 	stmdbne	r5, {r2, r3, r4, sp}
    6f10:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6f14:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    6f18:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6f1c:	10053e06 	andne	r3, r5, r6, lsl #28
    6f20:	0c050106 	stfeqs	f0, [r5], {6}
    6f24:	207f9c03 	rsbscs	r9, pc, r3, lsl #24
    6f28:	00010220 	andeq	r0, r1, r0, lsr #4
    6f2c:	01050101 	tsteq	r5, r1, lsl #2
    6f30:	00020500 	andeq	r0, r2, r0, lsl #10
    6f34:	03000000 	movweq	r0, #0
    6f38:	050102b5 	streq	r0, [r1, #-693]	; 0xfffffd4b
    6f3c:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    6f40:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    6f44:	03052a01 	movweq	r2, #23041	; 0x5a01
    6f48:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    6f4c:	01060a05 	tsteq	r6, r5, lsl #20
    6f50:	2005052e 	andcs	r0, r5, lr, lsr #10
    6f54:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
    6f58:	01040200 	mrseq	r0, R12_usr
    6f5c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    6f60:	003c0204 	eorseq	r0, ip, r4, lsl #4
    6f64:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6f68:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6f6c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f70:	02003c05 	andeq	r3, r0, #1280	; 0x500
    6f74:	003c0604 	eorseq	r0, ip, r4, lsl #12
    6f78:	3c070402 	cfstrscc	mvf0, [r7], {2}
    6f7c:	08040200 	stmdaeq	r4, {r9}
    6f80:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f84:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    6f88:	003c0a04 	eorseq	r0, ip, r4, lsl #20
    6f8c:	3c0b0402 	cfstrscc	mvf0, [fp], {2}
    6f90:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    6f94:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f98:	02003c0d 	andeq	r3, r0, #3328	; 0xd00
    6f9c:	003c0e04 	eorseq	r0, ip, r4, lsl #28
    6fa0:	3c0f0402 	cfstrscc	mvf0, [pc], {2}
    6fa4:	10040200 	andne	r0, r4, r0, lsl #4
    6fa8:	5b5b063c 	blpl	16c88a0 <_Min_Heap_Size+0x16c80a0>
    6fac:	01060705 	tsteq	r6, r5, lsl #14
    6fb0:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6fb4:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    6fb8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6fbc:	03052018 	movweq	r2, #20504	; 0x5018
    6fc0:	07052306 	streq	r2, [r5, -r6, lsl #6]
    6fc4:	18050106 	stmdane	r5, {r1, r2, r8}
    6fc8:	06030520 	streq	r0, [r3], -r0, lsr #10
    6fcc:	06070523 	streq	r0, [r7], -r3, lsr #10
    6fd0:	20180501 	andscs	r0, r8, r1, lsl #10
    6fd4:	23060305 	movwcs	r0, #25349	; 0x6305
    6fd8:	01060705 	tsteq	r6, r5, lsl #14
    6fdc:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6fe0:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6fe4:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6fe8:	03052018 	movweq	r2, #20504	; 0x5018
    6fec:	20053106 	andcs	r3, r5, r6, lsl #2
    6ff0:	03050106 	movweq	r0, #20742	; 0x5106
    6ff4:	1a053f06 	bne	156c14 <_Min_Heap_Size+0x156414>
    6ff8:	03050106 	movweq	r0, #20742	; 0x5106
    6ffc:	1e052106 	adfnes	f2, f5, f6
    7000:	03050106 	movweq	r0, #20742	; 0x5106
    7004:	1c052106 	stfnes	f2, [r5], {6}
    7008:	03050106 	movweq	r0, #20742	; 0x5106
    700c:	20052106 	andcs	r2, r5, r6, lsl #2
    7010:	03050106 	movweq	r0, #20742	; 0x5106
    7014:	1b052106 	blne	14f434 <_Min_Heap_Size+0x14ec34>
    7018:	03050106 	movweq	r0, #20742	; 0x5106
    701c:	1b052106 	blne	14f43c <_Min_Heap_Size+0x14ec3c>
    7020:	03050106 	movweq	r0, #20742	; 0x5106
    7024:	1d052306 	stcne	3, cr2, [r5, #-24]	; 0xffffffe8
    7028:	16050106 	strne	r0, [r5], -r6, lsl #2
    702c:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    7030:	23060305 	movwcs	r0, #25349	; 0x6305
    7034:	01061305 	tsteq	r6, r5, lsl #6
    7038:	23060305 	movwcs	r0, #25349	; 0x6305
    703c:	01060f05 	tsteq	r6, r5, lsl #30
    7040:	31060305 	tstcc	r6, r5, lsl #6
    7044:	05142e01 	ldreq	r2, [r4, #-3585]	; 0xfffff1ff
    7048:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    704c:	0c052101 	stfeqs	f2, [r5], {1}
    7050:	05204603 	streq	r4, [r0, #-1539]!	; 0xfffff9fd
    7054:	203a0301 	eorscs	r0, sl, r1, lsl #6
    7058:	01000602 	tsteq	r0, r2, lsl #12
    705c:	00010501 	andeq	r0, r1, r1, lsl #10
    7060:	00000205 	andeq	r0, r0, r5, lsl #4
    7064:	97030000 	strls	r0, [r3, -r0]
    7068:	01060103 	tsteq	r6, r3, lsl #2
    706c:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    7070:	2e200615 	mcrcs	6, 1, r0, cr0, cr5, {0}
    7074:	00013106 	andeq	r3, r1, r6, lsl #2
    7078:	4a020402 	bmi	88088 <_Min_Heap_Size+0x87888>
    707c:	02040200 	andeq	r0, r4, #0, 4
    7080:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7084:	21051402 	tstcs	r5, r2, lsl #8
    7088:	02040200 	andeq	r0, r4, #0, 4
    708c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7090:	02040200 	andeq	r0, r4, #0, 4
    7094:	1103063c 	tstne	r3, ip, lsr r6
    7098:	153c012e 	ldrne	r0, [ip, #-302]!	; 0xfffffed2
    709c:	01060c05 	tsteq	r6, r5, lsl #24
    70a0:	05230105 	streq	r0, [r3, #-261]!	; 0xfffffefb
    70a4:	04020003 	streq	r0, [r2], #-3
    70a8:	2e640301 	cdpcs	3, 6, cr0, cr4, cr1, {0}
    70ac:	01040200 	mrseq	r0, R12_usr
    70b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    70b4:	05052001 	streq	r2, [r5, #-1]
    70b8:	11054406 	tstne	r5, r6, lsl #8
    70bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70c0:	15053f06 	strne	r3, [r5, #-3846]	; 0xfffff0fa
    70c4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    70c8:	05694d06 	strbeq	r4, [r9, #-3334]!	; 0xfffff2fa
    70cc:	6c030615 	stcvs	6, cr0, [r3], {21}
    70d0:	34030558 	strcc	r0, [r3], #-1368	; 0xfffffaa8
    70d4:	01000502 	tsteq	r0, r2, lsl #10
    70d8:	00010501 	andeq	r0, r1, r1, lsl #10
    70dc:	00000205 	andeq	r0, r0, r5, lsl #4
    70e0:	c3030000 	movwgt	r0, #12288	; 0x3000
    70e4:	01060103 	tsteq	r6, r3, lsl #2
    70e8:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    70ec:	06380515 			; <UNDEFINED> instruction: 0x06380515
    70f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    70f4:	2e200631 	mcrcs	6, 1, r0, cr0, cr1, {1}
    70f8:	00013106 	andeq	r3, r1, r6, lsl #2
    70fc:	4a020402 	bmi	8810c <_Min_Heap_Size+0x8790c>
    7100:	02040200 	andeq	r0, r4, #0, 4
    7104:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7108:	21051402 	tstcs	r5, r2, lsl #8
    710c:	02040200 	andeq	r0, r4, #0, 4
    7110:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7114:	02040200 	andeq	r0, r4, #0, 4
    7118:	1c03063c 	stcne	6, cr0, [r3], {60}	; 0x3c
    711c:	153c012e 	ldrne	r0, [ip, #-302]!	; 0xfffffed2
    7120:	01060c05 	tsteq	r6, r5, lsl #24
    7124:	05240105 	streq	r0, [r4, #-261]!	; 0xfffffefb
    7128:	04020003 	streq	r0, [r2], #-3
    712c:	2e580301 	cdpcs	3, 5, cr0, cr8, cr1, {0}
    7130:	01040200 	mrseq	r0, R12_usr
    7134:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7138:	05052001 	streq	r2, [r5, #-1]
    713c:	11054406 	tstne	r5, r6, lsl #8
    7140:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7144:	15053f06 	strne	r3, [r5, #-3846]	; 0xfffff0fa
    7148:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    714c:	05693106 	strbeq	r3, [r9, #-262]!	; 0xfffffefa
    7150:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7154:	10052018 	andne	r2, r5, r8, lsl r0
    7158:	0605052e 	streq	r0, [r5], -lr, lsr #10
    715c:	06090531 			; <UNDEFINED> instruction: 0x06090531
    7160:	20190501 	andscs	r0, r9, r1, lsl #10
    7164:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    7168:	01060c05 	tsteq	r6, r5, lsl #24
    716c:	06200705 	strteq	r0, [r0], -r5, lsl #14
    7170:	060b0522 	streq	r0, [fp], -r2, lsr #10
    7174:	201b0501 	andscs	r0, fp, r1, lsl #10
    7178:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    717c:	03061505 	movweq	r1, #25861	; 0x6505
    7180:	0305585e 	movweq	r5, #22622	; 0x585e
    7184:	022e0903 	eoreq	r0, lr, #49152	; 0xc000
    7188:	01010004 	tsteq	r1, r4
    718c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7190:	00144802 	andseq	r4, r4, r2, lsl #16
    7194:	04810308 	streq	r0, [r1], #776	; 0x308
    7198:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    719c:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    71a0:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    71a4:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    71a8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    71ac:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    71b0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    71b4:	30063c05 	andcc	r3, r6, r5, lsl #24
    71b8:	01061505 	tsteq	r6, r5, lsl #10
    71bc:	31060505 	tstcc	r6, r5, lsl #10
    71c0:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    71c4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    71c8:	202d0301 	eorcs	r0, sp, r1, lsl #6
    71cc:	06050520 	streq	r0, [r5], -r0, lsr #10
    71d0:	05205803 	streq	r5, [r0, #-2051]!	; 0xfffff7fd
    71d4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    71d8:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    71dc:	09054b06 	stmdbeq	r5, {r1, r2, r8, r9, fp, lr}
    71e0:	19050106 	stmdbne	r5, {r1, r2, r8}
    71e4:	06050520 	streq	r0, [r5], -r0, lsr #10
    71e8:	060d054c 	streq	r0, [sp], -ip, asr #10
    71ec:	20070501 	andcs	r0, r7, r1, lsl #10
    71f0:	0b052206 	bleq	14fa10 <_Min_Heap_Size+0x14f210>
    71f4:	1b050106 	blne	147614 <_Min_Heap_Size+0x146e14>
    71f8:	06050520 	streq	r0, [r5], -r0, lsr #10
    71fc:	0a055b4e 	beq	15df3c <_Min_Heap_Size+0x15d73c>
    7200:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    7204:	201a0501 	andscs	r0, sl, r1, lsl #10
    7208:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    720c:	053f0607 	ldreq	r0, [pc, #-1543]!	; 6c0d <_Min_Heap_Size+0x640d>
    7210:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7214:	09052e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, sp}
    7218:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
    721c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7220:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    7224:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7228:	013f0609 	teqeq	pc, r9, lsl #12
    722c:	1005143c 	andne	r1, r5, ip, lsr r4
    7230:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    7234:	01040200 	mrseq	r0, R12_usr
    7238:	05206903 	streq	r6, [r0, #-2307]!	; 0xfffff6fd
    723c:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    7240:	05052001 	streq	r2, [r5, #-1]
    7244:	3c1c0306 	ldccc	3, cr0, [ip], {6}
    7248:	01061f05 	tsteq	r6, r5, lsl #30
    724c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    7250:	05052e10 	streq	r2, [r5, #-3600]	; 0xfffff1f0
    7254:	11052306 	tstne	r5, r6, lsl #6
    7258:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    725c:	3c013f06 	stccc	15, cr3, [r1], {6}
    7260:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7264:	0201060a 	andeq	r0, r1, #10485760	; 0xa00000
    7268:	01010001 	tsteq	r1, r1
    726c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7270:	0014dc02 	andseq	sp, r4, r2, lsl #24
    7274:	04c40308 	strbeq	r0, [r4], #776	; 0x308
    7278:	13030501 	movwne	r0, #13569	; 0x3501
    727c:	01060a05 	tsteq	r6, r5, lsl #20
    7280:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
    7284:	06150530 			; <UNDEFINED> instruction: 0x06150530
    7288:	06050501 	streq	r0, [r5], -r1, lsl #10
    728c:	060c052f 	streq	r0, [ip], -pc, lsr #10
    7290:	05052001 	streq	r2, [r5, #-1]
    7294:	11052506 	tstne	r5, r6, lsl #10
    7298:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    729c:	03053f06 	movweq	r3, #24326	; 0x5f06
    72a0:	060a055b 			; <UNDEFINED> instruction: 0x060a055b
    72a4:	21010501 	tstcs	r1, r1, lsl #10
    72a8:	01000102 	tsteq	r0, r2, lsl #2
    72ac:	00010501 	andeq	r0, r1, r1, lsl #10
    72b0:	00000205 	andeq	r0, r0, r5, lsl #4
    72b4:	e2030000 	and	r0, r3, #0
    72b8:	01060104 	tsteq	r6, r4, lsl #2
    72bc:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    72c0:	18051313 	stmdane	r5, {r0, r1, r4, r8, r9, ip}
    72c4:	03050106 	movweq	r0, #20742	; 0x5106
    72c8:	14152f06 	ldrne	r2, [r5], #-3846	; 0xfffff0fa
    72cc:	01062005 	tsteq	r6, r5
    72d0:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
    72d4:	06150531 			; <UNDEFINED> instruction: 0x06150531
    72d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    72dc:	133c012f 	teqne	ip, #-1073741813	; 0xc000000b
    72e0:	01060c05 	tsteq	r6, r5, lsl #24
    72e4:	f1030105 			; <UNDEFINED> instruction: 0xf1030105
    72e8:	052e2000 	streq	r2, [lr, #-0]!
    72ec:	93030603 	movwls	r0, #13827	; 0x3603
    72f0:	0c05207f 	stceq	0, cr2, [r5], {127}	; 0x7f
    72f4:	16050106 	strne	r0, [r5], -r6, lsl #2
    72f8:	20060520 	andcs	r0, r6, r0, lsr #10
    72fc:	43060305 	movwmi	r0, #25349	; 0x6305
    7300:	01060505 	tsteq	r6, r5, lsl #10
    7304:	2e053f06 	cdpcs	15, 0, cr3, cr5, cr6, {0}
    7308:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    730c:	06030520 	streq	r0, [r3], -r0, lsr #10
    7310:	06240552 			; <UNDEFINED> instruction: 0x06240552
    7314:	06030501 	streq	r0, [r3], -r1, lsl #10
    7318:	060a0521 	streq	r0, [sl], -r1, lsr #10
    731c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7320:	01080522 	tsteq	r8, r2, lsr #10
    7324:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    7328:	3c060104 	stfccs	f0, [r6], {4}
    732c:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    7330:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    7334:	053f0605 	ldreq	r0, [pc, #-1541]!	; 6d37 <_Min_Heap_Size+0x6537>
    7338:	06010607 	streq	r0, [r1], -r7, lsl #12
    733c:	0609053e 			; <UNDEFINED> instruction: 0x0609053e
    7340:	001d0501 	andseq	r0, sp, r1, lsl #10
    7344:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7348:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    734c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    7350:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    7354:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    7358:	2e100306 	cdpcs	3, 1, cr0, cr0, cr6, {0}
    735c:	01060c05 	tsteq	r6, r5, lsl #24
    7360:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    7364:	01062b05 	tsteq	r6, r5, lsl #22
    7368:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    736c:	31062e07 	tstcc	r6, r7, lsl #28
    7370:	01061705 	tsteq	r6, r5, lsl #14
    7374:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    7378:	01061205 	tsteq	r6, r5, lsl #4
    737c:	23060505 	movwcs	r0, #25861	; 0x6505
    7380:	01062b05 	tsteq	r6, r5, lsl #22
    7384:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    7388:	31062e07 	tstcc	r6, r7, lsl #28
    738c:	01061705 	tsteq	r6, r5, lsl #14
    7390:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    7394:	01061205 	tsteq	r6, r5, lsl #4
    7398:	23060505 	movwcs	r0, #25861	; 0x6505
    739c:	01062c05 	tsteq	r6, r5, lsl #24
    73a0:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    73a4:	31062e07 	tstcc	r6, r7, lsl #28
    73a8:	01061705 	tsteq	r6, r5, lsl #14
    73ac:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    73b0:	01061205 	tsteq	r6, r5, lsl #4
    73b4:	03060505 	movweq	r0, #25861	; 0x6505
    73b8:	052e7fbe 	streq	r7, [lr, #-4030]!	; 0xfffff042
    73bc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    73c0:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    73c4:	2001060c 	andcs	r0, r1, ip, lsl #12
    73c8:	03060505 	movweq	r0, #25861	; 0x6505
    73cc:	2e05200c 	cdpcs	0, 0, cr2, cr5, cr12, {0}
    73d0:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    73d4:	09054a20 	stmdbeq	r5, {r5, r9, fp, lr}
    73d8:	200e0306 	andcs	r0, lr, r6, lsl #6
    73dc:	01061905 	tsteq	r6, r5, lsl #18
    73e0:	31060905 	tstcc	r6, r5, lsl #18
    73e4:	01061505 	tsteq	r6, r5, lsl #10
    73e8:	3f060905 	svccc	0x00060905
    73ec:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    73f0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    73f4:	23030603 	movwcs	r0, #13827	; 0x3603
    73f8:	060a052e 	streq	r0, [sl], -lr, lsr #10
    73fc:	20050501 	andcs	r0, r5, r1, lsl #10
    7400:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    7404:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7408:	06030520 	streq	r0, [r3], -r0, lsr #10
    740c:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    7410:	06010605 	streq	r0, [r1], -r5, lsl #12
    7414:	063f053f 			; <UNDEFINED> instruction: 0x063f053f
    7418:	20380501 	eorscs	r0, r8, r1, lsl #10
    741c:	052e1005 	streq	r1, [lr, #-5]!
    7420:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    7424:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    7428:	013f0605 	teqeq	pc, r5, lsl #12
    742c:	060a053c 			; <UNDEFINED> instruction: 0x060a053c
    7430:	0607051a 			; <UNDEFINED> instruction: 0x0607051a
    7434:	3f2e6003 	svccc	0x002e6003
    7438:	01064105 	tsteq	r6, r5, lsl #2
    743c:	05203a05 	streq	r3, [r0, #-2565]!	; 0xfffff5fb
    7440:	07052e12 	smladeq	r5, r2, lr, r2
    7444:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    7448:	07050106 	streq	r0, [r5, -r6, lsl #2]
    744c:	3c013f06 	stccc	15, cr3, [r1], {6}
    7450:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    7454:	06050501 	streq	r0, [r5], -r1, lsl #10
    7458:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    745c:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    7460:	10052025 	andne	r2, r5, r5, lsr #32
    7464:	230a052e 	movwcs	r0, #42286	; 0xa52e
    7468:	01000202 	tsteq	r0, r2, lsl #4
    746c:	00010501 	andeq	r0, r1, r1, lsl #10
    7470:	00000205 	andeq	r0, r0, r5, lsl #4
    7474:	ea030000 	b	c747c <_Min_Heap_Size+0xc6c7c>
    7478:	01060105 	tsteq	r6, r5, lsl #2
    747c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    7480:	06110513 			; <UNDEFINED> instruction: 0x06110513
    7484:	06030501 	streq	r0, [r3], -r1, lsl #10
    7488:	0626052f 	strteq	r0, [r6], -pc, lsr #10
    748c:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    7490:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    7494:	01063805 	tsteq	r6, r5, lsl #16
    7498:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    749c:	01060a05 	tsteq	r6, r5, lsl #20
    74a0:	23060305 	movwcs	r0, #25349	; 0x6305
    74a4:	01062a05 	tsteq	r6, r5, lsl #20
    74a8:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    74ac:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    74b0:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    74b4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    74b8:	053f062e 	ldreq	r0, [pc, #-1582]!	; 6e92 <_Min_Heap_Size+0x6692>
    74bc:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    74c0:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    74c4:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    74c8:	12052025 	andne	r2, r5, #37	; 0x25
    74cc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    74d0:	06170523 	ldreq	r0, [r7], -r3, lsr #10
    74d4:	06030501 	streq	r0, [r3], -r1, lsl #10
    74d8:	062a054e 	strteq	r0, [sl], -lr, asr #10
    74dc:	20230501 	eorcs	r0, r3, r1, lsl #10
    74e0:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    74e4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    74e8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    74ec:	3f062e07 	svccc	0x00062e07
    74f0:	01061205 	tsteq	r6, r5, lsl #4
    74f4:	23060705 	movwcs	r0, #26373	; 0x6705
    74f8:	01061705 	tsteq	r6, r5, lsl #14
    74fc:	4e060305 	cdpmi	3, 0, cr0, cr6, cr5, {0}
    7500:	01062b05 	tsteq	r6, r5, lsl #22
    7504:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    7508:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    750c:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    7510:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7514:	053f062e 	ldreq	r0, [pc, #-1582]!	; 6eee <_Min_Heap_Size+0x66ee>
    7518:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    751c:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    7520:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7524:	054e0603 	strbeq	r0, [lr, #-1539]	; 0xfffff9fd
    7528:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    752c:	06052023 	streq	r2, [r5], -r3, lsr #32
    7530:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7534:	06080530 			; <UNDEFINED> instruction: 0x06080530
    7538:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    753c:	12053f06 	andne	r3, r5, #6, 30
    7540:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7544:	10052306 	andne	r2, r5, r6, lsl #6
    7548:	1a050106 	bne	147968 <_Min_Heap_Size+0x147168>
    754c:	20090520 	andcs	r0, r9, r0, lsr #10
    7550:	1b053f06 	blne	157170 <_Min_Heap_Size+0x156970>
    7554:	0b050106 	bleq	147974 <_Min_Heap_Size+0x147174>
    7558:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    755c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7560:	2306200d 	movwcs	r2, #24589	; 0x600d
    7564:	0b052006 	bleq	14f584 <_Min_Heap_Size+0x14ed84>
    7568:	12053406 	andne	r3, r5, #100663296	; 0x6000000
    756c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7570:	06230620 	strteq	r0, [r3], -r0, lsr #12
    7574:	06090520 	streq	r0, [r9], -r0, lsr #10
    7578:	061b0535 			; <UNDEFINED> instruction: 0x061b0535
    757c:	200b0501 	andcs	r0, fp, r1, lsl #10
    7580:	1f053f06 	svcne	0x00053f06
    7584:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7588:	10054d06 	andne	r4, r5, r6, lsl #26
    758c:	0b050106 	bleq	1479ac <_Min_Heap_Size+0x1471ac>
    7590:	06230620 	strteq	r0, [r3], -r0, lsr #12
    7594:	06030520 	streq	r0, [r3], -r0, lsr #10
    7598:	062a0526 	strteq	r0, [sl], -r6, lsr #10
    759c:	20230501 	eorcs	r0, r3, r1, lsl #10
    75a0:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    75a4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    75a8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    75ac:	3f062e07 	svccc	0x00062e07
    75b0:	01061205 	tsteq	r6, r5, lsl #4
    75b4:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    75b8:	01062505 	tsteq	r6, r5, lsl #10
    75bc:	053c0905 	ldreq	r0, [ip, #-2309]!	; 0xfffff6fb
    75c0:	1b030607 	blne	c8de4 <_Min_Heap_Size+0xc85e4>
    75c4:	0610052e 	ldreq	r0, [r0], -lr, lsr #10
    75c8:	201a0501 	andscs	r0, sl, r1, lsl #10
    75cc:	06200905 	strteq	r0, [r0], -r5, lsl #18
    75d0:	061b053f 			; <UNDEFINED> instruction: 0x061b053f
    75d4:	200b0501 	andcs	r0, fp, r1, lsl #10
    75d8:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    75dc:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    75e0:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
    75e4:	3c600309 	stclcc	3, cr0, [r0], #-36	; 0xffffffdc
    75e8:	01060d05 	tsteq	r6, r5, lsl #26
    75ec:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    75f0:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    75f4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    75f8:	0905201d 	stmdbeq	r5, {r0, r2, r3, r4, sp}
    75fc:	11054c06 	tstne	r5, r6, lsl #24
    7600:	0b050106 	bleq	147a20 <_Min_Heap_Size+0x147220>
    7604:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    7608:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    760c:	0905201f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sp}
    7610:	23054e06 	movwcs	r4, #24070	; 0x5e06
    7614:	1c050106 	stfnes	f0, [r5], {6}
    7618:	2e140520 	cfmul64cs	mvdx0, mvdx4, mvdx0
    761c:	23060905 	movwcs	r0, #26885	; 0x6905
    7620:	01061505 	tsteq	r6, r5, lsl #10
    7624:	3f060905 	svccc	0x00060905
    7628:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    762c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7630:	3006200b 	andcc	r2, r6, fp
    7634:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    7638:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    763c:	6e030601 	cfmadd32vs	mvax0, mvfx0, mvfx3, mvfx1
    7640:	00310520 	eorseq	r0, r1, r0, lsr #10
    7644:	20010402 	andcs	r0, r1, r2, lsl #8
    7648:	03060b05 	movweq	r0, #27397	; 0x6b05
    764c:	12053c23 	andne	r3, r5, #8960	; 0x2300
    7650:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7654:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7658:	1b054309 	blne	158284 <_Min_Heap_Size+0x157a84>
    765c:	0b050106 	bleq	147a7c <_Min_Heap_Size+0x14727c>
    7660:	053f0620 	ldreq	r0, [pc, #-1568]!	; 7048 <_Min_Heap_Size+0x6848>
    7664:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7668:	054d060b 	strbeq	r0, [sp, #-1547]	; 0xfffff9f5
    766c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7670:	013f060b 	teqeq	pc, fp, lsl #12
    7674:	01040200 	mrseq	r0, R12_usr
    7678:	0009053c 	andeq	r0, r9, ip, lsr r5
    767c:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    7680:	02001005 	andeq	r1, r0, #5
    7684:	01060104 	tsteq	r6, r4, lsl #2
    7688:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    768c:	06200104 	strteq	r0, [r0], -r4, lsl #2
    7690:	35030523 	strcc	r0, [r3, #-1315]	; 0xfffffadd
    7694:	01060a05 	tsteq	r6, r5, lsl #20
    7698:	06200505 	strteq	r0, [r0], -r5, lsl #10
    769c:	060d0522 	streq	r0, [sp], -r2, lsr #10
    76a0:	20070501 	andcs	r0, r7, r1, lsl #10
    76a4:	13053e06 	movwne	r3, #24070	; 0x5e06
    76a8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    76ac:	055a3f06 	ldrbeq	r3, [sl, #-3846]	; 0xfffff0fa
    76b0:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    76b4:	0c050106 	stfeqs	f0, [r5], {6}
    76b8:	0541062e 	strbeq	r0, [r1, #-1582]	; 0xfffff9d2
    76bc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    76c0:	0705201c 	smladeq	r5, ip, r0, r2
    76c4:	053f0620 	ldreq	r0, [pc, #-1568]!	; 70ac <_Min_Heap_Size+0x68ac>
    76c8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    76cc:	013f0607 	teqeq	pc, r7, lsl #12
    76d0:	01040200 	mrseq	r0, R12_usr
    76d4:	0005053c 	andeq	r0, r5, ip, lsr r5
    76d8:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    76dc:	02000c05 	andeq	r0, r0, #1280	; 0x500
    76e0:	01060104 	tsteq	r6, r4, lsl #2
    76e4:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    76e8:	06200104 	strteq	r0, [r0], -r4, lsl #2
    76ec:	06010523 	streq	r0, [r1], -r3, lsr #10
    76f0:	04022e31 	streq	r2, [r2], #-3633	; 0xfffff1cf
    76f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    76f8:	02050001 	andeq	r0, r5, #1
    76fc:	00000000 	andeq	r0, r0, r0
    7700:	0107c703 	tsteq	r7, r3, lsl #14
    7704:	03050106 	movweq	r0, #20742	; 0x5106
    7708:	01152206 	tsteq	r5, r6, lsl #4
    770c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7710:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    7714:	02040200 	andeq	r0, r4, #0, 4
    7718:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    771c:	21051402 	tstcs	r5, r2, lsl #8
    7720:	02040200 	andeq	r0, r4, #0, 4
    7724:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7728:	02040200 	andeq	r0, r4, #0, 4
    772c:	030c053c 	movweq	r0, #50492	; 0xc53c
    7730:	03052e25 	movweq	r2, #24101	; 0x5e25
    7734:	06012406 	streq	r2, [r1], -r6, lsl #8
    7738:	142e0620 	strtne	r0, [lr], #-1568	; 0xfffff9e0
    773c:	01060a05 	tsteq	r6, r5, lsl #20
    7740:	03060505 	movweq	r0, #25861	; 0x6505
    7744:	07052057 	smlsdeq	r5, r7, r0, r2
    7748:	061e0577 			; <UNDEFINED> instruction: 0x061e0577
    774c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7750:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7754:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
    7758:	200b0307 	andcs	r0, fp, r7, lsl #6
    775c:	22052306 	andcs	r2, r5, #402653184	; 0x18000000
    7760:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7764:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    7768:	01710306 	cmneq	r1, r6, lsl #6
    776c:	0f030705 	svceq	0x00030705
    7770:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7774:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    7778:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    777c:	6d030615 	stcvs	6, cr0, [r3, #-84]	; 0xffffffac
    7780:	03070501 	movweq	r0, #29953	; 0x7501
    7784:	23062013 	movwcs	r2, #24595	; 0x6013
    7788:	01062405 	tsteq	r6, r5, lsl #8
    778c:	21060705 	tstcs	r6, r5, lsl #14
    7790:	03061505 	movweq	r1, #25861	; 0x6505
    7794:	07050169 	streq	r0, [r5, -r9, ror #2]
    7798:	06201703 	strteq	r1, [r0], -r3, lsl #14
    779c:	061f0523 	ldreq	r0, [pc], -r3, lsr #10
    77a0:	06070501 	streq	r0, [r7], -r1, lsl #10
    77a4:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    77a8:	05016503 	streq	r6, [r1, #-1283]	; 0xfffffafd
    77ac:	201b0307 	andscs	r0, fp, r7, lsl #6
    77b0:	1f052306 	svcne	0x00052306
    77b4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    77b8:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    77bc:	01610306 	cmneq	r1, r6, lsl #6
    77c0:	1f030705 	svcne	0x00030705
    77c4:	03030520 	movweq	r0, #13600	; 0x3520
    77c8:	01052064 	tsteq	r5, r4, rrx
    77cc:	02202e03 	eoreq	r2, r0, #3, 28	; 0x30
    77d0:	01010001 	tsteq	r1, r1
    77d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    77d8:	00000002 	andeq	r0, r0, r2
    77dc:	08850300 	stmeq	r5, {r8, r9}
    77e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    77e4:	15210603 	strne	r0, [r1, #-1539]!	; 0xfffff9fd
    77e8:	04020001 	streq	r0, [r2], #-1
    77ec:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    77f0:	003c0204 	eorseq	r0, ip, r4, lsl #4
    77f4:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    77f8:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    77fc:	01060204 	tsteq	r6, r4, lsl #4
    7800:	02040200 	andeq	r0, r4, #0, 4
    7804:	0005052e 	andeq	r0, r5, lr, lsr #10
    7808:	20020402 	andcs	r0, r2, r2, lsl #8
    780c:	2c030c05 	stccs	12, cr0, [r3], {5}
    7810:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7814:	143c0124 	ldrtne	r0, [ip], #-292	; 0xfffffedc
    7818:	01060a05 	tsteq	r6, r5, lsl #20
    781c:	03060505 	movweq	r0, #25861	; 0x6505
    7820:	07052050 	smlsdeq	r5, r0, r0, r2
    7824:	061e0585 	ldreq	r0, [lr], -r5, lsl #11
    7828:	06070501 	streq	r0, [r7], -r1, lsl #10
    782c:	0615052f 	ldreq	r0, [r5], -pc, lsr #10
    7830:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
    7834:	200b0307 	andcs	r0, fp, r7, lsl #6
    7838:	22052306 	andcs	r2, r5, #402653184	; 0x18000000
    783c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7840:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    7844:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    7848:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    784c:	01062405 	tsteq	r6, r5, lsl #8
    7850:	2f060705 	svccs	0x00060705
    7854:	061f0523 	ldreq	r0, [pc], -r3, lsr #10
    7858:	06070501 	streq	r0, [r7], -r1, lsl #10
    785c:	1f05232f 	svcne	0x0005232f
    7860:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7864:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    7868:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    786c:	052f0607 	streq	r0, [pc, #-1543]!	; 726d <_Min_Heap_Size+0x6a6d>
    7870:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    7874:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7878:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    787c:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7880:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7884:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7888:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    788c:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7890:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7894:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7898:	5b030603 	blpl	c90ac <_Min_Heap_Size+0xc88ac>
    789c:	03010520 	movweq	r0, #5408	; 0x1520
    78a0:	01022035 	tsteq	r2, r5, lsr r0
    78a4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    78a8:	02050001 	andeq	r0, r5, #1
    78ac:	00000000 	andeq	r0, r0, r0
    78b0:	0108da03 	tsteq	r8, r3, lsl #20
    78b4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    78b8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    78bc:	01022f01 	tsteq	r2, r1, lsl #30
    78c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    78c4:	02050001 	andeq	r0, r5, #1
    78c8:	00000000 	andeq	r0, r0, r0
    78cc:	0108e503 	tsteq	r8, r3, lsl #10
    78d0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    78d4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    78d8:	01022101 	tsteq	r2, r1, lsl #2
    78dc:	ee010100 	adfs	f0, f1, f0
    78e0:	03000008 	movweq	r0, #8
    78e4:	00020b00 	andeq	r0, r2, r0, lsl #22
    78e8:	fb010200 	blx	480f2 <_Min_Heap_Size+0x478f2>
    78ec:	01000d0e 	tsteq	r0, lr, lsl #26
    78f0:	00010101 	andeq	r0, r1, r1, lsl #2
    78f4:	00010000 	andeq	r0, r1, r0
    78f8:	2e2e0100 	sufcse	f0, f6, f0
    78fc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    7900:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    7904:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    7908:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    790c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7910:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 7918 <_Min_Heap_Size+0x7118>
    7914:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    7918:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    791c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    7920:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    7924:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    7928:	534d432f 	movtpl	r4, #54063	; 0xd32f
    792c:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    7930:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7934:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    7938:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    793c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    7940:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    7944:	2f534953 	svccs	0x00534953
    7948:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    794c:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    7950:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    7954:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    7958:	2f787834 	svccs	0x00787834
    795c:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    7960:	00656475 	rsbeq	r6, r5, r5, ror r4
    7964:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    7968:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    796c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    7970:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    7974:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    7978:	615c6d61 	cmpvs	ip, r1, ror #26
    797c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    7980:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    7984:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7988:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    798c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7990:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7994:	2e30312d 	rsfcssp	f3, f0, #5.0
    7998:	30322d33 	eorscc	r2, r2, r3, lsr sp
    799c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    79a0:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    79a4:	6f6e2d6d 	svcvs	0x006e2d6d
    79a8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    79ac:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    79b0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    79b4:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    79b8:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    79bc:	00656e69 	rsbeq	r6, r5, r9, ror #28
    79c0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    79c4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    79c8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    79cc:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    79d0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    79d4:	615c6d61 	cmpvs	ip, r1, ror #26
    79d8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    79dc:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    79e0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    79e4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    79e8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    79ec:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    79f0:	2e30312d 	rsfcssp	f3, f0, #5.0
    79f4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    79f8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    79fc:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    7a00:	6f6e2d6d 	svcvs	0x006e2d6d
    7a04:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7a08:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    7a0c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7a10:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    7a14:	00737973 	rsbseq	r7, r3, r3, ror r9
    7a18:	442f2e2e 	strtmi	r2, [pc], #-3630	; 7a20 <_Min_Heap_Size+0x7220>
    7a1c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    7a20:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    7a24:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    7a28:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    7a2c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    7a30:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    7a34:	2f726576 	svccs	0x00726576
    7a38:	00636e49 	rsbeq	r6, r3, r9, asr #28
    7a3c:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    7a40:	2f65726f 	svccs	0x0065726f
    7a44:	00636e49 	rsbeq	r6, r3, r9, asr #28
    7a48:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    7a4c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7a50:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7a54:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    7a58:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    7a5c:	00632e78 	rsbeq	r2, r3, r8, ror lr
    7a60:	63000001 	movwvs	r0, #1
    7a64:	5f65726f 	svcpl	0x0065726f
    7a68:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    7a6c:	00020068 	andeq	r0, r2, r8, rrx
    7a70:	736d6300 	cmnvc	sp, #0, 6
    7a74:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    7a78:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    7a7c:	00000200 	andeq	r0, r0, r0, lsl #4
    7a80:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7a84:	30346632 	eorscc	r6, r4, r2, lsr r6
    7a88:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    7a8c:	00030068 	andeq	r0, r3, r8, rrx
    7a90:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    7a94:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    7a98:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    7a9c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7aa0:	00040068 	andeq	r0, r4, r8, rrx
    7aa4:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    7aa8:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    7aac:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7ab0:	74730000 	ldrbtvc	r0, [r3], #-0
    7ab4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    7ab8:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    7abc:	00030068 	andeq	r0, r3, r8, rrx
    7ac0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    7ac4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7ac8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7acc:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    7ad0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    7ad4:	00682e78 	rsbeq	r2, r8, r8, ror lr
    7ad8:	73000006 	movwvc	r0, #6
    7adc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    7ae0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    7ae4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    7ae8:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    7aec:	00682e66 	rsbeq	r2, r8, r6, ror #28
    7af0:	00000007 	andeq	r0, r0, r7
    7af4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7af8:	00150402 	andseq	r0, r5, r2, lsl #8
    7afc:	018d0308 	orreq	r0, sp, r8, lsl #6
    7b00:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7b04:	3f300603 	svccc	0x00300603
    7b08:	16050204 	strne	r0, [r5], -r4, lsl #4
    7b0c:	010be203 	tsteq	fp, r3, lsl #4
    7b10:	13140305 	tstne	r4, #335544320	; 0x14000000
    7b14:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    7b18:	06030501 	streq	r0, [r3], -r1, lsl #10
    7b1c:	060d052f 	streq	r0, [sp], -pc, lsr #10
    7b20:	03052e01 	movweq	r2, #24065	; 0x5e01
    7b24:	23052f06 	movwcs	r2, #24326	; 0x5f06
    7b28:	05201406 	streq	r1, [r0, #-1030]!	; 0xfffffbfa
    7b2c:	0e052d3e 	mcreq	13, 0, r2, cr5, cr14, {1}
    7b30:	0603051f 			; <UNDEFINED> instruction: 0x0603051f
    7b34:	060e054d 	streq	r0, [lr], -sp, asr #10
    7b38:	01042001 	tsteq	r4, r1
    7b3c:	95030105 	strls	r0, [r3, #-261]	; 0xfffffefb
    7b40:	03050174 	movweq	r0, #20852	; 0x5174
    7b44:	01040200 	mrseq	r0, R12_usr
    7b48:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    7b4c:	07022e01 	streq	r2, [r2, -r1, lsl #28]
    7b50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7b54:	02050001 	andeq	r0, r5, #1
    7b58:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    7b5c:	0101a303 	tsteq	r1, r3, lsl #6
    7b60:	03050106 	movweq	r0, #20742	; 0x5106
    7b64:	2f154b06 	svccs	0x00154b06
    7b68:	05020430 	streq	r0, [r2, #-1072]	; 0xfffffbd0
    7b6c:	0bdd031a 	bleq	ff7487dc <_estack+0xdf7475a4>
    7b70:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7b74:	01061a05 	tsteq	r6, r5, lsl #20
    7b78:	2e2e0b05 	vmulcs.f64	d0, d14, d5
    7b7c:	03050104 	movweq	r0, #20740	; 0x5104
    7b80:	74a30306 	strtvc	r0, [r3], #774	; 0x306
    7b84:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    7b88:	0d98031a 	ldceq	3, cr0, [r8, #104]	; 0x68
    7b8c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7b90:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    7b94:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7b98:	03052e17 	movweq	r2, #24087	; 0x5e17
    7b9c:	2c053d06 	stccs	13, cr3, [r5], {6}
    7ba0:	6d050106 	stfvss	f0, [r5, #-24]	; 0xffffffe8
    7ba4:	06030520 	streq	r0, [r3], -r0, lsr #10
    7ba8:	061e053e 			; <UNDEFINED> instruction: 0x061e053e
    7bac:	052e2e13 	streq	r2, [lr, #-3603]!	; 0xfffff1ed
    7bb0:	1e052e52 	mcrne	14, 0, r2, cr5, cr2, {2}
    7bb4:	66052e21 	strvs	r2, [r5], -r1, lsr #28
    7bb8:	1605202d 	strne	r2, [r5], -sp, lsr #32
    7bbc:	01470306 	cmpeq	r7, r6, lsl #6
    7bc0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7bc4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    7bc8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    7bcc:	20010630 	andcs	r0, r1, r0, lsr r6
    7bd0:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
    7bd4:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
    7bd8:	73940301 	orrsvc	r0, r4, #67108864	; 0x4000000
    7bdc:	00030501 	andeq	r0, r3, r1, lsl #10
    7be0:	03010402 	movweq	r0, #5122	; 0x1402
    7be4:	0200207a 	andeq	r2, r0, #122	; 0x7a
    7be8:	00200104 	eoreq	r0, r0, r4, lsl #2
    7bec:	20010402 	andcs	r0, r1, r2, lsl #8
    7bf0:	01040200 	mrseq	r0, R12_usr
    7bf4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7bf8:	02042101 	andeq	r2, r4, #1073741824	; 0x40000000
    7bfc:	a3036d05 	movwge	r6, #15621	; 0x3d05
    7c00:	2020580d 	eorcs	r5, r0, sp, lsl #16
    7c04:	03060505 	movweq	r0, #25861	; 0x6505
    7c08:	20050152 	andcs	r0, r5, r2, asr r1
    7c0c:	30050106 	andcc	r0, r5, r6, lsl #2
    7c10:	2e05202e 	cdpcs	0, 0, cr2, cr5, cr14, {1}
    7c14:	01042e20 	tsteq	r4, r0, lsr #28
    7c18:	90030105 	andls	r0, r3, r5, lsl #2
    7c1c:	08020173 	stmdaeq	r2, {r0, r1, r4, r5, r6, r8}
    7c20:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7c24:	02050001 	andeq	r0, r5, #1
    7c28:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    7c2c:	0101b903 	tsteq	r1, r3, lsl #18
    7c30:	03050106 	movweq	r0, #20742	; 0x5106
    7c34:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    7c38:	03160502 	tsteq	r6, #8388608	; 0x800000
    7c3c:	05010bd5 	streq	r0, [r1, #-3029]	; 0xfffff42b
    7c40:	06051403 	streq	r1, [r5], -r3, lsl #8
    7c44:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7c48:	05133006 	ldreq	r3, [r3, #-6]
    7c4c:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    7c50:	2d052e22 	stccs	14, cr2, [r5, #-136]	; 0xffffff78
    7c54:	2e2b0520 	cfsh64cs	mvdx0, mvdx11, #16
    7c58:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    7c5c:	01040106 	tsteq	r4, r6, lsl #2
    7c60:	a6030105 	strge	r0, [r3], -r5, lsl #2
    7c64:	03050174 	movweq	r0, #20852	; 0x5174
    7c68:	01040200 	mrseq	r0, R12_usr
    7c6c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    7c70:	08022e01 	stmdaeq	r2, {r0, r9, sl, fp, sp}
    7c74:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7c78:	02050001 	andeq	r0, r5, #1
    7c7c:	00000000 	andeq	r0, r0, r0
    7c80:	0101c903 	tsteq	r1, r3, lsl #18
    7c84:	03050106 	movweq	r0, #20742	; 0x5106
    7c88:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    7c8c:	03160502 	tsteq	r6, #8388608	; 0x800000
    7c90:	05010beb 	streq	r0, [r1, #-3051]	; 0xfffff415
    7c94:	06051403 	streq	r1, [r5], -r3, lsl #8
    7c98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7c9c:	51053006 	tstpl	r5, r6
    7ca0:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    7ca4:	202d052e 	eorcs	r0, sp, lr, lsr #10
    7ca8:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    7cac:	044b0605 	strbeq	r0, [fp], #-1541	; 0xfffff9fb
    7cb0:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    7cb4:	050174ce 	streq	r7, [r1, #-1230]	; 0xfffffb32
    7cb8:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    7cbc:	b1030505 	tstlt	r3, r5, lsl #10
    7cc0:	03042e0b 	movweq	r2, #19979	; 0x4e0b
    7cc4:	c2031b05 	andgt	r1, r3, #5120	; 0x1400
    7cc8:	03050174 	movweq	r0, #20852	; 0x5174
    7ccc:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    7cd0:	03010501 	movweq	r0, #5377	; 0x1501
    7cd4:	0305014c 	movweq	r0, #20812	; 0x514c
    7cd8:	01040200 	mrseq	r0, R12_usr
    7cdc:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    7ce0:	07022e01 	streq	r2, [r2, -r1, lsl #28]
    7ce4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7ce8:	02050001 	andeq	r0, r5, #1
    7cec:	00000000 	andeq	r0, r0, r0
    7cf0:	0101d603 	tsteq	r1, r3, lsl #12
    7cf4:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7cf8:	03220502 			; <UNDEFINED> instruction: 0x03220502
    7cfc:	05010db9 	streq	r0, [r1, #-3513]	; 0xfffff247
    7d00:	03041403 	movweq	r1, #17411	; 0x4403
    7d04:	f9031b05 			; <UNDEFINED> instruction: 0xf9031b05
    7d08:	03050172 	movweq	r0, #20850	; 0x5172
    7d0c:	03020414 	movweq	r0, #9236	; 0x2414
    7d10:	052e0d87 	streq	r0, [lr, #-3463]!	; 0xfffff279
    7d14:	05130620 	ldreq	r0, [r3, #-1568]	; 0xfffff9e0
    7d18:	11052e28 	tstne	r5, r8, lsr #28
    7d1c:	2e0f052d 	cfsh32cs	mvfx0, mvfx15, #29
    7d20:	23060305 	movwcs	r0, #25349	; 0x6305
    7d24:	1b050304 	blne	14893c <_Min_Heap_Size+0x14813c>
    7d28:	0172f403 	cmneq	r2, r3, lsl #8	; <UNPREDICTABLE>
    7d2c:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7d30:	0d8c0302 	stceq	3, cr0, [ip, #8]
    7d34:	1405052e 	strne	r0, [r5], #-1326	; 0xfffffad2
    7d38:	021e0805 	andseq	r0, lr, #327680	; 0x50000
    7d3c:	01010006 	tsteq	r1, r6
    7d40:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7d44:	0015fc02 	andseq	pc, r5, r2, lsl #24
    7d48:	01e30308 	mvneq	r0, r8, lsl #6
    7d4c:	13040501 	movwne	r0, #17665	; 0x4501
    7d50:	1a050204 	bne	148568 <_Min_Heap_Size+0x147d68>
    7d54:	010e8103 	tsteq	lr, r3, lsl #2
    7d58:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7d5c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7d60:	03052006 	movweq	r2, #20486	; 0x5006
    7d64:	12054106 	andne	r4, r5, #-2147483647	; 0x80000001
    7d68:	03050106 	movweq	r0, #20742	; 0x5106
    7d6c:	16053d06 	strne	r3, [r5], -r6, lsl #26
    7d70:	017ea803 	cmneq	lr, r3, lsl #16
    7d74:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7d78:	2e051805 	cdpcs	8, 0, cr1, cr5, cr5, {0}
    7d7c:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    7d80:	d1030603 	tstle	r3, r3, lsl #12
    7d84:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
    7d88:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7d8c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    7d90:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7d94:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    7d98:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7d9c:	2077030c 	rsbscs	r0, r7, ip, lsl #6
    7da0:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    7da4:	71fc0301 	mvnsvc	r0, r1, lsl #6
    7da8:	00030201 	andeq	r0, r3, r1, lsl #4
    7dac:	01050101 	tsteq	r5, r1, lsl #2
    7db0:	00020500 	andeq	r0, r2, r0, lsl #10
    7db4:	03000000 	movweq	r0, #0
    7db8:	05010280 	streq	r0, [r1, #-640]	; 0xfffffd80
    7dbc:	03041403 	movweq	r1, #17411	; 0x4403
    7dc0:	15031b05 	strne	r1, [r3, #-2821]	; 0xfffff4fb
    7dc4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7dc8:	6c030104 	stfvss	f0, [r3], {4}
    7dcc:	060e052e 	streq	r0, [lr], -lr, lsr #10
    7dd0:	06030501 	streq	r0, [r3], -r1, lsl #10
    7dd4:	060d055b 			; <UNDEFINED> instruction: 0x060d055b
    7dd8:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
    7ddc:	01000402 	tsteq	r0, r2, lsl #8
    7de0:	00010501 	andeq	r0, r1, r1, lsl #10
    7de4:	00000205 	andeq	r0, r0, r5, lsl #4
    7de8:	97030000 	strls	r0, [r3, -r0]
    7dec:	03050102 	movweq	r0, #20738	; 0x5102
    7df0:	061b0514 			; <UNDEFINED> instruction: 0x061b0514
    7df4:	2e0d0501 	cfsh32cs	mvfx0, mvfx13, #1
    7df8:	3f060305 	svccc	0x00060305
    7dfc:	01060e05 	tsteq	r6, r5, lsl #28
    7e00:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    7e04:	1b050304 	blne	148a1c <_Min_Heap_Size+0x14821c>
    7e08:	05016d03 	streq	r6, [r1, #-3331]	; 0xfffff2fd
    7e0c:	01041403 	tsteq	r4, r3, lsl #8
    7e10:	042e1203 	strteq	r1, [lr], #-515	; 0xfffffdfd
    7e14:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    7e18:	03050161 	movweq	r0, #20833	; 0x5161
    7e1c:	05010414 	streq	r0, [r1, #-1044]	; 0xfffffbec
    7e20:	1e030601 	cfmadd32ne	mvax0, mvfx0, mvfx3, mvfx1
    7e24:	0003022e 	andeq	r0, r3, lr, lsr #4
    7e28:	01050101 	tsteq	r5, r1, lsl #2
    7e2c:	00020500 	andeq	r0, r2, r0, lsl #10
    7e30:	03000000 	movweq	r0, #0
    7e34:	060102aa 	streq	r0, [r1], -sl, lsr #5
    7e38:	06030501 	streq	r0, [r3], -r1, lsl #10
    7e3c:	053f3d30 	ldreq	r3, [pc, #-3376]!	; 7114 <_Min_Heap_Size+0x6914>
    7e40:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7e44:	0305200c 	movweq	r2, #20492	; 0x500c
    7e48:	10053e06 	andne	r3, r5, r6, lsl #28
    7e4c:	06050106 	streq	r0, [r5], -r6, lsl #2
    7e50:	06050520 	streq	r0, [r5], -r0, lsr #10
    7e54:	02003d31 	andeq	r3, r0, #3136	; 0xc40
    7e58:	3c060104 	stfccs	f0, [r6], {4}
    7e5c:	02040200 	andeq	r0, r4, #0, 4
    7e60:	3d2f062e 	stccc	6, cr0, [pc, #-184]!	; 7db0 <_Min_Heap_Size+0x75b0>
    7e64:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    7e68:	0619055a 			; <UNDEFINED> instruction: 0x0619055a
    7e6c:	200f0501 	andcs	r0, pc, r1, lsl #10
    7e70:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    7e74:	01062405 	tsteq	r6, r5, lsl #8
    7e78:	203e0521 	eorscs	r0, lr, r1, lsr #10
    7e7c:	051f5405 	ldreq	r5, [pc, #-1029]	; 7a7f <_Min_Heap_Size+0x727f>
    7e80:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7e84:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7e88:	051f5405 	ldreq	r5, [pc, #-1029]	; 7a8b <_Min_Heap_Size+0x728b>
    7e8c:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7e90:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7e94:	051f5405 	ldreq	r5, [pc, #-1029]	; 7a97 <_Min_Heap_Size+0x7297>
    7e98:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7e9c:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7ea0:	051f5405 	ldreq	r5, [pc, #-1029]	; 7aa3 <_Min_Heap_Size+0x72a3>
    7ea4:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7ea8:	030f051f 	movweq	r0, #62751	; 0xf51f
    7eac:	01052079 	tsteq	r5, r9, ror r0
    7eb0:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    7eb4:	04020003 	streq	r0, [r2], #-3
    7eb8:	205e0301 	subscs	r0, lr, r1, lsl #6
    7ebc:	01040200 	mrseq	r0, R12_usr
    7ec0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7ec4:	05053d01 	streq	r3, [r5, #-3329]	; 0xfffff2ff
    7ec8:	01040200 	mrseq	r0, R12_usr
    7ecc:	0402006e 	streq	r0, [r2], #-110	; 0xffffff92
    7ed0:	02006703 	andeq	r6, r0, #786432	; 0xc0000
    7ed4:	00670104 	rsbeq	r0, r7, r4, lsl #2
    7ed8:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    7edc:	01040200 	mrseq	r0, R12_usr
    7ee0:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7ee4:	02006701 	andeq	r6, r0, #262144	; 0x40000
    7ee8:	00670104 	rsbeq	r0, r7, r4, lsl #2
    7eec:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    7ef0:	660f0306 	strvs	r0, [pc], -r6, lsl #6
    7ef4:	01060f05 	tsteq	r6, r5, lsl #30
    7ef8:	4b060505 	blmi	189314 <_Min_Heap_Size+0x188b14>
    7efc:	01060f05 	tsteq	r6, r5, lsl #30
    7f00:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    7f04:	01010005 	tsteq	r1, r5
    7f08:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7f0c:	00000002 	andeq	r0, r0, r2
    7f10:	02d60300 	sbcseq	r0, r6, #0, 6
    7f14:	13030501 	movwne	r0, #13569	; 0x3501
    7f18:	06010521 	streq	r0, [r1], -r1, lsr #10
    7f1c:	00010221 	andeq	r0, r1, r1, lsr #4
    7f20:	01050101 	tsteq	r5, r1, lsl #2
    7f24:	00020500 	andeq	r0, r2, r0, lsl #10
    7f28:	03000000 	movweq	r0, #0
    7f2c:	050102e0 	streq	r0, [r1, #-736]	; 0xfffffd20
    7f30:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    7f34:	a5031a05 	strge	r1, [r3, #-2565]	; 0xfffff5fb
    7f38:	0305010a 	movweq	r0, #20746	; 0x510a
    7f3c:	061a0514 			; <UNDEFINED> instruction: 0x061a0514
    7f40:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    7f44:	75da0301 	ldrbvc	r0, [sl, #769]	; 0x301
    7f48:	0006022e 	andeq	r0, r6, lr, lsr #4
    7f4c:	01050101 	tsteq	r5, r1, lsl #2
    7f50:	00020500 	andeq	r0, r2, r0, lsl #10
    7f54:	03000000 	movweq	r0, #0
    7f58:	060102fb 			; <UNDEFINED> instruction: 0x060102fb
    7f5c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7f60:	0620065a 			; <UNDEFINED> instruction: 0x0620065a
    7f64:	05020430 	streq	r0, [r2, #-1072]	; 0xfffffbd0
    7f68:	0bac031a 	bleq	feb08bd8 <_estack+0xdeb079a0>
    7f6c:	15030501 	strne	r0, [r3, #-1281]	; 0xfffffaff
    7f70:	01060605 	tsteq	r6, r5, lsl #12
    7f74:	30060505 	andcc	r0, r6, r5, lsl #10
    7f78:	01061f05 	tsteq	r6, r5, lsl #30
    7f7c:	4a40052e 	bmi	100943c <_Min_Heap_Size+0x1008c3c>
    7f80:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    7f84:	05012f03 	streq	r2, [r1, #-3843]	; 0xfffff0fd
    7f88:	0c051403 	cfstrseq	mvf1, [r5], {3}
    7f8c:	03050106 	movweq	r0, #20742	; 0x5106
    7f90:	14132f06 	ldrne	r2, [r3], #-3846	; 0xfffff0fa
    7f94:	01061f05 	tsteq	r6, r5, lsl #30
    7f98:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    7f9c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    7fa0:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    7fa4:	0305206d 	movweq	r2, #20589	; 0x506d
    7fa8:	21053e06 	tstcs	r5, r6, lsl #28
    7fac:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    7fb0:	052e2e2e 	streq	r2, [lr, #-3630]!	; 0xfffff1d2
    7fb4:	03052e15 	movweq	r2, #24085	; 0x5e15
    7fb8:	35052106 	strcc	r2, [r5, #-262]	; 0xfffffefa
    7fbc:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7fc0:	04202e15 	strteq	r2, [r0], #-3605	; 0xfffff1eb
    7fc4:	03010501 	movweq	r0, #5377	; 0x1501
    7fc8:	05017497 	streq	r7, [r1, #-1175]	; 0xfffffb69
    7fcc:	04020003 	streq	r0, [r2], #-3
    7fd0:	02001d01 	andeq	r1, r0, #1, 26	; 0x40
    7fd4:	002e0104 	eoreq	r0, lr, r4, lsl #2
    7fd8:	20010402 	andcs	r0, r1, r2, lsl #8
    7fdc:	01040200 	mrseq	r0, R12_usr
    7fe0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    7fe4:	b7030605 	strlt	r0, [r3, -r5, lsl #12]
    7fe8:	3205200b 	andcc	r2, r5, #11
    7fec:	1f050106 	svcne	0x00050106
    7ff0:	2e40052e 	cdpcs	5, 4, cr0, cr0, cr14, {1}
    7ff4:	036d052e 	cmneq	sp, #192937984	; 0xb800000
    7ff8:	02200132 	eoreq	r0, r0, #-2147483636	; 0x8000000c
    7ffc:	01010006 	tsteq	r1, r6
    8000:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8004:	00000002 	andeq	r0, r0, r2
    8008:	038a0300 	orreq	r0, sl, #0, 6
    800c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8010:	31220603 			; <UNDEFINED> instruction: 0x31220603
    8014:	16050204 	strne	r0, [r5], -r4, lsl #4
    8018:	010ad003 	tsteq	sl, r3
    801c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8020:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8024:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    8028:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    802c:	2d052e22 	stccs	14, cr2, [r5, #-136]	; 0xffffff78
    8030:	2e2b0520 	cfsh64cs	mvdx0, mvdx11, #16
    8034:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
    8038:	75ad0301 	strvc	r0, [sp, #769]!	; 0x301
    803c:	00030501 	andeq	r0, r3, r1, lsl #10
    8040:	1c010402 	cfstrsne	mvf0, [r1], {2}
    8044:	01040200 	mrseq	r0, R12_usr
    8048:	0008023c 	andeq	r0, r8, ip, lsr r2
    804c:	01050101 	tsteq	r5, r1, lsl #2
    8050:	00020500 	andeq	r0, r2, r0, lsl #10
    8054:	03000000 	movweq	r0, #0
    8058:	0601039c 			; <UNDEFINED> instruction: 0x0601039c
    805c:	06030501 	streq	r0, [r3], -r1, lsl #10
    8060:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    8064:	ab031a05 	blge	ce880 <_Min_Heap_Size+0xce080>
    8068:	0305010a 	movweq	r0, #20746	; 0x510a
    806c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    8070:	06050501 	streq	r0, [r5], -r1, lsl #10
    8074:	06360530 			; <UNDEFINED> instruction: 0x06360530
    8078:	20230501 	eorcs	r0, r3, r1, lsl #10
    807c:	054a5b05 	strbeq	r5, [sl, #-2821]	; 0xfffff4fb
    8080:	0c052e67 	stceq	14, cr2, [r5], {103}	; 0x67
    8084:	01042e2e 	tsteq	r4, lr, lsr #28
    8088:	d2030105 	andle	r0, r3, #1073741825	; 0x40000001
    808c:	03050175 	movweq	r0, #20853	; 0x5175
    8090:	01040200 	mrseq	r0, R12_usr
    8094:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    8098:	02043c01 	andeq	r3, r4, #256	; 0x100
    809c:	b6030b05 	strlt	r0, [r3], -r5, lsl #22
    80a0:	04203c0a 	strteq	r3, [r0], #-3082	; 0xfffff3f6
    80a4:	030a0501 	movweq	r0, #42241	; 0xa501
    80a8:	020175cd 	andeq	r7, r1, #859832320	; 0x33400000
    80ac:	01010006 	tsteq	r1, r6
    80b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    80b4:	00000002 	andeq	r0, r0, r2
    80b8:	03ac0300 			; <UNDEFINED> instruction: 0x03ac0300
    80bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    80c0:	31220603 			; <UNDEFINED> instruction: 0x31220603
    80c4:	16050204 	strne	r0, [r5], -r4, lsl #4
    80c8:	010abd03 	tsteq	sl, r3, lsl #26
    80cc:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    80d0:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    80d4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    80d8:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    80dc:	2d052e22 	stccs	14, cr2, [r5, #-136]	; 0xffffff78
    80e0:	2e2b0520 	cfsh64cs	mvdx0, mvdx11, #16
    80e4:	0501044a 	streq	r0, [r1, #-1098]	; 0xfffffbb6
    80e8:	75c00301 	strbvc	r0, [r0, #769]	; 0x301
    80ec:	00030501 	andeq	r0, r3, r1, lsl #10
    80f0:	1c010402 	cfstrsne	mvf0, [r1], {2}
    80f4:	01040200 	mrseq	r0, R12_usr
    80f8:	0008023c 	andeq	r0, r8, ip, lsr r2
    80fc:	01050101 	tsteq	r5, r1, lsl #2
    8100:	00020500 	andeq	r0, r2, r0, lsl #10
    8104:	03000000 	movweq	r0, #0
    8108:	060103bd 			; <UNDEFINED> instruction: 0x060103bd
    810c:	06030501 	streq	r0, [r3], -r1, lsl #10
    8110:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    8114:	bd031a05 	vstrlt	s2, [r3, #-20]	; 0xffffffec
    8118:	0305010a 	movweq	r0, #20746	; 0x510a
    811c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    8120:	06050501 	streq	r0, [r5], -r1, lsl #10
    8124:	06360530 			; <UNDEFINED> instruction: 0x06360530
    8128:	20230501 	eorcs	r0, r3, r1, lsl #10
    812c:	054a5b05 	strbeq	r5, [sl, #-2821]	; 0xfffff4fb
    8130:	0c052e67 	stceq	14, cr2, [r5], {103}	; 0x67
    8134:	01042e2e 	tsteq	r4, lr, lsr #28
    8138:	c0030105 	andgt	r0, r3, r5, lsl #2
    813c:	03050175 	movweq	r0, #20853	; 0x5175
    8140:	01040200 	mrseq	r0, R12_usr
    8144:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    8148:	02043c01 	andeq	r3, r4, #256	; 0x100
    814c:	c8030b05 	stmdagt	r3, {r0, r2, r8, r9, fp}
    8150:	04203c0a 	strteq	r3, [r0], #-3082	; 0xfffff3f6
    8154:	030a0501 	movweq	r0, #42241	; 0xa501
    8158:	020175bb 	andeq	r7, r1, #784334848	; 0x2ec00000
    815c:	01010006 	tsteq	r1, r6
    8160:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8164:	00000002 	andeq	r0, r0, r2
    8168:	03ce0300 	biceq	r0, lr, #0, 6
    816c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8170:	00300603 	eorseq	r0, r0, r3, lsl #12
    8174:	06010402 	streq	r0, [r1], -r2, lsl #8
    8178:	0521062e 	streq	r0, [r1, #-1582]!	; 0xfffff9d2
    817c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8180:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    8184:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    8188:	03056801 	movweq	r6, #22529	; 0x5801
    818c:	02040200 	andeq	r0, r4, #0, 4
    8190:	00207703 	eoreq	r7, r0, r3, lsl #14
    8194:	3c020402 	cfstrscc	mvf0, [r2], {2}
    8198:	3f060505 	svccc	0x00060505
    819c:	01061305 	tsteq	r6, r5, lsl #6
    81a0:	01000a02 	tsteq	r0, r2, lsl #20
    81a4:	00010501 	andeq	r0, r1, r1, lsl #10
    81a8:	00000205 	andeq	r0, r0, r5, lsl #4
    81ac:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    81b0:	02160103 	andseq	r0, r6, #-1073741824	; 0xc0000000
    81b4:	01010001 	tsteq	r1, r1
    81b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    81bc:	00000002 	andeq	r0, r0, r2
    81c0:	03e00300 	mvneq	r0, #0, 6
    81c4:	21030501 	tstcs	r3, r1, lsl #10
    81c8:	2f060105 	svccs	0x00060105
    81cc:	01000102 	tsteq	r0, r2, lsl #2
    81d0:	0005be01 	andeq	fp, r5, r1, lsl #28
    81d4:	35000300 	strcc	r0, [r0, #-768]	; 0xfffffd00
    81d8:	02000002 	andeq	r0, r0, #2
    81dc:	0d0efb01 	vstreq	d15, [lr, #-4]
    81e0:	01010100 	mrseq	r0, (UNDEF: 17)
    81e4:	00000001 	andeq	r0, r0, r1
    81e8:	01000001 	tsteq	r0, r1
    81ec:	442f2e2e 	strtmi	r2, [pc], #-3630	; 81f4 <_Min_Heap_Size+0x79f4>
    81f0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    81f4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    81f8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    81fc:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    8200:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    8204:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    8208:	2f726576 	svccs	0x00726576
    820c:	00637253 	rsbeq	r7, r3, r3, asr r2
    8210:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8214:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8218:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    821c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8220:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8224:	615c6d61 	cmpvs	ip, r1, ror #26
    8228:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    822c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8230:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8234:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8238:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    823c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8240:	2e30312d 	rsfcssp	f3, f0, #5.0
    8244:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8248:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    824c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8250:	6f6e2d6d 	svcvs	0x006e2d6d
    8254:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8258:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    825c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8260:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8264:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    8268:	00656e69 	rsbeq	r6, r5, r9, ror #28
    826c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8270:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8274:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8278:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    827c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8280:	615c6d61 	cmpvs	ip, r1, ror #26
    8284:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8288:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    828c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8290:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8294:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8298:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    829c:	2e30312d 	rsfcssp	f3, f0, #5.0
    82a0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    82a4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    82a8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    82ac:	6f6e2d6d 	svcvs	0x006e2d6d
    82b0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    82b4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    82b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    82bc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    82c0:	00737973 	rsbseq	r7, r3, r3, ror r9
    82c4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 82cc <_Min_Heap_Size+0x7acc>
    82c8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    82cc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    82d0:	5349534d 	movtpl	r5, #37709	; 0x934d
    82d4:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    82d8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    82dc:	2f2e2e00 	svccs	0x002e2e00
    82e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    82e4:	2f737265 	svccs	0x00737265
    82e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    82ec:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    82f0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    82f4:	2f54532f 	svccs	0x0054532f
    82f8:	334d5453 	movtcc	r5, #54355	; 0xd453
    82fc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    8300:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    8304:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8308:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    830c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8310:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    8314:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    8318:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    831c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    8320:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 8328 <_Min_Heap_Size+0x7b28>
    8324:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8328:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    832c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    8330:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    8334:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    8338:	73000063 	movwvc	r0, #99	; 0x63
    833c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8340:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8344:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    8348:	0100632e 	tsteq	r0, lr, lsr #6
    834c:	645f0000 	ldrbvs	r0, [pc], #-0	; 8354 <_Min_Heap_Size+0x7b54>
    8350:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8354:	745f746c 	ldrbvc	r7, [pc], #-1132	; 835c <_Min_Heap_Size+0x7b5c>
    8358:	73657079 	cmnvc	r5, #121	; 0x79
    835c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8360:	735f0000 	cmpvc	pc, #0
    8364:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    8368:	00682e74 	rsbeq	r2, r8, r4, ror lr
    836c:	63000003 	movwvs	r0, #3
    8370:	5f65726f 	svcpl	0x0065726f
    8374:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    8378:	00040068 	andeq	r0, r4, r8, rrx
    837c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    8380:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8384:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    8388:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    838c:	74730000 	ldrbtvc	r0, [r3], #-0
    8390:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8394:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    8398:	00050068 	andeq	r0, r5, r8, rrx
    839c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    83a0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    83a4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    83a8:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 83b0 <_Min_Heap_Size+0x7bb0>
    83ac:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    83b0:	00000600 	andeq	r0, r0, r0, lsl #12
    83b4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    83b8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    83bc:	61685f78 	smcvs	34296	; 0x85f8
    83c0:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    83c4:	73000006 	movwvc	r0, #6
    83c8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    83cc:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    83d0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    83d4:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    83d8:	00050068 	andeq	r0, r5, r8, rrx
    83dc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    83e0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    83e4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    83e8:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    83ec:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    83f0:	00070068 	andeq	r0, r7, r8, rrx
    83f4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    83f8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    83fc:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    8400:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    8404:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    8408:	00682e78 	rsbeq	r2, r8, r8, ror lr
    840c:	00000006 	andeq	r0, r0, r6
    8410:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8414:	00000002 	andeq	r0, r0, r2
    8418:	01db0300 	bicseq	r0, fp, r0, lsl #6
    841c:	01021601 	tsteq	r2, r1, lsl #12
    8420:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8424:	02050001 	andeq	r0, r5, #1
    8428:	00000000 	andeq	r0, r0, r0
    842c:	0101e603 	tsteq	r1, r3, lsl #12
    8430:	00010216 	andeq	r0, r1, r6, lsl r2
    8434:	01050101 	tsteq	r5, r1, lsl #2
    8438:	00020500 	andeq	r0, r2, r0, lsl #10
    843c:	03000000 	movweq	r0, #0
    8440:	050101be 	streq	r0, [r1, #-446]	; 0xfffffe42
    8444:	303d2203 	eorscc	r2, sp, r3, lsl #4
    8448:	222f222f 	eorcs	r2, pc, #-268435454	; 0xf0000002
    844c:	232f222f 			; <UNDEFINED> instruction: 0x232f222f
    8450:	06010531 			; <UNDEFINED> instruction: 0x06010531
    8454:	000a0213 	andeq	r0, sl, r3, lsl r2
    8458:	01050101 	tsteq	r5, r1, lsl #2
    845c:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    8460:	03080016 	movweq	r0, #32790	; 0x8016
    8464:	060101fd 			; <UNDEFINED> instruction: 0x060101fd
    8468:	06030501 	streq	r0, [r3], -r1, lsl #10
    846c:	06330530 			; <UNDEFINED> instruction: 0x06330530
    8470:	07052e01 	streq	r2, [r5, -r1, lsl #28]
    8474:	6606054a 	strvs	r0, [r6], -sl, asr #10
    8478:	26060305 	strcs	r0, [r6], -r5, lsl #6
    847c:	01060605 	tsteq	r6, r5, lsl #12
    8480:	05350c05 	ldreq	r0, [r5, #-3077]!	; 0xfffff3fb
    8484:	67290605 	strvs	r0, [r9, -r5, lsl #12]!
    8488:	01061005 	tsteq	r6, r5
    848c:	36060305 	strcc	r0, [r6], -r5, lsl #6
    8490:	01060a05 	tsteq	r6, r5, lsl #20
    8494:	71030c05 	tstvc	r3, r5, lsl #24
    8498:	0301052e 	movweq	r0, #5422	; 0x152e
    849c:	02202010 	eoreq	r2, r0, #16
    84a0:	01010007 	tsteq	r1, r7
    84a4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    84a8:	00167002 	andseq	r7, r6, r2
    84ac:	019d0308 	orrseq	r0, sp, r8, lsl #6
    84b0:	23030501 	movwcs	r0, #13569	; 0x3501
    84b4:	3f4e4e5c 	svccc	0x004e4e5c
    84b8:	0105313f 	tsteq	r5, pc, lsr r1
    84bc:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    84c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    84c4:	02050001 	andeq	r0, r5, #1
    84c8:	080016a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, ip}
    84cc:	0102b803 	tsteq	r2, r3, lsl #16
    84d0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    84d4:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    84d8:	06026701 	streq	r6, [r2], -r1, lsl #14
    84dc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    84e0:	02050001 	andeq	r0, r5, #1
    84e4:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
    84e8:	0102c303 	tsteq	r2, r3, lsl #6
    84ec:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    84f0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    84f4:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    84f8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    84fc:	02050001 	andeq	r0, r5, #1
    8500:	00000000 	andeq	r0, r0, r0
    8504:	0102cc03 	tsteq	r2, r3, lsl #24
    8508:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    850c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8510:	01010006 	tsteq	r1, r6
    8514:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8518:	00000002 	andeq	r0, r0, r2
    851c:	02d50300 	sbcseq	r0, r5, #0, 6
    8520:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8524:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    8528:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    852c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    8530:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    8534:	12053006 	andne	r3, r5, #6
    8538:	06050106 	streq	r0, [r5], -r6, lsl #2
    853c:	2915052e 	ldmdbcs	r5, {r1, r2, r3, r5, r8, sl}
    8540:	03060305 	movweq	r0, #25349	; 0x6305
    8544:	01052017 	tsteq	r5, r7, lsl r0
    8548:	03051306 	movweq	r1, #21254	; 0x5306
    854c:	03040200 	movweq	r0, #16896	; 0x4200
    8550:	00206b03 	eoreq	r6, r0, r3, lsl #22
    8554:	3c030402 	cfstrscc	mvf0, [r3], {2}
    8558:	41060505 	tstmi	r6, r5, lsl #10
    855c:	06100515 			; <UNDEFINED> instruction: 0x06100515
    8560:	06050501 	streq	r0, [r5], -r1, lsl #10
    8564:	060e0523 	streq	r0, [lr], -r3, lsr #10
    8568:	06050501 	streq	r0, [r5], -r1, lsl #10
    856c:	0608054c 	streq	r0, [r8], -ip, asr #10
    8570:	06070501 	streq	r0, [r7], -r1, lsl #10
    8574:	06120531 			; <UNDEFINED> instruction: 0x06120531
    8578:	00090201 	andeq	r0, r9, r1, lsl #4
    857c:	01050101 	tsteq	r5, r1, lsl #2
    8580:	00020500 	andeq	r0, r2, r0, lsl #10
    8584:	03000000 	movweq	r0, #0
    8588:	050102f6 	streq	r0, [r1, #-758]	; 0xfffffd0a
    858c:	01051303 	tsteq	r5, r3, lsl #6
    8590:	06021306 	streq	r1, [r2], -r6, lsl #6
    8594:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8598:	02050001 	andeq	r0, r5, #1
    859c:	080016c8 	stmdaeq	r0, {r3, r6, r7, r9, sl, ip}
    85a0:	01038603 	tsteq	r3, r3, lsl #12
    85a4:	03050106 	movweq	r0, #20742	; 0x5106
    85a8:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    85ac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    85b0:	15210603 	strne	r0, [r1, #-1539]!	; 0xfffff9fd
    85b4:	01060605 	tsteq	r6, r5, lsl #12
    85b8:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    85bc:	01060d05 	tsteq	r6, r5, lsl #26
    85c0:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    85c4:	04020003 	streq	r0, [r2], #-3
    85c8:	05250601 	streq	r0, [r5, #-1537]!	; 0xfffff9ff
    85cc:	04020008 	streq	r0, [r2], #-8
    85d0:	0a051001 	beq	14c5dc <_Min_Heap_Size+0x14bddc>
    85d4:	01040200 	mrseq	r0, R12_usr
    85d8:	18050106 	stmdane	r5, {r1, r2, r8}
    85dc:	01040200 	mrseq	r0, R12_usr
    85e0:	0008052e 	andeq	r0, r8, lr, lsr #10
    85e4:	20010402 	andcs	r0, r1, r2, lsl #8
    85e8:	20310105 	eorscs	r0, r1, r5, lsl #2
    85ec:	01000302 	tsteq	r0, r2, lsl #6
    85f0:	00010501 	andeq	r0, r1, r1, lsl #10
    85f4:	00000205 	andeq	r0, r0, r5, lsl #4
    85f8:	a0030000 	andge	r0, r3, r0
    85fc:	03050103 	movweq	r0, #20739	; 0x5103
    8600:	06110514 			; <UNDEFINED> instruction: 0x06110514
    8604:	67010501 	strvs	r0, [r1, -r1, lsl #10]
    8608:	01000102 	tsteq	r0, r2, lsl #2
    860c:	00010501 	andeq	r0, r1, r1, lsl #10
    8610:	00000205 	andeq	r0, r0, r5, lsl #4
    8614:	b0030000 	andlt	r0, r3, r0
    8618:	03050103 	movweq	r0, #20739	; 0x5103
    861c:	06120514 			; <UNDEFINED> instruction: 0x06120514
    8620:	67010501 	strvs	r0, [r1, -r1, lsl #10]
    8624:	01000102 	tsteq	r0, r2, lsl #2
    8628:	00010501 	andeq	r0, r1, r1, lsl #10
    862c:	00000205 	andeq	r0, r0, r5, lsl #4
    8630:	ba030000 	blt	c8638 <_Min_Heap_Size+0xc7e38>
    8634:	03050103 	movweq	r0, #20739	; 0x5103
    8638:	06010513 			; <UNDEFINED> instruction: 0x06010513
    863c:	00040213 	andeq	r0, r4, r3, lsl r2
    8640:	01050101 	tsteq	r5, r1, lsl #2
    8644:	00020500 	andeq	r0, r2, r0, lsl #10
    8648:	03000000 	movweq	r0, #0
    864c:	050103c3 	streq	r0, [r1, #-963]	; 0xfffffc3d
    8650:	11051303 	tstne	r5, r3, lsl #6
    8654:	01050106 	tsteq	r5, r6, lsl #2
    8658:	0004022f 	andeq	r0, r4, pc, lsr #4
    865c:	01050101 	tsteq	r5, r1, lsl #2
    8660:	00020500 	andeq	r0, r2, r0, lsl #10
    8664:	03000000 	movweq	r0, #0
    8668:	050103cc 	streq	r0, [r1, #-972]	; 0xfffffc34
    866c:	11051303 	tstne	r5, r3, lsl #6
    8670:	01050106 	tsteq	r5, r6, lsl #2
    8674:	0006022f 	andeq	r0, r6, pc, lsr #4
    8678:	01050101 	tsteq	r5, r1, lsl #2
    867c:	00020500 	andeq	r0, r2, r0, lsl #10
    8680:	03000000 	movweq	r0, #0
    8684:	050103d5 	streq	r0, [r1, #-981]	; 0xfffffc2b
    8688:	01051303 	tsteq	r5, r3, lsl #6
    868c:	03025906 	movweq	r5, #10502	; 0x2906
    8690:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8694:	02050001 	andeq	r0, r5, #1
    8698:	00000000 	andeq	r0, r0, r0
    869c:	0103de03 	tsteq	r3, r3, lsl #28
    86a0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    86a4:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    86a8:	01010003 	tsteq	r1, r3
    86ac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    86b0:	00000002 	andeq	r0, r0, r2
    86b4:	03e70300 	mvneq	r0, #0, 6
    86b8:	13030501 	movwne	r0, #13569	; 0x3501
    86bc:	59060105 	stmdbpl	r6, {r0, r2, r8}
    86c0:	01000302 	tsteq	r0, r2, lsl #6
    86c4:	00010501 	andeq	r0, r1, r1, lsl #10
    86c8:	00000205 	andeq	r0, r0, r5, lsl #4
    86cc:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    86d0:	03050103 	movweq	r0, #20739	; 0x5103
    86d4:	06010513 			; <UNDEFINED> instruction: 0x06010513
    86d8:	00030259 	andeq	r0, r3, r9, asr r2
    86dc:	01050101 	tsteq	r5, r1, lsl #2
    86e0:	00020500 	andeq	r0, r2, r0, lsl #10
    86e4:	03000000 	movweq	r0, #0
    86e8:	050103f9 	streq	r0, [r1, #-1017]	; 0xfffffc07
    86ec:	01051303 	tsteq	r5, r3, lsl #6
    86f0:	03025906 	movweq	r5, #10502	; 0x2906
    86f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    86f8:	02050001 	andeq	r0, r5, #1
    86fc:	00000000 	andeq	r0, r0, r0
    8700:	01048203 	tsteq	r4, r3, lsl #4
    8704:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8708:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    870c:	01010003 	tsteq	r1, r3
    8710:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8714:	00000002 	andeq	r0, r0, r2
    8718:	048d0300 	streq	r0, [sp], #768	; 0x300
    871c:	13030501 	movwne	r0, #13569	; 0x3501
    8720:	01062505 	tsteq	r6, r5, lsl #10
    8724:	024b0105 	subeq	r0, fp, #1073741825	; 0x40000001
    8728:	01010004 	tsteq	r1, r4
    872c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8730:	00000002 	andeq	r0, r0, r2
    8734:	04980300 	ldreq	r0, [r8], #768	; 0x300
    8738:	13030501 	movwne	r0, #13569	; 0x3501
    873c:	01062505 	tsteq	r6, r5, lsl #10
    8740:	024b0105 	subeq	r0, fp, #1073741825	; 0x40000001
    8744:	01010004 	tsteq	r1, r4
    8748:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    874c:	00000002 	andeq	r0, r0, r2
    8750:	04a10300 	strteq	r0, [r1], #768	; 0x300
    8754:	13030501 	movwne	r0, #13569	; 0x3501
    8758:	13060105 	movwne	r0, #24837	; 0x6105
    875c:	01000602 	tsteq	r0, r2, lsl #12
    8760:	00010501 	andeq	r0, r1, r1, lsl #10
    8764:	00000205 	andeq	r0, r0, r5, lsl #4
    8768:	aa030000 	bge	c8770 <_Min_Heap_Size+0xc7f70>
    876c:	03050104 	movweq	r0, #20740	; 0x5104
    8770:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8774:	00060213 	andeq	r0, r6, r3, lsl r2
    8778:	01050101 	tsteq	r5, r1, lsl #2
    877c:	00020500 	andeq	r0, r2, r0, lsl #10
    8780:	03000000 	movweq	r0, #0
    8784:	050104b3 	streq	r0, [r1, #-1203]	; 0xfffffb4d
    8788:	01051303 	tsteq	r5, r3, lsl #6
    878c:	06021306 	streq	r1, [r2], -r6, lsl #6
    8790:	6b010100 	blvs	48b98 <_Min_Heap_Size+0x48398>
    8794:	03000002 	movweq	r0, #2
    8798:	00018500 	andeq	r8, r1, r0, lsl #10
    879c:	fb010200 	blx	48fa6 <_Min_Heap_Size+0x487a6>
    87a0:	01000d0e 	tsteq	r0, lr, lsl #26
    87a4:	00010101 	andeq	r0, r1, r1, lsl #2
    87a8:	00010000 	andeq	r0, r1, r0
    87ac:	2e2e0100 	sufcse	f0, f6, f0
    87b0:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    87b4:	72532f65 	subsvc	r2, r3, #404	; 0x194
    87b8:	3a630063 	bcc	18c894c <_Min_Heap_Size+0x18c814c>
    87bc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    87c0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    87c4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    87c8:	6f72705c 	svcvs	0x0072705c
    87cc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    87d0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    87d4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    87d8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    87dc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    87e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    87e4:	61652d65 	cmnvs	r5, r5, ror #26
    87e8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    87ec:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    87f0:	31323032 	teqcc	r2, r2, lsr r0
    87f4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    87f8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    87fc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8800:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8804:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8808:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    880c:	616d5c65 	cmnvs	sp, r5, ror #24
    8810:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    8814:	3a630065 	bcc	18c89b0 <_Min_Heap_Size+0x18c81b0>
    8818:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    881c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8820:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8824:	6f72705c 	svcvs	0x0072705c
    8828:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    882c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8830:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8834:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8838:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    883c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8840:	61652d65 	cmnvs	r5, r5, ror #26
    8844:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8848:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    884c:	31323032 	teqcc	r2, r2, lsr r0
    8850:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8854:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8858:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    885c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8860:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8864:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8868:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    886c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    8870:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8874:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    8878:	534d432f 	movtpl	r4, #54063	; 0xd32f
    887c:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    8880:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8884:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    8888:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    888c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8890:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    8894:	2f534953 	svccs	0x00534953
    8898:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    889c:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    88a0:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    88a4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    88a8:	2f787834 	svccs	0x00787834
    88ac:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    88b0:	00656475 	rsbeq	r6, r5, r5, ror r4
    88b4:	73797300 	cmnvc	r9, #0, 6
    88b8:	5f6d6574 	svcpl	0x006d6574
    88bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    88c0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    88c4:	00632e78 	rsbeq	r2, r3, r8, ror lr
    88c8:	5f000001 	svcpl	0x00000001
    88cc:	61666564 	cmnvs	r6, r4, ror #10
    88d0:	5f746c75 	svcpl	0x00746c75
    88d4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    88d8:	00682e73 	rsbeq	r2, r8, r3, ror lr
    88dc:	5f000002 	svcpl	0x00000002
    88e0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    88e4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    88e8:	00000300 	andeq	r0, r0, r0, lsl #6
    88ec:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    88f0:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
    88f4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    88f8:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    88fc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    8900:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    8904:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8908:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    890c:	00000500 	andeq	r0, r0, r0, lsl #10
    8910:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8914:	30346632 	eorscc	r6, r4, r2, lsr r6
    8918:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    891c:	00050068 	andeq	r0, r5, r8, rrx
    8920:	01050000 	mrseq	r0, (UNDEF: 5)
    8924:	f0020500 			; <UNDEFINED> instruction: 0xf0020500
    8928:	03080016 	movweq	r0, #32790	; 0x8016
    892c:	050101a7 	streq	r0, [r1, #-423]	; 0xfffffe59
    8930:	10051505 	andne	r1, r5, r5, lsl #10
    8934:	01050106 	tsteq	r5, r6, lsl #2
    8938:	02740b03 	rsbseq	r0, r4, #3072	; 0xc00
    893c:	01010003 	tsteq	r1, r3
    8940:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8944:	00000002 	andeq	r0, r0, r2
    8948:	01dc0300 	bicseq	r0, ip, r0, lsl #6
    894c:	13030501 	movwne	r0, #13569	; 0x3501
    8950:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    8954:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    8958:	30060305 	andcc	r0, r6, r5, lsl #6
    895c:	1f030705 	svcne	0x00030705
    8960:	06170558 			; <UNDEFINED> instruction: 0x06170558
    8964:	07052001 	streq	r2, [r5, -r1]
    8968:	63032f06 	movwvs	r2, #16134	; 0x3f06
    896c:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    8970:	07052001 	streq	r2, [r5, -r1]
    8974:	03052f06 	movweq	r2, #24326	; 0x5f06
    8978:	05012003 	streq	r2, [r1, #-3]
    897c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    8980:	16052e34 			; <UNDEFINED> instruction: 0x16052e34
    8984:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8988:	06130530 			; <UNDEFINED> instruction: 0x06130530
    898c:	4b010501 	blmi	49d98 <_Min_Heap_Size+0x49598>
    8990:	03060705 	movweq	r0, #26373	; 0x6705
    8994:	1705205f 	smlsdne	r5, pc, r0, r2	; <UNPREDICTABLE>
    8998:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    899c:	262f0607 	strtcs	r0, [pc], -r7, lsl #12
    89a0:	01061705 	tsteq	r6, r5, lsl #14
    89a4:	06070520 	streq	r0, [r7], -r0, lsr #10
    89a8:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    89ac:	200c0501 	andcs	r0, ip, r1, lsl #10
    89b0:	30060705 	andcc	r0, r6, r5, lsl #14
    89b4:	01060a05 	tsteq	r6, r5, lsl #20
    89b8:	3f060905 	svccc	0x00060905
    89bc:	01061d05 	tsteq	r6, r5, lsl #26
    89c0:	203c2c05 	eorscs	r2, ip, r5, lsl #24
    89c4:	05204a05 	streq	r4, [r0, #-2565]!	; 0xfffff5fb
    89c8:	07052e10 	smladeq	r5, r0, lr, r2
    89cc:	14053606 	strne	r3, [r5], #-1542	; 0xfffff9fa
    89d0:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    89d4:	2e38052e 	cdpcs	5, 3, cr0, cr8, cr14, {1}
    89d8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    89dc:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    89e0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    89e4:	05202e17 	streq	r2, [r0, #-3607]!	; 0xfffff1e9
    89e8:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    89ec:	1d051b09 	vstrne	d1, [r5, #-36]	; 0xffffffdc
    89f0:	2c050106 	stfcss	f0, [r5], {6}
    89f4:	4a05203c 	bmi	150aec <_Min_Heap_Size+0x1502ec>
    89f8:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    89fc:	000c022e 	andeq	r0, ip, lr, lsr #4
    8a00:	01e20101 	mvneq	r0, r1, lsl #2
    8a04:	00030000 	andeq	r0, r3, r0
    8a08:	0000017a 	andeq	r0, r0, sl, ror r1
    8a0c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8a10:	0101000d 	tsteq	r1, sp
    8a14:	00000101 	andeq	r0, r0, r1, lsl #2
    8a18:	00000100 	andeq	r0, r0, r0, lsl #2
    8a1c:	2f2e2e01 	svccs	0x002e2e01
    8a20:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    8a24:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    8a28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8a2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8a30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8a34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8a38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8a3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8a40:	5f6d7261 	svcpl	0x006d7261
    8a44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8a48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8a4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8a50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8a54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8a58:	30312d69 	eorscc	r2, r1, r9, ror #26
    8a5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8a60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8a64:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    8a68:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    8a6c:	615c6363 	cmpvs	ip, r3, ror #6
    8a70:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8a74:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8a78:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8a7c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    8a80:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    8a84:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8a88:	00656475 	rsbeq	r6, r5, r5, ror r4
    8a8c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8a90:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8a94:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8a98:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8a9c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8aa0:	615c6d61 	cmpvs	ip, r1, ror #26
    8aa4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8aa8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8aac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8ab0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8ab4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8ab8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8abc:	2e30312d 	rsfcssp	f3, f0, #5.0
    8ac0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8ac4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8ac8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8acc:	6f6e2d6d 	svcvs	0x006e2d6d
    8ad0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8ad4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8ad8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8adc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8ae0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    8ae4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    8ae8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8aec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8af0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8af4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8af8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8afc:	615c6d61 	cmpvs	ip, r1, ror #26
    8b00:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8b04:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8b08:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8b0c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8b10:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8b14:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8b18:	2e30312d 	rsfcssp	f3, f0, #5.0
    8b1c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8b20:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8b24:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8b28:	6f6e2d6d 	svcvs	0x006e2d6d
    8b2c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8b30:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8b34:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8b38:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8b3c:	00737973 	rsbseq	r7, r3, r3, ror r9
    8b40:	73797300 	cmnvc	r9, #0, 6
    8b44:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
    8b48:	00010063 	andeq	r0, r1, r3, rrx
    8b4c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    8b50:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    8b54:	00020068 	andeq	r0, r2, r8, rrx
    8b58:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    8b5c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8b60:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    8b64:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8b68:	00030068 	andeq	r0, r3, r8, rrx
    8b6c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    8b70:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    8b74:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    8b78:	72650000 	rsbvc	r0, r5, #0
    8b7c:	2e6f6e72 	mcrcs	14, 3, r6, cr15, cr2, {3}
    8b80:	00040068 	andeq	r0, r4, r8, rrx
    8b84:	01050000 	mrseq	r0, (UNDEF: 5)
    8b88:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
    8b8c:	03080017 	movweq	r0, #32791	; 0x8017
    8b90:	01060135 	tsteq	r6, r5, lsr r1
    8b94:	2f060305 	svccs	0x00060305
    8b98:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    8b9c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    8ba0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    8ba4:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    8ba8:	06052001 	streq	r2, [r5], -r1
    8bac:	06030520 	streq	r0, [r3], -r0, lsr #10
    8bb0:	06170526 	ldreq	r0, [r7], -r6, lsr #10
    8bb4:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    8bb8:	42060305 	andmi	r0, r6, #335544320	; 0x14000000
    8bbc:	06130513 			; <UNDEFINED> instruction: 0x06130513
    8bc0:	06030501 	streq	r0, [r3], -r1, lsl #10
    8bc4:	06010530 			; <UNDEFINED> instruction: 0x06010530
    8bc8:	06050513 			; <UNDEFINED> instruction: 0x06050513
    8bcc:	05207203 	streq	r7, [r0, #-515]!	; 0xfffffdfd
    8bd0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    8bd4:	05500605 	ldrbeq	r0, [r0, #-1541]	; 0xfffff9fb
    8bd8:	052e060b 	streq	r0, [lr, #-1547]!	; 0xfffff9f5
    8bdc:	052f0605 	streq	r0, [pc, #-1541]!	; 85df <_Min_Heap_Size+0x7ddf>
    8be0:	0201060c 	andeq	r0, r1, #12, 12	; 0xc00000
    8be4:	0101000c 	tsteq	r1, ip
    8be8:	00000417 	andeq	r0, r0, r7, lsl r4
    8bec:	01490003 	cmpeq	r9, r3
    8bf0:	01020000 	mrseq	r0, (UNDEF: 2)
    8bf4:	000d0efb 	strdeq	r0, [sp], -fp
    8bf8:	01010101 	tsteq	r1, r1, lsl #2
    8bfc:	01000000 	mrseq	r0, (UNDEF: 0)
    8c00:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8c04:	6f432f2e 	svcvs	0x00432f2e
    8c08:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    8c0c:	63006372 	movwvs	r6, #882	; 0x372
    8c10:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8c14:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8c18:	6f646978 	svcvs	0x00646978
    8c1c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8c20:	6172676f 	cmnvs	r2, pc, ror #14
    8c24:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8c28:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8c2c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8c30:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8c34:	6f6e2d6d 	svcvs	0x006e2d6d
    8c38:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8c3c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8c40:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8c44:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8c48:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8c4c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8c50:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8c54:	61652d65 	cmnvs	r5, r5, ror #26
    8c58:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8c5c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8c60:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    8c64:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    8c68:	6300656e 	movwvs	r6, #1390	; 0x56e
    8c6c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8c70:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8c74:	6f646978 	svcvs	0x00646978
    8c78:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8c7c:	6172676f 	cmnvs	r2, pc, ror #14
    8c80:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8c84:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8c88:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8c8c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8c90:	6f6e2d6d 	svcvs	0x006e2d6d
    8c94:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8c98:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8c9c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8ca0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8ca4:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8ca8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8cac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8cb0:	61652d65 	cmnvs	r5, r5, ror #26
    8cb4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8cb8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8cbc:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    8cc0:	00007379 	andeq	r7, r0, r9, ror r3
    8cc4:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    8cc8:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    8ccc:	0100632e 	tsteq	r0, lr, lsr #6
    8cd0:	645f0000 	ldrbvs	r0, [pc], #-0	; 8cd8 <_Min_Heap_Size+0x84d8>
    8cd4:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8cd8:	745f746c 	ldrbvc	r7, [pc], #-1132	; 8ce0 <_Min_Heap_Size+0x84e0>
    8cdc:	73657079 	cmnvc	r5, #121	; 0x79
    8ce0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8ce4:	745f0000 	ldrbvc	r0, [pc], #-0	; 8cec <_Min_Heap_Size+0x84ec>
    8ce8:	73657079 	cmnvc	r5, #121	; 0x79
    8cec:	0300682e 	movweq	r6, #2094	; 0x82e
    8cf0:	745f0000 	ldrbvc	r0, [pc], #-0	; 8cf8 <_Min_Heap_Size+0x84f8>
    8cf4:	76656d69 	strbtvc	r6, [r5], -r9, ror #26
    8cf8:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    8cfc:	00000300 	andeq	r0, r0, r0, lsl #6
    8d00:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    8d04:	65707365 	ldrbvs	r7, [r0, #-869]!	; 0xfffffc9b
    8d08:	00682e63 	rsbeq	r2, r8, r3, ror #28
    8d0c:	74000003 	strvc	r0, [r0], #-3
    8d10:	73657079 	cmnvc	r5, #121	; 0x79
    8d14:	0300682e 	movweq	r6, #2094	; 0x82e
    8d18:	74730000 	ldrbtvc	r0, [r3], #-0
    8d1c:	682e7461 	stmdavs	lr!, {r0, r5, r6, sl, ip, sp, lr}
    8d20:	00000300 	andeq	r0, r0, r0, lsl #6
    8d24:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    8d28:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8d2c:	65000003 	strvs	r0, [r0, #-3]
    8d30:	6f6e7272 	svcvs	0x006e7272
    8d34:	0300682e 	movweq	r6, #2094	; 0x82e
    8d38:	05000000 	streq	r0, [r0, #-0]
    8d3c:	02050001 	andeq	r0, r5, #1
    8d40:	00000000 	andeq	r0, r0, r0
    8d44:	13012c03 	movwne	r2, #7171	; 0x1c03
    8d48:	01000102 	tsteq	r0, r2, lsl #2
    8d4c:	00010501 	andeq	r0, r1, r1, lsl #10
    8d50:	00000205 	andeq	r0, r0, r5, lsl #4
    8d54:	30030000 	andcc	r0, r3, r0
    8d58:	13030501 	movwne	r0, #13569	; 0x3501
    8d5c:	13060105 	movwne	r0, #24837	; 0x6105
    8d60:	01000202 	tsteq	r0, r2, lsl #4
    8d64:	00010501 	andeq	r0, r1, r1, lsl #10
    8d68:	00000205 	andeq	r0, r0, r5, lsl #4
    8d6c:	35030000 	strcc	r0, [r3, #-0]
    8d70:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8d74:	13210603 			; <UNDEFINED> instruction: 0x13210603
    8d78:	06090513 			; <UNDEFINED> instruction: 0x06090513
    8d7c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8d80:	0601052f 	streq	r0, [r1], -pc, lsr #10
    8d84:	00030213 	andeq	r0, r3, r3, lsl r2
    8d88:	01050101 	tsteq	r5, r1, lsl #2
    8d8c:	00020500 	andeq	r0, r2, r0, lsl #10
    8d90:	03000000 	movweq	r0, #0
    8d94:	0106013d 	tsteq	r6, sp, lsr r1
    8d98:	21060305 	tstcs	r6, r5, lsl #6
    8d9c:	01040200 	mrseq	r0, R12_usr
    8da0:	000e054b 	andeq	r0, lr, fp, asr #10
    8da4:	01010402 	tsteq	r1, r2, lsl #8
    8da8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    8dac:	02010104 	andeq	r0, r1, #4, 2
    8db0:	01010001 	tsteq	r1, r1
    8db4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8db8:	00174c02 	andseq	r4, r7, r2, lsl #24
    8dbc:	00c30308 	sbceq	r0, r3, r8, lsl #6
    8dc0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8dc4:	133d0603 	teqne	sp, #3145728	; 0x300000
    8dc8:	06100514 			; <UNDEFINED> instruction: 0x06100514
    8dcc:	20030501 	andcs	r0, r3, r1, lsl #10
    8dd0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    8dd4:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
    8dd8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    8ddc:	01060304 	tsteq	r6, r4, lsl #6
    8de0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    8de4:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    8de8:	0402000c 	streq	r0, [r2], #-12
    8dec:	24052003 	strcs	r2, [r5], #-3
    8df0:	03040200 	movweq	r0, #16896	; 0x4200
    8df4:	2b052c06 	blcs	153e14 <_Min_Heap_Size+0x153614>
    8df8:	03040200 	movweq	r0, #16896	; 0x4200
    8dfc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8e00:	03040200 	movweq	r0, #16896	; 0x4200
    8e04:	00150522 	andseq	r0, r5, r2, lsr #10
    8e08:	06010402 	streq	r0, [r1], -r2, lsl #8
    8e0c:	0003051e 	andeq	r0, r3, lr, lsl r5
    8e10:	06010402 	streq	r0, [r1], -r2, lsl #8
    8e14:	05330601 	ldreq	r0, [r3, #-1537]!	; 0xfffff9ff
    8e18:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    8e1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8e20:	02050001 	andeq	r0, r5, #1
    8e24:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    8e28:	0100d003 	tsteq	r0, r3
    8e2c:	03050106 	movweq	r0, #20742	; 0x5106
    8e30:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
    8e34:	01061005 	tsteq	r6, r5
    8e38:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
    8e3c:	04020005 	streq	r0, [r2], #-5
    8e40:	00220603 	eoreq	r0, r2, r3, lsl #12
    8e44:	06030402 	streq	r0, [r3], -r2, lsl #8
    8e48:	04020001 	streq	r0, [r2], #-1
    8e4c:	24052e03 	strcs	r2, [r5], #-3587	; 0xfffff1fd
    8e50:	03040200 	movweq	r0, #16896	; 0x4200
    8e54:	2b052c06 	blcs	153e74 <_Min_Heap_Size+0x153674>
    8e58:	03040200 	movweq	r0, #16896	; 0x4200
    8e5c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    8e60:	01040200 	mrseq	r0, R12_usr
    8e64:	03052006 	movweq	r2, #20486	; 0x5006
    8e68:	01040200 	mrseq	r0, R12_usr
    8e6c:	32060106 	andcc	r0, r6, #-2147483647	; 0x80000001
    8e70:	13060105 	movwne	r0, #24837	; 0x6105
    8e74:	0101002e 	tsteq	r1, lr, lsr #32
    8e78:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8e7c:	00178802 	andseq	r8, r7, r2, lsl #16
    8e80:	00dc0308 	sbcseq	r0, ip, r8, lsl #6
    8e84:	13030501 	movwne	r0, #13569	; 0x3501
    8e88:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8e8c:	01022e13 	tsteq	r2, r3, lsl lr
    8e90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8e94:	02050001 	andeq	r0, r5, #1
    8e98:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
    8e9c:	0100e303 	tsteq	r0, r3, lsl #6
    8ea0:	13130305 	tstne	r3, #335544320	; 0x14000000
    8ea4:	01060f05 	tsteq	r6, r5, lsl #30
    8ea8:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    8eac:	13060105 	movwne	r0, #24837	; 0x6105
    8eb0:	00010220 	andeq	r0, r1, r0, lsr #4
    8eb4:	01050101 	tsteq	r5, r1, lsl #2
    8eb8:	98020500 	stmdals	r2, {r8, sl}
    8ebc:	03080017 	movweq	r0, #32791	; 0x8017
    8ec0:	050100ea 	streq	r0, [r1, #-234]	; 0xffffff16
    8ec4:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    8ec8:	20130601 	andscs	r0, r3, r1, lsl #12
    8ecc:	01000102 	tsteq	r0, r2, lsl #2
    8ed0:	00010501 	andeq	r0, r1, r1, lsl #10
    8ed4:	179c0205 	ldrne	r0, [ip, r5, lsl #4]
    8ed8:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
    8edc:	03050100 	movweq	r0, #20736	; 0x5100
    8ee0:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    8ee4:	13060105 	movwne	r0, #24837	; 0x6105
    8ee8:	00010220 	andeq	r0, r1, r0, lsr #4
    8eec:	01050101 	tsteq	r5, r1, lsl #2
    8ef0:	00020500 	andeq	r0, r2, r0, lsl #10
    8ef4:	03000000 	movweq	r0, #0
    8ef8:	060100f8 			; <UNDEFINED> instruction: 0x060100f8
    8efc:	06030501 	streq	r0, [r3], -r1, lsl #10
    8f00:	05141321 	ldreq	r1, [r4, #-801]	; 0xfffffcdf
    8f04:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    8f08:	01000202 	tsteq	r0, r2, lsl #4
    8f0c:	00010501 	andeq	r0, r1, r1, lsl #10
    8f10:	00000205 	andeq	r0, r0, r5, lsl #4
    8f14:	80030000 	andhi	r0, r3, r0
    8f18:	01060101 	tsteq	r6, r1, lsl #2
    8f1c:	21060305 	tstcs	r6, r5, lsl #6
    8f20:	06090513 			; <UNDEFINED> instruction: 0x06090513
    8f24:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8f28:	0601052f 	streq	r0, [r1], -pc, lsr #10
    8f2c:	00030213 	andeq	r0, r3, r3, lsl r2
    8f30:	01050101 	tsteq	r5, r1, lsl #2
    8f34:	00020500 	andeq	r0, r2, r0, lsl #10
    8f38:	03000000 	movweq	r0, #0
    8f3c:	06010187 	streq	r0, [r1], -r7, lsl #3
    8f40:	06030501 	streq	r0, [r3], -r1, lsl #10
    8f44:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    8f48:	03052e06 	movweq	r2, #24070	; 0x5e06
    8f4c:	01052f06 	tsteq	r5, r6, lsl #30
    8f50:	03021306 	movweq	r1, #8966	; 0x2306
    8f54:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8f58:	02050001 	andeq	r0, r5, #1
    8f5c:	00000000 	andeq	r0, r0, r0
    8f60:	01018e03 	tsteq	r1, r3, lsl #28
    8f64:	13130305 	tstne	r3, #335544320	; 0x14000000
    8f68:	13060105 	movwne	r0, #24837	; 0x6105
    8f6c:	0001022e 	andeq	r0, r1, lr, lsr #4
    8f70:	01050101 	tsteq	r5, r1, lsl #2
    8f74:	00020500 	andeq	r0, r2, r0, lsl #10
    8f78:	03000000 	movweq	r0, #0
    8f7c:	05010194 	streq	r0, [r1, #-404]	; 0xfffffe6c
    8f80:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    8f84:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    8f88:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    8f8c:	20130601 	andscs	r0, r3, r1, lsl #12
    8f90:	01000102 	tsteq	r0, r2, lsl #2
    8f94:	00010501 	andeq	r0, r1, r1, lsl #10
    8f98:	00000205 	andeq	r0, r0, r5, lsl #4
    8f9c:	9b030000 	blls	c8fa4 <_Min_Heap_Size+0xc87a4>
    8fa0:	01060101 	tsteq	r6, r1, lsl #2
    8fa4:	21060305 	tstcs	r6, r5, lsl #6
    8fa8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    8fac:	03052e06 	movweq	r2, #24070	; 0x5e06
    8fb0:	01052f06 	tsteq	r5, r6, lsl #30
    8fb4:	03021306 	movweq	r1, #8966	; 0x2306
    8fb8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8fbc:	02050001 	andeq	r0, r5, #1
    8fc0:	00000000 	andeq	r0, r0, r0
    8fc4:	0101a303 	tsteq	r1, r3, lsl #6
    8fc8:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
    8fcc:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    8fd0:	052f0603 	streq	r0, [pc, #-1539]!	; 89d5 <_Min_Heap_Size+0x81d5>
    8fd4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8fd8:	01010003 	tsteq	r1, r3
    8fdc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8fe0:	00000002 	andeq	r0, r0, r2
    8fe4:	01a90300 			; <UNDEFINED> instruction: 0x01a90300
    8fe8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8fec:	13210603 			; <UNDEFINED> instruction: 0x13210603
    8ff0:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    8ff4:	03052e06 	movweq	r2, #24070	; 0x5e06
    8ff8:	01052f06 	tsteq	r5, r6, lsl #30
    8ffc:	03021306 	movweq	r1, #8966	; 0x2306
    9000:	75010100 	strvc	r0, [r1, #-256]	; 0xffffff00
    9004:	03000005 	movweq	r0, #5
    9008:	00024e00 	andeq	r4, r2, r0, lsl #28
    900c:	fb010200 	blx	49816 <_Min_Heap_Size+0x49016>
    9010:	01000d0e 	tsteq	r0, lr, lsl #26
    9014:	00010101 	andeq	r0, r1, r1, lsl #2
    9018:	00010000 	andeq	r0, r1, r0
    901c:	2e2e0100 	sufcse	f0, f6, f0
    9020:	2f2e2e2f 	svccs	0x002e2e2f
    9024:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8f74 <_Min_Heap_Size+0x8774>
    9028:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    902c:	2f736c69 	svccs	0x00736c69
    9030:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    9034:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    9038:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    903c:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    9040:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    9044:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    9048:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    904c:	2f534953 	svccs	0x00534953
    9050:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    9054:	00656475 	rsbeq	r6, r5, r5, ror r4
    9058:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    905c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    9060:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    9064:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    9068:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    906c:	615c6d61 	cmpvs	ip, r1, ror #26
    9070:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    9074:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    9078:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    907c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    9080:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9084:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9088:	2e30312d 	rsfcssp	f3, f0, #5.0
    908c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    9090:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    9094:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    9098:	6f6e2d6d 	svcvs	0x006e2d6d
    909c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    90a0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    90a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    90a8:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    90ac:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    90b0:	00656e69 	rsbeq	r6, r5, r9, ror #28
    90b4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    90b8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    90bc:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    90c0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    90c4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    90c8:	615c6d61 	cmpvs	ip, r1, ror #26
    90cc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    90d0:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    90d4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    90d8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    90dc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    90e0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    90e4:	2e30312d 	rsfcssp	f3, f0, #5.0
    90e8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    90ec:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    90f0:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    90f4:	63675c62 	cmnvs	r7, #25088	; 0x6200
    90f8:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    90fc:	6f6e2d6d 	svcvs	0x006e2d6d
    9100:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9104:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    9108:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    910c:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    9110:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    9114:	63006564 	movwvs	r6, #1380	; 0x564
    9118:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    911c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    9120:	6f646978 	svcvs	0x00646978
    9124:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    9128:	6172676f 	cmnvs	r2, pc, ror #14
    912c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    9130:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    9134:	63675c63 	cmnvs	r7, #25344	; 0x6300
    9138:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    913c:	6f6e2d6d 	svcvs	0x006e2d6d
    9140:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9144:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    9148:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    914c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    9150:	30312e31 	eorscc	r2, r1, r1, lsr lr
    9154:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9158:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    915c:	61652d65 	cmnvs	r5, r5, ror #26
    9160:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    9164:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    9168:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    916c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    9170:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    9174:	2f2e2e2f 	svccs	0x002e2e2f
    9178:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    917c:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    9180:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    9184:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    9188:	2f706d75 	svccs	0x00706d75
    918c:	00636e69 	rsbeq	r6, r3, r9, ror #28
    9190:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    9194:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    9198:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    919c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    91a0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    91a4:	615c6d61 	cmpvs	ip, r1, ror #26
    91a8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    91ac:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    91b0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    91b4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    91b8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    91bc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    91c0:	2e30312d 	rsfcssp	f3, f0, #5.0
    91c4:	30322d33 	eorscc	r2, r2, r3, lsr sp
    91c8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    91cc:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    91d0:	6f6e2d6d 	svcvs	0x006e2d6d
    91d4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    91d8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    91dc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    91e0:	00656475 	rsbeq	r6, r5, r5, ror r4
    91e4:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    91e8:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    91ec:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    91f0:	00010063 	andeq	r0, r1, r3, rrx
    91f4:	736d6300 	cmnvc	sp, #0, 6
    91f8:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    91fc:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    9200:	00000200 	andeq	r0, r0, r0, lsl #4
    9204:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    9208:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    920c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    9210:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    9214:	00000300 	andeq	r0, r0, r0, lsl #6
    9218:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    921c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    9220:	00000400 	andeq	r0, r0, r0, lsl #8
    9224:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    9228:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    922c:	00050068 	andeq	r0, r5, r8, rrx
    9230:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    9234:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    9238:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    923c:	00060068 	andeq	r0, r6, r8, rrx
    9240:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    9244:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    9248:	003e6e69 	eorseq	r6, lr, r9, ror #28
    924c:	73000000 	movwvc	r0, #0
    9250:	6f696474 	svcvs	0x00696474
    9254:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    9258:	05000000 	streq	r0, [r0, #-0]
    925c:	02050038 	andeq	r0, r5, #56	; 0x38
    9260:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    9264:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
    9268:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    926c:	0e052106 	adfeqs	f2, f5, f6
    9270:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9274:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    9278:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
    927c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9280:	03040200 	movweq	r0, #16896	; 0x4200
    9284:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    9288:	03040200 	movweq	r0, #16896	; 0x4200
    928c:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    9290:	03040200 	movweq	r0, #16896	; 0x4200
    9294:	003d052e 	eorseq	r0, sp, lr, lsr #10
    9298:	06030402 	streq	r0, [r3], -r2, lsl #8
    929c:	003e0557 	eorseq	r0, lr, r7, asr r5
    92a0:	06030402 	streq	r0, [r3], -r2, lsl #8
    92a4:	00150501 	andseq	r0, r5, r1, lsl #10
    92a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    92ac:	00050520 	andeq	r0, r5, r0, lsr #10
    92b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    92b4:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    92b8:	2f010622 	svccs	0x00010622
    92bc:	2f060505 	svccs	0x00060505
    92c0:	13060105 	movwne	r0, #24837	; 0x6105
    92c4:	0002022e 	andeq	r0, r2, lr, lsr #4
    92c8:	33050101 	movwcc	r0, #20737	; 0x5101
    92cc:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    92d0:	03080017 	movweq	r0, #32791	; 0x8017
    92d4:	050100fe 	streq	r0, [r1, #-254]	; 0xffffff02
    92d8:	0e051605 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx5
    92dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    92e0:	32052f06 	andcc	r2, r5, #6, 30
    92e4:	0e050106 	adfeqs	f0, f5, f6
    92e8:	06050520 	streq	r0, [r5], -r0, lsr #10
    92ec:	0608052f 	streq	r0, [r8], -pc, lsr #10
    92f0:	00260501 	eoreq	r0, r6, r1, lsl #10
    92f4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    92f8:	3f060505 	svccc	0x00060505
    92fc:	01060805 	tsteq	r6, r5, lsl #16
    9300:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    9304:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    9308:	05203f0c 	streq	r3, [r0, #-3852]!	; 0xfffff0f4
    930c:	20201b10 	eorcs	r1, r0, r0, lsl fp
    9310:	20202320 	eorcs	r2, r0, r0, lsr #6
    9314:	02230105 	eoreq	r0, r3, #1073741825	; 0x40000001
    9318:	01010001 	tsteq	r1, r1
    931c:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
    9320:	00180402 	andseq	r0, r8, r2, lsl #8
    9324:	00e80308 	rsceq	r0, r8, r8, lsl #6
    9328:	21050501 	tstcs	r5, r1, lsl #10
    932c:	01061a05 	tsteq	r6, r5, lsl #20
    9330:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    9334:	052f0605 	streq	r0, [pc, #-1541]!	; 8d37 <_Min_Heap_Size+0x8537>
    9338:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    933c:	05052018 	streq	r2, [r5, #-24]	; 0xffffffe8
    9340:	684c2f06 	stmdavs	ip, {r1, r2, r8, r9, sl, fp, sp}^
    9344:	4c060105 	stfmis	f0, [r6], {5}
    9348:	01001302 	tsteq	r0, r2, lsl #6
    934c:	00730501 	rsbseq	r0, r3, r1, lsl #10
    9350:	18540205 	ldmdane	r4, {r0, r2, r9}^
    9354:	c8030800 	stmdagt	r3, {fp}
    9358:	01060101 	tsteq	r6, r1, lsl #2
    935c:	2f060505 	svccs	0x00060505
    9360:	08051313 	stmdaeq	r5, {r0, r1, r4, r8, r9, ip}
    9364:	1a050106 	bne	149784 <_Min_Heap_Size+0x148f84>
    9368:	01040200 	mrseq	r0, R12_usr
    936c:	06050558 			; <UNDEFINED> instruction: 0x06050558
    9370:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    9374:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    9378:	05052909 	streq	r2, [r5, #-2313]	; 0xfffff6f7
    937c:	02040200 	andeq	r0, r4, #0, 4
    9380:	02003606 	andeq	r3, r0, #6291456	; 0x600000
    9384:	00200104 	eoreq	r0, r0, r4, lsl #2
    9388:	06030402 	streq	r0, [r3], -r2, lsl #8
    938c:	06090520 	streq	r0, [r9], -r0, lsr #10
    9390:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
    9394:	06090501 	streq	r0, [r9], -r1, lsl #10
    9398:	06130522 	ldreq	r0, [r3], -r2, lsr #10
    939c:	200c0501 	andcs	r0, ip, r1, lsl #10
    93a0:	02002f05 	andeq	r2, r0, #5, 30
    93a4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    93a8:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    93ac:	09052001 	stmdbeq	r5, {r0, sp}
    93b0:	0c053206 	sfmeq	f3, 4, [r5], {6}
    93b4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    93b8:	05144006 	ldreq	r4, [r4, #-6]
    93bc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    93c0:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    93c4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    93c8:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    93cc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    93d0:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    93d4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    93d8:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    93dc:	17053206 	strne	r3, [r5, -r6, lsl #4]
    93e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    93e4:	0f052f06 	svceq	0x00052f06
    93e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    93ec:	0c052106 	stfeqs	f2, [r5], {6}
    93f0:	01050106 	tsteq	r5, r6, lsl #2
    93f4:	03100533 	tsteq	r0, #213909504	; 0xcc00000
    93f8:	3f3c3c5a 	svccc	0x003c3c5a
    93fc:	00060258 	andeq	r0, r6, r8, asr r2
    9400:	43050101 	movwmi	r0, #20737	; 0x5101
    9404:	d0020500 	andle	r0, r2, r0, lsl #10
    9408:	03080018 	movweq	r0, #32792	; 0x8018
    940c:	0601018d 	streq	r0, [r1], -sp, lsl #3
    9410:	06050501 	streq	r0, [r5], -r1, lsl #10
    9414:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    9418:	06180514 			; <UNDEFINED> instruction: 0x06180514
    941c:	20160501 	andscs	r0, r6, r1, lsl #10
    9420:	2f060505 	svccs	0x00060505
    9424:	01061805 	tsteq	r6, r5, lsl #16
    9428:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    942c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    9430:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9434:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    9438:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    943c:	16050106 	strne	r0, [r5], -r6, lsl #2
    9440:	06050520 	streq	r0, [r5], -r0, lsr #10
    9444:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    9448:	20160501 	andscs	r0, r6, r1, lsl #10
    944c:	21060505 	tstcs	r6, r5, lsl #10
    9450:	01061805 	tsteq	r6, r5, lsl #16
    9454:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    9458:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    945c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9460:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    9464:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    9468:	16050106 	strne	r0, [r5], -r6, lsl #2
    946c:	06050520 	streq	r0, [r5], -r0, lsr #10
    9470:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    9474:	20160501 	andscs	r0, r6, r1, lsl #10
    9478:	21060505 	tstcs	r6, r5, lsl #10
    947c:	01061805 	tsteq	r6, r5, lsl #16
    9480:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    9484:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    9488:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    948c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    9490:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    9494:	16050106 	strne	r0, [r5], -r6, lsl #2
    9498:	06050520 	streq	r0, [r5], -r0, lsr #10
    949c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    94a0:	20160501 	andscs	r0, r6, r1, lsl #10
    94a4:	21060505 	tstcs	r6, r5, lsl #10
    94a8:	01061805 	tsteq	r6, r5, lsl #16
    94ac:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    94b0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    94b4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    94b8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    94bc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    94c0:	16050106 	strne	r0, [r5], -r6, lsl #2
    94c4:	06050520 	streq	r0, [r5], -r0, lsr #10
    94c8:	062e0622 	strteq	r0, [lr], -r2, lsr #12
    94cc:	4b3d3d2f 	blmi	f58990 <_Min_Heap_Size+0xf58190>
    94d0:	4b4b4b4b 	blmi	12dc204 <_Min_Heap_Size+0x12dba04>
    94d4:	4b4b4b4b 	blmi	12dc208 <_Min_Heap_Size+0x12dba08>
    94d8:	4b4b4b4b 	blmi	12dc20c <_Min_Heap_Size+0x12dba0c>
    94dc:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
    94e0:	0d05134c 	stceq	3, cr1, [r5, #-304]	; 0xfffffed0
    94e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    94e8:	20068606 	andcs	r8, r6, r6, lsl #12
    94ec:	054b2f06 	strbeq	r2, [fp, #-3846]	; 0xfffff0fa
    94f0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    94f4:	09052005 	stmdbeq	r5, {r0, r2, sp}
    94f8:	03040200 	movweq	r0, #16896	; 0x4200
    94fc:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
    9500:	03040200 	movweq	r0, #16896	; 0x4200
    9504:	00290565 	eoreq	r0, r9, r5, ror #10
    9508:	06030402 	streq	r0, [r3], -r2, lsl #8
    950c:	00150501 	andseq	r0, r5, r1, lsl #10
    9510:	06010402 	streq	r0, [r1], -r2, lsl #8
    9514:	00050520 	andeq	r0, r5, r0, lsr #10
    9518:	06010402 	streq	r0, [r1], -r2, lsl #8
    951c:	00310601 	eorseq	r0, r1, r1, lsl #12
    9520:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    9524:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    9528:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    952c:	0402000b 	streq	r0, [r2], #-11
    9530:	34020101 	strcc	r0, [r2], #-257	; 0xfffffeff
    9534:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9538:	0205002e 	andeq	r0, r5, #46	; 0x2e
    953c:	00000000 	andeq	r0, r0, r0
    9540:	0101f403 	tsteq	r1, r3, lsl #8	; <UNPREDICTABLE>
    9544:	04130505 	ldreq	r0, [r3], #-1285	; 0xfffffafb
    9548:	031f0502 	tsteq	pc, #8388608	; 0x800000
    954c:	050106ed 	streq	r0, [r1, #-1773]	; 0xfffff913
    9550:	2f141403 	svccs	0x00141403
    9554:	01040106 	tsteq	r4, r6, lsl #2
    9558:	8f030105 	svchi	0x00030105
    955c:	01020179 	tsteq	r2, r9, ror r1
    9560:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9564:	0205002e 	andeq	r0, r5, #46	; 0x2e
    9568:	00000000 	andeq	r0, r0, r0
    956c:	0101f803 	tsteq	r1, r3, lsl #16	; <UNPREDICTABLE>
    9570:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    9574:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    9578:	01010004 	tsteq	r1, r4
    957c:	00000072 	andeq	r0, r0, r2, ror r0
    9580:	002c0003 	eoreq	r0, ip, r3
    9584:	01020000 	mrseq	r0, (UNDEF: 2)
    9588:	000d0efb 	strdeq	r0, [sp], -fp
    958c:	01010101 	tsteq	r1, r1, lsl #2
    9590:	01000000 	mrseq	r0, (UNDEF: 0)
    9594:	00010000 	andeq	r0, r1, r0
    9598:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    959c:	5f707574 	svcpl	0x00707574
    95a0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    95a4:	30346632 	eorscc	r6, r4, r2, lsr r6
    95a8:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    95ac:	00000073 	andeq	r0, r0, r3, ror r0
    95b0:	05000000 	streq	r0, [r0, #-0]
    95b4:	001a5c02 	andseq	r5, sl, r2, lsl #24
    95b8:	013c0308 	teqeq	ip, r8, lsl #6
    95bc:	21213131 			; <UNDEFINED> instruction: 0x21213131
    95c0:	21232121 			; <UNDEFINED> instruction: 0x21232121
    95c4:	21212321 			; <UNDEFINED> instruction: 0x21212321
    95c8:	21212123 			; <UNDEFINED> instruction: 0x21212123
    95cc:	21232123 			; <UNDEFINED> instruction: 0x21232123
    95d0:	032f3023 			; <UNDEFINED> instruction: 0x032f3023
    95d4:	2f342058 	svccs	0x00342058
    95d8:	2e0f032f 	cdpcs	3, 0, cr0, cr15, cr15, {1}
    95dc:	0002022f 	andeq	r0, r2, pc, lsr #4
    95e0:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
    95e4:	001aac02 	andseq	sl, sl, r2, lsl #24
    95e8:	00f10308 	rscseq	r0, r1, r8, lsl #6
    95ec:	00010201 	andeq	r0, r1, r1, lsl #4
    95f0:	007c0101 	rsbseq	r0, ip, r1, lsl #2
    95f4:	00030000 	andeq	r0, r3, r0
    95f8:	0000004d 	andeq	r0, r0, sp, asr #32
    95fc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    9600:	0101000d 	tsteq	r1, sp
    9604:	00000101 	andeq	r0, r0, r1, lsl #2
    9608:	00000100 	andeq	r0, r0, r0, lsl #2
    960c:	2f2e2e01 	svccs	0x002e2e01
    9610:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    9614:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    9618:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    961c:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    9620:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    9624:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    9628:	70632f70 	rsbvc	r2, r3, r0, ror pc
    962c:	6f632f75 	svcvs	0x00632f75
    9630:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    9634:	00346d2d 	eorseq	r6, r4, sp, lsr #26
    9638:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    963c:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    9640:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
    9644:	00000100 	andeq	r0, r0, r0, lsl #2
    9648:	02050000 	andeq	r0, r5, #0
    964c:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
    9650:	21011903 	tstcs	r1, r3, lsl #18
    9654:	2f222121 	svccs	0x00222121
    9658:	21302f21 	teqcs	r0, r1, lsr #30
    965c:	30222121 	eorcc	r2, r2, r1, lsr #2
    9660:	302f212f 	eorcc	r2, pc, pc, lsr #2
    9664:	68032121 	stmdavs	r3, {r0, r5, r8, sp}
    9668:	1503302e 	strne	r3, [r3, #-46]	; 0xffffffd2
    966c:	0002022e 	andeq	r0, r2, lr, lsr #4
    9670:	Address 0x00009670 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
       4:	4d006674 	stcmi	6, cr6, [r0, #-464]	; 0xfffffe30
  errno = ENOMEM;
       8:	53555f58 	cmppl	r5, #88, 30	; 0x160
}
       c:	31545241 	cmpcc	r4, r1, asr #4
      10:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	41007469 	tstmi	r0, r9, ror #8
      1c:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
}
      28:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      2c:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
      30:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    if (status != HAL_OK)
      34:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      uwTickFreq = prevTickFreq;
      38:	67006665 	strvs	r6, [r0, -r5, ror #12]
      3c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
      40:	304d0065 	subcc	r0, sp, r5, rrx
      44:	44005241 	strmi	r5, [r0], #-577	; 0xfffffdbf
      if (pllsource != 0)
      48:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
      4c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      54:	41006665 	tstmi	r0, r5, ror #12
      58:	43314250 	teqmi	r1, #80, 4
      5c:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
      64:	5f5f0072 	svcpl	0x005f0072
      68:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
      SystemCoreClock = pllvco/pllp;
      6c:	00745f38 	rsbseq	r5, r4, r8, lsr pc
      70:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
      break;
      74:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	695f706d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
      7c:	0074696e 	rsbseq	r6, r4, lr, ror #18
      80:	534c4c50 	movtpl	r4, #52304	; 0xcc50
      84:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
      88:	4c4c5000 	marmi	acc0, r5, ip
      8c:	4c50004d 	mrrcmi	0, 4, r0, r0, cr13	; <UNPREDICTABLE>
      90:	50004e4c 	andpl	r4, r0, ip, asr #28
      94:	00504c4c 	subseq	r4, r0, ip, asr #24
      98:	514c4c50 	cmppl	ip, r0, asr ip
      9c:	625f5f00 	subsvs	r5, pc, #0, 30
      a0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ffffff08 <_estack+0xdfffecd0>
      a8:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xfffff29b
      ac:	6f6c0074 	svcvs	0x006c0074
      b0:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      bc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      c4:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
      c8:	41480072 	hvcmi	32770	; 0x8002
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	41555f4c 	cmpmi	r5, ip, asr #30
      d0:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7954746e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
      dc:	79546570 	ldmdbvc	r4, {r4, r5, r6, r8, sl, sp, lr}^
      e0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    if (huart->hdmarx != NULL)
      e4:	534c0066 	movtpl	r0, #49254	; 0xc066
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	61745345 	cmnvs	r4, r5, asr #6
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	52006574 	andpl	r6, r0, #116, 10	; 0x1d000000
      f0:	4f5f4343 	svcmi	0x005f4343
    huart->TxXferCount = 0x00U;
      f4:	6e496373 	mcrvs	3, 2, r6, cr9, cr3, {3}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
    huart->gState  = HAL_UART_STATE_READY;
      fc:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    huart->RxState = HAL_UART_STATE_READY;
     100:	55504300 	ldrbpl	r4, [r0, #-768]	; 0xfffffd00
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	74004449 	strvc	r4, [r0], #-1097	; 0xfffffbb7
    HAL_UART_AbortCpltCallback(huart);
     108:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
     10c:	73657400 	cmnvc	r5, #0, 8
  uint32_t AbortCplt = 0x01U;
     110:	74003474 	strvc	r3, [r0], #-1140	; 0xfffffb8c
  if (AbortCplt == 0x01U)
     114:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
}
     118:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     11c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     120:	72545f54 	subsvc	r5, r4, #84, 30	; 0x150
     124:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	41007469 	tstmi	r0, r9, ror #8
     12c:	4c314248 	lfmmi	f4, 4, [r1], #-288	; 0xfffffee0
     130:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     134:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
     138:	6d615372 	stclvs	3, cr5, [r1, #-456]!	; 0xfffffe38
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	6e696c70 	mcrvs	12, 3, r6, cr9, cr0, {3}
     140:	78540067 	ldmdavc	r4, {r0, r1, r2, r5, r6}^
     144:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     14c:	53490074 	movtpl	r0, #36980	; 0x9074
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	52005241 	andpl	r5, r0, #268435460	; 0x10000004
     154:	4f5f4343 	svcmi	0x005f4343
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	6e496373 	mcrvs	3, 2, r6, cr9, cr3, {3}
     15c:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     164:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     168:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     16c:	48005254 	stmdami	r0, {r2, r4, r6, r9, ip, lr}
     170:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffff537 <_estack+0xdfffe2ff>
}
     174:	5f545241 	svcpl	0x00545241
     178:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     17c:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
     180:	545f5953 	ldrbpl	r5, [pc], #-2387	; 188 <_Min_Heap_Size-0x678>
}
     184:	58525f58 	ldmdapl	r2, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	50544700 	subspl	r4, r4, r0, lsl #14
     18c:	61420052 	qdaddvs	r0, r2, r2
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	61526475 	cmpvs	r2, r5, ror r4
     194:	58006574 	stmdapl	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
     198:	4d726566 	cfldr64mi	mvdx6, [r2, #-408]!	; 0xfffffe68
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	6c704331 	ldclvs	3, cr4, [r0], #-196	; 0xffffff3c
     1a0:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     1a8:	5750006b 	ldrbpl	r0, [r0, -fp, rrx]
     1ac:	79545f52 	ldmdbvc	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     1b4:	6d740066 	ldclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	67657270 			; <UNDEFINED> instruction: 0x67657270
     1bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     1c0:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     1c8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	43435200 	movtmi	r5, #12800	; 0x3200
     1d0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1d4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     1dc:	6c614872 	stclvs	8, cr4, [r1], #-456	; 0xfffffe38
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
     1e4:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     1e8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	5470006b 	ldrbtpl	r0, [r0], #-107	; 0xffffff95
     1f0:	66754278 			; <UNDEFINED> instruction: 0x66754278
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     1f8:	42504100 	subsmi	r4, r0, #0, 2
     1fc:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	65500052 	ldrbvs	r0, [r0, #-82]	; 0xffffffae
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     208:	00636e49 	rsbeq	r6, r3, r9, asr #28
     20c:	5349534c 	movtpl	r5, #37708	; 0x934c
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     214:	6d654d00 	stclvs	13, cr4, [r5, #-0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	73727542 	cmnvc	r2, #276824064	; 0x10800000
     21c:	5f5f0074 	svcpl	0x005f0074
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	5f6e6974 	svcpl	0x006e6974
     228:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
  tmp = hdma->Instance->FCR;
     22c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	414d445f 	cmpmi	sp, pc, asr r4
  tmp |= hdma->Init.FIFOMode;
     234:	4154535f 	cmpmi	r4, pc, asr r3
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	455f4554 	ldrbmi	r4, [pc, #-1364]	; fffffcec <_estack+0xdfffeab4>
    tmp |= hdma->Init.FIFOThreshold;
     23c:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	49534800 	ldmdbmi	r3, {fp, lr}^
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     248:	61660065 	cmnvs	r6, r5, rrx
  hdma->Instance->FCR = tmp;
     24c:	5f746c75 	svcpl	0x00746c75
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	6c616e75 	stclvs	14, cr6, [r1], #-468	; 0xfffffe2c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	5f6e6769 	svcpl	0x006e6769
     258:	67697274 			; <UNDEFINED> instruction: 0x67697274
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00726567 	rsbseq	r6, r2, r7, ror #10
  hdma->State = HAL_DMA_STATE_READY;
     260:	43495348 	movtmi	r5, #37704	; 0x9348
     264:	62696c61 	rsbvs	r6, r9, #24832	; 0x6100
  return HAL_OK;
     268:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     26c:	61566e6f 	cmpvs	r6, pc, ror #28
     270:	0065756c 	rsbeq	r7, r5, ip, ror #10
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6e69616d 	powvsez	f6, f1, #5.0
     278:	6f745300 	svcvs	0x00745300
     27c:	74694270 	strbtvc	r4, [r9], #-624	; 0xfffffd90
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	4c500073 	mrrcmi	0, 7, r0, r0, cr3	; <UNPREDICTABLE>
        hdma->State = HAL_DMA_STATE_READY;
     284:	4746434c 	strbmi	r4, [r6, -ip, asr #6]
        return HAL_ERROR; 
     288:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
    return HAL_ERROR;
     28c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     298:	00737365 	rsbseq	r7, r3, r5, ror #6
      tickstart = HAL_GetTick();
     29c:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	72615000 	rsbvc	r5, r1, #0
     2a4:	00746e65 	rsbseq	r6, r4, r5, ror #28
     2a8:	6b636f4c 	blvs	18dbfe0 <_Min_Heap_Size+0x18db7e0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     2b0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     2b4:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
          return HAL_TIMEOUT;
     2b8:	5f455441 	svcpl	0x00455441
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     2c0:	5f5f0059 	svcpl	0x005f0059
     2c4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    FlagStatus       pwrclkchanged = RESET;
     2c8:	745f3233 	ldrbvc	r3, [pc], #-563	; 2d0 <_Min_Heap_Size-0x530>
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	72694400 	rsbvc	r4, r9, #0, 8
     2d0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     2d4:	53006e6f 	movwpl	r6, #3695	; 0xe6f
      tickstart = HAL_GetTick();
     2d8:	545f4243 	ldrbpl	r4, [pc], #-579	; 2e0 <_Min_Heap_Size-0x520>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00657079 	rsbeq	r7, r5, r9, ror r0
     2e0:	616d6468 	cmnvs	sp, r8, ror #8
     2e4:	6c007872 	stcvs	8, cr7, [r0], {114}	; 0x72
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     2ec:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
          return HAL_TIMEOUT;
     2f0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	43435200 	movtmi	r5, #12800	; 0x3200
     2f8:	6b6c435f 	blvs	1b1107c <_Min_Heap_Size+0x1b1087c>
     2fc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     300:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     304:	48007463 	stmdami	r0, {r0, r1, r5, r6, sl, ip, sp, lr}
     308:	74534553 	ldrbvc	r4, [r3], #-1363	; 0xfffffaad
     30c:	00657461 	rsbeq	r7, r5, r1, ror #8
     310:	5f4c4148 	svcpl	0x004c4148
      tickstart = HAL_GetTick();
     314:	5f414d44 	svcpl	0x00414d44
     318:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     320:	00544553 	subseq	r4, r4, r3, asr r5
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
     328:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     32c:	414d445f 	cmpmi	sp, pc, asr r4
     330:	4154535f 	cmpmi	r4, pc, asr r3
          return HAL_TIMEOUT;
     334:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
    if(pwrclkchanged == SET)
     338:	59444145 	stmdbpl	r4, {r0, r2, r6, r8, lr}^
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     344:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	61756800 	cmnvs	r5, r0, lsl #16
     34c:	00317472 	eorseq	r7, r1, r2, ror r4
     350:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     354:	6e496d61 	cdpvs	13, 4, cr6, cr9, cr1, {3}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00786564 	rsbseq	r6, r8, r4, ror #10
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	5f4c4148 	svcpl	0x004c4148
     360:	56004b4f 	strpl	r4, [r0], -pc, asr #22
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	00524f54 	subseq	r4, r2, r4, asr pc
     368:	66587852 			; <UNDEFINED> instruction: 0x66587852
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	69537265 	ldmdbvs	r3, {r0, r2, r5, r6, r9, ip, sp, lr}^
     370:	5400657a 	strpl	r6, [r0], #-1402	; 0xfffffa86
     374:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	7a695372 	bvc	1a55148 <_Min_Heap_Size+0x1a54948>
     37c:	4c500065 	mrrcmi	0, 6, r0, r0, cr5	; <UNPREDICTABLE>
     380:	5332494c 	teqpl	r2, #76, 18	; 0x130000
     384:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	53434900 	movtpl	r4, #14592	; 0x3900
     38c:	41480052 	qdaddmi	r0, r2, r8
        __HAL_RCC_PLL_DISABLE();
     390:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     394:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
        tickstart = HAL_GetTick();
     398:	5f455441 	svcpl	0x00455441
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	524f4241 	subpl	r4, pc, #268435460	; 0x10000004
     3a0:	49410054 	stmdbmi	r1, {r2, r4, r6}^
     3a4:	00524352 	subseq	r4, r2, r2, asr r3
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
     3ac:	72724500 	rsbsvc	r4, r2, #0, 10
            return HAL_TIMEOUT;
     3b0:	6f43726f 	svcvs	0x0043726f
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	4f006564 	svcmi	0x00006564
     3b8:	6c696373 	stclvs	3, cr6, [r9], #-460	; 0xfffffe34
     3bc:	6f74616c 	svcvs	0x0074616c
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	70795472 	rsbsvc	r5, r9, r2, ror r4
     3c4:	4d4d0065 	stclmi	0, cr0, [sp, #-404]	; 0xfffffe6c
     3c8:	00524146 	subseq	r4, r2, r6, asr #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	446d654d 	strbtmi	r6, [sp], #-1357	; 0xfffffab3
     3d0:	41617461 	cmnmi	r1, r1, ror #8
     3d4:	6e67696c 	vnmulvs.f16	s13, s14, s25	; <UNPREDICTABLE>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     3dc:	41535500 	cmpmi	r3, r0, lsl #10
     3e0:	545f5452 	ldrbpl	r5, [pc], #-1106	; 3e8 <_Min_Heap_Size-0x418>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     3e8:	41006665 	tstmi	r0, r5, ror #12
     3ec:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     3f4:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
     3f8:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	2074726f 	rsbscs	r7, r4, pc, ror #4
     400:	00746e69 	rsbseq	r6, r4, r9, ror #28
     404:	43424841 	movtmi	r4, #10305	; 0x2841
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
     40c:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
     410:	72450072 	subvc	r0, r5, #114	; 0x72
     414:	5f726f72 	svcpl	0x00726f72
     418:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     41c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     420:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
     424:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
        __HAL_RCC_PLL_ENABLE();
     428:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     42c:	635c6e6f 	cmpvs	ip, #1776	; 0x6f0
        tickstart = HAL_GetTick();
     430:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	68746967 	ldmdavs	r4!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
     438:	715c6275 	cmpvc	ip, r5, ror r2
     43c:	2d756d65 	ldclcs	13, cr6, [r5, #-404]!	; 0xfffffe6c
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	756d6973 	strbvc	r6, [sp, #-2419]!	; 0xfffff68d
     444:	6f74616c 	svcvs	0x0074616c
            return HAL_TIMEOUT;
     448:	6f625c72 	svcvs	0x00625c72
  return HAL_OK;
     44c:	73647261 	cmnvc	r4, #268435462	; 0x10000006
        __HAL_RCC_PLL_DISABLE();
     450:	6d74735c 	ldclvs	3, cr7, [r4, #-368]!	; 0xfffffe90
     454:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
        tickstart = HAL_GetTick();
     458:	67723530 			; <UNDEFINED> instruction: 0x67723530
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	475c3674 			; <UNDEFINED> instruction: 0x475c3674
     460:	48004343 	stmdami	r0, {r0, r1, r6, r8, r9, lr}
     464:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0074696e 	rsbseq	r6, r4, lr, ror #18
     46c:	5f4c4148 	svcpl	0x004c4148
            return HAL_TIMEOUT;
     470:	5f414d44 	svcpl	0x00414d44
  return HAL_OK;
     474:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
        pll_config = RCC->PLLCFGR;
     47c:	5f005953 	svcpl	0x00005953
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	5f6f695f 	svcpl	0x006f695f
     484:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00726168 	rsbseq	r6, r2, r8, ror #2
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	657a5f76 	ldrbvs	r5, [sl, #-3958]!	; 0xfffff08a
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	745f6f72 	ldrbvc	r6, [pc], #-3954	; 4a0 <_Min_Heap_Size-0x360>
     49c:	67676972 			; <UNDEFINED> instruction: 0x67676972
     4a0:	5f007265 	svcpl	0x00007265
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     4a8:	61485f54 	cmpvs	r8, r4, asr pc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     4b0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00666544 	rsbeq	r6, r6, r4, asr #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
     4bc:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
  return HAL_OK;
     4c0:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
}
     4c4:	46430064 	strbmi	r0, [r3], -r4, rrx
        return HAL_ERROR;
     4c8:	48005253 	stmdami	r0, {r0, r1, r4, r6, r9, ip, lr}
        return HAL_ERROR;
     4cc:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
}
     4d0:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
        return HAL_ERROR;
     4d4:	48410044 	stmdami	r1, {r2, r6}^
          return HAL_ERROR;
     4d8:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     4dc:	6e490052 	mcrvs	0, 2, r0, cr9, cr2, {2}
     4e0:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
     4e4:	58006563 	stmdapl	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
     4e8:	45726566 	ldrbmi	r6, [r2, #-1382]!	; 0xfffffa9a
     4ec:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
     4f0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     4f4:	6b636162 	blvs	18d8a84 <_Min_Heap_Size+0x18d8284>
     4f8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     4fc:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     500:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     504:	5f455441 	svcpl	0x00455441
     508:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     50c:	0058545f 	subseq	r5, r8, pc, asr r4
     510:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     514:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     518:	64680052 	strbtvs	r0, [r8], #-82	; 0xffffffae
     51c:	7874616d 	ldmdavc	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     520:	43435200 	movtmi	r5, #12800	; 0x3200
     524:	6b6c435f 	blvs	1b112a8 <_Min_Heap_Size+0x1b10aa8>
     528:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     52c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     530:	00666544 	rsbeq	r6, r6, r4, asr #10
     534:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
     538:	41007974 	tstmi	r0, r4, ror r9
     53c:	52314250 	eorspl	r4, r1, #80, 4
     540:	00525453 	subseq	r5, r2, r3, asr r4
     544:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     548:	50430032 	subpl	r0, r3, r2, lsr r0
     54c:	00524341 	subseq	r4, r2, r1, asr #6
     550:	69645f5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     554:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     558:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     55c:	45520071 	ldrbmi	r0, [r2, #-113]	; 0xffffff8f
     560:	56524553 			; <UNDEFINED> instruction: 0x56524553
     564:	00304445 	eorseq	r4, r0, r5, asr #8
     568:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     56c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     570:	45520031 	ldrbmi	r0, [r2, #-49]	; 0xffffffcf
     574:	56524553 			; <UNDEFINED> instruction: 0x56524553
     578:	00324445 	eorseq	r4, r2, r5, asr #8
     57c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     580:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     584:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
     588:	56524553 			; <UNDEFINED> instruction: 0x56524553
     58c:	00344445 	eorseq	r4, r4, r5, asr #8
     590:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     594:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     598:	45520035 	ldrbmi	r0, [r2, #-53]	; 0xffffffcb
     59c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     5a0:	00364445 	eorseq	r4, r6, r5, asr #8
     5a4:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     5a8:	6148314d 	cmpvs	r8, sp, asr #2
     5ac:	7043666c 	subvc	r6, r3, ip, ror #12
     5b0:	6143746c 	cmpvs	r3, ip, ror #8
     5b4:	61626c6c 	cmnvs	r2, ip, ror #24
     5b8:	43006b63 	movwmi	r6, #2915	; 0xb63
     5bc:	6e6e6168 	powvsez	f6, f6, #0.0
     5c0:	75006c65 	strvc	r6, [r0, #-3173]	; 0xfffff39b
     5c4:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     5c8:	2064656e 	rsbcs	r6, r4, lr, ror #10
     5cc:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     5d0:	43485300 	movtmi	r5, #33536	; 0x8300
     5d4:	47005253 	smlsdmi	r0, r3, r2, r5
     5d8:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
     5dc:	31203731 			; <UNDEFINED> instruction: 0x31203731
     5e0:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
     5e4:	30322031 	eorscc	r2, r2, r1, lsr r0
     5e8:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
     5ec:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
     5f0:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
     5f4:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
     5f8:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     5fc:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     600:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
     604:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
     608:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     60c:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     610:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     614:	663d7570 			; <UNDEFINED> instruction: 0x663d7570
     618:	2d347670 	ldccs	6, cr7, [r4, #-448]!	; 0xfffffe40
     61c:	642d7073 	strtvs	r7, [sp], #-115	; 0xffffff8d
     620:	2d203631 	stccs	6, cr3, [r0, #-196]!	; 0xffffff3c
     624:	6f6c666d 	svcvs	0x006c666d
     628:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
     62c:	683d6962 	ldmdavs	sp!, {r1, r5, r6, r8, fp, sp, lr}
     630:	20647261 	rsbcs	r7, r4, r1, ror #4
     634:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
     638:	613d6863 	teqvs	sp, r3, ror #16
     63c:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
     640:	2b6d2d65 	blcs	1b4bbdc <_Min_Heap_Size+0x1b4b3dc>
     644:	2d207066 	stccs	0, cr7, [r0, #-408]!	; 0xfffffe68
     648:	672d2067 	strvs	r2, [sp, -r7, rrx]!
     64c:	72617764 	rsbvc	r7, r1, #100, 14	; 0x1900000
     650:	20322d66 	eorscs	r2, r2, r6, ror #26
     654:	20674f2d 	rsbcs	r4, r7, sp, lsr #30
     658:	6164662d 	cmnvs	r4, sp, lsr #12
     65c:	732d6174 			; <UNDEFINED> instruction: 0x732d6174
     660:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     664:	20736e6f 	rsbscs	r6, r3, pc, ror #28
     668:	7566662d 	strbvc	r6, [r6, #-1581]!	; 0xfffff9d3
     66c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     670:	732d6e6f 			; <UNDEFINED> instruction: 0x732d6e6f
     674:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     678:	00736e6f 	rsbseq	r6, r3, pc, ror #28
     67c:	5f4c4148 	svcpl	0x004c4148
     680:	5f414d44 	svcpl	0x00414d44
     684:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     688:	70795465 	rsbsvc	r5, r9, r5, ror #8
     68c:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     690:	6c696600 	stclvs	6, cr6, [r9], #-0
     694:	48410065 	stmdami	r1, {r0, r2, r5, r6}^
     698:	504c3342 	subpl	r3, ip, r2, asr #6
     69c:	00524e45 	subseq	r4, r2, r5, asr #28
     6a0:	534c4c50 	movtpl	r4, #52304	; 0xcc50
     6a4:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     6a8:	5f5f0065 	svcpl	0x005f0065
     6ac:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     6b0:	48005f5f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}
     6b4:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffa7b <_estack+0xdfffe843>
     6b8:	5f545241 	svcpl	0x00545241
     6bc:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     6c0:	52455f45 	subpl	r5, r5, #276	; 0x114
     6c4:	00524f52 	subseq	r4, r2, r2, asr pc
     6c8:	32425041 	subcc	r5, r2, #65	; 0x41
     6cc:	00524e45 	subseq	r4, r2, r5, asr #28
     6d0:	33424841 	movtcc	r4, #10305	; 0x2841
     6d4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     6d8:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 6e0 <_Min_Heap_Size-0x120>
     6dc:	485f414d 	ldmdami	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
     6e0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     6e4:	70795465 	rsbsvc	r5, r9, r5, ror #8
     6e8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     6ec:	46494600 	strbmi	r4, [r9], -r0, lsl #12
     6f0:	646f4d4f 	strbtvs	r4, [pc], #-3407	; 6f8 <_Min_Heap_Size-0x108>
     6f4:	6f570065 	svcvs	0x00570065
     6f8:	654c6472 	strbvs	r6, [ip, #-1138]	; 0xfffffb8e
     6fc:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     700:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     704:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     708:	4100524f 	tstmi	r0, pc, asr #4
     70c:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     710:	2e00524e 	cdpcs	2, 0, cr5, cr0, cr14, {2}
     714:	6f432f2e 	svcvs	0x00432f2e
     718:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     71c:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 55c <_Min_Heap_Size-0x2a4>
     720:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     724:	6f6c0063 	svcvs	0x006c0063
     728:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
     72c:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
     730:	49460065 	stmdbmi	r6, {r0, r2, r5, r6}^
     734:	68544f46 	ldmdavs	r4, {r1, r2, r6, r8, r9, sl, fp, lr}^
     738:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     73c:	00646c6f 	rsbeq	r6, r4, pc, ror #24
     740:	5f4c4148 	svcpl	0x004c4148
     744:	5f434352 	svcpl	0x00434352
     748:	4363734f 	cmnmi	r3, #1006632961	; 0x3c000001
     74c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     750:	41480067 	cmpmi	r8, r7, rrx
     754:	65445f4c 	strbvs	r5, [r4, #-3916]	; 0xfffff0b4
     758:	0079616c 	rsbseq	r6, r9, ip, ror #2
     75c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     760:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
     764:	4800745f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     768:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffb2f <_estack+0xdfffe8f7>
     76c:	5f545241 	svcpl	0x00545241
     770:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     774:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
     778:	525f5953 	subspl	r5, pc, #1359872	; 0x14c000
     77c:	48410058 	stmdami	r1, {r3, r4, r6}^
     780:	53523242 	cmppl	r2, #536870916	; 0x20000004
     784:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     788:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     78c:	65500063 	ldrbvs	r0, [r0, #-99]	; 0xffffff9d
     790:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     794:	73727542 	cmnvc	r2, #276824064	; 0x10800000
     798:	50410074 	subpl	r0, r1, r4, ror r0
     79c:	4c433242 	sfmmi	f3, 2, [r3], {66}	; 0x42
     7a0:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
     7a4:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
     7a8:	73795300 	cmnvc	r9, #0, 6
     7ac:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
     7b0:	6b636f6c 	blvs	18dc568 <_Min_Heap_Size+0x18dbd68>
     7b4:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     7b8:	00676966 	rsbeq	r6, r7, r6, ror #18
     7bc:	5254444e 	subspl	r4, r4, #1308622848	; 0x4e000000
     7c0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     7c4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     7c8:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     7cc:	5f455441 	svcpl	0x00455441
     7d0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     7d4:	46410054 			; <UNDEFINED> instruction: 0x46410054
     7d8:	44005253 	strmi	r5, [r0], #-595	; 0xfffffdad
     7dc:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     7e0:	61657274 	smcvs	22308	; 0x5724
     7e4:	79545f6d 	ldmdbvc	r4, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     7e8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     7ec:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     7f0:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     7f4:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     7f8:	2074726f 	rsbscs	r7, r4, pc, ror #4
     7fc:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     800:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     804:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     808:	73657400 	cmnvc	r5, #0, 8
     80c:	74003074 	strvc	r3, [r0], #-116	; 0xffffff8c
     810:	31747365 	cmncc	r4, r5, ror #6
     814:	41314d00 	teqmi	r1, r0, lsl #26
     818:	65500052 	ldrbvs	r0, [r0, #-82]	; 0xffffffae
     81c:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     820:	61746144 	cmnvs	r4, r4, asr #2
     824:	67696c41 	strbvs	r6, [r9, -r1, asr #24]!
     828:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
     82c:	41550074 	cmpmi	r5, r4, ror r0
     830:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     834:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     838:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     83c:	53006665 	movwpl	r6, #1637	; 0x665
     840:	52474353 	subpl	r4, r7, #1275068417	; 0x4c000001
     844:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     848:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     84c:	78525f54 	ldmdavc	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     850:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     854:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     858:	00666544 	rsbeq	r6, r6, r4, asr #10
     85c:	5f4c4148 	svcpl	0x004c4148
     860:	5f434352 	svcpl	0x00434352
     864:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     868:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
     86c:	00676966 	rsbeq	r6, r7, r6, ror #18
     870:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
     874:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     878:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     87c:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     880:	5f455441 	svcpl	0x00455441
     884:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     888:	0054554f 	subseq	r5, r4, pc, asr #10
     88c:	6c467748 	mcrrvs	7, 4, r7, r6, cr8
     890:	7443776f 	strbvc	r7, [r3], #-1903	; 0xfffff891
     894:	4148006c 	cmpmi	r8, ip, rrx
     898:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     89c:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     8a0:	5f455441 	svcpl	0x00455441
     8a4:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     8a8:	0054554f 	subseq	r5, r4, pc, asr #10
     8ac:	42785270 	rsbsmi	r5, r8, #112, 4
     8b0:	50666675 	rsbpl	r6, r6, r5, ror r6
     8b4:	52007274 	andpl	r7, r0, #116, 4	; 0x40000007
     8b8:	505f4343 	subspl	r4, pc, r3, asr #6
     8bc:	6e494c4c 	cdpvs	12, 4, cr4, cr9, cr12, {2}
     8c0:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     8c4:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     8c8:	6c430066 	mcrrvs	0, 6, r0, r3, cr6
     8cc:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
     8d0:	00657079 	rsbeq	r7, r5, r9, ror r0
     8d4:	31424841 	cmpcc	r2, r1, asr #16
     8d8:	00524e45 	subseq	r4, r2, r5, asr #28
     8dc:	66587852 			; <UNDEFINED> instruction: 0x66587852
     8e0:	6f437265 	svcvs	0x00437265
     8e4:	00746e75 	rsbseq	r6, r4, r5, ror lr
     8e8:	5f4c4148 	svcpl	0x004c4148
     8ec:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     8f0:	4154535f 	cmpmi	r4, pc, asr r3
     8f4:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     8f8:	00595355 	subseq	r5, r9, r5, asr r3
     8fc:	5f4c4148 	svcpl	0x004c4148
     900:	4f4c4e55 	svcmi	0x004c4e55
     904:	44454b43 	strbmi	r4, [r5], #-2883	; 0xfffff4bd
     908:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     90c:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     910:	78520059 	ldmdavc	r2, {r0, r3, r4, r6}^
     914:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     918:	46480065 	strbmi	r0, [r8], -r5, rrx
     91c:	52005253 	andpl	r5, r0, #805306373	; 0x30000005
     920:	70656365 	rsbvc	r6, r5, r5, ror #6
     924:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     928:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     92c:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     930:	6f624172 	svcvs	0x00624172
     934:	61437472 	hvcvs	14146	; 0x3742
     938:	61626c6c 	cmnvs	r2, ip, ror #24
     93c:	58006b63 	stmdapl	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     940:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     944:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
     948:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     94c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     950:	475f584d 	ldrbmi	r5, [pc, -sp, asr #16]
     954:	5f4f4950 	svcpl	0x004f4950
     958:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     95c:	53595300 	cmppl	r9, #0, 6
     960:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     964:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     968:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     96c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     970:	72532f65 	subsvc	r2, r3, #404	; 0x194
     974:	70672f63 	rsbvc	r2, r7, r3, ror #30
     978:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
     97c:	65705300 	ldrbvs	r5, [r0, #-768]!	; 0xfffffd00
     980:	52006465 	andpl	r6, r0, #1694498816	; 0x65000000
     984:	575f4354 			; <UNDEFINED> instruction: 0x575f4354
     988:	5f50554b 	svcpl	0x0050554b
     98c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     990:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     994:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     998:	006e5152 	rsbeq	r5, lr, r2, asr r1
     99c:	31414d44 	cmpcc	r1, r4, asr #26
     9a0:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     9a4:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
     9a8:	5152495f 	cmppl	r2, pc, asr r9
     9ac:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     9b0:	555f384d 	ldrbpl	r3, [pc, #-2125]	; 16b <_Min_Heap_Size-0x695>
     9b4:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
     9b8:	5f33314d 	svcpl	0x0033314d
     9bc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9c0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     9c4:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     9c8:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
     9cc:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
     9d0:	414d4400 	cmpmi	sp, r0, lsl #8
     9d4:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     9d8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     9dc:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     9e0:	53006e51 	movwpl	r6, #3665	; 0xe51
     9e4:	5f334950 	svcpl	0x00334950
     9e8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     9ec:	414c4600 	cmpmi	ip, r0, lsl #12
     9f0:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
     9f4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     9f8:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
     9fc:	5152495f 	cmppl	r2, pc, asr r9
     a00:	4143006e 	cmpmi	r3, lr, rrx
     a04:	525f324e 	subspl	r3, pc, #-536870908	; 0xe0000004
     a08:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     a0c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a10:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     a14:	495f3654 	ldmdbmi	pc, {r2, r4, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     a18:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a1c:	5f4c4148 	svcpl	0x004c4148
     a20:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     a24:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
     a28:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     a2c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     a30:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     a34:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     a38:	5f384d49 	svcpl	0x00384d49
     a3c:	5f4b5242 	svcpl	0x004b5242
     a40:	314d4954 	cmpcc	sp, r4, asr r9
     a44:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     a48:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     a4c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffe13 <_estack+0xdfffebdb>
     a50:	5f545241 	svcpl	0x00545241
     a54:	4470734d 	ldrbtmi	r7, [r0], #-845	; 0xfffffcb3
     a58:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
     a5c:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     a60:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     a64:	61657274 	smcvs	22308	; 0x5724
     a68:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     a6c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a70:	314d4954 	cmpcc	sp, r4, asr r9
     a74:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
     a78:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; 904 <_Min_Heap_Size+0x104>
     a7c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     a80:	495f3131 	ldmdbmi	pc, {r0, r4, r5, r8, ip, sp}^	; <UNPREDICTABLE>
     a84:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a88:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     a8c:	5f6b6369 	svcpl	0x006b6369
     a90:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     a94:	41535500 	cmpmi	r3, r0, lsl #10
     a98:	5f335452 	svcpl	0x00335452
     a9c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     aa0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     aa4:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     aa8:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     aac:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     ab0:	4d440066 	stclmi	0, cr0, [r4, #-408]	; 0xfffffe68
     ab4:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     ab8:	61657274 	smcvs	22308	; 0x5724
     abc:	495f326d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     ac0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ac4:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     ac8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     acc:	346d6165 	strbtcc	r6, [sp], #-357	; 0xfffffe9b
     ad0:	5152495f 	cmppl	r2, pc, asr r9
     ad4:	4148006e 	cmpmi	r8, lr, rrx
     ad8:	50475f4c 	subpl	r5, r7, ip, asr #30
     adc:	445f4f49 	ldrbmi	r4, [pc], #-3913	; ae4 <_Min_Heap_Size+0x2e4>
     ae0:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
     ae4:	32490074 	subcc	r0, r9, #116	; 0x74
     ae8:	455f3143 	ldrbmi	r3, [pc, #-323]	; 9ad <_Min_Heap_Size+0x1ad>
     aec:	52495f52 	subpl	r5, r9, #328	; 0x148
     af0:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     af4:	48747261 	ldmdami	r4!, {r0, r5, r6, r9, ip, sp, lr}^
     af8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     afc:	41430065 	cmpmi	r3, r5, rrx
     b00:	535f324e 	cmppl	pc, #-536870908	; 0xe0000004
     b04:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
     b08:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b0c:	354d4954 	strbcc	r4, [sp, #-2388]	; 0xfffff6ac
     b10:	5152495f 	cmppl	r2, pc, asr r9
     b14:	7355006e 	cmpvc	r5, #110	; 0x6e
     b18:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     b1c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     b20:	5152495f 	cmppl	r2, pc, asr r9
     b24:	4148006e 	cmpmi	r8, lr, rrx
     b28:	50475f4c 	subpl	r5, r7, ip, asr #30
     b2c:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     b30:	0074696e 	rsbseq	r6, r4, lr, ror #18
     b34:	314e4143 	cmpcc	lr, r3, asr #2
     b38:	3058525f 	subscc	r5, r8, pc, asr r2
     b3c:	5152495f 	cmppl	r2, pc, asr r9
     b40:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     b44:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     b48:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b4c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     b50:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     b54:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b58:	5f4c4148 	svcpl	0x004c4148
     b5c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     b60:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     b64:	32490074 	subcc	r0, r9, #116	; 0x74
     b68:	455f3143 	ldrbmi	r3, [pc, #-323]	; a2d <_Min_Heap_Size+0x22d>
     b6c:	52495f56 	subpl	r5, r9, #344	; 0x158
     b70:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     b74:	5f314d49 	svcpl	0x00314d49
     b78:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     b7c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b80:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     b84:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     b88:	43006e51 	movwmi	r6, #3665	; 0xe51
     b8c:	5f314e41 	svcpl	0x00314e41
     b90:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     b94:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b98:	31414d44 	cmpcc	r1, r4, asr #26
     b9c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     ba0:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
     ba4:	5152495f 	cmppl	r2, pc, asr r9
     ba8:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     bac:	545f384d 	ldrbpl	r3, [pc], #-2125	; bb4 <_Min_Heap_Size+0x3b4>
     bb0:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     bb4:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; bbc <_Min_Heap_Size+0x3bc>
     bb8:	34314d49 	ldrtcc	r4, [r1], #-3401	; 0xfffff2b7
     bbc:	5152495f 	cmppl	r2, pc, asr r9
     bc0:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     bc4:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     bc8:	61657274 	smcvs	22308	; 0x5724
     bcc:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     bd0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     bd4:	5f47544f 	svcpl	0x0047544f
     bd8:	495f5346 	ldmdbmi	pc, {r1, r2, r6, r8, r9, ip, lr}^	; <UNPREDICTABLE>
     bdc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     be0:	4d6e6f4e 	stclmi	15, cr6, [lr, #-312]!	; 0xfffffec8
     be4:	616b7361 	cmnvs	fp, r1, ror #6
     be8:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     bec:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     bf0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     bf4:	47445757 	smlsldmi	r5, r4, r7, r7
     bf8:	5152495f 	cmppl	r2, pc, asr r9
     bfc:	544f006e 	strbpl	r0, [pc], #-110	; c04 <_Min_Heap_Size+0x404>
     c00:	53485f47 	movtpl	r5, #36679	; 0x8f47
     c04:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     c08:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     c0c:	4d006e51 	stcmi	14, cr6, [r0, #-324]	; 0xfffffebc
     c10:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
     c14:	6e614d79 	mcrvs	13, 3, r4, cr1, cr9, {3}
     c18:	6d656761 	stclvs	7, cr6, [r5, #-388]!	; 0xfffffe7c
     c1c:	5f746e65 	svcpl	0x00746e65
     c20:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c24:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
     c28:	54535f50 	ldrbpl	r5, [r3], #-3920	; 0xfffff0b0
     c2c:	5f504d41 	svcpl	0x00504d41
     c30:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c34:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     c38:	43535f31 	cmpmi	r3, #49, 30	; 0xc4
     c3c:	52495f45 	subpl	r5, r9, #276	; 0x114
     c40:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     c44:	5f32414d 	svcpl	0x0032414d
     c48:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     c4c:	5f306d61 	svcpl	0x00306d61
     c50:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c54:	4b434c00 	blmi	10d3c5c <_Min_Heap_Size+0x10d345c>
     c58:	32490052 	subcc	r0, r9, #82	; 0x52
     c5c:	455f3243 	ldrbmi	r3, [pc, #-579]	; a21 <_Min_Heap_Size+0x221>
     c60:	52495f52 	subpl	r5, r9, #328	; 0x148
     c64:	4f006e51 	svcmi	0x00006e51
     c68:	45455053 	strbmi	r5, [r5, #-83]	; 0xffffffad
     c6c:	42005244 	andmi	r5, r0, #68, 4	; 0x40000004
     c70:	61467375 	hvcvs	26421	; 0x6735
     c74:	5f746c75 	svcpl	0x00746c75
     c78:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c7c:	52415500 	subpl	r5, r1, #0, 10
     c80:	495f3554 	ldmdbmi	pc, {r2, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     c84:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c88:	314d4954 	cmpcc	sp, r4, asr r9
     c8c:	4b52425f 	blmi	1491610 <_Min_Heap_Size+0x1490e10>
     c90:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     c94:	52495f39 	subpl	r5, r9, #57, 30	; 0xe4
     c98:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     c9c:	5f374d49 	svcpl	0x00374d49
     ca0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ca4:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     ca8:	5f53485f 	svcpl	0x0053485f
     cac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     cb0:	50555000 	subspl	r5, r5, r0
     cb4:	53005244 	movwpl	r5, #580	; 0x244
     cb8:	5f314950 	svcpl	0x00314950
     cbc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     cc0:	43565300 	cmpmi	r6, #0, 6
     cc4:	5f6c6c61 	svcpl	0x006c6c61
     cc8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ccc:	55504600 	ldrbpl	r4, [r0, #-1536]	; 0xfffffa00
     cd0:	5152495f 	cmppl	r2, pc, asr r9
     cd4:	4155006e 	cmpmi	r5, lr, rrx
     cd8:	5f345452 	svcpl	0x00345452
     cdc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ce0:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     ce4:	616e7265 	cmnvs	lr, r5, ror #4
     ce8:	4f006574 	svcmi	0x00006574
     cec:	465f4754 			; <UNDEFINED> instruction: 0x465f4754
     cf0:	4b575f53 	blmi	15d8a44 <_Min_Heap_Size+0x15d8244>
     cf4:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     cf8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     cfc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     d00:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     d04:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     d08:	5f364d49 	svcpl	0x00364d49
     d0c:	5f434144 	svcpl	0x00434144
     d10:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d14:	43324900 	teqmi	r2, #0, 18
     d18:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
     d1c:	5152495f 	cmppl	r2, pc, asr r9
     d20:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     d24:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     d28:	61657274 	smcvs	22308	; 0x5724
     d2c:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     d30:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d34:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     d38:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     d3c:	336d6165 	cmncc	sp, #1073741849	; 0x40000019
     d40:	5152495f 	cmppl	r2, pc, asr r9
     d44:	4143006e 	cmpmi	r3, lr, rrx
     d48:	545f324e 	ldrbpl	r3, [pc], #-590	; d50 <_Min_Heap_Size+0x550>
     d4c:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     d50:	50006e51 	andpl	r6, r0, r1, asr lr
     d54:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     d58:	31414d44 	cmpcc	r1, r4, asr #26
     d5c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     d60:	306d6165 	rsbcc	r6, sp, r5, ror #2
     d64:	5152495f 	cmppl	r2, pc, asr r9
     d68:	5452006e 	ldrbpl	r0, [r2], #-110	; 0xffffff92
     d6c:	6c415f43 	mcrrvs	15, 4, r5, r1, cr3
     d70:	5f6d7261 	svcpl	0x006d7261
     d74:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d78:	43324900 	teqmi	r2, #0, 18
     d7c:	52455f33 	subpl	r5, r5, #51, 30	; 0xcc
     d80:	5152495f 	cmppl	r2, pc, asr r9
     d84:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     d88:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     d8c:	5f30315f 	svcpl	0x0030315f
     d90:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d94:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     d98:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     d9c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     da0:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     da4:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     da8:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     dac:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
     db0:	5f434956 	svcpl	0x00434956
     db4:	50746553 	rsbspl	r6, r4, r3, asr r5
     db8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     dbc:	00797469 	rsbseq	r7, r9, r9, ror #8
     dc0:	5f474e52 	svcpl	0x00474e52
     dc4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dc8:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     dcc:	58525f32 	ldmdapl	r2, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     dd0:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     dd4:	41006e51 	tstmi	r0, r1, asr lr
     dd8:	495f4344 	ldmdbmi	pc, {r2, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     ddc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     de0:	5f445650 	svcpl	0x00445650
     de4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     de8:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
     dec:	00524550 	subseq	r4, r2, r0, asr r5
     df0:	434d5346 	movtmi	r5, #54086	; 0xd346
     df4:	5152495f 	cmppl	r2, pc, asr r9
     df8:	4148006e 	cmpmi	r8, lr, rrx
     dfc:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
     e00:	455f4349 	ldrbmi	r4, [pc, #-841]	; abf <_Min_Heap_Size+0x2bf>
     e04:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     e08:	51524965 	cmppl	r2, r5, ror #18
     e0c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     e10:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
     e14:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e18:	31414d44 	cmpcc	r1, r4, asr #26
     e1c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     e20:	346d6165 	strbtcc	r6, [sp], #-357	; 0xfffffe9b
     e24:	5152495f 	cmppl	r2, pc, asr r9
     e28:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     e2c:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     e30:	61657274 	smcvs	22308	; 0x5724
     e34:	495f366d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     e38:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e3c:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     e40:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     e44:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
     e48:	5152495f 	cmppl	r2, pc, asr r9
     e4c:	3249006e 	subcc	r0, r9, #110	; 0x6e
     e50:	455f3343 	ldrbmi	r3, [pc, #-835]	; b15 <_Min_Heap_Size+0x315>
     e54:	52495f56 	subpl	r5, r9, #344	; 0x158
     e58:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     e5c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
     e60:	5f434956 	svcpl	0x00434956
     e64:	61736944 	cmnvs	r3, r4, asr #18
     e68:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     e6c:	52005152 	andpl	r5, r0, #-2147483628	; 0x80000014
     e70:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     e74:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e78:	31414d44 	cmpcc	r1, r4, asr #26
     e7c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     e80:	336d6165 	cmncc	sp, #1073741849	; 0x40000019
     e84:	5152495f 	cmppl	r2, pc, asr r9
     e88:	5342006e 	movtpl	r0, #8302	; 0x206e
     e8c:	47005252 	smlsdmi	r0, r2, r2, r5
     e90:	5f4f4950 	svcpl	0x004f4950
     e94:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     e98:	00666544 	rsbeq	r6, r6, r4, asr #10
     e9c:	314d4954 	cmpcc	sp, r4, asr r9
     ea0:	5f50555f 	svcpl	0x0050555f
     ea4:	314d4954 	cmpcc	sp, r4, asr r9
     ea8:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     eac:	2e006e51 	mcrcs	14, 0, r6, cr0, cr1, {2}
     eb0:	6f432f2e 	svcvs	0x00432f2e
     eb4:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     eb8:	752f6372 	strvc	r6, [pc, #-882]!	; b4e <_Min_Heap_Size+0x34e>
     ebc:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
     ec0:	4f00632e 	svcmi	0x0000632e
     ec4:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     ec8:	50455f53 	subpl	r5, r5, r3, asr pc
     ecc:	554f5f31 	strbpl	r5, [pc, #-3889]	; ffffffa3 <_estack+0xdfffed6b>
     ed0:	52495f54 	subpl	r5, r9, #84, 30	; 0x150
     ed4:	4d006e51 	stcmi	14, cr6, [r0, #-324]	; 0xfffffebc
     ed8:	5245444f 	subpl	r4, r5, #1325400064	; 0x4f000000
     edc:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     ee0:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     ee4:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     ee8:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     eec:	39495458 	stmdbcc	r9, {r3, r4, r6, sl, ip, lr}^
     ef0:	495f355f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     ef4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ef8:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     efc:	5f43435f 	svcpl	0x0043435f
     f00:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f04:	49445300 	stmdbmi	r4, {r8, r9, ip, lr}^
     f08:	52495f4f 	subpl	r5, r9, #316	; 0x13c
     f0c:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     f10:	33495458 	movtcc	r5, #37976	; 0x9458
     f14:	5152495f 	cmppl	r2, pc, asr r9
     f18:	6550006e 	ldrbvs	r0, [r0, #-110]	; 0xffffff92
     f1c:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
     f20:	5152495f 	cmppl	r2, pc, asr r9
     f24:	544f006e 	strbpl	r0, [pc], #-110	; f2c <_Min_Heap_Size+0x72c>
     f28:	53485f47 	movtpl	r5, #36679	; 0x8f47
     f2c:	3150455f 	cmpcc	r0, pc, asr r5
     f30:	5f4e495f 	svcpl	0x004e495f
     f34:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f38:	414d4400 	cmpmi	sp, r0, lsl #8
     f3c:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     f40:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     f44:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
     f48:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     f4c:	5f32414d 	svcpl	0x0032414d
     f50:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     f54:	5f326d61 	svcpl	0x00326d61
     f58:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f5c:	61735500 	cmnvs	r3, r0, lsl #10
     f60:	61466567 	cmpvs	r6, r7, ror #10
     f64:	5f746c75 	svcpl	0x00746c75
     f68:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     f6c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f70:	5f4c4148 	svcpl	0x004c4148
     f74:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     f78:	5152495f 	cmppl	r2, pc, asr r9
     f7c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     f80:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f84:	5f494d4e 	svcpl	0x00494d4e
     f88:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     f8c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f90:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     f94:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     f98:	61485152 	cmpvs	r8, r2, asr r1
     f9c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     fa0:	41480072 	hvcmi	32770	; 0x8002
     fa4:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
     fa8:	63695463 	cmnvs	r9, #1660944384	; 0x63000000
     fac:	6148006b 	cmpvs	r8, fp, rrx
     fb0:	61466472 	hvcvs	26178	; 0x6642
     fb4:	5f746c75 	svcpl	0x00746c75
     fb8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     fbc:	5f72656c 	svcpl	0x0072656c
     fc0:	6567654c 	strbvs	r6, [r7, #-1356]!	; 0xfffffab4
     fc4:	0079636e 	rsbseq	r6, r9, lr, ror #6
     fc8:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     fcc:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     fd0:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     fd4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     fd8:	43565300 	cmpmi	r6, #0, 6
     fdc:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     fe0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     fe4:	73795300 	cmnvc	r9, #0, 6
     fe8:	6b636954 	blvs	18db540 <_Min_Heap_Size+0x18dad40>
     fec:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     ff0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ff4:	73754200 	cmnvc	r5, #0, 4
     ff8:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     ffc:	61485f74 	hvcvs	34292	; 0x85f4
    1000:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1004:	65500072 	ldrbvs	r0, [r0, #-114]	; 0xffffff8e
    1008:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
    100c:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    1010:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1014:	6d654d00 	stclvs	13, cr4, [r5, #-0]
    1018:	616e614d 	cmnvs	lr, sp, asr #2
    101c:	485f6567 	ldmdami	pc, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1020:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1024:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    1028:	6f432f2e 	svcvs	0x00432f2e
    102c:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    1030:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1034:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1038:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    103c:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
    1040:	41480063 	cmpmi	r8, r3, rrx
    1044:	734d5f4c 	movtvc	r5, #57164	; 0xdf4c
    1048:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
    104c:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    1050:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    1054:	72532f65 	subsvc	r2, r3, #404	; 0x194
    1058:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    105c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1060:	5f787834 	svcpl	0x00787834
    1064:	5f6c6168 	svcpl	0x006c6168
    1068:	2e70736d 	cdpcs	3, 7, cr7, cr0, cr13, {3}
    106c:	41480063 	cmpmi	r8, r3, rrx
    1070:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1074:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1078:	4c435074 	mcrrmi	0, 7, r5, r3, cr4
    107c:	7246314b 	subvc	r3, r6, #-1073741806	; 0xc0000012
    1080:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    1084:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 44b <_Min_Heap_Size-0x3b5>
    1088:	45545241 	ldrbmi	r5, [r4, #-577]	; 0xfffffdbf
    108c:	65475f78 	strbvs	r5, [r7, #-3960]	; 0xfffff088
    1090:	45785274 	ldrbmi	r5, [r8, #-628]!	; 0xfffffd8c
    1094:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1098:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    109c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    10a0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    10a4:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    10a8:	75615041 	strbvc	r5, [r1, #-65]!	; 0xffffffbf
    10ac:	48006573 	stmdami	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
    10b0:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
    10b4:	535f4e49 	cmppl	pc, #1168	; 0x490
    10b8:	42646e65 	rsbmi	r6, r4, #1616	; 0x650
    10bc:	6b616572 	blvs	185a68c <_Min_Heap_Size+0x1859e8c>
    10c0:	616c4600 	cmnvs	ip, r0, lsl #12
    10c4:	61745367 	cmnvs	r4, r7, ror #6
    10c8:	00737574 	rsbseq	r7, r3, r4, ror r5
    10cc:	5f4c4148 	svcpl	0x004c4148
    10d0:	5f414d44 	svcpl	0x00414d44
    10d4:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    10d8:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    10dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    10e0:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    10e4:	70754466 	rsbsvc	r4, r5, r6, ror #8
    10e8:	5f78656c 	svcpl	0x0078656c
    10ec:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    10f0:	7254656c 	subsvc	r6, r4, #108, 10	; 0x1b000000
    10f4:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    10f8:	65747469 	ldrbvs	r7, [r4, #-1129]!	; 0xfffffb97
    10fc:	72630072 	rsbvc	r0, r3, #114	; 0x72
    1100:	73746933 	cmnvc	r4, #835584	; 0xcc000
    1104:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1108:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    110c:	5f784554 	svcpl	0x00784554
    1110:	76457852 			; <UNDEFINED> instruction: 0x76457852
    1114:	43746e65 	cmnmi	r4, #1616	; 0x650
    1118:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    111c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1120:	5f4c4148 	svcpl	0x004c4148
    1124:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1128:	6f62415f 	svcvs	0x0062415f
    112c:	65527472 	ldrbvs	r7, [r2, #-1138]	; 0xfffffb8e
    1130:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1134:	41480065 	cmpmi	r8, r5, rrx
    1138:	41555f4c 	cmpmi	r5, ip, asr #30
    113c:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
    1140:	72457465 	subvc	r7, r5, #1694498816	; 0x65000000
    1144:	00726f72 	rsbseq	r6, r2, r2, ror pc
    1148:	74614470 	strbtvc	r4, [r1], #-1136	; 0xfffffb90
    114c:	41550061 	cmpmi	r5, r1, rrx
    1150:	455f5452 	ldrbmi	r5, [pc, #-1106]	; d06 <_Min_Heap_Size+0x506>
    1154:	7852646e 	ldmdavc	r2, {r1, r2, r3, r5, r6, sl, sp, lr}^
    1158:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    115c:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
    1160:	52415500 	subpl	r5, r1, #0, 10
    1164:	6e455f54 	mcrvs	15, 2, r5, cr5, cr4, {2}
    1168:	54785464 	ldrbtpl	r5, [r8], #-1124	; 0xfffffb9c
    116c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1170:	00726566 	rsbseq	r6, r2, r6, ror #10
    1174:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    1178:	69623861 	stmdbvs	r2!, {r0, r5, r6, fp, ip, sp}^
    117c:	55007374 	strpl	r7, [r0, #-884]	; 0xfffffc8c
    1180:	5f545241 	svcpl	0x00545241
    1184:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    1188:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    118c:	70436576 	subvc	r6, r3, r6, ror r5
    1190:	5500746c 	strpl	r7, [r0, #-1132]	; 0xfffffb94
    1194:	5f545241 	svcpl	0x00545241
    1198:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    119c:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    11a0:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    11a4:	41480074 	hvcmi	32772	; 0x8004
    11a8:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    11ac:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
    11b0:	5f747261 	svcpl	0x00747261
    11b4:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    11b8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 57f <_Min_Heap_Size-0x281>
    11bc:	5f545241 	svcpl	0x00545241
    11c0:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    11c4:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    11c8:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    11cc:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    11d0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    11d4:	6b636162 	blvs	18d9764 <_Min_Heap_Size+0x18d8f64>
    11d8:	616c4600 	cmnvs	ip, r0, lsl #12
    11dc:	64700067 	ldrbtvs	r0, [r0], #-103	; 0xffffff99
    11e0:	31617461 	cmncc	r1, r1, ror #8
    11e4:	74696236 	strbtvc	r6, [r9], #-566	; 0xfffffdca
    11e8:	41480073 	hvcmi	32771	; 0x8003
    11ec:	41555f4c 	cmpmi	r5, ip, asr #30
    11f0:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    11f4:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    11f8:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    11fc:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1200:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1204:	6954006b 	ldmdbvs	r4, {r0, r1, r3, r5, r6}^
    1208:	74736b63 	ldrbtvc	r6, [r3], #-2915	; 0xfffff49d
    120c:	00747261 	rsbseq	r7, r4, r1, ror #4
    1210:	5f4c4148 	svcpl	0x004c4148
    1214:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1218:	6c707544 	cfldr64vs	mvdx7, [r0], #-272	; 0xfffffef0
    121c:	495f7865 	ldmdbmi	pc, {r0, r2, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1220:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1224:	5f4c4148 	svcpl	0x004c4148
    1228:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    122c:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1230:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1234:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    1238:	654d7055 	strbvs	r7, [sp, #-85]	; 0xffffffab
    123c:	646f6874 	strbtvs	r6, [pc], #-2164	; 1244 <_Min_Heap_Size+0xa44>
    1240:	65724200 	ldrbvs	r4, [r2, #-512]!	; 0xfffffe00
    1244:	65446b61 	strbvs	r6, [r4, #-2913]	; 0xfffff49f
    1248:	74636574 	strbtvc	r6, [r3], #-1396	; 0xfffffa8c
    124c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1250:	55006874 	strpl	r6, [r0, #-2164]	; 0xfffff78c
    1254:	5f545241 	svcpl	0x00545241
    1258:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    125c:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    1260:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1264:	54495f65 	strbpl	r5, [r9], #-3941	; 0xfffff09b
    1268:	52415500 	subpl	r5, r1, #0, 10
    126c:	65535f54 	ldrbvs	r5, [r3, #-3924]	; 0xfffff0ac
    1270:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    1274:	00676966 	rsbeq	r6, r7, r6, ror #18
    1278:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    127c:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    1280:	41550074 	cmpmi	r5, r4, ror r0
    1284:	445f5452 	ldrbmi	r5, [pc], #-1106	; 128c <_Min_Heap_Size+0xa8c>
    1288:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    128c:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1290:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1294:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1298:	4148006b 	cmpmi	r8, fp, rrx
    129c:	41555f4c 	cmpmi	r5, ip, asr #30
    12a0:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    12a4:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    12a8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    12ac:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    12b0:	0054495f 	subseq	r4, r4, pc, asr r9
    12b4:	5f4c4148 	svcpl	0x004c4148
    12b8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    12bc:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    12c0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    12c4:	5f5f0065 	svcpl	0x005f0065
    12c8:	45525453 	ldrbmi	r5, [r2, #-1107]	; 0xfffffbad
    12cc:	55005758 	strpl	r5, [r0, #-1880]	; 0xfffff8a8
    12d0:	5f545241 	svcpl	0x00545241
    12d4:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    12d8:	6c6e4f78 	stclvs	15, cr4, [lr], #-480	; 0xfffffe20
    12dc:	6f624179 	svcvs	0x00624179
    12e0:	61437472 	hvcvs	14146	; 0x3742
    12e4:	61626c6c 	cmnvs	r2, ip, ror #24
    12e8:	65006b63 	strvs	r6, [r0, #-2915]	; 0xfffff49d
    12ec:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    12f0:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    12f4:	41480073 	hvcmi	32771	; 0x8003
    12f8:	74535f4c 	ldrbvc	r5, [r3], #-3916	; 0xfffff0b4
    12fc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1300:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1304:	00666544 	rsbeq	r6, r6, r4, asr #10
    1308:	5f4c4148 	svcpl	0x004c4148
    130c:	5f414d44 	svcpl	0x00414d44
    1310:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1314:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    1318:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    131c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1320:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1324:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1328:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    132c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1334 <_Min_Heap_Size+0xb34>
    1330:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1334:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1338:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    133c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1340:	5f787834 	svcpl	0x00787834
    1344:	5f6c6168 	svcpl	0x006c6168
    1348:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    134c:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1350:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 717 <_Min_Heap_Size-0xe9>
    1354:	5f545241 	svcpl	0x00545241
    1358:	70437854 	subvc	r7, r3, r4, asr r8
    135c:	6143746c 	cmpvs	r3, ip, ror #8
    1360:	61626c6c 	cmnvs	r2, ip, ror #24
    1364:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
    1368:	5f545241 	svcpl	0x00545241
    136c:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    1370:	6f624178 	svcvs	0x00624178
    1374:	61437472 	hvcvs	14146	; 0x3742
    1378:	61626c6c 	cmnvs	r2, ip, ror #24
    137c:	68006b63 	stmdavs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1380:	00616d64 	rsbeq	r6, r1, r4, ror #26
    1384:	66727369 	ldrbtvs	r7, [r2], -r9, ror #6
    1388:	7367616c 	cmnvc	r7, #108, 2
    138c:	52415500 	subpl	r5, r1, #0, 10
    1390:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1394:	72724541 	rsbsvc	r4, r2, #272629760	; 0x10400000
    1398:	4800726f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    139c:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    13a0:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    13a4:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    13a8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 76f <_Min_Heap_Size-0x91>
    13ac:	5f545241 	svcpl	0x00545241
    13b0:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    13b4:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    13b8:	52415500 	subpl	r5, r1, #0, 10
    13bc:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    13c0:	48785241 	ldmdami	r8!, {r0, r6, r9, ip, lr}^
    13c4:	43666c61 	cmnmi	r6, #24832	; 0x6100
    13c8:	00746c70 	rsbseq	r6, r4, r0, ror ip
    13cc:	5f4c4148 	svcpl	0x004c4148
    13d0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    13d4:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    13d8:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    13dc:	414d445f 	cmpmi	sp, pc, asr r4
    13e0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    13e4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    13e8:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    13ec:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    13f0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    13f4:	495f6576 	ldmdbmi	pc, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    13f8:	78520054 	ldmdavc	r2, {r2, r4, r6}^
    13fc:	006e654c 	rsbeq	r6, lr, ip, asr #10
    1400:	5f4c4148 	svcpl	0x004c4148
    1404:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    1408:	6f725069 	svcvs	0x00725069
    140c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1410:	495f726f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1414:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1418:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    141c:	6961575f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1420:	466e4f74 	uqsub16mi	r4, lr, r4
    1424:	5567616c 	strbpl	r6, [r7, #-364]!	; 0xfffffe94
    1428:	6c69746e 	cfstrdvs	mvd7, [r9], #-440	; 0xfffffe48
    142c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1430:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1434:	5f4c4148 	svcpl	0x004c4148
    1438:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    143c:	6f62415f 	svcvs	0x0062415f
    1440:	72547472 	subsvc	r7, r4, #1912602624	; 0x72000000
    1444:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1448:	70437469 	subvc	r7, r3, r9, ror #8
    144c:	6143746c 	cmpvs	r3, ip, ror #8
    1450:	61626c6c 	cmnvs	r2, ip, ror #24
    1454:	5f006b63 	svcpl	0x00006b63
    1458:	52444c5f 	subpl	r4, r4, #24320	; 0x5f00
    145c:	00575845 	subseq	r5, r7, r5, asr #16
    1460:	5f4c4148 	svcpl	0x004c4148
    1464:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1468:	6f62415f 	svcvs	0x0062415f
    146c:	72547472 	subsvc	r7, r4, #1912602624	; 0x72000000
    1470:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1474:	55007469 	strpl	r7, [r0, #-1129]	; 0xfffffb97
    1478:	5f545241 	svcpl	0x00545241
    147c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    1480:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    1484:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1488:	4d445f65 	stclmi	15, cr5, [r4, #-404]	; 0xfffffe6c
    148c:	41480041 	cmpmi	r8, r1, asr #32
    1490:	41555f4c 	cmpmi	r5, ip, asr #30
    1494:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    1498:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    149c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    14a0:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    14a4:	495f656c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    14a8:	5f5f0054 	svcpl	0x005f0054
    14ac:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    14b0:	745f3436 	ldrbvc	r3, [pc], #-1078	; 14b8 <_Min_Heap_Size+0xcb8>
    14b4:	615f5f00 	cmpvs	pc, r0, lsl #30
    14b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    14bc:	646c755f 	strbtvs	r7, [ip], #-1375	; 0xfffffaa1
    14c0:	6f6d7669 	svcvs	0x006d7669
    14c4:	41480064 	cmpmi	r8, r4, rrx
    14c8:	41555f4c 	cmpmi	r5, ip, asr #30
    14cc:	445f5452 	ldrbmi	r5, [pc], #-1106	; 14d4 <_Min_Heap_Size+0xcd4>
    14d0:	7453414d 	ldrbvc	r4, [r3], #-333	; 0xfffffeb3
    14d4:	4800706f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, ip, sp, lr}
    14d8:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 13dc <_Min_Heap_Size+0xbdc>
    14dc:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    14e0:	636f7250 	cmnvs	pc, #80, 4
    14e4:	6f737365 	svcvs	0x00737365
    14e8:	78455f72 	stmdavc	r5, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    14ec:	754d7469 	strbvc	r7, [sp, #-1129]	; 0xfffffb97
    14f0:	6f4d6574 	svcvs	0x004d6574
    14f4:	68006564 	stmdavs	r0, {r2, r5, r6, r8, sl, sp, lr}
    14f8:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    14fc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1500:	4343525f 	movtmi	r5, #12895	; 0x325f
    1504:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1508:	4b4c4350 	blmi	1312250 <_Min_Heap_Size+0x1311a50>
    150c:	65724632 	ldrbvs	r4, [r2, #-1586]!	; 0xfffff9ce
    1510:	41480071 	hvcmi	32769	; 0x8001
    1514:	61485f4c 	cmpvs	r8, ip, asr #30
    1518:	7544666c 	strbvc	r6, [r4, #-1644]	; 0xfffff994
    151c:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    1520:	616e455f 	cmnvs	lr, pc, asr r5
    1524:	52656c62 	rsbpl	r6, r5, #25088	; 0x6200
    1528:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    152c:	00726576 	rsbseq	r6, r2, r6, ror r5
    1530:	6b6c6370 	blvs	1b1a2f8 <_Min_Heap_Size+0x1b19af8>
    1534:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1538:	74003170 	strvc	r3, [r0], #-368	; 0xfffffe90
    153c:	32706d65 	rsbscc	r6, r0, #6464	; 0x1940
    1540:	63697400 	cmnvs	r9, #0, 8
    1544:	6174736b 	cmnvs	r4, fp, ror #6
    1548:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    154c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 913 <_Min_Heap_Size+0x113>
    1550:	5f545241 	svcpl	0x00545241
    1554:	70437852 	subvc	r7, r3, r2, asr r8
    1558:	6143746c 	cmpvs	r3, ip, ror #8
    155c:	61626c6c 	cmnvs	r2, ip, ror #24
    1560:	6e006b63 	vmlsvs.f64	d6, d0, d19
    1564:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xfffff09e
    1568:	6e69616d 	powvsez	f6, f1, #5.0
    156c:	5f676e69 	svcpl	0x00676e69
    1570:	645f7872 	ldrbvs	r7, [pc], #-2162	; 1578 <_Min_Heap_Size+0xd78>
    1574:	00617461 	rsbeq	r7, r1, r1, ror #8
    1578:	5f4c4148 	svcpl	0x004c4148
    157c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1580:	6f62415f 	svcvs	0x0062415f
    1584:	70437472 	subvc	r7, r3, r2, ror r4
    1588:	6143746c 	cmpvs	r3, ip, ror #8
    158c:	61626c6c 	cmnvs	r2, ip, ror #24
    1590:	64006b63 	strvs	r6, [r0], #-2915	; 0xfffff49d
    1594:	6572616d 	ldrbvs	r6, [r2, #-365]!	; 0xfffffe93
    1598:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    159c:	41480074 	hvcmi	32772	; 0x8004
    15a0:	41555f4c 	cmpmi	r5, ip, asr #30
    15a4:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    15a8:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    15ac:	48006576 	stmdami	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    15b0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 977 <_Min_Heap_Size+0x177>
    15b4:	5f545241 	svcpl	0x00545241
    15b8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    15bc:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    15c0:	0054495f 	subseq	r4, r4, pc, asr r9
    15c4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15c8:	414d445f 	cmpmi	sp, pc, asr r4
    15cc:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    15d0:	456e4f74 	strbmi	r4, [lr, #-3956]!	; 0xfffff08c
    15d4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    15d8:	5f626e00 	svcpl	0x00626e00
    15dc:	645f7872 	ldrbvs	r7, [pc], #-2162	; 15e4 <_Min_Heap_Size+0xde4>
    15e0:	00617461 	rsbeq	r7, r1, r1, ror #8
    15e4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15e8:	414d445f 	cmpmi	sp, pc, asr r4
    15ec:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    15f0:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    15f4:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    15f8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    15fc:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1600:	5f784554 	svcpl	0x00784554
    1604:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1608:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    160c:	6c64496f 			; <UNDEFINED> instruction: 0x6c64496f
    1610:	4d445f65 	stclmi	15, cr5, [r4, #-404]	; 0xfffffe6c
    1614:	41550041 	cmpmi	r5, r1, asr #32
    1618:	455f5452 	ldrbmi	r5, [pc, #-1106]	; 11ce <_Min_Heap_Size+0x9ce>
    161c:	7254646e 	subsvc	r6, r4, #1845493760	; 0x6e000000
    1620:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1624:	495f7469 	ldmdbmi	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1628:	41480054 	qdaddmi	r0, r4, r8
    162c:	41555f4c 	cmpmi	r5, ip, asr #30
    1630:	545f5452 	ldrbpl	r5, [pc], #-1106	; 1638 <_Min_Heap_Size+0xe38>
    1634:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    1638:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    163c:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1640:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1644:	4148006b 	cmpmi	r8, fp, rrx
    1648:	41555f4c 	cmpmi	r5, ip, asr #30
    164c:	455f5452 	ldrbmi	r5, [pc, #-1106]	; 1202 <_Min_Heap_Size+0xa02>
    1650:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1654:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1658:	6b636162 	blvs	18d9be8 <_Min_Heap_Size+0x18d93e8>
    165c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1660:	414d445f 	cmpmi	sp, pc, asr r4
    1664:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1668:	6f727245 	svcvs	0x00727245
    166c:	41480072 	hvcmi	32770	; 0x8002
    1670:	41555f4c 	cmpmi	r5, ip, asr #30
    1674:	545f5452 	ldrbpl	r5, [pc], #-1106	; 167c <_Min_Heap_Size+0xe7c>
    1678:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    167c:	5f74696d 	svcpl	0x0074696d
    1680:	00414d44 	subeq	r4, r1, r4, asr #26
    1684:	5f4c4148 	svcpl	0x004c4148
    1688:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    168c:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    1690:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1694:	6f546576 	svcvs	0x00546576
    1698:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    169c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16a0:	6c754d5f 	ldclvs	13, cr4, [r5], #-380	; 0xfffffe84
    16a4:	72506974 	subsvc	r6, r0, #116, 18	; 0x1d0000
    16a8:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    16ac:	5f726f73 	svcpl	0x00726f73
    16b0:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
    16b4:	74754d72 	ldrbtvc	r4, [r5], #-3442	; 0xfffff28e
    16b8:	646f4d65 	strbtvs	r4, [pc], #-3429	; 16c0 <_Min_Heap_Size+0xec0>
    16bc:	41550065 	cmpmi	r5, r5, rrx
    16c0:	445f5452 	ldrbmi	r5, [pc], #-1106	; 16c8 <_Min_Heap_Size+0xec8>
    16c4:	7854414d 	ldmdavc	r4, {r0, r2, r3, r6, r8, lr}^
    16c8:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    16cc:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    16d0:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    16d4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    16d8:	7263006b 	rsbvc	r0, r3, #107	; 0x6b
    16dc:	73746931 	cmnvc	r4, #802816	; 0xc4000
    16e0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16e4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16e8:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    16ec:	73655241 	cmnvc	r5, #268435460	; 0x10000004
    16f0:	00656d75 	rsbeq	r6, r5, r5, ror sp
    16f4:	5f4c4148 	svcpl	0x004c4148
    16f8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    16fc:	6f62415f 	svcvs	0x0062415f
    1700:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    1704:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; acb <_Min_Heap_Size+0x2cb>
    1708:	5f545241 	svcpl	0x00545241
    170c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1710:	5f657669 	svcpl	0x00657669
    1714:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    1718:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
    171c:	495f4e49 	ldmdbmi	pc, {r0, r3, r6, r9, sl, fp, lr}^	; <UNPREDICTABLE>
    1720:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1724:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    1728:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    172c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1730:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
    1734:	61435353 	cmpvs	r3, r3, asr r3
    1738:	61626c6c 	cmnvs	r2, ip, ror #24
    173c:	70006b63 	andvc	r6, r0, r3, ror #22
    1740:	00706c6c 	rsbseq	r6, r0, ip, ror #24
    1744:	63727770 	cmnvs	r2, #112, 14	; 0x1c00000
    1748:	68636b6c 	stmdavs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
    174c:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
    1750:	50410064 	subpl	r0, r1, r4, rrx
    1754:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
    1758:	61546373 	cmpvs	r4, r3, ror r3
    175c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1760:	4354504f 	cmpmi	r4, #79	; 0x4f
    1764:	4c460052 	mcrrmi	0, 5, r0, r6, cr2
    1768:	5f485341 	svcpl	0x00485341
    176c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1770:	00666544 	rsbeq	r6, r6, r4, asr #10
    1774:	42414e45 	submi	r4, r1, #1104	; 0x450
    1778:	4f00454c 	svcmi	0x0000454c
    177c:	454b5450 	strbmi	r5, [fp, #-1104]	; 0xfffffbb0
    1780:	70005259 	andvc	r5, r0, r9, asr r2
    1784:	63766c6c 	cmnvs	r6, #108, 24	; 0x6c00
    1788:	4944006f 	stmdbmi	r4, {r0, r1, r2, r3, r5, r6}^
    178c:	4c424153 	stfmie	f4, [r2], {83}	; 0x53
    1790:	504f0045 	subpl	r0, pc, r5, asr #32
    1794:	31524354 	cmpcc	r2, r4, asr r3
    1798:	43435200 	movtmi	r5, #12800	; 0x3200
    179c:	4f434d5f 	svcmi	0x00434d5f
    17a0:	00766944 	rsbseq	r6, r6, r4, asr #18
    17a4:	5f4c4148 	svcpl	0x004c4148
    17a8:	5f434352 	svcpl	0x00434352
    17ac:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    17b0:	5343656c 	movtpl	r6, #13676	; 0x356c
    17b4:	48410053 	stmdami	r1, {r0, r1, r4, r6}^
    17b8:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
    17bc:	61546373 	cmpvs	r4, r3, ror r3
    17c0:	00656c62 	rsbeq	r6, r5, r2, ror #24
    17c4:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    17c8:	6b636f6c 	blvs	18dd580 <_Min_Heap_Size+0x18dcd80>
    17cc:	71657266 	cmnvc	r5, r6, ror #4
    17d0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    17d4:	4343525f 	movtmi	r5, #12895	; 0x325f
    17d8:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    17dc:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    17e0:	00535343 	subseq	r5, r3, r3, asr #6
    17e4:	5f4c4148 	svcpl	0x004c4148
    17e8:	5f434352 	svcpl	0x00434352
    17ec:	434f434d 	movtmi	r4, #62285	; 0xf34d
    17f0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    17f4:	79530067 	ldmdbvc	r3, {r0, r1, r2, r5, r6}^
    17f8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    17fc:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1800:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    1804:	4148006b 	cmpmi	r8, fp, rrx
    1808:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
    180c:	69547469 	ldmdbvs	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1810:	70006b63 	andvc	r6, r0, r3, ror #22
    1814:	635f6c6c 	cmpvs	pc, #108, 24	; 0x6c00
    1818:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    181c:	77750067 	ldrbvc	r0, [r5, -r7, rrx]!
    1820:	6b636954 	blvs	18dbd78 <_Min_Heap_Size+0x18db578>
    1824:	6f697250 	svcvs	0x00697250
    1828:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    182c:	4148006d 	cmpmi	r8, sp, rrx
    1830:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1834:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1838:	73795374 	cmnvc	r9, #116, 6	; 0xd0000001
    183c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    1840:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    1844:	41480071 	hvcmi	32769	; 0x8001
    1848:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    184c:	65445f43 	strbvs	r5, [r4, #-3907]	; 0xfffff0bd
    1850:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1854:	43435200 	movtmi	r5, #12800	; 0x3200
    1858:	4f434d5f 	svcmi	0x00434d5f
    185c:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    1860:	48006563 	stmdami	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
    1864:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1868:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    186c:	6c437465 	cfstrdvs	mvd7, [r3], {101}	; 0x65
    1870:	436b636f 	cmnmi	fp, #-1140850687	; 0xbc000001
    1874:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1878:	41480067 	cmpmi	r8, r7, rrx
    187c:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1880:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1884:	4c434874 	mcrrmi	8, 7, r4, r3, cr4
    1888:	6572464b 	ldrbvs	r4, [r2, #-1611]!	; 0xfffff9b5
    188c:	2e2e0071 	mcrcs	0, 1, r0, cr14, cr1, {3}
    1890:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1894:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1898:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    189c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    18a0:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    18a4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 18ac <_Min_Heap_Size+0x10ac>
    18a8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    18ac:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    18b0:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    18b4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    18b8:	5f787834 	svcpl	0x00787834
    18bc:	5f6c6168 	svcpl	0x006c6168
    18c0:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    18c4:	43520063 	cmpmi	r2, #99	; 0x63
    18c8:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    18cc:	7000784f 	andvc	r7, r0, pc, asr #16
    18d0:	74614c46 	strbtvc	r4, [r1], #-3142	; 0xfffff3ba
    18d4:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    18d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    18dc:	4343525f 	movtmi	r5, #12895	; 0x325f
    18e0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    18e4:	4363734f 	cmnmi	r3, #1006632961	; 0x3c000001
    18e8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    18ec:	41480067 	cmpmi	r8, r7, rrx
    18f0:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    18f4:	4d4e5f43 	stclmi	15, cr5, [lr, #-268]	; 0xfffffef4
    18f8:	52495f49 	subpl	r5, r9, #292	; 0x124
    18fc:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1900:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1904:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1908:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    190c:	4148006e 	cmpmi	r8, lr, rrx
    1910:	50475f4c 	subpl	r5, r7, ip, asr #30
    1914:	4c5f4f49 	mrrcmi	15, 4, r4, pc, cr9	; <UNPREDICTABLE>
    1918:	506b636f 	rsbpl	r6, fp, pc, ror #6
    191c:	69006e69 	stmdbvs	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
    1920:	736f706f 	cmnvc	pc, #111	; 0x6f
    1924:	6f697469 	svcvs	0x00697469
    1928:	454d006e 	strbmi	r0, [sp, #-110]	; 0xffffff92
    192c:	504d524d 	subpl	r5, sp, sp, asr #4
    1930:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1934:	00524349 	subseq	r4, r2, r9, asr #6
    1938:	5f4c4148 	svcpl	0x004c4148
    193c:	4f495047 	svcmi	0x00495047
    1940:	676f545f 			; <UNDEFINED> instruction: 0x676f545f
    1944:	50656c67 	rsbpl	r6, r5, r7, ror #24
    1948:	74006e69 	strvc	r6, [r0], #-3689	; 0xfffff197
    194c:	00706d65 	rsbseq	r6, r0, r5, ror #26
    1950:	4f495047 	svcmi	0x00495047
    1954:	4e49505f 	mcrmi	0, 2, r5, cr9, cr15, {2}
    1958:	5445535f 	strbpl	r5, [r5], #-863	; 0xfffffca1
    195c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1960:	79545f49 	ldmdbvc	r4, {r0, r3, r6, r8, r9, sl, fp, ip, lr}^
    1964:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1968:	41480066 	cmpmi	r8, r6, rrx
    196c:	50475f4c 	subpl	r5, r7, ip, asr #30
    1970:	525f4f49 	subspl	r4, pc, #292	; 0x124
    1974:	50646165 	rsbpl	r6, r4, r5, ror #2
    1978:	48006e69 	stmdami	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
    197c:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1980:	5f4f4950 	svcpl	0x004f4950
    1984:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    1988:	6e695065 	cdpvs	0, 6, cr5, cr9, cr5, {3}
    198c:	504d4300 	subpl	r4, sp, r0, lsl #6
    1990:	62005243 	andvs	r5, r0, #805306372	; 0x30000004
    1994:	74737469 	ldrbtvc	r7, [r3], #-1129	; 0xfffffb97
    1998:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    199c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    19a0:	49505f4f 	ldmdbmi	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    19a4:	45525f4e 	ldrbmi	r5, [r2, #-3918]	; 0xfffff0b2
    19a8:	00544553 	subseq	r4, r4, r3, asr r5
    19ac:	5f4c4148 	svcpl	0x004c4148
    19b0:	4f495047 	svcmi	0x00495047
    19b4:	5458455f 	ldrbpl	r4, [r8], #-1375	; 0xfffffaa1
    19b8:	61435f49 	cmpvs	r3, r9, asr #30
    19bc:	61626c6c 	cmnvs	r2, ip, ror #24
    19c0:	46006b63 	strmi	r6, [r0], -r3, ror #22
    19c4:	00525354 	subseq	r5, r2, r4, asr r3
    19c8:	5f4c4148 	svcpl	0x004c4148
    19cc:	4f495047 	svcmi	0x00495047
    19d0:	5458455f 	ldrbpl	r4, [r8], #-1375	; 0xfffffaa1
    19d4:	52495f49 	subpl	r5, r9, #292	; 0x124
    19d8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    19dc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    19e0:	636f6900 	cmnvs	pc, #0, 18
    19e4:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    19e8:	5300746e 	movwpl	r7, #1134	; 0x46e
    19ec:	46435359 			; <UNDEFINED> instruction: 0x46435359
    19f0:	79545f47 	ldmdbvc	r4, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    19f4:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    19f8:	54520066 	ldrbpl	r0, [r2], #-102	; 0xffffff9a
    19fc:	47005253 	smlsdmi	r0, r3, r2, r5
    1a00:	784f4950 	stmdavc	pc, {r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1a04:	2f2e2e00 	svccs	0x002e2e00
    1a08:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1a0c:	2f737265 	svccs	0x00737265
    1a10:	334d5453 	movtcc	r5, #54355	; 0xd453
    1a14:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1a18:	41485f78 	hvcmi	34296	; 0x85f8
    1a1c:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1a20:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1a24:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1a28:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1a2c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1a30:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1a34:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    1a38:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1a3c:	45520063 	ldrbmi	r0, [r2, #-99]	; 0xffffff9d
    1a40:	56524553 			; <UNDEFINED> instruction: 0x56524553
    1a44:	47004445 	strmi	r4, [r0, -r5, asr #8]
    1a48:	5f4f4950 	svcpl	0x004f4950
    1a4c:	536e6950 	cmnpl	lr, #80, 18	; 0x140000
    1a50:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1a54:	49575300 	ldmdbmi	r7, {r8, r9, ip, lr}^
    1a58:	48005245 	stmdami	r0, {r0, r2, r6, r9, ip, lr}
    1a5c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1a64 <_Min_Heap_Size+0x1264>
    1a60:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1a64:	5f524546 	svcpl	0x00524546
    1a68:	524f4241 	subpl	r4, pc, #268435460	; 0x10000004
    1a6c:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1a70:	0044495f 	subeq	r4, r4, pc, asr r9
    1a74:	5f4c4148 	svcpl	0x004c4148
    1a78:	5f414d44 	svcpl	0x00414d44
    1a7c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1a80:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a84:	414d445f 	cmpmi	sp, pc, asr r4
    1a88:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    1a8c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1a90:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    1a94:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1a98:	6552006b 	ldrbvs	r0, [r2, #-107]	; 0xffffff95
    1a9c:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1aa0:	00306465 	eorseq	r6, r0, r5, ror #8
    1aa4:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    1aa8:	73746942 	cmnvc	r4, #1081344	; 0x108000
    1aac:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1ab0:	7366664f 	cmnvc	r6, #82837504	; 0x4f00000
    1ab4:	74007465 	strvc	r7, [r0], #-1125	; 0xfffffb9b
    1ab8:	7369706d 	cmnvc	r9, #109	; 0x6d
    1abc:	41480072 	hvcmi	32770	; 0x8002
    1ac0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1ac4:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1ac8:	435f5245 	cmpmi	pc, #1342177284	; 0x50000004
    1acc:	5f544c50 	svcpl	0x00544c50
    1ad0:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1ad4:	41480044 	cmpmi	r8, r4, asr #32
    1ad8:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1adc:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
    1ae0:	00747261 	rsbseq	r7, r4, r1, ror #4
    1ae4:	5f4c4148 	svcpl	0x004c4148
    1ae8:	5f414d44 	svcpl	0x00414d44
    1aec:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1af0:	43314d5f 	teqmi	r1, #6080	; 0x17c0
    1af4:	5f544c50 	svcpl	0x00544c50
    1af8:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1afc:	41480044 	cmpmi	r8, r4, asr #32
    1b00:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1b04:	65445f41 	strbvs	r5, [r4, #-3905]	; 0xfffff0bf
    1b08:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1b0c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1b10:	414d445f 	cmpmi	sp, pc, asr r4
    1b14:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1b18:	52455f52 	subpl	r5, r5, #328	; 0x148
    1b1c:	5f524f52 	svcpl	0x00524f52
    1b20:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1b24:	41480044 	cmpmi	r8, r4, asr #32
    1b28:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1b2c:	41485f41 	cmpmi	r8, r1, asr #30
    1b30:	545f464c 	ldrbpl	r4, [pc], #-1612	; 1b38 <_Min_Heap_Size+0x1338>
    1b34:	534e4152 	movtpl	r4, #57682	; 0xe152
    1b38:	00524546 	subseq	r4, r2, r6, asr #10
    1b3c:	5f414d44 	svcpl	0x00414d44
    1b40:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    1b44:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1b48:	2e2e0067 	cdpcs	0, 2, cr0, cr14, cr7, {3}
    1b4c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1b50:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1b54:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1b58:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1b5c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1b60:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1b68 <_Min_Heap_Size+0x1368>
    1b64:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1b68:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1b6c:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1b70:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1b74:	5f787834 	svcpl	0x00787834
    1b78:	5f6c6168 	svcpl	0x006c6168
    1b7c:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    1b80:	41480063 	cmpmi	r8, r3, rrx
    1b84:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1b88:	654c5f41 	strbvs	r5, [ip, #-3905]	; 0xfffff0bf
    1b8c:	436c6576 	cmnmi	ip, #494927872	; 0x1d800000
    1b90:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    1b94:	54657465 	strbtpl	r7, [r5], #-1125	; 0xfffffb9b
    1b98:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1b9c:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1ba0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1ba8 <_Min_Heap_Size+0x13a8>
    1ba4:	465f414d 	ldrbmi	r4, [pc], -sp, asr #2
    1ba8:	5f4c4c55 	svcpl	0x004c4c55
    1bac:	4e415254 	mcrmi	2, 2, r5, cr1, cr4, {2}
    1bb0:	52454653 	subpl	r4, r5, #87031808	; 0x5300000
    1bb4:	72747300 	rsbsvc	r7, r4, #0, 6
    1bb8:	5f6d6165 	svcpl	0x006d6165
    1bbc:	626d756e 	rsbvs	r7, sp, #461373440	; 0x1b800000
    1bc0:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1bc4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1bcc <_Min_Heap_Size+0x13cc>
    1bc8:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1bcc:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1bd0:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1bd4:	70795444 	rsbsvc	r5, r9, r4, asr #8
    1bd8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1bdc:	6d6f4300 	stclvs	3, cr4, [pc, #-0]	; 1be4 <_Min_Heap_Size+0x13e4>
    1be0:	74656c70 	strbtvc	r6, [r5], #-3184	; 0xfffff390
    1be4:	76654c65 	strbtvc	r4, [r5], -r5, ror #24
    1be8:	49006c65 	stmdbmi	r0, {r0, r2, r5, r6, sl, fp, sp, lr}
    1bec:	00524346 	subseq	r4, r2, r6, asr #6
    1bf0:	41747344 	cmnmi	r4, r4, asr #6
    1bf4:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1bf8:	43007373 	movwmi	r7, #883	; 0x373
    1bfc:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c00:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1c04:	4d440044 	stclmi	0, cr0, [r4, #-272]	; 0xfffffef0
    1c08:	68435f41 	stmdavs	r3, {r0, r6, r8, r9, sl, fp, ip, lr}^
    1c0c:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    1c10:	506f6669 	rsbpl	r6, pc, r9, ror #12
    1c14:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    1c18:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c1c:	414d445f 	cmpmi	sp, pc, asr r4
    1c20:	526e555f 	rsbpl	r5, lr, #398458880	; 0x17c00000
    1c24:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1c28:	43726574 	cmnmi	r2, #116, 10	; 0x1d000000
    1c2c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c30:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1c34:	5f4c4148 	svcpl	0x004c4148
    1c38:	5f414d44 	svcpl	0x00414d44
    1c3c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1c40:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1c44:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1c48:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1c50 <_Min_Heap_Size+0x1450>
    1c4c:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1c50:	5f524546 	svcpl	0x00524546
    1c54:	5f4c4c41 	svcpl	0x004c4c41
    1c58:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1c5c:	4d440044 	stclmi	0, cr0, [r4, #-272]	; 0xfffffef0
    1c60:	61425f41 	cmpvs	r2, r1, asr #30
    1c64:	525f6573 	subspl	r6, pc, #482344960	; 0x1cc00000
    1c68:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1c6c:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    1c70:	414d4400 	cmpmi	sp, r0, lsl #8
    1c74:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    1c78:	73614263 	cmnvc	r1, #805306374	; 0x30000006
    1c7c:	646e4165 	strbtvs	r4, [lr], #-357	; 0xfffffe9b
    1c80:	73746942 	cmnvc	r4, #1081344	; 0x108000
    1c84:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1c88:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c8c:	414d445f 	cmpmi	sp, pc, asr r4
    1c90:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1c94:	41485f52 	cmpmi	r8, r2, asr pc
    1c98:	5043464c 	subpl	r4, r3, ip, asr #12
    1c9c:	435f544c 	cmpmi	pc, #76, 8	; 0x4c000000
    1ca0:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1ca4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1ca8:	414d445f 	cmpmi	sp, pc, asr r4
    1cac:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1cb0:	314d5f52 	cmpcc	sp, r2, asr pc
    1cb4:	464c4148 	strbmi	r4, [ip], -r8, asr #2
    1cb8:	544c5043 	strbpl	r5, [ip], #-67	; 0xffffffbd
    1cbc:	5f42435f 	svcpl	0x0042435f
    1cc0:	63004449 	movwvs	r4, #1097	; 0x449
    1cc4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1cc8:	63725300 	cmnvs	r2, #0, 6
    1ccc:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1cd0:	00737365 	rsbseq	r7, r3, r5, ror #6
    1cd4:	61746144 	cmnvs	r4, r4, asr #2
    1cd8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1cdc:	48006874 	stmdami	r0, {r2, r4, r5, r6, fp, sp, lr}
    1ce0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1ce8 <_Min_Heap_Size+0x14e8>
    1ce4:	475f414d 	ldrbmi	r4, [pc, -sp, asr #2]
    1ce8:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1cec:	00657461 	rsbeq	r7, r5, r1, ror #8
    1cf0:	6c614370 	stclvs	3, cr4, [r1], #-448	; 0xfffffe40
    1cf4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1cf8:	6974006b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6}^
    1cfc:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1797 <_Min_Heap_Size+0xf97>
    1d00:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
    1d04:	6d007367 	stcvs	3, cr7, [r0, #-412]	; 0xfffffe64
    1d08:	5f6b7361 	svcpl	0x006b7361
    1d0c:	746c7063 	strbtvc	r7, [ip], #-99	; 0xffffff9d
    1d10:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    1d14:	4148006c 	cmpmi	r8, ip, rrx
    1d18:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1d1c:	6f505f41 	svcvs	0x00505f41
    1d20:	6f466c6c 	svcvs	0x00466c6c
    1d24:	61725472 	cmnvs	r2, r2, ror r4
    1d28:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
    1d2c:	43490072 	movtmi	r0, #36978	; 0x9072
    1d30:	54005250 	strpl	r5, [r0], #-592	; 0xfffffdb0
    1d34:	45657079 	strbmi	r7, [r5, #-121]!	; 0xffffff87
    1d38:	69467478 	stmdbvs	r6, {r3, r4, r5, r6, sl, ip, sp, lr}^
    1d3c:	00646c65 	rsbeq	r6, r4, r5, ror #24
    1d40:	442f2e2e 	strtmi	r2, [pc], #-3630	; 1d48 <_Min_Heap_Size+0x1548>
    1d44:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1d48:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    1d4c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1d50:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1d54:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1d58:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1d5c:	2f726576 	svccs	0x00726576
    1d60:	2f637253 	svccs	0x00637253
    1d64:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1d68:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1d6c:	61685f78 	smcvs	34296	; 0x85f8
    1d70:	6f635f6c 	svcvs	0x00635f6c
    1d74:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    1d78:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1d7c:	535f4c41 	cmppl	pc, #16640	; 0x4100
    1d80:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
    1d84:	435f4b43 	cmpmi	pc, #68608	; 0x10c00
    1d88:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1d8c:	41480067 	cmpmi	r8, r7, rrx
    1d90:	4f435f4c 	svcmi	0x00435f4c
    1d94:	58455452 	stmdapl	r5, {r1, r4, r6, sl, ip, lr}^
    1d98:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    1d9c:	76457261 	strbvc	r7, [r5], -r1, ror #4
    1da0:	00746e65 	rsbseq	r6, r4, r5, ror #28
    1da4:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    1da8:	0033415f 	eorseq	r4, r3, pc, asr r1
    1dac:	52505349 	subspl	r5, r0, #603979777	; 0x24000001
    1db0:	42734900 	rsbsmi	r4, r3, #0, 18
    1db4:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1db8:	6c626172 	stfvse	f6, [r2], #-456	; 0xfffffe38
    1dbc:	72500065 	subsvc	r0, r0, #101	; 0x65
    1dc0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1dc4:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    1dc8:	0070756f 	rsbseq	r7, r0, pc, ror #10
    1dcc:	5f4c4148 	svcpl	0x004c4148
    1dd0:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    1dd4:	5f4b4349 	svcpl	0x004b4349
    1dd8:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1ddc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1de0:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1de4:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1de8:	5f434956 	svcpl	0x00434956
    1dec:	61656c43 	cmnvs	r5, r3, asr #24
    1df0:	6e655072 	mcrvs	0, 3, r5, cr5, cr2, {3}
    1df4:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1df8:	00515249 	subseq	r5, r1, r9, asr #4
    1dfc:	5f4c4148 	svcpl	0x004c4148
    1e00:	5f55504d 	svcpl	0x0055504d
    1e04:	61736944 	cmnvs	r3, r4, asr #18
    1e08:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1e0c:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    1e10:	0031415f 	eorseq	r4, r1, pc, asr r1
    1e14:	5f55504d 	svcpl	0x0055504d
    1e18:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    1e1c:	006c6f72 	rsbeq	r6, ip, r2, ror pc
    1e20:	5f4c4148 	svcpl	0x004c4148
    1e24:	4349564e 	movtmi	r5, #38478	; 0x964e
    1e28:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1e2c:	6f697250 	svcvs	0x00697250
    1e30:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1e34:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    1e38:	5f434956 	svcpl	0x00434956
    1e3c:	61656c43 	cmnvs	r5, r3, asr #24
    1e40:	6e655072 	mcrvs	0, 3, r5, cr5, cr2, {3}
    1e44:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1e48:	00515249 	subseq	r5, r1, r9, asr #4
    1e4c:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1e50:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    1e54:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1e58:	7365526d 	cmnvc	r5, #-805306362	; 0xd0000006
    1e5c:	52007465 	andpl	r7, r0, #1694498816	; 0x65000000
    1e60:	5f524142 	svcpl	0x00524142
    1e64:	52003141 	andpl	r3, r0, #1073741840	; 0x40000010
    1e68:	5f524142 	svcpl	0x00524142
    1e6c:	52003241 	andpl	r3, r0, #268435460	; 0x10000004
    1e70:	5f524142 	svcpl	0x00524142
    1e74:	4d003341 	stcmi	3, cr3, [r0, #-260]	; 0xfffffefc
    1e78:	495f5550 	ldmdbmi	pc, {r4, r6, r8, sl, ip, lr}^	; <UNPREDICTABLE>
    1e7c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1e80:	65657250 	strbvs	r7, [r5, #-592]!	; 0xfffffdb0
    1e84:	5074706d 	rsbspl	r7, r4, sp, rrx
    1e88:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1e8c:	42797469 	rsbsmi	r7, r9, #1761607680	; 0x69000000
    1e90:	00737469 	rsbseq	r7, r3, r9, ror #8
    1e94:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    1e98:	0032415f 	eorseq	r4, r2, pc, asr r1
    1e9c:	5f55504d 	svcpl	0x0055504d
    1ea0:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1ea4:	495f6e6f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1ea8:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
    1eac:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1eb0:	49006665 	stmdbmi	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1eb4:	63614373 	cmnvs	r1, #-872415231	; 0xcc000001
    1eb8:	62616568 	rsbvs	r6, r1, #104, 10	; 0x1a000000
    1ebc:	5300656c 	movwpl	r6, #1388	; 0x56c
    1ec0:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    1ec4:	545f6b63 	ldrbpl	r6, [pc], #-2915	; 1ecc <_Min_Heap_Size+0x16cc>
    1ec8:	00657079 	rsbeq	r7, r5, r9, ror r0
    1ecc:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1ed0:	445f4349 	ldrbmi	r4, [pc], #-841	; 1ed8 <_Min_Heap_Size+0x16d8>
    1ed4:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    1ed8:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    1edc:	41480051 	qdaddmi	r0, r1, r8
    1ee0:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1ee4:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1ee8:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    1eec:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    1ef0:	51524967 	cmppl	r2, r7, ror #18
    1ef4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1ef8:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1efc:	79535f43 	ldmdbvc	r3, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1f00:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1f04:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1f08:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
    1f0c:	61765f67 	cmnvs	r6, r7, ror #30
    1f10:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1f14:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
    1f18:	50700042 	rsbspl	r0, r0, r2, asr #32
    1f1c:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    1f20:	72507470 	subsvc	r7, r0, #112, 8	; 0x70000000
    1f24:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f28:	41007974 	tstmi	r0, r4, ror r9
    1f2c:	73656363 	cmnvc	r5, #-1946157055	; 0x8c000001
    1f30:	72655073 	rsbvc	r5, r5, #115	; 0x73
    1f34:	7373696d 	cmnvc	r3, #1785856	; 0x1b4000
    1f38:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1f3c:	6f697270 	svcvs	0x00697270
    1f40:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1f44:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    1f48:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
    1f4c:	5f00745f 	svcpl	0x0000745f
    1f50:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f54:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    1f58:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    1f5c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1f60:	6f724779 	svcvs	0x00724779
    1f64:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
    1f68:	41480067 	cmpmi	r8, r7, rrx
    1f6c:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1f70:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1f74:	63417465 	movtvs	r7, #5221	; 0x1465
    1f78:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    1f7c:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 1f84 <_Min_Heap_Size+0x1784>
    1f80:	5f004253 	svcpl	0x00004253
    1f84:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f88:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1f8c:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    1f90:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1f94:	53700079 	cmnpl	r0, #121	; 0x79
    1f98:	72506275 	subsvc	r6, r0, #1342177287	; 0x50000007
    1f9c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1fa0:	4e007974 			; <UNDEFINED> instruction: 0x4e007974
    1fa4:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1fa8:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1fac:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1fb0:	72677974 	rsbvc	r7, r7, #116, 18	; 0x1d0000
    1fb4:	0070756f 	rsbseq	r7, r0, pc, ror #10
    1fb8:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
    1fbc:	63697400 	cmnvs	r9, #0, 8
    1fc0:	4900736b 	stmdbmi	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    1fc4:	00524241 	subseq	r4, r2, r1, asr #4
    1fc8:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1fcc:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1fd0:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    1fd4:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    1fd8:	51524967 	cmppl	r2, r7, ror #18
    1fdc:	495f5f00 	ldmdbmi	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    1fe0:	4e004253 	mcrmi	2, 0, r4, cr0, cr3, {2}
    1fe4:	5f434956 	svcpl	0x00434956
    1fe8:	6f636e45 	svcvs	0x00636e45
    1fec:	72506564 	subsvc	r6, r0, #100, 10	; 0x19000000
    1ff0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1ff4:	49007974 	stmdbmi	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    1ff8:	00524543 	subseq	r4, r2, r3, asr #10
    1ffc:	50627553 	rsbpl	r7, r2, r3, asr r5
    2000:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2004:	42797469 	rsbsmi	r7, r9, #1761607680	; 0x69000000
    2008:	00737469 	rsbseq	r7, r3, r9, ror #8
    200c:	4349564e 	movtmi	r5, #38478	; 0x964e
    2010:	6365445f 	cmnvs	r5, #1593835520	; 0x5f000000
    2014:	5065646f 	rsbpl	r6, r5, pc, ror #8
    2018:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    201c:	00797469 	rsbseq	r7, r9, r9, ror #8
    2020:	5f4c4148 	svcpl	0x004c4148
    2024:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    2028:	5f4b4349 	svcpl	0x004b4349
    202c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2030:	6b636162 	blvs	18da5c0 <_Min_Heap_Size+0x18d9dc0>
    2034:	73694400 	cmnvc	r9, #0, 8
    2038:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    203c:	63657845 	cmnvs	r5, #4521984	; 0x450000
    2040:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 2048 <_Min_Heap_Size+0x1848>
    2044:	5300424d 	movwpl	r4, #589	; 0x24d
    2048:	65526275 	ldrbvs	r6, [r2, #-629]	; 0xfffffd8b
    204c:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    2050:	61736944 	cmnvs	r3, r4, asr #18
    2054:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2058:	52455349 	subpl	r5, r5, #603979777	; 0x24000001
    205c:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2060:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    2064:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    2068:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    206c:	5f434956 	svcpl	0x00434956
    2070:	50746553 	rsbspl	r6, r4, r3, asr r5
    2074:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2078:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    207c:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2080:	00676e69 	rsbeq	r6, r7, r9, ror #28
    2084:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2088:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    208c:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2090:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    2094:	51524967 	cmppl	r2, r7, ror #18
    2098:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    209c:	5f434956 	svcpl	0x00434956
    20a0:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    20a4:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    20a8:	42520051 	subsmi	r0, r2, #81	; 0x51
    20ac:	50005241 	andpl	r5, r0, r1, asr #4
    20b0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    20b4:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    20b8:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    20bc:	00706d54 	rsbseq	r6, r0, r4, asr sp
    20c0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    20c4:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    20c8:	69540065 	ldmdbvs	r4, {r0, r2, r5, r6}^
    20cc:	4e736b63 	vsubmi.f64	d22, d3, d19
    20d0:	00626d75 	rsbeq	r6, r2, r5, ror sp
    20d4:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    20d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    20dc:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    20e0:	4b434954 	blmi	10d4638 <_Min_Heap_Size+0x10d3e38>
    20e4:	4b4c435f 	blmi	1312e68 <_Min_Heap_Size+0x1312668>
    20e8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    20ec:	6f436563 	svcvs	0x00436563
    20f0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    20f4:	50595400 	subspl	r5, r9, r0, lsl #8
    20f8:	41480045 	cmpmi	r8, r5, asr #32
    20fc:	504d5f4c 	subpl	r5, sp, ip, asr #30
    2100:	6f435f55 	svcvs	0x00435f55
    2104:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2108:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    210c:	53006e6f 	movwpl	r6, #3695	; 0xe6f
    2110:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2114:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
    2118:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    211c:	41480067 	cmpmi	r8, r7, rrx
    2120:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    2124:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2128:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    212c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2130:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    2134:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2138:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    213c:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 2040 <_Min_Heap_Size+0x1840>
    2140:	455f5550 	ldrbmi	r5, [pc, #-1360]	; 1bf8 <_Min_Heap_Size+0x13f8>
    2144:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2148:	54430065 	strbpl	r0, [r3], #-101	; 0xffffff9b
    214c:	5f004c52 	svcpl	0x00004c52
    2150:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    2154:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    2158:	74634174 	strbtvc	r4, [r3], #-372	; 0xfffffe8c
    215c:	00657669 	rsbeq	r7, r5, r9, ror #12
    2160:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2164:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2168:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    216c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2170:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    2174:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2178:	5300676e 	movwpl	r6, #1902	; 0x76e
    217c:	00524954 	subseq	r4, r2, r4, asr r9
    2180:	68537349 	ldmdavs	r3, {r0, r3, r6, r8, r9, ip, sp, lr}^
    2184:	61657261 	cmnvs	r5, r1, ror #4
    2188:	00656c62 	rsbeq	r6, r5, r2, ror #24
    218c:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2190:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2194:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2198:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    219c:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    21a0:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    21a4:	5f434956 	svcpl	0x00434956
    21a8:	50746553 	rsbspl	r6, r4, r3, asr r5
    21ac:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    21b0:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    21b4:	504d0051 	subpl	r0, sp, r1, asr r0
    21b8:	79545f55 	ldmdbvc	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    21bc:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    21c0:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    21c4:	61487465 	cmpvs	r8, r5, ror #8
    21c8:	7265566c 	rsbvc	r5, r5, #108, 12	; 0x6c00000
    21cc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    21d0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    21d4:	6369545f 	cmnvs	r9, #1593835520	; 0x5f000000
    21d8:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    21dc:	70795471 	rsbsvc	r5, r9, r1, ror r4
    21e0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    21e4:	63695400 	cmnvs	r9, #0, 8
    21e8:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    21ec:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    21f0:	41480079 	hvcmi	32777	; 0x8009
    21f4:	65535f4c 	ldrbvs	r5, [r3, #-3916]	; 0xfffff0b4
    21f8:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    21fc:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    2200:	44490071 	strbmi	r0, [r9], #-113	; 0xffffff8f
    2204:	45444f43 	strbmi	r4, [r4, #-3907]	; 0xfffff0bd
    2208:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    220c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2210:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    2214:	41480032 	cmpmi	r8, r2, lsr r0
    2218:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    221c:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2220:	616e455f 	cmnvs	lr, pc, asr r5
    2224:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    2228:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    222c:	62646e61 	rsbvs	r6, r4, #1552	; 0x610
    2230:	646f4d79 	strbtvs	r4, [pc], #-3449	; 2238 <_Min_Heap_Size+0x1a38>
    2234:	41480065 	cmpmi	r8, r5, rrx
    2238:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    223c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    2240:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    2244:	4148006f 	cmpmi	r8, pc, rrx
    2248:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    224c:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2250:	5f514552 	svcpl	0x00514552
    2254:	5a483031 	bpl	120e320 <_Min_Heap_Size+0x120db20>
    2258:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    225c:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
    2260:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    2264:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    2268:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2270 <_Min_Heap_Size+0x1a70>
    226c:	434d4742 	movtmi	r4, #55106	; 0xd742
    2270:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    2274:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    2278:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    227c:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    2280:	646f4d70 	strbtvs	r4, [pc], #-3440	; 2288 <_Min_Heap_Size+0x1a88>
    2284:	41480065 	cmpmi	r8, r5, rrx
    2288:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    228c:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2290:	5f514552 	svcpl	0x00514552
    2294:	48303031 	ldmdami	r0!, {r0, r4, r5, ip, sp}
    2298:	4148005a 	qdaddmi	r0, sl, r8
    229c:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    22a0:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    22a4:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    22a8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    22ac:	53474244 	movtpl	r4, #29252	; 0x7244
    22b0:	4d706f74 	ldclmi	15, cr6, [r0, #-464]!	; 0xfffffe30
    22b4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    22b8:	5f4c4148 	svcpl	0x004c4148
    22bc:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    22c0:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
    22c4:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    22c8:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    22cc:	77750071 			; <UNDEFINED> instruction: 0x77750071
    22d0:	6b636954 	blvs	18dc828 <_Min_Heap_Size+0x18dc028>
    22d4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    22d8:	4349545f 	movtmi	r5, #37983	; 0x945f
    22dc:	52465f4b 	subpl	r5, r6, #300	; 0x12c
    22e0:	315f5145 	cmpcc	pc, r5, asr #2
    22e4:	005a484b 	subseq	r4, sl, fp, asr #16
    22e8:	5f4c4148 	svcpl	0x004c4148
    22ec:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    22f0:	455f5543 	ldrbmi	r5, [pc, #-1347]	; 1db5 <_Min_Heap_Size+0x15b5>
    22f4:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    22f8:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    22fc:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    2300:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2304:	42504100 	subsmi	r4, r0, #0, 2
    2308:	005a4632 	subseq	r4, sl, r2, lsr r6
    230c:	5f4c4148 	svcpl	0x004c4148
    2310:	55746547 	ldrbpl	r6, [r4, #-1351]!	; 0xfffffab9
    2314:	30774449 	rsbscc	r4, r7, r9, asr #8
    2318:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    231c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2320:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    2324:	41480031 	cmpmi	r8, r1, lsr r0
    2328:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    232c:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2330:	5f514552 	svcpl	0x00514552
    2334:	41464544 	cmpmi	r6, r4, asr #10
    2338:	00544c55 	subseq	r4, r4, r5, asr ip
    233c:	5f4c4148 	svcpl	0x004c4148
    2340:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    2344:	6954656d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2348:	41006b63 	tstmi	r0, r3, ror #22
    234c:	46314250 			; <UNDEFINED> instruction: 0x46314250
    2350:	4148005a 	qdaddmi	r0, sl, r8
    2354:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    2358:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    235c:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2360:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2364:	53474244 	movtpl	r4, #29252	; 0x7244
    2368:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    236c:	6f4d7962 	svcvs	0x004d7962
    2370:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    2374:	535f4c41 	cmppl	pc, #16640	; 0x4100
    2378:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    237c:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    2380:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2384:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 238c <_Min_Heap_Size+0x1b8c>
    2388:	434d4742 	movtmi	r4, #55106	; 0xd742
    238c:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    2390:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2394:	53474244 	movtpl	r4, #29252	; 0x7244
    2398:	7065656c 	rsbvc	r6, r5, ip, ror #10
    239c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    23a0:	47424400 	strbmi	r4, [r2, -r0, lsl #8]
    23a4:	5f55434d 	svcpl	0x0055434d
    23a8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    23ac:	00666544 	rsbeq	r6, r6, r4, asr #10
    23b0:	5f4c4148 	svcpl	0x004c4148
    23b4:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    23b8:	44495645 	strbmi	r5, [r9], #-1605	; 0xfffff9bb
    23bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    23c0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    23c4:	6b636954 	blvs	18dc91c <_Min_Heap_Size+0x18dc11c>
    23c8:	71657246 	cmnvc	r5, r6, asr #4
    23cc:	65727000 	ldrbvs	r7, [r2, #-0]!
    23d0:	63695476 	cmnvs	r9, #1979711488	; 0x76000000
    23d4:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    23d8:	41480071 	hvcmi	32769	; 0x8001
    23dc:	6e455f4c 	cdpvs	15, 4, cr5, cr5, cr12, {2}
    23e0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    23e4:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    23e8:	61736e65 	cmnvs	r3, r5, ror #28
    23ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    23f0:	6c6c6543 	cfstr64vs	mvdx6, [ip], #-268	; 0xfffffef4
    23f4:	2f2e2e00 	svccs	0x002e2e00
    23f8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    23fc:	2f737265 	svccs	0x00737265
    2400:	334d5453 	movtcc	r5, #54355	; 0xd453
    2404:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    2408:	41485f78 	hvcmi	34296	; 0x85f8
    240c:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    2410:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2414:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2418:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    241c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2420:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2424:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    2428:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    242c:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2430:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2434:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2438:	61736e65 	cmnvs	r3, r5, ror #28
    243c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2440:	6c6c6543 	cfstr64vs	mvdx6, [ip], #-268	; 0xfffffef4
    2444:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2448:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    244c:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    2450:	2e2e0044 	cdpcs	0, 2, cr0, cr14, cr4, {2}
    2454:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    2458:	72532f65 	subsvc	r2, r3, #404	; 0x194
    245c:	79732f63 	ldmdbvc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    2460:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2464:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    2468:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    246c:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
    2470:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    2474:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
    2478:	53006563 	movwpl	r6, #1379	; 0x563
    247c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2480:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
    2484:	6f6c4365 	svcvs	0x006c4365
    2488:	70556b63 	subsvc	r6, r5, r3, ror #22
    248c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    2490:	73795300 	cmnvc	r9, #0, 6
    2494:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2498:	0074696e 	rsbseq	r6, r4, lr, ror #18
    249c:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
    24a0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    24a4:	76657270 			; <UNDEFINED> instruction: 0x76657270
    24a8:	6165685f 	cmnvs	r5, pc, asr r8
    24ac:	6e655f70 	mcrvs	15, 3, r5, cr5, cr0, {3}
    24b0:	2e2e0064 	cdpcs	0, 2, cr0, cr14, cr4, {3}
    24b4:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    24b8:	72532f65 	subsvc	r2, r3, #404	; 0x194
    24bc:	79732f63 	ldmdbvc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    24c0:	6d656d73 	stclvs	13, cr6, [r5, #-460]!	; 0xfffffe34
    24c4:	7000632e 	andvc	r6, r0, lr, lsr #6
    24c8:	69647274 	stmdbvs	r4!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    24cc:	745f6666 	ldrbvc	r6, [pc], #-1638	; 24d4 <_Min_Heap_Size+0x1cd4>
    24d0:	694d5f00 	stmdbvs	sp, {r8, r9, sl, fp, ip, lr}^
    24d4:	74535f6e 	ldrbvc	r5, [r3], #-3950	; 0xfffff092
    24d8:	5f6b6361 	svcpl	0x006b6361
    24dc:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    24e0:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
    24e4:	6165685f 	cmnvs	r5, pc, asr r8
    24e8:	6e690070 	mcrvs	0, 3, r0, cr9, cr0, {3}
    24ec:	5f007263 	svcpl	0x00007263
    24f0:	7262735f 	rsbvc	r7, r2, #2080374785	; 0x7c000001
    24f4:	65685f6b 	strbvs	r5, [r8, #-3947]!	; 0xfffff095
    24f8:	655f7061 	ldrbvs	r7, [pc, #-97]	; 249f <_Min_Heap_Size+0x1c9f>
    24fc:	5f00646e 	svcpl	0x0000646e
    2500:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    2504:	5f006f6e 	svcpl	0x00006f6e
    2508:	6b726273 	blvs	1c9aedc <_Min_Heap_Size+0x1c9a6dc>
    250c:	61747300 	cmnvs	r4, r0, lsl #6
    2510:	6c5f6b63 	mrrcvs	11, 6, r6, pc, cr3	; <UNPREDICTABLE>
    2514:	74696d69 	strbtvc	r6, [r9], #-3433	; 0xfffff297
    2518:	5f747300 	svcpl	0x00747300
    251c:	76656472 			; <UNDEFINED> instruction: 0x76656472
    2520:	6f6c6300 	svcvs	0x006c6300
    2524:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 252c <_Min_Heap_Size+0x1d2c>
    2528:	766e6500 	strbtvc	r6, [lr], -r0, lsl #10
    252c:	6e6f7269 	cdpvs	2, 6, cr7, cr15, cr9, {3}
    2530:	736c5f00 	cmnvc	ip, #0, 30
    2534:	006b6565 	rsbeq	r6, fp, r5, ror #10
    2538:	5f736d74 	svcpl	0x00736d74
    253c:	69747563 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
    2540:	5f00656d 	svcpl	0x0000656d
    2544:	63657865 	cmnvs	r5, #6619136	; 0x650000
    2548:	74006576 	strvc	r6, [r0], #-1398	; 0xfffffa8a
    254c:	65735f76 	ldrbvs	r5, [r3, #-3958]!	; 0xfffff08a
    2550:	735f0063 	cmpvc	pc, #99	; 0x63
    2554:	00746174 	rsbseq	r6, r4, r4, ror r1
    2558:	635f7473 	cmpvs	pc, #1929379840	; 0x73000000
    255c:	006d6974 	rsbeq	r6, sp, r4, ror r9
    2560:	6e655f5f 	mcrvs	15, 3, r5, cr5, cr15, {2}
    2564:	655f0076 	ldrbvs	r0, [pc, #-118]	; 24f6 <_Min_Heap_Size+0x1cf6>
    2568:	00746978 	rsbseq	r6, r4, r8, ror r9
    256c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    2570:	73006574 	movwvc	r6, #1396	; 0x574
    2574:	65645f74 	strbvs	r5, [r4, #-3956]!	; 0xfffff08c
    2578:	665f0076 			; <UNDEFINED> instruction: 0x665f0076
    257c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    2580:	696b5f00 	stmdbvs	fp!, {r8, r9, sl, fp, ip, lr}^
    2584:	74006c6c 	strvc	r6, [r0], #-3180	; 0xfffff394
    2588:	5f656d69 	svcpl	0x00656d69
    258c:	5f5f0074 	svcpl	0x005f0074
    2590:	5f746e69 	svcpl	0x00746e69
    2594:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    2598:	5f343674 	svcpl	0x00343674
    259c:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
    25a0:	6b6c625f 	blvs	1b1af24 <_Min_Heap_Size+0x1b1a724>
    25a4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    25a8:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    25ac:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    25b0:	5f657369 	svcpl	0x00657369
    25b4:	696e6f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    25b8:	5f726f74 	svcpl	0x00726f74
    25bc:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    25c0:	0073656c 	rsbseq	r6, r3, ip, ror #10
    25c4:	675f7473 			; <UNDEFINED> instruction: 0x675f7473
    25c8:	5f006469 	svcpl	0x00006469
    25cc:	646f6d5f 	strbtvs	r6, [pc], #-3423	; 25d4 <_Min_Heap_Size+0x1dd4>
    25d0:	00745f65 	rsbseq	r5, r4, r5, ror #30
    25d4:	5f736d74 	svcpl	0x00736d74
    25d8:	69747363 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}^
    25dc:	5f00656d 	svcpl	0x0000656d
    25e0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    25e4:	5f5f0073 	svcpl	0x005f0073
    25e8:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    25ec:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    25f0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    25f4:	61775f00 	cmnvs	r7, r0, lsl #30
    25f8:	73007469 	movwvc	r7, #1129	; 0x469
    25fc:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    2600:	725f006f 	subsvc	r0, pc, #111	; 0x6f
    2604:	00646165 	rsbeq	r6, r4, r5, ror #2
    2608:	6f695f5f 	svcvs	0x00695f5f
    260c:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    2610:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    2614:	5f767400 	svcpl	0x00767400
    2618:	6365736e 	cmnvs	r5, #-1207959551	; 0xb8000001
    261c:	5f747300 	svcpl	0x00747300
    2620:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    2624:	6f5f006b 	svcvs	0x005f006b
    2628:	006e6570 	rsbeq	r6, lr, r0, ror r5
    262c:	76677261 	strbtvc	r7, [r7], -r1, ror #4
    2630:	625f5f00 	subsvs	r5, pc, #0, 30
    2634:	69736b6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
    2638:	745f657a 	ldrbvc	r6, [pc], #-1402	; 2640 <_Min_Heap_Size+0x1e40>
    263c:	5f747300 	svcpl	0x00747300
    2640:	6d697461 	cfstrdvs	mvd7, [r9, #-388]!	; 0xfffffe7c
    2644:	696c5f00 	stmdbvs	ip!, {r8, r9, sl, fp, ip, lr}^
    2648:	5f006b6e 	svcpl	0x00006b6e
    264c:	736f6c63 	cmnvc	pc, #25344	; 0x6300
    2650:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
    2654:	6f6c625f 	svcvs	0x006c625f
    2658:	00736b63 	rsbseq	r6, r3, r3, ror #22
    265c:	6173695f 	cmnvs	r3, pc, asr r9
    2660:	00797474 	rsbseq	r7, r9, r4, ror r4
    2664:	6d5f7473 	cfldrdvs	mvd7, [pc, #-460]	; 24a0 <_Min_Heap_Size+0x1ca0>
    2668:	006d6974 	rsbeq	r6, sp, r4, ror r9
    266c:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    2670:	00745f6f 	rsbseq	r5, r4, pc, ror #30
    2674:	5f736d74 	svcpl	0x00736d74
    2678:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
    267c:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
    2680:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
    2684:	5f747300 	svcpl	0x00747300
    2688:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    268c:	5f747300 	svcpl	0x00747300
    2690:	72617073 	rsbvc	r7, r1, #115	; 0x73
    2694:	44003465 	strmi	r3, [r0], #-1125	; 0xfffffb9b
    2698:	49617461 	stmdbmi	r1!, {r0, r5, r6, sl, ip, sp, lr}^
    269c:	5f007864 	svcpl	0x00007864
    26a0:	6b726f66 	blvs	1c9e440 <_Min_Heap_Size+0x1c9dc40>
    26a4:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
    26a8:	64697074 	strbtvs	r7, [r9], #-116	; 0xffffff8c
    26ac:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 26b4 <_Min_Heap_Size+0x1eb4>
    26b0:	745f7665 	ldrbvc	r7, [pc], #-1637	; 26b8 <_Min_Heap_Size+0x1eb8>
    26b4:	6f5f5f00 	svcvs	0x005f5f00
    26b8:	745f6666 	ldrbvc	r6, [pc], #-1638	; 26c0 <_Min_Heap_Size+0x1ec0>
    26bc:	74617000 	strbtvc	r7, [r1], #-0
    26c0:	69740068 	ldmdbvs	r4!, {r3, r5, r6}^
    26c4:	7073656d 	rsbsvc	r6, r3, sp, ror #10
    26c8:	5f006365 	svcpl	0x00006365
    26cc:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
    26d0:	7300745f 	movwvc	r7, #1119	; 0x45f
    26d4:	6f6d5f74 	svcvs	0x006d5f74
    26d8:	74006564 	strvc	r6, [r0], #-1380	; 0xfffffa9c
    26dc:	755f736d 	ldrbvc	r7, [pc, #-877]	; 2377 <_Min_Heap_Size+0x1b77>
    26e0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    26e4:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
    26e8:	6b6e696c 	blvs	1b9cca0 <_Min_Heap_Size+0x1b9c4a0>
    26ec:	625f5f00 	subsvs	r5, pc, #0, 30
    26f0:	6e636b6c 	vnmulvs.f64	d22, d3, d28
    26f4:	00745f74 	rsbseq	r5, r4, r4, ror pc
    26f8:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    26fc:	2f65726f 	svccs	0x0065726f
    2700:	2f637253 	svccs	0x00637253
    2704:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    2708:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    270c:	5f00632e 	svcpl	0x0000632e
    2710:	6469675f 	strbtvs	r6, [r9], #-1887	; 0xfffff8a1
    2714:	5f00745f 	svcpl	0x0000745f
    2718:	78657473 	stmdavc	r5!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    271c:	706f0074 	rsbvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
    2720:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    2724:	5f73695f 	svcpl	0x0073695f
    2728:	6f5f6c62 	svcvs	0x005f6c62
    272c:	6c625f72 	stclvs	15, cr5, [r2], #-456	; 0xfffffe38
    2730:	74730078 	ldrbtvc	r0, [r3], #-120	; 0xffffff88
    2734:	5f6b6361 	svcpl	0x006b6361
    2738:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    273c:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2740:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
    2744:	534d5f74 	movtpl	r5, #57204	; 0xdf74
    2748:	6e690050 	mcrvs	0, 3, r0, cr9, cr0, {2}
    274c:	00786564 	rsbseq	r6, r8, r4, ror #10
    2750:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2754:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2758:	625f706d 	subsvs	r7, pc, #109	; 0x6d
    275c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    2760:	5f6b6361 	svcpl	0x006b6361
    2764:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    2768:	735f0074 	cmpvc	pc, #116	; 0x74
    276c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2770:	6166006b 	cmnvs	r6, fp, rrx
    2774:	5f746c75 	svcpl	0x00746c75
    2778:	706d7564 	rsbvc	r7, sp, r4, ror #10
    277c:	5f6d625f 	svcpl	0x006d625f
    2780:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2784:	6f705f6b 	svcvs	0x00705f6b
    2788:	00746e69 	rsbseq	r6, r4, r9, ror #28
    278c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2790:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2794:	6f5f706d 	svcvs	0x005f706d
    2798:	646f6370 	strbtvs	r6, [pc], #-880	; 27a0 <_Min_Heap_Size+0x1fa0>
    279c:	61660065 	cmnvs	r6, r5, rrx
    27a0:	5f746c75 	svcpl	0x00746c75
    27a4:	706d7564 	rsbvc	r7, sp, r4, ror #10
    27a8:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
    27ac:	6174736c 	cmnvs	r4, ip, ror #6
    27b0:	6c006b63 			; <UNDEFINED> instruction: 0x6c006b63
    27b4:	656b6e69 	strbvs	r6, [fp, #-3689]!	; 0xfffff197
    27b8:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
    27bc:	5f6b6361 	svcpl	0x006b6361
    27c0:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    27c4:	616d5f65 	cmnvs	sp, r5, ror #30
    27c8:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
    27cc:	6f00745f 	svcvs	0x0000745f
    27d0:	646f6370 	strbtvs	r6, [pc], #-880	; 27d8 <_Min_Heap_Size+0x1fd8>
    27d4:	6f003165 	svcvs	0x00003165
    27d8:	646f6370 	strbtvs	r6, [pc], #-880	; 27e0 <_Min_Heap_Size+0x1fe0>
    27dc:	73003265 	movwvc	r3, #613	; 0x265
    27e0:	6b636174 	blvs	18dadb8 <_Min_Heap_Size+0x18da5b8>
    27e4:	6172665f 	cmnvs	r2, pc, asr r6
    27e8:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 263c <_Min_Heap_Size+0x1e3c>
    27ec:	61756e61 	cmnvs	r5, r1, ror #28
    27f0:	7473006c 	ldrbtvc	r0, [r3], #-108	; 0xffffff94
    27f4:	5f6b6361 	svcpl	0x006b6361
    27f8:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    27fc:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
    2800:	5f6b6361 	svcpl	0x006b6361
    2804:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    2808:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    280c:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    2810:	5f00745f 	svcpl	0x0000745f
    2814:	6c6f6f42 	stclvs	15, cr6, [pc], #-264	; 2714 <_Min_Heap_Size+0x1f14>
    2818:	2f2e2e00 	svccs	0x002e2e00
    281c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2820:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2824:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    2828:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    282c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2830:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    2834:	72732f70 	rsbsvc	r2, r3, #112, 30	; 0x1c0
    2838:	61662f63 	cmnvs	r6, r3, ror #30
    283c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2840:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2844:	7300632e 	movwvc	r6, #814	; 0x32e
    2848:	6b636174 	blvs	18dae20 <_Min_Heap_Size+0x18da620>
    284c:	6172665f 	cmnvs	r2, pc, asr r6
    2850:	655f656d 	ldrbvs	r6, [pc, #-1389]	; 22eb <_Min_Heap_Size+0x1aeb>
    2854:	70656378 	rsbvc	r6, r5, r8, ror r3
    2858:	75620074 	strbvc	r0, [r2, #-116]!	; 0xffffff8c
    285c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    2860:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2864:	645f746c 	ldrbvs	r7, [pc], #-1132	; 286c <_Min_Heap_Size+0x206c>
    2868:	5f706d75 	svcpl	0x00706d75
    286c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    2870:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2874:	635f6466 	cmpvs	pc, #1711276032	; 0x66000000
    2878:	5f65646f 	svcpl	0x0065646f
    287c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2880:	75665f6b 	strbvc	r5, [r6, #-3947]!	; 0xfffff095
    2884:	66006c6c 	strvs	r6, [r0], -ip, ror #24
    2888:	6f635f64 	svcvs	0x00635f64
    288c:	735f6564 	cmpvc	pc, #100, 10	; 0x19000000
    2890:	6b636174 	blvs	18dae68 <_Min_Heap_Size+0x18da668>
    2894:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
    2898:	655f0065 	ldrbvs	r0, [pc, #-101]	; 283b <_Min_Heap_Size+0x203b>
    289c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    28a0:	61747300 	cmnvs	r4, r0, lsl #6
    28a4:	70757472 	rsbsvc	r7, r5, r2, ror r4
    28a8:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    28ac:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    28b0:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    28b4:	4700732e 	strmi	r7, [r0, -lr, lsr #6]
    28b8:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
    28bc:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
    28c0:	312e3633 			; <UNDEFINED> instruction: 0x312e3633
    28c4:	2f2e2e00 	svccs	0x002e2e00
    28c8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    28cc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    28d0:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    28d4:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    28d8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    28dc:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    28e0:	70632f70 	rsbvc	r2, r3, r0, ror pc
    28e4:	6f632f75 	svcvs	0x00632f75
    28e8:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    28ec:	2f346d2d 	svccs	0x00346d2d
    28f0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    28f4:	63672d74 	cmnvs	r7, #116, 26	; 0x1d00
    28f8:	00732e63 	rsbseq	r2, r3, r3, ror #28

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Heap_Size+0x10d0524>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
  errno = ENOMEM;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
}
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    if (status != HAL_OK)
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
      uwTickFreq = prevTickFreq;
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  errno = ENOMEM;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000018 	andeq	r0, r0, r8, lsl r0
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00000000 	andeq	r0, r0, r0
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
}
      28:	00040e4a 	andeq	r0, r4, sl, asr #28
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      38:	00000020 	andeq	r0, r0, r0, lsr #32
      3c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      40:	00018e02 	andeq	r8, r1, r2, lsl #28
      44:	0000001c 	andeq	r0, r0, ip, lsl r0
      if (pllsource != 0)
      48:	00000000 	andeq	r0, r0, r0
      4c:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	0000004c 	andeq	r0, r0, ip, asr #32
      54:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      58:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      5c:	180e4101 	stmdane	lr, {r0, r8, lr}
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000c0e5f 	andeq	r0, ip, pc, asr lr
      64:	00000014 	andeq	r0, r0, r4, lsl r0
      68:	00000000 	andeq	r0, r0, r0
      SystemCoreClock = pllvco/pllp;
      6c:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
      70:	00000018 	andeq	r0, r0, r8, lsl r0
      break;
      74:	83080e41 	movwhi	r0, #36417	; 0x8e41
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00018e02 	andeq	r8, r1, r2, lsl #28
      7c:	00000014 	andeq	r0, r0, r4, lsl r0
      80:	00000000 	andeq	r0, r0, r0
      84:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
      88:	00000018 	andeq	r0, r0, r8, lsl r0
      8c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      90:	00018e02 	andeq	r8, r1, r2, lsl #28
      94:	00000014 	andeq	r0, r0, r4, lsl r0
      98:	00000000 	andeq	r0, r0, r0
      9c:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
      a0:	00000018 	andeq	r0, r0, r8, lsl r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      a8:	00018e02 	andeq	r8, r1, r2, lsl #28
      ac:	00000014 	andeq	r0, r0, r4, lsl r0
      b0:	00000000 	andeq	r0, r0, r0
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00000018 	andeq	r0, r0, r8, lsl r0
      bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00018e02 	andeq	r8, r1, r2, lsl #28
      c4:	00000014 	andeq	r0, r0, r4, lsl r0
      c8:	00000000 	andeq	r0, r0, r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
      d0:	00000018 	andeq	r0, r0, r8, lsl r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00018e02 	andeq	r8, r1, r2, lsl #28
      dc:	00000014 	andeq	r0, r0, r4, lsl r0
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	00000018 	andeq	r0, r0, r8, lsl r0
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
      f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    huart->TxXferCount = 0x00U;
      f4:	00000014 	andeq	r0, r0, r4, lsl r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00000000 	andeq	r0, r0, r0
    huart->gState  = HAL_UART_STATE_READY;
      fc:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
    huart->RxState = HAL_UART_STATE_READY;
     100:	0000002c 	andeq	r0, r0, ip, lsr #32
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	83080e41 	movwhi	r0, #36417	; 0x8e41
    HAL_UART_AbortCpltCallback(huart);
     108:	00018e02 	andeq	r8, r1, r2, lsl #28
     10c:	00000014 	andeq	r0, r0, r4, lsl r0
  uint32_t AbortCplt = 0x01U;
     110:	00000000 	andeq	r0, r0, r0
  if (AbortCplt == 0x01U)
     114:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
}
     118:	00000018 	andeq	r0, r0, r8, lsl r0
     11c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     120:	00018e02 	andeq	r8, r1, r2, lsl #28
     124:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     130:	000000a4 	andeq	r0, r0, r4, lsr #1
     134:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     138:	580e4101 	stmdapl	lr, {r0, r8, lr}
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	0e0a4602 	cfmadd32eq	mvax0, mvfx4, mvfx10, mvfx2
     140:	000b4204 	andeq	r4, fp, r4, lsl #4
     144:	00000014 	andeq	r0, r0, r4, lsl r0
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00000000 	andeq	r0, r0, r0
     14c:	08000704 	stmdaeq	r0, {r2, r8, r9, sl}
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00000014 	andeq	r0, r0, r4, lsl r0
     154:	83080e41 	movwhi	r0, #36417	; 0x8e41
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	00018e02 	andeq	r8, r1, r2, lsl #28
     15c:	0000000c 	andeq	r0, r0, ip
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     164:	7c020001 	stcvc	0, cr0, [r2], {1}
     168:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     16c:	00000014 	andeq	r0, r0, r4, lsl r0
     170:	0000015c 	andeq	r0, r0, ip, asr r1
}
     174:	08000718 	stmdaeq	r0, {r3, r4, r8, r9, sl}
     178:	0000004c 	andeq	r0, r0, ip, asr #32
     17c:	61100e41 	tstvs	r0, r1, asr #28
     180:	0000000e 	andeq	r0, r0, lr
}
     184:	0000000c 	andeq	r0, r0, ip
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     18c:	7c020001 	stcvc	0, cr0, [r2], {1}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     194:	00000014 	andeq	r0, r0, r4, lsl r0
     198:	00000184 	andeq	r0, r0, r4, lsl #3
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	08000764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl}
     1a0:	00000034 	andeq	r0, r0, r4, lsr r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     1ac:	0000001c 	andeq	r0, r0, ip, lsl r0
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00000184 	andeq	r0, r0, r4, lsl #3
     1b4:	08000798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00000080 	andeq	r0, r0, r0, lsl #1
     1bc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     1c0:	41018e02 	tstmi	r1, r2, lsl #28
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	0a4e280e 	beq	138a204 <_Min_Heap_Size+0x1389a04>
     1c8:	0b41080e 	bleq	1042208 <_Min_Heap_Size+0x1041a08>
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00000014 	andeq	r0, r0, r4, lsl r0
     1d0:	00000184 	andeq	r0, r0, r4, lsl #3
     1d4:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	00000034 	andeq	r0, r0, r4, lsr r0
     1dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     1e4:	0000000c 	andeq	r0, r0, ip
     1e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	7c020001 	stcvc	0, cr0, [r2], {1}
     1f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	00000014 	andeq	r0, r0, r4, lsl r0
     1f8:	000001e4 	andeq	r0, r0, r4, ror #3
     1fc:	08000818 	stmdaeq	r0, {r3, r4, fp}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00000014 	andeq	r0, r0, r4, lsl r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	83080e41 	movwhi	r0, #36417	; 0x8e41
     208:	00018e02 	andeq	r8, r1, r2, lsl #28
     20c:	00000014 	andeq	r0, r0, r4, lsl r0
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	000001e4 	andeq	r0, r0, r4, ror #3
     214:	00000000 	andeq	r0, r0, r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000014 	andeq	r0, r0, r4, lsl r0
     21c:	83080e41 	movwhi	r0, #36417	; 0x8e41
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00018e02 	andeq	r8, r1, r2, lsl #28
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	00000014 	andeq	r0, r0, r4, lsl r0
     228:	000001e4 	andeq	r0, r0, r4, ror #3
  tmp = hdma->Instance->FCR;
     22c:	0800082c 	stmdaeq	r0, {r2, r3, r5, fp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00000014 	andeq	r0, r0, r4, lsl r0
  tmp |= hdma->Init.FIFOMode;
     234:	83080e41 	movwhi	r0, #36417	; 0x8e41
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	00018e02 	andeq	r8, r1, r2, lsl #28
    tmp |= hdma->Init.FIFOThreshold;
     23c:	00000014 	andeq	r0, r0, r4, lsl r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	000001e4 	andeq	r0, r0, r4, ror #3
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	08000840 	stmdaeq	r0, {r6, fp}
     248:	00000014 	andeq	r0, r0, r4, lsl r0
  hdma->Instance->FCR = tmp;
     24c:	83080e41 	movwhi	r0, #36417	; 0x8e41
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00018e02 	andeq	r8, r1, r2, lsl #28
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00000014 	andeq	r0, r0, r4, lsl r0
     258:	000001e4 	andeq	r0, r0, r4, ror #3
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
  hdma->State = HAL_DMA_STATE_READY;
     260:	00000014 	andeq	r0, r0, r4, lsl r0
     264:	83080e41 	movwhi	r0, #36417	; 0x8e41
  return HAL_OK;
     268:	00018e02 	andeq	r8, r1, r2, lsl #28
     26c:	0000000c 	andeq	r0, r0, ip
     270:	000001e4 	andeq	r0, r0, r4, ror #3
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	08000868 	stmdaeq	r0, {r3, r5, r6, fp}
     278:	00000002 	andeq	r0, r0, r2
     27c:	0000000c 	andeq	r0, r0, ip
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	000001e4 	andeq	r0, r0, r4, ror #3
        hdma->State = HAL_DMA_STATE_READY;
     284:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
        return HAL_ERROR; 
     288:	00000002 	andeq	r0, r0, r2
    return HAL_ERROR;
     28c:	0000000c 	andeq	r0, r0, ip
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	000001e4 	andeq	r0, r0, r4, ror #3
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0800086c 	stmdaeq	r0, {r2, r3, r5, r6, fp}
     298:	00000002 	andeq	r0, r0, r2
      tickstart = HAL_GetTick();
     29c:	00000014 	andeq	r0, r0, r4, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	000001e4 	andeq	r0, r0, r4, ror #3
     2a4:	0800086e 	stmdaeq	r0, {r1, r2, r3, r5, r6, fp}
     2a8:	00000008 	andeq	r0, r0, r8
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     2b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     2b4:	00000014 	andeq	r0, r0, r4, lsl r0
          return HAL_TIMEOUT;
     2b8:	000001e4 	andeq	r0, r0, r4, ror #3
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
     2c0:	00000010 	andeq	r0, r0, r0, lsl r0
     2c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00018e02 	andeq	r8, r1, r2, lsl #28
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	0000000c 	andeq	r0, r0, ip
     2d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2d4:	7c020001 	stcvc	0, cr0, [r2], {1}
      tickstart = HAL_GetTick();
     2d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00000014 	andeq	r0, r0, r4, lsl r0
     2e0:	000002cc 	andeq	r0, r0, ip, asr #5
     2e4:	08000888 	stmdaeq	r0, {r3, r7, fp}
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00000038 	andeq	r0, r0, r8, lsr r0
     2ec:	57080e41 	strpl	r0, [r8, -r1, asr #28]
          return HAL_TIMEOUT;
     2f0:	0000000e 	andeq	r0, r0, lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	0000000c 	andeq	r0, r0, ip
     2f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2fc:	7c020001 	stcvc	0, cr0, [r2], {1}
     300:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     304:	0000000c 	andeq	r0, r0, ip
     308:	000002f4 	strdeq	r0, [r0], -r4
     30c:	00000000 	andeq	r0, r0, r0
     310:	00000020 	andeq	r0, r0, r0, lsr #32
      tickstart = HAL_GetTick();
     314:	0000000c 	andeq	r0, r0, ip
     318:	000002f4 	strdeq	r0, [r0], -r4
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	080008c0 	stmdaeq	r0, {r6, r7, fp}
     320:	0000005c 	andeq	r0, r0, ip, asr r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	0000000c 	andeq	r0, r0, ip
     328:	000002f4 	strdeq	r0, [r0], -r4
     32c:	0800091c 	stmdaeq	r0, {r2, r3, r4, r8, fp}
     330:	00000060 	andeq	r0, r0, r0, rrx
          return HAL_TIMEOUT;
     334:	00000018 	andeq	r0, r0, r8, lsl r0
    if(pwrclkchanged == SET)
     338:	000002f4 	strdeq	r0, [r0], -r4
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0800097c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	00000174 	andeq	r0, r0, r4, ror r1
     344:	83100e41 	tsthi	r0, #1040	; 0x410
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     34c:	00018e02 	andeq	r8, r1, r2, lsl #28
     350:	00000028 	andeq	r0, r0, r8, lsr #32
     354:	000002f4 	strdeq	r0, [r0], -r4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	08000af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0000008a 	andeq	r0, r0, sl, lsl #1
     360:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	86068507 	strhi	r8, [r6], -r7, lsl #10
     368:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     370:	280e4101 	stmdacs	lr, {r0, r8, lr}
     374:	1c0e0a7c 			; <UNDEFINED> instruction: 0x1c0e0a7c
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00000b42 	andeq	r0, r0, r2, asr #22
     37c:	0000000c 	andeq	r0, r0, ip
     380:	000002f4 	strdeq	r0, [r0], -r4
     384:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000002 	andeq	r0, r0, r2
     38c:	0000001c 	andeq	r0, r0, ip, lsl r0
        __HAL_RCC_PLL_DISABLE();
     390:	000002f4 	strdeq	r0, [r0], -r4
     394:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
        tickstart = HAL_GetTick();
     398:	0000012c 	andeq	r0, r0, ip, lsr #2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     3a0:	02018e02 	andeq	r8, r1, #2, 28
     3a4:	c4000e8b 	strgt	r0, [r0], #-3723	; 0xfffff175
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	000000ce 	andeq	r0, r0, lr, asr #1
     3ac:	0000001c 	andeq	r0, r0, ip, lsl r0
            return HAL_TIMEOUT;
     3b0:	000002f4 	strdeq	r0, [r0], -r4
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00000000 	andeq	r0, r0, r0
     3b8:	000000e0 	andeq	r0, r0, r0, ror #1
     3bc:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	02018e02 	andeq	r8, r1, #2, 28
     3c4:	c4000e66 	strgt	r0, [r0], #-3686	; 0xfffff19a
     3c8:	000000ce 	andeq	r0, r0, lr, asr #1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00000020 	andeq	r0, r0, r0, lsr #32
     3d0:	000002f4 	strdeq	r0, [r0], -r4
     3d4:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	000000fc 	strdeq	r0, [r0], -ip
     3dc:	83100e43 	tsthi	r0, #1072	; 0x430
     3e0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	02018e02 	andeq	r8, r1, #2, 28
     3e8:	c3000e75 	movwgt	r0, #3701	; 0xe75
     3ec:	00cec5c4 	sbceq	ip, lr, r4, asr #11
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00000020 	andeq	r0, r0, r0, lsr #32
     3f4:	000002f4 	strdeq	r0, [r0], -r4
     3f8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	00000124 	andeq	r0, r0, r4, lsr #2
     400:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     404:	86038504 	strhi	r8, [r3], -r4, lsl #10
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	02018e02 	andeq	r8, r1, #2, 28
     40c:	c4000e87 	strgt	r0, [r0], #-3719	; 0xfffff179
     410:	00cec6c5 	sbceq	ip, lr, r5, asr #13
     414:	0000000c 	andeq	r0, r0, ip
     418:	000002f4 	strdeq	r0, [r0], -r4
     41c:	00000000 	andeq	r0, r0, r0
     420:	00000002 	andeq	r0, r0, r2
     424:	00000018 	andeq	r0, r0, r8, lsl r0
        __HAL_RCC_PLL_ENABLE();
     428:	000002f4 	strdeq	r0, [r0], -r4
     42c:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     430:	00000078 	andeq	r0, r0, r8, ror r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     438:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
     43c:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000028 	andeq	r0, r0, r8, lsr #32
     444:	000002f4 	strdeq	r0, [r0], -r4
            return HAL_TIMEOUT;
     448:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
  return HAL_OK;
     44c:	000000cc 	andeq	r0, r0, ip, asr #1
        __HAL_RCC_PLL_DISABLE();
     450:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     454:	86058506 	strhi	r8, [r5], -r6, lsl #10
        tickstart = HAL_GetTick();
     458:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	41018e02 	tstmi	r1, r2, lsl #28
     460:	5f02200e 	svcpl	0x0002200e
     464:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0000000b 	andeq	r0, r0, fp
     46c:	00000028 	andeq	r0, r0, r8, lsr #32
            return HAL_TIMEOUT;
     470:	000002f4 	strdeq	r0, [r0], -r4
  return HAL_OK;
     474:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	000000d2 	ldrdeq	r0, [r0], -r2
        pll_config = RCC->PLLCFGR;
     47c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	86058506 	strhi	r8, [r5], -r6, lsl #10
     484:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	41018e02 	tstmi	r1, r2, lsl #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	6202200e 	andvs	r2, r2, #14
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	0000000b 	andeq	r0, r0, fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0000000c 	andeq	r0, r0, ip
     49c:	000002f4 	strdeq	r0, [r0], -r4
     4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00000038 	andeq	r0, r0, r8, lsr r0
     4a8:	00000018 	andeq	r0, r0, r8, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	000002f4 	strdeq	r0, [r0], -r4
     4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000084 	andeq	r0, r0, r4, lsl #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	83100e41 	tsthi	r0, #1040	; 0x410
     4bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
  return HAL_OK;
     4c0:	00018e02 	andeq	r8, r1, r2, lsl #28
}
     4c4:	0000000c 	andeq	r0, r0, ip
        return HAL_ERROR;
     4c8:	000002f4 	strdeq	r0, [r0], -r4
        return HAL_ERROR;
     4cc:	00000000 	andeq	r0, r0, r0
}
     4d0:	00000094 	muleq	r0, r4, r0
        return HAL_ERROR;
     4d4:	00000014 	andeq	r0, r0, r4, lsl r0
          return HAL_ERROR;
     4d8:	000002f4 	strdeq	r0, [r0], -r4
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00000096 	muleq	r0, r6, r0
     4e4:	70080e5a 	andvc	r0, r8, sl, asr lr
     4e8:	0000000e 	andeq	r0, r0, lr
     4ec:	00000014 	andeq	r0, r0, r4, lsl r0
     4f0:	000002f4 	strdeq	r0, [r0], -r4
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	00000084 	andeq	r0, r0, r4, lsl #1
     4fc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     500:	00018e02 	andeq	r8, r1, r2, lsl #28
     504:	00000028 	andeq	r0, r0, r8, lsr #32
     508:	000002f4 	strdeq	r0, [r0], -r4
     50c:	00000000 	andeq	r0, r0, r0
     510:	00000120 	andeq	r0, r0, r0, lsr #2
     514:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     518:	86068507 	strhi	r8, [r6], -r7, lsl #10
     51c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     520:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     524:	280e4101 	stmdacs	lr, {r0, r8, lr}
     528:	0e0a8902 	vmlaeq.f16	s16, s20, s4	; <UNPREDICTABLE>
     52c:	000b421c 	andeq	r4, fp, ip, lsl r2
     530:	0000000c 	andeq	r0, r0, ip
     534:	000002f4 	strdeq	r0, [r0], -r4
     538:	00000000 	andeq	r0, r0, r0
     53c:	00000004 	andeq	r0, r0, r4
     540:	00000014 	andeq	r0, r0, r4, lsl r0
     544:	000002f4 	strdeq	r0, [r0], -r4
     548:	00000000 	andeq	r0, r0, r0
     54c:	000000f2 	strdeq	r0, [r0], -r2
     550:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     554:	00018e02 	andeq	r8, r1, r2, lsl #28
     558:	00000014 	andeq	r0, r0, r4, lsl r0
     55c:	000002f4 	strdeq	r0, [r0], -r4
     560:	00000000 	andeq	r0, r0, r0
     564:	0000006c 	andeq	r0, r0, ip, rrx
     568:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     56c:	00018e02 	andeq	r8, r1, r2, lsl #28
     570:	00000014 	andeq	r0, r0, r4, lsl r0
     574:	000002f4 	strdeq	r0, [r0], -r4
     578:	00000000 	andeq	r0, r0, r0
     57c:	000000a6 	andeq	r0, r0, r6, lsr #1
     580:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     584:	00018e02 	andeq	r8, r1, r2, lsl #28
     588:	0000000c 	andeq	r0, r0, ip
     58c:	000002f4 	strdeq	r0, [r0], -r4
     590:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
     594:	00000002 	andeq	r0, r0, r2
     598:	00000014 	andeq	r0, r0, r4, lsl r0
     59c:	000002f4 	strdeq	r0, [r0], -r4
     5a0:	00000000 	andeq	r0, r0, r0
     5a4:	0000004c 	andeq	r0, r0, ip, asr #32
     5a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b0:	00000014 	andeq	r0, r0, r4, lsl r0
     5b4:	000002f4 	strdeq	r0, [r0], -r4
     5b8:	08000d76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, fp}
     5bc:	0000001a 	andeq	r0, r0, sl, lsl r0
     5c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5c8:	0000000c 	andeq	r0, r0, ip
     5cc:	000002f4 	strdeq	r0, [r0], -r4
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	00000002 	andeq	r0, r0, r2
     5d8:	00000014 	andeq	r0, r0, r4, lsl r0
     5dc:	000002f4 	strdeq	r0, [r0], -r4
     5e0:	00000000 	andeq	r0, r0, r0
     5e4:	0000000a 	andeq	r0, r0, sl
     5e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f0:	0000000c 	andeq	r0, r0, ip
     5f4:	000002f4 	strdeq	r0, [r0], -r4
     5f8:	08000d90 	stmdaeq	r0, {r4, r7, r8, sl, fp}
     5fc:	00000002 	andeq	r0, r0, r2
     600:	0000000c 	andeq	r0, r0, ip
     604:	000002f4 	strdeq	r0, [r0], -r4
     608:	00000000 	andeq	r0, r0, r0
     60c:	00000002 	andeq	r0, r0, r2
     610:	0000000c 	andeq	r0, r0, ip
     614:	000002f4 	strdeq	r0, [r0], -r4
     618:	08000d92 	stmdaeq	r0, {r1, r4, r7, r8, sl, fp}
     61c:	00000002 	andeq	r0, r0, r2
     620:	00000014 	andeq	r0, r0, r4, lsl r0
     624:	000002f4 	strdeq	r0, [r0], -r4
     628:	00000000 	andeq	r0, r0, r0
     62c:	00000058 	andeq	r0, r0, r8, asr r0
     630:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     634:	00018e02 	andeq	r8, r1, r2, lsl #28
     638:	00000014 	andeq	r0, r0, r4, lsl r0
     63c:	000002f4 	strdeq	r0, [r0], -r4
     640:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
     644:	00000010 	andeq	r0, r0, r0, lsl r0
     648:	83080e41 	movwhi	r0, #36417	; 0x8e41
     64c:	00018e02 	andeq	r8, r1, r2, lsl #28
     650:	0000000c 	andeq	r0, r0, ip
     654:	000002f4 	strdeq	r0, [r0], -r4
     658:	00000000 	andeq	r0, r0, r0
     65c:	00000002 	andeq	r0, r0, r2
     660:	00000018 	andeq	r0, r0, r8, lsl r0
     664:	000002f4 	strdeq	r0, [r0], -r4
     668:	00000000 	andeq	r0, r0, r0
     66c:	00000124 	andeq	r0, r0, r4, lsr #2
     670:	83100e41 	tsthi	r0, #1040	; 0x410
     674:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     678:	00018e02 	andeq	r8, r1, r2, lsl #28
     67c:	00000014 	andeq	r0, r0, r4, lsl r0
     680:	000002f4 	strdeq	r0, [r0], -r4
     684:	00000000 	andeq	r0, r0, r0
     688:	0000002c 	andeq	r0, r0, ip, lsr #32
     68c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     690:	00018e02 	andeq	r8, r1, r2, lsl #28
     694:	00000014 	andeq	r0, r0, r4, lsl r0
     698:	000002f4 	strdeq	r0, [r0], -r4
     69c:	00000000 	andeq	r0, r0, r0
     6a0:	0000002c 	andeq	r0, r0, ip, lsr #32
     6a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6ac:	0000000c 	andeq	r0, r0, ip
     6b0:	000002f4 	strdeq	r0, [r0], -r4
     6b4:	00000000 	andeq	r0, r0, r0
     6b8:	00000002 	andeq	r0, r0, r2
     6bc:	00000014 	andeq	r0, r0, r4, lsl r0
     6c0:	000002f4 	strdeq	r0, [r0], -r4
     6c4:	00000000 	andeq	r0, r0, r0
     6c8:	00000080 	andeq	r0, r0, r0, lsl #1
     6cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6d4:	00000014 	andeq	r0, r0, r4, lsl r0
     6d8:	000002f4 	strdeq	r0, [r0], -r4
     6dc:	00000000 	andeq	r0, r0, r0
     6e0:	00000014 	andeq	r0, r0, r4, lsl r0
     6e4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6ec:	0000000c 	andeq	r0, r0, ip
     6f0:	000002f4 	strdeq	r0, [r0], -r4
     6f4:	00000000 	andeq	r0, r0, r0
     6f8:	00000002 	andeq	r0, r0, r2
     6fc:	00000014 	andeq	r0, r0, r4, lsl r0
     700:	000002f4 	strdeq	r0, [r0], -r4
     704:	00000000 	andeq	r0, r0, r0
     708:	000000bc 	strheq	r0, [r0], -ip
     70c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     710:	00018e02 	andeq	r8, r1, r2, lsl #28
     714:	00000014 	andeq	r0, r0, r4, lsl r0
     718:	000002f4 	strdeq	r0, [r0], -r4
     71c:	00000000 	andeq	r0, r0, r0
     720:	00000016 	andeq	r0, r0, r6, lsl r0
     724:	83080e41 	movwhi	r0, #36417	; 0x8e41
     728:	00018e02 	andeq	r8, r1, r2, lsl #28
     72c:	0000000c 	andeq	r0, r0, ip
     730:	000002f4 	strdeq	r0, [r0], -r4
     734:	08000da4 	stmdaeq	r0, {r2, r5, r7, r8, sl, fp}
     738:	00000002 	andeq	r0, r0, r2
     73c:	00000024 	andeq	r0, r0, r4, lsr #32
     740:	000002f4 	strdeq	r0, [r0], -r4
     744:	08000da6 	stmdaeq	r0, {r1, r2, r5, r7, r8, sl, fp}
     748:	000000e6 	andeq	r0, r0, r6, ror #1
     74c:	8e040e60 	cdphi	14, 0, cr0, cr4, cr0, {3}
     750:	100e4101 	andne	r4, lr, r1, lsl #2
     754:	42040e76 	andmi	r0, r4, #1888	; 0x760
     758:	53ce000e 	bicpl	r0, lr, #14
     75c:	018e100e 	orreq	r1, lr, lr
     760:	ce000e43 	cdpgt	14, 0, cr0, cr0, cr3, {2}
     764:	00000020 	andeq	r0, r0, r0, lsr #32
     768:	000002f4 	strdeq	r0, [r0], -r4
     76c:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
     770:	00000288 	andeq	r0, r0, r8, lsl #5
     774:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     778:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     77c:	180e4101 	stmdane	lr, {r0, r8, lr}
     780:	0c0e0a67 			; <UNDEFINED> instruction: 0x0c0e0a67
     784:	00000b41 	andeq	r0, r0, r1, asr #22
     788:	00000014 	andeq	r0, r0, r4, lsl r0
     78c:	000002f4 	strdeq	r0, [r0], -r4
     790:	00000000 	andeq	r0, r0, r0
     794:	0000001e 	andeq	r0, r0, lr, lsl r0
     798:	83080e41 	movwhi	r0, #36417	; 0x8e41
     79c:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a0:	00000014 	andeq	r0, r0, r4, lsl r0
     7a4:	000002f4 	strdeq	r0, [r0], -r4
     7a8:	00000000 	andeq	r0, r0, r0
     7ac:	0000009a 	muleq	r0, sl, r0
     7b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7b8:	00000014 	andeq	r0, r0, r4, lsl r0
     7bc:	000002f4 	strdeq	r0, [r0], -r4
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	00000084 	andeq	r0, r0, r4, lsl #1
     7c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d0:	00000014 	andeq	r0, r0, r4, lsl r0
     7d4:	000002f4 	strdeq	r0, [r0], -r4
     7d8:	00000000 	andeq	r0, r0, r0
     7dc:	00000088 	andeq	r0, r0, r8, lsl #1
     7e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7e8:	00000014 	andeq	r0, r0, r4, lsl r0
     7ec:	000002f4 	strdeq	r0, [r0], -r4
     7f0:	00000000 	andeq	r0, r0, r0
     7f4:	00000088 	andeq	r0, r0, r8, lsl #1
     7f8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     800:	0000000c 	andeq	r0, r0, ip
     804:	000002f4 	strdeq	r0, [r0], -r4
     808:	00000000 	andeq	r0, r0, r0
     80c:	00000036 	andeq	r0, r0, r6, lsr r0
     810:	0000000c 	andeq	r0, r0, ip
     814:	000002f4 	strdeq	r0, [r0], -r4
     818:	00000000 	andeq	r0, r0, r0
     81c:	00000036 	andeq	r0, r0, r6, lsr r0
     820:	0000000c 	andeq	r0, r0, ip
     824:	000002f4 	strdeq	r0, [r0], -r4
     828:	00000000 	andeq	r0, r0, r0
     82c:	0000000c 	andeq	r0, r0, ip
     830:	0000000c 	andeq	r0, r0, ip
     834:	000002f4 	strdeq	r0, [r0], -r4
     838:	00000000 	andeq	r0, r0, r0
     83c:	00000004 	andeq	r0, r0, r4
     840:	0000000c 	andeq	r0, r0, ip
     844:	000002f4 	strdeq	r0, [r0], -r4
     848:	00000000 	andeq	r0, r0, r0
     84c:	00000036 	andeq	r0, r0, r6, lsr r0
     850:	00000014 	andeq	r0, r0, r4, lsl r0
     854:	000002f4 	strdeq	r0, [r0], -r4
     858:	00000000 	andeq	r0, r0, r0
     85c:	00000026 	andeq	r0, r0, r6, lsr #32
     860:	83080e41 	movwhi	r0, #36417	; 0x8e41
     864:	00018e02 	andeq	r8, r1, r2, lsl #28
     868:	00000028 	andeq	r0, r0, r8, lsr #32
     86c:	000002f4 	strdeq	r0, [r0], -r4
     870:	00000000 	andeq	r0, r0, r0
     874:	00000066 	andeq	r0, r0, r6, rrx
     878:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     87c:	41018e02 	tstmi	r1, r2, lsl #28
     880:	0a45100e 	beq	11448c0 <_Min_Heap_Size+0x11440c0>
     884:	0b41080e 	bleq	10428c4 <_Min_Heap_Size+0x10420c4>
     888:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     88c:	100e42ce 	andne	r4, lr, lr, asr #5
     890:	018e0284 	orreq	r0, lr, r4, lsl #5
     894:	0000001c 	andeq	r0, r0, ip, lsl r0
     898:	000002f4 	strdeq	r0, [r0], -r4
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8a4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     8a8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     8ac:	180e4101 	stmdane	lr, {r0, r8, lr}
     8b0:	0c0e4902 			; <UNDEFINED> instruction: 0x0c0e4902
     8b4:	00000014 	andeq	r0, r0, r4, lsl r0
     8b8:	000002f4 	strdeq	r0, [r0], -r4
     8bc:	00000000 	andeq	r0, r0, r0
     8c0:	00000026 	andeq	r0, r0, r6, lsr #32
     8c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8cc:	00000028 	andeq	r0, r0, r8, lsr #32
     8d0:	000002f4 	strdeq	r0, [r0], -r4
     8d4:	00000000 	andeq	r0, r0, r0
     8d8:	00000066 	andeq	r0, r0, r6, rrx
     8dc:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     8e0:	41018e02 	tstmi	r1, r2, lsl #28
     8e4:	0a45100e 	beq	1144924 <_Min_Heap_Size+0x1144124>
     8e8:	0b41080e 	bleq	1042928 <_Min_Heap_Size+0x1042128>
     8ec:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     8f0:	100e42ce 	andne	r4, lr, lr, asr #5
     8f4:	018e0284 	orreq	r0, lr, r4, lsl #5
     8f8:	0000000c 	andeq	r0, r0, ip
     8fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     900:	7c020001 	stcvc	0, cr0, [r2], {1}
     904:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     908:	0000000c 	andeq	r0, r0, ip
     90c:	000008f8 	strdeq	r0, [r0], -r8
     910:	00000000 	andeq	r0, r0, r0
     914:	00000004 	andeq	r0, r0, r4
     918:	00000034 	andeq	r0, r0, r4, lsr r0
     91c:	000008f8 	strdeq	r0, [r0], -r8
     920:	00000000 	andeq	r0, r0, r0
     924:	000004fc 	strdeq	r0, [r0], -ip
     928:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     92c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     930:	41018e02 	tstmi	r1, r2, lsl #28
     934:	5c03180e 	stcpl	8, cr1, [r3], {14}
     938:	c4000e02 	strgt	r0, [r0], #-3586	; 0xfffff1fe
     93c:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     940:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     944:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     948:	0a46018e 	beq	1180f88 <_Min_Heap_Size+0x1180788>
     94c:	0b41100e 	bleq	104498c <_Min_Heap_Size+0x104418c>
     950:	00000020 	andeq	r0, r0, r0, lsr #32
     954:	000008f8 	strdeq	r0, [r0], -r8
     958:	00000000 	andeq	r0, r0, r0
     95c:	00000118 	andeq	r0, r0, r8, lsl r1
     960:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     964:	86038504 	strhi	r8, [r3], -r4, lsl #10
     968:	41018e02 	tstmi	r1, r2, lsl #28
     96c:	0a7e300e 	beq	1f8c9ac <_Min_Heap_Size+0x1f8c1ac>
     970:	0b41100e 	bleq	10449b0 <_Min_Heap_Size+0x10441b0>
     974:	0000000c 	andeq	r0, r0, ip
     978:	000008f8 	strdeq	r0, [r0], -r8
     97c:	00000000 	andeq	r0, r0, r0
     980:	0000000c 	andeq	r0, r0, ip
     984:	0000000c 	andeq	r0, r0, ip
     988:	000008f8 	strdeq	r0, [r0], -r8
     98c:	00000000 	andeq	r0, r0, r0
     990:	0000000c 	andeq	r0, r0, ip
     994:	00000014 	andeq	r0, r0, r4, lsl r0
     998:	000008f8 	strdeq	r0, [r0], -r8
     99c:	00000000 	andeq	r0, r0, r0
     9a0:	000000d4 	ldrdeq	r0, [r0], -r4
     9a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     9ac:	0000002c 	andeq	r0, r0, ip, lsr #32
     9b0:	000008f8 	strdeq	r0, [r0], -r8
     9b4:	00000000 	andeq	r0, r0, r0
     9b8:	0000021c 	andeq	r0, r0, ip, lsl r2
     9bc:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     9c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9c4:	02018e02 	andeq	r8, r1, #2, 28
     9c8:	c4000ef6 	strgt	r0, [r0], #-3830	; 0xfffff10a
     9cc:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     9d0:	0484100e 	streq	r1, [r4], #14
     9d4:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     9d8:	0000018e 	andeq	r0, r0, lr, lsl #3
     9dc:	0000000c 	andeq	r0, r0, ip
     9e0:	000008f8 	strdeq	r0, [r0], -r8
     9e4:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
     9e8:	0000000c 	andeq	r0, r0, ip
     9ec:	00000014 	andeq	r0, r0, r4, lsl r0
     9f0:	000008f8 	strdeq	r0, [r0], -r8
     9f4:	08001120 	stmdaeq	r0, {r5, r8, ip}
     9f8:	00000020 	andeq	r0, r0, r0, lsr #32
     9fc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a00:	00018e02 	andeq	r8, r1, r2, lsl #28
     a04:	00000014 	andeq	r0, r0, r4, lsl r0
     a08:	000008f8 	strdeq	r0, [r0], -r8
     a0c:	08001140 	stmdaeq	r0, {r6, r8, ip}
     a10:	00000020 	andeq	r0, r0, r0, lsr #32
     a14:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a18:	00018e02 	andeq	r8, r1, r2, lsl #28
     a1c:	0000000c 	andeq	r0, r0, ip
     a20:	000008f8 	strdeq	r0, [r0], -r8
     a24:	00000000 	andeq	r0, r0, r0
     a28:	000000cc 	andeq	r0, r0, ip, asr #1
     a2c:	0000000c 	andeq	r0, r0, ip
     a30:	000008f8 	strdeq	r0, [r0], -r8
     a34:	00000000 	andeq	r0, r0, r0
     a38:	0000003c 	andeq	r0, r0, ip, lsr r0
     a3c:	0000000c 	andeq	r0, r0, ip
     a40:	000008f8 	strdeq	r0, [r0], -r8
     a44:	00000000 	andeq	r0, r0, r0
     a48:	00000002 	andeq	r0, r0, r2
     a4c:	00000014 	andeq	r0, r0, r4, lsl r0
     a50:	000008f8 	strdeq	r0, [r0], -r8
     a54:	00000000 	andeq	r0, r0, r0
     a58:	00000020 	andeq	r0, r0, r0, lsr #32
     a5c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a60:	00018e02 	andeq	r8, r1, r2, lsl #28
     a64:	0000000c 	andeq	r0, r0, ip
     a68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a74:	00000024 	andeq	r0, r0, r4, lsr #32
     a78:	00000a64 	andeq	r0, r0, r4, ror #20
     a7c:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
     a80:	000002e8 	andeq	r0, r0, r8, ror #5
     a84:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     a88:	86058506 	strhi	r8, [r5], -r6, lsl #10
     a8c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     a90:	41018e02 	tstmi	r1, r2, lsl #28
     a94:	6703200e 	strvs	r2, [r3, -lr]
     a98:	00180e01 	andseq	r0, r8, r1, lsl #28
     a9c:	0000001c 	andeq	r0, r0, ip, lsl r0
     aa0:	00000a64 	andeq	r0, r0, r4, ror #20
     aa4:	00000000 	andeq	r0, r0, r0
     aa8:	00000184 	andeq	r0, r0, r4, lsl #3
     aac:	83180e41 	tsthi	r8, #1040	; 0x410
     ab0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     ab4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     ab8:	00018e02 	andeq	r8, r1, r2, lsl #28
     abc:	00000018 	andeq	r0, r0, r8, lsl r0
     ac0:	00000a64 	andeq	r0, r0, r4, ror #20
     ac4:	00000000 	andeq	r0, r0, r0
     ac8:	00000028 	andeq	r0, r0, r8, lsr #32
     acc:	83100e41 	tsthi	r0, #1040	; 0x410
     ad0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     ad4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad8:	00000018 	andeq	r0, r0, r8, lsl r0
     adc:	00000a64 	andeq	r0, r0, r4, ror #20
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00000038 	andeq	r0, r0, r8, lsr r0
     ae8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     aec:	86038504 	strhi	r8, [r3], -r4, lsl #10
     af0:	00018e02 	andeq	r8, r1, r2, lsl #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	00000a64 	andeq	r0, r0, r4, ror #20
     afc:	00000000 	andeq	r0, r0, r0
     b00:	0000002c 	andeq	r0, r0, ip, lsr #32
     b04:	83100e41 	tsthi	r0, #1040	; 0x410
     b08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b10:	00000020 	andeq	r0, r0, r0, lsr #32
     b14:	00000a64 	andeq	r0, r0, r4, ror #20
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	00000048 	andeq	r0, r0, r8, asr #32
     b20:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b24:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b28:	180e4101 	stmdane	lr, {r0, r8, lr}
     b2c:	0c0e0a56 			; <UNDEFINED> instruction: 0x0c0e0a56
     b30:	00000b41 	andeq	r0, r0, r1, asr #22
     b34:	0000000c 	andeq	r0, r0, ip
     b38:	00000a64 	andeq	r0, r0, r4, ror #20
     b3c:	00000000 	andeq	r0, r0, r0
     b40:	00000002 	andeq	r0, r0, r2
     b44:	00000014 	andeq	r0, r0, r4, lsl r0
     b48:	00000a64 	andeq	r0, r0, r4, ror #20
     b4c:	00000000 	andeq	r0, r0, r0
     b50:	0000001c 	andeq	r0, r0, ip, lsl r0
     b54:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b58:	00018e02 	andeq	r8, r1, r2, lsl #28
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b64:	7c020001 	stcvc	0, cr0, [r2], {1}
     b68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b6c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b70:	00000b5c 	andeq	r0, r0, ip, asr fp
     b74:	00000000 	andeq	r0, r0, r0
     b78:	0000002c 	andeq	r0, r0, ip, lsr #32
     b7c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     b80:	4f018502 	svcmi	0x00018502
     b84:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     b88:	000b4100 	andeq	r4, fp, r0, lsl #2
     b8c:	00000018 	andeq	r0, r0, r8, lsl r0
     b90:	00000b5c 	andeq	r0, r0, ip, asr fp
     b94:	00000000 	andeq	r0, r0, r0
     b98:	00000044 	andeq	r0, r0, r4, asr #32
     b9c:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     ba0:	c40a5501 	strgt	r5, [sl], #-1281	; 0xfffffaff
     ba4:	0b41000e 	bleq	1040be4 <_Min_Heap_Size+0x10403e4>
     ba8:	0000000c 	andeq	r0, r0, ip
     bac:	00000b5c 	andeq	r0, r0, ip, asr fp
     bb0:	00000000 	andeq	r0, r0, r0
     bb4:	0000008e 	andeq	r0, r0, lr, lsl #1
     bb8:	00000018 	andeq	r0, r0, r8, lsl r0
     bbc:	00000b5c 	andeq	r0, r0, ip, asr fp
     bc0:	00000000 	andeq	r0, r0, r0
     bc4:	0000028e 	andeq	r0, r0, lr, lsl #5
     bc8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     bcc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     bd0:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd4:	00000020 	andeq	r0, r0, r0, lsr #32
     bd8:	00000b5c 	andeq	r0, r0, ip, asr fp
     bdc:	00000000 	andeq	r0, r0, r0
     be0:	000000dc 	ldrdeq	r0, [r0], -ip
     be4:	83100e43 	tsthi	r0, #1072	; 0x430
     be8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     bec:	02018e02 	andeq	r8, r1, #2, 28
     bf0:	c3000e64 	movwgt	r0, #3684	; 0xe64
     bf4:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     bf8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bfc:	00000b5c 	andeq	r0, r0, ip, asr fp
     c00:	00000000 	andeq	r0, r0, r0
     c04:	00000078 	andeq	r0, r0, r8, ror r0
     c08:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c0c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c10:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c14:	00018e02 	andeq	r8, r1, r2, lsl #28
     c18:	0000001c 	andeq	r0, r0, ip, lsl r0
     c1c:	00000b5c 	andeq	r0, r0, ip, asr fp
     c20:	00000000 	andeq	r0, r0, r0
     c24:	00000098 	muleq	r0, r8, r0
     c28:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c2c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c30:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c34:	00018e02 	andeq	r8, r1, r2, lsl #28
     c38:	00000018 	andeq	r0, r0, r8, lsl r0
     c3c:	00000b5c 	andeq	r0, r0, ip, asr fp
     c40:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
     c44:	00000094 	muleq	r0, r4, r0
     c48:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c4c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     c50:	00018e02 	andeq	r8, r1, r2, lsl #28
     c54:	0000000c 	andeq	r0, r0, ip
     c58:	00000b5c 	andeq	r0, r0, ip, asr fp
     c5c:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
     c60:	00000026 	andeq	r0, r0, r6, lsr #32
     c64:	00000020 	andeq	r0, r0, r0, lsr #32
     c68:	00000b5c 	andeq	r0, r0, ip, asr fp
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	00000128 	andeq	r0, r0, r8, lsr #2
     c74:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     c78:	86078508 	strhi	r8, [r7], -r8, lsl #10
     c7c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     c80:	8a038904 	bhi	e3098 <_Min_Heap_Size+0xe2898>
     c84:	00018e02 	andeq	r8, r1, r2, lsl #28
     c88:	00000020 	andeq	r0, r0, r0, lsr #32
     c8c:	00000b5c 	andeq	r0, r0, ip, asr fp
     c90:	00000000 	andeq	r0, r0, r0
     c94:	000001dc 	ldrdeq	r0, [r0], -ip
     c98:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     c9c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     ca0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     ca4:	200e4101 	andcs	r4, lr, r1, lsl #2
     ca8:	140ee702 	strne	lr, [lr], #-1794	; 0xfffff8fe
     cac:	0000000c 	andeq	r0, r0, ip
     cb0:	00000b5c 	andeq	r0, r0, ip, asr fp
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	0000005a 	andeq	r0, r0, sl, asr r0
     cbc:	0000000c 	andeq	r0, r0, ip
     cc0:	00000b5c 	andeq	r0, r0, ip, asr fp
     cc4:	00000000 	andeq	r0, r0, r0
     cc8:	0000006e 	andeq	r0, r0, lr, rrx
     ccc:	0000000c 	andeq	r0, r0, ip
     cd0:	00000b5c 	andeq	r0, r0, ip, asr fp
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	00000006 	andeq	r0, r0, r6
     cdc:	0000000c 	andeq	r0, r0, ip
     ce0:	00000b5c 	andeq	r0, r0, ip, asr fp
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	00000004 	andeq	r0, r0, r4
     cec:	0000000c 	andeq	r0, r0, ip
     cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     cf4:	7c020001 	stcvc	0, cr0, [r2], {1}
     cf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cfc:	00000014 	andeq	r0, r0, r4, lsl r0
     d00:	00000cec 	andeq	r0, r0, ip, ror #25
     d04:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
     d08:	0000003c 	andeq	r0, r0, ip, lsr r0
     d0c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	00000018 	andeq	r0, r0, r8, lsl r0
     d18:	00000cec 	andeq	r0, r0, ip, ror #25
     d1c:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
     d20:	0000008c 	andeq	r0, r0, ip, lsl #1
     d24:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d28:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d30:	00000014 	andeq	r0, r0, r4, lsl r0
     d34:	00000cec 	andeq	r0, r0, ip, ror #25
     d38:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
     d3c:	00000030 	andeq	r0, r0, r0, lsr r0
     d40:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d44:	00018e02 	andeq	r8, r1, r2, lsl #28
     d48:	00000014 	andeq	r0, r0, r4, lsl r0
     d4c:	00000cec 	andeq	r0, r0, ip, ror #25
     d50:	00000000 	andeq	r0, r0, r0
     d54:	00000038 	andeq	r0, r0, r8, lsr r0
     d58:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d60:	0000000c 	andeq	r0, r0, ip
     d64:	00000cec 	andeq	r0, r0, ip, ror #25
     d68:	00000000 	andeq	r0, r0, r0
     d6c:	00000024 	andeq	r0, r0, r4, lsr #32
     d70:	0000000c 	andeq	r0, r0, ip
     d74:	00000cec 	andeq	r0, r0, ip, ror #25
     d78:	080015fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip}
     d7c:	00000028 	andeq	r0, r0, r8, lsr #32
     d80:	0000000c 	andeq	r0, r0, ip
     d84:	00000cec 	andeq	r0, r0, ip, ror #25
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d90:	0000000c 	andeq	r0, r0, ip
     d94:	00000cec 	andeq	r0, r0, ip, ror #25
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000020 	andeq	r0, r0, r0, lsr #32
     da0:	00000014 	andeq	r0, r0, r4, lsl r0
     da4:	00000cec 	andeq	r0, r0, ip, ror #25
     da8:	00000000 	andeq	r0, r0, r0
     dac:	00000128 	andeq	r0, r0, r8, lsr #2
     db0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     db4:	00018e02 	andeq	r8, r1, r2, lsl #28
     db8:	0000000c 	andeq	r0, r0, ip
     dbc:	00000cec 	andeq	r0, r0, ip, ror #25
     dc0:	00000000 	andeq	r0, r0, r0
     dc4:	00000006 	andeq	r0, r0, r6
     dc8:	0000000c 	andeq	r0, r0, ip
     dcc:	00000cec 	andeq	r0, r0, ip, ror #25
     dd0:	00000000 	andeq	r0, r0, r0
     dd4:	00000010 	andeq	r0, r0, r0, lsl r0
     dd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ddc:	00000cec 	andeq	r0, r0, ip, ror #25
     de0:	00000000 	andeq	r0, r0, r0
     de4:	0000007c 	andeq	r0, r0, ip, ror r0
     de8:	83180e41 	tsthi	r8, #1040	; 0x410
     dec:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     df0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     df4:	00018e02 	andeq	r8, r1, r2, lsl #28
     df8:	00000014 	andeq	r0, r0, r4, lsl r0
     dfc:	00000cec 	andeq	r0, r0, ip, ror #25
     e00:	00000000 	andeq	r0, r0, r0
     e04:	00000034 	andeq	r0, r0, r4, lsr r0
     e08:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e10:	00000014 	andeq	r0, r0, r4, lsl r0
     e14:	00000cec 	andeq	r0, r0, ip, ror #25
     e18:	00000000 	andeq	r0, r0, r0
     e1c:	0000003c 	andeq	r0, r0, ip, lsr r0
     e20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e24:	00018e02 	andeq	r8, r1, r2, lsl #28
     e28:	00000014 	andeq	r0, r0, r4, lsl r0
     e2c:	00000cec 	andeq	r0, r0, ip, ror #25
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00000034 	andeq	r0, r0, r4, lsr r0
     e38:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e40:	00000014 	andeq	r0, r0, r4, lsl r0
     e44:	00000cec 	andeq	r0, r0, ip, ror #25
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	0000003c 	andeq	r0, r0, ip, lsr r0
     e50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e54:	00018e02 	andeq	r8, r1, r2, lsl #28
     e58:	00000014 	andeq	r0, r0, r4, lsl r0
     e5c:	00000cec 	andeq	r0, r0, ip, ror #25
     e60:	00000000 	andeq	r0, r0, r0
     e64:	0000003c 	andeq	r0, r0, ip, lsr r0
     e68:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e70:	0000000c 	andeq	r0, r0, ip
     e74:	00000cec 	andeq	r0, r0, ip, ror #25
     e78:	00000000 	andeq	r0, r0, r0
     e7c:	00000002 	andeq	r0, r0, r2
     e80:	00000014 	andeq	r0, r0, r4, lsl r0
     e84:	00000cec 	andeq	r0, r0, ip, ror #25
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	00000008 	andeq	r0, r0, r8
     e90:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e94:	00018e02 	andeq	r8, r1, r2, lsl #28
     e98:	0000000c 	andeq	r0, r0, ip
     e9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ea0:	7c020001 	stcvc	0, cr0, [r2], {1}
     ea4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ea8:	0000000c 	andeq	r0, r0, ip
     eac:	00000e98 	muleq	r0, r8, lr
     eb0:	00000000 	andeq	r0, r0, r0
     eb4:	00000002 	andeq	r0, r0, r2
     eb8:	0000000c 	andeq	r0, r0, ip
     ebc:	00000e98 	muleq	r0, r8, lr
     ec0:	00000000 	andeq	r0, r0, r0
     ec4:	00000002 	andeq	r0, r0, r2
     ec8:	00000014 	andeq	r0, r0, r4, lsl r0
     ecc:	00000e98 	muleq	r0, r8, lr
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	0000003c 	andeq	r0, r0, ip, lsr r0
     ed8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	00000014 	andeq	r0, r0, r4, lsl r0
     ee4:	00000e98 	muleq	r0, r8, lr
     ee8:	08001624 	stmdaeq	r0, {r2, r5, r9, sl, ip}
     eec:	0000004c 	andeq	r0, r0, ip, asr #32
     ef0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ef4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ef8:	00000014 	andeq	r0, r0, r4, lsl r0
     efc:	00000e98 	muleq	r0, r8, lr
     f00:	08001670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip}
     f04:	00000034 	andeq	r0, r0, r4, lsr r0
     f08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f10:	0000000c 	andeq	r0, r0, ip
     f14:	00000e98 	muleq	r0, r8, lr
     f18:	080016a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, ip}
     f1c:	00000018 	andeq	r0, r0, r8, lsl r0
     f20:	0000000c 	andeq	r0, r0, ip
     f24:	00000e98 	muleq	r0, r8, lr
     f28:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
     f2c:	0000000c 	andeq	r0, r0, ip
     f30:	0000000c 	andeq	r0, r0, ip
     f34:	00000e98 	muleq	r0, r8, lr
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	0000000c 	andeq	r0, r0, ip
     f40:	00000018 	andeq	r0, r0, r8, lsl r0
     f44:	00000e98 	muleq	r0, r8, lr
     f48:	00000000 	andeq	r0, r0, r0
     f4c:	00000048 	andeq	r0, r0, r8, asr #32
     f50:	83100e41 	tsthi	r0, #1040	; 0x410
     f54:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f58:	00018e02 	andeq	r8, r1, r2, lsl #28
     f5c:	0000000c 	andeq	r0, r0, ip
     f60:	00000e98 	muleq	r0, r8, lr
     f64:	00000000 	andeq	r0, r0, r0
     f68:	0000000c 	andeq	r0, r0, ip
     f6c:	00000018 	andeq	r0, r0, r8, lsl r0
     f70:	00000e98 	muleq	r0, r8, lr
     f74:	080016c8 	stmdaeq	r0, {r3, r6, r7, r9, sl, ip}
     f78:	00000028 	andeq	r0, r0, r8, lsr #32
     f7c:	83100e41 	tsthi	r0, #1040	; 0x410
     f80:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f84:	00018e02 	andeq	r8, r1, r2, lsl #28
     f88:	0000000c 	andeq	r0, r0, ip
     f8c:	00000e98 	muleq	r0, r8, lr
     f90:	00000000 	andeq	r0, r0, r0
     f94:	0000000e 	andeq	r0, r0, lr
     f98:	0000000c 	andeq	r0, r0, ip
     f9c:	00000e98 	muleq	r0, r8, lr
     fa0:	00000000 	andeq	r0, r0, r0
     fa4:	0000000e 	andeq	r0, r0, lr
     fa8:	0000000c 	andeq	r0, r0, ip
     fac:	00000e98 	muleq	r0, r8, lr
     fb0:	00000000 	andeq	r0, r0, r0
     fb4:	00000008 	andeq	r0, r0, r8
     fb8:	0000000c 	andeq	r0, r0, ip
     fbc:	00000e98 	muleq	r0, r8, lr
     fc0:	00000000 	andeq	r0, r0, r0
     fc4:	0000000c 	andeq	r0, r0, ip
     fc8:	0000000c 	andeq	r0, r0, ip
     fcc:	00000e98 	muleq	r0, r8, lr
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	00000010 	andeq	r0, r0, r0, lsl r0
     fd8:	0000000c 	andeq	r0, r0, ip
     fdc:	00000e98 	muleq	r0, r8, lr
     fe0:	00000000 	andeq	r0, r0, r0
     fe4:	00000010 	andeq	r0, r0, r0, lsl r0
     fe8:	0000000c 	andeq	r0, r0, ip
     fec:	00000e98 	muleq	r0, r8, lr
     ff0:	00000000 	andeq	r0, r0, r0
     ff4:	00000010 	andeq	r0, r0, r0, lsl r0
     ff8:	0000000c 	andeq	r0, r0, ip
     ffc:	00000e98 	muleq	r0, r8, lr
    1000:	00000000 	andeq	r0, r0, r0
    1004:	00000010 	andeq	r0, r0, r0, lsl r0
    1008:	0000000c 	andeq	r0, r0, ip
    100c:	00000e98 	muleq	r0, r8, lr
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000010 	andeq	r0, r0, r0, lsl r0
    1018:	0000000c 	andeq	r0, r0, ip
    101c:	00000e98 	muleq	r0, r8, lr
    1020:	00000000 	andeq	r0, r0, r0
    1024:	00000010 	andeq	r0, r0, r0, lsl r0
    1028:	0000000c 	andeq	r0, r0, ip
    102c:	00000e98 	muleq	r0, r8, lr
    1030:	00000000 	andeq	r0, r0, r0
    1034:	00000010 	andeq	r0, r0, r0, lsl r0
    1038:	0000000c 	andeq	r0, r0, ip
    103c:	00000e98 	muleq	r0, r8, lr
    1040:	00000000 	andeq	r0, r0, r0
    1044:	00000010 	andeq	r0, r0, r0, lsl r0
    1048:	0000000c 	andeq	r0, r0, ip
    104c:	00000e98 	muleq	r0, r8, lr
    1050:	00000000 	andeq	r0, r0, r0
    1054:	00000010 	andeq	r0, r0, r0, lsl r0
    1058:	0000000c 	andeq	r0, r0, ip
    105c:	00000e98 	muleq	r0, r8, lr
    1060:	00000000 	andeq	r0, r0, r0
    1064:	0000000c 	andeq	r0, r0, ip
    1068:	0000000c 	andeq	r0, r0, ip
    106c:	00000e98 	muleq	r0, r8, lr
    1070:	00000000 	andeq	r0, r0, r0
    1074:	0000000c 	andeq	r0, r0, ip
    1078:	0000000c 	andeq	r0, r0, ip
    107c:	00000e98 	muleq	r0, r8, lr
    1080:	00000000 	andeq	r0, r0, r0
    1084:	0000000c 	andeq	r0, r0, ip
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1090:	7c020001 	stcvc	0, cr0, [r2], {1}
    1094:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1098:	0000000c 	andeq	r0, r0, ip
    109c:	00001088 	andeq	r1, r0, r8, lsl #1
    10a0:	080016f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip}
    10a4:	00000014 	andeq	r0, r0, r4, lsl r0
    10a8:	0000000c 	andeq	r0, r0, ip
    10ac:	00001088 	andeq	r1, r0, r8, lsl #1
    10b0:	00000000 	andeq	r0, r0, r0
    10b4:	000000a0 	andeq	r0, r0, r0, lsr #1
    10b8:	0000000c 	andeq	r0, r0, ip
    10bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10c0:	7c020001 	stcvc	0, cr0, [r2], {1}
    10c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10c8:	00000014 	andeq	r0, r0, r4, lsl r0
    10cc:	000010b8 	strheq	r1, [r0], -r8
    10d0:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
    10d4:	00000048 	andeq	r0, r0, r8, asr #32
    10d8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    10e0:	0000000c 	andeq	r0, r0, ip
    10e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10e8:	7c020001 	stcvc	0, cr0, [r2], {1}
    10ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10f0:	0000000c 	andeq	r0, r0, ip
    10f4:	000010e0 	andeq	r1, r0, r0, ror #1
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	00000002 	andeq	r0, r0, r2
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	000010e0 	andeq	r1, r0, r0, ror #1
    1108:	00000000 	andeq	r0, r0, r0
    110c:	00000004 	andeq	r0, r0, r4
    1110:	00000014 	andeq	r0, r0, r4, lsl r0
    1114:	000010e0 	andeq	r1, r0, r0, ror #1
    1118:	00000000 	andeq	r0, r0, r0
    111c:	00000010 	andeq	r0, r0, r0, lsl r0
    1120:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1124:	00018e02 	andeq	r8, r1, r2, lsl #28
    1128:	00000014 	andeq	r0, r0, r4, lsl r0
    112c:	000010e0 	andeq	r1, r0, r0, ror #1
    1130:	00000000 	andeq	r0, r0, r0
    1134:	0000000c 	andeq	r0, r0, ip
    1138:	83080e41 	movwhi	r0, #36417	; 0x8e41
    113c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1140:	00000018 	andeq	r0, r0, r8, lsl r0
    1144:	000010e0 	andeq	r1, r0, r0, ror #1
    1148:	0800174c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, ip}
    114c:	00000020 	andeq	r0, r0, r0, lsr #32
    1150:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1154:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1158:	00018e02 	andeq	r8, r1, r2, lsl #28
    115c:	00000018 	andeq	r0, r0, r8, lsl r0
    1160:	000010e0 	andeq	r1, r0, r0, ror #1
    1164:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    1168:	0000001c 	andeq	r0, r0, ip, lsl r0
    116c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1170:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1174:	00018e02 	andeq	r8, r1, r2, lsl #28
    1178:	0000000c 	andeq	r0, r0, ip
    117c:	000010e0 	andeq	r1, r0, r0, ror #1
    1180:	08001788 	stmdaeq	r0, {r3, r7, r8, r9, sl, ip}
    1184:	00000006 	andeq	r0, r0, r6
    1188:	0000000c 	andeq	r0, r0, ip
    118c:	000010e0 	andeq	r1, r0, r0, ror #1
    1190:	0800178e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, ip}
    1194:	0000000a 	andeq	r0, r0, sl
    1198:	0000000c 	andeq	r0, r0, ip
    119c:	000010e0 	andeq	r1, r0, r0, ror #1
    11a0:	08001798 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, ip}
    11a4:	00000004 	andeq	r0, r0, r4
    11a8:	0000000c 	andeq	r0, r0, ip
    11ac:	000010e0 	andeq	r1, r0, r0, ror #1
    11b0:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
    11b4:	00000004 	andeq	r0, r0, r4
    11b8:	0000001c 	andeq	r0, r0, ip, lsl r0
    11bc:	000010e0 	andeq	r1, r0, r0, ror #1
    11c0:	00000000 	andeq	r0, r0, r0
    11c4:	0000000a 	andeq	r0, r0, sl
    11c8:	810c0e41 	tsthi	ip, r1, asr #28
    11cc:	83028203 	movwhi	r8, #8707	; 0x2203
    11d0:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
    11d4:	00000ec1 	andeq	r0, r0, r1, asr #29
    11d8:	00000014 	andeq	r0, r0, r4, lsl r0
    11dc:	000010e0 	andeq	r1, r0, r0, ror #1
    11e0:	00000000 	andeq	r0, r0, r0
    11e4:	00000010 	andeq	r0, r0, r0, lsl r0
    11e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    11ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    11f0:	00000014 	andeq	r0, r0, r4, lsl r0
    11f4:	000010e0 	andeq	r1, r0, r0, ror #1
    11f8:	00000000 	andeq	r0, r0, r0
    11fc:	00000010 	andeq	r0, r0, r0, lsl r0
    1200:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1204:	00018e02 	andeq	r8, r1, r2, lsl #28
    1208:	0000000c 	andeq	r0, r0, ip
    120c:	000010e0 	andeq	r1, r0, r0, ror #1
    1210:	00000000 	andeq	r0, r0, r0
    1214:	00000006 	andeq	r0, r0, r6
    1218:	0000000c 	andeq	r0, r0, ip
    121c:	000010e0 	andeq	r1, r0, r0, ror #1
    1220:	00000000 	andeq	r0, r0, r0
    1224:	0000000a 	andeq	r0, r0, sl
    1228:	00000014 	andeq	r0, r0, r4, lsl r0
    122c:	000010e0 	andeq	r1, r0, r0, ror #1
    1230:	00000000 	andeq	r0, r0, r0
    1234:	00000010 	andeq	r0, r0, r0, lsl r0
    1238:	83080e41 	movwhi	r0, #36417	; 0x8e41
    123c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1240:	00000014 	andeq	r0, r0, r4, lsl r0
    1244:	000010e0 	andeq	r1, r0, r0, ror #1
    1248:	00000000 	andeq	r0, r0, r0
    124c:	00000010 	andeq	r0, r0, r0, lsl r0
    1250:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1254:	00018e02 	andeq	r8, r1, r2, lsl #28
    1258:	00000014 	andeq	r0, r0, r4, lsl r0
    125c:	000010e0 	andeq	r1, r0, r0, ror #1
    1260:	00000000 	andeq	r0, r0, r0
    1264:	00000010 	andeq	r0, r0, r0, lsl r0
    1268:	83080e41 	movwhi	r0, #36417	; 0x8e41
    126c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1270:	0000000c 	andeq	r0, r0, ip
    1274:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1278:	7c020001 	stcvc	0, cr0, [r2], {1}
    127c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1280:	00000014 	andeq	r0, r0, r4, lsl r0
    1284:	00001270 	andeq	r1, r0, r0, ror r2
    1288:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    128c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1290:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
    1294:	0000000e 	andeq	r0, r0, lr
    1298:	0000000c 	andeq	r0, r0, ip
    129c:	00001270 	andeq	r1, r0, r0, ror r2
    12a0:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    12a4:	00000036 	andeq	r0, r0, r6, lsr r0
    12a8:	00000014 	andeq	r0, r0, r4, lsl r0
    12ac:	00001270 	andeq	r1, r0, r0, ror r2
    12b0:	08001804 	stmdaeq	r0, {r2, fp, ip}
    12b4:	00000050 	andeq	r0, r0, r0, asr r0
    12b8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12c0:	00000020 	andeq	r0, r0, r0, lsr #32
    12c4:	00001270 	andeq	r1, r0, r0, ror r2
    12c8:	08001854 	stmdaeq	r0, {r2, r4, r6, fp, ip}
    12cc:	0000007c 	andeq	r0, r0, ip, ror r0
    12d0:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    12d4:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    12d8:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    12dc:	89038804 	stmdbhi	r3, {r2, fp, pc}
    12e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    12e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    12e8:	00001270 	andeq	r1, r0, r0, ror r2
    12ec:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
    12f0:	0000018c 	andeq	r0, r0, ip, lsl #3
    12f4:	83180e41 	tsthi	r8, #1040	; 0x410
    12f8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    12fc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1300:	00018e02 	andeq	r8, r1, r2, lsl #28
    1304:	0000000c 	andeq	r0, r0, ip
    1308:	00001270 	andeq	r1, r0, r0, ror r2
    130c:	00000000 	andeq	r0, r0, r0
    1310:	00000006 	andeq	r0, r0, r6
    1314:	0000000c 	andeq	r0, r0, ip
    1318:	00001270 	andeq	r1, r0, r0, ror r2
    131c:	00000000 	andeq	r0, r0, r0
    1320:	00000008 	andeq	r0, r0, r8
    1324:	0000000c 	andeq	r0, r0, ip
    1328:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    132c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1330:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1334:	0000000c 	andeq	r0, r0, ip
    1338:	00001324 	andeq	r1, r0, r4, lsr #6
    133c:	08001ab0 	stmdaeq	r0, {r4, r5, r7, r9, fp, ip}
    1340:	0000000c 	andeq	r0, r0, ip
    1344:	0000000c 	andeq	r0, r0, ip
    1348:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    134c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1350:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1354:	00000018 	andeq	r0, r0, r8, lsl r0
    1358:	00001344 	andeq	r1, r0, r4, asr #6
    135c:	08001abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, ip}
    1360:	00000048 	andeq	r0, r0, r8, asr #32
    1364:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1368:	86038504 	strhi	r8, [r3], -r4, lsl #10
    136c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1370:	0000000c 	andeq	r0, r0, ip
    1374:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1378:	7c020001 	stcvc	0, cr0, [r2], {1}
    137c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1380:	0000000c 	andeq	r0, r0, ip
    1384:	00001370 	andeq	r1, r0, r0, ror r3
    1388:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    138c:	00000010 	andeq	r0, r0, r0, lsl r0
    1390:	0000000c 	andeq	r0, r0, ip
    1394:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1398:	7c020001 	stcvc	0, cr0, [r2], {1}
    139c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13a0:	0000002c 	andeq	r0, r0, ip, lsr #32
    13a4:	00001390 	muleq	r0, r0, r3
    13a8:	00000000 	andeq	r0, r0, r0
    13ac:	00000028 	andeq	r0, r0, r8, lsr #32
    13b0:	810c0e41 	tsthi	ip, r1, asr #28
    13b4:	83028203 	movwhi	r8, #8707	; 0x2203
    13b8:	200e4101 	andcs	r4, lr, r1, lsl #2
    13bc:	048e0584 	streq	r0, [lr], #1412	; 0x584
    13c0:	42140e4e 	andsmi	r0, r4, #1248	; 0x4e0
    13c4:	0c0ec4ce 	cfstrseq	mvf12, [lr], {206}	; 0xce
    13c8:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    13cc:	0000000e 	andeq	r0, r0, lr
    13d0:	00000030 	andeq	r0, r0, r0, lsr r0
    13d4:	00001390 	muleq	r0, r0, r3
    13d8:	08001b14 	stmdaeq	r0, {r2, r4, r8, r9, fp, ip}
    13dc:	00000030 	andeq	r0, r0, r0, lsr r0
    13e0:	80100e41 	andshi	r0, r0, r1, asr #28
    13e4:	82038104 	andhi	r8, r3, #4, 2
    13e8:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    13ec:	0684200e 	streq	r2, [r4], lr
    13f0:	0e4f058e 	cdpeq	5, 4, cr0, cr15, cr14, {4}
    13f4:	c4ce4218 	strbgt	r4, [lr], #536	; 0x218
    13f8:	c341100e 	movtgt	r1, #4110	; 0x100e
    13fc:	0ec0c1c2 	acseqdm	f4, f2
    1400:	00000000 	andeq	r0, r0, r0
    1404:	0000000c 	andeq	r0, r0, ip
    1408:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    140c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1410:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1414:	00000018 	andeq	r0, r0, r8, lsl r0
    1418:	00001404 	andeq	r1, r0, r4, lsl #8
    141c:	08001b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, ip}
    1420:	000000dc 	ldrdeq	r0, [r0], -ip
    1424:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1428:	86038504 	strhi	r8, [r3], -r4, lsl #10
    142c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1430:	0000000c 	andeq	r0, r0, ip
    1434:	00001404 	andeq	r1, r0, r4, lsl #8
    1438:	08001c20 	stmdaeq	r0, {r5, sl, fp, ip}
    143c:	00000010 	andeq	r0, r0, r0, lsl r0
    1440:	0000000c 	andeq	r0, r0, ip
    1444:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1448:	7c020001 	stcvc	0, cr0, [r2], {1}
    144c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1450:	0000001c 	andeq	r0, r0, ip, lsl r0
    1454:	00001440 	andeq	r1, r0, r0, asr #8
    1458:	08001c30 	stmdaeq	r0, {r4, r5, sl, fp, ip}
    145c:	000000a4 	andeq	r0, r0, r4, lsr #1
    1460:	83180e41 	tsthi	r8, #1040	; 0x410
    1464:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1468:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    146c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1470:	0000000c 	andeq	r0, r0, ip
    1474:	00001440 	andeq	r1, r0, r0, asr #8
    1478:	00000000 	andeq	r0, r0, r0
    147c:	00000010 	andeq	r0, r0, r0, lsl r0
    1480:	0000000c 	andeq	r0, r0, ip
    1484:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1488:	7c020001 	stcvc	0, cr0, [r2], {1}
    148c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1490:	00000018 	andeq	r0, r0, r8, lsl r0
    1494:	00001480 	andeq	r1, r0, r0, lsl #9
    1498:	08001cd4 	stmdaeq	r0, {r2, r4, r6, r7, sl, fp, ip}
    149c:	000000dc 	ldrdeq	r0, [r0], -ip
    14a0:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    14a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14ac:	0000000c 	andeq	r0, r0, ip
    14b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14b4:	7c020001 	stcvc	0, cr0, [r2], {1}
    14b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    14c0:	000014ac 	andeq	r1, r0, ip, lsr #9
    14c4:	08001db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip}
    14c8:	0000010c 	andeq	r0, r0, ip, lsl #2
    14cc:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    14d0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    14d4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    14d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14dc:	00000018 	andeq	r0, r0, r8, lsl r0
    14e0:	000014ac 	andeq	r1, r0, ip, lsr #9
    14e4:	08001ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp, ip}
    14e8:	00000078 	andeq	r0, r0, r8, ror r0
    14ec:	83100e41 	tsthi	r0, #1040	; 0x410
    14f0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    14f4:	00018e02 	andeq	r8, r1, r2, lsl #28
    14f8:	0000000c 	andeq	r0, r0, ip
    14fc:	000014ac 	andeq	r1, r0, ip, lsr #9
    1500:	00000000 	andeq	r0, r0, r0
    1504:	00000024 	andeq	r0, r0, r4, lsr #32
    1508:	0000000c 	andeq	r0, r0, ip
    150c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1510:	7c020001 	stcvc	0, cr0, [r2], {1}
    1514:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1518:	00000014 	andeq	r0, r0, r4, lsl r0
    151c:	00001508 	andeq	r1, r0, r8, lsl #10
    1520:	08001f34 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, fp, ip}
    1524:	00000048 	andeq	r0, r0, r8, asr #32
    1528:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    152c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1530:	0000000c 	andeq	r0, r0, ip
    1534:	00001508 	andeq	r1, r0, r8, lsl #10
    1538:	08001f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp, ip}
    153c:	0000000c 	andeq	r0, r0, ip
    1540:	00000014 	andeq	r0, r0, r4, lsl r0
    1544:	00001508 	andeq	r1, r0, r8, lsl #10
    1548:	00000000 	andeq	r0, r0, r0
    154c:	00000018 	andeq	r0, r0, r8, lsl r0
    1550:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1554:	00018e02 	andeq	r8, r1, r2, lsl #28
    1558:	00000014 	andeq	r0, r0, r4, lsl r0
    155c:	00001508 	andeq	r1, r0, r8, lsl #10
    1560:	00000000 	andeq	r0, r0, r0
    1564:	00000018 	andeq	r0, r0, r8, lsl r0
    1568:	83080e41 	movwhi	r0, #36417	; 0x8e41
    156c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1570:	00000018 	andeq	r0, r0, r8, lsl r0
    1574:	00001508 	andeq	r1, r0, r8, lsl #10
    1578:	08001f88 	stmdaeq	r0, {r3, r7, r8, r9, sl, fp, ip}
    157c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1580:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1584:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1588:	00018e02 	andeq	r8, r1, r2, lsl #28
    158c:	0000000c 	andeq	r0, r0, ip
    1590:	00001508 	andeq	r1, r0, r8, lsl #10
    1594:	00000000 	andeq	r0, r0, r0
    1598:	0000000c 	andeq	r0, r0, ip
    159c:	0000000c 	andeq	r0, r0, ip
    15a0:	00001508 	andeq	r1, r0, r8, lsl #10
    15a4:	08001fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp, ip}
    15a8:	0000000c 	andeq	r0, r0, ip
    15ac:	0000000c 	andeq	r0, r0, ip
    15b0:	00001508 	andeq	r1, r0, r8, lsl #10
    15b4:	08001fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, ip}
    15b8:	0000000c 	andeq	r0, r0, ip
    15bc:	0000000c 	andeq	r0, r0, ip
    15c0:	00001508 	andeq	r1, r0, r8, lsl #10
    15c4:	08001fcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, fp, ip}
    15c8:	0000000c 	andeq	r0, r0, ip
    15cc:	0000000c 	andeq	r0, r0, ip
    15d0:	00001508 	andeq	r1, r0, r8, lsl #10
    15d4:	08001fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp, ip}
    15d8:	0000000c 	andeq	r0, r0, ip
    15dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    15e0:	00001508 	andeq	r1, r0, r8, lsl #10
    15e4:	08001fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
    15e8:	00000070 	andeq	r0, r0, r0, ror r0
    15ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15f0:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    15f4:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
    15f8:	000b4200 	andeq	r4, fp, r0, lsl #4
    15fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1600:	00001508 	andeq	r1, r0, r8, lsl #10
    1604:	08002054 	stmdaeq	r0, {r2, r4, r6, sp}
    1608:	0000008c 	andeq	r0, r0, ip, lsl #1
    160c:	83180e41 	tsthi	r8, #1040	; 0x410
    1610:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1614:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1618:	00018e02 	andeq	r8, r1, r2, lsl #28
    161c:	00000018 	andeq	r0, r0, r8, lsl r0
    1620:	00001508 	andeq	r1, r0, r8, lsl #10
    1624:	00000000 	andeq	r0, r0, r0
    1628:	0000001c 	andeq	r0, r0, ip, lsl r0
    162c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1630:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1634:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1638:	00000018 	andeq	r0, r0, r8, lsl r0
    163c:	00001508 	andeq	r1, r0, r8, lsl #10
    1640:	00000000 	andeq	r0, r0, r0
    1644:	0000001c 	andeq	r0, r0, ip, lsl r0
    1648:	83080e41 	movwhi	r0, #36417	; 0x8e41
    164c:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1650:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1654:	0000000c 	andeq	r0, r0, ip
    1658:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    165c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1660:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1664:	0000001c 	andeq	r0, r0, ip, lsl r0
    1668:	00001654 	andeq	r1, r0, r4, asr r6
    166c:	00000000 	andeq	r0, r0, r0
    1670:	0000003a 	andeq	r0, r0, sl, lsr r0
    1674:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1678:	86058506 	strhi	r8, [r5], -r6, lsl #10
    167c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1680:	00018e02 	andeq	r8, r1, r2, lsl #28
    1684:	00000020 	andeq	r0, r0, r0, lsr #32
    1688:	00001654 	andeq	r1, r0, r4, asr r6
    168c:	080020e0 	stmdaeq	r0, {r5, r6, r7, sp}
    1690:	0000003e 	andeq	r0, r0, lr, lsr r0
    1694:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    1698:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    169c:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    16a0:	89038804 	stmdbhi	r3, {r2, fp, pc}
    16a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    16a8:	0000000c 	andeq	r0, r0, ip
    16ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16b0:	7c020001 	stcvc	0, cr0, [r2], {1}
    16b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16b8:	0000000c 	andeq	r0, r0, ip
    16bc:	000016a8 	andeq	r1, r0, r8, lsr #13
    16c0:	00000000 	andeq	r0, r0, r0
    16c4:	00000002 	andeq	r0, r0, r2
    16c8:	0000000c 	andeq	r0, r0, ip
    16cc:	000016a8 	andeq	r1, r0, r8, lsr #13
    16d0:	0800211e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sp}
    16d4:	00000002 	andeq	r0, r0, r2
    16d8:	0000000c 	andeq	r0, r0, ip
    16dc:	000016a8 	andeq	r1, r0, r8, lsr #13
    16e0:	00000000 	andeq	r0, r0, r0
    16e4:	00000002 	andeq	r0, r0, r2
    16e8:	0000000c 	andeq	r0, r0, ip
    16ec:	000016a8 	andeq	r1, r0, r8, lsr #13
    16f0:	00000000 	andeq	r0, r0, r0
    16f4:	00000002 	andeq	r0, r0, r2
    16f8:	0000000c 	andeq	r0, r0, ip
    16fc:	000016a8 	andeq	r1, r0, r8, lsr #13
    1700:	00000000 	andeq	r0, r0, r0
    1704:	00000002 	andeq	r0, r0, r2
    1708:	0000000c 	andeq	r0, r0, ip
    170c:	000016a8 	andeq	r1, r0, r8, lsr #13
    1710:	08002120 	stmdaeq	r0, {r5, r8, sp}
    1714:	00000002 	andeq	r0, r0, r2
    1718:	0000000c 	andeq	r0, r0, ip
    171c:	000016a8 	andeq	r1, r0, r8, lsr #13
    1720:	00000000 	andeq	r0, r0, r0
    1724:	00000004 	andeq	r0, r0, r4
    1728:	0000000c 	andeq	r0, r0, ip
    172c:	000016a8 	andeq	r1, r0, r8, lsr #13
    1730:	00000000 	andeq	r0, r0, r0
    1734:	00000004 	andeq	r0, r0, r4
    1738:	0000000c 	andeq	r0, r0, ip
    173c:	000016a8 	andeq	r1, r0, r8, lsr #13
    1740:	00000000 	andeq	r0, r0, r0
    1744:	00000002 	andeq	r0, r0, r2
    1748:	0000000c 	andeq	r0, r0, ip
    174c:	000016a8 	andeq	r1, r0, r8, lsr #13
    1750:	08002122 	stmdaeq	r0, {r1, r5, r8, sp}
    1754:	00000002 	andeq	r0, r0, r2
    1758:	0000000c 	andeq	r0, r0, ip
    175c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1760:	7c020001 	stcvc	0, cr0, [r2], {1}
    1764:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1768:	00000020 	andeq	r0, r0, r0, lsr #32
    176c:	00001758 	andeq	r1, r0, r8, asr r7
    1770:	08002124 	stmdaeq	r0, {r2, r5, r8, sp}
    1774:	0000004a 	andeq	r0, r0, sl, asr #32
    1778:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    177c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1780:	45018e02 	strmi	r8, [r1, #-3586]	; 0xfffff1fe
    1784:	0e5e680e 	cdpeq	8, 5, cr6, cr14, cr14, {0}
    1788:	00000010 	andeq	r0, r0, r0, lsl r0
    178c:	00000020 	andeq	r0, r0, r0, lsr #32
    1790:	00001758 	andeq	r1, r0, r8, asr r7
    1794:	08002170 	stmdaeq	r0, {r4, r5, r6, r8, sp}
    1798:	00000080 	andeq	r0, r0, r0, lsl #1
    179c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    17a0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17a4:	4b018e02 	blmi	64fb4 <_Min_Heap_Size+0x647b4>
    17a8:	41100e0a 	tstmi	r0, sl, lsl #28
    17ac:	0000000b 	andeq	r0, r0, fp
    17b0:	0000000c 	andeq	r0, r0, ip
    17b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17c0:	00000024 	andeq	r0, r0, r4, lsr #32
    17c4:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    17c8:	080021f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sp}
    17cc:	00000098 	muleq	r0, r8, r0
    17d0:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
    17d4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    17d8:	0e0a5301 	cdpeq	3, 0, cr5, cr10, cr1, {0}
    17dc:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
    17e0:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    17e4:	0c0e710b 	stfeqs	f7, [lr], {11}
    17e8:	0000000c 	andeq	r0, r0, ip
    17ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    17f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17f8:	00000018 	andeq	r0, r0, r8, lsl r0
    17fc:	000017e8 	andeq	r1, r0, r8, ror #15
    1800:	08002288 	stmdaeq	r0, {r3, r7, r9, sp}
    1804:	00000040 	andeq	r0, r0, r0, asr #32
    1808:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    180c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1810:	00018e02 	andeq	r8, r1, r2, lsl #28
    1814:	0000001c 	andeq	r0, r0, ip, lsl r0
    1818:	000017e8 	andeq	r1, r0, r8, ror #15
    181c:	080022c8 	stmdaeq	r0, {r3, r6, r7, r9, sp}
    1820:	000000e8 	andeq	r0, r0, r8, ror #1
    1824:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1828:	86058506 	strhi	r8, [r5], -r6, lsl #10
    182c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1830:	00018e02 	andeq	r8, r1, r2, lsl #28
    1834:	0000000c 	andeq	r0, r0, ip
    1838:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    183c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1840:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1844:	0000001c 	andeq	r0, r0, ip, lsl r0
    1848:	00001834 	andeq	r1, r0, r4, lsr r8
    184c:	080023b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sp}
    1850:	0000002e 	andeq	r0, r0, lr, lsr #32
    1854:	84040e44 	strhi	r0, [r4], #-3652	; 0xfffff1bc
    1858:	c40a4901 	strgt	r4, [sl], #-2305	; 0xfffff6ff
    185c:	0b42000e 	bleq	108189c <_Min_Heap_Size+0x108109c>
    1860:	000ec447 	andeq	ip, lr, r7, asr #8
    1864:	0000001c 	andeq	r0, r0, ip, lsl r0
    1868:	00001834 	andeq	r1, r0, r4, lsr r8
    186c:	080023de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sp}
    1870:	00000024 	andeq	r0, r0, r4, lsr #32
    1874:	83180e41 	tsthi	r8, #1040	; 0x410
    1878:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    187c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1880:	00018e02 	andeq	r8, r1, r2, lsl #28
    1884:	00000018 	andeq	r0, r0, r8, lsl r0
    1888:	00001834 	andeq	r1, r0, r4, lsr r8
    188c:	00000000 	andeq	r0, r0, r0
    1890:	0000001a 	andeq	r0, r0, sl, lsl r0
    1894:	83100e41 	tsthi	r0, #1040	; 0x410
    1898:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    189c:	00018e02 	andeq	r8, r1, r2, lsl #28
    18a0:	0000002c 	andeq	r0, r0, ip, lsr #32
    18a4:	00001834 	andeq	r1, r0, r4, lsr r8
    18a8:	08002404 	stmdaeq	r0, {r2, sl, sp}
    18ac:	00000260 	andeq	r0, r0, r0, ror #4
    18b0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    18b4:	86088509 	strhi	r8, [r8], -r9, lsl #10
    18b8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    18bc:	8a048905 	bhi	123cd8 <_Min_Heap_Size+0x1234d8>
    18c0:	8e028b03 	vmlahi.f64	d8, d2, d3
    18c4:	980e4201 	stmdals	lr, {r0, r9, lr}
    18c8:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    18cc:	000b4224 	andeq	r4, fp, r4, lsr #4
    18d0:	0000000c 	andeq	r0, r0, ip
    18d4:	00001834 	andeq	r1, r0, r4, lsr r8
    18d8:	00000000 	andeq	r0, r0, r0
    18dc:	00000014 	andeq	r0, r0, r4, lsl r0
    18e0:	0000000c 	andeq	r0, r0, ip
    18e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18e8:	7c020001 	stcvc	0, cr0, [r2], {1}
    18ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18f0:	00000020 	andeq	r0, r0, r0, lsr #32
    18f4:	000018e0 	andeq	r1, r0, r0, ror #17
    18f8:	08002664 	stmdaeq	r0, {r2, r5, r6, r9, sl, sp}
    18fc:	000000da 	ldrdeq	r0, [r0], -sl
    1900:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1904:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1908:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    190c:	8a038904 	bhi	e3d24 <_Min_Heap_Size+0xe3524>
    1910:	00018e02 	andeq	r8, r1, r2, lsl #28
    1914:	00000028 	andeq	r0, r0, r8, lsr #32
    1918:	000018e0 	andeq	r1, r0, r0, ror #17
    191c:	08002740 	stmdaeq	r0, {r6, r8, r9, sl, sp}
    1920:	0000024c 	andeq	r0, r0, ip, asr #4
    1924:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    1928:	86078508 	strhi	r8, [r7], -r8, lsl #10
    192c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1930:	8a038904 	bhi	e3d48 <_Min_Heap_Size+0xe3548>
    1934:	02018e02 	andeq	r8, r1, #2, 28
    1938:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    193c:	00000b42 	andeq	r0, r0, r2, asr #22
    1940:	0000000c 	andeq	r0, r0, ip
    1944:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1948:	7c020001 	stcvc	0, cr0, [r2], {1}
    194c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1950:	00000018 	andeq	r0, r0, r8, lsl r0
    1954:	00001940 	andeq	r1, r0, r0, asr #18
    1958:	0800298c 	stmdaeq	r0, {r2, r3, r7, r8, fp, sp}
    195c:	00000020 	andeq	r0, r0, r0, lsr #32
    1960:	83100e41 	tsthi	r0, #1040	; 0x410
    1964:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1968:	00018e02 	andeq	r8, r1, r2, lsl #28
    196c:	0000000c 	andeq	r0, r0, ip
    1970:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1974:	7c020001 	stcvc	0, cr0, [r2], {1}
    1978:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    197c:	00000014 	andeq	r0, r0, r4, lsl r0
    1980:	0000196c 	andeq	r1, r0, ip, ror #18
    1984:	080029ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp, sp}
    1988:	00000022 	andeq	r0, r0, r2, lsr #32
    198c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1990:	00018e02 	andeq	r8, r1, r2, lsl #28
    1994:	0000000c 	andeq	r0, r0, ip
    1998:	0000196c 	andeq	r1, r0, ip, ror #18
    199c:	00000000 	andeq	r0, r0, r0
    19a0:	00000004 	andeq	r0, r0, r4
    19a4:	00000024 	andeq	r0, r0, r4, lsr #32
    19a8:	0000196c 	andeq	r1, r0, ip, ror #18
    19ac:	080029ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, fp, sp}
    19b0:	00000038 	andeq	r0, r0, r8, lsr r0
    19b4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    19b8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    19bc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    19c0:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    19c4:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    19c8:	000ec4c5 	andeq	ip, lr, r5, asr #9
    19cc:	00000014 	andeq	r0, r0, r4, lsl r0
    19d0:	0000196c 	andeq	r1, r0, ip, ror #18
    19d4:	08002a06 	stmdaeq	r0, {r1, r2, r9, fp, sp}
    19d8:	00000024 	andeq	r0, r0, r4, lsr #32
    19dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	0000196c 	andeq	r1, r0, ip, ror #18
    19ec:	08002a2a 	stmdaeq	r0, {r1, r3, r5, r9, fp, sp}
    19f0:	00000008 	andeq	r0, r0, r8
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a04:	00000018 	andeq	r0, r0, r8, lsl r0
    1a08:	000019f4 	strdeq	r1, [r0], -r4
    1a0c:	08002a34 	stmdaeq	r0, {r2, r4, r5, r9, fp, sp}
    1a10:	00000024 	andeq	r0, r0, r4, lsr #32
    1a14:	83100e41 	tsthi	r0, #1040	; 0x410
    1a18:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a1c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a20:	0000000c 	andeq	r0, r0, ip
    1a24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a28:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a30:	00000018 	andeq	r0, r0, r8, lsl r0
    1a34:	00001a20 	andeq	r1, r0, r0, lsr #20
    1a38:	08002a58 	stmdaeq	r0, {r3, r4, r6, r9, fp, sp}
    1a3c:	00000020 	andeq	r0, r0, r0, lsr #32
    1a40:	83100e41 	tsthi	r0, #1040	; 0x410
    1a44:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a48:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a4c:	0000000c 	andeq	r0, r0, ip
    1a50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a54:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a58:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a5c:	00000018 	andeq	r0, r0, r8, lsl r0
    1a60:	00001a4c 	andeq	r1, r0, ip, asr #20
    1a64:	08002a78 	stmdaeq	r0, {r3, r4, r5, r6, r9, fp, sp}
    1a68:	00000024 	andeq	r0, r0, r4, lsr #32
    1a6c:	83100e41 	tsthi	r0, #1040	; 0x410
    1a70:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a74:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a78:	0000000c 	andeq	r0, r0, ip
    1a7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a80:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a88:	00000018 	andeq	r0, r0, r8, lsl r0
    1a8c:	00001a78 	andeq	r1, r0, r8, ror sl
    1a90:	08002a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, sp}
    1a94:	00000020 	andeq	r0, r0, r0, lsr #32
    1a98:	83100e41 	tsthi	r0, #1040	; 0x410
    1a9c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1aa0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1aa4:	0000000c 	andeq	r0, r0, ip
    1aa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aac:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ab0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ab4:	00000018 	andeq	r0, r0, r8, lsl r0
    1ab8:	00001aa4 	andeq	r1, r0, r4, lsr #21
    1abc:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    1ac0:	00000024 	andeq	r0, r0, r4, lsr #32
    1ac4:	83100e41 	tsthi	r0, #1040	; 0x410
    1ac8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1acc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ad0:	0000000c 	andeq	r0, r0, ip
    1ad4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ad8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1adc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ae0:	0000000c 	andeq	r0, r0, ip
    1ae4:	00001ad0 	ldrdeq	r1, [r0], -r0
    1ae8:	08002ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, sp}
    1aec:	0000000c 	andeq	r0, r0, ip
    1af0:	0000000c 	andeq	r0, r0, ip
    1af4:	00001ad0 	ldrdeq	r1, [r0], -r0
    1af8:	08002aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp, sp}
    1afc:	0000000c 	andeq	r0, r0, ip
    1b00:	0000000c 	andeq	r0, r0, ip
    1b04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b08:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b10:	00000018 	andeq	r0, r0, r8, lsl r0
    1b14:	00001b00 	andeq	r1, r0, r0, lsl #22
    1b18:	08002af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, sp}
    1b1c:	00000024 	andeq	r0, r0, r4, lsr #32
    1b20:	83100e41 	tsthi	r0, #1040	; 0x410
    1b24:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b28:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b34:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b3c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b40:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b44:	00000000 	andeq	r0, r0, r0
    1b48:	0000001a 	andeq	r0, r0, sl, lsl r0
    1b4c:	83100e41 	tsthi	r0, #1040	; 0x410
    1b50:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b54:	4a018e02 	bmi	65364 <_Min_Heap_Size+0x64b64>
    1b58:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1b5c:	0000000e 	andeq	r0, r0, lr
    1b60:	00000024 	andeq	r0, r0, r4, lsr #32
    1b64:	00001b2c 	andeq	r1, r0, ip, lsr #22
    1b68:	00000000 	andeq	r0, r0, r0
    1b6c:	000000b8 	strheq	r0, [r0], -r8
    1b70:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    1b74:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b78:	7f018e02 	svcvc	0x00018e02
    1b7c:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1b80:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1b84:	0000000b 	andeq	r0, r0, fp
    1b88:	0000000c 	andeq	r0, r0, ip
    1b8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b90:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b98:	00000018 	andeq	r0, r0, r8, lsl r0
    1b9c:	00001b88 	andeq	r1, r0, r8, lsl #23
    1ba0:	080002c0 	stmdaeq	r0, {r6, r7, r9}
    1ba4:	00000030 	andeq	r0, r0, r0, lsr r0
    1ba8:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1bac:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1bb0:	00000010 	andeq	r0, r0, r0, lsl r0
    1bb4:	0000000c 	andeq	r0, r0, ip
    1bb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bbc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bc0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bc4:	00000020 	andeq	r0, r0, r0, lsr #32
    1bc8:	00001bb4 			; <UNDEFINED> instruction: 0x00001bb4
    1bcc:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
    1bd0:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1bd4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1bd8:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1bdc:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1be0:	8a038904 	bhi	e3ff8 <_Min_Heap_Size+0xe37f8>
    1be4:	00018e02 	andeq	r8, r1, r2, lsl #28


build\gcc/stm32-qemu.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20001238 	andcs	r1, r0, r8, lsr r2
 8000004:	08001af9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, fp, ip}
 8000008:	080006ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl}
 800000c:	080001d1 	stmdaeq	r0, {r0, r4, r6, r7, r8}
 8000010:	08000701 	stmdaeq	r0, {r0, r8, r9, sl}
 8000014:	08000715 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl}
 8000018:	08000729 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl}
	...
 800002c:	0800073d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl}
 8000030:	0800073f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000741 	stmdaeq	r0, {r0, r6, r8, r9, sl}
 800003c:	08000743 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl}
 8000040:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000044:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000048:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800004c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000050:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000054:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000058:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800005c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000060:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000064:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000068:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800006c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000070:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000074:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000078:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800007c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000080:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000084:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000088:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800008c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000090:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000094:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000098:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800009c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000a0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000a4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000a8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000ac:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000b0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000b4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000b8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000bc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000c0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000c4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000c8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000cc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000d0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000d4:	0800074d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, sl}
 80000d8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000dc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000e0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000e4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000e8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000ec:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000f0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000f4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000f8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000fc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000100:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000104:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000108:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800010c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000110:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000114:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000118:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800011c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000120:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000124:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000128:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800012c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000130:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
	...
 800013c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000140:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000144:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000148:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800014c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000150:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000154:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000158:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800015c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000160:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000164:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000168:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800016c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000170:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000174:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
	...
 8000180:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000184:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000070 	andcs	r0, r0, r0, ror r0
 80001ac:	00000000 	andeq	r0, r0, r0
 80001b0:	08002bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp, sp}

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	andeq	r0, r0, r0
 80001c8:	20000074 	andcs	r0, r0, r4, ror r0
 80001cc:	08002bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp, sp}

080001d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
 80001d0:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 80001d2:	4b0e      	ldr	r3, [pc, #56]	; (800020c <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
 80001d4:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 80001d6:	4b0e      	ldr	r3, [pc, #56]	; (8000210 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
 80001d8:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
 80001da:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
 80001de:	d105      	bne.n	80001ec <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
 80001e0:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
 80001e4:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
 80001e6:	db0a      	blt.n	80001fe <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
 80001e8:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
 80001ea:	dc08      	bgt.n	80001fe <stack_invalid>

080001ec <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
 80001ec:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
 80001f0:	f01e 0f04 	tst.w	lr, #4
    ite     eq
 80001f4:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
 80001f6:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001fa:	f3ef 8009 	mrsne	r0, PSP

080001fe <stack_invalid>:
stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
 80001fe:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000200:	4a04      	ldr	r2, [pc, #16]	; (8000214 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
 8000202:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
 8000206:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
 8000208:	4710      	bx	r2
 800020a:	01d80000 	bicseq	r0, r8, r0
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 800020e:	01dc2000 	bicseq	r2, ip, r0
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 8000212:	18512000 	ldmdane	r1, {sp}^
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000216:	00000800 	andeq	r0, r0, r0, lsl #16
 800021a:	00000000 	andeq	r0, r0, r0
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <__io_putchar>:
#include "fault-dump.h"

void SystemClock_Config(void);

#ifdef __GNUC__
int __io_putchar(int ch) {
 80005c4:	b500      	push	{lr}
 80005c6:	b083      	sub	sp, #12
 80005c8:	9001      	str	r0, [sp, #4]
    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 80005ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80005ce:	2201      	movs	r2, #1
 80005d0:	a901      	add	r1, sp, #4
 80005d2:	4803      	ldr	r0, [pc, #12]	; (80005e0 <__io_putchar+0x1c>)
 80005d4:	f000 fb6a 	bl	8000cac <HAL_UART_Transmit>
    return ch;
}
 80005d8:	9801      	ldr	r0, [sp, #4]
 80005da:	b003      	add	sp, #12
 80005dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80005e0:	2000008c 	andcs	r0, r0, ip, lsl #1

080005e4 <fault_unalign_trigger>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("c = %d\r\n", c);
}

void fault_unalign_trigger(void) {
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
 80005e8:	2400      	movs	r4, #0
 80005ea:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
 80005ec:	4a0e      	ldr	r2, [pc, #56]	; (8000628 <fault_unalign_trigger+0x44>)
 80005ee:	6953      	ldr	r3, [r2, #20]
 80005f0:	f043 0308 	orr.w	r3, r3, #8
 80005f4:	6153      	str	r3, [r2, #20]

    addr = (int*)0x00;
    value = *addr;
 80005f6:	6823      	ldr	r3, [r4, #0]
 80005f8:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 80005fa:	9a01      	ldr	r2, [sp, #4]
 80005fc:	4d0b      	ldr	r5, [pc, #44]	; (800062c <fault_unalign_trigger+0x48>)
 80005fe:	4621      	mov	r1, r4
 8000600:	4628      	mov	r0, r5
 8000602:	f001 fad5 	bl	8001bb0 <iprintf>
    addr = (int*)0x04;
    value = *addr;
 8000606:	6863      	ldr	r3, [r4, #4]
 8000608:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 800060a:	9a01      	ldr	r2, [sp, #4]
 800060c:	2104      	movs	r1, #4
 800060e:	4628      	mov	r0, r5
 8000610:	f001 face 	bl	8001bb0 <iprintf>
    addr = (int*)0x03;
    value = *addr;
 8000614:	f8d4 3003 	ldr.w	r3, [r4, #3]
 8000618:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 800061a:	9a01      	ldr	r2, [sp, #4]
 800061c:	2103      	movs	r1, #3
 800061e:	4628      	mov	r0, r5
 8000620:	f001 fac6 	bl	8001bb0 <iprintf>
}
 8000624:	b003      	add	sp, #12
 8000626:	bd30      	pop	{r4, r5, pc}
 8000628:	e000ed00 	and	lr, r0, r0, lsl #26
 800062c:	08002bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, sp}

08000630 <test0>:

void test0(void) {
 8000630:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000632:	4903      	ldr	r1, [pc, #12]	; (8000640 <test0+0x10>)
 8000634:	4803      	ldr	r0, [pc, #12]	; (8000644 <test0+0x14>)
 8000636:	f001 fabb 	bl	8001bb0 <iprintf>
    // trigger a fault.
    //float a = 0.0, b = 1.1;
    //printf("this is %f.\r\n", (a + b));
    fault_unalign_trigger();
 800063a:	f7ff ffd3 	bl	80005e4 <fault_unalign_trigger>
}
 800063e:	bd08      	pop	{r3, pc}
 8000640:	08002c34 	stmdaeq	r0, {r2, r4, r5, sl, fp, sp}
 8000644:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000648 <test1>:

void test1(void) {
 8000648:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 800064a:	4903      	ldr	r1, [pc, #12]	; (8000658 <test1+0x10>)
 800064c:	4803      	ldr	r0, [pc, #12]	; (800065c <test1+0x14>)
 800064e:	f001 faaf 	bl	8001bb0 <iprintf>
    test0();
 8000652:	f7ff ffed 	bl	8000630 <test0>
}
 8000656:	bd08      	pop	{r3, pc}
 8000658:	08002c2c 	stmdaeq	r0, {r2, r3, r5, sl, fp, sp}
 800065c:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000660 <test2>:

void test2(void) {
 8000660:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000662:	4903      	ldr	r1, [pc, #12]	; (8000670 <test2+0x10>)
 8000664:	4803      	ldr	r0, [pc, #12]	; (8000674 <test2+0x14>)
 8000666:	f001 faa3 	bl	8001bb0 <iprintf>
    test1();
 800066a:	f7ff ffed 	bl	8000648 <test1>
}
 800066e:	bd08      	pop	{r3, pc}
 8000670:	08002c24 	stmdaeq	r0, {r2, r5, sl, fp, sp}
 8000674:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000678 <test3>:

void test3(void) {
 8000678:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 800067a:	4903      	ldr	r1, [pc, #12]	; (8000688 <test3+0x10>)
 800067c:	4803      	ldr	r0, [pc, #12]	; (800068c <test3+0x14>)
 800067e:	f001 fa97 	bl	8001bb0 <iprintf>
    test2();
 8000682:	f7ff ffed 	bl	8000660 <test2>
}
 8000686:	bd08      	pop	{r3, pc}
 8000688:	08002c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp, sp}
 800068c:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000690 <test4>:

void test4(void) {
 8000690:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000692:	4903      	ldr	r1, [pc, #12]	; (80006a0 <test4+0x10>)
 8000694:	4803      	ldr	r0, [pc, #12]	; (80006a4 <test4+0x14>)
 8000696:	f001 fa8b 	bl	8001bb0 <iprintf>
    test3();
 800069a:	f7ff ffed 	bl	8000678 <test3>
}
 800069e:	bd08      	pop	{r3, pc}
 80006a0:	08002c14 	stmdaeq	r0, {r2, r4, sl, fp, sp}
 80006a4:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080006a8 <test5>:

void test5(void) {
 80006a8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 80006aa:	4903      	ldr	r1, [pc, #12]	; (80006b8 <test5+0x10>)
 80006ac:	4803      	ldr	r0, [pc, #12]	; (80006bc <test5+0x14>)
 80006ae:	f001 fa7f 	bl	8001bb0 <iprintf>
    test4();
 80006b2:	f7ff ffed 	bl	8000690 <test4>
}
 80006b6:	bd08      	pop	{r3, pc}
 80006b8:	08002c0c 	stmdaeq	r0, {r2, r3, sl, fp, sp}
 80006bc:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080006c0 <main>:

int main(void) {
 80006c0:	b508      	push	{r3, lr}
    HAL_Init();
 80006c2:	f000 ffd7 	bl	8001674 <HAL_Init>
    // SystemClock_Config();
    MX_GPIO_Init();
 80006c6:	f000 f861 	bl	800078c <MX_GPIO_Init>
    MX_USART1_UART_Init();
 80006ca:	f000 f885 	bl	80007d8 <MX_USART1_UART_Init>

    fault_dump_init();
 80006ce:	f001 f859 	bl	8001784 <fault_dump_init>
    test5();
 80006d2:	f7ff ffe9 	bl	80006a8 <test5>

    while (1) {
        printf("hello qemu.\r\n");
 80006d6:	4804      	ldr	r0, [pc, #16]	; (80006e8 <main+0x28>)
 80006d8:	f001 faf0 	bl	8001cbc <puts>
        HAL_Delay(1000);
 80006dc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80006e0:	f000 fff4 	bl	80016cc <HAL_Delay>
    while (1) {
 80006e4:	e7f7      	b.n	80006d6 <main+0x16>
 80006e6:	bf00      	nop
 80006e8:	08002bfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, fp, sp}

080006ec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80006ec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80006ee:	4902      	ldr	r1, [pc, #8]	; (80006f8 <NMI_Handler+0xc>)
 80006f0:	4802      	ldr	r0, [pc, #8]	; (80006fc <NMI_Handler+0x10>)
 80006f2:	f001 fa5d 	bl	8001bb0 <iprintf>
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80006f6:	e7fe      	b.n	80006f6 <NMI_Handler+0xa>
 80006f8:	08002c98 	stmdaeq	r0, {r3, r4, r7, sl, fp, sp}
 80006fc:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000700 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000700:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 8000702:	4902      	ldr	r1, [pc, #8]	; (800070c <MemManage_Handler+0xc>)
 8000704:	4802      	ldr	r0, [pc, #8]	; (8000710 <MemManage_Handler+0x10>)
 8000706:	f001 fa53 	bl	8001bb0 <iprintf>
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800070a:	e7fe      	b.n	800070a <MemManage_Handler+0xa>
 800070c:	08002c84 	stmdaeq	r0, {r2, r7, sl, fp, sp}
 8000710:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000714 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000714:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BusFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 8000716:	4902      	ldr	r1, [pc, #8]	; (8000720 <BusFault_Handler+0xc>)
 8000718:	4802      	ldr	r0, [pc, #8]	; (8000724 <BusFault_Handler+0x10>)
 800071a:	f001 fa49 	bl	8001bb0 <iprintf>
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800071e:	e7fe      	b.n	800071e <BusFault_Handler+0xa>
 8000720:	08002c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, sp}
 8000724:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000728 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000728:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UsageFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 800072a:	4902      	ldr	r1, [pc, #8]	; (8000734 <UsageFault_Handler+0xc>)
 800072c:	4802      	ldr	r0, [pc, #8]	; (8000738 <UsageFault_Handler+0x10>)
 800072e:	f001 fa3f 	bl	8001bb0 <iprintf>
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000732:	e7fe      	b.n	8000732 <UsageFault_Handler+0xa>
 8000734:	08002c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp, sp}
 8000738:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

0800073c <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800073c:	4770      	bx	lr

0800073e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800073e:	4770      	bx	lr

08000740 <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000740:	4770      	bx	lr

08000742 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000742:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000744:	f000 ffb0 	bl	80016a8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000748:	bd08      	pop	{r3, pc}
	...

0800074c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 800074c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800074e:	4802      	ldr	r0, [pc, #8]	; (8000758 <USART1_IRQHandler+0xc>)
 8000750:	f000 fb9e 	bl	8000e90 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8000754:	bd08      	pop	{r3, pc}
 8000756:	bf00      	nop
 8000758:	2000008c 	andcs	r0, r0, ip, lsl #1

0800075c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800075c:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 800075e:	4903      	ldr	r1, [pc, #12]	; (800076c <Error_Handler+0x10>)
 8000760:	4803      	ldr	r0, [pc, #12]	; (8000770 <Error_Handler+0x14>)
 8000762:	f001 fa25 	bl	8001bb0 <iprintf>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000766:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 8000768:	e7fe      	b.n	8000768 <Error_Handler+0xc>
 800076a:	bf00      	nop
 800076c:	08002c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, sp}
 8000770:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000774 <assert_failed>:
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
 8000774:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000776:	4903      	ldr	r1, [pc, #12]	; (8000784 <assert_failed+0x10>)
 8000778:	4803      	ldr	r0, [pc, #12]	; (8000788 <assert_failed+0x14>)
 800077a:	f001 fa19 	bl	8001bb0 <iprintf>
 800077e:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 8000780:	e7fe      	b.n	8000780 <assert_failed+0xc>
 8000782:	bf00      	nop
 8000784:	08002c3c 	stmdaeq	r0, {r2, r3, r4, r5, sl, fp, sp}
 8000788:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

0800078c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800078c:	b084      	sub	sp, #16

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800078e:	2200      	movs	r2, #0
 8000790:	9201      	str	r2, [sp, #4]
 8000792:	4b10      	ldr	r3, [pc, #64]	; (80007d4 <MX_GPIO_Init+0x48>)
 8000794:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000796:	f041 0104 	orr.w	r1, r1, #4
 800079a:	6319      	str	r1, [r3, #48]	; 0x30
 800079c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800079e:	f001 0104 	and.w	r1, r1, #4
 80007a2:	9101      	str	r1, [sp, #4]
 80007a4:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80007a6:	9202      	str	r2, [sp, #8]
 80007a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80007aa:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80007ae:	6319      	str	r1, [r3, #48]	; 0x30
 80007b0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80007b2:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80007b6:	9102      	str	r1, [sp, #8]
 80007b8:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007ba:	9203      	str	r2, [sp, #12]
 80007bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80007be:	f042 0201 	orr.w	r2, r2, #1
 80007c2:	631a      	str	r2, [r3, #48]	; 0x30
 80007c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007c6:	f003 0301 	and.w	r3, r3, #1
 80007ca:	9303      	str	r3, [sp, #12]
 80007cc:	9b03      	ldr	r3, [sp, #12]

}
 80007ce:	b004      	add	sp, #16
 80007d0:	4770      	bx	lr
 80007d2:	bf00      	nop
 80007d4:	40023800 	andmi	r3, r2, r0, lsl #16

080007d8 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 80007d8:	b508      	push	{r3, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80007da:	480a      	ldr	r0, [pc, #40]	; (8000804 <MX_USART1_UART_Init+0x2c>)
 80007dc:	4b0a      	ldr	r3, [pc, #40]	; (8000808 <MX_USART1_UART_Init+0x30>)
 80007de:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 80007e0:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 80007e4:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80007e6:	2300      	movs	r3, #0
 80007e8:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80007ea:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80007ec:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80007ee:	220c      	movs	r2, #12
 80007f0:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80007f2:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80007f4:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80007f6:	f000 f9c3 	bl	8000b80 <HAL_UART_Init>
 80007fa:	b900      	cbnz	r0, 80007fe <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80007fc:	bd08      	pop	{r3, pc}
    Error_Handler();
 80007fe:	f7ff ffad 	bl	800075c <Error_Handler>
}
 8000802:	e7fb      	b.n	80007fc <MX_USART1_UART_Init+0x24>
 8000804:	2000008c 	andcs	r0, r0, ip, lsl #1
 8000808:	40011000 	andmi	r1, r1, r0

0800080c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 800080c:	b510      	push	{r4, lr}
 800080e:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000810:	2300      	movs	r3, #0
 8000812:	9303      	str	r3, [sp, #12]
 8000814:	9304      	str	r3, [sp, #16]
 8000816:	9305      	str	r3, [sp, #20]
 8000818:	9306      	str	r3, [sp, #24]
 800081a:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 800081c:	6802      	ldr	r2, [r0, #0]
 800081e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000822:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8000826:	429a      	cmp	r2, r3
 8000828:	d001      	beq.n	800082e <HAL_UART_MspInit+0x22>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 800082a:	b008      	add	sp, #32
 800082c:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 800082e:	2400      	movs	r4, #0
 8000830:	9401      	str	r4, [sp, #4]
 8000832:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8000836:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000838:	f042 0210 	orr.w	r2, r2, #16
 800083c:	645a      	str	r2, [r3, #68]	; 0x44
 800083e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000840:	f002 0210 	and.w	r2, r2, #16
 8000844:	9201      	str	r2, [sp, #4]
 8000846:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000848:	9402      	str	r4, [sp, #8]
 800084a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800084c:	f042 0201 	orr.w	r2, r2, #1
 8000850:	631a      	str	r2, [r3, #48]	; 0x30
 8000852:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000854:	f003 0301 	and.w	r3, r3, #1
 8000858:	9302      	str	r3, [sp, #8]
 800085a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800085c:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000860:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000862:	2302      	movs	r3, #2
 8000864:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000866:	2303      	movs	r3, #3
 8000868:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800086a:	2307      	movs	r3, #7
 800086c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800086e:	a903      	add	r1, sp, #12
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <HAL_UART_MspInit+0x7c>)
 8000872:	f000 fc77 	bl	8001164 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8000876:	4622      	mov	r2, r4
 8000878:	4621      	mov	r1, r4
 800087a:	2025      	movs	r0, #37	; 0x25
 800087c:	f000 fe62 	bl	8001544 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8000880:	2025      	movs	r0, #37	; 0x25
 8000882:	f000 fea5 	bl	80015d0 <HAL_NVIC_EnableIRQ>
}
 8000886:	e7d0      	b.n	800082a <HAL_UART_MspInit+0x1e>
 8000888:	40020000 	andmi	r0, r2, r0

0800088c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800088c:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800088e:	2100      	movs	r1, #0
 8000890:	9100      	str	r1, [sp, #0]
 8000892:	4b0b      	ldr	r3, [pc, #44]	; (80008c0 <HAL_MspInit+0x34>)
 8000894:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000896:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800089a:	645a      	str	r2, [r3, #68]	; 0x44
 800089c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800089e:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 80008a2:	9200      	str	r2, [sp, #0]
 80008a4:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008a6:	9101      	str	r1, [sp, #4]
 80008a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80008aa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80008ae:	641a      	str	r2, [r3, #64]	; 0x40
 80008b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80008b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80008b6:	9301      	str	r3, [sp, #4]
 80008b8:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80008ba:	b002      	add	sp, #8
 80008bc:	4770      	bx	lr
 80008be:	bf00      	nop
 80008c0:	40023800 	andmi	r3, r2, r0, lsl #16

080008c4 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80008c4:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80008c6:	f102 030c 	add.w	r3, r2, #12
 80008ca:	e853 3f00 	ldrex	r3, [r3]
 80008ce:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80008d2:	320c      	adds	r2, #12
 80008d4:	e842 3100 	strex	r1, r3, [r2]
 80008d8:	2900      	cmp	r1, #0
 80008da:	d1f3      	bne.n	80008c4 <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80008dc:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80008de:	f102 0314 	add.w	r3, r2, #20
 80008e2:	e853 3f00 	ldrex	r3, [r3]
 80008e6:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80008ea:	3214      	adds	r2, #20
 80008ec:	e842 3100 	strex	r1, r3, [r2]
 80008f0:	2900      	cmp	r1, #0
 80008f2:	d1f3      	bne.n	80008dc <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80008f4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80008f6:	2b01      	cmp	r3, #1
 80008f8:	d005      	beq.n	8000906 <UART_EndRxTransfer+0x42>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80008fa:	2320      	movs	r3, #32
 80008fc:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000900:	2300      	movs	r3, #0
 8000902:	6303      	str	r3, [r0, #48]	; 0x30
}
 8000904:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000906:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000908:	f102 030c 	add.w	r3, r2, #12
 800090c:	e853 3f00 	ldrex	r3, [r3]
 8000910:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000914:	320c      	adds	r2, #12
 8000916:	e842 3100 	strex	r1, r3, [r2]
 800091a:	2900      	cmp	r1, #0
 800091c:	d1f3      	bne.n	8000906 <UART_EndRxTransfer+0x42>
 800091e:	e7ec      	b.n	80008fa <UART_EndRxTransfer+0x36>

08000920 <UART_Transmit_IT>:
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8000920:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000924:	b2db      	uxtb	r3, r3
 8000926:	2b21      	cmp	r3, #33	; 0x21
 8000928:	d001      	beq.n	800092e <UART_Transmit_IT+0xe>
    }
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800092a:	2002      	movs	r0, #2
  }
}
 800092c:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800092e:	6883      	ldr	r3, [r0, #8]
 8000930:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000934:	d017      	beq.n	8000966 <UART_Transmit_IT+0x46>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8000936:	6a03      	ldr	r3, [r0, #32]
 8000938:	1c5a      	adds	r2, r3, #1
 800093a:	6202      	str	r2, [r0, #32]
 800093c:	781a      	ldrb	r2, [r3, #0]
 800093e:	6803      	ldr	r3, [r0, #0]
 8000940:	605a      	str	r2, [r3, #4]
    if (--huart->TxXferCount == 0U)
 8000942:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8000944:	b29b      	uxth	r3, r3
 8000946:	3b01      	subs	r3, #1
 8000948:	b29b      	uxth	r3, r3
 800094a:	84c3      	strh	r3, [r0, #38]	; 0x26
 800094c:	b94b      	cbnz	r3, 8000962 <UART_Transmit_IT+0x42>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800094e:	6802      	ldr	r2, [r0, #0]
 8000950:	68d3      	ldr	r3, [r2, #12]
 8000952:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000956:	60d3      	str	r3, [r2, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8000958:	6802      	ldr	r2, [r0, #0]
 800095a:	68d3      	ldr	r3, [r2, #12]
 800095c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000960:	60d3      	str	r3, [r2, #12]
    return HAL_OK;
 8000962:	2000      	movs	r0, #0
 8000964:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000966:	6903      	ldr	r3, [r0, #16]
 8000968:	2b00      	cmp	r3, #0
 800096a:	d1e4      	bne.n	8000936 <UART_Transmit_IT+0x16>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 800096c:	6a03      	ldr	r3, [r0, #32]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800096e:	881b      	ldrh	r3, [r3, #0]
 8000970:	6802      	ldr	r2, [r0, #0]
 8000972:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000976:	6053      	str	r3, [r2, #4]
      huart->pTxBuffPtr += 2U;
 8000978:	6a03      	ldr	r3, [r0, #32]
 800097a:	3302      	adds	r3, #2
 800097c:	6203      	str	r3, [r0, #32]
 800097e:	e7e0      	b.n	8000942 <UART_Transmit_IT+0x22>

08000980 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8000980:	b538      	push	{r3, r4, r5, lr}
 8000982:	4604      	mov	r4, r0
  uint32_t tmpreg;
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000984:	6842      	ldr	r2, [r0, #4]
 8000986:	4b57      	ldr	r3, [pc, #348]	; (8000ae4 <UART_SetConfig+0x164>)
 8000988:	429a      	cmp	r2, r3
 800098a:	d83f      	bhi.n	8000a0c <UART_SetConfig+0x8c>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 800098c:	68e3      	ldr	r3, [r4, #12]
 800098e:	b113      	cbz	r3, 8000996 <UART_SetConfig+0x16>
 8000990:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000994:	d140      	bne.n	8000a18 <UART_SetConfig+0x98>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000996:	6923      	ldr	r3, [r4, #16]
 8000998:	b12b      	cbz	r3, 80009a6 <UART_SetConfig+0x26>
 800099a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800099e:	d002      	beq.n	80009a6 <UART_SetConfig+0x26>
 80009a0:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80009a4:	d13e      	bne.n	8000a24 <UART_SetConfig+0xa4>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 80009a6:	6963      	ldr	r3, [r4, #20]
 80009a8:	f64f 72f3 	movw	r2, #65523	; 0xfff3
 80009ac:	4213      	tst	r3, r2
 80009ae:	d100      	bne.n	80009b2 <UART_SetConfig+0x32>
 80009b0:	b923      	cbnz	r3, 80009bc <UART_SetConfig+0x3c>
 80009b2:	f640 6178 	movw	r1, #3704	; 0xe78
 80009b6:	484c      	ldr	r0, [pc, #304]	; (8000ae8 <UART_SetConfig+0x168>)
 80009b8:	f7ff fedc 	bl	8000774 <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80009bc:	6822      	ldr	r2, [r4, #0]
 80009be:	6913      	ldr	r3, [r2, #16]
 80009c0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80009c4:	68e1      	ldr	r1, [r4, #12]
 80009c6:	430b      	orrs	r3, r1
 80009c8:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80009ca:	68a3      	ldr	r3, [r4, #8]
 80009cc:	6922      	ldr	r2, [r4, #16]
 80009ce:	4313      	orrs	r3, r2
 80009d0:	6962      	ldr	r2, [r4, #20]
 80009d2:	4313      	orrs	r3, r2
 80009d4:	69e2      	ldr	r2, [r4, #28]
 80009d6:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1,
 80009d8:	6821      	ldr	r1, [r4, #0]
 80009da:	68cb      	ldr	r3, [r1, #12]
 80009dc:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 80009e0:	f023 030c 	bic.w	r3, r3, #12
 80009e4:	4313      	orrs	r3, r2
 80009e6:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80009e8:	6822      	ldr	r2, [r4, #0]
 80009ea:	6953      	ldr	r3, [r2, #20]
 80009ec:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80009f0:	69a1      	ldr	r1, [r4, #24]
 80009f2:	430b      	orrs	r3, r1
 80009f4:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80009f6:	6823      	ldr	r3, [r4, #0]
 80009f8:	4a3c      	ldr	r2, [pc, #240]	; (8000aec <UART_SetConfig+0x16c>)
 80009fa:	4293      	cmp	r3, r2
 80009fc:	d018      	beq.n	8000a30 <UART_SetConfig+0xb0>
 80009fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000a02:	4293      	cmp	r3, r2
 8000a04:	d014      	beq.n	8000a30 <UART_SetConfig+0xb0>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8000a06:	f000 fb8d 	bl	8001124 <HAL_RCC_GetPCLK1Freq>
 8000a0a:	e013      	b.n	8000a34 <UART_SetConfig+0xb4>
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000a0c:	f640 6175 	movw	r1, #3701	; 0xe75
 8000a10:	4835      	ldr	r0, [pc, #212]	; (8000ae8 <UART_SetConfig+0x168>)
 8000a12:	f7ff feaf 	bl	8000774 <assert_failed>
 8000a16:	e7b9      	b.n	800098c <UART_SetConfig+0xc>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000a18:	f640 6176 	movw	r1, #3702	; 0xe76
 8000a1c:	4832      	ldr	r0, [pc, #200]	; (8000ae8 <UART_SetConfig+0x168>)
 8000a1e:	f7ff fea9 	bl	8000774 <assert_failed>
 8000a22:	e7b8      	b.n	8000996 <UART_SetConfig+0x16>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000a24:	f640 6177 	movw	r1, #3703	; 0xe77
 8000a28:	482f      	ldr	r0, [pc, #188]	; (8000ae8 <UART_SetConfig+0x168>)
 8000a2a:	f7ff fea3 	bl	8000774 <assert_failed>
 8000a2e:	e7ba      	b.n	80009a6 <UART_SetConfig+0x26>
      pclk = HAL_RCC_GetPCLK2Freq();
 8000a30:	f000 fb88 	bl	8001144 <HAL_RCC_GetPCLK2Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8000a34:	69e3      	ldr	r3, [r4, #28]
 8000a36:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000a3a:	d029      	beq.n	8000a90 <UART_SetConfig+0x110>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8000a3c:	2100      	movs	r1, #0
 8000a3e:	1803      	adds	r3, r0, r0
 8000a40:	4149      	adcs	r1, r1
 8000a42:	181b      	adds	r3, r3, r0
 8000a44:	f141 0100 	adc.w	r1, r1, #0
 8000a48:	00c9      	lsls	r1, r1, #3
 8000a4a:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
 8000a4e:	00db      	lsls	r3, r3, #3
 8000a50:	1818      	adds	r0, r3, r0
 8000a52:	6863      	ldr	r3, [r4, #4]
 8000a54:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8000a58:	ea4f 7393 	mov.w	r3, r3, lsr #30
 8000a5c:	f141 0100 	adc.w	r1, r1, #0
 8000a60:	f7ff fc2e 	bl	80002c0 <__aeabi_uldivmod>
 8000a64:	4d22      	ldr	r5, [pc, #136]	; (8000af0 <UART_SetConfig+0x170>)
 8000a66:	fba5 3200 	umull	r3, r2, r5, r0
 8000a6a:	0951      	lsrs	r1, r2, #5
 8000a6c:	2364      	movs	r3, #100	; 0x64
 8000a6e:	fb03 0311 	mls	r3, r3, r1, r0
 8000a72:	011b      	lsls	r3, r3, #4
 8000a74:	3332      	adds	r3, #50	; 0x32
 8000a76:	fba5 2303 	umull	r2, r3, r5, r3
 8000a7a:	095b      	lsrs	r3, r3, #5
 8000a7c:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8000a80:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000a84:	f003 030f 	and.w	r3, r3, #15
 8000a88:	6821      	ldr	r1, [r4, #0]
 8000a8a:	4413      	add	r3, r2
 8000a8c:	608b      	str	r3, [r1, #8]
  }
}
 8000a8e:	bd38      	pop	{r3, r4, r5, pc}
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8000a90:	2300      	movs	r3, #0
 8000a92:	1802      	adds	r2, r0, r0
 8000a94:	eb43 0103 	adc.w	r1, r3, r3
 8000a98:	1812      	adds	r2, r2, r0
 8000a9a:	f141 0100 	adc.w	r1, r1, #0
 8000a9e:	00c9      	lsls	r1, r1, #3
 8000aa0:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8000aa4:	00d2      	lsls	r2, r2, #3
 8000aa6:	1810      	adds	r0, r2, r0
 8000aa8:	f141 0100 	adc.w	r1, r1, #0
 8000aac:	6862      	ldr	r2, [r4, #4]
 8000aae:	1892      	adds	r2, r2, r2
 8000ab0:	415b      	adcs	r3, r3
 8000ab2:	f7ff fc05 	bl	80002c0 <__aeabi_uldivmod>
 8000ab6:	4d0e      	ldr	r5, [pc, #56]	; (8000af0 <UART_SetConfig+0x170>)
 8000ab8:	fba5 3200 	umull	r3, r2, r5, r0
 8000abc:	0951      	lsrs	r1, r2, #5
 8000abe:	2364      	movs	r3, #100	; 0x64
 8000ac0:	fb03 0311 	mls	r3, r3, r1, r0
 8000ac4:	00db      	lsls	r3, r3, #3
 8000ac6:	3332      	adds	r3, #50	; 0x32
 8000ac8:	fba5 2303 	umull	r2, r3, r5, r3
 8000acc:	095b      	lsrs	r3, r3, #5
 8000ace:	005a      	lsls	r2, r3, #1
 8000ad0:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8000ad4:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000ad8:	f003 0307 	and.w	r3, r3, #7
 8000adc:	6821      	ldr	r1, [r4, #0]
 8000ade:	4413      	add	r3, r2
 8000ae0:	608b      	str	r3, [r1, #8]
 8000ae2:	e7d4      	b.n	8000a8e <UART_SetConfig+0x10e>
 8000ae4:	00a037a0 	adceq	r3, r0, r0, lsr #15
 8000ae8:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
 8000aec:	40011000 	andmi	r1, r1, r0
 8000af0:	51eb851f 	mvnpl	r8, pc, lsl r5

08000af4 <UART_WaitOnFlagUntilTimeout>:
{
 8000af4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000af8:	b083      	sub	sp, #12
 8000afa:	4605      	mov	r5, r0
 8000afc:	460e      	mov	r6, r1
 8000afe:	4617      	mov	r7, r2
 8000b00:	4699      	mov	r9, r3
 8000b02:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8000b06:	682c      	ldr	r4, [r5, #0]
 8000b08:	6824      	ldr	r4, [r4, #0]
 8000b0a:	ea36 0304 	bics.w	r3, r6, r4
 8000b0e:	bf0c      	ite	eq
 8000b10:	f04f 0c01 	moveq.w	ip, #1
 8000b14:	f04f 0c00 	movne.w	ip, #0
 8000b18:	45bc      	cmp	ip, r7
 8000b1a:	d128      	bne.n	8000b6e <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8000b1c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8000b20:	d0f1      	beq.n	8000b06 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8000b22:	f000 fdcd 	bl	80016c0 <HAL_GetTick>
 8000b26:	eba0 0009 	sub.w	r0, r0, r9
 8000b2a:	4540      	cmp	r0, r8
 8000b2c:	d823      	bhi.n	8000b76 <UART_WaitOnFlagUntilTimeout+0x82>
 8000b2e:	f1b8 0f00 	cmp.w	r8, #0
 8000b32:	d022      	beq.n	8000b7a <UART_WaitOnFlagUntilTimeout+0x86>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8000b34:	682b      	ldr	r3, [r5, #0]
 8000b36:	68da      	ldr	r2, [r3, #12]
 8000b38:	f012 0f04 	tst.w	r2, #4
 8000b3c:	d0e3      	beq.n	8000b06 <UART_WaitOnFlagUntilTimeout+0x12>
 8000b3e:	2e80      	cmp	r6, #128	; 0x80
 8000b40:	d0e1      	beq.n	8000b06 <UART_WaitOnFlagUntilTimeout+0x12>
 8000b42:	2e40      	cmp	r6, #64	; 0x40
 8000b44:	d0df      	beq.n	8000b06 <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8000b46:	681a      	ldr	r2, [r3, #0]
 8000b48:	f012 0f08 	tst.w	r2, #8
 8000b4c:	d0db      	beq.n	8000b06 <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8000b4e:	2400      	movs	r4, #0
 8000b50:	9401      	str	r4, [sp, #4]
 8000b52:	681a      	ldr	r2, [r3, #0]
 8000b54:	9201      	str	r2, [sp, #4]
 8000b56:	685b      	ldr	r3, [r3, #4]
 8000b58:	9301      	str	r3, [sp, #4]
 8000b5a:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8000b5c:	4628      	mov	r0, r5
 8000b5e:	f7ff feb1 	bl	80008c4 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8000b62:	2308      	movs	r3, #8
 8000b64:	646b      	str	r3, [r5, #68]	; 0x44
          __HAL_UNLOCK(huart);
 8000b66:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
          return HAL_ERROR;
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	e000      	b.n	8000b70 <UART_WaitOnFlagUntilTimeout+0x7c>
  return HAL_OK;
 8000b6e:	2000      	movs	r0, #0
}
 8000b70:	b003      	add	sp, #12
 8000b72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
 8000b76:	2003      	movs	r0, #3
 8000b78:	e7fa      	b.n	8000b70 <UART_WaitOnFlagUntilTimeout+0x7c>
 8000b7a:	2003      	movs	r0, #3
 8000b7c:	e7f8      	b.n	8000b70 <UART_WaitOnFlagUntilTimeout+0x7c>
	...

08000b80 <HAL_UART_Init>:
  if (huart == NULL)
 8000b80:	2800      	cmp	r0, #0
 8000b82:	f000 808c 	beq.w	8000c9e <HAL_UART_Init+0x11e>
{
 8000b86:	b510      	push	{r4, lr}
 8000b88:	4604      	mov	r4, r0
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8000b8a:	6983      	ldr	r3, [r0, #24]
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	d056      	beq.n	8000c3e <HAL_UART_Init+0xbe>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8000b90:	6803      	ldr	r3, [r0, #0]
 8000b92:	4a44      	ldr	r2, [pc, #272]	; (8000ca4 <HAL_UART_Init+0x124>)
 8000b94:	4293      	cmp	r3, r2
 8000b96:	d010      	beq.n	8000bba <HAL_UART_Init+0x3a>
 8000b98:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000b9c:	4293      	cmp	r3, r2
 8000b9e:	d00c      	beq.n	8000bba <HAL_UART_Init+0x3a>
 8000ba0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000ba4:	4293      	cmp	r3, r2
 8000ba6:	d008      	beq.n	8000bba <HAL_UART_Init+0x3a>
 8000ba8:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8000bac:	4293      	cmp	r3, r2
 8000bae:	d004      	beq.n	8000bba <HAL_UART_Init+0x3a>
 8000bb0:	f240 1173 	movw	r1, #371	; 0x173
 8000bb4:	483c      	ldr	r0, [pc, #240]	; (8000ca8 <HAL_UART_Init+0x128>)
 8000bb6:	f7ff fddd 	bl	8000774 <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000bba:	69a3      	ldr	r3, [r4, #24]
 8000bbc:	b143      	cbz	r3, 8000bd0 <HAL_UART_Init+0x50>
 8000bbe:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000bc2:	d005      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000bc4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000bc8:	d002      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000bca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000bce:	d130      	bne.n	8000c32 <HAL_UART_Init+0xb2>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000bd0:	68a3      	ldr	r3, [r4, #8]
 8000bd2:	b113      	cbz	r3, 8000bda <HAL_UART_Init+0x5a>
 8000bd4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000bd8:	d14f      	bne.n	8000c7a <HAL_UART_Init+0xfa>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000bda:	69e3      	ldr	r3, [r4, #28]
 8000bdc:	b113      	cbz	r3, 8000be4 <HAL_UART_Init+0x64>
 8000bde:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000be2:	d150      	bne.n	8000c86 <HAL_UART_Init+0x106>
  if (huart->gState == HAL_UART_STATE_RESET)
 8000be4:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d052      	beq.n	8000c92 <HAL_UART_Init+0x112>
  huart->gState = HAL_UART_STATE_BUSY;
 8000bec:	2324      	movs	r3, #36	; 0x24
 8000bee:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UART_DISABLE(huart);
 8000bf2:	6822      	ldr	r2, [r4, #0]
 8000bf4:	68d3      	ldr	r3, [r2, #12]
 8000bf6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000bfa:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8000bfc:	4620      	mov	r0, r4
 8000bfe:	f7ff febf 	bl	8000980 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8000c02:	6822      	ldr	r2, [r4, #0]
 8000c04:	6913      	ldr	r3, [r2, #16]
 8000c06:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8000c0a:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8000c0c:	6822      	ldr	r2, [r4, #0]
 8000c0e:	6953      	ldr	r3, [r2, #20]
 8000c10:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8000c14:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8000c16:	6822      	ldr	r2, [r4, #0]
 8000c18:	68d3      	ldr	r3, [r2, #12]
 8000c1a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000c1e:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000c20:	2000      	movs	r0, #0
 8000c22:	6460      	str	r0, [r4, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 8000c24:	2320      	movs	r3, #32
 8000c26:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8000c2a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000c2e:	6360      	str	r0, [r4, #52]	; 0x34
}
 8000c30:	bd10      	pop	{r4, pc}
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000c32:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8000c36:	481c      	ldr	r0, [pc, #112]	; (8000ca8 <HAL_UART_Init+0x128>)
 8000c38:	f7ff fd9c 	bl	8000774 <assert_failed>
 8000c3c:	e7c8      	b.n	8000bd0 <HAL_UART_Init+0x50>
    assert_param(IS_UART_INSTANCE(huart->Instance));
 8000c3e:	6803      	ldr	r3, [r0, #0]
 8000c40:	4a18      	ldr	r2, [pc, #96]	; (8000ca4 <HAL_UART_Init+0x124>)
 8000c42:	4293      	cmp	r3, r2
 8000c44:	d0c4      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000c46:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000c4a:	4293      	cmp	r3, r2
 8000c4c:	d0c0      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000c4e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c52:	4293      	cmp	r3, r2
 8000c54:	d0bc      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000c56:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c5a:	4293      	cmp	r3, r2
 8000c5c:	d0b8      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000c5e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c62:	4293      	cmp	r3, r2
 8000c64:	d0b4      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000c66:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8000c6a:	4293      	cmp	r3, r2
 8000c6c:	d0b0      	beq.n	8000bd0 <HAL_UART_Init+0x50>
 8000c6e:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8000c72:	480d      	ldr	r0, [pc, #52]	; (8000ca8 <HAL_UART_Init+0x128>)
 8000c74:	f7ff fd7e 	bl	8000774 <assert_failed>
 8000c78:	e7aa      	b.n	8000bd0 <HAL_UART_Init+0x50>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000c7a:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8000c7e:	480a      	ldr	r0, [pc, #40]	; (8000ca8 <HAL_UART_Init+0x128>)
 8000c80:	f7ff fd78 	bl	8000774 <assert_failed>
 8000c84:	e7a9      	b.n	8000bda <HAL_UART_Init+0x5a>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000c86:	f240 117b 	movw	r1, #379	; 0x17b
 8000c8a:	4807      	ldr	r0, [pc, #28]	; (8000ca8 <HAL_UART_Init+0x128>)
 8000c8c:	f7ff fd72 	bl	8000774 <assert_failed>
 8000c90:	e7a8      	b.n	8000be4 <HAL_UART_Init+0x64>
    huart->Lock = HAL_UNLOCKED;
 8000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_UART_MspInit(huart);
 8000c96:	4620      	mov	r0, r4
 8000c98:	f7ff fdb8 	bl	800080c <HAL_UART_MspInit>
 8000c9c:	e7a6      	b.n	8000bec <HAL_UART_Init+0x6c>
    return HAL_ERROR;
 8000c9e:	2001      	movs	r0, #1
}
 8000ca0:	4770      	bx	lr
 8000ca2:	bf00      	nop
 8000ca4:	40011000 	andmi	r1, r1, r0
 8000ca8:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}

08000cac <HAL_UART_Transmit>:
{
 8000cac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb0:	b082      	sub	sp, #8
 8000cb2:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8000cb4:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000cb8:	b2db      	uxtb	r3, r3
 8000cba:	2b20      	cmp	r3, #32
 8000cbc:	d156      	bne.n	8000d6c <HAL_UART_Transmit+0xc0>
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8000cc4:	2900      	cmp	r1, #0
 8000cc6:	d055      	beq.n	8000d74 <HAL_UART_Transmit+0xc8>
 8000cc8:	b90a      	cbnz	r2, 8000cce <HAL_UART_Transmit+0x22>
      return  HAL_ERROR;
 8000cca:	2001      	movs	r0, #1
 8000ccc:	e04f      	b.n	8000d6e <HAL_UART_Transmit+0xc2>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000cce:	2300      	movs	r3, #0
 8000cd0:	6443      	str	r3, [r0, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8000cd2:	2321      	movs	r3, #33	; 0x21
 8000cd4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    tickstart = HAL_GetTick();
 8000cd8:	f000 fcf2 	bl	80016c0 <HAL_GetTick>
 8000cdc:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8000cde:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8000ce2:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000ce6:	68a3      	ldr	r3, [r4, #8]
 8000ce8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000cec:	d002      	beq.n	8000cf4 <HAL_UART_Transmit+0x48>
      pdata16bits = NULL;
 8000cee:	f04f 0800 	mov.w	r8, #0
 8000cf2:	e014      	b.n	8000d1e <HAL_UART_Transmit+0x72>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000cf4:	6923      	ldr	r3, [r4, #16]
 8000cf6:	b32b      	cbz	r3, 8000d44 <HAL_UART_Transmit+0x98>
      pdata16bits = NULL;
 8000cf8:	f04f 0800 	mov.w	r8, #0
 8000cfc:	e00f      	b.n	8000d1e <HAL_UART_Transmit+0x72>
        huart->gState = HAL_UART_STATE_READY;
 8000cfe:	2320      	movs	r3, #32
 8000d00:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        return HAL_TIMEOUT;
 8000d04:	2003      	movs	r0, #3
 8000d06:	e032      	b.n	8000d6e <HAL_UART_Transmit+0xc2>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8000d08:	f838 3b02 	ldrh.w	r3, [r8], #2
 8000d0c:	6822      	ldr	r2, [r4, #0]
 8000d0e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000d12:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8000d14:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000d16:	b292      	uxth	r2, r2
 8000d18:	3a01      	subs	r2, #1
 8000d1a:	b292      	uxth	r2, r2
 8000d1c:	84e2      	strh	r2, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8000d1e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000d20:	b29b      	uxth	r3, r3
 8000d22:	b193      	cbz	r3, 8000d4a <HAL_UART_Transmit+0x9e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8000d24:	9600      	str	r6, [sp, #0]
 8000d26:	463b      	mov	r3, r7
 8000d28:	2200      	movs	r2, #0
 8000d2a:	2180      	movs	r1, #128	; 0x80
 8000d2c:	4620      	mov	r0, r4
 8000d2e:	f7ff fee1 	bl	8000af4 <UART_WaitOnFlagUntilTimeout>
 8000d32:	2800      	cmp	r0, #0
 8000d34:	d1e3      	bne.n	8000cfe <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 8000d36:	2d00      	cmp	r5, #0
 8000d38:	d0e6      	beq.n	8000d08 <HAL_UART_Transmit+0x5c>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8000d3a:	f815 2b01 	ldrb.w	r2, [r5], #1
 8000d3e:	6823      	ldr	r3, [r4, #0]
 8000d40:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8000d42:	e7e7      	b.n	8000d14 <HAL_UART_Transmit+0x68>
      pdata16bits = (const uint16_t *) pData;
 8000d44:	46a8      	mov	r8, r5
      pdata8bits  = NULL;
 8000d46:	2500      	movs	r5, #0
 8000d48:	e7e9      	b.n	8000d1e <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8000d4a:	9600      	str	r6, [sp, #0]
 8000d4c:	463b      	mov	r3, r7
 8000d4e:	2200      	movs	r2, #0
 8000d50:	2140      	movs	r1, #64	; 0x40
 8000d52:	4620      	mov	r0, r4
 8000d54:	f7ff fece 	bl	8000af4 <UART_WaitOnFlagUntilTimeout>
 8000d58:	b918      	cbnz	r0, 8000d62 <HAL_UART_Transmit+0xb6>
    huart->gState = HAL_UART_STATE_READY;
 8000d5a:	2320      	movs	r3, #32
 8000d5c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    return HAL_OK;
 8000d60:	e005      	b.n	8000d6e <HAL_UART_Transmit+0xc2>
      huart->gState = HAL_UART_STATE_READY;
 8000d62:	2320      	movs	r3, #32
 8000d64:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      return HAL_TIMEOUT;
 8000d68:	2003      	movs	r0, #3
 8000d6a:	e000      	b.n	8000d6e <HAL_UART_Transmit+0xc2>
    return HAL_BUSY;
 8000d6c:	2002      	movs	r0, #2
}
 8000d6e:	b002      	add	sp, #8
 8000d70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 8000d74:	2001      	movs	r0, #1
 8000d76:	e7fa      	b.n	8000d6e <HAL_UART_Transmit+0xc2>

08000d78 <HAL_UART_TxCpltCallback>:
}
 8000d78:	4770      	bx	lr

08000d7a <UART_EndTransmit_IT>:
{
 8000d7a:	b508      	push	{r3, lr}
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8000d7c:	6801      	ldr	r1, [r0, #0]
 8000d7e:	68ca      	ldr	r2, [r1, #12]
 8000d80:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000d84:	60ca      	str	r2, [r1, #12]
  huart->gState = HAL_UART_STATE_READY;
 8000d86:	2220      	movs	r2, #32
 8000d88:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
  HAL_UART_TxCpltCallback(huart);
 8000d8c:	f7ff fff4 	bl	8000d78 <HAL_UART_TxCpltCallback>
}
 8000d90:	2000      	movs	r0, #0
 8000d92:	bd08      	pop	{r3, pc}

08000d94 <HAL_UART_RxCpltCallback>:
}
 8000d94:	4770      	bx	lr

08000d96 <HAL_UART_ErrorCallback>:
}
 8000d96:	4770      	bx	lr

08000d98 <UART_DMAAbortOnError>:
{
 8000d98:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8000d9a:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8000da0:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8000da2:	f7ff fff8 	bl	8000d96 <HAL_UART_ErrorCallback>
}
 8000da6:	bd08      	pop	{r3, pc}

08000da8 <HAL_UARTEx_RxEventCallback>:
}
 8000da8:	4770      	bx	lr

08000daa <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8000daa:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 8000dae:	b2db      	uxtb	r3, r3
 8000db0:	2b22      	cmp	r3, #34	; 0x22
 8000db2:	d169      	bne.n	8000e88 <UART_Receive_IT+0xde>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000db4:	6883      	ldr	r3, [r0, #8]
 8000db6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000dba:	d04f      	beq.n	8000e5c <UART_Receive_IT+0xb2>
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8000dbc:	6a82      	ldr	r2, [r0, #40]	; 0x28
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8000dbe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000dc2:	d004      	beq.n	8000dce <UART_Receive_IT+0x24>
 8000dc4:	2b00      	cmp	r3, #0
 8000dc6:	d156      	bne.n	8000e76 <UART_Receive_IT+0xcc>
 8000dc8:	6903      	ldr	r3, [r0, #16]
 8000dca:	2b00      	cmp	r3, #0
 8000dcc:	d153      	bne.n	8000e76 <UART_Receive_IT+0xcc>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8000dce:	6803      	ldr	r3, [r0, #0]
 8000dd0:	685b      	ldr	r3, [r3, #4]
 8000dd2:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr += 1U;
 8000dd4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000dd6:	3301      	adds	r3, #1
 8000dd8:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8000dda:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8000ddc:	b29b      	uxth	r3, r3
 8000dde:	3b01      	subs	r3, #1
 8000de0:	b29b      	uxth	r3, r3
 8000de2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	d151      	bne.n	8000e8c <UART_Receive_IT+0xe2>
{
 8000de8:	b500      	push	{lr}
 8000dea:	b083      	sub	sp, #12
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8000dec:	6802      	ldr	r2, [r0, #0]
 8000dee:	68d3      	ldr	r3, [r2, #12]
 8000df0:	f023 0320 	bic.w	r3, r3, #32
 8000df4:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8000df6:	6802      	ldr	r2, [r0, #0]
 8000df8:	68d3      	ldr	r3, [r2, #12]
 8000dfa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000dfe:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8000e00:	6802      	ldr	r2, [r0, #0]
 8000e02:	6953      	ldr	r3, [r2, #20]
 8000e04:	f023 0301 	bic.w	r3, r3, #1
 8000e08:	6153      	str	r3, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8000e0a:	2320      	movs	r3, #32
 8000e0c:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000e10:	2300      	movs	r3, #0
 8000e12:	6343      	str	r3, [r0, #52]	; 0x34
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000e14:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000e16:	2b01      	cmp	r3, #1
 8000e18:	d133      	bne.n	8000e82 <UART_Receive_IT+0xd8>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	6303      	str	r3, [r0, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000e1e:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000e20:	f102 030c 	add.w	r3, r2, #12
 8000e24:	e853 3f00 	ldrex	r3, [r3]
 8000e28:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000e2c:	320c      	adds	r2, #12
 8000e2e:	e842 3100 	strex	r1, r3, [r2]
 8000e32:	2900      	cmp	r1, #0
 8000e34:	d1f3      	bne.n	8000e1e <UART_Receive_IT+0x74>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8000e36:	6803      	ldr	r3, [r0, #0]
 8000e38:	681a      	ldr	r2, [r3, #0]
 8000e3a:	f012 0f10 	tst.w	r2, #16
 8000e3e:	d006      	beq.n	8000e4e <UART_Receive_IT+0xa4>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000e40:	2200      	movs	r2, #0
 8000e42:	9201      	str	r2, [sp, #4]
 8000e44:	681a      	ldr	r2, [r3, #0]
 8000e46:	9201      	str	r2, [sp, #4]
 8000e48:	685b      	ldr	r3, [r3, #4]
 8000e4a:	9301      	str	r3, [sp, #4]
 8000e4c:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8000e4e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8000e50:	f7ff ffaa 	bl	8000da8 <HAL_UARTEx_RxEventCallback>
      return HAL_OK;
 8000e54:	2000      	movs	r0, #0
}
 8000e56:	b003      	add	sp, #12
 8000e58:	f85d fb04 	ldr.w	pc, [sp], #4
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000e5c:	6902      	ldr	r2, [r0, #16]
 8000e5e:	2a00      	cmp	r2, #0
 8000e60:	d1ac      	bne.n	8000dbc <UART_Receive_IT+0x12>
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8000e62:	6a82      	ldr	r2, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8000e64:	6803      	ldr	r3, [r0, #0]
 8000e66:	685b      	ldr	r3, [r3, #4]
 8000e68:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000e6c:	8013      	strh	r3, [r2, #0]
      huart->pRxBuffPtr += 2U;
 8000e6e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e70:	3302      	adds	r3, #2
 8000e72:	6283      	str	r3, [r0, #40]	; 0x28
 8000e74:	e7b1      	b.n	8000dda <UART_Receive_IT+0x30>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8000e76:	6803      	ldr	r3, [r0, #0]
 8000e78:	685b      	ldr	r3, [r3, #4]
 8000e7a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000e7e:	7013      	strb	r3, [r2, #0]
 8000e80:	e7a8      	b.n	8000dd4 <UART_Receive_IT+0x2a>
        HAL_UART_RxCpltCallback(huart);
 8000e82:	f7ff ff87 	bl	8000d94 <HAL_UART_RxCpltCallback>
 8000e86:	e7e5      	b.n	8000e54 <UART_Receive_IT+0xaa>
    return HAL_BUSY;
 8000e88:	2002      	movs	r0, #2
 8000e8a:	4770      	bx	lr
    return HAL_OK;
 8000e8c:	2000      	movs	r0, #0
}
 8000e8e:	4770      	bx	lr

08000e90 <HAL_UART_IRQHandler>:
{
 8000e90:	b530      	push	{r4, r5, lr}
 8000e92:	b083      	sub	sp, #12
 8000e94:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8000e96:	6802      	ldr	r2, [r0, #0]
 8000e98:	6813      	ldr	r3, [r2, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8000e9a:	68d0      	ldr	r0, [r2, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8000e9c:	6951      	ldr	r1, [r2, #20]
  if (errorflags == RESET)
 8000e9e:	f013 050f 	ands.w	r5, r3, #15
 8000ea2:	d105      	bne.n	8000eb0 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000ea4:	f013 0f20 	tst.w	r3, #32
 8000ea8:	d002      	beq.n	8000eb0 <HAL_UART_IRQHandler+0x20>
 8000eaa:	f010 0f20 	tst.w	r0, #32
 8000eae:	d119      	bne.n	8000ee4 <HAL_UART_IRQHandler+0x54>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8000eb0:	b12d      	cbz	r5, 8000ebe <HAL_UART_IRQHandler+0x2e>
 8000eb2:	f011 0101 	ands.w	r1, r1, #1
 8000eb6:	d119      	bne.n	8000eec <HAL_UART_IRQHandler+0x5c>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8000eb8:	f410 7f90 	tst.w	r0, #288	; 0x120
 8000ebc:	d116      	bne.n	8000eec <HAL_UART_IRQHandler+0x5c>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000ebe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000ec0:	2901      	cmp	r1, #1
 8000ec2:	d07d      	beq.n	8000fc0 <HAL_UART_IRQHandler+0x130>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8000ec4:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000ec8:	d003      	beq.n	8000ed2 <HAL_UART_IRQHandler+0x42>
 8000eca:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000ece:	f040 8119 	bne.w	8001104 <HAL_UART_IRQHandler+0x274>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8000ed2:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000ed6:	d003      	beq.n	8000ee0 <HAL_UART_IRQHandler+0x50>
 8000ed8:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000edc:	f040 8116 	bne.w	800110c <HAL_UART_IRQHandler+0x27c>
}
 8000ee0:	b003      	add	sp, #12
 8000ee2:	bd30      	pop	{r4, r5, pc}
      UART_Receive_IT(huart);
 8000ee4:	4620      	mov	r0, r4
 8000ee6:	f7ff ff60 	bl	8000daa <UART_Receive_IT>
      return;
 8000eea:	e7f9      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8000eec:	f013 0f01 	tst.w	r3, #1
 8000ef0:	d006      	beq.n	8000f00 <HAL_UART_IRQHandler+0x70>
 8000ef2:	f410 7f80 	tst.w	r0, #256	; 0x100
 8000ef6:	d003      	beq.n	8000f00 <HAL_UART_IRQHandler+0x70>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8000ef8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000efa:	f042 0201 	orr.w	r2, r2, #1
 8000efe:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000f00:	f013 0f04 	tst.w	r3, #4
 8000f04:	d004      	beq.n	8000f10 <HAL_UART_IRQHandler+0x80>
 8000f06:	b119      	cbz	r1, 8000f10 <HAL_UART_IRQHandler+0x80>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8000f08:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f0a:	f042 0202 	orr.w	r2, r2, #2
 8000f0e:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000f10:	f013 0f02 	tst.w	r3, #2
 8000f14:	d004      	beq.n	8000f20 <HAL_UART_IRQHandler+0x90>
 8000f16:	b119      	cbz	r1, 8000f20 <HAL_UART_IRQHandler+0x90>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8000f18:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f1a:	f042 0204 	orr.w	r2, r2, #4
 8000f1e:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8000f20:	f013 0f08 	tst.w	r3, #8
 8000f24:	d007      	beq.n	8000f36 <HAL_UART_IRQHandler+0xa6>
 8000f26:	f010 0f20 	tst.w	r0, #32
 8000f2a:	d100      	bne.n	8000f2e <HAL_UART_IRQHandler+0x9e>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8000f2c:	b119      	cbz	r1, 8000f36 <HAL_UART_IRQHandler+0xa6>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8000f2e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f30:	f042 0208 	orr.w	r2, r2, #8
 8000f34:	6462      	str	r2, [r4, #68]	; 0x44
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8000f36:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f38:	2a00      	cmp	r2, #0
 8000f3a:	d0d1      	beq.n	8000ee0 <HAL_UART_IRQHandler+0x50>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000f3c:	f013 0f20 	tst.w	r3, #32
 8000f40:	d002      	beq.n	8000f48 <HAL_UART_IRQHandler+0xb8>
 8000f42:	f010 0f20 	tst.w	r0, #32
 8000f46:	d129      	bne.n	8000f9c <HAL_UART_IRQHandler+0x10c>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8000f48:	6823      	ldr	r3, [r4, #0]
 8000f4a:	695b      	ldr	r3, [r3, #20]
 8000f4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8000f50:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f52:	f012 0f08 	tst.w	r2, #8
 8000f56:	d100      	bne.n	8000f5a <HAL_UART_IRQHandler+0xca>
 8000f58:	b363      	cbz	r3, 8000fb4 <HAL_UART_IRQHandler+0x124>
        UART_EndRxTransfer(huart);
 8000f5a:	4620      	mov	r0, r4
 8000f5c:	f7ff fcb2 	bl	80008c4 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000f60:	6823      	ldr	r3, [r4, #0]
 8000f62:	695b      	ldr	r3, [r3, #20]
 8000f64:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f68:	d020      	beq.n	8000fac <HAL_UART_IRQHandler+0x11c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8000f6a:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000f6c:	f102 0314 	add.w	r3, r2, #20
 8000f70:	e853 3f00 	ldrex	r3, [r3]
 8000f74:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000f78:	3214      	adds	r2, #20
 8000f7a:	e842 3100 	strex	r1, r3, [r2]
 8000f7e:	2900      	cmp	r1, #0
 8000f80:	d1f3      	bne.n	8000f6a <HAL_UART_IRQHandler+0xda>
          if (huart->hdmarx != NULL)
 8000f82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8000f84:	b173      	cbz	r3, 8000fa4 <HAL_UART_IRQHandler+0x114>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8000f86:	4a63      	ldr	r2, [pc, #396]	; (8001114 <HAL_UART_IRQHandler+0x284>)
 8000f88:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8000f8a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f8c:	f000 faa8 	bl	80014e0 <HAL_DMA_Abort_IT>
 8000f90:	2800      	cmp	r0, #0
 8000f92:	d0a5      	beq.n	8000ee0 <HAL_UART_IRQHandler+0x50>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8000f94:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f96:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000f98:	4798      	blx	r3
 8000f9a:	e7a1      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
        UART_Receive_IT(huart);
 8000f9c:	4620      	mov	r0, r4
 8000f9e:	f7ff ff04 	bl	8000daa <UART_Receive_IT>
 8000fa2:	e7d1      	b.n	8000f48 <HAL_UART_IRQHandler+0xb8>
            HAL_UART_ErrorCallback(huart);
 8000fa4:	4620      	mov	r0, r4
 8000fa6:	f7ff fef6 	bl	8000d96 <HAL_UART_ErrorCallback>
 8000faa:	e799      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
          HAL_UART_ErrorCallback(huart);
 8000fac:	4620      	mov	r0, r4
 8000fae:	f7ff fef2 	bl	8000d96 <HAL_UART_ErrorCallback>
 8000fb2:	e795      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
        HAL_UART_ErrorCallback(huart);
 8000fb4:	4620      	mov	r0, r4
 8000fb6:	f7ff feee 	bl	8000d96 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000fba:	2300      	movs	r3, #0
 8000fbc:	6463      	str	r3, [r4, #68]	; 0x44
    return;
 8000fbe:	e78f      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8000fc0:	f013 0f10 	tst.w	r3, #16
 8000fc4:	f43f af7e 	beq.w	8000ec4 <HAL_UART_IRQHandler+0x34>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8000fc8:	f010 0f10 	tst.w	r0, #16
 8000fcc:	f43f af7a 	beq.w	8000ec4 <HAL_UART_IRQHandler+0x34>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	9301      	str	r3, [sp, #4]
 8000fd4:	6813      	ldr	r3, [r2, #0]
 8000fd6:	9301      	str	r3, [sp, #4]
 8000fd8:	6853      	ldr	r3, [r2, #4]
 8000fda:	9301      	str	r3, [sp, #4]
 8000fdc:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000fde:	6953      	ldr	r3, [r2, #20]
 8000fe0:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000fe4:	d052      	beq.n	800108c <HAL_UART_IRQHandler+0x1fc>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8000fe6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8000fe8:	6813      	ldr	r3, [r2, #0]
 8000fea:	685b      	ldr	r3, [r3, #4]
 8000fec:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	f43f af76 	beq.w	8000ee0 <HAL_UART_IRQHandler+0x50>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8000ff4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8000ff6:	4299      	cmp	r1, r3
 8000ff8:	f67f af72 	bls.w	8000ee0 <HAL_UART_IRQHandler+0x50>
        huart->RxXferCount = nb_remaining_rx_data;
 8000ffc:	85e3      	strh	r3, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8000ffe:	69d3      	ldr	r3, [r2, #28]
 8001000:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001004:	d037      	beq.n	8001076 <HAL_UART_IRQHandler+0x1e6>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8001006:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001008:	f102 030c 	add.w	r3, r2, #12
 800100c:	e853 3f00 	ldrex	r3, [r3]
 8001010:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001014:	320c      	adds	r2, #12
 8001016:	e842 3100 	strex	r1, r3, [r2]
 800101a:	2900      	cmp	r1, #0
 800101c:	d1f3      	bne.n	8001006 <HAL_UART_IRQHandler+0x176>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800101e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001020:	f102 0314 	add.w	r3, r2, #20
 8001024:	e853 3f00 	ldrex	r3, [r3]
 8001028:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800102c:	3214      	adds	r2, #20
 800102e:	e842 3100 	strex	r1, r3, [r2]
 8001032:	2900      	cmp	r1, #0
 8001034:	d1f3      	bne.n	800101e <HAL_UART_IRQHandler+0x18e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8001036:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001038:	f102 0314 	add.w	r3, r2, #20
 800103c:	e853 3f00 	ldrex	r3, [r3]
 8001040:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001044:	3214      	adds	r2, #20
 8001046:	e842 3100 	strex	r1, r3, [r2]
 800104a:	2900      	cmp	r1, #0
 800104c:	d1f3      	bne.n	8001036 <HAL_UART_IRQHandler+0x1a6>
          huart->RxState = HAL_UART_STATE_READY;
 800104e:	2320      	movs	r3, #32
 8001050:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001054:	2300      	movs	r3, #0
 8001056:	6323      	str	r3, [r4, #48]	; 0x30
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001058:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800105a:	f102 030c 	add.w	r3, r2, #12
 800105e:	e853 3f00 	ldrex	r3, [r3]
 8001062:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001066:	320c      	adds	r2, #12
 8001068:	e842 3100 	strex	r1, r3, [r2]
 800106c:	2900      	cmp	r1, #0
 800106e:	d1f3      	bne.n	8001058 <HAL_UART_IRQHandler+0x1c8>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8001070:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001072:	f000 f9eb 	bl	800144c <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8001076:	2302      	movs	r3, #2
 8001078:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800107a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800107c:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800107e:	b29b      	uxth	r3, r3
 8001080:	1ac9      	subs	r1, r1, r3
 8001082:	b289      	uxth	r1, r1
 8001084:	4620      	mov	r0, r4
 8001086:	f7ff fe8f 	bl	8000da8 <HAL_UARTEx_RxEventCallback>
      return;
 800108a:	e729      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800108c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800108e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001090:	b29b      	uxth	r3, r3
 8001092:	1ac9      	subs	r1, r1, r3
 8001094:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 8001096:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001098:	b29b      	uxth	r3, r3
 800109a:	2b00      	cmp	r3, #0
 800109c:	f43f af20 	beq.w	8000ee0 <HAL_UART_IRQHandler+0x50>
          && (nb_rx_data > 0U))
 80010a0:	2900      	cmp	r1, #0
 80010a2:	f43f af1d 	beq.w	8000ee0 <HAL_UART_IRQHandler+0x50>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80010a6:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010a8:	f102 030c 	add.w	r3, r2, #12
 80010ac:	e853 3f00 	ldrex	r3, [r3]
 80010b0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010b4:	320c      	adds	r2, #12
 80010b6:	e842 3000 	strex	r0, r3, [r2]
 80010ba:	2800      	cmp	r0, #0
 80010bc:	d1f3      	bne.n	80010a6 <HAL_UART_IRQHandler+0x216>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80010be:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010c0:	f102 0314 	add.w	r3, r2, #20
 80010c4:	e853 3f00 	ldrex	r3, [r3]
 80010c8:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010cc:	3214      	adds	r2, #20
 80010ce:	e842 3000 	strex	r0, r3, [r2]
 80010d2:	2800      	cmp	r0, #0
 80010d4:	d1f3      	bne.n	80010be <HAL_UART_IRQHandler+0x22e>
        huart->RxState = HAL_UART_STATE_READY;
 80010d6:	2320      	movs	r3, #32
 80010d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80010dc:	2300      	movs	r3, #0
 80010de:	6323      	str	r3, [r4, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80010e0:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010e2:	f102 030c 	add.w	r3, r2, #12
 80010e6:	e853 3f00 	ldrex	r3, [r3]
 80010ea:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010ee:	320c      	adds	r2, #12
 80010f0:	e842 3000 	strex	r0, r3, [r2]
 80010f4:	2800      	cmp	r0, #0
 80010f6:	d1f3      	bne.n	80010e0 <HAL_UART_IRQHandler+0x250>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80010f8:	2302      	movs	r3, #2
 80010fa:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80010fc:	4620      	mov	r0, r4
 80010fe:	f7ff fe53 	bl	8000da8 <HAL_UARTEx_RxEventCallback>
      return;
 8001102:	e6ed      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
    UART_Transmit_IT(huart);
 8001104:	4620      	mov	r0, r4
 8001106:	f7ff fc0b 	bl	8000920 <UART_Transmit_IT>
    return;
 800110a:	e6e9      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
    UART_EndTransmit_IT(huart);
 800110c:	4620      	mov	r0, r4
 800110e:	f7ff fe34 	bl	8000d7a <UART_EndTransmit_IT>
    return;
 8001112:	e6e5      	b.n	8000ee0 <HAL_UART_IRQHandler+0x50>
 8001114:	08000d99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp}

08001118 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8001118:	4b01      	ldr	r3, [pc, #4]	; (8001120 <HAL_RCC_GetHCLKFreq+0x8>)
 800111a:	6818      	ldr	r0, [r3, #0]
 800111c:	4770      	bx	lr
 800111e:	bf00      	nop
 8001120:	20000008 	andcs	r0, r0, r8

08001124 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8001124:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8001126:	f7ff fff7 	bl	8001118 <HAL_RCC_GetHCLKFreq>
 800112a:	4b04      	ldr	r3, [pc, #16]	; (800113c <HAL_RCC_GetPCLK1Freq+0x18>)
 800112c:	689b      	ldr	r3, [r3, #8]
 800112e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8001132:	4a03      	ldr	r2, [pc, #12]	; (8001140 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8001134:	5cd3      	ldrb	r3, [r2, r3]
}
 8001136:	40d8      	lsrs	r0, r3
 8001138:	bd08      	pop	{r3, pc}
 800113a:	bf00      	nop
 800113c:	40023800 	andmi	r3, r2, r0, lsl #16
 8001140:	08002d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp, sp}

08001144 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8001144:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8001146:	f7ff ffe7 	bl	8001118 <HAL_RCC_GetHCLKFreq>
 800114a:	4b04      	ldr	r3, [pc, #16]	; (800115c <HAL_RCC_GetPCLK2Freq+0x18>)
 800114c:	689b      	ldr	r3, [r3, #8]
 800114e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8001152:	4a03      	ldr	r2, [pc, #12]	; (8001160 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8001154:	5cd3      	ldrb	r3, [r2, r3]
}
 8001156:	40d8      	lsrs	r0, r3
 8001158:	bd08      	pop	{r3, pc}
 800115a:	bf00      	nop
 800115c:	40023800 	andmi	r3, r2, r0, lsl #16
 8001160:	08002d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp, sp}

08001164 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001164:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001168:	b082      	sub	sp, #8
 800116a:	4607      	mov	r7, r0
 800116c:	460e      	mov	r6, r1
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 800116e:	4b54      	ldr	r3, [pc, #336]	; (80012c0 <HAL_GPIO_Init+0x15c>)
 8001170:	4298      	cmp	r0, r3
 8001172:	d023      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 8001174:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001178:	4298      	cmp	r0, r3
 800117a:	d01f      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 800117c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001180:	4298      	cmp	r0, r3
 8001182:	d01b      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 8001184:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001188:	4298      	cmp	r0, r3
 800118a:	d017      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 800118c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001190:	4298      	cmp	r0, r3
 8001192:	d013      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 8001194:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001198:	4298      	cmp	r0, r3
 800119a:	d00f      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 800119c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011a0:	4298      	cmp	r0, r3
 80011a2:	d00b      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 80011a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011a8:	4298      	cmp	r0, r3
 80011aa:	d007      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 80011ac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011b0:	4298      	cmp	r0, r3
 80011b2:	d003      	beq.n	80011bc <HAL_GPIO_Init+0x58>
 80011b4:	21ac      	movs	r1, #172	; 0xac
 80011b6:	4843      	ldr	r0, [pc, #268]	; (80012c4 <HAL_GPIO_Init+0x160>)
 80011b8:	f7ff fadc 	bl	8000774 <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 80011bc:	6833      	ldr	r3, [r6, #0]
 80011be:	b29a      	uxth	r2, r3
 80011c0:	b112      	cbz	r2, 80011c8 <HAL_GPIO_Init+0x64>
 80011c2:	0c1b      	lsrs	r3, r3, #16
 80011c4:	041b      	lsls	r3, r3, #16
 80011c6:	b11b      	cbz	r3, 80011d0 <HAL_GPIO_Init+0x6c>
 80011c8:	21ad      	movs	r1, #173	; 0xad
 80011ca:	483e      	ldr	r0, [pc, #248]	; (80012c4 <HAL_GPIO_Init+0x160>)
 80011cc:	f7ff fad2 	bl	8000774 <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80011d0:	6873      	ldr	r3, [r6, #4]
 80011d2:	2b01      	cmp	r3, #1
 80011d4:	d919      	bls.n	800120a <HAL_GPIO_Init+0xa6>
 80011d6:	2b11      	cmp	r3, #17
 80011d8:	d017      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011da:	2b02      	cmp	r3, #2
 80011dc:	d015      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011de:	2b12      	cmp	r3, #18
 80011e0:	d013      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011e2:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 80011e6:	d010      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011e8:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 80011ec:	d00d      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011ee:	f5b3 1f44 	cmp.w	r3, #3211264	; 0x310000
 80011f2:	d00a      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011f4:	f5b3 1f90 	cmp.w	r3, #1179648	; 0x120000
 80011f8:	d007      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 80011fa:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 80011fe:	d004      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 8001200:	f5b3 1f48 	cmp.w	r3, #3276800	; 0x320000
 8001204:	d001      	beq.n	800120a <HAL_GPIO_Init+0xa6>
 8001206:	2b03      	cmp	r3, #3
 8001208:	d101      	bne.n	800120e <HAL_GPIO_Init+0xaa>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800120a:	2400      	movs	r4, #0
 800120c:	e092      	b.n	8001334 <HAL_GPIO_Init+0x1d0>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 800120e:	21ae      	movs	r1, #174	; 0xae
 8001210:	482c      	ldr	r0, [pc, #176]	; (80012c4 <HAL_GPIO_Init+0x160>)
 8001212:	f7ff faaf 	bl	8000774 <assert_failed>
 8001216:	e7f8      	b.n	800120a <HAL_GPIO_Init+0xa6>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 8001218:	68f3      	ldr	r3, [r6, #12]
 800121a:	2b03      	cmp	r3, #3
 800121c:	d813      	bhi.n	8001246 <HAL_GPIO_Init+0xe2>
        temp = GPIOx->OSPEEDR; 
 800121e:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001220:	0061      	lsls	r1, r4, #1
 8001222:	2303      	movs	r3, #3
 8001224:	408b      	lsls	r3, r1
 8001226:	ea22 0203 	bic.w	r2, r2, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 800122a:	68f3      	ldr	r3, [r6, #12]
 800122c:	408b      	lsls	r3, r1
 800122e:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 8001230:	60bb      	str	r3, [r7, #8]
        temp = GPIOx->OTYPER;
 8001232:	687a      	ldr	r2, [r7, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001234:	ea22 0205 	bic.w	r2, r2, r5
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001238:	6873      	ldr	r3, [r6, #4]
 800123a:	f3c3 1500 	ubfx	r5, r3, #4, #1
 800123e:	40a5      	lsls	r5, r4
 8001240:	4315      	orrs	r5, r2
        GPIOx->OTYPER = temp;
 8001242:	607d      	str	r5, [r7, #4]
 8001244:	e087      	b.n	8001356 <HAL_GPIO_Init+0x1f2>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 8001246:	21c0      	movs	r1, #192	; 0xc0
 8001248:	481e      	ldr	r0, [pc, #120]	; (80012c4 <HAL_GPIO_Init+0x160>)
 800124a:	f7ff fa93 	bl	8000774 <assert_failed>
 800124e:	e7e6      	b.n	800121e <HAL_GPIO_Init+0xba>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8001250:	21d1      	movs	r1, #209	; 0xd1
 8001252:	481c      	ldr	r0, [pc, #112]	; (80012c4 <HAL_GPIO_Init+0x160>)
 8001254:	f7ff fa8e 	bl	8000774 <assert_failed>
 8001258:	e086      	b.n	8001368 <HAL_GPIO_Init+0x204>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 800125a:	6933      	ldr	r3, [r6, #16]
 800125c:	b1bb      	cbz	r3, 800128e <HAL_GPIO_Init+0x12a>
 800125e:	2b09      	cmp	r3, #9
 8001260:	d015      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 8001262:	2b01      	cmp	r3, #1
 8001264:	d013      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 8001266:	2b02      	cmp	r3, #2
 8001268:	d011      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 800126a:	2b03      	cmp	r3, #3
 800126c:	d00f      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 800126e:	2b04      	cmp	r3, #4
 8001270:	d00d      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 8001272:	2b05      	cmp	r3, #5
 8001274:	d00b      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 8001276:	2b06      	cmp	r3, #6
 8001278:	d009      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 800127a:	2b07      	cmp	r3, #7
 800127c:	d007      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 800127e:	2b08      	cmp	r3, #8
 8001280:	d005      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 8001282:	2b0a      	cmp	r3, #10
 8001284:	d003      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 8001286:	2b0c      	cmp	r3, #12
 8001288:	d001      	beq.n	800128e <HAL_GPIO_Init+0x12a>
 800128a:	2b0f      	cmp	r3, #15
 800128c:	d110      	bne.n	80012b0 <HAL_GPIO_Init+0x14c>
        temp = GPIOx->AFR[position >> 3U];
 800128e:	08e2      	lsrs	r2, r4, #3
 8001290:	3208      	adds	r2, #8
 8001292:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001296:	f004 0307 	and.w	r3, r4, #7
 800129a:	0099      	lsls	r1, r3, #2
 800129c:	230f      	movs	r3, #15
 800129e:	408b      	lsls	r3, r1
 80012a0:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80012a4:	6933      	ldr	r3, [r6, #16]
 80012a6:	408b      	lsls	r3, r1
 80012a8:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3U] = temp;
 80012aa:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
 80012ae:	e06b      	b.n	8001388 <HAL_GPIO_Init+0x224>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 80012b0:	21de      	movs	r1, #222	; 0xde
 80012b2:	4804      	ldr	r0, [pc, #16]	; (80012c4 <HAL_GPIO_Init+0x160>)
 80012b4:	f7ff fa5e 	bl	8000774 <assert_failed>
 80012b8:	e7e9      	b.n	800128e <HAL_GPIO_Init+0x12a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80012ba:	2307      	movs	r3, #7
 80012bc:	e005      	b.n	80012ca <HAL_GPIO_Init+0x166>
 80012be:	bf00      	nop
 80012c0:	40020000 	andmi	r0, r2, r0
 80012c4:	08002ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, sp}
 80012c8:	2300      	movs	r3, #0
 80012ca:	408b      	lsls	r3, r1
 80012cc:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2U] = temp;
 80012ce:	3202      	adds	r2, #2
 80012d0:	495a      	ldr	r1, [pc, #360]	; (800143c <HAL_GPIO_Init+0x2d8>)
 80012d2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80012d6:	4b5a      	ldr	r3, [pc, #360]	; (8001440 <HAL_GPIO_Init+0x2dc>)
 80012d8:	689a      	ldr	r2, [r3, #8]
        temp &= ~((uint32_t)iocurrent);
 80012da:	ea6f 0308 	mvn.w	r3, r8
 80012de:	ea22 0108 	bic.w	r1, r2, r8
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80012e2:	6870      	ldr	r0, [r6, #4]
 80012e4:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 80012e8:	d001      	beq.n	80012ee <HAL_GPIO_Init+0x18a>
        {
          temp |= iocurrent;
 80012ea:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->RTSR = temp;
 80012ee:	4a54      	ldr	r2, [pc, #336]	; (8001440 <HAL_GPIO_Init+0x2dc>)
 80012f0:	6091      	str	r1, [r2, #8]

        temp = EXTI->FTSR;
 80012f2:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80012f4:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80012f8:	6870      	ldr	r0, [r6, #4]
 80012fa:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 80012fe:	d001      	beq.n	8001304 <HAL_GPIO_Init+0x1a0>
        {
          temp |= iocurrent;
 8001300:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->FTSR = temp;
 8001304:	4a4e      	ldr	r2, [pc, #312]	; (8001440 <HAL_GPIO_Init+0x2dc>)
 8001306:	60d1      	str	r1, [r2, #12]

        temp = EXTI->EMR;
 8001308:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 800130a:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800130e:	6870      	ldr	r0, [r6, #4]
 8001310:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 8001314:	d001      	beq.n	800131a <HAL_GPIO_Init+0x1b6>
        {
          temp |= iocurrent;
 8001316:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->EMR = temp;
 800131a:	4a49      	ldr	r2, [pc, #292]	; (8001440 <HAL_GPIO_Init+0x2dc>)
 800131c:	6051      	str	r1, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800131e:	6812      	ldr	r2, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8001320:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8001322:	6871      	ldr	r1, [r6, #4]
 8001324:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 8001328:	d001      	beq.n	800132e <HAL_GPIO_Init+0x1ca>
        {
          temp |= iocurrent;
 800132a:	ea48 0302 	orr.w	r3, r8, r2
        }
        EXTI->IMR = temp;
 800132e:	4a44      	ldr	r2, [pc, #272]	; (8001440 <HAL_GPIO_Init+0x2dc>)
 8001330:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001332:	3401      	adds	r4, #1
 8001334:	2c0f      	cmp	r4, #15
 8001336:	d87e      	bhi.n	8001436 <HAL_GPIO_Init+0x2d2>
    ioposition = 0x01U << position;
 8001338:	2501      	movs	r5, #1
 800133a:	40a5      	lsls	r5, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800133c:	6833      	ldr	r3, [r6, #0]
 800133e:	ea03 0805 	and.w	r8, r3, r5
    if(iocurrent == ioposition)
 8001342:	ea35 0303 	bics.w	r3, r5, r3
 8001346:	d1f4      	bne.n	8001332 <HAL_GPIO_Init+0x1ce>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001348:	6873      	ldr	r3, [r6, #4]
 800134a:	f003 0303 	and.w	r3, r3, #3
 800134e:	3b01      	subs	r3, #1
 8001350:	2b01      	cmp	r3, #1
 8001352:	f67f af61 	bls.w	8001218 <HAL_GPIO_Init+0xb4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001356:	6873      	ldr	r3, [r6, #4]
 8001358:	f003 0303 	and.w	r3, r3, #3
 800135c:	2b03      	cmp	r3, #3
 800135e:	d00d      	beq.n	800137c <HAL_GPIO_Init+0x218>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8001360:	68b3      	ldr	r3, [r6, #8]
 8001362:	2b02      	cmp	r3, #2
 8001364:	f63f af74 	bhi.w	8001250 <HAL_GPIO_Init+0xec>
        temp = GPIOx->PUPDR;
 8001368:	68fa      	ldr	r2, [r7, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800136a:	0061      	lsls	r1, r4, #1
 800136c:	2303      	movs	r3, #3
 800136e:	408b      	lsls	r3, r1
 8001370:	ea22 0203 	bic.w	r2, r2, r3
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001374:	68b3      	ldr	r3, [r6, #8]
 8001376:	408b      	lsls	r3, r1
 8001378:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 800137a:	60fb      	str	r3, [r7, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800137c:	6873      	ldr	r3, [r6, #4]
 800137e:	f003 0303 	and.w	r3, r3, #3
 8001382:	2b02      	cmp	r3, #2
 8001384:	f43f af69 	beq.w	800125a <HAL_GPIO_Init+0xf6>
      temp = GPIOx->MODER;
 8001388:	683a      	ldr	r2, [r7, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800138a:	0061      	lsls	r1, r4, #1
 800138c:	2303      	movs	r3, #3
 800138e:	408b      	lsls	r3, r1
 8001390:	ea22 0203 	bic.w	r2, r2, r3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001394:	6873      	ldr	r3, [r6, #4]
 8001396:	f003 0303 	and.w	r3, r3, #3
 800139a:	408b      	lsls	r3, r1
 800139c:	4313      	orrs	r3, r2
      GPIOx->MODER = temp;
 800139e:	603b      	str	r3, [r7, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80013a0:	6873      	ldr	r3, [r6, #4]
 80013a2:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 80013a6:	d0c4      	beq.n	8001332 <HAL_GPIO_Init+0x1ce>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80013a8:	2300      	movs	r3, #0
 80013aa:	9301      	str	r3, [sp, #4]
 80013ac:	4b25      	ldr	r3, [pc, #148]	; (8001444 <HAL_GPIO_Init+0x2e0>)
 80013ae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80013b0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80013b4:	645a      	str	r2, [r3, #68]	; 0x44
 80013b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013b8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80013bc:	9301      	str	r3, [sp, #4]
 80013be:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80013c0:	08a2      	lsrs	r2, r4, #2
 80013c2:	1c91      	adds	r1, r2, #2
 80013c4:	4b1d      	ldr	r3, [pc, #116]	; (800143c <HAL_GPIO_Init+0x2d8>)
 80013c6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80013ca:	f004 0303 	and.w	r3, r4, #3
 80013ce:	0099      	lsls	r1, r3, #2
 80013d0:	230f      	movs	r3, #15
 80013d2:	408b      	lsls	r3, r1
 80013d4:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80013d8:	4b1b      	ldr	r3, [pc, #108]	; (8001448 <HAL_GPIO_Init+0x2e4>)
 80013da:	429f      	cmp	r7, r3
 80013dc:	f43f af74 	beq.w	80012c8 <HAL_GPIO_Init+0x164>
 80013e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013e4:	429f      	cmp	r7, r3
 80013e6:	d01a      	beq.n	800141e <HAL_GPIO_Init+0x2ba>
 80013e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013ec:	429f      	cmp	r7, r3
 80013ee:	d018      	beq.n	8001422 <HAL_GPIO_Init+0x2be>
 80013f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013f4:	429f      	cmp	r7, r3
 80013f6:	d016      	beq.n	8001426 <HAL_GPIO_Init+0x2c2>
 80013f8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013fc:	429f      	cmp	r7, r3
 80013fe:	d014      	beq.n	800142a <HAL_GPIO_Init+0x2c6>
 8001400:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001404:	429f      	cmp	r7, r3
 8001406:	d012      	beq.n	800142e <HAL_GPIO_Init+0x2ca>
 8001408:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800140c:	429f      	cmp	r7, r3
 800140e:	d010      	beq.n	8001432 <HAL_GPIO_Init+0x2ce>
 8001410:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001414:	429f      	cmp	r7, r3
 8001416:	f43f af50 	beq.w	80012ba <HAL_GPIO_Init+0x156>
 800141a:	2308      	movs	r3, #8
 800141c:	e755      	b.n	80012ca <HAL_GPIO_Init+0x166>
 800141e:	2301      	movs	r3, #1
 8001420:	e753      	b.n	80012ca <HAL_GPIO_Init+0x166>
 8001422:	2302      	movs	r3, #2
 8001424:	e751      	b.n	80012ca <HAL_GPIO_Init+0x166>
 8001426:	2303      	movs	r3, #3
 8001428:	e74f      	b.n	80012ca <HAL_GPIO_Init+0x166>
 800142a:	2304      	movs	r3, #4
 800142c:	e74d      	b.n	80012ca <HAL_GPIO_Init+0x166>
 800142e:	2305      	movs	r3, #5
 8001430:	e74b      	b.n	80012ca <HAL_GPIO_Init+0x166>
 8001432:	2306      	movs	r3, #6
 8001434:	e749      	b.n	80012ca <HAL_GPIO_Init+0x166>
      }
    }
  }
}
 8001436:	b002      	add	sp, #8
 8001438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800143c:	40013800 	andmi	r3, r1, r0, lsl #16
 8001440:	40013c00 	andmi	r3, r1, r0, lsl #24
 8001444:	40023800 	andmi	r3, r2, r0, lsl #16
 8001448:	40020000 	andmi	r0, r2, r0

0800144c <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 800144c:	b570      	push	{r4, r5, r6, lr}
 800144e:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8001450:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8001452:	f000 f935 	bl	80016c0 <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001456:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800145a:	b2db      	uxtb	r3, r3
 800145c:	2b02      	cmp	r3, #2
 800145e:	d006      	beq.n	800146e <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001460:	2380      	movs	r3, #128	; 0x80
 8001462:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001464:	2300      	movs	r3, #0
 8001466:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 800146a:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 800146c:	bd70      	pop	{r4, r5, r6, pc}
 800146e:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001470:	6822      	ldr	r2, [r4, #0]
 8001472:	6813      	ldr	r3, [r2, #0]
 8001474:	f023 0316 	bic.w	r3, r3, #22
 8001478:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800147a:	6822      	ldr	r2, [r4, #0]
 800147c:	6953      	ldr	r3, [r2, #20]
 800147e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001482:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001484:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001486:	b1e3      	cbz	r3, 80014c2 <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8001488:	6822      	ldr	r2, [r4, #0]
 800148a:	6813      	ldr	r3, [r2, #0]
 800148c:	f023 0308 	bic.w	r3, r3, #8
 8001490:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 8001492:	6822      	ldr	r2, [r4, #0]
 8001494:	6813      	ldr	r3, [r2, #0]
 8001496:	f023 0301 	bic.w	r3, r3, #1
 800149a:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800149c:	6823      	ldr	r3, [r4, #0]
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	f013 0f01 	tst.w	r3, #1
 80014a4:	d011      	beq.n	80014ca <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80014a6:	f000 f90b 	bl	80016c0 <HAL_GetTick>
 80014aa:	1b43      	subs	r3, r0, r5
 80014ac:	2b05      	cmp	r3, #5
 80014ae:	d9f5      	bls.n	800149c <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80014b0:	2320      	movs	r3, #32
 80014b2:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80014b4:	2003      	movs	r0, #3
 80014b6:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80014ba:	2300      	movs	r3, #0
 80014bc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 80014c0:	e7d4      	b.n	800146c <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80014c2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d1df      	bne.n	8001488 <HAL_DMA_Abort+0x3c>
 80014c8:	e7e3      	b.n	8001492 <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80014ca:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80014cc:	233f      	movs	r3, #63	; 0x3f
 80014ce:	4093      	lsls	r3, r2
 80014d0:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 80014d2:	2301      	movs	r3, #1
 80014d4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 80014d8:	2000      	movs	r0, #0
 80014da:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 80014de:	e7c5      	b.n	800146c <HAL_DMA_Abort+0x20>

080014e0 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80014e0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80014e4:	b2db      	uxtb	r3, r3
 80014e6:	2b02      	cmp	r3, #2
 80014e8:	d003      	beq.n	80014f2 <HAL_DMA_Abort_IT+0x12>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80014ea:	2380      	movs	r3, #128	; 0x80
 80014ec:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80014ee:	2001      	movs	r0, #1
 80014f0:	4770      	bx	lr
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80014f2:	2305      	movs	r3, #5
 80014f4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80014f8:	6802      	ldr	r2, [r0, #0]
 80014fa:	6813      	ldr	r3, [r2, #0]
 80014fc:	f023 0301 	bic.w	r3, r3, #1
 8001500:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8001502:	2000      	movs	r0, #0
}
 8001504:	4770      	bx	lr
	...

08001508 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001508:	b510      	push	{r4, lr}
 800150a:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 800150c:	1ec3      	subs	r3, r0, #3
 800150e:	2b04      	cmp	r3, #4
 8001510:	d80f      	bhi.n	8001532 <HAL_NVIC_SetPriorityGrouping+0x2a>
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001512:	4a0a      	ldr	r2, [pc, #40]	; (800153c <HAL_NVIC_SetPriorityGrouping+0x34>)
 8001514:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001516:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800151a:	041b      	lsls	r3, r3, #16
 800151c:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800151e:	0224      	lsls	r4, r4, #8
 8001520:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001524:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 8001526:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800152a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800152e:	60d3      	str	r3, [r2, #12]
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8001530:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 8001532:	2190      	movs	r1, #144	; 0x90
 8001534:	4802      	ldr	r0, [pc, #8]	; (8001540 <HAL_NVIC_SetPriorityGrouping+0x38>)
 8001536:	f7ff f91d 	bl	8000774 <assert_failed>
 800153a:	e7ea      	b.n	8001512 <HAL_NVIC_SetPriorityGrouping+0xa>
 800153c:	e000ed00 	and	lr, r0, r0, lsl #26
 8001540:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}

08001544 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001544:	b570      	push	{r4, r5, r6, lr}
 8001546:	4605      	mov	r5, r0
 8001548:	460c      	mov	r4, r1
 800154a:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00U;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 800154c:	2a0f      	cmp	r2, #15
 800154e:	d825      	bhi.n	800159c <HAL_NVIC_SetPriority+0x58>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 8001550:	2c0f      	cmp	r4, #15
 8001552:	d828      	bhi.n	80015a6 <HAL_NVIC_SetPriority+0x62>
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001554:	4b1b      	ldr	r3, [pc, #108]	; (80015c4 <HAL_NVIC_SetPriority+0x80>)
 8001556:	68db      	ldr	r3, [r3, #12]
 8001558:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800155c:	f1c3 0107 	rsb	r1, r3, #7
 8001560:	2904      	cmp	r1, #4
 8001562:	bf28      	it	cs
 8001564:	2104      	movcs	r1, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001566:	1d1a      	adds	r2, r3, #4
 8001568:	2a06      	cmp	r2, #6
 800156a:	d921      	bls.n	80015b0 <HAL_NVIC_SetPriority+0x6c>
 800156c:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800156e:	f04f 32ff 	mov.w	r2, #4294967295
 8001572:	fa02 f101 	lsl.w	r1, r2, r1
 8001576:	ea24 0401 	bic.w	r4, r4, r1
 800157a:	409c      	lsls	r4, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800157c:	fa02 f303 	lsl.w	r3, r2, r3
 8001580:	ea26 0603 	bic.w	r6, r6, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001584:	4334      	orrs	r4, r6
  if ((int32_t)(IRQn) >= 0)
 8001586:	2d00      	cmp	r5, #0
 8001588:	db14      	blt.n	80015b4 <HAL_NVIC_SetPriority+0x70>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800158a:	0124      	lsls	r4, r4, #4
 800158c:	b2e4      	uxtb	r4, r4
 800158e:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 8001592:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 8001596:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800159a:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 800159c:	21a8      	movs	r1, #168	; 0xa8
 800159e:	480a      	ldr	r0, [pc, #40]	; (80015c8 <HAL_NVIC_SetPriority+0x84>)
 80015a0:	f7ff f8e8 	bl	8000774 <assert_failed>
 80015a4:	e7d4      	b.n	8001550 <HAL_NVIC_SetPriority+0xc>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 80015a6:	21a9      	movs	r1, #169	; 0xa9
 80015a8:	4807      	ldr	r0, [pc, #28]	; (80015c8 <HAL_NVIC_SetPriority+0x84>)
 80015aa:	f7ff f8e3 	bl	8000774 <assert_failed>
 80015ae:	e7d1      	b.n	8001554 <HAL_NVIC_SetPriority+0x10>
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015b0:	2300      	movs	r3, #0
 80015b2:	e7dc      	b.n	800156e <HAL_NVIC_SetPriority+0x2a>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80015b4:	f005 050f 	and.w	r5, r5, #15
 80015b8:	0124      	lsls	r4, r4, #4
 80015ba:	b2e4      	uxtb	r4, r4
 80015bc:	4b03      	ldr	r3, [pc, #12]	; (80015cc <HAL_NVIC_SetPriority+0x88>)
 80015be:	555c      	strb	r4, [r3, r5]
}
 80015c0:	e7eb      	b.n	800159a <HAL_NVIC_SetPriority+0x56>
 80015c2:	bf00      	nop
 80015c4:	e000ed00 	and	lr, r0, r0, lsl #26
 80015c8:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
 80015cc:	e000ed14 	and	lr, r0, r4, lsl sp

080015d0 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80015d0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 80015d2:	1e04      	subs	r4, r0, #0
 80015d4:	db0a      	blt.n	80015ec <HAL_NVIC_EnableIRQ+0x1c>
  if ((int32_t)(IRQn) >= 0)
 80015d6:	2c00      	cmp	r4, #0
 80015d8:	db07      	blt.n	80015ea <HAL_NVIC_EnableIRQ+0x1a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015da:	f004 021f 	and.w	r2, r4, #31
 80015de:	0964      	lsrs	r4, r4, #5
 80015e0:	2301      	movs	r3, #1
 80015e2:	4093      	lsls	r3, r2
 80015e4:	4a04      	ldr	r2, [pc, #16]	; (80015f8 <HAL_NVIC_EnableIRQ+0x28>)
 80015e6:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80015ea:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 80015ec:	21bc      	movs	r1, #188	; 0xbc
 80015ee:	4803      	ldr	r0, [pc, #12]	; (80015fc <HAL_NVIC_EnableIRQ+0x2c>)
 80015f0:	f7ff f8c0 	bl	8000774 <assert_failed>
 80015f4:	e7ef      	b.n	80015d6 <HAL_NVIC_EnableIRQ+0x6>
 80015f6:	bf00      	nop
 80015f8:	e000e100 	and	lr, r0, r0, lsl #2
 80015fc:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}

08001600 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001600:	3801      	subs	r0, #1
 8001602:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001606:	d20b      	bcs.n	8001620 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001608:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800160c:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800160e:	4a05      	ldr	r2, [pc, #20]	; (8001624 <HAL_SYSTICK_Config+0x24>)
 8001610:	21f0      	movs	r1, #240	; 0xf0
 8001612:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001616:	2000      	movs	r0, #0
 8001618:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800161a:	2207      	movs	r2, #7
 800161c:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800161e:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 8001620:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8001622:	4770      	bx	lr
 8001624:	e000ed00 	and	lr, r0, r0, lsl #26

08001628 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001628:	b510      	push	{r4, lr}
 800162a:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800162c:	4b0e      	ldr	r3, [pc, #56]	; (8001668 <HAL_InitTick+0x40>)
 800162e:	7818      	ldrb	r0, [r3, #0]
 8001630:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001634:	fbb3 f3f0 	udiv	r3, r3, r0
 8001638:	4a0c      	ldr	r2, [pc, #48]	; (800166c <HAL_InitTick+0x44>)
 800163a:	6810      	ldr	r0, [r2, #0]
 800163c:	fbb0 f0f3 	udiv	r0, r0, r3
 8001640:	f7ff ffde 	bl	8001600 <HAL_SYSTICK_Config>
 8001644:	b968      	cbnz	r0, 8001662 <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001646:	2c0f      	cmp	r4, #15
 8001648:	d901      	bls.n	800164e <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 800164a:	2001      	movs	r0, #1
 800164c:	e00a      	b.n	8001664 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800164e:	2200      	movs	r2, #0
 8001650:	4621      	mov	r1, r4
 8001652:	f04f 30ff 	mov.w	r0, #4294967295
 8001656:	f7ff ff75 	bl	8001544 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800165a:	4b05      	ldr	r3, [pc, #20]	; (8001670 <HAL_InitTick+0x48>)
 800165c:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800165e:	2000      	movs	r0, #0
 8001660:	e000      	b.n	8001664 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 8001662:	2001      	movs	r0, #1
}
 8001664:	bd10      	pop	{r4, pc}
 8001666:	bf00      	nop
 8001668:	20000000 	andcs	r0, r0, r0
 800166c:	20000008 	andcs	r0, r0, r8
 8001670:	20000004 	andcs	r0, r0, r4

08001674 <HAL_Init>:
{
 8001674:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001676:	4b0b      	ldr	r3, [pc, #44]	; (80016a4 <HAL_Init+0x30>)
 8001678:	681a      	ldr	r2, [r3, #0]
 800167a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800167e:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001680:	681a      	ldr	r2, [r3, #0]
 8001682:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001686:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001688:	681a      	ldr	r2, [r3, #0]
 800168a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800168e:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001690:	2003      	movs	r0, #3
 8001692:	f7ff ff39 	bl	8001508 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001696:	200f      	movs	r0, #15
 8001698:	f7ff ffc6 	bl	8001628 <HAL_InitTick>
  HAL_MspInit();
 800169c:	f7ff f8f6 	bl	800088c <HAL_MspInit>
}
 80016a0:	2000      	movs	r0, #0
 80016a2:	bd08      	pop	{r3, pc}
 80016a4:	40023c00 	andmi	r3, r2, r0, lsl #24

080016a8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80016a8:	4a03      	ldr	r2, [pc, #12]	; (80016b8 <HAL_IncTick+0x10>)
 80016aa:	6811      	ldr	r1, [r2, #0]
 80016ac:	4b03      	ldr	r3, [pc, #12]	; (80016bc <HAL_IncTick+0x14>)
 80016ae:	781b      	ldrb	r3, [r3, #0]
 80016b0:	440b      	add	r3, r1
 80016b2:	6013      	str	r3, [r2, #0]
}
 80016b4:	4770      	bx	lr
 80016b6:	bf00      	nop
 80016b8:	200000d4 	ldrdcs	r0, [r0], -r4
 80016bc:	20000000 	andcs	r0, r0, r0

080016c0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80016c0:	4b01      	ldr	r3, [pc, #4]	; (80016c8 <HAL_GetTick+0x8>)
 80016c2:	6818      	ldr	r0, [r3, #0]
}
 80016c4:	4770      	bx	lr
 80016c6:	bf00      	nop
 80016c8:	200000d4 	ldrdcs	r0, [r0], -r4

080016cc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80016cc:	b538      	push	{r3, r4, r5, lr}
 80016ce:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80016d0:	f7ff fff6 	bl	80016c0 <HAL_GetTick>
 80016d4:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80016d6:	f1b4 3fff 	cmp.w	r4, #4294967295
 80016da:	d002      	beq.n	80016e2 <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 80016dc:	4b04      	ldr	r3, [pc, #16]	; (80016f0 <HAL_Delay+0x24>)
 80016de:	781b      	ldrb	r3, [r3, #0]
 80016e0:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80016e2:	f7ff ffed 	bl	80016c0 <HAL_GetTick>
 80016e6:	1b40      	subs	r0, r0, r5
 80016e8:	42a0      	cmp	r0, r4
 80016ea:	d3fa      	bcc.n	80016e2 <HAL_Delay+0x16>
  {
  }
}
 80016ec:	bd38      	pop	{r3, r4, r5, pc}
 80016ee:	bf00      	nop
 80016f0:	20000000 	andcs	r0, r0, r0

080016f4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80016f4:	4a03      	ldr	r2, [pc, #12]	; (8001704 <SystemInit+0x10>)
 80016f6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80016fa:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80016fe:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001702:	4770      	bx	lr
 8001704:	e000ed00 	and	lr, r0, r0, lsl #26

08001708 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
 8001708:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
 800170a:	2300      	movs	r3, #0
 800170c:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 800170e:	e007      	b.n	8001720 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
 8001710:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8001714:	aa02      	add	r2, sp, #8
 8001716:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800171a:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 800171e:	3301      	adds	r3, #1
 8001720:	2b01      	cmp	r3, #1
 8001722:	d9f5      	bls.n	8001710 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
 8001724:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
 8001728:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
 800172c:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8001730:	b002      	add	sp, #8
 8001732:	4770      	bx	lr

08001734 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
 8001734:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
 8001738:	0c00      	lsrs	r0, r0, #16
 800173a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
 800173e:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 8001742:	d00a      	beq.n	800175a <opcode_is_bl_or_blx+0x26>
 8001744:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 8001748:	d009      	beq.n	800175e <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
 800174a:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
 800174e:	d008      	beq.n	8001762 <opcode_is_bl_or_blx+0x2e>
 8001750:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
 8001754:	d007      	beq.n	8001766 <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
 8001756:	2000      	movs	r0, #0
 8001758:	4770      	bx	lr
        return true;
 800175a:	2001      	movs	r0, #1
 800175c:	4770      	bx	lr
 800175e:	2001      	movs	r0, #1
 8001760:	4770      	bx	lr
        return true;
 8001762:	2001      	movs	r0, #1
 8001764:	4770      	bx	lr
 8001766:	2001      	movs	r0, #1
}
 8001768:	4770      	bx	lr
	...

0800176c <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
 800176c:	b510      	push	{r4, lr}
 800176e:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
 8001770:	4601      	mov	r1, r0
 8001772:	4803      	ldr	r0, [pc, #12]	; (8001780 <dump_exc_return+0x14>)
 8001774:	f000 fa1c 	bl	8001bb0 <iprintf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
 8001778:	4620      	mov	r0, r4
 800177a:	f000 f92b 	bl	80019d4 <fault_dump_exc_return>
#endif
}
 800177e:	bd10      	pop	{r4, pc}
 8001780:	08002d60 	stmdaeq	r0, {r5, r6, r8, sl, fp, sp}

08001784 <fault_dump_init>:
void fault_dump_init(void) {
 8001784:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
 8001786:	490a      	ldr	r1, [pc, #40]	; (80017b0 <fault_dump_init+0x2c>)
 8001788:	4b0a      	ldr	r3, [pc, #40]	; (80017b4 <fault_dump_init+0x30>)
 800178a:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
 800178c:	4a0a      	ldr	r2, [pc, #40]	; (80017b8 <fault_dump_init+0x34>)
 800178e:	4b0b      	ldr	r3, [pc, #44]	; (80017bc <fault_dump_init+0x38>)
 8001790:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
 8001792:	1a53      	subs	r3, r2, r1
 8001794:	480a      	ldr	r0, [pc, #40]	; (80017c0 <fault_dump_init+0x3c>)
 8001796:	f000 fa0b 	bl	8001bb0 <iprintf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
 800179a:	490a      	ldr	r1, [pc, #40]	; (80017c4 <fault_dump_init+0x40>)
 800179c:	4a0a      	ldr	r2, [pc, #40]	; (80017c8 <fault_dump_init+0x44>)
 800179e:	1a53      	subs	r3, r2, r1
 80017a0:	480a      	ldr	r0, [pc, #40]	; (80017cc <fault_dump_init+0x48>)
 80017a2:	f000 fa05 	bl	8001bb0 <iprintf>
    printf("Code Stack Growth Downward:%d\r\n", 
 80017a6:	2101      	movs	r1, #1
 80017a8:	4809      	ldr	r0, [pc, #36]	; (80017d0 <fault_dump_init+0x4c>)
 80017aa:	f000 fa01 	bl	8001bb0 <iprintf>
}
 80017ae:	bd08      	pop	{r3, pc}
 80017b0:	20000a38 	andcs	r0, r0, r8, lsr sl
 80017b4:	200001d8 	ldrdcs	r0, [r0], -r8
 80017b8:	20001238 	andcs	r1, r0, r8, lsr r2
 80017bc:	200001dc 	ldrdcs	r0, [r0], -ip
 80017c0:	08002d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp, sp}
 80017c4:	08000190 	stmdaeq	r0, {r4, r7, r8}
 80017c8:	08002bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, sp}
 80017cc:	08002d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp, sp}
 80017d0:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}

080017d4 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
 80017d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
 80017d8:	b348      	cbz	r0, 800182e <fault_dump_callstack+0x5a>
 80017da:	460f      	mov	r7, r1
 80017dc:	4614      	mov	r4, r2
 80017de:	461d      	mov	r5, r3
 80017e0:	4680      	mov	r8, r0
 80017e2:	b339      	cbz	r1, 8001834 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
 80017e4:	b34a      	cbz	r2, 800183a <fault_dump_callstack+0x66>
 80017e6:	429a      	cmp	r2, r3
 80017e8:	d82a      	bhi.n	8001840 <fault_dump_callstack+0x6c>
    int count = 0;
 80017ea:	2600      	movs	r6, #0
 80017ec:	e000      	b.n	80017f0 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
 80017ee:	3404      	adds	r4, #4
 80017f0:	b1d4      	cbz	r4, 8001828 <fault_dump_callstack+0x54>
 80017f2:	42ac      	cmp	r4, r5
 80017f4:	d818      	bhi.n	8001828 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
 80017f6:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
 80017f8:	4813      	ldr	r0, [pc, #76]	; (8001848 <fault_dump_callstack+0x74>)
 80017fa:	4290      	cmp	r0, r2
 80017fc:	d8f7      	bhi.n	80017ee <fault_dump_callstack+0x1a>
 80017fe:	4b13      	ldr	r3, [pc, #76]	; (800184c <fault_dump_callstack+0x78>)
 8001800:	4293      	cmp	r3, r2
 8001802:	d3f4      	bcc.n	80017ee <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
 8001804:	f012 0f01 	tst.w	r2, #1
 8001808:	d0f1      	beq.n	80017ee <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
 800180a:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
 800180e:	d0ee      	beq.n	80017ee <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
 8001810:	4648      	mov	r0, r9
 8001812:	f7ff ff79 	bl	8001708 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
 8001816:	f7ff ff8d 	bl	8001734 <opcode_is_bl_or_blx>
 800181a:	2800      	cmp	r0, #0
 800181c:	d0e7      	beq.n	80017ee <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
 800181e:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
 8001822:	3601      	adds	r6, #1
        if (count >= size) {
 8001824:	42be      	cmp	r6, r7
 8001826:	d3e2      	bcc.n	80017ee <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
 8001828:	4630      	mov	r0, r6
 800182a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
 800182e:	f06f 0601 	mvn.w	r6, #1
 8001832:	e7f9      	b.n	8001828 <fault_dump_callstack+0x54>
 8001834:	f06f 0601 	mvn.w	r6, #1
 8001838:	e7f6      	b.n	8001828 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
 800183a:	f06f 0602 	mvn.w	r6, #2
 800183e:	e7f3      	b.n	8001828 <fault_dump_callstack+0x54>
 8001840:	f06f 0602 	mvn.w	r6, #2
 8001844:	e7f0      	b.n	8001828 <fault_dump_callstack+0x54>
 8001846:	bf00      	nop
 8001848:	08000190 	stmdaeq	r0, {r4, r7, r8}
 800184c:	08002bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, sp}

08001850 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
 8001850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001852:	4605      	mov	r5, r0
 8001854:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
 8001856:	6803      	ldr	r3, [r0, #0]
 8001858:	4c46      	ldr	r4, [pc, #280]	; (8001974 <fault_dump_handler+0x124>)
 800185a:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
 800185c:	6843      	ldr	r3, [r0, #4]
 800185e:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
 8001860:	6883      	ldr	r3, [r0, #8]
 8001862:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
 8001864:	68c3      	ldr	r3, [r0, #12]
 8001866:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
 8001868:	6903      	ldr	r3, [r0, #16]
 800186a:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
 800186c:	6943      	ldr	r3, [r0, #20]
 800186e:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
 8001870:	6983      	ldr	r3, [r0, #24]
 8001872:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
 8001874:	69c3      	ldr	r3, [r0, #28]
 8001876:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
 8001878:	6a03      	ldr	r3, [r0, #32]
 800187a:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
 800187c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800187e:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
 8001880:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001882:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
 8001884:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001886:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
 8001888:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800188a:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
 800188c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800188e:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
 8001890:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001892:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
 8001894:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8001896:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
 8001898:	4f37      	ldr	r7, [pc, #220]	; (8001978 <fault_dump_handler+0x128>)
 800189a:	4638      	mov	r0, r7
 800189c:	f000 fa0e 	bl	8001cbc <puts>
    printf(" HardFault Information Dump \r\n");
 80018a0:	4836      	ldr	r0, [pc, #216]	; (800197c <fault_dump_handler+0x12c>)
 80018a2:	f000 fa0b 	bl	8001cbc <puts>
    printf(" Stack Frame   \r\n");
 80018a6:	4836      	ldr	r0, [pc, #216]	; (8001980 <fault_dump_handler+0x130>)
 80018a8:	f000 fa08 	bl	8001cbc <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
 80018ac:	6a21      	ldr	r1, [r4, #32]
 80018ae:	4835      	ldr	r0, [pc, #212]	; (8001984 <fault_dump_handler+0x134>)
 80018b0:	f000 f97e 	bl	8001bb0 <iprintf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
 80018b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80018b6:	4834      	ldr	r0, [pc, #208]	; (8001988 <fault_dump_handler+0x138>)
 80018b8:	f000 f97a 	bl	8001bb0 <iprintf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
 80018bc:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80018be:	4833      	ldr	r0, [pc, #204]	; (800198c <fault_dump_handler+0x13c>)
 80018c0:	f000 f976 	bl	8001bb0 <iprintf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
 80018c4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80018c6:	4832      	ldr	r0, [pc, #200]	; (8001990 <fault_dump_handler+0x140>)
 80018c8:	f000 f972 	bl	8001bb0 <iprintf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
 80018cc:	6821      	ldr	r1, [r4, #0]
 80018ce:	4831      	ldr	r0, [pc, #196]	; (8001994 <fault_dump_handler+0x144>)
 80018d0:	f000 f96e 	bl	8001bb0 <iprintf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
 80018d4:	6861      	ldr	r1, [r4, #4]
 80018d6:	4830      	ldr	r0, [pc, #192]	; (8001998 <fault_dump_handler+0x148>)
 80018d8:	f000 f96a 	bl	8001bb0 <iprintf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
 80018dc:	68a1      	ldr	r1, [r4, #8]
 80018de:	482f      	ldr	r0, [pc, #188]	; (800199c <fault_dump_handler+0x14c>)
 80018e0:	f000 f966 	bl	8001bb0 <iprintf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
 80018e4:	68e1      	ldr	r1, [r4, #12]
 80018e6:	482e      	ldr	r0, [pc, #184]	; (80019a0 <fault_dump_handler+0x150>)
 80018e8:	f000 f962 	bl	8001bb0 <iprintf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
 80018ec:	6921      	ldr	r1, [r4, #16]
 80018ee:	482d      	ldr	r0, [pc, #180]	; (80019a4 <fault_dump_handler+0x154>)
 80018f0:	f000 f95e 	bl	8001bb0 <iprintf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
 80018f4:	6961      	ldr	r1, [r4, #20]
 80018f6:	482c      	ldr	r0, [pc, #176]	; (80019a8 <fault_dump_handler+0x158>)
 80018f8:	f000 f95a 	bl	8001bb0 <iprintf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
 80018fc:	69a1      	ldr	r1, [r4, #24]
 80018fe:	482b      	ldr	r0, [pc, #172]	; (80019ac <fault_dump_handler+0x15c>)
 8001900:	f000 f956 	bl	8001bb0 <iprintf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
 8001904:	69e1      	ldr	r1, [r4, #28]
 8001906:	482a      	ldr	r0, [pc, #168]	; (80019b0 <fault_dump_handler+0x160>)
 8001908:	f000 f952 	bl	8001bb0 <iprintf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
 800190c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800190e:	4829      	ldr	r0, [pc, #164]	; (80019b4 <fault_dump_handler+0x164>)
 8001910:	f000 f94e 	bl	8001bb0 <iprintf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
 8001914:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001916:	4828      	ldr	r0, [pc, #160]	; (80019b8 <fault_dump_handler+0x168>)
 8001918:	f000 f94a 	bl	8001bb0 <iprintf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
 800191c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800191e:	4827      	ldr	r0, [pc, #156]	; (80019bc <fault_dump_handler+0x16c>)
 8001920:	f000 f946 	bl	8001bb0 <iprintf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
 8001924:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8001926:	4826      	ldr	r0, [pc, #152]	; (80019c0 <fault_dump_handler+0x170>)
 8001928:	f000 f942 	bl	8001bb0 <iprintf>
    printf("\r\n");
 800192c:	4638      	mov	r0, r7
 800192e:	f000 f9c5 	bl	8001cbc <puts>
    dump_exc_return(linker);
 8001932:	4630      	mov	r0, r6
 8001934:	f7ff ff1a 	bl	800176c <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
 8001938:	4b22      	ldr	r3, [pc, #136]	; (80019c4 <fault_dump_handler+0x174>)
 800193a:	f105 0240 	add.w	r2, r5, #64	; 0x40
 800193e:	2140      	movs	r1, #64	; 0x40
 8001940:	4821      	ldr	r0, [pc, #132]	; (80019c8 <fault_dump_handler+0x178>)
 8001942:	f7ff ff47 	bl	80017d4 <fault_dump_callstack>
 8001946:	4605      	mov	r5, r0
    printf(" Stack Call: ");
 8001948:	4820      	ldr	r0, [pc, #128]	; (80019cc <fault_dump_handler+0x17c>)
 800194a:	f000 f931 	bl	8001bb0 <iprintf>
    printf("%08X ", (unsigned int)frame.except.pc);
 800194e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8001950:	481f      	ldr	r0, [pc, #124]	; (80019d0 <fault_dump_handler+0x180>)
 8001952:	f000 f92d 	bl	8001bb0 <iprintf>
    for (index = 0; index < count; index++) {
 8001956:	2400      	movs	r4, #0
 8001958:	e006      	b.n	8001968 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
 800195a:	4b1b      	ldr	r3, [pc, #108]	; (80019c8 <fault_dump_handler+0x178>)
 800195c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 8001960:	481b      	ldr	r0, [pc, #108]	; (80019d0 <fault_dump_handler+0x180>)
 8001962:	f000 f925 	bl	8001bb0 <iprintf>
    for (index = 0; index < count; index++) {
 8001966:	3401      	adds	r4, #1
 8001968:	42ac      	cmp	r4, r5
 800196a:	dbf6      	blt.n	800195a <fault_dump_handler+0x10a>
    printf("\r\n");
 800196c:	4802      	ldr	r0, [pc, #8]	; (8001978 <fault_dump_handler+0x128>)
 800196e:	f000 f9a5 	bl	8001cbc <puts>
    while (1);
 8001972:	e7fe      	b.n	8001972 <fault_dump_handler+0x122>
 8001974:	200001e0 	andcs	r0, r0, r0, ror #3
 8001978:	08002dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, sp}
 800197c:	08002de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp, sp}
 8001980:	08002e00 	stmdaeq	r0, {r9, sl, fp, sp}
 8001984:	08002e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, sp}
 8001988:	08002e28 	stmdaeq	r0, {r3, r5, r9, sl, fp, sp}
 800198c:	08002e3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, fp, sp}
 8001990:	08002e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, sp}
 8001994:	08002e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, sp}
 8001998:	08002e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp, sp}
 800199c:	08002e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp, sp}
 80019a0:	08002ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp, sp}
 80019a4:	08002eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp, sp}
 80019a8:	08002ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp, sp}
 80019ac:	08002edc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, fp, sp}
 80019b0:	08002ef0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, fp, sp}
 80019b4:	08002f04 	stmdaeq	r0, {r2, r8, r9, sl, fp, sp}
 80019b8:	08002f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp, sp}
 80019bc:	08002f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp, sp}
 80019c0:	08002f40 	stmdaeq	r0, {r6, r8, r9, sl, fp, sp}
 80019c4:	20001238 	andcs	r1, r0, r8, lsr r2
 80019c8:	200000d8 	ldrdcs	r0, [r0], -r8
 80019cc:	08002f54 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl, fp, sp}
 80019d0:	08002f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, sp}

080019d4 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
 80019d4:	b510      	push	{r4, lr}
 80019d6:	4604      	mov	r4, r0
    printf(" \r\n");
 80019d8:	4816      	ldr	r0, [pc, #88]	; (8001a34 <fault_dump_exc_return+0x60>)
 80019da:	f000 f96f 	bl	8001cbc <puts>
    printf(" Bit2 Return Stack Select: ");
 80019de:	4816      	ldr	r0, [pc, #88]	; (8001a38 <fault_dump_exc_return+0x64>)
 80019e0:	f000 f8e6 	bl	8001bb0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 2)) {
 80019e4:	f014 0f04 	tst.w	r4, #4
 80019e8:	d018      	beq.n	8001a1c <fault_dump_exc_return+0x48>
        printf("[Use PSP               ].\r\n");
 80019ea:	4814      	ldr	r0, [pc, #80]	; (8001a3c <fault_dump_exc_return+0x68>)
 80019ec:	f000 f966 	bl	8001cbc <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Return Mode Select:  ");
 80019f0:	4813      	ldr	r0, [pc, #76]	; (8001a40 <fault_dump_exc_return+0x6c>)
 80019f2:	f000 f8dd 	bl	8001bb0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 3)) {
 80019f6:	f014 0f08 	tst.w	r4, #8
 80019fa:	d013      	beq.n	8001a24 <fault_dump_exc_return+0x50>
        printf("[Use Thread Mode       ].\r\n");
 80019fc:	4811      	ldr	r0, [pc, #68]	; (8001a44 <fault_dump_exc_return+0x70>)
 80019fe:	f000 f95d 	bl	8001cbc <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:    ");
 8001a02:	4811      	ldr	r0, [pc, #68]	; (8001a48 <fault_dump_exc_return+0x74>)
 8001a04:	f000 f8d4 	bl	8001bb0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 4)) {
 8001a08:	f014 0f10 	tst.w	r4, #16
 8001a0c:	d00e      	beq.n	8001a2c <fault_dump_exc_return+0x58>
        printf("[Use 8 World Frame     ].\r\n");
 8001a0e:	480f      	ldr	r0, [pc, #60]	; (8001a4c <fault_dump_exc_return+0x78>)
 8001a10:	f000 f954 	bl	8001cbc <puts>
    } else {
        printf("[Use 26 World Frame    ].\r\n");
    }
    printf(" \r\n");
 8001a14:	4807      	ldr	r0, [pc, #28]	; (8001a34 <fault_dump_exc_return+0x60>)
 8001a16:	f000 f951 	bl	8001cbc <puts>
}
 8001a1a:	bd10      	pop	{r4, pc}
        printf("[Use MSP               ].\r\n");
 8001a1c:	480c      	ldr	r0, [pc, #48]	; (8001a50 <fault_dump_exc_return+0x7c>)
 8001a1e:	f000 f94d 	bl	8001cbc <puts>
 8001a22:	e7e5      	b.n	80019f0 <fault_dump_exc_return+0x1c>
        printf("[Use Process Mode      ].\r\n");
 8001a24:	480b      	ldr	r0, [pc, #44]	; (8001a54 <fault_dump_exc_return+0x80>)
 8001a26:	f000 f949 	bl	8001cbc <puts>
 8001a2a:	e7ea      	b.n	8001a02 <fault_dump_exc_return+0x2e>
        printf("[Use 26 World Frame    ].\r\n");
 8001a2c:	480a      	ldr	r0, [pc, #40]	; (8001a58 <fault_dump_exc_return+0x84>)
 8001a2e:	f000 f945 	bl	8001cbc <puts>
 8001a32:	e7ef      	b.n	8001a14 <fault_dump_exc_return+0x40>
 8001a34:	08002f6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, fp, sp}
 8001a38:	08002f70 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, fp, sp}
 8001a3c:	08002f8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, fp, sp}
 8001a40:	08002fc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, fp, sp}
 8001a44:	08002fe0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, fp, sp}
 8001a48:	08003018 	stmdaeq	r0, {r3, r4, ip, sp}
 8001a4c:	08003034 	stmdaeq	r0, {r2, r4, r5, ip, sp}
 8001a50:	08002fa8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, fp, sp}
 8001a54:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 8001a58:	08003050 	stmdaeq	r0, {r4, r6, ip, sp}

08001a5c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a5c:	b510      	push	{r4, lr}
 8001a5e:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a60:	4a0c      	ldr	r2, [pc, #48]	; (8001a94 <_sbrk+0x38>)
 8001a62:	490d      	ldr	r1, [pc, #52]	; (8001a98 <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a64:	480d      	ldr	r0, [pc, #52]	; (8001a9c <_sbrk+0x40>)
 8001a66:	6800      	ldr	r0, [r0, #0]
 8001a68:	b140      	cbz	r0, 8001a7c <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a6a:	480c      	ldr	r0, [pc, #48]	; (8001a9c <_sbrk+0x40>)
 8001a6c:	6800      	ldr	r0, [r0, #0]
 8001a6e:	4403      	add	r3, r0
 8001a70:	1a52      	subs	r2, r2, r1
 8001a72:	4293      	cmp	r3, r2
 8001a74:	d806      	bhi.n	8001a84 <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8001a76:	4a09      	ldr	r2, [pc, #36]	; (8001a9c <_sbrk+0x40>)
 8001a78:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 8001a7a:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8001a7c:	4807      	ldr	r0, [pc, #28]	; (8001a9c <_sbrk+0x40>)
 8001a7e:	4c08      	ldr	r4, [pc, #32]	; (8001aa0 <_sbrk+0x44>)
 8001a80:	6004      	str	r4, [r0, #0]
 8001a82:	e7f2      	b.n	8001a6a <_sbrk+0xe>
    errno = ENOMEM;
 8001a84:	f000 f862 	bl	8001b4c <__errno>
 8001a88:	230c      	movs	r3, #12
 8001a8a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001a8c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a90:	e7f3      	b.n	8001a7a <_sbrk+0x1e>
 8001a92:	bf00      	nop
 8001a94:	20001238 	andcs	r1, r0, r8, lsr r2
 8001a98:	00000800 	andeq	r0, r0, r0, lsl #16
 8001a9c:	20000220 	andcs	r0, r0, r0, lsr #4
 8001aa0:	20000238 	andcs	r0, r0, r8, lsr r2

08001aa4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001aa4:	b570      	push	{r4, r5, r6, lr}
 8001aa6:	460c      	mov	r4, r1
 8001aa8:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001aaa:	2500      	movs	r5, #0
 8001aac:	e006      	b.n	8001abc <_read+0x18>
  {
    *ptr++ = __io_getchar();
 8001aae:	f3af 8000 	nop.w
 8001ab2:	4621      	mov	r1, r4
 8001ab4:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ab8:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 8001aba:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001abc:	42b5      	cmp	r5, r6
 8001abe:	dbf6      	blt.n	8001aae <_read+0xa>
  }

  return len;
}
 8001ac0:	4630      	mov	r0, r6
 8001ac2:	bd70      	pop	{r4, r5, r6, pc}

08001ac4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001ac4:	b570      	push	{r4, r5, r6, lr}
 8001ac6:	460c      	mov	r4, r1
 8001ac8:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001aca:	2500      	movs	r5, #0
 8001acc:	e004      	b.n	8001ad8 <_write+0x14>
  {
    __io_putchar(*ptr++);
 8001ace:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001ad2:	f7fe fd77 	bl	80005c4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ad6:	3501      	adds	r5, #1
 8001ad8:	42b5      	cmp	r5, r6
 8001ada:	dbf8      	blt.n	8001ace <_write+0xa>
  }
  return len;
}
 8001adc:	4630      	mov	r0, r6
 8001ade:	bd70      	pop	{r4, r5, r6, pc}

08001ae0 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8001ae0:	f04f 30ff 	mov.w	r0, #4294967295
 8001ae4:	4770      	bx	lr

08001ae6 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8001ae6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001aea:	604b      	str	r3, [r1, #4]
  return 0;
}
 8001aec:	2000      	movs	r0, #0
 8001aee:	4770      	bx	lr

08001af0 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8001af0:	2001      	movs	r0, #1
 8001af2:	4770      	bx	lr

08001af4 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8001af4:	2000      	movs	r0, #0
 8001af6:	4770      	bx	lr

08001af8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001af8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b30 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001afc:	f7ff fdfa 	bl	80016f4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001b00:	480c      	ldr	r0, [pc, #48]	; (8001b34 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001b02:	490d      	ldr	r1, [pc, #52]	; (8001b38 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001b04:	4a0d      	ldr	r2, [pc, #52]	; (8001b3c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001b06:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001b08:	e002      	b.n	8001b10 <LoopCopyDataInit>

08001b0a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001b0a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001b0c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001b0e:	3304      	adds	r3, #4

08001b10 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001b10:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001b12:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001b14:	d3f9      	bcc.n	8001b0a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001b16:	4a0a      	ldr	r2, [pc, #40]	; (8001b40 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001b18:	4c0a      	ldr	r4, [pc, #40]	; (8001b44 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001b1a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b1c:	e001      	b.n	8001b22 <LoopFillZerobss>

08001b1e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b1e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b20:	3204      	adds	r2, #4

08001b22 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b22:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b24:	d3fb      	bcc.n	8001b1e <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001b26:	f000 f817 	bl	8001b58 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001b2a:	f7fe fdc9 	bl	80006c0 <main>
  bx  lr    
 8001b2e:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001b30:	20001238 	andcs	r1, r0, r8, lsr r2
  ldr r0, =_sdata
 8001b34:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 8001b38:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r2, =_sidata
 8001b3c:	08003114 	stmdaeq	r0, {r2, r4, r8, ip, sp}
  ldr r2, =_sbss
 8001b40:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r4, =_ebss
 8001b44:	20000234 	andcs	r0, r0, r4, lsr r2

08001b48 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b48:	e7fe      	b.n	8001b48 <ADC_IRQHandler>
	...

08001b4c <__errno>:
 8001b4c:	4b01      	ldr	r3, [pc, #4]	; (8001b54 <__errno+0x8>)
 8001b4e:	6818      	ldr	r0, [r3, #0]
 8001b50:	4770      	bx	lr
 8001b52:	bf00      	nop
 8001b54:	2000000c 	andcs	r0, r0, ip

08001b58 <__libc_init_array>:
 8001b58:	b570      	push	{r4, r5, r6, lr}
 8001b5a:	4d0d      	ldr	r5, [pc, #52]	; (8001b90 <__libc_init_array+0x38>)
 8001b5c:	4c0d      	ldr	r4, [pc, #52]	; (8001b94 <__libc_init_array+0x3c>)
 8001b5e:	1b64      	subs	r4, r4, r5
 8001b60:	10a4      	asrs	r4, r4, #2
 8001b62:	2600      	movs	r6, #0
 8001b64:	42a6      	cmp	r6, r4
 8001b66:	d109      	bne.n	8001b7c <__libc_init_array+0x24>
 8001b68:	4d0b      	ldr	r5, [pc, #44]	; (8001b98 <__libc_init_array+0x40>)
 8001b6a:	4c0c      	ldr	r4, [pc, #48]	; (8001b9c <__libc_init_array+0x44>)
 8001b6c:	f001 f824 	bl	8002bb8 <_init>
 8001b70:	1b64      	subs	r4, r4, r5
 8001b72:	10a4      	asrs	r4, r4, #2
 8001b74:	2600      	movs	r6, #0
 8001b76:	42a6      	cmp	r6, r4
 8001b78:	d105      	bne.n	8001b86 <__libc_init_array+0x2e>
 8001b7a:	bd70      	pop	{r4, r5, r6, pc}
 8001b7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001b80:	4798      	blx	r3
 8001b82:	3601      	adds	r6, #1
 8001b84:	e7ee      	b.n	8001b64 <__libc_init_array+0xc>
 8001b86:	f855 3b04 	ldr.w	r3, [r5], #4
 8001b8a:	4798      	blx	r3
 8001b8c:	3601      	adds	r6, #1
 8001b8e:	e7f2      	b.n	8001b76 <__libc_init_array+0x1e>
 8001b90:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}
 8001b94:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}
 8001b98:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}
 8001b9c:	08003110 	stmdaeq	r0, {r4, r8, ip, sp}

08001ba0 <memset>:
 8001ba0:	4402      	add	r2, r0
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	4293      	cmp	r3, r2
 8001ba6:	d100      	bne.n	8001baa <memset+0xa>
 8001ba8:	4770      	bx	lr
 8001baa:	f803 1b01 	strb.w	r1, [r3], #1
 8001bae:	e7f9      	b.n	8001ba4 <memset+0x4>

08001bb0 <iprintf>:
 8001bb0:	b40f      	push	{r0, r1, r2, r3}
 8001bb2:	4b0a      	ldr	r3, [pc, #40]	; (8001bdc <iprintf+0x2c>)
 8001bb4:	b513      	push	{r0, r1, r4, lr}
 8001bb6:	681c      	ldr	r4, [r3, #0]
 8001bb8:	b124      	cbz	r4, 8001bc4 <iprintf+0x14>
 8001bba:	69a3      	ldr	r3, [r4, #24]
 8001bbc:	b913      	cbnz	r3, 8001bc4 <iprintf+0x14>
 8001bbe:	4620      	mov	r0, r4
 8001bc0:	f000 fa5e 	bl	8002080 <__sinit>
 8001bc4:	ab05      	add	r3, sp, #20
 8001bc6:	9a04      	ldr	r2, [sp, #16]
 8001bc8:	68a1      	ldr	r1, [r4, #8]
 8001bca:	9301      	str	r3, [sp, #4]
 8001bcc:	4620      	mov	r0, r4
 8001bce:	f000 fc67 	bl	80024a0 <_vfiprintf_r>
 8001bd2:	b002      	add	sp, #8
 8001bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bd8:	b004      	add	sp, #16
 8001bda:	4770      	bx	lr
 8001bdc:	2000000c 	andcs	r0, r0, ip

08001be0 <_puts_r>:
 8001be0:	b570      	push	{r4, r5, r6, lr}
 8001be2:	460e      	mov	r6, r1
 8001be4:	4605      	mov	r5, r0
 8001be6:	b118      	cbz	r0, 8001bf0 <_puts_r+0x10>
 8001be8:	6983      	ldr	r3, [r0, #24]
 8001bea:	b90b      	cbnz	r3, 8001bf0 <_puts_r+0x10>
 8001bec:	f000 fa48 	bl	8002080 <__sinit>
 8001bf0:	69ab      	ldr	r3, [r5, #24]
 8001bf2:	68ac      	ldr	r4, [r5, #8]
 8001bf4:	b913      	cbnz	r3, 8001bfc <_puts_r+0x1c>
 8001bf6:	4628      	mov	r0, r5
 8001bf8:	f000 fa42 	bl	8002080 <__sinit>
 8001bfc:	4b2c      	ldr	r3, [pc, #176]	; (8001cb0 <_puts_r+0xd0>)
 8001bfe:	429c      	cmp	r4, r3
 8001c00:	d120      	bne.n	8001c44 <_puts_r+0x64>
 8001c02:	686c      	ldr	r4, [r5, #4]
 8001c04:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c06:	07db      	lsls	r3, r3, #31
 8001c08:	d405      	bmi.n	8001c16 <_puts_r+0x36>
 8001c0a:	89a3      	ldrh	r3, [r4, #12]
 8001c0c:	0598      	lsls	r0, r3, #22
 8001c0e:	d402      	bmi.n	8001c16 <_puts_r+0x36>
 8001c10:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c12:	f000 fad3 	bl	80021bc <__retarget_lock_acquire_recursive>
 8001c16:	89a3      	ldrh	r3, [r4, #12]
 8001c18:	0719      	lsls	r1, r3, #28
 8001c1a:	d51d      	bpl.n	8001c58 <_puts_r+0x78>
 8001c1c:	6923      	ldr	r3, [r4, #16]
 8001c1e:	b1db      	cbz	r3, 8001c58 <_puts_r+0x78>
 8001c20:	3e01      	subs	r6, #1
 8001c22:	68a3      	ldr	r3, [r4, #8]
 8001c24:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001c28:	3b01      	subs	r3, #1
 8001c2a:	60a3      	str	r3, [r4, #8]
 8001c2c:	bb39      	cbnz	r1, 8001c7e <_puts_r+0x9e>
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	da38      	bge.n	8001ca4 <_puts_r+0xc4>
 8001c32:	4622      	mov	r2, r4
 8001c34:	210a      	movs	r1, #10
 8001c36:	4628      	mov	r0, r5
 8001c38:	f000 f848 	bl	8001ccc <__swbuf_r>
 8001c3c:	3001      	adds	r0, #1
 8001c3e:	d011      	beq.n	8001c64 <_puts_r+0x84>
 8001c40:	250a      	movs	r5, #10
 8001c42:	e011      	b.n	8001c68 <_puts_r+0x88>
 8001c44:	4b1b      	ldr	r3, [pc, #108]	; (8001cb4 <_puts_r+0xd4>)
 8001c46:	429c      	cmp	r4, r3
 8001c48:	d101      	bne.n	8001c4e <_puts_r+0x6e>
 8001c4a:	68ac      	ldr	r4, [r5, #8]
 8001c4c:	e7da      	b.n	8001c04 <_puts_r+0x24>
 8001c4e:	4b1a      	ldr	r3, [pc, #104]	; (8001cb8 <_puts_r+0xd8>)
 8001c50:	429c      	cmp	r4, r3
 8001c52:	bf08      	it	eq
 8001c54:	68ec      	ldreq	r4, [r5, #12]
 8001c56:	e7d5      	b.n	8001c04 <_puts_r+0x24>
 8001c58:	4621      	mov	r1, r4
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	f000 f888 	bl	8001d70 <__swsetup_r>
 8001c60:	2800      	cmp	r0, #0
 8001c62:	d0dd      	beq.n	8001c20 <_puts_r+0x40>
 8001c64:	f04f 35ff 	mov.w	r5, #4294967295
 8001c68:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c6a:	07da      	lsls	r2, r3, #31
 8001c6c:	d405      	bmi.n	8001c7a <_puts_r+0x9a>
 8001c6e:	89a3      	ldrh	r3, [r4, #12]
 8001c70:	059b      	lsls	r3, r3, #22
 8001c72:	d402      	bmi.n	8001c7a <_puts_r+0x9a>
 8001c74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c76:	f000 faa2 	bl	80021be <__retarget_lock_release_recursive>
 8001c7a:	4628      	mov	r0, r5
 8001c7c:	bd70      	pop	{r4, r5, r6, pc}
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	da04      	bge.n	8001c8c <_puts_r+0xac>
 8001c82:	69a2      	ldr	r2, [r4, #24]
 8001c84:	429a      	cmp	r2, r3
 8001c86:	dc06      	bgt.n	8001c96 <_puts_r+0xb6>
 8001c88:	290a      	cmp	r1, #10
 8001c8a:	d004      	beq.n	8001c96 <_puts_r+0xb6>
 8001c8c:	6823      	ldr	r3, [r4, #0]
 8001c8e:	1c5a      	adds	r2, r3, #1
 8001c90:	6022      	str	r2, [r4, #0]
 8001c92:	7019      	strb	r1, [r3, #0]
 8001c94:	e7c5      	b.n	8001c22 <_puts_r+0x42>
 8001c96:	4622      	mov	r2, r4
 8001c98:	4628      	mov	r0, r5
 8001c9a:	f000 f817 	bl	8001ccc <__swbuf_r>
 8001c9e:	3001      	adds	r0, #1
 8001ca0:	d1bf      	bne.n	8001c22 <_puts_r+0x42>
 8001ca2:	e7df      	b.n	8001c64 <_puts_r+0x84>
 8001ca4:	6823      	ldr	r3, [r4, #0]
 8001ca6:	250a      	movs	r5, #10
 8001ca8:	1c5a      	adds	r2, r3, #1
 8001caa:	6022      	str	r2, [r4, #0]
 8001cac:	701d      	strb	r5, [r3, #0]
 8001cae:	e7db      	b.n	8001c68 <_puts_r+0x88>
 8001cb0:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001cb4:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001cb8:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001cbc <puts>:
 8001cbc:	4b02      	ldr	r3, [pc, #8]	; (8001cc8 <puts+0xc>)
 8001cbe:	4601      	mov	r1, r0
 8001cc0:	6818      	ldr	r0, [r3, #0]
 8001cc2:	f7ff bf8d 	b.w	8001be0 <_puts_r>
 8001cc6:	bf00      	nop
 8001cc8:	2000000c 	andcs	r0, r0, ip

08001ccc <__swbuf_r>:
 8001ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cce:	460e      	mov	r6, r1
 8001cd0:	4614      	mov	r4, r2
 8001cd2:	4605      	mov	r5, r0
 8001cd4:	b118      	cbz	r0, 8001cde <__swbuf_r+0x12>
 8001cd6:	6983      	ldr	r3, [r0, #24]
 8001cd8:	b90b      	cbnz	r3, 8001cde <__swbuf_r+0x12>
 8001cda:	f000 f9d1 	bl	8002080 <__sinit>
 8001cde:	4b21      	ldr	r3, [pc, #132]	; (8001d64 <__swbuf_r+0x98>)
 8001ce0:	429c      	cmp	r4, r3
 8001ce2:	d12b      	bne.n	8001d3c <__swbuf_r+0x70>
 8001ce4:	686c      	ldr	r4, [r5, #4]
 8001ce6:	69a3      	ldr	r3, [r4, #24]
 8001ce8:	60a3      	str	r3, [r4, #8]
 8001cea:	89a3      	ldrh	r3, [r4, #12]
 8001cec:	071a      	lsls	r2, r3, #28
 8001cee:	d52f      	bpl.n	8001d50 <__swbuf_r+0x84>
 8001cf0:	6923      	ldr	r3, [r4, #16]
 8001cf2:	b36b      	cbz	r3, 8001d50 <__swbuf_r+0x84>
 8001cf4:	6923      	ldr	r3, [r4, #16]
 8001cf6:	6820      	ldr	r0, [r4, #0]
 8001cf8:	1ac0      	subs	r0, r0, r3
 8001cfa:	6963      	ldr	r3, [r4, #20]
 8001cfc:	b2f6      	uxtb	r6, r6
 8001cfe:	4283      	cmp	r3, r0
 8001d00:	4637      	mov	r7, r6
 8001d02:	dc04      	bgt.n	8001d0e <__swbuf_r+0x42>
 8001d04:	4621      	mov	r1, r4
 8001d06:	4628      	mov	r0, r5
 8001d08:	f000 f926 	bl	8001f58 <_fflush_r>
 8001d0c:	bb30      	cbnz	r0, 8001d5c <__swbuf_r+0x90>
 8001d0e:	68a3      	ldr	r3, [r4, #8]
 8001d10:	3b01      	subs	r3, #1
 8001d12:	60a3      	str	r3, [r4, #8]
 8001d14:	6823      	ldr	r3, [r4, #0]
 8001d16:	1c5a      	adds	r2, r3, #1
 8001d18:	6022      	str	r2, [r4, #0]
 8001d1a:	701e      	strb	r6, [r3, #0]
 8001d1c:	6963      	ldr	r3, [r4, #20]
 8001d1e:	3001      	adds	r0, #1
 8001d20:	4283      	cmp	r3, r0
 8001d22:	d004      	beq.n	8001d2e <__swbuf_r+0x62>
 8001d24:	89a3      	ldrh	r3, [r4, #12]
 8001d26:	07db      	lsls	r3, r3, #31
 8001d28:	d506      	bpl.n	8001d38 <__swbuf_r+0x6c>
 8001d2a:	2e0a      	cmp	r6, #10
 8001d2c:	d104      	bne.n	8001d38 <__swbuf_r+0x6c>
 8001d2e:	4621      	mov	r1, r4
 8001d30:	4628      	mov	r0, r5
 8001d32:	f000 f911 	bl	8001f58 <_fflush_r>
 8001d36:	b988      	cbnz	r0, 8001d5c <__swbuf_r+0x90>
 8001d38:	4638      	mov	r0, r7
 8001d3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001d3c:	4b0a      	ldr	r3, [pc, #40]	; (8001d68 <__swbuf_r+0x9c>)
 8001d3e:	429c      	cmp	r4, r3
 8001d40:	d101      	bne.n	8001d46 <__swbuf_r+0x7a>
 8001d42:	68ac      	ldr	r4, [r5, #8]
 8001d44:	e7cf      	b.n	8001ce6 <__swbuf_r+0x1a>
 8001d46:	4b09      	ldr	r3, [pc, #36]	; (8001d6c <__swbuf_r+0xa0>)
 8001d48:	429c      	cmp	r4, r3
 8001d4a:	bf08      	it	eq
 8001d4c:	68ec      	ldreq	r4, [r5, #12]
 8001d4e:	e7ca      	b.n	8001ce6 <__swbuf_r+0x1a>
 8001d50:	4621      	mov	r1, r4
 8001d52:	4628      	mov	r0, r5
 8001d54:	f000 f80c 	bl	8001d70 <__swsetup_r>
 8001d58:	2800      	cmp	r0, #0
 8001d5a:	d0cb      	beq.n	8001cf4 <__swbuf_r+0x28>
 8001d5c:	f04f 37ff 	mov.w	r7, #4294967295
 8001d60:	e7ea      	b.n	8001d38 <__swbuf_r+0x6c>
 8001d62:	bf00      	nop
 8001d64:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001d68:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001d6c:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001d70 <__swsetup_r>:
 8001d70:	4b32      	ldr	r3, [pc, #200]	; (8001e3c <__swsetup_r+0xcc>)
 8001d72:	b570      	push	{r4, r5, r6, lr}
 8001d74:	681d      	ldr	r5, [r3, #0]
 8001d76:	4606      	mov	r6, r0
 8001d78:	460c      	mov	r4, r1
 8001d7a:	b125      	cbz	r5, 8001d86 <__swsetup_r+0x16>
 8001d7c:	69ab      	ldr	r3, [r5, #24]
 8001d7e:	b913      	cbnz	r3, 8001d86 <__swsetup_r+0x16>
 8001d80:	4628      	mov	r0, r5
 8001d82:	f000 f97d 	bl	8002080 <__sinit>
 8001d86:	4b2e      	ldr	r3, [pc, #184]	; (8001e40 <__swsetup_r+0xd0>)
 8001d88:	429c      	cmp	r4, r3
 8001d8a:	d10f      	bne.n	8001dac <__swsetup_r+0x3c>
 8001d8c:	686c      	ldr	r4, [r5, #4]
 8001d8e:	89a3      	ldrh	r3, [r4, #12]
 8001d90:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001d94:	0719      	lsls	r1, r3, #28
 8001d96:	d42c      	bmi.n	8001df2 <__swsetup_r+0x82>
 8001d98:	06dd      	lsls	r5, r3, #27
 8001d9a:	d411      	bmi.n	8001dc0 <__swsetup_r+0x50>
 8001d9c:	2309      	movs	r3, #9
 8001d9e:	6033      	str	r3, [r6, #0]
 8001da0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001da4:	81a3      	strh	r3, [r4, #12]
 8001da6:	f04f 30ff 	mov.w	r0, #4294967295
 8001daa:	e03e      	b.n	8001e2a <__swsetup_r+0xba>
 8001dac:	4b25      	ldr	r3, [pc, #148]	; (8001e44 <__swsetup_r+0xd4>)
 8001dae:	429c      	cmp	r4, r3
 8001db0:	d101      	bne.n	8001db6 <__swsetup_r+0x46>
 8001db2:	68ac      	ldr	r4, [r5, #8]
 8001db4:	e7eb      	b.n	8001d8e <__swsetup_r+0x1e>
 8001db6:	4b24      	ldr	r3, [pc, #144]	; (8001e48 <__swsetup_r+0xd8>)
 8001db8:	429c      	cmp	r4, r3
 8001dba:	bf08      	it	eq
 8001dbc:	68ec      	ldreq	r4, [r5, #12]
 8001dbe:	e7e6      	b.n	8001d8e <__swsetup_r+0x1e>
 8001dc0:	0758      	lsls	r0, r3, #29
 8001dc2:	d512      	bpl.n	8001dea <__swsetup_r+0x7a>
 8001dc4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001dc6:	b141      	cbz	r1, 8001dda <__swsetup_r+0x6a>
 8001dc8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001dcc:	4299      	cmp	r1, r3
 8001dce:	d002      	beq.n	8001dd6 <__swsetup_r+0x66>
 8001dd0:	4630      	mov	r0, r6
 8001dd2:	f000 fa5b 	bl	800228c <_free_r>
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	6363      	str	r3, [r4, #52]	; 0x34
 8001dda:	89a3      	ldrh	r3, [r4, #12]
 8001ddc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001de0:	81a3      	strh	r3, [r4, #12]
 8001de2:	2300      	movs	r3, #0
 8001de4:	6063      	str	r3, [r4, #4]
 8001de6:	6923      	ldr	r3, [r4, #16]
 8001de8:	6023      	str	r3, [r4, #0]
 8001dea:	89a3      	ldrh	r3, [r4, #12]
 8001dec:	f043 0308 	orr.w	r3, r3, #8
 8001df0:	81a3      	strh	r3, [r4, #12]
 8001df2:	6923      	ldr	r3, [r4, #16]
 8001df4:	b94b      	cbnz	r3, 8001e0a <__swsetup_r+0x9a>
 8001df6:	89a3      	ldrh	r3, [r4, #12]
 8001df8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001dfc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001e00:	d003      	beq.n	8001e0a <__swsetup_r+0x9a>
 8001e02:	4621      	mov	r1, r4
 8001e04:	4630      	mov	r0, r6
 8001e06:	f000 fa01 	bl	800220c <__smakebuf_r>
 8001e0a:	89a0      	ldrh	r0, [r4, #12]
 8001e0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001e10:	f010 0301 	ands.w	r3, r0, #1
 8001e14:	d00a      	beq.n	8001e2c <__swsetup_r+0xbc>
 8001e16:	2300      	movs	r3, #0
 8001e18:	60a3      	str	r3, [r4, #8]
 8001e1a:	6963      	ldr	r3, [r4, #20]
 8001e1c:	425b      	negs	r3, r3
 8001e1e:	61a3      	str	r3, [r4, #24]
 8001e20:	6923      	ldr	r3, [r4, #16]
 8001e22:	b943      	cbnz	r3, 8001e36 <__swsetup_r+0xc6>
 8001e24:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001e28:	d1ba      	bne.n	8001da0 <__swsetup_r+0x30>
 8001e2a:	bd70      	pop	{r4, r5, r6, pc}
 8001e2c:	0781      	lsls	r1, r0, #30
 8001e2e:	bf58      	it	pl
 8001e30:	6963      	ldrpl	r3, [r4, #20]
 8001e32:	60a3      	str	r3, [r4, #8]
 8001e34:	e7f4      	b.n	8001e20 <__swsetup_r+0xb0>
 8001e36:	2000      	movs	r0, #0
 8001e38:	e7f7      	b.n	8001e2a <__swsetup_r+0xba>
 8001e3a:	bf00      	nop
 8001e3c:	2000000c 	andcs	r0, r0, ip
 8001e40:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001e44:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001e48:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001e4c <__sflush_r>:
 8001e4c:	898a      	ldrh	r2, [r1, #12]
 8001e4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e52:	4605      	mov	r5, r0
 8001e54:	0710      	lsls	r0, r2, #28
 8001e56:	460c      	mov	r4, r1
 8001e58:	d458      	bmi.n	8001f0c <__sflush_r+0xc0>
 8001e5a:	684b      	ldr	r3, [r1, #4]
 8001e5c:	2b00      	cmp	r3, #0
 8001e5e:	dc05      	bgt.n	8001e6c <__sflush_r+0x20>
 8001e60:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	dc02      	bgt.n	8001e6c <__sflush_r+0x20>
 8001e66:	2000      	movs	r0, #0
 8001e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e6c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001e6e:	2e00      	cmp	r6, #0
 8001e70:	d0f9      	beq.n	8001e66 <__sflush_r+0x1a>
 8001e72:	2300      	movs	r3, #0
 8001e74:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001e78:	682f      	ldr	r7, [r5, #0]
 8001e7a:	602b      	str	r3, [r5, #0]
 8001e7c:	d032      	beq.n	8001ee4 <__sflush_r+0x98>
 8001e7e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001e80:	89a3      	ldrh	r3, [r4, #12]
 8001e82:	075a      	lsls	r2, r3, #29
 8001e84:	d505      	bpl.n	8001e92 <__sflush_r+0x46>
 8001e86:	6863      	ldr	r3, [r4, #4]
 8001e88:	1ac0      	subs	r0, r0, r3
 8001e8a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001e8c:	b10b      	cbz	r3, 8001e92 <__sflush_r+0x46>
 8001e8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e90:	1ac0      	subs	r0, r0, r3
 8001e92:	2300      	movs	r3, #0
 8001e94:	4602      	mov	r2, r0
 8001e96:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001e98:	6a21      	ldr	r1, [r4, #32]
 8001e9a:	4628      	mov	r0, r5
 8001e9c:	47b0      	blx	r6
 8001e9e:	1c43      	adds	r3, r0, #1
 8001ea0:	89a3      	ldrh	r3, [r4, #12]
 8001ea2:	d106      	bne.n	8001eb2 <__sflush_r+0x66>
 8001ea4:	6829      	ldr	r1, [r5, #0]
 8001ea6:	291d      	cmp	r1, #29
 8001ea8:	d82c      	bhi.n	8001f04 <__sflush_r+0xb8>
 8001eaa:	4a2a      	ldr	r2, [pc, #168]	; (8001f54 <__sflush_r+0x108>)
 8001eac:	40ca      	lsrs	r2, r1
 8001eae:	07d6      	lsls	r6, r2, #31
 8001eb0:	d528      	bpl.n	8001f04 <__sflush_r+0xb8>
 8001eb2:	2200      	movs	r2, #0
 8001eb4:	6062      	str	r2, [r4, #4]
 8001eb6:	04d9      	lsls	r1, r3, #19
 8001eb8:	6922      	ldr	r2, [r4, #16]
 8001eba:	6022      	str	r2, [r4, #0]
 8001ebc:	d504      	bpl.n	8001ec8 <__sflush_r+0x7c>
 8001ebe:	1c42      	adds	r2, r0, #1
 8001ec0:	d101      	bne.n	8001ec6 <__sflush_r+0x7a>
 8001ec2:	682b      	ldr	r3, [r5, #0]
 8001ec4:	b903      	cbnz	r3, 8001ec8 <__sflush_r+0x7c>
 8001ec6:	6560      	str	r0, [r4, #84]	; 0x54
 8001ec8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001eca:	602f      	str	r7, [r5, #0]
 8001ecc:	2900      	cmp	r1, #0
 8001ece:	d0ca      	beq.n	8001e66 <__sflush_r+0x1a>
 8001ed0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001ed4:	4299      	cmp	r1, r3
 8001ed6:	d002      	beq.n	8001ede <__sflush_r+0x92>
 8001ed8:	4628      	mov	r0, r5
 8001eda:	f000 f9d7 	bl	800228c <_free_r>
 8001ede:	2000      	movs	r0, #0
 8001ee0:	6360      	str	r0, [r4, #52]	; 0x34
 8001ee2:	e7c1      	b.n	8001e68 <__sflush_r+0x1c>
 8001ee4:	6a21      	ldr	r1, [r4, #32]
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	4628      	mov	r0, r5
 8001eea:	47b0      	blx	r6
 8001eec:	1c41      	adds	r1, r0, #1
 8001eee:	d1c7      	bne.n	8001e80 <__sflush_r+0x34>
 8001ef0:	682b      	ldr	r3, [r5, #0]
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d0c4      	beq.n	8001e80 <__sflush_r+0x34>
 8001ef6:	2b1d      	cmp	r3, #29
 8001ef8:	d001      	beq.n	8001efe <__sflush_r+0xb2>
 8001efa:	2b16      	cmp	r3, #22
 8001efc:	d101      	bne.n	8001f02 <__sflush_r+0xb6>
 8001efe:	602f      	str	r7, [r5, #0]
 8001f00:	e7b1      	b.n	8001e66 <__sflush_r+0x1a>
 8001f02:	89a3      	ldrh	r3, [r4, #12]
 8001f04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f08:	81a3      	strh	r3, [r4, #12]
 8001f0a:	e7ad      	b.n	8001e68 <__sflush_r+0x1c>
 8001f0c:	690f      	ldr	r7, [r1, #16]
 8001f0e:	2f00      	cmp	r7, #0
 8001f10:	d0a9      	beq.n	8001e66 <__sflush_r+0x1a>
 8001f12:	0793      	lsls	r3, r2, #30
 8001f14:	680e      	ldr	r6, [r1, #0]
 8001f16:	bf08      	it	eq
 8001f18:	694b      	ldreq	r3, [r1, #20]
 8001f1a:	600f      	str	r7, [r1, #0]
 8001f1c:	bf18      	it	ne
 8001f1e:	2300      	movne	r3, #0
 8001f20:	eba6 0807 	sub.w	r8, r6, r7
 8001f24:	608b      	str	r3, [r1, #8]
 8001f26:	f1b8 0f00 	cmp.w	r8, #0
 8001f2a:	dd9c      	ble.n	8001e66 <__sflush_r+0x1a>
 8001f2c:	6a21      	ldr	r1, [r4, #32]
 8001f2e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001f30:	4643      	mov	r3, r8
 8001f32:	463a      	mov	r2, r7
 8001f34:	4628      	mov	r0, r5
 8001f36:	47b0      	blx	r6
 8001f38:	2800      	cmp	r0, #0
 8001f3a:	dc06      	bgt.n	8001f4a <__sflush_r+0xfe>
 8001f3c:	89a3      	ldrh	r3, [r4, #12]
 8001f3e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f42:	81a3      	strh	r3, [r4, #12]
 8001f44:	f04f 30ff 	mov.w	r0, #4294967295
 8001f48:	e78e      	b.n	8001e68 <__sflush_r+0x1c>
 8001f4a:	4407      	add	r7, r0
 8001f4c:	eba8 0800 	sub.w	r8, r8, r0
 8001f50:	e7e9      	b.n	8001f26 <__sflush_r+0xda>
 8001f52:	bf00      	nop
 8001f54:	20400001 	subcs	r0, r0, r1

08001f58 <_fflush_r>:
 8001f58:	b538      	push	{r3, r4, r5, lr}
 8001f5a:	690b      	ldr	r3, [r1, #16]
 8001f5c:	4605      	mov	r5, r0
 8001f5e:	460c      	mov	r4, r1
 8001f60:	b913      	cbnz	r3, 8001f68 <_fflush_r+0x10>
 8001f62:	2500      	movs	r5, #0
 8001f64:	4628      	mov	r0, r5
 8001f66:	bd38      	pop	{r3, r4, r5, pc}
 8001f68:	b118      	cbz	r0, 8001f72 <_fflush_r+0x1a>
 8001f6a:	6983      	ldr	r3, [r0, #24]
 8001f6c:	b90b      	cbnz	r3, 8001f72 <_fflush_r+0x1a>
 8001f6e:	f000 f887 	bl	8002080 <__sinit>
 8001f72:	4b14      	ldr	r3, [pc, #80]	; (8001fc4 <_fflush_r+0x6c>)
 8001f74:	429c      	cmp	r4, r3
 8001f76:	d11b      	bne.n	8001fb0 <_fflush_r+0x58>
 8001f78:	686c      	ldr	r4, [r5, #4]
 8001f7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d0ef      	beq.n	8001f62 <_fflush_r+0xa>
 8001f82:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001f84:	07d0      	lsls	r0, r2, #31
 8001f86:	d404      	bmi.n	8001f92 <_fflush_r+0x3a>
 8001f88:	0599      	lsls	r1, r3, #22
 8001f8a:	d402      	bmi.n	8001f92 <_fflush_r+0x3a>
 8001f8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001f8e:	f000 f915 	bl	80021bc <__retarget_lock_acquire_recursive>
 8001f92:	4628      	mov	r0, r5
 8001f94:	4621      	mov	r1, r4
 8001f96:	f7ff ff59 	bl	8001e4c <__sflush_r>
 8001f9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001f9c:	07da      	lsls	r2, r3, #31
 8001f9e:	4605      	mov	r5, r0
 8001fa0:	d4e0      	bmi.n	8001f64 <_fflush_r+0xc>
 8001fa2:	89a3      	ldrh	r3, [r4, #12]
 8001fa4:	059b      	lsls	r3, r3, #22
 8001fa6:	d4dd      	bmi.n	8001f64 <_fflush_r+0xc>
 8001fa8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001faa:	f000 f908 	bl	80021be <__retarget_lock_release_recursive>
 8001fae:	e7d9      	b.n	8001f64 <_fflush_r+0xc>
 8001fb0:	4b05      	ldr	r3, [pc, #20]	; (8001fc8 <_fflush_r+0x70>)
 8001fb2:	429c      	cmp	r4, r3
 8001fb4:	d101      	bne.n	8001fba <_fflush_r+0x62>
 8001fb6:	68ac      	ldr	r4, [r5, #8]
 8001fb8:	e7df      	b.n	8001f7a <_fflush_r+0x22>
 8001fba:	4b04      	ldr	r3, [pc, #16]	; (8001fcc <_fflush_r+0x74>)
 8001fbc:	429c      	cmp	r4, r3
 8001fbe:	bf08      	it	eq
 8001fc0:	68ec      	ldreq	r4, [r5, #12]
 8001fc2:	e7da      	b.n	8001f7a <_fflush_r+0x22>
 8001fc4:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001fc8:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001fcc:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001fd0 <std>:
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	b510      	push	{r4, lr}
 8001fd4:	4604      	mov	r4, r0
 8001fd6:	e9c0 3300 	strd	r3, r3, [r0]
 8001fda:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001fde:	6083      	str	r3, [r0, #8]
 8001fe0:	8181      	strh	r1, [r0, #12]
 8001fe2:	6643      	str	r3, [r0, #100]	; 0x64
 8001fe4:	81c2      	strh	r2, [r0, #14]
 8001fe6:	6183      	str	r3, [r0, #24]
 8001fe8:	4619      	mov	r1, r3
 8001fea:	2208      	movs	r2, #8
 8001fec:	305c      	adds	r0, #92	; 0x5c
 8001fee:	f7ff fdd7 	bl	8001ba0 <memset>
 8001ff2:	4b05      	ldr	r3, [pc, #20]	; (8002008 <std+0x38>)
 8001ff4:	6263      	str	r3, [r4, #36]	; 0x24
 8001ff6:	4b05      	ldr	r3, [pc, #20]	; (800200c <std+0x3c>)
 8001ff8:	62a3      	str	r3, [r4, #40]	; 0x28
 8001ffa:	4b05      	ldr	r3, [pc, #20]	; (8002010 <std+0x40>)
 8001ffc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001ffe:	4b05      	ldr	r3, [pc, #20]	; (8002014 <std+0x44>)
 8002000:	6224      	str	r4, [r4, #32]
 8002002:	6323      	str	r3, [r4, #48]	; 0x30
 8002004:	bd10      	pop	{r4, pc}
 8002006:	bf00      	nop
 8002008:	08002a49 	stmdaeq	r0, {r0, r3, r6, r9, fp, sp}
 800200c:	08002a6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, fp, sp}
 8002010:	08002aa3 	stmdaeq	r0, {r0, r1, r5, r7, r9, fp, sp}
 8002014:	08002ac7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r9, fp, sp}

08002018 <_cleanup_r>:
 8002018:	4901      	ldr	r1, [pc, #4]	; (8002020 <_cleanup_r+0x8>)
 800201a:	f000 b8af 	b.w	800217c <_fwalk_reent>
 800201e:	bf00      	nop
 8002020:	08001f59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip}

08002024 <__sfmoreglue>:
 8002024:	b570      	push	{r4, r5, r6, lr}
 8002026:	2268      	movs	r2, #104	; 0x68
 8002028:	1e4d      	subs	r5, r1, #1
 800202a:	4355      	muls	r5, r2
 800202c:	460e      	mov	r6, r1
 800202e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002032:	f000 f997 	bl	8002364 <_malloc_r>
 8002036:	4604      	mov	r4, r0
 8002038:	b140      	cbz	r0, 800204c <__sfmoreglue+0x28>
 800203a:	2100      	movs	r1, #0
 800203c:	e9c0 1600 	strd	r1, r6, [r0]
 8002040:	300c      	adds	r0, #12
 8002042:	60a0      	str	r0, [r4, #8]
 8002044:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002048:	f7ff fdaa 	bl	8001ba0 <memset>
 800204c:	4620      	mov	r0, r4
 800204e:	bd70      	pop	{r4, r5, r6, pc}

08002050 <__sfp_lock_acquire>:
 8002050:	4801      	ldr	r0, [pc, #4]	; (8002058 <__sfp_lock_acquire+0x8>)
 8002052:	f000 b8b3 	b.w	80021bc <__retarget_lock_acquire_recursive>
 8002056:	bf00      	nop
 8002058:	20000225 	andcs	r0, r0, r5, lsr #4

0800205c <__sfp_lock_release>:
 800205c:	4801      	ldr	r0, [pc, #4]	; (8002064 <__sfp_lock_release+0x8>)
 800205e:	f000 b8ae 	b.w	80021be <__retarget_lock_release_recursive>
 8002062:	bf00      	nop
 8002064:	20000225 	andcs	r0, r0, r5, lsr #4

08002068 <__sinit_lock_acquire>:
 8002068:	4801      	ldr	r0, [pc, #4]	; (8002070 <__sinit_lock_acquire+0x8>)
 800206a:	f000 b8a7 	b.w	80021bc <__retarget_lock_acquire_recursive>
 800206e:	bf00      	nop
 8002070:	20000226 	andcs	r0, r0, r6, lsr #4

08002074 <__sinit_lock_release>:
 8002074:	4801      	ldr	r0, [pc, #4]	; (800207c <__sinit_lock_release+0x8>)
 8002076:	f000 b8a2 	b.w	80021be <__retarget_lock_release_recursive>
 800207a:	bf00      	nop
 800207c:	20000226 	andcs	r0, r0, r6, lsr #4

08002080 <__sinit>:
 8002080:	b510      	push	{r4, lr}
 8002082:	4604      	mov	r4, r0
 8002084:	f7ff fff0 	bl	8002068 <__sinit_lock_acquire>
 8002088:	69a3      	ldr	r3, [r4, #24]
 800208a:	b11b      	cbz	r3, 8002094 <__sinit+0x14>
 800208c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002090:	f7ff bff0 	b.w	8002074 <__sinit_lock_release>
 8002094:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002098:	6523      	str	r3, [r4, #80]	; 0x50
 800209a:	4b13      	ldr	r3, [pc, #76]	; (80020e8 <__sinit+0x68>)
 800209c:	4a13      	ldr	r2, [pc, #76]	; (80020ec <__sinit+0x6c>)
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	62a2      	str	r2, [r4, #40]	; 0x28
 80020a2:	42a3      	cmp	r3, r4
 80020a4:	bf04      	itt	eq
 80020a6:	2301      	moveq	r3, #1
 80020a8:	61a3      	streq	r3, [r4, #24]
 80020aa:	4620      	mov	r0, r4
 80020ac:	f000 f820 	bl	80020f0 <__sfp>
 80020b0:	6060      	str	r0, [r4, #4]
 80020b2:	4620      	mov	r0, r4
 80020b4:	f000 f81c 	bl	80020f0 <__sfp>
 80020b8:	60a0      	str	r0, [r4, #8]
 80020ba:	4620      	mov	r0, r4
 80020bc:	f000 f818 	bl	80020f0 <__sfp>
 80020c0:	2200      	movs	r2, #0
 80020c2:	60e0      	str	r0, [r4, #12]
 80020c4:	2104      	movs	r1, #4
 80020c6:	6860      	ldr	r0, [r4, #4]
 80020c8:	f7ff ff82 	bl	8001fd0 <std>
 80020cc:	68a0      	ldr	r0, [r4, #8]
 80020ce:	2201      	movs	r2, #1
 80020d0:	2109      	movs	r1, #9
 80020d2:	f7ff ff7d 	bl	8001fd0 <std>
 80020d6:	68e0      	ldr	r0, [r4, #12]
 80020d8:	2202      	movs	r2, #2
 80020da:	2112      	movs	r1, #18
 80020dc:	f7ff ff78 	bl	8001fd0 <std>
 80020e0:	2301      	movs	r3, #1
 80020e2:	61a3      	str	r3, [r4, #24]
 80020e4:	e7d2      	b.n	800208c <__sinit+0xc>
 80020e6:	bf00      	nop
 80020e8:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}
 80020ec:	08002019 	stmdaeq	r0, {r0, r3, r4, sp}

080020f0 <__sfp>:
 80020f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020f2:	4607      	mov	r7, r0
 80020f4:	f7ff ffac 	bl	8002050 <__sfp_lock_acquire>
 80020f8:	4b1e      	ldr	r3, [pc, #120]	; (8002174 <__sfp+0x84>)
 80020fa:	681e      	ldr	r6, [r3, #0]
 80020fc:	69b3      	ldr	r3, [r6, #24]
 80020fe:	b913      	cbnz	r3, 8002106 <__sfp+0x16>
 8002100:	4630      	mov	r0, r6
 8002102:	f7ff ffbd 	bl	8002080 <__sinit>
 8002106:	3648      	adds	r6, #72	; 0x48
 8002108:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800210c:	3b01      	subs	r3, #1
 800210e:	d503      	bpl.n	8002118 <__sfp+0x28>
 8002110:	6833      	ldr	r3, [r6, #0]
 8002112:	b30b      	cbz	r3, 8002158 <__sfp+0x68>
 8002114:	6836      	ldr	r6, [r6, #0]
 8002116:	e7f7      	b.n	8002108 <__sfp+0x18>
 8002118:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800211c:	b9d5      	cbnz	r5, 8002154 <__sfp+0x64>
 800211e:	4b16      	ldr	r3, [pc, #88]	; (8002178 <__sfp+0x88>)
 8002120:	60e3      	str	r3, [r4, #12]
 8002122:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002126:	6665      	str	r5, [r4, #100]	; 0x64
 8002128:	f000 f847 	bl	80021ba <__retarget_lock_init_recursive>
 800212c:	f7ff ff96 	bl	800205c <__sfp_lock_release>
 8002130:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002134:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002138:	6025      	str	r5, [r4, #0]
 800213a:	61a5      	str	r5, [r4, #24]
 800213c:	2208      	movs	r2, #8
 800213e:	4629      	mov	r1, r5
 8002140:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002144:	f7ff fd2c 	bl	8001ba0 <memset>
 8002148:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800214c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002150:	4620      	mov	r0, r4
 8002152:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002154:	3468      	adds	r4, #104	; 0x68
 8002156:	e7d9      	b.n	800210c <__sfp+0x1c>
 8002158:	2104      	movs	r1, #4
 800215a:	4638      	mov	r0, r7
 800215c:	f7ff ff62 	bl	8002024 <__sfmoreglue>
 8002160:	4604      	mov	r4, r0
 8002162:	6030      	str	r0, [r6, #0]
 8002164:	2800      	cmp	r0, #0
 8002166:	d1d5      	bne.n	8002114 <__sfp+0x24>
 8002168:	f7ff ff78 	bl	800205c <__sfp_lock_release>
 800216c:	230c      	movs	r3, #12
 800216e:	603b      	str	r3, [r7, #0]
 8002170:	e7ee      	b.n	8002150 <__sfp+0x60>
 8002172:	bf00      	nop
 8002174:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}
 8002178:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

0800217c <_fwalk_reent>:
 800217c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002180:	4606      	mov	r6, r0
 8002182:	4688      	mov	r8, r1
 8002184:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002188:	2700      	movs	r7, #0
 800218a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800218e:	f1b9 0901 	subs.w	r9, r9, #1
 8002192:	d505      	bpl.n	80021a0 <_fwalk_reent+0x24>
 8002194:	6824      	ldr	r4, [r4, #0]
 8002196:	2c00      	cmp	r4, #0
 8002198:	d1f7      	bne.n	800218a <_fwalk_reent+0xe>
 800219a:	4638      	mov	r0, r7
 800219c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021a0:	89ab      	ldrh	r3, [r5, #12]
 80021a2:	2b01      	cmp	r3, #1
 80021a4:	d907      	bls.n	80021b6 <_fwalk_reent+0x3a>
 80021a6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021aa:	3301      	adds	r3, #1
 80021ac:	d003      	beq.n	80021b6 <_fwalk_reent+0x3a>
 80021ae:	4629      	mov	r1, r5
 80021b0:	4630      	mov	r0, r6
 80021b2:	47c0      	blx	r8
 80021b4:	4307      	orrs	r7, r0
 80021b6:	3568      	adds	r5, #104	; 0x68
 80021b8:	e7e9      	b.n	800218e <_fwalk_reent+0x12>

080021ba <__retarget_lock_init_recursive>:
 80021ba:	4770      	bx	lr

080021bc <__retarget_lock_acquire_recursive>:
 80021bc:	4770      	bx	lr

080021be <__retarget_lock_release_recursive>:
 80021be:	4770      	bx	lr

080021c0 <__swhatbuf_r>:
 80021c0:	b570      	push	{r4, r5, r6, lr}
 80021c2:	460e      	mov	r6, r1
 80021c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80021c8:	2900      	cmp	r1, #0
 80021ca:	b096      	sub	sp, #88	; 0x58
 80021cc:	4614      	mov	r4, r2
 80021ce:	461d      	mov	r5, r3
 80021d0:	da08      	bge.n	80021e4 <__swhatbuf_r+0x24>
 80021d2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80021d6:	2200      	movs	r2, #0
 80021d8:	602a      	str	r2, [r5, #0]
 80021da:	061a      	lsls	r2, r3, #24
 80021dc:	d410      	bmi.n	8002200 <__swhatbuf_r+0x40>
 80021de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80021e2:	e00e      	b.n	8002202 <__swhatbuf_r+0x42>
 80021e4:	466a      	mov	r2, sp
 80021e6:	f000 fc95 	bl	8002b14 <_fstat_r>
 80021ea:	2800      	cmp	r0, #0
 80021ec:	dbf1      	blt.n	80021d2 <__swhatbuf_r+0x12>
 80021ee:	9a01      	ldr	r2, [sp, #4]
 80021f0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80021f4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80021f8:	425a      	negs	r2, r3
 80021fa:	415a      	adcs	r2, r3
 80021fc:	602a      	str	r2, [r5, #0]
 80021fe:	e7ee      	b.n	80021de <__swhatbuf_r+0x1e>
 8002200:	2340      	movs	r3, #64	; 0x40
 8002202:	2000      	movs	r0, #0
 8002204:	6023      	str	r3, [r4, #0]
 8002206:	b016      	add	sp, #88	; 0x58
 8002208:	bd70      	pop	{r4, r5, r6, pc}
	...

0800220c <__smakebuf_r>:
 800220c:	898b      	ldrh	r3, [r1, #12]
 800220e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002210:	079d      	lsls	r5, r3, #30
 8002212:	4606      	mov	r6, r0
 8002214:	460c      	mov	r4, r1
 8002216:	d507      	bpl.n	8002228 <__smakebuf_r+0x1c>
 8002218:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800221c:	6023      	str	r3, [r4, #0]
 800221e:	6123      	str	r3, [r4, #16]
 8002220:	2301      	movs	r3, #1
 8002222:	6163      	str	r3, [r4, #20]
 8002224:	b002      	add	sp, #8
 8002226:	bd70      	pop	{r4, r5, r6, pc}
 8002228:	ab01      	add	r3, sp, #4
 800222a:	466a      	mov	r2, sp
 800222c:	f7ff ffc8 	bl	80021c0 <__swhatbuf_r>
 8002230:	9900      	ldr	r1, [sp, #0]
 8002232:	4605      	mov	r5, r0
 8002234:	4630      	mov	r0, r6
 8002236:	f000 f895 	bl	8002364 <_malloc_r>
 800223a:	b948      	cbnz	r0, 8002250 <__smakebuf_r+0x44>
 800223c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002240:	059a      	lsls	r2, r3, #22
 8002242:	d4ef      	bmi.n	8002224 <__smakebuf_r+0x18>
 8002244:	f023 0303 	bic.w	r3, r3, #3
 8002248:	f043 0302 	orr.w	r3, r3, #2
 800224c:	81a3      	strh	r3, [r4, #12]
 800224e:	e7e3      	b.n	8002218 <__smakebuf_r+0xc>
 8002250:	4b0d      	ldr	r3, [pc, #52]	; (8002288 <__smakebuf_r+0x7c>)
 8002252:	62b3      	str	r3, [r6, #40]	; 0x28
 8002254:	89a3      	ldrh	r3, [r4, #12]
 8002256:	6020      	str	r0, [r4, #0]
 8002258:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800225c:	81a3      	strh	r3, [r4, #12]
 800225e:	9b00      	ldr	r3, [sp, #0]
 8002260:	6163      	str	r3, [r4, #20]
 8002262:	9b01      	ldr	r3, [sp, #4]
 8002264:	6120      	str	r0, [r4, #16]
 8002266:	b15b      	cbz	r3, 8002280 <__smakebuf_r+0x74>
 8002268:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800226c:	4630      	mov	r0, r6
 800226e:	f000 fc63 	bl	8002b38 <_isatty_r>
 8002272:	b128      	cbz	r0, 8002280 <__smakebuf_r+0x74>
 8002274:	89a3      	ldrh	r3, [r4, #12]
 8002276:	f023 0303 	bic.w	r3, r3, #3
 800227a:	f043 0301 	orr.w	r3, r3, #1
 800227e:	81a3      	strh	r3, [r4, #12]
 8002280:	89a0      	ldrh	r0, [r4, #12]
 8002282:	4305      	orrs	r5, r0
 8002284:	81a5      	strh	r5, [r4, #12]
 8002286:	e7cd      	b.n	8002224 <__smakebuf_r+0x18>
 8002288:	08002019 	stmdaeq	r0, {r0, r3, r4, sp}

0800228c <_free_r>:
 800228c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800228e:	2900      	cmp	r1, #0
 8002290:	d044      	beq.n	800231c <_free_r+0x90>
 8002292:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002296:	9001      	str	r0, [sp, #4]
 8002298:	2b00      	cmp	r3, #0
 800229a:	f1a1 0404 	sub.w	r4, r1, #4
 800229e:	bfb8      	it	lt
 80022a0:	18e4      	addlt	r4, r4, r3
 80022a2:	f000 fc6b 	bl	8002b7c <__malloc_lock>
 80022a6:	4a1e      	ldr	r2, [pc, #120]	; (8002320 <_free_r+0x94>)
 80022a8:	9801      	ldr	r0, [sp, #4]
 80022aa:	6813      	ldr	r3, [r2, #0]
 80022ac:	b933      	cbnz	r3, 80022bc <_free_r+0x30>
 80022ae:	6063      	str	r3, [r4, #4]
 80022b0:	6014      	str	r4, [r2, #0]
 80022b2:	b003      	add	sp, #12
 80022b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80022b8:	f000 bc66 	b.w	8002b88 <__malloc_unlock>
 80022bc:	42a3      	cmp	r3, r4
 80022be:	d908      	bls.n	80022d2 <_free_r+0x46>
 80022c0:	6825      	ldr	r5, [r4, #0]
 80022c2:	1961      	adds	r1, r4, r5
 80022c4:	428b      	cmp	r3, r1
 80022c6:	bf01      	itttt	eq
 80022c8:	6819      	ldreq	r1, [r3, #0]
 80022ca:	685b      	ldreq	r3, [r3, #4]
 80022cc:	1949      	addeq	r1, r1, r5
 80022ce:	6021      	streq	r1, [r4, #0]
 80022d0:	e7ed      	b.n	80022ae <_free_r+0x22>
 80022d2:	461a      	mov	r2, r3
 80022d4:	685b      	ldr	r3, [r3, #4]
 80022d6:	b10b      	cbz	r3, 80022dc <_free_r+0x50>
 80022d8:	42a3      	cmp	r3, r4
 80022da:	d9fa      	bls.n	80022d2 <_free_r+0x46>
 80022dc:	6811      	ldr	r1, [r2, #0]
 80022de:	1855      	adds	r5, r2, r1
 80022e0:	42a5      	cmp	r5, r4
 80022e2:	d10b      	bne.n	80022fc <_free_r+0x70>
 80022e4:	6824      	ldr	r4, [r4, #0]
 80022e6:	4421      	add	r1, r4
 80022e8:	1854      	adds	r4, r2, r1
 80022ea:	42a3      	cmp	r3, r4
 80022ec:	6011      	str	r1, [r2, #0]
 80022ee:	d1e0      	bne.n	80022b2 <_free_r+0x26>
 80022f0:	681c      	ldr	r4, [r3, #0]
 80022f2:	685b      	ldr	r3, [r3, #4]
 80022f4:	6053      	str	r3, [r2, #4]
 80022f6:	4421      	add	r1, r4
 80022f8:	6011      	str	r1, [r2, #0]
 80022fa:	e7da      	b.n	80022b2 <_free_r+0x26>
 80022fc:	d902      	bls.n	8002304 <_free_r+0x78>
 80022fe:	230c      	movs	r3, #12
 8002300:	6003      	str	r3, [r0, #0]
 8002302:	e7d6      	b.n	80022b2 <_free_r+0x26>
 8002304:	6825      	ldr	r5, [r4, #0]
 8002306:	1961      	adds	r1, r4, r5
 8002308:	428b      	cmp	r3, r1
 800230a:	bf04      	itt	eq
 800230c:	6819      	ldreq	r1, [r3, #0]
 800230e:	685b      	ldreq	r3, [r3, #4]
 8002310:	6063      	str	r3, [r4, #4]
 8002312:	bf04      	itt	eq
 8002314:	1949      	addeq	r1, r1, r5
 8002316:	6021      	streq	r1, [r4, #0]
 8002318:	6054      	str	r4, [r2, #4]
 800231a:	e7ca      	b.n	80022b2 <_free_r+0x26>
 800231c:	b003      	add	sp, #12
 800231e:	bd30      	pop	{r4, r5, pc}
 8002320:	20000228 	andcs	r0, r0, r8, lsr #4

08002324 <sbrk_aligned>:
 8002324:	b570      	push	{r4, r5, r6, lr}
 8002326:	4e0e      	ldr	r6, [pc, #56]	; (8002360 <sbrk_aligned+0x3c>)
 8002328:	460c      	mov	r4, r1
 800232a:	6831      	ldr	r1, [r6, #0]
 800232c:	4605      	mov	r5, r0
 800232e:	b911      	cbnz	r1, 8002336 <sbrk_aligned+0x12>
 8002330:	f000 fb7a 	bl	8002a28 <_sbrk_r>
 8002334:	6030      	str	r0, [r6, #0]
 8002336:	4621      	mov	r1, r4
 8002338:	4628      	mov	r0, r5
 800233a:	f000 fb75 	bl	8002a28 <_sbrk_r>
 800233e:	1c43      	adds	r3, r0, #1
 8002340:	d00a      	beq.n	8002358 <sbrk_aligned+0x34>
 8002342:	1cc4      	adds	r4, r0, #3
 8002344:	f024 0403 	bic.w	r4, r4, #3
 8002348:	42a0      	cmp	r0, r4
 800234a:	d007      	beq.n	800235c <sbrk_aligned+0x38>
 800234c:	1a21      	subs	r1, r4, r0
 800234e:	4628      	mov	r0, r5
 8002350:	f000 fb6a 	bl	8002a28 <_sbrk_r>
 8002354:	3001      	adds	r0, #1
 8002356:	d101      	bne.n	800235c <sbrk_aligned+0x38>
 8002358:	f04f 34ff 	mov.w	r4, #4294967295
 800235c:	4620      	mov	r0, r4
 800235e:	bd70      	pop	{r4, r5, r6, pc}
 8002360:	2000022c 	andcs	r0, r0, ip, lsr #4

08002364 <_malloc_r>:
 8002364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002368:	1ccd      	adds	r5, r1, #3
 800236a:	f025 0503 	bic.w	r5, r5, #3
 800236e:	3508      	adds	r5, #8
 8002370:	2d0c      	cmp	r5, #12
 8002372:	bf38      	it	cc
 8002374:	250c      	movcc	r5, #12
 8002376:	2d00      	cmp	r5, #0
 8002378:	4607      	mov	r7, r0
 800237a:	db01      	blt.n	8002380 <_malloc_r+0x1c>
 800237c:	42a9      	cmp	r1, r5
 800237e:	d905      	bls.n	800238c <_malloc_r+0x28>
 8002380:	230c      	movs	r3, #12
 8002382:	603b      	str	r3, [r7, #0]
 8002384:	2600      	movs	r6, #0
 8002386:	4630      	mov	r0, r6
 8002388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800238c:	4e2e      	ldr	r6, [pc, #184]	; (8002448 <_malloc_r+0xe4>)
 800238e:	f000 fbf5 	bl	8002b7c <__malloc_lock>
 8002392:	6833      	ldr	r3, [r6, #0]
 8002394:	461c      	mov	r4, r3
 8002396:	bb34      	cbnz	r4, 80023e6 <_malloc_r+0x82>
 8002398:	4629      	mov	r1, r5
 800239a:	4638      	mov	r0, r7
 800239c:	f7ff ffc2 	bl	8002324 <sbrk_aligned>
 80023a0:	1c43      	adds	r3, r0, #1
 80023a2:	4604      	mov	r4, r0
 80023a4:	d14d      	bne.n	8002442 <_malloc_r+0xde>
 80023a6:	6834      	ldr	r4, [r6, #0]
 80023a8:	4626      	mov	r6, r4
 80023aa:	2e00      	cmp	r6, #0
 80023ac:	d140      	bne.n	8002430 <_malloc_r+0xcc>
 80023ae:	6823      	ldr	r3, [r4, #0]
 80023b0:	4631      	mov	r1, r6
 80023b2:	4638      	mov	r0, r7
 80023b4:	eb04 0803 	add.w	r8, r4, r3
 80023b8:	f000 fb36 	bl	8002a28 <_sbrk_r>
 80023bc:	4580      	cmp	r8, r0
 80023be:	d13a      	bne.n	8002436 <_malloc_r+0xd2>
 80023c0:	6821      	ldr	r1, [r4, #0]
 80023c2:	3503      	adds	r5, #3
 80023c4:	1a6d      	subs	r5, r5, r1
 80023c6:	f025 0503 	bic.w	r5, r5, #3
 80023ca:	3508      	adds	r5, #8
 80023cc:	2d0c      	cmp	r5, #12
 80023ce:	bf38      	it	cc
 80023d0:	250c      	movcc	r5, #12
 80023d2:	4629      	mov	r1, r5
 80023d4:	4638      	mov	r0, r7
 80023d6:	f7ff ffa5 	bl	8002324 <sbrk_aligned>
 80023da:	3001      	adds	r0, #1
 80023dc:	d02b      	beq.n	8002436 <_malloc_r+0xd2>
 80023de:	6823      	ldr	r3, [r4, #0]
 80023e0:	442b      	add	r3, r5
 80023e2:	6023      	str	r3, [r4, #0]
 80023e4:	e00e      	b.n	8002404 <_malloc_r+0xa0>
 80023e6:	6822      	ldr	r2, [r4, #0]
 80023e8:	1b52      	subs	r2, r2, r5
 80023ea:	d41e      	bmi.n	800242a <_malloc_r+0xc6>
 80023ec:	2a0b      	cmp	r2, #11
 80023ee:	d916      	bls.n	800241e <_malloc_r+0xba>
 80023f0:	1961      	adds	r1, r4, r5
 80023f2:	42a3      	cmp	r3, r4
 80023f4:	6025      	str	r5, [r4, #0]
 80023f6:	bf18      	it	ne
 80023f8:	6059      	strne	r1, [r3, #4]
 80023fa:	6863      	ldr	r3, [r4, #4]
 80023fc:	bf08      	it	eq
 80023fe:	6031      	streq	r1, [r6, #0]
 8002400:	5162      	str	r2, [r4, r5]
 8002402:	604b      	str	r3, [r1, #4]
 8002404:	4638      	mov	r0, r7
 8002406:	f104 060b 	add.w	r6, r4, #11
 800240a:	f000 fbbd 	bl	8002b88 <__malloc_unlock>
 800240e:	f026 0607 	bic.w	r6, r6, #7
 8002412:	1d23      	adds	r3, r4, #4
 8002414:	1af2      	subs	r2, r6, r3
 8002416:	d0b6      	beq.n	8002386 <_malloc_r+0x22>
 8002418:	1b9b      	subs	r3, r3, r6
 800241a:	50a3      	str	r3, [r4, r2]
 800241c:	e7b3      	b.n	8002386 <_malloc_r+0x22>
 800241e:	6862      	ldr	r2, [r4, #4]
 8002420:	42a3      	cmp	r3, r4
 8002422:	bf0c      	ite	eq
 8002424:	6032      	streq	r2, [r6, #0]
 8002426:	605a      	strne	r2, [r3, #4]
 8002428:	e7ec      	b.n	8002404 <_malloc_r+0xa0>
 800242a:	4623      	mov	r3, r4
 800242c:	6864      	ldr	r4, [r4, #4]
 800242e:	e7b2      	b.n	8002396 <_malloc_r+0x32>
 8002430:	4634      	mov	r4, r6
 8002432:	6876      	ldr	r6, [r6, #4]
 8002434:	e7b9      	b.n	80023aa <_malloc_r+0x46>
 8002436:	230c      	movs	r3, #12
 8002438:	603b      	str	r3, [r7, #0]
 800243a:	4638      	mov	r0, r7
 800243c:	f000 fba4 	bl	8002b88 <__malloc_unlock>
 8002440:	e7a1      	b.n	8002386 <_malloc_r+0x22>
 8002442:	6025      	str	r5, [r4, #0]
 8002444:	e7de      	b.n	8002404 <_malloc_r+0xa0>
 8002446:	bf00      	nop
 8002448:	20000228 	andcs	r0, r0, r8, lsr #4

0800244c <__sfputc_r>:
 800244c:	6893      	ldr	r3, [r2, #8]
 800244e:	3b01      	subs	r3, #1
 8002450:	2b00      	cmp	r3, #0
 8002452:	b410      	push	{r4}
 8002454:	6093      	str	r3, [r2, #8]
 8002456:	da08      	bge.n	800246a <__sfputc_r+0x1e>
 8002458:	6994      	ldr	r4, [r2, #24]
 800245a:	42a3      	cmp	r3, r4
 800245c:	db01      	blt.n	8002462 <__sfputc_r+0x16>
 800245e:	290a      	cmp	r1, #10
 8002460:	d103      	bne.n	800246a <__sfputc_r+0x1e>
 8002462:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002466:	f7ff bc31 	b.w	8001ccc <__swbuf_r>
 800246a:	6813      	ldr	r3, [r2, #0]
 800246c:	1c58      	adds	r0, r3, #1
 800246e:	6010      	str	r0, [r2, #0]
 8002470:	7019      	strb	r1, [r3, #0]
 8002472:	4608      	mov	r0, r1
 8002474:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002478:	4770      	bx	lr

0800247a <__sfputs_r>:
 800247a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800247c:	4606      	mov	r6, r0
 800247e:	460f      	mov	r7, r1
 8002480:	4614      	mov	r4, r2
 8002482:	18d5      	adds	r5, r2, r3
 8002484:	42ac      	cmp	r4, r5
 8002486:	d101      	bne.n	800248c <__sfputs_r+0x12>
 8002488:	2000      	movs	r0, #0
 800248a:	e007      	b.n	800249c <__sfputs_r+0x22>
 800248c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002490:	463a      	mov	r2, r7
 8002492:	4630      	mov	r0, r6
 8002494:	f7ff ffda 	bl	800244c <__sfputc_r>
 8002498:	1c43      	adds	r3, r0, #1
 800249a:	d1f3      	bne.n	8002484 <__sfputs_r+0xa>
 800249c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080024a0 <_vfiprintf_r>:
 80024a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024a4:	460d      	mov	r5, r1
 80024a6:	b09d      	sub	sp, #116	; 0x74
 80024a8:	4614      	mov	r4, r2
 80024aa:	4698      	mov	r8, r3
 80024ac:	4606      	mov	r6, r0
 80024ae:	b118      	cbz	r0, 80024b8 <_vfiprintf_r+0x18>
 80024b0:	6983      	ldr	r3, [r0, #24]
 80024b2:	b90b      	cbnz	r3, 80024b8 <_vfiprintf_r+0x18>
 80024b4:	f7ff fde4 	bl	8002080 <__sinit>
 80024b8:	4b89      	ldr	r3, [pc, #548]	; (80026e0 <_vfiprintf_r+0x240>)
 80024ba:	429d      	cmp	r5, r3
 80024bc:	d11b      	bne.n	80024f6 <_vfiprintf_r+0x56>
 80024be:	6875      	ldr	r5, [r6, #4]
 80024c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80024c2:	07d9      	lsls	r1, r3, #31
 80024c4:	d405      	bmi.n	80024d2 <_vfiprintf_r+0x32>
 80024c6:	89ab      	ldrh	r3, [r5, #12]
 80024c8:	059a      	lsls	r2, r3, #22
 80024ca:	d402      	bmi.n	80024d2 <_vfiprintf_r+0x32>
 80024cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80024ce:	f7ff fe75 	bl	80021bc <__retarget_lock_acquire_recursive>
 80024d2:	89ab      	ldrh	r3, [r5, #12]
 80024d4:	071b      	lsls	r3, r3, #28
 80024d6:	d501      	bpl.n	80024dc <_vfiprintf_r+0x3c>
 80024d8:	692b      	ldr	r3, [r5, #16]
 80024da:	b9eb      	cbnz	r3, 8002518 <_vfiprintf_r+0x78>
 80024dc:	4629      	mov	r1, r5
 80024de:	4630      	mov	r0, r6
 80024e0:	f7ff fc46 	bl	8001d70 <__swsetup_r>
 80024e4:	b1c0      	cbz	r0, 8002518 <_vfiprintf_r+0x78>
 80024e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80024e8:	07dc      	lsls	r4, r3, #31
 80024ea:	d50e      	bpl.n	800250a <_vfiprintf_r+0x6a>
 80024ec:	f04f 30ff 	mov.w	r0, #4294967295
 80024f0:	b01d      	add	sp, #116	; 0x74
 80024f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024f6:	4b7b      	ldr	r3, [pc, #492]	; (80026e4 <_vfiprintf_r+0x244>)
 80024f8:	429d      	cmp	r5, r3
 80024fa:	d101      	bne.n	8002500 <_vfiprintf_r+0x60>
 80024fc:	68b5      	ldr	r5, [r6, #8]
 80024fe:	e7df      	b.n	80024c0 <_vfiprintf_r+0x20>
 8002500:	4b79      	ldr	r3, [pc, #484]	; (80026e8 <_vfiprintf_r+0x248>)
 8002502:	429d      	cmp	r5, r3
 8002504:	bf08      	it	eq
 8002506:	68f5      	ldreq	r5, [r6, #12]
 8002508:	e7da      	b.n	80024c0 <_vfiprintf_r+0x20>
 800250a:	89ab      	ldrh	r3, [r5, #12]
 800250c:	0598      	lsls	r0, r3, #22
 800250e:	d4ed      	bmi.n	80024ec <_vfiprintf_r+0x4c>
 8002510:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002512:	f7ff fe54 	bl	80021be <__retarget_lock_release_recursive>
 8002516:	e7e9      	b.n	80024ec <_vfiprintf_r+0x4c>
 8002518:	2300      	movs	r3, #0
 800251a:	9309      	str	r3, [sp, #36]	; 0x24
 800251c:	2320      	movs	r3, #32
 800251e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002522:	f8cd 800c 	str.w	r8, [sp, #12]
 8002526:	2330      	movs	r3, #48	; 0x30
 8002528:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80026ec <_vfiprintf_r+0x24c>
 800252c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002530:	f04f 0901 	mov.w	r9, #1
 8002534:	4623      	mov	r3, r4
 8002536:	469a      	mov	sl, r3
 8002538:	f813 2b01 	ldrb.w	r2, [r3], #1
 800253c:	b10a      	cbz	r2, 8002542 <_vfiprintf_r+0xa2>
 800253e:	2a25      	cmp	r2, #37	; 0x25
 8002540:	d1f9      	bne.n	8002536 <_vfiprintf_r+0x96>
 8002542:	ebba 0b04 	subs.w	fp, sl, r4
 8002546:	d00b      	beq.n	8002560 <_vfiprintf_r+0xc0>
 8002548:	465b      	mov	r3, fp
 800254a:	4622      	mov	r2, r4
 800254c:	4629      	mov	r1, r5
 800254e:	4630      	mov	r0, r6
 8002550:	f7ff ff93 	bl	800247a <__sfputs_r>
 8002554:	3001      	adds	r0, #1
 8002556:	f000 80aa 	beq.w	80026ae <_vfiprintf_r+0x20e>
 800255a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800255c:	445a      	add	r2, fp
 800255e:	9209      	str	r2, [sp, #36]	; 0x24
 8002560:	f89a 3000 	ldrb.w	r3, [sl]
 8002564:	2b00      	cmp	r3, #0
 8002566:	f000 80a2 	beq.w	80026ae <_vfiprintf_r+0x20e>
 800256a:	2300      	movs	r3, #0
 800256c:	f04f 32ff 	mov.w	r2, #4294967295
 8002570:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002574:	f10a 0a01 	add.w	sl, sl, #1
 8002578:	9304      	str	r3, [sp, #16]
 800257a:	9307      	str	r3, [sp, #28]
 800257c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002580:	931a      	str	r3, [sp, #104]	; 0x68
 8002582:	4654      	mov	r4, sl
 8002584:	2205      	movs	r2, #5
 8002586:	f814 1b01 	ldrb.w	r1, [r4], #1
 800258a:	4858      	ldr	r0, [pc, #352]	; (80026ec <_vfiprintf_r+0x24c>)
 800258c:	f7fd fe48 	bl	8000220 <memchr>
 8002590:	9a04      	ldr	r2, [sp, #16]
 8002592:	b9d8      	cbnz	r0, 80025cc <_vfiprintf_r+0x12c>
 8002594:	06d1      	lsls	r1, r2, #27
 8002596:	bf44      	itt	mi
 8002598:	2320      	movmi	r3, #32
 800259a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800259e:	0713      	lsls	r3, r2, #28
 80025a0:	bf44      	itt	mi
 80025a2:	232b      	movmi	r3, #43	; 0x2b
 80025a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80025a8:	f89a 3000 	ldrb.w	r3, [sl]
 80025ac:	2b2a      	cmp	r3, #42	; 0x2a
 80025ae:	d015      	beq.n	80025dc <_vfiprintf_r+0x13c>
 80025b0:	9a07      	ldr	r2, [sp, #28]
 80025b2:	4654      	mov	r4, sl
 80025b4:	2000      	movs	r0, #0
 80025b6:	f04f 0c0a 	mov.w	ip, #10
 80025ba:	4621      	mov	r1, r4
 80025bc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80025c0:	3b30      	subs	r3, #48	; 0x30
 80025c2:	2b09      	cmp	r3, #9
 80025c4:	d94e      	bls.n	8002664 <_vfiprintf_r+0x1c4>
 80025c6:	b1b0      	cbz	r0, 80025f6 <_vfiprintf_r+0x156>
 80025c8:	9207      	str	r2, [sp, #28]
 80025ca:	e014      	b.n	80025f6 <_vfiprintf_r+0x156>
 80025cc:	eba0 0308 	sub.w	r3, r0, r8
 80025d0:	fa09 f303 	lsl.w	r3, r9, r3
 80025d4:	4313      	orrs	r3, r2
 80025d6:	9304      	str	r3, [sp, #16]
 80025d8:	46a2      	mov	sl, r4
 80025da:	e7d2      	b.n	8002582 <_vfiprintf_r+0xe2>
 80025dc:	9b03      	ldr	r3, [sp, #12]
 80025de:	1d19      	adds	r1, r3, #4
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	9103      	str	r1, [sp, #12]
 80025e4:	2b00      	cmp	r3, #0
 80025e6:	bfbb      	ittet	lt
 80025e8:	425b      	neglt	r3, r3
 80025ea:	f042 0202 	orrlt.w	r2, r2, #2
 80025ee:	9307      	strge	r3, [sp, #28]
 80025f0:	9307      	strlt	r3, [sp, #28]
 80025f2:	bfb8      	it	lt
 80025f4:	9204      	strlt	r2, [sp, #16]
 80025f6:	7823      	ldrb	r3, [r4, #0]
 80025f8:	2b2e      	cmp	r3, #46	; 0x2e
 80025fa:	d10c      	bne.n	8002616 <_vfiprintf_r+0x176>
 80025fc:	7863      	ldrb	r3, [r4, #1]
 80025fe:	2b2a      	cmp	r3, #42	; 0x2a
 8002600:	d135      	bne.n	800266e <_vfiprintf_r+0x1ce>
 8002602:	9b03      	ldr	r3, [sp, #12]
 8002604:	1d1a      	adds	r2, r3, #4
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	9203      	str	r2, [sp, #12]
 800260a:	2b00      	cmp	r3, #0
 800260c:	bfb8      	it	lt
 800260e:	f04f 33ff 	movlt.w	r3, #4294967295
 8002612:	3402      	adds	r4, #2
 8002614:	9305      	str	r3, [sp, #20]
 8002616:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80026fc <_vfiprintf_r+0x25c>
 800261a:	7821      	ldrb	r1, [r4, #0]
 800261c:	2203      	movs	r2, #3
 800261e:	4650      	mov	r0, sl
 8002620:	f7fd fdfe 	bl	8000220 <memchr>
 8002624:	b140      	cbz	r0, 8002638 <_vfiprintf_r+0x198>
 8002626:	2340      	movs	r3, #64	; 0x40
 8002628:	eba0 000a 	sub.w	r0, r0, sl
 800262c:	fa03 f000 	lsl.w	r0, r3, r0
 8002630:	9b04      	ldr	r3, [sp, #16]
 8002632:	4303      	orrs	r3, r0
 8002634:	3401      	adds	r4, #1
 8002636:	9304      	str	r3, [sp, #16]
 8002638:	f814 1b01 	ldrb.w	r1, [r4], #1
 800263c:	482c      	ldr	r0, [pc, #176]	; (80026f0 <_vfiprintf_r+0x250>)
 800263e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002642:	2206      	movs	r2, #6
 8002644:	f7fd fdec 	bl	8000220 <memchr>
 8002648:	2800      	cmp	r0, #0
 800264a:	d03f      	beq.n	80026cc <_vfiprintf_r+0x22c>
 800264c:	4b29      	ldr	r3, [pc, #164]	; (80026f4 <_vfiprintf_r+0x254>)
 800264e:	bb1b      	cbnz	r3, 8002698 <_vfiprintf_r+0x1f8>
 8002650:	9b03      	ldr	r3, [sp, #12]
 8002652:	3307      	adds	r3, #7
 8002654:	f023 0307 	bic.w	r3, r3, #7
 8002658:	3308      	adds	r3, #8
 800265a:	9303      	str	r3, [sp, #12]
 800265c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800265e:	443b      	add	r3, r7
 8002660:	9309      	str	r3, [sp, #36]	; 0x24
 8002662:	e767      	b.n	8002534 <_vfiprintf_r+0x94>
 8002664:	fb0c 3202 	mla	r2, ip, r2, r3
 8002668:	460c      	mov	r4, r1
 800266a:	2001      	movs	r0, #1
 800266c:	e7a5      	b.n	80025ba <_vfiprintf_r+0x11a>
 800266e:	2300      	movs	r3, #0
 8002670:	3401      	adds	r4, #1
 8002672:	9305      	str	r3, [sp, #20]
 8002674:	4619      	mov	r1, r3
 8002676:	f04f 0c0a 	mov.w	ip, #10
 800267a:	4620      	mov	r0, r4
 800267c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002680:	3a30      	subs	r2, #48	; 0x30
 8002682:	2a09      	cmp	r2, #9
 8002684:	d903      	bls.n	800268e <_vfiprintf_r+0x1ee>
 8002686:	2b00      	cmp	r3, #0
 8002688:	d0c5      	beq.n	8002616 <_vfiprintf_r+0x176>
 800268a:	9105      	str	r1, [sp, #20]
 800268c:	e7c3      	b.n	8002616 <_vfiprintf_r+0x176>
 800268e:	fb0c 2101 	mla	r1, ip, r1, r2
 8002692:	4604      	mov	r4, r0
 8002694:	2301      	movs	r3, #1
 8002696:	e7f0      	b.n	800267a <_vfiprintf_r+0x1da>
 8002698:	ab03      	add	r3, sp, #12
 800269a:	9300      	str	r3, [sp, #0]
 800269c:	462a      	mov	r2, r5
 800269e:	4b16      	ldr	r3, [pc, #88]	; (80026f8 <_vfiprintf_r+0x258>)
 80026a0:	a904      	add	r1, sp, #16
 80026a2:	4630      	mov	r0, r6
 80026a4:	f3af 8000 	nop.w
 80026a8:	4607      	mov	r7, r0
 80026aa:	1c78      	adds	r0, r7, #1
 80026ac:	d1d6      	bne.n	800265c <_vfiprintf_r+0x1bc>
 80026ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80026b0:	07d9      	lsls	r1, r3, #31
 80026b2:	d405      	bmi.n	80026c0 <_vfiprintf_r+0x220>
 80026b4:	89ab      	ldrh	r3, [r5, #12]
 80026b6:	059a      	lsls	r2, r3, #22
 80026b8:	d402      	bmi.n	80026c0 <_vfiprintf_r+0x220>
 80026ba:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80026bc:	f7ff fd7f 	bl	80021be <__retarget_lock_release_recursive>
 80026c0:	89ab      	ldrh	r3, [r5, #12]
 80026c2:	065b      	lsls	r3, r3, #25
 80026c4:	f53f af12 	bmi.w	80024ec <_vfiprintf_r+0x4c>
 80026c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80026ca:	e711      	b.n	80024f0 <_vfiprintf_r+0x50>
 80026cc:	ab03      	add	r3, sp, #12
 80026ce:	9300      	str	r3, [sp, #0]
 80026d0:	462a      	mov	r2, r5
 80026d2:	4b09      	ldr	r3, [pc, #36]	; (80026f8 <_vfiprintf_r+0x258>)
 80026d4:	a904      	add	r1, sp, #16
 80026d6:	4630      	mov	r0, r6
 80026d8:	f000 f880 	bl	80027dc <_printf_i>
 80026dc:	e7e4      	b.n	80026a8 <_vfiprintf_r+0x208>
 80026de:	bf00      	nop
 80026e0:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 80026e4:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 80026e8:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}
 80026ec:	080030d0 	stmdaeq	r0, {r4, r6, r7, ip, sp}
 80026f0:	080030da 	stmdaeq	r0, {r1, r3, r4, r6, r7, ip, sp}
 80026f4:	00000000 	andeq	r0, r0, r0
 80026f8:	0800247b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, sl, sp}
 80026fc:	080030d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, ip, sp}

08002700 <_printf_common>:
 8002700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002704:	4616      	mov	r6, r2
 8002706:	4699      	mov	r9, r3
 8002708:	688a      	ldr	r2, [r1, #8]
 800270a:	690b      	ldr	r3, [r1, #16]
 800270c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002710:	4293      	cmp	r3, r2
 8002712:	bfb8      	it	lt
 8002714:	4613      	movlt	r3, r2
 8002716:	6033      	str	r3, [r6, #0]
 8002718:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800271c:	4607      	mov	r7, r0
 800271e:	460c      	mov	r4, r1
 8002720:	b10a      	cbz	r2, 8002726 <_printf_common+0x26>
 8002722:	3301      	adds	r3, #1
 8002724:	6033      	str	r3, [r6, #0]
 8002726:	6823      	ldr	r3, [r4, #0]
 8002728:	0699      	lsls	r1, r3, #26
 800272a:	bf42      	ittt	mi
 800272c:	6833      	ldrmi	r3, [r6, #0]
 800272e:	3302      	addmi	r3, #2
 8002730:	6033      	strmi	r3, [r6, #0]
 8002732:	6825      	ldr	r5, [r4, #0]
 8002734:	f015 0506 	ands.w	r5, r5, #6
 8002738:	d106      	bne.n	8002748 <_printf_common+0x48>
 800273a:	f104 0a19 	add.w	sl, r4, #25
 800273e:	68e3      	ldr	r3, [r4, #12]
 8002740:	6832      	ldr	r2, [r6, #0]
 8002742:	1a9b      	subs	r3, r3, r2
 8002744:	42ab      	cmp	r3, r5
 8002746:	dc26      	bgt.n	8002796 <_printf_common+0x96>
 8002748:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800274c:	1e13      	subs	r3, r2, #0
 800274e:	6822      	ldr	r2, [r4, #0]
 8002750:	bf18      	it	ne
 8002752:	2301      	movne	r3, #1
 8002754:	0692      	lsls	r2, r2, #26
 8002756:	d42b      	bmi.n	80027b0 <_printf_common+0xb0>
 8002758:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800275c:	4649      	mov	r1, r9
 800275e:	4638      	mov	r0, r7
 8002760:	47c0      	blx	r8
 8002762:	3001      	adds	r0, #1
 8002764:	d01e      	beq.n	80027a4 <_printf_common+0xa4>
 8002766:	6823      	ldr	r3, [r4, #0]
 8002768:	68e5      	ldr	r5, [r4, #12]
 800276a:	6832      	ldr	r2, [r6, #0]
 800276c:	f003 0306 	and.w	r3, r3, #6
 8002770:	2b04      	cmp	r3, #4
 8002772:	bf08      	it	eq
 8002774:	1aad      	subeq	r5, r5, r2
 8002776:	68a3      	ldr	r3, [r4, #8]
 8002778:	6922      	ldr	r2, [r4, #16]
 800277a:	bf0c      	ite	eq
 800277c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002780:	2500      	movne	r5, #0
 8002782:	4293      	cmp	r3, r2
 8002784:	bfc4      	itt	gt
 8002786:	1a9b      	subgt	r3, r3, r2
 8002788:	18ed      	addgt	r5, r5, r3
 800278a:	2600      	movs	r6, #0
 800278c:	341a      	adds	r4, #26
 800278e:	42b5      	cmp	r5, r6
 8002790:	d11a      	bne.n	80027c8 <_printf_common+0xc8>
 8002792:	2000      	movs	r0, #0
 8002794:	e008      	b.n	80027a8 <_printf_common+0xa8>
 8002796:	2301      	movs	r3, #1
 8002798:	4652      	mov	r2, sl
 800279a:	4649      	mov	r1, r9
 800279c:	4638      	mov	r0, r7
 800279e:	47c0      	blx	r8
 80027a0:	3001      	adds	r0, #1
 80027a2:	d103      	bne.n	80027ac <_printf_common+0xac>
 80027a4:	f04f 30ff 	mov.w	r0, #4294967295
 80027a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80027ac:	3501      	adds	r5, #1
 80027ae:	e7c6      	b.n	800273e <_printf_common+0x3e>
 80027b0:	18e1      	adds	r1, r4, r3
 80027b2:	1c5a      	adds	r2, r3, #1
 80027b4:	2030      	movs	r0, #48	; 0x30
 80027b6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80027ba:	4422      	add	r2, r4
 80027bc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80027c0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80027c4:	3302      	adds	r3, #2
 80027c6:	e7c7      	b.n	8002758 <_printf_common+0x58>
 80027c8:	2301      	movs	r3, #1
 80027ca:	4622      	mov	r2, r4
 80027cc:	4649      	mov	r1, r9
 80027ce:	4638      	mov	r0, r7
 80027d0:	47c0      	blx	r8
 80027d2:	3001      	adds	r0, #1
 80027d4:	d0e6      	beq.n	80027a4 <_printf_common+0xa4>
 80027d6:	3601      	adds	r6, #1
 80027d8:	e7d9      	b.n	800278e <_printf_common+0x8e>
	...

080027dc <_printf_i>:
 80027dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80027e0:	7e0f      	ldrb	r7, [r1, #24]
 80027e2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80027e4:	2f78      	cmp	r7, #120	; 0x78
 80027e6:	4691      	mov	r9, r2
 80027e8:	4680      	mov	r8, r0
 80027ea:	460c      	mov	r4, r1
 80027ec:	469a      	mov	sl, r3
 80027ee:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80027f2:	d807      	bhi.n	8002804 <_printf_i+0x28>
 80027f4:	2f62      	cmp	r7, #98	; 0x62
 80027f6:	d80a      	bhi.n	800280e <_printf_i+0x32>
 80027f8:	2f00      	cmp	r7, #0
 80027fa:	f000 80d8 	beq.w	80029ae <_printf_i+0x1d2>
 80027fe:	2f58      	cmp	r7, #88	; 0x58
 8002800:	f000 80a3 	beq.w	800294a <_printf_i+0x16e>
 8002804:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002808:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800280c:	e03a      	b.n	8002884 <_printf_i+0xa8>
 800280e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002812:	2b15      	cmp	r3, #21
 8002814:	d8f6      	bhi.n	8002804 <_printf_i+0x28>
 8002816:	a101      	add	r1, pc, #4	; (adr r1, 800281c <_printf_i+0x40>)
 8002818:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800281c:	08002875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp, sp}
 8002820:	08002889 	stmdaeq	r0, {r0, r3, r7, fp, sp}
 8002824:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002828:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800282c:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002830:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002834:	08002889 	stmdaeq	r0, {r0, r3, r7, fp, sp}
 8002838:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800283c:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002840:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002844:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002848:	08002995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, sp}
 800284c:	080028b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp}
 8002850:	08002977 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, fp, sp}
 8002854:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002858:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800285c:	080029b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, fp, sp}
 8002860:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002864:	080028b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp}
 8002868:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800286c:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002870:	0800297f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8, fp, sp}
 8002874:	682b      	ldr	r3, [r5, #0]
 8002876:	1d1a      	adds	r2, r3, #4
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	602a      	str	r2, [r5, #0]
 800287c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002880:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002884:	2301      	movs	r3, #1
 8002886:	e0a3      	b.n	80029d0 <_printf_i+0x1f4>
 8002888:	6820      	ldr	r0, [r4, #0]
 800288a:	6829      	ldr	r1, [r5, #0]
 800288c:	0606      	lsls	r6, r0, #24
 800288e:	f101 0304 	add.w	r3, r1, #4
 8002892:	d50a      	bpl.n	80028aa <_printf_i+0xce>
 8002894:	680e      	ldr	r6, [r1, #0]
 8002896:	602b      	str	r3, [r5, #0]
 8002898:	2e00      	cmp	r6, #0
 800289a:	da03      	bge.n	80028a4 <_printf_i+0xc8>
 800289c:	232d      	movs	r3, #45	; 0x2d
 800289e:	4276      	negs	r6, r6
 80028a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028a4:	485e      	ldr	r0, [pc, #376]	; (8002a20 <_printf_i+0x244>)
 80028a6:	230a      	movs	r3, #10
 80028a8:	e019      	b.n	80028de <_printf_i+0x102>
 80028aa:	680e      	ldr	r6, [r1, #0]
 80028ac:	602b      	str	r3, [r5, #0]
 80028ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 80028b2:	bf18      	it	ne
 80028b4:	b236      	sxthne	r6, r6
 80028b6:	e7ef      	b.n	8002898 <_printf_i+0xbc>
 80028b8:	682b      	ldr	r3, [r5, #0]
 80028ba:	6820      	ldr	r0, [r4, #0]
 80028bc:	1d19      	adds	r1, r3, #4
 80028be:	6029      	str	r1, [r5, #0]
 80028c0:	0601      	lsls	r1, r0, #24
 80028c2:	d501      	bpl.n	80028c8 <_printf_i+0xec>
 80028c4:	681e      	ldr	r6, [r3, #0]
 80028c6:	e002      	b.n	80028ce <_printf_i+0xf2>
 80028c8:	0646      	lsls	r6, r0, #25
 80028ca:	d5fb      	bpl.n	80028c4 <_printf_i+0xe8>
 80028cc:	881e      	ldrh	r6, [r3, #0]
 80028ce:	4854      	ldr	r0, [pc, #336]	; (8002a20 <_printf_i+0x244>)
 80028d0:	2f6f      	cmp	r7, #111	; 0x6f
 80028d2:	bf0c      	ite	eq
 80028d4:	2308      	moveq	r3, #8
 80028d6:	230a      	movne	r3, #10
 80028d8:	2100      	movs	r1, #0
 80028da:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80028de:	6865      	ldr	r5, [r4, #4]
 80028e0:	60a5      	str	r5, [r4, #8]
 80028e2:	2d00      	cmp	r5, #0
 80028e4:	bfa2      	ittt	ge
 80028e6:	6821      	ldrge	r1, [r4, #0]
 80028e8:	f021 0104 	bicge.w	r1, r1, #4
 80028ec:	6021      	strge	r1, [r4, #0]
 80028ee:	b90e      	cbnz	r6, 80028f4 <_printf_i+0x118>
 80028f0:	2d00      	cmp	r5, #0
 80028f2:	d04d      	beq.n	8002990 <_printf_i+0x1b4>
 80028f4:	4615      	mov	r5, r2
 80028f6:	fbb6 f1f3 	udiv	r1, r6, r3
 80028fa:	fb03 6711 	mls	r7, r3, r1, r6
 80028fe:	5dc7      	ldrb	r7, [r0, r7]
 8002900:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002904:	4637      	mov	r7, r6
 8002906:	42bb      	cmp	r3, r7
 8002908:	460e      	mov	r6, r1
 800290a:	d9f4      	bls.n	80028f6 <_printf_i+0x11a>
 800290c:	2b08      	cmp	r3, #8
 800290e:	d10b      	bne.n	8002928 <_printf_i+0x14c>
 8002910:	6823      	ldr	r3, [r4, #0]
 8002912:	07de      	lsls	r6, r3, #31
 8002914:	d508      	bpl.n	8002928 <_printf_i+0x14c>
 8002916:	6923      	ldr	r3, [r4, #16]
 8002918:	6861      	ldr	r1, [r4, #4]
 800291a:	4299      	cmp	r1, r3
 800291c:	bfde      	ittt	le
 800291e:	2330      	movle	r3, #48	; 0x30
 8002920:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002924:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002928:	1b52      	subs	r2, r2, r5
 800292a:	6122      	str	r2, [r4, #16]
 800292c:	f8cd a000 	str.w	sl, [sp]
 8002930:	464b      	mov	r3, r9
 8002932:	aa03      	add	r2, sp, #12
 8002934:	4621      	mov	r1, r4
 8002936:	4640      	mov	r0, r8
 8002938:	f7ff fee2 	bl	8002700 <_printf_common>
 800293c:	3001      	adds	r0, #1
 800293e:	d14c      	bne.n	80029da <_printf_i+0x1fe>
 8002940:	f04f 30ff 	mov.w	r0, #4294967295
 8002944:	b004      	add	sp, #16
 8002946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800294a:	4835      	ldr	r0, [pc, #212]	; (8002a20 <_printf_i+0x244>)
 800294c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002950:	6829      	ldr	r1, [r5, #0]
 8002952:	6823      	ldr	r3, [r4, #0]
 8002954:	f851 6b04 	ldr.w	r6, [r1], #4
 8002958:	6029      	str	r1, [r5, #0]
 800295a:	061d      	lsls	r5, r3, #24
 800295c:	d514      	bpl.n	8002988 <_printf_i+0x1ac>
 800295e:	07df      	lsls	r7, r3, #31
 8002960:	bf44      	itt	mi
 8002962:	f043 0320 	orrmi.w	r3, r3, #32
 8002966:	6023      	strmi	r3, [r4, #0]
 8002968:	b91e      	cbnz	r6, 8002972 <_printf_i+0x196>
 800296a:	6823      	ldr	r3, [r4, #0]
 800296c:	f023 0320 	bic.w	r3, r3, #32
 8002970:	6023      	str	r3, [r4, #0]
 8002972:	2310      	movs	r3, #16
 8002974:	e7b0      	b.n	80028d8 <_printf_i+0xfc>
 8002976:	6823      	ldr	r3, [r4, #0]
 8002978:	f043 0320 	orr.w	r3, r3, #32
 800297c:	6023      	str	r3, [r4, #0]
 800297e:	2378      	movs	r3, #120	; 0x78
 8002980:	4828      	ldr	r0, [pc, #160]	; (8002a24 <_printf_i+0x248>)
 8002982:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002986:	e7e3      	b.n	8002950 <_printf_i+0x174>
 8002988:	0659      	lsls	r1, r3, #25
 800298a:	bf48      	it	mi
 800298c:	b2b6      	uxthmi	r6, r6
 800298e:	e7e6      	b.n	800295e <_printf_i+0x182>
 8002990:	4615      	mov	r5, r2
 8002992:	e7bb      	b.n	800290c <_printf_i+0x130>
 8002994:	682b      	ldr	r3, [r5, #0]
 8002996:	6826      	ldr	r6, [r4, #0]
 8002998:	6961      	ldr	r1, [r4, #20]
 800299a:	1d18      	adds	r0, r3, #4
 800299c:	6028      	str	r0, [r5, #0]
 800299e:	0635      	lsls	r5, r6, #24
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	d501      	bpl.n	80029a8 <_printf_i+0x1cc>
 80029a4:	6019      	str	r1, [r3, #0]
 80029a6:	e002      	b.n	80029ae <_printf_i+0x1d2>
 80029a8:	0670      	lsls	r0, r6, #25
 80029aa:	d5fb      	bpl.n	80029a4 <_printf_i+0x1c8>
 80029ac:	8019      	strh	r1, [r3, #0]
 80029ae:	2300      	movs	r3, #0
 80029b0:	6123      	str	r3, [r4, #16]
 80029b2:	4615      	mov	r5, r2
 80029b4:	e7ba      	b.n	800292c <_printf_i+0x150>
 80029b6:	682b      	ldr	r3, [r5, #0]
 80029b8:	1d1a      	adds	r2, r3, #4
 80029ba:	602a      	str	r2, [r5, #0]
 80029bc:	681d      	ldr	r5, [r3, #0]
 80029be:	6862      	ldr	r2, [r4, #4]
 80029c0:	2100      	movs	r1, #0
 80029c2:	4628      	mov	r0, r5
 80029c4:	f7fd fc2c 	bl	8000220 <memchr>
 80029c8:	b108      	cbz	r0, 80029ce <_printf_i+0x1f2>
 80029ca:	1b40      	subs	r0, r0, r5
 80029cc:	6060      	str	r0, [r4, #4]
 80029ce:	6863      	ldr	r3, [r4, #4]
 80029d0:	6123      	str	r3, [r4, #16]
 80029d2:	2300      	movs	r3, #0
 80029d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80029d8:	e7a8      	b.n	800292c <_printf_i+0x150>
 80029da:	6923      	ldr	r3, [r4, #16]
 80029dc:	462a      	mov	r2, r5
 80029de:	4649      	mov	r1, r9
 80029e0:	4640      	mov	r0, r8
 80029e2:	47d0      	blx	sl
 80029e4:	3001      	adds	r0, #1
 80029e6:	d0ab      	beq.n	8002940 <_printf_i+0x164>
 80029e8:	6823      	ldr	r3, [r4, #0]
 80029ea:	079b      	lsls	r3, r3, #30
 80029ec:	d413      	bmi.n	8002a16 <_printf_i+0x23a>
 80029ee:	68e0      	ldr	r0, [r4, #12]
 80029f0:	9b03      	ldr	r3, [sp, #12]
 80029f2:	4298      	cmp	r0, r3
 80029f4:	bfb8      	it	lt
 80029f6:	4618      	movlt	r0, r3
 80029f8:	e7a4      	b.n	8002944 <_printf_i+0x168>
 80029fa:	2301      	movs	r3, #1
 80029fc:	4632      	mov	r2, r6
 80029fe:	4649      	mov	r1, r9
 8002a00:	4640      	mov	r0, r8
 8002a02:	47d0      	blx	sl
 8002a04:	3001      	adds	r0, #1
 8002a06:	d09b      	beq.n	8002940 <_printf_i+0x164>
 8002a08:	3501      	adds	r5, #1
 8002a0a:	68e3      	ldr	r3, [r4, #12]
 8002a0c:	9903      	ldr	r1, [sp, #12]
 8002a0e:	1a5b      	subs	r3, r3, r1
 8002a10:	42ab      	cmp	r3, r5
 8002a12:	dcf2      	bgt.n	80029fa <_printf_i+0x21e>
 8002a14:	e7eb      	b.n	80029ee <_printf_i+0x212>
 8002a16:	2500      	movs	r5, #0
 8002a18:	f104 0619 	add.w	r6, r4, #25
 8002a1c:	e7f5      	b.n	8002a0a <_printf_i+0x22e>
 8002a1e:	bf00      	nop
 8002a20:	080030e1 	stmdaeq	r0, {r0, r5, r6, r7, ip, sp}
 8002a24:	080030f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, ip, sp}

08002a28 <_sbrk_r>:
 8002a28:	b538      	push	{r3, r4, r5, lr}
 8002a2a:	4d06      	ldr	r5, [pc, #24]	; (8002a44 <_sbrk_r+0x1c>)
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	4604      	mov	r4, r0
 8002a30:	4608      	mov	r0, r1
 8002a32:	602b      	str	r3, [r5, #0]
 8002a34:	f7ff f812 	bl	8001a5c <_sbrk>
 8002a38:	1c43      	adds	r3, r0, #1
 8002a3a:	d102      	bne.n	8002a42 <_sbrk_r+0x1a>
 8002a3c:	682b      	ldr	r3, [r5, #0]
 8002a3e:	b103      	cbz	r3, 8002a42 <_sbrk_r+0x1a>
 8002a40:	6023      	str	r3, [r4, #0]
 8002a42:	bd38      	pop	{r3, r4, r5, pc}
 8002a44:	20000230 	andcs	r0, r0, r0, lsr r2

08002a48 <__sread>:
 8002a48:	b510      	push	{r4, lr}
 8002a4a:	460c      	mov	r4, r1
 8002a4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a50:	f000 f8a0 	bl	8002b94 <_read_r>
 8002a54:	2800      	cmp	r0, #0
 8002a56:	bfab      	itete	ge
 8002a58:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002a5a:	89a3      	ldrhlt	r3, [r4, #12]
 8002a5c:	181b      	addge	r3, r3, r0
 8002a5e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002a62:	bfac      	ite	ge
 8002a64:	6563      	strge	r3, [r4, #84]	; 0x54
 8002a66:	81a3      	strhlt	r3, [r4, #12]
 8002a68:	bd10      	pop	{r4, pc}

08002a6a <__swrite>:
 8002a6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a6e:	461f      	mov	r7, r3
 8002a70:	898b      	ldrh	r3, [r1, #12]
 8002a72:	05db      	lsls	r3, r3, #23
 8002a74:	4605      	mov	r5, r0
 8002a76:	460c      	mov	r4, r1
 8002a78:	4616      	mov	r6, r2
 8002a7a:	d505      	bpl.n	8002a88 <__swrite+0x1e>
 8002a7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a80:	2302      	movs	r3, #2
 8002a82:	2200      	movs	r2, #0
 8002a84:	f000 f868 	bl	8002b58 <_lseek_r>
 8002a88:	89a3      	ldrh	r3, [r4, #12]
 8002a8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002a8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002a92:	81a3      	strh	r3, [r4, #12]
 8002a94:	4632      	mov	r2, r6
 8002a96:	463b      	mov	r3, r7
 8002a98:	4628      	mov	r0, r5
 8002a9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002a9e:	f000 b817 	b.w	8002ad0 <_write_r>

08002aa2 <__sseek>:
 8002aa2:	b510      	push	{r4, lr}
 8002aa4:	460c      	mov	r4, r1
 8002aa6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002aaa:	f000 f855 	bl	8002b58 <_lseek_r>
 8002aae:	1c43      	adds	r3, r0, #1
 8002ab0:	89a3      	ldrh	r3, [r4, #12]
 8002ab2:	bf15      	itete	ne
 8002ab4:	6560      	strne	r0, [r4, #84]	; 0x54
 8002ab6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002aba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002abe:	81a3      	strheq	r3, [r4, #12]
 8002ac0:	bf18      	it	ne
 8002ac2:	81a3      	strhne	r3, [r4, #12]
 8002ac4:	bd10      	pop	{r4, pc}

08002ac6 <__sclose>:
 8002ac6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002aca:	f000 b813 	b.w	8002af4 <_close_r>
	...

08002ad0 <_write_r>:
 8002ad0:	b538      	push	{r3, r4, r5, lr}
 8002ad2:	4d07      	ldr	r5, [pc, #28]	; (8002af0 <_write_r+0x20>)
 8002ad4:	4604      	mov	r4, r0
 8002ad6:	4608      	mov	r0, r1
 8002ad8:	4611      	mov	r1, r2
 8002ada:	2200      	movs	r2, #0
 8002adc:	602a      	str	r2, [r5, #0]
 8002ade:	461a      	mov	r2, r3
 8002ae0:	f7fe fff0 	bl	8001ac4 <_write>
 8002ae4:	1c43      	adds	r3, r0, #1
 8002ae6:	d102      	bne.n	8002aee <_write_r+0x1e>
 8002ae8:	682b      	ldr	r3, [r5, #0]
 8002aea:	b103      	cbz	r3, 8002aee <_write_r+0x1e>
 8002aec:	6023      	str	r3, [r4, #0]
 8002aee:	bd38      	pop	{r3, r4, r5, pc}
 8002af0:	20000230 	andcs	r0, r0, r0, lsr r2

08002af4 <_close_r>:
 8002af4:	b538      	push	{r3, r4, r5, lr}
 8002af6:	4d06      	ldr	r5, [pc, #24]	; (8002b10 <_close_r+0x1c>)
 8002af8:	2300      	movs	r3, #0
 8002afa:	4604      	mov	r4, r0
 8002afc:	4608      	mov	r0, r1
 8002afe:	602b      	str	r3, [r5, #0]
 8002b00:	f7fe ffee 	bl	8001ae0 <_close>
 8002b04:	1c43      	adds	r3, r0, #1
 8002b06:	d102      	bne.n	8002b0e <_close_r+0x1a>
 8002b08:	682b      	ldr	r3, [r5, #0]
 8002b0a:	b103      	cbz	r3, 8002b0e <_close_r+0x1a>
 8002b0c:	6023      	str	r3, [r4, #0]
 8002b0e:	bd38      	pop	{r3, r4, r5, pc}
 8002b10:	20000230 	andcs	r0, r0, r0, lsr r2

08002b14 <_fstat_r>:
 8002b14:	b538      	push	{r3, r4, r5, lr}
 8002b16:	4d07      	ldr	r5, [pc, #28]	; (8002b34 <_fstat_r+0x20>)
 8002b18:	2300      	movs	r3, #0
 8002b1a:	4604      	mov	r4, r0
 8002b1c:	4608      	mov	r0, r1
 8002b1e:	4611      	mov	r1, r2
 8002b20:	602b      	str	r3, [r5, #0]
 8002b22:	f7fe ffe0 	bl	8001ae6 <_fstat>
 8002b26:	1c43      	adds	r3, r0, #1
 8002b28:	d102      	bne.n	8002b30 <_fstat_r+0x1c>
 8002b2a:	682b      	ldr	r3, [r5, #0]
 8002b2c:	b103      	cbz	r3, 8002b30 <_fstat_r+0x1c>
 8002b2e:	6023      	str	r3, [r4, #0]
 8002b30:	bd38      	pop	{r3, r4, r5, pc}
 8002b32:	bf00      	nop
 8002b34:	20000230 	andcs	r0, r0, r0, lsr r2

08002b38 <_isatty_r>:
 8002b38:	b538      	push	{r3, r4, r5, lr}
 8002b3a:	4d06      	ldr	r5, [pc, #24]	; (8002b54 <_isatty_r+0x1c>)
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	4604      	mov	r4, r0
 8002b40:	4608      	mov	r0, r1
 8002b42:	602b      	str	r3, [r5, #0]
 8002b44:	f7fe ffd4 	bl	8001af0 <_isatty>
 8002b48:	1c43      	adds	r3, r0, #1
 8002b4a:	d102      	bne.n	8002b52 <_isatty_r+0x1a>
 8002b4c:	682b      	ldr	r3, [r5, #0]
 8002b4e:	b103      	cbz	r3, 8002b52 <_isatty_r+0x1a>
 8002b50:	6023      	str	r3, [r4, #0]
 8002b52:	bd38      	pop	{r3, r4, r5, pc}
 8002b54:	20000230 	andcs	r0, r0, r0, lsr r2

08002b58 <_lseek_r>:
 8002b58:	b538      	push	{r3, r4, r5, lr}
 8002b5a:	4d07      	ldr	r5, [pc, #28]	; (8002b78 <_lseek_r+0x20>)
 8002b5c:	4604      	mov	r4, r0
 8002b5e:	4608      	mov	r0, r1
 8002b60:	4611      	mov	r1, r2
 8002b62:	2200      	movs	r2, #0
 8002b64:	602a      	str	r2, [r5, #0]
 8002b66:	461a      	mov	r2, r3
 8002b68:	f7fe ffc4 	bl	8001af4 <_lseek>
 8002b6c:	1c43      	adds	r3, r0, #1
 8002b6e:	d102      	bne.n	8002b76 <_lseek_r+0x1e>
 8002b70:	682b      	ldr	r3, [r5, #0]
 8002b72:	b103      	cbz	r3, 8002b76 <_lseek_r+0x1e>
 8002b74:	6023      	str	r3, [r4, #0]
 8002b76:	bd38      	pop	{r3, r4, r5, pc}
 8002b78:	20000230 	andcs	r0, r0, r0, lsr r2

08002b7c <__malloc_lock>:
 8002b7c:	4801      	ldr	r0, [pc, #4]	; (8002b84 <__malloc_lock+0x8>)
 8002b7e:	f7ff bb1d 	b.w	80021bc <__retarget_lock_acquire_recursive>
 8002b82:	bf00      	nop
 8002b84:	20000224 	andcs	r0, r0, r4, lsr #4

08002b88 <__malloc_unlock>:
 8002b88:	4801      	ldr	r0, [pc, #4]	; (8002b90 <__malloc_unlock+0x8>)
 8002b8a:	f7ff bb18 	b.w	80021be <__retarget_lock_release_recursive>
 8002b8e:	bf00      	nop
 8002b90:	20000224 	andcs	r0, r0, r4, lsr #4

08002b94 <_read_r>:
 8002b94:	b538      	push	{r3, r4, r5, lr}
 8002b96:	4d07      	ldr	r5, [pc, #28]	; (8002bb4 <_read_r+0x20>)
 8002b98:	4604      	mov	r4, r0
 8002b9a:	4608      	mov	r0, r1
 8002b9c:	4611      	mov	r1, r2
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	602a      	str	r2, [r5, #0]
 8002ba2:	461a      	mov	r2, r3
 8002ba4:	f7fe ff7e 	bl	8001aa4 <_read>
 8002ba8:	1c43      	adds	r3, r0, #1
 8002baa:	d102      	bne.n	8002bb2 <_read_r+0x1e>
 8002bac:	682b      	ldr	r3, [r5, #0]
 8002bae:	b103      	cbz	r3, 8002bb2 <_read_r+0x1e>
 8002bb0:	6023      	str	r3, [r4, #0]
 8002bb2:	bd38      	pop	{r3, r4, r5, pc}
 8002bb4:	20000230 	andcs	r0, r0, r0, lsr r2

08002bb8 <_init>:
 8002bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bba:	bf00      	nop
 8002bbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bbe:	bc08      	pop	{r3}
 8002bc0:	469e      	mov	lr, r3
 8002bc2:	4770      	bx	lr

08002bc4 <_fini>:
 8002bc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bc6:	bf00      	nop
 8002bc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bca:	bc08      	pop	{r3}
 8002bcc:	469e      	mov	lr, r3
 8002bce:	4770      	bx	lr

Disassembly of section .rodata:

08002bd0 <__func__.0-0x3c>:
 8002bd0:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 8002bd4:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
 8002bd8:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
 8002bdc:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8002be0:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
 8002be4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002be8:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002bec:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8002bf0:	20736920 	rsbscs	r6, r3, r0, lsr #18
 8002bf4:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
 8002bf8:	0000000a 	andeq	r0, r0, sl
 8002bfc:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 8002c00:	6571206f 	ldrbvs	r2, [r1, #-111]!	; 0xffffff91
 8002c04:	0d2e756d 	cfstr32eq	mvfx7, [lr, #-436]!	; 0xfffffe4c
 8002c08:	00000000 	andeq	r0, r0, r0

08002c0c <__func__.0>:
 8002c0c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c10:	00000035 	andeq	r0, r0, r5, lsr r0

08002c14 <__func__.1>:
 8002c14:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c18:	00000034 	andeq	r0, r0, r4, lsr r0

08002c1c <__func__.2>:
 8002c1c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c20:	00000033 	andeq	r0, r0, r3, lsr r0

08002c24 <__func__.3>:
 8002c24:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c28:	00000032 	andeq	r0, r0, r2, lsr r0

08002c2c <__func__.4>:
 8002c2c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c30:	00000031 	andeq	r0, r0, r1, lsr r0

08002c34 <__func__.5>:
 8002c34:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c38:	00000030 	andeq	r0, r0, r0, lsr r0

08002c3c <__func__.0>:
 8002c3c:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
 8002c40:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
 8002c44:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8002c48:	00000064 	andeq	r0, r0, r4, rrx

08002c4c <__func__.1>:
 8002c4c:	6f727245 	svcvs	0x00727245
 8002c50:	61485f72 	hvcvs	34290	; 0x85f2
 8002c54:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c58:	00000072 	andeq	r0, r0, r2, ror r0

08002c5c <__func__.2>:
 8002c5c:	67617355 			; <UNDEFINED> instruction: 0x67617355
 8002c60:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
 8002c64:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8002c68:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 8002c6c:	00007265 	andeq	r7, r0, r5, ror #4

08002c70 <__func__.3>:
 8002c70:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 8002c74:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 8002c78:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 8002c7c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 8002c80:	00000000 	andeq	r0, r0, r0

08002c84 <__func__.4>:
 8002c84:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
 8002c88:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 8002c8c:	61485f65 	cmpvs	r8, r5, ror #30
 8002c90:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c94:	00000072 	andeq	r0, r0, r2, ror r0

08002c98 <__func__.6>:
 8002c98:	5f494d4e 	svcpl	0x00494d4e
 8002c9c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 8002ca0:	0072656c 	rsbseq	r6, r2, ip, ror #10
 8002ca4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002cac <__func__.6+0x14>
 8002ca8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002cac:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002cb0:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cb4:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cb8:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002cbc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002cc0:	2f726576 	svccs	0x00726576
 8002cc4:	2f637253 	svccs	0x00637253
 8002cc8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002ccc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002cd0:	61685f78 	smcvs	34296	; 0x85f8
 8002cd4:	61755f6c 	cmnvs	r5, ip, ror #30
 8002cd8:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 8002cdc:	00000000 	andeq	r0, r0, r0
 8002ce0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002ce8 <__func__.6+0x50>
 8002ce4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002ce8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002cec:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cf0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cf4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002cf8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002cfc:	2f726576 	svccs	0x00726576
 8002d00:	2f637253 	svccs	0x00637253
 8002d04:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d08:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d0c:	61685f78 	smcvs	34296	; 0x85f8
 8002d10:	70675f6c 	rsbvc	r5, r7, ip, ror #30
 8002d14:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 8002d18:	00000000 	andeq	r0, r0, r0
 8002d1c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002d24 <__func__.6+0x8c>
 8002d20:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002d24:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002d28:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002d2c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002d30:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002d34:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002d38:	2f726576 	svccs	0x00726576
 8002d3c:	2f637253 	svccs	0x00637253
 8002d40:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d44:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d48:	61685f78 	smcvs	34296	; 0x85f8
 8002d4c:	6f635f6c 	svcvs	0x00635f6c
 8002d50:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 8002d54:	0000632e 	andeq	r6, r0, lr, lsr #6

08002d58 <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 8002d58:	00000000 	andeq	r0, r0, r0
 8002d5c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8002d60:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
 8002d64:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
 8002d68:	3a4e5255 	bcc	93976c4 <_siccmram+0x1394540>
 8002d6c:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8002d70:	20583830 	subscs	r3, r8, r0, lsr r8
 8002d74:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002d78:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002d7c:	61745320 	cmnvs	r4, r0, lsr #6
 8002d80:	5b3a6b63 	blpl	8e9db14 <_siccmram+0xe9a990>
 8002d84:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002d88:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002d8c:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002d90:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002d94:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002d98:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002d9c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002da0:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
 8002da4:	5b3a2074 	blpl	8e8af7c <_siccmram+0xe87df8>
 8002da8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002dac:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002db0:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002db4:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002db8:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002dbc:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002dc0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002dc4:	61745320 	cmnvs	r4, r0, lsr #6
 8002dc8:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
 8002dcc:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
 8002dd0:	6f442068 	svcvs	0x00442068
 8002dd4:	61776e77 	cmnvs	r7, r7, ror lr
 8002dd8:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
 8002ddc:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002de0:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
 8002de4:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 8002de8:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
 8002dec:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
 8002df0:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8002df4:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
 8002df8:	20706d75 	rsbscs	r6, r0, r5, ror sp
 8002dfc:	0000000d 	andeq	r0, r0, sp
 8002e00:	61745320 	cmnvs	r4, r0, lsr #6
 8002e04:	46206b63 	strtmi	r6, [r0], -r3, ror #22
 8002e08:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8002e0c:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
 8002e10:	00000000 	andeq	r0, r0, r0
 8002e14:	20305220 	eorscs	r5, r0, r0, lsr #4
 8002e18:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e1c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e24:	0000000a 	andeq	r0, r0, sl
 8002e28:	20315220 	eorscs	r5, r1, r0, lsr #4
 8002e2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e30:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e38:	0000000a 	andeq	r0, r0, sl
 8002e3c:	20325220 	eorscs	r5, r2, r0, lsr #4
 8002e40:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e44:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e4c:	0000000a 	andeq	r0, r0, sl
 8002e50:	20335220 	eorscs	r5, r3, r0, lsr #4
 8002e54:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e58:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e60:	0000000a 	andeq	r0, r0, sl
 8002e64:	20345220 	eorscs	r5, r4, r0, lsr #4
 8002e68:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e6c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e74:	0000000a 	andeq	r0, r0, sl
 8002e78:	20355220 	eorscs	r5, r5, r0, lsr #4
 8002e7c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e80:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e84:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e88:	0000000a 	andeq	r0, r0, sl
 8002e8c:	20365220 	eorscs	r5, r6, r0, lsr #4
 8002e90:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e94:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e98:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e9c:	0000000a 	andeq	r0, r0, sl
 8002ea0:	20375220 	eorscs	r5, r7, r0, lsr #4
 8002ea4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ea8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002eac:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002eb0:	0000000a 	andeq	r0, r0, sl
 8002eb4:	20385220 	eorscs	r5, r8, r0, lsr #4
 8002eb8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ebc:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ec0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ec4:	0000000a 	andeq	r0, r0, sl
 8002ec8:	20395220 	eorscs	r5, r9, r0, lsr #4
 8002ecc:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ed0:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ed4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ed8:	0000000a 	andeq	r0, r0, sl
 8002edc:	30315220 	eorscc	r5, r1, r0, lsr #4
 8002ee0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ee4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ee8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002eec:	0000000a 	andeq	r0, r0, sl
 8002ef0:	31315220 	teqcc	r1, r0, lsr #4
 8002ef4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ef8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002efc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f00:	0000000a 	andeq	r0, r0, sl
 8002f04:	32315220 	eorscc	r5, r1, #32, 4
 8002f08:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f0c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f10:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f14:	0000000a 	andeq	r0, r0, sl
 8002f18:	20524c20 	subscs	r4, r2, r0, lsr #24
 8002f1c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f20:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f24:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f28:	0000000a 	andeq	r0, r0, sl
 8002f2c:	20435020 	subcs	r5, r3, r0, lsr #32
 8002f30:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f34:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f38:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f3c:	0000000a 	andeq	r0, r0, sl
 8002f40:	52535020 	subspl	r5, r3, #32
 8002f44:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f48:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f4c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f50:	0000000a 	andeq	r0, r0, sl
 8002f54:	61745320 	cmnvs	r4, r0, lsr #6
 8002f58:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
 8002f5c:	3a6c6c61 	bcc	9b1e0e8 <_siccmram+0x1b1af64>
 8002f60:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f64:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002f68:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f6c:	00000d20 	andeq	r0, r0, r0, lsr #26
 8002f70:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002f74:	65522032 	ldrbvs	r2, [r2, #-50]	; 0xffffffce
 8002f78:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002f7c:	61745320 	cmnvs	r4, r0, lsr #6
 8002f80:	53206b63 			; <UNDEFINED> instruction: 0x53206b63
 8002f84:	63656c65 	cmnvs	r5, #25856	; 0x6500
 8002f88:	00203a74 	eoreq	r3, r0, r4, ror sl
 8002f8c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002f90:	50535020 	subspl	r5, r3, r0, lsr #32
 8002f94:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f98:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f9c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fa0:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002fa4:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fa8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fac:	50534d20 	subspl	r4, r3, r0, lsr #26
 8002fb0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fbc:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002fc0:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fc4:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002fc8:	65522033 	ldrbvs	r2, [r2, #-51]	; 0xffffffcd
 8002fcc:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002fd0:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8002fd8 <APBPrescTable+0x280>
 8002fd4:	65532065 	ldrbvs	r2, [r3, #-101]	; 0xffffff9b
 8002fd8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 8002fdc:	0020203a 	eoreq	r2, r0, sl, lsr r0
 8002fe0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fe4:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
 8002fe8:	20646165 	rsbcs	r6, r4, r5, ror #2
 8002fec:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8002ff0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002ff4:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002ff8:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002ffc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003000:	6f725020 	svcvs	0x00725020
 8003004:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
 8003008:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8003010 <APBPrescTable+0x2b8>
 800300c:	20202065 	eorcs	r2, r0, r5, rrx
 8003010:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003014:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003018:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 800301c:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
 8003020:	206b6361 	rsbcs	r6, fp, r1, ror #6
 8003024:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
 8003028:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
 800302c:	203a6570 	eorscs	r6, sl, r0, ror r5
 8003030:	00202020 	eoreq	r2, r0, r0, lsr #32
 8003034:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003038:	57203820 	strpl	r3, [r0, -r0, lsr #16]!
 800303c:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
 8003040:	61724620 	cmnvs	r2, r0, lsr #12
 8003044:	2020656d 	eorcs	r6, r0, sp, ror #10
 8003048:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 800304c:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003050:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003054:	20363220 	eorscs	r3, r6, r0, lsr #4
 8003058:	6c726f57 	ldclvs	15, cr6, [r2], #-348	; 0xfffffea4
 800305c:	72462064 	subvc	r2, r6, #100	; 0x64
 8003060:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8003064:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003068:	00000d2e 	andeq	r0, r0, lr, lsr #26

0800306c <_global_impure_ptr>:
 800306c:	20000010 	andcs	r0, r0, r0, lsl r0

08003070 <__sf_fake_stderr>:
	...

08003090 <__sf_fake_stdin>:
	...

080030b0 <__sf_fake_stdout>:
	...
 80030d0:	2b302d23 	blcs	8c0e564 <_siccmram+0xc0b3e0>
 80030d4:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
 80030d8:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
 80030dc:	47464567 	strbmi	r4, [r6, -r7, ror #10]
 80030e0:	32313000 	eorscc	r3, r1, #0
 80030e4:	36353433 			; <UNDEFINED> instruction: 0x36353433
 80030e8:	41393837 	teqmi	r9, r7, lsr r8
 80030ec:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 80030f0:	31300046 	teqcc	r0, r6, asr #32
 80030f4:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 80030f8:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 80030fc:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8003100:	00006665 	andeq	r6, r0, r5, ror #12

Disassembly of section .ARM:

08003104 <__exidx_start>:
 8003104:	7fffd1ec 	svcvc	0x00ffd1ec
 8003108:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

0800310c <__frame_dummy_init_array_entry>:
 800310c:	080001b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8}

Disassembly of section .fini_array:

08003110 <__do_global_dtors_aux_fini_array_entry>:
 8003110:	08000191 	stmdaeq	r0, {r0, r4, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <_impure_ptr>:
2000000c:	20000010 	andcs	r0, r0, r0, lsl r0

20000010 <impure_data>:
20000010:	00000000 	andeq	r0, r0, r0
20000014:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
20000018:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
2000001c:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}
	...

Disassembly of section .bss:

20000070 <__bss_start__>:
20000070:	00000000 	andeq	r0, r0, r0

20000074 <object.0>:
	...

2000008c <huart1>:
	...

200000d4 <uwTick>:
__IO uint32_t uwTick;
200000d4:	00000000 	andeq	r0, r0, r0

200000d8 <buffer.0>:
	...

200001d8 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
200001d8:	00000000 	andeq	r0, r0, r0

200001dc <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
200001dc:	00000000 	andeq	r0, r0, r0

200001e0 <frame.1>:
	...

20000220 <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
20000220:	00000000 	andeq	r0, r0, r0

20000224 <__lock___malloc_recursive_mutex>:
	...

20000225 <__lock___sfp_recursive_mutex>:
	...

20000226 <__lock___sinit_recursive_mutex>:
	...

20000228 <__malloc_free_list>:
20000228:	00000000 	andeq	r0, r0, r0

2000022c <__malloc_sbrk_start>:
2000022c:	00000000 	andeq	r0, r0, r0

20000230 <errno>:
20000230:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

20000234 <_end-0x4>:
20000234:	00000000 	andeq	r0, r0, r0

20000238 <_end>:
	...

20000a38 <_sstack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   0:	00002f41 	andeq	r2, r0, r1, asr #30
   4:	61656100 	cmnvs	r5, r0, lsl #2
int _execve(char *name, char **argv, char **env)
{
  (void)name;
  (void)argv;
  (void)env;
  errno = ENOMEM;
   8:	01006962 	tsteq	r0, r2, ror #18
  return -1;
}
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  while (1)
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc

    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6

    /* USART1 interrupt Deinit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }
}
  28:	011b011a 	tsteq	fp, sl, lsl r1
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000110f 	andeq	r1, r0, pc, lsl #2
       4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000588 	andeq	r0, r0, r8, lsl #11
      10:	0003560c 	andeq	r5, r3, ip, lsl #12
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00089500 	andeq	r9, r8, r0, lsl #10
	...
}
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000576 	andeq	r0, r0, r6, ror r5
      30:	00006603 	andeq	r6, r0, r3, lsl #12
    if (status != HAL_OK)
      34:	182b0200 	stmdane	fp!, {r9}
      uwTickFreq = prevTickFreq;
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
      40:	02000005 	andeq	r0, r0, #5
      44:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      
      if (pllsource != 0)
      48:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
      4c:	02000006 	andeq	r0, r0, #6
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00561939 	subseq	r1, r6, r9, lsr r9
      54:	02020000 	andeq	r0, r2, #0
      58:	00078f07 	andeq	r8, r7, r7, lsl #30
      5c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000002ec 	andeq	r0, r0, ip, ror #5
      64:	0002c203 	andeq	ip, r2, r3, lsl #4
      68:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      SystemCoreClock = pllvco/pllp;
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	b3070402 	movwlt	r0, #29698	; 0x7402
      break;
      74:	02000000 	andeq	r0, r0, #0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
      7c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      80:	0000ae07 	andeq	sl, r0, r7, lsl #28
      84:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      88:	00746e69 	rsbseq	r6, r4, r9, ror #28
      8c:	00008505 	andeq	r8, r0, r5, lsl #10
      90:	07040200 	streq	r0, [r4, -r0, lsl #4]
      94:	000000b8 	strheq	r0, [r0], -r8
      98:	00006803 	andeq	r6, r0, r3, lsl #16
      9c:	13180300 	tstne	r8, #0, 6
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
        Error_Handler();
    }
}
      a0:	00000030 	andeq	r0, r0, r0, lsr r0
      a4:	00009805 	andeq	r9, r0, r5, lsl #16
      a8:	00980600 	addseq	r0, r8, r0, lsl #12
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
      b0:	03000006 	movweq	r0, #6
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	004a1424 	subeq	r1, sl, r4, lsr #8
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	ae050000 	cdpge	0, 0, cr0, cr5, cr0, {0}
      bc:	03000000 	movweq	r0, #0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	000002c4 	andeq	r0, r0, r4, asr #5
      c4:	64143003 	ldrvs	r3, [r4], #-3
      c8:	05000000 	streq	r0, [r0, #-0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d0:	0000cb06 	andeq	ip, r0, r6, lsl #22
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	048c0700 	streq	r0, [ip], #1792	; 0x700
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	310901bd 			; <UNDEFINED> instruction: 0x310901bd
      dc:	08000002 	stmdaeq	r0, {r1}
      e0:	00000101 	andeq	r0, r0, r1, lsl #2
    if (huart->hdmarx != NULL)
      e4:	1201bf04 	andne	fp, r1, #4, 30
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
      f0:	0000038c 	andeq	r0, r0, ip, lsl #7
    huart->TxXferCount = 0x00U;
      f4:	1201c004 	andne	ip, r1, #4
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	000000cb 	andeq	r0, r0, fp, asr #1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000351 	andeq	r0, r0, r1, asr r3
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	1201c104 	andne	ip, r1, #4, 2
    HAL_UART_AbortCpltCallback(huart);
     108:	000000cb 	andeq	r0, r0, fp, asr #1
     10c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
  uint32_t AbortCplt = 0x01U;
     110:	000003a5 	andeq	r0, r0, r5, lsr #7
  if (AbortCplt == 0x01U)
     114:	1201c204 	andne	ip, r1, #4, 4	; 0x40000000
}
     118:	000000cb 	andeq	r0, r0, fp, asr #1
     11c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     120:	00524353 	subseq	r4, r2, r3, asr r3
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
     124:	1201c304 	andne	ip, r1, #4, 6	; 0x10000000
    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	000000cb 	andeq	r0, r0, fp, asr #1
     12c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     130:	00524343 	subseq	r4, r2, r3, asr #6
     134:	1201c404 	andne	ip, r1, #4, 8	; 0x4000000
     138:	000000cb 	andeq	r0, r0, fp, asr #1
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     140:	00504853 	subseq	r4, r0, r3, asr r8
     144:	1201c504 	andne	ip, r1, #4, 10	; 0x1000000
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00000241 	andeq	r0, r0, r1, asr #4
     14c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00000582 	andeq	r0, r0, r2, lsl #11
     154:	1201c604 	andne	ip, r1, #4, 12	; 0x400000
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	000000cb 	andeq	r0, r0, fp, asr #1
     15c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	0000048c 	andeq	r0, r0, ip, lsl #9
     164:	1201c704 	andne	ip, r1, #4, 14	; 0x100000
     168:	000000cb 	andeq	r0, r0, fp, asr #1
     16c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     170:	000008fa 	strdeq	r0, [r0], -sl

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    }
  }
}
     174:	1201c804 	andne	ip, r1, #4, 16	; 0x40000
     178:	000000cb 	andeq	r0, r0, fp, asr #1
     17c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     180:	000003ab 	andeq	r0, r0, fp, lsr #7
}
     184:	1201c904 	andne	ip, r1, #4, 18	; 0x10000
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	000000cb 	andeq	r0, r0, fp, asr #1
     18c:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	000003c9 	andeq	r0, r0, r9, asr #7
     194:	1201ca04 	andne	ip, r1, #4, 20	; 0x4000
     198:	000000cb 	andeq	r0, r0, fp, asr #1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     1a0:	0000029c 	muleq	r0, ip, r2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	1201cb04 	andne	ip, r1, #4, 22	; 0x1000
     1a8:	000000cb 	andeq	r0, r0, fp, asr #1
     1ac:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	0000076f 	andeq	r0, r0, pc, ror #14
     1b4:	1201cc04 	andne	ip, r1, #4, 24	; 0x400
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000000cb 	andeq	r0, r0, fp, asr #1
     1bc:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1c0:	00524650 	subseq	r4, r2, r0, asr r6
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	1201cd04 	andne	ip, r1, #4, 26	; 0x100
     1c8:	0000025b 	andeq	r0, r0, fp, asr r2
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1d0:	00524644 	subseq	r4, r2, r4, asr #12
     1d4:	1201ce04 	andne	ip, r1, #4, 28	; 0x40
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     1dc:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00524441 	subseq	r4, r2, r1, asr #8
     1e4:	1201cf04 	andne	ip, r1, #4, 30
     1e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     1f0:	000003f8 	strdeq	r0, [r0], -r8
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	1201d004 	andne	sp, r1, #4
     1f8:	00000275 	andeq	r0, r0, r5, ror r2
     1fc:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0000014e 	andeq	r0, r0, lr, asr #2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	1201d104 	andne	sp, r1, #4, 2
     208:	0000028f 	andeq	r0, r0, pc, lsl #5
     20c:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0000050f 	andeq	r0, r0, pc, lsl #10
     214:	1201d204 	andne	sp, r1, #4, 4	; 0x40000000
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000294 	muleq	r0, r4, r2
     21c:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000509 	andeq	r0, r0, r9, lsl #10
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	1201d304 	andne	sp, r1, #4, 6	; 0x10000000
     228:	000000cb 	andeq	r0, r0, fp, asr #1
  tmp = hdma->Instance->FCR;
     22c:	01882303 	orreq	r2, r8, r3, lsl #6
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00a40a00 	adceq	r0, r4, r0, lsl #20
  tmp |= hdma->Init.FIFOMode;
     234:	02410000 	subeq	r0, r1, #0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	910b0000 	mrsls	r0, (UNDEF: 11)
    tmp |= hdma->Init.FIFOThreshold;
     23c:	0b000000 	bleq	244 <_Min_Heap_Size-0x5bc>
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	02310500 	eorseq	r0, r1, #0, 10
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	d00a0000 	andle	r0, sl, r0
     248:	56000000 	strpl	r0, [r0], -r0
  hdma->Instance->FCR = tmp;
     24c:	0b000002 	bleq	25c <_Min_Heap_Size-0x5a4>
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000091 	muleq	r0, r1, r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	46060001 	strmi	r0, [r6], -r1
     258:	05000002 	streq	r0, [r0, #-2]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000256 	andeq	r0, r0, r6, asr r2
  hdma->State = HAL_DMA_STATE_READY;
     260:	0000d00a 	andeq	sp, r0, sl
     264:	00027000 	andeq	r7, r2, r0
  return HAL_OK;
     268:	00910b00 	addseq	r0, r1, r0, lsl #22
     26c:	00030000 	andeq	r0, r3, r0
     270:	00026006 	andeq	r6, r2, r6
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	02700500 	rsbseq	r0, r0, #0, 10
     278:	d00a0000 	andle	r0, sl, r0
     27c:	8a000000 	bhi	284 <_Min_Heap_Size-0x57c>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0b000002 	bleq	290 <_Min_Heap_Size-0x570>
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000091 	muleq	r0, r1, r0
        return HAL_ERROR; 
     288:	7a060004 	bvc	1802a0 <_Min_Heap_Size+0x17faa0>
    return HAL_ERROR;
     28c:	05000002 	streq	r0, [r0, #-2]
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	0000028a 	andeq	r0, r0, sl, lsl #5
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0000bf0a 	andeq	fp, r0, sl, lsl #30
     298:	0002a400 	andeq	sl, r2, r0, lsl #8
      tickstart = HAL_GetTick();
     29c:	00910b00 	addseq	r0, r1, r0, lsl #22
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00040000 	andeq	r0, r4, r0
     2a4:	0002d70c 	andeq	sp, r2, ip, lsl #14
     2a8:	01d40400 	bicseq	r0, r4, r0, lsl #8
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0000d503 	andeq	sp, r0, r3, lsl #10
     2b0:	00bf0a00 	adcseq	r0, pc, r0, lsl #20
     2b4:	02c10000 	sbceq	r0, r1, #0
          return HAL_TIMEOUT;
     2b8:	910b0000 	mrsls	r0, (UNDEF: 11)
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	01000000 	mrseq	r0, (UNDEF: 0)
     2c0:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
     2c4:	2b090144 	blcs	2407dc <_Min_Heap_Size+0x23ffdc>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	09000003 	stmdbeq	r0, {r0, r1}
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     2d0:	cb110146 	blgt	4407f0 <_Min_Heap_Size+0x43fff0>
     2d4:	02000000 	andeq	r0, r0, #0
      tickstart = HAL_GetTick();
     2d8:	55080023 	strpl	r0, [r8, #-35]	; 0xffffffdd
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	05000007 	streq	r0, [r0, #-7]
     2e0:	cb110147 	blgt	440804 <_Min_Heap_Size+0x440004>
     2e4:	02000000 	andeq	r0, r0, #0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	50090423 	andpl	r0, r9, r3, lsr #8
     2ec:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
          return HAL_TIMEOUT;
     2f0:	cb110148 	blgt	440818 <_Min_Heap_Size+0x440018>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	02000000 	andeq	r0, r0, #0
     2f8:	42080823 	andmi	r0, r8, #2293760	; 0x230000
     2fc:	05000000 	streq	r0, [r0, #-0]
     300:	cb110149 	blgt	44082c <_Min_Heap_Size+0x44002c>
     304:	02000000 	andeq	r0, r0, #0
     308:	ae080c23 	cdpge	12, 0, cr0, cr8, cr3, {1}
     30c:	05000007 	streq	r0, [r0, #-7]
     310:	cb11014a 	blgt	440840 <_Min_Heap_Size+0x440040>
      tickstart = HAL_GetTick();
     314:	02000000 	andeq	r0, r0, #0
     318:	46091023 	strmi	r1, [r9], -r3, lsr #32
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     320:	cb11014b 	blgt	440854 <_Min_Heap_Size+0x440054>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	02000000 	andeq	r0, r0, #0
     328:	0c001423 	cfstrseq	mvf1, [r0], {35}	; 0x23
     32c:	00000774 	andeq	r0, r0, r4, ror r7
     330:	03014c05 	movweq	r4, #7173	; 0x1c05
          return HAL_TIMEOUT;
     334:	000002c1 	andeq	r0, r0, r1, asr #5
    if(pwrclkchanged == SET)
     338:	ea050807 	b	14235c <_Min_Heap_Size+0x141b5c>
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	03620901 	cmneq	r2, #16384	; 0x4000
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	43090000 	movwmi	r0, #36864	; 0x9000
     344:	ec050052 	stc	0, cr0, [r5], {82}	; 0x52
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00cb1101 	sbceq	r1, fp, r1, lsl #2
     34c:	23020000 	movwcs	r0, #8192	; 0x2000
     350:	53430900 	movtpl	r0, #14592	; 0x3900
     354:	ed050052 	stc	0, cr0, [r5, #-328]	; 0xfffffeb8
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00cb1101 	sbceq	r1, fp, r1, lsl #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	23020000 	movwcs	r0, #8192	; 0x2000
     360:	aa0c0004 	bge	300378 <_Min_Heap_Size+0x2ffb78>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	05000001 	streq	r0, [r0, #-1]
     368:	380301ee 	stmdacc	r3, {r1, r2, r3, r5, r6, r7, r8}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	07000003 	streq	r0, [r0, -r3]
     370:	01f40588 	mvnseq	r0, r8, lsl #11
     374:	00055b09 	andeq	r5, r5, r9, lsl #22
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	52430900 	subpl	r0, r3, #0, 18
     37c:	01f60500 	mvnseq	r0, r0, lsl #10
     380:	0000cb11 	andeq	ip, r0, r1, lsl fp
     384:	00230200 	eoreq	r0, r3, r0, lsl #4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00028208 	andeq	r8, r2, r8, lsl #4
     38c:	01f70500 	mvnseq	r0, r0, lsl #10
        __HAL_RCC_PLL_DISABLE();
     390:	0000cb11 	andeq	ip, r0, r1, lsl fp
     394:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
        tickstart = HAL_GetTick();
     398:	00028508 	andeq	r8, r2, r8, lsl #10
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	01f80500 	mvnseq	r0, r0, lsl #10
     3a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3a4:	08230200 	stmdaeq	r3!, {r9}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
     3ac:	01f90500 	mvnseq	r0, r0, lsl #10
            return HAL_TIMEOUT;
     3b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3b8:	00016608 	andeq	r6, r1, r8, lsl #12
     3bc:	01fa0500 	mvnseq	r0, r0, lsl #10
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3c4:	10230200 	eorne	r0, r3, r0, lsl #4
     3c8:	00071708 	andeq	r1, r7, r8, lsl #14
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	01fb0500 	mvnseq	r0, r0, lsl #10
     3d0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3d4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00067c08 	andeq	r7, r6, r8, lsl #24
     3dc:	01fc0500 	mvnseq	r0, r0, lsl #10
     3e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	18230200 	stmdane	r3!, {r9}
     3e8:	00050f08 	andeq	r0, r5, r8, lsl #30
     3ec:	01fd0500 	mvnseq	r0, r0, lsl #10
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0000bf11 	andeq	fp, r0, r1, lsl pc
     3f4:	1c230200 	sfmne	f0, 4, [r3], #-0
     3f8:	0004fa08 	andeq	pc, r4, r8, lsl #20
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01fe0500 	mvnseq	r0, r0, lsl #10
     400:	0000cb11 	andeq	ip, r0, r1, lsl fp
     404:	20230200 	eorcs	r0, r3, r0, lsl #4
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0001f908 	andeq	pc, r1, r8, lsl #18
     40c:	01ff0500 	mvnseq	r0, r0, lsl #10
     410:	0000cb11 	andeq	ip, r0, r1, lsl fp
     414:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     418:	00051908 	andeq	r1, r5, r8, lsl #18
     41c:	02000500 	andeq	r0, r0, #0, 10
     420:	0002b111 	andeq	fp, r2, r1, lsl r1
     424:	28230200 	stmdacs	r3!, {r9}
        __HAL_RCC_PLL_ENABLE();
     428:	00088108 	andeq	r8, r8, r8, lsl #2
     42c:	02010500 	andeq	r0, r1, #0, 10
        tickstart = HAL_GetTick();
     430:	0000cb11 	andeq	ip, r0, r1, lsl fp
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	30230200 	eorcc	r0, r3, r0, lsl #4
     438:	00078708 	andeq	r8, r7, r8, lsl #14
     43c:	02020500 	andeq	r0, r2, #0, 10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0000cb11 	andeq	ip, r0, r1, lsl fp
     444:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
            return HAL_TIMEOUT;
     448:	00049c08 	andeq	r9, r4, r8, lsl #24
  return HAL_OK;
     44c:	02030500 	andeq	r0, r3, #0, 10
        __HAL_RCC_PLL_DISABLE();
     450:	0000cb11 	andeq	ip, r0, r1, lsl fp
     454:	38230200 	stmdacc	r3!, {r9}
        tickstart = HAL_GetTick();
     458:	00052308 	andeq	r2, r5, r8, lsl #6
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	02040500 	andeq	r0, r4, #0, 10
     460:	0000bf11 	andeq	fp, r0, r1, lsl pc
     464:	3c230200 	sfmcc	f0, 4, [r3], #-0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0006b708 	andeq	fp, r6, r8, lsl #14
     46c:	02050500 	andeq	r0, r5, #0, 10
            return HAL_TIMEOUT;
     470:	0000cb11 	andeq	ip, r0, r1, lsl fp
  return HAL_OK;
     474:	40230200 	eormi	r0, r3, r0, lsl #4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00067408 	andeq	r7, r6, r8, lsl #8
        pll_config = RCC->PLLCFGR;
     47c:	02060500 	andeq	r0, r6, #0, 10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0000cb11 	andeq	ip, r0, r1, lsl fp
     484:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00052d08 	andeq	r2, r5, r8, lsl #26
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	02070500 	andeq	r0, r7, #0, 10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	0002b111 	andeq	fp, r2, r1, lsl r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	48230200 	stmdami	r3!, {r9}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00012b08 	andeq	r2, r1, r8, lsl #22
     49c:	02080500 	andeq	r0, r8, #0, 10
     4a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	50230200 	eorpl	r0, r3, r0, lsl #4
     4a8:	0004d608 	andeq	sp, r4, r8, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	02090500 	andeq	r0, r9, #0, 10
     4b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00064208 	andeq	r4, r6, r8, lsl #4
     4bc:	020a0500 	andeq	r0, sl, #0, 10
  return HAL_OK;
     4c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
}
     4c4:	58230200 	stmdapl	r3!, {r9}
        return HAL_ERROR;
     4c8:	00053708 	andeq	r3, r5, r8, lsl #14
        return HAL_ERROR;
     4cc:	020b0500 	andeq	r0, fp, #0, 10
}
     4d0:	0000bf11 	andeq	fp, r0, r1, lsl pc
        return HAL_ERROR;
     4d4:	5c230200 	sfmpl	f0, 4, [r3], #-0
          return HAL_ERROR;
     4d8:	00001b08 	andeq	r1, r0, r8, lsl #22
     4dc:	020c0500 	andeq	r0, ip, #0, 10
     4e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4e4:	60230200 	eorvs	r0, r3, r0, lsl #4
     4e8:	0003ee08 	andeq	lr, r3, r8, lsl #28
     4ec:	020d0500 	andeq	r0, sp, #0, 10
     4f0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4f4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     4f8:	00054108 	andeq	r4, r5, r8, lsl #2
     4fc:	020e0500 	andeq	r0, lr, #0, 10
     500:	0002b111 	andeq	fp, r2, r1, lsl r1
     504:	68230200 	stmdavs	r3!, {r9}
     508:	00080908 	andeq	r0, r8, r8, lsl #18
     50c:	020f0500 	andeq	r0, pc, #0, 10
     510:	0000cb11 	andeq	ip, r0, r1, lsl fp
     514:	70230200 	eorvc	r0, r3, r0, lsl #4
     518:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     51c:	02100500 	andseq	r0, r0, #0, 10
     520:	0000cb11 	andeq	ip, r0, r1, lsl fp
     524:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     528:	00054b08 	andeq	r4, r5, r8, lsl #22
     52c:	02110500 	andseq	r0, r1, #0, 10
     530:	0002b111 	andeq	fp, r2, r1, lsl r1
     534:	78230200 	stmdavc	r3!, {r9}
     538:	0007d808 	andeq	sp, r7, r8, lsl #16
     53c:	02120500 	andseq	r0, r2, #0, 10
     540:	0000cb11 	andeq	ip, r0, r1, lsl fp
     544:	80230300 	eorhi	r0, r3, r0, lsl #6
     548:	03810801 	orreq	r0, r1, #65536	; 0x10000
     54c:	13050000 	movwne	r0, #20480	; 0x5000
     550:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     554:	23030000 	movwcs	r0, #12288	; 0x3000
     558:	0c000184 	stfeqs	f0, [r0], {132}	; 0x84
     55c:	000001cd 	andeq	r0, r0, sp, asr #3
     560:	03021405 	movweq	r1, #9221	; 0x2405
     564:	0000036f 	andeq	r0, r0, pc, ror #6
     568:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
     56c:	05e10902 	strbeq	r0, [r1, #2306]!	; 0x902
     570:	53090000 	movwpl	r0, #36864	; 0x9000
     574:	97050052 	smlsdls	r5, r2, r0, r0
     578:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     57c:	23020000 	movwcs	r0, #8192	; 0x2000
     580:	52440900 	subpl	r0, r4, #0, 18
     584:	02980500 	addseq	r0, r8, #0, 10
     588:	0000cb11 	andeq	ip, r0, r1, lsl fp
     58c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     590:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     594:	02990500 	addseq	r0, r9, #0, 10
     598:	0000cb11 	andeq	ip, r0, r1, lsl fp
     59c:	08230200 	stmdaeq	r3!, {r9}
     5a0:	31524309 	cmpcc	r2, r9, lsl #6
     5a4:	029a0500 	addseq	r0, sl, #0, 10
     5a8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5ac:	0c230200 	sfmeq	f0, 4, [r3], #-0
     5b0:	32524309 	subscc	r4, r2, #603979776	; 0x24000000
     5b4:	029b0500 	addseq	r0, fp, #0, 10
     5b8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5bc:	10230200 	eorne	r0, r3, r0, lsl #4
     5c0:	33524309 	cmpcc	r2, #603979776	; 0x24000000
     5c4:	029c0500 	addseq	r0, ip, #0, 10
     5c8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5cc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     5d0:	00018908 	andeq	r8, r1, r8, lsl #18
     5d4:	029d0500 	addseq	r0, sp, #0, 10
     5d8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5dc:	18230200 	stmdane	r3!, {r9}
     5e0:	03e00c00 	mvneq	r0, #0, 24
     5e4:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
     5e8:	05680302 	strbeq	r0, [r8, #-770]!	; 0xfffffcfe
     5ec:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     5f0:	0006bf04 	andeq	fp, r6, r4, lsl #30
     5f4:	01070d00 	tsteq	r7, r0, lsl #26
     5f8:	0000003c 	andeq	r0, r0, ip, lsr r0
     5fc:	1c012706 	stcne	7, cr2, [r1], {6}
     600:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     604:	0000034a 	andeq	r0, r0, sl, asr #6
     608:	06ad0e00 	strteq	r0, [sp], r0, lsl #28
     60c:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     610:	000008e9 	andeq	r0, r0, r9, ror #17
     614:	032b0e02 			; <UNDEFINED> instruction: 0x032b0e02
     618:	00030000 	andeq	r0, r3, r0
     61c:	3c01070d 	stccc	7, cr0, [r1], {13}
     620:	06000000 	streq	r0, [r0], -r0
     624:	06370132 			; <UNDEFINED> instruction: 0x06370132
     628:	dc0e0000 	stcle	0, cr0, [lr], {-0}
     62c:	00000008 	andeq	r0, r0, r8
     630:	0004910e 	andeq	r9, r4, lr, lsl #2
     634:	03000100 	movweq	r0, #256	; 0x100
     638:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
     63c:	1c033506 	cfstr32ne	mvfx3, [r3], {6}
     640:	0f000006 	svceq	0x00000006
     644:	092d0718 	pusheq	{r3, r4, r8, r9, sl}
     648:	000006a7 	andeq	r0, r0, r7, lsr #13
     64c:	00008010 	andeq	r8, r0, r0, lsl r0
     650:	0c2f0700 	stceq	7, cr0, [pc], #-0	; 658 <_Min_Heap_Size-0x1a8>
     654:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     658:	10002302 	andne	r2, r0, r2, lsl #6
     65c:	0000064c 	andeq	r0, r0, ip, asr #12
     660:	bf0c3207 	svclt	0x000c3207
     664:	02000000 	andeq	r0, r0, #0
     668:	89100423 	ldmdbhi	r0, {r0, r1, r5, sl}
     66c:	07000000 	streq	r0, [r0, -r0]
     670:	00bf0c35 	adcseq	r0, pc, r5, lsr ip	; <UNPREDICTABLE>
     674:	23020000 	movwcs	r0, #8192	; 0x2000
     678:	008e1008 	addeq	r1, lr, r8
     67c:	38070000 	stmdacc	r7, {}	; <UNPREDICTABLE>
     680:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     684:	0c230200 	sfmeq	f0, 4, [r3], #-0
     688:	00009310 	andeq	r9, r0, r0, lsl r3
     68c:	0c3c0700 	ldceq	7, cr0, [ip], #-0
     690:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     694:	10102302 	andsne	r2, r0, r2, lsl #6
     698:	00000098 	muleq	r0, r8, r0
     69c:	bf0c3f07 	svclt	0x000c3f07
     6a0:	02000000 	andeq	r0, r0, #0
     6a4:	03001423 	movweq	r1, #1059	; 0x423
     6a8:	00000850 	andeq	r0, r0, r0, asr r8
     6ac:	43024907 	movwmi	r4, #10503	; 0x2907
     6b0:	0f000006 	svceq	0x00000006
     6b4:	09310830 	ldmdbeq	r1!, {r4, r5, fp}
     6b8:	00000726 	andeq	r0, r0, r6, lsr #14
     6bc:	0003ba10 	andeq	fp, r3, r0, lsl sl
     6c0:	0c330800 	ldceq	8, cr0, [r3], #-0
     6c4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     6c8:	10002302 	andne	r2, r0, r2, lsl #6
     6cc:	00000307 	andeq	r0, r0, r7, lsl #6
     6d0:	bf0c3608 	svclt	0x000c3608
     6d4:	02000000 	andeq	r0, r0, #0
     6d8:	e6100423 	ldr	r0, [r0], -r3, lsr #8
     6dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     6e0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     6e4:	23020000 	movwcs	r0, #8192	; 0x2000
     6e8:	02411008 	subeq	r1, r1, #8
     6ec:	3c080000 	stccc	0, cr0, [r8], {-0}
     6f0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     6f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     6f8:	00026010 	andeq	r6, r2, r0, lsl r0
     6fc:	0c3f0800 	ldceq	8, cr0, [pc], #-0	; 704 <_Min_Heap_Size-0xfc>
     700:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     704:	10102302 	andsne	r2, r0, r2, lsl #6
     708:	0000020c 	andeq	r0, r0, ip, lsl #4
     70c:	bf0c4208 	svclt	0x000c4208
     710:	02000000 	andeq	r0, r0, #0
     714:	50111423 	andspl	r1, r1, r3, lsr #8
     718:	08004c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, lr}
     71c:	06a71645 	strteq	r1, [r7], r5, asr #12
     720:	23020000 	movwcs	r0, #8192	; 0x2000
     724:	53030018 	movwpl	r0, #12312	; 0x3018
     728:	08000001 	stmdaeq	r0, {r0}
     72c:	06b30246 	ldrteq	r0, [r3], r6, asr #4
     730:	140f0000 	strne	r0, [pc], #-0	; 738 <_Min_Heap_Size-0xc8>
     734:	87094b08 	strhi	r4, [r9, -r8, lsl #22]
     738:	10000007 	andne	r0, r0, r7
     73c:	00000863 	andeq	r0, r0, r3, ror #16
     740:	bf0c4d08 	svclt	0x000c4d08
     744:	02000000 	andeq	r0, r0, #0
     748:	3d100023 	ldccc	0, cr0, [r0, #-140]	; 0xffffff74
     74c:	08000009 	stmdaeq	r0, {r0, r3}
     750:	00bf0c50 	adcseq	r0, pc, r0, asr ip	; <UNPREDICTABLE>
     754:	23020000 	movwcs	r0, #8192	; 0x2000
     758:	04071004 	streq	r1, [r7], #-4
     75c:	53080000 	movwpl	r0, #32768	; 0x8000
     760:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     764:	08230200 	stmdaeq	r3!, {r9}
     768:	00005710 	andeq	r5, r0, r0, lsl r7
     76c:	0c560800 	mrrceq	8, 0, r0, r6, cr0
     770:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     774:	100c2302 	andne	r2, ip, r2, lsl #6
     778:	00000733 	andeq	r0, r0, r3, lsr r7
     77c:	bf0c5908 	svclt	0x000c5908
     780:	02000000 	andeq	r0, r0, #0
     784:	03001023 	movweq	r1, #35	; 0x23
     788:	000004e7 	andeq	r0, r0, r7, ror #9
     78c:	32025c08 	andcc	r5, r2, #8, 24	; 0x800
     790:	0f000007 	svceq	0x00000007
     794:	09300930 	ldmdbeq	r0!, {r4, r5, r8, fp}
     798:	00000851 	andeq	r0, r0, r1, asr r8
     79c:	00056c10 	andeq	r6, r5, r0, lsl ip
     7a0:	0c320900 			; <UNDEFINED> instruction: 0x0c320900
     7a4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7a8:	10002302 	andne	r2, r0, r2, lsl #6
     7ac:	000002cd 	andeq	r0, r0, sp, asr #5
     7b0:	bf0c3509 	svclt	0x000c3509
     7b4:	02000000 	andeq	r0, r0, #0
     7b8:	02100423 	andseq	r0, r0, #587202560	; 0x23000000
     7bc:	09000002 	stmdbeq	r0, {r1}
     7c0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     7c4:	23020000 	movwcs	r0, #8192	; 0x2000
     7c8:	07201008 	streq	r1, [r0, -r8]!
     7cc:	3c090000 	stccc	0, cr0, [r9], {-0}
     7d0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     7d4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     7d8:	0007b310 	andeq	fp, r7, r0, lsl r3
     7dc:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
     7e0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7e4:	10102302 	andsne	r2, r0, r2, lsl #6
     7e8:	000003cf 	andeq	r0, r0, pc, asr #7
     7ec:	bf0c4209 	svclt	0x000c4209
     7f0:	02000000 	andeq	r0, r0, #0
     7f4:	9d101423 	cfldrsls	mvf1, [r0, #-140]	; 0xffffff74
     7f8:	09000006 	stmdbeq	r0, {r1, r2}
     7fc:	00bf0c45 	adcseq	r0, pc, r5, asr #24
     800:	23020000 	movwcs	r0, #8192	; 0x2000
     804:	1fa21018 	svcne	0x00a21018
     808:	4a090000 	bmi	240810 <_Min_Heap_Size+0x240010>
     80c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     810:	1c230200 	sfmne	f0, 4, [r3], #-0
     814:	00069910 	andeq	r9, r6, r0, lsl r9
     818:	0c4d0900 	mcrreq	9, 0, r0, sp, cr0	; <UNPREDICTABLE>
     81c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     820:	10202302 	eorne	r2, r0, r2, lsl #6
     824:	000006cb 	andeq	r0, r0, fp, asr #13
     828:	bf0c5209 	svclt	0x000c5209
     82c:	02000000 	andeq	r0, r0, #0
     830:	15102423 	ldrne	r2, [r0, #-1059]	; 0xfffffbdd
     834:	09000002 	stmdbeq	r0, {r1}
     838:	00bf0c55 	adcseq	r0, pc, r5, asr ip	; <UNPREDICTABLE>
     83c:	23020000 	movwcs	r0, #8192	; 0x2000
     840:	07271028 	streq	r1, [r7, -r8, lsr #32]!
     844:	5b090000 	blpl	24084c <_Min_Heap_Size+0x24004c>
     848:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     84c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     850:	00470300 	subeq	r0, r7, r0, lsl #6
     854:	60090000 	andvs	r0, r9, r0
     858:	00079302 	andeq	r9, r7, r2, lsl #6
     85c:	01070d00 	tsteq	r7, r0, lsl #26
     860:	0000003c 	andeq	r0, r0, ip, lsr r0
     864:	90016709 	andls	r6, r1, r9, lsl #14
     868:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
     86c:	00000310 	andeq	r0, r0, r0, lsl r3
     870:	04230e00 	strteq	r0, [r3], #-3584	; 0xfffff200
     874:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     878:	00000440 	andeq	r0, r0, r0, asr #8
     87c:	082f0e02 	stmdaeq	pc!, {r1, r9, sl, fp}	; <UNPREDICTABLE>
     880:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     884:	0000022d 	andeq	r0, r0, sp, lsr #4
     888:	03910e04 	orrseq	r0, r1, #4, 28	; 0x40
     88c:	00050000 	andeq	r0, r5, r0
     890:	00062d03 	andeq	r2, r6, r3, lsl #26
     894:	026e0900 	rsbeq	r0, lr, #0, 18
     898:	0000085d 	andeq	r0, r0, sp, asr r8
     89c:	00089005 	andeq	r9, r8, r5
     8a0:	06851200 	streq	r1, [r5], r0, lsl #4
     8a4:	09600000 	stmdbeq	r0!, {}^	; <UNPREDICTABLE>
     8a8:	0981108a 	stmibeq	r1, {r1, r3, r7, ip}
     8ac:	a4100000 	ldrge	r0, [r0], #-0
     8b0:	09000004 	stmdbeq	r0, {r2}
     8b4:	09811f8c 	stmibeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip}
     8b8:	23020000 	movwcs	r0, #8192	; 0x2000
     8bc:	1a841000 	bne	fe1048c4 <_estack+0xde10368c>
     8c0:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
     8c4:	0008511e 	andeq	r5, r8, lr, lsl r1
     8c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     8cc:	0002a810 	andeq	sl, r2, r0, lsl r8
     8d0:	1e900900 	vfnmsne.f16	s0, s0, s0	; <UNPREDICTABLE>
     8d4:	00000637 	andeq	r0, r0, r7, lsr r6
     8d8:	10342302 	eorsne	r2, r4, r2, lsl #6
     8dc:	0000030a 	andeq	r0, r0, sl, lsl #6
     8e0:	9c1e9209 	lfmls	f1, 1, [lr], {9}
     8e4:	02000008 	andeq	r0, r0, #8
     8e8:	a1103523 	tstge	r0, r3, lsr #10
     8ec:	09000002 	stmdbeq	r0, {r1}
     8f0:	09871f94 	stmibeq	r7, {r2, r4, r7, r8, r9, sl, fp, ip}
     8f4:	23020000 	movwcs	r0, #8192	; 0x2000
     8f8:	091f1038 	ldmdbeq	pc, {r3, r4, r5, ip}	; <UNPREDICTABLE>
     8fc:	96090000 	strls	r0, [r9], -r0
     900:	00099b21 	andeq	r9, r9, r1, lsr #22
     904:	3c230200 	sfmcc	f0, 4, [r3], #-0
     908:	0001d910 	andeq	sp, r1, r0, lsl r9
     90c:	21980900 	orrscs	r0, r8, r0, lsl #18
     910:	0000099b 	muleq	r0, fp, r9
     914:	10402302 	subne	r2, r0, r2, lsl #6
     918:	00000197 	muleq	r0, r7, r1
     91c:	9b219a09 	blls	867148 <_Min_Heap_Size+0x866948>
     920:	02000009 	andeq	r0, r0, #9
     924:	55104423 	ldrpl	r4, [r0, #-1059]	; 0xfffffbdd
     928:	09000005 	stmdbeq	r0, {r0, r2}
     92c:	099b219c 	ldmibeq	fp, {r2, r3, r4, r7, r8, sp}
     930:	23020000 	movwcs	r0, #8192	; 0x2000
     934:	04ad1048 	strteq	r1, [sp], #72	; 0x48
     938:	9e090000 	cdpls	0, 0, cr0, cr9, cr0, {0}
     93c:	00099b21 	andeq	r9, r9, r1, lsr #22
     940:	4c230200 	sfmmi	f0, 4, [r3], #-0
     944:	00090d10 	andeq	r0, r9, r0, lsl sp
     948:	21a00900 	lslcs	r0, r0, #18
     94c:	0000099b 	muleq	r0, fp, r9
     950:	10502302 	subsne	r2, r0, r2, lsl #6
     954:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
     958:	cb1ea209 	blgt	7a9184 <_Min_Heap_Size+0x7a8984>
     95c:	02000000 	andeq	r0, r0, #0
     960:	8a105423 	bhi	4159f4 <_Min_Heap_Size+0x4151f4>
     964:	09000002 	stmdbeq	r0, {r1}
     968:	00bf1ea4 	adcseq	r1, pc, r4, lsr #29
     96c:	23020000 	movwcs	r0, #8192	; 0x2000
     970:	033e1058 	teqeq	lr, #88	; 0x58
     974:	a6090000 	strge	r0, [r9], -r0
     978:	0000bf1e 	andeq	fp, r0, lr, lsl pc
     97c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     980:	2b041300 	blcs	105588 <_Min_Heap_Size+0x104d88>
     984:	14000003 	strne	r0, [r0], #-3
     988:	95011504 	strls	r1, [r1, #-1284]	; 0xfffffafc
     98c:	16000009 	strne	r0, [r0], -r9
     990:	00000995 	muleq	r0, r5, r9
     994:	a1041300 	mrsge	r1, LR_abt
     998:	13000008 	movwne	r0, #8
     99c:	00098904 	andeq	r8, r9, r4, lsl #18
     9a0:	06870300 	streq	r0, [r7], r0, lsl #6
     9a4:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
     9a8:	0008a102 	andeq	sl, r8, r2, lsl #2
     9ac:	0a1c0f00 	beq	7045b4 <_Min_Heap_Size+0x703db4>
     9b0:	0a20092e 	beq	802e70 <_Min_Heap_Size+0x802670>
     9b4:	8e100000 	cdphi	0, 1, cr0, cr0, cr0, {0}
     9b8:	0a000001 	beq	9c4 <_Min_Heap_Size+0x1c4>
     9bc:	00bf0c30 	adcseq	r0, pc, r0, lsr ip	; <UNPREDICTABLE>
     9c0:	23020000 	movwcs	r0, #8192	; 0x2000
     9c4:	06a21000 	strteq	r1, [r2], r0
     9c8:	360a0000 	strcc	r0, [sl], -r0
     9cc:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     9d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     9d4:	00027910 	andeq	r7, r2, r0, lsl r9
     9d8:	0c390a00 			; <UNDEFINED> instruction: 0x0c390a00
     9dc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     9e0:	10082302 	andne	r2, r8, r2, lsl #6
     9e4:	00000324 	andeq	r0, r0, r4, lsr #6
     9e8:	bf0c3c0a 	svclt	0x000c3c0a
     9ec:	02000000 	andeq	r0, r0, #0
     9f0:	9d100c23 	ldcls	12, cr0, [r0, #-140]	; 0xffffff74
     9f4:	0a000006 	beq	a14 <_Min_Heap_Size+0x214>
     9f8:	00bf0c43 	adcseq	r0, pc, r3, asr #24
     9fc:	23020000 	movwcs	r0, #8192	; 0x2000
     a00:	08251010 	stmdaeq	r5!, {r4, ip}
     a04:	460a0000 	strmi	r0, [sl], -r0
     a08:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     a0c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     a10:	00013510 	andeq	r3, r1, r0, lsl r5
     a14:	0c490a00 	mcrreq	10, 0, r0, r9, cr0
     a18:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a1c:	00182302 	andseq	r2, r8, r2, lsl #6
     a20:	0007c703 	andeq	ip, r7, r3, lsl #14
     a24:	034b0a00 	movteq	r0, #47616	; 0xba00
     a28:	000009ad 	andeq	r0, r0, sp, lsr #19
     a2c:	3c01070d 	stccc	7, cr0, [r1], {13}
     a30:	0a000000 	beq	a38 <_Min_Heap_Size+0x238>
     a34:	0a6b0175 	beq	1ac1010 <_Min_Heap_Size+0x1ac0810>
     a38:	5a0e0000 	bpl	380a40 <_Min_Heap_Size+0x380240>
     a3c:	00000007 	andeq	r0, r0, r7
     a40:	0002ad0e 	andeq	sl, r2, lr, lsl #26
     a44:	6d0e2000 	stcvs	0, cr2, [lr, #-0]
     a48:	24000008 	strcs	r0, [r0], #-8
     a4c:	0004bf0e 	andeq	fp, r4, lr, lsl #30
     a50:	000e2100 	andeq	r2, lr, r0, lsl #2
     a54:	22000007 	andcs	r0, r0, #7
     a58:	00016f0e 	andeq	r6, r1, lr, lsl #30
     a5c:	0e0e2300 	cdpeq	3, 0, cr2, cr14, cr0, {0}
     a60:	a0000008 	andge	r0, r0, r8
     a64:	00065f0e 	andeq	r5, r6, lr, lsl #30
     a68:	0300e000 	movweq	lr, #0
     a6c:	00000025 	andeq	r0, r0, r5, lsr #32
     a70:	2c03870a 	stccs	7, cr8, [r3], {10}
     a74:	0500000a 	streq	r0, [r0, #-10]
     a78:	00000a6b 	andeq	r0, r0, fp, ror #20
     a7c:	0007de03 	andeq	sp, r7, r3, lsl #28
     a80:	12900a00 	addsne	r0, r0, #0, 20
     a84:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a88:	000a7c05 	andeq	r7, sl, r5, lsl #24
     a8c:	00ca0300 	sbceq	r0, sl, r0, lsl #6
     a90:	9b0a0000 	blls	280a98 <_Min_Heap_Size+0x280298>
     a94:	0000bf12 	andeq	fp, r0, r2, lsl pc
     a98:	0a8d0500 	beq	fe341ea0 <_estack+0xde340c68>
     a9c:	77120000 	ldrvc	r0, [r2, -r0]
     aa0:	48000004 	stmdami	r0, {r2}
     aa4:	9c10a00a 	ldcls	0, cr10, [r0], {10}
     aa8:	1000000b 	andne	r0, r0, fp
     aac:	000004a4 	andeq	r0, r0, r4, lsr #9
     ab0:	9c22a20a 	sfmls	f2, 1, [r2], #-40	; 0xffffffd8
     ab4:	0200000b 	andeq	r0, r0, #11
     ab8:	84100023 	ldrhi	r0, [r0], #-35	; 0xffffffdd
     abc:	0a00001a 	beq	b2c <_Min_Heap_Size+0x32c>
     ac0:	0a2021a4 	beq	809158 <_Min_Heap_Size+0x808958>
     ac4:	23020000 	movwcs	r0, #8192	; 0x2000
     ac8:	01ee1004 	mvneq	r1, r4
     acc:	a60a0000 	strge	r0, [sl], -r0
     ad0:	000ba222 	andeq	sl, fp, r2, lsr #4
     ad4:	20230200 	eorcs	r0, r3, r0, lsl #4
     ad8:	00037610 	andeq	r7, r3, r0, lsl r6
     adc:	21a80a00 			; <UNDEFINED> instruction: 0x21a80a00
     ae0:	000000ae 	andeq	r0, r0, lr, lsr #1
     ae4:	10242302 	eorne	r2, r4, r2, lsl #6
     ae8:	00000142 	andeq	r0, r0, r2, asr #2
     aec:	ba21aa0a 	blt	86b31c <_Min_Heap_Size+0x86ab1c>
     af0:	02000000 	andeq	r0, r0, #0
     af4:	45102623 	ldrmi	r2, [r0, #-1571]	; 0xfffff9dd
     af8:	0a000008 	beq	b20 <_Min_Heap_Size+0x320>
     afc:	0ba822ac 	bleq	fea095b4 <_estack+0xdea0837c>
     b00:	23020000 	movwcs	r0, #8192	; 0x2000
     b04:	036b1028 	cmneq	fp, #40	; 0x28
     b08:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
     b0c:	0000ae21 	andeq	sl, r0, r1, lsr #28
     b10:	2c230200 	sfmcs	f0, 4, [r3], #-0
     b14:	00088910 	andeq	r8, r8, r0, lsl r9
     b18:	21b00a00 	lslscs	r0, r0, #20
     b1c:	000000ba 	strheq	r0, [r0], -sl
     b20:	102e2302 	eorne	r2, lr, r2, lsl #6
     b24:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     b28:	881fb20a 	ldmdahi	pc, {r1, r3, r9, ip, sp, pc}	; <UNPREDICTABLE>
     b2c:	0200000a 	andeq	r0, r0, #10
     b30:	99103023 	ldmdbls	r0, {r0, r1, r5, ip, sp}
     b34:	0a000010 	beq	b7c <_Min_Heap_Size+0x37c>
     b38:	0a9924b4 	beq	fe649e10 <_estack+0xde648bd8>
     b3c:	23020000 	movwcs	r0, #8192	; 0x2000
     b40:	04e01034 	strbteq	r1, [r0], #52	; 0x34
     b44:	b60a0000 	strlt	r0, [sl], -r0
     b48:	000bae22 	andeq	sl, fp, r2, lsr #28
     b4c:	38230200 	stmdacc	r3!, {r9}
     b50:	0002e010 	andeq	lr, r2, r0, lsl r0
     b54:	22b80a00 	adcscs	r0, r8, #0, 20
     b58:	00000bae 	andeq	r0, r0, lr, lsr #23
     b5c:	103c2302 	eorsne	r2, ip, r2, lsl #6
     b60:	000002a8 	andeq	r0, r0, r8, lsr #5
     b64:	3721ba0a 	strcc	fp, [r1, -sl, lsl #20]!
     b68:	02000006 	andeq	r0, r0, #6
     b6c:	3b104023 	blcc	410c00 <_Min_Heap_Size+0x410400>
     b70:	0a000000 	beq	b78 <_Min_Heap_Size+0x378>
     b74:	0a7721bc 	beq	1dc926c <_Min_Heap_Size+0x1dc8a6c>
     b78:	23020000 	movwcs	r0, #8192	; 0x2000
     b7c:	08f21041 	ldmeq	r2!, {r0, r6, ip}^
     b80:	c00a0000 	andgt	r0, sl, r0
     b84:	000a7721 	andeq	r7, sl, r1, lsr #14
     b88:	42230200 	eormi	r0, r3, #0, 4
     b8c:	0003b010 	andeq	fp, r3, r0, lsl r0
     b90:	21c30a00 	biccs	r0, r3, r0, lsl #20
     b94:	000000cb 	andeq	r0, r0, fp, asr #1
     b98:	00442302 	subeq	r2, r4, r2, lsl #6
     b9c:	05e10413 	strbeq	r0, [r1, #1043]!	; 0x413
     ba0:	04130000 	ldreq	r0, [r3], #-0
     ba4:	000000a9 	andeq	r0, r0, r9, lsr #1
     ba8:	00980413 	addseq	r0, r8, r3, lsl r4
     bac:	04130000 	ldreq	r0, [r3], #-0
     bb0:	000009a1 	andeq	r0, r0, r1, lsr #19
     bb4:	00047903 	andeq	r7, r4, r3, lsl #18
     bb8:	03d50a00 	bicseq	r0, r5, #0, 20
     bbc:	00000a9e 	muleq	r0, lr, sl
     bc0:	00033717 	andeq	r3, r3, r7, lsl r7
     bc4:	1b240b00 	blne	9037cc <_Min_Heap_Size+0x902fcc>
     bc8:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
     bcc:	01020101 	tsteq	r2, r1, lsl #2
     bd0:	00057d08 	andeq	r7, r5, r8, lsl #26
     bd4:	0bce0600 	bleq	ff3823dc <_estack+0xdf3811a4>
     bd8:	01180000 	tsteq	r8, r0
     bdc:	00000742 	andeq	r0, r0, r2, asr #14
     be0:	01067801 	tsteq	r6, r1, lsl #16
	...
     bf0:	000cb001 	andeq	fp, ip, r1
     bf4:	00ef1900 	rsceq	r1, pc, r0, lsl #18
     bf8:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
     bfc:	00072618 	andeq	r2, r7, r8, lsl r6
     c00:	48910200 	ldmmi	r1, {r9}
     c04:	0002f519 	andeq	pc, r2, r9, lsl r5	; <UNPREDICTABLE>
     c08:	187a0100 	ldmdane	sl!, {r8}^
     c0c:	00000787 	andeq	r0, r0, r7, lsl #15
     c10:	7fb49103 	svcvc	0x00b49103
     c14:	0000001a 	andeq	r0, r0, sl, lsl r0
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	000c3200 	andeq	r3, ip, r0, lsl #4
     c20:	01b61900 			; <UNDEFINED> instruction: 0x01b61900
     c24:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
     c28:	0000cb05 	andeq	ip, r0, r5, lsl #22
     c2c:	ac910300 	ldcge	3, cr0, [r1], {0}
     c30:	001a007f 	andseq	r0, sl, pc, ror r0
     c34:	00000000 	andeq	r0, r0, r0
     c38:	50000000 	andpl	r0, r0, r0
     c3c:	1900000c 	stmdbne	r0, {r2, r3}
     c40:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
     c44:	cb057f01 	blgt	160850 <_Min_Heap_Size+0x160050>
     c48:	03000000 	movweq	r0, #0
     c4c:	007fb091 			; <UNDEFINED> instruction: 0x007fb091
     c50:	0000001b 	andeq	r0, r0, fp, lsl r0
     c54:	00106900 	andseq	r6, r0, r0, lsl #18
     c58:	000c6f00 	andeq	r6, ip, r0, lsl #30
     c5c:	50011c00 	andpl	r1, r1, r0, lsl #24
     c60:	1c489102 	stfnep	f1, [r8], {2}
     c64:	30015101 	andcc	r5, r1, r1, lsl #2
     c68:	0252011c 	subseq	r0, r2, #28, 2
     c6c:	1b003008 	blne	cc94 <_Min_Heap_Size+0xc494>
     c70:	00000000 	andeq	r0, r0, r0
     c74:	00001076 	andeq	r1, r0, r6, ror r0
     c78:	00000c83 	andeq	r0, r0, r3, lsl #25
     c7c:	0250011c 	subseq	r0, r0, #28, 2
     c80:	1b004891 	blne	12ecc <_Min_Heap_Size+0x126cc>
     c84:	00000000 	andeq	r0, r0, r0
     c88:	00001085 	andeq	r1, r0, r5, lsl #1
     c8c:	00000c9d 	muleq	r0, sp, ip
     c90:	0350011c 	cmpeq	r0, #28, 2
     c94:	1c7fb491 	cfldrdne	mvd11, [pc], #-580	; a58 <_Min_Heap_Size+0x258>
     c98:	35015101 	strcc	r5, [r1, #-257]	; 0xfffffeff
     c9c:	00001d00 	andeq	r1, r0, r0, lsl #26
     ca0:	10940000 	addsne	r0, r4, r0
     ca4:	001d0000 	andseq	r0, sp, r0
     ca8:	94000000 	strls	r0, [r0], #-0
     cac:	00000010 	andeq	r0, r0, r0, lsl r0
     cb0:	0274011e 	rsbseq	r0, r4, #-2147483641	; 0x80000007
     cb4:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
     cb8:	00850105 	addeq	r0, r5, r5, lsl #2
     cbc:	06c00000 	strbeq	r0, [r0], r0
     cc0:	06ec0800 	strbteq	r0, [ip], r0, lsl #16
     cc4:	00460800 	subeq	r0, r6, r0, lsl #16
     cc8:	25010000 	strcs	r0, [r1, #-0]
     ccc:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
     cd0:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
     cd4:	000010a2 	andeq	r1, r0, r2, lsr #1
     cd8:	0006ca1d 	andeq	ip, r6, sp, lsl sl
     cdc:	0010b008 	andseq	fp, r0, r8
     ce0:	06ce1d00 	strbeq	r1, [lr], r0, lsl #26
     ce4:	10be0800 	adcsne	r0, lr, r0, lsl #16
     ce8:	d21d0000 	andsle	r0, sp, #0
     cec:	cc080006 	stcgt	0, cr0, [r8], {6}
     cf0:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
     cf4:	080006d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, sl}
     cf8:	00000d25 	andeq	r0, r0, r5, lsr #26
     cfc:	0006dc1b 	andeq	sp, r6, fp, lsl ip
     d00:	0010da08 	andseq	sp, r0, r8, lsl #20
     d04:	000d1300 	andeq	r1, sp, r0, lsl #6
     d08:	50011c00 	andpl	r1, r1, r0, lsl #24
     d0c:	2bfc0305 	blcs	fff01928 <_estack+0xdff006f0>
     d10:	1f000800 	svcne	0x00000800
     d14:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
     d18:	000010e7 	andeq	r1, r0, r7, ror #1
     d1c:	0350011c 	cmpeq	r0, #28, 2
     d20:	0003e80a 	andeq	lr, r3, sl, lsl #16
     d24:	13011800 	movwne	r1, #6144	; 0x1800
     d28:	01000001 	tsteq	r0, r1
     d2c:	a8010663 	stmdage	r1, {r0, r1, r5, r6, r9, sl}
     d30:	c0080006 	andgt	r0, r8, r6
     d34:	66080006 	strvs	r0, [r8], -r6
     d38:	01000000 	mrseq	r0, (UNDEF: 0)
     d3c:	00000d7a 	andeq	r0, r0, sl, ror sp
     d40:	00065620 	andeq	r5, r6, r0, lsr #12
     d44:	000d8a00 	andeq	r8, sp, r0, lsl #20
     d48:	03050100 	movweq	r0, #20736	; 0x5100
     d4c:	08002c0c 	stmdaeq	r0, {r2, r3, sl, fp, sp}
     d50:	0006b21b 	andeq	fp, r6, fp, lsl r2
     d54:	0010f508 	andseq	pc, r0, r8, lsl #10
     d58:	000d7000 	andeq	r7, sp, r0
     d5c:	50011c00 	andpl	r1, r1, r0, lsl #24
     d60:	2bec0305 	blcs	ffb0197c <_estack+0xdfb00744>
     d64:	011c0800 	tsteq	ip, r0, lsl #16
     d68:	0c030551 	cfstr32eq	mvfx0, [r3], {81}	; 0x51
     d6c:	0008002c 	andeq	r0, r8, ip, lsr #32
     d70:	0006b61d 	andeq	fp, r6, sp, lsl r6
     d74:	000d8f08 	andeq	r8, sp, r8, lsl #30
     d78:	d50a0000 	strle	r0, [sl, #-0]
     d7c:	8a00000b 	bhi	db0 <_Min_Heap_Size+0x5b0>
     d80:	0b00000d 	bleq	dbc <_Min_Heap_Size+0x5bc>
     d84:	00000091 	muleq	r0, r1, r0
     d88:	7a060005 	bvc	180da4 <_Min_Heap_Size+0x1805a4>
     d8c:	1800000d 	stmdane	r0, {r0, r2, r3}
     d90:	00010d01 	andeq	r0, r1, r1, lsl #26
     d94:	065e0100 	ldrbeq	r0, [lr], -r0, lsl #2
     d98:	00069001 	andeq	r9, r6, r1
     d9c:	0006a808 	andeq	sl, r6, r8, lsl #16
     da0:	00008608 	andeq	r8, r0, r8, lsl #12
     da4:	0de40100 	stfeqe	f0, [r4]
     da8:	56200000 	strtpl	r0, [r0], -r0
     dac:	8a000006 	bhi	dcc <_Min_Heap_Size+0x5cc>
     db0:	0100000d 	tsteq	r0, sp
     db4:	2c140305 	ldccs	3, cr0, [r4], {5}
     db8:	9a1b0800 	bls	6c2dc0 <_Min_Heap_Size+0x6c25c0>
     dbc:	f5080006 			; <UNDEFINED> instruction: 0xf5080006
     dc0:	da000010 	ble	e08 <_Min_Heap_Size+0x608>
     dc4:	1c00000d 	stcne	0, cr0, [r0], {13}
     dc8:	03055001 	movweq	r5, #20481	; 0x5001
     dcc:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
     dd0:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     dd4:	002c1403 	eoreq	r1, ip, r3, lsl #8
     dd8:	9e1d0008 	cdpls	0, 1, cr0, cr13, cr8, {0}
     ddc:	e4080006 	str	r0, [r8], #-6
     de0:	0000000d 	andeq	r0, r0, sp
     de4:	01070118 	tsteq	r7, r8, lsl r1
     de8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
     dec:	06780106 	ldrbteq	r0, [r8], -r6, lsl #2
     df0:	06900800 	ldreq	r0, [r0], r0, lsl #16
     df4:	00a60800 	adceq	r0, r6, r0, lsl #16
     df8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
     dfc:	2000000e 	andcs	r0, r0, lr
     e00:	00000656 	andeq	r0, r0, r6, asr r6
     e04:	00000d8a 	andeq	r0, r0, sl, lsl #27
     e08:	1c030501 	cfstr32ne	mvfx0, [r3], {1}
     e0c:	1b08002c 	blne	200ec4 <_Min_Heap_Size+0x2006c4>
     e10:	08000682 	stmdaeq	r0, {r1, r7, r9, sl}
     e14:	000010f5 	strdeq	r1, [r0], -r5
     e18:	00000e2f 	andeq	r0, r0, pc, lsr #28
     e1c:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
     e20:	002bec03 	eoreq	lr, fp, r3, lsl #24
     e24:	51011c08 	tstpl	r1, r8, lsl #24
     e28:	2c1c0305 	ldccs	3, cr0, [ip], {5}
     e2c:	1d000800 	stcne	8, cr0, [r0, #-0]
     e30:	08000686 	stmdaeq	r0, {r1, r2, r7, r9, sl}
     e34:	00000e39 	andeq	r0, r0, r9, lsr lr
     e38:	03011800 	movweq	r1, #6144	; 0x1800
     e3c:	01000005 	tsteq	r0, r5
     e40:	60010654 	andvs	r0, r1, r4, asr r6
     e44:	78080006 	stmdavc	r8, {r1, r2}
     e48:	c6080006 	strgt	r0, [r8], -r6
     e4c:	01000000 	mrseq	r0, (UNDEF: 0)
     e50:	00000e8e 	andeq	r0, r0, lr, lsl #29
     e54:	00065620 	andeq	r5, r6, r0, lsr #12
     e58:	000d8a00 	andeq	r8, sp, r0, lsl #20
     e5c:	03050100 	movweq	r0, #20736	; 0x5100
     e60:	08002c24 	stmdaeq	r0, {r2, r5, sl, fp, sp}
     e64:	00066a1b 	andeq	r6, r6, fp, lsl sl
     e68:	0010f508 	andseq	pc, r0, r8, lsl #10
     e6c:	000e8400 	andeq	r8, lr, r0, lsl #8
     e70:	50011c00 	andpl	r1, r1, r0, lsl #24
     e74:	2bec0305 	blcs	ffb01a90 <_estack+0xdfb00858>
     e78:	011c0800 	tsteq	ip, r0, lsl #16
     e7c:	24030551 	strcs	r0, [r3], #-1361	; 0xfffffaaf
     e80:	0008002c 	andeq	r0, r8, ip, lsr #32
     e84:	00066e1d 	andeq	r6, r6, sp, lsl lr
     e88:	000e8e08 	andeq	r8, lr, r8, lsl #28
     e8c:	01180000 	tsteq	r8, r0
     e90:	000007a8 	andeq	r0, r0, r8, lsr #15
     e94:	01064f01 	tsteq	r6, r1, lsl #30
     e98:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
     e9c:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
     ea0:	000000e6 	andeq	r0, r0, r6, ror #1
     ea4:	000ee301 	andeq	lr, lr, r1, lsl #6
     ea8:	06562000 	ldrbeq	r2, [r6], -r0
     eac:	0d8a0000 	stceq	0, cr0, [sl]
     eb0:	05010000 	streq	r0, [r1, #-0]
     eb4:	002c2c03 	eoreq	r2, ip, r3, lsl #24
     eb8:	06521b08 	ldrbeq	r1, [r2], -r8, lsl #22
     ebc:	10f50800 	rscsne	r0, r5, r0, lsl #16
     ec0:	0ed90000 	cdpeq	0, 13, cr0, cr9, cr0, {0}
     ec4:	011c0000 	tsteq	ip, r0
     ec8:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
     ecc:	1c08002b 	stcne	0, cr0, [r8], {43}	; 0x2b
     ed0:	03055101 	movweq	r5, #20737	; 0x5101
     ed4:	08002c2c 	stmdaeq	r0, {r2, r3, r5, sl, fp, sp}
     ed8:	06561d00 	ldrbeq	r1, [r6], -r0, lsl #26
     edc:	0ee30800 	cdpeq	8, 14, cr0, cr3, cr0, {0}
     ee0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     ee4:	0007a201 	andeq	sl, r7, r1, lsl #4
     ee8:	06470100 	strbeq	r0, [r7], -r0, lsl #2
     eec:	00063001 	andeq	r3, r6, r1
     ef0:	00064808 	andeq	r4, r6, r8, lsl #16
     ef4:	00010608 	andeq	r0, r1, r8, lsl #12
     ef8:	0f380100 	svceq	0x00380100
     efc:	56200000 	strtpl	r0, [r0], -r0
     f00:	8a000006 	bhi	f20 <_Min_Heap_Size+0x720>
     f04:	0100000d 	tsteq	r0, sp
     f08:	2c340305 	ldccs	3, cr0, [r4], #-20	; 0xffffffec
     f0c:	3a1b0800 	bcc	6c2f14 <_Min_Heap_Size+0x6c2714>
     f10:	f5080006 			; <UNDEFINED> instruction: 0xf5080006
     f14:	2e000010 	mcrcs	0, 0, r0, cr0, cr0, {0}
     f18:	1c00000f 	stcne	0, cr0, [r0], {15}
     f1c:	03055001 	movweq	r5, #20481	; 0x5001
     f20:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
     f24:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     f28:	002c3403 	eoreq	r3, ip, r3, lsl #8
     f2c:	3e1d0008 	cdpcc	0, 1, cr0, cr13, cr8, {0}
     f30:	38080006 	stmdacc	r8, {r1, r2}
     f34:	0000000f 	andeq	r0, r0, pc
     f38:	024a0118 	subeq	r0, sl, #24, 2
     f3c:	37010000 	strcc	r0, [r1, -r0]
     f40:	05e40106 	strbeq	r0, [r4, #262]!	; 0x106
     f44:	06300800 	ldrteq	r0, [r0], -r0, lsl #16
     f48:	01260800 			; <UNDEFINED> instruction: 0x01260800
     f4c:	bf010000 	svclt	0x00010000
     f50:	2100000f 	tstcs	r0, pc
     f54:	000000c5 	andeq	r0, r0, r5, asr #1
     f58:	bf133801 	svclt	0x00133801
     f5c:	6400000f 	strvs	r0, [r0], #-15
     f60:	5e000001 	cdppl	0, 0, cr0, cr0, cr1, {0}
     f64:	19000001 	stmdbne	r0, {r0}
     f68:	00001f16 	andeq	r1, r0, r6, lsl pc
     f6c:	8c123901 			; <UNDEFINED> instruction: 0x8c123901
     f70:	02000000 	andeq	r0, r0, #0
     f74:	061b6c91 			; <UNDEFINED> instruction: 0x061b6c91
     f78:	f5080006 			; <UNDEFINED> instruction: 0xf5080006
     f7c:	90000010 	andls	r0, r0, r0, lsl r0
     f80:	1c00000f 	stcne	0, cr0, [r0], {15}
     f84:	75025001 	strvc	r5, [r2, #-1]
     f88:	51011c00 	tstpl	r1, r0, lsl #24
     f8c:	00007402 	andeq	r7, r0, r2, lsl #8
     f90:	0006141b 	andeq	r1, r6, fp, lsl r4
     f94:	0010f508 	andseq	pc, r0, r8, lsl #10
     f98:	000fa900 	andeq	sl, pc, r0, lsl #18
     f9c:	50011c00 	andpl	r1, r1, r0, lsl #24
     fa0:	1c007502 	cfstr32ne	mvfx7, [r0], {2}
     fa4:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
     fa8:	06241f00 	strteq	r1, [r4], -r0, lsl #30
     fac:	10f50800 	rscsne	r0, r5, r0, lsl #16
     fb0:	011c0000 	tsteq	ip, r0
     fb4:	00750250 	rsbseq	r0, r5, r0, asr r2
     fb8:	0151011c 	cmpeq	r1, ip, lsl r1
     fbc:	13000033 	movwne	r0, #51	; 0x33
     fc0:	00008c04 	andeq	r8, r0, r4, lsl #24
     fc4:	60011800 	andvs	r1, r1, r0, lsl #16
     fc8:	01000004 	tsteq	r0, r4
     fcc:	0001062f 	andeq	r0, r1, pc, lsr #12
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	90000000 	andls	r0, r0, r0
     fd8:	01000001 	tsteq	r0, r1
     fdc:	0000101a 	andeq	r1, r0, sl, lsl r0
     fe0:	01006122 	tsteq	r0, r2, lsr #2
     fe4:	00850930 	addeq	r0, r5, r0, lsr r9
     fe8:	22000000 	andcs	r0, r0, #0
     fec:	30010062 	andcc	r0, r1, r2, rrx
     ff0:	00008510 	andeq	r8, r0, r0, lsl r5
     ff4:	63220000 			; <UNDEFINED> instruction: 0x63220000
     ff8:	17300100 	ldrne	r0, [r0, -r0, lsl #2]!
     ffc:	00000085 	andeq	r0, r0, r5, lsl #1
    1000:	00001f00 	andeq	r1, r0, r0, lsl #30
    1004:	10f50000 	rscsne	r0, r5, r0
    1008:	011c0000 	tsteq	ip, r0
    100c:	00030550 	andeq	r0, r3, r0, asr r5
    1010:	1c000000 	stcne	0, cr0, [r0], {-0}
    1014:	30015101 	andcc	r5, r1, r1, lsl #2
    1018:	011e0000 	tsteq	lr, r0
    101c:	00000453 	andeq	r0, r0, r3, asr r4
    1020:	01051901 	tsteq	r5, r1, lsl #18
    1024:	00000085 	andeq	r0, r0, r5, lsl #1
    1028:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
    102c:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    1030:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    1034:	00106901 	andseq	r6, r0, r1, lsl #18
    1038:	68632300 	stmdavs	r3!, {r8, r9, sp}^
    103c:	16190100 	ldrne	r0, [r9], -r0, lsl #2
    1040:	00000085 	andeq	r0, r0, r5, lsl #1
    1044:	000001ec 	andeq	r0, r0, ip, ror #3
    1048:	000001e8 	andeq	r0, r0, r8, ror #3
    104c:	0005d81f 	andeq	sp, r5, pc, lsl r8
    1050:	00110308 	andseq	r0, r1, r8, lsl #6
    1054:	51011c00 	tstpl	r1, r0, lsl #24
    1058:	1c749102 	ldfnep	f1, [r4], #-8
    105c:	31015201 	tstcc	r1, r1, lsl #4
    1060:	0353011c 	cmpeq	r3, #28, 2
    1064:	00ffff0a 	rscseq	pc, pc, sl, lsl #30
    1068:	01012400 	tsteq	r1, r0, lsl #8
    106c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1070:	0000009d 	muleq	r0, sp, r0
    1074:	01250010 			; <UNDEFINED> instruction: 0x01250010
    1078:	0006d901 	andeq	sp, r6, r1, lsl #18
    107c:	0006d900 	andeq	sp, r6, r0, lsl #18
    1080:	04db0800 	ldrbeq	r0, [fp], #2048	; 0x800
    1084:	01012513 	tsteq	r1, r3, lsl r5
    1088:	000007f5 	strdeq	r0, [r0], -r5
    108c:	000007f5 	strdeq	r0, [r0], -r5
    1090:	1304dc08 	movwne	sp, #19464	; 0x4c08
    1094:	15010126 	strne	r0, [r1, #-294]	; 0xfffffeda
    1098:	15000004 	strne	r0, [r0, #-4]
    109c:	0c000004 	stceq	0, cr0, [r0], {4}
    10a0:	0126063c 			; <UNDEFINED> instruction: 0x0126063c
    10a4:	00043701 	andeq	r3, r4, r1, lsl #14
    10a8:	00043700 	andeq	r3, r4, r0, lsl #14
    10ac:	13db0d00 	bicsne	r0, fp, #0, 26
    10b0:	30010126 	andcc	r0, r1, r6, lsr #2
    10b4:	30000009 	andcc	r0, r0, r9
    10b8:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    10bc:	01260627 			; <UNDEFINED> instruction: 0x01260627
    10c0:	00000701 	andeq	r0, r0, r1, lsl #14
    10c4:	00000700 	andeq	r0, r0, r0, lsl #14
    10c8:	062a0b00 	strteq	r0, [sl], -r0, lsl #22
    10cc:	70010126 	andvc	r0, r1, r6, lsr #2
    10d0:	70000000 	andvc	r0, r0, r0
    10d4:	0f000000 	svceq	0x00000000
    10d8:	01240646 			; <UNDEFINED> instruction: 0x01240646
    10dc:	00022801 	andeq	r2, r2, r1, lsl #16
    10e0:	00021e00 	andeq	r1, r2, r0, lsl #28
    10e4:	26001000 	strcs	r1, [r0], -r0
    10e8:	06eb0101 	strbteq	r0, [fp], r1, lsl #2
    10ec:	06eb0000 	strbteq	r0, [fp], r0
    10f0:	e90d0000 	stmdb	sp, {}	; <UNPREDICTABLE>
    10f4:	01012606 	tsteq	r1, r6, lsl #12
	...
    1100:	2505c811 	strcs	ip, [r5, #-2065]	; 0xfffff7ef
    1104:	01190101 	tsteq	r9, r1, lsl #2
    1108:	01190000 	tsteq	r9, r0
    110c:	e90a0000 	stmdb	sl, {}	; <UNPREDICTABLE>
    1110:	bf001302 	svclt	0x00001302
    1114:	02000009 	andeq	r0, r0, #9
    1118:	00023100 	andeq	r3, r2, r0, lsl #2
    111c:	88010400 	stmdahi	r1, {sl}
    1120:	0c000005 	stceq	0, cr0, [r0], {5}
    1124:	000009c8 	andeq	r0, r0, r8, asr #19
    1128:	00000895 	muleq	r0, r5, r8
    112c:	00000060 	andeq	r0, r0, r0, rrx
	...
    1138:	0000050e 	andeq	r0, r0, lr, lsl #10
    113c:	76060102 	strvc	r0, [r6], -r2, lsl #2
    1140:	03000005 	movweq	r0, #5
    1144:	00000066 	andeq	r0, r0, r6, rrx
    1148:	3c182b03 			; <UNDEFINED> instruction: 0x3c182b03
    114c:	02000000 	andeq	r0, r0, #0
    1150:	05740801 	ldrbeq	r0, [r4, #-2049]!	; 0xfffff7ff
    1154:	02020000 	andeq	r0, r2, #0
    1158:	0003fd05 	andeq	pc, r3, r5, lsl #26
    115c:	06f50300 	ldrbteq	r0, [r5], r0, lsl #6
    1160:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    1164:	00005619 	andeq	r5, r0, r9, lsl r6
    1168:	07020200 	streq	r0, [r2, -r0, lsl #4]
    116c:	0000078f 	andeq	r0, r0, pc, lsl #15
    1170:	ec050402 	cfstrs	mvf0, [r5], {2}
    1174:	03000002 	movweq	r0, #2
    1178:	000002c2 	andeq	r0, r0, r2, asr #5
    117c:	70194f03 	andsvc	r4, r9, r3, lsl #30
    1180:	02000000 	andeq	r0, r0, #0
    1184:	00b30704 	adcseq	r0, r3, r4, lsl #14
    1188:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    118c:	0002e705 	andeq	lr, r2, r5, lsl #14
    1190:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1194:	000000ae 	andeq	r0, r0, lr, lsr #1
    1198:	69050404 	stmdbvs	r5, {r2, sl}
    119c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    11a0:	00b80704 	adcseq	r0, r8, r4, lsl #14
    11a4:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    11a8:	04000000 	streq	r0, [r0], #-0
    11ac:	00301318 	eorseq	r1, r0, r8, lsl r3
    11b0:	93050000 	movwls	r0, #20480	; 0x5000
    11b4:	03000000 	movweq	r0, #0
    11b8:	000006f7 	strdeq	r0, [r0], -r7
    11bc:	4a142404 	bmi	50a1d4 <_Min_Heap_Size+0x5099d4>
    11c0:	06000000 	streq	r0, [r0], -r0
    11c4:	000000a4 	andeq	r0, r0, r4, lsr #1
    11c8:	0002c403 	andeq	ip, r2, r3, lsl #8
    11cc:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    11d0:	00000064 	andeq	r0, r0, r4, rrx
    11d4:	0000b506 	andeq	fp, r0, r6, lsl #10
    11d8:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
    11dc:	30090144 	andcc	r0, r9, r4, asr #2
    11e0:	08000001 	stmdaeq	r0, {r0}
    11e4:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    11e8:	c1110146 	tstgt	r1, r6, asr #2
    11ec:	02000000 	andeq	r0, r0, #0
    11f0:	55090023 	strpl	r0, [r9, #-35]	; 0xffffffdd
    11f4:	05000007 	streq	r0, [r0, #-7]
    11f8:	c1110147 	tstgt	r1, r7, asr #2
    11fc:	02000000 	andeq	r0, r0, #0
    1200:	50080423 	andpl	r0, r8, r3, lsr #8
    1204:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
    1208:	c1110148 	tstgt	r1, r8, asr #2
    120c:	02000000 	andeq	r0, r0, #0
    1210:	42090823 	andmi	r0, r9, #2293760	; 0x230000
    1214:	05000000 	streq	r0, [r0, #-0]
    1218:	c1110149 	tstgt	r1, r9, asr #2
    121c:	02000000 	andeq	r0, r0, #0
    1220:	ae090c23 	cdpge	12, 0, cr0, cr9, cr3, {1}
    1224:	05000007 	streq	r0, [r0, #-7]
    1228:	c111014a 	tstgt	r1, sl, asr #2
    122c:	02000000 	andeq	r0, r0, #0
    1230:	46081023 	strmi	r1, [r8], -r3, lsr #32
    1234:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    1238:	c111014b 	tstgt	r1, fp, asr #2
    123c:	02000000 	andeq	r0, r0, #0
    1240:	0a001423 	beq	62d4 <_Min_Heap_Size+0x5ad4>
    1244:	00000774 	andeq	r0, r0, r4, ror r7
    1248:	03014c05 	movweq	r4, #7173	; 0x1c05
    124c:	000000c6 	andeq	r0, r0, r6, asr #1
    1250:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
    1254:	01b60902 			; <UNDEFINED> instruction: 0x01b60902
    1258:	53080000 	movwpl	r0, #32768	; 0x8000
    125c:	97050052 	smlsdls	r5, r2, r0, r0
    1260:	00c11102 	sbceq	r1, r1, r2, lsl #2
    1264:	23020000 	movwcs	r0, #8192	; 0x2000
    1268:	52440800 	subpl	r0, r4, #0, 16
    126c:	02980500 	addseq	r0, r8, #0, 10
    1270:	0000c111 	andeq	ip, r0, r1, lsl r1
    1274:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1278:	52524208 	subspl	r4, r2, #8, 4	; 0x80000000
    127c:	02990500 	addseq	r0, r9, #0, 10
    1280:	0000c111 	andeq	ip, r0, r1, lsl r1
    1284:	08230200 	stmdaeq	r3!, {r9}
    1288:	31524308 	cmpcc	r2, r8, lsl #6
    128c:	029a0500 	addseq	r0, sl, #0, 10
    1290:	0000c111 	andeq	ip, r0, r1, lsl r1
    1294:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1298:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
    129c:	029b0500 	addseq	r0, fp, #0, 10
    12a0:	0000c111 	andeq	ip, r0, r1, lsl r1
    12a4:	10230200 	eorne	r0, r3, r0, lsl #4
    12a8:	33524308 	cmpcc	r2, #8, 6	; 0x20000000
    12ac:	029c0500 	addseq	r0, ip, #0, 10
    12b0:	0000c111 	andeq	ip, r0, r1, lsl r1
    12b4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    12b8:	00018909 	andeq	r8, r1, r9, lsl #18
    12bc:	029d0500 	addseq	r0, sp, #0, 10
    12c0:	0000c111 	andeq	ip, r0, r1, lsl r1
    12c4:	18230200 	stmdane	r3!, {r9}
    12c8:	03e00a00 	mvneq	r0, #0, 20
    12cc:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    12d0:	013d0302 	teqeq	sp, r2, lsl #6
    12d4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    12d8:	0006bf04 	andeq	fp, r6, r4, lsl #30
    12dc:	01070b00 	tsteq	r7, r0, lsl #22
    12e0:	0000003c 	andeq	r0, r0, ip, lsr r0
    12e4:	e5013206 	str	r3, [r1, #-518]	; 0xfffffdfa
    12e8:	0c000001 	stceq	0, cr0, [r0], {1}
    12ec:	000008dc 	ldrdeq	r0, [r0], -ip
    12f0:	04910c00 	ldreq	r0, [r1], #3072	; 0xc00
    12f4:	00010000 	andeq	r0, r1, r0
    12f8:	0001bd03 	andeq	fp, r1, r3, lsl #26
    12fc:	03350600 	teqeq	r5, #0, 12
    1300:	000001ca 	andeq	r0, r0, sl, asr #3
    1304:	3007300d 	andcc	r3, r7, sp
    1308:	0002af09 	andeq	sl, r2, r9, lsl #30
    130c:	056c0e00 	strbeq	r0, [ip, #-3584]!	; 0xfffff200
    1310:	32070000 	andcc	r0, r7, #0
    1314:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1318:	00230200 	eoreq	r0, r3, r0, lsl #4
    131c:	0002cd0e 	andeq	ip, r2, lr, lsl #26
    1320:	0c350700 	ldceq	7, cr0, [r5], #-0
    1324:	000000b5 	strheq	r0, [r0], -r5
    1328:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    132c:	00000202 	andeq	r0, r0, r2, lsl #4
    1330:	b50c3907 	strlt	r3, [ip, #-2311]	; 0xfffff6f9
    1334:	02000000 	andeq	r0, r0, #0
    1338:	200e0823 	andcs	r0, lr, r3, lsr #16
    133c:	07000007 	streq	r0, [r0, -r7]
    1340:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
    1344:	23020000 	movwcs	r0, #8192	; 0x2000
    1348:	07b30e0c 	ldreq	r0, [r3, ip, lsl #28]!
    134c:	3f070000 	svccc	0x00070000
    1350:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1354:	10230200 	eorne	r0, r3, r0, lsl #4
    1358:	0003cf0e 	andeq	ip, r3, lr, lsl #30
    135c:	0c420700 	mcrreq	7, 0, r0, r2, cr0
    1360:	000000b5 	strheq	r0, [r0], -r5
    1364:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    1368:	0000069d 	muleq	r0, sp, r6
    136c:	b50c4507 	strlt	r4, [ip, #-1287]	; 0xfffffaf9
    1370:	02000000 	andeq	r0, r0, #0
    1374:	a20e1823 	andge	r1, lr, #2293760	; 0x230000
    1378:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    137c:	00b50c4a 	adcseq	r0, r5, sl, asr #24
    1380:	23020000 	movwcs	r0, #8192	; 0x2000
    1384:	06990e1c 			; <UNDEFINED> instruction: 0x06990e1c
    1388:	4d070000 	stcmi	0, cr0, [r7, #-0]
    138c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1390:	20230200 	eorcs	r0, r3, r0, lsl #4
    1394:	0006cb0e 	andeq	ip, r6, lr, lsl #22
    1398:	0c520700 	mrrceq	7, 0, r0, r2, cr0
    139c:	000000b5 	strheq	r0, [r0], -r5
    13a0:	0e242302 	cdpeq	3, 2, cr2, cr4, cr2, {0}
    13a4:	00000215 	andeq	r0, r0, r5, lsl r2
    13a8:	b50c5507 	strlt	r5, [ip, #-1287]	; 0xfffffaf9
    13ac:	02000000 	andeq	r0, r0, #0
    13b0:	270e2823 	strcs	r2, [lr, -r3, lsr #16]
    13b4:	07000007 	streq	r0, [r0, -r7]
    13b8:	00b50c5b 	adcseq	r0, r5, fp, asr ip
    13bc:	23020000 	movwcs	r0, #8192	; 0x2000
    13c0:	4703002c 	strmi	r0, [r3, -ip, lsr #32]
    13c4:	07000000 	streq	r0, [r0, -r0]
    13c8:	01f10260 	mvnseq	r0, r0, ror #4
    13cc:	070b0000 	streq	r0, [fp, -r0]
    13d0:	00003c01 	andeq	r3, r0, r1, lsl #24
    13d4:	01670700 	cmneq	r7, r0, lsl #14
    13d8:	000002ee 	andeq	r0, r0, lr, ror #5
    13dc:	0003100c 	andeq	r1, r3, ip
    13e0:	230c0000 	movwcs	r0, #49152	; 0xc000
    13e4:	01000004 	tsteq	r0, r4
    13e8:	0004400c 	andeq	r4, r4, ip
    13ec:	2f0c0200 	svccs	0x000c0200
    13f0:	03000008 	movweq	r0, #8
    13f4:	00022d0c 	andeq	r2, r2, ip, lsl #26
    13f8:	910c0400 	tstls	ip, r0, lsl #8
    13fc:	05000003 	streq	r0, [r0, #-3]
    1400:	062d0300 	strteq	r0, [sp], -r0, lsl #6
    1404:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    1408:	0002bb02 	andeq	fp, r2, r2, lsl #22
    140c:	02ee0600 	rsceq	r0, lr, #0, 12
    1410:	850f0000 	strhi	r0, [pc, #-0]	; 1418 <_Min_Heap_Size+0xc18>
    1414:	60000006 	andvs	r0, r0, r6
    1418:	df108a07 	svcle	0x00108a07
    141c:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    1420:	000004a4 	andeq	r0, r0, r4, lsr #9
    1424:	df1f8c07 	svcle	0x001f8c07
    1428:	02000003 	andeq	r0, r0, #3
    142c:	840e0023 	strhi	r0, [lr], #-35	; 0xffffffdd
    1430:	0700001a 	smladeq	r0, sl, r0, r0
    1434:	02af1e8e 	adceq	r1, pc, #2272	; 0x8e0
    1438:	23020000 	movwcs	r0, #8192	; 0x2000
    143c:	02a80e04 	adceq	r0, r8, #4, 28	; 0x40
    1440:	90070000 	andls	r0, r7, r0
    1444:	0001e51e 	andeq	lr, r1, lr, lsl r5
    1448:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    144c:	00030a0e 	andeq	r0, r3, lr, lsl #20
    1450:	1e920700 	cdpne	7, 9, cr0, cr2, cr0, {0}
    1454:	000002fa 	strdeq	r0, [r0], -sl
    1458:	0e352302 	cdpeq	3, 3, cr2, cr5, cr2, {0}
    145c:	000002a1 	andeq	r0, r0, r1, lsr #5
    1460:	e51f9407 	ldr	r9, [pc, #-1031]	; 1061 <_Min_Heap_Size+0x861>
    1464:	02000003 	andeq	r0, r0, #3
    1468:	1f0e3823 	svcne	0x000e3823
    146c:	07000009 	streq	r0, [r0, -r9]
    1470:	03f92196 	mvnseq	r2, #-2147483611	; 0x80000025
    1474:	23020000 	movwcs	r0, #8192	; 0x2000
    1478:	01d90e3c 	bicseq	r0, r9, ip, lsr lr
    147c:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    1480:	0003f921 	andeq	pc, r3, r1, lsr #18
    1484:	40230200 	eormi	r0, r3, r0, lsl #4
    1488:	0001970e 	andeq	r9, r1, lr, lsl #14
    148c:	219a0700 	orrscs	r0, sl, r0, lsl #14
    1490:	000003f9 	strdeq	r0, [r0], -r9
    1494:	0e442302 	cdpeq	3, 4, cr2, cr4, cr2, {0}
    1498:	00000555 	andeq	r0, r0, r5, asr r5
    149c:	f9219c07 			; <UNDEFINED> instruction: 0xf9219c07
    14a0:	02000003 	andeq	r0, r0, #3
    14a4:	ad0e4823 	stcge	8, cr4, [lr, #-140]	; 0xffffff74
    14a8:	07000004 	streq	r0, [r0, -r4]
    14ac:	03f9219e 	mvnseq	r2, #-2147483609	; 0x80000027
    14b0:	23020000 	movwcs	r0, #8192	; 0x2000
    14b4:	090d0e4c 	stmdbeq	sp, {r2, r3, r6, r9, sl, fp}
    14b8:	a0070000 	andge	r0, r7, r0
    14bc:	0003f921 	andeq	pc, r3, r1, lsr #18
    14c0:	50230200 	eorpl	r0, r3, r0, lsl #4
    14c4:	0003b00e 	andeq	fp, r3, lr
    14c8:	1ea20700 	cdpne	7, 10, cr0, cr2, cr0, {0}
    14cc:	000000c1 	andeq	r0, r0, r1, asr #1
    14d0:	0e542302 	cdpeq	3, 5, cr2, cr4, cr2, {0}
    14d4:	0000028a 	andeq	r0, r0, sl, lsl #5
    14d8:	b51ea407 	ldrlt	sl, [lr, #-1031]	; 0xfffffbf9
    14dc:	02000000 	andeq	r0, r0, #0
    14e0:	3e0e5823 	cdpcc	8, 0, cr5, cr14, cr3, {1}
    14e4:	07000003 	streq	r0, [r0, -r3]
    14e8:	00b51ea6 	adcseq	r1, r5, r6, lsr #29
    14ec:	23020000 	movwcs	r0, #8192	; 0x2000
    14f0:	0410005c 	ldreq	r0, [r0], #-92	; 0xffffffa4
    14f4:	00000130 	andeq	r0, r0, r0, lsr r1
    14f8:	01120411 	tsteq	r2, r1, lsl r4
    14fc:	000003f3 	strdeq	r0, [r0], -r3
    1500:	0003f313 	andeq	pc, r3, r3, lsl r3	; <UNPREDICTABLE>
    1504:	04100000 	ldreq	r0, [r0], #-0
    1508:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    150c:	03e70410 	mvneq	r0, #16, 8	; 0x10000000
    1510:	87030000 	strhi	r0, [r3, -r0]
    1514:	07000006 	streq	r0, [r0, -r6]
    1518:	02ff02a8 	rscseq	r0, pc, #168, 4	; 0x8000000a
    151c:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    1520:	7e092e08 	cdpvc	14, 0, cr2, cr9, cr8, {0}
    1524:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    1528:	0000018e 	andeq	r0, r0, lr, lsl #3
    152c:	b50c3008 	strlt	r3, [ip, #-8]
    1530:	02000000 	andeq	r0, r0, #0
    1534:	a20e0023 	andge	r0, lr, #35	; 0x23
    1538:	08000006 	stmdaeq	r0, {r1, r2}
    153c:	00b50c36 	adcseq	r0, r5, r6, lsr ip
    1540:	23020000 	movwcs	r0, #8192	; 0x2000
    1544:	02790e04 	rsbseq	r0, r9, #4, 28	; 0x40
    1548:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    154c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1550:	08230200 	stmdaeq	r3!, {r9}
    1554:	0003240e 	andeq	r2, r3, lr, lsl #8
    1558:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    155c:	000000b5 	strheq	r0, [r0], -r5
    1560:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    1564:	0000069d 	muleq	r0, sp, r6
    1568:	b50c4308 	strlt	r4, [ip, #-776]	; 0xfffffcf8
    156c:	02000000 	andeq	r0, r0, #0
    1570:	250e1023 	strcs	r1, [lr, #-35]	; 0xffffffdd
    1574:	08000008 	stmdaeq	r0, {r3}
    1578:	00b50c46 	adcseq	r0, r5, r6, asr #24
    157c:	23020000 	movwcs	r0, #8192	; 0x2000
    1580:	01350e14 	teqeq	r5, r4, lsl lr
    1584:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    1588:	0000b50c 	andeq	fp, r0, ip, lsl #10
    158c:	18230200 	stmdane	r3!, {r9}
    1590:	07c70300 	strbeq	r0, [r7, r0, lsl #6]
    1594:	4b080000 	blmi	20159c <_Min_Heap_Size+0x200d9c>
    1598:	00040b03 	andeq	r0, r4, r3, lsl #22
    159c:	01070b00 	tsteq	r7, r0, lsl #22
    15a0:	0000003c 	andeq	r0, r0, ip, lsr r0
    15a4:	c9017508 	stmdbgt	r1, {r3, r8, sl, ip, sp, lr}
    15a8:	0c000004 	stceq	0, cr0, [r0], {4}
    15ac:	0000075a 	andeq	r0, r0, sl, asr r7
    15b0:	02ad0c00 	adceq	r0, sp, #0, 24
    15b4:	0c200000 	stceq	0, cr0, [r0], #-0
    15b8:	0000086d 	andeq	r0, r0, sp, ror #16
    15bc:	04bf0c24 	ldrteq	r0, [pc], #3108	; 15c4 <_Min_Heap_Size+0xdc4>
    15c0:	0c210000 	stceq	0, cr0, [r1], #-0
    15c4:	00000700 	andeq	r0, r0, r0, lsl #14
    15c8:	016f0c22 	cmneq	pc, r2, lsr #24
    15cc:	0c230000 	stceq	0, cr0, [r3], #-0
    15d0:	0000080e 	andeq	r0, r0, lr, lsl #16
    15d4:	065f0ca0 	ldrbeq	r0, [pc], -r0, lsr #25
    15d8:	00e00000 	rsceq	r0, r0, r0
    15dc:	00002503 	andeq	r2, r0, r3, lsl #10
    15e0:	03870800 	orreq	r0, r7, #0, 16
    15e4:	0000048a 	andeq	r0, r0, sl, lsl #9
    15e8:	0004c906 	andeq	ip, r4, r6, lsl #18
    15ec:	07de0300 	ldrbeq	r0, [lr, r0, lsl #6]
    15f0:	90080000 	andls	r0, r8, r0
    15f4:	0000b512 	andeq	fp, r0, r2, lsl r5
    15f8:	04da0600 	ldrbeq	r0, [sl], #1536	; 0x600
    15fc:	ca030000 	bgt	c1604 <_Min_Heap_Size+0xc0e04>
    1600:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1604:	00b5129b 	umlalseq	r1, r5, fp, r2
    1608:	eb060000 	bl	181610 <_Min_Heap_Size+0x180e10>
    160c:	0f000004 	svceq	0x00000004
    1610:	00000477 	andeq	r0, r0, r7, ror r4
    1614:	10a00848 	adcne	r0, r0, r8, asr #16
    1618:	000005fa 	strdeq	r0, [r0], -sl
    161c:	0004a40e 	andeq	sl, r4, lr, lsl #8
    1620:	22a20800 	adccs	r0, r2, #0, 16
    1624:	000005fa 	strdeq	r0, [r0], -sl
    1628:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    162c:	00001a84 	andeq	r1, r0, r4, lsl #21
    1630:	7e21a408 	cdpvc	4, 2, cr10, cr1, cr8, {0}
    1634:	02000004 	andeq	r0, r0, #4
    1638:	ee0e0423 	cdp	4, 0, cr0, cr14, cr3, {1}
    163c:	08000001 	stmdaeq	r0, {r0}
    1640:	060022a6 	streq	r2, [r0], -r6, lsr #5
    1644:	23020000 	movwcs	r0, #8192	; 0x2000
    1648:	03760e20 	cmneq	r6, #32, 28	; 0x200
    164c:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    1650:	0000a421 	andeq	sl, r0, r1, lsr #8
    1654:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    1658:	0001420e 	andeq	r4, r1, lr, lsl #4
    165c:	21aa0800 			; <UNDEFINED> instruction: 0x21aa0800
    1660:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1664:	0e262302 	cdpeq	3, 2, cr2, cr6, cr2, {0}
    1668:	00000845 	andeq	r0, r0, r5, asr #16
    166c:	0622ac08 	strteq	sl, [r2], -r8, lsl #24
    1670:	02000006 	andeq	r0, r0, #6
    1674:	6b0e2823 	blvs	38b708 <_Min_Heap_Size+0x38af08>
    1678:	08000003 	stmdaeq	r0, {r0, r1}
    167c:	00a421ae 	adceq	r2, r4, lr, lsr #3
    1680:	23020000 	movwcs	r0, #8192	; 0x2000
    1684:	08890e2c 	stmeq	r9, {r2, r3, r5, r9, sl, fp}
    1688:	b0080000 	andlt	r0, r8, r0
    168c:	0000b021 	andeq	fp, r0, r1, lsr #32
    1690:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    1694:	0008ff0e 	andeq	pc, r8, lr, lsl #30
    1698:	1fb20800 	svcne	0x00b20800
    169c:	000004e6 	andeq	r0, r0, r6, ror #9
    16a0:	0e302302 	cdpeq	3, 3, cr2, cr0, cr2, {0}
    16a4:	00001099 	muleq	r0, r9, r0
    16a8:	f724b408 			; <UNDEFINED> instruction: 0xf724b408
    16ac:	02000004 	andeq	r0, r0, #4
    16b0:	e00e3423 	and	r3, lr, r3, lsr #8
    16b4:	08000004 	stmdaeq	r0, {r2}
    16b8:	060c22b6 			; <UNDEFINED> instruction: 0x060c22b6
    16bc:	23020000 	movwcs	r0, #8192	; 0x2000
    16c0:	02e00e38 	rsceq	r0, r0, #56, 28	; 0x380
    16c4:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
    16c8:	00060c22 	andeq	r0, r6, r2, lsr #24
    16cc:	3c230200 	sfmcc	f0, 4, [r3], #-0
    16d0:	0002a80e 	andeq	sl, r2, lr, lsl #16
    16d4:	21ba0800 			; <UNDEFINED> instruction: 0x21ba0800
    16d8:	000001e5 	andeq	r0, r0, r5, ror #3
    16dc:	0e402302 	cdpeq	3, 4, cr2, cr0, cr2, {0}
    16e0:	0000003b 	andeq	r0, r0, fp, lsr r0
    16e4:	d521bc08 	strle	fp, [r1, #-3080]!	; 0xfffff3f8
    16e8:	02000004 	andeq	r0, r0, #4
    16ec:	f20e4123 	vrhadd.s8	d4, d14, d19
    16f0:	08000008 	stmdaeq	r0, {r3}
    16f4:	04d521c0 	ldrbeq	r2, [r5], #448	; 0x1c0
    16f8:	23020000 	movwcs	r0, #8192	; 0x2000
    16fc:	03b00e42 	movseq	r0, #1056	; 0x420
    1700:	c3080000 	movwgt	r0, #32768	; 0x8000
    1704:	0000c121 	andeq	ip, r0, r1, lsr #2
    1708:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    170c:	b6041000 	strlt	r1, [r4], -r0
    1710:	10000001 	andne	r0, r0, r1
    1714:	00009f04 	andeq	r9, r0, r4, lsl #30
    1718:	93041000 	movwls	r1, #16384	; 0x4000
    171c:	10000000 	andne	r0, r0, r0
    1720:	0003ff04 	andeq	pc, r3, r4, lsl #30
    1724:	04790300 	ldrbteq	r0, [r9], #-768	; 0xfffffd00
    1728:	d5080000 	strle	r0, [r8, #-0]
    172c:	0004fc03 	andeq	pc, r4, r3, lsl #24
    1730:	08010200 	stmdaeq	r1, {r9}
    1734:	0000057d 	andeq	r0, r0, sp, ror r5
    1738:	00061e05 	andeq	r1, r6, r5, lsl #28
    173c:	03371400 	teqeq	r7, #0, 8
    1740:	3b010000 	blcc	41748 <_Min_Heap_Size+0x40f48>
    1744:	0006121b 	andeq	r1, r6, fp, lsl r2
    1748:	15010100 	strne	r0, [r1, #-256]	; 0xffffff00
    174c:	000a0e01 	andeq	r0, sl, r1, lsl #28
    1750:	06ec0100 	strbteq	r0, [ip], r0, lsl #2
    1754:	00077401 	andeq	r7, r7, r1, lsl #8
    1758:	00078c08 	andeq	r8, r7, r8, lsl #24
    175c:	00020b08 	andeq	r0, r2, r8, lsl #22
    1760:	06bd0100 	ldrteq	r0, [sp], r0, lsl #2
    1764:	1c160000 	ldcne	0, cr0, [r6], {-0}
    1768:	0100000a 	tsteq	r0, sl
    176c:	06061dec 	streq	r1, [r6], -ip, ror #27
    1770:	022f0000 	eoreq	r0, pc, #0
    1774:	022b0000 	eoreq	r0, fp, #0
    1778:	c3160000 	tstgt	r6, #0
    177c:	01000009 	tsteq	r0, r9
    1780:	00b52cec 	adcseq	r2, r5, ip, ror #25
    1784:	02540000 	subseq	r0, r4, #0
    1788:	02500000 	subseq	r0, r0, #0
    178c:	56170000 	ldrpl	r0, [r7], -r0
    1790:	cd000006 	stcgt	0, cr0, [r0, #-24]	; 0xffffffe8
    1794:	01000006 	tsteq	r0, r6
    1798:	2c3c0305 	ldccs	3, cr0, [ip], #-20	; 0xffffffec
    179c:	8c180800 	ldchi	8, cr0, [r8], {-0}
    17a0:	7e000009 	cdpvc	0, 0, cr0, cr0, cr9, {0}
    17a4:	01080007 	tsteq	r8, r7
    17a8:	0800077e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sl}
    17ac:	08000780 	stmdaeq	r0, {r7, r8, r9, sl}
    17b0:	1903ef01 	stmdbne	r3, {r0, r8, r9, sl, fp, sp, lr, pc}
    17b4:	0800077e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sl}
    17b8:	00000997 	muleq	r0, r7, r9
    17bc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    17c0:	002bec03 	eoreq	lr, fp, r3, lsl #24
    17c4:	51011a08 	tstpl	r1, r8, lsl #20
    17c8:	2c3c0305 	ldccs	3, cr0, [ip], #-20	; 0xffffffec
    17cc:	00000800 	andeq	r0, r0, r0, lsl #16
    17d0:	0006251b 	andeq	r2, r6, fp, lsl r5
    17d4:	0006cd00 	andeq	ip, r6, r0, lsl #26
    17d8:	008c1c00 	addeq	r1, ip, r0, lsl #24
    17dc:	000d0000 	andeq	r0, sp, r0
    17e0:	0006bd05 	andeq	fp, r6, r5, lsl #26
    17e4:	15011500 	strne	r1, [r1, #-1280]	; 0xfffffb00
    17e8:	01000004 	tsteq	r0, r4
    17ec:	5c0106dd 	stcpl	6, cr0, [r1], {221}	; 0xdd
    17f0:	74080007 	strvc	r0, [r8], #-7
    17f4:	75080007 	strvc	r0, [r8, #-7]
    17f8:	01000002 	tsteq	r0, r2
    17fc:	0000072f 	andeq	r0, r0, pc, lsr #14
    1800:	00065617 	andeq	r5, r6, r7, lsl r6
    1804:	0006cd00 	andeq	ip, r6, r0, lsl #26
    1808:	03050100 	movweq	r0, #20736	; 0x5100
    180c:	08002c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, sp}
    1810:	00098c18 	andeq	r8, r9, r8, lsl ip
    1814:	00076600 	andeq	r6, r7, r0, lsl #12
    1818:	07660108 	strbeq	r0, [r6, -r8, lsl #2]!
    181c:	07680800 	strbeq	r0, [r8, -r0, lsl #16]!
    1820:	e0010800 	and	r0, r1, r0, lsl #16
    1824:	07661903 	strbeq	r1, [r6, -r3, lsl #18]!
    1828:	09970800 	ldmibeq	r7, {fp}
    182c:	011a0000 	tsteq	sl, r0
    1830:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    1834:	1a08002b 	bne	2018e8 <_Min_Heap_Size+0x2010e8>
    1838:	03055101 	movweq	r5, #20737	; 0x5101
    183c:	08002c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, sp}
    1840:	01150000 	tsteq	r5, r0
    1844:	00000978 	andeq	r0, r0, r8, ror r9
    1848:	0106cd01 	tsteq	r6, r1, lsl #26
    184c:	0800074c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl}
    1850:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
    1854:	00000295 	muleq	r0, r5, r2
    1858:	00075401 	andeq	r5, r7, r1, lsl #8
    185c:	07541d00 	ldrbeq	r1, [r4, -r0, lsl #26]
    1860:	09a50800 	stmibeq	r5!, {fp}
    1864:	15000000 	strne	r0, [r0, #-0]
    1868:	000a2d01 	andeq	r2, sl, r1, lsl #26
    186c:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
    1870:	00074201 	andeq	r4, r7, r1, lsl #4
    1874:	00074a08 	andeq	r4, r7, r8, lsl #20
    1878:	0002b508 	andeq	fp, r2, r8, lsl #10
    187c:	07790100 	ldrbeq	r0, [r9, -r0, lsl #2]!
    1880:	481d0000 	ldmdami	sp, {}	; <UNPREDICTABLE>
    1884:	b4080007 	strlt	r0, [r8], #-7
    1888:	00000009 	andeq	r0, r0, r9
    188c:	09e5011e 	stmibeq	r5!, {r1, r2, r3, r4, r8}^
    1890:	ab010000 	blge	41898 <_Min_Heap_Size+0x41098>
    1894:	07400106 	strbeq	r0, [r0, -r6, lsl #2]
    1898:	07420800 	strbeq	r0, [r2, -r0, lsl #16]
    189c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    18a0:	011e0100 	tsteq	lr, r0, lsl #2
    18a4:	00000956 	andeq	r0, r0, r6, asr r9
    18a8:	01069e01 	tsteq	r6, r1, lsl #28
    18ac:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
    18b0:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
    18b4:	01007d02 	tsteq	r0, r2, lsl #26
    18b8:	0a21011e 	beq	841d38 <_Min_Heap_Size+0x841538>
    18bc:	91010000 	mrsls	r0, (UNDEF: 1)
    18c0:	073c0106 	ldreq	r0, [ip, -r6, lsl #2]!
    18c4:	073e0800 	ldreq	r0, [lr, -r0, lsl #16]!
    18c8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    18cc:	01150100 	tsteq	r5, r0, lsl #2
    18d0:	0000098a 	andeq	r0, r0, sl, lsl #19
    18d4:	01068201 	tsteq	r6, r1, lsl #4
    18d8:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
    18dc:	0800073c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl}
    18e0:	000002d5 	ldrdeq	r0, [r0], -r5
    18e4:	00080301 	andeq	r0, r8, r1, lsl #6
    18e8:	06561700 	ldrbeq	r1, [r6], -r0, lsl #14
    18ec:	08130000 	ldmdaeq	r3, {}	; <UNPREDICTABLE>
    18f0:	05010000 	streq	r0, [r1, #-0]
    18f4:	002c5c03 	eoreq	r5, ip, r3, lsl #24
    18f8:	07321908 	ldreq	r1, [r2, -r8, lsl #18]!
    18fc:	09970800 	ldmibeq	r7, {fp}
    1900:	011a0000 	tsteq	sl, r0
    1904:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    1908:	1a08002b 	bne	2019bc <_Min_Heap_Size+0x2011bc>
    190c:	03055101 	movweq	r5, #20737	; 0x5101
    1910:	08002c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp, sp}
    1914:	251b0000 	ldrcs	r0, [fp, #-0]
    1918:	13000006 	movwne	r0, #6
    191c:	1c000008 	stcne	0, cr0, [r0], {8}
    1920:	0000008c 	andeq	r0, r0, ip, lsl #1
    1924:	03050012 	movweq	r0, #20498	; 0x5012
    1928:	15000008 	strne	r0, [r0, #-8]
    192c:	00096701 	andeq	r6, r9, r1, lsl #14
    1930:	06730100 	ldrbteq	r0, [r3], -r0, lsl #2
    1934:	00071401 	andeq	r1, r7, r1, lsl #8
    1938:	00072808 	andeq	r2, r7, r8, lsl #16
    193c:	0002f508 	andeq	pc, r2, r8, lsl #10
    1940:	08600100 	stmdaeq	r0!, {r8}^
    1944:	56170000 	ldrpl	r0, [r7], -r0
    1948:	70000006 	andvc	r0, r0, r6
    194c:	01000008 	tsteq	r0, r8
    1950:	2c700305 	ldclcs	3, cr0, [r0], #-20	; 0xffffffec
    1954:	1e190800 	cdpne	8, 1, cr0, cr9, cr0, {0}
    1958:	97080007 	strls	r0, [r8, -r7]
    195c:	1a000009 	bne	1988 <_Min_Heap_Size+0x1188>
    1960:	03055001 	movweq	r5, #20481	; 0x5001
    1964:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
    1968:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    196c:	002c7003 	eoreq	r7, ip, r3
    1970:	1b000008 	blne	1998 <_Min_Heap_Size+0x1198>
    1974:	00000625 	andeq	r0, r0, r5, lsr #12
    1978:	00000870 	andeq	r0, r0, r0, ror r8
    197c:	00008c1c 	andeq	r8, r0, ip, lsl ip
    1980:	05001000 	streq	r1, [r0, #-0]
    1984:	00000860 	andeq	r0, r0, r0, ror #16
    1988:	09b10115 	ldmibeq	r1!, {r0, r2, r4, r8}
    198c:	64010000 	strvs	r0, [r1], #-0
    1990:	07000106 	streq	r0, [r0, -r6, lsl #2]
    1994:	07140800 	ldreq	r0, [r4, -r0, lsl #16]
    1998:	03150800 	tsteq	r5, #0, 16
    199c:	bd010000 	stclt	0, cr0, [r1, #-0]
    19a0:	17000008 	strne	r0, [r0, -r8]
    19a4:	00000656 	andeq	r0, r0, r6, asr r6
    19a8:	000008cd 	andeq	r0, r0, sp, asr #17
    19ac:	84030501 	strhi	r0, [r3], #-1281	; 0xfffffaff
    19b0:	1908002c 	stmdbne	r8, {r2, r3, r5}
    19b4:	0800070a 	stmdaeq	r0, {r1, r3, r8, r9, sl}
    19b8:	00000997 	muleq	r0, r7, r9
    19bc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    19c0:	002bec03 	eoreq	lr, fp, r3, lsl #24
    19c4:	51011a08 	tstpl	r1, r8, lsl #20
    19c8:	2c840305 	stccs	3, cr0, [r4], {5}
    19cc:	00000800 	andeq	r0, r0, r0, lsl #16
    19d0:	0006251b 	andeq	r2, r6, fp, lsl r5
    19d4:	0008cd00 	andeq	ip, r8, r0, lsl #26
    19d8:	008c1c00 	addeq	r1, ip, r0, lsl #24
    19dc:	00110000 	andseq	r0, r1, r0
    19e0:	0008bd05 	andeq	fp, r8, r5, lsl #26
    19e4:	3d011500 	cfstr32cc	mvfx1, [r1, #-0]
    19e8:	0100000a 	tsteq	r0, sl
    19ec:	00010655 	andeq	r0, r1, r5, asr r6
    19f0:	00000000 	andeq	r0, r0, r0
    19f4:	35000000 	strcc	r0, [r0, #-0]
    19f8:	01000003 	tsteq	r0, r3
    19fc:	0000091a 	andeq	r0, r0, sl, lsl r9
    1a00:	00065617 	andeq	r5, r6, r7, lsl r6
    1a04:	00092a00 	andeq	r2, r9, r0, lsl #20
    1a08:	03050100 	movweq	r0, #20736	; 0x5100
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	00000019 	andeq	r0, r0, r9, lsl r0
    1a14:	00099700 	andeq	r9, r9, r0, lsl #14
    1a18:	50011a00 	andpl	r1, r1, r0, lsl #20
    1a1c:	2bec0305 	blcs	ffb02638 <_estack+0xdfb01400>
    1a20:	011a0800 	tsteq	sl, r0, lsl #16
    1a24:	00030551 	andeq	r0, r3, r1, asr r5
    1a28:	00000000 	andeq	r0, r0, r0
    1a2c:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    1a30:	092a0000 	stmdbeq	sl!, {}	; <UNPREDICTABLE>
    1a34:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    1a38:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1a3c:	091a0500 	ldmdbeq	sl, {r8, sl}
    1a40:	01150000 	tsteq	r5, r0
    1a44:	0000094a 	andeq	r0, r0, sl, asr #18
    1a48:	01064601 	tsteq	r6, r1, lsl #12
    1a4c:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
    1a50:	08000700 	stmdaeq	r0, {r8, r9, sl}
    1a54:	00000355 	andeq	r0, r0, r5, asr r3
    1a58:	00097701 	andeq	r7, r9, r1, lsl #14
    1a5c:	06561700 	ldrbeq	r1, [r6], -r0, lsl #14
    1a60:	09870000 	stmibeq	r7, {}	; <UNPREDICTABLE>
    1a64:	05010000 	streq	r0, [r1, #-0]
    1a68:	002c9803 	eoreq	r9, ip, r3, lsl #16
    1a6c:	06f61908 	ldrbteq	r1, [r6], r8, lsl #18
    1a70:	09970800 	ldmibeq	r7, {fp}
    1a74:	011a0000 	tsteq	sl, r0
    1a78:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    1a7c:	1a08002b 	bne	201b30 <_Min_Heap_Size+0x201330>
    1a80:	03055101 	movweq	r5, #20737	; 0x5101
    1a84:	08002c98 	stmdaeq	r0, {r3, r4, r7, sl, fp, sp}
    1a88:	251b0000 	ldrcs	r0, [fp, #-0]
    1a8c:	87000006 	strhi	r0, [r0, -r6]
    1a90:	1c000009 	stcne	0, cr0, [r0], {9}
    1a94:	0000008c 	andeq	r0, r0, ip, lsl #1
    1a98:	7705000b 	strvc	r0, [r5, -fp]
    1a9c:	1f000009 	svcne	0x00000009
    1aa0:	00000a00 	andeq	r0, r0, r0, lsl #20
    1aa4:	1b03c002 	blne	f1ab4 <_Min_Heap_Size+0xf12b4>
    1aa8:	01200301 			; <UNDEFINED> instruction: 0x01200301
    1aac:	00000001 	andeq	r0, r0, r1
    1ab0:	00000000 	andeq	r0, r0, r0
    1ab4:	05c80900 	strbeq	r0, [r8, #2304]	; 0x900
    1ab8:	9d010121 	stflss	f0, [r1, #-132]	; 0xffffff7c
    1abc:	9d000009 	stcls	0, cr0, [r0, #-36]	; 0xffffffdc
    1ac0:	08000009 	stmdaeq	r0, {r0, r3}
    1ac4:	20060302 	andcs	r0, r6, r2, lsl #6
    1ac8:	09f40101 	ldmibeq	r4!, {r0, r8}^
    1acc:	09f40000 	ldmibeq	r4!, {}^	; <UNPREDICTABLE>
    1ad0:	e80a0000 	stmda	sl, {}	; <UNPREDICTABLE>
    1ad4:	03040006 	movweq	r0, #16390	; 0x4006
    1ad8:	00020000 	andeq	r0, r2, r0
    1adc:	00000414 	andeq	r0, r0, r4, lsl r4
    1ae0:	05880104 	streq	r0, [r8, #260]	; 0x104
    1ae4:	570c0000 	strpl	r0, [ip, -r0]
    1ae8:	9500000a 	strls	r0, [r0, #-10]
    1aec:	c8000008 	stmdagt	r0, {r3}
	...
    1af8:	04000000 	streq	r0, [r0], #-0
    1afc:	02000009 	andeq	r0, r0, #9
    1b00:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    1b04:	01020000 	mrseq	r0, (UNDEF: 2)
    1b08:	00057408 	andeq	r7, r5, r8, lsl #8
    1b0c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    1b10:	000003fd 	strdeq	r0, [r0], -sp
    1b14:	8f070202 	svchi	0x00070202
    1b18:	02000007 	andeq	r0, r0, #7
    1b1c:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    1b20:	c2030000 	andgt	r0, r3, #0
    1b24:	02000002 	andeq	r0, r0, #2
    1b28:	0058194f 	subseq	r1, r8, pc, asr #18
    1b2c:	04020000 	streq	r0, [r2], #-0
    1b30:	0000b307 	andeq	fp, r0, r7, lsl #6
    1b34:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    1b38:	000002e7 	andeq	r0, r0, r7, ror #5
    1b3c:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    1b40:	04000000 	streq	r0, [r0], #-0
    1b44:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1b48:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    1b4c:	0000b807 	andeq	fp, r0, r7, lsl #16
    1b50:	02c40300 	sbceq	r0, r4, #0, 6
    1b54:	30030000 	andcc	r0, r3, r0
    1b58:	00004c14 	andeq	r4, r0, r4, lsl ip
    1b5c:	007b0500 	rsbseq	r0, fp, r0, lsl #10
    1b60:	7b060000 	blvc	181b68 <_Min_Heap_Size+0x181368>
    1b64:	9c000000 	stcls	0, cr0, [r0], {-0}
    1b68:	07000000 	streq	r0, [r0, -r0]
    1b6c:	00000074 	andeq	r0, r0, r4, ror r0
    1b70:	88080001 	stmdahi	r8, {r0}
    1b74:	0901f404 	stmdbeq	r1, {r2, sl, ip, sp, lr, pc}
    1b78:	00000288 	andeq	r0, r0, r8, lsl #5
    1b7c:	00524309 	subseq	r4, r2, r9, lsl #6
    1b80:	1101f604 	tstne	r1, r4, lsl #12	; <UNPREDICTABLE>
    1b84:	00000087 	andeq	r0, r0, r7, lsl #1
    1b88:	0a002302 	beq	a798 <_Min_Heap_Size+0x9f98>
    1b8c:	00000282 	andeq	r0, r0, r2, lsl #5
    1b90:	1101f704 	tstne	r1, r4, lsl #14	; <UNPREDICTABLE>
    1b94:	00000087 	andeq	r0, r0, r7, lsl #1
    1b98:	0a042302 	beq	10a7a8 <_Min_Heap_Size+0x109fa8>
    1b9c:	00000285 	andeq	r0, r0, r5, lsl #5
    1ba0:	1101f804 	tstne	r1, r4, lsl #16	; <UNPREDICTABLE>
    1ba4:	00000087 	andeq	r0, r0, r7, lsl #1
    1ba8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    1bac:	00524943 	subseq	r4, r2, r3, asr #18
    1bb0:	1101f904 	tstne	r1, r4, lsl #18	; <UNPREDICTABLE>
    1bb4:	00000087 	andeq	r0, r0, r7, lsl #1
    1bb8:	0a0c2302 	beq	30a7c8 <_Min_Heap_Size+0x309fc8>
    1bbc:	00000166 	andeq	r0, r0, r6, ror #2
    1bc0:	1101fa04 	tstne	r1, r4, lsl #20	; <UNPREDICTABLE>
    1bc4:	00000087 	andeq	r0, r0, r7, lsl #1
    1bc8:	0a102302 	beq	40a7d8 <_Min_Heap_Size+0x409fd8>
    1bcc:	00000717 	andeq	r0, r0, r7, lsl r7
    1bd0:	1101fb04 	tstne	r1, r4, lsl #22	; <UNPREDICTABLE>
    1bd4:	00000087 	andeq	r0, r0, r7, lsl #1
    1bd8:	0a142302 	beq	50a7e8 <_Min_Heap_Size+0x509fe8>
    1bdc:	0000067c 	andeq	r0, r0, ip, ror r6
    1be0:	1101fc04 	tstne	r1, r4, lsl #24	; <UNPREDICTABLE>
    1be4:	00000087 	andeq	r0, r0, r7, lsl #1
    1be8:	0a182302 	beq	60a7f8 <_Min_Heap_Size+0x609ff8>
    1bec:	0000050f 	andeq	r0, r0, pc, lsl #10
    1bf0:	1101fd04 	tstne	r1, r4, lsl #26	; <UNPREDICTABLE>
    1bf4:	0000007b 	andeq	r0, r0, fp, ror r0
    1bf8:	0a1c2302 	beq	70a808 <_Min_Heap_Size+0x70a008>
    1bfc:	000004fa 	strdeq	r0, [r0], -sl
    1c00:	1101fe04 	tstne	r1, r4, lsl #28	; <UNPREDICTABLE>
    1c04:	00000087 	andeq	r0, r0, r7, lsl #1
    1c08:	0a202302 	beq	80a818 <_Min_Heap_Size+0x80a018>
    1c0c:	000001f9 	strdeq	r0, [r0], -r9
    1c10:	1101ff04 	tstne	r1, r4, lsl #30	; <UNPREDICTABLE>
    1c14:	00000087 	andeq	r0, r0, r7, lsl #1
    1c18:	0a242302 	beq	90a828 <_Min_Heap_Size+0x90a028>
    1c1c:	00000519 	andeq	r0, r0, r9, lsl r5
    1c20:	11020004 	tstne	r2, r4
    1c24:	0000008c 	andeq	r0, r0, ip, lsl #1
    1c28:	0a282302 	beq	a0a838 <_Min_Heap_Size+0xa0a038>
    1c2c:	00000881 	andeq	r0, r0, r1, lsl #17
    1c30:	11020104 	tstne	r2, r4, lsl #2
    1c34:	00000087 	andeq	r0, r0, r7, lsl #1
    1c38:	0a302302 	beq	c0a848 <_Min_Heap_Size+0xc0a048>
    1c3c:	00000787 	andeq	r0, r0, r7, lsl #15
    1c40:	11020204 	tstne	r2, r4, lsl #4
    1c44:	00000087 	andeq	r0, r0, r7, lsl #1
    1c48:	0a342302 	beq	d0a858 <_Min_Heap_Size+0xd0a058>
    1c4c:	0000049c 	muleq	r0, ip, r4
    1c50:	11020304 	tstne	r2, r4, lsl #6
    1c54:	00000087 	andeq	r0, r0, r7, lsl #1
    1c58:	0a382302 	beq	e0a868 <_Min_Heap_Size+0xe0a068>
    1c5c:	00000523 	andeq	r0, r0, r3, lsr #10
    1c60:	11020404 	tstne	r2, r4, lsl #8
    1c64:	0000007b 	andeq	r0, r0, fp, ror r0
    1c68:	0a3c2302 	beq	f0a878 <_Min_Heap_Size+0xf0a078>
    1c6c:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    1c70:	11020504 	tstne	r2, r4, lsl #10
    1c74:	00000087 	andeq	r0, r0, r7, lsl #1
    1c78:	0a402302 	beq	100a888 <_Min_Heap_Size+0x100a088>
    1c7c:	00000674 	andeq	r0, r0, r4, ror r6
    1c80:	11020604 	tstne	r2, r4, lsl #12
    1c84:	00000087 	andeq	r0, r0, r7, lsl #1
    1c88:	0a442302 	beq	110a898 <_Min_Heap_Size+0x110a098>
    1c8c:	0000052d 	andeq	r0, r0, sp, lsr #10
    1c90:	11020704 	tstne	r2, r4, lsl #14
    1c94:	0000008c 	andeq	r0, r0, ip, lsl #1
    1c98:	0a482302 	beq	120a8a8 <_Min_Heap_Size+0x120a0a8>
    1c9c:	0000012b 	andeq	r0, r0, fp, lsr #2
    1ca0:	11020804 	tstne	r2, r4, lsl #16
    1ca4:	00000087 	andeq	r0, r0, r7, lsl #1
    1ca8:	0a502302 	beq	140a8b8 <_Min_Heap_Size+0x140a0b8>
    1cac:	000004d6 	ldrdeq	r0, [r0], -r6
    1cb0:	11020904 	tstne	r2, r4, lsl #18
    1cb4:	00000087 	andeq	r0, r0, r7, lsl #1
    1cb8:	0a542302 	beq	150a8c8 <_Min_Heap_Size+0x150a0c8>
    1cbc:	00000642 	andeq	r0, r0, r2, asr #12
    1cc0:	11020a04 	tstne	r2, r4, lsl #20
    1cc4:	00000087 	andeq	r0, r0, r7, lsl #1
    1cc8:	0a582302 	beq	160a8d8 <_Min_Heap_Size+0x160a0d8>
    1ccc:	00000537 	andeq	r0, r0, r7, lsr r5
    1cd0:	11020b04 	tstne	r2, r4, lsl #22
    1cd4:	0000007b 	andeq	r0, r0, fp, ror r0
    1cd8:	0a5c2302 	beq	170a8e8 <_Min_Heap_Size+0x170a0e8>
    1cdc:	0000001b 	andeq	r0, r0, fp, lsl r0
    1ce0:	11020c04 	tstne	r2, r4, lsl #24
    1ce4:	00000087 	andeq	r0, r0, r7, lsl #1
    1ce8:	0a602302 	beq	180a8f8 <_Min_Heap_Size+0x180a0f8>
    1cec:	000003ee 	andeq	r0, r0, lr, ror #7
    1cf0:	11020d04 	tstne	r2, r4, lsl #26
    1cf4:	00000087 	andeq	r0, r0, r7, lsl #1
    1cf8:	0a642302 	beq	190a908 <_Min_Heap_Size+0x190a108>
    1cfc:	00000541 	andeq	r0, r0, r1, asr #10
    1d00:	11020e04 	tstne	r2, r4, lsl #28
    1d04:	0000008c 	andeq	r0, r0, ip, lsl #1
    1d08:	0a682302 	beq	1a0a918 <_Min_Heap_Size+0x1a0a118>
    1d0c:	00000809 	andeq	r0, r0, r9, lsl #16
    1d10:	11020f04 	tstne	r2, r4, lsl #30
    1d14:	00000087 	andeq	r0, r0, r7, lsl #1
    1d18:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    1d1c:	00525343 	subseq	r5, r2, r3, asr #6
    1d20:	11021004 	tstne	r2, r4
    1d24:	00000087 	andeq	r0, r0, r7, lsl #1
    1d28:	0a742302 	beq	1d0a938 <_Min_Heap_Size+0x1d0a138>
    1d2c:	0000054b 	andeq	r0, r0, fp, asr #10
    1d30:	11021104 	tstne	r2, r4, lsl #2
    1d34:	0000008c 	andeq	r0, r0, ip, lsl #1
    1d38:	0a782302 	beq	1e0a948 <_Min_Heap_Size+0x1e0a148>
    1d3c:	000007d8 	ldrdeq	r0, [r0], -r8
    1d40:	11021204 	tstne	r2, r4, lsl #4
    1d44:	00000087 	andeq	r0, r0, r7, lsl #1
    1d48:	01802303 	orreq	r2, r0, r3, lsl #6
    1d4c:	0003810a 	andeq	r8, r3, sl, lsl #2
    1d50:	02130400 	andseq	r0, r3, #0, 8
    1d54:	00008711 	andeq	r8, r0, r1, lsl r7
    1d58:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    1d5c:	cd0b0001 	stcgt	0, cr0, [fp, #-4]
    1d60:	04000001 	streq	r0, [r0], #-1
    1d64:	9c030214 	sfmls	f0, 4, [r3], {20}
    1d68:	02000000 	andeq	r0, r0, #0
    1d6c:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    1d70:	010c0000 	mrseq	r0, (UNDEF: 12)
    1d74:	00000930 	andeq	r0, r0, r0, lsr r9
    1d78:	01062a01 	tsteq	r6, r1, lsl #20
    1d7c:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
    1d80:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
    1d84:	00000375 	andeq	r0, r0, r5, ror r3
    1d88:	078e0d01 	streq	r0, [lr, r1, lsl #26]
    1d8c:	07a60800 	streq	r0, [r6, r0, lsl #16]!
    1d90:	02d00800 	sbcseq	r0, r0, #0, 16
    1d94:	b60e0000 	strlt	r0, [lr], -r0
    1d98:	01000001 	tsteq	r0, r1
    1d9c:	0087032e 	addeq	r0, r7, lr, lsr #6
    1da0:	91020000 	mrsls	r0, (UNDEF: 2)
    1da4:	a60d0074 			; <UNDEFINED> instruction: 0xa60d0074
    1da8:	ba080007 	blt	201dcc <_Min_Heap_Size+0x2015cc>
    1dac:	ed080007 	stc	0, cr0, [r8, #-28]	; 0xffffffe4
    1db0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1db4:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    1db8:	87032f01 	strhi	r2, [r3, -r1, lsl #30]
    1dbc:	02000000 	andeq	r0, r0, #0
    1dc0:	0f007891 	svceq	0x00007891
    1dc4:	080007ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl}
    1dc8:	080007ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl}
    1dcc:	0001b60e 	andeq	fp, r1, lr, lsl #12
    1dd0:	03300100 	teqeq	r0, #0, 2
    1dd4:	00000087 	andeq	r0, r0, r7, lsl #1
    1dd8:	007c9102 	rsbseq	r9, ip, r2, lsl #2
    1ddc:	0d640000 	stcleq	0, cr0, [r4, #-0]
    1de0:	00020000 	andeq	r0, r2, r0
    1de4:	000004e7 	andeq	r0, r0, r7, ror #9
    1de8:	05880104 	streq	r0, [r8, #260]	; 0x104
    1dec:	9c0c0000 	stcls	0, cr0, [ip], {-0}
    1df0:	9500000f 	strls	r0, [r0, #-15]
    1df4:	d8000008 	stmdale	r0, {r3}
	...
    1e00:	73000000 	movwvc	r0, #0
    1e04:	0200000a 	andeq	r0, r0, #10
    1e08:	023c0105 	eorseq	r0, ip, #1073741825	; 0x40000001
    1e0c:	42040000 	andmi	r0, r4, #0
    1e10:	00023c01 	andeq	r3, r2, r1, lsl #24
    1e14:	0ccd0300 	stcleq	3, cr0, [sp], {0}
    1e18:	03720000 	cmneq	r2, #0
    1e1c:	00000cfc 	strdeq	r0, [r0], -ip
    1e20:	0d5c0374 	ldcleq	3, cr0, [ip, #-464]	; 0xfffffe30
    1e24:	03750000 	cmneq	r5, #0
    1e28:	00000c03 	andeq	r0, r0, r3, lsl #24
    1e2c:	0dae0376 	stceq	3, cr0, [lr, #472]!	; 0x1d8
    1e30:	037b0000 	cmneq	fp, #0
    1e34:	00000f29 	andeq	r0, r0, r9, lsr #30
    1e38:	1007037c 	andne	r0, r7, ip, ror r3
    1e3c:	037e0000 	cmneq	lr, #0
    1e40:	00000b75 	andeq	r0, r0, r5, ror fp
    1e44:	0ce1047f 	cfstrdeq	mvd0, [r1], #508	; 0x1fc
    1e48:	04000000 	streq	r0, [r0], #-0
    1e4c:	00000ecd 	andeq	r0, r0, sp, asr #29
    1e50:	0d120401 	cfldrseq	mvf0, [r2, #-4]
    1e54:	04020000 	streq	r0, [r2], #-0
    1e58:	00000a70 	andeq	r0, r0, r0, ror sl
    1e5c:	0ada0403 	beq	ff682e70 <_estack+0xdf681c38>
    1e60:	04040000 	streq	r0, [r4], #-0
    1e64:	00000f5c 	andeq	r0, r0, ip, asr pc
    1e68:	0efa0405 	cdpeq	4, 15, cr0, cr10, cr5, {0}
    1e6c:	04060000 	streq	r0, [r6], #-0
    1e70:	00000c6d 	andeq	r0, r0, sp, ror #24
    1e74:	0a7e0407 	beq	1f82e98 <_Min_Heap_Size+0x1f82698>
    1e78:	04080000 	streq	r0, [r8], #-0
    1e7c:	00000ffc 	strdeq	r0, [r0], -ip
    1e80:	0de90409 	cfstrdeq	mvd0, [r9, #36]!	; 0x24
    1e84:	040a0000 	streq	r0, [sl], #-0
    1e88:	00000e45 	andeq	r0, r0, r5, asr #28
    1e8c:	0e0f040b 	cdpeq	4, 0, cr0, cr15, cr11, {0}
    1e90:	040c0000 	streq	r0, [ip], #-0
    1e94:	00000b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
    1e98:	0f65040d 	svceq	0x0065040d
    1e9c:	040e0000 	streq	r0, [lr], #-0
    1ea0:	00000f05 	andeq	r0, r0, r5, lsl #30
    1ea4:	0c85040f 	cfstrseq	mvf0, [r5], {15}
    1ea8:	04100000 	ldreq	r0, [r0], #-0
    1eac:	00000a89 	andeq	r0, r0, r9, lsl #21
    1eb0:	0ec40411 	mcreq	4, 6, r0, cr4, cr1, {0}
    1eb4:	04120000 	ldreq	r0, [r2], #-0
    1eb8:	00000c78 	andeq	r0, r0, r8, ror ip
    1ebc:	0c210413 	cfstrseq	mvf0, [r1], #-76	; 0xffffffb4
    1ec0:	04140000 	ldreq	r0, [r4], #-0
    1ec4:	00000fca 	andeq	r0, r0, sl, asr #31
    1ec8:	0d220415 	cfstrseq	mvf0, [r2, #-84]!	; 0xffffffac
    1ecc:	04160000 	ldreq	r0, [r6], #-0
    1ed0:	00000fd8 	ldrdeq	r0, [r0], -r8
    1ed4:	0d750417 	cfldrdeq	mvd0, [r5, #-92]!	; 0xffffffa4
    1ed8:	04180000 	ldreq	r0, [r8], #-0
    1edc:	00000f89 	andeq	r0, r0, r9, lsl #31
    1ee0:	0b5d0419 	bleq	1742f4c <_Min_Heap_Size+0x174274c>
    1ee4:	041a0000 	ldreq	r0, [sl], #-0
    1ee8:	00000c60 	andeq	r0, r0, r0, ror #24
    1eec:	0ae5041b 	beq	ff942f60 <_estack+0xdf941d28>
    1ef0:	041c0000 	ldreq	r0, [ip], #-0
    1ef4:	00000e82 	andeq	r0, r0, r2, lsl #29
    1ef8:	0c2f041d 	cfstrseq	mvf0, [pc], #-116	; 1e8c <_Min_Heap_Size+0x168c>
    1efc:	041e0000 	ldreq	r0, [lr], #-0
    1f00:	00000c53 	andeq	r0, r0, r3, asr ip
    1f04:	0bd3041f 	bleq	ff4c2f88 <_estack+0xdf4c1d50>
    1f08:	04200000 	strteq	r0, [r0], #-0
    1f0c:	00000e02 	andeq	r0, r0, r2, lsl #28
    1f10:	0d470421 	cfstrdeq	mvd0, [r7, #-132]	; 0xffffff7c
    1f14:	04220000 	strteq	r0, [r2], #-0
    1f18:	00000da4 	andeq	r0, r0, r4, lsr #27
    1f1c:	0b1a0423 	bleq	682fb0 <_Min_Heap_Size+0x6827b0>
    1f20:	04240000 	strteq	r0, [r4], #-0
    1f24:	00000e8c 	andeq	r0, r0, ip, lsl #29
    1f28:	0c390425 	cfldrseq	mvf0, [r9], #-148	; 0xffffff6c
    1f2c:	04260000 	strteq	r0, [r6], #-0
    1f30:	00000b82 	andeq	r0, r0, r2, lsl #23
    1f34:	0e730427 	cdpeq	4, 7, cr0, cr3, cr7, {1}
    1f38:	04280000 	strteq	r0, [r8], #-0
    1f3c:	00000e57 	andeq	r0, r0, r7, asr lr
    1f40:	0dd80429 	cfldrdeq	mvd0, [r8, #164]	; 0xa4
    1f44:	042a0000 	strteq	r0, [sl], #-0
    1f48:	00000b24 	andeq	r0, r0, r4, lsr #22
    1f4c:	0a9b042b 	beq	fe6c3000 <_estack+0xde6c1dc8>
    1f50:	042c0000 	strteq	r0, [ip], #-0
    1f54:	00000c97 	muleq	r0, r7, ip
    1f58:	0fe5042d 	svceq	0x00e5042d
    1f5c:	042e0000 	strteq	r0, [lr], #-0
    1f60:	00001026 	andeq	r1, r0, r6, lsr #32
    1f64:	0edd042f 	cdpeq	4, 13, cr0, cr13, cr15, {1}
    1f68:	04300000 	ldrteq	r0, [r0], #-0
    1f6c:	00000ff2 	strdeq	r0, [r0], -r2
    1f70:	0bf90431 	bleq	ffe4303c <_estack+0xdfe41e04>
    1f74:	04320000 	ldrteq	r0, [r2], #-0
    1f78:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f7c:	0dc30433 	cfstrdeq	mvd0, [r3, #204]	; 0xcc
    1f80:	04340000 	ldrteq	r0, [r4], #-0
    1f84:	00000d6a 	andeq	r0, r0, sl, ror #26
    1f88:	0df40435 	cfldrdeq	mvd0, [r4, #212]!	; 0xd4
    1f8c:	04360000 	ldrteq	r0, [r6], #-0
    1f90:	00000d88 	andeq	r0, r0, r8, lsl #27
    1f94:	0d300437 	cfldrseq	mvf0, [r0, #-220]!	; 0xffffff24
    1f98:	04380000 	ldrteq	r0, [r8], #-0
    1f9c:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    1fa0:	10380439 	eorsne	r0, r8, r9, lsr r4
    1fa4:	043a0000 	ldrteq	r0, [sl], #-0
    1fa8:	00000e21 	andeq	r0, r0, r1, lsr #28
    1fac:	0bb1043b 	bleq	fec430a0 <_estack+0xdec41e68>
    1fb0:	043c0000 	ldrteq	r0, [ip], #-0
    1fb4:	00000e33 	andeq	r0, r0, r3, lsr lr
    1fb8:	0aef043f 	beq	ffbc30bc <_estack+0xdfbc1e84>
    1fbc:	04400000 	strbeq	r0, [r0], #-0
    1fc0:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    1fc4:	0beb0441 	bleq	ffac30d0 <_estack+0xdfac1e98>
    1fc8:	04420000 	strbeq	r0, [r2], #-0
    1fcc:	00000cc1 	andeq	r0, r0, r1, asr #25
    1fd0:	0b4b0443 	bleq	12c30e4 <_Min_Heap_Size+0x12c28e4>
    1fd4:	04440000 	strbeq	r0, [r4], #-0
    1fd8:	00000f17 	andeq	r0, r0, r7, lsl pc
    1fdc:	0caf0445 	cfstrseq	mvf0, [pc], #276	; 20f8 <_Min_Heap_Size+0x18f8>
    1fe0:	04460000 	strbeq	r0, [r6], #-0
    1fe4:	00000afd 	strdeq	r0, [r0], -sp
    1fe8:	0f3b0447 	svceq	0x003b0447
    1fec:	04480000 	strbeq	r0, [r8], #-0
    1ff0:	00000e66 	andeq	r0, r0, r6, ror #28
    1ff4:	0fb00449 	svceq	0x00b00449
    1ff8:	044a0000 	strbeq	r0, [sl], #-0
    1ffc:	00001013 	andeq	r1, r0, r3, lsl r0
    2000:	0ceb044b 	cfstrdeq	mvd0, [fp], #300	; 0x12c
    2004:	044c0000 	strbeq	r0, [ip], #-0
    2008:	00000d92 	muleq	r0, r2, sp
    200c:	0ead044d 	cdpeq	4, 10, cr0, cr13, cr13, {2}
    2010:	04500000 	ldrbeq	r0, [r0], #-0
    2014:	00000dba 			; <UNDEFINED> instruction: 0x00000dba
    2018:	01050051 	qaddeq	r0, r1, r5
    201c:	00057606 	andeq	r7, r5, r6, lsl #12
    2020:	00660600 	rsbeq	r0, r6, r0, lsl #12
    2024:	2b020000 	blcs	8202c <_Min_Heap_Size+0x8182c>
    2028:	00024f18 	andeq	r4, r2, r8, lsl pc
    202c:	08010500 	stmdaeq	r1, {r8, sl}
    2030:	00000574 	andeq	r0, r0, r4, ror r5
    2034:	fd050205 	stc2	2, cr0, [r5, #-20]	; 0xffffffec
    2038:	06000003 	streq	r0, [r0], -r3
    203c:	000006f5 	strdeq	r0, [r0], -r5
    2040:	69193902 	ldmdbvs	r9, {r1, r8, fp, ip, sp}
    2044:	05000002 	streq	r0, [r0, #-2]
    2048:	078f0702 	streq	r0, [pc, r2, lsl #14]
    204c:	04050000 	streq	r0, [r5], #-0
    2050:	0002ec05 	andeq	lr, r2, r5, lsl #24
    2054:	02c20600 	sbceq	r0, r2, #0, 12
    2058:	4f020000 	svcmi	0x00020000
    205c:	00028319 	andeq	r8, r2, r9, lsl r3
    2060:	07040500 	streq	r0, [r4, -r0, lsl #10]
    2064:	000000b3 	strheq	r0, [r0], -r3
    2068:	e7050805 	str	r0, [r5, -r5, lsl #16]
    206c:	05000002 	streq	r0, [r0, #-2]
    2070:	00ae0708 	adceq	r0, lr, r8, lsl #14
    2074:	04070000 	streq	r0, [r7], #-0
    2078:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    207c:	07040500 	streq	r0, [r4, -r0, lsl #10]
    2080:	000000b8 	strheq	r0, [r0], -r8
    2084:	00006806 	andeq	r6, r0, r6, lsl #16
    2088:	13180300 	tstne	r8, #0, 6
    208c:	00000243 	andeq	r0, r0, r3, asr #4
    2090:	0002a608 	andeq	sl, r2, r8, lsl #12
    2094:	06f70600 	ldrbteq	r0, [r7], r0, lsl #12
    2098:	24030000 	strcs	r0, [r3], #-0
    209c:	00025d14 	andeq	r5, r2, r4, lsl sp
    20a0:	02b70900 	adcseq	r0, r7, #0, 18
    20a4:	c4060000 	strgt	r0, [r6], #-0
    20a8:	03000002 	movweq	r0, #2
    20ac:	02771430 	rsbseq	r1, r7, #48, 8	; 0x30000000
    20b0:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
    20b4:	0a000002 	beq	20c4 <_Min_Heap_Size+0x18c4>
    20b8:	000002c8 	andeq	r0, r0, r8, asr #5
    20bc:	000002e9 	andeq	r0, r0, r9, ror #5
    20c0:	00029f0b 	andeq	r9, r2, fp, lsl #30
    20c4:	0c000100 	stfeqs	f0, [r0], {-0}
    20c8:	01440418 	cmpeq	r4, r8, lsl r4
    20cc:	00035309 	andeq	r5, r3, r9, lsl #6
    20d0:	52430d00 	subpl	r0, r3, #0, 26
    20d4:	01460400 	cmpeq	r6, r0, lsl #8
    20d8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20dc:	00230200 	eoreq	r0, r3, r0, lsl #4
    20e0:	0007550e 	andeq	r5, r7, lr, lsl #10
    20e4:	01470400 	cmpeq	r7, r0, lsl #8
    20e8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    20f0:	5241500d 	subpl	r5, r1, #13
    20f4:	01480400 	cmpeq	r8, r0, lsl #8
    20f8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20fc:	08230200 	stmdaeq	r3!, {r9}
    2100:	0000420e 	andeq	r4, r0, lr, lsl #4
    2104:	01490400 	cmpeq	r9, r0, lsl #8
    2108:	0002d411 	andeq	sp, r2, r1, lsl r4
    210c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2110:	0007ae0e 	andeq	sl, r7, lr, lsl #28
    2114:	014a0400 	cmpeq	sl, r0, lsl #8
    2118:	0002d411 	andeq	sp, r2, r1, lsl r4
    211c:	10230200 	eorne	r0, r3, r0, lsl #4
    2120:	5243460d 	subpl	r4, r3, #13631488	; 0xd00000
    2124:	014b0400 	cmpeq	fp, r0, lsl #8
    2128:	0002d411 	andeq	sp, r2, r1, lsl r4
    212c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2130:	07740f00 	ldrbeq	r0, [r4, -r0, lsl #30]!
    2134:	4c040000 	stcmi	0, cr0, [r4], {-0}
    2138:	02e90301 	rsceq	r0, r9, #67108864	; 0x4000000
    213c:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    2140:	0901ae04 	stmdbeq	r1, {r2, r9, sl, fp, sp, pc}
    2144:	000003fb 	strdeq	r0, [r0], -fp
    2148:	000fc40e 	andeq	ip, pc, lr, lsl #8
    214c:	01b00400 	lslseq	r0, r0, #8
    2150:	0002d411 	andeq	sp, r2, r1, lsl r4
    2154:	00230200 	eoreq	r0, r3, r0, lsl #4
    2158:	000ed60e 	andeq	sp, lr, lr, lsl #12
    215c:	01b10400 			; <UNDEFINED> instruction: 0x01b10400
    2160:	0002d411 	andeq	sp, r2, r1, lsl r4
    2164:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2168:	000d540e 	andeq	r5, sp, lr, lsl #8
    216c:	01b20400 			; <UNDEFINED> instruction: 0x01b20400
    2170:	0002d411 	andeq	sp, r2, r1, lsl r4
    2174:	08230200 	stmdaeq	r3!, {r9}
    2178:	000d9e0e 	andeq	r9, sp, lr, lsl #28
    217c:	01b30400 			; <UNDEFINED> instruction: 0x01b30400
    2180:	0002d411 	andeq	sp, r2, r1, lsl r4
    2184:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2188:	5244490d 	subpl	r4, r4, #212992	; 0x34000
    218c:	01b40400 			; <UNDEFINED> instruction: 0x01b40400
    2190:	0002d411 	andeq	sp, r2, r1, lsl r4
    2194:	10230200 	eorne	r0, r3, r0, lsl #4
    2198:	52444f0d 	subpl	r4, r4, #13, 30	; 0x34
    219c:	01b50400 			; <UNDEFINED> instruction: 0x01b50400
    21a0:	0002d411 	andeq	sp, r2, r1, lsl r4
    21a4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    21a8:	000f770e 	andeq	r7, pc, lr, lsl #14
    21ac:	01b60400 			; <UNDEFINED> instruction: 0x01b60400
    21b0:	0002d411 	andeq	sp, r2, r1, lsl r4
    21b4:	18230200 	stmdane	r3!, {r9}
    21b8:	000d420e 	andeq	r4, sp, lr, lsl #4
    21bc:	01b70400 			; <UNDEFINED> instruction: 0x01b70400
    21c0:	0002d411 	andeq	sp, r2, r1, lsl r4
    21c4:	1c230200 	sfmne	f0, 4, [r3], #-0
    21c8:	5246410d 	subpl	r4, r6, #1073741827	; 0x40000003
    21cc:	01b80400 			; <UNDEFINED> instruction: 0x01b80400
    21d0:	00040b11 	andeq	r0, r4, r1, lsl fp
    21d4:	20230200 	eorcs	r0, r3, r0, lsl #4
    21d8:	02d40a00 	sbcseq	r0, r4, #0, 20
    21dc:	040b0000 	streq	r0, [fp], #-0
    21e0:	9f0b0000 	svcls	0x000b0000
    21e4:	01000002 	tsteq	r0, r2
    21e8:	03fb0900 	mvnseq	r0, #0, 18
    21ec:	7c0f0000 	stcvc	0, cr0, [pc], {-0}
    21f0:	0400000f 	streq	r0, [r0], #-15
    21f4:	600301b9 			; <UNDEFINED> instruction: 0x600301b9
    21f8:	0c000003 	stceq	0, cr0, [r0], {3}
    21fc:	01f40488 	mvnseq	r0, r8, lsl #9
    2200:	00060909 	andeq	r0, r6, r9, lsl #18
    2204:	52430d00 	subpl	r0, r3, #0, 26
    2208:	01f60400 	mvnseq	r0, r0, lsl #8
    220c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2210:	00230200 	eoreq	r0, r3, r0, lsl #4
    2214:	0002820e 	andeq	r8, r2, lr, lsl #4
    2218:	01f70400 	mvnseq	r0, r0, lsl #8
    221c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2220:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2224:	0002850e 	andeq	r8, r2, lr, lsl #10
    2228:	01f80400 	mvnseq	r0, r0, lsl #8
    222c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2230:	08230200 	stmdaeq	r3!, {r9}
    2234:	5249430d 	subpl	r4, r9, #872415232	; 0x34000000
    2238:	01f90400 	mvnseq	r0, r0, lsl #8
    223c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2240:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2244:	0001660e 	andeq	r6, r1, lr, lsl #12
    2248:	01fa0400 	mvnseq	r0, r0, lsl #8
    224c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2250:	10230200 	eorne	r0, r3, r0, lsl #4
    2254:	0007170e 	andeq	r1, r7, lr, lsl #14
    2258:	01fb0400 	mvnseq	r0, r0, lsl #8
    225c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2260:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2264:	00067c0e 	andeq	r7, r6, lr, lsl #24
    2268:	01fc0400 	mvnseq	r0, r0, lsl #8
    226c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2270:	18230200 	stmdane	r3!, {r9}
    2274:	00050f0e 	andeq	r0, r5, lr, lsl #30
    2278:	01fd0400 	mvnseq	r0, r0, lsl #8
    227c:	0002c811 	andeq	ip, r2, r1, lsl r8
    2280:	1c230200 	sfmne	f0, 4, [r3], #-0
    2284:	0004fa0e 	andeq	pc, r4, lr, lsl #20
    2288:	01fe0400 	mvnseq	r0, r0, lsl #8
    228c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2290:	20230200 	eorcs	r0, r3, r0, lsl #4
    2294:	0001f90e 	andeq	pc, r1, lr, lsl #18
    2298:	01ff0400 	mvnseq	r0, r0, lsl #8
    229c:	0002d411 	andeq	sp, r2, r1, lsl r4
    22a0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    22a4:	0005190e 	andeq	r1, r5, lr, lsl #18
    22a8:	02000400 	andeq	r0, r0, #0, 8
    22ac:	0002d911 	andeq	sp, r2, r1, lsl r9
    22b0:	28230200 	stmdacs	r3!, {r9}
    22b4:	0008810e 	andeq	r8, r8, lr, lsl #2
    22b8:	02010400 	andeq	r0, r1, #0, 8
    22bc:	0002d411 	andeq	sp, r2, r1, lsl r4
    22c0:	30230200 	eorcc	r0, r3, r0, lsl #4
    22c4:	0007870e 	andeq	r8, r7, lr, lsl #14
    22c8:	02020400 	andeq	r0, r2, #0, 8
    22cc:	0002d411 	andeq	sp, r2, r1, lsl r4
    22d0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    22d4:	00049c0e 	andeq	r9, r4, lr, lsl #24
    22d8:	02030400 	andeq	r0, r3, #0, 8
    22dc:	0002d411 	andeq	sp, r2, r1, lsl r4
    22e0:	38230200 	stmdacc	r3!, {r9}
    22e4:	0005230e 	andeq	r2, r5, lr, lsl #6
    22e8:	02040400 	andeq	r0, r4, #0, 8
    22ec:	0002c811 	andeq	ip, r2, r1, lsl r8
    22f0:	3c230200 	sfmcc	f0, 4, [r3], #-0
    22f4:	0006b70e 	andeq	fp, r6, lr, lsl #14
    22f8:	02050400 	andeq	r0, r5, #0, 8
    22fc:	0002d411 	andeq	sp, r2, r1, lsl r4
    2300:	40230200 	eormi	r0, r3, r0, lsl #4
    2304:	0006740e 	andeq	r7, r6, lr, lsl #8
    2308:	02060400 	andeq	r0, r6, #0, 8
    230c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2310:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    2314:	00052d0e 	andeq	r2, r5, lr, lsl #26
    2318:	02070400 	andeq	r0, r7, #0, 8
    231c:	0002d911 	andeq	sp, r2, r1, lsl r9
    2320:	48230200 	stmdami	r3!, {r9}
    2324:	00012b0e 	andeq	r2, r1, lr, lsl #22
    2328:	02080400 	andeq	r0, r8, #0, 8
    232c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2330:	50230200 	eorpl	r0, r3, r0, lsl #4
    2334:	0004d60e 	andeq	sp, r4, lr, lsl #12
    2338:	02090400 	andeq	r0, r9, #0, 8
    233c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2340:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    2344:	0006420e 	andeq	r4, r6, lr, lsl #4
    2348:	020a0400 	andeq	r0, sl, #0, 8
    234c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2350:	58230200 	stmdapl	r3!, {r9}
    2354:	0005370e 	andeq	r3, r5, lr, lsl #14
    2358:	020b0400 	andeq	r0, fp, #0, 8
    235c:	0002c811 	andeq	ip, r2, r1, lsl r8
    2360:	5c230200 	sfmpl	f0, 4, [r3], #-0
    2364:	00001b0e 	andeq	r1, r0, lr, lsl #22
    2368:	020c0400 	andeq	r0, ip, #0, 8
    236c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2370:	60230200 	eorvs	r0, r3, r0, lsl #4
    2374:	0003ee0e 	andeq	lr, r3, lr, lsl #28
    2378:	020d0400 	andeq	r0, sp, #0, 8
    237c:	0002d411 	andeq	sp, r2, r1, lsl r4
    2380:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    2384:	0005410e 	andeq	r4, r5, lr, lsl #2
    2388:	020e0400 	andeq	r0, lr, #0, 8
    238c:	0002d911 	andeq	sp, r2, r1, lsl r9
    2390:	68230200 	stmdavs	r3!, {r9}
    2394:	0008090e 	andeq	r0, r8, lr, lsl #18
    2398:	020f0400 	andeq	r0, pc, #0, 8
    239c:	0002d411 	andeq	sp, r2, r1, lsl r4
    23a0:	70230200 	eorvc	r0, r3, r0, lsl #4
    23a4:	5253430d 	subspl	r4, r3, #872415232	; 0x34000000
    23a8:	02100400 	andseq	r0, r0, #0, 8
    23ac:	0002d411 	andeq	sp, r2, r1, lsl r4
    23b0:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    23b4:	00054b0e 	andeq	r4, r5, lr, lsl #22
    23b8:	02110400 	andseq	r0, r1, #0, 8
    23bc:	0002d911 	andeq	sp, r2, r1, lsl r9
    23c0:	78230200 	stmdavc	r3!, {r9}
    23c4:	0007d80e 	andeq	sp, r7, lr, lsl #16
    23c8:	02120400 	andseq	r0, r2, #0, 8
    23cc:	0002d411 	andeq	sp, r2, r1, lsl r4
    23d0:	80230300 	eorhi	r0, r3, r0, lsl #6
    23d4:	03810e01 	orreq	r0, r1, #1, 28
    23d8:	13040000 	movwne	r0, #16384	; 0x4000
    23dc:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    23e0:	23030000 	movwcs	r0, #12288	; 0x3000
    23e4:	0f000184 	svceq	0x00000184
    23e8:	000001cd 	andeq	r0, r0, sp, asr #3
    23ec:	03021404 	movweq	r1, #9220	; 0x2404
    23f0:	0000041d 	andeq	r0, r0, sp, lsl r4
    23f4:	95041c0c 	strls	r1, [r4, #-3084]	; 0xfffff3f4
    23f8:	068f0902 	streq	r0, [pc], r2, lsl #18
    23fc:	530d0000 	movwpl	r0, #53248	; 0xd000
    2400:	97040052 	smlsdls	r4, r2, r0, r0
    2404:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2408:	23020000 	movwcs	r0, #8192	; 0x2000
    240c:	52440d00 	subpl	r0, r4, #0, 26
    2410:	02980400 	addseq	r0, r8, #0, 8
    2414:	0002d411 	andeq	sp, r2, r1, lsl r4
    2418:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    241c:	5252420d 	subspl	r4, r2, #-805306368	; 0xd0000000
    2420:	02990400 	addseq	r0, r9, #0, 8
    2424:	0002d411 	andeq	sp, r2, r1, lsl r4
    2428:	08230200 	stmdaeq	r3!, {r9}
    242c:	3152430d 	cmpcc	r2, sp, lsl #6
    2430:	029a0400 	addseq	r0, sl, #0, 8
    2434:	0002d411 	andeq	sp, r2, r1, lsl r4
    2438:	0c230200 	sfmeq	f0, 4, [r3], #-0
    243c:	3252430d 	subscc	r4, r2, #872415232	; 0x34000000
    2440:	029b0400 	addseq	r0, fp, #0, 8
    2444:	0002d411 	andeq	sp, r2, r1, lsl r4
    2448:	10230200 	eorne	r0, r3, r0, lsl #4
    244c:	3352430d 	cmpcc	r2, #872415232	; 0x34000000
    2450:	029c0400 	addseq	r0, ip, #0, 8
    2454:	0002d411 	andeq	sp, r2, r1, lsl r4
    2458:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    245c:	0001890e 	andeq	r8, r1, lr, lsl #18
    2460:	029d0400 	addseq	r0, sp, #0, 8
    2464:	0002d411 	andeq	sp, r2, r1, lsl r4
    2468:	18230200 	stmdane	r3!, {r9}
    246c:	03e00f00 	mvneq	r0, #0, 30
    2470:	9e040000 	cdpls	0, 0, cr0, cr4, cr0, {0}
    2474:	06160302 	ldreq	r0, [r6], -r2, lsl #6
    2478:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    247c:	0006bf04 	andeq	fp, r6, r4, lsl #30
    2480:	01070200 	mrseq	r0, (UNDEF: 39)
    2484:	0000024f 	andeq	r0, r0, pc, asr #4
    2488:	ca012705 	bgt	4c0a4 <_Min_Heap_Size+0x4b8a4>
    248c:	04000006 	streq	r0, [r0], #-6
    2490:	0000034a 	andeq	r0, r0, sl, asr #6
    2494:	06ad0400 	strteq	r0, [sp], r0, lsl #8
    2498:	04010000 	streq	r0, [r1], #-0
    249c:	000008e9 	andeq	r0, r0, r9, ror #17
    24a0:	032b0402 			; <UNDEFINED> instruction: 0x032b0402
    24a4:	00030000 	andeq	r0, r3, r0
    24a8:	4f010702 	svcmi	0x00010702
    24ac:	05000002 	streq	r0, [r0, #-2]
    24b0:	06e50132 			; <UNDEFINED> instruction: 0x06e50132
    24b4:	dc040000 	stcle	0, cr0, [r4], {-0}
    24b8:	00000008 	andeq	r0, r0, r8
    24bc:	00049104 	andeq	r9, r4, r4, lsl #2
    24c0:	06000100 	streq	r0, [r0], -r0, lsl #2
    24c4:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
    24c8:	ca033505 	bgt	cf8e4 <_Min_Heap_Size+0xcf0e4>
    24cc:	10000006 	andne	r0, r0, r6
    24d0:	092e0614 	stmdbeq	lr!, {r2, r4, r9, sl}
    24d4:	00000746 	andeq	r0, r0, r6, asr #14
    24d8:	6e695011 	mcrvs	0, 3, r5, cr9, cr1, {0}
    24dc:	0c300600 	ldceq	6, cr0, [r0], #-0
    24e0:	000002c8 	andeq	r0, r0, r8, asr #5
    24e4:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    24e8:	0000069d 	muleq	r0, sp, r6
    24ec:	c80c3306 	stmdagt	ip, {r1, r2, r8, r9, ip, sp}
    24f0:	02000002 	andeq	r0, r0, #2
    24f4:	40120423 	andsmi	r0, r2, r3, lsr #8
    24f8:	0600000e 	streq	r0, [r0], -lr
    24fc:	02c80c36 	sbceq	r0, r8, #13824	; 0x3600
    2500:	23020000 	movwcs	r0, #8192	; 0x2000
    2504:	0a6a1208 	beq	1a86d2c <_Min_Heap_Size+0x1a8652c>
    2508:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
    250c:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2510:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2514:	000dce12 	andeq	ip, sp, r2, lsl lr
    2518:	0c3c0600 	ldceq	6, cr0, [ip], #-0
    251c:	000002c8 	andeq	r0, r0, r8, asr #5
    2520:	00102302 	andseq	r2, r0, r2, lsl #6
    2524:	000b8e06 	andeq	r8, fp, r6, lsl #28
    2528:	023e0600 	eorseq	r0, lr, #0, 12
    252c:	000006f1 	strdeq	r0, [r0], -r1
    2530:	30073010 	andcc	r3, r7, r0, lsl r0
    2534:	00081009 	andeq	r1, r8, r9
    2538:	056c1200 	strbeq	r1, [ip, #-512]!	; 0xfffffe00
    253c:	32070000 	andcc	r0, r7, #0
    2540:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2544:	00230200 	eoreq	r0, r3, r0, lsl #4
    2548:	0002cd12 	andeq	ip, r2, r2, lsl sp
    254c:	0c350700 	ldceq	7, cr0, [r5], #-0
    2550:	000002c8 	andeq	r0, r0, r8, asr #5
    2554:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    2558:	00000202 	andeq	r0, r0, r2, lsl #4
    255c:	c80c3907 	stmdagt	ip, {r0, r1, r2, r8, fp, ip, sp}
    2560:	02000002 	andeq	r0, r0, #2
    2564:	20120823 	andscs	r0, r2, r3, lsr #16
    2568:	07000007 	streq	r0, [r0, -r7]
    256c:	02c80c3c 	sbceq	r0, r8, #60, 24	; 0x3c00
    2570:	23020000 	movwcs	r0, #8192	; 0x2000
    2574:	07b3120c 	ldreq	r1, [r3, ip, lsl #4]!
    2578:	3f070000 	svccc	0x00070000
    257c:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2580:	10230200 	eorne	r0, r3, r0, lsl #4
    2584:	0003cf12 	andeq	ip, r3, r2, lsl pc
    2588:	0c420700 	mcrreq	7, 0, r0, r2, cr0
    258c:	000002c8 	andeq	r0, r0, r8, asr #5
    2590:	12142302 	andsne	r2, r4, #134217728	; 0x8000000
    2594:	0000069d 	muleq	r0, sp, r6
    2598:	c80c4507 	stmdagt	ip, {r0, r1, r2, r8, sl, lr}
    259c:	02000002 	andeq	r0, r0, #2
    25a0:	a2121823 	andsge	r1, r2, #2293760	; 0x230000
    25a4:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    25a8:	02c80c4a 	sbceq	r0, r8, #18944	; 0x4a00
    25ac:	23020000 	movwcs	r0, #8192	; 0x2000
    25b0:	0699121c 			; <UNDEFINED> instruction: 0x0699121c
    25b4:	4d070000 	stcmi	0, cr0, [r7, #-0]
    25b8:	0002c80c 	andeq	ip, r2, ip, lsl #16
    25bc:	20230200 	eorcs	r0, r3, r0, lsl #4
    25c0:	0006cb12 	andeq	ip, r6, r2, lsl fp
    25c4:	0c520700 	mrrceq	7, 0, r0, r2, cr0
    25c8:	000002c8 	andeq	r0, r0, r8, asr #5
    25cc:	12242302 	eorne	r2, r4, #134217728	; 0x8000000
    25d0:	00000215 	andeq	r0, r0, r5, lsl r2
    25d4:	c80c5507 	stmdagt	ip, {r0, r1, r2, r8, sl, ip, lr}
    25d8:	02000002 	andeq	r0, r0, #2
    25dc:	27122823 	ldrcs	r2, [r2, -r3, lsr #16]
    25e0:	07000007 	streq	r0, [r0, -r7]
    25e4:	02c80c5b 	sbceq	r0, r8, #23296	; 0x5b00
    25e8:	23020000 	movwcs	r0, #8192	; 0x2000
    25ec:	4706002c 	strmi	r0, [r6, -ip, lsr #32]
    25f0:	07000000 	streq	r0, [r0, -r0]
    25f4:	07520260 	ldrbeq	r0, [r2, -r0, ror #4]
    25f8:	07020000 	streq	r0, [r2, -r0]
    25fc:	00024f01 	andeq	r4, r2, r1, lsl #30
    2600:	01670700 	cmneq	r7, r0, lsl #14
    2604:	0000084f 	andeq	r0, r0, pc, asr #16
    2608:	00031004 	andeq	r1, r3, r4
    260c:	23040000 	movwcs	r0, #16384	; 0x4000
    2610:	01000004 	tsteq	r0, r4
    2614:	00044004 	andeq	r4, r4, r4
    2618:	2f040200 	svccs	0x00040200
    261c:	03000008 	movweq	r0, #8
    2620:	00022d04 	andeq	r2, r2, r4, lsl #26
    2624:	91040400 	tstls	r4, r0, lsl #8
    2628:	05000003 	streq	r0, [r0, #-3]
    262c:	062d0600 	strteq	r0, [sp], -r0, lsl #12
    2630:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    2634:	00081c02 	andeq	r1, r8, r2, lsl #24
    2638:	084f0900 	stmdaeq	pc, {r8, fp}^	; <UNPREDICTABLE>
    263c:	85130000 	ldrhi	r0, [r3, #-0]
    2640:	60000006 	andvs	r0, r0, r6
    2644:	40108a07 	andsmi	r8, r0, r7, lsl #20
    2648:	12000009 	andne	r0, r0, #9
    264c:	000004a4 	andeq	r0, r0, r4, lsr #9
    2650:	401f8c07 	andsmi	r8, pc, r7, lsl #24
    2654:	02000009 	andeq	r0, r0, #9
    2658:	84120023 	ldrhi	r0, [r2], #-35	; 0xffffffdd
    265c:	0700001a 	smladeq	r0, sl, r0, r0
    2660:	08101e8e 	ldmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp, ip}
    2664:	23020000 	movwcs	r0, #8192	; 0x2000
    2668:	02a81204 	adceq	r1, r8, #4, 4	; 0x40000000
    266c:	90070000 	andls	r0, r7, r0
    2670:	0006e51e 	andeq	lr, r6, lr, lsl r5
    2674:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    2678:	00030a12 	andeq	r0, r3, r2, lsl sl
    267c:	1e920700 	cdpne	7, 9, cr0, cr2, cr0, {0}
    2680:	0000085b 	andeq	r0, r0, fp, asr r8
    2684:	12352302 	eorsne	r2, r5, #134217728	; 0x8000000
    2688:	000002a1 	andeq	r0, r0, r1, lsr #5
    268c:	461f9407 	ldrmi	r9, [pc], -r7, lsl #8
    2690:	02000009 	andeq	r0, r0, #9
    2694:	1f123823 	svcne	0x00123823
    2698:	07000009 	streq	r0, [r0, -r9]
    269c:	095a2196 	ldmdbeq	sl, {r1, r2, r4, r7, r8, sp}^
    26a0:	23020000 	movwcs	r0, #8192	; 0x2000
    26a4:	01d9123c 	bicseq	r1, r9, ip, lsr r2
    26a8:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    26ac:	00095a21 	andeq	r5, r9, r1, lsr #20
    26b0:	40230200 	eormi	r0, r3, r0, lsl #4
    26b4:	00019712 	andeq	r9, r1, r2, lsl r7
    26b8:	219a0700 	orrscs	r0, sl, r0, lsl #14
    26bc:	0000095a 	andeq	r0, r0, sl, asr r9
    26c0:	12442302 	subne	r2, r4, #134217728	; 0x8000000
    26c4:	00000555 	andeq	r0, r0, r5, asr r5
    26c8:	5a219c07 	bpl	8696ec <_Min_Heap_Size+0x868eec>
    26cc:	02000009 	andeq	r0, r0, #9
    26d0:	ad124823 	ldcge	8, cr4, [r2, #-140]	; 0xffffff74
    26d4:	07000004 	streq	r0, [r0, -r4]
    26d8:	095a219e 	ldmdbeq	sl, {r1, r2, r3, r4, r7, r8, sp}^
    26dc:	23020000 	movwcs	r0, #8192	; 0x2000
    26e0:	090d124c 	stmdbeq	sp, {r2, r3, r6, r9, ip}
    26e4:	a0070000 	andge	r0, r7, r0
    26e8:	00095a21 	andeq	r5, r9, r1, lsr #20
    26ec:	50230200 	eorpl	r0, r3, r0, lsl #4
    26f0:	0003b012 	andeq	fp, r3, r2, lsl r0
    26f4:	1ea20700 	cdpne	7, 10, cr0, cr2, cr0, {0}
    26f8:	000002d4 	ldrdeq	r0, [r0], -r4
    26fc:	12542302 	subsne	r2, r4, #134217728	; 0x8000000
    2700:	0000028a 	andeq	r0, r0, sl, lsl #5
    2704:	c81ea407 	ldmdagt	lr, {r0, r1, r2, sl, sp, pc}
    2708:	02000002 	andeq	r0, r0, #2
    270c:	3e125823 	cdpcc	8, 1, cr5, cr2, cr3, {1}
    2710:	07000003 	streq	r0, [r0, -r3]
    2714:	02c81ea6 	sbceq	r1, r8, #2656	; 0xa60
    2718:	23020000 	movwcs	r0, #8192	; 0x2000
    271c:	0414005c 	ldreq	r0, [r4], #-92	; 0xffffffa4
    2720:	00000353 	andeq	r0, r0, r3, asr r3
    2724:	01160415 	tsteq	r6, r5, lsl r4
    2728:	00000954 	andeq	r0, r0, r4, asr r9
    272c:	00095417 	andeq	r5, r9, r7, lsl r4
    2730:	04140000 	ldreq	r0, [r4], #-0
    2734:	00000860 	andeq	r0, r0, r0, ror #16
    2738:	09480414 	stmdbeq	r8, {r2, r4, sl}^
    273c:	87060000 	strhi	r0, [r6, -r0]
    2740:	07000006 	streq	r0, [r0, -r6]
    2744:	086002a8 	stmdaeq	r0!, {r3, r5, r7, r9}^
    2748:	1c100000 	ldcne	0, cr0, [r0], {-0}
    274c:	df092e08 	svcle	0x00092e08
    2750:	12000009 	andne	r0, r0, #9
    2754:	0000018e 	andeq	r0, r0, lr, lsl #3
    2758:	c80c3008 	stmdagt	ip, {r3, ip, sp}
    275c:	02000002 	andeq	r0, r0, #2
    2760:	a2120023 	andsge	r0, r2, #35	; 0x23
    2764:	08000006 	stmdaeq	r0, {r1, r2}
    2768:	02c80c36 	sbceq	r0, r8, #13824	; 0x3600
    276c:	23020000 	movwcs	r0, #8192	; 0x2000
    2770:	02791204 	rsbseq	r1, r9, #4, 4	; 0x40000000
    2774:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    2778:	0002c80c 	andeq	ip, r2, ip, lsl #16
    277c:	08230200 	stmdaeq	r3!, {r9}
    2780:	00032412 	andeq	r2, r3, r2, lsl r4
    2784:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    2788:	000002c8 	andeq	r0, r0, r8, asr #5
    278c:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    2790:	0000069d 	muleq	r0, sp, r6
    2794:	c80c4308 	stmdagt	ip, {r3, r8, r9, lr}
    2798:	02000002 	andeq	r0, r0, #2
    279c:	25121023 	ldrcs	r1, [r2, #-35]	; 0xffffffdd
    27a0:	08000008 	stmdaeq	r0, {r3}
    27a4:	02c80c46 	sbceq	r0, r8, #17920	; 0x4600
    27a8:	23020000 	movwcs	r0, #8192	; 0x2000
    27ac:	01351214 	teqeq	r5, r4, lsl r2
    27b0:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    27b4:	0002c80c 	andeq	ip, r2, ip, lsl #16
    27b8:	18230200 	stmdane	r3!, {r9}
    27bc:	07c70600 	strbeq	r0, [r7, r0, lsl #12]
    27c0:	4b080000 	blmi	2027c8 <_Min_Heap_Size+0x201fc8>
    27c4:	00096c03 	andeq	r6, r9, r3, lsl #24
    27c8:	01070200 	mrseq	r0, (UNDEF: 39)
    27cc:	0000024f 	andeq	r0, r0, pc, asr #4
    27d0:	2a017508 	bcs	5fbf8 <_Min_Heap_Size+0x5f3f8>
    27d4:	0400000a 	streq	r0, [r0], #-10
    27d8:	0000075a 	andeq	r0, r0, sl, asr r7
    27dc:	02ad0400 	adceq	r0, sp, #0, 8
    27e0:	04200000 	strteq	r0, [r0], #-0
    27e4:	0000086d 	andeq	r0, r0, sp, ror #16
    27e8:	04bf0424 	ldrteq	r0, [pc], #1060	; 27f0 <_Min_Heap_Size+0x1ff0>
    27ec:	04210000 	strteq	r0, [r1], #-0
    27f0:	00000700 	andeq	r0, r0, r0, lsl #14
    27f4:	016f0422 	cmneq	pc, r2, lsr #8
    27f8:	04230000 	strteq	r0, [r3], #-0
    27fc:	0000080e 	andeq	r0, r0, lr, lsl #16
    2800:	065f04a0 	ldrbeq	r0, [pc], -r0, lsr #9
    2804:	00e00000 	rsceq	r0, r0, r0
    2808:	00002506 	andeq	r2, r0, r6, lsl #10
    280c:	03870800 	orreq	r0, r7, #0, 16
    2810:	000009eb 	andeq	r0, r0, fp, ror #19
    2814:	000a2a09 	andeq	r2, sl, r9, lsl #20
    2818:	07de0600 	ldrbeq	r0, [lr, r0, lsl #12]
    281c:	90080000 	andls	r0, r8, r0
    2820:	0002c812 	andeq	ip, r2, r2, lsl r8
    2824:	0a3b0900 	beq	ec4c2c <_Min_Heap_Size+0xec442c>
    2828:	ca060000 	bgt	182830 <_Min_Heap_Size+0x182030>
    282c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2830:	02c8129b 	sbceq	r1, r8, #-1342177271	; 0xb0000009
    2834:	4c090000 	stcmi	0, cr0, [r9], {-0}
    2838:	1300000a 	movwne	r0, #10
    283c:	00000477 	andeq	r0, r0, r7, ror r4
    2840:	10a00848 	adcne	r0, r0, r8, asr #16
    2844:	00000b5b 	andeq	r0, r0, fp, asr fp
    2848:	0004a412 	andeq	sl, r4, r2, lsl r4
    284c:	22a20800 	adccs	r0, r2, #0, 16
    2850:	00000b5b 	andeq	r0, r0, fp, asr fp
    2854:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    2858:	00001a84 	andeq	r1, r0, r4, lsl #21
    285c:	df21a408 	svcle	0x0021a408
    2860:	02000009 	andeq	r0, r0, #9
    2864:	ee120423 	cfmuld	mvd0, mvd2, mvd3
    2868:	08000001 	stmdaeq	r0, {r0}
    286c:	0b6122a6 	bleq	184b30c <_Min_Heap_Size+0x184ab0c>
    2870:	23020000 	movwcs	r0, #8192	; 0x2000
    2874:	03761220 	cmneq	r6, #32, 4
    2878:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    287c:	0002b721 	andeq	fp, r2, r1, lsr #14
    2880:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    2884:	00014212 	andeq	r4, r1, r2, lsl r2
    2888:	21aa0800 			; <UNDEFINED> instruction: 0x21aa0800
    288c:	000002c3 	andeq	r0, r0, r3, asr #5
    2890:	12262302 	eorne	r2, r6, #134217728	; 0x8000000
    2894:	00000845 	andeq	r0, r0, r5, asr #16
    2898:	6722ac08 	strvs	sl, [r2, -r8, lsl #24]!
    289c:	0200000b 	andeq	r0, r0, #11
    28a0:	6b122823 	blvs	48c934 <_Min_Heap_Size+0x48c134>
    28a4:	08000003 	stmdaeq	r0, {r0, r1}
    28a8:	02b721ae 	adcseq	r2, r7, #-2147483605	; 0x8000002b
    28ac:	23020000 	movwcs	r0, #8192	; 0x2000
    28b0:	0889122c 	stmeq	r9, {r2, r3, r5, r9, ip}
    28b4:	b0080000 	andlt	r0, r8, r0
    28b8:	0002c321 	andeq	ip, r2, r1, lsr #6
    28bc:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    28c0:	0008ff12 	andeq	pc, r8, r2, lsl pc	; <UNPREDICTABLE>
    28c4:	1fb20800 	svcne	0x00b20800
    28c8:	00000a47 	andeq	r0, r0, r7, asr #20
    28cc:	12302302 	eorsne	r2, r0, #134217728	; 0x8000000
    28d0:	00001099 	muleq	r0, r9, r0
    28d4:	5824b408 	stmdapl	r4!, {r3, sl, ip, sp, pc}
    28d8:	0200000a 	andeq	r0, r0, #10
    28dc:	e0123423 	ands	r3, r2, r3, lsr #8
    28e0:	08000004 	stmdaeq	r0, {r2}
    28e4:	0b6d22b6 	bleq	1b4b3c4 <_Min_Heap_Size+0x1b4abc4>
    28e8:	23020000 	movwcs	r0, #8192	; 0x2000
    28ec:	02e01238 	rsceq	r1, r0, #56, 4	; 0x80000003
    28f0:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
    28f4:	000b6d22 	andeq	r6, fp, r2, lsr #26
    28f8:	3c230200 	sfmcc	f0, 4, [r3], #-0
    28fc:	0002a812 	andeq	sl, r2, r2, lsl r8
    2900:	21ba0800 			; <UNDEFINED> instruction: 0x21ba0800
    2904:	000006e5 	andeq	r0, r0, r5, ror #13
    2908:	12402302 	subne	r2, r0, #134217728	; 0x8000000
    290c:	0000003b 	andeq	r0, r0, fp, lsr r0
    2910:	3621bc08 	strtcc	fp, [r1], -r8, lsl #24
    2914:	0200000a 	andeq	r0, r0, #10
    2918:	f2124123 	vrhadd.s16	d4, d2, d19
    291c:	08000008 	stmdaeq	r0, {r3}
    2920:	0a3621c0 	beq	d8b028 <_Min_Heap_Size+0xd8a828>
    2924:	23020000 	movwcs	r0, #8192	; 0x2000
    2928:	03b01242 	movseq	r1, #536870916	; 0x20000004
    292c:	c3080000 	movwgt	r0, #32768	; 0x8000
    2930:	0002d421 	andeq	sp, r2, r1, lsr #8
    2934:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    2938:	8f041400 	svchi	0x00041400
    293c:	14000006 	strne	r0, [r0], #-6
    2940:	0002b204 	andeq	fp, r2, r4, lsl #4
    2944:	a6041400 	strge	r1, [r4], -r0, lsl #8
    2948:	14000002 	strne	r0, [r0], #-2
    294c:	00096004 	andeq	r6, r9, r4
    2950:	04790600 	ldrbteq	r0, [r9], #-1536	; 0xfffffa00
    2954:	d5080000 	strle	r0, [r8, #-0]
    2958:	000a5d03 	andeq	r5, sl, r3, lsl #26
    295c:	03371800 	teqeq	r7, #0, 16
    2960:	240b0000 	strcs	r0, [fp], #-0
    2964:	000b731b 	andeq	r7, fp, fp, lsl r3
    2968:	19010100 	stmdbne	r1, {r8}
    296c:	00000b7f 	andeq	r0, r0, pc, ror fp
    2970:	05141b01 	ldreq	r1, [r4, #-2817]	; 0xfffff4ff
    2974:	00008c03 	andeq	r8, r0, r3, lsl #24
    2978:	38011a20 	stmdacc	r1, {r5, r9, fp, ip}
    297c:	0100000b 	tsteq	r0, fp
    2980:	0001065c 	andeq	r0, r1, ip, asr r6
    2984:	00000000 	andeq	r0, r0, r0
    2988:	a1000000 	mrsge	r0, (UNDEF: 0)
    298c:	01000003 	tsteq	r0, r3
    2990:	00000bf9 	strdeq	r0, [r0], -r9
    2994:	000be01b 	andeq	lr, fp, fp, lsl r0
    2998:	2d5c0100 	ldfcse	f0, [ip, #-0]
    299c:	00000bf9 	strdeq	r0, [r0], -r9
    29a0:	000003c9 	andeq	r0, r0, r9, asr #7
    29a4:	000003c1 	andeq	r0, r0, r1, asr #7
    29a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    29ac:	000d0100 	andeq	r0, sp, r0, lsl #2
    29b0:	000be800 	andeq	lr, fp, r0, lsl #16
    29b4:	50011d00 	andpl	r1, r1, r0, lsl #26
    29b8:	00000c05 	andeq	r0, r0, r5, lsl #24
    29bc:	011d4002 	tsteq	sp, r2
    29c0:	000a0351 	andeq	r0, sl, r1, asr r3
    29c4:	001e0006 	andseq	r0, lr, r6
    29c8:	0f000000 	svceq	0x00000000
    29cc:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    29d0:	08025001 	stmdaeq	r2, {r0, ip, lr}
    29d4:	14000025 	strne	r0, [r0], #-37	; 0xffffffdb
    29d8:	000b7304 	andeq	r7, fp, r4, lsl #6
    29dc:	09011a00 	stmdbeq	r1, {r9, fp, ip}
    29e0:	0100000b 	tsteq	r0, fp
    29e4:	0c01063b 	stceq	6, cr0, [r1], {59}	; 0x3b
    29e8:	8c080008 	stchi	0, cr0, [r8], {8}
    29ec:	03080008 	movweq	r0, #32776	; 0x8008
    29f0:	01000004 	tsteq	r0, r4
    29f4:	00000cc5 	andeq	r0, r0, r5, asr #25
    29f8:	000be01b 	andeq	lr, fp, fp, lsl r0
    29fc:	2b3b0100 	blcs	ec2e04 <_Min_Heap_Size+0xec2604>
    2a00:	00000bf9 	strdeq	r0, [r0], -r9
    2a04:	0000044f 	andeq	r0, r0, pc, asr #8
    2a08:	00000447 	andeq	r0, r0, r7, asr #8
    2a0c:	000aae1f 	andeq	sl, sl, pc, lsl lr
    2a10:	143e0100 	ldrtne	r0, [lr], #-256	; 0xffffff00
    2a14:	00000746 	andeq	r0, r0, r6, asr #14
    2a18:	20649102 	rsbcs	r9, r4, r2, lsl #2
    2a1c:	0800082e 	stmdaeq	r0, {r1, r2, r3, r5, fp}
    2a20:	08000848 	stmdaeq	r0, {r3, r6, fp}
    2a24:	00000c5a 	andeq	r0, r0, sl, asr ip
    2a28:	0001b61f 	andeq	fp, r1, pc, lsl r6
    2a2c:	05450100 	strbeq	r0, [r5, #-256]	; 0xffffff00
    2a30:	000002d4 	ldrdeq	r0, [r0], -r4
    2a34:	005c9102 	subseq	r9, ip, r2, lsl #2
    2a38:	00084820 	andeq	r4, r8, r0, lsr #16
    2a3c:	00085c08 	andeq	r5, r8, r8, lsl #24
    2a40:	000c7708 	andeq	r7, ip, r8, lsl #14
    2a44:	01b61f00 			; <UNDEFINED> instruction: 0x01b61f00
    2a48:	47010000 	strmi	r0, [r1, -r0]
    2a4c:	0002d405 	andeq	sp, r2, r5, lsl #8
    2a50:	60910200 	addsvs	r0, r1, r0, lsl #4
    2a54:	08761c00 	ldmdaeq	r6!, {sl, fp, ip}^
    2a58:	0d1e0800 	ldceq	8, cr0, [lr, #-0]
    2a5c:	0c940000 	ldceq	0, cr0, [r4], {0}
    2a60:	011d0000 	tsteq	sp, r0
    2a64:	000c0550 	andeq	r0, ip, r0, asr r5
    2a68:	1d400200 	sfmne	f0, 2, [r0, #-0]
    2a6c:	91025101 	tstls	r2, r1, lsl #2
    2a70:	801c0064 	andshi	r0, ip, r4, rrx
    2a74:	2c080008 	stccs	0, cr0, [r8], {8}
    2a78:	b400000d 	strlt	r0, [r0], #-13
    2a7c:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    2a80:	08025001 	stmdaeq	r2, {r0, ip, lr}
    2a84:	51011d25 	tstpl	r1, r5, lsr #26
    2a88:	1d007402 	cfstrsne	mvf7, [r0, #-8]
    2a8c:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    2a90:	861e0000 	ldrhi	r0, [lr], -r0
    2a94:	3b080008 	blcc	202abc <_Min_Heap_Size+0x2022bc>
    2a98:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    2a9c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    2aa0:	1a000025 	bne	2b3c <_Min_Heap_Size+0x233c>
    2aa4:	00000701 	andeq	r0, r0, r1, lsl #14
    2aa8:	061f0100 	ldreq	r0, [pc], -r0, lsl #2
    2aac:	0007d801 	andeq	sp, r7, r1, lsl #16
    2ab0:	00080c08 	andeq	r0, r8, r8, lsl #24
    2ab4:	00048908 	andeq	r8, r4, r8, lsl #18
    2ab8:	0d010100 	stfeqs	f0, [r1, #-0]
    2abc:	fa1c0000 	blx	702ac4 <_Min_Heap_Size+0x7022c4>
    2ac0:	4a080007 	bmi	202ae4 <_Min_Heap_Size+0x2022e4>
    2ac4:	f700000d 			; <UNDEFINED> instruction: 0xf700000d
    2ac8:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    2acc:	03055001 	movweq	r5, #20481	; 0x5001
    2ad0:	2000008c 	andcs	r0, r0, ip, lsl #1
    2ad4:	08022100 	stmdaeq	r2, {r8, sp}
    2ad8:	0d590800 	ldcleq	8, cr0, [r9, #-0]
    2adc:	22000000 	andcs	r0, r0, #0
    2ae0:	0bc30101 	bleq	ff0c2eec <_estack+0xdf0c1cb4>
    2ae4:	0bc30000 	bleq	ff0c2aec <_estack+0xdf0c18b4>
    2ae8:	e1060000 	mrs	r0, (UNDEF: 6)
    2aec:	01012307 	tsteq	r1, r7, lsl #6
    2af0:	00000f48 	andeq	r0, r0, r8, asr #30
    2af4:	00000f48 	andeq	r0, r0, r8, asr #30
    2af8:	06010709 	streq	r0, [r1], -r9, lsl #14
    2afc:	13010122 	movwne	r0, #4386	; 0x1122
    2b00:	1300000c 	movwne	r0, #12
    2b04:	0600000c 	streq	r0, [r0], -ip
    2b08:	012307e0 	smulwteq	r3, r0, r7
    2b0c:	000e9801 	andeq	r9, lr, r1, lsl #16
    2b10:	000e9800 	andeq	r9, lr, r0, lsl #16
    2b14:	01050900 	tsteq	r5, r0, lsl #18
    2b18:	01012306 	tsteq	r1, r6, lsl #6
    2b1c:	00000ee7 	andeq	r0, r0, r7, ror #29
    2b20:	00000ee7 	andeq	r0, r0, r7, ror #29
    2b24:	06010609 	streq	r0, [r1], -r9, lsl #12
    2b28:	45010123 	strmi	r0, [r1, #-291]	; 0xfffffedd
    2b2c:	4500000c 	strmi	r0, [r0, #-12]
    2b30:	0800000c 	stmdaeq	r0, {r2, r3}
    2b34:	221302ce 	andscs	r0, r3, #-536870900	; 0xe000000c
    2b38:	04150101 	ldreq	r0, [r5], #-257	; 0xfffffeff
    2b3c:	04150000 	ldreq	r0, [r5], #-0
    2b40:	3c0a0000 	stccc	0, cr0, [sl], {-0}
    2b44:	02e70006 	rsceq	r0, r7, #6
    2b48:	00020000 	andeq	r0, r2, r0
    2b4c:	000006ce 	andeq	r0, r0, lr, asr #13
    2b50:	05880104 	streq	r0, [r8, #260]	; 0x104
    2b54:	560c0000 	strpl	r0, [ip], -r0
    2b58:	95000010 	strls	r0, [r0, #-16]
    2b5c:	f8000008 			; <UNDEFINED> instruction: 0xf8000008
	...
    2b68:	83000000 	movwhi	r0, #0
    2b6c:	0200000d 	andeq	r0, r0, #13
    2b70:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    2b74:	01020000 	mrseq	r0, (UNDEF: 2)
    2b78:	00057408 	andeq	r7, r5, r8, lsl #8
    2b7c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2b80:	000003fd 	strdeq	r0, [r0], -sp
    2b84:	8f070202 	svchi	0x00070202
    2b88:	02000007 	andeq	r0, r0, #7
    2b8c:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    2b90:	c2030000 	andgt	r0, r3, #0
    2b94:	02000002 	andeq	r0, r0, #2
    2b98:	0058194f 	subseq	r1, r8, pc, asr #18
    2b9c:	04020000 	streq	r0, [r2], #-0
    2ba0:	0000b307 	andeq	fp, r0, r7, lsl #6
    2ba4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2ba8:	000002e7 	andeq	r0, r0, r7, ror #5
    2bac:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    2bb0:	04000000 	streq	r0, [r0], #-0
    2bb4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2bb8:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2bbc:	0000b807 	andeq	fp, r0, r7, lsl #16
    2bc0:	02c40300 	sbceq	r0, r4, #0, 6
    2bc4:	30030000 	andcc	r0, r3, r0
    2bc8:	00004c14 	andeq	r4, r0, r4, lsl ip
    2bcc:	007b0500 	rsbseq	r0, fp, r0, lsl #10
    2bd0:	7b060000 	blvc	182bd8 <_Min_Heap_Size+0x1823d8>
    2bd4:	9c000000 	stcls	0, cr0, [r0], {-0}
    2bd8:	07000000 	streq	r0, [r0, -r0]
    2bdc:	00000074 	andeq	r0, r0, r4, ror r0
    2be0:	88080001 	stmdahi	r8, {r0}
    2be4:	0901f404 	stmdbeq	r1, {r2, sl, ip, sp, lr, pc}
    2be8:	00000288 	andeq	r0, r0, r8, lsl #5
    2bec:	00524309 	subseq	r4, r2, r9, lsl #6
    2bf0:	1101f604 	tstne	r1, r4, lsl #12	; <UNPREDICTABLE>
    2bf4:	00000087 	andeq	r0, r0, r7, lsl #1
    2bf8:	0a002302 	beq	b808 <_Min_Heap_Size+0xb008>
    2bfc:	00000282 	andeq	r0, r0, r2, lsl #5
    2c00:	1101f704 	tstne	r1, r4, lsl #14	; <UNPREDICTABLE>
    2c04:	00000087 	andeq	r0, r0, r7, lsl #1
    2c08:	0a042302 	beq	10b818 <_Min_Heap_Size+0x10b018>
    2c0c:	00000285 	andeq	r0, r0, r5, lsl #5
    2c10:	1101f804 	tstne	r1, r4, lsl #16	; <UNPREDICTABLE>
    2c14:	00000087 	andeq	r0, r0, r7, lsl #1
    2c18:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    2c1c:	00524943 	subseq	r4, r2, r3, asr #18
    2c20:	1101f904 	tstne	r1, r4, lsl #18	; <UNPREDICTABLE>
    2c24:	00000087 	andeq	r0, r0, r7, lsl #1
    2c28:	0a0c2302 	beq	30b838 <_Min_Heap_Size+0x30b038>
    2c2c:	00000166 	andeq	r0, r0, r6, ror #2
    2c30:	1101fa04 	tstne	r1, r4, lsl #20	; <UNPREDICTABLE>
    2c34:	00000087 	andeq	r0, r0, r7, lsl #1
    2c38:	0a102302 	beq	40b848 <_Min_Heap_Size+0x40b048>
    2c3c:	00000717 	andeq	r0, r0, r7, lsl r7
    2c40:	1101fb04 	tstne	r1, r4, lsl #22	; <UNPREDICTABLE>
    2c44:	00000087 	andeq	r0, r0, r7, lsl #1
    2c48:	0a142302 	beq	50b858 <_Min_Heap_Size+0x50b058>
    2c4c:	0000067c 	andeq	r0, r0, ip, ror r6
    2c50:	1101fc04 	tstne	r1, r4, lsl #24	; <UNPREDICTABLE>
    2c54:	00000087 	andeq	r0, r0, r7, lsl #1
    2c58:	0a182302 	beq	60b868 <_Min_Heap_Size+0x60b068>
    2c5c:	0000050f 	andeq	r0, r0, pc, lsl #10
    2c60:	1101fd04 	tstne	r1, r4, lsl #26	; <UNPREDICTABLE>
    2c64:	0000007b 	andeq	r0, r0, fp, ror r0
    2c68:	0a1c2302 	beq	70b878 <_Min_Heap_Size+0x70b078>
    2c6c:	000004fa 	strdeq	r0, [r0], -sl
    2c70:	1101fe04 	tstne	r1, r4, lsl #28	; <UNPREDICTABLE>
    2c74:	00000087 	andeq	r0, r0, r7, lsl #1
    2c78:	0a202302 	beq	80b888 <_Min_Heap_Size+0x80b088>
    2c7c:	000001f9 	strdeq	r0, [r0], -r9
    2c80:	1101ff04 	tstne	r1, r4, lsl #30	; <UNPREDICTABLE>
    2c84:	00000087 	andeq	r0, r0, r7, lsl #1
    2c88:	0a242302 	beq	90b898 <_Min_Heap_Size+0x90b098>
    2c8c:	00000519 	andeq	r0, r0, r9, lsl r5
    2c90:	11020004 	tstne	r2, r4
    2c94:	0000008c 	andeq	r0, r0, ip, lsl #1
    2c98:	0a282302 	beq	a0b8a8 <_Min_Heap_Size+0xa0b0a8>
    2c9c:	00000881 	andeq	r0, r0, r1, lsl #17
    2ca0:	11020104 	tstne	r2, r4, lsl #2
    2ca4:	00000087 	andeq	r0, r0, r7, lsl #1
    2ca8:	0a302302 	beq	c0b8b8 <_Min_Heap_Size+0xc0b0b8>
    2cac:	00000787 	andeq	r0, r0, r7, lsl #15
    2cb0:	11020204 	tstne	r2, r4, lsl #4
    2cb4:	00000087 	andeq	r0, r0, r7, lsl #1
    2cb8:	0a342302 	beq	d0b8c8 <_Min_Heap_Size+0xd0b0c8>
    2cbc:	0000049c 	muleq	r0, ip, r4
    2cc0:	11020304 	tstne	r2, r4, lsl #6
    2cc4:	00000087 	andeq	r0, r0, r7, lsl #1
    2cc8:	0a382302 	beq	e0b8d8 <_Min_Heap_Size+0xe0b0d8>
    2ccc:	00000523 	andeq	r0, r0, r3, lsr #10
    2cd0:	11020404 	tstne	r2, r4, lsl #8
    2cd4:	0000007b 	andeq	r0, r0, fp, ror r0
    2cd8:	0a3c2302 	beq	f0b8e8 <_Min_Heap_Size+0xf0b0e8>
    2cdc:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    2ce0:	11020504 	tstne	r2, r4, lsl #10
    2ce4:	00000087 	andeq	r0, r0, r7, lsl #1
    2ce8:	0a402302 	beq	100b8f8 <_Min_Heap_Size+0x100b0f8>
    2cec:	00000674 	andeq	r0, r0, r4, ror r6
    2cf0:	11020604 	tstne	r2, r4, lsl #12
    2cf4:	00000087 	andeq	r0, r0, r7, lsl #1
    2cf8:	0a442302 	beq	110b908 <_Min_Heap_Size+0x110b108>
    2cfc:	0000052d 	andeq	r0, r0, sp, lsr #10
    2d00:	11020704 	tstne	r2, r4, lsl #14
    2d04:	0000008c 	andeq	r0, r0, ip, lsl #1
    2d08:	0a482302 	beq	120b918 <_Min_Heap_Size+0x120b118>
    2d0c:	0000012b 	andeq	r0, r0, fp, lsr #2
    2d10:	11020804 	tstne	r2, r4, lsl #16
    2d14:	00000087 	andeq	r0, r0, r7, lsl #1
    2d18:	0a502302 	beq	140b928 <_Min_Heap_Size+0x140b128>
    2d1c:	000004d6 	ldrdeq	r0, [r0], -r6
    2d20:	11020904 	tstne	r2, r4, lsl #18
    2d24:	00000087 	andeq	r0, r0, r7, lsl #1
    2d28:	0a542302 	beq	150b938 <_Min_Heap_Size+0x150b138>
    2d2c:	00000642 	andeq	r0, r0, r2, asr #12
    2d30:	11020a04 	tstne	r2, r4, lsl #20
    2d34:	00000087 	andeq	r0, r0, r7, lsl #1
    2d38:	0a582302 	beq	160b948 <_Min_Heap_Size+0x160b148>
    2d3c:	00000537 	andeq	r0, r0, r7, lsr r5
    2d40:	11020b04 	tstne	r2, r4, lsl #22
    2d44:	0000007b 	andeq	r0, r0, fp, ror r0
    2d48:	0a5c2302 	beq	170b958 <_Min_Heap_Size+0x170b158>
    2d4c:	0000001b 	andeq	r0, r0, fp, lsl r0
    2d50:	11020c04 	tstne	r2, r4, lsl #24
    2d54:	00000087 	andeq	r0, r0, r7, lsl #1
    2d58:	0a602302 	beq	180b968 <_Min_Heap_Size+0x180b168>
    2d5c:	000003ee 	andeq	r0, r0, lr, ror #7
    2d60:	11020d04 	tstne	r2, r4, lsl #26
    2d64:	00000087 	andeq	r0, r0, r7, lsl #1
    2d68:	0a642302 	beq	190b978 <_Min_Heap_Size+0x190b178>
    2d6c:	00000541 	andeq	r0, r0, r1, asr #10
    2d70:	11020e04 	tstne	r2, r4, lsl #28
    2d74:	0000008c 	andeq	r0, r0, ip, lsl #1
    2d78:	0a682302 	beq	1a0b988 <_Min_Heap_Size+0x1a0b188>
    2d7c:	00000809 	andeq	r0, r0, r9, lsl #16
    2d80:	11020f04 	tstne	r2, r4, lsl #30
    2d84:	00000087 	andeq	r0, r0, r7, lsl #1
    2d88:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    2d8c:	00525343 	subseq	r5, r2, r3, asr #6
    2d90:	11021004 	tstne	r2, r4
    2d94:	00000087 	andeq	r0, r0, r7, lsl #1
    2d98:	0a742302 	beq	1d0b9a8 <_Min_Heap_Size+0x1d0b1a8>
    2d9c:	0000054b 	andeq	r0, r0, fp, asr #10
    2da0:	11021104 	tstne	r2, r4, lsl #2
    2da4:	0000008c 	andeq	r0, r0, ip, lsl #1
    2da8:	0a782302 	beq	1e0b9b8 <_Min_Heap_Size+0x1e0b1b8>
    2dac:	000007d8 	ldrdeq	r0, [r0], -r8
    2db0:	11021204 	tstne	r2, r4, lsl #4
    2db4:	00000087 	andeq	r0, r0, r7, lsl #1
    2db8:	01802303 	orreq	r2, r0, r3, lsl #6
    2dbc:	0003810a 	andeq	r8, r3, sl, lsl #2
    2dc0:	02130400 	andseq	r0, r3, #0, 8
    2dc4:	00008711 	andeq	r8, r0, r1, lsl r7
    2dc8:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    2dcc:	cd0b0001 	stcgt	0, cr0, [fp, #-4]
    2dd0:	04000001 	streq	r0, [r0], #-1
    2dd4:	9c030214 	sfmls	f0, 4, [r3], {20}
    2dd8:	02000000 	andeq	r0, r0, #0
    2ddc:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    2de0:	010c0000 	mrseq	r0, (UNDEF: 12)
    2de4:	0000104a 	andeq	r1, r0, sl, asr #32
    2de8:	01063f01 	tsteq	r6, r1, lsl #30
    2dec:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
    2df0:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
    2df4:	000004a9 	andeq	r0, r0, r9, lsr #9
    2df8:	088e0d01 	stmeq	lr, {r0, r8, sl, fp}
    2dfc:	08a60800 	stmiaeq	r6!, {fp}
    2e00:	02d00800 	sbcseq	r0, r0, #0, 16
    2e04:	b60e0000 	strlt	r0, [lr], -r0
    2e08:	01000001 	tsteq	r0, r1
    2e0c:	00870346 	addeq	r0, r7, r6, asr #6
    2e10:	91020000 	mrsls	r0, (UNDEF: 2)
    2e14:	a60f0078 			; <UNDEFINED> instruction: 0xa60f0078
    2e18:	ba080008 	blt	202e40 <_Min_Heap_Size+0x202640>
    2e1c:	0e080008 	cdpeq	0, 0, cr0, cr8, cr8, {0}
    2e20:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    2e24:	87034701 	strhi	r4, [r3, -r1, lsl #14]
    2e28:	02000000 	andeq	r0, r0, #0
    2e2c:	00007c91 	muleq	r0, r1, ip
    2e30:	00462a00 	subeq	r2, r6, r0, lsl #20
    2e34:	a1000200 	mrsge	r0, R8_usr
    2e38:	04000007 	streq	r0, [r0], #-7
    2e3c:	00058801 	andeq	r8, r5, r1, lsl #16
    2e40:	131e0c00 	tstne	lr, #0, 24
    2e44:	08950000 	ldmeq	r5, {}	; <UNPREDICTABLE>
    2e48:	01200000 			; <UNDEFINED> instruction: 0x01200000
	...
    2e54:	0ef90000 	cdpeq	0, 15, cr0, cr9, cr0, {0}
    2e58:	01020000 	mrseq	r0, (UNDEF: 2)
    2e5c:	00057606 	andeq	r7, r5, r6, lsl #12
    2e60:	00660300 	rsbeq	r0, r6, r0, lsl #6
    2e64:	2b030000 	blcs	c2e6c <_Min_Heap_Size+0xc266c>
    2e68:	00003c18 	andeq	r3, r0, r8, lsl ip
    2e6c:	08010200 	stmdaeq	r1, {r9}
    2e70:	00000574 	andeq	r0, r0, r4, ror r5
    2e74:	fd050202 	stc2	2, cr0, [r5, #-8]
    2e78:	03000003 	movweq	r0, #3
    2e7c:	000006f5 	strdeq	r0, [r0], -r5
    2e80:	56193903 	ldrpl	r3, [r9], -r3, lsl #18
    2e84:	02000000 	andeq	r0, r0, #0
    2e88:	078f0702 	streq	r0, [pc, r2, lsl #14]
    2e8c:	04020000 	streq	r0, [r2], #-0
    2e90:	0002ec05 	andeq	lr, r2, r5, lsl #24
    2e94:	02c20300 	sbceq	r0, r2, #0, 6
    2e98:	4f030000 	svcmi	0x00030000
    2e9c:	00007019 	andeq	r7, r0, r9, lsl r0
    2ea0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2ea4:	000000b3 	strheq	r0, [r0], -r3
    2ea8:	e7050802 	str	r0, [r5, -r2, lsl #16]
    2eac:	03000002 	movweq	r0, #2
    2eb0:	000014b2 			; <UNDEFINED> instruction: 0x000014b2
    2eb4:	8a196903 	bhi	65d2c8 <_Min_Heap_Size+0x65cac8>
    2eb8:	02000000 	andeq	r0, r0, #0
    2ebc:	00ae0708 	adceq	r0, lr, r8, lsl #14
    2ec0:	04040000 	streq	r0, [r4], #-0
    2ec4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2ec8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2ecc:	000000b8 	strheq	r0, [r0], -r8
    2ed0:	00006803 	andeq	r6, r0, r3, lsl #16
    2ed4:	13180400 	tstne	r8, #0, 8
    2ed8:	00000030 	andeq	r0, r0, r0, lsr r0
    2edc:	00009f05 	andeq	r9, r0, r5, lsl #30
    2ee0:	06f70300 	ldrbteq	r0, [r7], r0, lsl #6
    2ee4:	24040000 	strcs	r0, [r4], #-0
    2ee8:	00004a14 	andeq	r4, r0, r4, lsl sl
    2eec:	00b00600 	adcseq	r0, r0, r0, lsl #12
    2ef0:	b0050000 	andlt	r0, r5, r0
    2ef4:	03000000 	movweq	r0, #0
    2ef8:	000002c4 	andeq	r0, r0, r4, asr #5
    2efc:	64143004 	ldrvs	r3, [r4], #-4
    2f00:	06000000 	streq	r0, [r0], -r0
    2f04:	000000c6 	andeq	r0, r0, r6, asr #1
    2f08:	0000c605 	andeq	ip, r0, r5, lsl #12
    2f0c:	14b40300 	ldrtne	r0, [r4], #768	; 0x300
    2f10:	3c040000 	stccc	0, cr0, [r4], {-0}
    2f14:	00007e14 	andeq	r7, r0, r4, lsl lr
    2f18:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
    2f1c:	52090144 	andpl	r0, r9, #68, 2
    2f20:	08000001 	stmdaeq	r0, {r0}
    2f24:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2f28:	d2110146 	andsle	r0, r1, #-2147483631	; 0x80000011
    2f2c:	02000000 	andeq	r0, r0, #0
    2f30:	55090023 	strpl	r0, [r9, #-35]	; 0xffffffdd
    2f34:	05000007 	streq	r0, [r0, #-7]
    2f38:	d2110147 	andsle	r0, r1, #-1073741807	; 0xc0000011
    2f3c:	02000000 	andeq	r0, r0, #0
    2f40:	50080423 	andpl	r0, r8, r3, lsr #8
    2f44:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
    2f48:	d2110148 	andsle	r0, r1, #72, 2
    2f4c:	02000000 	andeq	r0, r0, #0
    2f50:	42090823 	andmi	r0, r9, #2293760	; 0x230000
    2f54:	05000000 	streq	r0, [r0, #-0]
    2f58:	d2110149 	andsle	r0, r1, #1073741842	; 0x40000012
    2f5c:	02000000 	andeq	r0, r0, #0
    2f60:	ae090c23 	cdpge	12, 0, cr0, cr9, cr3, {1}
    2f64:	05000007 	streq	r0, [r0, #-7]
    2f68:	d211014a 	andsle	r0, r1, #-2147483630	; 0x80000012
    2f6c:	02000000 	andeq	r0, r0, #0
    2f70:	46081023 	strmi	r1, [r8], -r3, lsr #32
    2f74:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2f78:	d211014b 	andsle	r0, r1, #-1073741806	; 0xc0000012
    2f7c:	02000000 	andeq	r0, r0, #0
    2f80:	0a001423 	beq	8014 <_Min_Heap_Size+0x7814>
    2f84:	00000774 	andeq	r0, r0, r4, ror r7
    2f88:	03014c05 	movweq	r4, #7173	; 0x1c05
    2f8c:	000000e8 	andeq	r0, r0, r8, ror #1
    2f90:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
    2f94:	01d80902 	bicseq	r0, r8, r2, lsl #18
    2f98:	53080000 	movwpl	r0, #32768	; 0x8000
    2f9c:	97050052 	smlsdls	r5, r2, r0, r0
    2fa0:	00d21102 	sbcseq	r1, r2, r2, lsl #2
    2fa4:	23020000 	movwcs	r0, #8192	; 0x2000
    2fa8:	52440800 	subpl	r0, r4, #0, 16
    2fac:	02980500 	addseq	r0, r8, #0, 10
    2fb0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fb4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2fb8:	52524208 	subspl	r4, r2, #8, 4	; 0x80000000
    2fbc:	02990500 	addseq	r0, r9, #0, 10
    2fc0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fc4:	08230200 	stmdaeq	r3!, {r9}
    2fc8:	31524308 	cmpcc	r2, r8, lsl #6
    2fcc:	029a0500 	addseq	r0, sl, #0, 10
    2fd0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fd4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2fd8:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
    2fdc:	029b0500 	addseq	r0, fp, #0, 10
    2fe0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2fe4:	10230200 	eorne	r0, r3, r0, lsl #4
    2fe8:	33524308 	cmpcc	r2, #8, 6	; 0x20000000
    2fec:	029c0500 	addseq	r0, ip, #0, 10
    2ff0:	0000d211 	andeq	sp, r0, r1, lsl r2
    2ff4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2ff8:	00018909 	andeq	r8, r1, r9, lsl #18
    2ffc:	029d0500 	addseq	r0, sp, #0, 10
    3000:	0000d211 	andeq	sp, r0, r1, lsl r2
    3004:	18230200 	stmdane	r3!, {r9}
    3008:	03e00a00 	mvneq	r0, #0, 20
    300c:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    3010:	015f0302 	cmpeq	pc, r2, lsl #6
    3014:	070b0000 	streq	r0, [fp, -r0]
    3018:	00003c01 	andeq	r3, r0, r1, lsl #24
    301c:	01b90600 			; <UNDEFINED> instruction: 0x01b90600
    3020:	00000200 	andeq	r0, r0, r0, lsl #4
    3024:	00031e0c 	andeq	r1, r3, ip, lsl #28
    3028:	530d0000 	movwpl	r0, #53248	; 0xd000
    302c:	01005445 	tsteq	r0, r5, asr #8
    3030:	10c90300 	sbcne	r0, r9, r0, lsl #6
    3034:	bc060000 	stclt	0, cr0, [r6], {-0}
    3038:	0001e503 	andeq	lr, r1, r3, lsl #10
    303c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    3040:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    3044:	3c01070b 	stccc	7, cr0, [r1], {11}
    3048:	07000000 	streq	r0, [r0, -r0]
    304c:	023a0127 	eorseq	r0, sl, #-1073741815	; 0xc0000009
    3050:	4a0c0000 	bmi	303058 <_Min_Heap_Size+0x302858>
    3054:	00000003 	andeq	r0, r0, r3
    3058:	0006ad0c 	andeq	sl, r6, ip, lsl #26
    305c:	e90c0100 	stmdb	ip, {r8}
    3060:	02000008 	andeq	r0, r0, #8
    3064:	00032b0c 	andeq	r2, r3, ip, lsl #22
    3068:	03000300 	movweq	r0, #768	; 0x300
    306c:	000012fe 	strdeq	r1, [r0], -lr
    3070:	13032c07 	movwne	r2, #15367	; 0x3c07
    3074:	0b000002 	bleq	3084 <_Min_Heap_Size+0x2884>
    3078:	003c0107 	eorseq	r0, ip, r7, lsl #2
    307c:	32070000 	andcc	r0, r7, #0
    3080:	00026101 	andeq	r6, r2, r1, lsl #2
    3084:	08dc0c00 	ldmeq	ip, {sl, fp}^
    3088:	0c000000 	stceq	0, cr0, [r0], {-0}
    308c:	00000491 	muleq	r0, r1, r4
    3090:	bd030001 	stclt	0, cr0, [r3, #-4]
    3094:	07000001 	streq	r0, [r0, -r1]
    3098:	02460335 	subeq	r0, r6, #-738197504	; 0xd4000000
    309c:	300e0000 	andcc	r0, lr, r0
    30a0:	2b093008 	blcs	24f0c8 <_Min_Heap_Size+0x24e8c8>
    30a4:	0f000003 	svceq	0x00000003
    30a8:	0000056c 	andeq	r0, r0, ip, ror #10
    30ac:	c60c3208 	strgt	r3, [ip], -r8, lsl #4
    30b0:	02000000 	andeq	r0, r0, #0
    30b4:	cd0f0023 	stcgt	0, cr0, [pc, #-140]	; 3030 <_Min_Heap_Size+0x2830>
    30b8:	08000002 	stmdaeq	r0, {r1}
    30bc:	00c60c35 	sbceq	r0, r6, r5, lsr ip
    30c0:	23020000 	movwcs	r0, #8192	; 0x2000
    30c4:	02020f04 	andeq	r0, r2, #4, 30
    30c8:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    30cc:	0000c60c 	andeq	ip, r0, ip, lsl #12
    30d0:	08230200 	stmdaeq	r3!, {r9}
    30d4:	0007200f 	andeq	r2, r7, pc
    30d8:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    30dc:	000000c6 	andeq	r0, r0, r6, asr #1
    30e0:	0f0c2302 	svceq	0x000c2302
    30e4:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    30e8:	c60c3f08 	strgt	r3, [ip], -r8, lsl #30
    30ec:	02000000 	andeq	r0, r0, #0
    30f0:	cf0f1023 	svcgt	0x000f1023
    30f4:	08000003 	stmdaeq	r0, {r0, r1}
    30f8:	00c60c42 	sbceq	r0, r6, r2, asr #24
    30fc:	23020000 	movwcs	r0, #8192	; 0x2000
    3100:	069d0f14 			; <UNDEFINED> instruction: 0x069d0f14
    3104:	45080000 	strmi	r0, [r8, #-0]
    3108:	0000c60c 	andeq	ip, r0, ip, lsl #12
    310c:	18230200 	stmdane	r3!, {r9}
    3110:	001fa20f 	andseq	sl, pc, pc, lsl #4
    3114:	0c4a0800 	mcrreq	8, 0, r0, sl, cr0
    3118:	000000c6 	andeq	r0, r0, r6, asr #1
    311c:	0f1c2302 	svceq	0x001c2302
    3120:	00000699 	muleq	r0, r9, r6
    3124:	c60c4d08 	strgt	r4, [ip], -r8, lsl #26
    3128:	02000000 	andeq	r0, r0, #0
    312c:	cb0f2023 	blgt	3cb1c0 <_Min_Heap_Size+0x3ca9c0>
    3130:	08000006 	stmdaeq	r0, {r1, r2}
    3134:	00c60c52 	sbceq	r0, r6, r2, asr ip
    3138:	23020000 	movwcs	r0, #8192	; 0x2000
    313c:	02150f24 	andseq	r0, r5, #36, 30	; 0x90
    3140:	55080000 	strpl	r0, [r8, #-0]
    3144:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3148:	28230200 	stmdacs	r3!, {r9}
    314c:	0007270f 	andeq	r2, r7, pc, lsl #14
    3150:	0c5b0800 	mrrceq	8, 0, r0, fp, cr0
    3154:	000000c6 	andeq	r0, r0, r6, asr #1
    3158:	002c2302 	eoreq	r2, ip, r2, lsl #6
    315c:	00004703 	andeq	r4, r0, r3, lsl #14
    3160:	02600800 	rsbeq	r0, r0, #0, 16
    3164:	0000026d 	andeq	r0, r0, sp, ror #4
    3168:	3c01070b 	stccc	7, cr0, [r1], {11}
    316c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3170:	036a0167 	cmneq	sl, #-1073741799	; 0xc0000019
    3174:	100c0000 	andne	r0, ip, r0
    3178:	00000003 	andeq	r0, r0, r3
    317c:	0004230c 	andeq	r2, r4, ip, lsl #6
    3180:	400c0100 	andmi	r0, ip, r0, lsl #2
    3184:	02000004 	andeq	r0, r0, #4
    3188:	00082f0c 	andeq	r2, r8, ip, lsl #30
    318c:	2d0c0300 	stccs	3, cr0, [ip, #-0]
    3190:	04000002 	streq	r0, [r0], #-2
    3194:	0003910c 	andeq	r9, r3, ip, lsl #2
    3198:	03000500 	movweq	r0, #1280	; 0x500
    319c:	0000062d 	andeq	r0, r0, sp, lsr #12
    31a0:	37026e08 	strcc	r6, [r2, -r8, lsl #28]
    31a4:	06000003 	streq	r0, [r0], -r3
    31a8:	0000036a 	andeq	r0, r0, sl, ror #6
    31ac:	00068510 	andeq	r8, r6, r0, lsl r5
    31b0:	8a086000 	bhi	21b1b8 <_Min_Heap_Size+0x21a9b8>
    31b4:	00045b10 	andeq	r5, r4, r0, lsl fp
    31b8:	04a40f00 	strteq	r0, [r4], #3840	; 0xf00
    31bc:	8c080000 	stchi	0, cr0, [r8], {-0}
    31c0:	00045b1f 	andeq	r5, r4, pc, lsl fp
    31c4:	00230200 	eoreq	r0, r3, r0, lsl #4
    31c8:	001a840f 	andseq	r8, sl, pc, lsl #8
    31cc:	1e8e0800 	cdpne	8, 8, cr0, cr14, cr0, {0}
    31d0:	0000032b 	andeq	r0, r0, fp, lsr #6
    31d4:	0f042302 	svceq	0x00042302
    31d8:	000002a8 	andeq	r0, r0, r8, lsr #5
    31dc:	611e9008 	tstvs	lr, r8
    31e0:	02000002 	andeq	r0, r0, #2
    31e4:	0a0f3423 	beq	3d0278 <_Min_Heap_Size+0x3cfa78>
    31e8:	08000003 	stmdaeq	r0, {r0, r1}
    31ec:	03761e92 	cmneq	r6, #2336	; 0x920
    31f0:	23020000 	movwcs	r0, #8192	; 0x2000
    31f4:	02a10f35 	adceq	r0, r1, #53, 30	; 0xd4
    31f8:	94080000 	strls	r0, [r8], #-0
    31fc:	0004611f 	andeq	r6, r4, pc, lsl r1
    3200:	38230200 	stmdacc	r3!, {r9}
    3204:	00091f0f 	andeq	r1, r9, pc, lsl #30
    3208:	21960800 	orrscs	r0, r6, r0, lsl #16
    320c:	00000475 	andeq	r0, r0, r5, ror r4
    3210:	0f3c2302 	svceq	0x003c2302
    3214:	000001d9 	ldrdeq	r0, [r0], -r9
    3218:	75219808 	strvc	r9, [r1, #-2056]!	; 0xfffff7f8
    321c:	02000004 	andeq	r0, r0, #4
    3220:	970f4023 	strls	r4, [pc, -r3, lsr #32]
    3224:	08000001 	stmdaeq	r0, {r0}
    3228:	0475219a 	ldrbteq	r2, [r5], #-410	; 0xfffffe66
    322c:	23020000 	movwcs	r0, #8192	; 0x2000
    3230:	05550f44 	ldrbeq	r0, [r5, #-3908]	; 0xfffff0bc
    3234:	9c080000 	stcls	0, cr0, [r8], {-0}
    3238:	00047521 	andeq	r7, r4, r1, lsr #10
    323c:	48230200 	stmdami	r3!, {r9}
    3240:	0004ad0f 	andeq	sl, r4, pc, lsl #26
    3244:	219e0800 	orrscs	r0, lr, r0, lsl #16
    3248:	00000475 	andeq	r0, r0, r5, ror r4
    324c:	0f4c2302 	svceq	0x004c2302
    3250:	0000090d 	andeq	r0, r0, sp, lsl #18
    3254:	7521a008 	strvc	sl, [r1, #-8]!
    3258:	02000004 	andeq	r0, r0, #4
    325c:	b00f5023 	andlt	r5, pc, r3, lsr #32
    3260:	08000003 	stmdaeq	r0, {r0, r1}
    3264:	00d21ea2 	sbcseq	r1, r2, r2, lsr #29
    3268:	23020000 	movwcs	r0, #8192	; 0x2000
    326c:	028a0f54 	addeq	r0, sl, #84, 30	; 0x150
    3270:	a4080000 	strge	r0, [r8], #-0
    3274:	0000c61e 	andeq	ip, r0, lr, lsl r6
    3278:	58230200 	stmdapl	r3!, {r9}
    327c:	00033e0f 	andeq	r3, r3, pc, lsl #28
    3280:	1ea60800 	cdpne	8, 10, cr0, cr6, cr0, {0}
    3284:	000000c6 	andeq	r0, r0, r6, asr #1
    3288:	005c2302 	subseq	r2, ip, r2, lsl #6
    328c:	01520411 	cmpeq	r2, r1, lsl r4
    3290:	04120000 	ldreq	r0, [r2], #-0
    3294:	046f0113 	strbteq	r0, [pc], #-275	; 329c <_Min_Heap_Size+0x2a9c>
    3298:	6f140000 	svcvs	0x00140000
    329c:	00000004 	andeq	r0, r0, r4
    32a0:	037b0411 	cmneq	fp, #285212672	; 0x11000000
    32a4:	04110000 	ldreq	r0, [r1], #-0
    32a8:	00000463 	andeq	r0, r0, r3, ror #8
    32ac:	00068703 	andeq	r8, r6, r3, lsl #14
    32b0:	02a80800 	adceq	r0, r8, #0, 16
    32b4:	0000037b 	andeq	r0, r0, fp, ror r3
    32b8:	2e091c0e 	cdpcs	12, 0, cr1, cr9, cr14, {0}
    32bc:	0004fa09 	andeq	pc, r4, r9, lsl #20
    32c0:	018e0f00 	orreq	r0, lr, r0, lsl #30
    32c4:	30090000 	andcc	r0, r9, r0
    32c8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    32cc:	00230200 	eoreq	r0, r3, r0, lsl #4
    32d0:	0006a20f 	andeq	sl, r6, pc, lsl #4
    32d4:	0c360900 			; <UNDEFINED> instruction: 0x0c360900
    32d8:	000000c6 	andeq	r0, r0, r6, asr #1
    32dc:	0f042302 	svceq	0x00042302
    32e0:	00000279 	andeq	r0, r0, r9, ror r2
    32e4:	c60c3909 	strgt	r3, [ip], -r9, lsl #18
    32e8:	02000000 	andeq	r0, r0, #0
    32ec:	240f0823 	strcs	r0, [pc], #-2083	; 32f4 <_Min_Heap_Size+0x2af4>
    32f0:	09000003 	stmdbeq	r0, {r0, r1}
    32f4:	00c60c3c 	sbceq	r0, r6, ip, lsr ip
    32f8:	23020000 	movwcs	r0, #8192	; 0x2000
    32fc:	069d0f0c 	ldreq	r0, [sp], ip, lsl #30
    3300:	43090000 	movwmi	r0, #36864	; 0x9000
    3304:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3308:	10230200 	eorne	r0, r3, r0, lsl #4
    330c:	0008250f 	andeq	r2, r8, pc, lsl #10
    3310:	0c460900 	mcrreq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
    3314:	000000c6 	andeq	r0, r0, r6, asr #1
    3318:	0f142302 	svceq	0x00142302
    331c:	00000135 	andeq	r0, r0, r5, lsr r1
    3320:	c60c4909 	strgt	r4, [ip], -r9, lsl #18
    3324:	02000000 	andeq	r0, r0, #0
    3328:	03001823 	movweq	r1, #2083	; 0x823
    332c:	000007c7 	andeq	r0, r0, r7, asr #15
    3330:	87034b09 	strhi	r4, [r3, -r9, lsl #22]
    3334:	0b000004 	bleq	334c <_Min_Heap_Size+0x2b4c>
    3338:	003c0107 	eorseq	r0, ip, r7, lsl #2
    333c:	75090000 	strvc	r0, [r9, #-0]
    3340:	00054501 	andeq	r4, r5, r1, lsl #10
    3344:	075a0c00 	ldrbeq	r0, [sl, -r0, lsl #24]
    3348:	0c000000 	stceq	0, cr0, [r0], {-0}
    334c:	000002ad 	andeq	r0, r0, sp, lsr #5
    3350:	086d0c20 	stmdaeq	sp!, {r5, sl, fp}^
    3354:	0c240000 	stceq	0, cr0, [r4], #-0
    3358:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    335c:	07000c21 	streq	r0, [r0, -r1, lsr #24]
    3360:	0c220000 	stceq	0, cr0, [r2], #-0
    3364:	0000016f 	andeq	r0, r0, pc, ror #2
    3368:	080e0c23 	stmdaeq	lr, {r0, r1, r5, sl, fp}
    336c:	0ca00000 	stceq	0, cr0, [r0]
    3370:	0000065f 	andeq	r0, r0, pc, asr r6
    3374:	250300e0 	strcs	r0, [r3, #-224]	; 0xffffff20
    3378:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    337c:	05060387 	streq	r0, [r6, #-903]	; 0xfffffc79
    3380:	45060000 	strmi	r0, [r6, #-0]
    3384:	03000005 	movweq	r0, #5
    3388:	000007de 	ldrdeq	r0, [r0], -lr
    338c:	c6129009 	ldrgt	r9, [r2], -r9
    3390:	06000000 	streq	r0, [r0], -r0
    3394:	00000556 	andeq	r0, r0, r6, asr r5
    3398:	0000ca03 	andeq	ip, r0, r3, lsl #20
    339c:	129b0900 	addsne	r0, fp, #0, 18
    33a0:	000000c6 	andeq	r0, r0, r6, asr #1
    33a4:	00056706 	andeq	r6, r5, r6, lsl #14
    33a8:	04771000 	ldrbteq	r1, [r7], #-0
    33ac:	09480000 	stmdbeq	r8, {}^	; <UNPREDICTABLE>
    33b0:	067610a0 	ldrbteq	r1, [r6], -r0, lsr #1
    33b4:	a40f0000 	strge	r0, [pc], #-0	; 33bc <_Min_Heap_Size+0x2bbc>
    33b8:	09000004 	stmdbeq	r0, {r2}
    33bc:	067622a2 	ldrbteq	r2, [r6], -r2, lsr #5
    33c0:	23020000 	movwcs	r0, #8192	; 0x2000
    33c4:	1a840f00 	bne	fe106fcc <_estack+0xde105d94>
    33c8:	a4090000 	strge	r0, [r9], #-0
    33cc:	0004fa21 	andeq	pc, r4, r1, lsr #20
    33d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    33d4:	0001ee0f 	andeq	lr, r1, pc, lsl #28
    33d8:	22a60900 	adccs	r0, r6, #0, 18
    33dc:	0000067c 	andeq	r0, r0, ip, ror r6
    33e0:	0f202302 	svceq	0x00202302
    33e4:	00000376 	andeq	r0, r0, r6, ror r3
    33e8:	b021a809 	eorlt	sl, r1, r9, lsl #16
    33ec:	02000000 	andeq	r0, r0, #0
    33f0:	420f2423 	andmi	r2, pc, #587202560	; 0x23000000
    33f4:	09000001 	stmdbeq	r0, {r0}
    33f8:	00bc21aa 	adcseq	r2, ip, sl, lsr #3
    33fc:	23020000 	movwcs	r0, #8192	; 0x2000
    3400:	08450f26 	stmdaeq	r5, {r1, r2, r5, r8, r9, sl, fp}^
    3404:	ac090000 	stcge	0, cr0, [r9], {-0}
    3408:	00068222 	andeq	r8, r6, r2, lsr #4
    340c:	28230200 	stmdacs	r3!, {r9}
    3410:	00036b0f 	andeq	r6, r3, pc, lsl #22
    3414:	21ae0900 			; <UNDEFINED> instruction: 0x21ae0900
    3418:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    341c:	0f2c2302 	svceq	0x002c2302
    3420:	00000889 	andeq	r0, r0, r9, lsl #17
    3424:	bc21b009 	stclt	0, cr11, [r1], #-36	; 0xffffffdc
    3428:	02000000 	andeq	r0, r0, #0
    342c:	ff0f2e23 			; <UNDEFINED> instruction: 0xff0f2e23
    3430:	09000008 	stmdbeq	r0, {r3}
    3434:	05621fb2 	strbeq	r1, [r2, #-4018]!	; 0xfffff04e
    3438:	23020000 	movwcs	r0, #8192	; 0x2000
    343c:	10990f30 	addsne	r0, r9, r0, lsr pc
    3440:	b4090000 	strlt	r0, [r9], #-0
    3444:	00057324 	andeq	r7, r5, r4, lsr #6
    3448:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    344c:	0004e00f 	andeq	lr, r4, pc
    3450:	22b60900 	adcscs	r0, r6, #0, 18
    3454:	00000688 	andeq	r0, r0, r8, lsl #13
    3458:	0f382302 	svceq	0x00382302
    345c:	000002e0 	andeq	r0, r0, r0, ror #5
    3460:	8822b809 	stmdahi	r2!, {r0, r3, fp, ip, sp, pc}
    3464:	02000006 	andeq	r0, r0, #6
    3468:	a80f3c23 	stmdage	pc, {r0, r1, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    346c:	09000002 	stmdbeq	r0, {r1}
    3470:	026121ba 	rsbeq	r2, r1, #-2147483602	; 0x8000002e
    3474:	23020000 	movwcs	r0, #8192	; 0x2000
    3478:	003b0f40 	eorseq	r0, fp, r0, asr #30
    347c:	bc090000 	stclt	0, cr0, [r9], {-0}
    3480:	00055121 	andeq	r5, r5, r1, lsr #2
    3484:	41230200 			; <UNDEFINED> instruction: 0x41230200
    3488:	0008f20f 	andeq	pc, r8, pc, lsl #4
    348c:	21c00900 	biccs	r0, r0, r0, lsl #18
    3490:	00000551 	andeq	r0, r0, r1, asr r5
    3494:	0f422302 	svceq	0x00422302
    3498:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    349c:	d221c309 	eorle	ip, r1, #603979776	; 0x24000000
    34a0:	02000000 	andeq	r0, r0, #0
    34a4:	11004423 	tstne	r0, r3, lsr #8
    34a8:	0001d804 	andeq	sp, r1, r4, lsl #16
    34ac:	ab041100 	blge	1078b4 <_Min_Heap_Size+0x1070b4>
    34b0:	11000000 	mrsne	r0, (UNDEF: 0)
    34b4:	00009f04 	andeq	r9, r0, r4, lsl #30
    34b8:	7b041100 	blvc	1078c0 <_Min_Heap_Size+0x1070c0>
    34bc:	03000004 	movweq	r0, #4
    34c0:	00000479 	andeq	r0, r0, r9, ror r4
    34c4:	7803d509 	stmdavc	r3, {r0, r3, r8, sl, ip, lr, pc}
    34c8:	05000005 	streq	r0, [r0, #-5]
    34cc:	0000068e 	andeq	r0, r0, lr, lsl #13
    34d0:	00127115 	andseq	r7, r2, r5, lsl r1
    34d4:	0e6f0100 	poweqe	f0, f7, f0
    34d8:	0980010d 	stmibeq	r0, {r0, r2, r3, r8}
    34dc:	0af40800 	beq	ffd054e4 <_estack+0xdfd042ac>
    34e0:	04d50800 	ldrbeq	r0, [r5], #2048	; 0x800
    34e4:	96010000 	strls	r0, [r1], -r0
    34e8:	16000007 	strne	r0, [r0], -r7
    34ec:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    34f0:	300e6f01 	andcc	r6, lr, r1, lsl #30
    34f4:	00000796 	muleq	r0, r6, r7
    34f8:	000004fd 	strdeq	r0, [r0], -sp
    34fc:	000004f5 	strdeq	r0, [r0], -r5
    3500:	0001b617 	andeq	fp, r1, r7, lsl r6
    3504:	0e710100 	rpweqs	f0, f1, f0
    3508:	0000c60c 	andeq	ip, r0, ip, lsl #12
    350c:	00053300 	andeq	r3, r5, r0, lsl #6
    3510:	00053100 	andeq	r3, r5, r0, lsl #2
    3514:	15381700 	ldrne	r1, [r8, #-1792]!	; 0xfffff900
    3518:	72010000 	andvc	r0, r1, #0
    351c:	00c60c0e 	sbceq	r0, r6, lr, lsl #24
    3520:	054c0000 	strbeq	r0, [ip, #-0]
    3524:	05460000 	strbeq	r0, [r6, #-0]
    3528:	bc180000 	ldclt	0, cr0, [r8], {-0}
    352c:	ab080009 	blge	203558 <_Min_Heap_Size+0x202d58>
    3530:	17000045 	strne	r0, [r0, -r5, asr #32]
    3534:	19000007 	stmdbne	r0, {r0, r1, r2}
    3538:	03055001 	movweq	r5, #20481	; 0x5001
    353c:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    3540:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    3544:	000e780a 	andeq	r7, lr, sl, lsl #16
    3548:	000a0a1a 	andeq	r0, sl, sl, lsl sl
    354c:	0045ba08 	subeq	fp, r5, r8, lsl #20
    3550:	0a161800 	beq	589558 <_Min_Heap_Size+0x588d58>
    3554:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3558:	073e0000 	ldreq	r0, [lr, -r0]!
    355c:	01190000 	tsteq	r9, r0
    3560:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    3564:	1908002c 	stmdbne	r8, {r2, r3, r5}
    3568:	0a035101 	beq	d7974 <_Min_Heap_Size+0xd7174>
    356c:	18000e75 	stmdane	r0, {r0, r2, r4, r5, r6, r9, sl, fp}
    3570:	08000a22 	stmdaeq	r0, {r1, r5, r9, fp}
    3574:	000045ab 	andeq	r4, r0, fp, lsr #11
    3578:	0000075c 	andeq	r0, r0, ip, asr r7
    357c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3580:	002ca403 	eoreq	sl, ip, r3, lsl #8
    3584:	51011908 	tstpl	r1, r8, lsl #18
    3588:	0e760a03 	vaddeq.f32	s1, s12, s6
    358c:	0a2e1800 	beq	b89594 <_Min_Heap_Size+0xb88d94>
    3590:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3594:	077a0000 	ldrbeq	r0, [sl, -r0]!
    3598:	01190000 	tsteq	r9, r0
    359c:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    35a0:	1908002c 	stmdbne	r8, {r2, r3, r5}
    35a4:	0a035101 	beq	d79b0 <_Min_Heap_Size+0xd71b0>
    35a8:	1a000e77 	bne	6f8c <_Min_Heap_Size+0x678c>
    35ac:	08000a34 	stmdaeq	r0, {r2, r4, r5, r9, fp}
    35b0:	000045c9 	andeq	r4, r0, r9, asr #11
    35b4:	000a641a 	andeq	r6, sl, sl, lsl r4
    35b8:	0045d808 	subeq	sp, r5, r8, lsl #16
    35bc:	0ab61a00 	beq	fed89dc4 <_estack+0xded88b8c>
    35c0:	45d80800 	ldrbmi	r0, [r8, #2048]	; 0x800
    35c4:	11000000 	mrsne	r0, (UNDEF: 0)
    35c8:	00068e04 	andeq	r8, r6, r4, lsl #28
    35cc:	170f1b00 	strne	r1, [pc, -r0, lsl #22]
    35d0:	0a010000 	beq	435d8 <_Min_Heap_Size+0x42dd8>
    35d4:	3a011a0e 	bcc	49e14 <_Min_Heap_Size+0x49614>
    35d8:	aa000002 	bge	35e8 <_Min_Heap_Size+0x2de8>
    35dc:	9008000d 	andls	r0, r8, sp
    35e0:	7508000e 	strvc	r0, [r8, #-14]
    35e4:	01000005 	tsteq	r0, r5
    35e8:	000008cf 	andeq	r0, r0, pc, asr #17
    35ec:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    35f0:	0e0a0100 	adfeqe	f0, f2, f0
    35f4:	0007963e 	andeq	r9, r7, lr, lsr r6
    35f8:	0005e100 	andeq	lr, r5, r0, lsl #2
    35fc:	0005d100 	andeq	sp, r5, r0, lsl #2
    3600:	117c1700 	cmnne	ip, r0, lsl #14
    3604:	0c010000 	stceq	0, cr0, [r1], {-0}
    3608:	06820d0e 	streq	r0, [r2], lr, lsl #26
    360c:	06530000 	ldrbeq	r0, [r3], -r0
    3610:	064d0000 	strbeq	r0, [sp], -r0
    3614:	e6170000 	ldr	r0, [r7], -r0
    3618:	01000011 	tsteq	r0, r1, lsl r0
    361c:	cf0d0e0d 	svcgt	0x000d0e0d
    3620:	83000008 	movwhi	r0, #8
    3624:	7d000006 	stcvc	0, cr0, [r0, #-24]	; 0xffffffe8
    3628:	1c000006 	stcne	0, cr0, [r0], {6}
    362c:	08000e1e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, fp}
    3630:	08000e36 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl, fp}
    3634:	00000892 	muleq	r0, r2, r8
    3638:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    363c:	0e420100 	dvfeqs	f0, f2, f0
    3640:	0000c609 	andeq	ip, r0, r9, lsl #12
    3644:	0006b000 	andeq	fp, r6, r0
    3648:	0006ae00 	andeq	sl, r6, r0, lsl #28
    364c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    3650:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
    3654:	00000800 	andeq	r0, r0, r0, lsl #16
    3658:	08000e20 	stmdaeq	r0, {r5, r9, sl, fp}
    365c:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
    3660:	090e4201 	stmdbeq	lr, {r0, r9, lr}
    3664:	00000852 	andeq	r0, r0, r2, asr r8
    3668:	0045901f 	subeq	r9, r5, pc, lsl r0
    366c:	0006c900 	andeq	ip, r6, r0, lsl #18
    3670:	0006c300 	andeq	ip, r6, r0, lsl #6
    3674:	459d2000 	ldrmi	r2, [sp]
    3678:	06f80000 	ldrbteq	r0, [r8], r0
    367c:	06f60000 	ldrbteq	r0, [r6], r0
    3680:	21000000 	mrscs	r0, (UNDEF: 0)
    3684:	0000453c 	andeq	r4, r0, ip, lsr r5
    3688:	08000e2c 	stmdaeq	r0, {r2, r3, r5, r9, sl, fp}
    368c:	0e2c0001 	cdpeq	0, 2, cr0, cr12, cr1, {0}
    3690:	0e320800 	cdpeq	8, 3, cr0, cr2, cr0, {0}
    3694:	42010800 	andmi	r0, r1, #0, 16
    3698:	5c1f090e 			; <UNDEFINED> instruction: 0x5c1f090e
    369c:	0f000045 	svceq	0x00000045
    36a0:	0b000007 	bleq	36c4 <_Min_Heap_Size+0x2ec4>
    36a4:	1f000007 	svcne	0x00000007
    36a8:	0000454f 	andeq	r4, r0, pc, asr #10
    36ac:	00000731 	andeq	r0, r0, r1, lsr r7
    36b0:	0000072f 	andeq	r0, r0, pc, lsr #14
    36b4:	00456920 	subeq	r6, r5, r0, lsr #18
    36b8:	00074600 	andeq	r4, r7, r0, lsl #12
    36bc:	00074400 	andeq	r4, r7, r0, lsl #8
    36c0:	1c000000 	stcne	0, cr0, [r0], {-0}
    36c4:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
    36c8:	08000e4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl, fp}
    36cc:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
    36d0:	0001b622 	andeq	fp, r1, r2, lsr #12
    36d4:	0e480100 	dvfeqe	f0, f0, f0
    36d8:	0000d20b 	andeq	sp, r0, fp, lsl #4
    36dc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    36e0:	0e541800 	cdpeq	8, 5, cr1, cr4, cr0, {0}
    36e4:	1a8f0800 	bne	fe3c56ec <_estack+0xde3c44b4>
    36e8:	08c50000 	stmiaeq	r5, {}^	; <UNPREDICTABLE>
    36ec:	01190000 	tsteq	r9, r0
    36f0:	01f30350 	mvnseq	r0, r0, asr r3
    36f4:	861a0050 			; <UNDEFINED> instruction: 0x861a0050
    36f8:	a008000e 	andge	r0, r8, lr
    36fc:	0000001b 	andeq	r0, r0, fp, lsl r0
    3700:	00b00411 	adcseq	r0, r0, r1, lsl r4
    3704:	1e1b0000 	cdpne	0, 1, cr0, cr11, cr0, {0}
    3708:	01000016 	tsteq	r0, r6, lsl r0
    370c:	011a0df1 			; <UNDEFINED> instruction: 0x011a0df1
    3710:	0000023a 	andeq	r0, r0, sl, lsr r2
    3714:	08000d7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, fp}
    3718:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
    371c:	00000759 	andeq	r0, r0, r9, asr r7
    3720:	00091b01 	andeq	r1, r9, r1, lsl #22
    3724:	14ff1600 	ldrbtne	r1, [pc], #1536	; 372c <_Min_Heap_Size+0x2f2c>
    3728:	f1010000 	setend	le
    372c:	0796420d 	ldreq	r4, [r6, sp, lsl #4]
    3730:	077d0000 	ldrbeq	r0, [sp, -r0]!
    3734:	07790000 	ldrbeq	r0, [r9, -r0]!
    3738:	90230000 	eorls	r0, r3, r0
    373c:	f608000d 			; <UNDEFINED> instruction: 0xf608000d
    3740:	1900001b 	stmdbne	r0, {r0, r1, r3, r4}
    3744:	f3035001 	vhadd.u8	d5, d3, d1
    3748:	00005001 	andeq	r5, r0, r1
    374c:	0015bb24 	andseq	fp, r5, r4, lsr #22
    3750:	0dc90100 	stfeqe	f0, [r9]
    3754:	023a011a 	eorseq	r0, sl, #-2147483642	; 0x80000006
    3758:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    375c:	09800800 	stmibeq	r0, {fp}
    3760:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3764:	09640100 	stmdbeq	r4!, {r8}^
    3768:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    376c:	01000014 	tsteq	r0, r4, lsl r0
    3770:	963f0dc9 	ldrtls	r0, [pc], -r9, asr #27
    3774:	a8000007 	stmdage	r0, {r0, r1, r2}
    3778:	9e000007 	cdpls	0, 0, cr0, cr0, cr7, {0}
    377c:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    3780:	00706d74 	rsbseq	r6, r0, r4, ror sp
    3784:	130dcb01 	movwne	ip, #56065	; 0xdb01
    3788:	00000964 	andeq	r0, r0, r4, ror #18
    378c:	000007f1 	strdeq	r0, [r0], -r1
    3790:	000007ed 	andeq	r0, r0, sp, ror #15
    3794:	c1041100 	mrsgt	r1, (UNDEF: 20)
    3798:	15000000 	strne	r0, [r0, #-0]
    379c:	000012d7 	ldrdeq	r1, [r0], -r7
    37a0:	0d0daf01 	stceq	15, cr10, [sp, #-4]
    37a4:	00000001 	andeq	r0, r0, r1
    37a8:	00000000 	andeq	r0, r0, r0
    37ac:	00081000 	andeq	r1, r8, r0
    37b0:	09b90100 	ldmibeq	r9!, {r8}
    37b4:	87160000 	ldrhi	r0, [r6, -r0]
    37b8:	01000013 	tsteq	r0, r3, lsl r0
    37bc:	883c0daf 	ldmdahi	ip!, {r0, r1, r2, r3, r5, r7, r8, sl, fp}
    37c0:	34000006 	strcc	r0, [r0], #-6
    37c4:	30000008 	andcc	r0, r0, r8
    37c8:	17000008 	strne	r0, [r0, -r8]
    37cc:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    37d0:	170db101 	strne	fp, [sp, -r1, lsl #2]
    37d4:	00000796 	muleq	r0, r6, r7
    37d8:	00000857 	andeq	r0, r0, r7, asr r8
    37dc:	00000855 	andeq	r0, r0, r5, asr r8
    37e0:	0000001a 	andeq	r0, r0, sl, lsl r0
    37e4:	001ac900 	andseq	ip, sl, r0, lsl #18
    37e8:	c6150000 	ldrgt	r0, [r5], -r0
    37ec:	01000016 	tsteq	r0, r6, lsl r0
    37f0:	010d0d93 			; <UNDEFINED> instruction: 0x010d0d93
	...
    37fc:	0000086a 	andeq	r0, r0, sl, ror #16
    3800:	000a0801 	andeq	r0, sl, r1, lsl #16
    3804:	13871600 	orrne	r1, r7, #0, 12
    3808:	93010000 	movwls	r0, #4096	; 0x1000
    380c:	06883c0d 	streq	r3, [r8], sp, lsl #24
    3810:	088e0000 	stmeq	lr, {}	; <UNPREDICTABLE>
    3814:	088a0000 	stmeq	sl, {}	; <UNPREDICTABLE>
    3818:	ff170000 			; <UNDEFINED> instruction: 0xff170000
    381c:	01000014 	tsteq	r0, r4, lsl r0
    3820:	96170d95 			; <UNDEFINED> instruction: 0x96170d95
    3824:	b1000007 	tstlt	r0, r7
    3828:	af000008 	svcge	0x00000008
    382c:	1a000008 	bne	3854 <_Min_Heap_Size+0x3054>
    3830:	00000000 	andeq	r0, r0, r0
    3834:	00001af4 	strdeq	r1, [r0], -r4
    3838:	128a1500 	addne	r1, sl, #0, 10
    383c:	65010000 	strvs	r0, [r1, #-0]
    3840:	00010d0d 	andeq	r0, r1, sp, lsl #26
    3844:	00000000 	andeq	r0, r0, r0
    3848:	c4000000 	strgt	r0, [r0], #-0
    384c:	01000008 	tsteq	r0, r8
    3850:	00000a57 	andeq	r0, r0, r7, asr sl
    3854:	00138716 	andseq	r8, r3, r6, lsl r7
    3858:	0d650100 	stfeqe	f0, [r5, #-0]
    385c:	00068838 	andeq	r8, r6, r8, lsr r8
    3860:	0008e800 	andeq	lr, r8, r0, lsl #16
    3864:	0008e400 	andeq	lr, r8, r0, lsl #8
    3868:	14ff1700 	ldrbtne	r1, [pc], #1792	; 3870 <_Min_Heap_Size+0x3070>
    386c:	67010000 	strvs	r0, [r1, -r0]
    3870:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    3874:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    3878:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    387c:	001a0000 	andseq	r0, sl, r0
    3880:	1f000000 	svcne	0x00000000
    3884:	0000001b 	andeq	r0, r0, fp, lsl r0
    3888:	00136f15 	andseq	r6, r3, r5, lsl pc
    388c:	0d370100 	ldfeqs	f0, [r7, #-0]
    3890:	0000010d 	andeq	r0, r0, sp, lsl #2
    3894:	00000000 	andeq	r0, r0, r0
    3898:	091e0000 	ldmdbeq	lr, {}	; <UNPREDICTABLE>
    389c:	a6010000 	strge	r0, [r1], -r0
    38a0:	1600000a 	strne	r0, [r0], -sl
    38a4:	00001387 	andeq	r1, r0, r7, lsl #7
    38a8:	380d3701 	stmdacc	sp, {r0, r8, r9, sl, ip, sp}
    38ac:	00000688 	andeq	r0, r0, r8, lsl #13
    38b0:	00000942 	andeq	r0, r0, r2, asr #18
    38b4:	0000093e 	andeq	r0, r0, lr, lsr r9
    38b8:	0014ff17 	andseq	pc, r4, r7, lsl pc	; <UNPREDICTABLE>
    38bc:	0d390100 	ldfeqs	f0, [r9, #-0]
    38c0:	00079617 	andeq	r9, r7, r7, lsl r6
    38c4:	00096500 	andeq	r6, r9, r0, lsl #10
    38c8:	00096300 	andeq	r6, r9, r0, lsl #6
    38cc:	00001a00 	andeq	r1, r0, r0, lsl #20
    38d0:	1b1f0000 	blne	7c38d8 <_Min_Heap_Size+0x7c30d8>
    38d4:	15000000 	strne	r0, [r0, #-0]
    38d8:	000015cc 	andeq	r1, r0, ip, asr #11
    38dc:	0d0d1f01 	stceq	15, cr1, [sp, #-4]
    38e0:	000d9801 	andeq	r9, sp, r1, lsl #16
    38e4:	000da808 	andeq	sl, sp, r8, lsl #16
    38e8:	00097808 	andeq	r7, r9, r8, lsl #16
    38ec:	0af50100 	beq	ffd43cf4 <_estack+0xdfd42abc>
    38f0:	87160000 	ldrhi	r0, [r6, -r0]
    38f4:	01000013 	tsteq	r0, r3, lsl r0
    38f8:	88350d1f 	ldmdahi	r5!, {r0, r1, r2, r3, r4, r8, sl, fp}
    38fc:	9c000006 	stcls	0, cr0, [r0], {6}
    3900:	98000009 	stmdals	r0, {r0, r3}
    3904:	17000009 	strne	r0, [r0, -r9]
    3908:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    390c:	170d2101 	strne	r2, [sp, -r1, lsl #2]
    3910:	00000796 	muleq	r0, r6, r7
    3914:	000009bf 			; <UNDEFINED> instruction: 0x000009bf
    3918:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
    391c:	000da61a 	andeq	sl, sp, sl, lsl r6
    3920:	001b4a08 	andseq	r4, fp, r8, lsl #20
    3924:	56250000 	strtpl	r0, [r5], -r0
    3928:	01000011 	tsteq	r0, r1, lsl r0
    392c:	010d0d07 	tsteq	sp, r7, lsl #26
    3930:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
    3934:	08000920 	stmdaeq	r0, {r5, r8, fp}
    3938:	01007d02 	tsteq	r0, r2, lsl #26
    393c:	00000ce9 	andeq	r0, r0, r9, ror #25
    3940:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    3944:	0d070100 	stfeqs	f0, [r7, #-0]
    3948:	00079634 	andeq	r9, r7, r4, lsr r6
    394c:	0009d400 	andeq	sp, r9, r0, lsl #8
    3950:	0009d200 	andeq	sp, r9, r0, lsl #4
    3954:	08c41c00 	stmiaeq	r4, {sl, fp, ip}^
    3958:	08dc0800 	ldmeq	ip, {fp}^
    395c:	0bbc0800 	bleq	fef05964 <_estack+0xdef0472c>
    3960:	761d0000 	ldrvc	r0, [sp], -r0
    3964:	01006c61 	tsteq	r0, r1, ror #24
    3968:	c6030d0a 	strgt	r0, [r3], -sl, lsl #26
    396c:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    3970:	e7000009 	str	r0, [r0, -r9]
    3974:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    3978:	0000457d 	andeq	r4, r0, sp, ror r5
    397c:	080008c6 	stmdaeq	r0, {r1, r2, r6, r7, fp}
    3980:	08c60000 	stmiaeq	r6, {}^	; <UNPREDICTABLE>
    3984:	08ce0800 	stmiaeq	lr, {fp}^
    3988:	0a010800 	beq	45990 <_Min_Heap_Size+0x45190>
    398c:	0b7c030d 	bleq	1f045c8 <_Min_Heap_Size+0x1f03dc8>
    3990:	901f0000 	andsls	r0, pc, r0
    3994:	02000045 	andeq	r0, r0, #69	; 0x45
    3998:	fc00000a 	stc2	0, cr0, [r0], {10}
    399c:	20000009 	andcs	r0, r0, r9
    39a0:	0000459d 	muleq	r0, sp, r5
    39a4:	00000a31 	andeq	r0, r0, r1, lsr sl
    39a8:	00000a2f 	andeq	r0, r0, pc, lsr #20
    39ac:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    39b0:	08d20000 	ldmeq	r2, {}^	; <UNPREDICTABLE>
    39b4:	00010800 	andeq	r0, r1, r0, lsl #16
    39b8:	080008d2 	stmdaeq	r0, {r1, r4, r6, r7, fp}
    39bc:	080008d8 	stmdaeq	r0, {r3, r4, r6, r7, fp}
    39c0:	030d0a01 	movweq	r0, #55809	; 0xda01
    39c4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    39c8:	000a4800 	andeq	r4, sl, r0, lsl #16
    39cc:	000a4400 	andeq	r4, sl, r0, lsl #8
    39d0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2ad8 <_Min_Heap_Size+0x22d8>
    39d4:	0a6a0000 	beq	1a839dc <_Min_Heap_Size+0x1a831dc>
    39d8:	0a680000 	beq	1a039e0 <_Min_Heap_Size+0x1a031e0>
    39dc:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    39e0:	7f000045 	svcvc	0x00000045
    39e4:	7d00000a 	stcvc	0, cr0, [r0, #-40]	; 0xffffffd8
    39e8:	0000000a 	andeq	r0, r0, sl
    39ec:	08dc1c00 	ldmeq	ip, {sl, fp, ip}^
    39f0:	08f40800 	ldmeq	r4!, {fp}^
    39f4:	0c540800 	mrrceq	8, 0, r0, r4, cr0
    39f8:	761d0000 	ldrvc	r0, [sp], -r0
    39fc:	01006c61 	tsteq	r0, r1, ror #24
    3a00:	c6030d0b 	strgt	r0, [r3], -fp, lsl #26
    3a04:	94000000 	strls	r0, [r0], #-0
    3a08:	9200000a 	andls	r0, r0, #10
    3a0c:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    3a10:	0000457d 	andeq	r4, r0, sp, ror r5
    3a14:	080008de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, fp}
    3a18:	08de0000 	ldmeq	lr, {}^	; <UNPREDICTABLE>
    3a1c:	08e60800 	stmiaeq	r6!, {fp}^
    3a20:	0b010800 	bleq	45a28 <_Min_Heap_Size+0x45228>
    3a24:	0c14030d 	ldceq	3, cr0, [r4], {13}
    3a28:	901f0000 	andsls	r0, pc, r0
    3a2c:	ad000045 	stcge	0, cr0, [r0, #-276]	; 0xfffffeec
    3a30:	a700000a 	strge	r0, [r0, -sl]
    3a34:	2000000a 	andcs	r0, r0, sl
    3a38:	0000459d 	muleq	r0, sp, r5
    3a3c:	00000adc 	ldrdeq	r0, [r0], -ip
    3a40:	00000ada 	ldrdeq	r0, [r0], -sl
    3a44:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3a48:	08ea0000 	stmiaeq	sl!, {}^	; <UNPREDICTABLE>
    3a4c:	00010800 	andeq	r0, r1, r0, lsl #16
    3a50:	080008ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, fp}
    3a54:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
    3a58:	030d0b01 	movweq	r0, #56065	; 0xdb01
    3a5c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3a60:	000af300 	andeq	pc, sl, r0, lsl #6
    3a64:	000aef00 	andeq	lr, sl, r0, lsl #30
    3a68:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2b70 <_Min_Heap_Size+0x2370>
    3a6c:	0b150000 	bleq	543a74 <_Min_Heap_Size+0x543274>
    3a70:	0b130000 	bleq	4c3a78 <_Min_Heap_Size+0x4c3278>
    3a74:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3a78:	2a000045 	bcs	3b94 <_Min_Heap_Size+0x3394>
    3a7c:	2800000b 	stmdacs	r0, {r0, r1, r3}
    3a80:	0000000b 	andeq	r0, r0, fp
    3a84:	09062600 	stmdbeq	r6, {r9, sl, sp}
    3a88:	09200800 	stmdbeq	r0!, {fp}
    3a8c:	761d0800 	ldrvc	r0, [sp], -r0, lsl #16
    3a90:	01006c61 	tsteq	r0, r1, ror #24
    3a94:	c6050d10 			; <UNDEFINED> instruction: 0xc6050d10
    3a98:	3f000000 	svccc	0x00000000
    3a9c:	3d00000b 	stccc	0, cr0, [r0, #-44]	; 0xffffffd4
    3aa0:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    3aa4:	0000457d 	andeq	r4, r0, sp, ror r5
    3aa8:	08000908 	stmdaeq	r0, {r3, r8, fp}
    3aac:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    3ab0:	09100800 	ldmdbeq	r0, {fp}
    3ab4:	10010800 	andne	r0, r1, r0, lsl #16
    3ab8:	0ca8050d 	cfstr32eq	mvfx0, [r8], #52	; 0x34
    3abc:	901f0000 	andsls	r0, pc, r0
    3ac0:	58000045 	stmdapl	r0, {r0, r2, r6}
    3ac4:	5200000b 	andpl	r0, r0, #11
    3ac8:	2000000b 	andcs	r0, r0, fp
    3acc:	0000459d 	muleq	r0, sp, r5
    3ad0:	00000b87 	andeq	r0, r0, r7, lsl #23
    3ad4:	00000b85 	andeq	r0, r0, r5, lsl #23
    3ad8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3adc:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    3ae0:	00010800 	andeq	r0, r1, r0, lsl #16
    3ae4:	08000914 	stmdaeq	r0, {r2, r4, r8, fp}
    3ae8:	0800091a 	stmdaeq	r0, {r1, r3, r4, r8, fp}
    3aec:	050d1001 	streq	r1, [sp, #-1]
    3af0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3af4:	000b9e00 	andeq	r9, fp, r0, lsl #28
    3af8:	000b9a00 	andeq	r9, fp, r0, lsl #20
    3afc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2c04 <_Min_Heap_Size+0x2404>
    3b00:	0bc00000 	bleq	ff003b08 <_estack+0xdf0028d0>
    3b04:	0bbe0000 	bleq	fef83b0c <_estack+0xdef828d4>
    3b08:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3b0c:	d5000045 	strle	r0, [r0, #-69]	; 0xffffffbb
    3b10:	d300000b 	movwle	r0, #11
    3b14:	0000000b 	andeq	r0, r0, fp
    3b18:	69250000 	stmdbvs	r5!, {}	; <UNPREDICTABLE>
    3b1c:	01000011 	tsteq	r0, r1, lsl r0
    3b20:	010d0cf9 	strdeq	r0, [sp, -r9]
	...
    3b2c:	01007d02 	tsteq	r0, r2, lsl #26
    3b30:	00000dad 	andeq	r0, r0, sp, lsr #27
    3b34:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    3b38:	0cf90100 	ldfeqe	f0, [r9]
    3b3c:	00079634 	andeq	r9, r7, r4, lsr r6
    3b40:	000bea00 	andeq	lr, fp, r0, lsl #20
    3b44:	000be800 	andeq	lr, fp, r0, lsl #16
    3b48:	00002600 	andeq	r2, r0, r0, lsl #12
    3b4c:	00000000 	andeq	r0, r0, r0
    3b50:	761d0000 	ldrvc	r0, [sp], -r0
    3b54:	01006c61 	tsteq	r0, r1, ror #24
    3b58:	c6030cfc 			; <UNDEFINED> instruction: 0xc6030cfc
    3b5c:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    3b60:	fd00000b 	stc2	0, cr0, [r0, #-44]	; 0xffffffd4
    3b64:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    3b68:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    3b78:	fc010000 	stc2	0, cr0, [r1], {-0}
    3b7c:	0d6c030c 	stcleq	3, cr0, [ip, #-48]!	; 0xffffffd0
    3b80:	901f0000 	andsls	r0, pc, r0
    3b84:	18000045 	stmdane	r0, {r0, r2, r6}
    3b88:	1200000c 	andne	r0, r0, #12
    3b8c:	2000000c 	andcs	r0, r0, ip
    3b90:	0000459d 	muleq	r0, sp, r5
    3b94:	00000c47 	andeq	r0, r0, r7, asr #24
    3b98:	00000c45 	andeq	r0, r0, r5, asr #24
    3b9c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3ba0:	00000000 	andeq	r0, r0, r0
    3ba4:	00010000 	andeq	r0, r1, r0
	...
    3bb0:	030cfc01 	movweq	pc, #52225	; 0xcc01	; <UNPREDICTABLE>
    3bb4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3bb8:	000c5e00 	andeq	r5, ip, r0, lsl #28
    3bbc:	000c5a00 	andeq	r5, ip, r0, lsl #20
    3bc0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2cc8 <_Min_Heap_Size+0x24c8>
    3bc4:	0c800000 	stceq	0, cr0, [r0], {0}
    3bc8:	0c7e0000 	ldcleq	0, cr0, [lr], #-0
    3bcc:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3bd0:	95000045 	strls	r0, [r0, #-69]	; 0xffffffbb
    3bd4:	9300000c 	movwls	r0, #12
    3bd8:	0000000c 	andeq	r0, r0, ip
    3bdc:	01270000 			; <UNDEFINED> instruction: 0x01270000
    3be0:	0000147f 	andeq	r1, r0, pc, ror r4
    3be4:	130cc701 	movwne	ip, #50945	; 0xc701
    3be8:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    3bf4:	000ca800 	andeq	sl, ip, r0, lsl #16
    3bf8:	10190100 	andsne	r0, r9, r0, lsl #2
    3bfc:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    3c00:	01000014 	tsteq	r0, r4, lsl r0
    3c04:	963e0cc7 	ldrtls	r0, [lr], -r7, asr #25
    3c08:	e6000007 	str	r0, [r0], -r7
    3c0c:	e000000c 	and	r0, r0, ip
    3c10:	1600000c 	strne	r0, [r0], -ip
    3c14:	00001150 	andeq	r1, r0, r0, asr r1
    3c18:	4e0cc701 	cdpmi	7, 0, cr12, cr12, cr1, {0}
    3c1c:	00000682 	andeq	r0, r0, r2, lsl #13
    3c20:	00000d18 	andeq	r0, r0, r8, lsl sp
    3c24:	00000d12 	andeq	r0, r0, r2, lsl sp
    3c28:	0026c616 	eoreq	ip, r6, r6, lsl r6
    3c2c:	0cc70100 	stfeqe	f0, [r7], {0}
    3c30:	0000b05e 	andeq	fp, r0, lr, asr r0
    3c34:	000d4c00 	andeq	r4, sp, r0, lsl #24
    3c38:	000d4400 	andeq	r4, sp, r0, lsl #8
    3c3c:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    3c40:	c9010070 	stmdbgt	r1, {r4, r5, r6}
    3c44:	10190d0c 	andsne	r0, r9, ip, lsl #26
    3c48:	0d870000 	stceq	0, cr0, [r7]
    3c4c:	0d850000 	stceq	0, cr0, [r5]
    3c50:	001c0000 	andseq	r0, ip, r0
    3c54:	00000000 	andeq	r0, r0, r0
    3c58:	3f000000 	svccc	0x00000000
    3c5c:	2200000e 	andcs	r0, r0, #14
    3c60:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    3c64:	030ce201 	movweq	lr, #49665	; 0xc201
    3c68:	000000d2 	ldrdeq	r0, [r0], -r2
    3c6c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    3c70:	0000001c 	andeq	r0, r0, ip, lsl r0
    3c74:	00000000 	andeq	r0, r0, r0
    3c78:	000ed700 	andeq	sp, lr, r0, lsl #14
    3c7c:	61761d00 	cmnvs	r6, r0, lsl #26
    3c80:	e701006c 	str	r0, [r1, -ip, rrx]
    3c84:	00c6050c 	sbceq	r0, r6, ip, lsl #10
    3c88:	0da10000 	stceq	0, cr0, [r1]
    3c8c:	0d9f0000 	ldceq	0, cr0, [pc]	; 3c94 <_Min_Heap_Size+0x3494>
    3c90:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3c94:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3ca4:	0ce70100 	stfeqe	f0, [r7]
    3ca8:	000e9705 	andeq	r9, lr, r5, lsl #14
    3cac:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3cb0:	0dba0000 	ldceq	0, cr0, [sl]
    3cb4:	0db40000 	ldceq	0, cr0, [r4]
    3cb8:	9d200000 	stcls	0, cr0, [r0, #-0]
    3cbc:	e9000045 	stmdb	r0, {r0, r2, r6}
    3cc0:	e700000d 	str	r0, [r0, -sp]
    3cc4:	0000000d 	andeq	r0, r0, sp
    3cc8:	00453c21 	subeq	r3, r5, r1, lsr #24
    3ccc:	00000000 	andeq	r0, r0, r0
    3cd0:	00000100 	andeq	r0, r0, r0, lsl #2
    3cd4:	00000000 	andeq	r0, r0, r0
    3cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    3cdc:	1f050ce7 	svcne	0x00050ce7
    3ce0:	0000455c 	andeq	r4, r0, ip, asr r5
    3ce4:	00000e00 	andeq	r0, r0, r0, lsl #28
    3ce8:	00000dfc 	strdeq	r0, [r0], -ip
    3cec:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3cf0:	000e2200 	andeq	r2, lr, r0, lsl #4
    3cf4:	000e2000 	andeq	r2, lr, r0
    3cf8:	45692000 	strbmi	r2, [r9, #-0]!
    3cfc:	0e370000 	cdpeq	0, 3, cr0, cr7, cr0, {0}
    3d00:	0e350000 	cdpeq	0, 3, cr0, cr5, cr0, {0}
    3d04:	00000000 	andeq	r0, r0, r0
    3d08:	0000001c 	andeq	r0, r0, ip, lsl r0
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	000f6f00 	andeq	r6, pc, r0, lsl #30
    3d14:	61761d00 	cmnvs	r6, r0, lsl #26
    3d18:	eb01006c 	bl	43ed0 <_Min_Heap_Size+0x436d0>
    3d1c:	00c6030c 	sbceq	r0, r6, ip, lsl #6
    3d20:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
    3d24:	0e4a0000 	cdpeq	0, 4, cr0, cr10, cr0, {0}
    3d28:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3d2c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3d3c:	0ceb0100 	stfeqe	f0, [fp]
    3d40:	000f2f03 	andeq	r2, pc, r3, lsl #30
    3d44:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3d48:	0e650000 	cdpeq	0, 6, cr0, cr5, cr0, {0}
    3d4c:	0e5f0000 	cdpeq	0, 5, cr0, cr15, cr0, {0}
    3d50:	9d200000 	stcls	0, cr0, [r0, #-0]
    3d54:	94000045 	strls	r0, [r0], #-69	; 0xffffffbb
    3d58:	9200000e 	andls	r0, r0, #14
    3d5c:	0000000e 	andeq	r0, r0, lr
    3d60:	00453c21 	subeq	r3, r5, r1, lsr #24
    3d64:	00000000 	andeq	r0, r0, r0
    3d68:	00000100 	andeq	r0, r0, r0, lsl #2
    3d6c:	00000000 	andeq	r0, r0, r0
    3d70:	01000000 	mrseq	r0, (UNDEF: 0)
    3d74:	1f030ceb 	svcne	0x00030ceb
    3d78:	0000455c 	andeq	r4, r0, ip, asr r5
    3d7c:	00000eab 	andeq	r0, r0, fp, lsr #29
    3d80:	00000ea7 	andeq	r0, r0, r7, lsr #29
    3d84:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3d88:	000ecd00 	andeq	ip, lr, r0, lsl #26
    3d8c:	000ecb00 	andeq	ip, lr, r0, lsl #22
    3d90:	45692000 	strbmi	r2, [r9, #-0]!
    3d94:	0ee20000 	cdpeq	0, 14, cr0, cr2, cr0, {0}
    3d98:	0ee00000 	cdpeq	0, 14, cr0, cr0, cr0, {0}
    3d9c:	00000000 	andeq	r0, r0, r0
    3da0:	0000001c 	andeq	r0, r0, ip, lsl r0
    3da4:	00000000 	andeq	r0, r0, r0
    3da8:	00100700 	andseq	r0, r0, r0, lsl #14
    3dac:	61761d00 	cmnvs	r6, r0, lsl #26
    3db0:	ef01006c 	svc	0x0001006c
    3db4:	00c6030c 	sbceq	r0, r6, ip, lsl #6
    3db8:	0ef70000 	cdpeq	0, 15, cr0, cr7, cr0, {0}
    3dbc:	0ef50000 	cdpeq	0, 15, cr0, cr5, cr0, {0}
    3dc0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3dc4:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3dd4:	0cef0100 	stfeqe	f0, [pc]	; 3ddc <_Min_Heap_Size+0x35dc>
    3dd8:	000fc703 	andeq	ip, pc, r3, lsl #14
    3ddc:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3de0:	0f100000 	svceq	0x00100000
    3de4:	0f0a0000 	svceq	0x000a0000
    3de8:	9d200000 	stcls	0, cr0, [r0, #-0]
    3dec:	3f000045 	svccc	0x00000045
    3df0:	3d00000f 	stccc	0, cr0, [r0, #-60]	; 0xffffffc4
    3df4:	0000000f 	andeq	r0, r0, pc
    3df8:	00453c21 	subeq	r3, r5, r1, lsr #24
    3dfc:	00000000 	andeq	r0, r0, r0
    3e00:	00000100 	andeq	r0, r0, r0, lsl #2
    3e04:	00000000 	andeq	r0, r0, r0
    3e08:	01000000 	mrseq	r0, (UNDEF: 0)
    3e0c:	1f030cef 	svcne	0x00030cef
    3e10:	0000455c 	andeq	r4, r0, ip, asr r5
    3e14:	00000f56 	andeq	r0, r0, r6, asr pc
    3e18:	00000f52 	andeq	r0, r0, r2, asr pc
    3e1c:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3e20:	000f7800 	andeq	r7, pc, r0, lsl #16
    3e24:	000f7600 	andeq	r7, pc, r0, lsl #12
    3e28:	45692000 	strbmi	r2, [r9, #-0]!
    3e2c:	0f8d0000 	svceq	0x008d0000
    3e30:	0f8b0000 	svceq	0x008b0000
    3e34:	00000000 	andeq	r0, r0, r0
    3e38:	00000023 	andeq	r0, r0, r3, lsr #32
    3e3c:	0045e300 	subeq	lr, r5, r0, lsl #6
    3e40:	52011900 	andpl	r1, r1, #0, 18
    3e44:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    3e48:	04110000 	ldreq	r0, [r1], #-0
    3e4c:	000000c6 	andeq	r0, r0, r6, asr #1
    3e50:	125b0128 	subsne	r0, fp, #40, 2
    3e54:	a4010000 	strge	r0, [r1], #-0
    3e58:	3a01130c 	bcc	48a90 <_Min_Heap_Size+0x48290>
    3e5c:	00000002 	andeq	r0, r0, r2
    3e60:	00000000 	andeq	r0, r0, r0
    3e64:	02000000 	andeq	r0, r0, #0
    3e68:	7801007d 	stmdavc	r1, {r0, r2, r3, r4, r5, r6}
    3e6c:	16000010 			; <UNDEFINED> instruction: 0x16000010
    3e70:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    3e74:	3d0ca401 	cfstrscc	mvf10, [ip, #-4]
    3e78:	00000796 	muleq	r0, r6, r7
    3e7c:	00000fa4 	andeq	r0, r0, r4, lsr #31
    3e80:	00000fa0 	andeq	r0, r0, r0, lsr #31
    3e84:	00115029 	andseq	r5, r1, r9, lsr #32
    3e88:	0ca40100 	stfeqs	f0, [r4]
    3e8c:	0006824d 	andeq	r8, r6, sp, asr #4
    3e90:	16510100 	ldrbne	r0, [r1], -r0, lsl #2
    3e94:	000026c6 	andeq	r2, r0, r6, asr #13
    3e98:	5d0ca401 	cfstrspl	mvf10, [ip, #-4]
    3e9c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    3ea0:	00000fcb 	andeq	r0, r0, fp, asr #31
    3ea4:	00000fc5 	andeq	r0, r0, r5, asr #31
    3ea8:	14201b00 	strtne	r1, [r0], #-2816	; 0xfffff500
    3eac:	71010000 	mrsvc	r0, (UNDEF: 1)
    3eb0:	3a011a0c 	bcc	4a6e8 <_Min_Heap_Size+0x49ee8>
    3eb4:	f4000002 	vst4.8	{d0-d3}, [r0], r2
    3eb8:	7e08000a 	cdpvc	0, 0, cr0, cr8, cr10, {0}
    3ebc:	f808000b 			; <UNDEFINED> instruction: 0xf808000b
    3ec0:	0100000f 	tsteq	r0, pc
    3ec4:	00001138 	andeq	r1, r0, r8, lsr r1
    3ec8:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    3ecc:	0c710100 	ldfeqe	f0, [r1], #-0
    3ed0:	0007964a 	andeq	r9, r7, sl, asr #12
    3ed4:	00104000 	andseq	r4, r0, r0
    3ed8:	00103c00 	andseq	r3, r0, r0, lsl #24
    3edc:	11e11600 	mvnne	r1, r0, lsl #12
    3ee0:	71010000 	mrsvc	r0, (UNDEF: 1)
    3ee4:	00c65a0c 	sbceq	r5, r6, ip, lsl #20
    3ee8:	10620000 	rsbne	r0, r2, r0
    3eec:	105e0000 	subsne	r0, lr, r0
    3ef0:	cd160000 	ldcgt	0, cr0, [r6, #-0]
    3ef4:	01000010 	tsteq	r0, r0, lsl r0
    3ef8:	006b0c71 	rsbeq	r0, fp, r1, ror ip
    3efc:	84000002 	strhi	r0, [r0], #-2
    3f00:	80000010 	andhi	r0, r0, r0, lsl r0
    3f04:	16000010 			; <UNDEFINED> instruction: 0x16000010
    3f08:	0000120e 	andeq	r1, r0, lr, lsl #4
    3f0c:	3f0c7201 	svccc	0x000c7201
    3f10:	000000c6 	andeq	r0, r0, r6, asr #1
    3f14:	000010a9 	andeq	r1, r0, r9, lsr #1
    3f18:	000010a5 	andeq	r1, r0, r5, lsr #1
    3f1c:	00143416 	andseq	r3, r4, r6, lsl r4
    3f20:	0c720100 	ldfeqe	f0, [r2], #-0
    3f24:	0000c653 	andeq	ip, r0, r3, asr r6
    3f28:	0010cb00 	andseq	ip, r0, r0, lsl #22
    3f2c:	0010c700 	andseq	ip, r0, r0, lsl #14
    3f30:	0b4e1c00 	bleq	138af38 <_Min_Heap_Size+0x138a738>
    3f34:	0b5c0800 	bleq	1705f3c <_Min_Heap_Size+0x170573c>
    3f38:	111e0800 	tstne	lr, r0, lsl #16
    3f3c:	b6220000 	strtlt	r0, [r2], -r0
    3f40:	01000001 	tsteq	r0, r1
    3f44:	d20b0c85 	andle	r0, fp, #34048	; 0x8500
    3f48:	02000000 	andeq	r0, r0, #0
    3f4c:	1a005c91 	bne	1b198 <_Min_Heap_Size+0x1a998>
    3f50:	08000b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp}
    3f54:	000045f2 	strdeq	r4, [r0], -r2
    3f58:	000b6223 	andeq	r6, fp, r3, lsr #4
    3f5c:	000af508 	andeq	pc, sl, r8, lsl #10
    3f60:	50011900 	andpl	r1, r1, r0, lsl #18
    3f64:	00007502 	andeq	r7, r0, r2, lsl #10
    3f68:	13951500 	orrsne	r1, r5, #0, 10
    3f6c:	47010000 	strmi	r0, [r1, -r0]
    3f70:	00010d0c 	andeq	r0, r1, ip, lsl #26
    3f74:	00000000 	andeq	r0, r0, r0
    3f78:	eb000000 	bl	3f80 <_Min_Heap_Size+0x3780>
    3f7c:	01000010 	tsteq	r0, r0, lsl r0
    3f80:	000011cb 	andeq	r1, r0, fp, asr #3
    3f84:	00138716 	andseq	r8, r3, r6, lsl r7
    3f88:	0c470100 	stfeqe	f0, [r7], {-0}
    3f8c:	0006882e 	andeq	r8, r6, lr, lsr #16
    3f90:	00111300 	andseq	r1, r1, r0, lsl #6
    3f94:	00110b00 	andseq	r0, r1, r0, lsl #22
    3f98:	159b1700 	ldrne	r1, [fp, #1792]	; 0x700
    3f9c:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    3fa0:	00c60c0c 	sbceq	r0, r6, ip, lsl #24
    3fa4:	11570000 	cmpne	r7, r0
    3fa8:	114d0000 	mrsne	r0, (UNDEF: 77)
    3fac:	ff170000 			; <UNDEFINED> instruction: 0xff170000
    3fb0:	01000014 	tsteq	r0, r4, lsl r0
    3fb4:	96170c4a 	ldrls	r0, [r7], -sl, asr #24
    3fb8:	bb000007 	bllt	3fdc <_Min_Heap_Size+0x37dc>
    3fbc:	b9000011 	stmdblt	r0, {r0, r4}
    3fc0:	18000011 	stmdane	r0, {r0, r4}
    3fc4:	00000000 	andeq	r0, r0, r0
    3fc8:	00001b4a 	andeq	r1, r0, sl, asr #22
    3fcc:	000011a6 	andeq	r1, r0, r6, lsr #3
    3fd0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3fd4:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    3fd8:	00000000 	andeq	r0, r0, r0
    3fdc:	00000ce9 	andeq	r0, r0, r9, ror #25
    3fe0:	000011ba 			; <UNDEFINED> instruction: 0x000011ba
    3fe4:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3fe8:	23000074 	movwcs	r0, #116	; 0x74
    3fec:	00000000 	andeq	r0, r0, r0
    3ff0:	00000af5 	strdeq	r0, [r0], -r5
    3ff4:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3ff8:	00000074 	andeq	r0, r0, r4, ror r0
    3ffc:	0013c115 	andseq	ip, r3, r5, lsl r1
    4000:	0c200100 	stfeqs	f0, [r0], #-0
    4004:	0000010d 	andeq	r0, r0, sp, lsl #2
    4008:	00000000 	andeq	r0, r0, r0
    400c:	11ce0000 	bicne	r0, lr, r0
    4010:	23010000 	movwcs	r0, #4096	; 0x1000
    4014:	16000012 			; <UNDEFINED> instruction: 0x16000012
    4018:	00001387 	andeq	r1, r0, r7, lsl #7
    401c:	330c2001 	movwcc	r2, #49153	; 0xc001
    4020:	00000688 	andeq	r0, r0, r8, lsl #13
    4024:	000011f2 	strdeq	r1, [r0], -r2
    4028:	000011ee 	andeq	r1, r0, lr, ror #3
    402c:	0014ff17 	andseq	pc, r4, r7, lsl pc	; <UNPREDICTABLE>
    4030:	0c220100 	stfeqs	f0, [r2], #-0
    4034:	00079617 	andeq	r9, r7, r7, lsl r6
    4038:	00121700 	andseq	r1, r2, r0, lsl #14
    403c:	00121300 	andseq	r1, r2, r0, lsl #6
    4040:	00001a00 	andeq	r1, r0, r0, lsl #20
    4044:	1b750000 	blne	1d4404c <_Min_Heap_Size+0x1d4384c>
    4048:	001a0000 	andseq	r0, sl, r0
    404c:	8f000000 	svchi	0x00000000
    4050:	0000001a 	andeq	r0, r0, sl, lsl r0
    4054:	00118715 	andseq	r8, r1, r5, lsl r7
    4058:	0be20100 	bleq	ff884460 <_estack+0xdf883228>
    405c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4060:	00000000 	andeq	r0, r0, r0
    4064:	12350000 	eorsne	r0, r5, #0
    4068:	db010000 	blle	44070 <_Min_Heap_Size+0x43870>
    406c:	16000014 			; <UNDEFINED> instruction: 0x16000014
    4070:	00001387 	andeq	r1, r0, r7, lsl #7
    4074:	340be201 	strcc	lr, [fp], #-513	; 0xfffffdff
    4078:	00000688 	andeq	r0, r0, r8, lsl #13
    407c:	0000125b 	andeq	r1, r0, fp, asr r2
    4080:	00001255 	andeq	r1, r0, r5, asr r2
    4084:	0014ff17 	andseq	pc, r4, r7, lsl pc	; <UNPREDICTABLE>
    4088:	0be40100 	bleq	ff904490 <_estack+0xdf903258>
    408c:	00079617 	andeq	r9, r7, r7, lsl r6
    4090:	00128b00 	andseq	r8, r2, r0, lsl #22
    4094:	00128700 	andseq	r8, r2, r0, lsl #14
    4098:	00001c00 	andeq	r1, r0, r0, lsl #24
    409c:	00000000 	andeq	r0, r0, r0
    40a0:	13000000 	movwne	r0, #0
    40a4:	761d0000 	ldrvc	r0, [sp], -r0
    40a8:	01006c61 	tsteq	r0, r1, ror #24
    40ac:	c6050bec 	strgt	r0, [r5], -ip, ror #23
    40b0:	ab000000 	blge	40b8 <_Min_Heap_Size+0x38b8>
    40b4:	a9000012 	stmdbge	r0, {r1, r4}
    40b8:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    40bc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    40cc:	ec010000 	stc	0, cr0, [r1], {-0}
    40d0:	12c0050b 	sbcne	r0, r0, #46137344	; 0x2c00000
    40d4:	901f0000 	andsls	r0, pc, r0
    40d8:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    40dc:	be000012 	mcrlt	0, 0, r0, cr0, cr2, {0}
    40e0:	20000012 	andcs	r0, r0, r2, lsl r0
    40e4:	0000459d 	muleq	r0, sp, r5
    40e8:	000012f3 	strdeq	r1, [r0], -r3
    40ec:	000012f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    40f0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    40f4:	00000000 	andeq	r0, r0, r0
    40f8:	00010000 	andeq	r0, r1, r0
	...
    4104:	050bec01 	streq	lr, [fp, #-3073]	; 0xfffff3ff
    4108:	00455c1f 	subeq	r5, r5, pc, lsl ip
    410c:	00130a00 	andseq	r0, r3, r0, lsl #20
    4110:	00130600 	andseq	r0, r3, r0, lsl #12
    4114:	454f1f00 	strbmi	r1, [pc, #-3840]	; 321c <_Min_Heap_Size+0x2a1c>
    4118:	132c0000 			; <UNDEFINED> instruction: 0x132c0000
    411c:	132a0000 			; <UNDEFINED> instruction: 0x132a0000
    4120:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4124:	41000045 	tstmi	r0, r5, asr #32
    4128:	3f000013 	svccc	0x00000013
    412c:	00000013 	andeq	r0, r0, r3, lsl r0
    4130:	00001c00 	andeq	r1, r0, r0, lsl #24
    4134:	00000000 	andeq	r0, r0, r0
    4138:	13980000 	orrsne	r0, r8, #0
    413c:	761d0000 	ldrvc	r0, [sp], -r0
    4140:	01006c61 	tsteq	r0, r1, ror #24
    4144:	c6050bed 	strgt	r0, [r5], -sp, ror #23
    4148:	56000000 	strpl	r0, [r0], -r0
    414c:	54000013 	strpl	r0, [r0], #-19	; 0xffffffed
    4150:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    4154:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4164:	ed010000 	stc	0, cr0, [r1, #-0]
    4168:	1358050b 	cmpne	r8, #46137344	; 0x2c00000
    416c:	901f0000 	andsls	r0, pc, r0
    4170:	6f000045 	svcvs	0x00000045
    4174:	69000013 	stmdbvs	r0, {r0, r1, r4}
    4178:	20000013 	andcs	r0, r0, r3, lsl r0
    417c:	0000459d 	muleq	r0, sp, r5
    4180:	0000139e 	muleq	r0, lr, r3
    4184:	0000139c 	muleq	r0, ip, r3
    4188:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    418c:	00000000 	andeq	r0, r0, r0
    4190:	00010000 	andeq	r0, r1, r0
	...
    419c:	050bed01 	streq	lr, [fp, #-3329]	; 0xfffff2ff
    41a0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    41a4:	0013b500 	andseq	fp, r3, r0, lsl #10
    41a8:	0013b100 	andseq	fp, r3, r0, lsl #2
    41ac:	454f1f00 	strbmi	r1, [pc, #-3840]	; 32b4 <_Min_Heap_Size+0x2ab4>
    41b0:	13d70000 	bicsne	r0, r7, #0
    41b4:	13d50000 	bicsne	r0, r5, #0
    41b8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    41bc:	ec000045 	stc	0, cr0, [r0], {69}	; 0x45
    41c0:	ea000013 	b	4214 <_Min_Heap_Size+0x3a14>
    41c4:	00000013 	andeq	r0, r0, r3, lsl r0
    41c8:	00001c00 	andeq	r1, r0, r0, lsl #24
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	14300000 	ldrtne	r0, [r0], #-0
    41d4:	761d0000 	ldrvc	r0, [sp], -r0
    41d8:	01006c61 	tsteq	r0, r1, ror #24
    41dc:	c6050bf1 			; <UNDEFINED> instruction: 0xc6050bf1
    41e0:	01000000 	mrseq	r0, (UNDEF: 0)
    41e4:	ff000014 			; <UNDEFINED> instruction: 0xff000014
    41e8:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    41ec:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    41fc:	f1010000 	setend	le
    4200:	13f0050b 	mvnsne	r0, #46137344	; 0x2c00000
    4204:	901f0000 	andsls	r0, pc, r0
    4208:	1a000045 	bne	4324 <_Min_Heap_Size+0x3b24>
    420c:	14000014 	strne	r0, [r0], #-20	; 0xffffffec
    4210:	20000014 	andcs	r0, r0, r4, lsl r0
    4214:	0000459d 	muleq	r0, sp, r5
    4218:	00001449 	andeq	r1, r0, r9, asr #8
    421c:	00001447 	andeq	r1, r0, r7, asr #8
    4220:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4224:	00000000 	andeq	r0, r0, r0
    4228:	00010000 	andeq	r0, r1, r0
	...
    4234:	050bf101 	streq	pc, [fp, #-257]	; 0xfffffeff
    4238:	00455c1f 	subeq	r5, r5, pc, lsl ip
    423c:	00146000 	andseq	r6, r4, r0
    4240:	00145c00 	andseq	r5, r4, r0, lsl #24
    4244:	454f1f00 	strbmi	r1, [pc, #-3840]	; 334c <_Min_Heap_Size+0x2b4c>
    4248:	14820000 	strne	r0, [r2], #0
    424c:	14800000 	strne	r0, [r0], #0
    4250:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4254:	97000045 	strls	r0, [r0, -r5, asr #32]
    4258:	95000014 	strls	r0, [r0, #-20]	; 0xffffffec
    425c:	00000014 	andeq	r0, r0, r4, lsl r0
    4260:	00001c00 	andeq	r1, r0, r0, lsl #24
    4264:	00000000 	andeq	r0, r0, r0
    4268:	14c80000 	strbne	r0, [r8], #0
    426c:	761d0000 	ldrvc	r0, [sp], -r0
    4270:	01006c61 	tsteq	r0, r1, ror #24
    4274:	c6070bf9 			; <UNDEFINED> instruction: 0xc6070bf9
    4278:	ac000000 	stcge	0, cr0, [r0], {-0}
    427c:	aa000014 	bge	42d4 <_Min_Heap_Size+0x3ad4>
    4280:	1e000014 	mcrne	0, 0, r0, cr0, cr4, {0}
    4284:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4294:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    4298:	1488070b 	strne	r0, [r8], #1803	; 0x70b
    429c:	901f0000 	andsls	r0, pc, r0
    42a0:	c5000045 	strgt	r0, [r0, #-69]	; 0xffffffbb
    42a4:	bf000014 	svclt	0x00000014
    42a8:	20000014 	andcs	r0, r0, r4, lsl r0
    42ac:	0000459d 	muleq	r0, sp, r5
    42b0:	000014f4 	strdeq	r1, [r0], -r4
    42b4:	000014f2 	strdeq	r1, [r0], -r2
    42b8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    42bc:	00000000 	andeq	r0, r0, r0
    42c0:	00010000 	andeq	r0, r1, r0
	...
    42cc:	070bf901 	streq	pc, [fp, -r1, lsl #18]
    42d0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    42d4:	00150b00 	andseq	r0, r5, r0, lsl #22
    42d8:	00150700 	andseq	r0, r5, r0, lsl #14
    42dc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 33e4 <_Min_Heap_Size+0x2be4>
    42e0:	152d0000 	strne	r0, [sp, #-0]!
    42e4:	152b0000 	strne	r0, [fp, #-0]!
    42e8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    42ec:	42000045 	andmi	r0, r0, #69	; 0x45
    42f0:	40000015 	andmi	r0, r0, r5, lsl r0
    42f4:	00000015 	andeq	r0, r0, r5, lsl r0
    42f8:	00001a00 	andeq	r1, r0, r0, lsl #20
    42fc:	1ba00000 	blne	fe804304 <_estack+0xde8030cc>
    4300:	001a0000 	andseq	r0, sl, r0
    4304:	8f000000 	svchi	0x00000000
    4308:	0000001a 	andeq	r0, r0, sl, lsl r0
    430c:	00119b15 	andseq	r9, r1, r5, lsl fp
    4310:	0bcf0100 	bleq	ff3c4718 <_estack+0xdf3c34e0>
    4314:	0000010d 	andeq	r0, r0, sp, lsl #2
    4318:	00000000 	andeq	r0, r0, r0
    431c:	15550000 	ldrbne	r0, [r5, #-0]
    4320:	2a010000 	bcs	44328 <_Min_Heap_Size+0x43b28>
    4324:	16000015 			; <UNDEFINED> instruction: 0x16000015
    4328:	00001387 	andeq	r1, r0, r7, lsl #7
    432c:	330bcf01 	movwcc	ip, #48897	; 0xbf01
    4330:	00000688 	andeq	r0, r0, r8, lsl #13
    4334:	00001579 	andeq	r1, r0, r9, ror r5
    4338:	00001575 	andeq	r1, r0, r5, ror r5
    433c:	0014ff17 	andseq	pc, r4, r7, lsl pc	; <UNPREDICTABLE>
    4340:	0bd10100 	bleq	ff444748 <_estack+0xdf443510>
    4344:	00079617 	andeq	r9, r7, r7, lsl r6
    4348:	00159e00 	andseq	r9, r5, r0, lsl #28
    434c:	00159a00 	andseq	r9, r5, r0, lsl #20
    4350:	00001a00 	andeq	r1, r0, r0, lsl #20
    4354:	1bcb0000 	blne	ff2c435c <_estack+0xdf2c3124>
    4358:	15000000 	strne	r0, [r0, #-0]
    435c:	000015ec 	andeq	r1, r0, ip, ror #11
    4360:	0d0bac01 	stceq	12, cr10, [fp, #-4]
    4364:	00000001 	andeq	r0, r0, r1
    4368:	00000000 	andeq	r0, r0, r0
    436c:	0015bd00 	andseq	fp, r5, r0, lsl #26
    4370:	16a90100 	strtne	r0, [r9], r0, lsl #2
    4374:	87160000 	ldrhi	r0, [r6, -r0]
    4378:	01000013 	tsteq	r0, r3, lsl r0
    437c:	88350bac 	ldmdahi	r5!, {r2, r3, r5, r7, r8, r9, fp}
    4380:	e3000006 	movw	r0, #6
    4384:	dd000015 	stcle	0, cr0, [r0, #-84]	; 0xffffffac
    4388:	17000015 	smladne	r0, r5, r0, r0
    438c:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4390:	170bae01 	strne	sl, [fp, -r1, lsl #28]
    4394:	00000796 	muleq	r0, r6, r7
    4398:	00001613 	andeq	r1, r0, r3, lsl r6
    439c:	0000160f 	andeq	r1, r0, pc, lsl #12
    43a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	00160700 	andseq	r0, r6, r0, lsl #14
    43ac:	61761d00 	cmnvs	r6, r0, lsl #26
    43b0:	b601006c 	strlt	r0, [r1], -ip, rrx
    43b4:	00c6050b 	sbceq	r0, r6, fp, lsl #10
    43b8:	16330000 	ldrtne	r0, [r3], -r0
    43bc:	16310000 	ldrtne	r0, [r1], -r0
    43c0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    43c4:	00000045 	andeq	r0, r0, r5, asr #32
	...
    43d4:	0bb60100 	bleq	fed847dc <_estack+0xded835a4>
    43d8:	0015c705 	andseq	ip, r5, r5, lsl #14
    43dc:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    43e0:	164c0000 	strbne	r0, [ip], -r0
    43e4:	16460000 	strbne	r0, [r6], -r0
    43e8:	9d200000 	stcls	0, cr0, [r0, #-0]
    43ec:	7b000045 	blvc	4508 <_Min_Heap_Size+0x3d08>
    43f0:	79000016 	stmdbvc	r0, {r1, r2, r4}
    43f4:	00000016 	andeq	r0, r0, r6, lsl r0
    43f8:	00453c21 	subeq	r3, r5, r1, lsr #24
    43fc:	00000000 	andeq	r0, r0, r0
    4400:	00000100 	andeq	r0, r0, r0, lsl #2
    4404:	00000000 	andeq	r0, r0, r0
    4408:	01000000 	mrseq	r0, (UNDEF: 0)
    440c:	1f050bb6 	svcne	0x00050bb6
    4410:	0000455c 	andeq	r4, r0, ip, asr r5
    4414:	00001692 	muleq	r0, r2, r6
    4418:	0000168e 	andeq	r1, r0, lr, lsl #13
    441c:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4420:	0016b400 	andseq	fp, r6, r0, lsl #8
    4424:	0016b200 	andseq	fp, r6, r0, lsl #4
    4428:	45692000 	strbmi	r2, [r9, #-0]!
    442c:	16c90000 	strbne	r0, [r9], r0
    4430:	16c70000 	strbne	r0, [r7], r0
    4434:	00000000 	andeq	r0, r0, r0
    4438:	0000001c 	andeq	r0, r0, ip, lsl r0
    443c:	00000000 	andeq	r0, r0, r0
    4440:	00169f00 	andseq	r9, r6, r0, lsl #30
    4444:	61761d00 	cmnvs	r6, r0, lsl #26
    4448:	b901006c 	stmdblt	r1, {r2, r3, r5, r6}
    444c:	00c6050b 	sbceq	r0, r6, fp, lsl #10
    4450:	16de0000 	ldrbne	r0, [lr], r0
    4454:	16dc0000 	ldrbne	r0, [ip], r0
    4458:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    445c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    446c:	0bb90100 	bleq	fee44874 <_estack+0xdee4363c>
    4470:	00165f05 	andseq	r5, r6, r5, lsl #30
    4474:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4478:	16f70000 	ldrbtne	r0, [r7], r0
    447c:	16f10000 	ldrbtne	r0, [r1], r0
    4480:	9d200000 	stcls	0, cr0, [r0, #-0]
    4484:	26000045 	strcs	r0, [r0], -r5, asr #32
    4488:	24000017 	strcs	r0, [r0], #-23	; 0xffffffe9
    448c:	00000017 	andeq	r0, r0, r7, lsl r0
    4490:	00453c21 	subeq	r3, r5, r1, lsr #24
    4494:	00000000 	andeq	r0, r0, r0
    4498:	00000100 	andeq	r0, r0, r0, lsl #2
    449c:	00000000 	andeq	r0, r0, r0
    44a0:	01000000 	mrseq	r0, (UNDEF: 0)
    44a4:	1f050bb9 	svcne	0x00050bb9
    44a8:	0000455c 	andeq	r4, r0, ip, asr r5
    44ac:	0000173d 	andeq	r1, r0, sp, lsr r7
    44b0:	00001739 	andeq	r1, r0, r9, lsr r7
    44b4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    44b8:	00175f00 	andseq	r5, r7, r0, lsl #30
    44bc:	00175d00 	andseq	r5, r7, r0, lsl #26
    44c0:	45692000 	strbmi	r2, [r9, #-0]!
    44c4:	17740000 	ldrbne	r0, [r4, -r0]!
    44c8:	17720000 	ldrbne	r0, [r2, -r0]!
    44cc:	00000000 	andeq	r0, r0, r0
    44d0:	0000001a 	andeq	r0, r0, sl, lsl r0
    44d4:	001bf600 	andseq	pc, fp, r0, lsl #12
    44d8:	01280000 			; <UNDEFINED> instruction: 0x01280000
    44dc:	0000113e 	andeq	r1, r0, lr, lsr r1
    44e0:	0a0b7f01 	beq	2e40ec <_Min_Heap_Size+0x2e38ec>
    44e4:	0000c601 	andeq	ip, r0, r1, lsl #12
	...
    44f0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    44f4:	0016de01 	andseq	sp, r6, r1, lsl #28
    44f8:	14ff1600 	ldrbtne	r1, [pc], #1536	; 4500 <_Min_Heap_Size+0x3d00>
    44fc:	7f010000 	svcvc	0x00010000
    4500:	16de360b 	ldrbne	r3, [lr], fp, lsl #12
    4504:	178b0000 	strne	r0, [fp, r0]
    4508:	17870000 	strne	r0, [r7, r0]
    450c:	11000000 	mrsne	r0, (UNDEF: 0)
    4510:	00069a04 	andeq	r9, r6, r4, lsl #20
    4514:	bc012800 	stclt	8, cr2, [r1], {-0}
    4518:	01000012 	tsteq	r0, r2, lsl r0
    451c:	01170b70 	tsteq	r7, r0, ror fp
    4520:	00000545 	andeq	r0, r0, r5, asr #10
	...
    452c:	01007d02 	tsteq	r0, r2, lsl #26
    4530:	00001743 	andeq	r1, r0, r3, asr #14
    4534:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    4538:	0b700100 	bleq	1c04940 <_Min_Heap_Size+0x1c04140>
    453c:	0016de43 	andseq	sp, r6, r3, asr #28
    4540:	0017b000 	andseq	fp, r7, r0
    4544:	0017ac00 	andseq	sl, r7, r0, lsl #24
    4548:	153d1700 	ldrne	r1, [sp, #-1792]!	; 0xfffff900
    454c:	72010000 	andvc	r0, r1, #0
    4550:	00c60c0b 	sbceq	r0, r6, fp, lsl #24
    4554:	17d50000 	ldrbne	r0, [r5, r0]
    4558:	17d10000 	ldrbne	r0, [r1, r0]
    455c:	43170000 	tstmi	r7, #0
    4560:	01000015 	tsteq	r0, r5, lsl r0
    4564:	c61b0b72 			; <UNDEFINED> instruction: 0xc61b0b72
    4568:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    456c:	f4000017 	vst4.8	{d0-d3}, [r0 :64], r7
    4570:	00000017 	andeq	r0, r0, r7, lsl r0
    4574:	151a0128 	ldrne	r0, [sl, #-296]	; 0xfffffed8
    4578:	37010000 	strcc	r0, [r1, -r0]
    457c:	3a01130b 	bcc	491b0 <_Min_Heap_Size+0x489b0>
    4580:	00000002 	andeq	r0, r0, r2
    4584:	00000000 	andeq	r0, r0, r0
    4588:	02000000 	andeq	r0, r0, #0
    458c:	8d01007d 	stchi	0, cr0, [r1, #-500]	; 0xfffffe0c
    4590:	16000017 			; <UNDEFINED> instruction: 0x16000017
    4594:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4598:	450b3701 	strmi	r3, [fp, #-1793]	; 0xfffff8ff
    459c:	00000796 	muleq	r0, r6, r7
    45a0:	0000181f 	andeq	r1, r0, pc, lsl r8
    45a4:	00001817 	andeq	r1, r0, r7, lsl r8
    45a8:	0001b617 	andeq	fp, r1, r7, lsl r6
    45ac:	0b390100 	bleq	e449b4 <_Min_Heap_Size+0xe441b4>
    45b0:	0000c60c 	andeq	ip, r0, ip, lsl #12
    45b4:	00186100 	andseq	r6, r8, r0, lsl #2
    45b8:	00185900 	andseq	r5, r8, r0, lsl #18
    45bc:	01280000 			; <UNDEFINED> instruction: 0x01280000
    45c0:	000010e5 	andeq	r1, r0, r5, ror #1
    45c4:	130b1401 	movwne	r1, #46081	; 0xb401
    45c8:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    45d4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    45d8:	0017d701 	andseq	sp, r7, r1, lsl #14
    45dc:	14ff1600 	ldrbtne	r1, [pc], #1536	; 45e4 <_Min_Heap_Size+0x3de4>
    45e0:	14010000 	strne	r0, [r1], #-0
    45e4:	0796480b 	ldreq	r4, [r6, fp, lsl #16]
    45e8:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    45ec:	18980000 	ldmne	r8, {}	; <UNPREDICTABLE>
    45f0:	b6170000 	ldrlt	r0, [r7], -r0
    45f4:	01000001 	tsteq	r0, r1
    45f8:	c60c0b16 			; <UNDEFINED> instruction: 0xc60c0b16
    45fc:	e2000000 	and	r0, r0, #0
    4600:	da000018 	ble	4668 <_Min_Heap_Size+0x3e68>
    4604:	00000018 	andeq	r0, r0, r8, lsl r0
    4608:	14df0127 	ldrbne	r0, [pc], #295	; 4610 <_Min_Heap_Size+0x3e10>
    460c:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    4610:	3a01130a 	bcc	49240 <_Min_Heap_Size+0x48a40>
    4614:	00000002 	andeq	r0, r0, r2
    4618:	00000000 	andeq	r0, r0, r0
    461c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    4620:	01000019 	tsteq	r0, r9, lsl r0
    4624:	000018bf 			; <UNDEFINED> instruction: 0x000018bf
    4628:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    462c:	0af80100 	beq	ffe04a34 <_estack+0xdfe037fc>
    4630:	00079647 	andeq	r9, r7, r7, asr #12
    4634:	00193d00 	andseq	r3, r9, r0, lsl #26
    4638:	00193900 	andseq	r3, r9, r0, lsl #18
    463c:	00001c00 	andeq	r1, r0, r0, lsl #24
    4640:	00000000 	andeq	r0, r0, r0
    4644:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
    4648:	761d0000 	ldrvc	r0, [sp], -r0
    464c:	01006c61 	tsteq	r0, r1, ror #24
    4650:	c6030b03 	strgt	r0, [r3], -r3, lsl #22
    4654:	5d000000 	stcpl	0, cr0, [r0, #-0]
    4658:	5b000019 	blpl	46c4 <_Min_Heap_Size+0x3ec4>
    465c:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    4660:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4670:	03010000 	movweq	r0, #4096	; 0x1000
    4674:	1864030b 	stmdane	r4!, {r0, r1, r3, r8, r9}^
    4678:	901f0000 	andsls	r0, pc, r0
    467c:	76000045 	strvc	r0, [r0], -r5, asr #32
    4680:	70000019 	andvc	r0, r0, r9, lsl r0
    4684:	20000019 	andcs	r0, r0, r9, lsl r0
    4688:	0000459d 	muleq	r0, sp, r5
    468c:	000019a5 	andeq	r1, r0, r5, lsr #19
    4690:	000019a3 	andeq	r1, r0, r3, lsr #19
    4694:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4698:	00000000 	andeq	r0, r0, r0
    469c:	00010000 	andeq	r0, r1, r0
	...
    46a8:	030b0301 	movweq	r0, #45825	; 0xb301
    46ac:	00455c1f 	subeq	r5, r5, pc, lsl ip
    46b0:	0019bc00 	andseq	fp, r9, r0, lsl #24
    46b4:	0019b800 	andseq	fp, r9, r0, lsl #16
    46b8:	454f1f00 	strbmi	r1, [pc, #-3840]	; 37c0 <_Min_Heap_Size+0x2fc0>
    46bc:	19de0000 	ldmibne	lr, {}^	; <UNPREDICTABLE>
    46c0:	19dc0000 	ldmibne	ip, {}^	; <UNPREDICTABLE>
    46c4:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    46c8:	f3000045 	vhadd.u8	q0, q0, <illegal reg q2.5>
    46cc:	f1000019 	cps	#25
    46d0:	00000019 	andeq	r0, r0, r9, lsl r0
    46d4:	00002300 	andeq	r2, r0, r0, lsl #6
    46d8:	45ab0000 	strmi	r0, [fp, #0]!
    46dc:	01190000 	tsteq	r9, r0
    46e0:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    46e4:	1908002c 	stmdbne	r8, {r2, r3, r5}
    46e8:	0a035101 	beq	d8af4 <_Min_Heap_Size+0xd82f4>
    46ec:	00000afb 	strdeq	r0, [r0], -fp
    46f0:	16a50127 	strtne	r0, [r5], r7, lsr #2
    46f4:	dc010000 	stcle	0, cr0, [r1], {-0}
    46f8:	3a01130a 	bcc	49328 <_Min_Heap_Size+0x48b28>
    46fc:	00000002 	andeq	r0, r0, r2
    4700:	00000000 	andeq	r0, r0, r0
    4704:	06000000 	streq	r0, [r0], -r0
    4708:	0100001a 	tsteq	r0, sl, lsl r0
    470c:	000019a7 	andeq	r1, r0, r7, lsr #19
    4710:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    4714:	0adc0100 	beq	ff704b1c <_estack+0xdf7038e4>
    4718:	00079648 	andeq	r9, r7, r8, asr #12
    471c:	001a2a00 	andseq	r2, sl, r0, lsl #20
    4720:	001a2600 	andseq	r2, sl, r0, lsl #12
    4724:	00001c00 	andeq	r1, r0, r0, lsl #24
    4728:	00000000 	andeq	r0, r0, r0
    472c:	198c0000 	stmibne	ip, {}	; <UNPREDICTABLE>
    4730:	761d0000 	ldrvc	r0, [sp], -r0
    4734:	01006c61 	tsteq	r0, r1, ror #24
    4738:	c6030ae7 	strgt	r0, [r3], -r7, ror #21
    473c:	4a000000 	bmi	4744 <_Min_Heap_Size+0x3f44>
    4740:	4800001a 	stmdami	r0, {r1, r3, r4}
    4744:	1e00001a 	mcrne	0, 0, r0, cr0, cr10, {0}
    4748:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4758:	e7010000 	str	r0, [r1, -r0]
    475c:	194c030a 	stmdbne	ip, {r1, r3, r8, r9}^
    4760:	901f0000 	andsls	r0, pc, r0
    4764:	63000045 	movwvs	r0, #69	; 0x45
    4768:	5d00001a 	stcpl	0, cr0, [r0, #-104]	; 0xffffff98
    476c:	2000001a 	andcs	r0, r0, sl, lsl r0
    4770:	0000459d 	muleq	r0, sp, r5
    4774:	00001a92 	muleq	r0, r2, sl
    4778:	00001a90 	muleq	r0, r0, sl
    477c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4780:	00000000 	andeq	r0, r0, r0
    4784:	00010000 	andeq	r0, r1, r0
	...
    4790:	030ae701 	movweq	lr, #42753	; 0xa701
    4794:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4798:	001aa900 	andseq	sl, sl, r0, lsl #18
    479c:	001aa500 	andseq	sl, sl, r0, lsl #10
    47a0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 38a8 <_Min_Heap_Size+0x30a8>
    47a4:	1acb0000 	bne	ff2c47ac <_estack+0xdf2c3574>
    47a8:	1ac90000 	bne	ff2447b0 <_estack+0xdf243578>
    47ac:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    47b0:	e0000045 	and	r0, r0, r5, asr #32
    47b4:	de00001a 	mcrle	0, 0, r0, cr0, cr10, {0}
    47b8:	0000001a 	andeq	r0, r0, sl, lsl r0
    47bc:	00002300 	andeq	r2, r0, r0, lsl #6
    47c0:	45ab0000 	strmi	r0, [fp, #0]!
    47c4:	01190000 	tsteq	r9, r0
    47c8:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    47cc:	1908002c 	stmdbne	r8, {r2, r3, r5}
    47d0:	0a035101 	beq	d8bdc <_Min_Heap_Size+0xd83dc>
    47d4:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    47d8:	10b70127 	adcsne	r0, r7, r7, lsr #2
    47dc:	c1010000 	mrsgt	r0, (UNDEF: 1)
    47e0:	3a01130a 	bcc	49410 <_Min_Heap_Size+0x48c10>
    47e4:	00000002 	andeq	r0, r0, r2
    47e8:	00000000 	andeq	r0, r0, r0
    47ec:	f3000000 	vhadd.u8	d0, d0, d0
    47f0:	0100001a 	tsteq	r0, sl, lsl r0
    47f4:	00001a8f 	andeq	r1, r0, pc, lsl #21
    47f8:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    47fc:	0ac10100 	beq	ff044c04 <_estack+0xdf0439cc>
    4800:	00079639 	andeq	r9, r7, r9, lsr r6
    4804:	001b1700 	andseq	r1, fp, r0, lsl #14
    4808:	001b1300 	andseq	r1, fp, r0, lsl #6
    480c:	00001c00 	andeq	r1, r0, r0, lsl #24
    4810:	00000000 	andeq	r0, r0, r0
    4814:	1a740000 	bne	1d0481c <_Min_Heap_Size+0x1d0401c>
    4818:	761d0000 	ldrvc	r0, [sp], -r0
    481c:	01006c61 	tsteq	r0, r1, ror #24
    4820:	c6030acc 	strgt	r0, [r3], -ip, asr #21
    4824:	37000000 	strcc	r0, [r0, -r0]
    4828:	3500001b 	strcc	r0, [r0, #-27]	; 0xffffffe5
    482c:	1e00001b 	mcrne	0, 0, r0, cr0, cr11, {0}
    4830:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    4840:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4844:	1a34030a 	bne	d05474 <_Min_Heap_Size+0xd04c74>
    4848:	901f0000 	andsls	r0, pc, r0
    484c:	50000045 	andpl	r0, r0, r5, asr #32
    4850:	4a00001b 	bmi	48c4 <_Min_Heap_Size+0x40c4>
    4854:	2000001b 	andcs	r0, r0, fp, lsl r0
    4858:	0000459d 	muleq	r0, sp, r5
    485c:	00001b7f 	andeq	r1, r0, pc, ror fp
    4860:	00001b7d 	andeq	r1, r0, sp, ror fp
    4864:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4868:	00000000 	andeq	r0, r0, r0
    486c:	00010000 	andeq	r0, r1, r0
	...
    4878:	030acc01 	movweq	ip, #44033	; 0xac01
    487c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4880:	001b9600 	andseq	r9, fp, r0, lsl #12
    4884:	001b9200 	andseq	r9, fp, r0, lsl #4
    4888:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3990 <_Min_Heap_Size+0x3190>
    488c:	1bb80000 	blne	fee04894 <_estack+0xdee0365c>
    4890:	1bb60000 	blne	fed84898 <_estack+0xded83660>
    4894:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4898:	cd000045 	stcgt	0, cr0, [r0, #-276]	; 0xfffffeec
    489c:	cb00001b 	blgt	4910 <_Min_Heap_Size+0x4110>
    48a0:	0000001b 	andeq	r0, r0, fp, lsl r0
    48a4:	00002300 	andeq	r2, r0, r0, lsl #6
    48a8:	45ab0000 	strmi	r0, [fp, #0]!
    48ac:	01190000 	tsteq	r9, r0
    48b0:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    48b4:	1908002c 	stmdbne	r8, {r2, r3, r5}
    48b8:	0a035101 	beq	d8cc4 <_Min_Heap_Size+0xd84c4>
    48bc:	00000ac4 	andeq	r0, r0, r4, asr #21
    48c0:	110d012a 	tstne	sp, sl, lsr #2
    48c4:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    48c8:	a8010d0a 	stmdage	r1, {r1, r3, r8, sl, fp}
    48cc:	aa08000d 	bge	204908 <_Min_Heap_Size+0x204108>
    48d0:	0208000d 	andeq	r0, r8, #13
    48d4:	c901007d 	stmdbgt	r1, {r0, r2, r3, r4, r5, r6}
    48d8:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    48dc:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    48e0:	3c0a9901 			; <UNDEFINED> instruction: 0x3c0a9901
    48e4:	00000796 	muleq	r0, r6, r7
    48e8:	c6295001 	strtgt	r5, [r9], -r1
    48ec:	01000026 	tsteq	r0, r6, lsr #32
    48f0:	b04c0a99 	umaallt	r0, ip, r9, sl
    48f4:	01000000 	mrseq	r0, (UNDEF: 0)
    48f8:	012a0051 	qsubeq	r0, r1, sl
    48fc:	000011bf 			; <UNDEFINED> instruction: 0x000011bf
    4900:	0d0a8801 	stceq	8, cr8, [sl, #-4]
    4904:	00000001 	andeq	r0, r0, r1
    4908:	00000000 	andeq	r0, r0, r0
    490c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4910:	001af401 	andseq	pc, sl, r1, lsl #8
    4914:	14ff2900 	ldrbtne	r2, [pc], #2304	; 491c <_Min_Heap_Size+0x411c>
    4918:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    491c:	0796430a 	ldreq	r4, [r6, sl, lsl #6]
    4920:	50010000 	andpl	r0, r1, r0
    4924:	3c012a00 			; <UNDEFINED> instruction: 0x3c012a00
    4928:	01000014 	tsteq	r0, r4, lsl r0
    492c:	010d0a79 	tsteq	sp, r9, ror sl
	...
    4938:	01007d02 	tsteq	r0, r2, lsl #26
    493c:	00001b1f 	andeq	r1, r0, pc, lsl fp
    4940:	0014ff29 	andseq	pc, r4, r9, lsr #30
    4944:	0a790100 	beq	1e44d4c <_Min_Heap_Size+0x1e4454c>
    4948:	00079644 	andeq	r9, r7, r4, asr #12
    494c:	00500100 	subseq	r0, r0, r0, lsl #2
    4950:	1580012a 	strne	r0, [r0, #298]	; 0x12a
    4954:	6a010000 	bvs	4495c <_Min_Heap_Size+0x4415c>
    4958:	00010d0a 	andeq	r0, r1, sl, lsl #26
    495c:	00000000 	andeq	r0, r0, r0
    4960:	02000000 	andeq	r0, r0, #0
    4964:	4a01007d 	bmi	44b60 <_Min_Heap_Size+0x44360>
    4968:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    496c:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4970:	3c0a6a01 			; <UNDEFINED> instruction: 0x3c0a6a01
    4974:	00000796 	muleq	r0, r6, r7
    4978:	2a005001 	bcs	18984 <_Min_Heap_Size+0x18184>
    497c:	00164e01 	andseq	r4, r6, r1, lsl #28
    4980:	0a5c0100 	beq	1704d88 <_Min_Heap_Size+0x1704588>
    4984:	0d96010d 	ldfeqs	f0, [r6, #52]	; 0x34
    4988:	0d980800 	ldceq	8, cr0, [r8]
    498c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4990:	1b750100 	blne	1d44d98 <_Min_Heap_Size+0x1d44598>
    4994:	ff290000 			; <UNDEFINED> instruction: 0xff290000
    4998:	01000014 	tsteq	r0, r4, lsl r0
    499c:	96380a5c 			; <UNDEFINED> instruction: 0x96380a5c
    49a0:	01000007 	tsteq	r0, r7
    49a4:	012a0050 	qsubeq	r0, r0, sl
    49a8:	000011f2 	strdeq	r1, [r0], -r2
    49ac:	0d0a4d01 	stceq	13, cr4, [sl, #-4]
    49b0:	00000001 	andeq	r0, r0, r1
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    49bc:	001ba001 	andseq	sl, fp, r1
    49c0:	14ff2900 	ldrbtne	r2, [pc], #2304	; 49c8 <_Min_Heap_Size+0x41c8>
    49c4:	4d010000 	stcmi	0, cr0, [r1, #-0]
    49c8:	07963d0a 	ldreq	r3, [r6, sl, lsl #26]
    49cc:	50010000 	andpl	r0, r1, r0
    49d0:	53012a00 	movwpl	r2, #6656	; 0x1a00
    49d4:	01000015 	tsteq	r0, r5, lsl r0
    49d8:	010d0a3e 	tsteq	sp, lr, lsr sl
    49dc:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
    49e0:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
    49e4:	01007d02 	tsteq	r0, r2, lsl #26
    49e8:	00001bcb 	andeq	r1, r0, fp, asr #23
    49ec:	0014ff29 	andseq	pc, r4, r9, lsr #30
    49f0:	0a3e0100 	beq	f84df8 <_Min_Heap_Size+0xf845f8>
    49f4:	00079639 	andeq	r9, r7, r9, lsr r6
    49f8:	00500100 	subseq	r0, r0, r0, lsl #2
    49fc:	1632012a 	ldrtne	r0, [r2], -sl, lsr #2
    4a00:	2f010000 	svccs	0x00010000
    4a04:	00010d0a 	andeq	r0, r1, sl, lsl #26
    4a08:	00000000 	andeq	r0, r0, r0
    4a0c:	02000000 	andeq	r0, r0, #0
    4a10:	f601007d 			; <UNDEFINED> instruction: 0xf601007d
    4a14:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    4a18:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4a1c:	3d0a2f01 	stccc	15, cr2, [sl, #-4]
    4a20:	00000796 	muleq	r0, r6, r7
    4a24:	2a005001 	bcs	18a30 <_Min_Heap_Size+0x18230>
    4a28:	00135701 	andseq	r5, r3, r1, lsl #14
    4a2c:	0a200100 	beq	804e34 <_Min_Heap_Size+0x804634>
    4a30:	0d78010d 	ldfeqe	f0, [r8, #-52]!	; 0xffffffcc
    4a34:	0d7a0800 	ldcleq	8, cr0, [sl, #-0]
    4a38:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4a3c:	1c210100 	stfnes	f0, [r1], #-0
    4a40:	ff290000 			; <UNDEFINED> instruction: 0xff290000
    4a44:	01000014 	tsteq	r0, r4, lsl r0
    4a48:	96390a20 	ldrtls	r0, [r9], -r0, lsr #20
    4a4c:	01000007 	tsteq	r0, r7
    4a50:	012b0050 	qsubeq	r0, r0, fp
    4a54:	0000099d 	muleq	r0, sp, r9
    4a58:	06092e01 	streq	r2, [r9], -r1, lsl #28
    4a5c:	000e9001 	andeq	r9, lr, r1
    4a60:	00111808 	andseq	r1, r1, r8, lsl #16
    4a64:	001be008 	andseq	lr, fp, r8
    4a68:	22ae0100 	adccs	r0, lr, #0, 2
    4a6c:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    4a70:	01000014 	tsteq	r0, r4, lsl r0
    4a74:	962e092e 	strtls	r0, [lr], -lr, lsr #18
    4a78:	28000007 	stmdacs	r0, {r0, r1, r2}
    4a7c:	2400001c 	strcs	r0, [r0], #-28	; 0xffffffe4
    4a80:	1700001c 	smladne	r0, ip, r0, r0
    4a84:	0000138c 	andeq	r1, r0, ip, lsl #7
    4a88:	0c093001 	stceq	0, cr3, [r9], {1}
    4a8c:	000000c6 	andeq	r0, r0, r6, asr #1
    4a90:	00001c54 	andeq	r1, r0, r4, asr ip
    4a94:	00001c46 	andeq	r1, r0, r6, asr #24
    4a98:	0016e217 	andseq	lr, r6, r7, lsl r2
    4a9c:	09310100 	ldmdbeq	r1!, {r8}
    4aa0:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4aa4:	001cb900 	andseq	fp, ip, r0, lsl #18
    4aa8:	001ca900 	andseq	sl, ip, r0, lsl #18
    4aac:	11061700 	tstne	r6, r0, lsl #14
    4ab0:	32010000 	andcc	r0, r1, #0
    4ab4:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    4ab8:	1d1d0000 	ldcne	0, cr0, [sp, #-0]
    4abc:	1d190000 	ldcne	0, cr0, [r9, #-0]
    4ac0:	f3170000 	vhadd.u16	d0, d7, d0
    4ac4:	01000012 	tsteq	r0, r2, lsl r0
    4ac8:	c60c0933 			; <UNDEFINED> instruction: 0xc60c0933
    4acc:	41000000 	mrsmi	r0, (UNDEF: 0)
    4ad0:	3b00001d 	blcc	4b4c <_Min_Heap_Size+0x434c>
    4ad4:	1700001d 	smladne	r0, sp, r0, r0
    4ad8:	0000159b 	muleq	r0, fp, r5
    4adc:	0c093401 	cfstrseq	mvf3, [r9], {1}
    4ae0:	000000c6 	andeq	r0, r0, r6, asr #1
    4ae4:	00001d7b 	andeq	r1, r0, fp, ror sp
    4ae8:	00001d6f 	andeq	r1, r0, pc, ror #26
    4aec:	000f6a1c 	andeq	r6, pc, ip, lsl sl	; <UNPREDICTABLE>
    4af0:	000f8208 	andeq	r8, pc, r8, lsl #4
    4af4:	001d5308 	andseq	r5, sp, r8, lsl #6
    4af8:	61761d00 	cmnvs	r6, r0, lsl #26
    4afc:	7501006c 	strvc	r0, [r1, #-108]	; 0xffffff94
    4b00:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4b04:	1dd90000 	ldclne	0, cr0, [r9]
    4b08:	1dd70000 	ldclne	0, cr0, [r7]
    4b0c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4b10:	6c000045 	stcvs	0, cr0, [r0], {69}	; 0x45
    4b14:	0008000f 	andeq	r0, r8, pc
    4b18:	000f6c00 	andeq	r6, pc, r0, lsl #24
    4b1c:	000f7408 	andeq	r7, pc, r8, lsl #8
    4b20:	09750108 	ldmdbeq	r5!, {r3, r8}^
    4b24:	001d130b 	andseq	r1, sp, fp, lsl #6
    4b28:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4b2c:	1df20000 	ldclne	0, cr0, [r2]
    4b30:	1dec0000 	stclne	0, cr0, [ip]
    4b34:	9d200000 	stcls	0, cr0, [r0, #-0]
    4b38:	21000045 	tstcs	r0, r5, asr #32
    4b3c:	1f00001e 	svcne	0x0000001e
    4b40:	0000001e 	andeq	r0, r0, lr, lsl r0
    4b44:	00453c21 	subeq	r3, r5, r1, lsr #24
    4b48:	000f7800 	andeq	r7, pc, r0, lsl #16
    4b4c:	78000108 	stmdavc	r0, {r3, r8}
    4b50:	7e08000f 	cdpvc	0, 0, cr0, cr8, cr15, {0}
    4b54:	0108000f 	tsteq	r8, pc
    4b58:	1f0b0975 	svcne	0x000b0975
    4b5c:	0000455c 	andeq	r4, r0, ip, asr r5
    4b60:	00001e38 	andeq	r1, r0, r8, lsr lr
    4b64:	00001e34 	andeq	r1, r0, r4, lsr lr
    4b68:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4b6c:	001e5a00 	andseq	r5, lr, r0, lsl #20
    4b70:	001e5800 	andseq	r5, lr, r0, lsl #16
    4b74:	45692000 	strbmi	r2, [r9, #-0]!
    4b78:	1e6f0000 	cdpne	0, 6, cr0, cr15, cr0, {0}
    4b7c:	1e6d0000 	cdpne	0, 6, cr0, cr13, cr0, {0}
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	000fd01c 	andeq	sp, pc, ip, lsl r0	; <UNPREDICTABLE>
    4b88:	000fde08 	andeq	sp, pc, r8, lsl #28
    4b8c:	001d7108 	andseq	r7, sp, r8, lsl #2
    4b90:	01b62200 			; <UNDEFINED> instruction: 0x01b62200
    4b94:	b3010000 	movwlt	r0, #4096	; 0x1000
    4b98:	00d20509 	sbcseq	r0, r2, r9, lsl #10
    4b9c:	91020000 	mrsls	r0, (UNDEF: 2)
    4ba0:	e61c006c 	ldr	r0, [ip], -ip, rrx
    4ba4:	8c08000f 	stchi	0, cr0, [r8], {15}
    4ba8:	0d080010 	stceq	0, cr0, [r8, #-64]	; 0xffffffc0
    4bac:	17000020 	strne	r0, [r0, -r0, lsr #32]
    4bb0:	0000156b 	andeq	r1, r0, fp, ror #10
    4bb4:	1009bc01 	andne	fp, r9, r1, lsl #24
    4bb8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    4bbc:	00001e86 	andeq	r1, r0, r6, lsl #29
    4bc0:	00001e82 	andeq	r1, r0, r2, lsl #29
    4bc4:	0010061c 	andseq	r0, r0, ip, lsl r6
    4bc8:	00101e08 	andseq	r1, r0, r8, lsl #28
    4bcc:	001e2b08 	andseq	r2, lr, r8, lsl #22
    4bd0:	61761d00 	cmnvs	r6, r0, lsl #26
    4bd4:	c701006c 	strgt	r0, [r1, -ip, rrx]
    4bd8:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4bdc:	1ea70000 	cdpne	0, 10, cr0, cr7, cr0, {0}
    4be0:	1ea50000 	cdpne	0, 10, cr0, cr5, cr0, {0}
    4be4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4be8:	08000045 	stmdaeq	r0, {r0, r2, r6}
    4bec:	00080010 	andeq	r0, r8, r0, lsl r0
    4bf0:	00100800 	andseq	r0, r0, r0, lsl #16
    4bf4:	00101008 	andseq	r1, r0, r8
    4bf8:	09c70108 	stmibeq	r7, {r3, r8}^
    4bfc:	001deb0b 	andseq	lr, sp, fp, lsl #22
    4c00:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4c04:	1ec00000 	cdpne	0, 12, cr0, cr0, cr0, {0}
    4c08:	1eba0000 	cdpne	0, 11, cr0, cr10, cr0, {0}
    4c0c:	9d200000 	stcls	0, cr0, [r0, #-0]
    4c10:	ef000045 	svc	0x00000045
    4c14:	ed00001e 	stc	0, cr0, [r0, #-120]	; 0xffffff88
    4c18:	0000001e 	andeq	r0, r0, lr, lsl r0
    4c1c:	00453c21 	subeq	r3, r5, r1, lsr #24
    4c20:	00101400 	andseq	r1, r0, r0, lsl #8
    4c24:	14000108 	strne	r0, [r0], #-264	; 0xfffffef8
    4c28:	1a080010 	bne	204c70 <_Min_Heap_Size+0x204470>
    4c2c:	01080010 	tsteq	r8, r0, lsl r0
    4c30:	1f0b09c7 	svcne	0x000b09c7
    4c34:	0000455c 	andeq	r4, r0, ip, asr r5
    4c38:	00001f06 	andeq	r1, r0, r6, lsl #30
    4c3c:	00001f02 	andeq	r1, r0, r2, lsl #30
    4c40:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4c44:	001f2800 	andseq	r2, pc, r0, lsl #16
    4c48:	001f2600 	andseq	r2, pc, r0, lsl #12
    4c4c:	45692000 	strbmi	r2, [r9, #-0]!
    4c50:	1f3d0000 	svcne	0x003d0000
    4c54:	1f3b0000 	svcne	0x003b0000
    4c58:	00000000 	andeq	r0, r0, r0
    4c5c:	00101e1c 	andseq	r1, r0, ip, lsl lr
    4c60:	00103608 	andseq	r3, r0, r8, lsl #12
    4c64:	001ec308 	andseq	ip, lr, r8, lsl #6
    4c68:	61761d00 	cmnvs	r6, r0, lsl #26
    4c6c:	c801006c 	stmdagt	r1, {r2, r3, r5, r6}
    4c70:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4c74:	1f520000 	svcne	0x00520000
    4c78:	1f500000 	svcne	0x00500000
    4c7c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4c80:	20000045 	andcs	r0, r0, r5, asr #32
    4c84:	00080010 	andeq	r0, r8, r0, lsl r0
    4c88:	00102000 	andseq	r2, r0, r0
    4c8c:	00102808 	andseq	r2, r0, r8, lsl #16
    4c90:	09c80108 	stmibeq	r8, {r3, r8}^
    4c94:	001e830b 	andseq	r8, lr, fp, lsl #6
    4c98:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4c9c:	1f6b0000 	svcne	0x006b0000
    4ca0:	1f650000 	svcne	0x00650000
    4ca4:	9d200000 	stcls	0, cr0, [r0, #-0]
    4ca8:	9a000045 	bls	4dc4 <_Min_Heap_Size+0x45c4>
    4cac:	9800001f 	stmdals	r0, {r0, r1, r2, r3, r4}
    4cb0:	0000001f 	andeq	r0, r0, pc, lsl r0
    4cb4:	00453c21 	subeq	r3, r5, r1, lsr #24
    4cb8:	00102c00 	andseq	r2, r0, r0, lsl #24
    4cbc:	2c000108 	stfcss	f0, [r0], {8}
    4cc0:	32080010 	andcc	r0, r8, #16
    4cc4:	01080010 	tsteq	r8, r0, lsl r0
    4cc8:	1f0b09c8 	svcne	0x000b09c8
    4ccc:	0000455c 	andeq	r4, r0, ip, asr r5
    4cd0:	00001fb1 			; <UNDEFINED> instruction: 0x00001fb1
    4cd4:	00001fad 	andeq	r1, r0, sp, lsr #31
    4cd8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4cdc:	001fd300 	andseq	sp, pc, r0, lsl #6
    4ce0:	001fd100 	andseq	sp, pc, r0, lsl #2
    4ce4:	45692000 	strbmi	r2, [r9, #-0]!
    4ce8:	1fe80000 	svcne	0x00e80000
    4cec:	1fe60000 	svcne	0x00e60000
    4cf0:	00000000 	andeq	r0, r0, r0
    4cf4:	0010361c 	andseq	r3, r0, ip, lsl r6
    4cf8:	00104e08 	andseq	r4, r0, r8, lsl #28
    4cfc:	001f5b08 	andseq	r5, pc, r8, lsl #22
    4d00:	61761d00 	cmnvs	r6, r0, lsl #26
    4d04:	cc01006c 	stcgt	0, cr0, [r1], {108}	; 0x6c
    4d08:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4d0c:	1ffd0000 	svcne	0x00fd0000
    4d10:	1ffb0000 	svcne	0x00fb0000
    4d14:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4d18:	38000045 	stmdacc	r0, {r0, r2, r6}
    4d1c:	00080010 	andeq	r0, r8, r0, lsl r0
    4d20:	00103800 	andseq	r3, r0, r0, lsl #16
    4d24:	00104008 	andseq	r4, r0, r8
    4d28:	09cc0108 	stmibeq	ip, {r3, r8}^
    4d2c:	001f1b0b 	andseq	r1, pc, fp, lsl #22
    4d30:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4d34:	20160000 	andscs	r0, r6, r0
    4d38:	20100000 	andscs	r0, r0, r0
    4d3c:	9d200000 	stcls	0, cr0, [r0, #-0]
    4d40:	45000045 	strmi	r0, [r0, #-69]	; 0xffffffbb
    4d44:	43000020 	movwmi	r0, #32
    4d48:	00000020 	andeq	r0, r0, r0, lsr #32
    4d4c:	00453c21 	subeq	r3, r5, r1, lsr #24
    4d50:	00104400 	andseq	r4, r0, r0, lsl #8
    4d54:	44000108 	strmi	r0, [r0], #-264	; 0xfffffef8
    4d58:	4a080010 	bmi	204da0 <_Min_Heap_Size+0x2045a0>
    4d5c:	01080010 	tsteq	r8, r0, lsl r0
    4d60:	1f0b09cc 	svcne	0x000b09cc
    4d64:	0000455c 	andeq	r4, r0, ip, asr r5
    4d68:	0000205c 	andeq	r2, r0, ip, asr r0
    4d6c:	00002058 	andeq	r2, r0, r8, asr r0
    4d70:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4d74:	00207e00 	eoreq	r7, r0, r0, lsl #28
    4d78:	00207c00 	eoreq	r7, r0, r0, lsl #24
    4d7c:	45692000 	strbmi	r2, [r9, #-0]!
    4d80:	20930000 	addscs	r0, r3, r0
    4d84:	20910000 	addscs	r0, r1, r0
    4d88:	00000000 	andeq	r0, r0, r0
    4d8c:	0010581c 	andseq	r5, r0, ip, lsl r8
    4d90:	00107008 	andseq	r7, r0, r8
    4d94:	001ff308 	andseq	pc, pc, r8, lsl #6
    4d98:	61761d00 	cmnvs	r6, r0, lsl #26
    4d9c:	d201006c 	andle	r0, r1, #108	; 0x6c
    4da0:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4da4:	20a80000 	adccs	r0, r8, r0
    4da8:	20a60000 	adccs	r0, r6, r0
    4dac:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4db0:	5a000045 	bpl	4ecc <_Min_Heap_Size+0x46cc>
    4db4:	00080010 	andeq	r0, r8, r0, lsl r0
    4db8:	00105a00 	andseq	r5, r0, r0, lsl #20
    4dbc:	00106208 	andseq	r6, r0, r8, lsl #4
    4dc0:	09d20108 	ldmibeq	r2, {r3, r8}^
    4dc4:	001fb30b 	andseq	fp, pc, fp, lsl #6
    4dc8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4dcc:	20c10000 	sbccs	r0, r1, r0
    4dd0:	20bb0000 	adcscs	r0, fp, r0
    4dd4:	9d200000 	stcls	0, cr0, [r0, #-0]
    4dd8:	f0000045 			; <UNDEFINED> instruction: 0xf0000045
    4ddc:	ee000020 	cdp	0, 0, cr0, cr0, cr0, {1}
    4de0:	00000020 	andeq	r0, r0, r0, lsr #32
    4de4:	00453c21 	subeq	r3, r5, r1, lsr #24
    4de8:	00106600 	andseq	r6, r0, r0, lsl #12
    4dec:	66000108 	strvs	r0, [r0], -r8, lsl #2
    4df0:	6c080010 	stcvs	0, cr0, [r8], {16}
    4df4:	01080010 	tsteq	r8, r0, lsl r0
    4df8:	1f0b09d2 	svcne	0x000b09d2
    4dfc:	0000455c 	andeq	r4, r0, ip, asr r5
    4e00:	00002107 	andeq	r2, r0, r7, lsl #2
    4e04:	00002103 	andeq	r2, r0, r3, lsl #2
    4e08:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4e0c:	00212900 	eoreq	r2, r1, r0, lsl #18
    4e10:	00212700 	eoreq	r2, r1, r0, lsl #14
    4e14:	45692000 	strbmi	r2, [r9, #-0]!
    4e18:	213e0000 	teqcs	lr, r0
    4e1c:	213c0000 	teqcs	ip, r0
    4e20:	00000000 	andeq	r0, r0, r0
    4e24:	0010761a 	andseq	r7, r0, sl, lsl r6
    4e28:	00460008 	subeq	r0, r6, r8
    4e2c:	108a2300 	addne	r2, sl, r0, lsl #6
    4e30:	1a8f0800 	bne	fe3c6e38 <_estack+0xde3c5c00>
    4e34:	01190000 	tsteq	r9, r0
    4e38:	00740250 	rsbseq	r0, r4, r0, asr r2
    4e3c:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    4e40:	04080010 	streq	r0, [r8], #-16
    4e44:	08080011 	stmdaeq	r8, {r0, r4}
    4e48:	17000022 	strne	r0, [r0, -r2, lsr #32]
    4e4c:	000015e1 	andeq	r1, r0, r1, ror #11
    4e50:	1009eb01 	andne	lr, r9, r1, lsl #22
    4e54:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    4e58:	00002153 	andeq	r2, r0, r3, asr r1
    4e5c:	00002151 	andeq	r2, r0, r1, asr r1
    4e60:	0010a61c 	andseq	sl, r0, ip, lsl r6
    4e64:	0010be08 	andseq	fp, r0, r8, lsl #28
    4e68:	0020c708 	eoreq	ip, r0, r8, lsl #14
    4e6c:	61761d00 	cmnvs	r6, r0, lsl #26
    4e70:	f001006c 			; <UNDEFINED> instruction: 0xf001006c
    4e74:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4e78:	21680000 	cmncs	r8, r0
    4e7c:	21660000 	cmncs	r6, r0
    4e80:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4e84:	a8000045 	stmdage	r0, {r0, r2, r6}
    4e88:	00080010 	andeq	r0, r8, r0, lsl r0
    4e8c:	0010a800 	andseq	sl, r0, r0, lsl #16
    4e90:	0010b008 	andseq	fp, r0, r8
    4e94:	09f00108 	ldmibeq	r0!, {r3, r8}^
    4e98:	00208709 	eoreq	r8, r0, r9, lsl #14
    4e9c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4ea0:	21810000 	orrcs	r0, r1, r0
    4ea4:	217b0000 	cmncs	fp, r0
    4ea8:	9d200000 	stcls	0, cr0, [r0, #-0]
    4eac:	b0000045 	andlt	r0, r0, r5, asr #32
    4eb0:	ae000021 	cdpge	0, 0, cr0, cr0, cr1, {1}
    4eb4:	00000021 	andeq	r0, r0, r1, lsr #32
    4eb8:	00453c21 	subeq	r3, r5, r1, lsr #24
    4ebc:	0010b400 	andseq	fp, r0, r0, lsl #8
    4ec0:	b4000108 	strlt	r0, [r0], #-264	; 0xfffffef8
    4ec4:	ba080010 	blt	204f0c <_Min_Heap_Size+0x20470c>
    4ec8:	01080010 	tsteq	r8, r0, lsl r0
    4ecc:	1f0909f0 	svcne	0x000909f0
    4ed0:	0000455c 	andeq	r4, r0, ip, asr r5
    4ed4:	000021c7 	andeq	r2, r0, r7, asr #3
    4ed8:	000021c3 	andeq	r2, r0, r3, asr #3
    4edc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4ee0:	0021e900 	eoreq	lr, r1, r0, lsl #18
    4ee4:	0021e700 	eoreq	lr, r1, r0, lsl #14
    4ee8:	45692000 	strbmi	r2, [r9, #-0]!
    4eec:	21fe0000 	mvnscs	r0, r0
    4ef0:	21fc0000 	mvnscs	r0, r0
    4ef4:	00000000 	andeq	r0, r0, r0
    4ef8:	0010be1c 	andseq	fp, r0, ip, lsl lr
    4efc:	0010d608 	andseq	sp, r0, r8, lsl #12
    4f00:	00215f08 	eoreq	r5, r1, r8, lsl #30
    4f04:	61761d00 	cmnvs	r6, r0, lsl #26
    4f08:	f301006c 	vhadd.u8	q0, <illegal reg q0.5>, q14
    4f0c:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4f10:	22130000 	andscs	r0, r3, #0
    4f14:	22110000 	andscs	r0, r1, #0
    4f18:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4f1c:	c0000045 	andgt	r0, r0, r5, asr #32
    4f20:	00080010 	andeq	r0, r8, r0, lsl r0
    4f24:	0010c000 	andseq	ip, r0, r0
    4f28:	0010c808 	andseq	ip, r0, r8, lsl #16
    4f2c:	09f30108 	ldmibeq	r3!, {r3, r8}^
    4f30:	00211f09 	eoreq	r1, r1, r9, lsl #30
    4f34:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4f38:	222c0000 	eorcs	r0, ip, #0
    4f3c:	22260000 	eorcs	r0, r6, #0
    4f40:	9d200000 	stcls	0, cr0, [r0, #-0]
    4f44:	5b000045 	blpl	5060 <_Min_Heap_Size+0x4860>
    4f48:	59000022 	stmdbpl	r0, {r1, r5}
    4f4c:	00000022 	andeq	r0, r0, r2, lsr #32
    4f50:	00453c21 	subeq	r3, r5, r1, lsr #24
    4f54:	0010cc00 	andseq	ip, r0, r0, lsl #24
    4f58:	cc000108 	stfgts	f0, [r0], {8}
    4f5c:	d2080010 	andle	r0, r8, #16
    4f60:	01080010 	tsteq	r8, r0, lsl r0
    4f64:	1f0909f3 	svcne	0x000909f3
    4f68:	0000455c 	andeq	r4, r0, ip, asr r5
    4f6c:	00002272 	andeq	r2, r0, r2, ror r2
    4f70:	0000226e 	andeq	r2, r0, lr, ror #4
    4f74:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4f78:	00229400 	eoreq	r9, r2, r0, lsl #8
    4f7c:	00229200 	eoreq	r9, r2, r0, lsl #4
    4f80:	45692000 	strbmi	r2, [r9, #-0]!
    4f84:	22a90000 	adccs	r0, r9, #0
    4f88:	22a70000 	adccs	r0, r7, #0
    4f8c:	00000000 	andeq	r0, r0, r0
    4f90:	0010e01c 	andseq	lr, r0, ip, lsl r0
    4f94:	0010f808 	andseq	pc, r0, r8, lsl #16
    4f98:	0021f708 	eoreq	pc, r1, r8, lsl #14
    4f9c:	61761d00 	cmnvs	r6, r0, lsl #26
    4fa0:	f901006c 			; <UNDEFINED> instruction: 0xf901006c
    4fa4:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4fa8:	22be0000 	adcscs	r0, lr, #0
    4fac:	22bc0000 	adcscs	r0, ip, #0
    4fb0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4fb4:	e2000045 	and	r0, r0, #69	; 0x45
    4fb8:	00080010 	andeq	r0, r8, r0, lsl r0
    4fbc:	0010e200 	andseq	lr, r0, r0, lsl #4
    4fc0:	0010ea08 	andseq	lr, r0, r8, lsl #20
    4fc4:	09f90108 	ldmibeq	r9!, {r3, r8}^
    4fc8:	0021b709 	eoreq	fp, r1, r9, lsl #14
    4fcc:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4fd0:	22d70000 	sbcscs	r0, r7, #0
    4fd4:	22d10000 	sbcscs	r0, r1, #0
    4fd8:	9d200000 	stcls	0, cr0, [r0, #-0]
    4fdc:	06000045 	streq	r0, [r0], -r5, asr #32
    4fe0:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    4fe4:	00000023 	andeq	r0, r0, r3, lsr #32
    4fe8:	00453c21 	subeq	r3, r5, r1, lsr #24
    4fec:	0010ee00 	andseq	lr, r0, r0, lsl #28
    4ff0:	ee000108 	adfs	f0, f0, #0.0
    4ff4:	f4080010 	vst4.8	{d0-d3}, [r8 :64], r0
    4ff8:	01080010 	tsteq	r8, r0, lsl r0
    4ffc:	1f0909f9 	svcne	0x000909f9
    5000:	0000455c 	andeq	r4, r0, ip, asr r5
    5004:	0000231d 	andeq	r2, r0, sp, lsl r3
    5008:	00002319 	andeq	r2, r0, r9, lsl r3
    500c:	00454f1f 	subeq	r4, r5, pc, lsl pc
    5010:	00233f00 	eoreq	r3, r3, r0, lsl #30
    5014:	00233d00 	eoreq	r3, r3, r0, lsl #26
    5018:	45692000 	strbmi	r2, [r9, #-0]!
    501c:	23540000 	cmpcs	r4, #0
    5020:	23520000 	cmpcs	r2, #0
    5024:	00000000 	andeq	r0, r0, r0
    5028:	00110223 	andseq	r0, r1, r3, lsr #4
    502c:	001a8f08 	andseq	r8, sl, r8, lsl #30
    5030:	50011900 	andpl	r1, r1, r0, lsl #18
    5034:	00007402 	andeq	r7, r0, r2, lsl #8
    5038:	0eea1800 	cdpeq	8, 14, cr1, cr10, cr0, {0}
    503c:	079c0800 	ldreq	r0, [ip, r0, lsl #16]
    5040:	221c0000 	andscs	r0, ip, #0
    5044:	01190000 	tsteq	r9, r0
    5048:	00740250 	rsbseq	r0, r4, r0, asr r2
    504c:	0f601800 	svceq	0x00601800
    5050:	0af50800 	beq	ffd47058 <_estack+0xdfd45e20>
    5054:	22300000 	eorscs	r0, r0, #0
    5058:	01190000 	tsteq	r9, r0
    505c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5060:	0f901a00 	svceq	0x00901a00
    5064:	460f0800 	strmi	r0, [pc], -r0, lsl #16
    5068:	a2180000 	andsge	r0, r8, #0
    506c:	9c08000f 	stcls	0, cr0, [r8], {15}
    5070:	4d000007 	stcmi	0, cr0, [r0, #-28]	; 0xffffffe4
    5074:	19000022 	stmdbne	r0, {r1, r5}
    5078:	74025001 	strvc	r5, [r2], #-1
    507c:	aa180000 	bge	605084 <_Min_Heap_Size+0x604884>
    5080:	4a08000f 	bmi	2050c4 <_Min_Heap_Size+0x2048c4>
    5084:	6100001b 	tstvs	r0, fp, lsl r0
    5088:	19000022 	stmdbne	r0, {r1, r5}
    508c:	74025001 	strvc	r5, [r2], #-1
    5090:	b2180000 	andslt	r0, r8, #0
    5094:	4a08000f 	bmi	2050d8 <_Min_Heap_Size+0x2048d8>
    5098:	7500001b 	strvc	r0, [r0, #-27]	; 0xffffffe5
    509c:	19000022 	stmdbne	r0, {r1, r5}
    50a0:	74025001 	strvc	r5, [r2], #-1
    50a4:	ba180000 	blt	6050ac <_Min_Heap_Size+0x6048ac>
    50a8:	4a08000f 	bmi	2050ec <_Min_Heap_Size+0x2048ec>
    50ac:	8900001b 	stmdbhi	r0, {r0, r1, r3, r4}
    50b0:	19000022 	stmdbne	r0, {r1, r5}
    50b4:	74025001 	strvc	r5, [r2], #-1
    50b8:	0a180000 	beq	6050c0 <_Min_Heap_Size+0x6048c0>
    50bc:	1b080011 	blne	205108 <_Min_Heap_Size+0x204908>
    50c0:	9d000009 	stcls	0, cr0, [r0, #-36]	; 0xffffffdc
    50c4:	19000022 	stmdbne	r0, {r1, r5}
    50c8:	74025001 	strvc	r5, [r2], #-1
    50cc:	12230000 	eorne	r0, r3, #0
    50d0:	d5080011 	strle	r0, [r8, #-17]	; 0xffffffef
    50d4:	19000008 	stmdbne	r0, {r3}
    50d8:	74025001 	strvc	r5, [r2], #-1
    50dc:	2c000000 	stccs	0, cr0, [r0], {-0}
    50e0:	0013e901 	andseq	lr, r3, r1, lsl #18
    50e4:	08e00100 	stmiaeq	r0!, {r8}^
    50e8:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    50f4:	23670000 	cmncs	r7, #0
    50f8:	71010000 	mrsvc	r0, (UNDEF: 1)
    50fc:	16000025 	strne	r0, [r0], -r5, lsr #32
    5100:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    5104:	4008e001 	andmi	lr, r8, r1
    5108:	00000796 	muleq	r0, r6, r7
    510c:	00002395 	muleq	r0, r5, r3
    5110:	00002387 	andeq	r2, r0, r7, lsl #7
    5114:	0000001c 	andeq	r0, r0, ip, lsl r0
    5118:	00000000 	andeq	r0, r0, r0
    511c:	00237b00 	eoreq	r7, r3, r0, lsl #22
    5120:	61761d00 	cmnvs	r6, r0, lsl #26
    5124:	e301006c 	movw	r0, #4204	; 0x106c
    5128:	00c60308 	sbceq	r0, r6, r8, lsl #6
    512c:	23ef0000 	mvncs	r0, #0
    5130:	23ed0000 	mvncs	r0, #0
    5134:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    5138:	00000045 	andeq	r0, r0, r5, asr #32
	...
    5148:	08e30100 	stmiaeq	r3!, {r8}^
    514c:	00233b03 	eoreq	r3, r3, r3, lsl #22
    5150:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    5154:	24080000 	strcs	r0, [r8], #-0
    5158:	24020000 	strcs	r0, [r2], #-0
    515c:	9d200000 	stcls	0, cr0, [r0, #-0]
    5160:	37000045 	strcc	r0, [r0, -r5, asr #32]
    5164:	35000024 	strcc	r0, [r0, #-36]	; 0xffffffdc
    5168:	00000024 	andeq	r0, r0, r4, lsr #32
    516c:	00453c21 	subeq	r3, r5, r1, lsr #24
    5170:	00000000 	andeq	r0, r0, r0
    5174:	00000100 	andeq	r0, r0, r0, lsl #2
    5178:	00000000 	andeq	r0, r0, r0
    517c:	01000000 	mrseq	r0, (UNDEF: 0)
    5180:	1f0308e3 	svcne	0x000308e3
    5184:	0000455c 	andeq	r4, r0, ip, asr r5
    5188:	0000244e 	andeq	r2, r0, lr, asr #8
    518c:	0000244a 	andeq	r2, r0, sl, asr #8
    5190:	00454f1f 	subeq	r4, r5, pc, lsl pc
    5194:	00247000 	eoreq	r7, r4, r0
    5198:	00246e00 	eoreq	r6, r4, r0, lsl #28
    519c:	45692000 	strbmi	r2, [r9, #-0]!
    51a0:	24850000 	strcs	r0, [r5], #0
    51a4:	24830000 	strcs	r0, [r3], #0
    51a8:	00000000 	andeq	r0, r0, r0
    51ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    51b0:	00000000 	andeq	r0, r0, r0
    51b4:	00241300 	eoreq	r1, r4, r0, lsl #6
    51b8:	61761d00 	cmnvs	r6, r0, lsl #26
    51bc:	e401006c 	str	r0, [r1], #-108	; 0xffffff94
    51c0:	00c60308 	sbceq	r0, r6, r8, lsl #6
    51c4:	249a0000 	ldrcs	r0, [sl], #0
    51c8:	24980000 	ldrcs	r0, [r8], #0
    51cc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    51d0:	00000045 	andeq	r0, r0, r5, asr #32
	...
    51e0:	08e40100 	stmiaeq	r4!, {r8}^
    51e4:	0023d303 	eoreq	sp, r3, r3, lsl #6
    51e8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    51ec:	24b30000 	ldrtcs	r0, [r3], #0
    51f0:	24ad0000 	strtcs	r0, [sp], #0
    51f4:	9d200000 	stcls	0, cr0, [r0, #-0]
    51f8:	e2000045 	and	r0, r0, #69	; 0x45
    51fc:	e0000024 	and	r0, r0, r4, lsr #32
    5200:	00000024 	andeq	r0, r0, r4, lsr #32
    5204:	00453c21 	subeq	r3, r5, r1, lsr #24
    5208:	00000000 	andeq	r0, r0, r0
    520c:	00000100 	andeq	r0, r0, r0, lsl #2
    5210:	00000000 	andeq	r0, r0, r0
    5214:	01000000 	mrseq	r0, (UNDEF: 0)
    5218:	1f0308e4 	svcne	0x000308e4
    521c:	0000455c 	andeq	r4, r0, ip, asr r5
    5220:	000024f9 	strdeq	r2, [r0], -r9
    5224:	000024f5 	strdeq	r2, [r0], -r5
    5228:	00454f1f 	subeq	r4, r5, pc, lsl pc
    522c:	00251b00 	eoreq	r1, r5, r0, lsl #22
    5230:	00251900 	eoreq	r1, r5, r0, lsl #18
    5234:	45692000 	strbmi	r2, [r9, #-0]!
    5238:	25300000 	ldrcs	r0, [r0, #-0]!
    523c:	252e0000 	strcs	r0, [lr, #-0]!
    5240:	00000000 	andeq	r0, r0, r0
    5244:	0000001c 	andeq	r0, r0, ip, lsl r0
    5248:	00000000 	andeq	r0, r0, r0
    524c:	0024ab00 	eoreq	sl, r4, r0, lsl #22
    5250:	61761d00 	cmnvs	r6, r0, lsl #26
    5254:	e901006c 	stmdb	r1, {r2, r3, r5, r6}
    5258:	00c60508 	sbceq	r0, r6, r8, lsl #10
    525c:	25450000 	strbcs	r0, [r5, #-0]
    5260:	25430000 	strbcs	r0, [r3, #-0]
    5264:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    5268:	00000045 	andeq	r0, r0, r5, asr #32
	...
    5278:	08e90100 	stmiaeq	r9!, {r8}^
    527c:	00246b05 	eoreq	r6, r4, r5, lsl #22
    5280:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    5284:	255e0000 	ldrbcs	r0, [lr, #-0]
    5288:	25580000 	ldrbcs	r0, [r8, #-0]
    528c:	9d200000 	stcls	0, cr0, [r0, #-0]
    5290:	8d000045 	stchi	0, cr0, [r0, #-276]	; 0xfffffeec
    5294:	8b000025 	blhi	5330 <_Min_Heap_Size+0x4b30>
    5298:	00000025 	andeq	r0, r0, r5, lsr #32
    529c:	00453c21 	subeq	r3, r5, r1, lsr #24
    52a0:	00000000 	andeq	r0, r0, r0
    52a4:	00000100 	andeq	r0, r0, r0, lsl #2
    52a8:	00000000 	andeq	r0, r0, r0
    52ac:	01000000 	mrseq	r0, (UNDEF: 0)
    52b0:	1f0508e9 	svcne	0x000508e9
    52b4:	0000455c 	andeq	r4, r0, ip, asr r5
    52b8:	000025a4 	andeq	r2, r0, r4, lsr #11
    52bc:	000025a0 	andeq	r2, r0, r0, lsr #11
    52c0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    52c4:	0025c600 	eoreq	ip, r5, r0, lsl #12
    52c8:	0025c400 	eoreq	ip, r5, r0, lsl #8
    52cc:	45692000 	strbmi	r2, [r9, #-0]!
    52d0:	25db0000 	ldrbcs	r0, [fp]
    52d4:	25d90000 	ldrbcs	r0, [r9]
    52d8:	00000000 	andeq	r0, r0, r0
    52dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    52e0:	00000000 	andeq	r0, r0, r0
    52e4:	00254300 	eoreq	r4, r5, r0, lsl #6
    52e8:	61761d00 	cmnvs	r6, r0, lsl #26
    52ec:	ef01006c 	svc	0x0001006c
    52f0:	00c60508 	sbceq	r0, r6, r8, lsl #10
    52f4:	25f00000 	ldrbcs	r0, [r0, #0]!
    52f8:	25ee0000 	strbcs	r0, [lr, #0]!
    52fc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    5300:	00000045 	andeq	r0, r0, r5, asr #32
	...
    5310:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    5314:	00250305 	eoreq	r0, r5, r5, lsl #6
    5318:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    531c:	26090000 	strcs	r0, [r9], -r0
    5320:	26030000 	strcs	r0, [r3], -r0
    5324:	9d200000 	stcls	0, cr0, [r0, #-0]
    5328:	38000045 	stmdacc	r0, {r0, r2, r6}
    532c:	36000026 	strcc	r0, [r0], -r6, lsr #32
    5330:	00000026 	andeq	r0, r0, r6, lsr #32
    5334:	00453c21 	subeq	r3, r5, r1, lsr #24
    5338:	00000000 	andeq	r0, r0, r0
    533c:	00000100 	andeq	r0, r0, r0, lsl #2
    5340:	00000000 	andeq	r0, r0, r0
    5344:	01000000 	mrseq	r0, (UNDEF: 0)
    5348:	1f0508ef 	svcne	0x000508ef
    534c:	0000455c 	andeq	r4, r0, ip, asr r5
    5350:	0000264f 	andeq	r2, r0, pc, asr #12
    5354:	0000264b 	andeq	r2, r0, fp, asr #12
    5358:	00454f1f 	subeq	r4, r5, pc, lsl pc
    535c:	00267100 	eoreq	r7, r6, r0, lsl #2
    5360:	00266f00 	eoreq	r6, r6, r0, lsl #30
    5364:	45692000 	strbmi	r2, [r9, #-0]!
    5368:	26860000 	strcs	r0, [r6], r0
    536c:	26840000 	strcs	r0, [r4], r0
    5370:	00000000 	andeq	r0, r0, r0
    5374:	0000001a 	andeq	r0, r0, sl, lsl r0
    5378:	00460f00 	subeq	r0, r6, r0, lsl #30
    537c:	00001800 	andeq	r1, r0, r0, lsl #16
    5380:	1ac90000 	bne	ff245388 <_estack+0xdf244150>
    5384:	25600000 	strbcs	r0, [r0, #-0]!
    5388:	01190000 	tsteq	r9, r0
    538c:	00740250 	rsbseq	r0, r4, r0, asr r2
    5390:	00002300 	andeq	r2, r0, r0, lsl #6
    5394:	1ac90000 	bne	ff24539c <_estack+0xdf244164>
    5398:	01190000 	tsteq	r9, r0
    539c:	00740250 	rsbseq	r0, r4, r0, asr r2
    53a0:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    53a4:	000012a2 	andeq	r1, r0, r2, lsr #5
    53a8:	13089301 	movwne	r9, #33537	; 0x8301
    53ac:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    53b8:	00269900 	eoreq	r9, r6, r0, lsl #18
    53bc:	27040100 	strcs	r0, [r4, -r0, lsl #2]
    53c0:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    53c4:	01000014 	tsteq	r0, r4, lsl r0
    53c8:	96410893 			; <UNDEFINED> instruction: 0x96410893
    53cc:	c7000007 	strgt	r0, [r0, -r7]
    53d0:	b9000026 	stmdblt	r0, {r1, r2, r5}
    53d4:	1c000026 	stcne	0, cr0, [r0], {38}	; 0x26
	...
    53e0:	0000263e 	andeq	r2, r0, lr, lsr r6
    53e4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    53e8:	08960100 	ldmeq	r6, {r8}
    53ec:	0000c603 	andeq	ip, r0, r3, lsl #12
    53f0:	00272100 	eoreq	r2, r7, r0, lsl #2
    53f4:	00271f00 	eoreq	r1, r7, r0, lsl #30
    53f8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    540c:	03089601 	movweq	r9, #34305	; 0x8601
    5410:	000025fe 	strdeq	r2, [r0], -lr
    5414:	0045901f 	subeq	r9, r5, pc, lsl r0
    5418:	00273a00 	eoreq	r3, r7, r0, lsl #20
    541c:	00273400 	eoreq	r3, r7, r0, lsl #8
    5420:	459d2000 	ldrmi	r2, [sp]
    5424:	27690000 	strbcs	r0, [r9, -r0]!
    5428:	27670000 	strbcs	r0, [r7, -r0]!
    542c:	21000000 	mrscs	r0, (UNDEF: 0)
    5430:	0000453c 	andeq	r4, r0, ip, lsr r5
    5434:	00000000 	andeq	r0, r0, r0
    5438:	00000001 	andeq	r0, r0, r1
    543c:	00000000 	andeq	r0, r0, r0
    5440:	96010000 	strls	r0, [r1], -r0
    5444:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    5448:	80000045 	andhi	r0, r0, r5, asr #32
    544c:	7c000027 	stcvc	0, cr0, [r0], {39}	; 0x27
    5450:	1f000027 	svcne	0x00000027
    5454:	0000454f 	andeq	r4, r0, pc, asr #10
    5458:	000027a2 	andeq	r2, r0, r2, lsr #15
    545c:	000027a0 	andeq	r2, r0, r0, lsr #15
    5460:	00456920 	subeq	r6, r5, r0, lsr #18
    5464:	0027b700 	eoreq	fp, r7, r0, lsl #14
    5468:	0027b500 	eoreq	fp, r7, r0, lsl #10
    546c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5478:	000026d6 	ldrdeq	r2, [r0], -r6
    547c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5480:	089b0100 	ldmeq	fp, {r8}
    5484:	0000c605 	andeq	ip, r0, r5, lsl #12
    5488:	0027cc00 	eoreq	ip, r7, r0, lsl #24
    548c:	0027ca00 	eoreq	ip, r7, r0, lsl #20
    5490:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    54a4:	05089b01 	streq	r9, [r8, #-2817]	; 0xfffff4ff
    54a8:	00002696 	muleq	r0, r6, r6
    54ac:	0045901f 	subeq	r9, r5, pc, lsl r0
    54b0:	0027e500 	eoreq	lr, r7, r0, lsl #10
    54b4:	0027df00 	eoreq	sp, r7, r0, lsl #30
    54b8:	459d2000 	ldrmi	r2, [sp]
    54bc:	28140000 	ldmdacs	r4, {}	; <UNPREDICTABLE>
    54c0:	28120000 	ldmdacs	r2, {}	; <UNPREDICTABLE>
    54c4:	21000000 	mrscs	r0, (UNDEF: 0)
    54c8:	0000453c 	andeq	r4, r0, ip, lsr r5
    54cc:	00000000 	andeq	r0, r0, r0
    54d0:	00000001 	andeq	r0, r0, r1
    54d4:	00000000 	andeq	r0, r0, r0
    54d8:	9b010000 	blls	454e0 <_Min_Heap_Size+0x44ce0>
    54dc:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    54e0:	2b000045 	blcs	55fc <_Min_Heap_Size+0x4dfc>
    54e4:	27000028 	strcs	r0, [r0, -r8, lsr #32]
    54e8:	1f000028 	svcne	0x00000028
    54ec:	0000454f 	andeq	r4, r0, pc, asr #10
    54f0:	0000284d 	andeq	r2, r0, sp, asr #16
    54f4:	0000284b 	andeq	r2, r0, fp, asr #16
    54f8:	00456920 	subeq	r6, r5, r0, lsr #18
    54fc:	00286200 	eoreq	r6, r8, r0, lsl #4
    5500:	00286000 	eoreq	r6, r8, r0
    5504:	1a000000 	bne	550c <_Min_Heap_Size+0x4d0c>
    5508:	00000000 	andeq	r0, r0, r0
    550c:	0000460f 	andeq	r4, r0, pc, lsl #12
    5510:	00000018 	andeq	r0, r0, r8, lsl r0
    5514:	001af400 	andseq	pc, sl, r0, lsl #8
    5518:	0026f300 	eoreq	pc, r6, r0, lsl #6
    551c:	50011900 	andpl	r1, r1, r0, lsl #18
    5520:	00007402 	andeq	r7, r0, r2, lsl #8
    5524:	00000023 	andeq	r0, r0, r3, lsr #32
    5528:	001af400 	andseq	pc, sl, r0, lsl #8
    552c:	50011900 	andpl	r1, r1, r0, lsl #18
    5530:	00007402 	andeq	r7, r0, r2, lsl #8
    5534:	af012700 	svcge	0x00012700
    5538:	01000013 	tsteq	r0, r3, lsl r0
    553c:	0113080c 	tsteq	r3, ip, lsl #16
    5540:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    554c:	00002875 	andeq	r2, r0, r5, ror r8
    5550:	002a6901 	eoreq	r6, sl, r1, lsl #18
    5554:	14ff1600 	ldrbtne	r1, [pc], #1536	; 555c <_Min_Heap_Size+0x4d5c>
    5558:	0c010000 	stceq	0, cr0, [r1], {-0}
    555c:	07963908 	ldreq	r3, [r6, r8, lsl #18]
    5560:	289f0000 	ldmcs	pc, {}	; <UNPREDICTABLE>
    5564:	28950000 	ldmcs	r5, {}	; <UNPREDICTABLE>
    5568:	80170000 	andshi	r0, r7, r0
    556c:	01000012 	tsteq	r0, r2, lsl r0
    5570:	c60c080e 	strgt	r0, [ip], -lr, lsl #16
    5574:	eb000000 	bl	557c <_Min_Heap_Size+0x4d7c>
    5578:	e1000028 	tst	r0, r8, lsr #32
    557c:	1c000028 	stcne	0, cr0, [r0], {40}	; 0x28
	...
    5588:	000027e6 	andeq	r2, r0, r6, ror #15
    558c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5590:	08110100 	ldmdaeq	r1, {r8}
    5594:	0000c603 	andeq	ip, r0, r3, lsl #12
    5598:	00292f00 	eoreq	r2, r9, r0, lsl #30
    559c:	00292d00 	eoreq	r2, r9, r0, lsl #26
    55a0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    55b4:	03081101 	movweq	r1, #33025	; 0x8101
    55b8:	000027a6 	andeq	r2, r0, r6, lsr #15
    55bc:	0045901f 	subeq	r9, r5, pc, lsl r0
    55c0:	00294800 	eoreq	r4, r9, r0, lsl #16
    55c4:	00294200 	eoreq	r4, r9, r0, lsl #4
    55c8:	459d2000 	ldrmi	r2, [sp]
    55cc:	29770000 	ldmdbcs	r7!, {}^	; <UNPREDICTABLE>
    55d0:	29750000 	ldmdbcs	r5!, {}^	; <UNPREDICTABLE>
    55d4:	21000000 	mrscs	r0, (UNDEF: 0)
    55d8:	0000453c 	andeq	r4, r0, ip, lsr r5
    55dc:	00000000 	andeq	r0, r0, r0
    55e0:	00000001 	andeq	r0, r0, r1
    55e4:	00000000 	andeq	r0, r0, r0
    55e8:	11010000 	mrsne	r0, (UNDEF: 1)
    55ec:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    55f0:	8e000045 	cdphi	0, 0, cr0, cr0, cr5, {2}
    55f4:	8a000029 	bhi	56a0 <_Min_Heap_Size+0x4ea0>
    55f8:	1f000029 	svcne	0x00000029
    55fc:	0000454f 	andeq	r4, r0, pc, asr #10
    5600:	000029b0 			; <UNDEFINED> instruction: 0x000029b0
    5604:	000029ae 	andeq	r2, r0, lr, lsr #19
    5608:	00456920 	subeq	r6, r5, r0, lsr #18
    560c:	0029c500 	eoreq	ip, r9, r0, lsl #10
    5610:	0029c300 	eoreq	ip, r9, r0, lsl #6
    5614:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5620:	0000287e 	andeq	r2, r0, lr, ror r8
    5624:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5628:	08120100 	ldmdaeq	r2, {r8}
    562c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5630:	0029da00 	eoreq	sp, r9, r0, lsl #20
    5634:	0029d800 	eoreq	sp, r9, r0, lsl #16
    5638:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    564c:	03081201 	movweq	r1, #33281	; 0x8201
    5650:	0000283e 	andeq	r2, r0, lr, lsr r8
    5654:	0045901f 	subeq	r9, r5, pc, lsl r0
    5658:	0029f300 	eoreq	pc, r9, r0, lsl #6
    565c:	0029ed00 	eoreq	lr, r9, r0, lsl #26
    5660:	459d2000 	ldrmi	r2, [sp]
    5664:	2a220000 	bcs	88566c <_Min_Heap_Size+0x884e6c>
    5668:	2a200000 	bcs	805670 <_Min_Heap_Size+0x804e70>
    566c:	21000000 	mrscs	r0, (UNDEF: 0)
    5670:	0000453c 	andeq	r4, r0, ip, lsr r5
    5674:	00000000 	andeq	r0, r0, r0
    5678:	00000001 	andeq	r0, r0, r1
    567c:	00000000 	andeq	r0, r0, r0
    5680:	12010000 	andne	r0, r1, #0
    5684:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    5688:	39000045 	stmdbcc	r0, {r0, r2, r6}
    568c:	3500002a 	strcc	r0, [r0, #-42]	; 0xffffffd6
    5690:	1f00002a 	svcne	0x0000002a
    5694:	0000454f 	andeq	r4, r0, pc, asr #10
    5698:	00002a5b 	andeq	r2, r0, fp, asr sl
    569c:	00002a59 	andeq	r2, r0, r9, asr sl
    56a0:	00456920 	subeq	r6, r5, r0, lsr #18
    56a4:	002a7000 	eoreq	r7, sl, r0
    56a8:	002a6e00 	eoreq	r6, sl, r0, lsl #28
    56ac:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    56b8:	00002916 	andeq	r2, r0, r6, lsl r9
    56bc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    56c0:	08170100 	ldmdaeq	r7, {r8}
    56c4:	0000c605 	andeq	ip, r0, r5, lsl #12
    56c8:	002a8500 	eoreq	r8, sl, r0, lsl #10
    56cc:	002a8300 	eoreq	r8, sl, r0, lsl #6
    56d0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    56e4:	05081701 	streq	r1, [r8, #-1793]	; 0xfffff8ff
    56e8:	000028d6 	ldrdeq	r2, [r0], -r6
    56ec:	0045901f 	subeq	r9, r5, pc, lsl r0
    56f0:	002a9e00 	eoreq	r9, sl, r0, lsl #28
    56f4:	002a9800 	eoreq	r9, sl, r0, lsl #16
    56f8:	459d2000 	ldrmi	r2, [sp]
    56fc:	2acd0000 	bcs	ff345704 <_estack+0xdf3444cc>
    5700:	2acb0000 	bcs	ff2c5708 <_estack+0xdf2c44d0>
    5704:	21000000 	mrscs	r0, (UNDEF: 0)
    5708:	0000453c 	andeq	r4, r0, ip, lsr r5
    570c:	00000000 	andeq	r0, r0, r0
    5710:	00000001 	andeq	r0, r0, r1
    5714:	00000000 	andeq	r0, r0, r0
    5718:	17010000 	strne	r0, [r1, -r0]
    571c:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    5720:	e4000045 	str	r0, [r0], #-69	; 0xffffffbb
    5724:	e000002a 	and	r0, r0, sl, lsr #32
    5728:	1f00002a 	svcne	0x0000002a
    572c:	0000454f 	andeq	r4, r0, pc, asr #10
    5730:	00002b06 	andeq	r2, r0, r6, lsl #22
    5734:	00002b04 	andeq	r2, r0, r4, lsl #22
    5738:	00456920 	subeq	r6, r5, r0, lsr #18
    573c:	002b1b00 	eoreq	r1, fp, r0, lsl #22
    5740:	002b1900 	eoreq	r1, fp, r0, lsl #18
    5744:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5750:	000029ae 	andeq	r2, r0, lr, lsr #19
    5754:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5758:	083d0100 	ldmdaeq	sp!, {r8}
    575c:	0000c605 	andeq	ip, r0, r5, lsl #12
    5760:	002b3200 	eoreq	r3, fp, r0, lsl #4
    5764:	002b2e00 	eoreq	r2, fp, r0, lsl #28
    5768:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    577c:	05083d01 	streq	r3, [r8, #-3329]	; 0xfffff2ff
    5780:	0000296e 	andeq	r2, r0, lr, ror #18
    5784:	0045901f 	subeq	r9, r5, pc, lsl r0
    5788:	002b5600 	eoreq	r5, fp, r0, lsl #12
    578c:	002b5000 	eoreq	r5, fp, r0
    5790:	459d2000 	ldrmi	r2, [sp]
    5794:	2b850000 	blcs	fe14579c <_estack+0xde144564>
    5798:	2b830000 	blcs	fe0c57a0 <_estack+0xde0c4568>
    579c:	21000000 	mrscs	r0, (UNDEF: 0)
    57a0:	0000453c 	andeq	r4, r0, ip, lsr r5
    57a4:	00000000 	andeq	r0, r0, r0
    57a8:	00000001 	andeq	r0, r0, r1
    57ac:	00000000 	andeq	r0, r0, r0
    57b0:	3d010000 	stccc	0, cr0, [r1, #-0]
    57b4:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    57b8:	9c000045 	stcls	0, cr0, [r0], {69}	; 0x45
    57bc:	9800002b 	stmdals	r0, {r0, r1, r3, r5}
    57c0:	1f00002b 	svcne	0x0000002b
    57c4:	0000454f 	andeq	r4, r0, pc, asr #10
    57c8:	00002bbe 			; <UNDEFINED> instruction: 0x00002bbe
    57cc:	00002bbc 			; <UNDEFINED> instruction: 0x00002bbc
    57d0:	00456920 	subeq	r6, r5, r0, lsr #18
    57d4:	002bd300 	eoreq	sp, fp, r0, lsl #6
    57d8:	002bd100 	eoreq	sp, fp, r0, lsl #2
    57dc:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    57e8:	00002a46 	andeq	r2, r0, r6, asr #20
    57ec:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    57f0:	08540100 	ldmdaeq	r4, {r8}^
    57f4:	0000c605 	andeq	ip, r0, r5, lsl #12
    57f8:	002be800 	eoreq	lr, fp, r0, lsl #16
    57fc:	002be600 	eoreq	lr, fp, r0, lsl #12
    5800:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5814:	05085401 	streq	r5, [r8, #-1025]	; 0xfffffbff
    5818:	00002a06 	andeq	r2, r0, r6, lsl #20
    581c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5820:	002c0100 	eoreq	r0, ip, r0, lsl #2
    5824:	002bfb00 	eoreq	pc, fp, r0, lsl #22
    5828:	459d2000 	ldrmi	r2, [sp]
    582c:	2c300000 	ldccs	0, cr0, [r0], #-0
    5830:	2c2e0000 	stccs	0, cr0, [lr], #-0
    5834:	21000000 	mrscs	r0, (UNDEF: 0)
    5838:	0000453c 	andeq	r4, r0, ip, lsr r5
    583c:	00000000 	andeq	r0, r0, r0
    5840:	00000001 	andeq	r0, r0, r1
    5844:	00000000 	andeq	r0, r0, r0
    5848:	54010000 	strpl	r0, [r1], #-0
    584c:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    5850:	47000045 	strmi	r0, [r0, -r5, asr #32]
    5854:	4300002c 	movwmi	r0, #44	; 0x2c
    5858:	1f00002c 	svcne	0x0000002c
    585c:	0000454f 	andeq	r4, r0, pc, asr #10
    5860:	00002c69 	andeq	r2, r0, r9, ror #24
    5864:	00002c67 	andeq	r2, r0, r7, ror #24
    5868:	00456920 	subeq	r6, r5, r0, lsr #18
    586c:	002c7e00 	eoreq	r7, ip, r0, lsl #28
    5870:	002c7c00 	eoreq	r7, ip, r0, lsl #24
    5874:	1a000000 	bne	587c <_Min_Heap_Size+0x507c>
    5878:	00000000 	andeq	r0, r0, r0
    587c:	0000460f 	andeq	r4, r0, pc, lsl #12
    5880:	0000001a 	andeq	r0, r0, sl, lsl r0
    5884:	00460f00 	subeq	r0, r6, r0, lsl #30
    5888:	00002300 	andeq	r2, r0, r0, lsl #6
    588c:	1b1f0000 	blne	7c5894 <_Min_Heap_Size+0x7c5094>
    5890:	01190000 	tsteq	r9, r0
    5894:	00740250 	rsbseq	r0, r4, r0, asr r2
    5898:	01270000 			; <UNDEFINED> instruction: 0x01270000
    589c:	00001128 	andeq	r1, r0, r8, lsr #2
    58a0:	1307cf01 	movwne	ip, #32513	; 0x7f01
    58a4:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    58b0:	002c9100 	eoreq	r9, ip, r0, lsl #2
    58b4:	2d110100 	ldfcss	f0, [r1, #-0]
    58b8:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    58bc:	01000014 	tsteq	r0, r4, lsl r0
    58c0:	963d07cf 	ldrtls	r0, [sp], -pc, asr #15
    58c4:	b9000007 	stmdblt	r0, {r0, r1, r2}
    58c8:	b100002c 	tstlt	r0, ip, lsr #32
    58cc:	1c00002c 	stcne	0, cr0, [r0], {44}	; 0x2c
	...
    58d8:	00002b36 	andeq	r2, r0, r6, lsr fp
    58dc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    58e0:	07d20100 	ldrbeq	r0, [r2, r0, lsl #2]
    58e4:	0000c603 	andeq	ip, r0, r3, lsl #12
    58e8:	002cef00 	eoreq	lr, ip, r0, lsl #30
    58ec:	002ced00 	eoreq	lr, ip, r0, lsl #26
    58f0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5904:	0307d201 	movweq	sp, #29185	; 0x7201
    5908:	00002af6 	strdeq	r2, [r0], -r6
    590c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5910:	002d0800 	eoreq	r0, sp, r0, lsl #16
    5914:	002d0200 	eoreq	r0, sp, r0, lsl #4
    5918:	459d2000 	ldrmi	r2, [sp]
    591c:	2d370000 	ldccs	0, cr0, [r7, #-0]
    5920:	2d350000 	ldccs	0, cr0, [r5, #-0]
    5924:	21000000 	mrscs	r0, (UNDEF: 0)
    5928:	0000453c 	andeq	r4, r0, ip, lsr r5
    592c:	00000000 	andeq	r0, r0, r0
    5930:	00000001 	andeq	r0, r0, r1
    5934:	00000000 	andeq	r0, r0, r0
    5938:	d2010000 	andle	r0, r1, #0
    593c:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5940:	4e000045 	cdpmi	0, 0, cr0, cr0, cr5, {2}
    5944:	4a00002d 	bmi	5a00 <_Min_Heap_Size+0x5200>
    5948:	1f00002d 	svcne	0x0000002d
    594c:	0000454f 	andeq	r4, r0, pc, asr #10
    5950:	00002d70 	andeq	r2, r0, r0, ror sp
    5954:	00002d6e 	andeq	r2, r0, lr, ror #26
    5958:	00456920 	subeq	r6, r5, r0, lsr #18
    595c:	002d8500 	eoreq	r8, sp, r0, lsl #10
    5960:	002d8300 	eoreq	r8, sp, r0, lsl #6
    5964:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5970:	00002bce 	andeq	r2, r0, lr, asr #23
    5974:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5978:	07d30100 	ldrbeq	r0, [r3, r0, lsl #2]
    597c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5980:	002d9a00 	eoreq	r9, sp, r0, lsl #20
    5984:	002d9800 	eoreq	r9, sp, r0, lsl #16
    5988:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    599c:	0307d301 	movweq	sp, #29441	; 0x7301
    59a0:	00002b8e 	andeq	r2, r0, lr, lsl #23
    59a4:	0045901f 	subeq	r9, r5, pc, lsl r0
    59a8:	002db300 	eoreq	fp, sp, r0, lsl #6
    59ac:	002dad00 	eoreq	sl, sp, r0, lsl #26
    59b0:	459d2000 	ldrmi	r2, [sp]
    59b4:	2de20000 	stclcs	0, cr0, [r2]
    59b8:	2de00000 	stclcs	0, cr0, [r0]
    59bc:	21000000 	mrscs	r0, (UNDEF: 0)
    59c0:	0000453c 	andeq	r4, r0, ip, lsr r5
    59c4:	00000000 	andeq	r0, r0, r0
    59c8:	00000001 	andeq	r0, r0, r1
    59cc:	00000000 	andeq	r0, r0, r0
    59d0:	d3010000 	movwle	r0, #4096	; 0x1000
    59d4:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    59d8:	f9000045 			; <UNDEFINED> instruction: 0xf9000045
    59dc:	f500002d 			; <UNDEFINED> instruction: 0xf500002d
    59e0:	1f00002d 	svcne	0x0000002d
    59e4:	0000454f 	andeq	r4, r0, pc, asr #10
    59e8:	00002e1b 	andeq	r2, r0, fp, lsl lr
    59ec:	00002e19 	andeq	r2, r0, r9, lsl lr
    59f0:	00456920 	subeq	r6, r5, r0, lsr #18
    59f4:	002e3000 	eoreq	r3, lr, r0
    59f8:	002e2e00 	eoreq	r2, lr, r0, lsl #28
    59fc:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5a08:	00002c66 	andeq	r2, r0, r6, ror #24
    5a0c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5a10:	07d80100 	ldrbeq	r0, [r8, r0, lsl #2]
    5a14:	0000c605 	andeq	ip, r0, r5, lsl #12
    5a18:	002e4500 	eoreq	r4, lr, r0, lsl #10
    5a1c:	002e4300 	eoreq	r4, lr, r0, lsl #6
    5a20:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5a34:	0507d801 	streq	sp, [r7, #-2049]	; 0xfffff7ff
    5a38:	00002c26 	andeq	r2, r0, r6, lsr #24
    5a3c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5a40:	002e5e00 	eoreq	r5, lr, r0, lsl #28
    5a44:	002e5800 	eoreq	r5, lr, r0, lsl #16
    5a48:	459d2000 	ldrmi	r2, [sp]
    5a4c:	2e8d0000 	cdpcs	0, 8, cr0, cr13, cr0, {0}
    5a50:	2e8b0000 	cdpcs	0, 8, cr0, cr11, cr0, {0}
    5a54:	21000000 	mrscs	r0, (UNDEF: 0)
    5a58:	0000453c 	andeq	r4, r0, ip, lsr r5
    5a5c:	00000000 	andeq	r0, r0, r0
    5a60:	00000001 	andeq	r0, r0, r1
    5a64:	00000000 	andeq	r0, r0, r0
    5a68:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    5a6c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5a70:	a4000045 	strge	r0, [r0], #-69	; 0xffffffbb
    5a74:	a000002e 	andge	r0, r0, lr, lsr #32
    5a78:	1f00002e 	svcne	0x0000002e
    5a7c:	0000454f 	andeq	r4, r0, pc, asr #10
    5a80:	00002ec6 	andeq	r2, r0, r6, asr #29
    5a84:	00002ec4 	andeq	r2, r0, r4, asr #29
    5a88:	00456920 	subeq	r6, r5, r0, lsr #18
    5a8c:	002edb00 	eoreq	sp, lr, r0, lsl #22
    5a90:	002ed900 	eoreq	sp, lr, r0, lsl #18
    5a94:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5aa0:	00002cfe 	strdeq	r2, [r0], -lr
    5aa4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5aa8:	07de0100 	ldrbeq	r0, [lr, r0, lsl #2]
    5aac:	0000c605 	andeq	ip, r0, r5, lsl #12
    5ab0:	002ef000 	eoreq	pc, lr, r0
    5ab4:	002eee00 	eoreq	lr, lr, r0, lsl #28
    5ab8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5acc:	0507de01 	streq	sp, [r7, #-3585]	; 0xfffff1ff
    5ad0:	00002cbe 			; <UNDEFINED> instruction: 0x00002cbe
    5ad4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5ad8:	002f0900 	eoreq	r0, pc, r0, lsl #18
    5adc:	002f0300 	eoreq	r0, pc, r0, lsl #6
    5ae0:	459d2000 	ldrmi	r2, [sp]
    5ae4:	2f380000 	svccs	0x00380000
    5ae8:	2f360000 	svccs	0x00360000
    5aec:	21000000 	mrscs	r0, (UNDEF: 0)
    5af0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5af4:	00000000 	andeq	r0, r0, r0
    5af8:	00000001 	andeq	r0, r0, r1
    5afc:	00000000 	andeq	r0, r0, r0
    5b00:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    5b04:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5b08:	4f000045 	svcmi	0x00000045
    5b0c:	4b00002f 	blmi	5bd0 <_Min_Heap_Size+0x53d0>
    5b10:	1f00002f 	svcne	0x0000002f
    5b14:	0000454f 	andeq	r4, r0, pc, asr #10
    5b18:	00002f71 	andeq	r2, r0, r1, ror pc
    5b1c:	00002f6f 	andeq	r2, r0, pc, ror #30
    5b20:	00456920 	subeq	r6, r5, r0, lsr #18
    5b24:	002f8600 	eoreq	r8, pc, r0, lsl #12
    5b28:	002f8400 	eoreq	r8, pc, r0, lsl #8
    5b2c:	1a000000 	bne	5b34 <_Min_Heap_Size+0x5334>
    5b30:	00000000 	andeq	r0, r0, r0
    5b34:	00004600 	andeq	r4, r0, r0, lsl #12
    5b38:	0000001a 	andeq	r0, r0, sl, lsl r0
    5b3c:	00461e00 	subeq	r1, r6, r0, lsl #28
    5b40:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5b44:	00001468 	andeq	r1, r0, r8, ror #8
    5b48:	13079c01 	movwne	r9, #31745	; 0x7c01
    5b4c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5b58:	002f9900 	eoreq	r9, pc, r0, lsl #18
    5b5c:	2e890100 	rmfcse	f0, f1, f0
    5b60:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    5b64:	01000014 	tsteq	r0, r4, lsl r0
    5b68:	963e079c 			; <UNDEFINED> instruction: 0x963e079c
    5b6c:	bd000007 	stclt	0, cr0, [r0, #-28]	; 0xffffffe4
    5b70:	b900002f 	stmdblt	r0, {r0, r1, r2, r3, r5}
    5b74:	1c00002f 	stcne	0, cr0, [r0], {47}	; 0x2f
	...
    5b80:	00002dde 	ldrdeq	r2, [r0], -lr
    5b84:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5b88:	079f0100 	ldreq	r0, [pc, r0, lsl #2]
    5b8c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5b90:	002fdd00 	eoreq	sp, pc, r0, lsl #26
    5b94:	002fdb00 	eoreq	sp, pc, r0, lsl #22
    5b98:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5bac:	03079f01 	movweq	r9, #32513	; 0x7f01
    5bb0:	00002d9e 	muleq	r0, lr, sp
    5bb4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5bb8:	002ff600 	eoreq	pc, pc, r0, lsl #12
    5bbc:	002ff000 	eoreq	pc, pc, r0
    5bc0:	459d2000 	ldrmi	r2, [sp]
    5bc4:	30250000 	eorcc	r0, r5, r0
    5bc8:	30230000 	eorcc	r0, r3, r0
    5bcc:	21000000 	mrscs	r0, (UNDEF: 0)
    5bd0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5bd4:	00000000 	andeq	r0, r0, r0
    5bd8:	00000001 	andeq	r0, r0, r1
    5bdc:	00000000 	andeq	r0, r0, r0
    5be0:	9f010000 	svcls	0x00010000
    5be4:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5be8:	3c000045 	stccc	0, cr0, [r0], {69}	; 0x45
    5bec:	38000030 	stmdacc	r0, {r4, r5}
    5bf0:	1f000030 	svcne	0x00000030
    5bf4:	0000454f 	andeq	r4, r0, pc, asr #10
    5bf8:	0000305e 	andeq	r3, r0, lr, asr r0
    5bfc:	0000305c 	andeq	r3, r0, ip, asr r0
    5c00:	00456920 	subeq	r6, r5, r0, lsr #18
    5c04:	00307300 	eorseq	r7, r0, r0, lsl #6
    5c08:	00307100 	eorseq	r7, r0, r0, lsl #2
    5c0c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5c18:	00002e76 	andeq	r2, r0, r6, ror lr
    5c1c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5c20:	07a40100 	streq	r0, [r4, r0, lsl #2]!
    5c24:	0000c605 	andeq	ip, r0, r5, lsl #12
    5c28:	00308800 	eorseq	r8, r0, r0, lsl #16
    5c2c:	00308600 	eorseq	r8, r0, r0, lsl #12
    5c30:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5c44:	0507a401 	streq	sl, [r7, #-1025]	; 0xfffffbff
    5c48:	00002e36 	andeq	r2, r0, r6, lsr lr
    5c4c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5c50:	0030a100 	eorseq	sl, r0, r0, lsl #2
    5c54:	00309b00 	eorseq	r9, r0, r0, lsl #22
    5c58:	459d2000 	ldrmi	r2, [sp]
    5c5c:	30d00000 	sbcscc	r0, r0, r0
    5c60:	30ce0000 	sbccc	r0, lr, r0
    5c64:	21000000 	mrscs	r0, (UNDEF: 0)
    5c68:	0000453c 	andeq	r4, r0, ip, lsr r5
    5c6c:	00000000 	andeq	r0, r0, r0
    5c70:	00000001 	andeq	r0, r0, r1
    5c74:	00000000 	andeq	r0, r0, r0
    5c78:	a4010000 	strge	r0, [r1], #-0
    5c7c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5c80:	e7000045 	str	r0, [r0, -r5, asr #32]
    5c84:	e3000030 	movw	r0, #48	; 0x30
    5c88:	1f000030 	svcne	0x00000030
    5c8c:	0000454f 	andeq	r4, r0, pc, asr #10
    5c90:	00003109 	andeq	r3, r0, r9, lsl #2
    5c94:	00003107 	andeq	r3, r0, r7, lsl #2
    5c98:	00456920 	subeq	r6, r5, r0, lsr #18
    5c9c:	00311e00 	eorseq	r1, r1, r0, lsl #28
    5ca0:	00311c00 	eorseq	r1, r1, r0, lsl #24
    5ca4:	1a000000 	bne	5cac <_Min_Heap_Size+0x54ac>
    5ca8:	00000000 	andeq	r0, r0, r0
    5cac:	00004600 	andeq	r4, r0, r0, lsl #12
    5cb0:	0000001a 	andeq	r0, r0, sl, lsl r0
    5cb4:	00461e00 	subeq	r1, r6, r0, lsl #28
    5cb8:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5cbc:	000016fc 	strdeq	r1, [r0], -ip
    5cc0:	13074301 	movwne	r4, #29441	; 0x7301
    5cc4:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5cd0:	00313100 	eorseq	r3, r1, r0, lsl #2
    5cd4:	31db0100 	bicscc	r0, fp, r0, lsl #2
    5cd8:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    5cdc:	01000014 	tsteq	r0, r4, lsl r0
    5ce0:	96360743 	ldrtls	r0, [r6], -r3, asr #14
    5ce4:	59000007 	stmdbpl	r0, {r0, r1, r2}
    5ce8:	51000031 	tstpl	r0, r1, lsr r0
    5cec:	1c000031 	stcne	0, cr0, [r0], {49}	; 0x31
	...
    5cf8:	00002f56 	andeq	r2, r0, r6, asr pc
    5cfc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5d00:	07460100 	strbeq	r0, [r6, -r0, lsl #2]
    5d04:	0000c603 	andeq	ip, r0, r3, lsl #12
    5d08:	00318f00 	eorseq	r8, r1, r0, lsl #30
    5d0c:	00318d00 	eorseq	r8, r1, r0, lsl #26
    5d10:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5d24:	03074601 	movweq	r4, #30209	; 0x7601
    5d28:	00002f16 	andeq	r2, r0, r6, lsl pc
    5d2c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5d30:	0031a800 	eorseq	sl, r1, r0, lsl #16
    5d34:	0031a200 	eorseq	sl, r1, r0, lsl #4
    5d38:	459d2000 	ldrmi	r2, [sp]
    5d3c:	31d70000 	bicscc	r0, r7, r0
    5d40:	31d50000 	bicscc	r0, r5, r0
    5d44:	21000000 	mrscs	r0, (UNDEF: 0)
    5d48:	0000453c 	andeq	r4, r0, ip, lsr r5
    5d4c:	00000000 	andeq	r0, r0, r0
    5d50:	00000001 	andeq	r0, r0, r1
    5d54:	00000000 	andeq	r0, r0, r0
    5d58:	46010000 	strmi	r0, [r1], -r0
    5d5c:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5d60:	ee000045 	cdp	0, 0, cr0, cr0, cr5, {2}
    5d64:	ea000031 	b	5e30 <_Min_Heap_Size+0x5630>
    5d68:	1f000031 	svcne	0x00000031
    5d6c:	0000454f 	andeq	r4, r0, pc, asr #10
    5d70:	00003210 	andeq	r3, r0, r0, lsl r2
    5d74:	0000320e 	andeq	r3, r0, lr, lsl #4
    5d78:	00456920 	subeq	r6, r5, r0, lsr #18
    5d7c:	00322500 	eorseq	r2, r2, r0, lsl #10
    5d80:	00322300 	eorseq	r2, r2, r0, lsl #6
    5d84:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5d90:	00002fee 	andeq	r2, r0, lr, ror #31
    5d94:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5d98:	07470100 	strbeq	r0, [r7, -r0, lsl #2]
    5d9c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5da0:	00323a00 	eorseq	r3, r2, r0, lsl #20
    5da4:	00323800 	eorseq	r3, r2, r0, lsl #16
    5da8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5dbc:	03074701 	movweq	r4, #30465	; 0x7701
    5dc0:	00002fae 	andeq	r2, r0, lr, lsr #31
    5dc4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5dc8:	00325300 	eorseq	r5, r2, r0, lsl #6
    5dcc:	00324d00 	eorseq	r4, r2, r0, lsl #26
    5dd0:	459d2000 	ldrmi	r2, [sp]
    5dd4:	32820000 	addcc	r0, r2, #0
    5dd8:	32800000 	addcc	r0, r0, #0
    5ddc:	21000000 	mrscs	r0, (UNDEF: 0)
    5de0:	0000453c 	andeq	r4, r0, ip, lsr r5
    5de4:	00000000 	andeq	r0, r0, r0
    5de8:	00000001 	andeq	r0, r0, r1
    5dec:	00000000 	andeq	r0, r0, r0
    5df0:	47010000 	strmi	r0, [r1, -r0]
    5df4:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5df8:	99000045 	stmdbls	r0, {r0, r2, r6}
    5dfc:	95000032 	strls	r0, [r0, #-50]	; 0xffffffce
    5e00:	1f000032 	svcne	0x00000032
    5e04:	0000454f 	andeq	r4, r0, pc, asr #10
    5e08:	000032bb 			; <UNDEFINED> instruction: 0x000032bb
    5e0c:	000032b9 			; <UNDEFINED> instruction: 0x000032b9
    5e10:	00456920 	subeq	r6, r5, r0, lsr #18
    5e14:	0032d000 	eorseq	sp, r2, r0
    5e18:	0032ce00 	eorseq	ip, r2, r0, lsl #28
    5e1c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5e28:	00003086 	andeq	r3, r0, r6, lsl #1
    5e2c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5e30:	074c0100 	strbeq	r0, [ip, -r0, lsl #2]
    5e34:	0000c605 	andeq	ip, r0, r5, lsl #12
    5e38:	0032e500 	eorseq	lr, r2, r0, lsl #10
    5e3c:	0032e300 	eorseq	lr, r2, r0, lsl #6
    5e40:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5e54:	05074c01 	streq	r4, [r7, #-3073]	; 0xfffff3ff
    5e58:	00003046 	andeq	r3, r0, r6, asr #32
    5e5c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5e60:	0032fe00 	eorseq	pc, r2, r0, lsl #28
    5e64:	0032f800 	eorseq	pc, r2, r0, lsl #16
    5e68:	459d2000 	ldrmi	r2, [sp]
    5e6c:	332d0000 			; <UNDEFINED> instruction: 0x332d0000
    5e70:	332b0000 			; <UNDEFINED> instruction: 0x332b0000
    5e74:	21000000 	mrscs	r0, (UNDEF: 0)
    5e78:	0000453c 	andeq	r4, r0, ip, lsr r5
    5e7c:	00000000 	andeq	r0, r0, r0
    5e80:	00000001 	andeq	r0, r0, r1
    5e84:	00000000 	andeq	r0, r0, r0
    5e88:	4c010000 	stcmi	0, cr0, [r1], {-0}
    5e8c:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5e90:	44000045 	strmi	r0, [r0], #-69	; 0xffffffbb
    5e94:	40000033 	andmi	r0, r0, r3, lsr r0
    5e98:	1f000033 	svcne	0x00000033
    5e9c:	0000454f 	andeq	r4, r0, pc, asr #10
    5ea0:	00003366 	andeq	r3, r0, r6, ror #6
    5ea4:	00003364 	andeq	r3, r0, r4, ror #6
    5ea8:	00456920 	subeq	r6, r5, r0, lsr #18
    5eac:	00337b00 	eorseq	r7, r3, r0, lsl #22
    5eb0:	00337900 	eorseq	r7, r3, r0, lsl #18
    5eb4:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5ec0:	0000311e 	andeq	r3, r0, lr, lsl r1
    5ec4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5ec8:	07520100 	ldrbeq	r0, [r2, -r0, lsl #2]
    5ecc:	0000c605 	andeq	ip, r0, r5, lsl #12
    5ed0:	00339000 	eorseq	r9, r3, r0
    5ed4:	00338e00 	eorseq	r8, r3, r0, lsl #28
    5ed8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5eec:	05075201 	streq	r5, [r7, #-513]	; 0xfffffdff
    5ef0:	000030de 	ldrdeq	r3, [r0], -lr
    5ef4:	0045901f 	subeq	r9, r5, pc, lsl r0
    5ef8:	0033a900 	eorseq	sl, r3, r0, lsl #18
    5efc:	0033a300 	eorseq	sl, r3, r0, lsl #6
    5f00:	459d2000 	ldrmi	r2, [sp]
    5f04:	33d80000 	bicscc	r0, r8, #0
    5f08:	33d60000 	bicscc	r0, r6, #0
    5f0c:	21000000 	mrscs	r0, (UNDEF: 0)
    5f10:	0000453c 	andeq	r4, r0, ip, lsr r5
    5f14:	00000000 	andeq	r0, r0, r0
    5f18:	00000001 	andeq	r0, r0, r1
    5f1c:	00000000 	andeq	r0, r0, r0
    5f20:	52010000 	andpl	r0, r1, #0
    5f24:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5f28:	ef000045 	svc	0x00000045
    5f2c:	eb000033 	bl	6000 <_Min_Heap_Size+0x5800>
    5f30:	1f000033 	svcne	0x00000033
    5f34:	0000454f 	andeq	r4, r0, pc, asr #10
    5f38:	00003411 	andeq	r3, r0, r1, lsl r4
    5f3c:	0000340f 	andeq	r3, r0, pc, lsl #8
    5f40:	00456920 	subeq	r6, r5, r0, lsr #18
    5f44:	00342600 	eorseq	r2, r4, r0, lsl #12
    5f48:	00342400 	eorseq	r2, r4, r0, lsl #8
    5f4c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5f58:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    5f5c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5f60:	076b0100 	strbeq	r0, [fp, -r0, lsl #2]!
    5f64:	0000c605 	andeq	ip, r0, r5, lsl #12
    5f68:	00343b00 	eorseq	r3, r4, r0, lsl #22
    5f6c:	00343900 	eorseq	r3, r4, r0, lsl #18
    5f70:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5f84:	05076b01 	streq	r6, [r7, #-2817]	; 0xfffff4ff
    5f88:	00003176 	andeq	r3, r0, r6, ror r1
    5f8c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5f90:	00345400 	eorseq	r5, r4, r0, lsl #8
    5f94:	00344e00 	eorseq	r4, r4, r0, lsl #28
    5f98:	459d2000 	ldrmi	r2, [sp]
    5f9c:	34830000 	strcc	r0, [r3], #0
    5fa0:	34810000 	strcc	r0, [r1], #0
    5fa4:	21000000 	mrscs	r0, (UNDEF: 0)
    5fa8:	0000453c 	andeq	r4, r0, ip, lsr r5
    5fac:	00000000 	andeq	r0, r0, r0
    5fb0:	00000001 	andeq	r0, r0, r1
    5fb4:	00000000 	andeq	r0, r0, r0
    5fb8:	6b010000 	blvs	45fc0 <_Min_Heap_Size+0x457c0>
    5fbc:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5fc0:	9a000045 	bls	60dc <_Min_Heap_Size+0x58dc>
    5fc4:	96000034 			; <UNDEFINED> instruction: 0x96000034
    5fc8:	1f000034 	svcne	0x00000034
    5fcc:	0000454f 	andeq	r4, r0, pc, asr #10
    5fd0:	000034bc 			; <UNDEFINED> instruction: 0x000034bc
    5fd4:	000034ba 			; <UNDEFINED> instruction: 0x000034ba
    5fd8:	00456920 	subeq	r6, r5, r0, lsr #18
    5fdc:	0034d100 	eorseq	sp, r4, r0, lsl #2
    5fe0:	0034cf00 	eorseq	ip, r4, r0, lsl #30
    5fe4:	1a000000 	bne	5fec <_Min_Heap_Size+0x57ec>
    5fe8:	00000000 	andeq	r0, r0, r0
    5fec:	00004600 	andeq	r4, r0, r0, lsl #12
    5ff0:	0000001a 	andeq	r0, r0, sl, lsl r0
    5ff4:	00460000 	subeq	r0, r6, r0
    5ff8:	00001a00 	andeq	r1, r0, r0, lsl #20
    5ffc:	461e0000 	ldrmi	r0, [lr], -r0
    6000:	001a0000 	andseq	r0, sl, r0
    6004:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6008:	00000046 	andeq	r0, r0, r6, asr #32
    600c:	108b0128 	addne	r0, fp, r8, lsr #2
    6010:	31010000 	mrscc	r0, (UNDEF: 1)
    6014:	67011d07 	strvs	r1, [r1, -r7, lsl #26]
    6018:	00000005 	andeq	r0, r0, r5
    601c:	00000000 	andeq	r0, r0, r0
    6020:	02000000 	andeq	r0, r0, #0
    6024:	1001007d 	andne	r0, r1, sp, ror r0
    6028:	16000032 			; <UNDEFINED> instruction: 0x16000032
    602c:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    6030:	4b073101 	blmi	1d243c <_Min_Heap_Size+0x1d1c3c>
    6034:	00000796 	muleq	r0, r6, r7
    6038:	000034e8 	andeq	r3, r0, r8, ror #9
    603c:	000034e4 	andeq	r3, r0, r4, ror #9
    6040:	01012700 	tsteq	r1, r0, lsl #14
    6044:	01000016 	tsteq	r0, r6, lsl r0
    6048:	011306ed 	tsteq	r3, sp, ror #13
    604c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6058:	00003509 	andeq	r3, r0, r9, lsl #10
    605c:	00334b01 	eorseq	r4, r3, r1, lsl #22
    6060:	14ff1600 	ldrbtne	r1, [pc], #1536	; 6068 <_Min_Heap_Size+0x5868>
    6064:	ed010000 	stc	0, cr0, [r1, #-0]
    6068:	07964406 	ldreq	r4, [r6, r6, lsl #8]
    606c:	35750000 	ldrbcc	r0, [r5, #-0]!
    6070:	35650000 	strbcc	r0, [r5, #-0]!
    6074:	50160000 	andspl	r0, r6, r0
    6078:	01000011 	tsteq	r0, r1, lsl r0
    607c:	825406ed 	subshi	r0, r4, #248512512	; 0xed00000
    6080:	e2000006 	and	r0, r0, #6
    6084:	d8000035 	stmdale	r0, {r0, r2, r4, r5}
    6088:	16000035 			; <UNDEFINED> instruction: 0x16000035
    608c:	000026c6 	andeq	r2, r0, r6, asr #13
    6090:	6406ed01 	strvs	lr, [r6], #-3329	; 0xfffff2ff
    6094:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6098:	00003631 	andeq	r3, r0, r1, lsr r6
    609c:	00003627 	andeq	r3, r0, r7, lsr #12
    60a0:	00199917 	andseq	r9, r9, r7, lsl r9
    60a4:	06ef0100 	strbteq	r0, [pc], r0, lsl #2
    60a8:	00023a15 	andeq	r3, r2, r5, lsl sl
    60ac:	00367c00 	eorseq	r7, r6, r0, lsl #24
    60b0:	00367600 	eorseq	r7, r6, r0, lsl #12
    60b4:	00001c00 	andeq	r1, r0, r0, lsl #24
    60b8:	00000000 	andeq	r0, r0, r0
    60bc:	32a20000 	adccc	r0, r2, #0
    60c0:	b6220000 	strtlt	r0, [r2], -r0
    60c4:	01000001 	tsteq	r0, r1
    60c8:	d2090704 	andle	r0, r9, #4, 14	; 0x100000
    60cc:	02000000 	andeq	r0, r0, #0
    60d0:	1c007491 	cfstrsne	mvf7, [r0], {145}	; 0x91
	...
    60dc:	0000333a 	andeq	r3, r0, sl, lsr r3
    60e0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    60e4:	07050100 	streq	r0, [r5, -r0, lsl #2]
    60e8:	0000c609 	andeq	ip, r0, r9, lsl #12
    60ec:	0036a800 	eorseq	sl, r6, r0, lsl #16
    60f0:	0036a600 	eorseq	sl, r6, r0, lsl #12
    60f4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    6108:	09070501 	stmdbeq	r7, {r0, r8, sl}
    610c:	000032fa 	strdeq	r3, [r0], -sl
    6110:	0045901f 	subeq	r9, r5, pc, lsl r0
    6114:	0036c100 	eorseq	ip, r6, r0, lsl #2
    6118:	0036bb00 	eorseq	fp, r6, r0, lsl #22
    611c:	459d2000 	ldrmi	r2, [sp]
    6120:	36f00000 	ldrbtcc	r0, [r0], r0
    6124:	36ee0000 	strbtcc	r0, [lr], r0
    6128:	21000000 	mrscs	r0, (UNDEF: 0)
    612c:	0000453c 	andeq	r4, r0, ip, lsr r5
    6130:	00000000 	andeq	r0, r0, r0
    6134:	00000001 	andeq	r0, r0, r1
    6138:	00000000 	andeq	r0, r0, r0
    613c:	05010000 	streq	r0, [r1, #-0]
    6140:	5c1f0907 			; <UNDEFINED> instruction: 0x5c1f0907
    6144:	07000045 	streq	r0, [r0, -r5, asr #32]
    6148:	03000037 	movweq	r0, #55	; 0x37
    614c:	1f000037 	svcne	0x00000037
    6150:	0000454f 	andeq	r4, r0, pc, asr #10
    6154:	00003729 	andeq	r3, r0, r9, lsr #14
    6158:	00003727 	andeq	r3, r0, r7, lsr #14
    615c:	00456920 	subeq	r6, r5, r0, lsr #18
    6160:	00373e00 	eorseq	r3, r7, r0, lsl #28
    6164:	00373c00 	eorseq	r3, r7, r0, lsl #24
    6168:	23000000 	movwcs	r0, #0
    616c:	00000000 	andeq	r0, r0, r0
    6170:	00000dad 	andeq	r0, r0, sp, lsr #27
    6174:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6178:	00000074 	andeq	r0, r0, r4, ror r0
    617c:	14960127 	ldrne	r0, [r6], #295	; 0x127
    6180:	b1010000 	mrslt	r0, (UNDEF: 1)
    6184:	3a011306 	bcc	4ada4 <_Min_Heap_Size+0x4a5a4>
    6188:	00000002 	andeq	r0, r0, r2
    618c:	00000000 	andeq	r0, r0, r0
    6190:	51000000 	mrspl	r0, (UNDEF: 0)
    6194:	01000037 	tsteq	r0, r7, lsr r0
    6198:	00003486 	andeq	r3, r0, r6, lsl #9
    619c:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    61a0:	06b10100 	ldrteq	r0, [r1], r0, lsl #2
    61a4:	00079643 	andeq	r9, r7, r3, asr #12
    61a8:	0037bd00 	eorseq	fp, r7, r0, lsl #26
    61ac:	0037ad00 	eorseq	sl, r7, r0, lsl #26
    61b0:	11501600 	cmpne	r0, r0, lsl #12
    61b4:	b1010000 	mrslt	r0, (UNDEF: 1)
    61b8:	06825306 	streq	r5, [r2], r6, lsl #6
    61bc:	382a0000 	stmdacc	sl!, {}	; <UNPREDICTABLE>
    61c0:	38200000 	stmdacc	r0!, {}	; <UNPREDICTABLE>
    61c4:	c6160000 	ldrgt	r0, [r6], -r0
    61c8:	01000026 	tsteq	r0, r6, lsr #32
    61cc:	b06306b1 	strhtlt	r0, [r3], #-97	; 0xffffff9f
    61d0:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    61d4:	6f000038 	svcvs	0x00000038
    61d8:	17000038 	smladxne	r0, r8, r0, r0
    61dc:	00001999 	muleq	r0, r9, r9
    61e0:	1506b301 	strne	fp, [r6, #-769]	; 0xfffffcff
    61e4:	0000023a 	andeq	r0, r0, sl, lsr r2
    61e8:	000038c4 	andeq	r3, r0, r4, asr #17
    61ec:	000038be 			; <UNDEFINED> instruction: 0x000038be
    61f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	0033dd00 	eorseq	sp, r3, r0, lsl #26
    61fc:	01b62200 			; <UNDEFINED> instruction: 0x01b62200
    6200:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    6204:	00d20906 	sbcseq	r0, r2, r6, lsl #18
    6208:	91020000 	mrsls	r0, (UNDEF: 2)
    620c:	001c0074 	andseq	r0, ip, r4, ror r0
    6210:	00000000 	andeq	r0, r0, r0
    6214:	75000000 	strvc	r0, [r0, #-0]
    6218:	1d000034 	stcne	0, cr0, [r0, #-208]	; 0xffffff30
    621c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6220:	0906c901 	stmdbeq	r6, {r0, r8, fp, lr, pc}
    6224:	000000c6 	andeq	r0, r0, r6, asr #1
    6228:	000038f0 	strdeq	r3, [r0], -r0
    622c:	000038ee 	andeq	r3, r0, lr, ror #17
    6230:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6240:	01000000 	mrseq	r0, (UNDEF: 0)
    6244:	350906c9 	strcc	r0, [r9, #-1737]	; 0xfffff937
    6248:	1f000034 	svcne	0x00000034
    624c:	00004590 	muleq	r0, r0, r5
    6250:	00003909 	andeq	r3, r0, r9, lsl #18
    6254:	00003903 	andeq	r3, r0, r3, lsl #18
    6258:	00459d20 	subeq	r9, r5, r0, lsr #26
    625c:	00393800 	eorseq	r3, r9, r0, lsl #16
    6260:	00393600 	eorseq	r3, r9, r0, lsl #12
    6264:	3c210000 	stccc	0, cr0, [r1], #-0
    6268:	00000045 	andeq	r0, r0, r5, asr #32
    626c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6278:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    627c:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    6280:	394f0000 	stmdbcc	pc, {}^	; <UNPREDICTABLE>
    6284:	394b0000 	stmdbcc	fp, {}^	; <UNPREDICTABLE>
    6288:	4f1f0000 	svcmi	0x001f0000
    628c:	71000045 	tstvc	r0, r5, asr #32
    6290:	6f000039 	svcvs	0x00000039
    6294:	20000039 	andcs	r0, r0, r9, lsr r0
    6298:	00004569 	andeq	r4, r0, r9, ror #10
    629c:	00003986 	andeq	r3, r0, r6, lsl #19
    62a0:	00003984 	andeq	r3, r0, r4, lsl #19
    62a4:	00230000 	eoreq	r0, r3, r0
    62a8:	1f000000 	svcne	0x00000000
    62ac:	19000010 	stmdbne	r0, {r4}
    62b0:	74025001 	strvc	r5, [r2], #-1
    62b4:	27000000 	strcs	r0, [r0, -r0]
    62b8:	00168c01 	andseq	r8, r6, r1, lsl #24
    62bc:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    62c0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    62cc:	39990000 	ldmibcc	r9, {}	; <UNPREDICTABLE>
    62d0:	7f010000 	svcvc	0x00010000
    62d4:	16000035 			; <UNDEFINED> instruction: 0x16000035
    62d8:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    62dc:	40063401 	andmi	r3, r6, r1, lsl #8
    62e0:	00000796 	muleq	r0, r6, r7
    62e4:	000039ed 	andeq	r3, r0, sp, ror #19
    62e8:	000039dd 	ldrdeq	r3, [r0], -sp
    62ec:	00115016 	andseq	r5, r1, r6, lsl r0
    62f0:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    62f4:	00068250 	andeq	r8, r6, r0, asr r2
    62f8:	003a6200 	eorseq	r6, sl, r0, lsl #4
    62fc:	003a5000 	eorseq	r5, sl, r0
    6300:	26c61600 	strbcs	r1, [r6], r0, lsl #12
    6304:	34010000 	strcc	r0, [r1], #-0
    6308:	00b06006 	adcseq	r6, r0, r6
    630c:	3ae00000 	bcc	ff806314 <_estack+0xdf8050dc>
    6310:	3ad60000 	bcc	ff586318 <_estack+0xdf5850e0>
    6314:	02160000 	andseq	r0, r6, #0
    6318:	01000014 	tsteq	r0, r4, lsl r0
    631c:	cf700634 	svcgt	0x00700634
    6320:	29000008 	stmdbcs	r0, {r3}
    6324:	2500003b 	strcs	r0, [r0, #-59]	; 0xffffffc5
    6328:	1600003b 			; <UNDEFINED> instruction: 0x1600003b
    632c:	00001434 	andeq	r1, r0, r4, lsr r4
    6330:	35063501 	strcc	r3, [r6, #-1281]	; 0xfffffaff
    6334:	000000c6 	andeq	r0, r0, r6, asr #1
    6338:	00003b4b 	andeq	r3, r0, fp, asr #22
    633c:	00003b47 	andeq	r3, r0, r7, asr #22
    6340:	00117c17 	andseq	r7, r1, r7, lsl ip
    6344:	06370100 	ldrteq	r0, [r7], -r0, lsl #2
    6348:	0006820d 	andeq	r8, r6, sp, lsl #4
    634c:	003b6f00 	eorseq	r6, fp, r0, lsl #30
    6350:	003b6b00 	eorseq	r6, fp, r0, lsl #22
    6354:	11e61700 	mvnne	r1, r0, lsl #14
    6358:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    635c:	08cf0d06 	stmiaeq	pc, {r1, r2, r8, sl, fp}^	; <UNPREDICTABLE>
    6360:	3b950000 	blcc	fe546368 <_estack+0xde545130>
    6364:	3b8d0000 	blcc	fe34636c <_estack+0xde345134>
    6368:	49170000 	ldmdbmi	r7, {}	; <UNPREDICTABLE>
    636c:	01000015 	tsteq	r0, r5, lsl r0
    6370:	c60c0639 			; <UNDEFINED> instruction: 0xc60c0639
    6374:	cf000000 	svcgt	0x00000000
    6378:	cb00003b 	blgt	646c <_Min_Heap_Size+0x5c6c>
    637c:	1c00003b 	stcne	0, cr0, [r0], {59}	; 0x3b
	...
    6388:	0000356c 	andeq	r3, r0, ip, ror #10
    638c:	0001b622 	andeq	fp, r1, r2, lsr #12
    6390:	06640100 	strbteq	r0, [r4], -r0, lsl #2
    6394:	0000d209 	andeq	sp, r0, r9, lsl #4
    6398:	5c910200 	lfmpl	f0, 4, [r1], {0}
    639c:	00001a00 	andeq	r1, r0, r0, lsl #20
    63a0:	45f20000 	ldrbmi	r0, [r2, #0]!
    63a4:	001a0000 	andseq	r0, sl, r0
    63a8:	f2000000 	vhadd.s8	d0, d0, d0
    63ac:	00000045 	andeq	r0, r0, r5, asr #32
    63b0:	14ce0127 	strbne	r0, [lr], #295	; 0x127
    63b4:	fd010000 	stc2	0, cr0, [r1, #-0]
    63b8:	3a011305 	bcc	4afd4 <_Min_Heap_Size+0x4a7d4>
    63bc:	00000002 	andeq	r0, r0, r2
    63c0:	00000000 	andeq	r0, r0, r0
    63c4:	ed000000 	stc	0, cr0, [r0, #-0]
    63c8:	0100003b 	tsteq	r0, fp, lsr r0
    63cc:	00003730 	andeq	r3, r0, r0, lsr r7
    63d0:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    63d4:	05fd0100 	ldrbeq	r0, [sp, #256]!	; 0x100
    63d8:	00079638 	andeq	r9, r7, r8, lsr r6
    63dc:	003c1500 	eorseq	r1, ip, r0, lsl #10
    63e0:	003c0d00 	eorseq	r0, ip, r0, lsl #26
    63e4:	159b1700 	ldrne	r1, [fp, #1792]	; 0x700
    63e8:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    63ec:	00c60c05 	sbceq	r0, r6, r5, lsl #24
    63f0:	3c530000 	mracc	r0, r3, acc0
    63f4:	3c490000 	marcc	acc0, r0, r9
    63f8:	001c0000 	andseq	r0, ip, r0
    63fc:	00000000 	andeq	r0, r0, r0
    6400:	61000000 	mrsvs	r0, (UNDEF: 0)
    6404:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    6408:	006c6176 	rsbeq	r6, ip, r6, ror r1
    640c:	05060a01 	streq	r0, [r6, #-2561]	; 0xfffff5ff
    6410:	000000c6 	andeq	r0, r0, r6, asr #1
    6414:	00003cb7 			; <UNDEFINED> instruction: 0x00003cb7
    6418:	00003cb5 			; <UNDEFINED> instruction: 0x00003cb5
    641c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    642c:	01000000 	mrseq	r0, (UNDEF: 0)
    6430:	2105060a 	tstcs	r5, sl, lsl #12
    6434:	1f000036 	svcne	0x00000036
    6438:	00004590 	muleq	r0, r0, r5
    643c:	00003cd0 	ldrdeq	r3, [r0], -r0
    6440:	00003cca 	andeq	r3, r0, sl, asr #25
    6444:	00459d20 	subeq	r9, r5, r0, lsr #26
    6448:	003cff00 	eorseq	pc, ip, r0, lsl #30
    644c:	003cfd00 	eorseq	pc, ip, r0, lsl #26
    6450:	3c210000 	stccc	0, cr0, [r1], #-0
    6454:	00000045 	andeq	r0, r0, r5, asr #32
    6458:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6464:	060a0100 	streq	r0, [sl], -r0, lsl #2
    6468:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    646c:	3d160000 	ldccc	0, cr0, [r6, #-0]
    6470:	3d120000 	ldccc	0, cr0, [r2, #-0]
    6474:	4f1f0000 	svcmi	0x001f0000
    6478:	38000045 	stmdacc	r0, {r0, r2, r6}
    647c:	3600003d 			; <UNDEFINED> instruction: 0x3600003d
    6480:	2000003d 	andcs	r0, r0, sp, lsr r0
    6484:	00004569 	andeq	r4, r0, r9, ror #10
    6488:	00003d4d 	andeq	r3, r0, sp, asr #26
    648c:	00003d4b 	andeq	r3, r0, fp, asr #26
    6490:	001c0000 	andseq	r0, ip, r0
    6494:	00000000 	andeq	r0, r0, r0
    6498:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    649c:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    64a0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    64a4:	05061801 	streq	r1, [r6, #-2049]	; 0xfffff7ff
    64a8:	000000c6 	andeq	r0, r0, r6, asr #1
    64ac:	00003d62 	andeq	r3, r0, r2, ror #26
    64b0:	00003d60 	andeq	r3, r0, r0, ror #26
    64b4:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    64c4:	01000000 	mrseq	r0, (UNDEF: 0)
    64c8:	b9050618 	stmdblt	r5, {r3, r4, r9, sl}
    64cc:	1f000036 	svcne	0x00000036
    64d0:	00004590 	muleq	r0, r0, r5
    64d4:	00003d7b 	andeq	r3, r0, fp, ror sp
    64d8:	00003d75 	andeq	r3, r0, r5, ror sp
    64dc:	00459d20 	subeq	r9, r5, r0, lsr #26
    64e0:	003daa00 	eorseq	sl, sp, r0, lsl #20
    64e4:	003da800 	eorseq	sl, sp, r0, lsl #16
    64e8:	3c210000 	stccc	0, cr0, [r1], #-0
    64ec:	00000045 	andeq	r0, r0, r5, asr #32
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    64fc:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    6500:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6504:	3dc10000 	stclcc	0, cr0, [r1]
    6508:	3dbd0000 	ldccc	0, cr0, [sp]
    650c:	4f1f0000 	svcmi	0x001f0000
    6510:	e3000045 	movw	r0, #69	; 0x45
    6514:	e100003d 	tst	r0, sp, lsr r0
    6518:	2000003d 	andcs	r0, r0, sp, lsr r0
    651c:	00004569 	andeq	r4, r0, r9, ror #10
    6520:	00003df8 	strdeq	r3, [r0], -r8
    6524:	00003df6 	strdeq	r3, [r0], -r6
    6528:	001a0000 	andseq	r0, sl, r0
    652c:	00000000 	andeq	r0, r0, r0
    6530:	18000046 	stmdane	r0, {r1, r2, r6}
    6534:	00000000 	andeq	r0, r0, r0
    6538:	00000ce9 	andeq	r0, r0, r9, ror #25
    653c:	00003716 	andeq	r3, r0, r6, lsl r7
    6540:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6544:	1a000074 	bne	671c <_Min_Heap_Size+0x5f1c>
    6548:	00000000 	andeq	r0, r0, r0
    654c:	00004600 	andeq	r4, r0, r0, lsl #12
    6550:	00000023 	andeq	r0, r0, r3, lsr #32
    6554:	000af500 	andeq	pc, sl, r0, lsl #10
    6558:	50011900 	andpl	r1, r1, r0, lsl #18
    655c:	00007402 	andeq	r7, r0, r2, lsl #8
    6560:	e9012700 	stmdb	r1, {r8, r9, sl, sp}
    6564:	01000016 	tsteq	r0, r6, lsl r0
    6568:	011305db 			; <UNDEFINED> instruction: 0x011305db
    656c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6578:	00003e0b 	andeq	r3, r0, fp, lsl #28
    657c:	0039e001 	eorseq	lr, r9, r1
    6580:	14ff1600 	ldrbtne	r1, [pc], #1536	; 6588 <_Min_Heap_Size+0x5d88>
    6584:	db010000 	blle	4658c <_Min_Heap_Size+0x45d8c>
    6588:	07963a05 	ldreq	r3, [r6, r5, lsl #20]
    658c:	3e3f0000 	cdpcc	0, 3, cr0, cr15, cr0, {0}
    6590:	3e370000 	cdpcc	0, 3, cr0, cr7, cr0, {0}
    6594:	001c0000 	andseq	r0, ip, r0
    6598:	00000000 	andeq	r0, r0, r0
    659c:	fd000000 	stc2	0, cr0, [r0, #-0]
    65a0:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    65a4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    65a8:	0505e101 	streq	lr, [r5, #-257]	; 0xfffffeff
    65ac:	000000c6 	andeq	r0, r0, r6, asr #1
    65b0:	00003e7b 	andeq	r3, r0, fp, ror lr
    65b4:	00003e79 	andeq	r3, r0, r9, ror lr
    65b8:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    65c8:	01000000 	mrseq	r0, (UNDEF: 0)
    65cc:	bd0505e1 	cfstr32lt	mvfx0, [r5, #-900]	; 0xfffffc7c
    65d0:	1f000037 	svcne	0x00000037
    65d4:	00004590 	muleq	r0, r0, r5
    65d8:	00003e94 	muleq	r0, r4, lr
    65dc:	00003e8e 	andeq	r3, r0, lr, lsl #29
    65e0:	00459d20 	subeq	r9, r5, r0, lsr #26
    65e4:	003ec300 	eorseq	ip, lr, r0, lsl #6
    65e8:	003ec100 	eorseq	ip, lr, r0, lsl #2
    65ec:	3c210000 	stccc	0, cr0, [r1], #-0
    65f0:	00000045 	andeq	r0, r0, r5, asr #32
    65f4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6600:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
    6604:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6608:	3eda0000 	cdpcc	0, 13, cr0, cr10, cr0, {0}
    660c:	3ed60000 	cdpcc	0, 13, cr0, cr6, cr0, {0}
    6610:	4f1f0000 	svcmi	0x001f0000
    6614:	fc000045 	stc2	0, cr0, [r0], {69}	; 0x45
    6618:	fa00003e 	blx	6718 <_Min_Heap_Size+0x5f18>
    661c:	2000003e 	andcs	r0, r0, lr, lsr r0
    6620:	00004569 	andeq	r4, r0, r9, ror #10
    6624:	00003f11 	andeq	r3, r0, r1, lsl pc
    6628:	00003f0f 	andeq	r3, r0, pc, lsl #30
    662c:	001c0000 	andseq	r0, ip, r0
    6630:	00000000 	andeq	r0, r0, r0
    6634:	1b000000 	blne	663c <_Min_Heap_Size+0x5e3c>
    6638:	22000038 	andcs	r0, r0, #56	; 0x38
    663c:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    6640:	0505e701 	streq	lr, [r5, #-1793]	; 0xfffff8ff
    6644:	000000d2 	ldrdeq	r0, [r0], -r2
    6648:	007c9102 	rsbseq	r9, ip, r2, lsl #2
    664c:	0000001c 	andeq	r0, r0, ip, lsl r0
    6650:	00000000 	andeq	r0, r0, r0
    6654:	0038b300 	eorseq	fp, r8, r0, lsl #6
    6658:	61761d00 	cmnvs	r6, r0, lsl #26
    665c:	ec01006c 	stc	0, cr0, [r1], {108}	; 0x6c
    6660:	00c60705 	sbceq	r0, r6, r5, lsl #14
    6664:	3f260000 	svccc	0x00260000
    6668:	3f240000 	svccc	0x00240000
    666c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6670:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6680:	05ec0100 	strbeq	r0, [ip, #256]!	; 0x100
    6684:	00387307 	eorseq	r7, r8, r7, lsl #6
    6688:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    668c:	3f3f0000 	svccc	0x003f0000
    6690:	3f390000 	svccc	0x00390000
    6694:	9d200000 	stcls	0, cr0, [r0, #-0]
    6698:	6e000045 	cdpvs	0, 0, cr0, cr0, cr5, {2}
    669c:	6c00003f 	stcvs	0, cr0, [r0], {63}	; 0x3f
    66a0:	0000003f 	andeq	r0, r0, pc, lsr r0
    66a4:	00453c21 	subeq	r3, r5, r1, lsr #24
    66a8:	00000000 	andeq	r0, r0, r0
    66ac:	00000100 	andeq	r0, r0, r0, lsl #2
    66b0:	00000000 	andeq	r0, r0, r0
    66b4:	01000000 	mrseq	r0, (UNDEF: 0)
    66b8:	1f0705ec 	svcne	0x000705ec
    66bc:	0000455c 	andeq	r4, r0, ip, asr r5
    66c0:	00003f85 	andeq	r3, r0, r5, lsl #31
    66c4:	00003f81 	andeq	r3, r0, r1, lsl #31
    66c8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    66cc:	003fa700 	eorseq	sl, pc, r0, lsl #14
    66d0:	003fa500 	eorseq	sl, pc, r0, lsl #10
    66d4:	45692000 	strbmi	r2, [r9, #-0]!
    66d8:	3fbc0000 	svccc	0x00bc0000
    66dc:	3fba0000 	svccc	0x00ba0000
    66e0:	00000000 	andeq	r0, r0, r0
    66e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    66e8:	00000000 	andeq	r0, r0, r0
    66ec:	00394b00 	eorseq	r4, r9, r0, lsl #22
    66f0:	61761d00 	cmnvs	r6, r0, lsl #26
    66f4:	ee01006c 	cdp	0, 0, cr0, cr1, cr12, {3}
    66f8:	00c60505 	sbceq	r0, r6, r5, lsl #10
    66fc:	3fd10000 	svccc	0x00d10000
    6700:	3fcf0000 	svccc	0x00cf0000
    6704:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6708:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6718:	05ee0100 	strbeq	r0, [lr, #256]!	; 0x100
    671c:	00390b05 	eorseq	r0, r9, r5, lsl #22
    6720:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6724:	3fea0000 	svccc	0x00ea0000
    6728:	3fe40000 	svccc	0x00e40000
    672c:	9d200000 	stcls	0, cr0, [r0, #-0]
    6730:	19000045 	stmdbne	r0, {r0, r2, r6}
    6734:	17000040 	strne	r0, [r0, -r0, asr #32]
    6738:	00000040 	andeq	r0, r0, r0, asr #32
    673c:	00453c21 	subeq	r3, r5, r1, lsr #24
    6740:	00000000 	andeq	r0, r0, r0
    6744:	00000100 	andeq	r0, r0, r0, lsl #2
    6748:	00000000 	andeq	r0, r0, r0
    674c:	01000000 	mrseq	r0, (UNDEF: 0)
    6750:	1f0505ee 	svcne	0x000505ee
    6754:	0000455c 	andeq	r4, r0, ip, asr r5
    6758:	00004030 	andeq	r4, r0, r0, lsr r0
    675c:	0000402c 	andeq	r4, r0, ip, lsr #32
    6760:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6764:	00405200 	subeq	r5, r0, r0, lsl #4
    6768:	00405000 	subeq	r5, r0, r0
    676c:	45692000 	strbmi	r2, [r9, #-0]!
    6770:	40670000 	rsbmi	r0, r7, r0
    6774:	40650000 	rsbmi	r0, r5, r0
    6778:	00000000 	andeq	r0, r0, r0
    677c:	00000026 	andeq	r0, r0, r6, lsr #32
    6780:	00000000 	andeq	r0, r0, r0
    6784:	61761d00 	cmnvs	r6, r0, lsl #26
    6788:	f101006c 	setend	le
    678c:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6790:	407c0000 	rsbsmi	r0, ip, r0
    6794:	407a0000 	rsbsmi	r0, sl, r0
    6798:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    679c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    67ac:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    67b0:	00399f05 	eorseq	r9, r9, r5, lsl #30
    67b4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    67b8:	40950000 	addsmi	r0, r5, r0
    67bc:	408f0000 	addmi	r0, pc, r0
    67c0:	9d200000 	stcls	0, cr0, [r0, #-0]
    67c4:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    67c8:	c2000040 	andgt	r0, r0, #64	; 0x40
    67cc:	00000040 	andeq	r0, r0, r0, asr #32
    67d0:	00453c21 	subeq	r3, r5, r1, lsr #24
    67d4:	00000000 	andeq	r0, r0, r0
    67d8:	00000100 	andeq	r0, r0, r0, lsl #2
    67dc:	00000000 	andeq	r0, r0, r0
    67e0:	01000000 	mrseq	r0, (UNDEF: 0)
    67e4:	1f0505f1 	svcne	0x000505f1
    67e8:	0000455c 	andeq	r4, r0, ip, asr r5
    67ec:	000040db 	ldrdeq	r4, [r0], -fp
    67f0:	000040d7 	ldrdeq	r4, [r0], -r7
    67f4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    67f8:	0040fd00 	subeq	pc, r0, r0, lsl #26
    67fc:	0040fb00 	subeq	pc, r0, r0, lsl #22
    6800:	45692000 	strbmi	r2, [r9, #-0]!
    6804:	41120000 	tstmi	r2, r0
    6808:	41100000 	tstmi	r0, r0
    680c:	00000000 	andeq	r0, r0, r0
    6810:	a5012800 	strge	r2, [r1, #-2048]	; 0xfffff800
    6814:	01000010 	tsteq	r0, r0, lsl r0
    6818:	011305bc 			; <UNDEFINED> instruction: 0x011305bc
    681c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6828:	01007d02 	tsteq	r0, r2, lsl #26
    682c:	00003c86 	andeq	r3, r0, r6, lsl #25
    6830:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6834:	05bc0100 	ldreq	r0, [ip, #256]!	; 0x100
    6838:	00079639 	andeq	r9, r7, r9, lsr r6
    683c:	00412b00 	subeq	r2, r1, r0, lsl #22
    6840:	00412500 	subeq	r2, r1, r0, lsl #10
    6844:	159b1700 	ldrne	r1, [fp, #1792]	; 0x700
    6848:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    684c:	00c60c05 	sbceq	r0, r6, r5, lsl #24
    6850:	41610000 	cmnmi	r1, r0
    6854:	41570000 	cmpmi	r7, r0
    6858:	001c0000 	andseq	r0, ip, r0
    685c:	00000000 	andeq	r0, r0, r0
    6860:	c1000000 	mrsgt	r0, (UNDEF: 0)
    6864:	1d00003a 	stcne	0, cr0, [r0, #-232]	; 0xffffff18
    6868:	006c6176 	rsbeq	r6, ip, r6, ror r1
    686c:	0505c401 	streq	ip, [r5, #-1025]	; 0xfffffbff
    6870:	000000c6 	andeq	r0, r0, r6, asr #1
    6874:	000041bf 			; <UNDEFINED> instruction: 0x000041bf
    6878:	000041bd 			; <UNDEFINED> instruction: 0x000041bd
    687c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    688c:	01000000 	mrseq	r0, (UNDEF: 0)
    6890:	810505c4 	smlabthi	r5, r4, r5, r0
    6894:	1f00003a 	svcne	0x0000003a
    6898:	00004590 	muleq	r0, r0, r5
    689c:	000041d8 	ldrdeq	r4, [r0], -r8
    68a0:	000041d2 	ldrdeq	r4, [r0], -r2
    68a4:	00459d20 	subeq	r9, r5, r0, lsr #26
    68a8:	00420700 	subeq	r0, r2, r0, lsl #14
    68ac:	00420500 	subeq	r0, r2, r0, lsl #10
    68b0:	3c210000 	stccc	0, cr0, [r1], #-0
    68b4:	00000045 	andeq	r0, r0, r5, asr #32
    68b8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    68c4:	05c40100 	strbeq	r0, [r4, #256]	; 0x100
    68c8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    68cc:	421e0000 	andsmi	r0, lr, #0
    68d0:	421a0000 	andsmi	r0, sl, #0
    68d4:	4f1f0000 	svcmi	0x001f0000
    68d8:	40000045 	andmi	r0, r0, r5, asr #32
    68dc:	3e000042 	cdpcc	0, 0, cr0, cr0, cr2, {2}
    68e0:	20000042 	andcs	r0, r0, r2, asr #32
    68e4:	00004569 	andeq	r4, r0, r9, ror #10
    68e8:	00004255 	andeq	r4, r0, r5, asr r2
    68ec:	00004253 	andeq	r4, r0, r3, asr r2
    68f0:	001c0000 	andseq	r0, ip, r0
    68f4:	00000000 	andeq	r0, r0, r0
    68f8:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    68fc:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    6900:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6904:	0505cb01 	streq	ip, [r5, #-2817]	; 0xfffff4ff
    6908:	000000c6 	andeq	r0, r0, r6, asr #1
    690c:	0000426a 	andeq	r4, r0, sl, ror #4
    6910:	00004268 	andeq	r4, r0, r8, ror #4
    6914:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6924:	01000000 	mrseq	r0, (UNDEF: 0)
    6928:	190505cb 	stmdbne	r5, {r0, r1, r3, r6, r7, r8, sl}
    692c:	1f00003b 	svcne	0x0000003b
    6930:	00004590 	muleq	r0, r0, r5
    6934:	00004283 	andeq	r4, r0, r3, lsl #5
    6938:	0000427d 	andeq	r4, r0, sp, ror r2
    693c:	00459d20 	subeq	r9, r5, r0, lsr #26
    6940:	0042b200 	subeq	fp, r2, r0, lsl #4
    6944:	0042b000 	subeq	fp, r2, r0
    6948:	3c210000 	stccc	0, cr0, [r1], #-0
    694c:	00000045 	andeq	r0, r0, r5, asr #32
    6950:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    695c:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    6960:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6964:	42c90000 	sbcmi	r0, r9, #0
    6968:	42c50000 	sbcmi	r0, r5, #0
    696c:	4f1f0000 	svcmi	0x001f0000
    6970:	eb000045 	bl	6a8c <_Min_Heap_Size+0x628c>
    6974:	e9000042 	stmdb	r0, {r1, r6}
    6978:	20000042 	andcs	r0, r0, r2, asr #32
    697c:	00004569 	andeq	r4, r0, r9, ror #10
    6980:	00004300 	andeq	r4, r0, r0, lsl #6
    6984:	000042fe 	strdeq	r4, [r0], -lr
    6988:	001c0000 	andseq	r0, ip, r0
    698c:	00000000 	andeq	r0, r0, r0
    6990:	f1000000 	cps	#0
    6994:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    6998:	006c6176 	rsbeq	r6, ip, r6, ror r1
    699c:	0505cc01 	streq	ip, [r5, #-3073]	; 0xfffff3ff
    69a0:	000000c6 	andeq	r0, r0, r6, asr #1
    69a4:	00004315 	andeq	r4, r0, r5, lsl r3
    69a8:	00004313 	andeq	r4, r0, r3, lsl r3
    69ac:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    69bc:	01000000 	mrseq	r0, (UNDEF: 0)
    69c0:	b10505cc 	smlabtlt	r5, ip, r5, r0
    69c4:	1f00003b 	svcne	0x0000003b
    69c8:	00004590 	muleq	r0, r0, r5
    69cc:	0000432e 	andeq	r4, r0, lr, lsr #6
    69d0:	00004328 	andeq	r4, r0, r8, lsr #6
    69d4:	00459d20 	subeq	r9, r5, r0, lsr #26
    69d8:	00435d00 	subeq	r5, r3, r0, lsl #26
    69dc:	00435b00 	subeq	r5, r3, r0, lsl #22
    69e0:	3c210000 	stccc	0, cr0, [r1], #-0
    69e4:	00000045 	andeq	r0, r0, r5, asr #32
    69e8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    69f4:	05cc0100 	strbeq	r0, [ip, #256]	; 0x100
    69f8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    69fc:	43740000 	cmnmi	r4, #0
    6a00:	43700000 	cmnmi	r0, #0
    6a04:	4f1f0000 	svcmi	0x001f0000
    6a08:	96000045 	strls	r0, [r0], -r5, asr #32
    6a0c:	94000043 	strls	r0, [r0], #-67	; 0xffffffbd
    6a10:	20000043 	andcs	r0, r0, r3, asr #32
    6a14:	00004569 	andeq	r4, r0, r9, ror #10
    6a18:	000043ab 	andeq	r4, r0, fp, lsr #7
    6a1c:	000043a9 	andeq	r4, r0, r9, lsr #7
    6a20:	00260000 	eoreq	r0, r6, r0
    6a24:	00000000 	andeq	r0, r0, r0
    6a28:	1d000000 	stcne	0, cr0, [r0, #-0]
    6a2c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6a30:	0505cf01 	streq	ip, [r5, #-3841]	; 0xfffff0ff
    6a34:	000000c6 	andeq	r0, r0, r6, asr #1
    6a38:	000043c0 	andeq	r4, r0, r0, asr #7
    6a3c:	000043be 			; <UNDEFINED> instruction: 0x000043be
    6a40:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6a50:	01000000 	mrseq	r0, (UNDEF: 0)
    6a54:	450505cf 	strmi	r0, [r5, #-1487]	; 0xfffffa31
    6a58:	1f00003c 	svcne	0x0000003c
    6a5c:	00004590 	muleq	r0, r0, r5
    6a60:	000043d9 	ldrdeq	r4, [r0], -r9
    6a64:	000043d3 	ldrdeq	r4, [r0], -r3
    6a68:	00459d20 	subeq	r9, r5, r0, lsr #26
    6a6c:	00440800 	subeq	r0, r4, r0, lsl #16
    6a70:	00440600 	subeq	r0, r4, r0, lsl #12
    6a74:	3c210000 	stccc	0, cr0, [r1], #-0
    6a78:	00000045 	andeq	r0, r0, r5, asr #32
    6a7c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6a88:	05cf0100 	strbeq	r0, [pc, #256]	; 6b90 <_Min_Heap_Size+0x6390>
    6a8c:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6a90:	441f0000 	ldrmi	r0, [pc], #-0	; 6a98 <_Min_Heap_Size+0x6298>
    6a94:	441b0000 	ldrmi	r0, [fp], #-0
    6a98:	4f1f0000 	svcmi	0x001f0000
    6a9c:	41000045 	tstmi	r0, r5, asr #32
    6aa0:	3f000044 	svccc	0x00000044
    6aa4:	20000044 	andcs	r0, r0, r4, asr #32
    6aa8:	00004569 	andeq	r4, r0, r9, ror #10
    6aac:	00004456 	andeq	r4, r0, r6, asr r4
    6ab0:	00004454 	andeq	r4, r0, r4, asr r4
    6ab4:	27000000 	strcs	r0, [r0, -r0]
    6ab8:	0013d401 	andseq	sp, r3, r1, lsl #8
    6abc:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    6ac0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6acc:	44690000 	strbtmi	r0, [r9], #-0
    6ad0:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    6ad4:	1600003c 			; <UNDEFINED> instruction: 0x1600003c
    6ad8:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    6adc:	3c05a101 	stfccd	f2, [r5], {1}
    6ae0:	00000796 	muleq	r0, r6, r7
    6ae4:	00004499 	muleq	r0, r9, r4
    6ae8:	00004489 	andeq	r4, r0, r9, lsl #9
    6aec:	00115016 	andseq	r5, r1, r6, lsl r0
    6af0:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    6af4:	0006824c 	andeq	r8, r6, ip, asr #4
    6af8:	00450f00 	subeq	r0, r5, r0, lsl #30
    6afc:	00450500 	subeq	r0, r5, r0, lsl #10
    6b00:	26c61600 	strbcs	r1, [r6], r0, lsl #12
    6b04:	a1010000 	mrsge	r0, (UNDEF: 1)
    6b08:	00b05c05 	adcseq	r5, r0, r5, lsl #24
    6b0c:	455e0000 	ldrbmi	r0, [lr, #-0]
    6b10:	45540000 	ldrbmi	r0, [r4, #-0]
    6b14:	00230000 	eoreq	r0, r3, r0
    6b18:	ad000000 	stcge	0, cr0, [r0, #-0]
    6b1c:	1900000d 	stmdbne	r0, {r0, r2, r3}
    6b20:	f3035001 	vhadd.u8	d5, d3, d1
    6b24:	00005001 	andeq	r5, r0, r1
    6b28:	16760127 	ldrbtne	r0, [r6], -r7, lsr #2
    6b2c:	63010000 	movwvs	r0, #4096	; 0x1000
    6b30:	3a011305 	bcc	4b74c <_Min_Heap_Size+0x4af4c>
    6b34:	00000002 	andeq	r0, r0, r2
    6b38:	00000000 	andeq	r0, r0, r0
    6b3c:	a3000000 	movwge	r0, #0
    6b40:	01000045 	tsteq	r0, r5, asr #32
    6b44:	00003e11 	andeq	r3, r0, r1, lsl lr
    6b48:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6b4c:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    6b50:	0007963d 	andeq	r9, r7, sp, lsr r6
    6b54:	0045d300 	subeq	sp, r5, r0, lsl #6
    6b58:	0045c300 	subeq	ip, r5, r0, lsl #6
    6b5c:	11501600 	cmpne	r0, r0, lsl #12
    6b60:	63010000 	movwvs	r0, #4096	; 0x1000
    6b64:	067c5305 	ldrbteq	r5, [ip], -r5, lsl #6
    6b68:	46430000 	strbmi	r0, [r3], -r0
    6b6c:	46390000 	ldrtmi	r0, [r9], -r0
    6b70:	c6160000 	ldrgt	r0, [r6], -r0
    6b74:	01000026 	tsteq	r0, r6, lsr #32
    6b78:	b0630563 	rsblt	r0, r3, r3, ror #10
    6b7c:	92000000 	andls	r0, r0, #0
    6b80:	88000046 	stmdahi	r0, {r1, r2, r6}
    6b84:	1d000046 	stcne	0, cr0, [r0, #-280]	; 0xfffffee8
    6b88:	00706d74 	rsbseq	r6, r0, r4, ror sp
    6b8c:	13056501 	movwne	r6, #21761	; 0x5501
    6b90:	00003e11 	andeq	r3, r0, r1, lsl lr
    6b94:	000046d9 	ldrdeq	r4, [r0], -r9
    6b98:	000046d7 	ldrdeq	r4, [r0], -r7
    6b9c:	0001082d 	andeq	r0, r1, sp, lsr #16
    6ba0:	003dff00 	eorseq	pc, sp, r0, lsl #30
    6ba4:	61761d00 	cmnvs	r6, r0, lsl #26
    6ba8:	8b01006c 	blhi	46d60 <_Min_Heap_Size+0x46560>
    6bac:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6bb0:	46f30000 	ldrbtmi	r0, [r3], r0
    6bb4:	46f10000 	ldrbtmi	r0, [r1], r0
    6bb8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6bbc:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6bcc:	058b0100 	streq	r0, [fp, #256]	; 0x100
    6bd0:	003dbf05 	eorseq	fp, sp, r5, lsl #30
    6bd4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6bd8:	470c0000 	strmi	r0, [ip, -r0]
    6bdc:	47060000 	strmi	r0, [r6, -r0]
    6be0:	9d200000 	stcls	0, cr0, [r0, #-0]
    6be4:	3b000045 	blcc	6d00 <_Min_Heap_Size+0x6500>
    6be8:	39000047 	stmdbcc	r0, {r0, r1, r2, r6}
    6bec:	00000047 	andeq	r0, r0, r7, asr #32
    6bf0:	00453c21 	subeq	r3, r5, r1, lsr #24
    6bf4:	00000000 	andeq	r0, r0, r0
    6bf8:	00000100 	andeq	r0, r0, r0, lsl #2
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	01000000 	mrseq	r0, (UNDEF: 0)
    6c04:	1f05058b 	svcne	0x0005058b
    6c08:	0000455c 	andeq	r4, r0, ip, asr r5
    6c0c:	00004752 	andeq	r4, r0, r2, asr r7
    6c10:	0000474e 	andeq	r4, r0, lr, asr #14
    6c14:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6c18:	00477400 	subeq	r7, r7, r0, lsl #8
    6c1c:	00477200 	subeq	r7, r7, r0, lsl #4
    6c20:	45692000 	strbmi	r2, [r9, #-0]!
    6c24:	47890000 	strmi	r0, [r9, r0]
    6c28:	47870000 	strmi	r0, [r7, r0]
    6c2c:	00000000 	andeq	r0, r0, r0
    6c30:	00000023 	andeq	r0, r0, r3, lsr #32
    6c34:	0045e300 	subeq	lr, r5, r0, lsl #6
    6c38:	51011900 	tstpl	r1, r0, lsl #18
    6c3c:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    6c40:	04110000 	ldreq	r0, [r1], #-0
    6c44:	000000d7 	ldrdeq	r0, [r0], -r7
    6c48:	170b0127 	strne	r0, [fp, -r7, lsr #2]
    6c4c:	43010000 	movwmi	r0, #4096	; 0x1000
    6c50:	3a011305 	bcc	4b86c <_Min_Heap_Size+0x4b06c>
    6c54:	00000002 	andeq	r0, r0, r2
    6c58:	00000000 	andeq	r0, r0, r0
    6c5c:	9c000000 	stcls	0, cr0, [r0], {-0}
    6c60:	01000047 	tsteq	r0, r7, asr #32
    6c64:	00003e88 	andeq	r3, r0, r8, lsl #29
    6c68:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6c6c:	05430100 	strbeq	r0, [r3, #-256]	; 0xffffff00
    6c70:	0007963b 	andeq	r9, r7, fp, lsr r6
    6c74:	0047cc00 	subeq	ip, r7, r0, lsl #24
    6c78:	0047bc00 	subeq	fp, r7, r0, lsl #24
    6c7c:	11501600 	cmpne	r0, r0, lsl #12
    6c80:	43010000 	movwmi	r0, #4096	; 0x1000
    6c84:	06824b05 	streq	r4, [r2], r5, lsl #22
    6c88:	48420000 	stmdami	r2, {}^	; <UNPREDICTABLE>
    6c8c:	48380000 	ldmdami	r8!, {}	; <UNPREDICTABLE>
    6c90:	c6160000 	ldrgt	r0, [r6], -r0
    6c94:	01000026 	tsteq	r0, r6, lsr #32
    6c98:	b05b0543 	subslt	r0, fp, r3, asr #10
    6c9c:	91000000 	mrsls	r0, (UNDEF: 0)
    6ca0:	87000048 	strhi	r0, [r0, -r8, asr #32]
    6ca4:	23000048 	movwcs	r0, #72	; 0x48
    6ca8:	00000000 	andeq	r0, r0, r0
    6cac:	0000101f 	andeq	r1, r0, pc, lsl r0
    6cb0:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    6cb4:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    6cb8:	b7012800 	strlt	r2, [r1, -r0, lsl #16]
    6cbc:	01000015 	tsteq	r0, r5, lsl r0
    6cc0:	0113051c 	tsteq	r3, ip, lsl r5
    6cc4:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6cd0:	01007d02 	tsteq	r0, r2, lsl #26
    6cd4:	00003ee7 	andeq	r3, r0, r7, ror #29
    6cd8:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6cdc:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    6ce0:	0007963c 	andeq	r9, r7, ip, lsr r6
    6ce4:	0048e600 	subeq	lr, r8, r0, lsl #12
    6ce8:	0048d600 	subeq	sp, r8, r0, lsl #12
    6cec:	11501600 	cmpne	r0, r0, lsl #12
    6cf0:	1c010000 	stcne	0, cr0, [r1], {-0}
    6cf4:	067c5205 	ldrbteq	r5, [ip], -r5, lsl #4
    6cf8:	495a0000 	ldmdbmi	sl, {}^	; <UNPREDICTABLE>
    6cfc:	49520000 	ldmdbmi	r2, {}^	; <UNPREDICTABLE>
    6d00:	c6160000 	ldrgt	r0, [r6], -r0
    6d04:	01000026 	tsteq	r0, r6, lsr #32
    6d08:	b062051c 	rsblt	r0, r2, ip, lsl r5
    6d0c:	9a000000 	bls	6d14 <_Min_Heap_Size+0x6514>
    6d10:	92000049 	andls	r0, r0, #73	; 0x49
    6d14:	00000049 	andeq	r0, r0, r9, asr #32
    6d18:	15a60127 	strne	r0, [r6, #295]!	; 0x127
    6d1c:	c5010000 	strgt	r0, [r1, #-0]
    6d20:	3a011304 	bcc	4b938 <_Min_Heap_Size+0x4b138>
    6d24:	00000002 	andeq	r0, r0, r2
    6d28:	00000000 	andeq	r0, r0, r0
    6d2c:	d2000000 	andle	r0, r0, #0
    6d30:	01000049 	tsteq	r0, r9, asr #32
    6d34:	00003fcc 	andeq	r3, r0, ip, asr #31
    6d38:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6d3c:	04c50100 	strbeq	r0, [r5], #256	; 0x100
    6d40:	00079638 	andeq	r9, r7, r8, lsr r6
    6d44:	004a2600 	subeq	r2, sl, r0, lsl #12
    6d48:	004a1600 	subeq	r1, sl, r0, lsl #12
    6d4c:	11501600 	cmpne	r0, r0, lsl #12
    6d50:	c5010000 	strgt	r0, [r1, #-0]
    6d54:	06824804 	streq	r4, [r2], r4, lsl #16
    6d58:	4a970000 	bmi	fe5c6d60 <_estack+0xde5c5b28>
    6d5c:	4a890000 	bmi	fe246d64 <_estack+0xde245b2c>
    6d60:	c6160000 	ldrgt	r0, [r6], -r0
    6d64:	01000026 	tsteq	r0, r6, lsr #32
    6d68:	b05804c5 	subslt	r0, r8, r5, asr #9
    6d6c:	fc000000 	stc2	0, cr0, [r0], {-0}
    6d70:	f200004a 	vhadd.s8	q0, q0, q5
    6d74:	1600004a 	strne	r0, [r0], -sl, asr #32
    6d78:	00001434 	andeq	r1, r0, r4, lsr r4
    6d7c:	6704c501 	strvs	ip, [r4, -r1, lsl #10]
    6d80:	000000c6 	andeq	r0, r0, r6, asr #1
    6d84:	00004b45 	andeq	r4, r0, r5, asr #22
    6d88:	00004b41 	andeq	r4, r0, r1, asr #22
    6d8c:	00117c17 	andseq	r7, r1, r7, lsl ip
    6d90:	04c70100 	strbeq	r0, [r7], #256	; 0x100
    6d94:	0006820d 	andeq	r8, r6, sp, lsl #4
    6d98:	004b6500 	subeq	r6, fp, r0, lsl #10
    6d9c:	004b6300 	subeq	r6, fp, r0, lsl #6
    6da0:	11e61700 	mvnne	r1, r0, lsl #14
    6da4:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    6da8:	08cf0d04 	stmiaeq	pc, {r2, r8, sl, fp}^	; <UNPREDICTABLE>
    6dac:	4b7e0000 	blmi	1f86db4 <_Min_Heap_Size+0x1f865b4>
    6db0:	4b780000 	blmi	1e06db8 <_Min_Heap_Size+0x1e065b8>
    6db4:	49170000 	ldmdbmi	r7, {}	; <UNPREDICTABLE>
    6db8:	01000015 	tsteq	r0, r5, lsl r0
    6dbc:	c60c04c9 	strgt	r0, [ip], -r9, asr #9
    6dc0:	b3000000 	movwlt	r0, #0
    6dc4:	a900004b 	stmdbge	r0, {r0, r1, r3, r6}
    6dc8:	1a00004b 	bne	6efc <_Min_Heap_Size+0x66fc>
    6dcc:	00000000 	andeq	r0, r0, r0
    6dd0:	000045f2 	strdeq	r4, [r0], -r2
    6dd4:	00000023 	andeq	r0, r0, r3, lsr #32
    6dd8:	00107800 	andseq	r7, r0, r0, lsl #16
    6ddc:	50011900 	andpl	r1, r1, r0, lsl #18
    6de0:	19007402 	stmdbne	r0, {r1, sl, ip, sp, lr}
    6de4:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    6de8:	52011920 	andpl	r1, r1, #32, 18	; 0x80000
    6dec:	01193001 	tsteq	r9, r1
    6df0:	00770253 	rsbseq	r0, r7, r3, asr r2
    6df4:	007d0219 	rsbseq	r0, sp, r9, lsl r2
    6df8:	00007602 	andeq	r7, r0, r2, lsl #12
    6dfc:	19012700 	stmdbne	r1, {r8, r9, sl, sp}
    6e00:	01000001 	tsteq	r0, r1
    6e04:	0113046f 	tsteq	r3, pc, ror #8
    6e08:	0000023a 	andeq	r0, r0, sl, lsr r2
    6e0c:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
    6e10:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
    6e14:	00004bf5 	strdeq	r4, [r0], -r5
    6e18:	0040dd01 	subeq	sp, r0, r1, lsl #26
    6e1c:	14ff1600 	ldrbtne	r1, [pc], #1536	; 6e24 <_Min_Heap_Size+0x6624>
    6e20:	6f010000 	svcvs	0x00010000
    6e24:	07963904 	ldreq	r3, [r6, r4, lsl #18]
    6e28:	4c490000 	marmi	acc0, r0, r9
    6e2c:	4c390000 	ldcmi	0, cr0, [r9], #-0
    6e30:	50160000 	andspl	r0, r6, r0
    6e34:	01000011 	tsteq	r0, r1, lsl r0
    6e38:	7c4f046f 	cfstrdvc	mvd0, [pc], {111}	; 0x6f
    6e3c:	be000006 	cdplt	0, 0, cr0, cr0, cr6, {0}
    6e40:	ac00004c 	stcge	0, cr0, [r0], {76}	; 0x4c
    6e44:	1600004c 	strne	r0, [r0], -ip, asr #32
    6e48:	000026c6 	andeq	r2, r0, r6, asr #13
    6e4c:	5f046f01 	svcpl	0x00046f01
    6e50:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6e54:	00004d3c 	andeq	r4, r0, ip, lsr sp
    6e58:	00004d32 	andeq	r4, r0, r2, lsr sp
    6e5c:	00143416 	andseq	r3, r4, r6, lsl r4
    6e60:	046f0100 	strbteq	r0, [pc], #-256	; 6e68 <_Min_Heap_Size+0x6668>
    6e64:	0000c66e 	andeq	ip, r0, lr, ror #12
    6e68:	004d8500 	subeq	r8, sp, r0, lsl #10
    6e6c:	004d8100 	subeq	r8, sp, r0, lsl #2
    6e70:	117c1700 	cmnne	ip, r0, lsl #14
    6e74:	71010000 	mrsvc	r0, (UNDEF: 1)
    6e78:	067c1304 	ldrbteq	r1, [ip], -r4, lsl #6
    6e7c:	4dab0000 	stcmi	0, cr0, [fp]
    6e80:	4da30000 	stcmi	0, cr0, [r3]
    6e84:	e6170000 	ldr	r0, [r7], -r0
    6e88:	01000011 	tsteq	r0, r1, lsl r0
    6e8c:	64130472 	ldrvs	r0, [r3], #-1138	; 0xfffffb8e
    6e90:	e9000009 	stmdb	r0, {r0, r3}
    6e94:	e100004d 	crc32b	r0, r0, sp
    6e98:	1700004d 	strne	r0, [r0, -sp, asr #32]
    6e9c:	00001549 	andeq	r1, r0, r9, asr #10
    6ea0:	0c047301 	stceq	3, cr7, [r4], {1}
    6ea4:	000000c6 	andeq	r0, r0, r6, asr #1
    6ea8:	00004e2d 	andeq	r4, r0, sp, lsr #28
    6eac:	00004e1f 	andeq	r4, r0, pc, lsl lr
    6eb0:	000cdc1a 	andeq	sp, ip, sl, lsl ip
    6eb4:	0045f208 	subeq	pc, r5, r8, lsl #4
    6eb8:	0d321800 	ldceq	8, cr1, [r2, #-0]
    6ebc:	10780800 	rsbsne	r0, r8, r0, lsl #16
    6ec0:	40b40000 	adcsmi	r0, r4, r0
    6ec4:	01190000 	tsteq	r9, r0
    6ec8:	00740250 	rsbseq	r0, r4, r0, asr r2
    6ecc:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
    6ed0:	01198008 	tsteq	r9, r8
    6ed4:	19300152 	ldmdbne	r0!, {r1, r4, r6, r8}
    6ed8:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6edc:	7d021900 	vstrvc.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    6ee0:	00760200 	rsbseq	r0, r6, r0, lsl #4
    6ee4:	0d582300 	ldcleq	3, cr2, [r8, #-0]
    6ee8:	10780800 	rsbsne	r0, r8, r0, lsl #16
    6eec:	01190000 	tsteq	r9, r0
    6ef0:	00740250 	rsbseq	r0, r4, r0, asr r2
    6ef4:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
    6ef8:	01194008 	tsteq	r9, r8
    6efc:	19300152 	ldmdbne	r0!, {r1, r4, r6, r8}
    6f00:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6f04:	7d021900 	vstrvc.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    6f08:	00760200 	rsbseq	r0, r6, r0, lsl #4
    6f0c:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    6f10:	00000b38 	andeq	r0, r0, r8, lsr fp
    6f14:	0d02da01 	vstreq	s26, [r2, #-4]
    6f18:	00000001 	andeq	r0, r0, r1
    6f1c:	00000000 	andeq	r0, r0, r0
    6f20:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    6f24:	00410801 	subeq	r0, r1, r1, lsl #16
    6f28:	14ff2900 	ldrbtne	r2, [pc], #2304	; 6f30 <_Min_Heap_Size+0x6730>
    6f2c:	da010000 	ble	46f34 <_Min_Heap_Size+0x46734>
    6f30:	07963402 	ldreq	r3, [r6, r2, lsl #8]
    6f34:	50010000 	andpl	r0, r1, r0
    6f38:	09012a00 	stmdbeq	r1, {r9, fp, sp}
    6f3c:	0100000b 	tsteq	r0, fp
    6f40:	010d02cb 	smlabteq	sp, fp, r2, r0
	...
    6f4c:	01007d02 	tsteq	r0, r2, lsl #26
    6f50:	00004133 	andeq	r4, r0, r3, lsr r1
    6f54:	0014ff29 	andseq	pc, r4, r9, lsr #30
    6f58:	02cb0100 	sbceq	r0, fp, #0, 2
    6f5c:	00079632 	andeq	r9, r7, r2, lsr r6
    6f60:	00500100 	subseq	r0, r0, r0, lsl #2
    6f64:	122c0127 	eorne	r0, ip, #-1073741815	; 0xc0000009
    6f68:	9d010000 	stcls	0, cr0, [r1, #-0]
    6f6c:	3a011302 	bcc	4bb7c <_Min_Heap_Size+0x4b37c>
    6f70:	00000002 	andeq	r0, r0, r2
    6f74:	00000000 	andeq	r0, r0, r0
    6f78:	85000000 	strhi	r0, [r0, #-0]
    6f7c:	0100004e 	tsteq	r0, lr, asr #32
    6f80:	00004197 	muleq	r0, r7, r1
    6f84:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6f88:	029d0100 	addseq	r0, sp, #0, 2
    6f8c:	00079637 	andeq	r9, r7, r7, lsr r6
    6f90:	004eb900 	subeq	fp, lr, r0, lsl #18
    6f94:	004eb100 	subeq	fp, lr, r0, lsl #2
    6f98:	00001800 	andeq	r1, r0, r0, lsl #16
    6f9c:	45ab0000 	strmi	r0, [fp, #0]!
    6fa0:	41860000 	orrmi	r0, r6, r0
    6fa4:	01190000 	tsteq	r9, r0
    6fa8:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    6fac:	1908002c 	stmdbne	r8, {r2, r3, r5}
    6fb0:	0a035101 	beq	db3bc <_Min_Heap_Size+0xdabbc>
    6fb4:	230002a6 	movwcs	r0, #678	; 0x2a6
    6fb8:	00000000 	andeq	r0, r0, r0
    6fbc:	000040dd 	ldrdeq	r4, [r0], -sp
    6fc0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6fc4:	00000074 	andeq	r0, r0, r4, ror r0
    6fc8:	14080127 	strne	r0, [r8], #-295	; 0xfffffed9
    6fcc:	4f010000 	svcmi	0x00010000
    6fd0:	3a011302 	bcc	4bbe0 <_Min_Heap_Size+0x4b3e0>
    6fd4:	00000002 	andeq	r0, r0, r2
    6fd8:	00000000 	andeq	r0, r0, r0
    6fdc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    6fe0:	0100004e 	tsteq	r0, lr, asr #32
    6fe4:	000042b1 			; <UNDEFINED> instruction: 0x000042b1
    6fe8:	0014ff16 	andseq	pc, r4, r6, lsl pc	; <UNPREDICTABLE>
    6fec:	024f0100 	subeq	r0, pc, #0, 2
    6ff0:	0007963f 	andeq	r9, r7, pc, lsr r6
    6ff4:	004f2400 	subeq	r2, pc, r0, lsl #8
    6ff8:	004f1c00 	subeq	r1, pc, r0, lsl #24
    6ffc:	1cd41600 	ldclne	6, cr1, [r4], {0}
    7000:	4f010000 	svcmi	0x00010000
    7004:	009f4e02 	addseq	r4, pc, r2, lsl #28
    7008:	4f610000 	svcmi	0x00610000
    700c:	4f5b0000 	svcmi	0x005b0000
    7010:	3c160000 	ldccc	0, cr0, [r6], {-0}
    7014:	01000012 	tsteq	r0, r2, lsl r0
    7018:	c660024f 	strbtgt	r0, [r0], -pc, asr #4
    701c:	97000000 	strls	r0, [r0, -r0]
    7020:	8d00004f 	stchi	0, cr0, [r0, #-316]	; 0xfffffec4
    7024:	1800004f 	stmdane	r0, {r0, r1, r2, r3, r6}
    7028:	00000000 	andeq	r0, r0, r0
    702c:	000045ab 	andeq	r4, r0, fp, lsr #11
    7030:	00004214 	andeq	r4, r0, r4, lsl r2
    7034:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7038:	002ca403 	eoreq	sl, ip, r3, lsl #8
    703c:	51011908 	tstpl	r1, r8, lsl #18
    7040:	02580a03 	subseq	r0, r8, #12288	; 0x3000
    7044:	00001800 	andeq	r1, r0, r0, lsl #16
    7048:	069f0000 	ldreq	r0, [pc], r0
    704c:	42280000 	eormi	r0, r8, #0
    7050:	01190000 	tsteq	r9, r0
    7054:	00740250 	rsbseq	r0, r4, r0, asr r2
    7058:	00001800 	andeq	r1, r0, r0, lsl #16
    705c:	45ab0000 	strmi	r0, [fp, #0]!
    7060:	42460000 	submi	r0, r6, #0
    7064:	01190000 	tsteq	r9, r0
    7068:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    706c:	1908002c 	stmdbne	r8, {r2, r3, r5}
    7070:	0a035101 	beq	db47c <_Min_Heap_Size+0xdac7c>
    7074:	1800025b 	stmdane	r0, {r0, r1, r3, r4, r6, r9}
    7078:	00000000 	andeq	r0, r0, r0
    707c:	000045ab 	andeq	r4, r0, fp, lsr #11
    7080:	00004264 	andeq	r4, r0, r4, ror #4
    7084:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7088:	002ca403 	eoreq	sl, ip, r3, lsl #8
    708c:	51011908 	tstpl	r1, r8, lsl #18
    7090:	025c0a03 	subseq	r0, ip, #12288	; 0x3000
    7094:	00001800 	andeq	r1, r0, r0, lsl #16
    7098:	45ab0000 	strmi	r0, [fp, #0]!
    709c:	42820000 	addmi	r0, r2, #0
    70a0:	01190000 	tsteq	r9, r0
    70a4:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    70a8:	1908002c 	stmdbne	r8, {r2, r3, r5}
    70ac:	0a035101 	beq	db4b8 <_Min_Heap_Size+0xdacb8>
    70b0:	1800025d 	stmdane	r0, {r0, r2, r3, r4, r6, r9}
    70b4:	00000000 	andeq	r0, r0, r0
    70b8:	000045ab 	andeq	r4, r0, fp, lsr #11
    70bc:	000042a0 	andeq	r4, r0, r0, lsr #5
    70c0:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    70c4:	002ca403 	eoreq	sl, ip, r3, lsl #8
    70c8:	51011908 	tstpl	r1, r8, lsl #18
    70cc:	025e0a03 	subseq	r0, lr, #12288	; 0x3000
    70d0:	00002300 	andeq	r2, r0, r0, lsl #6
    70d4:	41080000 	mrsmi	r0, (UNDEF: 8)
    70d8:	01190000 	tsteq	r9, r0
    70dc:	00740250 	rsbseq	r0, r4, r0, asr r2
    70e0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    70e4:	0000171f 	andeq	r1, r0, pc, lsl r7
    70e8:	1301fd01 	movwne	pc, #7425	; 0x1d01	; <UNPREDICTABLE>
    70ec:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    70f8:	004fd900 	subeq	sp, pc, r0, lsl #18
    70fc:	43980100 	orrsmi	r0, r8, #0, 2
    7100:	ff160000 			; <UNDEFINED> instruction: 0xff160000
    7104:	01000014 	tsteq	r0, r4, lsl r0
    7108:	963401fd 			; <UNDEFINED> instruction: 0x963401fd
    710c:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    7110:	05000050 	streq	r0, [r0, #-80]	; 0xffffffb0
    7114:	16000050 			; <UNDEFINED> instruction: 0x16000050
    7118:	00001249 	andeq	r1, r0, r9, asr #4
    711c:	4401fd01 	strmi	pc, [r1], #-3329	; 0xfffff2ff
    7120:	000000c6 	andeq	r0, r0, r6, asr #1
    7124:	0000504e 	andeq	r5, r0, lr, asr #32
    7128:	00005044 	andeq	r5, r0, r4, asr #32
    712c:	00000018 	andeq	r0, r0, r8, lsl r0
    7130:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7134:	00431900 	subeq	r1, r3, r0, lsl #18
    7138:	50011900 	andpl	r1, r1, r0, lsl #18
    713c:	2ca40305 	stccs	3, cr0, [r4], #20
    7140:	01190800 	tsteq	r9, r0, lsl #16
    7144:	060a0351 			; <UNDEFINED> instruction: 0x060a0351
    7148:	00180002 	andseq	r0, r8, r2
    714c:	9f000000 	svcls	0x00000000
    7150:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    7154:	19000043 	stmdbne	r0, {r0, r1, r6}
    7158:	74025001 	strvc	r5, [r2], #-1
    715c:	00180000 	andseq	r0, r8, r0
    7160:	ab000000 	blge	7168 <_Min_Heap_Size+0x6968>
    7164:	4b000045 	blmi	7280 <_Min_Heap_Size+0x6a80>
    7168:	19000043 	stmdbne	r0, {r0, r1, r6}
    716c:	03055001 	movweq	r5, #20481	; 0x5001
    7170:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7174:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7178:	0002090a 	andeq	r0, r2, sl, lsl #18
    717c:	00000018 	andeq	r0, r0, r8, lsl r0
    7180:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7184:	00436900 	subeq	r6, r3, r0, lsl #18
    7188:	50011900 	andpl	r1, r1, r0, lsl #18
    718c:	2ca40305 	stccs	3, cr0, [r4], #20
    7190:	01190800 	tsteq	r9, r0, lsl #16
    7194:	0a0a0351 	beq	287ee0 <_Min_Heap_Size+0x2876e0>
    7198:	00180002 	andseq	r0, r8, r2
    719c:	ab000000 	blge	71a4 <_Min_Heap_Size+0x69a4>
    71a0:	87000045 	strhi	r0, [r0, -r5, asr #32]
    71a4:	19000043 	stmdbne	r0, {r0, r1, r6}
    71a8:	03055001 	movweq	r5, #20481	; 0x5001
    71ac:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    71b0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    71b4:	00020b0a 	andeq	r0, r2, sl, lsl #22
    71b8:	00000023 	andeq	r0, r0, r3, lsr #32
    71bc:	00410800 	subeq	r0, r1, r0, lsl #16
    71c0:	50011900 	andpl	r1, r1, r0, lsl #18
    71c4:	00007402 	andeq	r7, r0, r2, lsl #8
    71c8:	18012700 	stmdane	r1, {r8, r9, sl, sp}
    71cc:	01000012 	tsteq	r0, r2, lsl r0
    71d0:	011301b3 			; <UNDEFINED> instruction: 0x011301b3
    71d4:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    71e0:	00005090 	muleq	r0, r0, r0
    71e4:	00444c01 	subeq	r4, r4, r1, lsl #24
    71e8:	14ff1600 	ldrbtne	r1, [pc], #1536	; 71f0 <_Min_Heap_Size+0x69f0>
    71ec:	b3010000 	movwlt	r0, #4096	; 0x1000
    71f0:	07963b01 	ldreq	r3, [r6, r1, lsl #22]
    71f4:	50c40000 	sbcpl	r0, r4, r0
    71f8:	50bc0000 	adcspl	r0, ip, r0
    71fc:	00180000 	andseq	r0, r8, r0
    7200:	ab000000 	blge	7208 <_Min_Heap_Size+0x6a08>
    7204:	eb000045 	bl	7320 <_Min_Heap_Size+0x6b20>
    7208:	19000043 	stmdbne	r0, {r0, r1, r6}
    720c:	03055001 	movweq	r5, #20481	; 0x5001
    7210:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7214:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7218:	0001bc0a 	andeq	fp, r1, sl, lsl #24
    721c:	00000018 	andeq	r0, r0, r8, lsl r0
    7220:	00069f00 	andeq	r9, r6, r0, lsl #30
    7224:	0043ff00 	subeq	pc, r3, r0, lsl #30
    7228:	50011900 	andpl	r1, r1, r0, lsl #18
    722c:	00007402 	andeq	r7, r0, r2, lsl #8
    7230:	00000018 	andeq	r0, r0, r8, lsl r0
    7234:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7238:	00441d00 	subeq	r1, r4, r0, lsl #26
    723c:	50011900 	andpl	r1, r1, r0, lsl #18
    7240:	2ca40305 	stccs	3, cr0, [r4], #20
    7244:	01190800 	tsteq	r9, r0, lsl #16
    7248:	bd0a0351 	stclt	3, cr0, [sl, #-324]	; 0xfffffebc
    724c:	00180001 	andseq	r0, r8, r1
    7250:	ab000000 	blge	7258 <_Min_Heap_Size+0x6a58>
    7254:	3b000045 	blcc	7370 <_Min_Heap_Size+0x6b70>
    7258:	19000044 	stmdbne	r0, {r2, r6}
    725c:	03055001 	movweq	r5, #20481	; 0x5001
    7260:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7264:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7268:	0001be0a 	andeq	fp, r1, sl, lsl #28
    726c:	00000023 	andeq	r0, r0, r3, lsr #32
    7270:	00410800 	subeq	r0, r1, r0, lsl #16
    7274:	50011900 	andpl	r1, r1, r0, lsl #18
    7278:	00007402 	andeq	r7, r0, r2, lsl #8
    727c:	45012700 	strmi	r2, [r1, #-1792]	; 0xfffff900
    7280:	0100000c 	tsteq	r0, ip
    7284:	01130165 	tsteq	r3, r5, ror #2
    7288:	0000023a 	andeq	r0, r0, sl, lsr r2
    728c:	08000b80 	stmdaeq	r0, {r7, r8, r9, fp}
    7290:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
    7294:	000050fb 	strdeq	r5, [r0], -fp
    7298:	00453c01 	subeq	r3, r5, r1, lsl #24
    729c:	14ff1600 	ldrbtne	r1, [pc], #1536	; 72a4 <_Min_Heap_Size+0x6aa4>
    72a0:	65010000 	strvs	r0, [r1, #-0]
    72a4:	07963501 	ldreq	r3, [r6, r1, lsl #10]
    72a8:	51330000 	teqpl	r3, r0
    72ac:	51270000 			; <UNDEFINED> instruction: 0x51270000
    72b0:	ba180000 	blt	6072b8 <_Min_Heap_Size+0x606ab8>
    72b4:	ab08000b 	blge	2072e8 <_Min_Heap_Size+0x206ae8>
    72b8:	9f000045 	svcls	0x00000045
    72bc:	19000044 	stmdbne	r0, {r2, r6}
    72c0:	03055001 	movweq	r5, #20481	; 0x5001
    72c4:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    72c8:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    72cc:	0001730a 	andeq	r7, r1, sl, lsl #6
    72d0:	000c0218 	andeq	r0, ip, r8, lsl r2
    72d4:	00069f08 	andeq	r9, r6, r8, lsl #30
    72d8:	0044b300 	subeq	fp, r4, r0, lsl #6
    72dc:	50011900 	andpl	r1, r1, r0, lsl #18
    72e0:	00007402 	andeq	r7, r0, r2, lsl #8
    72e4:	000c3c18 	andeq	r3, ip, r8, lsl ip
    72e8:	0045ab08 	subeq	sl, r5, r8, lsl #22
    72ec:	0044d100 	subeq	sp, r4, r0, lsl #2
    72f0:	50011900 	andpl	r1, r1, r0, lsl #18
    72f4:	2ca40305 	stccs	3, cr0, [r4], #20
    72f8:	01190800 	tsteq	r9, r0, lsl #16
    72fc:	740a0351 	strvc	r0, [sl], #-849	; 0xfffffcaf
    7300:	78180001 	ldmdavc	r8, {r0}
    7304:	ab08000c 	blge	20733c <_Min_Heap_Size+0x206b3c>
    7308:	ef000045 	svc	0x00000045
    730c:	19000044 	stmdbne	r0, {r2, r6}
    7310:	03055001 	movweq	r5, #20481	; 0x5001
    7314:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7318:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    731c:	0001780a 	andeq	r7, r1, sl, lsl #16
    7320:	000c8418 	andeq	r8, ip, r8, lsl r4
    7324:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7328:	00450d00 	subeq	r0, r5, r0, lsl #26
    732c:	50011900 	andpl	r1, r1, r0, lsl #18
    7330:	2ca40305 	stccs	3, cr0, [r4], #20
    7334:	01190800 	tsteq	r9, r0, lsl #16
    7338:	7a0a0351 	bvc	288084 <_Min_Heap_Size+0x287884>
    733c:	90180001 	andsls	r0, r8, r1
    7340:	ab08000c 	blge	207378 <_Min_Heap_Size+0x206b78>
    7344:	2b000045 	blcs	7460 <_Min_Heap_Size+0x6c60>
    7348:	19000045 	stmdbne	r0, {r0, r2, r6}
    734c:	03055001 	movweq	r5, #20481	; 0x5001
    7350:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7354:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7358:	00017b0a 	andeq	r7, r1, sl, lsl #22
    735c:	000c9c23 	andeq	r9, ip, r3, lsr #24
    7360:	00410808 	subeq	r0, r1, r8, lsl #16
    7364:	50011900 	andpl	r1, r1, r0, lsl #18
    7368:	00007402 	andeq	r7, r0, r2, lsl #8
    736c:	12ce2e00 	sbcne	r2, lr, #0, 28
    7370:	0f020000 	svceq	0x00020000
    7374:	c6011f02 	strgt	r1, [r1], -r2, lsl #30
    7378:	03000000 	movweq	r0, #0
    737c:	00004577 	andeq	r4, r0, r7, ror r5
    7380:	001f162f 	andseq	r1, pc, pc, lsr #12
    7384:	020f0200 	andeq	r0, pc, #0, 4
    7388:	0000c631 	andeq	ip, r0, r1, lsr r6
    738c:	00c52f00 	sbceq	r2, r5, r0, lsl #30
    7390:	0f020000 	svceq	0x00020000
    7394:	45774b02 	ldrbmi	r4, [r7, #-2818]!	; 0xfffff4fe
    7398:	2c300000 	ldccs	0, cr0, [r0], #-0
    739c:	02000017 	andeq	r0, r0, #23
    73a0:	c60d0211 			; <UNDEFINED> instruction: 0xc60d0211
    73a4:	00000000 	andeq	r0, r0, r0
    73a8:	00d20411 	sbcseq	r0, r2, r1, lsl r4
    73ac:	5f2e0000 	svcpl	0x002e0000
    73b0:	02000014 	andeq	r0, r0, #20
    73b4:	011f01dc 			; <UNDEFINED> instruction: 0x011f01dc
    73b8:	000000c6 	andeq	r0, r0, r6, asr #1
    73bc:	0045ab03 	subeq	sl, r5, r3, lsl #22
    73c0:	00c52f00 	sbceq	r2, r5, r0, lsl #30
    73c4:	dc020000 	stcle	0, cr0, [r2], {-0}
    73c8:	45773b01 	ldrbmi	r3, [r7, #-2817]!	; 0xfffff4ff
    73cc:	2c300000 	ldccs	0, cr0, [r0], #-0
    73d0:	02000017 	andeq	r0, r0, #23
    73d4:	c60e01de 			; <UNDEFINED> instruction: 0xc60e01de
    73d8:	00000000 	andeq	r0, r0, r0
    73dc:	0e010131 	mcreq	1, 0, r0, cr1, cr1, {1}
    73e0:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    73e4:	0a00000a 	beq	7414 <_Min_Heap_Size+0x6c14>
    73e8:	310801e6 	smlattcc	r8, r6, r1, r0
    73ec:	10760101 	rsbsne	r0, r6, r1, lsl #2
    73f0:	10760000 	rsbsne	r0, r6, r0
    73f4:	ea0b0000 	b	2c73fc <_Min_Heap_Size+0x2c6bfc>
    73f8:	01310a04 	teqeq	r1, r4, lsl #20
    73fc:	00150501 	andseq	r0, r5, r1, lsl #10
    7400:	00150500 	andseq	r0, r5, r0, lsl #10
    7404:	04eb0b00 	strbteq	r0, [fp], #2816	; 0xb00
    7408:	0101320a 	tsteq	r1, sl, lsl #4
    740c:	000014bd 			; <UNDEFINED> instruction: 0x000014bd
    7410:	000014bd 			; <UNDEFINED> instruction: 0x000014bd
    7414:	ae010131 	mcrge	1, 0, r0, cr1, cr1, {1}
    7418:	ae000011 	mcrge	0, 0, r0, cr0, cr1, {0}
    741c:	08000011 	stmdaeq	r0, {r0, r4}
    7420:	33130297 	tstcc	r3, #1879048201	; 0x70000009
    7424:	13a30101 			; <UNDEFINED> instruction: 0x13a30101
    7428:	13a30000 			; <UNDEFINED> instruction: 0x13a30000
    742c:	ea0c0000 	b	307434 <_Min_Heap_Size+0x306c34>
    7430:	0101310a 	tsteq	r1, sl, lsl #2
    7434:	00001310 	andeq	r1, r0, r0, lsl r3
    7438:	00001310 	andeq	r1, r0, r0, lsl r3
    743c:	13029808 	movwne	r9, #10248	; 0x2808
    7440:	d4010131 	strle	r0, [r1], #-305	; 0xfffffecf
    7444:	d4000010 	strle	r0, [r0], #-16
    7448:	08000010 	stmdaeq	r0, {r4}
    744c:	31130299 			; <UNDEFINED> instruction: 0x31130299
    7450:	16650101 	strbtne	r0, [r5], -r1, lsl #2
    7454:	16650000 	strbtne	r0, [r5], -r0
    7458:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    745c:	7f001602 	svcvc	0x00001602
    7460:	0200000e 	andeq	r0, r0, #14
    7464:	000af700 	andeq	pc, sl, r0, lsl #14
    7468:	88010400 	stmdahi	r1, {sl}
    746c:	0c000005 	stceq	0, cr0, [r0], {5}
    7470:	00001896 	muleq	r0, r6, r8
    7474:	00000895 	muleq	r0, r5, r8
    7478:	00000330 	andeq	r0, r0, r0, lsr r3
	...
    7484:	000053f1 	strdeq	r5, [r0], -r1
    7488:	76060102 	strvc	r0, [r6], -r2, lsl #2
    748c:	03000005 	movweq	r0, #5
    7490:	00000066 	andeq	r0, r0, r6, rrx
    7494:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    7498:	02000000 	andeq	r0, r0, #0
    749c:	05740801 	ldrbeq	r0, [r4, #-2049]!	; 0xfffff7ff
    74a0:	02020000 	andeq	r0, r2, #0
    74a4:	0003fd05 	andeq	pc, r3, r5, lsl #26
    74a8:	06f50300 	ldrbteq	r0, [r5], r0, lsl #6
    74ac:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    74b0:	00005619 	andeq	r5, r0, r9, lsl r6
    74b4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    74b8:	0000078f 	andeq	r0, r0, pc, lsl #15
    74bc:	ec050402 	cfstrs	mvf0, [r5], {2}
    74c0:	03000002 	movweq	r0, #2
    74c4:	000002c2 	andeq	r0, r0, r2, asr #5
    74c8:	70194f02 	andsvc	r4, r9, r2, lsl #30
    74cc:	02000000 	andeq	r0, r0, #0
    74d0:	00b30704 	adcseq	r0, r3, r4, lsl #14
    74d4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    74d8:	0002e705 	andeq	lr, r2, r5, lsl #14
    74dc:	14b20300 	ldrtne	r0, [r2], #768	; 0x300
    74e0:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
    74e4:	00008a19 	andeq	r8, r0, r9, lsl sl
    74e8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    74ec:	000000ae 	andeq	r0, r0, lr, lsr #1
    74f0:	69050404 	stmdbvs	r5, {r2, sl}
    74f4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    74f8:	00b80704 	adcseq	r0, r8, r4, lsl #14
    74fc:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    7500:	03000000 	movweq	r0, #0
    7504:	00301318 	eorseq	r1, r0, r8, lsl r3
    7508:	9f050000 	svcls	0x00050000
    750c:	03000000 	movweq	r0, #0
    7510:	000006f7 	strdeq	r0, [r0], -r7
    7514:	4a142403 	bmi	510528 <_Min_Heap_Size+0x50fd28>
    7518:	03000000 	movweq	r0, #0
    751c:	000002c4 	andeq	r0, r0, r4, asr #5
    7520:	64143003 	ldrvs	r3, [r4], #-3
    7524:	06000000 	streq	r0, [r0], -r0
    7528:	000000bc 	strheq	r0, [r0], -ip
    752c:	0014b403 	andseq	fp, r4, r3, lsl #8
    7530:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
    7534:	0000007e 	andeq	r0, r0, lr, ror r0
    7538:	0000bc07 	andeq	fp, r0, r7, lsl #24
    753c:	0000e900 	andeq	lr, r0, r0, lsl #18
    7540:	00980800 	addseq	r0, r8, r0, lsl #16
    7544:	00010000 	andeq	r0, r1, r0
    7548:	0017fe09 	andseq	pc, r7, r9, lsl #28
    754c:	11390400 	teqne	r9, r0, lsl #8
    7550:	000000bc 	strheq	r0, [r0], -ip
    7554:	ab070101 	blge	1c7960 <_Min_Heap_Size+0x1c7160>
    7558:	07000000 	streq	r0, [r0, -r0]
    755c:	08000001 	stmdaeq	r0, {r0}
    7560:	00000098 	muleq	r0, r8, r0
    7564:	f705000f 			; <UNDEFINED> instruction: 0xf705000f
    7568:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    756c:	000017be 			; <UNDEFINED> instruction: 0x000017be
    7570:	07173b04 	ldreq	r3, [r7, -r4, lsl #22]
    7574:	01000001 	tsteq	r0, r1
    7578:	00ab0701 	adceq	r0, fp, r1, lsl #14
    757c:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    7580:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    7584:	07000000 	streq	r0, [r0, -r0]
    7588:	011a0500 	tsteq	sl, r0, lsl #10
    758c:	5a090000 	bpl	247594 <_Min_Heap_Size+0x246d94>
    7590:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    7594:	012a173c 			; <UNDEFINED> instruction: 0x012a173c
    7598:	01010000 	mrseq	r0, (UNDEF: 1)
    759c:	68051c0a 	stmdavs	r5, {r1, r3, sl, fp, ip}
    75a0:	01b60901 			; <UNDEFINED> instruction: 0x01b60901
    75a4:	410b0000 	mrsmi	r0, (UNDEF: 11)
    75a8:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    75ac:	c811016a 	ldmdagt	r1, {r1, r3, r5, r6, r8}
    75b0:	02000000 	andeq	r0, r0, #0
    75b4:	860c0023 	strhi	r0, [ip], -r3, lsr #32
    75b8:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    75bc:	c811016b 	ldmdagt	r1, {r0, r1, r3, r5, r6, r8}
    75c0:	02000000 	andeq	r0, r0, #0
    75c4:	830c0423 	movwhi	r0, #50211	; 0xc423
    75c8:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    75cc:	c811016c 	ldmdagt	r1, {r2, r3, r5, r6, r8}
    75d0:	02000000 	andeq	r0, r0, #0
    75d4:	530b0823 	movwpl	r0, #47139	; 0xb823
    75d8:	6d050052 	stcvs	0, cr0, [r5, #-328]	; 0xfffffeb8
    75dc:	00c81101 	sbceq	r1, r8, r1, lsl #2
    75e0:	23020000 	movwcs	r0, #8192	; 0x2000
    75e4:	52430b0c 	subpl	r0, r3, #12, 22	; 0x3000
    75e8:	016e0500 	cmneq	lr, r0, lsl #10
    75ec:	0000c811 	andeq	ip, r0, r1, lsl r8
    75f0:	10230200 	eorne	r0, r3, r0, lsl #4
    75f4:	0017680c 	andseq	r6, r7, ip, lsl #16
    75f8:	016f0500 	cmneq	pc, r0, lsl #10
    75fc:	0000c811 	andeq	ip, r0, r1, lsl r8
    7600:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    7604:	00179a0c 	andseq	r9, r7, ip, lsl #20
    7608:	01700500 	cmneq	r0, r0, lsl #10
    760c:	0000c811 	andeq	ip, r0, r1, lsl r8
    7610:	18230200 	stmdane	r3!, {r9}
    7614:	176e0d00 	strbne	r0, [lr, -r0, lsl #26]!
    7618:	71050000 	mrsvc	r0, (UNDEF: 5)
    761c:	013d0301 	teqeq	sp, r1, lsl #6
    7620:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    7624:	0901ae05 	stmdbeq	r1, {r0, r2, r9, sl, fp, sp, pc}
    7628:	0000025e 	andeq	r0, r0, lr, asr r2
    762c:	000fc40c 	andeq	ip, pc, ip, lsl #8
    7630:	01b00500 	lslseq	r0, r0, #10
    7634:	0000c811 	andeq	ip, r0, r1, lsl r8
    7638:	00230200 	eoreq	r0, r3, r0, lsl #4
    763c:	000ed60c 	andeq	sp, lr, ip, lsl #12
    7640:	01b10500 			; <UNDEFINED> instruction: 0x01b10500
    7644:	0000c811 	andeq	ip, r0, r1, lsl r8
    7648:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    764c:	000d540c 	andeq	r5, sp, ip, lsl #8
    7650:	01b20500 			; <UNDEFINED> instruction: 0x01b20500
    7654:	0000c811 	andeq	ip, r0, r1, lsl r8
    7658:	08230200 	stmdaeq	r3!, {r9}
    765c:	000d9e0c 	andeq	r9, sp, ip, lsl #28
    7660:	01b30500 			; <UNDEFINED> instruction: 0x01b30500
    7664:	0000c811 	andeq	ip, r0, r1, lsl r8
    7668:	0c230200 	sfmeq	f0, 4, [r3], #-0
    766c:	5244490b 	subpl	r4, r4, #180224	; 0x2c000
    7670:	01b40500 			; <UNDEFINED> instruction: 0x01b40500
    7674:	0000c811 	andeq	ip, r0, r1, lsl r8
    7678:	10230200 	eorne	r0, r3, r0, lsl #4
    767c:	52444f0b 	subpl	r4, r4, #11, 30	; 0x2c
    7680:	01b50500 			; <UNDEFINED> instruction: 0x01b50500
    7684:	0000c811 	andeq	ip, r0, r1, lsl r8
    7688:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    768c:	000f770c 	andeq	r7, pc, ip, lsl #14
    7690:	01b60500 			; <UNDEFINED> instruction: 0x01b60500
    7694:	0000c811 	andeq	ip, r0, r1, lsl r8
    7698:	18230200 	stmdane	r3!, {r9}
    769c:	000d420c 	andeq	r4, sp, ip, lsl #4
    76a0:	01b70500 			; <UNDEFINED> instruction: 0x01b70500
    76a4:	0000c811 	andeq	ip, r0, r1, lsl r8
    76a8:	1c230200 	sfmne	f0, 4, [r3], #-0
    76ac:	5246410b 	subpl	r4, r6, #-1073741822	; 0xc0000002
    76b0:	01b80500 			; <UNDEFINED> instruction: 0x01b80500
    76b4:	00026e11 	andeq	r6, r2, r1, lsl lr
    76b8:	20230200 	eorcs	r0, r3, r0, lsl #4
    76bc:	00c80700 	sbceq	r0, r8, r0, lsl #14
    76c0:	026e0000 	rsbeq	r0, lr, #0
    76c4:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    76c8:	01000000 	mrseq	r0, (UNDEF: 0)
    76cc:	025e0600 	subseq	r0, lr, #0, 12
    76d0:	7c0d0000 	stcvc	0, cr0, [sp], {-0}
    76d4:	0500000f 	streq	r0, [r0, #-15]
    76d8:	c30301b9 	movwgt	r0, #12729	; 0x31b9
    76dc:	0a000001 	beq	76e8 <_Min_Heap_Size+0x6ee8>
    76e0:	01ea0508 	mvneq	r0, r8, lsl #10
    76e4:	0002aa09 	andeq	sl, r2, r9, lsl #20
    76e8:	52430b00 	subpl	r0, r3, #0, 22
    76ec:	01ec0500 	mvneq	r0, r0, lsl #10
    76f0:	0000c811 	andeq	ip, r0, r1, lsl r8
    76f4:	00230200 	eoreq	r0, r3, r0, lsl #4
    76f8:	5253430b 	subspl	r4, r3, #738197504	; 0x2c000000
    76fc:	01ed0500 	mvneq	r0, r0, lsl #10
    7700:	0000c811 	andeq	ip, r0, r1, lsl r8
    7704:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7708:	01aa0d00 			; <UNDEFINED> instruction: 0x01aa0d00
    770c:	ee050000 	cdp	0, 0, cr0, cr5, cr0, {0}
    7710:	02800301 	addeq	r0, r0, #67108864	; 0x4000000
    7714:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    7718:	0901f405 	stmdbeq	r1, {r0, r2, sl, ip, sp, lr, pc}
    771c:	000004a3 	andeq	r0, r0, r3, lsr #9
    7720:	0052430b 	subseq	r4, r2, fp, lsl #6
    7724:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    7728:	000000c8 	andeq	r0, r0, r8, asr #1
    772c:	0c002302 	stceq	3, cr2, [r0], {2}
    7730:	00000282 	andeq	r0, r0, r2, lsl #5
    7734:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    7738:	000000c8 	andeq	r0, r0, r8, asr #1
    773c:	0c042302 	stceq	3, cr2, [r4], {2}
    7740:	00000285 	andeq	r0, r0, r5, lsl #5
    7744:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    7748:	000000c8 	andeq	r0, r0, r8, asr #1
    774c:	0b082302 	bleq	21035c <_Min_Heap_Size+0x20fb5c>
    7750:	00524943 	subseq	r4, r2, r3, asr #18
    7754:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    7758:	000000c8 	andeq	r0, r0, r8, asr #1
    775c:	0c0c2302 	stceq	3, cr2, [ip], {2}
    7760:	00000166 	andeq	r0, r0, r6, ror #2
    7764:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    7768:	000000c8 	andeq	r0, r0, r8, asr #1
    776c:	0c102302 	ldceq	3, cr2, [r0], {2}
    7770:	00000717 	andeq	r0, r0, r7, lsl r7
    7774:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    7778:	000000c8 	andeq	r0, r0, r8, asr #1
    777c:	0c142302 	ldceq	3, cr2, [r4], {2}
    7780:	0000067c 	andeq	r0, r0, ip, ror r6
    7784:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    7788:	000000c8 	andeq	r0, r0, r8, asr #1
    778c:	0c182302 	ldceq	3, cr2, [r8], {2}
    7790:	0000050f 	andeq	r0, r0, pc, lsl #10
    7794:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    7798:	000000bc 	strheq	r0, [r0], -ip
    779c:	0c1c2302 	ldceq	3, cr2, [ip], {2}
    77a0:	000004fa 	strdeq	r0, [r0], -sl
    77a4:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    77a8:	000000c8 	andeq	r0, r0, r8, asr #1
    77ac:	0c202302 	stceq	3, cr2, [r0], #-8
    77b0:	000001f9 	strdeq	r0, [r0], -r9
    77b4:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    77b8:	000000c8 	andeq	r0, r0, r8, asr #1
    77bc:	0c242302 	stceq	3, cr2, [r4], #-8
    77c0:	00000519 	andeq	r0, r0, r9, lsl r5
    77c4:	11020005 	tstne	r2, r5
    77c8:	000000d9 	ldrdeq	r0, [r0], -r9
    77cc:	0c282302 	stceq	3, cr2, [r8], #-8
    77d0:	00000881 	andeq	r0, r0, r1, lsl #17
    77d4:	11020105 	tstne	r2, r5, lsl #2
    77d8:	000000c8 	andeq	r0, r0, r8, asr #1
    77dc:	0c302302 	ldceq	3, cr2, [r0], #-8
    77e0:	00000787 	andeq	r0, r0, r7, lsl #15
    77e4:	11020205 	tstne	r2, r5, lsl #4
    77e8:	000000c8 	andeq	r0, r0, r8, asr #1
    77ec:	0c342302 	ldceq	3, cr2, [r4], #-8
    77f0:	0000049c 	muleq	r0, ip, r4
    77f4:	11020305 	tstne	r2, r5, lsl #6
    77f8:	000000c8 	andeq	r0, r0, r8, asr #1
    77fc:	0c382302 	ldceq	3, cr2, [r8], #-8
    7800:	00000523 	andeq	r0, r0, r3, lsr #10
    7804:	11020405 	tstne	r2, r5, lsl #8
    7808:	000000bc 	strheq	r0, [r0], -ip
    780c:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    7810:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    7814:	11020505 	tstne	r2, r5, lsl #10
    7818:	000000c8 	andeq	r0, r0, r8, asr #1
    781c:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    7820:	00000674 	andeq	r0, r0, r4, ror r6
    7824:	11020605 	tstne	r2, r5, lsl #12
    7828:	000000c8 	andeq	r0, r0, r8, asr #1
    782c:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    7830:	0000052d 	andeq	r0, r0, sp, lsr #10
    7834:	11020705 	tstne	r2, r5, lsl #14
    7838:	000000d9 	ldrdeq	r0, [r0], -r9
    783c:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    7840:	0000012b 	andeq	r0, r0, fp, lsr #2
    7844:	11020805 	tstne	r2, r5, lsl #16
    7848:	000000c8 	andeq	r0, r0, r8, asr #1
    784c:	0c502302 	mrrceq	3, 0, r2, r0, cr2
    7850:	000004d6 	ldrdeq	r0, [r0], -r6
    7854:	11020905 	tstne	r2, r5, lsl #18
    7858:	000000c8 	andeq	r0, r0, r8, asr #1
    785c:	0c542302 	mrrceq	3, 0, r2, r4, cr2
    7860:	00000642 	andeq	r0, r0, r2, asr #12
    7864:	11020a05 	tstne	r2, r5, lsl #20
    7868:	000000c8 	andeq	r0, r0, r8, asr #1
    786c:	0c582302 	mrrceq	3, 0, r2, r8, cr2
    7870:	00000537 	andeq	r0, r0, r7, lsr r5
    7874:	11020b05 	tstne	r2, r5, lsl #22
    7878:	000000bc 	strheq	r0, [r0], -ip
    787c:	0c5c2302 	mrrceq	3, 0, r2, ip, cr2
    7880:	0000001b 	andeq	r0, r0, fp, lsl r0
    7884:	11020c05 	tstne	r2, r5, lsl #24
    7888:	000000c8 	andeq	r0, r0, r8, asr #1
    788c:	0c602302 	stcleq	3, cr2, [r0], #-8
    7890:	000003ee 	andeq	r0, r0, lr, ror #7
    7894:	11020d05 	tstne	r2, r5, lsl #26
    7898:	000000c8 	andeq	r0, r0, r8, asr #1
    789c:	0c642302 	stcleq	3, cr2, [r4], #-8
    78a0:	00000541 	andeq	r0, r0, r1, asr #10
    78a4:	11020e05 	tstne	r2, r5, lsl #28
    78a8:	000000d9 	ldrdeq	r0, [r0], -r9
    78ac:	0c682302 	stcleq	3, cr2, [r8], #-8
    78b0:	00000809 	andeq	r0, r0, r9, lsl #16
    78b4:	11020f05 	tstne	r2, r5, lsl #30
    78b8:	000000c8 	andeq	r0, r0, r8, asr #1
    78bc:	0b702302 	bleq	1c104cc <_Min_Heap_Size+0x1c0fccc>
    78c0:	00525343 	subseq	r5, r2, r3, asr #6
    78c4:	11021005 	tstne	r2, r5
    78c8:	000000c8 	andeq	r0, r0, r8, asr #1
    78cc:	0c742302 	ldcleq	3, cr2, [r4], #-8
    78d0:	0000054b 	andeq	r0, r0, fp, asr #10
    78d4:	11021105 	tstne	r2, r5, lsl #2
    78d8:	000000d9 	ldrdeq	r0, [r0], -r9
    78dc:	0c782302 	ldcleq	3, cr2, [r8], #-8
    78e0:	000007d8 	ldrdeq	r0, [r0], -r8
    78e4:	11021205 	tstne	r2, r5, lsl #4
    78e8:	000000c8 	andeq	r0, r0, r8, asr #1
    78ec:	01802303 	orreq	r2, r0, r3, lsl #6
    78f0:	0003810c 	andeq	r8, r3, ip, lsl #2
    78f4:	02130500 	andseq	r0, r3, #0, 10
    78f8:	0000c811 	andeq	ip, r0, r1, lsl r8
    78fc:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    7900:	cd0d0001 	stcgt	0, cr0, [sp, #-4]
    7904:	05000001 	streq	r0, [r0, #-1]
    7908:	b7030214 	smladlt	r3, r4, r2, r0
    790c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    7910:	003c0107 	eorseq	r0, ip, r7, lsl #2
    7914:	b9060000 	stmdblt	r6, {}	; <UNPREDICTABLE>
    7918:	0004cb01 	andeq	ip, r4, r1, lsl #22
    791c:	031e0f00 	tsteq	lr, #0, 30
    7920:	10000000 	andne	r0, r0, r0
    7924:	00544553 	subseq	r4, r4, r3, asr r5
    7928:	c9030001 	stmdbgt	r3, {r0}
    792c:	06000010 			; <UNDEFINED> instruction: 0x06000010
    7930:	04b003bc 	ldrteq	r0, [r0], #956	; 0x3bc
    7934:	070e0000 	streq	r0, [lr, -r0]
    7938:	00003c01 	andeq	r3, r0, r1, lsl #24
    793c:	01bf0600 			; <UNDEFINED> instruction: 0x01bf0600
    7940:	000004f2 	strdeq	r0, [r0], -r2
    7944:	0017920f 	andseq	r9, r7, pc, lsl #4
    7948:	7c0f0000 	stcvc	0, cr0, [pc], {-0}
    794c:	01000017 	tsteq	r0, r7, lsl r0
    7950:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    7954:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    7958:	3c01070e 	stccc	7, cr0, [r1], {14}
    795c:	07000000 	streq	r0, [r0, -r0]
    7960:	05200127 	streq	r0, [r0, #-295]!	; 0xfffffed9
    7964:	4a0f0000 	bmi	3c796c <_Min_Heap_Size+0x3c716c>
    7968:	00000003 	andeq	r0, r0, r3
    796c:	0006ad0f 	andeq	sl, r6, pc, lsl #26
    7970:	e90f0100 	stmdb	pc, {r8}	; <UNPREDICTABLE>
    7974:	02000008 	andeq	r0, r0, #8
    7978:	00032b0f 	andeq	r2, r3, pc, lsl #22
    797c:	03000300 	movweq	r0, #768	; 0x300
    7980:	000012fe 	strdeq	r1, [r0], -lr
    7984:	f9032c07 			; <UNDEFINED> instruction: 0xf9032c07
    7988:	11000004 	tstne	r0, r4
    798c:	092d0818 	pusheq	{r3, r4, fp}
    7990:	00000590 	muleq	r0, r0, r5
    7994:	00008012 	andeq	r8, r0, r2, lsl r0
    7998:	0c2f0800 	stceq	8, cr0, [pc], #-0	; 79a0 <_Min_Heap_Size+0x71a0>
    799c:	000000bc 	strheq	r0, [r0], -ip
    79a0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    79a4:	0000064c 	andeq	r0, r0, ip, asr #12
    79a8:	bc0c3208 	sfmlt	f3, 4, [ip], {8}
    79ac:	02000000 	andeq	r0, r0, #0
    79b0:	89120423 	ldmdbhi	r2, {r0, r1, r5, sl}
    79b4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    79b8:	00bc0c35 	adcseq	r0, ip, r5, lsr ip
    79bc:	23020000 	movwcs	r0, #8192	; 0x2000
    79c0:	008e1208 	addeq	r1, lr, r8, lsl #4
    79c4:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
    79c8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    79cc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    79d0:	00009312 	andeq	r9, r0, r2, lsl r3
    79d4:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    79d8:	000000bc 	strheq	r0, [r0], -ip
    79dc:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    79e0:	00000098 	muleq	r0, r8, r0
    79e4:	bc0c3f08 	stclt	15, cr3, [ip], {8}
    79e8:	02000000 	andeq	r0, r0, #0
    79ec:	03001423 	movweq	r1, #1059	; 0x423
    79f0:	00000850 	andeq	r0, r0, r0, asr r8
    79f4:	2c024908 			; <UNDEFINED> instruction: 0x2c024908
    79f8:	11000005 	tstne	r0, r5
    79fc:	09310930 	ldmdbeq	r1!, {r4, r5, r8, fp}
    7a00:	0000060f 	andeq	r0, r0, pc, lsl #12
    7a04:	0003ba12 	andeq	fp, r3, r2, lsl sl
    7a08:	0c330900 			; <UNDEFINED> instruction: 0x0c330900
    7a0c:	000000bc 	strheq	r0, [r0], -ip
    7a10:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    7a14:	00000307 	andeq	r0, r0, r7, lsl #6
    7a18:	bc0c3609 	stclt	6, cr3, [ip], {9}
    7a1c:	02000000 	andeq	r0, r0, #0
    7a20:	e6120423 	ldr	r0, [r2], -r3, lsr #8
    7a24:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7a28:	00bc0c39 	adcseq	r0, ip, r9, lsr ip
    7a2c:	23020000 	movwcs	r0, #8192	; 0x2000
    7a30:	02411208 	subeq	r1, r1, #8, 4	; 0x80000000
    7a34:	3c090000 	stccc	0, cr0, [r9], {-0}
    7a38:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7a3c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    7a40:	00026012 	andeq	r6, r2, r2, lsl r0
    7a44:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
    7a48:	000000bc 	strheq	r0, [r0], -ip
    7a4c:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    7a50:	0000020c 	andeq	r0, r0, ip, lsl #4
    7a54:	bc0c4209 	sfmlt	f4, 4, [ip], {9}
    7a58:	02000000 	andeq	r0, r0, #0
    7a5c:	50131423 	andspl	r1, r3, r3, lsr #8
    7a60:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
    7a64:	05901645 	ldreq	r1, [r0, #1605]	; 0x645
    7a68:	23020000 	movwcs	r0, #8192	; 0x2000
    7a6c:	53030018 	movwpl	r0, #12312	; 0x3018
    7a70:	09000001 	stmdbeq	r0, {r0}
    7a74:	059c0246 	ldreq	r0, [ip, #582]	; 0x246
    7a78:	14110000 	ldrne	r0, [r1], #-0
    7a7c:	70094b09 	andvc	r4, r9, r9, lsl #22
    7a80:	12000006 	andne	r0, r0, #6
    7a84:	00000863 	andeq	r0, r0, r3, ror #16
    7a88:	bc0c4d09 	stclt	13, cr4, [ip], {9}
    7a8c:	02000000 	andeq	r0, r0, #0
    7a90:	3d120023 	ldccc	0, cr0, [r2, #-140]	; 0xffffff74
    7a94:	09000009 	stmdbeq	r0, {r0, r3}
    7a98:	00bc0c50 	adcseq	r0, ip, r0, asr ip
    7a9c:	23020000 	movwcs	r0, #8192	; 0x2000
    7aa0:	04071204 	streq	r1, [r7], #-516	; 0xfffffdfc
    7aa4:	53090000 	movwpl	r0, #36864	; 0x9000
    7aa8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7aac:	08230200 	stmdaeq	r3!, {r9}
    7ab0:	00005712 	andeq	r5, r0, r2, lsl r7
    7ab4:	0c560900 	mrrceq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
    7ab8:	000000bc 	strheq	r0, [r0], -ip
    7abc:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    7ac0:	00000733 	andeq	r0, r0, r3, lsr r7
    7ac4:	bc0c5909 			; <UNDEFINED> instruction: 0xbc0c5909
    7ac8:	02000000 	andeq	r0, r0, #0
    7acc:	03001023 	movweq	r1, #35	; 0x23
    7ad0:	000004e7 	andeq	r0, r0, r7, ror #9
    7ad4:	1b025c09 	blne	9eb00 <_Min_Heap_Size+0x9e300>
    7ad8:	11000006 	tstne	r0, r6
    7adc:	092e0a14 	stmdbeq	lr!, {r2, r4, r9, fp}
    7ae0:	000006d1 	ldrdeq	r0, [r0], -r1
    7ae4:	6e695013 	mcrvs	0, 3, r5, cr9, cr3, {0}
    7ae8:	0c300a00 			; <UNDEFINED> instruction: 0x0c300a00
    7aec:	000000bc 	strheq	r0, [r0], -ip
    7af0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    7af4:	0000069d 	muleq	r0, sp, r6
    7af8:	bc0c330a 	stclt	3, cr3, [ip], {10}
    7afc:	02000000 	andeq	r0, r0, #0
    7b00:	40120423 	andsmi	r0, r2, r3, lsr #8
    7b04:	0a00000e 	beq	7b44 <_Min_Heap_Size+0x7344>
    7b08:	00bc0c36 	adcseq	r0, ip, r6, lsr ip
    7b0c:	23020000 	movwcs	r0, #8192	; 0x2000
    7b10:	0a6a1208 	beq	1a8c338 <_Min_Heap_Size+0x1a8bb38>
    7b14:	390a0000 	stmdbcc	sl, {}	; <UNPREDICTABLE>
    7b18:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7b1c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    7b20:	000dce12 	andeq	ip, sp, r2, lsl lr
    7b24:	0c3c0a00 			; <UNDEFINED> instruction: 0x0c3c0a00
    7b28:	000000bc 	strheq	r0, [r0], -ip
    7b2c:	00102302 	andseq	r2, r0, r2, lsl #6
    7b30:	000b8e03 	andeq	r8, fp, r3, lsl #28
    7b34:	023e0a00 	eorseq	r0, lr, #0, 20
    7b38:	0000067c 	andeq	r0, r0, ip, ror r6
    7b3c:	00182609 	andseq	r2, r8, r9, lsl #12
    7b40:	11cd0b00 	bicne	r0, sp, r0, lsl #22
    7b44:	000000bc 	strheq	r0, [r0], -ip
    7b48:	01140101 	tsteq	r4, r1, lsl #2
    7b4c:	00001733 	andeq	r1, r0, r3, lsr r7
    7b50:	0d044b01 	vstreq	d4, [r4, #-4]
    7b54:	00000001 	andeq	r0, r0, r1
    7b58:	00000000 	andeq	r0, r0, r0
    7b5c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7b60:	f6011501 			; <UNDEFINED> instruction: 0xf6011501
    7b64:	01000018 	tsteq	r0, r8, lsl r0
    7b68:	0106043a 	tsteq	r6, sl, lsr r4
	...
    7b74:	00005180 	andeq	r5, r0, r0, lsl #3
    7b78:	00072801 	andeq	r2, r7, r1, lsl #16
    7b7c:	00001600 	andeq	r1, r0, r0, lsl #12
    7b80:	06eb0000 	strbteq	r0, [fp], r0
    7b84:	17000000 	strne	r0, [r0, -r0]
    7b88:	00186b01 	andseq	r6, r8, r1, lsl #22
    7b8c:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
    7b90:	00000106 	andeq	r0, r0, r6, lsl #2
    7b94:	00000000 	andeq	r0, r0, r0
    7b98:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7b9c:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    7ba0:	f5180000 			; <UNDEFINED> instruction: 0xf5180000
    7ba4:	01000002 	tsteq	r0, r2
    7ba8:	62320420 	eorsvs	r0, r2, #32, 8	; 0x20000000
    7bac:	01000007 	tsteq	r0, r7
    7bb0:	18d71850 	ldmne	r7, {r4, r6, fp, ip}^
    7bb4:	20010000 	andcs	r0, r1, r0
    7bb8:	07684f04 	strbeq	r4, [r8, -r4, lsl #30]!
    7bbc:	51010000 	mrspl	r0, (UNDEF: 1)
    7bc0:	70041900 	andvc	r1, r4, r0, lsl #18
    7bc4:	19000006 	stmdbne	r0, {r1, r2}
    7bc8:	0000bc04 	andeq	fp, r0, r4, lsl #24
    7bcc:	e1011700 	tst	r1, r0, lsl #14
    7bd0:	01000018 	tsteq	r0, r8, lsl r0
    7bd4:	010d03d1 	ldrdeq	r0, [sp, -r1]
	...
    7be0:	01007d02 	tsteq	r0, r2, lsl #26
    7be4:	00000799 	muleq	r0, r9, r7
    7be8:	0000ef18 	andeq	lr, r0, r8, lsl pc
    7bec:	03d10100 	bicseq	r0, r1, #0, 2
    7bf0:	00079937 	andeq	r9, r7, r7, lsr r9
    7bf4:	00500100 	subseq	r0, r0, r0, lsl #2
    7bf8:	060f0419 			; <UNDEFINED> instruction: 0x060f0419
    7bfc:	011a0000 	tsteq	sl, r0
    7c00:	00001505 	andeq	r1, r0, r5, lsl #10
    7c04:	0a03c401 	beq	f8c10 <_Min_Heap_Size+0xf8410>
    7c08:	0000bc01 	andeq	fp, r0, r1, lsl #24
    7c0c:	00114400 	andseq	r4, r1, r0, lsl #8
    7c10:	00116408 	andseq	r6, r1, r8, lsl #8
    7c14:	0051a008 	subseq	sl, r1, r8
    7c18:	07c90100 	strbeq	r0, [r9, r0, lsl #2]
    7c1c:	4a160000 	bmi	587c24 <_Min_Heap_Size+0x587424>
    7c20:	f3080011 	vqadd.u8	d0, d8, d1
    7c24:	00000007 	andeq	r0, r0, r7
    7c28:	1076011a 	rsbsne	r0, r6, sl, lsl r1
    7c2c:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    7c30:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    7c34:	24000000 	strcs	r0, [r0], #-0
    7c38:	44080011 	strmi	r0, [r8], #-17	; 0xffffffef
    7c3c:	c0080011 	andgt	r0, r8, r1, lsl r0
    7c40:	01000051 	qaddeq	r0, r1, r0
    7c44:	000007f3 	strdeq	r0, [r0], -r3
    7c48:	00112a16 	andseq	r2, r1, r6, lsl sl
    7c4c:	0007f308 	andeq	pc, r7, r8, lsl #6
    7c50:	011b0000 	tsteq	fp, r0
    7c54:	00001882 	andeq	r1, r0, r2, lsl #17
    7c58:	0a03ad01 	beq	f3064 <_Min_Heap_Size+0xf2864>
    7c5c:	0000bc01 	andeq	fp, r0, r1, lsl #24
    7c60:	00111800 	andseq	r1, r1, r0, lsl #16
    7c64:	00112408 	andseq	r2, r1, r8, lsl #8
    7c68:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    7c6c:	36011a01 	strcc	r1, [r1], -r1, lsl #20
    7c70:	01000018 	tsteq	r0, r8, lsl r0
    7c74:	01110375 	tsteq	r1, r5, ror r3
    7c78:	000000bc 	strheq	r0, [r0], -ip
	...
    7c84:	000051e0 	andeq	r5, r0, r0, ror #3
    7c88:	00089501 	andeq	r9, r8, r1, lsl #10
    7c8c:	18311c00 	ldmdane	r1!, {sl, fp, ip}
    7c90:	77010000 	strvc	r0, [r1, -r0]
    7c94:	00bc0c03 	adcseq	r0, ip, r3, lsl #24
    7c98:	52080000 	andpl	r0, r8, #0
    7c9c:	52000000 	andpl	r0, r0, #0
    7ca0:	8b1c0000 	blhi	707ca8 <_Min_Heap_Size+0x7074a8>
    7ca4:	01000017 	tsteq	r0, r7, lsl r0
    7ca8:	bc170377 	ldclt	3, cr0, [r7], {119}	; 0x77
    7cac:	46000000 	strmi	r0, [r0], -r0
    7cb0:	3e000052 	mcrcc	0, 0, r0, cr0, cr2, {2}
    7cb4:	1c000052 	stcne	0, cr0, [r0], {82}	; 0x52
    7cb8:	00001747 	andeq	r1, r0, r7, asr #14
    7cbc:	24037701 	strcs	r7, [r3], #-1793	; 0xfffff8ff
    7cc0:	000000bc 	strheq	r0, [r0], -ip
    7cc4:	00005283 	andeq	r5, r0, r3, lsl #5
    7cc8:	0000527d 	andeq	r5, r0, sp, ror r2
    7ccc:	0017cc1c 	andseq	ip, r7, ip, lsl ip
    7cd0:	03780100 	cmneq	r8, #0, 2
    7cd4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7cd8:	0052b600 	subseq	fp, r2, r0, lsl #12
    7cdc:	0052ae00 	subseq	sl, r2, r0, lsl #28
    7ce0:	00001600 	andeq	r1, r0, r0, lsl #12
    7ce4:	0e3e0000 	cdpeq	0, 3, cr0, cr14, cr0, {0}
    7ce8:	00160000 	andseq	r0, r6, r0
    7cec:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    7cf0:	0000000e 	andeq	r0, r0, lr
    7cf4:	17d90114 	bfine	r0, r4, #2, #24
    7cf8:	52010000 	andpl	r0, r1, #0
    7cfc:	00010603 	andeq	r0, r1, r3, lsl #12
    7d00:	00000000 	andeq	r0, r0, r0
    7d04:	02000000 	andeq	r0, r0, #0
    7d08:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    7d0c:	0017ac01 	andseq	sl, r7, r1, lsl #24
    7d10:	03490100 	movteq	r0, #37120	; 0x9100
    7d14:	00000106 	andeq	r0, r0, r6, lsl #2
    7d18:	00000000 	andeq	r0, r0, r0
    7d1c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7d20:	01150100 	tsteq	r5, r0, lsl #2
    7d24:	000017ec 	andeq	r1, r0, ip, ror #15
    7d28:	06030701 	streq	r0, [r3], -r1, lsl #14
    7d2c:	00000001 	andeq	r0, r0, r1
    7d30:	00000000 	andeq	r0, r0, r0
    7d34:	0052f100 	subseq	pc, r2, r0, lsl #2
    7d38:	0a190100 	beq	648140 <_Min_Heap_Size+0x647940>
    7d3c:	ce1d0000 	cdpgt	0, 1, cr0, cr13, cr0, {0}
    7d40:	01000018 	tsteq	r0, r8, lsl r0
    7d44:	bc210307 	stclt	3, cr0, [r1], #-28	; 0xffffffe4
    7d48:	43000000 	movwmi	r0, #0
    7d4c:	35000053 	strcc	r0, [r0, #-83]	; 0xffffffad
    7d50:	1d000053 	stcne	0, cr0, [r0, #-332]	; 0xfffffeb4
    7d54:	0000185d 	andeq	r1, r0, sp, asr r8
    7d58:	34030701 	strcc	r0, [r3], #-1793	; 0xfffff8ff
    7d5c:	000000bc 	strheq	r0, [r0], -ip
    7d60:	000053a6 	andeq	r5, r0, r6, lsr #7
    7d64:	0000539e 	muleq	r0, lr, r3
    7d68:	0017a11d 	andseq	sl, r7, sp, lsl r1
    7d6c:	03070100 	movweq	r0, #28928	; 0x7100
    7d70:	0000bc4c 	andeq	fp, r0, ip, asr #24
    7d74:	0053e800 	subseq	lr, r3, r0, lsl #16
    7d78:	0053da00 	subseq	sp, r3, r0, lsl #20
    7d7c:	0aae1e00 	beq	feb8f584 <_estack+0xdeb8e34c>
    7d80:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    7d84:	06d11403 	ldrbeq	r1, [r1], r3, lsl #8
    7d88:	91020000 	mrsls	r0, (UNDEF: 2)
    7d8c:	00001f5c 	andeq	r1, r0, ip, asr pc
    7d90:	00000000 	andeq	r0, r0, r0
    7d94:	094c0000 	stmdbeq	ip, {}^	; <UNPREDICTABLE>
    7d98:	b61e0000 	ldrlt	r0, [lr], -r0
    7d9c:	01000001 	tsteq	r0, r1
    7da0:	c8050313 	stmdagt	r5, {r0, r1, r4, r8, r9}
    7da4:	02000000 	andeq	r0, r0, #0
    7da8:	1f005491 	svcne	0x00005491
	...
    7db4:	0000096a 	andeq	r0, r0, sl, ror #18
    7db8:	0001b61e 	andeq	fp, r1, lr, lsl r6
    7dbc:	032b0100 			; <UNDEFINED> instruction: 0x032b0100
    7dc0:	0000c805 	andeq	ip, r0, r5, lsl #16
    7dc4:	58910200 	ldmpl	r1, {r9}
    7dc8:	00002000 	andeq	r2, r0, r0
    7dcc:	0e490000 	cdpeq	0, 4, cr0, cr9, cr0, {0}
    7dd0:	09870000 	stmibeq	r7, {}	; <UNPREDICTABLE>
    7dd4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7dd8:	000c0550 	andeq	r0, ip, r0, asr r5
    7ddc:	21400200 	mrscs	r0, (UNDEF: 96)
    7de0:	91025101 	tstls	r2, r1, lsl #2
    7de4:	0020005c 	eoreq	r0, r0, ip, asr r0
    7de8:	57000000 	strpl	r0, [r0, -r0]
    7dec:	a500000e 	strge	r0, [r0, #-14]
    7df0:	21000009 	tstcs	r0, r9
    7df4:	03055001 	movweq	r5, #20481	; 0x5001
    7df8:	00000000 	andeq	r0, r0, r0
    7dfc:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7e00:	00030b0a 	andeq	r0, r3, sl, lsl #22
    7e04:	00000020 	andeq	r0, r0, r0, lsr #32
    7e08:	000e5700 	andeq	r5, lr, r0, lsl #14
    7e0c:	0009c300 	andeq	ip, r9, r0, lsl #6
    7e10:	50012100 	andpl	r2, r1, r0, lsl #2
    7e14:	00000305 	andeq	r0, r0, r5, lsl #6
    7e18:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7e1c:	0c0a0351 	stceq	3, cr0, [sl], {81}	; 0x51
    7e20:	00200003 	eoreq	r0, r0, r3
    7e24:	57000000 	strpl	r0, [r0, -r0]
    7e28:	e100000e 	tst	r0, lr
    7e2c:	21000009 	tstcs	r0, r9
    7e30:	03055001 	movweq	r5, #20481	; 0x5001
    7e34:	00000000 	andeq	r0, r0, r0
    7e38:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7e3c:	0003100a 	andeq	r1, r3, sl
    7e40:	00000020 	andeq	r0, r0, r0, lsr #32
    7e44:	000e4900 	andeq	r4, lr, r0, lsl #18
    7e48:	0009fe00 	andeq	pc, r9, r0, lsl #28
    7e4c:	50012100 	andpl	r2, r1, r0, lsl #2
    7e50:	08000c05 	stmdaeq	r0, {r0, r2, sl, fp}
    7e54:	01214002 			; <UNDEFINED> instruction: 0x01214002
    7e58:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    7e5c:	00002200 	andeq	r2, r0, r0, lsl #4
    7e60:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7e64:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7e68:	00030550 	andeq	r0, r3, r0, asr r5
    7e6c:	21000000 	mrscs	r0, (UNDEF: 0)
    7e70:	0a035101 	beq	dc27c <_Min_Heap_Size+0xdba7c>
    7e74:	00000328 	andeq	r0, r0, r8, lsr #6
    7e78:	07f5011a 			; <UNDEFINED> instruction: 0x07f5011a
    7e7c:	4f010000 	svcmi	0x00010000
    7e80:	20011302 	andcs	r1, r1, r2, lsl #6
    7e84:	00000005 	andeq	r0, r0, r5
    7e88:	00000000 	andeq	r0, r0, r0
    7e8c:	43000000 	movwmi	r0, #0
    7e90:	01000054 	qaddeq	r0, r4, r0
    7e94:	00000b4d 	andeq	r0, r0, sp, asr #22
    7e98:	0002f51d 	andeq	pc, r2, sp, lsl r5	; <UNPREDICTABLE>
    7e9c:	024f0100 	subeq	r0, pc, #0, 2
    7ea0:	0007623c 	andeq	r6, r7, ip, lsr r2
    7ea4:	00548900 	subseq	r8, r4, r0, lsl #18
    7ea8:	00547b00 	subseq	r7, r4, r0, lsl #22
    7eac:	18d81d00 	ldmne	r8, {r8, sl, fp, ip}^
    7eb0:	4f010000 	svcmi	0x00010000
    7eb4:	00bc5802 	adcseq	r5, ip, r2, lsl #16
    7eb8:	54ed0000 	strbtpl	r0, [sp], #0
    7ebc:	54e10000 	strbtpl	r0, [r1], #0
    7ec0:	491c0000 	ldmdbmi	ip, {}	; <UNPREDICTABLE>
    7ec4:	01000015 	tsteq	r0, r5, lsl r0
    7ec8:	bc0c0251 	sfmlt	f0, 4, [ip], {81}	; 0x51
    7ecc:	3b000000 	blcc	7ed4 <_Min_Heap_Size+0x76d4>
    7ed0:	37000055 	smlsdcc	r0, r5, r0, r0
    7ed4:	16000055 			; <UNDEFINED> instruction: 0x16000055
    7ed8:	00000000 	andeq	r0, r0, r0
    7edc:	00000e66 	andeq	r0, r0, r6, ror #28
    7ee0:	00000016 	andeq	r0, r0, r6, lsl r0
    7ee4:	000e6600 	andeq	r6, lr, r0, lsl #12
    7ee8:	00002000 	andeq	r2, r0, r0
    7eec:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7ef0:	0aa80000 	beq	fea07ef8 <_estack+0xdea06cc0>
    7ef4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7ef8:	00030550 	andeq	r0, r3, r0, asr r5
    7efc:	21000000 	mrscs	r0, (UNDEF: 0)
    7f00:	0a035101 	beq	dc30c <_Min_Heap_Size+0xdbb0c>
    7f04:	2000025a 	andcs	r0, r0, sl, asr r2
    7f08:	00000000 	andeq	r0, r0, r0
    7f0c:	00000e57 	andeq	r0, r0, r7, asr lr
    7f10:	00000ac6 	andeq	r0, r0, r6, asr #21
    7f14:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7f18:	00000003 	andeq	r0, r0, r3
    7f1c:	51012100 	mrspl	r2, (UNDEF: 17)
    7f20:	025b0a03 	subseq	r0, fp, #12288	; 0x3000
    7f24:	00002000 	andeq	r2, r0, r0
    7f28:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7f2c:	0ae40000 	beq	ff907f34 <_estack+0xdf906cfc>
    7f30:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f34:	00030550 	andeq	r0, r3, r0, asr r5
    7f38:	21000000 	mrscs	r0, (UNDEF: 0)
    7f3c:	0a035101 	beq	dc348 <_Min_Heap_Size+0xdbb48>
    7f40:	2000027e 	andcs	r0, r0, lr, ror r2
    7f44:	00000000 	andeq	r0, r0, r0
    7f48:	00000e57 	andeq	r0, r0, r7, asr lr
    7f4c:	00000b02 	andeq	r0, r0, r2, lsl #22
    7f50:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7f54:	00000003 	andeq	r0, r0, r3
    7f58:	51012100 	mrspl	r2, (UNDEF: 17)
    7f5c:	02850a03 	addeq	r0, r5, #12288	; 0x3000
    7f60:	00001600 	andeq	r1, r0, r0, lsl #12
    7f64:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
    7f68:	00160000 	andseq	r0, r6, r0
    7f6c:	74000000 	strvc	r0, [r0], #-0
    7f70:	2000000e 	andcs	r0, r0, lr
    7f74:	00000000 	andeq	r0, r0, r0
    7f78:	00000e57 	andeq	r0, r0, r7, asr lr
    7f7c:	00000b32 	andeq	r0, r0, r2, lsr fp
    7f80:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7f84:	00000003 	andeq	r0, r0, r3
    7f88:	51012100 	mrspl	r2, (UNDEF: 17)
    7f8c:	02c30a03 	sbceq	r0, r3, #12288	; 0x3000
    7f90:	00002200 	andeq	r2, r0, r0, lsl #4
    7f94:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7f98:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f9c:	00030550 	andeq	r0, r3, r0, asr r5
    7fa0:	21000000 	mrscs	r0, (UNDEF: 0)
    7fa4:	0a035101 	beq	dc3b0 <_Min_Heap_Size+0xdbbb0>
    7fa8:	000002ca 	andeq	r0, r0, sl, asr #5
    7fac:	06d90123 	ldrbeq	r0, [r9], r3, lsr #2
    7fb0:	db010000 	blle	47fb8 <_Min_Heap_Size+0x477b8>
    7fb4:	0520011a 	streq	r0, [r0, #-282]!	; 0xfffffee6
	...
    7fc0:	55590000 	ldrbpl	r0, [r9, #-0]
    7fc4:	24010000 	strcs	r0, [r1], #-0
    7fc8:	2400000e 	strcs	r0, [r0], #-14
    7fcc:	000000ef 	andeq	r0, r0, pc, ror #1
    7fd0:	9941db01 	stmdbls	r1, {r0, r8, r9, fp, ip, lr, pc}^
    7fd4:	cf000007 	svcgt	0x00000007
    7fd8:	b5000055 	strlt	r0, [r0, #-85]	; 0xffffffab
    7fdc:	25000055 	strcs	r0, [r0, #-85]	; 0xffffffab
    7fe0:	00001549 	andeq	r1, r0, r9, asr #10
    7fe4:	bc0cdd01 	stclt	13, cr13, [ip], {1}
    7fe8:	a6000000 	strge	r0, [r0], -r0
    7fec:	72000056 	andvc	r0, r0, #86	; 0x56
    7ff0:	25000056 	strcs	r0, [r0, #-86]	; 0xffffffaa
    7ff4:	0000181b 	andeq	r1, r0, fp, lsl r8
    7ff8:	bc17dd01 	ldclt	13, cr13, [r7], {1}
    7ffc:	d0000000 	andle	r0, r0, r0
    8000:	cc000057 	stcgt	0, cr0, [r0], {87}	; 0x57
    8004:	26000057 			; <UNDEFINED> instruction: 0x26000057
    8008:	00000318 	andeq	r0, r0, r8, lsl r3
    800c:	00000c39 	andeq	r0, r0, r9, lsr ip
    8010:	00174c1c 	andseq	r4, r7, ip, lsl ip
    8014:	01870100 	orreq	r0, r7, r0, lsl #2
    8018:	0004cb16 	andeq	ip, r4, r6, lsl fp
    801c:	0057fa00 	subseq	pc, r7, r0, lsl #20
    8020:	0057ee00 	subseq	lr, r7, r0, lsl #28
    8024:	00001f00 	andeq	r1, r0, r0, lsl #30
    8028:	00000000 	andeq	r0, r0, r0
    802c:	0be40000 	bleq	ff908034 <_estack+0xdf906dfc>
    8030:	b61e0000 	ldrlt	r0, [lr], -r0
    8034:	01000001 	tsteq	r0, r1
    8038:	c8070190 	stmdagt	r7, {r4, r7, r8}
    803c:	02000000 	andeq	r0, r0, #0
    8040:	16006c91 			; <UNDEFINED> instruction: 0x16006c91
    8044:	00000000 	andeq	r0, r0, r0
    8048:	00000e66 	andeq	r0, r0, r6, ror #28
    804c:	00000016 	andeq	r0, r0, r6, lsl r0
    8050:	000e6600 	andeq	r6, lr, r0, lsl #12
    8054:	00002000 	andeq	r2, r0, r0
    8058:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    805c:	0c140000 	ldceq	0, cr0, [r4], {-0}
    8060:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8064:	00030550 	andeq	r0, r3, r0, asr r5
    8068:	21000000 	mrscs	r0, (UNDEF: 0)
    806c:	0a035101 	beq	dc478 <_Min_Heap_Size+0xdbc78>
    8070:	1600018a 	strne	r0, [r0], -sl, lsl #3
    8074:	00000000 	andeq	r0, r0, r0
    8078:	00000e66 	andeq	r0, r0, r6, ror #28
    807c:	00000016 	andeq	r0, r0, r6, lsl r0
    8080:	000e6600 	andeq	r6, lr, r0, lsl #12
    8084:	00001600 	andeq	r1, r0, r0, lsl #12
    8088:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    808c:	00160000 	andseq	r0, r6, r0
    8090:	66000000 	strvs	r0, [r0], -r0
    8094:	0000000e 	andeq	r0, r0, lr
    8098:	00000016 	andeq	r0, r0, r6, lsl r0
    809c:	000e6600 	andeq	r6, lr, r0, lsl #12
    80a0:	00001600 	andeq	r1, r0, r0, lsl #12
    80a4:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    80a8:	00200000 	eoreq	r0, r0, r0
    80ac:	57000000 	strpl	r0, [r0, -r0]
    80b0:	6800000e 	stmdavs	r0, {r1, r2, r3}
    80b4:	2100000c 	tstcs	r0, ip
    80b8:	03055001 	movweq	r5, #20481	; 0x5001
    80bc:	00000000 	andeq	r0, r0, r0
    80c0:	02510121 	subseq	r0, r1, #1073741832	; 0x40000008
    80c4:	2000e608 	andcs	lr, r0, r8, lsl #12
    80c8:	00000000 	andeq	r0, r0, r0
    80cc:	00000e57 	andeq	r0, r0, r7, asr lr
    80d0:	00000c85 	andeq	r0, r0, r5, lsl #25
    80d4:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    80d8:	00000003 	andeq	r0, r0, r3
    80dc:	51012100 	mrspl	r2, (UNDEF: 17)
    80e0:	00eb0802 	rsceq	r0, fp, r2, lsl #16
    80e4:	00000016 	andeq	r0, r0, r6, lsl r0
    80e8:	000e6600 	andeq	r6, lr, r0, lsl #12
    80ec:	00001600 	andeq	r1, r0, r0, lsl #12
    80f0:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    80f4:	00160000 	andseq	r0, r6, r0
    80f8:	66000000 	strvs	r0, [r0], -r0
    80fc:	1600000e 	strne	r0, [r0], -lr
    8100:	00000000 	andeq	r0, r0, r0
    8104:	00000e66 	andeq	r0, r0, r6, ror #28
    8108:	00000020 	andeq	r0, r0, r0, lsr #32
    810c:	000e5700 	andeq	r5, lr, r0, lsl #14
    8110:	000cc700 	andeq	ip, ip, r0, lsl #14
    8114:	50012100 	andpl	r2, r1, r0, lsl #2
    8118:	00000305 	andeq	r0, r0, r5, lsl #6
    811c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8120:	1d0a0351 	stcne	3, cr0, [sl, #-324]	; 0xfffffebc
    8124:	00200001 	eoreq	r0, r0, r1
    8128:	57000000 	strpl	r0, [r0, -r0]
    812c:	e500000e 	str	r0, [r0, #-14]
    8130:	2100000c 	tstcs	r0, ip
    8134:	03055001 	movweq	r5, #20481	; 0x5001
    8138:	00000000 	andeq	r0, r0, r0
    813c:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8140:	00011e0a 	andeq	r1, r1, sl, lsl #28
    8144:	00000016 	andeq	r0, r0, r6, lsl r0
    8148:	000e6600 	andeq	r6, lr, r0, lsl #12
    814c:	00001600 	andeq	r1, r0, r0, lsl #12
    8150:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8154:	00160000 	andseq	r0, r6, r0
    8158:	66000000 	strvs	r0, [r0], -r0
    815c:	1600000e 	strne	r0, [r0], -lr
    8160:	00000000 	andeq	r0, r0, r0
    8164:	00000e66 	andeq	r0, r0, r6, ror #28
    8168:	00000020 	andeq	r0, r0, r0, lsr #32
    816c:	000e5700 	andeq	r5, lr, r0, lsl #14
    8170:	000d2700 	andeq	r2, sp, r0, lsl #14
    8174:	50012100 	andpl	r2, r1, r0, lsl #2
    8178:	00000305 	andeq	r0, r0, r5, lsl #6
    817c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8180:	5e0a0351 	mcrpl	3, 0, r0, cr10, cr1, {2}
    8184:	00160001 	andseq	r0, r6, r1
    8188:	66000000 	strvs	r0, [r0], -r0
    818c:	1600000e 	strne	r0, [r0], -lr
    8190:	00000000 	andeq	r0, r0, r0
    8194:	00000e66 	andeq	r0, r0, r6, ror #28
    8198:	00000016 	andeq	r0, r0, r6, lsl r0
    819c:	000e6600 	andeq	r6, lr, r0, lsl #12
    81a0:	00001600 	andeq	r1, r0, r0, lsl #12
    81a4:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    81a8:	00200000 	eoreq	r0, r0, r0
    81ac:	57000000 	strpl	r0, [r0, -r0]
    81b0:	6900000e 	stmdbvs	r0, {r1, r2, r3}
    81b4:	2100000d 	tstcs	r0, sp
    81b8:	03055001 	movweq	r5, #20481	; 0x5001
    81bc:	00000000 	andeq	r0, r0, r0
    81c0:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    81c4:	0001cd0a 	andeq	ip, r1, sl, lsl #26
    81c8:	00000020 	andeq	r0, r0, r0, lsr #32
    81cc:	000e5700 	andeq	r5, lr, r0, lsl #14
    81d0:	000d8700 	andeq	r8, sp, r0, lsl #14
    81d4:	50012100 	andpl	r2, r1, r0, lsl #2
    81d8:	00000305 	andeq	r0, r0, r5, lsl #6
    81dc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    81e0:	d60a0351 			; <UNDEFINED> instruction: 0xd60a0351
    81e4:	00200001 	eoreq	r0, r0, r1
    81e8:	57000000 	strpl	r0, [r0, -r0]
    81ec:	a500000e 	strge	r0, [r0, #-14]
    81f0:	2100000d 	tstcs	r0, sp
    81f4:	03055001 	movweq	r5, #20481	; 0x5001
    81f8:	00000000 	andeq	r0, r0, r0
    81fc:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8200:	0001d70a 	andeq	sp, r1, sl, lsl #14
    8204:	00000020 	andeq	r0, r0, r0, lsr #32
    8208:	000e5700 	andeq	r5, lr, r0, lsl #14
    820c:	000dc300 	andeq	ip, sp, r0, lsl #6
    8210:	50012100 	andpl	r2, r1, r0, lsl #2
    8214:	00000305 	andeq	r0, r0, r5, lsl #6
    8218:	01210000 			; <UNDEFINED> instruction: 0x01210000
    821c:	d80a0351 	stmdale	sl, {r0, r4, r6, r8, r9}
    8220:	00200001 	eoreq	r0, r0, r1
    8224:	57000000 	strpl	r0, [r0, -r0]
    8228:	e100000e 	tst	r0, lr
    822c:	2100000d 	tstcs	r0, sp
    8230:	03055001 	movweq	r5, #20481	; 0x5001
    8234:	00000000 	andeq	r0, r0, r0
    8238:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    823c:	0001d90a 	andeq	sp, r1, sl, lsl #18
    8240:	00000020 	andeq	r0, r0, r0, lsr #32
    8244:	000e5700 	andeq	r5, lr, r0, lsl #14
    8248:	000dff00 	andeq	pc, sp, r0, lsl #30
    824c:	50012100 	andpl	r2, r1, r0, lsl #2
    8250:	00000305 	andeq	r0, r0, r5, lsl #6
    8254:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8258:	da0a0351 	ble	288fa4 <_Min_Heap_Size+0x2887a4>
    825c:	00160001 	andseq	r0, r6, r1
    8260:	66000000 	strvs	r0, [r0], -r0
    8264:	1600000e 	strne	r0, [r0], -lr
    8268:	00000000 	andeq	r0, r0, r0
    826c:	00000e66 	andeq	r0, r0, r6, ror #28
    8270:	00000016 	andeq	r0, r0, r6, lsl r0
    8274:	000e6600 	andeq	r6, lr, r0, lsl #12
    8278:	00001600 	andeq	r1, r0, r0, lsl #12
    827c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8280:	27000000 	strcs	r0, [r0, -r0]
    8284:	00184e01 	andseq	r4, r8, r1, lsl #28
    8288:	1ac80100 	bne	ff208690 <_estack+0xdf207458>
    828c:	00052001 	andeq	r2, r5, r1
	...
    8298:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    829c:	01012801 	tsteq	r1, r1, lsl #16
    82a0:	000014bd 			; <UNDEFINED> instruction: 0x000014bd
    82a4:	000014bd 			; <UNDEFINED> instruction: 0x000014bd
    82a8:	13010129 	movwne	r0, #4393	; 0x1129
    82ac:	1300000c 	movwne	r0, #12
    82b0:	0a00000c 	beq	82e8 <_Min_Heap_Size+0x7ae8>
    82b4:	012a07e0 	smulwteq	sl, r0, r7
    82b8:	000a0e01 	andeq	r0, sl, r1, lsl #28
    82bc:	000a0e00 	andeq	r0, sl, r0, lsl #28
    82c0:	01e60c00 	mvneq	r0, r0, lsl #24
    82c4:	01012908 	tsteq	r1, r8, lsl #18
    82c8:	000013a3 	andeq	r1, r0, r3, lsr #7
    82cc:	000013a3 	andeq	r1, r0, r3, lsr #7
    82d0:	290aea0b 	stmdbcs	sl, {r0, r1, r3, r9, fp, sp, lr, pc}
    82d4:	180e0101 	stmdane	lr, {r0, r8}
    82d8:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    82dc:	df0b0000 	svcle	0x000b0000
    82e0:	09da0013 	ldmibeq	sl, {r0, r1, r4}^
    82e4:	00020000 	andeq	r0, r2, r0
    82e8:	00000db5 			; <UNDEFINED> instruction: 0x00000db5
    82ec:	05880104 	streq	r0, [r8, #260]	; 0x104
    82f0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    82f4:	9500001a 	strls	r0, [r0, #-26]	; 0xffffffe6
    82f8:	a8000008 	stmdage	r0, {r3}
    82fc:	00000003 	andeq	r0, r0, r3
    8300:	00000000 	andeq	r0, r0, r0
    8304:	9c000000 	stcls	0, cr0, [r0], {-0}
    8308:	02000060 	andeq	r0, r0, #96	; 0x60
    830c:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    8310:	66030000 	strvs	r0, [r3], -r0
    8314:	02000000 	andeq	r0, r0, #0
    8318:	003c182b 	eorseq	r1, ip, fp, lsr #16
    831c:	01020000 	mrseq	r0, (UNDEF: 2)
    8320:	00057408 	andeq	r7, r5, r8, lsl #8
    8324:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8328:	000003fd 	strdeq	r0, [r0], -sp
    832c:	0006f503 	andeq	pc, r6, r3, lsl #10
    8330:	19390200 	ldmdbne	r9!, {r9}
    8334:	00000056 	andeq	r0, r0, r6, asr r0
    8338:	8f070202 	svchi	0x00070202
    833c:	02000007 	andeq	r0, r0, #7
    8340:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    8344:	c2030000 	andgt	r0, r3, #0
    8348:	02000002 	andeq	r0, r0, #2
    834c:	0070194f 	rsbseq	r1, r0, pc, asr #18
    8350:	04020000 	streq	r0, [r2], #-0
    8354:	0000b307 	andeq	fp, r0, r7, lsl #6
    8358:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    835c:	000002e7 	andeq	r0, r0, r7, ror #5
    8360:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    8364:	04000000 	streq	r0, [r0], #-0
    8368:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    836c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    8370:	0000b807 	andeq	fp, r0, r7, lsl #16
    8374:	00680300 	rsbeq	r0, r8, r0, lsl #6
    8378:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    837c:	00003013 	andeq	r3, r0, r3, lsl r0
    8380:	06f70300 	ldrbteq	r0, [r7], r0, lsl #6
    8384:	24030000 	strcs	r0, [r3], #-0
    8388:	00004a14 	andeq	r4, r0, r4, lsl sl
    838c:	02c40300 	sbceq	r0, r4, #0, 6
    8390:	30030000 	andcc	r0, r3, r0
    8394:	00006414 	andeq	r6, r0, r4, lsl r4
    8398:	00ab0500 	adceq	r0, fp, r0, lsl #10
    839c:	ab060000 	blge	1883a4 <_Min_Heap_Size+0x187ba4>
    83a0:	cc000000 	stcgt	0, cr0, [r0], {-0}
    83a4:	07000000 	streq	r0, [r0, -r0]
    83a8:	0000008c 	andeq	r0, r0, ip, lsl #1
    83ac:	18080001 	stmdane	r8, {r0}
    83b0:	09015a04 	stmdbeq	r1, {r2, r9, fp, ip, lr}
    83b4:	00000136 	andeq	r0, r0, r6, lsr r1
    83b8:	524d4909 	subpl	r4, sp, #147456	; 0x24000
    83bc:	015c0400 	cmpeq	ip, r0, lsl #8
    83c0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83c4:	00230200 	eoreq	r0, r3, r0, lsl #4
    83c8:	524d4509 	subpl	r4, sp, #37748736	; 0x2400000
    83cc:	015d0400 	cmpeq	sp, r0, lsl #8
    83d0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83d4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    83d8:	001a020a 	andseq	r0, sl, sl, lsl #4
    83dc:	015e0400 	cmpeq	lr, r0, lsl #8
    83e0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83e4:	08230200 	stmdaeq	r3!, {r9}
    83e8:	0019cb0a 	andseq	ip, r9, sl, lsl #22
    83ec:	015f0400 	cmpeq	pc, r0, lsl #8
    83f0:	0000b711 	andeq	fp, r0, r1, lsl r7
    83f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    83f8:	001a5d0a 	andseq	r5, sl, sl, lsl #26
    83fc:	01600400 	cmneq	r0, r0, lsl #8
    8400:	0000b711 	andeq	fp, r0, r1, lsl r7
    8404:	10230200 	eorne	r0, r3, r0, lsl #4
    8408:	00525009 	subseq	r5, r2, r9
    840c:	11016104 	tstne	r1, r4, lsl #2
    8410:	000000b7 	strheq	r0, [r0], -r7
    8414:	00142302 	andseq	r2, r4, r2, lsl #6
    8418:	0019600b 	andseq	r6, r9, fp
    841c:	01620400 	cmneq	r2, r0, lsl #8
    8420:	0000cc03 	andeq	ip, r0, r3, lsl #24
    8424:	04280800 	strteq	r0, [r8], #-2048	; 0xfffff800
    8428:	de0901ae 	adfle<illegal precision>p	f0, f1, #0.5
    842c:	0a000001 	beq	8438 <_Min_Heap_Size+0x7c38>
    8430:	00000fc4 	andeq	r0, r0, r4, asr #31
    8434:	1101b004 	tstne	r1, r4
    8438:	000000b7 	strheq	r0, [r0], -r7
    843c:	0a002302 	beq	1104c <_Min_Heap_Size+0x1084c>
    8440:	00000ed6 	ldrdeq	r0, [r0], -r6
    8444:	1101b104 	tstne	r1, r4, lsl #2
    8448:	000000b7 	strheq	r0, [r0], -r7
    844c:	0a042302 	beq	11105c <_Min_Heap_Size+0x11085c>
    8450:	00000d54 	andeq	r0, r0, r4, asr sp
    8454:	1101b204 	tstne	r1, r4, lsl #4
    8458:	000000b7 	strheq	r0, [r0], -r7
    845c:	0a082302 	beq	21106c <_Min_Heap_Size+0x21086c>
    8460:	00000d9e 	muleq	r0, lr, sp
    8464:	1101b304 	tstne	r1, r4, lsl #6
    8468:	000000b7 	strheq	r0, [r0], -r7
    846c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
    8470:	00524449 	subseq	r4, r2, r9, asr #8
    8474:	1101b404 	tstne	r1, r4, lsl #8
    8478:	000000b7 	strheq	r0, [r0], -r7
    847c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
    8480:	0052444f 	subseq	r4, r2, pc, asr #8
    8484:	1101b504 	tstne	r1, r4, lsl #10
    8488:	000000b7 	strheq	r0, [r0], -r7
    848c:	0a142302 	beq	51109c <_Min_Heap_Size+0x51089c>
    8490:	00000f77 	andeq	r0, r0, r7, ror pc
    8494:	1101b604 	tstne	r1, r4, lsl #12
    8498:	000000b7 	strheq	r0, [r0], -r7
    849c:	0a182302 	beq	6110ac <_Min_Heap_Size+0x6108ac>
    84a0:	00000d42 	andeq	r0, r0, r2, asr #26
    84a4:	1101b704 	tstne	r1, r4, lsl #14
    84a8:	000000b7 	strheq	r0, [r0], -r7
    84ac:	091c2302 	ldmdbeq	ip, {r1, r8, r9, sp}
    84b0:	00524641 	subseq	r4, r2, r1, asr #12
    84b4:	1101b804 	tstne	r1, r4, lsl #16
    84b8:	000001ee 	andeq	r0, r0, lr, ror #3
    84bc:	00202302 	eoreq	r2, r0, r2, lsl #6
    84c0:	0000b706 	andeq	fp, r0, r6, lsl #14
    84c4:	0001ee00 	andeq	lr, r1, r0, lsl #28
    84c8:	008c0700 	addeq	r0, ip, r0, lsl #14
    84cc:	00010000 	andeq	r0, r1, r0
    84d0:	0001de05 	andeq	sp, r1, r5, lsl #28
    84d4:	0f7c0b00 	svceq	0x007c0b00
    84d8:	b9040000 	stmdblt	r4, {}	; <UNPREDICTABLE>
    84dc:	01430301 	cmpeq	r3, r1, lsl #6
    84e0:	24080000 	strcs	r0, [r8], #-0
    84e4:	0901bf04 	stmdbeq	r1, {r2, r8, r9, sl, fp, ip, sp, pc}
    84e8:	0000025b 	andeq	r0, r0, fp, asr r2
    84ec:	0019320a 	andseq	r3, r9, sl, lsl #4
    84f0:	01c10400 	biceq	r0, r1, r0, lsl #8
    84f4:	0000b711 	andeq	fp, r0, r1, lsl r7
    84f8:	00230200 	eoreq	r0, r3, r0, lsl #4
    84fc:	434d5009 	movtmi	r5, #53257	; 0xd009
    8500:	01c20400 	biceq	r0, r2, r0, lsl #8
    8504:	0000b711 	andeq	fp, r0, r1, lsl r7
    8508:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    850c:	0019390a 	andseq	r3, r9, sl, lsl #18
    8510:	01c30400 	biceq	r0, r3, r0, lsl #8
    8514:	00026b11 	andeq	r6, r2, r1, lsl fp
    8518:	08230200 	stmdaeq	r3!, {r9}
    851c:	001a460a 	andseq	r4, sl, sl, lsl #12
    8520:	01c40400 	biceq	r0, r4, r0, lsl #8
    8524:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8528:	18230200 	stmdane	r3!, {r9}
    852c:	0019900a 	andseq	r9, r9, sl
    8530:	01c50400 	biceq	r0, r5, r0, lsl #8
    8534:	0000b711 	andeq	fp, r0, r1, lsl r7
    8538:	20230200 	eorcs	r0, r3, r0, lsl #4
    853c:	00b70600 	adcseq	r0, r7, r0, lsl #12
    8540:	026b0000 	rsbeq	r0, fp, #0
    8544:	8c070000 	stchi	0, cr0, [r7], {-0}
    8548:	03000000 	movweq	r0, #0
    854c:	025b0500 	subseq	r0, fp, #0, 10
    8550:	f30b0000 	vhadd.u8	d0, d11, d0
    8554:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    8558:	000301c6 	andeq	r0, r3, r6, asr #3
    855c:	08000002 	stmdaeq	r0, {r1}
    8560:	01f40488 	mvnseq	r0, r8, lsl #9
    8564:	00046909 	andeq	r6, r4, r9, lsl #18
    8568:	52430900 	subpl	r0, r3, #0, 18
    856c:	01f60400 	mvnseq	r0, r0, lsl #8
    8570:	0000b711 	andeq	fp, r0, r1, lsl r7
    8574:	00230200 	eoreq	r0, r3, r0, lsl #4
    8578:	0002820a 	andeq	r8, r2, sl, lsl #4
    857c:	01f70400 	mvnseq	r0, r0, lsl #8
    8580:	0000b711 	andeq	fp, r0, r1, lsl r7
    8584:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8588:	0002850a 	andeq	r8, r2, sl, lsl #10
    858c:	01f80400 	mvnseq	r0, r0, lsl #8
    8590:	0000b711 	andeq	fp, r0, r1, lsl r7
    8594:	08230200 	stmdaeq	r3!, {r9}
    8598:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
    859c:	01f90400 	mvnseq	r0, r0, lsl #8
    85a0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85a4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    85a8:	0001660a 	andeq	r6, r1, sl, lsl #12
    85ac:	01fa0400 	mvnseq	r0, r0, lsl #8
    85b0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85b4:	10230200 	eorne	r0, r3, r0, lsl #4
    85b8:	0007170a 	andeq	r1, r7, sl, lsl #14
    85bc:	01fb0400 	mvnseq	r0, r0, lsl #8
    85c0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85c4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    85c8:	00067c0a 	andeq	r7, r6, sl, lsl #24
    85cc:	01fc0400 	mvnseq	r0, r0, lsl #8
    85d0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85d4:	18230200 	stmdane	r3!, {r9}
    85d8:	00050f0a 	andeq	r0, r5, sl, lsl #30
    85dc:	01fd0400 	mvnseq	r0, r0, lsl #8
    85e0:	0000ab11 	andeq	sl, r0, r1, lsl fp
    85e4:	1c230200 	sfmne	f0, 4, [r3], #-0
    85e8:	0004fa0a 	andeq	pc, r4, sl, lsl #20
    85ec:	01fe0400 	mvnseq	r0, r0, lsl #8
    85f0:	0000b711 	andeq	fp, r0, r1, lsl r7
    85f4:	20230200 	eorcs	r0, r3, r0, lsl #4
    85f8:	0001f90a 	andeq	pc, r1, sl, lsl #18
    85fc:	01ff0400 	mvnseq	r0, r0, lsl #8
    8600:	0000b711 	andeq	fp, r0, r1, lsl r7
    8604:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    8608:	0005190a 	andeq	r1, r5, sl, lsl #18
    860c:	02000400 	andeq	r0, r0, #0, 8
    8610:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8614:	28230200 	stmdacs	r3!, {r9}
    8618:	0008810a 	andeq	r8, r8, sl, lsl #2
    861c:	02010400 	andeq	r0, r1, #0, 8
    8620:	0000b711 	andeq	fp, r0, r1, lsl r7
    8624:	30230200 	eorcc	r0, r3, r0, lsl #4
    8628:	0007870a 	andeq	r8, r7, sl, lsl #14
    862c:	02020400 	andeq	r0, r2, #0, 8
    8630:	0000b711 	andeq	fp, r0, r1, lsl r7
    8634:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    8638:	00049c0a 	andeq	r9, r4, sl, lsl #24
    863c:	02030400 	andeq	r0, r3, #0, 8
    8640:	0000b711 	andeq	fp, r0, r1, lsl r7
    8644:	38230200 	stmdacc	r3!, {r9}
    8648:	0005230a 	andeq	r2, r5, sl, lsl #6
    864c:	02040400 	andeq	r0, r4, #0, 8
    8650:	0000ab11 	andeq	sl, r0, r1, lsl fp
    8654:	3c230200 	sfmcc	f0, 4, [r3], #-0
    8658:	0006b70a 	andeq	fp, r6, sl, lsl #14
    865c:	02050400 	andeq	r0, r5, #0, 8
    8660:	0000b711 	andeq	fp, r0, r1, lsl r7
    8664:	40230200 	eormi	r0, r3, r0, lsl #4
    8668:	0006740a 	andeq	r7, r6, sl, lsl #8
    866c:	02060400 	andeq	r0, r6, #0, 8
    8670:	0000b711 	andeq	fp, r0, r1, lsl r7
    8674:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    8678:	00052d0a 	andeq	r2, r5, sl, lsl #26
    867c:	02070400 	andeq	r0, r7, #0, 8
    8680:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8684:	48230200 	stmdami	r3!, {r9}
    8688:	00012b0a 	andeq	r2, r1, sl, lsl #22
    868c:	02080400 	andeq	r0, r8, #0, 8
    8690:	0000b711 	andeq	fp, r0, r1, lsl r7
    8694:	50230200 	eorpl	r0, r3, r0, lsl #4
    8698:	0004d60a 	andeq	sp, r4, sl, lsl #12
    869c:	02090400 	andeq	r0, r9, #0, 8
    86a0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86a4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    86a8:	0006420a 	andeq	r4, r6, sl, lsl #4
    86ac:	020a0400 	andeq	r0, sl, #0, 8
    86b0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86b4:	58230200 	stmdapl	r3!, {r9}
    86b8:	0005370a 	andeq	r3, r5, sl, lsl #14
    86bc:	020b0400 	andeq	r0, fp, #0, 8
    86c0:	0000ab11 	andeq	sl, r0, r1, lsl fp
    86c4:	5c230200 	sfmpl	f0, 4, [r3], #-0
    86c8:	00001b0a 	andeq	r1, r0, sl, lsl #22
    86cc:	020c0400 	andeq	r0, ip, #0, 8
    86d0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86d4:	60230200 	eorvs	r0, r3, r0, lsl #4
    86d8:	0003ee0a 	andeq	lr, r3, sl, lsl #28
    86dc:	020d0400 	andeq	r0, sp, #0, 8
    86e0:	0000b711 	andeq	fp, r0, r1, lsl r7
    86e4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    86e8:	0005410a 	andeq	r4, r5, sl, lsl #2
    86ec:	020e0400 	andeq	r0, lr, #0, 8
    86f0:	0000bc11 	andeq	fp, r0, r1, lsl ip
    86f4:	68230200 	stmdavs	r3!, {r9}
    86f8:	0008090a 	andeq	r0, r8, sl, lsl #18
    86fc:	020f0400 	andeq	r0, pc, #0, 8
    8700:	0000b711 	andeq	fp, r0, r1, lsl r7
    8704:	70230200 	eorvc	r0, r3, r0, lsl #4
    8708:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
    870c:	02100400 	andseq	r0, r0, #0, 8
    8710:	0000b711 	andeq	fp, r0, r1, lsl r7
    8714:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    8718:	00054b0a 	andeq	r4, r5, sl, lsl #22
    871c:	02110400 	andseq	r0, r1, #0, 8
    8720:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8724:	78230200 	stmdavc	r3!, {r9}
    8728:	0007d80a 	andeq	sp, r7, sl, lsl #16
    872c:	02120400 	andseq	r0, r2, #0, 8
    8730:	0000b711 	andeq	fp, r0, r1, lsl r7
    8734:	80230300 	eorhi	r0, r3, r0, lsl #6
    8738:	03810a01 	orreq	r0, r1, #4096	; 0x1000
    873c:	13040000 	movwne	r0, #16384	; 0x4000
    8740:	00b71102 	adcseq	r1, r7, r2, lsl #2
    8744:	23030000 	movwcs	r0, #12288	; 0x3000
    8748:	0b000184 	bleq	8d60 <_Min_Heap_Size+0x8560>
    874c:	000001cd 	andeq	r0, r0, sp, asr #3
    8750:	03021404 	movweq	r1, #9220	; 0x2404
    8754:	0000027d 	andeq	r0, r0, sp, ror r2
    8758:	3c01070c 	stccc	7, cr0, [r1], {12}
    875c:	05000000 	streq	r0, [r0, #-0]
    8760:	049101b9 	ldreq	r0, [r1], #441	; 0x1b9
    8764:	1e0d0000 	cdpne	0, 0, cr0, cr13, cr0, {0}
    8768:	00000003 	andeq	r0, r0, r3
    876c:	5445530e 	strbpl	r5, [r5], #-782	; 0xfffffcf2
    8770:	02000100 	andeq	r0, r0, #0, 2
    8774:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    8778:	070c0000 	streq	r0, [ip, -r0]
    877c:	00003c01 	andeq	r3, r0, r1, lsl #24
    8780:	01270600 			; <UNDEFINED> instruction: 0x01270600
    8784:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    8788:	00034a0d 	andeq	r4, r3, sp, lsl #20
    878c:	ad0d0000 	stcge	0, cr0, [sp, #-0]
    8790:	01000006 	tsteq	r0, r6
    8794:	0008e90d 	andeq	lr, r8, sp, lsl #18
    8798:	2b0d0200 	blcs	348fa0 <_Min_Heap_Size+0x3487a0>
    879c:	03000003 	movweq	r0, #3
    87a0:	12fe0300 	rscsne	r0, lr, #0, 6
    87a4:	2c060000 	stccs	0, cr0, [r6], {-0}
    87a8:	00049803 	andeq	r9, r4, r3, lsl #16
    87ac:	07140f00 	ldreq	r0, [r4, -r0, lsl #30]
    87b0:	0520092e 	streq	r0, [r0, #-2350]!	; 0xfffff6d2
    87b4:	50100000 	andspl	r0, r0, r0
    87b8:	07006e69 	streq	r6, [r0, -r9, ror #28]
    87bc:	00ab0c30 	adceq	r0, fp, r0, lsr ip
    87c0:	23020000 	movwcs	r0, #8192	; 0x2000
    87c4:	069d1100 	ldreq	r1, [sp], r0, lsl #2
    87c8:	33070000 	movwcc	r0, #28672	; 0x7000
    87cc:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    87d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    87d4:	000e4011 	andeq	r4, lr, r1, lsl r0
    87d8:	0c360700 	ldceq	7, cr0, [r6], #-0
    87dc:	000000ab 	andeq	r0, r0, fp, lsr #1
    87e0:	11082302 	tstne	r8, r2, lsl #6
    87e4:	00000a6a 	andeq	r0, r0, sl, ror #20
    87e8:	ab0c3907 	blge	316c0c <_Min_Heap_Size+0x31640c>
    87ec:	02000000 	andeq	r0, r0, #0
    87f0:	ce110c23 	cdpgt	12, 1, cr0, cr1, cr3, {1}
    87f4:	0700000d 	streq	r0, [r0, -sp]
    87f8:	00ab0c3c 	adceq	r0, fp, ip, lsr ip
    87fc:	23020000 	movwcs	r0, #8192	; 0x2000
    8800:	8e030010 	mcrhi	0, 0, r0, cr3, cr0, {0}
    8804:	0700000b 	streq	r0, [r0, -fp]
    8808:	04cb023e 	strbeq	r0, [fp], #574	; 0x23e
    880c:	070c0000 	streq	r0, [ip, -r0]
    8810:	00003c01 	andeq	r3, r0, r1, lsl #24
    8814:	01440700 	cmpeq	r4, r0, lsl #14
    8818:	00000547 	andeq	r0, r0, r7, asr #10
    881c:	0019a00d 	andseq	sl, r9, sp
    8820:	530d0000 	movwpl	r0, #53248	; 0xd000
    8824:	01000019 	tsteq	r0, r9, lsl r0
    8828:	1a4f0300 	bne	13c9430 <_Min_Heap_Size+0x13c8c30>
    882c:	47070000 	strmi	r0, [r7, -r0]
    8830:	00052c02 	andeq	r2, r5, r2, lsl #24
    8834:	af011200 	svcge	0x00011200
    8838:	01000019 	tsteq	r0, r9, lsl r0
    883c:	010d01fb 	strdeq	r0, [sp, -fp]
	...
    8848:	01007d02 	tsteq	r0, r2, lsl #26
    884c:	0000057e 	andeq	r0, r0, lr, ror r5
    8850:	00190d13 	andseq	r0, r9, r3, lsl sp
    8854:	01fb0100 	mvnseq	r0, r0, lsl #2
    8858:	00009f2d 	andeq	r9, r0, sp, lsr #30
    885c:	00500100 	subseq	r0, r0, r0, lsl #2
    8860:	19d00114 	ldmibne	r0, {r2, r4, r8}^
    8864:	ec010000 	stc	0, cr0, [r1], {-0}
    8868:	00010601 	andeq	r0, r1, r1, lsl #12
    886c:	00000000 	andeq	r0, r0, r0
    8870:	47000000 	strmi	r0, [r0, -r0]
    8874:	01000058 	qaddeq	r0, r8, r0
    8878:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
    887c:	00190d15 	andseq	r0, r9, r5, lsl sp
    8880:	01ec0100 	mvneq	r0, r0, lsl #2
    8884:	00009f28 	andeq	r9, r0, r8, lsr #30
    8888:	00586f00 	subseq	r6, r8, r0, lsl #30
    888c:	00586700 	subseq	r6, r8, r0, lsl #14
    8890:	00001600 	andeq	r1, r0, r0, lsl #12
    8894:	05530000 	ldrbeq	r0, [r3, #-0]
    8898:	17000000 	strne	r0, [r0, -r0]
    889c:	00191601 	andseq	r1, r9, r1, lsl #12
    88a0:	01ca0100 	biceq	r0, sl, r0, lsl #2
    88a4:	04bf0113 	ldrteq	r0, [pc], #275	; 88ac <_Min_Heap_Size+0x80ac>
	...
    88b0:	58a90000 	stmiapl	r9!, {}	; <UNPREDICTABLE>
    88b4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    88b8:	15000006 	strne	r0, [r0, #-6]
    88bc:	00001a07 	andeq	r1, r0, r7, lsl #20
    88c0:	3201ca01 	andcc	ip, r1, #4096	; 0x1000
    88c4:	0000062e 	andeq	r0, r0, lr, lsr #12
    88c8:	000058f5 	strdeq	r5, [r0], -r5	; <UNPREDICTABLE>
    88cc:	000058ed 	andeq	r5, r0, sp, ror #17
    88d0:	00190d15 	andseq	r0, r9, r5, lsl sp
    88d4:	01ca0100 	biceq	r0, sl, r0, lsl #2
    88d8:	00009f42 	andeq	r9, r0, r2, asr #30
    88dc:	00593100 	subseq	r3, r9, r0, lsl #2
    88e0:	00592900 	subseq	r2, r9, r0, lsl #18
    88e4:	6d741800 	ldclvs	8, cr1, [r4, #-0]
    88e8:	cc010070 	stcgt	0, cr0, [r1], {112}	; 0x70
    88ec:	00b71101 	adcseq	r1, r7, r1, lsl #2
    88f0:	91020000 	mrsls	r0, (UNDEF: 2)
    88f4:	0000196c 	andeq	r1, r0, ip, ror #18
    88f8:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    88fc:	011a0000 	tsteq	sl, r0
    8900:	e0030550 	and	r0, r3, r0, asr r5
    8904:	1a08002c 	bne	2089bc <_Min_Heap_Size+0x2081bc>
    8908:	0a035101 	beq	dcd14 <_Min_Heap_Size+0xdc514>
    890c:	000001cf 	andeq	r0, r0, pc, asr #3
    8910:	01f3041b 	mvnseq	r0, fp, lsl r4
    8914:	01140000 	tsteq	r4, r0
    8918:	00001940 	andeq	r1, r0, r0, asr #18
    891c:	0601b101 	streq	fp, [r1], -r1, lsl #2
    8920:	00000001 	andeq	r0, r0, r1
    8924:	00000000 	andeq	r0, r0, r0
    8928:	00596b00 	subseq	r6, r9, r0, lsl #22
    892c:	06aa0100 	strteq	r0, [sl], r0, lsl #2
    8930:	07150000 	ldreq	r0, [r5, -r0]
    8934:	0100001a 	tsteq	r0, sl, lsl r0
    8938:	2e2701b1 	mcrcs	1, 1, r0, cr7, cr1, {5}
    893c:	93000006 	movwls	r0, #6
    8940:	8b000059 	blhi	8aac <_Min_Heap_Size+0x82ac>
    8944:	15000059 	strne	r0, [r0, #-89]	; 0xffffffa7
    8948:	0000190d 	andeq	r1, r0, sp, lsl #18
    894c:	3701b101 	strcc	fp, [r1, -r1, lsl #2]
    8950:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8954:	000059cf 	andeq	r5, r0, pc, asr #19
    8958:	000059c7 	andeq	r5, r0, r7, asr #19
    895c:	72646f1c 	rsbvc	r6, r4, #28, 30	; 0x70
    8960:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    8964:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    8968:	005a0b00 	subseq	r0, sl, r0, lsl #22
    896c:	005a0900 	subseq	r0, sl, r0, lsl #18
    8970:	00001900 	andeq	r1, r0, r0, lsl #18
    8974:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8978:	011a0000 	tsteq	sl, r0
    897c:	e0030550 	and	r0, r3, r0, asr r5
    8980:	1a08002c 	bne	208a38 <_Min_Heap_Size+0x208238>
    8984:	0a035101 	beq	dcd90 <_Min_Heap_Size+0xdc590>
    8988:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    898c:	197e0114 	ldmdbne	lr!, {r2, r4, r8}^
    8990:	9a010000 	bls	48998 <_Min_Heap_Size+0x48198>
    8994:	00010601 	andeq	r0, r1, r1, lsl #12
    8998:	00000000 	andeq	r0, r0, r0
    899c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    89a0:	0100005a 	qaddeq	r0, sl, r0
    89a4:	0000073e 	andeq	r0, r0, lr, lsr r7
    89a8:	001a0715 	andseq	r0, sl, r5, lsl r7
    89ac:	019a0100 	orrseq	r0, sl, r0, lsl #2
    89b0:	00062e26 	andeq	r2, r6, r6, lsr #28
    89b4:	005a4600 	subseq	r4, sl, r0, lsl #12
    89b8:	005a3e00 	subseq	r3, sl, r0, lsl #28
    89bc:	190d1500 	stmdbne	sp, {r8, sl, ip}
    89c0:	9a010000 	bls	489c8 <_Min_Heap_Size+0x481c8>
    89c4:	009f3601 	addseq	r3, pc, r1, lsl #12
    89c8:	5a820000 	bpl	fe0889d0 <_estack+0xde087798>
    89cc:	5a7a0000 	bpl	1e889d4 <_Min_Heap_Size+0x1e881d4>
    89d0:	54150000 	ldrpl	r0, [r5], #-0
    89d4:	0100001a 	tsteq	r0, sl, lsl r0
    89d8:	474e019a 			; <UNDEFINED> instruction: 0x474e019a
    89dc:	c4000005 	strgt	r0, [r0], #-5
    89e0:	bc00005a 	stclt	0, cr0, [r0], {90}	; 0x5a
    89e4:	1d00005a 	stcne	0, cr0, [r0, #-360]	; 0xfffffe98
    89e8:	00000000 	andeq	r0, r0, r0
    89ec:	000009ce 	andeq	r0, r0, lr, asr #19
    89f0:	00000723 	andeq	r0, r0, r3, lsr #14
    89f4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    89f8:	002ce003 	eoreq	lr, ip, r3
    89fc:	51011a08 	tstpl	r1, r8, lsl #20
    8a00:	019d0a03 	orrseq	r0, sp, r3, lsl #20
    8a04:	00001900 	andeq	r1, r0, r0, lsl #18
    8a08:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8a0c:	011a0000 	tsteq	sl, r0
    8a10:	e0030550 	and	r0, r3, r0, asr r5
    8a14:	1a08002c 	bne	208acc <_Min_Heap_Size+0x2082cc>
    8a18:	0a035101 	beq	dce24 <_Min_Heap_Size+0xdc624>
    8a1c:	0000019e 	muleq	r0, lr, r1
    8a20:	196d0117 	stmdbne	sp!, {r0, r1, r2, r4, r8}^
    8a24:	77010000 	strvc	r0, [r1, -r0]
    8a28:	47010f01 	strmi	r0, [r1, -r1, lsl #30]
    8a2c:	00000005 	andeq	r0, r0, r5
    8a30:	00000000 	andeq	r0, r0, r0
    8a34:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    8a38:	0100005a 	qaddeq	r0, sl, r0
    8a3c:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
    8a40:	001a0715 	andseq	r0, sl, r5, lsl r7
    8a44:	01770100 	cmneq	r7, r0, lsl #2
    8a48:	00062e2e 	andeq	r2, r6, lr, lsr #28
    8a4c:	005b2600 	subseq	r2, fp, r0, lsl #12
    8a50:	005b1e00 	subseq	r1, fp, r0, lsl #28
    8a54:	190d1500 	stmdbne	sp, {r8, sl, ip}
    8a58:	77010000 	strvc	r0, [r1, -r0]
    8a5c:	009f3e01 	addseq	r3, pc, r1, lsl #28
    8a60:	5b620000 	blpl	1888a68 <_Min_Heap_Size+0x1888268>
    8a64:	5b5a0000 	blpl	1688a6c <_Min_Heap_Size+0x168826c>
    8a68:	961e0000 	ldrls	r0, [lr], -r0
    8a6c:	01000019 	tsteq	r0, r9, lsl r0
    8a70:	47110179 			; <UNDEFINED> instruction: 0x47110179
    8a74:	9e000005 	cdpls	0, 0, cr0, cr0, cr5, {0}
    8a78:	9c00005b 	stcls	0, cr0, [r0], {91}	; 0x5b
    8a7c:	1900005b 	stmdbne	r0, {r0, r1, r3, r4, r6}
    8a80:	00000000 	andeq	r0, r0, r0
    8a84:	000009ce 	andeq	r0, r0, lr, asr #19
    8a88:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8a8c:	002ce003 	eoreq	lr, ip, r3
    8a90:	51011a08 	tstpl	r1, r8, lsl #20
    8a94:	017c0a03 	cmneq	ip, r3, lsl #20
    8a98:	01140000 	tsteq	r4, r0
    8a9c:	00000bc3 	andeq	r0, r0, r3, asr #23
    8aa0:	06012601 	streq	r2, [r1], -r1, lsl #12
    8aa4:	00000001 	andeq	r0, r0, r1
    8aa8:	00000000 	andeq	r0, r0, r0
    8aac:	005bb100 	subseq	fp, fp, r0, lsl #2
    8ab0:	086d0100 	stmdaeq	sp!, {r8}^
    8ab4:	07150000 	ldreq	r0, [r5, -r0]
    8ab8:	0100001a 	tsteq	r0, sl, lsl r0
    8abc:	2e250126 	sufcssp	f0, f5, f6
    8ac0:	d7000006 	strle	r0, [r0, -r6]
    8ac4:	d100005b 	qaddle	r0, fp, r0
    8ac8:	1500005b 	strne	r0, [r0, #-91]	; 0xffffffa5
    8acc:	0000190d 	andeq	r1, r0, sp, lsl #18
    8ad0:	35012601 	strcc	r2, [r1, #-1537]	; 0xfffff9ff
    8ad4:	000000ab 	andeq	r0, r0, fp, lsr #1
    8ad8:	00005c09 	andeq	r5, r0, r9, lsl #24
    8adc:	00005c03 	andeq	r5, r0, r3, lsl #24
    8ae0:	0019291e 	andseq	r2, r9, lr, lsl r9
    8ae4:	01280100 			; <UNDEFINED> instruction: 0x01280100
    8ae8:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    8aec:	005c3700 	subseq	r3, ip, r0, lsl #14
    8af0:	005c3500 	subseq	r3, ip, r0, lsl #10
    8af4:	19271e00 	stmdbne	r7!, {r9, sl, fp, ip}
    8af8:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    8afc:	00ab0c01 	adceq	r0, fp, r1, lsl #24
    8b00:	5c520000 	mrapl	r0, r2, acc0
    8b04:	5c4a0000 	marpl	acc0, r0, sl
    8b08:	e91e0000 	ldmdb	lr, {}	; <UNPREDICTABLE>
    8b0c:	01000019 	tsteq	r0, r9, lsl r0
    8b10:	ab0c012a 	blge	308fc0 <_Min_Heap_Size+0x3087c0>
    8b14:	95000000 	strls	r0, [r0, #-0]
    8b18:	8b00005c 	blhi	8c90 <_Min_Heap_Size+0x8490>
    8b1c:	1c00005c 	stcne	0, cr0, [r0], {92}	; 0x5c
    8b20:	00706d74 	rsbseq	r6, r0, r4, ror sp
    8b24:	0c012b01 			; <UNDEFINED> instruction: 0x0c012b01
    8b28:	000000ab 	andeq	r0, r0, fp, lsr #1
    8b2c:	00005ce9 	andeq	r5, r0, r9, ror #25
    8b30:	00005ce1 	andeq	r5, r0, r1, ror #25
    8b34:	00000019 	andeq	r0, r0, r9, lsl r0
    8b38:	0009ce00 	andeq	ip, r9, r0, lsl #28
    8b3c:	50011a00 	andpl	r1, r1, r0, lsl #20
    8b40:	2ce00305 	stclcs	3, cr0, [r0], #20
    8b44:	011a0800 	tsteq	sl, r0, lsl #16
    8b48:	2e0a0351 	mcrcs	3, 0, r0, cr10, cr1, {2}
    8b4c:	1f000001 	svcne	0x00000001
    8b50:	000c1301 	andeq	r1, ip, r1, lsl #6
    8b54:	06a40100 	strteq	r0, [r4], r0, lsl #2
    8b58:	00116401 	andseq	r6, r1, r1, lsl #8
    8b5c:	00144c08 	andseq	r4, r4, r8, lsl #24
    8b60:	005d1e08 	subseq	r1, sp, r8, lsl #28
    8b64:	09c80100 	stmibeq	r8, {r8}^
    8b68:	07200000 	streq	r0, [r0, -r0]!
    8b6c:	0100001a 	tsteq	r0, sl, lsl r0
    8b70:	062e23a4 	strteq	r2, [lr], -r4, lsr #7
    8b74:	5d5c0000 	ldclpl	0, cr0, [ip, #-0]
    8b78:	5d560000 	ldclpl	0, cr0, [r6, #-0]
    8b7c:	17200000 	strne	r0, [r0, -r0]!
    8b80:	0100000c 	tsteq	r0, ip
    8b84:	09c83ca4 	stmibeq	r8, {r2, r5, r7, sl, fp, ip, sp}^
    8b88:	5d8e0000 	stcpl	0, cr0, [lr]
    8b8c:	5d880000 	stcpl	0, cr0, [r8]
    8b90:	29210000 	stmdbcs	r1!, {}	; <UNPREDICTABLE>
    8b94:	01000019 	tsteq	r0, r9, lsl r0
    8b98:	00ab0ca6 	adceq	r0, fp, r6, lsr #25
    8b9c:	5dbc0000 	ldcpl	0, cr0, [ip]
    8ba0:	5dba0000 	ldcpl	0, cr0, [sl]
    8ba4:	27210000 	strcs	r0, [r1, -r0]!
    8ba8:	01000019 	tsteq	r0, r9, lsl r0
    8bac:	00ab0ca7 	adceq	r0, fp, r7, lsr #25
    8bb0:	5de10000 	stclpl	0, cr0, [r1]
    8bb4:	5dcf0000 	stclpl	0, cr0, [pc]	; 8bbc <_Min_Heap_Size+0x83bc>
    8bb8:	e9210000 	stmdb	r1!, {}	; <UNPREDICTABLE>
    8bbc:	01000019 	tsteq	r0, r9, lsl r0
    8bc0:	00ab0ca8 	adceq	r0, fp, r8, lsr #25
    8bc4:	5e680000 	cdppl	0, 6, cr0, cr8, cr0, {0}
    8bc8:	5e620000 	cdppl	0, 6, cr0, cr2, cr0, {0}
    8bcc:	c6210000 	strtgt	r0, [r1], -r0
    8bd0:	01000019 	tsteq	r0, r9, lsl r0
    8bd4:	00ab0ca9 	adceq	r0, fp, r9, lsr #25
    8bd8:	5ec20000 	cdppl	0, 12, cr0, cr2, cr0, {0}
    8bdc:	5e920000 	cdppl	0, 9, cr0, cr2, cr0, {0}
    8be0:	a8220000 	stmdage	r2!, {}	; <UNPREDICTABLE>
    8be4:	c0080013 	andgt	r0, r8, r3, lsl r0
    8be8:	1d080013 	stcne	0, cr0, [r8, #-76]	; 0xffffffb4
    8bec:	23000009 	movwcs	r0, #9
    8bf0:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    8bf4:	b709f101 	strlt	pc, [r9, -r1, lsl #2]
    8bf8:	02000000 	andeq	r0, r0, #0
    8bfc:	1d006491 	cfstrsne	mvf6, [r0, #-580]	; 0xfffffdbc
    8c00:	080011bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, ip}
    8c04:	000009ce 	andeq	r0, r0, lr, asr #19
    8c08:	0000093a 	andeq	r0, r0, sl, lsr r9
    8c0c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8c10:	002ce003 	eoreq	lr, ip, r3
    8c14:	51011a08 	tstpl	r1, r8, lsl #20
    8c18:	00ac0802 	adceq	r0, ip, r2, lsl #16
    8c1c:	0011d01d 	andseq	sp, r1, sp, lsl r0
    8c20:	0009ce08 	andeq	ip, r9, r8, lsl #28
    8c24:	00095700 	andeq	r5, r9, r0, lsl #14
    8c28:	50011a00 	andpl	r1, r1, r0, lsl #20
    8c2c:	2ce00305 	stclcs	3, cr0, [r0], #20
    8c30:	011a0800 	tsteq	sl, r0, lsl #16
    8c34:	ad080251 	sfmge	f0, 4, [r8, #-324]	; 0xfffffebc
    8c38:	12161d00 	andsne	r1, r6, #0, 26
    8c3c:	09ce0800 	stmibeq	lr, {fp}^
    8c40:	09740000 	ldmdbeq	r4!, {}^	; <UNPREDICTABLE>
    8c44:	011a0000 	tsteq	sl, r0
    8c48:	e0030550 	and	r0, r3, r0, asr r5
    8c4c:	1a08002c 	bne	208d04 <_Min_Heap_Size+0x208504>
    8c50:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    8c54:	4e1d00ae 	cdpmi	0, 1, cr0, cr13, cr14, {5}
    8c58:	ce080012 	mcrgt	0, 0, r0, cr8, cr2, {0}
    8c5c:	91000009 	tstls	r0, r9
    8c60:	1a000009 	bne	8c8c <_Min_Heap_Size+0x848c>
    8c64:	03055001 	movweq	r5, #20481	; 0x5001
    8c68:	08002ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, sp}
    8c6c:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    8c70:	1d00c008 	stcne	0, cr12, [r0, #-32]	; 0xffffffe0
    8c74:	08001258 	stmdaeq	r0, {r3, r4, r6, r9, ip}
    8c78:	000009ce 	andeq	r0, r0, lr, asr #19
    8c7c:	000009ae 	andeq	r0, r0, lr, lsr #19
    8c80:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8c84:	002ce003 	eoreq	lr, ip, r3
    8c88:	51011a08 	tstpl	r1, r8, lsl #20
    8c8c:	00d10802 	sbcseq	r0, r1, r2, lsl #16
    8c90:	0012b819 	andseq	fp, r2, r9, lsl r8
    8c94:	0009ce08 	andeq	ip, r9, r8, lsl #28
    8c98:	50011a00 	andpl	r1, r1, r0, lsl #20
    8c9c:	2ce00305 	stclcs	3, cr0, [r0], #20
    8ca0:	011a0800 	tsteq	sl, r0, lsl #16
    8ca4:	de080251 	mcrle	2, 0, r0, cr8, cr1, {2}
    8ca8:	041b0000 	ldreq	r0, [fp], #-0
    8cac:	00000520 	andeq	r0, r0, r0, lsr #10
    8cb0:	0e010124 	adfeqsp	f0, f1, f4
    8cb4:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    8cb8:	0800000a 	stmdaeq	r0, {r1, r3}
    8cbc:	000801e6 	andeq	r0, r8, r6, ror #3
    8cc0:	00000dd3 	ldrdeq	r0, [r0], -r3
    8cc4:	0fff0002 	svceq	0x00ff0002
    8cc8:	01040000 	mrseq	r0, (UNDEF: 4)
    8ccc:	00000588 	andeq	r0, r0, r8, lsl #11
    8cd0:	001b380c 	andseq	r3, fp, ip, lsl #16
    8cd4:	00089500 	andeq	r9, r8, r0, lsl #10
    8cd8:	0003f000 	andeq	pc, r3, r0
	...
    8ce4:	00692100 	rsbeq	r2, r9, r0, lsl #2
    8ce8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    8cec:	000000ae 	andeq	r0, r0, lr, lsr #1
    8cf0:	b8070402 	stmdalt	r7, {r1, sl}
    8cf4:	02000000 	andeq	r0, r0, #0
    8cf8:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    8cfc:	66030000 	strvs	r0, [r3], -r0
    8d00:	02000000 	andeq	r0, r0, #0
    8d04:	004a182b 	subeq	r1, sl, fp, lsr #16
    8d08:	01020000 	mrseq	r0, (UNDEF: 2)
    8d0c:	00057408 	andeq	r7, r5, r8, lsl #8
    8d10:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8d14:	000003fd 	strdeq	r0, [r0], -sp
    8d18:	8f070202 	svchi	0x00070202
    8d1c:	02000007 	andeq	r0, r0, #7
    8d20:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    8d24:	c2030000 	andgt	r0, r3, #0
    8d28:	02000002 	andeq	r0, r0, #2
    8d2c:	0072194f 	rsbseq	r1, r2, pc, asr #18
    8d30:	04020000 	streq	r0, [r2], #-0
    8d34:	0000b307 	andeq	fp, r0, r7, lsl #6
    8d38:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    8d3c:	000002e7 	andeq	r0, r0, r7, ror #5
    8d40:	69050404 	stmdbvs	r5, {r2, sl}
    8d44:	0300746e 	movweq	r7, #1134	; 0x46e
    8d48:	00000068 	andeq	r0, r0, r8, rrx
    8d4c:	3e131803 	cdpcc	8, 1, cr1, cr3, cr3, {0}
    8d50:	05000000 	streq	r0, [r0, #-0]
    8d54:	00000087 	andeq	r0, r0, r7, lsl #1
    8d58:	0002c403 	andeq	ip, r2, r3, lsl #8
    8d5c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    8d60:	00000066 	andeq	r0, r0, r6, rrx
    8d64:	00009806 	andeq	r9, r0, r6, lsl #16
    8d68:	17fe0700 	ldrbne	r0, [lr, r0, lsl #14]!
    8d6c:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    8d70:	00009811 	andeq	r9, r0, r1, lsl r8
    8d74:	08010100 	stmdaeq	r1, {r8}
    8d78:	00000093 	muleq	r0, r3, r0
    8d7c:	000000c7 	andeq	r0, r0, r7, asr #1
    8d80:	00003009 	andeq	r3, r0, r9
    8d84:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    8d88:	000000b7 	strheq	r0, [r0], -r7
    8d8c:	4404180a 	strmi	r1, [r4], #-2058	; 0xfffff7f6
    8d90:	01360901 	teqeq	r6, r1, lsl #18
    8d94:	430b0000 	movwmi	r0, #45056	; 0xb000
    8d98:	46040052 			; <UNDEFINED> instruction: 0x46040052
    8d9c:	00a41101 	adceq	r1, r4, r1, lsl #2
    8da0:	23020000 	movwcs	r0, #8192	; 0x2000
    8da4:	07550c00 	ldrbeq	r0, [r5, -r0, lsl #24]
    8da8:	47040000 	strmi	r0, [r4, -r0]
    8dac:	00a41101 	adceq	r1, r4, r1, lsl #2
    8db0:	23020000 	movwcs	r0, #8192	; 0x2000
    8db4:	41500b04 	cmpmi	r0, r4, lsl #22
    8db8:	48040052 	stmdami	r4, {r1, r4, r6}
    8dbc:	00a41101 	adceq	r1, r4, r1, lsl #2
    8dc0:	23020000 	movwcs	r0, #8192	; 0x2000
    8dc4:	00420c08 	subeq	r0, r2, r8, lsl #24
    8dc8:	49040000 	stmdbmi	r4, {}	; <UNPREDICTABLE>
    8dcc:	00a41101 	adceq	r1, r4, r1, lsl #2
    8dd0:	23020000 	movwcs	r0, #8192	; 0x2000
    8dd4:	07ae0c0c 	streq	r0, [lr, ip, lsl #24]!
    8dd8:	4a040000 	bmi	108de0 <_Min_Heap_Size+0x1085e0>
    8ddc:	00a41101 	adceq	r1, r4, r1, lsl #2
    8de0:	23020000 	movwcs	r0, #8192	; 0x2000
    8de4:	43460b10 	movtmi	r0, #27408	; 0x6b10
    8de8:	4b040052 	blmi	108f38 <_Min_Heap_Size+0x108738>
    8dec:	00a41101 	adceq	r1, r4, r1, lsl #2
    8df0:	23020000 	movwcs	r0, #8192	; 0x2000
    8df4:	740d0014 	strvc	r0, [sp], #-20	; 0xffffffec
    8df8:	04000007 	streq	r0, [r0], #-7
    8dfc:	cc03014c 	stfgts	f0, [r3], {76}	; 0x4c
    8e00:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8e04:	004a0107 	subeq	r0, sl, r7, lsl #2
    8e08:	b9050000 	stmdblt	r5, {}	; <UNPREDICTABLE>
    8e0c:	00015e01 	andeq	r5, r1, r1, lsl #28
    8e10:	031e0f00 	tsteq	lr, #0, 30
    8e14:	10000000 	andne	r0, r0, r0
    8e18:	00544553 	subseq	r4, r4, r3, asr r5
    8e1c:	08020001 	stmdaeq	r2, {r0}
    8e20:	0006bf04 	andeq	fp, r6, r4, lsl #30
    8e24:	01070e00 	tsteq	r7, r0, lsl #28
    8e28:	0000004a 	andeq	r0, r0, sl, asr #32
    8e2c:	8c012706 	stchi	7, cr2, [r1], {6}
    8e30:	0f000001 	svceq	0x00000001
    8e34:	0000034a 	andeq	r0, r0, sl, asr #6
    8e38:	06ad0f00 	strteq	r0, [sp], r0, lsl #30
    8e3c:	0f010000 	svceq	0x00010000
    8e40:	000008e9 	andeq	r0, r0, r9, ror #17
    8e44:	032b0f02 			; <UNDEFINED> instruction: 0x032b0f02
    8e48:	00030000 	andeq	r0, r3, r0
    8e4c:	0012fe03 	andseq	pc, r2, r3, lsl #28
    8e50:	032c0600 			; <UNDEFINED> instruction: 0x032c0600
    8e54:	00000165 	andeq	r0, r0, r5, ror #2
    8e58:	4a01070e 	bmi	4aa98 <_Min_Heap_Size+0x4a298>
    8e5c:	06000000 	streq	r0, [r0], -r0
    8e60:	01b30132 			; <UNDEFINED> instruction: 0x01b30132
    8e64:	dc0f0000 	stcle	0, cr0, [pc], {-0}
    8e68:	00000008 	andeq	r0, r0, r8
    8e6c:	0004910f 	andeq	r9, r4, pc, lsl #2
    8e70:	03000100 	movweq	r0, #256	; 0x100
    8e74:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
    8e78:	98033506 	stmdals	r3, {r1, r2, r8, sl, ip, sp}
    8e7c:	11000001 	tstne	r0, r1
    8e80:	09300730 	ldmdbeq	r0!, {r4, r5, r8, r9, sl}
    8e84:	0000027d 	andeq	r0, r0, sp, ror r2
    8e88:	00056c12 	andeq	r6, r5, r2, lsl ip
    8e8c:	0c320700 	ldceq	7, cr0, [r2], #-0
    8e90:	00000098 	muleq	r0, r8, r0
    8e94:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    8e98:	000002cd 	andeq	r0, r0, sp, asr #5
    8e9c:	980c3507 	stmdals	ip, {r0, r1, r2, r8, sl, ip, sp}
    8ea0:	02000000 	andeq	r0, r0, #0
    8ea4:	02120423 	andseq	r0, r2, #587202560	; 0x23000000
    8ea8:	07000002 	streq	r0, [r0, -r2]
    8eac:	00980c39 	addseq	r0, r8, r9, lsr ip
    8eb0:	23020000 	movwcs	r0, #8192	; 0x2000
    8eb4:	07201208 	streq	r1, [r0, -r8, lsl #4]!
    8eb8:	3c070000 	stccc	0, cr0, [r7], {-0}
    8ebc:	0000980c 	andeq	r9, r0, ip, lsl #16
    8ec0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8ec4:	0007b312 	andeq	fp, r7, r2, lsl r3
    8ec8:	0c3f0700 	ldceq	7, cr0, [pc], #-0	; 8ed0 <_Min_Heap_Size+0x86d0>
    8ecc:	00000098 	muleq	r0, r8, r0
    8ed0:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    8ed4:	000003cf 	andeq	r0, r0, pc, asr #7
    8ed8:	980c4207 	stmdals	ip, {r0, r1, r2, r9, lr}
    8edc:	02000000 	andeq	r0, r0, #0
    8ee0:	9d121423 	cfldrsls	mvf1, [r2, #-140]	; 0xffffff74
    8ee4:	07000006 	streq	r0, [r0, -r6]
    8ee8:	00980c45 	addseq	r0, r8, r5, asr #24
    8eec:	23020000 	movwcs	r0, #8192	; 0x2000
    8ef0:	1fa21218 	svcne	0x00a21218
    8ef4:	4a070000 	bmi	1c8efc <_Min_Heap_Size+0x1c86fc>
    8ef8:	0000980c 	andeq	r9, r0, ip, lsl #16
    8efc:	1c230200 	sfmne	f0, 4, [r3], #-0
    8f00:	00069912 	andeq	r9, r6, r2, lsl r9
    8f04:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    8f08:	00000098 	muleq	r0, r8, r0
    8f0c:	12202302 	eorne	r2, r0, #134217728	; 0x8000000
    8f10:	000006cb 	andeq	r0, r0, fp, asr #13
    8f14:	980c5207 	stmdals	ip, {r0, r1, r2, r9, ip, lr}
    8f18:	02000000 	andeq	r0, r0, #0
    8f1c:	15122423 	ldrne	r2, [r2, #-1059]	; 0xfffffbdd
    8f20:	07000002 	streq	r0, [r0, -r2]
    8f24:	00980c55 	addseq	r0, r8, r5, asr ip
    8f28:	23020000 	movwcs	r0, #8192	; 0x2000
    8f2c:	07271228 	streq	r1, [r7, -r8, lsr #4]!
    8f30:	5b070000 	blpl	1c8f38 <_Min_Heap_Size+0x1c8738>
    8f34:	0000980c 	andeq	r9, r0, ip, lsl #16
    8f38:	2c230200 	sfmcs	f0, 4, [r3], #-0
    8f3c:	00470300 	subeq	r0, r7, r0, lsl #6
    8f40:	60070000 	andvs	r0, r7, r0
    8f44:	0001bf02 	andeq	fp, r1, r2, lsl #30
    8f48:	01070e00 	tsteq	r7, r0, lsl #28
    8f4c:	0000004a 	andeq	r0, r0, sl, asr #32
    8f50:	bc016707 	stclt	7, cr6, [r1], {7}
    8f54:	0f000002 	svceq	0x00000002
    8f58:	00000310 	andeq	r0, r0, r0, lsl r3
    8f5c:	04230f00 	strteq	r0, [r3], #-3840	; 0xfffff100
    8f60:	0f010000 	svceq	0x00010000
    8f64:	00000440 	andeq	r0, r0, r0, asr #8
    8f68:	082f0f02 	stmdaeq	pc!, {r1, r8, r9, sl, fp}	; <UNPREDICTABLE>
    8f6c:	0f030000 	svceq	0x00030000
    8f70:	0000022d 	andeq	r0, r0, sp, lsr #4
    8f74:	03910f04 	orrseq	r0, r1, #4, 30
    8f78:	00050000 	andeq	r0, r5, r0
    8f7c:	00062d03 	andeq	r2, r6, r3, lsl #26
    8f80:	026e0700 	rsbeq	r0, lr, #0, 14
    8f84:	00000289 	andeq	r0, r0, r9, lsl #5
    8f88:	0002bc06 	andeq	fp, r2, r6, lsl #24
    8f8c:	01070e00 	tsteq	r7, r0, lsl #28
    8f90:	0000004a 	andeq	r0, r0, sl, asr #32
    8f94:	e8017407 	stmda	r1, {r0, r1, r2, sl, ip, sp, lr}
    8f98:	0f000002 	svceq	0x00000002
    8f9c:	00001b8d 	andeq	r1, r0, sp, lsl #23
    8fa0:	1b140f00 	blne	50cba8 <_Min_Heap_Size+0x50c3a8>
    8fa4:	00010000 	andeq	r0, r1, r0
    8fa8:	001b7003 	andseq	r7, fp, r3
    8fac:	02770700 	rsbseq	r0, r7, #0, 14
    8fb0:	000002cd 	andeq	r0, r0, sp, asr #5
    8fb4:	4a01070e 	bmi	4abf4 <_Min_Heap_Size+0x4a3f4>
    8fb8:	07000000 	streq	r0, [r0, -r0]
    8fbc:	032d017d 			; <UNDEFINED> instruction: 0x032d017d
    8fc0:	c60f0000 	strgt	r0, [pc], -r0
    8fc4:	0000001a 	andeq	r0, r0, sl, lsl r0
    8fc8:	001c910f 	andseq	r9, ip, pc, lsl #2
    8fcc:	cb0f0100 	blgt	3c93d4 <_Min_Heap_Size+0x3c8bd4>
    8fd0:	0200001b 	andeq	r0, r0, #27
    8fd4:	001cad0f 	andseq	sl, ip, pc, lsl #26
    8fd8:	fb0f0300 	blx	3c9be2 <_Min_Heap_Size+0x3c93e2>
    8fdc:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    8fe0:	001a630f 	andseq	r6, sl, pc, lsl #6
    8fe4:	4f0f0500 	svcmi	0x000f0500
    8fe8:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    8fec:	1bb10300 	blne	fec49bf4 <_estack+0xdec489bc>
    8ff0:	85070000 	strhi	r0, [r7, #-0]
    8ff4:	0002f402 	andeq	pc, r2, r2, lsl #8
    8ff8:	06851300 	streq	r1, [r5], r0, lsl #6
    8ffc:	07600000 	strbeq	r0, [r0, -r0]!
    9000:	0419108a 	ldreq	r1, [r9], #-138	; 0xffffff76
    9004:	a4120000 	ldrge	r0, [r2], #-0
    9008:	07000004 	streq	r0, [r0, -r4]
    900c:	04191f8c 	ldreq	r1, [r9], #-3980	; 0xfffff074
    9010:	23020000 	movwcs	r0, #8192	; 0x2000
    9014:	1a841200 	bne	fe10d81c <_estack+0xde10c5e4>
    9018:	8e070000 	cdphi	0, 0, cr0, cr7, cr0, {0}
    901c:	00027d1e 	andeq	r7, r2, lr, lsl sp
    9020:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9024:	0002a812 	andeq	sl, r2, r2, lsl r8
    9028:	1e900700 	cdpne	7, 9, cr0, cr0, cr0, {0}
    902c:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    9030:	12342302 	eorsne	r2, r4, #134217728	; 0x8000000
    9034:	0000030a 	andeq	r0, r0, sl, lsl #6
    9038:	c81e9207 	ldmdagt	lr, {r0, r1, r2, r9, ip, pc}
    903c:	02000002 	andeq	r0, r0, #2
    9040:	a1123523 	tstge	r2, r3, lsr #10
    9044:	07000002 	streq	r0, [r0, -r2]
    9048:	041f1f94 	ldreq	r1, [pc], #-3988	; 9050 <_Min_Heap_Size+0x8850>
    904c:	23020000 	movwcs	r0, #8192	; 0x2000
    9050:	091f1238 	ldmdbeq	pc, {r3, r4, r5, r9, ip}	; <UNPREDICTABLE>
    9054:	96070000 	strls	r0, [r7], -r0
    9058:	00043321 	andeq	r3, r4, r1, lsr #6
    905c:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9060:	0001d912 	andeq	sp, r1, r2, lsl r9
    9064:	21980700 	orrscs	r0, r8, r0, lsl #14
    9068:	00000433 	andeq	r0, r0, r3, lsr r4
    906c:	12402302 	subne	r2, r0, #134217728	; 0x8000000
    9070:	00000197 	muleq	r0, r7, r1
    9074:	33219a07 			; <UNDEFINED> instruction: 0x33219a07
    9078:	02000004 	andeq	r0, r0, #4
    907c:	55124423 	ldrpl	r4, [r2, #-1059]	; 0xfffffbdd
    9080:	07000005 	streq	r0, [r0, -r5]
    9084:	0433219c 	ldrteq	r2, [r3], #-412	; 0xfffffe64
    9088:	23020000 	movwcs	r0, #8192	; 0x2000
    908c:	04ad1248 	strteq	r1, [sp], #584	; 0x248
    9090:	9e070000 	cdpls	0, 0, cr0, cr7, cr0, {0}
    9094:	00043321 	andeq	r3, r4, r1, lsr #6
    9098:	4c230200 	sfmmi	f0, 4, [r3], #-0
    909c:	00090d12 	andeq	r0, r9, r2, lsl sp
    90a0:	21a00700 	lslcs	r0, r0, #14
    90a4:	00000433 	andeq	r0, r0, r3, lsr r4
    90a8:	12502302 	subsne	r2, r0, #134217728	; 0x8000000
    90ac:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    90b0:	a41ea207 	ldrge	sl, [lr], #-519	; 0xfffffdf9
    90b4:	02000000 	andeq	r0, r0, #0
    90b8:	8a125423 	bhi	49e14c <_Min_Heap_Size+0x49d94c>
    90bc:	07000002 	streq	r0, [r0, -r2]
    90c0:	00981ea4 	addseq	r1, r8, r4, lsr #29
    90c4:	23020000 	movwcs	r0, #8192	; 0x2000
    90c8:	033e1258 	teqeq	lr, #88, 4	; 0x80000005
    90cc:	a6070000 	strge	r0, [r7], -r0
    90d0:	0000981e 	andeq	r9, r0, lr, lsl r8
    90d4:	5c230200 	sfmpl	f0, 4, [r3], #-0
    90d8:	36041400 	strcc	r1, [r4], -r0, lsl #8
    90dc:	15000001 	strne	r0, [r0, #-1]
    90e0:	2d011604 	stccs	6, cr1, [r1, #-16]
    90e4:	17000004 	strne	r0, [r0, -r4]
    90e8:	0000042d 	andeq	r0, r0, sp, lsr #8
    90ec:	39041400 	stmdbcc	r4, {sl, ip}
    90f0:	14000003 	strne	r0, [r0], #-3
    90f4:	00042104 	andeq	r2, r4, r4, lsl #2
    90f8:	06870300 	streq	r0, [r7], r0, lsl #6
    90fc:	a8070000 	stmdage	r7, {}	; <UNPREDICTABLE>
    9100:	00033902 	andeq	r3, r3, r2, lsl #18
    9104:	39041400 	stmdbcc	r4, {sl, ip}
    9108:	11000004 	tstne	r0, r4
    910c:	096f010c 	stmdbeq	pc!, {r2, r3, r8}^	; <UNPREDICTABLE>
    9110:	00000482 	andeq	r0, r0, r2, lsl #9
    9114:	52534918 	subspl	r4, r3, #24, 18	; 0x60000
    9118:	11710100 	cmnne	r1, r0, lsl #2
    911c:	000000a4 	andeq	r0, r0, r4, lsr #1
    9120:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    9124:	00001aa2 	andeq	r1, r0, r2, lsr #21
    9128:	a4117201 	ldrge	r7, [r1], #-513	; 0xfffffdff
    912c:	02000000 	andeq	r0, r0, #0
    9130:	f3120423 	vshl.u16	d0, d19, d2
    9134:	0100001b 	tsteq	r0, fp, lsl r0
    9138:	00a41173 	adceq	r1, r4, r3, ror r1
    913c:	23020000 	movwcs	r0, #8192	; 0x2000
    9140:	66030008 	strvs	r0, [r3], -r8
    9144:	0100001c 	tsteq	r0, ip, lsl r0
    9148:	044b0374 	strbeq	r0, [fp], #-884	; 0xfffffc8c
    914c:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    9150:	0100001c 	tsteq	r0, ip, lsl r0
    9154:	011a04bd 			; <UNDEFINED> instruction: 0x011a04bd
    9158:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9164:	01007d02 	tsteq	r0, r2, lsl #26
    9168:	000004ec 	andeq	r0, r0, ip, ror #9
    916c:	0013871a 	andseq	r8, r3, sl, lsl r7
    9170:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
    9174:	00044540 	andeq	r4, r4, r0, asr #10
    9178:	00601600 	rsbeq	r1, r0, r0, lsl #12
    917c:	005fda00 	subseq	sp, pc, r0, lsl #20
    9180:	19991b00 	ldmibne	r9, {r8, r9, fp, ip}
    9184:	bf010000 	svclt	0x00010000
    9188:	018c1504 	orreq	r1, ip, r4, lsl #10
    918c:	61990000 	orrsvs	r0, r9, r0
    9190:	61950000 	orrsvs	r0, r5, r0
    9194:	741c0000 	ldrvc	r0, [ip], #-0
    9198:	0100706d 	tsteq	r0, sp, rrx
    919c:	980c04c0 	stmdals	ip, {r6, r7, sl}
    91a0:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    91a4:	b8000061 	stmdalt	r0, {r0, r5, r6}
    91a8:	00000061 	andeq	r0, r0, r1, rrx
    91ac:	001c791d 	andseq	r7, ip, sp, lsl r9
    91b0:	04a10100 	strteq	r0, [r1], #256	; 0x100
    91b4:	00980111 	addseq	r0, r8, r1, lsl r1
	...
    91c0:	63510000 	cmpvs	r1, #0
    91c4:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    91c8:	1a000005 	bne	91e4 <_Min_Heap_Size+0x89e4>
    91cc:	00001387 	andeq	r1, r0, r7, lsl #7
    91d0:	3c04a101 	stfccd	f2, [r4], {1}
    91d4:	00000445 	andeq	r0, r0, r5, asr #8
    91d8:	0000638f 	andeq	r6, r0, pc, lsl #7
    91dc:	00006389 	andeq	r6, r0, r9, lsl #7
    91e0:	001ba31b 	andseq	sl, fp, fp, lsl r3
    91e4:	04a30100 	strteq	r0, [r3], #256	; 0x100
    91e8:	0000980c 	andeq	r9, r0, ip, lsl #16
    91ec:	0063bf00 	rsbeq	fp, r3, r0, lsl #30
    91f0:	0063bb00 	rsbeq	fp, r3, r0, lsl #22
    91f4:	1aac1e00 	bne	feb109fc <_estack+0xdeb0f7c4>
    91f8:	a6010000 	strge	r0, [r1], -r0
    91fc:	00c71804 	sbceq	r1, r7, r4, lsl #16
    9200:	03050000 	movweq	r0, #20480	; 0x5000
    9204:	00000000 	andeq	r0, r0, r0
    9208:	1b2a1f00 	blne	a90e10 <_Min_Heap_Size+0xa90610>
    920c:	7f010000 	svcvc	0x00010000
    9210:	00010d04 	andeq	r0, r1, r4, lsl #26
    9214:	00000000 	andeq	r0, r0, r0
    9218:	fa000000 	blx	9220 <_Min_Heap_Size+0x8a20>
    921c:	01000063 	tsteq	r0, r3, rrx
    9220:	000005a7 	andeq	r0, r0, r7, lsr #11
    9224:	00138720 	andseq	r8, r3, r0, lsr #14
    9228:	047f0100 	ldrbteq	r0, [pc], #-256	; 9230 <_Min_Heap_Size+0x8a30>
    922c:	0004452e 	andeq	r4, r4, lr, lsr #10
    9230:	20500100 	subscs	r0, r0, r0, lsl #2
    9234:	00001cd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    9238:	3d047f01 	stccc	15, cr7, [r4, #-4]
    923c:	00000098 	muleq	r0, r8, r0
    9240:	f8205101 			; <UNDEFINED> instruction: 0xf8205101
    9244:	0100001b 	tsteq	r0, fp, lsl r0
    9248:	9852047f 	ldmdals	r2, {r0, r1, r2, r3, r4, r5, r6, sl}^
    924c:	01000000 	mrseq	r0, (UNDEF: 0)
    9250:	1cdc1a52 	vldmiane	ip, {s3-s84}
    9254:	7f010000 	svcvc	0x00010000
    9258:	00986704 	addseq	r6, r8, r4, lsl #14
    925c:	643c0000 	ldrtvs	r0, [ip], #-0
    9260:	64320000 	ldrtvs	r0, [r2], #-0
    9264:	21000000 	mrscs	r0, (UNDEF: 0)
    9268:	00166501 	andseq	r6, r6, r1, lsl #10
    926c:	04650100 	strbteq	r0, [r5], #-256	; 0xffffff00
    9270:	0098010a 	addseq	r0, r8, sl, lsl #2
	...
    927c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9280:	05dc0100 	ldrbeq	r0, [ip, #256]	; 0x100
    9284:	871a0000 	ldrhi	r0, [sl, -r0]
    9288:	01000013 	tsteq	r0, r3, lsl r0
    928c:	452e0465 	strmi	r0, [lr, #-1125]!	; 0xfffffb9b
    9290:	87000004 	strhi	r0, [r0, -r4]
    9294:	83000064 	movwhi	r0, #100	; 0x64
    9298:	00000064 	andeq	r0, r0, r4, rrx
    929c:	1ce70121 	stfnee	f0, [r7], #132	; 0x84
    92a0:	5a010000 	bpl	492a8 <_Min_Heap_Size+0x48aa8>
    92a4:	bc011604 	stclt	6, cr1, [r1], {4}
    92a8:	00000002 	andeq	r0, r0, r2
    92ac:	00000000 	andeq	r0, r0, r0
    92b0:	02000000 	andeq	r0, r0, #0
    92b4:	1101007d 	tstne	r1, sp, ror r0
    92b8:	1a000006 	bne	92d8 <_Min_Heap_Size+0x8ad8>
    92bc:	00001387 	andeq	r1, r0, r7, lsl #7
    92c0:	3a045a01 	bcc	11facc <_Min_Heap_Size+0x11f2cc>
    92c4:	00000445 	andeq	r0, r0, r5, asr #8
    92c8:	000064ac 	andeq	r6, r0, ip, lsr #9
    92cc:	000064a8 	andeq	r6, r0, r8, lsr #9
    92d0:	21012100 	mrscs	r2, (UNDEF: 17)
    92d4:	0100001c 	tsteq	r0, ip, lsl r0
    92d8:	01130405 	tsteq	r3, r5, lsl #8
    92dc:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    92e8:	01007d02 	tsteq	r0, r2, lsl #26
    92ec:	0000066a 	andeq	r0, r0, sl, ror #12
    92f0:	0013871a 	andseq	r8, r3, sl, lsl r7
    92f4:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    92f8:	00044541 	andeq	r4, r4, r1, asr #10
    92fc:	0064d500 	rsbeq	sp, r4, r0, lsl #10
    9300:	0064cd00 	rsbeq	ip, r4, r0, lsl #26
    9304:	1c032000 	stcne	0, cr2, [r3], {-0}
    9308:	05010000 	streq	r0, [r1, #-0]
    930c:	032d6104 			; <UNDEFINED> instruction: 0x032d6104
    9310:	51010000 	mrspl	r0, (UNDEF: 1)
    9314:	0019991b 	andseq	r9, r9, fp, lsl r9
    9318:	04070100 	streq	r0, [r7], #-256	; 0xffffff00
    931c:	00018c15 	andeq	r8, r1, r5, lsl ip
    9320:	00650f00 	rsbeq	r0, r5, r0, lsl #30
    9324:	00650900 	rsbeq	r0, r5, r0, lsl #18
    9328:	01210000 			; <UNDEFINED> instruction: 0x01210000
    932c:	00001a89 	andeq	r1, r0, r9, lsl #21
    9330:	1303c701 	movwne	ip, #14081	; 0x3701
    9334:	00018c01 	andeq	r8, r1, r1, lsl #24
	...
    9340:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9344:	0006d801 	andeq	sp, r6, r1, lsl #16
    9348:	13871a00 	orrne	r1, r7, #0, 20
    934c:	c7010000 	strgt	r0, [r1, -r0]
    9350:	04453f03 	strbeq	r3, [r5], #-3843	; 0xfffff0fd
    9354:	653e0000 	ldrvs	r0, [lr, #-0]!
    9358:	653a0000 	ldrvs	r0, [sl, #-0]!
    935c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    9360:	0100001c 	tsteq	r0, ip, lsl r0
    9364:	2d5f03c7 	ldclcs	3, cr0, [pc, #-796]	; 9050 <_Min_Heap_Size+0x8850>
    9368:	01000003 	tsteq	r0, r3
    936c:	1cf81a51 	vldmiane	r8!, {s3-s83}
    9370:	c7010000 	strgt	r0, [r1, -r0]
    9374:	06e47303 	strbteq	r7, [r4], r3, lsl #6
    9378:	65620000 	strbvs	r0, [r2, #-0]!
    937c:	655c0000 	ldrbvs	r0, [ip, #-0]
    9380:	991b0000 	ldmdbls	fp, {}	; <UNPREDICTABLE>
    9384:	01000019 	tsteq	r0, r9, lsl r0
    9388:	8c1503ca 	ldchi	3, cr0, [r5], {202}	; 0xca
    938c:	94000001 	strls	r0, [r0], #-1
    9390:	8e000065 	cdphi	0, 0, cr0, cr0, cr5, {3}
    9394:	00000065 	andeq	r0, r0, r5, rrx
    9398:	06e40116 	usateq	r0, #4, r6, lsl #2
    939c:	45170000 	ldrmi	r0, [r7, #-0]
    93a0:	00000004 	andeq	r0, r0, r4
    93a4:	06d80414 			; <UNDEFINED> instruction: 0x06d80414
    93a8:	01220000 			; <UNDEFINED> instruction: 0x01220000
    93ac:	00001c3c 	andeq	r1, r0, ip, lsr ip
    93b0:	0602ea01 	streq	lr, [r2], -r1, lsl #20
    93b4:	00000001 	andeq	r0, r0, r1
    93b8:	00000000 	andeq	r0, r0, r0
    93bc:	0065bf00 	rsbeq	fp, r5, r0, lsl #30
    93c0:	07e70100 	strbeq	r0, [r7, r0, lsl #2]!
    93c4:	871a0000 	ldrhi	r0, [sl, -r0]
    93c8:	01000013 	tsteq	r0, r3, lsl r0
    93cc:	452c02ea 	strmi	r0, [ip, #-746]!	; 0xfffffd16
    93d0:	05000004 	streq	r0, [r0, #-4]
    93d4:	f7000066 			; <UNDEFINED> instruction: 0xf7000066
    93d8:	1b000065 	blne	9574 <_Min_Heap_Size+0x8d74>
    93dc:	00001abf 			; <UNDEFINED> instruction: 0x00001abf
    93e0:	0c02ec01 	stceq	12, cr14, [r2], {1}
    93e4:	00000098 	muleq	r0, r8, r0
    93e8:	0000665f 	andeq	r6, r0, pc, asr r6
    93ec:	0000665d 	andeq	r6, r0, sp, asr r6
    93f0:	001ccb1e 	andseq	ip, ip, lr, lsl fp
    93f4:	02ed0100 	rsceq	r0, sp, #0, 2
    93f8:	0000a411 	andeq	sl, r0, r1, lsl r4
    93fc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    9400:	001d021b 	andseq	r0, sp, fp, lsl r2
    9404:	02ee0100 	rsceq	r0, lr, #0, 2
    9408:	0000980c 	andeq	r9, r0, ip, lsl #16
    940c:	00667400 	rsbeq	r7, r6, r0, lsl #8
    9410:	00667200 	rsbeq	r7, r6, r0, lsl #4
    9414:	1d0a1b00 	vstrne	d1, [sl, #-0]
    9418:	f1010000 	setend	le
    941c:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    9420:	66890000 	strvs	r0, [r9], r0
    9424:	66870000 	strvs	r0, [r7], r0
    9428:	00230000 	eoreq	r0, r3, r0
    942c:	7a000000 	bvc	9434 <_Min_Heap_Size+0x8c34>
    9430:	24000007 	strcs	r0, [r0], #-7
    9434:	74025001 	strvc	r5, [r2], #-1
    9438:	00230000 	eoreq	r0, r3, r0
    943c:	8a000000 	bhi	9444 <_Min_Heap_Size+0x8c44>
    9440:	24000007 	strcs	r0, [r0], #-7
    9444:	74025001 	strvc	r5, [r2], #-1
    9448:	00230000 	eoreq	r0, r3, r0
    944c:	9a000000 	bls	9454 <_Min_Heap_Size+0x8c54>
    9450:	24000007 	strcs	r0, [r0], #-7
    9454:	74025001 	strvc	r5, [r2], #-1
    9458:	00230000 	eoreq	r0, r3, r0
    945c:	aa000000 	bge	9464 <_Min_Heap_Size+0x8c64>
    9460:	24000007 	strcs	r0, [r0], #-7
    9464:	74025001 	strvc	r5, [r2], #-1
    9468:	00230000 	eoreq	r0, r3, r0
    946c:	ba000000 	blt	9474 <_Min_Heap_Size+0x8c74>
    9470:	24000007 	strcs	r0, [r0], #-7
    9474:	74025001 	strvc	r5, [r2], #-1
    9478:	00230000 	eoreq	r0, r3, r0
    947c:	ca000000 	bgt	9484 <_Min_Heap_Size+0x8c84>
    9480:	24000007 	strcs	r0, [r0], #-7
    9484:	74025001 	strvc	r5, [r2], #-1
    9488:	00230000 	eoreq	r0, r3, r0
    948c:	da000000 	ble	9494 <_Min_Heap_Size+0x8c94>
    9490:	24000007 	strcs	r0, [r0], #-7
    9494:	74025001 	strvc	r5, [r2], #-1
    9498:	00250000 	eoreq	r0, r5, r0
    949c:	24000000 	strcs	r0, [r0], #-0
    94a0:	74025001 	strvc	r5, [r2], #-1
    94a4:	14000000 	strne	r0, [r0], #-0
    94a8:	00048204 	andeq	r8, r4, r4, lsl #4
    94ac:	1e012600 	cfmadd32ne	mvax0, mvfx2, mvfx1, mvfx0
    94b0:	0100001d 	tsteq	r0, sp, lsl r0
    94b4:	01130262 	tsteq	r3, r2, ror #4
    94b8:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    94c4:	0000669c 	muleq	r0, ip, r6
    94c8:	0008d101 	andeq	sp, r8, r1, lsl #2
    94cc:	13871a00 	orrne	r1, r7, #0, 20
    94d0:	62010000 	andvs	r0, r1, #0
    94d4:	04453e02 	strbeq	r3, [r5], #-3586	; 0xfffff1fe
    94d8:	66c00000 	strbvs	r0, [r0], r0
    94dc:	66bc0000 	ldrtvs	r0, [ip], r0
    94e0:	e51a0000 	ldr	r0, [sl, #-0]
    94e4:	0100001b 	tsteq	r0, fp, lsl r0
    94e8:	e8610262 	stmda	r1!, {r1, r5, r6, r9}^
    94ec:	e2000002 	and	r0, r0, #2
    94f0:	de000066 	cdple	0, 0, cr0, cr0, cr6, {3}
    94f4:	1a000066 	bne	9694 <_Min_Heap_Size+0x8e94>
    94f8:	00001434 	andeq	r1, r0, r4, lsr r4
    94fc:	79026201 	stmdbvc	r2, {r0, r9, sp, lr}
    9500:	00000098 	muleq	r0, r8, r0
    9504:	00006707 	andeq	r6, r0, r7, lsl #14
    9508:	00006703 	andeq	r6, r0, r3, lsl #14
    950c:	00199927 	andseq	r9, r9, r7, lsr #18
    9510:	02640100 	rsbeq	r0, r4, #0, 2
    9514:	00018c15 	andeq	r8, r1, r5, lsl ip
    9518:	0f1b0000 	svceq	0x001b0000
    951c:	0100001d 	tsteq	r0, sp, lsl r0
    9520:	980c0265 	stmdals	ip, {r0, r2, r5, r6, r9}
    9524:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    9528:	25000067 	strcs	r0, [r0, #-103]	; 0xffffff99
    952c:	1b000067 	blne	96d0 <_Min_Heap_Size+0x8ed0>
    9530:	00001549 	andeq	r1, r0, r9, asr #10
    9534:	0c026601 	stceq	6, cr6, [r2], {1}
    9538:	00000098 	muleq	r0, r8, r0
    953c:	00006755 	andeq	r6, r0, r5, asr r7
    9540:	00006747 	andeq	r6, r0, r7, asr #14
    9544:	001abf1b 	andseq	fp, sl, fp, lsl pc
    9548:	02670100 	rsbeq	r0, r7, #0, 2
    954c:	0000980c 	andeq	r9, r0, ip, lsl #16
    9550:	0067ae00 	rsbeq	sl, r7, r0, lsl #28
    9554:	0067aa00 	rsbeq	sl, r7, r0, lsl #20
    9558:	1d0a1b00 	vstrne	d1, [sl, #-0]
    955c:	6a010000 	bvs	49564 <_Min_Heap_Size+0x48d64>
    9560:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    9564:	67d00000 	ldrbvs	r0, [r0, r0]
    9568:	67cc0000 	strbvs	r0, [ip, r0]
    956c:	00280000 	eoreq	r0, r8, r0
    9570:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    9574:	2800000d 	stmdacs	r0, {r0, r2, r3}
    9578:	00000000 	andeq	r0, r0, r0
    957c:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    9580:	00000029 	andeq	r0, r0, r9, lsr #32
    9584:	00090600 	andeq	r0, r9, r0, lsl #12
    9588:	50012400 	andpl	r2, r1, r0, lsl #8
    958c:	00007402 	andeq	r7, r0, r2, lsl #8
    9590:	d4012100 	strle	r2, [r1], #-256	; 0xffffff00
    9594:	01000010 	tsteq	r0, r0, lsl r0
    9598:	01130244 	tsteq	r3, r4, asr #4
    959c:	0000018c 	andeq	r0, r0, ip, lsl #3
    95a0:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
    95a4:	08001506 	stmdaeq	r0, {r1, r2, r8, sl, ip}
    95a8:	01007d02 	tsteq	r0, r2, lsl #26
    95ac:	00000906 	andeq	r0, r0, r6, lsl #18
    95b0:	0013871a 	andseq	r8, r3, sl, lsl r7
    95b4:	02440100 	subeq	r0, r4, #0, 2
    95b8:	00044537 	andeq	r4, r4, r7, lsr r5
    95bc:	0067f600 	rsbeq	pc, r7, r0, lsl #12
    95c0:	0067ee00 	rsbeq	lr, r7, r0, lsl #28
    95c4:	01260000 			; <UNDEFINED> instruction: 0x01260000
    95c8:	00001310 	andeq	r1, r0, r0, lsl r3
    95cc:	13020101 	movwne	r0, #8449	; 0x2101
    95d0:	00018c01 	andeq	r8, r1, r1, lsl #24
    95d4:	00144c00 	andseq	r4, r4, r0, lsl #24
    95d8:	0014e008 	andseq	lr, r4, r8
    95dc:	00683008 	rsbeq	r3, r8, r8
    95e0:	09780100 	ldmdbeq	r8!, {r8}^
    95e4:	871a0000 	ldrhi	r0, [sl, -r0]
    95e8:	01000013 	tsteq	r0, r3, lsl r0
    95ec:	45340201 	ldrmi	r0, [r4, #-513]!	; 0xfffffdff
    95f0:	54000004 	strpl	r0, [r0], #-4
    95f4:	50000068 	andpl	r0, r0, r8, rrx
    95f8:	1b000068 	blne	97a0 <_Min_Heap_Size+0x8fa0>
    95fc:	00001d0a 	andeq	r1, r0, sl, lsl #26
    9600:	17020401 	strne	r0, [r2, -r1, lsl #8]
    9604:	000007e7 	andeq	r0, r0, r7, ror #15
    9608:	00006874 	andeq	r6, r0, r4, ror r8
    960c:	00006872 	andeq	r6, r0, r2, ror r8
    9610:	0015491b 	andseq	r4, r5, fp, lsl r9
    9614:	02060100 	andeq	r0, r6, #0, 2
    9618:	0000980c 	andeq	r9, r0, ip, lsl #16
    961c:	00689100 	rsbeq	r9, r8, r0, lsl #2
    9620:	00688700 	rsbeq	r8, r8, r0, lsl #14
    9624:	14562800 	ldrbne	r2, [r6], #-2048	; 0xfffff800
    9628:	0db90800 	ldceq	8, cr0, [r9]
    962c:	aa280000 	bge	a09634 <_Min_Heap_Size+0xa08e34>
    9630:	b9080014 	stmdblt	r8, {r2, r4}
    9634:	0000000d 	andeq	r0, r0, sp
    9638:	11ae0126 			; <UNDEFINED> instruction: 0x11ae0126
    963c:	c3010000 	movwgt	r0, #4096	; 0x1000
    9640:	8c011301 	stchi	3, cr1, [r1], {1}
    9644:	00000001 	andeq	r0, r0, r1
    9648:	00000000 	andeq	r0, r0, r0
    964c:	d0000000 	andle	r0, r0, r0
    9650:	01000068 	tsteq	r0, r8, rrx
    9654:	00000a57 	andeq	r0, r0, r7, asr sl
    9658:	0013871a 	andseq	r8, r3, sl, lsl r7
    965c:	01c30100 	biceq	r0, r3, r0, lsl #2
    9660:	00044537 	andeq	r4, r4, r7, lsr r5
    9664:	0068f800 	rsbeq	pc, r8, r0, lsl #16
    9668:	0068f000 	rsbeq	pc, r8, r0
    966c:	1cd11a00 	vldmiane	r1, {s3-s2}
    9670:	c3010000 	movwgt	r0, #4096	; 0x1000
    9674:	00984601 	addseq	r4, r8, r1, lsl #12
    9678:	69340000 	ldmdbvs	r4!, {}	; <UNPREDICTABLE>
    967c:	692c0000 	stmdbvs	ip!, {}	; <UNPREDICTABLE>
    9680:	f81a0000 			; <UNDEFINED> instruction: 0xf81a0000
    9684:	0100001b 	tsteq	r0, fp, lsl r0
    9688:	985b01c3 	ldmdals	fp, {r0, r1, r6, r7, r8}^
    968c:	6c000000 	stcvs	0, cr0, [r0], {-0}
    9690:	68000069 	stmdavs	r0, {r0, r3, r5, r6}
    9694:	1a000069 	bne	9840 <_Min_Heap_Size+0x9040>
    9698:	00001cdc 	ldrdeq	r1, [r0], -ip
    969c:	7001c301 	andvc	ip, r1, r1, lsl #6
    96a0:	00000098 	muleq	r0, r8, r0
    96a4:	0000698e 	andeq	r6, r0, lr, lsl #19
    96a8:	0000698a 	andeq	r6, r0, sl, lsl #19
    96ac:	0019991b 	andseq	r9, r9, fp, lsl r9
    96b0:	01c50100 	biceq	r0, r5, r0, lsl #2
    96b4:	00018c15 	andeq	r8, r1, r5, lsl ip
    96b8:	0069b200 	rsbeq	fp, r9, r0, lsl #4
    96bc:	0069ac00 	rsbeq	sl, r9, r0, lsl #24
    96c0:	1d0a1b00 	vstrne	d1, [sl, #-0]
    96c4:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    96c8:	07e71701 	strbeq	r1, [r7, r1, lsl #14]!
    96cc:	69e00000 	stmibvs	r0!, {}^	; <UNPREDICTABLE>
    96d0:	69de0000 	ldmibvs	lr, {}^	; <UNPREDICTABLE>
    96d4:	002a0000 	eoreq	r0, sl, r0
    96d8:	c7000000 	strgt	r0, [r0, -r0]
    96dc:	3400000d 	strcc	r0, [r0], #-13
    96e0:	2400000a 	strcs	r0, [r0], #-10
    96e4:	03055001 	movweq	r5, #20481	; 0x5001
    96e8:	00000000 	andeq	r0, r0, r0
    96ec:	03510124 	cmpeq	r1, #36, 2
    96f0:	0001cb0a 	andeq	ip, r1, sl, lsl #22
    96f4:	00000029 	andeq	r0, r0, r9, lsr #32
    96f8:	00054900 	andeq	r4, r5, r0, lsl #18
    96fc:	50012400 	andpl	r2, r1, r0, lsl #8
    9700:	24007402 	strcs	r7, [r0], #-1026	; 0xfffffbfe
    9704:	76025101 	strvc	r5, [r2], -r1, lsl #2
    9708:	52012400 	andpl	r2, r1, #0, 8
    970c:	24007702 	strcs	r7, [r0], #-1794	; 0xfffff8fe
    9710:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    9714:	26000000 	strcs	r0, [r0], -r0
    9718:	001ade01 	andseq	sp, sl, r1, lsl #28
    971c:	01970100 	orrseq	r0, r7, r0, lsl #2
    9720:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    972c:	69f30000 	ldmibvs	r3!, {}^	; <UNPREDICTABLE>
    9730:	21010000 	mrscs	r0, (UNDEF: 1)
    9734:	1a00000b 	bne	9768 <_Min_Heap_Size+0x8f68>
    9738:	00001387 	andeq	r1, r0, r7, lsl #7
    973c:	34019701 	strcc	r9, [r1], #-1793	; 0xfffff8ff
    9740:	00000445 	andeq	r0, r0, r5, asr #8
    9744:	00006a1b 	andeq	r6, r0, fp, lsl sl
    9748:	00006a13 	andeq	r6, r0, r3, lsl sl
    974c:	001cd11a 	andseq	sp, ip, sl, lsl r1
    9750:	01970100 	orrseq	r0, r7, r0, lsl #2
    9754:	00009843 	andeq	r9, r0, r3, asr #16
    9758:	006a5700 	rsbeq	r5, sl, r0, lsl #14
    975c:	006a4f00 	rsbeq	r4, sl, r0, lsl #30
    9760:	1bf81a00 	blne	ffe0ff68 <_estack+0xdfe0ed30>
    9764:	97010000 	strls	r0, [r1, -r0]
    9768:	00985801 	addseq	r5, r8, r1, lsl #16
    976c:	6a8f0000 	bvs	fe3c9774 <_estack+0xde3c853c>
    9770:	6a8b0000 	bvs	fe2c9778 <_estack+0xde2c8540>
    9774:	dc1a0000 	ldcle	0, cr0, [sl], {-0}
    9778:	0100001c 	tsteq	r0, ip, lsl r0
    977c:	986d0197 	stmdals	sp!, {r0, r1, r2, r4, r7, r8}^
    9780:	b1000000 	mrslt	r0, (UNDEF: 0)
    9784:	ad00006a 	stcge	0, cr0, [r0, #-424]	; 0xfffffe58
    9788:	1b00006a 	blne	9938 <_Min_Heap_Size+0x9138>
    978c:	00001999 	muleq	r0, r9, r9
    9790:	15019901 	strne	r9, [r1, #-2305]	; 0xfffff6ff
    9794:	0000018c 	andeq	r0, r0, ip, lsl #3
    9798:	00006ad5 	ldrdeq	r6, [r0], -r5
    979c:	00006acf 	andeq	r6, r0, pc, asr #21
    97a0:	0000002a 	andeq	r0, r0, sl, lsr #32
    97a4:	000dc700 	andeq	ip, sp, r0, lsl #14
    97a8:	000afe00 	andeq	pc, sl, r0, lsl #28
    97ac:	50012400 	andpl	r2, r1, r0, lsl #8
    97b0:	00000305 	andeq	r0, r0, r5, lsl #6
    97b4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    97b8:	9c0a0351 	stcls	3, cr0, [sl], {81}	; 0x51
    97bc:	00290001 	eoreq	r0, r9, r1
    97c0:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    97c4:	24000005 	strcs	r0, [r0], #-5
    97c8:	74025001 	strvc	r5, [r2], #-1
    97cc:	51012400 	tstpl	r1, r0, lsl #8
    97d0:	24007602 	strcs	r7, [r0], #-1538	; 0xfffff9fe
    97d4:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    97d8:	53012400 	movwpl	r2, #5120	; 0x1400
    97dc:	00007502 	andeq	r7, r0, r2, lsl #10
    97e0:	ec012600 	stc	6, cr2, [r1], {-0}
    97e4:	0100001a 	tsteq	r0, sl, lsl r0
    97e8:	01130135 	tsteq	r3, r5, lsr r1
    97ec:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    97f8:	00006b01 	andeq	r6, r0, r1, lsl #22
    97fc:	000b9a01 	andeq	r9, fp, r1, lsl #20
    9800:	13871a00 	orrne	r1, r7, #0, 20
    9804:	35010000 	strcc	r0, [r1, #-0]
    9808:	04453501 	strbeq	r3, [r5], #-1281	; 0xfffffaff
    980c:	6b350000 	blvs	d49814 <_Min_Heap_Size+0xd49014>
    9810:	6b2d0000 	blvs	b49818 <_Min_Heap_Size+0xb49018>
    9814:	0a1b0000 	beq	6c981c <_Min_Heap_Size+0x6c901c>
    9818:	0100001d 	tsteq	r0, sp, lsl r0
    981c:	e7170137 			; <UNDEFINED> instruction: 0xe7170137
    9820:	6e000007 	cdpvs	0, 0, cr0, cr0, cr7, {0}
    9824:	6c00006b 	stcvs	0, cr0, [r0], {107}	; 0x6b
    9828:	2a00006b 	bcs	99dc <_Min_Heap_Size+0x91dc>
    982c:	00000000 	andeq	r0, r0, r0
    9830:	00000dc7 	andeq	r0, r0, r7, asr #27
    9834:	00000b89 	andeq	r0, r0, r9, lsl #23
    9838:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    983c:	00000003 	andeq	r0, r0, r3
    9840:	51012400 	tstpl	r1, r0, lsl #8
    9844:	01470a03 	cmpeq	r7, r3, lsl #20
    9848:	00002900 	andeq	r2, r0, r0, lsl #18
    984c:	04ec0000 	strbteq	r0, [ip], #0
    9850:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9854:	00750250 	rsbseq	r0, r5, r0, asr r2
    9858:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    985c:	00001a7c 	andeq	r1, r0, ip, ror sl
    9860:	0113aa01 	tsteq	r3, r1, lsl #20
    9864:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9870:	00006b81 	andeq	r6, r0, r1, lsl #23
    9874:	000db901 	andeq	fp, sp, r1, lsl #18
    9878:	13872c00 	orrne	r2, r7, #0, 24
    987c:	aa010000 	bge	49884 <_Min_Heap_Size+0x49084>
    9880:	00044533 	andeq	r4, r4, r3, lsr r5
    9884:	006ba500 	rsbeq	sl, fp, r0, lsl #10
    9888:	006ba100 	rsbeq	sl, fp, r0, lsl #2
    988c:	6d742d00 	ldclvs	13, cr2, [r4, #-0]
    9890:	ac010070 	stcge	0, cr0, [r1], {112}	; 0x70
    9894:	0000980c 	andeq	r9, r0, ip, lsl #16
    9898:	006bd500 	rsbeq	sp, fp, r0, lsl #10
    989c:	006bc300 	rsbeq	ip, fp, r0, lsl #6
    98a0:	15492e00 	strbne	r2, [r9, #-3584]	; 0xfffff200
    98a4:	ad010000 	stcge	0, cr0, [r1, #-0]
    98a8:	0000980c 	andeq	r9, r0, ip, lsl #16
    98ac:	006c4d00 	rsbeq	r4, ip, r0, lsl #26
    98b0:	006c4300 	rsbeq	r4, ip, r0, lsl #6
    98b4:	1d0a2e00 	stcne	14, cr2, [sl, #-0]
    98b8:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    98bc:	0007e717 	andeq	lr, r7, r7, lsl r7
    98c0:	006c8e00 	rsbeq	r8, ip, r0, lsl #28
    98c4:	006c8c00 	rsbeq	r8, ip, r0, lsl #24
    98c8:	00002800 	andeq	r2, r0, r0, lsl #16
    98cc:	0db90000 	ldceq	0, cr0, [r9]
    98d0:	002a0000 	eoreq	r0, sl, r0
    98d4:	c7000000 	strgt	r0, [r0, -r0]
    98d8:	2f00000d 	svccs	0x0000000d
    98dc:	2400000c 	strcs	r0, [r0], #-12
    98e0:	03055001 	movweq	r5, #20481	; 0x5001
    98e4:	00000000 	andeq	r0, r0, r0
    98e8:	02510124 	subseq	r0, r1, #36, 2
    98ec:	2800b708 	stmdacs	r0, {r3, r8, r9, sl, ip, sp, pc}
    98f0:	00000000 	andeq	r0, r0, r0
    98f4:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    98f8:	0000002a 	andeq	r0, r0, sl, lsr #32
    98fc:	000dc700 	andeq	ip, sp, r0, lsl #14
    9900:	000c5500 	andeq	r5, ip, r0, lsl #10
    9904:	50012400 	andpl	r2, r1, r0, lsl #8
    9908:	00000305 	andeq	r0, r0, r5, lsl #6
    990c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9910:	b8080251 	stmdalt	r8, {r0, r4, r6, r9}
    9914:	00002a00 	andeq	r2, r0, r0, lsl #20
    9918:	0dc70000 	stcleq	0, cr0, [r7]
    991c:	0c720000 	ldcleq	0, cr0, [r2], #-0
    9920:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9924:	00030550 	andeq	r0, r3, r0, asr r5
    9928:	24000000 	strcs	r0, [r0], #-0
    992c:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9930:	002a00b9 	strhteq	r0, [sl], -r9
    9934:	c7000000 	strgt	r0, [r0, -r0]
    9938:	8f00000d 	svchi	0x0000000d
    993c:	2400000c 	strcs	r0, [r0], #-12
    9940:	03055001 	movweq	r5, #20481	; 0x5001
    9944:	00000000 	andeq	r0, r0, r0
    9948:	02510124 	subseq	r0, r1, #36, 2
    994c:	2a00ba08 	bcs	38174 <_Min_Heap_Size+0x37974>
    9950:	00000000 	andeq	r0, r0, r0
    9954:	00000dc7 	andeq	r0, r0, r7, asr #27
    9958:	00000cac 	andeq	r0, r0, ip, lsr #25
    995c:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9960:	00000003 	andeq	r0, r0, r3
    9964:	51012400 	tstpl	r1, r0, lsl #8
    9968:	00bb0802 	adcseq	r0, fp, r2, lsl #16
    996c:	0000002a 	andeq	r0, r0, sl, lsr #32
    9970:	000dc700 	andeq	ip, sp, r0, lsl #14
    9974:	000cc900 	andeq	ip, ip, r0, lsl #18
    9978:	50012400 	andpl	r2, r1, r0, lsl #8
    997c:	00000305 	andeq	r0, r0, r5, lsl #6
    9980:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9984:	bc080251 	sfmlt	f0, 4, [r8], {81}	; 0x51
    9988:	00002a00 	andeq	r2, r0, r0, lsl #20
    998c:	0dc70000 	stcleq	0, cr0, [r7]
    9990:	0ce60000 	stcleq	0, cr0, [r6]
    9994:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9998:	00030550 	andeq	r0, r3, r0, asr r5
    999c:	24000000 	strcs	r0, [r0], #-0
    99a0:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    99a4:	002a00bd 	strhteq	r0, [sl], -sp
    99a8:	c7000000 	strgt	r0, [r0, -r0]
    99ac:	0300000d 	movweq	r0, #13
    99b0:	2400000d 	strcs	r0, [r0], #-13
    99b4:	03055001 	movweq	r5, #20481	; 0x5001
    99b8:	00000000 	andeq	r0, r0, r0
    99bc:	02510124 	subseq	r0, r1, #36, 2
    99c0:	2a00be08 	bcs	391e8 <_Min_Heap_Size+0x389e8>
    99c4:	00000000 	andeq	r0, r0, r0
    99c8:	00000dc7 	andeq	r0, r0, r7, asr #27
    99cc:	00000d20 	andeq	r0, r0, r0, lsr #26
    99d0:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    99d4:	00000003 	andeq	r0, r0, r3
    99d8:	51012400 	tstpl	r1, r0, lsl #8
    99dc:	00bf0802 	adcseq	r0, pc, r2, lsl #16
    99e0:	0000002a 	andeq	r0, r0, sl, lsr #32
    99e4:	000dc700 	andeq	ip, sp, r0, lsl #14
    99e8:	000d3d00 	andeq	r3, sp, r0, lsl #26
    99ec:	50012400 	andpl	r2, r1, r0, lsl #8
    99f0:	00000305 	andeq	r0, r0, r5, lsl #6
    99f4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    99f8:	c0080251 	andgt	r0, r8, r1, asr r2
    99fc:	00002a00 	andeq	r2, r0, r0, lsl #20
    9a00:	0dc70000 	stcleq	0, cr0, [r7]
    9a04:	0d5a0000 	ldcleq	0, cr0, [sl, #-0]
    9a08:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9a0c:	00030550 	andeq	r0, r3, r0, asr r5
    9a10:	24000000 	strcs	r0, [r0], #-0
    9a14:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9a18:	002a00c5 	eoreq	r0, sl, r5, asr #1
    9a1c:	c7000000 	strgt	r0, [r0, -r0]
    9a20:	7700000d 	strvc	r0, [r0, -sp]
    9a24:	2400000d 	strcs	r0, [r0], #-13
    9a28:	03055001 	movweq	r5, #20481	; 0x5001
    9a2c:	00000000 	andeq	r0, r0, r0
    9a30:	02510124 	subseq	r0, r1, #36, 2
    9a34:	2a00c608 	bcs	3b25c <_Min_Heap_Size+0x3aa5c>
    9a38:	00000000 	andeq	r0, r0, r0
    9a3c:	00000dc7 	andeq	r0, r0, r7, asr #27
    9a40:	00000d94 	muleq	r0, r4, sp
    9a44:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9a48:	00000003 	andeq	r0, r0, r3
    9a4c:	51012400 	tstpl	r1, r0, lsl #8
    9a50:	00c70802 	sbceq	r0, r7, r2, lsl #16
    9a54:	0000002a 	andeq	r0, r0, sl, lsr #32
    9a58:	00048e00 	andeq	r8, r4, r0, lsl #28
    9a5c:	000da800 	andeq	sl, sp, r0, lsl #16
    9a60:	50012400 	andpl	r2, r1, r0, lsl #8
    9a64:	00007402 	andeq	r7, r0, r2, lsl #8
    9a68:	00000029 	andeq	r0, r0, r9, lsr #32
    9a6c:	0004ec00 	andeq	lr, r4, r0, lsl #24
    9a70:	50012400 	andpl	r2, r1, r0, lsl #8
    9a74:	00007402 	andeq	r7, r0, r2, lsl #8
    9a78:	01012f00 	tsteq	r1, r0, lsl #30
    9a7c:	000013a3 	andeq	r1, r0, r3, lsr #7
    9a80:	000013a3 	andeq	r1, r0, r3, lsr #7
    9a84:	300aea09 	andcc	lr, sl, r9, lsl #20
    9a88:	0a0e0101 	beq	389e94 <_Min_Heap_Size+0x389694>
    9a8c:	0a0e0000 	beq	389a94 <_Min_Heap_Size+0x389294>
    9a90:	e60a0000 	str	r0, [sl], -r0
    9a94:	24000801 	strcs	r0, [r0], #-2049	; 0xfffff7ff
    9a98:	02000014 	andeq	r0, r0, #20
    9a9c:	00131200 	andseq	r1, r3, r0, lsl #4
    9aa0:	88010400 	stmdahi	r1, {sl}
    9aa4:	0c000005 	stceq	0, cr0, [r0], {5}
    9aa8:	00001d48 	andeq	r1, r0, r8, asr #26
    9aac:	00000895 	muleq	r0, r5, r8
    9ab0:	00000500 	andeq	r0, r0, r0, lsl #10
	...
    9abc:	00007935 	andeq	r7, r0, r5, lsr r9
    9ac0:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    9ac4:	04000002 	streq	r0, [r0], #-2
    9ac8:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    9acc:	cd030000 	stcgt	0, cr0, [r3, #-0]
    9ad0:	7200000c 	andvc	r0, r0, #12
    9ad4:	000cfc03 	andeq	pc, ip, r3, lsl #24
    9ad8:	5c037400 	cfstrspl	mvf7, [r3], {-0}
    9adc:	7500000d 	strvc	r0, [r0, #-13]
    9ae0:	000c0303 	andeq	r0, ip, r3, lsl #6
    9ae4:	ae037600 	cfmadd32ge	mvax0, mvfx7, mvfx3, mvfx0
    9ae8:	7b00000d 	blvc	9b24 <_Min_Heap_Size+0x9324>
    9aec:	000f2903 	andeq	r2, pc, r3, lsl #18
    9af0:	07037c00 	streq	r7, [r3, -r0, lsl #24]
    9af4:	7e000010 	mcrvc	0, 0, r0, cr0, cr0, {0}
    9af8:	000b7503 	andeq	r7, fp, r3, lsl #10
    9afc:	e1047f00 	tst	r4, r0, lsl #30
    9b00:	0000000c 	andeq	r0, r0, ip
    9b04:	000ecd04 	andeq	ip, lr, r4, lsl #26
    9b08:	12040100 	andne	r0, r4, #0, 2
    9b0c:	0200000d 	andeq	r0, r0, #13
    9b10:	000a7004 	andeq	r7, sl, r4
    9b14:	da040300 	ble	10a71c <_Min_Heap_Size+0x109f1c>
    9b18:	0400000a 	streq	r0, [r0], #-10
    9b1c:	000f5c04 	andeq	r5, pc, r4, lsl #24
    9b20:	fa040500 	blx	10af28 <_Min_Heap_Size+0x10a728>
    9b24:	0600000e 	streq	r0, [r0], -lr
    9b28:	000c6d04 	andeq	r6, ip, r4, lsl #26
    9b2c:	7e040700 	cdpvc	7, 0, cr0, cr4, cr0, {0}
    9b30:	0800000a 	stmdaeq	r0, {r1, r3}
    9b34:	000ffc04 	andeq	pc, pc, r4, lsl #24
    9b38:	e9040900 	stmdb	r4, {r8, fp}
    9b3c:	0a00000d 	beq	9b78 <_Min_Heap_Size+0x9378>
    9b40:	000e4504 	andeq	r4, lr, r4, lsl #10
    9b44:	0f040b00 	svceq	0x00040b00
    9b48:	0c00000e 	stceq	0, cr0, [r0], {14}
    9b4c:	000b9f04 	andeq	r9, fp, r4, lsl #30
    9b50:	65040d00 	strvs	r0, [r4, #-3328]	; 0xfffff300
    9b54:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    9b58:	000f0504 	andeq	r0, pc, r4, lsl #10
    9b5c:	85040f00 	strhi	r0, [r4, #-3840]	; 0xfffff100
    9b60:	1000000c 	andne	r0, r0, ip
    9b64:	000a8904 	andeq	r8, sl, r4, lsl #18
    9b68:	c4041100 	strgt	r1, [r4], #-256	; 0xffffff00
    9b6c:	1200000e 	andne	r0, r0, #14
    9b70:	000c7804 	andeq	r7, ip, r4, lsl #16
    9b74:	21041300 	mrscs	r1, LR_abt
    9b78:	1400000c 	strne	r0, [r0], #-12
    9b7c:	000fca04 	andeq	ip, pc, r4, lsl #20
    9b80:	22041500 	andcs	r1, r4, #0, 10
    9b84:	1600000d 	strne	r0, [r0], -sp
    9b88:	000fd804 	andeq	sp, pc, r4, lsl #16
    9b8c:	75041700 	strvc	r1, [r4, #-1792]	; 0xfffff900
    9b90:	1800000d 	stmdane	r0, {r0, r2, r3}
    9b94:	000f8904 	andeq	r8, pc, r4, lsl #18
    9b98:	5d041900 	vstrpl.16	s2, [r4, #-0]	; <UNPREDICTABLE>
    9b9c:	1a00000b 	bne	9bd0 <_Min_Heap_Size+0x93d0>
    9ba0:	000c6004 	andeq	r6, ip, r4
    9ba4:	e5041b00 	str	r1, [r4, #-2816]	; 0xfffff500
    9ba8:	1c00000a 	stcne	0, cr0, [r0], {10}
    9bac:	000e8204 	andeq	r8, lr, r4, lsl #4
    9bb0:	2f041d00 	svccs	0x00041d00
    9bb4:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
    9bb8:	000c5304 	andeq	r5, ip, r4, lsl #6
    9bbc:	d3041f00 	movwle	r1, #20224	; 0x4f00
    9bc0:	2000000b 	andcs	r0, r0, fp
    9bc4:	000e0204 	andeq	r0, lr, r4, lsl #4
    9bc8:	47042100 	strmi	r2, [r4, -r0, lsl #2]
    9bcc:	2200000d 	andcs	r0, r0, #13
    9bd0:	000da404 	andeq	sl, sp, r4, lsl #8
    9bd4:	1a042300 	bne	1127dc <_Min_Heap_Size+0x111fdc>
    9bd8:	2400000b 	strcs	r0, [r0], #-11
    9bdc:	000e8c04 	andeq	r8, lr, r4, lsl #24
    9be0:	39042500 	stmdbcc	r4, {r8, sl, sp}
    9be4:	2600000c 	strcs	r0, [r0], -ip
    9be8:	000b8204 	andeq	r8, fp, r4, lsl #4
    9bec:	73042700 	movwvc	r2, #18176	; 0x4700
    9bf0:	2800000e 	stmdacs	r0, {r1, r2, r3}
    9bf4:	000e5704 	andeq	r5, lr, r4, lsl #14
    9bf8:	d8042900 	stmdale	r4, {r8, fp, sp}
    9bfc:	2a00000d 	bcs	9c38 <_Min_Heap_Size+0x9438>
    9c00:	000b2404 	andeq	r2, fp, r4, lsl #8
    9c04:	9b042b00 	blls	11480c <_Min_Heap_Size+0x11400c>
    9c08:	2c00000a 	stccs	0, cr0, [r0], {10}
    9c0c:	000c9704 	andeq	r9, ip, r4, lsl #14
    9c10:	e5042d00 	str	r2, [r4, #-3328]	; 0xfffff300
    9c14:	2e00000f 	cdpcs	0, 0, cr0, cr0, cr15, {0}
    9c18:	00102604 	andseq	r2, r0, r4, lsl #12
    9c1c:	dd042f00 	stcle	15, cr2, [r4, #-0]
    9c20:	3000000e 	andcc	r0, r0, lr
    9c24:	000ff204 	andeq	pc, pc, r4, lsl #4
    9c28:	f9043100 			; <UNDEFINED> instruction: 0xf9043100
    9c2c:	3200000b 	andcc	r0, r0, #11
    9c30:	000ad004 	andeq	sp, sl, r4
    9c34:	c3043300 	movwgt	r3, #17152	; 0x4300
    9c38:	3400000d 	strcc	r0, [r0], #-13
    9c3c:	000d6a04 	andeq	r6, sp, r4, lsl #20
    9c40:	f4043500 	vst3.8	{d3,d5,d7}, [r4], r0
    9c44:	3600000d 	strcc	r0, [r0], -sp
    9c48:	000d8804 	andeq	r8, sp, r4, lsl #16
    9c4c:	30043700 	andcc	r3, r4, r0, lsl #14
    9c50:	3800000d 	stmdacc	r0, {r0, r2, r3}
    9c54:	000abe04 	andeq	fp, sl, r4, lsl #28
    9c58:	38043900 	stmdacc	r4, {r8, fp, ip, sp}
    9c5c:	3a000010 	bcc	9ca4 <_Min_Heap_Size+0x94a4>
    9c60:	000e2104 	andeq	r2, lr, r4, lsl #2
    9c64:	b1043b00 	tstlt	r4, r0, lsl #22
    9c68:	3c00000b 	stccc	0, cr0, [r0], {11}
    9c6c:	000e3304 	andeq	r3, lr, r4, lsl #6
    9c70:	ef043f00 	svc	0x00043f00
    9c74:	4000000a 	andmi	r0, r0, sl
    9c78:	000eb604 	andeq	fp, lr, r4, lsl #12
    9c7c:	eb044100 	bl	11a084 <_Min_Heap_Size+0x119884>
    9c80:	4200000b 	andmi	r0, r0, #11
    9c84:	000cc104 	andeq	ip, ip, r4, lsl #2
    9c88:	4b044300 	blmi	11a890 <_Min_Heap_Size+0x11a090>
    9c8c:	4400000b 	strmi	r0, [r0], #-11
    9c90:	000f1704 	andeq	r1, pc, r4, lsl #14
    9c94:	af044500 	svcge	0x00044500
    9c98:	4600000c 	strmi	r0, [r0], -ip
    9c9c:	000afd04 	andeq	pc, sl, r4, lsl #26
    9ca0:	3b044700 	blcc	11b8a8 <_Min_Heap_Size+0x11b0a8>
    9ca4:	4800000f 	stmdami	r0, {r0, r1, r2, r3}
    9ca8:	000e6604 	andeq	r6, lr, r4, lsl #12
    9cac:	b0044900 	andlt	r4, r4, r0, lsl #18
    9cb0:	4a00000f 	bmi	9cf4 <_Min_Heap_Size+0x94f4>
    9cb4:	00101304 	andseq	r1, r0, r4, lsl #6
    9cb8:	eb044b00 	bl	11c8c0 <_Min_Heap_Size+0x11c0c0>
    9cbc:	4c00000c 	stcmi	0, cr0, [r0], {12}
    9cc0:	000d9204 	andeq	r9, sp, r4, lsl #4
    9cc4:	ad044d00 	stcge	13, cr4, [r4, #-0]
    9cc8:	5000000e 	andpl	r0, r0, lr
    9ccc:	000dba04 	andeq	fp, sp, r4, lsl #20
    9cd0:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    9cd4:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    9cd8:	c8060000 	stmdagt	r6, {}	; <UNPREDICTABLE>
    9cdc:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    9ce0:	0029039b 	mlaeq	r9, fp, r3, r0
    9ce4:	66060000 	strvs	r0, [r6], -r0
    9ce8:	05000000 	streq	r0, [r0, #-0]
    9cec:	025b182b 	subseq	r1, fp, #2818048	; 0x2b0000
    9cf0:	01050000 	mrseq	r0, (UNDEF: 5)
    9cf4:	00057408 	andeq	r7, r5, r8, lsl #8
    9cf8:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    9cfc:	000003fd 	strdeq	r0, [r0], -sp
    9d00:	0006f506 	andeq	pc, r6, r6, lsl #10
    9d04:	19390500 	ldmdbne	r9!, {r8, sl}
    9d08:	00000275 	andeq	r0, r0, r5, ror r2
    9d0c:	8f070205 	svchi	0x00070205
    9d10:	06000007 	streq	r0, [r0], -r7
    9d14:	00001f4d 	andeq	r1, r0, sp, asr #30
    9d18:	88184d05 	ldmdahi	r8, {r0, r2, r8, sl, fp, lr}
    9d1c:	05000002 	streq	r0, [r0, #-2]
    9d20:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    9d24:	c2060000 	andgt	r0, r6, #0
    9d28:	05000002 	streq	r0, [r0, #-2]
    9d2c:	029b194f 	addseq	r1, fp, #1294336	; 0x13c000
    9d30:	04050000 	streq	r0, [r5], #-0
    9d34:	0000b307 	andeq	fp, r0, r7, lsl #6
    9d38:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    9d3c:	000002e7 	andeq	r0, r0, r7, ror #5
    9d40:	ae070805 	cdpge	8, 0, cr0, cr7, cr5, {0}
    9d44:	07000000 	streq	r0, [r0, -r0]
    9d48:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    9d4c:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    9d50:	0000b807 	andeq	fp, r0, r7, lsl #16
    9d54:	00680600 	rsbeq	r0, r8, r0, lsl #12
    9d58:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    9d5c:	00024f13 	andeq	r4, r2, r3, lsl pc
    9d60:	02be0800 	adcseq	r0, lr, #0, 16
    9d64:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
    9d68:	06000006 	streq	r0, [r0], -r6
    9d6c:	02691424 	rsbeq	r1, r9, #36, 8	; 0x24000000
    9d70:	4f060000 	svcmi	0x00060000
    9d74:	0600001f 			; <UNDEFINED> instruction: 0x0600001f
    9d78:	027c132c 	rsbseq	r1, ip, #44, 6	; 0xb0000000
    9d7c:	c4060000 	strgt	r0, [r6], #-0
    9d80:	06000002 	streq	r0, [r0], -r2
    9d84:	028f1430 	addeq	r1, pc, #48, 8	; 0x30000000
    9d88:	e7080000 	str	r0, [r8, -r0]
    9d8c:	09000002 	stmdbeq	r0, {r1}
    9d90:	000002f3 	strdeq	r0, [r0], -r3
    9d94:	020e040a 	andeq	r0, lr, #167772160	; 0xa000000
    9d98:	e309019b 	movw	r0, #37275	; 0x919b
    9d9c:	0b000003 	bleq	9db0 <_Min_Heap_Size+0x95b0>
    9da0:	00002060 	andeq	r2, r0, r0, rrx
    9da4:	12019d02 	andne	r9, r1, #2, 26	; 0x80
    9da8:	000003f3 	strdeq	r0, [r0], -r3
    9dac:	0b002302 	bleq	129bc <_Min_Heap_Size+0x121bc>
    9db0:	0000050f 	andeq	r0, r0, pc, lsl #10
    9db4:	12019e02 	andne	r9, r1, #2, 28
    9db8:	000003f8 	strdeq	r0, [r0], -r8
    9dbc:	0b202302 	bleq	8129cc <_Min_Heap_Size+0x8121cc>
    9dc0:	00001fff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    9dc4:	12019f02 	andne	r9, r1, #2, 30
    9dc8:	000003f3 	strdeq	r0, [r0], -r3
    9dcc:	01802303 	orreq	r2, r0, r3, lsl #6
    9dd0:	0005190b 	andeq	r1, r5, fp, lsl #18
    9dd4:	01a00200 	lsleq	r0, r0, #4
    9dd8:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9ddc:	a0230300 	eorge	r0, r3, r0, lsl #6
    9de0:	1db40b01 			; <UNDEFINED> instruction: 0x1db40b01
    9de4:	a1020000 	mrsge	r0, (UNDEF: 2)
    9de8:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9dec:	23030000 	movwcs	r0, #12288	; 0x3000
    9df0:	230b0280 	movwcs	r0, #45696	; 0xb280
    9df4:	02000005 	andeq	r0, r0, #5
    9df8:	f81201a2 			; <UNDEFINED> instruction: 0xf81201a2
    9dfc:	03000003 	movweq	r0, #3
    9e00:	0b02a023 	bleq	b1e94 <_Min_Heap_Size+0xb1694>
    9e04:	00001d36 	andeq	r1, r0, r6, lsr sp
    9e08:	1201a302 	andne	sl, r1, #134217728	; 0x8000000
    9e0c:	000003f3 	strdeq	r0, [r0], -r3
    9e10:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
    9e14:	00052d0b 	andeq	r2, r5, fp, lsl #26
    9e18:	01a40200 			; <UNDEFINED> instruction: 0x01a40200
    9e1c:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9e20:	a0230300 	eorge	r0, r3, r0, lsl #6
    9e24:	1fcb0b03 	svcne	0x00cb0b03
    9e28:	a5020000 	strge	r0, [r2, #-0]
    9e2c:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9e30:	23030000 	movwcs	r0, #12288	; 0x3000
    9e34:	370b0480 	strcc	r0, [fp, -r0, lsl #9]
    9e38:	02000005 	andeq	r0, r0, #5
    9e3c:	081201a6 	ldmdaeq	r2, {r1, r2, r5, r7, r8}
    9e40:	03000004 	movweq	r0, #4
    9e44:	0c04a023 	stceq	0, cr10, [r4], {35}	; 0x23
    9e48:	02005049 	andeq	r5, r0, #73	; 0x49
    9e4c:	281201a7 	ldmdacs	r2, {r0, r1, r2, r5, r7, r8}
    9e50:	03000004 	movweq	r0, #4
    9e54:	0b068023 	bleq	1a9ee8 <_Min_Heap_Size+0x1a96e8>
    9e58:	00000541 	andeq	r0, r0, r1, asr #10
    9e5c:	1201a802 	andne	sl, r1, #131072	; 0x20000
    9e60:	0000042d 	andeq	r0, r0, sp, lsr #8
    9e64:	07f02303 	ldrbeq	r2, [r0, r3, lsl #6]!
    9e68:	0021830b 	eoreq	r8, r1, fp, lsl #6
    9e6c:	01a90200 			; <UNDEFINED> instruction: 0x01a90200
    9e70:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e74:	80230300 	eorhi	r0, r3, r0, lsl #6
    9e78:	f30d001c 	vqadd.u8	d0, d13, d12
    9e7c:	f3000002 	vhadd.u8	d0, d0, d2
    9e80:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    9e84:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    9e88:	e3080007 	movw	r0, #32775	; 0x8007
    9e8c:	0d000003 	stceq	0, cr0, [r0, #-12]
    9e90:	000002e7 	andeq	r0, r0, r7, ror #5
    9e94:	00000408 	andeq	r0, r0, r8, lsl #8
    9e98:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9e9c:	0d001700 	stceq	7, cr1, [r0, #-0]
    9ea0:	000002e7 	andeq	r0, r0, r7, ror #5
    9ea4:	00000418 	andeq	r0, r0, r8, lsl r4
    9ea8:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9eac:	0d003700 	stceq	7, cr3, [r0, #-0]
    9eb0:	000002ca 	andeq	r0, r0, sl, asr #5
    9eb4:	00000428 	andeq	r0, r0, r8, lsr #8
    9eb8:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9ebc:	0800ef00 	stmdaeq	r0, {r8, r9, sl, fp, sp, lr, pc}
    9ec0:	00000418 	andeq	r0, r0, r8, lsl r4
    9ec4:	0002e70d 	andeq	lr, r2, sp, lsl #14
    9ec8:	00043e00 	andeq	r3, r4, r0, lsl #28
    9ecc:	02b70f00 	adcseq	r0, r7, #0, 30
    9ed0:	02830000 	addeq	r0, r3, #0
    9ed4:	20651000 	rsbcs	r1, r5, r0
    9ed8:	aa020000 	bge	89ee0 <_Min_Heap_Size+0x896e0>
    9edc:	02fd0401 	rscseq	r0, sp, #16777216	; 0x1000000
    9ee0:	8c110000 	ldchi	0, cr0, [r1], {-0}
    9ee4:	0901bd02 	stmdbeq	r1, {r1, r8, sl, fp, ip, sp, pc}
    9ee8:	000005a7 	andeq	r0, r0, r7, lsr #11
    9eec:	0001010b 	andeq	r0, r1, fp, lsl #2
    9ef0:	01bf0200 			; <UNDEFINED> instruction: 0x01bf0200
    9ef4:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9ef8:	00230200 	eoreq	r0, r3, r0, lsl #4
    9efc:	00038c0b 	andeq	r8, r3, fp, lsl #24
    9f00:	01c00200 	biceq	r0, r0, r0, lsl #4
    9f04:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9f0c:	0003510b 	andeq	r5, r3, fp, lsl #2
    9f10:	01c10200 	biceq	r0, r1, r0, lsl #4
    9f14:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f18:	08230200 	stmdaeq	r3!, {r9}
    9f1c:	0003a50b 	andeq	sl, r3, fp, lsl #10
    9f20:	01c20200 	biceq	r0, r2, r0, lsl #4
    9f24:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f28:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9f2c:	5243530c 	subpl	r5, r3, #12, 6	; 0x30000000
    9f30:	01c30200 	biceq	r0, r3, r0, lsl #4
    9f34:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f38:	10230200 	eorne	r0, r3, r0, lsl #4
    9f3c:	5243430c 	subpl	r4, r3, #12, 6	; 0x30000000
    9f40:	01c40200 	biceq	r0, r4, r0, lsl #4
    9f44:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f48:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9f4c:	5048530c 	subpl	r5, r8, ip, lsl #6
    9f50:	01c50200 	biceq	r0, r5, r0, lsl #4
    9f54:	0005b712 	andeq	fp, r5, r2, lsl r7
    9f58:	18230200 	stmdane	r3!, {r9}
    9f5c:	0005820b 	andeq	r8, r5, fp, lsl #4
    9f60:	01c60200 	biceq	r0, r6, r0, lsl #4
    9f64:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f68:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9f6c:	00048c0b 	andeq	r8, r4, fp, lsl #24
    9f70:	01c70200 	biceq	r0, r7, r0, lsl #4
    9f74:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f78:	28230200 	stmdacs	r3!, {r9}
    9f7c:	0008fa0b 	andeq	pc, r8, fp, lsl #20
    9f80:	01c80200 	biceq	r0, r8, r0, lsl #4
    9f84:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f88:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9f8c:	0003ab0b 	andeq	sl, r3, fp, lsl #22
    9f90:	01c90200 	biceq	r0, r9, r0, lsl #4
    9f94:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f98:	30230200 	eorcc	r0, r3, r0, lsl #4
    9f9c:	0003c90b 	andeq	ip, r3, fp, lsl #18
    9fa0:	01ca0200 	biceq	r0, sl, r0, lsl #4
    9fa4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9fa8:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    9fac:	00029c0b 	andeq	r9, r2, fp, lsl #24
    9fb0:	01cb0200 	biceq	r0, fp, r0, lsl #4
    9fb4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9fb8:	38230200 	stmdacc	r3!, {r9}
    9fbc:	00076f0b 	andeq	r6, r7, fp, lsl #30
    9fc0:	01cc0200 	biceq	r0, ip, r0, lsl #4
    9fc4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9fc8:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9fcc:	5246500c 	subpl	r5, r6, #12
    9fd0:	01cd0200 	biceq	r0, sp, r0, lsl #4
    9fd4:	0005d112 	andeq	sp, r5, r2, lsl r1
    9fd8:	40230200 	eormi	r0, r3, r0, lsl #4
    9fdc:	5246440c 	subpl	r4, r6, #12, 8	; 0xc000000
    9fe0:	01ce0200 	biceq	r0, lr, r0, lsl #4
    9fe4:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9fe8:	48230200 	stmdami	r3!, {r9}
    9fec:	5244410c 	subpl	r4, r4, #12, 2
    9ff0:	01cf0200 	biceq	r0, pc, r0, lsl #4
    9ff4:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9ff8:	4c230200 	sfmmi	f0, 4, [r3], #-0
    9ffc:	0003f80b 	andeq	pc, r3, fp, lsl #16
    a000:	01d00200 	bicseq	r0, r0, r0, lsl #4
    a004:	0005eb12 	andeq	lr, r5, r2, lsl fp
    a008:	50230200 	eorpl	r0, r3, r0, lsl #4
    a00c:	00014e0b 	andeq	r4, r1, fp, lsl #28
    a010:	01d10200 	bicseq	r0, r1, r0, lsl #4
    a014:	00060512 	andeq	r0, r6, r2, lsl r5
    a018:	60230200 	eorvs	r0, r3, r0, lsl #4
    a01c:	00050f0b 	andeq	r0, r5, fp, lsl #30
    a020:	01d20200 	bicseq	r0, r2, r0, lsl #4
    a024:	00060a12 	andeq	r0, r6, r2, lsl sl
    a028:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    a02c:	0005090b 	andeq	r0, r5, fp, lsl #18
    a030:	01d30200 	bicseq	r0, r3, r0, lsl #4
    a034:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a038:	88230300 	stmdahi	r3!, {r8, r9}
    a03c:	ca0d0001 	bgt	34a048 <_Min_Heap_Size+0x349848>
    a040:	b7000002 	strlt	r0, [r0, -r2]
    a044:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    a048:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    a04c:	a708000b 	strge	r0, [r8, -fp]
    a050:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    a054:	000002f8 	strdeq	r0, [r0], -r8
    a058:	000005cc 	andeq	r0, r0, ip, asr #11
    a05c:	0002b70e 	andeq	fp, r2, lr, lsl #14
    a060:	09000100 	stmdbeq	r0, {r8}
    a064:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    a068:	0005cc08 	andeq	ip, r5, r8, lsl #24
    a06c:	02f80d00 	rscseq	r0, r8, #0, 26
    a070:	05e60000 	strbeq	r0, [r6, #0]!
    a074:	b70e0000 	strlt	r0, [lr, -r0]
    a078:	03000002 	movweq	r0, #2
    a07c:	05d60900 	ldrbeq	r0, [r6, #2304]	; 0x900
    a080:	e6080000 	str	r0, [r8], -r0
    a084:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    a088:	000002f8 	strdeq	r0, [r0], -r8
    a08c:	00000600 	andeq	r0, r0, r0, lsl #12
    a090:	0002b70e 	andeq	fp, r2, lr, lsl #14
    a094:	09000400 	stmdbeq	r0, {sl}
    a098:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a09c:	00060008 	andeq	r0, r6, r8
    a0a0:	02e70d00 	rsceq	r0, r7, #0, 26
    a0a4:	061a0000 	ldreq	r0, [sl], -r0
    a0a8:	b70e0000 	strlt	r0, [lr, -r0]
    a0ac:	04000002 	streq	r0, [r0], #-2
    a0b0:	02d71000 	sbcseq	r1, r7, #0
    a0b4:	d4020000 	strle	r0, [r2], #-0
    a0b8:	044b0301 	strbeq	r0, [fp], #-769	; 0xfffffcff
    a0bc:	10110000 	andsne	r0, r1, r0
    a0c0:	0902fc02 	stmdbeq	r2, {r1, sl, fp, ip, sp, lr, pc}
    a0c4:	00000672 	andeq	r0, r0, r2, ror r6
    a0c8:	0021520b 	eoreq	r5, r1, fp, lsl #4
    a0cc:	02fe0200 	rscseq	r0, lr, #0, 4
    a0d0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a0d4:	00230200 	eoreq	r0, r3, r0, lsl #4
    a0d8:	001fc00b 	andseq	ip, pc, fp
    a0dc:	02ff0200 	rscseq	r0, pc, #0, 4
    a0e0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a0e4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a0e8:	4c41560c 	mcrrmi	6, 0, r5, r1, cr12
    a0ec:	03000200 	movweq	r0, #512	; 0x200
    a0f0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a0f4:	08230200 	stmdaeq	r3!, {r9}
    a0f8:	001f1c0b 	andseq	r1, pc, fp, lsl #24
    a0fc:	03010200 	movweq	r0, #4608	; 0x1200
    a100:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    a104:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a108:	1ec71000 	cdpne	0, 12, cr1, cr7, cr0, {0}
    a10c:	02020000 	andeq	r0, r2, #0
    a110:	06270303 	strteq	r0, [r7], -r3, lsl #6
    a114:	2c110000 	ldccs	0, cr0, [r1], {-0}
    a118:	0904bd02 	stmdbeq	r4, {r1, r8, sl, fp, ip, sp, pc}
    a11c:	0000073a 	andeq	r0, r0, sl, lsr r7
    a120:	0020fd0b 	eoreq	pc, r0, fp, lsl #26
    a124:	04bf0200 	ldrteq	r0, [pc], #512	; a12c <_Min_Heap_Size+0x992c>
    a128:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    a12c:	00230200 	eoreq	r0, r3, r0, lsl #4
    a130:	0021520b 	eoreq	r5, r1, fp, lsl #4
    a134:	04c00200 	strbeq	r0, [r0], #512	; 0x200
    a138:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a13c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a140:	524e520c 	subpl	r5, lr, #12, 4	; 0xc0000000
    a144:	04c10200 	strbeq	r0, [r1], #512	; 0x200
    a148:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a14c:	08230200 	stmdaeq	r3!, {r9}
    a150:	0020b20b 	eoreq	fp, r0, fp, lsl #4
    a154:	04c20200 	strbeq	r0, [r2], #512	; 0x200
    a158:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a15c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a160:	0020dc0b 	eoreq	sp, r0, fp, lsl #24
    a164:	04c30200 	strbeq	r0, [r3], #512	; 0x200
    a168:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a16c:	10230200 	eorne	r0, r3, r0, lsl #4
    a170:	001e670b 	andseq	r6, lr, fp, lsl #14
    a174:	04c40200 	strbeq	r0, [r4], #512	; 0x200
    a178:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a17c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    a180:	001e140b 	andseq	r1, lr, fp, lsl #8
    a184:	04c50200 	strbeq	r0, [r5], #512	; 0x200
    a188:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a18c:	18230200 	stmdane	r3!, {r9}
    a190:	001e6f0b 	andseq	r6, lr, fp, lsl #30
    a194:	04c60200 	strbeq	r0, [r6], #512	; 0x200
    a198:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a19c:	1c230200 	sfmne	f0, 4, [r3], #-0
    a1a0:	001e9c0b 	andseq	r9, lr, fp, lsl #24
    a1a4:	04c70200 	strbeq	r0, [r7], #512	; 0x200
    a1a8:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a1ac:	20230200 	eorcs	r0, r3, r0, lsl #4
    a1b0:	001e770b 	andseq	r7, lr, fp, lsl #14
    a1b4:	04c80200 	strbeq	r0, [r8], #512	; 0x200
    a1b8:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a1bc:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    a1c0:	001dac0b 	andseq	sl, sp, fp, lsl #24
    a1c4:	04c90200 	strbeq	r0, [r9], #512	; 0x200
    a1c8:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    a1cc:	28230200 	stmdacs	r3!, {r9}
    a1d0:	21be1000 			; <UNDEFINED> instruction: 0x21be1000
    a1d4:	ca020000 	bgt	8a1dc <_Min_Heap_Size+0x899dc>
    a1d8:	067f0304 	ldrbteq	r0, [pc], -r4, lsl #6
    a1dc:	07020000 	streq	r0, [r2, -r0]
    a1e0:	00025b01 	andeq	r5, r2, r1, lsl #22
    a1e4:	01b90700 			; <UNDEFINED> instruction: 0x01b90700
    a1e8:	00000762 	andeq	r0, r0, r2, ror #14
    a1ec:	00031e04 	andeq	r1, r3, r4, lsl #28
    a1f0:	53120000 	tstpl	r2, #0
    a1f4:	01005445 	tsteq	r0, r5, asr #8
    a1f8:	04080500 	streq	r0, [r8], #-1280	; 0xfffffb00
    a1fc:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    a200:	2e081013 	mcrcs	0, 0, r1, cr8, cr3, {0}
    a204:	00081809 	andeq	r1, r8, r9, lsl #16
    a208:	214b1400 	cmpcs	fp, r0, lsl #8
    a20c:	30080000 	andcc	r0, r8, r0
    a210:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a214:	00230200 	eoreq	r0, r3, r0, lsl #4
    a218:	001fab14 	andseq	sl, pc, r4, lsl fp	; <UNPREDICTABLE>
    a21c:	1a320800 	bne	c8c224 <_Min_Heap_Size+0xc8ba24>
    a220:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a224:	14012302 	strne	r2, [r1], #-770	; 0xfffffcfe
    a228:	00000290 	muleq	r0, r0, r2
    a22c:	e71a3408 	ldr	r3, [sl, -r8, lsl #8]
    a230:	02000002 	andeq	r0, r0, #2
    a234:	c6140423 	ldrgt	r0, [r4], -r3, lsr #8
    a238:	08000026 	stmdaeq	r0, {r1, r2, r5}
    a23c:	02be1a35 	adcseq	r1, lr, #217088	; 0x35000
    a240:	23020000 	movwcs	r0, #8192	; 0x2000
    a244:	204f1408 	subcs	r1, pc, r8, lsl #8
    a248:	37080000 	strcc	r0, [r8, -r0]
    a24c:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a250:	09230200 	stmdbeq	r3!, {r9}
    a254:	001d3b14 	andseq	r3, sp, r4, lsl fp
    a258:	1a390800 	bne	e4c260 <_Min_Heap_Size+0xe4ba60>
    a25c:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a260:	140a2302 	strne	r2, [sl], #-770	; 0xfffffcfe
    a264:	00001f33 	andeq	r1, r0, r3, lsr pc
    a268:	be1a3b08 	vnmlslt.f64	d3, d10, d8
    a26c:	02000002 	andeq	r0, r0, #2
    a270:	3d140b23 	vldrcc	d0, [r4, #-140]	; 0xffffff74
    a274:	08000020 	stmdaeq	r0, {r5}
    a278:	02be1a3d 	adcseq	r1, lr, #249856	; 0x3d000
    a27c:	23020000 	movwcs	r0, #8192	; 0x2000
    a280:	2188140c 	orrcs	r1, r8, ip, lsl #8
    a284:	3f080000 	svccc	0x00080000
    a288:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a28c:	0d230200 	sfmeq	f0, 4, [r3, #-0]
    a290:	001ebb14 	andseq	fp, lr, r4, lsl fp
    a294:	1a410800 	bne	104c29c <_Min_Heap_Size+0x104ba9c>
    a298:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a29c:	140e2302 	strne	r2, [lr], #-770	; 0xfffffcfe
    a2a0:	00001db9 			; <UNDEFINED> instruction: 0x00001db9
    a2a4:	be1a4308 	cdplt	3, 1, cr4, cr10, cr8, {0}
    a2a8:	02000002 	andeq	r0, r0, #2
    a2ac:	06000f23 	streq	r0, [r0], -r3, lsr #30
    a2b0:	00001ea4 	andeq	r1, r0, r4, lsr #29
    a2b4:	69024508 	stmdbvs	r2, {r3, r8, sl, lr}
    a2b8:	15000007 	strne	r0, [r0, #-7]
    a2bc:	00202801 	eoreq	r2, r0, r1, lsl #16
    a2c0:	01e90100 	mvneq	r0, r0, lsl #2
    a2c4:	0000010d 	andeq	r0, r0, sp, lsl #2
    a2c8:	00000000 	andeq	r0, r0, r0
    a2cc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a2d0:	01160100 	tsteq	r6, r0, lsl #2
    a2d4:	00001dd4 	ldrdeq	r1, [r0], -r4
    a2d8:	0601e001 	streq	lr, [r1], -r1
    a2dc:	00000001 	andeq	r0, r0, r1
    a2e0:	00000000 	andeq	r0, r0, r0
    a2e4:	006ca100 	rsbeq	sl, ip, r0, lsl #2
    a2e8:	08610100 	stmdaeq	r1!, {r8}^
    a2ec:	00170000 	andseq	r0, r7, r0
    a2f0:	24000000 	strcs	r0, [r0], #-0
    a2f4:	00000008 	andeq	r0, r0, r8
    a2f8:	20e10116 	rsccs	r0, r1, r6, lsl r1
    a2fc:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    a300:	00010601 	andeq	r0, r1, r1, lsl #12
    a304:	00000000 	andeq	r0, r0, r0
    a308:	c1000000 	mrsgt	r0, (UNDEF: 0)
    a30c:	0100006c 	tsteq	r0, ip, rrx
    a310:	000008ad 	andeq	r0, r0, sp, lsr #17
    a314:	00094018 	andeq	r4, r9, r8, lsl r0
    a318:	01ce0100 	biceq	r0, lr, r0, lsl #2
    a31c:	0002e72b 	andeq	lr, r2, fp, lsr #14
    a320:	006ce900 	rsbeq	lr, ip, r0, lsl #18
    a324:	006ce100 	rsbeq	lr, ip, r0, lsl #2
    a328:	00001900 	andeq	r1, r0, r0, lsl #18
    a32c:	14180000 	ldrne	r0, [r8], #-0
    a330:	011a0000 	tsteq	sl, r0
    a334:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    a338:	1a08002d 	bne	20a3f4 <_Min_Heap_Size+0x209bf4>
    a33c:	0a035101 	beq	de748 <_Min_Heap_Size+0xddf48>
    a340:	000001d1 	ldrdeq	r0, [r0], -r1
    a344:	1f72011b 	svcne	0x0072011b
    a348:	bd010000 	stclt	0, cr0, [r1, #-0]
    a34c:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a350:	00000002 	andeq	r0, r0, r2
    a354:	00000000 	andeq	r0, r0, r0
    a358:	1d000000 	stcne	0, cr0, [r0, #-0]
    a35c:	0100006d 	tsteq	r0, sp, rrx
    a360:	00000921 	andeq	r0, r0, r1, lsr #18
    a364:	000f9718 	andeq	r9, pc, r8, lsl r7	; <UNPREDICTABLE>
    a368:	01bd0100 			; <UNDEFINED> instruction: 0x01bd0100
    a36c:	00024327 	andeq	r4, r2, r7, lsr #6
    a370:	006d4500 	rsbeq	r4, sp, r0, lsl #10
    a374:	006d3d00 	rsbeq	r3, sp, r0, lsl #26
    a378:	12fb1c00 	rscsne	r1, fp, #0, 24
    a37c:	00000000 	andeq	r0, r0, r0
    a380:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
    a384:	01000004 	tsteq	r0, r4
    a388:	060a01c3 	streq	r0, [sl], -r3, asr #3
    a38c:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a390:	0000130e 	andeq	r1, r0, lr, lsl #6
    a394:	00006d83 	andeq	r6, r0, r3, lsl #27
    a398:	00006d7f 	andeq	r6, r0, pc, ror sp
    a39c:	00001900 	andeq	r1, r0, r0, lsl #18
    a3a0:	14180000 	ldrne	r0, [r8], #-0
    a3a4:	011a0000 	tsteq	sl, r0
    a3a8:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    a3ac:	1a08002d 	bne	20a468 <_Min_Heap_Size+0x209c68>
    a3b0:	0a035101 	beq	de7bc <_Min_Heap_Size+0xddfbc>
    a3b4:	000001c0 	andeq	r0, r0, r0, asr #3
    a3b8:	1deb0116 	stfnee	f0, [fp, #88]!	; 0x58
    a3bc:	ac010000 	stcge	0, cr0, [r1], {-0}
    a3c0:	00010601 	andeq	r0, r1, r1, lsl #12
    a3c4:	00000000 	andeq	r0, r0, r0
    a3c8:	a1000000 	mrsge	r0, (UNDEF: 0)
    a3cc:	0100006d 	tsteq	r0, sp, rrx
    a3d0:	00000995 	muleq	r0, r5, r9
    a3d4:	000f9718 	andeq	r9, pc, r8, lsl r7	; <UNPREDICTABLE>
    a3d8:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    a3dc:	00024329 	andeq	r4, r2, r9, lsr #6
    a3e0:	006dc900 	rsbeq	ip, sp, r0, lsl #18
    a3e4:	006dc100 	rsbeq	ip, sp, r0, lsl #2
    a3e8:	131c1e00 	tstne	ip, #0, 28
    a3ec:	00000000 	andeq	r0, r0, r0
    a3f0:	00010000 	andeq	r0, r1, r0
    a3f4:	00000000 	andeq	r0, r0, r0
    a3f8:	01000000 	mrseq	r0, (UNDEF: 0)
    a3fc:	7a0301b2 	bvc	caacc <_Min_Heap_Size+0xca2cc>
    a400:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a404:	0000132b 	andeq	r1, r0, fp, lsr #6
    a408:	00006e05 	andeq	r6, r0, r5, lsl #28
    a40c:	00006e03 	andeq	r6, r0, r3, lsl #28
    a410:	00001900 	andeq	r1, r0, r0, lsl #18
    a414:	14180000 	ldrne	r0, [r8], #-0
    a418:	011a0000 	tsteq	sl, r0
    a41c:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    a420:	1a08002d 	bne	20a4dc <_Min_Heap_Size+0x209cdc>
    a424:	0a035101 	beq	de830 <_Min_Heap_Size+0xde030>
    a428:	000001af 	andeq	r0, r0, pc, lsr #3
    a42c:	1ee6011b 	mcrne	1, 7, r0, cr6, cr11, {0}
    a430:	9c010000 	stcls	0, cr0, [r1], {-0}
    a434:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a438:	00000002 	andeq	r0, r0, r2
    a43c:	00000000 	andeq	r0, r0, r0
    a440:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a444:	0100006e 	tsteq	r0, lr, rrx
    a448:	00000a09 	andeq	r0, r0, r9, lsl #20
    a44c:	000f9718 	andeq	r9, pc, r8, lsl r7	; <UNPREDICTABLE>
    a450:	019c0100 	orrseq	r0, ip, r0, lsl #2
    a454:	0002432b 	andeq	r4, r2, fp, lsr #6
    a458:	006e4000 	rsbeq	r4, lr, r0
    a45c:	006e3800 	rsbeq	r3, lr, r0, lsl #16
    a460:	13561c00 	cmpne	r6, #0, 24
    a464:	00000000 	andeq	r0, r0, r0
    a468:	d0010000 	andle	r0, r1, r0
    a46c:	01000004 	tsteq	r0, r4
    a470:	ee0a01a2 	adf<illegal precision>p	f0, f2, f2
    a474:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a478:	00001369 	andeq	r1, r0, r9, ror #6
    a47c:	00006e7e 	andeq	r6, r0, lr, ror lr
    a480:	00006e7a 	andeq	r6, r0, sl, ror lr
    a484:	00001900 	andeq	r1, r0, r0, lsl #18
    a488:	14180000 	ldrne	r0, [r8], #-0
    a48c:	011a0000 	tsteq	sl, r0
    a490:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    a494:	1a08002d 	bne	20a550 <_Min_Heap_Size+0x209d50>
    a498:	0a035101 	beq	de8a4 <_Min_Heap_Size+0xde0a4>
    a49c:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    a4a0:	21a70116 			; <UNDEFINED> instruction: 0x21a70116
    a4a4:	8a010000 	bhi	4a4ac <_Min_Heap_Size+0x49cac>
    a4a8:	00010601 	andeq	r0, r1, r1, lsl #12
    a4ac:	00000000 	andeq	r0, r0, r0
    a4b0:	9c000000 	stcls	0, cr0, [r0], {-0}
    a4b4:	0100006e 	tsteq	r0, lr, rrx
    a4b8:	00000a7d 	andeq	r0, r0, sp, ror sl
    a4bc:	000f9718 	andeq	r9, pc, r8, lsl r7	; <UNPREDICTABLE>
    a4c0:	018a0100 	orreq	r0, sl, r0, lsl #2
    a4c4:	00024327 	andeq	r4, r2, r7, lsr #6
    a4c8:	006ec400 	rsbeq	ip, lr, r0, lsl #8
    a4cc:	006ebc00 	rsbeq	fp, lr, r0, lsl #24
    a4d0:	13391e00 	teqne	r9, #0, 28
    a4d4:	00000000 	andeq	r0, r0, r0
    a4d8:	00010000 	andeq	r0, r1, r0
    a4dc:	00000000 	andeq	r0, r0, r0
    a4e0:	01000000 	mrseq	r0, (UNDEF: 0)
    a4e4:	62030190 	andvs	r0, r3, #144, 2	; 0x24
    a4e8:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    a4ec:	00001348 	andeq	r1, r0, r8, asr #6
    a4f0:	00006f00 	andeq	r6, r0, r0, lsl #30
    a4f4:	00006efe 	strdeq	r6, [r0], -lr
    a4f8:	00001900 	andeq	r1, r0, r0, lsl #18
    a4fc:	14180000 	ldrne	r0, [r8], #-0
    a500:	011a0000 	tsteq	sl, r0
    a504:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    a508:	1a08002d 	bne	20a5c4 <_Min_Heap_Size+0x209dc4>
    a50c:	0a035101 	beq	de918 <_Min_Heap_Size+0xde118>
    a510:	0000018d 	andeq	r0, r0, sp, lsl #3
    a514:	1e280116 	mcrne	1, 1, r0, cr8, cr6, {0}
    a518:	7b010000 	blvc	4a520 <_Min_Heap_Size+0x49d20>
    a51c:	00010601 	andeq	r0, r1, r1, lsl #12
    a520:	00000000 	andeq	r0, r0, r0
    a524:	13000000 	movwne	r0, #0
    a528:	0100006f 	tsteq	r0, pc, rrx
    a52c:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a530:	000f9718 	andeq	r9, pc, r8, lsl r7	; <UNPREDICTABLE>
    a534:	017b0100 	cmneq	fp, r0, lsl #2
    a538:	00024325 	andeq	r4, r2, r5, lsr #6
    a53c:	006f3b00 	rsbeq	r3, pc, r0, lsl #22
    a540:	006f3300 	rsbeq	r3, pc, r0, lsl #6
    a544:	1dc61800 	stclne	8, cr1, [r6]
    a548:	7b010000 	blvc	4a550 <_Min_Heap_Size+0x49d50>
    a54c:	02e73401 	rsceq	r3, r7, #16777216	; 0x1000000
    a550:	6f7f0000 	svcvs	0x007f0000
    a554:	6f750000 	svcvs	0x00750000
    a558:	22180000 	andscs	r0, r8, #0
    a55c:	0100001f 	tsteq	r0, pc, lsl r0
    a560:	a44d017b 	strbge	r0, [sp], #-379	; 0xfffffe85
    a564:	c900000b 	stmdbgt	r0, {r0, r1, r3}
    a568:	c100006f 	tstgt	r0, pc, rrx
    a56c:	1800006f 	stmdane	r0, {r0, r1, r2, r3, r5, r6}
    a570:	00001f9e 	muleq	r0, lr, pc	; <UNPREDICTABLE>
    a574:	69017b01 	stmdbvs	r1, {r0, r8, r9, fp, ip, sp, lr}
    a578:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a57c:	00007001 	andeq	r7, r0, r1
    a580:	00006ffd 	strdeq	r6, [r0], -sp
    a584:	0012b01c 	andseq	fp, r2, ip, lsl r0
    a588:	00000000 	andeq	r0, r0, r0
    a58c:	04a00100 	strteq	r0, [r0], #256	; 0x100
    a590:	80010000 	andhi	r0, r1, r0
    a594:	0b110301 	bleq	44b1a0 <_Min_Heap_Size+0x44a9a0>
    a598:	c31d0000 	tstgt	sp, #0
    a59c:	23000012 	movwcs	r0, #18
    a5a0:	1f000070 	svcne	0x00000070
    a5a4:	00000070 	andeq	r0, r0, r0, ror r0
    a5a8:	0011e31c 	andseq	lr, r1, ip, lsl r3
    a5ac:	00000000 	andeq	r0, r0, r0
    a5b0:	04b80100 	ldrteq	r0, [r8], #256	; 0x100
    a5b4:	80010000 	andhi	r0, r1, r0
    a5b8:	0b890301 	bleq	fe24b1c4 <_estack+0xde249f8c>
    a5bc:	191d0000 	ldmdbne	sp, {}	; <UNPREDICTABLE>
    a5c0:	45000012 	strmi	r0, [r0, #-18]	; 0xffffffee
    a5c4:	41000070 	tstmi	r0, r0, ror r0
    a5c8:	1d000070 	stcne	0, cr0, [r0, #-448]	; 0xfffffe40
    a5cc:	0000120c 	andeq	r1, r0, ip, lsl #4
    a5d0:	00007067 	andeq	r7, r0, r7, rrx
    a5d4:	00007063 	andeq	r7, r0, r3, rrx
    a5d8:	0011ff1d 	andseq	pc, r1, sp, lsl pc	; <UNPREDICTABLE>
    a5dc:	00708b00 	rsbseq	r8, r0, r0, lsl #22
    a5e0:	00708500 	rsbseq	r8, r0, r0, lsl #10
    a5e4:	11f21d00 	mvnsne	r1, r0, lsl #26
    a5e8:	70bb0000 	adcsvc	r0, fp, r0
    a5ec:	70b70000 	adcsvc	r0, r7, r0
    a5f0:	b81f0000 	ldmdalt	pc, {}	; <UNPREDICTABLE>
    a5f4:	20000004 	andcs	r0, r0, r4
    a5f8:	00001226 	andeq	r1, r0, r6, lsr #4
    a5fc:	000070e3 	andeq	r7, r0, r3, ror #1
    a600:	000070d9 	ldrdeq	r7, [r0], -r9
    a604:	00123320 	andseq	r3, r2, r0, lsr #6
    a608:	00713100 	rsbseq	r3, r1, r0, lsl #2
    a60c:	00712b00 	rsbseq	r2, r1, r0, lsl #22
    a610:	12402000 	subne	r2, r0, #0
    a614:	71780000 	cmnvc	r8, r0
    a618:	71760000 	cmnvc	r6, r0
    a61c:	00000000 	andeq	r0, r0, r0
    a620:	00000019 	andeq	r0, r0, r9, lsl r0
    a624:	00141800 	andseq	r1, r4, r0, lsl #16
    a628:	50011a00 	andpl	r1, r1, r0, lsl #20
    a62c:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a630:	011a0800 	tsteq	sl, r0, lsl #16
    a634:	7e0a0351 	mcrvc	3, 0, r0, cr10, cr1, {2}
    a638:	21000001 	tstcs	r0, r1
    a63c:	0002e704 	andeq	lr, r2, r4, lsl #14
    a640:	0ba40900 	bleq	fe90ca48 <_estack+0xde90b810>
    a644:	01220000 			; <UNDEFINED> instruction: 0x01220000
    a648:	00002126 	andeq	r2, r0, r6, lsr #2
    a64c:	0a016001 	beq	62658 <_Min_Heap_Size+0x61e58>
    a650:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    a65c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    a660:	000be501 	andeq	lr, fp, r1, lsl #10
    a664:	13b12300 			; <UNDEFINED> instruction: 0x13b12300
    a668:	00000000 	andeq	r0, r0, r0
    a66c:	00020000 	andeq	r0, r2, r0
    a670:	00000000 	andeq	r0, r0, r0
    a674:	01000000 	mrseq	r0, (UNDEF: 0)
    a678:	000a0163 	andeq	r0, sl, r3, ror #2
    a67c:	1d960115 	ldfnes	f0, [r6, #84]	; 0x54
    a680:	56010000 	strpl	r0, [r1], -r0
    a684:	00010601 	andeq	r0, r1, r1, lsl #12
    a688:	00000000 	andeq	r0, r0, r0
    a68c:	02000000 	andeq	r0, r0, #0
    a690:	1601007d 			; <UNDEFINED> instruction: 0x1601007d
    a694:	00210201 	eoreq	r0, r1, r1, lsl #4
    a698:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    a69c:	00000106 	andeq	r0, r0, r6, lsl #2
    a6a0:	00000000 	andeq	r0, r0, r0
    a6a4:	718b0000 	orrvc	r0, fp, r0
    a6a8:	56010000 	strpl	r0, [r1], -r0
    a6ac:	1800000d 	stmdane	r0, {r0, r2, r3}
    a6b0:	00001e7f 	andeq	r1, r0, pc, ror lr
    a6b4:	33012a01 	movwcc	r2, #6657	; 0x1a01
    a6b8:	00000d56 	andeq	r0, r0, r6, asr sp
    a6bc:	000071b3 			; <UNDEFINED> instruction: 0x000071b3
    a6c0:	000071ab 	andeq	r7, r0, fp, lsr #3
    a6c4:	00000024 	andeq	r0, r0, r4, lsr #32
    a6c8:	00141800 	andseq	r1, r4, r0, lsl #16
    a6cc:	000c4b00 	andeq	r4, ip, r0, lsl #22
    a6d0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a6d4:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a6d8:	011a0800 	tsteq	sl, r0, lsl #16
    a6dc:	2d0a0351 	stccs	3, cr0, [sl, #-324]	; 0xfffffebc
    a6e0:	00240001 	eoreq	r0, r4, r1
    a6e4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a6e8:	69000014 	stmdbvs	r0, {r2, r4}
    a6ec:	1a00000c 	bne	a724 <_Min_Heap_Size+0x9f24>
    a6f0:	03055001 	movweq	r5, #20481	; 0x5001
    a6f4:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    a6f8:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a6fc:	00012e0a 	andeq	r2, r1, sl, lsl #28
    a700:	00000024 	andeq	r0, r0, r4, lsr #32
    a704:	00141800 	andseq	r1, r4, r0, lsl #16
    a708:	000c8700 	andeq	r8, ip, r0, lsl #14
    a70c:	50011a00 	andpl	r1, r1, r0, lsl #20
    a710:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a714:	011a0800 	tsteq	sl, r0, lsl #16
    a718:	360a0351 			; <UNDEFINED> instruction: 0x360a0351
    a71c:	00240001 	eoreq	r0, r4, r1
    a720:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a724:	a5000014 	strge	r0, [r0, #-20]	; 0xffffffec
    a728:	1a00000c 	bne	a760 <_Min_Heap_Size+0x9f60>
    a72c:	03055001 	movweq	r5, #20481	; 0x5001
    a730:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    a734:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a738:	0001370a 	andeq	r3, r1, sl, lsl #14
    a73c:	00000024 	andeq	r0, r0, r4, lsr #32
    a740:	00141800 	andseq	r1, r4, r0, lsl #16
    a744:	000cc300 	andeq	ip, ip, r0, lsl #6
    a748:	50011a00 	andpl	r1, r1, r0, lsl #20
    a74c:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a750:	011a0800 	tsteq	sl, r0, lsl #16
    a754:	380a0351 	stmdacc	sl, {r0, r4, r6, r8, r9}
    a758:	00240001 	eoreq	r0, r4, r1
    a75c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a760:	e1000014 	tst	r0, r4, lsl r0
    a764:	1a00000c 	bne	a79c <_Min_Heap_Size+0x9f9c>
    a768:	03055001 	movweq	r5, #20481	; 0x5001
    a76c:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    a770:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a774:	0001390a 	andeq	r3, r1, sl, lsl #18
    a778:	00000024 	andeq	r0, r0, r4, lsr #32
    a77c:	00141800 	andseq	r1, r4, r0, lsl #16
    a780:	000cff00 	andeq	pc, ip, r0, lsl #30
    a784:	50011a00 	andpl	r1, r1, r0, lsl #20
    a788:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a78c:	011a0800 	tsteq	sl, r0, lsl #16
    a790:	3a0a0351 	bcc	28b4dc <_Min_Heap_Size+0x28acdc>
    a794:	00240001 	eoreq	r0, r4, r1
    a798:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a79c:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    a7a0:	1a00000d 	bne	a7dc <_Min_Heap_Size+0x9fdc>
    a7a4:	03055001 	movweq	r5, #20481	; 0x5001
    a7a8:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    a7ac:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a7b0:	00013b0a 	andeq	r3, r1, sl, lsl #22
    a7b4:	00000024 	andeq	r0, r0, r4, lsr #32
    a7b8:	00141800 	andseq	r1, r4, r0, lsl #16
    a7bc:	000d3b00 	andeq	r3, sp, r0, lsl #22
    a7c0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a7c4:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a7c8:	011a0800 	tsteq	sl, r0, lsl #16
    a7cc:	3c0a0351 	stccc	3, cr0, [sl], {81}	; 0x51
    a7d0:	00190001 	andseq	r0, r9, r1
    a7d4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a7d8:	1a000014 	bne	a830 <_Min_Heap_Size+0xa030>
    a7dc:	03055001 	movweq	r5, #20481	; 0x5001
    a7e0:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    a7e4:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a7e8:	00013d0a 	andeq	r3, r1, sl, lsl #26
    a7ec:	18042100 	stmdane	r4, {r8, sp}
    a7f0:	25000008 	strcs	r0, [r0, #-8]
    a7f4:	00214301 	eoreq	r4, r1, r1, lsl #6
    a7f8:	01170100 	tsteq	r7, r0, lsl #2
    a7fc:	00000106 	andeq	r0, r0, r6, lsl #2
    a800:	00000000 	andeq	r0, r0, r0
    a804:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a808:	0db90100 	ldfeqs	f0, [r9]
    a80c:	1c180000 	ldcne	0, cr0, [r8], {-0}
    a810:	0100001e 	tsteq	r0, lr, lsl r0
    a814:	e71e0117 			; <UNDEFINED> instruction: 0xe71e0117
    a818:	eb000002 	bl	a828 <_Min_Heap_Size+0xa028>
    a81c:	e7000071 	smlsdx	r0, r1, r0, r0
    a820:	23000071 	movwcs	r0, #113	; 0x71
    a824:	00001402 	andeq	r1, r0, r2, lsl #8
    a828:	00000000 	andeq	r0, r0, r0
    a82c:	00000001 	andeq	r0, r0, r1
    a830:	00000000 	andeq	r0, r0, r0
    a834:	01200100 			; <UNDEFINED> instruction: 0x01200100
    a838:	140d2303 	strne	r2, [sp], #-771	; 0xfffffcfd
    a83c:	00000000 	andeq	r0, r0, r0
    a840:	00010000 	andeq	r0, r1, r0
    a844:	00000000 	andeq	r0, r0, r0
    a848:	01000000 	mrseq	r0, (UNDEF: 0)
    a84c:	00030121 	andeq	r0, r3, r1, lsr #2
    a850:	1e040125 	adfnesp	f0, f4, f5
    a854:	00010000 	andeq	r0, r1, r0
    a858:	00010601 	andeq	r0, r1, r1, lsl #12
    a85c:	00000000 	andeq	r0, r0, r0
    a860:	02000000 	andeq	r0, r0, #0
    a864:	eb01007d 	bl	4aa60 <_Min_Heap_Size+0x4a260>
    a868:	2300000d 	movwcs	r0, #13
    a86c:	000013f7 	strdeq	r1, [r0], -r7
    a870:	00000000 	andeq	r0, r0, r0
    a874:	00000002 	andeq	r0, r0, r2
    a878:	00000000 	andeq	r0, r0, r0
    a87c:	01030100 	mrseq	r0, (UNDEF: 19)
    a880:	01260003 			; <UNDEFINED> instruction: 0x01260003
    a884:	00001d83 	andeq	r1, r0, r3, lsl #27
    a888:	010ae301 	tsteq	sl, r1, lsl #6
    a88c:	000002e7 	andeq	r0, r0, r7, ror #5
    a890:	08001600 	stmdaeq	r0, {r9, sl, ip}
    a894:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
    a898:	01007d02 	tsteq	r0, r2, lsl #26
    a89c:	00000e72 	andeq	r0, r0, r2, ror lr
    a8a0:	0020d227 	eoreq	sp, r0, r7, lsr #4
    a8a4:	26e30100 	strbtcs	r0, [r3], r0, lsl #2
    a8a8:	000002e7 	andeq	r0, r0, r7, ror #5
    a8ac:	00007212 	andeq	r7, r0, r2, lsl r2
    a8b0:	0000720c 	andeq	r7, r0, ip, lsl #4
    a8b4:	0011b628 	andseq	fp, r1, r8, lsr #12
    a8b8:	00160000 	andseq	r0, r6, r0
    a8bc:	16000208 	strne	r0, [r0], -r8, lsl #4
    a8c0:	16220800 	strtne	r0, [r2], -r0, lsl #16
    a8c4:	e5010800 	str	r0, [r1, #-2048]	; 0xfffff800
    a8c8:	11c91d0b 	bicne	r1, r9, fp, lsl #26
    a8cc:	72460000 	subvc	r0, r6, #0
    a8d0:	72400000 	subvc	r0, r0, #0
    a8d4:	d1290000 			; <UNDEFINED> instruction: 0xd1290000
    a8d8:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    a8dc:	01080016 	tsteq	r8, r6, lsl r0
    a8e0:	0800160e 	stmdaeq	r0, {r1, r2, r3, r9, sl, ip}
    a8e4:	08001616 	stmdaeq	r0, {r1, r2, r4, r9, sl, ip}
    a8e8:	0307ee02 	movweq	lr, #32258	; 0x7e02
    a8ec:	0012ed1d 	andseq	lr, r2, sp, lsl sp
    a8f0:	00727600 	rsbseq	r7, r2, r0, lsl #12
    a8f4:	00727400 	rsbseq	r7, r2, r0, lsl #8
    a8f8:	12e01d00 	rscne	r1, r0, #0, 26
    a8fc:	728c0000 	addvc	r0, ip, #0
    a900:	728a0000 	addvc	r0, sl, #0
    a904:	00000000 	andeq	r0, r0, r0
    a908:	fd012a00 	stc2	10, cr2, [r1, #-0]	; <UNPREDICTABLE>
    a90c:	0100001e 	tsteq	r0, lr, lsl r0
    a910:	000106d6 	ldrdeq	r0, [r1], -r6
    a914:	00000000 	andeq	r0, r0, r0
    a918:	02000000 	andeq	r0, r0, #0
    a91c:	cf01007d 	svcgt	0x0001007d
    a920:	2800000e 	stmdacs	r0, {r1, r2, r3}
    a924:	000011d7 	ldrdeq	r1, [r0], -r7
    a928:	00000000 	andeq	r0, r0, r0
    a92c:	00000002 	andeq	r0, r0, r2
    a930:	00000000 	andeq	r0, r0, r0
    a934:	03d90100 	bicseq	r0, r9, #0, 2
    a938:	00140223 	andseq	r0, r4, r3, lsr #4
    a93c:	00000000 	andeq	r0, r0, r0
    a940:	00000400 	andeq	r0, r0, r0, lsl #8
    a944:	00000000 	andeq	r0, r0, r0
    a948:	94020000 	strls	r0, [r2], #-0
    a94c:	02230307 	eoreq	r0, r3, #469762048	; 0x1c000000
    a950:	00000014 	andeq	r0, r0, r4, lsl r0
    a954:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a960:	03079902 	movweq	r9, #30978	; 0x7902
    a964:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    a968:	00000f48 	andeq	r0, r0, r8, asr #30
    a96c:	0106c901 	tsteq	r6, r1, lsl #18
	...
    a978:	000072a1 	andeq	r7, r0, r1, lsr #5
    a97c:	000f6b01 	andeq	r6, pc, r1, lsl #22
    a980:	0f972700 	svceq	0x00972700
    a984:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    a988:	00024324 	andeq	r4, r2, r4, lsr #6
    a98c:	0072c900 	rsbseq	ip, r2, r0, lsl #18
    a990:	0072c100 	rsbseq	ip, r2, r0, lsl #2
    a994:	13772c00 	cmnne	r7, #0, 24
    a998:	00000000 	andeq	r0, r0, r0
    a99c:	00010000 	andeq	r0, r1, r0
    a9a0:	00000000 	andeq	r0, r0, r0
    a9a4:	01000000 	mrseq	r0, (UNDEF: 0)
    a9a8:	0f5103cf 	svceq	0x005103cf
    a9ac:	861d0000 	ldrhi	r0, [sp], -r0
    a9b0:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    a9b4:	03000073 	movweq	r0, #115	; 0x73
    a9b8:	23000073 	movwcs	r0, #115	; 0x73
    a9bc:	00001402 	andeq	r1, r0, r2, lsl #8
    a9c0:	00000000 	andeq	r0, r0, r0
    a9c4:	00000001 	andeq	r0, r0, r1
    a9c8:	00000000 	andeq	r0, r0, r0
    a9cc:	06bf0200 	ldrteq	r0, [pc], r0, lsl #4
    a9d0:	140d2305 	strne	r2, [sp], #-773	; 0xfffffcfb
    a9d4:	00000000 	andeq	r0, r0, r0
    a9d8:	00010000 	andeq	r0, r1, r0
    a9dc:	00000000 	andeq	r0, r0, r0
    a9e0:	02000000 	andeq	r0, r0, #0
    a9e4:	000506c0 	andeq	r0, r5, r0, asr #13
    a9e8:	00000019 	andeq	r0, r0, r9, lsl r0
    a9ec:	00141800 	andseq	r1, r4, r0, lsl #16
    a9f0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a9f4:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    a9f8:	011a0800 	tsteq	sl, r0, lsl #16
    a9fc:	cc080251 	sfmgt	f0, 4, [r8], {81}	; 0x51
    aa00:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    aa04:	00000ee7 	andeq	r0, r0, r7, ror #29
    aa08:	0106b901 	tsteq	r6, r1, lsl #18
    aa0c:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    aa10:	08001600 	stmdaeq	r0, {r9, sl, ip}
    aa14:	00007318 	andeq	r7, r0, r8, lsl r3
    aa18:	000fdb01 	andeq	sp, pc, r1, lsl #22
    aa1c:	0f972700 	svceq	0x00972700
    aa20:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    aa24:	00024323 	andeq	r4, r2, r3, lsr #6
    aa28:	00734000 	rsbseq	r4, r3, r0
    aa2c:	00733800 	rsbseq	r3, r3, r0, lsl #16
    aa30:	13942c00 	orrsne	r2, r4, #0, 24
    aa34:	15d60000 	ldrbne	r0, [r6]
    aa38:	d6010800 	strle	r0, [r1], -r0, lsl #16
    aa3c:	ea080015 	b	20aa98 <_Min_Heap_Size+0x20a298>
    aa40:	01080015 	tsteq	r8, r5, lsl r0
    aa44:	0fc103bf 	svceq	0x00c103bf
    aa48:	a31d0000 	tstge	sp, #0
    aa4c:	7c000013 	stcvc	0, cr0, [r0], {19}
    aa50:	7a000073 	bvc	ac24 <_Min_Heap_Size+0xa424>
    aa54:	00000073 	andeq	r0, r0, r3, ror r0
    aa58:	0015f419 	andseq	pc, r5, r9, lsl r4	; <UNPREDICTABLE>
    aa5c:	00141808 	andseq	r1, r4, r8, lsl #16
    aa60:	50011a00 	andpl	r1, r1, r0, lsl #20
    aa64:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    aa68:	011a0800 	tsteq	sl, r0, lsl #16
    aa6c:	bc080251 	sfmlt	f0, 4, [r8], {81}	; 0x51
    aa70:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    aa74:	00000e98 	muleq	r0, r8, lr
    aa78:	0106a301 	tsteq	r6, r1, lsl #6
    aa7c:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
    aa80:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    aa84:	0000738f 	andeq	r7, r0, pc, lsl #7
    aa88:	00112c01 	andseq	r2, r1, r1, lsl #24
    aa8c:	0f972700 	svceq	0x00972700
    aa90:	a3010000 	movwge	r0, #4096	; 0x1000
    aa94:	00024325 	andeq	r4, r2, r5, lsr #6
    aa98:	0073b700 	rsbseq	fp, r3, r0, lsl #14
    aa9c:	0073af00 	rsbseq	sl, r3, r0, lsl #30
    aaa0:	1f232700 	svcne	0x00232700
    aaa4:	a3010000 	movwge	r0, #4096	; 0x1000
    aaa8:	0002e734 	andeq	lr, r2, r4, lsr r7
    aaac:	0073fd00 	rsbseq	pc, r3, r0, lsl #26
    aab0:	0073f100 	rsbseq	pc, r3, r0, lsl #2
    aab4:	1f9f2700 	svcne	0x009f2700
    aab8:	a3010000 	movwge	r0, #4096	; 0x1000
    aabc:	0002e74e 	andeq	lr, r2, lr, asr #14
    aac0:	00745900 	rsbseq	r5, r4, r0, lsl #18
    aac4:	00744d00 	rsbseq	r4, r4, r0, lsl #26
    aac8:	1fb22d00 	svcne	0x00b22d00
    aacc:	a5010000 	strge	r0, [r1, #-0]
    aad0:	0002e70c 	andeq	lr, r2, ip, lsl #14
    aad4:	0074b500 	rsbseq	fp, r4, r0, lsl #10
    aad8:	0074a900 	rsbseq	sl, r4, r0, lsl #18
    aadc:	13b12e00 			; <UNDEFINED> instruction: 0x13b12e00
    aae0:	15540000 	ldrbne	r0, [r4, #-0]
    aae4:	54010800 	strpl	r0, [r1], #-2048	; 0xfffff800
    aae8:	5c080015 	stcpl	0, cr0, [r8], {21}
    aaec:	01080015 	tsteq	r8, r5, lsl r0
    aaf0:	4e2f13ab 	cdpmi	3, 2, cr1, cr15, cr11, {5}
    aaf4:	5c000012 	stcpl	0, cr0, [r0], {18}
    aaf8:	02080015 	andeq	r0, r8, #21
    aafc:	00000470 	andeq	r0, r0, r0, ror r4
    ab00:	c503ad01 	strgt	sl, [r3, #-3329]	; 0xfffff2ff
    ab04:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    ab08:	0000127b 	andeq	r1, r0, fp, ror r2
    ab0c:	0000750b 	andeq	r7, r0, fp, lsl #10
    ab10:	00007505 	andeq	r7, r0, r5, lsl #10
    ab14:	00126e1d 	andseq	r6, r2, sp, lsl lr
    ab18:	00753d00 	rsbseq	r3, r5, r0, lsl #26
    ab1c:	00753700 	rsbseq	r3, r5, r0, lsl #14
    ab20:	12611d00 	rsbne	r1, r1, #0, 26
    ab24:	75710000 	ldrbvc	r0, [r1, #-0]!
    ab28:	75690000 	strbvc	r0, [r9, #-0]!
    ab2c:	701f0000 	andsvc	r0, pc, r0
    ab30:	20000004 	andcs	r0, r0, r4
    ab34:	00001288 	andeq	r1, r0, r8, lsl #5
    ab38:	000075b1 			; <UNDEFINED> instruction: 0x000075b1
    ab3c:	000075a9 	andeq	r7, r0, r9, lsr #11
    ab40:	00129520 	andseq	r9, r2, r0, lsr #10
    ab44:	0075ed00 	rsbseq	lr, r5, r0, lsl #26
    ab48:	0075e900 	rsbseq	lr, r5, r0, lsl #18
    ab4c:	12a22000 	adcne	r2, r2, #0
    ab50:	760d0000 	strvc	r0, [sp], -r0
    ab54:	760b0000 	strvc	r0, [fp], -r0
    ab58:	00000000 	andeq	r0, r0, r0
    ab5c:	0012d12f 	andseq	sp, r2, pc, lsr #2
    ab60:	00158600 	andseq	r8, r5, r0, lsl #12
    ab64:	04880108 	streq	r0, [r8], #264	; 0x108
    ab68:	ad010000 	stcge	0, cr0, [r1, #-0]
    ab6c:	0010f503 	andseq	pc, r0, r3, lsl #10
    ab70:	12ed1d00 	rscne	r1, sp, #0, 26
    ab74:	76240000 	strtvc	r0, [r4], -r0
    ab78:	76200000 	strtvc	r0, [r0], -r0
    ab7c:	e01d0000 	ands	r0, sp, r0
    ab80:	46000012 			; <UNDEFINED> instruction: 0x46000012
    ab84:	42000076 	andmi	r0, r0, #118	; 0x76
    ab88:	00000076 	andeq	r0, r0, r6, ror r0
    ab8c:	0015a424 	andseq	sl, r5, r4, lsr #8
    ab90:	00141808 	andseq	r1, r4, r8, lsl #16
    ab94:	00111200 	andseq	r1, r1, r0, lsl #4
    ab98:	50011a00 	andpl	r1, r1, r0, lsl #20
    ab9c:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    aba0:	011a0800 	tsteq	sl, r0, lsl #16
    aba4:	a8080251 	stmdage	r8, {r0, r4, r6, r9}
    aba8:	15ae1900 	strne	r1, [lr, #2304]!	; 0x900
    abac:	14180800 	ldrne	r0, [r8], #-2048	; 0xfffff800
    abb0:	011a0000 	tsteq	sl, r0
    abb4:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    abb8:	1a08002d 	bne	20ac74 <_Min_Heap_Size+0x20a474>
    abbc:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    abc0:	2b0000a9 	blcs	ae6c <_Min_Heap_Size+0xa66c>
    abc4:	00206f01 	eoreq	r6, r0, r1, lsl #30
    abc8:	068d0100 	streq	r0, [sp], r0, lsl #2
    abcc:	00150801 	andseq	r0, r5, r1, lsl #16
    abd0:	00154408 	andseq	r4, r5, r8, lsl #8
    abd4:	00766408 	rsbseq	r6, r6, r8, lsl #8
    abd8:	11b60100 			; <UNDEFINED> instruction: 0x11b60100
    abdc:	c6270000 	strtgt	r0, [r7], -r0
    abe0:	0100001d 	tsteq	r0, sp, lsl r0
    abe4:	02e72c8d 	rsceq	r2, r7, #36096	; 0x8d00
    abe8:	768e0000 	strvc	r0, [lr], r0
    abec:	76840000 	strvc	r0, [r4], r0
    abf0:	c02c0000 	eorgt	r0, ip, r0
    abf4:	12000013 	andne	r0, r0, #19
    abf8:	01080015 	tsteq	r8, r5, lsl r0
    abfc:	08001512 	stmdaeq	r0, {r1, r4, r8, sl, ip}
    ac00:	08001530 	stmdaeq	r0, {r4, r5, r8, sl, ip}
    ac04:	9c039301 	stcls	3, cr9, [r3], {1}
    ac08:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    ac0c:	000013cf 	andeq	r1, r0, pc, asr #7
    ac10:	000076d4 	ldrdeq	r7, [r0], -r4
    ac14:	000076d0 	ldrdeq	r7, [r0], -r0
    ac18:	0013dc20 	andseq	sp, r3, r0, lsr #24
    ac1c:	0076fb00 	rsbseq	pc, r6, r0, lsl #22
    ac20:	0076f500 	rsbseq	pc, r6, r0, lsl #10
    ac24:	13e92000 	mvnne	r2, #0
    ac28:	77280000 	strvc	r0, [r8, -r0]!
    ac2c:	77240000 	strvc	r0, [r4, -r0]!
    ac30:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ac34:	0800153a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, ip}
    ac38:	00001418 	andeq	r1, r0, r8, lsl r4
    ac3c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ac40:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    ac44:	51011a08 	tstpl	r1, r8, lsl #20
    ac48:	00900802 	addseq	r0, r0, r2, lsl #16
    ac4c:	21173000 	tstcs	r7, r0
    ac50:	e6020000 	str	r0, [r2], -r0
    ac54:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    ac58:	03000002 	movweq	r0, #2
    ac5c:	000011d7 	ldrdeq	r1, [r0], -r7
    ac60:	001fc531 	andseq	ip, pc, r1, lsr r5	; <UNPREDICTABLE>
    ac64:	07e60200 	strbeq	r0, [r6, r0, lsl #4]!
    ac68:	0002e732 	andeq	lr, r2, r2, lsr r7
    ac6c:	54320000 	ldrtpl	r0, [r2], #-0
    ac70:	0200001e 	andeq	r0, r0, #30
    ac74:	01220792 			; <UNDEFINED> instruction: 0x01220792
    ac78:	14330301 	ldrtne	r0, [r3], #-769	; 0xfffffcff
    ac7c:	02000020 	andeq	r0, r0, #32
    ac80:	01160760 	tsteq	r6, r0, ror #14
    ac84:	00124e03 	andseq	r4, r2, r3, lsl #28
    ac88:	1fa23100 	svcne	0x00a23100
    ac8c:	60020000 	andvs	r0, r2, r0
    ac90:	02e73407 	rsceq	r3, r7, #117440512	; 0x7000000
    ac94:	c6310000 	ldrtgt	r0, [r1], -r0
    ac98:	0200001d 	andeq	r0, r0, #29
    ac9c:	e7470760 	strb	r0, [r7, -r0, ror #14]
    aca0:	31000002 	tstcc	r0, r2
    aca4:	00001f22 	andeq	r1, r0, r2, lsr #30
    aca8:	66076002 	strvs	r6, [r7], -r2
    acac:	00000baa 	andeq	r0, r0, sl, lsr #23
    acb0:	001f9e31 	andseq	r9, pc, r1, lsr lr	; <UNPREDICTABLE>
    acb4:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    acb8:	000baa88 	andeq	sl, fp, r8, lsl #21
    acbc:	20b73400 	adcscs	r3, r7, r0, lsl #8
    acc0:	62020000 	andvs	r0, r2, #0
    acc4:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    acc8:	88340000 	ldmdahi	r4!, {}	; <UNPREDICTABLE>
    accc:	0200001e 	andeq	r0, r0, #30
    acd0:	e70c0763 	str	r0, [ip, -r3, ror #14]
    acd4:	34000002 	strcc	r0, [r0], #-2
    acd8:	00002004 	andeq	r2, r0, r4
    acdc:	0c076402 	cfstrseq	mvf6, [r7], {2}
    ace0:	000002e7 	andeq	r0, r0, r7, ror #5
    ace4:	1feb3000 	svcne	0x00eb3000
    ace8:	45020000 	strmi	r0, [r2, #-0]
    acec:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    acf0:	03000002 	movweq	r0, #2
    acf4:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    acf8:	001dc631 	andseq	ip, sp, r1, lsr r6
    acfc:	07450200 	strbeq	r0, [r5, -r0, lsl #4]
    ad00:	0002e738 	andeq	lr, r2, r8, lsr r7
    ad04:	1f233100 	svcne	0x00233100
    ad08:	45020000 	strmi	r0, [r2, #-0]
    ad0c:	02e75007 	rsceq	r5, r7, #7
    ad10:	9f310000 	svcls	0x00310000
    ad14:	0200001f 	andeq	r0, r0, #31
    ad18:	e76a0745 	strb	r0, [sl, -r5, asr #14]!
    ad1c:	34000002 	strcc	r0, [r0], #-2
    ad20:	000020b7 	strheq	r2, [r0], -r7
    ad24:	0c074702 	stceq	7, cr4, [r7], {2}
    ad28:	000002e7 	andeq	r0, r0, r7, ror #5
    ad2c:	001e8834 	andseq	r8, lr, r4, lsr r8
    ad30:	07480200 	strbeq	r0, [r8, -r0, lsl #4]
    ad34:	0002e70c 	andeq	lr, r2, ip, lsl #14
    ad38:	20043400 	andcs	r3, r4, r0, lsl #8
    ad3c:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    ad40:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    ad44:	30000000 	andcc	r0, r0, r0
    ad48:	00001f8b 	andeq	r1, r0, fp, lsl #31
    ad4c:	1a072c02 	bne	1d5d5c <_Min_Heap_Size+0x1d555c>
    ad50:	0002e701 	andeq	lr, r2, r1, lsl #14
    ad54:	12d10300 	sbcsne	r0, r1, #0, 6
    ad58:	97310000 	ldrls	r0, [r1, -r0]!
    ad5c:	0200000f 	andeq	r0, r0, #15
    ad60:	4337072c 	teqmi	r7, #44, 14	; 0xb00000
    ad64:	00000002 	andeq	r0, r0, r2
    ad68:	00219433 	eoreq	r9, r1, r3, lsr r4
    ad6c:	07160200 	ldreq	r0, [r6, -r0, lsl #4]
    ad70:	fb030116 	blx	cb1d2 <_Min_Heap_Size+0xca9d2>
    ad74:	31000012 	tstcc	r0, r2, lsl r0
    ad78:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    ad7c:	33071602 	movwcc	r1, #30210	; 0x7602
    ad80:	00000243 	andeq	r0, r0, r3, asr #4
    ad84:	001f4431 	andseq	r4, pc, r1, lsr r4	; <UNPREDICTABLE>
    ad88:	07160200 	ldreq	r0, [r6, -r0, lsl #4]
    ad8c:	0002e742 	andeq	lr, r2, r2, asr #14
    ad90:	57300000 	ldrpl	r0, [r0, -r0]!
    ad94:	02000021 	andeq	r0, r0, #33	; 0x21
    ad98:	011a0700 	tsteq	sl, r0, lsl #14
    ad9c:	000002e7 	andeq	r0, r0, r7, ror #5
    ada0:	00131c03 	andseq	r1, r3, r3, lsl #24
    ada4:	0f973100 	svceq	0x00973100
    ada8:	00020000 	andeq	r0, r2, r0
    adac:	02433507 	subeq	r3, r3, #29360128	; 0x1c00000
    adb0:	33000000 	movwcc	r0, #0
    adb4:	00001e3d 	andeq	r1, r0, sp, lsr lr
    adb8:	1606ef02 	strne	lr, [r6], -r2, lsl #30
    adbc:	13390301 	teqne	r9, #67108864	; 0x4000000
    adc0:	97310000 	ldrls	r0, [r1, -r0]!
    adc4:	0200000f 	andeq	r0, r0, #15
    adc8:	433706ef 	teqmi	r7, #250609664	; 0xef00000
    adcc:	00000002 	andeq	r0, r0, r2
    add0:	00208c33 	eoreq	r8, r0, r3, lsr ip
    add4:	06e00200 	strbteq	r0, [r0], r0, lsl #4
    add8:	56030116 			; <UNDEFINED> instruction: 0x56030116
    addc:	31000013 	tstcc	r0, r3, lsl r0
    ade0:	00000f97 	muleq	r0, r7, pc	; <UNPREDICTABLE>
    ade4:	3506e002 	strcc	lr, [r6, #-2]
    ade8:	00000243 	andeq	r0, r0, r3, asr #4
    adec:	1fd03000 	svcne	0x00d03000
    adf0:	cd020000 	stcgt	0, cr0, [r2, #-0]
    adf4:	e7011a06 	str	r1, [r1, -r6, lsl #20]
    adf8:	03000002 	movweq	r0, #2
    adfc:	00001377 	andeq	r1, r0, r7, ror r3
    ae00:	000f9731 	andeq	r9, pc, r1, lsr r7	; <UNPREDICTABLE>
    ae04:	06cd0200 	strbeq	r0, [sp], r0, lsl #4
    ae08:	00024339 	andeq	r4, r2, r9, lsr r3
    ae0c:	d4330000 	ldrtle	r0, [r3], #-0
    ae10:	0200001e 	andeq	r0, r0, #30
    ae14:	011606ba 			; <UNDEFINED> instruction: 0x011606ba
    ae18:	00139403 	andseq	r9, r3, r3, lsl #8
    ae1c:	0f973100 	svceq	0x00973100
    ae20:	ba020000 	blt	8ae28 <_Min_Heap_Size+0x8a628>
    ae24:	02433206 	subeq	r3, r3, #1610612736	; 0x60000000
    ae28:	33000000 	movwcc	r0, #0
    ae2c:	000020a1 	andeq	r2, r0, r1, lsr #1
    ae30:	16069402 	strne	r9, [r6], -r2, lsl #8
    ae34:	13b10301 			; <UNDEFINED> instruction: 0x13b10301
    ae38:	97310000 	ldrls	r0, [r1, -r0]!
    ae3c:	0200000f 	andeq	r0, r0, #15
    ae40:	43310694 	teqmi	r1, #148, 12	; 0x9400000
    ae44:	00000002 	andeq	r0, r0, r2
    ae48:	00216835 	eoreq	r6, r1, r5, lsr r8
    ae4c:	06880200 	streq	r0, [r8], r0, lsl #4
    ae50:	02e7011a 	rsceq	r0, r7, #-2147483642	; 0x80000006
    ae54:	33030000 	movwcc	r0, #12288	; 0x3000
    ae58:	00001f57 	andeq	r1, r0, r7, asr pc
    ae5c:	16067502 	strne	r7, [r6], -r2, lsl #10
    ae60:	13f70301 	mvnsne	r0, #67108864	; 0x4000000
    ae64:	c6310000 	ldrtgt	r0, [r1], -r0
    ae68:	0200001d 	andeq	r0, r0, #29
    ae6c:	e73a0675 			; <UNDEFINED> instruction: 0xe73a0675
    ae70:	34000002 	strcc	r0, [r0], #-2
    ae74:	00001f12 	andeq	r1, r0, r2, lsl pc
    ae78:	0c067702 	stceq	7, cr7, [r6], {2}
    ae7c:	000002e7 	andeq	r0, r0, r7, ror #5
    ae80:	0020b734 	eoreq	fp, r0, r4, lsr r7
    ae84:	06780200 	ldrbteq	r0, [r8], -r0, lsl #4
    ae88:	0002e70c 	andeq	lr, r2, ip, lsl #14
    ae8c:	49360000 	ldmdbmi	r6!, {}	; <UNPREDICTABLE>
    ae90:	03000020 	movweq	r0, #32
    ae94:	011b0118 	tsteq	fp, r8, lsl r1
    ae98:	1f853603 	svcne	0x00853603
    ae9c:	0d030000 	stceq	0, cr0, [r3, #-0]
    aea0:	03011b01 	movweq	r1, #6913	; 0x1b01
    aea4:	001fe536 	andseq	lr, pc, r6, lsr r5	; <UNPREDICTABLE>
    aea8:	01020300 	mrseq	r0, LR_svc
    aeac:	3703011b 	smladcc	r3, fp, r1, r0
    aeb0:	0a0e0101 	beq	38b2bc <_Min_Heap_Size+0x38aabc>
    aeb4:	0a0e0000 	beq	38aebc <_Min_Heap_Size+0x38a6bc>
    aeb8:	e6090000 	str	r0, [r9], -r0
    aebc:	fe000801 	vcmla.f16	d0, d0, d1[0], #0
    aec0:	0200000a 	andeq	r0, r0, #10
    aec4:	0016d000 	andseq	sp, r6, r0
    aec8:	88010400 	stmdahi	r1, {sl}
    aecc:	0c000005 	stceq	0, cr0, [r0], {5}
    aed0:	000023fd 	strdeq	r2, [r0], -sp
    aed4:	00000895 	muleq	r0, r5, r8
    aed8:	000005a0 	andeq	r0, r0, r0, lsr #11
	...
    aee4:	00008227 	andeq	r8, r0, r7, lsr #4
    aee8:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    aeec:	05000002 	streq	r0, [r0, #-2]
    aef0:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    aef4:	cd030000 	stcgt	0, cr0, [r3, #-0]
    aef8:	7200000c 	andvc	r0, r0, #12
    aefc:	000cfc03 	andeq	pc, ip, r3, lsl #24
    af00:	5c037400 	cfstrspl	mvf7, [r3], {-0}
    af04:	7500000d 	strvc	r0, [r0, #-13]
    af08:	000c0303 	andeq	r0, ip, r3, lsl #6
    af0c:	ae037600 	cfmadd32ge	mvax0, mvfx7, mvfx3, mvfx0
    af10:	7b00000d 	blvc	af4c <_Min_Heap_Size+0xa74c>
    af14:	000f2903 	andeq	r2, pc, r3, lsl #18
    af18:	07037c00 	streq	r7, [r3, -r0, lsl #24]
    af1c:	7e000010 	mcrvc	0, 0, r0, cr0, cr0, {0}
    af20:	000b7503 	andeq	r7, fp, r3, lsl #10
    af24:	e1047f00 	tst	r4, r0, lsl #30
    af28:	0000000c 	andeq	r0, r0, ip
    af2c:	000ecd04 	andeq	ip, lr, r4, lsl #26
    af30:	12040100 	andne	r0, r4, #0, 2
    af34:	0200000d 	andeq	r0, r0, #13
    af38:	000a7004 	andeq	r7, sl, r4
    af3c:	da040300 	ble	10bb44 <_Min_Heap_Size+0x10b344>
    af40:	0400000a 	streq	r0, [r0], #-10
    af44:	000f5c04 	andeq	r5, pc, r4, lsl #24
    af48:	fa040500 	blx	10c350 <_Min_Heap_Size+0x10bb50>
    af4c:	0600000e 	streq	r0, [r0], -lr
    af50:	000c6d04 	andeq	r6, ip, r4, lsl #26
    af54:	7e040700 	cdpvc	7, 0, cr0, cr4, cr0, {0}
    af58:	0800000a 	stmdaeq	r0, {r1, r3}
    af5c:	000ffc04 	andeq	pc, pc, r4, lsl #24
    af60:	e9040900 	stmdb	r4, {r8, fp}
    af64:	0a00000d 	beq	afa0 <_Min_Heap_Size+0xa7a0>
    af68:	000e4504 	andeq	r4, lr, r4, lsl #10
    af6c:	0f040b00 	svceq	0x00040b00
    af70:	0c00000e 	stceq	0, cr0, [r0], {14}
    af74:	000b9f04 	andeq	r9, fp, r4, lsl #30
    af78:	65040d00 	strvs	r0, [r4, #-3328]	; 0xfffff300
    af7c:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    af80:	000f0504 	andeq	r0, pc, r4, lsl #10
    af84:	85040f00 	strhi	r0, [r4, #-3840]	; 0xfffff100
    af88:	1000000c 	andne	r0, r0, ip
    af8c:	000a8904 	andeq	r8, sl, r4, lsl #18
    af90:	c4041100 	strgt	r1, [r4], #-256	; 0xffffff00
    af94:	1200000e 	andne	r0, r0, #14
    af98:	000c7804 	andeq	r7, ip, r4, lsl #16
    af9c:	21041300 	mrscs	r1, LR_abt
    afa0:	1400000c 	strne	r0, [r0], #-12
    afa4:	000fca04 	andeq	ip, pc, r4, lsl #20
    afa8:	22041500 	andcs	r1, r4, #0, 10
    afac:	1600000d 	strne	r0, [r0], -sp
    afb0:	000fd804 	andeq	sp, pc, r4, lsl #16
    afb4:	75041700 	strvc	r1, [r4, #-1792]	; 0xfffff900
    afb8:	1800000d 	stmdane	r0, {r0, r2, r3}
    afbc:	000f8904 	andeq	r8, pc, r4, lsl #18
    afc0:	5d041900 	vstrpl.16	s2, [r4, #-0]	; <UNPREDICTABLE>
    afc4:	1a00000b 	bne	aff8 <_Min_Heap_Size+0xa7f8>
    afc8:	000c6004 	andeq	r6, ip, r4
    afcc:	e5041b00 	str	r1, [r4, #-2816]	; 0xfffff500
    afd0:	1c00000a 	stcne	0, cr0, [r0], {10}
    afd4:	000e8204 	andeq	r8, lr, r4, lsl #4
    afd8:	2f041d00 	svccs	0x00041d00
    afdc:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
    afe0:	000c5304 	andeq	r5, ip, r4, lsl #6
    afe4:	d3041f00 	movwle	r1, #20224	; 0x4f00
    afe8:	2000000b 	andcs	r0, r0, fp
    afec:	000e0204 	andeq	r0, lr, r4, lsl #4
    aff0:	47042100 	strmi	r2, [r4, -r0, lsl #2]
    aff4:	2200000d 	andcs	r0, r0, #13
    aff8:	000da404 	andeq	sl, sp, r4, lsl #8
    affc:	1a042300 	bne	113c04 <_Min_Heap_Size+0x113404>
    b000:	2400000b 	strcs	r0, [r0], #-11
    b004:	000e8c04 	andeq	r8, lr, r4, lsl #24
    b008:	39042500 	stmdbcc	r4, {r8, sl, sp}
    b00c:	2600000c 	strcs	r0, [r0], -ip
    b010:	000b8204 	andeq	r8, fp, r4, lsl #4
    b014:	73042700 	movwvc	r2, #18176	; 0x4700
    b018:	2800000e 	stmdacs	r0, {r1, r2, r3}
    b01c:	000e5704 	andeq	r5, lr, r4, lsl #14
    b020:	d8042900 	stmdale	r4, {r8, fp, sp}
    b024:	2a00000d 	bcs	b060 <_Min_Heap_Size+0xa860>
    b028:	000b2404 	andeq	r2, fp, r4, lsl #8
    b02c:	9b042b00 	blls	115c34 <_Min_Heap_Size+0x115434>
    b030:	2c00000a 	stccs	0, cr0, [r0], {10}
    b034:	000c9704 	andeq	r9, ip, r4, lsl #14
    b038:	e5042d00 	str	r2, [r4, #-3328]	; 0xfffff300
    b03c:	2e00000f 	cdpcs	0, 0, cr0, cr0, cr15, {0}
    b040:	00102604 	andseq	r2, r0, r4, lsl #12
    b044:	dd042f00 	stcle	15, cr2, [r4, #-0]
    b048:	3000000e 	andcc	r0, r0, lr
    b04c:	000ff204 	andeq	pc, pc, r4, lsl #4
    b050:	f9043100 			; <UNDEFINED> instruction: 0xf9043100
    b054:	3200000b 	andcc	r0, r0, #11
    b058:	000ad004 	andeq	sp, sl, r4
    b05c:	c3043300 	movwgt	r3, #17152	; 0x4300
    b060:	3400000d 	strcc	r0, [r0], #-13
    b064:	000d6a04 	andeq	r6, sp, r4, lsl #20
    b068:	f4043500 	vst3.8	{d3,d5,d7}, [r4], r0
    b06c:	3600000d 	strcc	r0, [r0], -sp
    b070:	000d8804 	andeq	r8, sp, r4, lsl #16
    b074:	30043700 	andcc	r3, r4, r0, lsl #14
    b078:	3800000d 	stmdacc	r0, {r0, r2, r3}
    b07c:	000abe04 	andeq	fp, sl, r4, lsl #28
    b080:	38043900 	stmdacc	r4, {r8, fp, ip, sp}
    b084:	3a000010 	bcc	b0cc <_Min_Heap_Size+0xa8cc>
    b088:	000e2104 	andeq	r2, lr, r4, lsl #2
    b08c:	b1043b00 	tstlt	r4, r0, lsl #22
    b090:	3c00000b 	stccc	0, cr0, [r0], {11}
    b094:	000e3304 	andeq	r3, lr, r4, lsl #6
    b098:	ef043f00 	svc	0x00043f00
    b09c:	4000000a 	andmi	r0, r0, sl
    b0a0:	000eb604 	andeq	fp, lr, r4, lsl #12
    b0a4:	eb044100 	bl	11b4ac <_Min_Heap_Size+0x11acac>
    b0a8:	4200000b 	andmi	r0, r0, #11
    b0ac:	000cc104 	andeq	ip, ip, r4, lsl #2
    b0b0:	4b044300 	blmi	11bcb8 <_Min_Heap_Size+0x11b4b8>
    b0b4:	4400000b 	strmi	r0, [r0], #-11
    b0b8:	000f1704 	andeq	r1, pc, r4, lsl #14
    b0bc:	af044500 	svcge	0x00044500
    b0c0:	4600000c 	strmi	r0, [r0], -ip
    b0c4:	000afd04 	andeq	pc, sl, r4, lsl #26
    b0c8:	3b044700 	blcc	11ccd0 <_Min_Heap_Size+0x11c4d0>
    b0cc:	4800000f 	stmdami	r0, {r0, r1, r2, r3}
    b0d0:	000e6604 	andeq	r6, lr, r4, lsl #12
    b0d4:	b0044900 	andlt	r4, r4, r0, lsl #18
    b0d8:	4a00000f 	bmi	b11c <_Min_Heap_Size+0xa91c>
    b0dc:	00101304 	andseq	r1, r0, r4, lsl #6
    b0e0:	eb044b00 	bl	11dce8 <_Min_Heap_Size+0x11d4e8>
    b0e4:	4c00000c 	stcmi	0, cr0, [r0], {12}
    b0e8:	000d9204 	andeq	r9, sp, r4, lsl #4
    b0ec:	ad044d00 	stcge	13, cr4, [r4, #-0]
    b0f0:	5000000e 	andpl	r0, r0, lr
    b0f4:	000dba04 	andeq	fp, sp, r4, lsl #20
    b0f8:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    b0fc:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    b100:	66060000 	strvs	r0, [r6], -r0
    b104:	02000000 	andeq	r0, r0, #0
    b108:	024f182b 	subeq	r1, pc, #2818048	; 0x2b0000
    b10c:	01050000 	mrseq	r0, (UNDEF: 5)
    b110:	00057408 	andeq	r7, r5, r8, lsl #8
    b114:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    b118:	000003fd 	strdeq	r0, [r0], -sp
    b11c:	8f070205 	svchi	0x00070205
    b120:	05000007 	streq	r0, [r0, #-7]
    b124:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    b128:	c2060000 	andgt	r0, r6, #0
    b12c:	02000002 	andeq	r0, r0, #2
    b130:	0277194f 	rsbseq	r1, r7, #1294336	; 0x13c000
    b134:	04050000 	streq	r0, [r5], #-0
    b138:	0000b307 	andeq	fp, r0, r7, lsl #6
    b13c:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    b140:	000002e7 	andeq	r0, r0, r7, ror #5
    b144:	ae070805 	cdpge	8, 0, cr0, cr7, cr5, {0}
    b148:	07000000 	streq	r0, [r0, -r0]
    b14c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    b150:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    b154:	0000b807 	andeq	fp, r0, r7, lsl #16
    b158:	00680600 	rsbeq	r0, r8, r0, lsl #12
    b15c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    b160:	00024313 	andeq	r4, r2, r3, lsl r3
    b164:	02c40600 	sbceq	r0, r4, #0, 12
    b168:	30030000 	andcc	r0, r3, r0
    b16c:	00026b14 	andeq	r6, r2, r4, lsl fp
    b170:	02a60800 	adceq	r0, r6, #0, 16
    b174:	b2090000 	andlt	r0, r9, #0
    b178:	0a000002 	beq	b188 <_Min_Heap_Size+0xa988>
    b17c:	02fc0410 	rscseq	r0, ip, #16, 8	; 0x10000000
    b180:	00030709 	andeq	r0, r3, r9, lsl #14
    b184:	21520b00 	cmpcs	r2, r0, lsl #22
    b188:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    b18c:	02b21202 	adcseq	r1, r2, #536870912	; 0x20000000
    b190:	23020000 	movwcs	r0, #8192	; 0x2000
    b194:	1fc00b00 	svcne	0x00c00b00
    b198:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    b19c:	02b21202 	adcseq	r1, r2, #536870912	; 0x20000000
    b1a0:	23020000 	movwcs	r0, #8192	; 0x2000
    b1a4:	41560c04 	cmpmi	r6, r4, lsl #24
    b1a8:	0004004c 	andeq	r0, r4, ip, asr #32
    b1ac:	02b21203 	adcseq	r1, r2, #805306368	; 0x30000000
    b1b0:	23020000 	movwcs	r0, #8192	; 0x2000
    b1b4:	1f1c0b08 	svcne	0x001c0b08
    b1b8:	01040000 	mrseq	r0, (UNDEF: 4)
    b1bc:	02b71203 	adcseq	r1, r7, #805306368	; 0x30000000
    b1c0:	23020000 	movwcs	r0, #8192	; 0x2000
    b1c4:	c70d000c 	strgt	r0, [sp, -ip]
    b1c8:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b1cc:	bc030302 	stclt	3, cr0, [r3], {2}
    b1d0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    b1d4:	000002a6 	andeq	r0, r0, r6, lsr #5
    b1d8:	00000324 	andeq	r0, r0, r4, lsr #6
    b1dc:	0002930f 	andeq	r9, r2, pc, lsl #6
    b1e0:	10000100 	andne	r0, r0, r0, lsl #2
    b1e4:	000017fe 	strdeq	r1, [r0], -lr
    b1e8:	a6113909 	ldrge	r3, [r1], -r9, lsl #18
    b1ec:	01000002 	tsteq	r0, r2
    b1f0:	05100a01 	ldreq	r0, [r0, #-2561]	; 0xfffff5ff
    b1f4:	7c090137 	stfvcs	f0, [r9], {55}	; 0x37
    b1f8:	0b000003 	bleq	b20c <_Min_Heap_Size+0xaa0c>
    b1fc:	0000220a 	andeq	r2, r0, sl, lsl #4
    b200:	11013905 	tstne	r1, r5, lsl #18
    b204:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b208:	0c002302 	stceq	3, cr2, [r0], {2}
    b20c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    b210:	b211013a 	andslt	r0, r1, #-2147483634	; 0x8000000e
    b214:	02000002 	andeq	r0, r0, #2
    b218:	530b0423 	movwpl	r0, #46115	; 0xb423
    b21c:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    b220:	b211013b 	andslt	r0, r1, #-1073741810	; 0xc000000e
    b224:	02000002 	andeq	r0, r0, #2
    b228:	0d0b0823 	stceq	8, cr0, [fp, #-140]	; 0xffffff74
    b22c:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    b230:	b211013c 	andslt	r0, r1, #60, 2
    b234:	02000002 	andeq	r0, r0, #2
    b238:	0d000c23 	stceq	12, cr0, [r0, #-140]	; 0xffffff74
    b23c:	000023a9 	andeq	r2, r0, r9, lsr #7
    b240:	03013d05 	movweq	r3, #7429	; 0x1d05
    b244:	00000332 	andeq	r0, r0, r2, lsr r3
    b248:	68051c0a 	stmdavs	r5, {r1, r3, sl, fp, ip}
    b24c:	04020901 	streq	r0, [r2], #-2305	; 0xfffff6ff
    b250:	410c0000 	mrsmi	r0, (UNDEF: 12)
    b254:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    b258:	b211016a 	andslt	r0, r1, #-2147483622	; 0x8000001a
    b25c:	02000002 	andeq	r0, r0, #2
    b260:	860b0023 	strhi	r0, [fp], -r3, lsr #32
    b264:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    b268:	b211016b 	andslt	r0, r1, #-1073741798	; 0xc000001a
    b26c:	02000002 	andeq	r0, r0, #2
    b270:	830b0423 	movwhi	r0, #46115	; 0xb423
    b274:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    b278:	b211016c 	andslt	r0, r1, #108, 2
    b27c:	02000002 	andeq	r0, r0, #2
    b280:	530c0823 	movwpl	r0, #51235	; 0xc823
    b284:	6d050052 	stcvs	0, cr0, [r5, #-328]	; 0xfffffeb8
    b288:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b28c:	23020000 	movwcs	r0, #8192	; 0x2000
    b290:	52430c0c 	subpl	r0, r3, #12, 24	; 0xc00
    b294:	016e0500 	cmneq	lr, r0, lsl #10
    b298:	0002b211 	andeq	fp, r2, r1, lsl r2
    b29c:	10230200 	eorne	r0, r3, r0, lsl #4
    b2a0:	0017680b 	andseq	r6, r7, fp, lsl #16
    b2a4:	016f0500 	cmneq	pc, r0, lsl #10
    b2a8:	0002b211 	andeq	fp, r2, r1, lsl r2
    b2ac:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    b2b0:	00179a0b 	andseq	r9, r7, fp, lsl #20
    b2b4:	01700500 	cmneq	r0, r0, lsl #10
    b2b8:	0002b211 	andeq	fp, r2, r1, lsl r2
    b2bc:	18230200 	stmdane	r3!, {r9}
    b2c0:	176e0d00 	strbne	r0, [lr, -r0, lsl #26]!
    b2c4:	71050000 	mrsvc	r0, (UNDEF: 5)
    b2c8:	03890301 	orreq	r0, r9, #67108864	; 0x4000000
    b2cc:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    b2d0:	0901f405 	stmdbeq	r1, {r0, r2, sl, ip, sp, lr, pc}
    b2d4:	000005fb 	strdeq	r0, [r0], -fp
    b2d8:	0052430c 	subseq	r4, r2, ip, lsl #6
    b2dc:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    b2e0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b2e4:	0b002302 	bleq	13ef4 <_Min_Heap_Size+0x136f4>
    b2e8:	00000282 	andeq	r0, r0, r2, lsl #5
    b2ec:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    b2f0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b2f4:	0b042302 	bleq	113f04 <_Min_Heap_Size+0x113704>
    b2f8:	00000285 	andeq	r0, r0, r5, lsl #5
    b2fc:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    b300:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b304:	0c082302 	stceq	3, cr2, [r8], {2}
    b308:	00524943 	subseq	r4, r2, r3, asr #18
    b30c:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    b310:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b314:	0b0c2302 	bleq	313f24 <_Min_Heap_Size+0x313724>
    b318:	00000166 	andeq	r0, r0, r6, ror #2
    b31c:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    b320:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b324:	0b102302 	bleq	413f34 <_Min_Heap_Size+0x413734>
    b328:	00000717 	andeq	r0, r0, r7, lsl r7
    b32c:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    b330:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b334:	0b142302 	bleq	513f44 <_Min_Heap_Size+0x513744>
    b338:	0000067c 	andeq	r0, r0, ip, ror r6
    b33c:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    b340:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b344:	0b182302 	bleq	613f54 <_Min_Heap_Size+0x613754>
    b348:	0000050f 	andeq	r0, r0, pc, lsl #10
    b34c:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    b350:	000002a6 	andeq	r0, r0, r6, lsr #5
    b354:	0b1c2302 	bleq	713f64 <_Min_Heap_Size+0x713764>
    b358:	000004fa 	strdeq	r0, [r0], -sl
    b35c:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    b360:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b364:	0b202302 	bleq	813f74 <_Min_Heap_Size+0x813774>
    b368:	000001f9 	strdeq	r0, [r0], -r9
    b36c:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    b370:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b374:	0b242302 	bleq	913f84 <_Min_Heap_Size+0x913784>
    b378:	00000519 	andeq	r0, r0, r9, lsl r5
    b37c:	11020005 	tstne	r2, r5
    b380:	00000314 	andeq	r0, r0, r4, lsl r3
    b384:	0b282302 	bleq	a13f94 <_Min_Heap_Size+0xa13794>
    b388:	00000881 	andeq	r0, r0, r1, lsl #17
    b38c:	11020105 	tstne	r2, r5, lsl #2
    b390:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b394:	0b302302 	bleq	c13fa4 <_Min_Heap_Size+0xc137a4>
    b398:	00000787 	andeq	r0, r0, r7, lsl #15
    b39c:	11020205 	tstne	r2, r5, lsl #4
    b3a0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3a4:	0b342302 	bleq	d13fb4 <_Min_Heap_Size+0xd137b4>
    b3a8:	0000049c 	muleq	r0, ip, r4
    b3ac:	11020305 	tstne	r2, r5, lsl #6
    b3b0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3b4:	0b382302 	bleq	e13fc4 <_Min_Heap_Size+0xe137c4>
    b3b8:	00000523 	andeq	r0, r0, r3, lsr #10
    b3bc:	11020405 	tstne	r2, r5, lsl #8
    b3c0:	000002a6 	andeq	r0, r0, r6, lsr #5
    b3c4:	0b3c2302 	bleq	f13fd4 <_Min_Heap_Size+0xf137d4>
    b3c8:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    b3cc:	11020505 	tstne	r2, r5, lsl #10
    b3d0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3d4:	0b402302 	bleq	1013fe4 <_Min_Heap_Size+0x10137e4>
    b3d8:	00000674 	andeq	r0, r0, r4, ror r6
    b3dc:	11020605 	tstne	r2, r5, lsl #12
    b3e0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b3e4:	0b442302 	bleq	1113ff4 <_Min_Heap_Size+0x11137f4>
    b3e8:	0000052d 	andeq	r0, r0, sp, lsr #10
    b3ec:	11020705 	tstne	r2, r5, lsl #14
    b3f0:	00000314 	andeq	r0, r0, r4, lsl r3
    b3f4:	0b482302 	bleq	1214004 <_Min_Heap_Size+0x1213804>
    b3f8:	0000012b 	andeq	r0, r0, fp, lsr #2
    b3fc:	11020805 	tstne	r2, r5, lsl #16
    b400:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b404:	0b502302 	bleq	1414014 <_Min_Heap_Size+0x1413814>
    b408:	000004d6 	ldrdeq	r0, [r0], -r6
    b40c:	11020905 	tstne	r2, r5, lsl #18
    b410:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b414:	0b542302 	bleq	1514024 <_Min_Heap_Size+0x1513824>
    b418:	00000642 	andeq	r0, r0, r2, asr #12
    b41c:	11020a05 	tstne	r2, r5, lsl #20
    b420:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b424:	0b582302 	bleq	1614034 <_Min_Heap_Size+0x1613834>
    b428:	00000537 	andeq	r0, r0, r7, lsr r5
    b42c:	11020b05 	tstne	r2, r5, lsl #22
    b430:	000002a6 	andeq	r0, r0, r6, lsr #5
    b434:	0b5c2302 	bleq	1714044 <_Min_Heap_Size+0x1713844>
    b438:	0000001b 	andeq	r0, r0, fp, lsl r0
    b43c:	11020c05 	tstne	r2, r5, lsl #24
    b440:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b444:	0b602302 	bleq	1814054 <_Min_Heap_Size+0x1813854>
    b448:	000003ee 	andeq	r0, r0, lr, ror #7
    b44c:	11020d05 	tstne	r2, r5, lsl #26
    b450:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b454:	0b642302 	bleq	1914064 <_Min_Heap_Size+0x1913864>
    b458:	00000541 	andeq	r0, r0, r1, asr #10
    b45c:	11020e05 	tstne	r2, r5, lsl #28
    b460:	00000314 	andeq	r0, r0, r4, lsl r3
    b464:	0b682302 	bleq	1a14074 <_Min_Heap_Size+0x1a13874>
    b468:	00000809 	andeq	r0, r0, r9, lsl #16
    b46c:	11020f05 	tstne	r2, r5, lsl #30
    b470:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b474:	0c702302 	ldcleq	3, cr2, [r0], #-8
    b478:	00525343 	subseq	r5, r2, r3, asr #6
    b47c:	11021005 	tstne	r2, r5
    b480:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b484:	0b742302 	bleq	1d14094 <_Min_Heap_Size+0x1d13894>
    b488:	0000054b 	andeq	r0, r0, fp, asr #10
    b48c:	11021105 	tstne	r2, r5, lsl #2
    b490:	00000314 	andeq	r0, r0, r4, lsl r3
    b494:	0b782302 	bleq	1e140a4 <_Min_Heap_Size+0x1e138a4>
    b498:	000007d8 	ldrdeq	r0, [r0], -r8
    b49c:	11021205 	tstne	r2, r5, lsl #4
    b4a0:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b4a4:	01802303 	orreq	r2, r0, r3, lsl #6
    b4a8:	0003810b 	andeq	r8, r3, fp, lsl #2
    b4ac:	02130500 	andseq	r0, r3, #0, 10
    b4b0:	0002b211 	andeq	fp, r2, r1, lsl r2
    b4b4:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    b4b8:	cd0d0001 	stcgt	0, cr0, [sp, #-4]
    b4bc:	05000001 	streq	r0, [r0, #-1]
    b4c0:	0f030214 	svceq	0x00030214
    b4c4:	02000004 	andeq	r0, r0, #4
    b4c8:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    b4cc:	bf060000 	svclt	0x00060000
    b4d0:	00062301 	andeq	r2, r6, r1, lsl #6
    b4d4:	17920400 	ldrne	r0, [r2, r0, lsl #8]
    b4d8:	04000000 	streq	r0, [r0], #-0
    b4dc:	0000177c 	andeq	r1, r0, ip, ror r7
    b4e0:	08050001 	stmdaeq	r5, {r0}
    b4e4:	0006bf04 	andeq	fp, r6, r4, lsl #30
    b4e8:	01070200 	mrseq	r0, (UNDEF: 39)
    b4ec:	0000024f 	andeq	r0, r0, pc, asr #4
    b4f0:	51012707 	tstpl	r1, r7, lsl #14
    b4f4:	04000006 	streq	r0, [r0], #-6
    b4f8:	0000034a 	andeq	r0, r0, sl, asr #6
    b4fc:	06ad0400 	strteq	r0, [sp], r0, lsl #8
    b500:	04010000 	streq	r0, [r1], #-0
    b504:	000008e9 	andeq	r0, r0, r9, ror #17
    b508:	032b0402 			; <UNDEFINED> instruction: 0x032b0402
    b50c:	00030000 	andeq	r0, r3, r0
    b510:	0012fe06 	andseq	pc, r2, r6, lsl #28
    b514:	032c0700 			; <UNDEFINED> instruction: 0x032c0700
    b518:	0000062a 	andeq	r0, r0, sl, lsr #12
    b51c:	4f010702 	svcmi	0x00010702
    b520:	08000002 	stmdaeq	r0, {r1}
    b524:	06840132 			; <UNDEFINED> instruction: 0x06840132
    b528:	4e040000 	cdpmi	0, 0, cr0, cr4, cr0, {0}
    b52c:	64000022 	strvs	r0, [r0], #-34	; 0xffffffde
    b530:	00228e04 	eoreq	r8, r2, r4, lsl #28
    b534:	dd040a00 	vstrle	s0, [r4, #-0]
    b538:	01000022 	tsteq	r0, r2, lsr #32
    b53c:	00232e04 	eoreq	r2, r3, r4, lsl #28
    b540:	06000100 	streq	r0, [r0], -r0, lsl #2
    b544:	000021d9 	ldrdeq	r2, [r0], -r9
    b548:	5d033708 	stcpl	7, cr3, [r3, #-32]	; 0xffffffe0
    b54c:	10000006 	andne	r0, r0, r6
    b550:	000022d6 	ldrdeq	r2, [r0], -r6
    b554:	b216cc08 	andslt	ip, r6, #8, 24	; 0x800
    b558:	01000002 	tsteq	r0, r2
    b55c:	18261001 	stmdane	r6!, {r0, ip}
    b560:	cd080000 	stcgt	0, cr0, [r8, #-0]
    b564:	0002a611 	andeq	sl, r2, r1, lsl r6
    b568:	10010100 	andne	r0, r1, r0, lsl #2
    b56c:	000022cb 	andeq	r2, r0, fp, asr #5
    b570:	841cce08 	ldrhi	ip, [ip], #-3592	; 0xfffff1f8
    b574:	01000006 	tsteq	r0, r6
    b578:	06901101 	ldreq	r1, [r0], r1, lsl #2
    b57c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    b580:	d403050f 	strle	r0, [r3], #-1295	; 0xfffffaf1
    b584:	11200000 			; <UNDEFINED> instruction: 0x11200000
    b588:	0000069e 	muleq	r0, lr, r6
    b58c:	050a5f01 	streq	r5, [sl, #-3841]	; 0xfffff0ff
    b590:	00000403 	andeq	r0, r0, r3, lsl #8
    b594:	06ac1120 	strteq	r1, [ip], r0, lsr #2
    b598:	60010000 	andvs	r0, r1, r0
    b59c:	00030515 	andeq	r0, r3, r5, lsl r5
    b5a0:	12200000 	eorne	r0, r0, #0
    b5a4:	00221101 	eoreq	r1, r2, r1, lsl #2
    b5a8:	02330100 	eorseq	r0, r3, #0, 2
    b5ac:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b5b8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b5bc:	01120100 	tsteq	r2, r0, lsl #2
    b5c0:	00002321 	andeq	r2, r0, r1, lsr #6
    b5c4:	0a022a01 	beq	95dd0 <_Min_Heap_Size+0x955d0>
    b5c8:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b5d4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b5d8:	14011201 	strne	r1, [r1], #-513	; 0xfffffdff
    b5dc:	01000023 	tsteq	r0, r3, lsr #32
    b5e0:	010a0221 	tsteq	sl, r1, lsr #4
    b5e4:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    b5f0:	01007d02 	tsteq	r0, r2, lsl #26
    b5f4:	24310113 	ldrtcs	r0, [r1], #-275	; 0xfffffeed
    b5f8:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    b5fc:	00010602 	andeq	r0, r1, r2, lsl #12
    b600:	00000000 	andeq	r0, r0, r0
    b604:	02000000 	andeq	r0, r0, #0
    b608:	1301007d 	movwne	r0, #4221	; 0x107d
    b60c:	0023e201 	eoreq	lr, r3, r1, lsl #4
    b610:	020d0100 	andeq	r0, sp, #0, 2
    b614:	00000106 	andeq	r0, r0, r6, lsl #2
    b618:	00000000 	andeq	r0, r0, r0
    b61c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b620:	01130100 	tsteq	r3, r0, lsl #2
    b624:	0000235a 	andeq	r2, r0, sl, asr r3
    b628:	06020201 	streq	r0, [r2], -r1, lsl #4
    b62c:	00000001 	andeq	r0, r0, r1
    b630:	00000000 	andeq	r0, r0, r0
    b634:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b638:	1e011301 	cdpne	3, 0, cr1, cr1, cr1, {0}
    b63c:	01000022 	tsteq	r0, r2, lsr #32
    b640:	010601f9 	strdeq	r0, [r6, -r9]
	...
    b64c:	01007d02 	tsteq	r0, r2, lsl #26
    b650:	22a20113 	adccs	r0, r2, #-1073741820	; 0xc0000004
    b654:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    b658:	00010601 	andeq	r0, r1, r1, lsl #12
    b65c:	00000000 	andeq	r0, r0, r0
    b660:	02000000 	andeq	r0, r0, #0
    b664:	1301007d 	movwne	r0, #4221	; 0x107d
    b668:	0022f001 	eoreq	pc, r2, r1
    b66c:	01e70100 	mvneq	r0, r0, lsl #2
    b670:	00000106 	andeq	r0, r0, r6, lsl #2
    b674:	00000000 	andeq	r0, r0, r0
    b678:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b67c:	01130100 	tsteq	r3, r0, lsl #2
    b680:	0000226f 	andeq	r2, r0, pc, ror #4
    b684:	0601de01 	streq	sp, [r1], -r1, lsl #28
    b688:	00000001 	andeq	r0, r0, r1
    b68c:	00000000 	andeq	r0, r0, r0
    b690:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b694:	8b011301 	blhi	502a0 <_Min_Heap_Size+0x4faa0>
    b698:	01000023 	tsteq	r0, r3, lsr #32
    b69c:	010601d5 	ldrdeq	r0, [r6, -r5]
	...
    b6a8:	01007d02 	tsteq	r0, r2, lsl #26
    b6ac:	244d0112 	strbcs	r0, [sp], #-274	; 0xfffffeee
    b6b0:	cc010000 	stcgt	0, cr0, [r1], {-0}
    b6b4:	a6010a01 	strge	r0, [r1], -r1, lsl #20
    b6b8:	00000002 	andeq	r0, r0, r2
    b6bc:	00000000 	andeq	r0, r0, r0
    b6c0:	02000000 	andeq	r0, r0, #0
    b6c4:	1201007d 	andne	r0, r1, #125	; 0x7d
    b6c8:	0023b801 	eoreq	fp, r3, r1, lsl #16
    b6cc:	01c30100 	biceq	r0, r3, r0, lsl #2
    b6d0:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b6dc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b6e0:	01120100 	tsteq	r2, r0, lsl #2
    b6e4:	000021c7 	andeq	r2, r0, r7, asr #3
    b6e8:	0a01ba01 	beq	79ef4 <_Min_Heap_Size+0x796f4>
    b6ec:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b6f8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b6fc:	44011301 	strmi	r1, [r1], #-769	; 0xfffffcff
    b700:	01000023 	tsteq	r0, r3, lsr #32
    b704:	010d01b0 			; <UNDEFINED> instruction: 0x010d01b0
	...
    b710:	01007d02 	tsteq	r0, r2, lsl #26
    b714:	237b0113 	cmncs	fp, #-1073741820	; 0xc0000004
    b718:	a0010000 	andge	r0, r1, r0
    b71c:	00010d01 	andeq	r0, r1, r1, lsl #26
    b720:	00000000 	andeq	r0, r0, r0
    b724:	02000000 	andeq	r0, r0, #0
    b728:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    b72c:	0006eb01 	andeq	lr, r6, r1, lsl #22
    b730:	01860100 	orreq	r0, r6, r0, lsl #2
    b734:	16cc010d 	strbne	r0, [ip], sp, lsl #2
    b738:	16f40800 	ldrbtne	r0, [r4], r0, lsl #16
    b73c:	774f0800 	strbvc	r0, [pc, -r0, lsl #16]
    b740:	da010000 	ble	4b748 <_Min_Heap_Size+0x4af48>
    b744:	15000008 	strne	r0, [r0, #-8]
    b748:	000006ef 	andeq	r0, r0, pc, ror #13
    b74c:	20018601 	andcs	r8, r1, r1, lsl #12
    b750:	000002a6 	andeq	r0, r0, r6, lsr #5
    b754:	00007775 	andeq	r7, r0, r5, ror r7
    b758:	0000776f 	andeq	r7, r0, pc, ror #14
    b75c:	00154916 	andseq	r4, r5, r6, lsl r9
    b760:	01880100 	orreq	r0, r8, r0, lsl #2
    b764:	0002a60c 	andeq	sl, r2, ip, lsl #12
    b768:	0077a500 	rsbseq	sl, r7, r0, lsl #10
    b76c:	0077a100 	rsbseq	sl, r7, r0, lsl #2
    b770:	27f01600 	ldrbcs	r1, [r0, r0, lsl #12]!
    b774:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    b778:	02a60c01 	adceq	r0, r6, #256	; 0x100
    b77c:	77c50000 	strbvc	r0, [r5, r0]
    b780:	77c30000 	strbvc	r0, [r3, r0]
    b784:	d4170000 	ldrle	r0, [r7], #-0
    b788:	97080016 	smladls	r8, r6, r0, r0
    b78c:	17000009 	strne	r0, [r0, -r9]
    b790:	080016e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, sl, ip}
    b794:	00000997 	muleq	r0, r7, r9
    b798:	c5011200 	strgt	r1, [r1, #-512]	; 0xfffffe00
    b79c:	01000023 	tsteq	r0, r3, lsr #32
    b7a0:	01150176 	tsteq	r5, r6, ror r1
    b7a4:	00000684 	andeq	r0, r0, r4, lsl #13
	...
    b7b0:	01007d02 	tsteq	r0, r2, lsl #26
    b7b4:	21fa0118 	mvnscs	r0, r8, lsl r1
    b7b8:	55010000 	strpl	r0, [r1, #-0]
    b7bc:	51011301 	tstpl	r1, r1, lsl #6
    b7c0:	00000006 	andeq	r0, r0, r6
    b7c4:	00000000 	andeq	r0, r0, r0
    b7c8:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    b7cc:	01000077 	tsteq	r0, r7, ror r0
    b7d0:	0000097c 	andeq	r0, r0, ip, ror r9
    b7d4:	00108615 	andseq	r8, r0, r5, lsl r6
    b7d8:	01550100 	cmpeq	r5, r0, lsl #2
    b7dc:	00068437 	andeq	r8, r6, r7, lsr r4
    b7e0:	00780000 	rsbseq	r0, r8, r0
    b7e4:	0077f800 	rsbseq	pc, r7, r0, lsl #16
    b7e8:	19991600 	ldmibne	r9, {r9, sl, ip}
    b7ec:	57010000 	strpl	r0, [r1, -r0]
    b7f0:	06511501 	ldrbeq	r1, [r1], -r1, lsl #10
    b7f4:	78420000 	stmdavc	r2, {}^	; <UNPREDICTABLE>
    b7f8:	783a0000 	ldmdavc	sl!, {}	; <UNPREDICTABLE>
    b7fc:	d5160000 	ldrle	r0, [r6, #-0]
    b800:	01000023 	tsteq	r0, r3, lsr #32
    b804:	84170158 	ldrhi	r0, [r7], #-344	; 0xfffffea8
    b808:	7a000006 	bvc	b828 <_Min_Heap_Size+0xb028>
    b80c:	78000078 	stmdavc	r0, {r3, r4, r5, r6}
    b810:	19000078 	stmdbne	r0, {r3, r4, r5, r6}
    b814:	00000000 	andeq	r0, r0, r0
    b818:	00000ac5 	andeq	r0, r0, r5, asr #21
    b81c:	00000972 	andeq	r0, r0, r2, ror r9
    b820:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    b824:	00000003 	andeq	r0, r0, r3
    b828:	51011a00 	tstpl	r1, r0, lsl #20
    b82c:	015a0a03 	cmpeq	sl, r3, lsl #20
    b830:	00001700 	andeq	r1, r0, r0, lsl #14
    b834:	09c90000 	stmibeq	r9, {}^	; <UNPREDICTABLE>
    b838:	12000000 	andne	r0, r0, #0
    b83c:	00223e01 	eoreq	r3, r2, r1, lsl #28
    b840:	014c0100 	mrseq	r0, (UNDEF: 92)
    b844:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b850:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b854:	01120100 	tsteq	r2, r0, lsl #2
    b858:	000013a3 	andeq	r1, r0, r3, lsr #7
    b85c:	11014301 	tstne	r1, r1, lsl #6
    b860:	0002a601 	andeq	sl, r2, r1, lsl #12
    b864:	0016c000 	andseq	ip, r6, r0
    b868:	0016cc08 	andseq	ip, r6, r8, lsl #24
    b86c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    b870:	f4011301 	vst2.8	{d1-d4}, [r1], r1
    b874:	01000009 	tsteq	r0, r9
    b878:	010d0138 	tsteq	sp, r8, lsr r1
    b87c:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
    b880:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
    b884:	01007d02 	tsteq	r0, r2, lsl #26
    b888:	180e011b 	stmdane	lr, {r0, r1, r3, r4, r8}
    b88c:	fd010000 	stc2	0, cr0, [r1, #-0]
    b890:	0651011a 			; <UNDEFINED> instruction: 0x0651011a
    b894:	16280000 	strtne	r0, [r8], -r0
    b898:	16740800 	ldrbtne	r0, [r4], -r0, lsl #16
    b89c:	788d0800 	stmvc	sp, {fp}
    b8a0:	21010000 	mrscs	r0, (UNDEF: 1)
    b8a4:	1c00000a 	stcne	0, cr0, [r0], {10}
    b8a8:	000021ed 	andeq	r2, r0, sp, ror #3
    b8ac:	a630fd01 	ldrtge	pc, [r0], -r1, lsl #26	; <UNPREDICTABLE>
    b8b0:	b3000002 	movwlt	r0, #2
    b8b4:	ad000078 	stcge	0, cr0, [r0, #-480]	; 0xfffffe20
    b8b8:	17000078 	smlsdxne	r0, r8, r0, r0
    b8bc:	08001644 	stmdaeq	r0, {r2, r6, r9, sl, ip}
    b8c0:	00000ad4 	ldrdeq	r0, [r0], -r4
    b8c4:	00165a1d 	andseq	r5, r6, sp, lsl sl
    b8c8:	000ae308 	andeq	lr, sl, r8, lsl #6
    b8cc:	50011a00 	andpl	r1, r1, r0, lsl #20
    b8d0:	1aff0902 	bne	fffcdce0 <_estack+0xdffccaa8>
    b8d4:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    b8d8:	52011a00 	andpl	r1, r1, #0, 20
    b8dc:	00003001 	andeq	r3, r0, r1
    b8e0:	2261011e 	rsbcs	r0, r1, #-2147483641	; 0x80000007
    b8e4:	e6010000 	str	r0, [r1], -r0
    b8e8:	0000010d 	andeq	r0, r0, sp, lsl #2
    b8ec:	00000000 	andeq	r0, r0, r0
    b8f0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b8f4:	011e0100 	tsteq	lr, r0, lsl #2
    b8f8:	0000104a 	andeq	r1, r0, sl, asr #32
    b8fc:	010ddb01 	tsteq	sp, r1, lsl #22
	...
    b908:	01007d02 	tsteq	r0, r2, lsl #26
    b90c:	22c0011b 	sbccs	r0, r0, #-1073741818	; 0xc0000006
    b910:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    b914:	06510113 			; <UNDEFINED> instruction: 0x06510113
	...
    b920:	78df0000 	ldmvc	pc, {}^	; <UNPREDICTABLE>
    b924:	76010000 	strvc	r0, [r1], -r0
    b928:	1700000a 	strne	r0, [r0, -sl]
    b92c:	00000000 	andeq	r0, r0, r0
    b930:	00000a21 	andeq	r0, r0, r1, lsr #20
    b934:	37011b00 	strcc	r1, [r1, -r0, lsl #22]
    b938:	01000004 	tsteq	r0, r4
    b93c:	5101139d 			; <UNDEFINED> instruction: 0x5101139d
    b940:	74000006 	strvc	r0, [r0], #-6
    b944:	a8080016 	stmdage	r8, {r1, r2, r4}
    b948:	ff080016 			; <UNDEFINED> instruction: 0xff080016
    b94c:	01000078 	tsteq	r0, r8, ror r0
    b950:	00000ac5 	andeq	r0, r0, r5, asr #21
    b954:	00169619 	andseq	r9, r6, r9, lsl r6
    b958:	000af208 	andeq	pc, sl, r8, lsl #4
    b95c:	000aa800 	andeq	sl, sl, r0, lsl #16
    b960:	50011a00 	andpl	r1, r1, r0, lsl #20
    b964:	19003301 	stmdbne	r0, {r0, r8, r9, ip, sp}
    b968:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
    b96c:	000009c9 	andeq	r0, r0, r9, asr #19
    b970:	00000abb 			; <UNDEFINED> instruction: 0x00000abb
    b974:	0150011a 	cmpeq	r0, sl, lsl r1
    b978:	a017003f 	andsge	r0, r7, pc, lsr r0
    b97c:	37080016 	smladcc	r8, r6, r0, r0
    b980:	0000000a 	andeq	r0, r0, sl
    b984:	0e01011f 	mcreq	1, 0, r0, cr1, cr15, {0}
    b988:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    b98c:	0a00000a 	beq	b9bc <_Min_Heap_Size+0xb1bc>
    b990:	1f0801e6 	svcne	0x000801e6
    b994:	1d830101 	stfnes	f0, [r3, #4]
    b998:	1d830000 	stcne	0, cr0, [r3]
    b99c:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    b9a0:	011f0a01 	tsteq	pc, r1, lsl #20
    b9a4:	000e9801 	andeq	r9, lr, r1, lsl #16
    b9a8:	000e9800 	andeq	r9, lr, r0, lsl #16
    b9ac:	01050b00 	tsteq	r5, r0, lsl #22
    b9b0:	01011f06 	tsteq	r1, r6, lsl #30
    b9b4:	0000206f 	andeq	r2, r0, pc, rrx
    b9b8:	0000206f 	andeq	r2, r0, pc, rrx
    b9bc:	0601040b 	streq	r0, [r1], -fp, lsl #8
    b9c0:	0005af00 	andeq	sl, r5, r0, lsl #30
    b9c4:	d9000200 	stmdble	r0, {r9}
    b9c8:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    b9cc:	00058801 	andeq	r8, r5, r1, lsl #16
    b9d0:	245a0c00 	ldrbcs	r0, [sl], #-3072	; 0xfffff400
    b9d4:	08950000 	ldmeq	r5, {}	; <UNPREDICTABLE>
    b9d8:	06800000 	streq	r0, [r0], r0
	...
    b9e4:	87e90000 	strbhi	r0, [r9, r0]!
    b9e8:	01020000 	mrseq	r0, (UNDEF: 2)
    b9ec:	00057606 	andeq	r7, r5, r6, lsl #12
    b9f0:	00660300 	rsbeq	r0, r6, r0, lsl #6
    b9f4:	2b020000 	blcs	8b9fc <_Min_Heap_Size+0x8b1fc>
    b9f8:	00003c18 	andeq	r3, r0, r8, lsl ip
    b9fc:	08010200 	stmdaeq	r1, {r9}
    ba00:	00000574 	andeq	r0, r0, r4, ror r5
    ba04:	fd050202 	stc2	2, cr0, [r5, #-8]
    ba08:	02000003 	andeq	r0, r0, #3
    ba0c:	078f0702 	streq	r0, [pc, r2, lsl #14]
    ba10:	04020000 	streq	r0, [r2], #-0
    ba14:	0002ec05 	andeq	lr, r2, r5, lsl #24
    ba18:	02c20300 	sbceq	r0, r2, #0, 6
    ba1c:	4f020000 	svcmi	0x00020000
    ba20:	00006419 	andeq	r6, r0, r9, lsl r4
    ba24:	07040200 	streq	r0, [r4, -r0, lsl #4]
    ba28:	000000b3 	strheq	r0, [r0], -r3
    ba2c:	e7050802 	str	r0, [r5, -r2, lsl #16]
    ba30:	02000002 	andeq	r0, r0, #2
    ba34:	00ae0708 	adceq	r0, lr, r8, lsl #14
    ba38:	04040000 	streq	r0, [r4], #-0
    ba3c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    ba40:	07040200 	streq	r0, [r4, -r0, lsl #4]
    ba44:	000000b8 	strheq	r0, [r0], -r8
    ba48:	00006803 	andeq	r6, r0, r3, lsl #16
    ba4c:	13180300 	tstne	r8, #0, 6
    ba50:	00000030 	andeq	r0, r0, r0, lsr r0
    ba54:	00008705 	andeq	r8, r0, r5, lsl #14
    ba58:	00870600 	addeq	r0, r7, r0, lsl #12
    ba5c:	c4030000 	strgt	r0, [r3], #-0
    ba60:	03000002 	movweq	r0, #2
    ba64:	00581430 	subseq	r1, r8, r0, lsr r4
    ba68:	9d050000 	stcls	0, cr0, [r5, #-0]
    ba6c:	06000000 	streq	r0, [r0], -r0
    ba70:	000000a9 	andeq	r0, r0, r9, lsr #1
    ba74:	bd048c07 	stclt	12, cr8, [r4, #-28]	; 0xffffffe4
    ba78:	020f0901 	andeq	r0, pc, #16384	; 0x4000
    ba7c:	01080000 	mrseq	r0, (UNDEF: 8)
    ba80:	04000001 	streq	r0, [r0], #-1
    ba84:	ae1201bf 	mrcge	1, 0, r0, cr2, cr15, {5}
    ba88:	02000000 	andeq	r0, r0, #0
    ba8c:	8c080023 	stchi	0, cr0, [r8], {35}	; 0x23
    ba90:	04000003 	streq	r0, [r0], #-3
    ba94:	a91201c0 	ldmdbge	r2, {r6, r7, r8}
    ba98:	02000000 	andeq	r0, r0, #0
    ba9c:	51080423 	tstpl	r8, r3, lsr #8
    baa0:	04000003 	streq	r0, [r0], #-3
    baa4:	a91201c1 	ldmdbge	r2, {r0, r6, r7, r8}
    baa8:	02000000 	andeq	r0, r0, #0
    baac:	a5080823 	strge	r0, [r8, #-2083]	; 0xfffff7dd
    bab0:	04000003 	streq	r0, [r0], #-3
    bab4:	a91201c2 	ldmdbge	r2, {r1, r6, r7, r8}
    bab8:	02000000 	andeq	r0, r0, #0
    babc:	53090c23 	movwpl	r0, #39971	; 0x9c23
    bac0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    bac4:	a91201c3 	ldmdbge	r2, {r0, r1, r6, r7, r8}
    bac8:	02000000 	andeq	r0, r0, #0
    bacc:	43091023 	movwmi	r1, #36899	; 0x9023
    bad0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    bad4:	a91201c4 	ldmdbge	r2, {r2, r6, r7, r8}
    bad8:	02000000 	andeq	r0, r0, #0
    badc:	53091423 	movwpl	r1, #37923	; 0x9423
    bae0:	04005048 	streq	r5, [r0], #-72	; 0xffffffb8
    bae4:	1f1201c5 	svcne	0x001201c5
    bae8:	02000002 	andeq	r0, r0, #2
    baec:	82081823 	andhi	r1, r8, #2293760	; 0x230000
    baf0:	04000005 	streq	r0, [r0], #-5
    baf4:	a91201c6 	ldmdbge	r2, {r1, r2, r6, r7, r8}
    baf8:	02000000 	andeq	r0, r0, #0
    bafc:	8c082423 	cfstrshi	mvf2, [r8], {35}	; 0x23
    bb00:	04000004 	streq	r0, [r0], #-4
    bb04:	a91201c7 	ldmdbge	r2, {r0, r1, r2, r6, r7, r8}
    bb08:	02000000 	andeq	r0, r0, #0
    bb0c:	fa082823 	blx	215ba0 <_Min_Heap_Size+0x2153a0>
    bb10:	04000008 	streq	r0, [r0], #-8
    bb14:	a91201c8 	ldmdbge	r2, {r3, r6, r7, r8}
    bb18:	02000000 	andeq	r0, r0, #0
    bb1c:	ab082c23 	blge	216bb0 <_Min_Heap_Size+0x2163b0>
    bb20:	04000003 	streq	r0, [r0], #-3
    bb24:	a91201c9 	ldmdbge	r2, {r0, r3, r6, r7, r8}
    bb28:	02000000 	andeq	r0, r0, #0
    bb2c:	c9083023 	stmdbgt	r8, {r0, r1, r5, ip, sp}
    bb30:	04000003 	streq	r0, [r0], #-3
    bb34:	a91201ca 	ldmdbge	r2, {r1, r3, r6, r7, r8}
    bb38:	02000000 	andeq	r0, r0, #0
    bb3c:	9c083423 	cfstrsls	mvf3, [r8], {35}	; 0x23
    bb40:	04000002 	streq	r0, [r0], #-2
    bb44:	a91201cb 	ldmdbge	r2, {r0, r1, r3, r6, r7, r8}
    bb48:	02000000 	andeq	r0, r0, #0
    bb4c:	6f083823 	svcvs	0x00083823
    bb50:	04000007 	streq	r0, [r0], #-7
    bb54:	a91201cc 	ldmdbge	r2, {r2, r3, r6, r7, r8}
    bb58:	02000000 	andeq	r0, r0, #0
    bb5c:	50093c23 	andpl	r3, r9, r3, lsr #24
    bb60:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    bb64:	391201cd 	ldmdbcc	r2, {r0, r2, r3, r6, r7, r8}
    bb68:	02000002 	andeq	r0, r0, #2
    bb6c:	44094023 	strmi	r4, [r9], #-35	; 0xffffffdd
    bb70:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    bb74:	ae1201ce 	mufgedm	f0, f2, #0.5
    bb78:	02000000 	andeq	r0, r0, #0
    bb7c:	41094823 	tstmi	r9, r3, lsr #16
    bb80:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    bb84:	ae1201cf 	mufgedm	f0, f2, #10.0
    bb88:	02000000 	andeq	r0, r0, #0
    bb8c:	f8084c23 			; <UNDEFINED> instruction: 0xf8084c23
    bb90:	04000003 	streq	r0, [r0], #-3
    bb94:	531201d0 	tstpl	r2, #208, 2	; 0x34
    bb98:	02000002 	andeq	r0, r0, #2
    bb9c:	4e085023 	cdpmi	0, 0, cr5, cr8, cr3, {1}
    bba0:	04000001 	streq	r0, [r0], #-1
    bba4:	6d1201d1 	ldfvss	f0, [r2, #-836]	; 0xfffffcbc
    bba8:	02000002 	andeq	r0, r0, #2
    bbac:	0f086023 	svceq	0x00086023
    bbb0:	04000005 	streq	r0, [r0], #-5
    bbb4:	721201d2 	andsvc	r0, r2, #-2147483596	; 0x80000034
    bbb8:	02000002 	andeq	r0, r0, #2
    bbbc:	09087423 	stmdbeq	r8, {r0, r1, r5, sl, ip, sp, lr}
    bbc0:	04000005 	streq	r0, [r0], #-5
    bbc4:	a91201d3 	ldmdbge	r2, {r0, r1, r4, r6, r7, r8}
    bbc8:	03000000 	movweq	r0, #0
    bbcc:	00018823 	andeq	r8, r1, r3, lsr #16
    bbd0:	0000930a 	andeq	r9, r0, sl, lsl #6
    bbd4:	00021f00 	andeq	r1, r2, r0, lsl #30
    bbd8:	00800b00 	addeq	r0, r0, r0, lsl #22
    bbdc:	000b0000 	andeq	r0, fp, r0
    bbe0:	00020f05 	andeq	r0, r2, r5, lsl #30
    bbe4:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    bbe8:	02340000 	eorseq	r0, r4, #0
    bbec:	800b0000 	andhi	r0, fp, r0
    bbf0:	01000000 	mrseq	r0, (UNDEF: 0)
    bbf4:	02240600 	eoreq	r0, r4, #0, 12
    bbf8:	34050000 	strcc	r0, [r5], #-0
    bbfc:	0a000002 	beq	bc0c <_Min_Heap_Size+0xb40c>
    bc00:	000000ae 	andeq	r0, r0, lr, lsr #1
    bc04:	0000024e 	andeq	r0, r0, lr, asr #4
    bc08:	0000800b 	andeq	r8, r0, fp
    bc0c:	06000300 	streq	r0, [r0], -r0, lsl #6
    bc10:	0000023e 	andeq	r0, r0, lr, lsr r2
    bc14:	00024e05 	andeq	r4, r2, r5, lsl #28
    bc18:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    bc1c:	02680000 	rsbeq	r0, r8, #0
    bc20:	800b0000 	andhi	r0, fp, r0
    bc24:	04000000 	streq	r0, [r0], #-0
    bc28:	02580600 	subseq	r0, r8, #0, 12
    bc2c:	68050000 	stmdavs	r5, {}	; <UNPREDICTABLE>
    bc30:	0a000002 	beq	bc40 <_Min_Heap_Size+0xb440>
    bc34:	0000009d 	muleq	r0, sp, r0
    bc38:	00000282 	andeq	r0, r0, r2, lsl #5
    bc3c:	0000800b 	andeq	r8, r0, fp
    bc40:	0c000400 	cfstrseq	mvf0, [r0], {-0}
    bc44:	000002d7 	ldrdeq	r0, [r0], -r7
    bc48:	0301d404 	movweq	sp, #5124	; 0x1404
    bc4c:	000000b3 	strheq	r0, [r0], -r3
    bc50:	00009d0a 	andeq	r9, r0, sl, lsl #26
    bc54:	00029f00 	andeq	r9, r2, r0, lsl #30
    bc58:	00800b00 	addeq	r0, r0, r0, lsl #22
    bc5c:	00010000 	andeq	r0, r1, r0
    bc60:	0017fe0d 	andseq	pc, r7, sp, lsl #28
    bc64:	11390500 	teqne	r9, r0, lsl #10
    bc68:	0000009d 	muleq	r0, sp, r0
    bc6c:	980a0101 	stmdals	sl, {r0, r8}
    bc70:	bd000000 	stclt	0, cr0, [r0, #-0]
    bc74:	0b000002 	bleq	bc84 <_Min_Heap_Size+0xb484>
    bc78:	00000080 	andeq	r0, r0, r0, lsl #1
    bc7c:	ad06000f 	stcge	0, cr0, [r6, #-60]	; 0xffffffc4
    bc80:	0d000002 	stceq	0, cr0, [r0, #-8]
    bc84:	000017be 			; <UNDEFINED> instruction: 0x000017be
    bc88:	bd173b05 	vldrlt	d3, [r7, #-20]	; 0xffffffec
    bc8c:	01000002 	tsteq	r0, r2
    bc90:	00980a01 	addseq	r0, r8, r1, lsl #20
    bc94:	02e00000 	rsceq	r0, r0, #0
    bc98:	800b0000 	andhi	r0, fp, r0
    bc9c:	07000000 	streq	r0, [r0, -r0]
    bca0:	02d00600 	sbcseq	r0, r0, #0, 12
    bca4:	5a0d0000 	bpl	34bcac <_Min_Heap_Size+0x34b4ac>
    bca8:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    bcac:	02e0173c 	rsceq	r1, r0, #60, 14	; 0xf00000
    bcb0:	01010000 	mrseq	r0, (UNDEF: 1)
    bcb4:	f4068807 	vst2.8	{d8-d9}, [r6], r7
    bcb8:	04df0901 	ldrbeq	r0, [pc], #2305	; bcc0 <_Min_Heap_Size+0xb4c0>
    bcbc:	43090000 	movwmi	r0, #36864	; 0x9000
    bcc0:	f6060052 			; <UNDEFINED> instruction: 0xf6060052
    bcc4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcc8:	23020000 	movwcs	r0, #8192	; 0x2000
    bccc:	02820800 	addeq	r0, r2, #0, 16
    bcd0:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
    bcd4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcd8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcdc:	02850804 	addeq	r0, r5, #4, 16	; 0x40000
    bce0:	f8060000 			; <UNDEFINED> instruction: 0xf8060000
    bce4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bce8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcec:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    bcf0:	f9060052 			; <UNDEFINED> instruction: 0xf9060052
    bcf4:	00a91101 	adceq	r1, r9, r1, lsl #2
    bcf8:	23020000 	movwcs	r0, #8192	; 0x2000
    bcfc:	0166080c 	cmneq	r6, ip, lsl #16
    bd00:	fa060000 	blx	18bd08 <_Min_Heap_Size+0x18b508>
    bd04:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd08:	23020000 	movwcs	r0, #8192	; 0x2000
    bd0c:	07170810 			; <UNDEFINED> instruction: 0x07170810
    bd10:	fb060000 	blx	18bd1a <_Min_Heap_Size+0x18b51a>
    bd14:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd18:	23020000 	movwcs	r0, #8192	; 0x2000
    bd1c:	067c0814 			; <UNDEFINED> instruction: 0x067c0814
    bd20:	fc060000 	stc2	0, cr0, [r6], {-0}
    bd24:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd28:	23020000 	movwcs	r0, #8192	; 0x2000
    bd2c:	050f0818 	streq	r0, [pc, #-2072]	; b51c <_Min_Heap_Size+0xad1c>
    bd30:	fd060000 	stc2	0, cr0, [r6, #-0]
    bd34:	009d1101 	addseq	r1, sp, r1, lsl #2
    bd38:	23020000 	movwcs	r0, #8192	; 0x2000
    bd3c:	04fa081c 	ldrbteq	r0, [sl], #2076	; 0x81c
    bd40:	fe060000 	cdp2	0, 0, cr0, cr6, cr0, {0}
    bd44:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd48:	23020000 	movwcs	r0, #8192	; 0x2000
    bd4c:	01f90820 	mvnseq	r0, r0, lsr #16
    bd50:	ff060000 			; <UNDEFINED> instruction: 0xff060000
    bd54:	00a91101 	adceq	r1, r9, r1, lsl #2
    bd58:	23020000 	movwcs	r0, #8192	; 0x2000
    bd5c:	05190824 	ldreq	r0, [r9, #-2084]	; 0xfffff7dc
    bd60:	00060000 	andeq	r0, r6, r0
    bd64:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bd68:	23020000 	movwcs	r0, #8192	; 0x2000
    bd6c:	08810828 	stmeq	r1, {r3, r5, fp}
    bd70:	01060000 	mrseq	r0, (UNDEF: 6)
    bd74:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd78:	23020000 	movwcs	r0, #8192	; 0x2000
    bd7c:	07870830 			; <UNDEFINED> instruction: 0x07870830
    bd80:	02060000 	andeq	r0, r6, #0
    bd84:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd88:	23020000 	movwcs	r0, #8192	; 0x2000
    bd8c:	049c0834 	ldreq	r0, [ip], #2100	; 0x834
    bd90:	03060000 	movweq	r0, #24576	; 0x6000
    bd94:	00a91102 	adceq	r1, r9, r2, lsl #2
    bd98:	23020000 	movwcs	r0, #8192	; 0x2000
    bd9c:	05230838 	streq	r0, [r3, #-2104]!	; 0xfffff7c8
    bda0:	04060000 	streq	r0, [r6], #-0
    bda4:	009d1102 	addseq	r1, sp, r2, lsl #2
    bda8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdac:	06b7083c 			; <UNDEFINED> instruction: 0x06b7083c
    bdb0:	05060000 	streq	r0, [r6, #-0]
    bdb4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bdb8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdbc:	06740840 	ldrbteq	r0, [r4], -r0, asr #16
    bdc0:	06060000 	streq	r0, [r6], -r0
    bdc4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bdc8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdcc:	052d0844 	streq	r0, [sp, #-2116]!	; 0xfffff7bc
    bdd0:	07060000 	streq	r0, [r6, -r0]
    bdd4:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bdd8:	23020000 	movwcs	r0, #8192	; 0x2000
    bddc:	012b0848 			; <UNDEFINED> instruction: 0x012b0848
    bde0:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    bde4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bde8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdec:	04d60850 	ldrbeq	r0, [r6], #2128	; 0x850
    bdf0:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    bdf4:	00a91102 	adceq	r1, r9, r2, lsl #2
    bdf8:	23020000 	movwcs	r0, #8192	; 0x2000
    bdfc:	06420854 			; <UNDEFINED> instruction: 0x06420854
    be00:	0a060000 	beq	18be08 <_Min_Heap_Size+0x18b608>
    be04:	00a91102 	adceq	r1, r9, r2, lsl #2
    be08:	23020000 	movwcs	r0, #8192	; 0x2000
    be0c:	05370858 	ldreq	r0, [r7, #-2136]!	; 0xfffff7a8
    be10:	0b060000 	bleq	18be18 <_Min_Heap_Size+0x18b618>
    be14:	009d1102 	addseq	r1, sp, r2, lsl #2
    be18:	23020000 	movwcs	r0, #8192	; 0x2000
    be1c:	001b085c 	andseq	r0, fp, ip, asr r8
    be20:	0c060000 	stceq	0, cr0, [r6], {-0}
    be24:	00a91102 	adceq	r1, r9, r2, lsl #2
    be28:	23020000 	movwcs	r0, #8192	; 0x2000
    be2c:	03ee0860 	mvneq	r0, #96, 16	; 0x600000
    be30:	0d060000 	stceq	0, cr0, [r6, #-0]
    be34:	00a91102 	adceq	r1, r9, r2, lsl #2
    be38:	23020000 	movwcs	r0, #8192	; 0x2000
    be3c:	05410864 	strbeq	r0, [r1, #-2148]	; 0xfffff79c
    be40:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    be44:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    be48:	23020000 	movwcs	r0, #8192	; 0x2000
    be4c:	08090868 	stmdaeq	r9, {r3, r5, r6, fp}
    be50:	0f060000 	svceq	0x00060000
    be54:	00a91102 	adceq	r1, r9, r2, lsl #2
    be58:	23020000 	movwcs	r0, #8192	; 0x2000
    be5c:	53430970 	movtpl	r0, #14704	; 0x3970
    be60:	10060052 	andne	r0, r6, r2, asr r0
    be64:	00a91102 	adceq	r1, r9, r2, lsl #2
    be68:	23020000 	movwcs	r0, #8192	; 0x2000
    be6c:	054b0874 	strbeq	r0, [fp, #-2164]	; 0xfffff78c
    be70:	11060000 	mrsne	r0, (UNDEF: 6)
    be74:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    be78:	23020000 	movwcs	r0, #8192	; 0x2000
    be7c:	07d80878 			; <UNDEFINED> instruction: 0x07d80878
    be80:	12060000 	andne	r0, r6, #0
    be84:	00a91102 	adceq	r1, r9, r2, lsl #2
    be88:	23030000 	movwcs	r0, #12288	; 0x3000
    be8c:	81080180 	smlabbhi	r8, r0, r1, r0
    be90:	06000003 	streq	r0, [r0], -r3
    be94:	a9110213 	ldmdbge	r1, {r0, r1, r4, r9}
    be98:	03000000 	movweq	r0, #0
    be9c:	00018423 	andeq	r8, r1, r3, lsr #8
    bea0:	0001cd0c 	andeq	ip, r1, ip, lsl #26
    bea4:	02140600 	andseq	r0, r4, #0, 12
    bea8:	0002f303 	andeq	pc, r2, r3, lsl #6
    beac:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    beb0:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    beb4:	00029f0e 	andeq	r9, r2, lr, lsl #30
    beb8:	0a890100 	beq	fe24c2c0 <_estack+0xde24b088>
    bebc:	00080305 	andeq	r0, r8, r5, lsl #6
    bec0:	c20e2000 	andgt	r2, lr, #0
    bec4:	01000002 	tsteq	r0, r2
    bec8:	03050f8a 	movweq	r0, #24458	; 0x5f8a
    becc:	00000000 	andeq	r0, r0, r0
    bed0:	0002e50e 	andeq	lr, r2, lr, lsl #10
    bed4:	0f8b0100 	svceq	0x008b0100
    bed8:	2d580305 	ldclcs	3, cr0, [r8, #-20]	; 0xffffffec
    bedc:	010f0800 	tsteq	pc, r0, lsl #16
    bee0:	0000248e 	andeq	r2, r0, lr, lsl #9
    bee4:	0106dc01 	tsteq	r6, r1, lsl #24
	...
    bef0:	01007d02 	tsteq	r0, r2, lsl #26
    bef4:	0000059c 	muleq	r0, ip, r5
    bef8:	706d7410 	rsbvc	r7, sp, r0, lsl r4
    befc:	0cde0100 	ldfeqe	f0, [lr], {0}
    bf00:	0000009d 	muleq	r0, sp, r0
    bf04:	0000792b 	andeq	r7, r0, fp, lsr #18
    bf08:	0000791f 	andeq	r7, r0, pc, lsl r9
    bf0c:	00178b11 	andseq	r8, r7, r1, lsl fp
    bf10:	15de0100 	ldrbne	r0, [lr, #256]	; 0x100
    bf14:	0000009d 	muleq	r0, sp, r0
    bf18:	00007980 	andeq	r7, r0, r0, lsl #19
    bf1c:	00007976 	andeq	r7, r0, r6, ror r9
    bf20:	00174711 	andseq	r4, r7, r1, lsl r7
    bf24:	21de0100 	bicscs	r0, lr, r0, lsl #2
    bf28:	0000009d 	muleq	r0, sp, r0
    bf2c:	000079ca 	andeq	r7, r0, sl, asr #19
    bf30:	000079c2 	andeq	r7, r0, r2, asr #19
    bf34:	00247911 	eoreq	r7, r4, r1, lsl r9
    bf38:	2bde0100 	blcs	ff78c340 <_estack+0xdf78b108>
    bf3c:	0000009d 	muleq	r0, sp, r0
    bf40:	00007a07 	andeq	r7, r0, r7, lsl #20
    bf44:	00007a01 	andeq	r7, r0, r1, lsl #20
    bf48:	00183111 	andseq	r3, r8, r1, lsl r1
    bf4c:	3ade0100 	bcc	ff78c354 <_estack+0xdf78b11c>
    bf50:	0000009d 	muleq	r0, sp, r0
    bf54:	00007a41 	andeq	r7, r0, r1, asr #20
    bf58:	00007a39 	andeq	r7, r0, r9, lsr sl
    bf5c:	83011200 	movwhi	r1, #4608	; 0x1200
    bf60:	01000024 	tsteq	r0, r4, lsr #32
    bf64:	f40106a7 	vst1.32	{d0-d2}, [r1 :128], r7
    bf68:	08080016 	stmdaeq	r8, {r1, r2, r4}
    bf6c:	02080017 	andeq	r0, r8, #23
    bf70:	0001007d 	andeq	r0, r1, sp, ror r0
    bf74:	000008ae 	andeq	r0, r0, lr, lsr #17
    bf78:	19f40002 	ldmibne	r4!, {r1}^
    bf7c:	01040000 	mrseq	r0, (UNDEF: 4)
    bf80:	00000588 	andeq	r0, r0, r8, lsl #11
    bf84:	0025ca0c 	eoreq	ip, r5, ip, lsl #20
    bf88:	00089500 	andeq	r9, r8, r0, lsl #10
    bf8c:	00069800 	andeq	r9, r6, r0, lsl #16
	...
    bf98:	008a5800 	addeq	r5, sl, r0, lsl #16
    bf9c:	06010200 	streq	r0, [r1], -r0, lsl #4
    bfa0:	00000576 	andeq	r0, r0, r6, ror r5
    bfa4:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    bfa8:	02000005 	andeq	r0, r0, #5
    bfac:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    bfb0:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    bfb4:	03000006 	movweq	r0, #6
    bfb8:	004a1939 	subeq	r1, sl, r9, lsr r9
    bfbc:	02020000 	andeq	r0, r2, #0
    bfc0:	00078f07 	andeq	r8, r7, r7, lsl #30
    bfc4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    bfc8:	000002ec 	andeq	r0, r0, ip, ror #5
    bfcc:	0002c203 	andeq	ip, r2, r3, lsl #4
    bfd0:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    bfd4:	00000064 	andeq	r0, r0, r4, rrx
    bfd8:	b3070402 	movwlt	r0, #29698	; 0x7402
    bfdc:	02000000 	andeq	r0, r0, #0
    bfe0:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    bfe4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    bfe8:	0000ae07 	andeq	sl, r0, r7, lsl #28
    bfec:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    bff0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    bff4:	b8070402 	stmdalt	r7, {r1, sl}
    bff8:	05000000 	streq	r0, [r0, #-0]
    bffc:	00000080 	andeq	r0, r0, r0, lsl #1
    c000:	00283003 	eoreq	r3, r8, r3
    c004:	17d10400 	ldrbne	r0, [r1, r0, lsl #8]
    c008:	00000080 	andeq	r0, r0, r0, lsl #1
    c00c:	bf040802 	svclt	0x00040802
    c010:	02000006 	andeq	r0, r0, #6
    c014:	057d0801 	ldrbeq	r0, [sp, #-2049]!	; 0xfffff7ff
    c018:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    c01c:	05000006 	streq	r0, [r0, #-6]
    c020:	003e1424 	eorseq	r1, lr, r4, lsr #8
    c024:	c4030000 	strgt	r0, [r3], #-0
    c028:	05000002 	streq	r0, [r0, #-2]
    c02c:	00581430 	subseq	r1, r8, r0, lsr r4
    c030:	9c030000 	stcls	0, cr0, [r3], {-0}
    c034:	06000025 	streq	r0, [r0], -r5, lsr #32
    c038:	00ca2328 	sbceq	r2, sl, r8, lsr #6
    c03c:	32060000 	andcc	r0, r6, #0
    c040:	20000026 	andcs	r0, r0, r6, lsr #32
    c044:	4a082906 	bmi	216464 <_Min_Heap_Size+0x215c64>
    c048:	07000001 	streq	r0, [r0, -r1]
    c04c:	06003072 			; <UNDEFINED> instruction: 0x06003072
    c050:	0080122a 	addeq	r1, r0, sl, lsr #4
    c054:	23020000 	movwcs	r0, #8192	; 0x2000
    c058:	31720700 	cmncc	r2, r0, lsl #14
    c05c:	122b0600 	eorne	r0, fp, #0, 12
    c060:	00000080 	andeq	r0, r0, r0, lsl #1
    c064:	07042302 	streq	r2, [r4, -r2, lsl #6]
    c068:	06003272 			; <UNDEFINED> instruction: 0x06003272
    c06c:	0080122c 	addeq	r1, r0, ip, lsr #4
    c070:	23020000 	movwcs	r0, #8192	; 0x2000
    c074:	33720708 	cmncc	r2, #8, 14	; 0x200000
    c078:	122d0600 	eorne	r0, sp, #0, 12
    c07c:	00000080 	andeq	r0, r0, r0, lsl #1
    c080:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    c084:	00323172 	eorseq	r3, r2, r2, ror r1
    c088:	80122e06 	andshi	r2, r2, r6, lsl #28
    c08c:	02000000 	andeq	r0, r0, #0
    c090:	6c071023 	stcvs	0, cr1, [r7], {35}	; 0x23
    c094:	2f060072 	svccs	0x00060072
    c098:	00008012 	andeq	r8, r0, r2, lsl r0
    c09c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    c0a0:	00637007 	rsbeq	r7, r3, r7
    c0a4:	80123006 	andshi	r3, r2, r6
    c0a8:	02000000 	andeq	r0, r0, #0
    c0ac:	70071823 	andvc	r1, r7, r3, lsr #16
    c0b0:	06007273 			; <UNDEFINED> instruction: 0x06007273
    c0b4:	00801231 	addeq	r1, r0, r1, lsr r2
    c0b8:	23020000 	movwcs	r0, #8192	; 0x2000
    c0bc:	5803001c 	stmdapl	r3, {r2, r3, r4}
    c0c0:	06000025 	streq	r0, [r0], -r5, lsr #32
    c0c4:	01562334 	cmpeq	r6, r4, lsr r3
    c0c8:	7d060000 	stcvc	0, cr0, [r6, #-0]
    c0cc:	20000025 	andcs	r0, r0, r5, lsr #32
    c0d0:	d6083506 	strle	r3, [r8], -r6, lsl #10
    c0d4:	07000001 	streq	r0, [r0, -r1]
    c0d8:	06003472 			; <UNDEFINED> instruction: 0x06003472
    c0dc:	00801236 	addeq	r1, r0, r6, lsr r2
    c0e0:	23020000 	movwcs	r0, #8192	; 0x2000
    c0e4:	35720700 	ldrbcc	r0, [r2, #-1792]!	; 0xfffff900
    c0e8:	12370600 	eorsne	r0, r7, #0, 12
    c0ec:	00000080 	andeq	r0, r0, r0, lsl #1
    c0f0:	07042302 	streq	r2, [r4, -r2, lsl #6]
    c0f4:	06003672 			; <UNDEFINED> instruction: 0x06003672
    c0f8:	00801238 	addeq	r1, r0, r8, lsr r2
    c0fc:	23020000 	movwcs	r0, #8192	; 0x2000
    c100:	37720708 	ldrbcc	r0, [r2, -r8, lsl #14]!
    c104:	12390600 	eorsne	r0, r9, #0, 12
    c108:	00000080 	andeq	r0, r0, r0, lsl #1
    c10c:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    c110:	06003872 			; <UNDEFINED> instruction: 0x06003872
    c114:	0080123a 	addeq	r1, r0, sl, lsr r2
    c118:	23020000 	movwcs	r0, #8192	; 0x2000
    c11c:	39720710 	ldmdbcc	r2!, {r4, r8, r9, sl}^
    c120:	123b0600 	eorsne	r0, fp, #0, 12
    c124:	00000080 	andeq	r0, r0, r0, lsl #1
    c128:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    c12c:	00303172 	eorseq	r3, r0, r2, ror r1
    c130:	80123c06 	andshi	r3, r2, r6, lsl #24
    c134:	02000000 	andeq	r0, r0, #0
    c138:	72071823 	andvc	r1, r7, #2293760	; 0x230000
    c13c:	06003131 			; <UNDEFINED> instruction: 0x06003131
    c140:	0080123d 	addeq	r1, r0, sp, lsr r2
    c144:	23020000 	movwcs	r0, #8192	; 0x2000
    c148:	bf03001c 	svclt	0x0003001c
    c14c:	06000024 	streq	r0, [r0], -r4, lsr #32
    c150:	01e21c40 	mvneq	r1, r0, asr #24
    c154:	90060000 	andls	r0, r6, r0
    c158:	40000025 	andmi	r0, r0, r5, lsr #32
    c15c:	0e084106 	adfeqe	f4, f0, f6
    c160:	08000002 	stmdaeq	r0, {r1}
    c164:	00002589 	andeq	r2, r0, r9, lsl #11
    c168:	4a1a4206 	bmi	69c988 <_Min_Heap_Size+0x69c188>
    c16c:	02000001 	andeq	r0, r0, #1
    c170:	3e080023 	cdpcc	0, 0, cr0, cr8, cr3, {1}
    c174:	06000026 	streq	r0, [r0], -r6, lsr #32
    c178:	00be1a43 	adcseq	r1, lr, r3, asr #20
    c17c:	23020000 	movwcs	r0, #8192	; 0x2000
    c180:	a4090020 	strge	r0, [r9], #-32	; 0xffffffe0
    c184:	01000024 	tsteq	r0, r4, lsr #32
    c188:	0080151d 	addeq	r1, r0, sp, lsl r5
    c18c:	01010000 	mrseq	r0, (UNDEF: 1)
    c190:	00264509 	eoreq	r4, r6, r9, lsl #10
    c194:	151e0100 	ldrne	r0, [lr, #-256]	; 0xffffff00
    c198:	00000080 	andeq	r0, r0, r0, lsl #1
    c19c:	08090101 	stmdaeq	r9, {r0, r8}
    c1a0:	01000025 	tsteq	r0, r5, lsr #32
    c1a4:	0080151f 	addeq	r1, r0, pc, lsl r5
    c1a8:	01010000 	mrseq	r0, (UNDEF: 1)
    c1ac:	00250009 	eoreq	r0, r5, r9
    c1b0:	15200100 	strne	r0, [r0, #-256]!	; 0xffffff00
    c1b4:	00000080 	andeq	r0, r0, r0, lsl #1
    c1b8:	b10a0101 	tstlt	sl, r1, lsl #2
    c1bc:	01000025 	tsteq	r0, r5, lsr #32
    c1c0:	00871771 	addeq	r1, r7, r1, ror r7
    c1c4:	05010000 	streq	r0, [r1, #-0]
    c1c8:	0001d803 	andeq	sp, r1, r3, lsl #16
    c1cc:	24cd0a20 	strbcs	r0, [sp], #2592	; 0xa20
    c1d0:	72010000 	andvc	r0, r1, #0
    c1d4:	00008717 	andeq	r8, r0, r7, lsl r7
    c1d8:	03050100 	movweq	r0, #20736	; 0x5100
    c1dc:	200001dc 	ldrdcs	r0, [r0], -ip
    c1e0:	24e6010b 	strbtcs	r0, [r6], #267	; 0x10b
    c1e4:	0c010000 	stceq	0, cr0, [r1], {-0}
    c1e8:	80010e01 	andhi	r0, r1, r1, lsl #28
	...
    c1f4:	02000000 	andeq	r0, r0, #0
    c1f8:	0c01007d 	stceq	0, cr0, [r1], {125}	; 0x7d
    c1fc:	00251001 	eoreq	r1, r5, r1
    c200:	01080100 	mrseq	r0, (UNDEF: 24)
    c204:	0080010e 	addeq	r0, r0, lr, lsl #2
	...
    c210:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c214:	02cb0100 	sbceq	r0, fp, #0, 2
    c218:	670d0000 	strvs	r0, [sp, -r0]
    c21c:	00000008 	andeq	r0, r0, r8
    c220:	02000000 	andeq	r0, r0, #0
	...
    c22c:	0c010901 			; <UNDEFINED> instruction: 0x0c010901
    c230:	00087a0e 	andeq	r7, r8, lr, lsl #20
    c234:	007a7900 	rsbseq	r7, sl, r0, lsl #18
    c238:	007a7700 	rsbseq	r7, sl, r0, lsl #14
    c23c:	0f000000 	svceq	0x00000000
    c240:	00253c01 	eoreq	r3, r5, r1, lsl #24
    c244:	05dc0100 	ldrbeq	r0, [ip, #256]	; 0x100
    c248:	00007901 	andeq	r7, r0, r1, lsl #18
    c24c:	0017d400 	andseq	sp, r7, r0, lsl #8
    c250:	00185008 	andseq	r5, r8, r8
    c254:	007a8c08 	rsbseq	r8, sl, r8, lsl #24
    c258:	03a50100 			; <UNDEFINED> instruction: 0x03a50100
    c25c:	f8100000 			; <UNDEFINED> instruction: 0xf8100000
    c260:	01000025 	tsteq	r0, r5, lsr #32
    c264:	03a528dc 			; <UNDEFINED> instruction: 0x03a528dc
    c268:	7ab40000 	bvc	fed0c270 <_estack+0xded0b038>
    c26c:	7aac0000 	bvc	feb0c274 <_estack+0xdeb0b03c>
    c270:	82100000 	andshi	r0, r0, #0
    c274:	01000028 	tsteq	r0, r8, lsr #32
    c278:	008c37dc 	ldrdeq	r3, [ip], ip
    c27c:	7af30000 	bvc	ffccc284 <_estack+0xdfccb04c>
    c280:	7aeb0000 	bvc	ffacc288 <_estack+0xdfacb050>
    c284:	1e100000 	cdpne	0, 1, cr0, cr0, cr0, {0}
    c288:	01000025 	tsteq	r0, r5, lsr #32
    c28c:	03a54bdc 			; <UNDEFINED> instruction: 0x03a54bdc
    c290:	7b300000 	blvc	c0c298 <_Min_Heap_Size+0xc0ba98>
    c294:	7b2a0000 	blvc	a8c29c <_Min_Heap_Size+0xa8ba9c>
    c298:	f4100000 			; <UNDEFINED> instruction: 0xf4100000
    c29c:	01000024 	tsteq	r0, r4, lsr #32
    c2a0:	03a566dc 			; <UNDEFINED> instruction: 0x03a566dc
    c2a4:	7b640000 	blvc	190c2ac <_Min_Heap_Size+0x190baac>
    c2a8:	7b5c0000 	blvc	170c2b0 <_Min_Heap_Size+0x170bab0>
    c2ac:	cb110000 	blgt	44c2b4 <_Min_Heap_Size+0x44bab4>
    c2b0:	0100001c 	tsteq	r0, ip, lsl r0
    c2b4:	007909dd 	ldrsbteq	r0, [r9], #-157	; 0xffffff63
    c2b8:	7ba10000 	blvc	fe84c2c0 <_estack+0xde84b088>
    c2bc:	7b9b0000 	blvc	fe6cc2c4 <_estack+0xde6cb08c>
    c2c0:	70120000 	andsvc	r0, r2, r0
    c2c4:	de010063 	cdple	0, 0, cr0, cr1, cr3, {3}
    c2c8:	00008012 	andeq	r8, r0, r2, lsl r0
    c2cc:	007bd600 	rsbseq	sp, fp, r0, lsl #12
    c2d0:	007bcc00 	rsbseq	ip, fp, r0, lsl #24
    c2d4:	706f1200 	rsbvc	r1, pc, r0, lsl #4
    c2d8:	1ade0100 	bne	ff78c6e0 <_estack+0xdf78b4a8>
    c2dc:	00000080 	andeq	r0, r0, r0, lsl #1
    c2e0:	00007c1f 	andeq	r7, r0, pc, lsl ip
    c2e4:	00007c19 	andeq	r7, r0, r9, lsl ip
    c2e8:	00707312 	rsbseq	r7, r0, r2, lsl r3
    c2ec:	a523de01 	strge	sp, [r3, #-3585]!	; 0xfffff1ff
    c2f0:	50000003 	andpl	r0, r0, r3
    c2f4:	4a00007c 	bmi	c4ec <_Min_Heap_Size+0xbcec>
    c2f8:	1300007c 	movwne	r0, #124	; 0x7c
    c2fc:	08001816 	stmdaeq	r0, {r1, r2, r4, fp, ip}
    c300:	00000784 	andeq	r0, r0, r4, lsl #15
    c304:	0000039b 	muleq	r0, fp, r3
    c308:	02500114 	subseq	r0, r0, #20, 2
    c30c:	15000079 	strne	r0, [r0, #-121]	; 0xffffff87
    c310:	0800181a 	stmdaeq	r0, {r1, r3, r4, fp, ip}
    c314:	00000723 	andeq	r0, r0, r3, lsr #14
    c318:	80041600 	andhi	r1, r4, r0, lsl #12
    c31c:	17000000 	strne	r0, [r0, -r0]
    c320:	0025ff01 	eoreq	pc, r5, r1, lsl #30
    c324:	06a10100 	strteq	r0, [r1], r0, lsl #2
    c328:	00185001 	andseq	r5, r8, r1
    c32c:	0019d408 	andseq	sp, r9, r8, lsl #8
    c330:	007c7b08 	rsbseq	r7, ip, r8, lsl #22
    c334:	06a20100 	strteq	r0, [r2], r0, lsl #2
    c338:	02100000 	andseq	r0, r0, #0
    c33c:	01000025 	tsteq	r0, r5, lsr #32
    c340:	03a527a1 			; <UNDEFINED> instruction: 0x03a527a1
    c344:	7ca10000 	stcvc	0, cr0, [r1]
    c348:	7c9b0000 	ldcvc	0, cr0, [fp], {0}
    c34c:	51100000 	tstpl	r0, r0
    c350:	01000025 	tsteq	r0, r5, lsr #32
    c354:	00803ba1 	addeq	r3, r0, r1, lsr #23
    c358:	7cd10000 	ldclvc	0, cr0, [r1], {0}
    c35c:	7ccd0000 	stclvc	0, cr0, [sp], {0}
    c360:	cb110000 	blgt	44c368 <_Min_Heap_Size+0x44bb68>
    c364:	0100001c 	tsteq	r0, ip, lsl r0
    c368:	007909a2 	rsbseq	r0, r9, r2, lsr #19
    c36c:	7cf50000 	ldclvc	0, cr0, [r5]
    c370:	7cef0000 	stclvc	0, cr0, [pc]	; c378 <_Min_Heap_Size+0xbb78>
    c374:	e0110000 	ands	r0, r1, r0
    c378:	01000024 	tsteq	r0, r4, lsr #32
    c37c:	007914a2 	rsbseq	r1, r9, r2, lsr #9
    c380:	7d270000 	stcvc	0, cr0, [r7, #-0]
    c384:	7d1f0000 	ldcvc	0, cr0, [pc, #-0]	; c38c <_Min_Heap_Size+0xbb8c>
    c388:	24110000 	ldrcs	r0, [r1], #-0
    c38c:	01000025 	tsteq	r0, r5, lsr #32
    c390:	03a513a3 			; <UNDEFINED> instruction: 0x03a513a3
    c394:	7d840000 	stcvc	0, cr0, [r4]
    c398:	7d5e0000 	ldclvc	0, cr0, [lr, #-0]
    c39c:	96180000 	ldrls	r0, [r8], -r0
    c3a0:	01000025 	tsteq	r0, r5, lsr #32
    c3a4:	01d61aa4 	bicseq	r1, r6, r4, lsr #21
    c3a8:	03050000 	movweq	r0, #20480	; 0x5000
    c3ac:	200001e0 	andcs	r0, r0, r0, ror #3
    c3b0:	0025f818 	eoreq	pc, r5, r8, lsl r8	; <UNPREDICTABLE>
    c3b4:	19a50100 	stmibne	r5!, {r8}
    c3b8:	000006a2 	andeq	r0, r0, r2, lsr #13
    c3bc:	00d80305 	sbcseq	r0, r8, r5, lsl #6
    c3c0:	a0132000 	andsge	r2, r3, r0
    c3c4:	88080018 	stmdahi	r8, {r3, r4}
    c3c8:	62000008 	andvs	r0, r0, #8
    c3cc:	14000004 	strne	r0, [r0], #-4
    c3d0:	77025001 	strvc	r5, [r2, -r1]
    c3d4:	a6130000 	ldrge	r0, [r3], -r0
    c3d8:	88080018 	stmdahi	r8, {r3, r4}
    c3dc:	79000008 	stmdbvc	r0, {r3}
    c3e0:	14000004 	strne	r0, [r0], #-4
    c3e4:	03055001 	movweq	r5, #20481	; 0x5001
    c3e8:	08002de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp, sp}
    c3ec:	18ac1300 	stmiane	ip!, {r8, r9, ip}
    c3f0:	08880800 	stmeq	r8, {fp}
    c3f4:	04900000 	ldreq	r0, [r0], #0
    c3f8:	01140000 	tsteq	r4, r0
    c3fc:	00030550 	andeq	r0, r3, r0, asr r5
    c400:	0008002e 	andeq	r0, r8, lr, lsr #32
    c404:	0018b413 	andseq	fp, r8, r3, lsl r4
    c408:	00089508 	andeq	r9, r8, r8, lsl #10
    c40c:	0004a700 	andeq	sl, r4, r0, lsl #14
    c410:	50011400 	andpl	r1, r1, r0, lsl #8
    c414:	2e140305 	cdpcs	3, 1, cr0, cr4, cr5, {0}
    c418:	13000800 	movwne	r0, #2048	; 0x800
    c41c:	080018bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp, ip}
    c420:	00000895 	muleq	r0, r5, r8
    c424:	000004be 			; <UNDEFINED> instruction: 0x000004be
    c428:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c42c:	002e2803 	eoreq	r2, lr, r3, lsl #16
    c430:	c4130008 	ldrgt	r0, [r3], #-8
    c434:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c438:	d5000008 	strle	r0, [r0, #-8]
    c43c:	14000004 	strne	r0, [r0], #-4
    c440:	03055001 	movweq	r5, #20481	; 0x5001
    c444:	08002e3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, fp, sp}
    c448:	18cc1300 	stmiane	ip, {r8, r9, ip}^
    c44c:	08950800 	ldmeq	r5, {fp}
    c450:	04ec0000 	strbteq	r0, [ip], #0
    c454:	01140000 	tsteq	r4, r0
    c458:	50030550 	andpl	r0, r3, r0, asr r5
    c45c:	0008002e 	andeq	r0, r8, lr, lsr #32
    c460:	0018d413 	andseq	sp, r8, r3, lsl r4
    c464:	00089508 	andeq	r9, r8, r8, lsl #10
    c468:	00050300 	andeq	r0, r5, r0, lsl #6
    c46c:	50011400 	andpl	r1, r1, r0, lsl #8
    c470:	2e640305 	cdpcs	3, 6, cr0, cr4, cr5, {0}
    c474:	13000800 	movwne	r0, #2048	; 0x800
    c478:	080018dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip}
    c47c:	00000895 	muleq	r0, r5, r8
    c480:	0000051a 	andeq	r0, r0, sl, lsl r5
    c484:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c488:	002e7803 	eoreq	r7, lr, r3, lsl #16
    c48c:	e4130008 	ldr	r0, [r3], #-8
    c490:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c494:	31000008 	tstcc	r0, r8
    c498:	14000005 	strne	r0, [r0], #-5
    c49c:	03055001 	movweq	r5, #20481	; 0x5001
    c4a0:	08002e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp, sp}
    c4a4:	18ec1300 	stmiane	ip!, {r8, r9, ip}^
    c4a8:	08950800 	ldmeq	r5, {fp}
    c4ac:	05480000 	strbeq	r0, [r8, #-0]
    c4b0:	01140000 	tsteq	r4, r0
    c4b4:	a0030550 	andge	r0, r3, r0, asr r5
    c4b8:	0008002e 	andeq	r0, r8, lr, lsr #32
    c4bc:	0018f413 	andseq	pc, r8, r3, lsl r4	; <UNPREDICTABLE>
    c4c0:	00089508 	andeq	r9, r8, r8, lsl #10
    c4c4:	00055f00 	andeq	r5, r5, r0, lsl #30
    c4c8:	50011400 	andpl	r1, r1, r0, lsl #8
    c4cc:	2eb40305 	cdpcs	3, 11, cr0, cr4, cr5, {0}
    c4d0:	13000800 	movwne	r0, #2048	; 0x800
    c4d4:	080018fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, ip}
    c4d8:	00000895 	muleq	r0, r5, r8
    c4dc:	00000576 	andeq	r0, r0, r6, ror r5
    c4e0:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c4e4:	002ec803 	eoreq	ip, lr, r3, lsl #16
    c4e8:	04130008 	ldreq	r0, [r3], #-8
    c4ec:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    c4f0:	8d000008 	stchi	0, cr0, [r0, #-32]	; 0xffffffe0
    c4f4:	14000005 	strne	r0, [r0], #-5
    c4f8:	03055001 	movweq	r5, #20481	; 0x5001
    c4fc:	08002edc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, fp, sp}
    c500:	190c1300 	stmdbne	ip, {r8, r9, ip}
    c504:	08950800 	ldmeq	r5, {fp}
    c508:	05a40000 	streq	r0, [r4, #0]!
    c50c:	01140000 	tsteq	r4, r0
    c510:	f0030550 			; <UNDEFINED> instruction: 0xf0030550
    c514:	0008002e 	andeq	r0, r8, lr, lsr #32
    c518:	00191413 	andseq	r1, r9, r3, lsl r4
    c51c:	00089508 	andeq	r9, r8, r8, lsl #10
    c520:	0005bb00 	andeq	fp, r5, r0, lsl #22
    c524:	50011400 	andpl	r1, r1, r0, lsl #8
    c528:	2f040305 	svccs	0x00040305
    c52c:	13000800 	movwne	r0, #2048	; 0x800
    c530:	0800191c 	stmdaeq	r0, {r2, r3, r4, r8, fp, ip}
    c534:	00000895 	muleq	r0, r5, r8
    c538:	000005d2 	ldrdeq	r0, [r0], -r2
    c53c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c540:	002f1803 	eoreq	r1, pc, r3, lsl #16
    c544:	24130008 	ldrcs	r0, [r3], #-8
    c548:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    c54c:	e9000008 	stmdb	r0, {r3}
    c550:	14000005 	strne	r0, [r0], #-5
    c554:	03055001 	movweq	r5, #20481	; 0x5001
    c558:	08002f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp, sp}
    c55c:	192c1300 	stmdbne	ip!, {r8, r9, ip}
    c560:	08950800 	ldmeq	r5, {fp}
    c564:	06000000 	streq	r0, [r0], -r0
    c568:	01140000 	tsteq	r4, r0
    c56c:	40030550 	andmi	r0, r3, r0, asr r5
    c570:	0008002f 	andeq	r0, r8, pc, lsr #32
    c574:	00193213 	andseq	r3, r9, r3, lsl r2
    c578:	00088808 	andeq	r8, r8, r8, lsl #16
    c57c:	00061400 	andeq	r1, r6, r0, lsl #8
    c580:	50011400 	andpl	r1, r1, r0, lsl #8
    c584:	00007702 	andeq	r7, r0, r2, lsl #14
    c588:	00193813 	andseq	r3, r9, r3, lsl r8
    c58c:	0006b208 	andeq	fp, r6, r8, lsl #4
    c590:	00062800 	andeq	r2, r6, r0, lsl #16
    c594:	50011400 	andpl	r1, r1, r0, lsl #8
    c598:	00007602 	andeq	r7, r0, r2, lsl #12
    c59c:	00194613 	andseq	r4, r9, r3, lsl r6
    c5a0:	0002cb08 	andeq	ip, r2, r8, lsl #22
    c5a4:	00064c00 	andeq	r4, r6, r0, lsl #24
    c5a8:	50011400 	andpl	r1, r1, r0, lsl #8
    c5ac:	00d80305 	sbcseq	r0, r8, r5, lsl #6
    c5b0:	01142000 	tsteq	r4, r0
    c5b4:	40080251 	andmi	r0, r8, r1, asr r2
    c5b8:	03520114 	cmpeq	r2, #20, 2
    c5bc:	0000c075 	andeq	ip, r0, r5, ror r0
    c5c0:	00194e13 	andseq	r4, r9, r3, lsl lr
    c5c4:	00089508 	andeq	r9, r8, r8, lsl #10
    c5c8:	00066300 	andeq	r6, r6, r0, lsl #6
    c5cc:	50011400 	andpl	r1, r1, r0, lsl #8
    c5d0:	2f540305 	svccs	0x00540305
    c5d4:	13000800 	movwne	r0, #2048	; 0x800
    c5d8:	08001956 	stmdaeq	r0, {r1, r2, r4, r6, r8, fp, ip}
    c5dc:	00000895 	muleq	r0, r5, r8
    c5e0:	0000067a 	andeq	r0, r0, sl, ror r6
    c5e4:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c5e8:	002f6403 	eoreq	r6, pc, r3, lsl #8
    c5ec:	66130008 	ldrvs	r0, [r3], -r8
    c5f0:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    c5f4:	91000008 	tstls	r0, r8
    c5f8:	14000006 	strne	r0, [r0], #-6
    c5fc:	03055001 	movweq	r5, #20481	; 0x5001
    c600:	08002f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, sp}
    c604:	19721900 	ldmdbne	r2!, {r8, fp, ip}^
    c608:	08880800 	stmeq	r8, {fp}
    c60c:	01140000 	tsteq	r4, r0
    c610:	00770250 	rsbseq	r0, r7, r0, asr r2
    c614:	801a0000 	andshi	r0, sl, r0
    c618:	b2000000 	andlt	r0, r0, #0
    c61c:	1b000006 	blne	c63c <_Min_Heap_Size+0xbe3c>
    c620:	00000080 	andeq	r0, r0, r0, lsl #1
    c624:	181c003f 	ldmdane	ip, {r0, r1, r2, r3, r4, r5}
    c628:	01000026 	tsteq	r0, r6, lsr #32
    c62c:	6c010d99 	stcvs	13, cr0, [r1], {153}	; 0x99
    c630:	84080017 	strhi	r0, [r8], #-23	; 0xffffffe9
    c634:	86080017 			; <UNDEFINED> instruction: 0x86080017
    c638:	0100007e 	tsteq	r0, lr, ror r0
    c63c:	00000723 	andeq	r0, r0, r3, lsr #14
    c640:	00261d10 	eoreq	r1, r6, r0, lsl sp
    c644:	2a990100 	bcs	fe64ca4c <_estack+0xde64b814>
    c648:	00000080 	andeq	r0, r0, r0, lsl #1
    c64c:	00007eae 	andeq	r7, r0, lr, lsr #29
    c650:	00007ea6 	andeq	r7, r0, r6, lsr #29
    c654:	2612011d 			; <UNDEFINED> instruction: 0x2612011d
    c658:	9c010000 	stcls	0, cr0, [r1], {-0}
    c65c:	f5010111 			; <UNDEFINED> instruction: 0xf5010111
    c660:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
    c664:	00000080 	andeq	r0, r0, r0, lsl #1
    c668:	17781300 	ldrbne	r1, [r8, -r0, lsl #6]!
    c66c:	08950800 	ldmeq	r5, {fp}
    c670:	07120000 	ldreq	r0, [r2, -r0]
    c674:	01140000 	tsteq	r4, r0
    c678:	60030550 	andvs	r0, r3, r0, asr r5
    c67c:	1408002d 	strne	r0, [r8], #-45	; 0xffffffd3
    c680:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    c684:	7e190000 	cdpvc	0, 1, cr0, cr9, cr0, {0}
    c688:	a3080017 	movwge	r0, #32791	; 0x8017
    c68c:	14000008 	strne	r0, [r0], #-8
    c690:	74025001 	strvc	r5, [r2], #-1
    c694:	1f000000 	svcne	0x00000000
    c698:	000024ab 	andeq	r2, r0, fp, lsr #9
    c69c:	010d8a01 	tsteq	sp, r1, lsl #20
    c6a0:	0000077d 	andeq	r0, r0, sp, ror r7
    c6a4:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
    c6a8:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
    c6ac:	01007d02 	tsteq	r0, r2, lsl #26
    c6b0:	0000077d 	andeq	r0, r0, sp, ror r7
    c6b4:	736e6920 	cmnvc	lr, #32, 18	; 0x80000
    c6b8:	2e8a0100 	rmfcse	f0, f2, f0
    c6bc:	00000080 	andeq	r0, r0, r0, lsl #1
    c6c0:	00007ee9 	andeq	r7, r0, r9, ror #29
    c6c4:	00007ee5 	andeq	r7, r0, r5, ror #29
    c6c8:	00256d11 	eoreq	r6, r5, r1, lsl sp
    c6cc:	0e8e0100 	rmfeqe	f0, f6, f0
    c6d0:	000000a6 	andeq	r0, r0, r6, lsr #1
    c6d4:	00007f0c 	andeq	r7, r0, ip, lsl #30
    c6d8:	00007f0a 	andeq	r7, r0, sl, lsl #30
    c6dc:	00257511 	eoreq	r7, r5, r1, lsl r5
    c6e0:	0e8f0100 	rmfeqe	f0, f7, f0
    c6e4:	000000a6 	andeq	r0, r0, r6, lsr #1
    c6e8:	00007f33 	andeq	r7, r0, r3, lsr pc
    c6ec:	00007f1f 	andeq	r7, r0, pc, lsl pc
    c6f0:	02010200 	andeq	r0, r1, #0, 4
    c6f4:	000025c4 	andeq	r2, r0, r4, asr #11
    c6f8:	00252a21 	eoreq	r2, r5, r1, lsr #20
    c6fc:	157f0100 	ldrbne	r0, [pc, #-256]!	; c604 <_Min_Heap_Size+0xbe04>
    c700:	00008001 	andeq	r8, r0, r1
    c704:	00170800 	andseq	r0, r7, r0, lsl #16
    c708:	00173408 	andseq	r3, r7, r8, lsl #8
    c70c:	007fd608 	rsbseq	sp, pc, r8, lsl #12
    c710:	07f50100 	ldrbeq	r0, [r5, r0, lsl #2]!
    c714:	70200000 	eorvc	r0, r0, r0
    c718:	7f010063 	svcvc	0x00010063
    c71c:	00008034 	andeq	r8, r0, r4, lsr r0
    c720:	00800600 	addeq	r0, r0, r0, lsl #12
    c724:	00800200 	addeq	r0, r0, r0, lsl #4
    c728:	1f161800 	svcne	0x00161800
    c72c:	80010000 	andhi	r0, r1, r0
    c730:	0007f50e 	andeq	pc, r7, lr, lsl #10
    c734:	7c910200 	lfmvc	f0, 4, [r1], {0}
    c738:	00253511 	eoreq	r3, r5, r1, lsl r5
    c73c:	12810100 	addne	r0, r1, #0, 2
    c740:	00000080 	andeq	r0, r0, r0, lsl #1
    c744:	0000802d 	andeq	r8, r0, sp, lsr #32
    c748:	00008027 	andeq	r8, r0, r7, lsr #32
    c74c:	00170e22 	andseq	r0, r7, r2, lsr #28
    c750:	00172408 	andseq	r2, r7, r8, lsl #8
    c754:	00691208 	rsbeq	r1, r9, r8, lsl #4
    c758:	790e8201 	stmdbvc	lr, {r0, r9, pc}
    c75c:	62000000 	andvs	r0, r0, #0
    c760:	5e000080 	cdppl	0, 0, cr0, cr0, cr0, {4}
    c764:	00000080 	andeq	r0, r0, r0, lsl #1
    c768:	00a61a00 	adceq	r1, r6, r0, lsl #20
    c76c:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    c770:	801b0000 	andshi	r0, fp, r0
    c774:	01000000 	mrseq	r0, (UNDEF: 0)
    c778:	70011700 	andvc	r1, r1, r0, lsl #14
    c77c:	01000000 	mrseq	r0, (UNDEF: 0)
    c780:	84010674 	strhi	r0, [r1], #-1652	; 0xfffff98c
    c784:	d4080017 	strle	r0, [r8], #-23	; 0xffffffe9
    c788:	81080017 	tsthi	r8, r7, lsl r0
    c78c:	01000080 	smlabbeq	r0, r0, r0, r0
    c790:	00000867 	andeq	r0, r0, r7, ror #16
    c794:	00179a13 	andseq	r9, r7, r3, lsl sl
    c798:	00089508 	andeq	r9, r8, r8, lsl #10
    c79c:	00083700 	andeq	r3, r8, r0, lsl #14
    c7a0:	50011400 	andpl	r1, r1, r0, lsl #8
    c7a4:	2d780305 	ldclcs	3, cr0, [r8, #-20]!	; 0xffffffec
    c7a8:	13000800 	movwne	r0, #2048	; 0x800
    c7ac:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
    c7b0:	00000895 	muleq	r0, r5, r8
    c7b4:	0000084e 	andeq	r0, r0, lr, asr #16
    c7b8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c7bc:	002d9c03 	eoreq	r9, sp, r3, lsl #24
    c7c0:	ae190008 	cdpge	0, 1, cr0, cr9, cr8, {0}
    c7c4:	95080017 	strls	r0, [r8, #-23]	; 0xffffffe9
    c7c8:	14000008 	strne	r0, [r0], #-8
    c7cc:	03055001 	movweq	r5, #20481	; 0x5001
    c7d0:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
    c7d4:	01510114 	cmpeq	r1, r4, lsl r1
    c7d8:	23000031 	movwcs	r0, #49	; 0x31
    c7dc:	00002628 	andeq	r2, r0, r8, lsr #12
    c7e0:	1f046302 	svcne	0x00046302
    c7e4:	0000b201 	andeq	fp, r0, r1, lsl #4
    c7e8:	08880300 	stmeq	r8, {r8, r9}
    c7ec:	2c240000 	stccs	0, cr0, [r4], #-0
    c7f0:	02000017 	andeq	r0, r0, #23
    c7f4:	b20c0465 	andlt	r0, ip, #1694498816	; 0x65000000
    c7f8:	00000000 	andeq	r0, r0, r0
    c7fc:	28010125 	stmdacs	r1, {r0, r2, r5, r8}
    c800:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
    c804:	08000002 	stmdaeq	r0, {r1}
    c808:	01012600 	tsteq	r1, r0, lsl #12
	...
    c814:	2605c807 	strcs	ip, [r5], -r7, lsl #16
    c818:	26120101 	ldrcs	r0, [r2], -r1, lsl #2
    c81c:	26120000 	ldrcs	r0, [r2], -r0
    c820:	9c010000 	stcls	0, cr0, [r1], {-0}
    c824:	01be0011 			; <UNDEFINED> instruction: 0x01be0011
    c828:	00020000 	andeq	r0, r2, r0
    c82c:	00001c91 	muleq	r0, r1, ip
    c830:	05880104 	streq	r0, [r8, #260]	; 0x104
    c834:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    c838:	95000026 	strls	r0, [r0, #-38]	; 0xffffffda
    c83c:	e0000008 	and	r0, r0, r8
    c840:	00000006 	andeq	r0, r0, r6
    c844:	00000000 	andeq	r0, r0, r0
    c848:	f3000000 	vhadd.u8	d0, d0, d0
    c84c:	0200008f 	andeq	r0, r0, #143	; 0x8f
    c850:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    c854:	01020000 	mrseq	r0, (UNDEF: 2)
    c858:	00057408 	andeq	r7, r5, r8, lsl #8
    c85c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    c860:	000003fd 	strdeq	r0, [r0], -sp
    c864:	8f070202 	svchi	0x00070202
    c868:	02000007 	andeq	r0, r0, #7
    c86c:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    c870:	04020000 	streq	r0, [r2], #-0
    c874:	0000b307 	andeq	fp, r0, r7, lsl #6
    c878:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    c87c:	000002e7 	andeq	r0, r0, r7, ror #5
    c880:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    c884:	03000000 	movweq	r0, #0
    c888:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c88c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c890:	0000b807 	andeq	fp, r0, r7, lsl #16
    c894:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    c898:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    c89c:	7d080102 	stfvcs	f0, [r8, #-8]
    c8a0:	04000005 	streq	r0, [r0], #-5
    c8a4:	00261201 	eoreq	r1, r6, r1, lsl #4
    c8a8:	060f0100 	streq	r0, [pc], -r0, lsl #2
    c8ac:	0019d401 	andseq	sp, r9, r1, lsl #8
    c8b0:	001a5c08 	andseq	r5, sl, r8, lsl #24
    c8b4:	0080a108 	addeq	sl, r0, r8, lsl #2
    c8b8:	01a60100 			; <UNDEFINED> instruction: 0x01a60100
    c8bc:	1d050000 	stcne	0, cr0, [r5, #-0]
    c8c0:	01000026 	tsteq	r0, r6, lsr #32
    c8c4:	0068290f 	rsbeq	r2, r8, pc, lsl #18
    c8c8:	80c50000 	sbchi	r0, r5, r0
    c8cc:	80c10000 	sbchi	r0, r1, r0
    c8d0:	de060000 	cdple	0, 0, cr0, cr6, cr0, {0}
    c8d4:	a6080019 			; <UNDEFINED> instruction: 0xa6080019
    c8d8:	c3000001 	movwgt	r0, #1
    c8dc:	07000000 	streq	r0, [r0, -r0]
    c8e0:	03055001 	movweq	r5, #20481	; 0x5001
    c8e4:	08002f6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, fp, sp}
    c8e8:	19e40600 	stmibne	r4!, {r9, sl}^
    c8ec:	01b30800 			; <UNDEFINED> instruction: 0x01b30800
    c8f0:	00da0000 	sbcseq	r0, sl, r0
    c8f4:	01070000 	mrseq	r0, (UNDEF: 7)
    c8f8:	70030550 	andvc	r0, r3, r0, asr r5
    c8fc:	0008002f 	andeq	r0, r8, pc, lsr #32
    c900:	0019f006 	andseq	pc, r9, r6
    c904:	0001a608 	andeq	sl, r1, r8, lsl #12
    c908:	0000f100 	andeq	pc, r0, r0, lsl #2
    c90c:	50010700 	andpl	r0, r1, r0, lsl #14
    c910:	2f8c0305 	svccs	0x008c0305
    c914:	06000800 	streq	r0, [r0], -r0, lsl #16
    c918:	080019f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, fp, ip}
    c91c:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    c920:	00000108 	andeq	r0, r0, r8, lsl #2
    c924:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    c928:	002fc403 	eoreq	ip, pc, r3, lsl #8
    c92c:	02060008 	andeq	r0, r6, #8
    c930:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    c934:	1f000001 	svcne	0x00000001
    c938:	07000001 	streq	r0, [r0, -r1]
    c93c:	03055001 	movweq	r5, #20481	; 0x5001
    c940:	08002fe0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, fp, sp}
    c944:	1a080600 	bne	20e14c <_Min_Heap_Size+0x20d94c>
    c948:	01b30800 			; <UNDEFINED> instruction: 0x01b30800
    c94c:	01360000 	teqeq	r6, r0
    c950:	01070000 	mrseq	r0, (UNDEF: 7)
    c954:	18030550 	stmdane	r3, {r4, r6, r8, sl}
    c958:	00080030 	andeq	r0, r8, r0, lsr r0
    c95c:	001a1406 	andseq	r1, sl, r6, lsl #8
    c960:	0001a608 	andeq	sl, r1, r8, lsl #12
    c964:	00014d00 	andeq	r4, r1, r0, lsl #26
    c968:	50010700 	andpl	r0, r1, r0, lsl #14
    c96c:	30340305 	eorscc	r0, r4, r5, lsl #6
    c970:	06000800 	streq	r0, [r0], -r0, lsl #16
    c974:	08001a1a 	stmdaeq	r0, {r1, r3, r4, r9, fp, ip}
    c978:	000001a6 	andeq	r0, r0, r6, lsr #3
    c97c:	00000164 	andeq	r0, r0, r4, ror #2
    c980:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    c984:	002f6c03 	eoreq	r6, pc, r3, lsl #24
    c988:	22060008 	andcs	r0, r6, #8
    c98c:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    c990:	7b000001 	blvc	c99c <_Min_Heap_Size+0xc19c>
    c994:	07000001 	streq	r0, [r0, -r1]
    c998:	03055001 	movweq	r5, #20481	; 0x5001
    c99c:	08002fa8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, fp, sp}
    c9a0:	1a2a0600 	bne	a8e1a8 <_Min_Heap_Size+0xa8d9a8>
    c9a4:	01a60800 			; <UNDEFINED> instruction: 0x01a60800
    c9a8:	01920000 	orrseq	r0, r2, r0
    c9ac:	01070000 	mrseq	r0, (UNDEF: 7)
    c9b0:	fc030550 	stc2	5, cr0, [r3], {80}	; 0x50
    c9b4:	0008002f 	andeq	r0, r8, pc, lsr #32
    c9b8:	001a3208 	andseq	r3, sl, r8, lsl #4
    c9bc:	0001a608 	andeq	sl, r1, r8, lsl #12
    c9c0:	50010700 	andpl	r0, r1, r0, lsl #14
    c9c4:	30500305 	subscc	r0, r0, r5, lsl #6
    c9c8:	00000800 	andeq	r0, r0, r0, lsl #16
    c9cc:	28010109 	stmdacs	r1, {r0, r3, r8}
    c9d0:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
    c9d4:	02000002 	andeq	r0, r0, #2
    c9d8:	01010a00 	tsteq	r1, r0, lsl #20
	...
    c9e4:	0005c803 	andeq	ip, r5, r3, lsl #16
    c9e8:	00000181 	andeq	r0, r0, r1, lsl #3
    c9ec:	1d370002 	ldcne	0, cr0, [r7, #-8]!
    c9f0:	01040000 	mrseq	r0, (UNDEF: 4)
    c9f4:	00000588 	andeq	r0, r0, r8, lsl #11
    c9f8:	0026a40c 	eoreq	sl, r6, ip, lsl #8
    c9fc:	00089500 	andeq	r9, r8, r0, lsl #10
    ca00:	0006f000 	andeq	pc, r6, r0
	...
    ca0c:	00910200 	addseq	r0, r1, r0, lsl #4
    ca10:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    ca14:	00746e69 	rsbseq	r6, r4, r9, ror #28
    ca18:	00269a03 	eoreq	r9, r6, r3, lsl #20
    ca1c:	1a8f0200 	bne	fe3cd224 <_estack+0xde3cbfec>
    ca20:	00000029 	andeq	r0, r0, r9, lsr #32
    ca24:	b8070404 	stmdalt	r7, {r2, sl}
    ca28:	04000000 	streq	r0, [r0], #-0
    ca2c:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    ca30:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    ca34:	0006bf04 	andeq	fp, r6, r4, lsl #30
    ca38:	06010400 	streq	r0, [r1], -r0, lsl #8
    ca3c:	00000576 	andeq	r0, r0, r6, ror r5
    ca40:	00006603 	andeq	r6, r0, r3, lsl #12
    ca44:	182b0300 	stmdane	fp!, {r8, r9}
    ca48:	00000064 	andeq	r0, r0, r4, rrx
    ca4c:	74080104 	strvc	r0, [r8], #-260	; 0xfffffefc
    ca50:	04000005 	streq	r0, [r0], #-5
    ca54:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    ca58:	02040000 	andeq	r0, r4, #0
    ca5c:	00078f07 	andeq	r8, r7, r7, lsl #30
    ca60:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    ca64:	000002ec 	andeq	r0, r0, ip, ror #5
    ca68:	0002c203 	andeq	ip, r2, r3, lsl #4
    ca6c:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    ca70:	0000008c 	andeq	r0, r0, ip, lsl #1
    ca74:	b3070404 	movwlt	r0, #29700	; 0x7404
    ca78:	04000000 	streq	r0, [r0], #-0
    ca7c:	00ae0708 	adceq	r0, lr, r8, lsl #14
    ca80:	04050000 	streq	r0, [r5], #-0
    ca84:	7d080104 	stfvcs	f0, [r8, #-16]
    ca88:	03000005 	movweq	r0, #5
    ca8c:	00000068 	andeq	r0, r0, r8, rrx
    ca90:	58131804 	ldmdapl	r3, {r2, fp, ip}
    ca94:	06000000 	streq	r0, [r0], -r0
    ca98:	000000a3 	andeq	r0, r0, r3, lsr #1
    ca9c:	0002c403 	andeq	ip, r2, r3, lsl #8
    caa0:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
    caa4:	00000080 	andeq	r0, r0, r0, lsl #1
    caa8:	0000b406 	andeq	fp, r0, r6, lsl #8
    caac:	26d00700 	ldrbcs	r0, [r0], r0, lsl #14
    cab0:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    cab4:	0000d711 	andeq	sp, r0, r1, lsl r7
    cab8:	20030500 	andcs	r0, r3, r0, lsl #10
    cabc:	08200002 	stmdaeq	r0!, {r1}
    cac0:	0000a304 	andeq	sl, r0, r4, lsl #6
    cac4:	e8010900 	stmda	r1, {r8, fp}
    cac8:	01000026 	tsteq	r0, r6, lsr #32
    cacc:	9a010735 	bls	4e7a8 <_Min_Heap_Size+0x4dfa8>
    cad0:	5c000000 	stcpl	0, cr0, [r0], {-0}
    cad4:	a408001a 	strge	r0, [r8], #-26	; 0xffffffe6
    cad8:	e308001a 	movw	r0, #32794	; 0x801a
    cadc:	01000080 	smlabbeq	r0, r0, r0, r0
    cae0:	00000170 	andeq	r0, r0, r0, ror r1
    cae4:	0026cb0a 	eoreq	ip, r6, sl, lsl #22
    cae8:	17350100 	ldrne	r0, [r5, -r0, lsl #2]!
    caec:	00000030 	andeq	r0, r0, r0, lsr r0
    caf0:	0000810d 	andeq	r8, r0, sp, lsl #2
    caf4:	00008103 	andeq	r8, r0, r3, lsl #2
    caf8:	0026db0b 	eoreq	sp, r6, fp, lsl #22
    cafc:	12370100 	eorsne	r0, r7, #0, 2
    cb00:	000000a3 	andeq	r0, r0, r3, lsr #1
    cb04:	000b0101 	andeq	r0, fp, r1, lsl #2
    cb08:	01000025 	tsteq	r0, r5, lsr #32
    cb0c:	00a31238 	adceq	r1, r3, r8, lsr r2
    cb10:	01010000 	mrseq	r0, (UNDEF: 1)
    cb14:	0026bb0b 	eoreq	fp, r6, fp, lsl #22
    cb18:	13390100 	teqne	r9, #0, 2
    cb1c:	000000b4 	strheq	r0, [r0], -r4
    cb20:	ee0c0101 	adfe	f0, f4, f1
    cb24:	01000026 	tsteq	r0, r6, lsr #32
    cb28:	00c0123a 	sbceq	r1, r0, sl, lsr r2
    cb2c:	910c0000 	mrsls	r0, (UNDEF: 12)
    cb30:	01000026 	tsteq	r0, r6, lsr #32
    cb34:	0170123b 	cmneq	r0, fp, lsr r2
    cb38:	830d0000 	movwhi	r0, #53248	; 0xd000
    cb3c:	01000026 	tsteq	r0, r6, lsr #32
    cb40:	00d70c3c 	sbcseq	r0, r7, ip, lsr ip
    cb44:	81540000 	cmphi	r4, r0
    cb48:	81520000 	cmphi	r2, r0
    cb4c:	880e0000 	stmdahi	lr, {}	; <UNPREDICTABLE>
    cb50:	7608001a 			; <UNDEFINED> instruction: 0x7608001a
    cb54:	00000001 	andeq	r0, r0, r1
    cb58:	00af0408 	adceq	r0, pc, r8, lsl #8
    cb5c:	010f0000 	mrseq	r0, CPSR
    cb60:	0026e001 	eoreq	lr, r6, r1
    cb64:	0026e000 	eoreq	lr, r6, r0
    cb68:	0d0f0500 	cfstr32eq	mvfx0, [pc, #-0]	; cb70 <_Min_Heap_Size+0xc370>
    cb6c:	00083100 	andeq	r3, r8, r0, lsl #2
    cb70:	21000200 	mrscs	r0, R8_usr
    cb74:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    cb78:	00058801 	andeq	r8, r5, r1, lsl #16
    cb7c:	27b50c00 	ldrcs	r0, [r5, r0, lsl #24]!
    cb80:	08950000 	ldmeq	r5, {}	; <UNPREDICTABLE>
    cb84:	07000000 	streq	r0, [r0, -r0]
	...
    cb90:	92ea0000 	rscls	r0, sl, #0
    cb94:	01020000 	mrseq	r0, (UNDEF: 2)
    cb98:	00057606 	andeq	r7, r5, r6, lsl #12
    cb9c:	08010200 	stmdaeq	r1, {r9}
    cba0:	00000574 	andeq	r0, r0, r4, ror r5
    cba4:	fd050202 	stc2	2, cr0, [r5, #-8]
    cba8:	02000003 	andeq	r0, r0, #3
    cbac:	078f0702 	streq	r0, [pc, r2, lsl #14]
    cbb0:	04020000 	streq	r0, [r2], #-0
    cbb4:	0002ec05 	andeq	lr, r2, r5, lsl #24
    cbb8:	02c20300 	sbceq	r0, r2, #0, 6
    cbbc:	4f020000 	svcmi	0x00020000
    cbc0:	00005819 	andeq	r5, r0, r9, lsl r8
    cbc4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    cbc8:	000000b3 	strheq	r0, [r0], -r3
    cbcc:	e7050802 	str	r0, [r5, -r2, lsl #16]
    cbd0:	02000002 	andeq	r0, r0, #2
    cbd4:	00ae0708 	adceq	r0, lr, r8, lsl #14
    cbd8:	6f030000 	svcvs	0x00030000
    cbdc:	02000027 	andeq	r0, r0, #39	; 0x27
    cbe0:	005f1ec8 	subseq	r1, pc, r8, asr #29
    cbe4:	04040000 	streq	r0, [r4], #-0
    cbe8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    cbec:	07040200 	streq	r0, [r4, -r0, lsl #4]
    cbf0:	000000b8 	strheq	r0, [r0], -r8
    cbf4:	bf040802 	svclt	0x00040802
    cbf8:	03000006 	movweq	r0, #6
    cbfc:	000028e7 	andeq	r2, r0, r7, ror #17
    cc00:	450e1e03 	strmi	r1, [lr, #-3587]	; 0xfffff1fd
    cc04:	03000000 	movweq	r0, #0
    cc08:	0000282b 	andeq	r2, r0, fp, lsr #16
    cc0c:	450e2203 	strmi	r2, [lr, #-515]	; 0xfffffdfd
    cc10:	03000000 	movweq	r0, #0
    cc14:	000028b0 			; <UNDEFINED> instruction: 0x000028b0
    cc18:	450e2e03 	strmi	r2, [lr, #-3587]	; 0xfffff1fd
    cc1c:	03000000 	movweq	r0, #0
    cc20:	000028a7 	andeq	r2, r0, r7, lsr #17
    cc24:	370f3803 	strcc	r3, [pc, -r3, lsl #16]
    cc28:	03000000 	movweq	r0, #0
    cc2c:	000028c5 	andeq	r2, r0, r5, asr #17
    cc30:	3e183c03 	cdpcc	12, 1, cr3, cr8, cr3, {0}
    cc34:	03000000 	movweq	r0, #0
    cc38:	000028f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    cc3c:	3e183f03 	cdpcc	15, 1, cr3, cr8, cr3, {0}
    cc40:	03000000 	movweq	r0, #0
    cc44:	00002866 	andeq	r2, r0, r6, ror #16
    cc48:	3e184b03 	vnmlscc.f64	d4, d8, d3
    cc4c:	03000000 	movweq	r0, #0
    cc50:	000027ac 	andeq	r2, r0, ip, lsr #15
    cc54:	4c145a03 			; <UNDEFINED> instruction: 0x4c145a03
    cc58:	03000000 	movweq	r0, #0
    cc5c:	000028af 	andeq	r2, r0, pc, lsr #17
    cc60:	a6106603 	ldrge	r6, [r0], -r3, lsl #12
    cc64:	03000000 	movweq	r0, #0
    cc68:	000027e0 	andeq	r2, r0, r0, ror #15
    cc6c:	3e18d103 	mnfcce	f5, f3
    cc70:	05000000 	streq	r0, [r0, #-0]
    cc74:	00010c04 	andeq	r0, r1, r4, lsl #24
    cc78:	08010200 	stmdaeq	r1, {r9}
    cc7c:	0000057d 	andeq	r0, r0, sp, ror r5
    cc80:	00276803 	eoreq	r6, r7, r3, lsl #16
    cc84:	122a0400 	eorne	r0, sl, #0, 8
    cc88:	0000006d 	andeq	r0, r0, sp, rrx
    cc8c:	0028bc06 	eoreq	fp, r8, r6, lsl #24
    cc90:	2f051000 	svccs	0x00051000
    cc94:	00014b08 	andeq	r4, r1, r8, lsl #22
    cc98:	272c0700 	strcs	r0, [ip, -r0, lsl #14]!
    cc9c:	30050000 	andcc	r0, r5, r0
    cca0:	00011309 	andeq	r1, r1, r9, lsl #6
    cca4:	00230200 	eoreq	r0, r3, r0, lsl #4
    cca8:	00280f07 	eoreq	r0, r8, r7, lsl #30
    ccac:	07310500 	ldreq	r0, [r1, -r0, lsl #10]!
    ccb0:	00000045 	andeq	r0, r0, r5, asr #32
    ccb4:	00082302 	andeq	r2, r8, r2, lsl #6
    ccb8:	0028e903 	eoreq	lr, r8, r3, lsl #18
    ccbc:	14610600 	strbtne	r0, [r1], #-1536	; 0xfffffa00
    ccc0:	0000008e 	andeq	r0, r0, lr, lsl #1
    ccc4:	00282d03 	eoreq	r2, r8, r3, lsl #26
    ccc8:	15660600 	strbne	r0, [r6, #-1536]!	; 0xfffffa00
    cccc:	0000009a 	muleq	r0, sl, r0
    ccd0:	00270203 	eoreq	r0, r7, r3, lsl #4
    ccd4:	136b0600 	cmnne	fp, #0, 12
    ccd8:	00000058 	andeq	r0, r0, r8, asr r0
    ccdc:	00286803 	eoreq	r6, r8, r3, lsl #16
    cce0:	128b0600 	addne	r0, fp, #0, 12
    cce4:	000000d6 	ldrdeq	r0, [r0], -r6
    cce8:	0028b103 	eoreq	fp, r8, r3, lsl #2
    ccec:	129d0600 	addsne	r0, sp, #0, 12
    ccf0:	000000ee 	andeq	r0, r0, lr, ror #1
    ccf4:	0028a903 	eoreq	sl, r8, r3, lsl #18
    ccf8:	12a10600 	adcne	r0, r1, #0, 12
    ccfc:	000000b2 	strheq	r0, [r0], -r2
    cd00:	0028c703 	eoreq	ip, r8, r3, lsl #14
    cd04:	12a50600 	adcne	r0, r5, #0, 12
    cd08:	000000be 	strheq	r0, [r0], -lr
    cd0c:	0028f403 	eoreq	pc, r8, r3, lsl #8
    cd10:	12a90600 	adcne	r0, r9, #0, 12
    cd14:	000000ca 	andeq	r0, r0, sl, asr #1
    cd18:	0027ae03 	eoreq	sl, r7, r3, lsl #28
    cd1c:	12bd0600 	adcsne	r0, sp, #0, 12
    cd20:	000000e2 	andeq	r0, r0, r2, ror #1
    cd24:	0027e203 	eoreq	lr, r7, r3, lsl #4
    cd28:	13c20600 	bicne	r0, r2, #0, 12
    cd2c:	000000fa 	strdeq	r0, [r0], -sl
    cd30:	00273406 	eoreq	r3, r7, r6, lsl #8
    cd34:	1b075800 	blne	1e2d3c <_Min_Heap_Size+0x1e253c>
    cd38:	0002a308 	andeq	sl, r2, r8, lsl #6
    cd3c:	27540700 	ldrbcs	r0, [r4, -r0, lsl #14]
    cd40:	1d070000 	stcne	0, cr0, [r7, #-0]
    cd44:	0001870a 	andeq	r8, r1, sl, lsl #14
    cd48:	00230200 	eoreq	r0, r3, r0, lsl #4
    cd4c:	0027f507 	eoreq	pc, r7, r7, lsl #10
    cd50:	0a1e0700 	beq	78e958 <_Min_Heap_Size+0x78e158>
    cd54:	0000016f 	andeq	r0, r0, pc, ror #2
    cd58:	07022302 	streq	r2, [r2, -r2, lsl #6]
    cd5c:	000028cd 	andeq	r2, r0, sp, asr #17
    cd60:	ab0a1f07 	blge	294984 <_Min_Heap_Size+0x294184>
    cd64:	02000001 	andeq	r0, r0, #1
    cd68:	17070423 	strne	r0, [r7, -r3, lsr #8]
    cd6c:	07000028 	streq	r0, [r0, -r8, lsr #32]
    cd70:	01b70b20 			; <UNDEFINED> instruction: 0x01b70b20
    cd74:	23020000 	movwcs	r0, #8192	; 0x2000
    cd78:	28780708 	ldmdacs	r8!, {r3, r8, r9, sl}^
    cd7c:	21070000 	mrscs	r0, (UNDEF: 7)
    cd80:	0001930a 	andeq	r9, r1, sl, lsl #6
    cd84:	0a230200 	beq	8cd58c <_Min_Heap_Size+0x8ccd8c>
    cd88:	0027a507 	eoreq	sl, r7, r7, lsl #10
    cd8c:	0a220700 	beq	88e994 <_Min_Heap_Size+0x88e194>
    cd90:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    cd94:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    cd98:	000026fa 	strdeq	r2, [r0], -sl
    cd9c:	870a2307 	strhi	r2, [sl, -r7, lsl #6]
    cda0:	02000001 	andeq	r0, r0, #1
    cda4:	7f070e23 	svcvc	0x00070e23
    cda8:	07000028 	streq	r0, [r0, -r8, lsr #32]
    cdac:	017b0a24 	cmneq	fp, r4, lsr #20
    cdb0:	23020000 	movwcs	r0, #8192	; 0x2000
    cdb4:	28370710 	ldmdacs	r7!, {r4, r8, r9, sl}
    cdb8:	2a070000 	bcs	1ccdc0 <_Min_Heap_Size+0x1cc5c0>
    cdbc:	00011f13 	andeq	r1, r1, r3, lsl pc
    cdc0:	18230200 	stmdane	r3!, {r9}
    cdc4:	00285e07 	eoreq	r5, r8, r7, lsl #28
    cdc8:	132b0700 			; <UNDEFINED> instruction: 0x132b0700
    cdcc:	0000011f 	andeq	r0, r0, pc, lsl r1
    cdd0:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    cdd4:	00002739 	andeq	r2, r0, r9, lsr r7
    cdd8:	1f132c07 	svcne	0x00132c07
    cddc:	02000001 	andeq	r0, r0, #1
    cde0:	7f073823 	svcvc	0x00073823
    cde4:	07000027 	streq	r0, [r0, -r7, lsr #32]
    cde8:	0157112d 	cmpeq	r7, sp, lsr #2
    cdec:	23020000 	movwcs	r0, #8192	; 0x2000
    cdf0:	284c0748 	stmdacs	ip, {r3, r6, r8, r9, sl}^
    cdf4:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    cdf8:	00014b0c 	andeq	r4, r1, ip, lsl #22
    cdfc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    ce00:	00288707 	eoreq	r8, r8, r7, lsl #14
    ce04:	09300700 	ldmdbeq	r0!, {r8, r9, sl}
    ce08:	000002a3 	andeq	r0, r0, r3, lsr #5
    ce0c:	00502302 	subseq	r2, r0, r2, lsl #6
    ce10:	00004508 	andeq	r4, r0, r8, lsl #10
    ce14:	0002b300 	andeq	fp, r2, r0, lsl #6
    ce18:	00800900 	addeq	r0, r0, r0, lsl #18
    ce1c:	00010000 	andeq	r0, r1, r0
    ce20:	736d740a 	cmnvc	sp, #167772160	; 0xa000000
    ce24:	11081000 	mrsne	r1, (UNDEF: 8)
    ce28:	0002fd08 	andeq	pc, r2, r8, lsl #26
    ce2c:	28d50700 	ldmcs	r5, {r8, r9, sl}^
    ce30:	12080000 	andne	r0, r8, #0
    ce34:	0001630a 	andeq	r6, r1, sl, lsl #6
    ce38:	00230200 	eoreq	r0, r3, r0, lsl #4
    ce3c:	00286e07 	eoreq	r6, r8, r7, lsl #28
    ce40:	0a130800 	beq	4cee48 <_Min_Heap_Size+0x4ce648>
    ce44:	00000163 	andeq	r0, r0, r3, ror #2
    ce48:	07042302 	streq	r2, [r4, -r2, lsl #6]
    ce4c:	00002719 	andeq	r2, r0, r9, lsl r7
    ce50:	630a1408 	movwvs	r1, #41992	; 0xa408
    ce54:	02000001 	andeq	r0, r0, #1
    ce58:	ce070823 	cdpgt	8, 0, cr0, cr7, cr3, {1}
    ce5c:	08000027 	stmdaeq	r0, {r0, r1, r2, r5}
    ce60:	01630a15 	cmneq	r3, r5, lsl sl
    ce64:	23020000 	movwcs	r0, #8192	; 0x2000
    ce68:	0608000c 	streq	r0, [r8], -ip
    ce6c:	0d000001 	stceq	0, cr0, [r0, #-4]
    ce70:	09000003 	stmdbeq	r0, {r0, r1}
    ce74:	00000080 	andeq	r0, r0, r0, lsl #1
    ce78:	410b0000 	mrsmi	r0, (UNDEF: 11)
    ce7c:	01000027 	tsteq	r0, r7, lsr #32
    ce80:	02fd0727 	rscseq	r0, sp, #10223616	; 0x9c0000
    ce84:	05010000 	streq	r0, [r1, #-0]
    ce88:	00000003 	andeq	r0, r0, r3
    ce8c:	270a0b00 	strcs	r0, [sl, -r0, lsl #22]
    ce90:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    ce94:	00033308 	andeq	r3, r3, r8, lsl #6
    ce98:	03050100 	movweq	r0, #20736	; 0x5100
    ce9c:	00000000 	andeq	r0, r0, r0
    cea0:	01060405 	tsteq	r6, r5, lsl #8
    cea4:	010c0000 	mrseq	r0, (UNDEF: 12)
    cea8:	00002724 	andeq	r2, r0, r4, lsr #14
    ceac:	0105a901 	tsteq	r5, r1, lsl #18
    ceb0:	00000079 	andeq	r0, r0, r9, ror r0
	...
    cebc:	00008167 	andeq	r8, r0, r7, ror #2
    cec0:	00039e01 	andeq	r9, r3, r1, lsl #28
    cec4:	27ea0d00 	strbcs	r0, [sl, r0, lsl #26]!
    cec8:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    cecc:	00010613 	andeq	r0, r1, r3, lsl r6
    ced0:	00818b00 	addeq	r8, r1, r0, lsl #22
    ced4:	00818700 	addeq	r8, r1, r0, lsl #14
    ced8:	28260d00 	stmdacs	r6!, {r8, sl, fp}
    cedc:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    cee0:	00033320 	andeq	r3, r3, r0, lsr #6
    cee4:	0081b000 	addeq	fp, r1, r0
    cee8:	0081ac00 	addeq	sl, r1, r0, lsl #24
    ceec:	6e650e00 	cdpvs	14, 6, cr0, cr5, cr0, {0}
    cef0:	a9010076 	stmdbge	r1, {r1, r2, r4, r5, r6}
    cef4:	0003332d 	andeq	r3, r3, sp, lsr #6
    cef8:	0081d500 	addeq	sp, r1, r0, lsl #10
    cefc:	0081d100 	addeq	sp, r1, r0, lsl #2
    cf00:	00000f00 	andeq	r0, r0, r0, lsl #30
    cf04:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    cf08:	0c000000 	stceq	0, cr0, [r0], {-0}
    cf0c:	00289901 	eoreq	r9, r8, r1, lsl #18
    cf10:	05a30100 	streq	r0, [r3, #256]!	; 0x100
    cf14:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    cf20:	0081f600 	addeq	pc, r1, r0, lsl #12
    cf24:	03c70100 	biceq	r0, r7, #0, 2
    cf28:	000f0000 	andeq	r0, pc, r0
    cf2c:	0a000000 	beq	cf34 <_Min_Heap_Size+0xc734>
    cf30:	00000008 	andeq	r0, r0, r8
    cf34:	283f010c 	ldmdacs	pc!, {r2, r3, r8}	; <UNPREDICTABLE>
    cf38:	9b010000 	blls	4cf40 <_Min_Heap_Size+0x4c740>
    cf3c:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    cf48:	82160000 	andshi	r0, r6, #0
    cf4c:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    cf50:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    cf54:	00646c6f 	rsbeq	r6, r4, pc, ror #24
    cf58:	06119b01 	ldreq	r9, [r1], -r1, lsl #22
    cf5c:	3a000001 	bcc	cf68 <_Min_Heap_Size+0xc768>
    cf60:	36000082 	strcc	r0, [r0], -r2, lsl #1
    cf64:	0e000082 	cdpeq	0, 0, cr0, cr0, cr2, {4}
    cf68:	0077656e 	rsbseq	r6, r7, lr, ror #10
    cf6c:	061c9b01 	ldreq	r9, [ip], -r1, lsl #22
    cf70:	5f000001 	svcpl	0x00000001
    cf74:	5b000082 	blpl	d184 <_Min_Heap_Size+0xc984>
    cf78:	0f000082 	svceq	0x00000082
    cf7c:	00000000 	andeq	r0, r0, r0
    cf80:	0000080a 	andeq	r0, r0, sl, lsl #16
    cf84:	33011000 	movwcc	r1, #4096	; 0x1000
    cf88:	01000027 	tsteq	r0, r7, lsr #32
    cf8c:	79010594 	stmdbvc	r1, {r2, r4, r7, r8, sl}
	...
    cf98:	02000000 	andeq	r0, r0, #0
    cf9c:	5801007d 	stmdapl	r1, {r0, r2, r3, r4, r5, r6}
    cfa0:	0d000004 	stceq	0, cr0, [r0, #-16]
    cfa4:	00000a1c 	andeq	r0, r0, ip, lsl sl
    cfa8:	06119401 	ldreq	r9, [r1], -r1, lsl #8
    cfac:	84000001 	strhi	r0, [r0], #-1
    cfb0:	80000082 	andhi	r0, r0, r2, lsl #1
    cfb4:	11000082 	smlabbne	r0, r2, r0, r0
    cfb8:	01007473 	tsteq	r0, r3, ror r4
    cfbc:	04582494 	ldrbeq	r2, [r8], #-1172	; 0xfffffb6c
    cfc0:	51010000 	mrspl	r0, (UNDEF: 1)
    cfc4:	c3040500 	movwgt	r0, #17664	; 0x4500
    cfc8:	10000001 	andne	r0, r0, r1
    cfcc:	0027d901 	eoreq	sp, r7, r1, lsl #18
    cfd0:	058e0100 	streq	r0, [lr, #256]	; 0x100
    cfd4:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    cfe0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    cfe4:	00049101 	andeq	r9, r4, r1, lsl #2
    cfe8:	75620e00 	strbvc	r0, [r2, #-3584]!	; 0xfffff200
    cfec:	8e010066 	cdphi	0, 0, cr0, cr1, cr6, {3}
    cff0:	00049118 	andeq	r9, r4, r8, lsl r1
    cff4:	0082a900 	addeq	sl, r2, r0, lsl #18
    cff8:	0082a500 	addeq	sl, r2, r0, lsl #10
    cffc:	04050000 	streq	r0, [r5], #-0
    d000:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    d004:	28df010c 	ldmcs	pc, {r2, r3, r8}^	; <UNPREDICTABLE>
    d008:	87010000 	strhi	r0, [r1, -r0]
    d00c:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    d018:	82ca0000 	sbchi	r0, sl, #0
    d01c:	d4010000 	strle	r0, [r1], #-0
    d020:	0d000004 	stceq	0, cr0, [r0, #-16]
    d024:	000027ea 	andeq	r2, r0, sl, ror #15
    d028:	06138701 	ldreq	r8, [r3], -r1, lsl #14
    d02c:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
    d030:	ea000082 	b	d240 <_Min_Heap_Size+0xca40>
    d034:	0f000082 	svceq	0x00000082
    d038:	00000000 	andeq	r0, r0, r0
    d03c:	0000080a 	andeq	r0, r0, sl, lsl #16
    d040:	ef010c00 	svc	0x00010c00
    d044:	01000027 	tsteq	r0, r7, lsr #32
    d048:	79010580 	stmdbvc	r1, {r7, r8, sl}
	...
    d054:	0f000000 	svceq	0x00000000
    d058:	01000083 	smlabbeq	r0, r3, r0, r0
    d05c:	00000511 	andeq	r0, r0, r1, lsl r5
    d060:	0019990d 	andseq	r9, r9, sp, lsl #18
    d064:	10800100 	addne	r0, r0, r0, lsl #2
    d068:	00000511 	andeq	r0, r0, r1, lsl r5
    d06c:	00008333 	andeq	r8, r0, r3, lsr r3
    d070:	0000832f 	andeq	r8, r0, pc, lsr #6
    d074:	0000000f 	andeq	r0, r0, pc
    d078:	00080a00 	andeq	r0, r8, r0, lsl #20
    d07c:	04050000 	streq	r0, [r5], #-0
    d080:	00000079 	andeq	r0, r0, r9, ror r0
    d084:	2820010c 	stmdacs	r0!, {r2, r3, r8}
    d088:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    d08c:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    d098:	83540000 	cmphi	r4, #0
    d09c:	5b010000 	blpl	4d0a4 <_Min_Heap_Size+0x4c8a4>
    d0a0:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    d0a4:	000028b7 			; <UNDEFINED> instruction: 0x000028b7
    d0a8:	06117801 	ldreq	r7, [r1], -r1, lsl #16
    d0ac:	84000001 	strhi	r0, [r0], #-1
    d0b0:	80000083 	andhi	r0, r0, r3, lsl #1
    d0b4:	12000083 	andne	r0, r0, #131	; 0x83
    d0b8:	000012f8 	strdeq	r1, [r0], -r8
    d0bc:	791b7801 	ldmdbvc	fp, {r0, fp, ip, sp, lr}
    d0c0:	02000000 	andeq	r0, r0, #0
    d0c4:	00137491 	mulseq	r3, r1, r4
    d0c8:	27120110 			; <UNDEFINED> instruction: 0x27120110
    d0cc:	70010000 	andvc	r0, r1, r0
    d0d0:	00790105 	rsbseq	r0, r9, r5, lsl #2
    d0d4:	1af40000 	bne	ffd0d0dc <_estack+0xdfd0bea4>
    d0d8:	1af80800 	bne	ffe0f0e0 <_estack+0xdfe0dea8>
    d0dc:	7d020800 	stcvc	8, cr0, [r2, #-0]
    d0e0:	05aa0100 	streq	r0, [sl, #256]!	; 0x100
    d0e4:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    d0e8:	0100000a 	tsteq	r0, sl
    d0ec:	00791070 	rsbseq	r1, r9, r0, ror r0
    d0f0:	83a90000 			; <UNDEFINED> instruction: 0x83a90000
    d0f4:	83a50000 			; <UNDEFINED> instruction: 0x83a50000
    d0f8:	70110000 	andsvc	r0, r1, r0
    d0fc:	01007274 	tsteq	r0, r4, ror r2
    d100:	00791a70 	rsbseq	r1, r9, r0, ror sl
    d104:	51010000 	mrspl	r0, (UNDEF: 1)
    d108:	72696411 	rsbvc	r6, r9, #285212672	; 0x11000000
    d10c:	23700100 	cmncs	r0, #0, 2
    d110:	00000079 	andeq	r0, r0, r9, ror r0
    d114:	10005201 	andne	r5, r0, r1, lsl #4
    d118:	00285601 	eoreq	r5, r8, r1, lsl #12
    d11c:	056a0100 	strbeq	r0, [sl, #-256]!	; 0xffffff00
    d120:	00007901 	andeq	r7, r0, r1, lsl #18
    d124:	001af000 	andseq	pc, sl, r0
    d128:	001af408 	andseq	pc, sl, r8, lsl #8
    d12c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    d130:	0005dd01 	andeq	sp, r5, r1, lsl #26
    d134:	0a1c0d00 	beq	71053c <_Min_Heap_Size+0x70fd3c>
    d138:	6a010000 	bvs	4d140 <_Min_Heap_Size+0x4c940>
    d13c:	00007911 	andeq	r7, r0, r1, lsl r9
    d140:	0083ce00 	addeq	ip, r3, r0, lsl #28
    d144:	0083ca00 	addeq	ip, r3, r0, lsl #20
    d148:	01100000 	tsteq	r0, r0
    d14c:	0000275b 	andeq	r2, r0, fp, asr r7
    d150:	01056301 	tsteq	r5, r1, lsl #6
    d154:	00000079 	andeq	r0, r0, r9, ror r0
    d158:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
    d15c:	08001af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, ip}
    d160:	01007d02 	tsteq	r0, r2, lsl #26
    d164:	0000061d 	andeq	r0, r0, sp, lsl r6
    d168:	000a1c0d 	andeq	r1, sl, sp, lsl #24
    d16c:	10630100 	rsbne	r0, r3, r0, lsl #2
    d170:	00000079 	andeq	r0, r0, r9, ror r0
    d174:	000083f3 	strdeq	r8, [r0], -r3
    d178:	000083ef 	andeq	r8, r0, pc, ror #7
    d17c:	00747311 	rsbseq	r7, r4, r1, lsl r3
    d180:	58236301 	stmdapl	r3!, {r0, r8, r9, sp, lr}
    d184:	01000004 	tsteq	r0, r4
    d188:	01100051 	tsteq	r0, r1, asr r0
    d18c:	00002845 	andeq	r2, r0, r5, asr #16
    d190:	01055c01 	tsteq	r5, r1, lsl #24
    d194:	00000079 	andeq	r0, r0, r9, ror r0
    d198:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
    d19c:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
    d1a0:	01007d02 	tsteq	r0, r2, lsl #26
    d1a4:	00000650 	andeq	r0, r0, r0, asr r6
    d1a8:	000a1c0d 	andeq	r1, sl, sp, lsl #24
    d1ac:	105c0100 	subsne	r0, ip, r0, lsl #2
    d1b0:	00000079 	andeq	r0, r0, r9, ror r0
    d1b4:	00008418 	andeq	r8, r0, r8, lsl r4
    d1b8:	00008414 	andeq	r8, r0, r4, lsl r4
    d1bc:	4d010c00 	stcmi	12, cr0, [r1, #-0]
    d1c0:	01000027 	tsteq	r0, r7, lsr #32
    d1c4:	79011b50 	stmdbvc	r1, {r4, r6, r8, r9, fp, ip}
    d1c8:	c4000000 	strgt	r0, [r0], #-0
    d1cc:	e008001a 	and	r0, r8, sl, lsl r0
    d1d0:	3908001a 	stmdbcc	r8, {r1, r3, r4}
    d1d4:	01000084 	smlabbeq	r0, r4, r0, r0
    d1d8:	000006c9 	andeq	r0, r0, r9, asr #13
    d1dc:	000a1c0d 	andeq	r1, sl, sp, lsl #24
    d1e0:	26500100 	ldrbcs	r0, [r0], -r0, lsl #2
    d1e4:	00000079 	andeq	r0, r0, r9, ror r0
    d1e8:	0000845d 	andeq	r8, r0, sp, asr r4
    d1ec:	00008459 	andeq	r8, r0, r9, asr r4
    d1f0:	7274700e 	rsbsvc	r7, r4, #14
    d1f4:	32500100 	subscc	r0, r0, #0, 2
    d1f8:	00000106 	andeq	r0, r0, r6, lsl #2
    d1fc:	00008486 	andeq	r8, r0, r6, lsl #9
    d200:	0000847e 	andeq	r8, r0, lr, ror r4
    d204:	6e656c0e 	cdpvs	12, 6, cr6, cr5, cr14, {0}
    d208:	3b500100 	blcc	140d610 <_Min_Heap_Size+0x140ce10>
    d20c:	00000079 	andeq	r0, r0, r9, ror r0
    d210:	000084c0 	andeq	r8, r0, r0, asr #9
    d214:	000084bc 			; <UNDEFINED> instruction: 0x000084bc
    d218:	00289114 	eoreq	r9, r8, r4, lsl r1
    d21c:	07530100 	ldrbeq	r0, [r3, -r0, lsl #2]
    d220:	00000079 	andeq	r0, r0, r9, ror r0
    d224:	000084e2 	andeq	r8, r0, r2, ror #9
    d228:	000084de 	ldrdeq	r8, [r0], -lr
    d22c:	001ad60f 	andseq	sp, sl, pc, lsl #12
    d230:	00081808 	andeq	r1, r8, r8, lsl #16
    d234:	010c0000 	mrseq	r0, (UNDEF: 12)
    d238:	000027fc 	strdeq	r2, [r0], -ip
    d23c:	011b4301 	tsteq	fp, r1, lsl #6
    d240:	00000079 	andeq	r0, r0, r9, ror r0
    d244:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
    d248:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
    d24c:	00008501 	andeq	r8, r0, r1, lsl #10
    d250:	00074201 	andeq	r4, r7, r1, lsl #4
    d254:	0a1c0d00 	beq	71065c <_Min_Heap_Size+0x70fe5c>
    d258:	43010000 	movwmi	r0, #4096	; 0x1000
    d25c:	00007925 	andeq	r7, r0, r5, lsr #18
    d260:	00852500 	addeq	r2, r5, r0, lsl #10
    d264:	00852100 	addeq	r2, r5, r0, lsl #2
    d268:	74700e00 	ldrbtvc	r0, [r0], #-3584	; 0xfffff200
    d26c:	43010072 	movwmi	r0, #4210	; 0x1072
    d270:	00010631 	andeq	r0, r1, r1, lsr r6
    d274:	00854e00 	addeq	r4, r5, r0, lsl #28
    d278:	00854600 	addeq	r4, r5, r0, lsl #12
    d27c:	656c0e00 	strbvs	r0, [ip, #-3584]!	; 0xfffff200
    d280:	4301006e 	movwmi	r0, #4206	; 0x106e
    d284:	0000793a 	andeq	r7, r0, sl, lsr r9
    d288:	00858800 	addeq	r8, r5, r0, lsl #16
    d28c:	00858400 	addeq	r8, r5, r0, lsl #8
    d290:	28911400 	ldmcs	r1, {sl, ip}
    d294:	46010000 	strmi	r0, [r1], -r0
    d298:	00007907 	andeq	r7, r0, r7, lsl #18
    d29c:	0085aa00 	addeq	sl, r5, r0, lsl #20
    d2a0:	0085a600 	addeq	sl, r5, r0, lsl #12
    d2a4:	1ab20f00 	bne	fec90eac <_estack+0xdec8fc74>
    d2a8:	08260800 	stmdaeq	r6!, {fp}
    d2ac:	15000000 	strne	r0, [r0, #-0]
    d2b0:	00274701 	eoreq	r4, r7, r1, lsl #14
    d2b4:	063d0100 	ldrteq	r0, [sp], -r0, lsl #2
    d2b8:	00000101 	andeq	r0, r0, r1, lsl #2
    d2bc:	00000000 	andeq	r0, r0, r0
    d2c0:	85c90000 	strbhi	r0, [r9]
    d2c4:	8a010000 	bhi	4d2cc <_Min_Heap_Size+0x4cacc>
    d2c8:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    d2cc:	00001999 	muleq	r0, r9, r9
    d2d0:	79113d01 	ldmdbvc	r1, {r0, r8, sl, fp, ip, sp}
    d2d4:	ed000000 	stc	0, cr0, [r0, #-0]
    d2d8:	e9000085 	stmdb	r0, {r0, r2, r7}
    d2dc:	16000085 	strne	r0, [r0], -r5, lsl #1
    d2e0:	00000000 	andeq	r0, r0, r0
    d2e4:	0000078a 	andeq	r0, r0, sl, lsl #15
    d2e8:	03500117 	cmpeq	r0, #-1073741819	; 0xc0000005
    d2ec:	175001f3 	smmlsrne	r0, r3, r1, r0
    d2f0:	09025101 	stmdbeq	r2, {r0, r8, ip, lr}
    d2f4:	0c0000ff 	stceq	0, cr0, [r0], {255}	; 0xff
    d2f8:	00276201 	eoreq	r6, r7, r1, lsl #4
    d2fc:	05350100 	ldreq	r0, [r5, #-256]!	; 0xffffff00
    d300:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    d30c:	00860e00 	addeq	r0, r6, r0, lsl #28
    d310:	07db0100 	ldrbeq	r0, [fp, r0, lsl #2]
    d314:	700e0000 	andvc	r0, lr, r0
    d318:	01006469 	tsteq	r0, r9, ror #8
    d31c:	00790f35 	rsbseq	r0, r9, r5, lsr pc
    d320:	86320000 	ldrthi	r0, [r2], -r0
    d324:	862e0000 	strthi	r0, [lr], -r0
    d328:	730e0000 	movwvc	r0, #57344	; 0xe000
    d32c:	01006769 	tsteq	r0, r9, ror #14
    d330:	00791835 	rsbseq	r1, r9, r5, lsr r8
    d334:	86570000 	ldrbhi	r0, [r7], -r0
    d338:	86530000 	ldrbhi	r0, [r3], -r0
    d33c:	000f0000 	andeq	r0, pc, r0
    d340:	0a000000 	beq	d348 <_Min_Heap_Size+0xcb48>
    d344:	00000008 	andeq	r0, r0, r8
    d348:	289f0118 	ldmcs	pc, {r3, r4, r8}	; <UNPREDICTABLE>
    d34c:	30010000 	andcc	r0, r1, r0
    d350:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    d35c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    d360:	01190100 	tsteq	r9, r0, lsl #2
    d364:	0000278a 	andeq	r2, r0, sl, lsl #15
    d368:	00062c01 	andeq	r2, r6, r1, lsl #24
    d36c:	00000000 	andeq	r0, r0, r0
    d370:	02000000 	andeq	r0, r0, #0
    d374:	1a01007d 	bne	4d570 <_Min_Heap_Size+0x4cd70>
    d378:	26e00101 	strbtcs	r0, [r0], r1, lsl #2
    d37c:	26e00000 	strbtcs	r0, [r0], r0
    d380:	0f090000 	svceq	0x00090000
    d384:	01011a0d 	tsteq	r1, sp, lsl #20
    d388:	00000453 	andeq	r0, r0, r3, asr r4
    d38c:	00000453 	andeq	r0, r0, r3, asr r4
    d390:	1a0c2301 	bne	315f9c <_Min_Heap_Size+0x31579c>
    d394:	28020101 	stmdacs	r2, {r0, r8}
    d398:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    d39c:	24010000 	strcs	r0, [r1], #-0
    d3a0:	001e000c 	andseq	r0, lr, ip
    d3a4:	00020000 	andeq	r0, r2, r0
    d3a8:	00001fe5 	andeq	r1, r0, r5, ror #31
    d3ac:	97070104 	strls	r0, [r7, -r4, lsl #2]
    d3b0:	07980000 	ldreq	r0, [r8, r0]
    d3b4:	28fa0000 	ldmcs	sl!, {}^	; <UNPREDICTABLE>
    d3b8:	08950000 	ldmeq	r5, {}	; <UNPREDICTABLE>
    d3bc:	291e0000 	ldmdbcs	lr, {}	; <UNPREDICTABLE>
    d3c0:	80010000 	andhi	r0, r1, r0
    d3c4:	00000022 	andeq	r0, r0, r2, lsr #32
    d3c8:	1ff70002 	svcne	0x00f70002
    d3cc:	01040000 	mrseq	r0, (UNDEF: 4)
    d3d0:	0000978b 	andeq	r9, r0, fp, lsl #15
    d3d4:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
    d3d8:	08000218 	stmdaeq	r0, {r3, r4, r9}
    d3dc:	0000292c 	andeq	r2, r0, ip, lsr #18
    d3e0:	00000895 	muleq	r0, r5, r8
    d3e4:	0000291e 	andeq	r2, r0, lr, lsl r9
    d3e8:	Address 0x0000d3e8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
  errno = ENOMEM;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Heap_Size+0xf8244c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Heap_Size+0x2ce064>
}
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	0b0b0024 	bleq	2c00c8 <_Min_Heap_Size+0x2bf8c8>
    if (status != HAL_OK)
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      uwTickFreq = prevTickFreq;
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
      44:	00001349 	andeq	r1, r0, r9, asr #6
      if (pllsource != 0)
      48:	0b011307 	bleq	44c6c <_Min_Heap_Size+0x4446c>
      4c:	3b0b3a0b 	blcc	2ce880 <_Min_Heap_Size+0x2ce080>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	010b3905 	tsteq	fp, r5, lsl #18
      54:	08000013 	stmdaeq	r0, {r0, r1, r4}
      58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	13490b39 	movtne	r0, #39737	; 0x9b39
      64:	00000a38 	andeq	r0, r0, r8, lsr sl
      68:	03000d09 	movweq	r0, #3337	; 0xd09
      SystemCoreClock = pllvco/pllp;
      6c:	3b0b3a08 	blcc	2ce894 <_Min_Heap_Size+0x2ce094>
      70:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      break;
      74:	000a3813 	andeq	r3, sl, r3, lsl r8
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	01010a00 	tsteq	r1, r0, lsl #20
      7c:	13011349 	movwne	r1, #4937	; 0x1349
      80:	210b0000 	mrscs	r0, (UNDEF: 11)
      84:	2f134900 	svccs	0x00134900
      88:	0c00000b 	stceq	0, cr0, [r0], {11}
      8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      90:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      94:	13490b39 	movtne	r0, #39737	; 0x9b39
      98:	040d0000 	streq	r0, [sp], #-0
      9c:	0b0b3e01 	bleq	2cf8a8 <_Min_Heap_Size+0x2cf0a8>
      a0:	3a13490b 	bcc	4d24d4 <_Min_Heap_Size+0x4d1cd4>
      a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00280e00 	eoreq	r0, r8, r0, lsl #28
      b0:	0b1c0e03 	bleq	7038c4 <_Min_Heap_Size+0x7030c4>
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	130f0000 	movwne	r0, #61440	; 0xf000
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	3a0b0b01 	bcc	2c2cc4 <_Min_Heap_Size+0x2c24c4>
      bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0013010b 	andseq	r0, r3, fp, lsl #2
      c4:	000d1000 	andeq	r1, sp, r0
      c8:	0b3a0e03 	bleq	e838dc <_Min_Heap_Size+0xe830dc>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0b390b3b 	bleq	e42dc0 <_Min_Heap_Size+0xe425c0>
      d0:	0a381349 	beq	e04dfc <_Min_Heap_Size+0xe045fc>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	0d110000 	ldceq	0, cr0, [r1, #-0]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	3a080300 	bcc	200ce0 <_Min_Heap_Size+0x2004e0>
      dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    if (huart->hdmarx != NULL)
      e4:	1200000a 	andne	r0, r0, #10
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0b3a0b0b 	bleq	e82d20 <_Min_Heap_Size+0xe82520>
      f0:	0b390b3b 	bleq	e42de4 <_Min_Heap_Size+0xe425e4>
    huart->TxXferCount = 0x00U;
      f4:	00001301 	andeq	r1, r0, r1, lsl #6
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	0b000f13 	bleq	3d4c <_Min_Heap_Size+0x354c>
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0013490b 	andseq	r4, r3, fp, lsl #18
    huart->RxState = HAL_UART_STATE_READY;
     100:	000f1400 	andeq	r1, pc, r0, lsl #8
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000b0b 	andeq	r0, r0, fp, lsl #22
    HAL_UART_AbortCpltCallback(huart);
     108:	27011515 	smladcs	r1, r5, r5, r1
     10c:	0013010c 	andseq	r0, r3, ip, lsl #2
  uint32_t AbortCplt = 0x01U;
     110:	00051600 	andeq	r1, r5, r0, lsl #12
  if (AbortCplt == 0x01U)
     114:	00001349 	andeq	r1, r0, r9, asr #6
}
     118:	03003417 	movweq	r3, #1047	; 0x417
     11c:	3b0b3a0e 	blcc	2ce95c <_Min_Heap_Size+0x2ce15c>
     120:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     124:	3c0c3f13 	stccc	15, cr3, [ip], {19}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	1800000c 	stmdane	r0, {r2, r3}
     12c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7c <_Min_Heap_Size-0x784>
     130:	0b3a0e03 	bleq	e83944 <_Min_Heap_Size+0xe83144>
     134:	0b390b3b 	bleq	e42e28 <_Min_Heap_Size+0xe42628>
     138:	01110c27 	tsteq	r1, r7, lsr #24
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     140:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     144:	19000013 	stmdbne	r0, {r0, r1, r4}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     14c:	0b3b0b3a 	bleq	ec2e3c <_Min_Heap_Size+0xec263c>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	13490b39 	movtne	r0, #39737	; 0x9b39
     154:	00000a02 	andeq	r0, r0, r2, lsl #20
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	11010b1a 	tstne	r1, sl, lsl fp
     15c:	01011201 	tsteq	r1, r1, lsl #4
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	1b000013 	blne	1b4 <_Min_Heap_Size-0x64c>
     164:	01018289 	smlabbeq	r1, r9, r2, r8
     168:	13310111 	teqne	r1, #1073741828	; 0x40000004
     16c:	00001301 	andeq	r1, r0, r1, lsl #6
     170:	01828a1c 	orreq	r8, r2, ip, lsl sl
}
     174:	910a0200 	mrsls	r0, R10_fiq
     178:	00000a42 	andeq	r0, r0, r2, asr #20
     17c:	0182891d 	orreq	r8, r2, sp, lsl r9
     180:	31011100 	mrscc	r1, (UNDEF: 17)
}
     184:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d8 <_Min_Heap_Size-0x728>
     18c:	0b3a0e03 	bleq	e839a0 <_Min_Heap_Size+0xe831a0>
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	0b390b3b 	bleq	e42e84 <_Min_Heap_Size+0xe42684>
     194:	13490c27 	movtne	r0, #39975	; 0x9c27
     198:	01120111 	tsteq	r2, r1, lsl r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     1a0:	0013010c 	andseq	r0, r3, ip, lsl #2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	82891f00 	addhi	r1, r9, #0, 30
     1a8:	01110101 	tsteq	r1, r1, lsl #2
     1ac:	00001331 	andeq	r1, r0, r1, lsr r3
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	03003420 	movweq	r3, #1056	; 0x420
     1b4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000a020c 	andeq	r0, sl, ip, lsl #4
     1bc:	00342100 	eorseq	r2, r4, r0, lsl #2
     1c0:	0b3a0e03 	bleq	e839d4 <_Min_Heap_Size+0xe831d4>
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	0b390b3b 	bleq	e42eb8 <_Min_Heap_Size+0xe426b8>
     1c8:	06021349 	streq	r1, [r2], -r9, asr #6
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1d0:	00342200 	eorseq	r2, r4, r0, lsl #4
     1d4:	0b3a0803 	bleq	e821e8 <_Min_Heap_Size+0xe819e8>
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	0b390b3b 	bleq	e42ecc <_Min_Heap_Size+0xe426cc>
     1dc:	0b1c1349 	bleq	704f08 <_Min_Heap_Size+0x704708>
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	05230000 	streq	r0, [r3, #-0]!
     1e4:	3a080300 	bcc	200dec <_Min_Heap_Size+0x2005ec>
     1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     1f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     1f8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1fc:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0b3a0e03 	bleq	e83a14 <_Min_Heap_Size+0xe83214>
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00000b3b 	andeq	r0, r0, fp, lsr fp
     208:	3f002e25 	svccc	0x00002e25
     20c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     214:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000b39 	andeq	r0, r0, r9, lsr fp
     21c:	3f002e26 	svccc	0x00002e26
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     228:	0b3b0b3a 	bleq	ec2f18 <_Min_Heap_Size+0xec2718>
  tmp = hdma->Instance->FCR;
     22c:	00000b39 	andeq	r0, r0, r9, lsr fp
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	01110100 	tsteq	r1, r0, lsl #2
  tmp |= hdma->Init.FIFOMode;
     234:	0b130e25 	bleq	4c3ad0 <_Min_Heap_Size+0x4c32d0>
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    tmp |= hdma->Init.FIFOThreshold;
     23c:	01110655 	tsteq	r1, r5, asr r6
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	06100152 			; <UNDEFINED> instruction: 0x06100152
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	24020000 	strcs	r0, [r2], #-0
     248:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  hdma->Instance->FCR = tmp;
     24c:	000e030b 	andeq	r0, lr, fp, lsl #6
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00160300 	andseq	r0, r6, r0, lsl #6
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	0b3a0e03 	bleq	e83a68 <_Min_Heap_Size+0xe83268>
     258:	0b390b3b 	bleq	e42f4c <_Min_Heap_Size+0xe4274c>
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00001349 	andeq	r1, r0, r9, asr #6
  hdma->State = HAL_DMA_STATE_READY;
     260:	0b002404 	bleq	9278 <_Min_Heap_Size+0x8a78>
     264:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  return HAL_OK;
     268:	05000008 	streq	r0, [r0, #-8]
     26c:	13490026 	movtne	r0, #36902	; 0x9026
     270:	35060000 	strcc	r0, [r6, #-0]
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00134900 	andseq	r4, r3, r0, lsl #18
     278:	01130700 	tsteq	r3, r0, lsl #14
     27c:	0b3a0b0b 	bleq	e82eb0 <_Min_Heap_Size+0xe826b0>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0b39053b 	bleq	e41774 <_Min_Heap_Size+0xe40f74>
        hdma->State = HAL_DMA_STATE_READY;
     284:	00001301 	andeq	r1, r0, r1, lsl #6
        return HAL_ERROR; 
     288:	03000d08 	movweq	r0, #3336	; 0xd08
    return HAL_ERROR;
     28c:	3b0b3a08 	blcc	2ceab4 <_Min_Heap_Size+0x2ce2b4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	000a3813 	andeq	r3, sl, r3, lsl r8
     298:	000d0900 	andeq	r0, sp, r0, lsl #18
      tickstart = HAL_GetTick();
     29c:	0b3a0e03 	bleq	e83ab0 <_Min_Heap_Size+0xe832b0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	0b39053b 	bleq	e41794 <_Min_Heap_Size+0xe40f94>
     2a4:	0a381349 	beq	e04fd0 <_Min_Heap_Size+0xe047d0>
     2a8:	160a0000 	strne	r0, [sl], -r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	3a0e0300 	bcc	380eb4 <_Min_Heap_Size+0x3806b4>
     2b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2b4:	0013490b 	andseq	r4, r3, fp, lsl #18
          return HAL_TIMEOUT;
     2b8:	01040b00 	tsteq	r4, r0, lsl #22
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	0b0b0b3e 	bleq	2c2fbc <_Min_Heap_Size+0x2c27bc>
     2c0:	0b3a1349 	bleq	e84fec <_Min_Heap_Size+0xe847ec>
     2c4:	0b390b3b 	bleq	e42fb8 <_Min_Heap_Size+0xe427b8>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00001301 	andeq	r1, r0, r1, lsl #6
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	0300280c 	movweq	r2, #2060	; 0x80c
     2d0:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     2d4:	01130d00 	tsteq	r3, r0, lsl #26
      tickstart = HAL_GetTick();
     2d8:	0b3a0b0b 	bleq	e82f0c <_Min_Heap_Size+0xe8270c>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0b390b3b 	bleq	e42fd0 <_Min_Heap_Size+0xe427d0>
     2e0:	00001301 	andeq	r1, r0, r1, lsl #6
     2e4:	03000d0e 	movweq	r0, #3342	; 0xd0e
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	3b0b3a0e 	blcc	2ceb28 <_Min_Heap_Size+0x2ce328>
     2ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
          return HAL_TIMEOUT;
     2f0:	000a3813 	andeq	r3, sl, r3, lsl r8
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	01130f00 	tsteq	r3, r0, lsl #30
     2f8:	0b0b0e03 	bleq	2c3b0c <_Min_Heap_Size+0x2c330c>
     2fc:	0b3b0b3a 	bleq	ec2fec <_Min_Heap_Size+0xec27ec>
     300:	13010b39 	movwne	r0, #6969	; 0x1b39
     304:	0f100000 	svceq	0x00100000
     308:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     30c:	11000013 	tstne	r0, r3, lsl r0
     310:	0b0b000f 	bleq	2c0354 <_Min_Heap_Size+0x2bfb54>
      tickstart = HAL_GetTick();
     314:	15120000 	ldrne	r0, [r2, #-0]
     318:	010c2701 	tsteq	ip, r1, lsl #14
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	13000013 	movwne	r0, #19
     320:	13490005 	movtne	r0, #36869	; 0x9005
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	34140000 	ldrcc	r0, [r4], #-0
     328:	3a0e0300 	bcc	380f30 <_Min_Heap_Size+0x380730>
     32c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     330:	3f13490b 	svccc	0x0013490b
          return HAL_TIMEOUT;
     334:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    if(pwrclkchanged == SET)
     338:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	0b3b0b3a 	bleq	ec3030 <_Min_Heap_Size+0xec2830>
     344:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	01120111 	tsteq	r2, r1, lsl r1
     34c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     350:	0013010c 	andseq	r0, r3, ip, lsl #2
     354:	00051600 	andeq	r1, r5, r0, lsl #12
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	0b3a0e03 	bleq	e83b6c <_Min_Heap_Size+0xe8336c>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0b390b3b 	bleq	e43050 <_Min_Heap_Size+0xe42850>
     360:	06021349 	streq	r1, [r2], -r9, asr #6
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     368:	00341700 	eorseq	r1, r4, r0, lsl #14
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	13490e03 	movtne	r0, #40451	; 0x9e03
     370:	0a020c34 	beq	83448 <_Min_Heap_Size+0x82c48>
     374:	1d180000 	ldcne	0, cr0, [r8, #-0]
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	52133100 	andspl	r3, r3, #0, 2
     37c:	0b42b801 	bleq	10ae388 <_Min_Heap_Size+0x10adb88>
     380:	01120111 	tsteq	r2, r1, lsl r1
     384:	0b590b58 	bleq	16430ec <_Min_Heap_Size+0x16428ec>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000b57 	andeq	r0, r0, r7, asr fp
     38c:	01828919 	orreq	r8, r2, r9, lsl r9
        __HAL_RCC_PLL_DISABLE();
     390:	31011101 	tstcc	r1, r1, lsl #2
     394:	1a000013 	bne	3e8 <_Min_Heap_Size-0x418>
        tickstart = HAL_GetTick();
     398:	0001828a 	andeq	r8, r1, sl, lsl #5
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     3a0:	1b00000a 	blne	3d0 <_Min_Heap_Size-0x430>
     3a4:	13490101 	movtne	r0, #37121	; 0x9101
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	00001301 	andeq	r1, r0, r1, lsl #6
     3ac:	4900211c 	stmdbmi	r0, {r2, r3, r4, r8, sp}
            return HAL_TIMEOUT;
     3b0:	000b2f13 	andeq	r2, fp, r3, lsl pc
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	82891d00 	addhi	r1, r9, #0, 26
     3b8:	01110001 	tsteq	r1, r1
     3bc:	00001331 	andeq	r1, r0, r1, lsr r3
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	3f002e1e 	svccc	0x00002e1e
     3c4:	3a0e030c 	bcc	380ffc <_Min_Heap_Size+0x3807fc>
     3c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	110c270b 	tstne	ip, fp, lsl #14
     3d0:	40011201 	andmi	r1, r1, r1, lsl #4
     3d4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     3dc:	3a0e0300 	bcc	380fe4 <_Min_Heap_Size+0x3807e4>
     3e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	200c270b 	andcs	r2, ip, fp, lsl #14
     3e8:	2000000b 	andcs	r0, r0, fp
     3ec:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 33c <_Min_Heap_Size-0x4c4>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	40870c3c 	addmi	r0, r7, ip, lsr ip
     3f4:	3a0e030e 	bcc	381034 <_Min_Heap_Size+0x380834>
     3f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	2100000b 	tstcs	r0, fp
     400:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 350 <_Min_Heap_Size-0x4b0>
     404:	40870c3c 	addmi	r0, r7, ip, lsr ip
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	3a0e030e 	bcc	381048 <_Min_Heap_Size+0x380848>
     40c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     410:	0000000b 	andeq	r0, r0, fp
     414:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     418:	030b130e 	movweq	r1, #45838	; 0xb30e
     41c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     420:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     424:	00061001 	andeq	r1, r6, r1
        __HAL_RCC_PLL_ENABLE();
     428:	00240200 	eoreq	r0, r4, r0, lsl #4
     42c:	0b3e0b0b 	bleq	f83060 <_Min_Heap_Size+0xf82860>
        tickstart = HAL_GetTick();
     430:	00000e03 	andeq	r0, r0, r3, lsl #28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	03001603 	movweq	r1, #1539	; 0x603
     438:	3b0b3a0e 	blcc	2cec78 <_Min_Heap_Size+0x2ce478>
     43c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     444:	0b0b0024 	bleq	2c04dc <_Min_Heap_Size+0x2bfcdc>
            return HAL_TIMEOUT;
     448:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  return HAL_OK;
     44c:	35050000 	strcc	r0, [r5, #-0]
        __HAL_RCC_PLL_DISABLE();
     450:	00134900 	andseq	r4, r3, r0, lsl #18
     454:	01010600 	tsteq	r1, r0, lsl #12
        tickstart = HAL_GetTick();
     458:	13011349 	movwne	r1, #4937	; 0x1349
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	21070000 	mrscs	r0, (UNDEF: 7)
     460:	2f134900 	svccs	0x00134900
     464:	0800000b 	stmdaeq	r0, {r0, r1, r3}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0b0b0113 	bleq	2c08bc <_Min_Heap_Size+0x2c00bc>
     46c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
            return HAL_TIMEOUT;
     470:	13010b39 	movwne	r0, #6969	; 0x1b39
  return HAL_OK;
     474:	0d090000 	stceq	0, cr0, [r9, #-0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	3a080300 	bcc	201080 <_Min_Heap_Size+0x200880>
        pll_config = RCC->PLLCFGR;
     47c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     484:	0a00000a 	beq	4b4 <_Min_Heap_Size-0x34c>
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	13490b39 	movtne	r0, #39737	; 0x9b39
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00000a38 	andeq	r0, r0, r8, lsr sl
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0300160b 	movweq	r1, #1547	; 0x60b
     49c:	3b0b3a0e 	blcc	2cecdc <_Min_Heap_Size+0x2ce4dc>
     4a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	0c000013 	stceq	0, cr0, [r0], {19}
     4a8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3f8 <_Min_Heap_Size-0x408>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0b3a0e03 	bleq	e83cc0 <_Min_Heap_Size+0xe834c0>
     4b0:	0b390b3b 	bleq	e431a4 <_Min_Heap_Size+0xe429a4>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	01110c27 	tsteq	r1, r7, lsr #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     4bc:	000c4297 	muleq	ip, r7, r2
  return HAL_OK;
     4c0:	010b0d00 	tsteq	fp, r0, lsl #26
}
     4c4:	01120111 	tsteq	r2, r1, lsl r1
        return HAL_ERROR;
     4c8:	00001301 	andeq	r1, r0, r1, lsl #6
        return HAL_ERROR;
     4cc:	0300340e 	movweq	r3, #1038	; 0x40e
}
     4d0:	3b0b3a0e 	blcc	2ced10 <_Min_Heap_Size+0x2ce510>
        return HAL_ERROR;
     4d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
          return HAL_ERROR;
     4d8:	000a0213 	andeq	r0, sl, r3, lsl r2
     4dc:	010b0f00 	tsteq	fp, r0, lsl #30
     4e0:	01120111 	tsteq	r2, r1, lsl r1
     4e4:	01000000 	mrseq	r0, (UNDEF: 0)
     4e8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     4ec:	0e030b13 	vmoveq.32	d3[0], r0
     4f0:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     4f4:	01520111 	cmpeq	r2, r1, lsl r1
     4f8:	00000610 	andeq	r0, r0, r0, lsl r6
     4fc:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
     500:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     504:	3b0b3a13 	blcc	2ced58 <_Min_Heap_Size+0x2ce558>
     508:	010b390b 	tsteq	fp, fp, lsl #18
     50c:	03000013 	movweq	r0, #19
     510:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     514:	00000d1c 	andeq	r0, r0, ip, lsl sp
     518:	03002804 	movweq	r2, #2052	; 0x804
     51c:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     520:	00240500 	eoreq	r0, r4, r0, lsl #10
     524:	0b3e0b0b 	bleq	f83158 <_Min_Heap_Size+0xf82958>
     528:	00000e03 	andeq	r0, r0, r3, lsl #28
     52c:	03001606 	movweq	r1, #1542	; 0x606
     530:	3b0b3a0e 	blcc	2ced70 <_Min_Heap_Size+0x2ce570>
     534:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     538:	07000013 	smladeq	r0, r3, r0, r0
     53c:	0b0b0024 	bleq	2c05d4 <_Min_Heap_Size+0x2bfdd4>
     540:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     544:	26080000 	strcs	r0, [r8], -r0
     548:	00134900 	andseq	r4, r3, r0, lsl #18
     54c:	00350900 	eorseq	r0, r5, r0, lsl #18
     550:	00001349 	andeq	r1, r0, r9, asr #6
     554:	4901010a 	stmdbmi	r1, {r1, r3, r8}
     558:	00130113 	andseq	r0, r3, r3, lsl r1
     55c:	00210b00 	eoreq	r0, r1, r0, lsl #22
     560:	0b2f1349 	bleq	bc528c <_Min_Heap_Size+0xbc4a8c>
     564:	130c0000 	movwne	r0, #49152	; 0xc000
     568:	3a0b0b01 	bcc	2c3174 <_Min_Heap_Size+0x2c2974>
     56c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     570:	0013010b 	andseq	r0, r3, fp, lsl #2
     574:	000d0d00 	andeq	r0, sp, r0, lsl #26
     578:	0b3a0803 	bleq	e8258c <_Min_Heap_Size+0xe81d8c>
     57c:	0b39053b 	bleq	e41a70 <_Min_Heap_Size+0xe41270>
     580:	0a381349 	beq	e052ac <_Min_Heap_Size+0xe04aac>
     584:	0d0e0000 	stceq	0, cr0, [lr, #-0]
     588:	3a0e0300 	bcc	381190 <_Min_Heap_Size+0x380990>
     58c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     590:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     594:	0f00000a 	svceq	0x0000000a
     598:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     59c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     5a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     5a4:	13100000 	tstne	r0, #0
     5a8:	3a0b0b01 	bcc	2c31b4 <_Min_Heap_Size+0x2c29b4>
     5ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5b0:	0013010b 	andseq	r0, r3, fp, lsl #2
     5b4:	000d1100 	andeq	r1, sp, r0, lsl #2
     5b8:	0b3a0803 	bleq	e825cc <_Min_Heap_Size+0xe81dcc>
     5bc:	0b390b3b 	bleq	e432b0 <_Min_Heap_Size+0xe42ab0>
     5c0:	0a381349 	beq	e052ec <_Min_Heap_Size+0xe04aec>
     5c4:	0d120000 	ldceq	0, cr0, [r2, #-0]
     5c8:	3a0e0300 	bcc	3811d0 <_Min_Heap_Size+0x3809d0>
     5cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5d0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     5d4:	1300000a 	movwne	r0, #10
     5d8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     5dc:	0b3a0b0b 	bleq	e83210 <_Min_Heap_Size+0xe82a10>
     5e0:	0b390b3b 	bleq	e432d4 <_Min_Heap_Size+0xe42ad4>
     5e4:	00001301 	andeq	r1, r0, r1, lsl #6
     5e8:	0b000f14 	bleq	4240 <_Min_Heap_Size+0x3a40>
     5ec:	0013490b 	andseq	r4, r3, fp, lsl #18
     5f0:	000f1500 	andeq	r1, pc, r0, lsl #10
     5f4:	00000b0b 	andeq	r0, r0, fp, lsl #22
     5f8:	27011516 	smladcs	r1, r6, r5, r1
     5fc:	0013010c 	andseq	r0, r3, ip, lsl #2
     600:	00051700 	andeq	r1, r5, r0, lsl #14
     604:	00001349 	andeq	r1, r0, r9, asr #6
     608:	03003418 	movweq	r3, #1048	; 0x418
     60c:	3b0b3a0e 	blcc	2cee4c <_Min_Heap_Size+0x2ce64c>
     610:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     614:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     618:	1900000c 	stmdbne	r0, {r2, r3}
     61c:	13470034 	movtne	r0, #28724	; 0x7034
     620:	0b3b0b3a 	bleq	ec3310 <_Min_Heap_Size+0xec2b10>
     624:	0a020b39 	beq	83310 <_Min_Heap_Size+0x82b10>
     628:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     62c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     630:	3b0b3a0e 	blcc	2cee70 <_Min_Heap_Size+0x2ce670>
     634:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     638:	1201110c 	andne	r1, r1, #12, 2
     63c:	97064001 	strls	r4, [r6, -r1]
     640:	13010c42 	movwne	r0, #7234	; 0x1c42
     644:	051b0000 	ldreq	r0, [fp, #-0]
     648:	3a0e0300 	bcc	381250 <_Min_Heap_Size+0x380a50>
     64c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     650:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     654:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     658:	891c0000 	ldmdbhi	ip, {}	; <UNPREDICTABLE>
     65c:	11010182 	smlabbne	r1, r2, r1, r0
     660:	01133101 	tsteq	r3, r1, lsl #2
     664:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     668:	0001828a 	andeq	r8, r1, sl, lsl #5
     66c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     670:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
     674:	01018289 	smlabbeq	r1, r9, r2, r8
     678:	13310111 	teqne	r1, #1073741828	; 0x40000004
     67c:	341f0000 	ldrcc	r0, [pc], #-0	; 684 <_Min_Heap_Size-0x17c>
     680:	3a0e0300 	bcc	381288 <_Min_Heap_Size+0x380a88>
     684:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     688:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     68c:	2000000a 	andcs	r0, r0, sl
     690:	0111010b 	tsteq	r1, fp, lsl #2
     694:	13010112 	movwne	r0, #4370	; 0x1112
     698:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     69c:	11000182 	smlabbne	r0, r2, r1, r0
     6a0:	00133101 	andseq	r3, r3, r1, lsl #2
     6a4:	002e2200 	eoreq	r2, lr, r0, lsl #4
     6a8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6ac:	030e4087 	movweq	r4, #57479	; 0xe087
     6b0:	3b0b3a0e 	blcc	2ceef0 <_Min_Heap_Size+0x2ce6f0>
     6b4:	000b390b 	andeq	r3, fp, fp, lsl #18
     6b8:	002e2300 	eoreq	r2, lr, r0, lsl #6
     6bc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6c0:	030e4087 	movweq	r4, #57479	; 0xe087
     6c4:	3b0b3a0e 	blcc	2cef04 <_Min_Heap_Size+0x2ce704>
     6c8:	000b3905 	andeq	r3, fp, r5, lsl #18
     6cc:	11010000 	mrsne	r0, (UNDEF: 1)
     6d0:	130e2501 	movwne	r2, #58625	; 0xe501
     6d4:	1b0e030b 	blne	381308 <_Min_Heap_Size+0x380b08>
     6d8:	1106550e 	tstne	r6, lr, lsl #10
     6dc:	10015201 	andne	r5, r1, r1, lsl #4
     6e0:	02000006 	andeq	r0, r0, #6
     6e4:	0b0b0024 	bleq	2c077c <_Min_Heap_Size+0x2bff7c>
     6e8:	0e030b3e 	vmoveq.16	d3[0], r0
     6ec:	16030000 	strne	r0, [r3], -r0
     6f0:	3a0e0300 	bcc	3812f8 <_Min_Heap_Size+0x380af8>
     6f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6f8:	0013490b 	andseq	r4, r3, fp, lsl #18
     6fc:	00240400 	eoreq	r0, r4, r0, lsl #8
     700:	0b3e0b0b 	bleq	f83334 <_Min_Heap_Size+0xf82b34>
     704:	00000803 	andeq	r0, r0, r3, lsl #16
     708:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     70c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     710:	13490101 	movtne	r0, #37121	; 0x9101
     714:	00001301 	andeq	r1, r0, r1, lsl #6
     718:	49002107 	stmdbmi	r0, {r0, r1, r2, r8, sp}
     71c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     720:	01130800 	tsteq	r3, r0, lsl #16
     724:	0b3a0b0b 	bleq	e83358 <_Min_Heap_Size+0xe82b58>
     728:	0b39053b 	bleq	e41c1c <_Min_Heap_Size+0xe4141c>
     72c:	00001301 	andeq	r1, r0, r1, lsl #6
     730:	03000d09 	movweq	r0, #3337	; 0xd09
     734:	3b0b3a08 	blcc	2cef5c <_Min_Heap_Size+0x2ce75c>
     738:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     73c:	000a3813 	andeq	r3, sl, r3, lsl r8
     740:	000d0a00 	andeq	r0, sp, r0, lsl #20
     744:	0b3a0e03 	bleq	e83f58 <_Min_Heap_Size+0xe83758>
     748:	0b39053b 	bleq	e41c3c <_Min_Heap_Size+0xe4143c>
     74c:	0a381349 	beq	e05478 <_Min_Heap_Size+0xe04c78>
     750:	160b0000 	strne	r0, [fp], -r0
     754:	3a0e0300 	bcc	38135c <_Min_Heap_Size+0x380b5c>
     758:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     75c:	0013490b 	andseq	r4, r3, fp, lsl #18
     760:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
     764:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     768:	0b3b0b3a 	bleq	ec3458 <_Min_Heap_Size+0xec2c58>
     76c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     770:	01120111 	tsteq	r2, r1, lsl r1
     774:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     778:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     77c:	0111010b 	tsteq	r1, fp, lsl #2
     780:	13010112 	movwne	r0, #4370	; 0x1112
     784:	340e0000 	strcc	r0, [lr], #-0
     788:	3a0e0300 	bcc	381390 <_Min_Heap_Size+0x380b90>
     78c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     790:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     794:	0f00000a 	svceq	0x0000000a
     798:	0111010b 	tsteq	r1, fp, lsl #2
     79c:	00000112 	andeq	r0, r0, r2, lsl r1
     7a0:	01110100 	tsteq	r1, r0, lsl #2
     7a4:	0b130e25 	bleq	4c4040 <_Min_Heap_Size+0x4c3840>
     7a8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     7ac:	01110655 	tsteq	r1, r5, asr r6
     7b0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     7b4:	24020000 	strcs	r0, [r2], #-0
     7b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7bc:	000e030b 	andeq	r0, lr, fp, lsl #6
     7c0:	00160300 	andseq	r0, r6, r0, lsl #6
     7c4:	0b3a0e03 	bleq	e83fd8 <_Min_Heap_Size+0xe837d8>
     7c8:	0b390b3b 	bleq	e434bc <_Min_Heap_Size+0xe42cbc>
     7cc:	00001349 	andeq	r1, r0, r9, asr #6
     7d0:	0b002404 	bleq	97e8 <_Min_Heap_Size+0x8fe8>
     7d4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     7d8:	05000008 	streq	r0, [r0, #-8]
     7dc:	13490026 	movtne	r0, #36902	; 0x9026
     7e0:	35060000 	strcc	r0, [r6, #-0]
     7e4:	00134900 	andseq	r4, r3, r0, lsl #18
     7e8:	01130700 	tsteq	r3, r0, lsl #14
     7ec:	0b3a0b0b 	bleq	e83420 <_Min_Heap_Size+0xe82c20>
     7f0:	0b39053b 	bleq	e41ce4 <_Min_Heap_Size+0xe414e4>
     7f4:	00001301 	andeq	r1, r0, r1, lsl #6
     7f8:	03000d08 	movweq	r0, #3336	; 0xd08
     7fc:	3b0b3a08 	blcc	2cf024 <_Min_Heap_Size+0x2ce824>
     800:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     804:	000a3813 	andeq	r3, sl, r3, lsl r8
     808:	000d0900 	andeq	r0, sp, r0, lsl #18
     80c:	0b3a0e03 	bleq	e84020 <_Min_Heap_Size+0xe83820>
     810:	0b39053b 	bleq	e41d04 <_Min_Heap_Size+0xe41504>
     814:	0a381349 	beq	e05540 <_Min_Heap_Size+0xe04d40>
     818:	160a0000 	strne	r0, [sl], -r0
     81c:	3a0e0300 	bcc	381424 <_Min_Heap_Size+0x380c24>
     820:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     824:	0013490b 	andseq	r4, r3, fp, lsl #18
     828:	01040b00 	tsteq	r4, r0, lsl #22
     82c:	0b0b0b3e 	bleq	2c352c <_Min_Heap_Size+0x2c2d2c>
     830:	0b3a1349 	bleq	e8555c <_Min_Heap_Size+0xe84d5c>
     834:	0b390b3b 	bleq	e43528 <_Min_Heap_Size+0xe42d28>
     838:	00001301 	andeq	r1, r0, r1, lsl #6
     83c:	0300280c 	movweq	r2, #2060	; 0x80c
     840:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     844:	00280d00 	eoreq	r0, r8, r0, lsl #26
     848:	0b1c0803 	bleq	70285c <_Min_Heap_Size+0x70205c>
     84c:	130e0000 	movwne	r0, #57344	; 0xe000
     850:	3a0b0b01 	bcc	2c345c <_Min_Heap_Size+0x2c2c5c>
     854:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     858:	0013010b 	andseq	r0, r3, fp, lsl #2
     85c:	000d0f00 	andeq	r0, sp, r0, lsl #30
     860:	0b3a0e03 	bleq	e84074 <_Min_Heap_Size+0xe83874>
     864:	0b390b3b 	bleq	e43558 <_Min_Heap_Size+0xe42d58>
     868:	0a381349 	beq	e05594 <_Min_Heap_Size+0xe04d94>
     86c:	13100000 	tstne	r0, #0
     870:	0b0e0301 	bleq	38147c <_Min_Heap_Size+0x380c7c>
     874:	3b0b3a0b 	blcc	2cf0a8 <_Min_Heap_Size+0x2ce8a8>
     878:	010b390b 	tsteq	fp, fp, lsl #18
     87c:	11000013 	tstne	r0, r3, lsl r0
     880:	0b0b000f 	bleq	2c08c4 <_Min_Heap_Size+0x2c00c4>
     884:	00001349 	andeq	r1, r0, r9, asr #6
     888:	0b000f12 	bleq	44d8 <_Min_Heap_Size+0x3cd8>
     88c:	1300000b 	movwne	r0, #11
     890:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     894:	00001301 	andeq	r1, r0, r1, lsl #6
     898:	49000514 	stmdbmi	r0, {r2, r4, r8, sl}
     89c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     8a0:	0e03012e 	adfeqsp	f0, f3, #0.5
     8a4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8a8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     8ac:	01120111 	tsteq	r2, r1, lsl r1
     8b0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     8b4:	0013010c 	andseq	r0, r3, ip, lsl #2
     8b8:	00051600 	andeq	r1, r5, r0, lsl #12
     8bc:	0b3a0e03 	bleq	e840d0 <_Min_Heap_Size+0xe838d0>
     8c0:	0b39053b 	bleq	e41db4 <_Min_Heap_Size+0xe415b4>
     8c4:	06021349 	streq	r1, [r2], -r9, asr #6
     8c8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     8cc:	00341700 	eorseq	r1, r4, r0, lsl #14
     8d0:	0b3a0e03 	bleq	e840e4 <_Min_Heap_Size+0xe838e4>
     8d4:	0b39053b 	bleq	e41dc8 <_Min_Heap_Size+0xe415c8>
     8d8:	06021349 	streq	r1, [r2], -r9, asr #6
     8dc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     8e0:	82891800 	addhi	r1, r9, #0, 16
     8e4:	01110101 	tsteq	r1, r1, lsl #2
     8e8:	13011331 	movwne	r1, #4913	; 0x1331
     8ec:	8a190000 	bhi	6408f4 <_Min_Heap_Size+0x6400f4>
     8f0:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     8f4:	0a42910a 	beq	10a4d24 <_Min_Heap_Size+0x10a4524>
     8f8:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
     8fc:	11000182 	smlabbne	r0, r2, r1, r0
     900:	00133101 	andseq	r3, r3, r1, lsl #2
     904:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
     908:	0b3a0e03 	bleq	e8411c <_Min_Heap_Size+0xe8391c>
     90c:	0b39053b 	bleq	e41e00 <_Min_Heap_Size+0xe41600>
     910:	13490c27 	movtne	r0, #39975	; 0x9c27
     914:	01120111 	tsteq	r2, r1, lsl r1
     918:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     91c:	0013010c 	andseq	r0, r3, ip, lsl #2
     920:	010b1c00 	tsteq	fp, r0, lsl #24
     924:	01120111 	tsteq	r2, r1, lsl r1
     928:	00001301 	andeq	r1, r0, r1, lsl #6
     92c:	0300341d 	movweq	r3, #1053	; 0x41d
     930:	3b0b3a08 	blcc	2cf158 <_Min_Heap_Size+0x2ce958>
     934:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     938:	b7060213 	smladlt	r6, r3, r2, r0
     93c:	00000642 	andeq	r0, r0, r2, asr #12
     940:	31011d1e 	tstcc	r1, lr, lsl sp
     944:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     948:	01110542 	tsteq	r1, r2, asr #10
     94c:	0b580112 	bleq	1600d9c <_Min_Heap_Size+0x160059c>
     950:	0b570559 	bleq	15c1ebc <_Min_Heap_Size+0x15c16bc>
     954:	00001301 	andeq	r1, r0, r1, lsl #6
     958:	3100051f 	tstcc	r0, pc, lsl r5
     95c:	b7060213 	smladlt	r6, r3, r2, r0
     960:	00000642 	andeq	r0, r0, r2, asr #12
     964:	31003420 	tstcc	r0, r0, lsr #8
     968:	b7060213 	smladlt	r6, r3, r2, r0
     96c:	00000642 	andeq	r0, r0, r2, asr #12
     970:	31011d21 	tstcc	r1, r1, lsr #26
     974:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     978:	01110542 	tsteq	r1, r2, asr #10
     97c:	0b580112 	bleq	1600dcc <_Min_Heap_Size+0x16005cc>
     980:	0b570559 	bleq	15c1eec <_Min_Heap_Size+0x15c16ec>
     984:	34220000 	strtcc	r0, [r2], #-0
     988:	3a0e0300 	bcc	381590 <_Min_Heap_Size+0x380d90>
     98c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     990:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     994:	2300000a 	movwcs	r0, #10
     998:	01018289 	smlabbeq	r1, r9, r2, r8
     99c:	13310111 	teqne	r1, #1073741828	; 0x40000004
     9a0:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     9a4:	3a0e0301 	bcc	3815b0 <_Min_Heap_Size+0x380db0>
     9a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     9b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     9b4:	970a4001 	strls	r4, [sl, -r1]
     9b8:	13010c42 	movwne	r0, #7234	; 0x1c42
     9bc:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     9c0:	3a0e0301 	bcc	3815cc <_Min_Heap_Size+0x380dcc>
     9c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9c8:	110c270b 	tstne	ip, fp, lsl #14
     9cc:	40011201 	andmi	r1, r1, r1, lsl #4
     9d0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     9d4:	00001301 	andeq	r1, r0, r1, lsl #6
     9d8:	11010b26 	tstne	r1, r6, lsr #22
     9dc:	00011201 	andeq	r1, r1, r1, lsl #4
     9e0:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
     9e4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     9e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9ec:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     9f0:	01111349 	tsteq	r1, r9, asr #6
     9f4:	06400112 			; <UNDEFINED> instruction: 0x06400112
     9f8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     9fc:	28000013 	stmdacs	r0, {r0, r1, r4}
     a00:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 950 <_Min_Heap_Size+0x150>
     a04:	0b3a0e03 	bleq	e84218 <_Min_Heap_Size+0xe83a18>
     a08:	0b39053b 	bleq	e41efc <_Min_Heap_Size+0xe416fc>
     a0c:	13490c27 	movtne	r0, #39975	; 0x9c27
     a10:	01120111 	tsteq	r2, r1, lsl r1
     a14:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     a18:	0013010c 	andseq	r0, r3, ip, lsl #2
     a1c:	00052900 	andeq	r2, r5, r0, lsl #18
     a20:	0b3a0e03 	bleq	e84234 <_Min_Heap_Size+0xe83a34>
     a24:	0b39053b 	bleq	e41f18 <_Min_Heap_Size+0xe41718>
     a28:	0a021349 	beq	85754 <_Min_Heap_Size+0x84f54>
     a2c:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
     a30:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a34:	3b0b3a0e 	blcc	2cf274 <_Min_Heap_Size+0x2cea74>
     a38:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a3c:	1201110c 	andne	r1, r1, #12, 2
     a40:	970a4001 	strls	r4, [sl, -r1]
     a44:	13010c42 	movwne	r0, #7234	; 0x1c42
     a48:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     a4c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a50:	3b0b3a0e 	blcc	2cf290 <_Min_Heap_Size+0x2cea90>
     a54:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a58:	1201110c 	andne	r1, r1, #12, 2
     a5c:	96064001 	strls	r4, [r6], -r1
     a60:	13010c42 	movwne	r0, #7234	; 0x1c42
     a64:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
     a68:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a6c:	3b0b3a0e 	blcc	2cf2ac <_Min_Heap_Size+0x2ceaac>
     a70:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a74:	1113490c 	tstne	r3, ip, lsl #18
     a78:	40011201 	andmi	r1, r1, r1, lsl #4
     a7c:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     a80:	00001301 	andeq	r1, r0, r1, lsl #6
     a84:	55010b2d 	strpl	r0, [r1, #-2861]	; 0xfffff4d3
     a88:	00130106 	andseq	r0, r3, r6, lsl #2
     a8c:	012e2e00 			; <UNDEFINED> instruction: 0x012e2e00
     a90:	0b3a0e03 	bleq	e842a4 <_Min_Heap_Size+0xe83aa4>
     a94:	0b39053b 	bleq	e41f88 <_Min_Heap_Size+0xe41788>
     a98:	13490c27 	movtne	r0, #39975	; 0x9c27
     a9c:	13010b20 	movwne	r0, #6944	; 0x1b20
     aa0:	052f0000 	streq	r0, [pc, #-0]!	; aa8 <_Min_Heap_Size+0x2a8>
     aa4:	3a0e0300 	bcc	3816ac <_Min_Heap_Size+0x380eac>
     aa8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     aac:	0013490b 	andseq	r4, r3, fp, lsl #18
     ab0:	00343000 	eorseq	r3, r4, r0
     ab4:	0b3a0e03 	bleq	e842c8 <_Min_Heap_Size+0xe83ac8>
     ab8:	0b39053b 	bleq	e41fac <_Min_Heap_Size+0xe417ac>
     abc:	00001349 	andeq	r1, r0, r9, asr #6
     ac0:	3f002e31 	svccc	0x00002e31
     ac4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     ac8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     acc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ad0:	00000b39 	andeq	r0, r0, r9, lsr fp
     ad4:	3f002e32 	svccc	0x00002e32
     ad8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     adc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     ae0:	2e330000 	cdpcs	0, 3, cr0, cr3, cr0, {0}
     ae4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     ae8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     aec:	0b3a0e03 	bleq	e84300 <_Min_Heap_Size+0xe83b00>
     af0:	0b390b3b 	bleq	e437e4 <_Min_Heap_Size+0xe42fe4>
     af4:	01000000 	mrseq	r0, (UNDEF: 0)
     af8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     afc:	0e030b13 	vmoveq.32	d3[0], r0
     b00:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     b04:	01520111 	cmpeq	r2, r1, lsl r1
     b08:	00000610 	andeq	r0, r0, r0, lsl r6
     b0c:	0b002402 	bleq	9b1c <_Min_Heap_Size+0x931c>
     b10:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b14:	0300000e 	movweq	r0, #14
     b18:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b1c:	0b3b0b3a 	bleq	ec380c <_Min_Heap_Size+0xec300c>
     b20:	13490b39 	movtne	r0, #39737	; 0x9b39
     b24:	24040000 	strcs	r0, [r4], #-0
     b28:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     b2c:	0008030b 	andeq	r0, r8, fp, lsl #6
     b30:	00260500 	eoreq	r0, r6, r0, lsl #10
     b34:	00001349 	andeq	r1, r0, r9, asr #6
     b38:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     b3c:	07000013 	smladeq	r0, r3, r0, r0
     b40:	13490101 	movtne	r0, #37121	; 0x9101
     b44:	00001301 	andeq	r1, r0, r1, lsl #6
     b48:	49002108 	stmdbmi	r0, {r3, r8, sp}
     b4c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     b50:	00340900 	eorseq	r0, r4, r0, lsl #18
     b54:	0b3a0e03 	bleq	e84368 <_Min_Heap_Size+0xe83b68>
     b58:	0b390b3b 	bleq	e4384c <_Min_Heap_Size+0xe4304c>
     b5c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; a40 <_Min_Heap_Size+0x240>
     b60:	00000c3c 	andeq	r0, r0, ip, lsr ip
     b64:	0b01130a 	bleq	45794 <_Min_Heap_Size+0x44f94>
     b68:	3b0b3a0b 	blcc	2cf39c <_Min_Heap_Size+0x2ceb9c>
     b6c:	010b3905 	tsteq	fp, r5, lsl #18
     b70:	0b000013 	bleq	bc4 <_Min_Heap_Size+0x3c4>
     b74:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     b78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b7c:	13490b39 	movtne	r0, #39737	; 0x9b39
     b80:	00000a38 	andeq	r0, r0, r8, lsr sl
     b84:	03000d0c 	movweq	r0, #3340	; 0xd0c
     b88:	3b0b3a0e 	blcc	2cf3c8 <_Min_Heap_Size+0x2cebc8>
     b8c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     b90:	000a3813 	andeq	r3, sl, r3, lsl r8
     b94:	00160d00 	andseq	r0, r6, r0, lsl #26
     b98:	0b3a0e03 	bleq	e843ac <_Min_Heap_Size+0xe83bac>
     b9c:	0b39053b 	bleq	e42090 <_Min_Heap_Size+0xe41890>
     ba0:	00001349 	andeq	r1, r0, r9, asr #6
     ba4:	3e01040e 	cdpcc	4, 0, cr0, cr1, cr14, {0}
     ba8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     bac:	3b0b3a13 	blcc	2cf400 <_Min_Heap_Size+0x2cec00>
     bb0:	010b390b 	tsteq	fp, fp, lsl #18
     bb4:	0f000013 	svceq	0x00000013
     bb8:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     bbc:	00000b1c 	andeq	r0, r0, ip, lsl fp
     bc0:	03002810 	movweq	r2, #2064	; 0x810
     bc4:	000b1c08 	andeq	r1, fp, r8, lsl #24
     bc8:	01131100 	tsteq	r3, r0, lsl #2
     bcc:	0b3a0b0b 	bleq	e83800 <_Min_Heap_Size+0xe83000>
     bd0:	0b390b3b 	bleq	e438c4 <_Min_Heap_Size+0xe430c4>
     bd4:	00001301 	andeq	r1, r0, r1, lsl #6
     bd8:	03000d12 	movweq	r0, #3346	; 0xd12
     bdc:	3b0b3a0e 	blcc	2cf41c <_Min_Heap_Size+0x2cec1c>
     be0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     be4:	000a3813 	andeq	r3, sl, r3, lsl r8
     be8:	000d1300 	andeq	r1, sp, r0, lsl #6
     bec:	0b3a0803 	bleq	e82c00 <_Min_Heap_Size+0xe82400>
     bf0:	0b390b3b 	bleq	e438e4 <_Min_Heap_Size+0xe430e4>
     bf4:	0a381349 	beq	e05920 <_Min_Heap_Size+0xe05120>
     bf8:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     bfc:	030c3f00 	movweq	r3, #52992	; 0xcf00
     c00:	3b0b3a0e 	blcc	2cf440 <_Min_Heap_Size+0x2cec40>
     c04:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c08:	1201110c 	andne	r1, r1, #12, 2
     c0c:	970a4001 	strls	r4, [sl, -r1]
     c10:	00000c42 	andeq	r0, r0, r2, asr #24
     c14:	3f012e15 	svccc	0x00012e15
     c18:	3a0e030c 	bcc	381850 <_Min_Heap_Size+0x381050>
     c1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c20:	110c270b 	tstne	ip, fp, lsl #14
     c24:	40011201 	andmi	r1, r1, r1, lsl #4
     c28:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     c2c:	00001301 	andeq	r1, r0, r1, lsl #6
     c30:	01828916 	orreq	r8, r2, r6, lsl r9
     c34:	31011100 	mrscc	r1, (UNDEF: 17)
     c38:	17000013 	smladne	r0, r3, r0, r0
     c3c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b8c <_Min_Heap_Size+0x38c>
     c40:	0b3a0e03 	bleq	e84454 <_Min_Heap_Size+0xe83c54>
     c44:	0b39053b 	bleq	e42138 <_Min_Heap_Size+0xe41938>
     c48:	01110c27 	tsteq	r1, r7, lsr #24
     c4c:	0a400112 	beq	100109c <_Min_Heap_Size+0x100089c>
     c50:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c54:	18000013 	stmdane	r0, {r0, r1, r4}
     c58:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     c5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c60:	13490b39 	movtne	r0, #39737	; 0x9b39
     c64:	00000a02 	andeq	r0, r0, r2, lsl #20
     c68:	0b000f19 	bleq	48d4 <_Min_Heap_Size+0x40d4>
     c6c:	0013490b 	andseq	r4, r3, fp, lsl #18
     c70:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     c74:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c7c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c80:	01111349 	tsteq	r1, r9, asr #6
     c84:	06400112 			; <UNDEFINED> instruction: 0x06400112
     c88:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c8c:	1b000013 	blne	ce0 <_Min_Heap_Size+0x4e0>
     c90:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; be0 <_Min_Heap_Size+0x3e0>
     c94:	0b3a0e03 	bleq	e844a8 <_Min_Heap_Size+0xe83ca8>
     c98:	0b39053b 	bleq	e4218c <_Min_Heap_Size+0xe4198c>
     c9c:	13490c27 	movtne	r0, #39975	; 0x9c27
     ca0:	01120111 	tsteq	r2, r1, lsl r1
     ca4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     ca8:	1c00000c 	stcne	0, cr0, [r0], {12}
     cac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     cb0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cb4:	13490b39 	movtne	r0, #39737	; 0x9b39
     cb8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     cbc:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     cc0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     cc4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cc8:	13490b39 	movtne	r0, #39737	; 0x9b39
     ccc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     cd0:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
     cd4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     cd8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cdc:	13490b39 	movtne	r0, #39737	; 0x9b39
     ce0:	00000a02 	andeq	r0, r0, r2, lsl #20
     ce4:	11010b1f 	tstne	r1, pc, lsl fp
     ce8:	01011201 	tsteq	r1, r1, lsl #4
     cec:	20000013 	andcs	r0, r0, r3, lsl r0
     cf0:	01018289 	smlabbeq	r1, r9, r2, r8
     cf4:	13310111 	teqne	r1, #1073741828	; 0x40000004
     cf8:	00001301 	andeq	r1, r0, r1, lsl #6
     cfc:	01828a21 	orreq	r8, r2, r1, lsr #20
     d00:	910a0200 	mrsls	r0, R10_fiq
     d04:	00000a42 	andeq	r0, r0, r2, asr #20
     d08:	01828922 	orreq	r8, r2, r2, lsr #18
     d0c:	31011101 	tstcc	r1, r1, lsl #2
     d10:	23000013 	movwcs	r0, #19
     d14:	0c3f012e 	ldfeqs	f0, [pc], #-184	; c64 <_Min_Heap_Size+0x464>
     d18:	0b3a0e03 	bleq	e8452c <_Min_Heap_Size+0xe83d2c>
     d1c:	0b390b3b 	bleq	e43a10 <_Min_Heap_Size+0xe43210>
     d20:	13490c27 	movtne	r0, #39975	; 0x9c27
     d24:	01120111 	tsteq	r2, r1, lsl r1
     d28:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     d2c:	0013010c 	andseq	r0, r3, ip, lsl #2
     d30:	00052400 	andeq	r2, r5, r0, lsl #8
     d34:	0b3a0e03 	bleq	e84548 <_Min_Heap_Size+0xe83d48>
     d38:	0b390b3b 	bleq	e43a2c <_Min_Heap_Size+0xe4322c>
     d3c:	06021349 	streq	r1, [r2], -r9, asr #6
     d40:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d44:	00342500 	eorseq	r2, r4, r0, lsl #10
     d48:	0b3a0e03 	bleq	e8455c <_Min_Heap_Size+0xe83d5c>
     d4c:	0b390b3b 	bleq	e43a40 <_Min_Heap_Size+0xe43240>
     d50:	06021349 	streq	r1, [r2], -r9, asr #6
     d54:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d58:	010b2600 	tsteq	fp, r0, lsl #12
     d5c:	13010655 	movwne	r0, #5717	; 0x1655
     d60:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     d64:	030c3f00 	movweq	r3, #52992	; 0xcf00
     d68:	3b0b3a0e 	blcc	2cf5a8 <_Min_Heap_Size+0x2ceda8>
     d6c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d70:	1113490c 	tstne	r3, ip, lsl #18
     d74:	40011201 	andmi	r1, r1, r1, lsl #4
     d78:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     d7c:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
     d80:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     d84:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     d88:	00000e03 	andeq	r0, r0, r3, lsl #28
     d8c:	3f002e29 	svccc	0x00002e29
     d90:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     d94:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     d98:	0b3b0b3a 	bleq	ec3a88 <_Min_Heap_Size+0xec3288>
     d9c:	00000b39 	andeq	r0, r0, r9, lsr fp
     da0:	3f002e2a 	svccc	0x00002e2a
     da4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     da8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     dac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     db0:	00000b39 	andeq	r0, r0, r9, lsr fp
     db4:	01110100 	tsteq	r1, r0, lsl #2
     db8:	0b130e25 	bleq	4c4654 <_Min_Heap_Size+0x4c3e54>
     dbc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     dc0:	01110655 	tsteq	r1, r5, asr r6
     dc4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     dc8:	24020000 	strcs	r0, [r2], #-0
     dcc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     dd0:	000e030b 	andeq	r0, lr, fp, lsl #6
     dd4:	00160300 	andseq	r0, r6, r0, lsl #6
     dd8:	0b3a0e03 	bleq	e845ec <_Min_Heap_Size+0xe83dec>
     ddc:	0b390b3b 	bleq	e43ad0 <_Min_Heap_Size+0xe432d0>
     de0:	00001349 	andeq	r1, r0, r9, asr #6
     de4:	0b002404 	bleq	9dfc <_Min_Heap_Size+0x95fc>
     de8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     dec:	05000008 	streq	r0, [r0, #-8]
     df0:	13490035 	movtne	r0, #36917	; 0x9035
     df4:	01060000 	mrseq	r0, (UNDEF: 6)
     df8:	01134901 	tsteq	r3, r1, lsl #18
     dfc:	07000013 	smladeq	r0, r3, r0, r0
     e00:	13490021 	movtne	r0, #36897	; 0x9021
     e04:	00000b2f 	andeq	r0, r0, pc, lsr #22
     e08:	0b011308 	bleq	45a30 <_Min_Heap_Size+0x45230>
     e0c:	3b0b3a0b 	blcc	2cf640 <_Min_Heap_Size+0x2cee40>
     e10:	010b3905 	tsteq	fp, r5, lsl #18
     e14:	09000013 	stmdbeq	r0, {r0, r1, r4}
     e18:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e20:	13490b39 	movtne	r0, #39737	; 0x9b39
     e24:	00000a38 	andeq	r0, r0, r8, lsr sl
     e28:	03000d0a 	movweq	r0, #3338	; 0xd0a
     e2c:	3b0b3a0e 	blcc	2cf66c <_Min_Heap_Size+0x2cee6c>
     e30:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e34:	000a3813 	andeq	r3, sl, r3, lsl r8
     e38:	00160b00 	andseq	r0, r6, r0, lsl #22
     e3c:	0b3a0e03 	bleq	e84650 <_Min_Heap_Size+0xe83e50>
     e40:	0b39053b 	bleq	e42334 <_Min_Heap_Size+0xe41b34>
     e44:	00001349 	andeq	r1, r0, r9, asr #6
     e48:	3e01040c 	cdpcc	4, 0, cr0, cr1, cr12, {0}
     e4c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     e50:	3b0b3a13 	blcc	2cf6a4 <_Min_Heap_Size+0x2ceea4>
     e54:	010b390b 	tsteq	fp, fp, lsl #18
     e58:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     e5c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     e60:	00000b1c 	andeq	r0, r0, ip, lsl fp
     e64:	0300280e 	movweq	r2, #2062	; 0x80e
     e68:	000b1c08 	andeq	r1, fp, r8, lsl #24
     e6c:	01130f00 	tsteq	r3, r0, lsl #30
     e70:	0b3a0b0b 	bleq	e83aa4 <_Min_Heap_Size+0xe832a4>
     e74:	0b390b3b 	bleq	e43b68 <_Min_Heap_Size+0xe43368>
     e78:	00001301 	andeq	r1, r0, r1, lsl #6
     e7c:	03000d10 	movweq	r0, #3344	; 0xd10
     e80:	3b0b3a08 	blcc	2cf6a8 <_Min_Heap_Size+0x2ceea8>
     e84:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e88:	000a3813 	andeq	r3, sl, r3, lsl r8
     e8c:	000d1100 	andeq	r1, sp, r0, lsl #2
     e90:	0b3a0e03 	bleq	e846a4 <_Min_Heap_Size+0xe83ea4>
     e94:	0b390b3b 	bleq	e43b88 <_Min_Heap_Size+0xe43388>
     e98:	0a381349 	beq	e05bc4 <_Min_Heap_Size+0xe053c4>
     e9c:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     ea0:	030c3f01 	movweq	r3, #52993	; 0xcf01
     ea4:	3b0b3a0e 	blcc	2cf6e4 <_Min_Heap_Size+0x2ceee4>
     ea8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     eac:	1201110c 	andne	r1, r1, #12, 2
     eb0:	970a4001 	strls	r4, [sl, -r1]
     eb4:	13010c42 	movwne	r0, #7234	; 0x1c42
     eb8:	05130000 	ldreq	r0, [r3, #-0]
     ebc:	3a0e0300 	bcc	381ac4 <_Min_Heap_Size+0x3812c4>
     ec0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ec4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ec8:	1400000a 	strne	r0, [r0], #-10
     ecc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e1c <_Min_Heap_Size+0x61c>
     ed0:	0b3a0e03 	bleq	e846e4 <_Min_Heap_Size+0xe83ee4>
     ed4:	0b39053b 	bleq	e423c8 <_Min_Heap_Size+0xe41bc8>
     ed8:	01110c27 	tsteq	r1, r7, lsr #24
     edc:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ee0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ee4:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     ee8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     eec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ef0:	13490b39 	movtne	r0, #39737	; 0x9b39
     ef4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     ef8:	16000006 	strne	r0, [r0], -r6
     efc:	00018289 	andeq	r8, r1, r9, lsl #5
     f00:	13310111 	teqne	r1, #1073741828	; 0x40000004
     f04:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     f08:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f0c:	3b0b3a0e 	blcc	2cf74c <_Min_Heap_Size+0x2cef4c>
     f10:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f14:	1113490c 	tstne	r3, ip, lsl #18
     f18:	40011201 	andmi	r1, r1, r1, lsl #4
     f1c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     f20:	00001301 	andeq	r1, r0, r1, lsl #6
     f24:	03003418 	movweq	r3, #1048	; 0x418
     f28:	3b0b3a08 	blcc	2cf750 <_Min_Heap_Size+0x2cef50>
     f2c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f30:	000a0213 	andeq	r0, sl, r3, lsl r2
     f34:	82891900 	addhi	r1, r9, #0, 18
     f38:	01110101 	tsteq	r1, r1, lsl #2
     f3c:	00001331 	andeq	r1, r0, r1, lsr r3
     f40:	01828a1a 	orreq	r8, r2, sl, lsl sl
     f44:	910a0200 	mrsls	r0, R10_fiq
     f48:	00000a42 	andeq	r0, r0, r2, asr #20
     f4c:	0b000f1b 	bleq	4bc0 <_Min_Heap_Size+0x43c0>
     f50:	0013490b 	andseq	r4, r3, fp, lsl #18
     f54:	00341c00 	eorseq	r1, r4, r0, lsl #24
     f58:	0b3a0803 	bleq	e82f6c <_Min_Heap_Size+0xe8276c>
     f5c:	0b39053b 	bleq	e42450 <_Min_Heap_Size+0xe41c50>
     f60:	06021349 	streq	r1, [r2], -r9, asr #6
     f64:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     f68:	82891d00 	addhi	r1, r9, #0, 26
     f6c:	01110101 	tsteq	r1, r1, lsl #2
     f70:	13011331 	movwne	r1, #4913	; 0x1331
     f74:	341e0000 	ldrcc	r0, [lr], #-0
     f78:	3a0e0300 	bcc	381b80 <_Min_Heap_Size+0x381380>
     f7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f80:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     f84:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     f88:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     f8c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f90:	3b0b3a0e 	blcc	2cf7d0 <_Min_Heap_Size+0x2cefd0>
     f94:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     f98:	1201110c 	andne	r1, r1, #12, 2
     f9c:	97064001 	strls	r4, [r6, -r1]
     fa0:	13010c42 	movwne	r0, #7234	; 0x1c42
     fa4:	05200000 	streq	r0, [r0, #-0]!
     fa8:	3a0e0300 	bcc	381bb0 <_Min_Heap_Size+0x3813b0>
     fac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fb0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fb4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     fb8:	34210000 	strtcc	r0, [r1], #-0
     fbc:	3a0e0300 	bcc	381bc4 <_Min_Heap_Size+0x3813c4>
     fc0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fc4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     fc8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     fcc:	0b220000 	bleq	880fd4 <_Min_Heap_Size+0x8807d4>
     fd0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     fd4:	00130101 	andseq	r0, r3, r1, lsl #2
     fd8:	00342300 	eorseq	r2, r4, r0, lsl #6
     fdc:	0b3a0e03 	bleq	e847f0 <_Min_Heap_Size+0xe83ff0>
     fe0:	0b390b3b 	bleq	e43cd4 <_Min_Heap_Size+0xe434d4>
     fe4:	0a021349 	beq	85d10 <_Min_Heap_Size+0x85510>
     fe8:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     fec:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     ff0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     ff4:	0b3a0e03 	bleq	e84808 <_Min_Heap_Size+0xe84008>
     ff8:	0b39053b 	bleq	e424ec <_Min_Heap_Size+0xe41cec>
     ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    1000:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1004:	0e030b13 	vmoveq.32	d3[0], r0
    1008:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    100c:	01520111 	cmpeq	r2, r1, lsl r1
    1010:	00000610 	andeq	r0, r0, r0, lsl r6
    1014:	0b002402 	bleq	a024 <_Min_Heap_Size+0x9824>
    1018:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    101c:	0300000e 	movweq	r0, #14
    1020:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1024:	0b3b0b3a 	bleq	ec3d14 <_Min_Heap_Size+0xec3514>
    1028:	13490b39 	movtne	r0, #39737	; 0x9b39
    102c:	24040000 	strcs	r0, [r4], #-0
    1030:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1034:	0008030b 	andeq	r0, r8, fp, lsl #6
    1038:	00260500 	eoreq	r0, r6, r0, lsl #10
    103c:	00001349 	andeq	r1, r0, r9, asr #6
    1040:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1044:	07000013 	smladeq	r0, r3, r0, r0
    1048:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    104c:	0b3b0b3a 	bleq	ec3d3c <_Min_Heap_Size+0xec353c>
    1050:	13490b39 	movtne	r0, #39737	; 0x9b39
    1054:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1058:	01080000 	mrseq	r0, (UNDEF: 8)
    105c:	01134901 	tsteq	r3, r1, lsl #18
    1060:	09000013 	stmdbeq	r0, {r0, r1, r4}
    1064:	13490021 	movtne	r0, #36897	; 0x9021
    1068:	00000b2f 	andeq	r0, r0, pc, lsr #22
    106c:	0b01130a 	bleq	45c9c <_Min_Heap_Size+0x4549c>
    1070:	3b0b3a0b 	blcc	2cf8a4 <_Min_Heap_Size+0x2cf0a4>
    1074:	010b3905 	tsteq	fp, r5, lsl #18
    1078:	0b000013 	bleq	10cc <_Min_Heap_Size+0x8cc>
    107c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1080:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1084:	13490b39 	movtne	r0, #39737	; 0x9b39
    1088:	00000a38 	andeq	r0, r0, r8, lsr sl
    108c:	03000d0c 	movweq	r0, #3340	; 0xd0c
    1090:	3b0b3a0e 	blcc	2cf8d0 <_Min_Heap_Size+0x2cf0d0>
    1094:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1098:	000a3813 	andeq	r3, sl, r3, lsl r8
    109c:	00160d00 	andseq	r0, r6, r0, lsl #26
    10a0:	0b3a0e03 	bleq	e848b4 <_Min_Heap_Size+0xe840b4>
    10a4:	0b39053b 	bleq	e42598 <_Min_Heap_Size+0xe41d98>
    10a8:	00001349 	andeq	r1, r0, r9, asr #6
    10ac:	3e01040e 	cdpcc	4, 0, cr0, cr1, cr14, {0}
    10b0:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    10b4:	3b0b3a13 	blcc	2cf908 <_Min_Heap_Size+0x2cf108>
    10b8:	010b390b 	tsteq	fp, fp, lsl #18
    10bc:	0f000013 	svceq	0x00000013
    10c0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    10c4:	00000b1c 	andeq	r0, r0, ip, lsl fp
    10c8:	03002810 	movweq	r2, #2064	; 0x810
    10cc:	000b1c08 	andeq	r1, fp, r8, lsl #24
    10d0:	01131100 	tsteq	r3, r0, lsl #2
    10d4:	0b3a0b0b 	bleq	e83d08 <_Min_Heap_Size+0xe83508>
    10d8:	0b390b3b 	bleq	e43dcc <_Min_Heap_Size+0xe435cc>
    10dc:	00001301 	andeq	r1, r0, r1, lsl #6
    10e0:	03000d12 	movweq	r0, #3346	; 0xd12
    10e4:	3b0b3a0e 	blcc	2cf924 <_Min_Heap_Size+0x2cf124>
    10e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    10ec:	000a3813 	andeq	r3, sl, r3, lsl r8
    10f0:	01131300 	tsteq	r3, r0, lsl #6
    10f4:	0b0b0e03 	bleq	2c4908 <_Min_Heap_Size+0x2c4108>
    10f8:	0b3b0b3a 	bleq	ec3de8 <_Min_Heap_Size+0xec35e8>
    10fc:	13010b39 	movwne	r0, #6969	; 0x1b39
    1100:	0f140000 	svceq	0x00140000
    1104:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1108:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    110c:	0b0b000f 	bleq	2c1150 <_Min_Heap_Size+0x2c0950>
    1110:	15160000 	ldrne	r0, [r6, #-0]
    1114:	010c2701 	tsteq	ip, r1, lsl #14
    1118:	17000013 	smladne	r0, r3, r0, r0
    111c:	13490005 	movtne	r0, #36869	; 0x9005
    1120:	0d180000 	ldceq	0, cr0, [r8, #-0]
    1124:	3a080300 	bcc	201d2c <_Min_Heap_Size+0x20152c>
    1128:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    112c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1130:	1900000a 	stmdbne	r0, {r1, r3}
    1134:	0e03012e 	adfeqsp	f0, f3, #0.5
    1138:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    113c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1140:	01111349 	tsteq	r1, r9, asr #6
    1144:	0a400112 	beq	1001594 <_Min_Heap_Size+0x1000d94>
    1148:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    114c:	1a000013 	bne	11a0 <_Min_Heap_Size+0x9a0>
    1150:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1154:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1158:	13490b39 	movtne	r0, #39737	; 0x9b39
    115c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1160:	1b000006 	blne	1180 <_Min_Heap_Size+0x980>
    1164:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1168:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    116c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1170:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1174:	1c000006 	stcne	0, cr0, [r0], {6}
    1178:	08030034 	stmdaeq	r3, {r2, r4, r5}
    117c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1180:	13490b39 	movtne	r0, #39737	; 0x9b39
    1184:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1188:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    118c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1190:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1194:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1198:	01111349 	tsteq	r1, r9, asr #6
    119c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    11a0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    11a4:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    11a8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    11ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11b0:	13490b39 	movtne	r0, #39737	; 0x9b39
    11b4:	00000a02 	andeq	r0, r0, r2, lsl #20
    11b8:	03012e1f 	movweq	r2, #7711	; 0x1e1f
    11bc:	3b0b3a0e 	blcc	2cf9fc <_Min_Heap_Size+0x2cf1fc>
    11c0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    11c4:	1201110c 	andne	r1, r1, #12, 2
    11c8:	97064001 	strls	r4, [r6, -r1]
    11cc:	13010c42 	movwne	r0, #7234	; 0x1c42
    11d0:	05200000 	streq	r0, [r0, #-0]!
    11d4:	3a0e0300 	bcc	381ddc <_Min_Heap_Size+0x3815dc>
    11d8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11e0:	2100000a 	tstcs	r0, sl
    11e4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1134 <_Min_Heap_Size+0x934>
    11e8:	0b3a0e03 	bleq	e849fc <_Min_Heap_Size+0xe841fc>
    11ec:	0b39053b 	bleq	e426e0 <_Min_Heap_Size+0xe41ee0>
    11f0:	13490c27 	movtne	r0, #39975	; 0x9c27
    11f4:	01120111 	tsteq	r2, r1, lsl r1
    11f8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    11fc:	0013010c 	andseq	r0, r3, ip, lsl #2
    1200:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    1204:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1208:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    120c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1210:	01120111 	tsteq	r2, r1, lsl r1
    1214:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1218:	0013010c 	andseq	r0, r3, ip, lsl #2
    121c:	82892300 	addhi	r2, r9, #0, 6
    1220:	01110101 	tsteq	r1, r1, lsl #2
    1224:	00001301 	andeq	r1, r0, r1, lsl #6
    1228:	01828a24 	orreq	r8, r2, r4, lsr #20
    122c:	910a0200 	mrsls	r0, R10_fiq
    1230:	00000a42 	andeq	r0, r0, r2, asr #20
    1234:	01828925 	orreq	r8, r2, r5, lsr #18
    1238:	00011101 	andeq	r1, r1, r1, lsl #2
    123c:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    1240:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1244:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1248:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    124c:	01111349 	tsteq	r1, r9, asr #6
    1250:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1254:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1258:	27000013 	smladcs	r0, r3, r0, r0
    125c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1260:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1264:	13490b39 	movtne	r0, #39737	; 0x9b39
    1268:	00000b1c 	andeq	r0, r0, ip, lsl fp
    126c:	01828928 	orreq	r8, r2, r8, lsr #18
    1270:	31011100 	mrscc	r1, (UNDEF: 17)
    1274:	29000013 	stmdbcs	r0, {r0, r1, r4}
    1278:	01018289 	smlabbeq	r1, r9, r2, r8
    127c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1280:	892a0000 	stmdbhi	sl!, {}	; <UNPREDICTABLE>
    1284:	11010182 	smlabbne	r1, r2, r1, r0
    1288:	01133101 	tsteq	r3, r1, lsl #2
    128c:	2b000013 	blcs	12e0 <_Min_Heap_Size+0xae0>
    1290:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 11e0 <_Min_Heap_Size+0x9e0>
    1294:	0b3a0e03 	bleq	e84aa8 <_Min_Heap_Size+0xe842a8>
    1298:	0b390b3b 	bleq	e43f8c <_Min_Heap_Size+0xe4378c>
    129c:	13490c27 	movtne	r0, #39975	; 0x9c27
    12a0:	01120111 	tsteq	r2, r1, lsl r1
    12a4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    12a8:	0013010c 	andseq	r0, r3, ip, lsl #2
    12ac:	00052c00 	andeq	r2, r5, r0, lsl #24
    12b0:	0b3a0e03 	bleq	e84ac4 <_Min_Heap_Size+0xe842c4>
    12b4:	0b390b3b 	bleq	e43fa8 <_Min_Heap_Size+0xe437a8>
    12b8:	06021349 	streq	r1, [r2], -r9, asr #6
    12bc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    12c0:	00342d00 	eorseq	r2, r4, r0, lsl #26
    12c4:	0b3a0803 	bleq	e832d8 <_Min_Heap_Size+0xe82ad8>
    12c8:	0b390b3b 	bleq	e43fbc <_Min_Heap_Size+0xe437bc>
    12cc:	06021349 	streq	r1, [r2], -r9, asr #6
    12d0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    12d4:	00342e00 	eorseq	r2, r4, r0, lsl #28
    12d8:	0b3a0e03 	bleq	e84aec <_Min_Heap_Size+0xe842ec>
    12dc:	0b390b3b 	bleq	e43fd0 <_Min_Heap_Size+0xe437d0>
    12e0:	06021349 	streq	r1, [r2], -r9, asr #6
    12e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    12e8:	002e2f00 	eoreq	r2, lr, r0, lsl #30
    12ec:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    12f0:	030e4087 	movweq	r4, #57479	; 0xe087
    12f4:	3b0b3a0e 	blcc	2cfb34 <_Min_Heap_Size+0x2cf334>
    12f8:	000b390b 	andeq	r3, fp, fp, lsl #18
    12fc:	002e3000 	eoreq	r3, lr, r0
    1300:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1304:	030e4087 	movweq	r4, #57479	; 0xe087
    1308:	3b0b3a0e 	blcc	2cfb48 <_Min_Heap_Size+0x2cf348>
    130c:	000b3905 	andeq	r3, fp, r5, lsl #18
    1310:	11010000 	mrsne	r0, (UNDEF: 1)
    1314:	130e2501 	movwne	r2, #58625	; 0xe501
    1318:	1b0e030b 	blne	381f4c <_Min_Heap_Size+0x38174c>
    131c:	1106550e 	tstne	r6, lr, lsl #10
    1320:	10015201 	andne	r5, r1, r1, lsl #4
    1324:	02000006 	andeq	r0, r0, #6
    1328:	0b3e0104 	bleq	f81740 <_Min_Heap_Size+0xf80f40>
    132c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1330:	0b3b0b3a 	bleq	ec4020 <_Min_Heap_Size+0xec3820>
    1334:	13010b39 	movwne	r0, #6969	; 0x1b39
    1338:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    133c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1340:	0400000d 	streq	r0, [r0], #-13
    1344:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1348:	00000b1c 	andeq	r0, r0, ip, lsl fp
    134c:	0b002405 	bleq	a368 <_Min_Heap_Size+0x9b68>
    1350:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1354:	0600000e 	streq	r0, [r0], -lr
    1358:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    135c:	0b3b0b3a 	bleq	ec404c <_Min_Heap_Size+0xec384c>
    1360:	13490b39 	movtne	r0, #39737	; 0x9b39
    1364:	24070000 	strcs	r0, [r7], #-0
    1368:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    136c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1370:	00350800 	eorseq	r0, r5, r0, lsl #16
    1374:	00001349 	andeq	r1, r0, r9, asr #6
    1378:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
    137c:	0a000013 	beq	13d0 <_Min_Heap_Size+0xbd0>
    1380:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
    1384:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1388:	13010b39 	movwne	r0, #6969	; 0x1b39
    138c:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    1390:	3a0e0300 	bcc	381f98 <_Min_Heap_Size+0x381798>
    1394:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1398:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    139c:	0c00000a 	stceq	0, cr0, [r0], {10}
    13a0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    13a4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13a8:	13490b39 	movtne	r0, #39737	; 0x9b39
    13ac:	00000a38 	andeq	r0, r0, r8, lsr sl
    13b0:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
    13b4:	00130113 	andseq	r0, r3, r3, lsl r1
    13b8:	00210e00 	eoreq	r0, r1, r0, lsl #28
    13bc:	0b2f1349 	bleq	bc60e8 <_Min_Heap_Size+0xbc58e8>
    13c0:	210f0000 	mrscs	r0, CPSR
    13c4:	2f134900 	svccs	0x00134900
    13c8:	10000005 	andne	r0, r0, r5
    13cc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    13d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    13d8:	13110000 	tstne	r1, #0
    13dc:	3a0b0b01 	bcc	2c3fe8 <_Min_Heap_Size+0x2c37e8>
    13e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13e4:	0013010b 	andseq	r0, r3, fp, lsl #2
    13e8:	00281200 	eoreq	r1, r8, r0, lsl #4
    13ec:	0b1c0803 	bleq	703400 <_Min_Heap_Size+0x702c00>
    13f0:	13130000 	tstne	r3, #0
    13f4:	3a0b0b01 	bcc	2c4000 <_Min_Heap_Size+0x2c3800>
    13f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13fc:	0013010b 	andseq	r0, r3, fp, lsl #2
    1400:	000d1400 	andeq	r1, sp, r0, lsl #8
    1404:	0b3a0e03 	bleq	e84c18 <_Min_Heap_Size+0xe84418>
    1408:	0b390b3b 	bleq	e440fc <_Min_Heap_Size+0xe438fc>
    140c:	0a381349 	beq	e06138 <_Min_Heap_Size+0xe05938>
    1410:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    1414:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1418:	3b0b3a0e 	blcc	2cfc58 <_Min_Heap_Size+0x2cf458>
    141c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1420:	1201110c 	andne	r1, r1, #12, 2
    1424:	970a4001 	strls	r4, [sl, -r1]
    1428:	00000c42 	andeq	r0, r0, r2, asr #24
    142c:	3f012e16 	svccc	0x00012e16
    1430:	3a0e030c 	bcc	382068 <_Min_Heap_Size+0x381868>
    1434:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1438:	110c270b 	tstne	ip, fp, lsl #14
    143c:	40011201 	andmi	r1, r1, r1, lsl #4
    1440:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1444:	00001301 	andeq	r1, r0, r1, lsl #6
    1448:	01828917 	orreq	r8, r2, r7, lsl r9
    144c:	31011100 	mrscc	r1, (UNDEF: 17)
    1450:	18000013 	stmdane	r0, {r0, r1, r4}
    1454:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1458:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    145c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1460:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1464:	19000006 	stmdbne	r0, {r1, r2}
    1468:	01018289 	smlabbeq	r1, r9, r2, r8
    146c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1470:	8a1a0000 	bhi	681478 <_Min_Heap_Size+0x680c78>
    1474:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1478:	0a42910a 	beq	10a58a8 <_Min_Heap_Size+0x10a50a8>
    147c:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    1480:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1484:	3b0b3a0e 	blcc	2cfcc4 <_Min_Heap_Size+0x2cf4c4>
    1488:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    148c:	1113490c 	tstne	r3, ip, lsl #18
    1490:	40011201 	andmi	r1, r1, r1, lsl #4
    1494:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1498:	00001301 	andeq	r1, r0, r1, lsl #6
    149c:	31011d1c 	tstcc	r1, ip, lsl sp
    14a0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    14a4:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    14a8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    14ac:	13010b57 	movwne	r0, #6999	; 0x1b57
    14b0:	051d0000 	ldreq	r0, [sp, #-0]
    14b4:	02133100 	andseq	r3, r3, #0, 2
    14b8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    14bc:	1d1e0000 	ldcne	0, cr0, [lr, #-0]
    14c0:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    14c4:	0b42b801 	bleq	10af4d0 <_Min_Heap_Size+0x10aecd0>
    14c8:	01120111 	tsteq	r2, r1, lsl r1
    14cc:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    14d0:	13010b57 	movwne	r0, #6999	; 0x1b57
    14d4:	0b1f0000 	bleq	7c14dc <_Min_Heap_Size+0x7c0cdc>
    14d8:	00065501 	andeq	r5, r6, r1, lsl #10
    14dc:	00342000 	eorseq	r2, r4, r0
    14e0:	06021331 			; <UNDEFINED> instruction: 0x06021331
    14e4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    14e8:	000f2100 	andeq	r2, pc, r0, lsl #2
    14ec:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    14f0:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    14f4:	030c3f01 	movweq	r3, #52993	; 0xcf01
    14f8:	3b0b3a0e 	blcc	2cfd38 <_Min_Heap_Size+0x2cf538>
    14fc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1500:	1113490c 	tstne	r3, ip, lsl #18
    1504:	40011201 	andmi	r1, r1, r1, lsl #4
    1508:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    150c:	00001301 	andeq	r1, r0, r1, lsl #6
    1510:	31001d23 	tstcc	r0, r3, lsr #26
    1514:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1518:	01110b42 	tsteq	r1, r2, asr #22
    151c:	0b580112 	bleq	160196c <_Min_Heap_Size+0x160116c>
    1520:	0b570559 	bleq	15c2a8c <_Min_Heap_Size+0x15c228c>
    1524:	89240000 	stmdbhi	r4!, {}	; <UNPREDICTABLE>
    1528:	11010182 	smlabbne	r1, r2, r1, r0
    152c:	01133101 	tsteq	r3, r1, lsl #2
    1530:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    1534:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1484 <_Min_Heap_Size+0xc84>
    1538:	0b3a0e03 	bleq	e84d4c <_Min_Heap_Size+0xe8454c>
    153c:	0b39053b 	bleq	e42a30 <_Min_Heap_Size+0xe42230>
    1540:	01110c27 	tsteq	r1, r7, lsr #24
    1544:	0a400112 	beq	1001994 <_Min_Heap_Size+0x1001194>
    1548:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    154c:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1550:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 14a0 <_Min_Heap_Size+0xca0>
    1554:	0b3a0e03 	bleq	e84d68 <_Min_Heap_Size+0xe84568>
    1558:	0b390b3b 	bleq	e4424c <_Min_Heap_Size+0xe43a4c>
    155c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1560:	01120111 	tsteq	r2, r1, lsl r1
    1564:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1568:	0013010c 	andseq	r0, r3, ip, lsl #2
    156c:	00052700 	andeq	r2, r5, r0, lsl #14
    1570:	0b3a0e03 	bleq	e84d84 <_Min_Heap_Size+0xe84584>
    1574:	0b390b3b 	bleq	e44268 <_Min_Heap_Size+0xe43a68>
    1578:	06021349 	streq	r1, [r2], -r9, asr #6
    157c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1580:	011d2800 	tsteq	sp, r0, lsl #16
    1584:	01521331 	cmpeq	r2, r1, lsr r3
    1588:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    158c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1590:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1594:	2900000b 	stmdbcs	r0, {r0, r1, r3}
    1598:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    159c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    15a0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    15a4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    15a8:	000b5705 	andeq	r5, fp, r5, lsl #14
    15ac:	012e2a00 			; <UNDEFINED> instruction: 0x012e2a00
    15b0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    15b4:	0b3b0b3a 	bleq	ec42a4 <_Min_Heap_Size+0xec3aa4>
    15b8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    15bc:	01120111 	tsteq	r2, r1, lsl r1
    15c0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    15c4:	0013010c 	andseq	r0, r3, ip, lsl #2
    15c8:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    15cc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    15d0:	0b3b0b3a 	bleq	ec42c0 <_Min_Heap_Size+0xec3ac0>
    15d4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    15d8:	01120111 	tsteq	r2, r1, lsl r1
    15dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    15e0:	0013010c 	andseq	r0, r3, ip, lsl #2
    15e4:	011d2c00 	tsteq	sp, r0, lsl #24
    15e8:	01521331 	cmpeq	r2, r1, lsr r3
    15ec:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    15f0:	58011201 	stmdapl	r1, {r0, r9, ip}
    15f4:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    15f8:	0013010b 	andseq	r0, r3, fp, lsl #2
    15fc:	00342d00 	eorseq	r2, r4, r0, lsl #26
    1600:	0b3a0e03 	bleq	e84e14 <_Min_Heap_Size+0xe84614>
    1604:	0b390b3b 	bleq	e442f8 <_Min_Heap_Size+0xe43af8>
    1608:	06021349 	streq	r1, [r2], -r9, asr #6
    160c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1610:	001d2e00 	andseq	r2, sp, r0, lsl #28
    1614:	01521331 	cmpeq	r2, r1, lsr r3
    1618:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    161c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1620:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1624:	2f00000b 	svccs	0x0000000b
    1628:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    162c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1630:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
    1634:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1638:	0013010b 	andseq	r0, r3, fp, lsl #2
    163c:	012e3000 			; <UNDEFINED> instruction: 0x012e3000
    1640:	0b3a0e03 	bleq	e84e54 <_Min_Heap_Size+0xe84654>
    1644:	0b39053b 	bleq	e42b38 <_Min_Heap_Size+0xe42338>
    1648:	13490c27 	movtne	r0, #39975	; 0x9c27
    164c:	13010b20 	movwne	r0, #6944	; 0x1b20
    1650:	05310000 	ldreq	r0, [r1, #-0]!
    1654:	3a0e0300 	bcc	38225c <_Min_Heap_Size+0x381a5c>
    1658:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    165c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1660:	002e3200 	eoreq	r3, lr, r0, lsl #4
    1664:	0b3a0e03 	bleq	e84e78 <_Min_Heap_Size+0xe84678>
    1668:	0b39053b 	bleq	e42b5c <_Min_Heap_Size+0xe4235c>
    166c:	01870c27 	orreq	r0, r7, r7, lsr #24
    1670:	000b200c 	andeq	r2, fp, ip
    1674:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
    1678:	0b3a0e03 	bleq	e84e8c <_Min_Heap_Size+0xe8468c>
    167c:	0b39053b 	bleq	e42b70 <_Min_Heap_Size+0xe42370>
    1680:	0b200c27 	bleq	804724 <_Min_Heap_Size+0x803f24>
    1684:	00001301 	andeq	r1, r0, r1, lsl #6
    1688:	03003434 	movweq	r3, #1076	; 0x434
    168c:	3b0b3a0e 	blcc	2cfecc <_Min_Heap_Size+0x2cf6cc>
    1690:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1694:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
    1698:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    169c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    16a4:	0b201349 	bleq	8063d0 <_Min_Heap_Size+0x805bd0>
    16a8:	2e360000 	cdpcs	0, 3, cr0, cr6, cr0, {0}
    16ac:	3a0e0300 	bcc	3822b4 <_Min_Heap_Size+0x381ab4>
    16b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16b4:	200c270b 	andcs	r2, ip, fp, lsl #14
    16b8:	3700000b 	strcc	r0, [r0, -fp]
    16bc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 160c <_Min_Heap_Size+0xe0c>
    16c0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    16c4:	3a0e030e 	bcc	382304 <_Min_Heap_Size+0x381b04>
    16c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16cc:	0000000b 	andeq	r0, r0, fp
    16d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    16d4:	030b130e 	movweq	r1, #45838	; 0xb30e
    16d8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    16dc:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    16e0:	00061001 	andeq	r1, r6, r1
    16e4:	01040200 	mrseq	r0, R12_usr
    16e8:	0b0b0b3e 	bleq	2c43e8 <_Min_Heap_Size+0x2c3be8>
    16ec:	0b3a1349 	bleq	e86418 <_Min_Heap_Size+0xe85c18>
    16f0:	0b390b3b 	bleq	e443e4 <_Min_Heap_Size+0xe43be4>
    16f4:	00001301 	andeq	r1, r0, r1, lsl #6
    16f8:	03002803 	movweq	r2, #2051	; 0x803
    16fc:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    1700:	00280400 	eoreq	r0, r8, r0, lsl #8
    1704:	0b1c0e03 	bleq	704f18 <_Min_Heap_Size+0x704718>
    1708:	24050000 	strcs	r0, [r5], #-0
    170c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1710:	000e030b 	andeq	r0, lr, fp, lsl #6
    1714:	00160600 	andseq	r0, r6, r0, lsl #12
    1718:	0b3a0e03 	bleq	e84f2c <_Min_Heap_Size+0xe8472c>
    171c:	0b390b3b 	bleq	e44410 <_Min_Heap_Size+0xe43c10>
    1720:	00001349 	andeq	r1, r0, r9, asr #6
    1724:	0b002407 	bleq	a748 <_Min_Heap_Size+0x9f48>
    1728:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    172c:	08000008 	stmdaeq	r0, {r3}
    1730:	13490035 	movtne	r0, #36917	; 0x9035
    1734:	26090000 	strcs	r0, [r9], -r0
    1738:	00134900 	andseq	r4, r3, r0, lsl #18
    173c:	01130a00 	tsteq	r3, r0, lsl #20
    1740:	0b3a0b0b 	bleq	e84374 <_Min_Heap_Size+0xe83b74>
    1744:	0b39053b 	bleq	e42c38 <_Min_Heap_Size+0xe42438>
    1748:	00001301 	andeq	r1, r0, r1, lsl #6
    174c:	03000d0b 	movweq	r0, #3339	; 0xd0b
    1750:	3b0b3a0e 	blcc	2cff90 <_Min_Heap_Size+0x2cf790>
    1754:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1758:	000a3813 	andeq	r3, sl, r3, lsl r8
    175c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1760:	0b3a0803 	bleq	e83774 <_Min_Heap_Size+0xe82f74>
    1764:	0b39053b 	bleq	e42c58 <_Min_Heap_Size+0xe42458>
    1768:	0a381349 	beq	e06494 <_Min_Heap_Size+0xe05c94>
    176c:	160d0000 	strne	r0, [sp], -r0
    1770:	3a0e0300 	bcc	382378 <_Min_Heap_Size+0x381b78>
    1774:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1778:	0013490b 	andseq	r4, r3, fp, lsl #18
    177c:	01010e00 	tsteq	r1, r0, lsl #28
    1780:	13011349 	movwne	r1, #4937	; 0x1349
    1784:	210f0000 	mrscs	r0, CPSR
    1788:	2f134900 	svccs	0x00134900
    178c:	1000000b 	andne	r0, r0, fp
    1790:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1794:	0b3b0b3a 	bleq	ec4484 <_Min_Heap_Size+0xec3c84>
    1798:	13490b39 	movtne	r0, #39737	; 0x9b39
    179c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    17a0:	34110000 	ldrcc	r0, [r1], #-0
    17a4:	3a134700 	bcc	4d33ac <_Min_Heap_Size+0x4d2bac>
    17a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17ac:	000a020b 	andeq	r0, sl, fp, lsl #4
    17b0:	002e1200 	eoreq	r1, lr, r0, lsl #4
    17b4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    17b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17bc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    17c0:	01111349 	tsteq	r1, r9, asr #6
    17c4:	0a400112 	beq	1001c14 <_Min_Heap_Size+0x1001414>
    17c8:	000c4297 	muleq	ip, r7, r2
    17cc:	002e1300 	eoreq	r1, lr, r0, lsl #6
    17d0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    17d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17d8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    17dc:	01120111 	tsteq	r2, r1, lsl r1
    17e0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    17e4:	1400000c 	strne	r0, [r0], #-12
    17e8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1738 <_Min_Heap_Size+0xf38>
    17ec:	0b3a0e03 	bleq	e85000 <_Min_Heap_Size+0xe84800>
    17f0:	0b39053b 	bleq	e42ce4 <_Min_Heap_Size+0xe424e4>
    17f4:	01110c27 	tsteq	r1, r7, lsr #24
    17f8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    17fc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1800:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1804:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1808:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    180c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1810:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1814:	16000006 	strne	r0, [r0], -r6
    1818:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    181c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1820:	13490b39 	movtne	r0, #39737	; 0x9b39
    1824:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1828:	17000006 	strne	r0, [r0, -r6]
    182c:	00018289 	andeq	r8, r1, r9, lsl #5
    1830:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1834:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    1838:	030c3f01 	movweq	r3, #52993	; 0xcf01
    183c:	3b0b3a0e 	blcc	2d007c <_Min_Heap_Size+0x2cf87c>
    1840:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1844:	1113490c 	tstne	r3, ip, lsl #18
    1848:	40011201 	andmi	r1, r1, r1, lsl #4
    184c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1850:	00001301 	andeq	r1, r0, r1, lsl #6
    1854:	01828919 	orreq	r8, r2, r9, lsl r9
    1858:	31011101 	tstcc	r1, r1, lsl #2
    185c:	00130113 	andseq	r0, r3, r3, lsl r1
    1860:	828a1a00 	addhi	r1, sl, #0, 20
    1864:	0a020001 	beq	81870 <_Min_Heap_Size+0x81070>
    1868:	000a4291 	muleq	sl, r1, r2
    186c:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    1870:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1874:	0b3b0b3a 	bleq	ec4564 <_Min_Heap_Size+0xec3d64>
    1878:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    187c:	01111349 	tsteq	r1, r9, asr #6
    1880:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1884:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1888:	1c000013 	stcne	0, cr0, [r0], {19}
    188c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1890:	0b3b0b3a 	bleq	ec4580 <_Min_Heap_Size+0xec3d80>
    1894:	13490b39 	movtne	r0, #39737	; 0x9b39
    1898:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    189c:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    18a0:	01018289 	smlabbeq	r1, r9, r2, r8
    18a4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    18a8:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    18ac:	030c3f00 	movweq	r3, #52992	; 0xcf00
    18b0:	3b0b3a0e 	blcc	2d00f0 <_Min_Heap_Size+0x2cf8f0>
    18b4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    18b8:	1201110c 	andne	r1, r1, #12, 2
    18bc:	970a4001 	strls	r4, [sl, -r1]
    18c0:	00000c42 	andeq	r0, r0, r2, asr #24
    18c4:	3f002e1f 	svccc	0x00002e1f
    18c8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    18cc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    18d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    18d4:	00000b39 	andeq	r0, r0, r9, lsr fp
    18d8:	01110100 	tsteq	r1, r0, lsl #2
    18dc:	0b130e25 	bleq	4c5178 <_Min_Heap_Size+0x4c4978>
    18e0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    18e4:	01110655 	tsteq	r1, r5, asr r6
    18e8:	06100152 			; <UNDEFINED> instruction: 0x06100152
    18ec:	24020000 	strcs	r0, [r2], #-0
    18f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    18f4:	000e030b 	andeq	r0, lr, fp, lsl #6
    18f8:	00160300 	andseq	r0, r6, r0, lsl #6
    18fc:	0b3a0e03 	bleq	e85110 <_Min_Heap_Size+0xe84910>
    1900:	0b390b3b 	bleq	e445f4 <_Min_Heap_Size+0xe43df4>
    1904:	00001349 	andeq	r1, r0, r9, asr #6
    1908:	0b002404 	bleq	a920 <_Min_Heap_Size+0xa120>
    190c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1910:	05000008 	streq	r0, [r0, #-8]
    1914:	13490035 	movtne	r0, #36917	; 0x9035
    1918:	26060000 	strcs	r0, [r6], -r0
    191c:	00134900 	andseq	r4, r3, r0, lsl #18
    1920:	01130700 	tsteq	r3, r0, lsl #14
    1924:	0b3a0b0b 	bleq	e84558 <_Min_Heap_Size+0xe83d58>
    1928:	0b39053b 	bleq	e42e1c <_Min_Heap_Size+0xe4261c>
    192c:	00001301 	andeq	r1, r0, r1, lsl #6
    1930:	03000d08 	movweq	r0, #3336	; 0xd08
    1934:	3b0b3a0e 	blcc	2d0174 <_Min_Heap_Size+0x2cf974>
    1938:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    193c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1940:	000d0900 	andeq	r0, sp, r0, lsl #18
    1944:	0b3a0803 	bleq	e83958 <_Min_Heap_Size+0xe83158>
    1948:	0b39053b 	bleq	e42e3c <_Min_Heap_Size+0xe4263c>
    194c:	0a381349 	beq	e06678 <_Min_Heap_Size+0xe05e78>
    1950:	010a0000 	mrseq	r0, (UNDEF: 10)
    1954:	01134901 	tsteq	r3, r1, lsl #18
    1958:	0b000013 	bleq	19ac <_Min_Heap_Size+0x11ac>
    195c:	13490021 	movtne	r0, #36897	; 0x9021
    1960:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1964:	0300160c 	movweq	r1, #1548	; 0x60c
    1968:	3b0b3a0e 	blcc	2d01a8 <_Min_Heap_Size+0x2cf9a8>
    196c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1970:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1974:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1978:	0b3b0b3a 	bleq	ec4668 <_Min_Heap_Size+0xec3e68>
    197c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1980:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1984:	340e0000 	strcc	r0, [lr], #-0
    1988:	3a134700 	bcc	4d3590 <_Min_Heap_Size+0x4d2d90>
    198c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1990:	000a020b 	andeq	r0, sl, fp, lsl #4
    1994:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    1998:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    199c:	0b3b0b3a 	bleq	ec468c <_Min_Heap_Size+0xec3e8c>
    19a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    19a4:	01120111 	tsteq	r2, r1, lsl r1
    19a8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    19ac:	0013010c 	andseq	r0, r3, ip, lsl #2
    19b0:	00341000 	eorseq	r1, r4, r0
    19b4:	0b3a0803 	bleq	e839c8 <_Min_Heap_Size+0xe831c8>
    19b8:	0b390b3b 	bleq	e446ac <_Min_Heap_Size+0xe43eac>
    19bc:	06021349 	streq	r1, [r2], -r9, asr #6
    19c0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    19c4:	00341100 	eorseq	r1, r4, r0, lsl #2
    19c8:	0b3a0e03 	bleq	e851dc <_Min_Heap_Size+0xe849dc>
    19cc:	0b390b3b 	bleq	e446c0 <_Min_Heap_Size+0xe43ec0>
    19d0:	06021349 	streq	r1, [r2], -r9, asr #6
    19d4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    19d8:	002e1200 	eoreq	r1, lr, r0, lsl #4
    19dc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    19e0:	0b3b0b3a 	bleq	ec46d0 <_Min_Heap_Size+0xec3ed0>
    19e4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    19e8:	01120111 	tsteq	r2, r1, lsl r1
    19ec:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    19f0:	0000000c 	andeq	r0, r0, ip
    19f4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    19f8:	030b130e 	movweq	r1, #45838	; 0xb30e
    19fc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1a00:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1a04:	00061001 	andeq	r1, r6, r1
    1a08:	00240200 	eoreq	r0, r4, r0, lsl #4
    1a0c:	0b3e0b0b 	bleq	f84640 <_Min_Heap_Size+0xf83e40>
    1a10:	00000e03 	andeq	r0, r0, r3, lsl #28
    1a14:	03001603 	movweq	r1, #1539	; 0x603
    1a18:	3b0b3a0e 	blcc	2d0258 <_Min_Heap_Size+0x2cfa58>
    1a1c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a20:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1a24:	0b0b0024 	bleq	2c1abc <_Min_Heap_Size+0x2c12bc>
    1a28:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1a2c:	35050000 	strcc	r0, [r5, #-0]
    1a30:	00134900 	andseq	r4, r3, r0, lsl #18
    1a34:	01130600 	tsteq	r3, r0, lsl #12
    1a38:	0b0b0e03 	bleq	2c524c <_Min_Heap_Size+0x2c4a4c>
    1a3c:	0b3b0b3a 	bleq	ec472c <_Min_Heap_Size+0xec3f2c>
    1a40:	13010b39 	movwne	r0, #6969	; 0x1b39
    1a44:	0d070000 	stceq	0, cr0, [r7, #-0]
    1a48:	3a080300 	bcc	202650 <_Min_Heap_Size+0x201e50>
    1a4c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a50:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1a54:	0800000a 	stmdaeq	r0, {r1, r3}
    1a58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1a5c:	0b3b0b3a 	bleq	ec474c <_Min_Heap_Size+0xec3f4c>
    1a60:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a64:	00000a38 	andeq	r0, r0, r8, lsr sl
    1a68:	03003409 	movweq	r3, #1033	; 0x409
    1a6c:	3b0b3a0e 	blcc	2d02ac <_Min_Heap_Size+0x2cfaac>
    1a70:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a74:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    1a78:	0a00000c 	beq	1ab0 <_Min_Heap_Size+0x12b0>
    1a7c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1a80:	0b3b0b3a 	bleq	ec4770 <_Min_Heap_Size+0xec3f70>
    1a84:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a88:	0a020c3f 	beq	84b8c <_Min_Heap_Size+0x8438c>
    1a8c:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    1a90:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1a94:	3b0b3a0e 	blcc	2d02d4 <_Min_Heap_Size+0x2cfad4>
    1a98:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1a9c:	1113490c 	tstne	r3, ip, lsl #18
    1aa0:	40011201 	andmi	r1, r1, r1, lsl #4
    1aa4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1aa8:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    1aac:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1ab0:	3b0b3a0e 	blcc	2d02f0 <_Min_Heap_Size+0x2cfaf0>
    1ab4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1ab8:	1113490c 	tstne	r3, ip, lsl #18
    1abc:	40011201 	andmi	r1, r1, r1, lsl #4
    1ac0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1ac4:	00001301 	andeq	r1, r0, r1, lsl #6
    1ac8:	31011d0d 	tstcc	r1, sp, lsl #26
    1acc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1ad0:	01110b42 	tsteq	r1, r2, asr #22
    1ad4:	0b580112 	bleq	1601f24 <_Min_Heap_Size+0x1601724>
    1ad8:	0b570559 	bleq	15c3044 <_Min_Heap_Size+0x15c2844>
    1adc:	340e0000 	strcc	r0, [lr], #-0
    1ae0:	02133100 	andseq	r3, r3, #0, 2
    1ae4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1ae8:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1aec:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1af0:	3b0b3a0e 	blcc	2d0330 <_Min_Heap_Size+0x2cfb30>
    1af4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1af8:	1113490c 	tstne	r3, ip, lsl #18
    1afc:	40011201 	andmi	r1, r1, r1, lsl #4
    1b00:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1b04:	00001301 	andeq	r1, r0, r1, lsl #6
    1b08:	03000510 	movweq	r0, #1296	; 0x510
    1b0c:	3b0b3a0e 	blcc	2d034c <_Min_Heap_Size+0x2cfb4c>
    1b10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b14:	b7060213 	smladlt	r6, r3, r2, r0
    1b18:	00000642 	andeq	r0, r0, r2, asr #12
    1b1c:	03003411 	movweq	r3, #1041	; 0x411
    1b20:	3b0b3a0e 	blcc	2d0360 <_Min_Heap_Size+0x2cfb60>
    1b24:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b28:	b7060213 	smladlt	r6, r3, r2, r0
    1b2c:	00000642 	andeq	r0, r0, r2, asr #12
    1b30:	03003412 	movweq	r3, #1042	; 0x412
    1b34:	3b0b3a08 	blcc	2d035c <_Min_Heap_Size+0x2cfb5c>
    1b38:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b3c:	b7060213 	smladlt	r6, r3, r2, r0
    1b40:	00000642 	andeq	r0, r0, r2, asr #12
    1b44:	01828913 	orreq	r8, r2, r3, lsl r9
    1b48:	31011101 	tstcc	r1, r1, lsl #2
    1b4c:	00130113 	andseq	r0, r3, r3, lsl r1
    1b50:	828a1400 	addhi	r1, sl, #0, 8
    1b54:	0a020001 	beq	81b60 <_Min_Heap_Size+0x81360>
    1b58:	000a4291 	muleq	sl, r1, r2
    1b5c:	82891500 	addhi	r1, r9, #0, 10
    1b60:	01110001 	tsteq	r1, r1
    1b64:	00001331 	andeq	r1, r0, r1, lsr r3
    1b68:	0b000f16 	bleq	57c8 <_Min_Heap_Size+0x4fc8>
    1b6c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1b70:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    1b74:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b78:	0b3b0b3a 	bleq	ec4868 <_Min_Heap_Size+0xec4068>
    1b7c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b80:	01120111 	tsteq	r2, r1, lsl r1
    1b84:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1b88:	0013010c 	andseq	r0, r3, ip, lsl #2
    1b8c:	00341800 	eorseq	r1, r4, r0, lsl #16
    1b90:	0b3a0e03 	bleq	e853a4 <_Min_Heap_Size+0xe84ba4>
    1b94:	0b390b3b 	bleq	e44888 <_Min_Heap_Size+0xe44088>
    1b98:	0a021349 	beq	868c4 <_Min_Heap_Size+0x860c4>
    1b9c:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    1ba0:	11010182 	smlabbne	r1, r2, r1, r0
    1ba4:	00133101 	andseq	r3, r3, r1, lsl #2
    1ba8:	01011a00 	tsteq	r1, r0, lsl #20
    1bac:	13011349 	movwne	r1, #4937	; 0x1349
    1bb0:	211b0000 	tstcs	fp, r0
    1bb4:	2f134900 	svccs	0x00134900
    1bb8:	1c00000b 	stcne	0, cr0, [r0], {11}
    1bbc:	0e03012e 	adfeqsp	f0, f3, #0.5
    1bc0:	0b3b0b3a 	bleq	ec48b0 <_Min_Heap_Size+0xec40b0>
    1bc4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1bc8:	01120111 	tsteq	r2, r1, lsl r1
    1bcc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1bd0:	0013010c 	andseq	r0, r3, ip, lsl #2
    1bd4:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    1bd8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1bdc:	0b3b0b3a 	bleq	ec48cc <_Min_Heap_Size+0xec40cc>
    1be0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1be4:	13010c3c 	movwne	r0, #7228	; 0x1c3c
    1be8:	051e0000 	ldreq	r0, [lr, #-0]
    1bec:	00134900 	andseq	r4, r3, r0, lsl #18
    1bf0:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    1bf4:	0b3a0e03 	bleq	e85408 <_Min_Heap_Size+0xe84c08>
    1bf8:	0b390b3b 	bleq	e448ec <_Min_Heap_Size+0xe440ec>
    1bfc:	13490c27 	movtne	r0, #39975	; 0x9c27
    1c00:	01120111 	tsteq	r2, r1, lsl r1
    1c04:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1c08:	0013010c 	andseq	r0, r3, ip, lsl #2
    1c0c:	00052000 	andeq	r2, r5, r0
    1c10:	0b3a0803 	bleq	e83c24 <_Min_Heap_Size+0xe83424>
    1c14:	0b390b3b 	bleq	e44908 <_Min_Heap_Size+0xe44108>
    1c18:	06021349 	streq	r1, [r2], -r9, asr #6
    1c1c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1c20:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    1c24:	0b3a0e03 	bleq	e85438 <_Min_Heap_Size+0xe84c38>
    1c28:	0b390b3b 	bleq	e4491c <_Min_Heap_Size+0xe4411c>
    1c2c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1c30:	01120111 	tsteq	r2, r1, lsl r1
    1c34:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1c38:	0013010c 	andseq	r0, r3, ip, lsl #2
    1c3c:	010b2200 	mrseq	r2, R11_fiq
    1c40:	01120111 	tsteq	r2, r1, lsl r1
    1c44:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    1c48:	3a0e0301 	bcc	382854 <_Min_Heap_Size+0x382054>
    1c4c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c50:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1c54:	010b2013 	tsteq	fp, r3, lsl r0
    1c58:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    1c5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1c60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1c64:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c68:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    1c6c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1c70:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1c74:	0b3a0e03 	bleq	e85488 <_Min_Heap_Size+0xe84c88>
    1c78:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1c7c:	3f002e26 	svccc	0x00002e26
    1c80:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1c84:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1c88:	0b3b0b3a 	bleq	ec4978 <_Min_Heap_Size+0xec4178>
    1c8c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1c90:	01110100 	tsteq	r1, r0, lsl #2
    1c94:	0b130e25 	bleq	4c5530 <_Min_Heap_Size+0x4c4d30>
    1c98:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1c9c:	01110655 	tsteq	r1, r5, asr r6
    1ca0:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1ca4:	24020000 	strcs	r0, [r2], #-0
    1ca8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1cac:	000e030b 	andeq	r0, lr, fp, lsl #6
    1cb0:	00240300 	eoreq	r0, r4, r0, lsl #6
    1cb4:	0b3e0b0b 	bleq	f848e8 <_Min_Heap_Size+0xf840e8>
    1cb8:	00000803 	andeq	r0, r0, r3, lsl #16
    1cbc:	3f012e04 	svccc	0x00012e04
    1cc0:	3a0e030c 	bcc	3828f8 <_Min_Heap_Size+0x3820f8>
    1cc4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1cc8:	110c270b 	tstne	ip, fp, lsl #14
    1ccc:	40011201 	andmi	r1, r1, r1, lsl #4
    1cd0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1cd4:	00001301 	andeq	r1, r0, r1, lsl #6
    1cd8:	03000505 	movweq	r0, #1285	; 0x505
    1cdc:	3b0b3a0e 	blcc	2d051c <_Min_Heap_Size+0x2cfd1c>
    1ce0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ce4:	b7060213 	smladlt	r6, r3, r2, r0
    1ce8:	00000642 	andeq	r0, r0, r2, asr #12
    1cec:	01828906 	orreq	r8, r2, r6, lsl #18
    1cf0:	31011101 	tstcc	r1, r1, lsl #2
    1cf4:	00130113 	andseq	r0, r3, r3, lsl r1
    1cf8:	828a0700 	addhi	r0, sl, #0, 14
    1cfc:	0a020001 	beq	81d08 <_Min_Heap_Size+0x81508>
    1d00:	000a4291 	muleq	sl, r1, r2
    1d04:	82890800 	addhi	r0, r9, #0, 16
    1d08:	01110101 	tsteq	r1, r1, lsl #2
    1d0c:	00001331 	andeq	r1, r0, r1, lsr r3
    1d10:	3f002e09 	svccc	0x00002e09
    1d14:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1d18:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1d1c:	0b3b0b3a 	bleq	ec4a0c <_Min_Heap_Size+0xec420c>
    1d20:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    1d24:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1d28:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1d2c:	0b3a0e03 	bleq	e85540 <_Min_Heap_Size+0xe84d40>
    1d30:	0b390b3b 	bleq	e44a24 <_Min_Heap_Size+0xe44224>
    1d34:	01000000 	mrseq	r0, (UNDEF: 0)
    1d38:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1d3c:	0e030b13 	vmoveq.32	d3[0], r0
    1d40:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1d44:	01520111 	cmpeq	r2, r1, lsl r1
    1d48:	00000610 	andeq	r0, r0, r0, lsl r6
    1d4c:	0b002402 	bleq	ad5c <_Min_Heap_Size+0xa55c>
    1d50:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1d54:	03000008 	movweq	r0, #8
    1d58:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1d5c:	0b3b0b3a 	bleq	ec4a4c <_Min_Heap_Size+0xec424c>
    1d60:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d64:	24040000 	strcs	r0, [r4], #-0
    1d68:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1d6c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1d70:	000f0500 	andeq	r0, pc, r0, lsl #10
    1d74:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1d78:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    1d7c:	07000013 	smladeq	r0, r3, r0, r0
    1d80:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1d84:	0b3b0b3a 	bleq	ec4a74 <_Min_Heap_Size+0xec4274>
    1d88:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d8c:	00000a02 	andeq	r0, r0, r2, lsl #20
    1d90:	0b000f08 	bleq	59b8 <_Min_Heap_Size+0x51b8>
    1d94:	0013490b 	andseq	r4, r3, fp, lsl #18
    1d98:	012e0900 			; <UNDEFINED> instruction: 0x012e0900
    1d9c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1da0:	0b3b0b3a 	bleq	ec4a90 <_Min_Heap_Size+0xec4290>
    1da4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1da8:	01111349 	tsteq	r1, r9, asr #6
    1dac:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1db0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1db4:	0a000013 	beq	1e08 <_Min_Heap_Size+0x1608>
    1db8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1dbc:	0b3b0b3a 	bleq	ec4aac <_Min_Heap_Size+0xec42ac>
    1dc0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1dc4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1dc8:	0b000006 	bleq	1de8 <_Min_Heap_Size+0x15e8>
    1dcc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1dd0:	0b3b0b3a 	bleq	ec4ac0 <_Min_Heap_Size+0xec42c0>
    1dd4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1dd8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1ddc:	340c0000 	strcc	r0, [ip], #-0
    1de0:	3a0e0300 	bcc	3829e8 <_Min_Heap_Size+0x3821e8>
    1de4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1de8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1dec:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1df0:	0b3a0e03 	bleq	e85604 <_Min_Heap_Size+0xe84e04>
    1df4:	0b390b3b 	bleq	e44ae8 <_Min_Heap_Size+0xe442e8>
    1df8:	06021349 	streq	r1, [r2], -r9, asr #6
    1dfc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1e00:	82890e00 	addhi	r0, r9, #0, 28
    1e04:	01110001 	tsteq	r1, r1
    1e08:	00001331 	andeq	r1, r0, r1, lsr r3
    1e0c:	3f002e0f 	svccc	0x00002e0f
    1e10:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1e14:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1e18:	0b3b0b3a 	bleq	ec4b08 <_Min_Heap_Size+0xec4308>
    1e1c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1e20:	01110100 	tsteq	r1, r0, lsl #2
    1e24:	0b130e25 	bleq	4c56c0 <_Min_Heap_Size+0x4c4ec0>
    1e28:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1e2c:	01110655 	tsteq	r1, r5, asr r6
    1e30:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1e34:	24020000 	strcs	r0, [r2], #-0
    1e38:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1e3c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1e40:	00160300 	andseq	r0, r6, r0, lsl #6
    1e44:	0b3a0e03 	bleq	e85658 <_Min_Heap_Size+0xe84e58>
    1e48:	0b390b3b 	bleq	e44b3c <_Min_Heap_Size+0xe4433c>
    1e4c:	00001349 	andeq	r1, r0, r9, asr #6
    1e50:	0b002404 	bleq	ae68 <_Min_Heap_Size+0xa668>
    1e54:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1e58:	05000008 	streq	r0, [r0, #-8]
    1e5c:	0b0b000f 	bleq	2c1ea0 <_Min_Heap_Size+0x2c16a0>
    1e60:	00001349 	andeq	r1, r0, r9, asr #6
    1e64:	03011306 	movweq	r1, #4870	; 0x1306
    1e68:	3a0b0b0e 	bcc	2c4aa8 <_Min_Heap_Size+0x2c42a8>
    1e6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e70:	0013010b 	andseq	r0, r3, fp, lsl #2
    1e74:	000d0700 	andeq	r0, sp, r0, lsl #14
    1e78:	0b3a0e03 	bleq	e8568c <_Min_Heap_Size+0xe84e8c>
    1e7c:	0b390b3b 	bleq	e44b70 <_Min_Heap_Size+0xe44370>
    1e80:	0a381349 	beq	e06bac <_Min_Heap_Size+0xe063ac>
    1e84:	01080000 	mrseq	r0, (UNDEF: 8)
    1e88:	01134901 	tsteq	r3, r1, lsl #18
    1e8c:	09000013 	stmdbeq	r0, {r0, r1, r4}
    1e90:	13490021 	movtne	r0, #36897	; 0x9021
    1e94:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1e98:	0301130a 	movweq	r1, #4874	; 0x130a
    1e9c:	3a0b0b08 	bcc	2c4ac4 <_Min_Heap_Size+0x2c42c4>
    1ea0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ea4:	0013010b 	andseq	r0, r3, fp, lsl #2
    1ea8:	00340b00 	eorseq	r0, r4, r0, lsl #22
    1eac:	0b3a0e03 	bleq	e856c0 <_Min_Heap_Size+0xe84ec0>
    1eb0:	0b390b3b 	bleq	e44ba4 <_Min_Heap_Size+0xe443a4>
    1eb4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1d98 <_Min_Heap_Size+0x1598>
    1eb8:	00000a02 	andeq	r0, r0, r2, lsl #20
    1ebc:	3f012e0c 	svccc	0x00012e0c
    1ec0:	3a0e030c 	bcc	382af8 <_Min_Heap_Size+0x3822f8>
    1ec4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ec8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1ecc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1ed0:	97064001 	strls	r4, [r6, -r1]
    1ed4:	13010c42 	movwne	r0, #7234	; 0x1c42
    1ed8:	050d0000 	streq	r0, [sp, #-0]
    1edc:	3a0e0300 	bcc	382ae4 <_Min_Heap_Size+0x3822e4>
    1ee0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ee4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ee8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1eec:	050e0000 	streq	r0, [lr, #-0]
    1ef0:	3a080300 	bcc	202af8 <_Min_Heap_Size+0x2022f8>
    1ef4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ef8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1efc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1f00:	890f0000 	stmdbhi	pc, {}	; <UNPREDICTABLE>
    1f04:	11000182 	smlabbne	r0, r2, r1, r0
    1f08:	00133101 	andseq	r3, r3, r1, lsl #2
    1f0c:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
    1f10:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1f14:	0b3b0b3a 	bleq	ec4c04 <_Min_Heap_Size+0xec4404>
    1f18:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1f1c:	01111349 	tsteq	r1, r9, asr #6
    1f20:	0a400112 	beq	1002370 <_Min_Heap_Size+0x1001b70>
    1f24:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1f28:	11000013 	tstne	r0, r3, lsl r0
    1f2c:	08030005 	stmdaeq	r3, {r0, r2}
    1f30:	0b3b0b3a 	bleq	ec4c20 <_Min_Heap_Size+0xec4420>
    1f34:	13490b39 	movtne	r0, #39737	; 0x9b39
    1f38:	00000a02 	andeq	r0, r0, r2, lsl #20
    1f3c:	03000512 	movweq	r0, #1298	; 0x512
    1f40:	3b0b3a0e 	blcc	2d0780 <_Min_Heap_Size+0x2cff80>
    1f44:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1f48:	000a0213 	andeq	r0, sl, r3, lsl r2
    1f4c:	00181300 	andseq	r1, r8, r0, lsl #6
    1f50:	34140000 	ldrcc	r0, [r4], #-0
    1f54:	3a0e0300 	bcc	382b5c <_Min_Heap_Size+0x38235c>
    1f58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f5c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1f60:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1f64:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    1f68:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1f6c:	3b0b3a0e 	blcc	2d07ac <_Min_Heap_Size+0x2cffac>
    1f70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1f74:	0c01870c 	stceq	7, cr8, [r1], {12}
    1f78:	01120111 	tsteq	r2, r1, lsl r1
    1f7c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1f80:	0013010c 	andseq	r0, r3, ip, lsl #2
    1f84:	82891600 	addhi	r1, r9, #0, 12
    1f88:	01110101 	tsteq	r1, r1, lsl #2
    1f8c:	00001331 	andeq	r1, r0, r1, lsr r3
    1f90:	01828a17 	orreq	r8, r2, r7, lsl sl
    1f94:	910a0200 	mrsls	r0, R10_fiq
    1f98:	00000a42 	andeq	r0, r0, r2, asr #20
    1f9c:	3f002e18 	svccc	0x00002e18
    1fa0:	3a0e030c 	bcc	382bd8 <_Min_Heap_Size+0x3823d8>
    1fa4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fa8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1fac:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1fb0:	970a4001 	strls	r4, [sl, -r1]
    1fb4:	00000c42 	andeq	r0, r0, r2, asr #24
    1fb8:	3f002e19 	svccc	0x00002e19
    1fbc:	3a0e030c 	bcc	382bf4 <_Min_Heap_Size+0x3823f4>
    1fc0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fc4:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1fc8:	970a4001 	strls	r4, [sl, -r1]
    1fcc:	00000c42 	andeq	r0, r0, r2, asr #24
    1fd0:	3f002e1a 	svccc	0x00002e1a
    1fd4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1fd8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1fdc:	0b3b0b3a 	bleq	ec4ccc <_Min_Heap_Size+0xec44cc>
    1fe0:	00000b39 	andeq	r0, r0, r9, lsr fp
    1fe4:	00110100 	andseq	r0, r1, r0, lsl #2
    1fe8:	06550610 			; <UNDEFINED> instruction: 0x06550610
    1fec:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1ff0:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    1ff4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ff8:	06100011 			; <UNDEFINED> instruction: 0x06100011
    1ffc:	01120111 	tsteq	r2, r1, lsl r1
    2000:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2004:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    2008:	Address 0x00002008 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
  errno = ENOMEM;
       8:	007d0002 	rsbseq	r0, sp, r2
	...
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
}
      2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
      30:	00000004 	andeq	r0, r0, r4
    if (status != HAL_OK)
      34:	00000000 	andeq	r0, r0, r0
      uwTickFreq = prevTickFreq;
      38:	7d000300 	stcvc	3, cr0, [r0, #-0]
      3c:	000000d8 	ldrdeq	r0, [r0], -r8
      40:	00000000 	andeq	r0, r0, r0
      44:	06c00000 	strbeq	r0, [r0], r0
      if (pllsource != 0)
      48:	06c20800 	strbeq	r0, [r2], r0, lsl #16
      4c:	00020800 	andeq	r0, r2, r0, lsl #16
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	06c2007d 	uxtab16eq	r0, r2, sp
      54:	06ec0800 	strbteq	r0, [ip], r0, lsl #16
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	0000087d 	andeq	r0, r0, sp, ror r8
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00000000 	andeq	r0, r0, r0
      64:	06a80000 	strteq	r0, [r8], r0
      68:	06aa0800 	strteq	r0, [sl], r0, lsl #16
      SystemCoreClock = pllvco/pllp;
      6c:	00020800 	andeq	r0, r2, r0, lsl #16
      70:	06aa007d 	sxtabeq	r0, sl, sp
      break;
      74:	06c00800 	strbeq	r0, [r0], r0, lsl #16
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00020800 	andeq	r0, r2, r0, lsl #16
      7c:	0000087d 	andeq	r0, r0, sp, ror r8
      80:	00000000 	andeq	r0, r0, r0
      84:	06900000 	ldreq	r0, [r0], r0
      88:	06920800 	ldreq	r0, [r2], r0, lsl #16
      8c:	00020800 	andeq	r0, r2, r0, lsl #16
      90:	0692007d 			; <UNDEFINED> instruction: 0x0692007d
      94:	06a80800 	strteq	r0, [r8], r0, lsl #16
      98:	00020800 	andeq	r0, r2, r0, lsl #16
      9c:	0000087d 	andeq	r0, r0, sp, ror r8
      a0:	00000000 	andeq	r0, r0, r0
      a4:	06780000 	ldrbteq	r0, [r8], -r0
      a8:	067a0800 	ldrbteq	r0, [sl], -r0, lsl #16
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00020800 	andeq	r0, r2, r0, lsl #16
      b0:	067a007d 			; <UNDEFINED> instruction: 0x067a007d
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	06900800 	ldreq	r0, [r0], r0, lsl #16
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00020800 	andeq	r0, r2, r0, lsl #16
      bc:	0000087d 	andeq	r0, r0, sp, ror r8
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00000000 	andeq	r0, r0, r0
      c4:	06600000 	strbteq	r0, [r0], -r0
      c8:	06620800 	strbteq	r0, [r2], -r0, lsl #16
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	00020800 	andeq	r0, r2, r0, lsl #16
      d0:	0662007d 			; <UNDEFINED> instruction: 0x0662007d
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	06780800 	ldrbteq	r0, [r8], -r0, lsl #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00020800 	andeq	r0, r2, r0, lsl #16
      dc:	0000087d 	andeq	r0, r0, sp, ror r8
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	06480000 	strbeq	r0, [r8], -r0
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	064a0800 	strbeq	r0, [sl], -r0, lsl #16
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	00020800 	andeq	r0, r2, r0, lsl #16
      f0:	064a007d 			; <UNDEFINED> instruction: 0x064a007d
    huart->TxXferCount = 0x00U;
      f4:	06600800 	strbteq	r0, [r0], -r0, lsl #16
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00020800 	andeq	r0, r2, r0, lsl #16
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0000087d 	andeq	r0, r0, sp, ror r8
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000000 	andeq	r0, r0, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	06300000 	ldrteq	r0, [r0], -r0
    HAL_UART_AbortCpltCallback(huart);
     108:	06320800 	ldrteq	r0, [r2], -r0, lsl #16
     10c:	00020800 	andeq	r0, r2, r0, lsl #16
  uint32_t AbortCplt = 0x01U;
     110:	0632007d 			; <UNDEFINED> instruction: 0x0632007d
  if (AbortCplt == 0x01U)
     114:	06480800 	strbeq	r0, [r8], -r0, lsl #16
}
     118:	00020800 	andeq	r0, r2, r0, lsl #16
     11c:	0000087d 	andeq	r0, r0, sp, ror r8
     120:	00000000 	andeq	r0, r0, r0
     124:	05e40000 	strbeq	r0, [r4, #0]!
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	05e60800 	strbeq	r0, [r6, #2048]!	; 0x800
     12c:	00020800 	andeq	r0, r2, r0, lsl #16
     130:	05e6007d 	strbeq	r0, [r6, #125]!	; 0x7d
     134:	05e80800 	strbeq	r0, [r8, #2048]!	; 0x800
     138:	00020800 	andeq	r0, r2, r0, lsl #16
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	05e80c7d 	strbeq	r0, [r8, #3197]!	; 0xc7d
     140:	06260800 	strteq	r0, [r6], -r0, lsl #16
     144:	00020800 	andeq	r0, r2, r0, lsl #16
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0626187d 			; <UNDEFINED> instruction: 0x0626187d
     14c:	06300800 	ldrteq	r0, [r0], -r0, lsl #16
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00020800 	andeq	r0, r2, r0, lsl #16
     154:	00000c7d 	andeq	r0, r0, sp, ror ip
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	00000000 	andeq	r0, r0, r0
     15c:	01010000 	mrseq	r0, (UNDEF: 1)
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	00010101 	andeq	r0, r1, r1, lsl #2
     164:	080005e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl}
     168:	08000606 	stmdaeq	r0, {r1, r2, r9, sl}
     16c:	9f300002 	svcls	0x00300002
     170:	08000606 	stmdaeq	r0, {r1, r2, r9, sl}
}
     174:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
     178:	9f340002 	svcls	0x00340002
     17c:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
     180:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
}
     184:	9f330002 	svcls	0x00330002
	...
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     198:	007d0002 	rsbseq	r0, sp, r2
	...
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
     1b4:	080005c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, sl}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	007d0002 	rsbseq	r0, sp, r2
     1bc:	080005c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, sl}
     1c0:	080005c8 	stmdaeq	r0, {r3, r6, r7, r8, sl}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	047d0002 	ldrbteq	r0, [sp], #-2
     1c8:	080005c8 	stmdaeq	r0, {r3, r6, r7, r8, sl}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	080005dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl}
     1d0:	107d0002 	rsbsne	r0, sp, r2
     1d4:	080005dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
     1dc:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
     1f0:	080005d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	d4500001 	ldrble	r0, [r0], #-1
     1f8:	d7080005 	strle	r0, [r8, -r5]
     1fc:	02080005 	andeq	r0, r8, #5
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00007100 	andeq	r7, r0, r0, lsl #2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00000000 	andeq	r0, r0, r0
     208:	74000000 	strvc	r0, [r0], #-0
     20c:	76080007 	strvc	r0, [r8], -r7
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	02080007 	andeq	r0, r8, #7
     214:	76007d00 	strvc	r7, [r0], -r0, lsl #26
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	8c080007 	stchi	0, cr0, [r8], {7}
     21c:	02080007 	andeq	r0, r8, #7
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
  tmp = hdma->Instance->FCR;
     22c:	74000000 	strvc	r0, [r0], #-0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	7a080007 	bvc	200254 <_Min_Heap_Size+0x1ffa54>
  tmp |= hdma->Init.FIFOMode;
     234:	01080007 	tsteq	r8, r7
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	077a5000 	ldrbeq	r5, [sl, -r0]!
    tmp |= hdma->Init.FIFOThreshold;
     23c:	078c0800 	streq	r0, [ip, r0, lsl #16]
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00040800 	andeq	r0, r4, r0, lsl #16
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	9f5001f3 	svcls	0x005001f3
	...
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	08000774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl}
     258:	08000778 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl}
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	78510001 	ldmdavc	r1, {r0}^
  hdma->State = HAL_DMA_STATE_READY;
     260:	8c080007 	stchi	0, cr0, [r8], {7}
     264:	04080007 	streq	r0, [r8], #-7
  return HAL_OK;
     268:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     26c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     270:	00000000 	andeq	r0, r0, r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00075c00 	andeq	r5, r7, r0, lsl #24
     278:	00075e08 	andeq	r5, r7, r8, lsl #28
     27c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	00075e00 	andeq	r5, r7, r0, lsl #28
        hdma->State = HAL_DMA_STATE_READY;
     284:	00077408 	andeq	r7, r7, r8, lsl #8
        return HAL_ERROR; 
     288:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    return HAL_ERROR;
     28c:	00000008 	andeq	r0, r0, r8
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00000000 	andeq	r0, r0, r0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00074c00 	andeq	r4, r7, r0, lsl #24
     298:	00074e08 	andeq	r4, r7, r8, lsl #28
      tickstart = HAL_GetTick();
     29c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00074e00 	andeq	r4, r7, r0, lsl #28
     2a4:	00075c08 	andeq	r5, r7, r8, lsl #24
     2a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	00000008 	andeq	r0, r0, r8
     2b0:	00000000 	andeq	r0, r0, r0
     2b4:	00074200 	andeq	r4, r7, r0, lsl #4
          return HAL_TIMEOUT;
     2b8:	00074408 	andeq	r4, r7, r8, lsl #8
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     2c0:	00074400 	andeq	r4, r7, r0, lsl #8
     2c4:	00074a08 	andeq	r4, r7, r8, lsl #20
    FlagStatus       pwrclkchanged = RESET;
     2c8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	00000008 	andeq	r0, r0, r8
     2d0:	00000000 	andeq	r0, r0, r0
     2d4:	00072800 	andeq	r2, r7, r0, lsl #16
      tickstart = HAL_GetTick();
     2d8:	00072a08 	andeq	r2, r7, r8, lsl #20
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     2e0:	00072a00 	andeq	r2, r7, r0, lsl #20
     2e4:	00073c08 	andeq	r3, r7, r8, lsl #24
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     2ec:	00000008 	andeq	r0, r0, r8
          return HAL_TIMEOUT;
     2f0:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00071400 	andeq	r1, r7, r0, lsl #8
     2f8:	00071608 	andeq	r1, r7, r8, lsl #12
     2fc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     300:	00071600 	andeq	r1, r7, r0, lsl #12
     304:	00072808 	andeq	r2, r7, r8, lsl #16
     308:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     30c:	00000008 	andeq	r0, r0, r8
     310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
     314:	00070000 	andeq	r0, r7, r0
     318:	00070208 	andeq	r0, r7, r8, lsl #4
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     320:	00070200 	andeq	r0, r7, r0, lsl #4
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00071408 	andeq	r1, r7, r8, lsl #8
     328:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     32c:	00000008 	andeq	r0, r0, r8
	...
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     34c:	00000008 	andeq	r0, r0, r8
     350:	00000000 	andeq	r0, r0, r0
     354:	0006ec00 	andeq	lr, r6, r0, lsl #24
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	0006ee08 	andeq	lr, r6, r8, lsl #28
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     360:	0006ee00 	andeq	lr, r6, r0, lsl #28
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	00070008 	andeq	r0, r7, r8
     368:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	00000008 	andeq	r0, r0, r8
     370:	00000000 	andeq	r0, r0, r0
     374:	00078c00 	andeq	r8, r7, r0, lsl #24
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00078e08 	andeq	r8, r7, r8, lsl #28
     37c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     380:	00078e00 	andeq	r8, r7, r0, lsl #28
     384:	0007d008 	andeq	sp, r7, r8
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     38c:	0007d010 	andeq	sp, r7, r0, lsl r0
        __HAL_RCC_PLL_DISABLE();
     390:	0007d808 	andeq	sp, r7, r8, lsl #16
     394:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3b8:	00000008 	andeq	r0, r0, r8
	...
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3dc:	01f30004 	mvnseq	r0, r4
     3e0:	00009f50 	andeq	r9, r0, r0, asr pc
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00000000 	andeq	r0, r0, r0
     3e8:	00010000 	andeq	r0, r1, r0
     3ec:	00000050 	andeq	r0, r0, r0, asr r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00000000 	andeq	r0, r0, r0
     3f4:	f3000400 	vshl.u8	d0, d0, d0
     3f8:	009f5001 	addseq	r5, pc, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	00000000 	andeq	r0, r0, r0
     400:	0c000000 	stceq	0, cr0, [r0], {-0}
     404:	0e080008 	cdpeq	0, 0, cr0, cr8, cr8, {0}
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	02080008 	andeq	r0, r8, #8
     40c:	0e007d00 	cdpeq	13, 0, cr7, cr0, cr0, {0}
     410:	10080008 	andne	r0, r8, r8
     414:	02080008 	andeq	r0, r8, #8
     418:	10087d00 	andne	r7, r8, r0, lsl #26
     41c:	2c080008 	stccs	0, cr0, [r8], {8}
     420:	02080008 	andeq	r0, r8, #8
     424:	2c287d00 	stccs	13, cr7, [r8], #-0
        __HAL_RCC_PLL_ENABLE();
     428:	2e080008 	cdpcs	0, 0, cr0, cr8, cr8, {0}
     42c:	02080008 	andeq	r0, r8, #8
        tickstart = HAL_GetTick();
     430:	2e087d00 	cdpcs	13, 0, cr7, cr8, cr0, {0}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	8c080008 	stchi	0, cr0, [r8], {8}
     438:	02080008 	andeq	r0, r8, #8
     43c:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
  return HAL_OK;
     44c:	0c000000 	stceq	0, cr0, [r0], {-0}
        __HAL_RCC_PLL_DISABLE();
     450:	2a080008 	bcs	200478 <_Min_Heap_Size+0x1ffc78>
     454:	01080008 	tsteq	r8, r8
        tickstart = HAL_GetTick();
     458:	082a5000 	stmdaeq	sl!, {ip, lr}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	082e0800 	stmdaeq	lr!, {fp}
     460:	00040800 	andeq	r0, r4, r0, lsl #16
     464:	9f5001f3 	svcls	0x005001f3
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0800082e 	stmdaeq	r0, {r1, r2, r3, r5, fp}
     46c:	08000872 	stmdaeq	r0, {r1, r4, r5, r6, fp}
            return HAL_TIMEOUT;
     470:	72500001 	subsvc	r0, r0, #1
  return HAL_OK;
     474:	8c080008 	stchi	0, cr0, [r8], {8}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	04080008 	streq	r0, [r8], #-8
        pll_config = RCC->PLLCFGR;
     47c:	5001f300 	andpl	pc, r1, r0, lsl #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     484:	00000000 	andeq	r0, r0, r0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0007d800 	andeq	sp, r7, r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	0007da08 	andeq	sp, r7, r8, lsl #20
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	0007da00 	andeq	sp, r7, r0, lsl #20
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00080c08 	andeq	r0, r8, r8, lsl #24
     49c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     4a0:	00000008 	andeq	r0, r0, r8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	00088c00 	andeq	r8, r8, r0, lsl #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	00088e08 	andeq	r8, r8, r8, lsl #28
     4b0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00088e00 	andeq	r8, r8, r0, lsl #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	0008bc08 	andeq	fp, r8, r8, lsl #24
     4bc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
  return HAL_OK;
     4c0:	0008bc08 	andeq	fp, r8, r8, lsl #24
}
     4c4:	0008c408 	andeq	ip, r8, r8, lsl #8
        return HAL_ERROR;
     4c8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
        return HAL_ERROR;
     4d4:	00098000 	andeq	r8, r9, r0
          return HAL_ERROR;
     4d8:	00098208 	andeq	r8, r9, r8, lsl #4
     4dc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     4e0:	00098200 	andeq	r8, r9, r0, lsl #4
     4e4:	000af408 	andeq	pc, sl, r8, lsl #8
     4e8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     4ec:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     4fc:	00098000 	andeq	r8, r9, r0
     500:	00098c08 	andeq	r8, r9, r8, lsl #24
     504:	50000108 	andpl	r0, r0, r8, lsl #2
     508:	0800098c 	stmdaeq	r0, {r2, r3, r7, r8, fp}
     50c:	08000a0c 	stmdaeq	r0, {r2, r3, r9, fp}
     510:	0c540001 	mrrceq	0, 0, r0, r4, cr1
     514:	1208000a 	andne	r0, r8, #10
     518:	0108000a 	tsteq	r8, sl
     51c:	0a125000 	beq	494524 <_Min_Heap_Size+0x493d24>
     520:	0af40800 	beq	ffd02528 <_estack+0xdfd012f0>
     524:	00010800 	andeq	r0, r1, r0, lsl #16
     528:	00000054 	andeq	r0, r0, r4, asr r0
     52c:	00000000 	andeq	r0, r0, r0
     530:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     534:	ea080009 	b	200560 <_Min_Heap_Size+0x1ffd60>
     538:	01080009 	tsteq	r8, r9
     53c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     54c:	08000a0a 	stmdaeq	r0, {r1, r3, r9, fp}
     550:	08000a0c 	stmdaeq	r0, {r2, r3, r9, fp}
     554:	34500001 	ldrbcc	r0, [r0], #-1
     558:	5208000a 	andpl	r0, r8, #10
     55c:	0108000a 	tsteq	r8, sl
     560:	0a905000 	beq	fe414568 <_estack+0xde413330>
     564:	0aa80800 	beq	fea0256c <_estack+0xdea01334>
     568:	00010800 	andeq	r0, r1, r0, lsl #16
     56c:	00000050 	andeq	r0, r0, r0, asr r0
     570:	00000000 	andeq	r0, r0, r0
     574:	000daa00 	andeq	sl, sp, r0, lsl #20
     578:	000dea08 	andeq	lr, sp, r8, lsl #20
     57c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     580:	000dea00 	andeq	lr, sp, r0, lsl #20
     584:	000dec08 	andeq	lr, sp, r8, lsl #24
     588:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     58c:	000dec04 	andeq	lr, sp, r4, lsl #24
     590:	000e5808 	andeq	r5, lr, r8, lsl #16
     594:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     598:	000e5810 	andeq	r5, lr, r0, lsl r8
     59c:	000e5c08 	andeq	r5, lr, r8, lsl #24
     5a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5a4:	000e5c04 	andeq	r5, lr, r4, lsl #24
     5a8:	000e8208 	andeq	r8, lr, r8, lsl #4
     5ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5b0:	000e8200 	andeq	r8, lr, r0, lsl #4
     5b4:	000e8808 	andeq	r8, lr, r8, lsl #16
     5b8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5bc:	000e8810 	andeq	r8, lr, r0, lsl r8
     5c0:	000e9008 	andeq	r9, lr, r8
     5c4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
     5e0:	000daa00 	andeq	sl, sp, r0, lsl #20
     5e4:	000e5308 	andeq	r5, lr, r8, lsl #6
     5e8:	50000108 	andpl	r0, r0, r8, lsl #2
     5ec:	08000e53 	stmdaeq	r0, {r0, r1, r4, r6, r9, sl, fp}
     5f0:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
     5f4:	01f30004 	mvnseq	r0, r4
     5f8:	0e5c9f50 	mrceq	15, 2, r9, cr12, cr0, {2}
     5fc:	0e850800 	cdpeq	8, 8, cr0, cr5, cr0, {0}
     600:	00010800 	andeq	r0, r1, r0, lsl #16
     604:	000e8550 	andeq	r8, lr, r0, asr r5
     608:	000e8808 	andeq	r8, lr, r8, lsl #16
     60c:	f3000408 	vshl.u8	d0, d8, d0
     610:	889f5001 	ldmhi	pc, {r0, ip, lr}	; <UNPREDICTABLE>
     614:	8a08000e 	bhi	200654 <_Min_Heap_Size+0x1ffe54>
     618:	0108000e 	tsteq	r8, lr
     61c:	0e8a5000 	cdpeq	0, 8, cr5, cr10, cr0, {0}
     620:	0e8c0800 	cdpeq	8, 8, cr0, cr12, cr0, {0}
     624:	00040800 	andeq	r0, r4, r0, lsl #16
     628:	9f5001f3 	svcls	0x005001f3
     62c:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
     630:	08000e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp}
     634:	8e500001 	cdphi	0, 5, cr0, cr0, cr1, {0}
     638:	9008000e 	andls	r0, r8, lr
     63c:	0408000e 	streq	r0, [r8], #-14
     640:	5001f300 	andpl	pc, r1, r0, lsl #6
     644:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     648:	00000000 	andeq	r0, r0, r0
     64c:	01000000 	mrseq	r0, (UNDEF: 0)
     650:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
     654:	da08000d 	ble	200690 <_Min_Heap_Size+0x1ffe90>
     658:	0108000d 	tsteq	r8, sp
     65c:	0e625200 	cdpeq	2, 6, cr5, cr2, cr0, {0}
     660:	0e760800 	cdpeq	8, 7, cr0, cr6, cr0, {0}
     664:	00020800 	andeq	r0, r2, r0, lsl #16
     668:	0e769f30 	mrceq	15, 3, r9, cr6, cr0, {1}
     66c:	0e820800 	cdpeq	8, 8, cr0, cr2, cr0, {0}
     670:	00010800 	andeq	r0, r1, r0, lsl #16
     674:	00000052 	andeq	r0, r0, r2, asr r0
     678:	00000000 	andeq	r0, r0, r0
     67c:	00000100 	andeq	r0, r0, r0, lsl #2
     680:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
     684:	da08000d 	ble	2006c0 <_Min_Heap_Size+0x1ffec0>
     688:	0208000d 	andeq	r0, r8, #13
     68c:	649f3000 	ldrvs	r3, [pc], #0	; 694 <_Min_Heap_Size-0x16c>
     690:	7608000e 	strvc	r0, [r8], -lr
     694:	0108000e 	tsteq	r8, lr
     698:	0e765200 	cdpeq	2, 7, cr5, cr6, cr0, {0}
     69c:	0e820800 	cdpeq	8, 8, cr0, cr2, cr0, {0}
     6a0:	00020800 	andeq	r0, r2, r0, lsl #16
     6a4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     6b0:	08000e2c 	stmdaeq	r0, {r2, r3, r5, r9, sl, fp}
     6b4:	08000e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp}
     6b8:	00530001 	subseq	r0, r3, r1
	...
     6c8:	000e2001 	andeq	r2, lr, r1
     6cc:	000e2408 	andeq	r2, lr, r8, lsl #8
     6d0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     6d4:	0e249f0c 	cdpeq	15, 2, cr9, cr4, cr12, {0}
     6d8:	0e280800 	cdpeq	8, 2, cr0, cr8, cr0, {0}
     6dc:	00010800 	andeq	r0, r1, r0, lsl #16
     6e0:	000e2853 	andeq	r2, lr, r3, asr r8
     6e4:	000e2808 	andeq	r2, lr, r8, lsl #16
     6e8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     6ec:	00009f0c 	andeq	r9, r0, ip, lsl #30
     6f0:	00000000 	andeq	r0, r0, r0
     6f4:	01000000 	mrseq	r0, (UNDEF: 0)
     6f8:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
     6fc:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
     700:	00530001 	subseq	r0, r3, r1
     704:	00000000 	andeq	r0, r0, r0
     708:	01000000 	mrseq	r0, (UNDEF: 0)
     70c:	2c010000 	stccs	0, cr0, [r1], {-0}
     710:	2e08000e 	cdpcs	0, 0, cr0, cr8, cr14, {0}
     714:	0308000e 	movweq	r0, #32782	; 0x800e
     718:	9f0c7200 	svcls	0x000c7200
     71c:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
     720:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
     724:	00520001 	subseq	r0, r2, r1
     728:	00000000 	andeq	r0, r0, r0
     72c:	01000000 	mrseq	r0, (UNDEF: 0)
     730:	000e2c01 	andeq	r2, lr, r1, lsl #24
     734:	000e3208 	andeq	r3, lr, r8, lsl #4
     738:	53000108 	movwpl	r0, #264	; 0x108
	...
     744:	0e320100 	rsfeqs	f0, f2, f0
     748:	0e320800 	cdpeq	8, 3, cr0, cr2, cr0, {0}
     74c:	00010800 	andeq	r0, r1, r0, lsl #16
     750:	00000051 	andeq	r0, r0, r1, asr r0
     754:	00000000 	andeq	r0, r0, r0
     758:	000d7a00 	andeq	r7, sp, r0, lsl #20
     75c:	000d7c08 	andeq	r7, sp, r8, lsl #24
     760:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     764:	000d7c00 	andeq	r7, sp, r0, lsl #24
     768:	000d9408 	andeq	r9, sp, r8, lsl #8
     76c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     770:	00000008 	andeq	r0, r0, r8
	...
     77c:	000d7a00 	andeq	r7, sp, r0, lsl #20
     780:	000d8f08 	andeq	r8, sp, r8, lsl #30
     784:	50000108 	andpl	r0, r0, r8, lsl #2
     788:	08000d8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r8, sl, fp}
     78c:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
     790:	01f30004 	mvnseq	r0, r4
     794:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     7a8:	08000920 	stmdaeq	r0, {r5, r8, fp}
     7ac:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
     7b0:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     7b4:	2e080009 	cdpcs	0, 0, cr0, cr8, cr9, {0}
     7b8:	04080009 	streq	r0, [r8], #-9
     7bc:	5001f300 	andpl	pc, r1, r0, lsl #6
     7c0:	00092e9f 	muleq	r9, pc, lr	; <UNPREDICTABLE>
     7c4:	00096408 	andeq	r6, r9, r8, lsl #8
     7c8:	50000108 	andpl	r0, r0, r8, lsl #2
     7cc:	08000964 	stmdaeq	r0, {r2, r5, r6, r8, fp}
     7d0:	08000966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp}
     7d4:	01f30004 	mvnseq	r0, r4
     7d8:	09669f50 	stmdbeq	r6!, {r4, r6, r8, r9, sl, fp, ip, pc}^
     7dc:	09800800 	stmibeq	r0, {fp}
     7e0:	00010800 	andeq	r0, r1, r0, lsl #16
     7e4:	00000050 	andeq	r0, r0, r0, asr r0
	...
     7f0:	00096e00 	andeq	r6, r9, r0, lsl #28
     7f4:	00097008 	andeq	r7, r9, r8
     7f8:	53000108 	movwpl	r0, #264	; 0x108
     7fc:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
     800:	08000978 	stmdaeq	r0, {r3, r4, r5, r6, r8, fp}
     804:	20700002 	rsbscs	r0, r0, r2
	...
     818:	007d0002 	rsbseq	r0, sp, r2
	...
     824:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     83c:	00500001 	subseq	r0, r0, r1
     840:	00000000 	andeq	r0, r0, r0
     844:	04000000 	streq	r0, [r0], #-0
     848:	5001f300 	andpl	pc, r1, r0, lsl #6
     84c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     85c:	01000000 	mrseq	r0, (UNDEF: 0)
     860:	00005000 	andeq	r5, r0, r0
	...
     870:	00020000 	andeq	r0, r2, r0
     874:	0000007d 	andeq	r0, r0, sp, ror r0
     878:	00000000 	andeq	r0, r0, r0
     87c:	00020000 	andeq	r0, r2, r0
     880:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     894:	00010000 	andeq	r0, r1, r0
     898:	00000050 	andeq	r0, r0, r0, asr r0
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	f3000400 	vshl.u8	d0, d0, d0
     8a4:	009f5001 	addseq	r5, pc, r1
	...
     8b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     8cc:	007d0002 	rsbseq	r0, sp, r2
	...
     8d8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     8f0:	00500001 	subseq	r0, r0, r1
     8f4:	00000000 	andeq	r0, r0, r0
     8f8:	04000000 	streq	r0, [r0], #-0
     8fc:	5001f300 	andpl	pc, r1, r0, lsl #6
     900:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     910:	01000000 	mrseq	r0, (UNDEF: 0)
     914:	00005000 	andeq	r5, r0, r0
	...
     924:	00020000 	andeq	r0, r2, r0
     928:	0000007d 	andeq	r0, r0, sp, ror r0
     92c:	00000000 	andeq	r0, r0, r0
     930:	00020000 	andeq	r0, r2, r0
     934:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     948:	00010000 	andeq	r0, r1, r0
     94c:	00000050 	andeq	r0, r0, r0, asr r0
     950:	00000000 	andeq	r0, r0, r0
     954:	f3000400 	vshl.u8	d0, d0, d0
     958:	009f5001 	addseq	r5, pc, r1
	...
     96c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     978:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
     97c:	08000d9a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, fp}
     980:	007d0002 	rsbseq	r0, sp, r2
     984:	08000d9a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, fp}
     988:	08000da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp}
     98c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     99c:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
     9a0:	08000d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp}
     9a4:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     9a8:	a808000d 	stmdage	r8, {r0, r2, r3}
     9ac:	0408000d 	streq	r0, [r8], #-13
     9b0:	5001f300 	andpl	pc, r1, r0, lsl #6
     9b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     9b8:	00000000 	andeq	r0, r0, r0
     9bc:	9c000000 	stcls	0, cr0, [r0], {-0}
     9c0:	a508000d 	strge	r0, [r8, #-13]
     9c4:	0108000d 	tsteq	r8, sp
     9c8:	00005000 	andeq	r5, r0, r0
     9cc:	00000000 	andeq	r0, r0, r0
     9d0:	00010000 	andeq	r0, r1, r0
     9d4:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
     9d8:	08000920 	stmdaeq	r0, {r5, r8, fp}
     9dc:	00500001 	subseq	r0, r0, r1
	...
     9e8:	0008d200 	andeq	sp, r8, r0, lsl #4
     9ec:	0008dc08 	andeq	sp, r8, r8, lsl #24
     9f0:	53000108 	movwpl	r0, #264	; 0x108
	...
     a00:	08c60100 	stmiaeq	r6, {r8}^
     a04:	08ca0800 	stmiaeq	sl, {fp}^
     a08:	00030800 	andeq	r0, r3, r0, lsl #16
     a0c:	ca9f0c72 	bgt	fe7c3bdc <_estack+0xde7c29a4>
     a10:	ce080008 	cdpgt	0, 0, cr0, cr8, cr8, {0}
     a14:	01080008 	tsteq	r8, r8
     a18:	08ce5300 	stmiaeq	lr, {r8, r9, ip, lr}^
     a1c:	08ce0800 	stmiaeq	lr, {fp}^
     a20:	00030800 	andeq	r0, r3, r0, lsl #16
     a24:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     a30:	0008ce01 	andeq	ip, r8, r1, lsl #28
     a34:	0008ce08 	andeq	ip, r8, r8, lsl #28
     a38:	53000108 	movwpl	r0, #264	; 0x108
	...
     a44:	01000001 	tsteq	r0, r1
     a48:	080008d2 	stmdaeq	r0, {r1, r4, r6, r7, fp}
     a4c:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
     a50:	0c720003 	ldcleq	0, cr0, [r2], #-12
     a54:	0008d49f 	muleq	r8, pc, r4	; <UNPREDICTABLE>
     a58:	0008d808 	andeq	sp, r8, r8, lsl #16
     a5c:	52000108 	andpl	r0, r0, #8, 2
	...
     a68:	08d20101 	ldmeq	r2, {r0, r8}^
     a6c:	08d80800 	ldmeq	r8, {fp}^
     a70:	00010800 	andeq	r0, r1, r0, lsl #16
     a74:	00000053 	andeq	r0, r0, r3, asr r0
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
     a80:	d8080008 	stmdale	r8, {r3}
     a84:	01080008 	tsteq	r8, r8
     a88:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     a94:	080008ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, fp}
     a98:	080008f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, fp}
     a9c:	00530001 	subseq	r0, r3, r1
	...
     aac:	0008de01 	andeq	sp, r8, r1, lsl #28
     ab0:	0008e208 	andeq	lr, r8, r8, lsl #4
     ab4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     ab8:	08e29f14 	stmiaeq	r2!, {r2, r4, r8, r9, sl, fp, ip, pc}^
     abc:	08e60800 	stmiaeq	r6!, {fp}^
     ac0:	00010800 	andeq	r0, r1, r0, lsl #16
     ac4:	0008e653 	andeq	lr, r8, r3, asr r6
     ac8:	0008e608 	andeq	lr, r8, r8, lsl #12
     acc:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     ad0:	00009f14 	andeq	r9, r0, r4, lsl pc
     ad4:	00000000 	andeq	r0, r0, r0
     ad8:	01000000 	mrseq	r0, (UNDEF: 0)
     adc:	080008e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp}
     ae0:	080008e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp}
     ae4:	00530001 	subseq	r0, r3, r1
     ae8:	00000000 	andeq	r0, r0, r0
     aec:	01000000 	mrseq	r0, (UNDEF: 0)
     af0:	ea010000 	b	40af8 <_Min_Heap_Size+0x402f8>
     af4:	ec080008 	stc	0, cr0, [r8], {8}
     af8:	03080008 	movweq	r0, #32776	; 0x8008
     afc:	9f147200 	svcls	0x00147200
     b00:	080008ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp}
     b04:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
     b08:	00520001 	subseq	r0, r2, r1
     b0c:	00000000 	andeq	r0, r0, r0
     b10:	01000000 	mrseq	r0, (UNDEF: 0)
     b14:	0008ea01 	andeq	lr, r8, r1, lsl #20
     b18:	0008f008 	andeq	pc, r8, r8
     b1c:	53000108 	movwpl	r0, #264	; 0x108
	...
     b28:	08f00100 	ldmeq	r0!, {r8}^
     b2c:	08f00800 	ldmeq	r0!, {fp}^
     b30:	00010800 	andeq	r0, r1, r0, lsl #16
     b34:	00000051 	andeq	r0, r0, r1, asr r0
     b38:	00000000 	andeq	r0, r0, r0
     b3c:	14000000 	strne	r0, [r0], #-0
     b40:	20080009 	andcs	r0, r8, r9
     b44:	01080009 	tsteq	r8, r9
     b48:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     b54:	01000000 	mrseq	r0, (UNDEF: 0)
     b58:	08000908 	stmdaeq	r0, {r3, r8, fp}
     b5c:	0800090c 	stmdaeq	r0, {r2, r3, r8, fp}
     b60:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b64:	00090c9f 	muleq	r9, pc, ip	; <UNPREDICTABLE>
     b68:	00091008 	andeq	r1, r9, r8
     b6c:	53000108 	movwpl	r0, #264	; 0x108
     b70:	08000910 	stmdaeq	r0, {r4, r8, fp}
     b74:	08000910 	stmdaeq	r0, {r4, r8, fp}
     b78:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b80:	00000000 	andeq	r0, r0, r0
     b84:	10010000 	andne	r0, r1, r0
     b88:	10080009 	andne	r0, r8, r9
     b8c:	01080009 	tsteq	r8, r9
     b90:	00005300 	andeq	r5, r0, r0, lsl #6
     b94:	00000000 	andeq	r0, r0, r0
     b98:	00010000 	andeq	r0, r1, r0
     b9c:	09140100 	ldmdbeq	r4, {r8}
     ba0:	09160800 	ldmdbeq	r6, {fp}
     ba4:	00030800 	andeq	r0, r3, r0, lsl #16
     ba8:	169f0c72 			; <UNDEFINED> instruction: 0x169f0c72
     bac:	1a080009 	bne	200bd8 <_Min_Heap_Size+0x2003d8>
     bb0:	01080009 	tsteq	r8, r9
     bb4:	00005200 	andeq	r5, r0, r0, lsl #4
     bb8:	00000000 	andeq	r0, r0, r0
     bbc:	01010000 	mrseq	r0, (UNDEF: 1)
     bc0:	08000914 	stmdaeq	r0, {r2, r4, r8, fp}
     bc4:	0800091a 	stmdaeq	r0, {r1, r3, r4, r8, fp}
     bc8:	00530001 	subseq	r0, r3, r1
	...
     bd4:	00091a01 	andeq	r1, r9, r1, lsl #20
     bd8:	00091a08 	andeq	r1, r9, r8, lsl #20
     bdc:	51000108 	tstpl	r0, r8, lsl #2
	...
     be8:	00000001 	andeq	r0, r0, r1
     bec:	00000000 	andeq	r0, r0, r0
     bf0:	00010000 	andeq	r0, r1, r0
     bf4:	00000050 	andeq	r0, r0, r0, asr r0
	...
     c04:	01000000 	mrseq	r0, (UNDEF: 0)
     c08:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     c14:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     c20:	0c720003 	ldcleq	0, cr0, [r2], #-12
     c24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	53000100 	movwpl	r0, #256	; 0x100
	...
     c38:	0c720003 	ldcleq	0, cr0, [r2], #-12
     c3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     c40:	00000000 	andeq	r0, r0, r0
     c44:	00010000 	andeq	r0, r1, r0
     c48:	00000000 	andeq	r0, r0, r0
     c4c:	01000000 	mrseq	r0, (UNDEF: 0)
     c50:	00005300 	andeq	r5, r0, r0, lsl #6
     c54:	00000000 	andeq	r0, r0, r0
     c58:	00010000 	andeq	r0, r1, r0
     c5c:	00000100 	andeq	r0, r0, r0, lsl #2
     c60:	00000000 	andeq	r0, r0, r0
     c64:	00030000 	andeq	r0, r3, r0
     c68:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	01000000 	mrseq	r0, (UNDEF: 0)
     c74:	00005200 	andeq	r5, r0, r0, lsl #4
     c78:	00000000 	andeq	r0, r0, r0
     c7c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
     c88:	00530001 	subseq	r0, r3, r1
	...
     c94:	00000001 	andeq	r0, r0, r1
     c98:	00000000 	andeq	r0, r0, r0
     c9c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     cb0:	007d0002 	rsbseq	r0, sp, r2
	...
     cbc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     cc8:	187d0002 	ldmdane	sp!, {r1}^
	...
     cd4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
     cec:	00010000 	andeq	r0, r1, r0
     cf0:	00000050 	andeq	r0, r0, r0, asr r0
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
     d04:	01f30004 	mvnseq	r0, r4
     d08:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     d20:	00510001 	subseq	r0, r1, r1
     d24:	00000000 	andeq	r0, r0, r0
     d28:	01000000 	mrseq	r0, (UNDEF: 0)
     d2c:	00005200 	andeq	r5, r0, r0, lsl #4
     d30:	00000000 	andeq	r0, r0, r0
     d34:	00040000 	andeq	r0, r4, r0
     d38:	9f5101f3 	svcls	0x005101f3
	...
     d54:	00520001 	subseq	r0, r2, r1
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	02000000 	andeq	r0, r0, #0
     d60:	002c7000 	eoreq	r7, ip, r0
     d64:	00000000 	andeq	r0, r0, r0
     d68:	02000000 	andeq	r0, r0, #0
     d6c:	002c7400 	eoreq	r7, ip, r0, lsl #8
     d70:	00000000 	andeq	r0, r0, r0
     d74:	04000000 	streq	r0, [r0], #-0
     d78:	5201f300 	andpl	pc, r1, #0, 6
     d7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d80:	00000000 	andeq	r0, r0, r0
     d84:	00000100 	andeq	r0, r0, r0, lsl #2
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	06000000 	streq	r0, [r0], -r0
     d90:	3c13f200 	lfmcc	f7, 1, [r3], {-0}
	...
     da8:	53000100 	movwpl	r0, #256	; 0x100
	...
     db8:	00000100 	andeq	r0, r0, r0, lsl #2
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00030000 	andeq	r0, r3, r0
     dc4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     dc8:	00000000 	andeq	r0, r0, r0
     dcc:	01000000 	mrseq	r0, (UNDEF: 0)
     dd0:	00005300 	andeq	r5, r0, r0, lsl #6
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	00030000 	andeq	r0, r3, r0
     ddc:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     de8:	00000001 	andeq	r0, r0, r1
     dec:	00000000 	andeq	r0, r0, r0
     df0:	53000100 	movwpl	r0, #256	; 0x100
	...
     dfc:	01000001 	tsteq	r0, r1
	...
     e08:	0c720003 	ldcleq	0, cr0, [r2], #-12
     e0c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e10:	00000000 	andeq	r0, r0, r0
     e14:	52000100 	andpl	r0, r0, #0, 2
	...
     e20:	00000101 	andeq	r0, r0, r1, lsl #2
     e24:	00000000 	andeq	r0, r0, r0
     e28:	00010000 	andeq	r0, r1, r0
     e2c:	00000053 	andeq	r0, r0, r3, asr r0
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00010000 	andeq	r0, r1, r0
     e38:	00000000 	andeq	r0, r0, r0
     e3c:	01000000 	mrseq	r0, (UNDEF: 0)
     e40:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     e54:	00530001 	subseq	r0, r3, r1
	...
     e64:	00000001 	andeq	r0, r0, r1
     e68:	00000000 	andeq	r0, r0, r0
     e6c:	72000300 	andvc	r0, r0, #0, 6
     e70:	00009f14 	andeq	r9, r0, r4, lsl pc
     e74:	00000000 	andeq	r0, r0, r0
     e78:	00010000 	andeq	r0, r1, r0
     e7c:	00000053 	andeq	r0, r0, r3, asr r0
     e80:	00000000 	andeq	r0, r0, r0
     e84:	72000300 	andvc	r0, r0, #0, 6
     e88:	00009f14 	andeq	r9, r0, r4, lsl pc
     e8c:	00000000 	andeq	r0, r0, r0
     e90:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     e9c:	00530001 	subseq	r0, r3, r1
     ea0:	00000000 	andeq	r0, r0, r0
     ea4:	01000000 	mrseq	r0, (UNDEF: 0)
     ea8:	00010000 	andeq	r0, r1, r0
     eac:	00000000 	andeq	r0, r0, r0
     eb0:	03000000 	movweq	r0, #0
     eb4:	9f147200 	svcls	0x00147200
	...
     ec0:	00520001 	subseq	r0, r2, r1
     ec4:	00000000 	andeq	r0, r0, r0
     ec8:	01000000 	mrseq	r0, (UNDEF: 0)
     ecc:	00000001 	andeq	r0, r0, r1
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	53000100 	movwpl	r0, #256	; 0x100
	...
     ee0:	00000100 	andeq	r0, r0, r0, lsl #2
     ee4:	00000000 	andeq	r0, r0, r0
     ee8:	00010000 	andeq	r0, r1, r0
     eec:	00000051 	andeq	r0, r0, r1, asr r0
	...
     efc:	01000000 	mrseq	r0, (UNDEF: 0)
     f00:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     f0c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     f18:	14720003 	ldrbtne	r0, [r2], #-3
     f1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f20:	00000000 	andeq	r0, r0, r0
     f24:	53000100 	movwpl	r0, #256	; 0x100
	...
     f30:	14720003 	ldrbtne	r0, [r2], #-3
     f34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	00010000 	andeq	r0, r1, r0
     f40:	00000000 	andeq	r0, r0, r0
     f44:	01000000 	mrseq	r0, (UNDEF: 0)
     f48:	00005300 	andeq	r5, r0, r0, lsl #6
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	00010000 	andeq	r0, r1, r0
     f54:	00000100 	andeq	r0, r0, r0, lsl #2
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	00030000 	andeq	r0, r3, r0
     f60:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
     f64:	00000000 	andeq	r0, r0, r0
     f68:	01000000 	mrseq	r0, (UNDEF: 0)
     f6c:	00005200 	andeq	r5, r0, r0, lsl #4
     f70:	00000000 	andeq	r0, r0, r0
     f74:	01010000 	mrseq	r0, (UNDEF: 1)
	...
     f80:	00530001 	subseq	r0, r3, r1
	...
     f8c:	00000001 	andeq	r0, r0, r1
     f90:	00000000 	andeq	r0, r0, r0
     f94:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     fac:	00500001 	subseq	r0, r0, r1
     fb0:	00000000 	andeq	r0, r0, r0
     fb4:	04000000 	streq	r0, [r0], #-0
     fb8:	5001f300 	andpl	pc, r1, r0, lsl #6
     fbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     fd0:	01000000 	mrseq	r0, (UNDEF: 0)
     fd4:	00005200 	andeq	r5, r0, r0, lsl #4
     fd8:	00000000 	andeq	r0, r0, r0
     fdc:	00020000 	andeq	r0, r2, r0
     fe0:	00002c70 	andeq	r2, r0, r0, ror ip
     fe4:	00000000 	andeq	r0, r0, r0
     fe8:	00040000 	andeq	r0, r4, r0
     fec:	9f5201f3 	svcls	0x005201f3
	...
     ff8:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
     ffc:	08000af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp}
    1000:	007d0002 	rsbseq	r0, sp, r2
    1004:	08000af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp}
    1008:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
    100c:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    1010:	08000afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp}
    1014:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
    1018:	287d0002 	ldmdacs	sp!, {r1}^
    101c:	08000b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp}
    1020:	08000b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp}
    1024:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    1028:	08000b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp}
    102c:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
    1030:	287d0002 	ldmdacs	sp!, {r1}^
	...
    103c:	00010100 	andeq	r0, r1, r0, lsl #2
    1040:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
    1044:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
    1048:	06500001 	ldrbeq	r0, [r0], -r1
    104c:	7e08000b 	cdpvc	0, 0, cr0, cr8, cr11, {0}
    1050:	0108000b 	tsteq	r8, fp
    1054:	00005500 	andeq	r5, r0, r0, lsl #10
    1058:	00000000 	andeq	r0, r0, r0
    105c:	01000000 	mrseq	r0, (UNDEF: 0)
    1060:	0af40001 	beq	ffd0106c <_estack+0xdfcffe34>
    1064:	0b060800 	bleq	18306c <_Min_Heap_Size+0x18286c>
    1068:	00010800 	andeq	r0, r1, r0, lsl #16
    106c:	000b0651 	andeq	r0, fp, r1, asr r6
    1070:	000b7e08 	andeq	r7, fp, r8, lsl #28
    1074:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    1080:	00010100 	andeq	r0, r1, r0, lsl #2
    1084:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
    1088:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
    108c:	06520001 	ldrbeq	r0, [r2], -r1
    1090:	7e08000b 	cdpvc	0, 0, cr0, cr8, cr11, {0}
    1094:	0408000b 	streq	r0, [r8], #-11
    1098:	5201f300 	andpl	pc, r1, #0, 6
    109c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    10a0:	00000000 	andeq	r0, r0, r0
    10a4:	01010000 	mrseq	r0, (UNDEF: 1)
    10a8:	000af400 	andeq	pc, sl, r0, lsl #8
    10ac:	000b0608 	andeq	r0, fp, r8, lsl #12
    10b0:	53000108 	movwpl	r0, #264	; 0x108
    10b4:	08000b06 	stmdaeq	r0, {r1, r2, r8, r9, fp}
    10b8:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
    10bc:	00590001 	subseq	r0, r9, r1
	...
    10c8:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    10cc:	7608000a 	strvc	r0, [r8], -sl
    10d0:	0208000b 	andeq	r0, r8, #11
    10d4:	76009100 	strvc	r9, [r0], -r0, lsl #2
    10d8:	7e08000b 	cdpvc	0, 0, cr0, cr8, cr11, {0}
    10dc:	0208000b 	andeq	r0, r8, #11
    10e0:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    10f0:	02000000 	andeq	r0, r0, #0
    10f4:	00007d00 	andeq	r7, r0, r0, lsl #26
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	02000000 	andeq	r0, r0, #0
    1100:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1118:	01000000 	mrseq	r0, (UNDEF: 0)
    111c:	00005000 	andeq	r5, r0, r0
    1120:	00000000 	andeq	r0, r0, r0
    1124:	00040000 	andeq	r0, r4, r0
    1128:	9f5001f3 	svcls	0x005001f3
	...
    1134:	00500001 	subseq	r0, r0, r1
    1138:	00000000 	andeq	r0, r0, r0
    113c:	04000000 	streq	r0, [r0], #-0
    1140:	5001f300 	andpl	pc, r1, r0, lsl #6
    1144:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1148:	00000000 	andeq	r0, r0, r0
    114c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    115c:	02000000 	andeq	r0, r0, #0
    1160:	009f3000 	addseq	r3, pc, r0
    1164:	00000000 	andeq	r0, r0, r0
    1168:	0b000000 	bleq	1170 <_Min_Heap_Size+0x970>
    116c:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    1170:	2e301a80 	vaddcs.f32	s2, s1, s0
    1174:	9f1aff08 	svcls	0x001aff08
	...
    1180:	00720008 	rsbseq	r0, r2, r8
    1184:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    1188:	00009f1a 	andeq	r9, r0, sl, lsl pc
    118c:	00000000 	andeq	r0, r0, r0
    1190:	000b0000 	andeq	r0, fp, r0
    1194:	80080072 	andhi	r0, r8, r2, ror r0
    1198:	082e301a 	stmdaeq	lr!, {r1, r3, r4, ip, sp}
    119c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    11a0:	00000000 	andeq	r0, r0, r0
    11a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    11a8:	30007200 	andcc	r7, r0, r0, lsl #4
    11ac:	1aff082e 	bne	fffc326c <_estack+0xdffc2034>
    11b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    11c0:	01000000 	mrseq	r0, (UNDEF: 0)
    11c4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    11d4:	00020000 	andeq	r0, r2, r0
    11d8:	0000007d 	andeq	r0, r0, sp, ror r0
    11dc:	00000000 	andeq	r0, r0, r0
    11e0:	00020000 	andeq	r0, r2, r0
    11e4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    11f8:	00010000 	andeq	r0, r1, r0
    11fc:	00000050 	andeq	r0, r0, r0, asr r0
    1200:	00000000 	andeq	r0, r0, r0
    1204:	f3000400 	vshl.u8	d0, d0, d0
    1208:	009f5001 	addseq	r5, pc, r1
	...
    121c:	01000000 	mrseq	r0, (UNDEF: 0)
    1220:	00005000 	andeq	r5, r0, r0
    1224:	00000000 	andeq	r0, r0, r0
    1228:	00010000 	andeq	r0, r1, r0
    122c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    123c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1248:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    124c:	00000008 	andeq	r0, r0, r8
	...
    1260:	01000000 	mrseq	r0, (UNDEF: 0)
    1264:	00005000 	andeq	r5, r0, r0
    1268:	00000000 	andeq	r0, r0, r0
    126c:	00010000 	andeq	r0, r1, r0
    1270:	00000053 	andeq	r0, r0, r3, asr r0
    1274:	00000000 	andeq	r0, r0, r0
    1278:	f3000400 	vshl.u8	d0, d0, d0
    127c:	009f5001 	addseq	r5, pc, r1
	...
    1290:	01000000 	mrseq	r0, (UNDEF: 0)
    1294:	00005000 	andeq	r5, r0, r0
    1298:	00000000 	andeq	r0, r0, r0
    129c:	00010000 	andeq	r0, r1, r0
    12a0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    12b0:	01000000 	mrseq	r0, (UNDEF: 0)
    12b4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    12c0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    12cc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    12d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12d4:	00000000 	andeq	r0, r0, r0
    12d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    12e4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    12e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12ec:	00000000 	andeq	r0, r0, r0
    12f0:	00010000 	andeq	r0, r1, r0
    12f4:	00000000 	andeq	r0, r0, r0
    12f8:	01000000 	mrseq	r0, (UNDEF: 0)
    12fc:	00005300 	andeq	r5, r0, r0, lsl #6
    1300:	00000000 	andeq	r0, r0, r0
    1304:	00010000 	andeq	r0, r1, r0
    1308:	00000100 	andeq	r0, r0, r0, lsl #2
    130c:	00000000 	andeq	r0, r0, r0
    1310:	00030000 	andeq	r0, r3, r0
    1314:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1318:	00000000 	andeq	r0, r0, r0
    131c:	01000000 	mrseq	r0, (UNDEF: 0)
    1320:	00005200 	andeq	r5, r0, r0, lsl #4
    1324:	00000000 	andeq	r0, r0, r0
    1328:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1334:	00530001 	subseq	r0, r3, r1
	...
    1340:	00000001 	andeq	r0, r0, r1
    1344:	00000000 	andeq	r0, r0, r0
    1348:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    135c:	00010000 	andeq	r0, r1, r0
    1360:	00000053 	andeq	r0, r0, r3, asr r0
	...
    136c:	00010000 	andeq	r0, r1, r0
    1370:	00000000 	andeq	r0, r0, r0
    1374:	03000000 	movweq	r0, #0
    1378:	9f147200 	svcls	0x00147200
	...
    1384:	00530001 	subseq	r0, r3, r1
    1388:	00000000 	andeq	r0, r0, r0
    138c:	03000000 	movweq	r0, #0
    1390:	9f147200 	svcls	0x00147200
	...
    139c:	00000100 	andeq	r0, r0, r0, lsl #2
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	00010000 	andeq	r0, r1, r0
    13a8:	00000053 	andeq	r0, r0, r3, asr r0
    13ac:	00000000 	andeq	r0, r0, r0
    13b0:	00000100 	andeq	r0, r0, r0, lsl #2
    13b4:	00000001 	andeq	r0, r0, r1
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	72000300 	andvc	r0, r0, #0, 6
    13c0:	00009f14 	andeq	r9, r0, r4, lsl pc
    13c4:	00000000 	andeq	r0, r0, r0
    13c8:	00010000 	andeq	r0, r1, r0
    13cc:	00000052 	andeq	r0, r0, r2, asr r0
    13d0:	00000000 	andeq	r0, r0, r0
    13d4:	00010100 	andeq	r0, r1, r0, lsl #2
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	01000000 	mrseq	r0, (UNDEF: 0)
    13e0:	00005300 	andeq	r5, r0, r0, lsl #6
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    13f4:	00510001 	subseq	r0, r1, r1
	...
    1408:	53000100 	movwpl	r0, #256	; 0x100
	...
    1418:	00000100 	andeq	r0, r0, r0, lsl #2
    141c:	00000000 	andeq	r0, r0, r0
    1420:	00030000 	andeq	r0, r3, r0
    1424:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1428:	00000000 	andeq	r0, r0, r0
    142c:	01000000 	mrseq	r0, (UNDEF: 0)
    1430:	00005300 	andeq	r5, r0, r0, lsl #6
    1434:	00000000 	andeq	r0, r0, r0
    1438:	00030000 	andeq	r0, r3, r0
    143c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1448:	00000001 	andeq	r0, r0, r1
    144c:	00000000 	andeq	r0, r0, r0
    1450:	53000100 	movwpl	r0, #256	; 0x100
	...
    145c:	01000001 	tsteq	r0, r1
	...
    1468:	14720003 	ldrbtne	r0, [r2], #-3
    146c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1470:	00000000 	andeq	r0, r0, r0
    1474:	52000100 	andpl	r0, r0, #0, 2
	...
    1480:	00000101 	andeq	r0, r0, r1, lsl #2
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00010000 	andeq	r0, r1, r0
    148c:	00000053 	andeq	r0, r0, r3, asr r0
    1490:	00000000 	andeq	r0, r0, r0
    1494:	00010000 	andeq	r0, r1, r0
    1498:	00000000 	andeq	r0, r0, r0
    149c:	01000000 	mrseq	r0, (UNDEF: 0)
    14a0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    14b4:	00530001 	subseq	r0, r3, r1
	...
    14c4:	00000001 	andeq	r0, r0, r1
    14c8:	00000000 	andeq	r0, r0, r0
    14cc:	72000300 	andvc	r0, r0, #0, 6
    14d0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	00010000 	andeq	r0, r1, r0
    14dc:	00000053 	andeq	r0, r0, r3, asr r0
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	72000300 	andvc	r0, r0, #0, 6
    14e8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    14fc:	00530001 	subseq	r0, r3, r1
    1500:	00000000 	andeq	r0, r0, r0
    1504:	01000000 	mrseq	r0, (UNDEF: 0)
    1508:	00010000 	andeq	r0, r1, r0
    150c:	00000000 	andeq	r0, r0, r0
    1510:	03000000 	movweq	r0, #0
    1514:	9f0c7200 	svcls	0x000c7200
	...
    1520:	00520001 	subseq	r0, r2, r1
    1524:	00000000 	andeq	r0, r0, r0
    1528:	01000000 	mrseq	r0, (UNDEF: 0)
    152c:	00000001 	andeq	r0, r0, r1
    1530:	00000000 	andeq	r0, r0, r0
    1534:	53000100 	movwpl	r0, #256	; 0x100
	...
    1540:	00000100 	andeq	r0, r0, r0, lsl #2
    1544:	00000000 	andeq	r0, r0, r0
    1548:	00010000 	andeq	r0, r1, r0
    154c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    155c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1568:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    156c:	00000008 	andeq	r0, r0, r8
	...
    1580:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    158c:	01f30004 	mvnseq	r0, r4
    1590:	00009f50 	andeq	r9, r0, r0, asr pc
    1594:	00000000 	andeq	r0, r0, r0
    1598:	00010000 	andeq	r0, r1, r0
	...
    15a4:	00020000 	andeq	r0, r2, r0
    15a8:	00003870 	andeq	r3, r0, r0, ror r8
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	00010000 	andeq	r0, r1, r0
    15b4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    15c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    15d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    15d4:	00000008 	andeq	r0, r0, r8
	...
    15e8:	01000000 	mrseq	r0, (UNDEF: 0)
    15ec:	00005000 	andeq	r5, r0, r0
    15f0:	00000000 	andeq	r0, r0, r0
    15f4:	00010000 	andeq	r0, r1, r0
    15f8:	00000053 	andeq	r0, r0, r3, asr r0
    15fc:	00000000 	andeq	r0, r0, r0
    1600:	f3000400 	vshl.u8	d0, d0, d0
    1604:	009f5001 	addseq	r5, pc, r1
	...
    1618:	01000000 	mrseq	r0, (UNDEF: 0)
    161c:	00005000 	andeq	r5, r0, r0
    1620:	00000000 	andeq	r0, r0, r0
    1624:	00010000 	andeq	r0, r1, r0
    1628:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1638:	01000000 	mrseq	r0, (UNDEF: 0)
    163c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1648:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1654:	14720003 	ldrbtne	r0, [r2], #-3
    1658:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    165c:	00000000 	andeq	r0, r0, r0
    1660:	53000100 	movwpl	r0, #256	; 0x100
	...
    166c:	14720003 	ldrbtne	r0, [r2], #-3
    1670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1674:	00000000 	andeq	r0, r0, r0
    1678:	00010000 	andeq	r0, r1, r0
    167c:	00000000 	andeq	r0, r0, r0
    1680:	01000000 	mrseq	r0, (UNDEF: 0)
    1684:	00005300 	andeq	r5, r0, r0, lsl #6
    1688:	00000000 	andeq	r0, r0, r0
    168c:	00010000 	andeq	r0, r1, r0
    1690:	00000100 	andeq	r0, r0, r0, lsl #2
    1694:	00000000 	andeq	r0, r0, r0
    1698:	00030000 	andeq	r0, r3, r0
    169c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    16a0:	00000000 	andeq	r0, r0, r0
    16a4:	01000000 	mrseq	r0, (UNDEF: 0)
    16a8:	00005200 	andeq	r5, r0, r0, lsl #4
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    16bc:	00530001 	subseq	r0, r3, r1
	...
    16c8:	00000001 	andeq	r0, r0, r1
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    16e4:	00010000 	andeq	r0, r1, r0
    16e8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    16f4:	00010000 	andeq	r0, r1, r0
    16f8:	00000000 	andeq	r0, r0, r0
    16fc:	03000000 	movweq	r0, #0
    1700:	9f0c7200 	svcls	0x000c7200
	...
    170c:	00530001 	subseq	r0, r3, r1
    1710:	00000000 	andeq	r0, r0, r0
    1714:	03000000 	movweq	r0, #0
    1718:	9f0c7200 	svcls	0x000c7200
	...
    1724:	00000100 	andeq	r0, r0, r0, lsl #2
    1728:	00000000 	andeq	r0, r0, r0
    172c:	00010000 	andeq	r0, r1, r0
    1730:	00000053 	andeq	r0, r0, r3, asr r0
    1734:	00000000 	andeq	r0, r0, r0
    1738:	00000100 	andeq	r0, r0, r0, lsl #2
    173c:	00000001 	andeq	r0, r0, r1
    1740:	00000000 	andeq	r0, r0, r0
    1744:	72000300 	andvc	r0, r0, #0, 6
    1748:	00009f0c 	andeq	r9, r0, ip, lsl #30
    174c:	00000000 	andeq	r0, r0, r0
    1750:	00010000 	andeq	r0, r1, r0
    1754:	00000052 	andeq	r0, r0, r2, asr r0
    1758:	00000000 	andeq	r0, r0, r0
    175c:	00010100 	andeq	r0, r1, r0, lsl #2
    1760:	00000000 	andeq	r0, r0, r0
    1764:	01000000 	mrseq	r0, (UNDEF: 0)
    1768:	00005300 	andeq	r5, r0, r0, lsl #6
    176c:	00000000 	andeq	r0, r0, r0
    1770:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    177c:	00510001 	subseq	r0, r1, r1
	...
    1790:	01000000 	mrseq	r0, (UNDEF: 0)
    1794:	00005000 	andeq	r5, r0, r0
    1798:	00000000 	andeq	r0, r0, r0
    179c:	00040000 	andeq	r0, r4, r0
    17a0:	9f5001f3 	svcls	0x005001f3
	...
    17b8:	00500001 	subseq	r0, r0, r1
    17bc:	00000000 	andeq	r0, r0, r0
    17c0:	04000000 	streq	r0, [r0], #-0
    17c4:	5001f300 	andpl	pc, r1, r0, lsl #6
    17c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17cc:	00000000 	andeq	r0, r0, r0
    17d0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    17dc:	30000200 	andcc	r0, r0, r0, lsl #4
    17e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    17f4:	00000002 	andeq	r0, r0, r2
	...
    1800:	9f300002 	svcls	0x00300002
	...
    180c:	00500001 	subseq	r0, r0, r1
	...
    1824:	01000000 	mrseq	r0, (UNDEF: 0)
    1828:	00005000 	andeq	r5, r0, r0
    182c:	00000000 	andeq	r0, r0, r0
    1830:	00040000 	andeq	r0, r4, r0
    1834:	9f5001f3 	svcls	0x005001f3
	...
    1840:	00500001 	subseq	r0, r0, r1
    1844:	00000000 	andeq	r0, r0, r0
    1848:	04000000 	streq	r0, [r0], #-0
    184c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1850:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1854:	00000000 	andeq	r0, r0, r0
    1858:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1868:	30000200 	andcc	r0, r0, r0, lsl #4
    186c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1870:	00000000 	andeq	r0, r0, r0
    1874:	53000100 	movwpl	r0, #256	; 0x100
	...
    1880:	0c720002 	ldcleq	0, cr0, [r2], #-8
	...
    188c:	9f300002 	svcls	0x00300002
	...
    18a8:	00500001 	subseq	r0, r0, r1
    18ac:	00000000 	andeq	r0, r0, r0
    18b0:	04000000 	streq	r0, [r0], #-0
    18b4:	5001f300 	andpl	pc, r1, r0, lsl #6
    18b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    18cc:	01f30004 	mvnseq	r0, r4
    18d0:	00009f50 	andeq	r9, r0, r0, asr pc
    18d4:	00000000 	andeq	r0, r0, r0
    18d8:	00020000 	andeq	r0, r2, r0
	...
    18e8:	00020000 	andeq	r0, r2, r0
    18ec:	00009f30 	andeq	r9, r0, r0, lsr pc
    18f0:	00000000 	andeq	r0, r0, r0
    18f4:	00010000 	andeq	r0, r1, r0
    18f8:	00000053 	andeq	r0, r0, r3, asr r0
    18fc:	00000000 	andeq	r0, r0, r0
    1900:	72000200 	andvc	r0, r0, #0, 4
    1904:	0000000c 	andeq	r0, r0, ip
    1908:	00000000 	andeq	r0, r0, r0
    190c:	30000200 	andcc	r0, r0, r0, lsl #4
    1910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1920:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    192c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1930:	00000008 	andeq	r0, r0, r8
	...
    1944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1950:	00540001 	subseq	r0, r4, r1
	...
    1964:	53000100 	movwpl	r0, #256	; 0x100
	...
    1974:	00000100 	andeq	r0, r0, r0, lsl #2
    1978:	00000000 	andeq	r0, r0, r0
    197c:	00030000 	andeq	r0, r3, r0
    1980:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1984:	00000000 	andeq	r0, r0, r0
    1988:	01000000 	mrseq	r0, (UNDEF: 0)
    198c:	00005300 	andeq	r5, r0, r0, lsl #6
    1990:	00000000 	andeq	r0, r0, r0
    1994:	00030000 	andeq	r0, r3, r0
    1998:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    19a4:	00000001 	andeq	r0, r0, r1
    19a8:	00000000 	andeq	r0, r0, r0
    19ac:	53000100 	movwpl	r0, #256	; 0x100
	...
    19b8:	01000001 	tsteq	r0, r1
	...
    19c4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    19c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    19cc:	00000000 	andeq	r0, r0, r0
    19d0:	52000100 	andpl	r0, r0, #0, 2
	...
    19dc:	00000101 	andeq	r0, r0, r1, lsl #2
    19e0:	00000000 	andeq	r0, r0, r0
    19e4:	00010000 	andeq	r0, r1, r0
    19e8:	00000053 	andeq	r0, r0, r3, asr r0
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	00010000 	andeq	r0, r1, r0
    19f4:	00000000 	andeq	r0, r0, r0
    19f8:	01000000 	mrseq	r0, (UNDEF: 0)
    19fc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1a0c:	00020000 	andeq	r0, r2, r0
    1a10:	0000007d 	andeq	r0, r0, sp, ror r0
    1a14:	00000000 	andeq	r0, r0, r0
    1a18:	00020000 	andeq	r0, r2, r0
    1a1c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1a30:	00010000 	andeq	r0, r1, r0
    1a34:	00000050 	andeq	r0, r0, r0, asr r0
    1a38:	00000000 	andeq	r0, r0, r0
    1a3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    1a50:	00010000 	andeq	r0, r1, r0
    1a54:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1a60:	00010000 	andeq	r0, r1, r0
    1a64:	00000000 	andeq	r0, r0, r0
    1a68:	03000000 	movweq	r0, #0
    1a6c:	9f0c7200 	svcls	0x000c7200
	...
    1a78:	00530001 	subseq	r0, r3, r1
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	03000000 	movweq	r0, #0
    1a84:	9f0c7200 	svcls	0x000c7200
	...
    1a90:	00000100 	andeq	r0, r0, r0, lsl #2
    1a94:	00000000 	andeq	r0, r0, r0
    1a98:	00010000 	andeq	r0, r1, r0
    1a9c:	00000053 	andeq	r0, r0, r3, asr r0
    1aa0:	00000000 	andeq	r0, r0, r0
    1aa4:	00000100 	andeq	r0, r0, r0, lsl #2
    1aa8:	00000001 	andeq	r0, r0, r1
    1aac:	00000000 	andeq	r0, r0, r0
    1ab0:	72000300 	andvc	r0, r0, #0, 6
    1ab4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1ab8:	00000000 	andeq	r0, r0, r0
    1abc:	00010000 	andeq	r0, r1, r0
    1ac0:	00000052 	andeq	r0, r0, r2, asr r0
    1ac4:	00000000 	andeq	r0, r0, r0
    1ac8:	00010100 	andeq	r0, r1, r0, lsl #2
    1acc:	00000000 	andeq	r0, r0, r0
    1ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ad4:	00005300 	andeq	r5, r0, r0, lsl #6
    1ad8:	00000000 	andeq	r0, r0, r0
    1adc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1ae8:	00510001 	subseq	r0, r1, r1
	...
    1af8:	02000000 	andeq	r0, r0, #0
    1afc:	00007d00 	andeq	r7, r0, r0, lsl #26
    1b00:	00000000 	andeq	r0, r0, r0
    1b04:	02000000 	andeq	r0, r0, #0
    1b08:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1b1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b20:	00005000 	andeq	r5, r0, r0
    1b24:	00000000 	andeq	r0, r0, r0
    1b28:	00010000 	andeq	r0, r1, r0
    1b2c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b40:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1b4c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1b58:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1b5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	53000100 	movwpl	r0, #256	; 0x100
	...
    1b70:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1b74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b78:	00000000 	andeq	r0, r0, r0
    1b7c:	00010000 	andeq	r0, r1, r0
    1b80:	00000000 	andeq	r0, r0, r0
    1b84:	01000000 	mrseq	r0, (UNDEF: 0)
    1b88:	00005300 	andeq	r5, r0, r0, lsl #6
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	00010000 	andeq	r0, r1, r0
    1b94:	00000100 	andeq	r0, r0, r0, lsl #2
    1b98:	00000000 	andeq	r0, r0, r0
    1b9c:	00030000 	andeq	r0, r3, r0
    1ba0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1ba4:	00000000 	andeq	r0, r0, r0
    1ba8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bac:	00005200 	andeq	r5, r0, r0, lsl #4
    1bb0:	00000000 	andeq	r0, r0, r0
    1bb4:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1bc0:	00530001 	subseq	r0, r3, r1
	...
    1bcc:	00000001 	andeq	r0, r0, r1
    1bd0:	00000000 	andeq	r0, r0, r0
    1bd4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1be0:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    1be4:	08000e92 	stmdaeq	r0, {r1, r4, r7, r9, sl, fp}
    1be8:	007d0002 	rsbseq	r0, sp, r2
    1bec:	08000e92 	stmdaeq	r0, {r1, r4, r7, r9, sl, fp}
    1bf0:	08000e94 	stmdaeq	r0, {r2, r4, r7, r9, sl, fp}
    1bf4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    1bf8:	08000e94 	stmdaeq	r0, {r2, r4, r7, r9, sl, fp}
    1bfc:	08000ee2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, fp}
    1c00:	187d0002 	ldmdane	sp!, {r1}^
    1c04:	08000ee2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, fp}
    1c08:	08000ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp}
    1c0c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    1c10:	08000ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp}
    1c14:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
    1c18:	187d0002 	ldmdane	sp!, {r1}^
	...
    1c28:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    1c2c:	08000e9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, fp}
    1c30:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    1c34:	1808000e 	stmdane	r8, {r1, r2, r3}
    1c38:	01080011 	tsteq	r8, r1, lsl r0
    1c3c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    1c54:	08000e9a 	stmdaeq	r0, {r1, r3, r4, r7, r9, sl, fp}
    1c58:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}
    1c5c:	e4530001 	ldrb	r0, [r3], #-1
    1c60:	e908000e 	stmdb	r8, {r1, r2, r3}
    1c64:	0108000e 	tsteq	r8, lr
    1c68:	0eec5300 	cdpeq	3, 14, cr5, cr12, cr0, {0}
    1c6c:	0f480800 	svceq	0x00480800
    1c70:	00010800 	andeq	r0, r1, r0, lsl #16
    1c74:	000f9c53 	andeq	r9, pc, r3, asr ip	; <UNPREDICTABLE>
    1c78:	000fa108 	andeq	sl, pc, r8, lsl #2
    1c7c:	53000108 	movwpl	r0, #264	; 0x108
    1c80:	08000fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp}
    1c84:	08000fd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, sl, fp}
    1c88:	04530001 	ldrbeq	r0, [r3], #-1
    1c8c:	09080011 	stmdbeq	r8, {r0, r4}
    1c90:	01080011 	tsteq	r8, r1, lsl r0
    1c94:	110c5300 	mrsne	r5, LR_mon
    1c98:	11110800 	tstne	r1, r0, lsl #16
    1c9c:	00010800 	andeq	r0, r1, r0, lsl #16
    1ca0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1cb8:	000e9c00 	andeq	r9, lr, r0, lsl #24
    1cbc:	000ee008 	andeq	lr, lr, r8
    1cc0:	50000108 	andpl	r0, r0, r8, lsl #2
    1cc4:	08000ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp}
    1cc8:	08000ee6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, sl, fp}
    1ccc:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    1cd0:	4808000e 	stmdami	r8, {r1, r2, r3}
    1cd4:	0108000f 	tsteq	r8, pc
    1cd8:	0f9c5000 	svceq	0x009c5000
    1cdc:	0f9e0800 	svceq	0x009e0800
    1ce0:	00010800 	andeq	r0, r1, r0, lsl #16
    1ce4:	000fc050 	andeq	ip, pc, r0, asr r0	; <UNPREDICTABLE>
    1ce8:	00107208 	andseq	r7, r0, r8, lsl #4
    1cec:	50000108 	andpl	r0, r0, r8, lsl #2
    1cf0:	0800108c 	stmdaeq	r0, {r2, r3, r7, ip}
    1cf4:	080010a6 	stmdaeq	r0, {r1, r2, r5, r7, ip}
    1cf8:	04500001 	ldrbeq	r0, [r0], #-1
    1cfc:	06080011 			; <UNDEFINED> instruction: 0x06080011
    1d00:	01080011 	tsteq	r8, r1, lsl r0
    1d04:	110c5000 	mrsne	r5, (UNDEF: 12)
    1d08:	110e0800 	tstne	lr, r0, lsl #16
    1d0c:	00010800 	andeq	r0, r1, r0, lsl #16
    1d10:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1d1c:	000e9e00 	andeq	r9, lr, r0, lsl #28
    1d20:	000eb608 	andeq	fp, lr, r8, lsl #12
    1d24:	51000108 	tstpl	r0, r8, lsl #2
    1d28:	08000ee4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl, fp}
    1d2c:	08000ee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp}
    1d30:	00510001 	subseq	r0, r1, r1
    1d34:	00000000 	andeq	r0, r0, r0
    1d38:	01000000 	mrseq	r0, (UNDEF: 0)
    1d3c:	00000303 	andeq	r0, r0, r3, lsl #6
    1d40:	000e9e00 	andeq	r9, lr, r0, lsl #28
    1d44:	000e9e08 	andeq	r9, lr, r8, lsl #28
    1d48:	30000208 	andcc	r0, r0, r8, lsl #4
    1d4c:	000e9e9f 	muleq	lr, pc, lr	; <UNPREDICTABLE>
    1d50:	000ea208 	andeq	sl, lr, r8, lsl #4
    1d54:	73000508 	movwvc	r0, #1288	; 0x508
    1d58:	9f1a3f00 	svcls	0x001a3f00
    1d5c:	08000ea2 	stmdaeq	r0, {r1, r5, r7, r9, sl, fp}
    1d60:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
    1d64:	00550001 	subseq	r0, r5, r1
    1d68:	00000000 	andeq	r0, r0, r0
    1d6c:	02000000 	andeq	r0, r0, #0
	...
    1d78:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    1d7c:	e008000e 	and	r0, r8, lr
    1d80:	0208000e 	andeq	r0, r8, #14
    1d84:	e49f3000 	ldr	r3, [pc], #0	; 1d8c <_Min_Heap_Size+0x158c>
    1d88:	5008000e 	andpl	r0, r8, lr
    1d8c:	0208000f 	andeq	r0, r8, #15
    1d90:	509f3000 	addspl	r3, pc, r0
    1d94:	5f08000f 	svcpl	0x0008000f
    1d98:	0808000f 	stmdaeq	r8, {r0, r1, r2, r3}
    1d9c:	30007300 	andcc	r7, r0, r0, lsl #6
    1da0:	1aff082e 	bne	fffc3e60 <_estack+0xdffc2c28>
    1da4:	000f9c9f 	muleq	pc, pc, ip	; <UNPREDICTABLE>
    1da8:	000fa408 	andeq	sl, pc, r8, lsl #8
    1dac:	30000208 	andcc	r0, r0, r8, lsl #4
    1db0:	000fb49f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    1db4:	000fb908 	andeq	fp, pc, r8, lsl #18
    1db8:	73000808 	movwvc	r0, #2056	; 0x808
    1dbc:	082e3000 	stmdaeq	lr!, {ip, sp}
    1dc0:	c09f1aff 			; <UNDEFINED> instruction: 0xc09f1aff
    1dc4:	1808000f 	stmdane	r8, {r0, r1, r2, r3}
    1dc8:	02080011 	andeq	r0, r8, #17
    1dcc:	009f3000 	addseq	r3, pc, r0
	...
    1dd8:	000f7800 	andeq	r7, pc, r0, lsl #16
    1ddc:	000f8408 	andeq	r8, pc, r8, lsl #8
    1de0:	53000108 	movwpl	r0, #264	; 0x108
	...
    1df0:	0f6c0100 	svceq	0x006c0100
    1df4:	0f700800 	svceq	0x00700800
    1df8:	00030800 	andeq	r0, r3, r0, lsl #16
    1dfc:	709f1472 	addsvc	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1e00:	7408000f 	strvc	r0, [r8], #-15
    1e04:	0108000f 	tsteq	r8, pc
    1e08:	0f745300 	svceq	0x00745300
    1e0c:	0f740800 	svceq	0x00740800
    1e10:	00030800 	andeq	r0, r3, r0, lsl #16
    1e14:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1e20:	000f7401 	andeq	r7, pc, r1, lsl #8
    1e24:	000f7408 	andeq	r7, pc, r8, lsl #8
    1e28:	53000108 	movwpl	r0, #264	; 0x108
	...
    1e34:	01000001 	tsteq	r0, r1
    1e38:	08000f78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, fp}
    1e3c:	08000f7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl, fp}
    1e40:	14720003 	ldrbtne	r0, [r2], #-3
    1e44:	000f7a9f 	muleq	pc, pc, sl	; <UNPREDICTABLE>
    1e48:	000f7e08 	andeq	r7, pc, r8, lsl #28
    1e4c:	52000108 	andpl	r0, r0, #8, 2
	...
    1e58:	0f780101 	svceq	0x00780101
    1e5c:	0f7e0800 	svceq	0x007e0800
    1e60:	00010800 	andeq	r0, r1, r0, lsl #16
    1e64:	00000053 	andeq	r0, r0, r3, asr r0
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    1e70:	7e08000f 	cdpvc	0, 0, cr0, cr8, cr15, {0}
    1e74:	0108000f 	tsteq	r8, pc
    1e78:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1e84:	0fee0000 	svceq	0x00ee0000
    1e88:	10000800 	andne	r0, r0, r0, lsl #16
    1e8c:	00010800 	andeq	r0, r1, r0, lsl #16
    1e90:	00100053 	andseq	r0, r0, r3, asr r0
    1e94:	00105408 	andseq	r5, r0, r8, lsl #8
    1e98:	74000208 	strvc	r0, [r0], #-520	; 0xfffffdf8
    1e9c:	0000002e 	andeq	r0, r0, lr, lsr #32
    1ea0:	00000000 	andeq	r0, r0, r0
    1ea4:	14000000 	strne	r0, [r0], #-0
    1ea8:	1e080010 	mcrne	0, 0, r0, cr8, cr0, {0}
    1eac:	01080010 	tsteq	r8, r0, lsl r0
    1eb0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1ebc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ec0:	08001008 	stmdaeq	r0, {r3, ip}
    1ec4:	0800100c 	stmdaeq	r0, {r2, r3, ip}
    1ec8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1ecc:	00100c9f 	mulseq	r0, pc, ip	; <UNPREDICTABLE>
    1ed0:	00101008 	andseq	r1, r0, r8
    1ed4:	53000108 	movwpl	r0, #264	; 0x108
    1ed8:	08001010 	stmdaeq	r0, {r4, ip}
    1edc:	08001010 	stmdaeq	r0, {r4, ip}
    1ee0:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1ee4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ee8:	00000000 	andeq	r0, r0, r0
    1eec:	10010000 	andne	r0, r1, r0
    1ef0:	10080010 	andne	r0, r8, r0, lsl r0
    1ef4:	01080010 	tsteq	r8, r0, lsl r0
    1ef8:	00005300 	andeq	r5, r0, r0, lsl #6
    1efc:	00000000 	andeq	r0, r0, r0
    1f00:	00010000 	andeq	r0, r1, r0
    1f04:	10140100 	andsne	r0, r4, r0, lsl #2
    1f08:	10160800 	andsne	r0, r6, r0, lsl #16
    1f0c:	00030800 	andeq	r0, r3, r0, lsl #16
    1f10:	169f0c72 			; <UNDEFINED> instruction: 0x169f0c72
    1f14:	1a080010 	bne	201f5c <_Min_Heap_Size+0x20175c>
    1f18:	01080010 	tsteq	r8, r0, lsl r0
    1f1c:	00005200 	andeq	r5, r0, r0, lsl #4
    1f20:	00000000 	andeq	r0, r0, r0
    1f24:	01010000 	mrseq	r0, (UNDEF: 1)
    1f28:	08001014 	stmdaeq	r0, {r2, r4, ip}
    1f2c:	0800101a 	stmdaeq	r0, {r1, r3, r4, ip}
    1f30:	00530001 	subseq	r0, r3, r1
	...
    1f3c:	00101a01 	andseq	r1, r0, r1, lsl #20
    1f40:	00101a08 	andseq	r1, r0, r8, lsl #20
    1f44:	51000108 	tstpl	r0, r8, lsl #2
	...
    1f50:	102c0000 	eorne	r0, ip, r0
    1f54:	10360800 	eorsne	r0, r6, r0, lsl #16
    1f58:	00010800 	andeq	r0, r1, r0, lsl #16
    1f5c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1f68:	20010000 	andcs	r0, r1, r0
    1f6c:	24080010 	strcs	r0, [r8], #-16
    1f70:	03080010 	movweq	r0, #32784	; 0x8010
    1f74:	9f147200 	svcls	0x00147200
    1f78:	08001024 	stmdaeq	r0, {r2, r5, ip}
    1f7c:	08001028 	stmdaeq	r0, {r3, r5, ip}
    1f80:	28530001 	ldmdacs	r3, {r0}^
    1f84:	28080010 	stmdacs	r8, {r4}
    1f88:	03080010 	movweq	r0, #32784	; 0x8010
    1f8c:	9f147200 	svcls	0x00147200
	...
    1f98:	10280100 	eorne	r0, r8, r0, lsl #2
    1f9c:	10280800 	eorne	r0, r8, r0, lsl #16
    1fa0:	00010800 	andeq	r0, r1, r0, lsl #16
    1fa4:	00000053 	andeq	r0, r0, r3, asr r0
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	00000100 	andeq	r0, r0, r0, lsl #2
    1fb0:	00102c01 	andseq	r2, r0, r1, lsl #24
    1fb4:	00102e08 	andseq	r2, r0, r8, lsl #28
    1fb8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    1fbc:	102e9f14 	eorne	r9, lr, r4, lsl pc
    1fc0:	10320800 	eorsne	r0, r2, r0, lsl #16
    1fc4:	00010800 	andeq	r0, r1, r0, lsl #16
    1fc8:	00000052 	andeq	r0, r0, r2, asr r0
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	2c010100 	stfcss	f0, [r1], {-0}
    1fd4:	32080010 	andcc	r0, r8, #16
    1fd8:	01080010 	tsteq	r8, r0, lsl r0
    1fdc:	00005300 	andeq	r5, r0, r0, lsl #6
    1fe0:	00000000 	andeq	r0, r0, r0
    1fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fe8:	08001032 	stmdaeq	r0, {r1, r4, r5, ip}
    1fec:	08001032 	stmdaeq	r0, {r1, r4, r5, ip}
    1ff0:	00510001 	subseq	r0, r1, r1
	...
    1ffc:	00104400 	andseq	r4, r0, r0, lsl #8
    2000:	00105008 	andseq	r5, r0, r8
    2004:	53000108 	movwpl	r0, #264	; 0x108
	...
    2014:	10380100 	eorsne	r0, r8, r0, lsl #2
    2018:	103c0800 	eorsne	r0, ip, r0, lsl #16
    201c:	00030800 	andeq	r0, r3, r0, lsl #16
    2020:	3c9f1472 	cfldrscc	mvf1, [pc], {114}	; 0x72
    2024:	40080010 	andmi	r0, r8, r0, lsl r0
    2028:	01080010 	tsteq	r8, r0, lsl r0
    202c:	10405300 	subne	r5, r0, r0, lsl #6
    2030:	10400800 	subne	r0, r0, r0, lsl #16
    2034:	00030800 	andeq	r0, r3, r0, lsl #16
    2038:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2044:	00104001 	andseq	r4, r0, r1
    2048:	00104008 	andseq	r4, r0, r8
    204c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2058:	01000001 	tsteq	r0, r1
    205c:	08001044 	stmdaeq	r0, {r2, r6, ip}
    2060:	08001046 	stmdaeq	r0, {r1, r2, r6, ip}
    2064:	14720003 	ldrbtne	r0, [r2], #-3
    2068:	0010469f 	mulseq	r0, pc, r6	; <UNPREDICTABLE>
    206c:	00104a08 	andseq	r4, r0, r8, lsl #20
    2070:	52000108 	andpl	r0, r0, #8, 2
	...
    207c:	10440101 	subne	r0, r4, r1, lsl #2
    2080:	104a0800 	subne	r0, sl, r0, lsl #16
    2084:	00010800 	andeq	r0, r1, r0, lsl #16
    2088:	00000053 	andeq	r0, r0, r3, asr r0
    208c:	00000000 	andeq	r0, r0, r0
    2090:	4a010000 	bmi	42098 <_Min_Heap_Size+0x41898>
    2094:	4a080010 	bmi	2020dc <_Min_Heap_Size+0x2018dc>
    2098:	01080010 	tsteq	r8, r0, lsl r0
    209c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    20a8:	08001066 	stmdaeq	r0, {r1, r2, r5, r6, ip}
    20ac:	08001075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip}
    20b0:	00530001 	subseq	r0, r3, r1
	...
    20c0:	00105a01 	andseq	r5, r0, r1, lsl #20
    20c4:	00105e08 	andseq	r5, r0, r8, lsl #28
    20c8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    20cc:	105e9f0c 	subsne	r9, lr, ip, lsl #30
    20d0:	10620800 	rsbne	r0, r2, r0, lsl #16
    20d4:	00010800 	andeq	r0, r1, r0, lsl #16
    20d8:	00106253 	andseq	r6, r0, r3, asr r2
    20dc:	00106208 	andseq	r6, r0, r8, lsl #4
    20e0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    20e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    20e8:	00000000 	andeq	r0, r0, r0
    20ec:	01000000 	mrseq	r0, (UNDEF: 0)
    20f0:	08001062 	stmdaeq	r0, {r1, r5, r6, ip}
    20f4:	08001062 	stmdaeq	r0, {r1, r5, r6, ip}
    20f8:	00530001 	subseq	r0, r3, r1
    20fc:	00000000 	andeq	r0, r0, r0
    2100:	01000000 	mrseq	r0, (UNDEF: 0)
    2104:	66010000 	strvs	r0, [r1], -r0
    2108:	68080010 	stmdavs	r8, {r4}
    210c:	03080010 	movweq	r0, #32784	; 0x8010
    2110:	9f0c7200 	svcls	0x000c7200
    2114:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
    2118:	0800106c 	stmdaeq	r0, {r2, r3, r5, r6, ip}
    211c:	00520001 	subseq	r0, r2, r1
    2120:	00000000 	andeq	r0, r0, r0
    2124:	01000000 	mrseq	r0, (UNDEF: 0)
    2128:	00106601 	andseq	r6, r0, r1, lsl #12
    212c:	00106c08 	andseq	r6, r0, r8, lsl #24
    2130:	53000108 	movwpl	r0, #264	; 0x108
	...
    213c:	106c0100 	rsbne	r0, ip, r0, lsl #2
    2140:	106c0800 	rsbne	r0, ip, r0, lsl #16
    2144:	00010800 	andeq	r0, r1, r0, lsl #16
    2148:	00000051 	andeq	r0, r0, r1, asr r0
    214c:	00000000 	andeq	r0, r0, r0
    2150:	96000000 	strls	r0, [r0], -r0
    2154:	01080010 	tsteq	r8, r0, lsl r0
    2158:	01080011 	tsteq	r8, r1, lsl r0
    215c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2168:	080010b4 	stmdaeq	r0, {r2, r4, r5, r7, ip}
    216c:	080010be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, ip}
    2170:	00530001 	subseq	r0, r3, r1
	...
    2180:	0010a801 	andseq	sl, r0, r1, lsl #16
    2184:	0010ac08 	andseq	sl, r0, r8, lsl #24
    2188:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    218c:	10ac9f0c 	adcne	r9, ip, ip, lsl #30
    2190:	10b00800 	adcsne	r0, r0, r0, lsl #16
    2194:	00010800 	andeq	r0, r1, r0, lsl #16
    2198:	0010b053 	andseq	fp, r0, r3, asr r0
    219c:	0010b008 	andseq	fp, r0, r8
    21a0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    21a4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    21a8:	00000000 	andeq	r0, r0, r0
    21ac:	01000000 	mrseq	r0, (UNDEF: 0)
    21b0:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
    21b4:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
    21b8:	00530001 	subseq	r0, r3, r1
    21bc:	00000000 	andeq	r0, r0, r0
    21c0:	01000000 	mrseq	r0, (UNDEF: 0)
    21c4:	b4010000 	strlt	r0, [r1], #-0
    21c8:	b6080010 			; <UNDEFINED> instruction: 0xb6080010
    21cc:	03080010 	movweq	r0, #32784	; 0x8010
    21d0:	9f0c7200 	svcls	0x000c7200
    21d4:	080010b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, ip}
    21d8:	080010ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, ip}
    21dc:	00520001 	subseq	r0, r2, r1
    21e0:	00000000 	andeq	r0, r0, r0
    21e4:	01000000 	mrseq	r0, (UNDEF: 0)
    21e8:	0010b401 	andseq	fp, r0, r1, lsl #8
    21ec:	0010ba08 	andseq	fp, r0, r8, lsl #20
    21f0:	53000108 	movwpl	r0, #264	; 0x108
	...
    21fc:	10ba0100 	adcsne	r0, sl, r0, lsl #2
    2200:	10ba0800 	adcsne	r0, sl, r0, lsl #16
    2204:	00010800 	andeq	r0, r1, r0, lsl #16
    2208:	00000050 	andeq	r0, r0, r0, asr r0
    220c:	00000000 	andeq	r0, r0, r0
    2210:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2214:	d8080010 	stmdale	r8, {r4}
    2218:	01080010 	tsteq	r8, r0, lsl r0
    221c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2228:	01000000 	mrseq	r0, (UNDEF: 0)
    222c:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    2230:	080010c4 	stmdaeq	r0, {r2, r6, r7, ip}
    2234:	14720003 	ldrbtne	r0, [r2], #-3
    2238:	0010c49f 	mulseq	r0, pc, r4	; <UNPREDICTABLE>
    223c:	0010c808 	andseq	ip, r0, r8, lsl #16
    2240:	53000108 	movwpl	r0, #264	; 0x108
    2244:	080010c8 	stmdaeq	r0, {r3, r6, r7, ip}
    2248:	080010c8 	stmdaeq	r0, {r3, r6, r7, ip}
    224c:	14720003 	ldrbtne	r0, [r2], #-3
    2250:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2254:	00000000 	andeq	r0, r0, r0
    2258:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    225c:	c8080010 	stmdagt	r8, {r4}
    2260:	01080010 	tsteq	r8, r0, lsl r0
    2264:	00005300 	andeq	r5, r0, r0, lsl #6
    2268:	00000000 	andeq	r0, r0, r0
    226c:	00010000 	andeq	r0, r1, r0
    2270:	10cc0100 	sbcne	r0, ip, r0, lsl #2
    2274:	10ce0800 	sbcne	r0, lr, r0, lsl #16
    2278:	00030800 	andeq	r0, r3, r0, lsl #16
    227c:	ce9f1472 	mrcgt	4, 4, r1, cr15, cr2, {3}
    2280:	d2080010 	andle	r0, r8, #16
    2284:	01080010 	tsteq	r8, r0, lsl r0
    2288:	00005200 	andeq	r5, r0, r0, lsl #4
    228c:	00000000 	andeq	r0, r0, r0
    2290:	01010000 	mrseq	r0, (UNDEF: 1)
    2294:	080010cc 	stmdaeq	r0, {r2, r3, r6, r7, ip}
    2298:	080010d2 	stmdaeq	r0, {r1, r4, r6, r7, ip}
    229c:	00530001 	subseq	r0, r3, r1
	...
    22a8:	0010d201 	andseq	sp, r0, r1, lsl #4
    22ac:	0010d208 	andseq	sp, r0, r8, lsl #4
    22b0:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    22bc:	10ee0000 	rscne	r0, lr, r0
    22c0:	10fa0800 	rscsne	r0, sl, r0, lsl #16
    22c4:	00010800 	andeq	r0, r1, r0, lsl #16
    22c8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    22d4:	e2010000 	and	r0, r1, #0
    22d8:	e6080010 			; <UNDEFINED> instruction: 0xe6080010
    22dc:	03080010 	movweq	r0, #32784	; 0x8010
    22e0:	9f0c7200 	svcls	0x000c7200
    22e4:	080010e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, ip}
    22e8:	080010ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, ip}
    22ec:	ea530001 	b	14c22f8 <_Min_Heap_Size+0x14c1af8>
    22f0:	ea080010 	b	202338 <_Min_Heap_Size+0x201b38>
    22f4:	03080010 	movweq	r0, #32784	; 0x8010
    22f8:	9f0c7200 	svcls	0x000c7200
	...
    2304:	10ea0100 	rscne	r0, sl, r0, lsl #2
    2308:	10ea0800 	rscne	r0, sl, r0, lsl #16
    230c:	00010800 	andeq	r0, r1, r0, lsl #16
    2310:	00000053 	andeq	r0, r0, r3, asr r0
    2314:	00000000 	andeq	r0, r0, r0
    2318:	00000100 	andeq	r0, r0, r0, lsl #2
    231c:	0010ee01 	andseq	lr, r0, r1, lsl #28
    2320:	0010f008 	andseq	pc, r0, r8
    2324:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2328:	10f09f0c 	rscsne	r9, r0, ip, lsl #30
    232c:	10f40800 	rscsne	r0, r4, r0, lsl #16
    2330:	00010800 	andeq	r0, r1, r0, lsl #16
    2334:	00000052 	andeq	r0, r0, r2, asr r0
    2338:	00000000 	andeq	r0, r0, r0
    233c:	ee010100 	adfs	f0, f1, f0
    2340:	f4080010 	vst4.8	{d0-d3}, [r8 :64], r0
    2344:	01080010 	tsteq	r8, r0, lsl r0
    2348:	00005300 	andeq	r5, r0, r0, lsl #6
    234c:	00000000 	andeq	r0, r0, r0
    2350:	01000000 	mrseq	r0, (UNDEF: 0)
    2354:	080010f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip}
    2358:	080010f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip}
    235c:	00500001 	subseq	r0, r0, r1
	...
    236c:	02000000 	andeq	r0, r0, #0
    2370:	00007d00 	andeq	r7, r0, r0, lsl #26
    2374:	00000000 	andeq	r0, r0, r0
    2378:	02000000 	andeq	r0, r0, #0
    237c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    239c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    23a8:	00540001 	subseq	r0, r4, r1
    23ac:	00000000 	andeq	r0, r0, r0
    23b0:	01000000 	mrseq	r0, (UNDEF: 0)
    23b4:	00005000 	andeq	r5, r0, r0
    23b8:	00000000 	andeq	r0, r0, r0
    23bc:	00010000 	andeq	r0, r1, r0
    23c0:	00000054 	andeq	r0, r0, r4, asr r0
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    23d4:	00540001 	subseq	r0, r4, r1
    23d8:	00000000 	andeq	r0, r0, r0
    23dc:	04000000 	streq	r0, [r0], #-0
    23e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    23e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    23f4:	01000000 	mrseq	r0, (UNDEF: 0)
    23f8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2404:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2410:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2414:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2418:	00000000 	andeq	r0, r0, r0
    241c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2428:	0c720003 	ldcleq	0, cr0, [r2], #-12
    242c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2430:	00000000 	andeq	r0, r0, r0
    2434:	00010000 	andeq	r0, r1, r0
    2438:	00000000 	andeq	r0, r0, r0
    243c:	01000000 	mrseq	r0, (UNDEF: 0)
    2440:	00005300 	andeq	r5, r0, r0, lsl #6
    2444:	00000000 	andeq	r0, r0, r0
    2448:	00010000 	andeq	r0, r1, r0
    244c:	00000100 	andeq	r0, r0, r0, lsl #2
    2450:	00000000 	andeq	r0, r0, r0
    2454:	00030000 	andeq	r0, r3, r0
    2458:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    245c:	00000000 	andeq	r0, r0, r0
    2460:	01000000 	mrseq	r0, (UNDEF: 0)
    2464:	00005200 	andeq	r5, r0, r0, lsl #4
    2468:	00000000 	andeq	r0, r0, r0
    246c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2478:	00530001 	subseq	r0, r3, r1
	...
    2484:	00000001 	andeq	r0, r0, r1
    2488:	00000000 	andeq	r0, r0, r0
    248c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    24a0:	00010000 	andeq	r0, r1, r0
    24a4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    24b0:	00010000 	andeq	r0, r1, r0
    24b4:	00000000 	andeq	r0, r0, r0
    24b8:	03000000 	movweq	r0, #0
    24bc:	9f147200 	svcls	0x00147200
	...
    24c8:	00530001 	subseq	r0, r3, r1
    24cc:	00000000 	andeq	r0, r0, r0
    24d0:	03000000 	movweq	r0, #0
    24d4:	9f147200 	svcls	0x00147200
	...
    24e0:	00000100 	andeq	r0, r0, r0, lsl #2
    24e4:	00000000 	andeq	r0, r0, r0
    24e8:	00010000 	andeq	r0, r1, r0
    24ec:	00000053 	andeq	r0, r0, r3, asr r0
    24f0:	00000000 	andeq	r0, r0, r0
    24f4:	00000100 	andeq	r0, r0, r0, lsl #2
    24f8:	00000001 	andeq	r0, r0, r1
    24fc:	00000000 	andeq	r0, r0, r0
    2500:	72000300 	andvc	r0, r0, #0, 6
    2504:	00009f14 	andeq	r9, r0, r4, lsl pc
    2508:	00000000 	andeq	r0, r0, r0
    250c:	00010000 	andeq	r0, r1, r0
    2510:	00000052 	andeq	r0, r0, r2, asr r0
    2514:	00000000 	andeq	r0, r0, r0
    2518:	00010100 	andeq	r0, r1, r0, lsl #2
    251c:	00000000 	andeq	r0, r0, r0
    2520:	01000000 	mrseq	r0, (UNDEF: 0)
    2524:	00005300 	andeq	r5, r0, r0, lsl #6
    2528:	00000000 	andeq	r0, r0, r0
    252c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2538:	00510001 	subseq	r0, r1, r1
	...
    254c:	53000100 	movwpl	r0, #256	; 0x100
	...
    255c:	00000100 	andeq	r0, r0, r0, lsl #2
    2560:	00000000 	andeq	r0, r0, r0
    2564:	00030000 	andeq	r0, r3, r0
    2568:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    256c:	00000000 	andeq	r0, r0, r0
    2570:	01000000 	mrseq	r0, (UNDEF: 0)
    2574:	00005300 	andeq	r5, r0, r0, lsl #6
    2578:	00000000 	andeq	r0, r0, r0
    257c:	00030000 	andeq	r0, r3, r0
    2580:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    258c:	00000001 	andeq	r0, r0, r1
    2590:	00000000 	andeq	r0, r0, r0
    2594:	53000100 	movwpl	r0, #256	; 0x100
	...
    25a0:	01000001 	tsteq	r0, r1
	...
    25ac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    25b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    25b4:	00000000 	andeq	r0, r0, r0
    25b8:	52000100 	andpl	r0, r0, #0, 2
	...
    25c4:	00000101 	andeq	r0, r0, r1, lsl #2
    25c8:	00000000 	andeq	r0, r0, r0
    25cc:	00010000 	andeq	r0, r1, r0
    25d0:	00000053 	andeq	r0, r0, r3, asr r0
    25d4:	00000000 	andeq	r0, r0, r0
    25d8:	00010000 	andeq	r0, r1, r0
    25dc:	00000000 	andeq	r0, r0, r0
    25e0:	01000000 	mrseq	r0, (UNDEF: 0)
    25e4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    25f8:	00530001 	subseq	r0, r3, r1
	...
    2608:	00000001 	andeq	r0, r0, r1
    260c:	00000000 	andeq	r0, r0, r0
    2610:	72000300 	andvc	r0, r0, #0, 6
    2614:	00009f14 	andeq	r9, r0, r4, lsl pc
    2618:	00000000 	andeq	r0, r0, r0
    261c:	00010000 	andeq	r0, r1, r0
    2620:	00000053 	andeq	r0, r0, r3, asr r0
    2624:	00000000 	andeq	r0, r0, r0
    2628:	72000300 	andvc	r0, r0, #0, 6
    262c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2630:	00000000 	andeq	r0, r0, r0
    2634:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2640:	00530001 	subseq	r0, r3, r1
    2644:	00000000 	andeq	r0, r0, r0
    2648:	01000000 	mrseq	r0, (UNDEF: 0)
    264c:	00010000 	andeq	r0, r1, r0
    2650:	00000000 	andeq	r0, r0, r0
    2654:	03000000 	movweq	r0, #0
    2658:	9f147200 	svcls	0x00147200
	...
    2664:	00520001 	subseq	r0, r2, r1
    2668:	00000000 	andeq	r0, r0, r0
    266c:	01000000 	mrseq	r0, (UNDEF: 0)
    2670:	00000001 	andeq	r0, r0, r1
    2674:	00000000 	andeq	r0, r0, r0
    2678:	53000100 	movwpl	r0, #256	; 0x100
	...
    2684:	00000100 	andeq	r0, r0, r0, lsl #2
    2688:	00000000 	andeq	r0, r0, r0
    268c:	00010000 	andeq	r0, r1, r0
    2690:	00000051 	andeq	r0, r0, r1, asr r0
	...
    26a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    26ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    26b0:	00000008 	andeq	r0, r0, r8
	...
    26cc:	01000000 	mrseq	r0, (UNDEF: 0)
    26d0:	00005000 	andeq	r5, r0, r0
    26d4:	00000000 	andeq	r0, r0, r0
    26d8:	00010000 	andeq	r0, r1, r0
    26dc:	00000054 	andeq	r0, r0, r4, asr r0
    26e0:	00000000 	andeq	r0, r0, r0
    26e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    26f0:	00540001 	subseq	r0, r4, r1
    26f4:	00000000 	andeq	r0, r0, r0
    26f8:	01000000 	mrseq	r0, (UNDEF: 0)
    26fc:	00005000 	andeq	r5, r0, r0
    2700:	00000000 	andeq	r0, r0, r0
    2704:	00010000 	andeq	r0, r1, r0
    2708:	00000054 	andeq	r0, r0, r4, asr r0
    270c:	00000000 	andeq	r0, r0, r0
    2710:	f3000400 	vshl.u8	d0, d0, d0
    2714:	009f5001 	addseq	r5, pc, r1
	...
    2728:	53000100 	movwpl	r0, #256	; 0x100
	...
    2738:	00000100 	andeq	r0, r0, r0, lsl #2
    273c:	00000000 	andeq	r0, r0, r0
    2740:	00030000 	andeq	r0, r3, r0
    2744:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2748:	00000000 	andeq	r0, r0, r0
    274c:	01000000 	mrseq	r0, (UNDEF: 0)
    2750:	00005300 	andeq	r5, r0, r0, lsl #6
    2754:	00000000 	andeq	r0, r0, r0
    2758:	00030000 	andeq	r0, r3, r0
    275c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2768:	00000001 	andeq	r0, r0, r1
    276c:	00000000 	andeq	r0, r0, r0
    2770:	53000100 	movwpl	r0, #256	; 0x100
	...
    277c:	01000001 	tsteq	r0, r1
	...
    2788:	0c720003 	ldcleq	0, cr0, [r2], #-12
    278c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2790:	00000000 	andeq	r0, r0, r0
    2794:	52000100 	andpl	r0, r0, #0, 2
	...
    27a0:	00000101 	andeq	r0, r0, r1, lsl #2
    27a4:	00000000 	andeq	r0, r0, r0
    27a8:	00010000 	andeq	r0, r1, r0
    27ac:	00000053 	andeq	r0, r0, r3, asr r0
    27b0:	00000000 	andeq	r0, r0, r0
    27b4:	00010000 	andeq	r0, r1, r0
    27b8:	00000000 	andeq	r0, r0, r0
    27bc:	01000000 	mrseq	r0, (UNDEF: 0)
    27c0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    27d4:	00530001 	subseq	r0, r3, r1
	...
    27e4:	00000001 	andeq	r0, r0, r1
    27e8:	00000000 	andeq	r0, r0, r0
    27ec:	72000300 	andvc	r0, r0, #0, 6
    27f0:	00009f14 	andeq	r9, r0, r4, lsl pc
    27f4:	00000000 	andeq	r0, r0, r0
    27f8:	00010000 	andeq	r0, r1, r0
    27fc:	00000053 	andeq	r0, r0, r3, asr r0
    2800:	00000000 	andeq	r0, r0, r0
    2804:	72000300 	andvc	r0, r0, #0, 6
    2808:	00009f14 	andeq	r9, r0, r4, lsl pc
    280c:	00000000 	andeq	r0, r0, r0
    2810:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    281c:	00530001 	subseq	r0, r3, r1
    2820:	00000000 	andeq	r0, r0, r0
    2824:	01000000 	mrseq	r0, (UNDEF: 0)
    2828:	00010000 	andeq	r0, r1, r0
    282c:	00000000 	andeq	r0, r0, r0
    2830:	03000000 	movweq	r0, #0
    2834:	9f147200 	svcls	0x00147200
	...
    2840:	00520001 	subseq	r0, r2, r1
    2844:	00000000 	andeq	r0, r0, r0
    2848:	01000000 	mrseq	r0, (UNDEF: 0)
    284c:	00000001 	andeq	r0, r0, r1
    2850:	00000000 	andeq	r0, r0, r0
    2854:	53000100 	movwpl	r0, #256	; 0x100
	...
    2860:	00000100 	andeq	r0, r0, r0, lsl #2
    2864:	00000000 	andeq	r0, r0, r0
    2868:	00010000 	andeq	r0, r1, r0
    286c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    287c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2888:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    288c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    28a4:	01000000 	mrseq	r0, (UNDEF: 0)
    28a8:	00005000 	andeq	r5, r0, r0
    28ac:	00000000 	andeq	r0, r0, r0
    28b0:	00010000 	andeq	r0, r1, r0
    28b4:	00000054 	andeq	r0, r0, r4, asr r0
    28b8:	00000000 	andeq	r0, r0, r0
    28bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    28c8:	00540001 	subseq	r0, r4, r1
    28cc:	00000000 	andeq	r0, r0, r0
    28d0:	04000000 	streq	r0, [r0], #-0
    28d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    28d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    28dc:	00000000 	andeq	r0, r0, r0
    28e0:	00000100 	andeq	r0, r0, r0, lsl #2
    28e4:	00020101 	andeq	r0, r2, r1, lsl #2
	...
    28f0:	02000000 	andeq	r0, r0, #0
    28f4:	009f3100 	addseq	r3, pc, r0, lsl #2
    28f8:	00000000 	andeq	r0, r0, r0
    28fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2900:	00005500 	andeq	r5, r0, r0, lsl #10
    2904:	00000000 	andeq	r0, r0, r0
    2908:	00020000 	andeq	r0, r2, r0
    290c:	00009f31 	andeq	r9, r0, r1, lsr pc
    2910:	00000000 	andeq	r0, r0, r0
    2914:	00020000 	andeq	r0, r2, r0
    2918:	00009f31 	andeq	r9, r0, r1, lsr pc
    291c:	00000000 	andeq	r0, r0, r0
    2920:	00010000 	andeq	r0, r1, r0
    2924:	00000055 	andeq	r0, r0, r5, asr r0
	...
    2934:	01000000 	mrseq	r0, (UNDEF: 0)
    2938:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2944:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2950:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2954:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2958:	00000000 	andeq	r0, r0, r0
    295c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2968:	0c720003 	ldcleq	0, cr0, [r2], #-12
    296c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2970:	00000000 	andeq	r0, r0, r0
    2974:	00010000 	andeq	r0, r1, r0
    2978:	00000000 	andeq	r0, r0, r0
    297c:	01000000 	mrseq	r0, (UNDEF: 0)
    2980:	00005300 	andeq	r5, r0, r0, lsl #6
    2984:	00000000 	andeq	r0, r0, r0
    2988:	00010000 	andeq	r0, r1, r0
    298c:	00000100 	andeq	r0, r0, r0, lsl #2
    2990:	00000000 	andeq	r0, r0, r0
    2994:	00030000 	andeq	r0, r3, r0
    2998:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    299c:	00000000 	andeq	r0, r0, r0
    29a0:	01000000 	mrseq	r0, (UNDEF: 0)
    29a4:	00005200 	andeq	r5, r0, r0, lsl #4
    29a8:	00000000 	andeq	r0, r0, r0
    29ac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    29b8:	00530001 	subseq	r0, r3, r1
	...
    29c4:	00000001 	andeq	r0, r0, r1
    29c8:	00000000 	andeq	r0, r0, r0
    29cc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    29e0:	00010000 	andeq	r0, r1, r0
    29e4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    29f0:	00010000 	andeq	r0, r1, r0
    29f4:	00000000 	andeq	r0, r0, r0
    29f8:	03000000 	movweq	r0, #0
    29fc:	9f147200 	svcls	0x00147200
	...
    2a08:	00530001 	subseq	r0, r3, r1
    2a0c:	00000000 	andeq	r0, r0, r0
    2a10:	03000000 	movweq	r0, #0
    2a14:	9f147200 	svcls	0x00147200
	...
    2a20:	00000100 	andeq	r0, r0, r0, lsl #2
    2a24:	00000000 	andeq	r0, r0, r0
    2a28:	00010000 	andeq	r0, r1, r0
    2a2c:	00000053 	andeq	r0, r0, r3, asr r0
    2a30:	00000000 	andeq	r0, r0, r0
    2a34:	00000100 	andeq	r0, r0, r0, lsl #2
    2a38:	00000001 	andeq	r0, r0, r1
    2a3c:	00000000 	andeq	r0, r0, r0
    2a40:	72000300 	andvc	r0, r0, #0, 6
    2a44:	00009f14 	andeq	r9, r0, r4, lsl pc
    2a48:	00000000 	andeq	r0, r0, r0
    2a4c:	00010000 	andeq	r0, r1, r0
    2a50:	00000052 	andeq	r0, r0, r2, asr r0
    2a54:	00000000 	andeq	r0, r0, r0
    2a58:	00010100 	andeq	r0, r1, r0, lsl #2
    2a5c:	00000000 	andeq	r0, r0, r0
    2a60:	01000000 	mrseq	r0, (UNDEF: 0)
    2a64:	00005300 	andeq	r5, r0, r0, lsl #6
    2a68:	00000000 	andeq	r0, r0, r0
    2a6c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2a78:	00510001 	subseq	r0, r1, r1
	...
    2a8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a9c:	00000100 	andeq	r0, r0, r0, lsl #2
    2aa0:	00000000 	andeq	r0, r0, r0
    2aa4:	00030000 	andeq	r0, r3, r0
    2aa8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2aac:	00000000 	andeq	r0, r0, r0
    2ab0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ab4:	00005300 	andeq	r5, r0, r0, lsl #6
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	00030000 	andeq	r0, r3, r0
    2ac0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2acc:	00000001 	andeq	r0, r0, r1
    2ad0:	00000000 	andeq	r0, r0, r0
    2ad4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ae0:	01000001 	tsteq	r0, r1
	...
    2aec:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2af0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2af4:	00000000 	andeq	r0, r0, r0
    2af8:	52000100 	andpl	r0, r0, #0, 2
	...
    2b04:	00000101 	andeq	r0, r0, r1, lsl #2
    2b08:	00000000 	andeq	r0, r0, r0
    2b0c:	00010000 	andeq	r0, r1, r0
    2b10:	00000053 	andeq	r0, r0, r3, asr r0
    2b14:	00000000 	andeq	r0, r0, r0
    2b18:	00010000 	andeq	r0, r1, r0
    2b1c:	00000000 	andeq	r0, r0, r0
    2b20:	01000000 	mrseq	r0, (UNDEF: 0)
    2b24:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2b38:	00010000 	andeq	r0, r1, r0
    2b3c:	00000053 	andeq	r0, r0, r3, asr r0
    2b40:	00000000 	andeq	r0, r0, r0
    2b44:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b54:	00000100 	andeq	r0, r0, r0, lsl #2
    2b58:	00000000 	andeq	r0, r0, r0
    2b5c:	00030000 	andeq	r0, r3, r0
    2b60:	009f1471 	addseq	r1, pc, r1, ror r4	; <UNPREDICTABLE>
    2b64:	00000000 	andeq	r0, r0, r0
    2b68:	01000000 	mrseq	r0, (UNDEF: 0)
    2b6c:	00005300 	andeq	r5, r0, r0, lsl #6
    2b70:	00000000 	andeq	r0, r0, r0
    2b74:	00030000 	andeq	r0, r3, r0
    2b78:	009f1471 	addseq	r1, pc, r1, ror r4	; <UNPREDICTABLE>
	...
    2b84:	00000001 	andeq	r0, r0, r1
    2b88:	00000000 	andeq	r0, r0, r0
    2b8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b98:	01000001 	tsteq	r0, r1
	...
    2ba4:	14710003 	ldrbtne	r0, [r1], #-3
    2ba8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2bac:	00000000 	andeq	r0, r0, r0
    2bb0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2bbc:	00000101 	andeq	r0, r0, r1, lsl #2
    2bc0:	00000000 	andeq	r0, r0, r0
    2bc4:	00010000 	andeq	r0, r1, r0
    2bc8:	00000053 	andeq	r0, r0, r3, asr r0
    2bcc:	00000000 	andeq	r0, r0, r0
    2bd0:	00010000 	andeq	r0, r1, r0
    2bd4:	00000000 	andeq	r0, r0, r0
    2bd8:	01000000 	mrseq	r0, (UNDEF: 0)
    2bdc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    2bf0:	00530001 	subseq	r0, r3, r1
	...
    2c00:	00000001 	andeq	r0, r0, r1
    2c04:	00000000 	andeq	r0, r0, r0
    2c08:	72000300 	andvc	r0, r0, #0, 6
    2c0c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2c10:	00000000 	andeq	r0, r0, r0
    2c14:	00010000 	andeq	r0, r1, r0
    2c18:	00000053 	andeq	r0, r0, r3, asr r0
    2c1c:	00000000 	andeq	r0, r0, r0
    2c20:	72000300 	andvc	r0, r0, #0, 6
    2c24:	00009f14 	andeq	r9, r0, r4, lsl pc
    2c28:	00000000 	andeq	r0, r0, r0
    2c2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2c38:	00530001 	subseq	r0, r3, r1
    2c3c:	00000000 	andeq	r0, r0, r0
    2c40:	01000000 	mrseq	r0, (UNDEF: 0)
    2c44:	00010000 	andeq	r0, r1, r0
    2c48:	00000000 	andeq	r0, r0, r0
    2c4c:	03000000 	movweq	r0, #0
    2c50:	9f147200 	svcls	0x00147200
	...
    2c5c:	00520001 	subseq	r0, r2, r1
    2c60:	00000000 	andeq	r0, r0, r0
    2c64:	01000000 	mrseq	r0, (UNDEF: 0)
    2c68:	00000001 	andeq	r0, r0, r1
    2c6c:	00000000 	andeq	r0, r0, r0
    2c70:	53000100 	movwpl	r0, #256	; 0x100
	...
    2c7c:	00000100 	andeq	r0, r0, r0, lsl #2
    2c80:	00000000 	andeq	r0, r0, r0
    2c84:	00010000 	andeq	r0, r1, r0
    2c88:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2c98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2ca4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2ca8:	00000008 	andeq	r0, r0, r8
	...
    2cc0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2ccc:	00540001 	subseq	r0, r4, r1
    2cd0:	00000000 	andeq	r0, r0, r0
    2cd4:	01000000 	mrseq	r0, (UNDEF: 0)
    2cd8:	00005000 	andeq	r5, r0, r0
    2cdc:	00000000 	andeq	r0, r0, r0
    2ce0:	00010000 	andeq	r0, r1, r0
    2ce4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2cf4:	01000000 	mrseq	r0, (UNDEF: 0)
    2cf8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2d04:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2d10:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2d14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2d18:	00000000 	andeq	r0, r0, r0
    2d1c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2d28:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2d2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2d30:	00000000 	andeq	r0, r0, r0
    2d34:	00010000 	andeq	r0, r1, r0
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d40:	00005300 	andeq	r5, r0, r0, lsl #6
    2d44:	00000000 	andeq	r0, r0, r0
    2d48:	00010000 	andeq	r0, r1, r0
    2d4c:	00000100 	andeq	r0, r0, r0, lsl #2
    2d50:	00000000 	andeq	r0, r0, r0
    2d54:	00030000 	andeq	r0, r3, r0
    2d58:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2d5c:	00000000 	andeq	r0, r0, r0
    2d60:	01000000 	mrseq	r0, (UNDEF: 0)
    2d64:	00005200 	andeq	r5, r0, r0, lsl #4
    2d68:	00000000 	andeq	r0, r0, r0
    2d6c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2d78:	00530001 	subseq	r0, r3, r1
	...
    2d84:	00000001 	andeq	r0, r0, r1
    2d88:	00000000 	andeq	r0, r0, r0
    2d8c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2da0:	00010000 	andeq	r0, r1, r0
    2da4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2db0:	00010000 	andeq	r0, r1, r0
    2db4:	00000000 	andeq	r0, r0, r0
    2db8:	03000000 	movweq	r0, #0
    2dbc:	9f147200 	svcls	0x00147200
	...
    2dc8:	00530001 	subseq	r0, r3, r1
    2dcc:	00000000 	andeq	r0, r0, r0
    2dd0:	03000000 	movweq	r0, #0
    2dd4:	9f147200 	svcls	0x00147200
	...
    2de0:	00000100 	andeq	r0, r0, r0, lsl #2
    2de4:	00000000 	andeq	r0, r0, r0
    2de8:	00010000 	andeq	r0, r1, r0
    2dec:	00000053 	andeq	r0, r0, r3, asr r0
    2df0:	00000000 	andeq	r0, r0, r0
    2df4:	00000100 	andeq	r0, r0, r0, lsl #2
    2df8:	00000001 	andeq	r0, r0, r1
    2dfc:	00000000 	andeq	r0, r0, r0
    2e00:	72000300 	andvc	r0, r0, #0, 6
    2e04:	00009f14 	andeq	r9, r0, r4, lsl pc
    2e08:	00000000 	andeq	r0, r0, r0
    2e0c:	00010000 	andeq	r0, r1, r0
    2e10:	00000052 	andeq	r0, r0, r2, asr r0
    2e14:	00000000 	andeq	r0, r0, r0
    2e18:	00010100 	andeq	r0, r1, r0, lsl #2
    2e1c:	00000000 	andeq	r0, r0, r0
    2e20:	01000000 	mrseq	r0, (UNDEF: 0)
    2e24:	00005300 	andeq	r5, r0, r0, lsl #6
    2e28:	00000000 	andeq	r0, r0, r0
    2e2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2e38:	00510001 	subseq	r0, r1, r1
	...
    2e4c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2e5c:	00000100 	andeq	r0, r0, r0, lsl #2
    2e60:	00000000 	andeq	r0, r0, r0
    2e64:	00030000 	andeq	r0, r3, r0
    2e68:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2e6c:	00000000 	andeq	r0, r0, r0
    2e70:	01000000 	mrseq	r0, (UNDEF: 0)
    2e74:	00005300 	andeq	r5, r0, r0, lsl #6
    2e78:	00000000 	andeq	r0, r0, r0
    2e7c:	00030000 	andeq	r0, r3, r0
    2e80:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2e8c:	00000001 	andeq	r0, r0, r1
    2e90:	00000000 	andeq	r0, r0, r0
    2e94:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ea0:	01000001 	tsteq	r0, r1
	...
    2eac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2eb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2eb4:	00000000 	andeq	r0, r0, r0
    2eb8:	52000100 	andpl	r0, r0, #0, 2
	...
    2ec4:	00000101 	andeq	r0, r0, r1, lsl #2
    2ec8:	00000000 	andeq	r0, r0, r0
    2ecc:	00010000 	andeq	r0, r1, r0
    2ed0:	00000053 	andeq	r0, r0, r3, asr r0
    2ed4:	00000000 	andeq	r0, r0, r0
    2ed8:	00010000 	andeq	r0, r1, r0
    2edc:	00000000 	andeq	r0, r0, r0
    2ee0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ee4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2ef8:	00530001 	subseq	r0, r3, r1
	...
    2f08:	00000001 	andeq	r0, r0, r1
    2f0c:	00000000 	andeq	r0, r0, r0
    2f10:	72000300 	andvc	r0, r0, #0, 6
    2f14:	00009f14 	andeq	r9, r0, r4, lsl pc
    2f18:	00000000 	andeq	r0, r0, r0
    2f1c:	00010000 	andeq	r0, r1, r0
    2f20:	00000053 	andeq	r0, r0, r3, asr r0
    2f24:	00000000 	andeq	r0, r0, r0
    2f28:	72000300 	andvc	r0, r0, #0, 6
    2f2c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2f30:	00000000 	andeq	r0, r0, r0
    2f34:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f40:	00530001 	subseq	r0, r3, r1
    2f44:	00000000 	andeq	r0, r0, r0
    2f48:	01000000 	mrseq	r0, (UNDEF: 0)
    2f4c:	00010000 	andeq	r0, r1, r0
    2f50:	00000000 	andeq	r0, r0, r0
    2f54:	03000000 	movweq	r0, #0
    2f58:	9f147200 	svcls	0x00147200
	...
    2f64:	00520001 	subseq	r0, r2, r1
    2f68:	00000000 	andeq	r0, r0, r0
    2f6c:	01000000 	mrseq	r0, (UNDEF: 0)
    2f70:	00000001 	andeq	r0, r0, r1
    2f74:	00000000 	andeq	r0, r0, r0
    2f78:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f84:	00000100 	andeq	r0, r0, r0, lsl #2
    2f88:	00000000 	andeq	r0, r0, r0
    2f8c:	00010000 	andeq	r0, r1, r0
    2f90:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2fa0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2fac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2fb0:	00000008 	andeq	r0, r0, r8
	...
    2fc4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2fd0:	00540001 	subseq	r0, r4, r1
	...
    2fe4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2ff4:	00000100 	andeq	r0, r0, r0, lsl #2
    2ff8:	00000000 	andeq	r0, r0, r0
    2ffc:	00030000 	andeq	r0, r3, r0
    3000:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3004:	00000000 	andeq	r0, r0, r0
    3008:	01000000 	mrseq	r0, (UNDEF: 0)
    300c:	00005300 	andeq	r5, r0, r0, lsl #6
    3010:	00000000 	andeq	r0, r0, r0
    3014:	00030000 	andeq	r0, r3, r0
    3018:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    3024:	00000001 	andeq	r0, r0, r1
    3028:	00000000 	andeq	r0, r0, r0
    302c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3038:	01000001 	tsteq	r0, r1
	...
    3044:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3048:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    304c:	00000000 	andeq	r0, r0, r0
    3050:	52000100 	andpl	r0, r0, #0, 2
	...
    305c:	00000101 	andeq	r0, r0, r1, lsl #2
    3060:	00000000 	andeq	r0, r0, r0
    3064:	00010000 	andeq	r0, r1, r0
    3068:	00000053 	andeq	r0, r0, r3, asr r0
    306c:	00000000 	andeq	r0, r0, r0
    3070:	00010000 	andeq	r0, r1, r0
    3074:	00000000 	andeq	r0, r0, r0
    3078:	01000000 	mrseq	r0, (UNDEF: 0)
    307c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3090:	00530001 	subseq	r0, r3, r1
	...
    30a0:	00000001 	andeq	r0, r0, r1
    30a4:	00000000 	andeq	r0, r0, r0
    30a8:	72000300 	andvc	r0, r0, #0, 6
    30ac:	00009f14 	andeq	r9, r0, r4, lsl pc
    30b0:	00000000 	andeq	r0, r0, r0
    30b4:	00010000 	andeq	r0, r1, r0
    30b8:	00000053 	andeq	r0, r0, r3, asr r0
    30bc:	00000000 	andeq	r0, r0, r0
    30c0:	72000300 	andvc	r0, r0, #0, 6
    30c4:	00009f14 	andeq	r9, r0, r4, lsl pc
    30c8:	00000000 	andeq	r0, r0, r0
    30cc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    30d8:	00530001 	subseq	r0, r3, r1
    30dc:	00000000 	andeq	r0, r0, r0
    30e0:	01000000 	mrseq	r0, (UNDEF: 0)
    30e4:	00010000 	andeq	r0, r1, r0
    30e8:	00000000 	andeq	r0, r0, r0
    30ec:	03000000 	movweq	r0, #0
    30f0:	9f147200 	svcls	0x00147200
	...
    30fc:	00520001 	subseq	r0, r2, r1
    3100:	00000000 	andeq	r0, r0, r0
    3104:	01000000 	mrseq	r0, (UNDEF: 0)
    3108:	00000001 	andeq	r0, r0, r1
    310c:	00000000 	andeq	r0, r0, r0
    3110:	53000100 	movwpl	r0, #256	; 0x100
	...
    311c:	00000100 	andeq	r0, r0, r0, lsl #2
    3120:	00000000 	andeq	r0, r0, r0
    3124:	00010000 	andeq	r0, r1, r0
    3128:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3138:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3144:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3148:	00000008 	andeq	r0, r0, r8
	...
    3160:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    316c:	00540001 	subseq	r0, r4, r1
    3170:	00000000 	andeq	r0, r0, r0
    3174:	01000000 	mrseq	r0, (UNDEF: 0)
    3178:	00005000 	andeq	r5, r0, r0
    317c:	00000000 	andeq	r0, r0, r0
    3180:	00010000 	andeq	r0, r1, r0
    3184:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3194:	01000000 	mrseq	r0, (UNDEF: 0)
    3198:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    31a4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    31b0:	0c720003 	ldcleq	0, cr0, [r2], #-12
    31b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31b8:	00000000 	andeq	r0, r0, r0
    31bc:	53000100 	movwpl	r0, #256	; 0x100
	...
    31c8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    31cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31d0:	00000000 	andeq	r0, r0, r0
    31d4:	00010000 	andeq	r0, r1, r0
    31d8:	00000000 	andeq	r0, r0, r0
    31dc:	01000000 	mrseq	r0, (UNDEF: 0)
    31e0:	00005300 	andeq	r5, r0, r0, lsl #6
    31e4:	00000000 	andeq	r0, r0, r0
    31e8:	00010000 	andeq	r0, r1, r0
    31ec:	00000100 	andeq	r0, r0, r0, lsl #2
    31f0:	00000000 	andeq	r0, r0, r0
    31f4:	00030000 	andeq	r0, r3, r0
    31f8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    31fc:	00000000 	andeq	r0, r0, r0
    3200:	01000000 	mrseq	r0, (UNDEF: 0)
    3204:	00005200 	andeq	r5, r0, r0, lsl #4
    3208:	00000000 	andeq	r0, r0, r0
    320c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3218:	00530001 	subseq	r0, r3, r1
	...
    3224:	00000001 	andeq	r0, r0, r1
    3228:	00000000 	andeq	r0, r0, r0
    322c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3240:	00010000 	andeq	r0, r1, r0
    3244:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3250:	00010000 	andeq	r0, r1, r0
    3254:	00000000 	andeq	r0, r0, r0
    3258:	03000000 	movweq	r0, #0
    325c:	9f147200 	svcls	0x00147200
	...
    3268:	00530001 	subseq	r0, r3, r1
    326c:	00000000 	andeq	r0, r0, r0
    3270:	03000000 	movweq	r0, #0
    3274:	9f147200 	svcls	0x00147200
	...
    3280:	00000100 	andeq	r0, r0, r0, lsl #2
    3284:	00000000 	andeq	r0, r0, r0
    3288:	00010000 	andeq	r0, r1, r0
    328c:	00000053 	andeq	r0, r0, r3, asr r0
    3290:	00000000 	andeq	r0, r0, r0
    3294:	00000100 	andeq	r0, r0, r0, lsl #2
    3298:	00000001 	andeq	r0, r0, r1
    329c:	00000000 	andeq	r0, r0, r0
    32a0:	72000300 	andvc	r0, r0, #0, 6
    32a4:	00009f14 	andeq	r9, r0, r4, lsl pc
    32a8:	00000000 	andeq	r0, r0, r0
    32ac:	00010000 	andeq	r0, r1, r0
    32b0:	00000052 	andeq	r0, r0, r2, asr r0
    32b4:	00000000 	andeq	r0, r0, r0
    32b8:	00010100 	andeq	r0, r1, r0, lsl #2
    32bc:	00000000 	andeq	r0, r0, r0
    32c0:	01000000 	mrseq	r0, (UNDEF: 0)
    32c4:	00005300 	andeq	r5, r0, r0, lsl #6
    32c8:	00000000 	andeq	r0, r0, r0
    32cc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    32d8:	00510001 	subseq	r0, r1, r1
	...
    32ec:	53000100 	movwpl	r0, #256	; 0x100
	...
    32fc:	00000100 	andeq	r0, r0, r0, lsl #2
    3300:	00000000 	andeq	r0, r0, r0
    3304:	00030000 	andeq	r0, r3, r0
    3308:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    330c:	00000000 	andeq	r0, r0, r0
    3310:	01000000 	mrseq	r0, (UNDEF: 0)
    3314:	00005300 	andeq	r5, r0, r0, lsl #6
    3318:	00000000 	andeq	r0, r0, r0
    331c:	00030000 	andeq	r0, r3, r0
    3320:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    332c:	00000001 	andeq	r0, r0, r1
    3330:	00000000 	andeq	r0, r0, r0
    3334:	53000100 	movwpl	r0, #256	; 0x100
	...
    3340:	01000001 	tsteq	r0, r1
	...
    334c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3350:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3354:	00000000 	andeq	r0, r0, r0
    3358:	52000100 	andpl	r0, r0, #0, 2
	...
    3364:	00000101 	andeq	r0, r0, r1, lsl #2
    3368:	00000000 	andeq	r0, r0, r0
    336c:	00010000 	andeq	r0, r1, r0
    3370:	00000053 	andeq	r0, r0, r3, asr r0
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00010000 	andeq	r0, r1, r0
    337c:	00000000 	andeq	r0, r0, r0
    3380:	01000000 	mrseq	r0, (UNDEF: 0)
    3384:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3398:	00530001 	subseq	r0, r3, r1
	...
    33a8:	00000001 	andeq	r0, r0, r1
    33ac:	00000000 	andeq	r0, r0, r0
    33b0:	72000300 	andvc	r0, r0, #0, 6
    33b4:	00009f14 	andeq	r9, r0, r4, lsl pc
    33b8:	00000000 	andeq	r0, r0, r0
    33bc:	00010000 	andeq	r0, r1, r0
    33c0:	00000053 	andeq	r0, r0, r3, asr r0
    33c4:	00000000 	andeq	r0, r0, r0
    33c8:	72000300 	andvc	r0, r0, #0, 6
    33cc:	00009f14 	andeq	r9, r0, r4, lsl pc
    33d0:	00000000 	andeq	r0, r0, r0
    33d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    33e0:	00530001 	subseq	r0, r3, r1
    33e4:	00000000 	andeq	r0, r0, r0
    33e8:	01000000 	mrseq	r0, (UNDEF: 0)
    33ec:	00010000 	andeq	r0, r1, r0
    33f0:	00000000 	andeq	r0, r0, r0
    33f4:	03000000 	movweq	r0, #0
    33f8:	9f147200 	svcls	0x00147200
	...
    3404:	00520001 	subseq	r0, r2, r1
    3408:	00000000 	andeq	r0, r0, r0
    340c:	01000000 	mrseq	r0, (UNDEF: 0)
    3410:	00000001 	andeq	r0, r0, r1
    3414:	00000000 	andeq	r0, r0, r0
    3418:	53000100 	movwpl	r0, #256	; 0x100
	...
    3424:	00000100 	andeq	r0, r0, r0, lsl #2
    3428:	00000000 	andeq	r0, r0, r0
    342c:	00010000 	andeq	r0, r1, r0
    3430:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3440:	01000000 	mrseq	r0, (UNDEF: 0)
    3444:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3450:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    345c:	14720003 	ldrbtne	r0, [r2], #-3
    3460:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3464:	00000000 	andeq	r0, r0, r0
    3468:	53000100 	movwpl	r0, #256	; 0x100
	...
    3474:	14720003 	ldrbtne	r0, [r2], #-3
    3478:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    347c:	00000000 	andeq	r0, r0, r0
    3480:	00010000 	andeq	r0, r1, r0
    3484:	00000000 	andeq	r0, r0, r0
    3488:	01000000 	mrseq	r0, (UNDEF: 0)
    348c:	00005300 	andeq	r5, r0, r0, lsl #6
    3490:	00000000 	andeq	r0, r0, r0
    3494:	00010000 	andeq	r0, r1, r0
    3498:	00000100 	andeq	r0, r0, r0, lsl #2
    349c:	00000000 	andeq	r0, r0, r0
    34a0:	00030000 	andeq	r0, r3, r0
    34a4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    34a8:	00000000 	andeq	r0, r0, r0
    34ac:	01000000 	mrseq	r0, (UNDEF: 0)
    34b0:	00005200 	andeq	r5, r0, r0, lsl #4
    34b4:	00000000 	andeq	r0, r0, r0
    34b8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    34c4:	00530001 	subseq	r0, r3, r1
	...
    34d0:	00000001 	andeq	r0, r0, r1
    34d4:	00000000 	andeq	r0, r0, r0
    34d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    34f0:	00500001 	subseq	r0, r0, r1
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	04000000 	streq	r0, [r0], #-0
    34fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    3500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3510:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    351c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3520:	00000008 	andeq	r0, r0, r8
    3524:	00000000 	andeq	r0, r0, r0
    3528:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    352c:	00000010 	andeq	r0, r0, r0, lsl r0
    3530:	00000000 	andeq	r0, r0, r0
    3534:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3538:	00000008 	andeq	r0, r0, r8
    353c:	00000000 	andeq	r0, r0, r0
    3540:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3544:	00000010 	andeq	r0, r0, r0, lsl r0
    3548:	00000000 	andeq	r0, r0, r0
    354c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3558:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    355c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    357c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3588:	00540001 	subseq	r0, r4, r1
    358c:	00000000 	andeq	r0, r0, r0
    3590:	01000000 	mrseq	r0, (UNDEF: 0)
    3594:	00005000 	andeq	r5, r0, r0
    3598:	00000000 	andeq	r0, r0, r0
    359c:	00010000 	andeq	r0, r1, r0
    35a0:	00000054 	andeq	r0, r0, r4, asr r0
    35a4:	00000000 	andeq	r0, r0, r0
    35a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    35b4:	01f30004 	mvnseq	r0, r4
    35b8:	00009f50 	andeq	r9, r0, r0, asr pc
    35bc:	00000000 	andeq	r0, r0, r0
    35c0:	00010000 	andeq	r0, r1, r0
    35c4:	00000050 	andeq	r0, r0, r0, asr r0
    35c8:	00000000 	andeq	r0, r0, r0
    35cc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    35e8:	00010000 	andeq	r0, r1, r0
    35ec:	00000051 	andeq	r0, r0, r1, asr r0
    35f0:	00000000 	andeq	r0, r0, r0
    35f4:	f3000400 	vshl.u8	d0, d0, d0
    35f8:	009f5101 	addseq	r5, pc, r1, lsl #2
    35fc:	00000000 	andeq	r0, r0, r0
    3600:	01000000 	mrseq	r0, (UNDEF: 0)
    3604:	00005100 	andeq	r5, r0, r0, lsl #2
    3608:	00000000 	andeq	r0, r0, r0
    360c:	00040000 	andeq	r0, r4, r0
    3610:	9f5101f3 	svcls	0x005101f3
	...
    361c:	00510001 	subseq	r0, r1, r1
	...
    3638:	52000100 	andpl	r0, r0, #0, 2
	...
    3644:	01f30004 	mvnseq	r0, r4
    3648:	00009f52 	andeq	r9, r0, r2, asr pc
    364c:	00000000 	andeq	r0, r0, r0
    3650:	00010000 	andeq	r0, r1, r0
    3654:	00000052 	andeq	r0, r0, r2, asr r0
    3658:	00000000 	andeq	r0, r0, r0
    365c:	f3000400 	vshl.u8	d0, d0, d0
    3660:	009f5201 	addseq	r5, pc, r1, lsl #4
    3664:	00000000 	andeq	r0, r0, r0
    3668:	01000000 	mrseq	r0, (UNDEF: 0)
    366c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    3684:	00500001 	subseq	r0, r0, r1
    3688:	00000000 	andeq	r0, r0, r0
    368c:	02000000 	andeq	r0, r0, #0
    3690:	009f3100 	addseq	r3, pc, r0, lsl #2
    3694:	00000000 	andeq	r0, r0, r0
    3698:	01000000 	mrseq	r0, (UNDEF: 0)
    369c:	00005000 	andeq	r5, r0, r0
	...
    36b0:	00530001 	subseq	r0, r3, r1
	...
    36c0:	00000001 	andeq	r0, r0, r1
    36c4:	00000000 	andeq	r0, r0, r0
    36c8:	72000300 	andvc	r0, r0, #0, 6
    36cc:	00009f0c 	andeq	r9, r0, ip, lsl #30
    36d0:	00000000 	andeq	r0, r0, r0
    36d4:	00010000 	andeq	r0, r1, r0
    36d8:	00000053 	andeq	r0, r0, r3, asr r0
    36dc:	00000000 	andeq	r0, r0, r0
    36e0:	72000300 	andvc	r0, r0, #0, 6
    36e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    36e8:	00000000 	andeq	r0, r0, r0
    36ec:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    36f8:	00530001 	subseq	r0, r3, r1
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	01000000 	mrseq	r0, (UNDEF: 0)
    3704:	00010000 	andeq	r0, r1, r0
    3708:	00000000 	andeq	r0, r0, r0
    370c:	03000000 	movweq	r0, #0
    3710:	9f0c7200 	svcls	0x000c7200
	...
    371c:	00520001 	subseq	r0, r2, r1
    3720:	00000000 	andeq	r0, r0, r0
    3724:	01000000 	mrseq	r0, (UNDEF: 0)
    3728:	00000001 	andeq	r0, r0, r1
    372c:	00000000 	andeq	r0, r0, r0
    3730:	53000100 	movwpl	r0, #256	; 0x100
	...
    373c:	00000100 	andeq	r0, r0, r0, lsl #2
    3740:	00000000 	andeq	r0, r0, r0
    3744:	00010000 	andeq	r0, r1, r0
    3748:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3758:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3764:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3768:	00000008 	andeq	r0, r0, r8
    376c:	00000000 	andeq	r0, r0, r0
    3770:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3774:	00000010 	andeq	r0, r0, r0, lsl r0
    3778:	00000000 	andeq	r0, r0, r0
    377c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3780:	00000008 	andeq	r0, r0, r8
    3784:	00000000 	andeq	r0, r0, r0
    3788:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    378c:	00000010 	andeq	r0, r0, r0, lsl r0
    3790:	00000000 	andeq	r0, r0, r0
    3794:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    37a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    37a4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    37c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    37d0:	00540001 	subseq	r0, r4, r1
    37d4:	00000000 	andeq	r0, r0, r0
    37d8:	01000000 	mrseq	r0, (UNDEF: 0)
    37dc:	00005000 	andeq	r5, r0, r0
    37e0:	00000000 	andeq	r0, r0, r0
    37e4:	00010000 	andeq	r0, r1, r0
    37e8:	00000054 	andeq	r0, r0, r4, asr r0
    37ec:	00000000 	andeq	r0, r0, r0
    37f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    37fc:	01f30004 	mvnseq	r0, r4
    3800:	00009f50 	andeq	r9, r0, r0, asr pc
    3804:	00000000 	andeq	r0, r0, r0
    3808:	00010000 	andeq	r0, r1, r0
    380c:	00000050 	andeq	r0, r0, r0, asr r0
    3810:	00000000 	andeq	r0, r0, r0
    3814:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3830:	00010000 	andeq	r0, r1, r0
    3834:	00000051 	andeq	r0, r0, r1, asr r0
    3838:	00000000 	andeq	r0, r0, r0
    383c:	f3000400 	vshl.u8	d0, d0, d0
    3840:	009f5101 	addseq	r5, pc, r1, lsl #2
    3844:	00000000 	andeq	r0, r0, r0
    3848:	01000000 	mrseq	r0, (UNDEF: 0)
    384c:	00005100 	andeq	r5, r0, r0, lsl #2
    3850:	00000000 	andeq	r0, r0, r0
    3854:	00040000 	andeq	r0, r4, r0
    3858:	9f5101f3 	svcls	0x005101f3
	...
    3864:	00510001 	subseq	r0, r1, r1
	...
    3880:	52000100 	andpl	r0, r0, #0, 2
	...
    388c:	01f30004 	mvnseq	r0, r4
    3890:	00009f52 	andeq	r9, r0, r2, asr pc
    3894:	00000000 	andeq	r0, r0, r0
    3898:	00010000 	andeq	r0, r1, r0
    389c:	00000052 	andeq	r0, r0, r2, asr r0
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	f3000400 	vshl.u8	d0, d0, d0
    38a8:	009f5201 	addseq	r5, pc, r1, lsl #4
    38ac:	00000000 	andeq	r0, r0, r0
    38b0:	01000000 	mrseq	r0, (UNDEF: 0)
    38b4:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    38cc:	00500001 	subseq	r0, r0, r1
    38d0:	00000000 	andeq	r0, r0, r0
    38d4:	02000000 	andeq	r0, r0, #0
    38d8:	009f3100 	addseq	r3, pc, r0, lsl #2
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	01000000 	mrseq	r0, (UNDEF: 0)
    38e4:	00005000 	andeq	r5, r0, r0
	...
    38f8:	00530001 	subseq	r0, r3, r1
	...
    3908:	00000001 	andeq	r0, r0, r1
    390c:	00000000 	andeq	r0, r0, r0
    3910:	72000300 	andvc	r0, r0, #0, 6
    3914:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3918:	00000000 	andeq	r0, r0, r0
    391c:	00010000 	andeq	r0, r1, r0
    3920:	00000053 	andeq	r0, r0, r3, asr r0
    3924:	00000000 	andeq	r0, r0, r0
    3928:	72000300 	andvc	r0, r0, #0, 6
    392c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3930:	00000000 	andeq	r0, r0, r0
    3934:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3940:	00530001 	subseq	r0, r3, r1
    3944:	00000000 	andeq	r0, r0, r0
    3948:	01000000 	mrseq	r0, (UNDEF: 0)
    394c:	00010000 	andeq	r0, r1, r0
    3950:	00000000 	andeq	r0, r0, r0
    3954:	03000000 	movweq	r0, #0
    3958:	9f0c7200 	svcls	0x000c7200
	...
    3964:	00520001 	subseq	r0, r2, r1
    3968:	00000000 	andeq	r0, r0, r0
    396c:	01000000 	mrseq	r0, (UNDEF: 0)
    3970:	00000001 	andeq	r0, r0, r1
    3974:	00000000 	andeq	r0, r0, r0
    3978:	53000100 	movwpl	r0, #256	; 0x100
	...
    3984:	00000100 	andeq	r0, r0, r0, lsl #2
    3988:	00000000 	andeq	r0, r0, r0
    398c:	00010000 	andeq	r0, r1, r0
    3990:	00000051 	andeq	r0, r0, r1, asr r0
	...
    39a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    39ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    39b4:	00000000 	andeq	r0, r0, r0
    39b8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39bc:	00000028 	andeq	r0, r0, r8, lsr #32
    39c0:	00000000 	andeq	r0, r0, r0
    39c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    39cc:	00000000 	andeq	r0, r0, r0
    39d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    39d4:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    39f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a00:	00540001 	subseq	r0, r4, r1
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	01000000 	mrseq	r0, (UNDEF: 0)
    3a0c:	00005000 	andeq	r5, r0, r0
    3a10:	00000000 	andeq	r0, r0, r0
    3a14:	00010000 	andeq	r0, r1, r0
    3a18:	00000054 	andeq	r0, r0, r4, asr r0
    3a1c:	00000000 	andeq	r0, r0, r0
    3a20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a2c:	01f30004 	mvnseq	r0, r4
    3a30:	00009f50 	andeq	r9, r0, r0, asr pc
    3a34:	00000000 	andeq	r0, r0, r0
    3a38:	00010000 	andeq	r0, r1, r0
    3a3c:	00000050 	andeq	r0, r0, r0, asr r0
    3a40:	00000000 	andeq	r0, r0, r0
    3a44:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3a68:	00010000 	andeq	r0, r1, r0
    3a6c:	00000051 	andeq	r0, r0, r1, asr r0
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3a80:	01f30004 	mvnseq	r0, r4
    3a84:	00009f51 	andeq	r9, r0, r1, asr pc
    3a88:	00000000 	andeq	r0, r0, r0
    3a8c:	00010000 	andeq	r0, r1, r0
    3a90:	00000055 	andeq	r0, r0, r5, asr r0
    3a94:	00000000 	andeq	r0, r0, r0
    3a98:	59000100 	stmdbpl	r0, {r8}
	...
    3aa4:	01f30004 	mvnseq	r0, r4
    3aa8:	00009f51 	andeq	r9, r0, r1, asr pc
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	00010000 	andeq	r0, r1, r0
    3ab4:	00000051 	andeq	r0, r0, r1, asr r0
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	f3000400 	vshl.u8	d0, d0, d0
    3ac0:	009f5101 	addseq	r5, pc, r1, lsl #2
    3ac4:	00000000 	andeq	r0, r0, r0
    3ac8:	01000000 	mrseq	r0, (UNDEF: 0)
    3acc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3ae8:	00520001 	subseq	r0, r2, r1
    3aec:	00000000 	andeq	r0, r0, r0
    3af0:	04000000 	streq	r0, [r0], #-0
    3af4:	5201f300 	andpl	pc, r1, #0, 6
    3af8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3afc:	00000000 	andeq	r0, r0, r0
    3b00:	52000100 	andpl	r0, r0, #0, 2
	...
    3b0c:	01f30004 	mvnseq	r0, r4
    3b10:	00009f52 	andeq	r9, r0, r2, asr pc
    3b14:	00000000 	andeq	r0, r0, r0
    3b18:	00010000 	andeq	r0, r1, r0
    3b1c:	00000052 	andeq	r0, r0, r2, asr r0
	...
    3b30:	53000100 	movwpl	r0, #256	; 0x100
	...
    3b3c:	00560001 	subseq	r0, r6, r1
	...
    3b50:	02000000 	andeq	r0, r0, #0
    3b54:	00009100 	andeq	r9, r0, r0, lsl #2
    3b58:	00000000 	andeq	r0, r0, r0
    3b5c:	02000000 	andeq	r0, r0, #0
    3b60:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    3b74:	01000000 	mrseq	r0, (UNDEF: 0)
    3b78:	00005500 	andeq	r5, r0, r0, lsl #10
    3b7c:	00000000 	andeq	r0, r0, r0
    3b80:	00010000 	andeq	r0, r1, r0
    3b84:	00000055 	andeq	r0, r0, r5, asr r0
	...
    3b90:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3b9c:	59000100 	stmdbpl	r0, {r8}
	...
    3ba8:	00590001 	subseq	r0, r9, r1
    3bac:	00000000 	andeq	r0, r0, r0
    3bb0:	03000000 	movweq	r0, #0
    3bb4:	9f7e7900 	svcls	0x007e7900
	...
    3bc0:	00590001 	subseq	r0, r9, r1
	...
    3bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3bd8:	00005000 	andeq	r5, r0, r0
    3bdc:	00000000 	andeq	r0, r0, r0
    3be0:	00010000 	andeq	r0, r1, r0
    3be4:	00000058 	andeq	r0, r0, r8, asr r0
	...
    3bf4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3c00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3c04:	00000008 	andeq	r0, r0, r8
	...
    3c1c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3c28:	00540001 	subseq	r0, r4, r1
    3c2c:	00000000 	andeq	r0, r0, r0
    3c30:	01000000 	mrseq	r0, (UNDEF: 0)
    3c34:	00005000 	andeq	r5, r0, r0
    3c38:	00000000 	andeq	r0, r0, r0
    3c3c:	00010000 	andeq	r0, r1, r0
    3c40:	00000054 	andeq	r0, r0, r4, asr r0
    3c44:	00000000 	andeq	r0, r0, r0
    3c48:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    3c58:	02000000 	andeq	r0, r0, #0
    3c5c:	009f3000 	addseq	r3, pc, r0
    3c60:	00000000 	andeq	r0, r0, r0
    3c64:	0b000000 	bleq	3c6c <_Min_Heap_Size+0x346c>
    3c68:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    3c6c:	2e301a80 	vaddcs.f32	s2, s1, s0
    3c70:	9f1aff08 	svcls	0x001aff08
	...
    3c7c:	00720008 	rsbseq	r0, r2, r8
    3c80:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    3c84:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3c88:	00000000 	andeq	r0, r0, r0
    3c8c:	000b0000 	andeq	r0, fp, r0
    3c90:	80080072 	andhi	r0, r8, r2, ror r0
    3c94:	082e301a 	stmdaeq	lr!, {r1, r3, r4, ip, sp}
    3c98:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    3c9c:	00000000 	andeq	r0, r0, r0
    3ca0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3ca4:	30007200 	andcc	r7, r0, r0, lsl #4
    3ca8:	1aff082e 	bne	fffc5d68 <_estack+0xdffc4b30>
    3cac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3cbc:	01000000 	mrseq	r0, (UNDEF: 0)
    3cc0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3ccc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3cd8:	14720003 	ldrbtne	r0, [r2], #-3
    3cdc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ce0:	00000000 	andeq	r0, r0, r0
    3ce4:	53000100 	movwpl	r0, #256	; 0x100
	...
    3cf0:	14720003 	ldrbtne	r0, [r2], #-3
    3cf4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3cf8:	00000000 	andeq	r0, r0, r0
    3cfc:	00010000 	andeq	r0, r1, r0
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	01000000 	mrseq	r0, (UNDEF: 0)
    3d08:	00005300 	andeq	r5, r0, r0, lsl #6
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	00010000 	andeq	r0, r1, r0
    3d14:	00000100 	andeq	r0, r0, r0, lsl #2
    3d18:	00000000 	andeq	r0, r0, r0
    3d1c:	00030000 	andeq	r0, r3, r0
    3d20:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	01000000 	mrseq	r0, (UNDEF: 0)
    3d2c:	00005200 	andeq	r5, r0, r0, lsl #4
    3d30:	00000000 	andeq	r0, r0, r0
    3d34:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3d40:	00530001 	subseq	r0, r3, r1
	...
    3d4c:	00000001 	andeq	r0, r0, r1
    3d50:	00000000 	andeq	r0, r0, r0
    3d54:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3d68:	00010000 	andeq	r0, r1, r0
    3d6c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3d78:	00010000 	andeq	r0, r1, r0
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	03000000 	movweq	r0, #0
    3d84:	9f147200 	svcls	0x00147200
	...
    3d90:	00530001 	subseq	r0, r3, r1
    3d94:	00000000 	andeq	r0, r0, r0
    3d98:	03000000 	movweq	r0, #0
    3d9c:	9f147200 	svcls	0x00147200
	...
    3da8:	00000100 	andeq	r0, r0, r0, lsl #2
    3dac:	00000000 	andeq	r0, r0, r0
    3db0:	00010000 	andeq	r0, r1, r0
    3db4:	00000053 	andeq	r0, r0, r3, asr r0
    3db8:	00000000 	andeq	r0, r0, r0
    3dbc:	00000100 	andeq	r0, r0, r0, lsl #2
    3dc0:	00000001 	andeq	r0, r0, r1
    3dc4:	00000000 	andeq	r0, r0, r0
    3dc8:	72000300 	andvc	r0, r0, #0, 6
    3dcc:	00009f14 	andeq	r9, r0, r4, lsl pc
    3dd0:	00000000 	andeq	r0, r0, r0
    3dd4:	00010000 	andeq	r0, r1, r0
    3dd8:	00000052 	andeq	r0, r0, r2, asr r0
    3ddc:	00000000 	andeq	r0, r0, r0
    3de0:	00010100 	andeq	r0, r1, r0, lsl #2
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	01000000 	mrseq	r0, (UNDEF: 0)
    3dec:	00005300 	andeq	r5, r0, r0, lsl #6
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3e00:	00510001 	subseq	r0, r1, r1
	...
    3e10:	02000000 	andeq	r0, r0, #0
    3e14:	00007d00 	andeq	r7, r0, r0, lsl #26
    3e18:	00000000 	andeq	r0, r0, r0
    3e1c:	02000000 	andeq	r0, r0, #0
    3e20:	00087d00 	andeq	r7, r8, r0, lsl #26
    3e24:	00000000 	andeq	r0, r0, r0
    3e28:	02000000 	andeq	r0, r0, #0
    3e2c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    3e44:	01000000 	mrseq	r0, (UNDEF: 0)
    3e48:	00005000 	andeq	r5, r0, r0
    3e4c:	00000000 	andeq	r0, r0, r0
    3e50:	00040000 	andeq	r0, r4, r0
    3e54:	9f5001f3 	svcls	0x005001f3
	...
    3e60:	00500001 	subseq	r0, r0, r1
    3e64:	00000000 	andeq	r0, r0, r0
    3e68:	04000000 	streq	r0, [r0], #-0
    3e6c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3e70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3e80:	01000000 	mrseq	r0, (UNDEF: 0)
    3e84:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3e90:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3e9c:	14720003 	ldrbtne	r0, [r2], #-3
    3ea0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ea4:	00000000 	andeq	r0, r0, r0
    3ea8:	53000100 	movwpl	r0, #256	; 0x100
	...
    3eb4:	14720003 	ldrbtne	r0, [r2], #-3
    3eb8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ebc:	00000000 	andeq	r0, r0, r0
    3ec0:	00010000 	andeq	r0, r1, r0
    3ec4:	00000000 	andeq	r0, r0, r0
    3ec8:	01000000 	mrseq	r0, (UNDEF: 0)
    3ecc:	00005300 	andeq	r5, r0, r0, lsl #6
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	00010000 	andeq	r0, r1, r0
    3ed8:	00000100 	andeq	r0, r0, r0, lsl #2
    3edc:	00000000 	andeq	r0, r0, r0
    3ee0:	00030000 	andeq	r0, r3, r0
    3ee4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3ee8:	00000000 	andeq	r0, r0, r0
    3eec:	01000000 	mrseq	r0, (UNDEF: 0)
    3ef0:	00005200 	andeq	r5, r0, r0, lsl #4
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3f04:	00530001 	subseq	r0, r3, r1
	...
    3f10:	00000001 	andeq	r0, r0, r1
    3f14:	00000000 	andeq	r0, r0, r0
    3f18:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3f2c:	00010000 	andeq	r0, r1, r0
    3f30:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3f3c:	00010000 	andeq	r0, r1, r0
    3f40:	00000000 	andeq	r0, r0, r0
    3f44:	03000000 	movweq	r0, #0
    3f48:	9f0c7200 	svcls	0x000c7200
	...
    3f54:	00530001 	subseq	r0, r3, r1
    3f58:	00000000 	andeq	r0, r0, r0
    3f5c:	03000000 	movweq	r0, #0
    3f60:	9f0c7200 	svcls	0x000c7200
	...
    3f6c:	00000100 	andeq	r0, r0, r0, lsl #2
    3f70:	00000000 	andeq	r0, r0, r0
    3f74:	00010000 	andeq	r0, r1, r0
    3f78:	00000053 	andeq	r0, r0, r3, asr r0
    3f7c:	00000000 	andeq	r0, r0, r0
    3f80:	00000100 	andeq	r0, r0, r0, lsl #2
    3f84:	00000001 	andeq	r0, r0, r1
    3f88:	00000000 	andeq	r0, r0, r0
    3f8c:	72000300 	andvc	r0, r0, #0, 6
    3f90:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3f94:	00000000 	andeq	r0, r0, r0
    3f98:	00010000 	andeq	r0, r1, r0
    3f9c:	00000052 	andeq	r0, r0, r2, asr r0
    3fa0:	00000000 	andeq	r0, r0, r0
    3fa4:	00010100 	andeq	r0, r1, r0, lsl #2
    3fa8:	00000000 	andeq	r0, r0, r0
    3fac:	01000000 	mrseq	r0, (UNDEF: 0)
    3fb0:	00005300 	andeq	r5, r0, r0, lsl #6
    3fb4:	00000000 	andeq	r0, r0, r0
    3fb8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3fc4:	00510001 	subseq	r0, r1, r1
	...
    3fd8:	53000100 	movwpl	r0, #256	; 0x100
	...
    3fe8:	00000100 	andeq	r0, r0, r0, lsl #2
    3fec:	00000000 	andeq	r0, r0, r0
    3ff0:	00030000 	andeq	r0, r3, r0
    3ff4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3ff8:	00000000 	andeq	r0, r0, r0
    3ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    4000:	00005300 	andeq	r5, r0, r0, lsl #6
    4004:	00000000 	andeq	r0, r0, r0
    4008:	00030000 	andeq	r0, r3, r0
    400c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    4018:	00000001 	andeq	r0, r0, r1
    401c:	00000000 	andeq	r0, r0, r0
    4020:	53000100 	movwpl	r0, #256	; 0x100
	...
    402c:	01000001 	tsteq	r0, r1
	...
    4038:	14720003 	ldrbtne	r0, [r2], #-3
    403c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4040:	00000000 	andeq	r0, r0, r0
    4044:	52000100 	andpl	r0, r0, #0, 2
	...
    4050:	00000101 	andeq	r0, r0, r1, lsl #2
    4054:	00000000 	andeq	r0, r0, r0
    4058:	00010000 	andeq	r0, r1, r0
    405c:	00000053 	andeq	r0, r0, r3, asr r0
    4060:	00000000 	andeq	r0, r0, r0
    4064:	00010000 	andeq	r0, r1, r0
    4068:	00000000 	andeq	r0, r0, r0
    406c:	01000000 	mrseq	r0, (UNDEF: 0)
    4070:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4084:	00530001 	subseq	r0, r3, r1
	...
    4094:	00000001 	andeq	r0, r0, r1
    4098:	00000000 	andeq	r0, r0, r0
    409c:	72000300 	andvc	r0, r0, #0, 6
    40a0:	00009f14 	andeq	r9, r0, r4, lsl pc
    40a4:	00000000 	andeq	r0, r0, r0
    40a8:	00010000 	andeq	r0, r1, r0
    40ac:	00000053 	andeq	r0, r0, r3, asr r0
    40b0:	00000000 	andeq	r0, r0, r0
    40b4:	72000300 	andvc	r0, r0, #0, 6
    40b8:	00009f14 	andeq	r9, r0, r4, lsl pc
    40bc:	00000000 	andeq	r0, r0, r0
    40c0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    40cc:	00530001 	subseq	r0, r3, r1
    40d0:	00000000 	andeq	r0, r0, r0
    40d4:	01000000 	mrseq	r0, (UNDEF: 0)
    40d8:	00010000 	andeq	r0, r1, r0
    40dc:	00000000 	andeq	r0, r0, r0
    40e0:	03000000 	movweq	r0, #0
    40e4:	9f147200 	svcls	0x00147200
	...
    40f0:	00520001 	subseq	r0, r2, r1
    40f4:	00000000 	andeq	r0, r0, r0
    40f8:	01000000 	mrseq	r0, (UNDEF: 0)
    40fc:	00000001 	andeq	r0, r0, r1
    4100:	00000000 	andeq	r0, r0, r0
    4104:	53000100 	movwpl	r0, #256	; 0x100
	...
    4110:	00000100 	andeq	r0, r0, r0, lsl #2
    4114:	00000000 	andeq	r0, r0, r0
    4118:	00010000 	andeq	r0, r1, r0
    411c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4130:	01000000 	mrseq	r0, (UNDEF: 0)
    4134:	00005000 	andeq	r5, r0, r0
    4138:	00000000 	andeq	r0, r0, r0
    413c:	00040000 	andeq	r0, r4, r0
    4140:	9f5001f3 	svcls	0x005001f3
	...
    414c:	00500001 	subseq	r0, r0, r1
    4150:	00000000 	andeq	r0, r0, r0
    4154:	02000000 	andeq	r0, r0, #0
	...
    4168:	30000200 	andcc	r0, r0, r0, lsl #4
    416c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4170:	00000000 	andeq	r0, r0, r0
    4174:	72000800 	andvc	r0, r0, #0, 16
    4178:	082e3000 	stmdaeq	lr!, {ip, sp}
    417c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    4180:	00000000 	andeq	r0, r0, r0
    4184:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4188:	30007200 	andcc	r7, r0, r0, lsl #4
    418c:	1aff082e 	bne	fffc624c <_estack+0xdffc5014>
    4190:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4194:	00000000 	andeq	r0, r0, r0
    4198:	72000800 	andvc	r0, r0, #0, 16
    419c:	082e3000 	stmdaeq	lr!, {ip, sp}
    41a0:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    41a4:	00000000 	andeq	r0, r0, r0
    41a8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    41ac:	30007200 	andcc	r7, r0, r0, lsl #4
    41b0:	1aff082e 	bne	fffc6270 <_estack+0xdffc5038>
    41b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    41c4:	01000000 	mrseq	r0, (UNDEF: 0)
    41c8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    41d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    41e0:	14720003 	ldrbtne	r0, [r2], #-3
    41e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    41e8:	00000000 	andeq	r0, r0, r0
    41ec:	53000100 	movwpl	r0, #256	; 0x100
	...
    41f8:	14720003 	ldrbtne	r0, [r2], #-3
    41fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4200:	00000000 	andeq	r0, r0, r0
    4204:	00010000 	andeq	r0, r1, r0
    4208:	00000000 	andeq	r0, r0, r0
    420c:	01000000 	mrseq	r0, (UNDEF: 0)
    4210:	00005300 	andeq	r5, r0, r0, lsl #6
    4214:	00000000 	andeq	r0, r0, r0
    4218:	00010000 	andeq	r0, r1, r0
    421c:	00000100 	andeq	r0, r0, r0, lsl #2
    4220:	00000000 	andeq	r0, r0, r0
    4224:	00030000 	andeq	r0, r3, r0
    4228:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    422c:	00000000 	andeq	r0, r0, r0
    4230:	01000000 	mrseq	r0, (UNDEF: 0)
    4234:	00005200 	andeq	r5, r0, r0, lsl #4
    4238:	00000000 	andeq	r0, r0, r0
    423c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4248:	00530001 	subseq	r0, r3, r1
	...
    4254:	00000001 	andeq	r0, r0, r1
    4258:	00000000 	andeq	r0, r0, r0
    425c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4270:	00010000 	andeq	r0, r1, r0
    4274:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4280:	00010000 	andeq	r0, r1, r0
    4284:	00000000 	andeq	r0, r0, r0
    4288:	03000000 	movweq	r0, #0
    428c:	9f0c7200 	svcls	0x000c7200
	...
    4298:	00530001 	subseq	r0, r3, r1
    429c:	00000000 	andeq	r0, r0, r0
    42a0:	03000000 	movweq	r0, #0
    42a4:	9f0c7200 	svcls	0x000c7200
	...
    42b0:	00000100 	andeq	r0, r0, r0, lsl #2
    42b4:	00000000 	andeq	r0, r0, r0
    42b8:	00010000 	andeq	r0, r1, r0
    42bc:	00000053 	andeq	r0, r0, r3, asr r0
    42c0:	00000000 	andeq	r0, r0, r0
    42c4:	00000100 	andeq	r0, r0, r0, lsl #2
    42c8:	00000001 	andeq	r0, r0, r1
    42cc:	00000000 	andeq	r0, r0, r0
    42d0:	72000300 	andvc	r0, r0, #0, 6
    42d4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    42d8:	00000000 	andeq	r0, r0, r0
    42dc:	00010000 	andeq	r0, r1, r0
    42e0:	00000052 	andeq	r0, r0, r2, asr r0
    42e4:	00000000 	andeq	r0, r0, r0
    42e8:	00010100 	andeq	r0, r1, r0, lsl #2
    42ec:	00000000 	andeq	r0, r0, r0
    42f0:	01000000 	mrseq	r0, (UNDEF: 0)
    42f4:	00005300 	andeq	r5, r0, r0, lsl #6
    42f8:	00000000 	andeq	r0, r0, r0
    42fc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4308:	00510001 	subseq	r0, r1, r1
	...
    431c:	53000100 	movwpl	r0, #256	; 0x100
	...
    432c:	00000100 	andeq	r0, r0, r0, lsl #2
    4330:	00000000 	andeq	r0, r0, r0
    4334:	00030000 	andeq	r0, r3, r0
    4338:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    433c:	00000000 	andeq	r0, r0, r0
    4340:	01000000 	mrseq	r0, (UNDEF: 0)
    4344:	00005300 	andeq	r5, r0, r0, lsl #6
    4348:	00000000 	andeq	r0, r0, r0
    434c:	00030000 	andeq	r0, r3, r0
    4350:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    435c:	00000001 	andeq	r0, r0, r1
    4360:	00000000 	andeq	r0, r0, r0
    4364:	53000100 	movwpl	r0, #256	; 0x100
	...
    4370:	01000001 	tsteq	r0, r1
	...
    437c:	14720003 	ldrbtne	r0, [r2], #-3
    4380:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4384:	00000000 	andeq	r0, r0, r0
    4388:	52000100 	andpl	r0, r0, #0, 2
	...
    4394:	00000101 	andeq	r0, r0, r1, lsl #2
    4398:	00000000 	andeq	r0, r0, r0
    439c:	00010000 	andeq	r0, r1, r0
    43a0:	00000053 	andeq	r0, r0, r3, asr r0
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	00010000 	andeq	r0, r1, r0
    43ac:	00000000 	andeq	r0, r0, r0
    43b0:	01000000 	mrseq	r0, (UNDEF: 0)
    43b4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    43c8:	00530001 	subseq	r0, r3, r1
	...
    43d8:	00000001 	andeq	r0, r0, r1
    43dc:	00000000 	andeq	r0, r0, r0
    43e0:	72000300 	andvc	r0, r0, #0, 6
    43e4:	00009f14 	andeq	r9, r0, r4, lsl pc
    43e8:	00000000 	andeq	r0, r0, r0
    43ec:	00010000 	andeq	r0, r1, r0
    43f0:	00000053 	andeq	r0, r0, r3, asr r0
    43f4:	00000000 	andeq	r0, r0, r0
    43f8:	72000300 	andvc	r0, r0, #0, 6
    43fc:	00009f14 	andeq	r9, r0, r4, lsl pc
    4400:	00000000 	andeq	r0, r0, r0
    4404:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4410:	00530001 	subseq	r0, r3, r1
    4414:	00000000 	andeq	r0, r0, r0
    4418:	01000000 	mrseq	r0, (UNDEF: 0)
    441c:	00010000 	andeq	r0, r1, r0
    4420:	00000000 	andeq	r0, r0, r0
    4424:	03000000 	movweq	r0, #0
    4428:	9f147200 	svcls	0x00147200
	...
    4434:	00520001 	subseq	r0, r2, r1
    4438:	00000000 	andeq	r0, r0, r0
    443c:	01000000 	mrseq	r0, (UNDEF: 0)
    4440:	00000001 	andeq	r0, r0, r1
    4444:	00000000 	andeq	r0, r0, r0
    4448:	53000100 	movwpl	r0, #256	; 0x100
	...
    4454:	00000100 	andeq	r0, r0, r0, lsl #2
    4458:	00000000 	andeq	r0, r0, r0
    445c:	00010000 	andeq	r0, r1, r0
    4460:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4470:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    447c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4480:	00000008 	andeq	r0, r0, r8
	...
    44a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    44ac:	01f30004 	mvnseq	r0, r4
    44b0:	00009f50 	andeq	r9, r0, r0, asr pc
    44b4:	00000000 	andeq	r0, r0, r0
    44b8:	00010000 	andeq	r0, r1, r0
    44bc:	00000050 	andeq	r0, r0, r0, asr r0
    44c0:	00000000 	andeq	r0, r0, r0
    44c4:	f3000400 	vshl.u8	d0, d0, d0
    44c8:	009f5001 	addseq	r5, pc, r1
    44cc:	00000000 	andeq	r0, r0, r0
    44d0:	01000000 	mrseq	r0, (UNDEF: 0)
    44d4:	00005000 	andeq	r5, r0, r0
    44d8:	00000000 	andeq	r0, r0, r0
    44dc:	00040000 	andeq	r0, r4, r0
    44e0:	9f5001f3 	svcls	0x005001f3
	...
    44ec:	00500001 	subseq	r0, r0, r1
    44f0:	00000000 	andeq	r0, r0, r0
    44f4:	04000000 	streq	r0, [r0], #-0
    44f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    44fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4514:	01000000 	mrseq	r0, (UNDEF: 0)
    4518:	00005100 	andeq	r5, r0, r0, lsl #2
    451c:	00000000 	andeq	r0, r0, r0
    4520:	00040000 	andeq	r0, r4, r0
    4524:	9f5101f3 	svcls	0x005101f3
	...
    4530:	00510001 	subseq	r0, r1, r1
    4534:	00000000 	andeq	r0, r0, r0
    4538:	04000000 	streq	r0, [r0], #-0
    453c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4540:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4544:	00000000 	andeq	r0, r0, r0
    4548:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4564:	00010000 	andeq	r0, r1, r0
    4568:	00000052 	andeq	r0, r0, r2, asr r0
    456c:	00000000 	andeq	r0, r0, r0
    4570:	f3000400 	vshl.u8	d0, d0, d0
    4574:	009f5201 	addseq	r5, pc, r1, lsl #4
    4578:	00000000 	andeq	r0, r0, r0
    457c:	01000000 	mrseq	r0, (UNDEF: 0)
    4580:	00005200 	andeq	r5, r0, r0, lsl #4
    4584:	00000000 	andeq	r0, r0, r0
    4588:	00040000 	andeq	r0, r4, r0
    458c:	9f5201f3 	svcls	0x005201f3
	...
    4598:	00520001 	subseq	r0, r2, r1
	...
    45a8:	02000000 	andeq	r0, r0, #0
    45ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    45b0:	00000000 	andeq	r0, r0, r0
    45b4:	02000000 	andeq	r0, r0, #0
    45b8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    45d8:	01000000 	mrseq	r0, (UNDEF: 0)
    45dc:	00005000 	andeq	r5, r0, r0
    45e0:	00000000 	andeq	r0, r0, r0
    45e4:	00040000 	andeq	r0, r4, r0
    45e8:	9f5001f3 	svcls	0x005001f3
	...
    45f4:	00500001 	subseq	r0, r0, r1
    45f8:	00000000 	andeq	r0, r0, r0
    45fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4600:	00005400 	andeq	r5, r0, r0, lsl #8
    4604:	00000000 	andeq	r0, r0, r0
    4608:	00010000 	andeq	r0, r1, r0
    460c:	00000050 	andeq	r0, r0, r0, asr r0
    4610:	00000000 	andeq	r0, r0, r0
    4614:	f3000400 	vshl.u8	d0, d0, d0
    4618:	009f5001 	addseq	r5, pc, r1
    461c:	00000000 	andeq	r0, r0, r0
    4620:	01000000 	mrseq	r0, (UNDEF: 0)
    4624:	00005000 	andeq	r5, r0, r0
    4628:	00000000 	andeq	r0, r0, r0
    462c:	00010000 	andeq	r0, r1, r0
    4630:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4648:	01000000 	mrseq	r0, (UNDEF: 0)
    464c:	00005100 	andeq	r5, r0, r0, lsl #2
    4650:	00000000 	andeq	r0, r0, r0
    4654:	00040000 	andeq	r0, r4, r0
    4658:	9f5101f3 	svcls	0x005101f3
	...
    4664:	00510001 	subseq	r0, r1, r1
    4668:	00000000 	andeq	r0, r0, r0
    466c:	04000000 	streq	r0, [r0], #-0
    4670:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4674:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4678:	00000000 	andeq	r0, r0, r0
    467c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4698:	00010000 	andeq	r0, r1, r0
    469c:	00000052 	andeq	r0, r0, r2, asr r0
    46a0:	00000000 	andeq	r0, r0, r0
    46a4:	f3000400 	vshl.u8	d0, d0, d0
    46a8:	009f5201 	addseq	r5, pc, r1, lsl #4
    46ac:	00000000 	andeq	r0, r0, r0
    46b0:	01000000 	mrseq	r0, (UNDEF: 0)
    46b4:	00005200 	andeq	r5, r0, r0, lsl #4
    46b8:	00000000 	andeq	r0, r0, r0
    46bc:	00040000 	andeq	r0, r4, r0
    46c0:	9f5201f3 	svcls	0x005201f3
	...
    46cc:	00520001 	subseq	r0, r2, r1
    46d0:	00000000 	andeq	r0, r0, r0
    46d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    46e0:	f2000600 	vmax.s8	d0, d0, d0
    46e4:	00006b5d 	andeq	r6, r0, sp, asr fp
	...
    46f8:	01000000 	mrseq	r0, (UNDEF: 0)
    46fc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4708:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4714:	14720003 	ldrbtne	r0, [r2], #-3
    4718:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    471c:	00000000 	andeq	r0, r0, r0
    4720:	53000100 	movwpl	r0, #256	; 0x100
	...
    472c:	14720003 	ldrbtne	r0, [r2], #-3
    4730:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4734:	00000000 	andeq	r0, r0, r0
    4738:	00010000 	andeq	r0, r1, r0
    473c:	00000000 	andeq	r0, r0, r0
    4740:	01000000 	mrseq	r0, (UNDEF: 0)
    4744:	00005300 	andeq	r5, r0, r0, lsl #6
    4748:	00000000 	andeq	r0, r0, r0
    474c:	00010000 	andeq	r0, r1, r0
    4750:	00000100 	andeq	r0, r0, r0, lsl #2
    4754:	00000000 	andeq	r0, r0, r0
    4758:	00030000 	andeq	r0, r3, r0
    475c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4760:	00000000 	andeq	r0, r0, r0
    4764:	01000000 	mrseq	r0, (UNDEF: 0)
    4768:	00005200 	andeq	r5, r0, r0, lsl #4
    476c:	00000000 	andeq	r0, r0, r0
    4770:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    477c:	00530001 	subseq	r0, r3, r1
	...
    4788:	00000001 	andeq	r0, r0, r1
    478c:	00000000 	andeq	r0, r0, r0
    4790:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    47a4:	007d0002 	rsbseq	r0, sp, r2
	...
    47b0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    47d4:	00500001 	subseq	r0, r0, r1
    47d8:	00000000 	andeq	r0, r0, r0
    47dc:	04000000 	streq	r0, [r0], #-0
    47e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    47e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    47e8:	00000000 	andeq	r0, r0, r0
    47ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    47f8:	01f30004 	mvnseq	r0, r4
    47fc:	00009f50 	andeq	r9, r0, r0, asr pc
    4800:	00000000 	andeq	r0, r0, r0
    4804:	00010000 	andeq	r0, r1, r0
    4808:	00000050 	andeq	r0, r0, r0, asr r0
    480c:	00000000 	andeq	r0, r0, r0
    4810:	f3000400 	vshl.u8	d0, d0, d0
    4814:	009f5001 	addseq	r5, pc, r1
    4818:	00000000 	andeq	r0, r0, r0
    481c:	01000000 	mrseq	r0, (UNDEF: 0)
    4820:	00005000 	andeq	r5, r0, r0
    4824:	00000000 	andeq	r0, r0, r0
    4828:	00040000 	andeq	r0, r4, r0
    482c:	9f5001f3 	svcls	0x005001f3
	...
    4848:	00010000 	andeq	r0, r1, r0
    484c:	00000051 	andeq	r0, r0, r1, asr r0
    4850:	00000000 	andeq	r0, r0, r0
    4854:	f3000400 	vshl.u8	d0, d0, d0
    4858:	009f5101 	addseq	r5, pc, r1, lsl #2
    485c:	00000000 	andeq	r0, r0, r0
    4860:	01000000 	mrseq	r0, (UNDEF: 0)
    4864:	00005100 	andeq	r5, r0, r0, lsl #2
    4868:	00000000 	andeq	r0, r0, r0
    486c:	00040000 	andeq	r0, r4, r0
    4870:	9f5101f3 	svcls	0x005101f3
	...
    487c:	00510001 	subseq	r0, r1, r1
	...
    4898:	52000100 	andpl	r0, r0, #0, 2
	...
    48a4:	01f30004 	mvnseq	r0, r4
    48a8:	00009f52 	andeq	r9, r0, r2, asr pc
    48ac:	00000000 	andeq	r0, r0, r0
    48b0:	00010000 	andeq	r0, r1, r0
    48b4:	00000052 	andeq	r0, r0, r2, asr r0
    48b8:	00000000 	andeq	r0, r0, r0
    48bc:	f3000400 	vshl.u8	d0, d0, d0
    48c0:	009f5201 	addseq	r5, pc, r1, lsl #4
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	01000000 	mrseq	r0, (UNDEF: 0)
    48cc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    48ec:	00010000 	andeq	r0, r1, r0
    48f0:	00000050 	andeq	r0, r0, r0, asr r0
    48f4:	00000000 	andeq	r0, r0, r0
    48f8:	f3000400 	vshl.u8	d0, d0, d0
    48fc:	009f5001 	addseq	r5, pc, r1
    4900:	00000000 	andeq	r0, r0, r0
    4904:	01000000 	mrseq	r0, (UNDEF: 0)
    4908:	00005000 	andeq	r5, r0, r0
    490c:	00000000 	andeq	r0, r0, r0
    4910:	00040000 	andeq	r0, r4, r0
    4914:	9f5001f3 	svcls	0x005001f3
	...
    4920:	00500001 	subseq	r0, r0, r1
    4924:	00000000 	andeq	r0, r0, r0
    4928:	04000000 	streq	r0, [r0], #-0
    492c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4930:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4934:	00000000 	andeq	r0, r0, r0
    4938:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4944:	01f30004 	mvnseq	r0, r4
    4948:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4960:	00010000 	andeq	r0, r1, r0
    4964:	00000051 	andeq	r0, r0, r1, asr r0
    4968:	00000000 	andeq	r0, r0, r0
    496c:	70000200 	andvc	r0, r0, r0, lsl #4
    4970:	00000020 	andeq	r0, r0, r0, lsr #32
    4974:	00000000 	andeq	r0, r0, r0
    4978:	f3000400 	vshl.u8	d0, d0, d0
    497c:	009f5101 	addseq	r5, pc, r1, lsl #2
    4980:	00000000 	andeq	r0, r0, r0
    4984:	01000000 	mrseq	r0, (UNDEF: 0)
    4988:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    49a0:	00010000 	andeq	r0, r1, r0
    49a4:	00000052 	andeq	r0, r0, r2, asr r0
    49a8:	00000000 	andeq	r0, r0, r0
    49ac:	70000200 	andvc	r0, r0, r0, lsl #4
    49b0:	00000024 	andeq	r0, r0, r4, lsr #32
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	f3000400 	vshl.u8	d0, d0, d0
    49bc:	009f5201 	addseq	r5, pc, r1, lsl #4
    49c0:	00000000 	andeq	r0, r0, r0
    49c4:	01000000 	mrseq	r0, (UNDEF: 0)
    49c8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    49d8:	00020000 	andeq	r0, r2, r0
    49dc:	0000007d 	andeq	r0, r0, sp, ror r0
    49e0:	00000000 	andeq	r0, r0, r0
    49e4:	00020000 	andeq	r0, r2, r0
    49e8:	0000187d 	andeq	r1, r0, sp, ror r8
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	00020000 	andeq	r0, r2, r0
    49f4:	0000207d 	andeq	r2, r0, sp, ror r0
    49f8:	00000000 	andeq	r0, r0, r0
    49fc:	00020000 	andeq	r0, r2, r0
    4a00:	0000187d 	andeq	r1, r0, sp, ror r8
    4a04:	00000000 	andeq	r0, r0, r0
    4a08:	00020000 	andeq	r0, r2, r0
    4a0c:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    4a2c:	00010000 	andeq	r0, r1, r0
    4a30:	00000050 	andeq	r0, r0, r0, asr r0
    4a34:	00000000 	andeq	r0, r0, r0
    4a38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4a44:	00500001 	subseq	r0, r0, r1
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a50:	00005400 	andeq	r5, r0, r0, lsl #8
    4a54:	00000000 	andeq	r0, r0, r0
    4a58:	00010000 	andeq	r0, r1, r0
    4a5c:	00000050 	andeq	r0, r0, r0, asr r0
    4a60:	00000000 	andeq	r0, r0, r0
    4a64:	f3000400 	vshl.u8	d0, d0, d0
    4a68:	009f5001 	addseq	r5, pc, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	01000000 	mrseq	r0, (UNDEF: 0)
    4a74:	00005000 	andeq	r5, r0, r0
    4a78:	00000000 	andeq	r0, r0, r0
    4a7c:	00010000 	andeq	r0, r1, r0
    4a80:	00000054 	andeq	r0, r0, r4, asr r0
	...
    4a9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4aa0:	00005100 	andeq	r5, r0, r0, lsl #2
    4aa4:	00000000 	andeq	r0, r0, r0
    4aa8:	00010000 	andeq	r0, r1, r0
    4aac:	00000055 	andeq	r0, r0, r5, asr r0
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	58000100 	stmdapl	r0, {r8}
	...
    4ac0:	01f30004 	mvnseq	r0, r4
    4ac4:	00009f51 	andeq	r9, r0, r1, asr pc
    4ac8:	00000000 	andeq	r0, r0, r0
    4acc:	00010000 	andeq	r0, r1, r0
    4ad0:	00000051 	andeq	r0, r0, r1, asr r0
    4ad4:	00000000 	andeq	r0, r0, r0
    4ad8:	f3000400 	vshl.u8	d0, d0, d0
    4adc:	009f5101 	addseq	r5, pc, r1, lsl #2
    4ae0:	00000000 	andeq	r0, r0, r0
    4ae4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ae8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4b04:	00520001 	subseq	r0, r2, r1
    4b08:	00000000 	andeq	r0, r0, r0
    4b0c:	04000000 	streq	r0, [r0], #-0
    4b10:	5201f300 	andpl	pc, r1, #0, 6
    4b14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	52000100 	andpl	r0, r0, #0, 2
	...
    4b28:	01f30004 	mvnseq	r0, r4
    4b2c:	00009f52 	andeq	r9, r0, r2, asr pc
    4b30:	00000000 	andeq	r0, r0, r0
    4b34:	00010000 	andeq	r0, r1, r0
    4b38:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4b4c:	53000100 	movwpl	r0, #256	; 0x100
	...
    4b58:	00560001 	subseq	r0, r6, r1
	...
    4b6c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    4b78:	01000000 	mrseq	r0, (UNDEF: 0)
    4b7c:	00000001 	andeq	r0, r0, r1
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	00010000 	andeq	r0, r1, r0
    4b88:	00000058 	andeq	r0, r0, r8, asr r0
    4b8c:	00000000 	andeq	r0, r0, r0
    4b90:	78000300 	stmdavc	r0, {r8, r9}
    4b94:	00009f7e 	andeq	r9, r0, lr, ror pc
    4b98:	00000000 	andeq	r0, r0, r0
    4b9c:	00010000 	andeq	r0, r1, r0
    4ba0:	00000058 	andeq	r0, r0, r8, asr r0
    4ba4:	00000000 	andeq	r0, r0, r0
    4ba8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4bb8:	02000000 	andeq	r0, r0, #0
    4bbc:	009f3000 	addseq	r3, pc, r0
    4bc0:	00000000 	andeq	r0, r0, r0
    4bc4:	01000000 	mrseq	r0, (UNDEF: 0)
    4bc8:	00005000 	andeq	r5, r0, r0
    4bcc:	00000000 	andeq	r0, r0, r0
    4bd0:	00010000 	andeq	r0, r1, r0
    4bd4:	00000057 	andeq	r0, r0, r7, asr r0
    4bd8:	00000000 	andeq	r0, r0, r0
    4bdc:	30000200 	andcc	r0, r0, r0, lsl #4
    4be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	30000200 	andcc	r0, r0, r0, lsl #4
    4bec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4bf0:	00000000 	andeq	r0, r0, r0
    4bf4:	000cac00 	andeq	sl, ip, r0, lsl #24
    4bf8:	000cb008 	andeq	fp, ip, r8
    4bfc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c00:	000cb000 	andeq	fp, ip, r0
    4c04:	000cb208 	andeq	fp, ip, r8, lsl #4
    4c08:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c0c:	000cb218 	andeq	fp, ip, r8, lsl r2
    4c10:	000d7008 	andeq	r7, sp, r8
    4c14:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c18:	000d7020 	andeq	r7, sp, r0, lsr #32
    4c1c:	000d7408 	andeq	r7, sp, r8, lsl #8
    4c20:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c24:	000d7418 	andeq	r7, sp, r8, lsl r4
    4c28:	000d7808 	andeq	r7, sp, r8, lsl #16
    4c2c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    4c30:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    4c48:	000cac00 	andeq	sl, ip, r0, lsl #24
    4c4c:	000ccc08 	andeq	ip, ip, r8, lsl #24
    4c50:	50000108 	andpl	r0, r0, r8, lsl #2
    4c54:	08000ccc 	stmdaeq	r0, {r2, r3, r6, r7, sl, fp}
    4c58:	08000cce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, fp}
    4c5c:	ce540001 	cdpgt	0, 5, cr0, cr4, cr1, {0}
    4c60:	db08000c 	blle	204c98 <_Min_Heap_Size+0x204498>
    4c64:	0108000c 	tsteq	r8, ip
    4c68:	0cdb5000 	ldcleq	0, cr5, [fp], {0}
    4c6c:	0d6c0800 	stcleq	8, cr0, [ip, #-0]
    4c70:	00010800 	andeq	r0, r1, r0, lsl #16
    4c74:	000d6c54 	andeq	r6, sp, r4, asr ip
    4c78:	000d6e08 	andeq	r6, sp, r8, lsl #28
    4c7c:	50000108 	andpl	r0, r0, r8, lsl #2
    4c80:	08000d6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, fp}
    4c84:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
    4c88:	01f30004 	mvnseq	r0, r4
    4c8c:	0d749f50 	ldcleq	15, cr9, [r4, #-320]!	; 0xfffffec0
    4c90:	0d760800 	ldcleq	8, cr0, [r6, #-0]
    4c94:	00010800 	andeq	r0, r1, r0, lsl #16
    4c98:	000d7650 	andeq	r7, sp, r0, asr r6
    4c9c:	000d7808 	andeq	r7, sp, r8, lsl #16
    4ca0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    4cbc:	0cac0000 	stceq	0, cr0, [ip]
    4cc0:	0cdb0800 	ldcleq	8, cr0, [fp], {0}
    4cc4:	00010800 	andeq	r0, r1, r0, lsl #16
    4cc8:	000cdb51 	andeq	sp, ip, r1, asr fp
    4ccc:	000cfe08 	andeq	pc, ip, r8, lsl #28
    4cd0:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    4cd4:	08000cfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, fp}
    4cd8:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
    4cdc:	01f30004 	mvnseq	r0, r4
    4ce0:	0d449f51 	stcleq	15, cr9, [r4, #-324]	; 0xfffffebc
    4ce4:	0d480800 	stcleq	8, cr0, [r8, #-0]
    4ce8:	00010800 	andeq	r0, r1, r0, lsl #16
    4cec:	000d4855 	andeq	r4, sp, r5, asr r8
    4cf0:	000d4a08 	andeq	r4, sp, r8, lsl #20
    4cf4:	58000108 	stmdapl	r0, {r3, r8}
    4cf8:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
    4cfc:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
    4d00:	01f30004 	mvnseq	r0, r4
    4d04:	0d6c9f51 	stcleq	15, cr9, [ip, #-324]!	; 0xfffffebc
    4d08:	0d6e0800 	stcleq	8, cr0, [lr, #-0]
    4d0c:	00010800 	andeq	r0, r1, r0, lsl #16
    4d10:	000d6e51 	andeq	r6, sp, r1, asr lr
    4d14:	000d7408 	andeq	r7, sp, r8, lsl #8
    4d18:	f3000408 	vshl.u8	d0, d8, d0
    4d1c:	749f5101 	ldrvc	r5, [pc], #257	; 4d24 <_Min_Heap_Size+0x4524>
    4d20:	7808000d 	stmdavc	r8, {r0, r2, r3}
    4d24:	0108000d 	tsteq	r8, sp
    4d28:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4d3c:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
    4d40:	08000cdb 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, sl, fp}
    4d44:	db520001 	blle	1484d50 <_Min_Heap_Size+0x1484550>
    4d48:	6c08000c 	stcvs	0, cr0, [r8], {12}
    4d4c:	0408000d 	streq	r0, [r8], #-13
    4d50:	5201f300 	andpl	pc, r1, #0, 6
    4d54:	000d6c9f 	muleq	sp, pc, ip	; <UNPREDICTABLE>
    4d58:	000d6e08 	andeq	r6, sp, r8, lsl #28
    4d5c:	52000108 	andpl	r0, r0, #8, 2
    4d60:	08000d6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, fp}
    4d64:	08000d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp}
    4d68:	01f30004 	mvnseq	r0, r4
    4d6c:	0d749f52 	ldcleq	15, cr9, [r4, #-328]!	; 0xfffffeb8
    4d70:	0d780800 	ldcleq	8, cr0, [r8, #-0]
    4d74:	00010800 	andeq	r0, r1, r0, lsl #16
    4d78:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4d84:	000cac00 	andeq	sl, ip, r0, lsl #24
    4d88:	000cb808 	andeq	fp, ip, r8, lsl #16
    4d8c:	53000108 	movwpl	r0, #264	; 0x108
    4d90:	08000cb8 	stmdaeq	r0, {r3, r4, r5, r7, sl, fp}
    4d94:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
    4d98:	00560001 	subseq	r0, r6, r1
	...
    4da4:	01010000 	mrseq	r0, (UNDEF: 1)
    4da8:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    4dac:	3e08000c 	cdpcc	0, 0, cr0, cr8, cr12, {0}
    4db0:	0108000d 	tsteq	r8, sp
    4db4:	0d3e5500 	cfldr32eq	mvfx5, [lr, #-0]
    4db8:	0d420800 	stcleq	8, cr0, [r2, #-0]
    4dbc:	00030800 	andeq	r0, r3, r0, lsl #16
    4dc0:	429f7f75 	addsmi	r7, pc, #468	; 0x1d4
    4dc4:	4408000d 	strmi	r0, [r8], #-13
    4dc8:	0108000d 	tsteq	r8, sp
    4dcc:	0d4a5500 	cfstr64eq	mvdx5, [sl, #-0]
    4dd0:	0d6c0800 	stcleq	8, cr0, [ip, #-0]
    4dd4:	00010800 	andeq	r0, r1, r0, lsl #16
    4dd8:	00000055 	andeq	r0, r0, r5, asr r0
	...
    4de4:	00000101 	andeq	r0, r0, r1, lsl #2
    4de8:	000cfe00 	andeq	pc, ip, r0, lsl #28
    4dec:	000d0c08 	andeq	r0, sp, r8, lsl #24
    4df0:	58000108 	stmdapl	r0, {r3, r8}
    4df4:	08000d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp}
    4df8:	08000d14 	stmdaeq	r0, {r2, r4, r8, sl, fp}
    4dfc:	7e780003 	cdpvc	0, 7, cr0, cr8, cr3, {0}
    4e00:	000d149f 	muleq	sp, pc, r4	; <UNPREDICTABLE>
    4e04:	000d4408 	andeq	r4, sp, r8, lsl #8
    4e08:	58000108 	stmdapl	r0, {r3, r8}
    4e0c:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
    4e10:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
    4e14:	00580001 	subseq	r0, r8, r1
    4e18:	00000000 	andeq	r0, r0, r0
    4e1c:	03000000 	movweq	r0, #0
	...
    4e2c:	000cb400 	andeq	fp, ip, r0, lsl #8
    4e30:	000cde08 	andeq	sp, ip, r8, lsl #28
    4e34:	30000208 	andcc	r0, r0, r8, lsl #4
    4e38:	000cde9f 	muleq	ip, pc, lr	; <UNPREDICTABLE>
    4e3c:	000cfe08 	andeq	pc, ip, r8, lsl #28
    4e40:	50000108 	andpl	r0, r0, r8, lsl #2
    4e44:	08000cfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, fp}
    4e48:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
    4e4c:	44570001 	ldrbmi	r0, [r7], #-1
    4e50:	4a08000d 	bmi	204e8c <_Min_Heap_Size+0x20468c>
    4e54:	0108000d 	tsteq	r8, sp
    4e58:	0d4a5000 	stcleq	0, cr5, [sl, #-0]
    4e5c:	0d6c0800 	stcleq	8, cr0, [ip, #-0]
    4e60:	00010800 	andeq	r0, r1, r0, lsl #16
    4e64:	000d6c57 	andeq	r6, sp, r7, asr ip
    4e68:	000d6e08 	andeq	r6, sp, r8, lsl #28
    4e6c:	30000208 	andcc	r0, r0, r8, lsl #4
    4e70:	000d749f 	muleq	sp, pc, r4	; <UNPREDICTABLE>
    4e74:	000d7808 	andeq	r7, sp, r8, lsl #16
    4e78:	30000208 	andcc	r0, r0, r8, lsl #4
    4e7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4e8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4e98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4e9c:	00000008 	andeq	r0, r0, r8
    4ea0:	00000000 	andeq	r0, r0, r0
    4ea4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4ec0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4ecc:	00540001 	subseq	r0, r4, r1
    4ed0:	00000000 	andeq	r0, r0, r0
    4ed4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ed8:	00005000 	andeq	r5, r0, r0
    4edc:	00000000 	andeq	r0, r0, r0
    4ee0:	00040000 	andeq	r0, r4, r0
    4ee4:	9f5001f3 	svcls	0x005001f3
	...
    4ef8:	007d0002 	rsbseq	r0, sp, r2
	...
    4f04:	107d0002 	rsbsne	r0, sp, r2
	...
    4f10:	007d0002 	rsbseq	r0, sp, r2
	...
    4f2c:	00500001 	subseq	r0, r0, r1
    4f30:	00000000 	andeq	r0, r0, r0
    4f34:	01000000 	mrseq	r0, (UNDEF: 0)
    4f38:	00005400 	andeq	r5, r0, r0, lsl #8
    4f3c:	00000000 	andeq	r0, r0, r0
    4f40:	00010000 	andeq	r0, r1, r0
    4f44:	00000050 	andeq	r0, r0, r0, asr r0
    4f48:	00000000 	andeq	r0, r0, r0
    4f4c:	f3000400 	vshl.u8	d0, d0, d0
    4f50:	009f5001 	addseq	r5, pc, r1
	...
    4f68:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4f74:	01f30004 	mvnseq	r0, r4
    4f78:	00009f51 	andeq	r9, r0, r1, asr pc
    4f7c:	00000000 	andeq	r0, r0, r0
    4f80:	00010000 	andeq	r0, r1, r0
    4f84:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4f9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4fa0:	00005200 	andeq	r5, r0, r0, lsl #4
    4fa4:	00000000 	andeq	r0, r0, r0
    4fa8:	00010000 	andeq	r0, r1, r0
    4fac:	00000056 	andeq	r0, r0, r6, asr r0
    4fb0:	00000000 	andeq	r0, r0, r0
    4fb4:	f3000400 	vshl.u8	d0, d0, d0
    4fb8:	009f5201 	addseq	r5, pc, r1, lsl #4
    4fbc:	00000000 	andeq	r0, r0, r0
    4fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    4fc4:	00005600 	andeq	r5, r0, r0, lsl #12
    4fc8:	00000000 	andeq	r0, r0, r0
    4fcc:	00010000 	andeq	r0, r1, r0
    4fd0:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4fe0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4fec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4ff0:	00000010 	andeq	r0, r0, r0, lsl r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5014:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5020:	00540001 	subseq	r0, r4, r1
    5024:	00000000 	andeq	r0, r0, r0
    5028:	01000000 	mrseq	r0, (UNDEF: 0)
    502c:	00005000 	andeq	r5, r0, r0
    5030:	00000000 	andeq	r0, r0, r0
    5034:	00040000 	andeq	r0, r4, r0
    5038:	9f5001f3 	svcls	0x005001f3
	...
    5054:	00010000 	andeq	r0, r1, r0
    5058:	00000051 	andeq	r0, r0, r1, asr r0
    505c:	00000000 	andeq	r0, r0, r0
    5060:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    506c:	01f30004 	mvnseq	r0, r4
    5070:	00009f51 	andeq	r9, r0, r1, asr pc
    5074:	00000000 	andeq	r0, r0, r0
    5078:	00010000 	andeq	r0, r1, r0
    507c:	00000055 	andeq	r0, r0, r5, asr r0
    5080:	00000000 	andeq	r0, r0, r0
    5084:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5098:	007d0002 	rsbseq	r0, sp, r2
	...
    50a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    50b0:	007d0002 	rsbseq	r0, sp, r2
	...
    50cc:	00500001 	subseq	r0, r0, r1
    50d0:	00000000 	andeq	r0, r0, r0
    50d4:	01000000 	mrseq	r0, (UNDEF: 0)
    50d8:	00005400 	andeq	r5, r0, r0, lsl #8
    50dc:	00000000 	andeq	r0, r0, r0
    50e0:	00010000 	andeq	r0, r1, r0
    50e4:	00000050 	andeq	r0, r0, r0, asr r0
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	f3000400 	vshl.u8	d0, d0, d0
    50f0:	009f5001 	addseq	r5, pc, r1
    50f4:	00000000 	andeq	r0, r0, r0
    50f8:	80000000 	andhi	r0, r0, r0
    50fc:	8808000b 	stmdahi	r8, {r0, r1, r3}
    5100:	0208000b 	andeq	r0, r8, #11
    5104:	88007d00 	stmdahi	r0, {r8, sl, fp, ip, sp, lr}
    5108:	9e08000b 	cdpls	0, 0, cr0, cr8, cr11, {0}
    510c:	0208000c 	andeq	r0, r8, #12
    5110:	9e087d00 	cdpls	13, 0, cr7, cr8, cr0, {0}
    5114:	ac08000c 	stcge	0, cr0, [r8], {12}
    5118:	0208000c 	andeq	r0, r8, #12
    511c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    5130:	80000000 	andhi	r0, r0, r0
    5134:	b608000b 	strlt	r0, [r8], -fp
    5138:	0108000b 	tsteq	r8, fp
    513c:	0bb65000 	bleq	fed99144 <_estack+0xded97f0c>
    5140:	0c3e0800 	ldceq	8, cr0, [lr], #-0
    5144:	00010800 	andeq	r0, r1, r0, lsl #16
    5148:	000c3e54 	andeq	r3, ip, r4, asr lr
    514c:	000c7408 	andeq	r7, ip, r8, lsl #8
    5150:	50000108 	andpl	r0, r0, r8, lsl #2
    5154:	08000c74 	stmdaeq	r0, {r2, r4, r5, r6, sl, fp}
    5158:	08000c9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, sl, fp}
    515c:	9e540001 	cdpls	0, 5, cr0, cr4, cr1, {0}
    5160:	a008000c 	andge	r0, r8, ip
    5164:	0108000c 	tsteq	r8, ip
    5168:	0ca05000 	stceq	0, cr5, [r0]
    516c:	0cac0800 	stceq	8, cr0, [ip]
    5170:	00040800 	andeq	r0, r4, r0, lsl #16
    5174:	9f5001f3 	svcls	0x005001f3
	...
    5188:	007d0002 	rsbseq	r0, sp, r2
	...
    5194:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51a0:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
    51a4:	08001146 	stmdaeq	r0, {r1, r2, r6, r8, ip}
    51a8:	007d0002 	rsbseq	r0, sp, r2
    51ac:	08001146 	stmdaeq	r0, {r1, r2, r6, r8, ip}
    51b0:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
    51b4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51c0:	08001124 	stmdaeq	r0, {r2, r5, r8, ip}
    51c4:	08001126 	stmdaeq	r0, {r1, r2, r5, r8, ip}
    51c8:	007d0002 	rsbseq	r0, sp, r2
    51cc:	08001126 	stmdaeq	r0, {r1, r2, r5, r8, ip}
    51d0:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
    51d4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    51e8:	007d0002 	rsbseq	r0, sp, r2
	...
    51f4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5200:	00000001 	andeq	r0, r0, r1
    5204:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5210:	9f300002 	svcls	0x00300002
	...
    521c:	00520001 	subseq	r0, r2, r1
    5220:	00000000 	andeq	r0, r0, r0
    5224:	01000000 	mrseq	r0, (UNDEF: 0)
    5228:	00005200 	andeq	r5, r0, r0, lsl #4
    522c:	00000000 	andeq	r0, r0, r0
    5230:	00020000 	andeq	r0, r2, r0
    5234:	00009f30 	andeq	r9, r0, r0, lsr pc
    5238:	00000000 	andeq	r0, r0, r0
    523c:	00010000 	andeq	r0, r1, r0
    5240:	00000000 	andeq	r0, r0, r0
    5244:	00000100 	andeq	r0, r0, r0, lsl #2
    5248:	00000000 	andeq	r0, r0, r0
    524c:	00020000 	andeq	r0, r2, r0
    5250:	00009f30 	andeq	r9, r0, r0, lsr pc
    5254:	00000000 	andeq	r0, r0, r0
    5258:	00010000 	andeq	r0, r1, r0
    525c:	00000050 	andeq	r0, r0, r0, asr r0
    5260:	00000000 	andeq	r0, r0, r0
    5264:	30000200 	andcc	r0, r0, r0, lsl #4
    5268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    526c:	00000000 	andeq	r0, r0, r0
    5270:	30000200 	andcc	r0, r0, r0, lsl #4
    5274:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5278:	00000000 	andeq	r0, r0, r0
    527c:	00000100 	andeq	r0, r0, r0, lsl #2
    5280:	00010000 	andeq	r0, r1, r0
    5284:	00000000 	andeq	r0, r0, r0
    5288:	02000000 	andeq	r0, r0, #0
    528c:	009f3000 	addseq	r3, pc, r0
    5290:	00000000 	andeq	r0, r0, r0
    5294:	01000000 	mrseq	r0, (UNDEF: 0)
    5298:	00005300 	andeq	r5, r0, r0, lsl #6
    529c:	00000000 	andeq	r0, r0, r0
    52a0:	00020000 	andeq	r0, r2, r0
    52a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    52a8:	00000000 	andeq	r0, r0, r0
    52ac:	00020000 	andeq	r0, r2, r0
    52b0:	00000000 	andeq	r0, r0, r0
    52b4:	00000100 	andeq	r0, r0, r0, lsl #2
    52b8:	00000000 	andeq	r0, r0, r0
    52bc:	00020000 	andeq	r0, r2, r0
    52c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    52c4:	00000000 	andeq	r0, r0, r0
    52c8:	00010000 	andeq	r0, r1, r0
    52cc:	00000050 	andeq	r0, r0, r0, asr r0
    52d0:	00000000 	andeq	r0, r0, r0
    52d4:	30000200 	andcc	r0, r0, r0, lsl #4
    52d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    52dc:	00000000 	andeq	r0, r0, r0
    52e0:	0c000600 	stceq	6, cr0, [r0], {-0}
    52e4:	00f42400 	rscseq	r2, r4, r0, lsl #8
    52e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    52f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5304:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5308:	00000010 	andeq	r0, r0, r0, lsl r0
    530c:	00000000 	andeq	r0, r0, r0
    5310:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5314:	00000030 	andeq	r0, r0, r0, lsr r0
    5318:	00000000 	andeq	r0, r0, r0
    531c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5320:	00000010 	andeq	r0, r0, r0, lsl r0
    5324:	00000000 	andeq	r0, r0, r0
    5328:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    532c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
    5348:	01000000 	mrseq	r0, (UNDEF: 0)
    534c:	00005000 	andeq	r5, r0, r0
    5350:	00000000 	andeq	r0, r0, r0
    5354:	00010000 	andeq	r0, r1, r0
    5358:	00000056 	andeq	r0, r0, r6, asr r0
    535c:	00000000 	andeq	r0, r0, r0
    5360:	f3000400 	vshl.u8	d0, d0, d0
    5364:	009f5001 	addseq	r5, pc, r1
    5368:	00000000 	andeq	r0, r0, r0
    536c:	01000000 	mrseq	r0, (UNDEF: 0)
    5370:	00005000 	andeq	r5, r0, r0
    5374:	00000000 	andeq	r0, r0, r0
    5378:	00010000 	andeq	r0, r1, r0
    537c:	00000056 	andeq	r0, r0, r6, asr r0
    5380:	00000000 	andeq	r0, r0, r0
    5384:	f3000400 	vshl.u8	d0, d0, d0
    5388:	009f5001 	addseq	r5, pc, r1
    538c:	00000000 	andeq	r0, r0, r0
    5390:	01000000 	mrseq	r0, (UNDEF: 0)
    5394:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    53ac:	00010000 	andeq	r0, r1, r0
    53b0:	00000051 	andeq	r0, r0, r1, asr r0
    53b4:	00000000 	andeq	r0, r0, r0
    53b8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    53c4:	00510001 	subseq	r0, r1, r1
    53c8:	00000000 	andeq	r0, r0, r0
    53cc:	01000000 	mrseq	r0, (UNDEF: 0)
    53d0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    53f0:	00520001 	subseq	r0, r2, r1
    53f4:	00000000 	andeq	r0, r0, r0
    53f8:	01000000 	mrseq	r0, (UNDEF: 0)
    53fc:	00005400 	andeq	r5, r0, r0, lsl #8
    5400:	00000000 	andeq	r0, r0, r0
    5404:	00040000 	andeq	r0, r4, r0
    5408:	9f5201f3 	svcls	0x005201f3
	...
    5414:	00520001 	subseq	r0, r2, r1
    5418:	00000000 	andeq	r0, r0, r0
    541c:	01000000 	mrseq	r0, (UNDEF: 0)
    5420:	00005400 	andeq	r5, r0, r0, lsl #8
    5424:	00000000 	andeq	r0, r0, r0
    5428:	00040000 	andeq	r0, r4, r0
    542c:	9f5201f3 	svcls	0x005201f3
	...
    5438:	00540001 	subseq	r0, r4, r1
	...
    5448:	02000000 	andeq	r0, r0, #0
    544c:	00007d00 	andeq	r7, r0, r0, lsl #26
    5450:	00000000 	andeq	r0, r0, r0
    5454:	02000000 	andeq	r0, r0, #0
    5458:	00107d00 	andseq	r7, r0, r0, lsl #26
    545c:	00000000 	andeq	r0, r0, r0
    5460:	02000000 	andeq	r0, r0, #0
    5464:	00007d00 	andeq	r7, r0, r0, lsl #26
    5468:	00000000 	andeq	r0, r0, r0
    546c:	02000000 	andeq	r0, r0, #0
    5470:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5490:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    549c:	00540001 	subseq	r0, r4, r1
    54a0:	00000000 	andeq	r0, r0, r0
    54a4:	01000000 	mrseq	r0, (UNDEF: 0)
    54a8:	00005000 	andeq	r5, r0, r0
    54ac:	00000000 	andeq	r0, r0, r0
    54b0:	00010000 	andeq	r0, r1, r0
    54b4:	00000054 	andeq	r0, r0, r4, asr r0
    54b8:	00000000 	andeq	r0, r0, r0
    54bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    54c8:	01f30004 	mvnseq	r0, r4
    54cc:	00009f50 	andeq	r9, r0, r0, asr pc
    54d0:	00000000 	andeq	r0, r0, r0
    54d4:	00010000 	andeq	r0, r1, r0
    54d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    54f4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5500:	00550001 	subseq	r0, r5, r1
    5504:	00000000 	andeq	r0, r0, r0
    5508:	01000000 	mrseq	r0, (UNDEF: 0)
    550c:	00005100 	andeq	r5, r0, r0, lsl #2
    5510:	00000000 	andeq	r0, r0, r0
    5514:	00010000 	andeq	r0, r1, r0
    5518:	00000055 	andeq	r0, r0, r5, asr r0
    551c:	00000000 	andeq	r0, r0, r0
    5520:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    552c:	00550001 	subseq	r0, r5, r1
	...
    5538:	00000101 	andeq	r0, r0, r1, lsl #2
    553c:	00000000 	andeq	r0, r0, r0
    5540:	01000000 	mrseq	r0, (UNDEF: 0)
    5544:	00005000 	andeq	r5, r0, r0
    5548:	00000000 	andeq	r0, r0, r0
    554c:	00010000 	andeq	r0, r1, r0
    5550:	00000056 	andeq	r0, r0, r6, asr r0
	...
    5560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    556c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5570:	00000010 	andeq	r0, r0, r0, lsl r0
    5574:	00000000 	andeq	r0, r0, r0
    5578:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    557c:	00000018 	andeq	r0, r0, r8, lsl r0
    5580:	00000000 	andeq	r0, r0, r0
    5584:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5590:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5594:	00000018 	andeq	r0, r0, r8, lsl r0
    5598:	00000000 	andeq	r0, r0, r0
    559c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    55a0:	00000010 	andeq	r0, r0, r0, lsl r0
    55a4:	00000000 	andeq	r0, r0, r0
    55a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    55ac:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    55d4:	01000000 	mrseq	r0, (UNDEF: 0)
    55d8:	00005000 	andeq	r5, r0, r0
    55dc:	00000000 	andeq	r0, r0, r0
    55e0:	00010000 	andeq	r0, r1, r0
    55e4:	00000054 	andeq	r0, r0, r4, asr r0
    55e8:	00000000 	andeq	r0, r0, r0
    55ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    55f8:	00540001 	subseq	r0, r4, r1
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	04000000 	streq	r0, [r0], #-0
    5604:	5001f300 	andpl	pc, r1, r0, lsl #6
    5608:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    560c:	00000000 	andeq	r0, r0, r0
    5610:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    561c:	01f30004 	mvnseq	r0, r4
    5620:	00009f50 	andeq	r9, r0, r0, asr pc
    5624:	00000000 	andeq	r0, r0, r0
    5628:	00010000 	andeq	r0, r1, r0
    562c:	00000054 	andeq	r0, r0, r4, asr r0
    5630:	00000000 	andeq	r0, r0, r0
    5634:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5640:	01f30004 	mvnseq	r0, r4
    5644:	00009f50 	andeq	r9, r0, r0, asr pc
    5648:	00000000 	andeq	r0, r0, r0
    564c:	00010000 	andeq	r0, r1, r0
    5650:	00000054 	andeq	r0, r0, r4, asr r0
    5654:	00000000 	andeq	r0, r0, r0
    5658:	f3000400 	vshl.u8	d0, d0, d0
    565c:	009f5001 	addseq	r5, pc, r1
    5660:	00000000 	andeq	r0, r0, r0
    5664:	01000000 	mrseq	r0, (UNDEF: 0)
    5668:	00005400 	andeq	r5, r0, r0, lsl #8
    566c:	00000000 	andeq	r0, r0, r0
    5670:	01000000 	mrseq	r0, (UNDEF: 0)
    5674:	01000001 	tsteq	r0, r1
    5678:	01000001 	tsteq	r0, r1
    567c:	01000001 	tsteq	r0, r1
    5680:	01000001 	tsteq	r0, r1
    5684:	01000001 	tsteq	r0, r1
    5688:	01000001 	tsteq	r0, r1
    568c:	01000001 	tsteq	r0, r1
    5690:	01000001 	tsteq	r0, r1
    5694:	01000001 	tsteq	r0, r1
    5698:	00000001 	andeq	r0, r0, r1
    569c:	01000000 	mrseq	r0, (UNDEF: 0)
    56a0:	01000001 	tsteq	r0, r1
    56a4:	00000001 	andeq	r0, r0, r1
    56a8:	00000000 	andeq	r0, r0, r0
    56ac:	00010000 	andeq	r0, r1, r0
    56b0:	00000050 	andeq	r0, r0, r0, asr r0
    56b4:	00000000 	andeq	r0, r0, r0
    56b8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    56c4:	00500001 	subseq	r0, r0, r1
    56c8:	00000000 	andeq	r0, r0, r0
    56cc:	01000000 	mrseq	r0, (UNDEF: 0)
    56d0:	00005500 	andeq	r5, r0, r0, lsl #10
    56d4:	00000000 	andeq	r0, r0, r0
    56d8:	00010000 	andeq	r0, r1, r0
    56dc:	00000050 	andeq	r0, r0, r0, asr r0
    56e0:	00000000 	andeq	r0, r0, r0
    56e4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    56f0:	00500001 	subseq	r0, r0, r1
    56f4:	00000000 	andeq	r0, r0, r0
    56f8:	01000000 	mrseq	r0, (UNDEF: 0)
    56fc:	00005500 	andeq	r5, r0, r0, lsl #10
    5700:	00000000 	andeq	r0, r0, r0
    5704:	00010000 	andeq	r0, r1, r0
    5708:	00000050 	andeq	r0, r0, r0, asr r0
    570c:	00000000 	andeq	r0, r0, r0
    5710:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    571c:	00500001 	subseq	r0, r0, r1
    5720:	00000000 	andeq	r0, r0, r0
    5724:	01000000 	mrseq	r0, (UNDEF: 0)
    5728:	00005500 	andeq	r5, r0, r0, lsl #10
    572c:	00000000 	andeq	r0, r0, r0
    5730:	00010000 	andeq	r0, r1, r0
    5734:	00000050 	andeq	r0, r0, r0, asr r0
    5738:	00000000 	andeq	r0, r0, r0
    573c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5748:	00500001 	subseq	r0, r0, r1
    574c:	00000000 	andeq	r0, r0, r0
    5750:	01000000 	mrseq	r0, (UNDEF: 0)
    5754:	00005600 	andeq	r5, r0, r0, lsl #12
    5758:	00000000 	andeq	r0, r0, r0
    575c:	00010000 	andeq	r0, r1, r0
    5760:	00000050 	andeq	r0, r0, r0, asr r0
    5764:	00000000 	andeq	r0, r0, r0
    5768:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5774:	00500001 	subseq	r0, r0, r1
    5778:	00000000 	andeq	r0, r0, r0
    577c:	01000000 	mrseq	r0, (UNDEF: 0)
    5780:	00005500 	andeq	r5, r0, r0, lsl #10
    5784:	00000000 	andeq	r0, r0, r0
    5788:	00010000 	andeq	r0, r1, r0
    578c:	00000056 	andeq	r0, r0, r6, asr r0
    5790:	00000000 	andeq	r0, r0, r0
    5794:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    57a0:	00500001 	subseq	r0, r0, r1
    57a4:	00000000 	andeq	r0, r0, r0
    57a8:	01000000 	mrseq	r0, (UNDEF: 0)
    57ac:	00005400 	andeq	r5, r0, r0, lsl #8
    57b0:	00000000 	andeq	r0, r0, r0
    57b4:	00010000 	andeq	r0, r1, r0
    57b8:	00000050 	andeq	r0, r0, r0, asr r0
    57bc:	00000000 	andeq	r0, r0, r0
    57c0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    57d8:	00530001 	subseq	r0, r3, r1
    57dc:	00000000 	andeq	r0, r0, r0
    57e0:	01000000 	mrseq	r0, (UNDEF: 0)
    57e4:	00005300 	andeq	r5, r0, r0, lsl #6
    57e8:	00000000 	andeq	r0, r0, r0
    57ec:	02010000 	andeq	r0, r1, #0
    57f0:	00000002 	andeq	r0, r0, r2
	...
    5800:	00020000 	andeq	r0, r2, r0
    5804:	00009f30 	andeq	r9, r0, r0, lsr pc
    5808:	00000000 	andeq	r0, r0, r0
    580c:	00020000 	andeq	r0, r2, r0
    5810:	00009f31 	andeq	r9, r0, r1, lsr pc
    5814:	00000000 	andeq	r0, r0, r0
    5818:	00010000 	andeq	r0, r1, r0
    581c:	00000055 	andeq	r0, r0, r5, asr r0
    5820:	00000000 	andeq	r0, r0, r0
    5824:	30000200 	andcc	r0, r0, r0, lsl #4
    5828:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    582c:	00000000 	andeq	r0, r0, r0
    5830:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    583c:	00550001 	subseq	r0, r5, r1
	...
    584c:	02000000 	andeq	r0, r0, #0
    5850:	00007d00 	andeq	r7, r0, r0, lsl #26
    5854:	00000000 	andeq	r0, r0, r0
    5858:	02000000 	andeq	r0, r0, #0
    585c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    5874:	01000000 	mrseq	r0, (UNDEF: 0)
    5878:	00005000 	andeq	r5, r0, r0
    587c:	00000000 	andeq	r0, r0, r0
    5880:	00040000 	andeq	r0, r4, r0
    5884:	9f5001f3 	svcls	0x005001f3
	...
    5890:	00500001 	subseq	r0, r0, r1
    5894:	00000000 	andeq	r0, r0, r0
    5898:	04000000 	streq	r0, [r0], #-0
    589c:	5001f300 	andpl	pc, r1, r0, lsl #6
    58a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    58b0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    58bc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58c0:	0000000c 	andeq	r0, r0, ip
    58c4:	00000000 	andeq	r0, r0, r0
    58c8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58cc:	00000018 	andeq	r0, r0, r8, lsl r0
    58d0:	00000000 	andeq	r0, r0, r0
    58d4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58d8:	0000000c 	andeq	r0, r0, ip
    58dc:	00000000 	andeq	r0, r0, r0
    58e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58e4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    58fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5908:	00540001 	subseq	r0, r4, r1
    590c:	00000000 	andeq	r0, r0, r0
    5910:	01000000 	mrseq	r0, (UNDEF: 0)
    5914:	00005000 	andeq	r5, r0, r0
    5918:	00000000 	andeq	r0, r0, r0
    591c:	00010000 	andeq	r0, r1, r0
    5920:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5938:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5944:	01f30004 	mvnseq	r0, r4
    5948:	00009f51 	andeq	r9, r0, r1, asr pc
    594c:	00000000 	andeq	r0, r0, r0
    5950:	00010000 	andeq	r0, r1, r0
    5954:	00000051 	andeq	r0, r0, r1, asr r0
    5958:	00000000 	andeq	r0, r0, r0
    595c:	f3000400 	vshl.u8	d0, d0, d0
    5960:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5970:	02000000 	andeq	r0, r0, #0
    5974:	00007d00 	andeq	r7, r0, r0, lsl #26
    5978:	00000000 	andeq	r0, r0, r0
    597c:	02000000 	andeq	r0, r0, #0
    5980:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5998:	01000000 	mrseq	r0, (UNDEF: 0)
    599c:	00005000 	andeq	r5, r0, r0
    59a0:	00000000 	andeq	r0, r0, r0
    59a4:	00010000 	andeq	r0, r1, r0
    59a8:	00000055 	andeq	r0, r0, r5, asr r0
    59ac:	00000000 	andeq	r0, r0, r0
    59b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    59bc:	00550001 	subseq	r0, r5, r1
	...
    59d4:	01000000 	mrseq	r0, (UNDEF: 0)
    59d8:	00005100 	andeq	r5, r0, r0, lsl #2
    59dc:	00000000 	andeq	r0, r0, r0
    59e0:	00040000 	andeq	r0, r4, r0
    59e4:	9f5101f3 	svcls	0x005101f3
	...
    59f0:	00510001 	subseq	r0, r1, r1
    59f4:	00000000 	andeq	r0, r0, r0
    59f8:	04000000 	streq	r0, [r0], #-0
    59fc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5a00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5a10:	01000000 	mrseq	r0, (UNDEF: 0)
    5a14:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5a24:	00020000 	andeq	r0, r2, r0
    5a28:	0000007d 	andeq	r0, r0, sp, ror r0
    5a2c:	00000000 	andeq	r0, r0, r0
    5a30:	00020000 	andeq	r0, r2, r0
    5a34:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5a4c:	00010000 	andeq	r0, r1, r0
    5a50:	00000050 	andeq	r0, r0, r0, asr r0
    5a54:	00000000 	andeq	r0, r0, r0
    5a58:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5a64:	00500001 	subseq	r0, r0, r1
    5a68:	00000000 	andeq	r0, r0, r0
    5a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5a70:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5a88:	00010000 	andeq	r0, r1, r0
    5a8c:	00000051 	andeq	r0, r0, r1, asr r0
    5a90:	00000000 	andeq	r0, r0, r0
    5a94:	f3000400 	vshl.u8	d0, d0, d0
    5a98:	009f5101 	addseq	r5, pc, r1, lsl #2
    5a9c:	00000000 	andeq	r0, r0, r0
    5aa0:	01000000 	mrseq	r0, (UNDEF: 0)
    5aa4:	00005100 	andeq	r5, r0, r0, lsl #2
    5aa8:	00000000 	andeq	r0, r0, r0
    5aac:	00040000 	andeq	r0, r4, r0
    5ab0:	9f5101f3 	svcls	0x005101f3
	...
    5acc:	00520001 	subseq	r0, r2, r1
    5ad0:	00000000 	andeq	r0, r0, r0
    5ad4:	04000000 	streq	r0, [r0], #-0
    5ad8:	5201f300 	andpl	pc, r1, #0, 6
    5adc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5ae0:	00000000 	andeq	r0, r0, r0
    5ae4:	52000100 	andpl	r0, r0, #0, 2
	...
    5af0:	01f30004 	mvnseq	r0, r4
    5af4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    5b04:	00020000 	andeq	r0, r2, r0
    5b08:	0000007d 	andeq	r0, r0, sp, ror r0
    5b0c:	00000000 	andeq	r0, r0, r0
    5b10:	00020000 	andeq	r0, r2, r0
    5b14:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    5b2c:	00010000 	andeq	r0, r1, r0
    5b30:	00000050 	andeq	r0, r0, r0, asr r0
    5b34:	00000000 	andeq	r0, r0, r0
    5b38:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5b44:	00500001 	subseq	r0, r0, r1
    5b48:	00000000 	andeq	r0, r0, r0
    5b4c:	01000000 	mrseq	r0, (UNDEF: 0)
    5b50:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5b68:	00010000 	andeq	r0, r1, r0
    5b6c:	00000051 	andeq	r0, r0, r1, asr r0
    5b70:	00000000 	andeq	r0, r0, r0
    5b74:	f3000400 	vshl.u8	d0, d0, d0
    5b78:	009f5101 	addseq	r5, pc, r1, lsl #2
    5b7c:	00000000 	andeq	r0, r0, r0
    5b80:	01000000 	mrseq	r0, (UNDEF: 0)
    5b84:	00005100 	andeq	r5, r0, r0, lsl #2
    5b88:	00000000 	andeq	r0, r0, r0
    5b8c:	00040000 	andeq	r0, r4, r0
    5b90:	9f5101f3 	svcls	0x005101f3
	...
    5ba4:	00010000 	andeq	r0, r1, r0
    5ba8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    5bb8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5bc4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5bc8:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    5bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    5be0:	00005000 	andeq	r5, r0, r0
    5be4:	00000000 	andeq	r0, r0, r0
    5be8:	00010000 	andeq	r0, r1, r0
    5bec:	00000054 	andeq	r0, r0, r4, asr r0
    5bf0:	00000000 	andeq	r0, r0, r0
    5bf4:	f3000400 	vshl.u8	d0, d0, d0
    5bf8:	009f5001 	addseq	r5, pc, r1
	...
    5c10:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5c1c:	00550001 	subseq	r0, r5, r1
    5c20:	00000000 	andeq	r0, r0, r0
    5c24:	04000000 	streq	r0, [r0], #-0
    5c28:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5c2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5c3c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c40:	00005300 	andeq	r5, r0, r0, lsl #6
    5c44:	00000000 	andeq	r0, r0, r0
    5c48:	00020000 	andeq	r0, r2, r0
	...
    5c58:	00020000 	andeq	r0, r2, r0
    5c5c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5c60:	00000000 	andeq	r0, r0, r0
    5c64:	00010000 	andeq	r0, r1, r0
    5c68:	00000052 	andeq	r0, r0, r2, asr r0
    5c6c:	00000000 	andeq	r0, r0, r0
    5c70:	31000500 	tstcc	r0, r0, lsl #10
    5c74:	9f240073 	svcls	0x00240073
	...
    5c80:	00520001 	subseq	r0, r2, r1
    5c84:	00000000 	andeq	r0, r0, r0
    5c88:	03000000 	movweq	r0, #0
	...
    5c9c:	30000200 	andcc	r0, r0, r0, lsl #4
    5ca0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5ca4:	00000000 	andeq	r0, r0, r0
    5ca8:	5c000100 	stfpls	f0, [r0], {-0}
	...
    5cb4:	00720006 	rsbseq	r0, r2, r6
    5cb8:	9f1a0075 	svcls	0x001a0075
	...
    5cc4:	73310008 	teqvc	r1, #8
    5cc8:	00752400 	rsbseq	r2, r5, r0, lsl #8
    5ccc:	00009f1a 	andeq	r9, r0, sl, lsl pc
    5cd0:	00000000 	andeq	r0, r0, r0
    5cd4:	00010000 	andeq	r0, r1, r0
    5cd8:	0000005c 	andeq	r0, r0, ip, asr r0
    5cdc:	00000000 	andeq	r0, r0, r0
    5ce0:	00000400 	andeq	r0, r0, r0, lsl #8
    5ce4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5cf0:	30000200 	andcc	r0, r0, r0, lsl #4
    5cf4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5cf8:	00000000 	andeq	r0, r0, r0
    5cfc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d08:	00500001 	subseq	r0, r0, r1
    5d0c:	00000000 	andeq	r0, r0, r0
    5d10:	01000000 	mrseq	r0, (UNDEF: 0)
    5d14:	00005700 	andeq	r5, r0, r0, lsl #14
    5d18:	00000000 	andeq	r0, r0, r0
    5d1c:	11640000 	cmnne	r4, r0
    5d20:	11680800 	cmnne	r8, r0, lsl #16
    5d24:	00020800 	andeq	r0, r2, r0, lsl #16
    5d28:	1168007d 	smcne	32781	; 0x800d
    5d2c:	116a0800 	cmnne	sl, r0, lsl #16
    5d30:	00020800 	andeq	r0, r2, r0, lsl #16
    5d34:	116a187d 	smcne	41357	; 0xa18d
    5d38:	14380800 	ldrtne	r0, [r8], #-2048	; 0xfffff800
    5d3c:	00020800 	andeq	r0, r2, r0, lsl #16
    5d40:	1438207d 	ldrtne	r2, [r8], #-125	; 0xffffff83
    5d44:	144c0800 	strbne	r0, [ip], #-2048	; 0xfffff800
    5d48:	00020800 	andeq	r0, r2, r0, lsl #16
    5d4c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    5d5c:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
    5d60:	080011b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, ip}
    5d64:	b8500001 	ldmdalt	r0, {r0}^
    5d68:	3c080011 	stccc	0, cr0, [r8], {17}
    5d6c:	01080014 	tsteq	r8, r4, lsl r0
    5d70:	143c5700 	ldrtne	r5, [ip], #-1792	; 0xfffff900
    5d74:	144c0800 	strbne	r0, [ip], #-2048	; 0xfffff800
    5d78:	00040800 	andeq	r0, r4, r0, lsl #16
    5d7c:	9f5001f3 	svcls	0x005001f3
	...
    5d8c:	11640000 	cmnne	r4, r0
    5d90:	11b60800 			; <UNDEFINED> instruction: 0x11b60800
    5d94:	00010800 	andeq	r0, r1, r0, lsl #16
    5d98:	0011b651 	andseq	fp, r1, r1, asr r6
    5d9c:	00143c08 	andseq	r3, r4, r8, lsl #24
    5da0:	56000108 	strpl	r0, [r0], -r8, lsl #2
    5da4:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
    5da8:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
    5dac:	01f30004 	mvnseq	r0, r4
    5db0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5dbc:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
    5dc0:	0800143c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip}
    5dc4:	00540001 	subseq	r0, r4, r1
    5dc8:	00000000 	andeq	r0, r0, r0
    5dcc:	02000000 	andeq	r0, r0, #0
	...
    5de0:	00116e00 	andseq	r6, r1, r0, lsl #28
    5de4:	00121808 	andseq	r1, r2, r8, lsl #16
    5de8:	30000208 	andcc	r0, r0, r8, lsl #4
    5dec:	0012189f 	mulseq	r2, pc, r8	; <UNPREDICTABLE>
    5df0:	00123e08 	andseq	r3, r2, r8, lsl #28
    5df4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5df8:	0800123e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, ip}
    5dfc:	08001246 	stmdaeq	r0, {r1, r2, r6, r9, ip}
    5e00:	74310005 	ldrtvc	r0, [r1], #-5
    5e04:	469f2400 	ldrmi	r2, [pc], r0, lsl #8
    5e08:	50080012 	andpl	r0, r8, r2, lsl r0
    5e0c:	01080012 	tsteq	r8, r2, lsl r0
    5e10:	12505500 	subsne	r5, r0, #0, 10
    5e14:	13340800 	teqne	r4, #0, 16
    5e18:	00050800 	andeq	r0, r5, r0, lsl #16
    5e1c:	24007431 	strcs	r7, [r0], #-1073	; 0xfffffbcf
    5e20:	00133c9f 	mulseq	r3, pc, ip	; <UNPREDICTABLE>
    5e24:	00135608 	andseq	r5, r3, r8, lsl #12
    5e28:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5e2c:	08001356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, ip}
    5e30:	08001420 	stmdaeq	r0, {r5, sl, ip}
    5e34:	74310005 	ldrtvc	r0, [r1], #-5
    5e38:	209f2400 	addscs	r2, pc, r0, lsl #8
    5e3c:	22080014 	andcs	r0, r8, #20
    5e40:	06080014 			; <UNDEFINED> instruction: 0x06080014
    5e44:	74007300 	strvc	r7, [r0], #-768	; 0xfffffd00
    5e48:	229f2400 	addscs	r2, pc, #0, 8
    5e4c:	36080014 			; <UNDEFINED> instruction: 0x36080014
    5e50:	05080014 	streq	r0, [r8, #-20]	; 0xffffffec
    5e54:	00743100 	rsbseq	r3, r4, r0, lsl #2
    5e58:	00009f24 	andeq	r9, r0, r4, lsr #30
    5e5c:	00000000 	andeq	r0, r0, r0
    5e60:	00030000 	andeq	r0, r3, r0
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	0800116e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, ip}
    5e6c:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
    5e70:	9f300002 	svcls	0x00300002
    5e74:	08001218 	stmdaeq	r0, {r3, r4, r9, ip}
    5e78:	08001334 	stmdaeq	r0, {r2, r4, r5, r8, r9, ip}
    5e7c:	42580001 	subsmi	r0, r8, #1
    5e80:	36080013 			; <UNDEFINED> instruction: 0x36080013
    5e84:	01080014 	tsteq	r8, r4, lsl r0
    5e88:	00005800 	andeq	r5, r0, r0, lsl #16
    5e8c:	00000000 	andeq	r0, r0, r0
    5e90:	00040000 	andeq	r0, r4, r0
	...
    5ec0:	116e0000 	cmnne	lr, r0
    5ec4:	12180800 	andsne	r0, r8, #0, 16
    5ec8:	00020800 	andeq	r0, r2, r0, lsl #16
    5ecc:	12209f30 	eorne	r9, r0, #48, 30	; 0xc0
    5ed0:	12300800 	eorsne	r0, r0, #0, 16
    5ed4:	00010800 	andeq	r0, r1, r0, lsl #16
    5ed8:	00123052 	andseq	r3, r2, r2, asr r0
    5edc:	00123408 	andseq	r3, r2, r8, lsl #8
    5ee0:	53000108 	movwpl	r0, #264	; 0x108
    5ee4:	08001234 	stmdaeq	r0, {r2, r4, r5, r9, ip}
    5ee8:	08001242 	stmdaeq	r0, {r1, r6, r9, ip}
    5eec:	42520001 	subsmi	r0, r2, #1
    5ef0:	46080012 			; <UNDEFINED> instruction: 0x46080012
    5ef4:	01080012 	tsteq	r8, r2, lsl r0
    5ef8:	12965500 	addsne	r5, r6, #0, 10
    5efc:	12aa0800 	adcne	r0, sl, #0, 16
    5f00:	00010800 	andeq	r0, r1, r0, lsl #16
    5f04:	0012aa50 	andseq	sl, r2, r0, asr sl
    5f08:	0012b008 	andseq	fp, r2, r8
    5f0c:	53000108 	movwpl	r0, #264	; 0x108
    5f10:	080012ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, ip}
    5f14:	080012ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, ip}
    5f18:	ce500001 	cdpgt	0, 5, cr0, cr0, cr1, {0}
    5f1c:	d8080012 	stmdale	r8, {r1, r4}
    5f20:	01080012 	tsteq	r8, r2, lsl r0
    5f24:	12d85300 	sbcsne	r5, r8, #0, 6
    5f28:	12da0800 	sbcsne	r0, sl, #0, 16
    5f2c:	00070800 	andeq	r0, r7, r0, lsl #16
    5f30:	24320072 	ldrtcs	r0, [r2], #-114	; 0xffffff8e
    5f34:	da220071 	ble	886100 <_Min_Heap_Size+0x885900>
    5f38:	e2080012 	and	r0, r8, #18
    5f3c:	01080012 	tsteq	r8, r2, lsl r0
    5f40:	12e25200 	rscne	r5, r2, #0, 4
    5f44:	12f40800 	rscsne	r0, r4, #0, 16
    5f48:	00010800 	andeq	r0, r1, r0, lsl #16
    5f4c:	0012f451 	andseq	pc, r2, r1, asr r4	; <UNPREDICTABLE>
    5f50:	0012f808 	andseq	pc, r2, r8, lsl #16
    5f54:	52000108 	andpl	r0, r0, #8, 2
    5f58:	080012f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, ip}
    5f5c:	0800130a 	stmdaeq	r0, {r1, r3, r8, r9, ip}
    5f60:	0a510001 	beq	1445f6c <_Min_Heap_Size+0x144576c>
    5f64:	0e080013 	mcreq	0, 0, r0, cr8, cr3, {0}
    5f68:	01080013 	tsteq	r8, r3, lsl r0
    5f6c:	130e5200 	movwne	r5, #57856	; 0xe200
    5f70:	13200800 	nopne	{0}	; <UNPREDICTABLE>
    5f74:	00010800 	andeq	r0, r1, r0, lsl #16
    5f78:	00132051 	andseq	r2, r3, r1, asr r0
    5f7c:	00132208 	andseq	r2, r3, r8, lsl #4
    5f80:	52000108 	andpl	r0, r0, #8, 2
    5f84:	08001322 	stmdaeq	r0, {r1, r5, r8, r9, ip}
    5f88:	08001332 	stmdaeq	r0, {r1, r4, r5, r8, r9, ip}
    5f8c:	6a530001 	bvs	14c5f98 <_Min_Heap_Size+0x14c5798>
    5f90:	7a080013 	bvc	205fe4 <_Min_Heap_Size+0x2057e4>
    5f94:	01080013 	tsteq	r8, r3, lsl r0
    5f98:	137a5200 	cmnne	sl, #0, 4
    5f9c:	137c0800 	cmnne	ip, #0, 16
    5fa0:	00010800 	andeq	r0, r1, r0, lsl #16
    5fa4:	00138a53 	andseq	r8, r3, r3, asr sl
    5fa8:	00139e08 	andseq	r9, r3, r8, lsl #28
    5fac:	52000108 	andpl	r0, r0, #8, 2
    5fb0:	0800139e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, ip}
    5fb4:	080013a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, ip}
    5fb8:	a2530001 	subsge	r0, r3, #1
    5fbc:	ac080013 	stcge	0, cr0, [r8], {19}
    5fc0:	02080013 	andeq	r0, r8, #19
    5fc4:	ca007700 	bgt	23bcc <_Min_Heap_Size+0x233cc>
    5fc8:	36080013 			; <UNDEFINED> instruction: 0x36080013
    5fcc:	01080014 	tsteq	r8, r4, lsl r0
    5fd0:	00005000 	andeq	r5, r0, r0
	...
    601c:	00010000 	andeq	r0, r1, r0
    6020:	00000050 	andeq	r0, r0, r0, asr r0
    6024:	00000000 	andeq	r0, r0, r0
    6028:	f3000400 	vshl.u8	d0, d0, d0
    602c:	009f5001 	addseq	r5, pc, r1
    6030:	00000000 	andeq	r0, r0, r0
    6034:	01000000 	mrseq	r0, (UNDEF: 0)
    6038:	00005000 	andeq	r5, r0, r0
    603c:	00000000 	andeq	r0, r0, r0
    6040:	00040000 	andeq	r0, r4, r0
    6044:	9f5001f3 	svcls	0x005001f3
	...
    6050:	00500001 	subseq	r0, r0, r1
    6054:	00000000 	andeq	r0, r0, r0
    6058:	04000000 	streq	r0, [r0], #-0
    605c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6060:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6064:	00000000 	andeq	r0, r0, r0
    6068:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6074:	01f30004 	mvnseq	r0, r4
    6078:	00009f50 	andeq	r9, r0, r0, asr pc
    607c:	00000000 	andeq	r0, r0, r0
    6080:	00010000 	andeq	r0, r1, r0
    6084:	00000050 	andeq	r0, r0, r0, asr r0
    6088:	00000000 	andeq	r0, r0, r0
    608c:	f3000400 	vshl.u8	d0, d0, d0
    6090:	009f5001 	addseq	r5, pc, r1
    6094:	00000000 	andeq	r0, r0, r0
    6098:	01000000 	mrseq	r0, (UNDEF: 0)
    609c:	00005000 	andeq	r5, r0, r0
    60a0:	00000000 	andeq	r0, r0, r0
    60a4:	00040000 	andeq	r0, r4, r0
    60a8:	9f5001f3 	svcls	0x005001f3
	...
    60b4:	00500001 	subseq	r0, r0, r1
    60b8:	00000000 	andeq	r0, r0, r0
    60bc:	04000000 	streq	r0, [r0], #-0
    60c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    60c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    60c8:	00000000 	andeq	r0, r0, r0
    60cc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60d8:	01f30004 	mvnseq	r0, r4
    60dc:	00009f50 	andeq	r9, r0, r0, asr pc
    60e0:	00000000 	andeq	r0, r0, r0
    60e4:	00010000 	andeq	r0, r1, r0
    60e8:	00000050 	andeq	r0, r0, r0, asr r0
    60ec:	00000000 	andeq	r0, r0, r0
    60f0:	f3000400 	vshl.u8	d0, d0, d0
    60f4:	009f5001 	addseq	r5, pc, r1
    60f8:	00000000 	andeq	r0, r0, r0
    60fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6100:	00005000 	andeq	r5, r0, r0
    6104:	00000000 	andeq	r0, r0, r0
    6108:	00040000 	andeq	r0, r4, r0
    610c:	9f5001f3 	svcls	0x005001f3
	...
    6118:	00500001 	subseq	r0, r0, r1
    611c:	00000000 	andeq	r0, r0, r0
    6120:	04000000 	streq	r0, [r0], #-0
    6124:	5001f300 	andpl	pc, r1, r0, lsl #6
    6128:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    612c:	00000000 	andeq	r0, r0, r0
    6130:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    613c:	01f30004 	mvnseq	r0, r4
    6140:	00009f50 	andeq	r9, r0, r0, asr pc
    6144:	00000000 	andeq	r0, r0, r0
    6148:	00010000 	andeq	r0, r1, r0
    614c:	00000050 	andeq	r0, r0, r0, asr r0
    6150:	00000000 	andeq	r0, r0, r0
    6154:	f3000400 	vshl.u8	d0, d0, d0
    6158:	009f5001 	addseq	r5, pc, r1
    615c:	00000000 	andeq	r0, r0, r0
    6160:	01000000 	mrseq	r0, (UNDEF: 0)
    6164:	00005000 	andeq	r5, r0, r0
    6168:	00000000 	andeq	r0, r0, r0
    616c:	00040000 	andeq	r0, r4, r0
    6170:	9f5001f3 	svcls	0x005001f3
	...
    617c:	00500001 	subseq	r0, r0, r1
    6180:	00000000 	andeq	r0, r0, r0
    6184:	04000000 	streq	r0, [r0], #-0
    6188:	5001f300 	andpl	pc, r1, r0, lsl #6
    618c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6190:	00000000 	andeq	r0, r0, r0
    6194:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    61a0:	30000200 	andcc	r0, r0, r0, lsl #4
    61a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    61a8:	00000000 	andeq	r0, r0, r0
    61ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    61f4:	00010000 	andeq	r0, r1, r0
    61f8:	00000053 	andeq	r0, r0, r3, asr r0
    61fc:	00000000 	andeq	r0, r0, r0
    6200:	70000200 	andvc	r0, r0, r0, lsl #4
    6204:	00000028 	andeq	r0, r0, r8, lsr #32
    6208:	00000000 	andeq	r0, r0, r0
    620c:	f3000500 	vrshl.u8	d0, d0, d0
    6210:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    621c:	00530001 	subseq	r0, r3, r1
    6220:	00000000 	andeq	r0, r0, r0
    6224:	02000000 	andeq	r0, r0, #0
    6228:	00287000 	eoreq	r7, r8, r0
    622c:	00000000 	andeq	r0, r0, r0
    6230:	05000000 	streq	r0, [r0, #-0]
    6234:	5001f300 	andpl	pc, r1, r0, lsl #6
    6238:	00002823 	andeq	r2, r0, r3, lsr #16
    623c:	00000000 	andeq	r0, r0, r0
    6240:	00010000 	andeq	r0, r1, r0
    6244:	00000053 	andeq	r0, r0, r3, asr r0
    6248:	00000000 	andeq	r0, r0, r0
    624c:	70000200 	andvc	r0, r0, r0, lsl #4
    6250:	00000028 	andeq	r0, r0, r8, lsr #32
    6254:	00000000 	andeq	r0, r0, r0
    6258:	f3000500 	vrshl.u8	d0, d0, d0
    625c:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6268:	00530001 	subseq	r0, r3, r1
    626c:	00000000 	andeq	r0, r0, r0
    6270:	02000000 	andeq	r0, r0, #0
    6274:	00287000 	eoreq	r7, r8, r0
    6278:	00000000 	andeq	r0, r0, r0
    627c:	05000000 	streq	r0, [r0, #-0]
    6280:	5001f300 	andpl	pc, r1, r0, lsl #6
    6284:	00002823 	andeq	r2, r0, r3, lsr #16
    6288:	00000000 	andeq	r0, r0, r0
    628c:	00010000 	andeq	r0, r1, r0
    6290:	00000053 	andeq	r0, r0, r3, asr r0
    6294:	00000000 	andeq	r0, r0, r0
    6298:	70000200 	andvc	r0, r0, r0, lsl #4
    629c:	00000028 	andeq	r0, r0, r8, lsr #32
    62a0:	00000000 	andeq	r0, r0, r0
    62a4:	f3000500 	vrshl.u8	d0, d0, d0
    62a8:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    62b4:	28700002 	ldmdacs	r0!, {r1}^
	...
    62c0:	01f30005 	mvnseq	r0, r5
    62c4:	00282350 	eoreq	r2, r8, r0, asr r3
    62c8:	00000000 	andeq	r0, r0, r0
    62cc:	02000000 	andeq	r0, r0, #0
    62d0:	00287000 	eoreq	r7, r8, r0
    62d4:	00000000 	andeq	r0, r0, r0
    62d8:	05000000 	streq	r0, [r0, #-0]
    62dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    62e0:	00002823 	andeq	r2, r0, r3, lsr #16
    62e4:	00000000 	andeq	r0, r0, r0
    62e8:	00010000 	andeq	r0, r1, r0
    62ec:	00000053 	andeq	r0, r0, r3, asr r0
    62f0:	00000000 	andeq	r0, r0, r0
    62f4:	70000200 	andvc	r0, r0, r0, lsl #4
    62f8:	00000028 	andeq	r0, r0, r8, lsr #32
    62fc:	00000000 	andeq	r0, r0, r0
    6300:	f3000500 	vrshl.u8	d0, d0, d0
    6304:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6310:	28700002 	ldmdacs	r0!, {r1}^
	...
    631c:	01f30005 	mvnseq	r0, r5
    6320:	00282350 	eoreq	r2, r8, r0, asr r3
    6324:	00000000 	andeq	r0, r0, r0
    6328:	01000000 	mrseq	r0, (UNDEF: 0)
    632c:	00005300 	andeq	r5, r0, r0, lsl #6
    6330:	00000000 	andeq	r0, r0, r0
    6334:	00020000 	andeq	r0, r2, r0
    6338:	00002870 	andeq	r2, r0, r0, ror r8
    633c:	00000000 	andeq	r0, r0, r0
    6340:	00050000 	andeq	r0, r5, r0
    6344:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    6348:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    6358:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6364:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6368:	00000004 	andeq	r0, r0, r4
    636c:	00000000 	andeq	r0, r0, r0
    6370:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    637c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6380:	00000004 	andeq	r0, r0, r4
	...
    6394:	01000000 	mrseq	r0, (UNDEF: 0)
    6398:	00005000 	andeq	r5, r0, r0
    639c:	00000000 	andeq	r0, r0, r0
    63a0:	00040000 	andeq	r0, r4, r0
    63a4:	9f5001f3 	svcls	0x005001f3
	...
    63b0:	00500001 	subseq	r0, r0, r1
	...
    63c4:	01000000 	mrseq	r0, (UNDEF: 0)
    63c8:	00005200 	andeq	r5, r0, r0, lsl #4
    63cc:	00000000 	andeq	r0, r0, r0
    63d0:	001e0000 	andseq	r0, lr, r0
    63d4:	30f70071 	rscscc	r0, r7, r1, ror r0
    63d8:	29f429f7 	ldmibcs	r4!, {r0, r1, r2, r4, r5, r6, r7, r8, fp, sp}^
    63dc:	aaaaab08 	bge	feab1004 <_estack+0xdeaafdcc>
    63e0:	000000aa 	andeq	r0, r0, sl, lsr #1
    63e4:	20081e00 	andcs	r1, r8, r0, lsl #28
    63e8:	f72529f7 			; <UNDEFINED> instruction: 0xf72529f7
    63ec:	3400f730 	strcc	pc, [r0], #-1840	; 0xfffff8d0
    63f0:	00009f25 	andeq	r9, r0, r5, lsr #30
	...
    6400:	00020000 	andeq	r0, r2, r0
    6404:	0000007d 	andeq	r0, r0, sp, ror r0
    6408:	00000000 	andeq	r0, r0, r0
    640c:	00020000 	andeq	r0, r2, r0
    6410:	0000087d 	andeq	r0, r0, sp, ror r8
    6414:	00000000 	andeq	r0, r0, r0
    6418:	00020000 	andeq	r0, r2, r0
    641c:	0000007d 	andeq	r0, r0, sp, ror r0
    6420:	00000000 	andeq	r0, r0, r0
    6424:	00020000 	andeq	r0, r2, r0
    6428:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6444:	00530001 	subseq	r0, r3, r1
    6448:	00000000 	andeq	r0, r0, r0
    644c:	02000000 	andeq	r0, r0, #0
    6450:	00047400 	andeq	r7, r4, r0, lsl #8
    6454:	00000000 	andeq	r0, r0, r0
    6458:	04000000 	streq	r0, [r0], #-0
    645c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    6460:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6464:	00000000 	andeq	r0, r0, r0
    6468:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    646c:	00000004 	andeq	r0, r0, r4
    6470:	00000000 	andeq	r0, r0, r0
    6474:	f3000400 	vshl.u8	d0, d0, d0
    6478:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    648c:	01000000 	mrseq	r0, (UNDEF: 0)
    6490:	00005000 	andeq	r5, r0, r0
    6494:	00000000 	andeq	r0, r0, r0
    6498:	00040000 	andeq	r0, r4, r0
    649c:	9f5001f3 	svcls	0x005001f3
	...
    64b4:	00500001 	subseq	r0, r0, r1
    64b8:	00000000 	andeq	r0, r0, r0
    64bc:	04000000 	streq	r0, [r0], #-0
    64c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    64c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    64dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    64e8:	00530001 	subseq	r0, r3, r1
    64ec:	00000000 	andeq	r0, r0, r0
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
    64f4:	00005000 	andeq	r5, r0, r0
    64f8:	00000000 	andeq	r0, r0, r0
    64fc:	00010000 	andeq	r0, r1, r0
    6500:	00000053 	andeq	r0, r0, r3, asr r0
    6504:	00000000 	andeq	r0, r0, r0
    6508:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    6514:	02000000 	andeq	r0, r0, #0
    6518:	009f3000 	addseq	r3, pc, r0
    651c:	00000000 	andeq	r0, r0, r0
    6520:	01000000 	mrseq	r0, (UNDEF: 0)
    6524:	00005000 	andeq	r5, r0, r0
    6528:	00000000 	andeq	r0, r0, r0
    652c:	00020000 	andeq	r0, r2, r0
    6530:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    6544:	00010000 	andeq	r0, r1, r0
    6548:	00000050 	andeq	r0, r0, r0, asr r0
    654c:	00000000 	andeq	r0, r0, r0
    6550:	53000100 	movwpl	r0, #256	; 0x100
	...
    6568:	00010000 	andeq	r0, r1, r0
    656c:	00000052 	andeq	r0, r0, r2, asr r0
    6570:	00000000 	andeq	r0, r0, r0
    6574:	f3000400 	vshl.u8	d0, d0, d0
    6578:	009f5201 	addseq	r5, pc, r1, lsl #4
    657c:	00000000 	andeq	r0, r0, r0
    6580:	01000000 	mrseq	r0, (UNDEF: 0)
    6584:	00005200 	andeq	r5, r0, r0, lsl #4
    6588:	00000000 	andeq	r0, r0, r0
    658c:	00010000 	andeq	r0, r1, r0
	...
    659c:	9f300002 	svcls	0x00300002
	...
    65a8:	00500001 	subseq	r0, r0, r1
    65ac:	00000000 	andeq	r0, r0, r0
    65b0:	02000000 	andeq	r0, r0, #0
    65b4:	009f3000 	addseq	r3, pc, r0
	...
    65c4:	02000000 	andeq	r0, r0, #0
    65c8:	00007d00 	andeq	r7, r0, r0, lsl #26
    65cc:	00000000 	andeq	r0, r0, r0
    65d0:	02000000 	andeq	r0, r0, #0
    65d4:	00147d00 	andseq	r7, r4, r0, lsl #26
    65d8:	00000000 	andeq	r0, r0, r0
    65dc:	02000000 	andeq	r0, r0, #0
    65e0:	00207d00 	eoreq	r7, r0, r0, lsl #26
    65e4:	00000000 	andeq	r0, r0, r0
    65e8:	02000000 	andeq	r0, r0, #0
    65ec:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    660c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6618:	00540001 	subseq	r0, r4, r1
    661c:	00000000 	andeq	r0, r0, r0
    6620:	01000000 	mrseq	r0, (UNDEF: 0)
    6624:	00005000 	andeq	r5, r0, r0
    6628:	00000000 	andeq	r0, r0, r0
    662c:	00010000 	andeq	r0, r1, r0
    6630:	00000054 	andeq	r0, r0, r4, asr r0
    6634:	00000000 	andeq	r0, r0, r0
    6638:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6644:	00540001 	subseq	r0, r4, r1
    6648:	00000000 	andeq	r0, r0, r0
    664c:	04000000 	streq	r0, [r0], #-0
    6650:	5001f300 	andpl	pc, r1, r0, lsl #6
    6654:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6664:	01000000 	mrseq	r0, (UNDEF: 0)
    6668:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    667c:	00550001 	subseq	r0, r5, r1
	...
    6690:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    66a4:	007d0002 	rsbseq	r0, sp, r2
	...
    66b0:	207d0002 	rsbscs	r0, sp, r2
	...
    66c8:	00500001 	subseq	r0, r0, r1
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	01000000 	mrseq	r0, (UNDEF: 0)
    66d4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    66e8:	00010000 	andeq	r0, r1, r0
    66ec:	00000051 	andeq	r0, r0, r1, asr r0
    66f0:	00000000 	andeq	r0, r0, r0
    66f4:	f3000400 	vshl.u8	d0, d0, d0
    66f8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    670c:	01000000 	mrseq	r0, (UNDEF: 0)
    6710:	00005200 	andeq	r5, r0, r0, lsl #4
    6714:	00000000 	andeq	r0, r0, r0
    6718:	00010000 	andeq	r0, r1, r0
    671c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6730:	5a000100 	bpl	6b38 <_Min_Heap_Size+0x6338>
	...
    673c:	005a0001 	subseq	r0, sl, r1
	...
    6748:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    675c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6768:	00500001 	subseq	r0, r0, r1
    676c:	00000000 	andeq	r0, r0, r0
    6770:	01000000 	mrseq	r0, (UNDEF: 0)
    6774:	00005900 	andeq	r5, r0, r0, lsl #18
    6778:	00000000 	andeq	r0, r0, r0
    677c:	00010000 	andeq	r0, r1, r0
    6780:	00000050 	andeq	r0, r0, r0, asr r0
    6784:	00000000 	andeq	r0, r0, r0
    6788:	59000100 	stmdbpl	r0, {r8}
	...
    6794:	00500001 	subseq	r0, r0, r1
    6798:	00000000 	andeq	r0, r0, r0
    679c:	01000000 	mrseq	r0, (UNDEF: 0)
    67a0:	00005900 	andeq	r5, r0, r0, lsl #18
	...
    67b4:	00010000 	andeq	r0, r1, r0
    67b8:	00000053 	andeq	r0, r0, r3, asr r0
    67bc:	00000000 	andeq	r0, r0, r0
    67c0:	53000100 	movwpl	r0, #256	; 0x100
	...
    67d8:	00570001 	subseq	r0, r7, r1
    67dc:	00000000 	andeq	r0, r0, r0
    67e0:	01000000 	mrseq	r0, (UNDEF: 0)
    67e4:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    67f4:	14e00000 	strbtne	r0, [r0], #0
    67f8:	14f00800 	ldrbtne	r0, [r0], #2048	; 0x800
    67fc:	00010800 	andeq	r0, r1, r0, lsl #16
    6800:	0014f050 	andseq	pc, r4, r0, asr r0	; <UNPREDICTABLE>
    6804:	0014f208 	andseq	pc, r4, r8, lsl #4
    6808:	f3000408 	vshl.u8	d0, d8, d0
    680c:	f29f5001 	vaddl.s16	<illegal reg q2.5>, d15, d1
    6810:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    6814:	01080015 	tsteq	r8, r5, lsl r0
    6818:	15045000 	strne	r5, [r4, #-0]
    681c:	15060800 	strne	r0, [r6, #-2048]	; 0xfffff800
    6820:	00040800 	andeq	r0, r4, r0, lsl #16
    6824:	9f5001f3 	svcls	0x005001f3
	...
    6830:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
    6834:	0800144e 	stmdaeq	r0, {r1, r2, r3, r6, sl, ip}
    6838:	007d0002 	rsbseq	r0, sp, r2
    683c:	0800144e 	stmdaeq	r0, {r1, r2, r3, r6, sl, ip}
    6840:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
    6844:	107d0002 	rsbsne	r0, sp, r2
	...
    6854:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
    6858:	08001455 	stmdaeq	r0, {r0, r2, r4, r6, sl, ip}
    685c:	55500001 	ldrbpl	r0, [r0, #-1]
    6860:	e0080014 	and	r0, r8, r4, lsl r0
    6864:	01080014 	tsteq	r8, r4, lsl r0
    6868:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6874:	08001452 	stmdaeq	r0, {r1, r4, r6, sl, ip}
    6878:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
    687c:	00560001 	subseq	r0, r6, r1
	...
    6888:	01010000 	mrseq	r0, (UNDEF: 1)
    688c:	00000000 	andeq	r0, r0, r0
    6890:	00145600 	andseq	r5, r4, r0, lsl #12
    6894:	00146c08 	andseq	r6, r4, r8, lsl #24
    6898:	50000108 	andpl	r0, r0, r8, lsl #2
    689c:	0800146e 	stmdaeq	r0, {r1, r2, r3, r5, r6, sl, ip}
    68a0:	0800149c 	stmdaeq	r0, {r2, r3, r4, r7, sl, ip}
    68a4:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    68a8:	c2080014 	andgt	r0, r8, #20
    68ac:	01080014 	tsteq	r8, r4, lsl r0
    68b0:	14c25500 	strbne	r5, [r2], #1280	; 0x500
    68b4:	14ca0800 	strbne	r0, [sl], #2048	; 0x800
    68b8:	00010800 	andeq	r0, r1, r0, lsl #16
    68bc:	0014ca50 	andseq	ip, r4, r0, asr sl
    68c0:	0014e008 	andseq	lr, r4, r8
    68c4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    68d8:	007d0002 	rsbseq	r0, sp, r2
	...
    68e4:	187d0002 	ldmdane	sp!, {r1}^
	...
    6900:	00500001 	subseq	r0, r0, r1
    6904:	00000000 	andeq	r0, r0, r0
    6908:	01000000 	mrseq	r0, (UNDEF: 0)
    690c:	00005400 	andeq	r5, r0, r0, lsl #8
    6910:	00000000 	andeq	r0, r0, r0
    6914:	00010000 	andeq	r0, r1, r0
    6918:	00000050 	andeq	r0, r0, r0, asr r0
    691c:	00000000 	andeq	r0, r0, r0
    6920:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    693c:	00510001 	subseq	r0, r1, r1
    6940:	00000000 	andeq	r0, r0, r0
    6944:	01000000 	mrseq	r0, (UNDEF: 0)
    6948:	00005600 	andeq	r5, r0, r0, lsl #12
    694c:	00000000 	andeq	r0, r0, r0
    6950:	00010000 	andeq	r0, r1, r0
    6954:	00000051 	andeq	r0, r0, r1, asr r0
    6958:	00000000 	andeq	r0, r0, r0
    695c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    6974:	00520001 	subseq	r0, r2, r1
    6978:	00000000 	andeq	r0, r0, r0
    697c:	01000000 	mrseq	r0, (UNDEF: 0)
    6980:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    6994:	00010000 	andeq	r0, r1, r0
    6998:	00000053 	andeq	r0, r0, r3, asr r0
    699c:	00000000 	andeq	r0, r0, r0
    69a0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    69ac:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    69b8:	00020000 	andeq	r0, r2, r0
    69bc:	00009f30 	andeq	r9, r0, r0, lsr pc
    69c0:	00000000 	andeq	r0, r0, r0
    69c4:	00020000 	andeq	r0, r2, r0
    69c8:	00009f32 	andeq	r9, r0, r2, lsr pc
    69cc:	00000000 	andeq	r0, r0, r0
    69d0:	00020000 	andeq	r0, r2, r0
    69d4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    69e8:	00580001 	subseq	r0, r8, r1
	...
    69f8:	02000000 	andeq	r0, r0, #0
    69fc:	00007d00 	andeq	r7, r0, r0, lsl #26
    6a00:	00000000 	andeq	r0, r0, r0
    6a04:	02000000 	andeq	r0, r0, #0
    6a08:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    6a20:	01000000 	mrseq	r0, (UNDEF: 0)
    6a24:	00005000 	andeq	r5, r0, r0
    6a28:	00000000 	andeq	r0, r0, r0
    6a2c:	00010000 	andeq	r0, r1, r0
    6a30:	00000054 	andeq	r0, r0, r4, asr r0
    6a34:	00000000 	andeq	r0, r0, r0
    6a38:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a44:	00540001 	subseq	r0, r4, r1
	...
    6a5c:	01000000 	mrseq	r0, (UNDEF: 0)
    6a60:	00005100 	andeq	r5, r0, r0, lsl #2
    6a64:	00000000 	andeq	r0, r0, r0
    6a68:	00010000 	andeq	r0, r1, r0
    6a6c:	00000056 	andeq	r0, r0, r6, asr r0
    6a70:	00000000 	andeq	r0, r0, r0
    6a74:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6a80:	00560001 	subseq	r0, r6, r1
	...
    6a94:	01000000 	mrseq	r0, (UNDEF: 0)
    6a98:	00005200 	andeq	r5, r0, r0, lsl #4
    6a9c:	00000000 	andeq	r0, r0, r0
    6aa0:	00010000 	andeq	r0, r1, r0
    6aa4:	00000057 	andeq	r0, r0, r7, asr r0
	...
    6ab8:	53000100 	movwpl	r0, #256	; 0x100
	...
    6ac4:	00550001 	subseq	r0, r5, r1
    6ac8:	00000000 	andeq	r0, r0, r0
    6acc:	01000000 	mrseq	r0, (UNDEF: 0)
    6ad0:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    6adc:	30000200 	andcc	r0, r0, r0, lsl #4
    6ae0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ae4:	00000000 	andeq	r0, r0, r0
    6ae8:	32000200 	andcc	r0, r0, #0, 4
    6aec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6af0:	00000000 	andeq	r0, r0, r0
    6af4:	30000200 	andcc	r0, r0, r0, lsl #4
    6af8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6b08:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b14:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b18:	00000010 	andeq	r0, r0, r0, lsl r0
    6b1c:	00000000 	andeq	r0, r0, r0
    6b20:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b48:	00550001 	subseq	r0, r5, r1
    6b4c:	00000000 	andeq	r0, r0, r0
    6b50:	01000000 	mrseq	r0, (UNDEF: 0)
    6b54:	00005000 	andeq	r5, r0, r0
    6b58:	00000000 	andeq	r0, r0, r0
    6b5c:	00040000 	andeq	r0, r4, r0
    6b60:	9f5001f3 	svcls	0x005001f3
	...
    6b74:	00010000 	andeq	r0, r1, r0
    6b78:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6b88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b94:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b98:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6bac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6bb8:	00540001 	subseq	r0, r4, r1
    6bbc:	00000000 	andeq	r0, r0, r0
    6bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bc4:	00000001 	andeq	r0, r0, r1
	...
    6bdc:	30000200 	andcc	r0, r0, r0, lsl #4
    6be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6be4:	00000000 	andeq	r0, r0, r0
    6be8:	30000200 	andcc	r0, r0, r0, lsl #4
    6bec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6bf0:	00000000 	andeq	r0, r0, r0
    6bf4:	52000100 	andpl	r0, r0, #0, 2
	...
    6c00:	00500001 	subseq	r0, r0, r1
    6c04:	00000000 	andeq	r0, r0, r0
    6c08:	01000000 	mrseq	r0, (UNDEF: 0)
    6c0c:	00005200 	andeq	r5, r0, r0, lsl #4
    6c10:	00000000 	andeq	r0, r0, r0
    6c14:	00010000 	andeq	r0, r1, r0
    6c18:	00000055 	andeq	r0, r0, r5, asr r0
    6c1c:	00000000 	andeq	r0, r0, r0
    6c20:	52000100 	andpl	r0, r0, #0, 2
	...
    6c2c:	00550001 	subseq	r0, r5, r1
    6c30:	00000000 	andeq	r0, r0, r0
    6c34:	02000000 	andeq	r0, r0, #0
    6c38:	009f3000 	addseq	r3, pc, r0
	...
    6c44:	00010000 	andeq	r0, r1, r0
	...
    6c54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c60:	00550001 	subseq	r0, r5, r1
    6c64:	00000000 	andeq	r0, r0, r0
    6c68:	01000000 	mrseq	r0, (UNDEF: 0)
    6c6c:	00005500 	andeq	r5, r0, r0, lsl #10
    6c70:	00000000 	andeq	r0, r0, r0
    6c74:	00010000 	andeq	r0, r1, r0
    6c78:	00000055 	andeq	r0, r0, r5, asr r0
    6c7c:	00000000 	andeq	r0, r0, r0
    6c80:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c94:	00010000 	andeq	r0, r1, r0
    6c98:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6ca8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6cb4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6cb8:	00000008 	andeq	r0, r0, r8
	...
    6cc8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6cd4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6cd8:	00000008 	andeq	r0, r0, r8
	...
    6cf0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6cfc:	00540001 	subseq	r0, r4, r1
    6d00:	00000000 	andeq	r0, r0, r0
    6d04:	01000000 	mrseq	r0, (UNDEF: 0)
    6d08:	00005000 	andeq	r5, r0, r0
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	00010000 	andeq	r0, r1, r0
    6d14:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6d24:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6d30:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6d34:	00000008 	andeq	r0, r0, r8
	...
    6d4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d58:	01f30004 	mvnseq	r0, r4
    6d5c:	00009f50 	andeq	r9, r0, r0, asr pc
    6d60:	00000000 	andeq	r0, r0, r0
    6d64:	00010000 	andeq	r0, r1, r0
    6d68:	00000050 	andeq	r0, r0, r0, asr r0
    6d6c:	00000000 	andeq	r0, r0, r0
    6d70:	f3000400 	vshl.u8	d0, d0, d0
    6d74:	009f5001 	addseq	r5, pc, r1
    6d78:	00000000 	andeq	r0, r0, r0
    6d7c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6d88:	01000000 	mrseq	r0, (UNDEF: 0)
    6d8c:	00005400 	andeq	r5, r0, r0, lsl #8
    6d90:	00000000 	andeq	r0, r0, r0
    6d94:	00010000 	andeq	r0, r1, r0
    6d98:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6da8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6db4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6db8:	00000008 	andeq	r0, r0, r8
	...
    6dd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ddc:	01f30004 	mvnseq	r0, r4
    6de0:	00009f50 	andeq	r9, r0, r0, asr pc
    6de4:	00000000 	andeq	r0, r0, r0
    6de8:	00010000 	andeq	r0, r1, r0
    6dec:	00000050 	andeq	r0, r0, r0, asr r0
    6df0:	00000000 	andeq	r0, r0, r0
    6df4:	f3000400 	vshl.u8	d0, d0, d0
    6df8:	009f5001 	addseq	r5, pc, r1
    6dfc:	00000000 	andeq	r0, r0, r0
    6e00:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6e0c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6e20:	007d0002 	rsbseq	r0, sp, r2
	...
    6e2c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6e48:	00500001 	subseq	r0, r0, r1
    6e4c:	00000000 	andeq	r0, r0, r0
    6e50:	04000000 	streq	r0, [r0], #-0
    6e54:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6e5c:	00000000 	andeq	r0, r0, r0
    6e60:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6e6c:	01f30004 	mvnseq	r0, r4
    6e70:	00009f50 	andeq	r9, r0, r0, asr pc
    6e74:	00000000 	andeq	r0, r0, r0
    6e78:	00010000 	andeq	r0, r1, r0
	...
    6e84:	00010000 	andeq	r0, r1, r0
    6e88:	00000054 	andeq	r0, r0, r4, asr r0
    6e8c:	00000000 	andeq	r0, r0, r0
    6e90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6ea4:	007d0002 	rsbseq	r0, sp, r2
	...
    6eb0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6ecc:	00500001 	subseq	r0, r0, r1
    6ed0:	00000000 	andeq	r0, r0, r0
    6ed4:	04000000 	streq	r0, [r0], #-0
    6ed8:	5001f300 	andpl	pc, r1, r0, lsl #6
    6edc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6ee0:	00000000 	andeq	r0, r0, r0
    6ee4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ef0:	01f30004 	mvnseq	r0, r4
    6ef4:	00009f50 	andeq	r9, r0, r0, asr pc
    6ef8:	00000000 	andeq	r0, r0, r0
    6efc:	00010000 	andeq	r0, r1, r0
	...
    6f08:	00540001 	subseq	r0, r4, r1
	...
    6f18:	02000000 	andeq	r0, r0, #0
    6f1c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6f20:	00000000 	andeq	r0, r0, r0
    6f24:	02000000 	andeq	r0, r0, #0
    6f28:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    6f40:	01000000 	mrseq	r0, (UNDEF: 0)
    6f44:	00005000 	andeq	r5, r0, r0
    6f48:	00000000 	andeq	r0, r0, r0
    6f4c:	00040000 	andeq	r0, r4, r0
    6f50:	9f5001f3 	svcls	0x005001f3
	...
    6f5c:	00500001 	subseq	r0, r0, r1
    6f60:	00000000 	andeq	r0, r0, r0
    6f64:	04000000 	streq	r0, [r0], #-0
    6f68:	5001f300 	andpl	pc, r1, r0, lsl #6
    6f6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6f84:	01000000 	mrseq	r0, (UNDEF: 0)
    6f88:	00005100 	andeq	r5, r0, r0, lsl #2
    6f8c:	00000000 	andeq	r0, r0, r0
    6f90:	00010000 	andeq	r0, r1, r0
    6f94:	00000054 	andeq	r0, r0, r4, asr r0
    6f98:	00000000 	andeq	r0, r0, r0
    6f9c:	f3000400 	vshl.u8	d0, d0, d0
    6fa0:	009f5101 	addseq	r5, pc, r1, lsl #2
    6fa4:	00000000 	andeq	r0, r0, r0
    6fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    6fac:	00005100 	andeq	r5, r0, r0, lsl #2
    6fb0:	00000000 	andeq	r0, r0, r0
    6fb4:	00010000 	andeq	r0, r1, r0
    6fb8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6fd0:	52000100 	andpl	r0, r0, #0, 2
	...
    6fdc:	00570001 	subseq	r0, r7, r1
    6fe0:	00000000 	andeq	r0, r0, r0
    6fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    6fe8:	00005200 	andeq	r5, r0, r0, lsl #4
    6fec:	00000000 	andeq	r0, r0, r0
    6ff0:	00010000 	andeq	r0, r1, r0
    6ff4:	00000057 	andeq	r0, r0, r7, asr r0
	...
    7008:	53000100 	movwpl	r0, #256	; 0x100
	...
    7014:	00560001 	subseq	r0, r6, r1
    7018:	00000000 	andeq	r0, r0, r0
    701c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7028:	01000000 	mrseq	r0, (UNDEF: 0)
    702c:	00005500 	andeq	r5, r0, r0, lsl #10
    7030:	00000000 	andeq	r0, r0, r0
    7034:	00010000 	andeq	r0, r1, r0
    7038:	00000055 	andeq	r0, r0, r5, asr r0
	...
    704c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    7058:	00560001 	subseq	r0, r6, r1
	...
    706c:	01000000 	mrseq	r0, (UNDEF: 0)
    7070:	00005700 	andeq	r5, r0, r0, lsl #14
    7074:	00000000 	andeq	r0, r0, r0
    7078:	00010000 	andeq	r0, r1, r0
    707c:	00000057 	andeq	r0, r0, r7, asr r0
	...
    7090:	01000000 	mrseq	r0, (UNDEF: 0)
    7094:	00005400 	andeq	r5, r0, r0, lsl #8
    7098:	00000000 	andeq	r0, r0, r0
    709c:	00040000 	andeq	r0, r4, r0
    70a0:	9f5101f3 	svcls	0x005101f3
	...
    70ac:	00540001 	subseq	r0, r4, r1
	...
    70c0:	01000000 	mrseq	r0, (UNDEF: 0)
    70c4:	00005300 	andeq	r5, r0, r0, lsl #6
    70c8:	00000000 	andeq	r0, r0, r0
    70cc:	00010000 	andeq	r0, r1, r0
    70d0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    70e8:	01000000 	mrseq	r0, (UNDEF: 0)
    70ec:	00005100 	andeq	r5, r0, r0, lsl #2
    70f0:	00000000 	andeq	r0, r0, r0
    70f4:	00030000 	andeq	r0, r3, r0
    70f8:	009f7c70 	addseq	r7, pc, r0, ror ip	; <UNPREDICTABLE>
    70fc:	00000000 	andeq	r0, r0, r0
    7100:	06000000 	streq	r0, [r0], -r0
    7104:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7108:	009f1a37 	addseq	r1, pc, r7, lsr sl	; <UNPREDICTABLE>
    710c:	00000000 	andeq	r0, r0, r0
    7110:	01000000 	mrseq	r0, (UNDEF: 0)
    7114:	00005100 	andeq	r5, r0, r0, lsl #2
    7118:	00000000 	andeq	r0, r0, r0
    711c:	00030000 	andeq	r0, r3, r0
    7120:	009f7c70 	addseq	r7, pc, r0, ror ip	; <UNPREDICTABLE>
	...
    7138:	52000100 	andpl	r0, r0, #0, 2
	...
    7144:	f334001d 	vqadd.u64	d0, d4, d13
    7148:	37205101 	strcc	r5, [r0, -r1, lsl #2]!
    714c:	5101f31a 	tstpl	r1, sl, lsl r3	; <UNPREDICTABLE>
    7150:	401a3720 	andsmi	r3, sl, r0, lsr #14
    7154:	0c22244b 	cfstrseq	mvf2, [r2], #-300	; 0xfffffed4
    7158:	80000004 	andhi	r0, r0, r4
    715c:	0001282a 	andeq	r2, r1, sl, lsr #16
    7160:	009f1316 	addseq	r1, pc, r6, lsl r3	; <UNPREDICTABLE>
    7164:	00000000 	andeq	r0, r0, r0
    7168:	01000000 	mrseq	r0, (UNDEF: 0)
    716c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7180:	00510001 	subseq	r0, r1, r1
	...
    7190:	02000000 	andeq	r0, r0, #0
    7194:	00007d00 	andeq	r7, r0, r0, lsl #26
    7198:	00000000 	andeq	r0, r0, r0
    719c:	02000000 	andeq	r0, r0, #0
    71a0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    71b8:	01000000 	mrseq	r0, (UNDEF: 0)
    71bc:	00005000 	andeq	r5, r0, r0
    71c0:	00000000 	andeq	r0, r0, r0
    71c4:	00010000 	andeq	r0, r1, r0
    71c8:	00000054 	andeq	r0, r0, r4, asr r0
    71cc:	00000000 	andeq	r0, r0, r0
    71d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    71dc:	00540001 	subseq	r0, r4, r1
	...
    71f0:	01000000 	mrseq	r0, (UNDEF: 0)
    71f4:	00005000 	andeq	r5, r0, r0
    71f8:	00000000 	andeq	r0, r0, r0
    71fc:	00040000 	andeq	r0, r4, r0
    7200:	9f5001f3 	svcls	0x005001f3
	...
    7210:	16000000 	strne	r0, [r0], -r0
    7214:	16020800 	strne	r0, [r2], -r0, lsl #16
    7218:	00010800 	andeq	r0, r1, r0, lsl #16
    721c:	00160250 	andseq	r0, r6, r0, asr r2
    7220:	00161808 	andseq	r1, r6, r8, lsl #16
    7224:	70000308 	andvc	r0, r0, r8, lsl #6
    7228:	16189f01 	ldrne	r9, [r8], -r1, lsl #30
    722c:	16280800 	strtne	r0, [r8], -r0, lsl #16
    7230:	00040800 	andeq	r0, r4, r0, lsl #16
    7234:	9f5001f3 	svcls	0x005001f3
	...
    7240:	00000002 	andeq	r0, r0, r2
    7244:	16000000 	strne	r0, [r0], -r0
    7248:	16020800 	strne	r0, [r2], -r0, lsl #16
    724c:	00010800 	andeq	r0, r1, r0, lsl #16
    7250:	00160250 	andseq	r0, r6, r0, asr r2
    7254:	00161808 	andseq	r1, r6, r8, lsl #16
    7258:	70000308 	andvc	r0, r0, r8, lsl #6
    725c:	16189f01 	ldrne	r9, [r8], -r1, lsl #30
    7260:	16220800 	strtne	r0, [r2], -r0, lsl #16
    7264:	00040800 	andeq	r0, r4, r0, lsl #16
    7268:	9f5001f3 	svcls	0x005001f3
	...
    7274:	160e0001 	strne	r0, [lr], -r1
    7278:	16160800 	ldrne	r0, [r6], -r0, lsl #16
    727c:	00020800 	andeq	r0, r2, r0, lsl #16
    7280:	00009f3f 	andeq	r9, r0, pc, lsr pc
    7284:	00000000 	andeq	r0, r0, r0
    7288:	00010000 	andeq	r0, r1, r0
    728c:	0800160e 	stmdaeq	r0, {r1, r2, r3, r9, sl, ip}
    7290:	08001616 	stmdaeq	r0, {r1, r2, r4, r9, sl, ip}
    7294:	ff090003 			; <UNDEFINED> instruction: 0xff090003
    7298:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    72a8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    72b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    72b8:	00000008 	andeq	r0, r0, r8
	...
    72d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    72dc:	01f30004 	mvnseq	r0, r4
    72e0:	00009f50 	andeq	r9, r0, r0, asr pc
    72e4:	00000000 	andeq	r0, r0, r0
    72e8:	00010000 	andeq	r0, r1, r0
    72ec:	00000050 	andeq	r0, r0, r0, asr r0
    72f0:	00000000 	andeq	r0, r0, r0
    72f4:	f3000400 	vshl.u8	d0, d0, d0
    72f8:	009f5001 	addseq	r5, pc, r1
    72fc:	00000000 	andeq	r0, r0, r0
    7300:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    730c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7318:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    731c:	080015d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, ip}
    7320:	007d0002 	rsbseq	r0, sp, r2
    7324:	080015d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, ip}
    7328:	08001600 	stmdaeq	r0, {r9, sl, ip}
    732c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7340:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
    7344:	080015d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, sl, ip}
    7348:	d6500001 	ldrble	r0, [r0], -r1
    734c:	ec080015 	stc	0, cr0, [r8], {21}
    7350:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    7354:	5001f300 	andpl	pc, r1, r0, lsl #6
    7358:	0015ec9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    735c:	0015f008 	andseq	pc, r5, r8
    7360:	50000108 	andpl	r0, r0, r8, lsl #2
    7364:	080015f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, ip}
    7368:	08001600 	stmdaeq	r0, {r9, sl, ip}
    736c:	01f30004 	mvnseq	r0, r4
    7370:	00009f50 	andeq	r9, r0, r0, asr pc
    7374:	00000000 	andeq	r0, r0, r0
    7378:	00010000 	andeq	r0, r1, r0
    737c:	080015d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, sl, ip}
    7380:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
    7384:	00540001 	subseq	r0, r4, r1
    7388:	00000000 	andeq	r0, r0, r0
    738c:	44000000 	strmi	r0, [r0], #-0
    7390:	46080015 			; <UNDEFINED> instruction: 0x46080015
    7394:	02080015 	andeq	r0, r8, #21
    7398:	46007d00 	strmi	r7, [r0], -r0, lsl #26
    739c:	d0080015 	andle	r0, r8, r5, lsl r0
    73a0:	02080015 	andeq	r0, r8, #21
    73a4:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    73b4:	44000000 	strmi	r0, [r0], #-0
    73b8:	50080015 	andpl	r0, r8, r5, lsl r0
    73bc:	01080015 	tsteq	r8, r5, lsl r0
    73c0:	15505000 	ldrbne	r5, [r0, #-0]
    73c4:	159c0800 	ldrne	r0, [ip, #2048]	; 0x800
    73c8:	00040800 	andeq	r0, r4, r0, lsl #16
    73cc:	9f5001f3 	svcls	0x005001f3
    73d0:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    73d4:	080015a0 	stmdaeq	r0, {r5, r7, r8, sl, ip}
    73d8:	a0500001 	subsge	r0, r0, r1
    73dc:	d0080015 	andle	r0, r8, r5, lsl r0
    73e0:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    73e4:	5001f300 	andpl	pc, r1, r0, lsl #6
    73e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    73fc:	00154400 	andseq	r4, r5, r0, lsl #8
    7400:	00155008 	andseq	r5, r5, r8
    7404:	51000108 	tstpl	r0, r8, lsl #2
    7408:	08001550 	stmdaeq	r0, {r4, r6, r8, sl, ip}
    740c:	0800157a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, ip}
    7410:	7a540001 	bvc	150741c <_Min_Heap_Size+0x1506c1c>
    7414:	9c080015 	stcls	0, cr0, [r8], {21}
    7418:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    741c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7420:	00159c9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    7424:	00159e08 	andseq	r9, r5, r8, lsl #28
    7428:	51000108 	tstpl	r0, r8, lsl #2
    742c:	0800159e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, sl, ip}
    7430:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    7434:	b4540001 	ldrblt	r0, [r4], #-1
    7438:	d0080015 	andle	r0, r8, r5, lsl r0
    743c:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    7440:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7444:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7458:	00154400 	andseq	r4, r5, r0, lsl #8
    745c:	00155008 	andseq	r5, r5, r8
    7460:	52000108 	andpl	r0, r0, #8, 2
    7464:	08001550 	stmdaeq	r0, {r4, r6, r8, sl, ip}
    7468:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
    746c:	84560001 	ldrbhi	r0, [r6], #-1
    7470:	9c080015 	stcls	0, cr0, [r8], {21}
    7474:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    7478:	5201f300 	andpl	pc, r1, #0, 6
    747c:	00159c9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    7480:	0015a308 	andseq	sl, r5, r8, lsl #6
    7484:	52000108 	andpl	r0, r0, #8, 2
    7488:	080015a3 	stmdaeq	r0, {r0, r1, r5, r7, r8, sl, ip}
    748c:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    7490:	b4560001 	ldrblt	r0, [r6], #-1
    7494:	d0080015 	andle	r0, r8, r5, lsl r0
    7498:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    749c:	5201f300 	andpl	pc, r1, #0, 6
    74a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    74a4:	00000000 	andeq	r0, r0, r0
    74a8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    74b4:	00154c00 	andseq	r4, r5, r0, lsl #24
    74b8:	00155c08 	andseq	r5, r5, r8, lsl #24
    74bc:	30000208 	andcc	r0, r0, r8, lsl #4
    74c0:	00155c9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    74c4:	00156e08 	andseq	r6, r5, r8, lsl #28
    74c8:	53000108 	movwpl	r0, #264	; 0x108
    74cc:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    74d0:	08001572 	stmdaeq	r0, {r1, r4, r5, r6, r8, sl, ip}
    74d4:	7c720003 	ldclvc	0, cr0, [r2], #-12
    74d8:	00159c9f 	mulseq	r5, pc, ip	; <UNPREDICTABLE>
    74dc:	0015b008 	andseq	fp, r5, r8
    74e0:	30000208 	andcc	r0, r0, r8, lsl #4
    74e4:	0015b09f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    74e8:	0015b208 	andseq	fp, r5, r8, lsl #4
    74ec:	53000108 	movwpl	r0, #264	; 0x108
    74f0:	080015b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, sl, ip}
    74f4:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    74f8:	7c720003 	ldclvc	0, cr0, [r2], #-12
    74fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7500:	00000000 	andeq	r0, r0, r0
    7504:	00000200 	andeq	r0, r0, r0, lsl #4
    7508:	5c000000 	stcpl	0, cr0, [r0], {-0}
    750c:	84080015 	strhi	r0, [r8], #-21	; 0xffffffeb
    7510:	01080015 	tsteq	r8, r5, lsl r0
    7514:	15845600 	strne	r5, [r4, #1536]	; 0x600
    7518:	15860800 	strne	r0, [r6, #2048]	; 0x800
    751c:	00040800 	andeq	r0, r4, r0, lsl #16
    7520:	9f5201f3 	svcls	0x005201f3
    7524:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    7528:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    752c:	00560001 	subseq	r0, r6, r1
    7530:	00000000 	andeq	r0, r0, r0
    7534:	02000000 	andeq	r0, r0, #0
    7538:	00000000 	andeq	r0, r0, r0
    753c:	00155c00 	andseq	r5, r5, r0, lsl #24
    7540:	00157a08 	andseq	r7, r5, r8, lsl #20
    7544:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7548:	0800157a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, ip}
    754c:	08001586 	stmdaeq	r0, {r1, r2, r7, r8, sl, ip}
    7550:	01f30004 	mvnseq	r0, r4
    7554:	15b09f51 	ldrne	r9, [r0, #3921]!	; 0xf51
    7558:	15b40800 	ldrne	r0, [r4, #2048]!	; 0x800
    755c:	00010800 	andeq	r0, r1, r0, lsl #16
    7560:	00000054 	andeq	r0, r0, r4, asr r0
    7564:	00000000 	andeq	r0, r0, r0
    7568:	00000200 	andeq	r0, r0, r0, lsl #4
    756c:	00000000 	andeq	r0, r0, r0
    7570:	00155c00 	andseq	r5, r5, r0, lsl #24
    7574:	00156e08 	andseq	r6, r5, r8, lsl #28
    7578:	53000108 	movwpl	r0, #264	; 0x108
    757c:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    7580:	08001572 	stmdaeq	r0, {r1, r4, r5, r6, r8, sl, ip}
    7584:	7c720003 	ldclvc	0, cr0, [r2], #-12
    7588:	0015b09f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    758c:	0015b208 	andseq	fp, r5, r8, lsl #4
    7590:	53000108 	movwpl	r0, #264	; 0x108
    7594:	080015b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, sl, ip}
    7598:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    759c:	7c720003 	ldclvc	0, cr0, [r2], #-12
    75a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    75a4:	00000000 	andeq	r0, r0, r0
    75a8:	00000400 	andeq	r0, r0, r0, lsl #8
    75ac:	00000000 	andeq	r0, r0, r0
    75b0:	00155c00 	andseq	r5, r5, r0, lsl #24
    75b4:	00156e08 	andseq	r6, r5, r8, lsl #28
    75b8:	53000108 	movwpl	r0, #264	; 0x108
    75bc:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    75c0:	08001572 	stmdaeq	r0, {r1, r4, r5, r6, r8, sl, ip}
    75c4:	7c720003 	ldclvc	0, cr0, [r2], #-12
    75c8:	0015b09f 	mulseq	r5, pc, r0	; <UNPREDICTABLE>
    75cc:	0015b208 	andseq	fp, r5, r8, lsl #4
    75d0:	53000108 	movwpl	r0, #264	; 0x108
    75d4:	080015b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, sl, ip}
    75d8:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    75dc:	7c720003 	ldclvc	0, cr0, [r2], #-12
    75e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    75ec:	00156600 	andseq	r6, r5, r0, lsl #12
    75f0:	00157608 	andseq	r7, r5, r8, lsl #12
    75f4:	51000108 	tstpl	r0, r8, lsl #2
    75f8:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    75fc:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    7600:	00510001 	subseq	r0, r1, r1
	...
    760c:	00156e00 	andseq	r6, r5, r0, lsl #28
    7610:	00158008 	andseq	r8, r5, r8
    7614:	53000108 	movwpl	r0, #264	; 0x108
	...
    7624:	08001586 	stmdaeq	r0, {r1, r2, r7, r8, sl, ip}
    7628:	0800158c 	stmdaeq	r0, {r2, r3, r7, r8, sl, ip}
    762c:	b4540001 	ldrblt	r0, [r4], #-1
    7630:	ba080015 	blt	20768c <_Min_Heap_Size+0x206e8c>
    7634:	01080015 	tsteq	r8, r5, lsl r0
    7638:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7644:	15860000 	strne	r0, [r6]
    7648:	15920800 	ldrne	r0, [r2, #2048]	; 0x800
    764c:	00010800 	andeq	r0, r1, r0, lsl #16
    7650:	0015b455 	andseq	fp, r5, r5, asr r4
    7654:	0015b808 	andseq	fp, r5, r8, lsl #16
    7658:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    7664:	08001508 	stmdaeq	r0, {r3, r8, sl, ip}
    7668:	0800150a 	stmdaeq	r0, {r1, r3, r8, sl, ip}
    766c:	007d0002 	rsbseq	r0, sp, r2
    7670:	0800150a 	stmdaeq	r0, {r1, r3, r8, sl, ip}
    7674:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
    7678:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    768c:	15080000 	strne	r0, [r8, #-0]
    7690:	15120800 	ldrne	r0, [r2, #-2048]	; 0xfffff800
    7694:	00010800 	andeq	r0, r1, r0, lsl #16
    7698:	00151250 	andseq	r1, r5, r0, asr r2
    769c:	00152008 	andseq	r2, r5, r8
    76a0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    76a4:	08001520 	stmdaeq	r0, {r5, r8, sl, ip}
    76a8:	08001532 	stmdaeq	r0, {r1, r4, r5, r8, sl, ip}
    76ac:	01f30004 	mvnseq	r0, r4
    76b0:	15329f50 	ldrne	r9, [r2, #-3920]!	; 0xfffff0b0
    76b4:	15360800 	ldrne	r0, [r6, #-2048]!	; 0xfffff800
    76b8:	00010800 	andeq	r0, r1, r0, lsl #16
    76bc:	00153650 	andseq	r3, r5, r0, asr r6
    76c0:	00154408 	andseq	r4, r5, r8, lsl #8
    76c4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    76d0:	00000001 	andeq	r0, r0, r1
    76d4:	08001512 	stmdaeq	r0, {r1, r4, r8, sl, ip}
    76d8:	08001520 	stmdaeq	r0, {r5, r8, sl, ip}
    76dc:	20540001 	subscs	r0, r4, r1
    76e0:	30080015 	andcc	r0, r8, r5, lsl r0
    76e4:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    76e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    76ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    76f8:	16000000 	strne	r0, [r0], -r0
    76fc:	1a080015 	bne	207758 <_Min_Heap_Size+0x206f58>
    7700:	01080015 	tsteq	r8, r5, lsl r0
    7704:	151e5300 	ldrne	r5, [lr, #-768]	; 0xfffffd00
    7708:	15260800 	strne	r0, [r6, #-2048]!	; 0xfffff800
    770c:	00010800 	andeq	r0, r1, r0, lsl #16
    7710:	00152e53 	andseq	r2, r5, r3, asr lr
    7714:	00153008 	andseq	r3, r5, r8
    7718:	53000108 	movwpl	r0, #264	; 0x108
	...
    7724:	00000004 	andeq	r0, r0, r4
    7728:	08001512 	stmdaeq	r0, {r1, r4, r8, sl, ip}
    772c:	08001520 	stmdaeq	r0, {r5, r8, sl, ip}
    7730:	00740005 	rsbseq	r0, r4, r5
    7734:	209f1a37 	addscs	r1, pc, r7, lsr sl	; <UNPREDICTABLE>
    7738:	32080015 	andcc	r0, r8, #21
    773c:	06080015 			; <UNDEFINED> instruction: 0x06080015
    7740:	5001f300 	andpl	pc, r1, r0, lsl #6
    7744:	009f1a37 	addseq	r1, pc, r7, lsr sl	; <UNPREDICTABLE>
    7748:	00000000 	andeq	r0, r0, r0
    774c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    7750:	ce080016 	mcrgt	0, 0, r0, cr8, cr6, {0}
    7754:	02080016 	andeq	r0, r8, #22
    7758:	ce007d00 	cdpgt	13, 0, cr7, cr0, cr0, {0}
    775c:	f4080016 	vst4.8	{d0-d3}, [r8 :64], r6
    7760:	02080016 	andeq	r0, r8, #22
    7764:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    7774:	0016cc00 	andseq	ip, r6, r0, lsl #24
    7778:	0016d308 	andseq	sp, r6, r8, lsl #6
    777c:	50000108 	andpl	r0, r0, r8, lsl #2
    7780:	080016d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r9, sl, ip}
    7784:	080016e2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, ip}
    7788:	e2540001 	subs	r0, r4, #1
    778c:	f4080016 	vst4.8	{d0-d3}, [r8 :64], r6
    7790:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7794:	5001f300 	andpl	pc, r1, r0, lsl #6
    7798:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    77a4:	0016d600 	andseq	sp, r6, r0, lsl #12
    77a8:	0016e208 	andseq	lr, r6, r8, lsl #4
    77ac:	50000108 	andpl	r0, r0, r8, lsl #2
    77b0:	080016e2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, ip}
    77b4:	080016ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl, ip}
    77b8:	00550001 	subseq	r0, r5, r1
    77bc:	00000000 	andeq	r0, r0, r0
    77c0:	01000000 	mrseq	r0, (UNDEF: 0)
    77c4:	0016d600 	andseq	sp, r6, r0, lsl #12
    77c8:	0016ee08 	andseq	lr, r6, r8, lsl #28
    77cc:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    77e0:	007d0002 	rsbseq	r0, sp, r2
	...
    77ec:	107d0002 	rsbsne	r0, sp, r2
	...
    7808:	00500001 	subseq	r0, r0, r1
    780c:	00000000 	andeq	r0, r0, r0
    7810:	04000000 	streq	r0, [r0], #-0
    7814:	5001f300 	andpl	pc, r1, r0, lsl #6
    7818:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    781c:	00000000 	andeq	r0, r0, r0
    7820:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    782c:	01f30004 	mvnseq	r0, r4
    7830:	00009f50 	andeq	r9, r0, r0, asr pc
    7834:	00000000 	andeq	r0, r0, r0
    7838:	00010000 	andeq	r0, r1, r0
	...
    7848:	00020000 	andeq	r0, r2, r0
    784c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7850:	00000000 	andeq	r0, r0, r0
    7854:	00010000 	andeq	r0, r1, r0
    7858:	00000050 	andeq	r0, r0, r0, asr r0
    785c:	00000000 	andeq	r0, r0, r0
    7860:	30000200 	andcc	r0, r0, r0, lsl #4
    7864:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7868:	00000000 	andeq	r0, r0, r0
    786c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7878:	00000001 	andeq	r0, r0, r1
    787c:	00000000 	andeq	r0, r0, r0
    7880:	00010000 	andeq	r0, r1, r0
    7884:	00000055 	andeq	r0, r0, r5, asr r0
    7888:	00000000 	andeq	r0, r0, r0
    788c:	00162800 	andseq	r2, r6, r0, lsl #16
    7890:	00162a08 	andseq	r2, r6, r8, lsl #20
    7894:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7898:	00162a00 	andseq	r2, r6, r0, lsl #20
    789c:	00167408 	andseq	r7, r6, r8, lsl #8
    78a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    78a4:	00000008 	andeq	r0, r0, r8
	...
    78b0:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    78b4:	30080016 	andcc	r0, r8, r6, lsl r0
    78b8:	01080016 	tsteq	r8, r6, lsl r0
    78bc:	16305000 	ldrtne	r5, [r0], -r0
    78c0:	16660800 	strbtne	r0, [r6], -r0, lsl #16
    78c4:	00010800 	andeq	r0, r1, r0, lsl #16
    78c8:	00166654 	andseq	r6, r6, r4, asr r6
    78cc:	00167408 	andseq	r7, r6, r8, lsl #8
    78d0:	f3000408 	vshl.u8	d0, d8, d0
    78d4:	009f5001 	addseq	r5, pc, r1
	...
    78e4:	02000000 	andeq	r0, r0, #0
    78e8:	00007d00 	andeq	r7, r0, r0, lsl #26
    78ec:	00000000 	andeq	r0, r0, r0
    78f0:	02000000 	andeq	r0, r0, #0
    78f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    78f8:	00000000 	andeq	r0, r0, r0
    78fc:	74000000 	strvc	r0, [r0], #-0
    7900:	76080016 			; <UNDEFINED> instruction: 0x76080016
    7904:	02080016 	andeq	r0, r8, #22
    7908:	76007d00 	strvc	r7, [r0], -r0, lsl #26
    790c:	a8080016 	stmdage	r8, {r1, r2, r4}
    7910:	02080016 	andeq	r0, r8, #22
    7914:	00087d00 	andeq	r7, r8, r0, lsl #26
    7918:	00000000 	andeq	r0, r0, r0
    791c:	02000000 	andeq	r0, r0, #0
	...
    7930:	02000000 	andeq	r0, r0, #0
    7934:	009f3000 	addseq	r3, pc, r0
    7938:	00000000 	andeq	r0, r0, r0
    793c:	01000000 	mrseq	r0, (UNDEF: 0)
    7940:	00005300 	andeq	r5, r0, r0, lsl #6
    7944:	00000000 	andeq	r0, r0, r0
    7948:	00010000 	andeq	r0, r1, r0
    794c:	00000053 	andeq	r0, r0, r3, asr r0
    7950:	00000000 	andeq	r0, r0, r0
    7954:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7960:	00530001 	subseq	r0, r3, r1
    7964:	00000000 	andeq	r0, r0, r0
    7968:	01000000 	mrseq	r0, (UNDEF: 0)
    796c:	00005300 	andeq	r5, r0, r0, lsl #6
    7970:	00000000 	andeq	r0, r0, r0
    7974:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    7988:	9f300002 	svcls	0x00300002
	...
    7994:	9f300002 	svcls	0x00300002
	...
    79a0:	00530001 	subseq	r0, r3, r1
    79a4:	00000000 	andeq	r0, r0, r0
    79a8:	02000000 	andeq	r0, r0, #0
    79ac:	009f3000 	addseq	r3, pc, r0
    79b0:	00000000 	andeq	r0, r0, r0
    79b4:	01000000 	mrseq	r0, (UNDEF: 0)
    79b8:	00005300 	andeq	r5, r0, r0, lsl #6
    79bc:	00000000 	andeq	r0, r0, r0
    79c0:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    79d0:	00020000 	andeq	r0, r2, r0
    79d4:	00009f32 	andeq	r9, r0, r2, lsr pc
    79d8:	00000000 	andeq	r0, r0, r0
    79dc:	00020000 	andeq	r0, r2, r0
    79e0:	00009f32 	andeq	r9, r0, r2, lsr pc
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	00010000 	andeq	r0, r1, r0
    79ec:	00000052 	andeq	r0, r0, r2, asr r0
    79f0:	00000000 	andeq	r0, r0, r0
    79f4:	32000200 	andcc	r0, r0, #0, 4
    79f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    79fc:	00000000 	andeq	r0, r0, r0
    7a00:	00010200 	andeq	r0, r1, r0, lsl #4
	...
    7a0c:	02000000 	andeq	r0, r0, #0
    7a10:	009f3000 	addseq	r3, pc, r0
    7a14:	00000000 	andeq	r0, r0, r0
    7a18:	02000000 	andeq	r0, r0, #0
    7a1c:	009f3000 	addseq	r3, pc, r0
    7a20:	00000000 	andeq	r0, r0, r0
    7a24:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7a28:	09007100 	stmdbeq	r0, {r8, ip, sp, lr}
    7a2c:	253324ed 	ldrcs	r2, [r3, #-1261]!	; 0xfffffb13
    7a30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a34:	00000000 	andeq	r0, r0, r0
    7a38:	00010200 	andeq	r0, r1, r0, lsl #4
	...
    7a48:	32000200 	andcc	r0, r0, #0, 4
    7a4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	32000200 	andcc	r0, r0, #0, 4
    7a58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	52000100 	andpl	r0, r0, #0, 2
	...
    7a6c:	00520001 	subseq	r0, r2, r1
	...
    7a78:	00000001 	andeq	r0, r0, r1
    7a7c:	00000000 	andeq	r0, r0, r0
    7a80:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7a8c:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
    7a90:	080017d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, ip}
    7a94:	007d0002 	rsbseq	r0, sp, r2
    7a98:	080017d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, ip}
    7a9c:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
    7aa0:	207d0002 	rsbscs	r0, sp, r2
	...
    7ab4:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
    7ab8:	080017ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip}
    7abc:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    7ac0:	28080017 	stmdacs	r8, {r0, r1, r2, r4}
    7ac4:	01080018 	tsteq	r8, r8, lsl r0
    7ac8:	18285800 	stmdane	r8!, {fp, ip, lr}
    7acc:	182e0800 	stmdane	lr!, {fp}
    7ad0:	00040800 	andeq	r0, r4, r0, lsl #16
    7ad4:	9f5001f3 	svcls	0x005001f3
    7ad8:	0800182e 	stmdaeq	r0, {r1, r2, r3, r5, fp, ip}
    7adc:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
    7ae0:	00500001 	subseq	r0, r0, r1
	...
    7af0:	d4000000 	strle	r0, [r0], #-0
    7af4:	ee080017 	mcr	0, 0, r0, cr8, cr7, {0}
    7af8:	01080017 	tsteq	r8, r7, lsl r0
    7afc:	17ee5100 	strbne	r5, [lr, r0, lsl #2]!
    7b00:	18280800 	stmdane	r8!, {fp}
    7b04:	00010800 	andeq	r0, r1, r0, lsl #16
    7b08:	00182857 	andseq	r2, r8, r7, asr r8
    7b0c:	00182e08 	andseq	r2, r8, r8, lsl #28
    7b10:	f3000408 	vshl.u8	d0, d8, d0
    7b14:	2e9f5101 	fmlcse	f5, f7, f1
    7b18:	50080018 	andpl	r0, r8, r8, lsl r0
    7b1c:	01080018 	tsteq	r8, r8, lsl r0
    7b20:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    7b30:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
    7b34:	080017ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip}
    7b38:	ee520001 	cdp	0, 5, cr0, cr2, cr1, {0}
    7b3c:	2e080017 	mcrcs	0, 0, r0, cr8, cr7, {0}
    7b40:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    7b44:	5201f300 	andpl	pc, r1, #0, 6
    7b48:	00182e9f 	mulseq	r8, pc, lr	; <UNPREDICTABLE>
    7b4c:	00185008 	andseq	r5, r8, r8
    7b50:	52000108 	andpl	r0, r0, #8, 2
	...
    7b64:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
    7b68:	080017ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip}
    7b6c:	ee530001 	cdp	0, 5, cr0, cr3, cr1, {0}
    7b70:	28080017 	stmdacs	r8, {r0, r1, r2, r4}
    7b74:	01080018 	tsteq	r8, r8, lsl r0
    7b78:	18285500 	stmdane	r8!, {r8, sl, ip, lr}
    7b7c:	182e0800 	stmdane	lr!, {fp}
    7b80:	00040800 	andeq	r0, r4, r0, lsl #16
    7b84:	9f5301f3 	svcls	0x005301f3
    7b88:	0800182e 	stmdaeq	r0, {r1, r2, r3, r5, fp, ip}
    7b8c:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
    7b90:	00530001 	subseq	r0, r3, r1
    7b94:	00000000 	andeq	r0, r0, r0
    7b98:	01000000 	mrseq	r0, (UNDEF: 0)
    7b9c:	00000000 	andeq	r0, r0, r0
    7ba0:	0017d800 	andseq	sp, r7, r0, lsl #16
    7ba4:	0017ee08 	andseq	lr, r7, r8, lsl #28
    7ba8:	30000208 	andcc	r0, r0, r8, lsl #4
    7bac:	0017ee9f 	mulseq	r7, pc, lr	; <UNPREDICTABLE>
    7bb0:	00182808 	andseq	r2, r8, r8, lsl #16
    7bb4:	56000108 	strpl	r0, [r0], -r8, lsl #2
    7bb8:	0800182e 	stmdaeq	r0, {r1, r2, r3, r5, fp, ip}
    7bbc:	08001844 	stmdaeq	r0, {r2, r6, fp, ip}
    7bc0:	9f300002 	svcls	0x00300002
	...
    7bcc:	01000002 	tsteq	r0, r2
    7bd0:	00000001 	andeq	r0, r0, r1
    7bd4:	17d80000 	ldrbne	r0, [r8, r0]
    7bd8:	17ee0800 	strbne	r0, [lr, r0, lsl #16]!
    7bdc:	00020800 	andeq	r0, r2, r0, lsl #16
    7be0:	17f89f30 			; <UNDEFINED> instruction: 0x17f89f30
    7be4:	180a0800 	stmdane	sl, {fp}
    7be8:	00010800 	andeq	r0, r1, r0, lsl #16
    7bec:	00180a52 	andseq	r0, r8, r2, asr sl
    7bf0:	00180e08 	andseq	r0, r8, r8, lsl #28
    7bf4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7bf8:	180e9f7f 	stmdane	lr, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
    7bfc:	18280800 	stmdane	r8!, {fp}
    7c00:	00010800 	andeq	r0, r1, r0, lsl #16
    7c04:	00182e59 	andseq	r2, r8, r9, asr lr
    7c08:	00185008 	andseq	r5, r8, r8
    7c0c:	30000208 	andcc	r0, r0, r8, lsl #4
    7c10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c14:	00000000 	andeq	r0, r0, r0
    7c18:	00000200 	andeq	r0, r0, r0, lsl #4
    7c1c:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    7c20:	ee080017 	mcr	0, 0, r0, cr8, cr7, {0}
    7c24:	02080017 	andeq	r0, r8, #23
    7c28:	169f3000 	ldrne	r3, [pc], r0
    7c2c:	19080018 	stmdbne	r8, {r3, r4}
    7c30:	01080018 	tsteq	r8, r8, lsl r0
    7c34:	182e5000 	stmdane	lr!, {ip, lr}
    7c38:	18500800 	ldmdane	r0, {fp}^
    7c3c:	00020800 	andeq	r0, r2, r0, lsl #16
    7c40:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c44:	00000000 	andeq	r0, r0, r0
    7c48:	00020000 	andeq	r0, r2, r0
    7c4c:	00000000 	andeq	r0, r0, r0
    7c50:	080017d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, ip}
    7c54:	080017ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip}
    7c58:	9f300002 	svcls	0x00300002
    7c5c:	080017ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip}
    7c60:	08001828 	stmdaeq	r0, {r3, r5, fp, ip}
    7c64:	2e540001 	cdpcs	0, 5, cr0, cr4, cr1, {0}
    7c68:	50080018 	andpl	r0, r8, r8, lsl r0
    7c6c:	02080018 	andeq	r0, r8, #24
    7c70:	009f3000 	addseq	r3, pc, r0
    7c74:	00000000 	andeq	r0, r0, r0
    7c78:	50000000 	andpl	r0, r0, r0
    7c7c:	52080018 	andpl	r0, r8, #24
    7c80:	02080018 	andeq	r0, r8, #24
    7c84:	52007d00 	andpl	r7, r0, #0, 26
    7c88:	d4080018 	strle	r0, [r8], #-24	; 0xffffffe8
    7c8c:	02080019 	andeq	r0, r8, #25
    7c90:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    7ca0:	00185000 	andseq	r5, r8, r0
    7ca4:	00189c08 	andseq	r9, r8, r8, lsl #24
    7ca8:	50000108 	andpl	r0, r0, r8, lsl #2
    7cac:	0800189c 	stmdaeq	r0, {r2, r3, r4, r7, fp, ip}
    7cb0:	08001948 	stmdaeq	r0, {r3, r6, r8, fp, ip}
    7cb4:	48550001 	ldmdami	r5, {r0}^
    7cb8:	d4080019 	strle	r0, [r8], #-25	; 0xffffffe7
    7cbc:	04080019 	streq	r0, [r8], #-25	; 0xffffffe7
    7cc0:	5001f300 	andpl	pc, r1, r0, lsl #6
    7cc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7cd0:	00185000 	andseq	r5, r8, r0
    7cd4:	00189f08 	andseq	r9, r8, r8, lsl #30
    7cd8:	51000108 	tstpl	r0, r8, lsl #2
    7cdc:	0800189f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, fp, ip}
    7ce0:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
    7ce4:	00560001 	subseq	r0, r6, r1
    7ce8:	00000000 	andeq	r0, r0, r0
    7cec:	01000000 	mrseq	r0, (UNDEF: 0)
    7cf0:	00000000 	andeq	r0, r0, r0
    7cf4:	00185600 	andseq	r5, r8, r0, lsl #12
    7cf8:	00194808 	andseq	r4, r9, r8, lsl #16
    7cfc:	30000208 	andcc	r0, r0, r8, lsl #4
    7d00:	0019489f 	mulseq	r9, pc, r8	; <UNPREDICTABLE>
    7d04:	00194a08 	andseq	r4, r9, r8, lsl #20
    7d08:	50000108 	andpl	r0, r0, r8, lsl #2
    7d0c:	0800194a 	stmdaeq	r0, {r1, r3, r6, r8, fp, ip}
    7d10:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
    7d14:	00550001 	subseq	r0, r5, r1
    7d18:	00000000 	andeq	r0, r0, r0
    7d1c:	01000000 	mrseq	r0, (UNDEF: 0)
    7d20:	01010101 	tsteq	r1, r1, lsl #2
    7d24:	56000000 	strpl	r0, [r0], -r0
    7d28:	38080018 	stmdacc	r8, {r3, r4}
    7d2c:	02080019 	andeq	r0, r8, #25
    7d30:	389f3000 	ldmcc	pc, {ip, sp}	; <UNPREDICTABLE>
    7d34:	56080019 			; <UNDEFINED> instruction: 0x56080019
    7d38:	02080019 	andeq	r0, r8, #25
    7d3c:	569f4000 	ldrpl	r4, [pc], r0
    7d40:	5a080019 	bpl	207dac <_Min_Heap_Size+0x2075ac>
    7d44:	02080019 	andeq	r0, r8, #25
    7d48:	5a9f3000 	bpl	fe7d3d50 <_estack+0xde7d2b18>
    7d4c:	d4080019 	strle	r0, [r8], #-25	; 0xffffffe7
    7d50:	01080019 	tsteq	r8, r9, lsl r0
    7d54:	00005400 	andeq	r5, r0, r0, lsl #8
    7d58:	00000000 	andeq	r0, r0, r0
    7d5c:	05020000 	streq	r0, [r2, #-0]
    7d60:	01010105 	tsteq	r1, r5, lsl #2
    7d64:	01010101 	tsteq	r1, r1, lsl #2
    7d68:	01010101 	tsteq	r1, r1, lsl #2
    7d6c:	01010101 	tsteq	r1, r1, lsl #2
    7d70:	01010101 	tsteq	r1, r1, lsl #2
    7d74:	01010101 	tsteq	r1, r1, lsl #2
    7d78:	01010101 	tsteq	r1, r1, lsl #2
    7d7c:	00010101 	andeq	r0, r1, r1, lsl #2
    7d80:	00000000 	andeq	r0, r0, r0
    7d84:	08001856 	stmdaeq	r0, {r1, r2, r4, r6, fp, ip}
    7d88:	08001856 	stmdaeq	r0, {r1, r2, r4, r6, fp, ip}
    7d8c:	56500001 	ldrbpl	r0, [r0], -r1
    7d90:	5c080018 	stcpl	0, cr0, [r8], {24}
    7d94:	03080018 	movweq	r0, #32792	; 0x8018
    7d98:	9f047000 	svcls	0x00047000
    7d9c:	0800185c 	stmdaeq	r0, {r2, r3, r4, r6, fp, ip}
    7da0:	08001860 	stmdaeq	r0, {r5, r6, fp, ip}
    7da4:	08700003 	ldmdaeq	r0!, {r0, r1}^
    7da8:	0018609f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7dac:	00186408 	andseq	r6, r8, r8, lsl #8
    7db0:	70000308 	andvc	r0, r0, r8, lsl #6
    7db4:	18649f0c 	stmdane	r4!, {r2, r3, r8, r9, sl, fp, ip, pc}^
    7db8:	18680800 	stmdane	r8!, {fp}^
    7dbc:	00030800 	andeq	r0, r3, r0, lsl #16
    7dc0:	689f1070 	ldmvs	pc, {r4, r5, r6, ip}	; <UNPREDICTABLE>
    7dc4:	6c080018 	stcvs	0, cr0, [r8], {24}
    7dc8:	03080018 	movweq	r0, #32792	; 0x8018
    7dcc:	9f147000 	svcls	0x00147000
    7dd0:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
    7dd4:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
    7dd8:	18700003 	ldmdane	r0!, {r0, r1}^
    7ddc:	0018709f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7de0:	00187408 	andseq	r7, r8, r8, lsl #8
    7de4:	70000308 	andvc	r0, r0, r8, lsl #6
    7de8:	18749f1c 	ldmdane	r4!, {r2, r3, r4, r8, r9, sl, fp, ip, pc}^
    7dec:	18780800 	ldmdane	r8!, {fp}^
    7df0:	00030800 	andeq	r0, r3, r0, lsl #16
    7df4:	789f2070 	ldmvc	pc, {r4, r5, r6, sp}	; <UNPREDICTABLE>
    7df8:	7c080018 	stcvc	0, cr0, [r8], {24}
    7dfc:	03080018 	movweq	r0, #32792	; 0x8018
    7e00:	9f247000 	svcls	0x00247000
    7e04:	0800187c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, ip}
    7e08:	08001880 	stmdaeq	r0, {r7, fp, ip}
    7e0c:	28700003 	ldmdacs	r0!, {r0, r1}^
    7e10:	0018809f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7e14:	00188408 	andseq	r8, r8, r8, lsl #8
    7e18:	70000308 	andvc	r0, r0, r8, lsl #6
    7e1c:	18849f2c 	stmne	r4, {r2, r3, r5, r8, r9, sl, fp, ip, pc}
    7e20:	18880800 	stmne	r8, {fp}
    7e24:	00030800 	andeq	r0, r3, r0, lsl #16
    7e28:	889f3070 	ldmhi	pc, {r4, r5, r6, ip, sp}	; <UNPREDICTABLE>
    7e2c:	8c080018 	stchi	0, cr0, [r8], {24}
    7e30:	03080018 	movweq	r0, #32792	; 0x8018
    7e34:	9f347000 	svcls	0x00347000
    7e38:	0800188c 	stmdaeq	r0, {r2, r3, r7, fp, ip}
    7e3c:	08001890 	stmdaeq	r0, {r4, r7, fp, ip}
    7e40:	38700003 	ldmdacc	r0!, {r0, r1}^
    7e44:	0018909f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7e48:	00189408 	andseq	r9, r8, r8, lsl #8
    7e4c:	70000308 	andvc	r0, r0, r8, lsl #6
    7e50:	18949f3c 	ldmne	r4, {r2, r3, r4, r5, r8, r9, sl, fp, ip, pc}
    7e54:	189c0800 	ldmne	ip, {fp}
    7e58:	00040800 	andeq	r0, r4, r0, lsl #16
    7e5c:	9f00c070 	svcls	0x0000c070
    7e60:	0800189c 	stmdaeq	r0, {r2, r3, r4, r7, fp, ip}
    7e64:	08001948 	stmdaeq	r0, {r3, r6, r8, fp, ip}
    7e68:	c0750004 	rsbsgt	r0, r5, r4
    7e6c:	19489f00 	stmdbne	r8, {r8, r9, sl, fp, ip, pc}^
    7e70:	19d40800 	ldmibne	r4, {fp}^
    7e74:	00060800 	andeq	r0, r6, r0, lsl #16
    7e78:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    7e7c:	00009f40 	andeq	r9, r0, r0, asr #30
    7e80:	00000000 	andeq	r0, r0, r0
    7e84:	176c0000 	strbne	r0, [ip, -r0]!
    7e88:	176e0800 	strbne	r0, [lr, -r0, lsl #16]!
    7e8c:	00020800 	andeq	r0, r2, r0, lsl #16
    7e90:	176e007d 			; <UNDEFINED> instruction: 0x176e007d
    7e94:	17840800 	strne	r0, [r4, r0, lsl #16]
    7e98:	00020800 	andeq	r0, r2, r0, lsl #16
    7e9c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7eac:	176c0000 	strbne	r0, [ip, -r0]!
    7eb0:	17740800 	ldrbne	r0, [r4, -r0, lsl #16]!
    7eb4:	00010800 	andeq	r0, r1, r0, lsl #16
    7eb8:	00177450 	andseq	r7, r7, r0, asr r4
    7ebc:	00177708 	andseq	r7, r7, r8, lsl #14
    7ec0:	51000108 	tstpl	r0, r8, lsl #2
    7ec4:	08001777 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9, sl, ip}
    7ec8:	08001780 	stmdaeq	r0, {r7, r8, r9, sl, ip}
    7ecc:	80540001 	subshi	r0, r4, r1
    7ed0:	84080017 	strhi	r0, [r8], #-23	; 0xffffffe9
    7ed4:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    7ed8:	5001f300 	andpl	pc, r1, r0, lsl #6
    7edc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7ee8:	00173400 	andseq	r3, r7, r0, lsl #8
    7eec:	00173a08 	andseq	r3, r7, r8, lsl #20
    7ef0:	50000108 	andpl	r0, r0, r8, lsl #2
    7ef4:	0800173a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, ip}
    7ef8:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
    7efc:	01f30004 	mvnseq	r0, r4
    7f00:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7f0c:	08001738 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, ip}
    7f10:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
    7f14:	00530001 	subseq	r0, r3, r1
	...
    7f30:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    7f34:	58080017 	stmdapl	r8, {r0, r1, r2, r4}
    7f38:	01080017 	tsteq	r8, r7, lsl r0
    7f3c:	17585000 	ldrbne	r5, [r8, -r0]
    7f40:	175a0800 	ldrbne	r0, [sl, -r0, lsl #16]
    7f44:	000a0800 	andeq	r0, sl, r0, lsl #16
    7f48:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    7f4c:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    7f50:	175a9f1a 	smmlane	sl, sl, pc, r9	; <UNPREDICTABLE>
    7f54:	175c0800 	ldrbne	r0, [ip, -r0, lsl #16]
    7f58:	00010800 	andeq	r0, r1, r0, lsl #16
    7f5c:	00175c50 	andseq	r5, r7, r0, asr ip
    7f60:	00175e08 	andseq	r5, r7, r8, lsl #28
    7f64:	f3000a08 	vpmax.u8	d0, d0, d8
    7f68:	25405001 	strbcs	r5, [r0, #-1]
    7f6c:	1af8000a 	bne	ffe07f9c <_estack+0xdfe06d64>
    7f70:	00175e9f 	mulseq	r7, pc, lr	; <UNPREDICTABLE>
    7f74:	00176008 	andseq	r6, r7, r8
    7f78:	50000108 	andpl	r0, r0, r8, lsl #2
    7f7c:	08001760 	stmdaeq	r0, {r5, r6, r8, r9, sl, ip}
    7f80:	08001762 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, ip}
    7f84:	01f3000a 	mvnseq	r0, sl
    7f88:	0a254050 	beq	9580d0 <_Min_Heap_Size+0x9578d0>
    7f8c:	9f1af800 	svcls	0x001af800
    7f90:	08001762 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, ip}
    7f94:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
    7f98:	64500001 	ldrbvs	r0, [r0], #-1
    7f9c:	66080017 			; <UNDEFINED> instruction: 0x66080017
    7fa0:	0a080017 	beq	208004 <_Min_Heap_Size+0x207804>
    7fa4:	5001f300 	andpl	pc, r1, r0, lsl #6
    7fa8:	000a2540 	andeq	r2, sl, r0, asr #10
    7fac:	669f1af8 			; <UNDEFINED> instruction: 0x669f1af8
    7fb0:	68080017 	stmdavs	r8, {r0, r1, r2, r4}
    7fb4:	01080017 	tsteq	r8, r7, lsl r0
    7fb8:	17685000 	strbne	r5, [r8, -r0]!
    7fbc:	176a0800 	strbne	r0, [sl, -r0, lsl #16]!
    7fc0:	000a0800 	andeq	r0, sl, r0, lsl #16
    7fc4:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    7fc8:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    7fcc:	00009f1a 	andeq	r9, r0, sl, lsl pc
    7fd0:	00000000 	andeq	r0, r0, r0
    7fd4:	17080000 	strne	r0, [r8, -r0]
    7fd8:	170a0800 	strne	r0, [sl, -r0, lsl #16]
    7fdc:	00020800 	andeq	r0, r2, r0, lsl #16
    7fe0:	170a007d 	smlsdxne	sl, sp, r0, r0
    7fe4:	17320800 	ldrne	r0, [r2, -r0, lsl #16]!
    7fe8:	00020800 	andeq	r0, r2, r0, lsl #16
    7fec:	1732087d 			; <UNDEFINED> instruction: 0x1732087d
    7ff0:	17340800 	ldrne	r0, [r4, -r0, lsl #16]!
    7ff4:	00020800 	andeq	r0, r2, r0, lsl #16
    7ff8:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    8004:	17080000 	strne	r0, [r8, -r0]
    8008:	17280800 	strne	r0, [r8, -r0, lsl #16]!
    800c:	00010800 	andeq	r0, r1, r0, lsl #16
    8010:	00172850 	andseq	r2, r7, r0, asr r8
    8014:	00173408 	andseq	r3, r7, r8, lsl #8
    8018:	f3000408 	vshl.u8	d0, d8, d0
    801c:	009f5001 	addseq	r5, pc, r1
    8020:	00000000 	andeq	r0, r0, r0
    8024:	01000000 	mrseq	r0, (UNDEF: 0)
    8028:	00000000 	andeq	r0, r0, r0
    802c:	00170e00 	andseq	r0, r7, r0, lsl #28
    8030:	00172c08 	andseq	r2, r7, r8, lsl #24
    8034:	30000208 	andcc	r0, r0, r8, lsl #4
    8038:	00172c9f 	mulseq	r7, pc, ip	; <UNPREDICTABLE>
    803c:	00173008 	andseq	r3, r7, r8
    8040:	70000808 	andvc	r0, r0, r8, lsl #16
    8044:	73244000 			; <UNDEFINED> instruction: 0x73244000
    8048:	309f2100 	addscc	r2, pc, r0, lsl #2
    804c:	34080017 	strcc	r0, [r8], #-23	; 0xffffffe9
    8050:	01080017 	tsteq	r8, r7, lsl r0
    8054:	00005000 	andeq	r5, r0, r0
    8058:	00000000 	andeq	r0, r0, r0
    805c:	00030000 	andeq	r0, r3, r0
    8060:	170e0000 	strne	r0, [lr, -r0]
    8064:	17100800 	ldrne	r0, [r0, -r0, lsl #16]
    8068:	00020800 	andeq	r0, r2, r0, lsl #16
    806c:	17109f30 			; <UNDEFINED> instruction: 0x17109f30
    8070:	172c0800 	strne	r0, [ip, -r0, lsl #16]!
    8074:	00010800 	andeq	r0, r1, r0, lsl #16
    8078:	00000053 	andeq	r0, r0, r3, asr r0
    807c:	00000000 	andeq	r0, r0, r0
    8080:	00178400 	andseq	r8, r7, r0, lsl #8
    8084:	00178608 	andseq	r8, r7, r8, lsl #12
    8088:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    808c:	00178600 	andseq	r8, r7, r0, lsl #12
    8090:	0017d408 	andseq	sp, r7, r8, lsl #8
    8094:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8098:	00000008 	andeq	r0, r0, r8
    809c:	00000000 	andeq	r0, r0, r0
    80a0:	0019d400 	andseq	sp, r9, r0, lsl #8
    80a4:	0019d608 	andseq	sp, r9, r8, lsl #12
    80a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    80ac:	0019d600 	andseq	sp, r9, r0, lsl #12
    80b0:	001a5c08 	andseq	r5, sl, r8, lsl #24
    80b4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    80b8:	00000008 	andeq	r0, r0, r8
	...
    80c4:	0019d400 	andseq	sp, r9, r0, lsl #8
    80c8:	0019da08 	andseq	sp, r9, r8, lsl #20
    80cc:	50000108 	andpl	r0, r0, r8, lsl #2
    80d0:	080019da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, fp, ip}
    80d4:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
    80d8:	00540001 	subseq	r0, r4, r1
    80dc:	00000000 	andeq	r0, r0, r0
    80e0:	5c000000 	stcpl	0, cr0, [r0], {-0}
    80e4:	5e08001a 	mcrpl	0, 0, r0, cr8, cr10, {0}
    80e8:	0208001a 	andeq	r0, r8, #26
    80ec:	5e007d00 	cdppl	13, 0, cr7, cr0, cr0, {0}
    80f0:	a408001a 	strge	r0, [r8], #-26	; 0xffffffe6
    80f4:	0208001a 	andeq	r0, r8, #26
    80f8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    810c:	001a5c00 	andseq	r5, sl, r0, lsl #24
    8110:	001a6608 	andseq	r6, sl, r8, lsl #12
    8114:	50000108 	andpl	r0, r0, r8, lsl #2
    8118:	08001a66 	stmdaeq	r0, {r1, r2, r5, r6, r9, fp, ip}
    811c:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
    8120:	70530001 	subsvc	r0, r3, r1
    8124:	7c08001a 	stcvc	0, cr0, [r8], {26}
    8128:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    812c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8130:	001a7c9f 	mulseq	sl, pc, ip	; <UNPREDICTABLE>
    8134:	001a8408 	andseq	r8, sl, r8, lsl #8
    8138:	53000108 	movwpl	r0, #264	; 0x108
    813c:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
    8140:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
    8144:	01f30004 	mvnseq	r0, r4
    8148:	00009f50 	andeq	r9, r0, r0, asr pc
    814c:	00000000 	andeq	r0, r0, r0
    8150:	01010000 	mrseq	r0, (UNDEF: 1)
    8154:	08001a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp, ip}
    8158:	08001a7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, fp, ip}
    815c:	00500001 	subseq	r0, r0, r1
	...
    816c:	02000000 	andeq	r0, r0, #0
    8170:	00007d00 	andeq	r7, r0, r0, lsl #26
    8174:	00000000 	andeq	r0, r0, r0
    8178:	02000000 	andeq	r0, r0, #0
    817c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8190:	01000000 	mrseq	r0, (UNDEF: 0)
    8194:	00005000 	andeq	r5, r0, r0
    8198:	00000000 	andeq	r0, r0, r0
    819c:	00040000 	andeq	r0, r4, r0
    81a0:	9f5001f3 	svcls	0x005001f3
	...
    81b8:	00510001 	subseq	r0, r1, r1
    81bc:	00000000 	andeq	r0, r0, r0
    81c0:	04000000 	streq	r0, [r0], #-0
    81c4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    81c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    81dc:	52000100 	andpl	r0, r0, #0, 2
	...
    81e8:	01f30004 	mvnseq	r0, r4
    81ec:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    81fc:	00020000 	andeq	r0, r2, r0
    8200:	0000007d 	andeq	r0, r0, sp, ror r0
    8204:	00000000 	andeq	r0, r0, r0
    8208:	00020000 	andeq	r0, r2, r0
    820c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    821c:	00020000 	andeq	r0, r2, r0
    8220:	0000007d 	andeq	r0, r0, sp, ror r0
    8224:	00000000 	andeq	r0, r0, r0
    8228:	00020000 	andeq	r0, r2, r0
    822c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8240:	00010000 	andeq	r0, r1, r0
    8244:	00000050 	andeq	r0, r0, r0, asr r0
    8248:	00000000 	andeq	r0, r0, r0
    824c:	f3000400 	vshl.u8	d0, d0, d0
    8250:	009f5001 	addseq	r5, pc, r1
	...
    8264:	01000000 	mrseq	r0, (UNDEF: 0)
    8268:	00005100 	andeq	r5, r0, r0, lsl #2
    826c:	00000000 	andeq	r0, r0, r0
    8270:	00040000 	andeq	r0, r4, r0
    8274:	9f5101f3 	svcls	0x005101f3
	...
    828c:	00500001 	subseq	r0, r0, r1
    8290:	00000000 	andeq	r0, r0, r0
    8294:	04000000 	streq	r0, [r0], #-0
    8298:	5001f300 	andpl	pc, r1, r0, lsl #6
    829c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    82b0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    82bc:	01f30004 	mvnseq	r0, r4
    82c0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    82d0:	00020000 	andeq	r0, r2, r0
    82d4:	0000007d 	andeq	r0, r0, sp, ror r0
    82d8:	00000000 	andeq	r0, r0, r0
    82dc:	00020000 	andeq	r0, r2, r0
    82e0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    82f4:	00010000 	andeq	r0, r1, r0
    82f8:	00000050 	andeq	r0, r0, r0, asr r0
    82fc:	00000000 	andeq	r0, r0, r0
    8300:	f3000400 	vshl.u8	d0, d0, d0
    8304:	009f5001 	addseq	r5, pc, r1
	...
    8314:	02000000 	andeq	r0, r0, #0
    8318:	00007d00 	andeq	r7, r0, r0, lsl #26
    831c:	00000000 	andeq	r0, r0, r0
    8320:	02000000 	andeq	r0, r0, #0
    8324:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8338:	01000000 	mrseq	r0, (UNDEF: 0)
    833c:	00005000 	andeq	r5, r0, r0
    8340:	00000000 	andeq	r0, r0, r0
    8344:	00040000 	andeq	r0, r4, r0
    8348:	9f5001f3 	svcls	0x005001f3
	...
    835c:	007d0002 	rsbseq	r0, sp, r2
	...
    8368:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    8374:	007d0002 	rsbseq	r0, sp, r2
	...
    838c:	00500001 	subseq	r0, r0, r1
    8390:	00000000 	andeq	r0, r0, r0
    8394:	04000000 	streq	r0, [r0], #-0
    8398:	5001f300 	andpl	pc, r1, r0, lsl #6
    839c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    83a8:	001af400 	andseq	pc, sl, r0, lsl #8
    83ac:	001af608 	andseq	pc, sl, r8, lsl #12
    83b0:	50000108 	andpl	r0, r0, r8, lsl #2
    83b4:	08001af6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, fp, ip}
    83b8:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
    83bc:	01f30004 	mvnseq	r0, r4
    83c0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    83cc:	1af00000 	bne	ffc083d4 <_estack+0xdfc0719c>
    83d0:	1af20800 	bne	ffc8a3d8 <_estack+0xdfc891a0>
    83d4:	00010800 	andeq	r0, r1, r0, lsl #16
    83d8:	001af250 	andseq	pc, sl, r0, asr r2	; <UNPREDICTABLE>
    83dc:	001af408 	andseq	pc, sl, r8, lsl #8
    83e0:	f3000408 	vshl.u8	d0, d8, d0
    83e4:	009f5001 	addseq	r5, pc, r1
	...
    83f0:	e6000000 	str	r0, [r0], -r0
    83f4:	ee08001a 	mcr	0, 0, r0, cr8, cr10, {0}
    83f8:	0108001a 	tsteq	r8, sl, lsl r0
    83fc:	1aee5000 	bne	ffb9c404 <_estack+0xdfb9b1cc>
    8400:	1af00800 	bne	ffc0a408 <_estack+0xdfc091d0>
    8404:	00040800 	andeq	r0, r4, r0, lsl #16
    8408:	9f5001f3 	svcls	0x005001f3
	...
    8418:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
    841c:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
    8420:	e4500001 	ldrb	r0, [r0], #-1
    8424:	e608001a 			; <UNDEFINED> instruction: 0xe608001a
    8428:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    842c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8430:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8434:	00000000 	andeq	r0, r0, r0
    8438:	001ac400 	andseq	ip, sl, r0, lsl #8
    843c:	001ac608 	andseq	ip, sl, r8, lsl #12
    8440:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8444:	001ac600 	andseq	ip, sl, r0, lsl #12
    8448:	001ae008 	andseq	lr, sl, r8
    844c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8450:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    845c:	001ac400 	andseq	ip, sl, r0, lsl #8
    8460:	001ace08 	andseq	ip, sl, r8, lsl #28
    8464:	50000108 	andpl	r0, r0, r8, lsl #2
    8468:	08001ace 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, fp, ip}
    846c:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
    8470:	01f30004 	mvnseq	r0, r4
    8474:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8480:	00010100 	andeq	r0, r1, r0, lsl #2
    8484:	1ac40000 	bne	ff10848c <_estack+0xdf107254>
    8488:	1ace0800 	bne	ff38a490 <_estack+0xdf389258>
    848c:	00010800 	andeq	r0, r1, r0, lsl #16
    8490:	001ace51 	andseq	ip, sl, r1, asr lr
    8494:	001ace08 	andseq	ip, sl, r8, lsl #28
    8498:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    849c:	08001ace 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, fp, ip}
    84a0:	08001ad2 	stmdaeq	r0, {r1, r4, r6, r7, r9, fp, ip}
    84a4:	01740003 	cmneq	r4, r3
    84a8:	001ad29f 	mulseq	sl, pc, r2	; <UNPREDICTABLE>
    84ac:	001ae008 	andseq	lr, sl, r8
    84b0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    84c0:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
    84c4:	08001ace 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, fp, ip}
    84c8:	ce520001 	cdpgt	0, 5, cr0, cr2, cr1, {0}
    84cc:	e008001a 	and	r0, r8, sl, lsl r0
    84d0:	0108001a 	tsteq	r8, sl, lsl r0
    84d4:	00005600 	andeq	r5, r0, r0, lsl #12
    84d8:	00000000 	andeq	r0, r0, r0
    84dc:	00030000 	andeq	r0, r3, r0
    84e0:	1aca0000 	bne	ff2884e8 <_estack+0xdf2872b0>
    84e4:	1ace0800 	bne	ff38a4ec <_estack+0xdf3892b4>
    84e8:	00020800 	andeq	r0, r2, r0, lsl #16
    84ec:	1ace9f30 	bne	ff3b01b4 <_estack+0xdf3aef7c>
    84f0:	1ae00800 	bne	ff80a4f8 <_estack+0xdf8092c0>
    84f4:	00010800 	andeq	r0, r1, r0, lsl #16
    84f8:	00000055 	andeq	r0, r0, r5, asr r0
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	001aa400 	andseq	sl, sl, r0, lsl #8
    8504:	001aa608 	andseq	sl, sl, r8, lsl #12
    8508:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    850c:	001aa600 	andseq	sl, sl, r0, lsl #12
    8510:	001ac408 	andseq	ip, sl, r8, lsl #8
    8514:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8518:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8524:	001aa400 	andseq	sl, sl, r0, lsl #8
    8528:	001aae08 	andseq	sl, sl, r8, lsl #28
    852c:	50000108 	andpl	r0, r0, r8, lsl #2
    8530:	08001aae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, fp, ip}
    8534:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
    8538:	01f30004 	mvnseq	r0, r4
    853c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    854c:	1aa40000 	bne	fe908554 <_estack+0xde90731c>
    8550:	1ab10800 	bne	fec4a558 <_estack+0xdec49320>
    8554:	00010800 	andeq	r0, r1, r0, lsl #16
    8558:	001ab151 	andseq	fp, sl, r1, asr r1
    855c:	001ab408 	andseq	fp, sl, r8, lsl #8
    8560:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    8564:	08001ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp, ip}
    8568:	08001ab8 	stmdaeq	r0, {r3, r4, r5, r7, r9, fp, ip}
    856c:	01710003 	cmneq	r1, r3
    8570:	001ab89f 	mulseq	sl, pc, r8	; <UNPREDICTABLE>
    8574:	001ac408 	andseq	ip, sl, r8, lsl #8
    8578:	51000108 	tstpl	r0, r8, lsl #2
	...
    8588:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
    858c:	08001aae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, fp, ip}
    8590:	ae520001 	cdpge	0, 5, cr0, cr2, cr1, {0}
    8594:	c408001a 	strgt	r0, [r8], #-26	; 0xffffffe6
    8598:	0108001a 	tsteq	r8, sl, lsl r0
    859c:	00005600 	andeq	r5, r0, r0, lsl #12
    85a0:	00000000 	andeq	r0, r0, r0
    85a4:	00030000 	andeq	r0, r3, r0
    85a8:	1aaa0000 	bne	fea885b0 <_estack+0xdea87378>
    85ac:	1aae0800 	bne	feb8a5b4 <_estack+0xdeb8937c>
    85b0:	00020800 	andeq	r0, r2, r0, lsl #16
    85b4:	1aae9f30 	bne	febb027c <_estack+0xdebaf044>
    85b8:	1ac40800 	bne	ff10a5c0 <_estack+0xdf109388>
    85bc:	00010800 	andeq	r0, r1, r0, lsl #16
    85c0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    85d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    85dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    85e0:	00000008 	andeq	r0, r0, r8
	...
    85f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8600:	01f30004 	mvnseq	r0, r4
    8604:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8614:	00020000 	andeq	r0, r2, r0
    8618:	0000007d 	andeq	r0, r0, sp, ror r0
    861c:	00000000 	andeq	r0, r0, r0
    8620:	00020000 	andeq	r0, r2, r0
    8624:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8638:	00010000 	andeq	r0, r1, r0
    863c:	00000050 	andeq	r0, r0, r0, asr r0
    8640:	00000000 	andeq	r0, r0, r0
    8644:	f3000400 	vshl.u8	d0, d0, d0
    8648:	009f5001 	addseq	r5, pc, r1
	...
    865c:	01000000 	mrseq	r0, (UNDEF: 0)
    8660:	00005100 	andeq	r5, r0, r0, lsl #2
    8664:	00000000 	andeq	r0, r0, r0
    8668:	00040000 	andeq	r0, r4, r0
    866c:	9f5101f3 	svcls	0x005101f3
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000006c 	andeq	r0, r0, ip, rrx
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	00000000 	andeq	r0, r0, r0
  1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  24:	0000004c 	andeq	r0, r0, ip, asr #32
}
  28:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
    if (status != HAL_OK)
  34:	00000018 	andeq	r0, r0, r8, lsl r0
      uwTickFreq = prevTickFreq;
  38:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
  44:	00000018 	andeq	r0, r0, r8, lsl r0
      if (pllsource != 0)
  48:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
  5c:	0000002c 	andeq	r0, r0, ip, lsr #32
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	00000000 	andeq	r0, r0, r0
  64:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
      SystemCoreClock = pllvco/pllp;
  70:	00000074 	andeq	r0, r0, r4, ror r0
      break;
  74:	11130002 	tstne	r3, r2
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00040000 	andeq	r0, r4, r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
  84:	00000014 	andeq	r0, r0, r4, lsl r0
  88:	00000000 	andeq	r0, r0, r0
  8c:	00000014 	andeq	r0, r0, r4, lsl r0
  90:	08000700 	stmdaeq	r0, {r8, r9, sl}
  94:	00000014 	andeq	r0, r0, r4, lsl r0
  98:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
  9c:	00000014 	andeq	r0, r0, r4, lsl r0
  a0:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
  a4:	00000014 	andeq	r0, r0, r4, lsl r0
  a8:	0800073c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	00000002 	andeq	r0, r0, r2
  b0:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000002 	andeq	r0, r0, r2
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
  bc:	00000002 	andeq	r0, r0, r2
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	08000742 	stmdaeq	r0, {r1, r6, r8, r9, sl}
  c4:	00000008 	andeq	r0, r0, r8
  c8:	0800074c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	00000010 	andeq	r0, r0, r0, lsl r0
  d0:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	00000018 	andeq	r0, r0, r8, lsl r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	08000774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl}
  dc:	00000018 	andeq	r0, r0, r8, lsl r0
	...
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	1ad60002 	bne	ff5800fc <_estack+0xdf57eec4>
  f0:	00040000 	andeq	r0, r4, r0
    huart->TxXferCount = 0x00U;
  f4:	00000000 	andeq	r0, r0, r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
    huart->gState  = HAL_UART_STATE_READY;
  fc:	0000004c 	andeq	r0, r0, ip, asr #32
	...
    HAL_UART_AbortCpltCallback(huart);
 108:	0000002c 	andeq	r0, r0, ip, lsr #32
 10c:	1dde0002 	ldclne	0, cr0, [lr, #8]
  uint32_t AbortCplt = 0x01U;
 110:	00040000 	andeq	r0, r4, r0
  if (AbortCplt == 0x01U)
 114:	00000000 	andeq	r0, r0, r0
}
 118:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
 11c:	00000034 	andeq	r0, r0, r4, lsr r0
 120:	0800080c 	stmdaeq	r0, {r2, r3, fp}
 124:	00000080 	andeq	r0, r0, r0, lsl #1
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000034 	andeq	r0, r0, r4, lsr r0
	...
 138:	0000001c 	andeq	r0, r0, ip, lsl r0
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	2b460002 	blcs	118014c <_Min_Heap_Size+0x117f94c>
 140:	00040000 	andeq	r0, r4, r0
 144:	00000000 	andeq	r0, r0, r0
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
 14c:	00000038 	andeq	r0, r0, r8, lsr r0
	...
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	00000204 	andeq	r0, r0, r4, lsl #4
 15c:	2e310002 	cdpcs	0, 3, cr0, cr1, cr2, {0}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	00040000 	andeq	r0, r4, r0
	...
 16c:	00000020 	andeq	r0, r0, r0, lsr #32
 170:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
}
 174:	0000005c 	andeq	r0, r0, ip, asr r0
 178:	08000920 	stmdaeq	r0, {r5, r8, fp}
 17c:	00000060 	andeq	r0, r0, r0, rrx
 180:	08000980 	stmdaeq	r0, {r7, r8, fp}
}
 184:	00000174 	andeq	r0, r0, r4, ror r1
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
 18c:	0000008a 	andeq	r0, r0, sl, lsl #1
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000000 	andeq	r0, r0, r0
 194:	00000002 	andeq	r0, r0, r2
 198:	08000b80 	stmdaeq	r0, {r7, r8, r9, fp}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	0000012c 	andeq	r0, r0, ip, lsr #2
 1a0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	000000e0 	andeq	r0, r0, r0, ror #1
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	000000fc 	strdeq	r0, [r0], -ip
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000124 	andeq	r0, r0, r4, lsr #2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000002 	andeq	r0, r0, r2
 1c0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000078 	andeq	r0, r0, r8, ror r0
 1c8:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	000000cc 	andeq	r0, r0, ip, asr #1
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	000000d2 	ldrdeq	r0, [r0], -r2
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	00000038 	andeq	r0, r0, r8, lsr r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	00000084 	andeq	r0, r0, r4, lsl #1
 1e8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000094 	muleq	r0, r4, r0
 1f0:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000096 	muleq	r0, r6, r0
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	00000084 	andeq	r0, r0, r4, lsl #1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000000 	andeq	r0, r0, r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000120 	andeq	r0, r0, r0, lsr #2
 208:	00000000 	andeq	r0, r0, r0
 20c:	00000004 	andeq	r0, r0, r4
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000000 	andeq	r0, r0, r0
 214:	000000f2 	strdeq	r0, [r0], -r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	00000000 	andeq	r0, r0, r0
 21c:	0000006c 	andeq	r0, r0, ip, rrx
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000000 	andeq	r0, r0, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	000000a6 	andeq	r0, r0, r6, lsr #1
 228:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	00000002 	andeq	r0, r0, r2
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000000 	andeq	r0, r0, r0
  tmp |= hdma->Init.FIFOMode;
 234:	0000004c 	andeq	r0, r0, ip, asr #32
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	08000d7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, fp}
    tmp |= hdma->Init.FIFOThreshold;
 23c:	0000001a 	andeq	r0, r0, sl, lsl r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000000 	andeq	r0, r0, r0
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000002 	andeq	r0, r0, r2
 248:	00000000 	andeq	r0, r0, r0
  hdma->Instance->FCR = tmp;
 24c:	0000000a 	andeq	r0, r0, sl
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000002 	andeq	r0, r0, r2
 258:	00000000 	andeq	r0, r0, r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000002 	andeq	r0, r0, r2
  hdma->State = HAL_DMA_STATE_READY;
 260:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
 264:	00000002 	andeq	r0, r0, r2
  return HAL_OK;
 268:	00000000 	andeq	r0, r0, r0
 26c:	00000058 	andeq	r0, r0, r8, asr r0
 270:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000010 	andeq	r0, r0, r0, lsl r0
 278:	00000000 	andeq	r0, r0, r0
 27c:	00000002 	andeq	r0, r0, r2
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000000 	andeq	r0, r0, r0
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000124 	andeq	r0, r0, r4, lsr #2
        return HAL_ERROR; 
 288:	00000000 	andeq	r0, r0, r0
    return HAL_ERROR;
 28c:	0000002c 	andeq	r0, r0, ip, lsr #32
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000000 	andeq	r0, r0, r0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	0000002c 	andeq	r0, r0, ip, lsr #32
 298:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 29c:	00000002 	andeq	r0, r0, r2
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	00000080 	andeq	r0, r0, r0, lsl #1
 2a8:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000014 	andeq	r0, r0, r4, lsl r0
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000002 	andeq	r0, r0, r2
          return HAL_TIMEOUT;
 2b8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	000000bc 	strheq	r0, [r0], -ip
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000016 	andeq	r0, r0, r6, lsl r0
    FlagStatus       pwrclkchanged = RESET;
 2c8:	08000da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp}
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000002 	andeq	r0, r0, r2
 2d0:	08000daa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, fp}
 2d4:	000000e6 	andeq	r0, r0, r6, ror #1
      tickstart = HAL_GetTick();
 2d8:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000288 	andeq	r0, r0, r8, lsl #5
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000001e 	andeq	r0, r0, lr, lsl r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	0000009a 	muleq	r0, sl, r0
          return HAL_TIMEOUT;
 2f0:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000084 	andeq	r0, r0, r4, lsl #1
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000088 	andeq	r0, r0, r8, lsl #1
 300:	00000000 	andeq	r0, r0, r0
 304:	00000088 	andeq	r0, r0, r8, lsl #1
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000036 	andeq	r0, r0, r6, lsr r0
 310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 314:	00000036 	andeq	r0, r0, r6, lsr r0
 318:	00000000 	andeq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	0000000c 	andeq	r0, r0, ip
 320:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000004 	andeq	r0, r0, r4
 328:	00000000 	andeq	r0, r0, r0
 32c:	00000036 	andeq	r0, r0, r6, lsr r0
 330:	00000000 	andeq	r0, r0, r0
          return HAL_TIMEOUT;
 334:	00000026 	andeq	r0, r0, r6, lsr #32
    if(pwrclkchanged == SET)
 338:	00000000 	andeq	r0, r0, r0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000066 	andeq	r0, r0, r6, rrx
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000000 	andeq	r0, r0, r0
 344:	000000a4 	andeq	r0, r0, r4, lsr #1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000026 	andeq	r0, r0, r6, lsr #32
 350:	00000000 	andeq	r0, r0, r0
 354:	00000066 	andeq	r0, r0, r6, rrx
	...
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 360:	00000084 	andeq	r0, r0, r4, lsl #1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	745f0002 	ldrbvc	r0, [pc], #-2	; 36c <_Min_Heap_Size-0x494>
 368:	00040000 	andeq	r0, r4, r0
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 374:	00000004 	andeq	r0, r0, r4
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000000 	andeq	r0, r0, r0
 37c:	000004fc 	strdeq	r0, [r0], -ip
 380:	00000000 	andeq	r0, r0, r0
 384:	00000118 	andeq	r0, r0, r8, lsl r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000000 	andeq	r0, r0, r0
 38c:	0000000c 	andeq	r0, r0, ip
        __HAL_RCC_PLL_DISABLE();
 390:	00000000 	andeq	r0, r0, r0
 394:	0000000c 	andeq	r0, r0, ip
        tickstart = HAL_GetTick();
 398:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	000000d4 	ldrdeq	r0, [r0], -r4
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	0000021c 	andeq	r0, r0, ip, lsl r2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
 3ac:	0000000c 	andeq	r0, r0, ip
            return HAL_TIMEOUT;
 3b0:	08001124 	stmdaeq	r0, {r2, r5, r8, ip}
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000020 	andeq	r0, r0, r0, lsr #32
 3b8:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
 3bc:	00000020 	andeq	r0, r0, r0, lsr #32
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	000000cc 	andeq	r0, r0, ip, asr #1
 3c8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	0000003c 	andeq	r0, r0, ip, lsr r0
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	00000002 	andeq	r0, r0, r2
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	00000020 	andeq	r0, r0, r0, lsr #32
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e8:	00000054 	andeq	r0, r0, r4, asr r0
 3ec:	82e20002 	rschi	r0, r2, #2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00040000 	andeq	r0, r4, r0
 3f4:	00000000 	andeq	r0, r0, r0
 3f8:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	000002e8 	andeq	r0, r0, r8, ror #5
 400:	00000000 	andeq	r0, r0, r0
 404:	00000184 	andeq	r0, r0, r4, lsl #3
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000000 	andeq	r0, r0, r0
 40c:	00000028 	andeq	r0, r0, r8, lsr #32
 410:	00000000 	andeq	r0, r0, r0
 414:	00000038 	andeq	r0, r0, r8, lsr r0
 418:	00000000 	andeq	r0, r0, r0
 41c:	0000002c 	andeq	r0, r0, ip, lsr #32
 420:	00000000 	andeq	r0, r0, r0
 424:	00000048 	andeq	r0, r0, r8, asr #32
        __HAL_RCC_PLL_ENABLE();
 428:	00000000 	andeq	r0, r0, r0
 42c:	00000002 	andeq	r0, r0, r2
        tickstart = HAL_GetTick();
 430:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	0000008c 	andeq	r0, r0, ip, lsl #1
 444:	8cc00002 	stclhi	0, cr0, [r0], {2}
            return HAL_TIMEOUT;
 448:	00040000 	andeq	r0, r4, r0
	...
        __HAL_RCC_PLL_DISABLE();
 454:	0000002c 	andeq	r0, r0, ip, lsr #32
        tickstart = HAL_GetTick();
 458:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000044 	andeq	r0, r0, r4, asr #32
 460:	00000000 	andeq	r0, r0, r0
 464:	0000008e 	andeq	r0, r0, lr, lsl #1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000000 	andeq	r0, r0, r0
 46c:	0000028e 	andeq	r0, r0, lr, lsl #5
            return HAL_TIMEOUT;
 470:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 474:	000000dc 	ldrdeq	r0, [r0], -ip
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	00000000 	andeq	r0, r0, r0
        pll_config = RCC->PLLCFGR;
 47c:	00000078 	andeq	r0, r0, r8, ror r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	00000000 	andeq	r0, r0, r0
 484:	00000098 	muleq	r0, r8, r0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	00000094 	muleq	r0, r4, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	00000026 	andeq	r0, r0, r6, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	00000000 	andeq	r0, r0, r0
 49c:	00000128 	andeq	r0, r0, r8, lsr #2
 4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	000001dc 	ldrdeq	r0, [r0], -ip
 4a8:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	0000005a 	andeq	r0, r0, sl, asr r0
 4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	0000006e 	andeq	r0, r0, lr, rrx
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000006 	andeq	r0, r0, r6
  return HAL_OK;
 4c0:	00000000 	andeq	r0, r0, r0
}
 4c4:	00000004 	andeq	r0, r0, r4
	...
 4d0:	000000ac 	andeq	r0, r0, ip, lsr #1
        return HAL_ERROR;
 4d4:	9a970002 	bls	fe5c04e4 <_estack+0xde5bf2ac>
          return HAL_ERROR;
 4d8:	00040000 	andeq	r0, r4, r0
 4dc:	00000000 	andeq	r0, r0, r0
 4e0:	08001508 	stmdaeq	r0, {r3, r8, sl, ip}
 4e4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4e8:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
 4ec:	0000008c 	andeq	r0, r0, ip, lsl #1
 4f0:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
 4f4:	00000030 	andeq	r0, r0, r0, lsr r0
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	00000038 	andeq	r0, r0, r8, lsr r0
 500:	00000000 	andeq	r0, r0, r0
 504:	00000024 	andeq	r0, r0, r4, lsr #32
 508:	08001600 	stmdaeq	r0, {r9, sl, ip}
 50c:	00000028 	andeq	r0, r0, r8, lsr #32
 510:	00000000 	andeq	r0, r0, r0
 514:	0000001c 	andeq	r0, r0, ip, lsl r0
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000020 	andeq	r0, r0, r0, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000128 	andeq	r0, r0, r8, lsr #2
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000006 	andeq	r0, r0, r6
 530:	00000000 	andeq	r0, r0, r0
 534:	00000010 	andeq	r0, r0, r0, lsl r0
 538:	00000000 	andeq	r0, r0, r0
 53c:	0000007c 	andeq	r0, r0, ip, ror r0
 540:	00000000 	andeq	r0, r0, r0
 544:	00000034 	andeq	r0, r0, r4, lsr r0
 548:	00000000 	andeq	r0, r0, r0
 54c:	0000003c 	andeq	r0, r0, ip, lsr r0
 550:	00000000 	andeq	r0, r0, r0
 554:	00000034 	andeq	r0, r0, r4, lsr r0
 558:	00000000 	andeq	r0, r0, r0
 55c:	0000003c 	andeq	r0, r0, ip, lsr r0
 560:	00000000 	andeq	r0, r0, r0
 564:	0000003c 	andeq	r0, r0, ip, lsr r0
 568:	00000000 	andeq	r0, r0, r0
 56c:	00000002 	andeq	r0, r0, r2
 570:	00000000 	andeq	r0, r0, r0
 574:	00000008 	andeq	r0, r0, r8
	...
 580:	000000ec 	andeq	r0, r0, ip, ror #1
 584:	aebf0002 	cdpge	0, 11, cr0, cr15, cr2, {0}
 588:	00040000 	andeq	r0, r4, r0
	...
 594:	00000002 	andeq	r0, r0, r2
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000002 	andeq	r0, r0, r2
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	0000003c 	andeq	r0, r0, ip, lsr r0
 5a8:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
 5ac:	0000004c 	andeq	r0, r0, ip, asr #32
 5b0:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
 5b4:	00000034 	andeq	r0, r0, r4, lsr r0
 5b8:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 5bc:	00000018 	andeq	r0, r0, r8, lsl r0
 5c0:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
 5c4:	0000000c 	andeq	r0, r0, ip
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	0000000c 	andeq	r0, r0, ip
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000048 	andeq	r0, r0, r8, asr #32
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000000c 	andeq	r0, r0, ip
 5e0:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
 5e4:	00000028 	andeq	r0, r0, r8, lsr #32
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	0000000e 	andeq	r0, r0, lr
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000000e 	andeq	r0, r0, lr
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000008 	andeq	r0, r0, r8
 600:	00000000 	andeq	r0, r0, r0
 604:	0000000c 	andeq	r0, r0, ip
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000010 	andeq	r0, r0, r0, lsl r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000010 	andeq	r0, r0, r0, lsl r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000010 	andeq	r0, r0, r0, lsl r0
 620:	00000000 	andeq	r0, r0, r0
 624:	00000010 	andeq	r0, r0, r0, lsl r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	00000010 	andeq	r0, r0, r0, lsl r0
 630:	00000000 	andeq	r0, r0, r0
 634:	00000010 	andeq	r0, r0, r0, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000010 	andeq	r0, r0, r0, lsl r0
 640:	00000000 	andeq	r0, r0, r0
 644:	00000010 	andeq	r0, r0, r0, lsl r0
 648:	00000000 	andeq	r0, r0, r0
 64c:	00000010 	andeq	r0, r0, r0, lsl r0
 650:	00000000 	andeq	r0, r0, r0
 654:	0000000c 	andeq	r0, r0, ip
 658:	00000000 	andeq	r0, r0, r0
 65c:	0000000c 	andeq	r0, r0, ip
 660:	00000000 	andeq	r0, r0, r0
 664:	0000000c 	andeq	r0, r0, ip
	...
 670:	00000024 	andeq	r0, r0, r4, lsr #32
 674:	b9c10002 	stmiblt	r1, {r1}^
 678:	00040000 	andeq	r0, r4, r0
 67c:	00000000 	andeq	r0, r0, r0
 680:	080016f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, ip}
 684:	00000014 	andeq	r0, r0, r4, lsl r0
 688:	00000000 	andeq	r0, r0, r0
 68c:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 698:	00000054 	andeq	r0, r0, r4, asr r0
 69c:	bf740002 	svclt	0x00740002
 6a0:	00040000 	andeq	r0, r4, r0
 6a4:	00000000 	andeq	r0, r0, r0
 6a8:	08001708 	stmdaeq	r0, {r3, r8, r9, sl, ip}
 6ac:	0000002c 	andeq	r0, r0, ip, lsr #32
 6b0:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
 6b4:	00000036 	andeq	r0, r0, r6, lsr r0
 6b8:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
 6bc:	00000018 	andeq	r0, r0, r8, lsl r0
 6c0:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
 6c4:	00000050 	andeq	r0, r0, r0, asr r0
 6c8:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
 6cc:	0000007c 	andeq	r0, r0, ip, ror r0
 6d0:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
 6d4:	00000184 	andeq	r0, r0, r4, lsl #3
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	00000006 	andeq	r0, r0, r6
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000008 	andeq	r0, r0, r8
	...
 6f0:	0000001c 	andeq	r0, r0, ip, lsl r0
 6f4:	c8260002 	stmdagt	r6!, {r1}
 6f8:	00040000 	andeq	r0, r4, r0
 6fc:	00000000 	andeq	r0, r0, r0
 700:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
 704:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 710:	0000001c 	andeq	r0, r0, ip, lsl r0
 714:	c9e80002 	stmibgt	r8!, {r1}^
 718:	00040000 	andeq	r0, r4, r0
 71c:	00000000 	andeq	r0, r0, r0
 720:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
 724:	00000048 	andeq	r0, r0, r8, asr #32
	...
 730:	000000a4 	andeq	r0, r0, r4, lsr #1
 734:	cb6d0002 	blgt	1b40744 <_Min_Heap_Size+0x1b3ff44>
 738:	00040000 	andeq	r0, r4, r0
	...
 744:	00000002 	andeq	r0, r0, r2
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000004 	andeq	r0, r0, r4
 750:	00000000 	andeq	r0, r0, r0
 754:	00000010 	andeq	r0, r0, r0, lsl r0
 758:	00000000 	andeq	r0, r0, r0
 75c:	0000000c 	andeq	r0, r0, ip
 760:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
 764:	00000020 	andeq	r0, r0, r0, lsr #32
 768:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
 76c:	0000001c 	andeq	r0, r0, ip, lsl r0
 770:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
 774:	00000006 	andeq	r0, r0, r6
 778:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
 77c:	0000000a 	andeq	r0, r0, sl
 780:	08001af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, ip}
 784:	00000004 	andeq	r0, r0, r4
 788:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
 78c:	00000004 	andeq	r0, r0, r4
 790:	00000000 	andeq	r0, r0, r0
 794:	0000000a 	andeq	r0, r0, sl
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000010 	andeq	r0, r0, r0, lsl r0
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000010 	andeq	r0, r0, r0, lsl r0
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00000006 	andeq	r0, r0, r6
 7b0:	00000000 	andeq	r0, r0, r0
 7b4:	0000000a 	andeq	r0, r0, sl
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	00000010 	andeq	r0, r0, r0, lsl r0
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000010 	andeq	r0, r0, r0, lsl r0
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 7d8:	00000024 	andeq	r0, r0, r4, lsr #32
 7dc:	d3a20002 			; <UNDEFINED> instruction: 0xd3a20002
 7e0:	00040000 	andeq	r0, r4, r0
 7e4:	00000000 	andeq	r0, r0, r0
 7e8:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
 7ec:	00000050 	andeq	r0, r0, r0, asr r0
 7f0:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 7f4:	00000002 	andeq	r0, r0, r2
	...
 800:	0000001c 	andeq	r0, r0, ip, lsl r0
 804:	d3c40002 	bicle	r0, r4, #2
 808:	00040000 	andeq	r0, r4, r0
 80c:	00000000 	andeq	r0, r0, r0
 810:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
 814:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
   4:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  errno = ENOMEM;
   8:	00000001 	andeq	r0, r0, r1
}
   c:	00000001 	andeq	r0, r0, r1
  10:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
  1c:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  24:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
}
  28:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  2c:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
  30:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
    if (status != HAL_OK)
  34:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
      uwTickFreq = prevTickFreq;
  38:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  3c:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  40:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  44:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
      if (pllsource != 0)
  48:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
  4c:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	00000001 	andeq	r0, r0, r1
  54:	00000001 	andeq	r0, r0, r1
	...
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
  64:	08000700 	stmdaeq	r0, {r8, r9, sl}
  68:	00000001 	andeq	r0, r0, r1
      SystemCoreClock = pllvco/pllp;
  6c:	00000001 	andeq	r0, r0, r1
  70:	08000700 	stmdaeq	r0, {r8, r9, sl}
      break;
  74:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
  7c:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
  80:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
  84:	0800073c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl}
  88:	0800073c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl}
  8c:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
  90:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
  94:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
  98:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
  9c:	08000742 	stmdaeq	r0, {r1, r6, r8, r9, sl}
  a0:	08000742 	stmdaeq	r0, {r1, r6, r8, r9, sl}
  a4:	0800074a 	stmdaeq	r0, {r1, r3, r6, r8, r9, sl}
  a8:	0800074c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
  b0:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	08000774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl}
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl}
  bc:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
	...
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c8:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
	...
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
  dc:	0800080c 	stmdaeq	r0, {r2, r3, fp}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  e0:	0800080c 	stmdaeq	r0, {r2, r3, fp}
    if (huart->hdmarx != NULL)
  e4:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	00000001 	andeq	r0, r0, r1
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	00000001 	andeq	r0, r0, r1
	...
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
    huart->gState  = HAL_UART_STATE_READY;
  fc:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
	...
    HAL_UART_AbortCpltCallback(huart);
 108:	00000001 	andeq	r0, r0, r1
 10c:	00000001 	andeq	r0, r0, r1
  uint32_t AbortCplt = 0x01U;
 110:	00000001 	andeq	r0, r0, r1
  if (AbortCplt == 0x01U)
 114:	00000001 	andeq	r0, r0, r1
	...
}
 120:	00000001 	andeq	r0, r0, r1
 124:	00000001 	andeq	r0, r0, r1
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
 12c:	08000920 	stmdaeq	r0, {r5, r8, fp}
 130:	08000920 	stmdaeq	r0, {r5, r8, fp}
 134:	08000980 	stmdaeq	r0, {r7, r8, fp}
 138:	08000980 	stmdaeq	r0, {r7, r8, fp}
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
 140:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
 144:	08000b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp}
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	00000001 	andeq	r0, r0, r1
 14c:	00000001 	andeq	r0, r0, r1
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	08000b80 	stmdaeq	r0, {r7, r8, r9, fp}
 154:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	00000001 	andeq	r0, r0, r1
 15c:	00000001 	andeq	r0, r0, r1
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	00000001 	andeq	r0, r0, r1
 16c:	00000001 	andeq	r0, r0, r1
 170:	00000001 	andeq	r0, r0, r1
}
 174:	00000001 	andeq	r0, r0, r1
 178:	00000001 	andeq	r0, r0, r1
 17c:	00000001 	andeq	r0, r0, r1
 180:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
}
 184:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	00000001 	andeq	r0, r0, r1
 18c:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
 198:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
 1e4:	08000d7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, fp}
 1e8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	08000d7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, fp}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
 1f8:	00000001 	andeq	r0, r0, r1
 1fc:	00000001 	andeq	r0, r0, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000001 	andeq	r0, r0, r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000001 	andeq	r0, r0, r1
 208:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
 20c:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
 21c:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	00000001 	andeq	r0, r0, r1
 228:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	08000da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000001 	andeq	r0, r0, r1
  tmp |= hdma->Init.FIFOMode;
 234:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	00000001 	andeq	r0, r0, r1
    tmp |= hdma->Init.FIFOThreshold;
 23c:	00000001 	andeq	r0, r0, r1
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000001 	andeq	r0, r0, r1
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
  hdma->Instance->FCR = tmp;
 24c:	00000001 	andeq	r0, r0, r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	00000001 	andeq	r0, r0, r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000001 	andeq	r0, r0, r1
 258:	00000001 	andeq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000001 	andeq	r0, r0, r1
  hdma->State = HAL_DMA_STATE_READY;
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000001 	andeq	r0, r0, r1
 278:	00000001 	andeq	r0, r0, r1
 27c:	00000001 	andeq	r0, r0, r1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	08000da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp}
        hdma->State = HAL_DMA_STATE_READY;
 284:	08000daa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, fp}
        return HAL_ERROR; 
 288:	08000daa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, fp}
    return HAL_ERROR;
 28c:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
 298:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 29c:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000001 	andeq	r0, r0, r1
 2a4:	00000001 	andeq	r0, r0, r1
 2a8:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2b8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000001 	andeq	r0, r0, r1
 2c0:	00000001 	andeq	r0, r0, r1
 2c4:	00000001 	andeq	r0, r0, r1
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000001 	andeq	r0, r0, r1
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 2d8:	00000001 	andeq	r0, r0, r1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	00000001 	andeq	r0, r0, r1
 2e4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2f0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000001 	andeq	r0, r0, r1
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
	...
      tickstart = HAL_GetTick();
 318:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000001 	andeq	r0, r0, r1
 320:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000001 	andeq	r0, r0, r1
	...
 330:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 334:	00000001 	andeq	r0, r0, r1
    if(pwrclkchanged == SET)
 338:	00000001 	andeq	r0, r0, r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000001 	andeq	r0, r0, r1
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000001 	andeq	r0, r0, r1
 368:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	08001124 	stmdaeq	r0, {r2, r5, r8, ip}
 370:	08001124 	stmdaeq	r0, {r2, r5, r8, ip}
 374:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
 37c:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 398:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	00000001 	andeq	r0, r0, r1
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
 3ac:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
            return HAL_TIMEOUT;
 3b0:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000001 	andeq	r0, r0, r1
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000001 	andeq	r0, r0, r1
 3d0:	00000001 	andeq	r0, r0, r1
 3d4:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000001 	andeq	r0, r0, r1
	...
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_ENABLE();
 428:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
 42c:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
        tickstart = HAL_GetTick();
 430:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	08001506 	stmdaeq	r0, {r1, r2, r8, sl, ip}
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 448:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 44c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 458:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
	...
            return HAL_TIMEOUT;
 470:	0800155c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, ip}
  return HAL_OK;
 474:	08001586 	stmdaeq	r0, {r1, r2, r7, r8, sl, ip}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
        pll_config = RCC->PLLCFGR;
 47c:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
	...
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	08001586 	stmdaeq	r0, {r1, r2, r7, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	0800159a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 4a0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000001 	andeq	r0, r0, r1
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 4c0:	00000001 	andeq	r0, r0, r1
}
 4c4:	00000001 	andeq	r0, r0, r1
	...
 4d0:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4d4:	00000001 	andeq	r0, r0, r1
          return HAL_ERROR;
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
	...
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
	...
 500:	08001508 	stmdaeq	r0, {r3, r8, sl, ip}
 504:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
 508:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
 50c:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
 510:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
 514:	08001600 	stmdaeq	r0, {r9, sl, ip}
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
 520:	00000001 	andeq	r0, r0, r1
 524:	00000001 	andeq	r0, r0, r1
 528:	08001600 	stmdaeq	r0, {r9, sl, ip}
 52c:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
 570:	00000001 	andeq	r0, r0, r1
 574:	00000001 	andeq	r0, r0, r1
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
 588:	00000001 	andeq	r0, r0, r1
 58c:	00000001 	andeq	r0, r0, r1
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
	...
 5a0:	00000001 	andeq	r0, r0, r1
 5a4:	00000001 	andeq	r0, r0, r1
 5a8:	00000001 	andeq	r0, r0, r1
 5ac:	00000001 	andeq	r0, r0, r1
 5b0:	00000001 	andeq	r0, r0, r1
 5b4:	00000001 	andeq	r0, r0, r1
 5b8:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
 5bc:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
 5c0:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
 5c4:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 5c8:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 5cc:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
 5d0:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
 5d4:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	00000001 	andeq	r0, r0, r1
 5e4:	00000001 	andeq	r0, r0, r1
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
 5f4:	080016f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, ip}
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
 658:	00000001 	andeq	r0, r0, r1
 65c:	00000001 	andeq	r0, r0, r1
 660:	00000001 	andeq	r0, r0, r1
 664:	00000001 	andeq	r0, r0, r1
 668:	00000001 	andeq	r0, r0, r1
 66c:	00000001 	andeq	r0, r0, r1
 670:	00000001 	andeq	r0, r0, r1
 674:	00000001 	andeq	r0, r0, r1
	...
 680:	080016f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, ip}
 684:	08001708 	stmdaeq	r0, {r3, r8, r9, sl, ip}
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
	...
 698:	08001708 	stmdaeq	r0, {r3, r8, r9, sl, ip}
 69c:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
 6a0:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
 6a4:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
 6a8:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
 6ac:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
 6b0:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
 6b4:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
 6b8:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
 6bc:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
 6c0:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
 6c4:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	00000001 	andeq	r0, r0, r1
	...
 6e0:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
 6e4:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
	...
 6f0:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
 6f4:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
	...
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
 708:	00000001 	andeq	r0, r0, r1
 70c:	00000001 	andeq	r0, r0, r1
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
 720:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
 724:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
 728:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
 72c:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
 730:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
 734:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
 738:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
 73c:	08001af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, ip}
 740:	08001af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, ip}
 744:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
 748:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
 74c:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
 750:	00000001 	andeq	r0, r0, r1
 754:	00000001 	andeq	r0, r0, r1
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	00000001 	andeq	r0, r0, r1
 764:	00000001 	andeq	r0, r0, r1
 768:	00000001 	andeq	r0, r0, r1
 76c:	00000001 	andeq	r0, r0, r1
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
 778:	00000001 	andeq	r0, r0, r1
 77c:	00000001 	andeq	r0, r0, r1
 780:	00000001 	andeq	r0, r0, r1
 784:	00000001 	andeq	r0, r0, r1
 788:	00000001 	andeq	r0, r0, r1
 78c:	00000001 	andeq	r0, r0, r1
	...
 798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 79c:	00000000 	andeq	r0, r0, r0
 7a0:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
 7a4:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 7a8:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 7ac:	08001b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp, ip}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000050a 	andeq	r0, r0, sl, lsl #10
       4:	02e40003 	rsceq	r0, r4, #3
  errno = ENOMEM;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
}
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    if (status != HAL_OK)
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      uwTickFreq = prevTickFreq;
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      if (pllsource != 0)
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      SystemCoreClock = pllvco/pllp;
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      break;
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    if (huart->hdmarx != NULL)
      e4:	2f737265 	svccs	0x00737265
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
      f0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    huart->TxXferCount = 0x00U;
      f4:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    huart->gState  = HAL_UART_STATE_READY;
      fc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    huart->RxState = HAL_UART_STATE_READY;
     100:	534d432f 	movtpl	r4, #54063	; 0xd32f
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	442f5349 	strtmi	r5, [pc], #-841	; 10c <_Min_Heap_Size-0x6f4>
    HAL_UART_AbortCpltCallback(huart);
     108:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     10c:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
  uint32_t AbortCplt = 0x01U;
     110:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
  if (AbortCplt == 0x01U)
     114:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
}
     118:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     11c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     120:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     124:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     12c:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     130:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     134:	5f787834 	svcpl	0x00787834
     138:	5f4c4148 	svcpl	0x004c4148
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     140:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     144:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	6f432f2e 	svcvs	0x00432f2e
     14c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     154:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	2f2e2e2f 	svccs	0x002e2e2f
     15c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
     164:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
     168:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     16c:	2f706d75 	svccs	0x00706d75
     170:	00636e69 	rsbeq	r6, r3, r9, ror #28
}
     174:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     178:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     17c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     180:	705c6e6f 	subsvc	r6, ip, pc, ror #28
}
     184:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	615c6d61 	cmpvs	ip, r1, ror #26
     18c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     194:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     198:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     1a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	2e30312d 	rsfcssp	f3, f0, #5.0
     1a8:	30322d33 	eorscc	r2, r2, r3, lsr sp
     1ac:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     1b4:	6f6e2d6d 	svcvs	0x006e2d6d
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     1bc:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     1c0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	00656475 	rsbeq	r6, r5, r5, ror r4
     1c8:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00632e6e 	rsbeq	r2, r3, lr, ror #28
     1d0:	5f000001 	svcpl	0x00000001
     1d4:	61666564 	cmnvs	r6, r4, ror #10
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	5f746c75 	svcpl	0x00746c75
     1dc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00682e73 	rsbeq	r2, r8, r3, ror lr
     1e4:	5f000002 	svcpl	0x00000002
     1e8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     1f0:	00000300 	andeq	r0, r0, r0, lsl #6
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     1f8:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
     1fc:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	74730000 	ldrbtvc	r0, [r3], #-0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     208:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
     20c:	00682e78 	rsbeq	r2, r8, r8, ror lr
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	73000005 	movwvc	r0, #5
     214:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     21c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	0600682e 	streq	r6, [r0], -lr, lsr #16
     228:	74730000 	ldrbtvc	r0, [r3], #-0
  tmp = hdma->Instance->FCR;
     22c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	5f787834 	svcpl	0x00787834
  tmp |= hdma->Init.FIFOMode;
     234:	5f6c6168 	svcpl	0x006c6168
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	5f636372 	svcpl	0x00636372
    tmp |= hdma->Init.FIFOThreshold;
     23c:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00000600 	andeq	r0, r0, r0, lsl #12
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     248:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
  hdma->Instance->FCR = tmp;
     24c:	61685f78 	smcvs	34296	; 0x85f8
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00682e63 	rsbeq	r2, r8, r3, ror #28
     258:	73000006 	movwvc	r0, #6
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  hdma->State = HAL_DMA_STATE_READY;
     260:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     264:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
  return HAL_OK;
     268:	616d645f 	cmnvs	sp, pc, asr r4
     26c:	0600682e 	streq	r6, [r0], -lr, lsr #16
     270:	74730000 	ldrbtvc	r0, [r3], #-0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     278:	5f787834 	svcpl	0x00787834
     27c:	5f6c6168 	svcpl	0x006c6168
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
        hdma->State = HAL_DMA_STATE_READY;
     284:	0600682e 	streq	r6, [r0], -lr, lsr #16
        return HAL_ERROR; 
     288:	73750000 	cmnvc	r5, #0
    return HAL_ERROR;
     28c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00070068 	andeq	r0, r7, r8, rrx
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     298:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
      tickstart = HAL_GetTick();
     29c:	695f7878 	ldmdbvs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00682e74 	rsbeq	r2, r8, r4, ror lr
     2a4:	73000007 	movwvc	r0, #7
     2a8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     2b0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     2b4:	0600682e 	streq	r6, [r0], -lr, lsr #16
          return HAL_TIMEOUT;
     2b8:	70670000 	rsbvc	r0, r7, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     2c0:	00000700 	andeq	r0, r0, r0, lsl #14
     2c4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    FlagStatus       pwrclkchanged = RESET;
     2c8:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	682e706d 	stmdavs	lr!, {r0, r2, r3, r5, r6, ip, sp, lr}
     2d0:	00000800 	andeq	r0, r0, r0, lsl #16
     2d4:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
      tickstart = HAL_GetTick();
     2d8:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00003e6e 	andeq	r3, r0, lr, ror #28
     2e0:	74730000 	ldrbtvc	r0, [r3], #-0
     2e4:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00090068 	andeq	r0, r9, r8, rrx
     2ec:	1a050000 	bne	1402f4 <_Min_Heap_Size+0x13faf4>
          return HAL_TIMEOUT;
     2f0:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	03080005 	movweq	r0, #32773	; 0x8005
     2f8:	01060118 	tsteq	r6, r8, lsl r1
     2fc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     300:	2f065806 	svccs	0x00065806
     304:	13060105 	movwne	r0, #24837	; 0x6105
     308:	01000602 	tsteq	r0, r2, lsl #12
     30c:	00230501 	eoreq	r0, r3, r1, lsl #10
     310:	00000205 	andeq	r0, r0, r5, lsl #4
      tickstart = HAL_GetTick();
     314:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     318:	21050501 	tstcs	r5, r1, lsl #10
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
     320:	06050501 	streq	r0, [r5], -r1, lsl #10
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	01051359 	tsteq	r5, r9, asr r3
     328:	06024b06 	streq	r4, [r2], -r6, lsl #22
     32c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     330:	02050022 	andeq	r0, r5, #34	; 0x22
          return HAL_TIMEOUT;
     334:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    if(pwrclkchanged == SET)
     338:	05013603 	streq	r3, [r1, #-1539]	; 0xfffff9fd
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	05132f05 	ldreq	r2, [r3, #-3845]	; 0xfffff0fb
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     344:	052f0605 	streq	r0, [pc, #-1541]!	; fffffd47 <_estack+0xdfffeb0f>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     34c:	135a0605 	cmpne	sl, #5242880	; 0x500000
     350:	01060d05 	tsteq	r6, r5, lsl #26
     354:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	67210605 	strvs	r0, [r1, -r5, lsl #12]!
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     360:	200b0501 	andcs	r0, fp, r1, lsl #10
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	21060505 	tstcs	r6, r5, lsl #10
     368:	0d051359 	stceq	3, cr1, [r5, #-356]	; 0xfffffe9c
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	0b050106 	bleq	14078c <_Min_Heap_Size+0x13ff8c>
     370:	0605052e 	streq	r0, [r5], -lr, lsr #10
     374:	06010521 	streq	r0, [r1], -r1, lsr #10
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00060259 	andeq	r0, r6, r9, asr r2
     37c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     380:	30020500 	andcc	r0, r2, r0, lsl #10
     384:	03080006 	movweq	r0, #32774	; 0x8006
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	050100c6 	streq	r0, [r1, #-198]	; 0xffffff3a
     38c:	054e2105 	strbeq	r2, [lr, #-261]	; 0xfffffefb
        __HAL_RCC_PLL_DISABLE();
     390:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     394:	01010005 	tsteq	r1, r5
        tickstart = HAL_GetTick();
     398:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00064802 	andeq	r4, r6, r2, lsl #16
     3a0:	00ce0308 	sbceq	r0, lr, r8, lsl #6
     3a4:	21050501 	tstcs	r5, r1, lsl #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	0601054b 	streq	r0, [r1], -fp, asr #10
     3ac:	0005022f 	andeq	r0, r5, pc, lsr #4
            return HAL_TIMEOUT;
     3b0:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	60020500 	andvs	r0, r2, r0, lsl #10
     3b8:	03080006 	movweq	r0, #32774	; 0x8006
     3bc:	050100d3 	streq	r0, [r1, #-211]	; 0xffffff2d
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3c4:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3c8:	01010005 	tsteq	r1, r5
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     3d0:	00067802 	andeq	r7, r6, r2, lsl #16
     3d4:	00d80308 	sbcseq	r0, r8, r8, lsl #6
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	21050501 	tstcs	r5, r1, lsl #10
     3dc:	0601054b 	streq	r0, [r1], -fp, asr #10
     3e0:	0005022f 	andeq	r0, r5, pc, lsr #4
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     3e8:	90020500 	andls	r0, r2, r0, lsl #10
     3ec:	03080006 	movweq	r0, #32774	; 0x8006
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	050100dd 	streq	r0, [r1, #-221]	; 0xffffff23
     3f4:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3f8:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01010005 	tsteq	r1, r5
     400:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     404:	0006a802 	andeq	sl, r6, r2, lsl #16
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00e20308 	rsceq	r0, r2, r8, lsl #6
     40c:	21050501 	tstcs	r5, r1, lsl #10
     410:	0601054b 	streq	r0, [r1], -fp, asr #10
     414:	0005022f 	andeq	r0, r5, pc, lsr #4
     418:	10050101 	andne	r0, r5, r1, lsl #2
     41c:	c0020500 	andgt	r0, r2, r0, lsl #10
     420:	03080006 	movweq	r0, #32774	; 0x8006
     424:	050100e7 	streq	r0, [r1, #-231]	; 0xffffff19
        __HAL_RCC_PLL_ENABLE();
     428:	2f302105 	svccs	0x00302105
     42c:	02002f30 	andeq	r2, r0, #48, 30	; 0xc0
        tickstart = HAL_GetTick();
     430:	05300104 	ldreq	r0, [r0, #-260]!	; 0xfffffefc
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	04020009 	streq	r0, [r2], #-9
     438:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
     43c:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0402000b 	streq	r0, [r2], #-11
     444:	04024801 	streq	r4, [r2], #-2049	; 0xfffff7ff
            return HAL_TIMEOUT;
     448:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  return HAL_OK;
     44c:	0205001f 	andeq	r0, r5, #31
        __HAL_RCC_PLL_DISABLE();
     450:	00000000 	andeq	r0, r0, r0
     454:	0100f703 	tsteq	r0, r3, lsl #14	; <UNPREDICTABLE>
        tickstart = HAL_GetTick();
     458:	052f0505 	streq	r0, [pc, #-1285]!	; ffffff5b <_estack+0xdfffed23>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     460:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
     464:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	016a0605 	cmneq	sl, r5, lsl #12
     46c:	204a5820 	subcs	r5, sl, r0, lsr #16
            return HAL_TIMEOUT;
     470:	58200113 	stmdapl	r0!, {r0, r1, r4, r8}
  return HAL_OK;
     474:	0517204a 	ldreq	r2, [r7, #-74]	; 0xffffffb6
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
        pll_config = RCC->PLLCFGR;
     47c:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe7f <_estack+0xdfffec47>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
     484:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe87 <_estack+0xdfffec4f>
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe8f <_estack+0xdfffec57>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     49c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     4a0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	052f0605 	streq	r0, [pc, #-1541]!	; fffffea7 <_estack+0xdfffec6f>
     4a8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	052f0605 	streq	r0, [pc, #-1541]!	; fffffeaf <_estack+0xdfffec77>
     4b0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
     4bc:	052f0605 	streq	r0, [pc, #-1541]!	; fffffebf <_estack+0xdfffec87>
  return HAL_OK;
     4c0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
}
     4c4:	05053c08 	streq	r3, [r5, #-3080]	; 0xfffff3f8
        return HAL_ERROR;
     4c8:	21052606 	tstcs	r5, r6, lsl #12
        return HAL_ERROR;
     4cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
}
     4d0:	24053006 	strcs	r3, [r5], #-6
        return HAL_ERROR;
     4d4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
          return HAL_ERROR;
     4d8:	25052f06 	strcs	r2, [r5, #-3846]	; 0xfffff0fa
     4dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     4e0:	26052f06 	strcs	r2, [r5], -r6, lsl #30
     4e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     4e8:	26053d06 	strcs	r3, [r5], -r6, lsl #26
     4ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     4f0:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
     4f4:	08050106 	stmdaeq	r5, {r1, r2, r8}
     4f8:	2301054a 	movwcs	r0, #5450	; 0x154a
     4fc:	03060905 	movweq	r0, #26885	; 0x6905
     500:	0d033c71 	stceq	12, cr3, [r3, #-452]	; 0xfffffe3c
     504:	0601053c 			; <UNDEFINED> instruction: 0x0601053c
     508:	00050230 	andeq	r0, r5, r0, lsr r2
     50c:	03f20101 	mvnseq	r0, #1073741824	; 0x40000000
     510:	00030000 	andeq	r0, r3, r0
     514:	0000024a 	andeq	r0, r0, sl, asr #4
     518:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     51c:	0101000d 	tsteq	r1, sp
     520:	00000101 	andeq	r0, r0, r1, lsl #2
     524:	00000100 	andeq	r0, r0, r0, lsl #2
     528:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
     52c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     530:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     534:	2e006e6f 	cdpcs	14, 0, cr6, cr0, cr15, {3}
     538:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     53c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     540:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     544:	2f534953 	svccs	0x00534953
     548:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     54c:	00656475 	rsbeq	r6, r5, r5, ror r4
     550:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     554:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     558:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     55c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     560:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     564:	615c6d61 	cmpvs	ip, r1, ror #26
     568:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     56c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     570:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     574:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     578:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     57c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     580:	2e30312d 	rsfcssp	f3, f0, #5.0
     584:	30322d33 	eorscc	r2, r2, r3, lsr sp
     588:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     58c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     590:	6f6e2d6d 	svcvs	0x006e2d6d
     594:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     598:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     59c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     5a0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     5a4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     5a8:	00656e69 	rsbeq	r6, r5, r9, ror #28
     5ac:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     5b0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     5b4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     5b8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     5bc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     5c0:	615c6d61 	cmpvs	ip, r1, ror #26
     5c4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     5c8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     5cc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     5d0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     5d4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     5d8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     5dc:	2e30312d 	rsfcssp	f3, f0, #5.0
     5e0:	30322d33 	eorscc	r2, r2, r3, lsr sp
     5e4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     5e8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     5ec:	6f6e2d6d 	svcvs	0x006e2d6d
     5f0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     5f4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     5f8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     5fc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     600:	00737973 	rsbseq	r7, r3, r3, ror r9
     604:	442f2e2e 	strtmi	r2, [pc], #-3630	; 60c <_Min_Heap_Size-0x1f4>
     608:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     60c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     610:	5349534d 	movtpl	r5, #37709	; 0x934d
     614:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     618:	2f656369 	svccs	0x00656369
     61c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
     620:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     624:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     628:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     62c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     630:	2f2e2e00 	svccs	0x002e2e00
     634:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     638:	2f737265 	svccs	0x00737265
     63c:	334d5453 	movtcc	r5, #54355	; 0xd453
     640:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     644:	41485f78 	hvcmi	34296	; 0x85f8
     648:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
     64c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     650:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     654:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     658:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     65c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     660:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     664:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     668:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     66c:	5f6d7261 	svcpl	0x006d7261
     670:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     674:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     678:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     67c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     680:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     684:	30312d69 	eorscc	r2, r1, r9, ror #26
     688:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     68c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     690:	615c3031 	cmpvs	ip, r1, lsr r0
     694:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     698:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     69c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6a0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     6a4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     6a8:	74730000 	ldrbtvc	r0, [r3], #-0
     6ac:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     6b0:	5f787834 	svcpl	0x00787834
     6b4:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
     6b8:	00000100 	andeq	r0, r0, r0, lsl #2
     6bc:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
     6c0:	63675f73 	cmnvs	r7, #460	; 0x1cc
     6c4:	00682e63 	rsbeq	r2, r8, r3, ror #28
     6c8:	5f000002 	svcpl	0x00000002
     6cc:	61666564 	cmnvs	r6, r4, ror #10
     6d0:	5f746c75 	svcpl	0x00746c75
     6d4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     6d8:	00682e73 	rsbeq	r2, r8, r3, ror lr
     6dc:	5f000003 	svcpl	0x00000003
     6e0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     6e4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     6e8:	00000400 	andeq	r0, r0, r0, lsl #8
     6ec:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     6f0:	30346632 	eorscc	r6, r4, r2, lsr r6
     6f4:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     6f8:	00050068 	andeq	r0, r5, r8, rrx
     6fc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     700:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     704:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     708:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 710 <_Min_Heap_Size-0xf0>
     70c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     710:	00000600 	andeq	r0, r0, r0, lsl #12
     714:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     718:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     71c:	61685f78 	smcvs	34296	; 0x85f8
     720:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
     724:	00682e61 	rsbeq	r2, r8, r1, ror #28
     728:	73000006 	movwvc	r0, #6
     72c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     730:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     734:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     738:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     73c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     740:	73000006 	movwvc	r0, #6
     744:	6f696474 	svcvs	0x00696474
     748:	0700682e 	streq	r6, [r0, -lr, lsr #16]
     74c:	74730000 	ldrbtvc	r0, [r3], #-0
     750:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     754:	5f787834 	svcpl	0x00787834
     758:	2e6c6168 	powcsez	f6, f4, #0.0
     75c:	00060068 	andeq	r0, r6, r8, rrx
     760:	01050000 	mrseq	r0, (UNDEF: 5)
     764:	ec020500 	cfstr32	mvfx0, [r2], {-0}
     768:	03080006 	movweq	r0, #32774	; 0x8006
     76c:	050100c6 	streq	r0, [r1, #-198]	; 0xffffff3a
     770:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
     774:	004d0104 	subeq	r0, sp, r4, lsl #2
     778:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
     77c:	02000905 	andeq	r0, r0, #81920	; 0x14000
     780:	02100104 	andseq	r0, r0, #4, 2
     784:	01010005 	tsteq	r1, r5
     788:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     78c:	00000002 	andeq	r0, r0, r2
     790:	00d50300 	sbcseq	r0, r5, r0, lsl #6
     794:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     798:	01040200 	mrseq	r0, R12_usr
     79c:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     7a0:	09051601 	stmdbeq	r5, {r0, r9, sl, ip}
     7a4:	01040200 	mrseq	r0, R12_usr
     7a8:	0005020e 	andeq	r0, r5, lr, lsl #4
     7ac:	01050101 	tsteq	r5, r1, lsl #2
     7b0:	00020500 	andeq	r0, r2, r0, lsl #10
     7b4:	03080007 	movweq	r0, #32775	; 0x8007
     7b8:	050100e4 	streq	r0, [r1, #-228]	; 0xffffff1c
     7bc:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
     7c0:	004c0104 	subeq	r0, ip, r4, lsl #2
     7c4:	16010402 	strne	r0, [r1], -r2, lsl #8
     7c8:	02000905 	andeq	r0, r0, #81920	; 0x14000
     7cc:	020e0104 	andeq	r0, lr, #4, 2
     7d0:	01010005 	tsteq	r1, r5
     7d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     7d8:	00071402 	andeq	r1, r7, r2, lsl #8
     7dc:	00f30308 	rscseq	r0, r3, r8, lsl #6
     7e0:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     7e4:	01040200 	mrseq	r0, R12_usr
     7e8:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
     7ec:	09051601 	stmdbeq	r5, {r0, r9, sl, ip}
     7f0:	01040200 	mrseq	r0, R12_usr
     7f4:	0005020e 	andeq	r0, r5, lr, lsl #4
     7f8:	01050101 	tsteq	r5, r1, lsl #2
     7fc:	28020500 	stmdacs	r2, {r8, sl}
     800:	03080007 	movweq	r0, #32775	; 0x8007
     804:	05010182 	streq	r0, [r1, #-386]	; 0xfffffe7e
     808:	02002203 	andeq	r2, r0, #805306368	; 0x30000000
     80c:	004c0104 	subeq	r0, ip, r4, lsl #2
     810:	16010402 	strne	r0, [r1], -r2, lsl #8
     814:	02000905 	andeq	r0, r0, #81920	; 0x14000
     818:	020e0104 	andeq	r0, lr, #4, 2
     81c:	01010005 	tsteq	r1, r5
     820:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     824:	00073c02 	andeq	r3, r7, r2, lsl #24
     828:	01910308 	orrseq	r0, r1, r8, lsl #6
     82c:	01021901 	tsteq	r2, r1, lsl #18
     830:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     834:	02050001 	andeq	r0, r5, #1
     838:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
     83c:	01019e03 	tsteq	r1, r3, lsl #28
     840:	00010219 	andeq	r0, r1, r9, lsl r2
     844:	01050101 	tsteq	r5, r1, lsl #2
     848:	40020500 	andmi	r0, r2, r0, lsl #10
     84c:	03080007 	movweq	r0, #32775	; 0x8007
     850:	190101ab 	stmdbne	r1, {r0, r1, r3, r5, r7, r8}
     854:	01000102 	tsteq	r0, r2, lsl #2
     858:	00010501 	andeq	r0, r1, r1, lsl #10
     85c:	07420205 	strbeq	r0, [r2, -r5, lsl #4]
     860:	b8030800 	stmdalt	r3, {fp}
     864:	03050101 	movweq	r0, #20737	; 0x5101
     868:	06010524 	streq	r0, [r1], -r4, lsr #10
     86c:	00010232 	andeq	r0, r1, r2, lsr r2
     870:	01050101 	tsteq	r5, r1, lsl #2
     874:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
     878:	03080007 	movweq	r0, #32775	; 0x8007
     87c:	050101cd 	streq	r0, [r1, #-461]	; 0xfffffe33
     880:	01052403 	tsteq	r5, r3, lsl #8
     884:	04024006 	streq	r4, [r2], #-6
     888:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     88c:	02050001 	andeq	r0, r5, #1
     890:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
     894:	0101dd03 	tsteq	r1, r3, lsl #26
     898:	4b210305 	blmi	8414b4 <_Min_Heap_Size+0x840cb4>
     89c:	1b050204 	blne	1410b4 <_Min_Heap_Size+0x1408b4>
     8a0:	0105e003 	tsteq	r5, r3
     8a4:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
     8a8:	04020001 	streq	r0, [r2], #-1
     8ac:	7a9f0301 	bvc	fe7c14b8 <_estack+0xde7c0280>
     8b0:	000e0520 	andeq	r0, lr, r0, lsr #10
     8b4:	01010402 	tsteq	r1, r2, lsl #8
     8b8:	02000905 	andeq	r0, r0, #81920	; 0x14000
     8bc:	02010104 	andeq	r0, r1, #4, 2
     8c0:	01010006 	tsteq	r1, r6
     8c4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8c8:	00077402 	andeq	r7, r7, r2, lsl #8
     8cc:	01ec0308 	mvneq	r0, r8, lsl #6
     8d0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     8d4:	06210603 	strteq	r0, [r1], -r3, lsl #12
     8d8:	2f062020 	svccs	0x00062020
     8dc:	1b050204 	blne	1410f4 <_Min_Heap_Size+0x1408f4>
     8e0:	0105d103 	tsteq	r5, r3, lsl #2
     8e4:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
     8e8:	04020001 	streq	r0, [r2], #-1
     8ec:	7aae0301 	bvc	feb814f8 <_estack+0xdeb802c0>
     8f0:	000e0520 	andeq	r0, lr, r0, lsr #10
     8f4:	01010402 	tsteq	r1, r2, lsl #8
     8f8:	02000905 	andeq	r0, r0, #81920	; 0x14000
     8fc:	02010104 	andeq	r0, r1, #4, 2
     900:	01010006 	tsteq	r1, r6
     904:	0000016b 	andeq	r0, r0, fp, ror #2
     908:	013c0003 	teqeq	ip, r3
     90c:	01020000 	mrseq	r0, (UNDEF: 2)
     910:	000d0efb 	strdeq	r0, [sp], -fp
     914:	01010101 	tsteq	r1, r1, lsl #2
     918:	01000000 	mrseq	r0, (UNDEF: 0)
     91c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     920:	6f432f2e 	svcvs	0x00432f2e
     924:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     928:	63006372 	movwvs	r6, #882	; 0x372
     92c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     930:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     934:	6f646978 	svcvs	0x00646978
     938:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     93c:	6172676f 	cmnvs	r2, pc, ror #14
     940:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     944:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     948:	63675c63 	cmnvs	r7, #25344	; 0x6300
     94c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     950:	6f6e2d6d 	svcvs	0x006e2d6d
     954:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     958:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     95c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     960:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     964:	30312e31 	eorscc	r2, r1, r1, lsr lr
     968:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     96c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     970:	61652d65 	cmnvs	r5, r5, ror #26
     974:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     978:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     97c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     980:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     984:	6300656e 	movwvs	r6, #1390	; 0x56e
     988:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     98c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     990:	6f646978 	svcvs	0x00646978
     994:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     998:	6172676f 	cmnvs	r2, pc, ror #14
     99c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     9a0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     9a4:	63675c63 	cmnvs	r7, #25344	; 0x6300
     9a8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     9ac:	6f6e2d6d 	svcvs	0x006e2d6d
     9b0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     9b4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     9b8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     9bc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     9c0:	30312e31 	eorscc	r2, r1, r1, lsr lr
     9c4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     9c8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     9cc:	61652d65 	cmnvs	r5, r5, ror #26
     9d0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     9d4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     9d8:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     9dc:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     9e0:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     9e4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     9e8:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     9ec:	2f534953 	svccs	0x00534953
     9f0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     9f4:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
     9f8:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     9fc:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     a00:	2f787834 	svccs	0x00787834
     a04:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     a08:	00656475 	rsbeq	r6, r5, r5, ror r4
     a0c:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     a10:	00632e6f 	rsbeq	r2, r3, pc, ror #28
     a14:	5f000001 	svcpl	0x00000001
     a18:	61666564 	cmnvs	r6, r4, ror #10
     a1c:	5f746c75 	svcpl	0x00746c75
     a20:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     a24:	00682e73 	rsbeq	r2, r8, r3, ror lr
     a28:	5f000002 	svcpl	0x00000002
     a2c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     a30:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     a34:	00000300 	andeq	r0, r0, r0, lsl #6
     a38:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     a3c:	30346632 	eorscc	r6, r4, r2, lsr r6
     a40:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     a44:	00040068 	andeq	r0, r4, r8, rrx
     a48:	01050000 	mrseq	r0, (UNDEF: 5)
     a4c:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
     a50:	03080007 	movweq	r0, #32775	; 0x8007
     a54:	0305012a 	movweq	r0, #20778	; 0x512a
     a58:	582e0123 	stmdapl	lr!, {r0, r1, r5, r8}
     a5c:	0113204a 	tsteq	r3, sl, asr #32
     a60:	204a4a20 	subcs	r4, sl, r0, lsr #20
     a64:	4a200113 	bmi	800eb8 <_Min_Heap_Size+0x8006b8>
     a68:	0105204a 	tsteq	r5, sl, asr #32
     a6c:	05021406 	streq	r1, [r2, #-1030]	; 0xfffffbfa
     a70:	0c010100 	stfeqs	f0, [r1], {-0}
     a74:	03000003 	movweq	r0, #3
     a78:	00020200 	andeq	r0, r2, r0, lsl #4
     a7c:	fb010200 	blx	41286 <_Min_Heap_Size+0x40a86>
     a80:	01000d0e 	tsteq	r0, lr, lsl #26
     a84:	00010101 	andeq	r0, r1, r1, lsl #2
     a88:	00010000 	andeq	r0, r1, r0
     a8c:	2e2e0100 	sufcse	f0, f6, f0
     a90:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     a94:	72532f65 	subsvc	r2, r3, #404	; 0x194
     a98:	3a630063 	bcc	18c0c2c <_Min_Heap_Size+0x18c042c>
     a9c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     aa0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     aa4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     aa8:	6f72705c 	svcvs	0x0072705c
     aac:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     ab0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     ab4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     ab8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     abc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     ac0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     ac4:	61652d65 	cmnvs	r5, r5, ror #26
     ac8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     acc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     ad0:	31323032 	teqcc	r2, r2, lsr r0
     ad4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     ad8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     adc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     ae0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     ae4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     ae8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     aec:	616d5c65 	cmnvs	sp, r5, ror #24
     af0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     af4:	3a630065 	bcc	18c0c90 <_Min_Heap_Size+0x18c0490>
     af8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     afc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     b00:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     b04:	6f72705c 	svcvs	0x0072705c
     b08:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     b0c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     b10:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     b14:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     b18:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     b1c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     b20:	61652d65 	cmnvs	r5, r5, ror #26
     b24:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     b28:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     b2c:	31323032 	teqcc	r2, r2, lsr r0
     b30:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     b34:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     b38:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     b3c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     b40:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     b44:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     b48:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     b4c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     b50:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     b54:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     b58:	534d432f 	movtpl	r4, #54063	; 0xd32f
     b5c:	442f5349 	strtmi	r5, [pc], #-841	; b64 <_Min_Heap_Size+0x364>
     b60:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     b64:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     b68:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     b6c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     b70:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     b74:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     b78:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     b7c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     b80:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     b84:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     b88:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     b8c:	5f787834 	svcpl	0x00787834
     b90:	5f4c4148 	svcpl	0x004c4148
     b94:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     b98:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     b9c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     ba0:	6f432f2e 	svcvs	0x00432f2e
     ba4:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     ba8:	0000636e 	andeq	r6, r0, lr, ror #6
     bac:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     bb0:	00632e74 	rsbeq	r2, r3, r4, ror lr
     bb4:	5f000001 	svcpl	0x00000001
     bb8:	61666564 	cmnvs	r6, r4, ror #10
     bbc:	5f746c75 	svcpl	0x00746c75
     bc0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     bc4:	00682e73 	rsbeq	r2, r8, r3, ror lr
     bc8:	5f000002 	svcpl	0x00000002
     bcc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     bd0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     bd4:	00000300 	andeq	r0, r0, r0, lsl #6
     bd8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     bdc:	30346632 	eorscc	r6, r4, r2, lsr r6
     be0:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     be4:	00040068 	andeq	r0, r4, r8, rrx
     be8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     bec:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     bf0:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     bf4:	645f6c61 	ldrbvs	r6, [pc], #-3169	; bfc <_Min_Heap_Size+0x3fc>
     bf8:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     bfc:	00000500 	andeq	r0, r0, r0, lsl #10
     c00:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c04:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c08:	61685f78 	smcvs	34296	; 0x85f8
     c0c:	70675f6c 	rsbvc	r5, r7, ip, ror #30
     c10:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     c14:	00000500 	andeq	r0, r0, r0, lsl #10
     c18:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c1c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c20:	61685f78 	smcvs	34296	; 0x85f8
     c24:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
     c28:	00682e61 	rsbeq	r2, r8, r1, ror #28
     c2c:	73000005 	movwvc	r0, #5
     c30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c34:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     c38:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     c3c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     c40:	00682e74 	rsbeq	r2, r8, r4, ror lr
     c44:	73000005 	movwvc	r0, #5
     c48:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c4c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     c50:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     c54:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
     c58:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
     c5c:	00050068 	andeq	r0, r5, r8, rrx
     c60:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     c64:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     c68:	695f7878 	ldmdbvs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     c6c:	00682e74 	rsbeq	r2, r8, r4, ror lr
     c70:	75000006 	strvc	r0, [r0, #-6]
     c74:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
     c78:	0600682e 	streq	r6, [r0], -lr, lsr #16
     c7c:	05000000 	streq	r0, [r0, #-0]
     c80:	02050001 	andeq	r0, r5, #1
     c84:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
     c88:	05011f03 	streq	r1, [r1, #-3843]	; 0xfffff0fd
     c8c:	20090303 	andcs	r0, r9, r3, lsl #6
     c90:	01061305 	tsteq	r6, r5, lsl #6
     c94:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     c98:	01061805 	tsteq	r6, r5, lsl #16
     c9c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     ca0:	01061a05 	tsteq	r6, r5, lsl #20
     ca4:	2f060305 	svccs	0x00060305
     ca8:	01061805 	tsteq	r6, r5, lsl #16
     cac:	21060305 	tstcs	r6, r5, lsl #6
     cb0:	01061605 	tsteq	r6, r5, lsl #12
     cb4:	21060305 	tstcs	r6, r5, lsl #6
     cb8:	01061405 	tsteq	r6, r5, lsl #8
     cbc:	2f060305 	svccs	0x00060305
     cc0:	01061905 	tsteq	r6, r5, lsl #18
     cc4:	21060305 	tstcs	r6, r5, lsl #6
     cc8:	01061c05 	tsteq	r6, r5, lsl #24
     ccc:	21060305 	tstcs	r6, r5, lsl #6
     cd0:	01060705 	tsteq	r6, r5, lsl #14
     cd4:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
     cd8:	05052801 	streq	r2, [r5, #-2049]	; 0xfffff7ff
     cdc:	207a0306 	rsbscs	r0, sl, r6, lsl #6
     ce0:	34060105 	strcc	r0, [r6], #-261	; 0xfffffefb
     ce4:	01000502 	tsteq	r0, r2, lsl #10
     ce8:	00010501 	andeq	r0, r1, r1, lsl #10
     cec:	080c0205 	stmdaeq	ip, {r0, r2, r9}
     cf0:	3b030800 	blcc	c2cf8 <_Min_Heap_Size+0xc24f8>
     cf4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     cf8:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     cfc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     d00:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     d04:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d08:	01052005 	tsteq	r5, r5
     d0c:	05661b03 	strbeq	r1, [r6, #-2819]!	; 0xfffff4fd
     d10:	6b030605 	blvs	c252c <_Min_Heap_Size+0xc1d2c>
     d14:	662e012e 	strtvs	r0, [lr], -lr, lsr #2
     d18:	0114204a 	tsteq	r4, sl, asr #32
     d1c:	204a4a20 	subcs	r4, sl, r0, lsr #20
     d20:	06190517 			; <UNDEFINED> instruction: 0x06190517
     d24:	06050501 	streq	r0, [r5], -r1, lsl #10
     d28:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
     d2c:	06050501 	streq	r0, [r5], -r1, lsl #10
     d30:	1b05132f 	blne	1459f4 <_Min_Heap_Size+0x1451f4>
     d34:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d38:	1f052f06 	svcne	0x00052f06
     d3c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d40:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     d44:	05593106 	ldrbeq	r3, [r9, #-262]	; 0xfffffefa
     d48:	02410601 	subeq	r0, r1, #1048576	; 0x100000
     d4c:	01010003 	tsteq	r1, r3
     d50:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     d54:	00000002 	andeq	r0, r0, r2
     d58:	00dc0300 	sbcseq	r0, ip, r0, lsl #6
     d5c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     d60:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     d64:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d68:	01052005 	tsteq	r5, r5
     d6c:	053c1403 	ldreq	r1, [ip, #-1027]!	; 0xfffffbfd
     d70:	72030605 	andvc	r0, r3, #5242880	; 0x500000
     d74:	3c065e20 	stccc	14, cr5, [r6], {32}
     d78:	01053106 	tsteq	r5, r6, lsl #2
     d7c:	07024106 	streq	r4, [r2, -r6, lsl #2]
     d80:	72010100 	andvc	r0, r1, #0, 2
     d84:	03000001 	movweq	r0, #1
     d88:	00014900 	andeq	r4, r1, r0, lsl #18
     d8c:	fb010200 	blx	41596 <_Min_Heap_Size+0x40d96>
     d90:	01000d0e 	tsteq	r0, lr, lsl #26
     d94:	00010101 	andeq	r0, r1, r1, lsl #2
     d98:	00010000 	andeq	r0, r1, r0
     d9c:	2e2e0100 	sufcse	f0, f6, f0
     da0:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     da4:	72532f65 	subsvc	r2, r3, #404	; 0x194
     da8:	3a630063 	bcc	18c0f3c <_Min_Heap_Size+0x18c073c>
     dac:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     db0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     db4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     db8:	6f72705c 	svcvs	0x0072705c
     dbc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     dc0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     dc4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     dc8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     dcc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     dd0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     dd4:	61652d65 	cmnvs	r5, r5, ror #26
     dd8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     ddc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     de0:	31323032 	teqcc	r2, r2, lsr r0
     de4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     de8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     dec:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     df0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     df4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     df8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     dfc:	616d5c65 	cmnvs	sp, r5, ror #24
     e00:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     e04:	3a630065 	bcc	18c0fa0 <_Min_Heap_Size+0x18c07a0>
     e08:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     e0c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     e10:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     e14:	6f72705c 	svcvs	0x0072705c
     e18:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     e1c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     e20:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     e24:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     e28:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     e2c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     e30:	61652d65 	cmnvs	r5, r5, ror #26
     e34:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     e38:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     e3c:	31323032 	teqcc	r2, r2, lsr r0
     e40:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     e44:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     e48:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     e4c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     e50:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     e54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     e58:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     e5c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     e60:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     e64:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     e68:	534d432f 	movtpl	r4, #54063	; 0xd32f
     e6c:	442f5349 	strtmi	r5, [pc], #-841	; e74 <_Min_Heap_Size+0x674>
     e70:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     e74:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     e78:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     e7c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     e80:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     e84:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     e88:	00006564 	andeq	r6, r0, r4, ror #10
     e8c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e90:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     e94:	61685f78 	smcvs	34296	; 0x85f8
     e98:	736d5f6c 	cmnvc	sp, #108, 30	; 0x1b0
     e9c:	00632e70 	rsbeq	r2, r3, r0, ror lr
     ea0:	5f000001 	svcpl	0x00000001
     ea4:	61666564 	cmnvs	r6, r4, ror #10
     ea8:	5f746c75 	svcpl	0x00746c75
     eac:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     eb0:	00682e73 	rsbeq	r2, r8, r3, ror lr
     eb4:	5f000002 	svcpl	0x00000002
     eb8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     ebc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     ec0:	00000300 	andeq	r0, r0, r0, lsl #6
     ec4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     ec8:	30346632 	eorscc	r6, r4, r2, lsr r6
     ecc:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     ed0:	00040068 	andeq	r0, r4, r8, rrx
     ed4:	01050000 	mrseq	r0, (UNDEF: 5)
     ed8:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
     edc:	03080008 	movweq	r0, #32776	; 0x8008
     ee0:	0305013f 	movweq	r0, #20799	; 0x513f
     ee4:	582e0126 	stmdapl	lr!, {r1, r2, r5, r8}
     ee8:	0113204a 	tsteq	r3, sl, asr #32
     eec:	204a4a20 	subcs	r4, sl, r0, lsr #20
     ef0:	19060105 	stmdbne	r6, {r0, r2, r8}
     ef4:	01000502 	tsteq	r0, r2, lsl #10
     ef8:	0044f401 	subeq	pc, r4, r1, lsl #8
     efc:	51000300 	mrspl	r0, LR_irq
     f00:	02000002 	andeq	r0, r0, #2
     f04:	0d0efb01 	vstreq	d15, [lr, #-4]
     f08:	01010100 	mrseq	r0, (UNDEF: 17)
     f0c:	00000001 	andeq	r0, r0, r1
     f10:	01000001 	tsteq	r0, r1
     f14:	442f2e2e 	strtmi	r2, [pc], #-3630	; f1c <_Min_Heap_Size+0x71c>
     f18:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     f1c:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     f20:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     f24:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     f28:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     f2c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     f30:	2f726576 	svccs	0x00726576
     f34:	00637253 	rsbeq	r7, r3, r3, asr r2
     f38:	442f2e2e 	strtmi	r2, [pc], #-3630	; f40 <_Min_Heap_Size+0x740>
     f3c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     f40:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     f44:	5349534d 	movtpl	r5, #37709	; 0x934d
     f48:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     f4c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     f50:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     f54:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     f58:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     f5c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     f60:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     f64:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     f68:	5f6d7261 	svcpl	0x006d7261
     f6c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     f70:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     f74:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     f78:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     f7c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     f80:	30312d69 	eorscc	r2, r1, r9, ror #26
     f84:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     f88:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     f8c:	615c3031 	cmpvs	ip, r1, lsr r0
     f90:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     f94:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     f98:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     f9c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     fa0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     fa4:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     fa8:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     fac:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     fb0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     fb4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     fb8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     fbc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     fc0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     fc4:	5f6d7261 	svcpl	0x006d7261
     fc8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     fcc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     fd0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     fd4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     fd8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     fdc:	30312d69 	eorscc	r2, r1, r9, ror #26
     fe0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     fe4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     fe8:	615c3031 	cmpvs	ip, r1, lsr r0
     fec:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     ff0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     ff4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     ff8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     ffc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1000:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    1004:	2f2e2e00 	svccs	0x002e2e00
    1008:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    100c:	2f737265 	svccs	0x00737265
    1010:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    1014:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    1018:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    101c:	2f54532f 	svccs	0x0054532f
    1020:	334d5453 	movtcc	r5, #54355	; 0xd453
    1024:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1028:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    102c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1030:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    1034:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1038:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    103c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1040:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1044:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1048:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1050 <_Min_Heap_Size+0x850>
    104c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1050:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    1054:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1058:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    105c:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    1060:	73000063 	movwvc	r0, #99	; 0x63
    1064:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1068:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    106c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1070:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    1074:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1078:	63000001 	movwvs	r0, #1
    107c:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    1080:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1084:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1088:	645f0000 	ldrbvs	r0, [pc], #-0	; 1090 <_Min_Heap_Size+0x890>
    108c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1090:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1098 <_Min_Heap_Size+0x898>
    1094:	73657079 	cmnvc	r5, #121	; 0x79
    1098:	0300682e 	movweq	r6, #2094	; 0x82e
    109c:	735f0000 	cmpvc	pc, #0
    10a0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    10a4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    10a8:	73000004 	movwvc	r0, #4
    10ac:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10b0:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    10b4:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    10b8:	00000500 	andeq	r0, r0, r0, lsl #10
    10bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    10c0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    10c4:	00682e78 	rsbeq	r2, r8, r8, ror lr
    10c8:	73000005 	movwvc	r0, #5
    10cc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10d0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    10d4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    10d8:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    10dc:	0600682e 	streq	r6, [r0], -lr, lsr #16
    10e0:	74730000 	ldrbtvc	r0, [r3], #-0
    10e4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    10e8:	5f787834 	svcpl	0x00787834
    10ec:	5f6c6168 	svcpl	0x006c6168
    10f0:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    10f4:	00060068 	andeq	r0, r6, r8, rrx
    10f8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    10fc:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1100:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1104:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; 4ab <_Min_Heap_Size-0x355>
    1108:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    110c:	00060068 	andeq	r0, r6, r8, rrx
    1110:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1114:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1118:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    111c:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    1120:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    1124:	00070068 	andeq	r0, r7, r8, rrx
    1128:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    112c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1130:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1134:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    1138:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    113c:	00000600 	andeq	r0, r0, r0, lsl #12
    1140:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1144:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1148:	61685f78 	smcvs	34296	; 0x85f8
    114c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    1150:	00000006 	andeq	r0, r0, r6
    1154:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1158:	00000002 	andeq	r0, r0, r2
    115c:	19f90300 	ldmibne	r9!, {r8, r9}^
    1160:	00030501 	andeq	r0, r3, r1, lsl #10
    1164:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1168:	01040200 	mrseq	r0, R12_usr
    116c:	04020001 	streq	r0, [r2], #-1
    1170:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1174:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1178:	001f0502 	andseq	r0, pc, r2, lsl #10
    117c:	03010402 	movweq	r0, #5122	; 0x1402
    1180:	052069e0 	streq	r6, [r0, #-2528]!	; 0xfffff620
    1184:	04020005 	streq	r0, [r2], #-5
    1188:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    118c:	01040200 	mrseq	r0, R12_usr
    1190:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1194:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1198:	06010402 	streq	r0, [r1], -r2, lsl #8
    119c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    11a0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    11a4:	00030501 	andeq	r0, r3, r1, lsl #10
    11a8:	03010402 	movweq	r0, #5122	; 0x1402
    11ac:	0001169b 	muleq	r1, fp, r6
    11b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    11b4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    11b8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    11bc:	6a930301 	bvs	fe4c1dc8 <_estack+0xde4c0b90>
    11c0:	00040501 	andeq	r0, r4, r1, lsl #10
    11c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    11c8:	01040200 	mrseq	r0, R12_usr
    11cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    11d0:	00200601 	eoreq	r0, r0, r1, lsl #12
    11d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    11d8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    11dc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    11e0:	00030501 	andeq	r0, r3, r1, lsl #10
    11e4:	03010402 	movweq	r0, #5122	; 0x1402
    11e8:	000115e8 	andeq	r1, r1, r8, ror #11
    11ec:	06020402 	streq	r0, [r2], -r2, lsl #8
    11f0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    11f4:	11051502 	tstne	r5, r2, lsl #10
    11f8:	02040200 	andeq	r0, r4, #0, 4
    11fc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1200:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    1204:	04020001 	streq	r0, [r2], #-1
    1208:	01022f02 	tsteq	r2, r2, lsl #30
    120c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1210:	02050001 	andeq	r0, r5, #1
    1214:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
    1218:	011a8703 	tsteq	sl, r3, lsl #14
    121c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1220:	00140104 	andseq	r0, r4, r4, lsl #2
    1224:	01010402 	tsteq	r1, r2, lsl #8
    1228:	01040200 	mrseq	r0, R12_usr
    122c:	04020001 	streq	r0, [r2], #-1
    1230:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1234:	02001f05 	andeq	r1, r0, #5, 30
    1238:	d2030104 	andle	r0, r3, #4, 2
    123c:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    1240:	01040200 	mrseq	r0, R12_usr
    1244:	00040514 	andeq	r0, r4, r4, lsl r5
    1248:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    124c:	01040200 	mrseq	r0, R12_usr
    1250:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1254:	2f060104 	svccs	0x00060104
    1258:	01040200 	mrseq	r0, R12_usr
    125c:	01040106 	tsteq	r4, r6, lsl #2
    1260:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1264:	a9030104 	stmdbge	r3, {r2, r8}
    1268:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    126c:	2e060104 	adfcss	f0, f6, f4
    1270:	1f050204 	svcne	0x00050204
    1274:	01040200 	mrseq	r0, R12_usr
    1278:	016a8503 	cmneq	sl, r3, lsl #10
    127c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1280:	00140104 	andseq	r0, r4, r4, lsl #2
    1284:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1288:	01040200 	mrseq	r0, R12_usr
    128c:	02002006 	andeq	r2, r0, #6
    1290:	2f060104 	svccs	0x00060104
    1294:	01040200 	mrseq	r0, R12_usr
    1298:	01040106 	tsteq	r4, r6, lsl #2
    129c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    12a0:	f6030104 			; <UNDEFINED> instruction: 0xf6030104
    12a4:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    12a8:	002e0104 	eoreq	r0, lr, r4, lsl #2
    12ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    12b0:	04020001 	streq	r0, [r2], #-1
    12b4:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    12b8:	00010104 	andeq	r0, r1, r4, lsl #2
    12bc:	01010402 	tsteq	r1, r2, lsl #8
    12c0:	01040200 	mrseq	r0, R12_usr
    12c4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    12c8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    12cc:	69d10301 	ldmibvs	r1, {r0, r8, r9}^
    12d0:	00050520 	andeq	r0, r5, r0, lsr #10
    12d4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    12d8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    12dc:	00140104 	andseq	r0, r4, r4, lsl #2
    12e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    12e4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    12e8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    12ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    12f0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    12f4:	04020003 	streq	r0, [r2], #-3
    12f8:	16aa0301 	strtne	r0, [sl], r1, lsl #6
    12fc:	04020001 	streq	r0, [r2], #-1
    1300:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1304:	001f0502 	andseq	r0, pc, r2, lsl #10
    1308:	03010402 	movweq	r0, #5122	; 0x1402
    130c:	05016a84 	streq	r6, [r1, #-2692]	; 0xfffff57c
    1310:	04020004 	streq	r0, [r2], #-4
    1314:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1318:	00140104 	andseq	r0, r4, r4, lsl #2
    131c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1320:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1324:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1328:	06010402 	streq	r0, [r1], -r2, lsl #8
    132c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1330:	04020003 	streq	r0, [r2], #-3
    1334:	15f70301 	ldrbne	r0, [r7, #769]!	; 0x301
    1338:	04020001 	streq	r0, [r2], #-1
    133c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    1340:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    1344:	02000c05 	andeq	r0, r0, #1280	; 0x500
    1348:	01060204 	tsteq	r6, r4, lsl #4
    134c:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    1350:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    1354:	04020005 	streq	r0, [r2], #-5
    1358:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    135c:	04020003 	streq	r0, [r2], #-3
    1360:	12051602 	andne	r1, r5, #2097152	; 0x200000
    1364:	02040200 	andeq	r0, r4, #0, 4
    1368:	03050106 	movweq	r0, #20742	; 0x5106
    136c:	02040200 	andeq	r0, r4, #0, 4
    1370:	18053d06 	stmdane	r5, {r1, r2, r8, sl, fp, ip, sp}
    1374:	02040200 	andeq	r0, r4, #0, 4
    1378:	01050106 	tsteq	r5, r6, lsl #2
    137c:	02040200 	andeq	r0, r4, #0, 4
    1380:	0005052f 	andeq	r0, r5, pc, lsr #10
    1384:	06010402 	streq	r0, [r1], -r2, lsl #8
    1388:	00207a03 	eoreq	r7, r0, r3, lsl #20
    138c:	01010402 	tsteq	r1, r2, lsl #8
    1390:	01040200 	mrseq	r0, R12_usr
    1394:	04020001 	streq	r0, [r2], #-1
    1398:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    139c:	02001f05 	andeq	r1, r0, #5, 30
    13a0:	cc030104 	stfgts	f0, [r3], {4}
    13a4:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    13a8:	01040200 	mrseq	r0, R12_usr
    13ac:	00040514 	andeq	r0, r4, r4, lsl r5
    13b0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    13b4:	01040200 	mrseq	r0, R12_usr
    13b8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    13bc:	2f060104 	svccs	0x00060104
    13c0:	01040200 	mrseq	r0, R12_usr
    13c4:	01040106 	tsteq	r4, r6, lsl #2
    13c8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    13cc:	af030104 	svcge	0x00030104
    13d0:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    13d4:	2e060104 	adfcss	f0, f6, f4
    13d8:	1f050204 	svcne	0x00050204
    13dc:	01040200 	mrseq	r0, R12_usr
    13e0:	0169ff03 	msreq	(UNDEF: 121), r3
    13e4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    13e8:	00140104 	andseq	r0, r4, r4, lsl #2
    13ec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    13f0:	01040200 	mrseq	r0, R12_usr
    13f4:	02002006 	andeq	r2, r0, #6
    13f8:	2f060104 	svccs	0x00060104
    13fc:	01040200 	mrseq	r0, R12_usr
    1400:	01040106 	tsteq	r4, r6, lsl #2
    1404:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1408:	fc030104 	stc2	1, cr0, [r3], {4}
    140c:	03020115 	movweq	r0, #8469	; 0x2115
    1410:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1414:	02050001 	andeq	r0, r5, #1
    1418:	08000920 	stmdaeq	r0, {r5, r8, fp}
    141c:	011bc903 	tsteq	fp, r3, lsl #18
    1420:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    1424:	01060c05 	tsteq	r6, r5, lsl #24
    1428:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    142c:	2e19030c 	cdpcs	3, 1, cr0, cr9, cr12, {0}
    1430:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    1434:	67030605 	strvs	r0, [r3, -r5, lsl #12]
    1438:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    143c:	20080501 	andcs	r0, r8, r1, lsl #10
    1440:	44060705 	strmi	r0, [r6], #-1797	; 0xfffff8fb
    1444:	01062d05 	tsteq	r6, r5, lsl #26
    1448:	05203905 	streq	r3, [r0, #-2309]!	; 0xfffff6fb
    144c:	0c052e27 	stceq	14, cr2, [r5], {39}	; 0x27
    1450:	201b0520 	andscs	r0, fp, r0, lsr #10
    1454:	23060505 	movwcs	r0, #25861	; 0x6505
    1458:	01061005 	tsteq	r6, r5
    145c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    1460:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    1464:	055b3106 	ldrbeq	r3, [fp, #-262]	; 0xfffffefa
    1468:	0c055a05 			; <UNDEFINED> instruction: 0x0c055a05
    146c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1470:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    1474:	206d0301 	rsbcs	r0, sp, r1, lsl #6
    1478:	02003805 	andeq	r3, r0, #327680	; 0x50000
    147c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1480:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    1484:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1488:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    148c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    1490:	1d05200c 	stcne	0, cr2, [r5, #-48]	; 0xffffffd0
    1494:	2e1b0520 	cfmul64cs	mvdx0, mvdx11, mvdx0
    1498:	21060705 	tstcs	r6, r5, lsl #14
    149c:	01061905 	tsteq	r6, r5, lsl #18
    14a0:	01000402 	tsteq	r0, r2, lsl #8
    14a4:	00010501 	andeq	r0, r1, r1, lsl #10
    14a8:	09800205 	stmibeq	r0, {r0, r2, r9}
    14ac:	ef030800 	svc	0x00030800
    14b0:	0106011c 	tsteq	r6, ip, lsl r1
    14b4:	2f060305 	svccs	0x00060305
    14b8:	004b1513 	subeq	r1, fp, r3, lsl r5
    14bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    14c0:	003d062e 	eorseq	r0, sp, lr, lsr #12
    14c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    14c8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    14cc:	3d063c02 	stccc	12, cr3, [r6, #-8]
    14d0:	02040200 	andeq	r0, r4, #0, 4
    14d4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    14d8:	06200304 	strteq	r0, [r0], -r4, lsl #6
    14dc:	7409035d 	strvc	r0, [r9], #-861	; 0xfffffca3
    14e0:	01062105 	tsteq	r6, r5, lsl #2
    14e4:	05203a05 	streq	r3, [r0, #-2565]!	; 0xfffff5fb
    14e8:	4f05202d 	svcmi	0x0005202d
    14ec:	20420520 	subcs	r0, r2, r0, lsr #10
    14f0:	05206205 	streq	r6, [r0, #-517]!	; 0xfffffdfb
    14f4:	0305200a 	movweq	r2, #20490	; 0x500a
    14f8:	06882106 	streq	r2, [r8], r6, lsl #2
    14fc:	06050520 	streq	r0, [r5], -r0, lsr #10
    1500:	05660903 	strbeq	r0, [r6, #-2307]!	; 0xfffff6fd
    1504:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1508:	25052008 	strcs	r2, [r5, #-8]
    150c:	01040200 	mrseq	r0, R12_usr
    1510:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    1514:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    1518:	2e01060e 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx14
    151c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1520:	53030104 	movwpl	r0, #12548	; 0x3104
    1524:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1528:	02003c01 	andeq	r3, r0, #256	; 0x100
    152c:	003d0204 	eorseq	r0, sp, r4, lsl #4
    1530:	67030402 	strvs	r0, [r3, -r2, lsl #8]
    1534:	03060705 	movweq	r0, #26373	; 0x6705
    1538:	0e056621 	cfmadd32eq	mvax1, mvfx6, mvfx5, mvfx1
    153c:	03050106 	movweq	r0, #20742	; 0x5106
    1540:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    1544:	01061205 	tsteq	r6, r5, lsl #4
    1548:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    154c:	05420605 	strbeq	r0, [r2, #-1541]	; 0xfffff9fb
    1550:	ac01061c 	stcge	6, cr0, [r1], {28}
    1554:	9e080a05 	vmlals.f32	s0, s16, s10
    1558:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    155c:	0105201a 	tsteq	r5, sl, lsl r0
    1560:	06050522 	streq	r0, [r5], -r2, lsr #10
    1564:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    1568:	ba01061c 	blt	42de0 <_Min_Heap_Size+0x425e0>
    156c:	90080a05 	andls	r0, r8, r5, lsl #20
    1570:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    1574:	0a02201a 	beq	895e4 <_Min_Heap_Size+0x88de4>
    1578:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    157c:	02050001 	andeq	r0, r5, #1
    1580:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
    1584:	0118f203 	tsteq	r8, r3, lsl #4	; <UNPREDICTABLE>
    1588:	03050106 	movweq	r0, #20742	; 0x5106
    158c:	09059206 	stmdbeq	r5, {r1, r2, r9, ip, pc}
    1590:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1594:	2e320501 	cdpcs	5, 3, cr0, cr2, cr1, {0}
    1598:	05740905 	ldrbeq	r0, [r4, #-2309]!	; 0xfffff6fb
    159c:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    15a0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    15a4:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    15a8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    15ac:	0a052e1b 	beq	14ce20 <_Min_Heap_Size+0x14c620>
    15b0:	0033052e 	eorseq	r0, r3, lr, lsr #10
    15b4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    15b8:	42060705 	andmi	r0, r6, #1310720	; 0x140000
    15bc:	01060c05 	tsteq	r6, r5, lsl #24
    15c0:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    15c4:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    15c8:	5b053c01 	blpl	1505d4 <_Min_Heap_Size+0x14fdd4>
    15cc:	02040200 	andeq	r0, r4, #0, 4
    15d0:	0609052e 	streq	r0, [r9], -lr, lsr #10
    15d4:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    15d8:	200c0501 	andcs	r0, ip, r1, lsl #10
    15dc:	3f060b05 	svccc	0x00060b05
    15e0:	2e2e2e01 	cdpcs	14, 2, cr2, cr14, cr1, {0}
    15e4:	053e1720 	ldreq	r1, [lr, #-1824]!	; 0xfffff8e0
    15e8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    15ec:	0131060b 	teqeq	r1, fp, lsl #12
    15f0:	1205142e 	andne	r1, r5, #771751936	; 0x2e000000
    15f4:	0a050106 	beq	141a14 <_Min_Heap_Size+0x141214>
    15f8:	21010533 	tstcs	r1, r3, lsr r5
    15fc:	66031005 	strvs	r1, [r3], -r5
    1600:	0004023c 	andeq	r0, r4, ip, lsr r2
    1604:	01050101 	tsteq	r5, r1, lsl #2
    1608:	00020500 	andeq	r0, r2, r0, lsl #10
    160c:	03000000 	movweq	r0, #0
    1610:	050105cb 	streq	r0, [r1, #-1483]	; 0xfffffa35
    1614:	01051403 	tsteq	r5, r3, lsl #8
    1618:	01021606 	tsteq	r2, r6, lsl #12
    161c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1620:	02050001 	andeq	r0, r5, #1
    1624:	08000b80 	stmdaeq	r0, {r7, r8, r9, fp}
    1628:	0102e503 	tsteq	r2, r3, lsl #10
    162c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1630:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1634:	03053a01 	movweq	r3, #23041	; 0x5a01
    1638:	12053606 	andne	r3, r5, #6291456	; 0x600000
    163c:	06050106 	streq	r0, [r5], -r6, lsl #2
    1640:	06050520 	streq	r0, [r5], -r0, lsr #10
    1644:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    1648:	004a0601 	subeq	r0, sl, r1, lsl #12
    164c:	4a020402 	bmi	8265c <_Min_Heap_Size+0x81e5c>
    1650:	03040200 	movweq	r0, #16896	; 0x4200
    1654:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1658:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    165c:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    1660:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1664:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1668:	3c020402 	cfstrscc	mvf0, [r2], {2}
    166c:	03040200 	movweq	r0, #16896	; 0x4200
    1670:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    1674:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
    1678:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    167c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1680:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    1684:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1688:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    168c:	03060305 	movweq	r0, #25349	; 0x6305
    1690:	11052e15 	tstne	r5, r5, lsl lr
    1694:	03050106 	movweq	r0, #20742	; 0x5106
    1698:	415b3f06 	cmpmi	fp, r6, lsl #30
    169c:	055b5b59 	ldrbeq	r5, [fp, #-2905]	; 0xfffff4a7
    16a0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    16a4:	052f0603 	streq	r0, [pc, #-1539]!	; 10a9 <_Min_Heap_Size+0x8a9>
    16a8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    16ac:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    16b0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    16b4:	052f0603 	streq	r0, [pc, #-1539]!	; 10b9 <_Min_Heap_Size+0x8b9>
    16b8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    16bc:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    16c0:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    16c4:	04020005 	streq	r0, [r2], #-5
    16c8:	204a0304 	subcs	r0, sl, r4, lsl #6
    16cc:	02006a06 	andeq	r6, r0, #24576	; 0x6000
    16d0:	4a060104 	bmi	181ae8 <_Min_Heap_Size+0x1812e8>
    16d4:	02040200 	andeq	r0, r4, #0, 4
    16d8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    16dc:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    16e0:	004a0404 	subeq	r0, sl, r4, lsl #8
    16e4:	4a050402 	bmi	1426f4 <_Min_Heap_Size+0x141ef4>
    16e8:	06040200 	streq	r0, [r4], -r0, lsl #4
    16ec:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    16f0:	03053c06 	movweq	r3, #23558	; 0x5c06
    16f4:	02040200 	andeq	r0, r4, #0, 4
    16f8:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    16fc:	05056702 	streq	r6, [r5, #-1794]	; 0xfffff8fe
    1700:	11056b06 	tstne	r5, r6, lsl #22
    1704:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1708:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    170c:	03060c05 	movweq	r0, #27653	; 0x6c05
    1710:	01054a5c 	tsteq	r5, ip, asr sl
    1714:	2000c003 	andcs	ip, r0, r3
    1718:	01000602 	tsteq	r0, r2, lsl #12
    171c:	00010501 	andeq	r0, r1, r1, lsl #10
    1720:	00000205 	andeq	r0, r0, r5, lsl #4
    1724:	b3030000 	movwlt	r0, #12288	; 0x3000
    1728:	03050103 	movweq	r0, #20739	; 0x5103
    172c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    1730:	2c010501 	cfstr32cs	mvfx0, [r1], {1}
    1734:	36060305 	strcc	r0, [r6], -r5, lsl #6
    1738:	01040200 	mrseq	r0, R12_usr
    173c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1740:	004a0204 	subeq	r0, sl, r4, lsl #4
    1744:	4a030402 	bmi	c2754 <_Min_Heap_Size+0xc1f54>
    1748:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    174c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1750:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    1754:	004a0604 	subeq	r0, sl, r4, lsl #12
    1758:	3c060402 	cfstrscc	mvf0, [r6], {2}
    175c:	02002f06 	andeq	r2, r0, #6, 30
    1760:	2e060104 	adfcss	f0, f6, f4
    1764:	02003d06 	andeq	r3, r0, #384	; 0x180
    1768:	2e060104 	adfcss	f0, f6, f4
    176c:	0c053e06 	stceq	14, cr3, [r5], {6}
    1770:	06050106 	streq	r0, [r5], -r6, lsl #2
    1774:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1778:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    177c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1780:	5b3f0603 	blpl	fc2f94 <_Min_Heap_Size+0xfc2794>
    1784:	5b5b5941 	blpl	16d7c90 <_Min_Heap_Size+0x16d7490>
    1788:	0614055b 			; <UNDEFINED> instruction: 0x0614055b
    178c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1790:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1794:	06030501 	streq	r0, [r3], -r1, lsl #10
    1798:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    179c:	06030501 	streq	r0, [r3], -r1, lsl #10
    17a0:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    17a4:	06030501 	streq	r0, [r3], -r1, lsl #10
    17a8:	06010522 	streq	r0, [r1], -r2, lsr #10
    17ac:	00030513 	andeq	r0, r3, r3, lsl r5
    17b0:	03020402 	movweq	r0, #9218	; 0x2402
    17b4:	0200204d 	andeq	r2, r0, #77	; 0x4d
    17b8:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    17bc:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    17c0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    17c4:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    17c8:	060c052e 	streq	r0, [ip], -lr, lsr #10
    17cc:	054a6703 	strbeq	r6, [sl, #-1795]	; 0xfffff8fd
    17d0:	20380301 	eorscs	r0, r8, r1, lsl #6
    17d4:	01000602 	tsteq	r0, r2, lsl #12
    17d8:	00010501 	andeq	r0, r1, r1, lsl #10
    17dc:	00000205 	andeq	r0, r0, r5, lsl #4
    17e0:	fd030000 	stc2	0, cr0, [r3, #-0]
    17e4:	03050103 	movweq	r0, #20739	; 0x5103
    17e8:	06060514 			; <UNDEFINED> instruction: 0x06060514
    17ec:	2c010501 	cfstr32cs	mvfx0, [r1], {1}
    17f0:	44060305 	strmi	r0, [r6], #-773	; 0xfffffcfb
    17f4:	01040200 	mrseq	r0, R12_usr
    17f8:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    17fc:	004a0204 	subeq	r0, sl, r4, lsl #4
    1800:	4a030402 	bmi	c2810 <_Min_Heap_Size+0xc2010>
    1804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1808:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    180c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    1810:	004a0604 	subeq	r0, sl, r4, lsl #12
    1814:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
    1818:	06040200 	streq	r0, [r4], -r0, lsl #4
    181c:	00310620 	eorseq	r0, r1, r0, lsr #12
    1820:	06010402 	streq	r0, [r1], -r2, lsl #8
    1824:	3d2f0620 	stccc	6, cr0, [pc, #-128]!	; 17ac <_Min_Heap_Size+0xfac>
    1828:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    182c:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    1830:	03060305 	movweq	r0, #25349	; 0x6305
    1834:	11052e15 	tstne	r5, r5, lsl lr
    1838:	03050106 	movweq	r0, #20742	; 0x5106
    183c:	415b3f06 	cmpmi	fp, r6, lsl #30
    1840:	595b5b59 	ldmdbpl	fp, {r0, r3, r4, r6, r8, r9, fp, ip, lr}^
    1844:	23063c06 	movwcs	r3, #27654	; 0x6c06
    1848:	0614055b 			; <UNDEFINED> instruction: 0x0614055b
    184c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1850:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1854:	06030501 	streq	r0, [r3], -r1, lsl #10
    1858:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    185c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1860:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1864:	06030501 	streq	r0, [r3], -r1, lsl #10
    1868:	06010522 	streq	r0, [r1], -r2, lsr #10
    186c:	00030513 	andeq	r0, r3, r3, lsl r5
    1870:	03020402 	movweq	r0, #9218	; 0x2402
    1874:	02002048 	andeq	r2, r0, #72	; 0x48
    1878:	00670104 	rsbeq	r0, r7, r4, lsl #2
    187c:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    1880:	6b060505 	blvs	182c9c <_Min_Heap_Size+0x18249c>
    1884:	01061105 	tsteq	r6, r5, lsl #2
    1888:	03060505 	movweq	r0, #25861	; 0x6505
    188c:	0c052e0e 	stceq	14, cr2, [r5], {14}
    1890:	4a640306 	bmi	19024b0 <_Min_Heap_Size+0x1901cb0>
    1894:	3f030105 	svccc	0x00030105
    1898:	00050220 	andeq	r0, r5, r0, lsr #4
    189c:	01050101 	tsteq	r5, r1, lsl #2
    18a0:	00020500 	andeq	r0, r2, r0, lsl #10
    18a4:	03000000 	movweq	r0, #0
    18a8:	050104cf 	streq	r0, [r1, #-1231]	; 0xfffffb31
    18ac:	06051403 	streq	r1, [r5], -r3, lsl #8
    18b0:	01050106 	tsteq	r5, r6, lsl #2
    18b4:	0603053a 			; <UNDEFINED> instruction: 0x0603053a
    18b8:	002e0652 	eoreq	r0, lr, r2, asr r6
    18bc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    18c0:	02040200 	andeq	r0, r4, #0, 4
    18c4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    18c8:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    18cc:	004a0404 	subeq	r0, sl, r4, lsl #8
    18d0:	4a050402 	bmi	1428e0 <_Min_Heap_Size+0x1420e0>
    18d4:	06040200 	streq	r0, [r4], -r0, lsl #4
    18d8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    18dc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    18e0:	06200604 	strteq	r0, [r0], -r4, lsl #12
    18e4:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    18e8:	06200601 	strteq	r0, [r0], -r1, lsl #12
    18ec:	02002f3d 	andeq	r2, r0, #61, 30	; 0xf4
    18f0:	2e060104 	adfcss	f0, f6, f4
    18f4:	02003d06 	andeq	r3, r0, #384	; 0x180
    18f8:	2e060104 	adfcss	f0, f6, f4
    18fc:	0c053e06 	stceq	14, cr3, [r5], {6}
    1900:	06050106 	streq	r0, [r5], -r6, lsl #2
    1904:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1908:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    190c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1910:	5b3f0603 	blpl	fc3124 <_Min_Heap_Size+0xfc2924>
    1914:	595b5941 	ldmdbpl	fp, {r0, r6, r8, fp, ip, lr}^
    1918:	3c06594d 			; <UNDEFINED> instruction: 0x3c06594d
    191c:	055b2306 	ldrbeq	r2, [fp, #-774]	; 0xfffffcfa
    1920:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1924:	052f0603 	streq	r0, [pc, #-1539]!	; 1329 <_Min_Heap_Size+0xb29>
    1928:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    192c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    1930:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1934:	052f0603 	streq	r0, [pc, #-1539]!	; 1339 <_Min_Heap_Size+0xb39>
    1938:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    193c:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    1940:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1944:	04020003 	streq	r0, [r2], #-3
    1948:	20460302 	subcs	r0, r6, r2, lsl #6
    194c:	01040200 	mrseq	r0, R12_usr
    1950:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    1954:	02006702 	andeq	r6, r0, #524288	; 0x80000
    1958:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    195c:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    1960:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1964:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    1968:	060c052e 	streq	r0, [ip], -lr, lsr #10
    196c:	054a6303 	strbeq	r6, [sl, #-771]	; 0xfffffcfd
    1970:	00c10301 	sbceq	r0, r1, r1, lsl #6
    1974:	00060220 	andeq	r0, r6, r0, lsr #4
    1978:	01050101 	tsteq	r5, r1, lsl #2
    197c:	00020500 	andeq	r0, r2, r0, lsl #10
    1980:	03000000 	movweq	r0, #0
    1984:	050105da 	streq	r0, [r1, #-1498]	; 0xfffffa26
    1988:	01051403 	tsteq	r5, r3, lsl #8
    198c:	01021606 	tsteq	r2, r6, lsl #12
    1990:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1994:	02050001 	andeq	r0, r5, #1
    1998:	00000000 	andeq	r0, r0, r0
    199c:	01059d03 	tsteq	r5, r3, lsl #26
    19a0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    19a4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    19a8:	03051e01 	movweq	r1, #24065	; 0x5e01
    19ac:	02003606 	andeq	r3, r0, #6291456	; 0x600000
    19b0:	4a060104 	bmi	181dc8 <_Min_Heap_Size+0x1815c8>
    19b4:	02040200 	andeq	r0, r4, #0, 4
    19b8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    19bc:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    19c0:	004a0404 	subeq	r0, sl, r4, lsl #8
    19c4:	4a050402 	bmi	1429d4 <_Min_Heap_Size+0x1421d4>
    19c8:	06040200 	streq	r0, [r4], -r0, lsl #4
    19cc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    19d0:	30063c06 	andcc	r3, r6, r6, lsl #24
    19d4:	01061105 	tsteq	r6, r5, lsl #2
    19d8:	3f060305 	svccc	0x00060305
    19dc:	3f580b03 	svccc	0x00580b03
    19e0:	01061405 	tsteq	r6, r5, lsl #8
    19e4:	2f060305 	svccs	0x00060305
    19e8:	01061105 	tsteq	r6, r5, lsl #2
    19ec:	2f060305 	svccs	0x00060305
    19f0:	01061205 	tsteq	r6, r5, lsl #4
    19f4:	2f060305 	svccs	0x00060305
    19f8:	01061805 	tsteq	r6, r5, lsl #16
    19fc:	21060305 	tstcs	r6, r5, lsl #6
    1a00:	01061605 	tsteq	r6, r5, lsl #12
    1a04:	23060305 	movwcs	r0, #25349	; 0x6305
    1a08:	05142e01 	ldreq	r2, [r4, #-3585]	; 0xfffff1ff
    1a0c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1a10:	205f030c 	subscs	r0, pc, ip, lsl #6
    1a14:	21030105 	tstcs	r3, r5, lsl #2
    1a18:	00050220 	andeq	r0, r5, r0, lsr #4
    1a1c:	01050101 	tsteq	r5, r1, lsl #2
    1a20:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
    1a24:	0308000c 	movweq	r0, #32780	; 0x800c
    1a28:	060108ef 	streq	r0, [r1], -pc, ror #17
    1a2c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1a30:	1513134b 	ldrne	r1, [r3, #-843]	; 0xfffffcb5
    1a34:	01060c05 	tsteq	r6, r5, lsl #24
    1a38:	2006052e 	andcs	r0, r6, lr, lsr #10
    1a3c:	5a060505 	bpl	182e58 <_Min_Heap_Size+0x182658>
    1a40:	01060805 	tsteq	r6, r5, lsl #16
    1a44:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1a48:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1a4c:	0520220f 	streq	r2, [r0, #-527]!	; 0xfffffdf1
    1a50:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1a54:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1a58:	052f0605 	streq	r0, [pc, #-1541]!	; 145b <_Min_Heap_Size+0xc5b>
    1a5c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1a60:	053f0605 	ldreq	r0, [pc, #-1541]!	; 1463 <_Min_Heap_Size+0xc63>
    1a64:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    1a68:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1a6c:	01061705 	tsteq	r6, r5, lsl #14
    1a70:	2f060505 	svccs	0x00060505
    1a74:	01061805 	tsteq	r6, r5, lsl #16
    1a78:	31060505 	tstcc	r6, r5, lsl #10
    1a7c:	01061505 	tsteq	r6, r5, lsl #10
    1a80:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    1a84:	47054413 	smladmi	r5, r3, r4, r4
    1a88:	01040200 	mrseq	r0, R12_usr
    1a8c:	053c7803 	ldreq	r7, [ip, #-2051]!	; 0xfffff7fd
    1a90:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    1a94:	13052001 	movwne	r2, #20481	; 0x5001
    1a98:	06090528 	streq	r0, [r9], -r8, lsr #10
    1a9c:	06170543 	ldreq	r0, [r7], -r3, asr #10
    1aa0:	06090501 	streq	r0, [r9], -r1, lsl #10
    1aa4:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    1aa8:	06090501 	streq	r0, [r9], -r1, lsl #10
    1aac:	062a0532 			; <UNDEFINED> instruction: 0x062a0532
    1ab0:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    1ab4:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    1ab8:	09052e1d 	stmdbeq	r5, {r0, r2, r3, r4, r9, sl, fp, sp}
    1abc:	07052106 	streq	r2, [r5, -r6, lsl #2]
    1ac0:	060c0519 			; <UNDEFINED> instruction: 0x060c0519
    1ac4:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    1ac8:	03060b05 	movweq	r0, #27397	; 0x6b05
    1acc:	11053c6e 	tstne	r5, lr, ror #24
    1ad0:	0b050106 	bleq	141ef0 <_Min_Heap_Size+0x1416f0>
    1ad4:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1ad8:	060b0522 	streq	r0, [fp], -r2, lsr #10
    1adc:	740a0501 	strvc	r0, [sl], #-1281	; 0xfffffaff
    1ae0:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    1ae4:	01060a05 	tsteq	r6, r5, lsl #20
    1ae8:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    1aec:	01062905 	tsteq	r6, r5, lsl #18
    1af0:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    1af4:	0905201d 	stmdbeq	r5, {r0, r2, r3, r4, sp}
    1af8:	01062106 	tsteq	r6, r6, lsl #2
    1afc:	68031305 	stmdavs	r3, {r0, r2, r8, r9, ip}
    1b00:	05201f20 	streq	r1, [r0, #-3872]!	; 0xfffff0e0
    1b04:	1e030605 	cfmadd32ne	mvax0, mvfx0, mvfx3, mvfx5
    1b08:	06090520 	streq	r0, [r9], -r0, lsr #10
    1b0c:	74080501 	strvc	r0, [r8], #-1281	; 0xfffffaff
    1b10:	28060505 	stmdacs	r6, {r0, r2, r8, sl}
    1b14:	01061305 	tsteq	r6, r5, lsl #6
    1b18:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1b1c:	01060c05 	tsteq	r6, r5, lsl #24
    1b20:	03060705 	movweq	r0, #26373	; 0x6705
    1b24:	15052078 	strne	r2, [r5, #-120]	; 0xffffff88
    1b28:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1b2c:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    1b30:	0c050106 	stfeqs	f0, [r5], {6}
    1b34:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    1b38:	0f052201 	svceq	0x00052201
    1b3c:	203c4303 	eorscs	r4, ip, r3, lsl #6
    1b40:	01000102 	tsteq	r0, r2, lsl #2
    1b44:	00010501 	andeq	r0, r1, r1, lsl #10
    1b48:	00000205 	andeq	r0, r0, r5, lsl #4
    1b4c:	c5030000 	strgt	r0, [r3, #-0]
    1b50:	01060109 	tsteq	r6, r9, lsl #2
    1b54:	4b060305 	blmi	182770 <_Min_Heap_Size+0x181f70>
    1b58:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    1b5c:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    1b60:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    1b64:	055a0605 	ldrbeq	r0, [sl, #-1541]	; 0xfffff9fb
    1b68:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1b6c:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1b70:	0f052e01 	svceq	0x00052e01
    1b74:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    1b78:	16052306 	strne	r2, [r5], -r6, lsl #6
    1b7c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b80:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    1b84:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1b88:	052f0605 	streq	r0, [pc, #-1541]!	; 158b <_Min_Heap_Size+0xd8b>
    1b8c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1b90:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1b94:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    1b98:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1b9c:	01061705 	tsteq	r6, r5, lsl #14
    1ba0:	2f060505 	svccs	0x00060505
    1ba4:	01061805 	tsteq	r6, r5, lsl #16
    1ba8:	31060505 	tstcc	r6, r5, lsl #10
    1bac:	01061505 	tsteq	r6, r5, lsl #10
    1bb0:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    1bb4:	47054413 	smladmi	r5, r3, r4, r4
    1bb8:	01040200 	mrseq	r0, R12_usr
    1bbc:	053c7803 	ldreq	r7, [ip, #-2051]!	; 0xfffff7fd
    1bc0:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    1bc4:	13052001 	movwne	r2, #20481	; 0x5001
    1bc8:	201f3728 	andscs	r3, pc, r8, lsr #14
    1bcc:	03060905 	movweq	r0, #26885	; 0x6905
    1bd0:	1805200e 	stmdane	r5, {r1, r2, r3, sp}
    1bd4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bd8:	10053e06 	andne	r3, r5, r6, lsl #28
    1bdc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1be0:	28053206 	stmdacs	r5, {r1, r2, r9, ip, sp}
    1be4:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    1be8:	20180520 	andscs	r0, r8, r0, lsr #10
    1bec:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    1bf0:	062f0609 	strteq	r0, [pc], -r9, lsl #12
    1bf4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1bf8:	06280526 	strteq	r0, [r8], -r6, lsr #10
    1bfc:	20320501 	eorscs	r0, r2, r1, lsl #10
    1c00:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    1c04:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    1c08:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1c0c:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    1c10:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1c14:	0b052e19 	bleq	14d480 <_Min_Heap_Size+0x14cc80>
    1c18:	3c670306 	stclcc	3, cr0, [r7], #-24	; 0xffffffe8
    1c1c:	01061105 	tsteq	r6, r5, lsl #2
    1c20:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    1c24:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    1c28:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1c2c:	0705740a 	streq	r7, [r5, -sl, lsl #8]
    1c30:	0a053406 	beq	14ec50 <_Min_Heap_Size+0x14e450>
    1c34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1c38:	19053506 	stmdbne	r5, {r1, r2, r8, sl, ip, sp}
    1c3c:	0c050106 	stfeqs	f0, [r5], {6}
    1c40:	003c0520 	eorseq	r0, ip, r0, lsr #10
    1c44:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1c48:	02007e05 	andeq	r7, r0, #5, 28	; 0x50
    1c4c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    1c50:	0402006f 	streq	r0, [r2], #-111	; 0xffffff91
    1c54:	0b052002 	bleq	149c64 <_Min_Heap_Size+0x149464>
    1c58:	28053406 	stmdacs	r5, {r1, r2, sl, ip, sp}
    1c5c:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    1c60:	20190520 	andscs	r0, r9, r0, lsr #10
    1c64:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    1c68:	05360605 	ldreq	r0, [r6, #-1541]!	; 0xfffff9fb
    1c6c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1c70:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1c74:	3201060c 	andcc	r0, r1, #12, 12	; 0xc00000
    1c78:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    1c7c:	3c41030f 	mcrrcc	3, 0, r0, r1, cr15
    1c80:	00010220 	andeq	r0, r1, r0, lsr #4
    1c84:	01050101 	tsteq	r5, r1, lsl #2
    1c88:	00020500 	andeq	r0, r2, r0, lsl #10
    1c8c:	03000000 	movweq	r0, #0
    1c90:	05010a9c 	streq	r0, [r1, #-2716]	; 0xfffff564
    1c94:	0c051403 	cfstrseq	mvf1, [r5], {3}
    1c98:	06050106 	streq	r0, [r5], -r6, lsl #2
    1c9c:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    1ca0:	06080530 			; <UNDEFINED> instruction: 0x06080530
    1ca4:	00190501 	andseq	r0, r9, r1, lsl #10
    1ca8:	20010402 	andcs	r0, r1, r2, lsl #8
    1cac:	25060505 	strcs	r0, [r6, #-1285]	; 0xfffffafb
    1cb0:	01061705 	tsteq	r6, r5, lsl #14
    1cb4:	21060505 	tstcs	r6, r5, lsl #10
    1cb8:	01061705 	tsteq	r6, r5, lsl #14
    1cbc:	21060505 	tstcs	r6, r5, lsl #10
    1cc0:	01061805 	tsteq	r6, r5, lsl #16
    1cc4:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1cc8:	01061605 	tsteq	r6, r5, lsl #12
    1ccc:	2f060505 	svccs	0x00060505
    1cd0:	01061305 	tsteq	r6, r5, lsl #6
    1cd4:	06050520 	streq	r0, [r5], -r0, lsr #10
    1cd8:	06200631 			; <UNDEFINED> instruction: 0x06200631
    1cdc:	060c054c 	streq	r0, [ip], -ip, asr #10
    1ce0:	20242001 	eorcs	r2, r4, r1
    1ce4:	6f030e05 	svcvs	0x00030e05
    1ce8:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    1cec:	20130301 	andscs	r0, r3, r1, lsl #6
    1cf0:	01000102 	tsteq	r0, r2, lsl #2
    1cf4:	00010501 	andeq	r0, r1, r1, lsl #10
    1cf8:	00000205 	andeq	r0, r0, r5, lsl #4
    1cfc:	e3030000 	movw	r0, #12288	; 0x3000
    1d00:	0106010a 	tsteq	r6, sl, lsl #2
    1d04:	21060305 	tstcs	r6, r5, lsl #6
    1d08:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    1d0c:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    1d10:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1d14:	01060805 	tsteq	r6, r5, lsl #16
    1d18:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1d1c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1d20:	0105220e 	tsteq	r5, lr, lsl #4
    1d24:	05202703 	streq	r2, [r0, #-1795]!	; 0xfffff8fd
    1d28:	5c030605 	stcpl	6, cr0, [r3], {5}
    1d2c:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    1d30:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d34:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    1d38:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d3c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1d40:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d44:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    1d48:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d4c:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1d50:	05052001 	streq	r2, [r5, #-1]
    1d54:	0a053106 	beq	14e174 <_Min_Heap_Size+0x14d974>
    1d58:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    1d5c:	06050520 	streq	r0, [r5], -r0, lsr #10
    1d60:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    1d64:	20290501 	eorcs	r0, r9, r1, lsl #10
    1d68:	31060505 	tstcc	r6, r5, lsl #10
    1d6c:	01060a05 	tsteq	r6, r5, lsl #20
    1d70:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    1d74:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    1d78:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1d7c:	05052026 	streq	r2, [r5, #-38]	; 0xffffffda
    1d80:	05132306 	ldreq	r2, [r3, #-774]	; 0xfffffcfa
    1d84:	0501064d 	streq	r0, [r1, #-1613]	; 0xfffff9b3
    1d88:	062e2005 	strteq	r2, [lr], -r5
    1d8c:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    1d90:	02004e01 	andeq	r4, r0, #1, 28
    1d94:	00010104 	andeq	r0, r1, r4, lsl #2
    1d98:	01010402 	tsteq	r1, r2, lsl #8
    1d9c:	01040200 	mrseq	r0, R12_usr
    1da0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1da4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1da8:	78d10301 	ldmvc	r1, {r0, r8, r9}^
    1dac:	00050520 	andeq	r0, r5, r0, lsr #10
    1db0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1db4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1db8:	00140104 	andseq	r0, r4, r4, lsl #2
    1dbc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dc0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1dc4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1dc8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dcc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1dd0:	04020005 	streq	r0, [r2], #-5
    1dd4:	07aa0301 	streq	r0, [sl, r1, lsl #6]!
    1dd8:	04020001 	streq	r0, [r2], #-1
    1ddc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1de0:	001f0502 	andseq	r0, pc, r2, lsl #10
    1de4:	03010402 	movweq	r0, #5122	; 0x1402
    1de8:	05017984 	streq	r7, [r1, #-2436]	; 0xfffff67c
    1dec:	04020004 	streq	r0, [r2], #-4
    1df0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1df4:	00140104 	andseq	r0, r4, r4, lsl #2
    1df8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1dfc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1e00:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1e04:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e08:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1e0c:	04020005 	streq	r0, [r2], #-5
    1e10:	06f70301 	ldrbteq	r0, [r7], r1, lsl #6
    1e14:	300c0501 	andcc	r0, ip, r1, lsl #10
    1e18:	0520162e 	streq	r1, [r0, #-1582]!	; 0xfffff9d2
    1e1c:	205b030e 	subscs	r0, fp, lr, lsl #6
    1e20:	00080220 	andeq	r0, r8, r0, lsr #4
    1e24:	01050101 	tsteq	r5, r1, lsl #2
    1e28:	00020500 	andeq	r0, r2, r0, lsl #10
    1e2c:	03000000 	movweq	r0, #0
    1e30:	05010bbc 	streq	r0, [r1, #-3004]	; 0xfffff444
    1e34:	05141303 	ldreq	r1, [r4, #-771]	; 0xfffffcfd
    1e38:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1e3c:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
    1e40:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1e44:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    1e48:	02040200 	andeq	r0, r4, #0, 4
    1e4c:	03053106 	movweq	r3, #20742	; 0x5106
    1e50:	02040200 	andeq	r0, r4, #0, 4
    1e54:	00100515 	andseq	r0, r0, r5, lsl r5
    1e58:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e5c:	00030501 	andeq	r0, r3, r1, lsl #10
    1e60:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e64:	000d054b 	andeq	r0, sp, fp, asr #10
    1e68:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e6c:	00060501 	andeq	r0, r6, r1, lsl #10
    1e70:	3c020402 	cfstrscc	mvf0, [r2], {2}
    1e74:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1e78:	35060204 	strcc	r0, [r6, #-516]	; 0xfffffdfc
    1e7c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1e80:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    1e84:	04020001 	streq	r0, [r2], #-1
    1e88:	00130602 	andseq	r0, r3, r2, lsl #12
    1e8c:	20020402 	andcs	r0, r2, r2, lsl #8
    1e90:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1e94:	6e030104 	adfvss	f0, f3, f4
    1e98:	00050520 	andeq	r0, r5, r0, lsr #10
    1e9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ea0:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1ea4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1ea8:	00010104 	andeq	r0, r1, r4, lsl #2
    1eac:	01010402 	tsteq	r1, r2, lsl #8
    1eb0:	1f050204 	svcne	0x00050204
    1eb4:	01040200 	mrseq	r0, R12_usr
    1eb8:	20789803 	rsbscs	r9, r8, r3, lsl #16
    1ebc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1ec0:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1ec4:	04020004 	streq	r0, [r2], #-4
    1ec8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1ecc:	2e060104 	adfcss	f0, f6, f4
    1ed0:	01040200 	mrseq	r0, R12_usr
    1ed4:	02002f06 	andeq	r2, r0, #6, 30
    1ed8:	01060104 	tsteq	r6, r4, lsl #2
    1edc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1ee0:	01040200 	mrseq	r0, R12_usr
    1ee4:	0107e303 	tsteq	r7, r3, lsl #6
    1ee8:	01040200 	mrseq	r0, R12_usr
    1eec:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    1ef0:	02001f05 	andeq	r1, r0, #5, 30
    1ef4:	cb030104 	blgt	c230c <_Min_Heap_Size+0xc1b0c>
    1ef8:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    1efc:	01040200 	mrseq	r0, R12_usr
    1f00:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f04:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1f08:	20060104 	andcs	r0, r6, r4, lsl #2
    1f0c:	01040200 	mrseq	r0, R12_usr
    1f10:	02002f06 	andeq	r2, r0, #6, 30
    1f14:	01060104 	tsteq	r6, r4, lsl #2
    1f18:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1f1c:	01040200 	mrseq	r0, R12_usr
    1f20:	0107b003 	tsteq	r7, r3
    1f24:	01040200 	mrseq	r0, R12_usr
    1f28:	0032053c 	eorseq	r0, r2, ip, lsr r5
    1f2c:	16010402 	strne	r0, [r1], -r2, lsl #8
    1f30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1f34:	31060104 	tstcc	r6, r4, lsl #2
    1f38:	01040200 	mrseq	r0, R12_usr
    1f3c:	04020001 	streq	r0, [r2], #-1
    1f40:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1f44:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1f48:	001f0502 	andseq	r0, pc, r2, lsl #10
    1f4c:	03010402 	movweq	r0, #5122	; 0x1402
    1f50:	05207891 	streq	r7, [r0, #-2193]!	; 0xfffff76f
    1f54:	04020005 	streq	r0, [r2], #-5
    1f58:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1f5c:	01040200 	mrseq	r0, R12_usr
    1f60:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f64:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1f68:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f6c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1f70:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1f74:	00050501 	andeq	r0, r5, r1, lsl #10
    1f78:	03010402 	movweq	r0, #5122	; 0x1402
    1f7c:	000107ea 	andeq	r0, r1, sl, ror #15
    1f80:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f84:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1f88:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1f8c:	78c40301 	stmiavc	r4, {r0, r8, r9}^
    1f90:	00040501 	andeq	r0, r4, r1, lsl #10
    1f94:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1f98:	01040200 	mrseq	r0, R12_usr
    1f9c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1fa0:	00200601 	eoreq	r0, r0, r1, lsl #12
    1fa4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1fa8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1fac:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1fb0:	00050501 	andeq	r0, r5, r1, lsl #10
    1fb4:	03010402 	movweq	r0, #5122	; 0x1402
    1fb8:	000107b7 			; <UNDEFINED> instruction: 0x000107b7
    1fbc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1fc0:	01040200 	mrseq	r0, R12_usr
    1fc4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1fc8:	00130104 	andseq	r0, r3, r4, lsl #2
    1fcc:	01010402 	tsteq	r1, r2, lsl #8
    1fd0:	01040200 	mrseq	r0, R12_usr
    1fd4:	04020001 	streq	r0, [r2], #-1
    1fd8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1fdc:	02001f05 	andeq	r1, r0, #5, 30
    1fe0:	90030104 	andls	r0, r3, r4, lsl #2
    1fe4:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    1fe8:	01040200 	mrseq	r0, R12_usr
    1fec:	00040514 	andeq	r0, r4, r4, lsl r5
    1ff0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1ff4:	01040200 	mrseq	r0, R12_usr
    1ff8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1ffc:	2f060104 	svccs	0x00060104
    2000:	01040200 	mrseq	r0, R12_usr
    2004:	01040106 	tsteq	r4, r6, lsl #2
    2008:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    200c:	eb030104 	bl	c2424 <_Min_Heap_Size+0xc1c24>
    2010:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2014:	2e060104 	adfcss	f0, f6, f4
    2018:	1f050204 	svcne	0x00050204
    201c:	01040200 	mrseq	r0, R12_usr
    2020:	0178c303 	cmneq	r8, r3, lsl #6
    2024:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2028:	00140104 	andseq	r0, r4, r4, lsl #2
    202c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2030:	01040200 	mrseq	r0, R12_usr
    2034:	02002006 	andeq	r2, r0, #6
    2038:	2f060104 	svccs	0x00060104
    203c:	01040200 	mrseq	r0, R12_usr
    2040:	01040106 	tsteq	r4, r6, lsl #2
    2044:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2048:	b8030104 	stmdalt	r3, {r2, r8}
    204c:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2050:	002e0104 	eoreq	r0, lr, r4, lsl #2
    2054:	06010402 	streq	r0, [r1], -r2, lsl #8
    2058:	04020001 	streq	r0, [r2], #-1
    205c:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    2060:	00010104 	andeq	r0, r1, r4, lsl #2
    2064:	01010402 	tsteq	r1, r2, lsl #8
    2068:	01040200 	mrseq	r0, R12_usr
    206c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2070:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2074:	788d0301 	stmvc	sp, {r0, r8, r9}
    2078:	00050520 	andeq	r0, r5, r0, lsr #10
    207c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2080:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2084:	00140104 	andseq	r0, r4, r4, lsl #2
    2088:	06010402 	streq	r0, [r1], -r2, lsl #8
    208c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2090:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2094:	06010402 	streq	r0, [r1], -r2, lsl #8
    2098:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    209c:	04020005 	streq	r0, [r2], #-5
    20a0:	07ee0301 	strbeq	r0, [lr, r1, lsl #6]!
    20a4:	04020001 	streq	r0, [r2], #-1
    20a8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    20ac:	001f0502 	andseq	r0, pc, r2, lsl #10
    20b0:	03010402 	movweq	r0, #5122	; 0x1402
    20b4:	050178c0 	streq	r7, [r1, #-2240]	; 0xfffff740
    20b8:	04020004 	streq	r0, [r2], #-4
    20bc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    20c0:	00140104 	andseq	r0, r4, r4, lsl #2
    20c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    20c8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    20cc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    20d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    20d4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    20d8:	04020005 	streq	r0, [r2], #-5
    20dc:	07bb0301 	ldreq	r0, [fp, r1, lsl #6]!
    20e0:	00030201 	andeq	r0, r3, r1, lsl #4
    20e4:	01050101 	tsteq	r5, r1, lsl #2
    20e8:	00020500 	andeq	r0, r2, r0, lsl #10
    20ec:	03000000 	movweq	r0, #0
    20f0:	05010bdb 	streq	r0, [r1, #-3035]	; 0xfffff425
    20f4:	0c051403 	cfstrseq	mvf1, [r5], {3}
    20f8:	06050106 	streq	r0, [r5], -r6, lsl #2
    20fc:	0005053c 	andeq	r0, r5, ip, lsr r5
    2100:	06020402 	streq	r0, [r2], -r2, lsl #8
    2104:	00030531 	andeq	r0, r3, r1, lsr r5
    2108:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    210c:	02000c05 	andeq	r0, r0, #1280	; 0x500
    2110:	01060204 	tsteq	r6, r4, lsl #4
    2114:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2118:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    211c:	0d030605 	stceq	6, cr0, [r3, #-20]	; 0xffffffec
    2120:	1503052e 	strne	r0, [r3, #-1326]	; 0xfffffad2
    2124:	13060105 	movwne	r0, #24837	; 0x6105
    2128:	00050520 	andeq	r0, r5, r0, lsr #10
    212c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2130:	00206c03 	eoreq	r6, r0, r3, lsl #24
    2134:	01010402 	tsteq	r1, r2, lsl #8
    2138:	01040200 	mrseq	r0, R12_usr
    213c:	04020001 	streq	r0, [r2], #-1
    2140:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2144:	02001f05 	andeq	r1, r0, #5, 30
    2148:	fb030104 	blx	c2562 <_Min_Heap_Size+0xc1d62>
    214c:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    2150:	01040200 	mrseq	r0, R12_usr
    2154:	00040514 	andeq	r0, r4, r4, lsl r5
    2158:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    215c:	01040200 	mrseq	r0, R12_usr
    2160:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2164:	2f060104 	svccs	0x00060104
    2168:	01040200 	mrseq	r0, R12_usr
    216c:	01040106 	tsteq	r4, r6, lsl #2
    2170:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2174:	80030104 	andhi	r0, r3, r4, lsl #2
    2178:	02000108 	andeq	r0, r0, #8, 2
    217c:	2e060104 	adfcss	f0, f6, f4
    2180:	1f050204 	svcne	0x00050204
    2184:	01040200 	mrseq	r0, R12_usr
    2188:	0178ae03 	cmneq	r8, r3, lsl #28
    218c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2190:	00140104 	andseq	r0, r4, r4, lsl #2
    2194:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2198:	01040200 	mrseq	r0, R12_usr
    219c:	02002006 	andeq	r2, r0, #6
    21a0:	2f060104 	svccs	0x00060104
    21a4:	01040200 	mrseq	r0, R12_usr
    21a8:	01040106 	tsteq	r4, r6, lsl #2
    21ac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    21b0:	cd030104 	stfgts	f0, [r3, #-16]
    21b4:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    21b8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    21bc:	05050d01 	streq	r0, [r5, #-3329]	; 0xfffff2ff
    21c0:	200b0306 	andcs	r0, fp, r6, lsl #6
    21c4:	2e3c2e01 	cdpcs	14, 3, cr2, cr12, cr1, {0}
    21c8:	14051520 	strne	r1, [r5], #-1312	; 0xfffffae0
    21cc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    21d0:	00070520 	andeq	r0, r7, r0, lsr #10
    21d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    21d8:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    21dc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    21e0:	00010104 	andeq	r0, r1, r4, lsl #2
    21e4:	01010402 	tsteq	r1, r2, lsl #8
    21e8:	1f050204 	svcne	0x00050204
    21ec:	01040200 	mrseq	r0, R12_usr
    21f0:	2077f003 	rsbscs	pc, r7, r3
    21f4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    21f8:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    21fc:	04020004 	streq	r0, [r2], #-4
    2200:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2204:	2e060104 	adfcss	f0, f6, f4
    2208:	01040200 	mrseq	r0, R12_usr
    220c:	02002f06 	andeq	r2, r0, #6, 30
    2210:	01060104 	tsteq	r6, r4, lsl #2
    2214:	07050104 	streq	r0, [r5, -r4, lsl #2]
    2218:	01040200 	mrseq	r0, R12_usr
    221c:	01088b03 	tsteq	r8, r3, lsl #22
    2220:	01040200 	mrseq	r0, R12_usr
    2224:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2228:	02001f05 	andeq	r1, r0, #5, 30
    222c:	a3030104 	movwge	r0, #12548	; 0x3104
    2230:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    2234:	01040200 	mrseq	r0, R12_usr
    2238:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    223c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2240:	20060104 	andcs	r0, r6, r4, lsl #2
    2244:	01040200 	mrseq	r0, R12_usr
    2248:	02002f06 	andeq	r2, r0, #6, 30
    224c:	01060104 	tsteq	r6, r4, lsl #2
    2250:	07050104 	streq	r0, [r5, -r4, lsl #2]
    2254:	01040200 	mrseq	r0, R12_usr
    2258:	0107d803 	tsteq	r7, r3, lsl #16
    225c:	01040200 	mrseq	r0, R12_usr
    2260:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2264:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2268:	04020005 	streq	r0, [r2], #-5
    226c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2270:	00010104 	andeq	r0, r1, r4, lsl #2
    2274:	01010402 	tsteq	r1, r2, lsl #8
    2278:	01040200 	mrseq	r0, R12_usr
    227c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2280:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2284:	77ee0301 	strbvc	r0, [lr, r1, lsl #6]!
    2288:	00050520 	andeq	r0, r5, r0, lsr #10
    228c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2290:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2294:	00140104 	andseq	r0, r4, r4, lsl #2
    2298:	06010402 	streq	r0, [r1], -r2, lsl #8
    229c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    22a0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    22a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    22a8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    22ac:	04020005 	streq	r0, [r2], #-5
    22b0:	088d0301 	stmeq	sp, {r0, r8, r9}
    22b4:	04020001 	streq	r0, [r2], #-1
    22b8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    22bc:	001f0502 	andseq	r0, pc, r2, lsl #10
    22c0:	03010402 	movweq	r0, #5122	; 0x1402
    22c4:	050178a1 	streq	r7, [r1, #-2209]	; 0xfffff75f
    22c8:	04020004 	streq	r0, [r2], #-4
    22cc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    22d0:	00140104 	andseq	r0, r4, r4, lsl #2
    22d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    22d8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    22dc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    22e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    22e4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    22e8:	04020005 	streq	r0, [r2], #-5
    22ec:	07da0301 	ldrbeq	r0, [sl, r1, lsl #6]
    22f0:	04020001 	streq	r0, [r2], #-1
    22f4:	02002e01 	andeq	r2, r0, #1, 28
    22f8:	01060104 	tsteq	r6, r4, lsl #2
    22fc:	01040200 	mrseq	r0, R12_usr
    2300:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    2304:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2308:	00010104 	andeq	r0, r1, r4, lsl #2
    230c:	01010402 	tsteq	r1, r2, lsl #8
    2310:	1f050204 	svcne	0x00050204
    2314:	01040200 	mrseq	r0, R12_usr
    2318:	2077eb03 	rsbscs	lr, r7, r3, lsl #22
    231c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2320:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2324:	04020004 	streq	r0, [r2], #-4
    2328:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    232c:	2e060104 	adfcss	f0, f6, f4
    2330:	01040200 	mrseq	r0, R12_usr
    2334:	02002f06 	andeq	r2, r0, #6, 30
    2338:	01060104 	tsteq	r6, r4, lsl #2
    233c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2340:	01040200 	mrseq	r0, R12_usr
    2344:	01089003 	tsteq	r8, r3
    2348:	01040200 	mrseq	r0, R12_usr
    234c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2350:	02001f05 	andeq	r1, r0, #5, 30
    2354:	9e030104 	adflss	f0, f3, f4
    2358:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    235c:	01040200 	mrseq	r0, R12_usr
    2360:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2364:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2368:	20060104 	andcs	r0, r6, r4, lsl #2
    236c:	01040200 	mrseq	r0, R12_usr
    2370:	02002f06 	andeq	r2, r0, #6, 30
    2374:	01060104 	tsteq	r6, r4, lsl #2
    2378:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    237c:	01040200 	mrseq	r0, R12_usr
    2380:	0107dd03 	tsteq	r7, r3, lsl #26
    2384:	02040200 	andeq	r0, r4, #0, 4
    2388:	03052e06 	movweq	r2, #24070	; 0x5e06
    238c:	02040200 	andeq	r0, r4, #0, 4
    2390:	00010515 	andeq	r0, r1, r5, lsl r5
    2394:	06020402 	streq	r0, [r2], -r2, lsl #8
    2398:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    239c:	02022002 	andeq	r2, r2, #2
    23a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    23a4:	02050001 	andeq	r0, r5, #1
    23a8:	00000000 	andeq	r0, r0, r0
    23ac:	010bfd03 	tsteq	fp, r3, lsl #26	; <UNPREDICTABLE>
    23b0:	03050106 	movweq	r0, #20742	; 0x5106
    23b4:	051a2f06 	ldreq	r2, [sl, #-3846]	; 0xfffff0fa
    23b8:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    23bc:	052f0603 	streq	r0, [pc, #-1539]!	; 1dc1 <_Min_Heap_Size+0x15c1>
    23c0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    23c4:	03053c06 	movweq	r3, #23558	; 0x5c06
    23c8:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    23cc:	01061005 	tsteq	r6, r5
    23d0:	4b060305 	blmi	182fec <_Min_Heap_Size+0x1827ec>
    23d4:	01060d05 	tsteq	r6, r5, lsl #26
    23d8:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    23dc:	0c030603 	stceq	6, cr0, [r3], {3}
    23e0:	0601052e 	streq	r0, [r1], -lr, lsr #10
    23e4:	31052e13 	tstcc	r5, r3, lsl lr
    23e8:	01040200 	mrseq	r0, R12_usr
    23ec:	052e6503 	streq	r6, [lr, #-1283]!	; 0xfffffafd
    23f0:	04020005 	streq	r0, [r2], #-5
    23f4:	00300601 	eorseq	r0, r0, r1, lsl #12
    23f8:	01010402 	tsteq	r1, r2, lsl #8
    23fc:	01040200 	mrseq	r0, R12_usr
    2400:	04020001 	streq	r0, [r2], #-1
    2404:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2408:	02001f05 	andeq	r1, r0, #5, 30
    240c:	d2030104 	andle	r0, r3, #4, 2
    2410:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    2414:	01040200 	mrseq	r0, R12_usr
    2418:	00040514 	andeq	r0, r4, r4, lsl r5
    241c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2420:	01040200 	mrseq	r0, R12_usr
    2424:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2428:	2f060104 	svccs	0x00060104
    242c:	01040200 	mrseq	r0, R12_usr
    2430:	01040106 	tsteq	r4, r6, lsl #2
    2434:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2438:	a9030104 	stmdbge	r3, {r2, r8}
    243c:	02000108 	andeq	r0, r0, #8, 2
    2440:	2e060104 	adfcss	f0, f6, f4
    2444:	1f050204 	svcne	0x00050204
    2448:	01040200 	mrseq	r0, R12_usr
    244c:	01788503 	cmneq	r8, r3, lsl #10
    2450:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2454:	00140104 	andseq	r0, r4, r4, lsl #2
    2458:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    245c:	01040200 	mrseq	r0, R12_usr
    2460:	02002006 	andeq	r2, r0, #6
    2464:	2f060104 	svccs	0x00060104
    2468:	01040200 	mrseq	r0, R12_usr
    246c:	01040106 	tsteq	r4, r6, lsl #2
    2470:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2474:	f6030104 			; <UNDEFINED> instruction: 0xf6030104
    2478:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    247c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2480:	02040200 	andeq	r0, r4, #0, 4
    2484:	000e0515 	andeq	r0, lr, r5, lsl r5
    2488:	06020402 	streq	r0, [r2], -r2, lsl #8
    248c:	00080501 	andeq	r0, r8, r1, lsl #10
    2490:	20020402 	andcs	r0, r2, r2, lsl #8
    2494:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    2498:	05300505 	ldreq	r0, [r0, #-1285]!	; 0xfffffafb
    249c:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    24a0:	054f0601 	strbeq	r0, [pc, #-1537]	; 1ea7 <_Min_Heap_Size+0x16a7>
    24a4:	04020005 	streq	r0, [r2], #-5
    24a8:	00300601 	eorseq	r0, r0, r1, lsl #12
    24ac:	01010402 	tsteq	r1, r2, lsl #8
    24b0:	01040200 	mrseq	r0, R12_usr
    24b4:	04020001 	streq	r0, [r2], #-1
    24b8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    24bc:	02001f05 	andeq	r1, r0, #5, 30
    24c0:	c4030104 	strgt	r0, [r3], #-260	; 0xfffffefc
    24c4:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    24c8:	01040200 	mrseq	r0, R12_usr
    24cc:	00040514 	andeq	r0, r4, r4, lsl r5
    24d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    24d4:	01040200 	mrseq	r0, R12_usr
    24d8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    24dc:	2f060104 	svccs	0x00060104
    24e0:	01040200 	mrseq	r0, R12_usr
    24e4:	01040106 	tsteq	r4, r6, lsl #2
    24e8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    24ec:	b7030104 	strlt	r0, [r3, -r4, lsl #2]
    24f0:	02000108 	andeq	r0, r0, #8, 2
    24f4:	2e060104 	adfcss	f0, f6, f4
    24f8:	1f050204 	svcne	0x00050204
    24fc:	01040200 	mrseq	r0, R12_usr
    2500:	0177f703 	cmneq	r7, r3, lsl #14	; <UNPREDICTABLE>
    2504:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2508:	00140104 	andseq	r0, r4, r4, lsl #2
    250c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2510:	01040200 	mrseq	r0, R12_usr
    2514:	02002006 	andeq	r2, r0, #6
    2518:	2f060104 	svccs	0x00060104
    251c:	01040200 	mrseq	r0, R12_usr
    2520:	01040106 	tsteq	r4, r6, lsl #2
    2524:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2528:	84030104 	strhi	r0, [r3], #-260	; 0xfffffefc
    252c:	02000108 	andeq	r0, r0, #8, 2
    2530:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2534:	02040200 	andeq	r0, r4, #0, 4
    2538:	000e0515 	andeq	r0, lr, r5, lsl r5
    253c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2540:	00080501 	andeq	r0, r8, r1, lsl #10
    2544:	20020402 	andcs	r0, r2, r2, lsl #8
    2548:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    254c:	02300505 	eorseq	r0, r0, #20971520	; 0x1400000
    2550:	01010004 	tsteq	r1, r4
    2554:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2558:	00000002 	andeq	r0, r0, r2
    255c:	0cb50300 	ldceq	3, cr0, [r5]
    2560:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2564:	13590603 	cmpne	r9, #3145728	; 0x300000
    2568:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    256c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2570:	05052006 	streq	r2, [r5, #-6]
    2574:	08055a06 	stmdaeq	r5, {r1, r2, r9, fp, ip, lr}
    2578:	19050106 	stmdbne	r5, {r1, r2, r8}
    257c:	01040200 	mrseq	r0, R12_usr
    2580:	220f052e 	andcs	r0, pc, #192937984	; 0xb800000
    2584:	06050520 	streq	r0, [r5], -r0, lsr #10
    2588:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    258c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2590:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    2594:	05052001 	streq	r2, [r5, #-1]
    2598:	1a052f06 	bne	14e1b8 <_Min_Heap_Size+0x14d9b8>
    259c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25a0:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    25a4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    25a8:	11052306 	tstne	r5, r6, lsl #6
    25ac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    25b0:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    25b4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    25b8:	052f0605 	streq	r0, [pc, #-1541]!	; 1fbb <_Min_Heap_Size+0x17bb>
    25bc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    25c0:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    25c4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    25c8:	13052008 	movwne	r2, #20488	; 0x5008
    25cc:	06050544 	streq	r0, [r5], -r4, asr #10
    25d0:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    25d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    25d8:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    25dc:	00470501 	subeq	r0, r7, r1, lsl #10
    25e0:	03010402 	movweq	r0, #5122	; 0x1402
    25e4:	38052071 	stmdacc	r5, {r0, r4, r5, r6, sp}
    25e8:	01040200 	mrseq	r0, R12_usr
    25ec:	28130520 	ldmdacs	r3, {r5, r8, sl}
    25f0:	05201f37 	streq	r1, [r0, #-3895]!	; 0xfffff0c9
    25f4:	1903060b 	stmdbne	r3, {r0, r1, r3, r9, sl}
    25f8:	061e0520 	ldreq	r0, [lr], -r0, lsr #10
    25fc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2600:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    2604:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2608:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    260c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2610:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    2614:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    2618:	1805201a 	stmdane	r5, {r1, r3, r4, sp}
    261c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    2620:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    2624:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    2628:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    262c:	0b052019 	bleq	14a698 <_Min_Heap_Size+0x149e98>
    2630:	15052706 	strne	r2, [r5, #-1798]	; 0xfffff8fa
    2634:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2638:	10052306 	andne	r2, r5, r6, lsl #6
    263c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2640:	0e053d06 	cdpeq	13, 0, cr3, cr5, cr6, {0}
    2644:	1b050106 	blne	142a64 <_Min_Heap_Size+0x142264>
    2648:	0607052e 	streq	r0, [r7], -lr, lsr #10
    264c:	060a0540 	streq	r0, [sl], -r0, asr #10
    2650:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2654:	053c5203 	ldreq	r5, [ip, #-515]!	; 0xfffffdfd
    2658:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    265c:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
    2660:	0b053106 	bleq	14ea80 <_Min_Heap_Size+0x14e280>
    2664:	0a050106 	beq	142a84 <_Min_Heap_Size+0x142284>
    2668:	0609052e 	streq	r0, [r9], -lr, lsr #10
    266c:	2e2e013f 	mcrcs	1, 1, r0, cr14, cr15, {1}
    2670:	0516202e 	ldreq	r2, [r6, #-46]	; 0xffffffd2
    2674:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2678:	0705200c 	streq	r2, [r5, -ip]
    267c:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    2680:	01060b05 	tsteq	r6, r5, lsl #22
    2684:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    2688:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    268c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2690:	0535060b 	ldreq	r0, [r5, #-1547]!	; 0xfffff9f5
    2694:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    2698:	3e05200e 	cdpcc	0, 0, cr2, cr5, cr14, {0}
    269c:	01040200 	mrseq	r0, R12_usr
    26a0:	0180053c 	orreq	r0, r0, ip, lsr r5
    26a4:	02040200 	andeq	r0, r4, #0, 4
    26a8:	00710520 	rsbseq	r0, r1, r0, lsr #10
    26ac:	20020402 	andcs	r0, r2, r2, lsl #8
    26b0:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    26b4:	01063405 	tsteq	r6, r5, lsl #8
    26b8:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    26bc:	09052e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, sp}
    26c0:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    26c4:	01060f05 	tsteq	r6, r5, lsl #30
    26c8:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    26cc:	35052e0c 	strcc	r2, [r5, #-3596]	; 0xfffff1f4
    26d0:	01040200 	mrseq	r0, R12_usr
    26d4:	060b052e 	streq	r0, [fp], -lr, lsr #10
    26d8:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    26dc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    26e0:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    26e4:	06050501 	streq	r0, [r5], -r1, lsl #10
    26e8:	06130534 			; <UNDEFINED> instruction: 0x06130534
    26ec:	20270501 	eorcs	r0, r7, r1, lsl #10
    26f0:	052e2005 	streq	r2, [lr, #-5]!
    26f4:	0505200c 	streq	r2, [r5, #-12]
    26f8:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    26fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2700:	0c053e06 	stceq	14, cr3, [r5], {6}
    2704:	05320106 	ldreq	r0, [r2, #-262]!	; 0xfffffefa
    2708:	0f052201 	svceq	0x00052201
    270c:	3c7f9e03 	ldclcc	14, cr9, [pc], #-12	; 2708 <_Min_Heap_Size+0x1f08>
    2710:	00010220 	andeq	r0, r1, r0, lsr #4
    2714:	01050101 	tsteq	r5, r1, lsl #2
    2718:	00020500 	andeq	r0, r2, r0, lsl #10
    271c:	03000000 	movweq	r0, #0
    2720:	05010eb1 	streq	r0, [r1, #-3761]	; 0xfffff14f
    2724:	0f051403 	svceq	0x00051403
    2728:	01050106 	tsteq	r5, r6, lsl #2
    272c:	00010221 	andeq	r0, r1, r1, lsr #4
    2730:	01050101 	tsteq	r5, r1, lsl #2
    2734:	00020500 	andeq	r0, r2, r0, lsl #10
    2738:	03000000 	movweq	r0, #0
    273c:	06010ec3 	streq	r0, [r1], -r3, asr #29
    2740:	00030501 	andeq	r0, r3, r1, lsl #10
    2744:	06010402 	streq	r0, [r1], -r2, lsl #8
    2748:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    274c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2750:	00010104 	andeq	r0, r1, r4, lsl #2
    2754:	01010402 	tsteq	r1, r2, lsl #8
    2758:	1f050204 	svcne	0x00050204
    275c:	01040200 	mrseq	r0, R12_usr
    2760:	20759603 	rsbscs	r9, r5, r3, lsl #12
    2764:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2768:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    276c:	04020004 	streq	r0, [r2], #-4
    2770:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2774:	2e060104 	adfcss	f0, f6, f4
    2778:	01040200 	mrseq	r0, R12_usr
    277c:	02002f06 	andeq	r2, r0, #6, 30
    2780:	01060104 	tsteq	r6, r4, lsl #2
    2784:	03050104 	movweq	r0, #20740	; 0x5104
    2788:	01040200 	mrseq	r0, R12_usr
    278c:	010ae503 	tsteq	sl, r3, lsl #10
    2790:	01040200 	mrseq	r0, R12_usr
    2794:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2798:	02001f05 	andeq	r1, r0, #5, 30
    279c:	c9030104 	stmdbgt	r3, {r2, r8}
    27a0:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    27a4:	01040200 	mrseq	r0, R12_usr
    27a8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    27ac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    27b0:	20060104 	andcs	r0, r6, r4, lsl #2
    27b4:	01040200 	mrseq	r0, R12_usr
    27b8:	02002f06 	andeq	r2, r0, #6, 30
    27bc:	01060104 	tsteq	r6, r4, lsl #2
    27c0:	03050104 	movweq	r0, #20740	; 0x5104
    27c4:	01040200 	mrseq	r0, R12_usr
    27c8:	010ab203 	tsteq	sl, r3, lsl #4
    27cc:	01040200 	mrseq	r0, R12_usr
    27d0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    27d4:	00010601 	andeq	r0, r1, r1, lsl #12
    27d8:	13010402 	movwne	r0, #5122	; 0x1402
    27dc:	01040200 	mrseq	r0, R12_usr
    27e0:	04020001 	streq	r0, [r2], #-1
    27e4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    27e8:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    27ec:	001f0502 	andseq	r0, pc, r2, lsl #10
    27f0:	03010402 	movweq	r0, #5122	; 0x1402
    27f4:	05207595 	streq	r7, [r0, #-1429]!	; 0xfffffa6b
    27f8:	04020005 	streq	r0, [r2], #-5
    27fc:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2800:	01040200 	mrseq	r0, R12_usr
    2804:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2808:	002e0601 	eoreq	r0, lr, r1, lsl #12
    280c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2810:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2814:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2818:	00030501 	andeq	r0, r3, r1, lsl #10
    281c:	03010402 	movweq	r0, #5122	; 0x1402
    2820:	00010ae6 	andeq	r0, r1, r6, ror #21
    2824:	06010402 	streq	r0, [r1], -r2, lsl #8
    2828:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    282c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2830:	75c80301 	strbvc	r0, [r8, #769]	; 0x301
    2834:	00040501 	andeq	r0, r4, r1, lsl #10
    2838:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    283c:	01040200 	mrseq	r0, R12_usr
    2840:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2844:	00200601 	eoreq	r0, r0, r1, lsl #12
    2848:	06010402 	streq	r0, [r1], -r2, lsl #8
    284c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2850:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2854:	00030501 	andeq	r0, r3, r1, lsl #10
    2858:	03010402 	movweq	r0, #5122	; 0x1402
    285c:	00010ab3 			; <UNDEFINED> instruction: 0x00010ab3
    2860:	06020402 	streq	r0, [r2], -r2, lsl #8
    2864:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2868:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    286c:	02040200 	andeq	r0, r4, #0, 4
    2870:	06050106 	streq	r0, [r5], -r6, lsl #2
    2874:	02040200 	andeq	r0, r4, #0, 4
    2878:	00050520 	andeq	r0, r5, r0, lsr #10
    287c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2880:	00030530 	andeq	r0, r3, r0, lsr r5
    2884:	16020402 	strne	r0, [r2], -r2, lsl #8
    2888:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    288c:	01060204 	tsteq	r6, r4, lsl #4
    2890:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2894:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2898:	04020005 	streq	r0, [r2], #-5
    289c:	003e0601 	eorseq	r0, lr, r1, lsl #12
    28a0:	01010402 	tsteq	r1, r2, lsl #8
    28a4:	01040200 	mrseq	r0, R12_usr
    28a8:	04020001 	streq	r0, [r2], #-1
    28ac:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    28b0:	02001f05 	andeq	r1, r0, #5, 30
    28b4:	8a030104 	bhi	c2ccc <_Min_Heap_Size+0xc24cc>
    28b8:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    28bc:	01040200 	mrseq	r0, R12_usr
    28c0:	00040514 	andeq	r0, r4, r4, lsl r5
    28c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    28c8:	01040200 	mrseq	r0, R12_usr
    28cc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    28d0:	2f060104 	svccs	0x00060104
    28d4:	01040200 	mrseq	r0, R12_usr
    28d8:	01040106 	tsteq	r4, r6, lsl #2
    28dc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    28e0:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    28e4:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    28e8:	2e060104 	adfcss	f0, f6, f4
    28ec:	1f050204 	svcne	0x00050204
    28f0:	01040200 	mrseq	r0, R12_usr
    28f4:	0175bd03 	cmneq	r5, r3, lsl #26
    28f8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    28fc:	00140104 	andseq	r0, r4, r4, lsl #2
    2900:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2904:	01040200 	mrseq	r0, R12_usr
    2908:	02002006 	andeq	r2, r0, #6
    290c:	2f060104 	svccs	0x00060104
    2910:	01040200 	mrseq	r0, R12_usr
    2914:	01040106 	tsteq	r4, r6, lsl #2
    2918:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    291c:	be030104 	adflts	f0, f3, f4
    2920:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2924:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2928:	02040200 	andeq	r0, r4, #0, 4
    292c:	000e0515 	andeq	r0, lr, r5, lsl r5
    2930:	06020402 	streq	r0, [r2], -r2, lsl #8
    2934:	00080501 	andeq	r0, r8, r1, lsl #10
    2938:	20020402 	andcs	r0, r2, r2, lsl #8
    293c:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    2940:	01062805 	tsteq	r6, r5, lsl #16
    2944:	30060705 	andcc	r0, r6, r5, lsl #14
    2948:	01060b05 	tsteq	r6, r5, lsl #22
    294c:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    2950:	03060305 	movweq	r0, #25349	; 0x6305
    2954:	0705200e 	streq	r2, [r5, -lr]
    2958:	06050106 	streq	r0, [r5], -r6, lsl #2
    295c:	0005052e 	andeq	r0, r5, lr, lsr #10
    2960:	06010402 	streq	r0, [r1], -r2, lsl #8
    2964:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    2968:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    296c:	00010104 	andeq	r0, r1, r4, lsl #2
    2970:	01010402 	tsteq	r1, r2, lsl #8
    2974:	1f050204 	svcne	0x00050204
    2978:	01040200 	mrseq	r0, R12_usr
    297c:	2074f103 	rsbscs	pc, r4, r3, lsl #2
    2980:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2984:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2988:	04020004 	streq	r0, [r2], #-4
    298c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2990:	2e060104 	adfcss	f0, f6, f4
    2994:	01040200 	mrseq	r0, R12_usr
    2998:	02002f06 	andeq	r2, r0, #6, 30
    299c:	01060104 	tsteq	r6, r4, lsl #2
    29a0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    29a4:	01040200 	mrseq	r0, R12_usr
    29a8:	010b8a03 	tsteq	fp, r3, lsl #20
    29ac:	01040200 	mrseq	r0, R12_usr
    29b0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    29b4:	02001f05 	andeq	r1, r0, #5, 30
    29b8:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
    29bc:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    29c0:	01040200 	mrseq	r0, R12_usr
    29c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    29c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    29cc:	20060104 	andcs	r0, r6, r4, lsl #2
    29d0:	01040200 	mrseq	r0, R12_usr
    29d4:	02002f06 	andeq	r2, r0, #6, 30
    29d8:	01060104 	tsteq	r6, r4, lsl #2
    29dc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    29e0:	01040200 	mrseq	r0, R12_usr
    29e4:	010ad703 	tsteq	sl, r3, lsl #14
    29e8:	02040200 	andeq	r0, r4, #0, 4
    29ec:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    29f0:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    29f4:	0402000e 	streq	r0, [r2], #-14
    29f8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    29fc:	04020008 	streq	r0, [r2], #-8
    2a00:	07052002 	streq	r2, [r5, -r2]
    2a04:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    2a08:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2a0c:	0b053006 	bleq	14ea2c <_Min_Heap_Size+0x14e22c>
    2a10:	0a050106 	beq	142e30 <_Min_Heap_Size+0x142630>
    2a14:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    2a18:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    2a1c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2a20:	052f0603 	streq	r0, [pc, #-1539]!	; 2425 <_Min_Heap_Size+0x1c25>
    2a24:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2a28:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    2a2c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2a30:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    2a34:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2a38:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    2a3c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2a40:	052f0603 	streq	r0, [pc, #-1539]!	; 2445 <_Min_Heap_Size+0x1c45>
    2a44:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2a48:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    2a4c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2a50:	04020005 	streq	r0, [r2], #-5
    2a54:	be030601 	cfmadd32lt	mvax0, mvfx0, mvfx3, mvfx1
    2a58:	0200207f 	andeq	r2, r0, #127	; 0x7f
    2a5c:	00010104 	andeq	r0, r1, r4, lsl #2
    2a60:	01010402 	tsteq	r1, r2, lsl #8
    2a64:	01040200 	mrseq	r0, R12_usr
    2a68:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2a6c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2a70:	75900301 	ldrvc	r0, [r0, #769]	; 0x301
    2a74:	00050520 	andeq	r0, r5, r0, lsr #10
    2a78:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2a7c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2a80:	00140104 	andseq	r0, r4, r4, lsl #2
    2a84:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a88:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2a8c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2a90:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a94:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2a98:	04020005 	streq	r0, [r2], #-5
    2a9c:	0aeb0301 	beq	ffac36a8 <_estack+0xdfac2470>
    2aa0:	04020001 	streq	r0, [r2], #-1
    2aa4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2aa8:	001f0502 	andseq	r0, pc, r2, lsl #10
    2aac:	03010402 	movweq	r0, #5122	; 0x1402
    2ab0:	050175c3 	streq	r7, [r1, #-1475]	; 0xfffffa3d
    2ab4:	04020004 	streq	r0, [r2], #-4
    2ab8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2abc:	00140104 	andseq	r0, r4, r4, lsl #2
    2ac0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ac4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2ac8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2acc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ad0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2ad4:	04020005 	streq	r0, [r2], #-5
    2ad8:	0ab80301 	beq	fee036e4 <_estack+0xdee024ac>
    2adc:	04020001 	streq	r0, [r2], #-1
    2ae0:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    2ae4:	01110306 	tsteq	r1, r6, lsl #6
    2ae8:	01060d05 	tsteq	r6, r5, lsl #26
    2aec:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    2af0:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    2af4:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2af8:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    2afc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2b00:	14030609 	strne	r0, [r3], #-1545	; 0xfffff9f7
    2b04:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2b08:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    2b0c:	31060b05 	tstcc	r6, r5, lsl #22
    2b10:	01061c05 	tsteq	r6, r5, lsl #24
    2b14:	30060b05 	andcc	r0, r6, r5, lsl #22
    2b18:	01061205 	tsteq	r6, r5, lsl #4
    2b1c:	01000202 	tsteq	r0, r2, lsl #4
    2b20:	00010501 	andeq	r0, r1, r1, lsl #10
    2b24:	00000205 	andeq	r0, r0, r5, lsl #4
    2b28:	9c030000 	stcls	0, cr0, [r3], {-0}
    2b2c:	0106010f 	tsteq	r6, pc, lsl #2
    2b30:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2b34:	30060104 	andcc	r0, r6, r4, lsl #2
    2b38:	01040200 	mrseq	r0, R12_usr
    2b3c:	04020001 	streq	r0, [r2], #-1
    2b40:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2b44:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2b48:	001f0502 	andseq	r0, pc, r2, lsl #10
    2b4c:	03010402 	movweq	r0, #5122	; 0x1402
    2b50:	052074bd 	streq	r7, [r0, #-1213]!	; 0xfffffb43
    2b54:	04020005 	streq	r0, [r2], #-5
    2b58:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2b5c:	01040200 	mrseq	r0, R12_usr
    2b60:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2b64:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2b68:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b6c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2b70:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2b74:	00030501 	andeq	r0, r3, r1, lsl #10
    2b78:	03010402 	movweq	r0, #5122	; 0x1402
    2b7c:	00010bbe 			; <UNDEFINED> instruction: 0x00010bbe
    2b80:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b84:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2b88:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2b8c:	74f00301 	ldrbtvc	r0, [r0], #769	; 0x301
    2b90:	00040501 	andeq	r0, r4, r1, lsl #10
    2b94:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2b98:	01040200 	mrseq	r0, R12_usr
    2b9c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2ba0:	00200601 	eoreq	r0, r0, r1, lsl #12
    2ba4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ba8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2bac:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2bb0:	00030501 	andeq	r0, r3, r1, lsl #10
    2bb4:	03010402 	movweq	r0, #5122	; 0x1402
    2bb8:	00010b8b 	andeq	r0, r1, fp, lsl #23
    2bbc:	06020402 	streq	r0, [r2], -r2, lsl #8
    2bc0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2bc4:	07051502 	streq	r1, [r5, -r2, lsl #10]
    2bc8:	02040200 	andeq	r0, r4, #0, 4
    2bcc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    2bd0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2bd4:	04020006 	streq	r0, [r2], #-6
    2bd8:	05052002 	streq	r2, [r5, #-2]
    2bdc:	01040200 	mrseq	r0, R12_usr
    2be0:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    2be4:	00010104 	andeq	r0, r1, r4, lsl #2
    2be8:	01010402 	tsteq	r1, r2, lsl #8
    2bec:	01040200 	mrseq	r0, R12_usr
    2bf0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2bf4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2bf8:	74b80301 	ldrtvc	r0, [r8], #769	; 0x301
    2bfc:	00050520 	andeq	r0, r5, r0, lsr #10
    2c00:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2c04:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2c08:	00140104 	andseq	r0, r4, r4, lsl #2
    2c0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2c14:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2c18:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c1c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2c20:	04020005 	streq	r0, [r2], #-5
    2c24:	0bc30301 	bleq	ff0c3830 <_estack+0xdf0c25f8>
    2c28:	04020001 	streq	r0, [r2], #-1
    2c2c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2c30:	001f0502 	andseq	r0, pc, r2, lsl #10
    2c34:	03010402 	movweq	r0, #5122	; 0x1402
    2c38:	050174eb 	streq	r7, [r1, #-1259]	; 0xfffffb15
    2c3c:	04020004 	streq	r0, [r2], #-4
    2c40:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2c44:	00140104 	andseq	r0, r4, r4, lsl #2
    2c48:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c4c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2c50:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2c54:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c58:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2c5c:	04020005 	streq	r0, [r2], #-5
    2c60:	0b900301 	bleq	fe40386c <_estack+0xde402634>
    2c64:	04020001 	streq	r0, [r2], #-1
    2c68:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2c6c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2c70:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2c74:	01060204 	tsteq	r6, r4, lsl #4
    2c78:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2c7c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2c80:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    2c84:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2c88:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    2c8c:	2001060b 	andcs	r0, r1, fp, lsl #12
    2c90:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2c94:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    2c98:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    2c9c:	06030501 	streq	r0, [r3], -r1, lsl #10
    2ca0:	06110531 			; <UNDEFINED> instruction: 0x06110531
    2ca4:	06030501 	streq	r0, [r3], -r1, lsl #10
    2ca8:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    2cac:	06090513 			; <UNDEFINED> instruction: 0x06090513
    2cb0:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    2cb4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2cb8:	0b053c0c 	bleq	151cf0 <_Min_Heap_Size+0x1514f0>
    2cbc:	1c053106 	stfnes	f3, [r5], {6}
    2cc0:	0b050106 	bleq	1430e0 <_Min_Heap_Size+0x1428e0>
    2cc4:	12053006 	andne	r3, r5, #6
    2cc8:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2ccc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2cd0:	02050001 	andeq	r0, r5, #1
    2cd4:	00000000 	andeq	r0, r0, r0
    2cd8:	010fcf03 	tsteq	pc, r3, lsl #30
    2cdc:	03050106 	movweq	r0, #20742	; 0x5106
    2ce0:	01040200 	mrseq	r0, R12_usr
    2ce4:	02003006 	andeq	r3, r0, #6
    2ce8:	00010104 	andeq	r0, r1, r4, lsl #2
    2cec:	01010402 	tsteq	r1, r2, lsl #8
    2cf0:	01040200 	mrseq	r0, R12_usr
    2cf4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2cf8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2cfc:	748a0301 	strvc	r0, [sl], #769	; 0x301
    2d00:	00050520 	andeq	r0, r5, r0, lsr #10
    2d04:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2d08:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2d0c:	00140104 	andseq	r0, r4, r4, lsl #2
    2d10:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2d18:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d1c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d20:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d24:	04020003 	streq	r0, [r2], #-3
    2d28:	0bf10301 	bleq	ffc43934 <_estack+0xdfc426fc>
    2d2c:	04020001 	streq	r0, [r2], #-1
    2d30:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2d34:	001f0502 	andseq	r0, pc, r2, lsl #10
    2d38:	03010402 	movweq	r0, #5122	; 0x1402
    2d3c:	050174bd 	streq	r7, [r1, #-1213]	; 0xfffffb43
    2d40:	04020004 	streq	r0, [r2], #-4
    2d44:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2d48:	00140104 	andseq	r0, r4, r4, lsl #2
    2d4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d50:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2d54:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d58:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d5c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d60:	04020003 	streq	r0, [r2], #-3
    2d64:	0bbe0301 	bleq	fef83970 <_estack+0xdef82738>
    2d68:	04020001 	streq	r0, [r2], #-1
    2d6c:	02002e01 	andeq	r2, r0, #1, 28
    2d70:	01060104 	tsteq	r6, r4, lsl #2
    2d74:	01040200 	mrseq	r0, R12_usr
    2d78:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2d7c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2d80:	00010104 	andeq	r0, r1, r4, lsl #2
    2d84:	01010402 	tsteq	r1, r2, lsl #8
    2d88:	1f050204 	svcne	0x00050204
    2d8c:	01040200 	mrseq	r0, R12_usr
    2d90:	20748903 	rsbscs	r8, r4, r3, lsl #18
    2d94:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2d98:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2d9c:	04020004 	streq	r0, [r2], #-4
    2da0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2da4:	2e060104 	adfcss	f0, f6, f4
    2da8:	01040200 	mrseq	r0, R12_usr
    2dac:	02002f06 	andeq	r2, r0, #6, 30
    2db0:	01060104 	tsteq	r6, r4, lsl #2
    2db4:	03050104 	movweq	r0, #20740	; 0x5104
    2db8:	01040200 	mrseq	r0, R12_usr
    2dbc:	010bf203 	tsteq	fp, r3, lsl #4	; <UNPREDICTABLE>
    2dc0:	01040200 	mrseq	r0, R12_usr
    2dc4:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2dc8:	02001f05 	andeq	r1, r0, #5, 30
    2dcc:	bc030104 	stflts	f0, [r3], {4}
    2dd0:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    2dd4:	01040200 	mrseq	r0, R12_usr
    2dd8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2ddc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2de0:	20060104 	andcs	r0, r6, r4, lsl #2
    2de4:	01040200 	mrseq	r0, R12_usr
    2de8:	02002f06 	andeq	r2, r0, #6, 30
    2dec:	01060104 	tsteq	r6, r4, lsl #2
    2df0:	03050104 	movweq	r0, #20740	; 0x5104
    2df4:	01040200 	mrseq	r0, R12_usr
    2df8:	010bbf03 	tsteq	fp, r3, lsl #30
    2dfc:	02040200 	andeq	r0, r4, #0, 4
    2e00:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2e04:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    2e08:	0402000c 	streq	r0, [r2], #-12
    2e0c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2e10:	04020006 	streq	r0, [r2], #-6
    2e14:	05052002 	streq	r2, [r5, #-2]
    2e18:	02040200 	andeq	r0, r4, #0, 4
    2e1c:	03053006 	movweq	r3, #20486	; 0x5006
    2e20:	02040200 	andeq	r0, r4, #0, 4
    2e24:	00070516 	andeq	r0, r7, r6, lsl r5
    2e28:	06020402 	streq	r0, [r2], -r2, lsl #8
    2e2c:	00060501 	andeq	r0, r6, r1, lsl #10
    2e30:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    2e34:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2e38:	3e060104 	adfccs	f0, f6, f4
    2e3c:	01040200 	mrseq	r0, R12_usr
    2e40:	04020001 	streq	r0, [r2], #-1
    2e44:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2e48:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2e4c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2e50:	03010402 	movweq	r0, #5122	; 0x1402
    2e54:	052073fe 	streq	r7, [r0, #-1022]!	; 0xfffffc02
    2e58:	04020005 	streq	r0, [r2], #-5
    2e5c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2e60:	01040200 	mrseq	r0, R12_usr
    2e64:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2e68:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2e6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e70:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2e74:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2e78:	00050501 	andeq	r0, r5, r1, lsl #10
    2e7c:	03010402 	movweq	r0, #5122	; 0x1402
    2e80:	00010bfd 	strdeq	r0, [r1], -sp
    2e84:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e88:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2e8c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2e90:	74b10301 	ldrtvc	r0, [r1], #769	; 0x301
    2e94:	00040501 	andeq	r0, r4, r1, lsl #10
    2e98:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2e9c:	01040200 	mrseq	r0, R12_usr
    2ea0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2ea4:	00200601 	eoreq	r0, r0, r1, lsl #12
    2ea8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2eac:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2eb0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2eb4:	00050501 	andeq	r0, r5, r1, lsl #10
    2eb8:	03010402 	movweq	r0, #5122	; 0x1402
    2ebc:	00010bca 	andeq	r0, r1, sl, asr #23
    2ec0:	06020402 	streq	r0, [r2], -r2, lsl #8
    2ec4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2ec8:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2ecc:	02040200 	andeq	r0, r4, #0, 4
    2ed0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2ed4:	02040200 	andeq	r0, r4, #0, 4
    2ed8:	06070520 	streq	r0, [r7], -r0, lsr #10
    2edc:	06280524 	strteq	r0, [r8], -r4, lsr #10
    2ee0:	06070501 	streq	r0, [r7], -r1, lsl #10
    2ee4:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    2ee8:	0a052001 	beq	14aef4 <_Min_Heap_Size+0x14a6f4>
    2eec:	0603052e 	streq	r0, [r3], -lr, lsr #10
    2ef0:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    2ef4:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2ef8:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    2efc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2f00:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    2f04:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2f08:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    2f0c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2f10:	04020005 	streq	r0, [r2], #-5
    2f14:	5c030601 	stcpl	6, cr0, [r3], {1}
    2f18:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2f1c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2f20:	00010104 	andeq	r0, r1, r4, lsl #2
    2f24:	01010402 	tsteq	r1, r2, lsl #8
    2f28:	1f050204 	svcne	0x00050204
    2f2c:	01040200 	mrseq	r0, R12_usr
    2f30:	20748403 	rsbscs	r8, r4, r3, lsl #8
    2f34:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2f38:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2f3c:	04020004 	streq	r0, [r2], #-4
    2f40:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2f44:	2e060104 	adfcss	f0, f6, f4
    2f48:	01040200 	mrseq	r0, R12_usr
    2f4c:	02002f06 	andeq	r2, r0, #6, 30
    2f50:	01060104 	tsteq	r6, r4, lsl #2
    2f54:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2f58:	01040200 	mrseq	r0, R12_usr
    2f5c:	010bf703 	tsteq	fp, r3, lsl #14	; <UNPREDICTABLE>
    2f60:	01040200 	mrseq	r0, R12_usr
    2f64:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2f68:	02001f05 	andeq	r1, r0, #5, 30
    2f6c:	b7030104 	strlt	r0, [r3, -r4, lsl #2]
    2f70:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    2f74:	01040200 	mrseq	r0, R12_usr
    2f78:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2f7c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2f80:	20060104 	andcs	r0, r6, r4, lsl #2
    2f84:	01040200 	mrseq	r0, R12_usr
    2f88:	02002f06 	andeq	r2, r0, #6, 30
    2f8c:	01060104 	tsteq	r6, r4, lsl #2
    2f90:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2f94:	01040200 	mrseq	r0, R12_usr
    2f98:	010bc403 	tsteq	fp, r3, lsl #8
    2f9c:	01040200 	mrseq	r0, R12_usr
    2fa0:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    2fa4:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
    2fa8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2fac:	0b053c0c 	bleq	151fe4 <_Min_Heap_Size+0x1517e4>
    2fb0:	1c053106 	stfnes	f3, [r5], {6}
    2fb4:	0b050106 	bleq	1433d4 <_Min_Heap_Size+0x142bd4>
    2fb8:	12053006 	andne	r3, r5, #6
    2fbc:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2fc0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2fc4:	02050001 	andeq	r0, r5, #1
    2fc8:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
    2fcc:	0114a003 	tsteq	r4, r3
    2fd0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    2fd4:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    2fd8:	01010001 	tsteq	r1, r1
    2fdc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2fe0:	00000002 	andeq	r0, r0, r2
    2fe4:	17ac0300 	strne	r0, [ip, r0, lsl #6]!
    2fe8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2fec:	052f0603 	streq	r0, [pc, #-1539]!	; 29f1 <_Min_Heap_Size+0x21f1>
    2ff0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2ff4:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    2ff8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2ffc:	06052016 			; <UNDEFINED> instruction: 0x06052016
    3000:	06050520 	streq	r0, [r5], -r0, lsr #10
    3004:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    3008:	00050501 	andeq	r0, r5, r1, lsl #10
    300c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3010:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    3014:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3018:	00010104 	andeq	r0, r1, r4, lsl #2
    301c:	01010402 	tsteq	r1, r2, lsl #8
    3020:	1f050204 	svcne	0x00050204
    3024:	01040200 	mrseq	r0, R12_usr
    3028:	206ca603 	rsbcs	sl, ip, r3, lsl #12
    302c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3030:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3034:	04020004 	streq	r0, [r2], #-4
    3038:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    303c:	2e060104 	adfcss	f0, f6, f4
    3040:	01040200 	mrseq	r0, R12_usr
    3044:	02002f06 	andeq	r2, r0, #6, 30
    3048:	01060104 	tsteq	r6, r4, lsl #2
    304c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3050:	01040200 	mrseq	r0, R12_usr
    3054:	0113d503 	tsteq	r3, r3, lsl #10
    3058:	01040200 	mrseq	r0, R12_usr
    305c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3060:	02001f05 	andeq	r1, r0, #5, 30
    3064:	d9030104 	stmdble	r3, {r2, r8}
    3068:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    306c:	01040200 	mrseq	r0, R12_usr
    3070:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3074:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3078:	20060104 	andcs	r0, r6, r4, lsl #2
    307c:	01040200 	mrseq	r0, R12_usr
    3080:	02002f06 	andeq	r2, r0, #6, 30
    3084:	01060104 	tsteq	r6, r4, lsl #2
    3088:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    308c:	01040200 	mrseq	r0, R12_usr
    3090:	0113a203 	tsteq	r3, r3, lsl #4
    3094:	01040200 	mrseq	r0, R12_usr
    3098:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    309c:	00010601 	andeq	r0, r1, r1, lsl #12
    30a0:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    30a4:	01040200 	mrseq	r0, R12_usr
    30a8:	04020001 	streq	r0, [r2], #-1
    30ac:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    30b0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    30b4:	001f0502 	andseq	r0, pc, r2, lsl #10
    30b8:	03010402 	movweq	r0, #5122	; 0x1402
    30bc:	05206ca3 	streq	r6, [r0, #-3235]!	; 0xfffff35d
    30c0:	04020005 	streq	r0, [r2], #-5
    30c4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    30c8:	01040200 	mrseq	r0, R12_usr
    30cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    30d0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    30d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    30d8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    30dc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    30e0:	00050501 	andeq	r0, r5, r1, lsl #10
    30e4:	03010402 	movweq	r0, #5122	; 0x1402
    30e8:	000113d8 	ldrdeq	r1, [r1], -r8
    30ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    30f0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    30f4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    30f8:	6cd60301 	ldclvs	3, cr0, [r6], {1}
    30fc:	00040501 	andeq	r0, r4, r1, lsl #10
    3100:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3104:	01040200 	mrseq	r0, R12_usr
    3108:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    310c:	00200601 	eoreq	r0, r0, r1, lsl #12
    3110:	06010402 	streq	r0, [r1], -r2, lsl #8
    3114:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3118:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    311c:	00050501 	andeq	r0, r5, r1, lsl #10
    3120:	03010402 	movweq	r0, #5122	; 0x1402
    3124:	000113a5 	andeq	r1, r1, r5, lsr #7
    3128:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    312c:	0e030105 	adfeqs	f0, f3, f5
    3130:	06050501 	streq	r0, [r5], -r1, lsl #10
    3134:	0601051d 			; <UNDEFINED> instruction: 0x0601051d
    3138:	00010231 	andeq	r0, r1, r1, lsr r2
    313c:	01050101 	tsteq	r5, r1, lsl #2
    3140:	7a020500 	bvc	84548 <_Min_Heap_Size+0x83d48>
    3144:	0308000d 	movweq	r0, #32781	; 0x800d
    3148:	06011bf1 			; <UNDEFINED> instruction: 0x06011bf1
    314c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3150:	11055b22 	tstne	r5, r2, lsr #22
    3154:	03050106 	movweq	r0, #20742	; 0x5106
    3158:	05314306 	ldreq	r4, [r1, #-774]!	; 0xfffffcfa
    315c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3160:	01010002 	tsteq	r1, r2
    3164:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3168:	00000002 	andeq	r0, r0, r2
    316c:	14af0300 	strtne	r0, [pc], #768	; 3174 <_Min_Heap_Size+0x2974>
    3170:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3174:	16060105 	strne	r0, [r6], -r5, lsl #2
    3178:	01000102 	tsteq	r0, r2, lsl #2
    317c:	00010501 	andeq	r0, r1, r1, lsl #10
    3180:	00000205 	andeq	r0, r0, r5, lsl #4
    3184:	cf030000 	svcgt	0x00030000
    3188:	01060117 	tsteq	r6, r7, lsl r1
    318c:	21060305 	tstcs	r6, r5, lsl #6
    3190:	05200619 	streq	r0, [r0, #-1561]!	; 0xfffff9e7
    3194:	01023001 	tsteq	r2, r1
    3198:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    319c:	02050001 	andeq	r0, r5, #1
    31a0:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
    31a4:	0114be03 	tsteq	r4, r3, lsl #28
    31a8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    31ac:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    31b0:	01010001 	tsteq	r1, r1
    31b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    31b8:	00000002 	andeq	r0, r0, r2
    31bc:	14cd0300 	strbne	r0, [sp], #768	; 0x300
    31c0:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    31c4:	16060105 	strne	r0, [r6], -r5, lsl #2
    31c8:	01000102 	tsteq	r0, r2, lsl #2
    31cc:	00010501 	andeq	r0, r1, r1, lsl #10
    31d0:	0d960205 	lfmeq	f0, 4, [r6, #20]
    31d4:	dc030800 	stcle	8, cr0, [r3], {-0}
    31d8:	03050114 	movweq	r0, #20756	; 0x5114
    31dc:	06010514 			; <UNDEFINED> instruction: 0x06010514
    31e0:	00010216 	andeq	r0, r1, r6, lsl r2
    31e4:	01050101 	tsteq	r5, r1, lsl #2
    31e8:	00020500 	andeq	r0, r2, r0, lsl #10
    31ec:	03000000 	movweq	r0, #0
    31f0:	060118c7 	streq	r1, [r1], -r7, asr #17
    31f4:	06030501 	streq	r0, [r3], -r1, lsl #10
    31f8:	17051321 	strne	r1, [r5, -r1, lsr #6]
    31fc:	03050106 	movweq	r0, #20742	; 0x5106
    3200:	10052306 	andne	r2, r5, r6, lsl #6
    3204:	03050106 	movweq	r0, #20742	; 0x5106
    3208:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    320c:	06050106 	streq	r0, [r5], -r6, lsl #2
    3210:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    3214:	06100535 			; <UNDEFINED> instruction: 0x06100535
    3218:	06030501 	streq	r0, [r3], -r1, lsl #10
    321c:	060d054b 	streq	r0, [sp], -fp, asr #10
    3220:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    3224:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    3228:	01061405 	tsteq	r6, r5, lsl #8
    322c:	50060305 	andpl	r0, r6, r5, lsl #6
    3230:	3e060105 	adfccs	f0, f6, f5
    3234:	00310520 	eorseq	r0, r1, r0, lsr #10
    3238:	03010402 	movweq	r0, #5122	; 0x1402
    323c:	05052e6a 	streq	r2, [r5, #-3690]	; 0xfffff196
    3240:	18053006 	stmdane	r5, {r1, r2, ip, sp}
    3244:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3248:	20062f06 	andcs	r2, r6, r6, lsl #30
    324c:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    3250:	05410104 	strbeq	r0, [r1, #-260]	; 0xfffffefc
    3254:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    3258:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    325c:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    3260:	0001023c 	andeq	r0, r1, ip, lsr r2
    3264:	01050101 	tsteq	r5, r1, lsl #2
    3268:	98020500 	stmdals	r2, {r8, sl}
    326c:	0308000d 	movweq	r0, #32781	; 0x800d
    3270:	06011a9f 			; <UNDEFINED> instruction: 0x06011a9f
    3274:	06030501 	streq	r0, [r3], -r1, lsl #10
    3278:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    327c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3280:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    3284:	06030501 	streq	r0, [r3], -r1, lsl #10
    3288:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    328c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3290:	06010527 	streq	r0, [r1], -r7, lsr #10
    3294:	00010230 	andeq	r0, r1, r0, lsr r2
    3298:	01050101 	tsteq	r5, r1, lsl #2
    329c:	00020500 	andeq	r0, r2, r0, lsl #10
    32a0:	03000000 	movweq	r0, #0
    32a4:	050114ea 	streq	r1, [r1, #-1258]	; 0xfffffb16
    32a8:	01051403 	tsteq	r5, r3, lsl #8
    32ac:	01021706 	tsteq	r2, r6, lsl #14
    32b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    32b4:	02050001 	andeq	r0, r5, #1
    32b8:	00000000 	andeq	r0, r0, r0
    32bc:	01108c03 	tsteq	r0, r3, lsl #24
    32c0:	03050106 	movweq	r0, #20742	; 0x5106
    32c4:	02002f06 	andeq	r2, r0, #6, 30
    32c8:	00150104 	andseq	r0, r5, r4, lsl #2
    32cc:	01010402 	tsteq	r1, r2, lsl #8
    32d0:	01040200 	mrseq	r0, R12_usr
    32d4:	04020001 	streq	r0, [r2], #-1
    32d8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    32dc:	02001f05 	andeq	r1, r0, #5, 30
    32e0:	cb030104 	blgt	c36f8 <_Min_Heap_Size+0xc2ef8>
    32e4:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    32e8:	01040200 	mrseq	r0, R12_usr
    32ec:	00040514 	andeq	r0, r4, r4, lsl r5
    32f0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    32f4:	01040200 	mrseq	r0, R12_usr
    32f8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    32fc:	2f060104 	svccs	0x00060104
    3300:	01040200 	mrseq	r0, R12_usr
    3304:	01040106 	tsteq	r4, r6, lsl #2
    3308:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    330c:	b0030104 	andlt	r0, r3, r4, lsl #2
    3310:	0200010c 	andeq	r0, r0, #12, 2
    3314:	2e060104 	adfcss	f0, f6, f4
    3318:	1f050204 	svcne	0x00050204
    331c:	01040200 	mrseq	r0, R12_usr
    3320:	0173fe03 	cmneq	r3, r3, lsl #28	; <UNPREDICTABLE>
    3324:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3328:	00140104 	andseq	r0, r4, r4, lsl #2
    332c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3330:	01040200 	mrseq	r0, R12_usr
    3334:	02002006 	andeq	r2, r0, #6
    3338:	2f060104 	svccs	0x00060104
    333c:	01040200 	mrseq	r0, R12_usr
    3340:	01040106 	tsteq	r4, r6, lsl #2
    3344:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3348:	fd030104 	stc2	1, cr0, [r3, #-16]
    334c:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3350:	002e0104 	eoreq	r0, lr, r4, lsl #2
    3354:	06010402 	streq	r0, [r1], -r2, lsl #8
    3358:	04020001 	streq	r0, [r2], #-1
    335c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    3360:	00010104 	andeq	r0, r1, r4, lsl #2
    3364:	01010402 	tsteq	r1, r2, lsl #8
    3368:	01040200 	mrseq	r0, R12_usr
    336c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3370:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3374:	73ca0301 	bicvc	r0, sl, #67108864	; 0x4000000
    3378:	00050520 	andeq	r0, r5, r0, lsr #10
    337c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3380:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3384:	00140104 	andseq	r0, r4, r4, lsl #2
    3388:	06010402 	streq	r0, [r1], -r2, lsl #8
    338c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3390:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3394:	06010402 	streq	r0, [r1], -r2, lsl #8
    3398:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    339c:	04020003 	streq	r0, [r2], #-3
    33a0:	0cb10301 	ldceq	3, cr0, [r1], #4
    33a4:	04020001 	streq	r0, [r2], #-1
    33a8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    33ac:	001f0502 	andseq	r0, pc, r2, lsl #10
    33b0:	03010402 	movweq	r0, #5122	; 0x1402
    33b4:	050173fd 	streq	r7, [r1, #-1021]	; 0xfffffc03
    33b8:	04020004 	streq	r0, [r2], #-4
    33bc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    33c0:	00140104 	andseq	r0, r4, r4, lsl #2
    33c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    33c8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    33cc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    33d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    33d4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    33d8:	04020003 	streq	r0, [r2], #-3
    33dc:	0bfe0301 	bleq	fff83fe8 <_estack+0xdff82db0>
    33e0:	04020001 	streq	r0, [r2], #-1
    33e4:	002e0602 	eoreq	r0, lr, r2, lsl #12
    33e8:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    33ec:	02000c05 	andeq	r0, r0, #1280	; 0x500
    33f0:	01060204 	tsteq	r6, r4, lsl #4
    33f4:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    33f8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    33fc:	04020005 	streq	r0, [r2], #-5
    3400:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    3404:	04020003 	streq	r0, [r2], #-3
    3408:	0c051802 	stceq	8, cr1, [r5], {2}
    340c:	02040200 	andeq	r0, r4, #0, 4
    3410:	06050106 	streq	r0, [r5], -r6, lsl #2
    3414:	02040200 	andeq	r0, r4, #0, 4
    3418:	06050520 	streq	r0, [r5], -r0, lsr #10
    341c:	06090524 	streq	r0, [r9], -r4, lsr #10
    3420:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    3424:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    3428:	01062805 	tsteq	r6, r5, lsl #16
    342c:	36060305 	strcc	r0, [r6], -r5, lsl #6
    3430:	01060c05 	tsteq	r6, r5, lsl #24
    3434:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    3438:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    343c:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    3440:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    3444:	28053e06 	stmdacs	r5, {r1, r2, r9, sl, fp, ip, sp}
    3448:	03050106 	movweq	r0, #20742	; 0x5106
    344c:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    3450:	01060705 	tsteq	r6, r5, lsl #14
    3454:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    3458:	04020005 	streq	r0, [r2], #-5
    345c:	003f0601 	eorseq	r0, pc, r1, lsl #12
    3460:	01010402 	tsteq	r1, r2, lsl #8
    3464:	01040200 	mrseq	r0, R12_usr
    3468:	04020001 	streq	r0, [r2], #-1
    346c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3470:	02001f05 	andeq	r1, r0, #5, 30
    3474:	9f030104 	svcls	0x00030104
    3478:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    347c:	01040200 	mrseq	r0, R12_usr
    3480:	00040514 	andeq	r0, r4, r4, lsl r5
    3484:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3488:	01040200 	mrseq	r0, R12_usr
    348c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3490:	2f060104 	svccs	0x00060104
    3494:	01040200 	mrseq	r0, R12_usr
    3498:	01040106 	tsteq	r4, r6, lsl #2
    349c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    34a0:	dc030104 	stfles	f0, [r3], {4}
    34a4:	0200010c 	andeq	r0, r0, #12, 2
    34a8:	2e060104 	adfcss	f0, f6, f4
    34ac:	1f050204 	svcne	0x00050204
    34b0:	01040200 	mrseq	r0, R12_usr
    34b4:	0173d203 	cmneq	r3, r3, lsl #4
    34b8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    34bc:	00140104 	andseq	r0, r4, r4, lsl #2
    34c0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    34c4:	01040200 	mrseq	r0, R12_usr
    34c8:	02002006 	andeq	r2, r0, #6
    34cc:	3d060104 	stfccs	f0, [r6, #-16]
    34d0:	01040200 	mrseq	r0, R12_usr
    34d4:	01040106 	tsteq	r4, r6, lsl #2
    34d8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    34dc:	a9030104 	stmdbge	r3, {r2, r8}
    34e0:	0200010c 	andeq	r0, r0, #12, 2
    34e4:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    34e8:	02040200 	andeq	r0, r4, #0, 4
    34ec:	000e0515 	andeq	r0, lr, r5, lsl r5
    34f0:	06020402 	streq	r0, [r2], -r2, lsl #8
    34f4:	00080501 	andeq	r0, r8, r1, lsl #10
    34f8:	20020402 	andcs	r0, r2, r2, lsl #8
    34fc:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    3500:	01060b05 	tsteq	r6, r5, lsl #22
    3504:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    3508:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    350c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3510:	0c05202a 	stceq	0, cr2, [r5], {42}	; 0x2a
    3514:	052e4603 	streq	r4, [lr, #-1539]!	; 0xfffff9fd
    3518:	04020005 	streq	r0, [r2], #-5
    351c:	09030601 	stmdbeq	r3, {r0, r9, sl}
    3520:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3524:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3528:	00010104 	andeq	r0, r1, r4, lsl #2
    352c:	01010402 	tsteq	r1, r2, lsl #8
    3530:	1f050204 	svcne	0x00050204
    3534:	01040200 	mrseq	r0, R12_usr
    3538:	2073c503 	rsbscs	ip, r3, r3, lsl #10
    353c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3540:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3544:	04020004 	streq	r0, [r2], #-4
    3548:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    354c:	2e060104 	adfcss	f0, f6, f4
    3550:	01040200 	mrseq	r0, R12_usr
    3554:	02002f06 	andeq	r2, r0, #6, 30
    3558:	01060104 	tsteq	r6, r4, lsl #2
    355c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3560:	01040200 	mrseq	r0, R12_usr
    3564:	010cb603 	tsteq	ip, r3, lsl #12
    3568:	01040200 	mrseq	r0, R12_usr
    356c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3570:	02001f05 	andeq	r1, r0, #5, 30
    3574:	f8030104 			; <UNDEFINED> instruction: 0xf8030104
    3578:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    357c:	01040200 	mrseq	r0, R12_usr
    3580:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3584:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3588:	20060104 	andcs	r0, r6, r4, lsl #2
    358c:	01040200 	mrseq	r0, R12_usr
    3590:	02002f06 	andeq	r2, r0, #6, 30
    3594:	01060104 	tsteq	r6, r4, lsl #2
    3598:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    359c:	01040200 	mrseq	r0, R12_usr
    35a0:	010c8303 	tsteq	ip, r3, lsl #6
    35a4:	01040200 	mrseq	r0, R12_usr
    35a8:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    35ac:	05011003 	streq	r1, [r1, #-3]
    35b0:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    35b4:	0e030607 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx7
    35b8:	0628053c 			; <UNDEFINED> instruction: 0x0628053c
    35bc:	030c0501 	movweq	r0, #50433	; 0xc501
    35c0:	03053c59 	movweq	r3, #23641	; 0x5c59
    35c4:	00c40306 	sbceq	r0, r4, r6, lsl #6
    35c8:	06070520 	streq	r0, [r7], -r0, lsr #10
    35cc:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    35d0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    35d4:	3e060104 	adfccs	f0, f6, f4
    35d8:	01040200 	mrseq	r0, R12_usr
    35dc:	04020001 	streq	r0, [r2], #-1
    35e0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    35e4:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    35e8:	001f0502 	andseq	r0, pc, r2, lsl #10
    35ec:	03010402 	movweq	r0, #5122	; 0x1402
    35f0:	05207388 	streq	r7, [r0, #-904]!	; 0xfffffc78
    35f4:	04020005 	streq	r0, [r2], #-5
    35f8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    35fc:	01040200 	mrseq	r0, R12_usr
    3600:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3604:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3608:	06010402 	streq	r0, [r1], -r2, lsl #8
    360c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3610:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3614:	00050501 	andeq	r0, r5, r1, lsl #10
    3618:	03010402 	movweq	r0, #5122	; 0x1402
    361c:	00010cf3 	strdeq	r0, [r1], -r3
    3620:	06010402 	streq	r0, [r1], -r2, lsl #8
    3624:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3628:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    362c:	73bb0301 			; <UNDEFINED> instruction: 0x73bb0301
    3630:	00040501 	andeq	r0, r4, r1, lsl #10
    3634:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3638:	01040200 	mrseq	r0, R12_usr
    363c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3640:	00200601 	eoreq	r0, r0, r1, lsl #12
    3644:	06010402 	streq	r0, [r1], -r2, lsl #8
    3648:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    364c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3650:	00050501 	andeq	r0, r5, r1, lsl #10
    3654:	03010402 	movweq	r0, #5122	; 0x1402
    3658:	00010cc0 	andeq	r0, r1, r0, asr #25
    365c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3660:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3664:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3668:	02040200 	andeq	r0, r4, #0, 4
    366c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3670:	02040200 	andeq	r0, r4, #0, 4
    3674:	06070520 	streq	r0, [r7], -r0, lsr #10
    3678:	060b0526 	streq	r0, [fp], -r6, lsr #10
    367c:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    3680:	22060905 	andcs	r0, r6, #81920	; 0x14000
    3684:	01060e05 	tsteq	r6, r5, lsl #28
    3688:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    368c:	052f0609 	streq	r0, [pc, #-1545]!	; 308b <_Min_Heap_Size+0x288b>
    3690:	010a0303 	tsteq	sl, r3, lsl #6
    3694:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3698:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    369c:	052f0605 	streq	r0, [pc, #-1541]!	; 309f <_Min_Heap_Size+0x289f>
    36a0:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    36a4:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    36a8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    36ac:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    36b0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    36b4:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    36b8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    36bc:	052f0605 	streq	r0, [pc, #-1541]!	; 30bf <_Min_Heap_Size+0x28bf>
    36c0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    36c4:	05280605 	streq	r0, [r8, #-1541]!	; 0xfffff9fb
    36c8:	9003060c 	andls	r0, r3, ip, lsl #12
    36cc:	03054a7f 	movweq	r4, #23167	; 0x5a7f
    36d0:	00dc0306 	sbcseq	r0, ip, r6, lsl #6
    36d4:	0606052e 	streq	r0, [r6], -lr, lsr #10
    36d8:	06030501 	streq	r0, [r3], -r1, lsl #10
    36dc:	052e1803 	streq	r1, [lr, #-2051]!	; 0xfffff7fd
    36e0:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    36e4:	01000502 	tsteq	r0, r2, lsl #10
    36e8:	00010501 	andeq	r0, r1, r1, lsl #10
    36ec:	00000205 	andeq	r0, r0, r5, lsl #4
    36f0:	e5030000 	str	r0, [r3, #-0]
    36f4:	0106011a 	tsteq	r6, sl, lsl r1
    36f8:	21060305 	tstcs	r6, r5, lsl #6
    36fc:	01061705 	tsteq	r6, r5, lsl #14
    3700:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3704:	01060805 	tsteq	r6, r5, lsl #16
    3708:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    370c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    3710:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3714:	05052006 	streq	r2, [r5, #-6]
    3718:	16052206 	strne	r2, [r5], -r6, lsl #4
    371c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3720:	06030520 	streq	r0, [r3], -r0, lsr #10
    3724:	06160527 	ldreq	r0, [r6], -r7, lsr #10
    3728:	06030501 	streq	r0, [r3], -r1, lsl #10
    372c:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    3730:	06030501 	streq	r0, [r3], -r1, lsl #10
    3734:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    3738:	06030501 	streq	r0, [r3], -r1, lsl #10
    373c:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    3740:	06030501 	streq	r0, [r3], -r1, lsl #10
    3744:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    3748:	06030501 	streq	r0, [r3], -r1, lsl #10
    374c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    3750:	06030501 	streq	r0, [r3], -r1, lsl #10
    3754:	06010528 	streq	r0, [r1], -r8, lsr #10
    3758:	00010230 	andeq	r0, r1, r0, lsr r2
    375c:	01050101 	tsteq	r5, r1, lsl #2
    3760:	00020500 	andeq	r0, r2, r0, lsl #10
    3764:	03000000 	movweq	r0, #0
    3768:	06011ab7 			; <UNDEFINED> instruction: 0x06011ab7
    376c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3770:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    3774:	06030501 	streq	r0, [r3], -r1, lsl #10
    3778:	06080522 	streq	r0, [r8], -r2, lsr #10
    377c:	20240501 	eorcs	r0, r4, r1, lsl #10
    3780:	31060305 	tstcc	r6, r5, lsl #6
    3784:	01060c05 	tsteq	r6, r5, lsl #24
    3788:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    378c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    3790:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3794:	03052008 	movweq	r2, #20488	; 0x5008
    3798:	16052706 	strne	r2, [r5], -r6, lsl #14
    379c:	03050106 	movweq	r0, #20742	; 0x5106
    37a0:	16052f06 	strne	r2, [r5], -r6, lsl #30
    37a4:	03050106 	movweq	r0, #20742	; 0x5106
    37a8:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    37ac:	03050106 	movweq	r0, #20742	; 0x5106
    37b0:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    37b4:	03050106 	movweq	r0, #20742	; 0x5106
    37b8:	12053d06 	andne	r3, r5, #384	; 0x180
    37bc:	03050106 	movweq	r0, #20742	; 0x5106
    37c0:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    37c4:	03050106 	movweq	r0, #20742	; 0x5106
    37c8:	01052806 	tsteq	r5, r6, lsl #16
    37cc:	01023006 	tsteq	r2, r6
    37d0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    37d4:	02050001 	andeq	r0, r5, #1
    37d8:	00000000 	andeq	r0, r0, r0
    37dc:	0114f903 	tsteq	r4, r3, lsl #18	; <UNPREDICTABLE>
    37e0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    37e4:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    37e8:	01010001 	tsteq	r1, r1
    37ec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    37f0:	00000002 	andeq	r0, r0, r2
    37f4:	11930300 	orrsne	r0, r3, r0, lsl #6
    37f8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    37fc:	04020003 	streq	r0, [r2], #-3
    3800:	00300601 	eorseq	r0, r0, r1, lsl #12
    3804:	01010402 	tsteq	r1, r2, lsl #8
    3808:	01040200 	mrseq	r0, R12_usr
    380c:	04020001 	streq	r0, [r2], #-1
    3810:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3814:	02001f05 	andeq	r1, r0, #5, 30
    3818:	c6030104 	strgt	r0, [r3], -r4, lsl #2
    381c:	05052072 	streq	r2, [r5, #-114]	; 0xffffff8e
    3820:	01040200 	mrseq	r0, R12_usr
    3824:	00040514 	andeq	r0, r4, r4, lsl r5
    3828:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    382c:	01040200 	mrseq	r0, R12_usr
    3830:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3834:	2f060104 	svccs	0x00060104
    3838:	01040200 	mrseq	r0, R12_usr
    383c:	01040106 	tsteq	r4, r6, lsl #2
    3840:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3844:	b5030104 	strlt	r0, [r3, #-260]	; 0xfffffefc
    3848:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    384c:	2e060104 	adfcss	f0, f6, f4
    3850:	1f050204 	svcne	0x00050204
    3854:	01040200 	mrseq	r0, R12_usr
    3858:	0172f903 	cmneq	r2, r3, lsl #18	; <UNPREDICTABLE>
    385c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3860:	00140104 	andseq	r0, r4, r4, lsl #2
    3864:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3868:	01040200 	mrseq	r0, R12_usr
    386c:	02002006 	andeq	r2, r0, #6
    3870:	2f060104 	svccs	0x00060104
    3874:	01040200 	mrseq	r0, R12_usr
    3878:	01040106 	tsteq	r4, r6, lsl #2
    387c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3880:	82030104 	andhi	r0, r3, #4, 2
    3884:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    3888:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    388c:	02040200 	andeq	r0, r4, #0, 4
    3890:	00070515 	andeq	r0, r7, r5, lsl r5
    3894:	06020402 	streq	r0, [r2], -r2, lsl #8
    3898:	04020001 	streq	r0, [r2], #-1
    389c:	06052002 	streq	r2, [r5], -r2
    38a0:	02040200 	andeq	r0, r4, #0, 4
    38a4:	00050520 	andeq	r0, r5, r0, lsr #10
    38a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    38ac:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    38b0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    38b4:	00010104 	andeq	r0, r1, r4, lsl #2
    38b8:	01010402 	tsteq	r1, r2, lsl #8
    38bc:	1f050204 	svcne	0x00050204
    38c0:	01040200 	mrseq	r0, R12_usr
    38c4:	2072c103 	rsbscs	ip, r2, r3, lsl #2
    38c8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    38cc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    38d0:	04020004 	streq	r0, [r2], #-4
    38d4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    38d8:	2e060104 	adfcss	f0, f6, f4
    38dc:	01040200 	mrseq	r0, R12_usr
    38e0:	02002f06 	andeq	r2, r0, #6, 30
    38e4:	01060104 	tsteq	r6, r4, lsl #2
    38e8:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    38ec:	01040200 	mrseq	r0, R12_usr
    38f0:	010dba03 	tsteq	sp, r3, lsl #20
    38f4:	01040200 	mrseq	r0, R12_usr
    38f8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    38fc:	02001f05 	andeq	r1, r0, #5, 30
    3900:	f4030104 	vst4.8	{d0,d2,d4,d6}, [r3], r4
    3904:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3908:	01040200 	mrseq	r0, R12_usr
    390c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3910:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3914:	20060104 	andcs	r0, r6, r4, lsl #2
    3918:	01040200 	mrseq	r0, R12_usr
    391c:	02002f06 	andeq	r2, r0, #6, 30
    3920:	01060104 	tsteq	r6, r4, lsl #2
    3924:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3928:	01040200 	mrseq	r0, R12_usr
    392c:	010d8703 	tsteq	sp, r3, lsl #14
    3930:	02040200 	andeq	r0, r4, #0, 4
    3934:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3938:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    393c:	0402000e 	streq	r0, [r2], #-14
    3940:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3944:	04020008 	streq	r0, [r2], #-8
    3948:	07052002 	streq	r2, [r5, -r2]
    394c:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    3950:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3954:	0b053106 	bleq	14fd74 <_Min_Heap_Size+0x14f574>
    3958:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    395c:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3960:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    3964:	16050106 	strne	r0, [r5], -r6, lsl #2
    3968:	20090520 	andcs	r0, r9, r0, lsr #10
    396c:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    3970:	01061a05 	tsteq	r6, r5, lsl #20
    3974:	31060705 	tstcc	r6, r5, lsl #14
    3978:	01061505 	tsteq	r6, r5, lsl #10
    397c:	44060705 	strmi	r0, [r6], #-1797	; 0xfffff8fb
    3980:	05052006 	streq	r2, [r5, #-6]
    3984:	18054306 	stmdane	r5, {r1, r2, r8, r9, lr}
    3988:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    398c:	13053106 	movwne	r3, #20742	; 0x5106
    3990:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3994:	20064406 	andcs	r4, r6, r6, lsl #8
    3998:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
    399c:	13060105 	movwne	r0, #24837	; 0x6105
    39a0:	0002022e 	andeq	r0, r2, lr, lsr #4
    39a4:	01050101 	tsteq	r5, r1, lsl #2
    39a8:	00020500 	andeq	r0, r2, r0, lsl #10
    39ac:	03000000 	movweq	r0, #0
    39b0:	06011b93 			; <UNDEFINED> instruction: 0x06011b93
    39b4:	06030501 	streq	r0, [r3], -r1, lsl #10
    39b8:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    39bc:	06030501 	streq	r0, [r3], -r1, lsl #10
    39c0:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    39c4:	06030501 	streq	r0, [r3], -r1, lsl #10
    39c8:	06110531 			; <UNDEFINED> instruction: 0x06110531
    39cc:	06030501 	streq	r0, [r3], -r1, lsl #10
    39d0:	06010544 	streq	r0, [r1], -r4, asr #10
    39d4:	00010230 	andeq	r0, r1, r0, lsr r2
    39d8:	01050101 	tsteq	r5, r1, lsl #2
    39dc:	00020500 	andeq	r0, r2, r0, lsl #10
    39e0:	03000000 	movweq	r0, #0
    39e4:	05011588 	streq	r1, [r1, #-1416]	; 0xfffffa78
    39e8:	01051403 	tsteq	r5, r3, lsl #8
    39ec:	01021706 	tsteq	r2, r6, lsl #14
    39f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    39f4:	02050001 	andeq	r0, r5, #1
    39f8:	00000000 	andeq	r0, r0, r0
    39fc:	0111e003 	tsteq	r1, r3
    3a00:	03050106 	movweq	r0, #20742	; 0x5106
    3a04:	01040200 	mrseq	r0, R12_usr
    3a08:	02003006 	andeq	r3, r0, #6
    3a0c:	00010104 	andeq	r0, r1, r4, lsl #2
    3a10:	01010402 	tsteq	r1, r2, lsl #8
    3a14:	01040200 	mrseq	r0, R12_usr
    3a18:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3a1c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3a20:	71f90301 	mvnsvc	r0, r1, lsl #6
    3a24:	00050520 	andeq	r0, r5, r0, lsr #10
    3a28:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3a2c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3a30:	00140104 	andseq	r0, r4, r4, lsl #2
    3a34:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3a3c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a40:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a44:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a48:	04020003 	streq	r0, [r2], #-3
    3a4c:	0e820301 	cdpeq	3, 8, cr0, cr2, cr1, {0}
    3a50:	04020001 	streq	r0, [r2], #-1
    3a54:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3a58:	001f0502 	andseq	r0, pc, r2, lsl #10
    3a5c:	03010402 	movweq	r0, #5122	; 0x1402
    3a60:	050172ac 	streq	r7, [r1, #-684]	; 0xfffffd54
    3a64:	04020004 	streq	r0, [r2], #-4
    3a68:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3a6c:	00140104 	andseq	r0, r4, r4, lsl #2
    3a70:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a74:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3a78:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a7c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a80:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a84:	04020003 	streq	r0, [r2], #-3
    3a88:	0dcf0301 	stcleq	3, cr0, [pc, #4]	; 3a94 <_Min_Heap_Size+0x3294>
    3a8c:	04020001 	streq	r0, [r2], #-1
    3a90:	02002e01 	andeq	r2, r0, #1, 28
    3a94:	01060104 	tsteq	r6, r4, lsl #2
    3a98:	01040200 	mrseq	r0, R12_usr
    3a9c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    3aa0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3aa4:	00010104 	andeq	r0, r1, r4, lsl #2
    3aa8:	01010402 	tsteq	r1, r2, lsl #8
    3aac:	1f050204 	svcne	0x00050204
    3ab0:	01040200 	mrseq	r0, R12_usr
    3ab4:	2071f803 	rsbscs	pc, r1, r3, lsl #16
    3ab8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3abc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3ac0:	04020004 	streq	r0, [r2], #-4
    3ac4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3ac8:	2e060104 	adfcss	f0, f6, f4
    3acc:	01040200 	mrseq	r0, R12_usr
    3ad0:	02002f06 	andeq	r2, r0, #6, 30
    3ad4:	01060104 	tsteq	r6, r4, lsl #2
    3ad8:	03050104 	movweq	r0, #20740	; 0x5104
    3adc:	01040200 	mrseq	r0, R12_usr
    3ae0:	010e8303 	tsteq	lr, r3, lsl #6
    3ae4:	01040200 	mrseq	r0, R12_usr
    3ae8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3aec:	02001f05 	andeq	r1, r0, #5, 30
    3af0:	ab030104 	blge	c3f08 <_Min_Heap_Size+0xc3708>
    3af4:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3af8:	01040200 	mrseq	r0, R12_usr
    3afc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3b00:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3b04:	20060104 	andcs	r0, r6, r4, lsl #2
    3b08:	01040200 	mrseq	r0, R12_usr
    3b0c:	02002f06 	andeq	r2, r0, #6, 30
    3b10:	01060104 	tsteq	r6, r4, lsl #2
    3b14:	03050104 	movweq	r0, #20740	; 0x5104
    3b18:	01040200 	mrseq	r0, R12_usr
    3b1c:	010dd003 	tsteq	sp, r3
    3b20:	02040200 	andeq	r0, r4, #0, 4
    3b24:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3b28:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3b2c:	0402000c 	streq	r0, [r2], #-12
    3b30:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3b34:	04020006 	streq	r0, [r2], #-6
    3b38:	05052002 	streq	r2, [r5, #-2]
    3b3c:	02040200 	andeq	r0, r4, #0, 4
    3b40:	03053006 	movweq	r3, #20486	; 0x5006
    3b44:	02040200 	andeq	r0, r4, #0, 4
    3b48:	00070516 	andeq	r0, r7, r6, lsl r5
    3b4c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3b50:	00060501 	andeq	r0, r6, r1, lsl #10
    3b54:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    3b58:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3b5c:	3e060104 	adfccs	f0, f6, f4
    3b60:	01040200 	mrseq	r0, R12_usr
    3b64:	04020001 	streq	r0, [r2], #-1
    3b68:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3b6c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3b70:	001f0502 	andseq	r0, pc, r2, lsl #10
    3b74:	03010402 	movweq	r0, #5122	; 0x1402
    3b78:	052071ed 	streq	r7, [r0, #-493]!	; 0xfffffe13
    3b7c:	04020005 	streq	r0, [r2], #-5
    3b80:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3b84:	01040200 	mrseq	r0, R12_usr
    3b88:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3b8c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3b90:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b94:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3b98:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3b9c:	00050501 	andeq	r0, r5, r1, lsl #10
    3ba0:	03010402 	movweq	r0, #5122	; 0x1402
    3ba4:	00010e8e 	andeq	r0, r1, lr, lsl #29
    3ba8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bac:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3bb0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3bb4:	72a00301 	adcvc	r0, r0, #67108864	; 0x4000000
    3bb8:	00040501 	andeq	r0, r4, r1, lsl #10
    3bbc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3bc0:	01040200 	mrseq	r0, R12_usr
    3bc4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3bc8:	00200601 	eoreq	r0, r0, r1, lsl #12
    3bcc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bd0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3bd4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3bd8:	00050501 	andeq	r0, r5, r1, lsl #10
    3bdc:	03010402 	movweq	r0, #5122	; 0x1402
    3be0:	00010ddb 	ldrdeq	r0, [r1], -fp
    3be4:	06020402 	streq	r0, [r2], -r2, lsl #8
    3be8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3bec:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3bf0:	02040200 	andeq	r0, r4, #0, 4
    3bf4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3bf8:	02040200 	andeq	r0, r4, #0, 4
    3bfc:	06070520 	streq	r0, [r7], -r0, lsr #10
    3c00:	06280524 	strteq	r0, [r8], -r4, lsr #10
    3c04:	06070501 	streq	r0, [r7], -r1, lsl #10
    3c08:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    3c0c:	0a052001 	beq	14bc18 <_Min_Heap_Size+0x14b418>
    3c10:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3c14:	060e0523 	streq	r0, [lr], -r3, lsr #10
    3c18:	20160501 	andscs	r0, r6, r1, lsl #10
    3c1c:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    3c20:	04020005 	streq	r0, [r2], #-5
    3c24:	6d030601 	stcvs	6, cr0, [r3, #-4]
    3c28:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3c2c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3c30:	00010104 	andeq	r0, r1, r4, lsl #2
    3c34:	01010402 	tsteq	r1, r2, lsl #8
    3c38:	1f050204 	svcne	0x00050204
    3c3c:	01040200 	mrseq	r0, R12_usr
    3c40:	2071f303 	rsbscs	pc, r1, r3, lsl #6
    3c44:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3c48:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3c4c:	04020004 	streq	r0, [r2], #-4
    3c50:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3c54:	2e060104 	adfcss	f0, f6, f4
    3c58:	01040200 	mrseq	r0, R12_usr
    3c5c:	02002f06 	andeq	r2, r0, #6, 30
    3c60:	01060104 	tsteq	r6, r4, lsl #2
    3c64:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3c68:	01040200 	mrseq	r0, R12_usr
    3c6c:	010e8803 	tsteq	lr, r3, lsl #16
    3c70:	01040200 	mrseq	r0, R12_usr
    3c74:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3c78:	02001f05 	andeq	r1, r0, #5, 30
    3c7c:	a6030104 	strge	r0, [r3], -r4, lsl #2
    3c80:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3c84:	01040200 	mrseq	r0, R12_usr
    3c88:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3c8c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3c90:	20060104 	andcs	r0, r6, r4, lsl #2
    3c94:	01040200 	mrseq	r0, R12_usr
    3c98:	02002f06 	andeq	r2, r0, #6, 30
    3c9c:	01060104 	tsteq	r6, r4, lsl #2
    3ca0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3ca4:	01040200 	mrseq	r0, R12_usr
    3ca8:	010dd503 	tsteq	sp, r3, lsl #10
    3cac:	01040200 	mrseq	r0, R12_usr
    3cb0:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    3cb4:	05011903 	streq	r1, [r1, #-2307]	; 0xfffff6fd
    3cb8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3cbc:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    3cc0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3cc4:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
    3cc8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3ccc:	06280607 	strteq	r0, [r8], -r7, lsl #12
    3cd0:	06050520 	streq	r0, [r5], -r0, lsr #10
    3cd4:	06180543 	ldreq	r0, [r8], -r3, asr #10
    3cd8:	06050501 	streq	r0, [r5], -r1, lsl #10
    3cdc:	06140531 			; <UNDEFINED> instruction: 0x06140531
    3ce0:	06050501 	streq	r0, [r5], -r1, lsl #10
    3ce4:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    3ce8:	06050501 	streq	r0, [r5], -r1, lsl #10
    3cec:	05200628 	streq	r0, [r0, #-1576]!	; 0xfffff9d8
    3cf0:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
    3cf4:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    3cf8:	01000202 	tsteq	r0, r2, lsl #4
    3cfc:	00010501 	andeq	r0, r1, r1, lsl #10
    3d00:	00000205 	andeq	r0, r0, r5, lsl #4
    3d04:	af030000 	svcge	0x00030000
    3d08:	0106011b 	tsteq	r6, fp, lsl r1
    3d0c:	21060305 	tstcs	r6, r5, lsl #6
    3d10:	01061705 	tsteq	r6, r5, lsl #14
    3d14:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3d18:	01061605 	tsteq	r6, r5, lsl #12
    3d1c:	31060305 	tstcc	r6, r5, lsl #6
    3d20:	01061205 	tsteq	r6, r5, lsl #4
    3d24:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3d28:	01061805 	tsteq	r6, r5, lsl #16
    3d2c:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    3d30:	30060105 	andcc	r0, r6, r5, lsl #2
    3d34:	01000102 	tsteq	r0, r2, lsl #2
    3d38:	00010501 	andeq	r0, r1, r1, lsl #10
    3d3c:	0da80205 	sfmeq	f0, 4, [r8, #20]!
    3d40:	99030800 	stmdbls	r3, {fp}
    3d44:	03050115 	movweq	r0, #20757	; 0x5115
    3d48:	01051314 	tsteq	r5, r4, lsl r3
    3d4c:	01021706 	tsteq	r2, r6, lsl #14
    3d50:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d54:	02050001 	andeq	r0, r5, #1
    3d58:	08000daa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, fp}
    3d5c:	011c8a03 	tsteq	ip, r3, lsl #20
    3d60:	13130305 	tstne	r3, #335544320	; 0x14000000
    3d64:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    3d68:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    3d6c:	30060505 	andcc	r0, r6, r5, lsl #10
    3d70:	01061505 	tsteq	r6, r5, lsl #10
    3d74:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    3d78:	09030607 	stmdbeq	r3, {r0, r1, r2, r9, sl}
    3d7c:	0612053c 			; <UNDEFINED> instruction: 0x0612053c
    3d80:	06070501 	streq	r0, [r7], -r1, lsl #10
    3d84:	0a051421 	beq	148e10 <_Min_Heap_Size+0x148610>
    3d88:	3a050106 	bcc	1441a8 <_Min_Heap_Size+0x1439a8>
    3d8c:	01040200 	mrseq	r0, R12_usr
    3d90:	007c053c 	rsbseq	r0, ip, ip, lsr r5
    3d94:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    3d98:	02006d05 	andeq	r6, r0, #320	; 0x140
    3d9c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3da0:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    3da4:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    3da8:	15052030 	strne	r2, [r5, #-48]	; 0xffffffd0
    3dac:	06070520 	streq	r0, [r7], -r0, lsr #10
    3db0:	06190526 	ldreq	r0, [r9], -r6, lsr #10
    3db4:	06050501 	streq	r0, [r5], -r1, lsl #10
    3db8:	0610053f 			; <UNDEFINED> instruction: 0x0610053f
    3dbc:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    3dc0:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    3dc4:	3c620301 	stclcc	3, cr0, [r2], #-4
    3dc8:	03060705 	movweq	r0, #26373	; 0x6705
    3dcc:	5b5b2e21 	blpl	16cf658 <_Min_Heap_Size+0x16cee58>
    3dd0:	0616055b 			; <UNDEFINED> instruction: 0x0616055b
    3dd4:	06070501 	streq	r0, [r7], -r1, lsl #10
    3dd8:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    3ddc:	06070501 	streq	r0, [r7], -r1, lsl #10
    3de0:	06100532 			; <UNDEFINED> instruction: 0x06100532
    3de4:	200a0501 	andcs	r0, sl, r1, lsl #10
    3de8:	31060905 	tstcc	r6, r5, lsl #18
    3dec:	01061e05 	tsteq	r6, r5, lsl #28
    3df0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3df4:	31060104 	tstcc	r6, r4, lsl #2
    3df8:	01040200 	mrseq	r0, R12_usr
    3dfc:	04020001 	streq	r0, [r2], #-1
    3e00:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3e04:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3e08:	001f0502 	andseq	r0, pc, r2, lsl #10
    3e0c:	03010402 	movweq	r0, #5122	; 0x1402
    3e10:	0520679a 	streq	r6, [r0, #-1946]!	; 0xfffff866
    3e14:	04020005 	streq	r0, [r2], #-5
    3e18:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3e1c:	01040200 	mrseq	r0, R12_usr
    3e20:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e24:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3e28:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e2c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e30:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e34:	00090501 	andeq	r0, r9, r1, lsl #10
    3e38:	03010402 	movweq	r0, #5122	; 0x1402
    3e3c:	000118e1 	andeq	r1, r1, r1, ror #17
    3e40:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e44:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3e48:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3e4c:	67cd0301 	strbvs	r0, [sp, r1, lsl #6]
    3e50:	00040501 	andeq	r0, r4, r1, lsl #10
    3e54:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3e58:	01040200 	mrseq	r0, R12_usr
    3e5c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e60:	00200601 	eoreq	r0, r0, r1, lsl #12
    3e64:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e68:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e6c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e70:	00090501 	andeq	r0, r9, r1, lsl #10
    3e74:	03010402 	movweq	r0, #5122	; 0x1402
    3e78:	000118ae 	andeq	r1, r1, lr, lsr #17
    3e7c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3e80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3e84:	0d051502 	cfstr32eq	mvfx1, [r5, #-8]
    3e88:	02040200 	andeq	r0, r4, #0, 4
    3e8c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3e90:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3e94:	0402000c 	streq	r0, [r2], #-12
    3e98:	0b052002 	bleq	14bea8 <_Min_Heap_Size+0x14b6a8>
    3e9c:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    3ea0:	02002e2e 	andeq	r2, r0, #736	; 0x2e0
    3ea4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    3ea8:	04020009 	streq	r0, [r2], #-9
    3eac:	07051a01 	streq	r1, [r5, -r1, lsl #20]
    3eb0:	053c0f03 	ldreq	r0, [ip, #-3843]!	; 0xfffff0fd
    3eb4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3eb8:	47052801 	strmi	r2, [r5, -r1, lsl #16]
    3ebc:	01040200 	mrseq	r0, R12_usr
    3ec0:	3c7fab03 			; <UNDEFINED> instruction: 0x3c7fab03
    3ec4:	02003805 	andeq	r3, r0, #327680	; 0x50000
    3ec8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    3ecc:	13300607 	teqne	r0, #7340032	; 0x700000
    3ed0:	01061305 	tsteq	r6, r5, lsl #6
    3ed4:	21060705 	tstcs	r6, r5, lsl #14
    3ed8:	01062605 	tsteq	r6, r5, lsl #12
    3edc:	05203005 	streq	r3, [r0, #-5]!
    3ee0:	14052016 	strne	r2, [r5], #-22	; 0xffffffea
    3ee4:	0607052e 	streq	r0, [r7], -lr, lsr #10
    3ee8:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    3eec:	06090501 	streq	r0, [r9], -r1, lsl #10
    3ef0:	054a0d03 	strbeq	r0, [sl, #-3331]	; 0xfffff2fd
    3ef4:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    3ef8:	17052030 	smladxne	r5, r0, r0, r2
    3efc:	2e150520 	cfmul64cs	mvdx0, mvdx5, mvdx0
    3f00:	03060905 	movweq	r0, #26885	; 0x6905
    3f04:	2e062e37 	mcrcs	14, 0, r2, cr6, cr7, {1}
    3f08:	0a030c05 	beq	c6f24 <_Min_Heap_Size+0xc6724>
    3f0c:	051c2020 	ldreq	r2, [ip, #-32]	; 0xffffffe0
    3f10:	01022601 	tsteq	r2, r1, lsl #12
    3f14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3f18:	02050001 	andeq	r0, r5, #1
    3f1c:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    3f20:	0112ae03 	tsteq	r2, r3, lsl #28
    3f24:	03050106 	movweq	r0, #20742	; 0x5106
    3f28:	19053d06 	stmdbne	r5, {r1, r2, r8, sl, fp, ip, sp}
    3f2c:	0c050106 	stfeqs	f0, [r5], {6}
    3f30:	06030520 	streq	r0, [r3], -r0, lsr #10
    3f34:	060c0521 	streq	r0, [ip], -r1, lsr #10
    3f38:	06030501 	streq	r0, [r3], -r1, lsl #10
    3f3c:	060c0521 	streq	r0, [ip], -r1, lsr #10
    3f40:	06030501 	streq	r0, [r3], -r1, lsl #10
    3f44:	13151321 	tstne	r5, #-2080374784	; 0x84000000
    3f48:	01060605 	tsteq	r6, r5, lsl #12
    3f4c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    3f50:	06080523 	streq	r0, [r8], -r3, lsr #10
    3f54:	002f0501 	eoreq	r0, pc, r1, lsl #10
    3f58:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3f5c:	44060305 	strmi	r0, [r6], #-773	; 0xfffffcfb
    3f60:	01060605 	tsteq	r6, r5, lsl #12
    3f64:	02001d05 	andeq	r1, r0, #320	; 0x140
    3f68:	00200104 	eoreq	r0, r0, r4, lsl #2
    3f6c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3f70:	05212105 	streq	r2, [r1, #-261]!	; 0xfffffefb
    3f74:	eb030603 	bl	c5788 <_Min_Heap_Size+0xc4f88>
    3f78:	0d053c00 	stceq	12, cr3, [r5, #-0]
    3f7c:	06050106 	streq	r0, [r5], -r6, lsl #2
    3f80:	06030520 	streq	r0, [r3], -r0, lsr #10
    3f84:	2e00dd03 	cdpcs	13, 0, cr13, cr0, cr3, {0}
    3f88:	01060605 	tsteq	r6, r5, lsl #12
    3f8c:	02002c05 	andeq	r2, r0, #1280	; 0x500
    3f90:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3f94:	05510603 	ldrbeq	r0, [r1, #-1539]	; 0xfffff9fd
    3f98:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3f9c:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    3fa0:	01053c01 	tsteq	r5, r1, lsl #24
    3fa4:	0607054f 	streq	r0, [r7], -pc, asr #10
    3fa8:	2e7ea503 	cdpcs	5, 7, cr10, cr14, cr3, {0}
    3fac:	2f062006 	svccs	0x00062006
    3fb0:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    3fb4:	06080520 	streq	r0, [r8], -r0, lsr #10
    3fb8:	002d0501 	eoreq	r0, sp, r1, lsl #10
    3fbc:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3fc0:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    3fc4:	01061805 	tsteq	r6, r5, lsl #16
    3fc8:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    3fcc:	01060805 	tsteq	r6, r5, lsl #16
    3fd0:	02002d05 	andeq	r2, r0, #320	; 0x140
    3fd4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3fd8:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    3fdc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3fe0:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    3fe4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3fe8:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    3fec:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3ff0:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    3ff4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3ff8:	08054e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, lr}
    3ffc:	2e050106 	adfcss	f0, f5, f6
    4000:	01040200 	mrseq	r0, R12_usr
    4004:	3d32053c 	cfldr32cc	mvfx0, [r2, #-240]!	; 0xffffff10
    4008:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    400c:	01061805 	tsteq	r6, r5, lsl #16
    4010:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    4014:	01060e05 	tsteq	r6, r5, lsl #28
    4018:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    401c:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    4020:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    4024:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4028:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    402c:	14054306 	strne	r4, [r5], #-774	; 0xfffffcfa
    4030:	07050106 	streq	r0, [r5, -r6, lsl #2]
    4034:	12054b06 	andne	r4, r5, #6144	; 0x1800
    4038:	0a050106 	beq	144458 <_Min_Heap_Size+0x143c58>
    403c:	003e0520 	eorseq	r0, lr, r0, lsr #10
    4040:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4044:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    4048:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
    404c:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    4050:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4054:	3e060104 	adfccs	f0, f6, f4
    4058:	01040200 	mrseq	r0, R12_usr
    405c:	04020001 	streq	r0, [r2], #-1
    4060:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4064:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4068:	001f0502 	andseq	r0, pc, r2, lsl #10
    406c:	03010402 	movweq	r0, #5122	; 0x1402
    4070:	052070e7 	streq	r7, [r0, #-231]!	; 0xffffff19
    4074:	04020005 	streq	r0, [r2], #-5
    4078:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    407c:	01040200 	mrseq	r0, R12_usr
    4080:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4084:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4088:	06010402 	streq	r0, [r1], -r2, lsl #8
    408c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4090:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4094:	000b0501 	andeq	r0, fp, r1, lsl #10
    4098:	03010402 	movweq	r0, #5122	; 0x1402
    409c:	00010f94 	muleq	r1, r4, pc	; <UNPREDICTABLE>
    40a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    40a4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    40a8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    40ac:	719a0301 	orrsvc	r0, sl, r1, lsl #6
    40b0:	00040501 	andeq	r0, r4, r1, lsl #10
    40b4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    40b8:	01040200 	mrseq	r0, R12_usr
    40bc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    40c0:	00200601 	eoreq	r0, r0, r1, lsl #12
    40c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    40c8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    40cc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    40d0:	000b0501 	andeq	r0, fp, r1, lsl #10
    40d4:	03010402 	movweq	r0, #5122	; 0x1402
    40d8:	00010ee1 	andeq	r0, r1, r1, ror #29
    40dc:	06020402 	streq	r0, [r2], -r2, lsl #8
    40e0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    40e4:	14051502 	strne	r1, [r5], #-1282	; 0xfffffafe
    40e8:	02040200 	andeq	r0, r4, #0, 4
    40ec:	0e050106 	adfeqs	f0, f5, f6
    40f0:	02040200 	andeq	r0, r4, #0, 4
    40f4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    40f8:	062e0524 	strteq	r0, [lr], -r4, lsr #10
    40fc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4100:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    4104:	3c100501 	cfldr32cc	mvfx0, [r0], {1}
    4108:	31060f05 	tstcc	r6, r5, lsl #30
    410c:	01061405 	tsteq	r6, r5, lsl #8
    4110:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    4114:	0905200f 	stmdbeq	r5, {r0, r1, r2, r3, sp}
    4118:	2e650306 	cdpcs	3, 6, cr0, cr5, cr6, {0}
    411c:	052e2006 	streq	r2, [lr, #-6]!
    4120:	2603060d 	strcs	r0, [r3], -sp, lsl #12
    4124:	030b0520 	movweq	r0, #46368	; 0xb520
    4128:	09054a0c 	stmdbeq	r5, {r2, r3, r9, fp, lr}
    412c:	3f4a0d03 	svccc	0x004a0d03
    4130:	01061a05 	tsteq	r6, r5, lsl #20
    4134:	31060505 	tstcc	r6, r5, lsl #10
    4138:	26060705 	strcs	r0, [r6], -r5, lsl #14
    413c:	0605054b 	streq	r0, [r5], -fp, asr #10
    4140:	2006014c 	andcs	r0, r6, ip, asr #2
    4144:	2e2e2006 	cdpcs	0, 2, cr2, cr14, cr6, {0}
    4148:	09051520 	stmdbeq	r5, {r5, r8, sl, ip}
    414c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    4150:	06070520 	streq	r0, [r7], -r0, lsr #10
    4154:	06320542 	ldrteq	r0, [r2], -r2, asr #10
    4158:	3c100501 	cfldr32cc	mvfx0, [r0], {1}
    415c:	21060705 	tstcs	r6, r5, lsl #14
    4160:	01060a05 	tsteq	r6, r5, lsl #20
    4164:	053d2b05 	ldreq	r2, [sp, #-2821]!	; 0xfffff4fb
    4168:	0905200b 	stmdbeq	r5, {r0, r1, r3, sp}
    416c:	1c053f06 	stcne	15, cr3, [r5], {6}
    4170:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4174:	20052306 	andcs	r2, r5, r6, lsl #6
    4178:	0c050106 	stfeqs	f0, [r5], {6}
    417c:	000b0520 	andeq	r0, fp, r0, lsr #10
    4180:	06010402 	streq	r0, [r1], -r2, lsl #8
    4184:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    4188:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    418c:	00010104 	andeq	r0, r1, r4, lsl #2
    4190:	01010402 	tsteq	r1, r2, lsl #8
    4194:	1f050204 	svcne	0x00050204
    4198:	01040200 	mrseq	r0, R12_usr
    419c:	20709503 	rsbscs	r9, r0, r3, lsl #10
    41a0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    41a4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    41a8:	04020004 	streq	r0, [r2], #-4
    41ac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    41b0:	2e060104 	adfcss	f0, f6, f4
    41b4:	01040200 	mrseq	r0, R12_usr
    41b8:	02002f06 	andeq	r2, r0, #6, 30
    41bc:	01060104 	tsteq	r6, r4, lsl #2
    41c0:	0b050104 	bleq	1445d8 <_Min_Heap_Size+0x143dd8>
    41c4:	01040200 	mrseq	r0, R12_usr
    41c8:	010fe603 	tsteq	pc, r3, lsl #12
    41cc:	01040200 	mrseq	r0, R12_usr
    41d0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    41d4:	02001f05 	andeq	r1, r0, #5, 30
    41d8:	c8030104 	stmdagt	r3, {r2, r8}
    41dc:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    41e0:	01040200 	mrseq	r0, R12_usr
    41e4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    41e8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    41ec:	20060104 	andcs	r0, r6, r4, lsl #2
    41f0:	01040200 	mrseq	r0, R12_usr
    41f4:	02002f06 	andeq	r2, r0, #6, 30
    41f8:	01060104 	tsteq	r6, r4, lsl #2
    41fc:	0b050104 	bleq	144614 <_Min_Heap_Size+0x143e14>
    4200:	01040200 	mrseq	r0, R12_usr
    4204:	010fb303 	tsteq	pc, r3, lsl #6
    4208:	01040200 	mrseq	r0, R12_usr
    420c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4210:	00010601 	andeq	r0, r1, r1, lsl #12
    4214:	13010402 	movwne	r0, #5122	; 0x1402
    4218:	01040200 	mrseq	r0, R12_usr
    421c:	04020001 	streq	r0, [r2], #-1
    4220:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4224:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4228:	001f0502 	andseq	r0, pc, r2, lsl #10
    422c:	03010402 	movweq	r0, #5122	; 0x1402
    4230:	05207094 	streq	r7, [r0, #-148]!	; 0xffffff6c
    4234:	04020005 	streq	r0, [r2], #-5
    4238:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    423c:	01040200 	mrseq	r0, R12_usr
    4240:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4244:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4248:	06010402 	streq	r0, [r1], -r2, lsl #8
    424c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4250:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4254:	000b0501 	andeq	r0, fp, r1, lsl #10
    4258:	03010402 	movweq	r0, #5122	; 0x1402
    425c:	00010fe7 	andeq	r0, r1, r7, ror #31
    4260:	06010402 	streq	r0, [r1], -r2, lsl #8
    4264:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4268:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    426c:	70c70301 	sbcvc	r0, r7, r1, lsl #6
    4270:	00040501 	andeq	r0, r4, r1, lsl #10
    4274:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4278:	01040200 	mrseq	r0, R12_usr
    427c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4280:	00200601 	eoreq	r0, r0, r1, lsl #12
    4284:	06010402 	streq	r0, [r1], -r2, lsl #8
    4288:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    428c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4290:	000b0501 	andeq	r0, fp, r1, lsl #10
    4294:	03010402 	movweq	r0, #5122	; 0x1402
    4298:	00010fb4 			; <UNDEFINED> instruction: 0x00010fb4
    429c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    42a0:	01040200 	mrseq	r0, R12_usr
    42a4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    42a8:	00160104 	andseq	r0, r6, r4, lsl #2
    42ac:	01010402 	tsteq	r1, r2, lsl #8
    42b0:	01040200 	mrseq	r0, R12_usr
    42b4:	04020001 	streq	r0, [r2], #-1
    42b8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    42bc:	02001f05 	andeq	r1, r0, #5, 30
    42c0:	90030104 	andls	r0, r3, r4, lsl #2
    42c4:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    42c8:	01040200 	mrseq	r0, R12_usr
    42cc:	00040514 	andeq	r0, r4, r4, lsl r5
    42d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    42d4:	01040200 	mrseq	r0, R12_usr
    42d8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    42dc:	2f060104 	svccs	0x00060104
    42e0:	01040200 	mrseq	r0, R12_usr
    42e4:	01040106 	tsteq	r4, r6, lsl #2
    42e8:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    42ec:	eb030104 	bl	c4704 <_Min_Heap_Size+0xc3f04>
    42f0:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    42f4:	2e060104 	adfcss	f0, f6, f4
    42f8:	1f050204 	svcne	0x00050204
    42fc:	01040200 	mrseq	r0, R12_usr
    4300:	0170c303 	cmneq	r0, r3, lsl #6
    4304:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4308:	00140104 	andseq	r0, r4, r4, lsl #2
    430c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4310:	01040200 	mrseq	r0, R12_usr
    4314:	02002006 	andeq	r2, r0, #6
    4318:	2f060104 	svccs	0x00060104
    431c:	01040200 	mrseq	r0, R12_usr
    4320:	01040106 	tsteq	r4, r6, lsl #2
    4324:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4328:	b8030104 	stmdalt	r3, {r2, r8}
    432c:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4330:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4334:	02040200 	andeq	r0, r4, #0, 4
    4338:	001a0515 	andseq	r0, sl, r5, lsl r5
    433c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4340:	04020001 	streq	r0, [r2], #-1
    4344:	0b052002 	bleq	14c354 <_Min_Heap_Size+0x14bb54>
    4348:	02040200 	andeq	r0, r4, #0, 4
    434c:	20052f06 	andcs	r2, r5, r6, lsl #30
    4350:	02040200 	andeq	r0, r4, #0, 4
    4354:	0b050106 	bleq	144774 <_Min_Heap_Size+0x143f74>
    4358:	01040200 	mrseq	r0, R12_usr
    435c:	02003006 	andeq	r3, r0, #6
    4360:	00010104 	andeq	r0, r1, r4, lsl #2
    4364:	01010402 	tsteq	r1, r2, lsl #8
    4368:	01040200 	mrseq	r0, R12_usr
    436c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4370:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4374:	708a0301 	addvc	r0, sl, r1, lsl #6
    4378:	00050520 	andeq	r0, r5, r0, lsr #10
    437c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4380:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4384:	00140104 	andseq	r0, r4, r4, lsl #2
    4388:	06010402 	streq	r0, [r1], -r2, lsl #8
    438c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4390:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4394:	06010402 	streq	r0, [r1], -r2, lsl #8
    4398:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    439c:	0402000b 	streq	r0, [r2], #-11
    43a0:	0ff10301 	svceq	0x00f10301
    43a4:	04020001 	streq	r0, [r2], #-1
    43a8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    43ac:	001f0502 	andseq	r0, pc, r2, lsl #10
    43b0:	03010402 	movweq	r0, #5122	; 0x1402
    43b4:	050170bd 	streq	r7, [r1, #-189]	; 0xffffff43
    43b8:	04020004 	streq	r0, [r2], #-4
    43bc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    43c0:	00140104 	andseq	r0, r4, r4, lsl #2
    43c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    43c8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    43cc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    43d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    43d4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    43d8:	0402000b 	streq	r0, [r2], #-11
    43dc:	0fbe0301 	svceq	0x00be0301
    43e0:	04020001 	streq	r0, [r2], #-1
    43e4:	002e0602 	eoreq	r0, lr, r2, lsl #12
    43e8:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    43ec:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    43f0:	01060204 	tsteq	r6, r4, lsl #4
    43f4:	02040200 	andeq	r0, r4, #0, 4
    43f8:	06090520 	streq	r0, [r9], -r0, lsr #10
    43fc:	061c0533 			; <UNDEFINED> instruction: 0x061c0533
    4400:	06090501 	streq	r0, [r9], -r1, lsl #10
    4404:	06310535 			; <UNDEFINED> instruction: 0x06310535
    4408:	20450501 	subcs	r0, r5, r1, lsl #10
    440c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    4410:	065b0607 	ldrbeq	r0, [fp], -r7, lsl #12
    4414:	05190620 	ldreq	r0, [r9, #-1568]	; 0xfffff9e0
    4418:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    441c:	10052036 	andne	r2, r5, r6, lsr r0
    4420:	0607052e 	streq	r0, [r7], -lr, lsr #10
    4424:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    4428:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    442c:	053d0b05 	ldreq	r0, [sp, #-2821]!	; 0xfffff4fb
    4430:	04020009 	streq	r0, [r2], #-9
    4434:	003f0601 	eorseq	r0, pc, r1, lsl #12
    4438:	01010402 	tsteq	r1, r2, lsl #8
    443c:	01040200 	mrseq	r0, R12_usr
    4440:	04020001 	streq	r0, [r2], #-1
    4444:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4448:	02001f05 	andeq	r1, r0, #5, 30
    444c:	ec030104 	stfs	f0, [r3], {4}
    4450:	0505206f 	streq	r2, [r5, #-111]	; 0xffffff91
    4454:	01040200 	mrseq	r0, R12_usr
    4458:	00040514 	andeq	r0, r4, r4, lsl r5
    445c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4460:	01040200 	mrseq	r0, R12_usr
    4464:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4468:	2f060104 	svccs	0x00060104
    446c:	01040200 	mrseq	r0, R12_usr
    4470:	01040106 	tsteq	r4, r6, lsl #2
    4474:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4478:	8f030104 	svchi	0x00030104
    447c:	02000110 	andeq	r0, r0, #16, 2
    4480:	2e060104 	adfcss	f0, f6, f4
    4484:	1f050204 	svcne	0x00050204
    4488:	01040200 	mrseq	r0, R12_usr
    448c:	01709f03 	cmneq	r0, r3, lsl #30
    4490:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4494:	00140104 	andseq	r0, r4, r4, lsl #2
    4498:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    449c:	01040200 	mrseq	r0, R12_usr
    44a0:	02002006 	andeq	r2, r0, #6
    44a4:	2f060104 	svccs	0x00060104
    44a8:	01040200 	mrseq	r0, R12_usr
    44ac:	01040106 	tsteq	r4, r6, lsl #2
    44b0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    44b4:	dc030104 	stfles	f0, [r3], {4}
    44b8:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    44bc:	002e0104 	eoreq	r0, lr, r4, lsl #2
    44c0:	06010402 	streq	r0, [r1], -r2, lsl #8
    44c4:	04020001 	streq	r0, [r2], #-1
    44c8:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    44cc:	00010104 	andeq	r0, r1, r4, lsl #2
    44d0:	01010402 	tsteq	r1, r2, lsl #8
    44d4:	01040200 	mrseq	r0, R12_usr
    44d8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    44dc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    44e0:	6fe90301 	svcvs	0x00e90301
    44e4:	00050520 	andeq	r0, r5, r0, lsr #10
    44e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    44ec:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    44f0:	00140104 	andseq	r0, r4, r4, lsl #2
    44f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    44f8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    44fc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4500:	06010402 	streq	r0, [r1], -r2, lsl #8
    4504:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4508:	04020009 	streq	r0, [r2], #-9
    450c:	10920301 	addsne	r0, r2, r1, lsl #6
    4510:	04020001 	streq	r0, [r2], #-1
    4514:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4518:	001f0502 	andseq	r0, pc, r2, lsl #10
    451c:	03010402 	movweq	r0, #5122	; 0x1402
    4520:	0501709c 	streq	r7, [r1, #-156]	; 0xffffff64
    4524:	04020004 	streq	r0, [r2], #-4
    4528:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    452c:	00140104 	andseq	r0, r4, r4, lsl #2
    4530:	06010402 	streq	r0, [r1], -r2, lsl #8
    4534:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4538:	002f0601 	eoreq	r0, pc, r1, lsl #12
    453c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4540:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4544:	04020009 	streq	r0, [r2], #-9
    4548:	0fdf0301 	svceq	0x00df0301
    454c:	04020001 	streq	r0, [r2], #-1
    4550:	002e0602 	eoreq	r0, lr, r2, lsl #12
    4554:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    4558:	02001805 	andeq	r1, r0, #327680	; 0x50000
    455c:	01060204 	tsteq	r6, r4, lsl #4
    4560:	02040200 	andeq	r0, r4, #0, 4
    4564:	00090520 	andeq	r0, r9, r0, lsr #10
    4568:	06020402 	streq	r0, [r2], -r2, lsl #8
    456c:	001e052f 	andseq	r0, lr, pc, lsr #10
    4570:	06020402 	streq	r0, [r2], -r2, lsl #8
    4574:	00090501 	andeq	r0, r9, r1, lsl #10
    4578:	06010402 	streq	r0, [r1], -r2, lsl #8
    457c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    4580:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4584:	00010104 	andeq	r0, r1, r4, lsl #2
    4588:	01010402 	tsteq	r1, r2, lsl #8
    458c:	1f050204 	svcne	0x00050204
    4590:	01040200 	mrseq	r0, R12_usr
    4594:	206fe303 	rsbcs	lr, pc, r3, lsl #6
    4598:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    459c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    45a0:	04020004 	streq	r0, [r2], #-4
    45a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    45a8:	2e060104 	adfcss	f0, f6, f4
    45ac:	01040200 	mrseq	r0, R12_usr
    45b0:	02002f06 	andeq	r2, r0, #6, 30
    45b4:	01060104 	tsteq	r6, r4, lsl #2
    45b8:	09050104 	stmdbeq	r5, {r2, r8}
    45bc:	01040200 	mrseq	r0, R12_usr
    45c0:	01109803 	tsteq	r0, r3, lsl #16
    45c4:	01040200 	mrseq	r0, R12_usr
    45c8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    45cc:	02001f05 	andeq	r1, r0, #5, 30
    45d0:	96030104 	strls	r0, [r3], -r4, lsl #2
    45d4:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    45d8:	01040200 	mrseq	r0, R12_usr
    45dc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    45e0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    45e4:	20060104 	andcs	r0, r6, r4, lsl #2
    45e8:	01040200 	mrseq	r0, R12_usr
    45ec:	02002f06 	andeq	r2, r0, #6, 30
    45f0:	01060104 	tsteq	r6, r4, lsl #2
    45f4:	09050104 	stmdbeq	r5, {r2, r8}
    45f8:	01040200 	mrseq	r0, R12_usr
    45fc:	010fe503 	tsteq	pc, r3, lsl #10
    4600:	02040200 	andeq	r0, r4, #0, 4
    4604:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4608:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    460c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    4610:	00010602 	andeq	r0, r1, r2, lsl #12
    4614:	20020402 	andcs	r0, r2, r2, lsl #8
    4618:	02000905 	andeq	r0, r0, #81920	; 0x14000
    461c:	27060204 	strcs	r0, [r6, -r4, lsl #4]
    4620:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    4624:	003f0204 	eorseq	r0, pc, r4, lsl #4
    4628:	06020402 	streq	r0, [r2], -r2, lsl #8
    462c:	06050520 	streq	r0, [r5], -r0, lsr #10
    4630:	06200619 			; <UNDEFINED> instruction: 0x06200619
    4634:	2006262f 	andcs	r2, r6, pc, lsr #12
    4638:	03022f06 	movweq	r2, #12038	; 0x2f06
    463c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4640:	02050001 	andeq	r0, r5, #1
    4644:	00000000 	andeq	r0, r0, r0
    4648:	0118a003 	tsteq	r8, r3
    464c:	03050106 	movweq	r0, #20742	; 0x5106
    4650:	17052106 	strne	r2, [r5, -r6, lsl #2]
    4654:	03050106 	movweq	r0, #20742	; 0x5106
    4658:	16052406 	strne	r2, [r5], -r6, lsl #8
    465c:	03050106 	movweq	r0, #20742	; 0x5106
    4660:	0c053206 	sfmeq	f3, 4, [r5], {6}
    4664:	06050106 	streq	r0, [r5], -r6, lsl #2
    4668:	06050520 	streq	r0, [r5], -r0, lsr #10
    466c:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    4670:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    4674:	72030605 	andvc	r0, r3, #5242880	; 0x500000
    4678:	062c0520 	strteq	r0, [ip], -r0, lsr #10
    467c:	20050501 	andcs	r0, r5, r1, lsl #10
    4680:	0001023c 	andeq	r0, r1, ip, lsr r2
    4684:	01050101 	tsteq	r5, r1, lsl #2
    4688:	00020500 	andeq	r0, r2, r0, lsl #10
    468c:	03000000 	movweq	r0, #0
    4690:	060117e2 	streq	r1, [r1], -r2, ror #15
    4694:	06030501 	streq	r0, [r3], -r1, lsl #10
    4698:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    469c:	06030501 	streq	r0, [r3], -r1, lsl #10
    46a0:	060c0523 	streq	r0, [ip], -r3, lsr #10
    46a4:	20160501 	andscs	r0, r6, r1, lsl #10
    46a8:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    46ac:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    46b0:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    46b4:	04020005 	streq	r0, [r2], #-5
    46b8:	00310601 	eorseq	r0, r1, r1, lsl #12
    46bc:	01010402 	tsteq	r1, r2, lsl #8
    46c0:	01040200 	mrseq	r0, R12_usr
    46c4:	04020001 	streq	r0, [r2], #-1
    46c8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    46cc:	02001f05 	andeq	r1, r0, #5, 30
    46d0:	f0030104 			; <UNDEFINED> instruction: 0xf0030104
    46d4:	0505206b 	streq	r2, [r5, #-107]	; 0xffffff95
    46d8:	01040200 	mrseq	r0, R12_usr
    46dc:	00040514 	andeq	r0, r4, r4, lsl r5
    46e0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    46e4:	01040200 	mrseq	r0, R12_usr
    46e8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    46ec:	2f060104 	svccs	0x00060104
    46f0:	01040200 	mrseq	r0, R12_usr
    46f4:	01040106 	tsteq	r4, r6, lsl #2
    46f8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    46fc:	8b030104 	blhi	c4b14 <_Min_Heap_Size+0xc4314>
    4700:	02000114 	andeq	r0, r0, #20, 2
    4704:	2e060104 	adfcss	f0, f6, f4
    4708:	1f050204 	svcne	0x00050204
    470c:	01040200 	mrseq	r0, R12_usr
    4710:	016ca303 	cmneq	ip, r3, lsl #6
    4714:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4718:	00140104 	andseq	r0, r4, r4, lsl #2
    471c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4720:	01040200 	mrseq	r0, R12_usr
    4724:	02002006 	andeq	r2, r0, #6
    4728:	2f060104 	svccs	0x00060104
    472c:	01040200 	mrseq	r0, R12_usr
    4730:	01040106 	tsteq	r4, r6, lsl #2
    4734:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4738:	d8030104 	stmdale	r3, {r2, r8}
    473c:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    4740:	002e0104 	eoreq	r0, lr, r4, lsl #2
    4744:	06010402 	streq	r0, [r1], -r2, lsl #8
    4748:	04020001 	streq	r0, [r2], #-1
    474c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    4750:	00010104 	andeq	r0, r1, r4, lsl #2
    4754:	01010402 	tsteq	r1, r2, lsl #8
    4758:	01040200 	mrseq	r0, R12_usr
    475c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4760:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4764:	6bef0301 	blvs	ffbc5370 <_estack+0xdfbc4138>
    4768:	00050520 	andeq	r0, r5, r0, lsr #10
    476c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4770:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4774:	00140104 	andseq	r0, r4, r4, lsl #2
    4778:	06010402 	streq	r0, [r1], -r2, lsl #8
    477c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4780:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4784:	06010402 	streq	r0, [r1], -r2, lsl #8
    4788:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    478c:	04020005 	streq	r0, [r2], #-5
    4790:	148c0301 	strne	r0, [ip], #769	; 0x301
    4794:	04020001 	streq	r0, [r2], #-1
    4798:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    479c:	001f0502 	andseq	r0, pc, r2, lsl #10
    47a0:	03010402 	movweq	r0, #5122	; 0x1402
    47a4:	05016ca2 	streq	r6, [r1, #-3234]	; 0xfffff35e
    47a8:	04020004 	streq	r0, [r2], #-4
    47ac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    47b0:	00140104 	andseq	r0, r4, r4, lsl #2
    47b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    47b8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    47bc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    47c0:	06010402 	streq	r0, [r1], -r2, lsl #8
    47c4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    47c8:	04020005 	streq	r0, [r2], #-5
    47cc:	13d90301 	bicsne	r0, r9, #67108864	; 0x4000000
    47d0:	04020001 	streq	r0, [r2], #-1
    47d4:	02002e01 	andeq	r2, r0, #1, 28
    47d8:	01060104 	tsteq	r6, r4, lsl #2
    47dc:	01040200 	mrseq	r0, R12_usr
    47e0:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    47e4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    47e8:	00010104 	andeq	r0, r1, r4, lsl #2
    47ec:	01010402 	tsteq	r1, r2, lsl #8
    47f0:	1f050204 	svcne	0x00050204
    47f4:	01040200 	mrseq	r0, R12_usr
    47f8:	206beb03 	rsbcs	lr, fp, r3, lsl #22
    47fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4800:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4804:	04020004 	streq	r0, [r2], #-4
    4808:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    480c:	2e060104 	adfcss	f0, f6, f4
    4810:	01040200 	mrseq	r0, R12_usr
    4814:	02002f06 	andeq	r2, r0, #6, 30
    4818:	01060104 	tsteq	r6, r4, lsl #2
    481c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    4820:	01040200 	mrseq	r0, R12_usr
    4824:	01149003 	tsteq	r4, r3
    4828:	01040200 	mrseq	r0, R12_usr
    482c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4830:	02001f05 	andeq	r1, r0, #5, 30
    4834:	9e030104 	adflss	f0, f3, f4
    4838:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    483c:	01040200 	mrseq	r0, R12_usr
    4840:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4844:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4848:	20060104 	andcs	r0, r6, r4, lsl #2
    484c:	01040200 	mrseq	r0, R12_usr
    4850:	02002f06 	andeq	r2, r0, #6, 30
    4854:	01060104 	tsteq	r6, r4, lsl #2
    4858:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    485c:	01040200 	mrseq	r0, R12_usr
    4860:	0113dd03 	tsteq	r3, r3, lsl #26
    4864:	02040200 	andeq	r0, r4, #0, 4
    4868:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    486c:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    4870:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4874:	00010602 	andeq	r0, r1, r2, lsl #12
    4878:	20020402 	andcs	r0, r2, r2, lsl #8
    487c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4880:	31060204 	tstcc	r6, r4, lsl #4
    4884:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    4888:	01060204 	tsteq	r6, r4, lsl #4
    488c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    4890:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4894:	04020007 	streq	r0, [r2], #-7
    4898:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    489c:	04020003 	streq	r0, [r2], #-3
    48a0:	16051802 	strne	r1, [r5], -r2, lsl #16
    48a4:	02040200 	andeq	r0, r4, #0, 4
    48a8:	03050106 	movweq	r0, #20742	; 0x5106
    48ac:	02040200 	andeq	r0, r4, #0, 4
    48b0:	0c053206 	sfmeq	f3, 4, [r5], {6}
    48b4:	02040200 	andeq	r0, r4, #0, 4
    48b8:	06050106 	streq	r0, [r5], -r6, lsl #2
    48bc:	02040200 	andeq	r0, r4, #0, 4
    48c0:	06050520 	streq	r0, [r5], -r0, lsr #10
    48c4:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    48c8:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    48cc:	04020007 	streq	r0, [r2], #-7
    48d0:	61030601 	tstvs	r3, r1, lsl #12
    48d4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    48d8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    48dc:	00010104 	andeq	r0, r1, r4, lsl #2
    48e0:	01010402 	tsteq	r1, r2, lsl #8
    48e4:	1f050204 	svcne	0x00050204
    48e8:	01040200 	mrseq	r0, R12_usr
    48ec:	206be303 	rsbcs	lr, fp, r3, lsl #6
    48f0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    48f4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    48f8:	04020004 	streq	r0, [r2], #-4
    48fc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4900:	2e060104 	adfcss	f0, f6, f4
    4904:	01040200 	mrseq	r0, R12_usr
    4908:	02002f06 	andeq	r2, r0, #6, 30
    490c:	01060104 	tsteq	r6, r4, lsl #2
    4910:	07050104 	streq	r0, [r5, -r4, lsl #2]
    4914:	01040200 	mrseq	r0, R12_usr
    4918:	01149803 	tsteq	r4, r3, lsl #16
    491c:	01040200 	mrseq	r0, R12_usr
    4920:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4924:	02001f05 	andeq	r1, r0, #5, 30
    4928:	96030104 	strls	r0, [r3], -r4, lsl #2
    492c:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    4930:	01040200 	mrseq	r0, R12_usr
    4934:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4938:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    493c:	20060104 	andcs	r0, r6, r4, lsl #2
    4940:	01040200 	mrseq	r0, R12_usr
    4944:	02002f06 	andeq	r2, r0, #6, 30
    4948:	01060104 	tsteq	r6, r4, lsl #2
    494c:	07050104 	streq	r0, [r5, -r4, lsl #2]
    4950:	01040200 	mrseq	r0, R12_usr
    4954:	0113e503 	tsteq	r3, r3, lsl #10
    4958:	01040200 	mrseq	r0, R12_usr
    495c:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    4960:	06011103 	streq	r1, [r1], -r3, lsl #2
    4964:	0001023c 	andeq	r0, r1, ip, lsr r2
    4968:	01050101 	tsteq	r5, r1, lsl #2
    496c:	00020500 	andeq	r0, r2, r0, lsl #10
    4970:	03000000 	movweq	r0, #0
    4974:	060115c1 	streq	r1, [r1], -r1, asr #11
    4978:	06030501 	streq	r0, [r3], -r1, lsl #10
    497c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    4980:	004a0601 	subeq	r0, sl, r1, lsl #12
    4984:	4a020402 	bmi	85994 <_Min_Heap_Size+0x85194>
    4988:	03040200 	movweq	r0, #16896	; 0x4200
    498c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4990:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    4994:	004a0504 	subeq	r0, sl, r4, lsl #10
    4998:	4a060402 	bmi	1859a8 <_Min_Heap_Size+0x1851a8>
    499c:	06040200 	streq	r0, [r4], -r0, lsl #4
    49a0:	0131063c 	teqeq	r1, ip, lsr r6
    49a4:	02040200 	andeq	r0, r4, #0, 4
    49a8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    49ac:	02003c02 	andeq	r3, r0, #512	; 0x200
    49b0:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    49b4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    49b8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    49bc:	04020003 	streq	r0, [r2], #-3
    49c0:	003f0601 	eorseq	r0, pc, r1, lsl #12
    49c4:	01010402 	tsteq	r1, r2, lsl #8
    49c8:	01040200 	mrseq	r0, R12_usr
    49cc:	04020001 	streq	r0, [r2], #-1
    49d0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    49d4:	02001f05 	andeq	r1, r0, #5, 30
    49d8:	90030104 	andls	r0, r3, r4, lsl #2
    49dc:	0505206e 	streq	r2, [r5, #-110]	; 0xffffff92
    49e0:	01040200 	mrseq	r0, R12_usr
    49e4:	00040514 	andeq	r0, r4, r4, lsl r5
    49e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    49ec:	01040200 	mrseq	r0, R12_usr
    49f0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    49f4:	2f060104 	svccs	0x00060104
    49f8:	01040200 	mrseq	r0, R12_usr
    49fc:	01040106 	tsteq	r4, r6, lsl #2
    4a00:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4a04:	eb030104 	bl	c4e1c <_Min_Heap_Size+0xc461c>
    4a08:	02000111 	andeq	r0, r0, #1073741828	; 0x40000004
    4a0c:	2e060104 	adfcss	f0, f6, f4
    4a10:	1f050204 	svcne	0x00050204
    4a14:	01040200 	mrseq	r0, R12_usr
    4a18:	016ec303 	cmneq	lr, r3, lsl #6
    4a1c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4a20:	00140104 	andseq	r0, r4, r4, lsl #2
    4a24:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4a28:	01040200 	mrseq	r0, R12_usr
    4a2c:	02002006 	andeq	r2, r0, #6
    4a30:	2f060104 	svccs	0x00060104
    4a34:	01040200 	mrseq	r0, R12_usr
    4a38:	01040106 	tsteq	r4, r6, lsl #2
    4a3c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4a40:	b8030104 	stmdalt	r3, {r2, r8}
    4a44:	02000111 	andeq	r0, r0, #1073741828	; 0x40000004
    4a48:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4a4c:	02040200 	andeq	r0, r4, #0, 4
    4a50:	00110514 	andseq	r0, r1, r4, lsl r5
    4a54:	06020402 	streq	r0, [r2], -r2, lsl #8
    4a58:	04020001 	streq	r0, [r2], #-1
    4a5c:	03052002 	movweq	r2, #20482	; 0x5002
    4a60:	02040200 	andeq	r0, r4, #0, 4
    4a64:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4a68:	00010204 	andeq	r0, r1, r4, lsl #4
    4a6c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4a70:	02040200 	andeq	r0, r4, #0, 4
    4a74:	06010514 			; <UNDEFINED> instruction: 0x06010514
    4a78:	03030513 	movweq	r0, #13587	; 0x3513
    4a7c:	06022073 			; <UNDEFINED> instruction: 0x06022073
    4a80:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4a84:	02050001 	andeq	r0, r5, #1
    4a88:	00000000 	andeq	r0, r0, r0
    4a8c:	0115dc03 	tsteq	r5, r3, lsl #24
    4a90:	03050106 	movweq	r0, #20742	; 0x5106
    4a94:	02003006 	andeq	r3, r0, #6
    4a98:	4a060104 	bmi	184eb0 <_Min_Heap_Size+0x1846b0>
    4a9c:	02040200 	andeq	r0, r4, #0, 4
    4aa0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4aa4:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    4aa8:	004a0404 	subeq	r0, sl, r4, lsl #8
    4aac:	4a050402 	bmi	145abc <_Min_Heap_Size+0x1452bc>
    4ab0:	06040200 	streq	r0, [r4], -r0, lsl #4
    4ab4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4ab8:	31063c06 	tstcc	r6, r6, lsl #24
    4abc:	04020001 	streq	r0, [r2], #-1
    4ac0:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4ac4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4ac8:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4acc:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4ad0:	01060204 	tsteq	r6, r4, lsl #4
    4ad4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4ad8:	3f060104 	svccc	0x00060104
    4adc:	01040200 	mrseq	r0, R12_usr
    4ae0:	04020001 	streq	r0, [r2], #-1
    4ae4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4ae8:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4aec:	001f0502 	andseq	r0, pc, r2, lsl #10
    4af0:	03010402 	movweq	r0, #5122	; 0x1402
    4af4:	05206df5 	streq	r6, [r0, #-3573]!	; 0xfffff20b
    4af8:	04020005 	streq	r0, [r2], #-5
    4afc:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4b00:	01040200 	mrseq	r0, R12_usr
    4b04:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4b08:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4b0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b10:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4b14:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4b18:	00030501 	andeq	r0, r3, r1, lsl #10
    4b1c:	03010402 	movweq	r0, #5122	; 0x1402
    4b20:	00011286 	andeq	r1, r1, r6, lsl #5
    4b24:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b28:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4b2c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4b30:	6ea80301 	cdpvs	3, 10, cr0, cr8, cr1, {0}
    4b34:	00040501 	andeq	r0, r4, r1, lsl #10
    4b38:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4b3c:	01040200 	mrseq	r0, R12_usr
    4b40:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4b44:	00200601 	eoreq	r0, r0, r1, lsl #12
    4b48:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b4c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4b50:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4b54:	00030501 	andeq	r0, r3, r1, lsl #10
    4b58:	03010402 	movweq	r0, #5122	; 0x1402
    4b5c:	000111d3 	ldrdeq	r1, [r1], -r3
    4b60:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b64:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b68:	11051402 	tstne	r5, r2, lsl #8
    4b6c:	02040200 	andeq	r0, r4, #0, 4
    4b70:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4b74:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4b78:	04020003 	streq	r0, [r2], #-3
    4b7c:	052f0602 	streq	r0, [pc, #-1538]!	; 4582 <_Min_Heap_Size+0x3d82>
    4b80:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4b84:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4b88:	04020003 	streq	r0, [r2], #-3
    4b8c:	00310602 	eorseq	r0, r1, r2, lsl #12
    4b90:	01020402 	tsteq	r2, r2, lsl #8
    4b94:	02040200 	andeq	r0, r4, #0, 4
    4b98:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b9c:	01051402 	tsteq	r5, r2, lsl #8
    4ba0:	03051306 	movweq	r1, #21254	; 0x5306
    4ba4:	02207203 	eoreq	r7, r0, #805306368	; 0x30000000
    4ba8:	01010007 	tsteq	r1, r7
    4bac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4bb0:	00000002 	andeq	r0, r0, r2
    4bb4:	15f80300 	ldrbne	r0, [r8, #768]!	; 0x300
    4bb8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4bbc:	00300603 	eorseq	r0, r0, r3, lsl #12
    4bc0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bc4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4bc8:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4bcc:	004a0304 	subeq	r0, sl, r4, lsl #6
    4bd0:	4a040402 	bmi	105be0 <_Min_Heap_Size+0x1053e0>
    4bd4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    4bd8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4bdc:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4be0:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    4be4:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    4be8:	004a0204 	subeq	r0, sl, r4, lsl #4
    4bec:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4bf0:	02040200 	andeq	r0, r4, #0, 4
    4bf4:	00110514 	andseq	r0, r1, r4, lsl r5
    4bf8:	06020402 	streq	r0, [r2], -r2, lsl #8
    4bfc:	00030501 	andeq	r0, r3, r1, lsl #10
    4c00:	06010402 	streq	r0, [r1], -r2, lsl #8
    4c04:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    4c08:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4c0c:	00010104 	andeq	r0, r1, r4, lsl #2
    4c10:	01010402 	tsteq	r1, r2, lsl #8
    4c14:	1f050204 	svcne	0x00050204
    4c18:	01040200 	mrseq	r0, R12_usr
    4c1c:	206dd903 	rsbcs	sp, sp, r3, lsl #18
    4c20:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4c24:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4c28:	04020004 	streq	r0, [r2], #-4
    4c2c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4c30:	2e060104 	adfcss	f0, f6, f4
    4c34:	01040200 	mrseq	r0, R12_usr
    4c38:	02002f06 	andeq	r2, r0, #6, 30
    4c3c:	01060104 	tsteq	r6, r4, lsl #2
    4c40:	03050104 	movweq	r0, #20740	; 0x5104
    4c44:	01040200 	mrseq	r0, R12_usr
    4c48:	0112a203 	tsteq	r2, r3, lsl #4
    4c4c:	01040200 	mrseq	r0, R12_usr
    4c50:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4c54:	02001f05 	andeq	r1, r0, #5, 30
    4c58:	8c030104 	stfhis	f0, [r3], {4}
    4c5c:	0405016e 	streq	r0, [r5], #-366	; 0xfffffe92
    4c60:	01040200 	mrseq	r0, R12_usr
    4c64:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4c68:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4c6c:	20060104 	andcs	r0, r6, r4, lsl #2
    4c70:	01040200 	mrseq	r0, R12_usr
    4c74:	02002f06 	andeq	r2, r0, #6, 30
    4c78:	01060104 	tsteq	r6, r4, lsl #2
    4c7c:	03050104 	movweq	r0, #20740	; 0x5104
    4c80:	01040200 	mrseq	r0, R12_usr
    4c84:	0111ef03 	tsteq	r1, r3, lsl #30
    4c88:	02040200 	andeq	r0, r4, #0, 4
    4c8c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4c90:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4c94:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4c98:	00010602 	andeq	r0, r1, r2, lsl #12
    4c9c:	20020402 	andcs	r0, r2, r2, lsl #8
    4ca0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4ca4:	2f060204 	svccs	0x00060204
    4ca8:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4cac:	01060204 	tsteq	r6, r4, lsl #4
    4cb0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4cb4:	31060204 	tstcc	r6, r4, lsl #4
    4cb8:	02040200 	andeq	r0, r4, #0, 4
    4cbc:	04020001 	streq	r0, [r2], #-1
    4cc0:	02002e02 	andeq	r2, r0, #2, 28
    4cc4:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4cc8:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    4ccc:	20720303 	rsbscs	r0, r2, r3, lsl #6
    4cd0:	01000702 	tsteq	r0, r2, lsl #14
    4cd4:	00010501 	andeq	r0, r1, r1, lsl #10
    4cd8:	00000205 	andeq	r0, r0, r5, lsl #4
    4cdc:	94030000 	strls	r0, [r3], #-0
    4ce0:	03050116 	movweq	r0, #20758	; 0x5116
    4ce4:	00011513 	andeq	r1, r1, r3, lsl r5
    4ce8:	4a020402 	bmi	85cf8 <_Min_Heap_Size+0x854f8>
    4cec:	02040200 	andeq	r0, r4, #0, 4
    4cf0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4cf4:	11051402 	tstne	r5, r2, lsl #8
    4cf8:	02040200 	andeq	r0, r4, #0, 4
    4cfc:	03050106 	movweq	r0, #20742	; 0x5106
    4d00:	02040200 	andeq	r0, r4, #0, 4
    4d04:	11053f06 	tstne	r5, r6, lsl #30
    4d08:	02040200 	andeq	r0, r4, #0, 4
    4d0c:	0a050106 	beq	14512c <_Min_Heap_Size+0x14492c>
    4d10:	02040200 	andeq	r0, r4, #0, 4
    4d14:	00030520 	andeq	r0, r3, r0, lsr #10
    4d18:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d1c:	000a0523 	andeq	r0, sl, r3, lsr #10
    4d20:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d24:	00030501 	andeq	r0, r3, r1, lsl #10
    4d28:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d2c:	000a0531 	andeq	r0, sl, r1, lsr r5
    4d30:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d34:	00030501 	andeq	r0, r3, r1, lsl #10
    4d38:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d3c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4d40:	11052202 	tstne	r5, r2, lsl #4
    4d44:	02040200 	andeq	r0, r4, #0, 4
    4d48:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4d4c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4d50:	04020003 	streq	r0, [r2], #-3
    4d54:	00310602 	eorseq	r0, r1, r2, lsl #12
    4d58:	01020402 	tsteq	r2, r2, lsl #8
    4d5c:	02040200 	andeq	r0, r4, #0, 4
    4d60:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4d64:	0a051402 	beq	149d74 <_Min_Heap_Size+0x149574>
    4d68:	02040200 	andeq	r0, r4, #0, 4
    4d6c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4d70:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4d74:	206b0303 	rsbcs	r0, fp, r3, lsl #6
    4d78:	16030105 	strne	r0, [r3], -r5, lsl #2
    4d7c:	00010220 	andeq	r0, r1, r0, lsr #4
    4d80:	01050101 	tsteq	r5, r1, lsl #2
    4d84:	00020500 	andeq	r0, r2, r0, lsl #10
    4d88:	03000000 	movweq	r0, #0
    4d8c:	050116b7 	streq	r1, [r1, #-1719]	; 0xfffff949
    4d90:	01151303 	tsteq	r5, r3, lsl #6
    4d94:	02040200 	andeq	r0, r4, #0, 4
    4d98:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4d9c:	02003c02 	andeq	r3, r0, #512	; 0x200
    4da0:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4da4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4da8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4dac:	04020003 	streq	r0, [r2], #-3
    4db0:	053f0602 	ldreq	r0, [pc, #-1538]!	; 47b6 <_Min_Heap_Size+0x3fb6>
    4db4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4db8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4dbc:	0402000a 	streq	r0, [r2], #-10
    4dc0:	03052002 	movweq	r2, #20482	; 0x5002
    4dc4:	02040200 	andeq	r0, r4, #0, 4
    4dc8:	0a052306 	beq	14d9e8 <_Min_Heap_Size+0x14d1e8>
    4dcc:	02040200 	andeq	r0, r4, #0, 4
    4dd0:	03050106 	movweq	r0, #20742	; 0x5106
    4dd4:	02040200 	andeq	r0, r4, #0, 4
    4dd8:	0a053106 	beq	1511f8 <_Min_Heap_Size+0x1509f8>
    4ddc:	02040200 	andeq	r0, r4, #0, 4
    4de0:	03050106 	movweq	r0, #20742	; 0x5106
    4de4:	02040200 	andeq	r0, r4, #0, 4
    4de8:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4dec:	05220204 	streq	r0, [r2, #-516]!	; 0xfffffdfc
    4df0:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4df4:	00010602 	andeq	r0, r1, r2, lsl #12
    4df8:	20020402 	andcs	r0, r2, r2, lsl #8
    4dfc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4e00:	31060204 	tstcc	r6, r4, lsl #4
    4e04:	02040200 	andeq	r0, r4, #0, 4
    4e08:	04020001 	streq	r0, [r2], #-1
    4e0c:	02003c02 	andeq	r3, r0, #512	; 0x200
    4e10:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4e14:	0402000a 	streq	r0, [r2], #-10
    4e18:	00010602 	andeq	r0, r1, r2, lsl #12
    4e1c:	20020402 	andcs	r0, r2, r2, lsl #8
    4e20:	6b030305 	blvs	c5a3c <_Min_Heap_Size+0xc523c>
    4e24:	03010520 	movweq	r0, #5408	; 0x1520
    4e28:	01022016 	tsteq	r2, r6, lsl r0
    4e2c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4e30:	02050001 	andeq	r0, r5, #1
    4e34:	00000000 	andeq	r0, r0, r0
    4e38:	0116f003 	tsteq	r6, r3	; <UNPREDICTABLE>
    4e3c:	13130305 	tstne	r3, #335544320	; 0x14000000
    4e40:	01061005 	tsteq	r6, r5
    4e44:	2f060305 	svccs	0x00060305
    4e48:	01061005 	tsteq	r6, r5
    4e4c:	30060305 	andcc	r0, r6, r5, lsl #6
    4e50:	13060105 	movwne	r0, #24837	; 0x6105
    4e54:	00010220 	andeq	r0, r1, r0, lsr #4
    4e58:	01050101 	tsteq	r5, r1, lsl #2
    4e5c:	00020500 	andeq	r0, r2, r0, lsl #10
    4e60:	03000000 	movweq	r0, #0
    4e64:	050116ff 	streq	r1, [r1, #-1791]	; 0xfffff901
    4e68:	0f051303 	svceq	0x00051303
    4e6c:	01050106 	tsteq	r5, r6, lsl #2
    4e70:	00010221 	andeq	r0, r1, r1, lsr #4
    4e74:	01050101 	tsteq	r5, r1, lsl #2
    4e78:	00020500 	andeq	r0, r2, r0, lsl #10
    4e7c:	03000000 	movweq	r0, #0
    4e80:	050119a4 	streq	r1, [r1, #-2468]	; 0xfffff65c
    4e84:	15051303 	strne	r1, [r5, #-771]	; 0xfffffcfd
    4e88:	03050106 	movweq	r0, #20742	; 0x5106
    4e8c:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    4e90:	03050106 	movweq	r0, #20742	; 0x5106
    4e94:	16052106 	strne	r2, [r5], -r6, lsl #2
    4e98:	03050106 	movweq	r0, #20742	; 0x5106
    4e9c:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    4ea0:	03050106 	movweq	r0, #20742	; 0x5106
    4ea4:	12052f06 	andne	r2, r5, #6, 30
    4ea8:	03050106 	movweq	r0, #20742	; 0x5106
    4eac:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    4eb0:	06050106 	streq	r0, [r5], -r6, lsl #2
    4eb4:	06050520 	streq	r0, [r5], -r0, lsr #10
    4eb8:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    4ebc:	5b4e0603 	blpl	13866d0 <_Min_Heap_Size+0x1385ed0>
    4ec0:	0601055a 			; <UNDEFINED> instruction: 0x0601055a
    4ec4:	01022013 	tsteq	r2, r3, lsl r0
    4ec8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4ecc:	02050001 	andeq	r0, r5, #1
    4ed0:	00000000 	andeq	r0, r0, r0
    4ed4:	010ac303 	tsteq	sl, r3, lsl #6
    4ed8:	03050106 	movweq	r0, #20742	; 0x5106
    4edc:	0c052206 	sfmeq	f2, 4, [r5], {6}
    4ee0:	06050106 	streq	r0, [r5], -r6, lsl #2
    4ee4:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    4ee8:	06080530 			; <UNDEFINED> instruction: 0x06080530
    4eec:	00190501 	andseq	r0, r9, r1, lsl #10
    4ef0:	20010402 	andcs	r0, r1, r2, lsl #8
    4ef4:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    4ef8:	200c0301 	andcs	r0, ip, r1, lsl #6
    4efc:	03060505 	movweq	r0, #25861	; 0x6505
    4f00:	1a052078 	bne	14d0e8 <_Min_Heap_Size+0x14c8e8>
    4f04:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f08:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    4f0c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    4f10:	0520240c 	streq	r2, [r0, #-1036]!	; 0xfffffbf4
    4f14:	2076030e 	rsbscs	r0, r6, lr, lsl #6
    4f18:	00010220 	andeq	r0, r1, r0, lsr #4
    4f1c:	01050101 	tsteq	r5, r1, lsl #2
    4f20:	00020500 	andeq	r0, r2, r0, lsl #10
    4f24:	03000000 	movweq	r0, #0
    4f28:	05010db1 	streq	r0, [r1, #-3505]	; 0xfffff24f
    4f2c:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    4f30:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4f34:	01053c06 	tsteq	r5, r6, lsl #24
    4f38:	0605052a 	streq	r0, [r5], -sl, lsr #10
    4f3c:	06080542 	streq	r0, [r8], -r2, asr #10
    4f40:	00190501 	andseq	r0, r9, r1, lsl #10
    4f44:	20010402 	andcs	r0, r1, r2, lsl #8
    4f48:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    4f4c:	20210301 	eorcs	r0, r1, r1, lsl #6
    4f50:	03060505 	movweq	r0, #25861	; 0x6505
    4f54:	1a052e63 	bne	1508e8 <_Min_Heap_Size+0x1500e8>
    4f58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f5c:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    4f60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f64:	0f053006 	svceq	0x00053006
    4f68:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f6c:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    4f70:	07050106 	streq	r0, [r5, -r6, lsl #2]
    4f74:	10053006 	andne	r3, r5, r6
    4f78:	0a050106 	beq	145398 <_Min_Heap_Size+0x144b98>
    4f7c:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    4f80:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    4f84:	0c052406 	cfstrseq	mvf2, [r5], {6}
    4f88:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4f8c:	20730306 	rsbscs	r0, r3, r6, lsl #6
    4f90:	2e3c2e01 	cdpcs	14, 3, cr2, cr12, cr1, {0}
    4f94:	01040200 	mrseq	r0, R12_usr
    4f98:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4f9c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    4fa0:	00010104 	andeq	r0, r1, r4, lsl #2
    4fa4:	01010402 	tsteq	r1, r2, lsl #8
    4fa8:	01040200 	mrseq	r0, R12_usr
    4fac:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4fb0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4fb4:	76930301 	ldrvc	r0, [r3], r1, lsl #6
    4fb8:	00050520 	andeq	r0, r5, r0, lsr #10
    4fbc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4fc0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4fc4:	00140104 	andseq	r0, r4, r4, lsl #2
    4fc8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fcc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4fd0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4fd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fd8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4fdc:	04020009 	streq	r0, [r2], #-9
    4fe0:	09e80301 	stmibeq	r8!, {r0, r8, r9}^
    4fe4:	04020001 	streq	r0, [r2], #-1
    4fe8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4fec:	001f0502 	andseq	r0, pc, r2, lsl #10
    4ff0:	03010402 	movweq	r0, #5122	; 0x1402
    4ff4:	050176c6 	streq	r7, [r1, #-1734]	; 0xfffff93a
    4ff8:	04020004 	streq	r0, [r2], #-4
    4ffc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    5000:	00140104 	andseq	r0, r4, r4, lsl #2
    5004:	06010402 	streq	r0, [r1], -r2, lsl #8
    5008:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    500c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    5010:	06010402 	streq	r0, [r1], -r2, lsl #8
    5014:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5018:	04020009 	streq	r0, [r2], #-9
    501c:	09b50301 	ldmibeq	r5!, {r0, r8, r9}
    5020:	04020001 	streq	r0, [r2], #-1
    5024:	0c053c01 	stceq	12, cr3, [r5], {1}
    5028:	05011003 	streq	r1, [r1, #-3]
    502c:	0e052201 	cdpeq	2, 0, cr2, cr5, cr1, {0}
    5030:	20205f03 	eorcs	r5, r0, r3, lsl #30
    5034:	01000102 	tsteq	r0, r2, lsl #2
    5038:	00010501 	andeq	r0, r1, r1, lsl #10
    503c:	00000205 	andeq	r0, r0, r5, lsl #4
    5040:	c7030000 	strgt	r0, [r3, -r0]
    5044:	01060119 	tsteq	r6, r9, lsl r1
    5048:	4b060305 	blmi	185c64 <_Min_Heap_Size+0x185464>
    504c:	06150514 			; <UNDEFINED> instruction: 0x06150514
    5050:	06030501 	streq	r0, [r3], -r1, lsl #10
    5054:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    5058:	06030501 	streq	r0, [r3], -r1, lsl #10
    505c:	06140522 	ldreq	r0, [r4], -r2, lsr #10
    5060:	06030501 	streq	r0, [r3], -r1, lsl #10
    5064:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    5068:	03052001 	movweq	r2, #20481	; 0x5001
    506c:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    5070:	23050106 	movwcs	r0, #20742	; 0x5106
    5074:	03052020 	movweq	r2, #20512	; 0x5020
    5078:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    507c:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    5080:	06030520 	streq	r0, [r3], -r0, lsr #10
    5084:	06080531 			; <UNDEFINED> instruction: 0x06080531
    5088:	20240501 	eorcs	r0, r4, r1, lsl #10
    508c:	31060305 	tstcc	r6, r5, lsl #6
    5090:	01060805 	tsteq	r6, r5, lsl #16
    5094:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    5098:	13230603 			; <UNDEFINED> instruction: 0x13230603
    509c:	01063305 	tsteq	r6, r5, lsl #6
    50a0:	2e200305 	cdpcs	3, 2, cr0, cr0, cr5, {0}
    50a4:	20013f06 	andcs	r3, r1, r6, lsl #30
    50a8:	14202e3c 	strtne	r2, [r0], #-3644	; 0xfffff1c4
    50ac:	01061205 	tsteq	r6, r5, lsl #4
    50b0:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    50b4:	04020005 	streq	r0, [r2], #-5
    50b8:	00230601 	eoreq	r0, r3, r1, lsl #12
    50bc:	01010402 	tsteq	r1, r2, lsl #8
    50c0:	01040200 	mrseq	r0, R12_usr
    50c4:	04020001 	streq	r0, [r2], #-1
    50c8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    50cc:	02001f05 	andeq	r1, r0, #5, 30
    50d0:	f5030104 			; <UNDEFINED> instruction: 0xf5030104
    50d4:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    50d8:	01040200 	mrseq	r0, R12_usr
    50dc:	00040514 	andeq	r0, r4, r4, lsl r5
    50e0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    50e4:	01040200 	mrseq	r0, R12_usr
    50e8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    50ec:	2f060104 	svccs	0x00060104
    50f0:	01040200 	mrseq	r0, R12_usr
    50f4:	01040106 	tsteq	r4, r6, lsl #2
    50f8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    50fc:	86030104 	strhi	r0, [r3], -r4, lsl #2
    5100:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    5104:	2e060104 	adfcss	f0, f6, f4
    5108:	1f050204 	svcne	0x00050204
    510c:	01040200 	mrseq	r0, R12_usr
    5110:	016aa803 	cmneq	sl, r3, lsl #16
    5114:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5118:	00140104 	andseq	r0, r4, r4, lsl #2
    511c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5120:	01040200 	mrseq	r0, R12_usr
    5124:	02002006 	andeq	r2, r0, #6
    5128:	2f060104 	svccs	0x00060104
    512c:	01040200 	mrseq	r0, R12_usr
    5130:	01040106 	tsteq	r4, r6, lsl #2
    5134:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5138:	d3030104 	movwle	r0, #12548	; 0x3104
    513c:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    5140:	002e0104 	eoreq	r0, lr, r4, lsl #2
    5144:	06010402 	streq	r0, [r1], -r2, lsl #8
    5148:	00030501 	andeq	r0, r3, r1, lsl #10
    514c:	16010402 	strne	r0, [r1], -r2, lsl #8
    5150:	01040200 	mrseq	r0, R12_usr
    5154:	04020001 	streq	r0, [r2], #-1
    5158:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    515c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    5160:	001f0502 	andseq	r0, pc, r2, lsl #10
    5164:	03010402 	movweq	r0, #5122	; 0x1402
    5168:	052069f1 	streq	r6, [r0, #-2545]!	; 0xfffff60f
    516c:	04020005 	streq	r0, [r2], #-5
    5170:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    5174:	01040200 	mrseq	r0, R12_usr
    5178:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    517c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5180:	06010402 	streq	r0, [r1], -r2, lsl #8
    5184:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5188:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    518c:	00030501 	andeq	r0, r3, r1, lsl #10
    5190:	03010402 	movweq	r0, #5122	; 0x1402
    5194:	0001168a 	andeq	r1, r1, sl, lsl #13
    5198:	06010402 	streq	r0, [r1], -r2, lsl #8
    519c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    51a0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    51a4:	6aa40301 	bvs	fe905db0 <_estack+0xde904b78>
    51a8:	00040501 	andeq	r0, r4, r1, lsl #10
    51ac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    51b0:	01040200 	mrseq	r0, R12_usr
    51b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    51b8:	00200601 	eoreq	r0, r0, r1, lsl #12
    51bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    51c0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    51c4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    51c8:	00030501 	andeq	r0, r3, r1, lsl #10
    51cc:	03010402 	movweq	r0, #5122	; 0x1402
    51d0:	000115d7 	ldrdeq	r1, [r1], -r7
    51d4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    51d8:	01040200 	mrseq	r0, R12_usr
    51dc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    51e0:	00160104 	andseq	r0, r6, r4, lsl #2
    51e4:	01010402 	tsteq	r1, r2, lsl #8
    51e8:	01040200 	mrseq	r0, R12_usr
    51ec:	04020001 	streq	r0, [r2], #-1
    51f0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    51f4:	02001f05 	andeq	r1, r0, #5, 30
    51f8:	ed030104 	stfs	f0, [r3, #-16]
    51fc:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    5200:	01040200 	mrseq	r0, R12_usr
    5204:	00040514 	andeq	r0, r4, r4, lsl r5
    5208:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    520c:	01040200 	mrseq	r0, R12_usr
    5210:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5214:	2f060104 	svccs	0x00060104
    5218:	01040200 	mrseq	r0, R12_usr
    521c:	01040106 	tsteq	r4, r6, lsl #2
    5220:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5224:	8e030104 	adfhis	f0, f3, f4
    5228:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    522c:	2e060104 	adfcss	f0, f6, f4
    5230:	1f050204 	svcne	0x00050204
    5234:	01040200 	mrseq	r0, R12_usr
    5238:	016aa003 	cmneq	sl, r3
    523c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5240:	00140104 	andseq	r0, r4, r4, lsl #2
    5244:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5248:	01040200 	mrseq	r0, R12_usr
    524c:	02002006 	andeq	r2, r0, #6
    5250:	2f060104 	svccs	0x00060104
    5254:	01040200 	mrseq	r0, R12_usr
    5258:	01040106 	tsteq	r4, r6, lsl #2
    525c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5260:	db030104 	blle	c5678 <_Min_Heap_Size+0xc4e78>
    5264:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    5268:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    526c:	02040200 	andeq	r0, r4, #0, 4
    5270:	00010514 	andeq	r0, r1, r4, lsl r5
    5274:	06020402 	streq	r0, [r2], -r2, lsl #8
    5278:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    527c:	06023c02 	streq	r3, [r2], -r2, lsl #24
    5280:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5284:	02050001 	andeq	r0, r5, #1
    5288:	00000000 	andeq	r0, r0, r0
    528c:	010ba103 	tsteq	fp, r3, lsl #2
    5290:	03050106 	movweq	r0, #20742	; 0x5106
    5294:	0c052206 	sfmeq	f2, 4, [r5], {6}
    5298:	06050106 	streq	r0, [r5], -r6, lsl #2
    529c:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    52a0:	06080530 			; <UNDEFINED> instruction: 0x06080530
    52a4:	00190501 	andseq	r0, r9, r1, lsl #10
    52a8:	20010402 	andcs	r0, r1, r2, lsl #8
    52ac:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    52b0:	200c0301 	andcs	r0, ip, r1, lsl #6
    52b4:	03060505 	movweq	r0, #25861	; 0x6505
    52b8:	1a052078 	bne	14d4a0 <_Min_Heap_Size+0x14cca0>
    52bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    52c0:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    52c4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    52c8:	0520240c 	streq	r2, [r0, #-1036]!	; 0xfffffbf4
    52cc:	2076030e 	rsbscs	r0, r6, lr, lsl #6
    52d0:	00010220 	andeq	r0, r1, r0, lsr #4
    52d4:	01050101 	tsteq	r5, r1, lsl #2
    52d8:	00020500 	andeq	r0, r2, r0, lsl #10
    52dc:	03000000 	movweq	r0, #0
    52e0:	05010ded 	streq	r0, [r1, #-3565]	; 0xfffff213
    52e4:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    52e8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    52ec:	01053c06 	tsteq	r5, r6, lsl #24
    52f0:	0605052a 	streq	r0, [r5], -sl, lsr #10
    52f4:	06080542 	streq	r0, [r8], -r2, asr #10
    52f8:	00190501 	andseq	r0, r9, r1, lsl #10
    52fc:	20010402 	andcs	r0, r1, r2, lsl #8
    5300:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    5304:	20210301 	eorcs	r0, r1, r1, lsl #6
    5308:	03060505 	movweq	r0, #25861	; 0x6505
    530c:	1a052e63 	bne	150ca0 <_Min_Heap_Size+0x1504a0>
    5310:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5314:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    5318:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    531c:	0f053006 	svceq	0x00053006
    5320:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5324:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    5328:	07050106 	streq	r0, [r5, -r6, lsl #2]
    532c:	10053006 	andne	r3, r5, r6
    5330:	0a050106 	beq	145750 <_Min_Heap_Size+0x144f50>
    5334:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    5338:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    533c:	0c052406 	cfstrseq	mvf2, [r5], {6}
    5340:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5344:	20730306 	rsbscs	r0, r3, r6, lsl #6
    5348:	2e3c2e01 	cdpcs	14, 3, cr2, cr12, cr1, {0}
    534c:	01040200 	mrseq	r0, R12_usr
    5350:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5354:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    5358:	00010104 	andeq	r0, r1, r4, lsl #2
    535c:	01010402 	tsteq	r1, r2, lsl #8
    5360:	01040200 	mrseq	r0, R12_usr
    5364:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    5368:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    536c:	75d70301 	ldrbvc	r0, [r7, #769]	; 0x301
    5370:	00050520 	andeq	r0, r5, r0, lsr #10
    5374:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5378:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    537c:	00140104 	andseq	r0, r4, r4, lsl #2
    5380:	06010402 	streq	r0, [r1], -r2, lsl #8
    5384:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5388:	002f0601 	eoreq	r0, pc, r1, lsl #12
    538c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5390:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5394:	04020009 	streq	r0, [r2], #-9
    5398:	0aa40301 	beq	fe905fa4 <_estack+0xde904d6c>
    539c:	04020001 	streq	r0, [r2], #-1
    53a0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    53a4:	001f0502 	andseq	r0, pc, r2, lsl #10
    53a8:	03010402 	movweq	r0, #5122	; 0x1402
    53ac:	0501768a 	streq	r7, [r1, #-1674]	; 0xfffff976
    53b0:	04020004 	streq	r0, [r2], #-4
    53b4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    53b8:	00140104 	andseq	r0, r4, r4, lsl #2
    53bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    53c0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    53c4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    53c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    53cc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    53d0:	04020009 	streq	r0, [r2], #-9
    53d4:	09f10301 	ldmibeq	r1!, {r0, r8, r9}^
    53d8:	04020001 	streq	r0, [r2], #-1
    53dc:	0c053c01 	stceq	12, cr3, [r5], {1}
    53e0:	05011003 	streq	r1, [r1, #-3]
    53e4:	0e052201 	cdpeq	2, 0, cr2, cr5, cr1, {0}
    53e8:	20205f03 	eorcs	r5, r0, r3, lsl #30
    53ec:	01000102 	tsteq	r0, r2, lsl #2
    53f0:	000ca701 	andeq	sl, ip, r1, lsl #14
    53f4:	41000300 	mrsmi	r0, LR_irq
    53f8:	02000002 	andeq	r0, r0, #2
    53fc:	0d0efb01 	vstreq	d15, [lr, #-4]
    5400:	01010100 	mrseq	r0, (UNDEF: 17)
    5404:	00000001 	andeq	r0, r0, r1
    5408:	01000001 	tsteq	r0, r1
    540c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 5414 <_Min_Heap_Size+0x4c14>
    5410:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    5414:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    5418:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    541c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    5420:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    5424:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    5428:	2f726576 	svccs	0x00726576
    542c:	00637253 	rsbeq	r7, r3, r3, asr r2
    5430:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    5434:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    5438:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    543c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    5440:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    5444:	615c6d61 	cmpvs	ip, r1, ror #26
    5448:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    544c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    5450:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    5454:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    5458:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    545c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    5460:	2e30312d 	rsfcssp	f3, f0, #5.0
    5464:	30322d33 	eorscc	r2, r2, r3, lsr sp
    5468:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    546c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    5470:	6f6e2d6d 	svcvs	0x006e2d6d
    5474:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5478:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    547c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5480:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    5484:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    5488:	00656e69 	rsbeq	r6, r5, r9, ror #28
    548c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    5490:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    5494:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    5498:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    549c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    54a0:	615c6d61 	cmpvs	ip, r1, ror #26
    54a4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    54a8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    54ac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    54b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    54b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    54b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    54bc:	2e30312d 	rsfcssp	f3, f0, #5.0
    54c0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    54c4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    54c8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    54cc:	6f6e2d6d 	svcvs	0x006e2d6d
    54d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    54d4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    54d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    54dc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    54e0:	00737973 	rsbseq	r7, r3, r3, ror r9
    54e4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 54ec <_Min_Heap_Size+0x4cec>
    54e8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    54ec:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    54f0:	5349534d 	movtpl	r5, #37709	; 0x934d
    54f4:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    54f8:	2f656369 	svccs	0x00656369
    54fc:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    5500:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    5504:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    5508:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    550c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5510:	2f2e2e00 	svccs	0x002e2e00
    5514:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    5518:	2f737265 	svccs	0x00737265
    551c:	334d5453 	movtcc	r5, #54355	; 0xd453
    5520:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    5524:	41485f78 	hvcmi	34296	; 0x85f8
    5528:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    552c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    5530:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    5534:	2f2e2e00 	svccs	0x002e2e00
    5538:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    553c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    5540:	74730000 	ldrbtvc	r0, [r3], #-0
    5544:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5548:	5f787834 	svcpl	0x00787834
    554c:	5f6c6168 	svcpl	0x006c6168
    5550:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    5554:	00010063 	andeq	r0, r1, r3, rrx
    5558:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    555c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    5560:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    5564:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    5568:	00020068 	andeq	r0, r2, r8, rrx
    556c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    5570:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    5574:	0300682e 	movweq	r6, #2094	; 0x82e
    5578:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    557c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    5580:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    5584:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5588:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    558c:	00000400 	andeq	r0, r0, r0, lsl #8
    5590:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5594:	30346632 	eorscc	r6, r4, r2, lsr r6
    5598:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    559c:	00040068 	andeq	r0, r4, r8, rrx
    55a0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    55a4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    55a8:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    55ac:	00000400 	andeq	r0, r0, r0, lsl #8
    55b0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    55b4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    55b8:	61685f78 	smcvs	34296	; 0x85f8
    55bc:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    55c0:	00682e66 	rsbeq	r2, r8, r6, ror #28
    55c4:	73000005 	movwvc	r0, #5
    55c8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    55cc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    55d0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    55d4:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    55d8:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
    55dc:	00050068 	andeq	r0, r5, r8, rrx
    55e0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    55e4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    55e8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    55ec:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    55f0:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    55f4:	00000500 	andeq	r0, r0, r0, lsl #10
    55f8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    55fc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5600:	61685f78 	smcvs	34296	; 0x85f8
    5604:	70675f6c 	rsbvc	r5, r7, ip, ror #30
    5608:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    560c:	00000500 	andeq	r0, r0, r0, lsl #10
    5610:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5614:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5618:	61685f78 	smcvs	34296	; 0x85f8
    561c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    5620:	73000005 	movwvc	r0, #5
    5624:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5628:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    562c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5630:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    5634:	00682e66 	rsbeq	r2, r8, r6, ror #28
    5638:	00000006 	andeq	r0, r0, r6
    563c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5640:	00000002 	andeq	r0, r0, r2
    5644:	01c80300 	biceq	r0, r8, r0, lsl #6
    5648:	13030501 	movwne	r0, #13569	; 0x3501
    564c:	13060105 	movwne	r0, #24837	; 0x6105
    5650:	01000202 	tsteq	r0, r2, lsl #4
    5654:	00010501 	andeq	r0, r1, r1, lsl #10
    5658:	00000205 	andeq	r0, r0, r5, lsl #4
    565c:	db030000 	blle	c5664 <_Min_Heap_Size+0xc4e64>
    5660:	03050101 	movweq	r0, #20737	; 0x5101
    5664:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    5668:	01050106 	tsteq	r5, r6, lsl #2
    566c:	06030538 			; <UNDEFINED> instruction: 0x06030538
    5670:	3e3c0a03 	vaddcc.f32	s0, s24, s6
    5674:	01061905 	tsteq	r6, r5, lsl #18
    5678:	06200505 	strteq	r0, [r0], -r5, lsl #10
    567c:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    5680:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5684:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5688:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    568c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5690:	0009054a 	andeq	r0, r9, sl, asr #10
    5694:	2f010402 	svccs	0x00010402
    5698:	02003c05 	andeq	r3, r0, #1280	; 0x500
    569c:	05490104 	strbeq	r0, [r9, #-260]	; 0xfffffefc
    56a0:	0b030607 	bleq	c6ec4 <_Min_Heap_Size+0xc66c4>
    56a4:	0200012e 	andeq	r0, r0, #-2147483637	; 0x8000000b
    56a8:	004a0204 	subeq	r0, sl, r4, lsl #4
    56ac:	3c050402 	cfstrscc	mvf0, [r5], {2}
    56b0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    56b4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    56b8:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    56bc:	05150704 	ldreq	r0, [r5, #-1796]	; 0xfffff8fc
    56c0:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    56c4:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    56c8:	04020009 	streq	r0, [r2], #-9
    56cc:	31062007 	tstcc	r6, r7
    56d0:	01061505 	tsteq	r6, r5, lsl #10
    56d4:	3f060905 	svccc	0x00060905
    56d8:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    56dc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    56e0:	0b052e0e 	bleq	150f20 <_Min_Heap_Size+0x150720>
    56e4:	0f053e06 	svceq	0x00053e06
    56e8:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    56ec:	200d052e 	andcs	r0, sp, lr, lsr #10
    56f0:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    56f4:	04020003 	streq	r0, [r2], #-3
    56f8:	2e610301 	cdpcs	3, 6, cr0, cr1, cr1, {0}
    56fc:	01040200 	mrseq	r0, R12_usr
    5700:	0005052e 	andeq	r0, r5, lr, lsr #10
    5704:	41030402 	tstmi	r3, r2, lsl #8
    5708:	055b4405 	ldrbeq	r4, [fp, #-1029]	; 0xfffffbfb
    570c:	07052e3c 	smladxeq	r5, ip, lr, r2
    5710:	0b053e06 	bleq	154f30 <_Min_Heap_Size+0x154730>
    5714:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5718:	004e052e 	subeq	r0, lr, lr, lsr #10
    571c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5720:	02003905 	andeq	r3, r0, #81920	; 0x14000
    5724:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    5728:	2a030603 	bcs	c6f3c <_Min_Heap_Size+0xc673c>
    572c:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    5730:	20050501 	andcs	r0, r5, r1, lsl #10
    5734:	3f3d3f06 	svccc	0x003d3f06
    5738:	01060905 	tsteq	r6, r5, lsl #18
    573c:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    5740:	04020009 	streq	r0, [r2], #-9
    5744:	3c053d01 	stccc	13, cr3, [r5], {1}
    5748:	01040200 	mrseq	r0, R12_usr
    574c:	06070549 	streq	r0, [r7], -r9, asr #10
    5750:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    5754:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    5758:	31062009 	tstcc	r6, r9
    575c:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    5760:	06090501 	streq	r0, [r9], -r1, lsl #10
    5764:	010e053f 	tsteq	lr, pc, lsr r5
    5768:	01060f05 	tsteq	r6, r5, lsl #30
    576c:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5770:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    5774:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5778:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    577c:	30140520 	andscc	r0, r4, r0, lsr #10
    5780:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    5784:	03060104 	movweq	r0, #24836	; 0x6104
    5788:	002e7fb8 	strhteq	r7, [lr], -r8
    578c:	66040402 	strvs	r0, [r4], -r2, lsl #8
    5790:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5794:	03090558 	movweq	r0, #38232	; 0x9558
    5798:	15055814 	strne	r5, [r5, #-2068]	; 0xfffff7ec
    579c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    57a0:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    57a4:	060f0501 	streq	r0, [pc], -r1, lsl #10
    57a8:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    57ac:	3e060b05 	vmlacc.f64	d0, d6, d5
    57b0:	01060f05 	tsteq	r6, r5, lsl #30
    57b4:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    57b8:	1405200d 	strne	r2, [r5], #-13
    57bc:	00050530 	andeq	r0, r5, r0, lsr r5
    57c0:	03010402 	movweq	r0, #5122	; 0x1402
    57c4:	02002e0a 	andeq	r2, r0, #10, 28	; 0xa0
    57c8:	05670104 	strbeq	r0, [r7, #-260]!	; 0xfffffefc
    57cc:	3c056a44 			; <UNDEFINED> instruction: 0x3c056a44
    57d0:	0607052e 	streq	r0, [r7], -lr, lsr #10
    57d4:	060b053f 			; <UNDEFINED> instruction: 0x060b053f
    57d8:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    57dc:	02004e05 	andeq	r4, r0, #5, 28	; 0x50
    57e0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    57e4:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    57e8:	09052001 	stmdbeq	r5, {r0, sp}
    57ec:	03054406 	movweq	r4, #21510	; 0x5406
    57f0:	05822e03 	streq	r2, [r2, #3587]	; 0xe03
    57f4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    57f8:	3f062005 	svccc	0x00062005
    57fc:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    5800:	20070501 	andcs	r0, r7, r1, lsl #10
    5804:	054d2306 	strbeq	r2, [sp, #-774]	; 0xfffffcfa
    5808:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    580c:	053f0607 	ldreq	r0, [pc, #-1543]!	; 520d <_Min_Heap_Size+0x4a0d>
    5810:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    5814:	0c050106 	stfeqs	f0, [r5], {6}
    5818:	0609052e 	streq	r0, [r9], -lr, lsr #10
    581c:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    5820:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    5824:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    5828:	09053012 	stmdbeq	r5, {r1, r4, ip, sp}
    582c:	2e570306 	cdpcs	3, 5, cr0, cr7, cr6, {0}
    5830:	15053f95 	strne	r3, [r5, #-3989]	; 0xfffff06b
    5834:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5838:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    583c:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5840:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    5844:	3e060b05 	vmlacc.f64	d0, d6, d5
    5848:	01060f05 	tsteq	r6, r5, lsl #30
    584c:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5850:	1405200d 	strne	r2, [r5], #-13
    5854:	00050530 	andeq	r0, r5, r0, lsr r5
    5858:	03010402 	movweq	r0, #5122	; 0x1402
    585c:	07052e0a 	streq	r2, [r5, -sl, lsl #28]
    5860:	66170306 	ldrvs	r0, [r7], -r6, lsl #6
    5864:	0613054d 	ldreq	r0, [r3], -sp, asr #10
    5868:	06070501 	streq	r0, [r7], -r1, lsl #10
    586c:	010c053f 	tsteq	ip, pc, lsr r5
    5870:	01060d05 	tsteq	r6, r5, lsl #26
    5874:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    5878:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    587c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5880:	0b052e1b 	bleq	1510f4 <_Min_Heap_Size+0x1508f4>
    5884:	30120520 	andscc	r0, r2, r0, lsr #10
    5888:	88060305 	stmdahi	r6, {r0, r2, r8, r9}
    588c:	01061905 	tsteq	r6, r5, lsl #18
    5890:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5894:	0200153e 	andeq	r1, r0, #260046848	; 0xf800000
    5898:	3c060104 	stfccs	f0, [r6], {4}
    589c:	08053206 	stmdaeq	r5, {r1, r2, r9, ip, sp}
    58a0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    58a4:	013e062e 	teqeq	lr, lr, lsr #12
    58a8:	204a582e 	subcs	r5, sl, lr, lsr #16
    58ac:	06150513 			; <UNDEFINED> instruction: 0x06150513
    58b0:	06050501 	streq	r0, [r5], -r1, lsl #10
    58b4:	06080523 	streq	r0, [r8], -r3, lsr #10
    58b8:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    58bc:	03060505 	movweq	r0, #25861	; 0x6505
    58c0:	00013c12 	andeq	r3, r1, r2, lsl ip
    58c4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    58c8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    58cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    58d0:	02005805 	andeq	r5, r0, #327680	; 0x50000
    58d4:	004a0704 	subeq	r0, sl, r4, lsl #14
    58d8:	14070402 	strne	r0, [r7], #-1026	; 0xfffffbfe
    58dc:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    58e0:	01060704 	tsteq	r6, r4, lsl #14
    58e4:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    58e8:	06200704 	strteq	r0, [r0], -r4, lsl #14
    58ec:	06130531 			; <UNDEFINED> instruction: 0x06130531
    58f0:	06070501 	streq	r0, [r7], -r1, lsl #10
    58f4:	010c053f 	tsteq	ip, pc, lsr r5
    58f8:	01060d05 	tsteq	r6, r5, lsl #26
    58fc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    5900:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    5904:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5908:	0b052e1b 	bleq	15117c <_Min_Heap_Size+0x15097c>
    590c:	4c120520 	cfldr32mi	mvfx0, [r2], {32}
    5910:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5914:	58030204 	stmdapl	r3, {r2, r9}
    5918:	6316052e 	tstvs	r6, #192937984	; 0xb800000
    591c:	03060705 	movweq	r0, #26373	; 0x6705
    5920:	055b2e10 	ldrbeq	r2, [fp, #-3600]	; 0xfffff1f0
    5924:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    5928:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    592c:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    5930:	0c050106 	stfeqs	f0, [r5], {6}
    5934:	0609052e 	streq	r0, [r9], -lr, lsr #10
    5938:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    593c:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    5940:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    5944:	05053012 	streq	r3, [r5, #-18]	; 0xffffffee
    5948:	01040200 	mrseq	r0, R12_usr
    594c:	02003406 	andeq	r3, r0, #100663296	; 0x6000000
    5950:	00660404 	rsbeq	r0, r6, r4, lsl #8
    5954:	58040402 	stmdapl	r4, {r1, sl}
    5958:	13030705 	movwne	r0, #14085	; 0x3705
    595c:	06130558 			; <UNDEFINED> instruction: 0x06130558
    5960:	06070501 	streq	r0, [r7], -r1, lsl #10
    5964:	010c053f 	tsteq	ip, pc, lsr r5
    5968:	01060d05 	tsteq	r6, r5, lsl #26
    596c:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    5970:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    5974:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5978:	0b052e1b 	bleq	1511ec <_Min_Heap_Size+0x1509ec>
    597c:	4c120520 	cfldr32mi	mvfx0, [r2], {32}
    5980:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    5984:	01060705 	tsteq	r6, r5, lsl #14
    5988:	0603052e 	streq	r0, [r3], -lr, lsr #10
    598c:	1e053d19 	mcrne	13, 0, r3, cr5, cr9, {0}
    5990:	06050106 	streq	r0, [r5], -r6, lsl #2
    5994:	06050520 	streq	r0, [r5], -r0, lsr #10
    5998:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    599c:	4a070501 	bmi	1c6da8 <_Min_Heap_Size+0x1c65a8>
    59a0:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    59a4:	31060106 	tstcc	r6, r6, lsl #2
    59a8:	01040200 	mrseq	r0, R12_usr
    59ac:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    59b0:	0200594b 	andeq	r5, r0, #1228800	; 0x12c000
    59b4:	3c060104 	stfccs	f0, [r6], {4}
    59b8:	02040200 	andeq	r0, r4, #0, 4
    59bc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    59c0:	2f062e03 	svccs	0x00062e03
    59c4:	15053f4d 	strne	r3, [r5, #-3917]	; 0xfffff0b3
    59c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    59cc:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    59d0:	060f0501 	streq	r0, [pc], -r1, lsl #10
    59d4:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    59d8:	3e060b05 	vmlacc.f64	d0, d6, d5
    59dc:	01060f05 	tsteq	r6, r5, lsl #30
    59e0:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    59e4:	1405200d 	strne	r2, [r5], #-13
    59e8:	06070530 			; <UNDEFINED> instruction: 0x06070530
    59ec:	062e6103 	strteq	r6, [lr], -r3, lsl #2
    59f0:	00030566 	andeq	r0, r3, r6, ror #10
    59f4:	17010402 	strne	r0, [r1, -r2, lsl #8]
    59f8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59fc:	09030204 	stmdbeq	r3, {r2, r9}
    5a00:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5a04:	02006701 	andeq	r6, r0, #262144	; 0x40000
    5a08:	00670104 	rsbeq	r0, r7, r4, lsl #2
    5a0c:	67040402 	strvs	r0, [r4, -r2, lsl #8]
    5a10:	01040200 	mrseq	r0, R12_usr
    5a14:	12030667 	andne	r0, r3, #108003328	; 0x6700000
    5a18:	053ff866 	ldreq	pc, [pc, #-2150]!	; 51ba <_Min_Heap_Size+0x49ba>
    5a1c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5a20:	053f0609 	ldreq	r0, [pc, #-1545]!	; 541f <_Min_Heap_Size+0x4c1f>
    5a24:	0f05010e 	svceq	0x0005010e
    5a28:	0e050106 	adfeqs	f0, f5, f6
    5a2c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5a30:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5a34:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5a38:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5a3c:	0a053014 	beq	151a94 <_Min_Heap_Size+0x151294>
    5a40:	052e3703 	streq	r3, [lr, #-1795]!	; 0xfffff8fd
    5a44:	50030609 	andpl	r0, r3, r9, lsl #12
    5a48:	15053f2e 	strne	r3, [r5, #-3886]	; 0xfffff0d2
    5a4c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5a50:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5a54:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5a58:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    5a5c:	3e060b05 	vmlacc.f64	d0, d6, d5
    5a60:	01060f05 	tsteq	r6, r5, lsl #30
    5a64:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5a68:	1405200d 	strne	r2, [r5], #-13
    5a6c:	030a0530 	movweq	r0, #42288	; 0xa530
    5a70:	07052e26 	streq	r2, [r5, -r6, lsr #28]
    5a74:	2e620306 	cdpcs	3, 6, cr0, cr2, cr6, {0}
    5a78:	01060905 	tsteq	r6, r5, lsl #18
    5a7c:	14053506 	strne	r3, [r5], #-1286	; 0xfffffafa
    5a80:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5a84:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    5a88:	13060e05 	movwne	r0, #28165	; 0x6e05
    5a8c:	052e5005 	streq	r5, [lr, #-5]!
    5a90:	0e051f40 	cdpeq	15, 0, cr1, cr5, cr0, {2}
    5a94:	2e560530 	mrccs	5, 2, r0, cr6, cr0, {1}
    5a98:	051f5c05 	ldreq	r5, [pc, #-3077]	; 4e9b <_Min_Heap_Size+0x469b>
    5a9c:	6f05304f 	svcvs	0x0005304f
    5aa0:	680e051f 	stmdavs	lr, {r0, r1, r2, r3, r4, r8, sl}
    5aa4:	052e5105 	streq	r5, [lr, #-261]!	; 0xfffffefb
    5aa8:	5e052057 	mcrpl	0, 0, r2, cr5, cr7, {2}
    5aac:	1f6f0520 	svcne	0x006f0520
    5ab0:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
    5ab4:	7e052e4f 	cdpvc	14, 0, cr2, cr5, cr15, {2}
    5ab8:	030a051f 	movweq	r0, #42271	; 0xa51f
    5abc:	0c053c09 	stceq	12, cr3, [r5], {9}
    5ac0:	2e7daf03 	cdpcs	15, 7, cr10, cr13, cr3, {0}
    5ac4:	d2030105 	andle	r0, r3, #1073741825	; 0x40000001
    5ac8:	10052002 	andne	r2, r5, r2
    5acc:	207dbe03 	rsbscs	fp, sp, r3, lsl #28
    5ad0:	052e3503 	streq	r3, [lr, #-1283]!	; 0xfffffafd
    5ad4:	028c030a 	addeq	r0, ip, #671088640	; 0x28000000
    5ad8:	2101052e 	tstcs	r1, lr, lsr #10
    5adc:	63031005 	movwvs	r1, #12293	; 0x3005
    5ae0:	0312052e 	tsteq	r2, #192937984	; 0xb800000
    5ae4:	02f22e17 	rscseq	r2, r2, #368	; 0x170
    5ae8:	01010002 	tsteq	r1, r2
    5aec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5af0:	00000002 	andeq	r0, r0, r2
    5af4:	06870300 	streq	r0, [r7], r0, lsl #6
    5af8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5afc:	14590603 	ldrbne	r0, [r9], #-1539	; 0xfffff9fd
    5b00:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5b04:	00200601 	eoreq	r0, r0, r1, lsl #12
    5b08:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5b0c:	03040200 	movweq	r0, #16896	; 0x4200
    5b10:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5b14:	3e063c04 	cdpcc	12, 0, cr3, cr6, cr4, {0}
    5b18:	01060505 	tsteq	r6, r5, lsl #10
    5b1c:	02003006 	andeq	r3, r0, #6
    5b20:	20060104 	andcs	r0, r6, r4, lsl #2
    5b24:	02040200 	andeq	r0, r4, #0, 4
    5b28:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5b2c:	3f063c03 	svccc	0x00063c03
    5b30:	20062e01 	andcs	r2, r6, r1, lsl #28
    5b34:	204a4a06 	subcs	r4, sl, r6, lsl #20
    5b38:	06190515 			; <UNDEFINED> instruction: 0x06190515
    5b3c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b40:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    5b44:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b48:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    5b4c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b50:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    5b54:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b58:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    5b5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b60:	4a064d21 	bmi	198fec <_Min_Heap_Size+0x1987ec>
    5b64:	20030105 	andcs	r0, r3, r5, lsl #2
    5b68:	0003052e 	andeq	r0, r3, lr, lsr #10
    5b6c:	03010402 	movweq	r0, #5122	; 0x1402
    5b70:	02002e4d 	andeq	r2, r0, #1232	; 0x4d0
    5b74:	002e0104 	eoreq	r0, lr, r4, lsl #2
    5b78:	20010402 	andcs	r0, r1, r2, lsl #8
    5b7c:	01040200 	mrseq	r0, R12_usr
    5b80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5b84:	05052105 	streq	r2, [r5, #-261]	; 0xfffffefb
    5b88:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b8c:	1803066a 	stmdane	r3, {r1, r3, r5, r6, r9, sl}
    5b90:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5b94:	00200601 	eoreq	r0, r0, r1, lsl #12
    5b98:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5b9c:	03040200 	movweq	r0, #16896	; 0x4200
    5ba0:	013f063c 	teqeq	pc, ip, lsr r6	; <UNPREDICTABLE>
    5ba4:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    5ba8:	15204a4a 	strne	r4, [r0, #-2634]!	; 0xfffff5b6
    5bac:	01061905 	tsteq	r6, r5, lsl #18
    5bb0:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    5bb4:	01061a05 	tsteq	r6, r5, lsl #20
    5bb8:	2f060505 	svccs	0x00060505
    5bbc:	01061b05 	tsteq	r6, r5, lsl #22
    5bc0:	2f060505 	svccs	0x00060505
    5bc4:	01061a05 	tsteq	r6, r5, lsl #20
    5bc8:	21060505 	tstcs	r6, r5, lsl #10
    5bcc:	01061f05 	tsteq	r6, r5, lsl #30
    5bd0:	21060505 	tstcs	r6, r5, lsl #10
    5bd4:	0558064d 	ldrbeq	r0, [r8, #-1613]	; 0xfffff9b3
    5bd8:	05053601 	streq	r3, [r5, #-1537]	; 0xfffff9ff
    5bdc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5be0:	02206a03 	eoreq	r6, r0, #12288	; 0x3000
    5be4:	0101000e 	tsteq	r1, lr
    5be8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5bec:	00000002 	andeq	r0, r0, r2
    5bf0:	06c90300 	strbeq	r0, [r9], r0, lsl #6
    5bf4:	13030501 	movwne	r0, #13569	; 0x3501
    5bf8:	01062605 	tsteq	r6, r5, lsl #12
    5bfc:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    5c00:	01010003 	tsteq	r1, r3
    5c04:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c08:	00000002 	andeq	r0, r0, r2
    5c0c:	06d20300 	ldrbeq	r0, [r2], r0, lsl #6
    5c10:	13030501 	movwne	r0, #13569	; 0x3501
    5c14:	01062605 	tsteq	r6, r5, lsl #12
    5c18:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    5c1c:	01010003 	tsteq	r1, r3
    5c20:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c24:	00000002 	andeq	r0, r0, r2
    5c28:	06f50300 	ldrbteq	r0, [r5], r0, lsl #6
    5c2c:	21030501 	tstcs	r3, r1, lsl #10
    5c30:	0e051513 	mcreq	5, 0, r1, cr5, cr3, {0}
    5c34:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5c38:	2e03052e 	cfsh32cs	mvfx0, mvfx3, #30
    5c3c:	03060705 	movweq	r0, #26373	; 0x6705
    5c40:	11054a10 	tstne	r5, r0, lsl sl
    5c44:	0c050106 	stfeqs	f0, [r5], {6}
    5c48:	0607052e 	streq	r0, [r7], -lr, lsr #10
    5c4c:	060a052f 	streq	r0, [sl], -pc, lsr #10
    5c50:	20090501 	andcs	r0, r9, r1, lsl #10
    5c54:	48053f06 	stmdami	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    5c58:	38050106 	stmdacc	r5, {r1, r2, r8}
    5c5c:	2e35052e 	cdpcs	5, 3, cr0, cr5, cr14, {1}
    5c60:	08018205 	stmdaeq	r1, {r0, r2, r9, pc}
    5c64:	06070566 	streq	r0, [r7], -r6, ror #10
    5c68:	0615057b 			; <UNDEFINED> instruction: 0x0615057b
    5c6c:	2e330501 	cdpcs	5, 3, cr0, cr3, cr1, {0}
    5c70:	052e4c05 	streq	r4, [lr, #-3077]!	; 0xfffff3fb
    5c74:	0705200c 	streq	r2, [r5, -ip]
    5c78:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    5c7c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5c80:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    5c84:	0648051b 			; <UNDEFINED> instruction: 0x0648051b
    5c88:	2e380501 	cdpcs	5, 3, cr0, cr8, cr1, {0}
    5c8c:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    5c90:	66080182 	strvs	r0, [r8], -r2, lsl #3
    5c94:	03140574 	tsteq	r4, #116, 10	; 0x1d000000
    5c98:	03052070 	movweq	r2, #20592	; 0x5070
    5c9c:	062e7703 	strteq	r7, [lr], -r3, lsl #14
    5ca0:	05202603 	streq	r2, [r0, #-1539]!	; 0xfffff9fd
    5ca4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    5ca8:	01010008 	tsteq	r1, r8
    5cac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5cb0:	00000002 	andeq	r0, r0, r2
    5cb4:	04cf0300 	strbeq	r0, [pc], #768	; 5cbc <_Min_Heap_Size+0x54bc>
    5cb8:	13030501 	movwne	r0, #13569	; 0x3501
    5cbc:	06050515 			; <UNDEFINED> instruction: 0x06050515
    5cc0:	38010501 	stmdacc	r1, {r0, r8, sl}
    5cc4:	03060305 	movweq	r0, #25349	; 0x6305
    5cc8:	354b3c0a 	strbcc	r3, [fp, #-3082]	; 0xfffff3f6
    5ccc:	01061105 	tsteq	r6, r5, lsl #2
    5cd0:	064a0505 	strbeq	r0, [sl], -r5, lsl #10
    5cd4:	08054031 	stmdaeq	r5, {r0, r4, r5, lr}
    5cd8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5cdc:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    5ce0:	06190543 	ldreq	r0, [r9], -r3, asr #10
    5ce4:	20050501 	andcs	r0, r5, r1, lsl #10
    5ce8:	07054006 	streq	r4, [r5, -r6]
    5cec:	3e060106 	adfccs	f0, f6, f6
    5cf0:	055b0505 	ldrbeq	r0, [fp, #-1285]	; 0xfffffafb
    5cf4:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    5cf8:	3e062007 	cdpcc	0, 0, cr2, cr6, cr7, {0}
    5cfc:	005b0505 	subseq	r0, fp, r5, lsl #10
    5d00:	06010402 	streq	r0, [r1], -r2, lsl #8
    5d04:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d08:	02002e02 	andeq	r2, r0, #2, 28
    5d0c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5d10:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    5d14:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5d18:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d1c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5d20:	002e0704 	eoreq	r0, lr, r4, lsl #14
    5d24:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    5d28:	03052f06 	movweq	r2, #24326	; 0x5f06
    5d2c:	06190578 			; <UNDEFINED> instruction: 0x06190578
    5d30:	20050501 	andcs	r0, r5, r1, lsl #10
    5d34:	053f3e06 	ldreq	r3, [pc, #-3590]!	; 4f36 <_Min_Heap_Size+0x4736>
    5d38:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5d3c:	0a052007 	beq	14dd60 <_Min_Heap_Size+0x14d560>
    5d40:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    5d44:	01064c05 	tsteq	r6, r5, lsl #24
    5d48:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    5d4c:	0d030607 	stceq	6, cr0, [r3, #-28]	; 0xffffffe4
    5d50:	060a052e 	streq	r0, [sl], -lr, lsr #10
    5d54:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    5d58:	50060505 	andpl	r0, r6, r5, lsl #10
    5d5c:	06110569 	ldreq	r0, [r1], -r9, ror #10
    5d60:	06050501 	streq	r0, [r5], -r1, lsl #10
    5d64:	010b053e 	tsteq	fp, lr, lsr r5
    5d68:	01060c05 	tsteq	r6, r5, lsl #24
    5d6c:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
    5d70:	0705200b 	streq	r2, [r5, -fp]
    5d74:	0c053e06 	stceq	14, cr3, [r5], {6}
    5d78:	1a050106 	bne	146198 <_Min_Heap_Size+0x145998>
    5d7c:	200a052e 	andcs	r0, sl, lr, lsr #10
    5d80:	054c1005 	strbeq	r1, [ip, #-5]
    5d84:	04020003 	streq	r0, [r2], #-3
    5d88:	7fad0301 	svcvc	0x00ad0301
    5d8c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d90:	02002e01 	andeq	r2, r0, #1, 28
    5d94:	00200104 	eoreq	r0, r0, r4, lsl #2
    5d98:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    5d9c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5da0:	23030904 	movwcs	r0, #14596	; 0x3904
    5da4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5da8:	07056d01 	streq	r6, [r5, -r1, lsl #26]
    5dac:	0a056c06 	beq	160dcc <_Min_Heap_Size+0x1605cc>
    5db0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5db4:	3e10052e 	cfmul64cc	mvdx0, mvdx0, mvdx14
    5db8:	36060705 	strcc	r0, [r6], -r5, lsl #14
    5dbc:	01060a05 	tsteq	r6, r5, lsl #20
    5dc0:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    5dc4:	03053e10 	movweq	r3, #24080	; 0x5e10
    5dc8:	2e1c0306 	cdpcs	3, 1, cr0, cr12, cr6, {0}
    5dcc:	01061105 	tsteq	r6, r5, lsl #2
    5dd0:	064a0505 	strbeq	r0, [sl], -r5, lsl #10
    5dd4:	08054031 	stmdaeq	r5, {r0, r4, r5, lr}
    5dd8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5ddc:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    5de0:	06190535 			; <UNDEFINED> instruction: 0x06190535
    5de4:	20050501 	andcs	r0, r5, r1, lsl #10
    5de8:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    5dec:	2e060104 	adfcss	f0, f6, f4
    5df0:	02040200 	andeq	r0, r4, #0, 4
    5df4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5df8:	02003c03 	andeq	r3, r0, #768	; 0x300
    5dfc:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    5e00:	7803053d 	stmdavc	r3, {r0, r2, r3, r4, r5, r8, sl}
    5e04:	01061905 	tsteq	r6, r5, lsl #18
    5e08:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5e0c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    5e10:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5e14:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5e18:	03040200 	movweq	r0, #16896	; 0x4200
    5e1c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5e20:	3d063c04 	stccc	12, cr3, [r6, #-16]
    5e24:	05860305 	streq	r0, [r6, #773]	; 0x305
    5e28:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5e2c:	5b052e44 	blpl	151744 <_Min_Heap_Size+0x150f44>
    5e30:	2e3f052e 	cdpcs	5, 3, cr0, cr15, cr14, {1}
    5e34:	052e2f05 	streq	r2, [lr, #-3845]!	; 0xfffff0fb
    5e38:	03052013 	movweq	r2, #20499	; 0x5013
    5e3c:	054c3106 	strbeq	r3, [ip, #-262]	; 0xfffffefa
    5e40:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5e44:	05052101 	streq	r2, [r5, #-257]	; 0xfffffeff
    5e48:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5e4c:	00206e03 	eoreq	r6, r0, r3, lsl #28
    5e50:	6d050402 	cfstrsvs	mvf0, [r5, #-8]
    5e54:	8c030c05 	stchi	12, cr0, [r3], {5}
    5e58:	0105667f 	tsteq	r5, pc, ror r6
    5e5c:	2000ff03 	andcs	pc, r0, r3, lsl #30
    5e60:	96030e05 	strls	r0, [r3], -r5, lsl #28
    5e64:	1005207f 	andne	r2, r5, pc, ror r0
    5e68:	052e3503 	streq	r3, [lr, #-1283]!	; 0xfffffafd
    5e6c:	2e1c030e 	cdpcs	3, 1, cr0, cr12, cr14, {0}
    5e70:	01000e02 	tsteq	r0, r2, lsl #28
    5e74:	00010501 	andeq	r0, r1, r1, lsl #10
    5e78:	11180205 	tstne	r8, r5, lsl #4
    5e7c:	ad030800 	stcge	8, cr0, [r3, #-0]
    5e80:	03050107 	movweq	r0, #20743	; 0x5107
    5e84:	06010513 			; <UNDEFINED> instruction: 0x06010513
    5e88:	00060213 	andeq	r0, r6, r3, lsl r2
    5e8c:	01050101 	tsteq	r5, r1, lsl #2
    5e90:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    5e94:	03080011 	movweq	r0, #32785	; 0x8011
    5e98:	050107b8 	streq	r0, [r1, #-1976]	; 0xfffff848
    5e9c:	0b052203 	bleq	14e6b0 <_Min_Heap_Size+0x14deb0>
    5ea0:	36050106 	strcc	r0, [r5], -r6, lsl #2
    5ea4:	2e4e052e 	cdpcs	5, 4, cr0, cr14, cr14, {1}
    5ea8:	052e3105 	streq	r3, [lr, #-261]!	; 0xfffffefb
    5eac:	07022f01 	streq	r2, [r2, -r1, lsl #30]
    5eb0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5eb4:	02050001 	andeq	r0, r5, #1
    5eb8:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
    5ebc:	0107c403 	tsteq	r7, r3, lsl #8
    5ec0:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
    5ec4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5ec8:	4d052e35 	stcmi	14, cr2, [r5, #-212]	; 0xffffff2c
    5ecc:	2e30052e 	cdpcs	5, 3, cr0, cr0, cr14, {1}
    5ed0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    5ed4:	01010007 	tsteq	r1, r7
    5ed8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5edc:	00000002 	andeq	r0, r0, r2
    5ee0:	07d10300 	ldrbeq	r0, [r1, r0, lsl #6]
    5ee4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    5ee8:	01062505 	tsteq	r6, r5, lsl #10
    5eec:	31060305 	tstcc	r6, r5, lsl #6
    5ef0:	01060a05 	tsteq	r6, r5, lsl #20
    5ef4:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    5ef8:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    5efc:	06030501 	streq	r0, [r3], -r1, lsl #10
    5f00:	053c0c03 	ldreq	r0, [ip, #-3075]!	; 0xfffff3fd
    5f04:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5f08:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    5f0c:	01062105 	tsteq	r6, r5, lsl #2
    5f10:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
    5f14:	01063b05 	tsteq	r6, r5, lsl #22
    5f18:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    5f1c:	03052e2a 	movweq	r2, #24106	; 0x5e2a
    5f20:	0a052306 	beq	14eb40 <_Min_Heap_Size+0x14e340>
    5f24:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f28:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    5f2c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f30:	0c030603 	stceq	6, cr0, [r3], {3}
    5f34:	060a052e 	streq	r0, [sl], -lr, lsr #10
    5f38:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5f3c:	21053e06 	tstcs	r5, r6, lsl #28
    5f40:	03050106 	movweq	r0, #20742	; 0x5106
    5f44:	0a053606 	beq	153764 <_Min_Heap_Size+0x152f64>
    5f48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f4c:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    5f50:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    5f54:	05340603 	ldreq	r0, [r4, #-1539]!	; 0xfffff9fd
    5f58:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    5f5c:	24052e26 	strcs	r2, [r5], #-3622	; 0xfffff1da
    5f60:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5f64:	062f0521 	strteq	r0, [pc], -r1, lsr #10
    5f68:	20210501 	eorcs	r0, r1, r1, lsl #10
    5f6c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    5f70:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5f74:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    5f78:	1f052021 	svcne	0x00052021
    5f7c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5f80:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
    5f84:	203c0501 	eorscs	r0, ip, r1, lsl #10
    5f88:	052e5005 	streq	r5, [lr, #-5]!
    5f8c:	1f052e21 	svcne	0x00052e21
    5f90:	06030520 	streq	r0, [r3], -r0, lsr #10
    5f94:	06300521 	ldrteq	r0, [r0], -r1, lsr #10
    5f98:	20210501 	eorcs	r0, r1, r1, lsl #10
    5f9c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    5fa0:	08052101 	stmdaeq	r5, {r0, r8, sp}
    5fa4:	20450306 	subcs	r0, r5, r6, lsl #6
    5fa8:	01060f05 	tsteq	r6, r5, lsl #30
    5fac:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    5fb0:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    5fb4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5fb8:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    5fbc:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5fc0:	0a030605 	beq	c77dc <_Min_Heap_Size+0xc6fdc>
    5fc4:	0621053c 			; <UNDEFINED> instruction: 0x0621053c
    5fc8:	06080501 	streq	r0, [r8], -r1, lsl #10
    5fcc:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    5fd0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5fd4:	05052e0a 	streq	r2, [r5, #-3594]	; 0xfffff1f6
    5fd8:	21053e06 	tstcs	r5, r6, lsl #28
    5fdc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5fe0:	21054006 	tstcs	r5, r6
    5fe4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5fe8:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5fec:	01062105 	tsteq	r6, r5, lsl #2
    5ff0:	03060505 	movweq	r0, #25861	; 0x6505
    5ff4:	25053c0a 	strcs	r3, [r5, #-3082]	; 0xfffff3f6
    5ff8:	06020106 	streq	r0, [r2], -r6, lsl #2
    5ffc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6000:	02050001 	andeq	r0, r5, #1
    6004:	00000000 	andeq	r0, r0, r0
    6008:	0108a003 	tsteq	r8, r3
    600c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    6010:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6014:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    6018:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    601c:	23052e25 	movwcs	r2, #24101	; 0x5e25
    6020:	0603052e 	streq	r0, [r3], -lr, lsr #10
    6024:	06340523 	ldrteq	r0, [r4], -r3, lsr #10
    6028:	20260501 	eorcs	r0, r6, r1, lsl #10
    602c:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    6030:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6034:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    6038:	25052027 	strcs	r2, [r5, #-39]	; 0xffffffd9
    603c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    6040:	06360523 	ldrteq	r0, [r6], -r3, lsr #10
    6044:	20270501 	eorcs	r0, r7, r1, lsl #10
    6048:	053c2505 	ldreq	r2, [ip, #-1285]!	; 0xfffffafb
    604c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6050:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6054:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    6058:	2101052e 	tstcs	r1, lr, lsr #10
    605c:	01000502 	tsteq	r0, r2, lsl #10
    6060:	00010501 	andeq	r0, r1, r1, lsl #10
    6064:	00000205 	andeq	r0, r0, r5, lsl #4
    6068:	cb030000 	blgt	c6070 <_Min_Heap_Size+0xc5870>
    606c:	02160108 	andseq	r0, r6, #8, 2
    6070:	01010001 	tsteq	r1, r1
    6074:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6078:	00000002 	andeq	r0, r0, r2
    607c:	08ba0300 	ldmeq	sl!, {r8, r9}
    6080:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    6084:	01060605 	tsteq	r6, r5, lsl #12
    6088:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    608c:	05054401 	streq	r4, [r5, #-1025]	; 0xfffffbff
    6090:	05311b06 	ldreq	r1, [r1, #-2822]!	; 0xfffff4fa
    6094:	023e0601 	eorseq	r0, lr, #1048576	; 0x100000
    6098:	01010004 	tsteq	r1, r4
    609c:	00000881 	andeq	r0, r0, r1, lsl #17
    60a0:	01e80003 	mvneq	r0, r3
    60a4:	01020000 	mrseq	r0, (UNDEF: 2)
    60a8:	000d0efb 	strdeq	r0, [sp], -fp
    60ac:	01010101 	tsteq	r1, r1, lsl #2
    60b0:	01000000 	mrseq	r0, (UNDEF: 0)
    60b4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    60b8:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    60bc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    60c0:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    60c4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    60c8:	5f787834 	svcpl	0x00787834
    60cc:	5f4c4148 	svcpl	0x004c4148
    60d0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    60d4:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    60d8:	63006372 	movwvs	r6, #882	; 0x372
    60dc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    60e0:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    60e4:	6f646978 	svcvs	0x00646978
    60e8:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    60ec:	6172676f 	cmnvs	r2, pc, ror #14
    60f0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    60f4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    60f8:	63675c63 	cmnvs	r7, #25344	; 0x6300
    60fc:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    6100:	6f6e2d6d 	svcvs	0x006e2d6d
    6104:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6108:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    610c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    6110:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    6114:	30312e31 	eorscc	r2, r1, r1, lsr lr
    6118:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    611c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    6120:	61652d65 	cmnvs	r5, r5, ror #26
    6124:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    6128:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    612c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    6130:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    6134:	6300656e 	movwvs	r6, #1390	; 0x56e
    6138:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    613c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    6140:	6f646978 	svcvs	0x00646978
    6144:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    6148:	6172676f 	cmnvs	r2, pc, ror #14
    614c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    6150:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    6154:	63675c63 	cmnvs	r7, #25344	; 0x6300
    6158:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    615c:	6f6e2d6d 	svcvs	0x006e2d6d
    6160:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6164:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    6168:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    616c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    6170:	30312e31 	eorscc	r2, r1, r1, lsr lr
    6174:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6178:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    617c:	61652d65 	cmnvs	r5, r5, ror #26
    6180:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    6184:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6188:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    618c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    6190:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    6194:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6198:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    619c:	2f534953 	svccs	0x00534953
    61a0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    61a4:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    61a8:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    61ac:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    61b0:	2f787834 	svccs	0x00787834
    61b4:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    61b8:	00656475 	rsbeq	r6, r5, r5, ror r4
    61bc:	442f2e2e 	strtmi	r2, [pc], #-3630	; 61c4 <_Min_Heap_Size+0x59c4>
    61c0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    61c4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    61c8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    61cc:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    61d0:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    61d4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    61d8:	2f726576 	svccs	0x00726576
    61dc:	00636e49 	rsbeq	r6, r3, r9, asr #28
    61e0:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    61e4:	2f65726f 	svccs	0x0065726f
    61e8:	00636e49 	rsbeq	r6, r3, r9, asr #28
    61ec:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    61f0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    61f4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    61f8:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    61fc:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    6200:	00010063 	andeq	r0, r1, r3, rrx
    6204:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    6208:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    620c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    6210:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    6214:	00020068 	andeq	r0, r2, r8, rrx
    6218:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    621c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    6220:	0300682e 	movweq	r6, #2094	; 0x82e
    6224:	74730000 	ldrbtvc	r0, [r3], #-0
    6228:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    622c:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    6230:	00682e78 	rsbeq	r2, r8, r8, ror lr
    6234:	73000004 	movwvc	r0, #4
    6238:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    623c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6240:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6244:	74730000 	ldrbtvc	r0, [r3], #-0
    6248:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    624c:	5f787834 	svcpl	0x00787834
    6250:	5f6c6168 	svcpl	0x006c6168
    6254:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    6258:	00050068 	andeq	r0, r5, r8, rrx
    625c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6260:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6264:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6268:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    626c:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    6270:	00050068 	andeq	r0, r5, r8, rrx
    6274:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6278:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    627c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6280:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    6284:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    6288:	00060068 	andeq	r0, r6, r8, rrx
    628c:	01050000 	mrseq	r0, (UNDEF: 5)
    6290:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
    6294:	03080011 	movweq	r0, #32785	; 0x8011
    6298:	060101a4 	streq	r0, [r1], -r4, lsr #3
    629c:	06030501 	streq	r0, [r3], -r1, lsl #10
    62a0:	13131359 	tstne	r3, #1677721601	; 0x64000001
    62a4:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    62a8:	003c0601 	eorseq	r0, ip, r1, lsl #12
    62ac:	4a020402 	bmi	872bc <_Min_Heap_Size+0x86abc>
    62b0:	03040200 	movweq	r0, #16896	; 0x4200
    62b4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    62b8:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    62bc:	004a0504 	subeq	r0, sl, r4, lsl #10
    62c0:	4a060402 	bmi	1872d0 <_Min_Heap_Size+0x186ad0>
    62c4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    62c8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    62cc:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    62d0:	004a0904 	subeq	r0, sl, r4, lsl #18
    62d4:	20090402 	andcs	r0, r9, r2, lsl #8
    62d8:	09040200 	stmdbeq	r4, {r9}
    62dc:	002f0620 	eoreq	r0, pc, r0, lsr #12
    62e0:	06020402 	streq	r0, [r2], -r2, lsl #8
    62e4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    62e8:	4b063c03 	blmi	1952fc <_Min_Heap_Size+0x194afc>
    62ec:	01040200 	mrseq	r0, R12_usr
    62f0:	02003c06 	andeq	r3, r0, #1536	; 0x600
    62f4:	002e0204 	eoreq	r0, lr, r4, lsl #4
    62f8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    62fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6300:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6304:	02003c05 	andeq	r3, r0, #1280	; 0x500
    6308:	003c0604 	eorseq	r0, ip, r4, lsl #12
    630c:	3c070402 	cfstrscc	mvf0, [r7], {2}
    6310:	08040200 	stmdaeq	r4, {r9}
    6314:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6318:	02003c09 	andeq	r3, r0, #2304	; 0x900
    631c:	053c0a04 	ldreq	r0, [ip, #-2564]!	; 0xfffff5fc
    6320:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6324:	00c70301 	sbceq	r0, r7, r1, lsl #6
    6328:	0003052e 	andeq	r0, r3, lr, lsr #10
    632c:	030b0402 	movweq	r0, #46082	; 0xb402
    6330:	052e7fb9 	streq	r7, [lr, #-4025]!	; 0xfffff047
    6334:	12030609 	andne	r0, r3, #9437184	; 0x900000
    6338:	0e053e58 	mcreq	14, 0, r3, cr5, cr8, {2}
    633c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6340:	37052106 	strcc	r2, [r5, -r6, lsl #2]
    6344:	2a050106 	bcs	146764 <_Min_Heap_Size+0x145f64>
    6348:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    634c:	2f060905 	svccs	0x00060905
    6350:	01061b05 	tsteq	r6, r5, lsl #22
    6354:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    6358:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    635c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    6360:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6364:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    6368:	09050106 	stmdbeq	r5, {r1, r2, r8}
    636c:	0e052106 	adfeqs	f2, f5, f6
    6370:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6374:	1d052f06 	stcne	15, cr2, [r5, #-24]	; 0xffffffe8
    6378:	33050106 	movwcc	r0, #20742	; 0x5106
    637c:	2e470520 	cdpcs	5, 4, cr0, cr7, cr0, {1}
    6380:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    6384:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6388:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    638c:	04020009 	streq	r0, [r2], #-9
    6390:	2e750301 	cdpcs	3, 7, cr0, cr5, cr1, {0}
    6394:	01040200 	mrseq	r0, R12_usr
    6398:	06581103 	ldrbeq	r1, [r8], -r3, lsl #2
    639c:	00580d03 	subseq	r0, r8, r3, lsl #26
    63a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    63a4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    63a8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    63ac:	002e0804 	eoreq	r0, lr, r4, lsl #16
    63b0:	2e0b0402 	cdpcs	4, 0, cr0, cr11, cr2, {0}
    63b4:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    63b8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    63bc:	02002e0f 	andeq	r2, r0, #15, 28	; 0xf0
    63c0:	002e1204 	eoreq	r1, lr, r4, lsl #4
    63c4:	2e140402 	cfmulscs	mvf0, mvf4, mvf2
    63c8:	17040200 	strne	r0, [r4, -r0, lsl #4]
    63cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    63d0:	02002e1c 	andeq	r2, r0, #28, 28	; 0x1c0
    63d4:	002e1e04 	eoreq	r1, lr, r4, lsl #28
    63d8:	2e210402 	cdpcs	4, 2, cr0, cr1, cr2, {0}
    63dc:	24053006 	strcs	r3, [r5], #-6
    63e0:	0e050106 	adfeqs	f0, f5, f6
    63e4:	06090520 	streq	r0, [r9], -r0, lsr #10
    63e8:	061c053d 			; <UNDEFINED> instruction: 0x061c053d
    63ec:	2e390501 	cdpcs	5, 3, cr0, cr9, cr1, {0}
    63f0:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    63f4:	09052e0e 	stmdbeq	r5, {r1, r2, r3, r9, sl, fp, sp}
    63f8:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    63fc:	33050106 	movwcc	r0, #20742	; 0x5106
    6400:	200e0520 	andcs	r0, lr, r0, lsr #10
    6404:	21060905 	tstcs	r6, r5, lsl #18
    6408:	01062405 	tsteq	r6, r5, lsl #8
    640c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6410:	05372204 	ldreq	r2, [r7, #-516]!	; 0xfffffdfc
    6414:	5817031d 	ldmdapl	r7, {r0, r2, r3, r4, r8, r9}
    6418:	05741205 	ldrbeq	r1, [r4, #-517]!	; 0xfffffdfb
    641c:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    6420:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
    6424:	20040200 	andcs	r0, r4, r0, lsl #4
    6428:	00090520 	andeq	r0, r9, r0, lsr #10
    642c:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6430:	00280521 	eoreq	r0, r8, r1, lsr #10
    6434:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6438:	00090501 	andeq	r0, r9, r1, lsl #10
    643c:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6440:	000e054d 	andeq	r0, lr, sp, asr #10
    6444:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6448:	04020001 	streq	r0, [r2], #-1
    644c:	09052020 	stmdbeq	r5, {r5, sp}
    6450:	20040200 	andcs	r0, r4, r0, lsl #4
    6454:	11052106 	tstne	r5, r6, lsl #2
    6458:	20040200 	andcs	r0, r4, r0, lsl #4
    645c:	0e050106 	adfeqs	f0, f5, f6
    6460:	20040200 	andcs	r0, r4, r0, lsl #4
    6464:	0009052e 	andeq	r0, r9, lr, lsr #10
    6468:	06200402 	strteq	r0, [r0], -r2, lsl #8
    646c:	0016052f 	andseq	r0, r6, pc, lsr #10
    6470:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6474:	000b0501 	andeq	r0, fp, r1, lsl #10
    6478:	20200402 	eorcs	r0, r0, r2, lsl #8
    647c:	10053e06 	andne	r3, r5, r6, lsl #28
    6480:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6484:	14053006 	strne	r3, [r5], #-6
    6488:	09050106 	stmdbeq	r5, {r1, r2, r8}
    648c:	0e053006 	cdpeq	0, 0, cr3, cr5, cr6, {0}
    6490:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6494:	0e052106 	adfeqs	f2, f5, f6
    6498:	09050106 	stmdbeq	r5, {r1, r2, r8}
    649c:	16052f06 	strne	r2, [r5], -r6, lsl #30
    64a0:	0b050106 	bleq	1468c0 <_Min_Heap_Size+0x1460c0>
    64a4:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    64a8:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    64ac:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    64b0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    64b4:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    64b8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    64bc:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    64c0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    64c4:	052f0609 	streq	r0, [pc, #-1545]!	; 5ec3 <_Min_Heap_Size+0x56c3>
    64c8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    64cc:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    64d0:	01061005 	tsteq	r6, r5
    64d4:	30060905 	andcc	r0, r6, r5, lsl #18
    64d8:	01061305 	tsteq	r6, r5, lsl #6
    64dc:	31060905 	tstcc	r6, r5, lsl #18
    64e0:	01060e05 	tsteq	r6, r5, lsl #28
    64e4:	21060905 	tstcs	r6, r5, lsl #18
    64e8:	01060e05 	tsteq	r6, r5, lsl #28
    64ec:	21060905 	tstcs	r6, r5, lsl #18
    64f0:	01061605 	tsteq	r6, r5, lsl #12
    64f4:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    64f8:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    64fc:	06090501 	streq	r0, [r9], -r1, lsl #10
    6500:	06130530 			; <UNDEFINED> instruction: 0x06130530
    6504:	002e0501 	eoreq	r0, lr, r1, lsl #10
    6508:	06020402 	streq	r0, [r2], -r2, lsl #8
    650c:	2e7f9903 	vaddcs.f16	s19, s30, s6	; <UNPREDICTABLE>
    6510:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    6514:	01060204 	tsteq	r6, r4, lsl #4
    6518:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    651c:	20060104 	andcs	r0, r6, r4, lsl #2
    6520:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    6524:	01060104 	tsteq	r6, r4, lsl #2
    6528:	31060505 	tstcc	r6, r5, lsl #10
    652c:	01061005 	tsteq	r6, r5
    6530:	30060505 	andcc	r0, r6, r5, lsl #10
    6534:	01062505 	tsteq	r6, r5, lsl #10
    6538:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    653c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6540:	06010607 	streq	r0, [r1], -r7, lsl #12
    6544:	06150540 	ldreq	r0, [r5], -r0, asr #10
    6548:	201c0501 	andscs	r0, ip, r1, lsl #10
    654c:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
    6550:	07052009 	streq	r2, [r5, -r9]
    6554:	3c120306 	ldccc	3, cr0, [r2], {6}
    6558:	01061405 	tsteq	r6, r5, lsl #8
    655c:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    6560:	31062e09 	tstcc	r6, r9, lsl #28
    6564:	060e054d 	streq	r0, [lr], -sp, asr #10
    6568:	06090501 	streq	r0, [r9], -r1, lsl #10
    656c:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
    6570:	20250501 	eorcs	r0, r5, r1, lsl #10
    6574:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    6578:	052f0609 	streq	r0, [pc, #-1545]!	; 5f77 <_Min_Heap_Size+0x5777>
    657c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    6580:	0e052024 	cdpeq	0, 0, cr2, cr5, cr4, {1}
    6584:	06090520 	streq	r0, [r9], -r0, lsr #10
    6588:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    658c:	06070501 	streq	r0, [r7], -r1, lsl #10
    6590:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    6594:	201b0501 	andscs	r0, fp, r1, lsl #10
    6598:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    659c:	0c030607 	stceq	6, cr0, [r3], {7}
    65a0:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
    65a4:	06070501 	streq	r0, [r7], -r1, lsl #10
    65a8:	06300521 	ldrteq	r0, [r0], -r1, lsr #10
    65ac:	20230501 	eorcs	r0, r3, r1, lsl #10
    65b0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    65b4:	052f0607 	streq	r0, [pc, #-1543]!	; 5fb5 <_Min_Heap_Size+0x57b5>
    65b8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    65bc:	2e052021 	cdpcs	0, 0, cr2, cr5, cr1, {1}
    65c0:	200c052e 	andcs	r0, ip, lr, lsr #10
    65c4:	21060705 	tstcs	r6, r5, lsl #14
    65c8:	01061405 	tsteq	r6, r5, lsl #8
    65cc:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    65d0:	01061405 	tsteq	r6, r5, lsl #8
    65d4:	06200905 	strteq	r0, [r0], -r5, lsl #18
    65d8:	582e013f 	stmdapl	lr!, {r0, r1, r2, r3, r4, r5, r8}
    65dc:	0514204a 	ldreq	r2, [r4, #-74]	; 0xffffffb6
    65e0:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    65e4:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    65e8:	2c054b06 			; <UNDEFINED> instruction: 0x2c054b06
    65ec:	20050106 	andcs	r0, r5, r6, lsl #2
    65f0:	2019052e 	andscs	r0, r9, lr, lsr #10
    65f4:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    65f8:	052f0609 	streq	r0, [pc, #-1545]!	; 5ff7 <_Min_Heap_Size+0x57f7>
    65fc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6600:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6604:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    6608:	004a0304 	subeq	r0, sl, r4, lsl #6
    660c:	4a050402 	bmi	14761c <_Min_Heap_Size+0x146e1c>
    6610:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6614:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6618:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    661c:	004a0b04 	subeq	r0, sl, r4, lsl #22
    6620:	4a0d0402 	bmi	347630 <_Min_Heap_Size+0x346e30>
    6624:	05203c58 	streq	r3, [r0, #-3160]!	; 0xfffff3a8
    6628:	9e270301 	cdpls	3, 2, cr0, cr7, cr1, {0}
    662c:	0008023c 	andeq	r0, r8, ip, lsr r2
    6630:	01050101 	tsteq	r5, r1, lsl #2
    6634:	00020500 	andeq	r0, r2, r0, lsl #10
    6638:	03000000 	movweq	r0, #0
    663c:	060102a6 	streq	r0, [r1], -r6, lsr #5
    6640:	06030501 	streq	r0, [r3], -r1, lsl #10
    6644:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    6648:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    664c:	003c0601 	eorseq	r0, ip, r1, lsl #12
    6650:	4a020402 	bmi	87660 <_Min_Heap_Size+0x86e60>
    6654:	03040200 	movweq	r0, #16896	; 0x4200
    6658:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    665c:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    6660:	004a0504 	subeq	r0, sl, r4, lsl #10
    6664:	4a060402 	bmi	187674 <_Min_Heap_Size+0x186e74>
    6668:	07040200 	streq	r0, [r4, -r0, lsl #4]
    666c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6670:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    6674:	004a0904 	subeq	r0, sl, r4, lsl #18
    6678:	2e090402 	cdpcs	4, 0, cr0, cr9, cr2, {0}
    667c:	09040200 	stmdbeq	r4, {r9}
    6680:	001d0520 	andseq	r0, sp, r0, lsr #10
    6684:	03010402 	movweq	r0, #5122	; 0x1402
    6688:	052e2e0f 	streq	r2, [lr, #-3599]!	; 0xfffff1f1
    668c:	34052e12 	strcc	r2, [r5], #-3602	; 0xfffff1ee
    6690:	20040200 	andcs	r0, r4, r0, lsl #4
    6694:	00090520 	andeq	r0, r9, r0, lsr #10
    6698:	2e200402 	cdpcs	4, 2, cr0, cr0, cr2, {0}
    669c:	03060705 	movweq	r0, #26373	; 0x6705
    66a0:	14052e11 	strne	r2, [r5], #-3601	; 0xfffff1ef
    66a4:	38050106 	stmdacc	r5, {r1, r2, r8}
    66a8:	202b0520 	eorcs	r0, fp, r0, lsr #10
    66ac:	053c1405 	ldreq	r1, [ip, #-1029]!	; 0xfffffbfb
    66b0:	053f0607 	ldreq	r0, [pc, #-1543]!	; 60b1 <_Min_Heap_Size+0x58b1>
    66b4:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    66b8:	4d055830 	stcmi	8, cr5, [r5, #-192]	; 0xffffff40
    66bc:	2e2c052e 	cfsh64cs	mvdx0, mvdx12, #30
    66c0:	054a2205 	strbeq	r2, [sl, #-517]	; 0xfffffdfb
    66c4:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    66c8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    66cc:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    66d0:	3c010616 	stccc	6, cr0, [r1], {22}
    66d4:	23060705 	movwcs	r0, #26373	; 0x6705
    66d8:	01061605 	tsteq	r6, r5, lsl #12
    66dc:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    66e0:	03060204 	movweq	r0, #25092	; 0x6204
    66e4:	36054a57 			; <UNDEFINED> instruction: 0x36054a57
    66e8:	02040200 	andeq	r0, r4, #0, 4
    66ec:	16050106 	strne	r0, [r5], -r6, lsl #2
    66f0:	01040200 	mrseq	r0, R12_usr
    66f4:	03052006 	movweq	r2, #20486	; 0x5006
    66f8:	01040200 	mrseq	r0, R12_usr
    66fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6700:	10053106 	andne	r3, r5, r6, lsl #2
    6704:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6708:	0f053006 	svceq	0x00053006
    670c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6710:	07053006 	streq	r3, [r5, -r6]
    6714:	3f060106 	svccc	0x00060106
    6718:	01062505 	tsteq	r6, r5, lsl #10
    671c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    6720:	05590607 	ldrbeq	r0, [r9, #-1543]	; 0xfffff9f9
    6724:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    6728:	15052e1c 	strne	r2, [r5, #-3612]	; 0xfffff1e4
    672c:	3c0b0520 	cfstr32cc	mvfx0, [fp], {32}
    6730:	21060705 	tstcs	r6, r5, lsl #14
    6734:	01061205 	tsteq	r6, r5, lsl #4
    6738:	02001d05 	andeq	r1, r0, #320	; 0x140
    673c:	003c0104 	eorseq	r0, ip, r4, lsl #2
    6740:	4a030402 	bmi	c7750 <_Min_Heap_Size+0xc6f50>
    6744:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6748:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    674c:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    6750:	004a0904 	subeq	r0, sl, r4, lsl #18
    6754:	4a0b0402 	bmi	2c7764 <_Min_Heap_Size+0x2c6f64>
    6758:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    675c:	09054a4a 	stmdbeq	r5, {r1, r3, r6, r9, fp, lr}
    6760:	1305d906 	movwne	sp, #22790	; 0x5906
    6764:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    6768:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    676c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    6770:	054d0609 	strbeq	r0, [sp, #-1545]	; 0xfffff9f7
    6774:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6778:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    677c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6780:	134d0609 	movtne	r0, #54793	; 0xd609
    6784:	01062805 	tsteq	r6, r5, lsl #16
    6788:	14030105 	strne	r0, [r3], #-261	; 0xfffffefb
    678c:	0802209e 	stmdaeq	r2, {r1, r2, r3, r4, r7, sp}
    6790:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6794:	02050001 	andeq	r0, r5, #1
    6798:	00000000 	andeq	r0, r0, r0
    679c:	0102f703 	tsteq	r2, r3, lsl #14	; <UNPREDICTABLE>
    67a0:	03050106 	movweq	r0, #20742	; 0x5106
    67a4:	30152f06 	andscc	r2, r5, r6, lsl #30
    67a8:	01060c05 	tsteq	r6, r5, lsl #24
    67ac:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    67b0:	0305300f 	movweq	r3, #20495	; 0x500f
    67b4:	01052606 	tsteq	r5, r6, lsl #12
    67b8:	03051306 	movweq	r1, #21254	; 0x5306
    67bc:	03040200 	movweq	r0, #16896	; 0x4200
    67c0:	00207503 	eoreq	r7, r0, r3, lsl #10
    67c4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    67c8:	03040200 	movweq	r0, #16896	; 0x4200
    67cc:	440f0520 	strmi	r0, [pc], #-1312	; 67d4 <_Min_Heap_Size+0x5fd4>
    67d0:	01000502 	tsteq	r0, r2, lsl #10
    67d4:	00010501 	andeq	r0, r1, r1, lsl #10
    67d8:	00000205 	andeq	r0, r0, r5, lsl #4
    67dc:	9a030000 	bls	c67e4 <_Min_Heap_Size+0xc5fe4>
    67e0:	01060103 	tsteq	r6, r3, lsl #2
    67e4:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    67e8:	0505302f 	streq	r3, [r5, #-47]	; 0xffffffd1
    67ec:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    67f0:	01061105 	tsteq	r6, r5, lsl #2
    67f4:	05260105 	streq	r0, [r6, #-261]!	; 0xfffffefb
    67f8:	04020003 	streq	r0, [r2], #-3
    67fc:	20750303 	rsbscs	r0, r5, r3, lsl #6
    6800:	03040200 	movweq	r0, #16896	; 0x4200
    6804:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6808:	02002003 	andeq	r2, r0, #3
    680c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6810:	21010402 	tstcs	r1, r2, lsl #8
    6814:	6e060505 	cfsh32vs	mvfx0, mvfx6, #5
    6818:	01062605 	tsteq	r6, r5, lsl #12
    681c:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    6820:	04022201 	streq	r2, [r2], #-513	; 0xfffffdff
    6824:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6828:	02050001 	andeq	r0, r5, #1
    682c:	00000000 	andeq	r0, r0, r0
    6830:	0103b103 	tsteq	r3, r3, lsl #2
    6834:	03050106 	movweq	r0, #20742	; 0x5106
    6838:	31152f06 	tstcc	r5, r6, lsl #30
    683c:	01060705 	tsteq	r6, r5, lsl #14
    6840:	23060305 	movwcs	r0, #25349	; 0x6305
    6844:	01061705 	tsteq	r6, r5, lsl #14
    6848:	052e3b05 	streq	r3, [lr, #-2821]!	; 0xfffff4fb
    684c:	0f052e33 	svceq	0x00052e33
    6850:	2101052e 	tstcs	r1, lr, lsr #10
    6854:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    6858:	79030304 	stmdbvc	r3, {r2, r8, r9}
    685c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6860:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6864:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    6868:	01010006 	tsteq	r1, r6
    686c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6870:	00000002 	andeq	r0, r0, r2
    6874:	03ca0300 	biceq	r0, sl, #0, 6
    6878:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    687c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    6880:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6884:	313f0603 	teqcc	pc, r3, lsl #12
    6888:	01060705 	tsteq	r6, r5, lsl #14
    688c:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    6890:	01060f05 	tsteq	r6, r5, lsl #30
    6894:	30060305 	andcc	r0, r6, r5, lsl #6
    6898:	01060f05 	tsteq	r6, r5, lsl #30
    689c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    68a0:	01060f05 	tsteq	r6, r5, lsl #30
    68a4:	30060305 	andcc	r0, r6, r5, lsl #6
    68a8:	01060e05 	tsteq	r6, r5, lsl #28
    68ac:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    68b0:	05230602 	streq	r0, [r3, #-1538]!	; 0xfffff9fe
    68b4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    68b8:	0c052004 	stceq	0, cr2, [r5], {4}
    68bc:	2601053e 			; <UNDEFINED> instruction: 0x2601053e
    68c0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    68c4:	6a030304 	bvs	c74dc <_Min_Heap_Size+0xc6cdc>
    68c8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    68cc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    68d0:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    68d4:	3c14030c 	ldccc	3, cr0, [r4], {12}
    68d8:	01000502 	tsteq	r0, r2, lsl #10
    68dc:	00010501 	andeq	r0, r1, r1, lsl #10
    68e0:	00000205 	andeq	r0, r0, r5, lsl #4
    68e4:	fb030000 	blx	c68ee <_Min_Heap_Size+0xc60ee>
    68e8:	03050103 	movweq	r0, #20739	; 0x5103
    68ec:	06010514 			; <UNDEFINED> instruction: 0x06010514
    68f0:	00010216 	andeq	r0, r1, r6, lsl r2
    68f4:	01050101 	tsteq	r5, r1, lsl #2
    68f8:	00020500 	andeq	r0, r2, r0, lsl #10
    68fc:	03000000 	movweq	r0, #0
    6900:	060103ec 	streq	r0, [r1], -ip, ror #7
    6904:	06030501 	streq	r0, [r3], -r1, lsl #10
    6908:	06060522 	streq	r0, [r6], -r2, lsr #10
    690c:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    6910:	05330105 	ldreq	r0, [r3, #-261]!	; 0xfffffefb
    6914:	2f1d0605 	svccs	0x001d0605
    6918:	30060105 	andcc	r0, r6, r5, lsl #2
    691c:	01000402 	tsteq	r0, r2, lsl #8
    6920:	00101001 	andseq	r1, r0, r1
    6924:	0f000300 	svceq	0x00000300
    6928:	02000002 	andeq	r0, r0, #2
    692c:	0d0efb01 	vstreq	d15, [lr, #-4]
    6930:	01010100 	mrseq	r0, (UNDEF: 17)
    6934:	00000001 	andeq	r0, r0, r1
    6938:	01000001 	tsteq	r0, r1
    693c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 6944 <_Min_Heap_Size+0x6144>
    6940:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6944:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    6948:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    694c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6950:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    6954:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    6958:	2f726576 	svccs	0x00726576
    695c:	00637253 	rsbeq	r7, r3, r3, asr r2
    6960:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    6964:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    6968:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    696c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    6970:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    6974:	615c6d61 	cmpvs	ip, r1, ror #26
    6978:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    697c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    6980:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    6984:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6988:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    698c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6990:	2e30312d 	rsfcssp	f3, f0, #5.0
    6994:	30322d33 	eorscc	r2, r2, r3, lsr sp
    6998:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    699c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    69a0:	6f6e2d6d 	svcvs	0x006e2d6d
    69a4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    69a8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    69ac:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    69b0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    69b4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    69b8:	00656e69 	rsbeq	r6, r5, r9, ror #28
    69bc:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    69c0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    69c4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    69c8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    69cc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    69d0:	615c6d61 	cmpvs	ip, r1, ror #26
    69d4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    69d8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    69dc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    69e0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    69e4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    69e8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    69ec:	2e30312d 	rsfcssp	f3, f0, #5.0
    69f0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    69f4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    69f8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    69fc:	6f6e2d6d 	svcvs	0x006e2d6d
    6a00:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6a04:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    6a08:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6a0c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    6a10:	00737973 	rsbseq	r7, r3, r3, ror r9
    6a14:	442f2e2e 	strtmi	r2, [pc], #-3630	; 6a1c <_Min_Heap_Size+0x621c>
    6a18:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6a1c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    6a20:	5349534d 	movtpl	r5, #37709	; 0x934d
    6a24:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    6a28:	2f656369 	svccs	0x00656369
    6a2c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    6a30:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    6a34:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6a38:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    6a3c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6a40:	2f2e2e00 	svccs	0x002e2e00
    6a44:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6a48:	2f737265 	svccs	0x00737265
    6a4c:	334d5453 	movtcc	r5, #54355	; 0xd453
    6a50:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    6a54:	41485f78 	hvcmi	34296	; 0x85f8
    6a58:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    6a5c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6a60:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    6a64:	2f2e2e00 	svccs	0x002e2e00
    6a68:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    6a6c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    6a70:	74730000 	ldrbtvc	r0, [r3], #-0
    6a74:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6a78:	5f787834 	svcpl	0x00787834
    6a7c:	5f6c6168 	svcpl	0x006c6168
    6a80:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    6a84:	00010063 	andeq	r0, r1, r3, rrx
    6a88:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    6a8c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    6a90:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    6a94:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    6a98:	00020068 	andeq	r0, r2, r8, rrx
    6a9c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    6aa0:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    6aa4:	0300682e 	movweq	r6, #2094	; 0x82e
    6aa8:	74730000 	ldrbtvc	r0, [r3], #-0
    6aac:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6ab0:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    6ab4:	00682e78 	rsbeq	r2, r8, r8, ror lr
    6ab8:	73000004 	movwvc	r0, #4
    6abc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6ac0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6ac4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6ac8:	74730000 	ldrbtvc	r0, [r3], #-0
    6acc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6ad0:	5f787834 	svcpl	0x00787834
    6ad4:	5f6c6168 	svcpl	0x006c6168
    6ad8:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    6adc:	00050068 	andeq	r0, r5, r8, rrx
    6ae0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6ae4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6ae8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6aec:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 6af4 <_Min_Heap_Size+0x62f4>
    6af0:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
    6af4:	00000500 	andeq	r0, r0, r0, lsl #10
    6af8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    6afc:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    6b00:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6b04:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6b08:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6b0c:	74730000 	ldrbtvc	r0, [r3], #-0
    6b10:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6b14:	5f787834 	svcpl	0x00787834
    6b18:	2e6c6168 	powcsez	f6, f4, #0.0
    6b1c:	00050068 	andeq	r0, r5, r8, rrx
    6b20:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6b24:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6b28:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6b2c:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    6b30:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    6b34:	00060068 	andeq	r0, r6, r8, rrx
    6b38:	01050000 	mrseq	r0, (UNDEF: 5)
    6b3c:	00020500 	andeq	r0, r2, r0, lsl #10
    6b40:	03000000 	movweq	r0, #0
    6b44:	060108ff 			; <UNDEFINED> instruction: 0x060108ff
    6b48:	06030501 	streq	r0, [r3], -r1, lsl #10
    6b4c:	06070522 	streq	r0, [r7], -r2, lsr #10
    6b50:	20160501 	andscs	r0, r6, r1, lsl #10
    6b54:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    6b58:	01060705 	tsteq	r6, r5, lsl #14
    6b5c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6b60:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6b64:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6b68:	03062005 	movweq	r2, #24581	; 0x6005
    6b6c:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    6b70:	19050106 	stmdbne	r5, {r1, r2, r8}
    6b74:	06050520 	streq	r0, [r5], -r0, lsr #10
    6b78:	06090523 	streq	r0, [r9], -r3, lsr #10
    6b7c:	201a0501 	andscs	r0, sl, r1, lsl #10
    6b80:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    6b84:	72030605 	andvc	r0, r3, #5242880	; 0x500000
    6b88:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6b8c:	20190501 	andscs	r0, r9, r1, lsl #10
    6b90:	23060505 	movwcs	r0, #25861	; 0x6505
    6b94:	01060905 	tsteq	r6, r5, lsl #18
    6b98:	02201a05 	eoreq	r1, r0, #20480	; 0x5000
    6b9c:	01010002 	tsteq	r1, r2
    6ba0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6ba4:	00000002 	andeq	r0, r0, r2
    6ba8:	09a10300 	stmibeq	r1!, {r8, r9}
    6bac:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6bb0:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    6bb4:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    6bb8:	40052037 	andmi	r2, r5, r7, lsr r0
    6bbc:	200c0520 	andcs	r0, ip, r0, lsr #10
    6bc0:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    6bc4:	06290513 			; <UNDEFINED> instruction: 0x06290513
    6bc8:	2e150501 	cfmul32cs	mvfx0, mvfx5, mvfx1
    6bcc:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    6bd0:	01060605 	tsteq	r6, r5, lsl #12
    6bd4:	31060505 	tstcc	r6, r5, lsl #10
    6bd8:	01063a05 	tsteq	r6, r5, lsl #20
    6bdc:	054a5105 	strbeq	r5, [sl, #-261]	; 0xfffffefb
    6be0:	0305201d 	movweq	r2, #20509	; 0x501d
    6be4:	01052806 	tsteq	r5, r6, lsl #16
    6be8:	05201306 	streq	r1, [r0, #-774]!	; 0xfffffcfa
    6bec:	05380605 	ldreq	r0, [r8, #-1541]!	; 0xfffff9fb
    6bf0:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    6bf4:	07024a1d 	smladeq	r2, sp, sl, r4
    6bf8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6bfc:	02050001 	andeq	r0, r5, #1
    6c00:	00000000 	andeq	r0, r0, r0
    6c04:	0109bd03 	tsteq	r9, r3, lsl #26
    6c08:	13130305 	tstne	r3, #335544320	; 0x14000000
    6c0c:	01060c05 	tsteq	r6, r5, lsl #24
    6c10:	23060305 	movwcs	r0, #25349	; 0x6305
    6c14:	01061005 	tsteq	r6, r5
    6c18:	06200505 	strteq	r0, [r0], -r5, lsl #10
    6c1c:	05660622 	strbeq	r0, [r6, #-1570]!	; 0xfffff9de
    6c20:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    6c24:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6c28:	1505200a 	strne	r2, [r5, #-10]
    6c2c:	203c7603 	eorscs	r7, ip, r3, lsl #12
    6c30:	03060705 	movweq	r0, #26373	; 0x6705
    6c34:	15052010 	strne	r2, [r5, #-16]
    6c38:	0a050106 	beq	147058 <_Min_Heap_Size+0x146858>
    6c3c:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    6c40:	05203c70 	streq	r3, [r0, #-3184]!	; 0xfffff390
    6c44:	1d030608 	stcne	6, cr0, [r3, #-32]	; 0xffffffe0
    6c48:	060b0520 	streq	r0, [fp], -r0, lsr #10
    6c4c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6c50:	053c1c03 	ldreq	r1, [ip, #-3075]!	; 0xfffff3fd
    6c54:	16055207 	strne	r5, [r5], -r7, lsl #4
    6c58:	0a050106 	beq	147078 <_Min_Heap_Size+0x146878>
    6c5c:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    6c60:	203c7fbf 	ldrhtcs	r7, [ip], -pc
    6c64:	03060505 	movweq	r0, #25861	; 0x6505
    6c68:	7406201f 	strvc	r2, [r6], #-31	; 0xffffffe1
    6c6c:	27060705 	strcs	r0, [r6, -r5, lsl #14]
    6c70:	01061605 	tsteq	r6, r5, lsl #12
    6c74:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6c78:	3c5a0315 	mrrccc	3, 1, r0, sl, cr5
    6c7c:	06070520 	streq	r0, [r7], -r0, lsr #10
    6c80:	05202c03 	streq	r2, [r0, #-3075]!	; 0xfffff3fd
    6c84:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    6c88:	1505200a 	strne	r2, [r5, #-10]
    6c8c:	203c5403 	eorscs	r5, ip, r3, lsl #8
    6c90:	0c031005 	stceq	0, cr1, [r3], {5}
    6c94:	20262020 	eorcs	r2, r6, r0, lsr #32
    6c98:	11030e05 	tstne	r3, r5, lsl #28
    6c9c:	10052020 	andne	r2, r5, r0, lsr #32
    6ca0:	20262025 	eorcs	r2, r6, r5, lsr #32
    6ca4:	10030e05 	andne	r0, r3, r5, lsl #28
    6ca8:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    6cac:	1005201b 	andne	r2, r5, fp, lsl r0
    6cb0:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    6cb4:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    6cb8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    6cbc:	01010001 	tsteq	r1, r1
    6cc0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6cc4:	00000002 	andeq	r0, r0, r2
    6cc8:	01aa0300 			; <UNDEFINED> instruction: 0x01aa0300
    6ccc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6cd0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    6cd4:	01061805 	tsteq	r6, r5, lsl #16
    6cd8:	2f060305 	svccs	0x00060305
    6cdc:	06050515 			; <UNDEFINED> instruction: 0x06050515
    6ce0:	06030501 	streq	r0, [r3], -r1, lsl #10
    6ce4:	04020050 	streq	r0, [r2], #-80	; 0xffffffb0
    6ce8:	004a0601 	subeq	r0, sl, r1, lsl #12
    6cec:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6cf0:	03040200 	movweq	r0, #16896	; 0x4200
    6cf4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6cf8:	02003c04 	andeq	r3, r0, #4, 24	; 0x400
    6cfc:	003c0504 	eorseq	r0, ip, r4, lsl #10
    6d00:	3c060402 	cfstrscc	mvf0, [r6], {2}
    6d04:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6d08:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d0c:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    6d10:	004a0904 	subeq	r0, sl, r4, lsl #18
    6d14:	3c0a0402 	cfstrscc	mvf0, [sl], {2}
    6d18:	0b040200 	bleq	107520 <_Min_Heap_Size+0x106d20>
    6d1c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d20:	02003c0c 	andeq	r3, r0, #12, 24	; 0xc00
    6d24:	003c0d04 	eorseq	r0, ip, r4, lsl #26
    6d28:	3c0e0402 	cfstrscc	mvf0, [lr], {2}
    6d2c:	0f040200 	svceq	0x00040200
    6d30:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d34:	02003c10 	andeq	r3, r0, #16, 24	; 0x1000
    6d38:	062e1004 	strteq	r1, [lr], -r4
    6d3c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    6d40:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6d44:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6d48:	03040200 	movweq	r0, #16896	; 0x4200
    6d4c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d50:	02003c04 	andeq	r3, r0, #4, 24	; 0x400
    6d54:	003c0504 	eorseq	r0, ip, r4, lsl #10
    6d58:	3c060402 	cfstrscc	mvf0, [r6], {2}
    6d5c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6d60:	003d063c 	eorseq	r0, sp, ip, lsr r6
    6d64:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d68:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6d6c:	2f062e02 	svccs	0x00062e02
    6d70:	01040200 	mrseq	r0, R12_usr
    6d74:	2f064a06 	svccs	0x00064a06
    6d78:	01040200 	mrseq	r0, R12_usr
    6d7c:	2f064a06 	svccs	0x00064a06
    6d80:	01040200 	mrseq	r0, R12_usr
    6d84:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6d88:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    6d8c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6d90:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6d94:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6d98:	02003d06 	andeq	r3, r0, #384	; 0x180
    6d9c:	2e060104 	adfcss	f0, f6, f4
    6da0:	02040200 	andeq	r0, r4, #0, 4
    6da4:	002f063c 	eoreq	r0, pc, ip, lsr r6	; <UNPREDICTABLE>
    6da8:	06010402 	streq	r0, [r1], -r2, lsl #8
    6dac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6db0:	02003c02 	andeq	r3, r0, #512	; 0x200
    6db4:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    6db8:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6dbc:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    6dc0:	06100531 			; <UNDEFINED> instruction: 0x06100531
    6dc4:	20050501 	andcs	r0, r5, r1, lsl #10
    6dc8:	003d2206 	eorseq	r2, sp, r6, lsl #4
    6dcc:	06010402 	streq	r0, [r1], -r2, lsl #8
    6dd0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6dd4:	02003c02 	andeq	r3, r0, #512	; 0x200
    6dd8:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    6ddc:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6de0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6de4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6de8:	03040200 	movweq	r0, #16896	; 0x4200
    6dec:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    6df0:	060f0540 	streq	r0, [pc], -r0, asr #10
    6df4:	06030501 	streq	r0, [r3], -r1, lsl #10
    6df8:	153c013f 	ldrne	r0, [ip, #-319]!	; 0xfffffec1
    6dfc:	0108055b 	tsteq	r8, fp, asr r5
    6e00:	01060e05 	tsteq	r6, r5, lsl #28
    6e04:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6e08:	05052008 	streq	r2, [r5, #-8]
    6e0c:	09053f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    6e10:	17050106 	strne	r0, [r5, -r6, lsl #2]
    6e14:	2007052e 	andcs	r0, r7, lr, lsr #10
    6e18:	17053106 	strne	r3, [r5, -r6, lsl #2]
    6e1c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6e20:	13053106 	movwne	r3, #20742	; 0x5106
    6e24:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6e28:	01053e06 	tsteq	r5, r6, lsl #28
    6e2c:	00ce0306 	sbceq	r0, lr, r6, lsl #6
    6e30:	00030501 	andeq	r0, r3, r1, lsl #10
    6e34:	03080402 	movweq	r0, #33794	; 0x8402
    6e38:	00207f8b 	eoreq	r7, r0, fp, lsl #31
    6e3c:	59030402 	stmdbpl	r3, {r1, sl}
    6e40:	02040200 	andeq	r0, r4, #0, 4
    6e44:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6e48:	02005902 	andeq	r5, r0, #32768	; 0x8000
    6e4c:	00590304 	subseq	r0, r9, r4, lsl #6
    6e50:	59030402 	stmdbpl	r3, {r1, sl}
    6e54:	03040200 	movweq	r0, #16896	; 0x4200
    6e58:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6e5c:	02005904 	andeq	r5, r0, #4, 18	; 0x10000
    6e60:	05590204 	ldrbeq	r0, [r9, #-516]	; 0xfffffdfc
    6e64:	04020005 	streq	r0, [r2], #-5
    6e68:	02005d01 	andeq	r5, r0, #1, 26	; 0x40
    6e6c:	00590404 	subseq	r0, r9, r4, lsl #8
    6e70:	59040402 	stmdbpl	r4, {r1, sl}
    6e74:	03060305 	movweq	r0, #25349	; 0x6305
    6e78:	0705581d 	smladeq	r5, sp, r8, r5
    6e7c:	03050106 	movweq	r0, #20742	; 0x5106
    6e80:	07052306 	streq	r2, [r5, -r6, lsl #6]
    6e84:	03050106 	movweq	r0, #20742	; 0x5106
    6e88:	15053406 	strne	r3, [r5, #-1030]	; 0xfffffbfa
    6e8c:	36050106 	strcc	r0, [r5], -r6, lsl #2
    6e90:	202a0520 	eorcs	r0, sl, r0, lsr #10
    6e94:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
    6e98:	36051f48 	strcc	r1, [r5], -r8, asr #30
    6e9c:	202a0521 	eorcs	r0, sl, r1, lsr #10
    6ea0:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
    6ea4:	36051f48 	strcc	r1, [r5], -r8, asr #30
    6ea8:	202a0521 	eorcs	r0, sl, r1, lsr #10
    6eac:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
    6eb0:	36051f48 	strcc	r1, [r5], -r8, asr #30
    6eb4:	202a0521 	eorcs	r0, sl, r1, lsr #10
    6eb8:	051d0705 	ldreq	r0, [sp, #-1797]	; 0xfffff8fb
    6ebc:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    6ec0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6ec4:	03052005 	movweq	r2, #20485	; 0x5005
    6ec8:	16053506 	strne	r3, [r5], -r6, lsl #10
    6ecc:	03050106 	movweq	r0, #20742	; 0x5106
    6ed0:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    6ed4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6ed8:	06030520 	streq	r0, [r3], -r0, lsr #10
    6edc:	06070523 	streq	r0, [r7], -r3, lsr #10
    6ee0:	06030501 	streq	r0, [r3], -r1, lsl #10
    6ee4:	06140531 			; <UNDEFINED> instruction: 0x06140531
    6ee8:	20070501 	andcs	r0, r7, r1, lsl #10
    6eec:	23060305 	movwcs	r0, #25349	; 0x6305
    6ef0:	01060505 	tsteq	r6, r5, lsl #10
    6ef4:	16053106 	strne	r3, [r5], -r6, lsl #2
    6ef8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6efc:	06050520 	streq	r0, [r5], -r0, lsr #10
    6f00:	06130524 	ldreq	r0, [r3], -r4, lsr #10
    6f04:	20080501 	andcs	r0, r8, r1, lsl #10
    6f08:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    6f0c:	01060b05 	tsteq	r6, r5, lsl #22
    6f10:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
    6f14:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    6f18:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    6f1c:	06030501 	streq	r0, [r3], -r1, lsl #10
    6f20:	06200524 	strteq	r0, [r0], -r4, lsr #10
    6f24:	06030501 	streq	r0, [r3], -r1, lsl #10
    6f28:	061d053f 			; <UNDEFINED> instruction: 0x061d053f
    6f2c:	20160501 	andscs	r0, r6, r1, lsl #10
    6f30:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    6f34:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6f38:	20010613 	andcs	r0, r1, r3, lsl r6
    6f3c:	23060305 	movwcs	r0, #25349	; 0x6305
    6f40:	01060f05 	tsteq	r6, r5, lsl #30
    6f44:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    6f48:	01060a05 	tsteq	r6, r5, lsl #20
    6f4c:	03060505 	movweq	r0, #25861	; 0x6505
    6f50:	1705744a 	strne	r7, [r5, -sl, asr #8]
    6f54:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    6f58:	20210520 	eorcs	r0, r1, r0, lsr #10
    6f5c:	20200905 	eorcs	r0, r0, r5, lsl #18
    6f60:	201c0306 	andscs	r0, ip, r6, lsl #6
    6f64:	01061905 	tsteq	r6, r5, lsl #18
    6f68:	31060905 	tstcc	r6, r5, lsl #18
    6f6c:	01061505 	tsteq	r6, r5, lsl #10
    6f70:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    6f74:	01061005 	tsteq	r6, r5
    6f78:	9c030c05 	stcls	12, cr0, [r3], {5}
    6f7c:	0220207f 	eoreq	r2, r0, #127	; 0x7f
    6f80:	01010001 	tsteq	r1, r1
    6f84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6f88:	00000002 	andeq	r0, r0, r2
    6f8c:	02b50300 	adcseq	r0, r5, #0, 6
    6f90:	13030501 	movwne	r0, #13569	; 0x3501
    6f94:	06050515 			; <UNDEFINED> instruction: 0x06050515
    6f98:	2a010501 	bcs	483a4 <_Min_Heap_Size+0x47ba4>
    6f9c:	03060305 	movweq	r0, #25349	; 0x6305
    6fa0:	0a052e0a 	beq	1527d0 <_Min_Heap_Size+0x151fd0>
    6fa4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    6fa8:	03052005 	movweq	r2, #20485	; 0x5005
    6fac:	02003506 	andeq	r3, r0, #25165824	; 0x1800000
    6fb0:	4a060104 	bmi	1873c8 <_Min_Heap_Size+0x186bc8>
    6fb4:	02040200 	andeq	r0, r4, #0, 4
    6fb8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6fbc:	02003c03 	andeq	r3, r0, #768	; 0x300
    6fc0:	003c0404 	eorseq	r0, ip, r4, lsl #8
    6fc4:	3c050402 	cfstrscc	mvf0, [r5], {2}
    6fc8:	06040200 	streq	r0, [r4], -r0, lsl #4
    6fcc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6fd0:	02003c07 	andeq	r3, r0, #1792	; 0x700
    6fd4:	003c0804 	eorseq	r0, ip, r4, lsl #16
    6fd8:	4a090402 	bmi	247fe8 <_Min_Heap_Size+0x2477e8>
    6fdc:	0a040200 	beq	1077e4 <_Min_Heap_Size+0x106fe4>
    6fe0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6fe4:	02003c0b 	andeq	r3, r0, #2816	; 0xb00
    6fe8:	003c0c04 	eorseq	r0, ip, r4, lsl #24
    6fec:	3c0d0402 	cfstrscc	mvf0, [sp], {2}
    6ff0:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    6ff4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6ff8:	02003c0f 	andeq	r3, r0, #3840	; 0xf00
    6ffc:	063c1004 	ldrteq	r1, [ip], -r4
    7000:	07055b5b 	smlsdeq	r5, fp, fp, r5
    7004:	18050106 	stmdane	r5, {r1, r2, r8}
    7008:	06030520 	streq	r0, [r3], -r0, lsr #10
    700c:	06070531 			; <UNDEFINED> instruction: 0x06070531
    7010:	20180501 	andscs	r0, r8, r1, lsl #10
    7014:	23060305 	movwcs	r0, #25349	; 0x6305
    7018:	01060705 	tsteq	r6, r5, lsl #14
    701c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    7020:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7024:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7028:	03052018 	movweq	r2, #20504	; 0x5018
    702c:	07052306 	streq	r2, [r5, -r6, lsl #6]
    7030:	18050106 	stmdane	r5, {r1, r2, r8}
    7034:	06030520 	streq	r0, [r3], -r0, lsr #10
    7038:	06070523 	streq	r0, [r7], -r3, lsr #10
    703c:	20180501 	andscs	r0, r8, r1, lsl #10
    7040:	31060305 	tstcc	r6, r5, lsl #6
    7044:	01062005 	tsteq	r6, r5
    7048:	3f060305 	svccc	0x00060305
    704c:	01061a05 	tsteq	r6, r5, lsl #20
    7050:	21060305 	tstcs	r6, r5, lsl #6
    7054:	01061e05 	tsteq	r6, r5, lsl #28
    7058:	21060305 	tstcs	r6, r5, lsl #6
    705c:	01061c05 	tsteq	r6, r5, lsl #24
    7060:	21060305 	tstcs	r6, r5, lsl #6
    7064:	01062005 	tsteq	r6, r5
    7068:	21060305 	tstcs	r6, r5, lsl #6
    706c:	01061b05 	tsteq	r6, r5, lsl #22
    7070:	21060305 	tstcs	r6, r5, lsl #6
    7074:	01061b05 	tsteq	r6, r5, lsl #22
    7078:	23060305 	movwcs	r0, #25349	; 0x6305
    707c:	01061d05 	tsteq	r6, r5, lsl #26
    7080:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    7084:	03052e0e 	movweq	r2, #24078	; 0x5e0e
    7088:	13052306 	movwne	r2, #21254	; 0x5306
    708c:	03050106 	movweq	r0, #20742	; 0x5106
    7090:	0f052306 	svceq	0x00052306
    7094:	03050106 	movweq	r0, #20742	; 0x5106
    7098:	2e013106 	adfcss	f3, f1, f6
    709c:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    70a0:	21010501 	tstcs	r1, r1, lsl #10
    70a4:	46030c05 	strmi	r0, [r3], -r5, lsl #24
    70a8:	03010520 	movweq	r0, #5408	; 0x1520
    70ac:	0602203a 			; <UNDEFINED> instruction: 0x0602203a
    70b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    70b4:	02050001 	andeq	r0, r5, #1
    70b8:	00000000 	andeq	r0, r0, r0
    70bc:	01039703 	tsteq	r3, r3, lsl #14
    70c0:	03050106 	movweq	r0, #20742	; 0x5106
    70c4:	06156706 	ldreq	r6, [r5], -r6, lsl #14
    70c8:	31062e20 	tstcc	r6, r0, lsr #28
    70cc:	04020001 	streq	r0, [r2], #-1
    70d0:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    70d4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    70d8:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    70dc:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    70e0:	01060204 	tsteq	r6, r4, lsl #4
    70e4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    70e8:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    70ec:	012e1103 			; <UNDEFINED> instruction: 0x012e1103
    70f0:	0c05153c 	cfstr32eq	mvfx1, [r5], {60}	; 0x3c
    70f4:	01050106 	tsteq	r5, r6, lsl #2
    70f8:	00030523 	andeq	r0, r3, r3, lsr #10
    70fc:	03010402 	movweq	r0, #5122	; 0x1402
    7100:	02002e64 	andeq	r2, r0, #100, 28	; 0x640
    7104:	002e0104 	eoreq	r0, lr, r4, lsl #2
    7108:	20010402 	andcs	r0, r1, r2, lsl #8
    710c:	44060505 	strmi	r0, [r6], #-1285	; 0xfffffafb
    7110:	01061105 	tsteq	r6, r5, lsl #2
    7114:	3f060505 	svccc	0x00060505
    7118:	01061505 	tsteq	r6, r5, lsl #10
    711c:	4d060505 	cfstr32mi	mvfx0, [r6, #-20]	; 0xffffffec
    7120:	06150569 	ldreq	r0, [r5], -r9, ror #10
    7124:	05586c03 	ldrbeq	r6, [r8, #-3075]	; 0xfffff3fd
    7128:	05023403 	streq	r3, [r2, #-1027]	; 0xfffffbfd
    712c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7130:	02050001 	andeq	r0, r5, #1
    7134:	00000000 	andeq	r0, r0, r0
    7138:	0103c303 	tsteq	r3, r3, lsl #6
    713c:	03050106 	movweq	r0, #20742	; 0x5106
    7140:	05156706 	ldreq	r6, [r5, #-1798]	; 0xfffff8fa
    7144:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    7148:	06310603 	ldrteq	r0, [r1], -r3, lsl #12
    714c:	31062e20 	tstcc	r6, r0, lsr #28
    7150:	04020001 	streq	r0, [r2], #-1
    7154:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    7158:	003c0204 	eorseq	r0, ip, r4, lsl #4
    715c:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    7160:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    7164:	01060204 	tsteq	r6, r4, lsl #4
    7168:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    716c:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    7170:	012e1c03 			; <UNDEFINED> instruction: 0x012e1c03
    7174:	0c05153c 	cfstr32eq	mvfx1, [r5], {60}	; 0x3c
    7178:	01050106 	tsteq	r5, r6, lsl #2
    717c:	00030524 	andeq	r0, r3, r4, lsr #10
    7180:	03010402 	movweq	r0, #5122	; 0x1402
    7184:	02002e58 	andeq	r2, r0, #88, 28	; 0x580
    7188:	002e0104 	eoreq	r0, lr, r4, lsl #2
    718c:	20010402 	andcs	r0, r1, r2, lsl #8
    7190:	44060505 	strmi	r0, [r6], #-1285	; 0xfffffafb
    7194:	01061105 	tsteq	r6, r5, lsl #2
    7198:	3f060505 	svccc	0x00060505
    719c:	01061505 	tsteq	r6, r5, lsl #10
    71a0:	31060505 	tstcc	r6, r5, lsl #10
    71a4:	061f0569 	ldreq	r0, [pc], -r9, ror #10
    71a8:	20180501 	andscs	r0, r8, r1, lsl #10
    71ac:	052e1005 	streq	r1, [lr, #-5]!
    71b0:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    71b4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    71b8:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    71bc:	0c054c06 	stceq	12, cr4, [r5], {6}
    71c0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    71c4:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    71c8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    71cc:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    71d0:	15054e06 	strne	r4, [r5, #-3590]	; 0xfffff1fa
    71d4:	585e0306 	ldmdapl	lr, {r1, r2, r8, r9}^
    71d8:	09030305 	stmdbeq	r3, {r0, r2, r8, r9}
    71dc:	0004022e 	andeq	r0, r4, lr, lsr #4
    71e0:	01050101 	tsteq	r5, r1, lsl #2
    71e4:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
    71e8:	03080014 	movweq	r0, #32788	; 0x8014
    71ec:	06010481 	streq	r0, [r1], -r1, lsl #9
    71f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    71f4:	06380530 			; <UNDEFINED> instruction: 0x06380530
    71f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    71fc:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    7200:	06030501 	streq	r0, [r3], -r1, lsl #10
    7204:	060a0530 			; <UNDEFINED> instruction: 0x060a0530
    7208:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    720c:	15053006 	strne	r3, [r5, #-6]
    7210:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7214:	3c013106 	stfccs	f3, [r1], {6}
    7218:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    721c:	03010501 	movweq	r0, #5377	; 0x1501
    7220:	0520202d 	streq	r2, [r0, #-45]!	; 0xffffffd3
    7224:	58030605 	stmdapl	r3, {r0, r2, r9, sl}
    7228:	06090520 	streq	r0, [r9], -r0, lsr #10
    722c:	20190501 	andscs	r0, r9, r1, lsl #10
    7230:	4b060505 	blmi	18864c <_Min_Heap_Size+0x187e4c>
    7234:	01060905 	tsteq	r6, r5, lsl #18
    7238:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    723c:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    7240:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7244:	22062007 	andcs	r2, r6, #7
    7248:	01060b05 	tsteq	r6, r5, lsl #22
    724c:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    7250:	5b4e0605 	blpl	1388a6c <_Min_Heap_Size+0x138826c>
    7254:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    7258:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    725c:	0a05201a 	beq	14f2cc <_Min_Heap_Size+0x14eacc>
    7260:	06070520 	streq	r0, [r7], -r0, lsr #10
    7264:	060b053f 			; <UNDEFINED> instruction: 0x060b053f
    7268:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    726c:	06200905 	strteq	r0, [r0], -r5, lsl #18
    7270:	06190531 			; <UNDEFINED> instruction: 0x06190531
    7274:	06090501 	streq	r0, [r9], -r1, lsl #10
    7278:	06150531 			; <UNDEFINED> instruction: 0x06150531
    727c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7280:	143c013f 	ldrtne	r0, [ip], #-319	; 0xfffffec1
    7284:	01061005 	tsteq	r6, r5
    7288:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    728c:	69030104 	stmdbvs	r3, {r2, r8}
    7290:	002d0520 	eoreq	r0, sp, r0, lsr #10
    7294:	20010402 	andcs	r0, r1, r2, lsl #8
    7298:	03060505 	movweq	r0, #25861	; 0x6505
    729c:	1f053c1c 	svcne	0x00053c1c
    72a0:	18050106 	stmdane	r5, {r1, r2, r8}
    72a4:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    72a8:	23060505 	movwcs	r0, #25861	; 0x6505
    72ac:	01061105 	tsteq	r6, r5, lsl #2
    72b0:	3f060505 	svccc	0x00060505
    72b4:	03053c01 	movweq	r3, #23553	; 0x5c01
    72b8:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    72bc:	00010201 	andeq	r0, r1, r1, lsl #4
    72c0:	01050101 	tsteq	r5, r1, lsl #2
    72c4:	e0020500 	and	r0, r2, r0, lsl #10
    72c8:	03080014 	movweq	r0, #32788	; 0x8014
    72cc:	050104c4 	streq	r0, [r1, #-1220]	; 0xfffffb3c
    72d0:	0a051303 	beq	14bee4 <_Min_Heap_Size+0x14b6e4>
    72d4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    72d8:	0530063c 	ldreq	r0, [r0, #-1596]!	; 0xfffff9c4
    72dc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    72e0:	052f0605 	streq	r0, [pc, #-1541]!	; 6ce3 <_Min_Heap_Size+0x64e3>
    72e4:	2001060c 	andcs	r0, r1, ip, lsl #12
    72e8:	25060505 	strcs	r0, [r6, #-1285]	; 0xfffffafb
    72ec:	01061105 	tsteq	r6, r5, lsl #2
    72f0:	3f060505 	svccc	0x00060505
    72f4:	055b0305 	ldrbeq	r0, [fp, #-773]	; 0xfffffcfb
    72f8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    72fc:	01022101 	tsteq	r2, r1, lsl #2
    7300:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7304:	02050001 	andeq	r0, r5, #1
    7308:	00000000 	andeq	r0, r0, r0
    730c:	0104e203 	tsteq	r4, r3, lsl #4
    7310:	03050106 	movweq	r0, #20742	; 0x5106
    7314:	13135906 	tstne	r3, #98304	; 0x18000
    7318:	01061805 	tsteq	r6, r5, lsl #16
    731c:	2f060305 	svccs	0x00060305
    7320:	20051415 	andcs	r1, r5, r5, lsl r4
    7324:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7328:	0531063c 	ldreq	r0, [r1, #-1596]!	; 0xfffff9c4
    732c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7330:	012f0605 			; <UNDEFINED> instruction: 0x012f0605
    7334:	0c05133c 	stceq	3, cr1, [r5], {60}	; 0x3c
    7338:	01050106 	tsteq	r5, r6, lsl #2
    733c:	2000f103 	andcs	pc, r0, r3, lsl #2
    7340:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7344:	207f9303 	rsbscs	r9, pc, r3, lsl #6
    7348:	01060c05 	tsteq	r6, r5, lsl #24
    734c:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    7350:	03052006 	movweq	r2, #20486	; 0x5006
    7354:	05054306 	streq	r4, [r5, #-774]	; 0xfffffcfa
    7358:	3f060106 	svccc	0x00060106
    735c:	01062e05 	tsteq	r6, r5, lsl #28
    7360:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    7364:	05520603 	ldrbeq	r0, [r2, #-1539]	; 0xfffff9fd
    7368:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    736c:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    7370:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7374:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    7378:	37050108 	strcc	r0, [r5, -r8, lsl #2]
    737c:	01040200 	mrseq	r0, R12_usr
    7380:	2e053c06 	cdpcs	12, 0, cr3, cr5, cr6, {0}
    7384:	01040200 	mrseq	r0, R12_usr
    7388:	06050520 	streq	r0, [r5], -r0, lsr #10
    738c:	0607053f 			; <UNDEFINED> instruction: 0x0607053f
    7390:	053e0601 	ldreq	r0, [lr, #-1537]!	; 0xfffff9ff
    7394:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    7398:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    739c:	2b052e01 	blcs	152ba8 <_Min_Heap_Size+0x1523a8>
    73a0:	01040200 	mrseq	r0, R12_usr
    73a4:	0019052e 	andseq	r0, r9, lr, lsr #10
    73a8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    73ac:	03060505 	movweq	r0, #25861	; 0x6505
    73b0:	0c052e10 	stceq	14, cr2, [r5], {16}
    73b4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    73b8:	2b052206 	blcs	14fbd8 <_Min_Heap_Size+0x14f3d8>
    73bc:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    73c0:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    73c4:	17053106 	strne	r3, [r5, -r6, lsl #2]
    73c8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    73cc:	12054d06 	andne	r4, r5, #384	; 0x180
    73d0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    73d4:	2b052306 	blcs	14fff4 <_Min_Heap_Size+0x14f7f4>
    73d8:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    73dc:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    73e0:	17053106 	strne	r3, [r5, -r6, lsl #2]
    73e4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    73e8:	12054d06 	andne	r4, r5, #384	; 0x180
    73ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    73f0:	2c052306 	stccs	3, cr2, [r5], {6}
    73f4:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    73f8:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    73fc:	17053106 	strne	r3, [r5, -r6, lsl #2]
    7400:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7404:	12054d06 	andne	r4, r5, #384	; 0x180
    7408:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    740c:	7fbe0306 	svcvc	0x00be0306
    7410:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    7414:	06050501 	streq	r0, [r5], -r1, lsl #10
    7418:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
    741c:	05052001 	streq	r2, [r5, #-1]
    7420:	200c0306 	andcs	r0, ip, r6, lsl #6
    7424:	01062e05 	tsteq	r6, r5, lsl #28
    7428:	4a201405 	bmi	80c444 <_Min_Heap_Size+0x80bc44>
    742c:	03060905 	movweq	r0, #26885	; 0x6905
    7430:	1905200e 	stmdbne	r5, {r1, r2, r3, sp}
    7434:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7438:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    743c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7440:	3c013f06 	stccc	15, cr3, [r1], {6}
    7444:	06100514 			; <UNDEFINED> instruction: 0x06100514
    7448:	06030501 	streq	r0, [r3], -r1, lsl #10
    744c:	052e2303 	streq	r2, [lr, #-771]!	; 0xfffffcfd
    7450:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7454:	22062005 	andcs	r2, r6, #5
    7458:	01060d05 	tsteq	r6, r5, lsl #26
    745c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    7460:	12030603 	andne	r0, r3, #3145728	; 0x300000
    7464:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    7468:	053f0601 	ldreq	r0, [pc, #-1537]!	; 6e6f <_Min_Heap_Size+0x666f>
    746c:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    7470:	10052038 	andne	r2, r5, r8, lsr r0
    7474:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7478:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    747c:	06050501 	streq	r0, [r5], -r1, lsl #10
    7480:	053c013f 	ldreq	r0, [ip, #-319]!	; 0xfffffec1
    7484:	051a060a 	ldreq	r0, [sl, #-1546]	; 0xfffff9f6
    7488:	60030607 	andvs	r0, r3, r7, lsl #12
    748c:	41053f2e 	tstmi	r5, lr, lsr #30
    7490:	3a050106 	bcc	1478b0 <_Min_Heap_Size+0x1470b0>
    7494:	2e120520 	cfmul64cs	mvdx0, mvdx2, mvdx0
    7498:	23060705 	movwcs	r0, #26373	; 0x6705
    749c:	01061205 	tsteq	r6, r5, lsl #4
    74a0:	3f060705 	svccc	0x00060705
    74a4:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    74a8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    74ac:	12030605 	andne	r0, r3, #5242880	; 0x500000
    74b0:	062c0520 	strteq	r0, [ip], -r0, lsr #10
    74b4:	20250501 	eorcs	r0, r5, r1, lsl #10
    74b8:	052e1005 	streq	r1, [lr, #-5]!
    74bc:	0202230a 	andeq	r2, r2, #671088640	; 0x28000000
    74c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    74c4:	02050001 	andeq	r0, r5, #1
    74c8:	00000000 	andeq	r0, r0, r0
    74cc:	0105ea03 	tsteq	r5, r3, lsl #20
    74d0:	03050106 	movweq	r0, #20742	; 0x5106
    74d4:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    74d8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    74dc:	052f0603 	streq	r0, [pc, #-1539]!	; 6ee1 <_Min_Heap_Size+0x66e1>
    74e0:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    74e4:	03052e0c 	movweq	r2, #24076	; 0x5e0c
    74e8:	38054d06 	stmdacc	r5, {r1, r2, r8, sl, fp, lr}
    74ec:	03050106 	movweq	r0, #20742	; 0x5106
    74f0:	0a052206 	beq	14fd10 <_Min_Heap_Size+0x14f510>
    74f4:	03050106 	movweq	r0, #20742	; 0x5106
    74f8:	2a052306 	bcs	150118 <_Min_Heap_Size+0x14f918>
    74fc:	23050106 	movwcs	r0, #20742	; 0x5106
    7500:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    7504:	30060505 	andcc	r0, r6, r5, lsl #10
    7508:	01060805 	tsteq	r6, r5, lsl #16
    750c:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    7510:	061b053f 			; <UNDEFINED> instruction: 0x061b053f
    7514:	06070501 	streq	r0, [r7], -r1, lsl #10
    7518:	062c054d 	strteq	r0, [ip], -sp, asr #10
    751c:	20250501 	eorcs	r0, r5, r1, lsl #10
    7520:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    7524:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    7528:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    752c:	054e0603 	strbeq	r0, [lr, #-1539]	; 0xfffff9fd
    7530:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7534:	06052023 	streq	r2, [r5], -r3, lsr #32
    7538:	0605052e 	streq	r0, [r5], -lr, lsr #10
    753c:	06080530 			; <UNDEFINED> instruction: 0x06080530
    7540:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7544:	12053f06 	andne	r3, r5, #6, 30
    7548:	07050106 	streq	r0, [r5, -r6, lsl #2]
    754c:	17052306 	strne	r2, [r5, -r6, lsl #6]
    7550:	03050106 	movweq	r0, #20742	; 0x5106
    7554:	2b054e06 	blcs	15ad74 <_Min_Heap_Size+0x15a574>
    7558:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    755c:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    7560:	30060505 	andcc	r0, r6, r5, lsl #10
    7564:	01060805 	tsteq	r6, r5, lsl #16
    7568:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    756c:	0612053f 			; <UNDEFINED> instruction: 0x0612053f
    7570:	06070501 	streq	r0, [r7], -r1, lsl #10
    7574:	06170523 	ldreq	r0, [r7], -r3, lsr #10
    7578:	06030501 	streq	r0, [r3], -r1, lsl #10
    757c:	062a054e 	strteq	r0, [sl], -lr, asr #10
    7580:	20230501 	eorcs	r0, r3, r1, lsl #10
    7584:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    7588:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    758c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    7590:	3f062e07 	svccc	0x00062e07
    7594:	01061205 	tsteq	r6, r5, lsl #4
    7598:	23060705 	movwcs	r0, #26373	; 0x6705
    759c:	01061005 	tsteq	r6, r5
    75a0:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    75a4:	3f062009 	svccc	0x00062009
    75a8:	01061b05 	tsteq	r6, r5, lsl #22
    75ac:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    75b0:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    75b4:	200d0501 	andcs	r0, sp, r1, lsl #10
    75b8:	20062306 	andcs	r2, r6, r6, lsl #6
    75bc:	34060b05 	strcc	r0, [r6], #-2821	; 0xfffff4fb
    75c0:	01061205 	tsteq	r6, r5, lsl #4
    75c4:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    75c8:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    75cc:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    75d0:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    75d4:	3f06200b 	svccc	0x0006200b
    75d8:	01061f05 	tsteq	r6, r5, lsl #30
    75dc:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    75e0:	01061005 	tsteq	r6, r5
    75e4:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    75e8:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    75ec:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    75f0:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    75f4:	06052023 	streq	r2, [r5], -r3, lsr #32
    75f8:	0605052e 	streq	r0, [r5], -lr, lsr #10
    75fc:	06080530 			; <UNDEFINED> instruction: 0x06080530
    7600:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7604:	12053f06 	andne	r3, r5, #6, 30
    7608:	07050106 	streq	r0, [r5, -r6, lsl #2]
    760c:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    7610:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7614:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    7618:	052e1b03 	streq	r1, [lr, #-2819]!	; 0xfffff4fd
    761c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7620:	0905201a 	stmdbeq	r5, {r1, r3, r4, sp}
    7624:	053f0620 	ldreq	r0, [pc, #-1568]!	; 700c <_Min_Heap_Size+0x680c>
    7628:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    762c:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    7630:	01061205 	tsteq	r6, r5, lsl #4
    7634:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    7638:	03090531 	movweq	r0, #38193	; 0x9531
    763c:	0d053c60 	stceq	12, cr3, [r5, #-384]	; 0xfffffe80
    7640:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    7644:	06090520 	streq	r0, [r9], -r0, lsr #10
    7648:	060d054b 	streq	r0, [sp], -fp, asr #10
    764c:	201d0501 	andscs	r0, sp, r1, lsl #10
    7650:	4c060905 			; <UNDEFINED> instruction: 0x4c060905
    7654:	01061105 	tsteq	r6, r5, lsl #2
    7658:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    765c:	060f0522 	streq	r0, [pc], -r2, lsr #10
    7660:	201f0501 	andscs	r0, pc, r1, lsl #10
    7664:	4e060905 	vmlami.f16	s0, s12, s10	; <UNPREDICTABLE>
    7668:	01062305 	tsteq	r6, r5, lsl #6
    766c:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    7670:	09052e14 	stmdbeq	r5, {r2, r4, r9, sl, fp, sp}
    7674:	15052306 	strne	r2, [r5, #-774]	; 0xfffffcfa
    7678:	09050106 	stmdbeq	r5, {r1, r2, r8}
    767c:	3c013f06 	stccc	15, cr3, [r1], {6}
    7680:	06100514 			; <UNDEFINED> instruction: 0x06100514
    7684:	200b0501 	andcs	r0, fp, r1, lsl #10
    7688:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    768c:	00390530 	eorseq	r0, r9, r0, lsr r5
    7690:	06010402 	streq	r0, [r1], -r2, lsl #8
    7694:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    7698:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    769c:	0b052001 	bleq	14f6a8 <_Min_Heap_Size+0x14eea8>
    76a0:	3c230306 	stccc	3, cr0, [r3], #-24	; 0xffffffe8
    76a4:	01061205 	tsteq	r6, r5, lsl #4
    76a8:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    76ac:	43090523 	movwmi	r0, #38179	; 0x9523
    76b0:	01061b05 	tsteq	r6, r5, lsl #22
    76b4:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    76b8:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    76bc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    76c0:	0617054d 	ldreq	r0, [r7], -sp, asr #10
    76c4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    76c8:	0200013f 	andeq	r0, r0, #-1073741809	; 0xc000000f
    76cc:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    76d0:	04020009 	streq	r0, [r2], #-9
    76d4:	10051501 	andne	r1, r5, r1, lsl #10
    76d8:	01040200 	mrseq	r0, R12_usr
    76dc:	0b050106 	bleq	147afc <_Min_Heap_Size+0x1472fc>
    76e0:	01040200 	mrseq	r0, R12_usr
    76e4:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    76e8:	0a053503 	beq	154afc <_Min_Heap_Size+0x1542fc>
    76ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    76f0:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    76f4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    76f8:	3e062007 	cdpcc	0, 0, cr2, cr6, cr7, {0}
    76fc:	01061305 	tsteq	r6, r5, lsl #6
    7700:	3f060705 	svccc	0x00060705
    7704:	1409055a 	strne	r0, [r9], #-1370	; 0xfffffaa6
    7708:	01060d05 	tsteq	r6, r5, lsl #26
    770c:	062e0c05 	strteq	r0, [lr], -r5, lsl #24
    7710:	06120541 	ldreq	r0, [r2], -r1, asr #10
    7714:	201c0501 	andscs	r0, ip, r1, lsl #10
    7718:	06200705 	strteq	r0, [r0], -r5, lsl #14
    771c:	0613053f 			; <UNDEFINED> instruction: 0x0613053f
    7720:	06070501 	streq	r0, [r7], -r1, lsl #10
    7724:	0200013f 	andeq	r0, r0, #-1073741809	; 0xc000000f
    7728:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    772c:	04020005 	streq	r0, [r2], #-5
    7730:	0c051501 	cfstr32eq	mvfx1, [r5], {1}
    7734:	01040200 	mrseq	r0, R12_usr
    7738:	07050106 	streq	r0, [r5, -r6, lsl #2]
    773c:	01040200 	mrseq	r0, R12_usr
    7740:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7744:	2e310601 	cfmsuba32cs	mvax0, mvax0, mvfx1, mvfx1
    7748:	01000402 	tsteq	r0, r2, lsl #8
    774c:	00010501 	andeq	r0, r1, r1, lsl #10
    7750:	00000205 	andeq	r0, r0, r5, lsl #4
    7754:	c7030000 	strgt	r0, [r3, -r0]
    7758:	01060107 	tsteq	r6, r7, lsl #2
    775c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    7760:	2e060115 	mcrcs	1, 0, r0, cr6, cr5, {0}
    7764:	02040200 	andeq	r0, r4, #0, 4
    7768:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    776c:	003c0204 	eorseq	r0, ip, r4, lsl #4
    7770:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    7774:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    7778:	01060204 	tsteq	r6, r4, lsl #4
    777c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7780:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    7784:	2e25030c 	cdpcs	3, 2, cr0, cr5, cr12, {0}
    7788:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
    778c:	06200601 	strteq	r0, [r0], -r1, lsl #12
    7790:	0a05142e 	beq	14c850 <_Min_Heap_Size+0x14c050>
    7794:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7798:	20570306 	subscs	r0, r7, r6, lsl #6
    779c:	05770705 	ldrbeq	r0, [r7, #-1797]!	; 0xfffff8fb
    77a0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    77a4:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    77a8:	75030615 	strvc	r0, [r3, #-1557]	; 0xfffff9eb
    77ac:	03070501 	movweq	r0, #29953	; 0x7501
    77b0:	2306200b 	movwcs	r2, #24587	; 0x600b
    77b4:	01062205 	tsteq	r6, r5, lsl #4
    77b8:	21060705 	tstcs	r6, r5, lsl #14
    77bc:	03061505 	movweq	r1, #25861	; 0x6505
    77c0:	07050171 	smlsdxeq	r5, r1, r1, r0
    77c4:	06200f03 	strteq	r0, [r0], -r3, lsl #30
    77c8:	06200523 	strteq	r0, [r0], -r3, lsr #10
    77cc:	06070501 	streq	r0, [r7], -r1, lsl #10
    77d0:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    77d4:	05016d03 	streq	r6, [r1, #-3331]	; 0xfffff2fd
    77d8:	20130307 	andscs	r0, r3, r7, lsl #6
    77dc:	24052306 	strcs	r2, [r5], #-774	; 0xfffffcfa
    77e0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    77e4:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    77e8:	01690306 	cmneq	r9, r6, lsl #6
    77ec:	17030705 	strne	r0, [r3, -r5, lsl #14]
    77f0:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    77f4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    77f8:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    77fc:	65030615 	strvs	r0, [r3, #-1557]	; 0xfffff9eb
    7800:	03070501 	movweq	r0, #29953	; 0x7501
    7804:	2306201b 	movwcs	r2, #24603	; 0x601b
    7808:	01061f05 	tsteq	r6, r5, lsl #30
    780c:	21060705 	tstcs	r6, r5, lsl #14
    7810:	03061505 	movweq	r1, #25861	; 0x6505
    7814:	07050161 	streq	r0, [r5, -r1, ror #2]
    7818:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    781c:	20640303 	rsbcs	r0, r4, r3, lsl #6
    7820:	2e030105 	adfcss	f0, f3, f5
    7824:	00010220 	andeq	r0, r1, r0, lsr #4
    7828:	01050101 	tsteq	r5, r1, lsl #2
    782c:	00020500 	andeq	r0, r2, r0, lsl #10
    7830:	03000000 	movweq	r0, #0
    7834:	06010885 	streq	r0, [r1], -r5, lsl #17
    7838:	06030501 	streq	r0, [r3], -r1, lsl #10
    783c:	00011521 	andeq	r1, r1, r1, lsr #10
    7840:	4a020402 	bmi	88850 <_Min_Heap_Size+0x88050>
    7844:	02040200 	andeq	r0, r4, #0, 4
    7848:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    784c:	21051402 	tstcs	r5, r2, lsl #8
    7850:	02040200 	andeq	r0, r4, #0, 4
    7854:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    7858:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    785c:	04020005 	streq	r0, [r2], #-5
    7860:	0c052002 	stceq	0, cr2, [r5], {2}
    7864:	052e2c03 	streq	r2, [lr, #-3075]!	; 0xfffff3fd
    7868:	01240603 			; <UNDEFINED> instruction: 0x01240603
    786c:	0a05143c 	beq	14c964 <_Min_Heap_Size+0x14c164>
    7870:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7874:	20500306 	subscs	r0, r0, r6, lsl #6
    7878:	05850705 	streq	r0, [r5, #1797]	; 0x705
    787c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    7880:	052f0607 	streq	r0, [pc, #-1543]!	; 7281 <_Min_Heap_Size+0x6a81>
    7884:	75030615 	strvc	r0, [r3, #-1557]	; 0xfffff9eb
    7888:	03070501 	movweq	r0, #29953	; 0x7501
    788c:	2306200b 	movwcs	r2, #24587	; 0x600b
    7890:	01062205 	tsteq	r6, r5, lsl #4
    7894:	2f060705 	svccs	0x00060705
    7898:	06200523 	strteq	r0, [r0], -r3, lsr #10
    789c:	06070501 	streq	r0, [r7], -r1, lsl #10
    78a0:	2405232f 	strcs	r2, [r5], #-815	; 0xfffffcd1
    78a4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    78a8:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    78ac:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    78b0:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    78b4:	01061f05 	tsteq	r6, r5, lsl #30
    78b8:	2f060705 	svccs	0x00060705
    78bc:	061e0523 	ldreq	r0, [lr], -r3, lsr #10
    78c0:	06070501 	streq	r0, [r7], -r1, lsl #10
    78c4:	0622052f 	strteq	r0, [r2], -pc, lsr #10
    78c8:	06070501 	streq	r0, [r7], -r1, lsl #10
    78cc:	06200521 	strteq	r0, [r0], -r1, lsr #10
    78d0:	06070501 	streq	r0, [r7], -r1, lsl #10
    78d4:	06240521 	strteq	r0, [r4], -r1, lsr #10
    78d8:	06070501 	streq	r0, [r7], -r1, lsl #10
    78dc:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    78e0:	06070501 	streq	r0, [r7], -r1, lsl #10
    78e4:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    78e8:	06070501 	streq	r0, [r7], -r1, lsl #10
    78ec:	06030521 	streq	r0, [r3], -r1, lsr #10
    78f0:	05205b03 	streq	r5, [r0, #-2819]!	; 0xfffff4fd
    78f4:	20350301 	eorscs	r0, r5, r1, lsl #6
    78f8:	01000102 	tsteq	r0, r2, lsl #2
    78fc:	00010501 	andeq	r0, r1, r1, lsl #10
    7900:	00000205 	andeq	r0, r0, r5, lsl #4
    7904:	da030000 	ble	c790c <_Min_Heap_Size+0xc710c>
    7908:	03050108 	movweq	r0, #20744	; 0x5108
    790c:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    7910:	2f010501 	svccs	0x00010501
    7914:	01000102 	tsteq	r0, r2, lsl #2
    7918:	00010501 	andeq	r0, r1, r1, lsl #10
    791c:	00000205 	andeq	r0, r0, r5, lsl #4
    7920:	e5030000 	str	r0, [r3, #-0]
    7924:	03050108 	movweq	r0, #20744	; 0x5108
    7928:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    792c:	21010501 	tstcs	r1, r1, lsl #10
    7930:	01000102 	tsteq	r0, r2, lsl #2
    7934:	0008ee01 	andeq	lr, r8, r1, lsl #28
    7938:	0b000300 	bleq	8540 <_Min_Heap_Size+0x7d40>
    793c:	02000002 	andeq	r0, r0, #2
    7940:	0d0efb01 	vstreq	d15, [lr, #-4]
    7944:	01010100 	mrseq	r0, (UNDEF: 17)
    7948:	00000001 	andeq	r0, r0, r1
    794c:	01000001 	tsteq	r0, r1
    7950:	442f2e2e 	strtmi	r2, [pc], #-3630	; 7958 <_Min_Heap_Size+0x7158>
    7954:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    7958:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    795c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    7960:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    7964:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    7968:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    796c:	2f726576 	svccs	0x00726576
    7970:	00637253 	rsbeq	r7, r3, r3, asr r2
    7974:	442f2e2e 	strtmi	r2, [pc], #-3630	; 797c <_Min_Heap_Size+0x717c>
    7978:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    797c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    7980:	5349534d 	movtpl	r5, #37709	; 0x934d
    7984:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    7988:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    798c:	2f2e2e00 	svccs	0x002e2e00
    7990:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    7994:	2f737265 	svccs	0x00737265
    7998:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    799c:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    79a0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    79a4:	2f54532f 	svccs	0x0054532f
    79a8:	334d5453 	movtcc	r5, #54355	; 0xd453
    79ac:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    79b0:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    79b4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    79b8:	3a630065 	bcc	18c7b54 <_Min_Heap_Size+0x18c7354>
    79bc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    79c0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    79c4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    79c8:	6f72705c 	svcvs	0x0072705c
    79cc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    79d0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    79d4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    79d8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    79dc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    79e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    79e4:	61652d65 	cmnvs	r5, r5, ror #26
    79e8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    79ec:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    79f0:	31323032 	teqcc	r2, r2, lsr r0
    79f4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    79f8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    79fc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7a00:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7a04:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    7a08:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7a0c:	616d5c65 	cmnvs	sp, r5, ror #24
    7a10:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    7a14:	3a630065 	bcc	18c7bb0 <_Min_Heap_Size+0x18c73b0>
    7a18:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    7a1c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    7a20:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    7a24:	6f72705c 	svcvs	0x0072705c
    7a28:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    7a2c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7a30:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7a34:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    7a38:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7a3c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7a40:	61652d65 	cmnvs	r5, r5, ror #26
    7a44:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7a48:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7a4c:	31323032 	teqcc	r2, r2, lsr r0
    7a50:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    7a54:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7a58:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7a5c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7a60:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    7a64:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7a68:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    7a6c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    7a70:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    7a74:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    7a78:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    7a7c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    7a80:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7a84:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 7a8c <_Min_Heap_Size+0x728c>
    7a88:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    7a8c:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    7a90:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    7a94:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    7a98:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    7a9c:	73000063 	movwvc	r0, #99	; 0x63
    7aa0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    7aa4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    7aa8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    7aac:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    7ab0:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    7ab4:	00010063 	andeq	r0, r1, r3, rrx
    7ab8:	726f6300 	rsbvc	r6, pc, #0, 6
    7abc:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    7ac0:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    7ac4:	63000002 	movwvs	r0, #2
    7ac8:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    7acc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    7ad0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    7ad4:	74730000 	ldrbtvc	r0, [r3], #-0
    7ad8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    7adc:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    7ae0:	00682e78 	rsbeq	r2, r8, r8, ror lr
    7ae4:	5f000003 	svcpl	0x00000003
    7ae8:	61666564 	cmnvs	r6, r4, ror #10
    7aec:	5f746c75 	svcpl	0x00746c75
    7af0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7af4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7af8:	5f000004 	svcpl	0x00000004
    7afc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    7b00:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    7b04:	00000500 	andeq	r0, r0, r0, lsl #10
    7b08:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7b0c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    7b10:	00682e78 	rsbeq	r2, r8, r8, ror lr
    7b14:	73000003 	movwvc	r0, #3
    7b18:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    7b1c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    7b20:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    7b24:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    7b28:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    7b2c:	00060068 	andeq	r0, r6, r8, rrx
    7b30:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    7b34:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7b38:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7b3c:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    7b40:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    7b44:	00070068 	andeq	r0, r7, r8, rrx
    7b48:	01050000 	mrseq	r0, (UNDEF: 5)
    7b4c:	08020500 	stmdaeq	r2, {r8, sl}
    7b50:	03080015 	movweq	r0, #32789	; 0x8015
    7b54:	0601018d 	streq	r0, [r1], -sp, lsl #3
    7b58:	06030501 	streq	r0, [r3], -r1, lsl #10
    7b5c:	02043f30 	andeq	r3, r4, #48, 30	; 0xc0
    7b60:	e2031605 	and	r1, r3, #5242880	; 0x500000
    7b64:	0305010b 	movweq	r0, #20747	; 0x510b
    7b68:	05141314 	ldreq	r1, [r4, #-788]	; 0xfffffcec
    7b6c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7b70:	052f0603 	streq	r0, [pc, #-1539]!	; 7575 <_Min_Heap_Size+0x6d75>
    7b74:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    7b78:	2f060305 	svccs	0x00060305
    7b7c:	14062305 	strne	r2, [r6], #-773	; 0xfffffcfb
    7b80:	2d3e0520 	cfldr32cs	mvfx0, [lr, #-128]!	; 0xffffff80
    7b84:	051f0e05 	ldreq	r0, [pc, #-3589]	; 6d87 <_Min_Heap_Size+0x6587>
    7b88:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
    7b8c:	2001060e 	andcs	r0, r1, lr, lsl #12
    7b90:	01050104 	tsteq	r5, r4, lsl #2
    7b94:	01749503 	cmneq	r4, r3, lsl #10
    7b98:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7b9c:	001c0104 	andseq	r0, ip, r4, lsl #2
    7ba0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7ba4:	01000702 	tsteq	r0, r2, lsl #14
    7ba8:	00010501 	andeq	r0, r1, r1, lsl #10
    7bac:	15440205 	strbne	r0, [r4, #-517]	; 0xfffffdfb
    7bb0:	a3030800 	movwge	r0, #14336	; 0x3800
    7bb4:	01060101 	tsteq	r6, r1, lsl #2
    7bb8:	4b060305 	blmi	1887d4 <_Min_Heap_Size+0x187fd4>
    7bbc:	04302f15 	ldrteq	r2, [r0], #-3861	; 0xfffff0eb
    7bc0:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7bc4:	05010bdd 	streq	r0, [r1, #-3037]	; 0xfffff423
    7bc8:	1a051403 	bne	14cbdc <_Min_Heap_Size+0x14c3dc>
    7bcc:	0b050106 	bleq	147fec <_Min_Heap_Size+0x1477ec>
    7bd0:	01042e2e 	tsteq	r4, lr, lsr #28
    7bd4:	03060305 	movweq	r0, #25349	; 0x6305
    7bd8:	040174a3 	streq	r7, [r1], #-1187	; 0xfffffb5d
    7bdc:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7be0:	05010d98 	streq	r0, [r1, #-3480]	; 0xfffff268
    7be4:	13131403 	tstne	r3, #50331648	; 0x3000000
    7be8:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    7bec:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    7bf0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    7bf4:	01062c05 	tsteq	r6, r5, lsl #24
    7bf8:	05206d05 	streq	r6, [r0, #-3333]!	; 0xfffff2fb
    7bfc:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    7c00:	2e13061e 	mrccs	6, 0, r0, cr3, cr14, {0}
    7c04:	2e52052e 	cdpcs	5, 5, cr0, cr2, cr14, {1}
    7c08:	2e211e05 	cdpcs	14, 2, cr1, cr1, cr5, {0}
    7c0c:	202d6605 	eorcs	r6, sp, r5, lsl #12
    7c10:	03061605 	movweq	r1, #26117	; 0x6605
    7c14:	03050147 	movweq	r0, #20807	; 0x5147
    7c18:	06060514 			; <UNDEFINED> instruction: 0x06060514
    7c1c:	06050501 	streq	r0, [r5], -r1, lsl #10
    7c20:	06300530 			; <UNDEFINED> instruction: 0x06300530
    7c24:	2e052001 	cdpcs	0, 0, cr2, cr5, cr1, {0}
    7c28:	044a2e20 	strbeq	r2, [sl], #-3616	; 0xfffff1e0
    7c2c:	03010501 	movweq	r0, #5377	; 0x1501
    7c30:	05017394 	streq	r7, [r1, #-916]	; 0xfffffc6c
    7c34:	04020003 	streq	r0, [r2], #-3
    7c38:	207a0301 	rsbscs	r0, sl, r1, lsl #6
    7c3c:	01040200 	mrseq	r0, R12_usr
    7c40:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7c44:	02002001 	andeq	r2, r0, #1
    7c48:	002e0104 	eoreq	r0, lr, r4, lsl #2
    7c4c:	21010402 	tstcs	r1, r2, lsl #8
    7c50:	6d050204 	sfmvs	f0, 4, [r5, #-16]
    7c54:	580da303 	stmdapl	sp, {r0, r1, r8, r9, sp, pc}
    7c58:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    7c5c:	01520306 	cmpeq	r2, r6, lsl #6
    7c60:	01062005 	tsteq	r6, r5
    7c64:	202e3005 	eorcs	r3, lr, r5
    7c68:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
    7c6c:	01050104 	tsteq	r5, r4, lsl #2
    7c70:	01739003 	cmneq	r3, r3
    7c74:	01000802 	tsteq	r0, r2, lsl #16
    7c78:	00010501 	andeq	r0, r1, r1, lsl #10
    7c7c:	15d00205 	ldrbne	r0, [r0, #517]	; 0x205
    7c80:	b9030800 	stmdblt	r3, {fp}
    7c84:	01060101 	tsteq	r6, r1, lsl #2
    7c88:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    7c8c:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    7c90:	0bd50316 	bleq	ff5488f0 <_estack+0xdf5476b8>
    7c94:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7c98:	01060605 	tsteq	r6, r5, lsl #12
    7c9c:	30060505 	andcc	r0, r6, r5, lsl #10
    7ca0:	06510513 			; <UNDEFINED> instruction: 0x06510513
    7ca4:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    7ca8:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    7cac:	05052e2b 	streq	r2, [r5, #-3627]	; 0xfffff1d5
    7cb0:	01063d06 	tsteq	r6, r6, lsl #26
    7cb4:	01050104 	tsteq	r5, r4, lsl #2
    7cb8:	0174a603 	cmneq	r4, r3, lsl #12
    7cbc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7cc0:	001c0104 	andseq	r0, ip, r4, lsl #2
    7cc4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7cc8:	01000802 	tsteq	r0, r2, lsl #16
    7ccc:	00010501 	andeq	r0, r1, r1, lsl #10
    7cd0:	00000205 	andeq	r0, r0, r5, lsl #4
    7cd4:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    7cd8:	01060101 	tsteq	r6, r1, lsl #2
    7cdc:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    7ce0:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    7ce4:	0beb0316 	bleq	ffac8944 <_estack+0xdfac770c>
    7ce8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7cec:	01060605 	tsteq	r6, r5, lsl #12
    7cf0:	30060505 	andcc	r0, r6, r5, lsl #10
    7cf4:	01065105 	tsteq	r6, r5, lsl #2
    7cf8:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    7cfc:	2b05202d 	blcs	14fdb8 <_Min_Heap_Size+0x14f5b8>
    7d00:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7d04:	0503044b 	streq	r0, [r3, #-1099]	; 0xfffffbb5
    7d08:	74ce031b 	strbvc	r0, [lr], #795	; 0x31b
    7d0c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7d10:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    7d14:	2e0bb103 	mvfcse	f3, f3
    7d18:	1b050304 	blne	148930 <_Min_Heap_Size+0x148130>
    7d1c:	0174c203 	cmneq	r4, r3, lsl #4
    7d20:	06140305 	ldreq	r0, [r4], -r5, lsl #6
    7d24:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    7d28:	014c0301 	cmpeq	ip, r1, lsl #6
    7d2c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7d30:	001c0104 	andseq	r0, ip, r4, lsl #2
    7d34:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7d38:	01000702 	tsteq	r0, r2, lsl #14
    7d3c:	00010501 	andeq	r0, r1, r1, lsl #10
    7d40:	00000205 	andeq	r0, r0, r5, lsl #4
    7d44:	d6030000 	strle	r0, [r3], -r0
    7d48:	03050101 	movweq	r0, #20737	; 0x5101
    7d4c:	05020414 	streq	r0, [r2, #-1044]	; 0xfffffbec
    7d50:	0db90322 	ldceq	3, cr0, [r9, #136]!	; 0x88
    7d54:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7d58:	1b050304 	blne	148970 <_Min_Heap_Size+0x148170>
    7d5c:	0172f903 	cmneq	r2, r3, lsl #18	; <UNPREDICTABLE>
    7d60:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7d64:	0d870302 	stceq	3, cr0, [r7, #8]
    7d68:	0620052e 	strteq	r0, [r0], -lr, lsr #10
    7d6c:	2e280513 	mcrcs	5, 1, r0, cr8, cr3, {0}
    7d70:	052d1105 	streq	r1, [sp, #-261]!	; 0xfffffefb
    7d74:	03052e0f 	movweq	r2, #24079	; 0x5e0f
    7d78:	03042306 	movweq	r2, #17158	; 0x4306
    7d7c:	f4031b05 			; <UNDEFINED> instruction: 0xf4031b05
    7d80:	03050172 	movweq	r0, #20850	; 0x5172
    7d84:	03020414 	movweq	r0, #9236	; 0x2414
    7d88:	052e0d8c 	streq	r0, [lr, #-3468]!	; 0xfffff274
    7d8c:	08051405 	stmdaeq	r5, {r0, r2, sl, ip}
    7d90:	0006021e 	andeq	r0, r6, lr, lsl r2
    7d94:	01050101 	tsteq	r5, r1, lsl #2
    7d98:	00020500 	andeq	r0, r2, r0, lsl #10
    7d9c:	03080016 	movweq	r0, #32790	; 0x8016
    7da0:	050101e3 	streq	r0, [r1, #-483]	; 0xfffffe1d
    7da4:	02041304 	andeq	r1, r4, #4, 6	; 0x10000000
    7da8:	81031a05 	tsthi	r3, r5, lsl #20
    7dac:	0305010e 	movweq	r0, #20750	; 0x510e
    7db0:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    7db4:	20060501 	andcs	r0, r6, r1, lsl #10
    7db8:	41060305 	tstmi	r6, r5, lsl #6
    7dbc:	01061205 	tsteq	r6, r5, lsl #4
    7dc0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    7dc4:	a8031605 	stmdage	r3, {r0, r2, r9, sl, ip}
    7dc8:	0305017e 	movweq	r0, #20862	; 0x517e
    7dcc:	18050514 	stmdane	r5, {r2, r4, r8, sl}
    7dd0:	01062e05 	tsteq	r6, r5, lsl #28
    7dd4:	0603054a 	streq	r0, [r3], -sl, asr #10
    7dd8:	0101d103 	tsteq	r1, r3, lsl #2
    7ddc:	01061205 	tsteq	r6, r5, lsl #4
    7de0:	06030520 	streq	r0, [r3], -r0, lsr #10
    7de4:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    7de8:	06030501 	streq	r0, [r3], -r1, lsl #10
    7dec:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    7df0:	030c0501 	movweq	r0, #50433	; 0xc501
    7df4:	04202077 	strteq	r2, [r0], #-119	; 0xffffff89
    7df8:	03010501 	movweq	r0, #5377	; 0x1501
    7dfc:	020171fc 	andeq	r7, r1, #252, 2	; 0x3f
    7e00:	01010003 	tsteq	r1, r3
    7e04:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7e08:	00000002 	andeq	r0, r0, r2
    7e0c:	02800300 	addeq	r0, r0, #0, 6
    7e10:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7e14:	1b050304 	blne	148a2c <_Min_Heap_Size+0x14822c>
    7e18:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    7e1c:	01041403 	tsteq	r4, r3, lsl #8
    7e20:	052e6c03 	streq	r6, [lr, #-3075]!	; 0xfffff3fd
    7e24:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7e28:	055b0603 	ldrbeq	r0, [fp, #-1539]	; 0xfffff9fd
    7e2c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7e30:	04023d01 	streq	r3, [r2], #-3329	; 0xfffff2ff
    7e34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7e38:	02050001 	andeq	r0, r5, #1
    7e3c:	00000000 	andeq	r0, r0, r0
    7e40:	01029703 	tsteq	r2, r3, lsl #14
    7e44:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7e48:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7e4c:	03052e0d 	movweq	r2, #24077	; 0x5e0d
    7e50:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    7e54:	03050106 	movweq	r0, #20742	; 0x5106
    7e58:	03044d06 	movweq	r4, #19718	; 0x4d06
    7e5c:	6d031b05 	vstrvs	d1, [r3, #-20]	; 0xffffffec
    7e60:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7e64:	12030104 	andne	r0, r3, #4, 2
    7e68:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
    7e6c:	0161031b 	cmneq	r1, fp, lsl r3
    7e70:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7e74:	06010501 	streq	r0, [r1], -r1, lsl #10
    7e78:	022e1e03 	eoreq	r1, lr, #3, 28	; 0x30
    7e7c:	01010003 	tsteq	r1, r3
    7e80:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7e84:	00000002 	andeq	r0, r0, r2
    7e88:	02aa0300 	adceq	r0, sl, #0, 6
    7e8c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7e90:	3d300603 	ldccc	6, cr0, [r0, #-12]!
    7e94:	0616053f 			; <UNDEFINED> instruction: 0x0616053f
    7e98:	200c0501 	andcs	r0, ip, r1, lsl #10
    7e9c:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    7ea0:	01061005 	tsteq	r6, r5
    7ea4:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    7ea8:	3d310605 	ldccc	6, cr0, [r1, #-20]!	; 0xffffffec
    7eac:	01040200 	mrseq	r0, R12_usr
    7eb0:	02003c06 	andeq	r3, r0, #1536	; 0x600
    7eb4:	062e0204 	strteq	r0, [lr], -r4, lsl #4
    7eb8:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
    7ebc:	055a3d3d 	ldrbeq	r3, [sl, #-3389]	; 0xfffff2c3
    7ec0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7ec4:	0505200f 	streq	r2, [r5, #-15]
    7ec8:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
    7ecc:	05210106 	streq	r0, [r1, #-262]!	; 0xfffffefa
    7ed0:	5405203e 	strpl	r2, [r5], #-62	; 0xffffffc2
    7ed4:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7ed8:	051f5405 	ldreq	r5, [pc, #-1029]	; 7adb <_Min_Heap_Size+0x72db>
    7edc:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7ee0:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7ee4:	051f5405 	ldreq	r5, [pc, #-1029]	; 7ae7 <_Min_Heap_Size+0x72e7>
    7ee8:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7eec:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7ef0:	051f5405 	ldreq	r5, [pc, #-1029]	; 7af3 <_Min_Heap_Size+0x72f3>
    7ef4:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7ef8:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7efc:	051f5405 	ldreq	r5, [pc, #-1029]	; 7aff <_Min_Heap_Size+0x72ff>
    7f00:	2079030f 	rsbscs	r0, r9, pc, lsl #6
    7f04:	0f030105 	svceq	0x00030105
    7f08:	0003052e 	andeq	r0, r3, lr, lsr #10
    7f0c:	03010402 	movweq	r0, #5122	; 0x1402
    7f10:	0200205e 	andeq	r2, r0, #94	; 0x5e
    7f14:	003c0104 	eorseq	r0, ip, r4, lsl #2
    7f18:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    7f1c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7f20:	006e0104 	rsbeq	r0, lr, r4, lsl #2
    7f24:	67030402 	strvs	r0, [r3, -r2, lsl #8]
    7f28:	01040200 	mrseq	r0, R12_usr
    7f2c:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7f30:	02006701 	andeq	r6, r0, #262144	; 0x40000
    7f34:	00670104 	rsbeq	r0, r7, r4, lsl #2
    7f38:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    7f3c:	01040200 	mrseq	r0, R12_usr
    7f40:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7f44:	03066701 	movweq	r6, #26369	; 0x6701
    7f48:	0f05660f 	svceq	0x0005660f
    7f4c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7f50:	0f054b06 	svceq	0x00054b06
    7f54:	01050106 	tsteq	r5, r6, lsl #2
    7f58:	00050230 	andeq	r0, r5, r0, lsr r2
    7f5c:	01050101 	tsteq	r5, r1, lsl #2
    7f60:	00020500 	andeq	r0, r2, r0, lsl #10
    7f64:	03000000 	movweq	r0, #0
    7f68:	050102d6 	streq	r0, [r1, #-726]	; 0xfffffd2a
    7f6c:	05211303 	streq	r1, [r1, #-771]!	; 0xfffffcfd
    7f70:	02210601 	eoreq	r0, r1, #1048576	; 0x100000
    7f74:	01010001 	tsteq	r1, r1
    7f78:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7f7c:	00000002 	andeq	r0, r0, r2
    7f80:	02e00300 	rsceq	r0, r0, #0, 6
    7f84:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7f88:	1a050204 	bne	1487a0 <_Min_Heap_Size+0x147fa0>
    7f8c:	010aa503 	tsteq	sl, r3, lsl #10
    7f90:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7f94:	0401061a 	streq	r0, [r1], #-1562	; 0xfffff9e6
    7f98:	03010501 	movweq	r0, #5377	; 0x1501
    7f9c:	022e75da 	eoreq	r7, lr, #914358272	; 0x36800000
    7fa0:	01010006 	tsteq	r1, r6
    7fa4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7fa8:	00000002 	andeq	r0, r0, r2
    7fac:	02fb0300 	rscseq	r0, fp, #0, 6
    7fb0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7fb4:	065a0603 	ldrbeq	r0, [sl], -r3, lsl #12
    7fb8:	04300620 	ldrteq	r0, [r0], #-1568	; 0xfffff9e0
    7fbc:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7fc0:	05010bac 	streq	r0, [r1, #-2988]	; 0xfffff454
    7fc4:	06051503 	streq	r1, [r5], -r3, lsl #10
    7fc8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7fcc:	1f053006 	svcne	0x00053006
    7fd0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7fd4:	05204a40 	streq	r4, [r0, #-2624]!	; 0xfffff5c0
    7fd8:	2f030616 	svccs	0x00030616
    7fdc:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7fe0:	01060c05 	tsteq	r6, r5, lsl #24
    7fe4:	2f060305 	svccs	0x00060305
    7fe8:	1f051413 	svcne	0x00051413
    7fec:	17050106 	strne	r0, [r5, -r6, lsl #2]
    7ff0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7ff4:	062c053d 			; <UNDEFINED> instruction: 0x062c053d
    7ff8:	206d0501 	rsbcs	r0, sp, r1, lsl #10
    7ffc:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    8000:	01062105 	tsteq	r6, r5, lsl #2
    8004:	2e2e3505 	cfsh64cs	mvdx3, mvdx14, #5
    8008:	2e15052e 	cfmul64cs	mvdx0, mvdx5, mvdx14
    800c:	21060305 	tstcs	r6, r5, lsl #6
    8010:	01063505 	tsteq	r6, r5, lsl #10
    8014:	2e15052e 	cfmul64cs	mvdx0, mvdx5, mvdx14
    8018:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    801c:	74970301 	ldrvc	r0, [r7], #769	; 0x301
    8020:	00030501 	andeq	r0, r3, r1, lsl #10
    8024:	1d010402 	cfstrsne	mvf0, [r1, #-8]
    8028:	01040200 	mrseq	r0, R12_usr
    802c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    8030:	02002001 	andeq	r2, r0, #1
    8034:	042e0104 	strteq	r0, [lr], #-260	; 0xfffffefc
    8038:	06050502 	streq	r0, [r5], -r2, lsl #10
    803c:	200bb703 	andcs	fp, fp, r3, lsl #14
    8040:	01063205 	tsteq	r6, r5, lsl #4
    8044:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    8048:	052e2e40 	streq	r2, [lr, #-3648]!	; 0xfffff1c0
    804c:	0132036d 	teqeq	r2, sp, ror #6
    8050:	00060220 	andeq	r0, r6, r0, lsr #4
    8054:	01050101 	tsteq	r5, r1, lsl #2
    8058:	00020500 	andeq	r0, r2, r0, lsl #10
    805c:	03000000 	movweq	r0, #0
    8060:	0601038a 	streq	r0, [r1], -sl, lsl #7
    8064:	06030501 	streq	r0, [r3], -r1, lsl #10
    8068:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    806c:	d0031605 	andle	r1, r3, r5, lsl #12
    8070:	0305010a 	movweq	r0, #20746	; 0x510a
    8074:	06060514 			; <UNDEFINED> instruction: 0x06060514
    8078:	06050501 	streq	r0, [r5], -r1, lsl #10
    807c:	06510530 			; <UNDEFINED> instruction: 0x06510530
    8080:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    8084:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    8088:	044a2e2b 	strbeq	r2, [sl], #-3627	; 0xfffff1d5
    808c:	03010501 	movweq	r0, #5377	; 0x1501
    8090:	050175ad 	streq	r7, [r1, #-1453]	; 0xfffffa53
    8094:	04020003 	streq	r0, [r2], #-3
    8098:	02001c01 	andeq	r1, r0, #256	; 0x100
    809c:	023c0104 	eorseq	r0, ip, #4, 2
    80a0:	01010008 	tsteq	r1, r8
    80a4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    80a8:	00000002 	andeq	r0, r0, r2
    80ac:	039c0300 	orrseq	r0, ip, #0, 6
    80b0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    80b4:	31220603 			; <UNDEFINED> instruction: 0x31220603
    80b8:	1a050204 	bne	1488d0 <_Min_Heap_Size+0x1480d0>
    80bc:	010aab03 	tsteq	sl, r3, lsl #22
    80c0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    80c4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    80c8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    80cc:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    80d0:	5b052023 	blpl	150164 <_Min_Heap_Size+0x14f964>
    80d4:	2e67054a 	cdpcs	5, 6, cr0, cr7, cr10, {2}
    80d8:	2e2e0c05 	cdpcs	12, 2, cr0, cr14, cr5, {0}
    80dc:	01050104 	tsteq	r5, r4, lsl #2
    80e0:	0175d203 	cmneq	r5, r3, lsl #4
    80e4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    80e8:	001c0104 	andseq	r0, ip, r4, lsl #2
    80ec:	3c010402 	cfstrscc	mvf0, [r1], {2}
    80f0:	0b050204 	bleq	148908 <_Min_Heap_Size+0x148108>
    80f4:	3c0ab603 	stccc	6, cr11, [sl], {3}
    80f8:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    80fc:	75cd030a 	strbvc	r0, [sp, #778]	; 0x30a
    8100:	00060201 	andeq	r0, r6, r1, lsl #4
    8104:	01050101 	tsteq	r5, r1, lsl #2
    8108:	00020500 	andeq	r0, r2, r0, lsl #10
    810c:	03000000 	movweq	r0, #0
    8110:	060103ac 	streq	r0, [r1], -ip, lsr #7
    8114:	06030501 	streq	r0, [r3], -r1, lsl #10
    8118:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    811c:	bd031605 	stclt	6, cr1, [r3, #-20]	; 0xffffffec
    8120:	0305010a 	movweq	r0, #20746	; 0x510a
    8124:	06060514 			; <UNDEFINED> instruction: 0x06060514
    8128:	06050501 	streq	r0, [r5], -r1, lsl #10
    812c:	06510530 			; <UNDEFINED> instruction: 0x06510530
    8130:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    8134:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    8138:	044a2e2b 	strbeq	r2, [sl], #-3627	; 0xfffff1d5
    813c:	03010501 	movweq	r0, #5377	; 0x1501
    8140:	050175c0 	streq	r7, [r1, #-1472]	; 0xfffffa40
    8144:	04020003 	streq	r0, [r2], #-3
    8148:	02001c01 	andeq	r1, r0, #256	; 0x100
    814c:	023c0104 	eorseq	r0, ip, #4, 2
    8150:	01010008 	tsteq	r1, r8
    8154:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8158:	00000002 	andeq	r0, r0, r2
    815c:	03bd0300 			; <UNDEFINED> instruction: 0x03bd0300
    8160:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8164:	31220603 			; <UNDEFINED> instruction: 0x31220603
    8168:	1a050204 	bne	148980 <_Min_Heap_Size+0x148180>
    816c:	010abd03 	tsteq	sl, r3, lsl #26
    8170:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8174:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8178:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    817c:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    8180:	5b052023 	blpl	150214 <_Min_Heap_Size+0x14fa14>
    8184:	2e67054a 	cdpcs	5, 6, cr0, cr7, cr10, {2}
    8188:	2e2e0c05 	cdpcs	12, 2, cr0, cr14, cr5, {0}
    818c:	01050104 	tsteq	r5, r4, lsl #2
    8190:	0175c003 	cmneq	r5, r3
    8194:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    8198:	001c0104 	andseq	r0, ip, r4, lsl #2
    819c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    81a0:	0b050204 	bleq	1489b8 <_Min_Heap_Size+0x1481b8>
    81a4:	3c0ac803 	stccc	8, cr12, [sl], {3}
    81a8:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    81ac:	75bb030a 	ldrvc	r0, [fp, #778]!	; 0x30a
    81b0:	00060201 	andeq	r0, r6, r1, lsl #4
    81b4:	01050101 	tsteq	r5, r1, lsl #2
    81b8:	00020500 	andeq	r0, r2, r0, lsl #10
    81bc:	03000000 	movweq	r0, #0
    81c0:	060103ce 	streq	r0, [r1], -lr, asr #7
    81c4:	06030501 	streq	r0, [r3], -r1, lsl #10
    81c8:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    81cc:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    81d0:	06060521 	streq	r0, [r6], -r1, lsr #10
    81d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    81d8:	06130534 			; <UNDEFINED> instruction: 0x06130534
    81dc:	68010501 	stmdavs	r1, {r0, r8, sl}
    81e0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    81e4:	77030204 	strvc	r0, [r3, -r4, lsl #4]
    81e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    81ec:	05053c02 	streq	r3, [r5, #-3074]	; 0xfffff3fe
    81f0:	13053f06 	movwne	r3, #24326	; 0x5f06
    81f4:	0a020106 	beq	88614 <_Min_Heap_Size+0x87e14>
    81f8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    81fc:	02050001 	andeq	r0, r5, #1
    8200:	00000000 	andeq	r0, r0, r0
    8204:	0103e903 	tsteq	r3, r3, lsl #18
    8208:	00010216 	andeq	r0, r1, r6, lsl r2
    820c:	01050101 	tsteq	r5, r1, lsl #2
    8210:	00020500 	andeq	r0, r2, r0, lsl #10
    8214:	03000000 	movweq	r0, #0
    8218:	050103e0 	streq	r0, [r1, #-992]	; 0xfffffc20
    821c:	01052103 	tsteq	r5, r3, lsl #2
    8220:	01022f06 	tsteq	r2, r6, lsl #30
    8224:	be010100 	adflts	f0, f1, f0
    8228:	03000005 	movweq	r0, #5
    822c:	00023500 	andeq	r3, r2, r0, lsl #10
    8230:	fb010200 	blx	48a3a <_Min_Heap_Size+0x4823a>
    8234:	01000d0e 	tsteq	r0, lr, lsl #26
    8238:	00010101 	andeq	r0, r1, r1, lsl #2
    823c:	00010000 	andeq	r0, r1, r0
    8240:	2e2e0100 	sufcse	f0, f6, f0
    8244:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8248:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    824c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    8250:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    8254:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    8258:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 8260 <_Min_Heap_Size+0x7a60>
    825c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8260:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    8264:	3a630063 	bcc	18c83f8 <_Min_Heap_Size+0x18c7bf8>
    8268:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    826c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8270:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8274:	6f72705c 	svcvs	0x0072705c
    8278:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    827c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8280:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8284:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8288:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    828c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8290:	61652d65 	cmnvs	r5, r5, ror #26
    8294:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8298:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    829c:	31323032 	teqcc	r2, r2, lsr r0
    82a0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    82a4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    82a8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    82ac:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    82b0:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    82b4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    82b8:	616d5c65 	cmnvs	sp, r5, ror #24
    82bc:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    82c0:	3a630065 	bcc	18c845c <_Min_Heap_Size+0x18c7c5c>
    82c4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    82c8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    82cc:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    82d0:	6f72705c 	svcvs	0x0072705c
    82d4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    82d8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    82dc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    82e0:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    82e4:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    82e8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    82ec:	61652d65 	cmnvs	r5, r5, ror #26
    82f0:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    82f4:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    82f8:	31323032 	teqcc	r2, r2, lsr r0
    82fc:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8300:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8304:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8308:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    830c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8310:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8314:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    8318:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    831c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8320:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    8324:	534d432f 	movtpl	r4, #54063	; 0xd32f
    8328:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    832c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8330:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    8334:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    8338:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    833c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    8340:	2f534953 	svccs	0x00534953
    8344:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    8348:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    834c:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    8350:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    8354:	2f787834 	svccs	0x00787834
    8358:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    835c:	00656475 	rsbeq	r6, r5, r5, ror r4
    8360:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8368 <_Min_Heap_Size+0x7b68>
    8364:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8368:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    836c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    8370:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    8374:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    8378:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    837c:	2f726576 	svccs	0x00726576
    8380:	00636e49 	rsbeq	r6, r3, r9, asr #28
    8384:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    8388:	2f65726f 	svccs	0x0065726f
    838c:	00636e49 	rsbeq	r6, r3, r9, asr #28
    8390:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    8394:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8398:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    839c:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    83a0:	00000100 	andeq	r0, r0, r0, lsl #2
    83a4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    83a8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    83ac:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    83b0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    83b4:	00000200 	andeq	r0, r0, r0, lsl #4
    83b8:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    83bc:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    83c0:	00030068 	andeq	r0, r3, r8, rrx
    83c4:	726f6300 	rsbvc	r6, pc, #0, 6
    83c8:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    83cc:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    83d0:	73000004 	movwvc	r0, #4
    83d4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    83d8:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    83dc:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    83e0:	00000500 	andeq	r0, r0, r0, lsl #10
    83e4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    83e8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    83ec:	00682e78 	rsbeq	r2, r8, r8, ror lr
    83f0:	73000005 	movwvc	r0, #5
    83f4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    83f8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    83fc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    8400:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    8404:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8408:	74730000 	ldrbtvc	r0, [r3], #-0
    840c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8410:	5f787834 	svcpl	0x00787834
    8414:	2e6c6168 	powcsez	f6, f4, #0.0
    8418:	00060068 	andeq	r0, r6, r8, rrx
    841c:	73797300 	cmnvc	r9, #0, 6
    8420:	5f6d6574 	svcpl	0x006d6574
    8424:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8428:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    842c:	00682e78 	rsbeq	r2, r8, r8, ror lr
    8430:	73000005 	movwvc	r0, #5
    8434:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8438:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    843c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    8440:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    8444:	00682e66 	rsbeq	r2, r8, r6, ror #28
    8448:	73000007 	movwvc	r0, #7
    844c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8450:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8454:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    8458:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    845c:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    8460:	00060068 	andeq	r0, r6, r8, rrx
    8464:	01050000 	mrseq	r0, (UNDEF: 5)
    8468:	00020500 	andeq	r0, r2, r0, lsl #10
    846c:	03000000 	movweq	r0, #0
    8470:	160101db 			; <UNDEFINED> instruction: 0x160101db
    8474:	01000102 	tsteq	r0, r2, lsl #2
    8478:	00010501 	andeq	r0, r1, r1, lsl #10
    847c:	00000205 	andeq	r0, r0, r5, lsl #4
    8480:	e6030000 	str	r0, [r3], -r0
    8484:	02160101 	andseq	r0, r6, #1073741824	; 0x40000000
    8488:	01010001 	tsteq	r1, r1
    848c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8490:	00000002 	andeq	r0, r0, r2
    8494:	01be0300 			; <UNDEFINED> instruction: 0x01be0300
    8498:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    849c:	222f303d 	eorcs	r3, pc, #61	; 0x3d
    84a0:	222f222f 	eorcs	r2, pc, #-268435454	; 0xf0000002
    84a4:	0531232f 	ldreq	r2, [r1, #-815]!	; 0xfffffcd1
    84a8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    84ac:	0101000a 	tsteq	r1, sl
    84b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    84b4:	00162802 	andseq	r2, r6, r2, lsl #16
    84b8:	01fd0308 	mvnseq	r0, r8, lsl #6
    84bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    84c0:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    84c4:	2e010633 	mcrcs	6, 0, r0, cr1, cr3, {1}
    84c8:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    84cc:	03056606 	movweq	r6, #22022	; 0x5606
    84d0:	06052606 	streq	r2, [r5], -r6, lsl #12
    84d4:	0c050106 	stfeqs	f0, [r5], {6}
    84d8:	06050535 			; <UNDEFINED> instruction: 0x06050535
    84dc:	10056729 	andne	r6, r5, r9, lsr #14
    84e0:	03050106 	movweq	r0, #20742	; 0x5106
    84e4:	0a053606 	beq	155d04 <_Min_Heap_Size+0x155504>
    84e8:	0c050106 	stfeqs	f0, [r5], {6}
    84ec:	052e7103 	streq	r7, [lr, #-259]!	; 0xfffffefd
    84f0:	20100301 	andscs	r0, r0, r1, lsl #6
    84f4:	00070220 	andeq	r0, r7, r0, lsr #4
    84f8:	01050101 	tsteq	r5, r1, lsl #2
    84fc:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
    8500:	03080016 	movweq	r0, #32790	; 0x8016
    8504:	0501019d 	streq	r0, [r1, #-413]	; 0xfffffe63
    8508:	4e5c2303 	cdpmi	3, 5, cr2, cr12, cr3, {0}
    850c:	313f3f4e 	teqcc	pc, lr, asr #30
    8510:	13060105 	movwne	r0, #24837	; 0x6105
    8514:	01000402 	tsteq	r0, r2, lsl #8
    8518:	00010501 	andeq	r0, r1, r1, lsl #10
    851c:	16a80205 	strtne	r0, [r8], r5, lsl #4
    8520:	b8030800 	stmdalt	r3, {fp}
    8524:	03050102 	movweq	r0, #20738	; 0x5102
    8528:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    852c:	67010501 	strvs	r0, [r1, -r1, lsl #10]
    8530:	01000602 	tsteq	r0, r2, lsl #12
    8534:	00010501 	andeq	r0, r1, r1, lsl #10
    8538:	16c00205 	strbne	r0, [r0], r5, lsl #4
    853c:	c3030800 	movwgt	r0, #14336	; 0x3800
    8540:	03050102 	movweq	r0, #20738	; 0x5102
    8544:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    8548:	2f010501 	svccs	0x00010501
    854c:	01000402 	tsteq	r0, r2, lsl #8
    8550:	00010501 	andeq	r0, r1, r1, lsl #10
    8554:	00000205 	andeq	r0, r0, r5, lsl #4
    8558:	cc030000 	stcgt	0, cr0, [r3], {-0}
    855c:	03050102 	movweq	r0, #20738	; 0x5102
    8560:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8564:	00060213 	andeq	r0, r6, r3, lsl r2
    8568:	01050101 	tsteq	r5, r1, lsl #2
    856c:	00020500 	andeq	r0, r2, r0, lsl #10
    8570:	03000000 	movweq	r0, #0
    8574:	060102d5 			; <UNDEFINED> instruction: 0x060102d5
    8578:	06030501 	streq	r0, [r3], -r1, lsl #10
    857c:	0014132f 	andseq	r1, r4, pc, lsr #6
    8580:	06010402 	streq	r0, [r1], -r2, lsl #8
    8584:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    8588:	30062e02 	andcc	r2, r6, r2, lsl #28
    858c:	01061205 	tsteq	r6, r5, lsl #4
    8590:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    8594:	03052915 	movweq	r2, #22805	; 0x5915
    8598:	20170306 	andscs	r0, r7, r6, lsl #6
    859c:	13060105 	movwne	r0, #24837	; 0x6105
    85a0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    85a4:	6b030304 	blvs	c91bc <_Min_Heap_Size+0xc89bc>
    85a8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    85ac:	05053c03 	streq	r3, [r5, #-3075]	; 0xfffff3fd
    85b0:	05154106 	ldreq	r4, [r5, #-262]	; 0xfffffefa
    85b4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    85b8:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    85bc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    85c0:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    85c4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    85c8:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    85cc:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    85d0:	01010009 	tsteq	r1, r9
    85d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    85d8:	00000002 	andeq	r0, r0, r2
    85dc:	02f60300 	rscseq	r0, r6, #0, 6
    85e0:	13030501 	movwne	r0, #13569	; 0x3501
    85e4:	13060105 	movwne	r0, #24837	; 0x6105
    85e8:	01000602 	tsteq	r0, r2, lsl #12
    85ec:	00010501 	andeq	r0, r1, r1, lsl #10
    85f0:	16cc0205 	strbne	r0, [ip], r5, lsl #4
    85f4:	86030800 	strhi	r0, [r3], -r0, lsl #16
    85f8:	01060103 	tsteq	r6, r3, lsl #2
    85fc:	2f060305 	svccs	0x00060305
    8600:	01061805 	tsteq	r6, r5, lsl #16
    8604:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8608:	06051521 	streq	r1, [r5], -r1, lsr #10
    860c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8610:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    8614:	0a050106 	beq	148a34 <_Min_Heap_Size+0x148234>
    8618:	0003052e 	andeq	r0, r3, lr, lsr #10
    861c:	06010402 	streq	r0, [r1], -r2, lsl #8
    8620:	00080525 	andeq	r0, r8, r5, lsr #10
    8624:	10010402 	andne	r0, r1, r2, lsl #8
    8628:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    862c:	01060104 	tsteq	r6, r4, lsl #2
    8630:	02001805 	andeq	r1, r0, #327680	; 0x50000
    8634:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    8638:	04020008 	streq	r0, [r2], #-8
    863c:	01052001 	tsteq	r5, r1
    8640:	03022031 	movweq	r2, #8241	; 0x2031
    8644:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8648:	02050001 	andeq	r0, r5, #1
    864c:	00000000 	andeq	r0, r0, r0
    8650:	0103a003 	tsteq	r3, r3
    8654:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8658:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    865c:	01026701 	tsteq	r2, r1, lsl #14
    8660:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8664:	02050001 	andeq	r0, r5, #1
    8668:	00000000 	andeq	r0, r0, r0
    866c:	0103b003 	tsteq	r3, r3
    8670:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8674:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    8678:	01026701 	tsteq	r2, r1, lsl #14
    867c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8680:	02050001 	andeq	r0, r5, #1
    8684:	00000000 	andeq	r0, r0, r0
    8688:	0103ba03 	tsteq	r3, r3, lsl #20
    868c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8690:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8694:	01010004 	tsteq	r1, r4
    8698:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    869c:	00000002 	andeq	r0, r0, r2
    86a0:	03c30300 	biceq	r0, r3, #0, 6
    86a4:	13030501 	movwne	r0, #13569	; 0x3501
    86a8:	01061105 	tsteq	r6, r5, lsl #2
    86ac:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    86b0:	01010004 	tsteq	r1, r4
    86b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    86b8:	00000002 	andeq	r0, r0, r2
    86bc:	03cc0300 	biceq	r0, ip, #0, 6
    86c0:	13030501 	movwne	r0, #13569	; 0x3501
    86c4:	01061105 	tsteq	r6, r5, lsl #2
    86c8:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    86cc:	01010006 	tsteq	r1, r6
    86d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    86d4:	00000002 	andeq	r0, r0, r2
    86d8:	03d50300 	bicseq	r0, r5, #0, 6
    86dc:	13030501 	movwne	r0, #13569	; 0x3501
    86e0:	59060105 	stmdbpl	r6, {r0, r2, r8}
    86e4:	01000302 	tsteq	r0, r2, lsl #6
    86e8:	00010501 	andeq	r0, r1, r1, lsl #10
    86ec:	00000205 	andeq	r0, r0, r5, lsl #4
    86f0:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    86f4:	03050103 	movweq	r0, #20739	; 0x5103
    86f8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    86fc:	00030259 	andeq	r0, r3, r9, asr r2
    8700:	01050101 	tsteq	r5, r1, lsl #2
    8704:	00020500 	andeq	r0, r2, r0, lsl #10
    8708:	03000000 	movweq	r0, #0
    870c:	050103e7 	streq	r0, [r1, #-999]	; 0xfffffc19
    8710:	01051303 	tsteq	r5, r3, lsl #6
    8714:	03025906 	movweq	r5, #10502	; 0x2906
    8718:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    871c:	02050001 	andeq	r0, r5, #1
    8720:	00000000 	andeq	r0, r0, r0
    8724:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
    8728:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    872c:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    8730:	01010003 	tsteq	r1, r3
    8734:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8738:	00000002 	andeq	r0, r0, r2
    873c:	03f90300 	mvnseq	r0, #0, 6
    8740:	13030501 	movwne	r0, #13569	; 0x3501
    8744:	59060105 	stmdbpl	r6, {r0, r2, r8}
    8748:	01000302 	tsteq	r0, r2, lsl #6
    874c:	00010501 	andeq	r0, r1, r1, lsl #10
    8750:	00000205 	andeq	r0, r0, r5, lsl #4
    8754:	82030000 	andhi	r0, r3, #0
    8758:	03050104 	movweq	r0, #20740	; 0x5104
    875c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8760:	00030259 	andeq	r0, r3, r9, asr r2
    8764:	01050101 	tsteq	r5, r1, lsl #2
    8768:	00020500 	andeq	r0, r2, r0, lsl #10
    876c:	03000000 	movweq	r0, #0
    8770:	0501048d 	streq	r0, [r1, #-1165]	; 0xfffffb73
    8774:	25051303 	strcs	r1, [r5, #-771]	; 0xfffffcfd
    8778:	01050106 	tsteq	r5, r6, lsl #2
    877c:	0004024b 	andeq	r0, r4, fp, asr #4
    8780:	01050101 	tsteq	r5, r1, lsl #2
    8784:	00020500 	andeq	r0, r2, r0, lsl #10
    8788:	03000000 	movweq	r0, #0
    878c:	05010498 	streq	r0, [r1, #-1176]	; 0xfffffb68
    8790:	25051303 	strcs	r1, [r5, #-771]	; 0xfffffcfd
    8794:	01050106 	tsteq	r5, r6, lsl #2
    8798:	0004024b 	andeq	r0, r4, fp, asr #4
    879c:	01050101 	tsteq	r5, r1, lsl #2
    87a0:	00020500 	andeq	r0, r2, r0, lsl #10
    87a4:	03000000 	movweq	r0, #0
    87a8:	050104a1 	streq	r0, [r1, #-1185]	; 0xfffffb5f
    87ac:	01051303 	tsteq	r5, r3, lsl #6
    87b0:	06021306 	streq	r1, [r2], -r6, lsl #6
    87b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    87b8:	02050001 	andeq	r0, r5, #1
    87bc:	00000000 	andeq	r0, r0, r0
    87c0:	0104aa03 	tsteq	r4, r3, lsl #20
    87c4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    87c8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    87cc:	01010006 	tsteq	r1, r6
    87d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    87d4:	00000002 	andeq	r0, r0, r2
    87d8:	04b30300 	ldrteq	r0, [r3], #768	; 0x300
    87dc:	13030501 	movwne	r0, #13569	; 0x3501
    87e0:	13060105 	movwne	r0, #24837	; 0x6105
    87e4:	01000602 	tsteq	r0, r2, lsl #12
    87e8:	00026b01 	andeq	r6, r2, r1, lsl #22
    87ec:	85000300 	strhi	r0, [r0, #-768]	; 0xfffffd00
    87f0:	02000001 	andeq	r0, r0, #1
    87f4:	0d0efb01 	vstreq	d15, [lr, #-4]
    87f8:	01010100 	mrseq	r0, (UNDEF: 17)
    87fc:	00000001 	andeq	r0, r0, r1
    8800:	01000001 	tsteq	r0, r1
    8804:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    8808:	2f65726f 	svccs	0x0065726f
    880c:	00637253 	rsbeq	r7, r3, r3, asr r2
    8810:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8814:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8818:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    881c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8820:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8824:	615c6d61 	cmpvs	ip, r1, ror #26
    8828:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    882c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8830:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8834:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8838:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    883c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8840:	2e30312d 	rsfcssp	f3, f0, #5.0
    8844:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8848:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    884c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8850:	6f6e2d6d 	svcvs	0x006e2d6d
    8854:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8858:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    885c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8860:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8864:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    8868:	00656e69 	rsbeq	r6, r5, r9, ror #28
    886c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8870:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8874:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8878:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    887c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8880:	615c6d61 	cmpvs	ip, r1, ror #26
    8884:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8888:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    888c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8890:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8894:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8898:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    889c:	2e30312d 	rsfcssp	f3, f0, #5.0
    88a0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    88a4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    88a8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    88ac:	6f6e2d6d 	svcvs	0x006e2d6d
    88b0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    88b4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    88b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    88bc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    88c0:	00737973 	rsbseq	r7, r3, r3, ror r9
    88c4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 88cc <_Min_Heap_Size+0x80cc>
    88c8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    88cc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    88d0:	5349534d 	movtpl	r5, #37709	; 0x934d
    88d4:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    88d8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    88dc:	2f2e2e00 	svccs	0x002e2e00
    88e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    88e4:	2f737265 	svccs	0x00737265
    88e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    88ec:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    88f0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    88f4:	2f54532f 	svccs	0x0054532f
    88f8:	334d5453 	movtcc	r5, #54355	; 0xd453
    88fc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    8900:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    8904:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8908:	73000065 	movwvc	r0, #101	; 0x65
    890c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    8910:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    8914:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8918:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    891c:	00010063 	andeq	r0, r1, r3, rrx
    8920:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    8924:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8928:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    892c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8930:	00020068 	andeq	r0, r2, r8, rrx
    8934:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    8938:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    893c:	0300682e 	movweq	r6, #2094	; 0x82e
    8940:	6f630000 	svcvs	0x00630000
    8944:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    8948:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    894c:	00000400 	andeq	r0, r0, r0, lsl #8
    8950:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    8954:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    8958:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    895c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8960:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8964:	74730000 	ldrbtvc	r0, [r3], #-0
    8968:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    896c:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    8970:	00682e78 	rsbeq	r2, r8, r8, ror lr
    8974:	00000005 	andeq	r0, r0, r5
    8978:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    897c:	0016f402 	andseq	pc, r6, r2, lsl #8
    8980:	01a70308 			; <UNDEFINED> instruction: 0x01a70308
    8984:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    8988:	01061005 	tsteq	r6, r5
    898c:	0b030105 	bleq	c8da8 <_Min_Heap_Size+0xc85a8>
    8990:	00030274 	andeq	r0, r3, r4, ror r2
    8994:	01050101 	tsteq	r5, r1, lsl #2
    8998:	00020500 	andeq	r0, r2, r0, lsl #10
    899c:	03000000 	movweq	r0, #0
    89a0:	050101dc 	streq	r0, [r1, #-476]	; 0xfffffe24
    89a4:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    89a8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    89ac:	03052e07 	movweq	r2, #24071	; 0x5e07
    89b0:	07053006 	streq	r3, [r5, -r6]
    89b4:	05581f03 	ldrbeq	r1, [r8, #-3843]	; 0xfffff0fd
    89b8:	20010617 	andcs	r0, r1, r7, lsl r6
    89bc:	2f060705 	svccs	0x00060705
    89c0:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    89c4:	20010617 	andcs	r0, r1, r7, lsl r6
    89c8:	2f060705 	svccs	0x00060705
    89cc:	20030305 	andcs	r0, r3, r5, lsl #6
    89d0:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    89d4:	2e340501 	cdpcs	5, 3, cr0, cr4, cr1, {0}
    89d8:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    89dc:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    89e0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    89e4:	07054b01 	streq	r4, [r5, -r1, lsl #22]
    89e8:	205f0306 	subscs	r0, pc, r6, lsl #6
    89ec:	01061705 	tsteq	r6, r5, lsl #14
    89f0:	06070520 	streq	r0, [r7], -r0, lsr #10
    89f4:	1705262f 	strne	r2, [r5, -pc, lsr #12]
    89f8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    89fc:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    8a00:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    8a04:	0705200c 	streq	r2, [r5, -ip]
    8a08:	0a053006 	beq	154a28 <_Min_Heap_Size+0x154228>
    8a0c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8a10:	1d053f06 	stcne	15, cr3, [r5, #-24]	; 0xffffffe8
    8a14:	2c050106 	stfcss	f0, [r5], {6}
    8a18:	4a05203c 	bmi	150b10 <_Min_Heap_Size+0x150310>
    8a1c:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    8a20:	36060705 	strcc	r0, [r6], -r5, lsl #14
    8a24:	01061405 	tsteq	r6, r5, lsl #8
    8a28:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
    8a2c:	0c052e38 	stceq	14, cr2, [r5], {56}	; 0x38
    8a30:	06070520 	streq	r0, [r7], -r0, lsr #10
    8a34:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    8a38:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    8a3c:	06070520 	streq	r0, [r7], -r0, lsr #10
    8a40:	1b090521 	blne	249ecc <_Min_Heap_Size+0x2496cc>
    8a44:	01061d05 	tsteq	r6, r5, lsl #26
    8a48:	203c2c05 	eorscs	r2, ip, r5, lsl #24
    8a4c:	05204a05 	streq	r4, [r0, #-2565]!	; 0xfffff5fb
    8a50:	022e2e10 	eoreq	r2, lr, #16, 28	; 0x100
    8a54:	0101000c 	tsteq	r1, ip
    8a58:	00000597 	muleq	r0, r7, r5
    8a5c:	024e0003 	subeq	r0, lr, #3
    8a60:	01020000 	mrseq	r0, (UNDEF: 2)
    8a64:	000d0efb 	strdeq	r0, [sp], -fp
    8a68:	01010101 	tsteq	r1, r1, lsl #2
    8a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    8a70:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8a74:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8a78:	2f2e2e2f 	svccs	0x002e2e2f
    8a7c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    8a80:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    8a84:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    8a88:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    8a8c:	2f706d75 	svccs	0x00706d75
    8a90:	00637273 	rsbeq	r7, r3, r3, ror r2
    8a94:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8a9c <_Min_Heap_Size+0x829c>
    8a98:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8a9c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    8aa0:	5349534d 	movtpl	r5, #37709	; 0x934d
    8aa4:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8aa8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8aac:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8ab0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8ab4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8ab8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8abc:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8ac0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8ac4:	5f6d7261 	svcpl	0x006d7261
    8ac8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8acc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8ad0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8ad4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8ad8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8adc:	30312d69 	eorscc	r2, r1, r9, ror #26
    8ae0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8ae4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8ae8:	615c3031 	cmpvs	ip, r1, lsr r0
    8aec:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8af0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8af4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8af8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8afc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8b00:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    8b04:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    8b08:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8b0c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8b10:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8b14:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8b18:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8b1c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8b20:	5f6d7261 	svcpl	0x006d7261
    8b24:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8b28:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8b2c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8b30:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8b34:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8b38:	30312d69 	eorscc	r2, r1, r9, ror #26
    8b3c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8b40:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8b44:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    8b48:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    8b4c:	615c6363 	cmpvs	ip, r3, ror #6
    8b50:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8b54:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8b58:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8b5c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    8b60:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    8b64:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8b68:	00656475 	rsbeq	r6, r5, r5, ror r4
    8b6c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    8b70:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    8b74:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    8b78:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    8b7c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    8b80:	615c6d61 	cmpvs	ip, r1, ror #26
    8b84:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    8b88:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    8b8c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8b90:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8b94:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8b98:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8b9c:	2e30312d 	rsfcssp	f3, f0, #5.0
    8ba0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8ba4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8ba8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    8bac:	6f6e2d6d 	svcvs	0x006e2d6d
    8bb0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8bb4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    8bb8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8bbc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    8bc0:	00737973 	rsbseq	r7, r3, r3, ror r9
    8bc4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8bc8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8bcc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8bd0:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    8bd4:	61662f73 	smcvs	25331	; 0x62f3
    8bd8:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8bdc:	706d7564 	rsbvc	r7, sp, r4, ror #10
    8be0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    8be4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8be8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8bec:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8bf0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8bf4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8bf8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8bfc:	5f6d7261 	svcpl	0x006d7261
    8c00:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8c04:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8c08:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8c0c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8c10:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8c14:	30312d69 	eorscc	r2, r1, r9, ror #26
    8c18:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8c1c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8c20:	615c3031 	cmpvs	ip, r1, lsr r0
    8c24:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8c28:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8c2c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8c30:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8c34:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8c38:	61660000 	cmnvs	r6, r0
    8c3c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8c40:	706d7564 	rsbvc	r7, sp, r4, ror #10
    8c44:	0100632e 	tsteq	r0, lr, lsr #6
    8c48:	6d630000 	stclvs	0, cr0, [r3, #-0]
    8c4c:	5f736973 	svcpl	0x00736973
    8c50:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    8c54:	00020068 	andeq	r0, r2, r8, rrx
    8c58:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    8c5c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8c60:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    8c64:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8c68:	00030068 	andeq	r0, r3, r8, rrx
    8c6c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    8c70:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    8c74:	00040068 	andeq	r0, r4, r8, rrx
    8c78:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    8c7c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    8c80:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8c84:	61660000 	cmnvs	r6, r0
    8c88:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8c8c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    8c90:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8c94:	74730000 	ldrbtvc	r0, [r3], #-0
    8c98:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    8c9c:	00070068 	andeq	r0, r7, r8, rrx
    8ca0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    8ca4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    8ca8:	003e6e69 	eorseq	r6, lr, r9, ror #28
    8cac:	00000000 	andeq	r0, r0, r0
    8cb0:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    8cb4:	00170802 	andseq	r0, r7, r2, lsl #16
    8cb8:	00fe0308 	rscseq	r0, lr, r8, lsl #6
    8cbc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8cc0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8cc4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    8cc8:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    8ccc:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    8cd0:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    8cd4:	04020009 	streq	r0, [r2], #-9
    8cd8:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    8cdc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    8ce0:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    8ce4:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    8ce8:	3d052e03 	stccc	14, cr2, [r5, #-12]
    8cec:	03040200 	movweq	r0, #16896	; 0x4200
    8cf0:	3e055706 	cdpcc	7, 0, cr5, cr5, cr6, {0}
    8cf4:	03040200 	movweq	r0, #16896	; 0x4200
    8cf8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    8cfc:	01040200 	mrseq	r0, R12_usr
    8d00:	05052006 	streq	r2, [r5, #-6]
    8d04:	01040200 	mrseq	r0, R12_usr
    8d08:	31060106 	tstcc	r6, r6, lsl #2
    8d0c:	01062205 	tsteq	r6, r5, lsl #4
    8d10:	0605052f 	streq	r0, [r5], -pc, lsr #10
    8d14:	0601052f 	streq	r0, [r1], -pc, lsr #10
    8d18:	02022e13 	andeq	r2, r2, #304	; 0x130
    8d1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d20:	02050033 	andeq	r0, r5, #51	; 0x33
    8d24:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
    8d28:	01018903 	tsteq	r1, r3, lsl #18
    8d2c:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    8d30:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    8d34:	052f0605 	streq	r0, [pc, #-1541]!	; 8737 <_Min_Heap_Size+0x7f37>
    8d38:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    8d3c:	0505200e 	streq	r2, [r5, #-14]
    8d40:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    8d44:	26050106 	strcs	r0, [r5], -r6, lsl #2
    8d48:	01040200 	mrseq	r0, R12_usr
    8d4c:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    8d50:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    8d54:	00260501 	eoreq	r0, r6, r1, lsl #10
    8d58:	3c010402 	cfstrscc	mvf0, [r1], {2}
    8d5c:	203f0c05 	eorscs	r0, pc, r5, lsl #24
    8d60:	201b1005 	andscs	r1, fp, r5
    8d64:	20232020 	eorcs	r2, r3, r0, lsr #32
    8d68:	23010520 	movwcs	r0, #5408	; 0x1520
    8d6c:	01000102 	tsteq	r0, r2, lsl #2
    8d70:	00360501 	eorseq	r0, r6, r1, lsl #10
    8d74:	176c0205 	strbne	r0, [ip, -r5, lsl #4]!
    8d78:	98030800 	stmdals	r3, {fp}
    8d7c:	01060101 	tsteq	r6, r1, lsl #2
    8d80:	2f060505 	svccs	0x00060505
    8d84:	30062e06 	andcc	r2, r6, r6, lsl #28
    8d88:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8d8c:	0202203e 	andeq	r2, r2, #62	; 0x3e
    8d90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d94:	0205001c 	andeq	r0, r5, #28
    8d98:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
    8d9c:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
    8da0:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    8da4:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    8da8:	05052018 	streq	r2, [r5, #-24]	; 0xffffffe8
    8dac:	1a052f06 	bne	1549cc <_Min_Heap_Size+0x1541cc>
    8db0:	18050106 	stmdane	r5, {r1, r2, r8}
    8db4:	06050520 	streq	r0, [r5], -r0, lsr #10
    8db8:	05684c2f 	strbeq	r4, [r8, #-3119]!	; 0xfffff3d1
    8dbc:	024c0601 	subeq	r0, ip, #1048576	; 0x100000
    8dc0:	01010013 	tsteq	r1, r3, lsl r0
    8dc4:	05007305 	streq	r7, [r0, #-773]	; 0xfffffcfb
    8dc8:	0017d402 	andseq	sp, r7, r2, lsl #8
    8dcc:	01db0308 	bicseq	r0, fp, r8, lsl #6
    8dd0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8dd4:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    8dd8:	06080513 			; <UNDEFINED> instruction: 0x06080513
    8ddc:	001a0501 	andseq	r0, sl, r1, lsl #10
    8de0:	58010402 	stmdapl	r1, {r1, sl}
    8de4:	23060505 	movwcs	r0, #25861	; 0x6505
    8de8:	01040200 	mrseq	r0, R12_usr
    8dec:	09052006 	stmdbeq	r5, {r1, r2, sp}
    8df0:	00050529 	andeq	r0, r5, r9, lsr #10
    8df4:	06020402 	streq	r0, [r2], -r2, lsl #8
    8df8:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    8dfc:	02002001 	andeq	r2, r0, #1
    8e00:	20060304 	andcs	r0, r6, r4, lsl #6
    8e04:	30060905 	andcc	r0, r6, r5, lsl #18
    8e08:	01060c05 	tsteq	r6, r5, lsl #24
    8e0c:	22060905 	andcs	r0, r6, #81920	; 0x14000
    8e10:	01061305 	tsteq	r6, r5, lsl #6
    8e14:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    8e18:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    8e1c:	26052e01 	strcs	r2, [r5], -r1, lsl #28
    8e20:	01040200 	mrseq	r0, R12_usr
    8e24:	06090520 	streq	r0, [r9], -r0, lsr #10
    8e28:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    8e2c:	06090501 	streq	r0, [r9], -r1, lsl #10
    8e30:	0c051440 	cfstrseq	mvf1, [r5], {64}	; 0x40
    8e34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8e38:	0c053006 	stceq	0, cr3, [r5], {6}
    8e3c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8e40:	0e052406 	cdpeq	4, 0, cr2, cr5, cr6, {0}
    8e44:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8e48:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    8e4c:	0c050106 	stfeqs	f0, [r5], {6}
    8e50:	0609052e 	streq	r0, [r9], -lr, lsr #10
    8e54:	06170532 			; <UNDEFINED> instruction: 0x06170532
    8e58:	06090501 	streq	r0, [r9], -r1, lsl #10
    8e5c:	060f052f 	streq	r0, [pc], -pc, lsr #10
    8e60:	06090501 	streq	r0, [r9], -r1, lsl #10
    8e64:	060c0521 	streq	r0, [ip], -r1, lsr #10
    8e68:	33010501 	movwcc	r0, #5377	; 0x1501
    8e6c:	5a031005 	bpl	cce88 <_Min_Heap_Size+0xcc688>
    8e70:	583f3c3c 	ldmdapl	pc!, {r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    8e74:	01000602 	tsteq	r0, r2, lsl #12
    8e78:	00430501 	subeq	r0, r3, r1, lsl #10
    8e7c:	18500205 	ldmdane	r0, {r0, r2, r9}^
    8e80:	a0030800 	andge	r0, r3, r0, lsl #16
    8e84:	01060101 	tsteq	r6, r1, lsl #2
    8e88:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    8e8c:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    8e90:	01061805 	tsteq	r6, r5, lsl #16
    8e94:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8e98:	052f0605 	streq	r0, [pc, #-1541]!	; 889b <_Min_Heap_Size+0x809b>
    8e9c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8ea0:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8ea4:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8ea8:	16050106 	strne	r0, [r5], -r6, lsl #2
    8eac:	06050520 	streq	r0, [r5], -r0, lsr #10
    8eb0:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8eb4:	20160501 	andscs	r0, r6, r1, lsl #10
    8eb8:	21060505 	tstcs	r6, r5, lsl #10
    8ebc:	01061805 	tsteq	r6, r5, lsl #16
    8ec0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8ec4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8ec8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8ecc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8ed0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8ed4:	16050106 	strne	r0, [r5], -r6, lsl #2
    8ed8:	06050520 	streq	r0, [r5], -r0, lsr #10
    8edc:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8ee0:	20160501 	andscs	r0, r6, r1, lsl #10
    8ee4:	21060505 	tstcs	r6, r5, lsl #10
    8ee8:	01061805 	tsteq	r6, r5, lsl #16
    8eec:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8ef0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8ef4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8ef8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8efc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8f00:	16050106 	strne	r0, [r5], -r6, lsl #2
    8f04:	06050520 	streq	r0, [r5], -r0, lsr #10
    8f08:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8f0c:	20160501 	andscs	r0, r6, r1, lsl #10
    8f10:	21060505 	tstcs	r6, r5, lsl #10
    8f14:	01061805 	tsteq	r6, r5, lsl #16
    8f18:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8f1c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8f20:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8f24:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8f28:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8f2c:	16050106 	strne	r0, [r5], -r6, lsl #2
    8f30:	06050520 	streq	r0, [r5], -r0, lsr #10
    8f34:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8f38:	20160501 	andscs	r0, r6, r1, lsl #10
    8f3c:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    8f40:	2f062e06 	svccs	0x00062e06
    8f44:	4b4b3d3d 	blmi	12d8440 <_Min_Heap_Size+0x12d7c40>
    8f48:	4b4b4b4b 	blmi	12dbc7c <_Min_Heap_Size+0x12db47c>
    8f4c:	4b4b4b4b 	blmi	12dbc80 <_Min_Heap_Size+0x12db480>
    8f50:	4b4b4b4b 	blmi	12dbc84 <_Min_Heap_Size+0x12db484>
    8f54:	3e3d4b4b 	vsubcc.f64	d4, d13, d11
    8f58:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    8f5c:	06050501 	streq	r0, [r5], -r1, lsl #10
    8f60:	06200686 	strteq	r0, [r0], -r6, lsl #13
    8f64:	10054b2f 	andne	r4, r5, pc, lsr #22
    8f68:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8f6c:	00090520 	andeq	r0, r9, r0, lsr #10
    8f70:	06030402 	streq	r0, [r3], -r2, lsl #8
    8f74:	00240521 	eoreq	r0, r4, r1, lsr #10
    8f78:	65030402 	strvs	r0, [r3, #-1026]	; 0xfffffbfe
    8f7c:	02002905 	andeq	r2, r0, #81920	; 0x14000
    8f80:	01060304 	tsteq	r6, r4, lsl #6
    8f84:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    8f88:	20060104 	andcs	r0, r6, r4, lsl #2
    8f8c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    8f90:	01060104 	tsteq	r6, r4, lsl #2
    8f94:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    8f98:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    8f9c:	0402000e 	streq	r0, [r2], #-14
    8fa0:	0b050101 	bleq	1493ac <_Min_Heap_Size+0x148bac>
    8fa4:	01040200 	mrseq	r0, R12_usr
    8fa8:	00310201 	eorseq	r0, r1, r1, lsl #4
    8fac:	2e050101 	adfcss	f0, f5, f1
    8fb0:	00020500 	andeq	r0, r2, r0, lsl #10
    8fb4:	03000000 	movweq	r0, #0
    8fb8:	05010287 	streq	r0, [r1, #-647]	; 0xfffffd79
    8fbc:	02041305 	andeq	r1, r4, #335544320	; 0x14000000
    8fc0:	da031f05 	ble	d0bdc <_Min_Heap_Size+0xd03dc>
    8fc4:	03050106 	movweq	r0, #20742	; 0x5106
    8fc8:	062f1414 			; <UNDEFINED> instruction: 0x062f1414
    8fcc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    8fd0:	79a20301 	stmibvc	r2!, {r0, r8, r9}
    8fd4:	00010201 	andeq	r0, r1, r1, lsl #4
    8fd8:	2e050101 	adfcss	f0, f5, f1
    8fdc:	00020500 	andeq	r0, r2, r0, lsl #10
    8fe0:	03000000 	movweq	r0, #0
    8fe4:	0501028b 	streq	r0, [r1, #-651]	; 0xfffffd75
    8fe8:	01051305 	tsteq	r5, r5, lsl #6
    8fec:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    8ff0:	0b010100 	bleq	493f8 <_Min_Heap_Size+0x48bf8>
    8ff4:	03000001 	movweq	r0, #1
    8ff8:	0000ba00 	andeq	fp, r0, r0, lsl #20
    8ffc:	fb010200 	blx	49806 <_Min_Heap_Size+0x49006>
    9000:	01000d0e 	tsteq	r0, lr, lsl #26
    9004:	00010101 	andeq	r0, r1, r1, lsl #2
    9008:	00010000 	andeq	r0, r1, r0
    900c:	2e2e0100 	sufcse	f0, f6, f0
    9010:	2f2e2e2f 	svccs	0x002e2e2f
    9014:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8f64 <_Min_Heap_Size+0x8764>
    9018:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    901c:	2f736c69 	svccs	0x00736c69
    9020:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    9024:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    9028:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    902c:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    9030:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    9034:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    9038:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    903c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    9040:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    9044:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    9048:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    904c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    9050:	5f6d7261 	svcpl	0x006d7261
    9054:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    9058:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    905c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    9060:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    9064:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    9068:	30312d69 	eorscc	r2, r1, r9, ror #26
    906c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    9070:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    9074:	615c3031 	cmpvs	ip, r1, lsr r0
    9078:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    907c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9080:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9084:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    9088:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    908c:	61660000 	cmnvs	r6, r0
    9090:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    9094:	2e6c6168 	powcsez	f6, f4, #0.0
    9098:	00010063 	andeq	r0, r1, r3, rrx
    909c:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    90a0:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    90a4:	003e6e69 	eorseq	r6, lr, r9, ror #28
    90a8:	73000000 	movwvc	r0, #0
    90ac:	6f696474 	svcvs	0x00696474
    90b0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    90b4:	05000000 	streq	r0, [r0, #-0]
    90b8:	02050035 	andeq	r0, r5, #53	; 0x35
    90bc:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
    90c0:	06010e03 	streq	r0, [r1], -r3, lsl #28
    90c4:	06050501 	streq	r0, [r5], -r1, lsl #10
    90c8:	0620062f 	strteq	r0, [r0], -pc, lsr #12
    90cc:	08053d2f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, sl, fp, ip, sp}
    90d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    90d4:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    90d8:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    90dc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    90e0:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    90e4:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    90e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    90ec:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    90f0:	06010540 	streq	r0, [r1], -r0, asr #10
    90f4:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
    90f8:	50207103 	eorpl	r7, r0, r3, lsl #2
    90fc:	00180250 	andseq	r0, r8, r0, asr r2
    9100:	01e40101 	mvneq	r0, r1, lsl #2
    9104:	00030000 	andeq	r0, r3, r0
    9108:	0000017c 	andeq	r0, r0, ip, ror r1
    910c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    9110:	0101000d 	tsteq	r1, sp
    9114:	00000101 	andeq	r0, r0, r1, lsl #2
    9118:	00000100 	andeq	r0, r0, r0, lsl #2
    911c:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
    9120:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    9124:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    9128:	63006e6f 	movwvs	r6, #3695	; 0xe6f
    912c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    9130:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    9134:	6f646978 	svcvs	0x00646978
    9138:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    913c:	6172676f 	cmnvs	r2, pc, ror #14
    9140:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    9144:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    9148:	63675c63 	cmnvs	r7, #25344	; 0x6300
    914c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    9150:	6f6e2d6d 	svcvs	0x006e2d6d
    9154:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9158:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    915c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    9160:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    9164:	30312e31 	eorscc	r2, r1, r1, lsr lr
    9168:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    916c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    9170:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9174:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9178:	61652d65 	cmnvs	r5, r5, ror #26
    917c:	315c6962 	cmpcc	ip, r2, ror #18
    9180:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    9184:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    9188:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    918c:	3a630065 	bcc	18c9328 <_Min_Heap_Size+0x18c8b28>
    9190:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    9194:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    9198:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    919c:	6f72705c 	svcvs	0x0072705c
    91a0:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    91a4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    91a8:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    91ac:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    91b0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    91b4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    91b8:	61652d65 	cmnvs	r5, r5, ror #26
    91bc:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    91c0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    91c4:	31323032 	teqcc	r2, r2, lsr r0
    91c8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    91cc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    91d0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    91d4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    91d8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    91dc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    91e0:	616d5c65 	cmnvs	sp, r5, ror #24
    91e4:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    91e8:	3a630065 	bcc	18c9384 <_Min_Heap_Size+0x18c8b84>
    91ec:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    91f0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    91f4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    91f8:	6f72705c 	svcvs	0x0072705c
    91fc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    9200:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9204:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    9208:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    920c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    9210:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9214:	61652d65 	cmnvs	r5, r5, ror #26
    9218:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    921c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    9220:	31323032 	teqcc	r2, r2, lsr r0
    9224:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    9228:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    922c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    9230:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    9234:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    9238:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    923c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    9240:	73000073 	movwvc	r0, #115	; 0x73
    9244:	656d7379 	strbvs	r7, [sp, #-889]!	; 0xfffffc87
    9248:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    924c:	73000001 	movwvc	r0, #1
    9250:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    9254:	00682e66 	rsbeq	r2, r8, r6, ror #28
    9258:	5f000002 	svcpl	0x00000002
    925c:	61666564 	cmnvs	r6, r4, ror #10
    9260:	5f746c75 	svcpl	0x00746c75
    9264:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    9268:	00682e73 	rsbeq	r2, r8, r3, ror lr
    926c:	5f000003 	svcpl	0x00000003
    9270:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    9274:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    9278:	00000400 	andeq	r0, r0, r0, lsl #8
    927c:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    9280:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    9284:	00000004 	andeq	r0, r0, r4
    9288:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    928c:	001a5c02 	andseq	r5, sl, r2, lsl #24
    9290:	01350308 	teqeq	r5, r8, lsl #6
    9294:	03050106 	movweq	r0, #20742	; 0x5106
    9298:	13132f06 	tstne	r3, #6, 30
    929c:	06120513 			; <UNDEFINED> instruction: 0x06120513
    92a0:	06030501 	streq	r0, [r3], -r1, lsl #10
    92a4:	0515132f 	ldreq	r1, [r5, #-815]	; 0xfffffcd1
    92a8:	2001060c 	andcs	r0, r1, ip, lsl #12
    92ac:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    92b0:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    92b4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    92b8:	03053c06 	movweq	r3, #23558	; 0x5c06
    92bc:	05134206 	ldreq	r4, [r3, #-518]	; 0xfffffdfa
    92c0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    92c4:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    92c8:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    92cc:	72030605 	andvc	r0, r3, #5242880	; 0x500000
    92d0:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    92d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    92d8:	060b0550 			; <UNDEFINED> instruction: 0x060b0550
    92dc:	0605052e 	streq	r0, [r5], -lr, lsr #10
    92e0:	060c052f 	streq	r0, [ip], -pc, lsr #10
    92e4:	000c0201 	andeq	r0, ip, r1, lsl #4
    92e8:	04190101 	ldreq	r0, [r9], #-257	; 0xfffffeff
    92ec:	00030000 	andeq	r0, r3, r0
    92f0:	0000014b 	andeq	r0, r0, fp, asr #2
    92f4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    92f8:	0101000d 	tsteq	r1, sp
    92fc:	00000101 	andeq	r0, r0, r1, lsl #2
    9300:	00000100 	andeq	r0, r0, r0, lsl #2
    9304:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
    9308:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    930c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    9310:	63006e6f 	movwvs	r6, #3695	; 0xe6f
    9314:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    9318:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    931c:	6f646978 	svcvs	0x00646978
    9320:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    9324:	6172676f 	cmnvs	r2, pc, ror #14
    9328:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    932c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    9330:	63675c63 	cmnvs	r7, #25344	; 0x6300
    9334:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    9338:	6f6e2d6d 	svcvs	0x006e2d6d
    933c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9340:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    9344:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    9348:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    934c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    9350:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9354:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9358:	61652d65 	cmnvs	r5, r5, ror #26
    935c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    9360:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    9364:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    9368:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    936c:	6300656e 	movwvs	r6, #1390	; 0x56e
    9370:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    9374:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    9378:	6f646978 	svcvs	0x00646978
    937c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    9380:	6172676f 	cmnvs	r2, pc, ror #14
    9384:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    9388:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    938c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    9390:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    9394:	6f6e2d6d 	svcvs	0x006e2d6d
    9398:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    939c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    93a0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    93a4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    93a8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    93ac:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    93b0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    93b4:	61652d65 	cmnvs	r5, r5, ror #26
    93b8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    93bc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    93c0:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    93c4:	00007379 	andeq	r7, r0, r9, ror r3
    93c8:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    93cc:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    93d0:	0100632e 	tsteq	r0, lr, lsr #6
    93d4:	645f0000 	ldrbvs	r0, [pc], #-0	; 93dc <_Min_Heap_Size+0x8bdc>
    93d8:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    93dc:	745f746c 	ldrbvc	r7, [pc], #-1132	; 93e4 <_Min_Heap_Size+0x8be4>
    93e0:	73657079 	cmnvc	r5, #121	; 0x79
    93e4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    93e8:	745f0000 	ldrbvc	r0, [pc], #-0	; 93f0 <_Min_Heap_Size+0x8bf0>
    93ec:	73657079 	cmnvc	r5, #121	; 0x79
    93f0:	0300682e 	movweq	r6, #2094	; 0x82e
    93f4:	745f0000 	ldrbvc	r0, [pc], #-0	; 93fc <_Min_Heap_Size+0x8bfc>
    93f8:	76656d69 	strbtvc	r6, [r5], -r9, ror #26
    93fc:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    9400:	00000300 	andeq	r0, r0, r0, lsl #6
    9404:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    9408:	65707365 	ldrbvs	r7, [r0, #-869]!	; 0xfffffc9b
    940c:	00682e63 	rsbeq	r2, r8, r3, ror #28
    9410:	74000003 	strvc	r0, [r0], #-3
    9414:	73657079 	cmnvc	r5, #121	; 0x79
    9418:	0300682e 	movweq	r6, #2094	; 0x82e
    941c:	74730000 	ldrbtvc	r0, [r3], #-0
    9420:	682e7461 	stmdavs	lr!, {r0, r5, r6, sl, ip, sp, lr}
    9424:	00000300 	andeq	r0, r0, r0, lsl #6
    9428:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    942c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    9430:	65000003 	strvs	r0, [r0, #-3]
    9434:	6f6e7272 	svcvs	0x006e7272
    9438:	0300682e 	movweq	r6, #2094	; 0x82e
    943c:	05000000 	streq	r0, [r0, #-0]
    9440:	02050001 	andeq	r0, r5, #1
    9444:	00000000 	andeq	r0, r0, r0
    9448:	13012c03 	movwne	r2, #7171	; 0x1c03
    944c:	01000102 	tsteq	r0, r2, lsl #2
    9450:	00010501 	andeq	r0, r1, r1, lsl #10
    9454:	00000205 	andeq	r0, r0, r5, lsl #4
    9458:	30030000 	andcc	r0, r3, r0
    945c:	13030501 	movwne	r0, #13569	; 0x3501
    9460:	13060105 	movwne	r0, #24837	; 0x6105
    9464:	01000202 	tsteq	r0, r2, lsl #4
    9468:	00010501 	andeq	r0, r1, r1, lsl #10
    946c:	00000205 	andeq	r0, r0, r5, lsl #4
    9470:	35030000 	strcc	r0, [r3, #-0]
    9474:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    9478:	13210603 			; <UNDEFINED> instruction: 0x13210603
    947c:	06090513 			; <UNDEFINED> instruction: 0x06090513
    9480:	0603052e 	streq	r0, [r3], -lr, lsr #10
    9484:	0601052f 	streq	r0, [r1], -pc, lsr #10
    9488:	00030213 	andeq	r0, r3, r3, lsl r2
    948c:	01050101 	tsteq	r5, r1, lsl #2
    9490:	00020500 	andeq	r0, r2, r0, lsl #10
    9494:	03000000 	movweq	r0, #0
    9498:	0106013d 	tsteq	r6, sp, lsr r1
    949c:	21060305 	tstcs	r6, r5, lsl #6
    94a0:	01040200 	mrseq	r0, R12_usr
    94a4:	000e054b 	andeq	r0, lr, fp, asr #10
    94a8:	01010402 	tsteq	r1, r2, lsl #8
    94ac:	02000905 	andeq	r0, r0, #81920	; 0x14000
    94b0:	02010104 	andeq	r0, r1, #4, 2
    94b4:	01010001 	tsteq	r1, r1
    94b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    94bc:	001aa402 	andseq	sl, sl, r2, lsl #8
    94c0:	00c30308 	sbceq	r0, r3, r8, lsl #6
    94c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    94c8:	133d0603 	teqne	sp, #3145728	; 0x300000
    94cc:	06100514 			; <UNDEFINED> instruction: 0x06100514
    94d0:	20030501 	andcs	r0, r3, r1, lsl #10
    94d4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    94d8:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
    94dc:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    94e0:	01060304 	tsteq	r6, r4, lsl #6
    94e4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    94e8:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    94ec:	0402000c 	streq	r0, [r2], #-12
    94f0:	24052003 	strcs	r2, [r5], #-3
    94f4:	03040200 	movweq	r0, #16896	; 0x4200
    94f8:	2b052c06 	blcs	154518 <_Min_Heap_Size+0x153d18>
    94fc:	03040200 	movweq	r0, #16896	; 0x4200
    9500:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9504:	03040200 	movweq	r0, #16896	; 0x4200
    9508:	00150522 	andseq	r0, r5, r2, lsr #10
    950c:	06010402 	streq	r0, [r1], -r2, lsl #8
    9510:	0003051e 	andeq	r0, r3, lr, lsl r5
    9514:	06010402 	streq	r0, [r1], -r2, lsl #8
    9518:	05330601 	ldreq	r0, [r3, #-1537]!	; 0xfffff9ff
    951c:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    9520:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9524:	02050001 	andeq	r0, r5, #1
    9528:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
    952c:	0100d003 	tsteq	r0, r3
    9530:	03050106 	movweq	r0, #20742	; 0x5106
    9534:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
    9538:	01061005 	tsteq	r6, r5
    953c:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
    9540:	04020005 	streq	r0, [r2], #-5
    9544:	00220603 	eoreq	r0, r2, r3, lsl #12
    9548:	06030402 	streq	r0, [r3], -r2, lsl #8
    954c:	04020001 	streq	r0, [r2], #-1
    9550:	24052e03 	strcs	r2, [r5], #-3587	; 0xfffff1fd
    9554:	03040200 	movweq	r0, #16896	; 0x4200
    9558:	2b052c06 	blcs	154578 <_Min_Heap_Size+0x153d78>
    955c:	03040200 	movweq	r0, #16896	; 0x4200
    9560:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    9564:	01040200 	mrseq	r0, R12_usr
    9568:	03052006 	movweq	r2, #20486	; 0x5006
    956c:	01040200 	mrseq	r0, R12_usr
    9570:	32060106 	andcc	r0, r6, #-2147483647	; 0x80000001
    9574:	13060105 	movwne	r0, #24837	; 0x6105
    9578:	0101002e 	tsteq	r1, lr, lsr #32
    957c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9580:	001ae002 	andseq	lr, sl, r2
    9584:	00dc0308 	sbcseq	r0, ip, r8, lsl #6
    9588:	13030501 	movwne	r0, #13569	; 0x3501
    958c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    9590:	01022e13 	tsteq	r2, r3, lsl lr
    9594:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9598:	02050001 	andeq	r0, r5, #1
    959c:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
    95a0:	0100e303 	tsteq	r0, r3, lsl #6
    95a4:	13130305 	tstne	r3, #335544320	; 0x14000000
    95a8:	01060f05 	tsteq	r6, r5, lsl #30
    95ac:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    95b0:	13060105 	movwne	r0, #24837	; 0x6105
    95b4:	00010220 	andeq	r0, r1, r0, lsr #4
    95b8:	01050101 	tsteq	r5, r1, lsl #2
    95bc:	f0020500 			; <UNDEFINED> instruction: 0xf0020500
    95c0:	0308001a 	movweq	r0, #32794	; 0x801a
    95c4:	050100ea 	streq	r0, [r1, #-234]	; 0xffffff16
    95c8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    95cc:	20130601 	andscs	r0, r3, r1, lsl #12
    95d0:	01000102 	tsteq	r0, r2, lsl #2
    95d4:	00010501 	andeq	r0, r1, r1, lsl #10
    95d8:	1af40205 	bne	ffd09df4 <_estack+0xdfd08bbc>
    95dc:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
    95e0:	03050100 	movweq	r0, #20736	; 0x5100
    95e4:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    95e8:	13060105 	movwne	r0, #24837	; 0x6105
    95ec:	00010220 	andeq	r0, r1, r0, lsr #4
    95f0:	01050101 	tsteq	r5, r1, lsl #2
    95f4:	00020500 	andeq	r0, r2, r0, lsl #10
    95f8:	03000000 	movweq	r0, #0
    95fc:	060100f8 			; <UNDEFINED> instruction: 0x060100f8
    9600:	06030501 	streq	r0, [r3], -r1, lsl #10
    9604:	05141321 	ldreq	r1, [r4, #-801]	; 0xfffffcdf
    9608:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    960c:	01000202 	tsteq	r0, r2, lsl #4
    9610:	00010501 	andeq	r0, r1, r1, lsl #10
    9614:	00000205 	andeq	r0, r0, r5, lsl #4
    9618:	80030000 	andhi	r0, r3, r0
    961c:	01060101 	tsteq	r6, r1, lsl #2
    9620:	21060305 	tstcs	r6, r5, lsl #6
    9624:	06090513 			; <UNDEFINED> instruction: 0x06090513
    9628:	0603052e 	streq	r0, [r3], -lr, lsr #10
    962c:	0601052f 	streq	r0, [r1], -pc, lsr #10
    9630:	00030213 	andeq	r0, r3, r3, lsl r2
    9634:	01050101 	tsteq	r5, r1, lsl #2
    9638:	00020500 	andeq	r0, r2, r0, lsl #10
    963c:	03000000 	movweq	r0, #0
    9640:	06010187 	streq	r0, [r1], -r7, lsl #3
    9644:	06030501 	streq	r0, [r3], -r1, lsl #10
    9648:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    964c:	03052e06 	movweq	r2, #24070	; 0x5e06
    9650:	01052f06 	tsteq	r5, r6, lsl #30
    9654:	03021306 	movweq	r1, #8966	; 0x2306
    9658:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    965c:	02050001 	andeq	r0, r5, #1
    9660:	00000000 	andeq	r0, r0, r0
    9664:	01018e03 	tsteq	r1, r3, lsl #28
    9668:	13130305 	tstne	r3, #335544320	; 0x14000000
    966c:	13060105 	movwne	r0, #24837	; 0x6105
    9670:	0001022e 	andeq	r0, r1, lr, lsr #4
    9674:	01050101 	tsteq	r5, r1, lsl #2
    9678:	00020500 	andeq	r0, r2, r0, lsl #10
    967c:	03000000 	movweq	r0, #0
    9680:	05010194 	streq	r0, [r1, #-404]	; 0xfffffe6c
    9684:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    9688:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    968c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    9690:	20130601 	andscs	r0, r3, r1, lsl #12
    9694:	01000102 	tsteq	r0, r2, lsl #2
    9698:	00010501 	andeq	r0, r1, r1, lsl #10
    969c:	00000205 	andeq	r0, r0, r5, lsl #4
    96a0:	9b030000 	blls	c96a8 <_Min_Heap_Size+0xc8ea8>
    96a4:	01060101 	tsteq	r6, r1, lsl #2
    96a8:	21060305 	tstcs	r6, r5, lsl #6
    96ac:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    96b0:	03052e06 	movweq	r2, #24070	; 0x5e06
    96b4:	01052f06 	tsteq	r5, r6, lsl #30
    96b8:	03021306 	movweq	r1, #8966	; 0x2306
    96bc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    96c0:	02050001 	andeq	r0, r5, #1
    96c4:	00000000 	andeq	r0, r0, r0
    96c8:	0101a303 	tsteq	r1, r3, lsl #6
    96cc:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
    96d0:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    96d4:	052f0603 	streq	r0, [pc, #-1539]!	; 90d9 <_Min_Heap_Size+0x88d9>
    96d8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    96dc:	01010003 	tsteq	r1, r3
    96e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    96e4:	00000002 	andeq	r0, r0, r2
    96e8:	01a90300 			; <UNDEFINED> instruction: 0x01a90300
    96ec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    96f0:	13210603 			; <UNDEFINED> instruction: 0x13210603
    96f4:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    96f8:	03052e06 	movweq	r2, #24070	; 0x5e06
    96fc:	01052f06 	tsteq	r5, r6, lsl #30
    9700:	03021306 	movweq	r1, #8966	; 0x2306
    9704:	80010100 	andhi	r0, r1, r0, lsl #2
    9708:	03000000 	movweq	r0, #0
    970c:	00003a00 	andeq	r3, r0, r0, lsl #20
    9710:	fb010200 	blx	49f1a <_Min_Heap_Size+0x4971a>
    9714:	01000d0e 	tsteq	r0, lr, lsl #26
    9718:	00010101 	andeq	r0, r1, r1, lsl #2
    971c:	00010000 	andeq	r0, r1, r0
    9720:	2f2e0100 	svccs	0x002e0100
    9724:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    9728:	2f707574 	svccs	0x00707574
    972c:	00636367 	rsbeq	r6, r3, r7, ror #6
    9730:	61747300 	cmnvs	r4, r0, lsl #6
    9734:	70757472 	rsbsvc	r7, r5, r2, ror r4
    9738:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    973c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    9740:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    9744:	0100732e 	tsteq	r0, lr, lsr #6
    9748:	00000000 	andeq	r0, r0, r0
    974c:	1af80205 	bne	ffe09f68 <_estack+0xdfe08d30>
    9750:	3c030800 	stccc	8, cr0, [r3], {-0}
    9754:	21313101 	teqcs	r1, r1, lsl #2
    9758:	23212121 			; <UNDEFINED> instruction: 0x23212121
    975c:	21232121 			; <UNDEFINED> instruction: 0x21232121
    9760:	21212321 			; <UNDEFINED> instruction: 0x21212321
    9764:	23212321 			; <UNDEFINED> instruction: 0x23212321
    9768:	2f302321 	svccs	0x00302321
    976c:	34205803 	strtcc	r5, [r0], #-2051	; 0xfffff7fd
    9770:	0f032f2f 	svceq	0x00032f2f
    9774:	02022f2e 	andeq	r2, r2, #46, 30	; 0xb8
    9778:	00010100 	andeq	r0, r1, r0, lsl #2
    977c:	1b480205 	blne	1209f98 <_Min_Heap_Size+0x1209798>
    9780:	f1030800 			; <UNDEFINED> instruction: 0xf1030800
    9784:	01020100 	mrseq	r0, (UNDEF: 18)
    9788:	7e010100 	adfvcs	f0, f1, f0
    978c:	03000000 	movweq	r0, #0
    9790:	00004d00 	andeq	r4, r0, r0, lsl #26
    9794:	fb010200 	blx	49f9e <_Min_Heap_Size+0x4979e>
    9798:	01000d0e 	tsteq	r0, lr, lsl #26
    979c:	00010101 	andeq	r0, r1, r1, lsl #2
    97a0:	00010000 	andeq	r0, r1, r0
    97a4:	2e2e0100 	sufcse	f0, f6, f0
    97a8:	2f2e2e2f 	svccs	0x002e2e2f
    97ac:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 96fc <_Min_Heap_Size+0x8efc>
    97b0:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    97b4:	2f736c69 	svccs	0x00736c69
    97b8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    97bc:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    97c0:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    97c4:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    97c8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    97cc:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    97d0:	61660000 	cmnvs	r6, r0
    97d4:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    97d8:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    97dc:	00010073 	andeq	r0, r1, r3, ror r0
    97e0:	05000000 	streq	r0, [r0, #-0]
    97e4:	0001d002 	andeq	sp, r1, r2
    97e8:	01190308 	tsteq	r9, r8, lsl #6
    97ec:	21212121 			; <UNDEFINED> instruction: 0x21212121
    97f0:	2f222f22 	svccs	0x00222f22
    97f4:	23212121 			; <UNDEFINED> instruction: 0x23212121
    97f8:	2f212f30 	svccs	0x00212f30
    97fc:	2f212130 	svccs	0x00212130
    9800:	2e660321 	cdpcs	3, 6, cr0, cr6, cr1, {1}
    9804:	2e150330 	mrccs	3, 0, r0, cr5, cr0, {1}
    9808:	01000202 	tsteq	r0, r2, lsl #4
    980c:	Address 0x0000980c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
       4:	4d006674 	stcmi	6, cr6, [r0, #-464]	; 0xfffffe30
  errno = ENOMEM;
       8:	53555f58 	cmppl	r5, #88, 30	; 0x160
}
       c:	31545241 	cmpcc	r4, r1, asr #4
      10:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	41007469 	tstmi	r0, r9, ror #8
      1c:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
}
      28:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      2c:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
      30:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    if (status != HAL_OK)
      34:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      uwTickFreq = prevTickFreq;
      38:	67006665 	strvs	r6, [r0, -r5, ror #12]
      3c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
      40:	304d0065 	subcc	r0, sp, r5, rrx
      44:	44005241 	strmi	r5, [r0], #-577	; 0xfffffdbf
      if (pllsource != 0)
      48:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
      4c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      54:	41006665 	tstmi	r0, r5, ror #12
      58:	43314250 	teqmi	r1, #80, 4
      5c:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
      64:	5f5f0072 	svcpl	0x005f0072
      68:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
      SystemCoreClock = pllvco/pllp;
      6c:	00745f38 	rsbseq	r5, r4, r8, lsr pc
      70:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
      break;
      74:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	695f706d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
      7c:	0074696e 	rsbseq	r6, r4, lr, ror #18
      80:	534c4c50 	movtpl	r4, #52304	; 0xcc50
      84:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
      88:	4c4c5000 	marmi	acc0, r5, ip
      8c:	4c50004d 	mrrcmi	0, 4, r0, r0, cr13	; <UNPREDICTABLE>
      90:	50004e4c 	andpl	r4, r0, ip, asr #28
      94:	00504c4c 	subseq	r4, r0, ip, asr #24
      98:	514c4c50 	cmppl	ip, r0, asr ip
      9c:	625f5f00 	subsvs	r5, pc, #0, 30
      a0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      a4:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ffffff08 <_estack+0xdfffecd0>
      a8:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xfffff29b
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	6f6c0074 	svcvs	0x006c0074
      b0:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      bc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      c4:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
      c8:	41480072 	hvcmi	32770	; 0x8002
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	41555f4c 	cmpmi	r5, ip, asr #30
      d0:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7954746e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
      dc:	79546570 	ldmdbvc	r4, {r4, r5, r6, r8, sl, sp, lr}^
      e0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    if (huart->hdmarx != NULL)
      e4:	534c0066 	movtpl	r0, #49254	; 0xc066
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	61745345 	cmnvs	r4, r5, asr #6
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	52006574 	andpl	r6, r0, #116, 10	; 0x1d000000
      f0:	4f5f4343 	svcmi	0x005f4343
    huart->TxXferCount = 0x00U;
      f4:	6e496373 	mcrvs	3, 2, r6, cr9, cr3, {3}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
    huart->gState  = HAL_UART_STATE_READY;
      fc:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    huart->RxState = HAL_UART_STATE_READY;
     100:	55504300 	ldrbpl	r4, [r0, #-768]	; 0xfffffd00
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	74004449 	strvc	r4, [r0], #-1097	; 0xfffffbb7
    HAL_UART_AbortCpltCallback(huart);
     108:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
     10c:	73657400 	cmnvc	r5, #0, 8
  uint32_t AbortCplt = 0x01U;
     110:	74003474 	strvc	r3, [r0], #-1140	; 0xfffffb8c
  if (AbortCplt == 0x01U)
     114:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
}
     118:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     11c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     120:	72545f54 	subsvc	r5, r4, #84, 30	; 0x150
     124:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	41007469 	tstmi	r0, r9, ror #8
     12c:	4c314248 	lfmmi	f4, 4, [r1], #-288	; 0xfffffee0
     130:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     134:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
     138:	6d615372 	stclvs	3, cr5, [r1, #-456]!	; 0xfffffe38
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	6e696c70 	mcrvs	12, 3, r6, cr9, cr0, {3}
     140:	78540067 	ldmdavc	r4, {r0, r1, r2, r5, r6}^
     144:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     14c:	53490074 	movtpl	r0, #36980	; 0x9074
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	52005241 	andpl	r5, r0, #268435460	; 0x10000004
     154:	4f5f4343 	svcmi	0x005f4343
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	6e496373 	mcrvs	3, 2, r6, cr9, cr3, {3}
     15c:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     164:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     168:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     16c:	48005254 	stmdami	r0, {r2, r4, r6, r9, ip, lr}
     170:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffff537 <_estack+0xdfffe2ff>
}
     174:	5f545241 	svcpl	0x00545241
     178:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     17c:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
     180:	545f5953 	ldrbpl	r5, [pc], #-2387	; 188 <_Min_Heap_Size-0x678>
}
     184:	58525f58 	ldmdapl	r2, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	50544700 	subspl	r4, r4, r0, lsl #14
     18c:	61420052 	qdaddvs	r0, r2, r2
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	61526475 	cmpvs	r2, r5, ror r4
     194:	58006574 	stmdapl	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
     198:	4d726566 	cfldr64mi	mvdx6, [r2, #-408]!	; 0xfffffe68
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	6c704331 	ldclvs	3, cr4, [r0], #-196	; 0xffffff3c
     1a0:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     1a8:	5750006b 	ldrbpl	r0, [r0, -fp, rrx]
     1ac:	79545f52 	ldmdbvc	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     1b4:	6d740066 	ldclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	67657270 			; <UNDEFINED> instruction: 0x67657270
     1bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     1c0:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     1c8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	43435200 	movtmi	r5, #12800	; 0x3200
     1d0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1d4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     1dc:	6c614872 	stclvs	8, cr4, [r1], #-456	; 0xfffffe38
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
     1e4:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     1e8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	5470006b 	ldrbtpl	r0, [r0], #-107	; 0xffffff95
     1f0:	66754278 			; <UNDEFINED> instruction: 0x66754278
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     1f8:	42504100 	subsmi	r4, r0, #0, 2
     1fc:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	65500052 	ldrbvs	r0, [r0, #-82]	; 0xffffffae
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     208:	00636e49 	rsbeq	r6, r3, r9, asr #28
     20c:	5349534c 	movtpl	r5, #37708	; 0x934c
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     214:	6d654d00 	stclvs	13, cr4, [r5, #-0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	73727542 	cmnvc	r2, #276824064	; 0x10800000
     21c:	5f5f0074 	svcpl	0x005f0074
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	5f6e6974 	svcpl	0x006e6974
     228:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
  tmp = hdma->Instance->FCR;
     22c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	414d445f 	cmpmi	sp, pc, asr r4
  tmp |= hdma->Init.FIFOMode;
     234:	4154535f 	cmpmi	r4, pc, asr r3
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	455f4554 	ldrbmi	r4, [pc, #-1364]	; fffffcec <_estack+0xdfffeab4>
    tmp |= hdma->Init.FIFOThreshold;
     23c:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	49534800 	ldmdbmi	r3, {fp, lr}^
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     248:	61660065 	cmnvs	r6, r5, rrx
  hdma->Instance->FCR = tmp;
     24c:	5f746c75 	svcpl	0x00746c75
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	6c616e75 	stclvs	14, cr6, [r1], #-468	; 0xfffffe2c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	5f6e6769 	svcpl	0x006e6769
     258:	67697274 			; <UNDEFINED> instruction: 0x67697274
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00726567 	rsbseq	r6, r2, r7, ror #10
  hdma->State = HAL_DMA_STATE_READY;
     260:	43495348 	movtmi	r5, #37704	; 0x9348
     264:	62696c61 	rsbvs	r6, r9, #24832	; 0x6100
  return HAL_OK;
     268:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     26c:	61566e6f 	cmpvs	r6, pc, ror #28
     270:	0065756c 	rsbeq	r7, r5, ip, ror #10
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6e69616d 	powvsez	f6, f1, #5.0
     278:	6f745300 	svcvs	0x00745300
     27c:	74694270 	strbtvc	r4, [r9], #-624	; 0xfffffd90
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	4c500073 	mrrcmi	0, 7, r0, r0, cr3	; <UNPREDICTABLE>
        hdma->State = HAL_DMA_STATE_READY;
     284:	4746434c 	strbmi	r4, [r6, -ip, asr #6]
        return HAL_ERROR; 
     288:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
    return HAL_ERROR;
     28c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     298:	00737365 	rsbseq	r7, r3, r5, ror #6
      tickstart = HAL_GetTick();
     29c:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	72615000 	rsbvc	r5, r1, #0
     2a4:	00746e65 	rsbseq	r6, r4, r5, ror #28
     2a8:	6b636f4c 	blvs	18dbfe0 <_Min_Heap_Size+0x18db7e0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     2b0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     2b4:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
          return HAL_TIMEOUT;
     2b8:	5f455441 	svcpl	0x00455441
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     2c0:	5f5f0059 	svcpl	0x005f0059
     2c4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    FlagStatus       pwrclkchanged = RESET;
     2c8:	745f3233 	ldrbvc	r3, [pc], #-563	; 2d0 <_Min_Heap_Size-0x530>
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	72694400 	rsbvc	r4, r9, #0, 8
     2d0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     2d4:	53006e6f 	movwpl	r6, #3695	; 0xe6f
      tickstart = HAL_GetTick();
     2d8:	545f4243 	ldrbpl	r4, [pc], #-579	; 2e0 <_Min_Heap_Size-0x520>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00657079 	rsbeq	r7, r5, r9, ror r0
     2e0:	616d6468 	cmnvs	sp, r8, ror #8
     2e4:	6c007872 	stcvs	8, cr7, [r0], {114}	; 0x72
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     2ec:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
          return HAL_TIMEOUT;
     2f0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	43435200 	movtmi	r5, #12800	; 0x3200
     2f8:	6b6c435f 	blvs	1b1107c <_Min_Heap_Size+0x1b1087c>
     2fc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     300:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     304:	48007463 	stmdami	r0, {r0, r1, r5, r6, sl, ip, sp, lr}
     308:	74534553 	ldrbvc	r4, [r3], #-1363	; 0xfffffaad
     30c:	00657461 	rsbeq	r7, r5, r1, ror #8
     310:	5f4c4148 	svcpl	0x004c4148
      tickstart = HAL_GetTick();
     314:	5f414d44 	svcpl	0x00414d44
     318:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     320:	00544553 	subseq	r4, r4, r3, asr r5
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
     328:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     32c:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 334 <_Min_Heap_Size-0x4cc>
     330:	4f454d49 	svcmi	0x00454d49
          return HAL_TIMEOUT;
     334:	68005455 	stmdavs	r0, {r0, r2, r4, r6, sl, ip, lr}
    if(pwrclkchanged == SET)
     338:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	74530031 	ldrbvc	r0, [r3], #-49	; 0xffffffcf
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     344:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	41480078 	hvcmi	32776	; 0x8008
     34c:	4b4f5f4c 	blmi	13d8084 <_Min_Heap_Size+0x13d7884>
     350:	4f545600 	svcmi	0x00545600
     354:	2f2e0052 	svccs	0x002e0052
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     360:	2f6e6f69 	svccs	0x006e6f69
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	6e69616d 	powvsez	f6, f1, #5.0
     368:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
     370:	7a695372 	bvc	1a55140 <_Min_Heap_Size+0x1a54940>
     374:	78540065 	ldmdavc	r4, {r0, r2, r5, r6}^
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     37c:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     380:	4c4c5000 	marmi	acc0, r5, ip
     384:	43533249 	cmpmi	r3, #-1879048188	; 0x90000004
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00524746 	subseq	r4, r2, r6, asr #14
     38c:	52534349 	subspl	r4, r3, #603979777	; 0x24000001
        __HAL_RCC_PLL_DISABLE();
     390:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     394:	414d445f 	cmpmi	sp, pc, asr r4
        tickstart = HAL_GetTick();
     398:	4154535f 	cmpmi	r4, pc, asr r3
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	415f4554 	cmpmi	pc, r4, asr r5	; <UNPREDICTABLE>
     3a0:	54524f42 	ldrbpl	r4, [r2], #-3906	; 0xfffff0be
     3a4:	52494100 	subpl	r4, r9, #0, 2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	44005243 	strmi	r5, [r0], #-579	; 0xfffffdbd
     3ac:	00525346 	subseq	r5, r2, r6, asr #6
            return HAL_TIMEOUT;
     3b0:	6f727245 	svcvs	0x00727245
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	646f4372 	strbtvs	r4, [pc], #-882	; 3bc <_Min_Heap_Size-0x444>
     3b8:	734f0065 	movtvc	r0, #61541	; 0xf065
     3bc:	6c6c6963 			; <UNDEFINED> instruction: 0x6c6c6963
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
     3c4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     3c8:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	4d005241 	sfmmi	f5, 4, [r0, #-260]	; 0xfffffefc
     3d0:	61446d65 	cmpvs	r4, r5, ror #26
     3d4:	6c416174 	stfvse	f6, [r1], {116}	; 0x74
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	6d6e6769 	stclvs	7, cr6, [lr, #-420]!	; 0xfffffe5c
     3dc:	00746e65 	rsbseq	r6, r4, r5, ror #28
     3e0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     3e8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     3ec:	50410066 	subpl	r0, r1, r6, rrx
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	504c3242 	subpl	r3, ip, r2, asr #4
     3f4:	00524e45 	subseq	r4, r2, r5, asr #28
     3f8:	52464d4d 	subpl	r4, r6, #4928	; 0x1340
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	6f687300 	svcvs	0x00687300
     400:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     404:	4100746e 	tstmi	r0, lr, ror #8
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	4c434248 	sfmmi	f4, 2, [r3], {72}	; 0x48
     40c:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
     410:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
     414:	72724500 	rsbsvc	r4, r2, #0, 10
     418:	485f726f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     41c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     420:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     424:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 42c <_Min_Heap_Size-0x3d4>
        __HAL_RCC_PLL_ENABLE();
     428:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     42c:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
        tickstart = HAL_GetTick();
     430:	4145525f 	cmpmi	r5, pc, asr r2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	48005944 	stmdami	r0, {r2, r6, r8, fp, ip, lr}
     438:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
     43c:	0074696e 	rsbseq	r6, r4, lr, ror #18
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	5f4c4148 	svcpl	0x004c4148
     444:	5f414d44 	svcpl	0x00414d44
            return HAL_TIMEOUT;
     448:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
  return HAL_OK;
     44c:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
        __HAL_RCC_PLL_DISABLE();
     450:	5f005953 	svcpl	0x00005953
     454:	5f6f695f 	svcpl	0x006f695f
        tickstart = HAL_GetTick();
     458:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	00726168 	rsbseq	r6, r2, r8, ror #2
     460:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     464:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	657a5f76 	ldrbvs	r5, [sl, #-3958]!	; 0xfffff08a
     46c:	745f6f72 	ldrbvc	r6, [pc], #-3954	; 474 <_Min_Heap_Size-0x38c>
            return HAL_TIMEOUT;
     470:	67676972 			; <UNDEFINED> instruction: 0x67676972
  return HAL_OK;
     474:	5f007265 	svcpl	0x00007265
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
        pll_config = RCC->PLLCFGR;
     47c:	61485f54 	cmpvs	r8, r4, asr pc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     484:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00666544 	rsbeq	r6, r6, r4, asr #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0044454b 	subeq	r4, r4, fp, asr #10
     49c:	33424841 	movtcc	r4, #10305	; 0x2841
     4a0:	00524e45 	subseq	r4, r2, r5, asr #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	74736e49 	ldrbtvc	r6, [r3], #-3657	; 0xfffff1b7
     4a8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     4b0:	72724572 	rsbsvc	r4, r2, #478150656	; 0x1c800000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	6143726f 	cmpvs	r3, pc, ror #4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	61626c6c 	cmnvs	r2, ip, ror #24
     4bc:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
  return HAL_OK;
     4c0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffff887 <_estack+0xdfffe64f>
}
     4c4:	5f545241 	svcpl	0x00545241
        return HAL_ERROR;
     4c8:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
        return HAL_ERROR;
     4cc:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
}
     4d0:	545f5953 	ldrbpl	r5, [pc], #-2387	; 4d8 <_Min_Heap_Size-0x328>
        return HAL_ERROR;
     4d4:	48410058 	stmdami	r1, {r3, r4, r6}^
          return HAL_ERROR;
     4d8:	504c3242 	subpl	r3, ip, r2, asr #4
     4dc:	00524e45 	subseq	r4, r2, r5, asr #28
     4e0:	616d6468 	cmnvs	sp, r8, ror #8
     4e4:	52007874 	andpl	r7, r0, #116, 16	; 0x740000
     4e8:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
     4ec:	6e496b6c 	vmlsvs.f64	d22, d9, d28
     4f0:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     4f4:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     4f8:	50410066 	subpl	r0, r1, r6, rrx
     4fc:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     500:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     504:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
     508:	41504300 	cmpmi	r0, r0, lsl #6
     50c:	52005243 	andpl	r5, r0, #805306372	; 0x30000004
     510:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     514:	30444556 	subcc	r4, r4, r6, asr r5
     518:	53455200 	movtpl	r5, #20992	; 0x5200
     51c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     520:	52003144 	andpl	r3, r0, #68, 2
     524:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     528:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
     52c:	53455200 	movtpl	r5, #20992	; 0x5200
     530:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     534:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     538:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     53c:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     540:	53455200 	movtpl	r5, #20992	; 0x5200
     544:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     548:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     54c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     550:	36444556 			; <UNDEFINED> instruction: 0x36444556
     554:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     558:	48314d72 	ldmdami	r1!, {r1, r4, r5, r6, r8, sl, fp, lr}
     55c:	43666c61 	cmnmi	r6, #24832	; 0x6100
     560:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
     564:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     568:	006b6361 	rsbeq	r6, fp, r1, ror #6
     56c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     570:	006c656e 	rsbeq	r6, ip, lr, ror #10
     574:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     578:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     57c:	61686320 	cmnvs	r8, r0, lsr #6
     580:	48530072 	ldmdami	r3, {r1, r4, r5, r6}^
     584:	00525343 	subseq	r5, r2, r3, asr #6
     588:	20554e47 	subscs	r4, r5, r7, asr #28
     58c:	20373143 	eorscs	r3, r7, r3, asr #2
     590:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     594:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
     598:	30313230 	eorscc	r3, r1, r0, lsr r2
     59c:	20343238 	eorscs	r3, r4, r8, lsr r2
     5a0:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
     5a4:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
     5a8:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
     5ac:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
     5b0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
     5b4:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
     5b8:	6d2d2034 	stcvs	0, cr2, [sp, #-208]!	; 0xffffff30
     5bc:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     5c0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
     5c4:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
     5c8:	34767066 	ldrbtcc	r7, [r6], #-102	; 0xffffff9a
     5cc:	2d70732d 	ldclcs	3, cr7, [r0, #-180]!	; 0xffffff4c
     5d0:	20363164 	eorscs	r3, r6, r4, ror #2
     5d4:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     5d8:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     5dc:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     5e0:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
     5e4:	616d2d20 	cmnvs	sp, r0, lsr #26
     5e8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     5ec:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     5f0:	6d2d6537 	cfstr32vs	mvfx6, [sp, #-220]!	; 0xffffff24
     5f4:	2070662b 	rsbscs	r6, r0, fp, lsr #12
     5f8:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     5fc:	61776467 	cmnvs	r7, r7, ror #8
     600:	322d6672 	eorcc	r6, sp, #119537664	; 0x7200000
     604:	674f2d20 	strbvs	r2, [pc, -r0, lsr #26]
     608:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
     60c:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
     610:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     614:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     618:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
     61c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     620:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
     624:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     628:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     62c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     630:	414d445f 	cmpmi	sp, pc, asr r4
     634:	6174535f 	cmnvs	r4, pc, asr r3
     638:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
     63c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     640:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     644:	504c3342 	subpl	r3, ip, r2, asr #6
     648:	00524e45 	subseq	r4, r2, r5, asr #28
     64c:	534c4c50 	movtpl	r4, #52304	; 0xcc50
     650:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     654:	5f5f0065 	svcpl	0x005f0065
     658:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     65c:	48005f5f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}
     660:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffa27 <_estack+0xdfffe7ef>
     664:	5f545241 	svcpl	0x00545241
     668:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     66c:	52455f45 	subpl	r5, r5, #276	; 0x114
     670:	00524f52 	subseq	r4, r2, r2, asr pc
     674:	32425041 	subcc	r5, r2, #65	; 0x41
     678:	00524e45 	subseq	r4, r2, r5, asr #28
     67c:	33424841 	movtcc	r4, #10305	; 0x2841
     680:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     684:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 68c <_Min_Heap_Size-0x174>
     688:	485f414d 	ldmdami	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
     68c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     690:	70795465 	rsbsvc	r5, r9, r5, ror #8
     694:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     698:	46494600 	strbmi	r4, [r9], -r0, lsl #12
     69c:	646f4d4f 	strbtvs	r4, [pc], #-3407	; 6a4 <_Min_Heap_Size-0x15c>
     6a0:	6f570065 	svcvs	0x00570065
     6a4:	654c6472 	strbvs	r6, [ip, #-1138]	; 0xfffffb8e
     6a8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     6ac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     6b0:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     6b4:	4100524f 	tstmi	r0, pc, asr #4
     6b8:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     6bc:	6c00524e 	sfmvs	f5, 4, [r0], {78}	; 0x4e
     6c0:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     6c4:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
     6c8:	4600656c 	strmi	r6, [r0], -ip, ror #10
     6cc:	544f4649 	strbpl	r4, [pc], #-1609	; 6d4 <_Min_Heap_Size-0x12c>
     6d0:	73657268 	cmnvc	r5, #104, 4	; 0x80000006
     6d4:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
     6d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     6dc:	4343525f 	movtmi	r5, #12895	; 0x325f
     6e0:	63734f5f 	cmnvs	r3, #380	; 0x17c
     6e4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     6e8:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
     6ec:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 6f4 <_Min_Heap_Size-0x10c>
     6f0:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     6f4:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff7fc <_estack+0xdfffe5c4>
     6f8:	31746e69 	cmncc	r4, r9, ror #28
     6fc:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     700:	5f4c4148 	svcpl	0x004c4148
     704:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     708:	4154535f 	cmpmi	r4, pc, asr r3
     70c:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     710:	5f595355 	svcpl	0x00595355
     714:	41005852 	tstmi	r0, r2, asr r8
     718:	52324248 	eorspl	r4, r2, #72, 4	; 0x80000004
     71c:	00525453 	subseq	r5, r2, r3, asr r4
     720:	496d654d 	stmdbmi	sp!, {r0, r2, r3, r6, r8, sl, sp, lr}^
     724:	5000636e 	andpl	r6, r0, lr, ror #6
     728:	70697265 	rsbvc	r7, r9, r5, ror #4
     72c:	72754268 	rsbsvc	r4, r5, #104, 4	; 0x80000006
     730:	41007473 	tstmi	r0, r3, ror r4
     734:	43324250 	teqmi	r2, #80, 4
     738:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
     73c:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
     740:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
     744:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     748:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     74c:	6f435f6b 	svcvs	0x00435f6b
     750:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     754:	54444e00 	strbpl	r4, [r4], #-3584	; 0xfffff200
     758:	41480052 	qdaddmi	r0, r2, r8
     75c:	41555f4c 	cmpmi	r5, ip, asr #30
     760:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     764:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     768:	5345525f 	movtpl	r5, #21087	; 0x525f
     76c:	41005445 	tstmi	r0, r5, asr #8
     770:	00525346 	subseq	r5, r2, r6, asr #6
     774:	5f414d44 	svcpl	0x00414d44
     778:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     77c:	545f6d61 	ldrbpl	r6, [pc], #-3425	; 784 <_Min_Heap_Size-0x7c>
     780:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     784:	41006665 	tstmi	r0, r5, ror #12
     788:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
     78c:	7300524e 	movwvc	r5, #590	; 0x24e
     790:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     794:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     798:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     79c:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     7a0:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     7a4:	00307473 	eorseq	r7, r0, r3, ror r4
     7a8:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     7ac:	314d0031 	cmpcc	sp, r1, lsr r0
     7b0:	50005241 	andpl	r5, r0, r1, asr #4
     7b4:	70697265 	rsbvc	r7, r9, r5, ror #4
     7b8:	74614468 	strbtvc	r4, [r1], #-1128	; 0xfffffb98
     7bc:	696c4161 	stmdbvs	ip!, {r0, r5, r6, r8, lr}^
     7c0:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
     7c4:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
     7c8:	5f545241 	svcpl	0x00545241
     7cc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     7d0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     7d4:	00666544 	rsbeq	r6, r6, r4, asr #10
     7d8:	47435353 	smlsldmi	r5, r3, r3, r3
     7dc:	41480052 	qdaddmi	r0, r2, r8
     7e0:	41555f4c 	cmpmi	r5, ip, asr #30
     7e4:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
     7e8:	70795478 	rsbsvc	r5, r9, r8, ror r4
     7ec:	70795465 	rsbsvc	r5, r9, r5, ror #8
     7f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     7f4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     7f8:	4343525f 	movtmi	r5, #12895	; 0x325f
     7fc:	6f6c435f 	svcvs	0x006c435f
     800:	6f436b63 	svcvs	0x00436b63
     804:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     808:	43444200 	movtmi	r4, #16896	; 0x4200
     80c:	41480052 	qdaddmi	r0, r2, r8
     810:	41555f4c 	cmpmi	r5, ip, asr #30
     814:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     818:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     81c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     820:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     824:	46774800 	ldrbtmi	r4, [r7], -r0, lsl #16
     828:	43776f6c 	cmnmi	r7, #108, 30	; 0x1b0
     82c:	48006c74 	stmdami	r0, {r2, r4, r5, r6, sl, fp, sp, lr}
     830:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 838 <_Min_Heap_Size+0x38>
     834:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     838:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     83c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     840:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     844:	78527000 	ldmdavc	r2, {ip, sp, lr}^
     848:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     84c:	00727450 	rsbseq	r7, r2, r0, asr r4
     850:	5f434352 	svcpl	0x00434352
     854:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     858:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     85c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     860:	43006665 	movwmi	r6, #1637	; 0x665
     864:	6b636f6c 	blvs	18dc61c <_Min_Heap_Size+0x18dbe1c>
     868:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     86c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     870:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     874:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     878:	5f455441 	svcpl	0x00455441
     87c:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     880:	42484100 	submi	r4, r8, #0, 2
     884:	524e4531 	subpl	r4, lr, #205520896	; 0xc400000
     888:	58785200 	ldmdapl	r8!, {r9, ip, lr}^
     88c:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     890:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     894:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     898:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     89c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     8a0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     8a4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     8a8:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     8ac:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     8b0:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     8b4:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     8b8:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     8bc:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     8c0:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     8c4:	74735c73 	ldrbtvc	r5, [r3], #-3187	; 0xfffff38d
     8c8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     8cc:	72353034 	eorsvc	r3, r5, #52	; 0x34
     8d0:	61425c67 	cmpvs	r2, r7, ror #24
     8d4:	654d6572 	strbvs	r6, [sp, #-1394]	; 0xfffffa8e
     8d8:	006c6174 	rsbeq	r6, ip, r4, ror r1
     8dc:	5f4c4148 	svcpl	0x004c4148
     8e0:	4f4c4e55 	svcmi	0x004c4e55
     8e4:	44454b43 	strbmi	r4, [r5], #-2883	; 0xfffff4bd
     8e8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     8ec:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     8f0:	78520059 	ldmdavc	r2, {r0, r3, r4, r6}^
     8f4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     8f8:	46480065 	strbmi	r0, [r8], -r5, rrx
     8fc:	52005253 	andpl	r5, r0, #805306373	; 0x30000005
     900:	70656365 	rsbvc	r6, r5, r5, ror #6
     904:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     908:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     90c:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     910:	6f624172 	svcvs	0x00624172
     914:	61437472 	hvcvs	14146	; 0x3742
     918:	61626c6c 	cmnvs	r2, ip, ror #24
     91c:	58006b63 	stmdapl	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     920:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     924:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
     928:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     92c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     930:	475f584d 	ldrbmi	r5, [pc, -sp, asr #16]
     934:	5f4f4950 	svcpl	0x004f4950
     938:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     93c:	53595300 	cmppl	r9, #0, 6
     940:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     944:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     948:	4d4e0065 	stclmi	0, cr0, [lr, #-404]	; 0xfffffe6c
     94c:	61485f49 	cmpvs	r8, r9, asr #30
     950:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     954:	65440072 	strbvs	r0, [r4, #-114]	; 0xffffff8e
     958:	4d677562 	cfstr64mi	mvdx7, [r7, #-392]!	; 0xfffffe78
     95c:	485f6e6f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     960:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     964:	42007265 	andmi	r7, r0, #1342177286	; 0x50000006
     968:	61467375 	hvcvs	26421	; 0x6735
     96c:	5f746c75 	svcpl	0x00746c75
     970:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     974:	0072656c 	rsbseq	r6, r2, ip, ror #10
     978:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     97c:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     980:	61485152 	cmpvs	r8, r2, asr r1
     984:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     988:	73550072 	cmpvc	r5, #114	; 0x72
     98c:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     990:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     994:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     998:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     99c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     9a0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     9a4:	52495f54 	subpl	r5, r9, #84, 30	; 0x150
     9a8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     9ac:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     9b0:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     9b4:	616e614d 	cmnvs	lr, sp, asr #2
     9b8:	485f6567 	ldmdami	pc, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     9bc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     9c0:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
     9c4:	00656e69 	rsbeq	r6, r5, r9, ror #28
     9c8:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
     9cc:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
     9d0:	6f697461 	svcvs	0x00697461
     9d4:	74732f6e 	ldrbtvc	r2, [r3], #-3950	; 0xfffff092
     9d8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     9dc:	5f787834 	svcpl	0x00787834
     9e0:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
     9e4:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
     9e8:	5f565364 	svcpl	0x00565364
     9ec:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     9f0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     9f4:	5f4c4148 	svcpl	0x004c4148
     9f8:	54636e49 	strbtpl	r6, [r3], #-3657	; 0xfffff1b7
     9fc:	006b6369 	rsbeq	r6, fp, r9, ror #6
     a00:	69645f5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     a04:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     a08:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     a0c:	73610071 	cmnvc	r1, #113	; 0x71
     a10:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     a14:	6961665f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
     a18:	0064656c 	rsbeq	r6, r4, ip, ror #10
     a1c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
     a20:	43565300 	cmpmi	r6, #0, 6
     a24:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     a28:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a2c:	73795300 	cmnvc	r9, #0, 6
     a30:	6b636954 	blvs	18daf88 <_Min_Heap_Size+0x18da788>
     a34:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     a38:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a3c:	72614800 	rsbvc	r4, r1, #0, 16
     a40:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
     a44:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     a48:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a4c:	4c5f7265 	lfmmi	f7, 2, [pc], {101}	; 0x65
     a50:	6e656765 	cdpvs	7, 6, cr6, cr5, cr5, {3}
     a54:	2e007963 	vmlscs.f16	s14, s0, s7	; <UNPREDICTABLE>
     a58:	6f432f2e 	svcvs	0x00432f2e
     a5c:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     a60:	672f6372 			; <UNDEFINED> instruction: 0x672f6372
     a64:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
     a68:	70530063 	subsvc	r0, r3, r3, rrx
     a6c:	00646565 	rsbeq	r6, r4, r5, ror #10
     a70:	5f435452 	svcpl	0x00435452
     a74:	50554b57 	subspl	r4, r5, r7, asr fp
     a78:	5152495f 	cmppl	r2, pc, asr r9
     a7c:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     a80:	5f324954 	svcpl	0x00324954
     a84:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     a88:	414d4400 	cmpmi	sp, r0, lsl #8
     a8c:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     a90:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     a94:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
     a98:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     a9c:	5f384d49 	svcpl	0x00384d49
     aa0:	545f5055 	ldrbpl	r5, [pc], #-85	; aa8 <_Min_Heap_Size+0x2a8>
     aa4:	33314d49 	teqcc	r1, #4672	; 0x1240
     aa8:	5152495f 	cmppl	r2, pc, asr r9
     aac:	5047006e 	subpl	r0, r7, lr, rrx
     ab0:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     ab4:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
     ab8:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     abc:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     ac0:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     ac4:	61657274 	smcvs	22308	; 0x5724
     ac8:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     acc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ad0:	33495053 	movtcc	r5, #36947	; 0x9053
     ad4:	5152495f 	cmppl	r2, pc, asr r9
     ad8:	4c46006e 	mcrrmi	0, 6, r0, r6, cr14
     adc:	5f485341 	svcpl	0x00485341
     ae0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ae4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     ae8:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     aec:	43006e51 	movwmi	r6, #3665	; 0xe51
     af0:	5f324e41 	svcpl	0x00324e41
     af4:	5f305852 	svcpl	0x00305852
     af8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     afc:	41535500 	cmpmi	r3, r0, lsl #10
     b00:	5f365452 	svcpl	0x00365452
     b04:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b08:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     b0c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     b10:	734d5f54 	movtvc	r5, #57172	; 0xdf54
     b14:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
     b18:	50530074 	subspl	r0, r3, r4, ror r0
     b1c:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     b20:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b24:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     b28:	4b52425f 	blmi	14914ac <_Min_Heap_Size+0x1490cac>
     b2c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     b30:	495f3231 	ldmdbmi	pc, {r0, r4, r5, r9, ip, sp}^	; <UNPREDICTABLE>
     b34:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b38:	5f4c4148 	svcpl	0x004c4148
     b3c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     b40:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
     b44:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
     b48:	44007469 	strmi	r7, [r0], #-1129	; 0xfffffb97
     b4c:	5f32414d 	svcpl	0x0032414d
     b50:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     b54:	5f356d61 	svcpl	0x00356d61
     b58:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b5c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     b60:	52545f31 	subspl	r5, r4, #49, 30	; 0xc4
     b64:	4f435f47 	svcmi	0x00435f47
     b68:	49545f4d 	ldmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     b6c:	5f31314d 	svcpl	0x0031314d
     b70:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b74:	73795300 	cmnvc	r9, #0, 6
     b78:	6b636954 	blvs	18db0d0 <_Min_Heap_Size+0x18da8d0>
     b7c:	5152495f 	cmppl	r2, pc, asr r9
     b80:	5355006e 	cmppl	r5, #110	; 0x6e
     b84:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     b88:	5152495f 	cmppl	r2, pc, asr r9
     b8c:	5047006e 	subpl	r0, r7, lr, rrx
     b90:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     b94:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     b98:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     b9c:	44006665 	strmi	r6, [r0], #-1637	; 0xfffff99b
     ba0:	5f31414d 	svcpl	0x0031414d
     ba4:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     ba8:	5f326d61 	svcpl	0x00326d61
     bac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     bb0:	414d4400 	cmpmi	sp, r0, lsl #8
     bb4:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     bb8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     bbc:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     bc0:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     bc4:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
     bc8:	5f4f4950 	svcpl	0x004f4950
     bcc:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
     bd0:	49007469 	stmdbmi	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
     bd4:	5f314332 	svcpl	0x00314332
     bd8:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     bdc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     be0:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     be4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     be8:	4300656c 	movwmi	r6, #1388	; 0x56c
     bec:	5f324e41 	svcpl	0x00324e41
     bf0:	5f454353 	svcpl	0x00454353
     bf4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     bf8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     bfc:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     c00:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     c04:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     c08:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     c0c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     c10:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     c14:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
     c18:	5f4f4950 	svcpl	0x004f4950
     c1c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     c20:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     c24:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     c28:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     c2c:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     c30:	5f344d49 	svcpl	0x00344d49
     c34:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c38:	41535500 	cmpmi	r3, r0, lsl #10
     c3c:	5f325452 	svcpl	0x00325452
     c40:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c44:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     c48:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     c4c:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
     c50:	49007469 	stmdbmi	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
     c54:	5f314332 	svcpl	0x00314332
     c58:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     c5c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c60:	314d4954 	cmpcc	sp, r4, asr r9
     c64:	5f43435f 	svcpl	0x0043435f
     c68:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c6c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     c70:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     c74:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c78:	314e4143 	cmpcc	lr, r3, asr #2
     c7c:	5f58545f 	svcpl	0x0058545f
     c80:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c84:	414d4400 	cmpmi	sp, r0, lsl #8
     c88:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     c8c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     c90:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     c94:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     c98:	5f384d49 	svcpl	0x00384d49
     c9c:	5f475254 	svcpl	0x00475254
     ca0:	5f4d4f43 	svcpl	0x004d4f43
     ca4:	314d4954 	cmpcc	sp, r4, asr r9
     ca8:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     cac:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     cb0:	5f32414d 	svcpl	0x0032414d
     cb4:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     cb8:	5f376d61 	svcpl	0x00376d61
     cbc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     cc0:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     cc4:	5f53465f 	svcpl	0x0053465f
     cc8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ccc:	6e6f4e00 	cdpvs	14, 6, cr4, cr15, cr0, {0}
     cd0:	6b73614d 	blvs	1cd920c <_Min_Heap_Size+0x1cd8a0c>
     cd4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     cd8:	5f746e49 	svcpl	0x00746e49
     cdc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ce0:	44575700 	ldrbmi	r5, [r7], #-1792	; 0xfffff900
     ce4:	52495f47 	subpl	r5, r9, #284	; 0x11c
     ce8:	4f006e51 	svcmi	0x00006e51
     cec:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     cf0:	4b575f53 	blmi	15d8a44 <_Min_Heap_Size+0x15d8244>
     cf4:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     cf8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     cfc:	6f6d654d 	svcvs	0x006d654d
     d00:	614d7972 	hvcvs	55186	; 0xd792
     d04:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     d08:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     d0c:	5152495f 	cmppl	r2, pc, asr r9
     d10:	4154006e 	cmpmi	r4, lr, rrx
     d14:	535f504d 	cmppl	pc, #77	; 0x4d
     d18:	504d4154 	subpl	r4, sp, r4, asr r1
     d1c:	5152495f 	cmppl	r2, pc, asr r9
     d20:	4143006e 	cmpmi	r3, lr, rrx
     d24:	535f314e 	cmppl	pc, #-2147483629	; 0x80000013
     d28:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
     d2c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d30:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     d34:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     d38:	306d6165 	rsbcc	r6, sp, r5, ror #2
     d3c:	5152495f 	cmppl	r2, pc, asr r9
     d40:	434c006e 	movtmi	r0, #49262	; 0xc06e
     d44:	4900524b 	stmdbmi	r0, {r0, r1, r3, r6, r9, ip, lr}
     d48:	5f324332 	svcpl	0x00324332
     d4c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     d50:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d54:	4550534f 	ldrbmi	r5, [r0, #-847]	; 0xfffffcb1
     d58:	00524445 	subseq	r4, r2, r5, asr #8
     d5c:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     d60:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     d64:	5152495f 	cmppl	r2, pc, asr r9
     d68:	4155006e 	cmpmi	r5, lr, rrx
     d6c:	5f355452 	svcpl	0x00355452
     d70:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d74:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     d78:	52425f31 	subpl	r5, r2, #49, 30	; 0xc4
     d7c:	49545f4b 	ldmdbmi	r4, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
     d80:	495f394d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, ip, sp}^	; <UNPREDICTABLE>
     d84:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d88:	374d4954 	smlsldcc	r4, sp, r4, r9
     d8c:	5152495f 	cmppl	r2, pc, asr r9
     d90:	544f006e 	strbpl	r0, [pc], #-110	; d98 <_Min_Heap_Size+0x598>
     d94:	53485f47 	movtpl	r5, #36679	; 0x8f47
     d98:	5152495f 	cmppl	r2, pc, asr r9
     d9c:	5550006e 	ldrbpl	r0, [r0, #-110]	; 0xffffff92
     da0:	00524450 	subseq	r4, r2, r0, asr r4
     da4:	31495053 	qdaddcc	r5, r3, r9
     da8:	5152495f 	cmppl	r2, pc, asr r9
     dac:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
     db0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     db4:	5152495f 	cmppl	r2, pc, asr r9
     db8:	5046006e 	subpl	r0, r6, lr, rrx
     dbc:	52495f55 	subpl	r5, r9, #340	; 0x154
     dc0:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     dc4:	34545241 	ldrbcc	r5, [r4], #-577	; 0xfffffdbf
     dc8:	5152495f 	cmppl	r2, pc, asr r9
     dcc:	6c41006e 	mcrrvs	0, 6, r0, r1, cr14
     dd0:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     dd4:	00657461 	rsbeq	r7, r5, r1, ror #8
     dd8:	5f47544f 	svcpl	0x0047544f
     ddc:	575f5346 	ldrbpl	r5, [pc, -r6, asr #6]
     de0:	5f50554b 	svcpl	0x0050554b
     de4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     de8:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     dec:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     df0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     df4:	364d4954 			; <UNDEFINED> instruction: 0x364d4954
     df8:	4341445f 	movtmi	r4, #5215	; 0x145f
     dfc:	5152495f 	cmppl	r2, pc, asr r9
     e00:	3249006e 	subcc	r0, r9, #110	; 0x6e
     e04:	455f3243 	ldrbmi	r3, [pc, #-579]	; bc9 <_Min_Heap_Size+0x3c9>
     e08:	52495f56 	subpl	r5, r9, #344	; 0x158
     e0c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     e10:	5f31414d 	svcpl	0x0031414d
     e14:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     e18:	5f316d61 	svcpl	0x00316d61
     e1c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e20:	414d4400 	cmpmi	sp, r0, lsl #8
     e24:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     e28:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     e2c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     e30:	43006e51 	movwmi	r6, #3665	; 0xe51
     e34:	5f324e41 	svcpl	0x00324e41
     e38:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     e3c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e40:	6c6c7550 	cfstr64vs	mvdx7, [ip], #-320	; 0xfffffec0
     e44:	414d4400 	cmpmi	sp, r0, lsl #8
     e48:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     e4c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     e50:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     e54:	52006e51 	andpl	r6, r0, #1296	; 0x510
     e58:	415f4354 	cmpmi	pc, r4, asr r3	; <UNPREDICTABLE>
     e5c:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
     e60:	5152495f 	cmppl	r2, pc, asr r9
     e64:	3249006e 	subcc	r0, r9, #110	; 0x6e
     e68:	455f3343 	ldrbmi	r3, [pc, #-835]	; b2d <_Min_Heap_Size+0x32d>
     e6c:	52495f52 	subpl	r5, r9, #328	; 0x148
     e70:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     e74:	31495458 	cmpcc	r9, r8, asr r4
     e78:	30315f35 	eorscc	r5, r1, r5, lsr pc
     e7c:	5152495f 	cmppl	r2, pc, asr r9
     e80:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     e84:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     e88:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e8c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     e90:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     e94:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e98:	5f4c4148 	svcpl	0x004c4148
     e9c:	4349564e 	movtmi	r5, #38478	; 0x964e
     ea0:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
     ea4:	6f697250 	svcvs	0x00697250
     ea8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     eac:	474e5200 	strbmi	r5, [lr, -r0, lsl #4]
     eb0:	5152495f 	cmppl	r2, pc, asr r9
     eb4:	4143006e 	cmpmi	r3, lr, rrx
     eb8:	525f324e 	subspl	r3, pc, #-536870908	; 0xe0000004
     ebc:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     ec0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ec4:	5f434441 	svcpl	0x00434441
     ec8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ecc:	44565000 	ldrbmi	r5, [r6], #-0
     ed0:	5152495f 	cmppl	r2, pc, asr r9
     ed4:	544f006e 	strbpl	r0, [pc], #-110	; edc <_Min_Heap_Size+0x6dc>
     ed8:	52455059 	subpl	r5, r5, #89	; 0x59
     edc:	4d534600 	ldclmi	6, cr4, [r3, #-0]
     ee0:	52495f43 	subpl	r5, r9, #268	; 0x10c
     ee4:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     ee8:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
     eec:	5f434956 	svcpl	0x00434956
     ef0:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
     ef4:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
     ef8:	58450051 	stmdapl	r5, {r0, r4, r6}^
     efc:	5f304954 	svcpl	0x00304954
     f00:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f04:	414d4400 	cmpmi	sp, r0, lsl #8
     f08:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     f0c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     f10:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     f14:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     f18:	5f32414d 	svcpl	0x0032414d
     f1c:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     f20:	5f366d61 	svcpl	0x00366d61
     f24:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f28:	62654400 	rsbvs	r4, r5, #0, 8
     f2c:	6f4d6775 	svcvs	0x004d6775
     f30:	6f74696e 	svcvs	0x0074696e
     f34:	52495f72 	subpl	r5, r9, #456	; 0x1c8
     f38:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     f3c:	5f334332 	svcpl	0x00334332
     f40:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     f44:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f48:	5f4c4148 	svcpl	0x004c4148
     f4c:	4349564e 	movtmi	r5, #38478	; 0x964e
     f50:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
     f54:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     f58:	00515249 	subseq	r5, r1, r9, asr #4
     f5c:	5f434352 	svcpl	0x00434352
     f60:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f64:	414d4400 	cmpmi	sp, r0, lsl #8
     f68:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     f6c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     f70:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     f74:	42006e51 	andmi	r6, r0, #1296	; 0x510
     f78:	00525253 	subseq	r5, r2, r3, asr r2
     f7c:	4f495047 	svcmi	0x00495047
     f80:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     f84:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     f88:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     f8c:	50555f31 	subspl	r5, r5, r1, lsr pc
     f90:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     f94:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
     f98:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f9c:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     fa0:	2f65726f 	svccs	0x0065726f
     fa4:	2f637253 	svccs	0x00637253
     fa8:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     fac:	00632e74 	rsbeq	r2, r3, r4, ror lr
     fb0:	5f47544f 	svcpl	0x0047544f
     fb4:	455f5348 	ldrbmi	r5, [pc, #-840]	; c74 <_Min_Heap_Size+0x474>
     fb8:	4f5f3150 	svcmi	0x005f3150
     fbc:	495f5455 	ldmdbmi	pc, {r0, r2, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     fc0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fc4:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
     fc8:	41430052 	qdaddmi	r0, r2, r3
     fcc:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     fd0:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     fd4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fd8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     fdc:	5f355f39 	svcpl	0x00355f39
     fe0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fe4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     fe8:	43435f38 	movtmi	r5, #16184	; 0x3f38
     fec:	5152495f 	cmppl	r2, pc, asr r9
     ff0:	4453006e 	ldrbmi	r0, [r3], #-110	; 0xffffff92
     ff4:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     ff8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ffc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1000:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1004:	50006e51 	andpl	r6, r0, r1, asr lr
    1008:	53646e65 	cmnpl	r4, #1616	; 0x650
    100c:	52495f56 	subpl	r5, r9, #344	; 0x158
    1010:	4f006e51 	svcmi	0x00006e51
    1014:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    1018:	50455f53 	subpl	r5, r5, r3, asr pc
    101c:	4e495f31 	mcrmi	15, 2, r5, cr9, cr1, {1}
    1020:	5152495f 	cmppl	r2, pc, asr r9
    1024:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    1028:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
    102c:	61657274 	smcvs	22308	; 0x5724
    1030:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    1034:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1038:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    103c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1040:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
    1044:	5152495f 	cmppl	r2, pc, asr r9
    1048:	4148006e 	cmpmi	r8, lr, rrx
    104c:	734d5f4c 	movtvc	r5, #57164	; 0xdf4c
    1050:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
    1054:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    1058:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    105c:	72532f65 	subsvc	r2, r3, #404	; 0x194
    1060:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1064:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1068:	5f787834 	svcpl	0x00787834
    106c:	5f6c6168 	svcpl	0x006c6168
    1070:	2e70736d 	cdpcs	3, 7, cr7, cr0, cr13, {3}
    1074:	41480063 	cmpmi	r8, r3, rrx
    1078:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    107c:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1080:	4c435074 	mcrrmi	0, 7, r5, r3, cr4
    1084:	7246314b 	subvc	r3, r6, #-1073741806	; 0xc0000012
    1088:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    108c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 453 <_Min_Heap_Size-0x3ad>
    1090:	45545241 	ldrbmi	r5, [r4, #-577]	; 0xfffffdbf
    1094:	65475f78 	strbvs	r5, [r7, #-3960]	; 0xfffff088
    1098:	45785274 	ldrbmi	r5, [r8, #-628]!	; 0xfffffd8c
    109c:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    10a0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    10a4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    10a8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    10ac:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    10b0:	75615041 	strbvc	r5, [r1, #-65]!	; 0xffffffbf
    10b4:	48006573 	stmdami	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
    10b8:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
    10bc:	535f4e49 	cmppl	pc, #1168	; 0x490
    10c0:	42646e65 	rsbmi	r6, r4, #1616	; 0x650
    10c4:	6b616572 	blvs	185a694 <_Min_Heap_Size+0x1859e94>
    10c8:	616c4600 	cmnvs	ip, r0, lsl #12
    10cc:	61745367 	cmnvs	r4, r7, ror #6
    10d0:	00737574 	rsbseq	r7, r3, r4, ror r5
    10d4:	5f4c4148 	svcpl	0x004c4148
    10d8:	5f414d44 	svcpl	0x00414d44
    10dc:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    10e0:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    10e4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    10e8:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    10ec:	70754466 	rsbsvc	r4, r5, r6, ror #8
    10f0:	5f78656c 	svcpl	0x0078656c
    10f4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    10f8:	7254656c 	subsvc	r6, r4, #108, 10	; 0x1b000000
    10fc:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1100:	65747469 	ldrbvs	r7, [r4, #-1129]!	; 0xfffffb97
    1104:	72630072 	rsbvc	r0, r3, #114	; 0x72
    1108:	73746933 	cmnvc	r4, #835584	; 0xcc000
    110c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1110:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1114:	5f784554 	svcpl	0x00784554
    1118:	76457852 			; <UNDEFINED> instruction: 0x76457852
    111c:	43746e65 	cmnmi	r4, #1616	; 0x650
    1120:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1124:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1128:	5f4c4148 	svcpl	0x004c4148
    112c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1130:	6f62415f 	svcvs	0x0062415f
    1134:	65527472 	ldrbvs	r7, [r2, #-1138]	; 0xfffffb8e
    1138:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    113c:	41480065 	cmpmi	r8, r5, rrx
    1140:	41555f4c 	cmpmi	r5, ip, asr #30
    1144:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
    1148:	72457465 	subvc	r7, r5, #1694498816	; 0x65000000
    114c:	00726f72 	rsbseq	r6, r2, r2, ror pc
    1150:	74614470 	strbtvc	r4, [r1], #-1136	; 0xfffffb90
    1154:	41550061 	cmpmi	r5, r1, rrx
    1158:	455f5452 	ldrbmi	r5, [pc, #-1106]	; d0e <_Min_Heap_Size+0x50e>
    115c:	7852646e 	ldmdavc	r2, {r1, r2, r3, r5, r6, sl, sp, lr}^
    1160:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    1164:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
    1168:	52415500 	subpl	r5, r1, #0, 10
    116c:	6e455f54 	mcrvs	15, 2, r5, cr5, cr4, {2}
    1170:	54785464 	ldrbtpl	r5, [r8], #-1124	; 0xfffffb9c
    1174:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1178:	00726566 	rsbseq	r6, r2, r6, ror #10
    117c:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    1180:	69623861 	stmdbvs	r2!, {r0, r5, r6, fp, ip, sp}^
    1184:	55007374 	strpl	r7, [r0, #-884]	; 0xfffffc8c
    1188:	5f545241 	svcpl	0x00545241
    118c:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    1190:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1194:	70436576 	subvc	r6, r3, r6, ror r5
    1198:	5500746c 	strpl	r7, [r0, #-1132]	; 0xfffffb94
    119c:	5f545241 	svcpl	0x00545241
    11a0:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    11a4:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    11a8:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    11ac:	41480074 	hvcmi	32772	; 0x8004
    11b0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    11b4:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
    11b8:	5f747261 	svcpl	0x00747261
    11bc:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    11c0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 587 <_Min_Heap_Size-0x279>
    11c4:	5f545241 	svcpl	0x00545241
    11c8:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    11cc:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    11d0:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    11d4:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    11d8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    11dc:	6b636162 	blvs	18d976c <_Min_Heap_Size+0x18d8f6c>
    11e0:	616c4600 	cmnvs	ip, r0, lsl #12
    11e4:	64700067 	ldrbtvs	r0, [r0], #-103	; 0xffffff99
    11e8:	31617461 	cmncc	r1, r1, ror #8
    11ec:	74696236 	strbtvc	r6, [r9], #-566	; 0xfffffdca
    11f0:	41480073 	hvcmi	32771	; 0x8003
    11f4:	41555f4c 	cmpmi	r5, ip, asr #30
    11f8:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    11fc:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    1200:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    1204:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1208:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    120c:	6954006b 	ldmdbvs	r4, {r0, r1, r3, r5, r6}^
    1210:	74736b63 	ldrbtvc	r6, [r3], #-2915	; 0xfffff49d
    1214:	00747261 	rsbseq	r7, r4, r1, ror #4
    1218:	5f4c4148 	svcpl	0x004c4148
    121c:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1220:	6c707544 	cfldr64vs	mvdx7, [r0], #-272	; 0xfffffef0
    1224:	495f7865 	ldmdbmi	pc, {r0, r2, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1228:	0074696e 	rsbseq	r6, r4, lr, ror #18
    122c:	5f4c4148 	svcpl	0x004c4148
    1230:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1234:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1238:	0074696e 	rsbseq	r6, r4, lr, ror #18
    123c:	656b6157 	strbvs	r6, [fp, #-343]!	; 0xfffffea9
    1240:	654d7055 	strbvs	r7, [sp, #-85]	; 0xffffffab
    1244:	646f6874 	strbtvs	r6, [pc], #-2164	; 124c <_Min_Heap_Size+0xa4c>
    1248:	65724200 	ldrbvs	r4, [r2, #-512]!	; 0xfffffe00
    124c:	65446b61 	strbvs	r6, [r4, #-2913]	; 0xfffff49f
    1250:	74636574 	strbtvc	r6, [r3], #-1396	; 0xfffffa8c
    1254:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1258:	55006874 	strpl	r6, [r0, #-2164]	; 0xfffff78c
    125c:	5f545241 	svcpl	0x00545241
    1260:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    1264:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    1268:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    126c:	54495f65 	strbpl	r5, [r9], #-3941	; 0xfffff09b
    1270:	52415500 	subpl	r5, r1, #0, 10
    1274:	65535f54 	ldrbvs	r5, [r3, #-3924]	; 0xfffff0ac
    1278:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    127c:	00676966 	rsbeq	r6, r7, r6, ror #18
    1280:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1284:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    1288:	41550074 	cmpmi	r5, r4, ror r0
    128c:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1294 <_Min_Heap_Size+0xa94>
    1290:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    1294:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1298:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    129c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    12a0:	4148006b 	cmpmi	r8, fp, rrx
    12a4:	41555f4c 	cmpmi	r5, ip, asr #30
    12a8:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    12ac:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    12b0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    12b4:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    12b8:	0054495f 	subseq	r4, r4, pc, asr r9
    12bc:	5f4c4148 	svcpl	0x004c4148
    12c0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    12c4:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    12c8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    12cc:	5f5f0065 	svcpl	0x005f0065
    12d0:	45525453 	ldrbmi	r5, [r2, #-1107]	; 0xfffffbad
    12d4:	55005758 	strpl	r5, [r0, #-1880]	; 0xfffff8a8
    12d8:	5f545241 	svcpl	0x00545241
    12dc:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    12e0:	6c6e4f78 	stclvs	15, cr4, [lr], #-480	; 0xfffffe20
    12e4:	6f624179 	svcvs	0x00624179
    12e8:	61437472 	hvcvs	14146	; 0x3742
    12ec:	61626c6c 	cmnvs	r2, ip, ror #24
    12f0:	65006b63 	strvs	r6, [r0, #-2915]	; 0xfffff49d
    12f4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    12f8:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    12fc:	41480073 	hvcmi	32771	; 0x8003
    1300:	74535f4c 	ldrbvc	r5, [r3], #-3916	; 0xfffff0b4
    1304:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1308:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    130c:	00666544 	rsbeq	r6, r6, r4, asr #10
    1310:	5f4c4148 	svcpl	0x004c4148
    1314:	5f414d44 	svcpl	0x00414d44
    1318:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    131c:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    1320:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1324:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1328:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    132c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1330:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1334:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 133c <_Min_Heap_Size+0xb3c>
    1338:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    133c:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1340:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1344:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1348:	5f787834 	svcpl	0x00787834
    134c:	5f6c6168 	svcpl	0x006c6168
    1350:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1354:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1358:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 71f <_Min_Heap_Size-0xe1>
    135c:	5f545241 	svcpl	0x00545241
    1360:	70437854 	subvc	r7, r3, r4, asr r8
    1364:	6143746c 	cmpvs	r3, ip, ror #8
    1368:	61626c6c 	cmnvs	r2, ip, ror #24
    136c:	55006b63 	strpl	r6, [r0, #-2915]	; 0xfffff49d
    1370:	5f545241 	svcpl	0x00545241
    1374:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    1378:	6f624178 	svcvs	0x00624178
    137c:	61437472 	hvcvs	14146	; 0x3742
    1380:	61626c6c 	cmnvs	r2, ip, ror #24
    1384:	68006b63 	stmdavs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1388:	00616d64 	rsbeq	r6, r1, r4, ror #26
    138c:	66727369 	ldrbtvs	r7, [r2], -r9, ror #6
    1390:	7367616c 	cmnvc	r7, #108, 2
    1394:	52415500 	subpl	r5, r1, #0, 10
    1398:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    139c:	72724541 	rsbsvc	r4, r2, #272629760	; 0x10400000
    13a0:	4800726f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    13a4:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    13a8:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    13ac:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    13b0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 777 <_Min_Heap_Size-0x89>
    13b4:	5f545241 	svcpl	0x00545241
    13b8:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    13bc:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    13c0:	52415500 	subpl	r5, r1, #0, 10
    13c4:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    13c8:	48785241 	ldmdami	r8!, {r0, r6, r9, ip, lr}^
    13cc:	43666c61 	cmnmi	r6, #24832	; 0x6100
    13d0:	00746c70 	rsbseq	r6, r4, r0, ror ip
    13d4:	5f4c4148 	svcpl	0x004c4148
    13d8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    13dc:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    13e0:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    13e4:	414d445f 	cmpmi	sp, pc, asr r4
    13e8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    13ec:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    13f0:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    13f4:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    13f8:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    13fc:	495f6576 	ldmdbmi	pc, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1400:	78520054 	ldmdavc	r2, {r2, r4, r6}^
    1404:	006e654c 	rsbeq	r6, lr, ip, asr #10
    1408:	5f4c4148 	svcpl	0x004c4148
    140c:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    1410:	6f725069 	svcvs	0x00725069
    1414:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1418:	495f726f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    141c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1420:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1424:	6961575f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1428:	466e4f74 	uqsub16mi	r4, lr, r4
    142c:	5567616c 	strbpl	r6, [r7, #-364]!	; 0xfffffe94
    1430:	6c69746e 	cfstrdvs	mvd7, [r9], #-440	; 0xfffffe48
    1434:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    1438:	0074756f 	rsbseq	r7, r4, pc, ror #10
    143c:	5f4c4148 	svcpl	0x004c4148
    1440:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1444:	6f62415f 	svcvs	0x0062415f
    1448:	72547472 	subsvc	r7, r4, #1912602624	; 0x72000000
    144c:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1450:	70437469 	subvc	r7, r3, r9, ror #8
    1454:	6143746c 	cmpvs	r3, ip, ror #8
    1458:	61626c6c 	cmnvs	r2, ip, ror #24
    145c:	5f006b63 	svcpl	0x00006b63
    1460:	52444c5f 	subpl	r4, r4, #24320	; 0x5f00
    1464:	00575845 	subseq	r5, r7, r5, asr #16
    1468:	5f4c4148 	svcpl	0x004c4148
    146c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1470:	6f62415f 	svcvs	0x0062415f
    1474:	72547472 	subsvc	r7, r4, #1912602624	; 0x72000000
    1478:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    147c:	55007469 	strpl	r7, [r0, #-1129]	; 0xfffffb97
    1480:	5f545241 	svcpl	0x00545241
    1484:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    1488:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
    148c:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1490:	4d445f65 	stclmi	15, cr5, [r4, #-404]	; 0xfffffe6c
    1494:	41480041 	cmpmi	r8, r1, asr #32
    1498:	41555f4c 	cmpmi	r5, ip, asr #30
    149c:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    14a0:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    14a4:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    14a8:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    14ac:	495f656c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    14b0:	5f5f0054 	svcpl	0x005f0054
    14b4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    14b8:	745f3436 	ldrbvc	r3, [pc], #-1078	; 14c0 <_Min_Heap_Size+0xcc0>
    14bc:	615f5f00 	cmpvs	pc, r0, lsl #30
    14c0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    14c4:	646c755f 	strbtvs	r7, [ip], #-1375	; 0xfffffaa1
    14c8:	6f6d7669 	svcvs	0x006d7669
    14cc:	41480064 	cmpmi	r8, r4, rrx
    14d0:	41555f4c 	cmpmi	r5, ip, asr #30
    14d4:	445f5452 	ldrbmi	r5, [pc], #-1106	; 14dc <_Min_Heap_Size+0xcdc>
    14d8:	7453414d 	ldrbvc	r4, [r3], #-333	; 0xfffffeb3
    14dc:	4800706f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, ip, sp, lr}
    14e0:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 13e4 <_Min_Heap_Size+0xbe4>
    14e4:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    14e8:	636f7250 	cmnvs	pc, #80, 4
    14ec:	6f737365 	svcvs	0x00737365
    14f0:	78455f72 	stmdavc	r5, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    14f4:	754d7469 	strbvc	r7, [sp, #-1129]	; 0xfffffb97
    14f8:	6f4d6574 	svcvs	0x004d6574
    14fc:	68006564 	stmdavs	r0, {r2, r5, r6, r8, sl, sp, lr}
    1500:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1504:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1508:	4343525f 	movtmi	r5, #12895	; 0x325f
    150c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1510:	4b4c4350 	blmi	1312258 <_Min_Heap_Size+0x1311a58>
    1514:	65724632 	ldrbvs	r4, [r2, #-1586]!	; 0xfffff9ce
    1518:	41480071 	hvcmi	32769	; 0x8001
    151c:	61485f4c 	cmpvs	r8, ip, asr #30
    1520:	7544666c 	strbvc	r6, [r4, #-1644]	; 0xfffff994
    1524:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    1528:	616e455f 	cmnvs	lr, pc, asr r5
    152c:	52656c62 	rsbpl	r6, r5, #25088	; 0x6200
    1530:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1534:	00726576 	rsbseq	r6, r2, r6, ror r5
    1538:	6b6c6370 	blvs	1b1a300 <_Min_Heap_Size+0x1b19b00>
    153c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    1540:	74003170 	strvc	r3, [r0], #-368	; 0xfffffe90
    1544:	32706d65 	rsbscc	r6, r0, #6464	; 0x1940
    1548:	63697400 	cmnvs	r9, #0, 8
    154c:	6174736b 	cmnvs	r4, fp, ror #6
    1550:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    1554:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 91b <_Min_Heap_Size+0x11b>
    1558:	5f545241 	svcpl	0x00545241
    155c:	70437852 	subvc	r7, r3, r2, asr r8
    1560:	6143746c 	cmpvs	r3, ip, ror #8
    1564:	61626c6c 	cmnvs	r2, ip, ror #24
    1568:	6e006b63 	vmlsvs.f64	d6, d0, d19
    156c:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xfffff09e
    1570:	6e69616d 	powvsez	f6, f1, #5.0
    1574:	5f676e69 	svcpl	0x00676e69
    1578:	645f7872 	ldrbvs	r7, [pc], #-2162	; 1580 <_Min_Heap_Size+0xd80>
    157c:	00617461 	rsbeq	r7, r1, r1, ror #8
    1580:	5f4c4148 	svcpl	0x004c4148
    1584:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1588:	6f62415f 	svcvs	0x0062415f
    158c:	70437472 	subvc	r7, r3, r2, ror r4
    1590:	6143746c 	cmpvs	r3, ip, ror #8
    1594:	61626c6c 	cmnvs	r2, ip, ror #24
    1598:	64006b63 	strvs	r6, [r0], #-2915	; 0xfffff49d
    159c:	6572616d 	ldrbvs	r6, [r2, #-365]!	; 0xfffffe93
    15a0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    15a4:	41480074 	hvcmi	32772	; 0x8004
    15a8:	41555f4c 	cmpmi	r5, ip, asr #30
    15ac:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    15b0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    15b4:	48006576 	stmdami	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    15b8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 97f <_Min_Heap_Size+0x17f>
    15bc:	5f545241 	svcpl	0x00545241
    15c0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    15c4:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    15c8:	0054495f 	subseq	r4, r4, pc, asr r9
    15cc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15d0:	414d445f 	cmpmi	sp, pc, asr r4
    15d4:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    15d8:	456e4f74 	strbmi	r4, [lr, #-3956]!	; 0xfffff08c
    15dc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    15e0:	5f626e00 	svcpl	0x00626e00
    15e4:	645f7872 	ldrbvs	r7, [pc], #-2162	; 15ec <_Min_Heap_Size+0xdec>
    15e8:	00617461 	rsbeq	r7, r1, r1, ror #8
    15ec:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15f0:	414d445f 	cmpmi	sp, pc, asr r4
    15f4:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    15f8:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    15fc:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    1600:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1604:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1608:	5f784554 	svcpl	0x00784554
    160c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1610:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    1614:	6c64496f 			; <UNDEFINED> instruction: 0x6c64496f
    1618:	4d445f65 	stclmi	15, cr5, [r4, #-404]	; 0xfffffe6c
    161c:	41550041 	cmpmi	r5, r1, asr #32
    1620:	455f5452 	ldrbmi	r5, [pc, #-1106]	; 11d6 <_Min_Heap_Size+0x9d6>
    1624:	7254646e 	subsvc	r6, r4, #1845493760	; 0x6e000000
    1628:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    162c:	495f7469 	ldmdbmi	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1630:	41480054 	qdaddmi	r0, r4, r8
    1634:	41555f4c 	cmpmi	r5, ip, asr #30
    1638:	545f5452 	ldrbpl	r5, [pc], #-1106	; 1640 <_Min_Heap_Size+0xe40>
    163c:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    1640:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    1644:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1648:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    164c:	4148006b 	cmpmi	r8, fp, rrx
    1650:	41555f4c 	cmpmi	r5, ip, asr #30
    1654:	455f5452 	ldrbmi	r5, [pc, #-1106]	; 120a <_Min_Heap_Size+0xa0a>
    1658:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    165c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1660:	6b636162 	blvs	18d9bf0 <_Min_Heap_Size+0x18d93f0>
    1664:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1668:	414d445f 	cmpmi	sp, pc, asr r4
    166c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1670:	6f727245 	svcvs	0x00727245
    1674:	41480072 	hvcmi	32770	; 0x8002
    1678:	41555f4c 	cmpmi	r5, ip, asr #30
    167c:	545f5452 	ldrbpl	r5, [pc], #-1106	; 1684 <_Min_Heap_Size+0xe84>
    1680:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1684:	5f74696d 	svcpl	0x0074696d
    1688:	00414d44 	subeq	r4, r1, r4, asr #26
    168c:	5f4c4148 	svcpl	0x004c4148
    1690:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1694:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    1698:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    169c:	6f546576 	svcvs	0x00546576
    16a0:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    16a4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16a8:	6c754d5f 	ldclvs	13, cr4, [r5], #-380	; 0xfffffe84
    16ac:	72506974 	subsvc	r6, r0, #116, 18	; 0x1d0000
    16b0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    16b4:	5f726f73 	svcpl	0x00726f73
    16b8:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
    16bc:	74754d72 	ldrbtvc	r4, [r5], #-3442	; 0xfffff28e
    16c0:	646f4d65 	strbtvs	r4, [pc], #-3429	; 16c8 <_Min_Heap_Size+0xec8>
    16c4:	41550065 	cmpmi	r5, r5, rrx
    16c8:	445f5452 	ldrbmi	r5, [pc], #-1106	; 16d0 <_Min_Heap_Size+0xed0>
    16cc:	7854414d 	ldmdavc	r4, {r0, r2, r3, r6, r8, lr}^
    16d0:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    16d4:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    16d8:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    16dc:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    16e0:	7263006b 	rsbvc	r0, r3, #107	; 0x6b
    16e4:	73746931 	cmnvc	r4, #802816	; 0xc4000
    16e8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16ec:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16f0:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    16f4:	73655241 	cmnvc	r5, #268435460	; 0x10000004
    16f8:	00656d75 	rsbeq	r6, r5, r5, ror sp
    16fc:	5f4c4148 	svcpl	0x004c4148
    1700:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1704:	6f62415f 	svcvs	0x0062415f
    1708:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    170c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; ad3 <_Min_Heap_Size+0x2d3>
    1710:	5f545241 	svcpl	0x00545241
    1714:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1718:	5f657669 	svcpl	0x00657669
    171c:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    1720:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
    1724:	495f4e49 	ldmdbmi	pc, {r0, r3, r6, r9, sl, fp, lr}^	; <UNPREDICTABLE>
    1728:	0074696e 	rsbseq	r6, r4, lr, ror #18
    172c:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
    1730:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    1734:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1738:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
    173c:	61435353 	cmpvs	r3, r3, asr r3
    1740:	61626c6c 	cmnvs	r2, ip, ror #24
    1744:	70006b63 	andvc	r6, r0, r3, ror #22
    1748:	00706c6c 	rsbseq	r6, r0, ip, ror #24
    174c:	63727770 	cmnvs	r2, #112, 14	; 0x1c00000
    1750:	68636b6c 	stmdavs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
    1754:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
    1758:	50410064 	subpl	r0, r1, r4, rrx
    175c:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
    1760:	61546373 	cmpvs	r4, r3, ror r3
    1764:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1768:	4354504f 	cmpmi	r4, #79	; 0x4f
    176c:	4c460052 	mcrrmi	0, 5, r0, r6, cr2
    1770:	5f485341 	svcpl	0x00485341
    1774:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1778:	00666544 	rsbeq	r6, r6, r4, asr #10
    177c:	42414e45 	submi	r4, r1, #1104	; 0x450
    1780:	4f00454c 	svcmi	0x0000454c
    1784:	454b5450 	strbmi	r5, [fp, #-1104]	; 0xfffffbb0
    1788:	70005259 	andvc	r5, r0, r9, asr r2
    178c:	63766c6c 	cmnvs	r6, #108, 24	; 0x6c00
    1790:	4944006f 	stmdbmi	r4, {r0, r1, r2, r3, r5, r6}^
    1794:	4c424153 	stfmie	f4, [r2], {83}	; 0x53
    1798:	504f0045 	subpl	r0, pc, r5, asr #32
    179c:	31524354 	cmpcc	r2, r4, asr r3
    17a0:	43435200 	movtmi	r5, #12800	; 0x3200
    17a4:	4f434d5f 	svcmi	0x00434d5f
    17a8:	00766944 	rsbseq	r6, r6, r4, asr #18
    17ac:	5f4c4148 	svcpl	0x004c4148
    17b0:	5f434352 	svcpl	0x00434352
    17b4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    17b8:	5343656c 	movtpl	r6, #13676	; 0x356c
    17bc:	48410053 	stmdami	r1, {r0, r1, r4, r6}^
    17c0:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
    17c4:	61546373 	cmpvs	r4, r3, ror r3
    17c8:	00656c62 	rsbeq	r6, r5, r2, ror #24
    17cc:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    17d0:	6b636f6c 	blvs	18dd588 <_Min_Heap_Size+0x18dcd88>
    17d4:	71657266 	cmnvc	r5, r6, ror #4
    17d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    17dc:	4343525f 	movtmi	r5, #12895	; 0x325f
    17e0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    17e4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    17e8:	00535343 	subseq	r5, r3, r3, asr #6
    17ec:	5f4c4148 	svcpl	0x004c4148
    17f0:	5f434352 	svcpl	0x00434352
    17f4:	434f434d 	movtmi	r4, #62285	; 0xf34d
    17f8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    17fc:	79530067 	ldmdbvc	r3, {r0, r1, r2, r5, r6}^
    1800:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1804:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1808:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    180c:	4148006b 	cmpmi	r8, fp, rrx
    1810:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
    1814:	69547469 	ldmdbvs	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1818:	70006b63 	andvc	r6, r0, r3, ror #22
    181c:	635f6c6c 	cmpvs	pc, #108, 24	; 0x6c00
    1820:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1824:	77750067 	ldrbvc	r0, [r5, -r7, rrx]!
    1828:	6b636954 	blvs	18dbd80 <_Min_Heap_Size+0x18db580>
    182c:	6f697250 	svcvs	0x00697250
    1830:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    1834:	4148006d 	cmpmi	r8, sp, rrx
    1838:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    183c:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1840:	73795374 	cmnvc	r9, #116, 6	; 0xd0000001
    1844:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    1848:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    184c:	41480071 	hvcmi	32769	; 0x8001
    1850:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1854:	65445f43 	strbvs	r5, [r4, #-3907]	; 0xfffff0bd
    1858:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    185c:	43435200 	movtmi	r5, #12800	; 0x3200
    1860:	4f434d5f 	svcmi	0x00434d5f
    1864:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    1868:	48006563 	stmdami	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
    186c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1870:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1874:	6c437465 	cfstrdvs	mvd7, [r3], {101}	; 0x65
    1878:	436b636f 	cmnmi	fp, #-1140850687	; 0xbc000001
    187c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1880:	41480067 	cmpmi	r8, r7, rrx
    1884:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1888:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    188c:	4c434874 	mcrrmi	8, 7, r4, r3, cr4
    1890:	6572464b 	ldrbvs	r4, [r2, #-1611]!	; 0xfffff9b5
    1894:	2e2e0071 	mcrcs	0, 1, r0, cr14, cr1, {3}
    1898:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    189c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    18a0:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    18a4:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    18a8:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    18ac:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 18b4 <_Min_Heap_Size+0x10b4>
    18b0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    18b4:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    18b8:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    18bc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    18c0:	5f787834 	svcpl	0x00787834
    18c4:	5f6c6168 	svcpl	0x006c6168
    18c8:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    18cc:	43520063 	cmpmi	r2, #99	; 0x63
    18d0:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    18d4:	7000784f 	andvc	r7, r0, pc, asr #16
    18d8:	74614c46 	strbtvc	r4, [r1], #-3142	; 0xfffff3ba
    18dc:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    18e0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    18e4:	4343525f 	movtmi	r5, #12895	; 0x325f
    18e8:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    18ec:	4363734f 	cmnmi	r3, #1006632961	; 0x3c000001
    18f0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    18f4:	41480067 	cmpmi	r8, r7, rrx
    18f8:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    18fc:	4d4e5f43 	stclmi	15, cr5, [lr, #-268]	; 0xfffffef4
    1900:	52495f49 	subpl	r5, r9, #292	; 0x124
    1904:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1908:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    190c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1910:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1914:	4148006e 	cmpmi	r8, lr, rrx
    1918:	50475f4c 	subpl	r5, r7, ip, asr #30
    191c:	4c5f4f49 	mrrcmi	15, 4, r4, pc, cr9	; <UNPREDICTABLE>
    1920:	506b636f 	rsbpl	r6, fp, pc, ror #6
    1924:	69006e69 	stmdbvs	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
    1928:	736f706f 	cmnvc	pc, #111	; 0x6f
    192c:	6f697469 	svcvs	0x00697469
    1930:	454d006e 	strbmi	r0, [sp, #-110]	; 0xffffff92
    1934:	504d524d 	subpl	r5, sp, sp, asr #4
    1938:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    193c:	00524349 	subseq	r4, r2, r9, asr #6
    1940:	5f4c4148 	svcpl	0x004c4148
    1944:	4f495047 	svcmi	0x00495047
    1948:	676f545f 			; <UNDEFINED> instruction: 0x676f545f
    194c:	50656c67 	rsbpl	r6, r5, r7, ror #24
    1950:	47006e69 	strmi	r6, [r0, -r9, ror #28]
    1954:	5f4f4950 	svcpl	0x004f4950
    1958:	5f4e4950 	svcpl	0x004e4950
    195c:	00544553 	subseq	r4, r4, r3, asr r5
    1960:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1964:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1968:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    196c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1970:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1974:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xfffff0b1
    1978:	69506461 	ldmdbvs	r0, {r0, r5, r6, sl, sp, lr}^
    197c:	4148006e 	cmpmi	r8, lr, rrx
    1980:	50475f4c 	subpl	r5, r7, ip, asr #30
    1984:	575f4f49 	ldrbpl	r4, [pc, -r9, asr #30]
    1988:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    198c:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1990:	43504d43 	cmpmi	r0, #4288	; 0x10c0
    1994:	69620052 	stmdbvs	r2!, {r1, r4, r6}^
    1998:	61747374 	cmnvs	r4, r4, ror r3
    199c:	00737574 	rsbseq	r7, r3, r4, ror r5
    19a0:	4f495047 	svcmi	0x00495047
    19a4:	4e49505f 	mcrmi	0, 2, r5, cr9, cr15, {2}
    19a8:	5345525f 	movtpl	r5, #21087	; 0x525f
    19ac:	48005445 	stmdami	r0, {r0, r2, r6, sl, ip, lr}
    19b0:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    19b4:	5f4f4950 	svcpl	0x004f4950
    19b8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    19bc:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    19c0:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    19c4:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    19c8:	4600706d 	strmi	r7, [r0], -sp, rrx
    19cc:	00525354 	subseq	r5, r2, r4, asr r3
    19d0:	5f4c4148 	svcpl	0x004c4148
    19d4:	4f495047 	svcmi	0x00495047
    19d8:	5458455f 	ldrbpl	r4, [r8], #-1375	; 0xfffffaa1
    19dc:	52495f49 	subpl	r5, r9, #292	; 0x124
    19e0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    19e4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    19e8:	636f6900 	cmnvs	pc, #0, 18
    19ec:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    19f0:	5300746e 	movwpl	r7, #1134	; 0x46e
    19f4:	46435359 			; <UNDEFINED> instruction: 0x46435359
    19f8:	79545f47 	ldmdbvc	r4, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    19fc:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1a00:	54520066 	ldrbpl	r0, [r2], #-102	; 0xffffff9a
    1a04:	47005253 	smlsdmi	r0, r3, r2, r5
    1a08:	784f4950 	stmdavc	pc, {r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1a0c:	2f2e2e00 	svccs	0x002e2e00
    1a10:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1a14:	2f737265 	svccs	0x00737265
    1a18:	334d5453 	movtcc	r5, #54355	; 0xd453
    1a1c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1a20:	41485f78 	hvcmi	34296	; 0x85f8
    1a24:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1a28:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1a2c:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1a30:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1a34:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1a38:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1a3c:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    1a40:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1a44:	45520063 	ldrbmi	r0, [r2, #-99]	; 0xffffff9d
    1a48:	56524553 			; <UNDEFINED> instruction: 0x56524553
    1a4c:	47004445 	strmi	r4, [r0, -r5, asr #8]
    1a50:	5f4f4950 	svcpl	0x004f4950
    1a54:	536e6950 	cmnpl	lr, #80, 18	; 0x140000
    1a58:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1a5c:	49575300 	ldmdbmi	r7, {r8, r9, ip, lr}^
    1a60:	48005245 	stmdami	r0, {r0, r2, r6, r9, ip, lr}
    1a64:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1a6c <_Min_Heap_Size+0x126c>
    1a68:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1a6c:	5f524546 	svcpl	0x00524546
    1a70:	524f4241 	subpl	r4, pc, #268435460	; 0x10000004
    1a74:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1a78:	0044495f 	subeq	r4, r4, pc, asr r9
    1a7c:	5f4c4148 	svcpl	0x004c4148
    1a80:	5f414d44 	svcpl	0x00414d44
    1a84:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1a88:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a8c:	414d445f 	cmpmi	sp, pc, asr r4
    1a90:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    1a94:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1a98:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    1a9c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1aa0:	6552006b 	ldrbvs	r0, [r2, #-107]	; 0xffffff95
    1aa4:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1aa8:	00306465 	eorseq	r6, r0, r5, ror #8
    1aac:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    1ab0:	73746942 	cmnvc	r4, #1081344	; 0x108000
    1ab4:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1ab8:	7366664f 	cmnvc	r6, #82837504	; 0x4f00000
    1abc:	74007465 	strvc	r7, [r0], #-1125	; 0xfffffb9b
    1ac0:	7369706d 	cmnvc	r9, #109	; 0x6d
    1ac4:	41480072 	hvcmi	32770	; 0x8002
    1ac8:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1acc:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1ad0:	435f5245 	cmpmi	pc, #1342177284	; 0x50000004
    1ad4:	5f544c50 	svcpl	0x00544c50
    1ad8:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1adc:	41480044 	cmpmi	r8, r4, asr #32
    1ae0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1ae4:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
    1ae8:	00747261 	rsbseq	r7, r4, r1, ror #4
    1aec:	5f4c4148 	svcpl	0x004c4148
    1af0:	5f414d44 	svcpl	0x00414d44
    1af4:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    1af8:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1afc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1b04 <_Min_Heap_Size+0x1304>
    1b00:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1b04:	5f524546 	svcpl	0x00524546
    1b08:	4f525245 	svcmi	0x00525245
    1b0c:	42435f52 	submi	r5, r3, #328	; 0x148
    1b10:	0044495f 	subeq	r4, r4, pc, asr r9
    1b14:	5f4c4148 	svcpl	0x004c4148
    1b18:	5f414d44 	svcpl	0x00414d44
    1b1c:	464c4148 	strbmi	r4, [ip], -r8, asr #2
    1b20:	4152545f 	cmpmi	r2, pc, asr r4
    1b24:	4546534e 	strbmi	r5, [r6, #-846]	; 0xfffffcb2
    1b28:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
    1b2c:	65535f41 	ldrbvs	r5, [r3, #-3905]	; 0xfffff0bf
    1b30:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    1b34:	00676966 	rsbeq	r6, r7, r6, ror #18
    1b38:	442f2e2e 	strtmi	r2, [pc], #-3630	; 1b40 <_Min_Heap_Size+0x1340>
    1b3c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1b40:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    1b44:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1b48:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1b4c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1b50:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1b54:	2f726576 	svccs	0x00726576
    1b58:	2f637253 	svccs	0x00637253
    1b5c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1b60:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1b64:	61685f78 	smcvs	34296	; 0x85f8
    1b68:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
    1b6c:	00632e61 	rsbeq	r2, r3, r1, ror #28
    1b70:	5f4c4148 	svcpl	0x004c4148
    1b74:	5f414d44 	svcpl	0x00414d44
    1b78:	6576654c 	ldrbvs	r6, [r6, #-1356]!	; 0xfffffab4
    1b7c:	6d6f436c 	stclvs	3, cr4, [pc, #-432]!	; 19d4 <_Min_Heap_Size+0x11d4>
    1b80:	74656c70 	strbtvc	r6, [r5], #-3184	; 0xfffff390
    1b84:	70795465 	rsbsvc	r5, r9, r5, ror #8
    1b88:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1b8c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1b90:	414d445f 	cmpmi	sp, pc, asr r4
    1b94:	4c55465f 	mrrcmi	6, 5, r4, r5, cr15
    1b98:	52545f4c 	subspl	r5, r4, #76, 30	; 0x130
    1b9c:	46534e41 	ldrbmi	r4, [r3], -r1, asr #28
    1ba0:	73005245 	movwvc	r5, #581	; 0x245
    1ba4:	61657274 	smcvs	22308	; 0x5724
    1ba8:	756e5f6d 	strbvc	r5, [lr, #-3949]!	; 0xfffff093
    1bac:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    1bb0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1bb4:	414d445f 	cmpmi	sp, pc, asr r4
    1bb8:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    1bbc:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1bc0:	5444496b 	strbpl	r4, [r4], #-2411	; 0xfffff695
    1bc4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1bc8:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1bcc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1bd4 <_Min_Heap_Size+0x13d4>
    1bd0:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1bd4:	5f524546 	svcpl	0x00524546
    1bd8:	5043314d 	subpl	r3, r3, sp, asr #2
    1bdc:	435f544c 	cmpmi	pc, #76, 8	; 0x4c000000
    1be0:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1be4:	6d6f4300 	stclvs	3, cr4, [pc, #-0]	; 1bec <_Min_Heap_Size+0x13ec>
    1be8:	74656c70 	strbtvc	r6, [r5], #-3184	; 0xfffff390
    1bec:	76654c65 	strbtvc	r4, [r5], -r5, ror #24
    1bf0:	49006c65 	stmdbmi	r0, {r0, r2, r5, r6, sl, fp, sp, lr}
    1bf4:	00524346 	subseq	r4, r2, r6, asr #6
    1bf8:	41747344 	cmnmi	r4, r4, asr #6
    1bfc:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1c00:	43007373 	movwmi	r7, #883	; 0x373
    1c04:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c08:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1c0c:	4d440044 	stclmi	0, cr0, [r4, #-272]	; 0xfffffef0
    1c10:	68435f41 	stmdavs	r3, {r0, r6, r8, r9, sl, fp, ip, lr}^
    1c14:	466b6365 	strbtmi	r6, [fp], -r5, ror #6
    1c18:	506f6669 	rsbpl	r6, pc, r9, ror #12
    1c1c:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    1c20:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c24:	414d445f 	cmpmi	sp, pc, asr r4
    1c28:	526e555f 	rsbpl	r5, lr, #398458880	; 0x17c00000
    1c2c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1c30:	43726574 	cmnmi	r2, #116, 10	; 0x1d000000
    1c34:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c38:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1c3c:	5f4c4148 	svcpl	0x004c4148
    1c40:	5f414d44 	svcpl	0x00414d44
    1c44:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1c48:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1c4c:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1c50:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1c58 <_Min_Heap_Size+0x1458>
    1c54:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1c58:	5f524546 	svcpl	0x00524546
    1c5c:	5f4c4c41 	svcpl	0x004c4c41
    1c60:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1c64:	4d440044 	stclmi	0, cr0, [r4, #-272]	; 0xfffffef0
    1c68:	61425f41 	cmpvs	r2, r1, asr #30
    1c6c:	525f6573 	subspl	r6, pc, #482344960	; 0x1cc00000
    1c70:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1c74:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    1c78:	414d4400 	cmpmi	sp, r0, lsl #8
    1c7c:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    1c80:	73614263 	cmnvc	r1, #805306374	; 0x30000006
    1c84:	646e4165 	strbtvs	r4, [lr], #-357	; 0xfffffe9b
    1c88:	73746942 	cmnvc	r4, #1081344	; 0x108000
    1c8c:	74666968 	strbtvc	r6, [r6], #-2408	; 0xfffff698
    1c90:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c94:	414d445f 	cmpmi	sp, pc, asr r4
    1c98:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1c9c:	41485f52 	cmpmi	r8, r2, asr pc
    1ca0:	5043464c 	subpl	r4, r3, ip, asr #12
    1ca4:	435f544c 	cmpmi	pc, #76, 8	; 0x4c000000
    1ca8:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1cac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1cb0:	414d445f 	cmpmi	sp, pc, asr r4
    1cb4:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1cb8:	314d5f52 	cmpcc	sp, r2, asr pc
    1cbc:	464c4148 	strbmi	r4, [ip], -r8, asr #2
    1cc0:	544c5043 	strbpl	r5, [ip], #-67	; 0xffffffbd
    1cc4:	5f42435f 	svcpl	0x0042435f
    1cc8:	63004449 	movwvs	r4, #1097	; 0x449
    1ccc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1cd0:	63725300 	cmnvs	r2, #0, 6
    1cd4:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1cd8:	00737365 	rsbseq	r7, r3, r5, ror #6
    1cdc:	61746144 	cmnvs	r4, r4, asr #2
    1ce0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1ce4:	48006874 	stmdami	r0, {r2, r4, r5, r6, fp, sp, lr}
    1ce8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1cf0 <_Min_Heap_Size+0x14f0>
    1cec:	475f414d 	ldrbmi	r4, [pc, -sp, asr #2]
    1cf0:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1cf4:	00657461 	rsbeq	r7, r5, r1, ror #8
    1cf8:	6c614370 	stclvs	3, cr4, [r1], #-448	; 0xfffffe40
    1cfc:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1d00:	6974006b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6}^
    1d04:	756f656d 	strbvc	r6, [pc, #-1389]!	; 179f <_Min_Heap_Size+0xf9f>
    1d08:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
    1d0c:	6d007367 	stcvs	3, cr7, [r0, #-412]	; 0xfffffe64
    1d10:	5f6b7361 	svcpl	0x006b7361
    1d14:	746c7063 	strbtvc	r7, [ip], #-99	; 0xffffff9d
    1d18:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    1d1c:	4148006c 	cmpmi	r8, ip, rrx
    1d20:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1d24:	6f505f41 	svcvs	0x00505f41
    1d28:	6f466c6c 	svcvs	0x00466c6c
    1d2c:	61725472 	cmnvs	r2, r2, ror r4
    1d30:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
    1d34:	43490072 	movtmi	r0, #36978	; 0x9072
    1d38:	54005250 	strpl	r5, [r0], #-592	; 0xfffffdb0
    1d3c:	45657079 	strbmi	r7, [r5, #-121]!	; 0xffffff87
    1d40:	69467478 	stmdbvs	r6, {r3, r4, r5, r6, sl, ip, sp, lr}^
    1d44:	00646c65 	rsbeq	r6, r4, r5, ror #24
    1d48:	442f2e2e 	strtmi	r2, [pc], #-3630	; 1d50 <_Min_Heap_Size+0x1550>
    1d4c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1d50:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    1d54:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1d58:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1d5c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1d60:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1d64:	2f726576 	svccs	0x00726576
    1d68:	2f637253 	svccs	0x00637253
    1d6c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1d70:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1d74:	61685f78 	smcvs	34296	; 0x85f8
    1d78:	6f635f6c 	svcvs	0x00635f6c
    1d7c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    1d80:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1d84:	535f4c41 	cmppl	pc, #16640	; 0x4100
    1d88:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
    1d8c:	435f4b43 	cmpmi	pc, #68608	; 0x10c00
    1d90:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1d94:	41480067 	cmpmi	r8, r7, rrx
    1d98:	4f435f4c 	svcmi	0x00435f4c
    1d9c:	58455452 	stmdapl	r5, {r1, r4, r6, sl, ip, lr}^
    1da0:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    1da4:	76457261 	strbvc	r7, [r5], -r1, ror #4
    1da8:	00746e65 	rsbseq	r6, r4, r5, ror #28
    1dac:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    1db0:	0033415f 	eorseq	r4, r3, pc, asr r1
    1db4:	52505349 	subspl	r5, r0, #603979777	; 0x24000001
    1db8:	42734900 	rsbsmi	r4, r3, #0, 18
    1dbc:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    1dc0:	6c626172 	stfvse	f6, [r2], #-456	; 0xfffffe38
    1dc4:	72500065 	subsvc	r0, r0, #101	; 0x65
    1dc8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1dcc:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    1dd0:	0070756f 	rsbseq	r7, r0, pc, ror #10
    1dd4:	5f4c4148 	svcpl	0x004c4148
    1dd8:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    1ddc:	5f4b4349 	svcpl	0x004b4349
    1de0:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1de4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1de8:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1dec:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1df0:	5f434956 	svcpl	0x00434956
    1df4:	61656c43 	cmnvs	r5, r3, asr #24
    1df8:	6e655072 	mcrvs	0, 3, r5, cr5, cr2, {3}
    1dfc:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1e00:	00515249 	subseq	r5, r1, r9, asr #4
    1e04:	5f4c4148 	svcpl	0x004c4148
    1e08:	5f55504d 	svcpl	0x0055504d
    1e0c:	61736944 	cmnvs	r3, r4, asr #18
    1e10:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1e14:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    1e18:	0031415f 	eorseq	r4, r1, pc, asr r1
    1e1c:	5f55504d 	svcpl	0x0055504d
    1e20:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    1e24:	006c6f72 	rsbeq	r6, ip, r2, ror pc
    1e28:	5f4c4148 	svcpl	0x004c4148
    1e2c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1e30:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1e34:	6f697250 	svcvs	0x00697250
    1e38:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1e3c:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    1e40:	5f434956 	svcpl	0x00434956
    1e44:	61656c43 	cmnvs	r5, r3, asr #24
    1e48:	6e655072 	mcrvs	0, 3, r5, cr5, cr2, {3}
    1e4c:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1e50:	00515249 	subseq	r5, r1, r9, asr #4
    1e54:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1e58:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    1e5c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1e60:	7365526d 	cmnvc	r5, #-805306362	; 0xd0000006
    1e64:	52007465 	andpl	r7, r0, #1694498816	; 0x65000000
    1e68:	5f524142 	svcpl	0x00524142
    1e6c:	52003141 	andpl	r3, r0, #1073741840	; 0x40000010
    1e70:	5f524142 	svcpl	0x00524142
    1e74:	52003241 	andpl	r3, r0, #268435460	; 0x10000004
    1e78:	5f524142 	svcpl	0x00524142
    1e7c:	4d003341 	stcmi	3, cr3, [r0, #-260]	; 0xfffffefc
    1e80:	495f5550 	ldmdbmi	pc, {r4, r6, r8, sl, ip, lr}^	; <UNPREDICTABLE>
    1e84:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1e88:	65657250 	strbvs	r7, [r5, #-592]!	; 0xfffffdb0
    1e8c:	5074706d 	rsbspl	r7, r4, sp, rrx
    1e90:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1e94:	42797469 	rsbsmi	r7, r9, #1761607680	; 0x69000000
    1e98:	00737469 	rsbseq	r7, r3, r9, ror #8
    1e9c:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    1ea0:	0032415f 	eorseq	r4, r2, pc, asr r1
    1ea4:	5f55504d 	svcpl	0x0055504d
    1ea8:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1eac:	495f6e6f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1eb0:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
    1eb4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1eb8:	49006665 	stmdbmi	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1ebc:	63614373 	cmnvs	r1, #-872415231	; 0xcc000001
    1ec0:	62616568 	rsbvs	r6, r1, #104, 10	; 0x1a000000
    1ec4:	5300656c 	movwpl	r6, #1388	; 0x56c
    1ec8:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    1ecc:	545f6b63 	ldrbpl	r6, [pc], #-2915	; 1ed4 <_Min_Heap_Size+0x16d4>
    1ed0:	00657079 	rsbeq	r7, r5, r9, ror r0
    1ed4:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1ed8:	445f4349 	ldrbmi	r4, [pc], #-841	; 1ee0 <_Min_Heap_Size+0x16e0>
    1edc:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    1ee0:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    1ee4:	41480051 	qdaddmi	r0, r1, r8
    1ee8:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1eec:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1ef0:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    1ef4:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    1ef8:	51524967 	cmppl	r2, r7, ror #18
    1efc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1f00:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f04:	79535f43 	ldmdbvc	r3, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1f08:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1f0c:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1f10:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
    1f14:	61765f67 	cmnvs	r6, r7, ror #30
    1f18:	0065756c 	rsbeq	r7, r5, ip, ror #10
    1f1c:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
    1f20:	50700042 	rsbspl	r0, r0, r2, asr #32
    1f24:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    1f28:	72507470 	subsvc	r7, r0, #112, 8	; 0x70000000
    1f2c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f30:	41007974 	tstmi	r0, r4, ror r9
    1f34:	73656363 	cmnvc	r5, #-1946157055	; 0x8c000001
    1f38:	72655073 	rsbvc	r5, r5, #115	; 0x73
    1f3c:	7373696d 	cmnvc	r3, #1785856	; 0x1b4000
    1f40:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1f44:	6f697270 	svcvs	0x00697270
    1f48:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1f4c:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    1f50:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
    1f54:	5f00745f 	svcpl	0x0000745f
    1f58:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f5c:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    1f60:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    1f64:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1f68:	6f724779 	svcvs	0x00724779
    1f6c:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
    1f70:	41480067 	cmpmi	r8, r7, rrx
    1f74:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1f78:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1f7c:	63417465 	movtvs	r7, #5221	; 0x1465
    1f80:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    1f84:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 1f8c <_Min_Heap_Size+0x178c>
    1f88:	5f004253 	svcpl	0x00004253
    1f8c:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f90:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1f94:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    1f98:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1f9c:	53700079 	cmnpl	r0, #121	; 0x79
    1fa0:	72506275 	subsvc	r6, r0, #1342177287	; 0x50000007
    1fa4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1fa8:	4e007974 			; <UNDEFINED> instruction: 0x4e007974
    1fac:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1fb0:	72700072 	rsbsvc	r0, r0, #114	; 0x72
    1fb4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1fb8:	72677974 	rsbvc	r7, r7, #116, 18	; 0x1d0000
    1fbc:	0070756f 	rsbseq	r7, r0, pc, ror #10
    1fc0:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
    1fc4:	63697400 	cmnvs	r9, #0, 8
    1fc8:	4900736b 	stmdbmi	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    1fcc:	00524241 	subseq	r4, r2, r1, asr #4
    1fd0:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1fd4:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1fd8:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    1fdc:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    1fe0:	51524967 	cmppl	r2, r7, ror #18
    1fe4:	495f5f00 	ldmdbmi	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    1fe8:	4e004253 	mcrmi	2, 0, r4, cr0, cr3, {2}
    1fec:	5f434956 	svcpl	0x00434956
    1ff0:	6f636e45 	svcvs	0x00636e45
    1ff4:	72506564 	subsvc	r6, r0, #100, 10	; 0x19000000
    1ff8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1ffc:	49007974 	stmdbmi	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    2000:	00524543 	subseq	r4, r2, r3, asr #10
    2004:	50627553 	rsbpl	r7, r2, r3, asr r5
    2008:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    200c:	42797469 	rsbsmi	r7, r9, #1761607680	; 0x69000000
    2010:	00737469 	rsbseq	r7, r3, r9, ror #8
    2014:	4349564e 	movtmi	r5, #38478	; 0x964e
    2018:	6365445f 	cmnvs	r5, #1593835520	; 0x5f000000
    201c:	5065646f 	rsbpl	r6, r5, pc, ror #8
    2020:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2024:	00797469 	rsbseq	r7, r9, r9, ror #8
    2028:	5f4c4148 	svcpl	0x004c4148
    202c:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    2030:	5f4b4349 	svcpl	0x004b4349
    2034:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    2038:	6b636162 	blvs	18da5c8 <_Min_Heap_Size+0x18d9dc8>
    203c:	73694400 	cmnvc	r9, #0, 8
    2040:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2044:	63657845 	cmnvs	r5, #4521984	; 0x450000
    2048:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 2050 <_Min_Heap_Size+0x1850>
    204c:	5300424d 	movwpl	r4, #589	; 0x24d
    2050:	65526275 	ldrbvs	r6, [r2, #-629]	; 0xfffffd8b
    2054:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    2058:	61736944 	cmnvs	r3, r4, asr #18
    205c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2060:	52455349 	subpl	r5, r5, #603979777	; 0x24000001
    2064:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2068:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    206c:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    2070:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    2074:	5f434956 	svcpl	0x00434956
    2078:	50746553 	rsbspl	r6, r4, r3, asr r5
    207c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2080:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    2084:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2088:	00676e69 	rsbeq	r6, r7, r9, ror #28
    208c:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2090:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2094:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2098:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    209c:	51524967 	cmppl	r2, r7, ror #18
    20a0:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    20a4:	5f434956 	svcpl	0x00434956
    20a8:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    20ac:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    20b0:	42520051 	subsmi	r0, r2, #81	; 0x51
    20b4:	50005241 	andpl	r5, r0, r1, asr #4
    20b8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    20bc:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    20c0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    20c4:	00706d54 	rsbseq	r6, r0, r4, asr sp
    20c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    20cc:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    20d0:	69540065 	ldmdbvs	r4, {r0, r2, r5, r6}^
    20d4:	4e736b63 	vsubmi.f64	d22, d3, d19
    20d8:	00626d75 	rsbeq	r6, r2, r5, ror sp
    20dc:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    20e0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    20e4:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    20e8:	4b434954 	blmi	10d4640 <_Min_Heap_Size+0x10d3e40>
    20ec:	4b4c435f 	blmi	1312e70 <_Min_Heap_Size+0x1312670>
    20f0:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    20f4:	6f436563 	svcvs	0x00436563
    20f8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    20fc:	50595400 	subspl	r5, r9, r0, lsl #8
    2100:	41480045 	cmpmi	r8, r5, asr #32
    2104:	504d5f4c 	subpl	r5, sp, ip, asr #30
    2108:	6f435f55 	svcvs	0x00435f55
    210c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2110:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    2114:	53006e6f 	movwpl	r6, #3695	; 0xe6f
    2118:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    211c:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
    2120:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2124:	41480067 	cmpmi	r8, r7, rrx
    2128:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    212c:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2130:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2134:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2138:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    213c:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2140:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    2144:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 2048 <_Min_Heap_Size+0x1848>
    2148:	455f5550 	ldrbmi	r5, [pc, #-1360]	; 1c00 <_Min_Heap_Size+0x1400>
    214c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2150:	54430065 	strbpl	r0, [r3], #-101	; 0xffffff9b
    2154:	5f004c52 	svcpl	0x00004c52
    2158:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    215c:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    2160:	74634174 	strbtvc	r4, [r3], #-372	; 0xfffffe8c
    2164:	00657669 	rsbeq	r7, r5, r9, ror #12
    2168:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    216c:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2170:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2174:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2178:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    217c:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2180:	5300676e 	movwpl	r6, #1902	; 0x76e
    2184:	00524954 	subseq	r4, r2, r4, asr r9
    2188:	68537349 	ldmdavs	r3, {r0, r3, r6, r8, r9, ip, sp, lr}^
    218c:	61657261 	cmnvs	r5, r1, ror #4
    2190:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2194:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2198:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    219c:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    21a0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    21a4:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    21a8:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    21ac:	5f434956 	svcpl	0x00434956
    21b0:	50746553 	rsbspl	r6, r4, r3, asr r5
    21b4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    21b8:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    21bc:	504d0051 	subpl	r0, sp, r1, asr r0
    21c0:	79545f55 	ldmdbvc	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    21c4:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    21c8:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    21cc:	61487465 	cmpvs	r8, r5, ror #8
    21d0:	7265566c 	rsbvc	r5, r5, #108, 12	; 0x6c00000
    21d4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    21d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    21dc:	6369545f 	cmnvs	r9, #1593835520	; 0x5f000000
    21e0:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    21e4:	70795471 	rsbsvc	r5, r9, r1, ror r4
    21e8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    21ec:	63695400 	cmnvs	r9, #0, 8
    21f0:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    21f4:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    21f8:	41480079 	hvcmi	32777	; 0x8009
    21fc:	65535f4c 	ldrbvs	r5, [r3, #-3916]	; 0xfffff0b4
    2200:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    2204:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    2208:	44490071 	strbmi	r0, [r9], #-113	; 0xffffff8f
    220c:	45444f43 	strbmi	r4, [r4, #-3907]	; 0xfffff0bd
    2210:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2214:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2218:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    221c:	41480032 	cmpmi	r8, r2, lsr r0
    2220:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    2224:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2228:	616e455f 	cmnvs	lr, pc, asr r5
    222c:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    2230:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    2234:	62646e61 	rsbvs	r6, r4, #1552	; 0x610
    2238:	646f4d79 	strbtvs	r4, [pc], #-3449	; 2240 <_Min_Heap_Size+0x1a40>
    223c:	41480065 	cmpmi	r8, r5, rrx
    2240:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    2244:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    2248:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    224c:	4148006f 	cmpmi	r8, pc, rrx
    2250:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2254:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2258:	5f514552 	svcpl	0x00514552
    225c:	5a483031 	bpl	120e328 <_Min_Heap_Size+0x120db28>
    2260:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2264:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
    2268:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    226c:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    2270:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2278 <_Min_Heap_Size+0x1a78>
    2274:	434d4742 	movtmi	r4, #55106	; 0xd742
    2278:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    227c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    2280:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2284:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    2288:	646f4d70 	strbtvs	r4, [pc], #-3440	; 2290 <_Min_Heap_Size+0x1a90>
    228c:	41480065 	cmpmi	r8, r5, rrx
    2290:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2294:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2298:	5f514552 	svcpl	0x00514552
    229c:	48303031 	ldmdami	r0!, {r0, r4, r5, ip, sp}
    22a0:	4148005a 	qdaddmi	r0, sl, r8
    22a4:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    22a8:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    22ac:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    22b0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    22b4:	53474244 	movtpl	r4, #29252	; 0x7244
    22b8:	4d706f74 	ldclmi	15, cr6, [r0, #-464]!	; 0xfffffe30
    22bc:	0065646f 	rsbeq	r6, r5, pc, ror #8
    22c0:	5f4c4148 	svcpl	0x004c4148
    22c4:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    22c8:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
    22cc:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    22d0:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    22d4:	77750071 			; <UNDEFINED> instruction: 0x77750071
    22d8:	6b636954 	blvs	18dc830 <_Min_Heap_Size+0x18dc030>
    22dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    22e0:	4349545f 	movtmi	r5, #37983	; 0x945f
    22e4:	52465f4b 	subpl	r5, r6, #300	; 0x12c
    22e8:	315f5145 	cmpcc	pc, r5, asr #2
    22ec:	005a484b 	subseq	r4, sl, fp, asr #16
    22f0:	5f4c4148 	svcpl	0x004c4148
    22f4:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    22f8:	455f5543 	ldrbmi	r5, [pc, #-1347]	; 1dbd <_Min_Heap_Size+0x15bd>
    22fc:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2300:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2304:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    2308:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    230c:	42504100 	subsmi	r4, r0, #0, 2
    2310:	005a4632 	subseq	r4, sl, r2, lsr r6
    2314:	5f4c4148 	svcpl	0x004c4148
    2318:	55746547 	ldrbpl	r6, [r4, #-1351]!	; 0xfffffab9
    231c:	30774449 	rsbscc	r4, r7, r9, asr #8
    2320:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2324:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2328:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    232c:	41480031 	cmpmi	r8, r1, lsr r0
    2330:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2334:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2338:	5f514552 	svcpl	0x00514552
    233c:	41464544 	cmpmi	r6, r4, asr #10
    2340:	00544c55 	subseq	r4, r4, r5, asr ip
    2344:	5f4c4148 	svcpl	0x004c4148
    2348:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    234c:	6954656d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    2350:	41006b63 	tstmi	r0, r3, ror #22
    2354:	46314250 			; <UNDEFINED> instruction: 0x46314250
    2358:	4148005a 	qdaddmi	r0, sl, r8
    235c:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    2360:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2364:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2368:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    236c:	53474244 	movtpl	r4, #29252	; 0x7244
    2370:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    2374:	6f4d7962 	svcvs	0x004d7962
    2378:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    237c:	535f4c41 	cmppl	pc, #16640	; 0x4100
    2380:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    2384:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    2388:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    238c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2394 <_Min_Heap_Size+0x1b94>
    2390:	434d4742 	movtmi	r4, #55106	; 0xd742
    2394:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    2398:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    239c:	53474244 	movtpl	r4, #29252	; 0x7244
    23a0:	7065656c 	rsbvc	r6, r5, ip, ror #10
    23a4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    23a8:	47424400 	strbmi	r4, [r2, -r0, lsl #8]
    23ac:	5f55434d 	svcpl	0x0055434d
    23b0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    23b4:	00666544 	rsbeq	r6, r6, r4, asr #10
    23b8:	5f4c4148 	svcpl	0x004c4148
    23bc:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    23c0:	44495645 	strbmi	r5, [r9], #-1605	; 0xfffff9bb
    23c4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    23c8:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    23cc:	6b636954 	blvs	18dc924 <_Min_Heap_Size+0x18dc124>
    23d0:	71657246 	cmnvc	r5, r6, asr #4
    23d4:	65727000 	ldrbvs	r7, [r2, #-0]!
    23d8:	63695476 	cmnvs	r9, #1979711488	; 0x76000000
    23dc:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    23e0:	41480071 	hvcmi	32769	; 0x8001
    23e4:	6e455f4c 	cdpvs	15, 4, cr5, cr5, cr12, {2}
    23e8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    23ec:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    23f0:	61736e65 	cmnvs	r3, r5, ror #28
    23f4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    23f8:	6c6c6543 	cfstr64vs	mvdx6, [ip], #-268	; 0xfffffef4
    23fc:	2f2e2e00 	svccs	0x002e2e00
    2400:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2404:	2f737265 	svccs	0x00737265
    2408:	334d5453 	movtcc	r5, #54355	; 0xd453
    240c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    2410:	41485f78 	hvcmi	34296	; 0x85f8
    2414:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    2418:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    241c:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2420:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    2424:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2428:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    242c:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    2430:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2434:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2438:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    243c:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    2440:	61736e65 	cmnvs	r3, r5, ror #28
    2444:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2448:	6c6c6543 	cfstr64vs	mvdx6, [ip], #-268	; 0xfffffef4
    244c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2450:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2454:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    2458:	2e2e0044 	cdpcs	0, 2, cr0, cr14, cr4, {2}
    245c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    2460:	72532f65 	subsvc	r2, r3, #404	; 0x194
    2464:	79732f63 	ldmdbvc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    2468:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    246c:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    2470:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2474:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
    2478:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    247c:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
    2480:	53006563 	movwpl	r6, #1379	; 0x563
    2484:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2488:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
    248c:	79530074 	ldmdbvc	r3, {r2, r4, r5, r6}^
    2490:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2494:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    2498:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    249c:	6470556b 	ldrbtvs	r5, [r0], #-1387	; 0xfffffa95
    24a0:	00657461 	rsbeq	r7, r5, r1, ror #8
    24a4:	6574735f 	ldrbvs	r7, [r4, #-863]!	; 0xfffffca1
    24a8:	6f007478 	svcvs	0x00007478
    24ac:	646f6370 	strbtvs	r6, [pc], #-880	; 24b4 <_Min_Heap_Size+0x1cb4>
    24b0:	73695f65 	cmnvc	r9, #404	; 0x194
    24b4:	5f6c625f 	svcpl	0x006c625f
    24b8:	625f726f 	subsvs	r7, pc, #-268435450	; 0xf0000006
    24bc:	7300786c 	movwvc	r7, #2156	; 0x86c
    24c0:	6b636174 	blvs	18daa98 <_Min_Heap_Size+0x18da298>
    24c4:	6172665f 	cmnvs	r2, pc, asr r6
    24c8:	745f656d 	ldrbvc	r6, [pc], #-1389	; 24d0 <_Min_Heap_Size+0x1cd0>
    24cc:	5f646600 	svcpl	0x00646600
    24d0:	6e69616d 	powvsez	f6, f1, #5.0
    24d4:	6174735f 	cmnvs	r4, pc, asr r3
    24d8:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    24dc:	006c6c75 	rsbeq	r6, ip, r5, ror ip
    24e0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
    24e4:	61660078 	smcvs	24584	; 0x6008
    24e8:	5f746c75 	svcpl	0x00746c75
    24ec:	706d7564 	rsbvc	r7, sp, r4, ror #10
    24f0:	5f6d625f 	svcpl	0x006d625f
    24f4:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    24f8:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
    24fc:	00747261 	rsbseq	r7, r4, r1, ror #4
    2500:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
    2504:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2508:	7473735f 	ldrbtvc	r7, [r3], #-863	; 0xfffffca1
    250c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2510:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2514:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2518:	625f706d 	subsvs	r7, pc, #109	; 0x6d
    251c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    2520:	5f6b6361 	svcpl	0x006b6361
    2524:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
    2528:	61660074 	smcvs	24580	; 0x6004
    252c:	5f746c75 	svcpl	0x00746c75
    2530:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2534:	63706f5f 	cmnvs	r0, #380	; 0x17c
    2538:	0065646f 	rsbeq	r6, r5, pc, ror #8
    253c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2540:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2544:	635f706d 	cmpvs	pc, #109	; 0x6d
    2548:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    254c:	6b636174 	blvs	18dab24 <_Min_Heap_Size+0x18da324>
    2550:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
    2554:	0072656b 	rsbseq	r6, r2, fp, ror #10
    2558:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    255c:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    2560:	5f656d61 	svcpl	0x00656d61
    2564:	756e616d 	strbvc	r6, [lr, #-365]!	; 0xfffffe93
    2568:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 2570 <_Min_Heap_Size+0x1d70>
    256c:	63706f00 	cmnvs	r0, #0, 30
    2570:	3165646f 	cmncc	r5, pc, ror #8
    2574:	63706f00 	cmnvs	r0, #0, 30
    2578:	3265646f 	rsbcc	r6, r5, #1862270976	; 0x6f000000
    257c:	61747300 	cmnvs	r4, r0, lsl #6
    2580:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2584:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2588:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    258c:	006c6175 	rsbeq	r6, ip, r5, ror r1
    2590:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2594:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    2598:	00656d61 	rsbeq	r6, r5, r1, ror #26
    259c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    25a0:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    25a4:	5f656d61 	svcpl	0x00656d61
    25a8:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    25ac:	745f7470 	ldrbvc	r7, [pc], #-1136	; 25b4 <_Min_Heap_Size+0x1db4>
    25b0:	5f646600 	svcpl	0x00646600
    25b4:	6e69616d 	powvsez	f6, f1, #5.0
    25b8:	6174735f 	cmnvs	r4, pc, asr r3
    25bc:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    25c0:	00657361 	rsbeq	r7, r5, r1, ror #6
    25c4:	6f6f425f 	svcvs	0x006f425f
    25c8:	2e2e006c 	cdpcs	0, 2, cr0, cr14, cr12, {3}
    25cc:	2f2e2e2f 	svccs	0x002e2e2f
    25d0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2520 <_Min_Heap_Size+0x1d20>
    25d4:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    25d8:	2f736c69 	svccs	0x00736c69
    25dc:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    25e0:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    25e4:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    25e8:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
    25ec:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    25f0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    25f4:	00632e70 	rsbeq	r2, r3, r0, ror lr
    25f8:	66667562 	strbtvs	r7, [r6], -r2, ror #10
    25fc:	66007265 	strvs	r7, [r0], -r5, ror #4
    2600:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2604:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    2608:	61685f70 	smcvs	34288	; 0x85f0
    260c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2610:	61660072 	smcvs	24578	; 0x6002
    2614:	5f746c75 	svcpl	0x00746c75
    2618:	706d7564 	rsbvc	r7, sp, r4, ror #10
    261c:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    2620:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    2624:	006e7275 	rsbeq	r7, lr, r5, ror r2
    2628:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
    262c:	534d5f74 	movtpl	r5, #57204	; 0xdf74
    2630:	74730050 	ldrbtvc	r0, [r3], #-80	; 0xffffffb0
    2634:	5f6b6361 	svcpl	0x006b6361
    2638:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    263c:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2640:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    2644:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
    2648:	00747865 	rsbseq	r7, r4, r5, ror #16
    264c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2650:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2654:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2658:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    265c:	61662f73 	smcvs	25331	; 0x62f3
    2660:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2664:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2668:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    266c:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2670:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    2674:	662f346d 	strtvs	r3, [pc], -sp, ror #8
    2678:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    267c:	6c61682d 	stclvs	8, cr6, [r1], #-180	; 0xffffff4c
    2680:	7000632e 	andvc	r6, r0, lr, lsr #6
    2684:	5f766572 	svcpl	0x00766572
    2688:	70616568 	rsbvc	r6, r1, r8, ror #10
    268c:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    2690:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
    2694:	6165685f 	cmnvs	r5, pc, asr r8
    2698:	74700070 	ldrbtvc	r0, [r0], #-112	; 0xffffff90
    269c:	66696472 			; <UNDEFINED> instruction: 0x66696472
    26a0:	00745f66 	rsbseq	r5, r4, r6, ror #30
    26a4:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
    26a8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    26ac:	6f697461 	svcvs	0x00697461
    26b0:	79732f6e 	ldmdbvc	r3!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    26b4:	6d656d73 	stclvs	13, cr6, [r5, #-460]!	; 0xfffffe34
    26b8:	5f00632e 	svcpl	0x0000632e
    26bc:	5f6e694d 	svcpl	0x006e694d
    26c0:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    26c4:	69535f6b 	ldmdbvs	r3, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    26c8:	6900657a 	stmdbvs	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    26cc:	0072636e 	rsbseq	r6, r2, lr, ror #6
    26d0:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
    26d4:	685f6b72 	ldmdavs	pc, {r1, r4, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    26d8:	5f706165 	svcpl	0x00706165
    26dc:	00646e65 	rsbeq	r6, r4, r5, ror #28
    26e0:	72655f5f 	rsbvc	r5, r5, #380	; 0x17c
    26e4:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
    26e8:	7262735f 	rsbvc	r7, r2, #2080374785	; 0x7c000001
    26ec:	7473006b 	ldrbtvc	r0, [r3], #-107	; 0xffffff95
    26f0:	5f6b6361 	svcpl	0x006b6361
    26f4:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    26f8:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
    26fc:	6564725f 	strbvs	r7, [r4, #-607]!	; 0xfffffda1
    2700:	6c630076 	stclvs	0, cr0, [r3], #-472	; 0xfffffe28
    2704:	5f6b636f 	svcpl	0x006b636f
    2708:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
    270c:	6f726976 	svcvs	0x00726976
    2710:	6c5f006e 	mrrcvs	0, 6, r0, pc, cr14	; <UNPREDICTABLE>
    2714:	6b656573 	blvs	195bce8 <_Min_Heap_Size+0x195b4e8>
    2718:	736d7400 	cmnvc	sp, #0, 8
    271c:	7475635f 	ldrbtvc	r6, [r5], #-863	; 0xfffffca1
    2720:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2724:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
    2728:	00657663 	rsbeq	r7, r5, r3, ror #12
    272c:	735f7674 	cmpvc	pc, #116, 12	; 0x7400000
    2730:	5f006365 	svcpl	0x00006365
    2734:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    2738:	5f747300 	svcpl	0x00747300
    273c:	6d697463 	cfstrdvs	mvd7, [r9, #-396]!	; 0xfffffe74
    2740:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; 1848 <_Min_Heap_Size+0x1048>
    2744:	5f00766e 	svcpl	0x0000766e
    2748:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
    274c:	72775f00 	rsbsvc	r5, r7, #0, 30
    2750:	00657469 	rsbeq	r7, r5, r9, ror #8
    2754:	645f7473 	ldrbvs	r7, [pc], #-1139	; 275c <_Min_Heap_Size+0x1f5c>
    2758:	5f007665 	svcpl	0x00007665
    275c:	61747366 	cmnvs	r4, r6, ror #6
    2760:	6b5f0074 	blvs	17c2938 <_Min_Heap_Size+0x17c2138>
    2764:	006c6c69 	rsbeq	r6, ip, r9, ror #24
    2768:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    276c:	5f00745f 	svcpl	0x0000745f
    2770:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    2774:	61656c5f 	cmnvs	r5, pc, asr ip
    2778:	34367473 	ldrtcc	r7, [r6], #-1139	; 0xfffffb8d
    277c:	7300745f 	movwvc	r7, #1119	; 0x45f
    2780:	6c625f74 	stclvs	15, cr5, [r2], #-464	; 0xfffffe30
    2784:	7a69736b 	bvc	1a5f538 <_Min_Heap_Size+0x1a5ed38>
    2788:	6e690065 	cdpvs	0, 6, cr0, cr9, cr5, {3}
    278c:	61697469 	cmnvs	r9, r9, ror #8
    2790:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    2794:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
    2798:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    279c:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    27a0:	73656c64 	cmnvc	r5, #100, 24	; 0x6400
    27a4:	5f747300 	svcpl	0x00747300
    27a8:	00646967 	rsbeq	r6, r4, r7, ror #18
    27ac:	6f6d5f5f 	svcvs	0x006d5f5f
    27b0:	745f6564 	ldrbvc	r6, [pc], #-1380	; 27b8 <_Min_Heap_Size+0x1fb8>
    27b4:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
    27b8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    27bc:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    27c0:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    27c4:	61637379 	smcvs	14137	; 0x3739
    27c8:	2e736c6c 	cdpcs	12, 7, cr6, cr3, cr12, {3}
    27cc:	6d740063 	ldclvs	0, cr0, [r4, #-396]!	; 0xfffffe74
    27d0:	73635f73 	cmnvc	r3, #460	; 0x1cc
    27d4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    27d8:	69745f00 	ldmdbvs	r4!, {r8, r9, sl, fp, ip, lr}^
    27dc:	0073656d 	rsbseq	r6, r3, sp, ror #10
    27e0:	6c6e5f5f 	stclvs	15, cr5, [lr], #-380	; 0xfffffe84
    27e4:	5f6b6e69 	svcpl	0x006b6e69
    27e8:	616e0074 	smcvs	57348	; 0xe004
    27ec:	5f00656d 	svcpl	0x0000656d
    27f0:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    27f4:	5f747300 	svcpl	0x00747300
    27f8:	006f6e69 	rsbeq	r6, pc, r9, ror #28
    27fc:	6165725f 	cmnvs	r5, pc, asr r2
    2800:	5f5f0064 	svcpl	0x005f0064
    2804:	675f6f69 	ldrbvs	r6, [pc, -r9, ror #30]
    2808:	68637465 	stmdavs	r3!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    280c:	74007261 	strvc	r7, [r0], #-609	; 0xfffffd9f
    2810:	736e5f76 	cmnvc	lr, #472	; 0x1d8
    2814:	73006365 	movwvc	r6, #869	; 0x365
    2818:	6c6e5f74 	stclvs	15, cr5, [lr], #-464	; 0xfffffe30
    281c:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2820:	65706f5f 	ldrbvs	r6, [r0, #-3935]!	; 0xfffff0a1
    2824:	7261006e 	rsbvc	r0, r1, #110	; 0x6e
    2828:	5f007667 	svcpl	0x00007667
    282c:	6b6c625f 	blvs	1b1b1b0 <_Min_Heap_Size+0x1b1a9b0>
    2830:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    2834:	7300745f 	movwvc	r7, #1119	; 0x45f
    2838:	74615f74 	strbtvc	r5, [r1], #-3956	; 0xfffff08c
    283c:	5f006d69 	svcpl	0x00006d69
    2840:	6b6e696c 	blvs	1b9cdf8 <_Min_Heap_Size+0x1b9c5f8>
    2844:	6c635f00 	stclvs	15, cr5, [r3], #-0
    2848:	0065736f 	rsbeq	r7, r5, pc, ror #6
    284c:	625f7473 	subsvs	r7, pc, #1929379840	; 0x73000000
    2850:	6b636f6c 	blvs	18de608 <_Min_Heap_Size+0x18dde08>
    2854:	695f0073 	ldmdbvs	pc, {r0, r1, r4, r5, r6}^	; <UNPREDICTABLE>
    2858:	74746173 	ldrbtvc	r6, [r4], #-371	; 0xfffffe8d
    285c:	74730079 	ldrbtvc	r0, [r3], #-121	; 0xffffff87
    2860:	69746d5f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    2864:	5f5f006d 	svcpl	0x005f006d
    2868:	5f6f6e69 	svcpl	0x006f6e69
    286c:	6d740074 	ldclvs	0, cr0, [r4, #-464]!	; 0xfffffe30
    2870:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
    2874:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2878:	755f7473 	ldrbvc	r7, [pc, #-1139]	; 240d <_Min_Heap_Size+0x1c0d>
    287c:	73006469 	movwvc	r6, #1129	; 0x469
    2880:	69735f74 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2884:	7300657a 	movwvc	r6, #1402	; 0x57a
    2888:	70735f74 	rsbsvc	r5, r3, r4, ror pc
    288c:	34657261 	strbtcc	r7, [r5], #-609	; 0xfffffd9f
    2890:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    2894:	78644961 	stmdavc	r4!, {r0, r5, r6, r8, fp, lr}^
    2898:	6f665f00 	svcvs	0x00665f00
    289c:	5f006b72 	svcpl	0x00006b72
    28a0:	70746567 	rsbsvc	r6, r4, r7, ror #10
    28a4:	5f006469 	svcpl	0x00006469
    28a8:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    28ac:	5f00745f 	svcpl	0x0000745f
    28b0:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    28b4:	7000745f 	andvc	r7, r0, pc, asr r4
    28b8:	00687461 	rsbeq	r7, r8, r1, ror #8
    28bc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    28c0:	63657073 	cmnvs	r5, #115	; 0x73
    28c4:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; 19cc <_Min_Heap_Size+0x11cc>
    28c8:	745f6469 	ldrbvc	r6, [pc], #-1129	; 28d0 <_Min_Heap_Size+0x20d0>
    28cc:	5f747300 	svcpl	0x00747300
    28d0:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    28d4:	736d7400 	cmnvc	sp, #0, 8
    28d8:	6974755f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
    28dc:	5f00656d 	svcpl	0x0000656d
    28e0:	696c6e75 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    28e4:	5f006b6e 	svcpl	0x00006b6e
    28e8:	6b6c625f 	blvs	1b1b26c <_Min_Heap_Size+0x1b1aa6c>
    28ec:	5f746e63 	svcpl	0x00746e63
    28f0:	5f5f0074 	svcpl	0x005f0074
    28f4:	5f646967 	svcpl	0x00646967
    28f8:	2f2e0074 	svccs	0x002e0074
    28fc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    2900:	2f707574 	svccs	0x00707574
    2904:	2f636367 	svccs	0x00636367
    2908:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    290c:	5f707574 	svcpl	0x00707574
    2910:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2914:	30346632 	eorscc	r6, r4, r2, lsr r6
    2918:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    291c:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
    2920:	53412055 	movtpl	r2, #4181	; 0x1055
    2924:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
    2928:	00312e36 	eorseq	r2, r1, r6, lsr lr
    292c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2930:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2934:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2938:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    293c:	61662f73 	smcvs	25331	; 0x62f3
    2940:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2944:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2948:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    294c:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2950:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    2954:	662f346d 	strtvs	r3, [pc], -sp, ror #8
    2958:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    295c:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    2960:	Address 0x00002960 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Heap_Size+0x10d0524>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
  errno = ENOMEM;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
}
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    if (status != HAL_OK)
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
      uwTickFreq = prevTickFreq;
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  errno = ENOMEM;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000018 	andeq	r0, r0, r8, lsl r0
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00000000 	andeq	r0, r0, r0
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
}
      28:	00040e4a 	andeq	r0, r4, sl, asr #28
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      38:	00000020 	andeq	r0, r0, r0, lsr #32
      3c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      40:	00018e02 	andeq	r8, r1, r2, lsl #28
      44:	0000001c 	andeq	r0, r0, ip, lsl r0
      if (pllsource != 0)
      48:	00000000 	andeq	r0, r0, r0
      4c:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	0000004c 	andeq	r0, r0, ip, asr #32
      54:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      58:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      5c:	180e4101 	stmdane	lr, {r0, r8, lr}
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000c0e5f 	andeq	r0, ip, pc, asr lr
      64:	00000014 	andeq	r0, r0, r4, lsl r0
      68:	00000000 	andeq	r0, r0, r0
      SystemCoreClock = pllvco/pllp;
      6c:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
      70:	00000018 	andeq	r0, r0, r8, lsl r0
      break;
      74:	83080e41 	movwhi	r0, #36417	; 0x8e41
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00018e02 	andeq	r8, r1, r2, lsl #28
      7c:	00000014 	andeq	r0, r0, r4, lsl r0
      80:	00000000 	andeq	r0, r0, r0
      84:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
      88:	00000018 	andeq	r0, r0, r8, lsl r0
      8c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      90:	00018e02 	andeq	r8, r1, r2, lsl #28
      94:	00000014 	andeq	r0, r0, r4, lsl r0
      98:	00000000 	andeq	r0, r0, r0
      9c:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
      a0:	00000018 	andeq	r0, r0, r8, lsl r0
      a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00000014 	andeq	r0, r0, r4, lsl r0
      b0:	00000000 	andeq	r0, r0, r0
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00000018 	andeq	r0, r0, r8, lsl r0
      bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00018e02 	andeq	r8, r1, r2, lsl #28
      c4:	00000014 	andeq	r0, r0, r4, lsl r0
      c8:	00000000 	andeq	r0, r0, r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
      d0:	00000018 	andeq	r0, r0, r8, lsl r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00018e02 	andeq	r8, r1, r2, lsl #28
      dc:	00000014 	andeq	r0, r0, r4, lsl r0
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	00000018 	andeq	r0, r0, r8, lsl r0
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
      f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    huart->TxXferCount = 0x00U;
      f4:	00000014 	andeq	r0, r0, r4, lsl r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00000000 	andeq	r0, r0, r0
    huart->gState  = HAL_UART_STATE_READY;
      fc:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
    huart->RxState = HAL_UART_STATE_READY;
     100:	0000002c 	andeq	r0, r0, ip, lsr #32
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	83080e41 	movwhi	r0, #36417	; 0x8e41
    HAL_UART_AbortCpltCallback(huart);
     108:	00018e02 	andeq	r8, r1, r2, lsl #28
     10c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
}
     118:	000000a8 	andeq	r0, r0, r8, lsr #1
     11c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     120:	580e4101 	stmdapl	lr, {r0, r8, lr}
     124:	0e0a4602 	cfmadd32eq	mvax0, mvfx4, mvfx10, mvfx2
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	000b4204 	andeq	r4, fp, r4, lsl #4
     12c:	0000000c 	andeq	r0, r0, ip
     130:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     134:	7c020001 	stcvc	0, cr0, [r2], {1}
     138:	000d0c0e 	andeq	r0, sp, lr, lsl #24
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	00000014 	andeq	r0, r0, r4, lsl r0
     140:	0000012c 	andeq	r0, r0, ip, lsr #2
     144:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00000014 	andeq	r0, r0, r4, lsl r0
     14c:	83080e41 	movwhi	r0, #36417	; 0x8e41
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00018e02 	andeq	r8, r1, r2, lsl #28
     154:	00000014 	andeq	r0, r0, r4, lsl r0
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	0000012c 	andeq	r0, r0, ip, lsr #2
     15c:	00000000 	andeq	r0, r0, r0
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	00000014 	andeq	r0, r0, r4, lsl r0
     164:	83080e41 	movwhi	r0, #36417	; 0x8e41
     168:	00018e02 	andeq	r8, r1, r2, lsl #28
     16c:	00000014 	andeq	r0, r0, r4, lsl r0
     170:	0000012c 	andeq	r0, r0, ip, lsr #2
}
     174:	08000700 	stmdaeq	r0, {r8, r9, sl}
     178:	00000014 	andeq	r0, r0, r4, lsl r0
     17c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     180:	00018e02 	andeq	r8, r1, r2, lsl #28
}
     184:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0000012c 	andeq	r0, r0, ip, lsr #2
     18c:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00000014 	andeq	r0, r0, r4, lsl r0
     194:	83080e41 	movwhi	r0, #36417	; 0x8e41
     198:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	00000014 	andeq	r0, r0, r4, lsl r0
     1a0:	0000012c 	andeq	r0, r0, ip, lsr #2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
     1a8:	00000014 	andeq	r0, r0, r4, lsl r0
     1ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     1b4:	0000000c 	andeq	r0, r0, ip
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	0000012c 	andeq	r0, r0, ip, lsr #2
     1bc:	0800073c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl}
     1c0:	00000002 	andeq	r0, r0, r2
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	0000000c 	andeq	r0, r0, ip
     1c8:	0000012c 	andeq	r0, r0, ip, lsr #2
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
     1d0:	00000002 	andeq	r0, r0, r2
     1d4:	0000000c 	andeq	r0, r0, ip
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	0000012c 	andeq	r0, r0, ip, lsr #2
     1dc:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00000002 	andeq	r0, r0, r2
     1e4:	00000014 	andeq	r0, r0, r4, lsl r0
     1e8:	0000012c 	andeq	r0, r0, ip, lsr #2
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	08000742 	stmdaeq	r0, {r1, r6, r8, r9, sl}
     1f0:	00000008 	andeq	r0, r0, r8
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     1fc:	00000014 	andeq	r0, r0, r4, lsl r0
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0000012c 	andeq	r0, r0, ip, lsr #2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	0800074c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl}
     208:	00000010 	andeq	r0, r0, r0, lsl r0
     20c:	83080e41 	movwhi	r0, #36417	; 0x8e41
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	00018e02 	andeq	r8, r1, r2, lsl #28
     214:	00000014 	andeq	r0, r0, r4, lsl r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	0000012c 	andeq	r0, r0, ip, lsr #2
     21c:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000018 	andeq	r0, r0, r8, lsl r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	83080e41 	movwhi	r0, #36417	; 0x8e41
     228:	00018e02 	andeq	r8, r1, r2, lsl #28
  tmp = hdma->Instance->FCR;
     22c:	00000014 	andeq	r0, r0, r4, lsl r0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	0000012c 	andeq	r0, r0, ip, lsr #2
  tmp |= hdma->Init.FIFOMode;
     234:	08000774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl}
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	00000018 	andeq	r0, r0, r8, lsl r0
    tmp |= hdma->Init.FIFOThreshold;
     23c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00018e02 	andeq	r8, r1, r2, lsl #28
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	0000000c 	andeq	r0, r0, ip
     248:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  hdma->Instance->FCR = tmp;
     24c:	7c020001 	stcvc	0, cr0, [r2], {1}
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00000014 	andeq	r0, r0, r4, lsl r0
     258:	00000244 	andeq	r0, r0, r4, asr #4
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
  hdma->State = HAL_DMA_STATE_READY;
     260:	0000004c 	andeq	r0, r0, ip, asr #32
     264:	61100e41 	tstvs	r0, r1, asr #28
  return HAL_OK;
     268:	0000000e 	andeq	r0, r0, lr
     26c:	0000000c 	andeq	r0, r0, ip
     270:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	7c020001 	stcvc	0, cr0, [r2], {1}
     278:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     27c:	00000014 	andeq	r0, r0, r4, lsl r0
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0000026c 	andeq	r0, r0, ip, ror #4
        hdma->State = HAL_DMA_STATE_READY;
     284:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
        return HAL_ERROR; 
     288:	00000034 	andeq	r0, r0, r4, lsr r0
    return HAL_ERROR;
     28c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00018e02 	andeq	r8, r1, r2, lsl #28
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0000001c 	andeq	r0, r0, ip, lsl r0
     298:	0000026c 	andeq	r0, r0, ip, ror #4
      tickstart = HAL_GetTick();
     29c:	0800080c 	stmdaeq	r0, {r2, r3, fp}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00000080 	andeq	r0, r0, r0, lsl #1
     2a4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     2a8:	41018e02 	tstmi	r1, r2, lsl #28
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0a4e280e 	beq	138a2ec <_Min_Heap_Size+0x1389aec>
     2b0:	0b41080e 	bleq	10422f0 <_Min_Heap_Size+0x1041af0>
     2b4:	00000014 	andeq	r0, r0, r4, lsl r0
          return HAL_TIMEOUT;
     2b8:	0000026c 	andeq	r0, r0, ip, ror #4
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00000000 	andeq	r0, r0, r0
     2c0:	00000034 	andeq	r0, r0, r4, lsr r0
     2c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00018e02 	andeq	r8, r1, r2, lsl #28
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	0000000c 	andeq	r0, r0, ip
     2d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2d4:	7c020001 	stcvc	0, cr0, [r2], {1}
      tickstart = HAL_GetTick();
     2d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00000014 	andeq	r0, r0, r4, lsl r0
     2e0:	000002cc 	andeq	r0, r0, ip, asr #5
     2e4:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00000038 	andeq	r0, r0, r8, lsr r0
     2ec:	57080e41 	strpl	r0, [r8, -r1, asr #28]
          return HAL_TIMEOUT;
     2f0:	0000000e 	andeq	r0, r0, lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	0000000c 	andeq	r0, r0, ip
     2f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2fc:	7c020001 	stcvc	0, cr0, [r2], {1}
     300:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     304:	0000000c 	andeq	r0, r0, ip
     308:	000002f4 	strdeq	r0, [r0], -r4
     30c:	00000000 	andeq	r0, r0, r0
     310:	00000020 	andeq	r0, r0, r0, lsr #32
      tickstart = HAL_GetTick();
     314:	0000000c 	andeq	r0, r0, ip
     318:	000002f4 	strdeq	r0, [r0], -r4
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	080008c4 	stmdaeq	r0, {r2, r6, r7, fp}
     320:	0000005c 	andeq	r0, r0, ip, asr r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	0000000c 	andeq	r0, r0, ip
     328:	000002f4 	strdeq	r0, [r0], -r4
     32c:	08000920 	stmdaeq	r0, {r5, r8, fp}
     330:	00000060 	andeq	r0, r0, r0, rrx
          return HAL_TIMEOUT;
     334:	00000018 	andeq	r0, r0, r8, lsl r0
    if(pwrclkchanged == SET)
     338:	000002f4 	strdeq	r0, [r0], -r4
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	08000980 	stmdaeq	r0, {r7, r8, fp}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	00000174 	andeq	r0, r0, r4, ror r1
     344:	83100e41 	tsthi	r0, #1040	; 0x410
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     34c:	00018e02 	andeq	r8, r1, r2, lsl #28
     350:	00000028 	andeq	r0, r0, r8, lsr #32
     354:	000002f4 	strdeq	r0, [r0], -r4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0000008a 	andeq	r0, r0, sl, lsl #1
     360:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	86068507 	strhi	r8, [r6], -r7, lsl #10
     368:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     370:	280e4101 	stmdacs	lr, {r0, r8, lr}
     374:	1c0e0a7c 			; <UNDEFINED> instruction: 0x1c0e0a7c
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00000b42 	andeq	r0, r0, r2, asr #22
     37c:	0000000c 	andeq	r0, r0, ip
     380:	000002f4 	strdeq	r0, [r0], -r4
     384:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000002 	andeq	r0, r0, r2
     38c:	0000001c 	andeq	r0, r0, ip, lsl r0
        __HAL_RCC_PLL_DISABLE();
     390:	000002f4 	strdeq	r0, [r0], -r4
     394:	08000b80 	stmdaeq	r0, {r7, r8, r9, fp}
        tickstart = HAL_GetTick();
     398:	0000012c 	andeq	r0, r0, ip, lsr #2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     3a0:	02018e02 	andeq	r8, r1, #2, 28
     3a4:	c4000e8b 	strgt	r0, [r0], #-3723	; 0xfffff175
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	000000ce 	andeq	r0, r0, lr, asr #1
     3ac:	0000001c 	andeq	r0, r0, ip, lsl r0
            return HAL_TIMEOUT;
     3b0:	000002f4 	strdeq	r0, [r0], -r4
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00000000 	andeq	r0, r0, r0
     3b8:	000000e0 	andeq	r0, r0, r0, ror #1
     3bc:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	02018e02 	andeq	r8, r1, #2, 28
     3c4:	c4000e66 	strgt	r0, [r0], #-3686	; 0xfffff19a
     3c8:	000000ce 	andeq	r0, r0, lr, asr #1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00000020 	andeq	r0, r0, r0, lsr #32
     3d0:	000002f4 	strdeq	r0, [r0], -r4
     3d4:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	000000fc 	strdeq	r0, [r0], -ip
     3dc:	83100e43 	tsthi	r0, #1072	; 0x430
     3e0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	02018e02 	andeq	r8, r1, #2, 28
     3e8:	c3000e75 	movwgt	r0, #3701	; 0xe75
     3ec:	00cec5c4 	sbceq	ip, lr, r4, asr #11
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00000020 	andeq	r0, r0, r0, lsr #32
     3f4:	000002f4 	strdeq	r0, [r0], -r4
     3f8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	00000124 	andeq	r0, r0, r4, lsr #2
     400:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     404:	86038504 	strhi	r8, [r3], -r4, lsl #10
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	02018e02 	andeq	r8, r1, #2, 28
     40c:	c4000e87 	strgt	r0, [r0], #-3719	; 0xfffff179
     410:	00cec6c5 	sbceq	ip, lr, r5, asr #13
     414:	0000000c 	andeq	r0, r0, ip
     418:	000002f4 	strdeq	r0, [r0], -r4
     41c:	00000000 	andeq	r0, r0, r0
     420:	00000002 	andeq	r0, r0, r2
     424:	00000018 	andeq	r0, r0, r8, lsl r0
        __HAL_RCC_PLL_ENABLE();
     428:	000002f4 	strdeq	r0, [r0], -r4
     42c:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     430:	00000078 	andeq	r0, r0, r8, ror r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     438:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
     43c:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000028 	andeq	r0, r0, r8, lsr #32
     444:	000002f4 	strdeq	r0, [r0], -r4
            return HAL_TIMEOUT;
     448:	08000cac 	stmdaeq	r0, {r2, r3, r5, r7, sl, fp}
  return HAL_OK;
     44c:	000000cc 	andeq	r0, r0, ip, asr #1
        __HAL_RCC_PLL_DISABLE();
     450:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     454:	86058506 	strhi	r8, [r5], -r6, lsl #10
        tickstart = HAL_GetTick();
     458:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	41018e02 	tstmi	r1, r2, lsl #28
     460:	5f02200e 	svcpl	0x0002200e
     464:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0000000b 	andeq	r0, r0, fp
     46c:	00000028 	andeq	r0, r0, r8, lsr #32
            return HAL_TIMEOUT;
     470:	000002f4 	strdeq	r0, [r0], -r4
  return HAL_OK;
     474:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	000000d2 	ldrdeq	r0, [r0], -r2
        pll_config = RCC->PLLCFGR;
     47c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	86058506 	strhi	r8, [r5], -r6, lsl #10
     484:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	41018e02 	tstmi	r1, r2, lsl #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	6202200e 	andvs	r2, r2, #14
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	0000000b 	andeq	r0, r0, fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0000000c 	andeq	r0, r0, ip
     49c:	000002f4 	strdeq	r0, [r0], -r4
     4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00000038 	andeq	r0, r0, r8, lsr r0
     4a8:	00000018 	andeq	r0, r0, r8, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	000002f4 	strdeq	r0, [r0], -r4
     4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000084 	andeq	r0, r0, r4, lsl #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	83100e41 	tsthi	r0, #1040	; 0x410
     4bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
  return HAL_OK;
     4c0:	00018e02 	andeq	r8, r1, r2, lsl #28
}
     4c4:	0000000c 	andeq	r0, r0, ip
        return HAL_ERROR;
     4c8:	000002f4 	strdeq	r0, [r0], -r4
        return HAL_ERROR;
     4cc:	00000000 	andeq	r0, r0, r0
}
     4d0:	00000094 	muleq	r0, r4, r0
        return HAL_ERROR;
     4d4:	00000014 	andeq	r0, r0, r4, lsl r0
          return HAL_ERROR;
     4d8:	000002f4 	strdeq	r0, [r0], -r4
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00000096 	muleq	r0, r6, r0
     4e4:	70080e5a 	andvc	r0, r8, sl, asr lr
     4e8:	0000000e 	andeq	r0, r0, lr
     4ec:	00000014 	andeq	r0, r0, r4, lsl r0
     4f0:	000002f4 	strdeq	r0, [r0], -r4
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	00000084 	andeq	r0, r0, r4, lsl #1
     4fc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     500:	00018e02 	andeq	r8, r1, r2, lsl #28
     504:	00000028 	andeq	r0, r0, r8, lsr #32
     508:	000002f4 	strdeq	r0, [r0], -r4
     50c:	00000000 	andeq	r0, r0, r0
     510:	00000120 	andeq	r0, r0, r0, lsr #2
     514:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     518:	86068507 	strhi	r8, [r6], -r7, lsl #10
     51c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     520:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     524:	280e4101 	stmdacs	lr, {r0, r8, lr}
     528:	0e0a8902 	vmlaeq.f16	s16, s20, s4	; <UNPREDICTABLE>
     52c:	000b421c 	andeq	r4, fp, ip, lsl r2
     530:	0000000c 	andeq	r0, r0, ip
     534:	000002f4 	strdeq	r0, [r0], -r4
     538:	00000000 	andeq	r0, r0, r0
     53c:	00000004 	andeq	r0, r0, r4
     540:	00000014 	andeq	r0, r0, r4, lsl r0
     544:	000002f4 	strdeq	r0, [r0], -r4
     548:	00000000 	andeq	r0, r0, r0
     54c:	000000f2 	strdeq	r0, [r0], -r2
     550:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     554:	00018e02 	andeq	r8, r1, r2, lsl #28
     558:	00000014 	andeq	r0, r0, r4, lsl r0
     55c:	000002f4 	strdeq	r0, [r0], -r4
     560:	00000000 	andeq	r0, r0, r0
     564:	0000006c 	andeq	r0, r0, ip, rrx
     568:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     56c:	00018e02 	andeq	r8, r1, r2, lsl #28
     570:	00000014 	andeq	r0, r0, r4, lsl r0
     574:	000002f4 	strdeq	r0, [r0], -r4
     578:	00000000 	andeq	r0, r0, r0
     57c:	000000a6 	andeq	r0, r0, r6, lsr #1
     580:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     584:	00018e02 	andeq	r8, r1, r2, lsl #28
     588:	0000000c 	andeq	r0, r0, ip
     58c:	000002f4 	strdeq	r0, [r0], -r4
     590:	08000d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp}
     594:	00000002 	andeq	r0, r0, r2
     598:	00000014 	andeq	r0, r0, r4, lsl r0
     59c:	000002f4 	strdeq	r0, [r0], -r4
     5a0:	00000000 	andeq	r0, r0, r0
     5a4:	0000004c 	andeq	r0, r0, ip, asr #32
     5a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b0:	00000014 	andeq	r0, r0, r4, lsl r0
     5b4:	000002f4 	strdeq	r0, [r0], -r4
     5b8:	08000d7a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, fp}
     5bc:	0000001a 	andeq	r0, r0, sl, lsl r0
     5c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5c8:	0000000c 	andeq	r0, r0, ip
     5cc:	000002f4 	strdeq	r0, [r0], -r4
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	00000002 	andeq	r0, r0, r2
     5d8:	00000014 	andeq	r0, r0, r4, lsl r0
     5dc:	000002f4 	strdeq	r0, [r0], -r4
     5e0:	00000000 	andeq	r0, r0, r0
     5e4:	0000000a 	andeq	r0, r0, sl
     5e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f0:	0000000c 	andeq	r0, r0, ip
     5f4:	000002f4 	strdeq	r0, [r0], -r4
     5f8:	08000d94 	stmdaeq	r0, {r2, r4, r7, r8, sl, fp}
     5fc:	00000002 	andeq	r0, r0, r2
     600:	0000000c 	andeq	r0, r0, ip
     604:	000002f4 	strdeq	r0, [r0], -r4
     608:	00000000 	andeq	r0, r0, r0
     60c:	00000002 	andeq	r0, r0, r2
     610:	0000000c 	andeq	r0, r0, ip
     614:	000002f4 	strdeq	r0, [r0], -r4
     618:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
     61c:	00000002 	andeq	r0, r0, r2
     620:	00000014 	andeq	r0, r0, r4, lsl r0
     624:	000002f4 	strdeq	r0, [r0], -r4
     628:	00000000 	andeq	r0, r0, r0
     62c:	00000058 	andeq	r0, r0, r8, asr r0
     630:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     634:	00018e02 	andeq	r8, r1, r2, lsl #28
     638:	00000014 	andeq	r0, r0, r4, lsl r0
     63c:	000002f4 	strdeq	r0, [r0], -r4
     640:	08000d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp}
     644:	00000010 	andeq	r0, r0, r0, lsl r0
     648:	83080e41 	movwhi	r0, #36417	; 0x8e41
     64c:	00018e02 	andeq	r8, r1, r2, lsl #28
     650:	0000000c 	andeq	r0, r0, ip
     654:	000002f4 	strdeq	r0, [r0], -r4
     658:	00000000 	andeq	r0, r0, r0
     65c:	00000002 	andeq	r0, r0, r2
     660:	00000018 	andeq	r0, r0, r8, lsl r0
     664:	000002f4 	strdeq	r0, [r0], -r4
     668:	00000000 	andeq	r0, r0, r0
     66c:	00000124 	andeq	r0, r0, r4, lsr #2
     670:	83100e41 	tsthi	r0, #1040	; 0x410
     674:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     678:	00018e02 	andeq	r8, r1, r2, lsl #28
     67c:	00000014 	andeq	r0, r0, r4, lsl r0
     680:	000002f4 	strdeq	r0, [r0], -r4
     684:	00000000 	andeq	r0, r0, r0
     688:	0000002c 	andeq	r0, r0, ip, lsr #32
     68c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     690:	00018e02 	andeq	r8, r1, r2, lsl #28
     694:	00000014 	andeq	r0, r0, r4, lsl r0
     698:	000002f4 	strdeq	r0, [r0], -r4
     69c:	00000000 	andeq	r0, r0, r0
     6a0:	0000002c 	andeq	r0, r0, ip, lsr #32
     6a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6ac:	0000000c 	andeq	r0, r0, ip
     6b0:	000002f4 	strdeq	r0, [r0], -r4
     6b4:	00000000 	andeq	r0, r0, r0
     6b8:	00000002 	andeq	r0, r0, r2
     6bc:	00000014 	andeq	r0, r0, r4, lsl r0
     6c0:	000002f4 	strdeq	r0, [r0], -r4
     6c4:	00000000 	andeq	r0, r0, r0
     6c8:	00000080 	andeq	r0, r0, r0, lsl #1
     6cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6d4:	00000014 	andeq	r0, r0, r4, lsl r0
     6d8:	000002f4 	strdeq	r0, [r0], -r4
     6dc:	00000000 	andeq	r0, r0, r0
     6e0:	00000014 	andeq	r0, r0, r4, lsl r0
     6e4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6ec:	0000000c 	andeq	r0, r0, ip
     6f0:	000002f4 	strdeq	r0, [r0], -r4
     6f4:	00000000 	andeq	r0, r0, r0
     6f8:	00000002 	andeq	r0, r0, r2
     6fc:	00000014 	andeq	r0, r0, r4, lsl r0
     700:	000002f4 	strdeq	r0, [r0], -r4
     704:	00000000 	andeq	r0, r0, r0
     708:	000000bc 	strheq	r0, [r0], -ip
     70c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     710:	00018e02 	andeq	r8, r1, r2, lsl #28
     714:	00000014 	andeq	r0, r0, r4, lsl r0
     718:	000002f4 	strdeq	r0, [r0], -r4
     71c:	00000000 	andeq	r0, r0, r0
     720:	00000016 	andeq	r0, r0, r6, lsl r0
     724:	83080e41 	movwhi	r0, #36417	; 0x8e41
     728:	00018e02 	andeq	r8, r1, r2, lsl #28
     72c:	0000000c 	andeq	r0, r0, ip
     730:	000002f4 	strdeq	r0, [r0], -r4
     734:	08000da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp}
     738:	00000002 	andeq	r0, r0, r2
     73c:	00000024 	andeq	r0, r0, r4, lsr #32
     740:	000002f4 	strdeq	r0, [r0], -r4
     744:	08000daa 	stmdaeq	r0, {r1, r3, r5, r7, r8, sl, fp}
     748:	000000e6 	andeq	r0, r0, r6, ror #1
     74c:	8e040e60 	cdphi	14, 0, cr0, cr4, cr0, {3}
     750:	100e4101 	andne	r4, lr, r1, lsl #2
     754:	42040e76 	andmi	r0, r4, #1888	; 0x760
     758:	53ce000e 	bicpl	r0, lr, #14
     75c:	018e100e 	orreq	r1, lr, lr
     760:	ce000e43 	cdpgt	14, 0, cr0, cr0, cr3, {2}
     764:	00000020 	andeq	r0, r0, r0, lsr #32
     768:	000002f4 	strdeq	r0, [r0], -r4
     76c:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
     770:	00000288 	andeq	r0, r0, r8, lsl #5
     774:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     778:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     77c:	180e4101 	stmdane	lr, {r0, r8, lr}
     780:	0c0e0a67 			; <UNDEFINED> instruction: 0x0c0e0a67
     784:	00000b41 	andeq	r0, r0, r1, asr #22
     788:	00000014 	andeq	r0, r0, r4, lsl r0
     78c:	000002f4 	strdeq	r0, [r0], -r4
     790:	00000000 	andeq	r0, r0, r0
     794:	0000001e 	andeq	r0, r0, lr, lsl r0
     798:	83080e41 	movwhi	r0, #36417	; 0x8e41
     79c:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a0:	00000014 	andeq	r0, r0, r4, lsl r0
     7a4:	000002f4 	strdeq	r0, [r0], -r4
     7a8:	00000000 	andeq	r0, r0, r0
     7ac:	0000009a 	muleq	r0, sl, r0
     7b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7b8:	00000014 	andeq	r0, r0, r4, lsl r0
     7bc:	000002f4 	strdeq	r0, [r0], -r4
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	00000084 	andeq	r0, r0, r4, lsl #1
     7c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d0:	00000014 	andeq	r0, r0, r4, lsl r0
     7d4:	000002f4 	strdeq	r0, [r0], -r4
     7d8:	00000000 	andeq	r0, r0, r0
     7dc:	00000088 	andeq	r0, r0, r8, lsl #1
     7e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7e8:	00000014 	andeq	r0, r0, r4, lsl r0
     7ec:	000002f4 	strdeq	r0, [r0], -r4
     7f0:	00000000 	andeq	r0, r0, r0
     7f4:	00000088 	andeq	r0, r0, r8, lsl #1
     7f8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     800:	0000000c 	andeq	r0, r0, ip
     804:	000002f4 	strdeq	r0, [r0], -r4
     808:	00000000 	andeq	r0, r0, r0
     80c:	00000036 	andeq	r0, r0, r6, lsr r0
     810:	0000000c 	andeq	r0, r0, ip
     814:	000002f4 	strdeq	r0, [r0], -r4
     818:	00000000 	andeq	r0, r0, r0
     81c:	00000036 	andeq	r0, r0, r6, lsr r0
     820:	0000000c 	andeq	r0, r0, ip
     824:	000002f4 	strdeq	r0, [r0], -r4
     828:	00000000 	andeq	r0, r0, r0
     82c:	0000000c 	andeq	r0, r0, ip
     830:	0000000c 	andeq	r0, r0, ip
     834:	000002f4 	strdeq	r0, [r0], -r4
     838:	00000000 	andeq	r0, r0, r0
     83c:	00000004 	andeq	r0, r0, r4
     840:	0000000c 	andeq	r0, r0, ip
     844:	000002f4 	strdeq	r0, [r0], -r4
     848:	00000000 	andeq	r0, r0, r0
     84c:	00000036 	andeq	r0, r0, r6, lsr r0
     850:	00000014 	andeq	r0, r0, r4, lsl r0
     854:	000002f4 	strdeq	r0, [r0], -r4
     858:	00000000 	andeq	r0, r0, r0
     85c:	00000026 	andeq	r0, r0, r6, lsr #32
     860:	83080e41 	movwhi	r0, #36417	; 0x8e41
     864:	00018e02 	andeq	r8, r1, r2, lsl #28
     868:	00000028 	andeq	r0, r0, r8, lsr #32
     86c:	000002f4 	strdeq	r0, [r0], -r4
     870:	00000000 	andeq	r0, r0, r0
     874:	00000066 	andeq	r0, r0, r6, rrx
     878:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     87c:	41018e02 	tstmi	r1, r2, lsl #28
     880:	0a45100e 	beq	11448c0 <_Min_Heap_Size+0x11440c0>
     884:	0b41080e 	bleq	10428c4 <_Min_Heap_Size+0x10420c4>
     888:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     88c:	100e42ce 	andne	r4, lr, lr, asr #5
     890:	018e0284 	orreq	r0, lr, r4, lsl #5
     894:	0000001c 	andeq	r0, r0, ip, lsl r0
     898:	000002f4 	strdeq	r0, [r0], -r4
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8a4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     8a8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     8ac:	180e4101 	stmdane	lr, {r0, r8, lr}
     8b0:	0c0e4902 			; <UNDEFINED> instruction: 0x0c0e4902
     8b4:	00000014 	andeq	r0, r0, r4, lsl r0
     8b8:	000002f4 	strdeq	r0, [r0], -r4
     8bc:	00000000 	andeq	r0, r0, r0
     8c0:	00000026 	andeq	r0, r0, r6, lsr #32
     8c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8cc:	00000028 	andeq	r0, r0, r8, lsr #32
     8d0:	000002f4 	strdeq	r0, [r0], -r4
     8d4:	00000000 	andeq	r0, r0, r0
     8d8:	00000066 	andeq	r0, r0, r6, rrx
     8dc:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     8e0:	41018e02 	tstmi	r1, r2, lsl #28
     8e4:	0a45100e 	beq	1144924 <_Min_Heap_Size+0x1144124>
     8e8:	0b41080e 	bleq	1042928 <_Min_Heap_Size+0x1042128>
     8ec:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     8f0:	100e42ce 	andne	r4, lr, lr, asr #5
     8f4:	018e0284 	orreq	r0, lr, r4, lsl #5
     8f8:	0000000c 	andeq	r0, r0, ip
     8fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     900:	7c020001 	stcvc	0, cr0, [r2], {1}
     904:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     908:	0000000c 	andeq	r0, r0, ip
     90c:	000008f8 	strdeq	r0, [r0], -r8
     910:	00000000 	andeq	r0, r0, r0
     914:	00000004 	andeq	r0, r0, r4
     918:	00000034 	andeq	r0, r0, r4, lsr r0
     91c:	000008f8 	strdeq	r0, [r0], -r8
     920:	00000000 	andeq	r0, r0, r0
     924:	000004fc 	strdeq	r0, [r0], -ip
     928:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     92c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     930:	41018e02 	tstmi	r1, r2, lsl #28
     934:	5c03180e 	stcpl	8, cr1, [r3], {14}
     938:	c4000e02 	strgt	r0, [r0], #-3586	; 0xfffff1fe
     93c:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     940:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     944:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     948:	0a46018e 	beq	1180f88 <_Min_Heap_Size+0x1180788>
     94c:	0b41100e 	bleq	104498c <_Min_Heap_Size+0x104418c>
     950:	00000020 	andeq	r0, r0, r0, lsr #32
     954:	000008f8 	strdeq	r0, [r0], -r8
     958:	00000000 	andeq	r0, r0, r0
     95c:	00000118 	andeq	r0, r0, r8, lsl r1
     960:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     964:	86038504 	strhi	r8, [r3], -r4, lsl #10
     968:	41018e02 	tstmi	r1, r2, lsl #28
     96c:	0a7e300e 	beq	1f8c9ac <_Min_Heap_Size+0x1f8c1ac>
     970:	0b41100e 	bleq	10449b0 <_Min_Heap_Size+0x10441b0>
     974:	0000000c 	andeq	r0, r0, ip
     978:	000008f8 	strdeq	r0, [r0], -r8
     97c:	00000000 	andeq	r0, r0, r0
     980:	0000000c 	andeq	r0, r0, ip
     984:	0000000c 	andeq	r0, r0, ip
     988:	000008f8 	strdeq	r0, [r0], -r8
     98c:	00000000 	andeq	r0, r0, r0
     990:	0000000c 	andeq	r0, r0, ip
     994:	00000014 	andeq	r0, r0, r4, lsl r0
     998:	000008f8 	strdeq	r0, [r0], -r8
     99c:	00000000 	andeq	r0, r0, r0
     9a0:	000000d4 	ldrdeq	r0, [r0], -r4
     9a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     9ac:	0000002c 	andeq	r0, r0, ip, lsr #32
     9b0:	000008f8 	strdeq	r0, [r0], -r8
     9b4:	00000000 	andeq	r0, r0, r0
     9b8:	0000021c 	andeq	r0, r0, ip, lsl r2
     9bc:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     9c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9c4:	02018e02 	andeq	r8, r1, #2, 28
     9c8:	c4000ef6 	strgt	r0, [r0], #-3830	; 0xfffff10a
     9cc:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     9d0:	0484100e 	streq	r1, [r4], #14
     9d4:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     9d8:	0000018e 	andeq	r0, r0, lr, lsl #3
     9dc:	0000000c 	andeq	r0, r0, ip
     9e0:	000008f8 	strdeq	r0, [r0], -r8
     9e4:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
     9e8:	0000000c 	andeq	r0, r0, ip
     9ec:	00000014 	andeq	r0, r0, r4, lsl r0
     9f0:	000008f8 	strdeq	r0, [r0], -r8
     9f4:	08001124 	stmdaeq	r0, {r2, r5, r8, ip}
     9f8:	00000020 	andeq	r0, r0, r0, lsr #32
     9fc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a00:	00018e02 	andeq	r8, r1, r2, lsl #28
     a04:	00000014 	andeq	r0, r0, r4, lsl r0
     a08:	000008f8 	strdeq	r0, [r0], -r8
     a0c:	08001144 	stmdaeq	r0, {r2, r6, r8, ip}
     a10:	00000020 	andeq	r0, r0, r0, lsr #32
     a14:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a18:	00018e02 	andeq	r8, r1, r2, lsl #28
     a1c:	0000000c 	andeq	r0, r0, ip
     a20:	000008f8 	strdeq	r0, [r0], -r8
     a24:	00000000 	andeq	r0, r0, r0
     a28:	000000cc 	andeq	r0, r0, ip, asr #1
     a2c:	0000000c 	andeq	r0, r0, ip
     a30:	000008f8 	strdeq	r0, [r0], -r8
     a34:	00000000 	andeq	r0, r0, r0
     a38:	0000003c 	andeq	r0, r0, ip, lsr r0
     a3c:	0000000c 	andeq	r0, r0, ip
     a40:	000008f8 	strdeq	r0, [r0], -r8
     a44:	00000000 	andeq	r0, r0, r0
     a48:	00000002 	andeq	r0, r0, r2
     a4c:	00000014 	andeq	r0, r0, r4, lsl r0
     a50:	000008f8 	strdeq	r0, [r0], -r8
     a54:	00000000 	andeq	r0, r0, r0
     a58:	00000020 	andeq	r0, r0, r0, lsr #32
     a5c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a60:	00018e02 	andeq	r8, r1, r2, lsl #28
     a64:	0000000c 	andeq	r0, r0, ip
     a68:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a6c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a70:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a74:	00000024 	andeq	r0, r0, r4, lsr #32
     a78:	00000a64 	andeq	r0, r0, r4, ror #20
     a7c:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
     a80:	000002e8 	andeq	r0, r0, r8, ror #5
     a84:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     a88:	86058506 	strhi	r8, [r5], -r6, lsl #10
     a8c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     a90:	41018e02 	tstmi	r1, r2, lsl #28
     a94:	6703200e 	strvs	r2, [r3, -lr]
     a98:	00180e01 	andseq	r0, r8, r1, lsl #28
     a9c:	0000001c 	andeq	r0, r0, ip, lsl r0
     aa0:	00000a64 	andeq	r0, r0, r4, ror #20
     aa4:	00000000 	andeq	r0, r0, r0
     aa8:	00000184 	andeq	r0, r0, r4, lsl #3
     aac:	83180e41 	tsthi	r8, #1040	; 0x410
     ab0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     ab4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     ab8:	00018e02 	andeq	r8, r1, r2, lsl #28
     abc:	00000018 	andeq	r0, r0, r8, lsl r0
     ac0:	00000a64 	andeq	r0, r0, r4, ror #20
     ac4:	00000000 	andeq	r0, r0, r0
     ac8:	00000028 	andeq	r0, r0, r8, lsr #32
     acc:	83100e41 	tsthi	r0, #1040	; 0x410
     ad0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     ad4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad8:	00000018 	andeq	r0, r0, r8, lsl r0
     adc:	00000a64 	andeq	r0, r0, r4, ror #20
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00000038 	andeq	r0, r0, r8, lsr r0
     ae8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     aec:	86038504 	strhi	r8, [r3], -r4, lsl #10
     af0:	00018e02 	andeq	r8, r1, r2, lsl #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	00000a64 	andeq	r0, r0, r4, ror #20
     afc:	00000000 	andeq	r0, r0, r0
     b00:	0000002c 	andeq	r0, r0, ip, lsr #32
     b04:	83100e41 	tsthi	r0, #1040	; 0x410
     b08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b10:	00000020 	andeq	r0, r0, r0, lsr #32
     b14:	00000a64 	andeq	r0, r0, r4, ror #20
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	00000048 	andeq	r0, r0, r8, asr #32
     b20:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b24:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b28:	180e4101 	stmdane	lr, {r0, r8, lr}
     b2c:	0c0e0a56 			; <UNDEFINED> instruction: 0x0c0e0a56
     b30:	00000b41 	andeq	r0, r0, r1, asr #22
     b34:	0000000c 	andeq	r0, r0, ip
     b38:	00000a64 	andeq	r0, r0, r4, ror #20
     b3c:	00000000 	andeq	r0, r0, r0
     b40:	00000002 	andeq	r0, r0, r2
     b44:	00000014 	andeq	r0, r0, r4, lsl r0
     b48:	00000a64 	andeq	r0, r0, r4, ror #20
     b4c:	00000000 	andeq	r0, r0, r0
     b50:	0000001c 	andeq	r0, r0, ip, lsl r0
     b54:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b58:	00018e02 	andeq	r8, r1, r2, lsl #28
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b64:	7c020001 	stcvc	0, cr0, [r2], {1}
     b68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b6c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b70:	00000b5c 	andeq	r0, r0, ip, asr fp
     b74:	00000000 	andeq	r0, r0, r0
     b78:	0000002c 	andeq	r0, r0, ip, lsr #32
     b7c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     b80:	4f018502 	svcmi	0x00018502
     b84:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     b88:	000b4100 	andeq	r4, fp, r0, lsl #2
     b8c:	00000018 	andeq	r0, r0, r8, lsl r0
     b90:	00000b5c 	andeq	r0, r0, ip, asr fp
     b94:	00000000 	andeq	r0, r0, r0
     b98:	00000044 	andeq	r0, r0, r4, asr #32
     b9c:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     ba0:	c40a5501 	strgt	r5, [sl], #-1281	; 0xfffffaff
     ba4:	0b41000e 	bleq	1040be4 <_Min_Heap_Size+0x10403e4>
     ba8:	0000000c 	andeq	r0, r0, ip
     bac:	00000b5c 	andeq	r0, r0, ip, asr fp
     bb0:	00000000 	andeq	r0, r0, r0
     bb4:	0000008e 	andeq	r0, r0, lr, lsl #1
     bb8:	00000018 	andeq	r0, r0, r8, lsl r0
     bbc:	00000b5c 	andeq	r0, r0, ip, asr fp
     bc0:	00000000 	andeq	r0, r0, r0
     bc4:	0000028e 	andeq	r0, r0, lr, lsl #5
     bc8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     bcc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     bd0:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd4:	00000020 	andeq	r0, r0, r0, lsr #32
     bd8:	00000b5c 	andeq	r0, r0, ip, asr fp
     bdc:	00000000 	andeq	r0, r0, r0
     be0:	000000dc 	ldrdeq	r0, [r0], -ip
     be4:	83100e43 	tsthi	r0, #1072	; 0x430
     be8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     bec:	02018e02 	andeq	r8, r1, #2, 28
     bf0:	c3000e64 	movwgt	r0, #3684	; 0xe64
     bf4:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     bf8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bfc:	00000b5c 	andeq	r0, r0, ip, asr fp
     c00:	00000000 	andeq	r0, r0, r0
     c04:	00000078 	andeq	r0, r0, r8, ror r0
     c08:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c0c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c10:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c14:	00018e02 	andeq	r8, r1, r2, lsl #28
     c18:	0000001c 	andeq	r0, r0, ip, lsl r0
     c1c:	00000b5c 	andeq	r0, r0, ip, asr fp
     c20:	00000000 	andeq	r0, r0, r0
     c24:	00000098 	muleq	r0, r8, r0
     c28:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c2c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c30:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c34:	00018e02 	andeq	r8, r1, r2, lsl #28
     c38:	00000018 	andeq	r0, r0, r8, lsl r0
     c3c:	00000b5c 	andeq	r0, r0, ip, asr fp
     c40:	0800144c 	stmdaeq	r0, {r2, r3, r6, sl, ip}
     c44:	00000094 	muleq	r0, r4, r0
     c48:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c4c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     c50:	00018e02 	andeq	r8, r1, r2, lsl #28
     c54:	0000000c 	andeq	r0, r0, ip
     c58:	00000b5c 	andeq	r0, r0, ip, asr fp
     c5c:	080014e0 	stmdaeq	r0, {r5, r6, r7, sl, ip}
     c60:	00000026 	andeq	r0, r0, r6, lsr #32
     c64:	00000020 	andeq	r0, r0, r0, lsr #32
     c68:	00000b5c 	andeq	r0, r0, ip, asr fp
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	00000128 	andeq	r0, r0, r8, lsr #2
     c74:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     c78:	86078508 	strhi	r8, [r7], -r8, lsl #10
     c7c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     c80:	8a038904 	bhi	e3098 <_Min_Heap_Size+0xe2898>
     c84:	00018e02 	andeq	r8, r1, r2, lsl #28
     c88:	00000020 	andeq	r0, r0, r0, lsr #32
     c8c:	00000b5c 	andeq	r0, r0, ip, asr fp
     c90:	00000000 	andeq	r0, r0, r0
     c94:	000001dc 	ldrdeq	r0, [r0], -ip
     c98:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     c9c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     ca0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     ca4:	200e4101 	andcs	r4, lr, r1, lsl #2
     ca8:	140ee702 	strne	lr, [lr], #-1794	; 0xfffff8fe
     cac:	0000000c 	andeq	r0, r0, ip
     cb0:	00000b5c 	andeq	r0, r0, ip, asr fp
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	0000005a 	andeq	r0, r0, sl, asr r0
     cbc:	0000000c 	andeq	r0, r0, ip
     cc0:	00000b5c 	andeq	r0, r0, ip, asr fp
     cc4:	00000000 	andeq	r0, r0, r0
     cc8:	0000006e 	andeq	r0, r0, lr, rrx
     ccc:	0000000c 	andeq	r0, r0, ip
     cd0:	00000b5c 	andeq	r0, r0, ip, asr fp
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	00000006 	andeq	r0, r0, r6
     cdc:	0000000c 	andeq	r0, r0, ip
     ce0:	00000b5c 	andeq	r0, r0, ip, asr fp
     ce4:	00000000 	andeq	r0, r0, r0
     ce8:	00000004 	andeq	r0, r0, r4
     cec:	0000000c 	andeq	r0, r0, ip
     cf0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     cf4:	7c020001 	stcvc	0, cr0, [r2], {1}
     cf8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cfc:	00000014 	andeq	r0, r0, r4, lsl r0
     d00:	00000cec 	andeq	r0, r0, ip, ror #25
     d04:	08001508 	stmdaeq	r0, {r3, r8, sl, ip}
     d08:	0000003c 	andeq	r0, r0, ip, lsr r0
     d0c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	00000018 	andeq	r0, r0, r8, lsl r0
     d18:	00000cec 	andeq	r0, r0, ip, ror #25
     d1c:	08001544 	stmdaeq	r0, {r2, r6, r8, sl, ip}
     d20:	0000008c 	andeq	r0, r0, ip, lsl #1
     d24:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d28:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d30:	00000014 	andeq	r0, r0, r4, lsl r0
     d34:	00000cec 	andeq	r0, r0, ip, ror #25
     d38:	080015d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, ip}
     d3c:	00000030 	andeq	r0, r0, r0, lsr r0
     d40:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d44:	00018e02 	andeq	r8, r1, r2, lsl #28
     d48:	00000014 	andeq	r0, r0, r4, lsl r0
     d4c:	00000cec 	andeq	r0, r0, ip, ror #25
     d50:	00000000 	andeq	r0, r0, r0
     d54:	00000038 	andeq	r0, r0, r8, lsr r0
     d58:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d60:	0000000c 	andeq	r0, r0, ip
     d64:	00000cec 	andeq	r0, r0, ip, ror #25
     d68:	00000000 	andeq	r0, r0, r0
     d6c:	00000024 	andeq	r0, r0, r4, lsr #32
     d70:	0000000c 	andeq	r0, r0, ip
     d74:	00000cec 	andeq	r0, r0, ip, ror #25
     d78:	08001600 	stmdaeq	r0, {r9, sl, ip}
     d7c:	00000028 	andeq	r0, r0, r8, lsr #32
     d80:	0000000c 	andeq	r0, r0, ip
     d84:	00000cec 	andeq	r0, r0, ip, ror #25
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d90:	0000000c 	andeq	r0, r0, ip
     d94:	00000cec 	andeq	r0, r0, ip, ror #25
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000020 	andeq	r0, r0, r0, lsr #32
     da0:	00000014 	andeq	r0, r0, r4, lsl r0
     da4:	00000cec 	andeq	r0, r0, ip, ror #25
     da8:	00000000 	andeq	r0, r0, r0
     dac:	00000128 	andeq	r0, r0, r8, lsr #2
     db0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     db4:	00018e02 	andeq	r8, r1, r2, lsl #28
     db8:	0000000c 	andeq	r0, r0, ip
     dbc:	00000cec 	andeq	r0, r0, ip, ror #25
     dc0:	00000000 	andeq	r0, r0, r0
     dc4:	00000006 	andeq	r0, r0, r6
     dc8:	0000000c 	andeq	r0, r0, ip
     dcc:	00000cec 	andeq	r0, r0, ip, ror #25
     dd0:	00000000 	andeq	r0, r0, r0
     dd4:	00000010 	andeq	r0, r0, r0, lsl r0
     dd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ddc:	00000cec 	andeq	r0, r0, ip, ror #25
     de0:	00000000 	andeq	r0, r0, r0
     de4:	0000007c 	andeq	r0, r0, ip, ror r0
     de8:	83180e41 	tsthi	r8, #1040	; 0x410
     dec:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     df0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     df4:	00018e02 	andeq	r8, r1, r2, lsl #28
     df8:	00000014 	andeq	r0, r0, r4, lsl r0
     dfc:	00000cec 	andeq	r0, r0, ip, ror #25
     e00:	00000000 	andeq	r0, r0, r0
     e04:	00000034 	andeq	r0, r0, r4, lsr r0
     e08:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e10:	00000014 	andeq	r0, r0, r4, lsl r0
     e14:	00000cec 	andeq	r0, r0, ip, ror #25
     e18:	00000000 	andeq	r0, r0, r0
     e1c:	0000003c 	andeq	r0, r0, ip, lsr r0
     e20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e24:	00018e02 	andeq	r8, r1, r2, lsl #28
     e28:	00000014 	andeq	r0, r0, r4, lsl r0
     e2c:	00000cec 	andeq	r0, r0, ip, ror #25
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00000034 	andeq	r0, r0, r4, lsr r0
     e38:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e40:	00000014 	andeq	r0, r0, r4, lsl r0
     e44:	00000cec 	andeq	r0, r0, ip, ror #25
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	0000003c 	andeq	r0, r0, ip, lsr r0
     e50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e54:	00018e02 	andeq	r8, r1, r2, lsl #28
     e58:	00000014 	andeq	r0, r0, r4, lsl r0
     e5c:	00000cec 	andeq	r0, r0, ip, ror #25
     e60:	00000000 	andeq	r0, r0, r0
     e64:	0000003c 	andeq	r0, r0, ip, lsr r0
     e68:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e70:	0000000c 	andeq	r0, r0, ip
     e74:	00000cec 	andeq	r0, r0, ip, ror #25
     e78:	00000000 	andeq	r0, r0, r0
     e7c:	00000002 	andeq	r0, r0, r2
     e80:	00000014 	andeq	r0, r0, r4, lsl r0
     e84:	00000cec 	andeq	r0, r0, ip, ror #25
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	00000008 	andeq	r0, r0, r8
     e90:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e94:	00018e02 	andeq	r8, r1, r2, lsl #28
     e98:	0000000c 	andeq	r0, r0, ip
     e9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ea0:	7c020001 	stcvc	0, cr0, [r2], {1}
     ea4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ea8:	0000000c 	andeq	r0, r0, ip
     eac:	00000e98 	muleq	r0, r8, lr
     eb0:	00000000 	andeq	r0, r0, r0
     eb4:	00000002 	andeq	r0, r0, r2
     eb8:	0000000c 	andeq	r0, r0, ip
     ebc:	00000e98 	muleq	r0, r8, lr
     ec0:	00000000 	andeq	r0, r0, r0
     ec4:	00000002 	andeq	r0, r0, r2
     ec8:	00000014 	andeq	r0, r0, r4, lsl r0
     ecc:	00000e98 	muleq	r0, r8, lr
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	0000003c 	andeq	r0, r0, ip, lsr r0
     ed8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	00000014 	andeq	r0, r0, r4, lsl r0
     ee4:	00000e98 	muleq	r0, r8, lr
     ee8:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
     eec:	0000004c 	andeq	r0, r0, ip, asr #32
     ef0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ef4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ef8:	00000014 	andeq	r0, r0, r4, lsl r0
     efc:	00000e98 	muleq	r0, r8, lr
     f00:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
     f04:	00000034 	andeq	r0, r0, r4, lsr r0
     f08:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f10:	0000000c 	andeq	r0, r0, ip
     f14:	00000e98 	muleq	r0, r8, lr
     f18:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
     f1c:	00000018 	andeq	r0, r0, r8, lsl r0
     f20:	0000000c 	andeq	r0, r0, ip
     f24:	00000e98 	muleq	r0, r8, lr
     f28:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
     f2c:	0000000c 	andeq	r0, r0, ip
     f30:	0000000c 	andeq	r0, r0, ip
     f34:	00000e98 	muleq	r0, r8, lr
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	0000000c 	andeq	r0, r0, ip
     f40:	00000018 	andeq	r0, r0, r8, lsl r0
     f44:	00000e98 	muleq	r0, r8, lr
     f48:	00000000 	andeq	r0, r0, r0
     f4c:	00000048 	andeq	r0, r0, r8, asr #32
     f50:	83100e41 	tsthi	r0, #1040	; 0x410
     f54:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f58:	00018e02 	andeq	r8, r1, r2, lsl #28
     f5c:	0000000c 	andeq	r0, r0, ip
     f60:	00000e98 	muleq	r0, r8, lr
     f64:	00000000 	andeq	r0, r0, r0
     f68:	0000000c 	andeq	r0, r0, ip
     f6c:	00000018 	andeq	r0, r0, r8, lsl r0
     f70:	00000e98 	muleq	r0, r8, lr
     f74:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
     f78:	00000028 	andeq	r0, r0, r8, lsr #32
     f7c:	83100e41 	tsthi	r0, #1040	; 0x410
     f80:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f84:	00018e02 	andeq	r8, r1, r2, lsl #28
     f88:	0000000c 	andeq	r0, r0, ip
     f8c:	00000e98 	muleq	r0, r8, lr
     f90:	00000000 	andeq	r0, r0, r0
     f94:	0000000e 	andeq	r0, r0, lr
     f98:	0000000c 	andeq	r0, r0, ip
     f9c:	00000e98 	muleq	r0, r8, lr
     fa0:	00000000 	andeq	r0, r0, r0
     fa4:	0000000e 	andeq	r0, r0, lr
     fa8:	0000000c 	andeq	r0, r0, ip
     fac:	00000e98 	muleq	r0, r8, lr
     fb0:	00000000 	andeq	r0, r0, r0
     fb4:	00000008 	andeq	r0, r0, r8
     fb8:	0000000c 	andeq	r0, r0, ip
     fbc:	00000e98 	muleq	r0, r8, lr
     fc0:	00000000 	andeq	r0, r0, r0
     fc4:	0000000c 	andeq	r0, r0, ip
     fc8:	0000000c 	andeq	r0, r0, ip
     fcc:	00000e98 	muleq	r0, r8, lr
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	00000010 	andeq	r0, r0, r0, lsl r0
     fd8:	0000000c 	andeq	r0, r0, ip
     fdc:	00000e98 	muleq	r0, r8, lr
     fe0:	00000000 	andeq	r0, r0, r0
     fe4:	00000010 	andeq	r0, r0, r0, lsl r0
     fe8:	0000000c 	andeq	r0, r0, ip
     fec:	00000e98 	muleq	r0, r8, lr
     ff0:	00000000 	andeq	r0, r0, r0
     ff4:	00000010 	andeq	r0, r0, r0, lsl r0
     ff8:	0000000c 	andeq	r0, r0, ip
     ffc:	00000e98 	muleq	r0, r8, lr
    1000:	00000000 	andeq	r0, r0, r0
    1004:	00000010 	andeq	r0, r0, r0, lsl r0
    1008:	0000000c 	andeq	r0, r0, ip
    100c:	00000e98 	muleq	r0, r8, lr
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000010 	andeq	r0, r0, r0, lsl r0
    1018:	0000000c 	andeq	r0, r0, ip
    101c:	00000e98 	muleq	r0, r8, lr
    1020:	00000000 	andeq	r0, r0, r0
    1024:	00000010 	andeq	r0, r0, r0, lsl r0
    1028:	0000000c 	andeq	r0, r0, ip
    102c:	00000e98 	muleq	r0, r8, lr
    1030:	00000000 	andeq	r0, r0, r0
    1034:	00000010 	andeq	r0, r0, r0, lsl r0
    1038:	0000000c 	andeq	r0, r0, ip
    103c:	00000e98 	muleq	r0, r8, lr
    1040:	00000000 	andeq	r0, r0, r0
    1044:	00000010 	andeq	r0, r0, r0, lsl r0
    1048:	0000000c 	andeq	r0, r0, ip
    104c:	00000e98 	muleq	r0, r8, lr
    1050:	00000000 	andeq	r0, r0, r0
    1054:	00000010 	andeq	r0, r0, r0, lsl r0
    1058:	0000000c 	andeq	r0, r0, ip
    105c:	00000e98 	muleq	r0, r8, lr
    1060:	00000000 	andeq	r0, r0, r0
    1064:	0000000c 	andeq	r0, r0, ip
    1068:	0000000c 	andeq	r0, r0, ip
    106c:	00000e98 	muleq	r0, r8, lr
    1070:	00000000 	andeq	r0, r0, r0
    1074:	0000000c 	andeq	r0, r0, ip
    1078:	0000000c 	andeq	r0, r0, ip
    107c:	00000e98 	muleq	r0, r8, lr
    1080:	00000000 	andeq	r0, r0, r0
    1084:	0000000c 	andeq	r0, r0, ip
    1088:	0000000c 	andeq	r0, r0, ip
    108c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1090:	7c020001 	stcvc	0, cr0, [r2], {1}
    1094:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1098:	0000000c 	andeq	r0, r0, ip
    109c:	00001088 	andeq	r1, r0, r8, lsl #1
    10a0:	080016f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, ip}
    10a4:	00000014 	andeq	r0, r0, r4, lsl r0
    10a8:	0000000c 	andeq	r0, r0, ip
    10ac:	00001088 	andeq	r1, r0, r8, lsl #1
    10b0:	00000000 	andeq	r0, r0, r0
    10b4:	000000a0 	andeq	r0, r0, r0, lsr #1
    10b8:	0000000c 	andeq	r0, r0, ip
    10bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10c0:	7c020001 	stcvc	0, cr0, [r2], {1}
    10c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10c8:	00000014 	andeq	r0, r0, r4, lsl r0
    10cc:	000010b8 	strheq	r1, [r0], -r8
    10d0:	08001708 	stmdaeq	r0, {r3, r8, r9, sl, ip}
    10d4:	0000002c 	andeq	r0, r0, ip, lsr #32
    10d8:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
    10dc:	0000000e 	andeq	r0, r0, lr
    10e0:	0000000c 	andeq	r0, r0, ip
    10e4:	000010b8 	strheq	r1, [r0], -r8
    10e8:	08001734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, ip}
    10ec:	00000036 	andeq	r0, r0, r6, lsr r0
    10f0:	00000014 	andeq	r0, r0, r4, lsl r0
    10f4:	000010b8 	strheq	r1, [r0], -r8
    10f8:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    10fc:	00000018 	andeq	r0, r0, r8, lsl r0
    1100:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1104:	00018e02 	andeq	r8, r1, r2, lsl #28
    1108:	00000014 	andeq	r0, r0, r4, lsl r0
    110c:	000010b8 	strheq	r1, [r0], -r8
    1110:	08001784 	stmdaeq	r0, {r2, r7, r8, r9, sl, ip}
    1114:	00000050 	andeq	r0, r0, r0, asr r0
    1118:	83080e41 	movwhi	r0, #36417	; 0x8e41
    111c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1120:	00000020 	andeq	r0, r0, r0, lsr #32
    1124:	000010b8 	strheq	r1, [r0], -r8
    1128:	080017d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, ip}
    112c:	0000007c 	andeq	r0, r0, ip, ror r0
    1130:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    1134:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    1138:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    113c:	89038804 	stmdbhi	r3, {r2, fp, pc}
    1140:	00018e02 	andeq	r8, r1, r2, lsl #28
    1144:	0000001c 	andeq	r0, r0, ip, lsl r0
    1148:	000010b8 	strheq	r1, [r0], -r8
    114c:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
    1150:	00000184 	andeq	r0, r0, r4, lsl #3
    1154:	83180e41 	tsthi	r8, #1040	; 0x410
    1158:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    115c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1160:	00018e02 	andeq	r8, r1, r2, lsl #28
    1164:	0000000c 	andeq	r0, r0, ip
    1168:	000010b8 	strheq	r1, [r0], -r8
    116c:	00000000 	andeq	r0, r0, r0
    1170:	00000006 	andeq	r0, r0, r6
    1174:	0000000c 	andeq	r0, r0, ip
    1178:	000010b8 	strheq	r1, [r0], -r8
    117c:	00000000 	andeq	r0, r0, r0
    1180:	00000008 	andeq	r0, r0, r8
    1184:	0000000c 	andeq	r0, r0, ip
    1188:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    118c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1190:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1194:	00000014 	andeq	r0, r0, r4, lsl r0
    1198:	00001184 	andeq	r1, r0, r4, lsl #3
    119c:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
    11a0:	00000088 	andeq	r0, r0, r8, lsl #1
    11a4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    11a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11ac:	0000000c 	andeq	r0, r0, ip
    11b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11b4:	7c020001 	stcvc	0, cr0, [r2], {1}
    11b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11bc:	00000014 	andeq	r0, r0, r4, lsl r0
    11c0:	000011ac 	andeq	r1, r0, ip, lsr #3
    11c4:	08001a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, ip}
    11c8:	00000048 	andeq	r0, r0, r8, asr #32
    11cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    11d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    11d4:	0000000c 	andeq	r0, r0, ip
    11d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11dc:	7c020001 	stcvc	0, cr0, [r2], {1}
    11e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11e4:	0000000c 	andeq	r0, r0, ip
    11e8:	000011d4 	ldrdeq	r1, [r0], -r4
    11ec:	00000000 	andeq	r0, r0, r0
    11f0:	00000002 	andeq	r0, r0, r2
    11f4:	0000000c 	andeq	r0, r0, ip
    11f8:	000011d4 	ldrdeq	r1, [r0], -r4
    11fc:	00000000 	andeq	r0, r0, r0
    1200:	00000004 	andeq	r0, r0, r4
    1204:	00000014 	andeq	r0, r0, r4, lsl r0
    1208:	000011d4 	ldrdeq	r1, [r0], -r4
    120c:	00000000 	andeq	r0, r0, r0
    1210:	00000010 	andeq	r0, r0, r0, lsl r0
    1214:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1218:	00018e02 	andeq	r8, r1, r2, lsl #28
    121c:	00000014 	andeq	r0, r0, r4, lsl r0
    1220:	000011d4 	ldrdeq	r1, [r0], -r4
    1224:	00000000 	andeq	r0, r0, r0
    1228:	0000000c 	andeq	r0, r0, ip
    122c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1230:	00018e02 	andeq	r8, r1, r2, lsl #28
    1234:	00000018 	andeq	r0, r0, r8, lsl r0
    1238:	000011d4 	ldrdeq	r1, [r0], -r4
    123c:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
    1240:	00000020 	andeq	r0, r0, r0, lsr #32
    1244:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1248:	86038504 	strhi	r8, [r3], -r4, lsl #10
    124c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1250:	00000018 	andeq	r0, r0, r8, lsl r0
    1254:	000011d4 	ldrdeq	r1, [r0], -r4
    1258:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
    125c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1260:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1264:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1268:	00018e02 	andeq	r8, r1, r2, lsl #28
    126c:	0000000c 	andeq	r0, r0, ip
    1270:	000011d4 	ldrdeq	r1, [r0], -r4
    1274:	08001ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip}
    1278:	00000006 	andeq	r0, r0, r6
    127c:	0000000c 	andeq	r0, r0, ip
    1280:	000011d4 	ldrdeq	r1, [r0], -r4
    1284:	08001ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp, ip}
    1288:	0000000a 	andeq	r0, r0, sl
    128c:	0000000c 	andeq	r0, r0, ip
    1290:	000011d4 	ldrdeq	r1, [r0], -r4
    1294:	08001af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, ip}
    1298:	00000004 	andeq	r0, r0, r4
    129c:	0000000c 	andeq	r0, r0, ip
    12a0:	000011d4 	ldrdeq	r1, [r0], -r4
    12a4:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
    12a8:	00000004 	andeq	r0, r0, r4
    12ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    12b0:	000011d4 	ldrdeq	r1, [r0], -r4
    12b4:	00000000 	andeq	r0, r0, r0
    12b8:	0000000a 	andeq	r0, r0, sl
    12bc:	810c0e41 	tsthi	ip, r1, asr #28
    12c0:	83028203 	movwhi	r8, #8707	; 0x2203
    12c4:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
    12c8:	00000ec1 	andeq	r0, r0, r1, asr #29
    12cc:	00000014 	andeq	r0, r0, r4, lsl r0
    12d0:	000011d4 	ldrdeq	r1, [r0], -r4
    12d4:	00000000 	andeq	r0, r0, r0
    12d8:	00000010 	andeq	r0, r0, r0, lsl r0
    12dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    12e4:	00000014 	andeq	r0, r0, r4, lsl r0
    12e8:	000011d4 	ldrdeq	r1, [r0], -r4
    12ec:	00000000 	andeq	r0, r0, r0
    12f0:	00000010 	andeq	r0, r0, r0, lsl r0
    12f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    12fc:	0000000c 	andeq	r0, r0, ip
    1300:	000011d4 	ldrdeq	r1, [r0], -r4
    1304:	00000000 	andeq	r0, r0, r0
    1308:	00000006 	andeq	r0, r0, r6
    130c:	0000000c 	andeq	r0, r0, ip
    1310:	000011d4 	ldrdeq	r1, [r0], -r4
    1314:	00000000 	andeq	r0, r0, r0
    1318:	0000000a 	andeq	r0, r0, sl
    131c:	00000014 	andeq	r0, r0, r4, lsl r0
    1320:	000011d4 	ldrdeq	r1, [r0], -r4
    1324:	00000000 	andeq	r0, r0, r0
    1328:	00000010 	andeq	r0, r0, r0, lsl r0
    132c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1330:	00018e02 	andeq	r8, r1, r2, lsl #28
    1334:	00000014 	andeq	r0, r0, r4, lsl r0
    1338:	000011d4 	ldrdeq	r1, [r0], -r4
    133c:	00000000 	andeq	r0, r0, r0
    1340:	00000010 	andeq	r0, r0, r0, lsl r0
    1344:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1348:	00018e02 	andeq	r8, r1, r2, lsl #28
    134c:	00000014 	andeq	r0, r0, r4, lsl r0
    1350:	000011d4 	ldrdeq	r1, [r0], -r4
    1354:	00000000 	andeq	r0, r0, r0
    1358:	00000010 	andeq	r0, r0, r0, lsl r0
    135c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1360:	00018e02 	andeq	r8, r1, r2, lsl #28
    1364:	0000000c 	andeq	r0, r0, ip
    1368:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    136c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1370:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1374:	0000000c 	andeq	r0, r0, ip
    1378:	00001364 	andeq	r1, r0, r4, ror #6
    137c:	08001b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp, ip}
    1380:	0000000c 	andeq	r0, r0, ip
    1384:	0000000c 	andeq	r0, r0, ip
    1388:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    138c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1390:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1394:	00000018 	andeq	r0, r0, r8, lsl r0
    1398:	00001384 	andeq	r1, r0, r4, lsl #7
    139c:	08001b58 	stmdaeq	r0, {r3, r4, r6, r8, r9, fp, ip}
    13a0:	00000048 	andeq	r0, r0, r8, asr #32
    13a4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13a8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    13b0:	0000000c 	andeq	r0, r0, ip
    13b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13c0:	0000000c 	andeq	r0, r0, ip
    13c4:	000013b0 			; <UNDEFINED> instruction: 0x000013b0
    13c8:	08001ba0 	stmdaeq	r0, {r5, r7, r8, r9, fp, ip}
    13cc:	00000010 	andeq	r0, r0, r0, lsl r0
    13d0:	0000000c 	andeq	r0, r0, ip
    13d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13d8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13e0:	0000002c 	andeq	r0, r0, ip, lsr #32
    13e4:	000013d0 	ldrdeq	r1, [r0], -r0
    13e8:	00000000 	andeq	r0, r0, r0
    13ec:	00000028 	andeq	r0, r0, r8, lsr #32
    13f0:	810c0e41 	tsthi	ip, r1, asr #28
    13f4:	83028203 	movwhi	r8, #8707	; 0x2203
    13f8:	200e4101 	andcs	r4, lr, r1, lsl #2
    13fc:	048e0584 	streq	r0, [lr], #1412	; 0x584
    1400:	42140e4e 	andsmi	r0, r4, #1248	; 0x4e0
    1404:	0c0ec4ce 	cfstrseq	mvf12, [lr], {206}	; 0xce
    1408:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    140c:	0000000e 	andeq	r0, r0, lr
    1410:	00000030 	andeq	r0, r0, r0, lsr r0
    1414:	000013d0 	ldrdeq	r1, [r0], -r0
    1418:	08001bb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, fp, ip}
    141c:	00000030 	andeq	r0, r0, r0, lsr r0
    1420:	80100e41 	andshi	r0, r0, r1, asr #28
    1424:	82038104 	andhi	r8, r3, #4, 2
    1428:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    142c:	0684200e 	streq	r2, [r4], lr
    1430:	0e4f058e 	cdpeq	5, 4, cr0, cr15, cr14, {4}
    1434:	c4ce4218 	strbgt	r4, [lr], #536	; 0x218
    1438:	c341100e 	movtgt	r1, #4110	; 0x100e
    143c:	0ec0c1c2 	acseqdm	f4, f2
    1440:	00000000 	andeq	r0, r0, r0
    1444:	0000000c 	andeq	r0, r0, ip
    1448:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    144c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1450:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1454:	00000018 	andeq	r0, r0, r8, lsl r0
    1458:	00001444 	andeq	r1, r0, r4, asr #8
    145c:	08001be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp, ip}
    1460:	000000dc 	ldrdeq	r0, [r0], -ip
    1464:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1468:	86038504 	strhi	r8, [r3], -r4, lsl #10
    146c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1470:	0000000c 	andeq	r0, r0, ip
    1474:	00001444 	andeq	r1, r0, r4, asr #8
    1478:	08001cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp, ip}
    147c:	00000010 	andeq	r0, r0, r0, lsl r0
    1480:	0000000c 	andeq	r0, r0, ip
    1484:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1488:	7c020001 	stcvc	0, cr0, [r2], {1}
    148c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1490:	0000001c 	andeq	r0, r0, ip, lsl r0
    1494:	00001480 	andeq	r1, r0, r0, lsl #9
    1498:	08001ccc 	stmdaeq	r0, {r2, r3, r6, r7, sl, fp, ip}
    149c:	000000a4 	andeq	r0, r0, r4, lsr #1
    14a0:	83180e41 	tsthi	r8, #1040	; 0x410
    14a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    14a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    14ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    14b0:	0000000c 	andeq	r0, r0, ip
    14b4:	00001480 	andeq	r1, r0, r0, lsl #9
    14b8:	00000000 	andeq	r0, r0, r0
    14bc:	00000010 	andeq	r0, r0, r0, lsl r0
    14c0:	0000000c 	andeq	r0, r0, ip
    14c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    14cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14d0:	00000018 	andeq	r0, r0, r8, lsl r0
    14d4:	000014c0 	andeq	r1, r0, r0, asr #9
    14d8:	08001d70 	stmdaeq	r0, {r4, r5, r6, r8, sl, fp, ip}
    14dc:	000000dc 	ldrdeq	r0, [r0], -ip
    14e0:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    14e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14ec:	0000000c 	andeq	r0, r0, ip
    14f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14f4:	7c020001 	stcvc	0, cr0, [r2], {1}
    14f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1500:	000014ec 	andeq	r1, r0, ip, ror #9
    1504:	08001e4c 	stmdaeq	r0, {r2, r3, r6, r9, sl, fp, ip}
    1508:	0000010c 	andeq	r0, r0, ip, lsl #2
    150c:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    1510:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1514:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1518:	00018e02 	andeq	r8, r1, r2, lsl #28
    151c:	00000018 	andeq	r0, r0, r8, lsl r0
    1520:	000014ec 	andeq	r1, r0, ip, ror #9
    1524:	08001f58 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, fp, ip}
    1528:	00000078 	andeq	r0, r0, r8, ror r0
    152c:	83100e41 	tsthi	r0, #1040	; 0x410
    1530:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1534:	00018e02 	andeq	r8, r1, r2, lsl #28
    1538:	0000000c 	andeq	r0, r0, ip
    153c:	000014ec 	andeq	r1, r0, ip, ror #9
    1540:	00000000 	andeq	r0, r0, r0
    1544:	00000024 	andeq	r0, r0, r4, lsr #32
    1548:	0000000c 	andeq	r0, r0, ip
    154c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1550:	7c020001 	stcvc	0, cr0, [r2], {1}
    1554:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1558:	00000014 	andeq	r0, r0, r4, lsl r0
    155c:	00001548 	andeq	r1, r0, r8, asr #10
    1560:	08001fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp, ip}
    1564:	00000048 	andeq	r0, r0, r8, asr #32
    1568:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    156c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1570:	0000000c 	andeq	r0, r0, ip
    1574:	00001548 	andeq	r1, r0, r8, asr #10
    1578:	08002018 	stmdaeq	r0, {r3, r4, sp}
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	00000014 	andeq	r0, r0, r4, lsl r0
    1584:	00001548 	andeq	r1, r0, r8, asr #10
    1588:	00000000 	andeq	r0, r0, r0
    158c:	00000018 	andeq	r0, r0, r8, lsl r0
    1590:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1594:	00018e02 	andeq	r8, r1, r2, lsl #28
    1598:	00000014 	andeq	r0, r0, r4, lsl r0
    159c:	00001548 	andeq	r1, r0, r8, asr #10
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	00000018 	andeq	r0, r0, r8, lsl r0
    15a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    15ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    15b0:	00000018 	andeq	r0, r0, r8, lsl r0
    15b4:	00001548 	andeq	r1, r0, r8, asr #10
    15b8:	08002024 	stmdaeq	r0, {r2, r5, sp}
    15bc:	0000002c 	andeq	r0, r0, ip, lsr #32
    15c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    15c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    15c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15cc:	0000000c 	andeq	r0, r0, ip
    15d0:	00001548 	andeq	r1, r0, r8, asr #10
    15d4:	00000000 	andeq	r0, r0, r0
    15d8:	0000000c 	andeq	r0, r0, ip
    15dc:	0000000c 	andeq	r0, r0, ip
    15e0:	00001548 	andeq	r1, r0, r8, asr #10
    15e4:	08002050 	stmdaeq	r0, {r4, r6, sp}
    15e8:	0000000c 	andeq	r0, r0, ip
    15ec:	0000000c 	andeq	r0, r0, ip
    15f0:	00001548 	andeq	r1, r0, r8, asr #10
    15f4:	0800205c 	stmdaeq	r0, {r2, r3, r4, r6, sp}
    15f8:	0000000c 	andeq	r0, r0, ip
    15fc:	0000000c 	andeq	r0, r0, ip
    1600:	00001548 	andeq	r1, r0, r8, asr #10
    1604:	08002068 	stmdaeq	r0, {r3, r5, r6, sp}
    1608:	0000000c 	andeq	r0, r0, ip
    160c:	0000000c 	andeq	r0, r0, ip
    1610:	00001548 	andeq	r1, r0, r8, asr #10
    1614:	08002074 	stmdaeq	r0, {r2, r4, r5, r6, sp}
    1618:	0000000c 	andeq	r0, r0, ip
    161c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1620:	00001548 	andeq	r1, r0, r8, asr #10
    1624:	08002080 	stmdaeq	r0, {r7, sp}
    1628:	00000070 	andeq	r0, r0, r0, ror r0
    162c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1630:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1634:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
    1638:	000b4200 	andeq	r4, fp, r0, lsl #4
    163c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1640:	00001548 	andeq	r1, r0, r8, asr #10
    1644:	080020f0 	stmdaeq	r0, {r4, r5, r6, r7, sp}
    1648:	0000008c 	andeq	r0, r0, ip, lsl #1
    164c:	83180e41 	tsthi	r8, #1040	; 0x410
    1650:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1654:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1658:	00018e02 	andeq	r8, r1, r2, lsl #28
    165c:	00000018 	andeq	r0, r0, r8, lsl r0
    1660:	00001548 	andeq	r1, r0, r8, asr #10
    1664:	00000000 	andeq	r0, r0, r0
    1668:	0000001c 	andeq	r0, r0, ip, lsl r0
    166c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1670:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1674:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1678:	00000018 	andeq	r0, r0, r8, lsl r0
    167c:	00001548 	andeq	r1, r0, r8, asr #10
    1680:	00000000 	andeq	r0, r0, r0
    1684:	0000001c 	andeq	r0, r0, ip, lsl r0
    1688:	83080e41 	movwhi	r0, #36417	; 0x8e41
    168c:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1690:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1694:	0000000c 	andeq	r0, r0, ip
    1698:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    169c:	7c020001 	stcvc	0, cr0, [r2], {1}
    16a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16a8:	00001694 	muleq	r0, r4, r6
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	0000003a 	andeq	r0, r0, sl, lsr r0
    16b4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    16b8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    16bc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    16c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16c4:	00000020 	andeq	r0, r0, r0, lsr #32
    16c8:	00001694 	muleq	r0, r4, r6
    16cc:	0800217c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sp}
    16d0:	0000003e 	andeq	r0, r0, lr, lsr r0
    16d4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    16d8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    16dc:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    16e0:	89038804 	stmdbhi	r3, {r2, fp, pc}
    16e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    16e8:	0000000c 	andeq	r0, r0, ip
    16ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    16f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16f8:	0000000c 	andeq	r0, r0, ip
    16fc:	000016e8 	andeq	r1, r0, r8, ror #13
    1700:	00000000 	andeq	r0, r0, r0
    1704:	00000002 	andeq	r0, r0, r2
    1708:	0000000c 	andeq	r0, r0, ip
    170c:	000016e8 	andeq	r1, r0, r8, ror #13
    1710:	080021ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, sp}
    1714:	00000002 	andeq	r0, r0, r2
    1718:	0000000c 	andeq	r0, r0, ip
    171c:	000016e8 	andeq	r1, r0, r8, ror #13
    1720:	00000000 	andeq	r0, r0, r0
    1724:	00000002 	andeq	r0, r0, r2
    1728:	0000000c 	andeq	r0, r0, ip
    172c:	000016e8 	andeq	r1, r0, r8, ror #13
    1730:	00000000 	andeq	r0, r0, r0
    1734:	00000002 	andeq	r0, r0, r2
    1738:	0000000c 	andeq	r0, r0, ip
    173c:	000016e8 	andeq	r1, r0, r8, ror #13
    1740:	00000000 	andeq	r0, r0, r0
    1744:	00000002 	andeq	r0, r0, r2
    1748:	0000000c 	andeq	r0, r0, ip
    174c:	000016e8 	andeq	r1, r0, r8, ror #13
    1750:	080021bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sp}
    1754:	00000002 	andeq	r0, r0, r2
    1758:	0000000c 	andeq	r0, r0, ip
    175c:	000016e8 	andeq	r1, r0, r8, ror #13
    1760:	00000000 	andeq	r0, r0, r0
    1764:	00000004 	andeq	r0, r0, r4
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	000016e8 	andeq	r1, r0, r8, ror #13
    1770:	00000000 	andeq	r0, r0, r0
    1774:	00000004 	andeq	r0, r0, r4
    1778:	0000000c 	andeq	r0, r0, ip
    177c:	000016e8 	andeq	r1, r0, r8, ror #13
    1780:	00000000 	andeq	r0, r0, r0
    1784:	00000002 	andeq	r0, r0, r2
    1788:	0000000c 	andeq	r0, r0, ip
    178c:	000016e8 	andeq	r1, r0, r8, ror #13
    1790:	080021be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, sp}
    1794:	00000002 	andeq	r0, r0, r2
    1798:	0000000c 	andeq	r0, r0, ip
    179c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17a0:	7c020001 	stcvc	0, cr0, [r2], {1}
    17a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17a8:	00000020 	andeq	r0, r0, r0, lsr #32
    17ac:	00001798 	muleq	r0, r8, r7
    17b0:	080021c0 	stmdaeq	r0, {r6, r7, r8, sp}
    17b4:	0000004a 	andeq	r0, r0, sl, asr #32
    17b8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    17bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17c0:	45018e02 	strmi	r8, [r1, #-3586]	; 0xfffff1fe
    17c4:	0e5e680e 	cdpeq	8, 5, cr6, cr14, cr14, {0}
    17c8:	00000010 	andeq	r0, r0, r0, lsl r0
    17cc:	00000020 	andeq	r0, r0, r0, lsr #32
    17d0:	00001798 	muleq	r0, r8, r7
    17d4:	0800220c 	stmdaeq	r0, {r2, r3, r9, sp}
    17d8:	00000080 	andeq	r0, r0, r0, lsl #1
    17dc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    17e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17e4:	4b018e02 	blmi	64ff4 <_Min_Heap_Size+0x647f4>
    17e8:	41100e0a 	tstmi	r0, sl, lsl #28
    17ec:	0000000b 	andeq	r0, r0, fp
    17f0:	0000000c 	andeq	r0, r0, ip
    17f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17f8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1800:	00000024 	andeq	r0, r0, r4, lsr #32
    1804:	000017f0 	strdeq	r1, [r0], -r0
    1808:	0800228c 	stmdaeq	r0, {r2, r3, r7, r9, sp}
    180c:	00000098 	muleq	r0, r8, r0
    1810:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
    1814:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1818:	0e0a5301 	cdpeq	3, 0, cr5, cr10, cr1, {0}
    181c:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
    1820:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1824:	0c0e710b 	stfeqs	f7, [lr], {11}
    1828:	0000000c 	andeq	r0, r0, ip
    182c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1830:	7c020001 	stcvc	0, cr0, [r2], {1}
    1834:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1838:	00000018 	andeq	r0, r0, r8, lsl r0
    183c:	00001828 	andeq	r1, r0, r8, lsr #16
    1840:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
    1844:	00000040 	andeq	r0, r0, r0, asr #32
    1848:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    184c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1850:	00018e02 	andeq	r8, r1, r2, lsl #28
    1854:	0000001c 	andeq	r0, r0, ip, lsl r0
    1858:	00001828 	andeq	r1, r0, r8, lsr #16
    185c:	08002364 	stmdaeq	r0, {r2, r5, r6, r8, r9, sp}
    1860:	000000e8 	andeq	r0, r0, r8, ror #1
    1864:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1868:	86058506 	strhi	r8, [r5], -r6, lsl #10
    186c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1870:	00018e02 	andeq	r8, r1, r2, lsl #28
    1874:	0000000c 	andeq	r0, r0, ip
    1878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    187c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1880:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1884:	0000001c 	andeq	r0, r0, ip, lsl r0
    1888:	00001874 	andeq	r1, r0, r4, ror r8
    188c:	0800244c 	stmdaeq	r0, {r2, r3, r6, sl, sp}
    1890:	0000002e 	andeq	r0, r0, lr, lsr #32
    1894:	84040e44 	strhi	r0, [r4], #-3652	; 0xfffff1bc
    1898:	c40a4901 	strgt	r4, [sl], #-2305	; 0xfffff6ff
    189c:	0b42000e 	bleq	10818dc <_Min_Heap_Size+0x10810dc>
    18a0:	000ec447 	andeq	ip, lr, r7, asr #8
    18a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    18a8:	00001874 	andeq	r1, r0, r4, ror r8
    18ac:	0800247a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, sp}
    18b0:	00000024 	andeq	r0, r0, r4, lsr #32
    18b4:	83180e41 	tsthi	r8, #1040	; 0x410
    18b8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    18bc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    18c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    18c4:	00000018 	andeq	r0, r0, r8, lsl r0
    18c8:	00001874 	andeq	r1, r0, r4, ror r8
    18cc:	00000000 	andeq	r0, r0, r0
    18d0:	0000001a 	andeq	r0, r0, sl, lsl r0
    18d4:	83100e41 	tsthi	r0, #1040	; 0x410
    18d8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    18dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    18e0:	0000002c 	andeq	r0, r0, ip, lsr #32
    18e4:	00001874 	andeq	r1, r0, r4, ror r8
    18e8:	080024a0 	stmdaeq	r0, {r5, r7, sl, sp}
    18ec:	00000260 	andeq	r0, r0, r0, ror #4
    18f0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    18f4:	86088509 	strhi	r8, [r8], -r9, lsl #10
    18f8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    18fc:	8a048905 	bhi	123d18 <_Min_Heap_Size+0x123518>
    1900:	8e028b03 	vmlahi.f64	d8, d2, d3
    1904:	980e4201 	stmdals	lr, {r0, r9, lr}
    1908:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    190c:	000b4224 	andeq	r4, fp, r4, lsr #4
    1910:	0000000c 	andeq	r0, r0, ip
    1914:	00001874 	andeq	r1, r0, r4, ror r8
    1918:	00000000 	andeq	r0, r0, r0
    191c:	00000014 	andeq	r0, r0, r4, lsl r0
    1920:	0000000c 	andeq	r0, r0, ip
    1924:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1928:	7c020001 	stcvc	0, cr0, [r2], {1}
    192c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1930:	00000020 	andeq	r0, r0, r0, lsr #32
    1934:	00001920 	andeq	r1, r0, r0, lsr #18
    1938:	08002700 	stmdaeq	r0, {r8, r9, sl, sp}
    193c:	000000da 	ldrdeq	r0, [r0], -sl
    1940:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1944:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1948:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    194c:	8a038904 	bhi	e3d64 <_Min_Heap_Size+0xe3564>
    1950:	00018e02 	andeq	r8, r1, r2, lsl #28
    1954:	00000028 	andeq	r0, r0, r8, lsr #32
    1958:	00001920 	andeq	r1, r0, r0, lsr #18
    195c:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
    1960:	0000024c 	andeq	r0, r0, ip, asr #4
    1964:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    1968:	86078508 	strhi	r8, [r7], -r8, lsl #10
    196c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1970:	8a038904 	bhi	e3d88 <_Min_Heap_Size+0xe3588>
    1974:	02018e02 	andeq	r8, r1, #2, 28
    1978:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    197c:	00000b42 	andeq	r0, r0, r2, asr #22
    1980:	0000000c 	andeq	r0, r0, ip
    1984:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1988:	7c020001 	stcvc	0, cr0, [r2], {1}
    198c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1990:	00000018 	andeq	r0, r0, r8, lsl r0
    1994:	00001980 	andeq	r1, r0, r0, lsl #19
    1998:	08002a28 	stmdaeq	r0, {r3, r5, r9, fp, sp}
    199c:	00000020 	andeq	r0, r0, r0, lsr #32
    19a0:	83100e41 	tsthi	r0, #1040	; 0x410
    19a4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    19a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19b4:	7c020001 	stcvc	0, cr0, [r2], {1}
    19b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19bc:	00000014 	andeq	r0, r0, r4, lsl r0
    19c0:	000019ac 	andeq	r1, r0, ip, lsr #19
    19c4:	08002a48 	stmdaeq	r0, {r3, r6, r9, fp, sp}
    19c8:	00000022 	andeq	r0, r0, r2, lsr #32
    19cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    19d4:	0000000c 	andeq	r0, r0, ip
    19d8:	000019ac 	andeq	r1, r0, ip, lsr #19
    19dc:	00000000 	andeq	r0, r0, r0
    19e0:	00000004 	andeq	r0, r0, r4
    19e4:	00000024 	andeq	r0, r0, r4, lsr #32
    19e8:	000019ac 	andeq	r1, r0, ip, lsr #19
    19ec:	08002a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, sp}
    19f0:	00000038 	andeq	r0, r0, r8, lsr r0
    19f4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    19f8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    19fc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1a00:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    1a04:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1a08:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1a0c:	00000014 	andeq	r0, r0, r4, lsl r0
    1a10:	000019ac 	andeq	r1, r0, ip, lsr #19
    1a14:	08002aa2 	stmdaeq	r0, {r1, r5, r7, r9, fp, sp}
    1a18:	00000024 	andeq	r0, r0, r4, lsr #32
    1a1c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1a20:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019ac 	andeq	r1, r0, ip, lsr #19
    1a2c:	08002ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp, sp}
    1a30:	00000008 	andeq	r0, r0, r8
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a44:	00000018 	andeq	r0, r0, r8, lsl r0
    1a48:	00001a34 	andeq	r1, r0, r4, lsr sl
    1a4c:	08002ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp, sp}
    1a50:	00000024 	andeq	r0, r0, r4, lsr #32
    1a54:	83100e41 	tsthi	r0, #1040	; 0x410
    1a58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a60:	0000000c 	andeq	r0, r0, ip
    1a64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a70:	00000018 	andeq	r0, r0, r8, lsl r0
    1a74:	00001a60 	andeq	r1, r0, r0, ror #20
    1a78:	08002af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, sp}
    1a7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1a80:	83100e41 	tsthi	r0, #1040	; 0x410
    1a84:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a88:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a94:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1aa0:	00001a8c 	andeq	r1, r0, ip, lsl #21
    1aa4:	08002b14 	stmdaeq	r0, {r2, r4, r8, r9, fp, sp}
    1aa8:	00000024 	andeq	r0, r0, r4, lsr #32
    1aac:	83100e41 	tsthi	r0, #1040	; 0x410
    1ab0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ab4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ab8:	0000000c 	andeq	r0, r0, ip
    1abc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ac0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ac4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ac8:	00000018 	andeq	r0, r0, r8, lsl r0
    1acc:	00001ab8 			; <UNDEFINED> instruction: 0x00001ab8
    1ad0:	08002b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, sp}
    1ad4:	00000020 	andeq	r0, r0, r0, lsr #32
    1ad8:	83100e41 	tsthi	r0, #1040	; 0x410
    1adc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ae0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ae4:	0000000c 	andeq	r0, r0, ip
    1ae8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aec:	7c020001 	stcvc	0, cr0, [r2], {1}
    1af0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1af4:	00000018 	andeq	r0, r0, r8, lsl r0
    1af8:	00001ae4 	andeq	r1, r0, r4, ror #21
    1afc:	08002b58 	stmdaeq	r0, {r3, r4, r6, r8, r9, fp, sp}
    1b00:	00000024 	andeq	r0, r0, r4, lsr #32
    1b04:	83100e41 	tsthi	r0, #1040	; 0x410
    1b08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b10:	0000000c 	andeq	r0, r0, ip
    1b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b20:	0000000c 	andeq	r0, r0, ip
    1b24:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b28:	08002b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp, sp}
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	0000000c 	andeq	r0, r0, ip
    1b34:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b38:	08002b88 	stmdaeq	r0, {r3, r7, r8, r9, fp, sp}
    1b3c:	0000000c 	andeq	r0, r0, ip
    1b40:	0000000c 	andeq	r0, r0, ip
    1b44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b48:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b50:	00000018 	andeq	r0, r0, r8, lsl r0
    1b54:	00001b40 	andeq	r1, r0, r0, asr #22
    1b58:	08002b94 	stmdaeq	r0, {r2, r4, r7, r8, r9, fp, sp}
    1b5c:	00000024 	andeq	r0, r0, r4, lsr #32
    1b60:	83100e41 	tsthi	r0, #1040	; 0x410
    1b64:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b68:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b6c:	0000000c 	andeq	r0, r0, ip
    1b70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b74:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b80:	00001b6c 	andeq	r1, r0, ip, ror #22
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	0000001a 	andeq	r0, r0, sl, lsl r0
    1b8c:	83100e41 	tsthi	r0, #1040	; 0x410
    1b90:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b94:	4a018e02 	bmi	653a4 <_Min_Heap_Size+0x64ba4>
    1b98:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1b9c:	0000000e 	andeq	r0, r0, lr
    1ba0:	00000024 	andeq	r0, r0, r4, lsr #32
    1ba4:	00001b6c 	andeq	r1, r0, ip, ror #22
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	000000b8 	strheq	r0, [r0], -r8
    1bb0:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    1bb4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1bb8:	7f018e02 	svcvc	0x00018e02
    1bbc:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1bc0:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1bc4:	0000000b 	andeq	r0, r0, fp
    1bc8:	0000000c 	andeq	r0, r0, ip
    1bcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bd0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bd4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bd8:	00000018 	andeq	r0, r0, r8, lsl r0
    1bdc:	00001bc8 	andeq	r1, r0, r8, asr #23
    1be0:	080002c0 	stmdaeq	r0, {r6, r7, r9}
    1be4:	00000030 	andeq	r0, r0, r0, lsr r0
    1be8:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1bec:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1bf0:	00000010 	andeq	r0, r0, r0, lsl r0
    1bf4:	0000000c 	andeq	r0, r0, ip
    1bf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bfc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c04:	00000020 	andeq	r0, r0, r0, lsr #32
    1c08:	00001bf4 	strdeq	r1, [r0], -r4
    1c0c:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
    1c10:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c14:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1c18:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1c1c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1c20:	8a038904 	bhi	e4038 <_Min_Heap_Size+0xe3838>
    1c24:	00018e02 	andeq	r8, r1, r2, lsl #28

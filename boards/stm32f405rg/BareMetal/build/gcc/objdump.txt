
.\build\gcc/stm32-qemu.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20001240 	andcs	r1, r0, r0, asr #4
 8000004:	08001b39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, fp, ip}
 8000008:	080006a1 	stmdaeq	r0, {r0, r5, r7, r9, sl}
 800000c:	080001d1 	stmdaeq	r0, {r0, r4, r6, r7, r8}
 8000010:	080006b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl}
 8000014:	080006c9 	stmdaeq	r0, {r0, r3, r6, r7, r9, sl}
 8000018:	080006dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl}
	...
 800002c:	080006f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl}
 8000030:	080006f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9, sl}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080006f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sl}
 800003c:	080006f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9, sl}
 8000040:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000044:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000048:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800004c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000050:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000054:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000058:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800005c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000060:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000064:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000068:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800006c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000070:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000074:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000078:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800007c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000080:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000084:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000088:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800008c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000090:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000094:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000098:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800009c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000a0:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000a4:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000a8:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000ac:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000b0:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000b4:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000b8:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000bc:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000c0:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000c4:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000c8:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000cc:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000d0:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000d4:	08000701 	stmdaeq	r0, {r0, r8, r9, sl}
 80000d8:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000dc:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000e0:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000e4:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000e8:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000ec:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000f0:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000f4:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000f8:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 80000fc:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000100:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000104:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000108:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800010c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000110:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000114:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000118:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800011c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000120:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000124:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000128:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800012c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000130:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
	...
 800013c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000140:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000144:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000148:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800014c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000150:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000154:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000158:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800015c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000160:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000164:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000168:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 800016c:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000170:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000174:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
	...
 8000180:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}
 8000184:	08001b89 	stmdaeq	r0, {r0, r3, r7, r8, r9, fp, ip}

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000078 	andcs	r0, r0, r8, ror r0
 80001ac:	00000000 	andeq	r0, r0, r0
 80001b0:	08002bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, sp}

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	andeq	r0, r0, r0
 80001c8:	2000007c 	andcs	r0, r0, ip, ror r0
 80001cc:	08002bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, sp}

080001d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
 80001d0:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 80001d2:	4b0e      	ldr	r3, [pc, #56]	; (800020c <stack_checked+0xc>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
 80001d4:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 80001d6:	4b0e      	ldr	r3, [pc, #56]	; (8000210 <stack_checked+0x10>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
 80001d8:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
 80001da:	f01e 0f04 	tst.w	lr, #4
    bne     stack_use_psp               /* if (sp != msp), jump to stack_use_psp */
 80001de:	d10a      	bne.n	80001f6 <stack_use_psp>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
 80001e0:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
 80001e4:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
 80001e6:	db0a      	blt.n	80001fe <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
 80001e8:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
 80001ea:	dc08      	bgt.n	80001fe <stack_invalid>

    push    {r4 - r11}                  /* stack value is normal, push {r4 - r11} to stack */
 80001ec:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
    mrs     r0, msp                     /* refresh r0 = sp = msp */
 80001f0:	f3ef 8008 	mrs	r0, MSP
    b       stack_checked
 80001f4:	e004      	b.n	8000200 <stack_checked>

080001f6 <stack_use_psp>:
stack_use_psp:
    mrs     r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001f6:	f3ef 8009 	mrs	r0, PSP
    stmdb   r0!, {r4 - r11}             /* sp using psp, use stmdb push {r4 - r11} to stack */
 80001fa:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}

080001fe <stack_invalid>:
    
stack_invalid:
    nop                                 /* stack value is invalid, not to process temporary */
 80001fe:	bf00      	nop

08000200 <stack_checked>:
stack_checked:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
 8000200:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000202:	4a04      	ldr	r2, [pc, #16]	; (8000214 <stack_checked+0x14>)
    dsb                                 /* wait for memory access to complete */
 8000204:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
 8000208:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
 800020a:	4710      	bx	r2
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 800020c:	200001e0 	andcs	r0, r0, r0, ror #3
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 8000210:	200001e4 	andcs	r0, r0, r4, ror #3
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000214:	0800180d 	stmdaeq	r0, {r0, r2, r3, fp, ip}
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <__io_putchar>:
#include "fault-dump.h"

void SystemClock_Config(void);

#ifdef __GNUC__
int __io_putchar(int ch) {
 80005c4:	b500      	push	{lr}
 80005c6:	b083      	sub	sp, #12
 80005c8:	9001      	str	r0, [sp, #4]
    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 80005ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80005ce:	2201      	movs	r2, #1
 80005d0:	a901      	add	r1, sp, #4
 80005d2:	4803      	ldr	r0, [pc, #12]	; (80005e0 <__io_putchar+0x1c>)
 80005d4:	f000 fb44 	bl	8000c60 <HAL_UART_Transmit>
    return ch;
}
 80005d8:	9801      	ldr	r0, [sp, #4]
 80005da:	b003      	add	sp, #12
 80005dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80005e0:	20000094 	mulcs	r0, r4, r0

080005e4 <test0>:
}
#else
#error "io port does not support current compiler."
#endif

void test0(void) {
 80005e4:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 80005e6:	4903      	ldr	r1, [pc, #12]	; (80005f4 <test0+0x10>)
 80005e8:	4803      	ldr	r0, [pc, #12]	; (80005f8 <test0+0x14>)
 80005ea:	f001 fb01 	bl	8001bf0 <iprintf>
    extern void fault_dump_unalign(void);
    fault_dump_unalign();
 80005ee:	f001 fa2f 	bl	8001a50 <fault_dump_unalign>
}
 80005f2:	bd08      	pop	{r3, pc}
 80005f4:	08002c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, sp}
 80005f8:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

080005fc <test1>:

void test1(void) {
 80005fc:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 80005fe:	4903      	ldr	r1, [pc, #12]	; (800060c <test1+0x10>)
 8000600:	4803      	ldr	r0, [pc, #12]	; (8000610 <test1+0x14>)
 8000602:	f001 faf5 	bl	8001bf0 <iprintf>
    test0();
 8000606:	f7ff ffed 	bl	80005e4 <test0>
}
 800060a:	bd08      	pop	{r3, pc}
 800060c:	08002c50 	stmdaeq	r0, {r4, r6, sl, fp, sp}
 8000610:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

08000614 <test2>:

void test2(void) {
 8000614:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000616:	4903      	ldr	r1, [pc, #12]	; (8000624 <test2+0x10>)
 8000618:	4803      	ldr	r0, [pc, #12]	; (8000628 <test2+0x14>)
 800061a:	f001 fae9 	bl	8001bf0 <iprintf>
    test1();
 800061e:	f7ff ffed 	bl	80005fc <test1>
}
 8000622:	bd08      	pop	{r3, pc}
 8000624:	08002c48 	stmdaeq	r0, {r3, r6, sl, fp, sp}
 8000628:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

0800062c <test3>:

void test3(void) {
 800062c:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 800062e:	4903      	ldr	r1, [pc, #12]	; (800063c <test3+0x10>)
 8000630:	4803      	ldr	r0, [pc, #12]	; (8000640 <test3+0x14>)
 8000632:	f001 fadd 	bl	8001bf0 <iprintf>
    test2();
 8000636:	f7ff ffed 	bl	8000614 <test2>
}
 800063a:	bd08      	pop	{r3, pc}
 800063c:	08002c40 	stmdaeq	r0, {r6, sl, fp, sp}
 8000640:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

08000644 <test4>:

void test4(void) {
 8000644:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000646:	4903      	ldr	r1, [pc, #12]	; (8000654 <test4+0x10>)
 8000648:	4803      	ldr	r0, [pc, #12]	; (8000658 <test4+0x14>)
 800064a:	f001 fad1 	bl	8001bf0 <iprintf>
    test3();
 800064e:	f7ff ffed 	bl	800062c <test3>
}
 8000652:	bd08      	pop	{r3, pc}
 8000654:	08002c38 	stmdaeq	r0, {r3, r4, r5, sl, fp, sp}
 8000658:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

0800065c <test5>:

void test5(void) {
 800065c:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 800065e:	4903      	ldr	r1, [pc, #12]	; (800066c <test5+0x10>)
 8000660:	4803      	ldr	r0, [pc, #12]	; (8000670 <test5+0x14>)
 8000662:	f001 fac5 	bl	8001bf0 <iprintf>
    test4();
 8000666:	f7ff ffed 	bl	8000644 <test4>
}
 800066a:	bd08      	pop	{r3, pc}
 800066c:	08002c30 	stmdaeq	r0, {r4, r5, sl, fp, sp}
 8000670:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

08000674 <main>:

int main(void) {
 8000674:	b508      	push	{r3, lr}
    HAL_Init();
 8000676:	f000 ffd7 	bl	8001628 <HAL_Init>
    // SystemClock_Config();
    MX_GPIO_Init();
 800067a:	f000 f861 	bl	8000740 <MX_GPIO_Init>
    MX_USART1_UART_Init();
 800067e:	f000 f885 	bl	800078c <MX_USART1_UART_Init>

    fault_dump_init();
 8000682:	f001 f89b 	bl	80017bc <fault_dump_init>
    test5();
 8000686:	f7ff ffe9 	bl	800065c <test5>

    while (1) {
        printf("hello qemu.\r\n");
 800068a:	4804      	ldr	r0, [pc, #16]	; (800069c <main+0x28>)
 800068c:	f001 fb36 	bl	8001cfc <puts>
        HAL_Delay(1000);
 8000690:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000694:	f000 fff4 	bl	8001680 <HAL_Delay>
    while (1) {
 8000698:	e7f7      	b.n	800068a <main+0x16>
 800069a:	bf00      	nop
 800069c:	08002c20 	stmdaeq	r0, {r5, sl, fp, sp}

080006a0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80006a0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80006a2:	4902      	ldr	r1, [pc, #8]	; (80006ac <NMI_Handler+0xc>)
 80006a4:	4802      	ldr	r0, [pc, #8]	; (80006b0 <NMI_Handler+0x10>)
 80006a6:	f001 faa3 	bl	8001bf0 <iprintf>
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80006aa:	e7fe      	b.n	80006aa <NMI_Handler+0xa>
 80006ac:	08002cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp, sp}
 80006b0:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

080006b4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80006b4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80006b6:	4902      	ldr	r1, [pc, #8]	; (80006c0 <MemManage_Handler+0xc>)
 80006b8:	4802      	ldr	r0, [pc, #8]	; (80006c4 <MemManage_Handler+0x10>)
 80006ba:	f001 fa99 	bl	8001bf0 <iprintf>
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80006be:	e7fe      	b.n	80006be <MemManage_Handler+0xa>
 80006c0:	08002ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp, sp}
 80006c4:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

080006c8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80006c8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BusFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80006ca:	4902      	ldr	r1, [pc, #8]	; (80006d4 <BusFault_Handler+0xc>)
 80006cc:	4802      	ldr	r0, [pc, #8]	; (80006d8 <BusFault_Handler+0x10>)
 80006ce:	f001 fa8f 	bl	8001bf0 <iprintf>
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80006d2:	e7fe      	b.n	80006d2 <BusFault_Handler+0xa>
 80006d4:	08002c94 	stmdaeq	r0, {r2, r4, r7, sl, fp, sp}
 80006d8:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

080006dc <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80006dc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UsageFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80006de:	4902      	ldr	r1, [pc, #8]	; (80006e8 <UsageFault_Handler+0xc>)
 80006e0:	4802      	ldr	r0, [pc, #8]	; (80006ec <UsageFault_Handler+0x10>)
 80006e2:	f001 fa85 	bl	8001bf0 <iprintf>
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80006e6:	e7fe      	b.n	80006e6 <UsageFault_Handler+0xa>
 80006e8:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
 80006ec:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

080006f0 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80006f0:	4770      	bx	lr

080006f2 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80006f2:	4770      	bx	lr

080006f4 <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80006f4:	4770      	bx	lr

080006f6 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80006f6:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80006f8:	f000 ffb0 	bl	800165c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80006fc:	bd08      	pop	{r3, pc}
	...

08000700 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000700:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8000702:	4802      	ldr	r0, [pc, #8]	; (800070c <USART1_IRQHandler+0xc>)
 8000704:	f000 fb9e 	bl	8000e44 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8000708:	bd08      	pop	{r3, pc}
 800070a:	bf00      	nop
 800070c:	20000094 	mulcs	r0, r4, r0

08000710 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000710:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000712:	4903      	ldr	r1, [pc, #12]	; (8000720 <Error_Handler+0x10>)
 8000714:	4803      	ldr	r0, [pc, #12]	; (8000724 <Error_Handler+0x14>)
 8000716:	f001 fa6b 	bl	8001bf0 <iprintf>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800071a:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 800071c:	e7fe      	b.n	800071c <Error_Handler+0xc>
 800071e:	bf00      	nop
 8000720:	08002c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, sp}
 8000724:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

08000728 <assert_failed>:
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
 8000728:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 800072a:	4903      	ldr	r1, [pc, #12]	; (8000738 <assert_failed+0x10>)
 800072c:	4803      	ldr	r0, [pc, #12]	; (800073c <assert_failed+0x14>)
 800072e:	f001 fa5f 	bl	8001bf0 <iprintf>
 8000732:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 8000734:	e7fe      	b.n	8000734 <assert_failed+0xc>
 8000736:	bf00      	nop
 8000738:	08002c60 	stmdaeq	r0, {r5, r6, sl, fp, sp}
 800073c:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

08000740 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000740:	b084      	sub	sp, #16

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000742:	2200      	movs	r2, #0
 8000744:	9201      	str	r2, [sp, #4]
 8000746:	4b10      	ldr	r3, [pc, #64]	; (8000788 <MX_GPIO_Init+0x48>)
 8000748:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800074a:	f041 0104 	orr.w	r1, r1, #4
 800074e:	6319      	str	r1, [r3, #48]	; 0x30
 8000750:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000752:	f001 0104 	and.w	r1, r1, #4
 8000756:	9101      	str	r1, [sp, #4]
 8000758:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800075a:	9202      	str	r2, [sp, #8]
 800075c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800075e:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000762:	6319      	str	r1, [r3, #48]	; 0x30
 8000764:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000766:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800076a:	9102      	str	r1, [sp, #8]
 800076c:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800076e:	9203      	str	r2, [sp, #12]
 8000770:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000772:	f042 0201 	orr.w	r2, r2, #1
 8000776:	631a      	str	r2, [r3, #48]	; 0x30
 8000778:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800077a:	f003 0301 	and.w	r3, r3, #1
 800077e:	9303      	str	r3, [sp, #12]
 8000780:	9b03      	ldr	r3, [sp, #12]

}
 8000782:	b004      	add	sp, #16
 8000784:	4770      	bx	lr
 8000786:	bf00      	nop
 8000788:	40023800 	andmi	r3, r2, r0, lsl #16

0800078c <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 800078c:	b508      	push	{r3, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800078e:	480a      	ldr	r0, [pc, #40]	; (80007b8 <MX_USART1_UART_Init+0x2c>)
 8000790:	4b0a      	ldr	r3, [pc, #40]	; (80007bc <MX_USART1_UART_Init+0x30>)
 8000792:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 8000794:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000798:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800079a:	2300      	movs	r3, #0
 800079c:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800079e:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80007a0:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80007a2:	220c      	movs	r2, #12
 80007a4:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80007a6:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80007a8:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80007aa:	f000 f9c3 	bl	8000b34 <HAL_UART_Init>
 80007ae:	b900      	cbnz	r0, 80007b2 <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80007b0:	bd08      	pop	{r3, pc}
    Error_Handler();
 80007b2:	f7ff ffad 	bl	8000710 <Error_Handler>
}
 80007b6:	e7fb      	b.n	80007b0 <MX_USART1_UART_Init+0x24>
 80007b8:	20000094 	mulcs	r0, r4, r0
 80007bc:	40011000 	andmi	r1, r1, r0

080007c0 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80007c0:	b510      	push	{r4, lr}
 80007c2:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007c4:	2300      	movs	r3, #0
 80007c6:	9303      	str	r3, [sp, #12]
 80007c8:	9304      	str	r3, [sp, #16]
 80007ca:	9305      	str	r3, [sp, #20]
 80007cc:	9306      	str	r3, [sp, #24]
 80007ce:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 80007d0:	6802      	ldr	r2, [r0, #0]
 80007d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80007d6:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80007da:	429a      	cmp	r2, r3
 80007dc:	d001      	beq.n	80007e2 <HAL_UART_MspInit+0x22>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 80007de:	b008      	add	sp, #32
 80007e0:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 80007e2:	2400      	movs	r4, #0
 80007e4:	9401      	str	r4, [sp, #4]
 80007e6:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 80007ea:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80007ec:	f042 0210 	orr.w	r2, r2, #16
 80007f0:	645a      	str	r2, [r3, #68]	; 0x44
 80007f2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80007f4:	f002 0210 	and.w	r2, r2, #16
 80007f8:	9201      	str	r2, [sp, #4]
 80007fa:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80007fc:	9402      	str	r4, [sp, #8]
 80007fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000800:	f042 0201 	orr.w	r2, r2, #1
 8000804:	631a      	str	r2, [r3, #48]	; 0x30
 8000806:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000808:	f003 0301 	and.w	r3, r3, #1
 800080c:	9302      	str	r3, [sp, #8]
 800080e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8000810:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000814:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000816:	2302      	movs	r3, #2
 8000818:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800081a:	2303      	movs	r3, #3
 800081c:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800081e:	2307      	movs	r3, #7
 8000820:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000822:	a903      	add	r1, sp, #12
 8000824:	4805      	ldr	r0, [pc, #20]	; (800083c <HAL_UART_MspInit+0x7c>)
 8000826:	f000 fc77 	bl	8001118 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800082a:	4622      	mov	r2, r4
 800082c:	4621      	mov	r1, r4
 800082e:	2025      	movs	r0, #37	; 0x25
 8000830:	f000 fe62 	bl	80014f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8000834:	2025      	movs	r0, #37	; 0x25
 8000836:	f000 fea5 	bl	8001584 <HAL_NVIC_EnableIRQ>
}
 800083a:	e7d0      	b.n	80007de <HAL_UART_MspInit+0x1e>
 800083c:	40020000 	andmi	r0, r2, r0

08000840 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000840:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000842:	2100      	movs	r1, #0
 8000844:	9100      	str	r1, [sp, #0]
 8000846:	4b0b      	ldr	r3, [pc, #44]	; (8000874 <HAL_MspInit+0x34>)
 8000848:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800084a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800084e:	645a      	str	r2, [r3, #68]	; 0x44
 8000850:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000852:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8000856:	9200      	str	r2, [sp, #0]
 8000858:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800085a:	9101      	str	r1, [sp, #4]
 800085c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800085e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000862:	641a      	str	r2, [r3, #64]	; 0x40
 8000864:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000866:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800086a:	9301      	str	r3, [sp, #4]
 800086c:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800086e:	b002      	add	sp, #8
 8000870:	4770      	bx	lr
 8000872:	bf00      	nop
 8000874:	40023800 	andmi	r3, r2, r0, lsl #16

08000878 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8000878:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800087a:	f102 030c 	add.w	r3, r2, #12
 800087e:	e853 3f00 	ldrex	r3, [r3]
 8000882:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000886:	320c      	adds	r2, #12
 8000888:	e842 3100 	strex	r1, r3, [r2]
 800088c:	2900      	cmp	r1, #0
 800088e:	d1f3      	bne.n	8000878 <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8000890:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000892:	f102 0314 	add.w	r3, r2, #20
 8000896:	e853 3f00 	ldrex	r3, [r3]
 800089a:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800089e:	3214      	adds	r2, #20
 80008a0:	e842 3100 	strex	r1, r3, [r2]
 80008a4:	2900      	cmp	r1, #0
 80008a6:	d1f3      	bne.n	8000890 <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80008a8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80008aa:	2b01      	cmp	r3, #1
 80008ac:	d005      	beq.n	80008ba <UART_EndRxTransfer+0x42>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80008ae:	2320      	movs	r3, #32
 80008b0:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80008b4:	2300      	movs	r3, #0
 80008b6:	6303      	str	r3, [r0, #48]	; 0x30
}
 80008b8:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80008ba:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80008bc:	f102 030c 	add.w	r3, r2, #12
 80008c0:	e853 3f00 	ldrex	r3, [r3]
 80008c4:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80008c8:	320c      	adds	r2, #12
 80008ca:	e842 3100 	strex	r1, r3, [r2]
 80008ce:	2900      	cmp	r1, #0
 80008d0:	d1f3      	bne.n	80008ba <UART_EndRxTransfer+0x42>
 80008d2:	e7ec      	b.n	80008ae <UART_EndRxTransfer+0x36>

080008d4 <UART_Transmit_IT>:
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80008d4:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80008d8:	b2db      	uxtb	r3, r3
 80008da:	2b21      	cmp	r3, #33	; 0x21
 80008dc:	d001      	beq.n	80008e2 <UART_Transmit_IT+0xe>
    }
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 80008de:	2002      	movs	r0, #2
  }
}
 80008e0:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80008e2:	6883      	ldr	r3, [r0, #8]
 80008e4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80008e8:	d017      	beq.n	800091a <UART_Transmit_IT+0x46>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80008ea:	6a03      	ldr	r3, [r0, #32]
 80008ec:	1c5a      	adds	r2, r3, #1
 80008ee:	6202      	str	r2, [r0, #32]
 80008f0:	781a      	ldrb	r2, [r3, #0]
 80008f2:	6803      	ldr	r3, [r0, #0]
 80008f4:	605a      	str	r2, [r3, #4]
    if (--huart->TxXferCount == 0U)
 80008f6:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80008f8:	b29b      	uxth	r3, r3
 80008fa:	3b01      	subs	r3, #1
 80008fc:	b29b      	uxth	r3, r3
 80008fe:	84c3      	strh	r3, [r0, #38]	; 0x26
 8000900:	b94b      	cbnz	r3, 8000916 <UART_Transmit_IT+0x42>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8000902:	6802      	ldr	r2, [r0, #0]
 8000904:	68d3      	ldr	r3, [r2, #12]
 8000906:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800090a:	60d3      	str	r3, [r2, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 800090c:	6802      	ldr	r2, [r0, #0]
 800090e:	68d3      	ldr	r3, [r2, #12]
 8000910:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000914:	60d3      	str	r3, [r2, #12]
    return HAL_OK;
 8000916:	2000      	movs	r0, #0
 8000918:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800091a:	6903      	ldr	r3, [r0, #16]
 800091c:	2b00      	cmp	r3, #0
 800091e:	d1e4      	bne.n	80008ea <UART_Transmit_IT+0x16>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8000920:	6a03      	ldr	r3, [r0, #32]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8000922:	881b      	ldrh	r3, [r3, #0]
 8000924:	6802      	ldr	r2, [r0, #0]
 8000926:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800092a:	6053      	str	r3, [r2, #4]
      huart->pTxBuffPtr += 2U;
 800092c:	6a03      	ldr	r3, [r0, #32]
 800092e:	3302      	adds	r3, #2
 8000930:	6203      	str	r3, [r0, #32]
 8000932:	e7e0      	b.n	80008f6 <UART_Transmit_IT+0x22>

08000934 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8000934:	b538      	push	{r3, r4, r5, lr}
 8000936:	4604      	mov	r4, r0
  uint32_t tmpreg;
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000938:	6842      	ldr	r2, [r0, #4]
 800093a:	4b57      	ldr	r3, [pc, #348]	; (8000a98 <UART_SetConfig+0x164>)
 800093c:	429a      	cmp	r2, r3
 800093e:	d83f      	bhi.n	80009c0 <UART_SetConfig+0x8c>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000940:	68e3      	ldr	r3, [r4, #12]
 8000942:	b113      	cbz	r3, 800094a <UART_SetConfig+0x16>
 8000944:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000948:	d140      	bne.n	80009cc <UART_SetConfig+0x98>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 800094a:	6923      	ldr	r3, [r4, #16]
 800094c:	b12b      	cbz	r3, 800095a <UART_SetConfig+0x26>
 800094e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000952:	d002      	beq.n	800095a <UART_SetConfig+0x26>
 8000954:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000958:	d13e      	bne.n	80009d8 <UART_SetConfig+0xa4>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 800095a:	6963      	ldr	r3, [r4, #20]
 800095c:	f64f 72f3 	movw	r2, #65523	; 0xfff3
 8000960:	4213      	tst	r3, r2
 8000962:	d100      	bne.n	8000966 <UART_SetConfig+0x32>
 8000964:	b923      	cbnz	r3, 8000970 <UART_SetConfig+0x3c>
 8000966:	f640 6178 	movw	r1, #3704	; 0xe78
 800096a:	484c      	ldr	r0, [pc, #304]	; (8000a9c <UART_SetConfig+0x168>)
 800096c:	f7ff fedc 	bl	8000728 <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8000970:	6822      	ldr	r2, [r4, #0]
 8000972:	6913      	ldr	r3, [r2, #16]
 8000974:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000978:	68e1      	ldr	r1, [r4, #12]
 800097a:	430b      	orrs	r3, r1
 800097c:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800097e:	68a3      	ldr	r3, [r4, #8]
 8000980:	6922      	ldr	r2, [r4, #16]
 8000982:	4313      	orrs	r3, r2
 8000984:	6962      	ldr	r2, [r4, #20]
 8000986:	4313      	orrs	r3, r2
 8000988:	69e2      	ldr	r2, [r4, #28]
 800098a:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1,
 800098c:	6821      	ldr	r1, [r4, #0]
 800098e:	68cb      	ldr	r3, [r1, #12]
 8000990:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8000994:	f023 030c 	bic.w	r3, r3, #12
 8000998:	4313      	orrs	r3, r2
 800099a:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800099c:	6822      	ldr	r2, [r4, #0]
 800099e:	6953      	ldr	r3, [r2, #20]
 80009a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80009a4:	69a1      	ldr	r1, [r4, #24]
 80009a6:	430b      	orrs	r3, r1
 80009a8:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80009aa:	6823      	ldr	r3, [r4, #0]
 80009ac:	4a3c      	ldr	r2, [pc, #240]	; (8000aa0 <UART_SetConfig+0x16c>)
 80009ae:	4293      	cmp	r3, r2
 80009b0:	d018      	beq.n	80009e4 <UART_SetConfig+0xb0>
 80009b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d014      	beq.n	80009e4 <UART_SetConfig+0xb0>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 80009ba:	f000 fb8d 	bl	80010d8 <HAL_RCC_GetPCLK1Freq>
 80009be:	e013      	b.n	80009e8 <UART_SetConfig+0xb4>
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 80009c0:	f640 6175 	movw	r1, #3701	; 0xe75
 80009c4:	4835      	ldr	r0, [pc, #212]	; (8000a9c <UART_SetConfig+0x168>)
 80009c6:	f7ff feaf 	bl	8000728 <assert_failed>
 80009ca:	e7b9      	b.n	8000940 <UART_SetConfig+0xc>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 80009cc:	f640 6176 	movw	r1, #3702	; 0xe76
 80009d0:	4832      	ldr	r0, [pc, #200]	; (8000a9c <UART_SetConfig+0x168>)
 80009d2:	f7ff fea9 	bl	8000728 <assert_failed>
 80009d6:	e7b8      	b.n	800094a <UART_SetConfig+0x16>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 80009d8:	f640 6177 	movw	r1, #3703	; 0xe77
 80009dc:	482f      	ldr	r0, [pc, #188]	; (8000a9c <UART_SetConfig+0x168>)
 80009de:	f7ff fea3 	bl	8000728 <assert_failed>
 80009e2:	e7ba      	b.n	800095a <UART_SetConfig+0x26>
      pclk = HAL_RCC_GetPCLK2Freq();
 80009e4:	f000 fb88 	bl	80010f8 <HAL_RCC_GetPCLK2Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80009e8:	69e3      	ldr	r3, [r4, #28]
 80009ea:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80009ee:	d029      	beq.n	8000a44 <UART_SetConfig+0x110>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80009f0:	2100      	movs	r1, #0
 80009f2:	1803      	adds	r3, r0, r0
 80009f4:	4149      	adcs	r1, r1
 80009f6:	181b      	adds	r3, r3, r0
 80009f8:	f141 0100 	adc.w	r1, r1, #0
 80009fc:	00c9      	lsls	r1, r1, #3
 80009fe:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
 8000a02:	00db      	lsls	r3, r3, #3
 8000a04:	1818      	adds	r0, r3, r0
 8000a06:	6863      	ldr	r3, [r4, #4]
 8000a08:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8000a0c:	ea4f 7393 	mov.w	r3, r3, lsr #30
 8000a10:	f141 0100 	adc.w	r1, r1, #0
 8000a14:	f7ff fc54 	bl	80002c0 <__aeabi_uldivmod>
 8000a18:	4d22      	ldr	r5, [pc, #136]	; (8000aa4 <UART_SetConfig+0x170>)
 8000a1a:	fba5 3200 	umull	r3, r2, r5, r0
 8000a1e:	0951      	lsrs	r1, r2, #5
 8000a20:	2364      	movs	r3, #100	; 0x64
 8000a22:	fb03 0311 	mls	r3, r3, r1, r0
 8000a26:	011b      	lsls	r3, r3, #4
 8000a28:	3332      	adds	r3, #50	; 0x32
 8000a2a:	fba5 2303 	umull	r2, r3, r5, r3
 8000a2e:	095b      	lsrs	r3, r3, #5
 8000a30:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8000a34:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000a38:	f003 030f 	and.w	r3, r3, #15
 8000a3c:	6821      	ldr	r1, [r4, #0]
 8000a3e:	4413      	add	r3, r2
 8000a40:	608b      	str	r3, [r1, #8]
  }
}
 8000a42:	bd38      	pop	{r3, r4, r5, pc}
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8000a44:	2300      	movs	r3, #0
 8000a46:	1802      	adds	r2, r0, r0
 8000a48:	eb43 0103 	adc.w	r1, r3, r3
 8000a4c:	1812      	adds	r2, r2, r0
 8000a4e:	f141 0100 	adc.w	r1, r1, #0
 8000a52:	00c9      	lsls	r1, r1, #3
 8000a54:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8000a58:	00d2      	lsls	r2, r2, #3
 8000a5a:	1810      	adds	r0, r2, r0
 8000a5c:	f141 0100 	adc.w	r1, r1, #0
 8000a60:	6862      	ldr	r2, [r4, #4]
 8000a62:	1892      	adds	r2, r2, r2
 8000a64:	415b      	adcs	r3, r3
 8000a66:	f7ff fc2b 	bl	80002c0 <__aeabi_uldivmod>
 8000a6a:	4d0e      	ldr	r5, [pc, #56]	; (8000aa4 <UART_SetConfig+0x170>)
 8000a6c:	fba5 3200 	umull	r3, r2, r5, r0
 8000a70:	0951      	lsrs	r1, r2, #5
 8000a72:	2364      	movs	r3, #100	; 0x64
 8000a74:	fb03 0311 	mls	r3, r3, r1, r0
 8000a78:	00db      	lsls	r3, r3, #3
 8000a7a:	3332      	adds	r3, #50	; 0x32
 8000a7c:	fba5 2303 	umull	r2, r3, r5, r3
 8000a80:	095b      	lsrs	r3, r3, #5
 8000a82:	005a      	lsls	r2, r3, #1
 8000a84:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8000a88:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000a8c:	f003 0307 	and.w	r3, r3, #7
 8000a90:	6821      	ldr	r1, [r4, #0]
 8000a92:	4413      	add	r3, r2
 8000a94:	608b      	str	r3, [r1, #8]
 8000a96:	e7d4      	b.n	8000a42 <UART_SetConfig+0x10e>
 8000a98:	00a037a0 	adceq	r3, r0, r0, lsr #15
 8000a9c:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
 8000aa0:	40011000 	andmi	r1, r1, r0
 8000aa4:	51eb851f 	mvnpl	r8, pc, lsl r5

08000aa8 <UART_WaitOnFlagUntilTimeout>:
{
 8000aa8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000aac:	b083      	sub	sp, #12
 8000aae:	4605      	mov	r5, r0
 8000ab0:	460e      	mov	r6, r1
 8000ab2:	4617      	mov	r7, r2
 8000ab4:	4699      	mov	r9, r3
 8000ab6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8000aba:	682c      	ldr	r4, [r5, #0]
 8000abc:	6824      	ldr	r4, [r4, #0]
 8000abe:	ea36 0304 	bics.w	r3, r6, r4
 8000ac2:	bf0c      	ite	eq
 8000ac4:	f04f 0c01 	moveq.w	ip, #1
 8000ac8:	f04f 0c00 	movne.w	ip, #0
 8000acc:	45bc      	cmp	ip, r7
 8000ace:	d128      	bne.n	8000b22 <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8000ad0:	f1b8 3fff 	cmp.w	r8, #4294967295
 8000ad4:	d0f1      	beq.n	8000aba <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8000ad6:	f000 fdcd 	bl	8001674 <HAL_GetTick>
 8000ada:	eba0 0009 	sub.w	r0, r0, r9
 8000ade:	4540      	cmp	r0, r8
 8000ae0:	d823      	bhi.n	8000b2a <UART_WaitOnFlagUntilTimeout+0x82>
 8000ae2:	f1b8 0f00 	cmp.w	r8, #0
 8000ae6:	d022      	beq.n	8000b2e <UART_WaitOnFlagUntilTimeout+0x86>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8000ae8:	682b      	ldr	r3, [r5, #0]
 8000aea:	68da      	ldr	r2, [r3, #12]
 8000aec:	f012 0f04 	tst.w	r2, #4
 8000af0:	d0e3      	beq.n	8000aba <UART_WaitOnFlagUntilTimeout+0x12>
 8000af2:	2e80      	cmp	r6, #128	; 0x80
 8000af4:	d0e1      	beq.n	8000aba <UART_WaitOnFlagUntilTimeout+0x12>
 8000af6:	2e40      	cmp	r6, #64	; 0x40
 8000af8:	d0df      	beq.n	8000aba <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8000afa:	681a      	ldr	r2, [r3, #0]
 8000afc:	f012 0f08 	tst.w	r2, #8
 8000b00:	d0db      	beq.n	8000aba <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8000b02:	2400      	movs	r4, #0
 8000b04:	9401      	str	r4, [sp, #4]
 8000b06:	681a      	ldr	r2, [r3, #0]
 8000b08:	9201      	str	r2, [sp, #4]
 8000b0a:	685b      	ldr	r3, [r3, #4]
 8000b0c:	9301      	str	r3, [sp, #4]
 8000b0e:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8000b10:	4628      	mov	r0, r5
 8000b12:	f7ff feb1 	bl	8000878 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8000b16:	2308      	movs	r3, #8
 8000b18:	646b      	str	r3, [r5, #68]	; 0x44
          __HAL_UNLOCK(huart);
 8000b1a:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
          return HAL_ERROR;
 8000b1e:	2001      	movs	r0, #1
 8000b20:	e000      	b.n	8000b24 <UART_WaitOnFlagUntilTimeout+0x7c>
  return HAL_OK;
 8000b22:	2000      	movs	r0, #0
}
 8000b24:	b003      	add	sp, #12
 8000b26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
 8000b2a:	2003      	movs	r0, #3
 8000b2c:	e7fa      	b.n	8000b24 <UART_WaitOnFlagUntilTimeout+0x7c>
 8000b2e:	2003      	movs	r0, #3
 8000b30:	e7f8      	b.n	8000b24 <UART_WaitOnFlagUntilTimeout+0x7c>
	...

08000b34 <HAL_UART_Init>:
  if (huart == NULL)
 8000b34:	2800      	cmp	r0, #0
 8000b36:	f000 808c 	beq.w	8000c52 <HAL_UART_Init+0x11e>
{
 8000b3a:	b510      	push	{r4, lr}
 8000b3c:	4604      	mov	r4, r0
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8000b3e:	6983      	ldr	r3, [r0, #24]
 8000b40:	2b00      	cmp	r3, #0
 8000b42:	d056      	beq.n	8000bf2 <HAL_UART_Init+0xbe>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8000b44:	6803      	ldr	r3, [r0, #0]
 8000b46:	4a44      	ldr	r2, [pc, #272]	; (8000c58 <HAL_UART_Init+0x124>)
 8000b48:	4293      	cmp	r3, r2
 8000b4a:	d010      	beq.n	8000b6e <HAL_UART_Init+0x3a>
 8000b4c:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000b50:	4293      	cmp	r3, r2
 8000b52:	d00c      	beq.n	8000b6e <HAL_UART_Init+0x3a>
 8000b54:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000b58:	4293      	cmp	r3, r2
 8000b5a:	d008      	beq.n	8000b6e <HAL_UART_Init+0x3a>
 8000b5c:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8000b60:	4293      	cmp	r3, r2
 8000b62:	d004      	beq.n	8000b6e <HAL_UART_Init+0x3a>
 8000b64:	f240 1173 	movw	r1, #371	; 0x173
 8000b68:	483c      	ldr	r0, [pc, #240]	; (8000c5c <HAL_UART_Init+0x128>)
 8000b6a:	f7ff fddd 	bl	8000728 <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000b6e:	69a3      	ldr	r3, [r4, #24]
 8000b70:	b143      	cbz	r3, 8000b84 <HAL_UART_Init+0x50>
 8000b72:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000b76:	d005      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000b78:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000b7c:	d002      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000b7e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000b82:	d130      	bne.n	8000be6 <HAL_UART_Init+0xb2>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000b84:	68a3      	ldr	r3, [r4, #8]
 8000b86:	b113      	cbz	r3, 8000b8e <HAL_UART_Init+0x5a>
 8000b88:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000b8c:	d14f      	bne.n	8000c2e <HAL_UART_Init+0xfa>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000b8e:	69e3      	ldr	r3, [r4, #28]
 8000b90:	b113      	cbz	r3, 8000b98 <HAL_UART_Init+0x64>
 8000b92:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000b96:	d150      	bne.n	8000c3a <HAL_UART_Init+0x106>
  if (huart->gState == HAL_UART_STATE_RESET)
 8000b98:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	d052      	beq.n	8000c46 <HAL_UART_Init+0x112>
  huart->gState = HAL_UART_STATE_BUSY;
 8000ba0:	2324      	movs	r3, #36	; 0x24
 8000ba2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UART_DISABLE(huart);
 8000ba6:	6822      	ldr	r2, [r4, #0]
 8000ba8:	68d3      	ldr	r3, [r2, #12]
 8000baa:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000bae:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8000bb0:	4620      	mov	r0, r4
 8000bb2:	f7ff febf 	bl	8000934 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8000bb6:	6822      	ldr	r2, [r4, #0]
 8000bb8:	6913      	ldr	r3, [r2, #16]
 8000bba:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8000bbe:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8000bc0:	6822      	ldr	r2, [r4, #0]
 8000bc2:	6953      	ldr	r3, [r2, #20]
 8000bc4:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8000bc8:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8000bca:	6822      	ldr	r2, [r4, #0]
 8000bcc:	68d3      	ldr	r3, [r2, #12]
 8000bce:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000bd2:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	6460      	str	r0, [r4, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 8000bd8:	2320      	movs	r3, #32
 8000bda:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8000bde:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000be2:	6360      	str	r0, [r4, #52]	; 0x34
}
 8000be4:	bd10      	pop	{r4, pc}
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000be6:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8000bea:	481c      	ldr	r0, [pc, #112]	; (8000c5c <HAL_UART_Init+0x128>)
 8000bec:	f7ff fd9c 	bl	8000728 <assert_failed>
 8000bf0:	e7c8      	b.n	8000b84 <HAL_UART_Init+0x50>
    assert_param(IS_UART_INSTANCE(huart->Instance));
 8000bf2:	6803      	ldr	r3, [r0, #0]
 8000bf4:	4a18      	ldr	r2, [pc, #96]	; (8000c58 <HAL_UART_Init+0x124>)
 8000bf6:	4293      	cmp	r3, r2
 8000bf8:	d0c4      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000bfa:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000bfe:	4293      	cmp	r3, r2
 8000c00:	d0c0      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000c02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c06:	4293      	cmp	r3, r2
 8000c08:	d0bc      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000c0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c0e:	4293      	cmp	r3, r2
 8000c10:	d0b8      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000c12:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c16:	4293      	cmp	r3, r2
 8000c18:	d0b4      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000c1a:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8000c1e:	4293      	cmp	r3, r2
 8000c20:	d0b0      	beq.n	8000b84 <HAL_UART_Init+0x50>
 8000c22:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8000c26:	480d      	ldr	r0, [pc, #52]	; (8000c5c <HAL_UART_Init+0x128>)
 8000c28:	f7ff fd7e 	bl	8000728 <assert_failed>
 8000c2c:	e7aa      	b.n	8000b84 <HAL_UART_Init+0x50>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000c2e:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8000c32:	480a      	ldr	r0, [pc, #40]	; (8000c5c <HAL_UART_Init+0x128>)
 8000c34:	f7ff fd78 	bl	8000728 <assert_failed>
 8000c38:	e7a9      	b.n	8000b8e <HAL_UART_Init+0x5a>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000c3a:	f240 117b 	movw	r1, #379	; 0x17b
 8000c3e:	4807      	ldr	r0, [pc, #28]	; (8000c5c <HAL_UART_Init+0x128>)
 8000c40:	f7ff fd72 	bl	8000728 <assert_failed>
 8000c44:	e7a8      	b.n	8000b98 <HAL_UART_Init+0x64>
    huart->Lock = HAL_UNLOCKED;
 8000c46:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_UART_MspInit(huart);
 8000c4a:	4620      	mov	r0, r4
 8000c4c:	f7ff fdb8 	bl	80007c0 <HAL_UART_MspInit>
 8000c50:	e7a6      	b.n	8000ba0 <HAL_UART_Init+0x6c>
    return HAL_ERROR;
 8000c52:	2001      	movs	r0, #1
}
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop
 8000c58:	40011000 	andmi	r1, r1, r0
 8000c5c:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}

08000c60 <HAL_UART_Transmit>:
{
 8000c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c64:	b082      	sub	sp, #8
 8000c66:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8000c68:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000c6c:	b2db      	uxtb	r3, r3
 8000c6e:	2b20      	cmp	r3, #32
 8000c70:	d156      	bne.n	8000d20 <HAL_UART_Transmit+0xc0>
 8000c72:	4604      	mov	r4, r0
 8000c74:	460d      	mov	r5, r1
 8000c76:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8000c78:	2900      	cmp	r1, #0
 8000c7a:	d055      	beq.n	8000d28 <HAL_UART_Transmit+0xc8>
 8000c7c:	b90a      	cbnz	r2, 8000c82 <HAL_UART_Transmit+0x22>
      return  HAL_ERROR;
 8000c7e:	2001      	movs	r0, #1
 8000c80:	e04f      	b.n	8000d22 <HAL_UART_Transmit+0xc2>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000c82:	2300      	movs	r3, #0
 8000c84:	6443      	str	r3, [r0, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8000c86:	2321      	movs	r3, #33	; 0x21
 8000c88:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    tickstart = HAL_GetTick();
 8000c8c:	f000 fcf2 	bl	8001674 <HAL_GetTick>
 8000c90:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8000c92:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8000c96:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000c9a:	68a3      	ldr	r3, [r4, #8]
 8000c9c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000ca0:	d002      	beq.n	8000ca8 <HAL_UART_Transmit+0x48>
      pdata16bits = NULL;
 8000ca2:	f04f 0800 	mov.w	r8, #0
 8000ca6:	e014      	b.n	8000cd2 <HAL_UART_Transmit+0x72>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000ca8:	6923      	ldr	r3, [r4, #16]
 8000caa:	b32b      	cbz	r3, 8000cf8 <HAL_UART_Transmit+0x98>
      pdata16bits = NULL;
 8000cac:	f04f 0800 	mov.w	r8, #0
 8000cb0:	e00f      	b.n	8000cd2 <HAL_UART_Transmit+0x72>
        huart->gState = HAL_UART_STATE_READY;
 8000cb2:	2320      	movs	r3, #32
 8000cb4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        return HAL_TIMEOUT;
 8000cb8:	2003      	movs	r0, #3
 8000cba:	e032      	b.n	8000d22 <HAL_UART_Transmit+0xc2>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8000cbc:	f838 3b02 	ldrh.w	r3, [r8], #2
 8000cc0:	6822      	ldr	r2, [r4, #0]
 8000cc2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000cc6:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8000cc8:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000cca:	b292      	uxth	r2, r2
 8000ccc:	3a01      	subs	r2, #1
 8000cce:	b292      	uxth	r2, r2
 8000cd0:	84e2      	strh	r2, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8000cd2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000cd4:	b29b      	uxth	r3, r3
 8000cd6:	b193      	cbz	r3, 8000cfe <HAL_UART_Transmit+0x9e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8000cd8:	9600      	str	r6, [sp, #0]
 8000cda:	463b      	mov	r3, r7
 8000cdc:	2200      	movs	r2, #0
 8000cde:	2180      	movs	r1, #128	; 0x80
 8000ce0:	4620      	mov	r0, r4
 8000ce2:	f7ff fee1 	bl	8000aa8 <UART_WaitOnFlagUntilTimeout>
 8000ce6:	2800      	cmp	r0, #0
 8000ce8:	d1e3      	bne.n	8000cb2 <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 8000cea:	2d00      	cmp	r5, #0
 8000cec:	d0e6      	beq.n	8000cbc <HAL_UART_Transmit+0x5c>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8000cee:	f815 2b01 	ldrb.w	r2, [r5], #1
 8000cf2:	6823      	ldr	r3, [r4, #0]
 8000cf4:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8000cf6:	e7e7      	b.n	8000cc8 <HAL_UART_Transmit+0x68>
      pdata16bits = (const uint16_t *) pData;
 8000cf8:	46a8      	mov	r8, r5
      pdata8bits  = NULL;
 8000cfa:	2500      	movs	r5, #0
 8000cfc:	e7e9      	b.n	8000cd2 <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8000cfe:	9600      	str	r6, [sp, #0]
 8000d00:	463b      	mov	r3, r7
 8000d02:	2200      	movs	r2, #0
 8000d04:	2140      	movs	r1, #64	; 0x40
 8000d06:	4620      	mov	r0, r4
 8000d08:	f7ff fece 	bl	8000aa8 <UART_WaitOnFlagUntilTimeout>
 8000d0c:	b918      	cbnz	r0, 8000d16 <HAL_UART_Transmit+0xb6>
    huart->gState = HAL_UART_STATE_READY;
 8000d0e:	2320      	movs	r3, #32
 8000d10:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    return HAL_OK;
 8000d14:	e005      	b.n	8000d22 <HAL_UART_Transmit+0xc2>
      huart->gState = HAL_UART_STATE_READY;
 8000d16:	2320      	movs	r3, #32
 8000d18:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      return HAL_TIMEOUT;
 8000d1c:	2003      	movs	r0, #3
 8000d1e:	e000      	b.n	8000d22 <HAL_UART_Transmit+0xc2>
    return HAL_BUSY;
 8000d20:	2002      	movs	r0, #2
}
 8000d22:	b002      	add	sp, #8
 8000d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 8000d28:	2001      	movs	r0, #1
 8000d2a:	e7fa      	b.n	8000d22 <HAL_UART_Transmit+0xc2>

08000d2c <HAL_UART_TxCpltCallback>:
}
 8000d2c:	4770      	bx	lr

08000d2e <UART_EndTransmit_IT>:
{
 8000d2e:	b508      	push	{r3, lr}
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8000d30:	6801      	ldr	r1, [r0, #0]
 8000d32:	68ca      	ldr	r2, [r1, #12]
 8000d34:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000d38:	60ca      	str	r2, [r1, #12]
  huart->gState = HAL_UART_STATE_READY;
 8000d3a:	2220      	movs	r2, #32
 8000d3c:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
  HAL_UART_TxCpltCallback(huart);
 8000d40:	f7ff fff4 	bl	8000d2c <HAL_UART_TxCpltCallback>
}
 8000d44:	2000      	movs	r0, #0
 8000d46:	bd08      	pop	{r3, pc}

08000d48 <HAL_UART_RxCpltCallback>:
}
 8000d48:	4770      	bx	lr

08000d4a <HAL_UART_ErrorCallback>:
}
 8000d4a:	4770      	bx	lr

08000d4c <UART_DMAAbortOnError>:
{
 8000d4c:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8000d4e:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8000d50:	2300      	movs	r3, #0
 8000d52:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8000d54:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8000d56:	f7ff fff8 	bl	8000d4a <HAL_UART_ErrorCallback>
}
 8000d5a:	bd08      	pop	{r3, pc}

08000d5c <HAL_UARTEx_RxEventCallback>:
}
 8000d5c:	4770      	bx	lr

08000d5e <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8000d5e:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 8000d62:	b2db      	uxtb	r3, r3
 8000d64:	2b22      	cmp	r3, #34	; 0x22
 8000d66:	d169      	bne.n	8000e3c <UART_Receive_IT+0xde>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000d68:	6883      	ldr	r3, [r0, #8]
 8000d6a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000d6e:	d04f      	beq.n	8000e10 <UART_Receive_IT+0xb2>
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8000d70:	6a82      	ldr	r2, [r0, #40]	; 0x28
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8000d72:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000d76:	d004      	beq.n	8000d82 <UART_Receive_IT+0x24>
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	d156      	bne.n	8000e2a <UART_Receive_IT+0xcc>
 8000d7c:	6903      	ldr	r3, [r0, #16]
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	d153      	bne.n	8000e2a <UART_Receive_IT+0xcc>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8000d82:	6803      	ldr	r3, [r0, #0]
 8000d84:	685b      	ldr	r3, [r3, #4]
 8000d86:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr += 1U;
 8000d88:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000d8a:	3301      	adds	r3, #1
 8000d8c:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8000d8e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8000d90:	b29b      	uxth	r3, r3
 8000d92:	3b01      	subs	r3, #1
 8000d94:	b29b      	uxth	r3, r3
 8000d96:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8000d98:	2b00      	cmp	r3, #0
 8000d9a:	d151      	bne.n	8000e40 <UART_Receive_IT+0xe2>
{
 8000d9c:	b500      	push	{lr}
 8000d9e:	b083      	sub	sp, #12
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8000da0:	6802      	ldr	r2, [r0, #0]
 8000da2:	68d3      	ldr	r3, [r2, #12]
 8000da4:	f023 0320 	bic.w	r3, r3, #32
 8000da8:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8000daa:	6802      	ldr	r2, [r0, #0]
 8000dac:	68d3      	ldr	r3, [r2, #12]
 8000dae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000db2:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8000db4:	6802      	ldr	r2, [r0, #0]
 8000db6:	6953      	ldr	r3, [r2, #20]
 8000db8:	f023 0301 	bic.w	r3, r3, #1
 8000dbc:	6153      	str	r3, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8000dbe:	2320      	movs	r3, #32
 8000dc0:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	6343      	str	r3, [r0, #52]	; 0x34
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000dc8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000dca:	2b01      	cmp	r3, #1
 8000dcc:	d133      	bne.n	8000e36 <UART_Receive_IT+0xd8>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000dce:	2300      	movs	r3, #0
 8000dd0:	6303      	str	r3, [r0, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000dd2:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000dd4:	f102 030c 	add.w	r3, r2, #12
 8000dd8:	e853 3f00 	ldrex	r3, [r3]
 8000ddc:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000de0:	320c      	adds	r2, #12
 8000de2:	e842 3100 	strex	r1, r3, [r2]
 8000de6:	2900      	cmp	r1, #0
 8000de8:	d1f3      	bne.n	8000dd2 <UART_Receive_IT+0x74>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8000dea:	6803      	ldr	r3, [r0, #0]
 8000dec:	681a      	ldr	r2, [r3, #0]
 8000dee:	f012 0f10 	tst.w	r2, #16
 8000df2:	d006      	beq.n	8000e02 <UART_Receive_IT+0xa4>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000df4:	2200      	movs	r2, #0
 8000df6:	9201      	str	r2, [sp, #4]
 8000df8:	681a      	ldr	r2, [r3, #0]
 8000dfa:	9201      	str	r2, [sp, #4]
 8000dfc:	685b      	ldr	r3, [r3, #4]
 8000dfe:	9301      	str	r3, [sp, #4]
 8000e00:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8000e02:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8000e04:	f7ff ffaa 	bl	8000d5c <HAL_UARTEx_RxEventCallback>
      return HAL_OK;
 8000e08:	2000      	movs	r0, #0
}
 8000e0a:	b003      	add	sp, #12
 8000e0c:	f85d fb04 	ldr.w	pc, [sp], #4
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000e10:	6902      	ldr	r2, [r0, #16]
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d1ac      	bne.n	8000d70 <UART_Receive_IT+0x12>
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8000e16:	6a82      	ldr	r2, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8000e18:	6803      	ldr	r3, [r0, #0]
 8000e1a:	685b      	ldr	r3, [r3, #4]
 8000e1c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000e20:	8013      	strh	r3, [r2, #0]
      huart->pRxBuffPtr += 2U;
 8000e22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e24:	3302      	adds	r3, #2
 8000e26:	6283      	str	r3, [r0, #40]	; 0x28
 8000e28:	e7b1      	b.n	8000d8e <UART_Receive_IT+0x30>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8000e2a:	6803      	ldr	r3, [r0, #0]
 8000e2c:	685b      	ldr	r3, [r3, #4]
 8000e2e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000e32:	7013      	strb	r3, [r2, #0]
 8000e34:	e7a8      	b.n	8000d88 <UART_Receive_IT+0x2a>
        HAL_UART_RxCpltCallback(huart);
 8000e36:	f7ff ff87 	bl	8000d48 <HAL_UART_RxCpltCallback>
 8000e3a:	e7e5      	b.n	8000e08 <UART_Receive_IT+0xaa>
    return HAL_BUSY;
 8000e3c:	2002      	movs	r0, #2
 8000e3e:	4770      	bx	lr
    return HAL_OK;
 8000e40:	2000      	movs	r0, #0
}
 8000e42:	4770      	bx	lr

08000e44 <HAL_UART_IRQHandler>:
{
 8000e44:	b530      	push	{r4, r5, lr}
 8000e46:	b083      	sub	sp, #12
 8000e48:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8000e4a:	6802      	ldr	r2, [r0, #0]
 8000e4c:	6813      	ldr	r3, [r2, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8000e4e:	68d0      	ldr	r0, [r2, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8000e50:	6951      	ldr	r1, [r2, #20]
  if (errorflags == RESET)
 8000e52:	f013 050f 	ands.w	r5, r3, #15
 8000e56:	d105      	bne.n	8000e64 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000e58:	f013 0f20 	tst.w	r3, #32
 8000e5c:	d002      	beq.n	8000e64 <HAL_UART_IRQHandler+0x20>
 8000e5e:	f010 0f20 	tst.w	r0, #32
 8000e62:	d119      	bne.n	8000e98 <HAL_UART_IRQHandler+0x54>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8000e64:	b12d      	cbz	r5, 8000e72 <HAL_UART_IRQHandler+0x2e>
 8000e66:	f011 0101 	ands.w	r1, r1, #1
 8000e6a:	d119      	bne.n	8000ea0 <HAL_UART_IRQHandler+0x5c>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8000e6c:	f410 7f90 	tst.w	r0, #288	; 0x120
 8000e70:	d116      	bne.n	8000ea0 <HAL_UART_IRQHandler+0x5c>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000e72:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000e74:	2901      	cmp	r1, #1
 8000e76:	d07d      	beq.n	8000f74 <HAL_UART_IRQHandler+0x130>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8000e78:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000e7c:	d003      	beq.n	8000e86 <HAL_UART_IRQHandler+0x42>
 8000e7e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000e82:	f040 8119 	bne.w	80010b8 <HAL_UART_IRQHandler+0x274>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8000e86:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000e8a:	d003      	beq.n	8000e94 <HAL_UART_IRQHandler+0x50>
 8000e8c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e90:	f040 8116 	bne.w	80010c0 <HAL_UART_IRQHandler+0x27c>
}
 8000e94:	b003      	add	sp, #12
 8000e96:	bd30      	pop	{r4, r5, pc}
      UART_Receive_IT(huart);
 8000e98:	4620      	mov	r0, r4
 8000e9a:	f7ff ff60 	bl	8000d5e <UART_Receive_IT>
      return;
 8000e9e:	e7f9      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8000ea0:	f013 0f01 	tst.w	r3, #1
 8000ea4:	d006      	beq.n	8000eb4 <HAL_UART_IRQHandler+0x70>
 8000ea6:	f410 7f80 	tst.w	r0, #256	; 0x100
 8000eaa:	d003      	beq.n	8000eb4 <HAL_UART_IRQHandler+0x70>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8000eac:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000eae:	f042 0201 	orr.w	r2, r2, #1
 8000eb2:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000eb4:	f013 0f04 	tst.w	r3, #4
 8000eb8:	d004      	beq.n	8000ec4 <HAL_UART_IRQHandler+0x80>
 8000eba:	b119      	cbz	r1, 8000ec4 <HAL_UART_IRQHandler+0x80>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8000ebc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ebe:	f042 0202 	orr.w	r2, r2, #2
 8000ec2:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000ec4:	f013 0f02 	tst.w	r3, #2
 8000ec8:	d004      	beq.n	8000ed4 <HAL_UART_IRQHandler+0x90>
 8000eca:	b119      	cbz	r1, 8000ed4 <HAL_UART_IRQHandler+0x90>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8000ecc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ece:	f042 0204 	orr.w	r2, r2, #4
 8000ed2:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8000ed4:	f013 0f08 	tst.w	r3, #8
 8000ed8:	d007      	beq.n	8000eea <HAL_UART_IRQHandler+0xa6>
 8000eda:	f010 0f20 	tst.w	r0, #32
 8000ede:	d100      	bne.n	8000ee2 <HAL_UART_IRQHandler+0x9e>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8000ee0:	b119      	cbz	r1, 8000eea <HAL_UART_IRQHandler+0xa6>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8000ee2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ee4:	f042 0208 	orr.w	r2, r2, #8
 8000ee8:	6462      	str	r2, [r4, #68]	; 0x44
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8000eea:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000eec:	2a00      	cmp	r2, #0
 8000eee:	d0d1      	beq.n	8000e94 <HAL_UART_IRQHandler+0x50>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000ef0:	f013 0f20 	tst.w	r3, #32
 8000ef4:	d002      	beq.n	8000efc <HAL_UART_IRQHandler+0xb8>
 8000ef6:	f010 0f20 	tst.w	r0, #32
 8000efa:	d129      	bne.n	8000f50 <HAL_UART_IRQHandler+0x10c>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8000efc:	6823      	ldr	r3, [r4, #0]
 8000efe:	695b      	ldr	r3, [r3, #20]
 8000f00:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8000f04:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f06:	f012 0f08 	tst.w	r2, #8
 8000f0a:	d100      	bne.n	8000f0e <HAL_UART_IRQHandler+0xca>
 8000f0c:	b363      	cbz	r3, 8000f68 <HAL_UART_IRQHandler+0x124>
        UART_EndRxTransfer(huart);
 8000f0e:	4620      	mov	r0, r4
 8000f10:	f7ff fcb2 	bl	8000878 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000f14:	6823      	ldr	r3, [r4, #0]
 8000f16:	695b      	ldr	r3, [r3, #20]
 8000f18:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f1c:	d020      	beq.n	8000f60 <HAL_UART_IRQHandler+0x11c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8000f1e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000f20:	f102 0314 	add.w	r3, r2, #20
 8000f24:	e853 3f00 	ldrex	r3, [r3]
 8000f28:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000f2c:	3214      	adds	r2, #20
 8000f2e:	e842 3100 	strex	r1, r3, [r2]
 8000f32:	2900      	cmp	r1, #0
 8000f34:	d1f3      	bne.n	8000f1e <HAL_UART_IRQHandler+0xda>
          if (huart->hdmarx != NULL)
 8000f36:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8000f38:	b173      	cbz	r3, 8000f58 <HAL_UART_IRQHandler+0x114>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8000f3a:	4a63      	ldr	r2, [pc, #396]	; (80010c8 <HAL_UART_IRQHandler+0x284>)
 8000f3c:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8000f3e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f40:	f000 faa8 	bl	8001494 <HAL_DMA_Abort_IT>
 8000f44:	2800      	cmp	r0, #0
 8000f46:	d0a5      	beq.n	8000e94 <HAL_UART_IRQHandler+0x50>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8000f48:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f4a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000f4c:	4798      	blx	r3
 8000f4e:	e7a1      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
        UART_Receive_IT(huart);
 8000f50:	4620      	mov	r0, r4
 8000f52:	f7ff ff04 	bl	8000d5e <UART_Receive_IT>
 8000f56:	e7d1      	b.n	8000efc <HAL_UART_IRQHandler+0xb8>
            HAL_UART_ErrorCallback(huart);
 8000f58:	4620      	mov	r0, r4
 8000f5a:	f7ff fef6 	bl	8000d4a <HAL_UART_ErrorCallback>
 8000f5e:	e799      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
          HAL_UART_ErrorCallback(huart);
 8000f60:	4620      	mov	r0, r4
 8000f62:	f7ff fef2 	bl	8000d4a <HAL_UART_ErrorCallback>
 8000f66:	e795      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
        HAL_UART_ErrorCallback(huart);
 8000f68:	4620      	mov	r0, r4
 8000f6a:	f7ff feee 	bl	8000d4a <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000f6e:	2300      	movs	r3, #0
 8000f70:	6463      	str	r3, [r4, #68]	; 0x44
    return;
 8000f72:	e78f      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8000f74:	f013 0f10 	tst.w	r3, #16
 8000f78:	f43f af7e 	beq.w	8000e78 <HAL_UART_IRQHandler+0x34>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8000f7c:	f010 0f10 	tst.w	r0, #16
 8000f80:	f43f af7a 	beq.w	8000e78 <HAL_UART_IRQHandler+0x34>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000f84:	2300      	movs	r3, #0
 8000f86:	9301      	str	r3, [sp, #4]
 8000f88:	6813      	ldr	r3, [r2, #0]
 8000f8a:	9301      	str	r3, [sp, #4]
 8000f8c:	6853      	ldr	r3, [r2, #4]
 8000f8e:	9301      	str	r3, [sp, #4]
 8000f90:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000f92:	6953      	ldr	r3, [r2, #20]
 8000f94:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f98:	d052      	beq.n	8001040 <HAL_UART_IRQHandler+0x1fc>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8000f9a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8000f9c:	6813      	ldr	r3, [r2, #0]
 8000f9e:	685b      	ldr	r3, [r3, #4]
 8000fa0:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8000fa2:	2b00      	cmp	r3, #0
 8000fa4:	f43f af76 	beq.w	8000e94 <HAL_UART_IRQHandler+0x50>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8000fa8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8000faa:	4299      	cmp	r1, r3
 8000fac:	f67f af72 	bls.w	8000e94 <HAL_UART_IRQHandler+0x50>
        huart->RxXferCount = nb_remaining_rx_data;
 8000fb0:	85e3      	strh	r3, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8000fb2:	69d3      	ldr	r3, [r2, #28]
 8000fb4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000fb8:	d037      	beq.n	800102a <HAL_UART_IRQHandler+0x1e6>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8000fba:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000fbc:	f102 030c 	add.w	r3, r2, #12
 8000fc0:	e853 3f00 	ldrex	r3, [r3]
 8000fc4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000fc8:	320c      	adds	r2, #12
 8000fca:	e842 3100 	strex	r1, r3, [r2]
 8000fce:	2900      	cmp	r1, #0
 8000fd0:	d1f3      	bne.n	8000fba <HAL_UART_IRQHandler+0x176>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8000fd2:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000fd4:	f102 0314 	add.w	r3, r2, #20
 8000fd8:	e853 3f00 	ldrex	r3, [r3]
 8000fdc:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000fe0:	3214      	adds	r2, #20
 8000fe2:	e842 3100 	strex	r1, r3, [r2]
 8000fe6:	2900      	cmp	r1, #0
 8000fe8:	d1f3      	bne.n	8000fd2 <HAL_UART_IRQHandler+0x18e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8000fea:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000fec:	f102 0314 	add.w	r3, r2, #20
 8000ff0:	e853 3f00 	ldrex	r3, [r3]
 8000ff4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000ff8:	3214      	adds	r2, #20
 8000ffa:	e842 3100 	strex	r1, r3, [r2]
 8000ffe:	2900      	cmp	r1, #0
 8001000:	d1f3      	bne.n	8000fea <HAL_UART_IRQHandler+0x1a6>
          huart->RxState = HAL_UART_STATE_READY;
 8001002:	2320      	movs	r3, #32
 8001004:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001008:	2300      	movs	r3, #0
 800100a:	6323      	str	r3, [r4, #48]	; 0x30
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800100c:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800100e:	f102 030c 	add.w	r3, r2, #12
 8001012:	e853 3f00 	ldrex	r3, [r3]
 8001016:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800101a:	320c      	adds	r2, #12
 800101c:	e842 3100 	strex	r1, r3, [r2]
 8001020:	2900      	cmp	r1, #0
 8001022:	d1f3      	bne.n	800100c <HAL_UART_IRQHandler+0x1c8>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8001024:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001026:	f000 f9eb 	bl	8001400 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800102a:	2302      	movs	r3, #2
 800102c:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800102e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001030:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001032:	b29b      	uxth	r3, r3
 8001034:	1ac9      	subs	r1, r1, r3
 8001036:	b289      	uxth	r1, r1
 8001038:	4620      	mov	r0, r4
 800103a:	f7ff fe8f 	bl	8000d5c <HAL_UARTEx_RxEventCallback>
      return;
 800103e:	e729      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8001040:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001042:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001044:	b29b      	uxth	r3, r3
 8001046:	1ac9      	subs	r1, r1, r3
 8001048:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 800104a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800104c:	b29b      	uxth	r3, r3
 800104e:	2b00      	cmp	r3, #0
 8001050:	f43f af20 	beq.w	8000e94 <HAL_UART_IRQHandler+0x50>
          && (nb_rx_data > 0U))
 8001054:	2900      	cmp	r1, #0
 8001056:	f43f af1d 	beq.w	8000e94 <HAL_UART_IRQHandler+0x50>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800105a:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800105c:	f102 030c 	add.w	r3, r2, #12
 8001060:	e853 3f00 	ldrex	r3, [r3]
 8001064:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001068:	320c      	adds	r2, #12
 800106a:	e842 3000 	strex	r0, r3, [r2]
 800106e:	2800      	cmp	r0, #0
 8001070:	d1f3      	bne.n	800105a <HAL_UART_IRQHandler+0x216>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001072:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001074:	f102 0314 	add.w	r3, r2, #20
 8001078:	e853 3f00 	ldrex	r3, [r3]
 800107c:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001080:	3214      	adds	r2, #20
 8001082:	e842 3000 	strex	r0, r3, [r2]
 8001086:	2800      	cmp	r0, #0
 8001088:	d1f3      	bne.n	8001072 <HAL_UART_IRQHandler+0x22e>
        huart->RxState = HAL_UART_STATE_READY;
 800108a:	2320      	movs	r3, #32
 800108c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001090:	2300      	movs	r3, #0
 8001092:	6323      	str	r3, [r4, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001094:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001096:	f102 030c 	add.w	r3, r2, #12
 800109a:	e853 3f00 	ldrex	r3, [r3]
 800109e:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010a2:	320c      	adds	r2, #12
 80010a4:	e842 3000 	strex	r0, r3, [r2]
 80010a8:	2800      	cmp	r0, #0
 80010aa:	d1f3      	bne.n	8001094 <HAL_UART_IRQHandler+0x250>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 80010ac:	2302      	movs	r3, #2
 80010ae:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80010b0:	4620      	mov	r0, r4
 80010b2:	f7ff fe53 	bl	8000d5c <HAL_UARTEx_RxEventCallback>
      return;
 80010b6:	e6ed      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
    UART_Transmit_IT(huart);
 80010b8:	4620      	mov	r0, r4
 80010ba:	f7ff fc0b 	bl	80008d4 <UART_Transmit_IT>
    return;
 80010be:	e6e9      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
    UART_EndTransmit_IT(huart);
 80010c0:	4620      	mov	r0, r4
 80010c2:	f7ff fe34 	bl	8000d2e <UART_EndTransmit_IT>
    return;
 80010c6:	e6e5      	b.n	8000e94 <HAL_UART_IRQHandler+0x50>
 80010c8:	08000d4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, fp}

080010cc <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80010cc:	4b01      	ldr	r3, [pc, #4]	; (80010d4 <HAL_RCC_GetHCLKFreq+0x8>)
 80010ce:	6818      	ldr	r0, [r3, #0]
 80010d0:	4770      	bx	lr
 80010d2:	bf00      	nop
 80010d4:	20000008 	andcs	r0, r0, r8

080010d8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80010d8:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80010da:	f7ff fff7 	bl	80010cc <HAL_RCC_GetHCLKFreq>
 80010de:	4b04      	ldr	r3, [pc, #16]	; (80010f0 <HAL_RCC_GetPCLK1Freq+0x18>)
 80010e0:	689b      	ldr	r3, [r3, #8]
 80010e2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80010e6:	4a03      	ldr	r2, [pc, #12]	; (80010f4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80010e8:	5cd3      	ldrb	r3, [r2, r3]
}
 80010ea:	40d8      	lsrs	r0, r3
 80010ec:	bd08      	pop	{r3, pc}
 80010ee:	bf00      	nop
 80010f0:	40023800 	andmi	r3, r2, r0, lsl #16
 80010f4:	08002d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, sp}

080010f8 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80010f8:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80010fa:	f7ff ffe7 	bl	80010cc <HAL_RCC_GetHCLKFreq>
 80010fe:	4b04      	ldr	r3, [pc, #16]	; (8001110 <HAL_RCC_GetPCLK2Freq+0x18>)
 8001100:	689b      	ldr	r3, [r3, #8]
 8001102:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8001106:	4a03      	ldr	r2, [pc, #12]	; (8001114 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8001108:	5cd3      	ldrb	r3, [r2, r3]
}
 800110a:	40d8      	lsrs	r0, r3
 800110c:	bd08      	pop	{r3, pc}
 800110e:	bf00      	nop
 8001110:	40023800 	andmi	r3, r2, r0, lsl #16
 8001114:	08002d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, sp}

08001118 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800111c:	b082      	sub	sp, #8
 800111e:	4607      	mov	r7, r0
 8001120:	460e      	mov	r6, r1
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 8001122:	4b54      	ldr	r3, [pc, #336]	; (8001274 <HAL_GPIO_Init+0x15c>)
 8001124:	4298      	cmp	r0, r3
 8001126:	d023      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001128:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800112c:	4298      	cmp	r0, r3
 800112e:	d01f      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001130:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001134:	4298      	cmp	r0, r3
 8001136:	d01b      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001138:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800113c:	4298      	cmp	r0, r3
 800113e:	d017      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001140:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001144:	4298      	cmp	r0, r3
 8001146:	d013      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001148:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800114c:	4298      	cmp	r0, r3
 800114e:	d00f      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001150:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001154:	4298      	cmp	r0, r3
 8001156:	d00b      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001158:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800115c:	4298      	cmp	r0, r3
 800115e:	d007      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001160:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001164:	4298      	cmp	r0, r3
 8001166:	d003      	beq.n	8001170 <HAL_GPIO_Init+0x58>
 8001168:	21ac      	movs	r1, #172	; 0xac
 800116a:	4843      	ldr	r0, [pc, #268]	; (8001278 <HAL_GPIO_Init+0x160>)
 800116c:	f7ff fadc 	bl	8000728 <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 8001170:	6833      	ldr	r3, [r6, #0]
 8001172:	b29a      	uxth	r2, r3
 8001174:	b112      	cbz	r2, 800117c <HAL_GPIO_Init+0x64>
 8001176:	0c1b      	lsrs	r3, r3, #16
 8001178:	041b      	lsls	r3, r3, #16
 800117a:	b11b      	cbz	r3, 8001184 <HAL_GPIO_Init+0x6c>
 800117c:	21ad      	movs	r1, #173	; 0xad
 800117e:	483e      	ldr	r0, [pc, #248]	; (8001278 <HAL_GPIO_Init+0x160>)
 8001180:	f7ff fad2 	bl	8000728 <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 8001184:	6873      	ldr	r3, [r6, #4]
 8001186:	2b01      	cmp	r3, #1
 8001188:	d919      	bls.n	80011be <HAL_GPIO_Init+0xa6>
 800118a:	2b11      	cmp	r3, #17
 800118c:	d017      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 800118e:	2b02      	cmp	r3, #2
 8001190:	d015      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 8001192:	2b12      	cmp	r3, #18
 8001194:	d013      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 8001196:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 800119a:	d010      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 800119c:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 80011a0:	d00d      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 80011a2:	f5b3 1f44 	cmp.w	r3, #3211264	; 0x310000
 80011a6:	d00a      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 80011a8:	f5b3 1f90 	cmp.w	r3, #1179648	; 0x120000
 80011ac:	d007      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 80011ae:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 80011b2:	d004      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 80011b4:	f5b3 1f48 	cmp.w	r3, #3276800	; 0x320000
 80011b8:	d001      	beq.n	80011be <HAL_GPIO_Init+0xa6>
 80011ba:	2b03      	cmp	r3, #3
 80011bc:	d101      	bne.n	80011c2 <HAL_GPIO_Init+0xaa>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80011be:	2400      	movs	r4, #0
 80011c0:	e092      	b.n	80012e8 <HAL_GPIO_Init+0x1d0>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80011c2:	21ae      	movs	r1, #174	; 0xae
 80011c4:	482c      	ldr	r0, [pc, #176]	; (8001278 <HAL_GPIO_Init+0x160>)
 80011c6:	f7ff faaf 	bl	8000728 <assert_failed>
 80011ca:	e7f8      	b.n	80011be <HAL_GPIO_Init+0xa6>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80011cc:	68f3      	ldr	r3, [r6, #12]
 80011ce:	2b03      	cmp	r3, #3
 80011d0:	d813      	bhi.n	80011fa <HAL_GPIO_Init+0xe2>
        temp = GPIOx->OSPEEDR; 
 80011d2:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80011d4:	0061      	lsls	r1, r4, #1
 80011d6:	2303      	movs	r3, #3
 80011d8:	408b      	lsls	r3, r1
 80011da:	ea22 0203 	bic.w	r2, r2, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 80011de:	68f3      	ldr	r3, [r6, #12]
 80011e0:	408b      	lsls	r3, r1
 80011e2:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 80011e4:	60bb      	str	r3, [r7, #8]
        temp = GPIOx->OTYPER;
 80011e6:	687a      	ldr	r2, [r7, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80011e8:	ea22 0205 	bic.w	r2, r2, r5
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80011ec:	6873      	ldr	r3, [r6, #4]
 80011ee:	f3c3 1500 	ubfx	r5, r3, #4, #1
 80011f2:	40a5      	lsls	r5, r4
 80011f4:	4315      	orrs	r5, r2
        GPIOx->OTYPER = temp;
 80011f6:	607d      	str	r5, [r7, #4]
 80011f8:	e087      	b.n	800130a <HAL_GPIO_Init+0x1f2>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80011fa:	21c0      	movs	r1, #192	; 0xc0
 80011fc:	481e      	ldr	r0, [pc, #120]	; (8001278 <HAL_GPIO_Init+0x160>)
 80011fe:	f7ff fa93 	bl	8000728 <assert_failed>
 8001202:	e7e6      	b.n	80011d2 <HAL_GPIO_Init+0xba>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8001204:	21d1      	movs	r1, #209	; 0xd1
 8001206:	481c      	ldr	r0, [pc, #112]	; (8001278 <HAL_GPIO_Init+0x160>)
 8001208:	f7ff fa8e 	bl	8000728 <assert_failed>
 800120c:	e086      	b.n	800131c <HAL_GPIO_Init+0x204>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 800120e:	6933      	ldr	r3, [r6, #16]
 8001210:	b1bb      	cbz	r3, 8001242 <HAL_GPIO_Init+0x12a>
 8001212:	2b09      	cmp	r3, #9
 8001214:	d015      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 8001216:	2b01      	cmp	r3, #1
 8001218:	d013      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 800121a:	2b02      	cmp	r3, #2
 800121c:	d011      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 800121e:	2b03      	cmp	r3, #3
 8001220:	d00f      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 8001222:	2b04      	cmp	r3, #4
 8001224:	d00d      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 8001226:	2b05      	cmp	r3, #5
 8001228:	d00b      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 800122a:	2b06      	cmp	r3, #6
 800122c:	d009      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 800122e:	2b07      	cmp	r3, #7
 8001230:	d007      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 8001232:	2b08      	cmp	r3, #8
 8001234:	d005      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 8001236:	2b0a      	cmp	r3, #10
 8001238:	d003      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 800123a:	2b0c      	cmp	r3, #12
 800123c:	d001      	beq.n	8001242 <HAL_GPIO_Init+0x12a>
 800123e:	2b0f      	cmp	r3, #15
 8001240:	d110      	bne.n	8001264 <HAL_GPIO_Init+0x14c>
        temp = GPIOx->AFR[position >> 3U];
 8001242:	08e2      	lsrs	r2, r4, #3
 8001244:	3208      	adds	r2, #8
 8001246:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800124a:	f004 0307 	and.w	r3, r4, #7
 800124e:	0099      	lsls	r1, r3, #2
 8001250:	230f      	movs	r3, #15
 8001252:	408b      	lsls	r3, r1
 8001254:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001258:	6933      	ldr	r3, [r6, #16]
 800125a:	408b      	lsls	r3, r1
 800125c:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3U] = temp;
 800125e:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
 8001262:	e06b      	b.n	800133c <HAL_GPIO_Init+0x224>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 8001264:	21de      	movs	r1, #222	; 0xde
 8001266:	4804      	ldr	r0, [pc, #16]	; (8001278 <HAL_GPIO_Init+0x160>)
 8001268:	f7ff fa5e 	bl	8000728 <assert_failed>
 800126c:	e7e9      	b.n	8001242 <HAL_GPIO_Init+0x12a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800126e:	2307      	movs	r3, #7
 8001270:	e005      	b.n	800127e <HAL_GPIO_Init+0x166>
 8001272:	bf00      	nop
 8001274:	40020000 	andmi	r0, r2, r0
 8001278:	08002d04 	stmdaeq	r0, {r2, r8, sl, fp, sp}
 800127c:	2300      	movs	r3, #0
 800127e:	408b      	lsls	r3, r1
 8001280:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001282:	3202      	adds	r2, #2
 8001284:	495a      	ldr	r1, [pc, #360]	; (80013f0 <HAL_GPIO_Init+0x2d8>)
 8001286:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800128a:	4b5a      	ldr	r3, [pc, #360]	; (80013f4 <HAL_GPIO_Init+0x2dc>)
 800128c:	689a      	ldr	r2, [r3, #8]
        temp &= ~((uint32_t)iocurrent);
 800128e:	ea6f 0308 	mvn.w	r3, r8
 8001292:	ea22 0108 	bic.w	r1, r2, r8
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8001296:	6870      	ldr	r0, [r6, #4]
 8001298:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 800129c:	d001      	beq.n	80012a2 <HAL_GPIO_Init+0x18a>
        {
          temp |= iocurrent;
 800129e:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->RTSR = temp;
 80012a2:	4a54      	ldr	r2, [pc, #336]	; (80013f4 <HAL_GPIO_Init+0x2dc>)
 80012a4:	6091      	str	r1, [r2, #8]

        temp = EXTI->FTSR;
 80012a6:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 80012a8:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80012ac:	6870      	ldr	r0, [r6, #4]
 80012ae:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 80012b2:	d001      	beq.n	80012b8 <HAL_GPIO_Init+0x1a0>
        {
          temp |= iocurrent;
 80012b4:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->FTSR = temp;
 80012b8:	4a4e      	ldr	r2, [pc, #312]	; (80013f4 <HAL_GPIO_Init+0x2dc>)
 80012ba:	60d1      	str	r1, [r2, #12]

        temp = EXTI->EMR;
 80012bc:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80012be:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80012c2:	6870      	ldr	r0, [r6, #4]
 80012c4:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 80012c8:	d001      	beq.n	80012ce <HAL_GPIO_Init+0x1b6>
        {
          temp |= iocurrent;
 80012ca:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->EMR = temp;
 80012ce:	4a49      	ldr	r2, [pc, #292]	; (80013f4 <HAL_GPIO_Init+0x2dc>)
 80012d0:	6051      	str	r1, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80012d2:	6812      	ldr	r2, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80012d4:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80012d6:	6871      	ldr	r1, [r6, #4]
 80012d8:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 80012dc:	d001      	beq.n	80012e2 <HAL_GPIO_Init+0x1ca>
        {
          temp |= iocurrent;
 80012de:	ea48 0302 	orr.w	r3, r8, r2
        }
        EXTI->IMR = temp;
 80012e2:	4a44      	ldr	r2, [pc, #272]	; (80013f4 <HAL_GPIO_Init+0x2dc>)
 80012e4:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80012e6:	3401      	adds	r4, #1
 80012e8:	2c0f      	cmp	r4, #15
 80012ea:	d87e      	bhi.n	80013ea <HAL_GPIO_Init+0x2d2>
    ioposition = 0x01U << position;
 80012ec:	2501      	movs	r5, #1
 80012ee:	40a5      	lsls	r5, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80012f0:	6833      	ldr	r3, [r6, #0]
 80012f2:	ea03 0805 	and.w	r8, r3, r5
    if(iocurrent == ioposition)
 80012f6:	ea35 0303 	bics.w	r3, r5, r3
 80012fa:	d1f4      	bne.n	80012e6 <HAL_GPIO_Init+0x1ce>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80012fc:	6873      	ldr	r3, [r6, #4]
 80012fe:	f003 0303 	and.w	r3, r3, #3
 8001302:	3b01      	subs	r3, #1
 8001304:	2b01      	cmp	r3, #1
 8001306:	f67f af61 	bls.w	80011cc <HAL_GPIO_Init+0xb4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800130a:	6873      	ldr	r3, [r6, #4]
 800130c:	f003 0303 	and.w	r3, r3, #3
 8001310:	2b03      	cmp	r3, #3
 8001312:	d00d      	beq.n	8001330 <HAL_GPIO_Init+0x218>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8001314:	68b3      	ldr	r3, [r6, #8]
 8001316:	2b02      	cmp	r3, #2
 8001318:	f63f af74 	bhi.w	8001204 <HAL_GPIO_Init+0xec>
        temp = GPIOx->PUPDR;
 800131c:	68fa      	ldr	r2, [r7, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800131e:	0061      	lsls	r1, r4, #1
 8001320:	2303      	movs	r3, #3
 8001322:	408b      	lsls	r3, r1
 8001324:	ea22 0203 	bic.w	r2, r2, r3
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001328:	68b3      	ldr	r3, [r6, #8]
 800132a:	408b      	lsls	r3, r1
 800132c:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 800132e:	60fb      	str	r3, [r7, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001330:	6873      	ldr	r3, [r6, #4]
 8001332:	f003 0303 	and.w	r3, r3, #3
 8001336:	2b02      	cmp	r3, #2
 8001338:	f43f af69 	beq.w	800120e <HAL_GPIO_Init+0xf6>
      temp = GPIOx->MODER;
 800133c:	683a      	ldr	r2, [r7, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800133e:	0061      	lsls	r1, r4, #1
 8001340:	2303      	movs	r3, #3
 8001342:	408b      	lsls	r3, r1
 8001344:	ea22 0203 	bic.w	r2, r2, r3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001348:	6873      	ldr	r3, [r6, #4]
 800134a:	f003 0303 	and.w	r3, r3, #3
 800134e:	408b      	lsls	r3, r1
 8001350:	4313      	orrs	r3, r2
      GPIOx->MODER = temp;
 8001352:	603b      	str	r3, [r7, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001354:	6873      	ldr	r3, [r6, #4]
 8001356:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 800135a:	d0c4      	beq.n	80012e6 <HAL_GPIO_Init+0x1ce>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800135c:	2300      	movs	r3, #0
 800135e:	9301      	str	r3, [sp, #4]
 8001360:	4b25      	ldr	r3, [pc, #148]	; (80013f8 <HAL_GPIO_Init+0x2e0>)
 8001362:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001364:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001368:	645a      	str	r2, [r3, #68]	; 0x44
 800136a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800136c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001370:	9301      	str	r3, [sp, #4]
 8001372:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8001374:	08a2      	lsrs	r2, r4, #2
 8001376:	1c91      	adds	r1, r2, #2
 8001378:	4b1d      	ldr	r3, [pc, #116]	; (80013f0 <HAL_GPIO_Init+0x2d8>)
 800137a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800137e:	f004 0303 	and.w	r3, r4, #3
 8001382:	0099      	lsls	r1, r3, #2
 8001384:	230f      	movs	r3, #15
 8001386:	408b      	lsls	r3, r1
 8001388:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800138c:	4b1b      	ldr	r3, [pc, #108]	; (80013fc <HAL_GPIO_Init+0x2e4>)
 800138e:	429f      	cmp	r7, r3
 8001390:	f43f af74 	beq.w	800127c <HAL_GPIO_Init+0x164>
 8001394:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001398:	429f      	cmp	r7, r3
 800139a:	d01a      	beq.n	80013d2 <HAL_GPIO_Init+0x2ba>
 800139c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013a0:	429f      	cmp	r7, r3
 80013a2:	d018      	beq.n	80013d6 <HAL_GPIO_Init+0x2be>
 80013a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013a8:	429f      	cmp	r7, r3
 80013aa:	d016      	beq.n	80013da <HAL_GPIO_Init+0x2c2>
 80013ac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013b0:	429f      	cmp	r7, r3
 80013b2:	d014      	beq.n	80013de <HAL_GPIO_Init+0x2c6>
 80013b4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013b8:	429f      	cmp	r7, r3
 80013ba:	d012      	beq.n	80013e2 <HAL_GPIO_Init+0x2ca>
 80013bc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013c0:	429f      	cmp	r7, r3
 80013c2:	d010      	beq.n	80013e6 <HAL_GPIO_Init+0x2ce>
 80013c4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013c8:	429f      	cmp	r7, r3
 80013ca:	f43f af50 	beq.w	800126e <HAL_GPIO_Init+0x156>
 80013ce:	2308      	movs	r3, #8
 80013d0:	e755      	b.n	800127e <HAL_GPIO_Init+0x166>
 80013d2:	2301      	movs	r3, #1
 80013d4:	e753      	b.n	800127e <HAL_GPIO_Init+0x166>
 80013d6:	2302      	movs	r3, #2
 80013d8:	e751      	b.n	800127e <HAL_GPIO_Init+0x166>
 80013da:	2303      	movs	r3, #3
 80013dc:	e74f      	b.n	800127e <HAL_GPIO_Init+0x166>
 80013de:	2304      	movs	r3, #4
 80013e0:	e74d      	b.n	800127e <HAL_GPIO_Init+0x166>
 80013e2:	2305      	movs	r3, #5
 80013e4:	e74b      	b.n	800127e <HAL_GPIO_Init+0x166>
 80013e6:	2306      	movs	r3, #6
 80013e8:	e749      	b.n	800127e <HAL_GPIO_Init+0x166>
      }
    }
  }
}
 80013ea:	b002      	add	sp, #8
 80013ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013f0:	40013800 	andmi	r3, r1, r0, lsl #16
 80013f4:	40013c00 	andmi	r3, r1, r0, lsl #24
 80013f8:	40023800 	andmi	r3, r2, r0, lsl #16
 80013fc:	40020000 	andmi	r0, r2, r0

08001400 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8001400:	b570      	push	{r4, r5, r6, lr}
 8001402:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8001404:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8001406:	f000 f935 	bl	8001674 <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800140a:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800140e:	b2db      	uxtb	r3, r3
 8001410:	2b02      	cmp	r3, #2
 8001412:	d006      	beq.n	8001422 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001414:	2380      	movs	r3, #128	; 0x80
 8001416:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001418:	2300      	movs	r3, #0
 800141a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 800141e:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8001420:	bd70      	pop	{r4, r5, r6, pc}
 8001422:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001424:	6822      	ldr	r2, [r4, #0]
 8001426:	6813      	ldr	r3, [r2, #0]
 8001428:	f023 0316 	bic.w	r3, r3, #22
 800142c:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800142e:	6822      	ldr	r2, [r4, #0]
 8001430:	6953      	ldr	r3, [r2, #20]
 8001432:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001436:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001438:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800143a:	b1e3      	cbz	r3, 8001476 <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800143c:	6822      	ldr	r2, [r4, #0]
 800143e:	6813      	ldr	r3, [r2, #0]
 8001440:	f023 0308 	bic.w	r3, r3, #8
 8001444:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 8001446:	6822      	ldr	r2, [r4, #0]
 8001448:	6813      	ldr	r3, [r2, #0]
 800144a:	f023 0301 	bic.w	r3, r3, #1
 800144e:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001450:	6823      	ldr	r3, [r4, #0]
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	f013 0f01 	tst.w	r3, #1
 8001458:	d011      	beq.n	800147e <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800145a:	f000 f90b 	bl	8001674 <HAL_GetTick>
 800145e:	1b43      	subs	r3, r0, r5
 8001460:	2b05      	cmp	r3, #5
 8001462:	d9f5      	bls.n	8001450 <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001464:	2320      	movs	r3, #32
 8001466:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8001468:	2003      	movs	r0, #3
 800146a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800146e:	2300      	movs	r3, #0
 8001470:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8001474:	e7d4      	b.n	8001420 <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001476:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001478:	2b00      	cmp	r3, #0
 800147a:	d1df      	bne.n	800143c <HAL_DMA_Abort+0x3c>
 800147c:	e7e3      	b.n	8001446 <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800147e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001480:	233f      	movs	r3, #63	; 0x3f
 8001482:	4093      	lsls	r3, r2
 8001484:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8001486:	2301      	movs	r3, #1
 8001488:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800148c:	2000      	movs	r0, #0
 800148e:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 8001492:	e7c5      	b.n	8001420 <HAL_DMA_Abort+0x20>

08001494 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001494:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8001498:	b2db      	uxtb	r3, r3
 800149a:	2b02      	cmp	r3, #2
 800149c:	d003      	beq.n	80014a6 <HAL_DMA_Abort_IT+0x12>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800149e:	2380      	movs	r3, #128	; 0x80
 80014a0:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80014a2:	2001      	movs	r0, #1
 80014a4:	4770      	bx	lr
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80014a6:	2305      	movs	r3, #5
 80014a8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80014ac:	6802      	ldr	r2, [r0, #0]
 80014ae:	6813      	ldr	r3, [r2, #0]
 80014b0:	f023 0301 	bic.w	r3, r3, #1
 80014b4:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 80014b6:	2000      	movs	r0, #0
}
 80014b8:	4770      	bx	lr
	...

080014bc <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80014bc:	b510      	push	{r4, lr}
 80014be:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80014c0:	1ec3      	subs	r3, r0, #3
 80014c2:	2b04      	cmp	r3, #4
 80014c4:	d80f      	bhi.n	80014e6 <HAL_NVIC_SetPriorityGrouping+0x2a>
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80014c6:	4a0a      	ldr	r2, [pc, #40]	; (80014f0 <HAL_NVIC_SetPriorityGrouping+0x34>)
 80014c8:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80014ca:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80014ce:	041b      	lsls	r3, r3, #16
 80014d0:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80014d2:	0224      	lsls	r4, r4, #8
 80014d4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80014d8:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 80014da:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80014de:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80014e2:	60d3      	str	r3, [r2, #12]
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80014e4:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80014e6:	2190      	movs	r1, #144	; 0x90
 80014e8:	4802      	ldr	r0, [pc, #8]	; (80014f4 <HAL_NVIC_SetPriorityGrouping+0x38>)
 80014ea:	f7ff f91d 	bl	8000728 <assert_failed>
 80014ee:	e7ea      	b.n	80014c6 <HAL_NVIC_SetPriorityGrouping+0xa>
 80014f0:	e000ed00 	and	lr, r0, r0, lsl #26
 80014f4:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}

080014f8 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80014f8:	b570      	push	{r4, r5, r6, lr}
 80014fa:	4605      	mov	r5, r0
 80014fc:	460c      	mov	r4, r1
 80014fe:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00U;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001500:	2a0f      	cmp	r2, #15
 8001502:	d825      	bhi.n	8001550 <HAL_NVIC_SetPriority+0x58>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 8001504:	2c0f      	cmp	r4, #15
 8001506:	d828      	bhi.n	800155a <HAL_NVIC_SetPriority+0x62>
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001508:	4b1b      	ldr	r3, [pc, #108]	; (8001578 <HAL_NVIC_SetPriority+0x80>)
 800150a:	68db      	ldr	r3, [r3, #12]
 800150c:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001510:	f1c3 0107 	rsb	r1, r3, #7
 8001514:	2904      	cmp	r1, #4
 8001516:	bf28      	it	cs
 8001518:	2104      	movcs	r1, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800151a:	1d1a      	adds	r2, r3, #4
 800151c:	2a06      	cmp	r2, #6
 800151e:	d921      	bls.n	8001564 <HAL_NVIC_SetPriority+0x6c>
 8001520:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001522:	f04f 32ff 	mov.w	r2, #4294967295
 8001526:	fa02 f101 	lsl.w	r1, r2, r1
 800152a:	ea24 0401 	bic.w	r4, r4, r1
 800152e:	409c      	lsls	r4, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001530:	fa02 f303 	lsl.w	r3, r2, r3
 8001534:	ea26 0603 	bic.w	r6, r6, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001538:	4334      	orrs	r4, r6
  if ((int32_t)(IRQn) >= 0)
 800153a:	2d00      	cmp	r5, #0
 800153c:	db14      	blt.n	8001568 <HAL_NVIC_SetPriority+0x70>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800153e:	0124      	lsls	r4, r4, #4
 8001540:	b2e4      	uxtb	r4, r4
 8001542:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 8001546:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 800154a:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800154e:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001550:	21a8      	movs	r1, #168	; 0xa8
 8001552:	480a      	ldr	r0, [pc, #40]	; (800157c <HAL_NVIC_SetPriority+0x84>)
 8001554:	f7ff f8e8 	bl	8000728 <assert_failed>
 8001558:	e7d4      	b.n	8001504 <HAL_NVIC_SetPriority+0xc>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 800155a:	21a9      	movs	r1, #169	; 0xa9
 800155c:	4807      	ldr	r0, [pc, #28]	; (800157c <HAL_NVIC_SetPriority+0x84>)
 800155e:	f7ff f8e3 	bl	8000728 <assert_failed>
 8001562:	e7d1      	b.n	8001508 <HAL_NVIC_SetPriority+0x10>
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001564:	2300      	movs	r3, #0
 8001566:	e7dc      	b.n	8001522 <HAL_NVIC_SetPriority+0x2a>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001568:	f005 050f 	and.w	r5, r5, #15
 800156c:	0124      	lsls	r4, r4, #4
 800156e:	b2e4      	uxtb	r4, r4
 8001570:	4b03      	ldr	r3, [pc, #12]	; (8001580 <HAL_NVIC_SetPriority+0x88>)
 8001572:	555c      	strb	r4, [r3, r5]
}
 8001574:	e7eb      	b.n	800154e <HAL_NVIC_SetPriority+0x56>
 8001576:	bf00      	nop
 8001578:	e000ed00 	and	lr, r0, r0, lsl #26
 800157c:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}
 8001580:	e000ed14 	and	lr, r0, r4, lsl sp

08001584 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001584:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 8001586:	1e04      	subs	r4, r0, #0
 8001588:	db0a      	blt.n	80015a0 <HAL_NVIC_EnableIRQ+0x1c>
  if ((int32_t)(IRQn) >= 0)
 800158a:	2c00      	cmp	r4, #0
 800158c:	db07      	blt.n	800159e <HAL_NVIC_EnableIRQ+0x1a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800158e:	f004 021f 	and.w	r2, r4, #31
 8001592:	0964      	lsrs	r4, r4, #5
 8001594:	2301      	movs	r3, #1
 8001596:	4093      	lsls	r3, r2
 8001598:	4a04      	ldr	r2, [pc, #16]	; (80015ac <HAL_NVIC_EnableIRQ+0x28>)
 800159a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800159e:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 80015a0:	21bc      	movs	r1, #188	; 0xbc
 80015a2:	4803      	ldr	r0, [pc, #12]	; (80015b0 <HAL_NVIC_EnableIRQ+0x2c>)
 80015a4:	f7ff f8c0 	bl	8000728 <assert_failed>
 80015a8:	e7ef      	b.n	800158a <HAL_NVIC_EnableIRQ+0x6>
 80015aa:	bf00      	nop
 80015ac:	e000e100 	and	lr, r0, r0, lsl #2
 80015b0:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}

080015b4 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80015b4:	3801      	subs	r0, #1
 80015b6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80015ba:	d20b      	bcs.n	80015d4 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80015bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80015c0:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80015c2:	4a05      	ldr	r2, [pc, #20]	; (80015d8 <HAL_SYSTICK_Config+0x24>)
 80015c4:	21f0      	movs	r1, #240	; 0xf0
 80015c6:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80015ca:	2000      	movs	r0, #0
 80015cc:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80015ce:	2207      	movs	r2, #7
 80015d0:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80015d2:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80015d4:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80015d6:	4770      	bx	lr
 80015d8:	e000ed00 	and	lr, r0, r0, lsl #26

080015dc <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80015dc:	b510      	push	{r4, lr}
 80015de:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80015e0:	4b0e      	ldr	r3, [pc, #56]	; (800161c <HAL_InitTick+0x40>)
 80015e2:	7818      	ldrb	r0, [r3, #0]
 80015e4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80015e8:	fbb3 f3f0 	udiv	r3, r3, r0
 80015ec:	4a0c      	ldr	r2, [pc, #48]	; (8001620 <HAL_InitTick+0x44>)
 80015ee:	6810      	ldr	r0, [r2, #0]
 80015f0:	fbb0 f0f3 	udiv	r0, r0, r3
 80015f4:	f7ff ffde 	bl	80015b4 <HAL_SYSTICK_Config>
 80015f8:	b968      	cbnz	r0, 8001616 <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80015fa:	2c0f      	cmp	r4, #15
 80015fc:	d901      	bls.n	8001602 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 80015fe:	2001      	movs	r0, #1
 8001600:	e00a      	b.n	8001618 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001602:	2200      	movs	r2, #0
 8001604:	4621      	mov	r1, r4
 8001606:	f04f 30ff 	mov.w	r0, #4294967295
 800160a:	f7ff ff75 	bl	80014f8 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800160e:	4b05      	ldr	r3, [pc, #20]	; (8001624 <HAL_InitTick+0x48>)
 8001610:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8001612:	2000      	movs	r0, #0
 8001614:	e000      	b.n	8001618 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 8001616:	2001      	movs	r0, #1
}
 8001618:	bd10      	pop	{r4, pc}
 800161a:	bf00      	nop
 800161c:	20000000 	andcs	r0, r0, r0
 8001620:	20000008 	andcs	r0, r0, r8
 8001624:	20000004 	andcs	r0, r0, r4

08001628 <HAL_Init>:
{
 8001628:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800162a:	4b0b      	ldr	r3, [pc, #44]	; (8001658 <HAL_Init+0x30>)
 800162c:	681a      	ldr	r2, [r3, #0]
 800162e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001632:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001634:	681a      	ldr	r2, [r3, #0]
 8001636:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800163a:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800163c:	681a      	ldr	r2, [r3, #0]
 800163e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001642:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001644:	2003      	movs	r0, #3
 8001646:	f7ff ff39 	bl	80014bc <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 800164a:	200f      	movs	r0, #15
 800164c:	f7ff ffc6 	bl	80015dc <HAL_InitTick>
  HAL_MspInit();
 8001650:	f7ff f8f6 	bl	8000840 <HAL_MspInit>
}
 8001654:	2000      	movs	r0, #0
 8001656:	bd08      	pop	{r3, pc}
 8001658:	40023c00 	andmi	r3, r2, r0, lsl #24

0800165c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800165c:	4a03      	ldr	r2, [pc, #12]	; (800166c <HAL_IncTick+0x10>)
 800165e:	6811      	ldr	r1, [r2, #0]
 8001660:	4b03      	ldr	r3, [pc, #12]	; (8001670 <HAL_IncTick+0x14>)
 8001662:	781b      	ldrb	r3, [r3, #0]
 8001664:	440b      	add	r3, r1
 8001666:	6013      	str	r3, [r2, #0]
}
 8001668:	4770      	bx	lr
 800166a:	bf00      	nop
 800166c:	200000dc 	ldrdcs	r0, [r0], -ip
 8001670:	20000000 	andcs	r0, r0, r0

08001674 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001674:	4b01      	ldr	r3, [pc, #4]	; (800167c <HAL_GetTick+0x8>)
 8001676:	6818      	ldr	r0, [r3, #0]
}
 8001678:	4770      	bx	lr
 800167a:	bf00      	nop
 800167c:	200000dc 	ldrdcs	r0, [r0], -ip

08001680 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001680:	b538      	push	{r3, r4, r5, lr}
 8001682:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001684:	f7ff fff6 	bl	8001674 <HAL_GetTick>
 8001688:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800168a:	f1b4 3fff 	cmp.w	r4, #4294967295
 800168e:	d002      	beq.n	8001696 <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8001690:	4b04      	ldr	r3, [pc, #16]	; (80016a4 <HAL_Delay+0x24>)
 8001692:	781b      	ldrb	r3, [r3, #0]
 8001694:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8001696:	f7ff ffed 	bl	8001674 <HAL_GetTick>
 800169a:	1b40      	subs	r0, r0, r5
 800169c:	42a0      	cmp	r0, r4
 800169e:	d3fa      	bcc.n	8001696 <HAL_Delay+0x16>
  {
  }
}
 80016a0:	bd38      	pop	{r3, r4, r5, pc}
 80016a2:	bf00      	nop
 80016a4:	20000000 	andcs	r0, r0, r0

080016a8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80016a8:	4a03      	ldr	r2, [pc, #12]	; (80016b8 <SystemInit+0x10>)
 80016aa:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80016ae:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80016b2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80016b6:	4770      	bx	lr
 80016b8:	e000ed00 	and	lr, r0, r0, lsl #26

080016bc <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
 80016bc:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
 80016be:	2300      	movs	r3, #0
 80016c0:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80016c2:	e007      	b.n	80016d4 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
 80016c4:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80016c8:	aa02      	add	r2, sp, #8
 80016ca:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80016ce:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80016d2:	3301      	adds	r3, #1
 80016d4:	2b01      	cmp	r3, #1
 80016d6:	d9f5      	bls.n	80016c4 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
 80016d8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
 80016dc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
 80016e0:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80016e4:	b002      	add	sp, #8
 80016e6:	4770      	bx	lr

080016e8 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80016e8:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80016ec:	0c00      	lsrs	r0, r0, #16
 80016ee:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
 80016f2:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 80016f6:	d00a      	beq.n	800170e <opcode_is_bl_or_blx+0x26>
 80016f8:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 80016fc:	d009      	beq.n	8001712 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
 80016fe:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
 8001702:	d008      	beq.n	8001716 <opcode_is_bl_or_blx+0x2e>
 8001704:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
 8001708:	d007      	beq.n	800171a <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
 800170a:	2000      	movs	r0, #0
 800170c:	4770      	bx	lr
        return true;
 800170e:	2001      	movs	r0, #1
 8001710:	4770      	bx	lr
 8001712:	2001      	movs	r0, #1
 8001714:	4770      	bx	lr
        return true;
 8001716:	2001      	movs	r0, #1
 8001718:	4770      	bx	lr
 800171a:	2001      	movs	r0, #1
}
 800171c:	4770      	bx	lr
	...

08001720 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
 8001720:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
 8001724:	b348      	cbz	r0, 800177a <fault_dump_callstack+0x5a>
 8001726:	460f      	mov	r7, r1
 8001728:	4614      	mov	r4, r2
 800172a:	461d      	mov	r5, r3
 800172c:	4680      	mov	r8, r0
 800172e:	b339      	cbz	r1, 8001780 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
 8001730:	b34a      	cbz	r2, 8001786 <fault_dump_callstack+0x66>
 8001732:	429a      	cmp	r2, r3
 8001734:	d82a      	bhi.n	800178c <fault_dump_callstack+0x6c>
    int count = 0;
 8001736:	2600      	movs	r6, #0
 8001738:	e000      	b.n	800173c <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
 800173a:	3404      	adds	r4, #4
 800173c:	b1d4      	cbz	r4, 8001774 <fault_dump_callstack+0x54>
 800173e:	42ac      	cmp	r4, r5
 8001740:	d818      	bhi.n	8001774 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
 8001742:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
 8001744:	4813      	ldr	r0, [pc, #76]	; (8001794 <fault_dump_callstack+0x74>)
 8001746:	4290      	cmp	r0, r2
 8001748:	d8f7      	bhi.n	800173a <fault_dump_callstack+0x1a>
 800174a:	4b13      	ldr	r3, [pc, #76]	; (8001798 <fault_dump_callstack+0x78>)
 800174c:	4293      	cmp	r3, r2
 800174e:	d3f4      	bcc.n	800173a <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
 8001750:	f012 0f01 	tst.w	r2, #1
 8001754:	d0f1      	beq.n	800173a <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
 8001756:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
 800175a:	d0ee      	beq.n	800173a <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
 800175c:	4648      	mov	r0, r9
 800175e:	f7ff ffad 	bl	80016bc <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
 8001762:	f7ff ffc1 	bl	80016e8 <opcode_is_bl_or_blx>
 8001766:	2800      	cmp	r0, #0
 8001768:	d0e7      	beq.n	800173a <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
 800176a:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
 800176e:	3601      	adds	r6, #1
        if (count >= size) {
 8001770:	42be      	cmp	r6, r7
 8001772:	d3e2      	bcc.n	800173a <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
 8001774:	4630      	mov	r0, r6
 8001776:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
 800177a:	f06f 0601 	mvn.w	r6, #1
 800177e:	e7f9      	b.n	8001774 <fault_dump_callstack+0x54>
 8001780:	f06f 0601 	mvn.w	r6, #1
 8001784:	e7f6      	b.n	8001774 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
 8001786:	f06f 0602 	mvn.w	r6, #2
 800178a:	e7f3      	b.n	8001774 <fault_dump_callstack+0x54>
 800178c:	f06f 0602 	mvn.w	r6, #2
 8001790:	e7f0      	b.n	8001774 <fault_dump_callstack+0x54>
 8001792:	bf00      	nop
 8001794:	08000190 	stmdaeq	r0, {r4, r7, r8}
 8001798:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}

0800179c <dump_exc_return>:
static void dump_exc_return(unsigned int exc_return) {
 800179c:	b510      	push	{r4, lr}
 800179e:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
 80017a0:	4601      	mov	r1, r0
 80017a2:	4803      	ldr	r0, [pc, #12]	; (80017b0 <dump_exc_return+0x14>)
 80017a4:	f000 fa24 	bl	8001bf0 <iprintf>
    fault_dump_exc_return(exc_return);
 80017a8:	4620      	mov	r0, r4
 80017aa:	f000 f905 	bl	80019b8 <fault_dump_exc_return>
}
 80017ae:	bd10      	pop	{r4, pc}
 80017b0:	08002d84 	stmdaeq	r0, {r2, r7, r8, sl, fp, sp}

080017b4 <stack_using_msp>:
static bool stack_using_msp(unsigned int exc_return) {
 80017b4:	b508      	push	{r3, lr}
    result = fault_dump_using_msp(exc_return);
 80017b6:	f000 f943 	bl	8001a40 <fault_dump_using_msp>
}
 80017ba:	bd08      	pop	{r3, pc}

080017bc <fault_dump_init>:
void fault_dump_init(void) {
 80017bc:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
 80017be:	490a      	ldr	r1, [pc, #40]	; (80017e8 <fault_dump_init+0x2c>)
 80017c0:	4b0a      	ldr	r3, [pc, #40]	; (80017ec <fault_dump_init+0x30>)
 80017c2:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
 80017c4:	4a0a      	ldr	r2, [pc, #40]	; (80017f0 <fault_dump_init+0x34>)
 80017c6:	4b0b      	ldr	r3, [pc, #44]	; (80017f4 <fault_dump_init+0x38>)
 80017c8:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
 80017ca:	1a53      	subs	r3, r2, r1
 80017cc:	480a      	ldr	r0, [pc, #40]	; (80017f8 <fault_dump_init+0x3c>)
 80017ce:	f000 fa0f 	bl	8001bf0 <iprintf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
 80017d2:	490a      	ldr	r1, [pc, #40]	; (80017fc <fault_dump_init+0x40>)
 80017d4:	4a0a      	ldr	r2, [pc, #40]	; (8001800 <fault_dump_init+0x44>)
 80017d6:	1a53      	subs	r3, r2, r1
 80017d8:	480a      	ldr	r0, [pc, #40]	; (8001804 <fault_dump_init+0x48>)
 80017da:	f000 fa09 	bl	8001bf0 <iprintf>
    printf("Code Stack Growth Downward:%d\r\n", 
 80017de:	2101      	movs	r1, #1
 80017e0:	4809      	ldr	r0, [pc, #36]	; (8001808 <fault_dump_init+0x4c>)
 80017e2:	f000 fa05 	bl	8001bf0 <iprintf>
}
 80017e6:	bd08      	pop	{r3, pc}
 80017e8:	20000a40 	andcs	r0, r0, r0, asr #20
 80017ec:	200001e0 	andcs	r0, r0, r0, ror #3
 80017f0:	20001240 	andcs	r1, r0, r0, asr #4
 80017f4:	200001e4 	andcs	r0, r0, r4, ror #3
 80017f8:	08002d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp, sp}
 80017fc:	08000190 	stmdaeq	r0, {r4, r7, r8}
 8001800:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}
 8001804:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
 8001808:	08002de4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, fp, sp}

0800180c <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
 800180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800180e:	4605      	mov	r5, r0
 8001810:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
 8001812:	6803      	ldr	r3, [r0, #0]
 8001814:	4c4e      	ldr	r4, [pc, #312]	; (8001950 <fault_dump_handler+0x144>)
 8001816:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
 8001818:	6843      	ldr	r3, [r0, #4]
 800181a:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
 800181c:	6883      	ldr	r3, [r0, #8]
 800181e:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
 8001820:	68c3      	ldr	r3, [r0, #12]
 8001822:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
 8001824:	6903      	ldr	r3, [r0, #16]
 8001826:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
 8001828:	6943      	ldr	r3, [r0, #20]
 800182a:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
 800182c:	6983      	ldr	r3, [r0, #24]
 800182e:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
 8001830:	69c3      	ldr	r3, [r0, #28]
 8001832:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
 8001834:	6a03      	ldr	r3, [r0, #32]
 8001836:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
 8001838:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800183a:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
 800183c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800183e:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
 8001840:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001842:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
 8001844:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001846:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
 8001848:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800184a:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
 800184c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800184e:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
 8001850:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8001852:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
 8001854:	4f3f      	ldr	r7, [pc, #252]	; (8001954 <fault_dump_handler+0x148>)
 8001856:	4638      	mov	r0, r7
 8001858:	f000 fa50 	bl	8001cfc <puts>
    printf(" HardFault Information Dump \r\n");
 800185c:	483e      	ldr	r0, [pc, #248]	; (8001958 <fault_dump_handler+0x14c>)
 800185e:	f000 fa4d 	bl	8001cfc <puts>
    printf(" Stack Frame   \r\n");
 8001862:	483e      	ldr	r0, [pc, #248]	; (800195c <fault_dump_handler+0x150>)
 8001864:	f000 fa4a 	bl	8001cfc <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
 8001868:	6a21      	ldr	r1, [r4, #32]
 800186a:	483d      	ldr	r0, [pc, #244]	; (8001960 <fault_dump_handler+0x154>)
 800186c:	f000 f9c0 	bl	8001bf0 <iprintf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
 8001870:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001872:	483c      	ldr	r0, [pc, #240]	; (8001964 <fault_dump_handler+0x158>)
 8001874:	f000 f9bc 	bl	8001bf0 <iprintf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
 8001878:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800187a:	483b      	ldr	r0, [pc, #236]	; (8001968 <fault_dump_handler+0x15c>)
 800187c:	f000 f9b8 	bl	8001bf0 <iprintf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
 8001880:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001882:	483a      	ldr	r0, [pc, #232]	; (800196c <fault_dump_handler+0x160>)
 8001884:	f000 f9b4 	bl	8001bf0 <iprintf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
 8001888:	6821      	ldr	r1, [r4, #0]
 800188a:	4839      	ldr	r0, [pc, #228]	; (8001970 <fault_dump_handler+0x164>)
 800188c:	f000 f9b0 	bl	8001bf0 <iprintf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
 8001890:	6861      	ldr	r1, [r4, #4]
 8001892:	4838      	ldr	r0, [pc, #224]	; (8001974 <fault_dump_handler+0x168>)
 8001894:	f000 f9ac 	bl	8001bf0 <iprintf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
 8001898:	68a1      	ldr	r1, [r4, #8]
 800189a:	4837      	ldr	r0, [pc, #220]	; (8001978 <fault_dump_handler+0x16c>)
 800189c:	f000 f9a8 	bl	8001bf0 <iprintf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
 80018a0:	68e1      	ldr	r1, [r4, #12]
 80018a2:	4836      	ldr	r0, [pc, #216]	; (800197c <fault_dump_handler+0x170>)
 80018a4:	f000 f9a4 	bl	8001bf0 <iprintf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
 80018a8:	6921      	ldr	r1, [r4, #16]
 80018aa:	4835      	ldr	r0, [pc, #212]	; (8001980 <fault_dump_handler+0x174>)
 80018ac:	f000 f9a0 	bl	8001bf0 <iprintf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
 80018b0:	6961      	ldr	r1, [r4, #20]
 80018b2:	4834      	ldr	r0, [pc, #208]	; (8001984 <fault_dump_handler+0x178>)
 80018b4:	f000 f99c 	bl	8001bf0 <iprintf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
 80018b8:	69a1      	ldr	r1, [r4, #24]
 80018ba:	4833      	ldr	r0, [pc, #204]	; (8001988 <fault_dump_handler+0x17c>)
 80018bc:	f000 f998 	bl	8001bf0 <iprintf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
 80018c0:	69e1      	ldr	r1, [r4, #28]
 80018c2:	4832      	ldr	r0, [pc, #200]	; (800198c <fault_dump_handler+0x180>)
 80018c4:	f000 f994 	bl	8001bf0 <iprintf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
 80018c8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80018ca:	4831      	ldr	r0, [pc, #196]	; (8001990 <fault_dump_handler+0x184>)
 80018cc:	f000 f990 	bl	8001bf0 <iprintf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
 80018d0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80018d2:	4830      	ldr	r0, [pc, #192]	; (8001994 <fault_dump_handler+0x188>)
 80018d4:	f000 f98c 	bl	8001bf0 <iprintf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
 80018d8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80018da:	482f      	ldr	r0, [pc, #188]	; (8001998 <fault_dump_handler+0x18c>)
 80018dc:	f000 f988 	bl	8001bf0 <iprintf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
 80018e0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80018e2:	482e      	ldr	r0, [pc, #184]	; (800199c <fault_dump_handler+0x190>)
 80018e4:	f000 f984 	bl	8001bf0 <iprintf>
    printf("\r\n");
 80018e8:	4638      	mov	r0, r7
 80018ea:	f000 fa07 	bl	8001cfc <puts>
    dump_exc_return(linker);
 80018ee:	4630      	mov	r0, r6
 80018f0:	f7ff ff54 	bl	800179c <dump_exc_return>
    if (stack_using_msp(linker)) {
 80018f4:	4630      	mov	r0, r6
 80018f6:	f7ff ff5d 	bl	80017b4 <stack_using_msp>
 80018fa:	b190      	cbz	r0, 8001922 <fault_dump_handler+0x116>
        count = fd_msp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, 
 80018fc:	4b28      	ldr	r3, [pc, #160]	; (80019a0 <fault_dump_handler+0x194>)
 80018fe:	681c      	ldr	r4, [r3, #0]
 8001900:	4b28      	ldr	r3, [pc, #160]	; (80019a4 <fault_dump_handler+0x198>)
 8001902:	f105 0240 	add.w	r2, r5, #64	; 0x40
 8001906:	2140      	movs	r1, #64	; 0x40
 8001908:	4827      	ldr	r0, [pc, #156]	; (80019a8 <fault_dump_handler+0x19c>)
 800190a:	47a0      	blx	r4
 800190c:	4605      	mov	r5, r0
    printf(" Stack Call: ");
 800190e:	4827      	ldr	r0, [pc, #156]	; (80019ac <fault_dump_handler+0x1a0>)
 8001910:	f000 f96e 	bl	8001bf0 <iprintf>
    printf("%08X ", (unsigned int)frame.except.pc);
 8001914:	4b0e      	ldr	r3, [pc, #56]	; (8001950 <fault_dump_handler+0x144>)
 8001916:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8001918:	4825      	ldr	r0, [pc, #148]	; (80019b0 <fault_dump_handler+0x1a4>)
 800191a:	f000 f969 	bl	8001bf0 <iprintf>
    for (index = 0; index < count; index++) {
 800191e:	2400      	movs	r4, #0
 8001920:	e00f      	b.n	8001942 <fault_dump_handler+0x136>
        count = fd_psp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, stack, NULL);
 8001922:	4b24      	ldr	r3, [pc, #144]	; (80019b4 <fault_dump_handler+0x1a8>)
 8001924:	681c      	ldr	r4, [r3, #0]
 8001926:	2300      	movs	r3, #0
 8001928:	462a      	mov	r2, r5
 800192a:	2140      	movs	r1, #64	; 0x40
 800192c:	481e      	ldr	r0, [pc, #120]	; (80019a8 <fault_dump_handler+0x19c>)
 800192e:	47a0      	blx	r4
 8001930:	4605      	mov	r5, r0
 8001932:	e7ec      	b.n	800190e <fault_dump_handler+0x102>
        printf("%08X ", buffer[index]);
 8001934:	4b1c      	ldr	r3, [pc, #112]	; (80019a8 <fault_dump_handler+0x19c>)
 8001936:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800193a:	481d      	ldr	r0, [pc, #116]	; (80019b0 <fault_dump_handler+0x1a4>)
 800193c:	f000 f958 	bl	8001bf0 <iprintf>
    for (index = 0; index < count; index++) {
 8001940:	3401      	adds	r4, #1
 8001942:	42a5      	cmp	r5, r4
 8001944:	dcf6      	bgt.n	8001934 <fault_dump_handler+0x128>
    printf("\r\n");
 8001946:	4803      	ldr	r0, [pc, #12]	; (8001954 <fault_dump_handler+0x148>)
 8001948:	f000 f9d8 	bl	8001cfc <puts>
    while (1);
 800194c:	e7fe      	b.n	800194c <fault_dump_handler+0x140>
 800194e:	bf00      	nop
 8001950:	200001e8 	andcs	r0, r0, r8, ror #3
 8001954:	08002e20 	stmdaeq	r0, {r5, r9, sl, fp, sp}
 8001958:	08002e04 	stmdaeq	r0, {r2, r9, sl, fp, sp}
 800195c:	08002e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, sp}
 8001960:	08002e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, sp}
 8001964:	08002e4c 	stmdaeq	r0, {r2, r3, r6, r9, sl, fp, sp}
 8001968:	08002e60 	stmdaeq	r0, {r5, r6, r9, sl, fp, sp}
 800196c:	08002e74 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, fp, sp}
 8001970:	08002e88 	stmdaeq	r0, {r3, r7, r9, sl, fp, sp}
 8001974:	08002e9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, fp, sp}
 8001978:	08002eb0 	stmdaeq	r0, {r4, r5, r7, r9, sl, fp, sp}
 800197c:	08002ec4 	stmdaeq	r0, {r2, r6, r7, r9, sl, fp, sp}
 8001980:	08002ed8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, fp, sp}
 8001984:	08002eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, sp}
 8001988:	08002f00 	stmdaeq	r0, {r8, r9, sl, fp, sp}
 800198c:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 8001990:	08002f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, sp}
 8001994:	08002f3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl, fp, sp}
 8001998:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
 800199c:	08002f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, sp}
 80019a0:	2000000c 	andcs	r0, r0, ip
 80019a4:	20001240 	andcs	r1, r0, r0, asr #4
 80019a8:	200000e0 	andcs	r0, r0, r0, ror #1
 80019ac:	08002f78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, fp, sp}
 80019b0:	08002f88 	stmdaeq	r0, {r3, r7, r8, r9, sl, fp, sp}
 80019b4:	20000010 	andcs	r0, r0, r0, lsl r0

080019b8 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
 80019b8:	b510      	push	{r4, lr}
 80019ba:	4604      	mov	r4, r0
    printf(" \r\n");
 80019bc:	4816      	ldr	r0, [pc, #88]	; (8001a18 <fault_dump_exc_return+0x60>)
 80019be:	f000 f99d 	bl	8001cfc <puts>
    printf(" Bit2 Return Stack Select..:");
 80019c2:	4816      	ldr	r0, [pc, #88]	; (8001a1c <fault_dump_exc_return+0x64>)
 80019c4:	f000 f914 	bl	8001bf0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 2)) {
 80019c8:	f014 0f04 	tst.w	r4, #4
 80019cc:	d018      	beq.n	8001a00 <fault_dump_exc_return+0x48>
        printf("[Use PSP...............].\r\n");
 80019ce:	4814      	ldr	r0, [pc, #80]	; (8001a20 <fault_dump_exc_return+0x68>)
 80019d0:	f000 f994 	bl	8001cfc <puts>
    } else {
        printf("[Use MSP...............].\r\n");
    }
    printf(" Bit3 Return Mode Select...:");
 80019d4:	4813      	ldr	r0, [pc, #76]	; (8001a24 <fault_dump_exc_return+0x6c>)
 80019d6:	f000 f90b 	bl	8001bf0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 3)) {
 80019da:	f014 0f08 	tst.w	r4, #8
 80019de:	d013      	beq.n	8001a08 <fault_dump_exc_return+0x50>
        printf("[Use Thread Mode.......].\r\n");
 80019e0:	4811      	ldr	r0, [pc, #68]	; (8001a28 <fault_dump_exc_return+0x70>)
 80019e2:	f000 f98b 	bl	8001cfc <puts>
    } else {
        printf("[Use Process Mode......].\r\n");
    }
    printf(" Bit4 Stack Frame Type.....:");
 80019e6:	4811      	ldr	r0, [pc, #68]	; (8001a2c <fault_dump_exc_return+0x74>)
 80019e8:	f000 f902 	bl	8001bf0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 4)) {
 80019ec:	f014 0f10 	tst.w	r4, #16
 80019f0:	d00e      	beq.n	8001a10 <fault_dump_exc_return+0x58>
        printf("[Use 8 World Frame.....].\r\n");
 80019f2:	480f      	ldr	r0, [pc, #60]	; (8001a30 <fault_dump_exc_return+0x78>)
 80019f4:	f000 f982 	bl	8001cfc <puts>
    } else {
        printf("[Use 26 World Frame....].\r\n");
    }
    printf(" \r\n");
 80019f8:	4807      	ldr	r0, [pc, #28]	; (8001a18 <fault_dump_exc_return+0x60>)
 80019fa:	f000 f97f 	bl	8001cfc <puts>
}
 80019fe:	bd10      	pop	{r4, pc}
        printf("[Use MSP...............].\r\n");
 8001a00:	480c      	ldr	r0, [pc, #48]	; (8001a34 <fault_dump_exc_return+0x7c>)
 8001a02:	f000 f97b 	bl	8001cfc <puts>
 8001a06:	e7e5      	b.n	80019d4 <fault_dump_exc_return+0x1c>
        printf("[Use Process Mode......].\r\n");
 8001a08:	480b      	ldr	r0, [pc, #44]	; (8001a38 <fault_dump_exc_return+0x80>)
 8001a0a:	f000 f977 	bl	8001cfc <puts>
 8001a0e:	e7ea      	b.n	80019e6 <fault_dump_exc_return+0x2e>
        printf("[Use 26 World Frame....].\r\n");
 8001a10:	480a      	ldr	r0, [pc, #40]	; (8001a3c <fault_dump_exc_return+0x84>)
 8001a12:	f000 f973 	bl	8001cfc <puts>
 8001a16:	e7ef      	b.n	80019f8 <fault_dump_exc_return+0x40>
 8001a18:	08002f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp, sp}
 8001a1c:	08002f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp, sp}
 8001a20:	08002fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp, sp}
 8001a24:	08002fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp, sp}
 8001a28:	0800300c 	stmdaeq	r0, {r2, r3, ip, sp}
 8001a2c:	08003044 	stmdaeq	r0, {r2, r6, ip, sp}
 8001a30:	08003064 	stmdaeq	r0, {r2, r5, r6, ip, sp}
 8001a34:	08002fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp, sp}
 8001a38:	08003028 	stmdaeq	r0, {r3, r5, ip, sp}
 8001a3c:	08003080 	stmdaeq	r0, {r7, ip, sp}

08001a40 <fault_dump_using_msp>:

bool fault_dump_using_msp(unsigned int exc_return) {
    if (FD_CHECK_BIT(exc_return, 2)) {
 8001a40:	f010 0f04 	tst.w	r0, #4
 8001a44:	d001      	beq.n	8001a4a <fault_dump_using_msp+0xa>
        return false;
 8001a46:	2000      	movs	r0, #0
 8001a48:	4770      	bx	lr
    } else {
        return true;
 8001a4a:	2001      	movs	r0, #1
    }
}
 8001a4c:	4770      	bx	lr
	...

08001a50 <fault_dump_unalign>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("zero = %d\r\n", c);
}

void fault_dump_unalign(void) {
 8001a50:	b530      	push	{r4, r5, lr}
 8001a52:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
 8001a54:	2400      	movs	r4, #0
 8001a56:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
 8001a58:	4a0e      	ldr	r2, [pc, #56]	; (8001a94 <fault_dump_unalign+0x44>)
 8001a5a:	6953      	ldr	r3, [r2, #20]
 8001a5c:	f043 0308 	orr.w	r3, r3, #8
 8001a60:	6153      	str	r3, [r2, #20]
    addr = (int*)0x00;
    value = *addr;
 8001a62:	6823      	ldr	r3, [r4, #0]
 8001a64:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 8001a66:	9a01      	ldr	r2, [sp, #4]
 8001a68:	4d0b      	ldr	r5, [pc, #44]	; (8001a98 <fault_dump_unalign+0x48>)
 8001a6a:	4621      	mov	r1, r4
 8001a6c:	4628      	mov	r0, r5
 8001a6e:	f000 f8bf 	bl	8001bf0 <iprintf>
    addr = (int*)0x04;
    value = *addr;
 8001a72:	6863      	ldr	r3, [r4, #4]
 8001a74:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 8001a76:	9a01      	ldr	r2, [sp, #4]
 8001a78:	2104      	movs	r1, #4
 8001a7a:	4628      	mov	r0, r5
 8001a7c:	f000 f8b8 	bl	8001bf0 <iprintf>
    addr = (int*)0x03;
    value = *addr;
 8001a80:	f8d4 3003 	ldr.w	r3, [r4, #3]
 8001a84:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 8001a86:	9a01      	ldr	r2, [sp, #4]
 8001a88:	2103      	movs	r1, #3
 8001a8a:	4628      	mov	r0, r5
 8001a8c:	f000 f8b0 	bl	8001bf0 <iprintf>
}
 8001a90:	b003      	add	sp, #12
 8001a92:	bd30      	pop	{r4, r5, pc}
 8001a94:	e000ed00 	and	lr, r0, r0, lsl #26
 8001a98:	0800309c 	stmdaeq	r0, {r2, r3, r4, r7, ip, sp}

08001a9c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a9c:	b510      	push	{r4, lr}
 8001a9e:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001aa0:	4a0c      	ldr	r2, [pc, #48]	; (8001ad4 <_sbrk+0x38>)
 8001aa2:	490d      	ldr	r1, [pc, #52]	; (8001ad8 <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001aa4:	480d      	ldr	r0, [pc, #52]	; (8001adc <_sbrk+0x40>)
 8001aa6:	6800      	ldr	r0, [r0, #0]
 8001aa8:	b140      	cbz	r0, 8001abc <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001aaa:	480c      	ldr	r0, [pc, #48]	; (8001adc <_sbrk+0x40>)
 8001aac:	6800      	ldr	r0, [r0, #0]
 8001aae:	4403      	add	r3, r0
 8001ab0:	1a52      	subs	r2, r2, r1
 8001ab2:	4293      	cmp	r3, r2
 8001ab4:	d806      	bhi.n	8001ac4 <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8001ab6:	4a09      	ldr	r2, [pc, #36]	; (8001adc <_sbrk+0x40>)
 8001ab8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 8001aba:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 8001abc:	4807      	ldr	r0, [pc, #28]	; (8001adc <_sbrk+0x40>)
 8001abe:	4c08      	ldr	r4, [pc, #32]	; (8001ae0 <_sbrk+0x44>)
 8001ac0:	6004      	str	r4, [r0, #0]
 8001ac2:	e7f2      	b.n	8001aaa <_sbrk+0xe>
    errno = ENOMEM;
 8001ac4:	f000 f862 	bl	8001b8c <__errno>
 8001ac8:	230c      	movs	r3, #12
 8001aca:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001acc:	f04f 30ff 	mov.w	r0, #4294967295
 8001ad0:	e7f3      	b.n	8001aba <_sbrk+0x1e>
 8001ad2:	bf00      	nop
 8001ad4:	20001240 	andcs	r1, r0, r0, asr #4
 8001ad8:	00000800 	andeq	r0, r0, r0, lsl #16
 8001adc:	20000228 	andcs	r0, r0, r8, lsr #4
 8001ae0:	20000240 	andcs	r0, r0, r0, asr #4

08001ae4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ae4:	b570      	push	{r4, r5, r6, lr}
 8001ae6:	460c      	mov	r4, r1
 8001ae8:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001aea:	2500      	movs	r5, #0
 8001aec:	e006      	b.n	8001afc <_read+0x18>
  {
    *ptr++ = __io_getchar();
 8001aee:	f3af 8000 	nop.w
 8001af2:	4621      	mov	r1, r4
 8001af4:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001af8:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 8001afa:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001afc:	42b5      	cmp	r5, r6
 8001afe:	dbf6      	blt.n	8001aee <_read+0xa>
  }

  return len;
}
 8001b00:	4630      	mov	r0, r6
 8001b02:	bd70      	pop	{r4, r5, r6, pc}

08001b04 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b04:	b570      	push	{r4, r5, r6, lr}
 8001b06:	460c      	mov	r4, r1
 8001b08:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b0a:	2500      	movs	r5, #0
 8001b0c:	e004      	b.n	8001b18 <_write+0x14>
  {
    __io_putchar(*ptr++);
 8001b0e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001b12:	f7fe fd57 	bl	80005c4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b16:	3501      	adds	r5, #1
 8001b18:	42b5      	cmp	r5, r6
 8001b1a:	dbf8      	blt.n	8001b0e <_write+0xa>
  }
  return len;
}
 8001b1c:	4630      	mov	r0, r6
 8001b1e:	bd70      	pop	{r4, r5, r6, pc}

08001b20 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8001b20:	f04f 30ff 	mov.w	r0, #4294967295
 8001b24:	4770      	bx	lr

08001b26 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8001b26:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001b2a:	604b      	str	r3, [r1, #4]
  return 0;
}
 8001b2c:	2000      	movs	r0, #0
 8001b2e:	4770      	bx	lr

08001b30 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8001b30:	2001      	movs	r0, #1
 8001b32:	4770      	bx	lr

08001b34 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8001b34:	2000      	movs	r0, #0
 8001b36:	4770      	bx	lr

08001b38 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001b38:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b70 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001b3c:	f7ff fdb4 	bl	80016a8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001b40:	480c      	ldr	r0, [pc, #48]	; (8001b74 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001b42:	490d      	ldr	r1, [pc, #52]	; (8001b78 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001b44:	4a0d      	ldr	r2, [pc, #52]	; (8001b7c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001b46:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001b48:	e002      	b.n	8001b50 <LoopCopyDataInit>

08001b4a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001b4a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001b4c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001b4e:	3304      	adds	r3, #4

08001b50 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001b50:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001b52:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001b54:	d3f9      	bcc.n	8001b4a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001b56:	4a0a      	ldr	r2, [pc, #40]	; (8001b80 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001b58:	4c0a      	ldr	r4, [pc, #40]	; (8001b84 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001b5a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b5c:	e001      	b.n	8001b62 <LoopFillZerobss>

08001b5e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b5e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b60:	3204      	adds	r2, #4

08001b62 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b62:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b64:	d3fb      	bcc.n	8001b5e <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001b66:	f000 f817 	bl	8001b98 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001b6a:	f7fe fd83 	bl	8000674 <main>
  bx  lr    
 8001b6e:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001b70:	20001240 	andcs	r1, r0, r0, asr #4
  ldr r0, =_sdata
 8001b74:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 8001b78:	20000078 	andcs	r0, r0, r8, ror r0
  ldr r2, =_sidata
 8001b7c:	08003160 	stmdaeq	r0, {r5, r6, r8, ip, sp}
  ldr r2, =_sbss
 8001b80:	20000078 	andcs	r0, r0, r8, ror r0
  ldr r4, =_ebss
 8001b84:	2000023c 	andcs	r0, r0, ip, lsr r2

08001b88 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b88:	e7fe      	b.n	8001b88 <ADC_IRQHandler>
	...

08001b8c <__errno>:
 8001b8c:	4b01      	ldr	r3, [pc, #4]	; (8001b94 <__errno+0x8>)
 8001b8e:	6818      	ldr	r0, [r3, #0]
 8001b90:	4770      	bx	lr
 8001b92:	bf00      	nop
 8001b94:	20000014 	andcs	r0, r0, r4, lsl r0

08001b98 <__libc_init_array>:
 8001b98:	b570      	push	{r4, r5, r6, lr}
 8001b9a:	4d0d      	ldr	r5, [pc, #52]	; (8001bd0 <__libc_init_array+0x38>)
 8001b9c:	4c0d      	ldr	r4, [pc, #52]	; (8001bd4 <__libc_init_array+0x3c>)
 8001b9e:	1b64      	subs	r4, r4, r5
 8001ba0:	10a4      	asrs	r4, r4, #2
 8001ba2:	2600      	movs	r6, #0
 8001ba4:	42a6      	cmp	r6, r4
 8001ba6:	d109      	bne.n	8001bbc <__libc_init_array+0x24>
 8001ba8:	4d0b      	ldr	r5, [pc, #44]	; (8001bd8 <__libc_init_array+0x40>)
 8001baa:	4c0c      	ldr	r4, [pc, #48]	; (8001bdc <__libc_init_array+0x44>)
 8001bac:	f001 f824 	bl	8002bf8 <_init>
 8001bb0:	1b64      	subs	r4, r4, r5
 8001bb2:	10a4      	asrs	r4, r4, #2
 8001bb4:	2600      	movs	r6, #0
 8001bb6:	42a6      	cmp	r6, r4
 8001bb8:	d105      	bne.n	8001bc6 <__libc_init_array+0x2e>
 8001bba:	bd70      	pop	{r4, r5, r6, pc}
 8001bbc:	f855 3b04 	ldr.w	r3, [r5], #4
 8001bc0:	4798      	blx	r3
 8001bc2:	3601      	adds	r6, #1
 8001bc4:	e7ee      	b.n	8001ba4 <__libc_init_array+0xc>
 8001bc6:	f855 3b04 	ldr.w	r3, [r5], #4
 8001bca:	4798      	blx	r3
 8001bcc:	3601      	adds	r6, #1
 8001bce:	e7f2      	b.n	8001bb6 <__libc_init_array+0x1e>
 8001bd0:	08003158 	stmdaeq	r0, {r3, r4, r6, r8, ip, sp}
 8001bd4:	08003158 	stmdaeq	r0, {r3, r4, r6, r8, ip, sp}
 8001bd8:	08003158 	stmdaeq	r0, {r3, r4, r6, r8, ip, sp}
 8001bdc:	0800315c 	stmdaeq	r0, {r2, r3, r4, r6, r8, ip, sp}

08001be0 <memset>:
 8001be0:	4402      	add	r2, r0
 8001be2:	4603      	mov	r3, r0
 8001be4:	4293      	cmp	r3, r2
 8001be6:	d100      	bne.n	8001bea <memset+0xa>
 8001be8:	4770      	bx	lr
 8001bea:	f803 1b01 	strb.w	r1, [r3], #1
 8001bee:	e7f9      	b.n	8001be4 <memset+0x4>

08001bf0 <iprintf>:
 8001bf0:	b40f      	push	{r0, r1, r2, r3}
 8001bf2:	4b0a      	ldr	r3, [pc, #40]	; (8001c1c <iprintf+0x2c>)
 8001bf4:	b513      	push	{r0, r1, r4, lr}
 8001bf6:	681c      	ldr	r4, [r3, #0]
 8001bf8:	b124      	cbz	r4, 8001c04 <iprintf+0x14>
 8001bfa:	69a3      	ldr	r3, [r4, #24]
 8001bfc:	b913      	cbnz	r3, 8001c04 <iprintf+0x14>
 8001bfe:	4620      	mov	r0, r4
 8001c00:	f000 fa5e 	bl	80020c0 <__sinit>
 8001c04:	ab05      	add	r3, sp, #20
 8001c06:	9a04      	ldr	r2, [sp, #16]
 8001c08:	68a1      	ldr	r1, [r4, #8]
 8001c0a:	9301      	str	r3, [sp, #4]
 8001c0c:	4620      	mov	r0, r4
 8001c0e:	f000 fc67 	bl	80024e0 <_vfiprintf_r>
 8001c12:	b002      	add	sp, #8
 8001c14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001c18:	b004      	add	sp, #16
 8001c1a:	4770      	bx	lr
 8001c1c:	20000014 	andcs	r0, r0, r4, lsl r0

08001c20 <_puts_r>:
 8001c20:	b570      	push	{r4, r5, r6, lr}
 8001c22:	460e      	mov	r6, r1
 8001c24:	4605      	mov	r5, r0
 8001c26:	b118      	cbz	r0, 8001c30 <_puts_r+0x10>
 8001c28:	6983      	ldr	r3, [r0, #24]
 8001c2a:	b90b      	cbnz	r3, 8001c30 <_puts_r+0x10>
 8001c2c:	f000 fa48 	bl	80020c0 <__sinit>
 8001c30:	69ab      	ldr	r3, [r5, #24]
 8001c32:	68ac      	ldr	r4, [r5, #8]
 8001c34:	b913      	cbnz	r3, 8001c3c <_puts_r+0x1c>
 8001c36:	4628      	mov	r0, r5
 8001c38:	f000 fa42 	bl	80020c0 <__sinit>
 8001c3c:	4b2c      	ldr	r3, [pc, #176]	; (8001cf0 <_puts_r+0xd0>)
 8001c3e:	429c      	cmp	r4, r3
 8001c40:	d120      	bne.n	8001c84 <_puts_r+0x64>
 8001c42:	686c      	ldr	r4, [r5, #4]
 8001c44:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c46:	07db      	lsls	r3, r3, #31
 8001c48:	d405      	bmi.n	8001c56 <_puts_r+0x36>
 8001c4a:	89a3      	ldrh	r3, [r4, #12]
 8001c4c:	0598      	lsls	r0, r3, #22
 8001c4e:	d402      	bmi.n	8001c56 <_puts_r+0x36>
 8001c50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c52:	f000 fad3 	bl	80021fc <__retarget_lock_acquire_recursive>
 8001c56:	89a3      	ldrh	r3, [r4, #12]
 8001c58:	0719      	lsls	r1, r3, #28
 8001c5a:	d51d      	bpl.n	8001c98 <_puts_r+0x78>
 8001c5c:	6923      	ldr	r3, [r4, #16]
 8001c5e:	b1db      	cbz	r3, 8001c98 <_puts_r+0x78>
 8001c60:	3e01      	subs	r6, #1
 8001c62:	68a3      	ldr	r3, [r4, #8]
 8001c64:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001c68:	3b01      	subs	r3, #1
 8001c6a:	60a3      	str	r3, [r4, #8]
 8001c6c:	bb39      	cbnz	r1, 8001cbe <_puts_r+0x9e>
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	da38      	bge.n	8001ce4 <_puts_r+0xc4>
 8001c72:	4622      	mov	r2, r4
 8001c74:	210a      	movs	r1, #10
 8001c76:	4628      	mov	r0, r5
 8001c78:	f000 f848 	bl	8001d0c <__swbuf_r>
 8001c7c:	3001      	adds	r0, #1
 8001c7e:	d011      	beq.n	8001ca4 <_puts_r+0x84>
 8001c80:	250a      	movs	r5, #10
 8001c82:	e011      	b.n	8001ca8 <_puts_r+0x88>
 8001c84:	4b1b      	ldr	r3, [pc, #108]	; (8001cf4 <_puts_r+0xd4>)
 8001c86:	429c      	cmp	r4, r3
 8001c88:	d101      	bne.n	8001c8e <_puts_r+0x6e>
 8001c8a:	68ac      	ldr	r4, [r5, #8]
 8001c8c:	e7da      	b.n	8001c44 <_puts_r+0x24>
 8001c8e:	4b1a      	ldr	r3, [pc, #104]	; (8001cf8 <_puts_r+0xd8>)
 8001c90:	429c      	cmp	r4, r3
 8001c92:	bf08      	it	eq
 8001c94:	68ec      	ldreq	r4, [r5, #12]
 8001c96:	e7d5      	b.n	8001c44 <_puts_r+0x24>
 8001c98:	4621      	mov	r1, r4
 8001c9a:	4628      	mov	r0, r5
 8001c9c:	f000 f888 	bl	8001db0 <__swsetup_r>
 8001ca0:	2800      	cmp	r0, #0
 8001ca2:	d0dd      	beq.n	8001c60 <_puts_r+0x40>
 8001ca4:	f04f 35ff 	mov.w	r5, #4294967295
 8001ca8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001caa:	07da      	lsls	r2, r3, #31
 8001cac:	d405      	bmi.n	8001cba <_puts_r+0x9a>
 8001cae:	89a3      	ldrh	r3, [r4, #12]
 8001cb0:	059b      	lsls	r3, r3, #22
 8001cb2:	d402      	bmi.n	8001cba <_puts_r+0x9a>
 8001cb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001cb6:	f000 faa2 	bl	80021fe <__retarget_lock_release_recursive>
 8001cba:	4628      	mov	r0, r5
 8001cbc:	bd70      	pop	{r4, r5, r6, pc}
 8001cbe:	2b00      	cmp	r3, #0
 8001cc0:	da04      	bge.n	8001ccc <_puts_r+0xac>
 8001cc2:	69a2      	ldr	r2, [r4, #24]
 8001cc4:	429a      	cmp	r2, r3
 8001cc6:	dc06      	bgt.n	8001cd6 <_puts_r+0xb6>
 8001cc8:	290a      	cmp	r1, #10
 8001cca:	d004      	beq.n	8001cd6 <_puts_r+0xb6>
 8001ccc:	6823      	ldr	r3, [r4, #0]
 8001cce:	1c5a      	adds	r2, r3, #1
 8001cd0:	6022      	str	r2, [r4, #0]
 8001cd2:	7019      	strb	r1, [r3, #0]
 8001cd4:	e7c5      	b.n	8001c62 <_puts_r+0x42>
 8001cd6:	4622      	mov	r2, r4
 8001cd8:	4628      	mov	r0, r5
 8001cda:	f000 f817 	bl	8001d0c <__swbuf_r>
 8001cde:	3001      	adds	r0, #1
 8001ce0:	d1bf      	bne.n	8001c62 <_puts_r+0x42>
 8001ce2:	e7df      	b.n	8001ca4 <_puts_r+0x84>
 8001ce4:	6823      	ldr	r3, [r4, #0]
 8001ce6:	250a      	movs	r5, #10
 8001ce8:	1c5a      	adds	r2, r3, #1
 8001cea:	6022      	str	r2, [r4, #0]
 8001cec:	701d      	strb	r5, [r3, #0]
 8001cee:	e7db      	b.n	8001ca8 <_puts_r+0x88>
 8001cf0:	080030dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, sp}
 8001cf4:	080030fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip, sp}
 8001cf8:	080030bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip, sp}

08001cfc <puts>:
 8001cfc:	4b02      	ldr	r3, [pc, #8]	; (8001d08 <puts+0xc>)
 8001cfe:	4601      	mov	r1, r0
 8001d00:	6818      	ldr	r0, [r3, #0]
 8001d02:	f7ff bf8d 	b.w	8001c20 <_puts_r>
 8001d06:	bf00      	nop
 8001d08:	20000014 	andcs	r0, r0, r4, lsl r0

08001d0c <__swbuf_r>:
 8001d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d0e:	460e      	mov	r6, r1
 8001d10:	4614      	mov	r4, r2
 8001d12:	4605      	mov	r5, r0
 8001d14:	b118      	cbz	r0, 8001d1e <__swbuf_r+0x12>
 8001d16:	6983      	ldr	r3, [r0, #24]
 8001d18:	b90b      	cbnz	r3, 8001d1e <__swbuf_r+0x12>
 8001d1a:	f000 f9d1 	bl	80020c0 <__sinit>
 8001d1e:	4b21      	ldr	r3, [pc, #132]	; (8001da4 <__swbuf_r+0x98>)
 8001d20:	429c      	cmp	r4, r3
 8001d22:	d12b      	bne.n	8001d7c <__swbuf_r+0x70>
 8001d24:	686c      	ldr	r4, [r5, #4]
 8001d26:	69a3      	ldr	r3, [r4, #24]
 8001d28:	60a3      	str	r3, [r4, #8]
 8001d2a:	89a3      	ldrh	r3, [r4, #12]
 8001d2c:	071a      	lsls	r2, r3, #28
 8001d2e:	d52f      	bpl.n	8001d90 <__swbuf_r+0x84>
 8001d30:	6923      	ldr	r3, [r4, #16]
 8001d32:	b36b      	cbz	r3, 8001d90 <__swbuf_r+0x84>
 8001d34:	6923      	ldr	r3, [r4, #16]
 8001d36:	6820      	ldr	r0, [r4, #0]
 8001d38:	1ac0      	subs	r0, r0, r3
 8001d3a:	6963      	ldr	r3, [r4, #20]
 8001d3c:	b2f6      	uxtb	r6, r6
 8001d3e:	4283      	cmp	r3, r0
 8001d40:	4637      	mov	r7, r6
 8001d42:	dc04      	bgt.n	8001d4e <__swbuf_r+0x42>
 8001d44:	4621      	mov	r1, r4
 8001d46:	4628      	mov	r0, r5
 8001d48:	f000 f926 	bl	8001f98 <_fflush_r>
 8001d4c:	bb30      	cbnz	r0, 8001d9c <__swbuf_r+0x90>
 8001d4e:	68a3      	ldr	r3, [r4, #8]
 8001d50:	3b01      	subs	r3, #1
 8001d52:	60a3      	str	r3, [r4, #8]
 8001d54:	6823      	ldr	r3, [r4, #0]
 8001d56:	1c5a      	adds	r2, r3, #1
 8001d58:	6022      	str	r2, [r4, #0]
 8001d5a:	701e      	strb	r6, [r3, #0]
 8001d5c:	6963      	ldr	r3, [r4, #20]
 8001d5e:	3001      	adds	r0, #1
 8001d60:	4283      	cmp	r3, r0
 8001d62:	d004      	beq.n	8001d6e <__swbuf_r+0x62>
 8001d64:	89a3      	ldrh	r3, [r4, #12]
 8001d66:	07db      	lsls	r3, r3, #31
 8001d68:	d506      	bpl.n	8001d78 <__swbuf_r+0x6c>
 8001d6a:	2e0a      	cmp	r6, #10
 8001d6c:	d104      	bne.n	8001d78 <__swbuf_r+0x6c>
 8001d6e:	4621      	mov	r1, r4
 8001d70:	4628      	mov	r0, r5
 8001d72:	f000 f911 	bl	8001f98 <_fflush_r>
 8001d76:	b988      	cbnz	r0, 8001d9c <__swbuf_r+0x90>
 8001d78:	4638      	mov	r0, r7
 8001d7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001d7c:	4b0a      	ldr	r3, [pc, #40]	; (8001da8 <__swbuf_r+0x9c>)
 8001d7e:	429c      	cmp	r4, r3
 8001d80:	d101      	bne.n	8001d86 <__swbuf_r+0x7a>
 8001d82:	68ac      	ldr	r4, [r5, #8]
 8001d84:	e7cf      	b.n	8001d26 <__swbuf_r+0x1a>
 8001d86:	4b09      	ldr	r3, [pc, #36]	; (8001dac <__swbuf_r+0xa0>)
 8001d88:	429c      	cmp	r4, r3
 8001d8a:	bf08      	it	eq
 8001d8c:	68ec      	ldreq	r4, [r5, #12]
 8001d8e:	e7ca      	b.n	8001d26 <__swbuf_r+0x1a>
 8001d90:	4621      	mov	r1, r4
 8001d92:	4628      	mov	r0, r5
 8001d94:	f000 f80c 	bl	8001db0 <__swsetup_r>
 8001d98:	2800      	cmp	r0, #0
 8001d9a:	d0cb      	beq.n	8001d34 <__swbuf_r+0x28>
 8001d9c:	f04f 37ff 	mov.w	r7, #4294967295
 8001da0:	e7ea      	b.n	8001d78 <__swbuf_r+0x6c>
 8001da2:	bf00      	nop
 8001da4:	080030dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, sp}
 8001da8:	080030fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip, sp}
 8001dac:	080030bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip, sp}

08001db0 <__swsetup_r>:
 8001db0:	4b32      	ldr	r3, [pc, #200]	; (8001e7c <__swsetup_r+0xcc>)
 8001db2:	b570      	push	{r4, r5, r6, lr}
 8001db4:	681d      	ldr	r5, [r3, #0]
 8001db6:	4606      	mov	r6, r0
 8001db8:	460c      	mov	r4, r1
 8001dba:	b125      	cbz	r5, 8001dc6 <__swsetup_r+0x16>
 8001dbc:	69ab      	ldr	r3, [r5, #24]
 8001dbe:	b913      	cbnz	r3, 8001dc6 <__swsetup_r+0x16>
 8001dc0:	4628      	mov	r0, r5
 8001dc2:	f000 f97d 	bl	80020c0 <__sinit>
 8001dc6:	4b2e      	ldr	r3, [pc, #184]	; (8001e80 <__swsetup_r+0xd0>)
 8001dc8:	429c      	cmp	r4, r3
 8001dca:	d10f      	bne.n	8001dec <__swsetup_r+0x3c>
 8001dcc:	686c      	ldr	r4, [r5, #4]
 8001dce:	89a3      	ldrh	r3, [r4, #12]
 8001dd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001dd4:	0719      	lsls	r1, r3, #28
 8001dd6:	d42c      	bmi.n	8001e32 <__swsetup_r+0x82>
 8001dd8:	06dd      	lsls	r5, r3, #27
 8001dda:	d411      	bmi.n	8001e00 <__swsetup_r+0x50>
 8001ddc:	2309      	movs	r3, #9
 8001dde:	6033      	str	r3, [r6, #0]
 8001de0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001de4:	81a3      	strh	r3, [r4, #12]
 8001de6:	f04f 30ff 	mov.w	r0, #4294967295
 8001dea:	e03e      	b.n	8001e6a <__swsetup_r+0xba>
 8001dec:	4b25      	ldr	r3, [pc, #148]	; (8001e84 <__swsetup_r+0xd4>)
 8001dee:	429c      	cmp	r4, r3
 8001df0:	d101      	bne.n	8001df6 <__swsetup_r+0x46>
 8001df2:	68ac      	ldr	r4, [r5, #8]
 8001df4:	e7eb      	b.n	8001dce <__swsetup_r+0x1e>
 8001df6:	4b24      	ldr	r3, [pc, #144]	; (8001e88 <__swsetup_r+0xd8>)
 8001df8:	429c      	cmp	r4, r3
 8001dfa:	bf08      	it	eq
 8001dfc:	68ec      	ldreq	r4, [r5, #12]
 8001dfe:	e7e6      	b.n	8001dce <__swsetup_r+0x1e>
 8001e00:	0758      	lsls	r0, r3, #29
 8001e02:	d512      	bpl.n	8001e2a <__swsetup_r+0x7a>
 8001e04:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001e06:	b141      	cbz	r1, 8001e1a <__swsetup_r+0x6a>
 8001e08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001e0c:	4299      	cmp	r1, r3
 8001e0e:	d002      	beq.n	8001e16 <__swsetup_r+0x66>
 8001e10:	4630      	mov	r0, r6
 8001e12:	f000 fa5b 	bl	80022cc <_free_r>
 8001e16:	2300      	movs	r3, #0
 8001e18:	6363      	str	r3, [r4, #52]	; 0x34
 8001e1a:	89a3      	ldrh	r3, [r4, #12]
 8001e1c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001e20:	81a3      	strh	r3, [r4, #12]
 8001e22:	2300      	movs	r3, #0
 8001e24:	6063      	str	r3, [r4, #4]
 8001e26:	6923      	ldr	r3, [r4, #16]
 8001e28:	6023      	str	r3, [r4, #0]
 8001e2a:	89a3      	ldrh	r3, [r4, #12]
 8001e2c:	f043 0308 	orr.w	r3, r3, #8
 8001e30:	81a3      	strh	r3, [r4, #12]
 8001e32:	6923      	ldr	r3, [r4, #16]
 8001e34:	b94b      	cbnz	r3, 8001e4a <__swsetup_r+0x9a>
 8001e36:	89a3      	ldrh	r3, [r4, #12]
 8001e38:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001e3c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001e40:	d003      	beq.n	8001e4a <__swsetup_r+0x9a>
 8001e42:	4621      	mov	r1, r4
 8001e44:	4630      	mov	r0, r6
 8001e46:	f000 fa01 	bl	800224c <__smakebuf_r>
 8001e4a:	89a0      	ldrh	r0, [r4, #12]
 8001e4c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001e50:	f010 0301 	ands.w	r3, r0, #1
 8001e54:	d00a      	beq.n	8001e6c <__swsetup_r+0xbc>
 8001e56:	2300      	movs	r3, #0
 8001e58:	60a3      	str	r3, [r4, #8]
 8001e5a:	6963      	ldr	r3, [r4, #20]
 8001e5c:	425b      	negs	r3, r3
 8001e5e:	61a3      	str	r3, [r4, #24]
 8001e60:	6923      	ldr	r3, [r4, #16]
 8001e62:	b943      	cbnz	r3, 8001e76 <__swsetup_r+0xc6>
 8001e64:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001e68:	d1ba      	bne.n	8001de0 <__swsetup_r+0x30>
 8001e6a:	bd70      	pop	{r4, r5, r6, pc}
 8001e6c:	0781      	lsls	r1, r0, #30
 8001e6e:	bf58      	it	pl
 8001e70:	6963      	ldrpl	r3, [r4, #20]
 8001e72:	60a3      	str	r3, [r4, #8]
 8001e74:	e7f4      	b.n	8001e60 <__swsetup_r+0xb0>
 8001e76:	2000      	movs	r0, #0
 8001e78:	e7f7      	b.n	8001e6a <__swsetup_r+0xba>
 8001e7a:	bf00      	nop
 8001e7c:	20000014 	andcs	r0, r0, r4, lsl r0
 8001e80:	080030dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, sp}
 8001e84:	080030fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip, sp}
 8001e88:	080030bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip, sp}

08001e8c <__sflush_r>:
 8001e8c:	898a      	ldrh	r2, [r1, #12]
 8001e8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e92:	4605      	mov	r5, r0
 8001e94:	0710      	lsls	r0, r2, #28
 8001e96:	460c      	mov	r4, r1
 8001e98:	d458      	bmi.n	8001f4c <__sflush_r+0xc0>
 8001e9a:	684b      	ldr	r3, [r1, #4]
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	dc05      	bgt.n	8001eac <__sflush_r+0x20>
 8001ea0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	dc02      	bgt.n	8001eac <__sflush_r+0x20>
 8001ea6:	2000      	movs	r0, #0
 8001ea8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001eac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001eae:	2e00      	cmp	r6, #0
 8001eb0:	d0f9      	beq.n	8001ea6 <__sflush_r+0x1a>
 8001eb2:	2300      	movs	r3, #0
 8001eb4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001eb8:	682f      	ldr	r7, [r5, #0]
 8001eba:	602b      	str	r3, [r5, #0]
 8001ebc:	d032      	beq.n	8001f24 <__sflush_r+0x98>
 8001ebe:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001ec0:	89a3      	ldrh	r3, [r4, #12]
 8001ec2:	075a      	lsls	r2, r3, #29
 8001ec4:	d505      	bpl.n	8001ed2 <__sflush_r+0x46>
 8001ec6:	6863      	ldr	r3, [r4, #4]
 8001ec8:	1ac0      	subs	r0, r0, r3
 8001eca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001ecc:	b10b      	cbz	r3, 8001ed2 <__sflush_r+0x46>
 8001ece:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001ed0:	1ac0      	subs	r0, r0, r3
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	4602      	mov	r2, r0
 8001ed6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001ed8:	6a21      	ldr	r1, [r4, #32]
 8001eda:	4628      	mov	r0, r5
 8001edc:	47b0      	blx	r6
 8001ede:	1c43      	adds	r3, r0, #1
 8001ee0:	89a3      	ldrh	r3, [r4, #12]
 8001ee2:	d106      	bne.n	8001ef2 <__sflush_r+0x66>
 8001ee4:	6829      	ldr	r1, [r5, #0]
 8001ee6:	291d      	cmp	r1, #29
 8001ee8:	d82c      	bhi.n	8001f44 <__sflush_r+0xb8>
 8001eea:	4a2a      	ldr	r2, [pc, #168]	; (8001f94 <__sflush_r+0x108>)
 8001eec:	40ca      	lsrs	r2, r1
 8001eee:	07d6      	lsls	r6, r2, #31
 8001ef0:	d528      	bpl.n	8001f44 <__sflush_r+0xb8>
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	6062      	str	r2, [r4, #4]
 8001ef6:	04d9      	lsls	r1, r3, #19
 8001ef8:	6922      	ldr	r2, [r4, #16]
 8001efa:	6022      	str	r2, [r4, #0]
 8001efc:	d504      	bpl.n	8001f08 <__sflush_r+0x7c>
 8001efe:	1c42      	adds	r2, r0, #1
 8001f00:	d101      	bne.n	8001f06 <__sflush_r+0x7a>
 8001f02:	682b      	ldr	r3, [r5, #0]
 8001f04:	b903      	cbnz	r3, 8001f08 <__sflush_r+0x7c>
 8001f06:	6560      	str	r0, [r4, #84]	; 0x54
 8001f08:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001f0a:	602f      	str	r7, [r5, #0]
 8001f0c:	2900      	cmp	r1, #0
 8001f0e:	d0ca      	beq.n	8001ea6 <__sflush_r+0x1a>
 8001f10:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001f14:	4299      	cmp	r1, r3
 8001f16:	d002      	beq.n	8001f1e <__sflush_r+0x92>
 8001f18:	4628      	mov	r0, r5
 8001f1a:	f000 f9d7 	bl	80022cc <_free_r>
 8001f1e:	2000      	movs	r0, #0
 8001f20:	6360      	str	r0, [r4, #52]	; 0x34
 8001f22:	e7c1      	b.n	8001ea8 <__sflush_r+0x1c>
 8001f24:	6a21      	ldr	r1, [r4, #32]
 8001f26:	2301      	movs	r3, #1
 8001f28:	4628      	mov	r0, r5
 8001f2a:	47b0      	blx	r6
 8001f2c:	1c41      	adds	r1, r0, #1
 8001f2e:	d1c7      	bne.n	8001ec0 <__sflush_r+0x34>
 8001f30:	682b      	ldr	r3, [r5, #0]
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d0c4      	beq.n	8001ec0 <__sflush_r+0x34>
 8001f36:	2b1d      	cmp	r3, #29
 8001f38:	d001      	beq.n	8001f3e <__sflush_r+0xb2>
 8001f3a:	2b16      	cmp	r3, #22
 8001f3c:	d101      	bne.n	8001f42 <__sflush_r+0xb6>
 8001f3e:	602f      	str	r7, [r5, #0]
 8001f40:	e7b1      	b.n	8001ea6 <__sflush_r+0x1a>
 8001f42:	89a3      	ldrh	r3, [r4, #12]
 8001f44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f48:	81a3      	strh	r3, [r4, #12]
 8001f4a:	e7ad      	b.n	8001ea8 <__sflush_r+0x1c>
 8001f4c:	690f      	ldr	r7, [r1, #16]
 8001f4e:	2f00      	cmp	r7, #0
 8001f50:	d0a9      	beq.n	8001ea6 <__sflush_r+0x1a>
 8001f52:	0793      	lsls	r3, r2, #30
 8001f54:	680e      	ldr	r6, [r1, #0]
 8001f56:	bf08      	it	eq
 8001f58:	694b      	ldreq	r3, [r1, #20]
 8001f5a:	600f      	str	r7, [r1, #0]
 8001f5c:	bf18      	it	ne
 8001f5e:	2300      	movne	r3, #0
 8001f60:	eba6 0807 	sub.w	r8, r6, r7
 8001f64:	608b      	str	r3, [r1, #8]
 8001f66:	f1b8 0f00 	cmp.w	r8, #0
 8001f6a:	dd9c      	ble.n	8001ea6 <__sflush_r+0x1a>
 8001f6c:	6a21      	ldr	r1, [r4, #32]
 8001f6e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001f70:	4643      	mov	r3, r8
 8001f72:	463a      	mov	r2, r7
 8001f74:	4628      	mov	r0, r5
 8001f76:	47b0      	blx	r6
 8001f78:	2800      	cmp	r0, #0
 8001f7a:	dc06      	bgt.n	8001f8a <__sflush_r+0xfe>
 8001f7c:	89a3      	ldrh	r3, [r4, #12]
 8001f7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f82:	81a3      	strh	r3, [r4, #12]
 8001f84:	f04f 30ff 	mov.w	r0, #4294967295
 8001f88:	e78e      	b.n	8001ea8 <__sflush_r+0x1c>
 8001f8a:	4407      	add	r7, r0
 8001f8c:	eba8 0800 	sub.w	r8, r8, r0
 8001f90:	e7e9      	b.n	8001f66 <__sflush_r+0xda>
 8001f92:	bf00      	nop
 8001f94:	20400001 	subcs	r0, r0, r1

08001f98 <_fflush_r>:
 8001f98:	b538      	push	{r3, r4, r5, lr}
 8001f9a:	690b      	ldr	r3, [r1, #16]
 8001f9c:	4605      	mov	r5, r0
 8001f9e:	460c      	mov	r4, r1
 8001fa0:	b913      	cbnz	r3, 8001fa8 <_fflush_r+0x10>
 8001fa2:	2500      	movs	r5, #0
 8001fa4:	4628      	mov	r0, r5
 8001fa6:	bd38      	pop	{r3, r4, r5, pc}
 8001fa8:	b118      	cbz	r0, 8001fb2 <_fflush_r+0x1a>
 8001faa:	6983      	ldr	r3, [r0, #24]
 8001fac:	b90b      	cbnz	r3, 8001fb2 <_fflush_r+0x1a>
 8001fae:	f000 f887 	bl	80020c0 <__sinit>
 8001fb2:	4b14      	ldr	r3, [pc, #80]	; (8002004 <_fflush_r+0x6c>)
 8001fb4:	429c      	cmp	r4, r3
 8001fb6:	d11b      	bne.n	8001ff0 <_fflush_r+0x58>
 8001fb8:	686c      	ldr	r4, [r5, #4]
 8001fba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001fbe:	2b00      	cmp	r3, #0
 8001fc0:	d0ef      	beq.n	8001fa2 <_fflush_r+0xa>
 8001fc2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001fc4:	07d0      	lsls	r0, r2, #31
 8001fc6:	d404      	bmi.n	8001fd2 <_fflush_r+0x3a>
 8001fc8:	0599      	lsls	r1, r3, #22
 8001fca:	d402      	bmi.n	8001fd2 <_fflush_r+0x3a>
 8001fcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001fce:	f000 f915 	bl	80021fc <__retarget_lock_acquire_recursive>
 8001fd2:	4628      	mov	r0, r5
 8001fd4:	4621      	mov	r1, r4
 8001fd6:	f7ff ff59 	bl	8001e8c <__sflush_r>
 8001fda:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001fdc:	07da      	lsls	r2, r3, #31
 8001fde:	4605      	mov	r5, r0
 8001fe0:	d4e0      	bmi.n	8001fa4 <_fflush_r+0xc>
 8001fe2:	89a3      	ldrh	r3, [r4, #12]
 8001fe4:	059b      	lsls	r3, r3, #22
 8001fe6:	d4dd      	bmi.n	8001fa4 <_fflush_r+0xc>
 8001fe8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001fea:	f000 f908 	bl	80021fe <__retarget_lock_release_recursive>
 8001fee:	e7d9      	b.n	8001fa4 <_fflush_r+0xc>
 8001ff0:	4b05      	ldr	r3, [pc, #20]	; (8002008 <_fflush_r+0x70>)
 8001ff2:	429c      	cmp	r4, r3
 8001ff4:	d101      	bne.n	8001ffa <_fflush_r+0x62>
 8001ff6:	68ac      	ldr	r4, [r5, #8]
 8001ff8:	e7df      	b.n	8001fba <_fflush_r+0x22>
 8001ffa:	4b04      	ldr	r3, [pc, #16]	; (800200c <_fflush_r+0x74>)
 8001ffc:	429c      	cmp	r4, r3
 8001ffe:	bf08      	it	eq
 8002000:	68ec      	ldreq	r4, [r5, #12]
 8002002:	e7da      	b.n	8001fba <_fflush_r+0x22>
 8002004:	080030dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, sp}
 8002008:	080030fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip, sp}
 800200c:	080030bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip, sp}

08002010 <std>:
 8002010:	2300      	movs	r3, #0
 8002012:	b510      	push	{r4, lr}
 8002014:	4604      	mov	r4, r0
 8002016:	e9c0 3300 	strd	r3, r3, [r0]
 800201a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800201e:	6083      	str	r3, [r0, #8]
 8002020:	8181      	strh	r1, [r0, #12]
 8002022:	6643      	str	r3, [r0, #100]	; 0x64
 8002024:	81c2      	strh	r2, [r0, #14]
 8002026:	6183      	str	r3, [r0, #24]
 8002028:	4619      	mov	r1, r3
 800202a:	2208      	movs	r2, #8
 800202c:	305c      	adds	r0, #92	; 0x5c
 800202e:	f7ff fdd7 	bl	8001be0 <memset>
 8002032:	4b05      	ldr	r3, [pc, #20]	; (8002048 <std+0x38>)
 8002034:	6263      	str	r3, [r4, #36]	; 0x24
 8002036:	4b05      	ldr	r3, [pc, #20]	; (800204c <std+0x3c>)
 8002038:	62a3      	str	r3, [r4, #40]	; 0x28
 800203a:	4b05      	ldr	r3, [pc, #20]	; (8002050 <std+0x40>)
 800203c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800203e:	4b05      	ldr	r3, [pc, #20]	; (8002054 <std+0x44>)
 8002040:	6224      	str	r4, [r4, #32]
 8002042:	6323      	str	r3, [r4, #48]	; 0x30
 8002044:	bd10      	pop	{r4, pc}
 8002046:	bf00      	nop
 8002048:	08002a89 	stmdaeq	r0, {r0, r3, r7, r9, fp, sp}
 800204c:	08002aab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r9, fp, sp}
 8002050:	08002ae3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, fp, sp}
 8002054:	08002b07 	stmdaeq	r0, {r0, r1, r2, r8, r9, fp, sp}

08002058 <_cleanup_r>:
 8002058:	4901      	ldr	r1, [pc, #4]	; (8002060 <_cleanup_r+0x8>)
 800205a:	f000 b8af 	b.w	80021bc <_fwalk_reent>
 800205e:	bf00      	nop
 8002060:	08001f99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, ip}

08002064 <__sfmoreglue>:
 8002064:	b570      	push	{r4, r5, r6, lr}
 8002066:	2268      	movs	r2, #104	; 0x68
 8002068:	1e4d      	subs	r5, r1, #1
 800206a:	4355      	muls	r5, r2
 800206c:	460e      	mov	r6, r1
 800206e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002072:	f000 f997 	bl	80023a4 <_malloc_r>
 8002076:	4604      	mov	r4, r0
 8002078:	b140      	cbz	r0, 800208c <__sfmoreglue+0x28>
 800207a:	2100      	movs	r1, #0
 800207c:	e9c0 1600 	strd	r1, r6, [r0]
 8002080:	300c      	adds	r0, #12
 8002082:	60a0      	str	r0, [r4, #8]
 8002084:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002088:	f7ff fdaa 	bl	8001be0 <memset>
 800208c:	4620      	mov	r0, r4
 800208e:	bd70      	pop	{r4, r5, r6, pc}

08002090 <__sfp_lock_acquire>:
 8002090:	4801      	ldr	r0, [pc, #4]	; (8002098 <__sfp_lock_acquire+0x8>)
 8002092:	f000 b8b3 	b.w	80021fc <__retarget_lock_acquire_recursive>
 8002096:	bf00      	nop
 8002098:	2000022d 	andcs	r0, r0, sp, lsr #4

0800209c <__sfp_lock_release>:
 800209c:	4801      	ldr	r0, [pc, #4]	; (80020a4 <__sfp_lock_release+0x8>)
 800209e:	f000 b8ae 	b.w	80021fe <__retarget_lock_release_recursive>
 80020a2:	bf00      	nop
 80020a4:	2000022d 	andcs	r0, r0, sp, lsr #4

080020a8 <__sinit_lock_acquire>:
 80020a8:	4801      	ldr	r0, [pc, #4]	; (80020b0 <__sinit_lock_acquire+0x8>)
 80020aa:	f000 b8a7 	b.w	80021fc <__retarget_lock_acquire_recursive>
 80020ae:	bf00      	nop
 80020b0:	2000022e 	andcs	r0, r0, lr, lsr #4

080020b4 <__sinit_lock_release>:
 80020b4:	4801      	ldr	r0, [pc, #4]	; (80020bc <__sinit_lock_release+0x8>)
 80020b6:	f000 b8a2 	b.w	80021fe <__retarget_lock_release_recursive>
 80020ba:	bf00      	nop
 80020bc:	2000022e 	andcs	r0, r0, lr, lsr #4

080020c0 <__sinit>:
 80020c0:	b510      	push	{r4, lr}
 80020c2:	4604      	mov	r4, r0
 80020c4:	f7ff fff0 	bl	80020a8 <__sinit_lock_acquire>
 80020c8:	69a3      	ldr	r3, [r4, #24]
 80020ca:	b11b      	cbz	r3, 80020d4 <__sinit+0x14>
 80020cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80020d0:	f7ff bff0 	b.w	80020b4 <__sinit_lock_release>
 80020d4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80020d8:	6523      	str	r3, [r4, #80]	; 0x50
 80020da:	4b13      	ldr	r3, [pc, #76]	; (8002128 <__sinit+0x68>)
 80020dc:	4a13      	ldr	r2, [pc, #76]	; (800212c <__sinit+0x6c>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	62a2      	str	r2, [r4, #40]	; 0x28
 80020e2:	42a3      	cmp	r3, r4
 80020e4:	bf04      	itt	eq
 80020e6:	2301      	moveq	r3, #1
 80020e8:	61a3      	streq	r3, [r4, #24]
 80020ea:	4620      	mov	r0, r4
 80020ec:	f000 f820 	bl	8002130 <__sfp>
 80020f0:	6060      	str	r0, [r4, #4]
 80020f2:	4620      	mov	r0, r4
 80020f4:	f000 f81c 	bl	8002130 <__sfp>
 80020f8:	60a0      	str	r0, [r4, #8]
 80020fa:	4620      	mov	r0, r4
 80020fc:	f000 f818 	bl	8002130 <__sfp>
 8002100:	2200      	movs	r2, #0
 8002102:	60e0      	str	r0, [r4, #12]
 8002104:	2104      	movs	r1, #4
 8002106:	6860      	ldr	r0, [r4, #4]
 8002108:	f7ff ff82 	bl	8002010 <std>
 800210c:	68a0      	ldr	r0, [r4, #8]
 800210e:	2201      	movs	r2, #1
 8002110:	2109      	movs	r1, #9
 8002112:	f7ff ff7d 	bl	8002010 <std>
 8002116:	68e0      	ldr	r0, [r4, #12]
 8002118:	2202      	movs	r2, #2
 800211a:	2112      	movs	r1, #18
 800211c:	f7ff ff78 	bl	8002010 <std>
 8002120:	2301      	movs	r3, #1
 8002122:	61a3      	str	r3, [r4, #24]
 8002124:	e7d2      	b.n	80020cc <__sinit+0xc>
 8002126:	bf00      	nop
 8002128:	080030b8 	stmdaeq	r0, {r3, r4, r5, r7, ip, sp}
 800212c:	08002059 	stmdaeq	r0, {r0, r3, r4, r6, sp}

08002130 <__sfp>:
 8002130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002132:	4607      	mov	r7, r0
 8002134:	f7ff ffac 	bl	8002090 <__sfp_lock_acquire>
 8002138:	4b1e      	ldr	r3, [pc, #120]	; (80021b4 <__sfp+0x84>)
 800213a:	681e      	ldr	r6, [r3, #0]
 800213c:	69b3      	ldr	r3, [r6, #24]
 800213e:	b913      	cbnz	r3, 8002146 <__sfp+0x16>
 8002140:	4630      	mov	r0, r6
 8002142:	f7ff ffbd 	bl	80020c0 <__sinit>
 8002146:	3648      	adds	r6, #72	; 0x48
 8002148:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800214c:	3b01      	subs	r3, #1
 800214e:	d503      	bpl.n	8002158 <__sfp+0x28>
 8002150:	6833      	ldr	r3, [r6, #0]
 8002152:	b30b      	cbz	r3, 8002198 <__sfp+0x68>
 8002154:	6836      	ldr	r6, [r6, #0]
 8002156:	e7f7      	b.n	8002148 <__sfp+0x18>
 8002158:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800215c:	b9d5      	cbnz	r5, 8002194 <__sfp+0x64>
 800215e:	4b16      	ldr	r3, [pc, #88]	; (80021b8 <__sfp+0x88>)
 8002160:	60e3      	str	r3, [r4, #12]
 8002162:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002166:	6665      	str	r5, [r4, #100]	; 0x64
 8002168:	f000 f847 	bl	80021fa <__retarget_lock_init_recursive>
 800216c:	f7ff ff96 	bl	800209c <__sfp_lock_release>
 8002170:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002174:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002178:	6025      	str	r5, [r4, #0]
 800217a:	61a5      	str	r5, [r4, #24]
 800217c:	2208      	movs	r2, #8
 800217e:	4629      	mov	r1, r5
 8002180:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002184:	f7ff fd2c 	bl	8001be0 <memset>
 8002188:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800218c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002190:	4620      	mov	r0, r4
 8002192:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002194:	3468      	adds	r4, #104	; 0x68
 8002196:	e7d9      	b.n	800214c <__sfp+0x1c>
 8002198:	2104      	movs	r1, #4
 800219a:	4638      	mov	r0, r7
 800219c:	f7ff ff62 	bl	8002064 <__sfmoreglue>
 80021a0:	4604      	mov	r4, r0
 80021a2:	6030      	str	r0, [r6, #0]
 80021a4:	2800      	cmp	r0, #0
 80021a6:	d1d5      	bne.n	8002154 <__sfp+0x24>
 80021a8:	f7ff ff78 	bl	800209c <__sfp_lock_release>
 80021ac:	230c      	movs	r3, #12
 80021ae:	603b      	str	r3, [r7, #0]
 80021b0:	e7ee      	b.n	8002190 <__sfp+0x60>
 80021b2:	bf00      	nop
 80021b4:	080030b8 	stmdaeq	r0, {r3, r4, r5, r7, ip, sp}
 80021b8:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

080021bc <_fwalk_reent>:
 80021bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80021c0:	4606      	mov	r6, r0
 80021c2:	4688      	mov	r8, r1
 80021c4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80021c8:	2700      	movs	r7, #0
 80021ca:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80021ce:	f1b9 0901 	subs.w	r9, r9, #1
 80021d2:	d505      	bpl.n	80021e0 <_fwalk_reent+0x24>
 80021d4:	6824      	ldr	r4, [r4, #0]
 80021d6:	2c00      	cmp	r4, #0
 80021d8:	d1f7      	bne.n	80021ca <_fwalk_reent+0xe>
 80021da:	4638      	mov	r0, r7
 80021dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021e0:	89ab      	ldrh	r3, [r5, #12]
 80021e2:	2b01      	cmp	r3, #1
 80021e4:	d907      	bls.n	80021f6 <_fwalk_reent+0x3a>
 80021e6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021ea:	3301      	adds	r3, #1
 80021ec:	d003      	beq.n	80021f6 <_fwalk_reent+0x3a>
 80021ee:	4629      	mov	r1, r5
 80021f0:	4630      	mov	r0, r6
 80021f2:	47c0      	blx	r8
 80021f4:	4307      	orrs	r7, r0
 80021f6:	3568      	adds	r5, #104	; 0x68
 80021f8:	e7e9      	b.n	80021ce <_fwalk_reent+0x12>

080021fa <__retarget_lock_init_recursive>:
 80021fa:	4770      	bx	lr

080021fc <__retarget_lock_acquire_recursive>:
 80021fc:	4770      	bx	lr

080021fe <__retarget_lock_release_recursive>:
 80021fe:	4770      	bx	lr

08002200 <__swhatbuf_r>:
 8002200:	b570      	push	{r4, r5, r6, lr}
 8002202:	460e      	mov	r6, r1
 8002204:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002208:	2900      	cmp	r1, #0
 800220a:	b096      	sub	sp, #88	; 0x58
 800220c:	4614      	mov	r4, r2
 800220e:	461d      	mov	r5, r3
 8002210:	da08      	bge.n	8002224 <__swhatbuf_r+0x24>
 8002212:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8002216:	2200      	movs	r2, #0
 8002218:	602a      	str	r2, [r5, #0]
 800221a:	061a      	lsls	r2, r3, #24
 800221c:	d410      	bmi.n	8002240 <__swhatbuf_r+0x40>
 800221e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002222:	e00e      	b.n	8002242 <__swhatbuf_r+0x42>
 8002224:	466a      	mov	r2, sp
 8002226:	f000 fc95 	bl	8002b54 <_fstat_r>
 800222a:	2800      	cmp	r0, #0
 800222c:	dbf1      	blt.n	8002212 <__swhatbuf_r+0x12>
 800222e:	9a01      	ldr	r2, [sp, #4]
 8002230:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8002234:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8002238:	425a      	negs	r2, r3
 800223a:	415a      	adcs	r2, r3
 800223c:	602a      	str	r2, [r5, #0]
 800223e:	e7ee      	b.n	800221e <__swhatbuf_r+0x1e>
 8002240:	2340      	movs	r3, #64	; 0x40
 8002242:	2000      	movs	r0, #0
 8002244:	6023      	str	r3, [r4, #0]
 8002246:	b016      	add	sp, #88	; 0x58
 8002248:	bd70      	pop	{r4, r5, r6, pc}
	...

0800224c <__smakebuf_r>:
 800224c:	898b      	ldrh	r3, [r1, #12]
 800224e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002250:	079d      	lsls	r5, r3, #30
 8002252:	4606      	mov	r6, r0
 8002254:	460c      	mov	r4, r1
 8002256:	d507      	bpl.n	8002268 <__smakebuf_r+0x1c>
 8002258:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800225c:	6023      	str	r3, [r4, #0]
 800225e:	6123      	str	r3, [r4, #16]
 8002260:	2301      	movs	r3, #1
 8002262:	6163      	str	r3, [r4, #20]
 8002264:	b002      	add	sp, #8
 8002266:	bd70      	pop	{r4, r5, r6, pc}
 8002268:	ab01      	add	r3, sp, #4
 800226a:	466a      	mov	r2, sp
 800226c:	f7ff ffc8 	bl	8002200 <__swhatbuf_r>
 8002270:	9900      	ldr	r1, [sp, #0]
 8002272:	4605      	mov	r5, r0
 8002274:	4630      	mov	r0, r6
 8002276:	f000 f895 	bl	80023a4 <_malloc_r>
 800227a:	b948      	cbnz	r0, 8002290 <__smakebuf_r+0x44>
 800227c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002280:	059a      	lsls	r2, r3, #22
 8002282:	d4ef      	bmi.n	8002264 <__smakebuf_r+0x18>
 8002284:	f023 0303 	bic.w	r3, r3, #3
 8002288:	f043 0302 	orr.w	r3, r3, #2
 800228c:	81a3      	strh	r3, [r4, #12]
 800228e:	e7e3      	b.n	8002258 <__smakebuf_r+0xc>
 8002290:	4b0d      	ldr	r3, [pc, #52]	; (80022c8 <__smakebuf_r+0x7c>)
 8002292:	62b3      	str	r3, [r6, #40]	; 0x28
 8002294:	89a3      	ldrh	r3, [r4, #12]
 8002296:	6020      	str	r0, [r4, #0]
 8002298:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800229c:	81a3      	strh	r3, [r4, #12]
 800229e:	9b00      	ldr	r3, [sp, #0]
 80022a0:	6163      	str	r3, [r4, #20]
 80022a2:	9b01      	ldr	r3, [sp, #4]
 80022a4:	6120      	str	r0, [r4, #16]
 80022a6:	b15b      	cbz	r3, 80022c0 <__smakebuf_r+0x74>
 80022a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80022ac:	4630      	mov	r0, r6
 80022ae:	f000 fc63 	bl	8002b78 <_isatty_r>
 80022b2:	b128      	cbz	r0, 80022c0 <__smakebuf_r+0x74>
 80022b4:	89a3      	ldrh	r3, [r4, #12]
 80022b6:	f023 0303 	bic.w	r3, r3, #3
 80022ba:	f043 0301 	orr.w	r3, r3, #1
 80022be:	81a3      	strh	r3, [r4, #12]
 80022c0:	89a0      	ldrh	r0, [r4, #12]
 80022c2:	4305      	orrs	r5, r0
 80022c4:	81a5      	strh	r5, [r4, #12]
 80022c6:	e7cd      	b.n	8002264 <__smakebuf_r+0x18>
 80022c8:	08002059 	stmdaeq	r0, {r0, r3, r4, r6, sp}

080022cc <_free_r>:
 80022cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80022ce:	2900      	cmp	r1, #0
 80022d0:	d044      	beq.n	800235c <_free_r+0x90>
 80022d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80022d6:	9001      	str	r0, [sp, #4]
 80022d8:	2b00      	cmp	r3, #0
 80022da:	f1a1 0404 	sub.w	r4, r1, #4
 80022de:	bfb8      	it	lt
 80022e0:	18e4      	addlt	r4, r4, r3
 80022e2:	f000 fc6b 	bl	8002bbc <__malloc_lock>
 80022e6:	4a1e      	ldr	r2, [pc, #120]	; (8002360 <_free_r+0x94>)
 80022e8:	9801      	ldr	r0, [sp, #4]
 80022ea:	6813      	ldr	r3, [r2, #0]
 80022ec:	b933      	cbnz	r3, 80022fc <_free_r+0x30>
 80022ee:	6063      	str	r3, [r4, #4]
 80022f0:	6014      	str	r4, [r2, #0]
 80022f2:	b003      	add	sp, #12
 80022f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80022f8:	f000 bc66 	b.w	8002bc8 <__malloc_unlock>
 80022fc:	42a3      	cmp	r3, r4
 80022fe:	d908      	bls.n	8002312 <_free_r+0x46>
 8002300:	6825      	ldr	r5, [r4, #0]
 8002302:	1961      	adds	r1, r4, r5
 8002304:	428b      	cmp	r3, r1
 8002306:	bf01      	itttt	eq
 8002308:	6819      	ldreq	r1, [r3, #0]
 800230a:	685b      	ldreq	r3, [r3, #4]
 800230c:	1949      	addeq	r1, r1, r5
 800230e:	6021      	streq	r1, [r4, #0]
 8002310:	e7ed      	b.n	80022ee <_free_r+0x22>
 8002312:	461a      	mov	r2, r3
 8002314:	685b      	ldr	r3, [r3, #4]
 8002316:	b10b      	cbz	r3, 800231c <_free_r+0x50>
 8002318:	42a3      	cmp	r3, r4
 800231a:	d9fa      	bls.n	8002312 <_free_r+0x46>
 800231c:	6811      	ldr	r1, [r2, #0]
 800231e:	1855      	adds	r5, r2, r1
 8002320:	42a5      	cmp	r5, r4
 8002322:	d10b      	bne.n	800233c <_free_r+0x70>
 8002324:	6824      	ldr	r4, [r4, #0]
 8002326:	4421      	add	r1, r4
 8002328:	1854      	adds	r4, r2, r1
 800232a:	42a3      	cmp	r3, r4
 800232c:	6011      	str	r1, [r2, #0]
 800232e:	d1e0      	bne.n	80022f2 <_free_r+0x26>
 8002330:	681c      	ldr	r4, [r3, #0]
 8002332:	685b      	ldr	r3, [r3, #4]
 8002334:	6053      	str	r3, [r2, #4]
 8002336:	4421      	add	r1, r4
 8002338:	6011      	str	r1, [r2, #0]
 800233a:	e7da      	b.n	80022f2 <_free_r+0x26>
 800233c:	d902      	bls.n	8002344 <_free_r+0x78>
 800233e:	230c      	movs	r3, #12
 8002340:	6003      	str	r3, [r0, #0]
 8002342:	e7d6      	b.n	80022f2 <_free_r+0x26>
 8002344:	6825      	ldr	r5, [r4, #0]
 8002346:	1961      	adds	r1, r4, r5
 8002348:	428b      	cmp	r3, r1
 800234a:	bf04      	itt	eq
 800234c:	6819      	ldreq	r1, [r3, #0]
 800234e:	685b      	ldreq	r3, [r3, #4]
 8002350:	6063      	str	r3, [r4, #4]
 8002352:	bf04      	itt	eq
 8002354:	1949      	addeq	r1, r1, r5
 8002356:	6021      	streq	r1, [r4, #0]
 8002358:	6054      	str	r4, [r2, #4]
 800235a:	e7ca      	b.n	80022f2 <_free_r+0x26>
 800235c:	b003      	add	sp, #12
 800235e:	bd30      	pop	{r4, r5, pc}
 8002360:	20000230 	andcs	r0, r0, r0, lsr r2

08002364 <sbrk_aligned>:
 8002364:	b570      	push	{r4, r5, r6, lr}
 8002366:	4e0e      	ldr	r6, [pc, #56]	; (80023a0 <sbrk_aligned+0x3c>)
 8002368:	460c      	mov	r4, r1
 800236a:	6831      	ldr	r1, [r6, #0]
 800236c:	4605      	mov	r5, r0
 800236e:	b911      	cbnz	r1, 8002376 <sbrk_aligned+0x12>
 8002370:	f000 fb7a 	bl	8002a68 <_sbrk_r>
 8002374:	6030      	str	r0, [r6, #0]
 8002376:	4621      	mov	r1, r4
 8002378:	4628      	mov	r0, r5
 800237a:	f000 fb75 	bl	8002a68 <_sbrk_r>
 800237e:	1c43      	adds	r3, r0, #1
 8002380:	d00a      	beq.n	8002398 <sbrk_aligned+0x34>
 8002382:	1cc4      	adds	r4, r0, #3
 8002384:	f024 0403 	bic.w	r4, r4, #3
 8002388:	42a0      	cmp	r0, r4
 800238a:	d007      	beq.n	800239c <sbrk_aligned+0x38>
 800238c:	1a21      	subs	r1, r4, r0
 800238e:	4628      	mov	r0, r5
 8002390:	f000 fb6a 	bl	8002a68 <_sbrk_r>
 8002394:	3001      	adds	r0, #1
 8002396:	d101      	bne.n	800239c <sbrk_aligned+0x38>
 8002398:	f04f 34ff 	mov.w	r4, #4294967295
 800239c:	4620      	mov	r0, r4
 800239e:	bd70      	pop	{r4, r5, r6, pc}
 80023a0:	20000234 	andcs	r0, r0, r4, lsr r2

080023a4 <_malloc_r>:
 80023a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023a8:	1ccd      	adds	r5, r1, #3
 80023aa:	f025 0503 	bic.w	r5, r5, #3
 80023ae:	3508      	adds	r5, #8
 80023b0:	2d0c      	cmp	r5, #12
 80023b2:	bf38      	it	cc
 80023b4:	250c      	movcc	r5, #12
 80023b6:	2d00      	cmp	r5, #0
 80023b8:	4607      	mov	r7, r0
 80023ba:	db01      	blt.n	80023c0 <_malloc_r+0x1c>
 80023bc:	42a9      	cmp	r1, r5
 80023be:	d905      	bls.n	80023cc <_malloc_r+0x28>
 80023c0:	230c      	movs	r3, #12
 80023c2:	603b      	str	r3, [r7, #0]
 80023c4:	2600      	movs	r6, #0
 80023c6:	4630      	mov	r0, r6
 80023c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80023cc:	4e2e      	ldr	r6, [pc, #184]	; (8002488 <_malloc_r+0xe4>)
 80023ce:	f000 fbf5 	bl	8002bbc <__malloc_lock>
 80023d2:	6833      	ldr	r3, [r6, #0]
 80023d4:	461c      	mov	r4, r3
 80023d6:	bb34      	cbnz	r4, 8002426 <_malloc_r+0x82>
 80023d8:	4629      	mov	r1, r5
 80023da:	4638      	mov	r0, r7
 80023dc:	f7ff ffc2 	bl	8002364 <sbrk_aligned>
 80023e0:	1c43      	adds	r3, r0, #1
 80023e2:	4604      	mov	r4, r0
 80023e4:	d14d      	bne.n	8002482 <_malloc_r+0xde>
 80023e6:	6834      	ldr	r4, [r6, #0]
 80023e8:	4626      	mov	r6, r4
 80023ea:	2e00      	cmp	r6, #0
 80023ec:	d140      	bne.n	8002470 <_malloc_r+0xcc>
 80023ee:	6823      	ldr	r3, [r4, #0]
 80023f0:	4631      	mov	r1, r6
 80023f2:	4638      	mov	r0, r7
 80023f4:	eb04 0803 	add.w	r8, r4, r3
 80023f8:	f000 fb36 	bl	8002a68 <_sbrk_r>
 80023fc:	4580      	cmp	r8, r0
 80023fe:	d13a      	bne.n	8002476 <_malloc_r+0xd2>
 8002400:	6821      	ldr	r1, [r4, #0]
 8002402:	3503      	adds	r5, #3
 8002404:	1a6d      	subs	r5, r5, r1
 8002406:	f025 0503 	bic.w	r5, r5, #3
 800240a:	3508      	adds	r5, #8
 800240c:	2d0c      	cmp	r5, #12
 800240e:	bf38      	it	cc
 8002410:	250c      	movcc	r5, #12
 8002412:	4629      	mov	r1, r5
 8002414:	4638      	mov	r0, r7
 8002416:	f7ff ffa5 	bl	8002364 <sbrk_aligned>
 800241a:	3001      	adds	r0, #1
 800241c:	d02b      	beq.n	8002476 <_malloc_r+0xd2>
 800241e:	6823      	ldr	r3, [r4, #0]
 8002420:	442b      	add	r3, r5
 8002422:	6023      	str	r3, [r4, #0]
 8002424:	e00e      	b.n	8002444 <_malloc_r+0xa0>
 8002426:	6822      	ldr	r2, [r4, #0]
 8002428:	1b52      	subs	r2, r2, r5
 800242a:	d41e      	bmi.n	800246a <_malloc_r+0xc6>
 800242c:	2a0b      	cmp	r2, #11
 800242e:	d916      	bls.n	800245e <_malloc_r+0xba>
 8002430:	1961      	adds	r1, r4, r5
 8002432:	42a3      	cmp	r3, r4
 8002434:	6025      	str	r5, [r4, #0]
 8002436:	bf18      	it	ne
 8002438:	6059      	strne	r1, [r3, #4]
 800243a:	6863      	ldr	r3, [r4, #4]
 800243c:	bf08      	it	eq
 800243e:	6031      	streq	r1, [r6, #0]
 8002440:	5162      	str	r2, [r4, r5]
 8002442:	604b      	str	r3, [r1, #4]
 8002444:	4638      	mov	r0, r7
 8002446:	f104 060b 	add.w	r6, r4, #11
 800244a:	f000 fbbd 	bl	8002bc8 <__malloc_unlock>
 800244e:	f026 0607 	bic.w	r6, r6, #7
 8002452:	1d23      	adds	r3, r4, #4
 8002454:	1af2      	subs	r2, r6, r3
 8002456:	d0b6      	beq.n	80023c6 <_malloc_r+0x22>
 8002458:	1b9b      	subs	r3, r3, r6
 800245a:	50a3      	str	r3, [r4, r2]
 800245c:	e7b3      	b.n	80023c6 <_malloc_r+0x22>
 800245e:	6862      	ldr	r2, [r4, #4]
 8002460:	42a3      	cmp	r3, r4
 8002462:	bf0c      	ite	eq
 8002464:	6032      	streq	r2, [r6, #0]
 8002466:	605a      	strne	r2, [r3, #4]
 8002468:	e7ec      	b.n	8002444 <_malloc_r+0xa0>
 800246a:	4623      	mov	r3, r4
 800246c:	6864      	ldr	r4, [r4, #4]
 800246e:	e7b2      	b.n	80023d6 <_malloc_r+0x32>
 8002470:	4634      	mov	r4, r6
 8002472:	6876      	ldr	r6, [r6, #4]
 8002474:	e7b9      	b.n	80023ea <_malloc_r+0x46>
 8002476:	230c      	movs	r3, #12
 8002478:	603b      	str	r3, [r7, #0]
 800247a:	4638      	mov	r0, r7
 800247c:	f000 fba4 	bl	8002bc8 <__malloc_unlock>
 8002480:	e7a1      	b.n	80023c6 <_malloc_r+0x22>
 8002482:	6025      	str	r5, [r4, #0]
 8002484:	e7de      	b.n	8002444 <_malloc_r+0xa0>
 8002486:	bf00      	nop
 8002488:	20000230 	andcs	r0, r0, r0, lsr r2

0800248c <__sfputc_r>:
 800248c:	6893      	ldr	r3, [r2, #8]
 800248e:	3b01      	subs	r3, #1
 8002490:	2b00      	cmp	r3, #0
 8002492:	b410      	push	{r4}
 8002494:	6093      	str	r3, [r2, #8]
 8002496:	da08      	bge.n	80024aa <__sfputc_r+0x1e>
 8002498:	6994      	ldr	r4, [r2, #24]
 800249a:	42a3      	cmp	r3, r4
 800249c:	db01      	blt.n	80024a2 <__sfputc_r+0x16>
 800249e:	290a      	cmp	r1, #10
 80024a0:	d103      	bne.n	80024aa <__sfputc_r+0x1e>
 80024a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80024a6:	f7ff bc31 	b.w	8001d0c <__swbuf_r>
 80024aa:	6813      	ldr	r3, [r2, #0]
 80024ac:	1c58      	adds	r0, r3, #1
 80024ae:	6010      	str	r0, [r2, #0]
 80024b0:	7019      	strb	r1, [r3, #0]
 80024b2:	4608      	mov	r0, r1
 80024b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80024b8:	4770      	bx	lr

080024ba <__sfputs_r>:
 80024ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024bc:	4606      	mov	r6, r0
 80024be:	460f      	mov	r7, r1
 80024c0:	4614      	mov	r4, r2
 80024c2:	18d5      	adds	r5, r2, r3
 80024c4:	42ac      	cmp	r4, r5
 80024c6:	d101      	bne.n	80024cc <__sfputs_r+0x12>
 80024c8:	2000      	movs	r0, #0
 80024ca:	e007      	b.n	80024dc <__sfputs_r+0x22>
 80024cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80024d0:	463a      	mov	r2, r7
 80024d2:	4630      	mov	r0, r6
 80024d4:	f7ff ffda 	bl	800248c <__sfputc_r>
 80024d8:	1c43      	adds	r3, r0, #1
 80024da:	d1f3      	bne.n	80024c4 <__sfputs_r+0xa>
 80024dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080024e0 <_vfiprintf_r>:
 80024e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024e4:	460d      	mov	r5, r1
 80024e6:	b09d      	sub	sp, #116	; 0x74
 80024e8:	4614      	mov	r4, r2
 80024ea:	4698      	mov	r8, r3
 80024ec:	4606      	mov	r6, r0
 80024ee:	b118      	cbz	r0, 80024f8 <_vfiprintf_r+0x18>
 80024f0:	6983      	ldr	r3, [r0, #24]
 80024f2:	b90b      	cbnz	r3, 80024f8 <_vfiprintf_r+0x18>
 80024f4:	f7ff fde4 	bl	80020c0 <__sinit>
 80024f8:	4b89      	ldr	r3, [pc, #548]	; (8002720 <_vfiprintf_r+0x240>)
 80024fa:	429d      	cmp	r5, r3
 80024fc:	d11b      	bne.n	8002536 <_vfiprintf_r+0x56>
 80024fe:	6875      	ldr	r5, [r6, #4]
 8002500:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002502:	07d9      	lsls	r1, r3, #31
 8002504:	d405      	bmi.n	8002512 <_vfiprintf_r+0x32>
 8002506:	89ab      	ldrh	r3, [r5, #12]
 8002508:	059a      	lsls	r2, r3, #22
 800250a:	d402      	bmi.n	8002512 <_vfiprintf_r+0x32>
 800250c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800250e:	f7ff fe75 	bl	80021fc <__retarget_lock_acquire_recursive>
 8002512:	89ab      	ldrh	r3, [r5, #12]
 8002514:	071b      	lsls	r3, r3, #28
 8002516:	d501      	bpl.n	800251c <_vfiprintf_r+0x3c>
 8002518:	692b      	ldr	r3, [r5, #16]
 800251a:	b9eb      	cbnz	r3, 8002558 <_vfiprintf_r+0x78>
 800251c:	4629      	mov	r1, r5
 800251e:	4630      	mov	r0, r6
 8002520:	f7ff fc46 	bl	8001db0 <__swsetup_r>
 8002524:	b1c0      	cbz	r0, 8002558 <_vfiprintf_r+0x78>
 8002526:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002528:	07dc      	lsls	r4, r3, #31
 800252a:	d50e      	bpl.n	800254a <_vfiprintf_r+0x6a>
 800252c:	f04f 30ff 	mov.w	r0, #4294967295
 8002530:	b01d      	add	sp, #116	; 0x74
 8002532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002536:	4b7b      	ldr	r3, [pc, #492]	; (8002724 <_vfiprintf_r+0x244>)
 8002538:	429d      	cmp	r5, r3
 800253a:	d101      	bne.n	8002540 <_vfiprintf_r+0x60>
 800253c:	68b5      	ldr	r5, [r6, #8]
 800253e:	e7df      	b.n	8002500 <_vfiprintf_r+0x20>
 8002540:	4b79      	ldr	r3, [pc, #484]	; (8002728 <_vfiprintf_r+0x248>)
 8002542:	429d      	cmp	r5, r3
 8002544:	bf08      	it	eq
 8002546:	68f5      	ldreq	r5, [r6, #12]
 8002548:	e7da      	b.n	8002500 <_vfiprintf_r+0x20>
 800254a:	89ab      	ldrh	r3, [r5, #12]
 800254c:	0598      	lsls	r0, r3, #22
 800254e:	d4ed      	bmi.n	800252c <_vfiprintf_r+0x4c>
 8002550:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002552:	f7ff fe54 	bl	80021fe <__retarget_lock_release_recursive>
 8002556:	e7e9      	b.n	800252c <_vfiprintf_r+0x4c>
 8002558:	2300      	movs	r3, #0
 800255a:	9309      	str	r3, [sp, #36]	; 0x24
 800255c:	2320      	movs	r3, #32
 800255e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002562:	f8cd 800c 	str.w	r8, [sp, #12]
 8002566:	2330      	movs	r3, #48	; 0x30
 8002568:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800272c <_vfiprintf_r+0x24c>
 800256c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002570:	f04f 0901 	mov.w	r9, #1
 8002574:	4623      	mov	r3, r4
 8002576:	469a      	mov	sl, r3
 8002578:	f813 2b01 	ldrb.w	r2, [r3], #1
 800257c:	b10a      	cbz	r2, 8002582 <_vfiprintf_r+0xa2>
 800257e:	2a25      	cmp	r2, #37	; 0x25
 8002580:	d1f9      	bne.n	8002576 <_vfiprintf_r+0x96>
 8002582:	ebba 0b04 	subs.w	fp, sl, r4
 8002586:	d00b      	beq.n	80025a0 <_vfiprintf_r+0xc0>
 8002588:	465b      	mov	r3, fp
 800258a:	4622      	mov	r2, r4
 800258c:	4629      	mov	r1, r5
 800258e:	4630      	mov	r0, r6
 8002590:	f7ff ff93 	bl	80024ba <__sfputs_r>
 8002594:	3001      	adds	r0, #1
 8002596:	f000 80aa 	beq.w	80026ee <_vfiprintf_r+0x20e>
 800259a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800259c:	445a      	add	r2, fp
 800259e:	9209      	str	r2, [sp, #36]	; 0x24
 80025a0:	f89a 3000 	ldrb.w	r3, [sl]
 80025a4:	2b00      	cmp	r3, #0
 80025a6:	f000 80a2 	beq.w	80026ee <_vfiprintf_r+0x20e>
 80025aa:	2300      	movs	r3, #0
 80025ac:	f04f 32ff 	mov.w	r2, #4294967295
 80025b0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80025b4:	f10a 0a01 	add.w	sl, sl, #1
 80025b8:	9304      	str	r3, [sp, #16]
 80025ba:	9307      	str	r3, [sp, #28]
 80025bc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80025c0:	931a      	str	r3, [sp, #104]	; 0x68
 80025c2:	4654      	mov	r4, sl
 80025c4:	2205      	movs	r2, #5
 80025c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80025ca:	4858      	ldr	r0, [pc, #352]	; (800272c <_vfiprintf_r+0x24c>)
 80025cc:	f7fd fe28 	bl	8000220 <memchr>
 80025d0:	9a04      	ldr	r2, [sp, #16]
 80025d2:	b9d8      	cbnz	r0, 800260c <_vfiprintf_r+0x12c>
 80025d4:	06d1      	lsls	r1, r2, #27
 80025d6:	bf44      	itt	mi
 80025d8:	2320      	movmi	r3, #32
 80025da:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80025de:	0713      	lsls	r3, r2, #28
 80025e0:	bf44      	itt	mi
 80025e2:	232b      	movmi	r3, #43	; 0x2b
 80025e4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80025e8:	f89a 3000 	ldrb.w	r3, [sl]
 80025ec:	2b2a      	cmp	r3, #42	; 0x2a
 80025ee:	d015      	beq.n	800261c <_vfiprintf_r+0x13c>
 80025f0:	9a07      	ldr	r2, [sp, #28]
 80025f2:	4654      	mov	r4, sl
 80025f4:	2000      	movs	r0, #0
 80025f6:	f04f 0c0a 	mov.w	ip, #10
 80025fa:	4621      	mov	r1, r4
 80025fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002600:	3b30      	subs	r3, #48	; 0x30
 8002602:	2b09      	cmp	r3, #9
 8002604:	d94e      	bls.n	80026a4 <_vfiprintf_r+0x1c4>
 8002606:	b1b0      	cbz	r0, 8002636 <_vfiprintf_r+0x156>
 8002608:	9207      	str	r2, [sp, #28]
 800260a:	e014      	b.n	8002636 <_vfiprintf_r+0x156>
 800260c:	eba0 0308 	sub.w	r3, r0, r8
 8002610:	fa09 f303 	lsl.w	r3, r9, r3
 8002614:	4313      	orrs	r3, r2
 8002616:	9304      	str	r3, [sp, #16]
 8002618:	46a2      	mov	sl, r4
 800261a:	e7d2      	b.n	80025c2 <_vfiprintf_r+0xe2>
 800261c:	9b03      	ldr	r3, [sp, #12]
 800261e:	1d19      	adds	r1, r3, #4
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	9103      	str	r1, [sp, #12]
 8002624:	2b00      	cmp	r3, #0
 8002626:	bfbb      	ittet	lt
 8002628:	425b      	neglt	r3, r3
 800262a:	f042 0202 	orrlt.w	r2, r2, #2
 800262e:	9307      	strge	r3, [sp, #28]
 8002630:	9307      	strlt	r3, [sp, #28]
 8002632:	bfb8      	it	lt
 8002634:	9204      	strlt	r2, [sp, #16]
 8002636:	7823      	ldrb	r3, [r4, #0]
 8002638:	2b2e      	cmp	r3, #46	; 0x2e
 800263a:	d10c      	bne.n	8002656 <_vfiprintf_r+0x176>
 800263c:	7863      	ldrb	r3, [r4, #1]
 800263e:	2b2a      	cmp	r3, #42	; 0x2a
 8002640:	d135      	bne.n	80026ae <_vfiprintf_r+0x1ce>
 8002642:	9b03      	ldr	r3, [sp, #12]
 8002644:	1d1a      	adds	r2, r3, #4
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	9203      	str	r2, [sp, #12]
 800264a:	2b00      	cmp	r3, #0
 800264c:	bfb8      	it	lt
 800264e:	f04f 33ff 	movlt.w	r3, #4294967295
 8002652:	3402      	adds	r4, #2
 8002654:	9305      	str	r3, [sp, #20]
 8002656:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800273c <_vfiprintf_r+0x25c>
 800265a:	7821      	ldrb	r1, [r4, #0]
 800265c:	2203      	movs	r2, #3
 800265e:	4650      	mov	r0, sl
 8002660:	f7fd fdde 	bl	8000220 <memchr>
 8002664:	b140      	cbz	r0, 8002678 <_vfiprintf_r+0x198>
 8002666:	2340      	movs	r3, #64	; 0x40
 8002668:	eba0 000a 	sub.w	r0, r0, sl
 800266c:	fa03 f000 	lsl.w	r0, r3, r0
 8002670:	9b04      	ldr	r3, [sp, #16]
 8002672:	4303      	orrs	r3, r0
 8002674:	3401      	adds	r4, #1
 8002676:	9304      	str	r3, [sp, #16]
 8002678:	f814 1b01 	ldrb.w	r1, [r4], #1
 800267c:	482c      	ldr	r0, [pc, #176]	; (8002730 <_vfiprintf_r+0x250>)
 800267e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002682:	2206      	movs	r2, #6
 8002684:	f7fd fdcc 	bl	8000220 <memchr>
 8002688:	2800      	cmp	r0, #0
 800268a:	d03f      	beq.n	800270c <_vfiprintf_r+0x22c>
 800268c:	4b29      	ldr	r3, [pc, #164]	; (8002734 <_vfiprintf_r+0x254>)
 800268e:	bb1b      	cbnz	r3, 80026d8 <_vfiprintf_r+0x1f8>
 8002690:	9b03      	ldr	r3, [sp, #12]
 8002692:	3307      	adds	r3, #7
 8002694:	f023 0307 	bic.w	r3, r3, #7
 8002698:	3308      	adds	r3, #8
 800269a:	9303      	str	r3, [sp, #12]
 800269c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800269e:	443b      	add	r3, r7
 80026a0:	9309      	str	r3, [sp, #36]	; 0x24
 80026a2:	e767      	b.n	8002574 <_vfiprintf_r+0x94>
 80026a4:	fb0c 3202 	mla	r2, ip, r2, r3
 80026a8:	460c      	mov	r4, r1
 80026aa:	2001      	movs	r0, #1
 80026ac:	e7a5      	b.n	80025fa <_vfiprintf_r+0x11a>
 80026ae:	2300      	movs	r3, #0
 80026b0:	3401      	adds	r4, #1
 80026b2:	9305      	str	r3, [sp, #20]
 80026b4:	4619      	mov	r1, r3
 80026b6:	f04f 0c0a 	mov.w	ip, #10
 80026ba:	4620      	mov	r0, r4
 80026bc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80026c0:	3a30      	subs	r2, #48	; 0x30
 80026c2:	2a09      	cmp	r2, #9
 80026c4:	d903      	bls.n	80026ce <_vfiprintf_r+0x1ee>
 80026c6:	2b00      	cmp	r3, #0
 80026c8:	d0c5      	beq.n	8002656 <_vfiprintf_r+0x176>
 80026ca:	9105      	str	r1, [sp, #20]
 80026cc:	e7c3      	b.n	8002656 <_vfiprintf_r+0x176>
 80026ce:	fb0c 2101 	mla	r1, ip, r1, r2
 80026d2:	4604      	mov	r4, r0
 80026d4:	2301      	movs	r3, #1
 80026d6:	e7f0      	b.n	80026ba <_vfiprintf_r+0x1da>
 80026d8:	ab03      	add	r3, sp, #12
 80026da:	9300      	str	r3, [sp, #0]
 80026dc:	462a      	mov	r2, r5
 80026de:	4b16      	ldr	r3, [pc, #88]	; (8002738 <_vfiprintf_r+0x258>)
 80026e0:	a904      	add	r1, sp, #16
 80026e2:	4630      	mov	r0, r6
 80026e4:	f3af 8000 	nop.w
 80026e8:	4607      	mov	r7, r0
 80026ea:	1c78      	adds	r0, r7, #1
 80026ec:	d1d6      	bne.n	800269c <_vfiprintf_r+0x1bc>
 80026ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80026f0:	07d9      	lsls	r1, r3, #31
 80026f2:	d405      	bmi.n	8002700 <_vfiprintf_r+0x220>
 80026f4:	89ab      	ldrh	r3, [r5, #12]
 80026f6:	059a      	lsls	r2, r3, #22
 80026f8:	d402      	bmi.n	8002700 <_vfiprintf_r+0x220>
 80026fa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80026fc:	f7ff fd7f 	bl	80021fe <__retarget_lock_release_recursive>
 8002700:	89ab      	ldrh	r3, [r5, #12]
 8002702:	065b      	lsls	r3, r3, #25
 8002704:	f53f af12 	bmi.w	800252c <_vfiprintf_r+0x4c>
 8002708:	9809      	ldr	r0, [sp, #36]	; 0x24
 800270a:	e711      	b.n	8002530 <_vfiprintf_r+0x50>
 800270c:	ab03      	add	r3, sp, #12
 800270e:	9300      	str	r3, [sp, #0]
 8002710:	462a      	mov	r2, r5
 8002712:	4b09      	ldr	r3, [pc, #36]	; (8002738 <_vfiprintf_r+0x258>)
 8002714:	a904      	add	r1, sp, #16
 8002716:	4630      	mov	r0, r6
 8002718:	f000 f880 	bl	800281c <_printf_i>
 800271c:	e7e4      	b.n	80026e8 <_vfiprintf_r+0x208>
 800271e:	bf00      	nop
 8002720:	080030dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, sp}
 8002724:	080030fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip, sp}
 8002728:	080030bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip, sp}
 800272c:	0800311c 	stmdaeq	r0, {r2, r3, r4, r8, ip, sp}
 8002730:	08003126 	stmdaeq	r0, {r1, r2, r5, r8, ip, sp}
 8002734:	00000000 	andeq	r0, r0, r0
 8002738:	080024bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, sl, sp}
 800273c:	08003122 	stmdaeq	r0, {r1, r5, r8, ip, sp}

08002740 <_printf_common>:
 8002740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002744:	4616      	mov	r6, r2
 8002746:	4699      	mov	r9, r3
 8002748:	688a      	ldr	r2, [r1, #8]
 800274a:	690b      	ldr	r3, [r1, #16]
 800274c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002750:	4293      	cmp	r3, r2
 8002752:	bfb8      	it	lt
 8002754:	4613      	movlt	r3, r2
 8002756:	6033      	str	r3, [r6, #0]
 8002758:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800275c:	4607      	mov	r7, r0
 800275e:	460c      	mov	r4, r1
 8002760:	b10a      	cbz	r2, 8002766 <_printf_common+0x26>
 8002762:	3301      	adds	r3, #1
 8002764:	6033      	str	r3, [r6, #0]
 8002766:	6823      	ldr	r3, [r4, #0]
 8002768:	0699      	lsls	r1, r3, #26
 800276a:	bf42      	ittt	mi
 800276c:	6833      	ldrmi	r3, [r6, #0]
 800276e:	3302      	addmi	r3, #2
 8002770:	6033      	strmi	r3, [r6, #0]
 8002772:	6825      	ldr	r5, [r4, #0]
 8002774:	f015 0506 	ands.w	r5, r5, #6
 8002778:	d106      	bne.n	8002788 <_printf_common+0x48>
 800277a:	f104 0a19 	add.w	sl, r4, #25
 800277e:	68e3      	ldr	r3, [r4, #12]
 8002780:	6832      	ldr	r2, [r6, #0]
 8002782:	1a9b      	subs	r3, r3, r2
 8002784:	42ab      	cmp	r3, r5
 8002786:	dc26      	bgt.n	80027d6 <_printf_common+0x96>
 8002788:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800278c:	1e13      	subs	r3, r2, #0
 800278e:	6822      	ldr	r2, [r4, #0]
 8002790:	bf18      	it	ne
 8002792:	2301      	movne	r3, #1
 8002794:	0692      	lsls	r2, r2, #26
 8002796:	d42b      	bmi.n	80027f0 <_printf_common+0xb0>
 8002798:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800279c:	4649      	mov	r1, r9
 800279e:	4638      	mov	r0, r7
 80027a0:	47c0      	blx	r8
 80027a2:	3001      	adds	r0, #1
 80027a4:	d01e      	beq.n	80027e4 <_printf_common+0xa4>
 80027a6:	6823      	ldr	r3, [r4, #0]
 80027a8:	68e5      	ldr	r5, [r4, #12]
 80027aa:	6832      	ldr	r2, [r6, #0]
 80027ac:	f003 0306 	and.w	r3, r3, #6
 80027b0:	2b04      	cmp	r3, #4
 80027b2:	bf08      	it	eq
 80027b4:	1aad      	subeq	r5, r5, r2
 80027b6:	68a3      	ldr	r3, [r4, #8]
 80027b8:	6922      	ldr	r2, [r4, #16]
 80027ba:	bf0c      	ite	eq
 80027bc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80027c0:	2500      	movne	r5, #0
 80027c2:	4293      	cmp	r3, r2
 80027c4:	bfc4      	itt	gt
 80027c6:	1a9b      	subgt	r3, r3, r2
 80027c8:	18ed      	addgt	r5, r5, r3
 80027ca:	2600      	movs	r6, #0
 80027cc:	341a      	adds	r4, #26
 80027ce:	42b5      	cmp	r5, r6
 80027d0:	d11a      	bne.n	8002808 <_printf_common+0xc8>
 80027d2:	2000      	movs	r0, #0
 80027d4:	e008      	b.n	80027e8 <_printf_common+0xa8>
 80027d6:	2301      	movs	r3, #1
 80027d8:	4652      	mov	r2, sl
 80027da:	4649      	mov	r1, r9
 80027dc:	4638      	mov	r0, r7
 80027de:	47c0      	blx	r8
 80027e0:	3001      	adds	r0, #1
 80027e2:	d103      	bne.n	80027ec <_printf_common+0xac>
 80027e4:	f04f 30ff 	mov.w	r0, #4294967295
 80027e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80027ec:	3501      	adds	r5, #1
 80027ee:	e7c6      	b.n	800277e <_printf_common+0x3e>
 80027f0:	18e1      	adds	r1, r4, r3
 80027f2:	1c5a      	adds	r2, r3, #1
 80027f4:	2030      	movs	r0, #48	; 0x30
 80027f6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80027fa:	4422      	add	r2, r4
 80027fc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002800:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002804:	3302      	adds	r3, #2
 8002806:	e7c7      	b.n	8002798 <_printf_common+0x58>
 8002808:	2301      	movs	r3, #1
 800280a:	4622      	mov	r2, r4
 800280c:	4649      	mov	r1, r9
 800280e:	4638      	mov	r0, r7
 8002810:	47c0      	blx	r8
 8002812:	3001      	adds	r0, #1
 8002814:	d0e6      	beq.n	80027e4 <_printf_common+0xa4>
 8002816:	3601      	adds	r6, #1
 8002818:	e7d9      	b.n	80027ce <_printf_common+0x8e>
	...

0800281c <_printf_i>:
 800281c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002820:	7e0f      	ldrb	r7, [r1, #24]
 8002822:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002824:	2f78      	cmp	r7, #120	; 0x78
 8002826:	4691      	mov	r9, r2
 8002828:	4680      	mov	r8, r0
 800282a:	460c      	mov	r4, r1
 800282c:	469a      	mov	sl, r3
 800282e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002832:	d807      	bhi.n	8002844 <_printf_i+0x28>
 8002834:	2f62      	cmp	r7, #98	; 0x62
 8002836:	d80a      	bhi.n	800284e <_printf_i+0x32>
 8002838:	2f00      	cmp	r7, #0
 800283a:	f000 80d8 	beq.w	80029ee <_printf_i+0x1d2>
 800283e:	2f58      	cmp	r7, #88	; 0x58
 8002840:	f000 80a3 	beq.w	800298a <_printf_i+0x16e>
 8002844:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002848:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800284c:	e03a      	b.n	80028c4 <_printf_i+0xa8>
 800284e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002852:	2b15      	cmp	r3, #21
 8002854:	d8f6      	bhi.n	8002844 <_printf_i+0x28>
 8002856:	a101      	add	r1, pc, #4	; (adr r1, 800285c <_printf_i+0x40>)
 8002858:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800285c:	080028b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, sp}
 8002860:	080028c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, sp}
 8002864:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002868:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 800286c:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002870:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002874:	080028c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, sp}
 8002878:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 800287c:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002880:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002884:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002888:	080029d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, sp}
 800288c:	080028f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, sp}
 8002890:	080029b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, fp, sp}
 8002894:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 8002898:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 800289c:	080029f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r8, fp, sp}
 80028a0:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 80028a4:	080028f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, sp}
 80028a8:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 80028ac:	08002845 	stmdaeq	r0, {r0, r2, r6, fp, sp}
 80028b0:	080029bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, fp, sp}
 80028b4:	682b      	ldr	r3, [r5, #0]
 80028b6:	1d1a      	adds	r2, r3, #4
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	602a      	str	r2, [r5, #0]
 80028bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80028c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80028c4:	2301      	movs	r3, #1
 80028c6:	e0a3      	b.n	8002a10 <_printf_i+0x1f4>
 80028c8:	6820      	ldr	r0, [r4, #0]
 80028ca:	6829      	ldr	r1, [r5, #0]
 80028cc:	0606      	lsls	r6, r0, #24
 80028ce:	f101 0304 	add.w	r3, r1, #4
 80028d2:	d50a      	bpl.n	80028ea <_printf_i+0xce>
 80028d4:	680e      	ldr	r6, [r1, #0]
 80028d6:	602b      	str	r3, [r5, #0]
 80028d8:	2e00      	cmp	r6, #0
 80028da:	da03      	bge.n	80028e4 <_printf_i+0xc8>
 80028dc:	232d      	movs	r3, #45	; 0x2d
 80028de:	4276      	negs	r6, r6
 80028e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028e4:	485e      	ldr	r0, [pc, #376]	; (8002a60 <_printf_i+0x244>)
 80028e6:	230a      	movs	r3, #10
 80028e8:	e019      	b.n	800291e <_printf_i+0x102>
 80028ea:	680e      	ldr	r6, [r1, #0]
 80028ec:	602b      	str	r3, [r5, #0]
 80028ee:	f010 0f40 	tst.w	r0, #64	; 0x40
 80028f2:	bf18      	it	ne
 80028f4:	b236      	sxthne	r6, r6
 80028f6:	e7ef      	b.n	80028d8 <_printf_i+0xbc>
 80028f8:	682b      	ldr	r3, [r5, #0]
 80028fa:	6820      	ldr	r0, [r4, #0]
 80028fc:	1d19      	adds	r1, r3, #4
 80028fe:	6029      	str	r1, [r5, #0]
 8002900:	0601      	lsls	r1, r0, #24
 8002902:	d501      	bpl.n	8002908 <_printf_i+0xec>
 8002904:	681e      	ldr	r6, [r3, #0]
 8002906:	e002      	b.n	800290e <_printf_i+0xf2>
 8002908:	0646      	lsls	r6, r0, #25
 800290a:	d5fb      	bpl.n	8002904 <_printf_i+0xe8>
 800290c:	881e      	ldrh	r6, [r3, #0]
 800290e:	4854      	ldr	r0, [pc, #336]	; (8002a60 <_printf_i+0x244>)
 8002910:	2f6f      	cmp	r7, #111	; 0x6f
 8002912:	bf0c      	ite	eq
 8002914:	2308      	moveq	r3, #8
 8002916:	230a      	movne	r3, #10
 8002918:	2100      	movs	r1, #0
 800291a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800291e:	6865      	ldr	r5, [r4, #4]
 8002920:	60a5      	str	r5, [r4, #8]
 8002922:	2d00      	cmp	r5, #0
 8002924:	bfa2      	ittt	ge
 8002926:	6821      	ldrge	r1, [r4, #0]
 8002928:	f021 0104 	bicge.w	r1, r1, #4
 800292c:	6021      	strge	r1, [r4, #0]
 800292e:	b90e      	cbnz	r6, 8002934 <_printf_i+0x118>
 8002930:	2d00      	cmp	r5, #0
 8002932:	d04d      	beq.n	80029d0 <_printf_i+0x1b4>
 8002934:	4615      	mov	r5, r2
 8002936:	fbb6 f1f3 	udiv	r1, r6, r3
 800293a:	fb03 6711 	mls	r7, r3, r1, r6
 800293e:	5dc7      	ldrb	r7, [r0, r7]
 8002940:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002944:	4637      	mov	r7, r6
 8002946:	42bb      	cmp	r3, r7
 8002948:	460e      	mov	r6, r1
 800294a:	d9f4      	bls.n	8002936 <_printf_i+0x11a>
 800294c:	2b08      	cmp	r3, #8
 800294e:	d10b      	bne.n	8002968 <_printf_i+0x14c>
 8002950:	6823      	ldr	r3, [r4, #0]
 8002952:	07de      	lsls	r6, r3, #31
 8002954:	d508      	bpl.n	8002968 <_printf_i+0x14c>
 8002956:	6923      	ldr	r3, [r4, #16]
 8002958:	6861      	ldr	r1, [r4, #4]
 800295a:	4299      	cmp	r1, r3
 800295c:	bfde      	ittt	le
 800295e:	2330      	movle	r3, #48	; 0x30
 8002960:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002964:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002968:	1b52      	subs	r2, r2, r5
 800296a:	6122      	str	r2, [r4, #16]
 800296c:	f8cd a000 	str.w	sl, [sp]
 8002970:	464b      	mov	r3, r9
 8002972:	aa03      	add	r2, sp, #12
 8002974:	4621      	mov	r1, r4
 8002976:	4640      	mov	r0, r8
 8002978:	f7ff fee2 	bl	8002740 <_printf_common>
 800297c:	3001      	adds	r0, #1
 800297e:	d14c      	bne.n	8002a1a <_printf_i+0x1fe>
 8002980:	f04f 30ff 	mov.w	r0, #4294967295
 8002984:	b004      	add	sp, #16
 8002986:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800298a:	4835      	ldr	r0, [pc, #212]	; (8002a60 <_printf_i+0x244>)
 800298c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002990:	6829      	ldr	r1, [r5, #0]
 8002992:	6823      	ldr	r3, [r4, #0]
 8002994:	f851 6b04 	ldr.w	r6, [r1], #4
 8002998:	6029      	str	r1, [r5, #0]
 800299a:	061d      	lsls	r5, r3, #24
 800299c:	d514      	bpl.n	80029c8 <_printf_i+0x1ac>
 800299e:	07df      	lsls	r7, r3, #31
 80029a0:	bf44      	itt	mi
 80029a2:	f043 0320 	orrmi.w	r3, r3, #32
 80029a6:	6023      	strmi	r3, [r4, #0]
 80029a8:	b91e      	cbnz	r6, 80029b2 <_printf_i+0x196>
 80029aa:	6823      	ldr	r3, [r4, #0]
 80029ac:	f023 0320 	bic.w	r3, r3, #32
 80029b0:	6023      	str	r3, [r4, #0]
 80029b2:	2310      	movs	r3, #16
 80029b4:	e7b0      	b.n	8002918 <_printf_i+0xfc>
 80029b6:	6823      	ldr	r3, [r4, #0]
 80029b8:	f043 0320 	orr.w	r3, r3, #32
 80029bc:	6023      	str	r3, [r4, #0]
 80029be:	2378      	movs	r3, #120	; 0x78
 80029c0:	4828      	ldr	r0, [pc, #160]	; (8002a64 <_printf_i+0x248>)
 80029c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80029c6:	e7e3      	b.n	8002990 <_printf_i+0x174>
 80029c8:	0659      	lsls	r1, r3, #25
 80029ca:	bf48      	it	mi
 80029cc:	b2b6      	uxthmi	r6, r6
 80029ce:	e7e6      	b.n	800299e <_printf_i+0x182>
 80029d0:	4615      	mov	r5, r2
 80029d2:	e7bb      	b.n	800294c <_printf_i+0x130>
 80029d4:	682b      	ldr	r3, [r5, #0]
 80029d6:	6826      	ldr	r6, [r4, #0]
 80029d8:	6961      	ldr	r1, [r4, #20]
 80029da:	1d18      	adds	r0, r3, #4
 80029dc:	6028      	str	r0, [r5, #0]
 80029de:	0635      	lsls	r5, r6, #24
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	d501      	bpl.n	80029e8 <_printf_i+0x1cc>
 80029e4:	6019      	str	r1, [r3, #0]
 80029e6:	e002      	b.n	80029ee <_printf_i+0x1d2>
 80029e8:	0670      	lsls	r0, r6, #25
 80029ea:	d5fb      	bpl.n	80029e4 <_printf_i+0x1c8>
 80029ec:	8019      	strh	r1, [r3, #0]
 80029ee:	2300      	movs	r3, #0
 80029f0:	6123      	str	r3, [r4, #16]
 80029f2:	4615      	mov	r5, r2
 80029f4:	e7ba      	b.n	800296c <_printf_i+0x150>
 80029f6:	682b      	ldr	r3, [r5, #0]
 80029f8:	1d1a      	adds	r2, r3, #4
 80029fa:	602a      	str	r2, [r5, #0]
 80029fc:	681d      	ldr	r5, [r3, #0]
 80029fe:	6862      	ldr	r2, [r4, #4]
 8002a00:	2100      	movs	r1, #0
 8002a02:	4628      	mov	r0, r5
 8002a04:	f7fd fc0c 	bl	8000220 <memchr>
 8002a08:	b108      	cbz	r0, 8002a0e <_printf_i+0x1f2>
 8002a0a:	1b40      	subs	r0, r0, r5
 8002a0c:	6060      	str	r0, [r4, #4]
 8002a0e:	6863      	ldr	r3, [r4, #4]
 8002a10:	6123      	str	r3, [r4, #16]
 8002a12:	2300      	movs	r3, #0
 8002a14:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002a18:	e7a8      	b.n	800296c <_printf_i+0x150>
 8002a1a:	6923      	ldr	r3, [r4, #16]
 8002a1c:	462a      	mov	r2, r5
 8002a1e:	4649      	mov	r1, r9
 8002a20:	4640      	mov	r0, r8
 8002a22:	47d0      	blx	sl
 8002a24:	3001      	adds	r0, #1
 8002a26:	d0ab      	beq.n	8002980 <_printf_i+0x164>
 8002a28:	6823      	ldr	r3, [r4, #0]
 8002a2a:	079b      	lsls	r3, r3, #30
 8002a2c:	d413      	bmi.n	8002a56 <_printf_i+0x23a>
 8002a2e:	68e0      	ldr	r0, [r4, #12]
 8002a30:	9b03      	ldr	r3, [sp, #12]
 8002a32:	4298      	cmp	r0, r3
 8002a34:	bfb8      	it	lt
 8002a36:	4618      	movlt	r0, r3
 8002a38:	e7a4      	b.n	8002984 <_printf_i+0x168>
 8002a3a:	2301      	movs	r3, #1
 8002a3c:	4632      	mov	r2, r6
 8002a3e:	4649      	mov	r1, r9
 8002a40:	4640      	mov	r0, r8
 8002a42:	47d0      	blx	sl
 8002a44:	3001      	adds	r0, #1
 8002a46:	d09b      	beq.n	8002980 <_printf_i+0x164>
 8002a48:	3501      	adds	r5, #1
 8002a4a:	68e3      	ldr	r3, [r4, #12]
 8002a4c:	9903      	ldr	r1, [sp, #12]
 8002a4e:	1a5b      	subs	r3, r3, r1
 8002a50:	42ab      	cmp	r3, r5
 8002a52:	dcf2      	bgt.n	8002a3a <_printf_i+0x21e>
 8002a54:	e7eb      	b.n	8002a2e <_printf_i+0x212>
 8002a56:	2500      	movs	r5, #0
 8002a58:	f104 0619 	add.w	r6, r4, #25
 8002a5c:	e7f5      	b.n	8002a4a <_printf_i+0x22e>
 8002a5e:	bf00      	nop
 8002a60:	0800312d 	stmdaeq	r0, {r0, r2, r3, r5, r8, ip, sp}
 8002a64:	0800313e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, ip, sp}

08002a68 <_sbrk_r>:
 8002a68:	b538      	push	{r3, r4, r5, lr}
 8002a6a:	4d06      	ldr	r5, [pc, #24]	; (8002a84 <_sbrk_r+0x1c>)
 8002a6c:	2300      	movs	r3, #0
 8002a6e:	4604      	mov	r4, r0
 8002a70:	4608      	mov	r0, r1
 8002a72:	602b      	str	r3, [r5, #0]
 8002a74:	f7ff f812 	bl	8001a9c <_sbrk>
 8002a78:	1c43      	adds	r3, r0, #1
 8002a7a:	d102      	bne.n	8002a82 <_sbrk_r+0x1a>
 8002a7c:	682b      	ldr	r3, [r5, #0]
 8002a7e:	b103      	cbz	r3, 8002a82 <_sbrk_r+0x1a>
 8002a80:	6023      	str	r3, [r4, #0]
 8002a82:	bd38      	pop	{r3, r4, r5, pc}
 8002a84:	20000238 	andcs	r0, r0, r8, lsr r2

08002a88 <__sread>:
 8002a88:	b510      	push	{r4, lr}
 8002a8a:	460c      	mov	r4, r1
 8002a8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a90:	f000 f8a0 	bl	8002bd4 <_read_r>
 8002a94:	2800      	cmp	r0, #0
 8002a96:	bfab      	itete	ge
 8002a98:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002a9a:	89a3      	ldrhlt	r3, [r4, #12]
 8002a9c:	181b      	addge	r3, r3, r0
 8002a9e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002aa2:	bfac      	ite	ge
 8002aa4:	6563      	strge	r3, [r4, #84]	; 0x54
 8002aa6:	81a3      	strhlt	r3, [r4, #12]
 8002aa8:	bd10      	pop	{r4, pc}

08002aaa <__swrite>:
 8002aaa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002aae:	461f      	mov	r7, r3
 8002ab0:	898b      	ldrh	r3, [r1, #12]
 8002ab2:	05db      	lsls	r3, r3, #23
 8002ab4:	4605      	mov	r5, r0
 8002ab6:	460c      	mov	r4, r1
 8002ab8:	4616      	mov	r6, r2
 8002aba:	d505      	bpl.n	8002ac8 <__swrite+0x1e>
 8002abc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002ac0:	2302      	movs	r3, #2
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	f000 f868 	bl	8002b98 <_lseek_r>
 8002ac8:	89a3      	ldrh	r3, [r4, #12]
 8002aca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002ace:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002ad2:	81a3      	strh	r3, [r4, #12]
 8002ad4:	4632      	mov	r2, r6
 8002ad6:	463b      	mov	r3, r7
 8002ad8:	4628      	mov	r0, r5
 8002ada:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002ade:	f000 b817 	b.w	8002b10 <_write_r>

08002ae2 <__sseek>:
 8002ae2:	b510      	push	{r4, lr}
 8002ae4:	460c      	mov	r4, r1
 8002ae6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002aea:	f000 f855 	bl	8002b98 <_lseek_r>
 8002aee:	1c43      	adds	r3, r0, #1
 8002af0:	89a3      	ldrh	r3, [r4, #12]
 8002af2:	bf15      	itete	ne
 8002af4:	6560      	strne	r0, [r4, #84]	; 0x54
 8002af6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002afa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002afe:	81a3      	strheq	r3, [r4, #12]
 8002b00:	bf18      	it	ne
 8002b02:	81a3      	strhne	r3, [r4, #12]
 8002b04:	bd10      	pop	{r4, pc}

08002b06 <__sclose>:
 8002b06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002b0a:	f000 b813 	b.w	8002b34 <_close_r>
	...

08002b10 <_write_r>:
 8002b10:	b538      	push	{r3, r4, r5, lr}
 8002b12:	4d07      	ldr	r5, [pc, #28]	; (8002b30 <_write_r+0x20>)
 8002b14:	4604      	mov	r4, r0
 8002b16:	4608      	mov	r0, r1
 8002b18:	4611      	mov	r1, r2
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	602a      	str	r2, [r5, #0]
 8002b1e:	461a      	mov	r2, r3
 8002b20:	f7fe fff0 	bl	8001b04 <_write>
 8002b24:	1c43      	adds	r3, r0, #1
 8002b26:	d102      	bne.n	8002b2e <_write_r+0x1e>
 8002b28:	682b      	ldr	r3, [r5, #0]
 8002b2a:	b103      	cbz	r3, 8002b2e <_write_r+0x1e>
 8002b2c:	6023      	str	r3, [r4, #0]
 8002b2e:	bd38      	pop	{r3, r4, r5, pc}
 8002b30:	20000238 	andcs	r0, r0, r8, lsr r2

08002b34 <_close_r>:
 8002b34:	b538      	push	{r3, r4, r5, lr}
 8002b36:	4d06      	ldr	r5, [pc, #24]	; (8002b50 <_close_r+0x1c>)
 8002b38:	2300      	movs	r3, #0
 8002b3a:	4604      	mov	r4, r0
 8002b3c:	4608      	mov	r0, r1
 8002b3e:	602b      	str	r3, [r5, #0]
 8002b40:	f7fe ffee 	bl	8001b20 <_close>
 8002b44:	1c43      	adds	r3, r0, #1
 8002b46:	d102      	bne.n	8002b4e <_close_r+0x1a>
 8002b48:	682b      	ldr	r3, [r5, #0]
 8002b4a:	b103      	cbz	r3, 8002b4e <_close_r+0x1a>
 8002b4c:	6023      	str	r3, [r4, #0]
 8002b4e:	bd38      	pop	{r3, r4, r5, pc}
 8002b50:	20000238 	andcs	r0, r0, r8, lsr r2

08002b54 <_fstat_r>:
 8002b54:	b538      	push	{r3, r4, r5, lr}
 8002b56:	4d07      	ldr	r5, [pc, #28]	; (8002b74 <_fstat_r+0x20>)
 8002b58:	2300      	movs	r3, #0
 8002b5a:	4604      	mov	r4, r0
 8002b5c:	4608      	mov	r0, r1
 8002b5e:	4611      	mov	r1, r2
 8002b60:	602b      	str	r3, [r5, #0]
 8002b62:	f7fe ffe0 	bl	8001b26 <_fstat>
 8002b66:	1c43      	adds	r3, r0, #1
 8002b68:	d102      	bne.n	8002b70 <_fstat_r+0x1c>
 8002b6a:	682b      	ldr	r3, [r5, #0]
 8002b6c:	b103      	cbz	r3, 8002b70 <_fstat_r+0x1c>
 8002b6e:	6023      	str	r3, [r4, #0]
 8002b70:	bd38      	pop	{r3, r4, r5, pc}
 8002b72:	bf00      	nop
 8002b74:	20000238 	andcs	r0, r0, r8, lsr r2

08002b78 <_isatty_r>:
 8002b78:	b538      	push	{r3, r4, r5, lr}
 8002b7a:	4d06      	ldr	r5, [pc, #24]	; (8002b94 <_isatty_r+0x1c>)
 8002b7c:	2300      	movs	r3, #0
 8002b7e:	4604      	mov	r4, r0
 8002b80:	4608      	mov	r0, r1
 8002b82:	602b      	str	r3, [r5, #0]
 8002b84:	f7fe ffd4 	bl	8001b30 <_isatty>
 8002b88:	1c43      	adds	r3, r0, #1
 8002b8a:	d102      	bne.n	8002b92 <_isatty_r+0x1a>
 8002b8c:	682b      	ldr	r3, [r5, #0]
 8002b8e:	b103      	cbz	r3, 8002b92 <_isatty_r+0x1a>
 8002b90:	6023      	str	r3, [r4, #0]
 8002b92:	bd38      	pop	{r3, r4, r5, pc}
 8002b94:	20000238 	andcs	r0, r0, r8, lsr r2

08002b98 <_lseek_r>:
 8002b98:	b538      	push	{r3, r4, r5, lr}
 8002b9a:	4d07      	ldr	r5, [pc, #28]	; (8002bb8 <_lseek_r+0x20>)
 8002b9c:	4604      	mov	r4, r0
 8002b9e:	4608      	mov	r0, r1
 8002ba0:	4611      	mov	r1, r2
 8002ba2:	2200      	movs	r2, #0
 8002ba4:	602a      	str	r2, [r5, #0]
 8002ba6:	461a      	mov	r2, r3
 8002ba8:	f7fe ffc4 	bl	8001b34 <_lseek>
 8002bac:	1c43      	adds	r3, r0, #1
 8002bae:	d102      	bne.n	8002bb6 <_lseek_r+0x1e>
 8002bb0:	682b      	ldr	r3, [r5, #0]
 8002bb2:	b103      	cbz	r3, 8002bb6 <_lseek_r+0x1e>
 8002bb4:	6023      	str	r3, [r4, #0]
 8002bb6:	bd38      	pop	{r3, r4, r5, pc}
 8002bb8:	20000238 	andcs	r0, r0, r8, lsr r2

08002bbc <__malloc_lock>:
 8002bbc:	4801      	ldr	r0, [pc, #4]	; (8002bc4 <__malloc_lock+0x8>)
 8002bbe:	f7ff bb1d 	b.w	80021fc <__retarget_lock_acquire_recursive>
 8002bc2:	bf00      	nop
 8002bc4:	2000022c 	andcs	r0, r0, ip, lsr #4

08002bc8 <__malloc_unlock>:
 8002bc8:	4801      	ldr	r0, [pc, #4]	; (8002bd0 <__malloc_unlock+0x8>)
 8002bca:	f7ff bb18 	b.w	80021fe <__retarget_lock_release_recursive>
 8002bce:	bf00      	nop
 8002bd0:	2000022c 	andcs	r0, r0, ip, lsr #4

08002bd4 <_read_r>:
 8002bd4:	b538      	push	{r3, r4, r5, lr}
 8002bd6:	4d07      	ldr	r5, [pc, #28]	; (8002bf4 <_read_r+0x20>)
 8002bd8:	4604      	mov	r4, r0
 8002bda:	4608      	mov	r0, r1
 8002bdc:	4611      	mov	r1, r2
 8002bde:	2200      	movs	r2, #0
 8002be0:	602a      	str	r2, [r5, #0]
 8002be2:	461a      	mov	r2, r3
 8002be4:	f7fe ff7e 	bl	8001ae4 <_read>
 8002be8:	1c43      	adds	r3, r0, #1
 8002bea:	d102      	bne.n	8002bf2 <_read_r+0x1e>
 8002bec:	682b      	ldr	r3, [r5, #0]
 8002bee:	b103      	cbz	r3, 8002bf2 <_read_r+0x1e>
 8002bf0:	6023      	str	r3, [r4, #0]
 8002bf2:	bd38      	pop	{r3, r4, r5, pc}
 8002bf4:	20000238 	andcs	r0, r0, r8, lsr r2

08002bf8 <_init>:
 8002bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bfa:	bf00      	nop
 8002bfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bfe:	bc08      	pop	{r3}
 8002c00:	469e      	mov	lr, r3
 8002c02:	4770      	bx	lr

08002c04 <_fini>:
 8002c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c06:	bf00      	nop
 8002c08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c0a:	bc08      	pop	{r3}
 8002c0c:	469e      	mov	lr, r3
 8002c0e:	4770      	bx	lr

Disassembly of section .rodata:

08002c10 <__func__.0-0x20>:
 8002c10:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8002c14:	20736920 	rsbscs	r6, r3, r0, lsr #18
 8002c18:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
 8002c1c:	0000000a 	andeq	r0, r0, sl
 8002c20:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 8002c24:	6571206f 	ldrbvs	r2, [r1, #-111]!	; 0xffffff91
 8002c28:	0d2e756d 	cfstr32eq	mvfx7, [lr, #-436]!	; 0xfffffe4c
 8002c2c:	00000000 	andeq	r0, r0, r0

08002c30 <__func__.0>:
 8002c30:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c34:	00000035 	andeq	r0, r0, r5, lsr r0

08002c38 <__func__.1>:
 8002c38:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c3c:	00000034 	andeq	r0, r0, r4, lsr r0

08002c40 <__func__.2>:
 8002c40:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c44:	00000033 	andeq	r0, r0, r3, lsr r0

08002c48 <__func__.3>:
 8002c48:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c4c:	00000032 	andeq	r0, r0, r2, lsr r0

08002c50 <__func__.4>:
 8002c50:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c54:	00000031 	andeq	r0, r0, r1, lsr r0

08002c58 <__func__.5>:
 8002c58:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c5c:	00000030 	andeq	r0, r0, r0, lsr r0

08002c60 <__func__.0>:
 8002c60:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
 8002c64:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
 8002c68:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8002c6c:	00000064 	andeq	r0, r0, r4, rrx

08002c70 <__func__.1>:
 8002c70:	6f727245 	svcvs	0x00727245
 8002c74:	61485f72 	hvcvs	34290	; 0x85f2
 8002c78:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c7c:	00000072 	andeq	r0, r0, r2, ror r0

08002c80 <__func__.2>:
 8002c80:	67617355 			; <UNDEFINED> instruction: 0x67617355
 8002c84:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
 8002c88:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8002c8c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 8002c90:	00007265 	andeq	r7, r0, r5, ror #4

08002c94 <__func__.3>:
 8002c94:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 8002c98:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 8002c9c:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 8002ca0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 8002ca4:	00000000 	andeq	r0, r0, r0

08002ca8 <__func__.4>:
 8002ca8:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
 8002cac:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 8002cb0:	61485f65 	cmpvs	r8, r5, ror #30
 8002cb4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002cb8:	00000072 	andeq	r0, r0, r2, ror r0

08002cbc <__func__.6>:
 8002cbc:	5f494d4e 	svcpl	0x00494d4e
 8002cc0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 8002cc4:	0072656c 	rsbseq	r6, r2, ip, ror #10
 8002cc8:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002cd0 <__func__.6+0x14>
 8002ccc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002cd0:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002cd4:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cd8:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cdc:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002ce0:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002ce4:	2f726576 	svccs	0x00726576
 8002ce8:	2f637253 	svccs	0x00637253
 8002cec:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002cf0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002cf4:	61685f78 	smcvs	34296	; 0x85f8
 8002cf8:	61755f6c 	cmnvs	r5, ip, ror #30
 8002cfc:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 8002d00:	00000000 	andeq	r0, r0, r0
 8002d04:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002d0c <__func__.6+0x50>
 8002d08:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002d0c:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002d10:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002d14:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002d18:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002d1c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002d20:	2f726576 	svccs	0x00726576
 8002d24:	2f637253 	svccs	0x00637253
 8002d28:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d2c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d30:	61685f78 	smcvs	34296	; 0x85f8
 8002d34:	70675f6c 	rsbvc	r5, r7, ip, ror #30
 8002d38:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 8002d3c:	00000000 	andeq	r0, r0, r0
 8002d40:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002d48 <__func__.6+0x8c>
 8002d44:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002d48:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002d4c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002d50:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002d54:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002d58:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002d5c:	2f726576 	svccs	0x00726576
 8002d60:	2f637253 	svccs	0x00637253
 8002d64:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d68:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d6c:	61685f78 	smcvs	34296	; 0x85f8
 8002d70:	6f635f6c 	svcvs	0x00635f6c
 8002d74:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 8002d78:	0000632e 	andeq	r6, r0, lr, lsr #6

08002d7c <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 8002d7c:	00000000 	andeq	r0, r0, r0
 8002d80:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8002d84:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
 8002d88:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
 8002d8c:	3a4e5255 	bcc	93976e8 <_siccmram+0x1394510>
 8002d90:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8002d94:	20583830 	subscs	r3, r8, r0, lsr r8
 8002d98:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002d9c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002da0:	61745320 	cmnvs	r4, r0, lsr #6
 8002da4:	5b3a6b63 	blpl	8e9db38 <_siccmram+0xe9a960>
 8002da8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002dac:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002db0:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002db4:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002db8:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002dbc:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002dc0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002dc4:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
 8002dc8:	5b3a2074 	blpl	8e8afa0 <_siccmram+0xe87dc8>
 8002dcc:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002dd0:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002dd4:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002dd8:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002ddc:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002de0:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002de4:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002de8:	61745320 	cmnvs	r4, r0, lsr #6
 8002dec:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
 8002df0:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
 8002df4:	6f442068 	svcvs	0x00442068
 8002df8:	61776e77 	cmnvs	r7, r7, ror lr
 8002dfc:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
 8002e00:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002e04:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
 8002e08:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 8002e0c:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
 8002e10:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
 8002e14:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8002e18:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
 8002e1c:	20706d75 	rsbscs	r6, r0, r5, ror sp
 8002e20:	0000000d 	andeq	r0, r0, sp
 8002e24:	61745320 	cmnvs	r4, r0, lsr #6
 8002e28:	46206b63 	strtmi	r6, [r0], -r3, ror #22
 8002e2c:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8002e30:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
 8002e34:	00000000 	andeq	r0, r0, r0
 8002e38:	20305220 	eorscs	r5, r0, r0, lsr #4
 8002e3c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e40:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e44:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e48:	0000000a 	andeq	r0, r0, sl
 8002e4c:	20315220 	eorscs	r5, r1, r0, lsr #4
 8002e50:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e54:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e58:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e5c:	0000000a 	andeq	r0, r0, sl
 8002e60:	20325220 	eorscs	r5, r2, r0, lsr #4
 8002e64:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e68:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e6c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e70:	0000000a 	andeq	r0, r0, sl
 8002e74:	20335220 	eorscs	r5, r3, r0, lsr #4
 8002e78:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e7c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e80:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e84:	0000000a 	andeq	r0, r0, sl
 8002e88:	20345220 	eorscs	r5, r4, r0, lsr #4
 8002e8c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e90:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e94:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e98:	0000000a 	andeq	r0, r0, sl
 8002e9c:	20355220 	eorscs	r5, r5, r0, lsr #4
 8002ea0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ea4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ea8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002eac:	0000000a 	andeq	r0, r0, sl
 8002eb0:	20365220 	eorscs	r5, r6, r0, lsr #4
 8002eb4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002eb8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ebc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ec0:	0000000a 	andeq	r0, r0, sl
 8002ec4:	20375220 	eorscs	r5, r7, r0, lsr #4
 8002ec8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ecc:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ed0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ed4:	0000000a 	andeq	r0, r0, sl
 8002ed8:	20385220 	eorscs	r5, r8, r0, lsr #4
 8002edc:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ee0:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ee4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ee8:	0000000a 	andeq	r0, r0, sl
 8002eec:	20395220 	eorscs	r5, r9, r0, lsr #4
 8002ef0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ef4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ef8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002efc:	0000000a 	andeq	r0, r0, sl
 8002f00:	30315220 	eorscc	r5, r1, r0, lsr #4
 8002f04:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f08:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f0c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f10:	0000000a 	andeq	r0, r0, sl
 8002f14:	31315220 	teqcc	r1, r0, lsr #4
 8002f18:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f1c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f24:	0000000a 	andeq	r0, r0, sl
 8002f28:	32315220 	eorscc	r5, r1, #32, 4
 8002f2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f30:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f38:	0000000a 	andeq	r0, r0, sl
 8002f3c:	20524c20 	subscs	r4, r2, r0, lsr #24
 8002f40:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f44:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f4c:	0000000a 	andeq	r0, r0, sl
 8002f50:	20435020 	subcs	r5, r3, r0, lsr #32
 8002f54:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f58:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f60:	0000000a 	andeq	r0, r0, sl
 8002f64:	52535020 	subspl	r5, r3, #32
 8002f68:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f6c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f74:	0000000a 	andeq	r0, r0, sl
 8002f78:	61745320 	cmnvs	r4, r0, lsr #6
 8002f7c:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
 8002f80:	3a6c6c61 	bcc	9b1e10c <_siccmram+0x1b1af34>
 8002f84:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f88:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002f8c:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f90:	00000d20 	andeq	r0, r0, r0, lsr #26
 8002f94:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002f98:	65522032 	ldrbvs	r2, [r2, #-50]	; 0xffffffce
 8002f9c:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002fa0:	61745320 	cmnvs	r4, r0, lsr #6
 8002fa4:	53206b63 			; <UNDEFINED> instruction: 0x53206b63
 8002fa8:	63656c65 	cmnvs	r5, #25856	; 0x6500
 8002fac:	3a2e2e74 	bcc	8b8e984 <_siccmram+0xb8b7ac>
 8002fb0:	00000000 	andeq	r0, r0, r0
 8002fb4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fb8:	50535020 	subspl	r5, r3, r0, lsr #32
 8002fbc:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8002fc0:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8002fc4:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8002fc8:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
 8002fcc:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fd0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fd4:	50534d20 	subspl	r4, r3, r0, lsr #26
 8002fd8:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8002fdc:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8002fe0:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8002fe4:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
 8002fe8:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fec:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002ff0:	65522033 	ldrbvs	r2, [r2, #-51]	; 0xffffffcd
 8002ff4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002ff8:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8003000 <APBPrescTable+0x284>
 8002ffc:	65532065 	ldrbvs	r2, [r3, #-101]	; 0xffffff9b
 8003000:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 8003004:	3a2e2e2e 	bcc	8b8e8c4 <_siccmram+0xb8b6ec>
 8003008:	00000000 	andeq	r0, r0, r0
 800300c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003010:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
 8003014:	20646165 	rsbcs	r6, r4, r5, ror #2
 8003018:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 800301c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
 8003020:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
 8003024:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003028:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 800302c:	6f725020 	svcvs	0x00725020
 8003030:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
 8003034:	646f4d20 	strbtvs	r4, [pc], #-3360	; 800303c <APBPrescTable+0x2c0>
 8003038:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
 800303c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
 8003040:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003044:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8003048:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
 800304c:	206b6361 	rsbcs	r6, fp, r1, ror #6
 8003050:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
 8003054:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
 8003058:	2e2e6570 	mcrcs	5, 1, r6, cr14, cr0, {3}
 800305c:	3a2e2e2e 	bcc	8b8e91c <_siccmram+0xb8b744>
 8003060:	00000000 	andeq	r0, r0, r0
 8003064:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003068:	57203820 	strpl	r3, [r0, -r0, lsr #16]!
 800306c:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
 8003070:	61724620 	cmnvs	r2, r0, lsr #12
 8003074:	2e2e656d 	cfsh64cs	mvdx6, mvdx14, #61
 8003078:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
 800307c:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003080:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003084:	20363220 	eorscs	r3, r6, r0, lsr #4
 8003088:	6c726f57 	ldclvs	15, cr6, [r2], #-348	; 0xfffffea4
 800308c:	72462064 	subvc	r2, r6, #100	; 0x64
 8003090:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
 8003094:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
 8003098:	00000d2e 	andeq	r0, r0, lr, lsr #26
 800309c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 80030a0:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
 80030a4:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
 80030a8:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80030ac:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
 80030b0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 80030b4:	00000a0d 	andeq	r0, r0, sp, lsl #20

080030b8 <_global_impure_ptr>:
 80030b8:	20000018 	andcs	r0, r0, r8, lsl r0

080030bc <__sf_fake_stderr>:
	...

080030dc <__sf_fake_stdin>:
	...

080030fc <__sf_fake_stdout>:
	...
 800311c:	2b302d23 	blcs	8c0e5b0 <_siccmram+0xc0b3d8>
 8003120:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
 8003124:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
 8003128:	47464567 	strbmi	r4, [r6, -r7, ror #10]
 800312c:	32313000 	eorscc	r3, r1, #0
 8003130:	36353433 			; <UNDEFINED> instruction: 0x36353433
 8003134:	41393837 	teqmi	r9, r7, lsr r8
 8003138:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 800313c:	31300046 	teqcc	r0, r6, asr #32
 8003140:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8003144:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 8003148:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 800314c:	00006665 	andeq	r6, r0, r5, ror #12

Disassembly of section .ARM:

08003150 <__exidx_start>:
 8003150:	7fffd1a0 	svcvc	0x00ffd1a0
 8003154:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

08003158 <__frame_dummy_init_array_entry>:
 8003158:	080001b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8}

Disassembly of section .fini_array:

0800315c <__do_global_dtors_aux_fini_array_entry>:
 800315c:	08000191 	stmdaeq	r0, {r0, r4, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <fd_msp_stack_parser>:
static volatile stack_parser_t fd_msp_stack_parser = fault_dump_callstack;
2000000c:	08001721 	stmdaeq	r0, {r0, r5, r8, r9, sl, ip}

20000010 <fd_psp_stack_parser>:
static volatile stack_parser_t fd_psp_stack_parser = fault_dump_callstack;
20000010:	08001721 	stmdaeq	r0, {r0, r5, r8, r9, sl, ip}

20000014 <_impure_ptr>:
20000014:	20000018 	andcs	r0, r0, r8, lsl r0

20000018 <impure_data>:
20000018:	00000000 	andeq	r0, r0, r0
2000001c:	080030dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, sp}
20000020:	080030fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip, sp}
20000024:	080030bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip, sp}
	...

Disassembly of section .bss:

20000078 <__bss_start__>:
20000078:	00000000 	andeq	r0, r0, r0

2000007c <object.0>:
	...

20000094 <huart1>:
	...

200000dc <uwTick>:
__IO uint32_t uwTick;
200000dc:	00000000 	andeq	r0, r0, r0

200000e0 <buffer.0>:
	...

200001e0 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
200001e0:	00000000 	andeq	r0, r0, r0

200001e4 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
200001e4:	00000000 	andeq	r0, r0, r0

200001e8 <frame.1>:
	...

20000228 <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
20000228:	00000000 	andeq	r0, r0, r0

2000022c <__lock___malloc_recursive_mutex>:
	...

2000022d <__lock___sfp_recursive_mutex>:
	...

2000022e <__lock___sinit_recursive_mutex>:
	...

20000230 <__malloc_free_list>:
20000230:	00000000 	andeq	r0, r0, r0

20000234 <__malloc_sbrk_start>:
20000234:	00000000 	andeq	r0, r0, r0

20000238 <errno>:
20000238:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

2000023c <_end-0x4>:
2000023c:	00000000 	andeq	r0, r0, r0

20000240 <_end>:
	...

20000a40 <_sstack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
  errno = EAGAIN;
  return -1;
}

int _execve(char *name, char **argv, char **env)
{
   0:	00002f41 	andeq	r2, r0, r1, asr #30
  (void)name;
  (void)argv;
  (void)env;
  errno = ENOMEM;
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
  return -1;
}
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  while (1)
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
}
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6
    PA10     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);

    /* USART1 interrupt Deinit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }
}
  28:	011b011a 	tsteq	fp, sl, lsl r1
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
{
       0:	00000e5b 	andeq	r0, r0, fp, asr lr
  errno = ENOMEM;
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000519 	andeq	r0, r0, r9, lsl r5
      10:	0003170c 	andeq	r1, r3, ip, lsl #14
      14:	00082200 	andeq	r2, r8, r0, lsl #4
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000050d 	andeq	r0, r0, sp, lsl #10
      30:	00007203 	andeq	r7, r0, r3, lsl #4
    if (status != HAL_OK)
      34:	182b0200 	stmdane	fp!, {r9}
      uwTickFreq = prevTickFreq;
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	0b080102 	bleq	20044c <_Min_Heap_Size+0x1ffc4c>
      40:	02000005 	andeq	r0, r0, #5
      44:	05d30502 	ldrbeq	r0, [r3, #1282]	; 0x502
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      
      if (pllsource != 0)
      48:	9a030000 	bls	c0050 <_Min_Heap_Size+0xbf850>
      4c:	02000006 	andeq	r0, r0, #6
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00561939 	subseq	r1, r6, r9, lsr r9
      54:	02020000 	andeq	r0, r2, #0
      58:	00033707 	andeq	r3, r3, r7, lsl #14
      5c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
      64:	00029103 	andeq	r9, r2, r3, lsl #2
      68:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      SystemCoreClock = pllvco/pllp;
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	bf070402 	svclt	0x00070402
      break;
      74:	02000000 	andeq	r0, r0, #0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	02ad0508 	adceq	r0, sp, #8, 10	; 0x2000000
      7c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      80:	0000ba07 	andeq	fp, r0, r7, lsl #20
      84:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      88:	00746e69 	rsbseq	r6, r4, r9, ror #28
      8c:	c4070402 	strgt	r0, [r7], #-1026	; 0xfffffbfe
      90:	03000000 	movweq	r0, #0
      94:	00000074 	andeq	r0, r0, r4, ror r0
      98:	30131803 	andscc	r1, r3, r3, lsl #16
      9c:	05000000 	streq	r0, [r0, #-0]
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
        Error_Handler();
    }
}
      a0:	00000093 	muleq	r0, r3, r0
      a4:	00069c03 	andeq	r9, r6, r3, lsl #24
      a8:	14240300 	strtne	r0, [r4], #-768	; 0xfffffd00
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	0000004a 	andeq	r0, r0, sl, asr #32
      b0:	0000a406 	andeq	sl, r0, r6, lsl #8
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	02930300 	addseq	r0, r3, #0, 6
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	30030000 	andcc	r0, r3, r0
      bc:	00006414 	andeq	r6, r0, r4, lsl r4
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00b50600 	adcseq	r0, r5, r0, lsl #12
      c4:	b5070000 	strlt	r0, [r7, #-0]
      c8:	d6000000 	strle	r0, [r0], -r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      d0:	0000008c 	andeq	r0, r0, ip, lsl #1
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	18090001 	stmdane	r9, {r0}
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	09014404 	stmdbeq	r1, {r2, sl, lr}
      dc:	00000140 	andeq	r0, r0, r0, asr #2
      e0:	0052430a 	subseq	r4, r2, sl, lsl #6
    if (huart->hdmarx != NULL)
      e4:	11014604 	tstne	r1, r4, lsl #12
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	000000c1 	andeq	r0, r0, r1, asr #1
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0b002302 	bleq	8cfc <_Min_Heap_Size+0x84fc>
      f0:	000006fa 	strdeq	r0, [r0], -sl
    huart->TxXferCount = 0x00U;
      f4:	11014704 	tstne	r1, r4, lsl #14
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	000000c1 	andeq	r0, r0, r1, asr #1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0a042302 	beq	108d0c <_Min_Heap_Size+0x10850c>
    huart->RxState = HAL_UART_STATE_READY;
     100:	00524150 	subseq	r4, r2, r0, asr r1
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	11014804 	tstne	r1, r4, lsl #16
    HAL_UART_AbortCpltCallback(huart);
     108:	000000c1 	andeq	r0, r0, r1, asr #1
     10c:	0b082302 	bleq	208d1c <_Min_Heap_Size+0x20851c>
  uint32_t AbortCplt = 0x01U;
     110:	0000004e 	andeq	r0, r0, lr, asr #32
  if (AbortCplt == 0x01U)
     114:	11014904 	tstne	r1, r4, lsl #18
}
     118:	000000c1 	andeq	r0, r0, r1, asr #1
     11c:	0b0c2302 	bleq	308d2c <_Min_Heap_Size+0x30852c>
     120:	0000073b 	andeq	r0, r0, fp, lsr r7
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
     124:	11014a04 	tstne	r1, r4, lsl #20
    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	000000c1 	andeq	r0, r0, r1, asr #1
     12c:	0a102302 	beq	408d3c <_Min_Heap_Size+0x40853c>
     130:	00524346 	subseq	r4, r2, r6, asr #6
     134:	11014b04 	tstne	r1, r4, lsl #22
     138:	000000c1 	andeq	r0, r0, r1, asr #1
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	00142302 	andseq	r2, r4, r2, lsl #6
     140:	0007140c 	andeq	r1, r7, ip, lsl #8
     144:	014c0400 	cmpeq	ip, r0, lsl #8
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0000d603 	andeq	sp, r0, r3, lsl #12
     14c:	04080900 	streq	r0, [r8], #-2304	; 0xfffff700
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	770901ea 	strvc	r0, [r9, -sl, ror #3]
     154:	0a000001 	beq	160 <_Min_Heap_Size-0x6a0>
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     15c:	c11101ec 	tstgt	r1, ip, ror #3

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	02000000 	andeq	r0, r0, #0
     164:	430a0023 	movwmi	r0, #40995	; 0xa023
     168:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
     16c:	c11101ed 	tstgt	r1, sp, ror #3
     170:	02000000 	andeq	r0, r0, #0

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    }
  }
}
     174:	0c000423 	cfstrseq	mvf0, [r0], {35}	; 0x23
     178:	00000199 	muleq	r0, r9, r1
     17c:	0301ee04 	movweq	lr, #7684	; 0x1e04
     180:	0000014d 	andeq	r0, r0, sp, asr #2
}
     184:	f4048809 	vst2.8	{d8-d9}, [r4], r9
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	03700901 	cmneq	r0, #16384	; 0x4000
     18c:	430a0000 	movwmi	r0, #40960	; 0xa000
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
     194:	00c11101 	sbceq	r1, r1, r1, lsl #2
     198:	23020000 	movwcs	r0, #8192	; 0x2000
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	02560b00 	subseq	r0, r6, #0, 22
     1a0:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	00c11101 	sbceq	r1, r1, r1, lsl #2
     1a8:	23020000 	movwcs	r0, #8192	; 0x2000
     1ac:	02590b04 	subseq	r0, r9, #4, 22	; 0x1000
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
     1b4:	00c11101 	sbceq	r1, r1, r1, lsl #2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	23020000 	movwcs	r0, #8192	; 0x2000
     1bc:	49430a08 	stmdbmi	r3, {r3, r9, fp}^
     1c0:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	00c11101 	sbceq	r1, r1, r1, lsl #2
     1c8:	23020000 	movwcs	r0, #8192	; 0x2000
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	01680b0c 	cmneq	r8, ip, lsl #22
     1d0:	fa040000 	blx	1001d8 <_Min_Heap_Size+0xff9d8>
     1d4:	00c11101 	sbceq	r1, r1, r1, lsl #2
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	23020000 	movwcs	r0, #8192	; 0x2000
     1dc:	06bc0b10 	ssateq	r0, #29, r0, lsl #22
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	fb040000 	blx	1001ea <_Min_Heap_Size+0xff9ea>
     1e4:	00c11101 	sbceq	r1, r1, r1, lsl #2
     1e8:	23020000 	movwcs	r0, #8192	; 0x2000
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	03740b14 	cmneq	r4, #20, 22	; 0x5000
     1f0:	fc040000 	stc2	0, cr0, [r4], {-0}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	00c11101 	sbceq	r1, r1, r1, lsl #2
     1f8:	23020000 	movwcs	r0, #8192	; 0x2000
     1fc:	04a60b18 	strteq	r0, [r6], #2840	; 0xb18
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	fd040000 	stc2	0, cr0, [r4, #-0]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00b51101 	adcseq	r1, r5, r1, lsl #2
     208:	23020000 	movwcs	r0, #8192	; 0x2000
     20c:	049d0b1c 	ldreq	r0, [sp], #2844	; 0xb1c
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
     214:	00c11101 	sbceq	r1, r1, r1, lsl #2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	23020000 	movwcs	r0, #8192	; 0x2000
     21c:	01e80b20 	mvneq	r0, r0, lsr #22
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	ff040000 			; <UNDEFINED> instruction: 0xff040000
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	00c11101 	sbceq	r1, r1, r1, lsl #2
     228:	23020000 	movwcs	r0, #8192	; 0x2000
  tmp = hdma->Instance->FCR;
     22c:	04b00b24 	ldrteq	r0, [r0], #2852	; 0xb24
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00040000 	andeq	r0, r4, r0
  tmp |= hdma->Init.FIFOMode;
     234:	00c61102 	sbceq	r1, r6, r2, lsl #2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	23020000 	movwcs	r0, #8192	; 0x2000
    tmp |= hdma->Init.FIFOThreshold;
     23c:	080e0b28 	stmdaeq	lr, {r3, r5, r8, r9, fp}
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	01040000 	mrseq	r0, (UNDEF: 4)
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00c11102 	sbceq	r1, r1, r2, lsl #2
     248:	23020000 	movwcs	r0, #8192	; 0x2000
  hdma->Instance->FCR = tmp;
     24c:	07270b30 			; <UNDEFINED> instruction: 0x07270b30
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	02040000 	andeq	r0, r4, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00c11102 	sbceq	r1, r1, r2, lsl #2
     258:	23020000 	movwcs	r0, #8192	; 0x2000
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	043f0b34 	ldrteq	r0, [pc], #-2868	; 264 <_Min_Heap_Size-0x59c>
  hdma->State = HAL_DMA_STATE_READY;
     260:	03040000 	movweq	r0, #16384	; 0x4000
     264:	00c11102 	sbceq	r1, r1, r2, lsl #2
  return HAL_OK;
     268:	23020000 	movwcs	r0, #8192	; 0x2000
     26c:	04ba0b38 	ldrteq	r0, [sl], #2872	; 0xb38
     270:	04040000 	streq	r0, [r4], #-0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00b51102 	adcseq	r1, r5, r2, lsl #2
     278:	23020000 	movwcs	r0, #8192	; 0x2000
     27c:	065c0b3c 			; <UNDEFINED> instruction: 0x065c0b3c
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	05040000 	streq	r0, [r4, #-0]
        hdma->State = HAL_DMA_STATE_READY;
     284:	00c11102 	sbceq	r1, r1, r2, lsl #2
        return HAL_ERROR; 
     288:	23020000 	movwcs	r0, #8192	; 0x2000
    return HAL_ERROR;
     28c:	06220b40 	strteq	r0, [r2], -r0, asr #22
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	06040000 	streq	r0, [r4], -r0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00c11102 	sbceq	r1, r1, r2, lsl #2
     298:	23020000 	movwcs	r0, #8192	; 0x2000
      tickstart = HAL_GetTick();
     29c:	04c40b44 	strbeq	r0, [r4], #2884	; 0xb44
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	07040000 	streq	r0, [r4, -r0]
     2a4:	00c61102 	sbceq	r1, r6, r2, lsl #2
     2a8:	23020000 	movwcs	r0, #8192	; 0x2000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	01320b48 	teqeq	r2, r8, asr #22
     2b0:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
     2b4:	00c11102 	sbceq	r1, r1, r2, lsl #2
          return HAL_TIMEOUT;
     2b8:	23020000 	movwcs	r0, #8192	; 0x2000
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	04790b50 	ldrbteq	r0, [r9], #-2896	; 0xfffff4b0
     2c0:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
     2c4:	00c11102 	sbceq	r1, r1, r2, lsl #2
    FlagStatus       pwrclkchanged = RESET;
     2c8:	23020000 	movwcs	r0, #8192	; 0x2000
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	05f00b54 	ldrbeq	r0, [r0, #2900]!	; 0xb54
     2d0:	0a040000 	beq	1002d8 <_Min_Heap_Size+0xffad8>
     2d4:	00c11102 	sbceq	r1, r1, r2, lsl #2
      tickstart = HAL_GetTick();
     2d8:	23020000 	movwcs	r0, #8192	; 0x2000
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	04ce0b58 	strbeq	r0, [lr], #2904	; 0xb58
     2e0:	0b040000 	bleq	1002e8 <_Min_Heap_Size+0xffae8>
     2e4:	00b51102 	adcseq	r1, r5, r2, lsl #2
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	23020000 	movwcs	r0, #8192	; 0x2000
     2ec:	001b0b5c 	andseq	r0, fp, ip, asr fp
          return HAL_TIMEOUT;
     2f0:	0c040000 	stceq	0, cr0, [r4], {-0}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00c11102 	sbceq	r1, r1, r2, lsl #2
     2f8:	23020000 	movwcs	r0, #8192	; 0x2000
     2fc:	03b50b60 			; <UNDEFINED> instruction: 0x03b50b60
     300:	0d040000 	stceq	0, cr0, [r4, #-0]
     304:	00c11102 	sbceq	r1, r1, r2, lsl #2
     308:	23020000 	movwcs	r0, #8192	; 0x2000
     30c:	04d80b64 	ldrbeq	r0, [r8], #2916	; 0xb64
     310:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
      tickstart = HAL_GetTick();
     314:	00c61102 	sbceq	r1, r6, r2, lsl #2
     318:	23020000 	movwcs	r0, #8192	; 0x2000
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	07960b68 	ldreq	r0, [r6, r8, ror #22]
     320:	0f040000 	svceq	0x00040000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00c11102 	sbceq	r1, r1, r2, lsl #2
     328:	23020000 	movwcs	r0, #8192	; 0x2000
     32c:	53430a70 	movtpl	r0, #14960	; 0x3a70
     330:	10040052 	andne	r0, r4, r2, asr r0
          return HAL_TIMEOUT;
     334:	00c11102 	sbceq	r1, r1, r2, lsl #2
    if(pwrclkchanged == SET)
     338:	23020000 	movwcs	r0, #8192	; 0x2000
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	04e20b74 	strbteq	r0, [r2], #2932	; 0xb74
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	11040000 	mrsne	r0, (UNDEF: 4)
     344:	00c61102 	sbceq	r1, r6, r2, lsl #2
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	23020000 	movwcs	r0, #8192	; 0x2000
     34c:	07650b78 			; <UNDEFINED> instruction: 0x07650b78
     350:	12040000 	andne	r0, r4, #0
     354:	00c11102 	sbceq	r1, r1, r2, lsl #2
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	23030000 	movwcs	r0, #12288	; 0x3000
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	550b0180 	strpl	r0, [fp, #-384]	; 0xfffffe80
     360:	04000003 	streq	r0, [r0], #-3
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	c1110213 	tstgt	r1, r3, lsl r2
     368:	03000000 	movweq	r0, #0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	00018423 	andeq	r8, r1, r3, lsr #8
     370:	0001bc0c 	andeq	fp, r1, ip, lsl #24
     374:	02140400 	andseq	r0, r4, #0, 8
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00018403 	andeq	r8, r1, r3, lsl #8
     37c:	041c0900 	ldreq	r0, [ip], #-2304	; 0xfffff700
     380:	f6090295 			; <UNDEFINED> instruction: 0xf6090295
     384:	0a000003 	beq	398 <_Min_Heap_Size-0x468>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
     38c:	c1110297 			; <UNDEFINED> instruction: 0xc1110297
        __HAL_RCC_PLL_DISABLE();
     390:	02000000 	andeq	r0, r0, #0
     394:	440a0023 	strmi	r0, [sl], #-35	; 0xffffffdd
        tickstart = HAL_GetTick();
     398:	98040052 	stmdals	r4, {r1, r4, r6}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00c11102 	sbceq	r1, r1, r2, lsl #2
     3a0:	23020000 	movwcs	r0, #8192	; 0x2000
     3a4:	52420a04 	subpl	r0, r2, #4, 20	; 0x4000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	99040052 	stmdbls	r4, {r1, r4, r6}
     3ac:	00c11102 	sbceq	r1, r1, r2, lsl #2
            return HAL_TIMEOUT;
     3b0:	23020000 	movwcs	r0, #8192	; 0x2000
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	52430a08 	subpl	r0, r3, #8, 20	; 0x8000
     3b8:	9a040031 	bls	100484 <_Min_Heap_Size+0xffc84>
     3bc:	00c11102 	sbceq	r1, r1, r2, lsl #2
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	23020000 	movwcs	r0, #8192	; 0x2000
     3c4:	52430a0c 	subpl	r0, r3, #12, 20	; 0xc000
     3c8:	9b040032 	blls	100498 <_Min_Heap_Size+0xffc98>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00c11102 	sbceq	r1, r1, r2, lsl #2
     3d0:	23020000 	movwcs	r0, #8192	; 0x2000
     3d4:	52430a10 	subpl	r0, r3, #16, 20	; 0x10000
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	9c040033 	stcls	0, cr0, [r4], {51}	; 0x33
     3dc:	00c11102 	sbceq	r1, r1, r2, lsl #2
     3e0:	23020000 	movwcs	r0, #8192	; 0x2000
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	01780b14 	cmneq	r8, r4, lsl fp
     3e8:	9d040000 	stcls	0, cr0, [r4, #-0]
     3ec:	00c11102 	sbceq	r1, r1, r2, lsl #2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	23020000 	movwcs	r0, #8192	; 0x2000
     3f4:	a70c0018 	smladge	ip, r8, r0, r0
     3f8:	04000003 	streq	r0, [r0], #-3
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	7d03029e 	sfmvc	f0, 4, [r3, #-632]	; 0xfffffd88
     400:	02000003 	andeq	r0, r0, #3
     404:	06640408 	strbteq	r0, [r4], -r8, lsl #8
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	070d0000 	streq	r0, [sp, -r0]
     40c:	00003c01 	andeq	r3, r0, r1, lsl #24
     410:	01270500 			; <UNDEFINED> instruction: 0x01270500
     414:	00000431 	andeq	r0, r0, r1, lsr r4
     418:	0003100e 	andeq	r1, r3, lr
     41c:	520e0000 	andpl	r0, lr, #0
     420:	01000006 	tsteq	r0, r6
     424:	0008760e 	andeq	r7, r8, lr, lsl #12
        __HAL_RCC_PLL_ENABLE();
     428:	f10e0200 			; <UNDEFINED> instruction: 0xf10e0200
     42c:	03000002 	movweq	r0, #2
        tickstart = HAL_GetTick();
     430:	01070d00 	tsteq	r7, r0, lsl #26
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0000003c 	andeq	r0, r0, ip, lsr r0
     438:	4c013205 	sfmmi	f3, 4, [r1], {5}
     43c:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000869 	andeq	r0, r0, r9, ror #16
     444:	04340e00 	ldrteq	r0, [r4], #-3584	; 0xfffff200
            return HAL_TIMEOUT;
     448:	00010000 	andeq	r0, r1, r0
  return HAL_OK;
     44c:	0001ac03 	andeq	sl, r1, r3, lsl #24
        __HAL_RCC_PLL_DISABLE();
     450:	03350500 	teqeq	r5, #0, 10
     454:	00000431 	andeq	r0, r0, r1, lsr r4
        tickstart = HAL_GetTick();
     458:	2d06180f 	stccs	8, cr1, [r6, #-60]	; 0xffffffc4
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0004bc09 	andeq	fp, r4, r9, lsl #24
     460:	008c1000 	addeq	r1, ip, r0
     464:	2f060000 	svccs	0x00060000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0000b50c 	andeq	fp, r0, ip, lsl #10
     46c:	00230200 	eoreq	r0, r3, r0, lsl #4
            return HAL_TIMEOUT;
     470:	0005fa10 	andeq	pc, r5, r0, lsl sl	; <UNPREDICTABLE>
  return HAL_OK;
     474:	0c320600 	ldceq	6, cr0, [r2], #-0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	000000b5 	strheq	r0, [r0], -r5
        pll_config = RCC->PLLCFGR;
     47c:	10042302 	andne	r2, r4, r2, lsl #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00000095 	muleq	r0, r5, r0
     484:	b50c3506 	strlt	r3, [ip, #-1286]	; 0xfffffafa
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	02000000 	andeq	r0, r0, #0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	9a100823 	bls	402520 <_Min_Heap_Size+0x401d20>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	06000000 	streq	r0, [r0], -r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00b50c38 	adcseq	r0, r5, r8, lsr ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	23020000 	movwcs	r0, #8192	; 0x2000
     49c:	009f100c 	addseq	r1, pc, ip
     4a0:	3c060000 	stccc	0, cr0, [r6], {-0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	0000b50c 	andeq	fp, r0, ip, lsl #10
     4a8:	10230200 	eorne	r0, r3, r0, lsl #4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0000a410 	andeq	sl, r0, r0, lsl r4
     4b0:	0c3f0600 	ldceq	6, cr0, [pc], #-0	; 4b8 <_Min_Heap_Size-0x348>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	000000b5 	strheq	r0, [r0], -r5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00142302 	andseq	r2, r4, r2, lsl #6
     4bc:	0007dd03 	andeq	sp, r7, r3, lsl #26
  return HAL_OK;
     4c0:	02490600 	subeq	r0, r9, #0, 12
}
     4c4:	00000458 	andeq	r0, r0, r8, asr r4
        return HAL_ERROR;
     4c8:	3107300f 	tstcc	r7, pc
        return HAL_ERROR;
     4cc:	00053b09 	andeq	r3, r5, r9, lsl #22
}
     4d0:	03871000 	orreq	r1, r7, #0
        return HAL_ERROR;
     4d4:	33070000 	movwcc	r0, #28672	; 0x7000
          return HAL_ERROR;
     4d8:	0000b50c 	andeq	fp, r0, ip, lsl #10
     4dc:	00230200 	eoreq	r0, r3, r0, lsl #4
     4e0:	0002cd10 	andeq	ip, r2, r0, lsl sp
     4e4:	0c360700 	ldceq	7, cr0, [r6], #-0
     4e8:	000000b5 	strheq	r0, [r0], -r5
     4ec:	10042302 	andne	r2, r4, r2, lsl #6
     4f0:	000000ed 	andeq	r0, r0, sp, ror #1
     4f4:	b50c3907 	strlt	r3, [ip, #-2311]	; 0xfffff6f9
     4f8:	02000000 	andeq	r0, r0, #0
     4fc:	30100823 	andscc	r0, r0, r3, lsr #16
     500:	07000002 	streq	r0, [r0, -r2]
     504:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
     508:	23020000 	movwcs	r0, #8192	; 0x2000
     50c:	0239100c 	eorseq	r1, r9, #12
     510:	3f070000 	svccc	0x00070000
     514:	0000b50c 	andeq	fp, r0, ip, lsl #10
     518:	10230200 	eorne	r0, r3, r0, lsl #4
     51c:	0001fb10 	andeq	pc, r1, r0, lsl fp	; <UNPREDICTABLE>
     520:	0c420700 	mcrreq	7, 0, r0, r2, cr0
     524:	000000b5 	strheq	r0, [r0], -r5
     528:	11142302 	tstne	r4, r2, lsl #6
     52c:	004c4c50 	subeq	r4, ip, r0, asr ip
     530:	bc164507 	cfldr32lt	mvfx4, [r6], {7}
     534:	02000004 	andeq	r0, r0, #4
     538:	03001823 	movweq	r1, #2083	; 0x823
     53c:	00000155 	andeq	r0, r0, r5, asr r1
     540:	c8024607 	stmdagt	r2, {r0, r1, r2, r9, sl, lr}
     544:	0f000004 	svceq	0x00000004
     548:	094b0714 	stmdbeq	fp, {r2, r4, r8, r9, sl}^
     54c:	0000059c 	muleq	r0, ip, r5
     550:	0007f010 	andeq	pc, r7, r0, lsl r0	; <UNPREDICTABLE>
     554:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
     558:	000000b5 	strheq	r0, [r0], -r5
     55c:	10002302 	andne	r2, r0, r2, lsl #6
     560:	000008ca 	andeq	r0, r0, sl, asr #17
     564:	b50c5007 	strlt	r5, [ip, #-7]
     568:	02000000 	andeq	r0, r0, #0
     56c:	bf100423 	svclt	0x00100423
     570:	07000003 	streq	r0, [r0, -r3]
     574:	00b50c53 	adcseq	r0, r5, r3, asr ip
     578:	23020000 	movwcs	r0, #8192	; 0x2000
     57c:	00631008 	rsbeq	r1, r3, r8
     580:	56070000 	strpl	r0, [r7], -r0
     584:	0000b50c 	andeq	fp, r0, ip, lsl #10
     588:	0c230200 	sfmeq	f0, 4, [r3], #-0
     58c:	0006d810 	andeq	sp, r6, r0, lsl r8
     590:	0c590700 	mrrceq	7, 0, r0, r9, cr0
     594:	000000b5 	strheq	r0, [r0], -r5
     598:	00102302 	andseq	r2, r0, r2, lsl #6
     59c:	00048a03 	andeq	r8, r4, r3, lsl #20
     5a0:	025c0700 	subseq	r0, ip, #0, 14
     5a4:	00000547 	andeq	r0, r0, r7, asr #10
     5a8:	3008300f 	andcc	r3, r8, pc
     5ac:	00066609 	andeq	r6, r6, r9, lsl #12
     5b0:	05031000 	streq	r1, [r3, #-0]
     5b4:	32080000 	andcc	r0, r8, #0
     5b8:	0000b50c 	andeq	fp, r0, ip, lsl #10
     5bc:	00230200 	eoreq	r0, r3, r0, lsl #4
     5c0:	00029c10 	andeq	r9, r2, r0, lsl ip
     5c4:	0c350800 	ldceq	8, cr0, [r5], #-0
     5c8:	000000b5 	strheq	r0, [r0], -r5
     5cc:	10042302 	andne	r2, r4, r2, lsl #6
     5d0:	000001f1 	strdeq	r0, [r0], -r1
     5d4:	b50c3908 	strlt	r3, [ip, #-2312]	; 0xfffff6f8
     5d8:	02000000 	andeq	r0, r0, #0
     5dc:	c5100823 	ldrgt	r0, [r0, #-2083]	; 0xfffff7dd
     5e0:	08000006 	stmdaeq	r0, {r1, r2}
     5e4:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
     5e8:	23020000 	movwcs	r0, #8192	; 0x2000
     5ec:	0740100c 	strbeq	r1, [r0, -ip]
     5f0:	3f080000 	svccc	0x00080000
     5f4:	0000b50c 	andeq	fp, r0, ip, lsl #10
     5f8:	10230200 	eorne	r0, r3, r0, lsl #4
     5fc:	00039610 	andeq	r9, r3, r0, lsl r6
     600:	0c420800 	mcrreq	8, 0, r0, r2, cr0
     604:	000000b5 	strheq	r0, [r0], -r5
     608:	10142302 	andsne	r2, r4, r2, lsl #6
     60c:	00000642 	andeq	r0, r0, r2, asr #12
     610:	b50c4508 	strlt	r4, [ip, #-1288]	; 0xfffffaf8
     614:	02000000 	andeq	r0, r0, #0
     618:	67101823 	ldrvs	r1, [r0, -r3, lsr #16]
     61c:	0800001f 	stmdaeq	r0, {r0, r1, r2, r3, r4}
     620:	00b50c4a 	adcseq	r0, r5, sl, asr #24
     624:	23020000 	movwcs	r0, #8192	; 0x2000
     628:	063e101c 			; <UNDEFINED> instruction: 0x063e101c
     62c:	4d080000 	stcmi	0, cr0, [r8, #-0]
     630:	0000b50c 	andeq	fp, r0, ip, lsl #10
     634:	20230200 	eorcs	r0, r3, r0, lsl #4
     638:	00067010 	andeq	r7, r6, r0, lsl r0
     63c:	0c520800 	mrrceq	8, 0, r0, r2, cr0
     640:	000000b5 	strheq	r0, [r0], -r5
     644:	10242302 	eorne	r2, r4, r2, lsl #6
     648:	00000204 	andeq	r0, r0, r4, lsl #4
     64c:	b50c5508 	strlt	r5, [ip, #-1288]	; 0xfffffaf8
     650:	02000000 	andeq	r0, r0, #0
     654:	cc102823 	ldcgt	8, cr2, [r0], {35}	; 0x23
     658:	08000006 	stmdaeq	r0, {r1, r2}
     65c:	00b50c5b 	adcseq	r0, r5, fp, asr ip
     660:	23020000 	movwcs	r0, #8192	; 0x2000
     664:	5303002c 	movwpl	r0, #12332	; 0x302c
     668:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     66c:	05a80260 	streq	r0, [r8, #608]!	; 0x260
     670:	070d0000 	streq	r0, [sp, -r0]
     674:	00003c01 	andeq	r3, r0, r1, lsl #24
     678:	01670800 	cmneq	r7, r0, lsl #16
     67c:	000006a5 	andeq	r0, r0, r5, lsr #13
     680:	0002d60e 	andeq	sp, r2, lr, lsl #12
     684:	db0e0000 	blle	38068c <_Min_Heap_Size+0x37fe8c>
     688:	01000003 	tsteq	r0, r3
     68c:	0005dd0e 	andeq	sp, r5, lr, lsl #26
     690:	bc0e0200 	sfmlt	f0, 4, [lr], {-0}
     694:	03000007 	movweq	r0, #7
     698:	00021c0e 	andeq	r1, r2, lr, lsl #24
     69c:	600e0400 	andvs	r0, lr, r0, lsl #8
     6a0:	05000003 	streq	r0, [r0, #-3]
     6a4:	05be0300 	ldreq	r0, [lr, #768]!	; 0x300
     6a8:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
     6ac:	00067202 	andeq	r7, r6, r2, lsl #4
     6b0:	06a50600 	strteq	r0, [r5], r0, lsl #12
     6b4:	2a120000 	bcs	4806bc <_Min_Heap_Size+0x47febc>
     6b8:	60000006 	andvs	r0, r0, r6
     6bc:	96108a08 	ldrls	r8, [r0], -r8, lsl #20
     6c0:	10000007 	andne	r0, r0, r7
     6c4:	00000447 	andeq	r0, r0, r7, asr #8
     6c8:	961f8c08 	ldrls	r8, [pc], -r8, lsl #24
     6cc:	02000007 	andeq	r0, r0, #7
     6d0:	16100023 	ldrne	r0, [r0], -r3, lsr #32
     6d4:	0800001a 	stmdaeq	r0, {r1, r3, r4}
     6d8:	06661e8e 	strbteq	r1, [r6], -lr, lsl #29
     6dc:	23020000 	movwcs	r0, #8192	; 0x2000
     6e0:	02771004 	rsbseq	r1, r7, #4
     6e4:	90080000 	andls	r0, r8, r0
     6e8:	00044c1e 	andeq	r4, r4, lr, lsl ip
     6ec:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     6f0:	0002d010 	andeq	sp, r2, r0, lsl r0
     6f4:	1e920800 	cdpne	8, 9, cr0, cr2, cr0, {0}
     6f8:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
     6fc:	10352302 	eorsne	r2, r5, r2, lsl #6
     700:	00000270 	andeq	r0, r0, r0, ror r2
     704:	9c1f9408 	cfldrsls	mvf9, [pc], {8}
     708:	02000007 	andeq	r0, r0, #7
     70c:	ac103823 	ldcge	8, cr3, [r0], {35}	; 0x23
     710:	08000008 	stmdaeq	r0, {r3}
     714:	07b02196 			; <UNDEFINED> instruction: 0x07b02196
     718:	23020000 	movwcs	r0, #8192	; 0x2000
     71c:	01c8103c 	biceq	r1, r8, ip, lsr r0
     720:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
     724:	0007b021 	andeq	fp, r7, r1, lsr #32
     728:	40230200 	eormi	r0, r3, r0, lsl #4
     72c:	00018610 	andeq	r8, r1, r0, lsl r6
     730:	219a0800 	orrscs	r0, sl, r0, lsl #16
     734:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
     738:	10442302 	subne	r2, r4, r2, lsl #6
     73c:	000004ec 	andeq	r0, r0, ip, ror #9
     740:	b0219c08 	eorlt	r9, r1, r8, lsl #24
     744:	02000007 	andeq	r0, r0, #7
     748:	50104823 	andspl	r4, r0, r3, lsr #16
     74c:	08000004 	stmdaeq	r0, {r2}
     750:	07b0219e 			; <UNDEFINED> instruction: 0x07b0219e
     754:	23020000 	movwcs	r0, #8192	; 0x2000
     758:	089a104c 	ldmeq	sl, {r2, r3, r6, ip}
     75c:	a0080000 	andge	r0, r8, r0
     760:	0007b021 	andeq	fp, r7, r1, lsr #32
     764:	50230200 	eorpl	r0, r3, r0, lsl #4
     768:	00037d10 	andeq	r7, r3, r0, lsl sp
     76c:	1ea20800 	cdpne	8, 10, cr0, cr2, cr0, {0}
     770:	000000c1 	andeq	r0, r0, r1, asr #1
     774:	10542302 	subsne	r2, r4, r2, lsl #6
     778:	0000025e 	andeq	r0, r0, lr, asr r2
     77c:	b51ea408 	ldrlt	sl, [lr, #-1032]	; 0xfffffbf8
     780:	02000000 	andeq	r0, r0, #0
     784:	04105823 	ldreq	r5, [r0], #-2083	; 0xfffff7dd
     788:	08000003 	stmdaeq	r0, {r0, r1}
     78c:	00b51ea6 	adcseq	r1, r5, r6, lsr #29
     790:	23020000 	movwcs	r0, #8192	; 0x2000
     794:	0413005c 	ldreq	r0, [r3], #-92	; 0xffffffa4
     798:	00000140 	andeq	r0, r0, r0, asr #2
     79c:	01150414 	tsteq	r5, r4, lsl r4
     7a0:	000007aa 	andeq	r0, r0, sl, lsr #15
     7a4:	0007aa16 	andeq	sl, r7, r6, lsl sl
     7a8:	04130000 	ldreq	r0, [r3], #-0
     7ac:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
     7b0:	079e0413 			; <UNDEFINED> instruction: 0x079e0413
     7b4:	2c030000 	stccs	0, cr0, [r3], {-0}
     7b8:	08000006 	stmdaeq	r0, {r1, r2}
     7bc:	06b602a8 	ldrteq	r0, [r6], r8, lsr #5
     7c0:	1c0f0000 	stcne	0, cr0, [pc], {-0}
     7c4:	35092e09 	strcc	r2, [r9, #-3593]	; 0xfffff1f7
     7c8:	10000008 	andne	r0, r0, r8
     7cc:	0000017d 	andeq	r0, r0, sp, ror r1
     7d0:	b50c3009 	strlt	r3, [ip, #-9]
     7d4:	02000000 	andeq	r0, r0, #0
     7d8:	47100023 	ldrmi	r0, [r0, -r3, lsr #32]
     7dc:	09000006 	stmdbeq	r0, {r1, r2}
     7e0:	00b50c36 	adcseq	r0, r5, r6, lsr ip
     7e4:	23020000 	movwcs	r0, #8192	; 0x2000
     7e8:	024d1004 	subeq	r1, sp, #4
     7ec:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
     7f0:	0000b50c 	andeq	fp, r0, ip, lsl #10
     7f4:	08230200 	stmdaeq	r3!, {r9}
     7f8:	0002ea10 	andeq	lr, r2, r0, lsl sl
     7fc:	0c3c0900 			; <UNDEFINED> instruction: 0x0c3c0900
     800:	000000b5 	strheq	r0, [r0], -r5
     804:	100c2302 	andne	r2, ip, r2, lsl #6
     808:	00000642 	andeq	r0, r0, r2, asr #12
     80c:	b50c4309 	strlt	r4, [ip, #-777]	; 0xfffffcf7
     810:	02000000 	andeq	r0, r0, #0
     814:	b2101023 	andslt	r1, r0, #35	; 0x23
     818:	09000007 	stmdbeq	r0, {r0, r1, r2}
     81c:	00b50c46 	adcseq	r0, r5, r6, asr #24
     820:	23020000 	movwcs	r0, #8192	; 0x2000
     824:	013c1014 	teqeq	ip, r4, lsl r0
     828:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
     82c:	0000b50c 	andeq	fp, r0, ip, lsl #10
     830:	18230200 	stmdane	r3!, {r9}
     834:	07540300 	ldrbeq	r0, [r4, -r0, lsl #6]
     838:	4b090000 	blmi	240840 <_Min_Heap_Size+0x240040>
     83c:	0007c203 	andeq	ip, r7, r3, lsl #4
     840:	01070d00 	tsteq	r7, r0, lsl #26
     844:	0000003c 	andeq	r0, r0, ip, lsr r0
     848:	80017509 	andhi	r7, r1, r9, lsl #10
     84c:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
     850:	000006ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     854:	027c0e00 	rsbseq	r0, ip, #0, 28
     858:	0e200000 	cdpeq	0, 2, cr0, cr0, cr0, {0}
     85c:	000007fa 	strdeq	r0, [r0], -sl
     860:	04620e24 	strbteq	r0, [r2], #-3620	; 0xfffff1dc
     864:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
     868:	000006a5 	andeq	r0, r0, r5, lsr #13
     86c:	041a0e22 	ldreq	r0, [sl], #-3618	; 0xfffff1de
     870:	0e230000 	cdpeq	0, 2, cr0, cr3, cr0, {0}
     874:	0000079b 	muleq	r0, fp, r7
     878:	060d0ea0 	streq	r0, [sp], -r0, lsr #29
     87c:	00e00000 	rsceq	r0, r0, r0
     880:	00002503 	andeq	r2, r0, r3, lsl #10
     884:	03870900 	orreq	r0, r7, #0, 18
     888:	00000841 	andeq	r0, r0, r1, asr #16
     88c:	00088006 	andeq	r8, r8, r6
     890:	076b0300 	strbeq	r0, [fp, -r0, lsl #6]!
     894:	90090000 	andls	r0, r9, r0
     898:	0000b512 	andeq	fp, r0, r2, lsl r5
     89c:	08910600 	ldmeq	r1, {r9, sl}
     8a0:	d1030000 	mrsle	r0, (UNDEF: 3)
     8a4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     8a8:	00b5129b 	umlalseq	r1, r5, fp, r2
     8ac:	a2060000 	andge	r0, r6, #0
     8b0:	12000008 	andne	r0, r0, #8
     8b4:	00000405 	andeq	r0, r0, r5, lsl #8
     8b8:	10a00948 	adcne	r0, r0, r8, asr #18
     8bc:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
     8c0:	00044710 	andeq	r4, r4, r0, lsl r7
     8c4:	22a20900 	adccs	r0, r2, #0, 18
     8c8:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
     8cc:	10002302 	andne	r2, r0, r2, lsl #6
     8d0:	00001a16 	andeq	r1, r0, r6, lsl sl
     8d4:	3521a409 	strcc	sl, [r1, #-1033]!	; 0xfffffbf7
     8d8:	02000008 	andeq	r0, r0, #8
     8dc:	dd100423 	cfldrsle	mvf0, [r0, #-140]	; 0xffffff74
     8e0:	09000001 	stmdbeq	r0, {r0}
     8e4:	09b722a6 	ldmibeq	r7!, {r1, r2, r5, r7, r9, sp}
     8e8:	23020000 	movwcs	r0, #8192	; 0x2000
     8ec:	034a1020 	movteq	r1, #40992	; 0xa020
     8f0:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
     8f4:	0000a421 	andeq	sl, r0, r1, lsr #8
     8f8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     8fc:	00014910 	andeq	r4, r1, r0, lsl r9
     900:	21aa0900 			; <UNDEFINED> instruction: 0x21aa0900
     904:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     908:	10262302 	eorne	r2, r6, r2, lsl #6
     90c:	000007d2 	ldrdeq	r0, [r0], -r2
     910:	bd22ac09 	stclt	12, cr10, [r2, #-36]!	; 0xffffffdc
     914:	02000009 	andeq	r0, r0, #9
     918:	2c102823 	ldccs	8, cr2, [r0], {35}	; 0x23
     91c:	09000003 	stmdbeq	r0, {r0, r1}
     920:	00a421ae 	adceq	r2, r4, lr, lsr #3
     924:	23020000 	movwcs	r0, #8192	; 0x2000
     928:	0816102c 	ldmdaeq	r6, {r2, r3, r5, ip}
     92c:	b0090000 	andlt	r0, r9, r0
     930:	0000b021 	andeq	fp, r0, r1, lsr #32
     934:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
     938:	00088c10 	andeq	r8, r8, r0, lsl ip
     93c:	1fb20900 	svcne	0x00b20900
     940:	0000089d 	muleq	r0, sp, r8
     944:	10302302 	eorsne	r2, r0, r2, lsl #6
     948:	00001026 	andeq	r1, r0, r6, lsr #32
     94c:	ae24b409 	cdpge	4, 2, cr11, cr4, cr9, {0}
     950:	02000008 	andeq	r0, r0, #8
     954:	83103423 	tsthi	r0, #587202560	; 0x23000000
     958:	09000004 	stmdbeq	r0, {r2}
     95c:	09c322b6 	stmibeq	r3, {r1, r2, r4, r5, r7, r9, sp}^
     960:	23020000 	movwcs	r0, #8192	; 0x2000
     964:	02a61038 	adceq	r1, r6, #56	; 0x38
     968:	b8090000 	stmdalt	r9, {}	; <UNPREDICTABLE>
     96c:	0009c322 	andeq	ip, r9, r2, lsr #6
     970:	3c230200 	sfmcc	f0, 4, [r3], #-0
     974:	00027710 	andeq	r7, r2, r0, lsl r7
     978:	21ba0900 			; <UNDEFINED> instruction: 0x21ba0900
     97c:	0000044c 	andeq	r0, r0, ip, asr #8
     980:	10402302 	subne	r2, r0, r2, lsl #6
     984:	00000171 	andeq	r0, r0, r1, ror r1
     988:	8c21bc09 	stchi	12, cr11, [r1], #-36	; 0xffffffdc
     98c:	02000008 	andeq	r0, r0, #8
     990:	7f104123 	svcvc	0x00104123
     994:	09000008 	stmdbeq	r0, {r3}
     998:	088c21c0 	stmeq	ip, {r6, r7, r8, sp}
     99c:	23020000 	movwcs	r0, #8192	; 0x2000
     9a0:	037d1042 	cmneq	sp, #66	; 0x42
     9a4:	c3090000 	movwgt	r0, #36864	; 0x9000
     9a8:	0000c121 	andeq	ip, r0, r1, lsr #2
     9ac:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
     9b0:	f6041300 			; <UNDEFINED> instruction: 0xf6041300
     9b4:	13000003 	movwne	r0, #3
     9b8:	00009f04 	andeq	r9, r0, r4, lsl #30
     9bc:	93041300 	movwls	r1, #17152	; 0x4300
     9c0:	13000000 	movwne	r0, #0
     9c4:	0007b604 	andeq	fp, r7, r4, lsl #12
     9c8:	04070300 	streq	r0, [r7], #-768	; 0xfffffd00
     9cc:	d5090000 	strle	r0, [r9, #-0]
     9d0:	0008b303 	andeq	fp, r8, r3, lsl #6
     9d4:	02fd1700 	rscseq	r1, sp, #0, 14
     9d8:	240d0000 	strcs	r0, [sp], #-0
     9dc:	0009c91b 	andeq	ip, r9, fp, lsl r9
     9e0:	02010100 	andeq	r0, r1, #0, 2
     9e4:	05140801 	ldreq	r0, [r4, #-2049]	; 0xfffff7ff
     9e8:	e3050000 	movw	r0, #20480	; 0x5000
     9ec:	18000009 	stmdane	r0, {r0, r3}
     9f0:	0006e701 	andeq	lr, r6, r1, lsl #14
     9f4:	065e0100 	ldrbeq	r0, [lr], -r0, lsl #2
     9f8:	00000001 	andeq	r0, r0, r1
	...
     a04:	0ac50100 	beq	ff140e0c <_estack+0xdf13fbcc>
     a08:	f6190000 			; <UNDEFINED> instruction: 0xf6190000
     a0c:	01000000 	mrseq	r0, (UNDEF: 0)
     a10:	053b185f 	ldreq	r1, [fp, #-2143]!	; 0xfffff7a1
     a14:	91020000 	mrsls	r0, (UNDEF: 2)
     a18:	02bb1948 	adcseq	r1, fp, #72, 18	; 0x120000
     a1c:	60010000 	andvs	r0, r1, r0
     a20:	00059c18 	andeq	r9, r5, r8, lsl ip
     a24:	b4910300 	ldrlt	r0, [r1], #768	; 0x300
     a28:	00001a7f 	andeq	r1, r0, pc, ror sl
     a2c:	00000000 	andeq	r0, r0, r0
     a30:	0a470000 	beq	11c0a38 <_Min_Heap_Size+0x11c0238>
     a34:	a5190000 	ldrge	r0, [r9, #-0]
     a38:	01000001 	tsteq	r0, r1
     a3c:	00c10564 	sbceq	r0, r1, r4, ror #10
     a40:	91030000 	mrsls	r0, (UNDEF: 3)
     a44:	1a007fac 	bne	208fc <_Min_Heap_Size+0x200fc>
	...
     a50:	00000a65 	andeq	r0, r0, r5, ror #20
     a54:	0001a519 	andeq	sl, r1, r9, lsl r5
     a58:	05650100 	strbeq	r0, [r5, #-256]!	; 0xffffff00
     a5c:	000000c1 	andeq	r0, r0, r1, asr #1
     a60:	7fb09103 	svcvc	0x00b09103
     a64:	00001b00 	andeq	r1, r0, r0, lsl #22
     a68:	0da70000 	stceq	0, cr0, [r7]
     a6c:	0a840000 	beq	fe100a74 <_estack+0xde0ff834>
     a70:	011c0000 	tsteq	ip, r0
     a74:	48910250 	ldmmi	r1, {r4, r6, r9}
     a78:	0151011c 	cmpeq	r1, ip, lsl r1
     a7c:	52011c30 	andpl	r1, r1, #48, 24	; 0x3000
     a80:	00300802 	eorseq	r0, r0, r2, lsl #16
     a84:	0000001b 	andeq	r0, r0, fp, lsl r0
     a88:	000db400 	andeq	fp, sp, r0, lsl #8
     a8c:	000a9800 	andeq	r9, sl, r0, lsl #16
     a90:	50011c00 	andpl	r1, r1, r0, lsl #24
     a94:	00489102 	subeq	r9, r8, r2, lsl #2
     a98:	0000001b 	andeq	r0, r0, fp, lsl r0
     a9c:	000dc300 	andeq	ip, sp, r0, lsl #6
     aa0:	000ab200 	andeq	fp, sl, r0, lsl #4
     aa4:	50011c00 	andpl	r1, r1, r0, lsl #24
     aa8:	7fb49103 	svcvc	0x00b49103
     aac:	0151011c 	cmpeq	r1, ip, lsl r1
     ab0:	001d0035 	andseq	r0, sp, r5, lsr r0
     ab4:	d2000000 	andle	r0, r0, #0
     ab8:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
     abc:	00000000 	andeq	r0, r0, r0
     ac0:	00000dd2 	ldrdeq	r0, [r0], -r2
     ac4:	87011e00 	strhi	r1, [r1, -r0, lsl #28]
     ac8:	01000008 	tsteq	r0, r8
     acc:	8501054e 	strhi	r0, [r1, #-1358]	; 0xfffffab2
     ad0:	74000000 	strvc	r0, [r0], #-0
     ad4:	a0080006 	andge	r0, r8, r6
     ad8:	46080006 	strmi	r0, [r8], -r6
     adc:	01000000 	mrseq	r0, (UNDEF: 0)
     ae0:	00000b3a 	andeq	r0, r0, sl, lsr fp
     ae4:	00067a1d 	andeq	r7, r6, sp, lsl sl
     ae8:	000de008 	andeq	lr, sp, r8
     aec:	067e1d00 	ldrbteq	r1, [lr], -r0, lsl #26
     af0:	0dee0800 	stcleq	8, cr0, [lr]
     af4:	821d0000 	andshi	r0, sp, #0
     af8:	fc080006 	stc2	0, cr0, [r8], {6}
     afc:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
     b00:	08000686 	stmdaeq	r0, {r1, r2, r7, r9, sl}
     b04:	00000e0a 	andeq	r0, r0, sl, lsl #28
     b08:	00068a1d 	andeq	r8, r6, sp, lsl sl
     b0c:	000b3a08 	andeq	r3, fp, r8, lsl #20
     b10:	06901b00 	ldreq	r1, [r0], r0, lsl #22
     b14:	0e180800 	cdpeq	8, 1, cr0, cr8, cr0, {0}
     b18:	0b280000 	bleq	a00b20 <_Min_Heap_Size+0xa00320>
     b1c:	011c0000 	tsteq	ip, r0
     b20:	20030550 	andcs	r0, r3, r0, asr r5
     b24:	0008002c 	andeq	r0, r8, ip, lsr #32
     b28:	0006981f 	andeq	r9, r6, pc, lsl r8
     b2c:	000e2508 	andeq	r2, lr, r8, lsl #10
     b30:	50011c00 	andpl	r1, r1, r0, lsl #24
     b34:	03e80a03 	mvneq	r0, #12288	; 0x3000
     b38:	01180000 	tsteq	r8, r0
     b3c:	0000011a 	andeq	r0, r0, sl, lsl r1
     b40:	01064901 	tsteq	r6, r1, lsl #18
     b44:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
     b48:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
     b4c:	00000066 	andeq	r0, r0, r6, rrx
     b50:	000b8f01 	andeq	r8, fp, r1, lsl #30
     b54:	06042000 	streq	r2, [r4], -r0
     b58:	0b9f0000 	bleq	fe7c0b60 <_estack+0xde7bf920>
     b5c:	05010000 	streq	r0, [r1, #-0]
     b60:	002c3003 	eoreq	r3, ip, r3
     b64:	06661b08 	strbteq	r1, [r6], -r8, lsl #22
     b68:	0e330800 	cdpeq	8, 3, cr0, cr3, cr0, {0}
     b6c:	0b850000 	bleq	fe140b74 <_estack+0xde13f934>
     b70:	011c0000 	tsteq	ip, r0
     b74:	10030550 	andne	r0, r3, r0, asr r5
     b78:	1c08002c 	stcne	0, cr0, [r8], {44}	; 0x2c
     b7c:	03055101 	movweq	r5, #20737	; 0x5101
     b80:	08002c30 	stmdaeq	r0, {r4, r5, sl, fp, sp}
     b84:	066a1d00 	strbteq	r1, [sl], -r0, lsl #26
     b88:	0ba40800 	bleq	fe902b90 <_estack+0xde901950>
     b8c:	07000000 	streq	r0, [r0, -r0]
     b90:	000009ea 	andeq	r0, r0, sl, ror #19
     b94:	00000b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
     b98:	00008c08 	andeq	r8, r0, r8, lsl #24
     b9c:	05000500 	streq	r0, [r0, #-1280]	; 0xfffffb00
     ba0:	00000b8f 	andeq	r0, r0, pc, lsl #23
     ba4:	01140118 	tsteq	r4, r8, lsl r1
     ba8:	44010000 	strmi	r0, [r1], #-0
     bac:	06440106 	strbeq	r0, [r4], -r6, lsl #2
     bb0:	065c0800 	ldrbeq	r0, [ip], -r0, lsl #16
     bb4:	00860800 	addeq	r0, r6, r0, lsl #16
     bb8:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
     bbc:	2000000b 	andcs	r0, r0, fp
     bc0:	00000604 	andeq	r0, r0, r4, lsl #12
     bc4:	00000b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
     bc8:	38030501 	stmdacc	r3, {r0, r8, sl}
     bcc:	1b08002c 	blne	200c84 <_Min_Heap_Size+0x200484>
     bd0:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
     bd4:	00000e33 	andeq	r0, r0, r3, lsr lr
     bd8:	00000bef 	andeq	r0, r0, pc, ror #23
     bdc:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
     be0:	002c1003 	eoreq	r1, ip, r3
     be4:	51011c08 	tstpl	r1, r8, lsl #24
     be8:	2c380305 	ldccs	3, cr0, [r8], #-20	; 0xffffffec
     bec:	1d000800 	stcne	8, cr0, [r0, #-0]
     bf0:	08000652 	stmdaeq	r0, {r1, r4, r6, r9, sl}
     bf4:	00000bf9 	strdeq	r0, [r0], -r9
     bf8:	0e011800 	cdpeq	8, 0, cr1, cr1, cr0, {0}
     bfc:	01000001 	tsteq	r0, r1
     c00:	2c01063f 	stccs	6, cr0, [r1], {63}	; 0x3f
     c04:	44080006 	strmi	r0, [r8], #-6
     c08:	a6080006 	strge	r0, [r8], -r6
     c0c:	01000000 	mrseq	r0, (UNDEF: 0)
     c10:	00000c4e 	andeq	r0, r0, lr, asr #24
     c14:	00060420 	andeq	r0, r6, r0, lsr #8
     c18:	000b9f00 	andeq	r9, fp, r0, lsl #30
     c1c:	03050100 	movweq	r0, #20736	; 0x5100
     c20:	08002c40 	stmdaeq	r0, {r6, sl, fp, sp}
     c24:	0006361b 	andeq	r3, r6, fp, lsl r6
     c28:	000e3308 	andeq	r3, lr, r8, lsl #6
     c2c:	000c4400 	andeq	r4, ip, r0, lsl #8
     c30:	50011c00 	andpl	r1, r1, r0, lsl #24
     c34:	2c100305 	ldccs	3, cr0, [r0], {5}
     c38:	011c0800 	tsteq	ip, r0, lsl #16
     c3c:	40030551 	andmi	r0, r3, r1, asr r5
     c40:	0008002c 	andeq	r0, r8, ip, lsr #32
     c44:	00063a1d 	andeq	r3, r6, sp, lsl sl
     c48:	000c4e08 	andeq	r4, ip, r8, lsl #28
     c4c:	01180000 	tsteq	r8, r0
     c50:	00000108 	andeq	r0, r0, r8, lsl #2
     c54:	01063a01 	tsteq	r6, r1, lsl #20
     c58:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
     c5c:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
     c60:	000000c6 	andeq	r0, r0, r6, asr #1
     c64:	000ca301 	andeq	sl, ip, r1, lsl #6
     c68:	06042000 	streq	r2, [r4], -r0
     c6c:	0b9f0000 	bleq	fe7c0c74 <_estack+0xde7bfa34>
     c70:	05010000 	streq	r0, [r1, #-0]
     c74:	002c4803 	eoreq	r4, ip, r3, lsl #16
     c78:	061e1b08 	ldreq	r1, [lr], -r8, lsl #22
     c7c:	0e330800 	cdpeq	8, 3, cr0, cr3, cr0, {0}
     c80:	0c990000 	ldceq	0, cr0, [r9], {0}
     c84:	011c0000 	tsteq	ip, r0
     c88:	10030550 	andne	r0, r3, r0, asr r5
     c8c:	1c08002c 	stcne	0, cr0, [r8], {44}	; 0x2c
     c90:	03055101 	movweq	r5, #20737	; 0x5101
     c94:	08002c48 	stmdaeq	r0, {r3, r6, sl, fp, sp}
     c98:	06221d00 	strteq	r1, [r2], -r0, lsl #26
     c9c:	0ca30800 	stceq	8, cr0, [r3]
     ca0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     ca4:	00073501 	andeq	r3, r7, r1, lsl #10
     ca8:	06350100 	ldrteq	r0, [r5], -r0, lsl #2
     cac:	0005fc01 	andeq	pc, r5, r1, lsl #24
     cb0:	00061408 	andeq	r1, r6, r8, lsl #8
     cb4:	0000e608 	andeq	lr, r0, r8, lsl #12
     cb8:	0cf80100 	ldfeqe	f0, [r8]
     cbc:	04200000 	strteq	r0, [r0], #-0
     cc0:	9f000006 	svcls	0x00000006
     cc4:	0100000b 	tsteq	r0, fp
     cc8:	2c500305 	mrrccs	3, 0, r0, r0, cr5	; <UNPREDICTABLE>
     ccc:	061b0800 	ldreq	r0, [fp], -r0, lsl #16
     cd0:	33080006 	movwcc	r0, #32774	; 0x8006
     cd4:	ee00000e 	cdp	0, 0, cr0, cr0, cr14, {0}
     cd8:	1c00000c 	stcne	0, cr0, [r0], {12}
     cdc:	03055001 	movweq	r5, #20481	; 0x5001
     ce0:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}
     ce4:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     ce8:	002c5003 	eoreq	r5, ip, r3
     cec:	0a1d0008 	beq	740d14 <_Min_Heap_Size+0x740514>
     cf0:	f8080006 			; <UNDEFINED> instruction: 0xf8080006
     cf4:	0000000c 	andeq	r0, r0, ip
     cf8:	072f0118 			; <UNDEFINED> instruction: 0x072f0118
     cfc:	2f010000 	svccs	0x00010000
     d00:	05e40106 	strbeq	r0, [r4, #262]!	; 0x106
     d04:	05fc0800 	ldrbeq	r0, [ip, #2048]!	; 0x800
     d08:	01060800 	tsteq	r6, r0, lsl #16
     d0c:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
     d10:	2000000d 	andcs	r0, r0, sp
     d14:	00000604 	andeq	r0, r0, r4, lsl #12
     d18:	00000b9f 	muleq	r0, pc, fp	; <UNPREDICTABLE>
     d1c:	58030501 	stmdapl	r3, {r0, r8, sl}
     d20:	2108002c 	tstcs	r8, ip, lsr #32
     d24:	00003b01 	andeq	r3, r0, r1, lsl #22
     d28:	11310100 	teqne	r1, r0, lsl #2
     d2c:	ee1b0101 	mufe	f0, f3, f1
     d30:	33080005 	movwcc	r0, #32773	; 0x8005
     d34:	4e00000e 	cdpmi	0, 0, cr0, cr0, cr14, {0}
     d38:	1c00000d 	stcne	0, cr0, [r0], {13}
     d3c:	03055001 	movweq	r5, #20481	; 0x5001
     d40:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}
     d44:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     d48:	002c5803 	eoreq	r5, ip, r3, lsl #16
     d4c:	f21d0008 	vhadd.s16	d0, d13, d8
     d50:	41080005 	tstmi	r8, r5
     d54:	0000000e 	andeq	r0, r0, lr
     d58:	03f8011e 	mvnseq	r0, #-2147483641	; 0x80000007
     d5c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
     d60:	00850105 	addeq	r0, r5, r5, lsl #2
     d64:	05c40000 	strbeq	r0, [r4]
     d68:	05e40800 	strbeq	r0, [r4, #2048]!	; 0x800
     d6c:	01260800 			; <UNDEFINED> instruction: 0x01260800
     d70:	a7010000 	strge	r0, [r1, -r0]
     d74:	2200000d 	andcs	r0, r0, #13
     d78:	01006863 	tsteq	r0, r3, ror #16
     d7c:	00851619 	addeq	r1, r5, r9, lsl r6
     d80:	01620000 	cmneq	r2, r0
     d84:	015e0000 	cmpeq	lr, r0
     d88:	d81f0000 	ldmdale	pc, {}	; <UNPREDICTABLE>
     d8c:	4f080005 	svcmi	0x00080005
     d90:	1c00000e 	stcne	0, cr0, [r0], {14}
     d94:	91025101 	tstls	r2, r1, lsl #2
     d98:	52011c74 	andpl	r1, r1, #116, 24	; 0x7400
     d9c:	011c3101 	tsteq	ip, r1, lsl #2
     da0:	ff0a0353 			; <UNDEFINED> instruction: 0xff0a0353
     da4:	230000ff 	movwcs	r0, #255	; 0xff
     da8:	00b30101 	adcseq	r0, r3, r1, lsl #2
     dac:	00a90000 	adceq	r0, r9, r0
     db0:	000f0000 	andeq	r0, pc, r0
     db4:	7e010124 	adfvcsp	f0, f1, f4
     db8:	7e000006 	cdpvc	0, 0, cr0, cr0, cr6, {0}
     dbc:	07000006 	streq	r0, [r0, -r6]
     dc0:	241304db 	ldrcs	r0, [r3], #-1243	; 0xfffffb25
     dc4:	07820101 	streq	r0, [r2, r1, lsl #2]
     dc8:	07820000 	streq	r0, [r2, r0]
     dcc:	dc070000 	stcle	0, cr0, [r7], {-0}
     dd0:	01251304 			; <UNDEFINED> instruction: 0x01251304
     dd4:	0003cd01 	andeq	ip, r3, r1, lsl #26
     dd8:	0003cd00 	andeq	ip, r3, r0, lsl #26
     ddc:	063c0a00 	ldrteq	r0, [ip], -r0, lsl #20
     de0:	ef010125 	svc	0x00010125
     de4:	ef000003 	svc	0x00000003
     de8:	0b000003 	bleq	dfc <_Min_Heap_Size+0x5fc>
     dec:	012513db 	ldrdeq	r1, [r5, -fp]!
     df0:	0008bd01 	andeq	fp, r8, r1, lsl #26
     df4:	0008bd00 	andeq	fp, r8, r0, lsl #26
     df8:	06270c00 	strteq	r0, [r7], -r0, lsl #24
     dfc:	07010125 	streq	r0, [r1, -r5, lsr #2]
     e00:	07000000 	streq	r0, [r0, -r0]
     e04:	0d000000 	stceq	0, cr0, [r0, #-0]
     e08:	0125062a 			; <UNDEFINED> instruction: 0x0125062a
     e0c:	00007c01 	andeq	r7, r0, r1, lsl #24
     e10:	00007c00 	andeq	r7, r0, r0, lsl #24
     e14:	06480e00 	strbeq	r0, [r8], -r0, lsl #28
     e18:	17010123 	strne	r0, [r1, -r3, lsr #2]
     e1c:	0d000002 	stceq	0, cr0, [r0, #-8]
     e20:	0f000002 	svceq	0x00000002
     e24:	01012500 	tsteq	r1, r0, lsl #10
     e28:	00000690 	muleq	r0, r0, r6
     e2c:	00000690 	muleq	r0, r0, r6
     e30:	2506e90b 	strcs	lr, [r6, #-2315]	; 0xfffff6f5
     e34:	00000101 	andeq	r0, r0, r1, lsl #2
     e38:	00000000 	andeq	r0, r0, r0
     e3c:	c8100000 	ldmdagt	r0, {}	; <UNPREDICTABLE>
     e40:	01012505 	tsteq	r1, r5, lsl #10
     e44:	0000003b 	andeq	r0, r0, fp, lsr r0
     e48:	0000003b 	andeq	r0, r0, fp, lsr r0
     e4c:	24113101 	ldrcs	r3, [r1], #-257	; 0xfffffeff
     e50:	01200101 			; <UNDEFINED> instruction: 0x01200101
     e54:	01200000 			; <UNDEFINED> instruction: 0x01200000
     e58:	e9090000 	stmdb	r9, {}	; <UNPREDICTABLE>
     e5c:	bf001302 	svclt	0x00001302
     e60:	02000009 	andeq	r0, r0, #9
     e64:	00021f00 	andeq	r1, r2, r0, lsl #30
     e68:	19010400 	stmdbne	r1, {sl}
     e6c:	0c000005 	stceq	0, cr0, [r0], {5}
     e70:	00000955 	andeq	r0, r0, r5, asr r9
     e74:	00000822 	andeq	r0, r0, r2, lsr #16
     e78:	00000050 	andeq	r0, r0, r0, asr r0
	...
     e84:	00000473 	andeq	r0, r0, r3, ror r4
     e88:	0d060102 	stfeqs	f0, [r6, #-8]
     e8c:	03000005 	movweq	r0, #5
     e90:	00000072 	andeq	r0, r0, r2, ror r0
     e94:	3c182b03 			; <UNDEFINED> instruction: 0x3c182b03
     e98:	02000000 	andeq	r0, r0, #0
     e9c:	050b0801 	streq	r0, [fp, #-2049]	; 0xfffff7ff
     ea0:	02020000 	andeq	r0, r2, #0
     ea4:	0005d305 	andeq	sp, r5, r5, lsl #6
     ea8:	069a0300 	ldreq	r0, [sl], r0, lsl #6
     eac:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
     eb0:	00005619 	andeq	r5, r0, r9, lsl r6
     eb4:	07020200 	streq	r0, [r2, -r0, lsl #4]
     eb8:	00000337 	andeq	r0, r0, r7, lsr r3
     ebc:	b2050402 	andlt	r0, r5, #33554432	; 0x2000000
     ec0:	03000002 	movweq	r0, #2
     ec4:	00000291 	muleq	r0, r1, r2
     ec8:	70194f03 	andsvc	r4, r9, r3, lsl #30
     ecc:	02000000 	andeq	r0, r0, #0
     ed0:	00bf0704 	adcseq	r0, pc, r4, lsl #14
     ed4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     ed8:	0002ad05 	andeq	sl, r2, r5, lsl #26
     edc:	07080200 	streq	r0, [r8, -r0, lsl #4]
     ee0:	000000ba 	strheq	r0, [r0], -sl
     ee4:	69050404 	stmdbvs	r5, {r2, sl}
     ee8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     eec:	00c40704 	sbceq	r0, r4, r4, lsl #14
     ef0:	74030000 	strvc	r0, [r3], #-0
     ef4:	04000000 	streq	r0, [r0], #-0
     ef8:	00301318 	eorseq	r1, r0, r8, lsl r3
     efc:	93050000 	movwls	r0, #20480	; 0x5000
     f00:	03000000 	movweq	r0, #0
     f04:	0000069c 	muleq	r0, ip, r6
     f08:	4a142404 	bmi	509f20 <_Min_Heap_Size+0x509720>
     f0c:	06000000 	streq	r0, [r0], -r0
     f10:	000000a4 	andeq	r0, r0, r4, lsr #1
     f14:	00029303 	andeq	r9, r2, r3, lsl #6
     f18:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
     f1c:	00000064 	andeq	r0, r0, r4, rrx
     f20:	0000b506 	andeq	fp, r0, r6, lsl #10
     f24:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
     f28:	30090144 	andcc	r0, r9, r4, asr #2
     f2c:	08000001 	stmdaeq	r0, {r0}
     f30:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     f34:	c1110146 	tstgt	r1, r6, asr #2
     f38:	02000000 	andeq	r0, r0, #0
     f3c:	fa090023 	blx	240fd0 <_Min_Heap_Size+0x2407d0>
     f40:	05000006 	streq	r0, [r0, #-6]
     f44:	c1110147 	tstgt	r1, r7, asr #2
     f48:	02000000 	andeq	r0, r0, #0
     f4c:	50080423 	andpl	r0, r8, r3, lsr #8
     f50:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
     f54:	c1110148 	tstgt	r1, r8, asr #2
     f58:	02000000 	andeq	r0, r0, #0
     f5c:	4e090823 	cdpmi	8, 0, cr0, cr9, cr3, {1}
     f60:	05000000 	streq	r0, [r0, #-0]
     f64:	c1110149 	tstgt	r1, r9, asr #2
     f68:	02000000 	andeq	r0, r0, #0
     f6c:	3b090c23 	blcc	244000 <_Min_Heap_Size+0x243800>
     f70:	05000007 	streq	r0, [r0, #-7]
     f74:	c111014a 	tstgt	r1, sl, asr #2
     f78:	02000000 	andeq	r0, r0, #0
     f7c:	46081023 	strmi	r1, [r8], -r3, lsr #32
     f80:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     f84:	c111014b 	tstgt	r1, fp, asr #2
     f88:	02000000 	andeq	r0, r0, #0
     f8c:	0a001423 	beq	6020 <_Min_Heap_Size+0x5820>
     f90:	00000714 	andeq	r0, r0, r4, lsl r7
     f94:	03014c05 	movweq	r4, #7173	; 0x1c05
     f98:	000000c6 	andeq	r0, r0, r6, asr #1
     f9c:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
     fa0:	01b60902 			; <UNDEFINED> instruction: 0x01b60902
     fa4:	53080000 	movwpl	r0, #32768	; 0x8000
     fa8:	97050052 	smlsdls	r5, r2, r0, r0
     fac:	00c11102 	sbceq	r1, r1, r2, lsl #2
     fb0:	23020000 	movwcs	r0, #8192	; 0x2000
     fb4:	52440800 	subpl	r0, r4, #0, 16
     fb8:	02980500 	addseq	r0, r8, #0, 10
     fbc:	0000c111 	andeq	ip, r0, r1, lsl r1
     fc0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     fc4:	52524208 	subspl	r4, r2, #8, 4	; 0x80000000
     fc8:	02990500 	addseq	r0, r9, #0, 10
     fcc:	0000c111 	andeq	ip, r0, r1, lsl r1
     fd0:	08230200 	stmdaeq	r3!, {r9}
     fd4:	31524308 	cmpcc	r2, r8, lsl #6
     fd8:	029a0500 	addseq	r0, sl, #0, 10
     fdc:	0000c111 	andeq	ip, r0, r1, lsl r1
     fe0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     fe4:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
     fe8:	029b0500 	addseq	r0, fp, #0, 10
     fec:	0000c111 	andeq	ip, r0, r1, lsl r1
     ff0:	10230200 	eorne	r0, r3, r0, lsl #4
     ff4:	33524308 	cmpcc	r2, #8, 6	; 0x20000000
     ff8:	029c0500 	addseq	r0, ip, #0, 10
     ffc:	0000c111 	andeq	ip, r0, r1, lsl r1
    1000:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1004:	00017809 	andeq	r7, r1, r9, lsl #16
    1008:	029d0500 	addseq	r0, sp, #0, 10
    100c:	0000c111 	andeq	ip, r0, r1, lsl r1
    1010:	18230200 	stmdane	r3!, {r9}
    1014:	03a70a00 			; <UNDEFINED> instruction: 0x03a70a00
    1018:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    101c:	013d0302 	teqeq	sp, r2, lsl #6
    1020:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1024:	00066404 	andeq	r6, r6, r4, lsl #8
    1028:	01070b00 	tsteq	r7, r0, lsl #22
    102c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1030:	e5013206 	str	r3, [r1, #-518]	; 0xfffffdfa
    1034:	0c000001 	stceq	0, cr0, [r0], {1}
    1038:	00000869 	andeq	r0, r0, r9, ror #16
    103c:	04340c00 	ldrteq	r0, [r4], #-3072	; 0xfffff400
    1040:	00010000 	andeq	r0, r1, r0
    1044:	0001ac03 	andeq	sl, r1, r3, lsl #24
    1048:	03350600 	teqeq	r5, #0, 12
    104c:	000001ca 	andeq	r0, r0, sl, asr #3
    1050:	3007300d 	andcc	r3, r7, sp
    1054:	0002af09 	andeq	sl, r2, r9, lsl #30
    1058:	05030e00 	streq	r0, [r3, #-3584]	; 0xfffff200
    105c:	32070000 	andcc	r0, r7, #0
    1060:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1064:	00230200 	eoreq	r0, r3, r0, lsl #4
    1068:	00029c0e 	andeq	r9, r2, lr, lsl #24
    106c:	0c350700 	ldceq	7, cr0, [r5], #-0
    1070:	000000b5 	strheq	r0, [r0], -r5
    1074:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    1078:	000001f1 	strdeq	r0, [r0], -r1
    107c:	b50c3907 	strlt	r3, [ip, #-2311]	; 0xfffff6f9
    1080:	02000000 	andeq	r0, r0, #0
    1084:	c50e0823 	strgt	r0, [lr, #-2083]	; 0xfffff7dd
    1088:	07000006 	streq	r0, [r0, -r6]
    108c:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
    1090:	23020000 	movwcs	r0, #8192	; 0x2000
    1094:	07400e0c 	strbeq	r0, [r0, -ip, lsl #28]
    1098:	3f070000 	svccc	0x00070000
    109c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    10a0:	10230200 	eorne	r0, r3, r0, lsl #4
    10a4:	0003960e 	andeq	r9, r3, lr, lsl #12
    10a8:	0c420700 	mcrreq	7, 0, r0, r2, cr0
    10ac:	000000b5 	strheq	r0, [r0], -r5
    10b0:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    10b4:	00000642 	andeq	r0, r0, r2, asr #12
    10b8:	b50c4507 	strlt	r4, [ip, #-1287]	; 0xfffffaf9
    10bc:	02000000 	andeq	r0, r0, #0
    10c0:	670e1823 	strvs	r1, [lr, -r3, lsr #16]
    10c4:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    10c8:	00b50c4a 	adcseq	r0, r5, sl, asr #24
    10cc:	23020000 	movwcs	r0, #8192	; 0x2000
    10d0:	063e0e1c 			; <UNDEFINED> instruction: 0x063e0e1c
    10d4:	4d070000 	stcmi	0, cr0, [r7, #-0]
    10d8:	0000b50c 	andeq	fp, r0, ip, lsl #10
    10dc:	20230200 	eorcs	r0, r3, r0, lsl #4
    10e0:	0006700e 	andeq	r7, r6, lr
    10e4:	0c520700 	mrrceq	7, 0, r0, r2, cr0
    10e8:	000000b5 	strheq	r0, [r0], -r5
    10ec:	0e242302 	cdpeq	3, 2, cr2, cr4, cr2, {0}
    10f0:	00000204 	andeq	r0, r0, r4, lsl #4
    10f4:	b50c5507 	strlt	r5, [ip, #-1287]	; 0xfffffaf9
    10f8:	02000000 	andeq	r0, r0, #0
    10fc:	cc0e2823 	stcgt	8, cr2, [lr], {35}	; 0x23
    1100:	07000006 	streq	r0, [r0, -r6]
    1104:	00b50c5b 	adcseq	r0, r5, fp, asr ip
    1108:	23020000 	movwcs	r0, #8192	; 0x2000
    110c:	5303002c 	movwpl	r0, #12332	; 0x302c
    1110:	07000000 	streq	r0, [r0, -r0]
    1114:	01f10260 	mvnseq	r0, r0, ror #4
    1118:	070b0000 	streq	r0, [fp, -r0]
    111c:	00003c01 	andeq	r3, r0, r1, lsl #24
    1120:	01670700 	cmneq	r7, r0, lsl #14
    1124:	000002ee 	andeq	r0, r0, lr, ror #5
    1128:	0002d60c 	andeq	sp, r2, ip, lsl #12
    112c:	db0c0000 	blle	301134 <_Min_Heap_Size+0x300934>
    1130:	01000003 	tsteq	r0, r3
    1134:	0005dd0c 	andeq	sp, r5, ip, lsl #26
    1138:	bc0c0200 	sfmlt	f0, 4, [ip], {-0}
    113c:	03000007 	movweq	r0, #7
    1140:	00021c0c 	andeq	r1, r2, ip, lsl #24
    1144:	600c0400 	andvs	r0, ip, r0, lsl #8
    1148:	05000003 	streq	r0, [r0, #-3]
    114c:	05be0300 	ldreq	r0, [lr, #768]!	; 0x300
    1150:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    1154:	0002bb02 	andeq	fp, r2, r2, lsl #22
    1158:	02ee0600 	rsceq	r0, lr, #0, 12
    115c:	2a0f0000 	bcs	3c1164 <_Min_Heap_Size+0x3c0964>
    1160:	60000006 	andvs	r0, r0, r6
    1164:	df108a07 	svcle	0x00108a07
    1168:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    116c:	00000447 	andeq	r0, r0, r7, asr #8
    1170:	df1f8c07 	svcle	0x001f8c07
    1174:	02000003 	andeq	r0, r0, #3
    1178:	160e0023 	strne	r0, [lr], -r3, lsr #32
    117c:	0700001a 	smladeq	r0, sl, r0, r0
    1180:	02af1e8e 	adceq	r1, pc, #2272	; 0x8e0
    1184:	23020000 	movwcs	r0, #8192	; 0x2000
    1188:	02770e04 	rsbseq	r0, r7, #4, 28	; 0x40
    118c:	90070000 	andls	r0, r7, r0
    1190:	0001e51e 	andeq	lr, r1, lr, lsl r5
    1194:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    1198:	0002d00e 	andeq	sp, r2, lr
    119c:	1e920700 	cdpne	7, 9, cr0, cr2, cr0, {0}
    11a0:	000002fa 	strdeq	r0, [r0], -sl
    11a4:	0e352302 	cdpeq	3, 3, cr2, cr5, cr2, {0}
    11a8:	00000270 	andeq	r0, r0, r0, ror r2
    11ac:	e51f9407 	ldr	r9, [pc, #-1031]	; dad <_Min_Heap_Size+0x5ad>
    11b0:	02000003 	andeq	r0, r0, #3
    11b4:	ac0e3823 	stcge	8, cr3, [lr], {35}	; 0x23
    11b8:	07000008 	streq	r0, [r0, -r8]
    11bc:	03f92196 	mvnseq	r2, #-2147483611	; 0x80000025
    11c0:	23020000 	movwcs	r0, #8192	; 0x2000
    11c4:	01c80e3c 	biceq	r0, r8, ip, lsr lr
    11c8:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    11cc:	0003f921 	andeq	pc, r3, r1, lsr #18
    11d0:	40230200 	eormi	r0, r3, r0, lsl #4
    11d4:	0001860e 	andeq	r8, r1, lr, lsl #12
    11d8:	219a0700 	orrscs	r0, sl, r0, lsl #14
    11dc:	000003f9 	strdeq	r0, [r0], -r9
    11e0:	0e442302 	cdpeq	3, 4, cr2, cr4, cr2, {0}
    11e4:	000004ec 	andeq	r0, r0, ip, ror #9
    11e8:	f9219c07 			; <UNDEFINED> instruction: 0xf9219c07
    11ec:	02000003 	andeq	r0, r0, #3
    11f0:	500e4823 	andpl	r4, lr, r3, lsr #16
    11f4:	07000004 	streq	r0, [r0, -r4]
    11f8:	03f9219e 	mvnseq	r2, #-2147483609	; 0x80000027
    11fc:	23020000 	movwcs	r0, #8192	; 0x2000
    1200:	089a0e4c 	ldmeq	sl, {r2, r3, r6, r9, sl, fp}
    1204:	a0070000 	andge	r0, r7, r0
    1208:	0003f921 	andeq	pc, r3, r1, lsr #18
    120c:	50230200 	eorpl	r0, r3, r0, lsl #4
    1210:	00037d0e 	andeq	r7, r3, lr, lsl #26
    1214:	1ea20700 	cdpne	7, 10, cr0, cr2, cr0, {0}
    1218:	000000c1 	andeq	r0, r0, r1, asr #1
    121c:	0e542302 	cdpeq	3, 5, cr2, cr4, cr2, {0}
    1220:	0000025e 	andeq	r0, r0, lr, asr r2
    1224:	b51ea407 	ldrlt	sl, [lr, #-1031]	; 0xfffffbf9
    1228:	02000000 	andeq	r0, r0, #0
    122c:	040e5823 	streq	r5, [lr], #-2083	; 0xfffff7dd
    1230:	07000003 	streq	r0, [r0, -r3]
    1234:	00b51ea6 	adcseq	r1, r5, r6, lsr #29
    1238:	23020000 	movwcs	r0, #8192	; 0x2000
    123c:	0410005c 	ldreq	r0, [r0], #-92	; 0xffffffa4
    1240:	00000130 	andeq	r0, r0, r0, lsr r1
    1244:	01120411 	tsteq	r2, r1, lsl r4
    1248:	000003f3 	strdeq	r0, [r0], -r3
    124c:	0003f313 	andeq	pc, r3, r3, lsl r3	; <UNPREDICTABLE>
    1250:	04100000 	ldreq	r0, [r0], #-0
    1254:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1258:	03e70410 	mvneq	r0, #16, 8	; 0x10000000
    125c:	2c030000 	stccs	0, cr0, [r3], {-0}
    1260:	07000006 	streq	r0, [r0, -r6]
    1264:	02ff02a8 	rscseq	r0, pc, #168, 4	; 0x8000000a
    1268:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    126c:	7e092e08 	cdpvc	14, 0, cr2, cr9, cr8, {0}
    1270:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    1274:	0000017d 	andeq	r0, r0, sp, ror r1
    1278:	b50c3008 	strlt	r3, [ip, #-8]
    127c:	02000000 	andeq	r0, r0, #0
    1280:	470e0023 	strmi	r0, [lr, -r3, lsr #32]
    1284:	08000006 	stmdaeq	r0, {r1, r2}
    1288:	00b50c36 	adcseq	r0, r5, r6, lsr ip
    128c:	23020000 	movwcs	r0, #8192	; 0x2000
    1290:	024d0e04 	subeq	r0, sp, #4, 28	; 0x40
    1294:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    1298:	0000b50c 	andeq	fp, r0, ip, lsl #10
    129c:	08230200 	stmdaeq	r3!, {r9}
    12a0:	0002ea0e 	andeq	lr, r2, lr, lsl #20
    12a4:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    12a8:	000000b5 	strheq	r0, [r0], -r5
    12ac:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    12b0:	00000642 	andeq	r0, r0, r2, asr #12
    12b4:	b50c4308 	strlt	r4, [ip, #-776]	; 0xfffffcf8
    12b8:	02000000 	andeq	r0, r0, #0
    12bc:	b20e1023 	andlt	r1, lr, #35	; 0x23
    12c0:	08000007 	stmdaeq	r0, {r0, r1, r2}
    12c4:	00b50c46 	adcseq	r0, r5, r6, asr #24
    12c8:	23020000 	movwcs	r0, #8192	; 0x2000
    12cc:	013c0e14 	teqeq	ip, r4, lsl lr
    12d0:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    12d4:	0000b50c 	andeq	fp, r0, ip, lsl #10
    12d8:	18230200 	stmdane	r3!, {r9}
    12dc:	07540300 	ldrbeq	r0, [r4, -r0, lsl #6]
    12e0:	4b080000 	blmi	2012e8 <_Min_Heap_Size+0x200ae8>
    12e4:	00040b03 	andeq	r0, r4, r3, lsl #22
    12e8:	01070b00 	tsteq	r7, r0, lsl #22
    12ec:	0000003c 	andeq	r0, r0, ip, lsr r0
    12f0:	c9017508 	stmdbgt	r1, {r3, r8, sl, ip, sp, lr}
    12f4:	0c000004 	stceq	0, cr0, [r0], {4}
    12f8:	000006ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    12fc:	027c0c00 	rsbseq	r0, ip, #0, 24
    1300:	0c200000 	stceq	0, cr0, [r0], #-0
    1304:	000007fa 	strdeq	r0, [r0], -sl
    1308:	04620c24 	strbteq	r0, [r2], #-3108	; 0xfffff3dc
    130c:	0c210000 	stceq	0, cr0, [r1], #-0
    1310:	000006a5 	andeq	r0, r0, r5, lsr #13
    1314:	041a0c22 	ldreq	r0, [sl], #-3106	; 0xfffff3de
    1318:	0c230000 	stceq	0, cr0, [r3], #-0
    131c:	0000079b 	muleq	r0, fp, r7
    1320:	060d0ca0 	streq	r0, [sp], -r0, lsr #25
    1324:	00e00000 	rsceq	r0, r0, r0
    1328:	00002503 	andeq	r2, r0, r3, lsl #10
    132c:	03870800 	orreq	r0, r7, #0, 16
    1330:	0000048a 	andeq	r0, r0, sl, lsl #9
    1334:	0004c906 	andeq	ip, r4, r6, lsl #18
    1338:	076b0300 	strbeq	r0, [fp, -r0, lsl #6]!
    133c:	90080000 	andls	r0, r8, r0
    1340:	0000b512 	andeq	fp, r0, r2, lsl r5
    1344:	04da0600 	ldrbeq	r0, [sl], #1536	; 0x600
    1348:	d1030000 	mrsle	r0, (UNDEF: 3)
    134c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1350:	00b5129b 	umlalseq	r1, r5, fp, r2
    1354:	eb060000 	bl	18135c <_Min_Heap_Size+0x180b5c>
    1358:	0f000004 	svceq	0x00000004
    135c:	00000405 	andeq	r0, r0, r5, lsl #8
    1360:	10a00848 	adcne	r0, r0, r8, asr #16
    1364:	000005fa 	strdeq	r0, [r0], -sl
    1368:	0004470e 	andeq	r4, r4, lr, lsl #14
    136c:	22a20800 	adccs	r0, r2, #0, 16
    1370:	000005fa 	strdeq	r0, [r0], -sl
    1374:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    1378:	00001a16 	andeq	r1, r0, r6, lsl sl
    137c:	7e21a408 	cdpvc	4, 2, cr10, cr1, cr8, {0}
    1380:	02000004 	andeq	r0, r0, #4
    1384:	dd0e0423 	cfstrsle	mvf0, [lr, #-140]	; 0xffffff74
    1388:	08000001 	stmdaeq	r0, {r0}
    138c:	060022a6 	streq	r2, [r0], -r6, lsr #5
    1390:	23020000 	movwcs	r0, #8192	; 0x2000
    1394:	034a0e20 	movteq	r0, #44576	; 0xae20
    1398:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    139c:	0000a421 	andeq	sl, r0, r1, lsr #8
    13a0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    13a4:	0001490e 	andeq	r4, r1, lr, lsl #18
    13a8:	21aa0800 			; <UNDEFINED> instruction: 0x21aa0800
    13ac:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    13b0:	0e262302 	cdpeq	3, 2, cr2, cr6, cr2, {0}
    13b4:	000007d2 	ldrdeq	r0, [r0], -r2
    13b8:	0622ac08 	strteq	sl, [r2], -r8, lsl #24
    13bc:	02000006 	andeq	r0, r0, #6
    13c0:	2c0e2823 	stccs	8, cr2, [lr], {35}	; 0x23
    13c4:	08000003 	stmdaeq	r0, {r0, r1}
    13c8:	00a421ae 	adceq	r2, r4, lr, lsr #3
    13cc:	23020000 	movwcs	r0, #8192	; 0x2000
    13d0:	08160e2c 	ldmdaeq	r6, {r2, r3, r5, r9, sl, fp}
    13d4:	b0080000 	andlt	r0, r8, r0
    13d8:	0000b021 	andeq	fp, r0, r1, lsr #32
    13dc:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    13e0:	00088c0e 	andeq	r8, r8, lr, lsl #24
    13e4:	1fb20800 	svcne	0x00b20800
    13e8:	000004e6 	andeq	r0, r0, r6, ror #9
    13ec:	0e302302 	cdpeq	3, 3, cr2, cr0, cr2, {0}
    13f0:	00001026 	andeq	r1, r0, r6, lsr #32
    13f4:	f724b408 			; <UNDEFINED> instruction: 0xf724b408
    13f8:	02000004 	andeq	r0, r0, #4
    13fc:	830e3423 	movwhi	r3, #58403	; 0xe423
    1400:	08000004 	stmdaeq	r0, {r2}
    1404:	060c22b6 			; <UNDEFINED> instruction: 0x060c22b6
    1408:	23020000 	movwcs	r0, #8192	; 0x2000
    140c:	02a60e38 	adceq	r0, r6, #56, 28	; 0x380
    1410:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
    1414:	00060c22 	andeq	r0, r6, r2, lsr #24
    1418:	3c230200 	sfmcc	f0, 4, [r3], #-0
    141c:	0002770e 	andeq	r7, r2, lr, lsl #14
    1420:	21ba0800 			; <UNDEFINED> instruction: 0x21ba0800
    1424:	000001e5 	andeq	r0, r0, r5, ror #3
    1428:	0e402302 	cdpeq	3, 4, cr2, cr0, cr2, {0}
    142c:	00000171 	andeq	r0, r0, r1, ror r1
    1430:	d521bc08 	strle	fp, [r1, #-3080]!	; 0xfffff3f8
    1434:	02000004 	andeq	r0, r0, #4
    1438:	7f0e4123 	svcvc	0x000e4123
    143c:	08000008 	stmdaeq	r0, {r3}
    1440:	04d521c0 	ldrbeq	r2, [r5], #448	; 0x1c0
    1444:	23020000 	movwcs	r0, #8192	; 0x2000
    1448:	037d0e42 	cmneq	sp, #1056	; 0x420
    144c:	c3080000 	movwgt	r0, #32768	; 0x8000
    1450:	0000c121 	andeq	ip, r0, r1, lsr #2
    1454:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    1458:	b6041000 	strlt	r1, [r4], -r0
    145c:	10000001 	andne	r0, r0, r1
    1460:	00009f04 	andeq	r9, r0, r4, lsl #30
    1464:	93041000 	movwls	r1, #16384	; 0x4000
    1468:	10000000 	andne	r0, r0, r0
    146c:	0003ff04 	andeq	pc, r3, r4, lsl #30
    1470:	04070300 	streq	r0, [r7], #-768	; 0xfffffd00
    1474:	d5080000 	strle	r0, [r8, #-0]
    1478:	0004fc03 	andeq	pc, r4, r3, lsl #24
    147c:	08010200 	stmdaeq	r1, {r9}
    1480:	00000514 	andeq	r0, r0, r4, lsl r5
    1484:	00061e05 	andeq	r1, r6, r5, lsl #28
    1488:	02fd1400 	rscseq	r1, sp, #0, 8
    148c:	3b010000 	blcc	41494 <_Min_Heap_Size+0x40c94>
    1490:	0006121b 	andeq	r1, r6, fp, lsl r2
    1494:	15010100 	strne	r0, [r1, #-256]	; 0xffffff00
    1498:	00099b01 	andeq	r9, r9, r1, lsl #22
    149c:	06ec0100 	strbteq	r0, [ip], r0, lsl #2
    14a0:	00072801 	andeq	r2, r7, r1, lsl #16
    14a4:	00074008 	andeq	r4, r7, r8
    14a8:	00018108 	andeq	r8, r1, r8, lsl #2
    14ac:	06bd0100 	ldrteq	r0, [sp], r0, lsl #2
    14b0:	a9160000 	ldmdbge	r6, {}	; <UNPREDICTABLE>
    14b4:	01000009 	tsteq	r0, r9
    14b8:	06061dec 	streq	r1, [r6], -ip, ror #27
    14bc:	01a50000 			; <UNDEFINED> instruction: 0x01a50000
    14c0:	01a10000 			; <UNDEFINED> instruction: 0x01a10000
    14c4:	50160000 	andspl	r0, r6, r0
    14c8:	01000009 	tsteq	r0, r9
    14cc:	00b52cec 	adcseq	r2, r5, ip, ror #25
    14d0:	01ca0000 	biceq	r0, sl, r0
    14d4:	01c60000 	biceq	r0, r6, r0
    14d8:	04170000 	ldreq	r0, [r7], #-0
    14dc:	cd000006 	stcgt	0, cr0, [r0, #-24]	; 0xffffffe8
    14e0:	01000006 	tsteq	r0, r6
    14e4:	2c600305 	stclcs	3, cr0, [r0], #-20	; 0xffffffec
    14e8:	8c180800 	ldchi	8, cr0, [r8], {-0}
    14ec:	32000009 	andcc	r0, r0, #9
    14f0:	01080007 	tsteq	r8, r7
    14f4:	08000732 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl}
    14f8:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
    14fc:	1903ef01 	stmdbne	r3, {r0, r8, r9, sl, fp, sp, lr, pc}
    1500:	08000732 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl}
    1504:	00000997 	muleq	r0, r7, r9
    1508:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    150c:	002c1003 	eoreq	r1, ip, r3
    1510:	51011a08 	tstpl	r1, r8, lsl #20
    1514:	2c600305 	stclcs	3, cr0, [r0], #-20	; 0xffffffec
    1518:	00000800 	andeq	r0, r0, r0, lsl #16
    151c:	0006251b 	andeq	r2, r6, fp, lsl r5
    1520:	0006cd00 	andeq	ip, r6, r0, lsl #26
    1524:	008c1c00 	addeq	r1, ip, r0, lsl #24
    1528:	000d0000 	andeq	r0, sp, r0
    152c:	0006bd05 	andeq	fp, r6, r5, lsl #26
    1530:	cd011500 	cfstr32gt	mvfx1, [r1, #-0]
    1534:	01000003 	tsteq	r0, r3
    1538:	100106dd 	ldrdne	r0, [r1], -sp
    153c:	28080007 	stmdacs	r8, {r0, r1, r2}
    1540:	eb080007 	bl	201564 <_Min_Heap_Size+0x200d64>
    1544:	01000001 	tsteq	r0, r1
    1548:	0000072f 	andeq	r0, r0, pc, lsr #14
    154c:	00060417 	andeq	r0, r6, r7, lsl r4
    1550:	0006cd00 	andeq	ip, r6, r0, lsl #26
    1554:	03050100 	movweq	r0, #20736	; 0x5100
    1558:	08002c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, sp}
    155c:	00098c18 	andeq	r8, r9, r8, lsl ip
    1560:	00071a00 	andeq	r1, r7, r0, lsl #20
    1564:	071a0108 	ldreq	r0, [sl, -r8, lsl #2]
    1568:	071c0800 	ldreq	r0, [ip, -r0, lsl #16]
    156c:	e0010800 	and	r0, r1, r0, lsl #16
    1570:	071a1903 	ldreq	r1, [sl, -r3, lsl #18]
    1574:	09970800 	ldmibeq	r7, {fp}
    1578:	011a0000 	tsteq	sl, r0
    157c:	10030550 	andne	r0, r3, r0, asr r5
    1580:	1a08002c 	bne	201638 <_Min_Heap_Size+0x200e38>
    1584:	03055101 	movweq	r5, #20737	; 0x5101
    1588:	08002c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, sp}
    158c:	01150000 	tsteq	r5, r0
    1590:	00000905 	andeq	r0, r0, r5, lsl #18
    1594:	0106cd01 	tsteq	r6, r1, lsl #26
    1598:	08000700 	stmdaeq	r0, {r8, r9, sl}
    159c:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
    15a0:	0000020b 	andeq	r0, r0, fp, lsl #4
    15a4:	00075401 	andeq	r5, r7, r1, lsl #8
    15a8:	07081d00 	streq	r1, [r8, -r0, lsl #26]
    15ac:	09a50800 	stmibeq	r5!, {fp}
    15b0:	15000000 	strne	r0, [r0, #-0]
    15b4:	0009ba01 	andeq	fp, r9, r1, lsl #20
    15b8:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
    15bc:	0006f601 	andeq	pc, r6, r1, lsl #12
    15c0:	0006fe08 	andeq	pc, r6, r8, lsl #28
    15c4:	00022b08 	andeq	r2, r2, r8, lsl #22
    15c8:	07790100 	ldrbeq	r0, [r9, -r0, lsl #2]!
    15cc:	fc1d0000 	ldc2	0, cr0, [sp], {-0}
    15d0:	b4080006 	strlt	r0, [r8], #-6
    15d4:	00000009 	andeq	r0, r0, r9
    15d8:	0972011e 	ldmdbeq	r2!, {r1, r2, r3, r4, r8}^
    15dc:	ab010000 	blge	415e4 <_Min_Heap_Size+0x40de4>
    15e0:	06f40106 	ldrbteq	r0, [r4], r6, lsl #2
    15e4:	06f60800 	ldrbteq	r0, [r6], r0, lsl #16
    15e8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    15ec:	011e0100 	tsteq	lr, r0, lsl #2
    15f0:	000008e3 	andeq	r0, r0, r3, ror #17
    15f4:	01069e01 	tsteq	r6, r1, lsl #28
    15f8:	080006f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl}
    15fc:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    1600:	01007d02 	tsteq	r0, r2, lsl #26
    1604:	09ae011e 	stmibeq	lr!, {r1, r2, r3, r4, r8}
    1608:	91010000 	mrsls	r0, (UNDEF: 1)
    160c:	06f00106 	ldrbteq	r0, [r0], r6, lsl #2
    1610:	06f20800 	ldrbteq	r0, [r2], r0, lsl #16
    1614:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1618:	01150100 	tsteq	r5, r0, lsl #2
    161c:	00000917 	andeq	r0, r0, r7, lsl r9
    1620:	01068201 	tsteq	r6, r1, lsl #4
    1624:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
    1628:	080006f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl}
    162c:	0000024b 	andeq	r0, r0, fp, asr #4
    1630:	00080301 	andeq	r0, r8, r1, lsl #6
    1634:	06041700 	streq	r1, [r4], -r0, lsl #14
    1638:	08130000 	ldmdaeq	r3, {}	; <UNPREDICTABLE>
    163c:	05010000 	streq	r0, [r1, #-0]
    1640:	002c8003 	eoreq	r8, ip, r3
    1644:	06e61908 	strbteq	r1, [r6], r8, lsl #18
    1648:	09970800 	ldmibeq	r7, {fp}
    164c:	011a0000 	tsteq	sl, r0
    1650:	10030550 	andne	r0, r3, r0, asr r5
    1654:	1a08002c 	bne	20170c <_Min_Heap_Size+0x200f0c>
    1658:	03055101 	movweq	r5, #20737	; 0x5101
    165c:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    1660:	251b0000 	ldrcs	r0, [fp, #-0]
    1664:	13000006 	movwne	r0, #6
    1668:	1c000008 	stcne	0, cr0, [r0], {8}
    166c:	0000008c 	andeq	r0, r0, ip, lsl #1
    1670:	03050012 	movweq	r0, #20498	; 0x5012
    1674:	15000008 	strne	r0, [r0, #-8]
    1678:	0008f401 	andeq	pc, r8, r1, lsl #8
    167c:	06730100 	ldrbteq	r0, [r3], -r0, lsl #2
    1680:	0006c801 	andeq	ip, r6, r1, lsl #16
    1684:	0006dc08 	andeq	sp, r6, r8, lsl #24
    1688:	00026b08 	andeq	r6, r2, r8, lsl #22
    168c:	08600100 	stmdaeq	r0!, {r8}^
    1690:	04170000 	ldreq	r0, [r7], #-0
    1694:	70000006 	andvc	r0, r0, r6
    1698:	01000008 	tsteq	r0, r8
    169c:	2c940305 	ldccs	3, cr0, [r4], {5}
    16a0:	d2190800 	andsle	r0, r9, #0, 16
    16a4:	97080006 	strls	r0, [r8, -r6]
    16a8:	1a000009 	bne	16d4 <_Min_Heap_Size+0xed4>
    16ac:	03055001 	movweq	r5, #20481	; 0x5001
    16b0:	08002c10 	stmdaeq	r0, {r4, sl, fp, sp}
    16b4:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    16b8:	002c9403 	eoreq	r9, ip, r3, lsl #8
    16bc:	1b000008 	blne	16e4 <_Min_Heap_Size+0xee4>
    16c0:	00000625 	andeq	r0, r0, r5, lsr #12
    16c4:	00000870 	andeq	r0, r0, r0, ror r8
    16c8:	00008c1c 	andeq	r8, r0, ip, lsl ip
    16cc:	05001000 	streq	r1, [r0, #-0]
    16d0:	00000860 	andeq	r0, r0, r0, ror #16
    16d4:	093e0115 	ldmdbeq	lr!, {r0, r2, r4, r8}
    16d8:	64010000 	strvs	r0, [r1], #-0
    16dc:	06b40106 	ldrteq	r0, [r4], r6, lsl #2
    16e0:	06c80800 	strbeq	r0, [r8], r0, lsl #16
    16e4:	028b0800 	addeq	r0, fp, #0, 16
    16e8:	bd010000 	stclt	0, cr0, [r1, #-0]
    16ec:	17000008 	strne	r0, [r0, -r8]
    16f0:	00000604 	andeq	r0, r0, r4, lsl #12
    16f4:	000008cd 	andeq	r0, r0, sp, asr #17
    16f8:	a8030501 	stmdage	r3, {r0, r8, sl}
    16fc:	1908002c 	stmdbne	r8, {r2, r3, r5}
    1700:	080006be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, sl}
    1704:	00000997 	muleq	r0, r7, r9
    1708:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    170c:	002c1003 	eoreq	r1, ip, r3
    1710:	51011a08 	tstpl	r1, r8, lsl #20
    1714:	2ca80305 	stccs	3, cr0, [r8], #20
    1718:	00000800 	andeq	r0, r0, r0, lsl #16
    171c:	0006251b 	andeq	r2, r6, fp, lsl r5
    1720:	0008cd00 	andeq	ip, r8, r0, lsl #26
    1724:	008c1c00 	addeq	r1, ip, r0, lsl #24
    1728:	00110000 	andseq	r0, r1, r0
    172c:	0008bd05 	andeq	fp, r8, r5, lsl #26
    1730:	ca011500 	bgt	46b38 <_Min_Heap_Size+0x46338>
    1734:	01000009 	tsteq	r0, r9
    1738:	00010655 	andeq	r0, r1, r5, asr r6
    173c:	00000000 	andeq	r0, r0, r0
    1740:	ab000000 	blge	1748 <_Min_Heap_Size+0xf48>
    1744:	01000002 	tsteq	r0, r2
    1748:	0000091a 	andeq	r0, r0, sl, lsl r9
    174c:	00060417 	andeq	r0, r6, r7, lsl r4
    1750:	00092a00 	andeq	r2, r9, r0, lsl #20
    1754:	03050100 	movweq	r0, #20736	; 0x5100
    1758:	00000000 	andeq	r0, r0, r0
    175c:	00000019 	andeq	r0, r0, r9, lsl r0
    1760:	00099700 	andeq	r9, r9, r0, lsl #14
    1764:	50011a00 	andpl	r1, r1, r0, lsl #20
    1768:	2c100305 	ldccs	3, cr0, [r0], {5}
    176c:	011a0800 	tsteq	sl, r0, lsl #16
    1770:	00030551 	andeq	r0, r3, r1, asr r5
    1774:	00000000 	andeq	r0, r0, r0
    1778:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    177c:	092a0000 	stmdbeq	sl!, {}	; <UNPREDICTABLE>
    1780:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    1784:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1788:	091a0500 	ldmdbeq	sl, {r8, sl}
    178c:	01150000 	tsteq	r5, r0
    1790:	000008d7 	ldrdeq	r0, [r0], -r7
    1794:	01064601 	tsteq	r6, r1, lsl #12
    1798:	080006a0 	stmdaeq	r0, {r5, r7, r9, sl}
    179c:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
    17a0:	000002cb 	andeq	r0, r0, fp, asr #5
    17a4:	00097701 	andeq	r7, r9, r1, lsl #14
    17a8:	06041700 	streq	r1, [r4], -r0, lsl #14
    17ac:	09870000 	stmibeq	r7, {}	; <UNPREDICTABLE>
    17b0:	05010000 	streq	r0, [r1, #-0]
    17b4:	002cbc03 	eoreq	fp, ip, r3, lsl #24
    17b8:	06aa1908 	strteq	r1, [sl], r8, lsl #18
    17bc:	09970800 	ldmibeq	r7, {fp}
    17c0:	011a0000 	tsteq	sl, r0
    17c4:	10030550 	andne	r0, r3, r0, asr r5
    17c8:	1a08002c 	bne	201880 <_Min_Heap_Size+0x201080>
    17cc:	03055101 	movweq	r5, #20737	; 0x5101
    17d0:	08002cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp, sp}
    17d4:	251b0000 	ldrcs	r0, [fp, #-0]
    17d8:	87000006 	strhi	r0, [r0, -r6]
    17dc:	1c000009 	stcne	0, cr0, [r0], {9}
    17e0:	0000008c 	andeq	r0, r0, ip, lsl #1
    17e4:	7705000b 	strvc	r0, [r5, -fp]
    17e8:	1f000009 	svcne	0x00000009
    17ec:	0000098d 	andeq	r0, r0, sp, lsl #19
    17f0:	1b03c002 	blne	f1800 <_Min_Heap_Size+0xf1000>
    17f4:	01200301 			; <UNDEFINED> instruction: 0x01200301
    17f8:	00000001 	andeq	r0, r0, r1
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	05c80900 	strbeq	r0, [r8, #2304]	; 0x900
    1804:	2a010121 	bcs	41c90 <_Min_Heap_Size+0x41490>
    1808:	2a000009 	bcs	1834 <_Min_Heap_Size+0x1034>
    180c:	08000009 	stmdaeq	r0, {r0, r3}
    1810:	20060302 	andcs	r0, r6, r2, lsl #6
    1814:	09810101 	stmibeq	r1, {r0, r8}
    1818:	09810000 	stmibeq	r1, {}	; <UNPREDICTABLE>
    181c:	e80a0000 	stmda	sl, {}	; <UNPREDICTABLE>
    1820:	03040006 	movweq	r0, #16390	; 0x4006
    1824:	00020000 	andeq	r0, r2, r0
    1828:	00000402 	andeq	r0, r0, r2, lsl #8
    182c:	05190104 	ldreq	r0, [r9, #-260]	; 0xfffffefc
    1830:	e40c0000 	str	r0, [ip], #-0
    1834:	22000009 	andcs	r0, r0, #9
    1838:	b8000008 	stmdalt	r0, {r3}
	...
    1844:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    1848:	02000008 	andeq	r0, r0, #8
    184c:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    1850:	01020000 	mrseq	r0, (UNDEF: 2)
    1854:	00050b08 	andeq	r0, r5, r8, lsl #22
    1858:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    185c:	000005d3 	ldrdeq	r0, [r0], -r3
    1860:	37070202 	strcc	r0, [r7, -r2, lsl #4]
    1864:	02000003 	andeq	r0, r0, #3
    1868:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    186c:	91030000 	mrsls	r0, (UNDEF: 3)
    1870:	02000002 	andeq	r0, r0, #2
    1874:	0058194f 	subseq	r1, r8, pc, asr #18
    1878:	04020000 	streq	r0, [r2], #-0
    187c:	0000bf07 	andeq	fp, r0, r7, lsl #30
    1880:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    1884:	000002ad 	andeq	r0, r0, sp, lsr #5
    1888:	ba070802 	blt	1c3898 <_Min_Heap_Size+0x1c3098>
    188c:	04000000 	streq	r0, [r0], #-0
    1890:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    1894:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    1898:	0000c407 	andeq	ip, r0, r7, lsl #8
    189c:	02930300 	addseq	r0, r3, #0, 6
    18a0:	30030000 	andcc	r0, r3, r0
    18a4:	00004c14 	andeq	r4, r0, r4, lsl ip
    18a8:	007b0500 	rsbseq	r0, fp, r0, lsl #10
    18ac:	7b060000 	blvc	1818b4 <_Min_Heap_Size+0x1810b4>
    18b0:	9c000000 	stcls	0, cr0, [r0], {-0}
    18b4:	07000000 	streq	r0, [r0, -r0]
    18b8:	00000074 	andeq	r0, r0, r4, ror r0
    18bc:	88080001 	stmdahi	r8, {r0}
    18c0:	0901f404 	stmdbeq	r1, {r2, sl, ip, sp, lr, pc}
    18c4:	00000288 	andeq	r0, r0, r8, lsl #5
    18c8:	00524309 	subseq	r4, r2, r9, lsl #6
    18cc:	1101f604 	tstne	r1, r4, lsl #12	; <UNPREDICTABLE>
    18d0:	00000087 	andeq	r0, r0, r7, lsl #1
    18d4:	0a002302 	beq	a4e4 <_Min_Heap_Size+0x9ce4>
    18d8:	00000256 	andeq	r0, r0, r6, asr r2
    18dc:	1101f704 	tstne	r1, r4, lsl #14	; <UNPREDICTABLE>
    18e0:	00000087 	andeq	r0, r0, r7, lsl #1
    18e4:	0a042302 	beq	10a4f4 <_Min_Heap_Size+0x109cf4>
    18e8:	00000259 	andeq	r0, r0, r9, asr r2
    18ec:	1101f804 	tstne	r1, r4, lsl #16	; <UNPREDICTABLE>
    18f0:	00000087 	andeq	r0, r0, r7, lsl #1
    18f4:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    18f8:	00524943 	subseq	r4, r2, r3, asr #18
    18fc:	1101f904 	tstne	r1, r4, lsl #18	; <UNPREDICTABLE>
    1900:	00000087 	andeq	r0, r0, r7, lsl #1
    1904:	0a0c2302 	beq	30a514 <_Min_Heap_Size+0x309d14>
    1908:	00000168 	andeq	r0, r0, r8, ror #2
    190c:	1101fa04 	tstne	r1, r4, lsl #20	; <UNPREDICTABLE>
    1910:	00000087 	andeq	r0, r0, r7, lsl #1
    1914:	0a102302 	beq	40a524 <_Min_Heap_Size+0x409d24>
    1918:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    191c:	1101fb04 	tstne	r1, r4, lsl #22	; <UNPREDICTABLE>
    1920:	00000087 	andeq	r0, r0, r7, lsl #1
    1924:	0a142302 	beq	50a534 <_Min_Heap_Size+0x509d34>
    1928:	00000374 	andeq	r0, r0, r4, ror r3
    192c:	1101fc04 	tstne	r1, r4, lsl #24	; <UNPREDICTABLE>
    1930:	00000087 	andeq	r0, r0, r7, lsl #1
    1934:	0a182302 	beq	60a544 <_Min_Heap_Size+0x609d44>
    1938:	000004a6 	andeq	r0, r0, r6, lsr #9
    193c:	1101fd04 	tstne	r1, r4, lsl #26	; <UNPREDICTABLE>
    1940:	0000007b 	andeq	r0, r0, fp, ror r0
    1944:	0a1c2302 	beq	70a554 <_Min_Heap_Size+0x709d54>
    1948:	0000049d 	muleq	r0, sp, r4
    194c:	1101fe04 	tstne	r1, r4, lsl #28	; <UNPREDICTABLE>
    1950:	00000087 	andeq	r0, r0, r7, lsl #1
    1954:	0a202302 	beq	80a564 <_Min_Heap_Size+0x809d64>
    1958:	000001e8 	andeq	r0, r0, r8, ror #3
    195c:	1101ff04 	tstne	r1, r4, lsl #30	; <UNPREDICTABLE>
    1960:	00000087 	andeq	r0, r0, r7, lsl #1
    1964:	0a242302 	beq	90a574 <_Min_Heap_Size+0x909d74>
    1968:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    196c:	11020004 	tstne	r2, r4
    1970:	0000008c 	andeq	r0, r0, ip, lsl #1
    1974:	0a282302 	beq	a0a584 <_Min_Heap_Size+0xa09d84>
    1978:	0000080e 	andeq	r0, r0, lr, lsl #16
    197c:	11020104 	tstne	r2, r4, lsl #2
    1980:	00000087 	andeq	r0, r0, r7, lsl #1
    1984:	0a302302 	beq	c0a594 <_Min_Heap_Size+0xc09d94>
    1988:	00000727 	andeq	r0, r0, r7, lsr #14
    198c:	11020204 	tstne	r2, r4, lsl #4
    1990:	00000087 	andeq	r0, r0, r7, lsl #1
    1994:	0a342302 	beq	d0a5a4 <_Min_Heap_Size+0xd09da4>
    1998:	0000043f 	andeq	r0, r0, pc, lsr r4
    199c:	11020304 	tstne	r2, r4, lsl #6
    19a0:	00000087 	andeq	r0, r0, r7, lsl #1
    19a4:	0a382302 	beq	e0a5b4 <_Min_Heap_Size+0xe09db4>
    19a8:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    19ac:	11020404 	tstne	r2, r4, lsl #8
    19b0:	0000007b 	andeq	r0, r0, fp, ror r0
    19b4:	0a3c2302 	beq	f0a5c4 <_Min_Heap_Size+0xf09dc4>
    19b8:	0000065c 	andeq	r0, r0, ip, asr r6
    19bc:	11020504 	tstne	r2, r4, lsl #10
    19c0:	00000087 	andeq	r0, r0, r7, lsl #1
    19c4:	0a402302 	beq	100a5d4 <_Min_Heap_Size+0x1009dd4>
    19c8:	00000622 	andeq	r0, r0, r2, lsr #12
    19cc:	11020604 	tstne	r2, r4, lsl #12
    19d0:	00000087 	andeq	r0, r0, r7, lsl #1
    19d4:	0a442302 	beq	110a5e4 <_Min_Heap_Size+0x1109de4>
    19d8:	000004c4 	andeq	r0, r0, r4, asr #9
    19dc:	11020704 	tstne	r2, r4, lsl #14
    19e0:	0000008c 	andeq	r0, r0, ip, lsl #1
    19e4:	0a482302 	beq	120a5f4 <_Min_Heap_Size+0x1209df4>
    19e8:	00000132 	andeq	r0, r0, r2, lsr r1
    19ec:	11020804 	tstne	r2, r4, lsl #16
    19f0:	00000087 	andeq	r0, r0, r7, lsl #1
    19f4:	0a502302 	beq	140a604 <_Min_Heap_Size+0x1409e04>
    19f8:	00000479 	andeq	r0, r0, r9, ror r4
    19fc:	11020904 	tstne	r2, r4, lsl #18
    1a00:	00000087 	andeq	r0, r0, r7, lsl #1
    1a04:	0a542302 	beq	150a614 <_Min_Heap_Size+0x1509e14>
    1a08:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a0c:	11020a04 	tstne	r2, r4, lsl #20
    1a10:	00000087 	andeq	r0, r0, r7, lsl #1
    1a14:	0a582302 	beq	160a624 <_Min_Heap_Size+0x1609e24>
    1a18:	000004ce 	andeq	r0, r0, lr, asr #9
    1a1c:	11020b04 	tstne	r2, r4, lsl #22
    1a20:	0000007b 	andeq	r0, r0, fp, ror r0
    1a24:	0a5c2302 	beq	170a634 <_Min_Heap_Size+0x1709e34>
    1a28:	0000001b 	andeq	r0, r0, fp, lsl r0
    1a2c:	11020c04 	tstne	r2, r4, lsl #24
    1a30:	00000087 	andeq	r0, r0, r7, lsl #1
    1a34:	0a602302 	beq	180a644 <_Min_Heap_Size+0x1809e44>
    1a38:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    1a3c:	11020d04 	tstne	r2, r4, lsl #26
    1a40:	00000087 	andeq	r0, r0, r7, lsl #1
    1a44:	0a642302 	beq	190a654 <_Min_Heap_Size+0x1909e54>
    1a48:	000004d8 	ldrdeq	r0, [r0], -r8
    1a4c:	11020e04 	tstne	r2, r4, lsl #28
    1a50:	0000008c 	andeq	r0, r0, ip, lsl #1
    1a54:	0a682302 	beq	1a0a664 <_Min_Heap_Size+0x1a09e64>
    1a58:	00000796 	muleq	r0, r6, r7
    1a5c:	11020f04 	tstne	r2, r4, lsl #30
    1a60:	00000087 	andeq	r0, r0, r7, lsl #1
    1a64:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    1a68:	00525343 	subseq	r5, r2, r3, asr #6
    1a6c:	11021004 	tstne	r2, r4
    1a70:	00000087 	andeq	r0, r0, r7, lsl #1
    1a74:	0a742302 	beq	1d0a684 <_Min_Heap_Size+0x1d09e84>
    1a78:	000004e2 	andeq	r0, r0, r2, ror #9
    1a7c:	11021104 	tstne	r2, r4, lsl #2
    1a80:	0000008c 	andeq	r0, r0, ip, lsl #1
    1a84:	0a782302 	beq	1e0a694 <_Min_Heap_Size+0x1e09e94>
    1a88:	00000765 	andeq	r0, r0, r5, ror #14
    1a8c:	11021204 	tstne	r2, r4, lsl #4
    1a90:	00000087 	andeq	r0, r0, r7, lsl #1
    1a94:	01802303 	orreq	r2, r0, r3, lsl #6
    1a98:	0003550a 	andeq	r5, r3, sl, lsl #10
    1a9c:	02130400 	andseq	r0, r3, #0, 8
    1aa0:	00008711 	andeq	r8, r0, r1, lsl r7
    1aa4:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    1aa8:	bc0b0001 	stclt	0, cr0, [fp], {1}
    1aac:	04000001 	streq	r0, [r0], #-1
    1ab0:	9c030214 	sfmls	f0, 4, [r3], {20}
    1ab4:	02000000 	andeq	r0, r0, #0
    1ab8:	06640408 	strbteq	r0, [r4], -r8, lsl #8
    1abc:	010c0000 	mrseq	r0, (UNDEF: 12)
    1ac0:	000008bd 			; <UNDEFINED> instruction: 0x000008bd
    1ac4:	01062a01 	tsteq	r6, r1, lsl #20
    1ac8:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
    1acc:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
    1ad0:	000002eb 	andeq	r0, r0, fp, ror #5
    1ad4:	07420d01 	strbeq	r0, [r2, -r1, lsl #26]
    1ad8:	075a0800 	ldrbeq	r0, [sl, -r0, lsl #16]
    1adc:	02d00800 	sbcseq	r0, r0, #0, 16
    1ae0:	a50e0000 	strge	r0, [lr, #-0]
    1ae4:	01000001 	tsteq	r0, r1
    1ae8:	0087032e 	addeq	r0, r7, lr, lsr #6
    1aec:	91020000 	mrsls	r0, (UNDEF: 2)
    1af0:	5a0d0074 	bpl	341cc8 <_Min_Heap_Size+0x3414c8>
    1af4:	6e080007 	cdpvs	0, 0, cr0, cr8, cr7, {0}
    1af8:	ed080007 	stc	0, cr0, [r8, #-28]	; 0xffffffe4
    1afc:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1b00:	000001a5 	andeq	r0, r0, r5, lsr #3
    1b04:	87032f01 	strhi	r2, [r3, -r1, lsl #30]
    1b08:	02000000 	andeq	r0, r0, #0
    1b0c:	0f007891 	svceq	0x00007891
    1b10:	0800076e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sl}
    1b14:	08000782 	stmdaeq	r0, {r1, r7, r8, r9, sl}
    1b18:	0001a50e 	andeq	sl, r1, lr, lsl #10
    1b1c:	03300100 	teqeq	r0, #0, 2
    1b20:	00000087 	andeq	r0, r0, r7, lsl #1
    1b24:	007c9102 	rsbseq	r9, ip, r2, lsl #2
    1b28:	0d640000 	stcleq	0, cr0, [r4, #-0]
    1b2c:	00020000 	andeq	r0, r2, r0
    1b30:	000004d5 	ldrdeq	r0, [r0], -r5
    1b34:	05190104 	ldreq	r0, [r9, #-260]	; 0xfffffefc
    1b38:	290c0000 	stmdbcs	ip, {}	; <UNPREDICTABLE>
    1b3c:	2200000f 	andcs	r0, r0, #15
    1b40:	c8000008 	stmdagt	r0, {r3}
	...
    1b4c:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    1b50:	02000009 	andeq	r0, r0, #9
    1b54:	023c0105 	eorseq	r0, ip, #1073741825	; 0x40000001
    1b58:	42040000 	andmi	r0, r4, #0
    1b5c:	00023c01 	andeq	r3, r2, r1, lsl #24
    1b60:	0c5a0300 	mrrceq	3, 0, r0, sl, cr0
    1b64:	03720000 	cmneq	r2, #0
    1b68:	00000c89 	andeq	r0, r0, r9, lsl #25
    1b6c:	0ce90374 	stcleq	3, cr0, [r9], #464	; 0x1d0
    1b70:	03750000 	cmneq	r5, #0
    1b74:	00000b90 	muleq	r0, r0, fp
    1b78:	0d3b0376 	ldceq	3, cr0, [fp, #-472]!	; 0xfffffe28
    1b7c:	037b0000 	cmneq	fp, #0
    1b80:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
    1b84:	0f94037c 	svceq	0x0094037c
    1b88:	037e0000 	cmneq	lr, #0
    1b8c:	00000b02 	andeq	r0, r0, r2, lsl #22
    1b90:	0c6e047f 	cfstrdeq	mvd0, [lr], #-508	; 0xfffffe04
    1b94:	04000000 	streq	r0, [r0], #-0
    1b98:	00000e5a 	andeq	r0, r0, sl, asr lr
    1b9c:	0c9f0401 	cfldrseq	mvf0, [pc], {1}
    1ba0:	04020000 	streq	r0, [r2], #-0
    1ba4:	000009fd 	strdeq	r0, [r0], -sp
    1ba8:	0a670403 	beq	19c2bbc <_Min_Heap_Size+0x19c23bc>
    1bac:	04040000 	streq	r0, [r4], #-0
    1bb0:	00000ee9 	andeq	r0, r0, r9, ror #29
    1bb4:	0e870405 	cdpeq	4, 8, cr0, cr7, cr5, {0}
    1bb8:	04060000 	streq	r0, [r6], #-0
    1bbc:	00000bfa 	strdeq	r0, [r0], -sl
    1bc0:	0a0b0407 	beq	2c2be4 <_Min_Heap_Size+0x2c23e4>
    1bc4:	04080000 	streq	r0, [r8], #-0
    1bc8:	00000f89 	andeq	r0, r0, r9, lsl #31
    1bcc:	0d760409 	cfldrdeq	mvd0, [r6, #-36]!	; 0xffffffdc
    1bd0:	040a0000 	streq	r0, [sl], #-0
    1bd4:	00000dd2 	ldrdeq	r0, [r0], -r2
    1bd8:	0d9c040b 	cfldrseq	mvf0, [ip, #44]	; 0x2c
    1bdc:	040c0000 	streq	r0, [ip], #-0
    1be0:	00000b2c 	andeq	r0, r0, ip, lsr #22
    1be4:	0ef2040d 	cdpeq	4, 15, cr0, cr2, cr13, {0}
    1be8:	040e0000 	streq	r0, [lr], #-0
    1bec:	00000e92 	muleq	r0, r2, lr
    1bf0:	0c12040f 	cfldrseq	mvf0, [r2], {15}
    1bf4:	04100000 	ldreq	r0, [r0], #-0
    1bf8:	00000a16 	andeq	r0, r0, r6, lsl sl
    1bfc:	0e510411 	mrceq	4, 2, r0, cr1, cr1, {0}
    1c00:	04120000 	ldreq	r0, [r2], #-0
    1c04:	00000c05 	andeq	r0, r0, r5, lsl #24
    1c08:	0bae0413 	bleq	feb82c5c <_estack+0xdeb81a1c>
    1c0c:	04140000 	ldreq	r0, [r4], #-0
    1c10:	00000f57 	andeq	r0, r0, r7, asr pc
    1c14:	0caf0415 	cfstrseq	mvf0, [pc], #84	; 1c70 <_Min_Heap_Size+0x1470>
    1c18:	04160000 	ldreq	r0, [r6], #-0
    1c1c:	00000f65 	andeq	r0, r0, r5, ror #30
    1c20:	0d020417 	cfstrseq	mvf0, [r2, #-92]	; 0xffffffa4
    1c24:	04180000 	ldreq	r0, [r8], #-0
    1c28:	00000f16 	andeq	r0, r0, r6, lsl pc
    1c2c:	0aea0419 	beq	ffa82c98 <_estack+0xdfa81a58>
    1c30:	041a0000 	ldreq	r0, [sl], #-0
    1c34:	00000bed 	andeq	r0, r0, sp, ror #23
    1c38:	0a72041b 	beq	1c82cac <_Min_Heap_Size+0x1c824ac>
    1c3c:	041c0000 	ldreq	r0, [ip], #-0
    1c40:	00000e0f 	andeq	r0, r0, pc, lsl #28
    1c44:	0bbc041d 	bleq	fef02cc0 <_estack+0xdef01a80>
    1c48:	041e0000 	ldreq	r0, [lr], #-0
    1c4c:	00000be0 	andeq	r0, r0, r0, ror #23
    1c50:	0b60041f 	bleq	1802cd4 <_Min_Heap_Size+0x18024d4>
    1c54:	04200000 	strteq	r0, [r0], #-0
    1c58:	00000d8f 	andeq	r0, r0, pc, lsl #27
    1c5c:	0cd40421 	cfldrdeq	mvd0, [r4], {33}	; 0x21
    1c60:	04220000 	strteq	r0, [r2], #-0
    1c64:	00000d31 	andeq	r0, r0, r1, lsr sp
    1c68:	0aa70423 	beq	fe9c2cfc <_estack+0xde9c1abc>
    1c6c:	04240000 	strteq	r0, [r4], #-0
    1c70:	00000e19 	andeq	r0, r0, r9, lsl lr
    1c74:	0bc60425 	bleq	ff182d10 <_estack+0xdf181ad0>
    1c78:	04260000 	strteq	r0, [r6], #-0
    1c7c:	00000b0f 	andeq	r0, r0, pc, lsl #22
    1c80:	0e000427 	cdpeq	4, 0, cr0, cr0, cr7, {1}
    1c84:	04280000 	strteq	r0, [r8], #-0
    1c88:	00000de4 	andeq	r0, r0, r4, ror #27
    1c8c:	0d650429 	cfstrdeq	mvd0, [r5, #-164]!	; 0xffffff5c
    1c90:	042a0000 	strteq	r0, [sl], #-0
    1c94:	00000ab1 			; <UNDEFINED> instruction: 0x00000ab1
    1c98:	0a28042b 	beq	a02d4c <_Min_Heap_Size+0xa0254c>
    1c9c:	042c0000 	strteq	r0, [ip], #-0
    1ca0:	00000c24 	andeq	r0, r0, r4, lsr #24
    1ca4:	0f72042d 	svceq	0x0072042d
    1ca8:	042e0000 	strteq	r0, [lr], #-0
    1cac:	00000fb3 			; <UNDEFINED> instruction: 0x00000fb3
    1cb0:	0e6a042f 	cdpeq	4, 6, cr0, cr10, cr15, {1}
    1cb4:	04300000 	ldrteq	r0, [r0], #-0
    1cb8:	00000f7f 	andeq	r0, r0, pc, ror pc
    1cbc:	0b860431 	bleq	fe182d88 <_estack+0xde181b48>
    1cc0:	04320000 	ldrteq	r0, [r2], #-0
    1cc4:	00000a5d 	andeq	r0, r0, sp, asr sl
    1cc8:	0d500433 	cfldrdeq	mvd0, [r0, #-204]	; 0xffffff34
    1ccc:	04340000 	ldrteq	r0, [r4], #-0
    1cd0:	00000cf7 	strdeq	r0, [r0], -r7
    1cd4:	0d810435 	cfstrseq	mvf0, [r1, #212]	; 0xd4
    1cd8:	04360000 	ldrteq	r0, [r6], #-0
    1cdc:	00000d15 	andeq	r0, r0, r5, lsl sp
    1ce0:	0cbd0437 	cfldrseq	mvf0, [sp], #220	; 0xdc
    1ce4:	04380000 	ldrteq	r0, [r8], #-0
    1ce8:	00000a4b 	andeq	r0, r0, fp, asr #20
    1cec:	0fc50439 	svceq	0x00c50439
    1cf0:	043a0000 	ldrteq	r0, [sl], #-0
    1cf4:	00000dae 	andeq	r0, r0, lr, lsr #27
    1cf8:	0b3e043b 	bleq	f82dec <_Min_Heap_Size+0xf825ec>
    1cfc:	043c0000 	ldrteq	r0, [ip], #-0
    1d00:	00000dc0 	andeq	r0, r0, r0, asr #27
    1d04:	0a7c043f 	beq	1f02e08 <_Min_Heap_Size+0x1f02608>
    1d08:	04400000 	strbeq	r0, [r0], #-0
    1d0c:	00000e43 	andeq	r0, r0, r3, asr #28
    1d10:	0b780441 	bleq	1e02e1c <_Min_Heap_Size+0x1e0261c>
    1d14:	04420000 	strbeq	r0, [r2], #-0
    1d18:	00000c4e 	andeq	r0, r0, lr, asr #24
    1d1c:	0ad80443 	beq	ff602e30 <_estack+0xdf601bf0>
    1d20:	04440000 	strbeq	r0, [r4], #-0
    1d24:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1d28:	0c3c0445 	cfldrseq	mvf0, [ip], #-276	; 0xfffffeec
    1d2c:	04460000 	strbeq	r0, [r6], #-0
    1d30:	00000a8a 	andeq	r0, r0, sl, lsl #21
    1d34:	0ec80447 	cdpeq	4, 12, cr0, cr8, cr7, {2}
    1d38:	04480000 	strbeq	r0, [r8], #-0
    1d3c:	00000df3 	strdeq	r0, [r0], -r3
    1d40:	0f3d0449 	svceq	0x003d0449
    1d44:	044a0000 	strbeq	r0, [sl], #-0
    1d48:	00000fa0 	andeq	r0, r0, r0, lsr #31
    1d4c:	0c78044b 	cfldrdeq	mvd0, [r8], #-300	; 0xfffffed4
    1d50:	044c0000 	strbeq	r0, [ip], #-0
    1d54:	00000d1f 	andeq	r0, r0, pc, lsl sp
    1d58:	0e3a044d 	cdpeq	4, 3, cr0, cr10, cr13, {2}
    1d5c:	04500000 	ldrbeq	r0, [r0], #-0
    1d60:	00000d47 	andeq	r0, r0, r7, asr #26
    1d64:	01050051 	qaddeq	r0, r1, r5
    1d68:	00050d06 	andeq	r0, r5, r6, lsl #26
    1d6c:	00720600 	rsbseq	r0, r2, r0, lsl #12
    1d70:	2b020000 	blcs	81d78 <_Min_Heap_Size+0x81578>
    1d74:	00024f18 	andeq	r4, r2, r8, lsl pc
    1d78:	08010500 	stmdaeq	r1, {r8, sl}
    1d7c:	0000050b 	andeq	r0, r0, fp, lsl #10
    1d80:	d3050205 	movwle	r0, #20997	; 0x5205
    1d84:	06000005 	streq	r0, [r0], -r5
    1d88:	0000069a 	muleq	r0, sl, r6
    1d8c:	69193902 	ldmdbvs	r9, {r1, r8, fp, ip, sp}
    1d90:	05000002 	streq	r0, [r0, #-2]
    1d94:	03370702 	teqeq	r7, #524288	; 0x80000
    1d98:	04050000 	streq	r0, [r5], #-0
    1d9c:	0002b205 	andeq	fp, r2, r5, lsl #4
    1da0:	02910600 	addseq	r0, r1, #0, 12
    1da4:	4f020000 	svcmi	0x00020000
    1da8:	00028319 	andeq	r8, r2, r9, lsl r3
    1dac:	07040500 	streq	r0, [r4, -r0, lsl #10]
    1db0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    1db4:	ad050805 	stcge	8, cr0, [r5, #-20]	; 0xffffffec
    1db8:	05000002 	streq	r0, [r0, #-2]
    1dbc:	00ba0708 	adcseq	r0, sl, r8, lsl #14
    1dc0:	04070000 	streq	r0, [r7], #-0
    1dc4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1dc8:	07040500 	streq	r0, [r4, -r0, lsl #10]
    1dcc:	000000c4 	andeq	r0, r0, r4, asr #1
    1dd0:	00007406 	andeq	r7, r0, r6, lsl #8
    1dd4:	13180300 	tstne	r8, #0, 6
    1dd8:	00000243 	andeq	r0, r0, r3, asr #4
    1ddc:	0002a608 	andeq	sl, r2, r8, lsl #12
    1de0:	069c0600 	ldreq	r0, [ip], r0, lsl #12
    1de4:	24030000 	strcs	r0, [r3], #-0
    1de8:	00025d14 	andeq	r5, r2, r4, lsl sp
    1dec:	02b70900 	adcseq	r0, r7, #0, 18
    1df0:	93060000 	movwls	r0, #24576	; 0x6000
    1df4:	03000002 	movweq	r0, #2
    1df8:	02771430 	rsbseq	r1, r7, #48, 8	; 0x30000000
    1dfc:	c8090000 	stmdagt	r9, {}	; <UNPREDICTABLE>
    1e00:	0a000002 	beq	1e10 <_Min_Heap_Size+0x1610>
    1e04:	000002c8 	andeq	r0, r0, r8, asr #5
    1e08:	000002e9 	andeq	r0, r0, r9, ror #5
    1e0c:	00029f0b 	andeq	r9, r2, fp, lsl #30
    1e10:	0c000100 	stfeqs	f0, [r0], {-0}
    1e14:	01440418 	cmpeq	r4, r8, lsl r4
    1e18:	00035309 	andeq	r5, r3, r9, lsl #6
    1e1c:	52430d00 	subpl	r0, r3, #0, 26
    1e20:	01460400 	cmpeq	r6, r0, lsl #8
    1e24:	0002d411 	andeq	sp, r2, r1, lsl r4
    1e28:	00230200 	eoreq	r0, r3, r0, lsl #4
    1e2c:	0006fa0e 	andeq	pc, r6, lr, lsl #20
    1e30:	01470400 	cmpeq	r7, r0, lsl #8
    1e34:	0002d411 	andeq	sp, r2, r1, lsl r4
    1e38:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1e3c:	5241500d 	subpl	r5, r1, #13
    1e40:	01480400 	cmpeq	r8, r0, lsl #8
    1e44:	0002d411 	andeq	sp, r2, r1, lsl r4
    1e48:	08230200 	stmdaeq	r3!, {r9}
    1e4c:	00004e0e 	andeq	r4, r0, lr, lsl #28
    1e50:	01490400 	cmpeq	r9, r0, lsl #8
    1e54:	0002d411 	andeq	sp, r2, r1, lsl r4
    1e58:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1e5c:	00073b0e 	andeq	r3, r7, lr, lsl #22
    1e60:	014a0400 	cmpeq	sl, r0, lsl #8
    1e64:	0002d411 	andeq	sp, r2, r1, lsl r4
    1e68:	10230200 	eorne	r0, r3, r0, lsl #4
    1e6c:	5243460d 	subpl	r4, r3, #13631488	; 0xd00000
    1e70:	014b0400 	cmpeq	fp, r0, lsl #8
    1e74:	0002d411 	andeq	sp, r2, r1, lsl r4
    1e78:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1e7c:	07140f00 	ldreq	r0, [r4, -r0, lsl #30]
    1e80:	4c040000 	stcmi	0, cr0, [r4], {-0}
    1e84:	02e90301 	rsceq	r0, r9, #67108864	; 0x4000000
    1e88:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    1e8c:	0901ae04 	stmdbeq	r1, {r2, r9, sl, fp, sp, pc}
    1e90:	000003fb 	strdeq	r0, [r0], -fp
    1e94:	000f510e 	andeq	r5, pc, lr, lsl #2
    1e98:	01b00400 	lslseq	r0, r0, #8
    1e9c:	0002d411 	andeq	sp, r2, r1, lsl r4
    1ea0:	00230200 	eoreq	r0, r3, r0, lsl #4
    1ea4:	000e630e 	andeq	r6, lr, lr, lsl #6
    1ea8:	01b10400 			; <UNDEFINED> instruction: 0x01b10400
    1eac:	0002d411 	andeq	sp, r2, r1, lsl r4
    1eb0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1eb4:	000ce10e 	andeq	lr, ip, lr, lsl #2
    1eb8:	01b20400 			; <UNDEFINED> instruction: 0x01b20400
    1ebc:	0002d411 	andeq	sp, r2, r1, lsl r4
    1ec0:	08230200 	stmdaeq	r3!, {r9}
    1ec4:	000d2b0e 	andeq	r2, sp, lr, lsl #22
    1ec8:	01b30400 			; <UNDEFINED> instruction: 0x01b30400
    1ecc:	0002d411 	andeq	sp, r2, r1, lsl r4
    1ed0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1ed4:	5244490d 	subpl	r4, r4, #212992	; 0x34000
    1ed8:	01b40400 			; <UNDEFINED> instruction: 0x01b40400
    1edc:	0002d411 	andeq	sp, r2, r1, lsl r4
    1ee0:	10230200 	eorne	r0, r3, r0, lsl #4
    1ee4:	52444f0d 	subpl	r4, r4, #13, 30	; 0x34
    1ee8:	01b50400 			; <UNDEFINED> instruction: 0x01b50400
    1eec:	0002d411 	andeq	sp, r2, r1, lsl r4
    1ef0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1ef4:	000f040e 	andeq	r0, pc, lr, lsl #8
    1ef8:	01b60400 			; <UNDEFINED> instruction: 0x01b60400
    1efc:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f00:	18230200 	stmdane	r3!, {r9}
    1f04:	000ccf0e 	andeq	ip, ip, lr, lsl #30
    1f08:	01b70400 			; <UNDEFINED> instruction: 0x01b70400
    1f0c:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f10:	1c230200 	sfmne	f0, 4, [r3], #-0
    1f14:	5246410d 	subpl	r4, r6, #1073741827	; 0x40000003
    1f18:	01b80400 			; <UNDEFINED> instruction: 0x01b80400
    1f1c:	00040b11 	andeq	r0, r4, r1, lsl fp
    1f20:	20230200 	eorcs	r0, r3, r0, lsl #4
    1f24:	02d40a00 	sbcseq	r0, r4, #0, 20
    1f28:	040b0000 	streq	r0, [fp], #-0
    1f2c:	9f0b0000 	svcls	0x000b0000
    1f30:	01000002 	tsteq	r0, r2
    1f34:	03fb0900 	mvnseq	r0, #0, 18
    1f38:	090f0000 	stmdbeq	pc, {}	; <UNPREDICTABLE>
    1f3c:	0400000f 	streq	r0, [r0], #-15
    1f40:	600301b9 			; <UNDEFINED> instruction: 0x600301b9
    1f44:	0c000003 	stceq	0, cr0, [r0], {3}
    1f48:	01f40488 	mvnseq	r0, r8, lsl #9
    1f4c:	00060909 	andeq	r0, r6, r9, lsl #18
    1f50:	52430d00 	subpl	r0, r3, #0, 26
    1f54:	01f60400 	mvnseq	r0, r0, lsl #8
    1f58:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f5c:	00230200 	eoreq	r0, r3, r0, lsl #4
    1f60:	0002560e 	andeq	r5, r2, lr, lsl #12
    1f64:	01f70400 	mvnseq	r0, r0, lsl #8
    1f68:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f6c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1f70:	0002590e 	andeq	r5, r2, lr, lsl #18
    1f74:	01f80400 	mvnseq	r0, r0, lsl #8
    1f78:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f7c:	08230200 	stmdaeq	r3!, {r9}
    1f80:	5249430d 	subpl	r4, r9, #872415232	; 0x34000000
    1f84:	01f90400 	mvnseq	r0, r0, lsl #8
    1f88:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f8c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1f90:	0001680e 	andeq	r6, r1, lr, lsl #16
    1f94:	01fa0400 	mvnseq	r0, r0, lsl #8
    1f98:	0002d411 	andeq	sp, r2, r1, lsl r4
    1f9c:	10230200 	eorne	r0, r3, r0, lsl #4
    1fa0:	0006bc0e 	andeq	fp, r6, lr, lsl #24
    1fa4:	01fb0400 	mvnseq	r0, r0, lsl #8
    1fa8:	0002d411 	andeq	sp, r2, r1, lsl r4
    1fac:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1fb0:	0003740e 	andeq	r7, r3, lr, lsl #8
    1fb4:	01fc0400 	mvnseq	r0, r0, lsl #8
    1fb8:	0002d411 	andeq	sp, r2, r1, lsl r4
    1fbc:	18230200 	stmdane	r3!, {r9}
    1fc0:	0004a60e 	andeq	sl, r4, lr, lsl #12
    1fc4:	01fd0400 	mvnseq	r0, r0, lsl #8
    1fc8:	0002c811 	andeq	ip, r2, r1, lsl r8
    1fcc:	1c230200 	sfmne	f0, 4, [r3], #-0
    1fd0:	00049d0e 	andeq	r9, r4, lr, lsl #26
    1fd4:	01fe0400 	mvnseq	r0, r0, lsl #8
    1fd8:	0002d411 	andeq	sp, r2, r1, lsl r4
    1fdc:	20230200 	eorcs	r0, r3, r0, lsl #4
    1fe0:	0001e80e 	andeq	lr, r1, lr, lsl #16
    1fe4:	01ff0400 	mvnseq	r0, r0, lsl #8
    1fe8:	0002d411 	andeq	sp, r2, r1, lsl r4
    1fec:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    1ff0:	0004b00e 	andeq	fp, r4, lr
    1ff4:	02000400 	andeq	r0, r0, #0, 8
    1ff8:	0002d911 	andeq	sp, r2, r1, lsl r9
    1ffc:	28230200 	stmdacs	r3!, {r9}
    2000:	00080e0e 	andeq	r0, r8, lr, lsl #28
    2004:	02010400 	andeq	r0, r1, #0, 8
    2008:	0002d411 	andeq	sp, r2, r1, lsl r4
    200c:	30230200 	eorcc	r0, r3, r0, lsl #4
    2010:	0007270e 	andeq	r2, r7, lr, lsl #14
    2014:	02020400 	andeq	r0, r2, #0, 8
    2018:	0002d411 	andeq	sp, r2, r1, lsl r4
    201c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    2020:	00043f0e 	andeq	r3, r4, lr, lsl #30
    2024:	02030400 	andeq	r0, r3, #0, 8
    2028:	0002d411 	andeq	sp, r2, r1, lsl r4
    202c:	38230200 	stmdacc	r3!, {r9}
    2030:	0004ba0e 	andeq	fp, r4, lr, lsl #20
    2034:	02040400 	andeq	r0, r4, #0, 8
    2038:	0002c811 	andeq	ip, r2, r1, lsl r8
    203c:	3c230200 	sfmcc	f0, 4, [r3], #-0
    2040:	00065c0e 	andeq	r5, r6, lr, lsl #24
    2044:	02050400 	andeq	r0, r5, #0, 8
    2048:	0002d411 	andeq	sp, r2, r1, lsl r4
    204c:	40230200 	eormi	r0, r3, r0, lsl #4
    2050:	0006220e 	andeq	r2, r6, lr, lsl #4
    2054:	02060400 	andeq	r0, r6, #0, 8
    2058:	0002d411 	andeq	sp, r2, r1, lsl r4
    205c:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    2060:	0004c40e 	andeq	ip, r4, lr, lsl #8
    2064:	02070400 	andeq	r0, r7, #0, 8
    2068:	0002d911 	andeq	sp, r2, r1, lsl r9
    206c:	48230200 	stmdami	r3!, {r9}
    2070:	0001320e 	andeq	r3, r1, lr, lsl #4
    2074:	02080400 	andeq	r0, r8, #0, 8
    2078:	0002d411 	andeq	sp, r2, r1, lsl r4
    207c:	50230200 	eorpl	r0, r3, r0, lsl #4
    2080:	0004790e 	andeq	r7, r4, lr, lsl #18
    2084:	02090400 	andeq	r0, r9, #0, 8
    2088:	0002d411 	andeq	sp, r2, r1, lsl r4
    208c:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    2090:	0005f00e 	andeq	pc, r5, lr
    2094:	020a0400 	andeq	r0, sl, #0, 8
    2098:	0002d411 	andeq	sp, r2, r1, lsl r4
    209c:	58230200 	stmdapl	r3!, {r9}
    20a0:	0004ce0e 	andeq	ip, r4, lr, lsl #28
    20a4:	020b0400 	andeq	r0, fp, #0, 8
    20a8:	0002c811 	andeq	ip, r2, r1, lsl r8
    20ac:	5c230200 	sfmpl	f0, 4, [r3], #-0
    20b0:	00001b0e 	andeq	r1, r0, lr, lsl #22
    20b4:	020c0400 	andeq	r0, ip, #0, 8
    20b8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20bc:	60230200 	eorvs	r0, r3, r0, lsl #4
    20c0:	0003b50e 	andeq	fp, r3, lr, lsl #10
    20c4:	020d0400 	andeq	r0, sp, #0, 8
    20c8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20cc:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    20d0:	0004d80e 	andeq	sp, r4, lr, lsl #16
    20d4:	020e0400 	andeq	r0, lr, #0, 8
    20d8:	0002d911 	andeq	sp, r2, r1, lsl r9
    20dc:	68230200 	stmdavs	r3!, {r9}
    20e0:	0007960e 	andeq	r9, r7, lr, lsl #12
    20e4:	020f0400 	andeq	r0, pc, #0, 8
    20e8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20ec:	70230200 	eorvc	r0, r3, r0, lsl #4
    20f0:	5253430d 	subspl	r4, r3, #872415232	; 0x34000000
    20f4:	02100400 	andseq	r0, r0, #0, 8
    20f8:	0002d411 	andeq	sp, r2, r1, lsl r4
    20fc:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    2100:	0004e20e 	andeq	lr, r4, lr, lsl #4
    2104:	02110400 	andseq	r0, r1, #0, 8
    2108:	0002d911 	andeq	sp, r2, r1, lsl r9
    210c:	78230200 	stmdavc	r3!, {r9}
    2110:	0007650e 	andeq	r6, r7, lr, lsl #10
    2114:	02120400 	andseq	r0, r2, #0, 8
    2118:	0002d411 	andeq	sp, r2, r1, lsl r4
    211c:	80230300 	eorhi	r0, r3, r0, lsl #6
    2120:	03550e01 	cmpeq	r5, #1, 28
    2124:	13040000 	movwne	r0, #16384	; 0x4000
    2128:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    212c:	23030000 	movwcs	r0, #12288	; 0x3000
    2130:	0f000184 	svceq	0x00000184
    2134:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    2138:	03021404 	movweq	r1, #9220	; 0x2404
    213c:	0000041d 	andeq	r0, r0, sp, lsl r4
    2140:	95041c0c 	strls	r1, [r4, #-3084]	; 0xfffff3f4
    2144:	068f0902 	streq	r0, [pc], r2, lsl #18
    2148:	530d0000 	movwpl	r0, #53248	; 0xd000
    214c:	97040052 	smlsdls	r4, r2, r0, r0
    2150:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2154:	23020000 	movwcs	r0, #8192	; 0x2000
    2158:	52440d00 	subpl	r0, r4, #0, 26
    215c:	02980400 	addseq	r0, r8, #0, 8
    2160:	0002d411 	andeq	sp, r2, r1, lsl r4
    2164:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2168:	5252420d 	subspl	r4, r2, #-805306368	; 0xd0000000
    216c:	02990400 	addseq	r0, r9, #0, 8
    2170:	0002d411 	andeq	sp, r2, r1, lsl r4
    2174:	08230200 	stmdaeq	r3!, {r9}
    2178:	3152430d 	cmpcc	r2, sp, lsl #6
    217c:	029a0400 	addseq	r0, sl, #0, 8
    2180:	0002d411 	andeq	sp, r2, r1, lsl r4
    2184:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2188:	3252430d 	subscc	r4, r2, #872415232	; 0x34000000
    218c:	029b0400 	addseq	r0, fp, #0, 8
    2190:	0002d411 	andeq	sp, r2, r1, lsl r4
    2194:	10230200 	eorne	r0, r3, r0, lsl #4
    2198:	3352430d 	cmpcc	r2, #872415232	; 0x34000000
    219c:	029c0400 	addseq	r0, ip, #0, 8
    21a0:	0002d411 	andeq	sp, r2, r1, lsl r4
    21a4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    21a8:	0001780e 	andeq	r7, r1, lr, lsl #16
    21ac:	029d0400 	addseq	r0, sp, #0, 8
    21b0:	0002d411 	andeq	sp, r2, r1, lsl r4
    21b4:	18230200 	stmdane	r3!, {r9}
    21b8:	03a70f00 			; <UNDEFINED> instruction: 0x03a70f00
    21bc:	9e040000 	cdpls	0, 0, cr0, cr4, cr0, {0}
    21c0:	06160302 	ldreq	r0, [r6], -r2, lsl #6
    21c4:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    21c8:	00066404 	andeq	r6, r6, r4, lsl #8
    21cc:	01070200 	mrseq	r0, (UNDEF: 39)
    21d0:	0000024f 	andeq	r0, r0, pc, asr #4
    21d4:	ca012705 	bgt	4bdf0 <_Min_Heap_Size+0x4b5f0>
    21d8:	04000006 	streq	r0, [r0], #-6
    21dc:	00000310 	andeq	r0, r0, r0, lsl r3
    21e0:	06520400 	ldrbeq	r0, [r2], -r0, lsl #8
    21e4:	04010000 	streq	r0, [r1], #-0
    21e8:	00000876 	andeq	r0, r0, r6, ror r8
    21ec:	02f10402 	rscseq	r0, r1, #33554432	; 0x2000000
    21f0:	00030000 	andeq	r0, r3, r0
    21f4:	4f010702 	svcmi	0x00010702
    21f8:	05000002 	streq	r0, [r0, #-2]
    21fc:	06e50132 			; <UNDEFINED> instruction: 0x06e50132
    2200:	69040000 	stmdbvs	r4, {}	; <UNPREDICTABLE>
    2204:	00000008 	andeq	r0, r0, r8
    2208:	00043404 	andeq	r3, r4, r4, lsl #8
    220c:	06000100 	streq	r0, [r0], -r0, lsl #2
    2210:	000001ac 	andeq	r0, r0, ip, lsr #3
    2214:	ca033505 	bgt	cf630 <_Min_Heap_Size+0xcee30>
    2218:	10000006 	andne	r0, r0, r6
    221c:	092e0614 	stmdbeq	lr!, {r2, r4, r9, sl}
    2220:	00000746 	andeq	r0, r0, r6, asr #14
    2224:	6e695011 	mcrvs	0, 3, r5, cr9, cr1, {0}
    2228:	0c300600 	ldceq	6, cr0, [r0], #-0
    222c:	000002c8 	andeq	r0, r0, r8, asr #5
    2230:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    2234:	00000642 	andeq	r0, r0, r2, asr #12
    2238:	c80c3306 	stmdagt	ip, {r1, r2, r8, r9, ip, sp}
    223c:	02000002 	andeq	r0, r0, #2
    2240:	cd120423 	cfldrsgt	mvf0, [r2, #-140]	; 0xffffff74
    2244:	0600000d 	streq	r0, [r0], -sp
    2248:	02c80c36 	sbceq	r0, r8, #13824	; 0x3600
    224c:	23020000 	movwcs	r0, #8192	; 0x2000
    2250:	09f71208 	ldmibeq	r7!, {r3, r9, ip}^
    2254:	39060000 	stmdbcc	r6, {}	; <UNPREDICTABLE>
    2258:	0002c80c 	andeq	ip, r2, ip, lsl #16
    225c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2260:	000d5b12 	andeq	r5, sp, r2, lsl fp
    2264:	0c3c0600 	ldceq	6, cr0, [ip], #-0
    2268:	000002c8 	andeq	r0, r0, r8, asr #5
    226c:	00102302 	andseq	r2, r0, r2, lsl #6
    2270:	000b1b06 	andeq	r1, fp, r6, lsl #22
    2274:	023e0600 	eorseq	r0, lr, #0, 12
    2278:	000006f1 	strdeq	r0, [r0], -r1
    227c:	30073010 	andcc	r3, r7, r0, lsl r0
    2280:	00081009 	andeq	r1, r8, r9
    2284:	05031200 	streq	r1, [r3, #-512]	; 0xfffffe00
    2288:	32070000 	andcc	r0, r7, #0
    228c:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2290:	00230200 	eoreq	r0, r3, r0, lsl #4
    2294:	00029c12 	andeq	r9, r2, r2, lsl ip
    2298:	0c350700 	ldceq	7, cr0, [r5], #-0
    229c:	000002c8 	andeq	r0, r0, r8, asr #5
    22a0:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    22a4:	000001f1 	strdeq	r0, [r0], -r1
    22a8:	c80c3907 	stmdagt	ip, {r0, r1, r2, r8, fp, ip, sp}
    22ac:	02000002 	andeq	r0, r0, #2
    22b0:	c5120823 	ldrgt	r0, [r2, #-2083]	; 0xfffff7dd
    22b4:	07000006 	streq	r0, [r0, -r6]
    22b8:	02c80c3c 	sbceq	r0, r8, #60, 24	; 0x3c00
    22bc:	23020000 	movwcs	r0, #8192	; 0x2000
    22c0:	0740120c 	strbeq	r1, [r0, -ip, lsl #4]
    22c4:	3f070000 	svccc	0x00070000
    22c8:	0002c80c 	andeq	ip, r2, ip, lsl #16
    22cc:	10230200 	eorne	r0, r3, r0, lsl #4
    22d0:	00039612 	andeq	r9, r3, r2, lsl r6
    22d4:	0c420700 	mcrreq	7, 0, r0, r2, cr0
    22d8:	000002c8 	andeq	r0, r0, r8, asr #5
    22dc:	12142302 	andsne	r2, r4, #134217728	; 0x8000000
    22e0:	00000642 	andeq	r0, r0, r2, asr #12
    22e4:	c80c4507 	stmdagt	ip, {r0, r1, r2, r8, sl, lr}
    22e8:	02000002 	andeq	r0, r0, #2
    22ec:	67121823 	ldrvs	r1, [r2, -r3, lsr #16]
    22f0:	0700001f 	smladeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    22f4:	02c80c4a 	sbceq	r0, r8, #18944	; 0x4a00
    22f8:	23020000 	movwcs	r0, #8192	; 0x2000
    22fc:	063e121c 			; <UNDEFINED> instruction: 0x063e121c
    2300:	4d070000 	stcmi	0, cr0, [r7, #-0]
    2304:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2308:	20230200 	eorcs	r0, r3, r0, lsl #4
    230c:	00067012 	andeq	r7, r6, r2, lsl r0
    2310:	0c520700 	mrrceq	7, 0, r0, r2, cr0
    2314:	000002c8 	andeq	r0, r0, r8, asr #5
    2318:	12242302 	eorne	r2, r4, #134217728	; 0x8000000
    231c:	00000204 	andeq	r0, r0, r4, lsl #4
    2320:	c80c5507 	stmdagt	ip, {r0, r1, r2, r8, sl, ip, lr}
    2324:	02000002 	andeq	r0, r0, #2
    2328:	cc122823 	ldcgt	8, cr2, [r2], {35}	; 0x23
    232c:	07000006 	streq	r0, [r0, -r6]
    2330:	02c80c5b 	sbceq	r0, r8, #23296	; 0x5b00
    2334:	23020000 	movwcs	r0, #8192	; 0x2000
    2338:	5306002c 	movwpl	r0, #24620	; 0x602c
    233c:	07000000 	streq	r0, [r0, -r0]
    2340:	07520260 	ldrbeq	r0, [r2, -r0, ror #4]
    2344:	07020000 	streq	r0, [r2, -r0]
    2348:	00024f01 	andeq	r4, r2, r1, lsl #30
    234c:	01670700 	cmneq	r7, r0, lsl #14
    2350:	0000084f 	andeq	r0, r0, pc, asr #16
    2354:	0002d604 	andeq	sp, r2, r4, lsl #12
    2358:	db040000 	blle	102360 <_Min_Heap_Size+0x101b60>
    235c:	01000003 	tsteq	r0, r3
    2360:	0005dd04 	andeq	sp, r5, r4, lsl #26
    2364:	bc040200 	sfmlt	f0, 4, [r4], {-0}
    2368:	03000007 	movweq	r0, #7
    236c:	00021c04 	andeq	r1, r2, r4, lsl #24
    2370:	60040400 	andvs	r0, r4, r0, lsl #8
    2374:	05000003 	streq	r0, [r0, #-3]
    2378:	05be0600 	ldreq	r0, [lr, #1536]!	; 0x600
    237c:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    2380:	00081c02 	andeq	r1, r8, r2, lsl #24
    2384:	084f0900 	stmdaeq	pc, {r8, fp}^	; <UNPREDICTABLE>
    2388:	2a130000 	bcs	4c2390 <_Min_Heap_Size+0x4c1b90>
    238c:	60000006 	andvs	r0, r0, r6
    2390:	40108a07 	andsmi	r8, r0, r7, lsl #20
    2394:	12000009 	andne	r0, r0, #9
    2398:	00000447 	andeq	r0, r0, r7, asr #8
    239c:	401f8c07 	andsmi	r8, pc, r7, lsl #24
    23a0:	02000009 	andeq	r0, r0, #9
    23a4:	16120023 	ldrne	r0, [r2], -r3, lsr #32
    23a8:	0700001a 	smladeq	r0, sl, r0, r0
    23ac:	08101e8e 	ldmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp, ip}
    23b0:	23020000 	movwcs	r0, #8192	; 0x2000
    23b4:	02771204 	rsbseq	r1, r7, #4, 4	; 0x40000000
    23b8:	90070000 	andls	r0, r7, r0
    23bc:	0006e51e 	andeq	lr, r6, lr, lsl r5
    23c0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    23c4:	0002d012 	andeq	sp, r2, r2, lsl r0
    23c8:	1e920700 	cdpne	7, 9, cr0, cr2, cr0, {0}
    23cc:	0000085b 	andeq	r0, r0, fp, asr r8
    23d0:	12352302 	eorsne	r2, r5, #134217728	; 0x8000000
    23d4:	00000270 	andeq	r0, r0, r0, ror r2
    23d8:	461f9407 	ldrmi	r9, [pc], -r7, lsl #8
    23dc:	02000009 	andeq	r0, r0, #9
    23e0:	ac123823 	ldcge	8, cr3, [r2], {35}	; 0x23
    23e4:	07000008 	streq	r0, [r0, -r8]
    23e8:	095a2196 	ldmdbeq	sl, {r1, r2, r4, r7, r8, sp}^
    23ec:	23020000 	movwcs	r0, #8192	; 0x2000
    23f0:	01c8123c 	biceq	r1, r8, ip, lsr r2
    23f4:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
    23f8:	00095a21 	andeq	r5, r9, r1, lsr #20
    23fc:	40230200 	eormi	r0, r3, r0, lsl #4
    2400:	00018612 	andeq	r8, r1, r2, lsl r6
    2404:	219a0700 	orrscs	r0, sl, r0, lsl #14
    2408:	0000095a 	andeq	r0, r0, sl, asr r9
    240c:	12442302 	subne	r2, r4, #134217728	; 0x8000000
    2410:	000004ec 	andeq	r0, r0, ip, ror #9
    2414:	5a219c07 	bpl	869438 <_Min_Heap_Size+0x868c38>
    2418:	02000009 	andeq	r0, r0, #9
    241c:	50124823 	andspl	r4, r2, r3, lsr #16
    2420:	07000004 	streq	r0, [r0, -r4]
    2424:	095a219e 	ldmdbeq	sl, {r1, r2, r3, r4, r7, r8, sp}^
    2428:	23020000 	movwcs	r0, #8192	; 0x2000
    242c:	089a124c 	ldmeq	sl, {r2, r3, r6, r9, ip}
    2430:	a0070000 	andge	r0, r7, r0
    2434:	00095a21 	andeq	r5, r9, r1, lsr #20
    2438:	50230200 	eorpl	r0, r3, r0, lsl #4
    243c:	00037d12 	andeq	r7, r3, r2, lsl sp
    2440:	1ea20700 	cdpne	7, 10, cr0, cr2, cr0, {0}
    2444:	000002d4 	ldrdeq	r0, [r0], -r4
    2448:	12542302 	subsne	r2, r4, #134217728	; 0x8000000
    244c:	0000025e 	andeq	r0, r0, lr, asr r2
    2450:	c81ea407 	ldmdagt	lr, {r0, r1, r2, sl, sp, pc}
    2454:	02000002 	andeq	r0, r0, #2
    2458:	04125823 	ldreq	r5, [r2], #-2083	; 0xfffff7dd
    245c:	07000003 	streq	r0, [r0, -r3]
    2460:	02c81ea6 	sbceq	r1, r8, #2656	; 0xa60
    2464:	23020000 	movwcs	r0, #8192	; 0x2000
    2468:	0414005c 	ldreq	r0, [r4], #-92	; 0xffffffa4
    246c:	00000353 	andeq	r0, r0, r3, asr r3
    2470:	01160415 	tsteq	r6, r5, lsl r4
    2474:	00000954 	andeq	r0, r0, r4, asr r9
    2478:	00095417 	andeq	r5, r9, r7, lsl r4
    247c:	04140000 	ldreq	r0, [r4], #-0
    2480:	00000860 	andeq	r0, r0, r0, ror #16
    2484:	09480414 	stmdbeq	r8, {r2, r4, sl}^
    2488:	2c060000 	stccs	0, cr0, [r6], {-0}
    248c:	07000006 	streq	r0, [r0, -r6]
    2490:	086002a8 	stmdaeq	r0!, {r3, r5, r7, r9}^
    2494:	1c100000 	ldcne	0, cr0, [r0], {-0}
    2498:	df092e08 	svcle	0x00092e08
    249c:	12000009 	andne	r0, r0, #9
    24a0:	0000017d 	andeq	r0, r0, sp, ror r1
    24a4:	c80c3008 	stmdagt	ip, {r3, ip, sp}
    24a8:	02000002 	andeq	r0, r0, #2
    24ac:	47120023 	ldrmi	r0, [r2, -r3, lsr #32]
    24b0:	08000006 	stmdaeq	r0, {r1, r2}
    24b4:	02c80c36 	sbceq	r0, r8, #13824	; 0x3600
    24b8:	23020000 	movwcs	r0, #8192	; 0x2000
    24bc:	024d1204 	subeq	r1, sp, #4, 4	; 0x40000000
    24c0:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    24c4:	0002c80c 	andeq	ip, r2, ip, lsl #16
    24c8:	08230200 	stmdaeq	r3!, {r9}
    24cc:	0002ea12 	andeq	lr, r2, r2, lsl sl
    24d0:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    24d4:	000002c8 	andeq	r0, r0, r8, asr #5
    24d8:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    24dc:	00000642 	andeq	r0, r0, r2, asr #12
    24e0:	c80c4308 	stmdagt	ip, {r3, r8, r9, lr}
    24e4:	02000002 	andeq	r0, r0, #2
    24e8:	b2121023 	andslt	r1, r2, #35	; 0x23
    24ec:	08000007 	stmdaeq	r0, {r0, r1, r2}
    24f0:	02c80c46 	sbceq	r0, r8, #17920	; 0x4600
    24f4:	23020000 	movwcs	r0, #8192	; 0x2000
    24f8:	013c1214 	teqeq	ip, r4, lsl r2
    24fc:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    2500:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2504:	18230200 	stmdane	r3!, {r9}
    2508:	07540600 	ldrbeq	r0, [r4, -r0, lsl #12]
    250c:	4b080000 	blmi	202514 <_Min_Heap_Size+0x201d14>
    2510:	00096c03 	andeq	r6, r9, r3, lsl #24
    2514:	01070200 	mrseq	r0, (UNDEF: 39)
    2518:	0000024f 	andeq	r0, r0, pc, asr #4
    251c:	2a017508 	bcs	5f944 <_Min_Heap_Size+0x5f144>
    2520:	0400000a 	streq	r0, [r0], #-10
    2524:	000006ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2528:	027c0400 	rsbseq	r0, ip, #0, 8
    252c:	04200000 	strteq	r0, [r0], #-0
    2530:	000007fa 	strdeq	r0, [r0], -sl
    2534:	04620424 	strbteq	r0, [r2], #-1060	; 0xfffffbdc
    2538:	04210000 	strteq	r0, [r1], #-0
    253c:	000006a5 	andeq	r0, r0, r5, lsr #13
    2540:	041a0422 	ldreq	r0, [sl], #-1058	; 0xfffffbde
    2544:	04230000 	strteq	r0, [r3], #-0
    2548:	0000079b 	muleq	r0, fp, r7
    254c:	060d04a0 	streq	r0, [sp], -r0, lsr #9
    2550:	00e00000 	rsceq	r0, r0, r0
    2554:	00002506 	andeq	r2, r0, r6, lsl #10
    2558:	03870800 	orreq	r0, r7, #0, 16
    255c:	000009eb 	andeq	r0, r0, fp, ror #19
    2560:	000a2a09 	andeq	r2, sl, r9, lsl #20
    2564:	076b0600 	strbeq	r0, [fp, -r0, lsl #12]!
    2568:	90080000 	andls	r0, r8, r0
    256c:	0002c812 	andeq	ip, r2, r2, lsl r8
    2570:	0a3b0900 	beq	ec4978 <_Min_Heap_Size+0xec4178>
    2574:	d1060000 	mrsle	r0, (UNDEF: 6)
    2578:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    257c:	02c8129b 	sbceq	r1, r8, #-1342177271	; 0xb0000009
    2580:	4c090000 	stcmi	0, cr0, [r9], {-0}
    2584:	1300000a 	movwne	r0, #10
    2588:	00000405 	andeq	r0, r0, r5, lsl #8
    258c:	10a00848 	adcne	r0, r0, r8, asr #16
    2590:	00000b5b 	andeq	r0, r0, fp, asr fp
    2594:	00044712 	andeq	r4, r4, r2, lsl r7
    2598:	22a20800 	adccs	r0, r2, #0, 16
    259c:	00000b5b 	andeq	r0, r0, fp, asr fp
    25a0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    25a4:	00001a16 	andeq	r1, r0, r6, lsl sl
    25a8:	df21a408 	svcle	0x0021a408
    25ac:	02000009 	andeq	r0, r0, #9
    25b0:	dd120423 	cfldrsle	mvf0, [r2, #-140]	; 0xffffff74
    25b4:	08000001 	stmdaeq	r0, {r0}
    25b8:	0b6122a6 	bleq	184b058 <_Min_Heap_Size+0x184a858>
    25bc:	23020000 	movwcs	r0, #8192	; 0x2000
    25c0:	034a1220 	movteq	r1, #41504	; 0xa220
    25c4:	a8080000 	stmdage	r8, {}	; <UNPREDICTABLE>
    25c8:	0002b721 	andeq	fp, r2, r1, lsr #14
    25cc:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    25d0:	00014912 	andeq	r4, r1, r2, lsl r9
    25d4:	21aa0800 			; <UNDEFINED> instruction: 0x21aa0800
    25d8:	000002c3 	andeq	r0, r0, r3, asr #5
    25dc:	12262302 	eorne	r2, r6, #134217728	; 0x8000000
    25e0:	000007d2 	ldrdeq	r0, [r0], -r2
    25e4:	6722ac08 	strvs	sl, [r2, -r8, lsl #24]!
    25e8:	0200000b 	andeq	r0, r0, #11
    25ec:	2c122823 	ldccs	8, cr2, [r2], {35}	; 0x23
    25f0:	08000003 	stmdaeq	r0, {r0, r1}
    25f4:	02b721ae 	adcseq	r2, r7, #-2147483605	; 0x8000002b
    25f8:	23020000 	movwcs	r0, #8192	; 0x2000
    25fc:	0816122c 	ldmdaeq	r6, {r2, r3, r5, r9, ip}
    2600:	b0080000 	andlt	r0, r8, r0
    2604:	0002c321 	andeq	ip, r2, r1, lsr #6
    2608:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    260c:	00088c12 	andeq	r8, r8, r2, lsl ip
    2610:	1fb20800 	svcne	0x00b20800
    2614:	00000a47 	andeq	r0, r0, r7, asr #20
    2618:	12302302 	eorsne	r2, r0, #134217728	; 0x8000000
    261c:	00001026 	andeq	r1, r0, r6, lsr #32
    2620:	5824b408 	stmdapl	r4!, {r3, sl, ip, sp, pc}
    2624:	0200000a 	andeq	r0, r0, #10
    2628:	83123423 	tsthi	r2, #587202560	; 0x23000000
    262c:	08000004 	stmdaeq	r0, {r2}
    2630:	0b6d22b6 	bleq	1b4b110 <_Min_Heap_Size+0x1b4a910>
    2634:	23020000 	movwcs	r0, #8192	; 0x2000
    2638:	02a61238 	adceq	r1, r6, #56, 4	; 0x80000003
    263c:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
    2640:	000b6d22 	andeq	r6, fp, r2, lsr #26
    2644:	3c230200 	sfmcc	f0, 4, [r3], #-0
    2648:	00027712 	andeq	r7, r2, r2, lsl r7
    264c:	21ba0800 			; <UNDEFINED> instruction: 0x21ba0800
    2650:	000006e5 	andeq	r0, r0, r5, ror #13
    2654:	12402302 	subne	r2, r0, #134217728	; 0x8000000
    2658:	00000171 	andeq	r0, r0, r1, ror r1
    265c:	3621bc08 	strtcc	fp, [r1], -r8, lsl #24
    2660:	0200000a 	andeq	r0, r0, #10
    2664:	7f124123 	svcvc	0x00124123
    2668:	08000008 	stmdaeq	r0, {r3}
    266c:	0a3621c0 	beq	d8ad74 <_Min_Heap_Size+0xd8a574>
    2670:	23020000 	movwcs	r0, #8192	; 0x2000
    2674:	037d1242 	cmneq	sp, #536870916	; 0x20000004
    2678:	c3080000 	movwgt	r0, #32768	; 0x8000
    267c:	0002d421 	andeq	sp, r2, r1, lsr #8
    2680:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    2684:	8f041400 	svchi	0x00041400
    2688:	14000006 	strne	r0, [r0], #-6
    268c:	0002b204 	andeq	fp, r2, r4, lsl #4
    2690:	a6041400 	strge	r1, [r4], -r0, lsl #8
    2694:	14000002 	strne	r0, [r0], #-2
    2698:	00096004 	andeq	r6, r9, r4
    269c:	04070600 	streq	r0, [r7], #-1536	; 0xfffffa00
    26a0:	d5080000 	strle	r0, [r8, #-0]
    26a4:	000a5d03 	andeq	r5, sl, r3, lsl #26
    26a8:	02fd1800 	rscseq	r1, sp, #0, 16
    26ac:	240b0000 	strcs	r0, [fp], #-0
    26b0:	000b731b 	andeq	r7, fp, fp, lsl r3
    26b4:	19010100 	stmdbne	r1, {r8}
    26b8:	00000b7f 	andeq	r0, r0, pc, ror fp
    26bc:	05141b01 	ldreq	r1, [r4, #-2817]	; 0xfffff4ff
    26c0:	00009403 	andeq	r9, r0, r3, lsl #8
    26c4:	c5011a20 	strgt	r1, [r1, #-2592]	; 0xfffff5e0
    26c8:	0100000a 	tsteq	r0, sl
    26cc:	0001065c 	andeq	r0, r1, ip, asr r6
    26d0:	00000000 	andeq	r0, r0, r0
    26d4:	17000000 	strne	r0, [r0, -r0]
    26d8:	01000003 	tsteq	r0, r3
    26dc:	00000bf9 	strdeq	r0, [r0], -r9
    26e0:	000b6d1b 	andeq	r6, fp, fp, lsl sp
    26e4:	2d5c0100 	ldfcse	f0, [ip, #-0]
    26e8:	00000bf9 	strdeq	r0, [r0], -r9
    26ec:	0000033f 	andeq	r0, r0, pc, lsr r3
    26f0:	00000337 	andeq	r0, r0, r7, lsr r3
    26f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    26f8:	000d0100 	andeq	r0, sp, r0, lsl #2
    26fc:	000be800 	andeq	lr, fp, r0, lsl #16
    2700:	50011d00 	andpl	r1, r1, r0, lsl #26
    2704:	00000c05 	andeq	r0, r0, r5, lsl #24
    2708:	011d4002 	tsteq	sp, r2
    270c:	000a0351 	andeq	r0, sl, r1, asr r3
    2710:	001e0006 	andseq	r0, lr, r6
    2714:	0f000000 	svceq	0x00000000
    2718:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    271c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    2720:	14000025 	strne	r0, [r0], #-37	; 0xffffffdb
    2724:	000b7304 	andeq	r7, fp, r4, lsl #6
    2728:	96011a00 	strls	r1, [r1], -r0, lsl #20
    272c:	0100000a 	tsteq	r0, sl
    2730:	c001063b 	andgt	r0, r1, fp, lsr r6
    2734:	40080007 	andmi	r0, r8, r7
    2738:	79080008 	stmdbvc	r8, {r3}
    273c:	01000003 	tsteq	r0, r3
    2740:	00000cc5 	andeq	r0, r0, r5, asr #25
    2744:	000b6d1b 	andeq	r6, fp, fp, lsl sp
    2748:	2b3b0100 	blcs	ec2b50 <_Min_Heap_Size+0xec2350>
    274c:	00000bf9 	strdeq	r0, [r0], -r9
    2750:	000003c5 	andeq	r0, r0, r5, asr #7
    2754:	000003bd 			; <UNDEFINED> instruction: 0x000003bd
    2758:	000a3b1f 	andeq	r3, sl, pc, lsl fp
    275c:	143e0100 	ldrtne	r0, [lr], #-256	; 0xffffff00
    2760:	00000746 	andeq	r0, r0, r6, asr #14
    2764:	20649102 	rsbcs	r9, r4, r2, lsl #2
    2768:	080007e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, sl}
    276c:	080007fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl}
    2770:	00000c5a 	andeq	r0, r0, sl, asr ip
    2774:	0001a51f 	andeq	sl, r1, pc, lsl r5
    2778:	05450100 	strbeq	r0, [r5, #-256]	; 0xffffff00
    277c:	000002d4 	ldrdeq	r0, [r0], -r4
    2780:	005c9102 	subseq	r9, ip, r2, lsl #2
    2784:	0007fc20 	andeq	pc, r7, r0, lsr #24
    2788:	00081008 	andeq	r1, r8, r8
    278c:	000c7708 	andeq	r7, ip, r8, lsl #14
    2790:	01a51f00 			; <UNDEFINED> instruction: 0x01a51f00
    2794:	47010000 	strmi	r0, [r1, -r0]
    2798:	0002d405 	andeq	sp, r2, r5, lsl #8
    279c:	60910200 	addsvs	r0, r1, r0, lsl #4
    27a0:	082a1c00 	stmdaeq	sl!, {sl, fp, ip}
    27a4:	0d1e0800 	ldceq	8, cr0, [lr, #-0]
    27a8:	0c940000 	ldceq	0, cr0, [r4], {0}
    27ac:	011d0000 	tsteq	sp, r0
    27b0:	000c0550 	andeq	r0, ip, r0, asr r5
    27b4:	1d400200 	sfmne	f0, 2, [r0, #-0]
    27b8:	91025101 	tstls	r2, r1, lsl #2
    27bc:	341c0064 	ldrcc	r0, [ip], #-100	; 0xffffff9c
    27c0:	2c080008 	stccs	0, cr0, [r8], {8}
    27c4:	b400000d 	strlt	r0, [r0], #-13
    27c8:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    27cc:	08025001 	stmdaeq	r2, {r0, ip, lr}
    27d0:	51011d25 	tstpl	r1, r5, lsr #26
    27d4:	1d007402 	cfstrsne	mvf7, [r0, #-8]
    27d8:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    27dc:	3a1e0000 	bcc	7827e4 <_Min_Heap_Size+0x781fe4>
    27e0:	3b080008 	blcc	202808 <_Min_Heap_Size+0x202008>
    27e4:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    27e8:	08025001 	stmdaeq	r2, {r0, ip, lr}
    27ec:	1a000025 	bne	2888 <_Min_Heap_Size+0x2088>
    27f0:	00000701 	andeq	r0, r0, r1, lsl #14
    27f4:	061f0100 	ldreq	r0, [pc], -r0, lsl #2
    27f8:	00078c01 	andeq	r8, r7, r1, lsl #24
    27fc:	0007c008 	andeq	ip, r7, r8
    2800:	0003ff08 	andeq	pc, r3, r8, lsl #30
    2804:	0d010100 	stfeqs	f0, [r1, #-0]
    2808:	ae1c0000 	cdpge	0, 1, cr0, cr12, cr0, {0}
    280c:	4a080007 	bmi	202830 <_Min_Heap_Size+0x202030>
    2810:	f700000d 			; <UNDEFINED> instruction: 0xf700000d
    2814:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    2818:	03055001 	movweq	r5, #20481	; 0x5001
    281c:	20000094 	mulcs	r0, r4, r0
    2820:	07b62100 	ldreq	r2, [r6, r0, lsl #2]!
    2824:	0d590800 	ldcleq	8, cr0, [r9, #-0]
    2828:	22000000 	andcs	r0, r0, #0
    282c:	0b500101 	bleq	1402c38 <_Min_Heap_Size+0x1402438>
    2830:	0b500000 	bleq	1402838 <_Min_Heap_Size+0x1402038>
    2834:	e1060000 	mrs	r0, (UNDEF: 6)
    2838:	01012307 	tsteq	r1, r7, lsl #6
    283c:	00000ed5 	ldrdeq	r0, [r0], -r5
    2840:	00000ed5 	ldrdeq	r0, [r0], -r5
    2844:	06010709 	streq	r0, [r1], -r9, lsl #14
    2848:	a0010122 	andge	r0, r1, r2, lsr #2
    284c:	a000000b 	andge	r0, r0, fp
    2850:	0600000b 	streq	r0, [r0], -fp
    2854:	012307e0 	smulwteq	r3, r0, r7
    2858:	000e2501 	andeq	r2, lr, r1, lsl #10
    285c:	000e2500 	andeq	r2, lr, r0, lsl #10
    2860:	01050900 	tsteq	r5, r0, lsl #18
    2864:	01012306 	tsteq	r1, r6, lsl #6
    2868:	00000e74 	andeq	r0, r0, r4, ror lr
    286c:	00000e74 	andeq	r0, r0, r4, ror lr
    2870:	06010609 	streq	r0, [r1], -r9, lsl #12
    2874:	d2010123 	andle	r0, r1, #-1073741816	; 0xc0000008
    2878:	d200000b 	andle	r0, r0, #11
    287c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2880:	221302ce 	andscs	r0, r3, #-536870900	; 0xe000000c
    2884:	03cd0101 	biceq	r0, sp, #1073741824	; 0x40000000
    2888:	03cd0000 	biceq	r0, sp, #0
    288c:	3c0a0000 	stccc	0, cr0, [sl], {-0}
    2890:	02e70006 	rsceq	r0, r7, #6
    2894:	00020000 	andeq	r0, r2, r0
    2898:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    289c:	05190104 	ldreq	r0, [r9, #-260]	; 0xfffffefc
    28a0:	e30c0000 	movw	r0, #49152	; 0xc000
    28a4:	2200000f 	andcs	r0, r0, #15
    28a8:	e8000008 	stmda	r0, {r3}
	...
    28b4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    28b8:	0200000c 	andeq	r0, r0, #12
    28bc:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    28c0:	01020000 	mrseq	r0, (UNDEF: 2)
    28c4:	00050b08 	andeq	r0, r5, r8, lsl #22
    28c8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    28cc:	000005d3 	ldrdeq	r0, [r0], -r3
    28d0:	37070202 	strcc	r0, [r7, -r2, lsl #4]
    28d4:	02000003 	andeq	r0, r0, #3
    28d8:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    28dc:	91030000 	mrsls	r0, (UNDEF: 3)
    28e0:	02000002 	andeq	r0, r0, #2
    28e4:	0058194f 	subseq	r1, r8, pc, asr #18
    28e8:	04020000 	streq	r0, [r2], #-0
    28ec:	0000bf07 	andeq	fp, r0, r7, lsl #30
    28f0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    28f4:	000002ad 	andeq	r0, r0, sp, lsr #5
    28f8:	ba070802 	blt	1c4908 <_Min_Heap_Size+0x1c4108>
    28fc:	04000000 	streq	r0, [r0], #-0
    2900:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2904:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2908:	0000c407 	andeq	ip, r0, r7, lsl #8
    290c:	02930300 	addseq	r0, r3, #0, 6
    2910:	30030000 	andcc	r0, r3, r0
    2914:	00004c14 	andeq	r4, r0, r4, lsl ip
    2918:	007b0500 	rsbseq	r0, fp, r0, lsl #10
    291c:	7b060000 	blvc	182924 <_Min_Heap_Size+0x182124>
    2920:	9c000000 	stcls	0, cr0, [r0], {-0}
    2924:	07000000 	streq	r0, [r0, -r0]
    2928:	00000074 	andeq	r0, r0, r4, ror r0
    292c:	88080001 	stmdahi	r8, {r0}
    2930:	0901f404 	stmdbeq	r1, {r2, sl, ip, sp, lr, pc}
    2934:	00000288 	andeq	r0, r0, r8, lsl #5
    2938:	00524309 	subseq	r4, r2, r9, lsl #6
    293c:	1101f604 	tstne	r1, r4, lsl #12	; <UNPREDICTABLE>
    2940:	00000087 	andeq	r0, r0, r7, lsl #1
    2944:	0a002302 	beq	b554 <_Min_Heap_Size+0xad54>
    2948:	00000256 	andeq	r0, r0, r6, asr r2
    294c:	1101f704 	tstne	r1, r4, lsl #14	; <UNPREDICTABLE>
    2950:	00000087 	andeq	r0, r0, r7, lsl #1
    2954:	0a042302 	beq	10b564 <_Min_Heap_Size+0x10ad64>
    2958:	00000259 	andeq	r0, r0, r9, asr r2
    295c:	1101f804 	tstne	r1, r4, lsl #16	; <UNPREDICTABLE>
    2960:	00000087 	andeq	r0, r0, r7, lsl #1
    2964:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    2968:	00524943 	subseq	r4, r2, r3, asr #18
    296c:	1101f904 	tstne	r1, r4, lsl #18	; <UNPREDICTABLE>
    2970:	00000087 	andeq	r0, r0, r7, lsl #1
    2974:	0a0c2302 	beq	30b584 <_Min_Heap_Size+0x30ad84>
    2978:	00000168 	andeq	r0, r0, r8, ror #2
    297c:	1101fa04 	tstne	r1, r4, lsl #20	; <UNPREDICTABLE>
    2980:	00000087 	andeq	r0, r0, r7, lsl #1
    2984:	0a102302 	beq	40b594 <_Min_Heap_Size+0x40ad94>
    2988:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    298c:	1101fb04 	tstne	r1, r4, lsl #22	; <UNPREDICTABLE>
    2990:	00000087 	andeq	r0, r0, r7, lsl #1
    2994:	0a142302 	beq	50b5a4 <_Min_Heap_Size+0x50ada4>
    2998:	00000374 	andeq	r0, r0, r4, ror r3
    299c:	1101fc04 	tstne	r1, r4, lsl #24	; <UNPREDICTABLE>
    29a0:	00000087 	andeq	r0, r0, r7, lsl #1
    29a4:	0a182302 	beq	60b5b4 <_Min_Heap_Size+0x60adb4>
    29a8:	000004a6 	andeq	r0, r0, r6, lsr #9
    29ac:	1101fd04 	tstne	r1, r4, lsl #26	; <UNPREDICTABLE>
    29b0:	0000007b 	andeq	r0, r0, fp, ror r0
    29b4:	0a1c2302 	beq	70b5c4 <_Min_Heap_Size+0x70adc4>
    29b8:	0000049d 	muleq	r0, sp, r4
    29bc:	1101fe04 	tstne	r1, r4, lsl #28	; <UNPREDICTABLE>
    29c0:	00000087 	andeq	r0, r0, r7, lsl #1
    29c4:	0a202302 	beq	80b5d4 <_Min_Heap_Size+0x80add4>
    29c8:	000001e8 	andeq	r0, r0, r8, ror #3
    29cc:	1101ff04 	tstne	r1, r4, lsl #30	; <UNPREDICTABLE>
    29d0:	00000087 	andeq	r0, r0, r7, lsl #1
    29d4:	0a242302 	beq	90b5e4 <_Min_Heap_Size+0x90ade4>
    29d8:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    29dc:	11020004 	tstne	r2, r4
    29e0:	0000008c 	andeq	r0, r0, ip, lsl #1
    29e4:	0a282302 	beq	a0b5f4 <_Min_Heap_Size+0xa0adf4>
    29e8:	0000080e 	andeq	r0, r0, lr, lsl #16
    29ec:	11020104 	tstne	r2, r4, lsl #2
    29f0:	00000087 	andeq	r0, r0, r7, lsl #1
    29f4:	0a302302 	beq	c0b604 <_Min_Heap_Size+0xc0ae04>
    29f8:	00000727 	andeq	r0, r0, r7, lsr #14
    29fc:	11020204 	tstne	r2, r4, lsl #4
    2a00:	00000087 	andeq	r0, r0, r7, lsl #1
    2a04:	0a342302 	beq	d0b614 <_Min_Heap_Size+0xd0ae14>
    2a08:	0000043f 	andeq	r0, r0, pc, lsr r4
    2a0c:	11020304 	tstne	r2, r4, lsl #6
    2a10:	00000087 	andeq	r0, r0, r7, lsl #1
    2a14:	0a382302 	beq	e0b624 <_Min_Heap_Size+0xe0ae24>
    2a18:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    2a1c:	11020404 	tstne	r2, r4, lsl #8
    2a20:	0000007b 	andeq	r0, r0, fp, ror r0
    2a24:	0a3c2302 	beq	f0b634 <_Min_Heap_Size+0xf0ae34>
    2a28:	0000065c 	andeq	r0, r0, ip, asr r6
    2a2c:	11020504 	tstne	r2, r4, lsl #10
    2a30:	00000087 	andeq	r0, r0, r7, lsl #1
    2a34:	0a402302 	beq	100b644 <_Min_Heap_Size+0x100ae44>
    2a38:	00000622 	andeq	r0, r0, r2, lsr #12
    2a3c:	11020604 	tstne	r2, r4, lsl #12
    2a40:	00000087 	andeq	r0, r0, r7, lsl #1
    2a44:	0a442302 	beq	110b654 <_Min_Heap_Size+0x110ae54>
    2a48:	000004c4 	andeq	r0, r0, r4, asr #9
    2a4c:	11020704 	tstne	r2, r4, lsl #14
    2a50:	0000008c 	andeq	r0, r0, ip, lsl #1
    2a54:	0a482302 	beq	120b664 <_Min_Heap_Size+0x120ae64>
    2a58:	00000132 	andeq	r0, r0, r2, lsr r1
    2a5c:	11020804 	tstne	r2, r4, lsl #16
    2a60:	00000087 	andeq	r0, r0, r7, lsl #1
    2a64:	0a502302 	beq	140b674 <_Min_Heap_Size+0x140ae74>
    2a68:	00000479 	andeq	r0, r0, r9, ror r4
    2a6c:	11020904 	tstne	r2, r4, lsl #18
    2a70:	00000087 	andeq	r0, r0, r7, lsl #1
    2a74:	0a542302 	beq	150b684 <_Min_Heap_Size+0x150ae84>
    2a78:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2a7c:	11020a04 	tstne	r2, r4, lsl #20
    2a80:	00000087 	andeq	r0, r0, r7, lsl #1
    2a84:	0a582302 	beq	160b694 <_Min_Heap_Size+0x160ae94>
    2a88:	000004ce 	andeq	r0, r0, lr, asr #9
    2a8c:	11020b04 	tstne	r2, r4, lsl #22
    2a90:	0000007b 	andeq	r0, r0, fp, ror r0
    2a94:	0a5c2302 	beq	170b6a4 <_Min_Heap_Size+0x170aea4>
    2a98:	0000001b 	andeq	r0, r0, fp, lsl r0
    2a9c:	11020c04 	tstne	r2, r4, lsl #24
    2aa0:	00000087 	andeq	r0, r0, r7, lsl #1
    2aa4:	0a602302 	beq	180b6b4 <_Min_Heap_Size+0x180aeb4>
    2aa8:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    2aac:	11020d04 	tstne	r2, r4, lsl #26
    2ab0:	00000087 	andeq	r0, r0, r7, lsl #1
    2ab4:	0a642302 	beq	190b6c4 <_Min_Heap_Size+0x190aec4>
    2ab8:	000004d8 	ldrdeq	r0, [r0], -r8
    2abc:	11020e04 	tstne	r2, r4, lsl #28
    2ac0:	0000008c 	andeq	r0, r0, ip, lsl #1
    2ac4:	0a682302 	beq	1a0b6d4 <_Min_Heap_Size+0x1a0aed4>
    2ac8:	00000796 	muleq	r0, r6, r7
    2acc:	11020f04 	tstne	r2, r4, lsl #30
    2ad0:	00000087 	andeq	r0, r0, r7, lsl #1
    2ad4:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    2ad8:	00525343 	subseq	r5, r2, r3, asr #6
    2adc:	11021004 	tstne	r2, r4
    2ae0:	00000087 	andeq	r0, r0, r7, lsl #1
    2ae4:	0a742302 	beq	1d0b6f4 <_Min_Heap_Size+0x1d0aef4>
    2ae8:	000004e2 	andeq	r0, r0, r2, ror #9
    2aec:	11021104 	tstne	r2, r4, lsl #2
    2af0:	0000008c 	andeq	r0, r0, ip, lsl #1
    2af4:	0a782302 	beq	1e0b704 <_Min_Heap_Size+0x1e0af04>
    2af8:	00000765 	andeq	r0, r0, r5, ror #14
    2afc:	11021204 	tstne	r2, r4, lsl #4
    2b00:	00000087 	andeq	r0, r0, r7, lsl #1
    2b04:	01802303 	orreq	r2, r0, r3, lsl #6
    2b08:	0003550a 	andeq	r5, r3, sl, lsl #10
    2b0c:	02130400 	andseq	r0, r3, #0, 8
    2b10:	00008711 	andeq	r8, r0, r1, lsl r7
    2b14:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    2b18:	bc0b0001 	stclt	0, cr0, [fp], {1}
    2b1c:	04000001 	streq	r0, [r0], #-1
    2b20:	9c030214 	sfmls	f0, 4, [r3], {20}
    2b24:	02000000 	andeq	r0, r0, #0
    2b28:	06640408 	strbteq	r0, [r4], -r8, lsl #8
    2b2c:	010c0000 	mrseq	r0, (UNDEF: 12)
    2b30:	00000fd7 	ldrdeq	r0, [r0], -r7
    2b34:	01063f01 	tsteq	r6, r1, lsl #30
    2b38:	08000840 	stmdaeq	r0, {r6, fp}
    2b3c:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
    2b40:	0000041f 	andeq	r0, r0, pc, lsl r4
    2b44:	08420d01 	stmdaeq	r2, {r0, r8, sl, fp}^
    2b48:	085a0800 	ldmdaeq	sl, {fp}^
    2b4c:	02d00800 	sbcseq	r0, r0, #0, 16
    2b50:	a50e0000 	strge	r0, [lr, #-0]
    2b54:	01000001 	tsteq	r0, r1
    2b58:	00870346 	addeq	r0, r7, r6, asr #6
    2b5c:	91020000 	mrsls	r0, (UNDEF: 2)
    2b60:	5a0f0078 	bpl	3c2d48 <_Min_Heap_Size+0x3c2548>
    2b64:	6e080008 	cdpvs	0, 0, cr0, cr8, cr8, {0}
    2b68:	0e080008 	cdpeq	0, 0, cr0, cr8, cr8, {0}
    2b6c:	000001a5 	andeq	r0, r0, r5, lsr #3
    2b70:	87034701 	strhi	r4, [r3, -r1, lsl #14]
    2b74:	02000000 	andeq	r0, r0, #0
    2b78:	00007c91 	muleq	r0, r1, ip
    2b7c:	00462a00 	subeq	r2, r6, r0, lsl #20
    2b80:	8f000200 	svchi	0x00000200
    2b84:	04000007 	streq	r0, [r0], #-7
    2b88:	00051901 	andeq	r1, r5, r1, lsl #18
    2b8c:	12b00c00 	adcsne	r0, r0, #0, 24
    2b90:	08220000 	stmdaeq	r2!, {}	; <UNPREDICTABLE>
    2b94:	01100000 	tsteq	r0, r0
	...
    2ba0:	0e5e0000 	cdpeq	0, 5, cr0, cr14, cr0, {0}
    2ba4:	01020000 	mrseq	r0, (UNDEF: 2)
    2ba8:	00050d06 	andeq	r0, r5, r6, lsl #26
    2bac:	00720300 	rsbseq	r0, r2, r0, lsl #6
    2bb0:	2b030000 	blcs	c2bb8 <_Min_Heap_Size+0xc23b8>
    2bb4:	00003c18 	andeq	r3, r0, r8, lsl ip
    2bb8:	08010200 	stmdaeq	r1, {r9}
    2bbc:	0000050b 	andeq	r0, r0, fp, lsl #10
    2bc0:	d3050202 	movwle	r0, #20994	; 0x5202
    2bc4:	03000005 	movweq	r0, #5
    2bc8:	0000069a 	muleq	r0, sl, r6
    2bcc:	56193903 	ldrpl	r3, [r9], -r3, lsl #18
    2bd0:	02000000 	andeq	r0, r0, #0
    2bd4:	03370702 	teqeq	r7, #524288	; 0x80000
    2bd8:	04020000 	streq	r0, [r2], #-0
    2bdc:	0002b205 	andeq	fp, r2, r5, lsl #4
    2be0:	02910300 	addseq	r0, r1, #0, 6
    2be4:	4f030000 	svcmi	0x00030000
    2be8:	00007019 	andeq	r7, r0, r9, lsl r0
    2bec:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2bf0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    2bf4:	ad050802 	stcge	8, cr0, [r5, #-8]
    2bf8:	03000002 	movweq	r0, #2
    2bfc:	00001444 	andeq	r1, r0, r4, asr #8
    2c00:	8a196903 	bhi	65d014 <_Min_Heap_Size+0x65c814>
    2c04:	02000000 	andeq	r0, r0, #0
    2c08:	00ba0708 	adcseq	r0, sl, r8, lsl #14
    2c0c:	04040000 	streq	r0, [r4], #-0
    2c10:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2c14:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2c18:	000000c4 	andeq	r0, r0, r4, asr #1
    2c1c:	00007403 	andeq	r7, r0, r3, lsl #8
    2c20:	13180400 	tstne	r8, #0, 8
    2c24:	00000030 	andeq	r0, r0, r0, lsr r0
    2c28:	00009f05 	andeq	r9, r0, r5, lsl #30
    2c2c:	069c0300 	ldreq	r0, [ip], r0, lsl #6
    2c30:	24040000 	strcs	r0, [r4], #-0
    2c34:	00004a14 	andeq	r4, r0, r4, lsl sl
    2c38:	00b00600 	adcseq	r0, r0, r0, lsl #12
    2c3c:	b0050000 	andlt	r0, r5, r0
    2c40:	03000000 	movweq	r0, #0
    2c44:	00000293 	muleq	r0, r3, r2
    2c48:	64143004 	ldrvs	r3, [r4], #-4
    2c4c:	06000000 	streq	r0, [r0], -r0
    2c50:	000000c6 	andeq	r0, r0, r6, asr #1
    2c54:	0000c605 	andeq	ip, r0, r5, lsl #12
    2c58:	14460300 	strbne	r0, [r6], #-768	; 0xfffffd00
    2c5c:	3c040000 	stccc	0, cr0, [r4], {-0}
    2c60:	00007e14 	andeq	r7, r0, r4, lsl lr
    2c64:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
    2c68:	52090144 	andpl	r0, r9, #68, 2
    2c6c:	08000001 	stmdaeq	r0, {r0}
    2c70:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2c74:	d2110146 	andsle	r0, r1, #-2147483631	; 0x80000011
    2c78:	02000000 	andeq	r0, r0, #0
    2c7c:	fa090023 	blx	242d10 <_Min_Heap_Size+0x242510>
    2c80:	05000006 	streq	r0, [r0, #-6]
    2c84:	d2110147 	andsle	r0, r1, #-1073741807	; 0xc0000011
    2c88:	02000000 	andeq	r0, r0, #0
    2c8c:	50080423 	andpl	r0, r8, r3, lsr #8
    2c90:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
    2c94:	d2110148 	andsle	r0, r1, #72, 2
    2c98:	02000000 	andeq	r0, r0, #0
    2c9c:	4e090823 	cdpmi	8, 0, cr0, cr9, cr3, {1}
    2ca0:	05000000 	streq	r0, [r0, #-0]
    2ca4:	d2110149 	andsle	r0, r1, #1073741842	; 0x40000012
    2ca8:	02000000 	andeq	r0, r0, #0
    2cac:	3b090c23 	blcc	245d40 <_Min_Heap_Size+0x245540>
    2cb0:	05000007 	streq	r0, [r0, #-7]
    2cb4:	d211014a 	andsle	r0, r1, #-2147483630	; 0x80000012
    2cb8:	02000000 	andeq	r0, r0, #0
    2cbc:	46081023 	strmi	r1, [r8], -r3, lsr #32
    2cc0:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    2cc4:	d211014b 	andsle	r0, r1, #-1073741806	; 0xc0000012
    2cc8:	02000000 	andeq	r0, r0, #0
    2ccc:	0a001423 	beq	7d60 <_Min_Heap_Size+0x7560>
    2cd0:	00000714 	andeq	r0, r0, r4, lsl r7
    2cd4:	03014c05 	movweq	r4, #7173	; 0x1c05
    2cd8:	000000e8 	andeq	r0, r0, r8, ror #1
    2cdc:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
    2ce0:	01d80902 	bicseq	r0, r8, r2, lsl #18
    2ce4:	53080000 	movwpl	r0, #32768	; 0x8000
    2ce8:	97050052 	smlsdls	r5, r2, r0, r0
    2cec:	00d21102 	sbcseq	r1, r2, r2, lsl #2
    2cf0:	23020000 	movwcs	r0, #8192	; 0x2000
    2cf4:	52440800 	subpl	r0, r4, #0, 16
    2cf8:	02980500 	addseq	r0, r8, #0, 10
    2cfc:	0000d211 	andeq	sp, r0, r1, lsl r2
    2d00:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2d04:	52524208 	subspl	r4, r2, #8, 4	; 0x80000000
    2d08:	02990500 	addseq	r0, r9, #0, 10
    2d0c:	0000d211 	andeq	sp, r0, r1, lsl r2
    2d10:	08230200 	stmdaeq	r3!, {r9}
    2d14:	31524308 	cmpcc	r2, r8, lsl #6
    2d18:	029a0500 	addseq	r0, sl, #0, 10
    2d1c:	0000d211 	andeq	sp, r0, r1, lsl r2
    2d20:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2d24:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
    2d28:	029b0500 	addseq	r0, fp, #0, 10
    2d2c:	0000d211 	andeq	sp, r0, r1, lsl r2
    2d30:	10230200 	eorne	r0, r3, r0, lsl #4
    2d34:	33524308 	cmpcc	r2, #8, 6	; 0x20000000
    2d38:	029c0500 	addseq	r0, ip, #0, 10
    2d3c:	0000d211 	andeq	sp, r0, r1, lsl r2
    2d40:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2d44:	00017809 	andeq	r7, r1, r9, lsl #16
    2d48:	029d0500 	addseq	r0, sp, #0, 10
    2d4c:	0000d211 	andeq	sp, r0, r1, lsl r2
    2d50:	18230200 	stmdane	r3!, {r9}
    2d54:	03a70a00 			; <UNDEFINED> instruction: 0x03a70a00
    2d58:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    2d5c:	015f0302 	cmpeq	pc, r2, lsl #6
    2d60:	070b0000 	streq	r0, [fp, -r0]
    2d64:	00003c01 	andeq	r3, r0, r1, lsl #24
    2d68:	01b90600 			; <UNDEFINED> instruction: 0x01b90600
    2d6c:	00000200 	andeq	r0, r0, r0, lsl #4
    2d70:	0002e40c 	andeq	lr, r2, ip, lsl #8
    2d74:	530d0000 	movwpl	r0, #53248	; 0xd000
    2d78:	01005445 	tsteq	r0, r5, asr #8
    2d7c:	10560300 	subsne	r0, r6, r0, lsl #6
    2d80:	bc060000 	stclt	0, cr0, [r6], {-0}
    2d84:	0001e503 	andeq	lr, r1, r3, lsl #10
    2d88:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2d8c:	00000664 	andeq	r0, r0, r4, ror #12
    2d90:	3c01070b 	stccc	7, cr0, [r1], {11}
    2d94:	07000000 	streq	r0, [r0, -r0]
    2d98:	023a0127 	eorseq	r0, sl, #-1073741815	; 0xc0000009
    2d9c:	100c0000 	andne	r0, ip, r0
    2da0:	00000003 	andeq	r0, r0, r3
    2da4:	0006520c 	andeq	r5, r6, ip, lsl #4
    2da8:	760c0100 	strvc	r0, [ip], -r0, lsl #2
    2dac:	02000008 	andeq	r0, r0, #8
    2db0:	0002f10c 	andeq	pc, r2, ip, lsl #2
    2db4:	03000300 	movweq	r0, #768	; 0x300
    2db8:	00001290 	muleq	r0, r0, r2
    2dbc:	13032c07 	movwne	r2, #15367	; 0x3c07
    2dc0:	0b000002 	bleq	2dd0 <_Min_Heap_Size+0x25d0>
    2dc4:	003c0107 	eorseq	r0, ip, r7, lsl #2
    2dc8:	32070000 	andcc	r0, r7, #0
    2dcc:	00026101 	andeq	r6, r2, r1, lsl #2
    2dd0:	08690c00 	stmdaeq	r9!, {sl, fp}^
    2dd4:	0c000000 	stceq	0, cr0, [r0], {-0}
    2dd8:	00000434 	andeq	r0, r0, r4, lsr r4
    2ddc:	ac030001 	stcge	0, cr0, [r3], {1}
    2de0:	07000001 	streq	r0, [r0, -r1]
    2de4:	02460335 	subeq	r0, r6, #-738197504	; 0xd4000000
    2de8:	300e0000 	andcc	r0, lr, r0
    2dec:	2b093008 	blcs	24ee14 <_Min_Heap_Size+0x24e614>
    2df0:	0f000003 	svceq	0x00000003
    2df4:	00000503 	andeq	r0, r0, r3, lsl #10
    2df8:	c60c3208 	strgt	r3, [ip], -r8, lsl #4
    2dfc:	02000000 	andeq	r0, r0, #0
    2e00:	9c0f0023 	stcls	0, cr0, [pc], {35}	; 0x23
    2e04:	08000002 	stmdaeq	r0, {r1}
    2e08:	00c60c35 	sbceq	r0, r6, r5, lsr ip
    2e0c:	23020000 	movwcs	r0, #8192	; 0x2000
    2e10:	01f10f04 	mvnseq	r0, r4, lsl #30
    2e14:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    2e18:	0000c60c 	andeq	ip, r0, ip, lsl #12
    2e1c:	08230200 	stmdaeq	r3!, {r9}
    2e20:	0006c50f 	andeq	ip, r6, pc, lsl #10
    2e24:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    2e28:	000000c6 	andeq	r0, r0, r6, asr #1
    2e2c:	0f0c2302 	svceq	0x000c2302
    2e30:	00000740 	andeq	r0, r0, r0, asr #14
    2e34:	c60c3f08 	strgt	r3, [ip], -r8, lsl #30
    2e38:	02000000 	andeq	r0, r0, #0
    2e3c:	960f1023 	strls	r1, [pc], -r3, lsr #32
    2e40:	08000003 	stmdaeq	r0, {r0, r1}
    2e44:	00c60c42 	sbceq	r0, r6, r2, asr #24
    2e48:	23020000 	movwcs	r0, #8192	; 0x2000
    2e4c:	06420f14 			; <UNDEFINED> instruction: 0x06420f14
    2e50:	45080000 	strmi	r0, [r8, #-0]
    2e54:	0000c60c 	andeq	ip, r0, ip, lsl #12
    2e58:	18230200 	stmdane	r3!, {r9}
    2e5c:	001f670f 	andseq	r6, pc, pc, lsl #14
    2e60:	0c4a0800 	mcrreq	8, 0, r0, sl, cr0
    2e64:	000000c6 	andeq	r0, r0, r6, asr #1
    2e68:	0f1c2302 	svceq	0x001c2302
    2e6c:	0000063e 	andeq	r0, r0, lr, lsr r6
    2e70:	c60c4d08 	strgt	r4, [ip], -r8, lsl #26
    2e74:	02000000 	andeq	r0, r0, #0
    2e78:	700f2023 	andvc	r2, pc, r3, lsr #32
    2e7c:	08000006 	stmdaeq	r0, {r1, r2}
    2e80:	00c60c52 	sbceq	r0, r6, r2, asr ip
    2e84:	23020000 	movwcs	r0, #8192	; 0x2000
    2e88:	02040f24 	andeq	r0, r4, #36, 30	; 0x90
    2e8c:	55080000 	strpl	r0, [r8, #-0]
    2e90:	0000c60c 	andeq	ip, r0, ip, lsl #12
    2e94:	28230200 	stmdacs	r3!, {r9}
    2e98:	0006cc0f 	andeq	ip, r6, pc, lsl #24
    2e9c:	0c5b0800 	mrrceq	8, 0, r0, fp, cr0
    2ea0:	000000c6 	andeq	r0, r0, r6, asr #1
    2ea4:	002c2302 	eoreq	r2, ip, r2, lsl #6
    2ea8:	00005303 	andeq	r5, r0, r3, lsl #6
    2eac:	02600800 	rsbeq	r0, r0, #0, 16
    2eb0:	0000026d 	andeq	r0, r0, sp, ror #4
    2eb4:	3c01070b 	stccc	7, cr0, [r1], {11}
    2eb8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2ebc:	036a0167 	cmneq	sl, #-1073741799	; 0xc0000019
    2ec0:	d60c0000 	strle	r0, [ip], -r0
    2ec4:	00000002 	andeq	r0, r0, r2
    2ec8:	0003db0c 	andeq	sp, r3, ip, lsl #22
    2ecc:	dd0c0100 	stfles	f0, [ip, #-0]
    2ed0:	02000005 	andeq	r0, r0, #5
    2ed4:	0007bc0c 	andeq	fp, r7, ip, lsl #24
    2ed8:	1c0c0300 	stcne	3, cr0, [ip], {-0}
    2edc:	04000002 	streq	r0, [r0], #-2
    2ee0:	0003600c 	andeq	r6, r3, ip
    2ee4:	03000500 	movweq	r0, #1280	; 0x500
    2ee8:	000005be 			; <UNDEFINED> instruction: 0x000005be
    2eec:	37026e08 	strcc	r6, [r2, -r8, lsl #28]
    2ef0:	06000003 	streq	r0, [r0], -r3
    2ef4:	0000036a 	andeq	r0, r0, sl, ror #6
    2ef8:	00062a10 	andeq	r2, r6, r0, lsl sl
    2efc:	8a086000 	bhi	21af04 <_Min_Heap_Size+0x21a704>
    2f00:	00045b10 	andeq	r5, r4, r0, lsl fp
    2f04:	04470f00 	strbeq	r0, [r7], #-3840	; 0xfffff100
    2f08:	8c080000 	stchi	0, cr0, [r8], {-0}
    2f0c:	00045b1f 	andeq	r5, r4, pc, lsl fp
    2f10:	00230200 	eoreq	r0, r3, r0, lsl #4
    2f14:	001a160f 	andseq	r1, sl, pc, lsl #12
    2f18:	1e8e0800 	cdpne	8, 8, cr0, cr14, cr0, {0}
    2f1c:	0000032b 	andeq	r0, r0, fp, lsr #6
    2f20:	0f042302 	svceq	0x00042302
    2f24:	00000277 	andeq	r0, r0, r7, ror r2
    2f28:	611e9008 	tstvs	lr, r8
    2f2c:	02000002 	andeq	r0, r0, #2
    2f30:	d00f3423 	andle	r3, pc, r3, lsr #8
    2f34:	08000002 	stmdaeq	r0, {r1}
    2f38:	03761e92 	cmneq	r6, #2336	; 0x920
    2f3c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f40:	02700f35 	rsbseq	r0, r0, #53, 30	; 0xd4
    2f44:	94080000 	strls	r0, [r8], #-0
    2f48:	0004611f 	andeq	r6, r4, pc, lsl r1
    2f4c:	38230200 	stmdacc	r3!, {r9}
    2f50:	0008ac0f 	andeq	sl, r8, pc, lsl #24
    2f54:	21960800 	orrscs	r0, r6, r0, lsl #16
    2f58:	00000475 	andeq	r0, r0, r5, ror r4
    2f5c:	0f3c2302 	svceq	0x003c2302
    2f60:	000001c8 	andeq	r0, r0, r8, asr #3
    2f64:	75219808 	strvc	r9, [r1, #-2056]!	; 0xfffff7f8
    2f68:	02000004 	andeq	r0, r0, #4
    2f6c:	860f4023 	strhi	r4, [pc], -r3, lsr #32
    2f70:	08000001 	stmdaeq	r0, {r0}
    2f74:	0475219a 	ldrbteq	r2, [r5], #-410	; 0xfffffe66
    2f78:	23020000 	movwcs	r0, #8192	; 0x2000
    2f7c:	04ec0f44 	strbteq	r0, [ip], #3908	; 0xf44
    2f80:	9c080000 	stcls	0, cr0, [r8], {-0}
    2f84:	00047521 	andeq	r7, r4, r1, lsr #10
    2f88:	48230200 	stmdami	r3!, {r9}
    2f8c:	0004500f 	andeq	r5, r4, pc
    2f90:	219e0800 	orrscs	r0, lr, r0, lsl #16
    2f94:	00000475 	andeq	r0, r0, r5, ror r4
    2f98:	0f4c2302 	svceq	0x004c2302
    2f9c:	0000089a 	muleq	r0, sl, r8
    2fa0:	7521a008 	strvc	sl, [r1, #-8]!
    2fa4:	02000004 	andeq	r0, r0, #4
    2fa8:	7d0f5023 	stcvc	0, cr5, [pc, #-140]	; 2f24 <_Min_Heap_Size+0x2724>
    2fac:	08000003 	stmdaeq	r0, {r0, r1}
    2fb0:	00d21ea2 	sbcseq	r1, r2, r2, lsr #29
    2fb4:	23020000 	movwcs	r0, #8192	; 0x2000
    2fb8:	025e0f54 	subseq	r0, lr, #84, 30	; 0x150
    2fbc:	a4080000 	strge	r0, [r8], #-0
    2fc0:	0000c61e 	andeq	ip, r0, lr, lsl r6
    2fc4:	58230200 	stmdapl	r3!, {r9}
    2fc8:	0003040f 	andeq	r0, r3, pc, lsl #8
    2fcc:	1ea60800 	cdpne	8, 10, cr0, cr6, cr0, {0}
    2fd0:	000000c6 	andeq	r0, r0, r6, asr #1
    2fd4:	005c2302 	subseq	r2, ip, r2, lsl #6
    2fd8:	01520411 	cmpeq	r2, r1, lsl r4
    2fdc:	04120000 	ldreq	r0, [r2], #-0
    2fe0:	046f0113 	strbteq	r0, [pc], #-275	; 2fe8 <_Min_Heap_Size+0x27e8>
    2fe4:	6f140000 	svcvs	0x00140000
    2fe8:	00000004 	andeq	r0, r0, r4
    2fec:	037b0411 	cmneq	fp, #285212672	; 0x11000000
    2ff0:	04110000 	ldreq	r0, [r1], #-0
    2ff4:	00000463 	andeq	r0, r0, r3, ror #8
    2ff8:	00062c03 	andeq	r2, r6, r3, lsl #24
    2ffc:	02a80800 	adceq	r0, r8, #0, 16
    3000:	0000037b 	andeq	r0, r0, fp, ror r3
    3004:	2e091c0e 	cdpcs	12, 0, cr1, cr9, cr14, {0}
    3008:	0004fa09 	andeq	pc, r4, r9, lsl #20
    300c:	017d0f00 	cmneq	sp, r0, lsl #30
    3010:	30090000 	andcc	r0, r9, r0
    3014:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3018:	00230200 	eoreq	r0, r3, r0, lsl #4
    301c:	0006470f 	andeq	r4, r6, pc, lsl #14
    3020:	0c360900 			; <UNDEFINED> instruction: 0x0c360900
    3024:	000000c6 	andeq	r0, r0, r6, asr #1
    3028:	0f042302 	svceq	0x00042302
    302c:	0000024d 	andeq	r0, r0, sp, asr #4
    3030:	c60c3909 	strgt	r3, [ip], -r9, lsl #18
    3034:	02000000 	andeq	r0, r0, #0
    3038:	ea0f0823 	b	3c50cc <_Min_Heap_Size+0x3c48cc>
    303c:	09000002 	stmdbeq	r0, {r1}
    3040:	00c60c3c 	sbceq	r0, r6, ip, lsr ip
    3044:	23020000 	movwcs	r0, #8192	; 0x2000
    3048:	06420f0c 	strbeq	r0, [r2], -ip, lsl #30
    304c:	43090000 	movwmi	r0, #36864	; 0x9000
    3050:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3054:	10230200 	eorne	r0, r3, r0, lsl #4
    3058:	0007b20f 	andeq	fp, r7, pc, lsl #4
    305c:	0c460900 	mcrreq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
    3060:	000000c6 	andeq	r0, r0, r6, asr #1
    3064:	0f142302 	svceq	0x00142302
    3068:	0000013c 	andeq	r0, r0, ip, lsr r1
    306c:	c60c4909 	strgt	r4, [ip], -r9, lsl #18
    3070:	02000000 	andeq	r0, r0, #0
    3074:	03001823 	movweq	r1, #2083	; 0x823
    3078:	00000754 	andeq	r0, r0, r4, asr r7
    307c:	87034b09 	strhi	r4, [r3, -r9, lsl #22]
    3080:	0b000004 	bleq	3098 <_Min_Heap_Size+0x2898>
    3084:	003c0107 	eorseq	r0, ip, r7, lsl #2
    3088:	75090000 	strvc	r0, [r9, #-0]
    308c:	00054501 	andeq	r4, r5, r1, lsl #10
    3090:	06ff0c00 	ldrbteq	r0, [pc], r0, lsl #24
    3094:	0c000000 	stceq	0, cr0, [r0], {-0}
    3098:	0000027c 	andeq	r0, r0, ip, ror r2
    309c:	07fa0c20 	ldrbeq	r0, [sl, r0, lsr #24]!
    30a0:	0c240000 	stceq	0, cr0, [r4], #-0
    30a4:	00000462 	andeq	r0, r0, r2, ror #8
    30a8:	06a50c21 	strteq	r0, [r5], r1, lsr #24
    30ac:	0c220000 	stceq	0, cr0, [r2], #-0
    30b0:	0000041a 	andeq	r0, r0, sl, lsl r4
    30b4:	079b0c23 	ldreq	r0, [fp, r3, lsr #24]
    30b8:	0ca00000 	stceq	0, cr0, [r0]
    30bc:	0000060d 	andeq	r0, r0, sp, lsl #12
    30c0:	250300e0 	strcs	r0, [r3, #-224]	; 0xffffff20
    30c4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    30c8:	05060387 	streq	r0, [r6, #-903]	; 0xfffffc79
    30cc:	45060000 	strmi	r0, [r6, #-0]
    30d0:	03000005 	movweq	r0, #5
    30d4:	0000076b 	andeq	r0, r0, fp, ror #14
    30d8:	c6129009 	ldrgt	r9, [r2], -r9
    30dc:	06000000 	streq	r0, [r0], -r0
    30e0:	00000556 	andeq	r0, r0, r6, asr r5
    30e4:	0000d103 	andeq	sp, r0, r3, lsl #2
    30e8:	129b0900 	addsne	r0, fp, #0, 18
    30ec:	000000c6 	andeq	r0, r0, r6, asr #1
    30f0:	00056706 	andeq	r6, r5, r6, lsl #14
    30f4:	04051000 	streq	r1, [r5], #-0
    30f8:	09480000 	stmdbeq	r8, {}^	; <UNPREDICTABLE>
    30fc:	067610a0 	ldrbteq	r1, [r6], -r0, lsr #1
    3100:	470f0000 	strmi	r0, [pc, -r0]
    3104:	09000004 	stmdbeq	r0, {r2}
    3108:	067622a2 	ldrbteq	r2, [r6], -r2, lsr #5
    310c:	23020000 	movwcs	r0, #8192	; 0x2000
    3110:	1a160f00 	bne	586d18 <_Min_Heap_Size+0x586518>
    3114:	a4090000 	strge	r0, [r9], #-0
    3118:	0004fa21 	andeq	pc, r4, r1, lsr #20
    311c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3120:	0001dd0f 	andeq	sp, r1, pc, lsl #26
    3124:	22a60900 	adccs	r0, r6, #0, 18
    3128:	0000067c 	andeq	r0, r0, ip, ror r6
    312c:	0f202302 	svceq	0x00202302
    3130:	0000034a 	andeq	r0, r0, sl, asr #6
    3134:	b021a809 	eorlt	sl, r1, r9, lsl #16
    3138:	02000000 	andeq	r0, r0, #0
    313c:	490f2423 	stmdbmi	pc, {r0, r1, r5, sl, sp}	; <UNPREDICTABLE>
    3140:	09000001 	stmdbeq	r0, {r0}
    3144:	00bc21aa 	adcseq	r2, ip, sl, lsr #3
    3148:	23020000 	movwcs	r0, #8192	; 0x2000
    314c:	07d20f26 	ldrbeq	r0, [r2, r6, lsr #30]
    3150:	ac090000 	stcge	0, cr0, [r9], {-0}
    3154:	00068222 	andeq	r8, r6, r2, lsr #4
    3158:	28230200 	stmdacs	r3!, {r9}
    315c:	00032c0f 	andeq	r2, r3, pc, lsl #24
    3160:	21ae0900 			; <UNDEFINED> instruction: 0x21ae0900
    3164:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    3168:	0f2c2302 	svceq	0x002c2302
    316c:	00000816 	andeq	r0, r0, r6, lsl r8
    3170:	bc21b009 	stclt	0, cr11, [r1], #-36	; 0xffffffdc
    3174:	02000000 	andeq	r0, r0, #0
    3178:	8c0f2e23 	stchi	14, cr2, [pc], {35}	; 0x23
    317c:	09000008 	stmdbeq	r0, {r3}
    3180:	05621fb2 	strbeq	r1, [r2, #-4018]!	; 0xfffff04e
    3184:	23020000 	movwcs	r0, #8192	; 0x2000
    3188:	10260f30 	eorne	r0, r6, r0, lsr pc
    318c:	b4090000 	strlt	r0, [r9], #-0
    3190:	00057324 	andeq	r7, r5, r4, lsr #6
    3194:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    3198:	0004830f 	andeq	r8, r4, pc, lsl #6
    319c:	22b60900 	adcscs	r0, r6, #0, 18
    31a0:	00000688 	andeq	r0, r0, r8, lsl #13
    31a4:	0f382302 	svceq	0x00382302
    31a8:	000002a6 	andeq	r0, r0, r6, lsr #5
    31ac:	8822b809 	stmdahi	r2!, {r0, r3, fp, ip, sp, pc}
    31b0:	02000006 	andeq	r0, r0, #6
    31b4:	770f3c23 	strvc	r3, [pc, -r3, lsr #24]
    31b8:	09000002 	stmdbeq	r0, {r1}
    31bc:	026121ba 	rsbeq	r2, r1, #-2147483602	; 0x8000002e
    31c0:	23020000 	movwcs	r0, #8192	; 0x2000
    31c4:	01710f40 	cmneq	r1, r0, asr #30
    31c8:	bc090000 	stclt	0, cr0, [r9], {-0}
    31cc:	00055121 	andeq	r5, r5, r1, lsr #2
    31d0:	41230200 			; <UNDEFINED> instruction: 0x41230200
    31d4:	00087f0f 	andeq	r7, r8, pc, lsl #30
    31d8:	21c00900 	biccs	r0, r0, r0, lsl #18
    31dc:	00000551 	andeq	r0, r0, r1, asr r5
    31e0:	0f422302 	svceq	0x00422302
    31e4:	0000037d 	andeq	r0, r0, sp, ror r3
    31e8:	d221c309 	eorle	ip, r1, #603979776	; 0x24000000
    31ec:	02000000 	andeq	r0, r0, #0
    31f0:	11004423 	tstne	r0, r3, lsr #8
    31f4:	0001d804 	andeq	sp, r1, r4, lsl #16
    31f8:	ab041100 	blge	107600 <_Min_Heap_Size+0x106e00>
    31fc:	11000000 	mrsne	r0, (UNDEF: 0)
    3200:	00009f04 	andeq	r9, r0, r4, lsl #30
    3204:	7b041100 	blvc	10760c <_Min_Heap_Size+0x106e0c>
    3208:	03000004 	movweq	r0, #4
    320c:	00000407 	andeq	r0, r0, r7, lsl #8
    3210:	7803d509 	stmdavc	r3, {r0, r3, r8, sl, ip, lr, pc}
    3214:	05000005 	streq	r0, [r0, #-5]
    3218:	0000068e 	andeq	r0, r0, lr, lsl #13
    321c:	00120315 	andseq	r0, r2, r5, lsl r3
    3220:	0e6f0100 	poweqe	f0, f7, f0
    3224:	0934010d 	ldmdbeq	r4!, {r0, r2, r3, r8}
    3228:	0aa80800 	beq	fea05230 <_estack+0xdea03ff0>
    322c:	044b0800 	strbeq	r0, [fp], #-2048	; 0xfffff800
    3230:	96010000 	strls	r0, [r1], -r0
    3234:	16000007 	strne	r0, [r0], -r7
    3238:	00001491 	muleq	r0, r1, r4
    323c:	300e6f01 	andcc	r6, lr, r1, lsl #30
    3240:	00000796 	muleq	r0, r6, r7
    3244:	00000473 	andeq	r0, r0, r3, ror r4
    3248:	0000046b 	andeq	r0, r0, fp, ror #8
    324c:	0001a517 	andeq	sl, r1, r7, lsl r5
    3250:	0e710100 	rpweqs	f0, f1, f0
    3254:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3258:	0004a900 	andeq	sl, r4, r0, lsl #18
    325c:	0004a700 	andeq	sl, r4, r0, lsl #14
    3260:	14ca1700 	strbne	r1, [sl], #1792	; 0x700
    3264:	72010000 	andvc	r0, r1, #0
    3268:	00c60c0e 	sbceq	r0, r6, lr, lsl #24
    326c:	04c20000 	strbeq	r0, [r2], #0
    3270:	04bc0000 	ldrteq	r0, [ip], #0
    3274:	70180000 	andsvc	r0, r8, r0
    3278:	ab080009 	blge	2032a4 <_Min_Heap_Size+0x202aa4>
    327c:	17000045 	strne	r0, [r0, -r5, asr #32]
    3280:	19000007 	stmdbne	r0, {r0, r1, r2}
    3284:	03055001 	movweq	r5, #20481	; 0x5001
    3288:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    328c:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    3290:	000e780a 	andeq	r7, lr, sl, lsl #16
    3294:	0009be1a 	andeq	fp, r9, sl, lsl lr
    3298:	0045ba08 	subeq	fp, r5, r8, lsl #20
    329c:	09ca1800 	stmibeq	sl, {fp, ip}^
    32a0:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    32a4:	073e0000 	ldreq	r0, [lr, -r0]!
    32a8:	01190000 	tsteq	r9, r0
    32ac:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    32b0:	1908002c 	stmdbne	r8, {r2, r3, r5}
    32b4:	0a035101 	beq	d76c0 <_Min_Heap_Size+0xd6ec0>
    32b8:	18000e75 	stmdane	r0, {r0, r2, r4, r5, r6, r9, sl, fp}
    32bc:	080009d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, fp}
    32c0:	000045ab 	andeq	r4, r0, fp, lsr #11
    32c4:	0000075c 	andeq	r0, r0, ip, asr r7
    32c8:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    32cc:	002cc803 	eoreq	ip, ip, r3, lsl #16
    32d0:	51011908 	tstpl	r1, r8, lsl #18
    32d4:	0e760a03 	vaddeq.f32	s1, s12, s6
    32d8:	09e21800 	stmibeq	r2!, {fp, ip}^
    32dc:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    32e0:	077a0000 	ldrbeq	r0, [sl, -r0]!
    32e4:	01190000 	tsteq	r9, r0
    32e8:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    32ec:	1908002c 	stmdbne	r8, {r2, r3, r5}
    32f0:	0a035101 	beq	d76fc <_Min_Heap_Size+0xd6efc>
    32f4:	1a000e77 	bne	6cd8 <_Min_Heap_Size+0x64d8>
    32f8:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
    32fc:	000045c9 	andeq	r4, r0, r9, asr #11
    3300:	000a181a 	andeq	r1, sl, sl, lsl r8
    3304:	0045d808 	subeq	sp, r5, r8, lsl #16
    3308:	0a6a1a00 	beq	1a89b10 <_Min_Heap_Size+0x1a89310>
    330c:	45d80800 	ldrbmi	r0, [r8, #2048]	; 0x800
    3310:	11000000 	mrsne	r0, (UNDEF: 0)
    3314:	00068e04 	andeq	r8, r6, r4, lsl #28
    3318:	16a11b00 	strtne	r1, [r1], r0, lsl #22
    331c:	0a010000 	beq	43324 <_Min_Heap_Size+0x42b24>
    3320:	3a011a0e 	bcc	49b60 <_Min_Heap_Size+0x49360>
    3324:	5e000002 	cdppl	0, 0, cr0, cr0, cr2, {0}
    3328:	4408000d 	strmi	r0, [r8], #-13
    332c:	eb08000e 	bl	20336c <_Min_Heap_Size+0x202b6c>
    3330:	01000004 	tsteq	r0, r4
    3334:	000008cf 	andeq	r0, r0, pc, asr #17
    3338:	00149116 	andseq	r9, r4, r6, lsl r1
    333c:	0e0a0100 	adfeqe	f0, f2, f0
    3340:	0007963e 	andeq	r9, r7, lr, lsr r6
    3344:	00055700 	andeq	r5, r5, r0, lsl #14
    3348:	00054700 	andeq	r4, r5, r0, lsl #14
    334c:	110e1700 	tstne	lr, r0, lsl #14
    3350:	0c010000 	stceq	0, cr0, [r1], {-0}
    3354:	06820d0e 	streq	r0, [r2], lr, lsl #26
    3358:	05c90000 	strbeq	r0, [r9]
    335c:	05c30000 	strbeq	r0, [r3]
    3360:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    3364:	01000011 	tsteq	r0, r1, lsl r0
    3368:	cf0d0e0d 	svcgt	0x000d0e0d
    336c:	f9000008 			; <UNDEFINED> instruction: 0xf9000008
    3370:	f3000005 	vhadd.u8	d0, d0, d5
    3374:	1c000005 	stcne	0, cr0, [r0], {5}
    3378:	08000dd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, fp}
    337c:	08000dea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, sl, fp}
    3380:	00000892 	muleq	r0, r2, r8
    3384:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    3388:	0e420100 	dvfeqs	f0, f2, f0
    338c:	0000c609 	andeq	ip, r0, r9, lsl #12
    3390:	00062600 	andeq	r2, r6, r0, lsl #12
    3394:	00062400 	andeq	r2, r6, r0, lsl #8
    3398:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    339c:	0dd40000 	ldcleq	0, cr0, [r4]
    33a0:	00000800 	andeq	r0, r0, r0, lsl #16
    33a4:	08000dd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, fp}
    33a8:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
    33ac:	090e4201 	stmdbeq	lr, {r0, r9, lr}
    33b0:	00000852 	andeq	r0, r0, r2, asr r8
    33b4:	0045901f 	subeq	r9, r5, pc, lsl r0
    33b8:	00063f00 	andeq	r3, r6, r0, lsl #30
    33bc:	00063900 	andeq	r3, r6, r0, lsl #18
    33c0:	459d2000 	ldrmi	r2, [sp]
    33c4:	066e0000 	strbteq	r0, [lr], -r0
    33c8:	066c0000 	strbteq	r0, [ip], -r0
    33cc:	21000000 	mrscs	r0, (UNDEF: 0)
    33d0:	0000453c 	andeq	r4, r0, ip, lsr r5
    33d4:	08000de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp}
    33d8:	0de00001 	stcleq	0, cr0, [r0, #4]!
    33dc:	0de60800 	stcleq	8, cr0, [r6]
    33e0:	42010800 	andmi	r0, r1, #0, 16
    33e4:	5c1f090e 			; <UNDEFINED> instruction: 0x5c1f090e
    33e8:	85000045 	strhi	r0, [r0, #-69]	; 0xffffffbb
    33ec:	81000006 	tsthi	r0, r6
    33f0:	1f000006 	svcne	0x00000006
    33f4:	0000454f 	andeq	r4, r0, pc, asr #10
    33f8:	000006a7 	andeq	r0, r0, r7, lsr #13
    33fc:	000006a5 	andeq	r0, r0, r5, lsr #13
    3400:	00456920 	subeq	r6, r5, r0, lsr #18
    3404:	0006bc00 	andeq	fp, r6, r0, lsl #24
    3408:	0006ba00 	andeq	fp, r6, r0, lsl #20
    340c:	1c000000 	stcne	0, cr0, [r0], {-0}
    3410:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
    3414:	08000e02 	stmdaeq	r0, {r1, r9, sl, fp}
    3418:	000008b0 			; <UNDEFINED> instruction: 0x000008b0
    341c:	0001a522 	andeq	sl, r1, r2, lsr #10
    3420:	0e480100 	dvfeqe	f0, f0, f0
    3424:	0000d20b 	andeq	sp, r0, fp, lsl #4
    3428:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    342c:	0e081800 	cdpeq	8, 0, cr1, cr8, cr0, {0}
    3430:	1a8f0800 	bne	fe3c5438 <_estack+0xde3c41f8>
    3434:	08c50000 	stmiaeq	r5, {}^	; <UNPREDICTABLE>
    3438:	01190000 	tsteq	r9, r0
    343c:	01f30350 	mvnseq	r0, r0, asr r3
    3440:	3a1a0050 	bcc	683588 <_Min_Heap_Size+0x682d88>
    3444:	a008000e 	andge	r0, r8, lr
    3448:	0000001b 	andeq	r0, r0, fp, lsl r0
    344c:	00b00411 	adcseq	r0, r0, r1, lsl r4
    3450:	b01b0000 	andslt	r0, fp, r0
    3454:	01000015 	tsteq	r0, r5, lsl r0
    3458:	011a0df1 			; <UNDEFINED> instruction: 0x011a0df1
    345c:	0000023a 	andeq	r0, r0, sl, lsr r2
    3460:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
    3464:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
    3468:	000006cf 	andeq	r0, r0, pc, asr #13
    346c:	00091b01 	andeq	r1, r9, r1, lsl #22
    3470:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    3474:	f1010000 	setend	le
    3478:	0796420d 	ldreq	r4, [r6, sp, lsl #4]
    347c:	06f30000 	ldrbteq	r0, [r3], r0
    3480:	06ef0000 	strbteq	r0, [pc], r0
    3484:	44230000 	strtmi	r0, [r3], #-0
    3488:	f608000d 			; <UNDEFINED> instruction: 0xf608000d
    348c:	1900001b 	stmdbne	r0, {r0, r1, r3, r4}
    3490:	f3035001 	vhadd.u8	d5, d3, d1
    3494:	00005001 	andeq	r5, r0, r1
    3498:	00154d24 	andseq	r4, r5, r4, lsr #26
    349c:	0dc90100 	stfeqe	f0, [r9]
    34a0:	023a011a 	eorseq	r0, sl, #-2147483642	; 0x80000006
    34a4:	08d40000 	ldmeq	r4, {}^	; <UNPREDICTABLE>
    34a8:	09340800 	ldmdbeq	r4!, {fp}
    34ac:	7d020800 	stcvc	8, cr0, [r2, #-0]
    34b0:	09640100 	stmdbeq	r4!, {r8}^
    34b4:	91160000 	tstls	r6, r0
    34b8:	01000014 	tsteq	r0, r4, lsl r0
    34bc:	963f0dc9 	ldrtls	r0, [pc], -r9, asr #27
    34c0:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    34c4:	14000007 	strne	r0, [r0], #-7
    34c8:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    34cc:	00706d74 	rsbseq	r6, r0, r4, ror sp
    34d0:	130dcb01 	movwne	ip, #56065	; 0xdb01
    34d4:	00000964 	andeq	r0, r0, r4, ror #18
    34d8:	00000767 	andeq	r0, r0, r7, ror #14
    34dc:	00000763 	andeq	r0, r0, r3, ror #14
    34e0:	c1041100 	mrsgt	r1, (UNDEF: 20)
    34e4:	15000000 	strne	r0, [r0, #-0]
    34e8:	00001269 	andeq	r1, r0, r9, ror #4
    34ec:	0d0daf01 	stceq	15, cr10, [sp, #-4]
    34f0:	00000001 	andeq	r0, r0, r1
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	00078600 	andeq	r8, r7, r0, lsl #12
    34fc:	09b90100 	ldmibeq	r9!, {r8}
    3500:	19160000 	ldmdbne	r6, {}	; <UNPREDICTABLE>
    3504:	01000013 	tsteq	r0, r3, lsl r0
    3508:	883c0daf 	ldmdahi	ip!, {r0, r1, r2, r3, r5, r7, r8, sl, fp}
    350c:	aa000006 	bge	352c <_Min_Heap_Size+0x2d2c>
    3510:	a6000007 	strge	r0, [r0], -r7
    3514:	17000007 	strne	r0, [r0, -r7]
    3518:	00001491 	muleq	r0, r1, r4
    351c:	170db101 	strne	fp, [sp, -r1, lsl #2]
    3520:	00000796 	muleq	r0, r6, r7
    3524:	000007cd 	andeq	r0, r0, sp, asr #15
    3528:	000007cb 	andeq	r0, r0, fp, asr #15
    352c:	0000001a 	andeq	r0, r0, sl, lsl r0
    3530:	001ac900 	andseq	ip, sl, r0, lsl #18
    3534:	58150000 	ldmdapl	r5, {}	; <UNPREDICTABLE>
    3538:	01000016 	tsteq	r0, r6, lsl r0
    353c:	010d0d93 			; <UNDEFINED> instruction: 0x010d0d93
	...
    3548:	000007e0 	andeq	r0, r0, r0, ror #15
    354c:	000a0801 	andeq	r0, sl, r1, lsl #16
    3550:	13191600 	tstne	r9, #0, 12
    3554:	93010000 	movwls	r0, #4096	; 0x1000
    3558:	06883c0d 	streq	r3, [r8], sp, lsl #24
    355c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    3560:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3564:	91170000 	tstls	r7, r0
    3568:	01000014 	tsteq	r0, r4, lsl r0
    356c:	96170d95 			; <UNDEFINED> instruction: 0x96170d95
    3570:	27000007 	strcs	r0, [r0, -r7]
    3574:	25000008 	strcs	r0, [r0, #-8]
    3578:	1a000008 	bne	35a0 <_Min_Heap_Size+0x2da0>
    357c:	00000000 	andeq	r0, r0, r0
    3580:	00001af4 	strdeq	r1, [r0], -r4
    3584:	121c1500 	andsne	r1, ip, #0, 10
    3588:	65010000 	strvs	r0, [r1, #-0]
    358c:	00010d0d 	andeq	r0, r1, sp, lsl #26
    3590:	00000000 	andeq	r0, r0, r0
    3594:	3a000000 	bcc	359c <_Min_Heap_Size+0x2d9c>
    3598:	01000008 	tsteq	r0, r8
    359c:	00000a57 	andeq	r0, r0, r7, asr sl
    35a0:	00131916 	andseq	r1, r3, r6, lsl r9
    35a4:	0d650100 	stfeqe	f0, [r5, #-0]
    35a8:	00068838 	andeq	r8, r6, r8, lsr r8
    35ac:	00085e00 	andeq	r5, r8, r0, lsl #28
    35b0:	00085a00 	andeq	r5, r8, r0, lsl #20
    35b4:	14911700 	ldrne	r1, [r1], #1792	; 0x700
    35b8:	67010000 	strvs	r0, [r1, -r0]
    35bc:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    35c0:	08810000 	stmeq	r1, {}	; <UNPREDICTABLE>
    35c4:	087f0000 	ldmdaeq	pc!, {}^	; <UNPREDICTABLE>
    35c8:	001a0000 	andseq	r0, sl, r0
    35cc:	1f000000 	svcne	0x00000000
    35d0:	0000001b 	andeq	r0, r0, fp, lsl r0
    35d4:	00130115 	andseq	r0, r3, r5, lsl r1
    35d8:	0d370100 	ldfeqs	f0, [r7, #-0]
    35dc:	0000010d 	andeq	r0, r0, sp, lsl #2
    35e0:	00000000 	andeq	r0, r0, r0
    35e4:	08940000 	ldmeq	r4, {}	; <UNPREDICTABLE>
    35e8:	a6010000 	strge	r0, [r1], -r0
    35ec:	1600000a 	strne	r0, [r0], -sl
    35f0:	00001319 	andeq	r1, r0, r9, lsl r3
    35f4:	380d3701 	stmdacc	sp, {r0, r8, r9, sl, ip, sp}
    35f8:	00000688 	andeq	r0, r0, r8, lsl #13
    35fc:	000008b8 			; <UNDEFINED> instruction: 0x000008b8
    3600:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
    3604:	00149117 	andseq	r9, r4, r7, lsl r1
    3608:	0d390100 	ldfeqs	f0, [r9, #-0]
    360c:	00079617 	andeq	r9, r7, r7, lsl r6
    3610:	0008db00 	andeq	sp, r8, r0, lsl #22
    3614:	0008d900 	andeq	sp, r8, r0, lsl #18
    3618:	00001a00 	andeq	r1, r0, r0, lsl #20
    361c:	1b1f0000 	blne	7c3624 <_Min_Heap_Size+0x7c2e24>
    3620:	15000000 	strne	r0, [r0, #-0]
    3624:	0000155e 	andeq	r1, r0, lr, asr r5
    3628:	0d0d1f01 	stceq	15, cr1, [sp, #-4]
    362c:	000d4c01 	andeq	r4, sp, r1, lsl #24
    3630:	000d5c08 	andeq	r5, sp, r8, lsl #24
    3634:	0008ee08 	andeq	lr, r8, r8, lsl #28
    3638:	0af50100 	beq	ffd43a40 <_estack+0xdfd42800>
    363c:	19160000 	ldmdbne	r6, {}	; <UNPREDICTABLE>
    3640:	01000013 	tsteq	r0, r3, lsl r0
    3644:	88350d1f 	ldmdahi	r5!, {r0, r1, r2, r3, r4, r8, sl, fp}
    3648:	12000006 	andne	r0, r0, #6
    364c:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    3650:	17000009 	strne	r0, [r0, -r9]
    3654:	00001491 	muleq	r0, r1, r4
    3658:	170d2101 	strne	r2, [sp, -r1, lsl #2]
    365c:	00000796 	muleq	r0, r6, r7
    3660:	00000935 	andeq	r0, r0, r5, lsr r9
    3664:	00000933 	andeq	r0, r0, r3, lsr r9
    3668:	000d5a1a 	andeq	r5, sp, sl, lsl sl
    366c:	001b4a08 	andseq	r4, fp, r8, lsl #20
    3670:	e8250000 	stmda	r5!, {}	; <UNPREDICTABLE>
    3674:	01000010 	tsteq	r0, r0, lsl r0
    3678:	010d0d07 	tsteq	sp, r7, lsl #26
    367c:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
    3680:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
    3684:	01007d02 	tsteq	r0, r2, lsl #26
    3688:	00000ce9 	andeq	r0, r0, r9, ror #25
    368c:	00149116 	andseq	r9, r4, r6, lsl r1
    3690:	0d070100 	stfeqs	f0, [r7, #-0]
    3694:	00079634 	andeq	r9, r7, r4, lsr r6
    3698:	00094a00 	andeq	r4, r9, r0, lsl #20
    369c:	00094800 	andeq	r4, r9, r0, lsl #16
    36a0:	08781c00 	ldmdaeq	r8!, {sl, fp, ip}^
    36a4:	08900800 	ldmeq	r0, {fp}
    36a8:	0bbc0800 	bleq	fef056b0 <_estack+0xdef04470>
    36ac:	761d0000 	ldrvc	r0, [sp], -r0
    36b0:	01006c61 	tsteq	r0, r1, ror #24
    36b4:	c6030d0a 	strgt	r0, [r3], -sl, lsl #26
    36b8:	5f000000 	svcpl	0x00000000
    36bc:	5d000009 	stcpl	0, cr0, [r0, #-36]	; 0xffffffdc
    36c0:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    36c4:	0000457d 	andeq	r4, r0, sp, ror r5
    36c8:	0800087a 	stmdaeq	r0, {r1, r3, r4, r5, r6, fp}
    36cc:	087a0000 	ldmdaeq	sl!, {}^	; <UNPREDICTABLE>
    36d0:	08820800 	stmeq	r2, {fp}
    36d4:	0a010800 	beq	456dc <_Min_Heap_Size+0x44edc>
    36d8:	0b7c030d 	bleq	1f04314 <_Min_Heap_Size+0x1f03b14>
    36dc:	901f0000 	andsls	r0, pc, r0
    36e0:	78000045 	stmdavc	r0, {r0, r2, r6}
    36e4:	72000009 	andvc	r0, r0, #9
    36e8:	20000009 	andcs	r0, r0, r9
    36ec:	0000459d 	muleq	r0, sp, r5
    36f0:	000009a7 	andeq	r0, r0, r7, lsr #19
    36f4:	000009a5 	andeq	r0, r0, r5, lsr #19
    36f8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    36fc:	08860000 	stmeq	r6, {}	; <UNPREDICTABLE>
    3700:	00010800 	andeq	r0, r1, r0, lsl #16
    3704:	08000886 	stmdaeq	r0, {r1, r2, r7, fp}
    3708:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
    370c:	030d0a01 	movweq	r0, #55809	; 0xda01
    3710:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3714:	0009be00 	andeq	fp, r9, r0, lsl #28
    3718:	0009ba00 	andeq	fp, r9, r0, lsl #20
    371c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2824 <_Min_Heap_Size+0x2024>
    3720:	09e00000 	stmibeq	r0!, {}^	; <UNPREDICTABLE>
    3724:	09de0000 	ldmibeq	lr, {}^	; <UNPREDICTABLE>
    3728:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    372c:	f5000045 			; <UNDEFINED> instruction: 0xf5000045
    3730:	f3000009 	vhadd.u8	d0, d0, d9
    3734:	00000009 	andeq	r0, r0, r9
    3738:	08901c00 	ldmeq	r0, {sl, fp, ip}
    373c:	08a80800 	stmiaeq	r8!, {fp}
    3740:	0c540800 	mrrceq	8, 0, r0, r4, cr0
    3744:	761d0000 	ldrvc	r0, [sp], -r0
    3748:	01006c61 	tsteq	r0, r1, ror #24
    374c:	c6030d0b 	strgt	r0, [r3], -fp, lsl #26
    3750:	0a000000 	beq	3758 <_Min_Heap_Size+0x2f58>
    3754:	0800000a 	stmdaeq	r0, {r1, r3}
    3758:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    375c:	0000457d 	andeq	r4, r0, sp, ror r5
    3760:	08000892 	stmdaeq	r0, {r1, r4, r7, fp}
    3764:	08920000 	ldmeq	r2, {}	; <UNPREDICTABLE>
    3768:	089a0800 	ldmeq	sl, {fp}
    376c:	0b010800 	bleq	45774 <_Min_Heap_Size+0x44f74>
    3770:	0c14030d 	ldceq	3, cr0, [r4], {13}
    3774:	901f0000 	andsls	r0, pc, r0
    3778:	23000045 	movwcs	r0, #69	; 0x45
    377c:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    3780:	2000000a 	andcs	r0, r0, sl
    3784:	0000459d 	muleq	r0, sp, r5
    3788:	00000a52 	andeq	r0, r0, r2, asr sl
    378c:	00000a50 	andeq	r0, r0, r0, asr sl
    3790:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3794:	089e0000 	ldmeq	lr, {}	; <UNPREDICTABLE>
    3798:	00010800 	andeq	r0, r1, r0, lsl #16
    379c:	0800089e 	stmdaeq	r0, {r1, r2, r3, r4, r7, fp}
    37a0:	080008a4 	stmdaeq	r0, {r2, r5, r7, fp}
    37a4:	030d0b01 	movweq	r0, #56065	; 0xdb01
    37a8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    37ac:	000a6900 	andeq	r6, sl, r0, lsl #18
    37b0:	000a6500 	andeq	r6, sl, r0, lsl #10
    37b4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 28bc <_Min_Heap_Size+0x20bc>
    37b8:	0a8b0000 	beq	fe2c37c0 <_estack+0xde2c2580>
    37bc:	0a890000 	beq	fe2437c4 <_estack+0xde242584>
    37c0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    37c4:	a0000045 	andge	r0, r0, r5, asr #32
    37c8:	9e00000a 	cdpls	0, 0, cr0, cr0, cr10, {0}
    37cc:	0000000a 	andeq	r0, r0, sl
    37d0:	08ba2600 	ldmeq	sl!, {r9, sl, sp}
    37d4:	08d40800 	ldmeq	r4, {fp}^
    37d8:	761d0800 	ldrvc	r0, [sp], -r0, lsl #16
    37dc:	01006c61 	tsteq	r0, r1, ror #24
    37e0:	c6050d10 			; <UNDEFINED> instruction: 0xc6050d10
    37e4:	b5000000 	strlt	r0, [r0, #-0]
    37e8:	b300000a 	movwlt	r0, #10
    37ec:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    37f0:	0000457d 	andeq	r4, r0, sp, ror r5
    37f4:	080008bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, fp}
    37f8:	08bc0000 	ldmeq	ip!, {}	; <UNPREDICTABLE>
    37fc:	08c40800 	stmiaeq	r4, {fp}^
    3800:	10010800 	andne	r0, r1, r0, lsl #16
    3804:	0ca8050d 	cfstr32eq	mvfx0, [r8], #52	; 0x34
    3808:	901f0000 	andsls	r0, pc, r0
    380c:	ce000045 	cdpgt	0, 0, cr0, cr0, cr5, {2}
    3810:	c800000a 	stmdagt	r0, {r1, r3}
    3814:	2000000a 	andcs	r0, r0, sl
    3818:	0000459d 	muleq	r0, sp, r5
    381c:	00000afd 	strdeq	r0, [r0], -sp
    3820:	00000afb 	strdeq	r0, [r0], -fp
    3824:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3828:	08c80000 	stmiaeq	r8, {}^	; <UNPREDICTABLE>
    382c:	00010800 	andeq	r0, r1, r0, lsl #16
    3830:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
    3834:	080008ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, fp}
    3838:	050d1001 	streq	r1, [sp, #-1]
    383c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3840:	000b1400 	andeq	r1, fp, r0, lsl #8
    3844:	000b1000 	andeq	r1, fp, r0
    3848:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2950 <_Min_Heap_Size+0x2150>
    384c:	0b360000 	bleq	d83854 <_Min_Heap_Size+0xd83054>
    3850:	0b340000 	bleq	d03858 <_Min_Heap_Size+0xd03058>
    3854:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3858:	4b000045 	blmi	3974 <_Min_Heap_Size+0x3174>
    385c:	4900000b 	stmdbmi	r0, {r0, r1, r3}
    3860:	0000000b 	andeq	r0, r0, fp
    3864:	fb250000 	blx	94386e <_Min_Heap_Size+0x94306e>
    3868:	01000010 	tsteq	r0, r0, lsl r0
    386c:	010d0cf9 	strdeq	r0, [sp, -r9]
	...
    3878:	01007d02 	tsteq	r0, r2, lsl #26
    387c:	00000dad 	andeq	r0, r0, sp, lsr #27
    3880:	00149116 	andseq	r9, r4, r6, lsl r1
    3884:	0cf90100 	ldfeqe	f0, [r9]
    3888:	00079634 	andeq	r9, r7, r4, lsr r6
    388c:	000b6000 	andeq	r6, fp, r0
    3890:	000b5e00 	andeq	r5, fp, r0, lsl #28
    3894:	00002600 	andeq	r2, r0, r0, lsl #12
    3898:	00000000 	andeq	r0, r0, r0
    389c:	761d0000 	ldrvc	r0, [sp], -r0
    38a0:	01006c61 	tsteq	r0, r1, ror #24
    38a4:	c6030cfc 			; <UNDEFINED> instruction: 0xc6030cfc
    38a8:	75000000 	strvc	r0, [r0, #-0]
    38ac:	7300000b 	movwvc	r0, #11
    38b0:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    38b4:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    38c4:	fc010000 	stc2	0, cr0, [r1], {-0}
    38c8:	0d6c030c 	stcleq	3, cr0, [ip, #-48]!	; 0xffffffd0
    38cc:	901f0000 	andsls	r0, pc, r0
    38d0:	8e000045 	cdphi	0, 0, cr0, cr0, cr5, {2}
    38d4:	8800000b 	stmdahi	r0, {r0, r1, r3}
    38d8:	2000000b 	andcs	r0, r0, fp
    38dc:	0000459d 	muleq	r0, sp, r5
    38e0:	00000bbd 			; <UNDEFINED> instruction: 0x00000bbd
    38e4:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
    38e8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    38ec:	00000000 	andeq	r0, r0, r0
    38f0:	00010000 	andeq	r0, r1, r0
	...
    38fc:	030cfc01 	movweq	pc, #52225	; 0xcc01	; <UNPREDICTABLE>
    3900:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3904:	000bd400 	andeq	sp, fp, r0, lsl #8
    3908:	000bd000 	andeq	sp, fp, r0
    390c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2a14 <_Min_Heap_Size+0x2214>
    3910:	0bf60000 	bleq	ffd83918 <_estack+0xdfd826d8>
    3914:	0bf40000 	bleq	ffd0391c <_estack+0xdfd026dc>
    3918:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    391c:	0b000045 	bleq	3a38 <_Min_Heap_Size+0x3238>
    3920:	0900000c 	stmdbeq	r0, {r2, r3}
    3924:	0000000c 	andeq	r0, r0, ip
    3928:	01270000 			; <UNDEFINED> instruction: 0x01270000
    392c:	00001411 	andeq	r1, r0, r1, lsl r4
    3930:	130cc701 	movwne	ip, #50945	; 0xc701
    3934:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    3940:	000c1e00 	andeq	r1, ip, r0, lsl #28
    3944:	10190100 	andsne	r0, r9, r0, lsl #2
    3948:	91160000 	tstls	r6, r0
    394c:	01000014 	tsteq	r0, r4, lsl r0
    3950:	963e0cc7 	ldrtls	r0, [lr], -r7, asr #25
    3954:	5c000007 	stcpl	0, cr0, [r0], {7}
    3958:	5600000c 	strpl	r0, [r0], -ip
    395c:	1600000c 	strne	r0, [r0], -ip
    3960:	000010e2 	andeq	r1, r0, r2, ror #1
    3964:	4e0cc701 	cdpmi	7, 0, cr12, cr12, cr1, {0}
    3968:	00000682 	andeq	r0, r0, r2, lsl #13
    396c:	00000c8e 	andeq	r0, r0, lr, lsl #25
    3970:	00000c88 	andeq	r0, r0, r8, lsl #25
    3974:	00276216 	eoreq	r6, r7, r6, lsl r2
    3978:	0cc70100 	stfeqe	f0, [r7], {0}
    397c:	0000b05e 	andeq	fp, r0, lr, asr r0
    3980:	000cc200 	andeq	ip, ip, r0, lsl #4
    3984:	000cba00 	andeq	fp, ip, r0, lsl #20
    3988:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    398c:	c9010070 	stmdbgt	r1, {r4, r5, r6}
    3990:	10190d0c 	andsne	r0, r9, ip, lsl #26
    3994:	0cfd0000 	ldcleq	0, cr0, [sp]
    3998:	0cfb0000 	ldcleq	0, cr0, [fp]
    399c:	001c0000 	andseq	r0, ip, r0
    39a0:	00000000 	andeq	r0, r0, r0
    39a4:	3f000000 	svccc	0x00000000
    39a8:	2200000e 	andcs	r0, r0, #14
    39ac:	000001a5 	andeq	r0, r0, r5, lsr #3
    39b0:	030ce201 	movweq	lr, #49665	; 0xc201
    39b4:	000000d2 	ldrdeq	r0, [r0], -r2
    39b8:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    39bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    39c0:	00000000 	andeq	r0, r0, r0
    39c4:	000ed700 	andeq	sp, lr, r0, lsl #14
    39c8:	61761d00 	cmnvs	r6, r0, lsl #26
    39cc:	e701006c 	str	r0, [r1, -ip, rrx]
    39d0:	00c6050c 	sbceq	r0, r6, ip, lsl #10
    39d4:	0d170000 	ldceq	0, cr0, [r7, #-0]
    39d8:	0d150000 	ldceq	0, cr0, [r5, #-0]
    39dc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    39e0:	00000045 	andeq	r0, r0, r5, asr #32
	...
    39f0:	0ce70100 	stfeqe	f0, [r7]
    39f4:	000e9705 	andeq	r9, lr, r5, lsl #14
    39f8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    39fc:	0d300000 	ldceq	0, cr0, [r0, #-0]
    3a00:	0d2a0000 	stceq	0, cr0, [sl, #-0]
    3a04:	9d200000 	stcls	0, cr0, [r0, #-0]
    3a08:	5f000045 	svcpl	0x00000045
    3a0c:	5d00000d 	stcpl	0, cr0, [r0, #-52]	; 0xffffffcc
    3a10:	0000000d 	andeq	r0, r0, sp
    3a14:	00453c21 	subeq	r3, r5, r1, lsr #24
    3a18:	00000000 	andeq	r0, r0, r0
    3a1c:	00000100 	andeq	r0, r0, r0, lsl #2
    3a20:	00000000 	andeq	r0, r0, r0
    3a24:	01000000 	mrseq	r0, (UNDEF: 0)
    3a28:	1f050ce7 	svcne	0x00050ce7
    3a2c:	0000455c 	andeq	r4, r0, ip, asr r5
    3a30:	00000d76 	andeq	r0, r0, r6, ror sp
    3a34:	00000d72 	andeq	r0, r0, r2, ror sp
    3a38:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3a3c:	000d9800 	andeq	r9, sp, r0, lsl #16
    3a40:	000d9600 	andeq	r9, sp, r0, lsl #12
    3a44:	45692000 	strbmi	r2, [r9, #-0]!
    3a48:	0dad0000 	stceq	0, cr0, [sp]
    3a4c:	0dab0000 	stceq	0, cr0, [fp]
    3a50:	00000000 	andeq	r0, r0, r0
    3a54:	0000001c 	andeq	r0, r0, ip, lsl r0
    3a58:	00000000 	andeq	r0, r0, r0
    3a5c:	000f6f00 	andeq	r6, pc, r0, lsl #30
    3a60:	61761d00 	cmnvs	r6, r0, lsl #26
    3a64:	eb01006c 	bl	43c1c <_Min_Heap_Size+0x4341c>
    3a68:	00c6030c 	sbceq	r0, r6, ip, lsl #6
    3a6c:	0dc20000 	stcleq	0, cr0, [r2]
    3a70:	0dc00000 	stcleq	0, cr0, [r0]
    3a74:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3a78:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3a88:	0ceb0100 	stfeqe	f0, [fp]
    3a8c:	000f2f03 	andeq	r2, pc, r3, lsl #30
    3a90:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3a94:	0ddb0000 	ldcleq	0, cr0, [fp]
    3a98:	0dd50000 	ldcleq	0, cr0, [r5]
    3a9c:	9d200000 	stcls	0, cr0, [r0, #-0]
    3aa0:	0a000045 	beq	3bbc <_Min_Heap_Size+0x33bc>
    3aa4:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    3aa8:	0000000e 	andeq	r0, r0, lr
    3aac:	00453c21 	subeq	r3, r5, r1, lsr #24
    3ab0:	00000000 	andeq	r0, r0, r0
    3ab4:	00000100 	andeq	r0, r0, r0, lsl #2
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	01000000 	mrseq	r0, (UNDEF: 0)
    3ac0:	1f030ceb 	svcne	0x00030ceb
    3ac4:	0000455c 	andeq	r4, r0, ip, asr r5
    3ac8:	00000e21 	andeq	r0, r0, r1, lsr #28
    3acc:	00000e1d 	andeq	r0, r0, sp, lsl lr
    3ad0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3ad4:	000e4300 	andeq	r4, lr, r0, lsl #6
    3ad8:	000e4100 	andeq	r4, lr, r0, lsl #2
    3adc:	45692000 	strbmi	r2, [r9, #-0]!
    3ae0:	0e580000 	cdpeq	0, 5, cr0, cr8, cr0, {0}
    3ae4:	0e560000 	cdpeq	0, 5, cr0, cr6, cr0, {0}
    3ae8:	00000000 	andeq	r0, r0, r0
    3aec:	0000001c 	andeq	r0, r0, ip, lsl r0
    3af0:	00000000 	andeq	r0, r0, r0
    3af4:	00100700 	andseq	r0, r0, r0, lsl #14
    3af8:	61761d00 	cmnvs	r6, r0, lsl #26
    3afc:	ef01006c 	svc	0x0001006c
    3b00:	00c6030c 	sbceq	r0, r6, ip, lsl #6
    3b04:	0e6d0000 	cdpeq	0, 6, cr0, cr13, cr0, {0}
    3b08:	0e6b0000 	cdpeq	0, 6, cr0, cr11, cr0, {0}
    3b0c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    3b10:	00000045 	andeq	r0, r0, r5, asr #32
	...
    3b20:	0cef0100 	stfeqe	f0, [pc]	; 3b28 <_Min_Heap_Size+0x3328>
    3b24:	000fc703 	andeq	ip, pc, r3, lsl #14
    3b28:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    3b2c:	0e860000 	cdpeq	0, 8, cr0, cr6, cr0, {0}
    3b30:	0e800000 	cdpeq	0, 8, cr0, cr0, cr0, {0}
    3b34:	9d200000 	stcls	0, cr0, [r0, #-0]
    3b38:	b5000045 	strlt	r0, [r0, #-69]	; 0xffffffbb
    3b3c:	b300000e 	movwlt	r0, #14
    3b40:	0000000e 	andeq	r0, r0, lr
    3b44:	00453c21 	subeq	r3, r5, r1, lsr #24
    3b48:	00000000 	andeq	r0, r0, r0
    3b4c:	00000100 	andeq	r0, r0, r0, lsl #2
    3b50:	00000000 	andeq	r0, r0, r0
    3b54:	01000000 	mrseq	r0, (UNDEF: 0)
    3b58:	1f030cef 	svcne	0x00030cef
    3b5c:	0000455c 	andeq	r4, r0, ip, asr r5
    3b60:	00000ecc 	andeq	r0, r0, ip, asr #29
    3b64:	00000ec8 	andeq	r0, r0, r8, asr #29
    3b68:	00454f1f 	subeq	r4, r5, pc, lsl pc
    3b6c:	000eee00 	andeq	lr, lr, r0, lsl #28
    3b70:	000eec00 	andeq	lr, lr, r0, lsl #24
    3b74:	45692000 	strbmi	r2, [r9, #-0]!
    3b78:	0f030000 	svceq	0x00030000
    3b7c:	0f010000 	svceq	0x00010000
    3b80:	00000000 	andeq	r0, r0, r0
    3b84:	00000023 	andeq	r0, r0, r3, lsr #32
    3b88:	0045e300 	subeq	lr, r5, r0, lsl #6
    3b8c:	52011900 	andpl	r1, r1, #0, 18
    3b90:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    3b94:	04110000 	ldreq	r0, [r1], #-0
    3b98:	000000c6 	andeq	r0, r0, r6, asr #1
    3b9c:	11ed0128 	mvnne	r0, r8, lsr #2
    3ba0:	a4010000 	strge	r0, [r1], #-0
    3ba4:	3a01130c 	bcc	487dc <_Min_Heap_Size+0x47fdc>
    3ba8:	00000002 	andeq	r0, r0, r2
    3bac:	00000000 	andeq	r0, r0, r0
    3bb0:	02000000 	andeq	r0, r0, #0
    3bb4:	7801007d 	stmdavc	r1, {r0, r2, r3, r4, r5, r6}
    3bb8:	16000010 			; <UNDEFINED> instruction: 0x16000010
    3bbc:	00001491 	muleq	r0, r1, r4
    3bc0:	3d0ca401 	cfstrscc	mvf10, [ip, #-4]
    3bc4:	00000796 	muleq	r0, r6, r7
    3bc8:	00000f1a 	andeq	r0, r0, sl, lsl pc
    3bcc:	00000f16 	andeq	r0, r0, r6, lsl pc
    3bd0:	0010e229 	andseq	lr, r0, r9, lsr #4
    3bd4:	0ca40100 	stfeqs	f0, [r4]
    3bd8:	0006824d 	andeq	r8, r6, sp, asr #4
    3bdc:	16510100 	ldrbne	r0, [r1], -r0, lsl #2
    3be0:	00002762 	andeq	r2, r0, r2, ror #14
    3be4:	5d0ca401 	cfstrspl	mvf10, [ip, #-4]
    3be8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    3bec:	00000f41 	andeq	r0, r0, r1, asr #30
    3bf0:	00000f3b 	andeq	r0, r0, fp, lsr pc
    3bf4:	13b21b00 			; <UNDEFINED> instruction: 0x13b21b00
    3bf8:	71010000 	mrsvc	r0, (UNDEF: 1)
    3bfc:	3a011a0c 	bcc	4a434 <_Min_Heap_Size+0x49c34>
    3c00:	a8000002 	stmdage	r0, {r1}
    3c04:	3208000a 	andcc	r0, r8, #10
    3c08:	6e08000b 	cdpvs	0, 0, cr0, cr8, cr11, {0}
    3c0c:	0100000f 	tsteq	r0, pc
    3c10:	00001138 	andeq	r1, r0, r8, lsr r1
    3c14:	00149116 	andseq	r9, r4, r6, lsl r1
    3c18:	0c710100 	ldfeqe	f0, [r1], #-0
    3c1c:	0007964a 	andeq	r9, r7, sl, asr #12
    3c20:	000fb600 	andeq	fp, pc, r0, lsl #12
    3c24:	000fb200 	andeq	fp, pc, r0, lsl #4
    3c28:	11731600 	cmnne	r3, r0, lsl #12
    3c2c:	71010000 	mrsvc	r0, (UNDEF: 1)
    3c30:	00c65a0c 	sbceq	r5, r6, ip, lsl #20
    3c34:	0fd80000 	svceq	0x00d80000
    3c38:	0fd40000 	svceq	0x00d40000
    3c3c:	5a160000 	bpl	583c44 <_Min_Heap_Size+0x583444>
    3c40:	01000010 	tsteq	r0, r0, lsl r0
    3c44:	006b0c71 	rsbeq	r0, fp, r1, ror ip
    3c48:	fa000002 	blx	3c58 <_Min_Heap_Size+0x3458>
    3c4c:	f600000f 			; <UNDEFINED> instruction: 0xf600000f
    3c50:	1600000f 	strne	r0, [r0], -pc
    3c54:	000011a0 	andeq	r1, r0, r0, lsr #3
    3c58:	3f0c7201 	svccc	0x000c7201
    3c5c:	000000c6 	andeq	r0, r0, r6, asr #1
    3c60:	0000101f 	andeq	r1, r0, pc, lsl r0
    3c64:	0000101b 	andeq	r1, r0, fp, lsl r0
    3c68:	0013c616 	andseq	ip, r3, r6, lsl r6
    3c6c:	0c720100 	ldfeqe	f0, [r2], #-0
    3c70:	0000c653 	andeq	ip, r0, r3, asr r6
    3c74:	00104100 	andseq	r4, r0, r0, lsl #2
    3c78:	00103d00 	andseq	r3, r0, r0, lsl #26
    3c7c:	0b021c00 	bleq	8ac84 <_Min_Heap_Size+0x8a484>
    3c80:	0b100800 	bleq	405c88 <_Min_Heap_Size+0x405488>
    3c84:	111e0800 	tstne	lr, r0, lsl #16
    3c88:	a5220000 	strge	r0, [r2, #-0]!
    3c8c:	01000001 	tsteq	r0, r1
    3c90:	d20b0c85 	andle	r0, fp, #34048	; 0x8500
    3c94:	02000000 	andeq	r0, r0, #0
    3c98:	1a005c91 	bne	1aee4 <_Min_Heap_Size+0x1a6e4>
    3c9c:	08000ada 	stmdaeq	r0, {r1, r3, r4, r6, r7, r9, fp}
    3ca0:	000045f2 	strdeq	r4, [r0], -r2
    3ca4:	000b1623 	andeq	r1, fp, r3, lsr #12
    3ca8:	000af508 	andeq	pc, sl, r8, lsl #10
    3cac:	50011900 	andpl	r1, r1, r0, lsl #18
    3cb0:	00007502 	andeq	r7, r0, r2, lsl #10
    3cb4:	13271500 			; <UNDEFINED> instruction: 0x13271500
    3cb8:	47010000 	strmi	r0, [r1, -r0]
    3cbc:	00010d0c 	andeq	r0, r1, ip, lsl #26
    3cc0:	00000000 	andeq	r0, r0, r0
    3cc4:	61000000 	mrsvs	r0, (UNDEF: 0)
    3cc8:	01000010 	tsteq	r0, r0, lsl r0
    3ccc:	000011cb 	andeq	r1, r0, fp, asr #3
    3cd0:	00131916 	andseq	r1, r3, r6, lsl r9
    3cd4:	0c470100 	stfeqe	f0, [r7], {-0}
    3cd8:	0006882e 	andeq	r8, r6, lr, lsr #16
    3cdc:	00108900 	andseq	r8, r0, r0, lsl #18
    3ce0:	00108100 	andseq	r8, r0, r0, lsl #2
    3ce4:	152d1700 	strne	r1, [sp, #-1792]!	; 0xfffff900
    3ce8:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    3cec:	00c60c0c 	sbceq	r0, r6, ip, lsl #24
    3cf0:	10cd0000 	sbcne	r0, sp, r0
    3cf4:	10c30000 	sbcne	r0, r3, r0
    3cf8:	91170000 	tstls	r7, r0
    3cfc:	01000014 	tsteq	r0, r4, lsl r0
    3d00:	96170c4a 	ldrls	r0, [r7], -sl, asr #24
    3d04:	31000007 	tstcc	r0, r7
    3d08:	2f000011 	svccs	0x00000011
    3d0c:	18000011 	stmdane	r0, {r0, r4}
    3d10:	00000000 	andeq	r0, r0, r0
    3d14:	00001b4a 	andeq	r1, r0, sl, asr #22
    3d18:	000011a6 	andeq	r1, r0, r6, lsr #3
    3d1c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3d20:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	00000ce9 	andeq	r0, r0, r9, ror #25
    3d2c:	000011ba 			; <UNDEFINED> instruction: 0x000011ba
    3d30:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3d34:	23000074 	movwcs	r0, #116	; 0x74
    3d38:	00000000 	andeq	r0, r0, r0
    3d3c:	00000af5 	strdeq	r0, [r0], -r5
    3d40:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    3d44:	00000074 	andeq	r0, r0, r4, ror r0
    3d48:	00135315 	andseq	r5, r3, r5, lsl r3
    3d4c:	0c200100 	stfeqs	f0, [r0], #-0
    3d50:	0000010d 	andeq	r0, r0, sp, lsl #2
    3d54:	00000000 	andeq	r0, r0, r0
    3d58:	11440000 	mrsne	r0, (UNDEF: 68)
    3d5c:	23010000 	movwcs	r0, #4096	; 0x1000
    3d60:	16000012 			; <UNDEFINED> instruction: 0x16000012
    3d64:	00001319 	andeq	r1, r0, r9, lsl r3
    3d68:	330c2001 	movwcc	r2, #49153	; 0xc001
    3d6c:	00000688 	andeq	r0, r0, r8, lsl #13
    3d70:	00001168 	andeq	r1, r0, r8, ror #2
    3d74:	00001164 	andeq	r1, r0, r4, ror #2
    3d78:	00149117 	andseq	r9, r4, r7, lsl r1
    3d7c:	0c220100 	stfeqs	f0, [r2], #-0
    3d80:	00079617 	andeq	r9, r7, r7, lsl r6
    3d84:	00118d00 	andseq	r8, r1, r0, lsl #26
    3d88:	00118900 	andseq	r8, r1, r0, lsl #18
    3d8c:	00001a00 	andeq	r1, r0, r0, lsl #20
    3d90:	1b750000 	blne	1d43d98 <_Min_Heap_Size+0x1d43598>
    3d94:	001a0000 	andseq	r0, sl, r0
    3d98:	8f000000 	svchi	0x00000000
    3d9c:	0000001a 	andeq	r0, r0, sl, lsl r0
    3da0:	00111915 	andseq	r1, r1, r5, lsl r9
    3da4:	0be20100 	bleq	ff8841ac <_estack+0xdf882f6c>
    3da8:	0000010d 	andeq	r0, r0, sp, lsl #2
    3dac:	00000000 	andeq	r0, r0, r0
    3db0:	11ab0000 			; <UNDEFINED> instruction: 0x11ab0000
    3db4:	db010000 	blle	43dbc <_Min_Heap_Size+0x435bc>
    3db8:	16000014 			; <UNDEFINED> instruction: 0x16000014
    3dbc:	00001319 	andeq	r1, r0, r9, lsl r3
    3dc0:	340be201 	strcc	lr, [fp], #-513	; 0xfffffdff
    3dc4:	00000688 	andeq	r0, r0, r8, lsl #13
    3dc8:	000011d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    3dcc:	000011cb 	andeq	r1, r0, fp, asr #3
    3dd0:	00149117 	andseq	r9, r4, r7, lsl r1
    3dd4:	0be40100 	bleq	ff9041dc <_estack+0xdf902f9c>
    3dd8:	00079617 	andeq	r9, r7, r7, lsl r6
    3ddc:	00120100 	andseq	r0, r2, r0, lsl #2
    3de0:	0011fd00 	andseq	pc, r1, r0, lsl #26
    3de4:	00001c00 	andeq	r1, r0, r0, lsl #24
    3de8:	00000000 	andeq	r0, r0, r0
    3dec:	13000000 	movwne	r0, #0
    3df0:	761d0000 	ldrvc	r0, [sp], -r0
    3df4:	01006c61 	tsteq	r0, r1, ror #24
    3df8:	c6050bec 	strgt	r0, [r5], -ip, ror #23
    3dfc:	21000000 	mrscs	r0, (UNDEF: 0)
    3e00:	1f000012 	svcne	0x00000012
    3e04:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    3e08:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    3e18:	ec010000 	stc	0, cr0, [r1], {-0}
    3e1c:	12c0050b 	sbcne	r0, r0, #46137344	; 0x2c00000
    3e20:	901f0000 	andsls	r0, pc, r0
    3e24:	3a000045 	bcc	3f40 <_Min_Heap_Size+0x3740>
    3e28:	34000012 	strcc	r0, [r0], #-18	; 0xffffffee
    3e2c:	20000012 	andcs	r0, r0, r2, lsl r0
    3e30:	0000459d 	muleq	r0, sp, r5
    3e34:	00001269 	andeq	r1, r0, r9, ror #4
    3e38:	00001267 	andeq	r1, r0, r7, ror #4
    3e3c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3e40:	00000000 	andeq	r0, r0, r0
    3e44:	00010000 	andeq	r0, r1, r0
	...
    3e50:	050bec01 	streq	lr, [fp, #-3073]	; 0xfffff3ff
    3e54:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3e58:	00128000 	andseq	r8, r2, r0
    3e5c:	00127c00 	andseq	r7, r2, r0, lsl #24
    3e60:	454f1f00 	strbmi	r1, [pc, #-3840]	; 2f68 <_Min_Heap_Size+0x2768>
    3e64:	12a20000 	adcne	r0, r2, #0
    3e68:	12a00000 	adcne	r0, r0, #0
    3e6c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3e70:	b7000045 	strlt	r0, [r0, -r5, asr #32]
    3e74:	b5000012 	strlt	r0, [r0, #-18]	; 0xffffffee
    3e78:	00000012 	andeq	r0, r0, r2, lsl r0
    3e7c:	00001c00 	andeq	r1, r0, r0, lsl #24
    3e80:	00000000 	andeq	r0, r0, r0
    3e84:	13980000 	orrsne	r0, r8, #0
    3e88:	761d0000 	ldrvc	r0, [sp], -r0
    3e8c:	01006c61 	tsteq	r0, r1, ror #24
    3e90:	c6050bed 	strgt	r0, [r5], -sp, ror #23
    3e94:	cc000000 	stcgt	0, cr0, [r0], {-0}
    3e98:	ca000012 	bgt	3ee8 <_Min_Heap_Size+0x36e8>
    3e9c:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    3ea0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    3eb0:	ed010000 	stc	0, cr0, [r1, #-0]
    3eb4:	1358050b 	cmpne	r8, #46137344	; 0x2c00000
    3eb8:	901f0000 	andsls	r0, pc, r0
    3ebc:	e5000045 	str	r0, [r0, #-69]	; 0xffffffbb
    3ec0:	df000012 	svcle	0x00000012
    3ec4:	20000012 	andcs	r0, r0, r2, lsl r0
    3ec8:	0000459d 	muleq	r0, sp, r5
    3ecc:	00001314 	andeq	r1, r0, r4, lsl r3
    3ed0:	00001312 	andeq	r1, r0, r2, lsl r3
    3ed4:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3ed8:	00000000 	andeq	r0, r0, r0
    3edc:	00010000 	andeq	r0, r1, r0
	...
    3ee8:	050bed01 	streq	lr, [fp, #-3329]	; 0xfffff2ff
    3eec:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3ef0:	00132b00 	andseq	r2, r3, r0, lsl #22
    3ef4:	00132700 	andseq	r2, r3, r0, lsl #14
    3ef8:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3000 <_Min_Heap_Size+0x2800>
    3efc:	134d0000 	movtne	r0, #53248	; 0xd000
    3f00:	134b0000 	movtne	r0, #45056	; 0xb000
    3f04:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3f08:	62000045 	andvs	r0, r0, #69	; 0x45
    3f0c:	60000013 	andvs	r0, r0, r3, lsl r0
    3f10:	00000013 	andeq	r0, r0, r3, lsl r0
    3f14:	00001c00 	andeq	r1, r0, r0, lsl #24
    3f18:	00000000 	andeq	r0, r0, r0
    3f1c:	14300000 	ldrtne	r0, [r0], #-0
    3f20:	761d0000 	ldrvc	r0, [sp], -r0
    3f24:	01006c61 	tsteq	r0, r1, ror #24
    3f28:	c6050bf1 			; <UNDEFINED> instruction: 0xc6050bf1
    3f2c:	77000000 	strvc	r0, [r0, -r0]
    3f30:	75000013 	strvc	r0, [r0, #-19]	; 0xffffffed
    3f34:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    3f38:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    3f48:	f1010000 	setend	le
    3f4c:	13f0050b 	mvnsne	r0, #46137344	; 0x2c00000
    3f50:	901f0000 	andsls	r0, pc, r0
    3f54:	90000045 	andls	r0, r0, r5, asr #32
    3f58:	8a000013 	bhi	3fac <_Min_Heap_Size+0x37ac>
    3f5c:	20000013 	andcs	r0, r0, r3, lsl r0
    3f60:	0000459d 	muleq	r0, sp, r5
    3f64:	000013bf 			; <UNDEFINED> instruction: 0x000013bf
    3f68:	000013bd 			; <UNDEFINED> instruction: 0x000013bd
    3f6c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3f70:	00000000 	andeq	r0, r0, r0
    3f74:	00010000 	andeq	r0, r1, r0
	...
    3f80:	050bf101 	streq	pc, [fp, #-257]	; 0xfffffeff
    3f84:	00455c1f 	subeq	r5, r5, pc, lsl ip
    3f88:	0013d600 	andseq	sp, r3, r0, lsl #12
    3f8c:	0013d200 	andseq	sp, r3, r0, lsl #4
    3f90:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3098 <_Min_Heap_Size+0x2898>
    3f94:	13f80000 	mvnsne	r0, #0
    3f98:	13f60000 	mvnsne	r0, #0
    3f9c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3fa0:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    3fa4:	0b000014 	bleq	3ffc <_Min_Heap_Size+0x37fc>
    3fa8:	00000014 	andeq	r0, r0, r4, lsl r0
    3fac:	00001c00 	andeq	r1, r0, r0, lsl #24
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	14c80000 	strbne	r0, [r8], #0
    3fb8:	761d0000 	ldrvc	r0, [sp], -r0
    3fbc:	01006c61 	tsteq	r0, r1, ror #24
    3fc0:	c6070bf9 			; <UNDEFINED> instruction: 0xc6070bf9
    3fc4:	22000000 	andcs	r0, r0, #0
    3fc8:	20000014 	andcs	r0, r0, r4, lsl r0
    3fcc:	1e000014 	mcrne	0, 0, r0, cr0, cr4, {0}
    3fd0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    3fe0:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    3fe4:	1488070b 	strne	r0, [r8], #1803	; 0x70b
    3fe8:	901f0000 	andsls	r0, pc, r0
    3fec:	3b000045 	blcc	4108 <_Min_Heap_Size+0x3908>
    3ff0:	35000014 	strcc	r0, [r0, #-20]	; 0xffffffec
    3ff4:	20000014 	andcs	r0, r0, r4, lsl r0
    3ff8:	0000459d 	muleq	r0, sp, r5
    3ffc:	0000146a 	andeq	r1, r0, sl, ror #8
    4000:	00001468 	andeq	r1, r0, r8, ror #8
    4004:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4008:	00000000 	andeq	r0, r0, r0
    400c:	00010000 	andeq	r0, r1, r0
	...
    4018:	070bf901 	streq	pc, [fp, -r1, lsl #18]
    401c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4020:	00148100 	andseq	r8, r4, r0, lsl #2
    4024:	00147d00 	andseq	r7, r4, r0, lsl #26
    4028:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3130 <_Min_Heap_Size+0x2930>
    402c:	14a30000 	strtne	r0, [r3], #0
    4030:	14a10000 	strtne	r0, [r1], #0
    4034:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4038:	b8000045 	stmdalt	r0, {r0, r2, r6}
    403c:	b6000014 			; <UNDEFINED> instruction: 0xb6000014
    4040:	00000014 	andeq	r0, r0, r4, lsl r0
    4044:	00001a00 	andeq	r1, r0, r0, lsl #20
    4048:	1ba00000 	blne	fe804050 <_estack+0xde802e10>
    404c:	001a0000 	andseq	r0, sl, r0
    4050:	8f000000 	svchi	0x00000000
    4054:	0000001a 	andeq	r0, r0, sl, lsl r0
    4058:	00112d15 	andseq	r2, r1, r5, lsl sp
    405c:	0bcf0100 	bleq	ff3c4464 <_estack+0xdf3c3224>
    4060:	0000010d 	andeq	r0, r0, sp, lsl #2
    4064:	00000000 	andeq	r0, r0, r0
    4068:	14cb0000 	strbne	r0, [fp], #0
    406c:	2a010000 	bcs	44074 <_Min_Heap_Size+0x43874>
    4070:	16000015 			; <UNDEFINED> instruction: 0x16000015
    4074:	00001319 	andeq	r1, r0, r9, lsl r3
    4078:	330bcf01 	movwcc	ip, #48897	; 0xbf01
    407c:	00000688 	andeq	r0, r0, r8, lsl #13
    4080:	000014ef 	andeq	r1, r0, pc, ror #9
    4084:	000014eb 	andeq	r1, r0, fp, ror #9
    4088:	00149117 	andseq	r9, r4, r7, lsl r1
    408c:	0bd10100 	bleq	ff444494 <_estack+0xdf443254>
    4090:	00079617 	andeq	r9, r7, r7, lsl r6
    4094:	00151400 	andseq	r1, r5, r0, lsl #8
    4098:	00151000 	andseq	r1, r5, r0
    409c:	00001a00 	andeq	r1, r0, r0, lsl #20
    40a0:	1bcb0000 	blne	ff2c40a8 <_estack+0xdf2c2e68>
    40a4:	15000000 	strne	r0, [r0, #-0]
    40a8:	0000157e 	andeq	r1, r0, lr, ror r5
    40ac:	0d0bac01 	stceq	12, cr10, [fp, #-4]
    40b0:	00000001 	andeq	r0, r0, r1
    40b4:	00000000 	andeq	r0, r0, r0
    40b8:	00153300 	andseq	r3, r5, r0, lsl #6
    40bc:	16a90100 	strtne	r0, [r9], r0, lsl #2
    40c0:	19160000 	ldmdbne	r6, {}	; <UNPREDICTABLE>
    40c4:	01000013 	tsteq	r0, r3, lsl r0
    40c8:	88350bac 	ldmdahi	r5!, {r2, r3, r5, r7, r8, r9, fp}
    40cc:	59000006 	stmdbpl	r0, {r1, r2}
    40d0:	53000015 	movwpl	r0, #21
    40d4:	17000015 	smladne	r0, r5, r0, r0
    40d8:	00001491 	muleq	r0, r1, r4
    40dc:	170bae01 	strne	sl, [fp, -r1, lsl #28]
    40e0:	00000796 	muleq	r0, r6, r7
    40e4:	00001589 	andeq	r1, r0, r9, lsl #11
    40e8:	00001585 	andeq	r1, r0, r5, lsl #11
    40ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    40f0:	00000000 	andeq	r0, r0, r0
    40f4:	00160700 	andseq	r0, r6, r0, lsl #14
    40f8:	61761d00 	cmnvs	r6, r0, lsl #26
    40fc:	b601006c 	strlt	r0, [r1], -ip, rrx
    4100:	00c6050b 	sbceq	r0, r6, fp, lsl #10
    4104:	15a90000 	strne	r0, [r9, #0]!
    4108:	15a70000 	strne	r0, [r7, #0]!
    410c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4110:	00000045 	andeq	r0, r0, r5, asr #32
	...
    4120:	0bb60100 	bleq	fed84528 <_estack+0xded832e8>
    4124:	0015c705 	andseq	ip, r5, r5, lsl #14
    4128:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    412c:	15c20000 	strbne	r0, [r2]
    4130:	15bc0000 	ldrne	r0, [ip, #0]!
    4134:	9d200000 	stcls	0, cr0, [r0, #-0]
    4138:	f1000045 	cps	#5
    413c:	ef000015 	svc	0x00000015
    4140:	00000015 	andeq	r0, r0, r5, lsl r0
    4144:	00453c21 	subeq	r3, r5, r1, lsr #24
    4148:	00000000 	andeq	r0, r0, r0
    414c:	00000100 	andeq	r0, r0, r0, lsl #2
    4150:	00000000 	andeq	r0, r0, r0
    4154:	01000000 	mrseq	r0, (UNDEF: 0)
    4158:	1f050bb6 	svcne	0x00050bb6
    415c:	0000455c 	andeq	r4, r0, ip, asr r5
    4160:	00001608 	andeq	r1, r0, r8, lsl #12
    4164:	00001604 	andeq	r1, r0, r4, lsl #12
    4168:	00454f1f 	subeq	r4, r5, pc, lsl pc
    416c:	00162a00 	andseq	r2, r6, r0, lsl #20
    4170:	00162800 	andseq	r2, r6, r0, lsl #16
    4174:	45692000 	strbmi	r2, [r9, #-0]!
    4178:	163f0000 	ldrtne	r0, [pc], -r0
    417c:	163d0000 	ldrtne	r0, [sp], -r0
    4180:	00000000 	andeq	r0, r0, r0
    4184:	0000001c 	andeq	r0, r0, ip, lsl r0
    4188:	00000000 	andeq	r0, r0, r0
    418c:	00169f00 	andseq	r9, r6, r0, lsl #30
    4190:	61761d00 	cmnvs	r6, r0, lsl #26
    4194:	b901006c 	stmdblt	r1, {r2, r3, r5, r6}
    4198:	00c6050b 	sbceq	r0, r6, fp, lsl #10
    419c:	16540000 	ldrbne	r0, [r4], -r0
    41a0:	16520000 	ldrbne	r0, [r2], -r0
    41a4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    41a8:	00000045 	andeq	r0, r0, r5, asr #32
	...
    41b8:	0bb90100 	bleq	fee445c0 <_estack+0xdee43380>
    41bc:	00165f05 	andseq	r5, r6, r5, lsl #30
    41c0:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    41c4:	166d0000 	strbtne	r0, [sp], -r0
    41c8:	16670000 	strbtne	r0, [r7], -r0
    41cc:	9d200000 	stcls	0, cr0, [r0, #-0]
    41d0:	9c000045 	stcls	0, cr0, [r0], {69}	; 0x45
    41d4:	9a000016 	bls	4234 <_Min_Heap_Size+0x3a34>
    41d8:	00000016 	andeq	r0, r0, r6, lsl r0
    41dc:	00453c21 	subeq	r3, r5, r1, lsr #24
    41e0:	00000000 	andeq	r0, r0, r0
    41e4:	00000100 	andeq	r0, r0, r0, lsl #2
    41e8:	00000000 	andeq	r0, r0, r0
    41ec:	01000000 	mrseq	r0, (UNDEF: 0)
    41f0:	1f050bb9 	svcne	0x00050bb9
    41f4:	0000455c 	andeq	r4, r0, ip, asr r5
    41f8:	000016b3 			; <UNDEFINED> instruction: 0x000016b3
    41fc:	000016af 	andeq	r1, r0, pc, lsr #13
    4200:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4204:	0016d500 	andseq	sp, r6, r0, lsl #10
    4208:	0016d300 	andseq	sp, r6, r0, lsl #6
    420c:	45692000 	strbmi	r2, [r9, #-0]!
    4210:	16ea0000 	strbtne	r0, [sl], r0
    4214:	16e80000 	strbtne	r0, [r8], r0
    4218:	00000000 	andeq	r0, r0, r0
    421c:	0000001a 	andeq	r0, r0, sl, lsl r0
    4220:	001bf600 	andseq	pc, fp, r0, lsl #12
    4224:	01280000 			; <UNDEFINED> instruction: 0x01280000
    4228:	000010cb 	andeq	r1, r0, fp, asr #1
    422c:	0a0b7f01 	beq	2e3e38 <_Min_Heap_Size+0x2e3638>
    4230:	0000c601 	andeq	ip, r0, r1, lsl #12
	...
    423c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4240:	0016de01 	andseq	sp, r6, r1, lsl #28
    4244:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    4248:	7f010000 	svcvc	0x00010000
    424c:	16de360b 	ldrbne	r3, [lr], fp, lsl #12
    4250:	17010000 	strne	r0, [r1, -r0]
    4254:	16fd0000 	ldrbtne	r0, [sp], r0
    4258:	11000000 	mrsne	r0, (UNDEF: 0)
    425c:	00069a04 	andeq	r9, r6, r4, lsl #20
    4260:	4e012800 	cdpmi	8, 0, cr2, cr1, cr0, {0}
    4264:	01000012 	tsteq	r0, r2, lsl r0
    4268:	01170b70 	tsteq	r7, r0, ror fp
    426c:	00000545 	andeq	r0, r0, r5, asr #10
	...
    4278:	01007d02 	tsteq	r0, r2, lsl #26
    427c:	00001743 	andeq	r1, r0, r3, asr #14
    4280:	00149116 	andseq	r9, r4, r6, lsl r1
    4284:	0b700100 	bleq	1c0468c <_Min_Heap_Size+0x1c03e8c>
    4288:	0016de43 	andseq	sp, r6, r3, asr #28
    428c:	00172600 	andseq	r2, r7, r0, lsl #12
    4290:	00172200 	andseq	r2, r7, r0, lsl #4
    4294:	14cf1700 	strbne	r1, [pc], #1792	; 429c <_Min_Heap_Size+0x3a9c>
    4298:	72010000 	andvc	r0, r1, #0
    429c:	00c60c0b 	sbceq	r0, r6, fp, lsl #24
    42a0:	174b0000 	strbne	r0, [fp, -r0]
    42a4:	17470000 	strbne	r0, [r7, -r0]
    42a8:	d5170000 	ldrle	r0, [r7, #-0]
    42ac:	01000014 	tsteq	r0, r4, lsl r0
    42b0:	c61b0b72 			; <UNDEFINED> instruction: 0xc61b0b72
    42b4:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    42b8:	6a000017 	bvs	431c <_Min_Heap_Size+0x3b1c>
    42bc:	00000017 	andeq	r0, r0, r7, lsl r0
    42c0:	14ac0128 	strtne	r0, [ip], #296	; 0x128
    42c4:	37010000 	strcc	r0, [r1, -r0]
    42c8:	3a01130b 	bcc	48efc <_Min_Heap_Size+0x486fc>
    42cc:	00000002 	andeq	r0, r0, r2
    42d0:	00000000 	andeq	r0, r0, r0
    42d4:	02000000 	andeq	r0, r0, #0
    42d8:	8d01007d 	stchi	0, cr0, [r1, #-500]	; 0xfffffe0c
    42dc:	16000017 			; <UNDEFINED> instruction: 0x16000017
    42e0:	00001491 	muleq	r0, r1, r4
    42e4:	450b3701 	strmi	r3, [fp, #-1793]	; 0xfffff8ff
    42e8:	00000796 	muleq	r0, r6, r7
    42ec:	00001795 	muleq	r0, r5, r7
    42f0:	0000178d 	andeq	r1, r0, sp, lsl #15
    42f4:	0001a517 	andeq	sl, r1, r7, lsl r5
    42f8:	0b390100 	bleq	e44700 <_Min_Heap_Size+0xe43f00>
    42fc:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4300:	0017d700 	andseq	sp, r7, r0, lsl #14
    4304:	0017cf00 	andseq	ip, r7, r0, lsl #30
    4308:	01280000 			; <UNDEFINED> instruction: 0x01280000
    430c:	00001072 	andeq	r1, r0, r2, ror r0
    4310:	130b1401 	movwne	r1, #46081	; 0xb401
    4314:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4320:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4324:	0017d701 	andseq	sp, r7, r1, lsl #14
    4328:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    432c:	14010000 	strne	r0, [r1], #-0
    4330:	0796480b 	ldreq	r4, [r6, fp, lsl #16]
    4334:	18160000 	ldmdane	r6, {}	; <UNPREDICTABLE>
    4338:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    433c:	a5170000 	ldrge	r0, [r7, #-0]
    4340:	01000001 	tsteq	r0, r1
    4344:	c60c0b16 			; <UNDEFINED> instruction: 0xc60c0b16
    4348:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    434c:	50000018 	andpl	r0, r0, r8, lsl r0
    4350:	00000018 	andeq	r0, r0, r8, lsl r0
    4354:	14710127 	ldrbtne	r0, [r1], #-295	; 0xfffffed9
    4358:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    435c:	3a01130a 	bcc	48f8c <_Min_Heap_Size+0x4878c>
    4360:	00000002 	andeq	r0, r0, r2
    4364:	00000000 	andeq	r0, r0, r0
    4368:	8f000000 	svchi	0x00000000
    436c:	01000018 	tsteq	r0, r8, lsl r0
    4370:	000018bf 			; <UNDEFINED> instruction: 0x000018bf
    4374:	00149116 	andseq	r9, r4, r6, lsl r1
    4378:	0af80100 	beq	ffe04780 <_estack+0xdfe03540>
    437c:	00079647 	andeq	r9, r7, r7, asr #12
    4380:	0018b300 	andseq	fp, r8, r0, lsl #6
    4384:	0018af00 	andseq	sl, r8, r0, lsl #30
    4388:	00001c00 	andeq	r1, r0, r0, lsl #24
    438c:	00000000 	andeq	r0, r0, r0
    4390:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
    4394:	761d0000 	ldrvc	r0, [sp], -r0
    4398:	01006c61 	tsteq	r0, r1, ror #24
    439c:	c6030b03 	strgt	r0, [r3], -r3, lsl #22
    43a0:	d3000000 	movwle	r0, #0
    43a4:	d1000018 	tstle	r0, r8, lsl r0
    43a8:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    43ac:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    43bc:	03010000 	movweq	r0, #4096	; 0x1000
    43c0:	1864030b 	stmdane	r4!, {r0, r1, r3, r8, r9}^
    43c4:	901f0000 	andsls	r0, pc, r0
    43c8:	ec000045 	stc	0, cr0, [r0], {69}	; 0x45
    43cc:	e6000018 			; <UNDEFINED> instruction: 0xe6000018
    43d0:	20000018 	andcs	r0, r0, r8, lsl r0
    43d4:	0000459d 	muleq	r0, sp, r5
    43d8:	0000191b 	andeq	r1, r0, fp, lsl r9
    43dc:	00001919 	andeq	r1, r0, r9, lsl r9
    43e0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    43e4:	00000000 	andeq	r0, r0, r0
    43e8:	00010000 	andeq	r0, r1, r0
	...
    43f4:	030b0301 	movweq	r0, #45825	; 0xb301
    43f8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    43fc:	00193200 	andseq	r3, r9, r0, lsl #4
    4400:	00192e00 	andseq	r2, r9, r0, lsl #28
    4404:	454f1f00 	strbmi	r1, [pc, #-3840]	; 350c <_Min_Heap_Size+0x2d0c>
    4408:	19540000 	ldmdbne	r4, {}^	; <UNPREDICTABLE>
    440c:	19520000 	ldmdbne	r2, {}^	; <UNPREDICTABLE>
    4410:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4414:	69000045 	stmdbvs	r0, {r0, r2, r6}
    4418:	67000019 	smladvs	r0, r9, r0, r0
    441c:	00000019 	andeq	r0, r0, r9, lsl r0
    4420:	00002300 	andeq	r2, r0, r0, lsl #6
    4424:	45ab0000 	strmi	r0, [fp, #0]!
    4428:	01190000 	tsteq	r9, r0
    442c:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    4430:	1908002c 	stmdbne	r8, {r2, r3, r5}
    4434:	0a035101 	beq	d8840 <_Min_Heap_Size+0xd8040>
    4438:	00000afb 	strdeq	r0, [r0], -fp
    443c:	16370127 	ldrtne	r0, [r7], -r7, lsr #2
    4440:	dc010000 	stcle	0, cr0, [r1], {-0}
    4444:	3a01130a 	bcc	49074 <_Min_Heap_Size+0x48874>
    4448:	00000002 	andeq	r0, r0, r2
    444c:	00000000 	andeq	r0, r0, r0
    4450:	7c000000 	stcvc	0, cr0, [r0], {-0}
    4454:	01000019 	tsteq	r0, r9, lsl r0
    4458:	000019a7 	andeq	r1, r0, r7, lsr #19
    445c:	00149116 	andseq	r9, r4, r6, lsl r1
    4460:	0adc0100 	beq	ff704868 <_estack+0xdf703628>
    4464:	00079648 	andeq	r9, r7, r8, asr #12
    4468:	0019a000 	andseq	sl, r9, r0
    446c:	00199c00 	andseq	r9, r9, r0, lsl #24
    4470:	00001c00 	andeq	r1, r0, r0, lsl #24
    4474:	00000000 	andeq	r0, r0, r0
    4478:	198c0000 	stmibne	ip, {}	; <UNPREDICTABLE>
    447c:	761d0000 	ldrvc	r0, [sp], -r0
    4480:	01006c61 	tsteq	r0, r1, ror #24
    4484:	c6030ae7 	strgt	r0, [r3], -r7, ror #21
    4488:	c0000000 	andgt	r0, r0, r0
    448c:	be000019 	mcrlt	0, 0, r0, cr0, cr9, {0}
    4490:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    4494:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    44a4:	e7010000 	str	r0, [r1, -r0]
    44a8:	194c030a 	stmdbne	ip, {r1, r3, r8, r9}^
    44ac:	901f0000 	andsls	r0, pc, r0
    44b0:	d9000045 	stmdble	r0, {r0, r2, r6}
    44b4:	d3000019 	movwle	r0, #25
    44b8:	20000019 	andcs	r0, r0, r9, lsl r0
    44bc:	0000459d 	muleq	r0, sp, r5
    44c0:	00001a08 	andeq	r1, r0, r8, lsl #20
    44c4:	00001a06 	andeq	r1, r0, r6, lsl #20
    44c8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    44cc:	00000000 	andeq	r0, r0, r0
    44d0:	00010000 	andeq	r0, r1, r0
	...
    44dc:	030ae701 	movweq	lr, #42753	; 0xa701
    44e0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    44e4:	001a1f00 	andseq	r1, sl, r0, lsl #30
    44e8:	001a1b00 	andseq	r1, sl, r0, lsl #22
    44ec:	454f1f00 	strbmi	r1, [pc, #-3840]	; 35f4 <_Min_Heap_Size+0x2df4>
    44f0:	1a410000 	bne	10444f8 <_Min_Heap_Size+0x1043cf8>
    44f4:	1a3f0000 	bne	fc44fc <_Min_Heap_Size+0xfc3cfc>
    44f8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    44fc:	56000045 	strpl	r0, [r0], -r5, asr #32
    4500:	5400001a 	strpl	r0, [r0], #-26	; 0xffffffe6
    4504:	0000001a 	andeq	r0, r0, sl, lsl r0
    4508:	00002300 	andeq	r2, r0, r0, lsl #6
    450c:	45ab0000 	strmi	r0, [fp, #0]!
    4510:	01190000 	tsteq	r9, r0
    4514:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    4518:	1908002c 	stmdbne	r8, {r2, r3, r5}
    451c:	0a035101 	beq	d8928 <_Min_Heap_Size+0xd8128>
    4520:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4524:	10440127 	subne	r0, r4, r7, lsr #2
    4528:	c1010000 	mrsgt	r0, (UNDEF: 1)
    452c:	3a01130a 	bcc	4915c <_Min_Heap_Size+0x4895c>
    4530:	00000002 	andeq	r0, r0, r2
    4534:	00000000 	andeq	r0, r0, r0
    4538:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    453c:	0100001a 	tsteq	r0, sl, lsl r0
    4540:	00001a8f 	andeq	r1, r0, pc, lsl #21
    4544:	00149116 	andseq	r9, r4, r6, lsl r1
    4548:	0ac10100 	beq	ff044950 <_estack+0xdf043710>
    454c:	00079639 	andeq	r9, r7, r9, lsr r6
    4550:	001a8d00 	andseq	r8, sl, r0, lsl #26
    4554:	001a8900 	andseq	r8, sl, r0, lsl #18
    4558:	00001c00 	andeq	r1, r0, r0, lsl #24
    455c:	00000000 	andeq	r0, r0, r0
    4560:	1a740000 	bne	1d04568 <_Min_Heap_Size+0x1d03d68>
    4564:	761d0000 	ldrvc	r0, [sp], -r0
    4568:	01006c61 	tsteq	r0, r1, ror #24
    456c:	c6030acc 	strgt	r0, [r3], -ip, asr #21
    4570:	ad000000 	stcge	0, cr0, [r0, #-0]
    4574:	ab00001a 	blge	45e4 <_Min_Heap_Size+0x3de4>
    4578:	1e00001a 	mcrne	0, 0, r0, cr0, cr10, {0}
    457c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    458c:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4590:	1a34030a 	bne	d051c0 <_Min_Heap_Size+0xd049c0>
    4594:	901f0000 	andsls	r0, pc, r0
    4598:	c6000045 	strgt	r0, [r0], -r5, asr #32
    459c:	c000001a 	andgt	r0, r0, sl, lsl r0
    45a0:	2000001a 	andcs	r0, r0, sl, lsl r0
    45a4:	0000459d 	muleq	r0, sp, r5
    45a8:	00001af5 	strdeq	r1, [r0], -r5
    45ac:	00001af3 	strdeq	r1, [r0], -r3
    45b0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    45b4:	00000000 	andeq	r0, r0, r0
    45b8:	00010000 	andeq	r0, r1, r0
	...
    45c4:	030acc01 	movweq	ip, #44033	; 0xac01
    45c8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    45cc:	001b0c00 	andseq	r0, fp, r0, lsl #24
    45d0:	001b0800 	andseq	r0, fp, r0, lsl #16
    45d4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 36dc <_Min_Heap_Size+0x2edc>
    45d8:	1b2e0000 	blne	b845e0 <_Min_Heap_Size+0xb83de0>
    45dc:	1b2c0000 	blne	b045e4 <_Min_Heap_Size+0xb03de4>
    45e0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    45e4:	43000045 	movwmi	r0, #69	; 0x45
    45e8:	4100001b 	tstmi	r0, fp, lsl r0
    45ec:	0000001b 	andeq	r0, r0, fp, lsl r0
    45f0:	00002300 	andeq	r2, r0, r0, lsl #6
    45f4:	45ab0000 	strmi	r0, [fp, #0]!
    45f8:	01190000 	tsteq	r9, r0
    45fc:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    4600:	1908002c 	stmdbne	r8, {r2, r3, r5}
    4604:	0a035101 	beq	d8a10 <_Min_Heap_Size+0xd8210>
    4608:	00000ac4 	andeq	r0, r0, r4, asr #21
    460c:	109a012a 	addsne	r0, sl, sl, lsr #2
    4610:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    4614:	5c010d0a 	stcpl	13, cr0, [r1], {10}
    4618:	5e08000d 	cdppl	0, 0, cr0, cr8, cr13, {0}
    461c:	0208000d 	andeq	r0, r8, #13
    4620:	c901007d 	stmdbgt	r1, {r0, r2, r3, r4, r5, r6}
    4624:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    4628:	00001491 	muleq	r0, r1, r4
    462c:	3c0a9901 			; <UNDEFINED> instruction: 0x3c0a9901
    4630:	00000796 	muleq	r0, r6, r7
    4634:	62295001 	eorvs	r5, r9, #1
    4638:	01000027 	tsteq	r0, r7, lsr #32
    463c:	b04c0a99 	umaallt	r0, ip, r9, sl
    4640:	01000000 	mrseq	r0, (UNDEF: 0)
    4644:	012a0051 	qsubeq	r0, r1, sl
    4648:	00001151 	andeq	r1, r0, r1, asr r1
    464c:	0d0a8801 	stceq	8, cr8, [sl, #-4]
    4650:	00000001 	andeq	r0, r0, r1
    4654:	00000000 	andeq	r0, r0, r0
    4658:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    465c:	001af401 	andseq	pc, sl, r1, lsl #8
    4660:	14912900 	ldrne	r2, [r1], #2304	; 0x900
    4664:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    4668:	0796430a 	ldreq	r4, [r6, sl, lsl #6]
    466c:	50010000 	andpl	r0, r1, r0
    4670:	ce012a00 	vmlagt.f32	s4, s2, s0
    4674:	01000013 	tsteq	r0, r3, lsl r0
    4678:	010d0a79 	tsteq	sp, r9, ror sl
	...
    4684:	01007d02 	tsteq	r0, r2, lsl #26
    4688:	00001b1f 	andeq	r1, r0, pc, lsl fp
    468c:	00149129 	andseq	r9, r4, r9, lsr #2
    4690:	0a790100 	beq	1e44a98 <_Min_Heap_Size+0x1e44298>
    4694:	00079644 	andeq	r9, r7, r4, asr #12
    4698:	00500100 	subseq	r0, r0, r0, lsl #2
    469c:	1512012a 	ldrne	r0, [r2, #-298]	; 0xfffffed6
    46a0:	6a010000 	bvs	446a8 <_Min_Heap_Size+0x43ea8>
    46a4:	00010d0a 	andeq	r0, r1, sl, lsl #26
    46a8:	00000000 	andeq	r0, r0, r0
    46ac:	02000000 	andeq	r0, r0, #0
    46b0:	4a01007d 	bmi	448ac <_Min_Heap_Size+0x440ac>
    46b4:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    46b8:	00001491 	muleq	r0, r1, r4
    46bc:	3c0a6a01 			; <UNDEFINED> instruction: 0x3c0a6a01
    46c0:	00000796 	muleq	r0, r6, r7
    46c4:	2a005001 	bcs	186d0 <_Min_Heap_Size+0x17ed0>
    46c8:	0015e001 	andseq	lr, r5, r1
    46cc:	0a5c0100 	beq	1704ad4 <_Min_Heap_Size+0x17042d4>
    46d0:	0d4a010d 	stfeqe	f0, [sl, #-52]	; 0xffffffcc
    46d4:	0d4c0800 	stcleq	8, cr0, [ip, #-0]
    46d8:	7d020800 	stcvc	8, cr0, [r2, #-0]
    46dc:	1b750100 	blne	1d44ae4 <_Min_Heap_Size+0x1d442e4>
    46e0:	91290000 			; <UNDEFINED> instruction: 0x91290000
    46e4:	01000014 	tsteq	r0, r4, lsl r0
    46e8:	96380a5c 			; <UNDEFINED> instruction: 0x96380a5c
    46ec:	01000007 	tsteq	r0, r7
    46f0:	012a0050 	qsubeq	r0, r0, sl
    46f4:	00001184 	andeq	r1, r0, r4, lsl #3
    46f8:	0d0a4d01 	stceq	13, cr4, [sl, #-4]
    46fc:	00000001 	andeq	r0, r0, r1
    4700:	00000000 	andeq	r0, r0, r0
    4704:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4708:	001ba001 	andseq	sl, fp, r1
    470c:	14912900 	ldrne	r2, [r1], #2304	; 0x900
    4710:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4714:	07963d0a 	ldreq	r3, [r6, sl, lsl #26]
    4718:	50010000 	andpl	r0, r1, r0
    471c:	e5012a00 	str	r2, [r1, #-2560]	; 0xfffff600
    4720:	01000014 	tsteq	r0, r4, lsl r0
    4724:	010d0a3e 	tsteq	sp, lr, lsr sl
    4728:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
    472c:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
    4730:	01007d02 	tsteq	r0, r2, lsl #26
    4734:	00001bcb 	andeq	r1, r0, fp, asr #23
    4738:	00149129 	andseq	r9, r4, r9, lsr #2
    473c:	0a3e0100 	beq	f84b44 <_Min_Heap_Size+0xf84344>
    4740:	00079639 	andeq	r9, r7, r9, lsr r6
    4744:	00500100 	subseq	r0, r0, r0, lsl #2
    4748:	15c4012a 	strbne	r0, [r4, #298]	; 0x12a
    474c:	2f010000 	svccs	0x00010000
    4750:	00010d0a 	andeq	r0, r1, sl, lsl #26
    4754:	00000000 	andeq	r0, r0, r0
    4758:	02000000 	andeq	r0, r0, #0
    475c:	f601007d 			; <UNDEFINED> instruction: 0xf601007d
    4760:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    4764:	00001491 	muleq	r0, r1, r4
    4768:	3d0a2f01 	stccc	15, cr2, [sl, #-4]
    476c:	00000796 	muleq	r0, r6, r7
    4770:	2a005001 	bcs	1877c <_Min_Heap_Size+0x17f7c>
    4774:	0012e901 	andseq	lr, r2, r1, lsl #18
    4778:	0a200100 	beq	804b80 <_Min_Heap_Size+0x804380>
    477c:	0d2c010d 	stfeqs	f0, [ip, #-52]!	; 0xffffffcc
    4780:	0d2e0800 	stceq	8, cr0, [lr, #-0]
    4784:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4788:	1c210100 	stfnes	f0, [r1], #-0
    478c:	91290000 			; <UNDEFINED> instruction: 0x91290000
    4790:	01000014 	tsteq	r0, r4, lsl r0
    4794:	96390a20 	ldrtls	r0, [r9], -r0, lsr #20
    4798:	01000007 	tsteq	r0, r7
    479c:	012b0050 	qsubeq	r0, r0, fp
    47a0:	0000092a 	andeq	r0, r0, sl, lsr #18
    47a4:	06092e01 	streq	r2, [r9], -r1, lsl #28
    47a8:	000e4401 	andeq	r4, lr, r1, lsl #8
    47ac:	0010cc08 	andseq	ip, r0, r8, lsl #24
    47b0:	001b5608 	andseq	r5, fp, r8, lsl #12
    47b4:	22ae0100 	adccs	r0, lr, #0, 2
    47b8:	91160000 	tstls	r6, r0
    47bc:	01000014 	tsteq	r0, r4, lsl r0
    47c0:	962e092e 	strtls	r0, [lr], -lr, lsr #18
    47c4:	9e000007 	cdpls	0, 0, cr0, cr0, cr7, {0}
    47c8:	9a00001b 	bls	483c <_Min_Heap_Size+0x403c>
    47cc:	1700001b 	smladne	r0, fp, r0, r0
    47d0:	0000131e 	andeq	r1, r0, lr, lsl r3
    47d4:	0c093001 	stceq	0, cr3, [r9], {1}
    47d8:	000000c6 	andeq	r0, r0, r6, asr #1
    47dc:	00001bca 	andeq	r1, r0, sl, asr #23
    47e0:	00001bbc 			; <UNDEFINED> instruction: 0x00001bbc
    47e4:	00167417 	andseq	r7, r6, r7, lsl r4
    47e8:	09310100 	ldmdbeq	r1!, {r8}
    47ec:	0000c60c 	andeq	ip, r0, ip, lsl #12
    47f0:	001c2f00 	andseq	r2, ip, r0, lsl #30
    47f4:	001c1f00 	andseq	r1, ip, r0, lsl #30
    47f8:	10931700 	addsne	r1, r3, r0, lsl #14
    47fc:	32010000 	andcc	r0, r1, #0
    4800:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    4804:	1c930000 	ldcne	0, cr0, [r3], {0}
    4808:	1c8f0000 	stcne	0, cr0, [pc], {0}
    480c:	85170000 	ldrhi	r0, [r7, #-0]
    4810:	01000012 	tsteq	r0, r2, lsl r0
    4814:	c60c0933 			; <UNDEFINED> instruction: 0xc60c0933
    4818:	b7000000 	strlt	r0, [r0, -r0]
    481c:	b100001c 	tstlt	r0, ip, lsl r0
    4820:	1700001c 	smladne	r0, ip, r0, r0
    4824:	0000152d 	andeq	r1, r0, sp, lsr #10
    4828:	0c093401 	cfstrseq	mvf3, [r9], {1}
    482c:	000000c6 	andeq	r0, r0, r6, asr #1
    4830:	00001cf1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    4834:	00001ce5 	andeq	r1, r0, r5, ror #25
    4838:	000f1e1c 	andeq	r1, pc, ip, lsl lr	; <UNPREDICTABLE>
    483c:	000f3608 	andeq	r3, pc, r8, lsl #12
    4840:	001d5308 	andseq	r5, sp, r8, lsl #6
    4844:	61761d00 	cmnvs	r6, r0, lsl #26
    4848:	7501006c 	strvc	r0, [r1, #-108]	; 0xffffff94
    484c:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4850:	1d4f0000 	stclne	0, cr0, [pc, #-0]	; 4858 <_Min_Heap_Size+0x4058>
    4854:	1d4d0000 	stclne	0, cr0, [sp, #-0]
    4858:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    485c:	20000045 	andcs	r0, r0, r5, asr #32
    4860:	0008000f 	andeq	r0, r8, pc
    4864:	000f2000 	andeq	r2, pc, r0
    4868:	000f2808 	andeq	r2, pc, r8, lsl #16
    486c:	09750108 	ldmdbeq	r5!, {r3, r8}^
    4870:	001d130b 	andseq	r1, sp, fp, lsl #6
    4874:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4878:	1d680000 	stclne	0, cr0, [r8, #-0]
    487c:	1d620000 	stclne	0, cr0, [r2, #-0]
    4880:	9d200000 	stcls	0, cr0, [r0, #-0]
    4884:	97000045 	strls	r0, [r0, -r5, asr #32]
    4888:	9500001d 	strls	r0, [r0, #-29]	; 0xffffffe3
    488c:	0000001d 	andeq	r0, r0, sp, lsl r0
    4890:	00453c21 	subeq	r3, r5, r1, lsr #24
    4894:	000f2c00 	andeq	r2, pc, r0, lsl #24
    4898:	2c000108 	stfcss	f0, [r0], {8}
    489c:	3208000f 	andcc	r0, r8, #15
    48a0:	0108000f 	tsteq	r8, pc
    48a4:	1f0b0975 	svcne	0x000b0975
    48a8:	0000455c 	andeq	r4, r0, ip, asr r5
    48ac:	00001dae 	andeq	r1, r0, lr, lsr #27
    48b0:	00001daa 	andeq	r1, r0, sl, lsr #27
    48b4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    48b8:	001dd000 	andseq	sp, sp, r0
    48bc:	001dce00 	andseq	ip, sp, r0, lsl #28
    48c0:	45692000 	strbmi	r2, [r9, #-0]!
    48c4:	1de50000 	stclne	0, cr0, [r5]
    48c8:	1de30000 	stclne	0, cr0, [r3]
    48cc:	00000000 	andeq	r0, r0, r0
    48d0:	000f841c 	andeq	r8, pc, ip, lsl r4	; <UNPREDICTABLE>
    48d4:	000f9208 	andeq	r9, pc, r8, lsl #4
    48d8:	001d7108 	andseq	r7, sp, r8, lsl #2
    48dc:	01a52200 			; <UNDEFINED> instruction: 0x01a52200
    48e0:	b3010000 	movwlt	r0, #4096	; 0x1000
    48e4:	00d20509 	sbcseq	r0, r2, r9, lsl #10
    48e8:	91020000 	mrsls	r0, (UNDEF: 2)
    48ec:	9a1c006c 	bls	704aa4 <_Min_Heap_Size+0x7042a4>
    48f0:	4008000f 	andmi	r0, r8, pc
    48f4:	0d080010 	stceq	0, cr0, [r8, #-64]	; 0xffffffc0
    48f8:	17000020 	strne	r0, [r0, -r0, lsr #32]
    48fc:	000014fd 	strdeq	r1, [r0], -sp
    4900:	1009bc01 	andne	fp, r9, r1, lsl #24
    4904:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    4908:	00001dfc 	strdeq	r1, [r0], -ip
    490c:	00001df8 	strdeq	r1, [r0], -r8
    4910:	000fba1c 	andeq	fp, pc, ip, lsl sl	; <UNPREDICTABLE>
    4914:	000fd208 	andeq	sp, pc, r8, lsl #4
    4918:	001e2b08 	andseq	r2, lr, r8, lsl #22
    491c:	61761d00 	cmnvs	r6, r0, lsl #26
    4920:	c701006c 	strgt	r0, [r1, -ip, rrx]
    4924:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4928:	1e1d0000 	cdpne	0, 1, cr0, cr13, cr0, {0}
    492c:	1e1b0000 	cdpne	0, 1, cr0, cr11, cr0, {0}
    4930:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4934:	bc000045 	stclt	0, cr0, [r0], {69}	; 0x45
    4938:	0008000f 	andeq	r0, r8, pc
    493c:	000fbc00 	andeq	fp, pc, r0, lsl #24
    4940:	000fc408 	andeq	ip, pc, r8, lsl #8
    4944:	09c70108 	stmibeq	r7, {r3, r8}^
    4948:	001deb0b 	andseq	lr, sp, fp, lsl #22
    494c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4950:	1e360000 	cdpne	0, 3, cr0, cr6, cr0, {0}
    4954:	1e300000 	cdpne	0, 3, cr0, cr0, cr0, {0}
    4958:	9d200000 	stcls	0, cr0, [r0, #-0]
    495c:	65000045 	strvs	r0, [r0, #-69]	; 0xffffffbb
    4960:	6300001e 	movwvs	r0, #30
    4964:	0000001e 	andeq	r0, r0, lr, lsl r0
    4968:	00453c21 	subeq	r3, r5, r1, lsr #24
    496c:	000fc800 	andeq	ip, pc, r0, lsl #16
    4970:	c8000108 	stmdagt	r0, {r3, r8}
    4974:	ce08000f 	cdpgt	0, 0, cr0, cr8, cr15, {0}
    4978:	0108000f 	tsteq	r8, pc
    497c:	1f0b09c7 	svcne	0x000b09c7
    4980:	0000455c 	andeq	r4, r0, ip, asr r5
    4984:	00001e7c 	andeq	r1, r0, ip, ror lr
    4988:	00001e78 	andeq	r1, r0, r8, ror lr
    498c:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4990:	001e9e00 	andseq	r9, lr, r0, lsl #28
    4994:	001e9c00 	andseq	r9, lr, r0, lsl #24
    4998:	45692000 	strbmi	r2, [r9, #-0]!
    499c:	1eb30000 	cdpne	0, 11, cr0, cr3, cr0, {0}
    49a0:	1eb10000 	cdpne	0, 11, cr0, cr1, cr0, {0}
    49a4:	00000000 	andeq	r0, r0, r0
    49a8:	000fd21c 	andeq	sp, pc, ip, lsl r2	; <UNPREDICTABLE>
    49ac:	000fea08 	andeq	lr, pc, r8, lsl #20
    49b0:	001ec308 	andseq	ip, lr, r8, lsl #6
    49b4:	61761d00 	cmnvs	r6, r0, lsl #26
    49b8:	c801006c 	stmdagt	r1, {r2, r3, r5, r6}
    49bc:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    49c0:	1ec80000 	cdpne	0, 12, cr0, cr8, cr0, {0}
    49c4:	1ec60000 	cdpne	0, 12, cr0, cr6, cr0, {0}
    49c8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    49cc:	d4000045 	strle	r0, [r0], #-69	; 0xffffffbb
    49d0:	0008000f 	andeq	r0, r8, pc
    49d4:	000fd400 	andeq	sp, pc, r0, lsl #8
    49d8:	000fdc08 	andeq	sp, pc, r8, lsl #24
    49dc:	09c80108 	stmibeq	r8, {r3, r8}^
    49e0:	001e830b 	andseq	r8, lr, fp, lsl #6
    49e4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    49e8:	1ee10000 	cdpne	0, 14, cr0, cr1, cr0, {0}
    49ec:	1edb0000 	cdpne	0, 13, cr0, cr11, cr0, {0}
    49f0:	9d200000 	stcls	0, cr0, [r0, #-0]
    49f4:	10000045 	andne	r0, r0, r5, asr #32
    49f8:	0e00001f 	mcreq	0, 0, r0, cr0, cr15, {0}
    49fc:	0000001f 	andeq	r0, r0, pc, lsl r0
    4a00:	00453c21 	subeq	r3, r5, r1, lsr #24
    4a04:	000fe000 	andeq	lr, pc, r0
    4a08:	e0000108 	and	r0, r0, r8, lsl #2
    4a0c:	e608000f 	str	r0, [r8], -pc
    4a10:	0108000f 	tsteq	r8, pc
    4a14:	1f0b09c8 	svcne	0x000b09c8
    4a18:	0000455c 	andeq	r4, r0, ip, asr r5
    4a1c:	00001f27 	andeq	r1, r0, r7, lsr #30
    4a20:	00001f23 	andeq	r1, r0, r3, lsr #30
    4a24:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4a28:	001f4900 	andseq	r4, pc, r0, lsl #18
    4a2c:	001f4700 	andseq	r4, pc, r0, lsl #14
    4a30:	45692000 	strbmi	r2, [r9, #-0]!
    4a34:	1f5e0000 	svcne	0x005e0000
    4a38:	1f5c0000 	svcne	0x005c0000
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	000fea1c 	andeq	lr, pc, ip, lsl sl	; <UNPREDICTABLE>
    4a44:	00100208 	andseq	r0, r0, r8, lsl #4
    4a48:	001f5b08 	andseq	r5, pc, r8, lsl #22
    4a4c:	61761d00 	cmnvs	r6, r0, lsl #26
    4a50:	cc01006c 	stcgt	0, cr0, [r1], {108}	; 0x6c
    4a54:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4a58:	1f730000 	svcne	0x00730000
    4a5c:	1f710000 	svcne	0x00710000
    4a60:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4a64:	ec000045 	stc	0, cr0, [r0], {69}	; 0x45
    4a68:	0008000f 	andeq	r0, r8, pc
    4a6c:	000fec00 	andeq	lr, pc, r0, lsl #24
    4a70:	000ff408 	andeq	pc, pc, r8, lsl #8
    4a74:	09cc0108 	stmibeq	ip, {r3, r8}^
    4a78:	001f1b0b 	andseq	r1, pc, fp, lsl #22
    4a7c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4a80:	1f8c0000 	svcne	0x008c0000
    4a84:	1f860000 	svcne	0x00860000
    4a88:	9d200000 	stcls	0, cr0, [r0, #-0]
    4a8c:	bb000045 	bllt	4ba8 <_Min_Heap_Size+0x43a8>
    4a90:	b900001f 	stmdblt	r0, {r0, r1, r2, r3, r4}
    4a94:	0000001f 	andeq	r0, r0, pc, lsl r0
    4a98:	00453c21 	subeq	r3, r5, r1, lsr #24
    4a9c:	000ff800 	andeq	pc, pc, r0, lsl #16
    4aa0:	f8000108 			; <UNDEFINED> instruction: 0xf8000108
    4aa4:	fe08000f 	cdp2	0, 0, cr0, cr8, cr15, {0}
    4aa8:	0108000f 	tsteq	r8, pc
    4aac:	1f0b09cc 	svcne	0x000b09cc
    4ab0:	0000455c 	andeq	r4, r0, ip, asr r5
    4ab4:	00001fd2 	ldrdeq	r1, [r0], -r2
    4ab8:	00001fce 	andeq	r1, r0, lr, asr #31
    4abc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4ac0:	001ff400 	andseq	pc, pc, r0, lsl #8
    4ac4:	001ff200 	andseq	pc, pc, r0, lsl #4
    4ac8:	45692000 	strbmi	r2, [r9, #-0]!
    4acc:	20090000 	andcs	r0, r9, r0
    4ad0:	20070000 	andcs	r0, r7, r0
    4ad4:	00000000 	andeq	r0, r0, r0
    4ad8:	00100c1c 	andseq	r0, r0, ip, lsl ip
    4adc:	00102408 	andseq	r2, r0, r8, lsl #8
    4ae0:	001ff308 	andseq	pc, pc, r8, lsl #6
    4ae4:	61761d00 	cmnvs	r6, r0, lsl #26
    4ae8:	d201006c 	andle	r0, r1, #108	; 0x6c
    4aec:	00c60b09 	sbceq	r0, r6, r9, lsl #22
    4af0:	201e0000 	andscs	r0, lr, r0
    4af4:	201c0000 	andscs	r0, ip, r0
    4af8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4afc:	0e000045 	cdpeq	0, 0, cr0, cr0, cr5, {2}
    4b00:	00080010 	andeq	r0, r8, r0, lsl r0
    4b04:	00100e00 	andseq	r0, r0, r0, lsl #28
    4b08:	00101608 	andseq	r1, r0, r8, lsl #12
    4b0c:	09d20108 	ldmibeq	r2, {r3, r8}^
    4b10:	001fb30b 	andseq	fp, pc, fp, lsl #6
    4b14:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4b18:	20370000 	eorscs	r0, r7, r0
    4b1c:	20310000 	eorscs	r0, r1, r0
    4b20:	9d200000 	stcls	0, cr0, [r0, #-0]
    4b24:	66000045 	strvs	r0, [r0], -r5, asr #32
    4b28:	64000020 	strvs	r0, [r0], #-32	; 0xffffffe0
    4b2c:	00000020 	andeq	r0, r0, r0, lsr #32
    4b30:	00453c21 	subeq	r3, r5, r1, lsr #24
    4b34:	00101a00 	andseq	r1, r0, r0, lsl #20
    4b38:	1a000108 	bne	4f60 <_Min_Heap_Size+0x4760>
    4b3c:	20080010 	andcs	r0, r8, r0, lsl r0
    4b40:	01080010 	tsteq	r8, r0, lsl r0
    4b44:	1f0b09d2 	svcne	0x000b09d2
    4b48:	0000455c 	andeq	r4, r0, ip, asr r5
    4b4c:	0000207d 	andeq	r2, r0, sp, ror r0
    4b50:	00002079 	andeq	r2, r0, r9, ror r0
    4b54:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4b58:	00209f00 	eoreq	r9, r0, r0, lsl #30
    4b5c:	00209d00 	eoreq	r9, r0, r0, lsl #26
    4b60:	45692000 	strbmi	r2, [r9, #-0]!
    4b64:	20b40000 	adcscs	r0, r4, r0
    4b68:	20b20000 	adcscs	r0, r2, r0
    4b6c:	00000000 	andeq	r0, r0, r0
    4b70:	00102a1a 	andseq	r2, r0, sl, lsl sl
    4b74:	00460008 	subeq	r0, r6, r8
    4b78:	103e2300 	eorsne	r2, lr, r0, lsl #6
    4b7c:	1a8f0800 	bne	fe3c6b84 <_estack+0xde3c5944>
    4b80:	01190000 	tsteq	r9, r0
    4b84:	00740250 	rsbseq	r0, r4, r0, asr r2
    4b88:	401c0000 	andsmi	r0, ip, r0
    4b8c:	b8080010 	stmdalt	r8, {r4}
    4b90:	08080010 	stmdaeq	r8, {r4}
    4b94:	17000022 	strne	r0, [r0, -r2, lsr #32]
    4b98:	00001573 	andeq	r1, r0, r3, ror r5
    4b9c:	1009eb01 	andne	lr, r9, r1, lsl #22
    4ba0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    4ba4:	000020c9 	andeq	r2, r0, r9, asr #1
    4ba8:	000020c7 	andeq	r2, r0, r7, asr #1
    4bac:	00105a1c 	andseq	r5, r0, ip, lsl sl
    4bb0:	00107208 	andseq	r7, r0, r8, lsl #4
    4bb4:	0020c708 	eoreq	ip, r0, r8, lsl #14
    4bb8:	61761d00 	cmnvs	r6, r0, lsl #26
    4bbc:	f001006c 			; <UNDEFINED> instruction: 0xf001006c
    4bc0:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4bc4:	20de0000 	sbcscs	r0, lr, r0
    4bc8:	20dc0000 	sbcscs	r0, ip, r0
    4bcc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4bd0:	5c000045 	stcpl	0, cr0, [r0], {69}	; 0x45
    4bd4:	00080010 	andeq	r0, r8, r0, lsl r0
    4bd8:	00105c00 	andseq	r5, r0, r0, lsl #24
    4bdc:	00106408 	andseq	r6, r0, r8, lsl #8
    4be0:	09f00108 	ldmibeq	r0!, {r3, r8}^
    4be4:	00208709 	eoreq	r8, r0, r9, lsl #14
    4be8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4bec:	20f70000 	rscscs	r0, r7, r0
    4bf0:	20f10000 	rscscs	r0, r1, r0
    4bf4:	9d200000 	stcls	0, cr0, [r0, #-0]
    4bf8:	26000045 	strcs	r0, [r0], -r5, asr #32
    4bfc:	24000021 	strcs	r0, [r0], #-33	; 0xffffffdf
    4c00:	00000021 	andeq	r0, r0, r1, lsr #32
    4c04:	00453c21 	subeq	r3, r5, r1, lsr #24
    4c08:	00106800 	andseq	r6, r0, r0, lsl #16
    4c0c:	68000108 	stmdavs	r0, {r3, r8}
    4c10:	6e080010 	mcrvs	0, 0, r0, cr8, cr0, {0}
    4c14:	01080010 	tsteq	r8, r0, lsl r0
    4c18:	1f0909f0 	svcne	0x000909f0
    4c1c:	0000455c 	andeq	r4, r0, ip, asr r5
    4c20:	0000213d 	andeq	r2, r0, sp, lsr r1
    4c24:	00002139 	andeq	r2, r0, r9, lsr r1
    4c28:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4c2c:	00215f00 	eoreq	r5, r1, r0, lsl #30
    4c30:	00215d00 	eoreq	r5, r1, r0, lsl #26
    4c34:	45692000 	strbmi	r2, [r9, #-0]!
    4c38:	21740000 	cmncs	r4, r0
    4c3c:	21720000 	cmncs	r2, r0
    4c40:	00000000 	andeq	r0, r0, r0
    4c44:	0010721c 	andseq	r7, r0, ip, lsl r2
    4c48:	00108a08 	andseq	r8, r0, r8, lsl #20
    4c4c:	00215f08 	eoreq	r5, r1, r8, lsl #30
    4c50:	61761d00 	cmnvs	r6, r0, lsl #26
    4c54:	f301006c 	vhadd.u8	q0, <illegal reg q0.5>, q14
    4c58:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4c5c:	21890000 	orrcs	r0, r9, r0
    4c60:	21870000 	orrcs	r0, r7, r0
    4c64:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4c68:	74000045 	strvc	r0, [r0], #-69	; 0xffffffbb
    4c6c:	00080010 	andeq	r0, r8, r0, lsl r0
    4c70:	00107400 	andseq	r7, r0, r0, lsl #8
    4c74:	00107c08 	andseq	r7, r0, r8, lsl #24
    4c78:	09f30108 	ldmibeq	r3!, {r3, r8}^
    4c7c:	00211f09 	eoreq	r1, r1, r9, lsl #30
    4c80:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4c84:	21a20000 			; <UNDEFINED> instruction: 0x21a20000
    4c88:	219c0000 	orrscs	r0, ip, r0
    4c8c:	9d200000 	stcls	0, cr0, [r0, #-0]
    4c90:	d1000045 	tstle	r0, r5, asr #32
    4c94:	cf000021 	svcgt	0x00000021
    4c98:	00000021 	andeq	r0, r0, r1, lsr #32
    4c9c:	00453c21 	subeq	r3, r5, r1, lsr #24
    4ca0:	00108000 	andseq	r8, r0, r0
    4ca4:	80000108 	andhi	r0, r0, r8, lsl #2
    4ca8:	86080010 			; <UNDEFINED> instruction: 0x86080010
    4cac:	01080010 	tsteq	r8, r0, lsl r0
    4cb0:	1f0909f3 	svcne	0x000909f3
    4cb4:	0000455c 	andeq	r4, r0, ip, asr r5
    4cb8:	000021e8 	andeq	r2, r0, r8, ror #3
    4cbc:	000021e4 	andeq	r2, r0, r4, ror #3
    4cc0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4cc4:	00220a00 	eoreq	r0, r2, r0, lsl #20
    4cc8:	00220800 	eoreq	r0, r2, r0, lsl #16
    4ccc:	45692000 	strbmi	r2, [r9, #-0]!
    4cd0:	221f0000 	andscs	r0, pc, #0
    4cd4:	221d0000 	andscs	r0, sp, #0
    4cd8:	00000000 	andeq	r0, r0, r0
    4cdc:	0010941c 	andseq	r9, r0, ip, lsl r4
    4ce0:	0010ac08 	andseq	sl, r0, r8, lsl #24
    4ce4:	0021f708 	eoreq	pc, r1, r8, lsl #14
    4ce8:	61761d00 	cmnvs	r6, r0, lsl #26
    4cec:	f901006c 			; <UNDEFINED> instruction: 0xf901006c
    4cf0:	00c60909 	sbceq	r0, r6, r9, lsl #18
    4cf4:	22340000 	eorscs	r0, r4, #0
    4cf8:	22320000 	eorscs	r0, r2, #0
    4cfc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4d00:	96000045 	strls	r0, [r0], -r5, asr #32
    4d04:	00080010 	andeq	r0, r8, r0, lsl r0
    4d08:	00109600 	andseq	r9, r0, r0, lsl #12
    4d0c:	00109e08 	andseq	r9, r0, r8, lsl #28
    4d10:	09f90108 	ldmibeq	r9!, {r3, r8}^
    4d14:	0021b709 	eoreq	fp, r1, r9, lsl #14
    4d18:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4d1c:	224d0000 	subcs	r0, sp, #0
    4d20:	22470000 	subcs	r0, r7, #0
    4d24:	9d200000 	stcls	0, cr0, [r0, #-0]
    4d28:	7c000045 	stcvc	0, cr0, [r0], {69}	; 0x45
    4d2c:	7a000022 	bvc	4dbc <_Min_Heap_Size+0x45bc>
    4d30:	00000022 	andeq	r0, r0, r2, lsr #32
    4d34:	00453c21 	subeq	r3, r5, r1, lsr #24
    4d38:	0010a200 	andseq	sl, r0, r0, lsl #4
    4d3c:	a2000108 	andge	r0, r0, #8, 2
    4d40:	a8080010 	stmdage	r8, {r4}
    4d44:	01080010 	tsteq	r8, r0, lsl r0
    4d48:	1f0909f9 	svcne	0x000909f9
    4d4c:	0000455c 	andeq	r4, r0, ip, asr r5
    4d50:	00002293 	muleq	r0, r3, r2
    4d54:	0000228f 	andeq	r2, r0, pc, lsl #5
    4d58:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4d5c:	0022b500 	eoreq	fp, r2, r0, lsl #10
    4d60:	0022b300 	eoreq	fp, r2, r0, lsl #6
    4d64:	45692000 	strbmi	r2, [r9, #-0]!
    4d68:	22ca0000 	sbccs	r0, sl, #0
    4d6c:	22c80000 	sbccs	r0, r8, #0
    4d70:	00000000 	andeq	r0, r0, r0
    4d74:	0010b623 	andseq	fp, r0, r3, lsr #12
    4d78:	001a8f08 	andseq	r8, sl, r8, lsl #30
    4d7c:	50011900 	andpl	r1, r1, r0, lsl #18
    4d80:	00007402 	andeq	r7, r0, r2, lsl #8
    4d84:	0e9e1800 	cdpeq	8, 9, cr1, cr14, cr0, {0}
    4d88:	079c0800 	ldreq	r0, [ip, r0, lsl #16]
    4d8c:	221c0000 	andscs	r0, ip, #0
    4d90:	01190000 	tsteq	r9, r0
    4d94:	00740250 	rsbseq	r0, r4, r0, asr r2
    4d98:	0f141800 	svceq	0x00141800
    4d9c:	0af50800 	beq	ffd46da4 <_estack+0xdfd45b64>
    4da0:	22300000 	eorscs	r0, r0, #0
    4da4:	01190000 	tsteq	r9, r0
    4da8:	00740250 	rsbseq	r0, r4, r0, asr r2
    4dac:	0f441a00 	svceq	0x00441a00
    4db0:	460f0800 	strmi	r0, [pc], -r0, lsl #16
    4db4:	56180000 	ldrpl	r0, [r8], -r0
    4db8:	9c08000f 	stcls	0, cr0, [r8], {15}
    4dbc:	4d000007 	stcmi	0, cr0, [r0, #-28]	; 0xffffffe4
    4dc0:	19000022 	stmdbne	r0, {r1, r5}
    4dc4:	74025001 	strvc	r5, [r2], #-1
    4dc8:	5e180000 	cdppl	0, 1, cr0, cr8, cr0, {0}
    4dcc:	4a08000f 	bmi	204e10 <_Min_Heap_Size+0x204610>
    4dd0:	6100001b 	tstvs	r0, fp, lsl r0
    4dd4:	19000022 	stmdbne	r0, {r1, r5}
    4dd8:	74025001 	strvc	r5, [r2], #-1
    4ddc:	66180000 	ldrvs	r0, [r8], -r0
    4de0:	4a08000f 	bmi	204e24 <_Min_Heap_Size+0x204624>
    4de4:	7500001b 	strvc	r0, [r0, #-27]	; 0xffffffe5
    4de8:	19000022 	stmdbne	r0, {r1, r5}
    4dec:	74025001 	strvc	r5, [r2], #-1
    4df0:	6e180000 	cdpvs	0, 1, cr0, cr8, cr0, {0}
    4df4:	4a08000f 	bmi	204e38 <_Min_Heap_Size+0x204638>
    4df8:	8900001b 	stmdbhi	r0, {r0, r1, r3, r4}
    4dfc:	19000022 	stmdbne	r0, {r1, r5}
    4e00:	74025001 	strvc	r5, [r2], #-1
    4e04:	be180000 	cdplt	0, 1, cr0, cr8, cr0, {0}
    4e08:	1b080010 	blne	204e50 <_Min_Heap_Size+0x204650>
    4e0c:	9d000009 	stcls	0, cr0, [r0, #-36]	; 0xffffffdc
    4e10:	19000022 	stmdbne	r0, {r1, r5}
    4e14:	74025001 	strvc	r5, [r2], #-1
    4e18:	c6230000 	strtgt	r0, [r3], -r0
    4e1c:	d5080010 	strle	r0, [r8, #-16]
    4e20:	19000008 	stmdbne	r0, {r3}
    4e24:	74025001 	strvc	r5, [r2], #-1
    4e28:	2c000000 	stccs	0, cr0, [r0], {-0}
    4e2c:	00137b01 	andseq	r7, r3, r1, lsl #22
    4e30:	08e00100 	stmiaeq	r0!, {r8}^
    4e34:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    4e40:	22dd0000 	sbcscs	r0, sp, #0
    4e44:	71010000 	mrsvc	r0, (UNDEF: 1)
    4e48:	16000025 	strne	r0, [r0], -r5, lsr #32
    4e4c:	00001491 	muleq	r0, r1, r4
    4e50:	4008e001 	andmi	lr, r8, r1
    4e54:	00000796 	muleq	r0, r6, r7
    4e58:	0000230b 	andeq	r2, r0, fp, lsl #6
    4e5c:	000022fd 	strdeq	r2, [r0], -sp
    4e60:	0000001c 	andeq	r0, r0, ip, lsl r0
    4e64:	00000000 	andeq	r0, r0, r0
    4e68:	00237b00 	eoreq	r7, r3, r0, lsl #22
    4e6c:	61761d00 	cmnvs	r6, r0, lsl #26
    4e70:	e301006c 	movw	r0, #4204	; 0x106c
    4e74:	00c60308 	sbceq	r0, r6, r8, lsl #6
    4e78:	23650000 	cmncs	r5, #0
    4e7c:	23630000 	cmncs	r3, #0
    4e80:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4e84:	00000045 	andeq	r0, r0, r5, asr #32
	...
    4e94:	08e30100 	stmiaeq	r3!, {r8}^
    4e98:	00233b03 	eoreq	r3, r3, r3, lsl #22
    4e9c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4ea0:	237e0000 	cmncs	lr, #0
    4ea4:	23780000 	cmncs	r8, #0
    4ea8:	9d200000 	stcls	0, cr0, [r0, #-0]
    4eac:	ad000045 	stcge	0, cr0, [r0, #-276]	; 0xfffffeec
    4eb0:	ab000023 	blge	4f44 <_Min_Heap_Size+0x4744>
    4eb4:	00000023 	andeq	r0, r0, r3, lsr #32
    4eb8:	00453c21 	subeq	r3, r5, r1, lsr #24
    4ebc:	00000000 	andeq	r0, r0, r0
    4ec0:	00000100 	andeq	r0, r0, r0, lsl #2
    4ec4:	00000000 	andeq	r0, r0, r0
    4ec8:	01000000 	mrseq	r0, (UNDEF: 0)
    4ecc:	1f0308e3 	svcne	0x000308e3
    4ed0:	0000455c 	andeq	r4, r0, ip, asr r5
    4ed4:	000023c4 	andeq	r2, r0, r4, asr #7
    4ed8:	000023c0 	andeq	r2, r0, r0, asr #7
    4edc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4ee0:	0023e600 	eoreq	lr, r3, r0, lsl #12
    4ee4:	0023e400 	eoreq	lr, r3, r0, lsl #8
    4ee8:	45692000 	strbmi	r2, [r9, #-0]!
    4eec:	23fb0000 	mvnscs	r0, #0
    4ef0:	23f90000 	mvnscs	r0, #0
    4ef4:	00000000 	andeq	r0, r0, r0
    4ef8:	0000001c 	andeq	r0, r0, ip, lsl r0
    4efc:	00000000 	andeq	r0, r0, r0
    4f00:	00241300 	eoreq	r1, r4, r0, lsl #6
    4f04:	61761d00 	cmnvs	r6, r0, lsl #26
    4f08:	e401006c 	str	r0, [r1], #-108	; 0xffffff94
    4f0c:	00c60308 	sbceq	r0, r6, r8, lsl #6
    4f10:	24100000 	ldrcs	r0, [r0], #-0
    4f14:	240e0000 	strcs	r0, [lr], #-0
    4f18:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4f1c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    4f2c:	08e40100 	stmiaeq	r4!, {r8}^
    4f30:	0023d303 	eoreq	sp, r3, r3, lsl #6
    4f34:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4f38:	24290000 	strtcs	r0, [r9], #-0
    4f3c:	24230000 	strtcs	r0, [r3], #-0
    4f40:	9d200000 	stcls	0, cr0, [r0, #-0]
    4f44:	58000045 	stmdapl	r0, {r0, r2, r6}
    4f48:	56000024 	strpl	r0, [r0], -r4, lsr #32
    4f4c:	00000024 	andeq	r0, r0, r4, lsr #32
    4f50:	00453c21 	subeq	r3, r5, r1, lsr #24
    4f54:	00000000 	andeq	r0, r0, r0
    4f58:	00000100 	andeq	r0, r0, r0, lsl #2
    4f5c:	00000000 	andeq	r0, r0, r0
    4f60:	01000000 	mrseq	r0, (UNDEF: 0)
    4f64:	1f0308e4 	svcne	0x000308e4
    4f68:	0000455c 	andeq	r4, r0, ip, asr r5
    4f6c:	0000246f 	andeq	r2, r0, pc, ror #8
    4f70:	0000246b 	andeq	r2, r0, fp, ror #8
    4f74:	00454f1f 	subeq	r4, r5, pc, lsl pc
    4f78:	00249100 	eoreq	r9, r4, r0, lsl #2
    4f7c:	00248f00 	eoreq	r8, r4, r0, lsl #30
    4f80:	45692000 	strbmi	r2, [r9, #-0]!
    4f84:	24a60000 	strtcs	r0, [r6], #0
    4f88:	24a40000 	strtcs	r0, [r4], #0
    4f8c:	00000000 	andeq	r0, r0, r0
    4f90:	0000001c 	andeq	r0, r0, ip, lsl r0
    4f94:	00000000 	andeq	r0, r0, r0
    4f98:	0024ab00 	eoreq	sl, r4, r0, lsl #22
    4f9c:	61761d00 	cmnvs	r6, r0, lsl #26
    4fa0:	e901006c 	stmdb	r1, {r2, r3, r5, r6}
    4fa4:	00c60508 	sbceq	r0, r6, r8, lsl #10
    4fa8:	24bb0000 	ldrtcs	r0, [fp], #0
    4fac:	24b90000 	ldrtcs	r0, [r9], #0
    4fb0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    4fb4:	00000045 	andeq	r0, r0, r5, asr #32
	...
    4fc4:	08e90100 	stmiaeq	r9!, {r8}^
    4fc8:	00246b05 	eoreq	r6, r4, r5, lsl #22
    4fcc:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    4fd0:	24d40000 	ldrbcs	r0, [r4], #0
    4fd4:	24ce0000 	strbcs	r0, [lr], #0
    4fd8:	9d200000 	stcls	0, cr0, [r0, #-0]
    4fdc:	03000045 	movweq	r0, #69	; 0x45
    4fe0:	01000025 	tsteq	r0, r5, lsr #32
    4fe4:	00000025 	andeq	r0, r0, r5, lsr #32
    4fe8:	00453c21 	subeq	r3, r5, r1, lsr #24
    4fec:	00000000 	andeq	r0, r0, r0
    4ff0:	00000100 	andeq	r0, r0, r0, lsl #2
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	01000000 	mrseq	r0, (UNDEF: 0)
    4ffc:	1f0508e9 	svcne	0x000508e9
    5000:	0000455c 	andeq	r4, r0, ip, asr r5
    5004:	0000251a 	andeq	r2, r0, sl, lsl r5
    5008:	00002516 	andeq	r2, r0, r6, lsl r5
    500c:	00454f1f 	subeq	r4, r5, pc, lsl pc
    5010:	00253c00 	eoreq	r3, r5, r0, lsl #24
    5014:	00253a00 	eoreq	r3, r5, r0, lsl #20
    5018:	45692000 	strbmi	r2, [r9, #-0]!
    501c:	25510000 	ldrbcs	r0, [r1, #-0]
    5020:	254f0000 	strbcs	r0, [pc, #-0]	; 5028 <_Min_Heap_Size+0x4828>
    5024:	00000000 	andeq	r0, r0, r0
    5028:	0000001c 	andeq	r0, r0, ip, lsl r0
    502c:	00000000 	andeq	r0, r0, r0
    5030:	00254300 	eoreq	r4, r5, r0, lsl #6
    5034:	61761d00 	cmnvs	r6, r0, lsl #26
    5038:	ef01006c 	svc	0x0001006c
    503c:	00c60508 	sbceq	r0, r6, r8, lsl #10
    5040:	25660000 	strbcs	r0, [r6, #-0]!
    5044:	25640000 	strbcs	r0, [r4, #-0]!
    5048:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    504c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    505c:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    5060:	00250305 	eoreq	r0, r5, r5, lsl #6
    5064:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    5068:	257f0000 	ldrbcs	r0, [pc, #-0]!	; 5070 <_Min_Heap_Size+0x4870>
    506c:	25790000 	ldrbcs	r0, [r9, #-0]!
    5070:	9d200000 	stcls	0, cr0, [r0, #-0]
    5074:	ae000045 	cdpge	0, 0, cr0, cr0, cr5, {2}
    5078:	ac000025 	stcge	0, cr0, [r0], {37}	; 0x25
    507c:	00000025 	andeq	r0, r0, r5, lsr #32
    5080:	00453c21 	subeq	r3, r5, r1, lsr #24
    5084:	00000000 	andeq	r0, r0, r0
    5088:	00000100 	andeq	r0, r0, r0, lsl #2
    508c:	00000000 	andeq	r0, r0, r0
    5090:	01000000 	mrseq	r0, (UNDEF: 0)
    5094:	1f0508ef 	svcne	0x000508ef
    5098:	0000455c 	andeq	r4, r0, ip, asr r5
    509c:	000025c5 	andeq	r2, r0, r5, asr #11
    50a0:	000025c1 	andeq	r2, r0, r1, asr #11
    50a4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    50a8:	0025e700 	eoreq	lr, r5, r0, lsl #14
    50ac:	0025e500 	eoreq	lr, r5, r0, lsl #10
    50b0:	45692000 	strbmi	r2, [r9, #-0]!
    50b4:	25fc0000 	ldrbcs	r0, [ip, #0]!
    50b8:	25fa0000 	ldrbcs	r0, [sl, #0]!
    50bc:	00000000 	andeq	r0, r0, r0
    50c0:	0000001a 	andeq	r0, r0, sl, lsl r0
    50c4:	00460f00 	subeq	r0, r6, r0, lsl #30
    50c8:	00001800 	andeq	r1, r0, r0, lsl #16
    50cc:	1ac90000 	bne	ff2450d4 <_estack+0xdf243e94>
    50d0:	25600000 	strbcs	r0, [r0, #-0]!
    50d4:	01190000 	tsteq	r9, r0
    50d8:	00740250 	rsbseq	r0, r4, r0, asr r2
    50dc:	00002300 	andeq	r2, r0, r0, lsl #6
    50e0:	1ac90000 	bne	ff2450e8 <_estack+0xdf243ea8>
    50e4:	01190000 	tsteq	r9, r0
    50e8:	00740250 	rsbseq	r0, r4, r0, asr r2
    50ec:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
    50f0:	00001234 	andeq	r1, r0, r4, lsr r2
    50f4:	13089301 	movwne	r9, #33537	; 0x8301
    50f8:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5104:	00260f00 	eoreq	r0, r6, r0, lsl #30
    5108:	27040100 	strcs	r0, [r4, -r0, lsl #2]
    510c:	91160000 	tstls	r6, r0
    5110:	01000014 	tsteq	r0, r4, lsl r0
    5114:	96410893 			; <UNDEFINED> instruction: 0x96410893
    5118:	3d000007 	stccc	0, cr0, [r0, #-28]	; 0xffffffe4
    511c:	2f000026 	svccs	0x00000026
    5120:	1c000026 	stcne	0, cr0, [r0], {38}	; 0x26
	...
    512c:	0000263e 	andeq	r2, r0, lr, lsr r6
    5130:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5134:	08960100 	ldmeq	r6, {r8}
    5138:	0000c603 	andeq	ip, r0, r3, lsl #12
    513c:	00269700 	eoreq	r9, r6, r0, lsl #14
    5140:	00269500 	eoreq	r9, r6, r0, lsl #10
    5144:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5158:	03089601 	movweq	r9, #34305	; 0x8601
    515c:	000025fe 	strdeq	r2, [r0], -lr
    5160:	0045901f 	subeq	r9, r5, pc, lsl r0
    5164:	0026b000 	eoreq	fp, r6, r0
    5168:	0026aa00 	eoreq	sl, r6, r0, lsl #20
    516c:	459d2000 	ldrmi	r2, [sp]
    5170:	26df0000 	ldrbcs	r0, [pc], r0
    5174:	26dd0000 	ldrbcs	r0, [sp], r0
    5178:	21000000 	mrscs	r0, (UNDEF: 0)
    517c:	0000453c 	andeq	r4, r0, ip, lsr r5
    5180:	00000000 	andeq	r0, r0, r0
    5184:	00000001 	andeq	r0, r0, r1
    5188:	00000000 	andeq	r0, r0, r0
    518c:	96010000 	strls	r0, [r1], -r0
    5190:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    5194:	f6000045 			; <UNDEFINED> instruction: 0xf6000045
    5198:	f2000026 	vhadd.s8	d0, d0, d22
    519c:	1f000026 	svcne	0x00000026
    51a0:	0000454f 	andeq	r4, r0, pc, asr #10
    51a4:	00002718 	andeq	r2, r0, r8, lsl r7
    51a8:	00002716 	andeq	r2, r0, r6, lsl r7
    51ac:	00456920 	subeq	r6, r5, r0, lsr #18
    51b0:	00272d00 	eoreq	r2, r7, r0, lsl #26
    51b4:	00272b00 	eoreq	r2, r7, r0, lsl #22
    51b8:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    51c4:	000026d6 	ldrdeq	r2, [r0], -r6
    51c8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    51cc:	089b0100 	ldmeq	fp, {r8}
    51d0:	0000c605 	andeq	ip, r0, r5, lsl #12
    51d4:	00274200 	eoreq	r4, r7, r0, lsl #4
    51d8:	00274000 	eoreq	r4, r7, r0
    51dc:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    51f0:	05089b01 	streq	r9, [r8, #-2817]	; 0xfffff4ff
    51f4:	00002696 	muleq	r0, r6, r6
    51f8:	0045901f 	subeq	r9, r5, pc, lsl r0
    51fc:	00275b00 	eoreq	r5, r7, r0, lsl #22
    5200:	00275500 	eoreq	r5, r7, r0, lsl #10
    5204:	459d2000 	ldrmi	r2, [sp]
    5208:	278a0000 	strcs	r0, [sl, r0]
    520c:	27880000 	strcs	r0, [r8, r0]
    5210:	21000000 	mrscs	r0, (UNDEF: 0)
    5214:	0000453c 	andeq	r4, r0, ip, lsr r5
    5218:	00000000 	andeq	r0, r0, r0
    521c:	00000001 	andeq	r0, r0, r1
    5220:	00000000 	andeq	r0, r0, r0
    5224:	9b010000 	blls	4522c <_Min_Heap_Size+0x44a2c>
    5228:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    522c:	a1000045 	tstge	r0, r5, asr #32
    5230:	9d000027 	stcls	0, cr0, [r0, #-156]	; 0xffffff64
    5234:	1f000027 	svcne	0x00000027
    5238:	0000454f 	andeq	r4, r0, pc, asr #10
    523c:	000027c3 	andeq	r2, r0, r3, asr #15
    5240:	000027c1 	andeq	r2, r0, r1, asr #15
    5244:	00456920 	subeq	r6, r5, r0, lsr #18
    5248:	0027d800 	eoreq	sp, r7, r0, lsl #16
    524c:	0027d600 	eoreq	sp, r7, r0, lsl #12
    5250:	1a000000 	bne	5258 <_Min_Heap_Size+0x4a58>
    5254:	00000000 	andeq	r0, r0, r0
    5258:	0000460f 	andeq	r4, r0, pc, lsl #12
    525c:	00000018 	andeq	r0, r0, r8, lsl r0
    5260:	001af400 	andseq	pc, sl, r0, lsl #8
    5264:	0026f300 	eoreq	pc, r6, r0, lsl #6
    5268:	50011900 	andpl	r1, r1, r0, lsl #18
    526c:	00007402 	andeq	r7, r0, r2, lsl #8
    5270:	00000023 	andeq	r0, r0, r3, lsr #32
    5274:	001af400 	andseq	pc, sl, r0, lsl #8
    5278:	50011900 	andpl	r1, r1, r0, lsl #18
    527c:	00007402 	andeq	r7, r0, r2, lsl #8
    5280:	41012700 	tstmi	r1, r0, lsl #14
    5284:	01000013 	tsteq	r0, r3, lsl r0
    5288:	0113080c 	tsteq	r3, ip, lsl #16
    528c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    5298:	000027eb 	andeq	r2, r0, fp, ror #15
    529c:	002a6901 	eoreq	r6, sl, r1, lsl #18
    52a0:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    52a4:	0c010000 	stceq	0, cr0, [r1], {-0}
    52a8:	07963908 	ldreq	r3, [r6, r8, lsl #18]
    52ac:	28150000 	ldmdacs	r5, {}	; <UNPREDICTABLE>
    52b0:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    52b4:	12170000 	andsne	r0, r7, #0
    52b8:	01000012 	tsteq	r0, r2, lsl r0
    52bc:	c60c080e 	strgt	r0, [ip], -lr, lsl #16
    52c0:	61000000 	mrsvs	r0, (UNDEF: 0)
    52c4:	57000028 	strpl	r0, [r0, -r8, lsr #32]
    52c8:	1c000028 	stcne	0, cr0, [r0], {40}	; 0x28
	...
    52d4:	000027e6 	andeq	r2, r0, r6, ror #15
    52d8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    52dc:	08110100 	ldmdaeq	r1, {r8}
    52e0:	0000c603 	andeq	ip, r0, r3, lsl #12
    52e4:	0028a500 	eoreq	sl, r8, r0, lsl #10
    52e8:	0028a300 	eoreq	sl, r8, r0, lsl #6
    52ec:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5300:	03081101 	movweq	r1, #33025	; 0x8101
    5304:	000027a6 	andeq	r2, r0, r6, lsr #15
    5308:	0045901f 	subeq	r9, r5, pc, lsl r0
    530c:	0028be00 	eoreq	fp, r8, r0, lsl #28
    5310:	0028b800 	eoreq	fp, r8, r0, lsl #16
    5314:	459d2000 	ldrmi	r2, [sp]
    5318:	28ed0000 	stmiacs	sp!, {}^	; <UNPREDICTABLE>
    531c:	28eb0000 	stmiacs	fp!, {}^	; <UNPREDICTABLE>
    5320:	21000000 	mrscs	r0, (UNDEF: 0)
    5324:	0000453c 	andeq	r4, r0, ip, lsr r5
    5328:	00000000 	andeq	r0, r0, r0
    532c:	00000001 	andeq	r0, r0, r1
    5330:	00000000 	andeq	r0, r0, r0
    5334:	11010000 	mrsne	r0, (UNDEF: 1)
    5338:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    533c:	04000045 	streq	r0, [r0], #-69	; 0xffffffbb
    5340:	00000029 	andeq	r0, r0, r9, lsr #32
    5344:	1f000029 	svcne	0x00000029
    5348:	0000454f 	andeq	r4, r0, pc, asr #10
    534c:	00002926 	andeq	r2, r0, r6, lsr #18
    5350:	00002924 	andeq	r2, r0, r4, lsr #18
    5354:	00456920 	subeq	r6, r5, r0, lsr #18
    5358:	00293b00 	eoreq	r3, r9, r0, lsl #22
    535c:	00293900 	eoreq	r3, r9, r0, lsl #18
    5360:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    536c:	0000287e 	andeq	r2, r0, lr, ror r8
    5370:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5374:	08120100 	ldmdaeq	r2, {r8}
    5378:	0000c603 	andeq	ip, r0, r3, lsl #12
    537c:	00295000 	eoreq	r5, r9, r0
    5380:	00294e00 	eoreq	r4, r9, r0, lsl #28
    5384:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5398:	03081201 	movweq	r1, #33281	; 0x8201
    539c:	0000283e 	andeq	r2, r0, lr, lsr r8
    53a0:	0045901f 	subeq	r9, r5, pc, lsl r0
    53a4:	00296900 	eoreq	r6, r9, r0, lsl #18
    53a8:	00296300 	eoreq	r6, r9, r0, lsl #6
    53ac:	459d2000 	ldrmi	r2, [sp]
    53b0:	29980000 	ldmibcs	r8, {}	; <UNPREDICTABLE>
    53b4:	29960000 	ldmibcs	r6, {}	; <UNPREDICTABLE>
    53b8:	21000000 	mrscs	r0, (UNDEF: 0)
    53bc:	0000453c 	andeq	r4, r0, ip, lsr r5
    53c0:	00000000 	andeq	r0, r0, r0
    53c4:	00000001 	andeq	r0, r0, r1
    53c8:	00000000 	andeq	r0, r0, r0
    53cc:	12010000 	andne	r0, r1, #0
    53d0:	5c1f0308 	ldcpl	3, cr0, [pc], {8}
    53d4:	af000045 	svcge	0x00000045
    53d8:	ab000029 	blge	5484 <_Min_Heap_Size+0x4c84>
    53dc:	1f000029 	svcne	0x00000029
    53e0:	0000454f 	andeq	r4, r0, pc, asr #10
    53e4:	000029d1 	ldrdeq	r2, [r0], -r1
    53e8:	000029cf 	andeq	r2, r0, pc, asr #19
    53ec:	00456920 	subeq	r6, r5, r0, lsr #18
    53f0:	0029e600 	eoreq	lr, r9, r0, lsl #12
    53f4:	0029e400 	eoreq	lr, r9, r0, lsl #8
    53f8:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5404:	00002916 	andeq	r2, r0, r6, lsl r9
    5408:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    540c:	08170100 	ldmdaeq	r7, {r8}
    5410:	0000c605 	andeq	ip, r0, r5, lsl #12
    5414:	0029fb00 	eoreq	pc, r9, r0, lsl #22
    5418:	0029f900 	eoreq	pc, r9, r0, lsl #18
    541c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5430:	05081701 	streq	r1, [r8, #-1793]	; 0xfffff8ff
    5434:	000028d6 	ldrdeq	r2, [r0], -r6
    5438:	0045901f 	subeq	r9, r5, pc, lsl r0
    543c:	002a1400 	eoreq	r1, sl, r0, lsl #8
    5440:	002a0e00 	eoreq	r0, sl, r0, lsl #28
    5444:	459d2000 	ldrmi	r2, [sp]
    5448:	2a430000 	bcs	10c5450 <_Min_Heap_Size+0x10c4c50>
    544c:	2a410000 	bcs	1045454 <_Min_Heap_Size+0x1044c54>
    5450:	21000000 	mrscs	r0, (UNDEF: 0)
    5454:	0000453c 	andeq	r4, r0, ip, lsr r5
    5458:	00000000 	andeq	r0, r0, r0
    545c:	00000001 	andeq	r0, r0, r1
    5460:	00000000 	andeq	r0, r0, r0
    5464:	17010000 	strne	r0, [r1, -r0]
    5468:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    546c:	5a000045 	bpl	5588 <_Min_Heap_Size+0x4d88>
    5470:	5600002a 	strpl	r0, [r0], -sl, lsr #32
    5474:	1f00002a 	svcne	0x0000002a
    5478:	0000454f 	andeq	r4, r0, pc, asr #10
    547c:	00002a7c 	andeq	r2, r0, ip, ror sl
    5480:	00002a7a 	andeq	r2, r0, sl, ror sl
    5484:	00456920 	subeq	r6, r5, r0, lsr #18
    5488:	002a9100 	eoreq	r9, sl, r0, lsl #2
    548c:	002a8f00 	eoreq	r8, sl, r0, lsl #30
    5490:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    549c:	000029ae 	andeq	r2, r0, lr, lsr #19
    54a0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    54a4:	083d0100 	ldmdaeq	sp!, {r8}
    54a8:	0000c605 	andeq	ip, r0, r5, lsl #12
    54ac:	002aa800 	eoreq	sl, sl, r0, lsl #16
    54b0:	002aa400 	eoreq	sl, sl, r0, lsl #8
    54b4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    54c8:	05083d01 	streq	r3, [r8, #-3329]	; 0xfffff2ff
    54cc:	0000296e 	andeq	r2, r0, lr, ror #18
    54d0:	0045901f 	subeq	r9, r5, pc, lsl r0
    54d4:	002acc00 	eoreq	ip, sl, r0, lsl #24
    54d8:	002ac600 	eoreq	ip, sl, r0, lsl #12
    54dc:	459d2000 	ldrmi	r2, [sp]
    54e0:	2afb0000 	bcs	ffec54e8 <_estack+0xdfec42a8>
    54e4:	2af90000 	bcs	ffe454ec <_estack+0xdfe442ac>
    54e8:	21000000 	mrscs	r0, (UNDEF: 0)
    54ec:	0000453c 	andeq	r4, r0, ip, lsr r5
    54f0:	00000000 	andeq	r0, r0, r0
    54f4:	00000001 	andeq	r0, r0, r1
    54f8:	00000000 	andeq	r0, r0, r0
    54fc:	3d010000 	stccc	0, cr0, [r1, #-0]
    5500:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    5504:	12000045 	andne	r0, r0, #69	; 0x45
    5508:	0e00002b 	cdpeq	0, 0, cr0, cr0, cr11, {1}
    550c:	1f00002b 	svcne	0x0000002b
    5510:	0000454f 	andeq	r4, r0, pc, asr #10
    5514:	00002b34 	andeq	r2, r0, r4, lsr fp
    5518:	00002b32 	andeq	r2, r0, r2, lsr fp
    551c:	00456920 	subeq	r6, r5, r0, lsr #18
    5520:	002b4900 	eoreq	r4, fp, r0, lsl #18
    5524:	002b4700 	eoreq	r4, fp, r0, lsl #14
    5528:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5534:	00002a46 	andeq	r2, r0, r6, asr #20
    5538:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    553c:	08540100 	ldmdaeq	r4, {r8}^
    5540:	0000c605 	andeq	ip, r0, r5, lsl #12
    5544:	002b5e00 	eoreq	r5, fp, r0, lsl #28
    5548:	002b5c00 	eoreq	r5, fp, r0, lsl #24
    554c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5560:	05085401 	streq	r5, [r8, #-1025]	; 0xfffffbff
    5564:	00002a06 	andeq	r2, r0, r6, lsl #20
    5568:	0045901f 	subeq	r9, r5, pc, lsl r0
    556c:	002b7700 	eoreq	r7, fp, r0, lsl #14
    5570:	002b7100 	eoreq	r7, fp, r0, lsl #2
    5574:	459d2000 	ldrmi	r2, [sp]
    5578:	2ba60000 	blcs	fe985580 <_estack+0xde984340>
    557c:	2ba40000 	blcs	fe905584 <_estack+0xde904344>
    5580:	21000000 	mrscs	r0, (UNDEF: 0)
    5584:	0000453c 	andeq	r4, r0, ip, lsr r5
    5588:	00000000 	andeq	r0, r0, r0
    558c:	00000001 	andeq	r0, r0, r1
    5590:	00000000 	andeq	r0, r0, r0
    5594:	54010000 	strpl	r0, [r1], #-0
    5598:	5c1f0508 	cfldr32pl	mvfx0, [pc], {8}
    559c:	bd000045 	stclt	0, cr0, [r0, #-276]	; 0xfffffeec
    55a0:	b900002b 	stmdblt	r0, {r0, r1, r3, r5}
    55a4:	1f00002b 	svcne	0x0000002b
    55a8:	0000454f 	andeq	r4, r0, pc, asr #10
    55ac:	00002bdf 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    55b0:	00002bdd 	ldrdeq	r2, [r0], -sp
    55b4:	00456920 	subeq	r6, r5, r0, lsr #18
    55b8:	002bf400 	eoreq	pc, fp, r0, lsl #8
    55bc:	002bf200 	eoreq	pc, fp, r0, lsl #4
    55c0:	1a000000 	bne	55c8 <_Min_Heap_Size+0x4dc8>
    55c4:	00000000 	andeq	r0, r0, r0
    55c8:	0000460f 	andeq	r4, r0, pc, lsl #12
    55cc:	0000001a 	andeq	r0, r0, sl, lsl r0
    55d0:	00460f00 	subeq	r0, r6, r0, lsl #30
    55d4:	00002300 	andeq	r2, r0, r0, lsl #6
    55d8:	1b1f0000 	blne	7c55e0 <_Min_Heap_Size+0x7c4de0>
    55dc:	01190000 	tsteq	r9, r0
    55e0:	00740250 	rsbseq	r0, r4, r0, asr r2
    55e4:	01270000 			; <UNDEFINED> instruction: 0x01270000
    55e8:	000010b5 	strheq	r1, [r0], -r5
    55ec:	1307cf01 	movwne	ip, #32513	; 0x7f01
    55f0:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    55fc:	002c0700 	eoreq	r0, ip, r0, lsl #14
    5600:	2d110100 	ldfcss	f0, [r1, #-0]
    5604:	91160000 	tstls	r6, r0
    5608:	01000014 	tsteq	r0, r4, lsl r0
    560c:	963d07cf 	ldrtls	r0, [sp], -pc, asr #15
    5610:	2f000007 	svccs	0x00000007
    5614:	2700002c 	strcs	r0, [r0, -ip, lsr #32]
    5618:	1c00002c 	stcne	0, cr0, [r0], {44}	; 0x2c
	...
    5624:	00002b36 	andeq	r2, r0, r6, lsr fp
    5628:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    562c:	07d20100 	ldrbeq	r0, [r2, r0, lsl #2]
    5630:	0000c603 	andeq	ip, r0, r3, lsl #12
    5634:	002c6500 	eoreq	r6, ip, r0, lsl #10
    5638:	002c6300 	eoreq	r6, ip, r0, lsl #6
    563c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5650:	0307d201 	movweq	sp, #29185	; 0x7201
    5654:	00002af6 	strdeq	r2, [r0], -r6
    5658:	0045901f 	subeq	r9, r5, pc, lsl r0
    565c:	002c7e00 	eoreq	r7, ip, r0, lsl #28
    5660:	002c7800 	eoreq	r7, ip, r0, lsl #16
    5664:	459d2000 	ldrmi	r2, [sp]
    5668:	2cad0000 	stccs	0, cr0, [sp]
    566c:	2cab0000 	stccs	0, cr0, [fp]
    5670:	21000000 	mrscs	r0, (UNDEF: 0)
    5674:	0000453c 	andeq	r4, r0, ip, lsr r5
    5678:	00000000 	andeq	r0, r0, r0
    567c:	00000001 	andeq	r0, r0, r1
    5680:	00000000 	andeq	r0, r0, r0
    5684:	d2010000 	andle	r0, r1, #0
    5688:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    568c:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    5690:	c000002c 	andgt	r0, r0, ip, lsr #32
    5694:	1f00002c 	svcne	0x0000002c
    5698:	0000454f 	andeq	r4, r0, pc, asr #10
    569c:	00002ce6 	andeq	r2, r0, r6, ror #25
    56a0:	00002ce4 	andeq	r2, r0, r4, ror #25
    56a4:	00456920 	subeq	r6, r5, r0, lsr #18
    56a8:	002cfb00 	eoreq	pc, ip, r0, lsl #22
    56ac:	002cf900 	eoreq	pc, ip, r0, lsl #18
    56b0:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    56bc:	00002bce 	andeq	r2, r0, lr, asr #23
    56c0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    56c4:	07d30100 	ldrbeq	r0, [r3, r0, lsl #2]
    56c8:	0000c603 	andeq	ip, r0, r3, lsl #12
    56cc:	002d1000 	eoreq	r1, sp, r0
    56d0:	002d0e00 	eoreq	r0, sp, r0, lsl #28
    56d4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    56e8:	0307d301 	movweq	sp, #29441	; 0x7301
    56ec:	00002b8e 	andeq	r2, r0, lr, lsl #23
    56f0:	0045901f 	subeq	r9, r5, pc, lsl r0
    56f4:	002d2900 	eoreq	r2, sp, r0, lsl #18
    56f8:	002d2300 	eoreq	r2, sp, r0, lsl #6
    56fc:	459d2000 	ldrmi	r2, [sp]
    5700:	2d580000 	ldclcs	0, cr0, [r8, #-0]
    5704:	2d560000 	ldclcs	0, cr0, [r6, #-0]
    5708:	21000000 	mrscs	r0, (UNDEF: 0)
    570c:	0000453c 	andeq	r4, r0, ip, lsr r5
    5710:	00000000 	andeq	r0, r0, r0
    5714:	00000001 	andeq	r0, r0, r1
    5718:	00000000 	andeq	r0, r0, r0
    571c:	d3010000 	movwle	r0, #4096	; 0x1000
    5720:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5724:	6f000045 	svcvs	0x00000045
    5728:	6b00002d 	blvs	57e4 <_Min_Heap_Size+0x4fe4>
    572c:	1f00002d 	svcne	0x0000002d
    5730:	0000454f 	andeq	r4, r0, pc, asr #10
    5734:	00002d91 	muleq	r0, r1, sp
    5738:	00002d8f 	andeq	r2, r0, pc, lsl #27
    573c:	00456920 	subeq	r6, r5, r0, lsr #18
    5740:	002da600 	eoreq	sl, sp, r0, lsl #12
    5744:	002da400 	eoreq	sl, sp, r0, lsl #8
    5748:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5754:	00002c66 	andeq	r2, r0, r6, ror #24
    5758:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    575c:	07d80100 	ldrbeq	r0, [r8, r0, lsl #2]
    5760:	0000c605 	andeq	ip, r0, r5, lsl #12
    5764:	002dbb00 	eoreq	fp, sp, r0, lsl #22
    5768:	002db900 	eoreq	fp, sp, r0, lsl #18
    576c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5780:	0507d801 	streq	sp, [r7, #-2049]	; 0xfffff7ff
    5784:	00002c26 	andeq	r2, r0, r6, lsr #24
    5788:	0045901f 	subeq	r9, r5, pc, lsl r0
    578c:	002dd400 	eoreq	sp, sp, r0, lsl #8
    5790:	002dce00 	eoreq	ip, sp, r0, lsl #28
    5794:	459d2000 	ldrmi	r2, [sp]
    5798:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    579c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    57a0:	21000000 	mrscs	r0, (UNDEF: 0)
    57a4:	0000453c 	andeq	r4, r0, ip, lsr r5
    57a8:	00000000 	andeq	r0, r0, r0
    57ac:	00000001 	andeq	r0, r0, r1
    57b0:	00000000 	andeq	r0, r0, r0
    57b4:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    57b8:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    57bc:	1a000045 	bne	58d8 <_Min_Heap_Size+0x50d8>
    57c0:	1600002e 	strne	r0, [r0], -lr, lsr #32
    57c4:	1f00002e 	svcne	0x0000002e
    57c8:	0000454f 	andeq	r4, r0, pc, asr #10
    57cc:	00002e3c 	andeq	r2, r0, ip, lsr lr
    57d0:	00002e3a 	andeq	r2, r0, sl, lsr lr
    57d4:	00456920 	subeq	r6, r5, r0, lsr #18
    57d8:	002e5100 	eoreq	r5, lr, r0, lsl #2
    57dc:	002e4f00 	eoreq	r4, lr, r0, lsl #30
    57e0:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    57ec:	00002cfe 	strdeq	r2, [r0], -lr
    57f0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    57f4:	07de0100 	ldrbeq	r0, [lr, r0, lsl #2]
    57f8:	0000c605 	andeq	ip, r0, r5, lsl #12
    57fc:	002e6600 	eoreq	r6, lr, r0, lsl #12
    5800:	002e6400 	eoreq	r6, lr, r0, lsl #8
    5804:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5818:	0507de01 	streq	sp, [r7, #-3585]	; 0xfffff1ff
    581c:	00002cbe 			; <UNDEFINED> instruction: 0x00002cbe
    5820:	0045901f 	subeq	r9, r5, pc, lsl r0
    5824:	002e7f00 	eoreq	r7, lr, r0, lsl #30
    5828:	002e7900 	eoreq	r7, lr, r0, lsl #18
    582c:	459d2000 	ldrmi	r2, [sp]
    5830:	2eae0000 	cdpcs	0, 10, cr0, cr14, cr0, {0}
    5834:	2eac0000 	cdpcs	0, 10, cr0, cr12, cr0, {0}
    5838:	21000000 	mrscs	r0, (UNDEF: 0)
    583c:	0000453c 	andeq	r4, r0, ip, lsr r5
    5840:	00000000 	andeq	r0, r0, r0
    5844:	00000001 	andeq	r0, r0, r1
    5848:	00000000 	andeq	r0, r0, r0
    584c:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    5850:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5854:	c5000045 	strgt	r0, [r0, #-69]	; 0xffffffbb
    5858:	c100002e 	tstgt	r0, lr, lsr #32
    585c:	1f00002e 	svcne	0x0000002e
    5860:	0000454f 	andeq	r4, r0, pc, asr #10
    5864:	00002ee7 	andeq	r2, r0, r7, ror #29
    5868:	00002ee5 	andeq	r2, r0, r5, ror #29
    586c:	00456920 	subeq	r6, r5, r0, lsr #18
    5870:	002efc00 	eoreq	pc, lr, r0, lsl #24
    5874:	002efa00 	eoreq	pc, lr, r0, lsl #20
    5878:	1a000000 	bne	5880 <_Min_Heap_Size+0x5080>
    587c:	00000000 	andeq	r0, r0, r0
    5880:	00004600 	andeq	r4, r0, r0, lsl #12
    5884:	0000001a 	andeq	r0, r0, sl, lsl r0
    5888:	00461e00 	subeq	r1, r6, r0, lsl #28
    588c:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5890:	000013fa 	strdeq	r1, [r0], -sl
    5894:	13079c01 	movwne	r9, #31745	; 0x7c01
    5898:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    58a4:	002f0f00 	eoreq	r0, pc, r0, lsl #30
    58a8:	2e890100 	rmfcse	f0, f1, f0
    58ac:	91160000 	tstls	r6, r0
    58b0:	01000014 	tsteq	r0, r4, lsl r0
    58b4:	963e079c 			; <UNDEFINED> instruction: 0x963e079c
    58b8:	33000007 	movwcc	r0, #7
    58bc:	2f00002f 	svccs	0x0000002f
    58c0:	1c00002f 	stcne	0, cr0, [r0], {47}	; 0x2f
	...
    58cc:	00002dde 	ldrdeq	r2, [r0], -lr
    58d0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    58d4:	079f0100 	ldreq	r0, [pc, r0, lsl #2]
    58d8:	0000c603 	andeq	ip, r0, r3, lsl #12
    58dc:	002f5300 	eoreq	r5, pc, r0, lsl #6
    58e0:	002f5100 	eoreq	r5, pc, r0, lsl #2
    58e4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    58f8:	03079f01 	movweq	r9, #32513	; 0x7f01
    58fc:	00002d9e 	muleq	r0, lr, sp
    5900:	0045901f 	subeq	r9, r5, pc, lsl r0
    5904:	002f6c00 	eoreq	r6, pc, r0, lsl #24
    5908:	002f6600 	eoreq	r6, pc, r0, lsl #12
    590c:	459d2000 	ldrmi	r2, [sp]
    5910:	2f9b0000 	svccs	0x009b0000
    5914:	2f990000 	svccs	0x00990000
    5918:	21000000 	mrscs	r0, (UNDEF: 0)
    591c:	0000453c 	andeq	r4, r0, ip, lsr r5
    5920:	00000000 	andeq	r0, r0, r0
    5924:	00000001 	andeq	r0, r0, r1
    5928:	00000000 	andeq	r0, r0, r0
    592c:	9f010000 	svcls	0x00010000
    5930:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5934:	b2000045 	andlt	r0, r0, #69	; 0x45
    5938:	ae00002f 	cdpge	0, 0, cr0, cr0, cr15, {1}
    593c:	1f00002f 	svcne	0x0000002f
    5940:	0000454f 	andeq	r4, r0, pc, asr #10
    5944:	00002fd4 	ldrdeq	r2, [r0], -r4
    5948:	00002fd2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    594c:	00456920 	subeq	r6, r5, r0, lsr #18
    5950:	002fe900 	eoreq	lr, pc, r0, lsl #18
    5954:	002fe700 	eoreq	lr, pc, r0, lsl #14
    5958:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5964:	00002e76 	andeq	r2, r0, r6, ror lr
    5968:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    596c:	07a40100 	streq	r0, [r4, r0, lsl #2]!
    5970:	0000c605 	andeq	ip, r0, r5, lsl #12
    5974:	002ffe00 	eoreq	pc, pc, r0, lsl #28
    5978:	002ffc00 	eoreq	pc, pc, r0, lsl #24
    597c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5990:	0507a401 	streq	sl, [r7, #-1025]	; 0xfffffbff
    5994:	00002e36 	andeq	r2, r0, r6, lsr lr
    5998:	0045901f 	subeq	r9, r5, pc, lsl r0
    599c:	00301700 	eorseq	r1, r0, r0, lsl #14
    59a0:	00301100 	eorseq	r1, r0, r0, lsl #2
    59a4:	459d2000 	ldrmi	r2, [sp]
    59a8:	30460000 	subcc	r0, r6, r0
    59ac:	30440000 	subcc	r0, r4, r0
    59b0:	21000000 	mrscs	r0, (UNDEF: 0)
    59b4:	0000453c 	andeq	r4, r0, ip, lsr r5
    59b8:	00000000 	andeq	r0, r0, r0
    59bc:	00000001 	andeq	r0, r0, r1
    59c0:	00000000 	andeq	r0, r0, r0
    59c4:	a4010000 	strge	r0, [r1], #-0
    59c8:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    59cc:	5d000045 	stcpl	0, cr0, [r0, #-276]	; 0xfffffeec
    59d0:	59000030 	stmdbpl	r0, {r4, r5}
    59d4:	1f000030 	svcne	0x00000030
    59d8:	0000454f 	andeq	r4, r0, pc, asr #10
    59dc:	0000307f 	andeq	r3, r0, pc, ror r0
    59e0:	0000307d 	andeq	r3, r0, sp, ror r0
    59e4:	00456920 	subeq	r6, r5, r0, lsr #18
    59e8:	00309400 	eorseq	r9, r0, r0, lsl #8
    59ec:	00309200 	eorseq	r9, r0, r0, lsl #4
    59f0:	1a000000 	bne	59f8 <_Min_Heap_Size+0x51f8>
    59f4:	00000000 	andeq	r0, r0, r0
    59f8:	00004600 	andeq	r4, r0, r0, lsl #12
    59fc:	0000001a 	andeq	r0, r0, sl, lsl r0
    5a00:	00461e00 	subeq	r1, r6, r0, lsl #28
    5a04:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5a08:	0000168e 	andeq	r1, r0, lr, lsl #13
    5a0c:	13074301 	movwne	r4, #29441	; 0x7301
    5a10:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5a1c:	0030a700 	eorseq	sl, r0, r0, lsl #14
    5a20:	31db0100 	bicscc	r0, fp, r0, lsl #2
    5a24:	91160000 	tstls	r6, r0
    5a28:	01000014 	tsteq	r0, r4, lsl r0
    5a2c:	96360743 	ldrtls	r0, [r6], -r3, asr #14
    5a30:	cf000007 	svcgt	0x00000007
    5a34:	c7000030 	smladxgt	r0, r0, r0, r0
    5a38:	1c000030 	stcne	0, cr0, [r0], {48}	; 0x30
	...
    5a44:	00002f56 	andeq	r2, r0, r6, asr pc
    5a48:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5a4c:	07460100 	strbeq	r0, [r6, -r0, lsl #2]
    5a50:	0000c603 	andeq	ip, r0, r3, lsl #12
    5a54:	00310500 	eorseq	r0, r1, r0, lsl #10
    5a58:	00310300 	eorseq	r0, r1, r0, lsl #6
    5a5c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5a70:	03074601 	movweq	r4, #30209	; 0x7601
    5a74:	00002f16 	andeq	r2, r0, r6, lsl pc
    5a78:	0045901f 	subeq	r9, r5, pc, lsl r0
    5a7c:	00311e00 	eorseq	r1, r1, r0, lsl #28
    5a80:	00311800 	eorseq	r1, r1, r0, lsl #16
    5a84:	459d2000 	ldrmi	r2, [sp]
    5a88:	314d0000 	mrscc	r0, (UNDEF: 77)
    5a8c:	314b0000 	mrscc	r0, (UNDEF: 75)
    5a90:	21000000 	mrscs	r0, (UNDEF: 0)
    5a94:	0000453c 	andeq	r4, r0, ip, lsr r5
    5a98:	00000000 	andeq	r0, r0, r0
    5a9c:	00000001 	andeq	r0, r0, r1
    5aa0:	00000000 	andeq	r0, r0, r0
    5aa4:	46010000 	strmi	r0, [r1], -r0
    5aa8:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5aac:	64000045 	strvs	r0, [r0], #-69	; 0xffffffbb
    5ab0:	60000031 	andvs	r0, r0, r1, lsr r0
    5ab4:	1f000031 	svcne	0x00000031
    5ab8:	0000454f 	andeq	r4, r0, pc, asr #10
    5abc:	00003186 	andeq	r3, r0, r6, lsl #3
    5ac0:	00003184 	andeq	r3, r0, r4, lsl #3
    5ac4:	00456920 	subeq	r6, r5, r0, lsr #18
    5ac8:	00319b00 	eorseq	r9, r1, r0, lsl #22
    5acc:	00319900 	eorseq	r9, r1, r0, lsl #18
    5ad0:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5adc:	00002fee 	andeq	r2, r0, lr, ror #31
    5ae0:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5ae4:	07470100 	strbeq	r0, [r7, -r0, lsl #2]
    5ae8:	0000c603 	andeq	ip, r0, r3, lsl #12
    5aec:	0031b000 	eorseq	fp, r1, r0
    5af0:	0031ae00 	eorseq	sl, r1, r0, lsl #28
    5af4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5b08:	03074701 	movweq	r4, #30465	; 0x7701
    5b0c:	00002fae 	andeq	r2, r0, lr, lsr #31
    5b10:	0045901f 	subeq	r9, r5, pc, lsl r0
    5b14:	0031c900 	eorseq	ip, r1, r0, lsl #18
    5b18:	0031c300 	eorseq	ip, r1, r0, lsl #6
    5b1c:	459d2000 	ldrmi	r2, [sp]
    5b20:	31f80000 	mvnscc	r0, r0
    5b24:	31f60000 	mvnscc	r0, r0
    5b28:	21000000 	mrscs	r0, (UNDEF: 0)
    5b2c:	0000453c 	andeq	r4, r0, ip, lsr r5
    5b30:	00000000 	andeq	r0, r0, r0
    5b34:	00000001 	andeq	r0, r0, r1
    5b38:	00000000 	andeq	r0, r0, r0
    5b3c:	47010000 	strmi	r0, [r1, -r0]
    5b40:	5c1f0307 	ldcpl	3, cr0, [pc], {7}
    5b44:	0f000045 	svceq	0x00000045
    5b48:	0b000032 	bleq	5c18 <_Min_Heap_Size+0x5418>
    5b4c:	1f000032 	svcne	0x00000032
    5b50:	0000454f 	andeq	r4, r0, pc, asr #10
    5b54:	00003231 	andeq	r3, r0, r1, lsr r2
    5b58:	0000322f 	andeq	r3, r0, pc, lsr #4
    5b5c:	00456920 	subeq	r6, r5, r0, lsr #18
    5b60:	00324600 	eorseq	r4, r2, r0, lsl #12
    5b64:	00324400 	eorseq	r4, r2, r0, lsl #8
    5b68:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5b74:	00003086 	andeq	r3, r0, r6, lsl #1
    5b78:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5b7c:	074c0100 	strbeq	r0, [ip, -r0, lsl #2]
    5b80:	0000c605 	andeq	ip, r0, r5, lsl #12
    5b84:	00325b00 	eorseq	r5, r2, r0, lsl #22
    5b88:	00325900 	eorseq	r5, r2, r0, lsl #18
    5b8c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5ba0:	05074c01 	streq	r4, [r7, #-3073]	; 0xfffff3ff
    5ba4:	00003046 	andeq	r3, r0, r6, asr #32
    5ba8:	0045901f 	subeq	r9, r5, pc, lsl r0
    5bac:	00327400 	eorseq	r7, r2, r0, lsl #8
    5bb0:	00326e00 	eorseq	r6, r2, r0, lsl #28
    5bb4:	459d2000 	ldrmi	r2, [sp]
    5bb8:	32a30000 	adccc	r0, r3, #0
    5bbc:	32a10000 	adccc	r0, r1, #0
    5bc0:	21000000 	mrscs	r0, (UNDEF: 0)
    5bc4:	0000453c 	andeq	r4, r0, ip, lsr r5
    5bc8:	00000000 	andeq	r0, r0, r0
    5bcc:	00000001 	andeq	r0, r0, r1
    5bd0:	00000000 	andeq	r0, r0, r0
    5bd4:	4c010000 	stcmi	0, cr0, [r1], {-0}
    5bd8:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5bdc:	ba000045 	blt	5cf8 <_Min_Heap_Size+0x54f8>
    5be0:	b6000032 			; <UNDEFINED> instruction: 0xb6000032
    5be4:	1f000032 	svcne	0x00000032
    5be8:	0000454f 	andeq	r4, r0, pc, asr #10
    5bec:	000032dc 	ldrdeq	r3, [r0], -ip
    5bf0:	000032da 	ldrdeq	r3, [r0], -sl
    5bf4:	00456920 	subeq	r6, r5, r0, lsr #18
    5bf8:	0032f100 	eorseq	pc, r2, r0, lsl #2
    5bfc:	0032ef00 	eorseq	lr, r2, r0, lsl #30
    5c00:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5c0c:	0000311e 	andeq	r3, r0, lr, lsl r1
    5c10:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5c14:	07520100 	ldrbeq	r0, [r2, -r0, lsl #2]
    5c18:	0000c605 	andeq	ip, r0, r5, lsl #12
    5c1c:	00330600 	eorseq	r0, r3, r0, lsl #12
    5c20:	00330400 	eorseq	r0, r3, r0, lsl #8
    5c24:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5c38:	05075201 	streq	r5, [r7, #-513]	; 0xfffffdff
    5c3c:	000030de 	ldrdeq	r3, [r0], -lr
    5c40:	0045901f 	subeq	r9, r5, pc, lsl r0
    5c44:	00331f00 	eorseq	r1, r3, r0, lsl #30
    5c48:	00331900 	eorseq	r1, r3, r0, lsl #18
    5c4c:	459d2000 	ldrmi	r2, [sp]
    5c50:	334e0000 	movtcc	r0, #57344	; 0xe000
    5c54:	334c0000 	movtcc	r0, #49152	; 0xc000
    5c58:	21000000 	mrscs	r0, (UNDEF: 0)
    5c5c:	0000453c 	andeq	r4, r0, ip, lsr r5
    5c60:	00000000 	andeq	r0, r0, r0
    5c64:	00000001 	andeq	r0, r0, r1
    5c68:	00000000 	andeq	r0, r0, r0
    5c6c:	52010000 	andpl	r0, r1, #0
    5c70:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5c74:	65000045 	strvs	r0, [r0, #-69]	; 0xffffffbb
    5c78:	61000033 	tstvs	r0, r3, lsr r0
    5c7c:	1f000033 	svcne	0x00000033
    5c80:	0000454f 	andeq	r4, r0, pc, asr #10
    5c84:	00003387 	andeq	r3, r0, r7, lsl #7
    5c88:	00003385 	andeq	r3, r0, r5, lsl #7
    5c8c:	00456920 	subeq	r6, r5, r0, lsr #18
    5c90:	00339c00 	eorseq	r9, r3, r0, lsl #24
    5c94:	00339a00 	eorseq	r9, r3, r0, lsl #20
    5c98:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    5ca4:	000031b6 			; <UNDEFINED> instruction: 0x000031b6
    5ca8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5cac:	076b0100 	strbeq	r0, [fp, -r0, lsl #2]!
    5cb0:	0000c605 	andeq	ip, r0, r5, lsl #12
    5cb4:	0033b100 	eorseq	fp, r3, r0, lsl #2
    5cb8:	0033af00 	eorseq	sl, r3, r0, lsl #30
    5cbc:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5cd0:	05076b01 	streq	r6, [r7, #-2817]	; 0xfffff4ff
    5cd4:	00003176 	andeq	r3, r0, r6, ror r1
    5cd8:	0045901f 	subeq	r9, r5, pc, lsl r0
    5cdc:	0033ca00 	eorseq	ip, r3, r0, lsl #20
    5ce0:	0033c400 	eorseq	ip, r3, r0, lsl #8
    5ce4:	459d2000 	ldrmi	r2, [sp]
    5ce8:	33f90000 	mvnscc	r0, #0
    5cec:	33f70000 	mvnscc	r0, #0
    5cf0:	21000000 	mrscs	r0, (UNDEF: 0)
    5cf4:	0000453c 	andeq	r4, r0, ip, lsr r5
    5cf8:	00000000 	andeq	r0, r0, r0
    5cfc:	00000001 	andeq	r0, r0, r1
    5d00:	00000000 	andeq	r0, r0, r0
    5d04:	6b010000 	blvs	45d0c <_Min_Heap_Size+0x4550c>
    5d08:	5c1f0507 	cfldr32pl	mvfx0, [pc], {7}
    5d0c:	10000045 	andne	r0, r0, r5, asr #32
    5d10:	0c000034 	stceq	0, cr0, [r0], {52}	; 0x34
    5d14:	1f000034 	svcne	0x00000034
    5d18:	0000454f 	andeq	r4, r0, pc, asr #10
    5d1c:	00003432 	andeq	r3, r0, r2, lsr r4
    5d20:	00003430 	andeq	r3, r0, r0, lsr r4
    5d24:	00456920 	subeq	r6, r5, r0, lsr #18
    5d28:	00344700 	eorseq	r4, r4, r0, lsl #14
    5d2c:	00344500 	eorseq	r4, r4, r0, lsl #10
    5d30:	1a000000 	bne	5d38 <_Min_Heap_Size+0x5538>
    5d34:	00000000 	andeq	r0, r0, r0
    5d38:	00004600 	andeq	r4, r0, r0, lsl #12
    5d3c:	0000001a 	andeq	r0, r0, sl, lsl r0
    5d40:	00460000 	subeq	r0, r6, r0
    5d44:	00001a00 	andeq	r1, r0, r0, lsl #20
    5d48:	461e0000 	ldrmi	r0, [lr], -r0
    5d4c:	001a0000 	andseq	r0, sl, r0
    5d50:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5d54:	00000046 	andeq	r0, r0, r6, asr #32
    5d58:	10180128 	andsne	r0, r8, r8, lsr #2
    5d5c:	31010000 	mrscc	r0, (UNDEF: 1)
    5d60:	67011d07 	strvs	r1, [r1, -r7, lsl #26]
    5d64:	00000005 	andeq	r0, r0, r5
    5d68:	00000000 	andeq	r0, r0, r0
    5d6c:	02000000 	andeq	r0, r0, #0
    5d70:	1001007d 	andne	r0, r1, sp, ror r0
    5d74:	16000032 			; <UNDEFINED> instruction: 0x16000032
    5d78:	00001491 	muleq	r0, r1, r4
    5d7c:	4b073101 	blmi	1d2188 <_Min_Heap_Size+0x1d1988>
    5d80:	00000796 	muleq	r0, r6, r7
    5d84:	0000345e 	andeq	r3, r0, lr, asr r4
    5d88:	0000345a 	andeq	r3, r0, sl, asr r4
    5d8c:	93012700 	movwls	r2, #5888	; 0x1700
    5d90:	01000015 	tsteq	r0, r5, lsl r0
    5d94:	011306ed 	tsteq	r3, sp, ror #13
    5d98:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    5da4:	0000347f 	andeq	r3, r0, pc, ror r4
    5da8:	00334b01 	eorseq	r4, r3, r1, lsl #22
    5dac:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    5db0:	ed010000 	stc	0, cr0, [r1, #-0]
    5db4:	07964406 	ldreq	r4, [r6, r6, lsl #8]
    5db8:	34eb0000 	strbtcc	r0, [fp], #0
    5dbc:	34db0000 	ldrbcc	r0, [fp], #0
    5dc0:	e2160000 	ands	r0, r6, #0
    5dc4:	01000010 	tsteq	r0, r0, lsl r0
    5dc8:	825406ed 	subshi	r0, r4, #248512512	; 0xed00000
    5dcc:	58000006 	stmdapl	r0, {r1, r2}
    5dd0:	4e000035 	mcrmi	0, 0, r0, cr0, cr5, {1}
    5dd4:	16000035 			; <UNDEFINED> instruction: 0x16000035
    5dd8:	00002762 	andeq	r2, r0, r2, ror #14
    5ddc:	6406ed01 	strvs	lr, [r6], #-3329	; 0xfffff2ff
    5de0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    5de4:	000035a7 	andeq	r3, r0, r7, lsr #11
    5de8:	0000359d 	muleq	r0, sp, r5
    5dec:	00192b17 	andseq	r2, r9, r7, lsl fp
    5df0:	06ef0100 	strbteq	r0, [pc], r0, lsl #2
    5df4:	00023a15 	andeq	r3, r2, r5, lsl sl
    5df8:	0035f200 	eorseq	pc, r5, r0, lsl #4
    5dfc:	0035ec00 	eorseq	lr, r5, r0, lsl #24
    5e00:	00001c00 	andeq	r1, r0, r0, lsl #24
    5e04:	00000000 	andeq	r0, r0, r0
    5e08:	32a20000 	adccc	r0, r2, #0
    5e0c:	a5220000 	strge	r0, [r2, #-0]!
    5e10:	01000001 	tsteq	r0, r1
    5e14:	d2090704 	andle	r0, r9, #4, 14	; 0x100000
    5e18:	02000000 	andeq	r0, r0, #0
    5e1c:	1c007491 	cfstrsne	mvf7, [r0], {145}	; 0x91
	...
    5e28:	0000333a 	andeq	r3, r0, sl, lsr r3
    5e2c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5e30:	07050100 	streq	r0, [r5, -r0, lsl #2]
    5e34:	0000c609 	andeq	ip, r0, r9, lsl #12
    5e38:	00361e00 	eorseq	r1, r6, r0, lsl #28
    5e3c:	00361c00 	eorseq	r1, r6, r0, lsl #24
    5e40:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5e54:	09070501 	stmdbeq	r7, {r0, r8, sl}
    5e58:	000032fa 	strdeq	r3, [r0], -sl
    5e5c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5e60:	00363700 	eorseq	r3, r6, r0, lsl #14
    5e64:	00363100 	eorseq	r3, r6, r0, lsl #2
    5e68:	459d2000 	ldrmi	r2, [sp]
    5e6c:	36660000 	strbtcc	r0, [r6], -r0
    5e70:	36640000 	strbtcc	r0, [r4], -r0
    5e74:	21000000 	mrscs	r0, (UNDEF: 0)
    5e78:	0000453c 	andeq	r4, r0, ip, lsr r5
    5e7c:	00000000 	andeq	r0, r0, r0
    5e80:	00000001 	andeq	r0, r0, r1
    5e84:	00000000 	andeq	r0, r0, r0
    5e88:	05010000 	streq	r0, [r1, #-0]
    5e8c:	5c1f0907 			; <UNDEFINED> instruction: 0x5c1f0907
    5e90:	7d000045 	stcvc	0, cr0, [r0, #-276]	; 0xfffffeec
    5e94:	79000036 	stmdbvc	r0, {r1, r2, r4, r5}
    5e98:	1f000036 	svcne	0x00000036
    5e9c:	0000454f 	andeq	r4, r0, pc, asr #10
    5ea0:	0000369f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    5ea4:	0000369d 	muleq	r0, sp, r6
    5ea8:	00456920 	subeq	r6, r5, r0, lsr #18
    5eac:	0036b400 	eorseq	fp, r6, r0, lsl #8
    5eb0:	0036b200 	eorseq	fp, r6, r0, lsl #4
    5eb4:	23000000 	movwcs	r0, #0
    5eb8:	00000000 	andeq	r0, r0, r0
    5ebc:	00000dad 	andeq	r0, r0, sp, lsr #27
    5ec0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5ec4:	00000074 	andeq	r0, r0, r4, ror r0
    5ec8:	14280127 	strtne	r0, [r8], #-295	; 0xfffffed9
    5ecc:	b1010000 	mrslt	r0, (UNDEF: 1)
    5ed0:	3a011306 	bcc	4aaf0 <_Min_Heap_Size+0x4a2f0>
    5ed4:	00000002 	andeq	r0, r0, r2
    5ed8:	00000000 	andeq	r0, r0, r0
    5edc:	c7000000 	strgt	r0, [r0, -r0]
    5ee0:	01000036 	tsteq	r0, r6, lsr r0
    5ee4:	00003486 	andeq	r3, r0, r6, lsl #9
    5ee8:	00149116 	andseq	r9, r4, r6, lsl r1
    5eec:	06b10100 	ldrteq	r0, [r1], r0, lsl #2
    5ef0:	00079643 	andeq	r9, r7, r3, asr #12
    5ef4:	00373300 	eorseq	r3, r7, r0, lsl #6
    5ef8:	00372300 	eorseq	r2, r7, r0, lsl #6
    5efc:	10e21600 	rscne	r1, r2, r0, lsl #12
    5f00:	b1010000 	mrslt	r0, (UNDEF: 1)
    5f04:	06825306 	streq	r5, [r2], r6, lsl #6
    5f08:	37a00000 	strcc	r0, [r0, r0]!
    5f0c:	37960000 	ldrcc	r0, [r6, r0]
    5f10:	62160000 	andsvs	r0, r6, #0
    5f14:	01000027 	tsteq	r0, r7, lsr #32
    5f18:	b06306b1 	strhtlt	r0, [r3], #-97	; 0xffffff9f
    5f1c:	ef000000 	svc	0x00000000
    5f20:	e5000037 	str	r0, [r0, #-55]	; 0xffffffc9
    5f24:	17000037 	smladxne	r0, r7, r0, r0
    5f28:	0000192b 	andeq	r1, r0, fp, lsr #18
    5f2c:	1506b301 	strne	fp, [r6, #-769]	; 0xfffffcff
    5f30:	0000023a 	andeq	r0, r0, sl, lsr r2
    5f34:	0000383a 	andeq	r3, r0, sl, lsr r8
    5f38:	00003834 	andeq	r3, r0, r4, lsr r8
    5f3c:	0000001c 	andeq	r0, r0, ip, lsl r0
    5f40:	00000000 	andeq	r0, r0, r0
    5f44:	0033dd00 	eorseq	sp, r3, r0, lsl #26
    5f48:	01a52200 			; <UNDEFINED> instruction: 0x01a52200
    5f4c:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    5f50:	00d20906 	sbcseq	r0, r2, r6, lsl #18
    5f54:	91020000 	mrsls	r0, (UNDEF: 2)
    5f58:	001c0074 	andseq	r0, ip, r4, ror r0
    5f5c:	00000000 	andeq	r0, r0, r0
    5f60:	75000000 	strvc	r0, [r0, #-0]
    5f64:	1d000034 	stcne	0, cr0, [r0, #-208]	; 0xffffff30
    5f68:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5f6c:	0906c901 	stmdbeq	r6, {r0, r8, fp, lr, pc}
    5f70:	000000c6 	andeq	r0, r0, r6, asr #1
    5f74:	00003866 	andeq	r3, r0, r6, ror #16
    5f78:	00003864 	andeq	r3, r0, r4, ror #16
    5f7c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5f8c:	01000000 	mrseq	r0, (UNDEF: 0)
    5f90:	350906c9 	strcc	r0, [r9, #-1737]	; 0xfffff937
    5f94:	1f000034 	svcne	0x00000034
    5f98:	00004590 	muleq	r0, r0, r5
    5f9c:	0000387f 	andeq	r3, r0, pc, ror r8
    5fa0:	00003879 	andeq	r3, r0, r9, ror r8
    5fa4:	00459d20 	subeq	r9, r5, r0, lsr #26
    5fa8:	0038ae00 	eorseq	sl, r8, r0, lsl #28
    5fac:	0038ac00 	eorseq	sl, r8, r0, lsl #24
    5fb0:	3c210000 	stccc	0, cr0, [r1], #-0
    5fb4:	00000045 	andeq	r0, r0, r5, asr #32
    5fb8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5fc4:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    5fc8:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    5fcc:	38c50000 	stmiacc	r5, {}^	; <UNPREDICTABLE>
    5fd0:	38c10000 	stmiacc	r1, {}^	; <UNPREDICTABLE>
    5fd4:	4f1f0000 	svcmi	0x001f0000
    5fd8:	e7000045 	str	r0, [r0, -r5, asr #32]
    5fdc:	e5000038 	str	r0, [r0, #-56]	; 0xffffffc8
    5fe0:	20000038 	andcs	r0, r0, r8, lsr r0
    5fe4:	00004569 	andeq	r4, r0, r9, ror #10
    5fe8:	000038fc 	strdeq	r3, [r0], -ip
    5fec:	000038fa 	strdeq	r3, [r0], -sl
    5ff0:	00230000 	eoreq	r0, r3, r0
    5ff4:	1f000000 	svcne	0x00000000
    5ff8:	19000010 	stmdbne	r0, {r4}
    5ffc:	74025001 	strvc	r5, [r2], #-1
    6000:	27000000 	strcs	r0, [r0, -r0]
    6004:	00161e01 	andseq	r1, r6, r1, lsl #28
    6008:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    600c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6018:	390f0000 	stmdbcc	pc, {}	; <UNPREDICTABLE>
    601c:	7f010000 	svcvc	0x00010000
    6020:	16000035 			; <UNDEFINED> instruction: 0x16000035
    6024:	00001491 	muleq	r0, r1, r4
    6028:	40063401 	andmi	r3, r6, r1, lsl #8
    602c:	00000796 	muleq	r0, r6, r7
    6030:	00003963 	andeq	r3, r0, r3, ror #18
    6034:	00003953 	andeq	r3, r0, r3, asr r9
    6038:	0010e216 	andseq	lr, r0, r6, lsl r2
    603c:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    6040:	00068250 	andeq	r8, r6, r0, asr r2
    6044:	0039d800 	eorseq	sp, r9, r0, lsl #16
    6048:	0039c600 	eorseq	ip, r9, r0, lsl #12
    604c:	27621600 	strbcs	r1, [r2, -r0, lsl #12]!
    6050:	34010000 	strcc	r0, [r1], #-0
    6054:	00b06006 	adcseq	r6, r0, r6
    6058:	3a560000 	bcc	1586060 <_Min_Heap_Size+0x1585860>
    605c:	3a4c0000 	bcc	1306064 <_Min_Heap_Size+0x1305864>
    6060:	94160000 	ldrls	r0, [r6], #-0
    6064:	01000013 	tsteq	r0, r3, lsl r0
    6068:	cf700634 	svcgt	0x00700634
    606c:	9f000008 	svcls	0x00000008
    6070:	9b00003a 	blls	6160 <_Min_Heap_Size+0x5960>
    6074:	1600003a 			; <UNDEFINED> instruction: 0x1600003a
    6078:	000013c6 	andeq	r1, r0, r6, asr #7
    607c:	35063501 	strcc	r3, [r6, #-1281]	; 0xfffffaff
    6080:	000000c6 	andeq	r0, r0, r6, asr #1
    6084:	00003ac1 	andeq	r3, r0, r1, asr #21
    6088:	00003abd 			; <UNDEFINED> instruction: 0x00003abd
    608c:	00110e17 	andseq	r0, r1, r7, lsl lr
    6090:	06370100 	ldrteq	r0, [r7], -r0, lsl #2
    6094:	0006820d 	andeq	r8, r6, sp, lsl #4
    6098:	003ae500 	eorseq	lr, sl, r0, lsl #10
    609c:	003ae100 	eorseq	lr, sl, r0, lsl #2
    60a0:	11781700 	cmnne	r8, r0, lsl #14
    60a4:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    60a8:	08cf0d06 	stmiaeq	pc, {r1, r2, r8, sl, fp}^	; <UNPREDICTABLE>
    60ac:	3b0b0000 	blcc	2c60b4 <_Min_Heap_Size+0x2c58b4>
    60b0:	3b030000 	blcc	c60b8 <_Min_Heap_Size+0xc58b8>
    60b4:	db170000 	blle	5c60bc <_Min_Heap_Size+0x5c58bc>
    60b8:	01000014 	tsteq	r0, r4, lsl r0
    60bc:	c60c0639 			; <UNDEFINED> instruction: 0xc60c0639
    60c0:	45000000 	strmi	r0, [r0, #-0]
    60c4:	4100003b 	tstmi	r0, fp, lsr r0
    60c8:	1c00003b 	stcne	0, cr0, [r0], {59}	; 0x3b
	...
    60d4:	0000356c 	andeq	r3, r0, ip, ror #10
    60d8:	0001a522 	andeq	sl, r1, r2, lsr #10
    60dc:	06640100 	strbteq	r0, [r4], -r0, lsl #2
    60e0:	0000d209 	andeq	sp, r0, r9, lsl #4
    60e4:	5c910200 	lfmpl	f0, 4, [r1], {0}
    60e8:	00001a00 	andeq	r1, r0, r0, lsl #20
    60ec:	45f20000 	ldrbmi	r0, [r2, #0]!
    60f0:	001a0000 	andseq	r0, sl, r0
    60f4:	f2000000 	vhadd.s8	d0, d0, d0
    60f8:	00000045 	andeq	r0, r0, r5, asr #32
    60fc:	14600127 	strbtne	r0, [r0], #-295	; 0xfffffed9
    6100:	fd010000 	stc2	0, cr0, [r1, #-0]
    6104:	3a011305 	bcc	4ad20 <_Min_Heap_Size+0x4a520>
    6108:	00000002 	andeq	r0, r0, r2
    610c:	00000000 	andeq	r0, r0, r0
    6110:	63000000 	movwvs	r0, #0
    6114:	0100003b 	tsteq	r0, fp, lsr r0
    6118:	00003730 	andeq	r3, r0, r0, lsr r7
    611c:	00149116 	andseq	r9, r4, r6, lsl r1
    6120:	05fd0100 	ldrbeq	r0, [sp, #256]!	; 0x100
    6124:	00079638 	andeq	r9, r7, r8, lsr r6
    6128:	003b8b00 	eorseq	r8, fp, r0, lsl #22
    612c:	003b8300 	eorseq	r8, fp, r0, lsl #6
    6130:	152d1700 	strne	r1, [sp, #-1792]!	; 0xfffff900
    6134:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    6138:	00c60c05 	sbceq	r0, r6, r5, lsl #24
    613c:	3bc90000 	blcc	ff246144 <_estack+0xdf244f04>
    6140:	3bbf0000 	blcc	fefc6148 <_estack+0xdefc4f08>
    6144:	001c0000 	andseq	r0, ip, r0
    6148:	00000000 	andeq	r0, r0, r0
    614c:	61000000 	mrsvs	r0, (UNDEF: 0)
    6150:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    6154:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6158:	05060a01 	streq	r0, [r6, #-2561]	; 0xfffff5ff
    615c:	000000c6 	andeq	r0, r0, r6, asr #1
    6160:	00003c2d 	andeq	r3, r0, sp, lsr #24
    6164:	00003c2b 	andeq	r3, r0, fp, lsr #24
    6168:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6178:	01000000 	mrseq	r0, (UNDEF: 0)
    617c:	2105060a 	tstcs	r5, sl, lsl #12
    6180:	1f000036 	svcne	0x00000036
    6184:	00004590 	muleq	r0, r0, r5
    6188:	00003c46 	andeq	r3, r0, r6, asr #24
    618c:	00003c40 	andeq	r3, r0, r0, asr #24
    6190:	00459d20 	subeq	r9, r5, r0, lsr #26
    6194:	003c7500 	eorseq	r7, ip, r0, lsl #10
    6198:	003c7300 	eorseq	r7, ip, r0, lsl #6
    619c:	3c210000 	stccc	0, cr0, [r1], #-0
    61a0:	00000045 	andeq	r0, r0, r5, asr #32
    61a4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    61b0:	060a0100 	streq	r0, [sl], -r0, lsl #2
    61b4:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    61b8:	3c8c0000 	stccc	0, cr0, [ip], {0}
    61bc:	3c880000 	stccc	0, cr0, [r8], {0}
    61c0:	4f1f0000 	svcmi	0x001f0000
    61c4:	ae000045 	cdpge	0, 0, cr0, cr0, cr5, {2}
    61c8:	ac00003c 	stcge	0, cr0, [r0], {60}	; 0x3c
    61cc:	2000003c 	andcs	r0, r0, ip, lsr r0
    61d0:	00004569 	andeq	r4, r0, r9, ror #10
    61d4:	00003cc3 	andeq	r3, r0, r3, asr #25
    61d8:	00003cc1 	andeq	r3, r0, r1, asr #25
    61dc:	001c0000 	andseq	r0, ip, r0
    61e0:	00000000 	andeq	r0, r0, r0
    61e4:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    61e8:	1d000036 	stcne	0, cr0, [r0, #-216]	; 0xffffff28
    61ec:	006c6176 	rsbeq	r6, ip, r6, ror r1
    61f0:	05061801 	streq	r1, [r6, #-2049]	; 0xfffff7ff
    61f4:	000000c6 	andeq	r0, r0, r6, asr #1
    61f8:	00003cd8 	ldrdeq	r3, [r0], -r8
    61fc:	00003cd6 	ldrdeq	r3, [r0], -r6
    6200:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6210:	01000000 	mrseq	r0, (UNDEF: 0)
    6214:	b9050618 	stmdblt	r5, {r3, r4, r9, sl}
    6218:	1f000036 	svcne	0x00000036
    621c:	00004590 	muleq	r0, r0, r5
    6220:	00003cf1 	strdeq	r3, [r0], -r1
    6224:	00003ceb 	andeq	r3, r0, fp, ror #25
    6228:	00459d20 	subeq	r9, r5, r0, lsr #26
    622c:	003d2000 	eorseq	r2, sp, r0
    6230:	003d1e00 	eorseq	r1, sp, r0, lsl #28
    6234:	3c210000 	stccc	0, cr0, [r1], #-0
    6238:	00000045 	andeq	r0, r0, r5, asr #32
    623c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6248:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    624c:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6250:	3d370000 	ldccc	0, cr0, [r7, #-0]
    6254:	3d330000 	ldccc	0, cr0, [r3, #-0]
    6258:	4f1f0000 	svcmi	0x001f0000
    625c:	59000045 	stmdbpl	r0, {r0, r2, r6}
    6260:	5700003d 	smladxpl	r0, sp, r0, r0
    6264:	2000003d 	andcs	r0, r0, sp, lsr r0
    6268:	00004569 	andeq	r4, r0, r9, ror #10
    626c:	00003d6e 	andeq	r3, r0, lr, ror #26
    6270:	00003d6c 	andeq	r3, r0, ip, ror #26
    6274:	001a0000 	andseq	r0, sl, r0
    6278:	00000000 	andeq	r0, r0, r0
    627c:	18000046 	stmdane	r0, {r1, r2, r6}
    6280:	00000000 	andeq	r0, r0, r0
    6284:	00000ce9 	andeq	r0, r0, r9, ror #25
    6288:	00003716 	andeq	r3, r0, r6, lsl r7
    628c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6290:	1a000074 	bne	6468 <_Min_Heap_Size+0x5c68>
    6294:	00000000 	andeq	r0, r0, r0
    6298:	00004600 	andeq	r4, r0, r0, lsl #12
    629c:	00000023 	andeq	r0, r0, r3, lsr #32
    62a0:	000af500 	andeq	pc, sl, r0, lsl #10
    62a4:	50011900 	andpl	r1, r1, r0, lsl #18
    62a8:	00007402 	andeq	r7, r0, r2, lsl #8
    62ac:	7b012700 	blvc	4feb4 <_Min_Heap_Size+0x4f6b4>
    62b0:	01000016 	tsteq	r0, r6, lsl r0
    62b4:	011305db 			; <UNDEFINED> instruction: 0x011305db
    62b8:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    62c4:	00003d81 	andeq	r3, r0, r1, lsl #27
    62c8:	0039e001 	eorseq	lr, r9, r1
    62cc:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    62d0:	db010000 	blle	462d8 <_Min_Heap_Size+0x45ad8>
    62d4:	07963a05 	ldreq	r3, [r6, r5, lsl #20]
    62d8:	3db50000 	ldccc	0, cr0, [r5]
    62dc:	3dad0000 	stccc	0, cr0, [sp]
    62e0:	001c0000 	andseq	r0, ip, r0
    62e4:	00000000 	andeq	r0, r0, r0
    62e8:	fd000000 	stc2	0, cr0, [r0, #-0]
    62ec:	1d000037 	stcne	0, cr0, [r0, #-220]	; 0xffffff24
    62f0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    62f4:	0505e101 	streq	lr, [r5, #-257]	; 0xfffffeff
    62f8:	000000c6 	andeq	r0, r0, r6, asr #1
    62fc:	00003df1 	strdeq	r3, [r0], -r1
    6300:	00003def 	andeq	r3, r0, pc, ror #27
    6304:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6314:	01000000 	mrseq	r0, (UNDEF: 0)
    6318:	bd0505e1 	cfstr32lt	mvfx0, [r5, #-900]	; 0xfffffc7c
    631c:	1f000037 	svcne	0x00000037
    6320:	00004590 	muleq	r0, r0, r5
    6324:	00003e0a 	andeq	r3, r0, sl, lsl #28
    6328:	00003e04 	andeq	r3, r0, r4, lsl #28
    632c:	00459d20 	subeq	r9, r5, r0, lsr #26
    6330:	003e3900 	eorseq	r3, lr, r0, lsl #18
    6334:	003e3700 	eorseq	r3, lr, r0, lsl #14
    6338:	3c210000 	stccc	0, cr0, [r1], #-0
    633c:	00000045 	andeq	r0, r0, r5, asr #32
    6340:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    634c:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
    6350:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6354:	3e500000 	cdpcc	0, 5, cr0, cr0, cr0, {0}
    6358:	3e4c0000 	cdpcc	0, 4, cr0, cr12, cr0, {0}
    635c:	4f1f0000 	svcmi	0x001f0000
    6360:	72000045 	andvc	r0, r0, #69	; 0x45
    6364:	7000003e 	andvc	r0, r0, lr, lsr r0
    6368:	2000003e 	andcs	r0, r0, lr, lsr r0
    636c:	00004569 	andeq	r4, r0, r9, ror #10
    6370:	00003e87 	andeq	r3, r0, r7, lsl #29
    6374:	00003e85 	andeq	r3, r0, r5, lsl #29
    6378:	001c0000 	andseq	r0, ip, r0
    637c:	00000000 	andeq	r0, r0, r0
    6380:	1b000000 	blne	6388 <_Min_Heap_Size+0x5b88>
    6384:	22000038 	andcs	r0, r0, #56	; 0x38
    6388:	000001a5 	andeq	r0, r0, r5, lsr #3
    638c:	0505e701 	streq	lr, [r5, #-1793]	; 0xfffff8ff
    6390:	000000d2 	ldrdeq	r0, [r0], -r2
    6394:	007c9102 	rsbseq	r9, ip, r2, lsl #2
    6398:	0000001c 	andeq	r0, r0, ip, lsl r0
    639c:	00000000 	andeq	r0, r0, r0
    63a0:	0038b300 	eorseq	fp, r8, r0, lsl #6
    63a4:	61761d00 	cmnvs	r6, r0, lsl #26
    63a8:	ec01006c 	stc	0, cr0, [r1], {108}	; 0x6c
    63ac:	00c60705 	sbceq	r0, r6, r5, lsl #14
    63b0:	3e9c0000 	cdpcc	0, 9, cr0, cr12, cr0, {0}
    63b4:	3e9a0000 	cdpcc	0, 9, cr0, cr10, cr0, {0}
    63b8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    63bc:	00000045 	andeq	r0, r0, r5, asr #32
	...
    63cc:	05ec0100 	strbeq	r0, [ip, #256]!	; 0x100
    63d0:	00387307 	eorseq	r7, r8, r7, lsl #6
    63d4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    63d8:	3eb50000 	cdpcc	0, 11, cr0, cr5, cr0, {0}
    63dc:	3eaf0000 	cdpcc	0, 10, cr0, cr15, cr0, {0}
    63e0:	9d200000 	stcls	0, cr0, [r0, #-0]
    63e4:	e4000045 	str	r0, [r0], #-69	; 0xffffffbb
    63e8:	e200003e 	and	r0, r0, #62	; 0x3e
    63ec:	0000003e 	andeq	r0, r0, lr, lsr r0
    63f0:	00453c21 	subeq	r3, r5, r1, lsr #24
    63f4:	00000000 	andeq	r0, r0, r0
    63f8:	00000100 	andeq	r0, r0, r0, lsl #2
    63fc:	00000000 	andeq	r0, r0, r0
    6400:	01000000 	mrseq	r0, (UNDEF: 0)
    6404:	1f0705ec 	svcne	0x000705ec
    6408:	0000455c 	andeq	r4, r0, ip, asr r5
    640c:	00003efb 	strdeq	r3, [r0], -fp
    6410:	00003ef7 	strdeq	r3, [r0], -r7
    6414:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6418:	003f1d00 	eorseq	r1, pc, r0, lsl #26
    641c:	003f1b00 	eorseq	r1, pc, r0, lsl #22
    6420:	45692000 	strbmi	r2, [r9, #-0]!
    6424:	3f320000 	svccc	0x00320000
    6428:	3f300000 	svccc	0x00300000
    642c:	00000000 	andeq	r0, r0, r0
    6430:	0000001c 	andeq	r0, r0, ip, lsl r0
    6434:	00000000 	andeq	r0, r0, r0
    6438:	00394b00 	eorseq	r4, r9, r0, lsl #22
    643c:	61761d00 	cmnvs	r6, r0, lsl #26
    6440:	ee01006c 	cdp	0, 0, cr0, cr1, cr12, {3}
    6444:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6448:	3f470000 	svccc	0x00470000
    644c:	3f450000 	svccc	0x00450000
    6450:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6454:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6464:	05ee0100 	strbeq	r0, [lr, #256]!	; 0x100
    6468:	00390b05 	eorseq	r0, r9, r5, lsl #22
    646c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6470:	3f600000 	svccc	0x00600000
    6474:	3f5a0000 	svccc	0x005a0000
    6478:	9d200000 	stcls	0, cr0, [r0, #-0]
    647c:	8f000045 	svchi	0x00000045
    6480:	8d00003f 	stchi	0, cr0, [r0, #-252]	; 0xffffff04
    6484:	0000003f 	andeq	r0, r0, pc, lsr r0
    6488:	00453c21 	subeq	r3, r5, r1, lsr #24
    648c:	00000000 	andeq	r0, r0, r0
    6490:	00000100 	andeq	r0, r0, r0, lsl #2
    6494:	00000000 	andeq	r0, r0, r0
    6498:	01000000 	mrseq	r0, (UNDEF: 0)
    649c:	1f0505ee 	svcne	0x000505ee
    64a0:	0000455c 	andeq	r4, r0, ip, asr r5
    64a4:	00003fa6 	andeq	r3, r0, r6, lsr #31
    64a8:	00003fa2 	andeq	r3, r0, r2, lsr #31
    64ac:	00454f1f 	subeq	r4, r5, pc, lsl pc
    64b0:	003fc800 	eorseq	ip, pc, r0, lsl #16
    64b4:	003fc600 	eorseq	ip, pc, r0, lsl #12
    64b8:	45692000 	strbmi	r2, [r9, #-0]!
    64bc:	3fdd0000 	svccc	0x00dd0000
    64c0:	3fdb0000 	svccc	0x00db0000
    64c4:	00000000 	andeq	r0, r0, r0
    64c8:	00000026 	andeq	r0, r0, r6, lsr #32
    64cc:	00000000 	andeq	r0, r0, r0
    64d0:	61761d00 	cmnvs	r6, r0, lsl #26
    64d4:	f101006c 	setend	le
    64d8:	00c60505 	sbceq	r0, r6, r5, lsl #10
    64dc:	3ff20000 	svccc	0x00f20000
    64e0:	3ff00000 	svccc	0x00f00000	; IMB
    64e4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    64e8:	00000045 	andeq	r0, r0, r5, asr #32
	...
    64f8:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    64fc:	00399f05 	eorseq	r9, r9, r5, lsl #30
    6500:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6504:	400b0000 	andmi	r0, fp, r0
    6508:	40050000 	andmi	r0, r5, r0
    650c:	9d200000 	stcls	0, cr0, [r0, #-0]
    6510:	3a000045 	bcc	662c <_Min_Heap_Size+0x5e2c>
    6514:	38000040 	stmdacc	r0, {r6}
    6518:	00000040 	andeq	r0, r0, r0, asr #32
    651c:	00453c21 	subeq	r3, r5, r1, lsr #24
    6520:	00000000 	andeq	r0, r0, r0
    6524:	00000100 	andeq	r0, r0, r0, lsl #2
    6528:	00000000 	andeq	r0, r0, r0
    652c:	01000000 	mrseq	r0, (UNDEF: 0)
    6530:	1f0505f1 	svcne	0x000505f1
    6534:	0000455c 	andeq	r4, r0, ip, asr r5
    6538:	00004051 	andeq	r4, r0, r1, asr r0
    653c:	0000404d 	andeq	r4, r0, sp, asr #32
    6540:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6544:	00407300 	subeq	r7, r0, r0, lsl #6
    6548:	00407100 	subeq	r7, r0, r0, lsl #2
    654c:	45692000 	strbmi	r2, [r9, #-0]!
    6550:	40880000 	addmi	r0, r8, r0
    6554:	40860000 	addmi	r0, r6, r0
    6558:	00000000 	andeq	r0, r0, r0
    655c:	32012800 	andcc	r2, r1, #0, 16
    6560:	01000010 	tsteq	r0, r0, lsl r0
    6564:	011305bc 			; <UNDEFINED> instruction: 0x011305bc
    6568:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6574:	01007d02 	tsteq	r0, r2, lsl #26
    6578:	00003c86 	andeq	r3, r0, r6, lsl #25
    657c:	00149116 	andseq	r9, r4, r6, lsl r1
    6580:	05bc0100 	ldreq	r0, [ip, #256]!	; 0x100
    6584:	00079639 	andeq	r9, r7, r9, lsr r6
    6588:	0040a100 	subeq	sl, r0, r0, lsl #2
    658c:	00409b00 	subeq	r9, r0, r0, lsl #22
    6590:	152d1700 	strne	r1, [sp, #-1792]!	; 0xfffff900
    6594:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    6598:	00c60c05 	sbceq	r0, r6, r5, lsl #24
    659c:	40d70000 	sbcsmi	r0, r7, r0
    65a0:	40cd0000 	sbcmi	r0, sp, r0
    65a4:	001c0000 	andseq	r0, ip, r0
    65a8:	00000000 	andeq	r0, r0, r0
    65ac:	c1000000 	mrsgt	r0, (UNDEF: 0)
    65b0:	1d00003a 	stcne	0, cr0, [r0, #-232]	; 0xffffff18
    65b4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    65b8:	0505c401 	streq	ip, [r5, #-1025]	; 0xfffffbff
    65bc:	000000c6 	andeq	r0, r0, r6, asr #1
    65c0:	00004135 	andeq	r4, r0, r5, lsr r1
    65c4:	00004133 	andeq	r4, r0, r3, lsr r1
    65c8:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    65d8:	01000000 	mrseq	r0, (UNDEF: 0)
    65dc:	810505c4 	smlabthi	r5, r4, r5, r0
    65e0:	1f00003a 	svcne	0x0000003a
    65e4:	00004590 	muleq	r0, r0, r5
    65e8:	0000414e 	andeq	r4, r0, lr, asr #2
    65ec:	00004148 	andeq	r4, r0, r8, asr #2
    65f0:	00459d20 	subeq	r9, r5, r0, lsr #26
    65f4:	00417d00 	subeq	r7, r1, r0, lsl #26
    65f8:	00417b00 	subeq	r7, r1, r0, lsl #22
    65fc:	3c210000 	stccc	0, cr0, [r1], #-0
    6600:	00000045 	andeq	r0, r0, r5, asr #32
    6604:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6610:	05c40100 	strbeq	r0, [r4, #256]	; 0x100
    6614:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6618:	41940000 	orrsmi	r0, r4, r0
    661c:	41900000 	orrsmi	r0, r0, r0
    6620:	4f1f0000 	svcmi	0x001f0000
    6624:	b6000045 	strlt	r0, [r0], -r5, asr #32
    6628:	b4000041 	strlt	r0, [r0], #-65	; 0xffffffbf
    662c:	20000041 	andcs	r0, r0, r1, asr #32
    6630:	00004569 	andeq	r4, r0, r9, ror #10
    6634:	000041cb 	andeq	r4, r0, fp, asr #3
    6638:	000041c9 	andeq	r4, r0, r9, asr #3
    663c:	001c0000 	andseq	r0, ip, r0
    6640:	00000000 	andeq	r0, r0, r0
    6644:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    6648:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    664c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6650:	0505cb01 	streq	ip, [r5, #-2817]	; 0xfffff4ff
    6654:	000000c6 	andeq	r0, r0, r6, asr #1
    6658:	000041e0 	andeq	r4, r0, r0, ror #3
    665c:	000041de 	ldrdeq	r4, [r0], -lr
    6660:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6670:	01000000 	mrseq	r0, (UNDEF: 0)
    6674:	190505cb 	stmdbne	r5, {r0, r1, r3, r6, r7, r8, sl}
    6678:	1f00003b 	svcne	0x0000003b
    667c:	00004590 	muleq	r0, r0, r5
    6680:	000041f9 	strdeq	r4, [r0], -r9
    6684:	000041f3 	strdeq	r4, [r0], -r3
    6688:	00459d20 	subeq	r9, r5, r0, lsr #26
    668c:	00422800 	subeq	r2, r2, r0, lsl #16
    6690:	00422600 	subeq	r2, r2, r0, lsl #12
    6694:	3c210000 	stccc	0, cr0, [r1], #-0
    6698:	00000045 	andeq	r0, r0, r5, asr #32
    669c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    66a8:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    66ac:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    66b0:	423f0000 	eorsmi	r0, pc, #0
    66b4:	423b0000 	eorsmi	r0, fp, #0
    66b8:	4f1f0000 	svcmi	0x001f0000
    66bc:	61000045 	tstvs	r0, r5, asr #32
    66c0:	5f000042 	svcpl	0x00000042
    66c4:	20000042 	andcs	r0, r0, r2, asr #32
    66c8:	00004569 	andeq	r4, r0, r9, ror #10
    66cc:	00004276 	andeq	r4, r0, r6, ror r2
    66d0:	00004274 	andeq	r4, r0, r4, ror r2
    66d4:	001c0000 	andseq	r0, ip, r0
    66d8:	00000000 	andeq	r0, r0, r0
    66dc:	f1000000 	cps	#0
    66e0:	1d00003b 	stcne	0, cr0, [r0, #-236]	; 0xffffff14
    66e4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    66e8:	0505cc01 	streq	ip, [r5, #-3073]	; 0xfffff3ff
    66ec:	000000c6 	andeq	r0, r0, r6, asr #1
    66f0:	0000428b 	andeq	r4, r0, fp, lsl #5
    66f4:	00004289 	andeq	r4, r0, r9, lsl #5
    66f8:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6708:	01000000 	mrseq	r0, (UNDEF: 0)
    670c:	b10505cc 	smlabtlt	r5, ip, r5, r0
    6710:	1f00003b 	svcne	0x0000003b
    6714:	00004590 	muleq	r0, r0, r5
    6718:	000042a4 	andeq	r4, r0, r4, lsr #5
    671c:	0000429e 	muleq	r0, lr, r2
    6720:	00459d20 	subeq	r9, r5, r0, lsr #26
    6724:	0042d300 	subeq	sp, r2, r0, lsl #6
    6728:	0042d100 	subeq	sp, r2, r0, lsl #2
    672c:	3c210000 	stccc	0, cr0, [r1], #-0
    6730:	00000045 	andeq	r0, r0, r5, asr #32
    6734:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6740:	05cc0100 	strbeq	r0, [ip, #256]	; 0x100
    6744:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6748:	42ea0000 	rscmi	r0, sl, #0
    674c:	42e60000 	rscmi	r0, r6, #0
    6750:	4f1f0000 	svcmi	0x001f0000
    6754:	0c000045 	stceq	0, cr0, [r0], {69}	; 0x45
    6758:	0a000043 	beq	686c <_Min_Heap_Size+0x606c>
    675c:	20000043 	andcs	r0, r0, r3, asr #32
    6760:	00004569 	andeq	r4, r0, r9, ror #10
    6764:	00004321 	andeq	r4, r0, r1, lsr #6
    6768:	0000431f 	andeq	r4, r0, pc, lsl r3
    676c:	00260000 	eoreq	r0, r6, r0
    6770:	00000000 	andeq	r0, r0, r0
    6774:	1d000000 	stcne	0, cr0, [r0, #-0]
    6778:	006c6176 	rsbeq	r6, ip, r6, ror r1
    677c:	0505cf01 	streq	ip, [r5, #-3841]	; 0xfffff0ff
    6780:	000000c6 	andeq	r0, r0, r6, asr #1
    6784:	00004336 	andeq	r4, r0, r6, lsr r3
    6788:	00004334 	andeq	r4, r0, r4, lsr r3
    678c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    679c:	01000000 	mrseq	r0, (UNDEF: 0)
    67a0:	450505cf 	strmi	r0, [r5, #-1487]	; 0xfffffa31
    67a4:	1f00003c 	svcne	0x0000003c
    67a8:	00004590 	muleq	r0, r0, r5
    67ac:	0000434f 	andeq	r4, r0, pc, asr #6
    67b0:	00004349 	andeq	r4, r0, r9, asr #6
    67b4:	00459d20 	subeq	r9, r5, r0, lsr #26
    67b8:	00437e00 	subeq	r7, r3, r0, lsl #28
    67bc:	00437c00 	subeq	r7, r3, r0, lsl #24
    67c0:	3c210000 	stccc	0, cr0, [r1], #-0
    67c4:	00000045 	andeq	r0, r0, r5, asr #32
    67c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    67d4:	05cf0100 	strbeq	r0, [pc, #256]	; 68dc <_Min_Heap_Size+0x60dc>
    67d8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    67dc:	43950000 	orrsmi	r0, r5, #0
    67e0:	43910000 	orrsmi	r0, r1, #0
    67e4:	4f1f0000 	svcmi	0x001f0000
    67e8:	b7000045 	strlt	r0, [r0, -r5, asr #32]
    67ec:	b5000043 	strlt	r0, [r0, #-67]	; 0xffffffbd
    67f0:	20000043 	andcs	r0, r0, r3, asr #32
    67f4:	00004569 	andeq	r4, r0, r9, ror #10
    67f8:	000043cc 	andeq	r4, r0, ip, asr #7
    67fc:	000043ca 	andeq	r4, r0, sl, asr #7
    6800:	27000000 	strcs	r0, [r0, -r0]
    6804:	00136601 	andseq	r6, r3, r1, lsl #12
    6808:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    680c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6818:	43df0000 	bicsmi	r0, pc, #0
    681c:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    6820:	1600003c 			; <UNDEFINED> instruction: 0x1600003c
    6824:	00001491 	muleq	r0, r1, r4
    6828:	3c05a101 	stfccd	f2, [r5], {1}
    682c:	00000796 	muleq	r0, r6, r7
    6830:	0000440f 	andeq	r4, r0, pc, lsl #8
    6834:	000043ff 	strdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    6838:	0010e216 	andseq	lr, r0, r6, lsl r2
    683c:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    6840:	0006824c 	andeq	r8, r6, ip, asr #4
    6844:	00448500 	subeq	r8, r4, r0, lsl #10
    6848:	00447b00 	subeq	r7, r4, r0, lsl #22
    684c:	27621600 	strbcs	r1, [r2, -r0, lsl #12]!
    6850:	a1010000 	mrsge	r0, (UNDEF: 1)
    6854:	00b05c05 	adcseq	r5, r0, r5, lsl #24
    6858:	44d40000 	ldrbmi	r0, [r4], #0
    685c:	44ca0000 	strbmi	r0, [sl], #0
    6860:	00230000 	eoreq	r0, r3, r0
    6864:	ad000000 	stcge	0, cr0, [r0, #-0]
    6868:	1900000d 	stmdbne	r0, {r0, r2, r3}
    686c:	f3035001 	vhadd.u8	d5, d3, d1
    6870:	00005001 	andeq	r5, r0, r1
    6874:	16080127 	strne	r0, [r8], -r7, lsr #2
    6878:	63010000 	movwvs	r0, #4096	; 0x1000
    687c:	3a011305 	bcc	4b498 <_Min_Heap_Size+0x4ac98>
    6880:	00000002 	andeq	r0, r0, r2
    6884:	00000000 	andeq	r0, r0, r0
    6888:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    688c:	01000045 	tsteq	r0, r5, asr #32
    6890:	00003e11 	andeq	r3, r0, r1, lsl lr
    6894:	00149116 	andseq	r9, r4, r6, lsl r1
    6898:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    689c:	0007963d 	andeq	r9, r7, sp, lsr r6
    68a0:	00454900 	subeq	r4, r5, r0, lsl #18
    68a4:	00453900 	subeq	r3, r5, r0, lsl #18
    68a8:	10e21600 	rscne	r1, r2, r0, lsl #12
    68ac:	63010000 	movwvs	r0, #4096	; 0x1000
    68b0:	067c5305 	ldrbteq	r5, [ip], -r5, lsl #6
    68b4:	45b90000 	ldrmi	r0, [r9, #0]!
    68b8:	45af0000 	strmi	r0, [pc, #0]!	; 68c0 <_Min_Heap_Size+0x60c0>
    68bc:	62160000 	andsvs	r0, r6, #0
    68c0:	01000027 	tsteq	r0, r7, lsr #32
    68c4:	b0630563 	rsblt	r0, r3, r3, ror #10
    68c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    68cc:	fe000046 	cdp2	0, 0, cr0, cr0, cr6, {2}
    68d0:	1d000045 	stcne	0, cr0, [r0, #-276]	; 0xfffffeec
    68d4:	00706d74 	rsbseq	r6, r0, r4, ror sp
    68d8:	13056501 	movwne	r6, #21761	; 0x5501
    68dc:	00003e11 	andeq	r3, r0, r1, lsl lr
    68e0:	0000464f 	andeq	r4, r0, pc, asr #12
    68e4:	0000464d 	andeq	r4, r0, sp, asr #12
    68e8:	0000f82d 	andeq	pc, r0, sp, lsr #16
    68ec:	003dff00 	eorseq	pc, sp, r0, lsl #30
    68f0:	61761d00 	cmnvs	r6, r0, lsl #26
    68f4:	8b01006c 	blhi	46aac <_Min_Heap_Size+0x462ac>
    68f8:	00c60505 	sbceq	r0, r6, r5, lsl #10
    68fc:	46690000 	strbtmi	r0, [r9], -r0
    6900:	46670000 	strbtmi	r0, [r7], -r0
    6904:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6908:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6918:	058b0100 	streq	r0, [fp, #256]	; 0x100
    691c:	003dbf05 	eorseq	fp, sp, r5, lsl #30
    6920:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6924:	46820000 	strmi	r0, [r2], r0
    6928:	467c0000 	ldrbtmi	r0, [ip], -r0
    692c:	9d200000 	stcls	0, cr0, [r0, #-0]
    6930:	b1000045 	tstlt	r0, r5, asr #32
    6934:	af000046 	svcge	0x00000046
    6938:	00000046 	andeq	r0, r0, r6, asr #32
    693c:	00453c21 	subeq	r3, r5, r1, lsr #24
    6940:	00000000 	andeq	r0, r0, r0
    6944:	00000100 	andeq	r0, r0, r0, lsl #2
    6948:	00000000 	andeq	r0, r0, r0
    694c:	01000000 	mrseq	r0, (UNDEF: 0)
    6950:	1f05058b 	svcne	0x0005058b
    6954:	0000455c 	andeq	r4, r0, ip, asr r5
    6958:	000046c8 	andeq	r4, r0, r8, asr #13
    695c:	000046c4 	andeq	r4, r0, r4, asr #13
    6960:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6964:	0046ea00 	subeq	lr, r6, r0, lsl #20
    6968:	0046e800 	subeq	lr, r6, r0, lsl #16
    696c:	45692000 	strbmi	r2, [r9, #-0]!
    6970:	46ff0000 	ldrbtmi	r0, [pc], r0
    6974:	46fd0000 	ldrbtmi	r0, [sp], r0
    6978:	00000000 	andeq	r0, r0, r0
    697c:	00000023 	andeq	r0, r0, r3, lsr #32
    6980:	0045e300 	subeq	lr, r5, r0, lsl #6
    6984:	51011900 	tstpl	r1, r0, lsl #18
    6988:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
    698c:	04110000 	ldreq	r0, [r1], #-0
    6990:	000000d7 	ldrdeq	r0, [r0], -r7
    6994:	169d0127 	ldrne	r0, [sp], r7, lsr #2
    6998:	43010000 	movwmi	r0, #4096	; 0x1000
    699c:	3a011305 	bcc	4b5b8 <_Min_Heap_Size+0x4adb8>
    69a0:	00000002 	andeq	r0, r0, r2
    69a4:	00000000 	andeq	r0, r0, r0
    69a8:	12000000 	andne	r0, r0, #0
    69ac:	01000047 	tsteq	r0, r7, asr #32
    69b0:	00003e88 	andeq	r3, r0, r8, lsl #29
    69b4:	00149116 	andseq	r9, r4, r6, lsl r1
    69b8:	05430100 	strbeq	r0, [r3, #-256]	; 0xffffff00
    69bc:	0007963b 	andeq	r9, r7, fp, lsr r6
    69c0:	00474200 	subeq	r4, r7, r0, lsl #4
    69c4:	00473200 	subeq	r3, r7, r0, lsl #4
    69c8:	10e21600 	rscne	r1, r2, r0, lsl #12
    69cc:	43010000 	movwmi	r0, #4096	; 0x1000
    69d0:	06824b05 	streq	r4, [r2], r5, lsl #22
    69d4:	47b80000 	ldrmi	r0, [r8, r0]!
    69d8:	47ae0000 	strmi	r0, [lr, r0]!
    69dc:	62160000 	andsvs	r0, r6, #0
    69e0:	01000027 	tsteq	r0, r7, lsr #32
    69e4:	b05b0543 	subslt	r0, fp, r3, asr #10
    69e8:	07000000 	streq	r0, [r0, -r0]
    69ec:	fd000048 	stc2	0, cr0, [r0, #-288]	; 0xfffffee0
    69f0:	23000047 	movwcs	r0, #71	; 0x47
    69f4:	00000000 	andeq	r0, r0, r0
    69f8:	0000101f 	andeq	r1, r0, pc, lsl r0
    69fc:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    6a00:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    6a04:	49012800 	stmdbmi	r1, {fp, sp}
    6a08:	01000015 	tsteq	r0, r5, lsl r0
    6a0c:	0113051c 	tsteq	r3, ip, lsl r5
    6a10:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6a1c:	01007d02 	tsteq	r0, r2, lsl #26
    6a20:	00003ee7 	andeq	r3, r0, r7, ror #29
    6a24:	00149116 	andseq	r9, r4, r6, lsl r1
    6a28:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    6a2c:	0007963c 	andeq	r9, r7, ip, lsr r6
    6a30:	00485c00 	subeq	r5, r8, r0, lsl #24
    6a34:	00484c00 	subeq	r4, r8, r0, lsl #24
    6a38:	10e21600 	rscne	r1, r2, r0, lsl #12
    6a3c:	1c010000 	stcne	0, cr0, [r1], {-0}
    6a40:	067c5205 	ldrbteq	r5, [ip], -r5, lsl #4
    6a44:	48d00000 	ldmmi	r0, {}^	; <UNPREDICTABLE>
    6a48:	48c80000 	stmiami	r8, {}^	; <UNPREDICTABLE>
    6a4c:	62160000 	andsvs	r0, r6, #0
    6a50:	01000027 	tsteq	r0, r7, lsr #32
    6a54:	b062051c 	rsblt	r0, r2, ip, lsl r5
    6a58:	10000000 	andne	r0, r0, r0
    6a5c:	08000049 	stmdaeq	r0, {r0, r3, r6}
    6a60:	00000049 	andeq	r0, r0, r9, asr #32
    6a64:	15380127 	ldrne	r0, [r8, #-295]!	; 0xfffffed9
    6a68:	c5010000 	strgt	r0, [r1, #-0]
    6a6c:	3a011304 	bcc	4b684 <_Min_Heap_Size+0x4ae84>
    6a70:	00000002 	andeq	r0, r0, r2
    6a74:	00000000 	andeq	r0, r0, r0
    6a78:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    6a7c:	01000049 	tsteq	r0, r9, asr #32
    6a80:	00003fcc 	andeq	r3, r0, ip, asr #31
    6a84:	00149116 	andseq	r9, r4, r6, lsl r1
    6a88:	04c50100 	strbeq	r0, [r5], #256	; 0x100
    6a8c:	00079638 	andeq	r9, r7, r8, lsr r6
    6a90:	00499c00 	subeq	r9, r9, r0, lsl #24
    6a94:	00498c00 	subeq	r8, r9, r0, lsl #24
    6a98:	10e21600 	rscne	r1, r2, r0, lsl #12
    6a9c:	c5010000 	strgt	r0, [r1, #-0]
    6aa0:	06824804 	streq	r4, [r2], r4, lsl #16
    6aa4:	4a0d0000 	bmi	346aac <_Min_Heap_Size+0x3462ac>
    6aa8:	49ff0000 	ldmibmi	pc!, {}^	; <UNPREDICTABLE>
    6aac:	62160000 	andsvs	r0, r6, #0
    6ab0:	01000027 	tsteq	r0, r7, lsr #32
    6ab4:	b05804c5 	subslt	r0, r8, r5, asr #9
    6ab8:	72000000 	andvc	r0, r0, #0
    6abc:	6800004a 	stmdavs	r0, {r1, r3, r6}
    6ac0:	1600004a 	strne	r0, [r0], -sl, asr #32
    6ac4:	000013c6 	andeq	r1, r0, r6, asr #7
    6ac8:	6704c501 	strvs	ip, [r4, -r1, lsl #10]
    6acc:	000000c6 	andeq	r0, r0, r6, asr #1
    6ad0:	00004abb 			; <UNDEFINED> instruction: 0x00004abb
    6ad4:	00004ab7 			; <UNDEFINED> instruction: 0x00004ab7
    6ad8:	00110e17 	andseq	r0, r1, r7, lsl lr
    6adc:	04c70100 	strbeq	r0, [r7], #256	; 0x100
    6ae0:	0006820d 	andeq	r8, r6, sp, lsl #4
    6ae4:	004adb00 	subeq	sp, sl, r0, lsl #22
    6ae8:	004ad900 	subeq	sp, sl, r0, lsl #18
    6aec:	11781700 	cmnne	r8, r0, lsl #14
    6af0:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    6af4:	08cf0d04 	stmiaeq	pc, {r2, r8, sl, fp}^	; <UNPREDICTABLE>
    6af8:	4af40000 	bmi	ffd06b00 <_estack+0xdfd058c0>
    6afc:	4aee0000 	bmi	ffb86b04 <_estack+0xdfb858c4>
    6b00:	db170000 	blle	5c6b08 <_Min_Heap_Size+0x5c6308>
    6b04:	01000014 	tsteq	r0, r4, lsl r0
    6b08:	c60c04c9 	strgt	r0, [ip], -r9, asr #9
    6b0c:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    6b10:	1f00004b 	svcne	0x0000004b
    6b14:	1a00004b 	bne	6c48 <_Min_Heap_Size+0x6448>
    6b18:	00000000 	andeq	r0, r0, r0
    6b1c:	000045f2 	strdeq	r4, [r0], -r2
    6b20:	00000023 	andeq	r0, r0, r3, lsr #32
    6b24:	00107800 	andseq	r7, r0, r0, lsl #16
    6b28:	50011900 	andpl	r1, r1, r0, lsl #18
    6b2c:	19007402 	stmdbne	r0, {r1, sl, ip, sp, lr}
    6b30:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    6b34:	52011920 	andpl	r1, r1, #32, 18	; 0x80000
    6b38:	01193001 	tsteq	r9, r1
    6b3c:	00770253 	rsbseq	r0, r7, r3, asr r2
    6b40:	007d0219 	rsbseq	r0, sp, r9, lsl r2
    6b44:	00007602 	andeq	r7, r0, r2, lsl #12
    6b48:	20012700 	andcs	r2, r1, r0, lsl #14
    6b4c:	01000001 	tsteq	r0, r1
    6b50:	0113046f 	tsteq	r3, pc, ror #8
    6b54:	0000023a 	andeq	r0, r0, sl, lsr r2
    6b58:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
    6b5c:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
    6b60:	00004b6b 	andeq	r4, r0, fp, ror #22
    6b64:	0040dd01 	subeq	sp, r0, r1, lsl #26
    6b68:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    6b6c:	6f010000 	svcvs	0x00010000
    6b70:	07963904 	ldreq	r3, [r6, r4, lsl #18]
    6b74:	4bbf0000 	blmi	fefc6b7c <_estack+0xdefc593c>
    6b78:	4baf0000 	blmi	febc6b80 <_estack+0xdebc5940>
    6b7c:	e2160000 	ands	r0, r6, #0
    6b80:	01000010 	tsteq	r0, r0, lsl r0
    6b84:	7c4f046f 	cfstrdvc	mvd0, [pc], {111}	; 0x6f
    6b88:	34000006 	strcc	r0, [r0], #-6
    6b8c:	2200004c 	andcs	r0, r0, #76	; 0x4c
    6b90:	1600004c 	strne	r0, [r0], -ip, asr #32
    6b94:	00002762 	andeq	r2, r0, r2, ror #14
    6b98:	5f046f01 	svcpl	0x00046f01
    6b9c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6ba0:	00004cb2 			; <UNDEFINED> instruction: 0x00004cb2
    6ba4:	00004ca8 	andeq	r4, r0, r8, lsr #25
    6ba8:	0013c616 	andseq	ip, r3, r6, lsl r6
    6bac:	046f0100 	strbteq	r0, [pc], #-256	; 6bb4 <_Min_Heap_Size+0x63b4>
    6bb0:	0000c66e 	andeq	ip, r0, lr, ror #12
    6bb4:	004cfb00 	subeq	pc, ip, r0, lsl #22
    6bb8:	004cf700 	subeq	pc, ip, r0, lsl #14
    6bbc:	110e1700 	tstne	lr, r0, lsl #14
    6bc0:	71010000 	mrsvc	r0, (UNDEF: 1)
    6bc4:	067c1304 	ldrbteq	r1, [ip], -r4, lsl #6
    6bc8:	4d210000 	stcmi	0, cr0, [r1, #-0]
    6bcc:	4d190000 	ldcmi	0, cr0, [r9, #-0]
    6bd0:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    6bd4:	01000011 	tsteq	r0, r1, lsl r0
    6bd8:	64130472 	ldrvs	r0, [r3], #-1138	; 0xfffffb8e
    6bdc:	5f000009 	svcpl	0x00000009
    6be0:	5700004d 	strpl	r0, [r0, -sp, asr #32]
    6be4:	1700004d 	strne	r0, [r0, -sp, asr #32]
    6be8:	000014db 	ldrdeq	r1, [r0], -fp
    6bec:	0c047301 	stceq	3, cr7, [r4], {1}
    6bf0:	000000c6 	andeq	r0, r0, r6, asr #1
    6bf4:	00004da3 	andeq	r4, r0, r3, lsr #27
    6bf8:	00004d95 	muleq	r0, r5, sp
    6bfc:	000c901a 	andeq	r9, ip, sl, lsl r0
    6c00:	0045f208 	subeq	pc, r5, r8, lsl #4
    6c04:	0ce61800 	stcleq	8, cr1, [r6]
    6c08:	10780800 	rsbsne	r0, r8, r0, lsl #16
    6c0c:	40b40000 	adcsmi	r0, r4, r0
    6c10:	01190000 	tsteq	r9, r0
    6c14:	00740250 	rsbseq	r0, r4, r0, asr r2
    6c18:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
    6c1c:	01198008 	tsteq	r9, r8
    6c20:	19300152 	ldmdbne	r0!, {r1, r4, r6, r8}
    6c24:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6c28:	7d021900 	vstrvc.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    6c2c:	00760200 	rsbseq	r0, r6, r0, lsl #4
    6c30:	0d0c2300 	stceq	3, cr2, [ip, #-0]
    6c34:	10780800 	rsbsne	r0, r8, r0, lsl #16
    6c38:	01190000 	tsteq	r9, r0
    6c3c:	00740250 	rsbseq	r0, r4, r0, asr r2
    6c40:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
    6c44:	01194008 	tsteq	r9, r8
    6c48:	19300152 	ldmdbne	r0!, {r1, r4, r6, r8}
    6c4c:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    6c50:	7d021900 	vstrvc.16	s2, [r2, #-0]	; <UNPREDICTABLE>
    6c54:	00760200 	rsbseq	r0, r6, r0, lsl #4
    6c58:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    6c5c:	00000ac5 	andeq	r0, r0, r5, asr #21
    6c60:	0d02da01 	vstreq	s26, [r2, #-4]
    6c64:	00000001 	andeq	r0, r0, r1
    6c68:	00000000 	andeq	r0, r0, r0
    6c6c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    6c70:	00410801 	subeq	r0, r1, r1, lsl #16
    6c74:	14912900 	ldrne	r2, [r1], #2304	; 0x900
    6c78:	da010000 	ble	46c80 <_Min_Heap_Size+0x46480>
    6c7c:	07963402 	ldreq	r3, [r6, r2, lsl #8]
    6c80:	50010000 	andpl	r0, r1, r0
    6c84:	96012a00 	strls	r2, [r1], -r0, lsl #20
    6c88:	0100000a 	tsteq	r0, sl
    6c8c:	010d02cb 	smlabteq	sp, fp, r2, r0
	...
    6c98:	01007d02 	tsteq	r0, r2, lsl #26
    6c9c:	00004133 	andeq	r4, r0, r3, lsr r1
    6ca0:	00149129 	andseq	r9, r4, r9, lsr #2
    6ca4:	02cb0100 	sbceq	r0, fp, #0, 2
    6ca8:	00079632 	andeq	r9, r7, r2, lsr r6
    6cac:	00500100 	subseq	r0, r0, r0, lsl #2
    6cb0:	11be0127 			; <UNDEFINED> instruction: 0x11be0127
    6cb4:	9d010000 	stcls	0, cr0, [r1, #-0]
    6cb8:	3a011302 	bcc	4b8c8 <_Min_Heap_Size+0x4b0c8>
    6cbc:	00000002 	andeq	r0, r0, r2
    6cc0:	00000000 	andeq	r0, r0, r0
    6cc4:	fb000000 	blx	6cce <_Min_Heap_Size+0x64ce>
    6cc8:	0100004d 	tsteq	r0, sp, asr #32
    6ccc:	00004197 	muleq	r0, r7, r1
    6cd0:	00149116 	andseq	r9, r4, r6, lsl r1
    6cd4:	029d0100 	addseq	r0, sp, #0, 2
    6cd8:	00079637 	andeq	r9, r7, r7, lsr r6
    6cdc:	004e2f00 	subeq	r2, lr, r0, lsl #30
    6ce0:	004e2700 	subeq	r2, lr, r0, lsl #14
    6ce4:	00001800 	andeq	r1, r0, r0, lsl #16
    6ce8:	45ab0000 	strmi	r0, [fp, #0]!
    6cec:	41860000 	orrmi	r0, r6, r0
    6cf0:	01190000 	tsteq	r9, r0
    6cf4:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    6cf8:	1908002c 	stmdbne	r8, {r2, r3, r5}
    6cfc:	0a035101 	beq	db108 <_Min_Heap_Size+0xda908>
    6d00:	230002a6 	movwcs	r0, #678	; 0x2a6
    6d04:	00000000 	andeq	r0, r0, r0
    6d08:	000040dd 	ldrdeq	r4, [r0], -sp
    6d0c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6d10:	00000074 	andeq	r0, r0, r4, ror r0
    6d14:	139a0127 	orrsne	r0, sl, #-1073741815	; 0xc0000009
    6d18:	4f010000 	svcmi	0x00010000
    6d1c:	3a011302 	bcc	4b92c <_Min_Heap_Size+0x4b12c>
    6d20:	00000002 	andeq	r0, r0, r2
    6d24:	00000000 	andeq	r0, r0, r0
    6d28:	66000000 	strvs	r0, [r0], -r0
    6d2c:	0100004e 	tsteq	r0, lr, asr #32
    6d30:	000042b1 			; <UNDEFINED> instruction: 0x000042b1
    6d34:	00149116 	andseq	r9, r4, r6, lsl r1
    6d38:	024f0100 	subeq	r0, pc, #0, 2
    6d3c:	0007963f 	andeq	r9, r7, pc, lsr r6
    6d40:	004e9a00 	subeq	r9, lr, r0, lsl #20
    6d44:	004e9200 	subeq	r9, lr, r0, lsl #4
    6d48:	1c661600 	stclne	6, cr1, [r6], #-0
    6d4c:	4f010000 	svcmi	0x00010000
    6d50:	009f4e02 	addseq	r4, pc, r2, lsl #28
    6d54:	4ed70000 	cdpmi	0, 13, cr0, cr7, cr0, {0}
    6d58:	4ed10000 	cdpmi	0, 13, cr0, cr1, cr0, {0}
    6d5c:	ce160000 	cdpgt	0, 1, cr0, cr6, cr0, {0}
    6d60:	01000011 	tsteq	r0, r1, lsl r0
    6d64:	c660024f 	strbtgt	r0, [r0], -pc, asr #4
    6d68:	0d000000 	stceq	0, cr0, [r0, #-0]
    6d6c:	0300004f 	movweq	r0, #79	; 0x4f
    6d70:	1800004f 	stmdane	r0, {r0, r1, r2, r3, r6}
    6d74:	00000000 	andeq	r0, r0, r0
    6d78:	000045ab 	andeq	r4, r0, fp, lsr #11
    6d7c:	00004214 	andeq	r4, r0, r4, lsl r2
    6d80:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    6d84:	002cc803 	eoreq	ip, ip, r3, lsl #16
    6d88:	51011908 	tstpl	r1, r8, lsl #18
    6d8c:	02580a03 	subseq	r0, r8, #12288	; 0x3000
    6d90:	00001800 	andeq	r1, r0, r0, lsl #16
    6d94:	069f0000 	ldreq	r0, [pc], r0
    6d98:	42280000 	eormi	r0, r8, #0
    6d9c:	01190000 	tsteq	r9, r0
    6da0:	00740250 	rsbseq	r0, r4, r0, asr r2
    6da4:	00001800 	andeq	r1, r0, r0, lsl #16
    6da8:	45ab0000 	strmi	r0, [fp, #0]!
    6dac:	42460000 	submi	r0, r6, #0
    6db0:	01190000 	tsteq	r9, r0
    6db4:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    6db8:	1908002c 	stmdbne	r8, {r2, r3, r5}
    6dbc:	0a035101 	beq	db1c8 <_Min_Heap_Size+0xda9c8>
    6dc0:	1800025b 	stmdane	r0, {r0, r1, r3, r4, r6, r9}
    6dc4:	00000000 	andeq	r0, r0, r0
    6dc8:	000045ab 	andeq	r4, r0, fp, lsr #11
    6dcc:	00004264 	andeq	r4, r0, r4, ror #4
    6dd0:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    6dd4:	002cc803 	eoreq	ip, ip, r3, lsl #16
    6dd8:	51011908 	tstpl	r1, r8, lsl #18
    6ddc:	025c0a03 	subseq	r0, ip, #12288	; 0x3000
    6de0:	00001800 	andeq	r1, r0, r0, lsl #16
    6de4:	45ab0000 	strmi	r0, [fp, #0]!
    6de8:	42820000 	addmi	r0, r2, #0
    6dec:	01190000 	tsteq	r9, r0
    6df0:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    6df4:	1908002c 	stmdbne	r8, {r2, r3, r5}
    6df8:	0a035101 	beq	db204 <_Min_Heap_Size+0xdaa04>
    6dfc:	1800025d 	stmdane	r0, {r0, r2, r3, r4, r6, r9}
    6e00:	00000000 	andeq	r0, r0, r0
    6e04:	000045ab 	andeq	r4, r0, fp, lsr #11
    6e08:	000042a0 	andeq	r4, r0, r0, lsr #5
    6e0c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    6e10:	002cc803 	eoreq	ip, ip, r3, lsl #16
    6e14:	51011908 	tstpl	r1, r8, lsl #18
    6e18:	025e0a03 	subseq	r0, lr, #12288	; 0x3000
    6e1c:	00002300 	andeq	r2, r0, r0, lsl #6
    6e20:	41080000 	mrsmi	r0, (UNDEF: 8)
    6e24:	01190000 	tsteq	r9, r0
    6e28:	00740250 	rsbseq	r0, r4, r0, asr r2
    6e2c:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6e30:	000016b1 			; <UNDEFINED> instruction: 0x000016b1
    6e34:	1301fd01 	movwne	pc, #7425	; 0x1d01	; <UNPREDICTABLE>
    6e38:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6e44:	004f4f00 	subeq	r4, pc, r0, lsl #30
    6e48:	43980100 	orrsmi	r0, r8, #0, 2
    6e4c:	91160000 	tstls	r6, r0
    6e50:	01000014 	tsteq	r0, r4, lsl r0
    6e54:	963401fd 			; <UNDEFINED> instruction: 0x963401fd
    6e58:	83000007 	movwhi	r0, #7
    6e5c:	7b00004f 	blvc	6fa0 <_Min_Heap_Size+0x67a0>
    6e60:	1600004f 	strne	r0, [r0], -pc, asr #32
    6e64:	000011db 	ldrdeq	r1, [r0], -fp
    6e68:	4401fd01 	strmi	pc, [r1], #-3329	; 0xfffff2ff
    6e6c:	000000c6 	andeq	r0, r0, r6, asr #1
    6e70:	00004fc4 	andeq	r4, r0, r4, asr #31
    6e74:	00004fba 			; <UNDEFINED> instruction: 0x00004fba
    6e78:	00000018 	andeq	r0, r0, r8, lsl r0
    6e7c:	0045ab00 	subeq	sl, r5, r0, lsl #22
    6e80:	00431900 	subeq	r1, r3, r0, lsl #18
    6e84:	50011900 	andpl	r1, r1, r0, lsl #18
    6e88:	2cc80305 	stclcs	3, cr0, [r8], {5}
    6e8c:	01190800 	tsteq	r9, r0, lsl #16
    6e90:	060a0351 			; <UNDEFINED> instruction: 0x060a0351
    6e94:	00180002 	andseq	r0, r8, r2
    6e98:	9f000000 	svcls	0x00000000
    6e9c:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    6ea0:	19000043 	stmdbne	r0, {r0, r1, r6}
    6ea4:	74025001 	strvc	r5, [r2], #-1
    6ea8:	00180000 	andseq	r0, r8, r0
    6eac:	ab000000 	blge	6eb4 <_Min_Heap_Size+0x66b4>
    6eb0:	4b000045 	blmi	6fcc <_Min_Heap_Size+0x67cc>
    6eb4:	19000043 	stmdbne	r0, {r0, r1, r6}
    6eb8:	03055001 	movweq	r5, #20481	; 0x5001
    6ebc:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    6ec0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    6ec4:	0002090a 	andeq	r0, r2, sl, lsl #18
    6ec8:	00000018 	andeq	r0, r0, r8, lsl r0
    6ecc:	0045ab00 	subeq	sl, r5, r0, lsl #22
    6ed0:	00436900 	subeq	r6, r3, r0, lsl #18
    6ed4:	50011900 	andpl	r1, r1, r0, lsl #18
    6ed8:	2cc80305 	stclcs	3, cr0, [r8], {5}
    6edc:	01190800 	tsteq	r9, r0, lsl #16
    6ee0:	0a0a0351 	beq	287c2c <_Min_Heap_Size+0x28742c>
    6ee4:	00180002 	andseq	r0, r8, r2
    6ee8:	ab000000 	blge	6ef0 <_Min_Heap_Size+0x66f0>
    6eec:	87000045 	strhi	r0, [r0, -r5, asr #32]
    6ef0:	19000043 	stmdbne	r0, {r0, r1, r6}
    6ef4:	03055001 	movweq	r5, #20481	; 0x5001
    6ef8:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    6efc:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    6f00:	00020b0a 	andeq	r0, r2, sl, lsl #22
    6f04:	00000023 	andeq	r0, r0, r3, lsr #32
    6f08:	00410800 	subeq	r0, r1, r0, lsl #16
    6f0c:	50011900 	andpl	r1, r1, r0, lsl #18
    6f10:	00007402 	andeq	r7, r0, r2, lsl #8
    6f14:	aa012700 	bge	50b1c <_Min_Heap_Size+0x5031c>
    6f18:	01000011 	tsteq	r0, r1, lsl r0
    6f1c:	011301b3 			; <UNDEFINED> instruction: 0x011301b3
    6f20:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6f2c:	00005006 	andeq	r5, r0, r6
    6f30:	00444c01 	subeq	r4, r4, r1, lsl #24
    6f34:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    6f38:	b3010000 	movwlt	r0, #4096	; 0x1000
    6f3c:	07963b01 	ldreq	r3, [r6, r1, lsl #22]
    6f40:	503a0000 	eorspl	r0, sl, r0
    6f44:	50320000 	eorspl	r0, r2, r0
    6f48:	00180000 	andseq	r0, r8, r0
    6f4c:	ab000000 	blge	6f54 <_Min_Heap_Size+0x6754>
    6f50:	eb000045 	bl	706c <_Min_Heap_Size+0x686c>
    6f54:	19000043 	stmdbne	r0, {r0, r1, r6}
    6f58:	03055001 	movweq	r5, #20481	; 0x5001
    6f5c:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    6f60:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    6f64:	0001bc0a 	andeq	fp, r1, sl, lsl #24
    6f68:	00000018 	andeq	r0, r0, r8, lsl r0
    6f6c:	00069f00 	andeq	r9, r6, r0, lsl #30
    6f70:	0043ff00 	subeq	pc, r3, r0, lsl #30
    6f74:	50011900 	andpl	r1, r1, r0, lsl #18
    6f78:	00007402 	andeq	r7, r0, r2, lsl #8
    6f7c:	00000018 	andeq	r0, r0, r8, lsl r0
    6f80:	0045ab00 	subeq	sl, r5, r0, lsl #22
    6f84:	00441d00 	subeq	r1, r4, r0, lsl #26
    6f88:	50011900 	andpl	r1, r1, r0, lsl #18
    6f8c:	2cc80305 	stclcs	3, cr0, [r8], {5}
    6f90:	01190800 	tsteq	r9, r0, lsl #16
    6f94:	bd0a0351 	stclt	3, cr0, [sl, #-324]	; 0xfffffebc
    6f98:	00180001 	andseq	r0, r8, r1
    6f9c:	ab000000 	blge	6fa4 <_Min_Heap_Size+0x67a4>
    6fa0:	3b000045 	blcc	70bc <_Min_Heap_Size+0x68bc>
    6fa4:	19000044 	stmdbne	r0, {r2, r6}
    6fa8:	03055001 	movweq	r5, #20481	; 0x5001
    6fac:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    6fb0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    6fb4:	0001be0a 	andeq	fp, r1, sl, lsl #28
    6fb8:	00000023 	andeq	r0, r0, r3, lsr #32
    6fbc:	00410800 	subeq	r0, r1, r0, lsl #16
    6fc0:	50011900 	andpl	r1, r1, r0, lsl #18
    6fc4:	00007402 	andeq	r7, r0, r2, lsl #8
    6fc8:	d2012700 	andle	r2, r1, #0, 14
    6fcc:	0100000b 	tsteq	r0, fp
    6fd0:	01130165 	tsteq	r3, r5, ror #2
    6fd4:	0000023a 	andeq	r0, r0, sl, lsr r2
    6fd8:	08000b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp}
    6fdc:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
    6fe0:	00005071 	andeq	r5, r0, r1, ror r0
    6fe4:	00453c01 	subeq	r3, r5, r1, lsl #24
    6fe8:	14911600 	ldrne	r1, [r1], #1536	; 0x600
    6fec:	65010000 	strvs	r0, [r1, #-0]
    6ff0:	07963501 	ldreq	r3, [r6, r1, lsl #10]
    6ff4:	50a90000 	adcpl	r0, r9, r0
    6ff8:	509d0000 	addspl	r0, sp, r0
    6ffc:	6e180000 	cdpvs	0, 1, cr0, cr8, cr0, {0}
    7000:	ab08000b 	blge	207034 <_Min_Heap_Size+0x206834>
    7004:	9f000045 	svcls	0x00000045
    7008:	19000044 	stmdbne	r0, {r2, r6}
    700c:	03055001 	movweq	r5, #20481	; 0x5001
    7010:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    7014:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7018:	0001730a 	andeq	r7, r1, sl, lsl #6
    701c:	000bb618 	andeq	fp, fp, r8, lsl r6
    7020:	00069f08 	andeq	r9, r6, r8, lsl #30
    7024:	0044b300 	subeq	fp, r4, r0, lsl #6
    7028:	50011900 	andpl	r1, r1, r0, lsl #18
    702c:	00007402 	andeq	r7, r0, r2, lsl #8
    7030:	000bf018 	andeq	pc, fp, r8, lsl r0	; <UNPREDICTABLE>
    7034:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7038:	0044d100 	subeq	sp, r4, r0, lsl #2
    703c:	50011900 	andpl	r1, r1, r0, lsl #18
    7040:	2cc80305 	stclcs	3, cr0, [r8], {5}
    7044:	01190800 	tsteq	r9, r0, lsl #16
    7048:	740a0351 	strvc	r0, [sl], #-849	; 0xfffffcaf
    704c:	2c180001 	ldccs	0, cr0, [r8], {1}
    7050:	ab08000c 	blge	207088 <_Min_Heap_Size+0x206888>
    7054:	ef000045 	svc	0x00000045
    7058:	19000044 	stmdbne	r0, {r2, r6}
    705c:	03055001 	movweq	r5, #20481	; 0x5001
    7060:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    7064:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7068:	0001780a 	andeq	r7, r1, sl, lsl #16
    706c:	000c3818 	andeq	r3, ip, r8, lsl r8
    7070:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7074:	00450d00 	subeq	r0, r5, r0, lsl #26
    7078:	50011900 	andpl	r1, r1, r0, lsl #18
    707c:	2cc80305 	stclcs	3, cr0, [r8], {5}
    7080:	01190800 	tsteq	r9, r0, lsl #16
    7084:	7a0a0351 	bvc	287dd0 <_Min_Heap_Size+0x2875d0>
    7088:	44180001 	ldrmi	r0, [r8], #-1
    708c:	ab08000c 	blge	2070c4 <_Min_Heap_Size+0x2068c4>
    7090:	2b000045 	blcs	71ac <_Min_Heap_Size+0x69ac>
    7094:	19000045 	stmdbne	r0, {r0, r2, r6}
    7098:	03055001 	movweq	r5, #20481	; 0x5001
    709c:	08002cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, sp}
    70a0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    70a4:	00017b0a 	andeq	r7, r1, sl, lsl #22
    70a8:	000c5023 	andeq	r5, ip, r3, lsr #32
    70ac:	00410808 	subeq	r0, r1, r8, lsl #16
    70b0:	50011900 	andpl	r1, r1, r0, lsl #18
    70b4:	00007402 	andeq	r7, r0, r2, lsl #8
    70b8:	12602e00 	rsbne	r2, r0, #0, 28
    70bc:	0f020000 	svceq	0x00020000
    70c0:	c6011f02 	strgt	r1, [r1], -r2, lsl #30
    70c4:	03000000 	movweq	r0, #0
    70c8:	00004577 	andeq	r4, r0, r7, ror r5
    70cc:	001ebb2f 	andseq	fp, lr, pc, lsr #22
    70d0:	020f0200 	andeq	r0, pc, #0, 4
    70d4:	0000c631 	andeq	ip, r0, r1, lsr r6
    70d8:	10dd2f00 	sbcsne	r2, sp, r0, lsl #30
    70dc:	0f020000 	svceq	0x00020000
    70e0:	45774b02 	ldrbmi	r4, [r7, #-2818]!	; 0xfffff4fe
    70e4:	be300000 	cdplt	0, 3, cr0, cr0, cr0, {0}
    70e8:	02000016 	andeq	r0, r0, #22
    70ec:	c60d0211 			; <UNDEFINED> instruction: 0xc60d0211
    70f0:	00000000 	andeq	r0, r0, r0
    70f4:	00d20411 	sbcseq	r0, r2, r1, lsl r4
    70f8:	f12e0000 			; <UNDEFINED> instruction: 0xf12e0000
    70fc:	02000013 	andeq	r0, r0, #19
    7100:	011f01dc 			; <UNDEFINED> instruction: 0x011f01dc
    7104:	000000c6 	andeq	r0, r0, r6, asr #1
    7108:	0045ab03 	subeq	sl, r5, r3, lsl #22
    710c:	10dd2f00 	sbcsne	r2, sp, r0, lsl #30
    7110:	dc020000 	stcle	0, cr0, [r2], {-0}
    7114:	45773b01 	ldrbmi	r3, [r7, #-2817]!	; 0xfffff4ff
    7118:	be300000 	cdplt	0, 3, cr0, cr0, cr0, {0}
    711c:	02000016 	andeq	r0, r0, #22
    7120:	c60e01de 			; <UNDEFINED> instruction: 0xc60e01de
    7124:	00000000 	andeq	r0, r0, r0
    7128:	9b010131 	blls	475f4 <_Min_Heap_Size+0x46df4>
    712c:	9b000009 	blls	7158 <_Min_Heap_Size+0x6958>
    7130:	0a000009 	beq	715c <_Min_Heap_Size+0x695c>
    7134:	310801e6 	smlattcc	r8, r6, r1, r0
    7138:	10030101 	andne	r0, r3, r1, lsl #2
    713c:	10030000 	andne	r0, r3, r0
    7140:	ea0b0000 	b	2c7148 <_Min_Heap_Size+0x2c6948>
    7144:	01310a04 	teqeq	r1, r4, lsl #20
    7148:	00149701 	andseq	r9, r4, r1, lsl #14
    714c:	00149700 	andseq	r9, r4, r0, lsl #14
    7150:	04eb0b00 	strbteq	r0, [fp], #2816	; 0xb00
    7154:	0101320a 	tsteq	r1, sl, lsl #4
    7158:	0000144f 	andeq	r1, r0, pc, asr #8
    715c:	0000144f 	andeq	r1, r0, pc, asr #8
    7160:	40010131 	andmi	r0, r1, r1, lsr r1
    7164:	40000011 	andmi	r0, r0, r1, lsl r0
    7168:	08000011 	stmdaeq	r0, {r0, r4}
    716c:	33130297 	tstcc	r3, #1879048201	; 0x70000009
    7170:	13350101 	teqne	r5, #1073741824	; 0x40000000
    7174:	13350000 	teqne	r5, #0
    7178:	ea0c0000 	b	307180 <_Min_Heap_Size+0x306980>
    717c:	0101310a 	tsteq	r1, sl, lsl #2
    7180:	000012a2 	andeq	r1, r0, r2, lsr #5
    7184:	000012a2 	andeq	r1, r0, r2, lsr #5
    7188:	13029808 	movwne	r9, #10248	; 0x2808
    718c:	61010131 	tstvs	r1, r1, lsr r1
    7190:	61000010 	tstvs	r0, r0, lsl r0
    7194:	08000010 	stmdaeq	r0, {r4}
    7198:	31130299 			; <UNDEFINED> instruction: 0x31130299
    719c:	15f70101 	ldrbne	r0, [r7, #257]!	; 0x101
    71a0:	15f70000 	ldrbne	r0, [r7, #0]!
    71a4:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    71a8:	7f001602 	svcvc	0x00001602
    71ac:	0200000e 	andeq	r0, r0, #14
    71b0:	000ae500 	andeq	lr, sl, r0, lsl #10
    71b4:	19010400 	stmdbne	r1, {sl}
    71b8:	0c000005 	stceq	0, cr0, [r0], {5}
    71bc:	00001828 	andeq	r1, r0, r8, lsr #16
    71c0:	00000822 	andeq	r0, r0, r2, lsr #16
    71c4:	00000320 	andeq	r0, r0, r0, lsr #6
	...
    71d0:	00005356 	andeq	r5, r0, r6, asr r3
    71d4:	0d060102 	stfeqs	f0, [r6, #-8]
    71d8:	03000005 	movweq	r0, #5
    71dc:	00000072 	andeq	r0, r0, r2, ror r0
    71e0:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    71e4:	02000000 	andeq	r0, r0, #0
    71e8:	050b0801 	streq	r0, [fp, #-2049]	; 0xfffff7ff
    71ec:	02020000 	andeq	r0, r2, #0
    71f0:	0005d305 	andeq	sp, r5, r5, lsl #6
    71f4:	069a0300 	ldreq	r0, [sl], r0, lsl #6
    71f8:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    71fc:	00005619 	andeq	r5, r0, r9, lsl r6
    7200:	07020200 	streq	r0, [r2, -r0, lsl #4]
    7204:	00000337 	andeq	r0, r0, r7, lsr r3
    7208:	b2050402 	andlt	r0, r5, #33554432	; 0x2000000
    720c:	03000002 	movweq	r0, #2
    7210:	00000291 	muleq	r0, r1, r2
    7214:	70194f02 	andsvc	r4, r9, r2, lsl #30
    7218:	02000000 	andeq	r0, r0, #0
    721c:	00bf0704 	adcseq	r0, pc, r4, lsl #14
    7220:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    7224:	0002ad05 	andeq	sl, r2, r5, lsl #26
    7228:	14440300 	strbne	r0, [r4], #-768	; 0xfffffd00
    722c:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
    7230:	00008a19 	andeq	r8, r0, r9, lsl sl
    7234:	07080200 	streq	r0, [r8, -r0, lsl #4]
    7238:	000000ba 	strheq	r0, [r0], -sl
    723c:	69050404 	stmdbvs	r5, {r2, sl}
    7240:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    7244:	00c40704 	sbceq	r0, r4, r4, lsl #14
    7248:	74030000 	strvc	r0, [r3], #-0
    724c:	03000000 	movweq	r0, #0
    7250:	00301318 	eorseq	r1, r0, r8, lsl r3
    7254:	9f050000 	svcls	0x00050000
    7258:	03000000 	movweq	r0, #0
    725c:	0000069c 	muleq	r0, ip, r6
    7260:	4a142403 	bmi	510274 <_Min_Heap_Size+0x50fa74>
    7264:	03000000 	movweq	r0, #0
    7268:	00000293 	muleq	r0, r3, r2
    726c:	64143003 	ldrvs	r3, [r4], #-3
    7270:	06000000 	streq	r0, [r0], -r0
    7274:	000000bc 	strheq	r0, [r0], -ip
    7278:	00144603 	andseq	r4, r4, r3, lsl #12
    727c:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
    7280:	0000007e 	andeq	r0, r0, lr, ror r0
    7284:	0000bc07 	andeq	fp, r0, r7, lsl #24
    7288:	0000e900 	andeq	lr, r0, r0, lsl #18
    728c:	00980800 	addseq	r0, r8, r0, lsl #16
    7290:	00010000 	andeq	r0, r1, r0
    7294:	00179009 	andseq	r9, r7, r9
    7298:	11390400 	teqne	r9, r0, lsl #8
    729c:	000000bc 	strheq	r0, [r0], -ip
    72a0:	ab070101 	blge	1c76ac <_Min_Heap_Size+0x1c6eac>
    72a4:	07000000 	streq	r0, [r0, -r0]
    72a8:	08000001 	stmdaeq	r0, {r0}
    72ac:	00000098 	muleq	r0, r8, r0
    72b0:	f705000f 			; <UNDEFINED> instruction: 0xf705000f
    72b4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    72b8:	00001750 	andeq	r1, r0, r0, asr r7
    72bc:	07173b04 	ldreq	r3, [r7, -r4, lsl #22]
    72c0:	01000001 	tsteq	r0, r1
    72c4:	00ab0701 	adceq	r0, fp, r1, lsl #14
    72c8:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    72cc:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    72d0:	07000000 	streq	r0, [r0, -r0]
    72d4:	011a0500 	tsteq	sl, r0, lsl #10
    72d8:	ec090000 	stc	0, cr0, [r9], {-0}
    72dc:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    72e0:	012a173c 			; <UNDEFINED> instruction: 0x012a173c
    72e4:	01010000 	mrseq	r0, (UNDEF: 1)
    72e8:	68051c0a 	stmdavs	r5, {r1, r3, sl, fp, ip}
    72ec:	01b60901 			; <UNDEFINED> instruction: 0x01b60901
    72f0:	410b0000 	mrsmi	r0, (UNDEF: 11)
    72f4:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    72f8:	c811016a 	ldmdagt	r1, {r1, r3, r5, r6, r8}
    72fc:	02000000 	andeq	r0, r0, #0
    7300:	180c0023 	stmdane	ip, {r0, r1, r5}
    7304:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    7308:	c811016b 	ldmdagt	r1, {r0, r1, r3, r5, r6, r8}
    730c:	02000000 	andeq	r0, r0, #0
    7310:	150c0423 	strne	r0, [ip, #-1059]	; 0xfffffbdd
    7314:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    7318:	c811016c 	ldmdagt	r1, {r2, r3, r5, r6, r8}
    731c:	02000000 	andeq	r0, r0, #0
    7320:	530b0823 	movwpl	r0, #47139	; 0xb823
    7324:	6d050052 	stcvs	0, cr0, [r5, #-328]	; 0xfffffeb8
    7328:	00c81101 	sbceq	r1, r8, r1, lsl #2
    732c:	23020000 	movwcs	r0, #8192	; 0x2000
    7330:	52430b0c 	subpl	r0, r3, #12, 22	; 0x3000
    7334:	016e0500 	cmneq	lr, r0, lsl #10
    7338:	0000c811 	andeq	ip, r0, r1, lsl r8
    733c:	10230200 	eorne	r0, r3, r0, lsl #4
    7340:	0016fa0c 	andseq	pc, r6, ip, lsl #20
    7344:	016f0500 	cmneq	pc, r0, lsl #10
    7348:	0000c811 	andeq	ip, r0, r1, lsl r8
    734c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    7350:	00172c0c 	andseq	r2, r7, ip, lsl #24
    7354:	01700500 	cmneq	r0, r0, lsl #10
    7358:	0000c811 	andeq	ip, r0, r1, lsl r8
    735c:	18230200 	stmdane	r3!, {r9}
    7360:	17000d00 	strne	r0, [r0, -r0, lsl #26]
    7364:	71050000 	mrsvc	r0, (UNDEF: 5)
    7368:	013d0301 	teqeq	sp, r1, lsl #6
    736c:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    7370:	0901ae05 	stmdbeq	r1, {r0, r2, r9, sl, fp, sp, pc}
    7374:	0000025e 	andeq	r0, r0, lr, asr r2
    7378:	000f510c 	andeq	r5, pc, ip, lsl #2
    737c:	01b00500 	lslseq	r0, r0, #10
    7380:	0000c811 	andeq	ip, r0, r1, lsl r8
    7384:	00230200 	eoreq	r0, r3, r0, lsl #4
    7388:	000e630c 	andeq	r6, lr, ip, lsl #6
    738c:	01b10500 			; <UNDEFINED> instruction: 0x01b10500
    7390:	0000c811 	andeq	ip, r0, r1, lsl r8
    7394:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7398:	000ce10c 	andeq	lr, ip, ip, lsl #2
    739c:	01b20500 			; <UNDEFINED> instruction: 0x01b20500
    73a0:	0000c811 	andeq	ip, r0, r1, lsl r8
    73a4:	08230200 	stmdaeq	r3!, {r9}
    73a8:	000d2b0c 	andeq	r2, sp, ip, lsl #22
    73ac:	01b30500 			; <UNDEFINED> instruction: 0x01b30500
    73b0:	0000c811 	andeq	ip, r0, r1, lsl r8
    73b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    73b8:	5244490b 	subpl	r4, r4, #180224	; 0x2c000
    73bc:	01b40500 			; <UNDEFINED> instruction: 0x01b40500
    73c0:	0000c811 	andeq	ip, r0, r1, lsl r8
    73c4:	10230200 	eorne	r0, r3, r0, lsl #4
    73c8:	52444f0b 	subpl	r4, r4, #11, 30	; 0x2c
    73cc:	01b50500 			; <UNDEFINED> instruction: 0x01b50500
    73d0:	0000c811 	andeq	ip, r0, r1, lsl r8
    73d4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    73d8:	000f040c 	andeq	r0, pc, ip, lsl #8
    73dc:	01b60500 			; <UNDEFINED> instruction: 0x01b60500
    73e0:	0000c811 	andeq	ip, r0, r1, lsl r8
    73e4:	18230200 	stmdane	r3!, {r9}
    73e8:	000ccf0c 	andeq	ip, ip, ip, lsl #30
    73ec:	01b70500 			; <UNDEFINED> instruction: 0x01b70500
    73f0:	0000c811 	andeq	ip, r0, r1, lsl r8
    73f4:	1c230200 	sfmne	f0, 4, [r3], #-0
    73f8:	5246410b 	subpl	r4, r6, #-1073741822	; 0xc0000002
    73fc:	01b80500 			; <UNDEFINED> instruction: 0x01b80500
    7400:	00026e11 	andeq	r6, r2, r1, lsl lr
    7404:	20230200 	eorcs	r0, r3, r0, lsl #4
    7408:	00c80700 	sbceq	r0, r8, r0, lsl #14
    740c:	026e0000 	rsbeq	r0, lr, #0
    7410:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    7414:	01000000 	mrseq	r0, (UNDEF: 0)
    7418:	025e0600 	subseq	r0, lr, #0, 12
    741c:	090d0000 	stmdbeq	sp, {}	; <UNPREDICTABLE>
    7420:	0500000f 	streq	r0, [r0, #-15]
    7424:	c30301b9 	movwgt	r0, #12729	; 0x31b9
    7428:	0a000001 	beq	7434 <_Min_Heap_Size+0x6c34>
    742c:	01ea0508 	mvneq	r0, r8, lsl #10
    7430:	0002aa09 	andeq	sl, r2, r9, lsl #20
    7434:	52430b00 	subpl	r0, r3, #0, 22
    7438:	01ec0500 	mvneq	r0, r0, lsl #10
    743c:	0000c811 	andeq	ip, r0, r1, lsl r8
    7440:	00230200 	eoreq	r0, r3, r0, lsl #4
    7444:	5253430b 	subspl	r4, r3, #738197504	; 0x2c000000
    7448:	01ed0500 	mvneq	r0, r0, lsl #10
    744c:	0000c811 	andeq	ip, r0, r1, lsl r8
    7450:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7454:	01990d00 	orrseq	r0, r9, r0, lsl #26
    7458:	ee050000 	cdp	0, 0, cr0, cr5, cr0, {0}
    745c:	02800301 	addeq	r0, r0, #67108864	; 0x4000000
    7460:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    7464:	0901f405 	stmdbeq	r1, {r0, r2, sl, ip, sp, lr, pc}
    7468:	000004a3 	andeq	r0, r0, r3, lsr #9
    746c:	0052430b 	subseq	r4, r2, fp, lsl #6
    7470:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    7474:	000000c8 	andeq	r0, r0, r8, asr #1
    7478:	0c002302 	stceq	3, cr2, [r0], {2}
    747c:	00000256 	andeq	r0, r0, r6, asr r2
    7480:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    7484:	000000c8 	andeq	r0, r0, r8, asr #1
    7488:	0c042302 	stceq	3, cr2, [r4], {2}
    748c:	00000259 	andeq	r0, r0, r9, asr r2
    7490:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    7494:	000000c8 	andeq	r0, r0, r8, asr #1
    7498:	0b082302 	bleq	2100a8 <_Min_Heap_Size+0x20f8a8>
    749c:	00524943 	subseq	r4, r2, r3, asr #18
    74a0:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    74a4:	000000c8 	andeq	r0, r0, r8, asr #1
    74a8:	0c0c2302 	stceq	3, cr2, [ip], {2}
    74ac:	00000168 	andeq	r0, r0, r8, ror #2
    74b0:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    74b4:	000000c8 	andeq	r0, r0, r8, asr #1
    74b8:	0c102302 	ldceq	3, cr2, [r0], {2}
    74bc:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    74c0:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    74c4:	000000c8 	andeq	r0, r0, r8, asr #1
    74c8:	0c142302 	ldceq	3, cr2, [r4], {2}
    74cc:	00000374 	andeq	r0, r0, r4, ror r3
    74d0:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    74d4:	000000c8 	andeq	r0, r0, r8, asr #1
    74d8:	0c182302 	ldceq	3, cr2, [r8], {2}
    74dc:	000004a6 	andeq	r0, r0, r6, lsr #9
    74e0:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    74e4:	000000bc 	strheq	r0, [r0], -ip
    74e8:	0c1c2302 	ldceq	3, cr2, [ip], {2}
    74ec:	0000049d 	muleq	r0, sp, r4
    74f0:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    74f4:	000000c8 	andeq	r0, r0, r8, asr #1
    74f8:	0c202302 	stceq	3, cr2, [r0], #-8
    74fc:	000001e8 	andeq	r0, r0, r8, ror #3
    7500:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    7504:	000000c8 	andeq	r0, r0, r8, asr #1
    7508:	0c242302 	stceq	3, cr2, [r4], #-8
    750c:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    7510:	11020005 	tstne	r2, r5
    7514:	000000d9 	ldrdeq	r0, [r0], -r9
    7518:	0c282302 	stceq	3, cr2, [r8], #-8
    751c:	0000080e 	andeq	r0, r0, lr, lsl #16
    7520:	11020105 	tstne	r2, r5, lsl #2
    7524:	000000c8 	andeq	r0, r0, r8, asr #1
    7528:	0c302302 	ldceq	3, cr2, [r0], #-8
    752c:	00000727 	andeq	r0, r0, r7, lsr #14
    7530:	11020205 	tstne	r2, r5, lsl #4
    7534:	000000c8 	andeq	r0, r0, r8, asr #1
    7538:	0c342302 	ldceq	3, cr2, [r4], #-8
    753c:	0000043f 	andeq	r0, r0, pc, lsr r4
    7540:	11020305 	tstne	r2, r5, lsl #6
    7544:	000000c8 	andeq	r0, r0, r8, asr #1
    7548:	0c382302 	ldceq	3, cr2, [r8], #-8
    754c:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    7550:	11020405 	tstne	r2, r5, lsl #8
    7554:	000000bc 	strheq	r0, [r0], -ip
    7558:	0c3c2302 	ldceq	3, cr2, [ip], #-8
    755c:	0000065c 	andeq	r0, r0, ip, asr r6
    7560:	11020505 	tstne	r2, r5, lsl #10
    7564:	000000c8 	andeq	r0, r0, r8, asr #1
    7568:	0c402302 	mcrreq	3, 0, r2, r0, cr2
    756c:	00000622 	andeq	r0, r0, r2, lsr #12
    7570:	11020605 	tstne	r2, r5, lsl #12
    7574:	000000c8 	andeq	r0, r0, r8, asr #1
    7578:	0c442302 	mcrreq	3, 0, r2, r4, cr2
    757c:	000004c4 	andeq	r0, r0, r4, asr #9
    7580:	11020705 	tstne	r2, r5, lsl #14
    7584:	000000d9 	ldrdeq	r0, [r0], -r9
    7588:	0c482302 	mcrreq	3, 0, r2, r8, cr2
    758c:	00000132 	andeq	r0, r0, r2, lsr r1
    7590:	11020805 	tstne	r2, r5, lsl #16
    7594:	000000c8 	andeq	r0, r0, r8, asr #1
    7598:	0c502302 	mrrceq	3, 0, r2, r0, cr2
    759c:	00000479 	andeq	r0, r0, r9, ror r4
    75a0:	11020905 	tstne	r2, r5, lsl #18
    75a4:	000000c8 	andeq	r0, r0, r8, asr #1
    75a8:	0c542302 	mrrceq	3, 0, r2, r4, cr2
    75ac:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    75b0:	11020a05 	tstne	r2, r5, lsl #20
    75b4:	000000c8 	andeq	r0, r0, r8, asr #1
    75b8:	0c582302 	mrrceq	3, 0, r2, r8, cr2
    75bc:	000004ce 	andeq	r0, r0, lr, asr #9
    75c0:	11020b05 	tstne	r2, r5, lsl #22
    75c4:	000000bc 	strheq	r0, [r0], -ip
    75c8:	0c5c2302 	mrrceq	3, 0, r2, ip, cr2
    75cc:	0000001b 	andeq	r0, r0, fp, lsl r0
    75d0:	11020c05 	tstne	r2, r5, lsl #24
    75d4:	000000c8 	andeq	r0, r0, r8, asr #1
    75d8:	0c602302 	stcleq	3, cr2, [r0], #-8
    75dc:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    75e0:	11020d05 	tstne	r2, r5, lsl #26
    75e4:	000000c8 	andeq	r0, r0, r8, asr #1
    75e8:	0c642302 	stcleq	3, cr2, [r4], #-8
    75ec:	000004d8 	ldrdeq	r0, [r0], -r8
    75f0:	11020e05 	tstne	r2, r5, lsl #28
    75f4:	000000d9 	ldrdeq	r0, [r0], -r9
    75f8:	0c682302 	stcleq	3, cr2, [r8], #-8
    75fc:	00000796 	muleq	r0, r6, r7
    7600:	11020f05 	tstne	r2, r5, lsl #30
    7604:	000000c8 	andeq	r0, r0, r8, asr #1
    7608:	0b702302 	bleq	1c10218 <_Min_Heap_Size+0x1c0fa18>
    760c:	00525343 	subseq	r5, r2, r3, asr #6
    7610:	11021005 	tstne	r2, r5
    7614:	000000c8 	andeq	r0, r0, r8, asr #1
    7618:	0c742302 	ldcleq	3, cr2, [r4], #-8
    761c:	000004e2 	andeq	r0, r0, r2, ror #9
    7620:	11021105 	tstne	r2, r5, lsl #2
    7624:	000000d9 	ldrdeq	r0, [r0], -r9
    7628:	0c782302 	ldcleq	3, cr2, [r8], #-8
    762c:	00000765 	andeq	r0, r0, r5, ror #14
    7630:	11021205 	tstne	r2, r5, lsl #4
    7634:	000000c8 	andeq	r0, r0, r8, asr #1
    7638:	01802303 	orreq	r2, r0, r3, lsl #6
    763c:	0003550c 	andeq	r5, r3, ip, lsl #10
    7640:	02130500 	andseq	r0, r3, #0, 10
    7644:	0000c811 	andeq	ip, r0, r1, lsl r8
    7648:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    764c:	bc0d0001 	stclt	0, cr0, [sp], {1}
    7650:	05000001 	streq	r0, [r0, #-1]
    7654:	b7030214 	smladlt	r3, r4, r2, r0
    7658:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    765c:	003c0107 	eorseq	r0, ip, r7, lsl #2
    7660:	b9060000 	stmdblt	r6, {}	; <UNPREDICTABLE>
    7664:	0004cb01 	andeq	ip, r4, r1, lsl #22
    7668:	02e40f00 	rsceq	r0, r4, #0, 30
    766c:	10000000 	andne	r0, r0, r0
    7670:	00544553 	subseq	r4, r4, r3, asr r5
    7674:	56030001 	strpl	r0, [r3], -r1
    7678:	06000010 			; <UNDEFINED> instruction: 0x06000010
    767c:	04b003bc 	ldrteq	r0, [r0], #956	; 0x3bc
    7680:	070e0000 	streq	r0, [lr, -r0]
    7684:	00003c01 	andeq	r3, r0, r1, lsl #24
    7688:	01bf0600 			; <UNDEFINED> instruction: 0x01bf0600
    768c:	000004f2 	strdeq	r0, [r0], -r2
    7690:	0017240f 	andseq	r2, r7, pc, lsl #8
    7694:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
    7698:	01000017 	tsteq	r0, r7, lsl r0
    769c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    76a0:	00000664 	andeq	r0, r0, r4, ror #12
    76a4:	3c01070e 	stccc	7, cr0, [r1], {14}
    76a8:	07000000 	streq	r0, [r0, -r0]
    76ac:	05200127 	streq	r0, [r0, #-295]!	; 0xfffffed9
    76b0:	100f0000 	andne	r0, pc, r0
    76b4:	00000003 	andeq	r0, r0, r3
    76b8:	0006520f 	andeq	r5, r6, pc, lsl #4
    76bc:	760f0100 	strvc	r0, [pc], -r0, lsl #2
    76c0:	02000008 	andeq	r0, r0, #8
    76c4:	0002f10f 	andeq	pc, r2, pc, lsl #2
    76c8:	03000300 	movweq	r0, #768	; 0x300
    76cc:	00001290 	muleq	r0, r0, r2
    76d0:	f9032c07 			; <UNDEFINED> instruction: 0xf9032c07
    76d4:	11000004 	tstne	r0, r4
    76d8:	092d0818 	pusheq	{r3, r4, fp}
    76dc:	00000590 	muleq	r0, r0, r5
    76e0:	00008c12 	andeq	r8, r0, r2, lsl ip
    76e4:	0c2f0800 	stceq	8, cr0, [pc], #-0	; 76ec <_Min_Heap_Size+0x6eec>
    76e8:	000000bc 	strheq	r0, [r0], -ip
    76ec:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    76f0:	000005fa 	strdeq	r0, [r0], -sl
    76f4:	bc0c3208 	sfmlt	f3, 4, [ip], {8}
    76f8:	02000000 	andeq	r0, r0, #0
    76fc:	95120423 	ldrls	r0, [r2, #-1059]	; 0xfffffbdd
    7700:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7704:	00bc0c35 	adcseq	r0, ip, r5, lsr ip
    7708:	23020000 	movwcs	r0, #8192	; 0x2000
    770c:	009a1208 	addseq	r1, sl, r8, lsl #4
    7710:	38080000 	stmdacc	r8, {}	; <UNPREDICTABLE>
    7714:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7718:	0c230200 	sfmeq	f0, 4, [r3], #-0
    771c:	00009f12 	andeq	r9, r0, r2, lsl pc
    7720:	0c3c0800 	ldceq	8, cr0, [ip], #-0
    7724:	000000bc 	strheq	r0, [r0], -ip
    7728:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    772c:	000000a4 	andeq	r0, r0, r4, lsr #1
    7730:	bc0c3f08 	stclt	15, cr3, [ip], {8}
    7734:	02000000 	andeq	r0, r0, #0
    7738:	03001423 	movweq	r1, #1059	; 0x423
    773c:	000007dd 	ldrdeq	r0, [r0], -sp
    7740:	2c024908 			; <UNDEFINED> instruction: 0x2c024908
    7744:	11000005 	tstne	r0, r5
    7748:	09310930 	ldmdbeq	r1!, {r4, r5, r8, fp}
    774c:	0000060f 	andeq	r0, r0, pc, lsl #12
    7750:	00038712 	andeq	r8, r3, r2, lsl r7
    7754:	0c330900 			; <UNDEFINED> instruction: 0x0c330900
    7758:	000000bc 	strheq	r0, [r0], -ip
    775c:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    7760:	000002cd 	andeq	r0, r0, sp, asr #5
    7764:	bc0c3609 	stclt	6, cr3, [ip], {9}
    7768:	02000000 	andeq	r0, r0, #0
    776c:	ed120423 	cfldrs	mvf0, [r2, #-140]	; 0xffffff74
    7770:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7774:	00bc0c39 	adcseq	r0, ip, r9, lsr ip
    7778:	23020000 	movwcs	r0, #8192	; 0x2000
    777c:	02301208 	eorseq	r1, r0, #8, 4	; 0x80000000
    7780:	3c090000 	stccc	0, cr0, [r9], {-0}
    7784:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7788:	0c230200 	sfmeq	f0, 4, [r3], #-0
    778c:	00023912 	andeq	r3, r2, r2, lsl r9
    7790:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
    7794:	000000bc 	strheq	r0, [r0], -ip
    7798:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    779c:	000001fb 	strdeq	r0, [r0], -fp
    77a0:	bc0c4209 	sfmlt	f4, 4, [ip], {9}
    77a4:	02000000 	andeq	r0, r0, #0
    77a8:	50131423 	andspl	r1, r3, r3, lsr #8
    77ac:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
    77b0:	05901645 	ldreq	r1, [r0, #1605]	; 0x645
    77b4:	23020000 	movwcs	r0, #8192	; 0x2000
    77b8:	55030018 	strpl	r0, [r3, #-24]	; 0xffffffe8
    77bc:	09000001 	stmdbeq	r0, {r0}
    77c0:	059c0246 	ldreq	r0, [ip, #582]	; 0x246
    77c4:	14110000 	ldrne	r0, [r1], #-0
    77c8:	70094b09 	andvc	r4, r9, r9, lsl #22
    77cc:	12000006 	andne	r0, r0, #6
    77d0:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    77d4:	bc0c4d09 	stclt	13, cr4, [ip], {9}
    77d8:	02000000 	andeq	r0, r0, #0
    77dc:	ca120023 	bgt	487870 <_Min_Heap_Size+0x487070>
    77e0:	09000008 	stmdbeq	r0, {r3}
    77e4:	00bc0c50 	adcseq	r0, ip, r0, asr ip
    77e8:	23020000 	movwcs	r0, #8192	; 0x2000
    77ec:	03bf1204 			; <UNDEFINED> instruction: 0x03bf1204
    77f0:	53090000 	movwpl	r0, #36864	; 0x9000
    77f4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    77f8:	08230200 	stmdaeq	r3!, {r9}
    77fc:	00006312 	andeq	r6, r0, r2, lsl r3
    7800:	0c560900 	mrrceq	9, 0, r0, r6, cr0	; <UNPREDICTABLE>
    7804:	000000bc 	strheq	r0, [r0], -ip
    7808:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    780c:	000006d8 	ldrdeq	r0, [r0], -r8
    7810:	bc0c5909 			; <UNDEFINED> instruction: 0xbc0c5909
    7814:	02000000 	andeq	r0, r0, #0
    7818:	03001023 	movweq	r1, #35	; 0x23
    781c:	0000048a 	andeq	r0, r0, sl, lsl #9
    7820:	1b025c09 	blne	9e84c <_Min_Heap_Size+0x9e04c>
    7824:	11000006 	tstne	r0, r6
    7828:	092e0a14 	stmdbeq	lr!, {r2, r4, r9, fp}
    782c:	000006d1 	ldrdeq	r0, [r0], -r1
    7830:	6e695013 	mcrvs	0, 3, r5, cr9, cr3, {0}
    7834:	0c300a00 			; <UNDEFINED> instruction: 0x0c300a00
    7838:	000000bc 	strheq	r0, [r0], -ip
    783c:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    7840:	00000642 	andeq	r0, r0, r2, asr #12
    7844:	bc0c330a 	stclt	3, cr3, [ip], {10}
    7848:	02000000 	andeq	r0, r0, #0
    784c:	cd120423 	cfldrsgt	mvf0, [r2, #-140]	; 0xffffff74
    7850:	0a00000d 	beq	788c <_Min_Heap_Size+0x708c>
    7854:	00bc0c36 	adcseq	r0, ip, r6, lsr ip
    7858:	23020000 	movwcs	r0, #8192	; 0x2000
    785c:	09f71208 	ldmibeq	r7!, {r3, r9, ip}^
    7860:	390a0000 	stmdbcc	sl, {}	; <UNPREDICTABLE>
    7864:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7868:	0c230200 	sfmeq	f0, 4, [r3], #-0
    786c:	000d5b12 	andeq	r5, sp, r2, lsl fp
    7870:	0c3c0a00 			; <UNDEFINED> instruction: 0x0c3c0a00
    7874:	000000bc 	strheq	r0, [r0], -ip
    7878:	00102302 	andseq	r2, r0, r2, lsl #6
    787c:	000b1b03 	andeq	r1, fp, r3, lsl #22
    7880:	023e0a00 	eorseq	r0, lr, #0, 20
    7884:	0000067c 	andeq	r0, r0, ip, ror r6
    7888:	0017b809 	andseq	fp, r7, r9, lsl #16
    788c:	11cd0b00 	bicne	r0, sp, r0, lsl #22
    7890:	000000bc 	strheq	r0, [r0], -ip
    7894:	01140101 	tsteq	r4, r1, lsl #2
    7898:	000016c5 	andeq	r1, r0, r5, asr #13
    789c:	0d044b01 	vstreq	d4, [r4, #-4]
    78a0:	00000001 	andeq	r0, r0, r1
    78a4:	00000000 	andeq	r0, r0, r0
    78a8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    78ac:	88011501 	stmdahi	r1, {r0, r8, sl, ip}
    78b0:	01000018 	tsteq	r0, r8, lsl r0
    78b4:	0106043a 	tsteq	r6, sl, lsr r4
	...
    78c0:	000050f6 	strdeq	r5, [r0], -r6
    78c4:	00072801 	andeq	r2, r7, r1, lsl #16
    78c8:	00001600 	andeq	r1, r0, r0, lsl #12
    78cc:	06eb0000 	strbteq	r0, [fp], r0
    78d0:	17000000 	strne	r0, [r0, -r0]
    78d4:	0017fd01 	andseq	pc, r7, r1, lsl #26
    78d8:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
    78dc:	00000106 	andeq	r0, r0, r6, lsl #2
    78e0:	00000000 	andeq	r0, r0, r0
    78e4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    78e8:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    78ec:	bb180000 	bllt	6078f4 <_Min_Heap_Size+0x6070f4>
    78f0:	01000002 	tsteq	r0, r2
    78f4:	62320420 	eorsvs	r0, r2, #32, 8	; 0x20000000
    78f8:	01000007 	tsteq	r0, r7
    78fc:	18691850 	stmdane	r9!, {r4, r6, fp, ip}^
    7900:	20010000 	andcs	r0, r1, r0
    7904:	07684f04 	strbeq	r4, [r8, -r4, lsl #30]!
    7908:	51010000 	mrspl	r0, (UNDEF: 1)
    790c:	70041900 	andvc	r1, r4, r0, lsl #18
    7910:	19000006 	stmdbne	r0, {r1, r2}
    7914:	0000bc04 	andeq	fp, r0, r4, lsl #24
    7918:	73011700 	movwvc	r1, #5888	; 0x1700
    791c:	01000018 	tsteq	r0, r8, lsl r0
    7920:	010d03d1 	ldrdeq	r0, [sp, -r1]
	...
    792c:	01007d02 	tsteq	r0, r2, lsl #26
    7930:	00000799 	muleq	r0, r9, r7
    7934:	0000f618 	andeq	pc, r0, r8, lsl r6	; <UNPREDICTABLE>
    7938:	03d10100 	bicseq	r0, r1, #0, 2
    793c:	00079937 	andeq	r9, r7, r7, lsr r9
    7940:	00500100 	subseq	r0, r0, r0, lsl #2
    7944:	060f0419 			; <UNDEFINED> instruction: 0x060f0419
    7948:	011a0000 	tsteq	sl, r0
    794c:	00001497 	muleq	r0, r7, r4
    7950:	0a03c401 	beq	f895c <_Min_Heap_Size+0xf815c>
    7954:	0000bc01 	andeq	fp, r0, r1, lsl #24
    7958:	0010f800 	andseq	pc, r0, r0, lsl #16
    795c:	00111808 	andseq	r1, r1, r8, lsl #16
    7960:	00511608 	subseq	r1, r1, r8, lsl #12
    7964:	07c90100 	strbeq	r0, [r9, r0, lsl #2]
    7968:	fe160000 	cdp2	0, 1, cr0, cr6, cr0, {0}
    796c:	f3080010 	vqadd.u8	d0, d8, d0
    7970:	00000007 	andeq	r0, r0, r7
    7974:	1003011a 	andne	r0, r3, sl, lsl r1
    7978:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    797c:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    7980:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    7984:	f8080010 			; <UNDEFINED> instruction: 0xf8080010
    7988:	36080010 			; <UNDEFINED> instruction: 0x36080010
    798c:	01000051 	qaddeq	r0, r1, r0
    7990:	000007f3 	strdeq	r0, [r0], -r3
    7994:	0010de16 	andseq	sp, r0, r6, lsl lr
    7998:	0007f308 	andeq	pc, r7, r8, lsl #6
    799c:	011b0000 	tsteq	fp, r0
    79a0:	00001814 	andeq	r1, r0, r4, lsl r8
    79a4:	0a03ad01 	beq	f2db0 <_Min_Heap_Size+0xf25b0>
    79a8:	0000bc01 	andeq	fp, r0, r1, lsl #24
    79ac:	0010cc00 	andseq	ip, r0, r0, lsl #24
    79b0:	0010d808 	andseq	sp, r0, r8, lsl #16
    79b4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    79b8:	c8011a01 	stmdagt	r1, {r0, r9, fp, ip}
    79bc:	01000017 	tsteq	r0, r7, lsl r0
    79c0:	01110375 	tsteq	r1, r5, ror r3
    79c4:	000000bc 	strheq	r0, [r0], -ip
	...
    79d0:	00005156 	andeq	r5, r0, r6, asr r1
    79d4:	00089501 	andeq	r9, r8, r1, lsl #10
    79d8:	17c31c00 	strbne	r1, [r3, r0, lsl #24]
    79dc:	77010000 	strvc	r0, [r1, -r0]
    79e0:	00bc0c03 	adcseq	r0, ip, r3, lsl #24
    79e4:	517e0000 	cmnpl	lr, r0
    79e8:	51760000 	cmnpl	r6, r0
    79ec:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
    79f0:	01000017 	tsteq	r0, r7, lsl r0
    79f4:	bc170377 	ldclt	3, cr0, [r7], {119}	; 0x77
    79f8:	bc000000 	stclt	0, cr0, [r0], {-0}
    79fc:	b4000051 	strlt	r0, [r0], #-81	; 0xffffffaf
    7a00:	1c000051 	stcne	0, cr0, [r0], {81}	; 0x51
    7a04:	000016d9 	ldrdeq	r1, [r0], -r9
    7a08:	24037701 	strcs	r7, [r3], #-1793	; 0xfffff8ff
    7a0c:	000000bc 	strheq	r0, [r0], -ip
    7a10:	000051f9 	strdeq	r5, [r0], -r9
    7a14:	000051f3 	strdeq	r5, [r0], -r3
    7a18:	00175e1c 	andseq	r5, r7, ip, lsl lr
    7a1c:	03780100 	cmneq	r8, #0, 2
    7a20:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7a24:	00522c00 	subseq	r2, r2, r0, lsl #24
    7a28:	00522400 	subseq	r2, r2, r0, lsl #8
    7a2c:	00001600 	andeq	r1, r0, r0, lsl #12
    7a30:	0e3e0000 	cdpeq	0, 3, cr0, cr14, cr0, {0}
    7a34:	00160000 	andseq	r0, r6, r0
    7a38:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    7a3c:	0000000e 	andeq	r0, r0, lr
    7a40:	176b0114 			; <UNDEFINED> instruction: 0x176b0114
    7a44:	52010000 	andpl	r0, r1, #0
    7a48:	00010603 	andeq	r0, r1, r3, lsl #12
    7a4c:	00000000 	andeq	r0, r0, r0
    7a50:	02000000 	andeq	r0, r0, #0
    7a54:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    7a58:	00173e01 	andseq	r3, r7, r1, lsl #28
    7a5c:	03490100 	movteq	r0, #37120	; 0x9100
    7a60:	00000106 	andeq	r0, r0, r6, lsl #2
    7a64:	00000000 	andeq	r0, r0, r0
    7a68:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7a6c:	01150100 	tsteq	r5, r0, lsl #2
    7a70:	0000177e 	andeq	r1, r0, lr, ror r7
    7a74:	06030701 	streq	r0, [r3], -r1, lsl #14
    7a78:	00000001 	andeq	r0, r0, r1
    7a7c:	00000000 	andeq	r0, r0, r0
    7a80:	00526700 	subseq	r6, r2, r0, lsl #14
    7a84:	0a190100 	beq	647e8c <_Min_Heap_Size+0x64768c>
    7a88:	601d0000 	andsvs	r0, sp, r0
    7a8c:	01000018 	tsteq	r0, r8, lsl r0
    7a90:	bc210307 	stclt	3, cr0, [r1], #-28	; 0xffffffe4
    7a94:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    7a98:	ab000052 	blge	7be8 <_Min_Heap_Size+0x73e8>
    7a9c:	1d000052 	stcne	0, cr0, [r0, #-328]	; 0xfffffeb8
    7aa0:	000017ef 	andeq	r1, r0, pc, ror #15
    7aa4:	34030701 	strcc	r0, [r3], #-1793	; 0xfffff8ff
    7aa8:	000000bc 	strheq	r0, [r0], -ip
    7aac:	0000531c 	andeq	r5, r0, ip, lsl r3
    7ab0:	00005314 	andeq	r5, r0, r4, lsl r3
    7ab4:	0017331d 	andseq	r3, r7, sp, lsl r3
    7ab8:	03070100 	movweq	r0, #28928	; 0x7100
    7abc:	0000bc4c 	andeq	fp, r0, ip, asr #24
    7ac0:	00535e00 	subseq	r5, r3, r0, lsl #28
    7ac4:	00535000 	subseq	r5, r3, r0
    7ac8:	0a3b1e00 	beq	ecf2d0 <_Min_Heap_Size+0xecead0>
    7acc:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    7ad0:	06d11403 	ldrbeq	r1, [r1], r3, lsl #8
    7ad4:	91020000 	mrsls	r0, (UNDEF: 2)
    7ad8:	00001f5c 	andeq	r1, r0, ip, asr pc
    7adc:	00000000 	andeq	r0, r0, r0
    7ae0:	094c0000 	stmdbeq	ip, {}^	; <UNPREDICTABLE>
    7ae4:	a51e0000 	ldrge	r0, [lr, #-0]
    7ae8:	01000001 	tsteq	r0, r1
    7aec:	c8050313 	stmdagt	r5, {r0, r1, r4, r8, r9}
    7af0:	02000000 	andeq	r0, r0, #0
    7af4:	1f005491 	svcne	0x00005491
	...
    7b00:	0000096a 	andeq	r0, r0, sl, ror #18
    7b04:	0001a51e 	andeq	sl, r1, lr, lsl r5
    7b08:	032b0100 			; <UNDEFINED> instruction: 0x032b0100
    7b0c:	0000c805 	andeq	ip, r0, r5, lsl #16
    7b10:	58910200 	ldmpl	r1, {r9}
    7b14:	00002000 	andeq	r2, r0, r0
    7b18:	0e490000 	cdpeq	0, 4, cr0, cr9, cr0, {0}
    7b1c:	09870000 	stmibeq	r7, {}	; <UNPREDICTABLE>
    7b20:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7b24:	000c0550 	andeq	r0, ip, r0, asr r5
    7b28:	21400200 	mrscs	r0, (UNDEF: 96)
    7b2c:	91025101 	tstls	r2, r1, lsl #2
    7b30:	0020005c 	eoreq	r0, r0, ip, asr r0
    7b34:	57000000 	strpl	r0, [r0, -r0]
    7b38:	a500000e 	strge	r0, [r0, #-14]
    7b3c:	21000009 	tstcs	r0, r9
    7b40:	03055001 	movweq	r5, #20481	; 0x5001
    7b44:	00000000 	andeq	r0, r0, r0
    7b48:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7b4c:	00030b0a 	andeq	r0, r3, sl, lsl #22
    7b50:	00000020 	andeq	r0, r0, r0, lsr #32
    7b54:	000e5700 	andeq	r5, lr, r0, lsl #14
    7b58:	0009c300 	andeq	ip, r9, r0, lsl #6
    7b5c:	50012100 	andpl	r2, r1, r0, lsl #2
    7b60:	00000305 	andeq	r0, r0, r5, lsl #6
    7b64:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7b68:	0c0a0351 	stceq	3, cr0, [sl], {81}	; 0x51
    7b6c:	00200003 	eoreq	r0, r0, r3
    7b70:	57000000 	strpl	r0, [r0, -r0]
    7b74:	e100000e 	tst	r0, lr
    7b78:	21000009 	tstcs	r0, r9
    7b7c:	03055001 	movweq	r5, #20481	; 0x5001
    7b80:	00000000 	andeq	r0, r0, r0
    7b84:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7b88:	0003100a 	andeq	r1, r3, sl
    7b8c:	00000020 	andeq	r0, r0, r0, lsr #32
    7b90:	000e4900 	andeq	r4, lr, r0, lsl #18
    7b94:	0009fe00 	andeq	pc, r9, r0, lsl #28
    7b98:	50012100 	andpl	r2, r1, r0, lsl #2
    7b9c:	08000c05 	stmdaeq	r0, {r0, r2, sl, fp}
    7ba0:	01214002 			; <UNDEFINED> instruction: 0x01214002
    7ba4:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    7ba8:	00002200 	andeq	r2, r0, r0, lsl #4
    7bac:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7bb0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7bb4:	00030550 	andeq	r0, r3, r0, asr r5
    7bb8:	21000000 	mrscs	r0, (UNDEF: 0)
    7bbc:	0a035101 	beq	dbfc8 <_Min_Heap_Size+0xdb7c8>
    7bc0:	00000328 	andeq	r0, r0, r8, lsr #6
    7bc4:	0782011a 	usada8eq	r2, sl, r1, r0
    7bc8:	4f010000 	svcmi	0x00010000
    7bcc:	20011302 	andcs	r1, r1, r2, lsl #6
    7bd0:	00000005 	andeq	r0, r0, r5
    7bd4:	00000000 	andeq	r0, r0, r0
    7bd8:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    7bdc:	01000053 	qaddeq	r0, r3, r0
    7be0:	00000b4d 	andeq	r0, r0, sp, asr #22
    7be4:	0002bb1d 	andeq	fp, r2, sp, lsl fp
    7be8:	024f0100 	subeq	r0, pc, #0, 2
    7bec:	0007623c 	andeq	r6, r7, ip, lsr r2
    7bf0:	0053ff00 	subseq	pc, r3, r0, lsl #30
    7bf4:	0053f100 	subseq	pc, r3, r0, lsl #2
    7bf8:	186a1d00 	stmdane	sl!, {r8, sl, fp, ip}^
    7bfc:	4f010000 	svcmi	0x00010000
    7c00:	00bc5802 	adcseq	r5, ip, r2, lsl #16
    7c04:	54630000 	strbtpl	r0, [r3], #-0
    7c08:	54570000 	ldrbpl	r0, [r7], #-0
    7c0c:	db1c0000 	blle	707c14 <_Min_Heap_Size+0x707414>
    7c10:	01000014 	tsteq	r0, r4, lsl r0
    7c14:	bc0c0251 	sfmlt	f0, 4, [ip], {81}	; 0x51
    7c18:	b1000000 	mrslt	r0, (UNDEF: 0)
    7c1c:	ad000054 	stcge	0, cr0, [r0, #-336]	; 0xfffffeb0
    7c20:	16000054 			; <UNDEFINED> instruction: 0x16000054
    7c24:	00000000 	andeq	r0, r0, r0
    7c28:	00000e66 	andeq	r0, r0, r6, ror #28
    7c2c:	00000016 	andeq	r0, r0, r6, lsl r0
    7c30:	000e6600 	andeq	r6, lr, r0, lsl #12
    7c34:	00002000 	andeq	r2, r0, r0
    7c38:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7c3c:	0aa80000 	beq	fea07c44 <_estack+0xdea06a04>
    7c40:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7c44:	00030550 	andeq	r0, r3, r0, asr r5
    7c48:	21000000 	mrscs	r0, (UNDEF: 0)
    7c4c:	0a035101 	beq	dc058 <_Min_Heap_Size+0xdb858>
    7c50:	2000025a 	andcs	r0, r0, sl, asr r2
    7c54:	00000000 	andeq	r0, r0, r0
    7c58:	00000e57 	andeq	r0, r0, r7, asr lr
    7c5c:	00000ac6 	andeq	r0, r0, r6, asr #21
    7c60:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7c64:	00000003 	andeq	r0, r0, r3
    7c68:	51012100 	mrspl	r2, (UNDEF: 17)
    7c6c:	025b0a03 	subseq	r0, fp, #12288	; 0x3000
    7c70:	00002000 	andeq	r2, r0, r0
    7c74:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7c78:	0ae40000 	beq	ff907c80 <_estack+0xdf906a40>
    7c7c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7c80:	00030550 	andeq	r0, r3, r0, asr r5
    7c84:	21000000 	mrscs	r0, (UNDEF: 0)
    7c88:	0a035101 	beq	dc094 <_Min_Heap_Size+0xdb894>
    7c8c:	2000027e 	andcs	r0, r0, lr, ror r2
    7c90:	00000000 	andeq	r0, r0, r0
    7c94:	00000e57 	andeq	r0, r0, r7, asr lr
    7c98:	00000b02 	andeq	r0, r0, r2, lsl #22
    7c9c:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7ca0:	00000003 	andeq	r0, r0, r3
    7ca4:	51012100 	mrspl	r2, (UNDEF: 17)
    7ca8:	02850a03 	addeq	r0, r5, #12288	; 0x3000
    7cac:	00001600 	andeq	r1, r0, r0, lsl #12
    7cb0:	080e0000 	stmdaeq	lr, {}	; <UNPREDICTABLE>
    7cb4:	00160000 	andseq	r0, r6, r0
    7cb8:	74000000 	strvc	r0, [r0], #-0
    7cbc:	2000000e 	andcs	r0, r0, lr
    7cc0:	00000000 	andeq	r0, r0, r0
    7cc4:	00000e57 	andeq	r0, r0, r7, asr lr
    7cc8:	00000b32 	andeq	r0, r0, r2, lsr fp
    7ccc:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7cd0:	00000003 	andeq	r0, r0, r3
    7cd4:	51012100 	mrspl	r2, (UNDEF: 17)
    7cd8:	02c30a03 	sbceq	r0, r3, #12288	; 0x3000
    7cdc:	00002200 	andeq	r2, r0, r0, lsl #4
    7ce0:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7ce4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7ce8:	00030550 	andeq	r0, r3, r0, asr r5
    7cec:	21000000 	mrscs	r0, (UNDEF: 0)
    7cf0:	0a035101 	beq	dc0fc <_Min_Heap_Size+0xdb8fc>
    7cf4:	000002ca 	andeq	r0, r0, sl, asr #5
    7cf8:	067e0123 	ldrbteq	r0, [lr], -r3, lsr #2
    7cfc:	db010000 	blle	47d04 <_Min_Heap_Size+0x47504>
    7d00:	0520011a 	streq	r0, [r0, #-282]!	; 0xfffffee6
	...
    7d0c:	54cf0000 	strbpl	r0, [pc], #0	; 7d14 <_Min_Heap_Size+0x7514>
    7d10:	24010000 	strcs	r0, [r1], #-0
    7d14:	2400000e 	strcs	r0, [r0], #-14
    7d18:	000000f6 	strdeq	r0, [r0], -r6
    7d1c:	9941db01 	stmdbls	r1, {r0, r8, r9, fp, ip, lr, pc}^
    7d20:	45000007 	strmi	r0, [r0, #-7]
    7d24:	2b000055 	blcs	7e80 <_Min_Heap_Size+0x7680>
    7d28:	25000055 	strcs	r0, [r0, #-85]	; 0xffffffab
    7d2c:	000014db 	ldrdeq	r1, [r0], -fp
    7d30:	bc0cdd01 	stclt	13, cr13, [ip], {1}
    7d34:	1c000000 	stcne	0, cr0, [r0], {-0}
    7d38:	e8000056 	stmda	r0, {r1, r2, r4, r6}
    7d3c:	25000055 	strcs	r0, [r0, #-85]	; 0xffffffab
    7d40:	000017ad 	andeq	r1, r0, sp, lsr #15
    7d44:	bc17dd01 	ldclt	13, cr13, [r7], {1}
    7d48:	46000000 	strmi	r0, [r0], -r0
    7d4c:	42000057 	andmi	r0, r0, #87	; 0x57
    7d50:	26000057 			; <UNDEFINED> instruction: 0x26000057
    7d54:	00000308 	andeq	r0, r0, r8, lsl #6
    7d58:	00000c39 	andeq	r0, r0, r9, lsr ip
    7d5c:	0016de1c 	andseq	sp, r6, ip, lsl lr
    7d60:	01870100 	orreq	r0, r7, r0, lsl #2
    7d64:	0004cb16 	andeq	ip, r4, r6, lsl fp
    7d68:	00577000 	subseq	r7, r7, r0
    7d6c:	00576400 	subseq	r6, r7, r0, lsl #8
    7d70:	00001f00 	andeq	r1, r0, r0, lsl #30
    7d74:	00000000 	andeq	r0, r0, r0
    7d78:	0be40000 	bleq	ff907d80 <_estack+0xdf906b40>
    7d7c:	a51e0000 	ldrge	r0, [lr, #-0]
    7d80:	01000001 	tsteq	r0, r1
    7d84:	c8070190 	stmdagt	r7, {r4, r7, r8}
    7d88:	02000000 	andeq	r0, r0, #0
    7d8c:	16006c91 			; <UNDEFINED> instruction: 0x16006c91
    7d90:	00000000 	andeq	r0, r0, r0
    7d94:	00000e66 	andeq	r0, r0, r6, ror #28
    7d98:	00000016 	andeq	r0, r0, r6, lsl r0
    7d9c:	000e6600 	andeq	r6, lr, r0, lsl #12
    7da0:	00002000 	andeq	r2, r0, r0
    7da4:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    7da8:	0c140000 	ldceq	0, cr0, [r4], {-0}
    7dac:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7db0:	00030550 	andeq	r0, r3, r0, asr r5
    7db4:	21000000 	mrscs	r0, (UNDEF: 0)
    7db8:	0a035101 	beq	dc1c4 <_Min_Heap_Size+0xdb9c4>
    7dbc:	1600018a 	strne	r0, [r0], -sl, lsl #3
    7dc0:	00000000 	andeq	r0, r0, r0
    7dc4:	00000e66 	andeq	r0, r0, r6, ror #28
    7dc8:	00000016 	andeq	r0, r0, r6, lsl r0
    7dcc:	000e6600 	andeq	r6, lr, r0, lsl #12
    7dd0:	00001600 	andeq	r1, r0, r0, lsl #12
    7dd4:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    7dd8:	00160000 	andseq	r0, r6, r0
    7ddc:	66000000 	strvs	r0, [r0], -r0
    7de0:	0000000e 	andeq	r0, r0, lr
    7de4:	00000016 	andeq	r0, r0, r6, lsl r0
    7de8:	000e6600 	andeq	r6, lr, r0, lsl #12
    7dec:	00001600 	andeq	r1, r0, r0, lsl #12
    7df0:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    7df4:	00200000 	eoreq	r0, r0, r0
    7df8:	57000000 	strpl	r0, [r0, -r0]
    7dfc:	6800000e 	stmdavs	r0, {r1, r2, r3}
    7e00:	2100000c 	tstcs	r0, ip
    7e04:	03055001 	movweq	r5, #20481	; 0x5001
    7e08:	00000000 	andeq	r0, r0, r0
    7e0c:	02510121 	subseq	r0, r1, #1073741832	; 0x40000008
    7e10:	2000e608 	andcs	lr, r0, r8, lsl #12
    7e14:	00000000 	andeq	r0, r0, r0
    7e18:	00000e57 	andeq	r0, r0, r7, asr lr
    7e1c:	00000c85 	andeq	r0, r0, r5, lsl #25
    7e20:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7e24:	00000003 	andeq	r0, r0, r3
    7e28:	51012100 	mrspl	r2, (UNDEF: 17)
    7e2c:	00eb0802 	rsceq	r0, fp, r2, lsl #16
    7e30:	00000016 	andeq	r0, r0, r6, lsl r0
    7e34:	000e6600 	andeq	r6, lr, r0, lsl #12
    7e38:	00001600 	andeq	r1, r0, r0, lsl #12
    7e3c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    7e40:	00160000 	andseq	r0, r6, r0
    7e44:	66000000 	strvs	r0, [r0], -r0
    7e48:	1600000e 	strne	r0, [r0], -lr
    7e4c:	00000000 	andeq	r0, r0, r0
    7e50:	00000e66 	andeq	r0, r0, r6, ror #28
    7e54:	00000020 	andeq	r0, r0, r0, lsr #32
    7e58:	000e5700 	andeq	r5, lr, r0, lsl #14
    7e5c:	000cc700 	andeq	ip, ip, r0, lsl #14
    7e60:	50012100 	andpl	r2, r1, r0, lsl #2
    7e64:	00000305 	andeq	r0, r0, r5, lsl #6
    7e68:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7e6c:	1d0a0351 	stcne	3, cr0, [sl, #-324]	; 0xfffffebc
    7e70:	00200001 	eoreq	r0, r0, r1
    7e74:	57000000 	strpl	r0, [r0, -r0]
    7e78:	e500000e 	str	r0, [r0, #-14]
    7e7c:	2100000c 	tstcs	r0, ip
    7e80:	03055001 	movweq	r5, #20481	; 0x5001
    7e84:	00000000 	andeq	r0, r0, r0
    7e88:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7e8c:	00011e0a 	andeq	r1, r1, sl, lsl #28
    7e90:	00000016 	andeq	r0, r0, r6, lsl r0
    7e94:	000e6600 	andeq	r6, lr, r0, lsl #12
    7e98:	00001600 	andeq	r1, r0, r0, lsl #12
    7e9c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    7ea0:	00160000 	andseq	r0, r6, r0
    7ea4:	66000000 	strvs	r0, [r0], -r0
    7ea8:	1600000e 	strne	r0, [r0], -lr
    7eac:	00000000 	andeq	r0, r0, r0
    7eb0:	00000e66 	andeq	r0, r0, r6, ror #28
    7eb4:	00000020 	andeq	r0, r0, r0, lsr #32
    7eb8:	000e5700 	andeq	r5, lr, r0, lsl #14
    7ebc:	000d2700 	andeq	r2, sp, r0, lsl #14
    7ec0:	50012100 	andpl	r2, r1, r0, lsl #2
    7ec4:	00000305 	andeq	r0, r0, r5, lsl #6
    7ec8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7ecc:	5e0a0351 	mcrpl	3, 0, r0, cr10, cr1, {2}
    7ed0:	00160001 	andseq	r0, r6, r1
    7ed4:	66000000 	strvs	r0, [r0], -r0
    7ed8:	1600000e 	strne	r0, [r0], -lr
    7edc:	00000000 	andeq	r0, r0, r0
    7ee0:	00000e66 	andeq	r0, r0, r6, ror #28
    7ee4:	00000016 	andeq	r0, r0, r6, lsl r0
    7ee8:	000e6600 	andeq	r6, lr, r0, lsl #12
    7eec:	00001600 	andeq	r1, r0, r0, lsl #12
    7ef0:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    7ef4:	00200000 	eoreq	r0, r0, r0
    7ef8:	57000000 	strpl	r0, [r0, -r0]
    7efc:	6900000e 	stmdbvs	r0, {r1, r2, r3}
    7f00:	2100000d 	tstcs	r0, sp
    7f04:	03055001 	movweq	r5, #20481	; 0x5001
    7f08:	00000000 	andeq	r0, r0, r0
    7f0c:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7f10:	0001cd0a 	andeq	ip, r1, sl, lsl #26
    7f14:	00000020 	andeq	r0, r0, r0, lsr #32
    7f18:	000e5700 	andeq	r5, lr, r0, lsl #14
    7f1c:	000d8700 	andeq	r8, sp, r0, lsl #14
    7f20:	50012100 	andpl	r2, r1, r0, lsl #2
    7f24:	00000305 	andeq	r0, r0, r5, lsl #6
    7f28:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f2c:	d60a0351 			; <UNDEFINED> instruction: 0xd60a0351
    7f30:	00200001 	eoreq	r0, r0, r1
    7f34:	57000000 	strpl	r0, [r0, -r0]
    7f38:	a500000e 	strge	r0, [r0, #-14]
    7f3c:	2100000d 	tstcs	r0, sp
    7f40:	03055001 	movweq	r5, #20481	; 0x5001
    7f44:	00000000 	andeq	r0, r0, r0
    7f48:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7f4c:	0001d70a 	andeq	sp, r1, sl, lsl #14
    7f50:	00000020 	andeq	r0, r0, r0, lsr #32
    7f54:	000e5700 	andeq	r5, lr, r0, lsl #14
    7f58:	000dc300 	andeq	ip, sp, r0, lsl #6
    7f5c:	50012100 	andpl	r2, r1, r0, lsl #2
    7f60:	00000305 	andeq	r0, r0, r5, lsl #6
    7f64:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7f68:	d80a0351 	stmdale	sl, {r0, r4, r6, r8, r9}
    7f6c:	00200001 	eoreq	r0, r0, r1
    7f70:	57000000 	strpl	r0, [r0, -r0]
    7f74:	e100000e 	tst	r0, lr
    7f78:	2100000d 	tstcs	r0, sp
    7f7c:	03055001 	movweq	r5, #20481	; 0x5001
    7f80:	00000000 	andeq	r0, r0, r0
    7f84:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7f88:	0001d90a 	andeq	sp, r1, sl, lsl #18
    7f8c:	00000020 	andeq	r0, r0, r0, lsr #32
    7f90:	000e5700 	andeq	r5, lr, r0, lsl #14
    7f94:	000dff00 	andeq	pc, sp, r0, lsl #30
    7f98:	50012100 	andpl	r2, r1, r0, lsl #2
    7f9c:	00000305 	andeq	r0, r0, r5, lsl #6
    7fa0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7fa4:	da0a0351 	ble	288cf0 <_Min_Heap_Size+0x2884f0>
    7fa8:	00160001 	andseq	r0, r6, r1
    7fac:	66000000 	strvs	r0, [r0], -r0
    7fb0:	1600000e 	strne	r0, [r0], -lr
    7fb4:	00000000 	andeq	r0, r0, r0
    7fb8:	00000e66 	andeq	r0, r0, r6, ror #28
    7fbc:	00000016 	andeq	r0, r0, r6, lsl r0
    7fc0:	000e6600 	andeq	r6, lr, r0, lsl #12
    7fc4:	00001600 	andeq	r1, r0, r0, lsl #12
    7fc8:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    7fcc:	27000000 	strcs	r0, [r0, -r0]
    7fd0:	0017e001 	andseq	lr, r7, r1
    7fd4:	1ac80100 	bne	ff2083dc <_estack+0xdf20719c>
    7fd8:	00052001 	andeq	r2, r5, r1
	...
    7fe4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7fe8:	01012801 	tsteq	r1, r1, lsl #16
    7fec:	0000144f 	andeq	r1, r0, pc, asr #8
    7ff0:	0000144f 	andeq	r1, r0, pc, asr #8
    7ff4:	a0010129 	andge	r0, r1, r9, lsr #2
    7ff8:	a000000b 	andge	r0, r0, fp
    7ffc:	0a00000b 	beq	8030 <_Min_Heap_Size+0x7830>
    8000:	012a07e0 	smulwteq	sl, r0, r7
    8004:	00099b01 	andeq	r9, r9, r1, lsl #22
    8008:	00099b00 	andeq	r9, r9, r0, lsl #22
    800c:	01e60c00 	mvneq	r0, r0, lsl #24
    8010:	01012908 	tsteq	r1, r8, lsl #18
    8014:	00001335 	andeq	r1, r0, r5, lsr r3
    8018:	00001335 	andeq	r1, r0, r5, lsr r3
    801c:	290aea0b 	stmdbcs	sl, {r0, r1, r3, r9, fp, sp, lr, pc}
    8020:	17a00101 	strne	r0, [r0, r1, lsl #2]!
    8024:	17a00000 	strne	r0, [r0, r0]!
    8028:	df0b0000 	svcle	0x000b0000
    802c:	09da0013 	ldmibeq	sl, {r0, r1, r4}^
    8030:	00020000 	andeq	r0, r2, r0
    8034:	00000da3 	andeq	r0, r0, r3, lsr #27
    8038:	05190104 	ldreq	r0, [r9, #-260]	; 0xfffffefc
    803c:	9f0c0000 	svcls	0x000c0000
    8040:	22000019 	andcs	r0, r0, #25
    8044:	98000008 	stmdals	r0, {r3}
    8048:	00000003 	andeq	r0, r0, r3
    804c:	00000000 	andeq	r0, r0, r0
    8050:	01000000 	mrseq	r0, (UNDEF: 0)
    8054:	02000060 	andeq	r0, r0, #96	; 0x60
    8058:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    805c:	72030000 	andvc	r0, r3, #0
    8060:	02000000 	andeq	r0, r0, #0
    8064:	003c182b 	eorseq	r1, ip, fp, lsr #16
    8068:	01020000 	mrseq	r0, (UNDEF: 2)
    806c:	00050b08 	andeq	r0, r5, r8, lsl #22
    8070:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8074:	000005d3 	ldrdeq	r0, [r0], -r3
    8078:	00069a03 	andeq	r9, r6, r3, lsl #20
    807c:	19390200 	ldmdbne	r9!, {r9}
    8080:	00000056 	andeq	r0, r0, r6, asr r0
    8084:	37070202 	strcc	r0, [r7, -r2, lsl #4]
    8088:	02000003 	andeq	r0, r0, #3
    808c:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    8090:	91030000 	mrsls	r0, (UNDEF: 3)
    8094:	02000002 	andeq	r0, r0, #2
    8098:	0070194f 	rsbseq	r1, r0, pc, asr #18
    809c:	04020000 	streq	r0, [r2], #-0
    80a0:	0000bf07 	andeq	fp, r0, r7, lsl #30
    80a4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    80a8:	000002ad 	andeq	r0, r0, sp, lsr #5
    80ac:	ba070802 	blt	1ca0bc <_Min_Heap_Size+0x1c98bc>
    80b0:	04000000 	streq	r0, [r0], #-0
    80b4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    80b8:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    80bc:	0000c407 	andeq	ip, r0, r7, lsl #8
    80c0:	00740300 	rsbseq	r0, r4, r0, lsl #6
    80c4:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    80c8:	00003013 	andeq	r3, r0, r3, lsl r0
    80cc:	069c0300 	ldreq	r0, [ip], r0, lsl #6
    80d0:	24030000 	strcs	r0, [r3], #-0
    80d4:	00004a14 	andeq	r4, r0, r4, lsl sl
    80d8:	02930300 	addseq	r0, r3, #0, 6
    80dc:	30030000 	andcc	r0, r3, r0
    80e0:	00006414 	andeq	r6, r0, r4, lsl r4
    80e4:	00ab0500 	adceq	r0, fp, r0, lsl #10
    80e8:	ab060000 	blge	1880f0 <_Min_Heap_Size+0x1878f0>
    80ec:	cc000000 	stcgt	0, cr0, [r0], {-0}
    80f0:	07000000 	streq	r0, [r0, -r0]
    80f4:	0000008c 	andeq	r0, r0, ip, lsl #1
    80f8:	18080001 	stmdane	r8, {r0}
    80fc:	09015a04 	stmdbeq	r1, {r2, r9, fp, ip, lr}
    8100:	00000136 	andeq	r0, r0, r6, lsr r1
    8104:	524d4909 	subpl	r4, sp, #147456	; 0x24000
    8108:	015c0400 	cmpeq	ip, r0, lsl #8
    810c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8110:	00230200 	eoreq	r0, r3, r0, lsl #4
    8114:	524d4509 	subpl	r4, sp, #37748736	; 0x2400000
    8118:	015d0400 	cmpeq	sp, r0, lsl #8
    811c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8120:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8124:	0019940a 	andseq	r9, r9, sl, lsl #8
    8128:	015e0400 	cmpeq	lr, r0, lsl #8
    812c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8130:	08230200 	stmdaeq	r3!, {r9}
    8134:	00195d0a 	andseq	r5, r9, sl, lsl #26
    8138:	015f0400 	cmpeq	pc, r0, lsl #8
    813c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8140:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8144:	0019ef0a 	andseq	lr, r9, sl, lsl #30
    8148:	01600400 	cmneq	r0, r0, lsl #8
    814c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8150:	10230200 	eorne	r0, r3, r0, lsl #4
    8154:	00525009 	subseq	r5, r2, r9
    8158:	11016104 	tstne	r1, r4, lsl #2
    815c:	000000b7 	strheq	r0, [r0], -r7
    8160:	00142302 	andseq	r2, r4, r2, lsl #6
    8164:	0018f20b 	andseq	pc, r8, fp, lsl #4
    8168:	01620400 	cmneq	r2, r0, lsl #8
    816c:	0000cc03 	andeq	ip, r0, r3, lsl #24
    8170:	04280800 	strteq	r0, [r8], #-2048	; 0xfffff800
    8174:	de0901ae 	adfle<illegal precision>p	f0, f1, #0.5
    8178:	0a000001 	beq	8184 <_Min_Heap_Size+0x7984>
    817c:	00000f51 	andeq	r0, r0, r1, asr pc
    8180:	1101b004 	tstne	r1, r4
    8184:	000000b7 	strheq	r0, [r0], -r7
    8188:	0a002302 	beq	10d98 <_Min_Heap_Size+0x10598>
    818c:	00000e63 	andeq	r0, r0, r3, ror #28
    8190:	1101b104 	tstne	r1, r4, lsl #2
    8194:	000000b7 	strheq	r0, [r0], -r7
    8198:	0a042302 	beq	110da8 <_Min_Heap_Size+0x1105a8>
    819c:	00000ce1 	andeq	r0, r0, r1, ror #25
    81a0:	1101b204 	tstne	r1, r4, lsl #4
    81a4:	000000b7 	strheq	r0, [r0], -r7
    81a8:	0a082302 	beq	210db8 <_Min_Heap_Size+0x2105b8>
    81ac:	00000d2b 	andeq	r0, r0, fp, lsr #26
    81b0:	1101b304 	tstne	r1, r4, lsl #6
    81b4:	000000b7 	strheq	r0, [r0], -r7
    81b8:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
    81bc:	00524449 	subseq	r4, r2, r9, asr #8
    81c0:	1101b404 	tstne	r1, r4, lsl #8
    81c4:	000000b7 	strheq	r0, [r0], -r7
    81c8:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
    81cc:	0052444f 	subseq	r4, r2, pc, asr #8
    81d0:	1101b504 	tstne	r1, r4, lsl #10
    81d4:	000000b7 	strheq	r0, [r0], -r7
    81d8:	0a142302 	beq	510de8 <_Min_Heap_Size+0x5105e8>
    81dc:	00000f04 	andeq	r0, r0, r4, lsl #30
    81e0:	1101b604 	tstne	r1, r4, lsl #12
    81e4:	000000b7 	strheq	r0, [r0], -r7
    81e8:	0a182302 	beq	610df8 <_Min_Heap_Size+0x6105f8>
    81ec:	00000ccf 	andeq	r0, r0, pc, asr #25
    81f0:	1101b704 	tstne	r1, r4, lsl #14
    81f4:	000000b7 	strheq	r0, [r0], -r7
    81f8:	091c2302 	ldmdbeq	ip, {r1, r8, r9, sp}
    81fc:	00524641 	subseq	r4, r2, r1, asr #12
    8200:	1101b804 	tstne	r1, r4, lsl #16
    8204:	000001ee 	andeq	r0, r0, lr, ror #3
    8208:	00202302 	eoreq	r2, r0, r2, lsl #6
    820c:	0000b706 	andeq	fp, r0, r6, lsl #14
    8210:	0001ee00 	andeq	lr, r1, r0, lsl #28
    8214:	008c0700 	addeq	r0, ip, r0, lsl #14
    8218:	00010000 	andeq	r0, r1, r0
    821c:	0001de05 	andeq	sp, r1, r5, lsl #28
    8220:	0f090b00 	svceq	0x00090b00
    8224:	b9040000 	stmdblt	r4, {}	; <UNPREDICTABLE>
    8228:	01430301 	cmpeq	r3, r1, lsl #6
    822c:	24080000 	strcs	r0, [r8], #-0
    8230:	0901bf04 	stmdbeq	r1, {r2, r8, r9, sl, fp, ip, sp, pc}
    8234:	0000025b 	andeq	r0, r0, fp, asr r2
    8238:	0018c40a 	andseq	ip, r8, sl, lsl #8
    823c:	01c10400 	biceq	r0, r1, r0, lsl #8
    8240:	0000b711 	andeq	fp, r0, r1, lsl r7
    8244:	00230200 	eoreq	r0, r3, r0, lsl #4
    8248:	434d5009 	movtmi	r5, #53257	; 0xd009
    824c:	01c20400 	biceq	r0, r2, r0, lsl #8
    8250:	0000b711 	andeq	fp, r0, r1, lsl r7
    8254:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8258:	0018cb0a 	andseq	ip, r8, sl, lsl #22
    825c:	01c30400 	biceq	r0, r3, r0, lsl #8
    8260:	00026b11 	andeq	r6, r2, r1, lsl fp
    8264:	08230200 	stmdaeq	r3!, {r9}
    8268:	0019d80a 	andseq	sp, r9, sl, lsl #16
    826c:	01c40400 	biceq	r0, r4, r0, lsl #8
    8270:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8274:	18230200 	stmdane	r3!, {r9}
    8278:	0019220a 	andseq	r2, r9, sl, lsl #4
    827c:	01c50400 	biceq	r0, r5, r0, lsl #8
    8280:	0000b711 	andeq	fp, r0, r1, lsl r7
    8284:	20230200 	eorcs	r0, r3, r0, lsl #4
    8288:	00b70600 	adcseq	r0, r7, r0, lsl #12
    828c:	026b0000 	rsbeq	r0, fp, #0
    8290:	8c070000 	stchi	0, cr0, [r7], {-0}
    8294:	03000000 	movweq	r0, #0
    8298:	025b0500 	subseq	r0, fp, #0, 10
    829c:	850b0000 	strhi	r0, [fp, #-0]
    82a0:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    82a4:	000301c6 	andeq	r0, r3, r6, asr #3
    82a8:	08000002 	stmdaeq	r0, {r1}
    82ac:	01f40488 	mvnseq	r0, r8, lsl #9
    82b0:	00046909 	andeq	r6, r4, r9, lsl #18
    82b4:	52430900 	subpl	r0, r3, #0, 18
    82b8:	01f60400 	mvnseq	r0, r0, lsl #8
    82bc:	0000b711 	andeq	fp, r0, r1, lsl r7
    82c0:	00230200 	eoreq	r0, r3, r0, lsl #4
    82c4:	0002560a 	andeq	r5, r2, sl, lsl #12
    82c8:	01f70400 	mvnseq	r0, r0, lsl #8
    82cc:	0000b711 	andeq	fp, r0, r1, lsl r7
    82d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    82d4:	0002590a 	andeq	r5, r2, sl, lsl #18
    82d8:	01f80400 	mvnseq	r0, r0, lsl #8
    82dc:	0000b711 	andeq	fp, r0, r1, lsl r7
    82e0:	08230200 	stmdaeq	r3!, {r9}
    82e4:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
    82e8:	01f90400 	mvnseq	r0, r0, lsl #8
    82ec:	0000b711 	andeq	fp, r0, r1, lsl r7
    82f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    82f4:	0001680a 	andeq	r6, r1, sl, lsl #16
    82f8:	01fa0400 	mvnseq	r0, r0, lsl #8
    82fc:	0000b711 	andeq	fp, r0, r1, lsl r7
    8300:	10230200 	eorne	r0, r3, r0, lsl #4
    8304:	0006bc0a 	andeq	fp, r6, sl, lsl #24
    8308:	01fb0400 	mvnseq	r0, r0, lsl #8
    830c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8310:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    8314:	0003740a 	andeq	r7, r3, sl, lsl #8
    8318:	01fc0400 	mvnseq	r0, r0, lsl #8
    831c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8320:	18230200 	stmdane	r3!, {r9}
    8324:	0004a60a 	andeq	sl, r4, sl, lsl #12
    8328:	01fd0400 	mvnseq	r0, r0, lsl #8
    832c:	0000ab11 	andeq	sl, r0, r1, lsl fp
    8330:	1c230200 	sfmne	f0, 4, [r3], #-0
    8334:	00049d0a 	andeq	r9, r4, sl, lsl #26
    8338:	01fe0400 	mvnseq	r0, r0, lsl #8
    833c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8340:	20230200 	eorcs	r0, r3, r0, lsl #4
    8344:	0001e80a 	andeq	lr, r1, sl, lsl #16
    8348:	01ff0400 	mvnseq	r0, r0, lsl #8
    834c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8350:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    8354:	0004b00a 	andeq	fp, r4, sl
    8358:	02000400 	andeq	r0, r0, #0, 8
    835c:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8360:	28230200 	stmdacs	r3!, {r9}
    8364:	00080e0a 	andeq	r0, r8, sl, lsl #28
    8368:	02010400 	andeq	r0, r1, #0, 8
    836c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8370:	30230200 	eorcc	r0, r3, r0, lsl #4
    8374:	0007270a 	andeq	r2, r7, sl, lsl #14
    8378:	02020400 	andeq	r0, r2, #0, 8
    837c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8380:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    8384:	00043f0a 	andeq	r3, r4, sl, lsl #30
    8388:	02030400 	andeq	r0, r3, #0, 8
    838c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8390:	38230200 	stmdacc	r3!, {r9}
    8394:	0004ba0a 	andeq	fp, r4, sl, lsl #20
    8398:	02040400 	andeq	r0, r4, #0, 8
    839c:	0000ab11 	andeq	sl, r0, r1, lsl fp
    83a0:	3c230200 	sfmcc	f0, 4, [r3], #-0
    83a4:	00065c0a 	andeq	r5, r6, sl, lsl #24
    83a8:	02050400 	andeq	r0, r5, #0, 8
    83ac:	0000b711 	andeq	fp, r0, r1, lsl r7
    83b0:	40230200 	eormi	r0, r3, r0, lsl #4
    83b4:	0006220a 	andeq	r2, r6, sl, lsl #4
    83b8:	02060400 	andeq	r0, r6, #0, 8
    83bc:	0000b711 	andeq	fp, r0, r1, lsl r7
    83c0:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    83c4:	0004c40a 	andeq	ip, r4, sl, lsl #8
    83c8:	02070400 	andeq	r0, r7, #0, 8
    83cc:	0000bc11 	andeq	fp, r0, r1, lsl ip
    83d0:	48230200 	stmdami	r3!, {r9}
    83d4:	0001320a 	andeq	r3, r1, sl, lsl #4
    83d8:	02080400 	andeq	r0, r8, #0, 8
    83dc:	0000b711 	andeq	fp, r0, r1, lsl r7
    83e0:	50230200 	eorpl	r0, r3, r0, lsl #4
    83e4:	0004790a 	andeq	r7, r4, sl, lsl #18
    83e8:	02090400 	andeq	r0, r9, #0, 8
    83ec:	0000b711 	andeq	fp, r0, r1, lsl r7
    83f0:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    83f4:	0005f00a 	andeq	pc, r5, sl
    83f8:	020a0400 	andeq	r0, sl, #0, 8
    83fc:	0000b711 	andeq	fp, r0, r1, lsl r7
    8400:	58230200 	stmdapl	r3!, {r9}
    8404:	0004ce0a 	andeq	ip, r4, sl, lsl #28
    8408:	020b0400 	andeq	r0, fp, #0, 8
    840c:	0000ab11 	andeq	sl, r0, r1, lsl fp
    8410:	5c230200 	sfmpl	f0, 4, [r3], #-0
    8414:	00001b0a 	andeq	r1, r0, sl, lsl #22
    8418:	020c0400 	andeq	r0, ip, #0, 8
    841c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8420:	60230200 	eorvs	r0, r3, r0, lsl #4
    8424:	0003b50a 	andeq	fp, r3, sl, lsl #10
    8428:	020d0400 	andeq	r0, sp, #0, 8
    842c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8430:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    8434:	0004d80a 	andeq	sp, r4, sl, lsl #16
    8438:	020e0400 	andeq	r0, lr, #0, 8
    843c:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8440:	68230200 	stmdavs	r3!, {r9}
    8444:	0007960a 	andeq	r9, r7, sl, lsl #12
    8448:	020f0400 	andeq	r0, pc, #0, 8
    844c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8450:	70230200 	eorvc	r0, r3, r0, lsl #4
    8454:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
    8458:	02100400 	andseq	r0, r0, #0, 8
    845c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8460:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    8464:	0004e20a 	andeq	lr, r4, sl, lsl #4
    8468:	02110400 	andseq	r0, r1, #0, 8
    846c:	0000bc11 	andeq	fp, r0, r1, lsl ip
    8470:	78230200 	stmdavc	r3!, {r9}
    8474:	0007650a 	andeq	r6, r7, sl, lsl #10
    8478:	02120400 	andseq	r0, r2, #0, 8
    847c:	0000b711 	andeq	fp, r0, r1, lsl r7
    8480:	80230300 	eorhi	r0, r3, r0, lsl #6
    8484:	03550a01 	cmpeq	r5, #4096	; 0x1000
    8488:	13040000 	movwne	r0, #16384	; 0x4000
    848c:	00b71102 	adcseq	r1, r7, r2, lsl #2
    8490:	23030000 	movwcs	r0, #12288	; 0x3000
    8494:	0b000184 	bleq	8aac <_Min_Heap_Size+0x82ac>
    8498:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    849c:	03021404 	movweq	r1, #9220	; 0x2404
    84a0:	0000027d 	andeq	r0, r0, sp, ror r2
    84a4:	3c01070c 	stccc	7, cr0, [r1], {12}
    84a8:	05000000 	streq	r0, [r0, #-0]
    84ac:	049101b9 	ldreq	r0, [r1], #441	; 0x1b9
    84b0:	e40d0000 	str	r0, [sp], #-0
    84b4:	00000002 	andeq	r0, r0, r2
    84b8:	5445530e 	strbpl	r5, [r5], #-782	; 0xfffffcf2
    84bc:	02000100 	andeq	r0, r0, #0, 2
    84c0:	06640408 	strbteq	r0, [r4], -r8, lsl #8
    84c4:	070c0000 	streq	r0, [ip, -r0]
    84c8:	00003c01 	andeq	r3, r0, r1, lsl #24
    84cc:	01270600 			; <UNDEFINED> instruction: 0x01270600
    84d0:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    84d4:	0003100d 	andeq	r1, r3, sp
    84d8:	520d0000 	andpl	r0, sp, #0
    84dc:	01000006 	tsteq	r0, r6
    84e0:	0008760d 	andeq	r7, r8, sp, lsl #12
    84e4:	f10d0200 			; <UNDEFINED> instruction: 0xf10d0200
    84e8:	03000002 	movweq	r0, #2
    84ec:	12900300 	addsne	r0, r0, #0, 6
    84f0:	2c060000 	stccs	0, cr0, [r6], {-0}
    84f4:	00049803 	andeq	r9, r4, r3, lsl #16
    84f8:	07140f00 	ldreq	r0, [r4, -r0, lsl #30]
    84fc:	0520092e 	streq	r0, [r0, #-2350]!	; 0xfffff6d2
    8500:	50100000 	andspl	r0, r0, r0
    8504:	07006e69 	streq	r6, [r0, -r9, ror #28]
    8508:	00ab0c30 	adceq	r0, fp, r0, lsr ip
    850c:	23020000 	movwcs	r0, #8192	; 0x2000
    8510:	06421100 	strbeq	r1, [r2], -r0, lsl #2
    8514:	33070000 	movwcc	r0, #28672	; 0x7000
    8518:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    851c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8520:	000dcd11 	andeq	ip, sp, r1, lsl sp
    8524:	0c360700 	ldceq	7, cr0, [r6], #-0
    8528:	000000ab 	andeq	r0, r0, fp, lsr #1
    852c:	11082302 	tstne	r8, r2, lsl #6
    8530:	000009f7 	strdeq	r0, [r0], -r7
    8534:	ab0c3907 	blge	316958 <_Min_Heap_Size+0x316158>
    8538:	02000000 	andeq	r0, r0, #0
    853c:	5b110c23 	blpl	44b5d0 <_Min_Heap_Size+0x44add0>
    8540:	0700000d 	streq	r0, [r0, -sp]
    8544:	00ab0c3c 	adceq	r0, fp, ip, lsr ip
    8548:	23020000 	movwcs	r0, #8192	; 0x2000
    854c:	1b030010 	blne	c8594 <_Min_Heap_Size+0xc7d94>
    8550:	0700000b 	streq	r0, [r0, -fp]
    8554:	04cb023e 	strbeq	r0, [fp], #574	; 0x23e
    8558:	070c0000 	streq	r0, [ip, -r0]
    855c:	00003c01 	andeq	r3, r0, r1, lsl #24
    8560:	01440700 	cmpeq	r4, r0, lsl #14
    8564:	00000547 	andeq	r0, r0, r7, asr #10
    8568:	0019320d 	andseq	r3, r9, sp, lsl #4
    856c:	e50d0000 	str	r0, [sp, #-0]
    8570:	01000018 	tsteq	r0, r8, lsl r0
    8574:	19e10300 	stmibne	r1!, {r8, r9}^
    8578:	47070000 	strmi	r0, [r7, -r0]
    857c:	00052c02 	andeq	r2, r5, r2, lsl #24
    8580:	41011200 	mrsmi	r1, R9_usr
    8584:	01000019 	tsteq	r0, r9, lsl r0
    8588:	010d01fb 	strdeq	r0, [sp, -fp]
	...
    8594:	01007d02 	tsteq	r0, r2, lsl #26
    8598:	0000057e 	andeq	r0, r0, lr, ror r5
    859c:	00189f13 	andseq	r9, r8, r3, lsl pc
    85a0:	01fb0100 	mvnseq	r0, r0, lsl #2
    85a4:	00009f2d 	andeq	r9, r0, sp, lsr #30
    85a8:	00500100 	subseq	r0, r0, r0, lsl #2
    85ac:	19620114 	stmdbne	r2!, {r2, r4, r8}^
    85b0:	ec010000 	stc	0, cr0, [r1], {-0}
    85b4:	00010601 	andeq	r0, r1, r1, lsl #12
    85b8:	00000000 	andeq	r0, r0, r0
    85bc:	bd000000 	stclt	0, cr0, [r0, #-0]
    85c0:	01000057 	qaddeq	r0, r7, r0
    85c4:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
    85c8:	00189f15 	andseq	r9, r8, r5, lsl pc
    85cc:	01ec0100 	mvneq	r0, r0, lsl #2
    85d0:	00009f28 	andeq	r9, r0, r8, lsr #30
    85d4:	0057e500 	subseq	lr, r7, r0, lsl #10
    85d8:	0057dd00 	subseq	sp, r7, r0, lsl #26
    85dc:	00001600 	andeq	r1, r0, r0, lsl #12
    85e0:	05530000 	ldrbeq	r0, [r3, #-0]
    85e4:	17000000 	strne	r0, [r0, -r0]
    85e8:	0018a801 	andseq	sl, r8, r1, lsl #16
    85ec:	01ca0100 	biceq	r0, sl, r0, lsl #2
    85f0:	04bf0113 	ldrteq	r0, [pc], #275	; 85f8 <_Min_Heap_Size+0x7df8>
	...
    85fc:	581f0000 	ldmdapl	pc, {}	; <UNPREDICTABLE>
    8600:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8604:	15000006 	strne	r0, [r0, #-6]
    8608:	00001999 	muleq	r0, r9, r9
    860c:	3201ca01 	andcc	ip, r1, #4096	; 0x1000
    8610:	0000062e 	andeq	r0, r0, lr, lsr #12
    8614:	0000586b 	andeq	r5, r0, fp, ror #16
    8618:	00005863 	andeq	r5, r0, r3, ror #16
    861c:	00189f15 	andseq	r9, r8, r5, lsl pc
    8620:	01ca0100 	biceq	r0, sl, r0, lsl #2
    8624:	00009f42 	andeq	r9, r0, r2, asr #30
    8628:	0058a700 	subseq	sl, r8, r0, lsl #14
    862c:	00589f00 	subseq	r9, r8, r0, lsl #30
    8630:	6d741800 	ldclvs	8, cr1, [r4, #-0]
    8634:	cc010070 	stcgt	0, cr0, [r1], {112}	; 0x70
    8638:	00b71101 	adcseq	r1, r7, r1, lsl #2
    863c:	91020000 	mrsls	r0, (UNDEF: 2)
    8640:	0000196c 	andeq	r1, r0, ip, ror #18
    8644:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8648:	011a0000 	tsteq	sl, r0
    864c:	04030550 	streq	r0, [r3], #-1360	; 0xfffffab0
    8650:	1a08002d 	bne	20870c <_Min_Heap_Size+0x207f0c>
    8654:	0a035101 	beq	dca60 <_Min_Heap_Size+0xdc260>
    8658:	000001cf 	andeq	r0, r0, pc, asr #3
    865c:	01f3041b 	mvnseq	r0, fp, lsl r4
    8660:	01140000 	tsteq	r4, r0
    8664:	000018d2 	ldrdeq	r1, [r0], -r2
    8668:	0601b101 	streq	fp, [r1], -r1, lsl #2
    866c:	00000001 	andeq	r0, r0, r1
    8670:	00000000 	andeq	r0, r0, r0
    8674:	0058e100 	subseq	lr, r8, r0, lsl #2
    8678:	06aa0100 	strteq	r0, [sl], r0, lsl #2
    867c:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    8680:	01000019 	tsteq	r0, r9, lsl r0
    8684:	2e2701b1 	mcrcs	1, 1, r0, cr7, cr1, {5}
    8688:	09000006 	stmdbeq	r0, {r1, r2}
    868c:	01000059 	qaddeq	r0, r9, r0
    8690:	15000059 	strne	r0, [r0, #-89]	; 0xffffffa7
    8694:	0000189f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    8698:	3701b101 	strcc	fp, [r1, -r1, lsl #2]
    869c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    86a0:	00005945 	andeq	r5, r0, r5, asr #18
    86a4:	0000593d 	andeq	r5, r0, sp, lsr r9
    86a8:	72646f1c 	rsbvc	r6, r4, #28, 30	; 0x70
    86ac:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    86b0:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    86b4:	00598100 	subseq	r8, r9, r0, lsl #2
    86b8:	00597f00 	subseq	r7, r9, r0, lsl #30
    86bc:	00001900 	andeq	r1, r0, r0, lsl #18
    86c0:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    86c4:	011a0000 	tsteq	sl, r0
    86c8:	04030550 	streq	r0, [r3], #-1360	; 0xfffffab0
    86cc:	1a08002d 	bne	208788 <_Min_Heap_Size+0x207f88>
    86d0:	0a035101 	beq	dcadc <_Min_Heap_Size+0xdc2dc>
    86d4:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    86d8:	19100114 	ldmdbne	r0, {r2, r4, r8}
    86dc:	9a010000 	bls	486e4 <_Min_Heap_Size+0x47ee4>
    86e0:	00010601 	andeq	r0, r1, r1, lsl #12
    86e4:	00000000 	andeq	r0, r0, r0
    86e8:	94000000 	strls	r0, [r0], #-0
    86ec:	01000059 	qaddeq	r0, r9, r0
    86f0:	0000073e 	andeq	r0, r0, lr, lsr r7
    86f4:	00199915 	andseq	r9, r9, r5, lsl r9
    86f8:	019a0100 	orrseq	r0, sl, r0, lsl #2
    86fc:	00062e26 	andeq	r2, r6, r6, lsr #28
    8700:	0059bc00 	subseq	fp, r9, r0, lsl #24
    8704:	0059b400 	subseq	fp, r9, r0, lsl #8
    8708:	189f1500 	ldmne	pc, {r8, sl, ip}	; <UNPREDICTABLE>
    870c:	9a010000 	bls	48714 <_Min_Heap_Size+0x47f14>
    8710:	009f3601 	addseq	r3, pc, r1, lsl #12
    8714:	59f80000 	ldmibpl	r8!, {}^	; <UNPREDICTABLE>
    8718:	59f00000 	ldmibpl	r0!, {}^	; <UNPREDICTABLE>
    871c:	e6150000 	ldr	r0, [r5], -r0
    8720:	01000019 	tsteq	r0, r9, lsl r0
    8724:	474e019a 			; <UNDEFINED> instruction: 0x474e019a
    8728:	3a000005 	bcc	8744 <_Min_Heap_Size+0x7f44>
    872c:	3200005a 	andcc	r0, r0, #90	; 0x5a
    8730:	1d00005a 	stcne	0, cr0, [r0, #-360]	; 0xfffffe98
    8734:	00000000 	andeq	r0, r0, r0
    8738:	000009ce 	andeq	r0, r0, lr, asr #19
    873c:	00000723 	andeq	r0, r0, r3, lsr #14
    8740:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8744:	002d0403 	eoreq	r0, sp, r3, lsl #8
    8748:	51011a08 	tstpl	r1, r8, lsl #20
    874c:	019d0a03 	orrseq	r0, sp, r3, lsl #20
    8750:	00001900 	andeq	r1, r0, r0, lsl #18
    8754:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8758:	011a0000 	tsteq	sl, r0
    875c:	04030550 	streq	r0, [r3], #-1360	; 0xfffffab0
    8760:	1a08002d 	bne	20881c <_Min_Heap_Size+0x20801c>
    8764:	0a035101 	beq	dcb70 <_Min_Heap_Size+0xdc370>
    8768:	0000019e 	muleq	r0, lr, r1
    876c:	18ff0117 	ldmne	pc!, {r0, r1, r2, r4, r8}^	; <UNPREDICTABLE>
    8770:	77010000 	strvc	r0, [r1, -r0]
    8774:	47010f01 	strmi	r0, [r1, -r1, lsl #30]
    8778:	00000005 	andeq	r0, r0, r5
    877c:	00000000 	andeq	r0, r0, r0
    8780:	74000000 	strvc	r0, [r0], #-0
    8784:	0100005a 	qaddeq	r0, sl, r0
    8788:	000007b8 			; <UNDEFINED> instruction: 0x000007b8
    878c:	00199915 	andseq	r9, r9, r5, lsl r9
    8790:	01770100 	cmneq	r7, r0, lsl #2
    8794:	00062e2e 	andeq	r2, r6, lr, lsr #28
    8798:	005a9c00 	subseq	r9, sl, r0, lsl #24
    879c:	005a9400 	subseq	r9, sl, r0, lsl #8
    87a0:	189f1500 	ldmne	pc, {r8, sl, ip}	; <UNPREDICTABLE>
    87a4:	77010000 	strvc	r0, [r1, -r0]
    87a8:	009f3e01 	addseq	r3, pc, r1, lsl #28
    87ac:	5ad80000 	bpl	ff6087b4 <_estack+0xdf607574>
    87b0:	5ad00000 	bpl	ff4087b8 <_estack+0xdf407578>
    87b4:	281e0000 	ldmdacs	lr, {}	; <UNPREDICTABLE>
    87b8:	01000019 	tsteq	r0, r9, lsl r0
    87bc:	47110179 			; <UNDEFINED> instruction: 0x47110179
    87c0:	14000005 	strne	r0, [r0], #-5
    87c4:	1200005b 	andne	r0, r0, #91	; 0x5b
    87c8:	1900005b 	stmdbne	r0, {r0, r1, r3, r4, r6}
    87cc:	00000000 	andeq	r0, r0, r0
    87d0:	000009ce 	andeq	r0, r0, lr, asr #19
    87d4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    87d8:	002d0403 	eoreq	r0, sp, r3, lsl #8
    87dc:	51011a08 	tstpl	r1, r8, lsl #20
    87e0:	017c0a03 	cmneq	ip, r3, lsl #20
    87e4:	01140000 	tsteq	r4, r0
    87e8:	00000b50 	andeq	r0, r0, r0, asr fp
    87ec:	06012601 	streq	r2, [r1], -r1, lsl #12
    87f0:	00000001 	andeq	r0, r0, r1
    87f4:	00000000 	andeq	r0, r0, r0
    87f8:	005b2700 	subseq	r2, fp, r0, lsl #14
    87fc:	086d0100 	stmdaeq	sp!, {r8}^
    8800:	99150000 	ldmdbls	r5, {}	; <UNPREDICTABLE>
    8804:	01000019 	tsteq	r0, r9, lsl r0
    8808:	2e250126 	sufcssp	f0, f5, f6
    880c:	4d000006 	stcmi	0, cr0, [r0, #-24]	; 0xffffffe8
    8810:	4700005b 	smlsdmi	r0, fp, r0, r0
    8814:	1500005b 	strne	r0, [r0, #-91]	; 0xffffffa5
    8818:	0000189f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
    881c:	35012601 	strcc	r2, [r1, #-1537]	; 0xfffff9ff
    8820:	000000ab 	andeq	r0, r0, fp, lsr #1
    8824:	00005b7f 	andeq	r5, r0, pc, ror fp
    8828:	00005b79 	andeq	r5, r0, r9, ror fp
    882c:	0018bb1e 	andseq	fp, r8, lr, lsl fp
    8830:	01280100 			; <UNDEFINED> instruction: 0x01280100
    8834:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    8838:	005bad00 	subseq	sl, fp, r0, lsl #26
    883c:	005bab00 	subseq	sl, fp, r0, lsl #22
    8840:	18b91e00 	ldmne	r9!, {r9, sl, fp, ip}
    8844:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    8848:	00ab0c01 	adceq	r0, fp, r1, lsl #24
    884c:	5bc80000 	blpl	ff208854 <_estack+0xdf207614>
    8850:	5bc00000 	blpl	ff008858 <_estack+0xdf007618>
    8854:	7b1e0000 	blvc	78885c <_Min_Heap_Size+0x78805c>
    8858:	01000019 	tsteq	r0, r9, lsl r0
    885c:	ab0c012a 	blge	308d0c <_Min_Heap_Size+0x30850c>
    8860:	0b000000 	bleq	8868 <_Min_Heap_Size+0x8068>
    8864:	0100005c 	qaddeq	r0, ip, r0
    8868:	1c00005c 	stcne	0, cr0, [r0], {92}	; 0x5c
    886c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    8870:	0c012b01 			; <UNDEFINED> instruction: 0x0c012b01
    8874:	000000ab 	andeq	r0, r0, fp, lsr #1
    8878:	00005c5f 	andeq	r5, r0, pc, asr ip
    887c:	00005c57 	andeq	r5, r0, r7, asr ip
    8880:	00000019 	andeq	r0, r0, r9, lsl r0
    8884:	0009ce00 	andeq	ip, r9, r0, lsl #28
    8888:	50011a00 	andpl	r1, r1, r0, lsl #20
    888c:	2d040305 	stccs	3, cr0, [r4, #-20]	; 0xffffffec
    8890:	011a0800 	tsteq	sl, r0, lsl #16
    8894:	2e0a0351 	mcrcs	3, 0, r0, cr10, cr1, {2}
    8898:	1f000001 	svcne	0x00000001
    889c:	000ba001 	andeq	sl, fp, r1
    88a0:	06a40100 	strteq	r0, [r4], r0, lsl #2
    88a4:	00111801 	andseq	r1, r1, r1, lsl #16
    88a8:	00140008 	andseq	r0, r4, r8
    88ac:	005c9408 	subseq	r9, ip, r8, lsl #8
    88b0:	09c80100 	stmibeq	r8, {r8}^
    88b4:	99200000 	stmdbls	r0!, {}	; <UNPREDICTABLE>
    88b8:	01000019 	tsteq	r0, r9, lsl r0
    88bc:	062e23a4 	strteq	r2, [lr], -r4, lsr #7
    88c0:	5cd20000 	ldclpl	0, cr0, [r2], {0}
    88c4:	5ccc0000 	stclpl	0, cr0, [ip], {0}
    88c8:	a4200000 	strtge	r0, [r0], #-0
    88cc:	0100000b 	tsteq	r0, fp
    88d0:	09c83ca4 	stmibeq	r8, {r2, r5, r7, sl, fp, ip, sp}^
    88d4:	5d040000 	stcpl	0, cr0, [r4, #-0]
    88d8:	5cfe0000 	ldclpl	0, cr0, [lr]
    88dc:	bb210000 	bllt	8488e4 <_Min_Heap_Size+0x8480e4>
    88e0:	01000018 	tsteq	r0, r8, lsl r0
    88e4:	00ab0ca6 	adceq	r0, fp, r6, lsr #25
    88e8:	5d320000 	ldcpl	0, cr0, [r2, #-0]
    88ec:	5d300000 	ldcpl	0, cr0, [r0, #-0]
    88f0:	b9210000 	stmdblt	r1!, {}	; <UNPREDICTABLE>
    88f4:	01000018 	tsteq	r0, r8, lsl r0
    88f8:	00ab0ca7 	adceq	r0, fp, r7, lsr #25
    88fc:	5d570000 	ldclpl	0, cr0, [r7, #-0]
    8900:	5d450000 	stclpl	0, cr0, [r5, #-0]
    8904:	7b210000 	blvc	84890c <_Min_Heap_Size+0x84810c>
    8908:	01000019 	tsteq	r0, r9, lsl r0
    890c:	00ab0ca8 	adceq	r0, fp, r8, lsr #25
    8910:	5dde0000 	ldclpl	0, cr0, [lr]
    8914:	5dd80000 	ldclpl	0, cr0, [r8]
    8918:	58210000 	stmdapl	r1!, {}	; <UNPREDICTABLE>
    891c:	01000019 	tsteq	r0, r9, lsl r0
    8920:	00ab0ca9 	adceq	r0, fp, r9, lsr #25
    8924:	5e380000 	cdppl	0, 3, cr0, cr8, cr0, {0}
    8928:	5e080000 	cdppl	0, 0, cr0, cr8, cr0, {0}
    892c:	5c220000 	stcpl	0, cr0, [r2], #-0
    8930:	74080013 	strvc	r0, [r8], #-19	; 0xffffffed
    8934:	1d080013 	stcne	0, cr0, [r8, #-76]	; 0xffffffb4
    8938:	23000009 	movwcs	r0, #9
    893c:	000001a5 	andeq	r0, r0, r5, lsr #3
    8940:	b709f101 	strlt	pc, [r9, -r1, lsl #2]
    8944:	02000000 	andeq	r0, r0, #0
    8948:	1d006491 	cfstrsne	mvf6, [r0, #-580]	; 0xfffffdbc
    894c:	08001170 	stmdaeq	r0, {r4, r5, r6, r8, ip}
    8950:	000009ce 	andeq	r0, r0, lr, asr #19
    8954:	0000093a 	andeq	r0, r0, sl, lsr r9
    8958:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    895c:	002d0403 	eoreq	r0, sp, r3, lsl #8
    8960:	51011a08 	tstpl	r1, r8, lsl #20
    8964:	00ac0802 	adceq	r0, ip, r2, lsl #16
    8968:	0011841d 	andseq	r8, r1, sp, lsl r4
    896c:	0009ce08 	andeq	ip, r9, r8, lsl #28
    8970:	00095700 	andeq	r5, r9, r0, lsl #14
    8974:	50011a00 	andpl	r1, r1, r0, lsl #20
    8978:	2d040305 	stccs	3, cr0, [r4, #-20]	; 0xffffffec
    897c:	011a0800 	tsteq	sl, r0, lsl #16
    8980:	ad080251 	sfmge	f0, 4, [r8, #-324]	; 0xfffffebc
    8984:	11ca1d00 	bicne	r1, sl, r0, lsl #26
    8988:	09ce0800 	stmibeq	lr, {fp}^
    898c:	09740000 	ldmdbeq	r4!, {}^	; <UNPREDICTABLE>
    8990:	011a0000 	tsteq	sl, r0
    8994:	04030550 	streq	r0, [r3], #-1360	; 0xfffffab0
    8998:	1a08002d 	bne	208a54 <_Min_Heap_Size+0x208254>
    899c:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    89a0:	021d00ae 	andseq	r0, sp, #174	; 0xae
    89a4:	ce080012 	mcrgt	0, 0, r0, cr8, cr2, {0}
    89a8:	91000009 	tstls	r0, r9
    89ac:	1a000009 	bne	89d8 <_Min_Heap_Size+0x81d8>
    89b0:	03055001 	movweq	r5, #20481	; 0x5001
    89b4:	08002d04 	stmdaeq	r0, {r2, r8, sl, fp, sp}
    89b8:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    89bc:	1d00c008 	stcne	0, cr12, [r0, #-32]	; 0xffffffe0
    89c0:	0800120c 	stmdaeq	r0, {r2, r3, r9, ip}
    89c4:	000009ce 	andeq	r0, r0, lr, asr #19
    89c8:	000009ae 	andeq	r0, r0, lr, lsr #19
    89cc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    89d0:	002d0403 	eoreq	r0, sp, r3, lsl #8
    89d4:	51011a08 	tstpl	r1, r8, lsl #20
    89d8:	00d10802 	sbcseq	r0, r1, r2, lsl #16
    89dc:	00126c19 	andseq	r6, r2, r9, lsl ip
    89e0:	0009ce08 	andeq	ip, r9, r8, lsl #28
    89e4:	50011a00 	andpl	r1, r1, r0, lsl #20
    89e8:	2d040305 	stccs	3, cr0, [r4, #-20]	; 0xffffffec
    89ec:	011a0800 	tsteq	sl, r0, lsl #16
    89f0:	de080251 	mcrle	2, 0, r0, cr8, cr1, {2}
    89f4:	041b0000 	ldreq	r0, [fp], #-0
    89f8:	00000520 	andeq	r0, r0, r0, lsr #10
    89fc:	9b010124 	blls	48e94 <_Min_Heap_Size+0x48694>
    8a00:	9b000009 	blls	8a2c <_Min_Heap_Size+0x822c>
    8a04:	08000009 	stmdaeq	r0, {r0, r3}
    8a08:	000801e6 	andeq	r0, r8, r6, ror #3
    8a0c:	00000dd3 	ldrdeq	r0, [r0], -r3
    8a10:	0fed0002 	svceq	0x00ed0002
    8a14:	01040000 	mrseq	r0, (UNDEF: 4)
    8a18:	00000519 	andeq	r0, r0, r9, lsl r5
    8a1c:	001aca0c 	andseq	ip, sl, ip, lsl #20
    8a20:	00082200 	andeq	r2, r8, r0, lsl #4
    8a24:	0003e000 	andeq	lr, r3, r0
	...
    8a30:	00688600 	rsbeq	r8, r8, r0, lsl #12
    8a34:	07080200 	streq	r0, [r8, -r0, lsl #4]
    8a38:	000000ba 	strheq	r0, [r0], -sl
    8a3c:	c4070402 	strgt	r0, [r7], #-1026	; 0xfffffbfe
    8a40:	02000000 	andeq	r0, r0, #0
    8a44:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    8a48:	72030000 	andvc	r0, r3, #0
    8a4c:	02000000 	andeq	r0, r0, #0
    8a50:	004a182b 	subeq	r1, sl, fp, lsr #16
    8a54:	01020000 	mrseq	r0, (UNDEF: 2)
    8a58:	00050b08 	andeq	r0, r5, r8, lsl #22
    8a5c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8a60:	000005d3 	ldrdeq	r0, [r0], -r3
    8a64:	37070202 	strcc	r0, [r7, -r2, lsl #4]
    8a68:	02000003 	andeq	r0, r0, #3
    8a6c:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    8a70:	91030000 	mrsls	r0, (UNDEF: 3)
    8a74:	02000002 	andeq	r0, r0, #2
    8a78:	0072194f 	rsbseq	r1, r2, pc, asr #18
    8a7c:	04020000 	streq	r0, [r2], #-0
    8a80:	0000bf07 	andeq	fp, r0, r7, lsl #30
    8a84:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    8a88:	000002ad 	andeq	r0, r0, sp, lsr #5
    8a8c:	69050404 	stmdbvs	r5, {r2, sl}
    8a90:	0300746e 	movweq	r7, #1134	; 0x46e
    8a94:	00000074 	andeq	r0, r0, r4, ror r0
    8a98:	3e131803 	cdpcc	8, 1, cr1, cr3, cr3, {0}
    8a9c:	05000000 	streq	r0, [r0, #-0]
    8aa0:	00000087 	andeq	r0, r0, r7, lsl #1
    8aa4:	00029303 	andeq	r9, r2, r3, lsl #6
    8aa8:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    8aac:	00000066 	andeq	r0, r0, r6, rrx
    8ab0:	00009806 	andeq	r9, r0, r6, lsl #16
    8ab4:	17900700 	ldrne	r0, [r0, r0, lsl #14]
    8ab8:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    8abc:	00009811 	andeq	r9, r0, r1, lsl r8
    8ac0:	08010100 	stmdaeq	r1, {r8}
    8ac4:	00000093 	muleq	r0, r3, r0
    8ac8:	000000c7 	andeq	r0, r0, r7, asr #1
    8acc:	00003009 	andeq	r3, r0, r9
    8ad0:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    8ad4:	000000b7 	strheq	r0, [r0], -r7
    8ad8:	4404180a 	strmi	r1, [r4], #-2058	; 0xfffff7f6
    8adc:	01360901 	teqeq	r6, r1, lsl #18
    8ae0:	430b0000 	movwmi	r0, #45056	; 0xb000
    8ae4:	46040052 			; <UNDEFINED> instruction: 0x46040052
    8ae8:	00a41101 	adceq	r1, r4, r1, lsl #2
    8aec:	23020000 	movwcs	r0, #8192	; 0x2000
    8af0:	06fa0c00 	ldrbteq	r0, [sl], r0, lsl #24
    8af4:	47040000 	strmi	r0, [r4, -r0]
    8af8:	00a41101 	adceq	r1, r4, r1, lsl #2
    8afc:	23020000 	movwcs	r0, #8192	; 0x2000
    8b00:	41500b04 	cmpmi	r0, r4, lsl #22
    8b04:	48040052 	stmdami	r4, {r1, r4, r6}
    8b08:	00a41101 	adceq	r1, r4, r1, lsl #2
    8b0c:	23020000 	movwcs	r0, #8192	; 0x2000
    8b10:	004e0c08 	subeq	r0, lr, r8, lsl #24
    8b14:	49040000 	stmdbmi	r4, {}	; <UNPREDICTABLE>
    8b18:	00a41101 	adceq	r1, r4, r1, lsl #2
    8b1c:	23020000 	movwcs	r0, #8192	; 0x2000
    8b20:	073b0c0c 	ldreq	r0, [fp, -ip, lsl #24]!
    8b24:	4a040000 	bmi	108b2c <_Min_Heap_Size+0x10832c>
    8b28:	00a41101 	adceq	r1, r4, r1, lsl #2
    8b2c:	23020000 	movwcs	r0, #8192	; 0x2000
    8b30:	43460b10 	movtmi	r0, #27408	; 0x6b10
    8b34:	4b040052 	blmi	108c84 <_Min_Heap_Size+0x108484>
    8b38:	00a41101 	adceq	r1, r4, r1, lsl #2
    8b3c:	23020000 	movwcs	r0, #8192	; 0x2000
    8b40:	140d0014 	strne	r0, [sp], #-20	; 0xffffffec
    8b44:	04000007 	streq	r0, [r0], #-7
    8b48:	cc03014c 	stfgts	f0, [r3], {76}	; 0x4c
    8b4c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8b50:	004a0107 	subeq	r0, sl, r7, lsl #2
    8b54:	b9050000 	stmdblt	r5, {}	; <UNPREDICTABLE>
    8b58:	00015e01 	andeq	r5, r1, r1, lsl #28
    8b5c:	02e40f00 	rsceq	r0, r4, #0, 30
    8b60:	10000000 	andne	r0, r0, r0
    8b64:	00544553 	subseq	r4, r4, r3, asr r5
    8b68:	08020001 	stmdaeq	r2, {r0}
    8b6c:	00066404 	andeq	r6, r6, r4, lsl #8
    8b70:	01070e00 	tsteq	r7, r0, lsl #28
    8b74:	0000004a 	andeq	r0, r0, sl, asr #32
    8b78:	8c012706 	stchi	7, cr2, [r1], {6}
    8b7c:	0f000001 	svceq	0x00000001
    8b80:	00000310 	andeq	r0, r0, r0, lsl r3
    8b84:	06520f00 	ldrbeq	r0, [r2], -r0, lsl #30
    8b88:	0f010000 	svceq	0x00010000
    8b8c:	00000876 	andeq	r0, r0, r6, ror r8
    8b90:	02f10f02 	rscseq	r0, r1, #2, 30
    8b94:	00030000 	andeq	r0, r3, r0
    8b98:	00129003 	andseq	r9, r2, r3
    8b9c:	032c0600 			; <UNDEFINED> instruction: 0x032c0600
    8ba0:	00000165 	andeq	r0, r0, r5, ror #2
    8ba4:	4a01070e 	bmi	4a7e4 <_Min_Heap_Size+0x49fe4>
    8ba8:	06000000 	streq	r0, [r0], -r0
    8bac:	01b30132 			; <UNDEFINED> instruction: 0x01b30132
    8bb0:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    8bb4:	00000008 	andeq	r0, r0, r8
    8bb8:	0004340f 	andeq	r3, r4, pc, lsl #8
    8bbc:	03000100 	movweq	r0, #256	; 0x100
    8bc0:	000001ac 	andeq	r0, r0, ip, lsr #3
    8bc4:	98033506 	stmdals	r3, {r1, r2, r8, sl, ip, sp}
    8bc8:	11000001 	tstne	r0, r1
    8bcc:	09300730 	ldmdbeq	r0!, {r4, r5, r8, r9, sl}
    8bd0:	0000027d 	andeq	r0, r0, sp, ror r2
    8bd4:	00050312 	andeq	r0, r5, r2, lsl r3
    8bd8:	0c320700 	ldceq	7, cr0, [r2], #-0
    8bdc:	00000098 	muleq	r0, r8, r0
    8be0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    8be4:	0000029c 	muleq	r0, ip, r2
    8be8:	980c3507 	stmdals	ip, {r0, r1, r2, r8, sl, ip, sp}
    8bec:	02000000 	andeq	r0, r0, #0
    8bf0:	f1120423 			; <UNDEFINED> instruction: 0xf1120423
    8bf4:	07000001 	streq	r0, [r0, -r1]
    8bf8:	00980c39 	addseq	r0, r8, r9, lsr ip
    8bfc:	23020000 	movwcs	r0, #8192	; 0x2000
    8c00:	06c51208 	strbeq	r1, [r5], r8, lsl #4
    8c04:	3c070000 	stccc	0, cr0, [r7], {-0}
    8c08:	0000980c 	andeq	r9, r0, ip, lsl #16
    8c0c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8c10:	00074012 	andeq	r4, r7, r2, lsl r0
    8c14:	0c3f0700 	ldceq	7, cr0, [pc], #-0	; 8c1c <_Min_Heap_Size+0x841c>
    8c18:	00000098 	muleq	r0, r8, r0
    8c1c:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    8c20:	00000396 	muleq	r0, r6, r3
    8c24:	980c4207 	stmdals	ip, {r0, r1, r2, r9, lr}
    8c28:	02000000 	andeq	r0, r0, #0
    8c2c:	42121423 	andsmi	r1, r2, #587202560	; 0x23000000
    8c30:	07000006 	streq	r0, [r0, -r6]
    8c34:	00980c45 	addseq	r0, r8, r5, asr #24
    8c38:	23020000 	movwcs	r0, #8192	; 0x2000
    8c3c:	1f671218 	svcne	0x00671218
    8c40:	4a070000 	bmi	1c8c48 <_Min_Heap_Size+0x1c8448>
    8c44:	0000980c 	andeq	r9, r0, ip, lsl #16
    8c48:	1c230200 	sfmne	f0, 4, [r3], #-0
    8c4c:	00063e12 	andeq	r3, r6, r2, lsl lr
    8c50:	0c4d0700 	mcrreq	7, 0, r0, sp, cr0
    8c54:	00000098 	muleq	r0, r8, r0
    8c58:	12202302 	eorne	r2, r0, #134217728	; 0x8000000
    8c5c:	00000670 	andeq	r0, r0, r0, ror r6
    8c60:	980c5207 	stmdals	ip, {r0, r1, r2, r9, ip, lr}
    8c64:	02000000 	andeq	r0, r0, #0
    8c68:	04122423 	ldreq	r2, [r2], #-1059	; 0xfffffbdd
    8c6c:	07000002 	streq	r0, [r0, -r2]
    8c70:	00980c55 	addseq	r0, r8, r5, asr ip
    8c74:	23020000 	movwcs	r0, #8192	; 0x2000
    8c78:	06cc1228 	strbeq	r1, [ip], r8, lsr #4
    8c7c:	5b070000 	blpl	1c8c84 <_Min_Heap_Size+0x1c8484>
    8c80:	0000980c 	andeq	r9, r0, ip, lsl #16
    8c84:	2c230200 	sfmcs	f0, 4, [r3], #-0
    8c88:	00530300 	subseq	r0, r3, r0, lsl #6
    8c8c:	60070000 	andvs	r0, r7, r0
    8c90:	0001bf02 	andeq	fp, r1, r2, lsl #30
    8c94:	01070e00 	tsteq	r7, r0, lsl #28
    8c98:	0000004a 	andeq	r0, r0, sl, asr #32
    8c9c:	bc016707 	stclt	7, cr6, [r1], {7}
    8ca0:	0f000002 	svceq	0x00000002
    8ca4:	000002d6 	ldrdeq	r0, [r0], -r6
    8ca8:	03db0f00 	bicseq	r0, fp, #0, 30
    8cac:	0f010000 	svceq	0x00010000
    8cb0:	000005dd 	ldrdeq	r0, [r0], -sp
    8cb4:	07bc0f02 	ldreq	r0, [ip, r2, lsl #30]!
    8cb8:	0f030000 	svceq	0x00030000
    8cbc:	0000021c 	andeq	r0, r0, ip, lsl r2
    8cc0:	03600f04 	cmneq	r0, #4, 30
    8cc4:	00050000 	andeq	r0, r5, r0
    8cc8:	0005be03 	andeq	fp, r5, r3, lsl #28
    8ccc:	026e0700 	rsbeq	r0, lr, #0, 14
    8cd0:	00000289 	andeq	r0, r0, r9, lsl #5
    8cd4:	0002bc06 	andeq	fp, r2, r6, lsl #24
    8cd8:	01070e00 	tsteq	r7, r0, lsl #28
    8cdc:	0000004a 	andeq	r0, r0, sl, asr #32
    8ce0:	e8017407 	stmda	r1, {r0, r1, r2, sl, ip, sp, lr}
    8ce4:	0f000002 	svceq	0x00000002
    8ce8:	00001b1f 	andeq	r1, r0, pc, lsl fp
    8cec:	1aa60f00 	bne	fe98c8f4 <_estack+0xde98b6b4>
    8cf0:	00010000 	andeq	r0, r1, r0
    8cf4:	001b0203 	andseq	r0, fp, r3, lsl #4
    8cf8:	02770700 	rsbseq	r0, r7, #0, 14
    8cfc:	000002cd 	andeq	r0, r0, sp, asr #5
    8d00:	4a01070e 	bmi	4a940 <_Min_Heap_Size+0x4a140>
    8d04:	07000000 	streq	r0, [r0, -r0]
    8d08:	032d017d 			; <UNDEFINED> instruction: 0x032d017d
    8d0c:	580f0000 	stmdapl	pc, {}	; <UNPREDICTABLE>
    8d10:	0000001a 	andeq	r0, r0, sl, lsl r0
    8d14:	001c230f 	andseq	r2, ip, pc, lsl #6
    8d18:	5d0f0100 	stfpls	f0, [pc, #-0]	; 8d20 <_Min_Heap_Size+0x8520>
    8d1c:	0200001b 	andeq	r0, r0, #27
    8d20:	001c3f0f 	andseq	r3, ip, pc, lsl #30
    8d24:	8d0f0300 	stchi	3, cr0, [pc, #-0]	; 8d2c <_Min_Heap_Size+0x852c>
    8d28:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    8d2c:	0019f50f 	andseq	pc, r9, pc, lsl #10
    8d30:	e10f0500 	tst	pc, r0, lsl #10
    8d34:	0600001b 			; <UNDEFINED> instruction: 0x0600001b
    8d38:	1b430300 	blne	10c9940 <_Min_Heap_Size+0x10c9140>
    8d3c:	85070000 	strhi	r0, [r7, #-0]
    8d40:	0002f402 	andeq	pc, r2, r2, lsl #8
    8d44:	062a1300 	strteq	r1, [sl], -r0, lsl #6
    8d48:	07600000 	strbeq	r0, [r0, -r0]!
    8d4c:	0419108a 	ldreq	r1, [r9], #-138	; 0xffffff76
    8d50:	47120000 	ldrmi	r0, [r2, -r0]
    8d54:	07000004 	streq	r0, [r0, -r4]
    8d58:	04191f8c 	ldreq	r1, [r9], #-3980	; 0xfffff074
    8d5c:	23020000 	movwcs	r0, #8192	; 0x2000
    8d60:	1a161200 	bne	58d568 <_Min_Heap_Size+0x58cd68>
    8d64:	8e070000 	cdphi	0, 0, cr0, cr7, cr0, {0}
    8d68:	00027d1e 	andeq	r7, r2, lr, lsl sp
    8d6c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    8d70:	00027712 	andeq	r7, r2, r2, lsl r7
    8d74:	1e900700 	cdpne	7, 9, cr0, cr0, cr0, {0}
    8d78:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    8d7c:	12342302 	eorsne	r2, r4, #134217728	; 0x8000000
    8d80:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8d84:	c81e9207 	ldmdagt	lr, {r0, r1, r2, r9, ip, pc}
    8d88:	02000002 	andeq	r0, r0, #2
    8d8c:	70123523 	andsvc	r3, r2, r3, lsr #10
    8d90:	07000002 	streq	r0, [r0, -r2]
    8d94:	041f1f94 	ldreq	r1, [pc], #-3988	; 8d9c <_Min_Heap_Size+0x859c>
    8d98:	23020000 	movwcs	r0, #8192	; 0x2000
    8d9c:	08ac1238 	stmiaeq	ip!, {r3, r4, r5, r9, ip}
    8da0:	96070000 	strls	r0, [r7], -r0
    8da4:	00043321 	andeq	r3, r4, r1, lsr #6
    8da8:	3c230200 	sfmcc	f0, 4, [r3], #-0
    8dac:	0001c812 	andeq	ip, r1, r2, lsl r8
    8db0:	21980700 	orrscs	r0, r8, r0, lsl #14
    8db4:	00000433 	andeq	r0, r0, r3, lsr r4
    8db8:	12402302 	subne	r2, r0, #134217728	; 0x8000000
    8dbc:	00000186 	andeq	r0, r0, r6, lsl #3
    8dc0:	33219a07 			; <UNDEFINED> instruction: 0x33219a07
    8dc4:	02000004 	andeq	r0, r0, #4
    8dc8:	ec124423 	cfldrs	mvf4, [r2], {35}	; 0x23
    8dcc:	07000004 	streq	r0, [r0, -r4]
    8dd0:	0433219c 	ldrteq	r2, [r3], #-412	; 0xfffffe64
    8dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    8dd8:	04501248 	ldrbeq	r1, [r0], #-584	; 0xfffffdb8
    8ddc:	9e070000 	cdpls	0, 0, cr0, cr7, cr0, {0}
    8de0:	00043321 	andeq	r3, r4, r1, lsr #6
    8de4:	4c230200 	sfmmi	f0, 4, [r3], #-0
    8de8:	00089a12 	andeq	r9, r8, r2, lsl sl
    8dec:	21a00700 	lslcs	r0, r0, #14
    8df0:	00000433 	andeq	r0, r0, r3, lsr r4
    8df4:	12502302 	subsne	r2, r0, #134217728	; 0x8000000
    8df8:	0000037d 	andeq	r0, r0, sp, ror r3
    8dfc:	a41ea207 	ldrge	sl, [lr], #-519	; 0xfffffdf9
    8e00:	02000000 	andeq	r0, r0, #0
    8e04:	5e125423 	cfmuldpl	mvd5, mvd2, mvd3
    8e08:	07000002 	streq	r0, [r0, -r2]
    8e0c:	00981ea4 	addseq	r1, r8, r4, lsr #29
    8e10:	23020000 	movwcs	r0, #8192	; 0x2000
    8e14:	03041258 	movweq	r1, #16984	; 0x4258
    8e18:	a6070000 	strge	r0, [r7], -r0
    8e1c:	0000981e 	andeq	r9, r0, lr, lsl r8
    8e20:	5c230200 	sfmpl	f0, 4, [r3], #-0
    8e24:	36041400 	strcc	r1, [r4], -r0, lsl #8
    8e28:	15000001 	strne	r0, [r0, #-1]
    8e2c:	2d011604 	stccs	6, cr1, [r1, #-16]
    8e30:	17000004 	strne	r0, [r0, -r4]
    8e34:	0000042d 	andeq	r0, r0, sp, lsr #8
    8e38:	39041400 	stmdbcc	r4, {sl, ip}
    8e3c:	14000003 	strne	r0, [r0], #-3
    8e40:	00042104 	andeq	r2, r4, r4, lsl #2
    8e44:	062c0300 	strteq	r0, [ip], -r0, lsl #6
    8e48:	a8070000 	stmdage	r7, {}	; <UNPREDICTABLE>
    8e4c:	00033902 	andeq	r3, r3, r2, lsl #18
    8e50:	39041400 	stmdbcc	r4, {sl, ip}
    8e54:	11000004 	tstne	r0, r4
    8e58:	096f010c 	stmdbeq	pc!, {r2, r3, r8}^	; <UNPREDICTABLE>
    8e5c:	00000482 	andeq	r0, r0, r2, lsl #9
    8e60:	52534918 	subspl	r4, r3, #24, 18	; 0x60000
    8e64:	11710100 	cmnne	r1, r0, lsl #2
    8e68:	000000a4 	andeq	r0, r0, r4, lsr #1
    8e6c:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    8e70:	00001a34 	andeq	r1, r0, r4, lsr sl
    8e74:	a4117201 	ldrge	r7, [r1], #-513	; 0xfffffdff
    8e78:	02000000 	andeq	r0, r0, #0
    8e7c:	85120423 	ldrhi	r0, [r2, #-1059]	; 0xfffffbdd
    8e80:	0100001b 	tsteq	r0, fp, lsl r0
    8e84:	00a41173 	adceq	r1, r4, r3, ror r1
    8e88:	23020000 	movwcs	r0, #8192	; 0x2000
    8e8c:	f8030008 			; <UNDEFINED> instruction: 0xf8030008
    8e90:	0100001b 	tsteq	r0, fp, lsl r0
    8e94:	044b0374 	strbeq	r0, [fp], #-884	; 0xfffffc8c
    8e98:	a0190000 	andsge	r0, r9, r0
    8e9c:	0100001b 	tsteq	r0, fp, lsl r0
    8ea0:	011a04bd 			; <UNDEFINED> instruction: 0x011a04bd
    8ea4:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    8eb0:	01007d02 	tsteq	r0, r2, lsl #26
    8eb4:	000004ec 	andeq	r0, r0, ip, ror #9
    8eb8:	0013191a 	andseq	r1, r3, sl, lsl r9
    8ebc:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
    8ec0:	00044540 	andeq	r4, r4, r0, asr #10
    8ec4:	005f8c00 	subseq	r8, pc, r0, lsl #24
    8ec8:	005f5000 	subseq	r5, pc, r0
    8ecc:	192b1b00 	stmdbne	fp!, {r8, r9, fp, ip}
    8ed0:	bf010000 	svclt	0x00010000
    8ed4:	018c1504 	orreq	r1, ip, r4, lsl #10
    8ed8:	610f0000 	mrsvs	r0, CPSR
    8edc:	610b0000 	mrsvs	r0, (UNDEF: 11)
    8ee0:	741c0000 	ldrvc	r0, [ip], #-0
    8ee4:	0100706d 	tsteq	r0, sp, rrx
    8ee8:	980c04c0 	stmdals	ip, {r6, r7, sl}
    8eec:	64000000 	strvs	r0, [r0], #-0
    8ef0:	2e000061 	cdpcs	0, 0, cr0, cr0, cr1, {3}
    8ef4:	00000061 	andeq	r0, r0, r1, rrx
    8ef8:	001c0b1d 	andseq	r0, ip, sp, lsl fp
    8efc:	04a10100 	strteq	r0, [r1], #256	; 0x100
    8f00:	00980111 	addseq	r0, r8, r1, lsl r1
	...
    8f0c:	62c70000 	sbcvs	r0, r7, #0
    8f10:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    8f14:	1a000005 	bne	8f30 <_Min_Heap_Size+0x8730>
    8f18:	00001319 	andeq	r1, r0, r9, lsl r3
    8f1c:	3c04a101 	stfccd	f2, [r4], {1}
    8f20:	00000445 	andeq	r0, r0, r5, asr #8
    8f24:	00006305 	andeq	r6, r0, r5, lsl #6
    8f28:	000062ff 	strdeq	r6, [r0], -pc	; <UNPREDICTABLE>
    8f2c:	001b351b 	andseq	r3, fp, fp, lsl r5
    8f30:	04a30100 	strteq	r0, [r3], #256	; 0x100
    8f34:	0000980c 	andeq	r9, r0, ip, lsl #16
    8f38:	00633500 	rsbeq	r3, r3, r0, lsl #10
    8f3c:	00633100 	rsbeq	r3, r3, r0, lsl #2
    8f40:	1a3e1e00 	bne	f90748 <_Min_Heap_Size+0xf8ff48>
    8f44:	a6010000 	strge	r0, [r1], -r0
    8f48:	00c71804 	sbceq	r1, r7, r4, lsl #16
    8f4c:	03050000 	movweq	r0, #20480	; 0x5000
    8f50:	00000000 	andeq	r0, r0, r0
    8f54:	1abc1f00 	bne	fef10b5c <_estack+0xdef0f91c>
    8f58:	7f010000 	svcvc	0x00010000
    8f5c:	00010d04 	andeq	r0, r1, r4, lsl #26
    8f60:	00000000 	andeq	r0, r0, r0
    8f64:	70000000 	andvc	r0, r0, r0
    8f68:	01000063 	tsteq	r0, r3, rrx
    8f6c:	000005a7 	andeq	r0, r0, r7, lsr #11
    8f70:	00131920 	andseq	r1, r3, r0, lsr #18
    8f74:	047f0100 	ldrbteq	r0, [pc], #-256	; 8f7c <_Min_Heap_Size+0x877c>
    8f78:	0004452e 	andeq	r4, r4, lr, lsr #10
    8f7c:	20500100 	subscs	r0, r0, r0, lsl #2
    8f80:	00001c63 	andeq	r1, r0, r3, ror #24
    8f84:	3d047f01 	stccc	15, cr7, [r4, #-4]
    8f88:	00000098 	muleq	r0, r8, r0
    8f8c:	8a205101 	bhi	81d398 <_Min_Heap_Size+0x81cb98>
    8f90:	0100001b 	tsteq	r0, fp, lsl r0
    8f94:	9852047f 	ldmdals	r2, {r0, r1, r2, r3, r4, r5, r6, sl}^
    8f98:	01000000 	mrseq	r0, (UNDEF: 0)
    8f9c:	1c6e1a52 			; <UNDEFINED> instruction: 0x1c6e1a52
    8fa0:	7f010000 	svcvc	0x00010000
    8fa4:	00986704 	addseq	r6, r8, r4, lsl #14
    8fa8:	63b20000 			; <UNDEFINED> instruction: 0x63b20000
    8fac:	63a80000 			; <UNDEFINED> instruction: 0x63a80000
    8fb0:	21000000 	mrscs	r0, (UNDEF: 0)
    8fb4:	0015f701 	andseq	pc, r5, r1, lsl #14
    8fb8:	04650100 	strbteq	r0, [r5], #-256	; 0xffffff00
    8fbc:	0098010a 	addseq	r0, r8, sl, lsl #2
	...
    8fc8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8fcc:	05dc0100 	ldrbeq	r0, [ip, #256]	; 0x100
    8fd0:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    8fd4:	01000013 	tsteq	r0, r3, lsl r0
    8fd8:	452e0465 	strmi	r0, [lr, #-1125]!	; 0xfffffb9b
    8fdc:	fd000004 	stc2	0, cr0, [r0, #-16]
    8fe0:	f9000063 			; <UNDEFINED> instruction: 0xf9000063
    8fe4:	00000063 	andeq	r0, r0, r3, rrx
    8fe8:	1c790121 	ldfnee	f0, [r9], #-132	; 0xffffff7c
    8fec:	5a010000 	bpl	48ff4 <_Min_Heap_Size+0x487f4>
    8ff0:	bc011604 	stclt	6, cr1, [r1], {4}
    8ff4:	00000002 	andeq	r0, r0, r2
    8ff8:	00000000 	andeq	r0, r0, r0
    8ffc:	02000000 	andeq	r0, r0, #0
    9000:	1101007d 	tstne	r1, sp, ror r0
    9004:	1a000006 	bne	9024 <_Min_Heap_Size+0x8824>
    9008:	00001319 	andeq	r1, r0, r9, lsl r3
    900c:	3a045a01 	bcc	11f818 <_Min_Heap_Size+0x11f018>
    9010:	00000445 	andeq	r0, r0, r5, asr #8
    9014:	00006422 	andeq	r6, r0, r2, lsr #8
    9018:	0000641e 	andeq	r6, r0, lr, lsl r4
    901c:	b3012100 	movwlt	r2, #4352	; 0x1100
    9020:	0100001b 	tsteq	r0, fp, lsl r0
    9024:	01130405 	tsteq	r3, r5, lsl #8
    9028:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9034:	01007d02 	tsteq	r0, r2, lsl #26
    9038:	0000066a 	andeq	r0, r0, sl, ror #12
    903c:	0013191a 	andseq	r1, r3, sl, lsl r9
    9040:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    9044:	00044541 	andeq	r4, r4, r1, asr #10
    9048:	00644b00 	rsbeq	r4, r4, r0, lsl #22
    904c:	00644300 	rsbeq	r4, r4, r0, lsl #6
    9050:	1b952000 	blne	fe551058 <_estack+0xde54fe18>
    9054:	05010000 	streq	r0, [r1, #-0]
    9058:	032d6104 			; <UNDEFINED> instruction: 0x032d6104
    905c:	51010000 	mrspl	r0, (UNDEF: 1)
    9060:	00192b1b 	andseq	r2, r9, fp, lsl fp
    9064:	04070100 	streq	r0, [r7], #-256	; 0xffffff00
    9068:	00018c15 	andeq	r8, r1, r5, lsl ip
    906c:	00648500 	rsbeq	r8, r4, r0, lsl #10
    9070:	00647f00 	rsbeq	r7, r4, r0, lsl #30
    9074:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9078:	00001a1b 	andeq	r1, r0, fp, lsl sl
    907c:	1303c701 	movwne	ip, #14081	; 0x3701
    9080:	00018c01 	andeq	r8, r1, r1, lsl #24
	...
    908c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9090:	0006d801 	andeq	sp, r6, r1, lsl #16
    9094:	13191a00 	tstne	r9, #0, 20
    9098:	c7010000 	strgt	r0, [r1, -r0]
    909c:	04453f03 	strbeq	r3, [r5], #-3843	; 0xfffff0fd
    90a0:	64b40000 	ldrtvs	r0, [r4], #0
    90a4:	64b00000 	ldrtvs	r0, [r0], #0
    90a8:	95200000 	strls	r0, [r0, #-0]!
    90ac:	0100001b 	tsteq	r0, fp, lsl r0
    90b0:	2d5f03c7 	ldclcs	3, cr0, [pc, #-796]	; 8d9c <_Min_Heap_Size+0x859c>
    90b4:	01000003 	tsteq	r0, r3
    90b8:	1c8a1a51 	vstmiane	sl, {s2-s82}
    90bc:	c7010000 	strgt	r0, [r1, -r0]
    90c0:	06e47303 	strbteq	r7, [r4], r3, lsl #6
    90c4:	64d80000 	ldrbvs	r0, [r8], #0
    90c8:	64d20000 	ldrbvs	r0, [r2], #0
    90cc:	2b1b0000 	blcs	6c90d4 <_Min_Heap_Size+0x6c88d4>
    90d0:	01000019 	tsteq	r0, r9, lsl r0
    90d4:	8c1503ca 	ldchi	3, cr0, [r5], {202}	; 0xca
    90d8:	0a000001 	beq	90e4 <_Min_Heap_Size+0x88e4>
    90dc:	04000065 	streq	r0, [r0], #-101	; 0xffffff9b
    90e0:	00000065 	andeq	r0, r0, r5, rrx
    90e4:	06e40116 	usateq	r0, #4, r6, lsl #2
    90e8:	45170000 	ldrmi	r0, [r7, #-0]
    90ec:	00000004 	andeq	r0, r0, r4
    90f0:	06d80414 			; <UNDEFINED> instruction: 0x06d80414
    90f4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    90f8:	00001bce 	andeq	r1, r0, lr, asr #23
    90fc:	0602ea01 	streq	lr, [r2], -r1, lsl #20
    9100:	00000001 	andeq	r0, r0, r1
    9104:	00000000 	andeq	r0, r0, r0
    9108:	00653500 	rsbeq	r3, r5, r0, lsl #10
    910c:	07e70100 	strbeq	r0, [r7, r0, lsl #2]!
    9110:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    9114:	01000013 	tsteq	r0, r3, lsl r0
    9118:	452c02ea 	strmi	r0, [ip, #-746]!	; 0xfffffd16
    911c:	7b000004 	blvc	9134 <_Min_Heap_Size+0x8934>
    9120:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
    9124:	1b000065 	blne	92c0 <_Min_Heap_Size+0x8ac0>
    9128:	00001a51 	andeq	r1, r0, r1, asr sl
    912c:	0c02ec01 	stceq	12, cr14, [r2], {1}
    9130:	00000098 	muleq	r0, r8, r0
    9134:	000065d5 	ldrdeq	r6, [r0], -r5
    9138:	000065d3 	ldrdeq	r6, [r0], -r3
    913c:	001c5d1e 	andseq	r5, ip, lr, lsl sp
    9140:	02ed0100 	rsceq	r0, sp, #0, 2
    9144:	0000a411 	andeq	sl, r0, r1, lsl r4
    9148:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    914c:	001c941b 	andseq	r9, ip, fp, lsl r4
    9150:	02ee0100 	rsceq	r0, lr, #0, 2
    9154:	0000980c 	andeq	r9, r0, ip, lsl #16
    9158:	0065ea00 	rsbeq	lr, r5, r0, lsl #20
    915c:	0065e800 	rsbeq	lr, r5, r0, lsl #16
    9160:	1c9c1b00 	vldmiane	ip, {d1-d0}
    9164:	f1010000 	setend	le
    9168:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    916c:	65ff0000 	ldrbvs	r0, [pc, #0]!	; 9174 <_Min_Heap_Size+0x8974>
    9170:	65fd0000 	ldrbvs	r0, [sp, #0]!
    9174:	00230000 	eoreq	r0, r3, r0
    9178:	7a000000 	bvc	9180 <_Min_Heap_Size+0x8980>
    917c:	24000007 	strcs	r0, [r0], #-7
    9180:	74025001 	strvc	r5, [r2], #-1
    9184:	00230000 	eoreq	r0, r3, r0
    9188:	8a000000 	bhi	9190 <_Min_Heap_Size+0x8990>
    918c:	24000007 	strcs	r0, [r0], #-7
    9190:	74025001 	strvc	r5, [r2], #-1
    9194:	00230000 	eoreq	r0, r3, r0
    9198:	9a000000 	bls	91a0 <_Min_Heap_Size+0x89a0>
    919c:	24000007 	strcs	r0, [r0], #-7
    91a0:	74025001 	strvc	r5, [r2], #-1
    91a4:	00230000 	eoreq	r0, r3, r0
    91a8:	aa000000 	bge	91b0 <_Min_Heap_Size+0x89b0>
    91ac:	24000007 	strcs	r0, [r0], #-7
    91b0:	74025001 	strvc	r5, [r2], #-1
    91b4:	00230000 	eoreq	r0, r3, r0
    91b8:	ba000000 	blt	91c0 <_Min_Heap_Size+0x89c0>
    91bc:	24000007 	strcs	r0, [r0], #-7
    91c0:	74025001 	strvc	r5, [r2], #-1
    91c4:	00230000 	eoreq	r0, r3, r0
    91c8:	ca000000 	bgt	91d0 <_Min_Heap_Size+0x89d0>
    91cc:	24000007 	strcs	r0, [r0], #-7
    91d0:	74025001 	strvc	r5, [r2], #-1
    91d4:	00230000 	eoreq	r0, r3, r0
    91d8:	da000000 	ble	91e0 <_Min_Heap_Size+0x89e0>
    91dc:	24000007 	strcs	r0, [r0], #-7
    91e0:	74025001 	strvc	r5, [r2], #-1
    91e4:	00250000 	eoreq	r0, r5, r0
    91e8:	24000000 	strcs	r0, [r0], #-0
    91ec:	74025001 	strvc	r5, [r2], #-1
    91f0:	14000000 	strne	r0, [r0], #-0
    91f4:	00048204 	andeq	r8, r4, r4, lsl #4
    91f8:	b0012600 	andlt	r2, r1, r0, lsl #12
    91fc:	0100001c 	tsteq	r0, ip, lsl r0
    9200:	01130262 	tsteq	r3, r2, ror #4
    9204:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9210:	00006612 	andeq	r6, r0, r2, lsl r6
    9214:	0008d101 	andeq	sp, r8, r1, lsl #2
    9218:	13191a00 	tstne	r9, #0, 20
    921c:	62010000 	andvs	r0, r1, #0
    9220:	04453e02 	strbeq	r3, [r5], #-3586	; 0xfffff1fe
    9224:	66360000 	ldrtvs	r0, [r6], -r0
    9228:	66320000 	ldrtvs	r0, [r2], -r0
    922c:	771a0000 	ldrvc	r0, [sl, -r0]
    9230:	0100001b 	tsteq	r0, fp, lsl r0
    9234:	e8610262 	stmda	r1!, {r1, r5, r6, r9}^
    9238:	58000002 	stmdapl	r0, {r1}
    923c:	54000066 	strpl	r0, [r0], #-102	; 0xffffff9a
    9240:	1a000066 	bne	93e0 <_Min_Heap_Size+0x8be0>
    9244:	000013c6 	andeq	r1, r0, r6, asr #7
    9248:	79026201 	stmdbvc	r2, {r0, r9, sp, lr}
    924c:	00000098 	muleq	r0, r8, r0
    9250:	0000667d 	andeq	r6, r0, sp, ror r6
    9254:	00006679 	andeq	r6, r0, r9, ror r6
    9258:	00192b27 	andseq	r2, r9, r7, lsr #22
    925c:	02640100 	rsbeq	r0, r4, #0, 2
    9260:	00018c15 	andeq	r8, r1, r5, lsl ip
    9264:	a11b0000 	tstge	fp, r0
    9268:	0100001c 	tsteq	r0, ip, lsl r0
    926c:	980c0265 	stmdals	ip, {r0, r2, r5, r6, r9}
    9270:	9f000000 	svcls	0x00000000
    9274:	9b000066 	blls	9414 <_Min_Heap_Size+0x8c14>
    9278:	1b000066 	blne	9418 <_Min_Heap_Size+0x8c18>
    927c:	000014db 	ldrdeq	r1, [r0], -fp
    9280:	0c026601 	stceq	6, cr6, [r2], {1}
    9284:	00000098 	muleq	r0, r8, r0
    9288:	000066cb 	andeq	r6, r0, fp, asr #13
    928c:	000066bd 			; <UNDEFINED> instruction: 0x000066bd
    9290:	001a511b 	andseq	r5, sl, fp, lsl r1
    9294:	02670100 	rsbeq	r0, r7, #0, 2
    9298:	0000980c 	andeq	r9, r0, ip, lsl #16
    929c:	00672400 	rsbeq	r2, r7, r0, lsl #8
    92a0:	00672000 	rsbeq	r2, r7, r0
    92a4:	1c9c1b00 	vldmiane	ip, {d1-d0}
    92a8:	6a010000 	bvs	492b0 <_Min_Heap_Size+0x48ab0>
    92ac:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    92b0:	67460000 	strbvs	r0, [r6, -r0]
    92b4:	67420000 	strbvs	r0, [r2, -r0]
    92b8:	00280000 	eoreq	r0, r8, r0
    92bc:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    92c0:	2800000d 	stmdacs	r0, {r0, r2, r3}
    92c4:	00000000 	andeq	r0, r0, r0
    92c8:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    92cc:	00000029 	andeq	r0, r0, r9, lsr #32
    92d0:	00090600 	andeq	r0, r9, r0, lsl #12
    92d4:	50012400 	andpl	r2, r1, r0, lsl #8
    92d8:	00007402 	andeq	r7, r0, r2, lsl #8
    92dc:	61012100 	mrsvs	r2, (UNDEF: 17)
    92e0:	01000010 	tsteq	r0, r0, lsl r0
    92e4:	01130244 	tsteq	r3, r4, asr #4
    92e8:	0000018c 	andeq	r0, r0, ip, lsl #3
    92ec:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
    92f0:	080014ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, ip}
    92f4:	01007d02 	tsteq	r0, r2, lsl #26
    92f8:	00000906 	andeq	r0, r0, r6, lsl #18
    92fc:	0013191a 	andseq	r1, r3, sl, lsl r9
    9300:	02440100 	subeq	r0, r4, #0, 2
    9304:	00044537 	andeq	r4, r4, r7, lsr r5
    9308:	00676c00 	rsbeq	r6, r7, r0, lsl #24
    930c:	00676400 	rsbeq	r6, r7, r0, lsl #8
    9310:	01260000 			; <UNDEFINED> instruction: 0x01260000
    9314:	000012a2 	andeq	r1, r0, r2, lsr #5
    9318:	13020101 	movwne	r0, #8449	; 0x2101
    931c:	00018c01 	andeq	r8, r1, r1, lsl #24
    9320:	00140000 	andseq	r0, r4, r0
    9324:	00149408 	andseq	r9, r4, r8, lsl #8
    9328:	0067a608 	rsbeq	sl, r7, r8, lsl #12
    932c:	09780100 	ldmdbeq	r8!, {r8}^
    9330:	191a0000 	ldmdbne	sl, {}	; <UNPREDICTABLE>
    9334:	01000013 	tsteq	r0, r3, lsl r0
    9338:	45340201 	ldrmi	r0, [r4, #-513]!	; 0xfffffdff
    933c:	ca000004 	bgt	9354 <_Min_Heap_Size+0x8b54>
    9340:	c6000067 	strgt	r0, [r0], -r7, rrx
    9344:	1b000067 	blne	94e8 <_Min_Heap_Size+0x8ce8>
    9348:	00001c9c 	muleq	r0, ip, ip
    934c:	17020401 	strne	r0, [r2, -r1, lsl #8]
    9350:	000007e7 	andeq	r0, r0, r7, ror #15
    9354:	000067ea 	andeq	r6, r0, sl, ror #15
    9358:	000067e8 	andeq	r6, r0, r8, ror #15
    935c:	0014db1b 	andseq	sp, r4, fp, lsl fp
    9360:	02060100 	andeq	r0, r6, #0, 2
    9364:	0000980c 	andeq	r9, r0, ip, lsl #16
    9368:	00680700 	rsbeq	r0, r8, r0, lsl #14
    936c:	0067fd00 	rsbeq	pc, r7, r0, lsl #26
    9370:	140a2800 	strne	r2, [sl], #-2048	; 0xfffff800
    9374:	0db90800 	ldceq	8, cr0, [r9]
    9378:	5e280000 	cdppl	0, 2, cr0, cr8, cr0, {0}
    937c:	b9080014 	stmdblt	r8, {r2, r4}
    9380:	0000000d 	andeq	r0, r0, sp
    9384:	11400126 	cmpne	r0, r6, lsr #2
    9388:	c3010000 	movwgt	r0, #4096	; 0x1000
    938c:	8c011301 	stchi	3, cr1, [r1], {1}
    9390:	00000001 	andeq	r0, r0, r1
    9394:	00000000 	andeq	r0, r0, r0
    9398:	46000000 	strmi	r0, [r0], -r0
    939c:	01000068 	tsteq	r0, r8, rrx
    93a0:	00000a57 	andeq	r0, r0, r7, asr sl
    93a4:	0013191a 	andseq	r1, r3, sl, lsl r9
    93a8:	01c30100 	biceq	r0, r3, r0, lsl #2
    93ac:	00044537 	andeq	r4, r4, r7, lsr r5
    93b0:	00686e00 	rsbeq	r6, r8, r0, lsl #28
    93b4:	00686600 	rsbeq	r6, r8, r0, lsl #12
    93b8:	1c631a00 			; <UNDEFINED> instruction: 0x1c631a00
    93bc:	c3010000 	movwgt	r0, #4096	; 0x1000
    93c0:	00984601 	addseq	r4, r8, r1, lsl #12
    93c4:	68aa0000 	stmiavs	sl!, {}	; <UNPREDICTABLE>
    93c8:	68a20000 	stmiavs	r2!, {}	; <UNPREDICTABLE>
    93cc:	8a1a0000 	bhi	6893d4 <_Min_Heap_Size+0x688bd4>
    93d0:	0100001b 	tsteq	r0, fp, lsl r0
    93d4:	985b01c3 	ldmdals	fp, {r0, r1, r6, r7, r8}^
    93d8:	e2000000 	and	r0, r0, #0
    93dc:	de000068 	cdple	0, 0, cr0, cr0, cr8, {3}
    93e0:	1a000068 	bne	9588 <_Min_Heap_Size+0x8d88>
    93e4:	00001c6e 	andeq	r1, r0, lr, ror #24
    93e8:	7001c301 	andvc	ip, r1, r1, lsl #6
    93ec:	00000098 	muleq	r0, r8, r0
    93f0:	00006904 	andeq	r6, r0, r4, lsl #18
    93f4:	00006900 	andeq	r6, r0, r0, lsl #18
    93f8:	00192b1b 	andseq	r2, r9, fp, lsl fp
    93fc:	01c50100 	biceq	r0, r5, r0, lsl #2
    9400:	00018c15 	andeq	r8, r1, r5, lsl ip
    9404:	00692800 	rsbeq	r2, r9, r0, lsl #16
    9408:	00692200 	rsbeq	r2, r9, r0, lsl #4
    940c:	1c9c1b00 	vldmiane	ip, {d1-d0}
    9410:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    9414:	07e71701 	strbeq	r1, [r7, r1, lsl #14]!
    9418:	69560000 	ldmdbvs	r6, {}^	; <UNPREDICTABLE>
    941c:	69540000 	ldmdbvs	r4, {}^	; <UNPREDICTABLE>
    9420:	002a0000 	eoreq	r0, sl, r0
    9424:	c7000000 	strgt	r0, [r0, -r0]
    9428:	3400000d 	strcc	r0, [r0], #-13
    942c:	2400000a 	strcs	r0, [r0], #-10
    9430:	03055001 	movweq	r5, #20481	; 0x5001
    9434:	00000000 	andeq	r0, r0, r0
    9438:	03510124 	cmpeq	r1, #36, 2
    943c:	0001cb0a 	andeq	ip, r1, sl, lsl #22
    9440:	00000029 	andeq	r0, r0, r9, lsr #32
    9444:	00054900 	andeq	r4, r5, r0, lsl #18
    9448:	50012400 	andpl	r2, r1, r0, lsl #8
    944c:	24007402 	strcs	r7, [r0], #-1026	; 0xfffffbfe
    9450:	76025101 	strvc	r5, [r2], -r1, lsl #2
    9454:	52012400 	andpl	r2, r1, #0, 8
    9458:	24007702 	strcs	r7, [r0], #-1794	; 0xfffff8fe
    945c:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    9460:	26000000 	strcs	r0, [r0], -r0
    9464:	001a7001 	andseq	r7, sl, r1
    9468:	01970100 	orrseq	r0, r7, r0, lsl #2
    946c:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    9478:	69690000 	stmdbvs	r9!, {}^	; <UNPREDICTABLE>
    947c:	21010000 	mrscs	r0, (UNDEF: 1)
    9480:	1a00000b 	bne	94b4 <_Min_Heap_Size+0x8cb4>
    9484:	00001319 	andeq	r1, r0, r9, lsl r3
    9488:	34019701 	strcc	r9, [r1], #-1793	; 0xfffff8ff
    948c:	00000445 	andeq	r0, r0, r5, asr #8
    9490:	00006991 	muleq	r0, r1, r9
    9494:	00006989 	andeq	r6, r0, r9, lsl #19
    9498:	001c631a 	andseq	r6, ip, sl, lsl r3
    949c:	01970100 	orrseq	r0, r7, r0, lsl #2
    94a0:	00009843 	andeq	r9, r0, r3, asr #16
    94a4:	0069cd00 	rsbeq	ip, r9, r0, lsl #26
    94a8:	0069c500 	rsbeq	ip, r9, r0, lsl #10
    94ac:	1b8a1a00 	blne	fe28fcb4 <_estack+0xde28ea74>
    94b0:	97010000 	strls	r0, [r1, -r0]
    94b4:	00985801 	addseq	r5, r8, r1, lsl #16
    94b8:	6a050000 	bvs	1494c0 <_Min_Heap_Size+0x148cc0>
    94bc:	6a010000 	bvs	494c4 <_Min_Heap_Size+0x48cc4>
    94c0:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
    94c4:	0100001c 	tsteq	r0, ip, lsl r0
    94c8:	986d0197 	stmdals	sp!, {r0, r1, r2, r4, r7, r8}^
    94cc:	27000000 	strcs	r0, [r0, -r0]
    94d0:	2300006a 	movwcs	r0, #106	; 0x6a
    94d4:	1b00006a 	blne	9684 <_Min_Heap_Size+0x8e84>
    94d8:	0000192b 	andeq	r1, r0, fp, lsr #18
    94dc:	15019901 	strne	r9, [r1, #-2305]	; 0xfffff6ff
    94e0:	0000018c 	andeq	r0, r0, ip, lsl #3
    94e4:	00006a4b 	andeq	r6, r0, fp, asr #20
    94e8:	00006a45 	andeq	r6, r0, r5, asr #20
    94ec:	0000002a 	andeq	r0, r0, sl, lsr #32
    94f0:	000dc700 	andeq	ip, sp, r0, lsl #14
    94f4:	000afe00 	andeq	pc, sl, r0, lsl #28
    94f8:	50012400 	andpl	r2, r1, r0, lsl #8
    94fc:	00000305 	andeq	r0, r0, r5, lsl #6
    9500:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9504:	9c0a0351 	stcls	3, cr0, [sl], {81}	; 0x51
    9508:	00290001 	eoreq	r0, r9, r1
    950c:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    9510:	24000005 	strcs	r0, [r0], #-5
    9514:	74025001 	strvc	r5, [r2], #-1
    9518:	51012400 	tstpl	r1, r0, lsl #8
    951c:	24007602 	strcs	r7, [r0], #-1538	; 0xfffff9fe
    9520:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    9524:	53012400 	movwpl	r2, #5120	; 0x1400
    9528:	00007502 	andeq	r7, r0, r2, lsl #10
    952c:	7e012600 	cfmadd32vc	mvax0, mvfx2, mvfx1, mvfx0
    9530:	0100001a 	tsteq	r0, sl, lsl r0
    9534:	01130135 	tsteq	r3, r5, lsr r1
    9538:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    9544:	00006a77 	andeq	r6, r0, r7, ror sl
    9548:	000b9a01 	andeq	r9, fp, r1, lsl #20
    954c:	13191a00 	tstne	r9, #0, 20
    9550:	35010000 	strcc	r0, [r1, #-0]
    9554:	04453501 	strbeq	r3, [r5], #-1281	; 0xfffffaff
    9558:	6aab0000 	bvs	feac9560 <_estack+0xdeac8320>
    955c:	6aa30000 	bvs	fe8c9564 <_estack+0xde8c8324>
    9560:	9c1b0000 	ldcls	0, cr0, [fp], {-0}
    9564:	0100001c 	tsteq	r0, ip, lsl r0
    9568:	e7170137 			; <UNDEFINED> instruction: 0xe7170137
    956c:	e4000007 	str	r0, [r0], #-7
    9570:	e200006a 	and	r0, r0, #106	; 0x6a
    9574:	2a00006a 	bcs	9724 <_Min_Heap_Size+0x8f24>
    9578:	00000000 	andeq	r0, r0, r0
    957c:	00000dc7 	andeq	r0, r0, r7, asr #27
    9580:	00000b89 	andeq	r0, r0, r9, lsl #23
    9584:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9588:	00000003 	andeq	r0, r0, r3
    958c:	51012400 	tstpl	r1, r0, lsl #8
    9590:	01470a03 	cmpeq	r7, r3, lsl #20
    9594:	00002900 	andeq	r2, r0, r0, lsl #18
    9598:	04ec0000 	strbteq	r0, [ip], #0
    959c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    95a0:	00750250 	rsbseq	r0, r5, r0, asr r2
    95a4:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    95a8:	00001a0e 	andeq	r1, r0, lr, lsl #20
    95ac:	0113aa01 	tsteq	r3, r1, lsl #20
    95b0:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    95bc:	00006af7 	strdeq	r6, [r0], -r7
    95c0:	000db901 	andeq	fp, sp, r1, lsl #18
    95c4:	13192c00 	tstne	r9, #0, 24
    95c8:	aa010000 	bge	495d0 <_Min_Heap_Size+0x48dd0>
    95cc:	00044533 	andeq	r4, r4, r3, lsr r5
    95d0:	006b1b00 	rsbeq	r1, fp, r0, lsl #22
    95d4:	006b1700 	rsbeq	r1, fp, r0, lsl #14
    95d8:	6d742d00 	ldclvs	13, cr2, [r4, #-0]
    95dc:	ac010070 	stcge	0, cr0, [r1], {112}	; 0x70
    95e0:	0000980c 	andeq	r9, r0, ip, lsl #16
    95e4:	006b4b00 	rsbeq	r4, fp, r0, lsl #22
    95e8:	006b3900 	rsbeq	r3, fp, r0, lsl #18
    95ec:	14db2e00 	ldrbne	r2, [fp], #3584	; 0xe00
    95f0:	ad010000 	stcge	0, cr0, [r1, #-0]
    95f4:	0000980c 	andeq	r9, r0, ip, lsl #16
    95f8:	006bc300 	rsbeq	ip, fp, r0, lsl #6
    95fc:	006bb900 	rsbeq	fp, fp, r0, lsl #18
    9600:	1c9c2e00 	ldcne	14, cr2, [ip], {0}
    9604:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    9608:	0007e717 	andeq	lr, r7, r7, lsl r7
    960c:	006c0400 	rsbeq	r0, ip, r0, lsl #8
    9610:	006c0200 	rsbeq	r0, ip, r0, lsl #4
    9614:	00002800 	andeq	r2, r0, r0, lsl #16
    9618:	0db90000 	ldceq	0, cr0, [r9]
    961c:	002a0000 	eoreq	r0, sl, r0
    9620:	c7000000 	strgt	r0, [r0, -r0]
    9624:	2f00000d 	svccs	0x0000000d
    9628:	2400000c 	strcs	r0, [r0], #-12
    962c:	03055001 	movweq	r5, #20481	; 0x5001
    9630:	00000000 	andeq	r0, r0, r0
    9634:	02510124 	subseq	r0, r1, #36, 2
    9638:	2800b708 	stmdacs	r0, {r3, r8, r9, sl, ip, sp, pc}
    963c:	00000000 	andeq	r0, r0, r0
    9640:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    9644:	0000002a 	andeq	r0, r0, sl, lsr #32
    9648:	000dc700 	andeq	ip, sp, r0, lsl #14
    964c:	000c5500 	andeq	r5, ip, r0, lsl #10
    9650:	50012400 	andpl	r2, r1, r0, lsl #8
    9654:	00000305 	andeq	r0, r0, r5, lsl #6
    9658:	01240000 			; <UNDEFINED> instruction: 0x01240000
    965c:	b8080251 	stmdalt	r8, {r0, r4, r6, r9}
    9660:	00002a00 	andeq	r2, r0, r0, lsl #20
    9664:	0dc70000 	stcleq	0, cr0, [r7]
    9668:	0c720000 	ldcleq	0, cr0, [r2], #-0
    966c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9670:	00030550 	andeq	r0, r3, r0, asr r5
    9674:	24000000 	strcs	r0, [r0], #-0
    9678:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    967c:	002a00b9 	strhteq	r0, [sl], -r9
    9680:	c7000000 	strgt	r0, [r0, -r0]
    9684:	8f00000d 	svchi	0x0000000d
    9688:	2400000c 	strcs	r0, [r0], #-12
    968c:	03055001 	movweq	r5, #20481	; 0x5001
    9690:	00000000 	andeq	r0, r0, r0
    9694:	02510124 	subseq	r0, r1, #36, 2
    9698:	2a00ba08 	bcs	37ec0 <_Min_Heap_Size+0x376c0>
    969c:	00000000 	andeq	r0, r0, r0
    96a0:	00000dc7 	andeq	r0, r0, r7, asr #27
    96a4:	00000cac 	andeq	r0, r0, ip, lsr #25
    96a8:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    96ac:	00000003 	andeq	r0, r0, r3
    96b0:	51012400 	tstpl	r1, r0, lsl #8
    96b4:	00bb0802 	adcseq	r0, fp, r2, lsl #16
    96b8:	0000002a 	andeq	r0, r0, sl, lsr #32
    96bc:	000dc700 	andeq	ip, sp, r0, lsl #14
    96c0:	000cc900 	andeq	ip, ip, r0, lsl #18
    96c4:	50012400 	andpl	r2, r1, r0, lsl #8
    96c8:	00000305 	andeq	r0, r0, r5, lsl #6
    96cc:	01240000 			; <UNDEFINED> instruction: 0x01240000
    96d0:	bc080251 	sfmlt	f0, 4, [r8], {81}	; 0x51
    96d4:	00002a00 	andeq	r2, r0, r0, lsl #20
    96d8:	0dc70000 	stcleq	0, cr0, [r7]
    96dc:	0ce60000 	stcleq	0, cr0, [r6]
    96e0:	01240000 			; <UNDEFINED> instruction: 0x01240000
    96e4:	00030550 	andeq	r0, r3, r0, asr r5
    96e8:	24000000 	strcs	r0, [r0], #-0
    96ec:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    96f0:	002a00bd 	strhteq	r0, [sl], -sp
    96f4:	c7000000 	strgt	r0, [r0, -r0]
    96f8:	0300000d 	movweq	r0, #13
    96fc:	2400000d 	strcs	r0, [r0], #-13
    9700:	03055001 	movweq	r5, #20481	; 0x5001
    9704:	00000000 	andeq	r0, r0, r0
    9708:	02510124 	subseq	r0, r1, #36, 2
    970c:	2a00be08 	bcs	38f34 <_Min_Heap_Size+0x38734>
    9710:	00000000 	andeq	r0, r0, r0
    9714:	00000dc7 	andeq	r0, r0, r7, asr #27
    9718:	00000d20 	andeq	r0, r0, r0, lsr #26
    971c:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9720:	00000003 	andeq	r0, r0, r3
    9724:	51012400 	tstpl	r1, r0, lsl #8
    9728:	00bf0802 	adcseq	r0, pc, r2, lsl #16
    972c:	0000002a 	andeq	r0, r0, sl, lsr #32
    9730:	000dc700 	andeq	ip, sp, r0, lsl #14
    9734:	000d3d00 	andeq	r3, sp, r0, lsl #26
    9738:	50012400 	andpl	r2, r1, r0, lsl #8
    973c:	00000305 	andeq	r0, r0, r5, lsl #6
    9740:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9744:	c0080251 	andgt	r0, r8, r1, asr r2
    9748:	00002a00 	andeq	r2, r0, r0, lsl #20
    974c:	0dc70000 	stcleq	0, cr0, [r7]
    9750:	0d5a0000 	ldcleq	0, cr0, [sl, #-0]
    9754:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9758:	00030550 	andeq	r0, r3, r0, asr r5
    975c:	24000000 	strcs	r0, [r0], #-0
    9760:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9764:	002a00c5 	eoreq	r0, sl, r5, asr #1
    9768:	c7000000 	strgt	r0, [r0, -r0]
    976c:	7700000d 	strvc	r0, [r0, -sp]
    9770:	2400000d 	strcs	r0, [r0], #-13
    9774:	03055001 	movweq	r5, #20481	; 0x5001
    9778:	00000000 	andeq	r0, r0, r0
    977c:	02510124 	subseq	r0, r1, #36, 2
    9780:	2a00c608 	bcs	3afa8 <_Min_Heap_Size+0x3a7a8>
    9784:	00000000 	andeq	r0, r0, r0
    9788:	00000dc7 	andeq	r0, r0, r7, asr #27
    978c:	00000d94 	muleq	r0, r4, sp
    9790:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9794:	00000003 	andeq	r0, r0, r3
    9798:	51012400 	tstpl	r1, r0, lsl #8
    979c:	00c70802 	sbceq	r0, r7, r2, lsl #16
    97a0:	0000002a 	andeq	r0, r0, sl, lsr #32
    97a4:	00048e00 	andeq	r8, r4, r0, lsl #28
    97a8:	000da800 	andeq	sl, sp, r0, lsl #16
    97ac:	50012400 	andpl	r2, r1, r0, lsl #8
    97b0:	00007402 	andeq	r7, r0, r2, lsl #8
    97b4:	00000029 	andeq	r0, r0, r9, lsr #32
    97b8:	0004ec00 	andeq	lr, r4, r0, lsl #24
    97bc:	50012400 	andpl	r2, r1, r0, lsl #8
    97c0:	00007402 	andeq	r7, r0, r2, lsl #8
    97c4:	01012f00 	tsteq	r1, r0, lsl #30
    97c8:	00001335 	andeq	r1, r0, r5, lsr r3
    97cc:	00001335 	andeq	r1, r0, r5, lsr r3
    97d0:	300aea09 	andcc	lr, sl, r9, lsl #20
    97d4:	099b0101 	ldmibeq	fp, {r0, r8}
    97d8:	099b0000 	ldmibeq	fp, {}	; <UNPREDICTABLE>
    97dc:	e60a0000 	str	r0, [sl], -r0
    97e0:	24000801 	strcs	r0, [r0], #-2049	; 0xfffff7ff
    97e4:	02000014 	andeq	r0, r0, #20
    97e8:	00130000 	andseq	r0, r3, r0
    97ec:	19010400 	stmdbne	r1, {sl}
    97f0:	0c000005 	stceq	0, cr0, [r0], {5}
    97f4:	00001cda 	ldrdeq	r1, [r0], -sl
    97f8:	00000822 	andeq	r0, r0, r2, lsr #16
    97fc:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
    9808:	0000789a 	muleq	r0, sl, r8
    980c:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    9810:	04000002 	streq	r0, [r0], #-2
    9814:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    9818:	5a030000 	bpl	c9820 <_Min_Heap_Size+0xc9020>
    981c:	7200000c 	andvc	r0, r0, #12
    9820:	000c8903 	andeq	r8, ip, r3, lsl #18
    9824:	e9037400 	stmdb	r3, {sl, ip, sp, lr}
    9828:	7500000c 	strvc	r0, [r0, #-12]
    982c:	000b9003 	andeq	r9, fp, r3
    9830:	3b037600 	blcc	e7038 <_Min_Heap_Size+0xe6838>
    9834:	7b00000d 	blvc	9870 <_Min_Heap_Size+0x9070>
    9838:	000eb603 	andeq	fp, lr, r3, lsl #12
    983c:	94037c00 	strls	r7, [r3], #-3072	; 0xfffff400
    9840:	7e00000f 	cdpvc	0, 0, cr0, cr0, cr15, {0}
    9844:	000b0203 	andeq	r0, fp, r3, lsl #4
    9848:	6e047f00 	cdpvs	15, 0, cr7, cr4, cr0, {0}
    984c:	0000000c 	andeq	r0, r0, ip
    9850:	000e5a04 	andeq	r5, lr, r4, lsl #20
    9854:	9f040100 	svcls	0x00040100
    9858:	0200000c 	andeq	r0, r0, #12
    985c:	0009fd04 	andeq	pc, r9, r4, lsl #26
    9860:	67040300 	strvs	r0, [r4, -r0, lsl #6]
    9864:	0400000a 	streq	r0, [r0], #-10
    9868:	000ee904 	andeq	lr, lr, r4, lsl #18
    986c:	87040500 	strhi	r0, [r4, -r0, lsl #10]
    9870:	0600000e 	streq	r0, [r0], -lr
    9874:	000bfa04 	andeq	pc, fp, r4, lsl #20
    9878:	0b040700 	bleq	10b480 <_Min_Heap_Size+0x10ac80>
    987c:	0800000a 	stmdaeq	r0, {r1, r3}
    9880:	000f8904 	andeq	r8, pc, r4, lsl #18
    9884:	76040900 	strvc	r0, [r4], -r0, lsl #18
    9888:	0a00000d 	beq	98c4 <_Min_Heap_Size+0x90c4>
    988c:	000dd204 	andeq	sp, sp, r4, lsl #4
    9890:	9c040b00 			; <UNDEFINED> instruction: 0x9c040b00
    9894:	0c00000d 	stceq	0, cr0, [r0], {13}
    9898:	000b2c04 	andeq	r2, fp, r4, lsl #24
    989c:	f2040d00 	vadd.f32	d0, d4, d0
    98a0:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    98a4:	000e9204 	andeq	r9, lr, r4, lsl #4
    98a8:	12040f00 	andne	r0, r4, #0, 30
    98ac:	1000000c 	andne	r0, r0, ip
    98b0:	000a1604 	andeq	r1, sl, r4, lsl #12
    98b4:	51041100 	mrspl	r1, (UNDEF: 20)
    98b8:	1200000e 	andne	r0, r0, #14
    98bc:	000c0504 	andeq	r0, ip, r4, lsl #10
    98c0:	ae041300 	cdpge	3, 0, cr1, cr4, cr0, {0}
    98c4:	1400000b 	strne	r0, [r0], #-11
    98c8:	000f5704 	andeq	r5, pc, r4, lsl #14
    98cc:	af041500 	svcge	0x00041500
    98d0:	1600000c 	strne	r0, [r0], -ip
    98d4:	000f6504 	andeq	r6, pc, r4, lsl #10
    98d8:	02041700 	andeq	r1, r4, #0, 14
    98dc:	1800000d 	stmdane	r0, {r0, r2, r3}
    98e0:	000f1604 	andeq	r1, pc, r4, lsl #12
    98e4:	ea041900 	b	10fcec <_Min_Heap_Size+0x10f4ec>
    98e8:	1a00000a 	bne	9918 <_Min_Heap_Size+0x9118>
    98ec:	000bed04 	andeq	lr, fp, r4, lsl #26
    98f0:	72041b00 	andvc	r1, r4, #0, 22
    98f4:	1c00000a 	stcne	0, cr0, [r0], {10}
    98f8:	000e0f04 	andeq	r0, lr, r4, lsl #30
    98fc:	bc041d00 	stclt	13, cr1, [r4], {-0}
    9900:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    9904:	000be004 	andeq	lr, fp, r4
    9908:	60041f00 	andvs	r1, r4, r0, lsl #30
    990c:	2000000b 	andcs	r0, r0, fp
    9910:	000d8f04 	andeq	r8, sp, r4, lsl #30
    9914:	d4042100 	strle	r2, [r4], #-256	; 0xffffff00
    9918:	2200000c 	andcs	r0, r0, #12
    991c:	000d3104 	andeq	r3, sp, r4, lsl #2
    9920:	a7042300 	strge	r2, [r4, -r0, lsl #6]
    9924:	2400000a 	strcs	r0, [r0], #-10
    9928:	000e1904 	andeq	r1, lr, r4, lsl #18
    992c:	c6042500 	strgt	r2, [r4], -r0, lsl #10
    9930:	2600000b 	strcs	r0, [r0], -fp
    9934:	000b0f04 	andeq	r0, fp, r4, lsl #30
    9938:	00042700 	andeq	r2, r4, r0, lsl #14
    993c:	2800000e 	stmdacs	r0, {r1, r2, r3}
    9940:	000de404 	andeq	lr, sp, r4, lsl #8
    9944:	65042900 	strvs	r2, [r4, #-2304]	; 0xfffff700
    9948:	2a00000d 	bcs	9984 <_Min_Heap_Size+0x9184>
    994c:	000ab104 	andeq	fp, sl, r4, lsl #2
    9950:	28042b00 	stmdacs	r4, {r8, r9, fp, sp}
    9954:	2c00000a 	stccs	0, cr0, [r0], {10}
    9958:	000c2404 	andeq	r2, ip, r4, lsl #8
    995c:	72042d00 	andvc	r2, r4, #0, 26
    9960:	2e00000f 	cdpcs	0, 0, cr0, cr0, cr15, {0}
    9964:	000fb304 	andeq	fp, pc, r4, lsl #6
    9968:	6a042f00 	bvs	115570 <_Min_Heap_Size+0x114d70>
    996c:	3000000e 	andcc	r0, r0, lr
    9970:	000f7f04 	andeq	r7, pc, r4, lsl #30
    9974:	86043100 	strhi	r3, [r4], -r0, lsl #2
    9978:	3200000b 	andcc	r0, r0, #11
    997c:	000a5d04 	andeq	r5, sl, r4, lsl #26
    9980:	50043300 	andpl	r3, r4, r0, lsl #6
    9984:	3400000d 	strcc	r0, [r0], #-13
    9988:	000cf704 	andeq	pc, ip, r4, lsl #14
    998c:	81043500 	tsthi	r4, r0, lsl #10
    9990:	3600000d 	strcc	r0, [r0], -sp
    9994:	000d1504 	andeq	r1, sp, r4, lsl #10
    9998:	bd043700 	stclt	7, cr3, [r4, #-0]
    999c:	3800000c 	stmdacc	r0, {r2, r3}
    99a0:	000a4b04 	andeq	r4, sl, r4, lsl #22
    99a4:	c5043900 	strgt	r3, [r4, #-2304]	; 0xfffff700
    99a8:	3a00000f 	bcc	99ec <_Min_Heap_Size+0x91ec>
    99ac:	000dae04 	andeq	sl, sp, r4, lsl #28
    99b0:	3e043b00 	vmlacc.f64	d3, d4, d0
    99b4:	3c00000b 	stccc	0, cr0, [r0], {11}
    99b8:	000dc004 	andeq	ip, sp, r4
    99bc:	7c043f00 	stcvc	15, cr3, [r4], {-0}
    99c0:	4000000a 	andmi	r0, r0, sl
    99c4:	000e4304 	andeq	r4, lr, r4, lsl #6
    99c8:	78044100 	stmdavc	r4, {r8, lr}
    99cc:	4200000b 	andmi	r0, r0, #11
    99d0:	000c4e04 	andeq	r4, ip, r4, lsl #28
    99d4:	d8044300 	stmdale	r4, {r8, r9, lr}
    99d8:	4400000a 	strmi	r0, [r0], #-10
    99dc:	000ea404 	andeq	sl, lr, r4, lsl #8
    99e0:	3c044500 	cfstr32cc	mvfx4, [r4], {-0}
    99e4:	4600000c 	strmi	r0, [r0], -ip
    99e8:	000a8a04 	andeq	r8, sl, r4, lsl #20
    99ec:	c8044700 	stmdagt	r4, {r8, r9, sl, lr}
    99f0:	4800000e 	stmdami	r0, {r1, r2, r3}
    99f4:	000df304 	andeq	pc, sp, r4, lsl #6
    99f8:	3d044900 	vstrcc.16	s8, [r4, #-0]	; <UNPREDICTABLE>
    99fc:	4a00000f 	bmi	9a40 <_Min_Heap_Size+0x9240>
    9a00:	000fa004 	andeq	sl, pc, r4
    9a04:	78044b00 	stmdavc	r4, {r8, r9, fp, lr}
    9a08:	4c00000c 	stcmi	0, cr0, [r0], {12}
    9a0c:	000d1f04 	andeq	r1, sp, r4, lsl #30
    9a10:	3a044d00 	bcc	11ce18 <_Min_Heap_Size+0x11c618>
    9a14:	5000000e 	andpl	r0, r0, lr
    9a18:	000d4704 	andeq	r4, sp, r4, lsl #14
    9a1c:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    9a20:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    9a24:	a3060000 	movwge	r0, #24576	; 0x6000
    9a28:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    9a2c:	0029039b 	mlaeq	r9, fp, r3, r0
    9a30:	72060000 	andvc	r0, r6, #0
    9a34:	05000000 	streq	r0, [r0, #-0]
    9a38:	025b182b 	subseq	r1, fp, #2818048	; 0x2b0000
    9a3c:	01050000 	mrseq	r0, (UNDEF: 5)
    9a40:	00050b08 	andeq	r0, r5, r8, lsl #22
    9a44:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    9a48:	000005d3 	ldrdeq	r0, [r0], -r3
    9a4c:	00069a06 	andeq	r9, r6, r6, lsl #20
    9a50:	19390500 	ldmdbne	r9!, {r8, sl}
    9a54:	00000275 	andeq	r0, r0, r5, ror r2
    9a58:	37070205 	strcc	r0, [r7, -r5, lsl #4]
    9a5c:	06000003 	streq	r0, [r0], -r3
    9a60:	00001f12 	andeq	r1, r0, r2, lsl pc
    9a64:	88184d05 	ldmdahi	r8, {r0, r2, r8, sl, fp, lr}
    9a68:	05000002 	streq	r0, [r0, #-2]
    9a6c:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    9a70:	91060000 	mrsls	r0, (UNDEF: 6)
    9a74:	05000002 	streq	r0, [r0, #-2]
    9a78:	029b194f 	addseq	r1, fp, #1294336	; 0x13c000
    9a7c:	04050000 	streq	r0, [r5], #-0
    9a80:	0000bf07 	andeq	fp, r0, r7, lsl #30
    9a84:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    9a88:	000002ad 	andeq	r0, r0, sp, lsr #5
    9a8c:	ba070805 	blt	1cbaa8 <_Min_Heap_Size+0x1cb2a8>
    9a90:	07000000 	streq	r0, [r0, -r0]
    9a94:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    9a98:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    9a9c:	0000c407 	andeq	ip, r0, r7, lsl #8
    9aa0:	00740600 	rsbseq	r0, r4, r0, lsl #12
    9aa4:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    9aa8:	00024f13 	andeq	r4, r2, r3, lsl pc
    9aac:	02be0800 	adcseq	r0, lr, #0, 16
    9ab0:	9c060000 	stcls	0, cr0, [r6], {-0}
    9ab4:	06000006 	streq	r0, [r0], -r6
    9ab8:	02691424 	rsbeq	r1, r9, #36, 8	; 0x24000000
    9abc:	14060000 	strne	r0, [r6], #-0
    9ac0:	0600001f 			; <UNDEFINED> instruction: 0x0600001f
    9ac4:	027c132c 	rsbseq	r1, ip, #44, 6	; 0xb0000000
    9ac8:	93060000 	movwls	r0, #24576	; 0x6000
    9acc:	06000002 	streq	r0, [r0], -r2
    9ad0:	028f1430 	addeq	r1, pc, #48, 8	; 0x30000000
    9ad4:	e7080000 	str	r0, [r8, -r0]
    9ad8:	09000002 	stmdbeq	r0, {r1}
    9adc:	000002f3 	strdeq	r0, [r0], -r3
    9ae0:	020e040a 	andeq	r0, lr, #167772160	; 0xa000000
    9ae4:	e309019b 	movw	r0, #37275	; 0x919b
    9ae8:	0b000003 	bleq	9afc <_Min_Heap_Size+0x92fc>
    9aec:	0000203b 	andeq	r2, r0, fp, lsr r0
    9af0:	12019d02 	andne	r9, r1, #2, 26	; 0x80
    9af4:	000003f3 	strdeq	r0, [r0], -r3
    9af8:	0b002302 	bleq	12708 <_Min_Heap_Size+0x11f08>
    9afc:	000004a6 	andeq	r0, r0, r6, lsr #9
    9b00:	12019e02 	andne	r9, r1, #2, 28
    9b04:	000003f8 	strdeq	r0, [r0], -r8
    9b08:	0b202302 	bleq	812718 <_Min_Heap_Size+0x811f18>
    9b0c:	00001fc9 	andeq	r1, r0, r9, asr #31
    9b10:	12019f02 	andne	r9, r1, #2, 30
    9b14:	000003f3 	strdeq	r0, [r0], -r3
    9b18:	01802303 	orreq	r2, r0, r3, lsl #6
    9b1c:	0004b00b 	andeq	fp, r4, fp
    9b20:	01a00200 	lsleq	r0, r0, #4
    9b24:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9b28:	a0230300 	eorge	r0, r3, r0, lsl #6
    9b2c:	1d460b01 	vstrne	d16, [r6, #-4]
    9b30:	a1020000 	mrsge	r0, (UNDEF: 2)
    9b34:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9b38:	23030000 	movwcs	r0, #12288	; 0x3000
    9b3c:	ba0b0280 	blt	2ca544 <_Min_Heap_Size+0x2c9d44>
    9b40:	02000004 	andeq	r0, r0, #4
    9b44:	f81201a2 			; <UNDEFINED> instruction: 0xf81201a2
    9b48:	03000003 	movweq	r0, #3
    9b4c:	0b02a023 	bleq	b1be0 <_Min_Heap_Size+0xb13e0>
    9b50:	00001cc8 	andeq	r1, r0, r8, asr #25
    9b54:	1201a302 	andne	sl, r1, #134217728	; 0x8000000
    9b58:	000003f3 	strdeq	r0, [r0], -r3
    9b5c:	03802303 	orreq	r2, r0, #201326592	; 0xc000000
    9b60:	0004c40b 	andeq	ip, r4, fp, lsl #8
    9b64:	01a40200 			; <UNDEFINED> instruction: 0x01a40200
    9b68:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9b6c:	a0230300 	eorge	r0, r3, r0, lsl #6
    9b70:	1f950b03 	svcne	0x00950b03
    9b74:	a5020000 	strge	r0, [r2, #-0]
    9b78:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9b7c:	23030000 	movwcs	r0, #12288	; 0x3000
    9b80:	ce0b0480 	cfcvt32sgt	mvf0, mvfx11
    9b84:	02000004 	andeq	r0, r0, #4
    9b88:	081201a6 	ldmdaeq	r2, {r1, r2, r5, r7, r8}
    9b8c:	03000004 	movweq	r0, #4
    9b90:	0c04a023 	stceq	0, cr10, [r4], {35}	; 0x23
    9b94:	02005049 	andeq	r5, r0, #73	; 0x49
    9b98:	281201a7 	ldmdacs	r2, {r0, r1, r2, r5, r7, r8}
    9b9c:	03000004 	movweq	r0, #4
    9ba0:	0b068023 	bleq	1a9c34 <_Min_Heap_Size+0x1a9434>
    9ba4:	000004d8 	ldrdeq	r0, [r0], -r8
    9ba8:	1201a802 	andne	sl, r1, #131072	; 0x20000
    9bac:	0000042d 	andeq	r0, r0, sp, lsr #8
    9bb0:	07f02303 	ldrbeq	r2, [r0, r3, lsl #6]!
    9bb4:	00215e0b 	eoreq	r5, r1, fp, lsl #28
    9bb8:	01a90200 			; <UNDEFINED> instruction: 0x01a90200
    9bbc:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9bc0:	80230300 	eorhi	r0, r3, r0, lsl #6
    9bc4:	f30d001c 	vqadd.u8	d0, d13, d12
    9bc8:	f3000002 	vhadd.u8	d0, d0, d2
    9bcc:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    9bd0:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    9bd4:	e3080007 	movw	r0, #32775	; 0x8007
    9bd8:	0d000003 	stceq	0, cr0, [r0, #-12]
    9bdc:	000002e7 	andeq	r0, r0, r7, ror #5
    9be0:	00000408 	andeq	r0, r0, r8, lsl #8
    9be4:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9be8:	0d001700 	stceq	7, cr1, [r0, #-0]
    9bec:	000002e7 	andeq	r0, r0, r7, ror #5
    9bf0:	00000418 	andeq	r0, r0, r8, lsl r4
    9bf4:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9bf8:	0d003700 	stceq	7, cr3, [r0, #-0]
    9bfc:	000002ca 	andeq	r0, r0, sl, asr #5
    9c00:	00000428 	andeq	r0, r0, r8, lsr #8
    9c04:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9c08:	0800ef00 	stmdaeq	r0, {r8, r9, sl, fp, sp, lr, pc}
    9c0c:	00000418 	andeq	r0, r0, r8, lsl r4
    9c10:	0002e70d 	andeq	lr, r2, sp, lsl #14
    9c14:	00043e00 	andeq	r3, r4, r0, lsl #28
    9c18:	02b70f00 	adcseq	r0, r7, #0, 30
    9c1c:	02830000 	addeq	r0, r3, #0
    9c20:	20401000 	subcs	r1, r0, r0
    9c24:	aa020000 	bge	89c2c <_Min_Heap_Size+0x8942c>
    9c28:	02fd0401 	rscseq	r0, sp, #16777216	; 0x1000000
    9c2c:	8c110000 	ldchi	0, cr0, [r1], {-0}
    9c30:	0901bd02 	stmdbeq	r1, {r1, r8, sl, fp, ip, sp, pc}
    9c34:	000005a7 	andeq	r0, r0, r7, lsr #11
    9c38:	0020070b 	eoreq	r0, r0, fp, lsl #14
    9c3c:	01bf0200 			; <UNDEFINED> instruction: 0x01bf0200
    9c40:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9c44:	00230200 	eoreq	r0, r3, r0, lsl #4
    9c48:	001eee0b 	andseq	lr, lr, fp, lsl #28
    9c4c:	01c00200 	biceq	r0, r0, r0, lsl #4
    9c50:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9c54:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9c58:	001ed80b 	andseq	sp, lr, fp, lsl #16
    9c5c:	01c10200 	biceq	r0, r1, r0, lsl #4
    9c60:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9c64:	08230200 	stmdaeq	r3!, {r9}
    9c68:	001ef30b 	andseq	pc, lr, fp, lsl #6
    9c6c:	01c20200 	biceq	r0, r2, r0, lsl #4
    9c70:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9c74:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9c78:	5243530c 	subpl	r5, r3, #12, 6	; 0x30000000
    9c7c:	01c30200 	biceq	r0, r3, r0, lsl #4
    9c80:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9c84:	10230200 	eorne	r0, r3, r0, lsl #4
    9c88:	5243430c 	subpl	r4, r3, #12, 6	; 0x30000000
    9c8c:	01c40200 	biceq	r0, r4, r0, lsl #4
    9c90:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9c94:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9c98:	5048530c 	subpl	r5, r8, ip, lsl #6
    9c9c:	01c50200 	biceq	r0, r5, r0, lsl #4
    9ca0:	0005b712 	andeq	fp, r5, r2, lsl r7
    9ca4:	18230200 	stmdane	r3!, {r9}
    9ca8:	00201e0b 	eoreq	r1, r0, fp, lsl #28
    9cac:	01c60200 	biceq	r0, r6, r0, lsl #4
    9cb0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9cb4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9cb8:	001f900b 	andseq	r9, pc, fp
    9cbc:	01c70200 	biceq	r0, r7, r0, lsl #4
    9cc0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9cc4:	28230200 	stmdacs	r3!, {r9}
    9cc8:	0021a80b 	eoreq	sl, r1, fp, lsl #16
    9ccc:	01c80200 	biceq	r0, r8, r0, lsl #4
    9cd0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9cd4:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9cd8:	001ef90b 	andseq	pc, lr, fp, lsl #18
    9cdc:	01c90200 	biceq	r0, r9, r0, lsl #4
    9ce0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ce4:	30230200 	eorcc	r0, r3, r0, lsl #4
    9ce8:	001efe0b 	andseq	pc, lr, fp, lsl #28
    9cec:	01ca0200 	biceq	r0, sl, r0, lsl #4
    9cf0:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9cf4:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    9cf8:	0020190b 	eoreq	r1, r0, fp, lsl #18
    9cfc:	01cb0200 	biceq	r0, fp, r0, lsl #4
    9d00:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9d04:	38230200 	stmdacc	r3!, {r9}
    9d08:	001e7d0b 	andseq	r7, lr, fp, lsl #26
    9d0c:	01cc0200 	biceq	r0, ip, r0, lsl #4
    9d10:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9d14:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9d18:	5246500c 	subpl	r5, r6, #12
    9d1c:	01cd0200 	biceq	r0, sp, r0, lsl #4
    9d20:	0005d112 	andeq	sp, r5, r2, lsl r1
    9d24:	40230200 	eormi	r0, r3, r0, lsl #4
    9d28:	5246440c 	subpl	r4, r6, #12, 8	; 0xc000000
    9d2c:	01ce0200 	biceq	r0, lr, r0, lsl #4
    9d30:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9d34:	48230200 	stmdami	r3!, {r9}
    9d38:	5244410c 	subpl	r4, r4, #12, 2
    9d3c:	01cf0200 	biceq	r0, pc, r0, lsl #4
    9d40:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9d44:	4c230200 	sfmmi	f0, 4, [r3], #-0
    9d48:	001f0d0b 	andseq	r0, pc, fp, lsl #26
    9d4c:	01d00200 	bicseq	r0, r0, r0, lsl #4
    9d50:	0005eb12 	andeq	lr, r5, r2, lsl fp
    9d54:	50230200 	eorpl	r0, r3, r0, lsl #4
    9d58:	001d660b 	andseq	r6, sp, fp, lsl #12
    9d5c:	01d10200 	bicseq	r0, r1, r0, lsl #4
    9d60:	00060512 	andeq	r0, r6, r2, lsl r5
    9d64:	60230200 	eorvs	r0, r3, r0, lsl #4
    9d68:	0004a60b 	andeq	sl, r4, fp, lsl #12
    9d6c:	01d20200 	bicseq	r0, r2, r0, lsl #4
    9d70:	00060a12 	andeq	r0, r6, r2, lsl sl
    9d74:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    9d78:	0021a20b 	eoreq	sl, r1, fp, lsl #4
    9d7c:	01d30200 	bicseq	r0, r3, r0, lsl #4
    9d80:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9d84:	88230300 	stmdahi	r3!, {r8, r9}
    9d88:	ca0d0001 	bgt	349d94 <_Min_Heap_Size+0x349594>
    9d8c:	b7000002 	strlt	r0, [r0, -r2]
    9d90:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    9d94:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    9d98:	a708000b 	strge	r0, [r8, -fp]
    9d9c:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    9da0:	000002f8 	strdeq	r0, [r0], -r8
    9da4:	000005cc 	andeq	r0, r0, ip, asr #11
    9da8:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9dac:	09000100 	stmdbeq	r0, {r8}
    9db0:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    9db4:	0005cc08 	andeq	ip, r5, r8, lsl #24
    9db8:	02f80d00 	rscseq	r0, r8, #0, 26
    9dbc:	05e60000 	strbeq	r0, [r6, #0]!
    9dc0:	b70e0000 	strlt	r0, [lr, -r0]
    9dc4:	03000002 	movweq	r0, #2
    9dc8:	05d60900 	ldrbeq	r0, [r6, #2304]	; 0x900
    9dcc:	e6080000 	str	r0, [r8], -r0
    9dd0:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    9dd4:	000002f8 	strdeq	r0, [r0], -r8
    9dd8:	00000600 	andeq	r0, r0, r0, lsl #12
    9ddc:	0002b70e 	andeq	fp, r2, lr, lsl #14
    9de0:	09000400 	stmdbeq	r0, {sl}
    9de4:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    9de8:	00060008 	andeq	r0, r6, r8
    9dec:	02e70d00 	rsceq	r0, r7, #0, 26
    9df0:	061a0000 	ldreq	r0, [sl], -r0
    9df4:	b70e0000 	strlt	r0, [lr, -r0]
    9df8:	04000002 	streq	r0, [r0], #-2
    9dfc:	1e821000 	cdpne	0, 8, cr1, cr2, cr0, {0}
    9e00:	d4020000 	strle	r0, [r2], #-0
    9e04:	044b0301 	strbeq	r0, [fp], #-769	; 0xfffffcff
    9e08:	10110000 	andsne	r0, r1, r0
    9e0c:	0902fc02 	stmdbeq	r2, {r1, sl, fp, ip, sp, lr, pc}
    9e10:	00000672 	andeq	r0, r0, r2, ror r6
    9e14:	00212d0b 	eoreq	r2, r1, fp, lsl #26
    9e18:	02fe0200 	rscseq	r0, lr, #0, 4
    9e1c:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e20:	00230200 	eoreq	r0, r3, r0, lsl #4
    9e24:	001f850b 	andseq	r8, pc, fp, lsl #10
    9e28:	02ff0200 	rscseq	r0, pc, #0, 4
    9e2c:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e30:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9e34:	4c41560c 	mcrrmi	6, 0, r5, r1, cr12
    9e38:	03000200 	movweq	r0, #512	; 0x200
    9e3c:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e40:	08230200 	stmdaeq	r3!, {r9}
    9e44:	001ec10b 	andseq	ip, lr, fp, lsl #2
    9e48:	03010200 	movweq	r0, #4608	; 0x1200
    9e4c:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9e50:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9e54:	1e5e1000 	cdpne	0, 5, cr1, cr14, cr0, {0}
    9e58:	02020000 	andeq	r0, r2, #0
    9e5c:	06270303 	strteq	r0, [r7], -r3, lsl #6
    9e60:	2c110000 	ldccs	0, cr0, [r1], {-0}
    9e64:	0904bd02 	stmdbeq	r4, {r1, r8, sl, fp, ip, sp, pc}
    9e68:	0000073a 	andeq	r0, r0, sl, lsr r7
    9e6c:	0020d80b 	eoreq	sp, r0, fp, lsl #16
    9e70:	04bf0200 	ldrteq	r0, [pc], #512	; 9e78 <_Min_Heap_Size+0x9678>
    9e74:	0002f812 	andeq	pc, r2, r2, lsl r8	; <UNPREDICTABLE>
    9e78:	00230200 	eoreq	r0, r3, r0, lsl #4
    9e7c:	00212d0b 	eoreq	r2, r1, fp, lsl #26
    9e80:	04c00200 	strbeq	r0, [r0], #512	; 0x200
    9e84:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e88:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9e8c:	524e520c 	subpl	r5, lr, #12, 4	; 0xc0000000
    9e90:	04c10200 	strbeq	r0, [r1], #512	; 0x200
    9e94:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9e98:	08230200 	stmdaeq	r3!, {r9}
    9e9c:	00208d0b 	eoreq	r8, r0, fp, lsl #26
    9ea0:	04c20200 	strbeq	r0, [r2], #512	; 0x200
    9ea4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ea8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9eac:	0020b70b 	eoreq	fp, r0, fp, lsl #14
    9eb0:	04c30200 	strbeq	r0, [r3], #512	; 0x200
    9eb4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9eb8:	10230200 	eorne	r0, r3, r0, lsl #4
    9ebc:	001dfe0b 	andseq	pc, sp, fp, lsl #28
    9ec0:	04c40200 	strbeq	r0, [r4], #512	; 0x200
    9ec4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ec8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9ecc:	001dab0b 	andseq	sl, sp, fp, lsl #22
    9ed0:	04c50200 	strbeq	r0, [r5], #512	; 0x200
    9ed4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ed8:	18230200 	stmdane	r3!, {r9}
    9edc:	001e060b 	andseq	r0, lr, fp, lsl #12
    9ee0:	04c60200 	strbeq	r0, [r6], #512	; 0x200
    9ee4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ee8:	1c230200 	sfmne	f0, 4, [r3], #-0
    9eec:	001e330b 	andseq	r3, lr, fp, lsl #6
    9ef0:	04c70200 	strbeq	r0, [r7], #512	; 0x200
    9ef4:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9ef8:	20230200 	eorcs	r0, r3, r0, lsl #4
    9efc:	001e0e0b 	andseq	r0, lr, fp, lsl #28
    9f00:	04c80200 	strbeq	r0, [r8], #512	; 0x200
    9f04:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f08:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9f0c:	001d3e0b 	andseq	r3, sp, fp, lsl #28
    9f10:	04c90200 	strbeq	r0, [r9], #512	; 0x200
    9f14:	0002f312 	andeq	pc, r2, r2, lsl r3	; <UNPREDICTABLE>
    9f18:	28230200 	stmdacs	r3!, {r9}
    9f1c:	21991000 	orrscs	r1, r9, r0
    9f20:	ca020000 	bgt	89f28 <_Min_Heap_Size+0x89728>
    9f24:	067f0304 	ldrbteq	r0, [pc], -r4, lsl #6
    9f28:	07020000 	streq	r0, [r2, -r0]
    9f2c:	00025b01 	andeq	r5, r2, r1, lsl #22
    9f30:	01b90700 			; <UNDEFINED> instruction: 0x01b90700
    9f34:	00000762 	andeq	r0, r0, r2, ror #14
    9f38:	0002e404 	andeq	lr, r2, r4, lsl #8
    9f3c:	53120000 	tstpl	r2, #0
    9f40:	01005445 	tsteq	r0, r5, asr #8
    9f44:	04080500 	streq	r0, [r8], #-1280	; 0xfffffb00
    9f48:	00000664 	andeq	r0, r0, r4, ror #12
    9f4c:	2e081013 	mcrcs	0, 0, r1, cr8, cr3, {0}
    9f50:	00081809 	andeq	r1, r8, r9, lsl #16
    9f54:	21261400 			; <UNDEFINED> instruction: 0x21261400
    9f58:	30080000 	andcc	r0, r8, r0
    9f5c:	0002be1a 	andeq	fp, r2, sl, lsl lr
    9f60:	00230200 	eoreq	r0, r3, r0, lsl #4
    9f64:	001f7014 	andseq	r7, pc, r4, lsl r0	; <UNPREDICTABLE>
    9f68:	1a320800 	bne	c8bf70 <_Min_Heap_Size+0xc8b770>
    9f6c:	000002be 			; <UNDEFINED> instruction: 0x000002be
    9f70:	14012302 	strne	r2, [r1], #-770	; 0xfffffcfe
    9f74:	00000264 	andeq	r0, r0, r4, ror #4
    9f78:	e71a3408 	ldr	r3, [sl, -r8, lsl #8]
    9f7c:	02000002 	andeq	r0, r0, #2
    9f80:	62140423 	andsvs	r0, r4, #587202560	; 0x23000000
    9f84:	08000027 	stmdaeq	r0, {r0, r1, r2, r5}
    9f88:	02be1a35 	adcseq	r1, lr, #217088	; 0x35000
    9f8c:	23020000 	movwcs	r0, #8192	; 0x2000
    9f90:	202a1408 	eorcs	r1, sl, r8, lsl #8
    9f94:	37080000 	strcc	r0, [r8, -r0]
    9f98:	0002be1a 	andeq	fp, r2, sl, lsl lr
    9f9c:	09230200 	stmdbeq	r3!, {r9}
    9fa0:	001ccd14 	andseq	ip, ip, r4, lsl sp
    9fa4:	1a390800 	bne	e4bfac <_Min_Heap_Size+0xe4b7ac>
    9fa8:	000002be 			; <UNDEFINED> instruction: 0x000002be
    9fac:	140a2302 	strne	r2, [sl], #-770	; 0xfffffcfe
    9fb0:	00001edd 	ldrdeq	r1, [r0], -sp
    9fb4:	be1a3b08 	vnmlslt.f64	d3, d10, d8
    9fb8:	02000002 	andeq	r0, r0, #2
    9fbc:	0d140b23 	vldreq	d0, [r4, #-140]	; 0xffffff74
    9fc0:	08000020 	stmdaeq	r0, {r5}
    9fc4:	02be1a3d 	adcseq	r1, lr, #249856	; 0x3d000
    9fc8:	23020000 	movwcs	r0, #8192	; 0x2000
    9fcc:	2163140c 	cmncs	r3, ip, lsl #8
    9fd0:	3f080000 	svccc	0x00080000
    9fd4:	0002be1a 	andeq	fp, r2, sl, lsl lr
    9fd8:	0d230200 	sfmeq	f0, 4, [r3, #-0]
    9fdc:	001e5214 	andseq	r5, lr, r4, lsl r2
    9fe0:	1a410800 	bne	104bfe8 <_Min_Heap_Size+0x104b7e8>
    9fe4:	000002be 			; <UNDEFINED> instruction: 0x000002be
    9fe8:	140e2302 	strne	r2, [lr], #-770	; 0xfffffcfe
    9fec:	00001d4b 	andeq	r1, r0, fp, asr #26
    9ff0:	be1a4308 	cdplt	3, 1, cr4, cr10, cr8, {0}
    9ff4:	02000002 	andeq	r0, r0, #2
    9ff8:	06000f23 	streq	r0, [r0], -r3, lsr #30
    9ffc:	00001e3b 	andeq	r1, r0, fp, lsr lr
    a000:	69024508 	stmdbvs	r2, {r3, r8, sl, lr}
    a004:	15000007 	strne	r0, [r0, #-7]
    a008:	001ff201 	andseq	pc, pc, r1, lsl #4
    a00c:	01e90100 	mvneq	r0, r0, lsl #2
    a010:	0000010d 	andeq	r0, r0, sp, lsl #2
    a014:	00000000 	andeq	r0, r0, r0
    a018:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a01c:	01160100 	tsteq	r6, r0, lsl #2
    a020:	00001d6b 	andeq	r1, r0, fp, ror #26
    a024:	0601e001 	streq	lr, [r1], -r1
    a028:	00000001 	andeq	r0, r0, r1
    a02c:	00000000 	andeq	r0, r0, r0
    a030:	006c1700 	rsbeq	r1, ip, r0, lsl #14
    a034:	08610100 	stmdaeq	r1!, {r8}^
    a038:	00170000 	andseq	r0, r7, r0
    a03c:	24000000 	strcs	r0, [r0], #-0
    a040:	00000008 	andeq	r0, r0, r8
    a044:	20bc0116 	adcscs	r0, ip, r6, lsl r1
    a048:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    a04c:	00010601 	andeq	r0, r1, r1, lsl #12
    a050:	00000000 	andeq	r0, r0, r0
    a054:	37000000 	strcc	r0, [r0, -r0]
    a058:	0100006c 	tsteq	r0, ip, rrx
    a05c:	000008ad 	andeq	r0, r0, sp, lsr #17
    a060:	0008cd18 	andeq	ip, r8, r8, lsl sp
    a064:	01ce0100 	biceq	r0, lr, r0, lsl #2
    a068:	0002e72b 	andeq	lr, r2, fp, lsr #14
    a06c:	006c5f00 	rsbeq	r5, ip, r0, lsl #30
    a070:	006c5700 	rsbeq	r5, ip, r0, lsl #14
    a074:	00001900 	andeq	r1, r0, r0, lsl #18
    a078:	14180000 	ldrne	r0, [r8], #-0
    a07c:	011a0000 	tsteq	sl, r0
    a080:	40030550 	andmi	r0, r3, r0, asr r5
    a084:	1a08002d 	bne	20a140 <_Min_Heap_Size+0x209940>
    a088:	0a035101 	beq	de494 <_Min_Heap_Size+0xddc94>
    a08c:	000001d1 	ldrdeq	r0, [r0], -r1
    a090:	1f37011b 	svcne	0x0037011b
    a094:	bd010000 	stclt	0, cr0, [r1, #-0]
    a098:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a09c:	00000002 	andeq	r0, r0, r2
    a0a0:	00000000 	andeq	r0, r0, r0
    a0a4:	93000000 	movwls	r0, #0
    a0a8:	0100006c 	tsteq	r0, ip, rrx
    a0ac:	00000921 	andeq	r0, r0, r1, lsr #18
    a0b0:	000f2418 	andeq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    a0b4:	01bd0100 			; <UNDEFINED> instruction: 0x01bd0100
    a0b8:	00024327 	andeq	r4, r2, r7, lsr #6
    a0bc:	006cbb00 	rsbeq	fp, ip, r0, lsl #22
    a0c0:	006cb300 	rsbeq	fp, ip, r0, lsl #6
    a0c4:	12fb1c00 	rscsne	r1, fp, #0, 24
    a0c8:	00000000 	andeq	r0, r0, r0
    a0cc:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    a0d0:	01000004 	tsteq	r0, r4
    a0d4:	060a01c3 	streq	r0, [sl], -r3, asr #3
    a0d8:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a0dc:	0000130e 	andeq	r1, r0, lr, lsl #6
    a0e0:	00006cf9 	strdeq	r6, [r0], -r9
    a0e4:	00006cf5 	strdeq	r6, [r0], -r5
    a0e8:	00001900 	andeq	r1, r0, r0, lsl #18
    a0ec:	14180000 	ldrne	r0, [r8], #-0
    a0f0:	011a0000 	tsteq	sl, r0
    a0f4:	40030550 	andmi	r0, r3, r0, asr r5
    a0f8:	1a08002d 	bne	20a1b4 <_Min_Heap_Size+0x2099b4>
    a0fc:	0a035101 	beq	de508 <_Min_Heap_Size+0xddd08>
    a100:	000001c0 	andeq	r0, r0, r0, asr #3
    a104:	1d820116 	stfnes	f0, [r2, #88]	; 0x58
    a108:	ac010000 	stcge	0, cr0, [r1], {-0}
    a10c:	00010601 	andeq	r0, r1, r1, lsl #12
    a110:	00000000 	andeq	r0, r0, r0
    a114:	17000000 	strne	r0, [r0, -r0]
    a118:	0100006d 	tsteq	r0, sp, rrx
    a11c:	00000995 	muleq	r0, r5, r9
    a120:	000f2418 	andeq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    a124:	01ac0100 			; <UNDEFINED> instruction: 0x01ac0100
    a128:	00024329 	andeq	r4, r2, r9, lsr #6
    a12c:	006d3f00 	rsbeq	r3, sp, r0, lsl #30
    a130:	006d3700 	rsbeq	r3, sp, r0, lsl #14
    a134:	131c1e00 	tstne	ip, #0, 28
    a138:	00000000 	andeq	r0, r0, r0
    a13c:	00010000 	andeq	r0, r1, r0
    a140:	00000000 	andeq	r0, r0, r0
    a144:	01000000 	mrseq	r0, (UNDEF: 0)
    a148:	7a0301b2 	bvc	ca818 <_Min_Heap_Size+0xca018>
    a14c:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a150:	0000132b 	andeq	r1, r0, fp, lsr #6
    a154:	00006d7b 	andeq	r6, r0, fp, ror sp
    a158:	00006d79 	andeq	r6, r0, r9, ror sp
    a15c:	00001900 	andeq	r1, r0, r0, lsl #18
    a160:	14180000 	ldrne	r0, [r8], #-0
    a164:	011a0000 	tsteq	sl, r0
    a168:	40030550 	andmi	r0, r3, r0, asr r5
    a16c:	1a08002d 	bne	20a228 <_Min_Heap_Size+0x209a28>
    a170:	0a035101 	beq	de57c <_Min_Heap_Size+0xddd7c>
    a174:	000001af 	andeq	r0, r0, pc, lsr #3
    a178:	1e8b011b 	mcrne	1, 4, r0, cr11, cr11, {0}
    a17c:	9c010000 	stcls	0, cr0, [r1], {-0}
    a180:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a184:	00000002 	andeq	r0, r0, r2
    a188:	00000000 	andeq	r0, r0, r0
    a18c:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    a190:	0100006d 	tsteq	r0, sp, rrx
    a194:	00000a09 	andeq	r0, r0, r9, lsl #20
    a198:	000f2418 	andeq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    a19c:	019c0100 	orrseq	r0, ip, r0, lsl #2
    a1a0:	0002432b 	andeq	r4, r2, fp, lsr #6
    a1a4:	006db600 	rsbeq	fp, sp, r0, lsl #12
    a1a8:	006dae00 	rsbeq	sl, sp, r0, lsl #28
    a1ac:	13561c00 	cmpne	r6, #0, 24
    a1b0:	00000000 	andeq	r0, r0, r0
    a1b4:	c0010000 	andgt	r0, r1, r0
    a1b8:	01000004 	tsteq	r0, r4
    a1bc:	ee0a01a2 	adf<illegal precision>p	f0, f2, f2
    a1c0:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    a1c4:	00001369 	andeq	r1, r0, r9, ror #6
    a1c8:	00006df4 	strdeq	r6, [r0], -r4
    a1cc:	00006df0 	strdeq	r6, [r0], -r0
    a1d0:	00001900 	andeq	r1, r0, r0, lsl #18
    a1d4:	14180000 	ldrne	r0, [r8], #-0
    a1d8:	011a0000 	tsteq	sl, r0
    a1dc:	40030550 	andmi	r0, r3, r0, asr r5
    a1e0:	1a08002d 	bne	20a29c <_Min_Heap_Size+0x209a9c>
    a1e4:	0a035101 	beq	de5f0 <_Min_Heap_Size+0xdddf0>
    a1e8:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    a1ec:	21820116 	orrcs	r0, r2, r6, lsl r1
    a1f0:	8a010000 	bhi	4a1f8 <_Min_Heap_Size+0x499f8>
    a1f4:	00010601 	andeq	r0, r1, r1, lsl #12
    a1f8:	00000000 	andeq	r0, r0, r0
    a1fc:	12000000 	andne	r0, r0, #0
    a200:	0100006e 	tsteq	r0, lr, rrx
    a204:	00000a7d 	andeq	r0, r0, sp, ror sl
    a208:	000f2418 	andeq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    a20c:	018a0100 	orreq	r0, sl, r0, lsl #2
    a210:	00024327 	andeq	r4, r2, r7, lsr #6
    a214:	006e3a00 	rsbeq	r3, lr, r0, lsl #20
    a218:	006e3200 	rsbeq	r3, lr, r0, lsl #4
    a21c:	13391e00 	teqne	r9, #0, 28
    a220:	00000000 	andeq	r0, r0, r0
    a224:	00010000 	andeq	r0, r1, r0
    a228:	00000000 	andeq	r0, r0, r0
    a22c:	01000000 	mrseq	r0, (UNDEF: 0)
    a230:	62030190 	andvs	r0, r3, #144, 2	; 0x24
    a234:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    a238:	00001348 	andeq	r1, r0, r8, asr #6
    a23c:	00006e76 	andeq	r6, r0, r6, ror lr
    a240:	00006e74 	andeq	r6, r0, r4, ror lr
    a244:	00001900 	andeq	r1, r0, r0, lsl #18
    a248:	14180000 	ldrne	r0, [r8], #-0
    a24c:	011a0000 	tsteq	sl, r0
    a250:	40030550 	andmi	r0, r3, r0, asr r5
    a254:	1a08002d 	bne	20a310 <_Min_Heap_Size+0x209b10>
    a258:	0a035101 	beq	de664 <_Min_Heap_Size+0xdde64>
    a25c:	0000018d 	andeq	r0, r0, sp, lsl #3
    a260:	1dbf0116 	ldfnes	f0, [pc, #88]!	; a2c0 <_Min_Heap_Size+0x9ac0>
    a264:	7b010000 	blvc	4a26c <_Min_Heap_Size+0x49a6c>
    a268:	00010601 	andeq	r0, r1, r1, lsl #12
    a26c:	00000000 	andeq	r0, r0, r0
    a270:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
    a274:	0100006e 	tsteq	r0, lr, rrx
    a278:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a27c:	000f2418 	andeq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    a280:	017b0100 	cmneq	fp, r0, lsl #2
    a284:	00024325 	andeq	r4, r2, r5, lsr #6
    a288:	006eb100 	rsbeq	fp, lr, r0, lsl #2
    a28c:	006ea900 	rsbeq	sl, lr, r0, lsl #18
    a290:	1d581800 	ldclne	8, cr1, [r8, #-0]
    a294:	7b010000 	blvc	4a29c <_Min_Heap_Size+0x49a9c>
    a298:	02e73401 	rsceq	r3, r7, #16777216	; 0x1000000
    a29c:	6ef50000 	cdpvs	0, 15, cr0, cr5, cr0, {0}
    a2a0:	6eeb0000 	cdpvs	0, 14, cr0, cr11, cr0, {0}
    a2a4:	c7180000 	ldrgt	r0, [r8, -r0]
    a2a8:	0100001e 	tsteq	r0, lr, lsl r0
    a2ac:	a44d017b 	strbge	r0, [sp], #-379	; 0xfffffe85
    a2b0:	3f00000b 	svccc	0x0000000b
    a2b4:	3700006f 	strcc	r0, [r0, -pc, rrx]
    a2b8:	1800006f 	stmdane	r0, {r0, r1, r2, r3, r5, r6}
    a2bc:	00001f63 	andeq	r1, r0, r3, ror #30
    a2c0:	69017b01 	stmdbvs	r1, {r0, r8, r9, fp, ip, sp, lr}
    a2c4:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a2c8:	00006f77 	andeq	r6, r0, r7, ror pc
    a2cc:	00006f73 	andeq	r6, r0, r3, ror pc
    a2d0:	0012b01c 	andseq	fp, r2, ip, lsl r0
    a2d4:	00000000 	andeq	r0, r0, r0
    a2d8:	04900100 	ldreq	r0, [r0], #256	; 0x100
    a2dc:	80010000 	andhi	r0, r1, r0
    a2e0:	0b110301 	bleq	44aeec <_Min_Heap_Size+0x44a6ec>
    a2e4:	c31d0000 	tstgt	sp, #0
    a2e8:	99000012 	stmdbls	r0, {r1, r4}
    a2ec:	9500006f 	strls	r0, [r0, #-111]	; 0xffffff91
    a2f0:	0000006f 	andeq	r0, r0, pc, rrx
    a2f4:	0011e31c 	andseq	lr, r1, ip, lsl r3
    a2f8:	00000000 	andeq	r0, r0, r0
    a2fc:	04a80100 	strteq	r0, [r8], #256	; 0x100
    a300:	80010000 	andhi	r0, r1, r0
    a304:	0b890301 	bleq	fe24af10 <_estack+0xde249cd0>
    a308:	191d0000 	ldmdbne	sp, {}	; <UNPREDICTABLE>
    a30c:	bb000012 	bllt	a35c <_Min_Heap_Size+0x9b5c>
    a310:	b700006f 	strlt	r0, [r0, -pc, rrx]
    a314:	1d00006f 	stcne	0, cr0, [r0, #-444]	; 0xfffffe44
    a318:	0000120c 	andeq	r1, r0, ip, lsl #4
    a31c:	00006fdd 	ldrdeq	r6, [r0], -sp
    a320:	00006fd9 	ldrdeq	r6, [r0], -r9
    a324:	0011ff1d 	andseq	pc, r1, sp, lsl pc	; <UNPREDICTABLE>
    a328:	00700100 	rsbseq	r0, r0, r0, lsl #2
    a32c:	006ffb00 	rsbeq	pc, pc, r0, lsl #22
    a330:	11f21d00 	mvnsne	r1, r0, lsl #26
    a334:	70310000 	eorsvc	r0, r1, r0
    a338:	702d0000 	eorvc	r0, sp, r0
    a33c:	a81f0000 	ldmdage	pc, {}	; <UNPREDICTABLE>
    a340:	20000004 	andcs	r0, r0, r4
    a344:	00001226 	andeq	r1, r0, r6, lsr #4
    a348:	00007059 	andeq	r7, r0, r9, asr r0
    a34c:	0000704f 	andeq	r7, r0, pc, asr #32
    a350:	00123320 	andseq	r3, r2, r0, lsr #6
    a354:	0070a700 	rsbseq	sl, r0, r0, lsl #14
    a358:	0070a100 	rsbseq	sl, r0, r0, lsl #2
    a35c:	12402000 	subne	r2, r0, #0
    a360:	70ee0000 	rscvc	r0, lr, r0
    a364:	70ec0000 	rscvc	r0, ip, r0
    a368:	00000000 	andeq	r0, r0, r0
    a36c:	00000019 	andeq	r0, r0, r9, lsl r0
    a370:	00141800 	andseq	r1, r4, r0, lsl #16
    a374:	50011a00 	andpl	r1, r1, r0, lsl #20
    a378:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a37c:	011a0800 	tsteq	sl, r0, lsl #16
    a380:	7e0a0351 	mcrvc	3, 0, r0, cr10, cr1, {2}
    a384:	21000001 	tstcs	r0, r1
    a388:	0002e704 	andeq	lr, r2, r4, lsl #14
    a38c:	0ba40900 	bleq	fe90c794 <_estack+0xde90b554>
    a390:	01220000 			; <UNDEFINED> instruction: 0x01220000
    a394:	00002101 	andeq	r2, r0, r1, lsl #2
    a398:	0a016001 	beq	623a4 <_Min_Heap_Size+0x61ba4>
    a39c:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    a3a8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    a3ac:	000be501 	andeq	lr, fp, r1, lsl #10
    a3b0:	13b12300 			; <UNDEFINED> instruction: 0x13b12300
    a3b4:	00000000 	andeq	r0, r0, r0
    a3b8:	00020000 	andeq	r0, r2, r0
    a3bc:	00000000 	andeq	r0, r0, r0
    a3c0:	01000000 	mrseq	r0, (UNDEF: 0)
    a3c4:	000a0163 	andeq	r0, sl, r3, ror #2
    a3c8:	1d280115 	stfnes	f0, [r8, #-84]!	; 0xffffffac
    a3cc:	56010000 	strpl	r0, [r1], -r0
    a3d0:	00010601 	andeq	r0, r1, r1, lsl #12
    a3d4:	00000000 	andeq	r0, r0, r0
    a3d8:	02000000 	andeq	r0, r0, #0
    a3dc:	1601007d 			; <UNDEFINED> instruction: 0x1601007d
    a3e0:	0020dd01 	eoreq	sp, r0, r1, lsl #26
    a3e4:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    a3e8:	00000106 	andeq	r0, r0, r6, lsl #2
    a3ec:	00000000 	andeq	r0, r0, r0
    a3f0:	71010000 	mrsvc	r0, (UNDEF: 1)
    a3f4:	56010000 	strpl	r0, [r1], -r0
    a3f8:	1800000d 	stmdane	r0, {r0, r2, r3}
    a3fc:	00001e16 	andeq	r1, r0, r6, lsl lr
    a400:	33012a01 	movwcc	r2, #6657	; 0x1a01
    a404:	00000d56 	andeq	r0, r0, r6, asr sp
    a408:	00007129 	andeq	r7, r0, r9, lsr #2
    a40c:	00007121 	andeq	r7, r0, r1, lsr #2
    a410:	00000024 	andeq	r0, r0, r4, lsr #32
    a414:	00141800 	andseq	r1, r4, r0, lsl #16
    a418:	000c4b00 	andeq	r4, ip, r0, lsl #22
    a41c:	50011a00 	andpl	r1, r1, r0, lsl #20
    a420:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a424:	011a0800 	tsteq	sl, r0, lsl #16
    a428:	2d0a0351 	stccs	3, cr0, [sl, #-324]	; 0xfffffebc
    a42c:	00240001 	eoreq	r0, r4, r1
    a430:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a434:	69000014 	stmdbvs	r0, {r2, r4}
    a438:	1a00000c 	bne	a470 <_Min_Heap_Size+0x9c70>
    a43c:	03055001 	movweq	r5, #20481	; 0x5001
    a440:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}
    a444:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a448:	00012e0a 	andeq	r2, r1, sl, lsl #28
    a44c:	00000024 	andeq	r0, r0, r4, lsr #32
    a450:	00141800 	andseq	r1, r4, r0, lsl #16
    a454:	000c8700 	andeq	r8, ip, r0, lsl #14
    a458:	50011a00 	andpl	r1, r1, r0, lsl #20
    a45c:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a460:	011a0800 	tsteq	sl, r0, lsl #16
    a464:	360a0351 			; <UNDEFINED> instruction: 0x360a0351
    a468:	00240001 	eoreq	r0, r4, r1
    a46c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a470:	a5000014 	strge	r0, [r0, #-20]	; 0xffffffec
    a474:	1a00000c 	bne	a4ac <_Min_Heap_Size+0x9cac>
    a478:	03055001 	movweq	r5, #20481	; 0x5001
    a47c:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}
    a480:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a484:	0001370a 	andeq	r3, r1, sl, lsl #14
    a488:	00000024 	andeq	r0, r0, r4, lsr #32
    a48c:	00141800 	andseq	r1, r4, r0, lsl #16
    a490:	000cc300 	andeq	ip, ip, r0, lsl #6
    a494:	50011a00 	andpl	r1, r1, r0, lsl #20
    a498:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a49c:	011a0800 	tsteq	sl, r0, lsl #16
    a4a0:	380a0351 	stmdacc	sl, {r0, r4, r6, r8, r9}
    a4a4:	00240001 	eoreq	r0, r4, r1
    a4a8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a4ac:	e1000014 	tst	r0, r4, lsl r0
    a4b0:	1a00000c 	bne	a4e8 <_Min_Heap_Size+0x9ce8>
    a4b4:	03055001 	movweq	r5, #20481	; 0x5001
    a4b8:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}
    a4bc:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a4c0:	0001390a 	andeq	r3, r1, sl, lsl #18
    a4c4:	00000024 	andeq	r0, r0, r4, lsr #32
    a4c8:	00141800 	andseq	r1, r4, r0, lsl #16
    a4cc:	000cff00 	andeq	pc, ip, r0, lsl #30
    a4d0:	50011a00 	andpl	r1, r1, r0, lsl #20
    a4d4:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a4d8:	011a0800 	tsteq	sl, r0, lsl #16
    a4dc:	3a0a0351 	bcc	28b228 <_Min_Heap_Size+0x28aa28>
    a4e0:	00240001 	eoreq	r0, r4, r1
    a4e4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a4e8:	1d000014 	stcne	0, cr0, [r0, #-80]	; 0xffffffb0
    a4ec:	1a00000d 	bne	a528 <_Min_Heap_Size+0x9d28>
    a4f0:	03055001 	movweq	r5, #20481	; 0x5001
    a4f4:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}
    a4f8:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a4fc:	00013b0a 	andeq	r3, r1, sl, lsl #22
    a500:	00000024 	andeq	r0, r0, r4, lsr #32
    a504:	00141800 	andseq	r1, r4, r0, lsl #16
    a508:	000d3b00 	andeq	r3, sp, r0, lsl #22
    a50c:	50011a00 	andpl	r1, r1, r0, lsl #20
    a510:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a514:	011a0800 	tsteq	sl, r0, lsl #16
    a518:	3c0a0351 	stccc	3, cr0, [sl], {81}	; 0x51
    a51c:	00190001 	andseq	r0, r9, r1
    a520:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a524:	1a000014 	bne	a57c <_Min_Heap_Size+0x9d7c>
    a528:	03055001 	movweq	r5, #20481	; 0x5001
    a52c:	08002d40 	stmdaeq	r0, {r6, r8, sl, fp, sp}
    a530:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a534:	00013d0a 	andeq	r3, r1, sl, lsl #26
    a538:	18042100 	stmdane	r4, {r8, sp}
    a53c:	25000008 	strcs	r0, [r0, #-8]
    a540:	00211e01 	eoreq	r1, r1, r1, lsl #28
    a544:	01170100 	tsteq	r7, r0, lsl #2
    a548:	00000106 	andeq	r0, r0, r6, lsl #2
    a54c:	00000000 	andeq	r0, r0, r0
    a550:	7d020000 	stcvc	0, cr0, [r2, #-0]
    a554:	0db90100 	ldfeqs	f0, [r9]
    a558:	b3180000 	tstlt	r8, #0
    a55c:	0100001d 	tsteq	r0, sp, lsl r0
    a560:	e71e0117 			; <UNDEFINED> instruction: 0xe71e0117
    a564:	61000002 	tstvs	r0, r2
    a568:	5d000071 	stcpl	0, cr0, [r0, #-452]	; 0xfffffe3c
    a56c:	23000071 	movwcs	r0, #113	; 0x71
    a570:	00001402 	andeq	r1, r0, r2, lsl #8
    a574:	00000000 	andeq	r0, r0, r0
    a578:	00000001 	andeq	r0, r0, r1
    a57c:	00000000 	andeq	r0, r0, r0
    a580:	01200100 			; <UNDEFINED> instruction: 0x01200100
    a584:	140d2303 	strne	r2, [sp], #-771	; 0xfffffcfd
    a588:	00000000 	andeq	r0, r0, r0
    a58c:	00010000 	andeq	r0, r1, r0
    a590:	00000000 	andeq	r0, r0, r0
    a594:	01000000 	mrseq	r0, (UNDEF: 0)
    a598:	00030121 	andeq	r0, r3, r1, lsr #2
    a59c:	1d9b0125 	ldfnes	f0, [fp, #148]	; 0x94
    a5a0:	00010000 	andeq	r0, r1, r0
    a5a4:	00010601 	andeq	r0, r1, r1, lsl #12
    a5a8:	00000000 	andeq	r0, r0, r0
    a5ac:	02000000 	andeq	r0, r0, #0
    a5b0:	eb01007d 	bl	4a7ac <_Min_Heap_Size+0x49fac>
    a5b4:	2300000d 	movwcs	r0, #13
    a5b8:	000013f7 	strdeq	r1, [r0], -r7
    a5bc:	00000000 	andeq	r0, r0, r0
    a5c0:	00000002 	andeq	r0, r0, r2
    a5c4:	00000000 	andeq	r0, r0, r0
    a5c8:	01030100 	mrseq	r0, (UNDEF: 19)
    a5cc:	01260003 			; <UNDEFINED> instruction: 0x01260003
    a5d0:	00001d15 	andeq	r1, r0, r5, lsl sp
    a5d4:	010ae301 	tsteq	sl, r1, lsl #6
    a5d8:	000002e7 	andeq	r0, r0, r7, ror #5
    a5dc:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    a5e0:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
    a5e4:	01007d02 	tsteq	r0, r2, lsl #26
    a5e8:	00000e72 	andeq	r0, r0, r2, ror lr
    a5ec:	0020ad27 	eoreq	sl, r0, r7, lsr #26
    a5f0:	26e30100 	strbtcs	r0, [r3], r0, lsl #2
    a5f4:	000002e7 	andeq	r0, r0, r7, ror #5
    a5f8:	00007188 	andeq	r7, r0, r8, lsl #3
    a5fc:	00007182 	andeq	r7, r0, r2, lsl #3
    a600:	0011b628 	andseq	fp, r1, r8, lsr #12
    a604:	0015b400 	andseq	fp, r5, r0, lsl #8
    a608:	15b40208 	ldrne	r0, [r4, #520]!	; 0x208
    a60c:	15d60800 	ldrbne	r0, [r6, #2048]	; 0x800
    a610:	e5010800 	str	r0, [r1, #-2048]	; 0xfffff800
    a614:	11c91d0b 	bicne	r1, r9, fp, lsl #26
    a618:	71bc0000 			; <UNDEFINED> instruction: 0x71bc0000
    a61c:	71b60000 			; <UNDEFINED> instruction: 0x71b60000
    a620:	d1290000 			; <UNDEFINED> instruction: 0xd1290000
    a624:	c2000012 	andgt	r0, r0, #18
    a628:	01080015 	tsteq	r8, r5, lsl r0
    a62c:	080015c2 	stmdaeq	r0, {r1, r6, r7, r8, sl, ip}
    a630:	080015ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, ip}
    a634:	0307ee02 	movweq	lr, #32258	; 0x7e02
    a638:	0012ed1d 	andseq	lr, r2, sp, lsl sp
    a63c:	0071ec00 	rsbseq	lr, r1, r0, lsl #24
    a640:	0071ea00 	rsbseq	lr, r1, r0, lsl #20
    a644:	12e01d00 	rscne	r1, r0, #0, 26
    a648:	72020000 	andvc	r0, r2, #0
    a64c:	72000000 	andvc	r0, r0, #0
    a650:	00000000 	andeq	r0, r0, r0
    a654:	a2012a00 	andge	r2, r1, #0, 20
    a658:	0100001e 	tsteq	r0, lr, lsl r0
    a65c:	000106d6 	ldrdeq	r0, [r1], -r6
    a660:	00000000 	andeq	r0, r0, r0
    a664:	02000000 	andeq	r0, r0, #0
    a668:	cf01007d 	svcgt	0x0001007d
    a66c:	2800000e 	stmdacs	r0, {r1, r2, r3}
    a670:	000011d7 	ldrdeq	r1, [r0], -r7
    a674:	00000000 	andeq	r0, r0, r0
    a678:	00000002 	andeq	r0, r0, r2
    a67c:	00000000 	andeq	r0, r0, r0
    a680:	03d90100 	bicseq	r0, r9, #0, 2
    a684:	00140223 	andseq	r0, r4, r3, lsr #4
    a688:	00000000 	andeq	r0, r0, r0
    a68c:	00000400 	andeq	r0, r0, r0, lsl #8
    a690:	00000000 	andeq	r0, r0, r0
    a694:	94020000 	strls	r0, [r2], #-0
    a698:	02230307 	eoreq	r0, r3, #469762048	; 0x1c000000
    a69c:	00000014 	andeq	r0, r0, r4, lsl r0
    a6a0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a6ac:	03079902 	movweq	r9, #30978	; 0x7902
    a6b0:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    a6b4:	00000ed5 	ldrdeq	r0, [r0], -r5
    a6b8:	0106c901 	tsteq	r6, r1, lsl #18
	...
    a6c4:	00007217 	andeq	r7, r0, r7, lsl r2
    a6c8:	000f6b01 	andeq	r6, pc, r1, lsl #22
    a6cc:	0f242700 	svceq	0x00242700
    a6d0:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    a6d4:	00024324 	andeq	r4, r2, r4, lsr #6
    a6d8:	00723f00 	rsbseq	r3, r2, r0, lsl #30
    a6dc:	00723700 	rsbseq	r3, r2, r0, lsl #14
    a6e0:	13772c00 	cmnne	r7, #0, 24
    a6e4:	00000000 	andeq	r0, r0, r0
    a6e8:	00010000 	andeq	r0, r1, r0
    a6ec:	00000000 	andeq	r0, r0, r0
    a6f0:	01000000 	mrseq	r0, (UNDEF: 0)
    a6f4:	0f5103cf 	svceq	0x005103cf
    a6f8:	861d0000 	ldrhi	r0, [sp], -r0
    a6fc:	7b000013 	blvc	a750 <_Min_Heap_Size+0x9f50>
    a700:	79000072 	stmdbvc	r0, {r1, r4, r5, r6}
    a704:	23000072 	movwcs	r0, #114	; 0x72
    a708:	00001402 	andeq	r1, r0, r2, lsl #8
    a70c:	00000000 	andeq	r0, r0, r0
    a710:	00000001 	andeq	r0, r0, r1
    a714:	00000000 	andeq	r0, r0, r0
    a718:	06bf0200 	ldrteq	r0, [pc], r0, lsl #4
    a71c:	140d2305 	strne	r2, [sp], #-773	; 0xfffffcfb
    a720:	00000000 	andeq	r0, r0, r0
    a724:	00010000 	andeq	r0, r1, r0
    a728:	00000000 	andeq	r0, r0, r0
    a72c:	02000000 	andeq	r0, r0, #0
    a730:	000506c0 	andeq	r0, r5, r0, asr #13
    a734:	00000019 	andeq	r0, r0, r9, lsl r0
    a738:	00141800 	andseq	r1, r4, r0, lsl #16
    a73c:	50011a00 	andpl	r1, r1, r0, lsl #20
    a740:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a744:	011a0800 	tsteq	sl, r0, lsl #16
    a748:	cc080251 	sfmgt	f0, 4, [r8], {81}	; 0x51
    a74c:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    a750:	00000e74 	andeq	r0, r0, r4, ror lr
    a754:	0106b901 	tsteq	r6, r1, lsl #18
    a758:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
    a75c:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    a760:	0000728e 	andeq	r7, r0, lr, lsl #5
    a764:	000fdb01 	andeq	sp, pc, r1, lsl #22
    a768:	0f242700 	svceq	0x00242700
    a76c:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    a770:	00024323 	andeq	r4, r2, r3, lsr #6
    a774:	0072b600 	rsbseq	fp, r2, r0, lsl #12
    a778:	0072ae00 	rsbseq	sl, r2, r0, lsl #28
    a77c:	13942c00 	orrsne	r2, r4, #0, 24
    a780:	158a0000 	strne	r0, [sl]
    a784:	8a010800 	bhi	4c78c <_Min_Heap_Size+0x4bf8c>
    a788:	9e080015 	mcrls	0, 0, r0, cr8, cr5, {0}
    a78c:	01080015 	tsteq	r8, r5, lsl r0
    a790:	0fc103bf 	svceq	0x00c103bf
    a794:	a31d0000 	tstge	sp, #0
    a798:	f2000013 	vqadd.s8	d0, d0, d3
    a79c:	f0000072 			; <UNDEFINED> instruction: 0xf0000072
    a7a0:	00000072 	andeq	r0, r0, r2, ror r0
    a7a4:	0015a819 	andseq	sl, r5, r9, lsl r8
    a7a8:	00141808 	andseq	r1, r4, r8, lsl #16
    a7ac:	50011a00 	andpl	r1, r1, r0, lsl #20
    a7b0:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a7b4:	011a0800 	tsteq	sl, r0, lsl #16
    a7b8:	bc080251 	sfmlt	f0, 4, [r8], {81}	; 0x51
    a7bc:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
    a7c0:	00000e25 	andeq	r0, r0, r5, lsr #28
    a7c4:	0106a301 	tsteq	r6, r1, lsl #6
    a7c8:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
    a7cc:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
    a7d0:	00007305 	andeq	r7, r0, r5, lsl #6
    a7d4:	00112c01 	andseq	r2, r1, r1, lsl #24
    a7d8:	0f242700 	svceq	0x00242700
    a7dc:	a3010000 	movwge	r0, #4096	; 0x1000
    a7e0:	00024325 	andeq	r4, r2, r5, lsr #6
    a7e4:	00732d00 	rsbseq	r2, r3, r0, lsl #26
    a7e8:	00732500 	rsbseq	r2, r3, r0, lsl #10
    a7ec:	1ec82700 	cdpne	7, 12, cr2, cr8, cr0, {0}
    a7f0:	a3010000 	movwge	r0, #4096	; 0x1000
    a7f4:	0002e734 	andeq	lr, r2, r4, lsr r7
    a7f8:	00737300 	rsbseq	r7, r3, r0, lsl #6
    a7fc:	00736700 	rsbseq	r6, r3, r0, lsl #14
    a800:	1f642700 	svcne	0x00642700
    a804:	a3010000 	movwge	r0, #4096	; 0x1000
    a808:	0002e74e 	andeq	lr, r2, lr, asr #14
    a80c:	0073cf00 	rsbseq	ip, r3, r0, lsl #30
    a810:	0073c300 	rsbseq	ip, r3, r0, lsl #6
    a814:	1f772d00 	svcne	0x00772d00
    a818:	a5010000 	strge	r0, [r1, #-0]
    a81c:	0002e70c 	andeq	lr, r2, ip, lsl #14
    a820:	00742b00 	rsbseq	r2, r4, r0, lsl #22
    a824:	00741f00 	rsbseq	r1, r4, r0, lsl #30
    a828:	13b12e00 			; <UNDEFINED> instruction: 0x13b12e00
    a82c:	15080000 	strne	r0, [r8, #-0]
    a830:	08010800 	stmdaeq	r1, {fp}
    a834:	10080015 	andne	r0, r8, r5, lsl r0
    a838:	01080015 	tsteq	r8, r5, lsl r0
    a83c:	4e2f13ab 	cdpmi	3, 2, cr1, cr15, cr11, {5}
    a840:	10000012 	andne	r0, r0, r2, lsl r0
    a844:	02080015 	andeq	r0, r8, #21
    a848:	00000460 	andeq	r0, r0, r0, ror #8
    a84c:	c503ad01 	strgt	sl, [r3, #-3329]	; 0xfffff2ff
    a850:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    a854:	0000127b 	andeq	r1, r0, fp, ror r2
    a858:	00007481 	andeq	r7, r0, r1, lsl #9
    a85c:	0000747b 	andeq	r7, r0, fp, ror r4
    a860:	00126e1d 	andseq	r6, r2, sp, lsl lr
    a864:	0074b300 	rsbseq	fp, r4, r0, lsl #6
    a868:	0074ad00 	rsbseq	sl, r4, r0, lsl #26
    a86c:	12611d00 	rsbne	r1, r1, #0, 26
    a870:	74e70000 	strbtvc	r0, [r7], #0
    a874:	74df0000 	ldrbvc	r0, [pc], #0	; a87c <_Min_Heap_Size+0xa07c>
    a878:	601f0000 	andsvs	r0, pc, r0
    a87c:	20000004 	andcs	r0, r0, r4
    a880:	00001288 	andeq	r1, r0, r8, lsl #5
    a884:	00007527 	andeq	r7, r0, r7, lsr #10
    a888:	0000751f 	andeq	r7, r0, pc, lsl r5
    a88c:	00129520 	andseq	r9, r2, r0, lsr #10
    a890:	00756300 	rsbseq	r6, r5, r0, lsl #6
    a894:	00755f00 	rsbseq	r5, r5, r0, lsl #30
    a898:	12a22000 	adcne	r2, r2, #0
    a89c:	75830000 	strvc	r0, [r3]
    a8a0:	75810000 	strvc	r0, [r1]
    a8a4:	00000000 	andeq	r0, r0, r0
    a8a8:	0012d12f 	andseq	sp, r2, pc, lsr #2
    a8ac:	00153a00 	andseq	r3, r5, r0, lsl #20
    a8b0:	04780108 	ldrbteq	r0, [r8], #-264	; 0xfffffef8
    a8b4:	ad010000 	stcge	0, cr0, [r1, #-0]
    a8b8:	0010f503 	andseq	pc, r0, r3, lsl #10
    a8bc:	12ed1d00 	rscne	r1, sp, #0, 26
    a8c0:	759a0000 	ldrvc	r0, [sl]
    a8c4:	75960000 	ldrvc	r0, [r6]
    a8c8:	e01d0000 	ands	r0, sp, r0
    a8cc:	bc000012 	stclt	0, cr0, [r0], {18}
    a8d0:	b8000075 	stmdalt	r0, {r0, r2, r4, r5, r6}
    a8d4:	00000075 	andeq	r0, r0, r5, ror r0
    a8d8:	00155824 	andseq	r5, r5, r4, lsr #16
    a8dc:	00141808 	andseq	r1, r4, r8, lsl #16
    a8e0:	00111200 	andseq	r1, r1, r0, lsl #4
    a8e4:	50011a00 	andpl	r1, r1, r0, lsl #20
    a8e8:	2d400305 	stclcs	3, cr0, [r0, #-20]	; 0xffffffec
    a8ec:	011a0800 	tsteq	sl, r0, lsl #16
    a8f0:	a8080251 	stmdage	r8, {r0, r4, r6, r9}
    a8f4:	15621900 	strbne	r1, [r2, #-2304]!	; 0xfffff700
    a8f8:	14180800 	ldrne	r0, [r8], #-2048	; 0xfffff800
    a8fc:	011a0000 	tsteq	sl, r0
    a900:	40030550 	andmi	r0, r3, r0, asr r5
    a904:	1a08002d 	bne	20a9c0 <_Min_Heap_Size+0x20a1c0>
    a908:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a90c:	2b0000a9 	blcs	abb8 <_Min_Heap_Size+0xa3b8>
    a910:	00204a01 	eoreq	r4, r0, r1, lsl #20
    a914:	068d0100 	streq	r0, [sp], r0, lsl #2
    a918:	0014bc01 	andseq	fp, r4, r1, lsl #24
    a91c:	0014f808 	andseq	pc, r4, r8, lsl #16
    a920:	0075da08 	rsbseq	sp, r5, r8, lsl #20
    a924:	11b60100 			; <UNDEFINED> instruction: 0x11b60100
    a928:	58270000 	stmdapl	r7!, {}	; <UNPREDICTABLE>
    a92c:	0100001d 	tsteq	r0, sp, lsl r0
    a930:	02e72c8d 	rsceq	r2, r7, #36096	; 0x8d00
    a934:	76040000 	strvc	r0, [r4], -r0
    a938:	75fa0000 	ldrbvc	r0, [sl, #0]!
    a93c:	c02c0000 	eorgt	r0, ip, r0
    a940:	c6000013 			; <UNDEFINED> instruction: 0xc6000013
    a944:	01080014 	tsteq	r8, r4, lsl r0
    a948:	080014c6 	stmdaeq	r0, {r1, r2, r6, r7, sl, ip}
    a94c:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
    a950:	9c039301 	stcls	3, cr9, [r3], {1}
    a954:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    a958:	000013cf 	andeq	r1, r0, pc, asr #7
    a95c:	0000764a 	andeq	r7, r0, sl, asr #12
    a960:	00007646 	andeq	r7, r0, r6, asr #12
    a964:	0013dc20 	andseq	sp, r3, r0, lsr #24
    a968:	00767100 	rsbseq	r7, r6, r0, lsl #2
    a96c:	00766b00 	rsbseq	r6, r6, r0, lsl #22
    a970:	13e92000 	mvnne	r2, #0
    a974:	769e0000 	ldrvc	r0, [lr], r0
    a978:	769a0000 	ldrvc	r0, [sl], r0
    a97c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    a980:	080014ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, sl, ip}
    a984:	00001418 	andeq	r1, r0, r8, lsl r4
    a988:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    a98c:	002d4003 	eoreq	r4, sp, r3
    a990:	51011a08 	tstpl	r1, r8, lsl #20
    a994:	00900802 	addseq	r0, r0, r2, lsl #16
    a998:	20f23000 	rscscs	r3, r2, r0
    a99c:	e6020000 	str	r0, [r2], -r0
    a9a0:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    a9a4:	03000002 	movweq	r0, #2
    a9a8:	000011d7 	ldrdeq	r1, [r0], -r7
    a9ac:	001f8a31 	andseq	r8, pc, r1, lsr sl	; <UNPREDICTABLE>
    a9b0:	07e60200 	strbeq	r0, [r6, r0, lsl #4]!
    a9b4:	0002e732 	andeq	lr, r2, r2, lsr r7
    a9b8:	eb320000 	bl	c8a9c0 <_Min_Heap_Size+0xc8a1c0>
    a9bc:	0200001d 	andeq	r0, r0, #29
    a9c0:	01220792 			; <UNDEFINED> instruction: 0x01220792
    a9c4:	de330301 	cdple	3, 3, cr0, cr3, cr1, {0}
    a9c8:	0200001f 	andeq	r0, r0, #31
    a9cc:	01160760 	tsteq	r6, r0, ror #14
    a9d0:	00124e03 	andseq	r4, r2, r3, lsl #28
    a9d4:	1f673100 	svcne	0x00673100
    a9d8:	60020000 	andvs	r0, r2, r0
    a9dc:	02e73407 	rsceq	r3, r7, #117440512	; 0x7000000
    a9e0:	58310000 	ldmdapl	r1!, {}	; <UNPREDICTABLE>
    a9e4:	0200001d 	andeq	r0, r0, #29
    a9e8:	e7470760 	strb	r0, [r7, -r0, ror #14]
    a9ec:	31000002 	tstcc	r0, r2
    a9f0:	00001ec7 	andeq	r1, r0, r7, asr #29
    a9f4:	66076002 	strvs	r6, [r7], -r2
    a9f8:	00000baa 	andeq	r0, r0, sl, lsr #23
    a9fc:	001f6331 	andseq	r6, pc, r1, lsr r3	; <UNPREDICTABLE>
    aa00:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    aa04:	000baa88 	andeq	sl, fp, r8, lsl #21
    aa08:	20923400 	addscs	r3, r2, r0, lsl #8
    aa0c:	62020000 	andvs	r0, r2, #0
    aa10:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    aa14:	1f340000 	svcne	0x00340000
    aa18:	0200001e 	andeq	r0, r0, #30
    aa1c:	e70c0763 	str	r0, [ip, -r3, ror #14]
    aa20:	34000002 	strcc	r0, [r0], #-2
    aa24:	00001fce 	andeq	r1, r0, lr, asr #31
    aa28:	0c076402 	cfstrseq	mvf6, [r7], {2}
    aa2c:	000002e7 	andeq	r0, r0, r7, ror #5
    aa30:	1fb53000 	svcne	0x00b53000
    aa34:	45020000 	strmi	r0, [r2, #-0]
    aa38:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    aa3c:	03000002 	movweq	r0, #2
    aa40:	000012b0 			; <UNDEFINED> instruction: 0x000012b0
    aa44:	001d5831 	andseq	r5, sp, r1, lsr r8
    aa48:	07450200 	strbeq	r0, [r5, -r0, lsl #4]
    aa4c:	0002e738 	andeq	lr, r2, r8, lsr r7
    aa50:	1ec83100 	polnee	f3, f0, f0
    aa54:	45020000 	strmi	r0, [r2, #-0]
    aa58:	02e75007 	rsceq	r5, r7, #7
    aa5c:	64310000 	ldrtvs	r0, [r1], #-0
    aa60:	0200001f 	andeq	r0, r0, #31
    aa64:	e76a0745 	strb	r0, [sl, -r5, asr #14]!
    aa68:	34000002 	strcc	r0, [r0], #-2
    aa6c:	00002092 	muleq	r0, r2, r0
    aa70:	0c074702 	stceq	7, cr4, [r7], {2}
    aa74:	000002e7 	andeq	r0, r0, r7, ror #5
    aa78:	001e1f34 	andseq	r1, lr, r4, lsr pc
    aa7c:	07480200 	strbeq	r0, [r8, -r0, lsl #4]
    aa80:	0002e70c 	andeq	lr, r2, ip, lsl #14
    aa84:	1fce3400 	svcne	0x00ce3400
    aa88:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    aa8c:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    aa90:	30000000 	andcc	r0, r0, r0
    aa94:	00001f50 	andeq	r1, r0, r0, asr pc
    aa98:	1a072c02 	bne	1d5aa8 <_Min_Heap_Size+0x1d52a8>
    aa9c:	0002e701 	andeq	lr, r2, r1, lsl #14
    aaa0:	12d10300 	sbcsne	r0, r1, #0, 6
    aaa4:	24310000 	ldrtcs	r0, [r1], #-0
    aaa8:	0200000f 	andeq	r0, r0, #15
    aaac:	4337072c 	teqmi	r7, #44, 14	; 0xb00000
    aab0:	00000002 	andeq	r0, r0, r2
    aab4:	00216f33 	eoreq	r6, r1, r3, lsr pc
    aab8:	07160200 	ldreq	r0, [r6, -r0, lsl #4]
    aabc:	fb030116 	blx	caf1e <_Min_Heap_Size+0xca71e>
    aac0:	31000012 	tstcc	r0, r2, lsl r0
    aac4:	00000f24 	andeq	r0, r0, r4, lsr #30
    aac8:	33071602 	movwcc	r1, #30210	; 0x7602
    aacc:	00000243 	andeq	r0, r0, r3, asr #4
    aad0:	001f0431 	andseq	r0, pc, r1, lsr r4	; <UNPREDICTABLE>
    aad4:	07160200 	ldreq	r0, [r6, -r0, lsl #4]
    aad8:	0002e742 	andeq	lr, r2, r2, asr #14
    aadc:	32300000 	eorscc	r0, r0, #0
    aae0:	02000021 	andeq	r0, r0, #33	; 0x21
    aae4:	011a0700 	tsteq	sl, r0, lsl #14
    aae8:	000002e7 	andeq	r0, r0, r7, ror #5
    aaec:	00131c03 	andseq	r1, r3, r3, lsl #24
    aaf0:	0f243100 	svceq	0x00243100
    aaf4:	00020000 	andeq	r0, r2, r0
    aaf8:	02433507 	subeq	r3, r3, #29360128	; 0x1c00000
    aafc:	33000000 	movwcc	r0, #0
    ab00:	00001dd4 	ldrdeq	r1, [r0], -r4
    ab04:	1606ef02 	strne	lr, [r6], -r2, lsl #30
    ab08:	13390301 	teqne	r9, #67108864	; 0x4000000
    ab0c:	24310000 	ldrtcs	r0, [r1], #-0
    ab10:	0200000f 	andeq	r0, r0, #15
    ab14:	433706ef 	teqmi	r7, #250609664	; 0xef00000
    ab18:	00000002 	andeq	r0, r0, r2
    ab1c:	00206733 	eoreq	r6, r0, r3, lsr r7
    ab20:	06e00200 	strbteq	r0, [r0], r0, lsl #4
    ab24:	56030116 			; <UNDEFINED> instruction: 0x56030116
    ab28:	31000013 	tstcc	r0, r3, lsl r0
    ab2c:	00000f24 	andeq	r0, r0, r4, lsr #30
    ab30:	3506e002 	strcc	lr, [r6, #-2]
    ab34:	00000243 	andeq	r0, r0, r3, asr #4
    ab38:	1f9a3000 	svcne	0x009a3000
    ab3c:	cd020000 	stcgt	0, cr0, [r2, #-0]
    ab40:	e7011a06 	str	r1, [r1, -r6, lsl #20]
    ab44:	03000002 	movweq	r0, #2
    ab48:	00001377 	andeq	r1, r0, r7, ror r3
    ab4c:	000f2431 	andeq	r2, pc, r1, lsr r4	; <UNPREDICTABLE>
    ab50:	06cd0200 	strbeq	r0, [sp], r0, lsl #4
    ab54:	00024339 	andeq	r4, r2, r9, lsr r3
    ab58:	6b330000 	blvs	ccab60 <_Min_Heap_Size+0xcca360>
    ab5c:	0200001e 	andeq	r0, r0, #30
    ab60:	011606ba 			; <UNDEFINED> instruction: 0x011606ba
    ab64:	00139403 	andseq	r9, r3, r3, lsl #8
    ab68:	0f243100 	svceq	0x00243100
    ab6c:	ba020000 	blt	8ab74 <_Min_Heap_Size+0x8a374>
    ab70:	02433206 	subeq	r3, r3, #1610612736	; 0x60000000
    ab74:	33000000 	movwcc	r0, #0
    ab78:	0000207c 	andeq	r2, r0, ip, ror r0
    ab7c:	16069402 	strne	r9, [r6], -r2, lsl #8
    ab80:	13b10301 			; <UNDEFINED> instruction: 0x13b10301
    ab84:	24310000 	ldrtcs	r0, [r1], #-0
    ab88:	0200000f 	andeq	r0, r0, #15
    ab8c:	43310694 	teqmi	r1, #148, 12	; 0x9400000
    ab90:	00000002 	andeq	r0, r0, r2
    ab94:	00214335 	eoreq	r4, r1, r5, lsr r3
    ab98:	06880200 	streq	r0, [r8], r0, lsl #4
    ab9c:	02e7011a 	rsceq	r0, r7, #-2147483642	; 0x80000006
    aba0:	33030000 	movwcc	r0, #12288	; 0x3000
    aba4:	00001f1c 	andeq	r1, r0, ip, lsl pc
    aba8:	16067502 	strne	r7, [r6], -r2, lsl #10
    abac:	13f70301 	mvnsne	r0, #67108864	; 0x4000000
    abb0:	58310000 	ldmdapl	r1!, {}	; <UNPREDICTABLE>
    abb4:	0200001d 	andeq	r0, r0, #29
    abb8:	e73a0675 			; <UNDEFINED> instruction: 0xe73a0675
    abbc:	34000002 	strcc	r0, [r0], #-2
    abc0:	00001eb7 			; <UNDEFINED> instruction: 0x00001eb7
    abc4:	0c067702 	stceq	7, cr7, [r6], {2}
    abc8:	000002e7 	andeq	r0, r0, r7, ror #5
    abcc:	00209234 	eoreq	r9, r0, r4, lsr r2
    abd0:	06780200 	ldrbteq	r0, [r8], -r0, lsl #4
    abd4:	0002e70c 	andeq	lr, r2, ip, lsl #14
    abd8:	24360000 	ldrtcs	r0, [r6], #-0
    abdc:	03000020 	movweq	r0, #32
    abe0:	011b0118 	tsteq	fp, r8, lsl r1
    abe4:	1f4a3603 	svcne	0x004a3603
    abe8:	0d030000 	stceq	0, cr0, [r3, #-0]
    abec:	03011b01 	movweq	r1, #6913	; 0x1b01
    abf0:	001faf36 	andseq	sl, pc, r6, lsr pc	; <UNPREDICTABLE>
    abf4:	01020300 	mrseq	r0, LR_svc
    abf8:	3703011b 	smladcc	r3, fp, r1, r0
    abfc:	099b0101 	ldmibeq	fp, {r0, r8}
    ac00:	099b0000 	ldmibeq	fp, {}	; <UNPREDICTABLE>
    ac04:	e6090000 	str	r0, [r9], -r0
    ac08:	fe000801 	vcmla.f16	d0, d0, d1[0], #0
    ac0c:	0200000a 	andeq	r0, r0, #10
    ac10:	0016be00 	andseq	fp, r6, r0, lsl #28
    ac14:	19010400 	stmdbne	r1, {sl}
    ac18:	0c000005 	stceq	0, cr0, [r0], {5}
    ac1c:	000023e3 	andeq	r2, r0, r3, ror #7
    ac20:	00000822 	andeq	r0, r0, r2, lsr #16
    ac24:	00000590 	muleq	r0, r0, r5
	...
    ac30:	0000818c 	andeq	r8, r0, ip, lsl #3
    ac34:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    ac38:	05000002 	streq	r0, [r0, #-2]
    ac3c:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    ac40:	5a030000 	bpl	cac48 <_Min_Heap_Size+0xca448>
    ac44:	7200000c 	andvc	r0, r0, #12
    ac48:	000c8903 	andeq	r8, ip, r3, lsl #18
    ac4c:	e9037400 	stmdb	r3, {sl, ip, sp, lr}
    ac50:	7500000c 	strvc	r0, [r0, #-12]
    ac54:	000b9003 	andeq	r9, fp, r3
    ac58:	3b037600 	blcc	e8460 <_Min_Heap_Size+0xe7c60>
    ac5c:	7b00000d 	blvc	ac98 <_Min_Heap_Size+0xa498>
    ac60:	000eb603 	andeq	fp, lr, r3, lsl #12
    ac64:	94037c00 	strls	r7, [r3], #-3072	; 0xfffff400
    ac68:	7e00000f 	cdpvc	0, 0, cr0, cr0, cr15, {0}
    ac6c:	000b0203 	andeq	r0, fp, r3, lsl #4
    ac70:	6e047f00 	cdpvs	15, 0, cr7, cr4, cr0, {0}
    ac74:	0000000c 	andeq	r0, r0, ip
    ac78:	000e5a04 	andeq	r5, lr, r4, lsl #20
    ac7c:	9f040100 	svcls	0x00040100
    ac80:	0200000c 	andeq	r0, r0, #12
    ac84:	0009fd04 	andeq	pc, r9, r4, lsl #26
    ac88:	67040300 	strvs	r0, [r4, -r0, lsl #6]
    ac8c:	0400000a 	streq	r0, [r0], #-10
    ac90:	000ee904 	andeq	lr, lr, r4, lsl #18
    ac94:	87040500 	strhi	r0, [r4, -r0, lsl #10]
    ac98:	0600000e 	streq	r0, [r0], -lr
    ac9c:	000bfa04 	andeq	pc, fp, r4, lsl #20
    aca0:	0b040700 	bleq	10c8a8 <_Min_Heap_Size+0x10c0a8>
    aca4:	0800000a 	stmdaeq	r0, {r1, r3}
    aca8:	000f8904 	andeq	r8, pc, r4, lsl #18
    acac:	76040900 	strvc	r0, [r4], -r0, lsl #18
    acb0:	0a00000d 	beq	acec <_Min_Heap_Size+0xa4ec>
    acb4:	000dd204 	andeq	sp, sp, r4, lsl #4
    acb8:	9c040b00 			; <UNDEFINED> instruction: 0x9c040b00
    acbc:	0c00000d 	stceq	0, cr0, [r0], {13}
    acc0:	000b2c04 	andeq	r2, fp, r4, lsl #24
    acc4:	f2040d00 	vadd.f32	d0, d4, d0
    acc8:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    accc:	000e9204 	andeq	r9, lr, r4, lsl #4
    acd0:	12040f00 	andne	r0, r4, #0, 30
    acd4:	1000000c 	andne	r0, r0, ip
    acd8:	000a1604 	andeq	r1, sl, r4, lsl #12
    acdc:	51041100 	mrspl	r1, (UNDEF: 20)
    ace0:	1200000e 	andne	r0, r0, #14
    ace4:	000c0504 	andeq	r0, ip, r4, lsl #10
    ace8:	ae041300 	cdpge	3, 0, cr1, cr4, cr0, {0}
    acec:	1400000b 	strne	r0, [r0], #-11
    acf0:	000f5704 	andeq	r5, pc, r4, lsl #14
    acf4:	af041500 	svcge	0x00041500
    acf8:	1600000c 	strne	r0, [r0], -ip
    acfc:	000f6504 	andeq	r6, pc, r4, lsl #10
    ad00:	02041700 	andeq	r1, r4, #0, 14
    ad04:	1800000d 	stmdane	r0, {r0, r2, r3}
    ad08:	000f1604 	andeq	r1, pc, r4, lsl #12
    ad0c:	ea041900 	b	111114 <_Min_Heap_Size+0x110914>
    ad10:	1a00000a 	bne	ad40 <_Min_Heap_Size+0xa540>
    ad14:	000bed04 	andeq	lr, fp, r4, lsl #26
    ad18:	72041b00 	andvc	r1, r4, #0, 22
    ad1c:	1c00000a 	stcne	0, cr0, [r0], {10}
    ad20:	000e0f04 	andeq	r0, lr, r4, lsl #30
    ad24:	bc041d00 	stclt	13, cr1, [r4], {-0}
    ad28:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    ad2c:	000be004 	andeq	lr, fp, r4
    ad30:	60041f00 	andvs	r1, r4, r0, lsl #30
    ad34:	2000000b 	andcs	r0, r0, fp
    ad38:	000d8f04 	andeq	r8, sp, r4, lsl #30
    ad3c:	d4042100 	strle	r2, [r4], #-256	; 0xffffff00
    ad40:	2200000c 	andcs	r0, r0, #12
    ad44:	000d3104 	andeq	r3, sp, r4, lsl #2
    ad48:	a7042300 	strge	r2, [r4, -r0, lsl #6]
    ad4c:	2400000a 	strcs	r0, [r0], #-10
    ad50:	000e1904 	andeq	r1, lr, r4, lsl #18
    ad54:	c6042500 	strgt	r2, [r4], -r0, lsl #10
    ad58:	2600000b 	strcs	r0, [r0], -fp
    ad5c:	000b0f04 	andeq	r0, fp, r4, lsl #30
    ad60:	00042700 	andeq	r2, r4, r0, lsl #14
    ad64:	2800000e 	stmdacs	r0, {r1, r2, r3}
    ad68:	000de404 	andeq	lr, sp, r4, lsl #8
    ad6c:	65042900 	strvs	r2, [r4, #-2304]	; 0xfffff700
    ad70:	2a00000d 	bcs	adac <_Min_Heap_Size+0xa5ac>
    ad74:	000ab104 	andeq	fp, sl, r4, lsl #2
    ad78:	28042b00 	stmdacs	r4, {r8, r9, fp, sp}
    ad7c:	2c00000a 	stccs	0, cr0, [r0], {10}
    ad80:	000c2404 	andeq	r2, ip, r4, lsl #8
    ad84:	72042d00 	andvc	r2, r4, #0, 26
    ad88:	2e00000f 	cdpcs	0, 0, cr0, cr0, cr15, {0}
    ad8c:	000fb304 	andeq	fp, pc, r4, lsl #6
    ad90:	6a042f00 	bvs	116998 <_Min_Heap_Size+0x116198>
    ad94:	3000000e 	andcc	r0, r0, lr
    ad98:	000f7f04 	andeq	r7, pc, r4, lsl #30
    ad9c:	86043100 	strhi	r3, [r4], -r0, lsl #2
    ada0:	3200000b 	andcc	r0, r0, #11
    ada4:	000a5d04 	andeq	r5, sl, r4, lsl #26
    ada8:	50043300 	andpl	r3, r4, r0, lsl #6
    adac:	3400000d 	strcc	r0, [r0], #-13
    adb0:	000cf704 	andeq	pc, ip, r4, lsl #14
    adb4:	81043500 	tsthi	r4, r0, lsl #10
    adb8:	3600000d 	strcc	r0, [r0], -sp
    adbc:	000d1504 	andeq	r1, sp, r4, lsl #10
    adc0:	bd043700 	stclt	7, cr3, [r4, #-0]
    adc4:	3800000c 	stmdacc	r0, {r2, r3}
    adc8:	000a4b04 	andeq	r4, sl, r4, lsl #22
    adcc:	c5043900 	strgt	r3, [r4, #-2304]	; 0xfffff700
    add0:	3a00000f 	bcc	ae14 <_Min_Heap_Size+0xa614>
    add4:	000dae04 	andeq	sl, sp, r4, lsl #28
    add8:	3e043b00 	vmlacc.f64	d3, d4, d0
    addc:	3c00000b 	stccc	0, cr0, [r0], {11}
    ade0:	000dc004 	andeq	ip, sp, r4
    ade4:	7c043f00 	stcvc	15, cr3, [r4], {-0}
    ade8:	4000000a 	andmi	r0, r0, sl
    adec:	000e4304 	andeq	r4, lr, r4, lsl #6
    adf0:	78044100 	stmdavc	r4, {r8, lr}
    adf4:	4200000b 	andmi	r0, r0, #11
    adf8:	000c4e04 	andeq	r4, ip, r4, lsl #28
    adfc:	d8044300 	stmdale	r4, {r8, r9, lr}
    ae00:	4400000a 	strmi	r0, [r0], #-10
    ae04:	000ea404 	andeq	sl, lr, r4, lsl #8
    ae08:	3c044500 	cfstr32cc	mvfx4, [r4], {-0}
    ae0c:	4600000c 	strmi	r0, [r0], -ip
    ae10:	000a8a04 	andeq	r8, sl, r4, lsl #20
    ae14:	c8044700 	stmdagt	r4, {r8, r9, sl, lr}
    ae18:	4800000e 	stmdami	r0, {r1, r2, r3}
    ae1c:	000df304 	andeq	pc, sp, r4, lsl #6
    ae20:	3d044900 	vstrcc.16	s8, [r4, #-0]	; <UNPREDICTABLE>
    ae24:	4a00000f 	bmi	ae68 <_Min_Heap_Size+0xa668>
    ae28:	000fa004 	andeq	sl, pc, r4
    ae2c:	78044b00 	stmdavc	r4, {r8, r9, fp, lr}
    ae30:	4c00000c 	stcmi	0, cr0, [r0], {12}
    ae34:	000d1f04 	andeq	r1, sp, r4, lsl #30
    ae38:	3a044d00 	bcc	11e240 <_Min_Heap_Size+0x11da40>
    ae3c:	5000000e 	andpl	r0, r0, lr
    ae40:	000d4704 	andeq	r4, sp, r4, lsl #14
    ae44:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    ae48:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    ae4c:	72060000 	andvc	r0, r6, #0
    ae50:	02000000 	andeq	r0, r0, #0
    ae54:	024f182b 	subeq	r1, pc, #2818048	; 0x2b0000
    ae58:	01050000 	mrseq	r0, (UNDEF: 5)
    ae5c:	00050b08 	andeq	r0, r5, r8, lsl #22
    ae60:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    ae64:	000005d3 	ldrdeq	r0, [r0], -r3
    ae68:	37070205 	strcc	r0, [r7, -r5, lsl #4]
    ae6c:	05000003 	streq	r0, [r0, #-3]
    ae70:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    ae74:	91060000 	mrsls	r0, (UNDEF: 6)
    ae78:	02000002 	andeq	r0, r0, #2
    ae7c:	0277194f 	rsbseq	r1, r7, #1294336	; 0x13c000
    ae80:	04050000 	streq	r0, [r5], #-0
    ae84:	0000bf07 	andeq	fp, r0, r7, lsl #30
    ae88:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    ae8c:	000002ad 	andeq	r0, r0, sp, lsr #5
    ae90:	ba070805 	blt	1cceac <_Min_Heap_Size+0x1cc6ac>
    ae94:	07000000 	streq	r0, [r0, -r0]
    ae98:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    ae9c:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    aea0:	0000c407 	andeq	ip, r0, r7, lsl #8
    aea4:	00740600 	rsbseq	r0, r4, r0, lsl #12
    aea8:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    aeac:	00024313 	andeq	r4, r2, r3, lsl r3
    aeb0:	02930600 	addseq	r0, r3, #0, 12
    aeb4:	30030000 	andcc	r0, r3, r0
    aeb8:	00026b14 	andeq	r6, r2, r4, lsl fp
    aebc:	02a60800 	adceq	r0, r6, #0, 16
    aec0:	b2090000 	andlt	r0, r9, #0
    aec4:	0a000002 	beq	aed4 <_Min_Heap_Size+0xa6d4>
    aec8:	02fc0410 	rscseq	r0, ip, #16, 8	; 0x10000000
    aecc:	00030709 	andeq	r0, r3, r9, lsl #14
    aed0:	212d0b00 			; <UNDEFINED> instruction: 0x212d0b00
    aed4:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    aed8:	02b21202 	adcseq	r1, r2, #536870912	; 0x20000000
    aedc:	23020000 	movwcs	r0, #8192	; 0x2000
    aee0:	1f850b00 	svcne	0x00850b00
    aee4:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    aee8:	02b21202 	adcseq	r1, r2, #536870912	; 0x20000000
    aeec:	23020000 	movwcs	r0, #8192	; 0x2000
    aef0:	41560c04 	cmpmi	r6, r4, lsl #24
    aef4:	0004004c 	andeq	r0, r4, ip, asr #32
    aef8:	02b21203 	adcseq	r1, r2, #805306368	; 0x30000000
    aefc:	23020000 	movwcs	r0, #8192	; 0x2000
    af00:	1ec10b08 	vdivne.f64	d16, d1, d8
    af04:	01040000 	mrseq	r0, (UNDEF: 4)
    af08:	02b71203 	adcseq	r1, r7, #805306368	; 0x30000000
    af0c:	23020000 	movwcs	r0, #8192	; 0x2000
    af10:	5e0d000c 	cdppl	0, 0, cr0, cr13, cr12, {0}
    af14:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    af18:	bc030302 	stclt	3, cr0, [r3], {2}
    af1c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    af20:	000002a6 	andeq	r0, r0, r6, lsr #5
    af24:	00000324 	andeq	r0, r0, r4, lsr #6
    af28:	0002930f 	andeq	r9, r2, pc, lsl #6
    af2c:	10000100 	andne	r0, r0, r0, lsl #2
    af30:	00001790 	muleq	r0, r0, r7
    af34:	a6113909 	ldrge	r3, [r1], -r9, lsl #18
    af38:	01000002 	tsteq	r0, r2
    af3c:	05100a01 	ldreq	r0, [r0, #-2561]	; 0xfffff5ff
    af40:	7c090137 	stfvcs	f0, [r9], {55}	; 0x37
    af44:	0b000003 	bleq	af58 <_Min_Heap_Size+0xa758>
    af48:	000021f0 	strdeq	r2, [r0], -r0
    af4c:	11013905 	tstne	r1, r5, lsl #18
    af50:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    af54:	0c002302 	stceq	3, cr2, [r0], {2}
    af58:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    af5c:	b211013a 	andslt	r0, r1, #-2147483634	; 0x8000000e
    af60:	02000002 	andeq	r0, r0, #2
    af64:	390b0423 	stmdbcc	fp, {r0, r1, r5, sl}
    af68:	05000023 	streq	r0, [r0, #-35]	; 0xffffffdd
    af6c:	b211013b 	andslt	r0, r1, #-1073741810	; 0xc000000e
    af70:	02000002 	andeq	r0, r0, #2
    af74:	f30b0823 	vsub.i8	d0, d11, d19
    af78:	05000022 	streq	r0, [r0, #-34]	; 0xffffffde
    af7c:	b211013c 	andslt	r0, r1, #60, 2
    af80:	02000002 	andeq	r0, r0, #2
    af84:	0d000c23 	stceq	12, cr0, [r0, #-140]	; 0xffffff74
    af88:	0000238f 	andeq	r2, r0, pc, lsl #7
    af8c:	03013d05 	movweq	r3, #7429	; 0x1d05
    af90:	00000332 	andeq	r0, r0, r2, lsr r3
    af94:	68051c0a 	stmdavs	r5, {r1, r3, sl, fp, ip}
    af98:	04020901 	streq	r0, [r2], #-2305	; 0xfffff6ff
    af9c:	410c0000 	mrsmi	r0, (UNDEF: 12)
    afa0:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    afa4:	b211016a 	andslt	r0, r1, #-2147483622	; 0x8000001a
    afa8:	02000002 	andeq	r0, r0, #2
    afac:	180b0023 	stmdane	fp, {r0, r1, r5}
    afb0:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    afb4:	b211016b 	andslt	r0, r1, #-1073741798	; 0xc000001a
    afb8:	02000002 	andeq	r0, r0, #2
    afbc:	150b0423 	strne	r0, [fp, #-1059]	; 0xfffffbdd
    afc0:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    afc4:	b211016c 	andslt	r0, r1, #108, 2
    afc8:	02000002 	andeq	r0, r0, #2
    afcc:	530c0823 	movwpl	r0, #51235	; 0xc823
    afd0:	6d050052 	stcvs	0, cr0, [r5, #-328]	; 0xfffffeb8
    afd4:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    afd8:	23020000 	movwcs	r0, #8192	; 0x2000
    afdc:	52430c0c 	subpl	r0, r3, #12, 24	; 0xc00
    afe0:	016e0500 	cmneq	lr, r0, lsl #10
    afe4:	0002b211 	andeq	fp, r2, r1, lsl r2
    afe8:	10230200 	eorne	r0, r3, r0, lsl #4
    afec:	0016fa0b 	andseq	pc, r6, fp, lsl #20
    aff0:	016f0500 	cmneq	pc, r0, lsl #10
    aff4:	0002b211 	andeq	fp, r2, r1, lsl r2
    aff8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    affc:	00172c0b 	andseq	r2, r7, fp, lsl #24
    b000:	01700500 	cmneq	r0, r0, lsl #10
    b004:	0002b211 	andeq	fp, r2, r1, lsl r2
    b008:	18230200 	stmdane	r3!, {r9}
    b00c:	17000d00 	strne	r0, [r0, -r0, lsl #26]
    b010:	71050000 	mrsvc	r0, (UNDEF: 5)
    b014:	03890301 	orreq	r0, r9, #67108864	; 0x4000000
    b018:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    b01c:	0901f405 	stmdbeq	r1, {r0, r2, sl, ip, sp, lr, pc}
    b020:	000005fb 	strdeq	r0, [r0], -fp
    b024:	0052430c 	subseq	r4, r2, ip, lsl #6
    b028:	1101f605 	tstne	r1, r5, lsl #12	; <UNPREDICTABLE>
    b02c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b030:	0b002302 	bleq	13c40 <_Min_Heap_Size+0x13440>
    b034:	00000256 	andeq	r0, r0, r6, asr r2
    b038:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    b03c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b040:	0b042302 	bleq	113c50 <_Min_Heap_Size+0x113450>
    b044:	00000259 	andeq	r0, r0, r9, asr r2
    b048:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    b04c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b050:	0c082302 	stceq	3, cr2, [r8], {2}
    b054:	00524943 	subseq	r4, r2, r3, asr #18
    b058:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    b05c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b060:	0b0c2302 	bleq	313c70 <_Min_Heap_Size+0x313470>
    b064:	00000168 	andeq	r0, r0, r8, ror #2
    b068:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    b06c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b070:	0b102302 	bleq	413c80 <_Min_Heap_Size+0x413480>
    b074:	000006bc 			; <UNDEFINED> instruction: 0x000006bc
    b078:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    b07c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b080:	0b142302 	bleq	513c90 <_Min_Heap_Size+0x513490>
    b084:	00000374 	andeq	r0, r0, r4, ror r3
    b088:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    b08c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b090:	0b182302 	bleq	613ca0 <_Min_Heap_Size+0x6134a0>
    b094:	000004a6 	andeq	r0, r0, r6, lsr #9
    b098:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    b09c:	000002a6 	andeq	r0, r0, r6, lsr #5
    b0a0:	0b1c2302 	bleq	713cb0 <_Min_Heap_Size+0x7134b0>
    b0a4:	0000049d 	muleq	r0, sp, r4
    b0a8:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    b0ac:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b0b0:	0b202302 	bleq	813cc0 <_Min_Heap_Size+0x8134c0>
    b0b4:	000001e8 	andeq	r0, r0, r8, ror #3
    b0b8:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    b0bc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b0c0:	0b242302 	bleq	913cd0 <_Min_Heap_Size+0x9134d0>
    b0c4:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    b0c8:	11020005 	tstne	r2, r5
    b0cc:	00000314 	andeq	r0, r0, r4, lsl r3
    b0d0:	0b282302 	bleq	a13ce0 <_Min_Heap_Size+0xa134e0>
    b0d4:	0000080e 	andeq	r0, r0, lr, lsl #16
    b0d8:	11020105 	tstne	r2, r5, lsl #2
    b0dc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b0e0:	0b302302 	bleq	c13cf0 <_Min_Heap_Size+0xc134f0>
    b0e4:	00000727 	andeq	r0, r0, r7, lsr #14
    b0e8:	11020205 	tstne	r2, r5, lsl #4
    b0ec:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b0f0:	0b342302 	bleq	d13d00 <_Min_Heap_Size+0xd13500>
    b0f4:	0000043f 	andeq	r0, r0, pc, lsr r4
    b0f8:	11020305 	tstne	r2, r5, lsl #6
    b0fc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b100:	0b382302 	bleq	e13d10 <_Min_Heap_Size+0xe13510>
    b104:	000004ba 			; <UNDEFINED> instruction: 0x000004ba
    b108:	11020405 	tstne	r2, r5, lsl #8
    b10c:	000002a6 	andeq	r0, r0, r6, lsr #5
    b110:	0b3c2302 	bleq	f13d20 <_Min_Heap_Size+0xf13520>
    b114:	0000065c 	andeq	r0, r0, ip, asr r6
    b118:	11020505 	tstne	r2, r5, lsl #10
    b11c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b120:	0b402302 	bleq	1013d30 <_Min_Heap_Size+0x1013530>
    b124:	00000622 	andeq	r0, r0, r2, lsr #12
    b128:	11020605 	tstne	r2, r5, lsl #12
    b12c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b130:	0b442302 	bleq	1113d40 <_Min_Heap_Size+0x1113540>
    b134:	000004c4 	andeq	r0, r0, r4, asr #9
    b138:	11020705 	tstne	r2, r5, lsl #14
    b13c:	00000314 	andeq	r0, r0, r4, lsl r3
    b140:	0b482302 	bleq	1213d50 <_Min_Heap_Size+0x1213550>
    b144:	00000132 	andeq	r0, r0, r2, lsr r1
    b148:	11020805 	tstne	r2, r5, lsl #16
    b14c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b150:	0b502302 	bleq	1413d60 <_Min_Heap_Size+0x1413560>
    b154:	00000479 	andeq	r0, r0, r9, ror r4
    b158:	11020905 	tstne	r2, r5, lsl #18
    b15c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b160:	0b542302 	bleq	1513d70 <_Min_Heap_Size+0x1513570>
    b164:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b168:	11020a05 	tstne	r2, r5, lsl #20
    b16c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b170:	0b582302 	bleq	1613d80 <_Min_Heap_Size+0x1613580>
    b174:	000004ce 	andeq	r0, r0, lr, asr #9
    b178:	11020b05 	tstne	r2, r5, lsl #22
    b17c:	000002a6 	andeq	r0, r0, r6, lsr #5
    b180:	0b5c2302 	bleq	1713d90 <_Min_Heap_Size+0x1713590>
    b184:	0000001b 	andeq	r0, r0, fp, lsl r0
    b188:	11020c05 	tstne	r2, r5, lsl #24
    b18c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b190:	0b602302 	bleq	1813da0 <_Min_Heap_Size+0x18135a0>
    b194:	000003b5 			; <UNDEFINED> instruction: 0x000003b5
    b198:	11020d05 	tstne	r2, r5, lsl #26
    b19c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b1a0:	0b642302 	bleq	1913db0 <_Min_Heap_Size+0x19135b0>
    b1a4:	000004d8 	ldrdeq	r0, [r0], -r8
    b1a8:	11020e05 	tstne	r2, r5, lsl #28
    b1ac:	00000314 	andeq	r0, r0, r4, lsl r3
    b1b0:	0b682302 	bleq	1a13dc0 <_Min_Heap_Size+0x1a135c0>
    b1b4:	00000796 	muleq	r0, r6, r7
    b1b8:	11020f05 	tstne	r2, r5, lsl #30
    b1bc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b1c0:	0c702302 	ldcleq	3, cr2, [r0], #-8
    b1c4:	00525343 	subseq	r5, r2, r3, asr #6
    b1c8:	11021005 	tstne	r2, r5
    b1cc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b1d0:	0b742302 	bleq	1d13de0 <_Min_Heap_Size+0x1d135e0>
    b1d4:	000004e2 	andeq	r0, r0, r2, ror #9
    b1d8:	11021105 	tstne	r2, r5, lsl #2
    b1dc:	00000314 	andeq	r0, r0, r4, lsl r3
    b1e0:	0b782302 	bleq	1e13df0 <_Min_Heap_Size+0x1e135f0>
    b1e4:	00000765 	andeq	r0, r0, r5, ror #14
    b1e8:	11021205 	tstne	r2, r5, lsl #4
    b1ec:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b1f0:	01802303 	orreq	r2, r0, r3, lsl #6
    b1f4:	0003550b 	andeq	r5, r3, fp, lsl #10
    b1f8:	02130500 	andseq	r0, r3, #0, 10
    b1fc:	0002b211 	andeq	fp, r2, r1, lsl r2
    b200:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    b204:	bc0d0001 	stclt	0, cr0, [sp], {1}
    b208:	05000001 	streq	r0, [r0, #-1]
    b20c:	0f030214 	svceq	0x00030214
    b210:	02000004 	andeq	r0, r0, #4
    b214:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    b218:	bf060000 	svclt	0x00060000
    b21c:	00062301 	andeq	r2, r6, r1, lsl #6
    b220:	17240400 	strne	r0, [r4, -r0, lsl #8]!
    b224:	04000000 	streq	r0, [r0], #-0
    b228:	0000170e 	andeq	r1, r0, lr, lsl #14
    b22c:	08050001 	stmdaeq	r5, {r0}
    b230:	00066404 	andeq	r6, r6, r4, lsl #8
    b234:	01070200 	mrseq	r0, (UNDEF: 39)
    b238:	0000024f 	andeq	r0, r0, pc, asr #4
    b23c:	51012707 	tstpl	r1, r7, lsl #14
    b240:	04000006 	streq	r0, [r0], #-6
    b244:	00000310 	andeq	r0, r0, r0, lsl r3
    b248:	06520400 	ldrbeq	r0, [r2], -r0, lsl #8
    b24c:	04010000 	streq	r0, [r1], #-0
    b250:	00000876 	andeq	r0, r0, r6, ror r8
    b254:	02f10402 	rscseq	r0, r1, #33554432	; 0x2000000
    b258:	00030000 	andeq	r0, r3, r0
    b25c:	00129006 	andseq	r9, r2, r6
    b260:	032c0700 			; <UNDEFINED> instruction: 0x032c0700
    b264:	0000062a 	andeq	r0, r0, sl, lsr #12
    b268:	4f010702 	svcmi	0x00010702
    b26c:	08000002 	stmdaeq	r0, {r1}
    b270:	06840132 			; <UNDEFINED> instruction: 0x06840132
    b274:	34040000 	strcc	r0, [r4], #-0
    b278:	64000022 	strvs	r0, [r0], #-34	; 0xffffffde
    b27c:	00227404 	eoreq	r7, r2, r4, lsl #8
    b280:	c3040a00 	movwgt	r0, #18944	; 0x4a00
    b284:	01000022 	tsteq	r0, r2, lsr #32
    b288:	00231404 	eoreq	r1, r3, r4, lsl #8
    b28c:	06000100 	streq	r0, [r0], -r0, lsl #2
    b290:	000021bf 			; <UNDEFINED> instruction: 0x000021bf
    b294:	5d033708 	stcpl	7, cr3, [r3, #-32]	; 0xffffffe0
    b298:	10000006 	andne	r0, r0, r6
    b29c:	000022bc 			; <UNDEFINED> instruction: 0x000022bc
    b2a0:	b216cc08 	andslt	ip, r6, #8, 24	; 0x800
    b2a4:	01000002 	tsteq	r0, r2
    b2a8:	17b81001 	ldrne	r1, [r8, r1]!
    b2ac:	cd080000 	stcgt	0, cr0, [r8, #-0]
    b2b0:	0002a611 	andeq	sl, r2, r1, lsl r6
    b2b4:	10010100 	andne	r0, r1, r0, lsl #2
    b2b8:	000022b1 			; <UNDEFINED> instruction: 0x000022b1
    b2bc:	841cce08 	ldrhi	ip, [ip], #-3592	; 0xfffff1f8
    b2c0:	01000006 	tsteq	r0, r6
    b2c4:	06901101 	ldreq	r1, [r0], r1, lsl #2
    b2c8:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    b2cc:	dc03050f 	cfstr32le	mvfx0, [r3], {15}
    b2d0:	11200000 			; <UNDEFINED> instruction: 0x11200000
    b2d4:	0000069e 	muleq	r0, lr, r6
    b2d8:	050a5f01 	streq	r5, [sl, #-3841]	; 0xfffff0ff
    b2dc:	00000403 	andeq	r0, r0, r3, lsl #8
    b2e0:	06ac1120 	strteq	r1, [ip], r0, lsr #2
    b2e4:	60010000 	andvs	r0, r1, r0
    b2e8:	00030515 	andeq	r0, r3, r5, lsl r5
    b2ec:	12200000 	eorne	r0, r0, #0
    b2f0:	0021f701 	eoreq	pc, r1, r1, lsl #14
    b2f4:	02330100 	eorseq	r0, r3, #0, 2
    b2f8:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b304:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b308:	01120100 	tsteq	r2, r0, lsl #2
    b30c:	00002307 	andeq	r2, r0, r7, lsl #6
    b310:	0a022a01 	beq	95b1c <_Min_Heap_Size+0x9531c>
    b314:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b320:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b324:	fa011201 	blx	4fb30 <_Min_Heap_Size+0x4f330>
    b328:	01000022 	tsteq	r0, r2, lsr #32
    b32c:	010a0221 	tsteq	sl, r1, lsr #4
    b330:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    b33c:	01007d02 	tsteq	r0, r2, lsl #26
    b340:	24170113 	ldrcs	r0, [r7], #-275	; 0xfffffeed
    b344:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    b348:	00010602 	andeq	r0, r1, r2, lsl #12
    b34c:	00000000 	andeq	r0, r0, r0
    b350:	02000000 	andeq	r0, r0, #0
    b354:	1301007d 	movwne	r0, #4221	; 0x107d
    b358:	0023c801 	eoreq	ip, r3, r1, lsl #16
    b35c:	020d0100 	andeq	r0, sp, #0, 2
    b360:	00000106 	andeq	r0, r0, r6, lsl #2
    b364:	00000000 	andeq	r0, r0, r0
    b368:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b36c:	01130100 	tsteq	r3, r0, lsl #2
    b370:	00002340 	andeq	r2, r0, r0, asr #6
    b374:	06020201 	streq	r0, [r2], -r1, lsl #4
    b378:	00000001 	andeq	r0, r0, r1
    b37c:	00000000 	andeq	r0, r0, r0
    b380:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b384:	04011301 	streq	r1, [r1], #-769	; 0xfffffcff
    b388:	01000022 	tsteq	r0, r2, lsr #32
    b38c:	010601f9 	strdeq	r0, [r6, -r9]
	...
    b398:	01007d02 	tsteq	r0, r2, lsl #26
    b39c:	22880113 	addcs	r0, r8, #-1073741820	; 0xc0000004
    b3a0:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    b3a4:	00010601 	andeq	r0, r1, r1, lsl #12
    b3a8:	00000000 	andeq	r0, r0, r0
    b3ac:	02000000 	andeq	r0, r0, #0
    b3b0:	1301007d 	movwne	r0, #4221	; 0x107d
    b3b4:	0022d601 	eoreq	sp, r2, r1, lsl #12
    b3b8:	01e70100 	mvneq	r0, r0, lsl #2
    b3bc:	00000106 	andeq	r0, r0, r6, lsl #2
    b3c0:	00000000 	andeq	r0, r0, r0
    b3c4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b3c8:	01130100 	tsteq	r3, r0, lsl #2
    b3cc:	00002255 	andeq	r2, r0, r5, asr r2
    b3d0:	0601de01 	streq	sp, [r1], -r1, lsl #28
    b3d4:	00000001 	andeq	r0, r0, r1
    b3d8:	00000000 	andeq	r0, r0, r0
    b3dc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b3e0:	71011301 	tstvc	r1, r1, lsl #6
    b3e4:	01000023 	tsteq	r0, r3, lsr #32
    b3e8:	010601d5 	ldrdeq	r0, [r6, -r5]
	...
    b3f4:	01007d02 	tsteq	r0, r2, lsl #26
    b3f8:	24330112 	ldrtcs	r0, [r3], #-274	; 0xfffffeee
    b3fc:	cc010000 	stcgt	0, cr0, [r1], {-0}
    b400:	a6010a01 	strge	r0, [r1], -r1, lsl #20
    b404:	00000002 	andeq	r0, r0, r2
    b408:	00000000 	andeq	r0, r0, r0
    b40c:	02000000 	andeq	r0, r0, #0
    b410:	1201007d 	andne	r0, r1, #125	; 0x7d
    b414:	00239e01 	eoreq	r9, r3, r1, lsl #28
    b418:	01c30100 	biceq	r0, r3, r0, lsl #2
    b41c:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b428:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b42c:	01120100 	tsteq	r2, r0, lsl #2
    b430:	000021ad 	andeq	r2, r0, sp, lsr #3
    b434:	0a01ba01 	beq	79c40 <_Min_Heap_Size+0x79440>
    b438:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b444:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b448:	2a011301 	bcs	50054 <_Min_Heap_Size+0x4f854>
    b44c:	01000023 	tsteq	r0, r3, lsr #32
    b450:	010d01b0 			; <UNDEFINED> instruction: 0x010d01b0
	...
    b45c:	01007d02 	tsteq	r0, r2, lsl #26
    b460:	23610113 	cmncs	r1, #-1073741820	; 0xc0000004
    b464:	a0010000 	andge	r0, r1, r0
    b468:	00010d01 	andeq	r0, r1, r1, lsl #26
    b46c:	00000000 	andeq	r0, r0, r0
    b470:	02000000 	andeq	r0, r0, #0
    b474:	1401007d 	strne	r0, [r1], #-125	; 0xffffff83
    b478:	00069001 	andeq	r9, r6, r1
    b47c:	01860100 	orreq	r0, r6, r0, lsl #2
    b480:	1680010d 	strne	r0, [r0], sp, lsl #2
    b484:	16a80800 	strtne	r0, [r8], r0, lsl #16
    b488:	76c50800 	strbvc	r0, [r5], r0, lsl #16
    b48c:	da010000 	ble	4b494 <_Min_Heap_Size+0x4ac94>
    b490:	15000008 	strne	r0, [r0, #-8]
    b494:	00000694 	muleq	r0, r4, r6
    b498:	20018601 	andcs	r8, r1, r1, lsl #12
    b49c:	000002a6 	andeq	r0, r0, r6, lsr #5
    b4a0:	000076eb 	andeq	r7, r0, fp, ror #13
    b4a4:	000076e5 	andeq	r7, r0, r5, ror #13
    b4a8:	0014db16 	andseq	sp, r4, r6, lsl fp
    b4ac:	01880100 	orreq	r0, r8, r0, lsl #2
    b4b0:	0002a60c 	andeq	sl, r2, ip, lsl #12
    b4b4:	00771b00 	rsbseq	r1, r7, r0, lsl #22
    b4b8:	00771700 	rsbseq	r1, r7, r0, lsl #14
    b4bc:	288c1600 	stmcs	ip, {r9, sl, ip}
    b4c0:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    b4c4:	02a60c01 	adceq	r0, r6, #256	; 0x100
    b4c8:	773b0000 	ldrvc	r0, [fp, -r0]!
    b4cc:	77390000 	ldrvc	r0, [r9, -r0]!
    b4d0:	88170000 	ldmdahi	r7, {}	; <UNPREDICTABLE>
    b4d4:	97080016 	smladls	r8, r6, r0, r0
    b4d8:	17000009 	strne	r0, [r0, -r9]
    b4dc:	0800169a 	stmdaeq	r0, {r1, r3, r4, r7, r9, sl, ip}
    b4e0:	00000997 	muleq	r0, r7, r9
    b4e4:	ab011200 	blge	4fcec <_Min_Heap_Size+0x4f4ec>
    b4e8:	01000023 	tsteq	r0, r3, lsr #32
    b4ec:	01150176 	tsteq	r5, r6, ror r1
    b4f0:	00000684 	andeq	r0, r0, r4, lsl #13
	...
    b4fc:	01007d02 	tsteq	r0, r2, lsl #26
    b500:	21e00118 	mvncs	r0, r8, lsl r1
    b504:	55010000 	strpl	r0, [r1, #-0]
    b508:	51011301 	tstpl	r1, r1, lsl #6
    b50c:	00000006 	andeq	r0, r0, r6
    b510:	00000000 	andeq	r0, r0, r0
    b514:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    b518:	01000077 	tsteq	r0, r7, ror r0
    b51c:	0000097c 	andeq	r0, r0, ip, ror r9
    b520:	00101315 	andseq	r1, r0, r5, lsl r3
    b524:	01550100 	cmpeq	r5, r0, lsl #2
    b528:	00068437 	andeq	r8, r6, r7, lsr r4
    b52c:	00777600 	rsbseq	r7, r7, r0, lsl #12
    b530:	00776e00 	rsbseq	r6, r7, r0, lsl #28
    b534:	192b1600 	stmdbne	fp!, {r9, sl, ip}
    b538:	57010000 	strpl	r0, [r1, -r0]
    b53c:	06511501 	ldrbeq	r1, [r1], -r1, lsl #10
    b540:	77b80000 	ldrvc	r0, [r8, r0]!
    b544:	77b00000 	ldrvc	r0, [r0, r0]!
    b548:	bb160000 	bllt	58b550 <_Min_Heap_Size+0x58ad50>
    b54c:	01000023 	tsteq	r0, r3, lsr #32
    b550:	84170158 	ldrhi	r0, [r7], #-344	; 0xfffffea8
    b554:	f0000006 			; <UNDEFINED> instruction: 0xf0000006
    b558:	ee000077 	mcr	0, 0, r0, cr0, cr7, {3}
    b55c:	19000077 	stmdbne	r0, {r0, r1, r2, r4, r5, r6}
    b560:	00000000 	andeq	r0, r0, r0
    b564:	00000ac5 	andeq	r0, r0, r5, asr #21
    b568:	00000972 	andeq	r0, r0, r2, ror r9
    b56c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    b570:	00000003 	andeq	r0, r0, r3
    b574:	51011a00 	tstpl	r1, r0, lsl #20
    b578:	015a0a03 	cmpeq	sl, r3, lsl #20
    b57c:	00001700 	andeq	r1, r0, r0, lsl #14
    b580:	09c90000 	stmibeq	r9, {}^	; <UNPREDICTABLE>
    b584:	12000000 	andne	r0, r0, #0
    b588:	00222401 	eoreq	r2, r2, r1, lsl #8
    b58c:	014c0100 	mrseq	r0, (UNDEF: 92)
    b590:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b59c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b5a0:	01120100 	tsteq	r2, r0, lsl #2
    b5a4:	00001335 	andeq	r1, r0, r5, lsr r3
    b5a8:	11014301 	tstne	r1, r1, lsl #6
    b5ac:	0002a601 	andeq	sl, r2, r1, lsl #12
    b5b0:	00167400 	andseq	r7, r6, r0, lsl #8
    b5b4:	00168008 	andseq	r8, r6, r8
    b5b8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    b5bc:	81011301 	tsthi	r1, r1, lsl #6
    b5c0:	01000009 	tsteq	r0, r9
    b5c4:	010d0138 	tsteq	sp, r8, lsr r1
    b5c8:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
    b5cc:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
    b5d0:	01007d02 	tsteq	r0, r2, lsl #26
    b5d4:	17a0011b 			; <UNDEFINED> instruction: 0x17a0011b
    b5d8:	fd010000 	stc2	0, cr0, [r1, #-0]
    b5dc:	0651011a 			; <UNDEFINED> instruction: 0x0651011a
    b5e0:	15dc0000 	ldrbne	r0, [ip]
    b5e4:	16280800 	strtne	r0, [r8], -r0, lsl #16
    b5e8:	78030800 	stmdavc	r3, {fp}
    b5ec:	21010000 	mrscs	r0, (UNDEF: 1)
    b5f0:	1c00000a 	stcne	0, cr0, [r0], {10}
    b5f4:	000021d3 	ldrdeq	r2, [r0], -r3
    b5f8:	a630fd01 	ldrtge	pc, [r0], -r1, lsl #26	; <UNPREDICTABLE>
    b5fc:	29000002 	stmdbcs	r0, {r1}
    b600:	23000078 	movwcs	r0, #120	; 0x78
    b604:	17000078 	smlsdxne	r0, r8, r0, r0
    b608:	080015f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, ip}
    b60c:	00000ad4 	ldrdeq	r0, [r0], -r4
    b610:	00160e1d 	andseq	r0, r6, sp, lsl lr
    b614:	000ae308 	andeq	lr, sl, r8, lsl #6
    b618:	50011a00 	andpl	r1, r1, r0, lsl #20
    b61c:	1aff0902 	bne	fffcda2c <_estack+0xdffcc7ec>
    b620:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    b624:	52011a00 	andpl	r1, r1, #0, 20
    b628:	00003001 	andeq	r3, r0, r1
    b62c:	2247011e 	subcs	r0, r7, #-2147483641	; 0x80000007
    b630:	e6010000 	str	r0, [r1], -r0
    b634:	0000010d 	andeq	r0, r0, sp, lsl #2
    b638:	00000000 	andeq	r0, r0, r0
    b63c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b640:	011e0100 	tsteq	lr, r0, lsl #2
    b644:	00000fd7 	ldrdeq	r0, [r0], -r7
    b648:	010ddb01 	tsteq	sp, r1, lsl #22
	...
    b654:	01007d02 	tsteq	r0, r2, lsl #26
    b658:	22a6011b 	adccs	r0, r6, #-1073741818	; 0xc0000006
    b65c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    b660:	06510113 			; <UNDEFINED> instruction: 0x06510113
	...
    b66c:	78550000 	ldmdavc	r5, {}^	; <UNPREDICTABLE>
    b670:	76010000 	strvc	r0, [r1], -r0
    b674:	1700000a 	strne	r0, [r0, -sl]
    b678:	00000000 	andeq	r0, r0, r0
    b67c:	00000a21 	andeq	r0, r0, r1, lsr #20
    b680:	ef011b00 	svc	0x00011b00
    b684:	01000003 	tsteq	r0, r3
    b688:	5101139d 			; <UNDEFINED> instruction: 0x5101139d
    b68c:	28000006 	stmdacs	r0, {r1, r2}
    b690:	5c080016 	stcpl	0, cr0, [r8], {22}
    b694:	75080016 	strvc	r0, [r8, #-22]	; 0xffffffea
    b698:	01000078 	tsteq	r0, r8, ror r0
    b69c:	00000ac5 	andeq	r0, r0, r5, asr #21
    b6a0:	00164a19 	andseq	r4, r6, r9, lsl sl
    b6a4:	000af208 	andeq	pc, sl, r8, lsl #4
    b6a8:	000aa800 	andeq	sl, sl, r0, lsl #16
    b6ac:	50011a00 	andpl	r1, r1, r0, lsl #20
    b6b0:	19003301 	stmdbne	r0, {r0, r8, r9, ip, sp}
    b6b4:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
    b6b8:	000009c9 	andeq	r0, r0, r9, asr #19
    b6bc:	00000abb 			; <UNDEFINED> instruction: 0x00000abb
    b6c0:	0150011a 	cmpeq	r0, sl, lsl r1
    b6c4:	5417003f 	ldrpl	r0, [r7], #-63	; 0xffffffc1
    b6c8:	37080016 	smladcc	r8, r6, r0, r0
    b6cc:	0000000a 	andeq	r0, r0, sl
    b6d0:	9b01011f 	blls	4bb54 <_Min_Heap_Size+0x4b354>
    b6d4:	9b000009 	blls	b700 <_Min_Heap_Size+0xaf00>
    b6d8:	0a000009 	beq	b704 <_Min_Heap_Size+0xaf04>
    b6dc:	1f0801e6 	svcne	0x000801e6
    b6e0:	1d150101 	ldfnes	f0, [r5, #-4]
    b6e4:	1d150000 	ldcne	0, cr0, [r5, #-0]
    b6e8:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    b6ec:	011f0a01 	tsteq	pc, r1, lsl #20
    b6f0:	000e2501 	andeq	r2, lr, r1, lsl #10
    b6f4:	000e2500 	andeq	r2, lr, r0, lsl #10
    b6f8:	01050b00 	tsteq	r5, r0, lsl #22
    b6fc:	01011f06 	tsteq	r1, r6, lsl #30
    b700:	0000204a 	andeq	r2, r0, sl, asr #32
    b704:	0000204a 	andeq	r2, r0, sl, asr #32
    b708:	0601040b 	streq	r0, [r1], -fp, lsl #8
    b70c:	0005af00 	andeq	sl, r5, r0, lsl #30
    b710:	c7000200 	strgt	r0, [r0, -r0, lsl #4]
    b714:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    b718:	00051901 	andeq	r1, r5, r1, lsl #18
    b71c:	24400c00 	strbcs	r0, [r0], #-3072	; 0xfffff400
    b720:	08220000 	stmdaeq	r2!, {}	; <UNPREDICTABLE>
    b724:	06700000 	ldrbteq	r0, [r0], -r0
	...
    b730:	874e0000 	strbhi	r0, [lr, -r0]
    b734:	01020000 	mrseq	r0, (UNDEF: 2)
    b738:	00050d06 	andeq	r0, r5, r6, lsl #26
    b73c:	00720300 	rsbseq	r0, r2, r0, lsl #6
    b740:	2b020000 	blcs	8b748 <_Min_Heap_Size+0x8af48>
    b744:	00003c18 	andeq	r3, r0, r8, lsl ip
    b748:	08010200 	stmdaeq	r1, {r9}
    b74c:	0000050b 	andeq	r0, r0, fp, lsl #10
    b750:	d3050202 	movwle	r0, #20994	; 0x5202
    b754:	02000005 	andeq	r0, r0, #5
    b758:	03370702 	teqeq	r7, #524288	; 0x80000
    b75c:	04020000 	streq	r0, [r2], #-0
    b760:	0002b205 	andeq	fp, r2, r5, lsl #4
    b764:	02910300 	addseq	r0, r1, #0, 6
    b768:	4f020000 	svcmi	0x00020000
    b76c:	00006419 	andeq	r6, r0, r9, lsl r4
    b770:	07040200 	streq	r0, [r4, -r0, lsl #4]
    b774:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    b778:	ad050802 	stcge	8, cr0, [r5, #-8]
    b77c:	02000002 	andeq	r0, r0, #2
    b780:	00ba0708 	adcseq	r0, sl, r8, lsl #14
    b784:	04040000 	streq	r0, [r4], #-0
    b788:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    b78c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    b790:	000000c4 	andeq	r0, r0, r4, asr #1
    b794:	00007403 	andeq	r7, r0, r3, lsl #8
    b798:	13180300 	tstne	r8, #0, 6
    b79c:	00000030 	andeq	r0, r0, r0, lsr r0
    b7a0:	00008705 	andeq	r8, r0, r5, lsl #14
    b7a4:	00870600 	addeq	r0, r7, r0, lsl #12
    b7a8:	93030000 	movwls	r0, #12288	; 0x3000
    b7ac:	03000002 	movweq	r0, #2
    b7b0:	00581430 	subseq	r1, r8, r0, lsr r4
    b7b4:	9d050000 	stcls	0, cr0, [r5, #-0]
    b7b8:	06000000 	streq	r0, [r0], -r0
    b7bc:	000000a9 	andeq	r0, r0, r9, lsr #1
    b7c0:	bd048c07 	stclt	12, cr8, [r4, #-28]	; 0xffffffe4
    b7c4:	020f0901 	andeq	r0, pc, #16384	; 0x4000
    b7c8:	07080000 	streq	r0, [r8, -r0]
    b7cc:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    b7d0:	ae1201bf 	mrcge	1, 0, r0, cr2, cr15, {5}
    b7d4:	02000000 	andeq	r0, r0, #0
    b7d8:	ee080023 	cdp	0, 0, cr0, cr8, cr3, {1}
    b7dc:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b7e0:	a91201c0 	ldmdbge	r2, {r6, r7, r8}
    b7e4:	02000000 	andeq	r0, r0, #0
    b7e8:	d8080423 	stmdale	r8, {r0, r1, r5, sl}
    b7ec:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b7f0:	a91201c1 	ldmdbge	r2, {r0, r6, r7, r8}
    b7f4:	02000000 	andeq	r0, r0, #0
    b7f8:	f3080823 	vsub.i8	d0, d8, d19
    b7fc:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b800:	a91201c2 	ldmdbge	r2, {r1, r6, r7, r8}
    b804:	02000000 	andeq	r0, r0, #0
    b808:	53090c23 	movwpl	r0, #39971	; 0x9c23
    b80c:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    b810:	a91201c3 	ldmdbge	r2, {r0, r1, r6, r7, r8}
    b814:	02000000 	andeq	r0, r0, #0
    b818:	43091023 	movwmi	r1, #36899	; 0x9023
    b81c:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    b820:	a91201c4 	ldmdbge	r2, {r2, r6, r7, r8}
    b824:	02000000 	andeq	r0, r0, #0
    b828:	53091423 	movwpl	r1, #37923	; 0x9423
    b82c:	04005048 	streq	r5, [r0], #-72	; 0xffffffb8
    b830:	1f1201c5 	svcne	0x001201c5
    b834:	02000002 	andeq	r0, r0, #2
    b838:	1e081823 	cdpne	8, 0, cr1, cr8, cr3, {1}
    b83c:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    b840:	a91201c6 	ldmdbge	r2, {r1, r2, r6, r7, r8}
    b844:	02000000 	andeq	r0, r0, #0
    b848:	90082423 	andls	r2, r8, r3, lsr #8
    b84c:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    b850:	a91201c7 	ldmdbge	r2, {r0, r1, r2, r6, r7, r8}
    b854:	02000000 	andeq	r0, r0, #0
    b858:	a8082823 	stmdage	r8, {r0, r1, r5, fp, sp}
    b85c:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    b860:	a91201c8 	ldmdbge	r2, {r3, r6, r7, r8}
    b864:	02000000 	andeq	r0, r0, #0
    b868:	f9082c23 			; <UNDEFINED> instruction: 0xf9082c23
    b86c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b870:	a91201c9 	ldmdbge	r2, {r0, r3, r6, r7, r8}
    b874:	02000000 	andeq	r0, r0, #0
    b878:	fe083023 	cdp2	0, 0, cr3, cr8, cr3, {1}
    b87c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b880:	a91201ca 	ldmdbge	r2, {r1, r3, r6, r7, r8}
    b884:	02000000 	andeq	r0, r0, #0
    b888:	19083423 	stmdbne	r8, {r0, r1, r5, sl, ip, sp}
    b88c:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    b890:	a91201cb 	ldmdbge	r2, {r0, r1, r3, r6, r7, r8}
    b894:	02000000 	andeq	r0, r0, #0
    b898:	7d083823 	stcvc	8, cr3, [r8, #-140]	; 0xffffff74
    b89c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    b8a0:	a91201cc 	ldmdbge	r2, {r2, r3, r6, r7, r8}
    b8a4:	02000000 	andeq	r0, r0, #0
    b8a8:	50093c23 	andpl	r3, r9, r3, lsr #24
    b8ac:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    b8b0:	391201cd 	ldmdbcc	r2, {r0, r2, r3, r6, r7, r8}
    b8b4:	02000002 	andeq	r0, r0, #2
    b8b8:	44094023 	strmi	r4, [r9], #-35	; 0xffffffdd
    b8bc:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    b8c0:	ae1201ce 	mufgedm	f0, f2, #0.5
    b8c4:	02000000 	andeq	r0, r0, #0
    b8c8:	41094823 	tstmi	r9, r3, lsr #16
    b8cc:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    b8d0:	ae1201cf 	mufgedm	f0, f2, #10.0
    b8d4:	02000000 	andeq	r0, r0, #0
    b8d8:	0d084c23 	stceq	12, cr4, [r8, #-140]	; 0xffffff74
    b8dc:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    b8e0:	531201d0 	tstpl	r2, #208, 2	; 0x34
    b8e4:	02000002 	andeq	r0, r0, #2
    b8e8:	66085023 	strvs	r5, [r8], -r3, lsr #32
    b8ec:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    b8f0:	6d1201d1 	ldfvss	f0, [r2, #-836]	; 0xfffffcbc
    b8f4:	02000002 	andeq	r0, r0, #2
    b8f8:	a6086023 	strge	r6, [r8], -r3, lsr #32
    b8fc:	04000004 	streq	r0, [r0], #-4
    b900:	721201d2 	andsvc	r0, r2, #-2147483596	; 0x80000034
    b904:	02000002 	andeq	r0, r0, #2
    b908:	a2087423 	andge	r7, r8, #587202560	; 0x23000000
    b90c:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    b910:	a91201d3 	ldmdbge	r2, {r0, r1, r4, r6, r7, r8}
    b914:	03000000 	movweq	r0, #0
    b918:	00018823 	andeq	r8, r1, r3, lsr #16
    b91c:	0000930a 	andeq	r9, r0, sl, lsl #6
    b920:	00021f00 	andeq	r1, r2, r0, lsl #30
    b924:	00800b00 	addeq	r0, r0, r0, lsl #22
    b928:	000b0000 	andeq	r0, fp, r0
    b92c:	00020f05 	andeq	r0, r2, r5, lsl #30
    b930:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    b934:	02340000 	eorseq	r0, r4, #0
    b938:	800b0000 	andhi	r0, fp, r0
    b93c:	01000000 	mrseq	r0, (UNDEF: 0)
    b940:	02240600 	eoreq	r0, r4, #0, 12
    b944:	34050000 	strcc	r0, [r5], #-0
    b948:	0a000002 	beq	b958 <_Min_Heap_Size+0xb158>
    b94c:	000000ae 	andeq	r0, r0, lr, lsr #1
    b950:	0000024e 	andeq	r0, r0, lr, asr #4
    b954:	0000800b 	andeq	r8, r0, fp
    b958:	06000300 	streq	r0, [r0], -r0, lsl #6
    b95c:	0000023e 	andeq	r0, r0, lr, lsr r2
    b960:	00024e05 	andeq	r4, r2, r5, lsl #28
    b964:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    b968:	02680000 	rsbeq	r0, r8, #0
    b96c:	800b0000 	andhi	r0, fp, r0
    b970:	04000000 	streq	r0, [r0], #-0
    b974:	02580600 	subseq	r0, r8, #0, 12
    b978:	68050000 	stmdavs	r5, {}	; <UNPREDICTABLE>
    b97c:	0a000002 	beq	b98c <_Min_Heap_Size+0xb18c>
    b980:	0000009d 	muleq	r0, sp, r0
    b984:	00000282 	andeq	r0, r0, r2, lsl #5
    b988:	0000800b 	andeq	r8, r0, fp
    b98c:	0c000400 	cfstrseq	mvf0, [r0], {-0}
    b990:	00001e82 	andeq	r1, r0, r2, lsl #29
    b994:	0301d404 	movweq	sp, #5124	; 0x1404
    b998:	000000b3 	strheq	r0, [r0], -r3
    b99c:	00009d0a 	andeq	r9, r0, sl, lsl #26
    b9a0:	00029f00 	andeq	r9, r2, r0, lsl #30
    b9a4:	00800b00 	addeq	r0, r0, r0, lsl #22
    b9a8:	00010000 	andeq	r0, r1, r0
    b9ac:	0017900d 	andseq	r9, r7, sp
    b9b0:	11390500 	teqne	r9, r0, lsl #10
    b9b4:	0000009d 	muleq	r0, sp, r0
    b9b8:	980a0101 	stmdals	sl, {r0, r8}
    b9bc:	bd000000 	stclt	0, cr0, [r0, #-0]
    b9c0:	0b000002 	bleq	b9d0 <_Min_Heap_Size+0xb1d0>
    b9c4:	00000080 	andeq	r0, r0, r0, lsl #1
    b9c8:	ad06000f 	stcge	0, cr0, [r6, #-60]	; 0xffffffc4
    b9cc:	0d000002 	stceq	0, cr0, [r0, #-8]
    b9d0:	00001750 	andeq	r1, r0, r0, asr r7
    b9d4:	bd173b05 	vldrlt	d3, [r7, #-20]	; 0xffffffec
    b9d8:	01000002 	tsteq	r0, r2
    b9dc:	00980a01 	addseq	r0, r8, r1, lsl #20
    b9e0:	02e00000 	rsceq	r0, r0, #0
    b9e4:	800b0000 	andhi	r0, fp, r0
    b9e8:	07000000 	streq	r0, [r0, -r0]
    b9ec:	02d00600 	sbcseq	r0, r0, #0, 12
    b9f0:	ec0d0000 	stc	0, cr0, [sp], {-0}
    b9f4:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    b9f8:	02e0173c 	rsceq	r1, r0, #60, 14	; 0xf00000
    b9fc:	01010000 	mrseq	r0, (UNDEF: 1)
    ba00:	f4068807 	vst2.8	{d8-d9}, [r6], r7
    ba04:	04df0901 	ldrbeq	r0, [pc], #2305	; ba0c <_Min_Heap_Size+0xb20c>
    ba08:	43090000 	movwmi	r0, #36864	; 0x9000
    ba0c:	f6060052 			; <UNDEFINED> instruction: 0xf6060052
    ba10:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba14:	23020000 	movwcs	r0, #8192	; 0x2000
    ba18:	02560800 	subseq	r0, r6, #0, 16
    ba1c:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
    ba20:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba24:	23020000 	movwcs	r0, #8192	; 0x2000
    ba28:	02590804 	subseq	r0, r9, #4, 16	; 0x40000
    ba2c:	f8060000 			; <UNDEFINED> instruction: 0xf8060000
    ba30:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba34:	23020000 	movwcs	r0, #8192	; 0x2000
    ba38:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    ba3c:	f9060052 			; <UNDEFINED> instruction: 0xf9060052
    ba40:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba44:	23020000 	movwcs	r0, #8192	; 0x2000
    ba48:	0168080c 	cmneq	r8, ip, lsl #16
    ba4c:	fa060000 	blx	18ba54 <_Min_Heap_Size+0x18b254>
    ba50:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba54:	23020000 	movwcs	r0, #8192	; 0x2000
    ba58:	06bc0810 	ssateq	r0, #29, r0, lsl #16
    ba5c:	fb060000 	blx	18ba66 <_Min_Heap_Size+0x18b266>
    ba60:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba64:	23020000 	movwcs	r0, #8192	; 0x2000
    ba68:	03740814 	cmneq	r4, #20, 16	; 0x140000
    ba6c:	fc060000 	stc2	0, cr0, [r6], {-0}
    ba70:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba74:	23020000 	movwcs	r0, #8192	; 0x2000
    ba78:	04a60818 	strteq	r0, [r6], #2072	; 0x818
    ba7c:	fd060000 	stc2	0, cr0, [r6, #-0]
    ba80:	009d1101 	addseq	r1, sp, r1, lsl #2
    ba84:	23020000 	movwcs	r0, #8192	; 0x2000
    ba88:	049d081c 	ldreq	r0, [sp], #2076	; 0x81c
    ba8c:	fe060000 	cdp2	0, 0, cr0, cr6, cr0, {0}
    ba90:	00a91101 	adceq	r1, r9, r1, lsl #2
    ba94:	23020000 	movwcs	r0, #8192	; 0x2000
    ba98:	01e80820 	mvneq	r0, r0, lsr #16
    ba9c:	ff060000 			; <UNDEFINED> instruction: 0xff060000
    baa0:	00a91101 	adceq	r1, r9, r1, lsl #2
    baa4:	23020000 	movwcs	r0, #8192	; 0x2000
    baa8:	04b00824 	ldrteq	r0, [r0], #2084	; 0x824
    baac:	00060000 	andeq	r0, r6, r0
    bab0:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bab4:	23020000 	movwcs	r0, #8192	; 0x2000
    bab8:	080e0828 	stmdaeq	lr, {r3, r5, fp}
    babc:	01060000 	mrseq	r0, (UNDEF: 6)
    bac0:	00a91102 	adceq	r1, r9, r2, lsl #2
    bac4:	23020000 	movwcs	r0, #8192	; 0x2000
    bac8:	07270830 			; <UNDEFINED> instruction: 0x07270830
    bacc:	02060000 	andeq	r0, r6, #0
    bad0:	00a91102 	adceq	r1, r9, r2, lsl #2
    bad4:	23020000 	movwcs	r0, #8192	; 0x2000
    bad8:	043f0834 	ldrteq	r0, [pc], #-2100	; bae0 <_Min_Heap_Size+0xb2e0>
    badc:	03060000 	movweq	r0, #24576	; 0x6000
    bae0:	00a91102 	adceq	r1, r9, r2, lsl #2
    bae4:	23020000 	movwcs	r0, #8192	; 0x2000
    bae8:	04ba0838 	ldrteq	r0, [sl], #2104	; 0x838
    baec:	04060000 	streq	r0, [r6], #-0
    baf0:	009d1102 	addseq	r1, sp, r2, lsl #2
    baf4:	23020000 	movwcs	r0, #8192	; 0x2000
    baf8:	065c083c 			; <UNDEFINED> instruction: 0x065c083c
    bafc:	05060000 	streq	r0, [r6, #-0]
    bb00:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb04:	23020000 	movwcs	r0, #8192	; 0x2000
    bb08:	06220840 	strteq	r0, [r2], -r0, asr #16
    bb0c:	06060000 	streq	r0, [r6], -r0
    bb10:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb14:	23020000 	movwcs	r0, #8192	; 0x2000
    bb18:	04c40844 	strbeq	r0, [r4], #2116	; 0x844
    bb1c:	07060000 	streq	r0, [r6, -r0]
    bb20:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bb24:	23020000 	movwcs	r0, #8192	; 0x2000
    bb28:	01320848 	teqeq	r2, r8, asr #16
    bb2c:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    bb30:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb34:	23020000 	movwcs	r0, #8192	; 0x2000
    bb38:	04790850 	ldrbteq	r0, [r9], #-2128	; 0xfffff7b0
    bb3c:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    bb40:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb44:	23020000 	movwcs	r0, #8192	; 0x2000
    bb48:	05f00854 	ldrbeq	r0, [r0, #2132]!	; 0x854
    bb4c:	0a060000 	beq	18bb54 <_Min_Heap_Size+0x18b354>
    bb50:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb54:	23020000 	movwcs	r0, #8192	; 0x2000
    bb58:	04ce0858 	strbeq	r0, [lr], #2136	; 0x858
    bb5c:	0b060000 	bleq	18bb64 <_Min_Heap_Size+0x18b364>
    bb60:	009d1102 	addseq	r1, sp, r2, lsl #2
    bb64:	23020000 	movwcs	r0, #8192	; 0x2000
    bb68:	001b085c 	andseq	r0, fp, ip, asr r8
    bb6c:	0c060000 	stceq	0, cr0, [r6], {-0}
    bb70:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb74:	23020000 	movwcs	r0, #8192	; 0x2000
    bb78:	03b50860 			; <UNDEFINED> instruction: 0x03b50860
    bb7c:	0d060000 	stceq	0, cr0, [r6, #-0]
    bb80:	00a91102 	adceq	r1, r9, r2, lsl #2
    bb84:	23020000 	movwcs	r0, #8192	; 0x2000
    bb88:	04d80864 	ldrbeq	r0, [r8], #2148	; 0x864
    bb8c:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    bb90:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bb94:	23020000 	movwcs	r0, #8192	; 0x2000
    bb98:	07960868 	ldreq	r0, [r6, r8, ror #16]
    bb9c:	0f060000 	svceq	0x00060000
    bba0:	00a91102 	adceq	r1, r9, r2, lsl #2
    bba4:	23020000 	movwcs	r0, #8192	; 0x2000
    bba8:	53430970 	movtpl	r0, #14704	; 0x3970
    bbac:	10060052 	andne	r0, r6, r2, asr r0
    bbb0:	00a91102 	adceq	r1, r9, r2, lsl #2
    bbb4:	23020000 	movwcs	r0, #8192	; 0x2000
    bbb8:	04e20874 	strbteq	r0, [r2], #2164	; 0x874
    bbbc:	11060000 	mrsne	r0, (UNDEF: 6)
    bbc0:	028f1102 	addeq	r1, pc, #-2147483648	; 0x80000000
    bbc4:	23020000 	movwcs	r0, #8192	; 0x2000
    bbc8:	07650878 			; <UNDEFINED> instruction: 0x07650878
    bbcc:	12060000 	andne	r0, r6, #0
    bbd0:	00a91102 	adceq	r1, r9, r2, lsl #2
    bbd4:	23030000 	movwcs	r0, #12288	; 0x3000
    bbd8:	55080180 	strpl	r0, [r8, #-384]	; 0xfffffe80
    bbdc:	06000003 	streq	r0, [r0], -r3
    bbe0:	a9110213 	ldmdbge	r1, {r0, r1, r4, r9}
    bbe4:	03000000 	movweq	r0, #0
    bbe8:	00018423 	andeq	r8, r1, r3, lsr #8
    bbec:	0001bc0c 	andeq	fp, r1, ip, lsl #24
    bbf0:	02140600 	andseq	r0, r4, #0, 12
    bbf4:	0002f303 	andeq	pc, r2, r3, lsl #6
    bbf8:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    bbfc:	00000664 	andeq	r0, r0, r4, ror #12
    bc00:	00029f0e 	andeq	r9, r2, lr, lsl #30
    bc04:	0a890100 	beq	fe24c00c <_estack+0xde24adcc>
    bc08:	00080305 	andeq	r0, r8, r5, lsl #6
    bc0c:	c20e2000 	andgt	r2, lr, #0
    bc10:	01000002 	tsteq	r0, r2
    bc14:	03050f8a 	movweq	r0, #24458	; 0x5f8a
    bc18:	00000000 	andeq	r0, r0, r0
    bc1c:	0002e50e 	andeq	lr, r2, lr, lsl #10
    bc20:	0f8b0100 	svceq	0x008b0100
    bc24:	2d7c0305 	ldclcs	3, cr0, [ip, #-20]!	; 0xffffffec
    bc28:	010f0800 	tsteq	pc, r0, lsl #16
    bc2c:	00002474 	andeq	r2, r0, r4, ror r4
    bc30:	0106dc01 	tsteq	r6, r1, lsl #24
	...
    bc3c:	01007d02 	tsteq	r0, r2, lsl #26
    bc40:	0000059c 	muleq	r0, ip, r5
    bc44:	706d7410 	rsbvc	r7, sp, r0, lsl r4
    bc48:	0cde0100 	ldfeqe	f0, [lr], {0}
    bc4c:	0000009d 	muleq	r0, sp, r0
    bc50:	000078a1 	andeq	r7, r0, r1, lsr #17
    bc54:	00007895 	muleq	r0, r5, r8
    bc58:	00171d11 	andseq	r1, r7, r1, lsl sp
    bc5c:	15de0100 	ldrbne	r0, [lr, #256]	; 0x100
    bc60:	0000009d 	muleq	r0, sp, r0
    bc64:	000078f6 	strdeq	r7, [r0], -r6
    bc68:	000078ec 	andeq	r7, r0, ip, ror #17
    bc6c:	0016d911 	andseq	sp, r6, r1, lsl r9
    bc70:	21de0100 	bicscs	r0, lr, r0, lsl #2
    bc74:	0000009d 	muleq	r0, sp, r0
    bc78:	00007940 	andeq	r7, r0, r0, asr #18
    bc7c:	00007938 	andeq	r7, r0, r8, lsr r9
    bc80:	00245f11 	eoreq	r5, r4, r1, lsl pc
    bc84:	2bde0100 	blcs	ff78c08c <_estack+0xdf78ae4c>
    bc88:	0000009d 	muleq	r0, sp, r0
    bc8c:	0000797d 	andeq	r7, r0, sp, ror r9
    bc90:	00007977 	andeq	r7, r0, r7, ror r9
    bc94:	0017c311 	andseq	ip, r7, r1, lsl r3
    bc98:	3ade0100 	bcc	ff78c0a0 <_estack+0xdf78ae60>
    bc9c:	0000009d 	muleq	r0, sp, r0
    bca0:	000079b7 			; <UNDEFINED> instruction: 0x000079b7
    bca4:	000079af 	andeq	r7, r0, pc, lsr #19
    bca8:	69011200 	stmdbvs	r1, {r9, ip}
    bcac:	01000024 	tsteq	r0, r4, lsr #32
    bcb0:	a80106a7 	stmdage	r1, {r0, r1, r2, r5, r7, r9, sl}
    bcb4:	bc080016 	stclt	0, cr0, [r8], {22}
    bcb8:	02080016 	andeq	r0, r8, #22
    bcbc:	0001007d 	andeq	r0, r1, sp, ror r0
    bcc0:	00000a3b 	andeq	r0, r0, fp, lsr sl
    bcc4:	19e20002 	stmibne	r2!, {r1}^
    bcc8:	01040000 	mrseq	r0, (UNDEF: 4)
    bccc:	00000519 	andeq	r0, r0, r9, lsl r5
    bcd0:	00262f0c 	eoreq	r2, r6, ip, lsl #30
    bcd4:	00082200 	andeq	r2, r8, r0, lsl #4
    bcd8:	00068800 	andeq	r8, r6, r0, lsl #16
	...
    bce4:	0089bd00 	addeq	fp, r9, r0, lsl #26
    bce8:	06010200 	streq	r0, [r1], -r0, lsl #4
    bcec:	0000050d 	andeq	r0, r0, sp, lsl #10
    bcf0:	0b080102 	bleq	20c100 <_Min_Heap_Size+0x20b900>
    bcf4:	02000005 	andeq	r0, r0, #5
    bcf8:	05d30502 	ldrbeq	r0, [r3, #1282]	; 0x502
    bcfc:	9a030000 	bls	cbd04 <_Min_Heap_Size+0xcb504>
    bd00:	03000006 	movweq	r0, #6
    bd04:	004a1939 	subeq	r1, sl, r9, lsr r9
    bd08:	02020000 	andeq	r0, r2, #0
    bd0c:	00033707 	andeq	r3, r3, r7, lsl #14
    bd10:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    bd14:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bd18:	00029103 	andeq	r9, r2, r3, lsl #2
    bd1c:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    bd20:	00000064 	andeq	r0, r0, r4, rrx
    bd24:	bf070402 	svclt	0x00070402
    bd28:	02000000 	andeq	r0, r0, #0
    bd2c:	02ad0508 	adceq	r0, sp, #8, 10	; 0x2000000
    bd30:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    bd34:	0000ba07 	andeq	fp, r0, r7, lsl #20
    bd38:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    bd3c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    bd40:	c4070402 	strgt	r0, [r7], #-1026	; 0xfffffbfe
    bd44:	05000000 	streq	r0, [r0, #-0]
    bd48:	00000080 	andeq	r0, r0, r0, lsl #1
    bd4c:	0028cc03 	eoreq	ip, r8, r3, lsl #24
    bd50:	17d10400 	ldrbne	r0, [r1, r0, lsl #8]
    bd54:	00000080 	andeq	r0, r0, r0, lsl #1
    bd58:	64040802 	strvs	r0, [r4], #-2050	; 0xfffff7fe
    bd5c:	02000006 	andeq	r0, r0, #6
    bd60:	05140801 	ldreq	r0, [r4, #-2049]	; 0xfffff7ff
    bd64:	9c030000 	stcls	0, cr0, [r3], {-0}
    bd68:	05000006 	streq	r0, [r0, #-6]
    bd6c:	003e1424 	eorseq	r1, lr, r4, lsr #8
    bd70:	93030000 	movwls	r0, #12288	; 0x3000
    bd74:	05000002 	streq	r0, [r0, #-2]
    bd78:	00581430 	subseq	r1, r8, r0, lsr r4
    bd7c:	ec030000 	stc	0, cr0, [r3], {-0}
    bd80:	06000025 	streq	r0, [r0], -r5, lsr #32
    bd84:	00ca2328 	sbceq	r2, sl, r8, lsr #6
    bd88:	ba060000 	blt	18bd90 <_Min_Heap_Size+0x18b590>
    bd8c:	20000026 	andcs	r0, r0, r6, lsr #32
    bd90:	4a082906 	bmi	2161b0 <_Min_Heap_Size+0x2159b0>
    bd94:	07000001 	streq	r0, [r0, -r1]
    bd98:	06003072 			; <UNDEFINED> instruction: 0x06003072
    bd9c:	0080122a 	addeq	r1, r0, sl, lsr #4
    bda0:	23020000 	movwcs	r0, #8192	; 0x2000
    bda4:	31720700 	cmncc	r2, r0, lsl #14
    bda8:	122b0600 	eorne	r0, fp, #0, 12
    bdac:	00000080 	andeq	r0, r0, r0, lsl #1
    bdb0:	07042302 	streq	r2, [r4, -r2, lsl #6]
    bdb4:	06003272 			; <UNDEFINED> instruction: 0x06003272
    bdb8:	0080122c 	addeq	r1, r0, ip, lsr #4
    bdbc:	23020000 	movwcs	r0, #8192	; 0x2000
    bdc0:	33720708 	cmncc	r2, #8, 14	; 0x200000
    bdc4:	122d0600 	eorne	r0, sp, #0, 12
    bdc8:	00000080 	andeq	r0, r0, r0, lsl #1
    bdcc:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    bdd0:	00323172 	eorseq	r3, r2, r2, ror r1
    bdd4:	80122e06 	andshi	r2, r2, r6, lsl #28
    bdd8:	02000000 	andeq	r0, r0, #0
    bddc:	6c071023 	stcvs	0, cr1, [r7], {35}	; 0x23
    bde0:	2f060072 	svccs	0x00060072
    bde4:	00008012 	andeq	r8, r0, r2, lsl r0
    bde8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    bdec:	00637007 	rsbeq	r7, r3, r7
    bdf0:	80123006 	andshi	r3, r2, r6
    bdf4:	02000000 	andeq	r0, r0, #0
    bdf8:	70071823 	andvc	r1, r7, r3, lsr #16
    bdfc:	06007273 			; <UNDEFINED> instruction: 0x06007273
    be00:	00801231 	addeq	r1, r0, r1, lsr r2
    be04:	23020000 	movwcs	r0, #8192	; 0x2000
    be08:	9303001c 	movwls	r0, #12316	; 0x301c
    be0c:	06000025 	streq	r0, [r0], -r5, lsr #32
    be10:	01562334 	cmpeq	r6, r4, lsr r3
    be14:	b8060000 	stmdalt	r6, {}	; <UNPREDICTABLE>
    be18:	20000025 	andcs	r0, r0, r5, lsr #32
    be1c:	d6083506 	strle	r3, [r8], -r6, lsl #10
    be20:	07000001 	streq	r0, [r0, -r1]
    be24:	06003472 			; <UNDEFINED> instruction: 0x06003472
    be28:	00801236 	addeq	r1, r0, r6, lsr r2
    be2c:	23020000 	movwcs	r0, #8192	; 0x2000
    be30:	35720700 	ldrbcc	r0, [r2, #-1792]!	; 0xfffff900
    be34:	12370600 	eorsne	r0, r7, #0, 12
    be38:	00000080 	andeq	r0, r0, r0, lsl #1
    be3c:	07042302 	streq	r2, [r4, -r2, lsl #6]
    be40:	06003672 			; <UNDEFINED> instruction: 0x06003672
    be44:	00801238 	addeq	r1, r0, r8, lsr r2
    be48:	23020000 	movwcs	r0, #8192	; 0x2000
    be4c:	37720708 	ldrbcc	r0, [r2, -r8, lsl #14]!
    be50:	12390600 	eorsne	r0, r9, #0, 12
    be54:	00000080 	andeq	r0, r0, r0, lsl #1
    be58:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    be5c:	06003872 			; <UNDEFINED> instruction: 0x06003872
    be60:	0080123a 	addeq	r1, r0, sl, lsr r2
    be64:	23020000 	movwcs	r0, #8192	; 0x2000
    be68:	39720710 	ldmdbcc	r2!, {r4, r8, r9, sl}^
    be6c:	123b0600 	eorsne	r0, fp, #0, 12
    be70:	00000080 	andeq	r0, r0, r0, lsl #1
    be74:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    be78:	00303172 	eorseq	r3, r0, r2, ror r1
    be7c:	80123c06 	andshi	r3, r2, r6, lsl #24
    be80:	02000000 	andeq	r0, r0, #0
    be84:	72071823 	andvc	r1, r7, #2293760	; 0x230000
    be88:	06003131 			; <UNDEFINED> instruction: 0x06003131
    be8c:	0080123d 	addeq	r1, r0, sp, lsr r2
    be90:	23020000 	movwcs	r0, #8192	; 0x2000
    be94:	e003001c 	and	r0, r3, ip, lsl r0
    be98:	06000024 	streq	r0, [r0], -r4, lsr #32
    be9c:	01e21c40 	mvneq	r1, r0, asr #24
    bea0:	e0060000 	and	r0, r6, r0
    bea4:	40000025 	andmi	r0, r0, r5, lsr #32
    bea8:	0e084106 	adfeqe	f4, f0, f6
    beac:	08000002 	stmdaeq	r0, {r1}
    beb0:	000025c4 	andeq	r2, r0, r4, asr #11
    beb4:	4a1a4206 	bmi	69c6d4 <_Min_Heap_Size+0x69bed4>
    beb8:	02000001 	andeq	r0, r0, #1
    bebc:	c6080023 	strgt	r0, [r8], -r3, lsr #32
    bec0:	06000026 	streq	r0, [r0], -r6, lsr #32
    bec4:	00be1a43 	adcseq	r1, lr, r3, asr #20
    bec8:	23020000 	movwcs	r0, #8192	; 0x2000
    becc:	a1030020 	tstge	r3, r0, lsr #32
    bed0:	06000026 	streq	r0, [r0], -r6, lsr #32
    bed4:	021f0f46 	andseq	r0, pc, #280	; 0x118
    bed8:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    bedc:	09000002 	stmdbeq	r0, {r1}
    bee0:	00022504 	andeq	r2, r2, r4, lsl #10
    bee4:	79010a00 	stmdbvc	r1, {r9, fp}
    bee8:	44000000 	strmi	r0, [r0], #-0
    beec:	0b000002 	bleq	befc <_Min_Heap_Size+0xb6fc>
    bef0:	00000244 	andeq	r0, r0, r4, asr #4
    bef4:	00008c0b 	andeq	r8, r0, fp, lsl #24
    bef8:	02440b00 	subeq	r0, r4, #0, 22
    befc:	440b0000 	strmi	r0, [fp], #-0
    bf00:	00000002 	andeq	r0, r0, r2
    bf04:	00800409 	addeq	r0, r0, r9, lsl #8
    bf08:	ee0c0000 	cdp	0, 0, cr0, cr12, cr0, {0}
    bf0c:	01000024 	tsteq	r0, r4, lsr #32
    bf10:	0080151d 	addeq	r1, r0, sp, lsl r5
    bf14:	01010000 	mrseq	r0, (UNDEF: 1)
    bf18:	0026cd0c 	eoreq	ip, r6, ip, lsl #26
    bf1c:	151e0100 	ldrne	r0, [lr, #-256]	; 0xffffff00
    bf20:	00000080 	andeq	r0, r0, r0, lsl #1
    bf24:	300c0101 	andcc	r0, ip, r1, lsl #2
    bf28:	01000025 	tsteq	r0, r5, lsr #32
    bf2c:	0080151f 	addeq	r1, r0, pc, lsl r5
    bf30:	01010000 	mrseq	r0, (UNDEF: 1)
    bf34:	0025280c 	eoreq	r2, r5, ip, lsl #16
    bf38:	15200100 	strne	r0, [r0, #-256]!	; 0xffffff00
    bf3c:	00000080 	andeq	r0, r0, r0, lsl #1
    bf40:	150d0101 	strne	r0, [sp, #-257]	; 0xfffffeff
    bf44:	01000026 	tsteq	r0, r6, lsr #32
    bf48:	021a2071 	andseq	r2, sl, #113	; 0x71
    bf4c:	03050000 	movweq	r0, #20480	; 0x5000
    bf50:	2000000c 	andcs	r0, r0, ip
    bf54:	0026010d 	eoreq	r0, r6, sp, lsl #2
    bf58:	20720100 	rsbscs	r0, r2, r0, lsl #2
    bf5c:	0000021a 	andeq	r0, r0, sl, lsl r2
    bf60:	00100305 	andseq	r0, r0, r5, lsl #6
    bf64:	640e2000 	strvs	r2, [lr], #-0
    bf68:	01000025 	tsteq	r0, r5, lsr #32
    bf6c:	00871774 	addeq	r1, r7, r4, ror r7
    bf70:	05010000 	streq	r0, [r1, #-0]
    bf74:	0001e003 	andeq	lr, r1, r3
    bf78:	24f50e20 	ldrbtcs	r0, [r5], #3616	; 0xe20
    bf7c:	75010000 	strvc	r0, [r1, #-0]
    bf80:	00008717 	andeq	r8, r0, r7, lsl r7
    bf84:	03050100 	movweq	r0, #20736	; 0x5100
    bf88:	200001e4 	andcs	r0, r0, r4, ror #3
    bf8c:	248a010f 	strcs	r0, [sl], #271	; 0x10f
    bf90:	2b010000 	blcs	4bf98 <_Min_Heap_Size+0x4b798>
    bf94:	79010501 	stmdbvc	r1, {r0, r8, sl}
	...
    bfa0:	02000000 	andeq	r0, r0, #0
    bfa4:	1601007d 			; <UNDEFINED> instruction: 0x1601007d
    bfa8:	10000003 	andne	r0, r0, r3
    bfac:	00002622 	andeq	r2, r0, r2, lsr #12
    bfb0:	30012b01 	andcc	r2, r1, r1, lsl #22
    bfb4:	0000020e 	andeq	r0, r0, lr, lsl #4
    bfb8:	000079f5 	strdeq	r7, [r0], -r5
    bfbc:	000079ed 	andeq	r7, r0, sp, ror #19
    bfc0:	0016be11 	andseq	fp, r6, r1, lsl lr
    bfc4:	012c0100 			; <UNDEFINED> instruction: 0x012c0100
    bfc8:	00007909 	andeq	r7, r0, r9, lsl #18
    bfcc:	007a3600 	rsbseq	r3, sl, r0, lsl #12
    bfd0:	007a3000 	rsbseq	r3, sl, r0
    bfd4:	01120000 	tsteq	r2, r0
    bfd8:	000025cb 	andeq	r2, r0, fp, asr #11
    bfdc:	0e012701 	cdpeq	7, 0, cr2, cr1, cr1, {0}
    bfe0:	00008001 	andeq	r8, r0, r1
	...
    bfec:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    bff0:	8c011201 	sfmhi	f1, 4, [r1], {1}
    bff4:	01000026 	tsteq	r0, r6, lsr #32
    bff8:	010e0123 	tsteq	lr, r3, lsr #2
    bffc:	00000080 	andeq	r0, r0, r0, lsl #1
	...
    c008:	01007d02 	tsteq	r0, r2, lsl #26
    c00c:	250e0112 	strcs	r0, [lr, #-274]	; 0xfffffeee
    c010:	1f010000 	svcne	0x00010000
    c014:	80010e01 	andhi	r0, r1, r1, lsl #28
	...
    c020:	02000000 	andeq	r0, r0, #0
    c024:	0f01007d 	svceq	0x0001007d
    c028:	00253801 	eoreq	r3, r5, r1, lsl #16
    c02c:	011b0100 	tsteq	fp, r0, lsl #2
    c030:	0080010e 	addeq	r0, r0, lr, lsl #2
	...
    c03c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c040:	03ab0100 			; <UNDEFINED> instruction: 0x03ab0100
    c044:	e6130000 	ldr	r0, [r3], -r0
    c048:	00000009 	andeq	r0, r0, r9
    c04c:	02000000 	andeq	r0, r0, #0
	...
    c058:	0c011c01 	stceq	12, cr1, [r1], {1}
    c05c:	0009f914 	andeq	pc, r9, r4, lsl r9	; <UNPREDICTABLE>
    c060:	007a6400 	rsbseq	r6, sl, r0, lsl #8
    c064:	007a6200 	rsbseq	r6, sl, r0, lsl #4
    c068:	15000000 	strne	r0, [r0, #-0]
    c06c:	00257701 	eoreq	r7, r5, r1, lsl #14
    c070:	05ef0100 	strbeq	r0, [pc, #256]!	; c178 <_Min_Heap_Size+0xb978>
    c074:	00007901 	andeq	r7, r0, r1, lsl #18
    c078:	00172000 	andseq	r2, r7, r0
    c07c:	00179c08 	andseq	r9, r7, r8, lsl #24
    c080:	007a7708 	rsbseq	r7, sl, r8, lsl #14
    c084:	04850100 	streq	r0, [r5], #256	; 0x100
    c088:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    c08c:	01000026 	tsteq	r0, r6, lsr #32
    c090:	024428ef 	subeq	r2, r4, #15663104	; 0xef0000
    c094:	7a9f0000 	bvc	fe7cc09c <_estack+0xde7cae5c>
    c098:	7a970000 	bvc	fe5cc0a0 <_estack+0xde5cae60>
    c09c:	1e160000 	cdpne	0, 1, cr0, cr6, cr0, {0}
    c0a0:	01000029 	tsteq	r0, r9, lsr #32
    c0a4:	008c37ef 	addeq	r3, ip, pc, ror #15
    c0a8:	7ade0000 	bvc	ff78c0b0 <_estack+0xdf78ae70>
    c0ac:	7ad60000 	bvc	ff58c0b4 <_estack+0xdf58ae74>
    c0b0:	46160000 	ldrmi	r0, [r6], -r0
    c0b4:	01000025 	tsteq	r0, r5, lsr #32
    c0b8:	02444bef 	subeq	r4, r4, #244736	; 0x3bc00
    c0bc:	7b1b0000 	blvc	6cc0c4 <_Min_Heap_Size+0x6cb8c4>
    c0c0:	7b150000 	blvc	54c0c8 <_Min_Heap_Size+0x54b8c8>
    c0c4:	1c160000 	ldcne	0, cr0, [r6], {-0}
    c0c8:	01000025 	tsteq	r0, r5, lsr #32
    c0cc:	024466ef 	subeq	r6, r4, #250609664	; 0xef00000
    c0d0:	7b4f0000 	blvc	13cc0d8 <_Min_Heap_Size+0x13cb8d8>
    c0d4:	7b470000 	blvc	11cc0dc <_Min_Heap_Size+0x11cb8dc>
    c0d8:	5d170000 	ldcpl	0, cr0, [r7, #-0]
    c0dc:	0100001c 	tsteq	r0, ip, lsl r0
    c0e0:	007909f0 	ldrshteq	r0, [r9], #-144	; 0xffffff70
    c0e4:	7b8c0000 	blvc	fe30c0ec <_estack+0xde30aeac>
    c0e8:	7b860000 	blvc	fe18c0f0 <_estack+0xde18aeb0>
    c0ec:	70180000 	andsvc	r0, r8, r0
    c0f0:	f1010063 	setend	le
    c0f4:	00008012 	andeq	r8, r0, r2, lsl r0
    c0f8:	007bc100 	rsbseq	ip, fp, r0, lsl #2
    c0fc:	007bb700 	rsbseq	fp, fp, r0, lsl #14
    c100:	706f1800 	rsbvc	r1, pc, r0, lsl #16
    c104:	1af10100 	bne	ffc4c50c <_estack+0xdfc4b2cc>
    c108:	00000080 	andeq	r0, r0, r0, lsl #1
    c10c:	00007c0a 	andeq	r7, r0, sl, lsl #24
    c110:	00007c04 	andeq	r7, r0, r4, lsl #24
    c114:	00707318 	rsbseq	r7, r0, r8, lsl r3
    c118:	4423f101 	strtmi	pc, [r3], #-257	; 0xfffffeff
    c11c:	3b000002 	blcc	c12c <_Min_Heap_Size+0xb92c>
    c120:	3500007c 	strcc	r0, [r0, #-124]	; 0xffffff84
    c124:	1900007c 	stmdbne	r0, {r2, r3, r4, r5, r6}
    c128:	08001762 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, ip}
    c12c:	00000903 	andeq	r0, r0, r3, lsl #18
    c130:	0000047b 	andeq	r0, r0, fp, ror r4
    c134:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    c138:	1b000079 	blne	c324 <_Min_Heap_Size+0xbb24>
    c13c:	08001766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, ip}
    c140:	000008a9 	andeq	r0, r0, r9, lsr #17
    c144:	64011c00 	strvs	r1, [r1], #-3072	; 0xfffff400
    c148:	01000026 	tsteq	r0, r6, lsr #32
    c14c:	0c0106af 	stceq	6, cr0, [r1], {175}	; 0xaf
    c150:	b8080018 	stmdalt	r8, {r3, r4}
    c154:	66080019 			; <UNDEFINED> instruction: 0x66080019
    c158:	0100007c 	tsteq	r0, ip, ror r0
    c15c:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    c160:	00252a16 	eoreq	r2, r5, r6, lsl sl
    c164:	27af0100 	strcs	r0, [pc, r0, lsl #2]!
    c168:	00000244 	andeq	r0, r0, r4, asr #4
    c16c:	00007c90 	muleq	r0, r0, ip
    c170:	00007c86 	andeq	r7, r0, r6, lsl #25
    c174:	00258c16 	eoreq	r8, r5, r6, lsl ip
    c178:	3baf0100 	blcc	febcc580 <_estack+0xdebcb340>
    c17c:	00000080 	andeq	r0, r0, r0, lsl #1
    c180:	00007cd9 	ldrdeq	r7, [r0], -r9
    c184:	00007cd5 	ldrdeq	r7, [r0], -r5
    c188:	001c5d17 	andseq	r5, ip, r7, lsl sp
    c18c:	09b00100 	ldmibeq	r0!, {r8}
    c190:	00000079 	andeq	r0, r0, r9, ror r0
    c194:	00007d03 	andeq	r7, r0, r3, lsl #26
    c198:	00007cf7 	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    c19c:	00250817 	eoreq	r0, r5, r7, lsl r8
    c1a0:	14b00100 	ldrtne	r0, [r0], #256	; 0x100
    c1a4:	00000079 	andeq	r0, r0, r9, ror r0
    c1a8:	00007d59 	andeq	r7, r0, r9, asr sp
    c1ac:	00007d4f 	andeq	r7, r0, pc, asr #26
    c1b0:	00254c17 	eoreq	r4, r5, r7, lsl ip
    c1b4:	13b10100 			; <UNDEFINED> instruction: 0x13b10100
    c1b8:	00000244 	andeq	r0, r0, r4, asr #4
    c1bc:	00007dc6 	andeq	r7, r0, r6, asr #27
    c1c0:	00007d9c 	muleq	r0, ip, sp
    c1c4:	0025e60d 	eoreq	lr, r5, sp, lsl #12
    c1c8:	1ab20100 	bne	fec8c5d0 <_estack+0xdec8b390>
    c1cc:	000001d6 	ldrdeq	r0, [r0], -r6
    c1d0:	01e80305 	mvneq	r0, r5, lsl #6
    c1d4:	5d0d2000 	stcpl	0, cr2, [sp, #-0]
    c1d8:	01000026 	tsteq	r0, r6, lsr #32
    c1dc:	07b019b3 			; <UNDEFINED> instruction: 0x07b019b3
    c1e0:	03050000 	movweq	r0, #20480	; 0x5000
    c1e4:	200000e0 	andcs	r0, r0, r0, ror #1
    c1e8:	00185c19 	andseq	r5, r8, r9, lsl ip
    c1ec:	000a0708 	andeq	r0, sl, r8, lsl #14
    c1f0:	00053c00 	andeq	r3, r5, r0, lsl #24
    c1f4:	50011a00 	andpl	r1, r1, r0, lsl #20
    c1f8:	00007702 	andeq	r7, r0, r2, lsl #14
    c1fc:	00186219 	andseq	r6, r8, r9, lsl r2
    c200:	000a0708 	andeq	r0, sl, r8, lsl #14
    c204:	00055300 	andeq	r5, r5, r0, lsl #6
    c208:	50011a00 	andpl	r1, r1, r0, lsl #20
    c20c:	2e040305 	cdpcs	3, 0, cr0, cr4, cr5, {0}
    c210:	19000800 	stmdbne	r0, {fp}
    c214:	08001868 	stmdaeq	r0, {r3, r5, r6, fp, ip}
    c218:	00000a07 	andeq	r0, r0, r7, lsl #20
    c21c:	0000056a 	andeq	r0, r0, sl, ror #10
    c220:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c224:	002e2403 	eoreq	r2, lr, r3, lsl #8
    c228:	70190008 	andsvc	r0, r9, r8
    c22c:	14080018 	strne	r0, [r8], #-24	; 0xffffffe8
    c230:	8100000a 	tsthi	r0, sl
    c234:	1a000005 	bne	c250 <_Min_Heap_Size+0xba50>
    c238:	03055001 	movweq	r5, #20481	; 0x5001
    c23c:	08002e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, sp}
    c240:	18781900 	ldmdane	r8!, {r8, fp, ip}^
    c244:	0a140800 	beq	50e24c <_Min_Heap_Size+0x50da4c>
    c248:	05980000 	ldreq	r0, [r8]
    c24c:	011a0000 	tsteq	sl, r0
    c250:	4c030550 	cfstr32mi	mvfx0, [r3], {80}	; 0x50
    c254:	0008002e 	andeq	r0, r8, lr, lsr #32
    c258:	00188019 	andseq	r8, r8, r9, lsl r0
    c25c:	000a1408 	andeq	r1, sl, r8, lsl #8
    c260:	0005af00 	andeq	sl, r5, r0, lsl #30
    c264:	50011a00 	andpl	r1, r1, r0, lsl #20
    c268:	2e600305 	cdpcs	3, 6, cr0, cr0, cr5, {0}
    c26c:	19000800 	stmdbne	r0, {fp}
    c270:	08001888 	stmdaeq	r0, {r3, r7, fp, ip}
    c274:	00000a14 	andeq	r0, r0, r4, lsl sl
    c278:	000005c6 	andeq	r0, r0, r6, asr #11
    c27c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c280:	002e7403 	eoreq	r7, lr, r3, lsl #8
    c284:	90190008 	andsls	r0, r9, r8
    c288:	14080018 	strne	r0, [r8], #-24	; 0xffffffe8
    c28c:	dd00000a 	stcle	0, cr0, [r0, #-40]	; 0xffffffd8
    c290:	1a000005 	bne	c2ac <_Min_Heap_Size+0xbaac>
    c294:	03055001 	movweq	r5, #20481	; 0x5001
    c298:	08002e88 	stmdaeq	r0, {r3, r7, r9, sl, fp, sp}
    c29c:	18981900 	ldmne	r8, {r8, fp, ip}
    c2a0:	0a140800 	beq	50e2a8 <_Min_Heap_Size+0x50daa8>
    c2a4:	05f40000 	ldrbeq	r0, [r4, #0]!
    c2a8:	011a0000 	tsteq	sl, r0
    c2ac:	9c030550 	cfstr32ls	mvfx0, [r3], {80}	; 0x50
    c2b0:	0008002e 	andeq	r0, r8, lr, lsr #32
    c2b4:	0018a019 	andseq	sl, r8, r9, lsl r0
    c2b8:	000a1408 	andeq	r1, sl, r8, lsl #8
    c2bc:	00060b00 	andeq	r0, r6, r0, lsl #22
    c2c0:	50011a00 	andpl	r1, r1, r0, lsl #20
    c2c4:	2eb00305 	cdpcs	3, 11, cr0, cr0, cr5, {0}
    c2c8:	19000800 	stmdbne	r0, {fp}
    c2cc:	080018a8 	stmdaeq	r0, {r3, r5, r7, fp, ip}
    c2d0:	00000a14 	andeq	r0, r0, r4, lsl sl
    c2d4:	00000622 	andeq	r0, r0, r2, lsr #12
    c2d8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c2dc:	002ec403 	eoreq	ip, lr, r3, lsl #8
    c2e0:	b0190008 	andslt	r0, r9, r8
    c2e4:	14080018 	strne	r0, [r8], #-24	; 0xffffffe8
    c2e8:	3900000a 	stmdbcc	r0, {r1, r3}
    c2ec:	1a000006 	bne	c30c <_Min_Heap_Size+0xbb0c>
    c2f0:	03055001 	movweq	r5, #20481	; 0x5001
    c2f4:	08002ed8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, fp, sp}
    c2f8:	18b81900 	ldmne	r8!, {r8, fp, ip}
    c2fc:	0a140800 	beq	50e304 <_Min_Heap_Size+0x50db04>
    c300:	06500000 	ldrbeq	r0, [r0], -r0
    c304:	011a0000 	tsteq	sl, r0
    c308:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    c30c:	0008002e 	andeq	r0, r8, lr, lsr #32
    c310:	0018c019 	andseq	ip, r8, r9, lsl r0
    c314:	000a1408 	andeq	r1, sl, r8, lsl #8
    c318:	00066700 	andeq	r6, r6, r0, lsl #14
    c31c:	50011a00 	andpl	r1, r1, r0, lsl #20
    c320:	2f000305 	svccs	0x00000305
    c324:	19000800 	stmdbne	r0, {fp}
    c328:	080018c8 	stmdaeq	r0, {r3, r6, r7, fp, ip}
    c32c:	00000a14 	andeq	r0, r0, r4, lsl sl
    c330:	0000067e 	andeq	r0, r0, lr, ror r6
    c334:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c338:	002f1403 	eoreq	r1, pc, r3, lsl #8
    c33c:	d0190008 	andsle	r0, r9, r8
    c340:	14080018 	strne	r0, [r8], #-24	; 0xffffffe8
    c344:	9500000a 	strls	r0, [r0, #-10]
    c348:	1a000006 	bne	c368 <_Min_Heap_Size+0xbb68>
    c34c:	03055001 	movweq	r5, #20481	; 0x5001
    c350:	08002f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, sp}
    c354:	18d81900 	ldmne	r8, {r8, fp, ip}^
    c358:	0a140800 	beq	50e360 <_Min_Heap_Size+0x50db60>
    c35c:	06ac0000 	strteq	r0, [ip], r0
    c360:	011a0000 	tsteq	sl, r0
    c364:	3c030550 	cfstr32cc	mvfx0, [r3], {80}	; 0x50
    c368:	0008002f 	andeq	r0, r8, pc, lsr #32
    c36c:	0018e019 	andseq	lr, r8, r9, lsl r0
    c370:	000a1408 	andeq	r1, sl, r8, lsl #8
    c374:	0006c300 	andeq	ip, r6, r0, lsl #6
    c378:	50011a00 	andpl	r1, r1, r0, lsl #20
    c37c:	2f500305 	svccs	0x00500305
    c380:	19000800 	stmdbne	r0, {fp}
    c384:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
    c388:	00000a14 	andeq	r0, r0, r4, lsl sl
    c38c:	000006da 	ldrdeq	r0, [r0], -sl
    c390:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c394:	002f6403 	eoreq	r6, pc, r3, lsl #8
    c398:	ee190008 	cdp	0, 1, cr0, cr9, cr8, {0}
    c39c:	07080018 	smladeq	r8, r8, r0, r0
    c3a0:	ee00000a 	cdp	0, 0, cr0, cr0, cr10, {0}
    c3a4:	1a000006 	bne	c3c4 <_Min_Heap_Size+0xbbc4>
    c3a8:	77025001 	strvc	r5, [r2, -r1]
    c3ac:	f4190000 			; <UNDEFINED> instruction: 0xf4190000
    c3b0:	38080018 	stmdacc	r8, {r3, r4}
    c3b4:	02000008 	andeq	r0, r0, #8
    c3b8:	1a000007 	bne	c3dc <_Min_Heap_Size+0xbbdc>
    c3bc:	76025001 	strvc	r5, [r2], -r1
    c3c0:	fa190000 	blx	64c3c8 <_Min_Heap_Size+0x64bbc8>
    c3c4:	c0080018 	andgt	r0, r8, r8, lsl r0
    c3c8:	16000007 	strne	r0, [r0], -r7
    c3cc:	1a000007 	bne	c3f0 <_Min_Heap_Size+0xbbf0>
    c3d0:	76025001 	strvc	r5, [r2], -r1
    c3d4:	0c1d0000 	ldceq	0, cr0, [sp], {-0}
    c3d8:	36080019 			; <UNDEFINED> instruction: 0x36080019
    c3dc:	1a000007 	bne	c400 <_Min_Heap_Size+0xbc00>
    c3e0:	03055001 	movweq	r5, #20481	; 0x5001
    c3e4:	200000e0 	andcs	r0, r0, r0, ror #1
    c3e8:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    c3ec:	011a4008 	tsteq	sl, r8
    c3f0:	c0750352 	rsbsgt	r0, r5, r2, asr r3
    c3f4:	14190000 	ldrne	r0, [r9], #-0
    c3f8:	14080019 	strne	r0, [r8], #-25	; 0xffffffe7
    c3fc:	4d00000a 	stcmi	0, cr0, [r0, #-40]	; 0xffffffd8
    c400:	1a000007 	bne	c424 <_Min_Heap_Size+0xbc24>
    c404:	03055001 	movweq	r5, #20481	; 0x5001
    c408:	08002f78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, fp, sp}
    c40c:	191e1900 	ldmdbne	lr, {r8, fp, ip}
    c410:	0a140800 	beq	50e418 <_Min_Heap_Size+0x50dc18>
    c414:	07640000 	strbeq	r0, [r4, -r0]!
    c418:	011a0000 	tsteq	sl, r0
    c41c:	88030550 	stmdahi	r3, {r4, r6, r8, sl}
    c420:	0008002f 	andeq	r0, r8, pc, lsr #32
    c424:	0019301d 	andseq	r3, r9, sp, lsl r0
    c428:	00078808 	andeq	r8, r7, r8, lsl #16
    c42c:	50011a00 	andpl	r1, r1, r0, lsl #20
    c430:	00e00305 	rsceq	r0, r0, r5, lsl #6
    c434:	011a2000 	tsteq	sl, r0
    c438:	40080251 	andmi	r0, r8, r1, asr r2
    c43c:	0252011a 	subseq	r0, r2, #-2147483642	; 0x80000006
    c440:	011a0075 	tsteq	sl, r5, ror r0
    c444:	00300153 	eorseq	r0, r0, r3, asr r1
    c448:	00194019 	andseq	r4, r9, r9, lsl r0
    c44c:	000a1408 	andeq	r1, sl, r8, lsl #8
    c450:	00079f00 	andeq	r9, r7, r0, lsl #30
    c454:	50011a00 	andpl	r1, r1, r0, lsl #20
    c458:	2f880305 	svccs	0x00880305
    c45c:	1e000800 	cdpne	8, 0, cr0, cr0, cr0, {0}
    c460:	0800194c 	stmdaeq	r0, {r2, r3, r6, r8, fp, ip}
    c464:	00000a07 	andeq	r0, r0, r7, lsl #20
    c468:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    c46c:	00000077 	andeq	r0, r0, r7, ror r0
    c470:	0000801f 	andeq	r8, r0, pc, lsl r0
    c474:	0007c000 	andeq	ip, r7, r0
    c478:	00802000 	addeq	r2, r0, r0
    c47c:	003f0000 	eorseq	r0, pc, r0
    c480:	0024a621 	eoreq	sl, r4, r1, lsr #12
    c484:	0da40100 	stfeqs	f0, [r4]
    c488:	00083101 	andeq	r3, r8, r1, lsl #2
    c48c:	0017b400 	andseq	fp, r7, r0, lsl #8
    c490:	0017bc08 	andseq	fp, r7, r8, lsl #24
    c494:	007ee608 	rsbseq	lr, lr, r8, lsl #12
    c498:	08310100 	ldmdaeq	r1!, {r8}
    c49c:	c1160000 	tstgt	r6, r0
    c4a0:	01000024 	tsteq	r0, r4, lsr #32
    c4a4:	00802aa4 	addeq	r2, r0, r4, lsr #21
    c4a8:	7f0a0000 	svcvc	0x000a0000
    c4ac:	7f060000 	svcvc	0x00060000
    c4b0:	be170000 	cdplt	0, 1, cr0, cr7, cr0, {0}
    c4b4:	01000016 	tsteq	r0, r6, lsl r0
    c4b8:	08310aa5 	ldmdaeq	r1!, {r0, r2, r5, r7, r9, fp}
    c4bc:	7f2f0000 	svcvc	0x002f0000
    c4c0:	7f2b0000 	svcvc	0x002b0000
    c4c4:	01220000 			; <UNDEFINED> instruction: 0x01220000
    c4c8:	00002677 	andeq	r2, r0, r7, ror r6
    c4cc:	0111a701 	tsteq	r1, r1, lsl #14
    c4d0:	00000831 	andeq	r0, r0, r1, lsr r8
    c4d4:	00081f01 	andeq	r1, r8, r1, lsl #30
    c4d8:	00800b00 	addeq	r0, r0, r0, lsl #22
    c4dc:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    c4e0:	080017ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl, ip}
    c4e4:	00000a22 	andeq	r0, r0, r2, lsr #20
    c4e8:	0350011a 	cmpeq	r0, #-2147483642	; 0x80000006
    c4ec:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    c4f0:	02010200 	andeq	r0, r1, #0, 4
    c4f4:	00002629 	andeq	r2, r0, r9, lsr #12
    c4f8:	0024bc23 	eoreq	fp, r4, r3, lsr #24
    c4fc:	0d9c0100 	ldfeqs	f0, [ip]
    c500:	00179c01 	andseq	r9, r7, r1, lsl #24
    c504:	0017b408 	andseq	fp, r7, r8, lsl #8
    c508:	007f4e08 	rsbseq	r4, pc, r8, lsl #28
    c50c:	08a90100 	stmiaeq	r9!, {r8}
    c510:	c1160000 	tstgt	r6, r0
    c514:	01000024 	tsteq	r0, r4, lsr #32
    c518:	00802a9c 	umulleq	r2, r0, ip, sl
    c51c:	7f760000 	svcvc	0x00760000
    c520:	7f6e0000 	svcvc	0x006e0000
    c524:	01240000 			; <UNDEFINED> instruction: 0x01240000
    c528:	000024b6 			; <UNDEFINED> instruction: 0x000024b6
    c52c:	01119f01 	tsteq	r1, r1, lsl #30
    c530:	00087b01 	andeq	r7, r8, r1, lsl #22
    c534:	00800b00 	addeq	r0, r0, r0, lsl #22
    c538:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    c53c:	080017a8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, ip}
    c540:	00000a14 	andeq	r0, r0, r4, lsl sl
    c544:	00000898 	muleq	r0, r8, r8
    c548:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c54c:	002d8403 	eoreq	r8, sp, r3, lsl #8
    c550:	51011a08 	tstpl	r1, r8, lsl #20
    c554:	00007402 	andeq	r7, r0, r2, lsl #8
    c558:	0017ae1e 	andseq	sl, r7, lr, lsl lr
    c55c:	000a3008 	andeq	r3, sl, r8
    c560:	50011a00 	andpl	r1, r1, r0, lsl #20
    c564:	00007402 	andeq	r7, r0, r2, lsl #8
    c568:	24cc2500 	strbcs	r2, [ip], #1280	; 0x500
    c56c:	8d010000 	stchi	0, cr0, [r1, #-0]
    c570:	0831010d 	ldmdaeq	r1!, {r0, r2, r3, r8}
    c574:	16e80000 	strbtne	r0, [r8], r0
    c578:	171e0800 	ldrne	r0, [lr, -r0, lsl #16]
    c57c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    c580:	09030100 	stmdbeq	r3, {r8}
    c584:	69260000 	stmdbvs	r6!, {}	; <UNPREDICTABLE>
    c588:	0100736e 	tsteq	r0, lr, ror #6
    c58c:	00802e8d 	addeq	r2, r0, sp, lsl #29
    c590:	7fb10000 	svcvc	0x00b10000
    c594:	7fad0000 	svcvc	0x00ad0000
    c598:	a8170000 	ldmdage	r7, {}	; <UNPREDICTABLE>
    c59c:	01000025 	tsteq	r0, r5, lsr #32
    c5a0:	00a60e91 	umlaleq	r0, r6, r1, lr
    c5a4:	7fd40000 	svcvc	0x00d40000
    c5a8:	7fd20000 	svcvc	0x00d20000
    c5ac:	b0170000 	andslt	r0, r7, r0
    c5b0:	01000025 	tsteq	r0, r5, lsr #32
    c5b4:	00a60e92 	umlaleq	r0, r6, r2, lr
    c5b8:	7ffb0000 	svcvc	0x00fb0000
    c5bc:	7fe70000 	svcvc	0x00e70000
    c5c0:	21000000 	mrscs	r0, (UNDEF: 0)
    c5c4:	00002552 	andeq	r2, r0, r2, asr r5
    c5c8:	01158201 	tsteq	r5, r1, lsl #4
    c5cc:	00000080 	andeq	r0, r0, r0, lsl #1
    c5d0:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
    c5d4:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
    c5d8:	0000809e 	muleq	r0, lr, r0
    c5dc:	00097401 	andeq	r7, r9, r1, lsl #8
    c5e0:	63702600 	cmnvs	r0, #0, 12
    c5e4:	34820100 	strcc	r0, [r2], #256	; 0x100
    c5e8:	00000080 	andeq	r0, r0, r0, lsl #1
    c5ec:	000080ce 	andeq	r8, r0, lr, asr #1
    c5f0:	000080ca 	andeq	r8, r0, sl, asr #1
    c5f4:	001ebb0d 	andseq	fp, lr, sp, lsl #22
    c5f8:	0e830100 	rmfeqs	f0, f3, f0
    c5fc:	00000974 	andeq	r0, r0, r4, ror r9
    c600:	177c9102 	ldrbne	r9, [ip, -r2, lsl #2]!
    c604:	0000255d 	andeq	r2, r0, sp, asr r5
    c608:	80128401 	andshi	r8, r2, r1, lsl #8
    c60c:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    c610:	ef000080 	svc	0x00000080
    c614:	27000080 	strcs	r0, [r0, -r0, lsl #1]
    c618:	080016c2 	stmdaeq	r0, {r1, r6, r7, r9, sl, ip}
    c61c:	080016d8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, ip}
    c620:	01006918 	tsteq	r0, r8, lsl r9
    c624:	00790e85 	rsbseq	r0, r9, r5, lsl #29
    c628:	812a0000 			; <UNDEFINED> instruction: 0x812a0000
    c62c:	81260000 			; <UNDEFINED> instruction: 0x81260000
    c630:	00000000 	andeq	r0, r0, r0
    c634:	0000a61f 	andeq	sl, r0, pc, lsl r6
    c638:	00098400 	andeq	r8, r9, r0, lsl #8
    c63c:	00802000 	addeq	r2, r0, r0
    c640:	00010000 	andeq	r0, r1, r0
    c644:	007c011c 	rsbseq	r0, ip, ip, lsl r1
    c648:	77010000 	strvc	r0, [r1, -r0]
    c64c:	17bc0106 	ldrne	r0, [ip, r6, lsl #2]!
    c650:	180c0800 	stmdane	ip, {fp}
    c654:	81490800 	cmphi	r9, r0, lsl #16
    c658:	e6010000 	str	r0, [r1], -r0
    c65c:	19000009 	stmdbne	r0, {r0, r3}
    c660:	080017d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, sl, ip}
    c664:	00000a14 	andeq	r0, r0, r4, lsl sl
    c668:	000009b6 			; <UNDEFINED> instruction: 0x000009b6
    c66c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    c670:	002d9c03 	eoreq	r9, sp, r3, lsl #24
    c674:	de190008 	cdple	0, 1, cr0, cr9, cr8, {0}
    c678:	14080017 	strne	r0, [r8], #-23	; 0xffffffe9
    c67c:	cd00000a 	stcgt	0, cr0, [r0, #-40]	; 0xffffffd8
    c680:	1a000009 	bne	c6ac <_Min_Heap_Size+0xbeac>
    c684:	03055001 	movweq	r5, #20481	; 0x5001
    c688:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
    c68c:	17e61e00 	strbne	r1, [r6, r0, lsl #28]!
    c690:	0a140800 	beq	50e698 <_Min_Heap_Size+0x50de98>
    c694:	011a0000 	tsteq	sl, r0
    c698:	e4030550 	str	r0, [r3], #-1360	; 0xfffffab0
    c69c:	1a08002d 	bne	20c758 <_Min_Heap_Size+0x20bf58>
    c6a0:	31015101 	tstcc	r1, r1, lsl #2
    c6a4:	b0280000 	eorlt	r0, r8, r0
    c6a8:	02000026 	andeq	r0, r0, #38	; 0x26
    c6ac:	011f0463 	tsteq	pc, r3, ror #8
    c6b0:	000000b2 	strheq	r0, [r0], -r2
    c6b4:	000a0703 	andeq	r0, sl, r3, lsl #14
    c6b8:	16be2900 	ldrtne	r2, [lr], r0, lsl #18
    c6bc:	65020000 	strvs	r0, [r2, #-0]
    c6c0:	00b20c04 	adcseq	r0, r2, r4, lsl #24
    c6c4:	2a000000 	bcs	c6cc <_Min_Heap_Size+0xbecc>
    c6c8:	02170101 	andseq	r0, r7, #1073741824	; 0x40000000
    c6cc:	020d0000 	andeq	r0, sp, #0
    c6d0:	00080000 	andeq	r0, r8, r0
    c6d4:	0001012b 	andeq	r0, r1, fp, lsr #2
    c6d8:	00000000 	andeq	r0, r0, r0
    c6dc:	07000000 	streq	r0, [r0, -r0]
    c6e0:	012b05c8 	smlawteq	fp, r8, r5, r0
    c6e4:	00267701 	eoreq	r7, r6, r1, lsl #14
    c6e8:	00267700 	eoreq	r7, r6, r0, lsl #14
    c6ec:	11a70100 			; <UNDEFINED> instruction: 0x11a70100
    c6f0:	b601012b 	strlt	r0, [r1], -fp, lsr #2
    c6f4:	b6000024 	strlt	r0, [r0], -r4, lsr #32
    c6f8:	01000024 	tsteq	r0, r4, lsr #32
    c6fc:	fa00119f 	blx	10d80 <_Min_Heap_Size+0x10580>
    c700:	02000004 	andeq	r0, r0, #4
    c704:	001cd400 	andseq	sp, ip, r0, lsl #8
    c708:	19010400 	stmdbne	r1, {sl}
    c70c:	0c000005 	stceq	0, cr0, [r0], {5}
    c710:	000026e8 	andeq	r2, r0, r8, ror #13
    c714:	00000822 	andeq	r0, r0, r2, lsr #16
    c718:	000006f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
    c724:	00008ffa 	strdeq	r8, [r0], -sl
    c728:	0d060102 	stfeqs	f0, [r6, #-8]
    c72c:	03000005 	movweq	r0, #5
    c730:	00000072 	andeq	r0, r0, r2, ror r0
    c734:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    c738:	02000000 	andeq	r0, r0, #0
    c73c:	050b0801 	streq	r0, [fp, #-2049]	; 0xfffff7ff
    c740:	02020000 	andeq	r0, r2, #0
    c744:	0005d305 	andeq	sp, r5, r5, lsl #6
    c748:	07020200 	streq	r0, [r2, -r0, lsl #4]
    c74c:	00000337 	andeq	r0, r0, r7, lsr r3
    c750:	b2050402 	andlt	r0, r5, #33554432	; 0x2000000
    c754:	03000002 	movweq	r0, #2
    c758:	00000291 	muleq	r0, r1, r2
    c75c:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    c760:	02000000 	andeq	r0, r0, #0
    c764:	00bf0704 	adcseq	r0, pc, r4, lsl #14
    c768:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c76c:	0002ad05 	andeq	sl, r2, r5, lsl #26
    c770:	07080200 	streq	r0, [r8, -r0, lsl #4]
    c774:	000000ba 	strheq	r0, [r0], -sl
    c778:	69050404 	stmdbvs	r5, {r2, sl}
    c77c:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    c780:	00000079 	andeq	r0, r0, r9, ror r0
    c784:	c4070402 	strgt	r0, [r7], #-1026	; 0xfffffbfe
    c788:	02000000 	andeq	r0, r0, #0
    c78c:	06640408 	strbteq	r0, [r4], -r8, lsl #8
    c790:	01020000 	mrseq	r0, (UNDEF: 2)
    c794:	00051408 	andeq	r1, r5, r8, lsl #8
    c798:	00740300 	rsbseq	r0, r4, r0, lsl #6
    c79c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    c7a0:	00003013 	andeq	r3, r0, r3, lsl r0
    c7a4:	009a0500 	addseq	r0, sl, r0, lsl #10
    c7a8:	93030000 	movwls	r0, #12288	; 0x3000
    c7ac:	03000002 	movweq	r0, #2
    c7b0:	00581430 	subseq	r1, r8, r0, lsr r4
    c7b4:	ab050000 	blge	14c7bc <_Min_Heap_Size+0x14bfbc>
    c7b8:	06000000 	streq	r0, [r0], -r0
    c7bc:	000000b7 	strheq	r0, [r0], -r7
    c7c0:	bd048c07 	stclt	12, cr8, [r4, #-28]	; 0xffffffe4
    c7c4:	021d0901 	andseq	r0, sp, #16384	; 0x4000
    c7c8:	07080000 	streq	r0, [r8, -r0]
    c7cc:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    c7d0:	bc1201bf 	ldflts	f0, [r2], {191}	; 0xbf
    c7d4:	02000000 	andeq	r0, r0, #0
    c7d8:	ee080023 	cdp	0, 0, cr0, cr8, cr3, {1}
    c7dc:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    c7e0:	b71201c0 	ldrlt	r0, [r2, -r0, asr #3]
    c7e4:	02000000 	andeq	r0, r0, #0
    c7e8:	d8080423 	stmdale	r8, {r0, r1, r5, sl}
    c7ec:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    c7f0:	b71201c1 	ldrlt	r0, [r2, -r1, asr #3]
    c7f4:	02000000 	andeq	r0, r0, #0
    c7f8:	f3080823 	vsub.i8	d0, d8, d19
    c7fc:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    c800:	b71201c2 	ldrlt	r0, [r2, -r2, asr #3]
    c804:	02000000 	andeq	r0, r0, #0
    c808:	53090c23 	movwpl	r0, #39971	; 0x9c23
    c80c:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    c810:	b71201c3 	ldrlt	r0, [r2, -r3, asr #3]
    c814:	02000000 	andeq	r0, r0, #0
    c818:	43091023 	movwmi	r1, #36899	; 0x9023
    c81c:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    c820:	b71201c4 	ldrlt	r0, [r2, -r4, asr #3]
    c824:	02000000 	andeq	r0, r0, #0
    c828:	53091423 	movwpl	r1, #37923	; 0x9423
    c82c:	04005048 	streq	r5, [r0], #-72	; 0xffffffb8
    c830:	2d1201c5 	ldfcss	f0, [r2, #-788]	; 0xfffffcec
    c834:	02000002 	andeq	r0, r0, #2
    c838:	1e081823 	cdpne	8, 0, cr1, cr8, cr3, {1}
    c83c:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    c840:	b71201c6 	ldrlt	r0, [r2, -r6, asr #3]
    c844:	02000000 	andeq	r0, r0, #0
    c848:	90082423 	andls	r2, r8, r3, lsr #8
    c84c:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    c850:	b71201c7 	ldrlt	r0, [r2, -r7, asr #3]
    c854:	02000000 	andeq	r0, r0, #0
    c858:	a8082823 	stmdage	r8, {r0, r1, r5, fp, sp}
    c85c:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    c860:	b71201c8 	ldrlt	r0, [r2, -r8, asr #3]
    c864:	02000000 	andeq	r0, r0, #0
    c868:	f9082c23 			; <UNDEFINED> instruction: 0xf9082c23
    c86c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    c870:	b71201c9 	ldrlt	r0, [r2, -r9, asr #3]
    c874:	02000000 	andeq	r0, r0, #0
    c878:	fe083023 	cdp2	0, 0, cr3, cr8, cr3, {1}
    c87c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    c880:	b71201ca 	ldrlt	r0, [r2, -sl, asr #3]
    c884:	02000000 	andeq	r0, r0, #0
    c888:	19083423 	stmdbne	r8, {r0, r1, r5, sl, ip, sp}
    c88c:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    c890:	b71201cb 	ldrlt	r0, [r2, -fp, asr #3]
    c894:	02000000 	andeq	r0, r0, #0
    c898:	7d083823 	stcvc	8, cr3, [r8, #-140]	; 0xffffff74
    c89c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    c8a0:	b71201cc 	ldrlt	r0, [r2, -ip, asr #3]
    c8a4:	02000000 	andeq	r0, r0, #0
    c8a8:	50093c23 	andpl	r3, r9, r3, lsr #24
    c8ac:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    c8b0:	471201cd 	ldrmi	r0, [r2, -sp, asr #3]
    c8b4:	02000002 	andeq	r0, r0, #2
    c8b8:	44094023 	strmi	r4, [r9], #-35	; 0xffffffdd
    c8bc:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    c8c0:	bc1201ce 	ldflts	f0, [r2], {206}	; 0xce
    c8c4:	02000000 	andeq	r0, r0, #0
    c8c8:	41094823 	tstmi	r9, r3, lsr #16
    c8cc:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    c8d0:	bc1201cf 	ldflts	f0, [r2], {207}	; 0xcf
    c8d4:	02000000 	andeq	r0, r0, #0
    c8d8:	0d084c23 	stceq	12, cr4, [r8, #-140]	; 0xffffff74
    c8dc:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    c8e0:	611201d0 			; <UNDEFINED> instruction: 0x611201d0
    c8e4:	02000002 	andeq	r0, r0, #2
    c8e8:	66085023 	strvs	r5, [r8], -r3, lsr #32
    c8ec:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    c8f0:	7b1201d1 	blvc	48d03c <_Min_Heap_Size+0x48c83c>
    c8f4:	02000002 	andeq	r0, r0, #2
    c8f8:	a6086023 	strge	r6, [r8], -r3, lsr #32
    c8fc:	04000004 	streq	r0, [r0], #-4
    c900:	801201d2 			; <UNDEFINED> instruction: 0x801201d2
    c904:	02000002 	andeq	r0, r0, #2
    c908:	a2087423 	andge	r7, r8, #587202560	; 0x23000000
    c90c:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    c910:	b71201d3 			; <UNDEFINED> instruction: 0xb71201d3
    c914:	03000000 	movweq	r0, #0
    c918:	00018823 	andeq	r8, r1, r3, lsr #16
    c91c:	0000a60a 	andeq	sl, r0, sl, lsl #12
    c920:	00022d00 	andeq	r2, r2, r0, lsl #26
    c924:	00850b00 	addeq	r0, r5, r0, lsl #22
    c928:	000b0000 	andeq	r0, fp, r0
    c92c:	00021d05 	andeq	r1, r2, r5, lsl #26
    c930:	00bc0a00 	adcseq	r0, ip, r0, lsl #20
    c934:	02420000 	subeq	r0, r2, #0
    c938:	850b0000 	strhi	r0, [fp, #-0]
    c93c:	01000000 	mrseq	r0, (UNDEF: 0)
    c940:	02320600 	eorseq	r0, r2, #0, 12
    c944:	42050000 	andmi	r0, r5, #0
    c948:	0a000002 	beq	c958 <_Min_Heap_Size+0xc158>
    c94c:	000000bc 	strheq	r0, [r0], -ip
    c950:	0000025c 	andeq	r0, r0, ip, asr r2
    c954:	0000850b 	andeq	r8, r0, fp, lsl #10
    c958:	06000300 	streq	r0, [r0], -r0, lsl #6
    c95c:	0000024c 	andeq	r0, r0, ip, asr #4
    c960:	00025c05 	andeq	r5, r2, r5, lsl #24
    c964:	00bc0a00 	adcseq	r0, ip, r0, lsl #20
    c968:	02760000 	rsbseq	r0, r6, #0
    c96c:	850b0000 	strhi	r0, [fp, #-0]
    c970:	04000000 	streq	r0, [r0], #-0
    c974:	02660600 	rsbeq	r0, r6, #0, 12
    c978:	76050000 	strvc	r0, [r5], -r0
    c97c:	0a000002 	beq	c98c <_Min_Heap_Size+0xc18c>
    c980:	000000ab 	andeq	r0, r0, fp, lsr #1
    c984:	00000290 	muleq	r0, r0, r2
    c988:	0000850b 	andeq	r8, r0, fp, lsl #10
    c98c:	0c000400 	cfstrseq	mvf0, [r0], {-0}
    c990:	00001e82 	andeq	r1, r0, r2, lsl #29
    c994:	0301d404 	movweq	sp, #5124	; 0x1404
    c998:	000000c1 	andeq	r0, r0, r1, asr #1
    c99c:	003b010d 	eorseq	r0, fp, sp, lsl #2
    c9a0:	36010000 	strcc	r0, [r1], -r0
    c9a4:	1a500106 	bne	140cdc4 <_Min_Heap_Size+0x140c5c4>
    c9a8:	1a9c0800 	bne	fe70e9b0 <_estack+0xde70d770>
    c9ac:	81690800 	cmnhi	r9, r0, lsl #16
    c9b0:	24010000 	strcs	r0, [r1], #-0
    c9b4:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    c9b8:	000010dd 	ldrdeq	r1, [r0], -sp
    c9bc:	24133701 	ldrcs	r3, [r3], #-1793	; 0xfffff8ff
    c9c0:	a7000003 	strge	r0, [r0, -r3]
    c9c4:	a1000081 	smlabbge	r0, r1, r0, r0
    c9c8:	0f000081 	svceq	0x00000081
    c9cc:	00001ebb 			; <UNDEFINED> instruction: 0x00001ebb
    c9d0:	80123801 	andshi	r3, r2, r1, lsl #16
    c9d4:	02000000 	andeq	r0, r0, #0
    c9d8:	72106c91 	andsvc	r6, r0, #37120	; 0x9100
    c9dc:	e208001a 	and	r0, r8, #26
    c9e0:	f5000004 			; <UNDEFINED> instruction: 0xf5000004
    c9e4:	11000002 	tstne	r0, r2
    c9e8:	75025001 	strvc	r5, [r2, #-1]
    c9ec:	51011100 	mrspl	r1, (UNDEF: 17)
    c9f0:	00007402 	andeq	r7, r0, r2, lsl #8
    c9f4:	001a8010 	andseq	r8, sl, r0, lsl r0
    c9f8:	0004e208 	andeq	lr, r4, r8, lsl #4
    c9fc:	00030e00 	andeq	r0, r3, r0, lsl #28
    ca00:	50011100 	andpl	r1, r1, r0, lsl #2
    ca04:	11007502 	tstne	r0, r2, lsl #10
    ca08:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
    ca0c:	1a901200 	bne	fe411214 <_estack+0xde40ffd4>
    ca10:	04e20800 	strbteq	r0, [r2], #2048	; 0x800
    ca14:	01110000 	tsteq	r1, r0
    ca18:	00750250 	rsbseq	r0, r5, r0, asr r2
    ca1c:	01510111 	cmpeq	r1, r1, lsl r1
    ca20:	13000033 	movwne	r0, #51	; 0x33
    ca24:	00008004 	andeq	r8, r0, r4
    ca28:	d4010d00 	strle	r0, [r1], #-3328	; 0xfffff300
    ca2c:	01000026 	tsteq	r0, r6, lsr #32
    ca30:	0001062e 	andeq	r0, r1, lr, lsr #12
    ca34:	00000000 	andeq	r0, r0, r0
    ca38:	d3000000 	movwle	r0, #0
    ca3c:	01000081 	smlabbeq	r0, r1, r0, r0
    ca40:	0000037f 	andeq	r0, r0, pc, ror r3
    ca44:	01006114 	tsteq	r0, r4, lsl r1
    ca48:	0079092f 	rsbseq	r0, r9, pc, lsr #18
    ca4c:	14000000 	strne	r0, [r0], #-0
    ca50:	2f010062 	svccs	0x00010062
    ca54:	00007910 	andeq	r7, r0, r0, lsl r9
    ca58:	63140000 	tstvs	r4, #0
    ca5c:	172f0100 	strne	r0, [pc, -r0, lsl #2]!
    ca60:	00000079 	andeq	r0, r0, r9, ror r0
    ca64:	00001200 	andeq	r1, r0, r0, lsl #4
    ca68:	04e20000 	strbteq	r0, [r2], #0
    ca6c:	01110000 	tsteq	r1, r0
    ca70:	00030550 	andeq	r0, r3, r0, asr r5
    ca74:	11000000 	mrsne	r0, (UNDEF: 0)
    ca78:	30015101 	andcc	r5, r1, r1, lsl #2
    ca7c:	01150000 	tsteq	r5, r0
    ca80:	00002677 	andeq	r2, r0, r7, ror r6
    ca84:	01062601 	tsteq	r6, r1, lsl #12
    ca88:	000003b2 			; <UNDEFINED> instruction: 0x000003b2
    ca8c:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
    ca90:	08001a4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, fp, ip}
    ca94:	01007d02 	tsteq	r0, r2, lsl #26
    ca98:	000003b2 			; <UNDEFINED> instruction: 0x000003b2
    ca9c:	0024c116 	eoreq	ip, r4, r6, lsl r1
    caa0:	28260100 	stmdacs	r6!, {r8}
    caa4:	00000085 	andeq	r0, r0, r5, lsl #1
    caa8:	000081fb 	strdeq	r8, [r0], -fp
    caac:	000081f3 	strdeq	r8, [r0], -r3
    cab0:	02010200 	andeq	r0, r1, #0, 4
    cab4:	00002629 	andeq	r2, r0, r9, lsr #12
    cab8:	24b6010d 	ldrtcs	r0, [r6], #269	; 0x10d
    cabc:	0f010000 	svceq	0x00010000
    cac0:	19b80106 	ldmibne	r8!, {r1, r2, r8}
    cac4:	1a400800 	bne	100eacc <_Min_Heap_Size+0x100e2cc>
    cac8:	82350800 	eorshi	r0, r5, #0, 16
    cacc:	e2010000 	and	r0, r1, #0
    cad0:	16000004 	strne	r0, [r0], -r4
    cad4:	000024c1 	andeq	r2, r0, r1, asr #9
    cad8:	85290f01 	strhi	r0, [r9, #-3841]!	; 0xfffff0ff
    cadc:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    cae0:	55000082 	strpl	r0, [r0, #-130]	; 0xffffff7e
    cae4:	10000082 	andne	r0, r0, r2, lsl #1
    cae8:	080019c2 	stmdaeq	r0, {r1, r6, r7, r8, fp, ip}
    caec:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    caf0:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    caf4:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    caf8:	002f9003 	eoreq	r9, pc, r3
    cafc:	c8100008 	ldmdagt	r0, {r3}
    cb00:	e2080019 	and	r0, r8, #25
    cb04:	16000004 	strne	r0, [r0], -r4
    cb08:	11000004 	tstne	r0, r4
    cb0c:	03055001 	movweq	r5, #20481	; 0x5001
    cb10:	08002f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp, sp}
    cb14:	19d41000 	ldmibne	r4, {ip}^
    cb18:	04f00800 	ldrbteq	r0, [r0], #2048	; 0x800
    cb1c:	042d0000 	strteq	r0, [sp], #-0
    cb20:	01110000 	tsteq	r1, r0
    cb24:	b4030550 	strlt	r0, [r3], #-1360	; 0xfffffab0
    cb28:	0008002f 	andeq	r0, r8, pc, lsr #32
    cb2c:	0019da10 	andseq	sp, r9, r0, lsl sl
    cb30:	0004e208 	andeq	lr, r4, r8, lsl #4
    cb34:	00044400 	andeq	r4, r4, r0, lsl #8
    cb38:	50011100 	andpl	r1, r1, r0, lsl #2
    cb3c:	2fec0305 	svccs	0x00ec0305
    cb40:	10000800 	andne	r0, r0, r0, lsl #16
    cb44:	080019e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, fp, ip}
    cb48:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cb4c:	0000045b 	andeq	r0, r0, fp, asr r4
    cb50:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    cb54:	00300c03 	eorseq	r0, r0, r3, lsl #24
    cb58:	ec100008 	ldc	0, cr0, [r0], {8}
    cb5c:	e2080019 	and	r0, r8, #25
    cb60:	72000004 	andvc	r0, r0, #4
    cb64:	11000004 	tstne	r0, r4
    cb68:	03055001 	movweq	r5, #20481	; 0x5001
    cb6c:	08003044 	stmdaeq	r0, {r2, r6, ip, sp}
    cb70:	19f81000 	ldmibne	r8!, {ip}^
    cb74:	04f00800 	ldrbteq	r0, [r0], #2048	; 0x800
    cb78:	04890000 	streq	r0, [r9], #0
    cb7c:	01110000 	tsteq	r1, r0
    cb80:	64030550 	strvs	r0, [r3], #-1360	; 0xfffffab0
    cb84:	00080030 	andeq	r0, r8, r0, lsr r0
    cb88:	0019fe10 	andseq	pc, r9, r0, lsl lr	; <UNPREDICTABLE>
    cb8c:	0004f008 	andeq	pc, r4, r8
    cb90:	0004a000 	andeq	sl, r4, r0
    cb94:	50011100 	andpl	r1, r1, r0, lsl #2
    cb98:	2f900305 	svccs	0x00900305
    cb9c:	10000800 	andne	r0, r0, r0, lsl #16
    cba0:	08001a06 	stmdaeq	r0, {r1, r2, r9, fp, ip}
    cba4:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    cba8:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
    cbac:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    cbb0:	002fd003 	eoreq	sp, pc, r3
    cbb4:	0e100008 	cdpeq	0, 1, cr0, cr0, cr8, {0}
    cbb8:	f008001a 			; <UNDEFINED> instruction: 0xf008001a
    cbbc:	ce000004 	cdpgt	0, 0, cr0, cr0, cr4, {0}
    cbc0:	11000004 	tstne	r0, r4
    cbc4:	03055001 	movweq	r5, #20481	; 0x5001
    cbc8:	08003028 	stmdaeq	r0, {r3, r5, ip, sp}
    cbcc:	1a161200 	bne	5913d4 <_Min_Heap_Size+0x590bd4>
    cbd0:	04f00800 	ldrbteq	r0, [r0], #2048	; 0x800
    cbd4:	01110000 	tsteq	r1, r0
    cbd8:	80030550 	andhi	r0, r3, r0, asr r5
    cbdc:	00080030 	andeq	r0, r8, r0, lsr r0
    cbe0:	01011700 	tsteq	r1, r0, lsl #14
	...
    cbec:	1805c805 	stmdane	r5, {r0, r2, fp, lr, pc}
    cbf0:	02170101 	andseq	r0, r7, #1073741824	; 0x40000000
    cbf4:	020d0000 	andeq	r0, sp, #0
    cbf8:	00060000 	andeq	r0, r6, r0
    cbfc:	00018100 	andeq	r8, r1, r0, lsl #2
    cc00:	46000200 	strmi	r0, [r0], -r0, lsl #4
    cc04:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    cc08:	00051901 	andeq	r1, r5, r1, lsl #18
    cc0c:	27400c00 	strbcs	r0, [r0, -r0, lsl #24]
    cc10:	08220000 	stmdaeq	r2!, {}	; <UNPREDICTABLE>
    cc14:	07180000 	ldreq	r0, [r8, -r0]
	...
    cc20:	92960000 	addsls	r0, r6, #0
    cc24:	04020000 	streq	r0, [r2], #-0
    cc28:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    cc2c:	27360300 	ldrcs	r0, [r6, -r0, lsl #6]!
    cc30:	8f020000 	svchi	0x00020000
    cc34:	0000291a 	andeq	r2, r0, sl, lsl r9
    cc38:	07040400 	streq	r0, [r4, -r0, lsl #8]
    cc3c:	000000c4 	andeq	r0, r0, r4, asr #1
    cc40:	ad050804 	stcge	8, cr0, [r5, #-16]
    cc44:	04000002 	streq	r0, [r0], #-2
    cc48:	06640408 	strbteq	r0, [r4], -r8, lsl #8
    cc4c:	01040000 	mrseq	r0, (UNDEF: 4)
    cc50:	00050d06 	andeq	r0, r5, r6, lsl #26
    cc54:	00720300 	rsbseq	r0, r2, r0, lsl #6
    cc58:	2b030000 	blcs	ccc60 <_Min_Heap_Size+0xcc460>
    cc5c:	00006418 	andeq	r6, r0, r8, lsl r4
    cc60:	08010400 	stmdaeq	r1, {sl}
    cc64:	0000050b 	andeq	r0, r0, fp, lsl #10
    cc68:	d3050204 	movwle	r0, #20996	; 0x5204
    cc6c:	04000005 	streq	r0, [r0], #-5
    cc70:	03370702 	teqeq	r7, #524288	; 0x80000
    cc74:	04040000 	streq	r0, [r4], #-0
    cc78:	0002b205 	andeq	fp, r2, r5, lsl #4
    cc7c:	02910300 	addseq	r0, r1, #0, 6
    cc80:	4f030000 	svcmi	0x00030000
    cc84:	00008c19 	andeq	r8, r0, r9, lsl ip
    cc88:	07040400 	streq	r0, [r4, -r0, lsl #8]
    cc8c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    cc90:	ba070804 	blt	1ceca8 <_Min_Heap_Size+0x1ce4a8>
    cc94:	05000000 	streq	r0, [r0, #-0]
    cc98:	08010404 	stmdaeq	r1, {r2, sl}
    cc9c:	00000514 	andeq	r0, r0, r4, lsl r5
    cca0:	00007403 	andeq	r7, r0, r3, lsl #8
    cca4:	13180400 	tstne	r8, #0, 8
    cca8:	00000058 	andeq	r0, r0, r8, asr r0
    ccac:	0000a306 	andeq	sl, r0, r6, lsl #6
    ccb0:	02930300 	addseq	r0, r3, #0, 6
    ccb4:	30040000 	andcc	r0, r4, r0
    ccb8:	00008014 	andeq	r8, r0, r4, lsl r0
    ccbc:	00b40600 	adcseq	r0, r4, r0, lsl #12
    ccc0:	6c070000 	stcvs	0, cr0, [r7], {-0}
    ccc4:	01000027 	tsteq	r0, r7, lsr #32
    ccc8:	00d7111e 	sbcseq	r1, r7, lr, lsl r1
    cccc:	03050000 	movweq	r0, #20480	; 0x5000
    ccd0:	20000228 	andcs	r0, r0, r8, lsr #4
    ccd4:	00a30408 	adceq	r0, r3, r8, lsl #8
    ccd8:	01090000 	mrseq	r0, (UNDEF: 9)
    ccdc:	00002784 	andeq	r2, r0, r4, lsl #15
    cce0:	01073501 	tsteq	r7, r1, lsl #10
    cce4:	0000009a 	muleq	r0, sl, r0
    cce8:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
    ccec:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
    ccf0:	00008277 	andeq	r8, r0, r7, ror r2
    ccf4:	00017001 	andeq	r7, r1, r1
    ccf8:	27670a00 	strbcs	r0, [r7, -r0, lsl #20]!
    ccfc:	35010000 	strcc	r0, [r1, #-0]
    cd00:	00003017 	andeq	r3, r0, r7, lsl r0
    cd04:	0082a100 	addeq	sl, r2, r0, lsl #2
    cd08:	00829700 	addeq	r9, r2, r0, lsl #14
    cd0c:	27770b00 	ldrbcs	r0, [r7, -r0, lsl #22]!
    cd10:	37010000 	strcc	r0, [r1, -r0]
    cd14:	0000a312 	andeq	sl, r0, r2, lsl r3
    cd18:	0b010100 	bleq	4d120 <_Min_Heap_Size+0x4c920>
    cd1c:	00002528 	andeq	r2, r0, r8, lsr #10
    cd20:	a3123801 	tstge	r2, #65536	; 0x10000
    cd24:	01000000 	mrseq	r0, (UNDEF: 0)
    cd28:	27570b01 	ldrbcs	r0, [r7, -r1, lsl #22]
    cd2c:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    cd30:	0000b413 	andeq	fp, r0, r3, lsl r4
    cd34:	0c010100 	stfeqs	f0, [r1], {-0}
    cd38:	0000278a 	andeq	r2, r0, sl, lsl #15
    cd3c:	c0123a01 	andsgt	r3, r2, r1, lsl #20
    cd40:	0c000000 	stceq	0, cr0, [r0], {-0}
    cd44:	0000272d 	andeq	r2, r0, sp, lsr #14
    cd48:	70123b01 	andsvc	r3, r2, r1, lsl #22
    cd4c:	0d000001 	stceq	0, cr0, [r0, #-4]
    cd50:	0000271f 	andeq	r2, r0, pc, lsl r7
    cd54:	d70c3c01 	strle	r3, [ip, -r1, lsl #24]
    cd58:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    cd5c:	e6000082 	str	r0, [r0], -r2, lsl #1
    cd60:	0e000082 	cdpeq	0, 0, cr0, cr0, cr2, {4}
    cd64:	08001ac8 	stmdaeq	r0, {r3, r6, r7, r9, fp, ip}
    cd68:	00000176 	andeq	r0, r0, r6, ror r1
    cd6c:	af040800 	svcge	0x00040800
    cd70:	0f000000 	svceq	0x00000000
    cd74:	277c0101 	ldrbcs	r0, [ip, -r1, lsl #2]!
    cd78:	277c0000 	ldrbcs	r0, [ip, -r0]!
    cd7c:	0f050000 	svceq	0x00050000
    cd80:	0831000d 	ldmdaeq	r1!, {r0, r2, r3}
    cd84:	00020000 	andeq	r0, r2, r0
    cd88:	00001f30 	andeq	r1, r0, r0, lsr pc
    cd8c:	05190104 	ldreq	r0, [r9, #-260]	; 0xfffffefc
    cd90:	510c0000 	mrspl	r0, (UNDEF: 12)
    cd94:	22000028 	andcs	r0, r0, #40	; 0x28
    cd98:	28000008 	stmdacs	r0, {r3}
    cd9c:	00000007 	andeq	r0, r0, r7
    cda0:	00000000 	andeq	r0, r0, r0
    cda4:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    cda8:	02000094 	andeq	r0, r0, #148	; 0x94
    cdac:	050d0601 	streq	r0, [sp, #-1537]	; 0xfffff9ff
    cdb0:	01020000 	mrseq	r0, (UNDEF: 2)
    cdb4:	00050b08 	andeq	r0, r5, r8, lsl #22
    cdb8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    cdbc:	000005d3 	ldrdeq	r0, [r0], -r3
    cdc0:	37070202 	strcc	r0, [r7, -r2, lsl #4]
    cdc4:	02000003 	andeq	r0, r0, #3
    cdc8:	02b20504 	adcseq	r0, r2, #4, 10	; 0x1000000
    cdcc:	91030000 	mrsls	r0, (UNDEF: 3)
    cdd0:	02000002 	andeq	r0, r0, #2
    cdd4:	0058194f 	subseq	r1, r8, pc, asr #18
    cdd8:	04020000 	streq	r0, [r2], #-0
    cddc:	0000bf07 	andeq	fp, r0, r7, lsl #30
    cde0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    cde4:	000002ad 	andeq	r0, r0, sp, lsr #5
    cde8:	ba070802 	blt	1cedf8 <_Min_Heap_Size+0x1ce5f8>
    cdec:	03000000 	movweq	r0, #0
    cdf0:	0000280b 	andeq	r2, r0, fp, lsl #16
    cdf4:	5f1ec802 	svcpl	0x001ec802
    cdf8:	04000000 	streq	r0, [r0], #-0
    cdfc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    ce00:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    ce04:	0000c407 	andeq	ip, r0, r7, lsl #8
    ce08:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    ce0c:	00000664 	andeq	r0, r0, r4, ror #12
    ce10:	00298303 	eoreq	r8, r9, r3, lsl #6
    ce14:	0e1e0300 	cdpeq	3, 1, cr0, cr14, cr0, {0}
    ce18:	00000045 	andeq	r0, r0, r5, asr #32
    ce1c:	0028c703 	eoreq	ip, r8, r3, lsl #14
    ce20:	0e220300 	cdpeq	3, 2, cr0, cr2, cr0, {0}
    ce24:	00000045 	andeq	r0, r0, r5, asr #32
    ce28:	00294c03 	eoreq	r4, r9, r3, lsl #24
    ce2c:	0e2e0300 	cdpeq	3, 2, cr0, cr14, cr0, {0}
    ce30:	00000045 	andeq	r0, r0, r5, asr #32
    ce34:	00294303 	eoreq	r4, r9, r3, lsl #6
    ce38:	0f380300 	svceq	0x00380300
    ce3c:	00000037 	andeq	r0, r0, r7, lsr r0
    ce40:	00296103 	eoreq	r6, r9, r3, lsl #2
    ce44:	183c0300 	ldmdane	ip!, {r8, r9}
    ce48:	0000003e 	andeq	r0, r0, lr, lsr r0
    ce4c:	00298e03 	eoreq	r8, r9, r3, lsl #28
    ce50:	183f0300 	ldmdane	pc!, {r8, r9}	; <UNPREDICTABLE>
    ce54:	0000003e 	andeq	r0, r0, lr, lsr r0
    ce58:	00290203 	eoreq	r0, r9, r3, lsl #4
    ce5c:	184b0300 	stmdane	fp, {r8, r9}^
    ce60:	0000003e 	andeq	r0, r0, lr, lsr r0
    ce64:	00284803 	eoreq	r4, r8, r3, lsl #16
    ce68:	145a0300 	ldrbne	r0, [sl], #-768	; 0xfffffd00
    ce6c:	0000004c 	andeq	r0, r0, ip, asr #32
    ce70:	00294b03 	eoreq	r4, r9, r3, lsl #22
    ce74:	10660300 	rsbne	r0, r6, r0, lsl #6
    ce78:	000000a6 	andeq	r0, r0, r6, lsr #1
    ce7c:	00287c03 	eoreq	r7, r8, r3, lsl #24
    ce80:	18d10300 	ldmne	r1, {r8, r9}^
    ce84:	0000003e 	andeq	r0, r0, lr, lsr r0
    ce88:	010c0405 	tsteq	ip, r5, lsl #8
    ce8c:	01020000 	mrseq	r0, (UNDEF: 2)
    ce90:	00051408 	andeq	r1, r5, r8, lsl #8
    ce94:	28040300 	stmdacs	r4, {r8, r9}
    ce98:	2a040000 	bcs	10cea0 <_Min_Heap_Size+0x10c6a0>
    ce9c:	00006d12 	andeq	r6, r0, r2, lsl sp
    cea0:	29580600 	ldmdbcs	r8, {r9, sl}^
    cea4:	05100000 	ldreq	r0, [r0, #-0]
    cea8:	014b082f 	cmpeq	fp, pc, lsr #16
    ceac:	c8070000 	stmdagt	r7, {}	; <UNPREDICTABLE>
    ceb0:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    ceb4:	01130930 	tsteq	r3, r0, lsr r9
    ceb8:	23020000 	movwcs	r0, #8192	; 0x2000
    cebc:	28ab0700 	stmiacs	fp!, {r8, r9, sl}
    cec0:	31050000 	mrscc	r0, (UNDEF: 5)
    cec4:	00004507 	andeq	r4, r0, r7, lsl #10
    cec8:	08230200 	stmdaeq	r3!, {r9}
    cecc:	29850300 	stmibcs	r5, {r8, r9}
    ced0:	61060000 	mrsvs	r0, (UNDEF: 6)
    ced4:	00008e14 	andeq	r8, r0, r4, lsl lr
    ced8:	28c90300 	stmiacs	r9, {r8, r9}^
    cedc:	66060000 	strvs	r0, [r6], -r0
    cee0:	00009a15 	andeq	r9, r0, r5, lsl sl
    cee4:	279e0300 	ldrcs	r0, [lr, r0, lsl #6]
    cee8:	6b060000 	blvs	18cef0 <_Min_Heap_Size+0x18c6f0>
    ceec:	00005813 	andeq	r5, r0, r3, lsl r8
    cef0:	29040300 	stmdbcs	r4, {r8, r9}
    cef4:	8b060000 	blhi	18cefc <_Min_Heap_Size+0x18c6fc>
    cef8:	0000d612 	andeq	sp, r0, r2, lsl r6
    cefc:	294d0300 	stmdbcs	sp, {r8, r9}^
    cf00:	9d060000 	stcls	0, cr0, [r6, #-0]
    cf04:	0000ee12 	andeq	lr, r0, r2, lsl lr
    cf08:	29450300 	stmdbcs	r5, {r8, r9}^
    cf0c:	a1060000 	mrsge	r0, (UNDEF: 6)
    cf10:	0000b212 	andeq	fp, r0, r2, lsl r2
    cf14:	29630300 	stmdbcs	r3!, {r8, r9}^
    cf18:	a5060000 	strge	r0, [r6, #-0]
    cf1c:	0000be12 	andeq	fp, r0, r2, lsl lr
    cf20:	29900300 	ldmibcs	r0, {r8, r9}
    cf24:	a9060000 	stmdbge	r6, {}	; <UNPREDICTABLE>
    cf28:	0000ca12 	andeq	ip, r0, r2, lsl sl
    cf2c:	284a0300 	stmdacs	sl, {r8, r9}^
    cf30:	bd060000 	stclt	0, cr0, [r6, #-0]
    cf34:	0000e212 	andeq	lr, r0, r2, lsl r2
    cf38:	287e0300 	ldmdacs	lr!, {r8, r9}^
    cf3c:	c2060000 	andgt	r0, r6, #0
    cf40:	0000fa13 	andeq	pc, r0, r3, lsl sl	; <UNPREDICTABLE>
    cf44:	27d00600 	ldrbcs	r0, [r0, r0, lsl #12]
    cf48:	07580000 	ldrbeq	r0, [r8, -r0]
    cf4c:	02a3081b 	adceq	r0, r3, #1769472	; 0x1b0000
    cf50:	f0070000 			; <UNDEFINED> instruction: 0xf0070000
    cf54:	07000027 	streq	r0, [r0, -r7, lsr #32]
    cf58:	01870a1d 	orreq	r0, r7, sp, lsl sl
    cf5c:	23020000 	movwcs	r0, #8192	; 0x2000
    cf60:	28910700 	ldmcs	r1, {r8, r9, sl}
    cf64:	1e070000 	cdpne	0, 0, cr0, cr7, cr0, {0}
    cf68:	00016f0a 	andeq	r6, r1, sl, lsl #30
    cf6c:	02230200 	eoreq	r0, r3, #0, 4
    cf70:	00296907 	eoreq	r6, r9, r7, lsl #18
    cf74:	0a1f0700 	beq	7ceb7c <_Min_Heap_Size+0x7ce37c>
    cf78:	000001ab 	andeq	r0, r0, fp, lsr #3
    cf7c:	07042302 	streq	r2, [r4, -r2, lsl #6]
    cf80:	000028b3 			; <UNDEFINED> instruction: 0x000028b3
    cf84:	b70b2007 	strlt	r2, [fp, -r7]
    cf88:	02000001 	andeq	r0, r0, #1
    cf8c:	14070823 	strne	r0, [r7], #-2083	; 0xfffff7dd
    cf90:	07000029 	streq	r0, [r0, -r9, lsr #32]
    cf94:	01930a21 	orrseq	r0, r3, r1, lsr #20
    cf98:	23020000 	movwcs	r0, #8192	; 0x2000
    cf9c:	2841070a 	stmdacs	r1, {r1, r3, r8, r9, sl}^
    cfa0:	22070000 	andcs	r0, r7, #0
    cfa4:	00019f0a 	andeq	r9, r1, sl, lsl #30
    cfa8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    cfac:	00279607 	eoreq	r9, r7, r7, lsl #12
    cfb0:	0a230700 	beq	8cebb8 <_Min_Heap_Size+0x8ce3b8>
    cfb4:	00000187 	andeq	r0, r0, r7, lsl #3
    cfb8:	070e2302 	streq	r2, [lr, -r2, lsl #6]
    cfbc:	0000291b 	andeq	r2, r0, fp, lsl r9
    cfc0:	7b0a2407 	blvc	295fe4 <_Min_Heap_Size+0x2957e4>
    cfc4:	02000001 	andeq	r0, r0, #1
    cfc8:	d3071023 	movwle	r1, #28707	; 0x7023
    cfcc:	07000028 	streq	r0, [r0, -r8, lsr #32]
    cfd0:	011f132a 	tsteq	pc, sl, lsr #6
    cfd4:	23020000 	movwcs	r0, #8192	; 0x2000
    cfd8:	28fa0718 	ldmcs	sl!, {r3, r4, r8, r9, sl}^
    cfdc:	2b070000 	blcs	1ccfe4 <_Min_Heap_Size+0x1cc7e4>
    cfe0:	00011f13 	andeq	r1, r1, r3, lsl pc
    cfe4:	28230200 	stmdacs	r3!, {r9}
    cfe8:	0027d507 	eoreq	sp, r7, r7, lsl #10
    cfec:	132c0700 			; <UNDEFINED> instruction: 0x132c0700
    cff0:	0000011f 	andeq	r0, r0, pc, lsl r1
    cff4:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    cff8:	0000281b 	andeq	r2, r0, fp, lsl r8
    cffc:	57112d07 	ldrpl	r2, [r1, -r7, lsl #26]
    d000:	02000001 	andeq	r0, r0, #1
    d004:	e8074823 	stmda	r7, {r0, r1, r5, fp, lr}
    d008:	07000028 	streq	r0, [r0, -r8, lsr #32]
    d00c:	014b0c2e 	cmpeq	fp, lr, lsr #24
    d010:	23020000 	movwcs	r0, #8192	; 0x2000
    d014:	2923074c 	stmdbcs	r3!, {r2, r3, r6, r8, r9, sl}
    d018:	30070000 	andcc	r0, r7, r0
    d01c:	0002a309 	andeq	sl, r2, r9, lsl #6
    d020:	50230200 	eorpl	r0, r3, r0, lsl #4
    d024:	00450800 	subeq	r0, r5, r0, lsl #16
    d028:	02b30000 	adcseq	r0, r3, #0
    d02c:	80090000 	andhi	r0, r9, r0
    d030:	01000000 	mrseq	r0, (UNDEF: 0)
    d034:	6d740a00 	vldmdbvs	r4!, {s1-s0}
    d038:	08100073 	ldmdaeq	r0, {r0, r1, r4, r5, r6}
    d03c:	02fd0811 	rscseq	r0, sp, #1114112	; 0x110000
    d040:	71070000 	mrsvc	r0, (UNDEF: 7)
    d044:	08000029 	stmdaeq	r0, {r0, r3, r5}
    d048:	01630a12 	cmneq	r3, r2, lsl sl
    d04c:	23020000 	movwcs	r0, #8192	; 0x2000
    d050:	290a0700 	stmdbcs	sl, {r8, r9, sl}
    d054:	13080000 	movwne	r0, #32768	; 0x8000
    d058:	0001630a 	andeq	r6, r1, sl, lsl #6
    d05c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    d060:	0027b507 	eoreq	fp, r7, r7, lsl #10
    d064:	0a140800 	beq	50f06c <_Min_Heap_Size+0x50e86c>
    d068:	00000163 	andeq	r0, r0, r3, ror #2
    d06c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    d070:	0000286a 	andeq	r2, r0, sl, ror #16
    d074:	630a1508 	movwvs	r1, #42248	; 0xa508
    d078:	02000001 	andeq	r0, r0, #1
    d07c:	08000c23 	stmdaeq	r0, {r0, r1, r5, sl, fp}
    d080:	00000106 	andeq	r0, r0, r6, lsl #2
    d084:	0000030d 	andeq	r0, r0, sp, lsl #6
    d088:	00008009 	andeq	r8, r0, r9
    d08c:	0b000000 	bleq	d094 <_Min_Heap_Size+0xc894>
    d090:	000027dd 	ldrdeq	r2, [r0], -sp
    d094:	fd072701 	stc2	7, cr2, [r7, #-4]
    d098:	01000002 	tsteq	r0, r2
    d09c:	00000305 	andeq	r0, r0, r5, lsl #6
    d0a0:	a60b0000 	strge	r0, [fp], -r0
    d0a4:	01000027 	tsteq	r0, r7, lsr #32
    d0a8:	03330828 	teqeq	r3, #40, 16	; 0x280000
    d0ac:	05010000 	streq	r0, [r1, #-0]
    d0b0:	00000003 	andeq	r0, r0, r3
    d0b4:	06040500 	streq	r0, [r4], -r0, lsl #10
    d0b8:	0c000001 	stceq	0, cr0, [r0], {1}
    d0bc:	0027c001 	eoreq	ip, r7, r1
    d0c0:	05a90100 	streq	r0, [r9, #256]!	; 0x100
    d0c4:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    d0d0:	0082fb00 	addeq	pc, r2, r0, lsl #22
    d0d4:	039e0100 	orrseq	r0, lr, #0, 2
    d0d8:	860d0000 	strhi	r0, [sp], -r0
    d0dc:	01000028 	tsteq	r0, r8, lsr #32
    d0e0:	010613a9 	smlatbeq	r6, r9, r3, r1
    d0e4:	831f0000 	tsthi	pc, #0
    d0e8:	831b0000 	tsthi	fp, #0
    d0ec:	c20d0000 	andgt	r0, sp, #0
    d0f0:	01000028 	tsteq	r0, r8, lsr #32
    d0f4:	033320a9 	teqeq	r3, #169	; 0xa9
    d0f8:	83440000 	movthi	r0, #16384	; 0x4000
    d0fc:	83400000 	movthi	r0, #0
    d100:	650e0000 	strvs	r0, [lr, #-0]
    d104:	0100766e 	tsteq	r0, lr, ror #12
    d108:	03332da9 	teqeq	r3, #10816	; 0x2a40
    d10c:	83690000 	cmnhi	r9, #0
    d110:	83650000 	cmnhi	r5, #0
    d114:	000f0000 	andeq	r0, pc, r0
    d118:	0a000000 	beq	d120 <_Min_Heap_Size+0xc920>
    d11c:	00000008 	andeq	r0, r0, r8
    d120:	2935010c 	ldmdbcs	r5!, {r2, r3, r8}
    d124:	a3010000 	movwge	r0, #4096	; 0x1000
    d128:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    d134:	838a0000 	orrhi	r0, sl, #0
    d138:	c7010000 	strgt	r0, [r1, -r0]
    d13c:	0f000003 	svceq	0x00000003
    d140:	00000000 	andeq	r0, r0, r0
    d144:	0000080a 	andeq	r0, r0, sl, lsl #16
    d148:	db010c00 	blle	50150 <_Min_Heap_Size+0x4f950>
    d14c:	01000028 	tsteq	r0, r8, lsr #32
    d150:	7901059b 	stmdbvc	r1, {r0, r1, r3, r4, r7, r8, sl}
	...
    d15c:	aa000000 	bge	d164 <_Min_Heap_Size+0xc964>
    d160:	01000083 	smlabbeq	r0, r3, r0, r0
    d164:	00000418 	andeq	r0, r0, r8, lsl r4
    d168:	646c6f0e 	strbtvs	r6, [ip], #-3854	; 0xfffff0f2
    d16c:	119b0100 	orrsne	r0, fp, r0, lsl #2
    d170:	00000106 	andeq	r0, r0, r6, lsl #2
    d174:	000083ce 	andeq	r8, r0, lr, asr #7
    d178:	000083ca 	andeq	r8, r0, sl, asr #7
    d17c:	77656e0e 	strbvc	r6, [r5, -lr, lsl #28]!
    d180:	1c9b0100 	ldfnes	f0, [fp], {0}
    d184:	00000106 	andeq	r0, r0, r6, lsl #2
    d188:	000083f3 	strdeq	r8, [r0], -r3
    d18c:	000083ef 	andeq	r8, r0, pc, ror #7
    d190:	0000000f 	andeq	r0, r0, pc
    d194:	00080a00 	andeq	r0, r8, r0, lsl #20
    d198:	01100000 	tsteq	r0, r0
    d19c:	000027cf 	andeq	r2, r0, pc, asr #15
    d1a0:	01059401 	tsteq	r5, r1, lsl #8
    d1a4:	00000079 	andeq	r0, r0, r9, ror r0
	...
    d1b0:	01007d02 	tsteq	r0, r2, lsl #26
    d1b4:	00000458 	andeq	r0, r0, r8, asr r4
    d1b8:	0009a90d 	andeq	sl, r9, sp, lsl #18
    d1bc:	11940100 	orrsne	r0, r4, r0, lsl #2
    d1c0:	00000106 	andeq	r0, r0, r6, lsl #2
    d1c4:	00008418 	andeq	r8, r0, r8, lsl r4
    d1c8:	00008414 	andeq	r8, r0, r4, lsl r4
    d1cc:	00747311 	rsbseq	r7, r4, r1, lsl r3
    d1d0:	58249401 	stmdapl	r4!, {r0, sl, ip, pc}
    d1d4:	01000004 	tsteq	r0, r4
    d1d8:	04050051 	streq	r0, [r5], #-81	; 0xffffffaf
    d1dc:	000001c3 	andeq	r0, r0, r3, asr #3
    d1e0:	28750110 	ldmdacs	r5!, {r4, r8}^
    d1e4:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    d1e8:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    d1f4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    d1f8:	04910100 	ldreq	r0, [r1], #256	; 0x100
    d1fc:	620e0000 	andvs	r0, lr, #0
    d200:	01006675 	tsteq	r0, r5, ror r6
    d204:	0491188e 	ldreq	r1, [r1], #2190	; 0x88e
    d208:	843d0000 	ldrthi	r0, [sp], #-0
    d20c:	84390000 	ldrthi	r0, [r9], #-0
    d210:	05000000 	streq	r0, [r0, #-0]
    d214:	0002b304 	andeq	fp, r2, r4, lsl #6
    d218:	7b010c00 	blvc	50220 <_Min_Heap_Size+0x4fa20>
    d21c:	01000029 	tsteq	r0, r9, lsr #32
    d220:	79010587 	stmdbvc	r1, {r0, r1, r2, r7, r8, sl}
	...
    d22c:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    d230:	01000084 	smlabbeq	r0, r4, r0, r0
    d234:	000004d4 	ldrdeq	r0, [r0], -r4
    d238:	0028860d 	eoreq	r8, r8, sp, lsl #12
    d23c:	13870100 	orrne	r0, r7, #0, 2
    d240:	00000106 	andeq	r0, r0, r6, lsl #2
    d244:	00008482 	andeq	r8, r0, r2, lsl #9
    d248:	0000847e 	andeq	r8, r0, lr, ror r4
    d24c:	0000000f 	andeq	r0, r0, pc
    d250:	00080a00 	andeq	r0, r8, r0, lsl #20
    d254:	010c0000 	mrseq	r0, (UNDEF: 12)
    d258:	0000288b 	andeq	r2, r0, fp, lsl #17
    d25c:	01058001 	tsteq	r5, r1
    d260:	00000079 	andeq	r0, r0, r9, ror r0
	...
    d26c:	000084a3 	andeq	r8, r0, r3, lsr #9
    d270:	00051101 	andeq	r1, r5, r1, lsl #2
    d274:	192b0d00 	stmdbne	fp!, {r8, sl, fp}
    d278:	80010000 	andhi	r0, r1, r0
    d27c:	00051110 	andeq	r1, r5, r0, lsl r1
    d280:	0084c700 	addeq	ip, r4, r0, lsl #14
    d284:	0084c300 	addeq	ip, r4, r0, lsl #6
    d288:	00000f00 	andeq	r0, r0, r0, lsl #30
    d28c:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    d290:	05000000 	streq	r0, [r0, #-0]
    d294:	00007904 	andeq	r7, r0, r4, lsl #18
    d298:	bc010c00 	stclt	12, cr0, [r1], {-0}
    d29c:	01000028 	tsteq	r0, r8, lsr #32
    d2a0:	79010578 	stmdbvc	r1, {r3, r4, r5, r6, r8, sl}
	...
    d2ac:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    d2b0:	01000084 	smlabbeq	r0, r4, r0, r0
    d2b4:	0000055b 	andeq	r0, r0, fp, asr r5
    d2b8:	0029530d 	eoreq	r5, r9, sp, lsl #6
    d2bc:	11780100 	cmnne	r8, r0, lsl #2
    d2c0:	00000106 	andeq	r0, r0, r6, lsl #2
    d2c4:	00008518 	andeq	r8, r0, r8, lsl r5
    d2c8:	00008514 	andeq	r8, r0, r4, lsl r5
    d2cc:	00128a12 	andseq	r8, r2, r2, lsl sl
    d2d0:	1b780100 	blne	1e0d6d8 <_Min_Heap_Size+0x1e0ced8>
    d2d4:	00000079 	andeq	r0, r0, r9, ror r0
    d2d8:	13749102 	cmnne	r4, #-2147483648	; 0x80000000
    d2dc:	ae011000 	cdpge	0, 0, cr1, cr1, cr0, {0}
    d2e0:	01000027 	tsteq	r0, r7, lsr #32
    d2e4:	79010570 	stmdbvc	r1, {r4, r5, r6, r8, sl}
    d2e8:	34000000 	strcc	r0, [r0], #-0
    d2ec:	3808001b 	stmdacc	r8, {r0, r1, r3, r4}
    d2f0:	0208001b 	andeq	r0, r8, #27
    d2f4:	aa01007d 	bge	4d4f0 <_Min_Heap_Size+0x4ccf0>
    d2f8:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    d2fc:	000009a9 	andeq	r0, r0, r9, lsr #19
    d300:	79107001 	ldmdbvc	r0, {r0, ip, sp, lr}
    d304:	3d000000 	stccc	0, cr0, [r0, #-0]
    d308:	39000085 	stmdbcc	r0, {r0, r2, r7}
    d30c:	11000085 	smlabbne	r0, r5, r0, r0
    d310:	00727470 	rsbseq	r7, r2, r0, ror r4
    d314:	791a7001 	ldmdbvc	sl, {r0, ip, sp, lr}
    d318:	01000000 	mrseq	r0, (UNDEF: 0)
    d31c:	69641151 	stmdbvs	r4!, {r0, r4, r6, r8, ip}^
    d320:	70010072 	andvc	r0, r1, r2, ror r0
    d324:	00007923 	andeq	r7, r0, r3, lsr #18
    d328:	00520100 	subseq	r0, r2, r0, lsl #2
    d32c:	28f20110 	ldmcs	r2!, {r4, r8}^
    d330:	6a010000 	bvs	4d338 <_Min_Heap_Size+0x4cb38>
    d334:	00790105 	rsbseq	r0, r9, r5, lsl #2
    d338:	1b300000 	blne	c0d340 <_Min_Heap_Size+0xc0cb40>
    d33c:	1b340800 	blne	d0f344 <_Min_Heap_Size+0xd0eb44>
    d340:	7d020800 	stcvc	8, cr0, [r2, #-0]
    d344:	05dd0100 	ldrbeq	r0, [sp, #256]	; 0x100
    d348:	a90d0000 	stmdbge	sp, {}	; <UNPREDICTABLE>
    d34c:	01000009 	tsteq	r0, r9
    d350:	0079116a 	rsbseq	r1, r9, sl, ror #2
    d354:	85620000 	strbhi	r0, [r2, #-0]!
    d358:	855e0000 	ldrbhi	r0, [lr, #-0]
    d35c:	10000000 	andne	r0, r0, r0
    d360:	0027f701 	eoreq	pc, r7, r1, lsl #14
    d364:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    d368:	00007901 	andeq	r7, r0, r1, lsl #18
    d36c:	001b2600 	andseq	r2, fp, r0, lsl #12
    d370:	001b3008 	andseq	r3, fp, r8
    d374:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    d378:	00061d01 	andeq	r1, r6, r1, lsl #26
    d37c:	09a90d00 	stmibeq	r9!, {r8, sl, fp}
    d380:	63010000 	movwvs	r0, #4096	; 0x1000
    d384:	00007910 	andeq	r7, r0, r0, lsl r9
    d388:	00858700 	addeq	r8, r5, r0, lsl #14
    d38c:	00858300 	addeq	r8, r5, r0, lsl #6
    d390:	74731100 	ldrbtvc	r1, [r3], #-256	; 0xffffff00
    d394:	23630100 	cmncs	r3, #0, 2
    d398:	00000458 	andeq	r0, r0, r8, asr r4
    d39c:	10005101 	andne	r5, r0, r1, lsl #2
    d3a0:	0028e101 	eoreq	lr, r8, r1, lsl #2
    d3a4:	055c0100 	ldrbeq	r0, [ip, #-256]	; 0xffffff00
    d3a8:	00007901 	andeq	r7, r0, r1, lsl #18
    d3ac:	001b2000 	andseq	r2, fp, r0
    d3b0:	001b2608 	andseq	r2, fp, r8, lsl #12
    d3b4:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    d3b8:	00065001 	andeq	r5, r6, r1
    d3bc:	09a90d00 	stmibeq	r9!, {r8, sl, fp}
    d3c0:	5c010000 	stcpl	0, cr0, [r1], {-0}
    d3c4:	00007910 	andeq	r7, r0, r0, lsl r9
    d3c8:	0085ac00 	addeq	sl, r5, r0, lsl #24
    d3cc:	0085a800 	addeq	sl, r5, r0, lsl #16
    d3d0:	010c0000 	mrseq	r0, (UNDEF: 12)
    d3d4:	000027e9 	andeq	r2, r0, r9, ror #15
    d3d8:	011b5001 	tsteq	fp, r1
    d3dc:	00000079 	andeq	r0, r0, r9, ror r0
    d3e0:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    d3e4:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
    d3e8:	000085cd 	andeq	r8, r0, sp, asr #11
    d3ec:	0006c901 	andeq	ip, r6, r1, lsl #18
    d3f0:	09a90d00 	stmibeq	r9!, {r8, sl, fp}
    d3f4:	50010000 	andpl	r0, r1, r0
    d3f8:	00007926 	andeq	r7, r0, r6, lsr #18
    d3fc:	0085f100 	addeq	pc, r5, r0, lsl #2
    d400:	0085ed00 	addeq	lr, r5, r0, lsl #26
    d404:	74700e00 	ldrbtvc	r0, [r0], #-3584	; 0xfffff200
    d408:	50010072 	andpl	r0, r1, r2, ror r0
    d40c:	00010632 	andeq	r0, r1, r2, lsr r6
    d410:	00861a00 	addeq	r1, r6, r0, lsl #20
    d414:	00861200 	addeq	r1, r6, r0, lsl #4
    d418:	656c0e00 	strbvs	r0, [ip, #-3584]!	; 0xfffff200
    d41c:	5001006e 	andpl	r0, r1, lr, rrx
    d420:	0000793b 	andeq	r7, r0, fp, lsr r9
    d424:	00865400 	addeq	r5, r6, r0, lsl #8
    d428:	00865000 	addeq	r5, r6, r0
    d42c:	292d1400 	pushcs	{sl, ip}
    d430:	53010000 	movwpl	r0, #4096	; 0x1000
    d434:	00007907 	andeq	r7, r0, r7, lsl #18
    d438:	00867600 	addeq	r7, r6, r0, lsl #12
    d43c:	00867200 	addeq	r7, r6, r0, lsl #4
    d440:	1b160f00 	blne	591048 <_Min_Heap_Size+0x590848>
    d444:	08180800 	ldmdaeq	r8, {fp}
    d448:	0c000000 	stceq	0, cr0, [r0], {-0}
    d44c:	00289801 	eoreq	r9, r8, r1, lsl #16
    d450:	1b430100 	blne	10cd858 <_Min_Heap_Size+0x10cd058>
    d454:	00007901 	andeq	r7, r0, r1, lsl #18
    d458:	001ae400 	andseq	lr, sl, r0, lsl #8
    d45c:	001b0408 	andseq	r0, fp, r8, lsl #8
    d460:	00869508 	addeq	r9, r6, r8, lsl #10
    d464:	07420100 	strbeq	r0, [r2, -r0, lsl #2]
    d468:	a90d0000 	stmdbge	sp, {}	; <UNPREDICTABLE>
    d46c:	01000009 	tsteq	r0, r9
    d470:	00792543 	rsbseq	r2, r9, r3, asr #10
    d474:	86b90000 	ldrthi	r0, [r9], r0
    d478:	86b50000 	ldrthi	r0, [r5], r0
    d47c:	700e0000 	andvc	r0, lr, r0
    d480:	01007274 	tsteq	r0, r4, ror r2
    d484:	01063143 	tsteq	r6, r3, asr #2
    d488:	86e20000 	strbthi	r0, [r2], r0
    d48c:	86da0000 	ldrbhi	r0, [sl], r0
    d490:	6c0e0000 	stcvs	0, cr0, [lr], {-0}
    d494:	01006e65 	tsteq	r0, r5, ror #28
    d498:	00793a43 	rsbseq	r3, r9, r3, asr #20
    d49c:	871c0000 	ldrhi	r0, [ip, -r0]
    d4a0:	87180000 	ldrhi	r0, [r8, -r0]
    d4a4:	2d140000 	ldccs	0, cr0, [r4, #-0]
    d4a8:	01000029 	tsteq	r0, r9, lsr #32
    d4ac:	00790746 	rsbseq	r0, r9, r6, asr #14
    d4b0:	873e0000 	ldrhi	r0, [lr, -r0]!
    d4b4:	873a0000 	ldrhi	r0, [sl, -r0]!
    d4b8:	f20f0000 	vhadd.s8	d0, d15, d0
    d4bc:	2608001a 			; <UNDEFINED> instruction: 0x2608001a
    d4c0:	00000008 	andeq	r0, r0, r8
    d4c4:	27e30115 			; <UNDEFINED> instruction: 0x27e30115
    d4c8:	3d010000 	stccc	0, cr0, [r1, #-0]
    d4cc:	00010106 	andeq	r0, r1, r6, lsl #2
    d4d0:	00000000 	andeq	r0, r0, r0
    d4d4:	5d000000 	stcpl	0, cr0, [r0, #-0]
    d4d8:	01000087 	smlabbeq	r0, r7, r0, r0
    d4dc:	0000078a 	andeq	r0, r0, sl, lsl #15
    d4e0:	00192b0d 	andseq	r2, r9, sp, lsl #22
    d4e4:	113d0100 	teqne	sp, r0, lsl #2
    d4e8:	00000079 	andeq	r0, r0, r9, ror r0
    d4ec:	00008781 	andeq	r8, r0, r1, lsl #15
    d4f0:	0000877d 	andeq	r8, r0, sp, ror r7
    d4f4:	00000016 	andeq	r0, r0, r6, lsl r0
    d4f8:	00078a00 	andeq	r8, r7, r0, lsl #20
    d4fc:	50011700 	andpl	r1, r1, r0, lsl #14
    d500:	5001f303 	andpl	pc, r1, r3, lsl #6
    d504:	02510117 	subseq	r0, r1, #-1073741819	; 0xc0000005
    d508:	0000ff09 	andeq	pc, r0, r9, lsl #30
    d50c:	27fe010c 	ldrbcs	r0, [lr, ip, lsl #2]!
    d510:	35010000 	strcc	r0, [r1, #-0]
    d514:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    d520:	87a20000 	strhi	r0, [r2, r0]!
    d524:	db010000 	blle	4d52c <_Min_Heap_Size+0x4cd2c>
    d528:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    d52c:	00646970 	rsbeq	r6, r4, r0, ror r9
    d530:	790f3501 	stmdbvc	pc, {r0, r8, sl, ip, sp}	; <UNPREDICTABLE>
    d534:	c6000000 	strgt	r0, [r0], -r0
    d538:	c2000087 	andgt	r0, r0, #135	; 0x87
    d53c:	0e000087 	cdpeq	0, 0, cr0, cr0, cr7, {4}
    d540:	00676973 	rsbeq	r6, r7, r3, ror r9
    d544:	79183501 	ldmdbvc	r8, {r0, r8, sl, ip, sp}
    d548:	eb000000 	bl	d550 <_Min_Heap_Size+0xcd50>
    d54c:	e7000087 	str	r0, [r0, -r7, lsl #1]
    d550:	0f000087 	svceq	0x00000087
    d554:	00000000 	andeq	r0, r0, r0
    d558:	0000080a 	andeq	r0, r0, sl, lsl #16
    d55c:	3b011800 	blcc	53564 <_Min_Heap_Size+0x52d64>
    d560:	01000029 	tsteq	r0, r9, lsr #32
    d564:	79010530 	stmdbvc	r1, {r4, r5, r8, sl}
	...
    d570:	02000000 	andeq	r0, r0, #0
    d574:	1901007d 	stmdbne	r1, {r0, r2, r3, r4, r5, r6}
    d578:	00282601 	eoreq	r2, r8, r1, lsl #12
    d57c:	062c0100 	strteq	r0, [ip], -r0, lsl #2
	...
    d588:	01007d02 	tsteq	r0, r2, lsl #26
    d58c:	7c01011a 	stfvcs	f0, [r1], {26}
    d590:	7c000027 	stcvc	0, cr0, [r0], {39}	; 0x27
    d594:	09000027 	stmdbeq	r0, {r0, r1, r2, r5}
    d598:	011a0d0f 	tsteq	sl, pc, lsl #26
    d59c:	0003f801 	andeq	pc, r3, r1, lsl #16
    d5a0:	0003f800 	andeq	pc, r3, r0, lsl #16
    d5a4:	0c230100 	stfeqs	f0, [r3], #-0
    d5a8:	9e01011a 	mcrls	1, 0, r0, cr1, cr10, {0}
    d5ac:	9e000028 	cdpls	0, 0, cr0, cr0, cr8, {1}
    d5b0:	01000028 	tsteq	r0, r8, lsr #32
    d5b4:	1e000c24 	cdpne	12, 0, cr0, cr0, cr4, {1}
    d5b8:	02000000 	andeq	r0, r0, #0
    d5bc:	0020f400 	eoreq	pc, r0, r0, lsl #8
    d5c0:	9b010400 	blls	4e5c8 <_Min_Heap_Size+0x4ddc8>
    d5c4:	c0000098 	mulgt	r0, r8, r0
    d5c8:	96000007 	strls	r0, [r0], -r7
    d5cc:	22000029 	andcs	r0, r0, #41	; 0x29
    d5d0:	ba000008 	blt	d5f8 <_Min_Heap_Size+0xcdf8>
    d5d4:	01000029 	tsteq	r0, r9, lsr #32
    d5d8:	00002280 	andeq	r2, r0, r0, lsl #5
    d5dc:	06000200 	streq	r0, [r0], -r0, lsl #4
    d5e0:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    d5e4:	00991f01 	addseq	r1, r9, r1, lsl #30
    d5e8:	0001d000 	andeq	sp, r1, r0
    d5ec:	00021808 	andeq	r1, r2, r8, lsl #16
    d5f0:	0029c808 	eoreq	ip, r9, r8, lsl #16
    d5f4:	00082200 	andeq	r2, r8, r0, lsl #4
    d5f8:	0029ba00 	eoreq	fp, r9, r0, lsl #20
    d5fc:	Address 0x0000d5fc is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
{
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  errno = ENOMEM;
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Heap_Size+0xf8244c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Heap_Size+0x2ce064>
}
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	0b0b0024 	bleq	2c00c8 <_Min_Heap_Size+0x2bf8c8>
    if (status != HAL_OK)
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      uwTickFreq = prevTickFreq;
      38:	26050000 	strcs	r0, [r5], -r0
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00350600 	eorseq	r0, r5, r0, lsl #12
      44:	00001349 	andeq	r1, r0, r9, asr #6
      if (pllsource != 0)
      48:	49010107 	stmdbmi	r1, {r0, r1, r2, r8}
      4c:	00130113 	andseq	r0, r3, r3, lsl r1
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00210800 	eoreq	r0, r1, r0, lsl #16
      54:	0b2f1349 	bleq	bc4d80 <_Min_Heap_Size+0xbc4580>
      58:	13090000 	movwne	r0, #36864	; 0x9000
      5c:	3a0b0b01 	bcc	2c2c68 <_Min_Heap_Size+0x2c2468>
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      64:	0013010b 	andseq	r0, r3, fp, lsl #2
      68:	000d0a00 	andeq	r0, sp, r0, lsl #20
      SystemCoreClock = pllvco/pllp;
      6c:	0b3a0803 	bleq	e82080 <_Min_Heap_Size+0xe81880>
      70:	0b39053b 	bleq	e41564 <_Min_Heap_Size+0xe40d64>
      break;
      74:	0a381349 	beq	e04da0 <_Min_Heap_Size+0xe045a0>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	0d0b0000 	stceq	0, cr0, [fp, #-0]
      7c:	3a0e0300 	bcc	380c84 <_Min_Heap_Size+0x380484>
      80:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      84:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
      88:	0c00000a 	stceq	0, cr0, [r0], {10}
      8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      90:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      94:	13490b39 	movtne	r0, #39737	; 0x9b39
      98:	040d0000 	streq	r0, [sp], #-0
      9c:	0b0b3e01 	bleq	2cf8a8 <_Min_Heap_Size+0x2cf0a8>
      a0:	3a13490b 	bcc	4d24d4 <_Min_Heap_Size+0x4d1cd4>
      a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00280e00 	eoreq	r0, r8, r0, lsl #28
      b0:	0b1c0e03 	bleq	7038c4 <_Min_Heap_Size+0x7030c4>
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	130f0000 	movwne	r0, #61440	; 0xf000
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	3a0b0b01 	bcc	2c2cc4 <_Min_Heap_Size+0x2c24c4>
      bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0013010b 	andseq	r0, r3, fp, lsl #2
      c4:	000d1000 	andeq	r1, sp, r0
      c8:	0b3a0e03 	bleq	e838dc <_Min_Heap_Size+0xe830dc>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0b390b3b 	bleq	e42dc0 <_Min_Heap_Size+0xe425c0>
      d0:	0a381349 	beq	e04dfc <_Min_Heap_Size+0xe045fc>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	0d110000 	ldceq	0, cr0, [r1, #-0]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	3a080300 	bcc	200ce0 <_Min_Heap_Size+0x2004e0>
      dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    if (huart->hdmarx != NULL)
      e4:	1200000a 	andne	r0, r0, #10
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0b3a0b0b 	bleq	e82d20 <_Min_Heap_Size+0xe82520>
      f0:	0b390b3b 	bleq	e42de4 <_Min_Heap_Size+0xe425e4>
    huart->TxXferCount = 0x00U;
      f4:	00001301 	andeq	r1, r0, r1, lsl #6
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	0b000f13 	bleq	3d4c <_Min_Heap_Size+0x354c>
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0013490b 	andseq	r4, r3, fp, lsl #18
    huart->RxState = HAL_UART_STATE_READY;
     100:	000f1400 	andeq	r1, pc, r0, lsl #8
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000b0b 	andeq	r0, r0, fp, lsl #22
    HAL_UART_AbortCpltCallback(huart);
     108:	27011515 	smladcs	r1, r5, r5, r1
     10c:	0013010c 	andseq	r0, r3, ip, lsl #2
  uint32_t AbortCplt = 0x01U;
     110:	00051600 	andeq	r1, r5, r0, lsl #12
  if (AbortCplt == 0x01U)
     114:	00001349 	andeq	r1, r0, r9, asr #6
}
     118:	03003417 	movweq	r3, #1047	; 0x417
     11c:	3b0b3a0e 	blcc	2ce95c <_Min_Heap_Size+0x2ce15c>
     120:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     124:	3c0c3f13 	stccc	15, cr3, [ip], {19}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	1800000c 	stmdane	r0, {r2, r3}
     12c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7c <_Min_Heap_Size-0x784>
     130:	0b3a0e03 	bleq	e83944 <_Min_Heap_Size+0xe83144>
     134:	0b390b3b 	bleq	e42e28 <_Min_Heap_Size+0xe42628>
     138:	01110c27 	tsteq	r1, r7, lsr #24
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     140:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     144:	19000013 	stmdbne	r0, {r0, r1, r4}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     14c:	0b3b0b3a 	bleq	ec2e3c <_Min_Heap_Size+0xec263c>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	13490b39 	movtne	r0, #39737	; 0x9b39
     154:	00000a02 	andeq	r0, r0, r2, lsl #20
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	11010b1a 	tstne	r1, sl, lsl fp
     15c:	01011201 	tsteq	r1, r1, lsl #4
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	1b000013 	blne	1b4 <_Min_Heap_Size-0x64c>
     164:	01018289 	smlabbeq	r1, r9, r2, r8
     168:	13310111 	teqne	r1, #1073741828	; 0x40000004
     16c:	00001301 	andeq	r1, r0, r1, lsl #6
     170:	01828a1c 	orreq	r8, r2, ip, lsl sl
}
     174:	910a0200 	mrsls	r0, R10_fiq
     178:	00000a42 	andeq	r0, r0, r2, asr #20
     17c:	0182891d 	orreq	r8, r2, sp, lsl r9
     180:	31011100 	mrscc	r1, (UNDEF: 17)
}
     184:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d8 <_Min_Heap_Size-0x728>
     18c:	0b3a0e03 	bleq	e839a0 <_Min_Heap_Size+0xe831a0>
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	0b390b3b 	bleq	e42e84 <_Min_Heap_Size+0xe42684>
     194:	13490c27 	movtne	r0, #39975	; 0x9c27
     198:	01120111 	tsteq	r2, r1, lsl r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     1a0:	0013010c 	andseq	r0, r3, ip, lsl #2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	82891f00 	addhi	r1, r9, #0, 30
     1a8:	01110101 	tsteq	r1, r1, lsl #2
     1ac:	00001331 	andeq	r1, r0, r1, lsr r3
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	03003420 	movweq	r3, #1056	; 0x420
     1b4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000a020c 	andeq	r0, sl, ip, lsl #4
     1bc:	002e2100 	eoreq	r2, lr, r0, lsl #2
     1c0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	0b3b0b3a 	bleq	ec2eb4 <_Min_Heap_Size+0xec26b4>
     1c8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00000c3c 	andeq	r0, r0, ip, lsr ip
     1d0:	03000522 	movweq	r0, #1314	; 0x522
     1d4:	3b0b3a08 	blcc	2ce9fc <_Min_Heap_Size+0x2ce1fc>
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     1dc:	b7060213 	smladlt	r6, r3, r2, r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00000642 	andeq	r0, r0, r2, asr #12
     1e4:	3f002e23 	svccc	0x00002e23
     1e8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     1f0:	0b3b0b3a 	bleq	ec2ee0 <_Min_Heap_Size+0xec26e0>
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     1f8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1fc:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0b3a0e03 	bleq	e83a14 <_Min_Heap_Size+0xe83214>
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	0b39053b 	bleq	e416f8 <_Min_Heap_Size+0xe40ef8>
     208:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     20c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     214:	0b3a0e03 	bleq	e83a28 <_Min_Heap_Size+0xe83228>
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	0b390b3b 	bleq	e42f0c <_Min_Heap_Size+0xe4270c>
     21c:	01000000 	mrseq	r0, (UNDEF: 0)
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	0e030b13 	vmoveq.32	d3[0], r0
     228:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
  tmp = hdma->Instance->FCR;
     22c:	01520111 	cmpeq	r2, r1, lsl r1
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00000610 	andeq	r0, r0, r0, lsl r6
  tmp |= hdma->Init.FIFOMode;
     234:	0b002402 	bleq	9244 <_Min_Heap_Size+0x8a44>
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    tmp |= hdma->Init.FIFOThreshold;
     23c:	0300000e 	movweq	r0, #14
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	0b3b0b3a 	bleq	ec2f34 <_Min_Heap_Size+0xec2734>
     248:	13490b39 	movtne	r0, #39737	; 0x9b39
  hdma->Instance->FCR = tmp;
     24c:	24040000 	strcs	r0, [r4], #-0
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	0008030b 	andeq	r0, r8, fp, lsl #6
     258:	00260500 	eoreq	r0, r6, r0, lsl #10
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00001349 	andeq	r1, r0, r9, asr #6
  hdma->State = HAL_DMA_STATE_READY;
     260:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     264:	07000013 	smladeq	r0, r3, r0, r0
  return HAL_OK;
     268:	0b0b0113 	bleq	2c06bc <_Min_Heap_Size+0x2bfebc>
     26c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     270:	13010b39 	movwne	r0, #6969	; 0x1b39
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	0d080000 	stceq	0, cr0, [r8, #-0]
     278:	3a080300 	bcc	200e80 <_Min_Heap_Size+0x200680>
     27c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
        hdma->State = HAL_DMA_STATE_READY;
     284:	0900000a 	stmdbeq	r0, {r1, r3}
        return HAL_ERROR; 
     288:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    return HAL_ERROR;
     28c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	13490b39 	movtne	r0, #39737	; 0x9b39
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00000a38 	andeq	r0, r0, r8, lsr sl
     298:	0300160a 	movweq	r1, #1546	; 0x60a
      tickstart = HAL_GetTick();
     29c:	3b0b3a0e 	blcc	2ceadc <_Min_Heap_Size+0x2ce2dc>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     2a4:	0b000013 	bleq	2f8 <_Min_Heap_Size-0x508>
     2a8:	0b3e0104 	bleq	f806c0 <_Min_Heap_Size+0xf7fec0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     2b0:	0b3b0b3a 	bleq	ec2fa0 <_Min_Heap_Size+0xec27a0>
     2b4:	13010b39 	movwne	r0, #6969	; 0x1b39
          return HAL_TIMEOUT;
     2b8:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     2c0:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     2c4:	0b0b0113 	bleq	2c0718 <_Min_Heap_Size+0x2bff18>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	0b3b0b3a 	bleq	ec2fb8 <_Min_Heap_Size+0xec27b8>
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	13010b39 	movwne	r0, #6969	; 0x1b39
     2d0:	0d0e0000 	stceq	0, cr0, [lr, #-0]
     2d4:	3a0e0300 	bcc	380edc <_Min_Heap_Size+0x3806dc>
      tickstart = HAL_GetTick();
     2d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     2e0:	0f00000a 	svceq	0x0000000a
     2e4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	0b3a0b0b 	bleq	e82f1c <_Min_Heap_Size+0xe8271c>
     2ec:	0b390b3b 	bleq	e42fe0 <_Min_Heap_Size+0xe427e0>
          return HAL_TIMEOUT;
     2f0:	00001301 	andeq	r1, r0, r1, lsl #6
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	0b000f10 	bleq	3f3c <_Min_Heap_Size+0x373c>
     2f8:	0013490b 	andseq	r4, r3, fp, lsl #18
     2fc:	000f1100 	andeq	r1, pc, r0, lsl #2
     300:	00000b0b 	andeq	r0, r0, fp, lsl #22
     304:	27011512 	smladcs	r1, r2, r5, r1
     308:	0013010c 	andseq	r0, r3, ip, lsl #2
     30c:	00051300 	andeq	r1, r5, r0, lsl #6
     310:	00001349 	andeq	r1, r0, r9, asr #6
      tickstart = HAL_GetTick();
     314:	03003414 	movweq	r3, #1044	; 0x414
     318:	3b0b3a0e 	blcc	2ceb58 <_Min_Heap_Size+0x2ce358>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     320:	3c0c3f13 	stccc	15, cr3, [ip], {19}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	1500000c 	strne	r0, [r0, #-12]
     328:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 278 <_Min_Heap_Size-0x588>
     32c:	0b3a0e03 	bleq	e83b40 <_Min_Heap_Size+0xe83340>
     330:	0b390b3b 	bleq	e43024 <_Min_Heap_Size+0xe42824>
          return HAL_TIMEOUT;
     334:	01110c27 	tsteq	r1, r7, lsr #24
    if(pwrclkchanged == SET)
     338:	06400112 			; <UNDEFINED> instruction: 0x06400112
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	16000013 			; <UNDEFINED> instruction: 0x16000013
     344:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	0b3b0b3a 	bleq	ec3038 <_Min_Heap_Size+0xec2838>
     34c:	13490b39 	movtne	r0, #39737	; 0x9b39
     350:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     354:	17000006 	strne	r0, [r0, -r6]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     360:	00000a02 	andeq	r0, r0, r2, lsl #20
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	31001d18 	tstcc	r0, r8, lsl sp
     368:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	01110b42 	tsteq	r1, r2, asr #22
     370:	0b580112 	bleq	16007c0 <_Min_Heap_Size+0x15fffc0>
     374:	0b570b59 	bleq	15c30e0 <_Min_Heap_Size+0x15c28e0>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
     37c:	11010182 	smlabbne	r1, r2, r1, r0
     380:	00133101 	andseq	r3, r3, r1, lsl #2
     384:	828a1a00 	addhi	r1, sl, #0, 20
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	0a020001 	beq	80394 <_Min_Heap_Size+0x7fb94>
     38c:	000a4291 	muleq	sl, r1, r2
        __HAL_RCC_PLL_DISABLE();
     390:	01011b00 	tsteq	r1, r0, lsl #22
     394:	13011349 	movwne	r1, #4937	; 0x1349
        tickstart = HAL_GetTick();
     398:	211c0000 	tstcs	ip, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	2f134900 	svccs	0x00134900
     3a0:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     3a4:	00018289 	andeq	r8, r1, r9, lsl #5
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	13310111 	teqne	r1, #1073741828	; 0x40000004
     3ac:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
            return HAL_TIMEOUT;
     3b0:	030c3f00 	movweq	r3, #52992	; 0xcf00
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	3b0b3a0e 	blcc	2cebf4 <_Min_Heap_Size+0x2ce3f4>
     3b8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     3bc:	1201110c 	andne	r1, r1, #12, 2
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	970a4001 	strls	r4, [sl, -r1]
     3c4:	00000c42 	andeq	r0, r0, r2, asr #24
     3c8:	03002e1f 	movweq	r2, #3615	; 0xe1f
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	3b0b3a0e 	blcc	2cec0c <_Min_Heap_Size+0x2ce40c>
     3d0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     3d4:	000b200c 	andeq	r2, fp, ip
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	002e2000 	eoreq	r2, lr, r0
     3dc:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     3e0:	030e4087 	movweq	r4, #57479	; 0xe087
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	3b0b3a0e 	blcc	2cec24 <_Min_Heap_Size+0x2ce424>
     3e8:	000b390b 	andeq	r3, fp, fp, lsl #18
     3ec:	002e2100 	eoreq	r2, lr, r0, lsl #2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     3f4:	030e4087 	movweq	r4, #57479	; 0xe087
     3f8:	3b0b3a0e 	blcc	2cec38 <_Min_Heap_Size+0x2ce438>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	000b3905 	andeq	r3, fp, r5, lsl #18
     400:	11010000 	mrsne	r0, (UNDEF: 1)
     404:	130e2501 	movwne	r2, #58625	; 0xe501
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	1b0e030b 	blne	38103c <_Min_Heap_Size+0x38083c>
     40c:	1106550e 	tstne	r6, lr, lsl #10
     410:	10015201 	andne	r5, r1, r1, lsl #4
     414:	02000006 	andeq	r0, r0, #6
     418:	0b0b0024 	bleq	2c04b0 <_Min_Heap_Size+0x2bfcb0>
     41c:	0e030b3e 	vmoveq.16	d3[0], r0
     420:	16030000 	strne	r0, [r3], -r0
     424:	3a0e0300 	bcc	38102c <_Min_Heap_Size+0x38082c>
        __HAL_RCC_PLL_ENABLE();
     428:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     42c:	0013490b 	andseq	r4, r3, fp, lsl #18
        tickstart = HAL_GetTick();
     430:	00240400 	eoreq	r0, r4, r0, lsl #8
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0b3e0b0b 	bleq	f83068 <_Min_Heap_Size+0xf82868>
     438:	00000803 	andeq	r0, r0, r3, lsl #16
     43c:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	06000013 			; <UNDEFINED> instruction: 0x06000013
     444:	13490101 	movtne	r0, #37121	; 0x9101
            return HAL_TIMEOUT;
     448:	00001301 	andeq	r1, r0, r1, lsl #6
  return HAL_OK;
     44c:	49002107 	stmdbmi	r0, {r0, r1, r2, r8, sp}
        __HAL_RCC_PLL_DISABLE();
     450:	000b2f13 	andeq	r2, fp, r3, lsl pc
     454:	01130800 	tsteq	r3, r0, lsl #16
        tickstart = HAL_GetTick();
     458:	0b3a0b0b 	bleq	e8308c <_Min_Heap_Size+0xe8288c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0b39053b 	bleq	e41950 <_Min_Heap_Size+0xe41150>
     460:	00001301 	andeq	r1, r0, r1, lsl #6
     464:	03000d09 	movweq	r0, #3337	; 0xd09
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	3b0b3a08 	blcc	2cec90 <_Min_Heap_Size+0x2ce490>
     46c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
            return HAL_TIMEOUT;
     470:	000a3813 	andeq	r3, sl, r3, lsl r8
  return HAL_OK;
     474:	000d0a00 	andeq	r0, sp, r0, lsl #20
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	0b3a0e03 	bleq	e83c8c <_Min_Heap_Size+0xe8348c>
        pll_config = RCC->PLLCFGR;
     47c:	0b39053b 	bleq	e41970 <_Min_Heap_Size+0xe41170>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0a381349 	beq	e051ac <_Min_Heap_Size+0xe049ac>
     484:	160b0000 	strne	r0, [fp], -r0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	3a0e0300 	bcc	381090 <_Min_Heap_Size+0x380890>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	0013490b 	andseq	r4, r3, fp, lsl #18
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     49c:	0b3b0b3a 	bleq	ec318c <_Min_Heap_Size+0xec298c>
     4a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	01120111 	tsteq	r2, r1, lsl r1
     4a8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     4b0:	0111010b 	tsteq	r1, fp, lsl #2
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	13010112 	movwne	r0, #4370	; 0x1112
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	340e0000 	strcc	r0, [lr], #-0
     4bc:	3a0e0300 	bcc	3810c4 <_Min_Heap_Size+0x3808c4>
  return HAL_OK;
     4c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
}
     4c4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
        return HAL_ERROR;
     4c8:	0f00000a 	svceq	0x0000000a
        return HAL_ERROR;
     4cc:	0111010b 	tsteq	r1, fp, lsl #2
}
     4d0:	00000112 	andeq	r0, r0, r2, lsl r1
        return HAL_ERROR;
     4d4:	01110100 	tsteq	r1, r0, lsl #2
          return HAL_ERROR;
     4d8:	0b130e25 	bleq	4c3d74 <_Min_Heap_Size+0x4c3574>
     4dc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     4e0:	01110655 	tsteq	r1, r5, asr r6
     4e4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     4e8:	04020000 	streq	r0, [r2], #-0
     4ec:	0b0b3e01 	bleq	2cfcf8 <_Min_Heap_Size+0x2cf4f8>
     4f0:	3a13490b 	bcc	4d2924 <_Min_Heap_Size+0x4d2124>
     4f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4f8:	0013010b 	andseq	r0, r3, fp, lsl #2
     4fc:	00280300 	eoreq	r0, r8, r0, lsl #6
     500:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     504:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     508:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     50c:	0500000b 	streq	r0, [r0, #-11]
     510:	0b0b0024 	bleq	2c05a8 <_Min_Heap_Size+0x2bfda8>
     514:	0e030b3e 	vmoveq.16	d3[0], r0
     518:	16060000 	strne	r0, [r6], -r0
     51c:	3a0e0300 	bcc	381124 <_Min_Heap_Size+0x380924>
     520:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     524:	0013490b 	andseq	r4, r3, fp, lsl #18
     528:	00240700 	eoreq	r0, r4, r0, lsl #14
     52c:	0b3e0b0b 	bleq	f83160 <_Min_Heap_Size+0xf82960>
     530:	00000803 	andeq	r0, r0, r3, lsl #16
     534:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
     538:	09000013 	stmdbeq	r0, {r0, r1, r4}
     53c:	13490035 	movtne	r0, #36917	; 0x9035
     540:	010a0000 	mrseq	r0, (UNDEF: 10)
     544:	01134901 	tsteq	r3, r1, lsl #18
     548:	0b000013 	bleq	59c <_Min_Heap_Size-0x264>
     54c:	13490021 	movtne	r0, #36897	; 0x9021
     550:	00000b2f 	andeq	r0, r0, pc, lsr #22
     554:	0b01130c 	bleq	4518c <_Min_Heap_Size+0x4498c>
     558:	3b0b3a0b 	blcc	2ced8c <_Min_Heap_Size+0x2ce58c>
     55c:	010b3905 	tsteq	fp, r5, lsl #18
     560:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     564:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     568:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     56c:	13490b39 	movtne	r0, #39737	; 0x9b39
     570:	00000a38 	andeq	r0, r0, r8, lsr sl
     574:	03000d0e 	movweq	r0, #3342	; 0xd0e
     578:	3b0b3a0e 	blcc	2cedb8 <_Min_Heap_Size+0x2ce5b8>
     57c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     580:	000a3813 	andeq	r3, sl, r3, lsl r8
     584:	00160f00 	andseq	r0, r6, r0, lsl #30
     588:	0b3a0e03 	bleq	e83d9c <_Min_Heap_Size+0xe8359c>
     58c:	0b39053b 	bleq	e41a80 <_Min_Heap_Size+0xe41280>
     590:	00001349 	andeq	r1, r0, r9, asr #6
     594:	0b011310 	bleq	451dc <_Min_Heap_Size+0x449dc>
     598:	3b0b3a0b 	blcc	2cedcc <_Min_Heap_Size+0x2ce5cc>
     59c:	010b390b 	tsteq	fp, fp, lsl #18
     5a0:	11000013 	tstne	r0, r3, lsl r0
     5a4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     5a8:	0b3b0b3a 	bleq	ec3298 <_Min_Heap_Size+0xec2a98>
     5ac:	13490b39 	movtne	r0, #39737	; 0x9b39
     5b0:	00000a38 	andeq	r0, r0, r8, lsr sl
     5b4:	03000d12 	movweq	r0, #3346	; 0xd12
     5b8:	3b0b3a0e 	blcc	2cedf8 <_Min_Heap_Size+0x2ce5f8>
     5bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5c0:	000a3813 	andeq	r3, sl, r3, lsl r8
     5c4:	01131300 	tsteq	r3, r0, lsl #6
     5c8:	0b0b0e03 	bleq	2c3ddc <_Min_Heap_Size+0x2c35dc>
     5cc:	0b3b0b3a 	bleq	ec32bc <_Min_Heap_Size+0xec2abc>
     5d0:	13010b39 	movwne	r0, #6969	; 0x1b39
     5d4:	0f140000 	svceq	0x00140000
     5d8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     5dc:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     5e0:	0b0b000f 	bleq	2c0624 <_Min_Heap_Size+0x2bfe24>
     5e4:	15160000 	ldrne	r0, [r6, #-0]
     5e8:	010c2701 	tsteq	ip, r1, lsl #14
     5ec:	17000013 	smladne	r0, r3, r0, r0
     5f0:	13490005 	movtne	r0, #36869	; 0x9005
     5f4:	34180000 	ldrcc	r0, [r8], #-0
     5f8:	3a0e0300 	bcc	381200 <_Min_Heap_Size+0x380a00>
     5fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     600:	3f13490b 	svccc	0x0013490b
     604:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     608:	00341900 	eorseq	r1, r4, r0, lsl #18
     60c:	0b3a1347 	bleq	e85330 <_Min_Heap_Size+0xe84b30>
     610:	0b390b3b 	bleq	e43304 <_Min_Heap_Size+0xe42b04>
     614:	00000a02 	andeq	r0, r0, r2, lsl #20
     618:	3f012e1a 	svccc	0x00012e1a
     61c:	3a0e030c 	bcc	381254 <_Min_Heap_Size+0x380a54>
     620:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     624:	110c270b 	tstne	ip, fp, lsl #14
     628:	40011201 	andmi	r1, r1, r1, lsl #4
     62c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     630:	00001301 	andeq	r1, r0, r1, lsl #6
     634:	0300051b 	movweq	r0, #1307	; 0x51b
     638:	3b0b3a0e 	blcc	2cee78 <_Min_Heap_Size+0x2ce678>
     63c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     640:	b7060213 	smladlt	r6, r3, r2, r0
     644:	00000642 	andeq	r0, r0, r2, asr #12
     648:	0182891c 	orreq	r8, r2, ip, lsl r9
     64c:	31011101 	tstcc	r1, r1, lsl #2
     650:	00130113 	andseq	r0, r3, r3, lsl r1
     654:	828a1d00 	addhi	r1, sl, #0, 26
     658:	0a020001 	beq	80664 <_Min_Heap_Size+0x7fe64>
     65c:	000a4291 	muleq	sl, r1, r2
     660:	82891e00 	addhi	r1, r9, #0, 28
     664:	01110101 	tsteq	r1, r1, lsl #2
     668:	00001331 	andeq	r1, r0, r1, lsr r3
     66c:	0300341f 	movweq	r3, #1055	; 0x41f
     670:	3b0b3a0e 	blcc	2ceeb0 <_Min_Heap_Size+0x2ce6b0>
     674:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     678:	000a0213 	andeq	r0, sl, r3, lsl r2
     67c:	010b2000 	mrseq	r2, (UNDEF: 11)
     680:	01120111 	tsteq	r2, r1, lsl r1
     684:	00001301 	andeq	r1, r0, r1, lsl #6
     688:	01828921 	orreq	r8, r2, r1, lsr #18
     68c:	31011100 	mrscc	r1, (UNDEF: 17)
     690:	22000013 	andcs	r0, r0, #19
     694:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5e4 <_Min_Heap_Size-0x21c>
     698:	40870c3c 	addmi	r0, r7, ip, lsr ip
     69c:	3a0e030e 	bcc	3812dc <_Min_Heap_Size+0x380adc>
     6a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6a4:	2300000b 	movwcs	r0, #11
     6a8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5f8 <_Min_Heap_Size-0x208>
     6ac:	40870c3c 	addmi	r0, r7, ip, lsr ip
     6b0:	3a0e030e 	bcc	3812f0 <_Min_Heap_Size+0x380af0>
     6b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     6b8:	0000000b 	andeq	r0, r0, fp
     6bc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     6c0:	030b130e 	movweq	r1, #45838	; 0xb30e
     6c4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     6c8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     6cc:	00061001 	andeq	r1, r6, r1
     6d0:	00240200 	eoreq	r0, r4, r0, lsl #4
     6d4:	0b3e0b0b 	bleq	f83308 <_Min_Heap_Size+0xf82b08>
     6d8:	00000e03 	andeq	r0, r0, r3, lsl #28
     6dc:	03001603 	movweq	r1, #1539	; 0x603
     6e0:	3b0b3a0e 	blcc	2cef20 <_Min_Heap_Size+0x2ce720>
     6e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6e8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     6ec:	0b0b0024 	bleq	2c0784 <_Min_Heap_Size+0x2bff84>
     6f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     6f4:	35050000 	strcc	r0, [r5, #-0]
     6f8:	00134900 	andseq	r4, r3, r0, lsl #18
     6fc:	01010600 	tsteq	r1, r0, lsl #12
     700:	13011349 	movwne	r1, #4937	; 0x1349
     704:	21070000 	mrscs	r0, (UNDEF: 7)
     708:	2f134900 	svccs	0x00134900
     70c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     710:	0b0b0113 	bleq	2c0b64 <_Min_Heap_Size+0x2c0364>
     714:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     718:	13010b39 	movwne	r0, #6969	; 0x1b39
     71c:	0d090000 	stceq	0, cr0, [r9, #-0]
     720:	3a080300 	bcc	201328 <_Min_Heap_Size+0x200b28>
     724:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     728:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     72c:	0a00000a 	beq	75c <_Min_Heap_Size-0xa4>
     730:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     734:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     738:	13490b39 	movtne	r0, #39737	; 0x9b39
     73c:	00000a38 	andeq	r0, r0, r8, lsr sl
     740:	0300160b 	movweq	r1, #1547	; 0x60b
     744:	3b0b3a0e 	blcc	2cef84 <_Min_Heap_Size+0x2ce784>
     748:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     74c:	0c000013 	stceq	0, cr0, [r0], {19}
     750:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 6a0 <_Min_Heap_Size-0x160>
     754:	0b3a0e03 	bleq	e83f68 <_Min_Heap_Size+0xe83768>
     758:	0b390b3b 	bleq	e4344c <_Min_Heap_Size+0xe42c4c>
     75c:	01110c27 	tsteq	r1, r7, lsr #24
     760:	06400112 			; <UNDEFINED> instruction: 0x06400112
     764:	000c4297 	muleq	ip, r7, r2
     768:	010b0d00 	tsteq	fp, r0, lsl #26
     76c:	01120111 	tsteq	r2, r1, lsl r1
     770:	00001301 	andeq	r1, r0, r1, lsl #6
     774:	0300340e 	movweq	r3, #1038	; 0x40e
     778:	3b0b3a0e 	blcc	2cefb8 <_Min_Heap_Size+0x2ce7b8>
     77c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     780:	000a0213 	andeq	r0, sl, r3, lsl r2
     784:	010b0f00 	tsteq	fp, r0, lsl #30
     788:	01120111 	tsteq	r2, r1, lsl r1
     78c:	01000000 	mrseq	r0, (UNDEF: 0)
     790:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     794:	0e030b13 	vmoveq.32	d3[0], r0
     798:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     79c:	01520111 	cmpeq	r2, r1, lsl r1
     7a0:	00000610 	andeq	r0, r0, r0, lsl r6
     7a4:	0b002402 	bleq	97b4 <_Min_Heap_Size+0x8fb4>
     7a8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     7ac:	0300000e 	movweq	r0, #14
     7b0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     7b4:	0b3b0b3a 	bleq	ec34a4 <_Min_Heap_Size+0xec2ca4>
     7b8:	13490b39 	movtne	r0, #39737	; 0x9b39
     7bc:	24040000 	strcs	r0, [r4], #-0
     7c0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7c4:	0008030b 	andeq	r0, r8, fp, lsl #6
     7c8:	00260500 	eoreq	r0, r6, r0, lsl #10
     7cc:	00001349 	andeq	r1, r0, r9, asr #6
     7d0:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     7d4:	07000013 	smladeq	r0, r3, r0, r0
     7d8:	0b0b0113 	bleq	2c0c2c <_Min_Heap_Size+0x2c042c>
     7dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     7e0:	13010b39 	movwne	r0, #6969	; 0x1b39
     7e4:	0d080000 	stceq	0, cr0, [r8, #-0]
     7e8:	3a080300 	bcc	2013f0 <_Min_Heap_Size+0x200bf0>
     7ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     7f0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     7f4:	0900000a 	stmdbeq	r0, {r1, r3}
     7f8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     7fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     800:	13490b39 	movtne	r0, #39737	; 0x9b39
     804:	00000a38 	andeq	r0, r0, r8, lsr sl
     808:	0300160a 	movweq	r1, #1546	; 0x60a
     80c:	3b0b3a0e 	blcc	2cf04c <_Min_Heap_Size+0x2ce84c>
     810:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     814:	0b000013 	bleq	868 <_Min_Heap_Size+0x68>
     818:	0b3e0104 	bleq	f80c30 <_Min_Heap_Size+0xf80430>
     81c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     820:	0b3b0b3a 	bleq	ec3510 <_Min_Heap_Size+0xec2d10>
     824:	13010b39 	movwne	r0, #6969	; 0x1b39
     828:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
     82c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     830:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     834:	08030028 	stmdaeq	r3, {r3, r5}
     838:	00000b1c 	andeq	r0, r0, ip, lsl fp
     83c:	0b01130e 	bleq	4547c <_Min_Heap_Size+0x44c7c>
     840:	3b0b3a0b 	blcc	2cf074 <_Min_Heap_Size+0x2ce874>
     844:	010b390b 	tsteq	fp, fp, lsl #18
     848:	0f000013 	svceq	0x00000013
     84c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     850:	0b3b0b3a 	bleq	ec3540 <_Min_Heap_Size+0xec2d40>
     854:	13490b39 	movtne	r0, #39737	; 0x9b39
     858:	00000a38 	andeq	r0, r0, r8, lsr sl
     85c:	03011310 	movweq	r1, #4880	; 0x1310
     860:	3a0b0b0e 	bcc	2c34a0 <_Min_Heap_Size+0x2c2ca0>
     864:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     868:	0013010b 	andseq	r0, r3, fp, lsl #2
     86c:	000f1100 	andeq	r1, pc, r0, lsl #2
     870:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     874:	0f120000 	svceq	0x00120000
     878:	000b0b00 	andeq	r0, fp, r0, lsl #22
     87c:	01151300 	tsteq	r5, r0, lsl #6
     880:	13010c27 	movwne	r0, #7207	; 0x1c27
     884:	05140000 	ldreq	r0, [r4, #-0]
     888:	00134900 	andseq	r4, r3, r0, lsl #18
     88c:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     890:	0b3a0e03 	bleq	e840a4 <_Min_Heap_Size+0xe838a4>
     894:	0b39053b 	bleq	e41d88 <_Min_Heap_Size+0xe41588>
     898:	01110c27 	tsteq	r1, r7, lsr #24
     89c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     8a0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     8a4:	16000013 			; <UNDEFINED> instruction: 0x16000013
     8a8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     8ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     8b4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     8b8:	17000006 	strne	r0, [r0, -r6]
     8bc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     8c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8c4:	13490b39 	movtne	r0, #39737	; 0x9b39
     8c8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     8cc:	18000006 	stmdane	r0, {r1, r2}
     8d0:	01018289 	smlabbeq	r1, r9, r2, r8
     8d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
     8d8:	00001301 	andeq	r1, r0, r1, lsl #6
     8dc:	01828a19 	orreq	r8, r2, r9, lsl sl
     8e0:	910a0200 	mrsls	r0, R10_fiq
     8e4:	00000a42 	andeq	r0, r0, r2, asr #20
     8e8:	0182891a 	orreq	r8, r2, sl, lsl r9
     8ec:	31011100 	mrscc	r1, (UNDEF: 17)
     8f0:	1b000013 	blne	944 <_Min_Heap_Size+0x144>
     8f4:	0e03012e 	adfeqsp	f0, f3, #0.5
     8f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     900:	01111349 	tsteq	r1, r9, asr #6
     904:	06400112 			; <UNDEFINED> instruction: 0x06400112
     908:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     90c:	1c000013 	stcne	0, cr0, [r0], {19}
     910:	0111010b 	tsteq	r1, fp, lsl #2
     914:	13010112 	movwne	r0, #4370	; 0x1112
     918:	341d0000 	ldrcc	r0, [sp], #-0
     91c:	3a080300 	bcc	201524 <_Min_Heap_Size+0x200d24>
     920:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     924:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     928:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     92c:	1d1e0000 	ldcne	0, cr0, [lr, #-0]
     930:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     934:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     938:	01120111 	tsteq	r2, r1, lsl r1
     93c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     940:	13010b57 	movwne	r0, #6999	; 0x1b57
     944:	051f0000 	ldreq	r0, [pc, #-0]	; 94c <_Min_Heap_Size+0x14c>
     948:	02133100 	andseq	r3, r3, #0, 2
     94c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     950:	34200000 	strtcc	r0, [r0], #-0
     954:	02133100 	andseq	r3, r3, #0, 2
     958:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     95c:	1d210000 	stcne	0, cr0, [r1, #-0]
     960:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     964:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     968:	01120111 	tsteq	r2, r1, lsl r1
     96c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     970:	00000b57 	andeq	r0, r0, r7, asr fp
     974:	03003422 	movweq	r3, #1058	; 0x422
     978:	3b0b3a0e 	blcc	2cf1b8 <_Min_Heap_Size+0x2ce9b8>
     97c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     980:	000a0213 	andeq	r0, sl, r3, lsl r2
     984:	82892300 	addhi	r2, r9, #0, 6
     988:	01110101 	tsteq	r1, r1, lsl #2
     98c:	00001331 	andeq	r1, r0, r1, lsr r3
     990:	03012e24 	movweq	r2, #7716	; 0x1e24
     994:	3b0b3a0e 	blcc	2cf1d4 <_Min_Heap_Size+0x2ce9d4>
     998:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     99c:	1113490c 	tstne	r3, ip, lsl #18
     9a0:	40011201 	andmi	r1, r1, r1, lsl #4
     9a4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     9a8:	00001301 	andeq	r1, r0, r1, lsl #6
     9ac:	03012e25 	movweq	r2, #7717	; 0x1e25
     9b0:	3b0b3a0e 	blcc	2cf1f0 <_Min_Heap_Size+0x2ce9f0>
     9b4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     9b8:	1201110c 	andne	r1, r1, #12, 2
     9bc:	970a4001 	strls	r4, [sl, -r1]
     9c0:	13010c42 	movwne	r0, #7234	; 0x1c42
     9c4:	0b260000 	bleq	9809cc <_Min_Heap_Size+0x9801cc>
     9c8:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     9cc:	27000001 	strcs	r0, [r0, -r1]
     9d0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 920 <_Min_Heap_Size+0x120>
     9d4:	0b3a0e03 	bleq	e841e8 <_Min_Heap_Size+0xe839e8>
     9d8:	0b39053b 	bleq	e41ecc <_Min_Heap_Size+0xe416cc>
     9dc:	13490c27 	movtne	r0, #39975	; 0x9c27
     9e0:	01120111 	tsteq	r2, r1, lsl r1
     9e4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     9e8:	0013010c 	andseq	r0, r3, ip, lsl #2
     9ec:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
     9f0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     9f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9f8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     9fc:	01111349 	tsteq	r1, r9, asr #6
     a00:	0a400112 	beq	1000e50 <_Min_Heap_Size+0x1000650>
     a04:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     a08:	29000013 	stmdbcs	r0, {r0, r1, r4}
     a0c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     a10:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a14:	13490b39 	movtne	r0, #39737	; 0x9b39
     a18:	00000a02 	andeq	r0, r0, r2, lsl #20
     a1c:	3f012e2a 	svccc	0x00012e2a
     a20:	3a0e030c 	bcc	381658 <_Min_Heap_Size+0x380e58>
     a24:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a28:	110c270b 	tstne	ip, fp, lsl #14
     a2c:	40011201 	andmi	r1, r1, r1, lsl #4
     a30:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     a34:	00001301 	andeq	r1, r0, r1, lsl #6
     a38:	3f012e2b 	svccc	0x00012e2b
     a3c:	3a0e030c 	bcc	381674 <_Min_Heap_Size+0x380e74>
     a40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a44:	110c270b 	tstne	ip, fp, lsl #14
     a48:	40011201 	andmi	r1, r1, r1, lsl #4
     a4c:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     a50:	00001301 	andeq	r1, r0, r1, lsl #6
     a54:	3f012e2c 	svccc	0x00012e2c
     a58:	3a0e030c 	bcc	381690 <_Min_Heap_Size+0x380e90>
     a5c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a60:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a64:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a68:	96064001 	strls	r4, [r6], -r1
     a6c:	13010c42 	movwne	r0, #7234	; 0x1c42
     a70:	0b2d0000 	bleq	b40a78 <_Min_Heap_Size+0xb40278>
     a74:	01065501 	tsteq	r6, r1, lsl #10
     a78:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     a7c:	0e03012e 	adfeqsp	f0, f3, #0.5
     a80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a84:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a88:	0b201349 	bleq	8057b4 <_Min_Heap_Size+0x804fb4>
     a8c:	00001301 	andeq	r1, r0, r1, lsl #6
     a90:	0300052f 	movweq	r0, #1327	; 0x52f
     a94:	3b0b3a0e 	blcc	2cf2d4 <_Min_Heap_Size+0x2cead4>
     a98:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a9c:	30000013 	andcc	r0, r0, r3, lsl r0
     aa0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     aa4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     aa8:	13490b39 	movtne	r0, #39737	; 0x9b39
     aac:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
     ab0:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     ab4:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     ab8:	0b3a0e03 	bleq	e842cc <_Min_Heap_Size+0xe83acc>
     abc:	0b39053b 	bleq	e41fb0 <_Min_Heap_Size+0xe417b0>
     ac0:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
     ac4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     ac8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     acc:	00000e03 	andeq	r0, r0, r3, lsl #28
     ad0:	3f002e33 	svccc	0x00002e33
     ad4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     ad8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     adc:	0b3b0b3a 	bleq	ec37cc <_Min_Heap_Size+0xec2fcc>
     ae0:	00000b39 	andeq	r0, r0, r9, lsr fp
     ae4:	01110100 	tsteq	r1, r0, lsl #2
     ae8:	0b130e25 	bleq	4c4384 <_Min_Heap_Size+0x4c3b84>
     aec:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     af0:	01110655 	tsteq	r1, r5, asr r6
     af4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     af8:	24020000 	strcs	r0, [r2], #-0
     afc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     b00:	000e030b 	andeq	r0, lr, fp, lsl #6
     b04:	00160300 	andseq	r0, r6, r0, lsl #6
     b08:	0b3a0e03 	bleq	e8431c <_Min_Heap_Size+0xe83b1c>
     b0c:	0b390b3b 	bleq	e43800 <_Min_Heap_Size+0xe43000>
     b10:	00001349 	andeq	r1, r0, r9, asr #6
     b14:	0b002404 	bleq	9b2c <_Min_Heap_Size+0x932c>
     b18:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b1c:	05000008 	streq	r0, [r0, #-8]
     b20:	13490026 	movtne	r0, #36902	; 0x9026
     b24:	35060000 	strcc	r0, [r6, #-0]
     b28:	00134900 	andseq	r4, r3, r0, lsl #18
     b2c:	01010700 	tsteq	r1, r0, lsl #14
     b30:	13011349 	movwne	r1, #4937	; 0x1349
     b34:	21080000 	mrscs	r0, (UNDEF: 8)
     b38:	2f134900 	svccs	0x00134900
     b3c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     b40:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     b44:	0b3b0b3a 	bleq	ec3834 <_Min_Heap_Size+0xec3034>
     b48:	13490b39 	movtne	r0, #39737	; 0x9b39
     b4c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     b50:	130a0000 	movwne	r0, #40960	; 0xa000
     b54:	3a0b0b01 	bcc	2c3760 <_Min_Heap_Size+0x2c2f60>
     b58:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b5c:	0013010b 	andseq	r0, r3, fp, lsl #2
     b60:	000d0b00 	andeq	r0, sp, r0, lsl #22
     b64:	0b3a0803 	bleq	e82b78 <_Min_Heap_Size+0xe82378>
     b68:	0b39053b 	bleq	e4205c <_Min_Heap_Size+0xe4185c>
     b6c:	0a381349 	beq	e05898 <_Min_Heap_Size+0xe05098>
     b70:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     b74:	3a0e0300 	bcc	38177c <_Min_Heap_Size+0x380f7c>
     b78:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b7c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     b80:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
     b84:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b8c:	13490b39 	movtne	r0, #39737	; 0x9b39
     b90:	040e0000 	streq	r0, [lr], #-0
     b94:	0b0b3e01 	bleq	2d03a0 <_Min_Heap_Size+0x2cfba0>
     b98:	3a13490b 	bcc	4d2fcc <_Min_Heap_Size+0x4d27cc>
     b9c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ba0:	0013010b 	andseq	r0, r3, fp, lsl #2
     ba4:	00280f00 	eoreq	r0, r8, r0, lsl #30
     ba8:	0b1c0e03 	bleq	7043bc <_Min_Heap_Size+0x703bbc>
     bac:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
     bb0:	1c080300 	stcne	3, cr0, [r8], {-0}
     bb4:	1100000b 	tstne	r0, fp
     bb8:	0b0b0113 	bleq	2c100c <_Min_Heap_Size+0x2c080c>
     bbc:	0b3b0b3a 	bleq	ec38ac <_Min_Heap_Size+0xec30ac>
     bc0:	13010b39 	movwne	r0, #6969	; 0x1b39
     bc4:	0d120000 	ldceq	0, cr0, [r2, #-0]
     bc8:	3a0e0300 	bcc	3817d0 <_Min_Heap_Size+0x380fd0>
     bcc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     bd0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     bd4:	1300000a 	movwne	r0, #10
     bd8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     bdc:	0b3b0b3a 	bleq	ec38cc <_Min_Heap_Size+0xec30cc>
     be0:	13490b39 	movtne	r0, #39737	; 0x9b39
     be4:	00000a38 	andeq	r0, r0, r8, lsr sl
     be8:	3f002e14 	svccc	0x00002e14
     bec:	3a0e030c 	bcc	381824 <_Min_Heap_Size+0x381024>
     bf0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     bf4:	110c270b 	tstne	ip, fp, lsl #14
     bf8:	40011201 	andmi	r1, r1, r1, lsl #4
     bfc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     c00:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     c04:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c08:	3b0b3a0e 	blcc	2cf448 <_Min_Heap_Size+0x2cec48>
     c0c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c10:	1201110c 	andne	r1, r1, #12, 2
     c14:	97064001 	strls	r4, [r6, -r1]
     c18:	13010c42 	movwne	r0, #7234	; 0x1c42
     c1c:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     c20:	11000182 	smlabbne	r0, r2, r1, r0
     c24:	00133101 	andseq	r3, r3, r1, lsl #2
     c28:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     c2c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c30:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c34:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c38:	01120111 	tsteq	r2, r1, lsl r1
     c3c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     c40:	0013010c 	andseq	r0, r3, ip, lsl #2
     c44:	00051800 	andeq	r1, r5, r0, lsl #16
     c48:	0b3a0e03 	bleq	e8445c <_Min_Heap_Size+0xe83c5c>
     c4c:	0b39053b 	bleq	e42140 <_Min_Heap_Size+0xe41940>
     c50:	0a021349 	beq	8597c <_Min_Heap_Size+0x8517c>
     c54:	0f190000 	svceq	0x00190000
     c58:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     c5c:	1a000013 	bne	cb0 <_Min_Heap_Size+0x4b0>
     c60:	0c3f012e 	ldfeqs	f0, [pc], #-184	; bb0 <_Min_Heap_Size+0x3b0>
     c64:	0b3a0e03 	bleq	e84478 <_Min_Heap_Size+0xe83c78>
     c68:	0b39053b 	bleq	e4215c <_Min_Heap_Size+0xe4195c>
     c6c:	13490c27 	movtne	r0, #39975	; 0x9c27
     c70:	01120111 	tsteq	r2, r1, lsl r1
     c74:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     c78:	0013010c 	andseq	r0, r3, ip, lsl #2
     c7c:	002e1b00 	eoreq	r1, lr, r0, lsl #22
     c80:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c88:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c8c:	01111349 	tsteq	r1, r9, asr #6
     c90:	0a400112 	beq	10010e0 <_Min_Heap_Size+0x10008e0>
     c94:	000c4297 	muleq	ip, r7, r2
     c98:	00341c00 	eorseq	r1, r4, r0, lsl #24
     c9c:	0b3a0e03 	bleq	e844b0 <_Min_Heap_Size+0xe83cb0>
     ca0:	0b39053b 	bleq	e42194 <_Min_Heap_Size+0xe41994>
     ca4:	06021349 	streq	r1, [r2], -r9, asr #6
     ca8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     cac:	00051d00 	andeq	r1, r5, r0, lsl #26
     cb0:	0b3a0e03 	bleq	e844c4 <_Min_Heap_Size+0xe83cc4>
     cb4:	0b39053b 	bleq	e421a8 <_Min_Heap_Size+0xe419a8>
     cb8:	06021349 	streq	r1, [r2], -r9, asr #6
     cbc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     cc0:	00341e00 	eorseq	r1, r4, r0, lsl #28
     cc4:	0b3a0e03 	bleq	e844d8 <_Min_Heap_Size+0xe83cd8>
     cc8:	0b39053b 	bleq	e421bc <_Min_Heap_Size+0xe419bc>
     ccc:	0a021349 	beq	859f8 <_Min_Heap_Size+0x851f8>
     cd0:	0b1f0000 	bleq	7c0cd8 <_Min_Heap_Size+0x7c04d8>
     cd4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     cd8:	00130101 	andseq	r0, r3, r1, lsl #2
     cdc:	82892000 	addhi	r2, r9, #0
     ce0:	01110101 	tsteq	r1, r1, lsl #2
     ce4:	13011331 	movwne	r1, #4913	; 0x1331
     ce8:	8a210000 	bhi	840cf0 <_Min_Heap_Size+0x8404f0>
     cec:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     cf0:	0a42910a 	beq	10a5120 <_Min_Heap_Size+0x10a4920>
     cf4:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
     cf8:	11010182 	smlabbne	r1, r2, r1, r0
     cfc:	00133101 	andseq	r3, r3, r1, lsl #2
     d00:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     d04:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     d08:	0b3b0b3a 	bleq	ec39f8 <_Min_Heap_Size+0xec31f8>
     d0c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     d10:	01111349 	tsteq	r1, r9, asr #6
     d14:	06400112 			; <UNDEFINED> instruction: 0x06400112
     d18:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     d1c:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     d20:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     d24:	0b3b0b3a 	bleq	ec3a14 <_Min_Heap_Size+0xec3214>
     d28:	13490b39 	movtne	r0, #39737	; 0x9b39
     d2c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d30:	25000006 	strcs	r0, [r0, #-6]
     d34:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d38:	0b3b0b3a 	bleq	ec3a28 <_Min_Heap_Size+0xec3228>
     d3c:	13490b39 	movtne	r0, #39737	; 0x9b39
     d40:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d44:	26000006 	strcs	r0, [r0], -r6
     d48:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     d4c:	00001301 	andeq	r1, r0, r1, lsl #6
     d50:	3f002e27 	svccc	0x00002e27
     d54:	3a0e030c 	bcc	38198c <_Min_Heap_Size+0x38118c>
     d58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d5c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     d60:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d64:	970a4001 	strls	r4, [sl, -r1]
     d68:	00000c42 	andeq	r0, r0, r2, asr #24
     d6c:	3f002e28 	svccc	0x00002e28
     d70:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     d74:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     d78:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     d7c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     d80:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     d84:	0b3a0e03 	bleq	e84598 <_Min_Heap_Size+0xe83d98>
     d88:	0b390b3b 	bleq	e43a7c <_Min_Heap_Size+0xe4327c>
     d8c:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
     d90:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     d94:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     d98:	0b3a0e03 	bleq	e845ac <_Min_Heap_Size+0xe83dac>
     d9c:	0b39053b 	bleq	e42290 <_Min_Heap_Size+0xe41a90>
     da0:	01000000 	mrseq	r0, (UNDEF: 0)
     da4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     da8:	0e030b13 	vmoveq.32	d3[0], r0
     dac:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     db0:	01520111 	cmpeq	r2, r1, lsl r1
     db4:	00000610 	andeq	r0, r0, r0, lsl r6
     db8:	0b002402 	bleq	9dc8 <_Min_Heap_Size+0x95c8>
     dbc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     dc0:	0300000e 	movweq	r0, #14
     dc4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     dc8:	0b3b0b3a 	bleq	ec3ab8 <_Min_Heap_Size+0xec32b8>
     dcc:	13490b39 	movtne	r0, #39737	; 0x9b39
     dd0:	24040000 	strcs	r0, [r4], #-0
     dd4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     dd8:	0008030b 	andeq	r0, r8, fp, lsl #6
     ddc:	00350500 	eorseq	r0, r5, r0, lsl #10
     de0:	00001349 	andeq	r1, r0, r9, asr #6
     de4:	49010106 	stmdbmi	r1, {r1, r2, r8}
     de8:	00130113 	andseq	r0, r3, r3, lsl r1
     dec:	00210700 	eoreq	r0, r1, r0, lsl #14
     df0:	0b2f1349 	bleq	bc5b1c <_Min_Heap_Size+0xbc531c>
     df4:	13080000 	movwne	r0, #32768	; 0x8000
     df8:	3a0b0b01 	bcc	2c3a04 <_Min_Heap_Size+0x2c3204>
     dfc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e00:	0013010b 	andseq	r0, r3, fp, lsl #2
     e04:	000d0900 	andeq	r0, sp, r0, lsl #18
     e08:	0b3a0803 	bleq	e82e1c <_Min_Heap_Size+0xe8261c>
     e0c:	0b39053b 	bleq	e42300 <_Min_Heap_Size+0xe41b00>
     e10:	0a381349 	beq	e05b3c <_Min_Heap_Size+0xe0533c>
     e14:	0d0a0000 	stceq	0, cr0, [sl, #-0]
     e18:	3a0e0300 	bcc	381a20 <_Min_Heap_Size+0x381220>
     e1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e20:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e24:	0b00000a 	bleq	e54 <_Min_Heap_Size+0x654>
     e28:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     e2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e30:	13490b39 	movtne	r0, #39737	; 0x9b39
     e34:	040c0000 	streq	r0, [ip], #-0
     e38:	0b0b3e01 	bleq	2d0644 <_Min_Heap_Size+0x2cfe44>
     e3c:	3a13490b 	bcc	4d3270 <_Min_Heap_Size+0x4d2a70>
     e40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e44:	0013010b 	andseq	r0, r3, fp, lsl #2
     e48:	00280d00 	eoreq	r0, r8, r0, lsl #26
     e4c:	0b1c0e03 	bleq	704660 <_Min_Heap_Size+0x703e60>
     e50:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
     e54:	1c080300 	stcne	3, cr0, [r8], {-0}
     e58:	0f00000b 	svceq	0x0000000b
     e5c:	0b0b0113 	bleq	2c12b0 <_Min_Heap_Size+0x2c0ab0>
     e60:	0b3b0b3a 	bleq	ec3b50 <_Min_Heap_Size+0xec3350>
     e64:	13010b39 	movwne	r0, #6969	; 0x1b39
     e68:	0d100000 	ldceq	0, cr0, [r0, #-0]
     e6c:	3a080300 	bcc	201a74 <_Min_Heap_Size+0x201274>
     e70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e74:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e78:	1100000a 	tstne	r0, sl
     e7c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e80:	0b3b0b3a 	bleq	ec3b70 <_Min_Heap_Size+0xec3370>
     e84:	13490b39 	movtne	r0, #39737	; 0x9b39
     e88:	00000a38 	andeq	r0, r0, r8, lsr sl
     e8c:	3f012e12 	svccc	0x00012e12
     e90:	3a0e030c 	bcc	381ac8 <_Min_Heap_Size+0x3812c8>
     e94:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e98:	110c270b 	tstne	ip, fp, lsl #14
     e9c:	40011201 	andmi	r1, r1, r1, lsl #4
     ea0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     ea4:	00001301 	andeq	r1, r0, r1, lsl #6
     ea8:	03000513 	movweq	r0, #1299	; 0x513
     eac:	3b0b3a0e 	blcc	2cf6ec <_Min_Heap_Size+0x2ceeec>
     eb0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     eb4:	000a0213 	andeq	r0, sl, r3, lsl r2
     eb8:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
     ebc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ec0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ec4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ec8:	01120111 	tsteq	r2, r1, lsl r1
     ecc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     ed0:	0013010c 	andseq	r0, r3, ip, lsl #2
     ed4:	00051500 	andeq	r1, r5, r0, lsl #10
     ed8:	0b3a0e03 	bleq	e846ec <_Min_Heap_Size+0xe83eec>
     edc:	0b39053b 	bleq	e423d0 <_Min_Heap_Size+0xe41bd0>
     ee0:	06021349 	streq	r1, [r2], -r9, asr #6
     ee4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     ee8:	82891600 	addhi	r1, r9, #0, 12
     eec:	01110001 	tsteq	r1, r1
     ef0:	00001331 	andeq	r1, r0, r1, lsr r3
     ef4:	3f012e17 	svccc	0x00012e17
     ef8:	3a0e030c 	bcc	381b30 <_Min_Heap_Size+0x381330>
     efc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f00:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     f04:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     f08:	97064001 	strls	r4, [r6, -r1]
     f0c:	13010c42 	movwne	r0, #7234	; 0x1c42
     f10:	34180000 	ldrcc	r0, [r8], #-0
     f14:	3a080300 	bcc	201b1c <_Min_Heap_Size+0x20131c>
     f18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f1c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     f20:	1900000a 	stmdbne	r0, {r1, r3}
     f24:	01018289 	smlabbeq	r1, r9, r2, r8
     f28:	13310111 	teqne	r1, #1073741828	; 0x40000004
     f2c:	8a1a0000 	bhi	680f34 <_Min_Heap_Size+0x680734>
     f30:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     f34:	0a42910a 	beq	10a5364 <_Min_Heap_Size+0x10a4b64>
     f38:	0f1b0000 	svceq	0x001b0000
     f3c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     f40:	1c000013 	stcne	0, cr0, [r0], {19}
     f44:	08030034 	stmdaeq	r3, {r2, r4, r5}
     f48:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f4c:	13490b39 	movtne	r0, #39737	; 0x9b39
     f50:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     f54:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
     f58:	01018289 	smlabbeq	r1, r9, r2, r8
     f5c:	13310111 	teqne	r1, #1073741828	; 0x40000004
     f60:	00001301 	andeq	r1, r0, r1, lsl #6
     f64:	0300341e 	movweq	r3, #1054	; 0x41e
     f68:	3b0b3a0e 	blcc	2cf7a8 <_Min_Heap_Size+0x2cefa8>
     f6c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f70:	b7060213 	smladlt	r6, r3, r2, r0
     f74:	00000642 	andeq	r0, r0, r2, asr #12
     f78:	3f012e1f 	svccc	0x00012e1f
     f7c:	3a0e030c 	bcc	381bb4 <_Min_Heap_Size+0x3813b4>
     f80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f84:	110c270b 	tstne	ip, fp, lsl #14
     f88:	40011201 	andmi	r1, r1, r1, lsl #4
     f8c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     f90:	00001301 	andeq	r1, r0, r1, lsl #6
     f94:	03000520 	movweq	r0, #1312	; 0x520
     f98:	3b0b3a0e 	blcc	2cf7d8 <_Min_Heap_Size+0x2cefd8>
     f9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     fa0:	b7060213 	smladlt	r6, r3, r2, r0
     fa4:	00000642 	andeq	r0, r0, r2, asr #12
     fa8:	03003421 	movweq	r3, #1057	; 0x421
     fac:	3b0b3a0e 	blcc	2cf7ec <_Min_Heap_Size+0x2cefec>
     fb0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     fb4:	b7060213 	smladlt	r6, r3, r2, r0
     fb8:	00000642 	andeq	r0, r0, r2, asr #12
     fbc:	11010b22 	tstne	r1, r2, lsr #22
     fc0:	01011201 	tsteq	r1, r1, lsl #4
     fc4:	23000013 	movwcs	r0, #19
     fc8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     fcc:	0b3b0b3a 	bleq	ec3cbc <_Min_Heap_Size+0xec34bc>
     fd0:	13490b39 	movtne	r0, #39737	; 0x9b39
     fd4:	00000a02 	andeq	r0, r0, r2, lsl #20
     fd8:	3f002e24 	svccc	0x00002e24
     fdc:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     fe0:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     fe4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fe8:	00000b39 	andeq	r0, r0, r9, lsr fp
     fec:	01110100 	tsteq	r1, r0, lsl #2
     ff0:	0b130e25 	bleq	4c488c <_Min_Heap_Size+0x4c408c>
     ff4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     ff8:	01110655 	tsteq	r1, r5, asr r6
     ffc:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1000:	24020000 	strcs	r0, [r2], #-0
    1004:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1008:	000e030b 	andeq	r0, lr, fp, lsl #6
    100c:	00160300 	andseq	r0, r6, r0, lsl #6
    1010:	0b3a0e03 	bleq	e84824 <_Min_Heap_Size+0xe84024>
    1014:	0b390b3b 	bleq	e43d08 <_Min_Heap_Size+0xe43508>
    1018:	00001349 	andeq	r1, r0, r9, asr #6
    101c:	0b002404 	bleq	a034 <_Min_Heap_Size+0x9834>
    1020:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1024:	05000008 	streq	r0, [r0, #-8]
    1028:	13490026 	movtne	r0, #36902	; 0x9026
    102c:	35060000 	strcc	r0, [r6, #-0]
    1030:	00134900 	andseq	r4, r3, r0, lsl #18
    1034:	00340700 	eorseq	r0, r4, r0, lsl #14
    1038:	0b3a0e03 	bleq	e8484c <_Min_Heap_Size+0xe8404c>
    103c:	0b390b3b 	bleq	e43d30 <_Min_Heap_Size+0xe43530>
    1040:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; f24 <_Min_Heap_Size+0x724>
    1044:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1048:	49010108 	stmdbmi	r1, {r3, r8}
    104c:	00130113 	andseq	r0, r3, r3, lsl r1
    1050:	00210900 	eoreq	r0, r1, r0, lsl #18
    1054:	0b2f1349 	bleq	bc5d80 <_Min_Heap_Size+0xbc5580>
    1058:	130a0000 	movwne	r0, #40960	; 0xa000
    105c:	3a0b0b01 	bcc	2c3c68 <_Min_Heap_Size+0x2c3468>
    1060:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1064:	0013010b 	andseq	r0, r3, fp, lsl #2
    1068:	000d0b00 	andeq	r0, sp, r0, lsl #22
    106c:	0b3a0803 	bleq	e83080 <_Min_Heap_Size+0xe82880>
    1070:	0b39053b 	bleq	e42564 <_Min_Heap_Size+0xe41d64>
    1074:	0a381349 	beq	e05da0 <_Min_Heap_Size+0xe055a0>
    1078:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    107c:	3a0e0300 	bcc	381c84 <_Min_Heap_Size+0x381484>
    1080:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1084:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1088:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    108c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1090:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1094:	13490b39 	movtne	r0, #39737	; 0x9b39
    1098:	040e0000 	streq	r0, [lr], #-0
    109c:	0b0b3e01 	bleq	2d08a8 <_Min_Heap_Size+0x2d00a8>
    10a0:	3a13490b 	bcc	4d34d4 <_Min_Heap_Size+0x4d2cd4>
    10a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    10ac:	00280f00 	eoreq	r0, r8, r0, lsl #30
    10b0:	0b1c0e03 	bleq	7048c4 <_Min_Heap_Size+0x7040c4>
    10b4:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    10b8:	1c080300 	stcne	3, cr0, [r8], {-0}
    10bc:	1100000b 	tstne	r0, fp
    10c0:	0b0b0113 	bleq	2c1514 <_Min_Heap_Size+0x2c0d14>
    10c4:	0b3b0b3a 	bleq	ec3db4 <_Min_Heap_Size+0xec35b4>
    10c8:	13010b39 	movwne	r0, #6969	; 0x1b39
    10cc:	0d120000 	ldceq	0, cr0, [r2, #-0]
    10d0:	3a0e0300 	bcc	381cd8 <_Min_Heap_Size+0x3814d8>
    10d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10d8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    10dc:	1300000a 	movwne	r0, #10
    10e0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    10e4:	0b3a0b0b 	bleq	e83d18 <_Min_Heap_Size+0xe83518>
    10e8:	0b390b3b 	bleq	e43ddc <_Min_Heap_Size+0xe435dc>
    10ec:	00001301 	andeq	r1, r0, r1, lsl #6
    10f0:	0b000f14 	bleq	4d48 <_Min_Heap_Size+0x4548>
    10f4:	0013490b 	andseq	r4, r3, fp, lsl #18
    10f8:	000f1500 	andeq	r1, pc, r0, lsl #10
    10fc:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1100:	27011516 	smladcs	r1, r6, r5, r1
    1104:	0013010c 	andseq	r0, r3, ip, lsl #2
    1108:	00051700 	andeq	r1, r5, r0, lsl #14
    110c:	00001349 	andeq	r1, r0, r9, asr #6
    1110:	03000d18 	movweq	r0, #3352	; 0xd18
    1114:	3b0b3a08 	blcc	2cf93c <_Min_Heap_Size+0x2cf13c>
    1118:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    111c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1120:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    1124:	0b3a0e03 	bleq	e84938 <_Min_Heap_Size+0xe84138>
    1128:	0b39053b 	bleq	e4261c <_Min_Heap_Size+0xe41e1c>
    112c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1130:	01120111 	tsteq	r2, r1, lsl r1
    1134:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1138:	0013010c 	andseq	r0, r3, ip, lsl #2
    113c:	00051a00 	andeq	r1, r5, r0, lsl #20
    1140:	0b3a0e03 	bleq	e84954 <_Min_Heap_Size+0xe84154>
    1144:	0b39053b 	bleq	e42638 <_Min_Heap_Size+0xe41e38>
    1148:	06021349 	streq	r1, [r2], -r9, asr #6
    114c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1150:	00341b00 	eorseq	r1, r4, r0, lsl #22
    1154:	0b3a0e03 	bleq	e84968 <_Min_Heap_Size+0xe84168>
    1158:	0b39053b 	bleq	e4264c <_Min_Heap_Size+0xe41e4c>
    115c:	06021349 	streq	r1, [r2], -r9, asr #6
    1160:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1164:	00341c00 	eorseq	r1, r4, r0, lsl #24
    1168:	0b3a0803 	bleq	e8317c <_Min_Heap_Size+0xe8297c>
    116c:	0b39053b 	bleq	e42660 <_Min_Heap_Size+0xe41e60>
    1170:	06021349 	streq	r1, [r2], -r9, asr #6
    1174:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1178:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    117c:	0b3a0e03 	bleq	e84990 <_Min_Heap_Size+0xe84190>
    1180:	0b39053b 	bleq	e42674 <_Min_Heap_Size+0xe41e74>
    1184:	13490c27 	movtne	r0, #39975	; 0x9c27
    1188:	01120111 	tsteq	r2, r1, lsl r1
    118c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1190:	0013010c 	andseq	r0, r3, ip, lsl #2
    1194:	00341e00 	eorseq	r1, r4, r0, lsl #28
    1198:	0b3a0e03 	bleq	e849ac <_Min_Heap_Size+0xe841ac>
    119c:	0b39053b 	bleq	e42690 <_Min_Heap_Size+0xe41e90>
    11a0:	0a021349 	beq	85ecc <_Min_Heap_Size+0x856cc>
    11a4:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    11a8:	3a0e0301 	bcc	381db4 <_Min_Heap_Size+0x3815b4>
    11ac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11b0:	110c270b 	tstne	ip, fp, lsl #14
    11b4:	40011201 	andmi	r1, r1, r1, lsl #4
    11b8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    11bc:	00001301 	andeq	r1, r0, r1, lsl #6
    11c0:	03000520 	movweq	r0, #1312	; 0x520
    11c4:	3b0b3a0e 	blcc	2cfa04 <_Min_Heap_Size+0x2cf204>
    11c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    11cc:	000a0213 	andeq	r0, sl, r3, lsl r2
    11d0:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    11d4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    11d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11dc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    11e0:	01111349 	tsteq	r1, r9, asr #6
    11e4:	0a400112 	beq	1001634 <_Min_Heap_Size+0x1000e34>
    11e8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    11ec:	22000013 	andcs	r0, r0, #19
    11f0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1140 <_Min_Heap_Size+0x940>
    11f4:	0b3a0e03 	bleq	e84a08 <_Min_Heap_Size+0xe84208>
    11f8:	0b39053b 	bleq	e426ec <_Min_Heap_Size+0xe41eec>
    11fc:	01110c27 	tsteq	r1, r7, lsr #24
    1200:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1204:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1208:	23000013 	movwcs	r0, #19
    120c:	01018289 	smlabbeq	r1, r9, r2, r8
    1210:	13010111 	movwne	r0, #4369	; 0x1111
    1214:	8a240000 	bhi	90121c <_Min_Heap_Size+0x900a1c>
    1218:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    121c:	0a42910a 	beq	10a564c <_Min_Heap_Size+0x10a4e4c>
    1220:	89250000 	stmdbhi	r5!, {}	; <UNPREDICTABLE>
    1224:	11010182 	smlabbne	r1, r2, r1, r0
    1228:	26000001 	strcs	r0, [r0], -r1
    122c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 117c <_Min_Heap_Size+0x97c>
    1230:	0b3a0e03 	bleq	e84a44 <_Min_Heap_Size+0xe84244>
    1234:	0b39053b 	bleq	e42728 <_Min_Heap_Size+0xe41f28>
    1238:	13490c27 	movtne	r0, #39975	; 0x9c27
    123c:	01120111 	tsteq	r2, r1, lsl r1
    1240:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1244:	0013010c 	andseq	r0, r3, ip, lsl #2
    1248:	00342700 	eorseq	r2, r4, r0, lsl #14
    124c:	0b3a0e03 	bleq	e84a60 <_Min_Heap_Size+0xe84260>
    1250:	0b39053b 	bleq	e42744 <_Min_Heap_Size+0xe41f44>
    1254:	0b1c1349 	bleq	705f80 <_Min_Heap_Size+0x705780>
    1258:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
    125c:	11000182 	smlabbne	r0, r2, r1, r0
    1260:	00133101 	andseq	r3, r3, r1, lsl #2
    1264:	82892900 	addhi	r2, r9, #0, 18
    1268:	01110101 	tsteq	r1, r1, lsl #2
    126c:	00001331 	andeq	r1, r0, r1, lsr r3
    1270:	0182892a 	orreq	r8, r2, sl, lsr #18
    1274:	31011101 	tstcc	r1, r1, lsl #2
    1278:	00130113 	andseq	r0, r3, r3, lsl r1
    127c:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    1280:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1284:	0b3b0b3a 	bleq	ec3f74 <_Min_Heap_Size+0xec3774>
    1288:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    128c:	01111349 	tsteq	r1, r9, asr #6
    1290:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1294:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1298:	2c000013 	stccs	0, cr0, [r0], {19}
    129c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    12a0:	0b3b0b3a 	bleq	ec3f90 <_Min_Heap_Size+0xec3790>
    12a4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12a8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    12ac:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    12b0:	08030034 	stmdaeq	r3, {r2, r4, r5}
    12b4:	0b3b0b3a 	bleq	ec3fa4 <_Min_Heap_Size+0xec37a4>
    12b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    12bc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    12c0:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    12c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    12c8:	0b3b0b3a 	bleq	ec3fb8 <_Min_Heap_Size+0xec37b8>
    12cc:	13490b39 	movtne	r0, #39737	; 0x9b39
    12d0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    12d4:	2f000006 	svccs	0x00000006
    12d8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1228 <_Min_Heap_Size+0xa28>
    12dc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    12e0:	3a0e030e 	bcc	381f20 <_Min_Heap_Size+0x381720>
    12e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12e8:	3000000b 	andcc	r0, r0, fp
    12ec:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 123c <_Min_Heap_Size+0xa3c>
    12f0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    12f4:	3a0e030e 	bcc	381f34 <_Min_Heap_Size+0x381734>
    12f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    12fc:	0000000b 	andeq	r0, r0, fp
    1300:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1304:	030b130e 	movweq	r1, #45838	; 0xb30e
    1308:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    130c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1310:	00061001 	andeq	r1, r6, r1
    1314:	01040200 	mrseq	r0, R12_usr
    1318:	0b0b0b3e 	bleq	2c4018 <_Min_Heap_Size+0x2c3818>
    131c:	0b3a1349 	bleq	e86048 <_Min_Heap_Size+0xe85848>
    1320:	0b390b3b 	bleq	e44014 <_Min_Heap_Size+0xe43814>
    1324:	00001301 	andeq	r1, r0, r1, lsl #6
    1328:	03002803 	movweq	r2, #2051	; 0x803
    132c:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    1330:	00280400 	eoreq	r0, r8, r0, lsl #8
    1334:	0b1c0e03 	bleq	704b48 <_Min_Heap_Size+0x704348>
    1338:	24050000 	strcs	r0, [r5], #-0
    133c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1340:	000e030b 	andeq	r0, lr, fp, lsl #6
    1344:	00160600 	andseq	r0, r6, r0, lsl #12
    1348:	0b3a0e03 	bleq	e84b5c <_Min_Heap_Size+0xe8435c>
    134c:	0b390b3b 	bleq	e44040 <_Min_Heap_Size+0xe43840>
    1350:	00001349 	andeq	r1, r0, r9, asr #6
    1354:	0b002407 	bleq	a378 <_Min_Heap_Size+0x9b78>
    1358:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    135c:	08000008 	stmdaeq	r0, {r3}
    1360:	13490035 	movtne	r0, #36917	; 0x9035
    1364:	26090000 	strcs	r0, [r9], -r0
    1368:	00134900 	andseq	r4, r3, r0, lsl #18
    136c:	01130a00 	tsteq	r3, r0, lsl #20
    1370:	0b3a050b 	bleq	e827a4 <_Min_Heap_Size+0xe81fa4>
    1374:	0b39053b 	bleq	e42868 <_Min_Heap_Size+0xe42068>
    1378:	00001301 	andeq	r1, r0, r1, lsl #6
    137c:	03000d0b 	movweq	r0, #3339	; 0xd0b
    1380:	3b0b3a0e 	blcc	2cfbc0 <_Min_Heap_Size+0x2cf3c0>
    1384:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1388:	000a3813 	andeq	r3, sl, r3, lsl r8
    138c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1390:	0b3a0803 	bleq	e833a4 <_Min_Heap_Size+0xe82ba4>
    1394:	0b39053b 	bleq	e42888 <_Min_Heap_Size+0xe42088>
    1398:	0a381349 	beq	e060c4 <_Min_Heap_Size+0xe058c4>
    139c:	010d0000 	mrseq	r0, (UNDEF: 13)
    13a0:	01134901 	tsteq	r3, r1, lsl #18
    13a4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    13a8:	13490021 	movtne	r0, #36897	; 0x9021
    13ac:	00000b2f 	andeq	r0, r0, pc, lsr #22
    13b0:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    13b4:	00052f13 	andeq	r2, r5, r3, lsl pc
    13b8:	00161000 	andseq	r1, r6, r0
    13bc:	0b3a0e03 	bleq	e84bd0 <_Min_Heap_Size+0xe843d0>
    13c0:	0b39053b 	bleq	e428b4 <_Min_Heap_Size+0xe420b4>
    13c4:	00001349 	andeq	r1, r0, r9, asr #6
    13c8:	0b011311 	bleq	46014 <_Min_Heap_Size+0x45814>
    13cc:	3b0b3a0b 	blcc	2cfc00 <_Min_Heap_Size+0x2cf400>
    13d0:	010b3905 	tsteq	fp, r5, lsl #18
    13d4:	12000013 	andne	r0, r0, #19
    13d8:	08030028 	stmdaeq	r3, {r3, r5}
    13dc:	00000b1c 	andeq	r0, r0, ip, lsl fp
    13e0:	0b011313 	bleq	46034 <_Min_Heap_Size+0x45834>
    13e4:	3b0b3a0b 	blcc	2cfc18 <_Min_Heap_Size+0x2cf418>
    13e8:	010b390b 	tsteq	fp, fp, lsl #18
    13ec:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    13f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    13f4:	0b3b0b3a 	bleq	ec40e4 <_Min_Heap_Size+0xec38e4>
    13f8:	13490b39 	movtne	r0, #39737	; 0x9b39
    13fc:	00000a38 	andeq	r0, r0, r8, lsr sl
    1400:	3f002e15 	svccc	0x00002e15
    1404:	3a0e030c 	bcc	38203c <_Min_Heap_Size+0x38183c>
    1408:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    140c:	110c270b 	tstne	ip, fp, lsl #14
    1410:	40011201 	andmi	r1, r1, r1, lsl #4
    1414:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1418:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    141c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1420:	3b0b3a0e 	blcc	2cfc60 <_Min_Heap_Size+0x2cf460>
    1424:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1428:	1201110c 	andne	r1, r1, #12, 2
    142c:	97064001 	strls	r4, [r6, -r1]
    1430:	13010c42 	movwne	r0, #7234	; 0x1c42
    1434:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    1438:	11000182 	smlabbne	r0, r2, r1, r0
    143c:	00133101 	andseq	r3, r3, r1, lsl #2
    1440:	00051800 	andeq	r1, r5, r0, lsl #16
    1444:	0b3a0e03 	bleq	e84c58 <_Min_Heap_Size+0xe84458>
    1448:	0b39053b 	bleq	e4293c <_Min_Heap_Size+0xe4213c>
    144c:	06021349 	streq	r1, [r2], -r9, asr #6
    1450:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1454:	82891900 	addhi	r1, r9, #0, 18
    1458:	01110101 	tsteq	r1, r1, lsl #2
    145c:	00001331 	andeq	r1, r0, r1, lsr r3
    1460:	01828a1a 	orreq	r8, r2, sl, lsl sl
    1464:	910a0200 	mrsls	r0, R10_fiq
    1468:	00000a42 	andeq	r0, r0, r2, asr #20
    146c:	3f012e1b 	svccc	0x00012e1b
    1470:	3a0e030c 	bcc	3820a8 <_Min_Heap_Size+0x3818a8>
    1474:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1478:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    147c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1480:	97064001 	strls	r4, [r6, -r1]
    1484:	13010c42 	movwne	r0, #7234	; 0x1c42
    1488:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
    148c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1490:	0b42b801 	bleq	10af49c <_Min_Heap_Size+0x10aec9c>
    1494:	0b580655 	bleq	1602df0 <_Min_Heap_Size+0x16025f0>
    1498:	0b570559 	bleq	15c2a04 <_Min_Heap_Size+0x15c2204>
    149c:	00001301 	andeq	r1, r0, r1, lsl #6
    14a0:	3100051d 	tstcc	r0, sp, lsl r5
    14a4:	b7060213 	smladlt	r6, r3, r2, r0
    14a8:	00000642 	andeq	r0, r0, r2, asr #12
    14ac:	31011d1e 	tstcc	r1, lr, lsl sp
    14b0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    14b4:	01110b42 	tsteq	r1, r2, asr #22
    14b8:	0b580112 	bleq	1601908 <_Min_Heap_Size+0x1601108>
    14bc:	0b570559 	bleq	15c2a28 <_Min_Heap_Size+0x15c2228>
    14c0:	00001301 	andeq	r1, r0, r1, lsl #6
    14c4:	55010b1f 	strpl	r0, [r1, #-2847]	; 0xfffff4e1
    14c8:	20000006 	andcs	r0, r0, r6
    14cc:	13310034 	teqne	r1, #52	; 0x34
    14d0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    14d4:	21000006 	tstcs	r0, r6
    14d8:	0b0b000f 	bleq	2c151c <_Min_Heap_Size+0x2c0d1c>
    14dc:	00001349 	andeq	r1, r0, r9, asr #6
    14e0:	3f012e22 	svccc	0x00012e22
    14e4:	3a0e030c 	bcc	38211c <_Min_Heap_Size+0x38191c>
    14e8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14ec:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    14f0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14f4:	970a4001 	strls	r4, [sl, -r1]
    14f8:	13010c42 	movwne	r0, #7234	; 0x1c42
    14fc:	1d230000 	stcne	0, cr0, [r3, #-0]
    1500:	52133100 	andspl	r3, r3, #0, 2
    1504:	0b42b801 	bleq	10af510 <_Min_Heap_Size+0x10aed10>
    1508:	01120111 	tsteq	r2, r1, lsl r1
    150c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1510:	00000b57 	andeq	r0, r0, r7, asr fp
    1514:	01828924 	orreq	r8, r2, r4, lsr #18
    1518:	31011101 	tstcc	r1, r1, lsl #2
    151c:	00130113 	andseq	r0, r3, r3, lsl r1
    1520:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    1524:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1528:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    152c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1530:	01120111 	tsteq	r2, r1, lsl r1
    1534:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1538:	0013010c 	andseq	r0, r3, ip, lsl #2
    153c:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    1540:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1544:	0b3b0b3a 	bleq	ec4234 <_Min_Heap_Size+0xec3a34>
    1548:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    154c:	01111349 	tsteq	r1, r9, asr #6
    1550:	0a400112 	beq	10019a0 <_Min_Heap_Size+0x10011a0>
    1554:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1558:	27000013 	smladcs	r0, r3, r0, r0
    155c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1560:	0b3b0b3a 	bleq	ec4250 <_Min_Heap_Size+0xec3a50>
    1564:	13490b39 	movtne	r0, #39737	; 0x9b39
    1568:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    156c:	28000006 	stmdacs	r0, {r1, r2}
    1570:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1574:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1578:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    157c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1580:	000b570b 	andeq	r5, fp, fp, lsl #14
    1584:	011d2900 	tsteq	sp, r0, lsl #18
    1588:	01521331 	cmpeq	r2, r1, lsr r3
    158c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1590:	58011201 	stmdapl	r1, {r0, r9, ip}
    1594:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1598:	2a00000b 	bcs	15cc <_Min_Heap_Size+0xdcc>
    159c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 14ec <_Min_Heap_Size+0xcec>
    15a0:	0b3a0e03 	bleq	e84db4 <_Min_Heap_Size+0xe845b4>
    15a4:	0b390b3b 	bleq	e44298 <_Min_Heap_Size+0xe43a98>
    15a8:	01110c27 	tsteq	r1, r7, lsr #24
    15ac:	0a400112 	beq	10019fc <_Min_Heap_Size+0x10011fc>
    15b0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    15b4:	2b000013 	blcs	1608 <_Min_Heap_Size+0xe08>
    15b8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1508 <_Min_Heap_Size+0xd08>
    15bc:	0b3a0e03 	bleq	e84dd0 <_Min_Heap_Size+0xe845d0>
    15c0:	0b390b3b 	bleq	e442b4 <_Min_Heap_Size+0xe43ab4>
    15c4:	01110c27 	tsteq	r1, r7, lsr #24
    15c8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    15cc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    15d0:	2c000013 	stccs	0, cr0, [r0], {19}
    15d4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    15d8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    15dc:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    15e0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    15e4:	010b570b 	tsteq	fp, fp, lsl #14
    15e8:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    15ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    15f0:	0b3b0b3a 	bleq	ec42e0 <_Min_Heap_Size+0xec3ae0>
    15f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    15f8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    15fc:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1600:	1331001d 	teqne	r1, #29
    1604:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1608:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    160c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1610:	000b570b 	andeq	r5, fp, fp, lsl #14
    1614:	011d2f00 	tsteq	sp, r0, lsl #30
    1618:	01521331 	cmpeq	r2, r1, lsr r3
    161c:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    1620:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    1624:	010b570b 	tsteq	fp, fp, lsl #14
    1628:	30000013 	andcc	r0, r0, r3, lsl r0
    162c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1630:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1634:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1638:	0b201349 	bleq	806364 <_Min_Heap_Size+0x805b64>
    163c:	00001301 	andeq	r1, r0, r1, lsl #6
    1640:	03000531 	movweq	r0, #1329	; 0x531
    1644:	3b0b3a0e 	blcc	2cfe84 <_Min_Heap_Size+0x2cf684>
    1648:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    164c:	32000013 	andcc	r0, r0, #19
    1650:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    1654:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1658:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    165c:	200c0187 	andcs	r0, ip, r7, lsl #3
    1660:	3300000b 	movwcc	r0, #11
    1664:	0e03012e 	adfeqsp	f0, f3, #0.5
    1668:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    166c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1670:	13010b20 	movwne	r0, #6944	; 0x1b20
    1674:	34340000 	ldrtcc	r0, [r4], #-0
    1678:	3a0e0300 	bcc	382280 <_Min_Heap_Size+0x381a80>
    167c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1680:	0013490b 	andseq	r4, r3, fp, lsl #18
    1684:	002e3500 	eoreq	r3, lr, r0, lsl #10
    1688:	0b3a0e03 	bleq	e84e9c <_Min_Heap_Size+0xe8469c>
    168c:	0b39053b 	bleq	e42b80 <_Min_Heap_Size+0xe42380>
    1690:	13490c27 	movtne	r0, #39975	; 0x9c27
    1694:	00000b20 	andeq	r0, r0, r0, lsr #22
    1698:	03002e36 	movweq	r2, #3638	; 0xe36
    169c:	3b0b3a0e 	blcc	2cfedc <_Min_Heap_Size+0x2cf6dc>
    16a0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    16a4:	000b200c 	andeq	r2, fp, ip
    16a8:	002e3700 	eoreq	r3, lr, r0, lsl #14
    16ac:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    16b0:	030e4087 	movweq	r4, #57479	; 0xe087
    16b4:	3b0b3a0e 	blcc	2cfef4 <_Min_Heap_Size+0x2cf6f4>
    16b8:	000b3905 	andeq	r3, fp, r5, lsl #18
    16bc:	11010000 	mrsne	r0, (UNDEF: 1)
    16c0:	130e2501 	movwne	r2, #58625	; 0xe501
    16c4:	1b0e030b 	blne	3822f8 <_Min_Heap_Size+0x381af8>
    16c8:	1106550e 	tstne	r6, lr, lsl #10
    16cc:	10015201 	andne	r5, r1, r1, lsl #4
    16d0:	02000006 	andeq	r0, r0, #6
    16d4:	0b3e0104 	bleq	f81aec <_Min_Heap_Size+0xf812ec>
    16d8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    16dc:	0b3b0b3a 	bleq	ec43cc <_Min_Heap_Size+0xec3bcc>
    16e0:	13010b39 	movwne	r0, #6969	; 0x1b39
    16e4:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    16e8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    16ec:	0400000d 	streq	r0, [r0], #-13
    16f0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    16f4:	00000b1c 	andeq	r0, r0, ip, lsl fp
    16f8:	0b002405 	bleq	a714 <_Min_Heap_Size+0x9f14>
    16fc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1700:	0600000e 	streq	r0, [r0], -lr
    1704:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1708:	0b3b0b3a 	bleq	ec43f8 <_Min_Heap_Size+0xec3bf8>
    170c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1710:	24070000 	strcs	r0, [r7], #-0
    1714:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1718:	0008030b 	andeq	r0, r8, fp, lsl #6
    171c:	00350800 	eorseq	r0, r5, r0, lsl #16
    1720:	00001349 	andeq	r1, r0, r9, asr #6
    1724:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
    1728:	0a000013 	beq	177c <_Min_Heap_Size+0xf7c>
    172c:	0b0b0113 	bleq	2c1b80 <_Min_Heap_Size+0x2c1380>
    1730:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1734:	13010b39 	movwne	r0, #6969	; 0x1b39
    1738:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    173c:	3a0e0300 	bcc	382344 <_Min_Heap_Size+0x381b44>
    1740:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1744:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1748:	0c00000a 	stceq	0, cr0, [r0], {10}
    174c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1750:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1754:	13490b39 	movtne	r0, #39737	; 0x9b39
    1758:	00000a38 	andeq	r0, r0, r8, lsr sl
    175c:	0300160d 	movweq	r1, #1549	; 0x60d
    1760:	3b0b3a0e 	blcc	2cffa0 <_Min_Heap_Size+0x2cf7a0>
    1764:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1768:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    176c:	13490101 	movtne	r0, #37121	; 0x9101
    1770:	00001301 	andeq	r1, r0, r1, lsl #6
    1774:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    1778:	000b2f13 	andeq	r2, fp, r3, lsl pc
    177c:	00341000 	eorseq	r1, r4, r0
    1780:	0b3a0e03 	bleq	e84f94 <_Min_Heap_Size+0xe84794>
    1784:	0b390b3b 	bleq	e44478 <_Min_Heap_Size+0xe43c78>
    1788:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 166c <_Min_Heap_Size+0xe6c>
    178c:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1790:	47003411 	smladmi	r0, r1, r4, r3
    1794:	3b0b3a13 	blcc	2cffe8 <_Min_Heap_Size+0x2cf7e8>
    1798:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    179c:	1200000a 	andne	r0, r0, #10
    17a0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 16f0 <_Min_Heap_Size+0xef0>
    17a4:	0b3a0e03 	bleq	e84fb8 <_Min_Heap_Size+0xe847b8>
    17a8:	0b39053b 	bleq	e42c9c <_Min_Heap_Size+0xe4249c>
    17ac:	13490c27 	movtne	r0, #39975	; 0x9c27
    17b0:	01120111 	tsteq	r2, r1, lsl r1
    17b4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    17b8:	1300000c 	movwne	r0, #12
    17bc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 170c <_Min_Heap_Size+0xf0c>
    17c0:	0b3a0e03 	bleq	e84fd4 <_Min_Heap_Size+0xe847d4>
    17c4:	0b39053b 	bleq	e42cb8 <_Min_Heap_Size+0xe424b8>
    17c8:	01110c27 	tsteq	r1, r7, lsr #24
    17cc:	0a400112 	beq	1001c1c <_Min_Heap_Size+0x100141c>
    17d0:	000c4297 	muleq	ip, r7, r2
    17d4:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    17d8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    17dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17e0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    17e4:	01120111 	tsteq	r2, r1, lsl r1
    17e8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    17ec:	0013010c 	andseq	r0, r3, ip, lsl #2
    17f0:	00051500 	andeq	r1, r5, r0, lsl #10
    17f4:	0b3a0e03 	bleq	e85008 <_Min_Heap_Size+0xe84808>
    17f8:	0b39053b 	bleq	e42cec <_Min_Heap_Size+0xe424ec>
    17fc:	06021349 	streq	r1, [r2], -r9, asr #6
    1800:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1804:	00341600 	eorseq	r1, r4, r0, lsl #12
    1808:	0b3a0e03 	bleq	e8501c <_Min_Heap_Size+0xe8481c>
    180c:	0b39053b 	bleq	e42d00 <_Min_Heap_Size+0xe42500>
    1810:	06021349 	streq	r1, [r2], -r9, asr #6
    1814:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1818:	82891700 	addhi	r1, r9, #0, 14
    181c:	01110001 	tsteq	r1, r1
    1820:	00001331 	andeq	r1, r0, r1, lsr r3
    1824:	3f012e18 	svccc	0x00012e18
    1828:	3a0e030c 	bcc	382460 <_Min_Heap_Size+0x381c60>
    182c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1830:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1834:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1838:	97064001 	strls	r4, [r6, -r1]
    183c:	13010c42 	movwne	r0, #7234	; 0x1c42
    1840:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    1844:	11010182 	smlabbne	r1, r2, r1, r0
    1848:	01133101 	tsteq	r3, r1, lsl #2
    184c:	1a000013 	bne	18a0 <_Min_Heap_Size+0x10a0>
    1850:	0001828a 	andeq	r8, r1, sl, lsl #5
    1854:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1858:	1b00000a 	blne	1888 <_Min_Heap_Size+0x1088>
    185c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 17ac <_Min_Heap_Size+0xfac>
    1860:	0b3a0e03 	bleq	e85074 <_Min_Heap_Size+0xe84874>
    1864:	0b390b3b 	bleq	e44558 <_Min_Heap_Size+0xe43d58>
    1868:	13490c27 	movtne	r0, #39975	; 0x9c27
    186c:	01120111 	tsteq	r2, r1, lsl r1
    1870:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1874:	0013010c 	andseq	r0, r3, ip, lsl #2
    1878:	00051c00 	andeq	r1, r5, r0, lsl #24
    187c:	0b3a0e03 	bleq	e85090 <_Min_Heap_Size+0xe84890>
    1880:	0b390b3b 	bleq	e44574 <_Min_Heap_Size+0xe43d74>
    1884:	06021349 	streq	r1, [r2], -r9, asr #6
    1888:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    188c:	82891d00 	addhi	r1, r9, #0, 26
    1890:	01110101 	tsteq	r1, r1, lsl #2
    1894:	00001331 	andeq	r1, r0, r1, lsr r3
    1898:	3f002e1e 	svccc	0x00002e1e
    189c:	3a0e030c 	bcc	3824d4 <_Min_Heap_Size+0x381cd4>
    18a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18a4:	110c270b 	tstne	ip, fp, lsl #14
    18a8:	40011201 	andmi	r1, r1, r1, lsl #4
    18ac:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    18b0:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    18b4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    18b8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    18bc:	0b3a0e03 	bleq	e850d0 <_Min_Heap_Size+0xe848d0>
    18c0:	0b39053b 	bleq	e42db4 <_Min_Heap_Size+0xe425b4>
    18c4:	01000000 	mrseq	r0, (UNDEF: 0)
    18c8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    18cc:	0e030b13 	vmoveq.32	d3[0], r0
    18d0:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    18d4:	01520111 	cmpeq	r2, r1, lsl r1
    18d8:	00000610 	andeq	r0, r0, r0, lsl r6
    18dc:	0b002402 	bleq	a8ec <_Min_Heap_Size+0xa0ec>
    18e0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    18e4:	0300000e 	movweq	r0, #14
    18e8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    18ec:	0b3b0b3a 	bleq	ec45dc <_Min_Heap_Size+0xec3ddc>
    18f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    18f4:	24040000 	strcs	r0, [r4], #-0
    18f8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    18fc:	0008030b 	andeq	r0, r8, fp, lsl #6
    1900:	00350500 	eorseq	r0, r5, r0, lsl #10
    1904:	00001349 	andeq	r1, r0, r9, asr #6
    1908:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    190c:	07000013 	smladeq	r0, r3, r0, r0
    1910:	0b0b0113 	bleq	2c1d64 <_Min_Heap_Size+0x2c1564>
    1914:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1918:	13010b39 	movwne	r0, #6969	; 0x1b39
    191c:	0d080000 	stceq	0, cr0, [r8, #-0]
    1920:	3a0e0300 	bcc	382528 <_Min_Heap_Size+0x381d28>
    1924:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1928:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    192c:	0900000a 	stmdbeq	r0, {r1, r3}
    1930:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1934:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1938:	13490b39 	movtne	r0, #39737	; 0x9b39
    193c:	00000a38 	andeq	r0, r0, r8, lsr sl
    1940:	4901010a 	stmdbmi	r1, {r1, r3, r8}
    1944:	00130113 	andseq	r0, r3, r3, lsl r1
    1948:	00210b00 	eoreq	r0, r1, r0, lsl #22
    194c:	0b2f1349 	bleq	bc6678 <_Min_Heap_Size+0xbc5e78>
    1950:	160c0000 	strne	r0, [ip], -r0
    1954:	3a0e0300 	bcc	38255c <_Min_Heap_Size+0x381d5c>
    1958:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    195c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1960:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1964:	0b3a0e03 	bleq	e85178 <_Min_Heap_Size+0xe84978>
    1968:	0b390b3b 	bleq	e4465c <_Min_Heap_Size+0xe43e5c>
    196c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1850 <_Min_Heap_Size+0x1050>
    1970:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1974:	4700340e 	strmi	r3, [r0, -lr, lsl #8]
    1978:	3b0b3a13 	blcc	2d01cc <_Min_Heap_Size+0x2cf9cc>
    197c:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    1980:	0f00000a 	svceq	0x0000000a
    1984:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 18d4 <_Min_Heap_Size+0x10d4>
    1988:	0b3a0e03 	bleq	e8519c <_Min_Heap_Size+0xe8499c>
    198c:	0b390b3b 	bleq	e44680 <_Min_Heap_Size+0xe43e80>
    1990:	01110c27 	tsteq	r1, r7, lsr #24
    1994:	0a400112 	beq	1001de4 <_Min_Heap_Size+0x10015e4>
    1998:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    199c:	10000013 	andne	r0, r0, r3, lsl r0
    19a0:	08030034 	stmdaeq	r3, {r2, r4, r5}
    19a4:	0b3b0b3a 	bleq	ec4694 <_Min_Heap_Size+0xec3e94>
    19a8:	13490b39 	movtne	r0, #39737	; 0x9b39
    19ac:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    19b0:	11000006 	tstne	r0, r6
    19b4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    19b8:	0b3b0b3a 	bleq	ec46a8 <_Min_Heap_Size+0xec3ea8>
    19bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    19c0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    19c4:	12000006 	andne	r0, r0, #6
    19c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1918 <_Min_Heap_Size+0x1118>
    19cc:	0b3a0e03 	bleq	e851e0 <_Min_Heap_Size+0xe849e0>
    19d0:	0b390b3b 	bleq	e446c4 <_Min_Heap_Size+0xe43ec4>
    19d4:	01110c27 	tsteq	r1, r7, lsr #24
    19d8:	0a400112 	beq	1001e28 <_Min_Heap_Size+0x1001628>
    19dc:	000c4297 	muleq	ip, r7, r2
    19e0:	11010000 	mrsne	r0, (UNDEF: 1)
    19e4:	130e2501 	movwne	r2, #58625	; 0xe501
    19e8:	1b0e030b 	blne	38261c <_Min_Heap_Size+0x381e1c>
    19ec:	1106550e 	tstne	r6, lr, lsl #10
    19f0:	10015201 	andne	r5, r1, r1, lsl #4
    19f4:	02000006 	andeq	r0, r0, #6
    19f8:	0b0b0024 	bleq	2c1a90 <_Min_Heap_Size+0x2c1290>
    19fc:	0e030b3e 	vmoveq.16	d3[0], r0
    1a00:	16030000 	strne	r0, [r3], -r0
    1a04:	3a0e0300 	bcc	38260c <_Min_Heap_Size+0x381e0c>
    1a08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a0c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1a10:	00240400 	eoreq	r0, r4, r0, lsl #8
    1a14:	0b3e0b0b 	bleq	f84648 <_Min_Heap_Size+0xf83e48>
    1a18:	00000803 	andeq	r0, r0, r3, lsl #16
    1a1c:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1a20:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1a24:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1a28:	0b3a0b0b 	bleq	e8465c <_Min_Heap_Size+0xe83e5c>
    1a2c:	0b390b3b 	bleq	e44720 <_Min_Heap_Size+0xe43f20>
    1a30:	00001301 	andeq	r1, r0, r1, lsl #6
    1a34:	03000d07 	movweq	r0, #3335	; 0xd07
    1a38:	3b0b3a08 	blcc	2d0260 <_Min_Heap_Size+0x2cfa60>
    1a3c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a40:	000a3813 	andeq	r3, sl, r3, lsl r8
    1a44:	000d0800 	andeq	r0, sp, r0, lsl #16
    1a48:	0b3a0e03 	bleq	e8525c <_Min_Heap_Size+0xe84a5c>
    1a4c:	0b390b3b 	bleq	e44740 <_Min_Heap_Size+0xe43f40>
    1a50:	0a381349 	beq	e0677c <_Min_Heap_Size+0xe05f7c>
    1a54:	0f090000 	svceq	0x00090000
    1a58:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1a5c:	0a000013 	beq	1ab0 <_Min_Heap_Size+0x12b0>
    1a60:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1a64:	13011349 	movwne	r1, #4937	; 0x1349
    1a68:	050b0000 	streq	r0, [fp, #-0]
    1a6c:	00134900 	andseq	r4, r3, r0, lsl #18
    1a70:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1a74:	0b3a0e03 	bleq	e85288 <_Min_Heap_Size+0xe84a88>
    1a78:	0b390b3b 	bleq	e4476c <_Min_Heap_Size+0xe43f6c>
    1a7c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1960 <_Min_Heap_Size+0x1160>
    1a80:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1a84:	0300340d 	movweq	r3, #1037	; 0x40d
    1a88:	3b0b3a0e 	blcc	2d02c8 <_Min_Heap_Size+0x2cfac8>
    1a8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a90:	000a0213 	andeq	r0, sl, r3, lsl r2
    1a94:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1a98:	0b3a0e03 	bleq	e852ac <_Min_Heap_Size+0xe84aac>
    1a9c:	0b390b3b 	bleq	e44790 <_Min_Heap_Size+0xe43f90>
    1aa0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1984 <_Min_Heap_Size+0x1184>
    1aa4:	00000a02 	andeq	r0, r0, r2, lsl #20
    1aa8:	3f012e0f 	svccc	0x00012e0f
    1aac:	3a0e030c 	bcc	3826e4 <_Min_Heap_Size+0x381ee4>
    1ab0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ab4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1ab8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1abc:	970a4001 	strls	r4, [sl, -r1]
    1ac0:	13010c42 	movwne	r0, #7234	; 0x1c42
    1ac4:	05100000 	ldreq	r0, [r0, #-0]
    1ac8:	3a0e0300 	bcc	3826d0 <_Min_Heap_Size+0x381ed0>
    1acc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ad0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ad4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1ad8:	34110000 	ldrcc	r0, [r1], #-0
    1adc:	3a0e0300 	bcc	3826e4 <_Min_Heap_Size+0x381ee4>
    1ae0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ae4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ae8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1aec:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
    1af0:	030c3f00 	movweq	r3, #52992	; 0xcf00
    1af4:	3b0b3a0e 	blcc	2d0334 <_Min_Heap_Size+0x2cfb34>
    1af8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1afc:	1113490c 	tstne	r3, ip, lsl #18
    1b00:	40011201 	andmi	r1, r1, r1, lsl #4
    1b04:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1b08:	1d130000 	ldcne	0, cr0, [r3, #-0]
    1b0c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1b10:	0b42b801 	bleq	10afb1c <_Min_Heap_Size+0x10af31c>
    1b14:	01120111 	tsteq	r2, r1, lsl r1
    1b18:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1b1c:	00000b57 	andeq	r0, r0, r7, asr fp
    1b20:	31003414 	tstcc	r0, r4, lsl r4
    1b24:	b7060213 	smladlt	r6, r3, r2, r0
    1b28:	00000642 	andeq	r0, r0, r2, asr #12
    1b2c:	3f012e15 	svccc	0x00012e15
    1b30:	3a0e030c 	bcc	382768 <_Min_Heap_Size+0x381f68>
    1b34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b38:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1b3c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1b40:	97064001 	strls	r4, [r6, -r1]
    1b44:	13010c42 	movwne	r0, #7234	; 0x1c42
    1b48:	05160000 	ldreq	r0, [r6, #-0]
    1b4c:	3a0e0300 	bcc	382754 <_Min_Heap_Size+0x381f54>
    1b50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b54:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1b58:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1b5c:	34170000 	ldrcc	r0, [r7], #-0
    1b60:	3a0e0300 	bcc	382768 <_Min_Heap_Size+0x381f68>
    1b64:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b68:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1b6c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1b70:	34180000 	ldrcc	r0, [r8], #-0
    1b74:	3a080300 	bcc	20277c <_Min_Heap_Size+0x201f7c>
    1b78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b7c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1b80:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1b84:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    1b88:	11010182 	smlabbne	r1, r2, r1, r0
    1b8c:	01133101 	tsteq	r3, r1, lsl #2
    1b90:	1a000013 	bne	1be4 <_Min_Heap_Size+0x13e4>
    1b94:	0001828a 	andeq	r8, r1, sl, lsl #5
    1b98:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1b9c:	1b00000a 	blne	1bcc <_Min_Heap_Size+0x13cc>
    1ba0:	00018289 	andeq	r8, r1, r9, lsl #5
    1ba4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1ba8:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1bac:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1bb0:	3b0b3a0e 	blcc	2d03f0 <_Min_Heap_Size+0x2cfbf0>
    1bb4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1bb8:	1201110c 	andne	r1, r1, #12, 2
    1bbc:	97064001 	strls	r4, [r6, -r1]
    1bc0:	13010c42 	movwne	r0, #7234	; 0x1c42
    1bc4:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
    1bc8:	11010182 	smlabbne	r1, r2, r1, r0
    1bcc:	00130101 	andseq	r0, r3, r1, lsl #2
    1bd0:	82891e00 	addhi	r1, r9, #0, 28
    1bd4:	01110101 	tsteq	r1, r1, lsl #2
    1bd8:	00001331 	andeq	r1, r0, r1, lsr r3
    1bdc:	4901011f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r8}
    1be0:	00130113 	andseq	r0, r3, r3, lsl r1
    1be4:	00212000 	eoreq	r2, r1, r0
    1be8:	0b2f1349 	bleq	bc6914 <_Min_Heap_Size+0xbc6114>
    1bec:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1bf0:	3a0e0301 	bcc	3827fc <_Min_Heap_Size+0x381ffc>
    1bf4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bf8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1bfc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1c00:	97064001 	strls	r4, [r6, -r1]
    1c04:	13010c42 	movwne	r0, #7234	; 0x1c42
    1c08:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    1c0c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1c10:	3b0b3a0e 	blcc	2d0450 <_Min_Heap_Size+0x2cfc50>
    1c14:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c18:	3c13490c 			; <UNDEFINED> instruction: 0x3c13490c
    1c1c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1c20:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
    1c24:	0b3a0e03 	bleq	e85438 <_Min_Heap_Size+0xe84c38>
    1c28:	0b390b3b 	bleq	e4491c <_Min_Heap_Size+0xe4411c>
    1c2c:	01110c27 	tsteq	r1, r7, lsr #24
    1c30:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1c34:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1c38:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    1c3c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1b8c <_Min_Heap_Size+0x138c>
    1c40:	0b3a0e03 	bleq	e85454 <_Min_Heap_Size+0xe84c54>
    1c44:	0b390b3b 	bleq	e44938 <_Min_Heap_Size+0xe44138>
    1c48:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	; 0xffffff64
    1c4c:	00001301 	andeq	r1, r0, r1, lsl #6
    1c50:	03012e25 	movweq	r2, #7717	; 0x1e25
    1c54:	3b0b3a0e 	blcc	2d0494 <_Min_Heap_Size+0x2cfc94>
    1c58:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c5c:	1113490c 	tstne	r3, ip, lsl #18
    1c60:	40011201 	andmi	r1, r1, r1, lsl #4
    1c64:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1c68:	00001301 	andeq	r1, r0, r1, lsl #6
    1c6c:	03000526 	movweq	r0, #1318	; 0x526
    1c70:	3b0b3a08 	blcc	2d0498 <_Min_Heap_Size+0x2cfc98>
    1c74:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c78:	b7060213 	smladlt	r6, r3, r2, r0
    1c7c:	00000642 	andeq	r0, r0, r2, asr #12
    1c80:	11010b27 	tstne	r1, r7, lsr #22
    1c84:	00011201 	andeq	r1, r1, r1, lsl #4
    1c88:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
    1c8c:	0b3a0e03 	bleq	e854a0 <_Min_Heap_Size+0xe84ca0>
    1c90:	0b39053b 	bleq	e43184 <_Min_Heap_Size+0xe42984>
    1c94:	13490c27 	movtne	r0, #39975	; 0x9c27
    1c98:	13010b20 	movwne	r0, #6944	; 0x1b20
    1c9c:	34290000 	strtcc	r0, [r9], #-0
    1ca0:	3a0e0300 	bcc	3828a8 <_Min_Heap_Size+0x3820a8>
    1ca4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ca8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1cac:	002e2a00 	eoreq	r2, lr, r0, lsl #20
    1cb0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1cb4:	030e4087 	movweq	r4, #57479	; 0xe087
    1cb8:	3b0b3a0e 	blcc	2d04f8 <_Min_Heap_Size+0x2cfcf8>
    1cbc:	2b00000b 	blcs	1cf0 <_Min_Heap_Size+0x14f0>
    1cc0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1c10 <_Min_Heap_Size+0x1410>
    1cc4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1cc8:	3a0e030e 	bcc	382908 <_Min_Heap_Size+0x382108>
    1ccc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1cd0:	0000000b 	andeq	r0, r0, fp
    1cd4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1cd8:	030b130e 	movweq	r1, #45838	; 0xb30e
    1cdc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1ce0:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1ce4:	00061001 	andeq	r1, r6, r1
    1ce8:	00240200 	eoreq	r0, r4, r0, lsl #4
    1cec:	0b3e0b0b 	bleq	f84920 <_Min_Heap_Size+0xf84120>
    1cf0:	00000e03 	andeq	r0, r0, r3, lsl #28
    1cf4:	03001603 	movweq	r1, #1539	; 0x603
    1cf8:	3b0b3a0e 	blcc	2d0538 <_Min_Heap_Size+0x2cfd38>
    1cfc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d00:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1d04:	0b0b0024 	bleq	2c1d9c <_Min_Heap_Size+0x2c159c>
    1d08:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1d0c:	35050000 	strcc	r0, [r5, #-0]
    1d10:	00134900 	andseq	r4, r3, r0, lsl #18
    1d14:	00260600 	eoreq	r0, r6, r0, lsl #12
    1d18:	00001349 	andeq	r1, r0, r9, asr #6
    1d1c:	0b011307 	bleq	46940 <_Min_Heap_Size+0x46140>
    1d20:	3b0b3a0b 	blcc	2d0554 <_Min_Heap_Size+0x2cfd54>
    1d24:	010b3905 	tsteq	fp, r5, lsl #18
    1d28:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1d2c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1d30:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d34:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d38:	00000a38 	andeq	r0, r0, r8, lsr sl
    1d3c:	03000d09 	movweq	r0, #3337	; 0xd09
    1d40:	3b0b3a08 	blcc	2d0568 <_Min_Heap_Size+0x2cfd68>
    1d44:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1d48:	000a3813 	andeq	r3, sl, r3, lsl r8
    1d4c:	01010a00 	tsteq	r1, r0, lsl #20
    1d50:	13011349 	movwne	r1, #4937	; 0x1349
    1d54:	210b0000 	mrscs	r0, (UNDEF: 11)
    1d58:	2f134900 	svccs	0x00134900
    1d5c:	0c00000b 	stceq	0, cr0, [r0], {11}
    1d60:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1d64:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d68:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d6c:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    1d70:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1d74:	3b0b3a0e 	blcc	2d05b4 <_Min_Heap_Size+0x2cfdb4>
    1d78:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1d7c:	1201110c 	andne	r1, r1, #12, 2
    1d80:	97064001 	strls	r4, [r6, -r1]
    1d84:	13010c42 	movwne	r0, #7234	; 0x1c42
    1d88:	340e0000 	strcc	r0, [lr], #-0
    1d8c:	3a0e0300 	bcc	382994 <_Min_Heap_Size+0x382194>
    1d90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d94:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1d98:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1d9c:	340f0000 	strcc	r0, [pc], #-0	; 1da4 <_Min_Heap_Size+0x15a4>
    1da0:	3a0e0300 	bcc	3829a8 <_Min_Heap_Size+0x3821a8>
    1da4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1da8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1dac:	1000000a 	andne	r0, r0, sl
    1db0:	01018289 	smlabbeq	r1, r9, r2, r8
    1db4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1db8:	00001301 	andeq	r1, r0, r1, lsl #6
    1dbc:	01828a11 	orreq	r8, r2, r1, lsl sl
    1dc0:	910a0200 	mrsls	r0, R10_fiq
    1dc4:	00000a42 	andeq	r0, r0, r2, asr #20
    1dc8:	01828912 	orreq	r8, r2, r2, lsl r9
    1dcc:	31011101 	tstcc	r1, r1, lsl #2
    1dd0:	13000013 	movwne	r0, #19
    1dd4:	0b0b000f 	bleq	2c1e18 <_Min_Heap_Size+0x2c1618>
    1dd8:	00001349 	andeq	r1, r0, r9, asr #6
    1ddc:	03003414 	movweq	r3, #1044	; 0x414
    1de0:	3b0b3a08 	blcc	2d0608 <_Min_Heap_Size+0x2cfe08>
    1de4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1de8:	000b1c13 	andeq	r1, fp, r3, lsl ip
    1dec:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
    1df0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1df4:	0b3b0b3a 	bleq	ec4ae4 <_Min_Heap_Size+0xec42e4>
    1df8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1dfc:	01111349 	tsteq	r1, r9, asr #6
    1e00:	0a400112 	beq	1002250 <_Min_Heap_Size+0x1001a50>
    1e04:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e08:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1e0c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1e10:	0b3b0b3a 	bleq	ec4b00 <_Min_Heap_Size+0xec4300>
    1e14:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e18:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1e1c:	17000006 	strne	r0, [r0, -r6]
    1e20:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1d70 <_Min_Heap_Size+0x1570>
    1e24:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1e28:	3a0e030e 	bcc	382a68 <_Min_Heap_Size+0x382268>
    1e2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e30:	1800000b 	stmdane	r0, {r0, r1, r3}
    1e34:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1d84 <_Min_Heap_Size+0x1584>
    1e38:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1e3c:	3a0e030e 	bcc	382a7c <_Min_Heap_Size+0x38227c>
    1e40:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    1e44:	11010000 	mrsne	r0, (UNDEF: 1)
    1e48:	130e2501 	movwne	r2, #58625	; 0xe501
    1e4c:	1b0e030b 	blne	382a80 <_Min_Heap_Size+0x382280>
    1e50:	1106550e 	tstne	r6, lr, lsl #10
    1e54:	10015201 	andne	r5, r1, r1, lsl #4
    1e58:	02000006 	andeq	r0, r0, #6
    1e5c:	0b0b0024 	bleq	2c1ef4 <_Min_Heap_Size+0x2c16f4>
    1e60:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1e64:	16030000 	strne	r0, [r3], -r0
    1e68:	3a0e0300 	bcc	382a70 <_Min_Heap_Size+0x382270>
    1e6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e70:	0013490b 	andseq	r4, r3, fp, lsl #18
    1e74:	00240400 	eoreq	r0, r4, r0, lsl #8
    1e78:	0b3e0b0b 	bleq	f84aac <_Min_Heap_Size+0xf842ac>
    1e7c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1e80:	0b000f05 	bleq	5a9c <_Min_Heap_Size+0x529c>
    1e84:	0600000b 	streq	r0, [r0], -fp
    1e88:	13490026 	movtne	r0, #36902	; 0x9026
    1e8c:	34070000 	strcc	r0, [r7], #-0
    1e90:	3a0e0300 	bcc	382a98 <_Min_Heap_Size+0x382298>
    1e94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e98:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e9c:	0800000a 	stmdaeq	r0, {r1, r3}
    1ea0:	0b0b000f 	bleq	2c1ee4 <_Min_Heap_Size+0x2c16e4>
    1ea4:	00001349 	andeq	r1, r0, r9, asr #6
    1ea8:	3f012e09 	svccc	0x00012e09
    1eac:	3a0e030c 	bcc	382ae4 <_Min_Heap_Size+0x3822e4>
    1eb0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1eb4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1eb8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1ebc:	97064001 	strls	r4, [r6, -r1]
    1ec0:	13010c42 	movwne	r0, #7234	; 0x1c42
    1ec4:	050a0000 	streq	r0, [sl, #-0]
    1ec8:	3a0e0300 	bcc	382ad0 <_Min_Heap_Size+0x3822d0>
    1ecc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ed0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ed4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1ed8:	340b0000 	strcc	r0, [fp], #-0
    1edc:	3a0e0300 	bcc	382ae4 <_Min_Heap_Size+0x3822e4>
    1ee0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ee4:	3f13490b 	svccc	0x0013490b
    1ee8:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1eec:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1ef0:	0b3a0e03 	bleq	e85704 <_Min_Heap_Size+0xe84f04>
    1ef4:	0b390b3b 	bleq	e44be8 <_Min_Heap_Size+0xe443e8>
    1ef8:	00001349 	andeq	r1, r0, r9, asr #6
    1efc:	0300340d 	movweq	r3, #1037	; 0x40d
    1f00:	3b0b3a0e 	blcc	2d0740 <_Min_Heap_Size+0x2cff40>
    1f04:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1f08:	b7060213 	smladlt	r6, r3, r2, r0
    1f0c:	00000642 	andeq	r0, r0, r2, asr #12
    1f10:	0182890e 	orreq	r8, r2, lr, lsl #18
    1f14:	31011100 	mrscc	r1, (UNDEF: 17)
    1f18:	0f000013 	svceq	0x00000013
    1f1c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1e6c <_Min_Heap_Size+0x166c>
    1f20:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1f24:	3a0e030e 	bcc	382b64 <_Min_Heap_Size+0x382364>
    1f28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f2c:	0000000b 	andeq	r0, r0, fp
    1f30:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1f34:	030b130e 	movweq	r1, #45838	; 0xb30e
    1f38:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1f3c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1f40:	00061001 	andeq	r1, r6, r1
    1f44:	00240200 	eoreq	r0, r4, r0, lsl #4
    1f48:	0b3e0b0b 	bleq	f84b7c <_Min_Heap_Size+0xf8437c>
    1f4c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1f50:	03001603 	movweq	r1, #1539	; 0x603
    1f54:	3b0b3a0e 	blcc	2d0794 <_Min_Heap_Size+0x2cff94>
    1f58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1f5c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1f60:	0b0b0024 	bleq	2c1ff8 <_Min_Heap_Size+0x2c17f8>
    1f64:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1f68:	0f050000 	svceq	0x00050000
    1f6c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1f70:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1f74:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1f78:	0b3a0b0b 	bleq	e84bac <_Min_Heap_Size+0xe843ac>
    1f7c:	0b390b3b 	bleq	e44c70 <_Min_Heap_Size+0xe44470>
    1f80:	00001301 	andeq	r1, r0, r1, lsl #6
    1f84:	03000d07 	movweq	r0, #3335	; 0xd07
    1f88:	3b0b3a0e 	blcc	2d07c8 <_Min_Heap_Size+0x2cffc8>
    1f8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1f90:	000a3813 	andeq	r3, sl, r3, lsl r8
    1f94:	01010800 	tsteq	r1, r0, lsl #16
    1f98:	13011349 	movwne	r1, #4937	; 0x1349
    1f9c:	21090000 	mrscs	r0, (UNDEF: 9)
    1fa0:	2f134900 	svccs	0x00134900
    1fa4:	0a00000b 	beq	1fd8 <_Min_Heap_Size+0x17d8>
    1fa8:	08030113 	stmdaeq	r3, {r0, r1, r4, r8}
    1fac:	0b3a0b0b 	bleq	e84be0 <_Min_Heap_Size+0xe843e0>
    1fb0:	0b390b3b 	bleq	e44ca4 <_Min_Heap_Size+0xe444a4>
    1fb4:	00001301 	andeq	r1, r0, r1, lsl #6
    1fb8:	0300340b 	movweq	r3, #1035	; 0x40b
    1fbc:	3b0b3a0e 	blcc	2d07fc <_Min_Heap_Size+0x2cfffc>
    1fc0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1fc4:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
    1fc8:	0c00000a 	stceq	0, cr0, [r0], {10}
    1fcc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1f1c <_Min_Heap_Size+0x171c>
    1fd0:	0b3a0e03 	bleq	e857e4 <_Min_Heap_Size+0xe84fe4>
    1fd4:	0b390b3b 	bleq	e44cc8 <_Min_Heap_Size+0xe444c8>
    1fd8:	13490c27 	movtne	r0, #39975	; 0x9c27
    1fdc:	01120111 	tsteq	r2, r1, lsl r1
    1fe0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1fe4:	0013010c 	andseq	r0, r3, ip, lsl #2
    1fe8:	00050d00 	andeq	r0, r5, r0, lsl #26
    1fec:	0b3a0e03 	bleq	e85800 <_Min_Heap_Size+0xe85000>
    1ff0:	0b390b3b 	bleq	e44ce4 <_Min_Heap_Size+0xe444e4>
    1ff4:	06021349 	streq	r1, [r2], -r9, asr #6
    1ff8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1ffc:	00050e00 	andeq	r0, r5, r0, lsl #28
    2000:	0b3a0803 	bleq	e84014 <_Min_Heap_Size+0xe83814>
    2004:	0b390b3b 	bleq	e44cf8 <_Min_Heap_Size+0xe444f8>
    2008:	06021349 	streq	r1, [r2], -r9, asr #6
    200c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2010:	82890f00 	addhi	r0, r9, #0, 30
    2014:	01110001 	tsteq	r1, r1
    2018:	00001331 	andeq	r1, r0, r1, lsr r3
    201c:	3f012e10 	svccc	0x00012e10
    2020:	3a0e030c 	bcc	382c58 <_Min_Heap_Size+0x382458>
    2024:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2028:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    202c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2030:	970a4001 	strls	r4, [sl, -r1]
    2034:	13010c42 	movwne	r0, #7234	; 0x1c42
    2038:	05110000 	ldreq	r0, [r1, #-0]
    203c:	3a080300 	bcc	202c44 <_Min_Heap_Size+0x202444>
    2040:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2044:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2048:	1200000a 	andne	r0, r0, #10
    204c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2050:	0b3b0b3a 	bleq	ec4d40 <_Min_Heap_Size+0xec4540>
    2054:	13490b39 	movtne	r0, #39737	; 0x9b39
    2058:	00000a02 	andeq	r0, r0, r2, lsl #20
    205c:	00001813 	andeq	r1, r0, r3, lsl r8
    2060:	00341400 	eorseq	r1, r4, r0, lsl #8
    2064:	0b3a0e03 	bleq	e85878 <_Min_Heap_Size+0xe85078>
    2068:	0b390b3b 	bleq	e44d5c <_Min_Heap_Size+0xe4455c>
    206c:	06021349 	streq	r1, [r2], -r9, asr #6
    2070:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2074:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
    2078:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    207c:	0b3b0b3a 	bleq	ec4d6c <_Min_Heap_Size+0xec456c>
    2080:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2084:	110c0187 	smlabbne	ip, r7, r1, r0
    2088:	40011201 	andmi	r1, r1, r1, lsl #4
    208c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    2090:	00001301 	andeq	r1, r0, r1, lsl #6
    2094:	01828916 	orreq	r8, r2, r6, lsl r9
    2098:	31011101 	tstcc	r1, r1, lsl #2
    209c:	17000013 	smladne	r0, r3, r0, r0
    20a0:	0001828a 	andeq	r8, r1, sl, lsl #5
    20a4:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    20a8:	1800000a 	stmdane	r0, {r1, r3}
    20ac:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1ffc <_Min_Heap_Size+0x17fc>
    20b0:	0b3a0e03 	bleq	e858c4 <_Min_Heap_Size+0xe850c4>
    20b4:	0b390b3b 	bleq	e44da8 <_Min_Heap_Size+0xe445a8>
    20b8:	13490c27 	movtne	r0, #39975	; 0x9c27
    20bc:	01120111 	tsteq	r2, r1, lsl r1
    20c0:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    20c4:	1900000c 	stmdbne	r0, {r2, r3}
    20c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2018 <_Min_Heap_Size+0x1818>
    20cc:	0b3a0e03 	bleq	e858e0 <_Min_Heap_Size+0xe850e0>
    20d0:	0b390b3b 	bleq	e44dc4 <_Min_Heap_Size+0xe445c4>
    20d4:	01120111 	tsteq	r2, r1, lsl r1
    20d8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    20dc:	1a00000c 	bne	2114 <_Min_Heap_Size+0x1914>
    20e0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2030 <_Min_Heap_Size+0x1830>
    20e4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    20e8:	3a0e030e 	bcc	382d28 <_Min_Heap_Size+0x382528>
    20ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20f0:	0000000b 	andeq	r0, r0, fp
    20f4:	10001101 	andne	r1, r0, r1, lsl #2
    20f8:	03065506 	movweq	r5, #25862	; 0x6506
    20fc:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2100:	0005130e 	andeq	r1, r5, lr, lsl #6
    2104:	11010000 	mrsne	r0, (UNDEF: 1)
    2108:	11061000 	mrsne	r1, (UNDEF: 6)
    210c:	03011201 	movweq	r1, #4609	; 0x1201
    2110:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2114:	0005130e 	andeq	r1, r5, lr, lsl #6
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
  errno = ENOMEM;
       8:	007d0002 	rsbseq	r0, sp, r2
	...
      14:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
}
      2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
      30:	00000004 	andeq	r0, r0, r4
    if (status != HAL_OK)
      34:	00000000 	andeq	r0, r0, r0
      uwTickFreq = prevTickFreq;
      38:	7d000300 	stcvc	3, cr0, [r0, #-0]
      3c:	000000d8 	ldrdeq	r0, [r0], -r8
      40:	00000000 	andeq	r0, r0, r0
      44:	06740000 	ldrbteq	r0, [r4], -r0
      if (pllsource != 0)
      48:	06760800 	ldrbteq	r0, [r6], -r0, lsl #16
      4c:	00020800 	andeq	r0, r2, r0, lsl #16
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	0676007d 			; <UNDEFINED> instruction: 0x0676007d
      54:	06a00800 	strteq	r0, [r0], r0, lsl #16
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	0000087d 	andeq	r0, r0, sp, ror r8
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00000000 	andeq	r0, r0, r0
      64:	065c0000 	ldrbeq	r0, [ip], -r0
      68:	065e0800 	ldrbeq	r0, [lr], -r0, lsl #16
      SystemCoreClock = pllvco/pllp;
      6c:	00020800 	andeq	r0, r2, r0, lsl #16
      70:	065e007d 			; <UNDEFINED> instruction: 0x065e007d
      break;
      74:	06740800 	ldrbteq	r0, [r4], -r0, lsl #16
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00020800 	andeq	r0, r2, r0, lsl #16
      7c:	0000087d 	andeq	r0, r0, sp, ror r8
      80:	00000000 	andeq	r0, r0, r0
      84:	06440000 	strbeq	r0, [r4], -r0
      88:	06460800 	strbeq	r0, [r6], -r0, lsl #16
      8c:	00020800 	andeq	r0, r2, r0, lsl #16
      90:	0646007d 			; <UNDEFINED> instruction: 0x0646007d
      94:	065c0800 	ldrbeq	r0, [ip], -r0, lsl #16
      98:	00020800 	andeq	r0, r2, r0, lsl #16
      9c:	0000087d 	andeq	r0, r0, sp, ror r8
      a0:	00000000 	andeq	r0, r0, r0
      a4:	062c0000 	strteq	r0, [ip], -r0
      a8:	062e0800 	strteq	r0, [lr], -r0, lsl #16
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00020800 	andeq	r0, r2, r0, lsl #16
      b0:	062e007d 			; <UNDEFINED> instruction: 0x062e007d
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	06440800 	strbeq	r0, [r4], -r0, lsl #16
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00020800 	andeq	r0, r2, r0, lsl #16
      bc:	0000087d 	andeq	r0, r0, sp, ror r8
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00000000 	andeq	r0, r0, r0
      c4:	06140000 	ldreq	r0, [r4], -r0
      c8:	06160800 	ldreq	r0, [r6], -r0, lsl #16
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	00020800 	andeq	r0, r2, r0, lsl #16
      d0:	0616007d 			; <UNDEFINED> instruction: 0x0616007d
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	062c0800 	strteq	r0, [ip], -r0, lsl #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00020800 	andeq	r0, r2, r0, lsl #16
      dc:	0000087d 	andeq	r0, r0, sp, ror r8
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	05fc0000 	ldrbeq	r0, [ip, #0]!
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	05fe0800 	ldrbeq	r0, [lr, #2048]!	; 0x800
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	00020800 	andeq	r0, r2, r0, lsl #16
      f0:	05fe007d 	ldrbeq	r0, [lr, #125]!	; 0x7d
    huart->TxXferCount = 0x00U;
      f4:	06140800 	ldreq	r0, [r4], -r0, lsl #16
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00020800 	andeq	r0, r2, r0, lsl #16
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0000087d 	andeq	r0, r0, sp, ror r8
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000000 	andeq	r0, r0, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	05e40000 	strbeq	r0, [r4, #0]!
    HAL_UART_AbortCpltCallback(huart);
     108:	05e60800 	strbeq	r0, [r6, #2048]!	; 0x800
     10c:	00020800 	andeq	r0, r2, r0, lsl #16
  uint32_t AbortCplt = 0x01U;
     110:	05e6007d 	strbeq	r0, [r6, #125]!	; 0x7d
  if (AbortCplt == 0x01U)
     114:	05fc0800 	ldrbeq	r0, [ip, #2048]!	; 0x800
}
     118:	00020800 	andeq	r0, r2, r0, lsl #16
     11c:	0000087d 	andeq	r0, r0, sp, ror r8
     120:	00000000 	andeq	r0, r0, r0
     124:	05c40000 	strbeq	r0, [r4]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	05c60800 	strbeq	r0, [r6, #2048]	; 0x800
     12c:	00020800 	andeq	r0, r2, r0, lsl #16
     130:	05c6007d 	strbeq	r0, [r6, #125]	; 0x7d
     134:	05c80800 	strbeq	r0, [r8, #2048]	; 0x800
     138:	00020800 	andeq	r0, r2, r0, lsl #16
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	05c8047d 	strbeq	r0, [r8, #1149]	; 0x47d
     140:	05dc0800 	ldrbeq	r0, [ip, #2048]	; 0x800
     144:	00020800 	andeq	r0, r2, r0, lsl #16
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	05dc107d 	ldrbeq	r1, [ip, #125]	; 0x7d
     14c:	05e40800 	strbeq	r0, [r4, #2048]!	; 0x800
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00020800 	andeq	r0, r2, r0, lsl #16
     154:	0000047d 	andeq	r0, r0, sp, ror r4
	...
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	05c40000 	strbeq	r0, [r4]
     164:	05d40800 	ldrbeq	r0, [r4, #2048]	; 0x800
     168:	00010800 	andeq	r0, r1, r0, lsl #16
     16c:	0005d450 	andeq	sp, r5, r0, asr r4
     170:	0005d708 	andeq	sp, r5, r8, lsl #14
}
     174:	71000208 	tstvc	r0, r8, lsl #4
	...
     180:	00072800 	andeq	r2, r7, r0, lsl #16
}
     184:	00072a08 	andeq	r2, r7, r8, lsl #20
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     18c:	00072a00 	andeq	r2, r7, r0, lsl #20
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00074008 	andeq	r4, r7, r8
     194:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     198:	00000008 	andeq	r0, r0, r8
	...
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	00072800 	andeq	r2, r7, r0, lsl #16
     1a8:	00072e08 	andeq	r2, r7, r8, lsl #28
     1ac:	50000108 	andpl	r0, r0, r8, lsl #2
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	0800072e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, sl}
     1b4:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	01f30004 	mvnseq	r0, r4
     1bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c8:	07280000 	streq	r0, [r8, -r0]!
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	072c0800 	streq	r0, [ip, -r0, lsl #16]!
     1d0:	00010800 	andeq	r0, r1, r0, lsl #16
     1d4:	00072c51 	andeq	r2, r7, r1, asr ip
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	00074008 	andeq	r4, r7, r8
     1dc:	f3000408 	vshl.u8	d0, d8, d0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	009f5101 	addseq	r5, pc, r1, lsl #2
     1e4:	00000000 	andeq	r0, r0, r0
     1e8:	10000000 	andne	r0, r0, r0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	12080007 	andne	r0, r8, #7
     1f0:	02080007 	andeq	r0, r8, #7
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	12007d00 	andne	r7, r0, #0, 26
     1f8:	28080007 	stmdacs	r8, {r0, r1, r2}
     1fc:	02080007 	andeq	r0, r8, #7
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     20c:	02080007 	andeq	r0, r8, #7
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	02080007 	andeq	r0, r8, #7
     214:	02007d00 	andeq	r7, r0, #0, 26
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	10080007 	andne	r0, r8, r7
     21c:	02080007 	andeq	r0, r8, #7
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00087d00 	andeq	r7, r8, r0, lsl #26
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	00000000 	andeq	r0, r0, r0
     228:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
  tmp = hdma->Instance->FCR;
     22c:	f8080006 			; <UNDEFINED> instruction: 0xf8080006
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	02080006 	andeq	r0, r8, #6
  tmp |= hdma->Init.FIFOMode;
     234:	f8007d00 			; <UNDEFINED> instruction: 0xf8007d00
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	fe080006 	cdp2	0, 0, cr0, cr8, cr6, {0}
    tmp |= hdma->Init.FIFOThreshold;
     23c:	02080006 	andeq	r0, r8, #6
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00087d00 	andeq	r7, r8, r0, lsl #26
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00000000 	andeq	r0, r0, r0
     248:	dc000000 	stcle	0, cr0, [r0], {-0}
  hdma->Instance->FCR = tmp;
     24c:	de080006 	cdple	0, 0, cr0, cr8, cr6, {0}
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	02080006 	andeq	r0, r8, #6
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
     258:	f0080006 			; <UNDEFINED> instruction: 0xf0080006
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	02080006 	andeq	r0, r8, #6
  hdma->State = HAL_DMA_STATE_READY;
     260:	00087d00 	andeq	r7, r8, r0, lsl #26
     264:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     268:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     26c:	ca080006 	bgt	20028c <_Min_Heap_Size+0x1ffa8c>
     270:	02080006 	andeq	r0, r8, #6
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	ca007d00 	bgt	1f67c <_Min_Heap_Size+0x1ee7c>
     278:	dc080006 	stcle	0, cr0, [r8], {6}
     27c:	02080006 	andeq	r0, r8, #6
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	00087d00 	andeq	r7, r8, r0, lsl #26
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR; 
     288:	b4000000 	strlt	r0, [r0], #-0
    return HAL_ERROR;
     28c:	b6080006 	strlt	r0, [r8], -r6
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	02080006 	andeq	r0, r8, #6
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	b6007d00 	strlt	r7, [r0], -r0, lsl #26
     298:	c8080006 	stmdagt	r8, {r1, r2}
      tickstart = HAL_GetTick();
     29c:	02080006 	andeq	r0, r8, #6
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b0:	02000000 	andeq	r0, r0, #0
     2b4:	00007d00 	andeq	r7, r0, r0, lsl #26
          return HAL_TIMEOUT;
     2b8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	02000000 	andeq	r0, r0, #0
     2c0:	00087d00 	andeq	r7, r8, r0, lsl #26
     2c4:	00000000 	andeq	r0, r0, r0
    FlagStatus       pwrclkchanged = RESET;
     2c8:	a0000000 	andge	r0, r0, r0
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	a2080006 	andge	r0, r8, #6
     2d0:	02080006 	andeq	r0, r8, #6
     2d4:	a2007d00 	andge	r7, r0, #0, 26
      tickstart = HAL_GetTick();
     2d8:	b4080006 	strlt	r0, [r8], #-6
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	02080006 	andeq	r0, r8, #6
     2e0:	00087d00 	andeq	r7, r8, r0, lsl #26
     2e4:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	40000000 	andmi	r0, r0, r0
     2ec:	42080007 	andmi	r0, r8, #7
          return HAL_TIMEOUT;
     2f0:	02080007 	andeq	r0, r8, #7
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	42007d00 	andmi	r7, r0, #0, 26
     2f8:	84080007 	strhi	r0, [r8], #-7
     2fc:	02080007 	andeq	r0, r8, #7
     300:	84107d00 	ldrhi	r7, [r0], #-3328	; 0xfffff300
     304:	8c080007 	stchi	0, cr0, [r8], {7}
     308:	02080007 	andeq	r0, r8, #7
     30c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	02000000 	andeq	r0, r0, #0
     320:	00007d00 	andeq	r7, r0, r0, lsl #26
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00000000 	andeq	r0, r0, r0
     328:	02000000 	andeq	r0, r0, #0
     32c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     344:	01000000 	mrseq	r0, (UNDEF: 0)
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00005000 	andeq	r5, r0, r0
     34c:	00000000 	andeq	r0, r0, r0
     350:	00040000 	andeq	r0, r4, r0
     354:	9f5001f3 	svcls	0x005001f3
	...
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     360:	00500001 	subseq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	00000000 	andeq	r0, r0, r0
     368:	04000000 	streq	r0, [r0], #-0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	5001f300 	andpl	pc, r1, r0, lsl #6
     370:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     374:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	0007c000 	andeq	ip, r7, r0
     37c:	0007c208 	andeq	ip, r7, r8, lsl #4
     380:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     384:	0007c200 	andeq	ip, r7, r0, lsl #4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	0007c408 	andeq	ip, r7, r8, lsl #8
     38c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        __HAL_RCC_PLL_DISABLE();
     390:	0007c408 	andeq	ip, r7, r8, lsl #8
     394:	0007e008 	andeq	lr, r7, r8
        tickstart = HAL_GetTick();
     398:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	0007e028 	andeq	lr, r7, r8, lsr #32
     3a0:	0007e208 	andeq	lr, r7, r8, lsl #4
     3a4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	0007e208 	andeq	lr, r7, r8, lsl #4
     3ac:	00084008 	andeq	r4, r8, r8
            return HAL_TIMEOUT;
     3b0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00000028 	andeq	r0, r0, r8, lsr #32
	...
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c4:	0007c000 	andeq	ip, r7, r0
     3c8:	0007de08 	andeq	sp, r7, r8, lsl #28
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	50000108 	andpl	r0, r0, r8, lsl #2
     3d0:	080007de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sl}
     3d4:	080007e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, sl}
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	01f30004 	mvnseq	r0, r4
     3dc:	07e29f50 	ubfxeq	r9, r0, #30, #3
     3e0:	08260800 	stmdaeq	r6!, {fp}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00010800 	andeq	r0, r1, r0, lsl #16
     3e8:	00082650 	andeq	r2, r8, r0, asr r6
     3ec:	00084008 	andeq	r4, r8, r8
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	f3000408 	vshl.u8	d0, d8, d0
     3f4:	009f5001 	addseq	r5, pc, r1
     3f8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	8c000000 	stchi	0, cr0, [r0], {-0}
     400:	8e080007 	cdphi	0, 0, cr0, cr8, cr7, {0}
     404:	02080007 	andeq	r0, r8, #7
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	8e007d00 	cdphi	13, 0, cr7, cr0, cr0, {0}
     40c:	c0080007 	andgt	r0, r8, r7
     410:	02080007 	andeq	r0, r8, #7
     414:	00087d00 	andeq	r7, r8, r0, lsl #26
     418:	00000000 	andeq	r0, r0, r0
     41c:	40000000 	andmi	r0, r0, r0
     420:	42080008 	andmi	r0, r8, #8
     424:	02080008 	andeq	r0, r8, #8
        __HAL_RCC_PLL_ENABLE();
     428:	42007d00 	andmi	r7, r0, #0, 26
     42c:	70080008 	andvc	r0, r8, r8
        tickstart = HAL_GetTick();
     430:	02080008 	andeq	r0, r8, #8
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	70087d00 	andvc	r7, r8, r0, lsl #26
     438:	78080008 	stmdavc	r8, {r3}
     43c:	02080008 	andeq	r0, r8, #8
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00007d00 	andeq	r7, r0, r0, lsl #26
     444:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
     448:	34000000 	strcc	r0, [r0], #-0
  return HAL_OK;
     44c:	36080009 	strcc	r0, [r8], -r9
        __HAL_RCC_PLL_DISABLE();
     450:	02080009 	andeq	r0, r8, #9
     454:	36007d00 	strcc	r7, [r0], -r0, lsl #26
        tickstart = HAL_GetTick();
     458:	a8080009 	stmdage	r8, {r0, r3}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0208000a 	andeq	r0, r8, #10
     460:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
            return HAL_TIMEOUT;
     470:	34000000 	strcc	r0, [r0], #-0
  return HAL_OK;
     474:	40080009 	andmi	r0, r8, r9
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	01080009 	tsteq	r8, r9
        pll_config = RCC->PLLCFGR;
     47c:	09405000 	stmdbeq	r0, {ip, lr}^
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	09c00800 	stmibeq	r0, {fp}^
     484:	00010800 	andeq	r0, r1, r0, lsl #16
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0009c054 	andeq	ip, r9, r4, asr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	0009c608 	andeq	ip, r9, r8, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	50000108 	andpl	r0, r0, r8, lsl #2
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	080009c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
     49c:	00540001 	subseq	r0, r4, r1
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a8:	00098c00 	andeq	r8, r9, r0, lsl #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	00099e08 	andeq	r9, r9, r8, lsl #28
     4b0:	52000108 	andpl	r0, r0, #8, 2
	...
  return HAL_OK;
     4c0:	09be0000 	ldmibeq	lr!, {}	; <UNPREDICTABLE>
}
     4c4:	09c00800 	stmibeq	r0, {fp}^
        return HAL_ERROR;
     4c8:	00010800 	andeq	r0, r1, r0, lsl #16
        return HAL_ERROR;
     4cc:	0009e850 	andeq	lr, r9, r0, asr r8
}
     4d0:	000a0608 	andeq	r0, sl, r8, lsl #12
        return HAL_ERROR;
     4d4:	50000108 	andpl	r0, r0, r8, lsl #2
          return HAL_ERROR;
     4d8:	08000a44 	stmdaeq	r0, {r2, r6, r9, fp}
     4dc:	08000a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp}
     4e0:	00500001 	subseq	r0, r0, r1
     4e4:	00000000 	andeq	r0, r0, r0
     4e8:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
     4ec:	9e08000d 	cdpls	0, 0, cr0, cr8, cr13, {0}
     4f0:	0208000d 	andeq	r0, r8, #13
     4f4:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
     4f8:	a008000d 	andge	r0, r8, sp
     4fc:	0208000d 	andeq	r0, r8, #13
     500:	a0047d00 	andge	r7, r4, r0, lsl #26
     504:	0c08000d 	stceq	0, cr0, [r8], {13}
     508:	0208000e 	andeq	r0, r8, #14
     50c:	0c107d00 	ldceq	13, cr7, [r0], {-0}
     510:	1008000e 	andne	r0, r8, lr
     514:	0208000e 	andeq	r0, r8, #14
     518:	10047d00 	andne	r7, r4, r0, lsl #26
     51c:	3608000e 	strcc	r0, [r8], -lr
     520:	0208000e 	andeq	r0, r8, #14
     524:	36007d00 	strcc	r7, [r0], -r0, lsl #26
     528:	3c08000e 	stccc	0, cr0, [r8], {14}
     52c:	0208000e 	andeq	r0, r8, #14
     530:	3c107d00 	ldccc	13, cr7, [r0], {-0}
     534:	4408000e 	strmi	r0, [r8], #-14
     538:	0208000e 	andeq	r0, r8, #14
     53c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     554:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
     558:	0708000d 	streq	r0, [r8, -sp]
     55c:	0108000e 	tsteq	r8, lr
     560:	0e075000 	cdpeq	0, 0, cr5, cr7, cr0, {0}
     564:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
     568:	00040800 	andeq	r0, r4, r0, lsl #16
     56c:	9f5001f3 	svcls	0x005001f3
     570:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
     574:	08000e39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp}
     578:	39500001 	ldmdbcc	r0, {r0}^
     57c:	3c08000e 	stccc	0, cr0, [r8], {14}
     580:	0408000e 	streq	r0, [r8], #-14
     584:	5001f300 	andpl	pc, r1, r0, lsl #6
     588:	000e3c9f 	muleq	lr, pc, ip	; <UNPREDICTABLE>
     58c:	000e3e08 	andeq	r3, lr, r8, lsl #28
     590:	50000108 	andpl	r0, r0, r8, lsl #2
     594:	08000e3e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, sl, fp}
     598:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
     59c:	01f30004 	mvnseq	r0, r4
     5a0:	0e409f50 	mcreq	15, 2, r9, cr0, cr0, {2}
     5a4:	0e420800 	cdpeq	8, 4, cr0, cr2, cr0, {0}
     5a8:	00010800 	andeq	r0, r1, r0, lsl #16
     5ac:	000e4250 	andeq	r4, lr, r0, asr r2
     5b0:	000e4408 	andeq	r4, lr, r8, lsl #8
     5b4:	f3000408 	vshl.u8	d0, d8, d0
     5b8:	009f5001 	addseq	r5, pc, r1
	...
     5c4:	00000100 	andeq	r0, r0, r0, lsl #2
     5c8:	000d7200 	andeq	r7, sp, r0, lsl #4
     5cc:	000d8e08 	andeq	r8, sp, r8, lsl #28
     5d0:	52000108 	andpl	r0, r0, #8, 2
     5d4:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
     5d8:	08000e2a 	stmdaeq	r0, {r1, r3, r5, r9, sl, fp}
     5dc:	9f300002 	svcls	0x00300002
     5e0:	08000e2a 	stmdaeq	r0, {r1, r3, r5, r9, sl, fp}
     5e4:	08000e36 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl, fp}
     5e8:	00520001 	subseq	r0, r2, r1
     5ec:	00000000 	andeq	r0, r0, r0
     5f0:	01000000 	mrseq	r0, (UNDEF: 0)
     5f4:	00000000 	andeq	r0, r0, r0
     5f8:	000d7200 	andeq	r7, sp, r0, lsl #4
     5fc:	000d8e08 	andeq	r8, sp, r8, lsl #28
     600:	30000208 	andcc	r0, r0, r8, lsl #4
     604:	000e189f 	muleq	lr, pc, r8	; <UNPREDICTABLE>
     608:	000e2a08 	andeq	r2, lr, r8, lsl #20
     60c:	52000108 	andpl	r0, r0, #8, 2
     610:	08000e2a 	stmdaeq	r0, {r1, r3, r5, r9, sl, fp}
     614:	08000e36 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl, fp}
     618:	9f300002 	svcls	0x00300002
	...
     624:	0de00000 	stcleq	0, cr0, [r0]
     628:	0dec0800 	stcleq	8, cr0, [ip]
     62c:	00010800 	andeq	r0, r1, r0, lsl #16
     630:	00000053 	andeq	r0, r0, r3, asr r0
	...
     63c:	d4010000 	strle	r0, [r1], #-0
     640:	d808000d 	stmdale	r8, {r0, r2, r3}
     644:	0308000d 	movweq	r0, #32781	; 0x800d
     648:	9f0c7200 	svcls	0x000c7200
     64c:	08000dd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, fp}
     650:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
     654:	dc530001 	mrrcle	0, 0, r0, r3, cr1
     658:	dc08000d 	stcle	0, cr0, [r8], {13}
     65c:	0308000d 	movweq	r0, #32781	; 0x800d
     660:	9f0c7200 	svcls	0x000c7200
	...
     66c:	0ddc0100 	ldfeqe	f0, [ip]
     670:	0ddc0800 	ldcleq	8, cr0, [ip]
     674:	00010800 	andeq	r0, r1, r0, lsl #16
     678:	00000053 	andeq	r0, r0, r3, asr r0
     67c:	00000000 	andeq	r0, r0, r0
     680:	00000100 	andeq	r0, r0, r0, lsl #2
     684:	000de001 	andeq	lr, sp, r1
     688:	000de208 	andeq	lr, sp, r8, lsl #4
     68c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     690:	0de29f0c 	stcleq	15, cr9, [r2, #48]!	; 0x30
     694:	0de60800 	stcleq	8, cr0, [r6]
     698:	00010800 	andeq	r0, r1, r0, lsl #16
     69c:	00000052 	andeq	r0, r0, r2, asr r0
     6a0:	00000000 	andeq	r0, r0, r0
     6a4:	e0010100 	and	r0, r1, r0, lsl #2
     6a8:	e608000d 	str	r0, [r8], -sp
     6ac:	0108000d 	tsteq	r8, sp
     6b0:	00005300 	andeq	r5, r0, r0, lsl #6
     6b4:	00000000 	andeq	r0, r0, r0
     6b8:	01000000 	mrseq	r0, (UNDEF: 0)
     6bc:	08000de6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl, fp}
     6c0:	08000de6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl, fp}
     6c4:	00510001 	subseq	r0, r1, r1
     6c8:	00000000 	andeq	r0, r0, r0
     6cc:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
     6d0:	3008000d 	andcc	r0, r8, sp
     6d4:	0208000d 	andeq	r0, r8, #13
     6d8:	30007d00 	andcc	r7, r0, r0, lsl #26
     6dc:	4808000d 	stmdami	r8, {r0, r2, r3}
     6e0:	0208000d 	andeq	r0, r8, #13
     6e4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     6f0:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
     6f4:	4308000d 	movwmi	r0, #32781	; 0x800d
     6f8:	0108000d 	tsteq	r8, sp
     6fc:	0d435000 	stcleq	0, cr5, [r3, #-0]
     700:	0d480800 	stcleq	8, cr0, [r8, #-0]
     704:	00040800 	andeq	r0, r4, r0, lsl #16
     708:	9f5001f3 	svcls	0x005001f3
	...
     71c:	08d40000 	ldmeq	r4, {}^	; <UNPREDICTABLE>
     720:	08e00800 	stmiaeq	r0!, {fp}^
     724:	00010800 	andeq	r0, r1, r0, lsl #16
     728:	0008e050 	andeq	lr, r8, r0, asr r0
     72c:	0008e208 	andeq	lr, r8, r8, lsl #4
     730:	f3000408 	vshl.u8	d0, d8, d0
     734:	e29f5001 	adds	r5, pc, #1
     738:	18080008 	stmdane	r8, {r3}
     73c:	01080009 	tsteq	r8, r9
     740:	09185000 	ldmdbeq	r8, {ip, lr}
     744:	091a0800 	ldmdbeq	sl, {fp}
     748:	00040800 	andeq	r0, r4, r0, lsl #16
     74c:	9f5001f3 	svcls	0x005001f3
     750:	0800091a 	stmdaeq	r0, {r1, r3, r4, r8, fp}
     754:	08000934 	stmdaeq	r0, {r2, r4, r5, r8, fp}
     758:	00500001 	subseq	r0, r0, r1
	...
     764:	22000000 	andcs	r0, r0, #0
     768:	24080009 	strcs	r0, [r8], #-9
     76c:	01080009 	tsteq	r8, r9
     770:	09245300 	stmdbeq	r4!, {r8, r9, ip, lr}
     774:	092c0800 	stmdbeq	ip!, {fp}
     778:	00020800 	andeq	r0, r2, r0, lsl #16
     77c:	00002070 	andeq	r2, r0, r0, ror r0
	...
     78c:	00020000 	andeq	r0, r2, r0
     790:	0000007d 	andeq	r0, r0, sp, ror r0
     794:	00000000 	andeq	r0, r0, r0
     798:	00020000 	andeq	r0, r2, r0
     79c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     7b0:	00010000 	andeq	r0, r1, r0
     7b4:	00000050 	andeq	r0, r0, r0, asr r0
     7b8:	00000000 	andeq	r0, r0, r0
     7bc:	f3000400 	vshl.u8	d0, d0, d0
     7c0:	009f5001 	addseq	r5, pc, r1
	...
     7d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     7e8:	007d0002 	rsbseq	r0, sp, r2
	...
     7f4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     80c:	00500001 	subseq	r0, r0, r1
     810:	00000000 	andeq	r0, r0, r0
     814:	04000000 	streq	r0, [r0], #-0
     818:	5001f300 	andpl	pc, r1, r0, lsl #6
     81c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     82c:	01000000 	mrseq	r0, (UNDEF: 0)
     830:	00005000 	andeq	r5, r0, r0
	...
     840:	00020000 	andeq	r0, r2, r0
     844:	0000007d 	andeq	r0, r0, sp, ror r0
     848:	00000000 	andeq	r0, r0, r0
     84c:	00020000 	andeq	r0, r2, r0
     850:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     864:	00010000 	andeq	r0, r1, r0
     868:	00000050 	andeq	r0, r0, r0, asr r0
     86c:	00000000 	andeq	r0, r0, r0
     870:	f3000400 	vshl.u8	d0, d0, d0
     874:	009f5001 	addseq	r5, pc, r1
	...
     888:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     89c:	007d0002 	rsbseq	r0, sp, r2
	...
     8a8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     8c0:	00500001 	subseq	r0, r0, r1
     8c4:	00000000 	andeq	r0, r0, r0
     8c8:	04000000 	streq	r0, [r0], #-0
     8cc:	5001f300 	andpl	pc, r1, r0, lsl #6
     8d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     8e0:	01000000 	mrseq	r0, (UNDEF: 0)
     8e4:	00005000 	andeq	r5, r0, r0
     8e8:	00000000 	andeq	r0, r0, r0
     8ec:	0d4c0000 	stcleq	0, cr0, [ip, #-0]
     8f0:	0d4e0800 	stcleq	8, cr0, [lr, #-0]
     8f4:	00020800 	andeq	r0, r2, r0, lsl #16
     8f8:	0d4e007d 	stcleq	0, cr0, [lr, #-500]	; 0xfffffe0c
     8fc:	0d5c0800 	ldcleq	8, cr0, [ip, #-0]
     900:	00020800 	andeq	r0, r2, r0, lsl #16
     904:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     910:	0d4c0000 	stcleq	0, cr0, [ip, #-0]
     914:	0d500800 	ldcleq	8, cr0, [r0, #-0]
     918:	00010800 	andeq	r0, r1, r0, lsl #16
     91c:	000d5050 	andeq	r5, sp, r0, asr r0
     920:	000d5c08 	andeq	r5, sp, r8, lsl #24
     924:	f3000408 	vshl.u8	d0, d8, d0
     928:	009f5001 	addseq	r5, pc, r1
	...
     934:	000d5000 	andeq	r5, sp, r0
     938:	000d5908 	andeq	r5, sp, r8, lsl #18
     93c:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     948:	08780001 	ldmdaeq	r8!, {r0}^
     94c:	08d40800 	ldmeq	r4, {fp}^
     950:	00010800 	andeq	r0, r1, r0, lsl #16
     954:	00000050 	andeq	r0, r0, r0, asr r0
     958:	00000000 	andeq	r0, r0, r0
     95c:	86000000 	strhi	r0, [r0], -r0
     960:	90080008 	andls	r0, r8, r8
     964:	01080008 	tsteq	r8, r8
     968:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     974:	01000000 	mrseq	r0, (UNDEF: 0)
     978:	0800087a 	stmdaeq	r0, {r1, r3, r4, r5, r6, fp}
     97c:	0800087e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp}
     980:	0c720003 	ldcleq	0, cr0, [r2], #-12
     984:	00087e9f 	muleq	r8, pc, lr	; <UNPREDICTABLE>
     988:	00088208 	andeq	r8, r8, r8, lsl #4
     98c:	53000108 	movwpl	r0, #264	; 0x108
     990:	08000882 	stmdaeq	r0, {r1, r7, fp}
     994:	08000882 	stmdaeq	r0, {r1, r7, fp}
     998:	0c720003 	ldcleq	0, cr0, [r2], #-12
     99c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	82010000 	andhi	r0, r1, #0
     9a8:	82080008 	andhi	r0, r8, #8
     9ac:	01080008 	tsteq	r8, r8
     9b0:	00005300 	andeq	r5, r0, r0, lsl #6
     9b4:	00000000 	andeq	r0, r0, r0
     9b8:	00010000 	andeq	r0, r1, r0
     9bc:	08860100 	stmeq	r6, {r8}
     9c0:	08880800 	stmeq	r8, {fp}
     9c4:	00030800 	andeq	r0, r3, r0, lsl #16
     9c8:	889f0c72 	ldmhi	pc, {r1, r4, r5, r6, sl, fp}	; <UNPREDICTABLE>
     9cc:	8c080008 	stchi	0, cr0, [r8], {8}
     9d0:	01080008 	tsteq	r8, r8
     9d4:	00005200 	andeq	r5, r0, r0, lsl #4
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	01010000 	mrseq	r0, (UNDEF: 1)
     9e0:	08000886 	stmdaeq	r0, {r1, r2, r7, fp}
     9e4:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
     9e8:	00530001 	subseq	r0, r3, r1
	...
     9f4:	00088c01 	andeq	r8, r8, r1, lsl #24
     9f8:	00088c08 	andeq	r8, r8, r8, lsl #24
     9fc:	51000108 	tstpl	r0, r8, lsl #2
	...
     a08:	089e0000 	ldmeq	lr, {}	; <UNPREDICTABLE>
     a0c:	08aa0800 	stmiaeq	sl!, {fp}
     a10:	00010800 	andeq	r0, r1, r0, lsl #16
     a14:	00000053 	andeq	r0, r0, r3, asr r0
	...
     a20:	92010000 	andls	r0, r1, #0
     a24:	96080008 	strls	r0, [r8], -r8
     a28:	03080008 	movweq	r0, #32776	; 0x8008
     a2c:	9f147200 	svcls	0x00147200
     a30:	08000896 	stmdaeq	r0, {r1, r2, r4, r7, fp}
     a34:	0800089a 	stmdaeq	r0, {r1, r3, r4, r7, fp}
     a38:	9a530001 	bls	14c0a44 <_Min_Heap_Size+0x14c0244>
     a3c:	9a080008 	bls	200a64 <_Min_Heap_Size+0x200264>
     a40:	03080008 	movweq	r0, #32776	; 0x8008
     a44:	9f147200 	svcls	0x00147200
	...
     a50:	089a0100 	ldmeq	sl, {r8}
     a54:	089a0800 	ldmeq	sl, {fp}
     a58:	00010800 	andeq	r0, r1, r0, lsl #16
     a5c:	00000053 	andeq	r0, r0, r3, asr r0
     a60:	00000000 	andeq	r0, r0, r0
     a64:	00000100 	andeq	r0, r0, r0, lsl #2
     a68:	00089e01 	andeq	r9, r8, r1, lsl #28
     a6c:	0008a008 	andeq	sl, r8, r8
     a70:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     a74:	08a09f14 	stmiaeq	r0!, {r2, r4, r8, r9, sl, fp, ip, pc}
     a78:	08a40800 	stmiaeq	r4!, {fp}
     a7c:	00010800 	andeq	r0, r1, r0, lsl #16
     a80:	00000052 	andeq	r0, r0, r2, asr r0
     a84:	00000000 	andeq	r0, r0, r0
     a88:	9e010100 	adflss	f0, f1, f0
     a8c:	a4080008 	strge	r0, [r8], #-8
     a90:	01080008 	tsteq	r8, r8
     a94:	00005300 	andeq	r5, r0, r0, lsl #6
     a98:	00000000 	andeq	r0, r0, r0
     a9c:	01000000 	mrseq	r0, (UNDEF: 0)
     aa0:	080008a4 	stmdaeq	r0, {r2, r5, r7, fp}
     aa4:	080008a4 	stmdaeq	r0, {r2, r5, r7, fp}
     aa8:	00510001 	subseq	r0, r1, r1
	...
     ab4:	0008c800 	andeq	ip, r8, r0, lsl #16
     ab8:	0008d408 	andeq	sp, r8, r8, lsl #8
     abc:	53000108 	movwpl	r0, #264	; 0x108
	...
     acc:	08bc0100 	ldmeq	ip!, {r8}
     ad0:	08c00800 	stmiaeq	r0, {fp}^
     ad4:	00030800 	andeq	r0, r3, r0, lsl #16
     ad8:	c09f0c72 	addsgt	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     adc:	c4080008 	strgt	r0, [r8], #-8
     ae0:	01080008 	tsteq	r8, r8
     ae4:	08c45300 	stmiaeq	r4, {r8, r9, ip, lr}^
     ae8:	08c40800 	stmiaeq	r4, {fp}^
     aec:	00030800 	andeq	r0, r3, r0, lsl #16
     af0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     afc:	0008c401 	andeq	ip, r8, r1, lsl #8
     b00:	0008c408 	andeq	ip, r8, r8, lsl #8
     b04:	53000108 	movwpl	r0, #264	; 0x108
	...
     b10:	01000001 	tsteq	r0, r1
     b14:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
     b18:	080008ca 	stmdaeq	r0, {r1, r3, r6, r7, fp}
     b1c:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b20:	0008ca9f 	muleq	r8, pc, sl	; <UNPREDICTABLE>
     b24:	0008ce08 	andeq	ip, r8, r8, lsl #28
     b28:	52000108 	andpl	r0, r0, #8, 2
	...
     b34:	08c80101 	stmiaeq	r8, {r0, r8}^
     b38:	08ce0800 	stmiaeq	lr, {fp}^
     b3c:	00010800 	andeq	r0, r1, r0, lsl #16
     b40:	00000053 	andeq	r0, r0, r3, asr r0
     b44:	00000000 	andeq	r0, r0, r0
     b48:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
     b4c:	ce080008 	cdpgt	0, 0, cr0, cr8, cr8, {0}
     b50:	01080008 	tsteq	r8, r8
     b54:	00005100 	andeq	r5, r0, r0, lsl #2
     b58:	00000000 	andeq	r0, r0, r0
     b5c:	00010000 	andeq	r0, r1, r0
	...
     b68:	00500001 	subseq	r0, r0, r1
	...
     b7c:	53000100 	movwpl	r0, #256	; 0x100
	...
     b8c:	00000100 	andeq	r0, r0, r0, lsl #2
     b90:	00000000 	andeq	r0, r0, r0
     b94:	00030000 	andeq	r0, r3, r0
     b98:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     b9c:	00000000 	andeq	r0, r0, r0
     ba0:	01000000 	mrseq	r0, (UNDEF: 0)
     ba4:	00005300 	andeq	r5, r0, r0, lsl #6
     ba8:	00000000 	andeq	r0, r0, r0
     bac:	00030000 	andeq	r0, r3, r0
     bb0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     bbc:	00000001 	andeq	r0, r0, r1
     bc0:	00000000 	andeq	r0, r0, r0
     bc4:	53000100 	movwpl	r0, #256	; 0x100
	...
     bd0:	01000001 	tsteq	r0, r1
	...
     bdc:	0c720003 	ldcleq	0, cr0, [r2], #-12
     be0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     be4:	00000000 	andeq	r0, r0, r0
     be8:	52000100 	andpl	r0, r0, #0, 2
	...
     bf4:	00000101 	andeq	r0, r0, r1, lsl #2
     bf8:	00000000 	andeq	r0, r0, r0
     bfc:	00010000 	andeq	r0, r1, r0
     c00:	00000053 	andeq	r0, r0, r3, asr r0
     c04:	00000000 	andeq	r0, r0, r0
     c08:	00010000 	andeq	r0, r1, r0
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	01000000 	mrseq	r0, (UNDEF: 0)
     c14:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     c24:	00020000 	andeq	r0, r2, r0
     c28:	0000007d 	andeq	r0, r0, sp, ror r0
     c2c:	00000000 	andeq	r0, r0, r0
     c30:	00020000 	andeq	r0, r2, r0
     c34:	00000c7d 	andeq	r0, r0, sp, ror ip
     c38:	00000000 	andeq	r0, r0, r0
     c3c:	00020000 	andeq	r0, r2, r0
     c40:	0000187d 	andeq	r1, r0, sp, ror r8
     c44:	00000000 	andeq	r0, r0, r0
     c48:	00020000 	andeq	r0, r2, r0
     c4c:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     c64:	00500001 	subseq	r0, r0, r1
     c68:	00000000 	andeq	r0, r0, r0
     c6c:	01000000 	mrseq	r0, (UNDEF: 0)
     c70:	00005400 	andeq	r5, r0, r0, lsl #8
     c74:	00000000 	andeq	r0, r0, r0
     c78:	00040000 	andeq	r0, r4, r0
     c7c:	9f5001f3 	svcls	0x005001f3
	...
     c94:	00010000 	andeq	r0, r1, r0
     c98:	00000051 	andeq	r0, r0, r1, asr r0
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	52000100 	andpl	r0, r0, #0, 2
	...
     cac:	01f30004 	mvnseq	r0, r4
     cb0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     cc8:	00010000 	andeq	r0, r1, r0
     ccc:	00000052 	andeq	r0, r0, r2, asr r0
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	70000200 	andvc	r0, r0, r0, lsl #4
     cd8:	0000002c 	andeq	r0, r0, ip, lsr #32
     cdc:	00000000 	andeq	r0, r0, r0
     ce0:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
     ce4:	0000002c 	andeq	r0, r0, ip, lsr #32
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	f3000400 	vshl.u8	d0, d0, d0
     cf0:	009f5201 	addseq	r5, pc, r1, lsl #4
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     d04:	f2000600 	vmax.s8	d0, d0, d0
     d08:	0000395f 	andeq	r3, r0, pc, asr r9
	...
     d1c:	01000000 	mrseq	r0, (UNDEF: 0)
     d20:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     d2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     d38:	0c720003 	ldcleq	0, cr0, [r2], #-12
     d3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d40:	00000000 	andeq	r0, r0, r0
     d44:	53000100 	movwpl	r0, #256	; 0x100
	...
     d50:	0c720003 	ldcleq	0, cr0, [r2], #-12
     d54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	00010000 	andeq	r0, r1, r0
     d60:	00000000 	andeq	r0, r0, r0
     d64:	01000000 	mrseq	r0, (UNDEF: 0)
     d68:	00005300 	andeq	r5, r0, r0, lsl #6
     d6c:	00000000 	andeq	r0, r0, r0
     d70:	00010000 	andeq	r0, r1, r0
     d74:	00000100 	andeq	r0, r0, r0, lsl #2
     d78:	00000000 	andeq	r0, r0, r0
     d7c:	00030000 	andeq	r0, r3, r0
     d80:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     d84:	00000000 	andeq	r0, r0, r0
     d88:	01000000 	mrseq	r0, (UNDEF: 0)
     d8c:	00005200 	andeq	r5, r0, r0, lsl #4
     d90:	00000000 	andeq	r0, r0, r0
     d94:	01010000 	mrseq	r0, (UNDEF: 1)
	...
     da0:	00530001 	subseq	r0, r3, r1
	...
     dac:	00000001 	andeq	r0, r0, r1
     db0:	00000000 	andeq	r0, r0, r0
     db4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     dc8:	00010000 	andeq	r0, r1, r0
     dcc:	00000053 	andeq	r0, r0, r3, asr r0
	...
     dd8:	00010000 	andeq	r0, r1, r0
     ddc:	00000000 	andeq	r0, r0, r0
     de0:	03000000 	movweq	r0, #0
     de4:	9f147200 	svcls	0x00147200
	...
     df0:	00530001 	subseq	r0, r3, r1
     df4:	00000000 	andeq	r0, r0, r0
     df8:	03000000 	movweq	r0, #0
     dfc:	9f147200 	svcls	0x00147200
	...
     e08:	00000100 	andeq	r0, r0, r0, lsl #2
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	00010000 	andeq	r0, r1, r0
     e14:	00000053 	andeq	r0, r0, r3, asr r0
     e18:	00000000 	andeq	r0, r0, r0
     e1c:	00000100 	andeq	r0, r0, r0, lsl #2
     e20:	00000001 	andeq	r0, r0, r1
     e24:	00000000 	andeq	r0, r0, r0
     e28:	72000300 	andvc	r0, r0, #0, 6
     e2c:	00009f14 	andeq	r9, r0, r4, lsl pc
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00010000 	andeq	r0, r1, r0
     e38:	00000052 	andeq	r0, r0, r2, asr r0
     e3c:	00000000 	andeq	r0, r0, r0
     e40:	00010100 	andeq	r0, r1, r0, lsl #2
     e44:	00000000 	andeq	r0, r0, r0
     e48:	01000000 	mrseq	r0, (UNDEF: 0)
     e4c:	00005300 	andeq	r5, r0, r0, lsl #6
     e50:	00000000 	andeq	r0, r0, r0
     e54:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     e60:	00510001 	subseq	r0, r1, r1
	...
     e74:	53000100 	movwpl	r0, #256	; 0x100
	...
     e84:	00000100 	andeq	r0, r0, r0, lsl #2
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	00030000 	andeq	r0, r3, r0
     e90:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
     e94:	00000000 	andeq	r0, r0, r0
     e98:	01000000 	mrseq	r0, (UNDEF: 0)
     e9c:	00005300 	andeq	r5, r0, r0, lsl #6
     ea0:	00000000 	andeq	r0, r0, r0
     ea4:	00030000 	andeq	r0, r3, r0
     ea8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
     eb4:	00000001 	andeq	r0, r0, r1
     eb8:	00000000 	andeq	r0, r0, r0
     ebc:	53000100 	movwpl	r0, #256	; 0x100
	...
     ec8:	01000001 	tsteq	r0, r1
	...
     ed4:	14720003 	ldrbtne	r0, [r2], #-3
     ed8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     edc:	00000000 	andeq	r0, r0, r0
     ee0:	52000100 	andpl	r0, r0, #0, 2
	...
     eec:	00000101 	andeq	r0, r0, r1, lsl #2
     ef0:	00000000 	andeq	r0, r0, r0
     ef4:	00010000 	andeq	r0, r1, r0
     ef8:	00000053 	andeq	r0, r0, r3, asr r0
     efc:	00000000 	andeq	r0, r0, r0
     f00:	00010000 	andeq	r0, r1, r0
     f04:	00000000 	andeq	r0, r0, r0
     f08:	01000000 	mrseq	r0, (UNDEF: 0)
     f0c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     f20:	00010000 	andeq	r0, r1, r0
     f24:	00000050 	andeq	r0, r0, r0, asr r0
     f28:	00000000 	andeq	r0, r0, r0
     f2c:	f3000400 	vshl.u8	d0, d0, d0
     f30:	009f5001 	addseq	r5, pc, r1
	...
     f48:	52000100 	andpl	r0, r0, #0, 2
	...
     f54:	2c700002 	ldclcs	0, cr0, [r0], #-8
	...
     f60:	01f30004 	mvnseq	r0, r4
     f64:	00009f52 	andeq	r9, r0, r2, asr pc
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	0aa80000 	beq	fea00f74 <_estack+0xde9ffd34>
     f70:	0aac0800 	beq	feb02f78 <_estack+0xdeb01d38>
     f74:	00020800 	andeq	r0, r2, r0, lsl #16
     f78:	0aac007d 	beq	feb01174 <_estack+0xdeafff34>
     f7c:	0aae0800 	beq	feb82f84 <_estack+0xdeb81d44>
     f80:	00020800 	andeq	r0, r2, r0, lsl #16
     f84:	0aae1c7d 	beq	feb88180 <_estack+0xdeb86f40>
     f88:	0b260800 	bleq	982f90 <_Min_Heap_Size+0x982790>
     f8c:	00020800 	andeq	r0, r2, r0, lsl #16
     f90:	0b26287d 	bleq	98b18c <_Min_Heap_Size+0x98a98c>
     f94:	0b2a0800 	bleq	a82f9c <_Min_Heap_Size+0xa8279c>
     f98:	00020800 	andeq	r0, r2, r0, lsl #16
     f9c:	0b2a1c7d 	bleq	a88198 <_Min_Heap_Size+0xa87998>
     fa0:	0b320800 	bleq	c82fa8 <_Min_Heap_Size+0xc827a8>
     fa4:	00020800 	andeq	r0, r2, r0, lsl #16
     fa8:	0000287d 	andeq	r2, r0, sp, ror r8
     fac:	00000000 	andeq	r0, r0, r0
     fb0:	01000000 	mrseq	r0, (UNDEF: 0)
     fb4:	0aa80001 	beq	fea00fc0 <_estack+0xde9ffd80>
     fb8:	0aba0800 	beq	fee82fc0 <_estack+0xdee81d80>
     fbc:	00010800 	andeq	r0, r1, r0, lsl #16
     fc0:	000aba50 	andeq	fp, sl, r0, asr sl
     fc4:	000b3208 	andeq	r3, fp, r8, lsl #4
     fc8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
     fd4:	00010100 	andeq	r0, r1, r0, lsl #2
     fd8:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
     fdc:	08000aba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, fp}
     fe0:	ba510001 	blt	1440fec <_Min_Heap_Size+0x14407ec>
     fe4:	3208000a 	andcc	r0, r8, #10
     fe8:	0108000b 	tsteq	r8, fp
     fec:	00005600 	andeq	r5, r0, r0, lsl #12
     ff0:	00000000 	andeq	r0, r0, r0
     ff4:	01000000 	mrseq	r0, (UNDEF: 0)
     ff8:	0aa80001 	beq	fea01004 <_estack+0xde9ffdc4>
     ffc:	0aba0800 	beq	fee83004 <_estack+0xdee81dc4>
    1000:	00010800 	andeq	r0, r1, r0, lsl #16
    1004:	000aba52 	andeq	fp, sl, r2, asr sl
    1008:	000b3208 	andeq	r3, fp, r8, lsl #4
    100c:	f3000408 	vshl.u8	d0, d8, d0
    1010:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    101c:	a8000101 	stmdage	r0, {r0, r8}
    1020:	ba08000a 	blt	201050 <_Min_Heap_Size+0x200850>
    1024:	0108000a 	tsteq	r8, sl
    1028:	0aba5300 	beq	fee95c30 <_estack+0xdee949f0>
    102c:	0b320800 	bleq	c83034 <_Min_Heap_Size+0xc82834>
    1030:	00010800 	andeq	r0, r1, r0, lsl #16
    1034:	00000059 	andeq	r0, r0, r9, asr r0
	...
    1040:	000aa800 	andeq	sl, sl, r0, lsl #16
    1044:	000b2a08 	andeq	r2, fp, r8, lsl #20
    1048:	91000208 	tstls	r0, r8, lsl #4
    104c:	000b2a00 	andeq	r2, fp, r0, lsl #20
    1050:	000b3208 	andeq	r3, fp, r8, lsl #4
    1054:	91000208 	tstls	r0, r8, lsl #4
	...
    1068:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1074:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1078:	00000008 	andeq	r0, r0, r8
	...
    1090:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    109c:	01f30004 	mvnseq	r0, r4
    10a0:	00009f50 	andeq	r9, r0, r0, asr pc
    10a4:	00000000 	andeq	r0, r0, r0
    10a8:	00010000 	andeq	r0, r1, r0
    10ac:	00000050 	andeq	r0, r0, r0, asr r0
    10b0:	00000000 	andeq	r0, r0, r0
    10b4:	f3000400 	vshl.u8	d0, d0, d0
    10b8:	009f5001 	addseq	r5, pc, r1
    10bc:	00000000 	andeq	r0, r0, r0
    10c0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    10d4:	30000200 	andcc	r0, r0, r0, lsl #4
    10d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    10dc:	00000000 	andeq	r0, r0, r0
    10e0:	72000b00 	andvc	r0, r0, #0, 22
    10e4:	1a800800 	bne	fe0030ec <_estack+0xde001eac>
    10e8:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    10ec:	00009f1a 	andeq	r9, r0, sl, lsl pc
    10f0:	00000000 	andeq	r0, r0, r0
    10f4:	00080000 	andeq	r0, r8, r0
    10f8:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    10fc:	9f1aff08 	svcls	0x001aff08
	...
    1108:	0072000b 	rsbseq	r0, r2, fp
    110c:	301a8008 	andscc	r8, sl, r8
    1110:	1aff082e 	bne	fffc31d0 <_estack+0xdffc1f90>
    1114:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1118:	00000000 	andeq	r0, r0, r0
    111c:	72000800 	andvc	r0, r0, #0, 16
    1120:	082e3000 	stmdaeq	lr!, {ip, sp}
    1124:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    1138:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    114c:	007d0002 	rsbseq	r0, sp, r2
	...
    1158:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1170:	00500001 	subseq	r0, r0, r1
    1174:	00000000 	andeq	r0, r0, r0
    1178:	04000000 	streq	r0, [r0], #-0
    117c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1180:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1194:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    11a0:	00500001 	subseq	r0, r0, r1
	...
    11b0:	02000000 	andeq	r0, r0, #0
    11b4:	00007d00 	andeq	r7, r0, r0, lsl #26
    11b8:	00000000 	andeq	r0, r0, r0
    11bc:	02000000 	andeq	r0, r0, #0
    11c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    11d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    11e4:	00530001 	subseq	r0, r3, r1
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	04000000 	streq	r0, [r0], #-0
    11f0:	5001f300 	andpl	pc, r1, r0, lsl #6
    11f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1208:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1214:	00500001 	subseq	r0, r0, r1
	...
    1228:	53000100 	movwpl	r0, #256	; 0x100
	...
    1238:	00000100 	andeq	r0, r0, r0, lsl #2
    123c:	00000000 	andeq	r0, r0, r0
    1240:	00030000 	andeq	r0, r3, r0
    1244:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1248:	00000000 	andeq	r0, r0, r0
    124c:	01000000 	mrseq	r0, (UNDEF: 0)
    1250:	00005300 	andeq	r5, r0, r0, lsl #6
    1254:	00000000 	andeq	r0, r0, r0
    1258:	00030000 	andeq	r0, r3, r0
    125c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1268:	00000001 	andeq	r0, r0, r1
    126c:	00000000 	andeq	r0, r0, r0
    1270:	53000100 	movwpl	r0, #256	; 0x100
	...
    127c:	01000001 	tsteq	r0, r1
	...
    1288:	0c720003 	ldcleq	0, cr0, [r2], #-12
    128c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1290:	00000000 	andeq	r0, r0, r0
    1294:	52000100 	andpl	r0, r0, #0, 2
	...
    12a0:	00000101 	andeq	r0, r0, r1, lsl #2
    12a4:	00000000 	andeq	r0, r0, r0
    12a8:	00010000 	andeq	r0, r1, r0
    12ac:	00000053 	andeq	r0, r0, r3, asr r0
    12b0:	00000000 	andeq	r0, r0, r0
    12b4:	00010000 	andeq	r0, r1, r0
    12b8:	00000000 	andeq	r0, r0, r0
    12bc:	01000000 	mrseq	r0, (UNDEF: 0)
    12c0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    12d4:	00530001 	subseq	r0, r3, r1
	...
    12e4:	00000001 	andeq	r0, r0, r1
    12e8:	00000000 	andeq	r0, r0, r0
    12ec:	72000300 	andvc	r0, r0, #0, 6
    12f0:	00009f14 	andeq	r9, r0, r4, lsl pc
    12f4:	00000000 	andeq	r0, r0, r0
    12f8:	00010000 	andeq	r0, r1, r0
    12fc:	00000053 	andeq	r0, r0, r3, asr r0
    1300:	00000000 	andeq	r0, r0, r0
    1304:	72000300 	andvc	r0, r0, #0, 6
    1308:	00009f14 	andeq	r9, r0, r4, lsl pc
    130c:	00000000 	andeq	r0, r0, r0
    1310:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    131c:	00530001 	subseq	r0, r3, r1
    1320:	00000000 	andeq	r0, r0, r0
    1324:	01000000 	mrseq	r0, (UNDEF: 0)
    1328:	00010000 	andeq	r0, r1, r0
    132c:	00000000 	andeq	r0, r0, r0
    1330:	03000000 	movweq	r0, #0
    1334:	9f147200 	svcls	0x00147200
	...
    1340:	00520001 	subseq	r0, r2, r1
    1344:	00000000 	andeq	r0, r0, r0
    1348:	01000000 	mrseq	r0, (UNDEF: 0)
    134c:	00000001 	andeq	r0, r0, r1
    1350:	00000000 	andeq	r0, r0, r0
    1354:	53000100 	movwpl	r0, #256	; 0x100
	...
    1360:	00000100 	andeq	r0, r0, r0, lsl #2
    1364:	00000000 	andeq	r0, r0, r0
    1368:	00010000 	andeq	r0, r1, r0
    136c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    137c:	01000000 	mrseq	r0, (UNDEF: 0)
    1380:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    138c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1398:	14720003 	ldrbtne	r0, [r2], #-3
    139c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	53000100 	movwpl	r0, #256	; 0x100
	...
    13b0:	14720003 	ldrbtne	r0, [r2], #-3
    13b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	00010000 	andeq	r0, r1, r0
    13c0:	00000000 	andeq	r0, r0, r0
    13c4:	01000000 	mrseq	r0, (UNDEF: 0)
    13c8:	00005300 	andeq	r5, r0, r0, lsl #6
    13cc:	00000000 	andeq	r0, r0, r0
    13d0:	00010000 	andeq	r0, r1, r0
    13d4:	00000100 	andeq	r0, r0, r0, lsl #2
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	00030000 	andeq	r0, r3, r0
    13e0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	01000000 	mrseq	r0, (UNDEF: 0)
    13ec:	00005200 	andeq	r5, r0, r0, lsl #4
    13f0:	00000000 	andeq	r0, r0, r0
    13f4:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1400:	00530001 	subseq	r0, r3, r1
	...
    140c:	00000001 	andeq	r0, r0, r1
    1410:	00000000 	andeq	r0, r0, r0
    1414:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1428:	00010000 	andeq	r0, r1, r0
    142c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1438:	00010000 	andeq	r0, r1, r0
    143c:	00000000 	andeq	r0, r0, r0
    1440:	03000000 	movweq	r0, #0
    1444:	9f0c7200 	svcls	0x000c7200
	...
    1450:	00530001 	subseq	r0, r3, r1
    1454:	00000000 	andeq	r0, r0, r0
    1458:	03000000 	movweq	r0, #0
    145c:	9f0c7200 	svcls	0x000c7200
	...
    1468:	00000100 	andeq	r0, r0, r0, lsl #2
    146c:	00000000 	andeq	r0, r0, r0
    1470:	00010000 	andeq	r0, r1, r0
    1474:	00000053 	andeq	r0, r0, r3, asr r0
    1478:	00000000 	andeq	r0, r0, r0
    147c:	00000100 	andeq	r0, r0, r0, lsl #2
    1480:	00000001 	andeq	r0, r0, r1
    1484:	00000000 	andeq	r0, r0, r0
    1488:	72000300 	andvc	r0, r0, #0, 6
    148c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1490:	00000000 	andeq	r0, r0, r0
    1494:	00010000 	andeq	r0, r1, r0
    1498:	00000052 	andeq	r0, r0, r2, asr r0
    149c:	00000000 	andeq	r0, r0, r0
    14a0:	00010100 	andeq	r0, r1, r0, lsl #2
    14a4:	00000000 	andeq	r0, r0, r0
    14a8:	01000000 	mrseq	r0, (UNDEF: 0)
    14ac:	00005300 	andeq	r5, r0, r0, lsl #6
    14b0:	00000000 	andeq	r0, r0, r0
    14b4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    14c0:	00510001 	subseq	r0, r1, r1
	...
    14d0:	02000000 	andeq	r0, r0, #0
    14d4:	00007d00 	andeq	r7, r0, r0, lsl #26
    14d8:	00000000 	andeq	r0, r0, r0
    14dc:	02000000 	andeq	r0, r0, #0
    14e0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    14f4:	01000000 	mrseq	r0, (UNDEF: 0)
    14f8:	00005000 	andeq	r5, r0, r0
    14fc:	00000000 	andeq	r0, r0, r0
    1500:	00040000 	andeq	r0, r4, r0
    1504:	9f5001f3 	svcls	0x005001f3
	...
    1510:	00000001 	andeq	r0, r0, r1
	...
    151c:	38700002 	ldmdacc	r0!, {r1}^
	...
    1528:	00500001 	subseq	r0, r0, r1
	...
    1538:	02000000 	andeq	r0, r0, #0
    153c:	00007d00 	andeq	r7, r0, r0, lsl #26
    1540:	00000000 	andeq	r0, r0, r0
    1544:	02000000 	andeq	r0, r0, #0
    1548:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1560:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    156c:	00530001 	subseq	r0, r3, r1
    1570:	00000000 	andeq	r0, r0, r0
    1574:	04000000 	streq	r0, [r0], #-0
    1578:	5001f300 	andpl	pc, r1, r0, lsl #6
    157c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1590:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    159c:	00500001 	subseq	r0, r0, r1
	...
    15b0:	53000100 	movwpl	r0, #256	; 0x100
	...
    15c0:	00000100 	andeq	r0, r0, r0, lsl #2
    15c4:	00000000 	andeq	r0, r0, r0
    15c8:	00030000 	andeq	r0, r3, r0
    15cc:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    15d0:	00000000 	andeq	r0, r0, r0
    15d4:	01000000 	mrseq	r0, (UNDEF: 0)
    15d8:	00005300 	andeq	r5, r0, r0, lsl #6
    15dc:	00000000 	andeq	r0, r0, r0
    15e0:	00030000 	andeq	r0, r3, r0
    15e4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    15f0:	00000001 	andeq	r0, r0, r1
    15f4:	00000000 	andeq	r0, r0, r0
    15f8:	53000100 	movwpl	r0, #256	; 0x100
	...
    1604:	01000001 	tsteq	r0, r1
	...
    1610:	14720003 	ldrbtne	r0, [r2], #-3
    1614:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1618:	00000000 	andeq	r0, r0, r0
    161c:	52000100 	andpl	r0, r0, #0, 2
	...
    1628:	00000101 	andeq	r0, r0, r1, lsl #2
    162c:	00000000 	andeq	r0, r0, r0
    1630:	00010000 	andeq	r0, r1, r0
    1634:	00000053 	andeq	r0, r0, r3, asr r0
    1638:	00000000 	andeq	r0, r0, r0
    163c:	00010000 	andeq	r0, r1, r0
    1640:	00000000 	andeq	r0, r0, r0
    1644:	01000000 	mrseq	r0, (UNDEF: 0)
    1648:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    165c:	00530001 	subseq	r0, r3, r1
	...
    166c:	00000001 	andeq	r0, r0, r1
    1670:	00000000 	andeq	r0, r0, r0
    1674:	72000300 	andvc	r0, r0, #0, 6
    1678:	00009f0c 	andeq	r9, r0, ip, lsl #30
    167c:	00000000 	andeq	r0, r0, r0
    1680:	00010000 	andeq	r0, r1, r0
    1684:	00000053 	andeq	r0, r0, r3, asr r0
    1688:	00000000 	andeq	r0, r0, r0
    168c:	72000300 	andvc	r0, r0, #0, 6
    1690:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1694:	00000000 	andeq	r0, r0, r0
    1698:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    16a4:	00530001 	subseq	r0, r3, r1
    16a8:	00000000 	andeq	r0, r0, r0
    16ac:	01000000 	mrseq	r0, (UNDEF: 0)
    16b0:	00010000 	andeq	r0, r1, r0
    16b4:	00000000 	andeq	r0, r0, r0
    16b8:	03000000 	movweq	r0, #0
    16bc:	9f0c7200 	svcls	0x000c7200
	...
    16c8:	00520001 	subseq	r0, r2, r1
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	01000000 	mrseq	r0, (UNDEF: 0)
    16d4:	00000001 	andeq	r0, r0, r1
    16d8:	00000000 	andeq	r0, r0, r0
    16dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    16e8:	00000100 	andeq	r0, r0, r0, lsl #2
    16ec:	00000000 	andeq	r0, r0, r0
    16f0:	00010000 	andeq	r0, r1, r0
    16f4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1708:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1714:	01f30004 	mvnseq	r0, r4
    1718:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    172c:	00010000 	andeq	r0, r1, r0
    1730:	00000050 	andeq	r0, r0, r0, asr r0
    1734:	00000000 	andeq	r0, r0, r0
    1738:	f3000400 	vshl.u8	d0, d0, d0
    173c:	009f5001 	addseq	r5, pc, r1
    1740:	00000000 	andeq	r0, r0, r0
    1744:	02000000 	andeq	r0, r0, #0
	...
    1750:	02000000 	andeq	r0, r0, #0
    1754:	009f3000 	addseq	r3, pc, r0
    1758:	00000000 	andeq	r0, r0, r0
    175c:	01000000 	mrseq	r0, (UNDEF: 0)
    1760:	00005300 	andeq	r5, r0, r0, lsl #6
    1764:	00000000 	andeq	r0, r0, r0
    1768:	00020000 	andeq	r0, r2, r0
	...
    1774:	00020000 	andeq	r0, r2, r0
    1778:	00009f30 	andeq	r9, r0, r0, lsr pc
    177c:	00000000 	andeq	r0, r0, r0
    1780:	00010000 	andeq	r0, r1, r0
    1784:	00000050 	andeq	r0, r0, r0, asr r0
	...
    179c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    17a8:	01f30004 	mvnseq	r0, r4
    17ac:	00009f50 	andeq	r9, r0, r0, asr pc
    17b0:	00000000 	andeq	r0, r0, r0
    17b4:	00010000 	andeq	r0, r1, r0
    17b8:	00000050 	andeq	r0, r0, r0, asr r0
    17bc:	00000000 	andeq	r0, r0, r0
    17c0:	f3000400 	vshl.u8	d0, d0, d0
    17c4:	009f5001 	addseq	r5, pc, r1
    17c8:	00000000 	andeq	r0, r0, r0
    17cc:	02000000 	andeq	r0, r0, #0
	...
    17dc:	02000000 	andeq	r0, r0, #0
    17e0:	009f3000 	addseq	r3, pc, r0
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	01000000 	mrseq	r0, (UNDEF: 0)
    17ec:	00005300 	andeq	r5, r0, r0, lsl #6
    17f0:	00000000 	andeq	r0, r0, r0
    17f4:	00020000 	andeq	r0, r2, r0
    17f8:	00000c72 	andeq	r0, r0, r2, ror ip
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	00020000 	andeq	r0, r2, r0
    1804:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    181c:	00010000 	andeq	r0, r1, r0
    1820:	00000050 	andeq	r0, r0, r0, asr r0
    1824:	00000000 	andeq	r0, r0, r0
    1828:	f3000400 	vshl.u8	d0, d0, d0
    182c:	009f5001 	addseq	r5, pc, r1
    1830:	00000000 	andeq	r0, r0, r0
    1834:	01000000 	mrseq	r0, (UNDEF: 0)
    1838:	00005000 	andeq	r5, r0, r0
    183c:	00000000 	andeq	r0, r0, r0
    1840:	00040000 	andeq	r0, r4, r0
    1844:	9f5001f3 	svcls	0x005001f3
	...
    1850:	00000002 	andeq	r0, r0, r2
	...
    1860:	9f300002 	svcls	0x00300002
	...
    186c:	00530001 	subseq	r0, r3, r1
    1870:	00000000 	andeq	r0, r0, r0
    1874:	02000000 	andeq	r0, r0, #0
    1878:	000c7200 	andeq	r7, ip, r0, lsl #4
    187c:	00000000 	andeq	r0, r0, r0
    1880:	02000000 	andeq	r0, r0, #0
    1884:	009f3000 	addseq	r3, pc, r0
	...
    1894:	02000000 	andeq	r0, r0, #0
    1898:	00007d00 	andeq	r7, r0, r0, lsl #26
    189c:	00000000 	andeq	r0, r0, r0
    18a0:	02000000 	andeq	r0, r0, #0
    18a4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    18b8:	01000000 	mrseq	r0, (UNDEF: 0)
    18bc:	00005000 	andeq	r5, r0, r0
    18c0:	00000000 	andeq	r0, r0, r0
    18c4:	00010000 	andeq	r0, r1, r0
    18c8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    18d8:	01000000 	mrseq	r0, (UNDEF: 0)
    18dc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    18e8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    18f4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    18f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    18fc:	00000000 	andeq	r0, r0, r0
    1900:	53000100 	movwpl	r0, #256	; 0x100
	...
    190c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1914:	00000000 	andeq	r0, r0, r0
    1918:	00010000 	andeq	r0, r1, r0
    191c:	00000000 	andeq	r0, r0, r0
    1920:	01000000 	mrseq	r0, (UNDEF: 0)
    1924:	00005300 	andeq	r5, r0, r0, lsl #6
    1928:	00000000 	andeq	r0, r0, r0
    192c:	00010000 	andeq	r0, r1, r0
    1930:	00000100 	andeq	r0, r0, r0, lsl #2
    1934:	00000000 	andeq	r0, r0, r0
    1938:	00030000 	andeq	r0, r3, r0
    193c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1940:	00000000 	andeq	r0, r0, r0
    1944:	01000000 	mrseq	r0, (UNDEF: 0)
    1948:	00005200 	andeq	r5, r0, r0, lsl #4
    194c:	00000000 	andeq	r0, r0, r0
    1950:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    195c:	00530001 	subseq	r0, r3, r1
	...
    1968:	00000001 	andeq	r0, r0, r1
    196c:	00000000 	andeq	r0, r0, r0
    1970:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1984:	007d0002 	rsbseq	r0, sp, r2
	...
    1990:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    19a8:	00500001 	subseq	r0, r0, r1
    19ac:	00000000 	andeq	r0, r0, r0
    19b0:	01000000 	mrseq	r0, (UNDEF: 0)
    19b4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    19c8:	00530001 	subseq	r0, r3, r1
	...
    19d8:	00000001 	andeq	r0, r0, r1
    19dc:	00000000 	andeq	r0, r0, r0
    19e0:	72000300 	andvc	r0, r0, #0, 6
    19e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    19e8:	00000000 	andeq	r0, r0, r0
    19ec:	00010000 	andeq	r0, r1, r0
    19f0:	00000053 	andeq	r0, r0, r3, asr r0
    19f4:	00000000 	andeq	r0, r0, r0
    19f8:	72000300 	andvc	r0, r0, #0, 6
    19fc:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1a00:	00000000 	andeq	r0, r0, r0
    1a04:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1a10:	00530001 	subseq	r0, r3, r1
    1a14:	00000000 	andeq	r0, r0, r0
    1a18:	01000000 	mrseq	r0, (UNDEF: 0)
    1a1c:	00010000 	andeq	r0, r1, r0
    1a20:	00000000 	andeq	r0, r0, r0
    1a24:	03000000 	movweq	r0, #0
    1a28:	9f0c7200 	svcls	0x000c7200
	...
    1a34:	00520001 	subseq	r0, r2, r1
    1a38:	00000000 	andeq	r0, r0, r0
    1a3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a40:	00000001 	andeq	r0, r0, r1
    1a44:	00000000 	andeq	r0, r0, r0
    1a48:	53000100 	movwpl	r0, #256	; 0x100
	...
    1a54:	00000100 	andeq	r0, r0, r0, lsl #2
    1a58:	00000000 	andeq	r0, r0, r0
    1a5c:	00010000 	andeq	r0, r1, r0
    1a60:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1a70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1a7c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1a80:	00000008 	andeq	r0, r0, r8
	...
    1a94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1aa0:	00540001 	subseq	r0, r4, r1
	...
    1ab4:	53000100 	movwpl	r0, #256	; 0x100
	...
    1ac4:	00000100 	andeq	r0, r0, r0, lsl #2
    1ac8:	00000000 	andeq	r0, r0, r0
    1acc:	00030000 	andeq	r0, r3, r0
    1ad0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1ad4:	00000000 	andeq	r0, r0, r0
    1ad8:	01000000 	mrseq	r0, (UNDEF: 0)
    1adc:	00005300 	andeq	r5, r0, r0, lsl #6
    1ae0:	00000000 	andeq	r0, r0, r0
    1ae4:	00030000 	andeq	r0, r3, r0
    1ae8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1af4:	00000001 	andeq	r0, r0, r1
    1af8:	00000000 	andeq	r0, r0, r0
    1afc:	53000100 	movwpl	r0, #256	; 0x100
	...
    1b08:	01000001 	tsteq	r0, r1
	...
    1b14:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1b18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1b1c:	00000000 	andeq	r0, r0, r0
    1b20:	52000100 	andpl	r0, r0, #0, 2
	...
    1b2c:	00000101 	andeq	r0, r0, r1, lsl #2
    1b30:	00000000 	andeq	r0, r0, r0
    1b34:	00010000 	andeq	r0, r1, r0
    1b38:	00000053 	andeq	r0, r0, r3, asr r0
    1b3c:	00000000 	andeq	r0, r0, r0
    1b40:	00010000 	andeq	r0, r1, r0
    1b44:	00000000 	andeq	r0, r0, r0
    1b48:	01000000 	mrseq	r0, (UNDEF: 0)
    1b4c:	00005100 	andeq	r5, r0, r0, lsl #2
    1b50:	00000000 	andeq	r0, r0, r0
    1b54:	0e440000 	cdpeq	0, 4, cr0, cr4, cr0, {0}
    1b58:	0e460800 	cdpeq	8, 4, cr0, cr6, cr0, {0}
    1b5c:	00020800 	andeq	r0, r2, r0, lsl #16
    1b60:	0e46007d 	mcreq	0, 2, r0, cr6, cr13, {3}
    1b64:	0e480800 	cdpeq	8, 4, cr0, cr8, cr0, {0}
    1b68:	00020800 	andeq	r0, r2, r0, lsl #16
    1b6c:	0e480c7d 	mcreq	12, 2, r0, cr8, cr13, {3}
    1b70:	0e960800 	cdpeq	8, 9, cr0, cr6, cr0, {0}
    1b74:	00020800 	andeq	r0, r2, r0, lsl #16
    1b78:	0e96187d 	mrceq	8, 4, r1, cr6, cr13, {3}
    1b7c:	0e980800 	cdpeq	8, 9, cr0, cr8, cr0, {0}
    1b80:	00020800 	andeq	r0, r2, r0, lsl #16
    1b84:	0e980c7d 	mrceq	12, 4, r0, cr8, cr13, {3}
    1b88:	10cc0800 	sbcne	r0, ip, r0, lsl #16
    1b8c:	00020800 	andeq	r0, r2, r0, lsl #16
    1b90:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    1b9c:	0e440000 	cdpeq	0, 4, cr0, cr4, cr0, {0}
    1ba0:	0e500800 	cdpeq	8, 5, cr0, cr0, cr0, {0}
    1ba4:	00010800 	andeq	r0, r1, r0, lsl #16
    1ba8:	000e5050 	andeq	r5, lr, r0, asr r0
    1bac:	0010cc08 	andseq	ip, r0, r8, lsl #24
    1bb0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    1bc8:	0e4e0000 	cdpeq	0, 4, cr0, cr14, cr0, {0}
    1bcc:	0e940800 	cdpeq	8, 9, cr0, cr4, cr0, {0}
    1bd0:	00010800 	andeq	r0, r1, r0, lsl #16
    1bd4:	000e9853 	andeq	r9, lr, r3, asr r8
    1bd8:	000e9d08 	andeq	r9, lr, r8, lsl #26
    1bdc:	53000108 	movwpl	r0, #264	; 0x108
    1be0:	08000ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp}
    1be4:	08000efc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl, fp}
    1be8:	50530001 	subspl	r0, r3, r1
    1bec:	5508000f 	strpl	r0, [r8, #-15]
    1bf0:	0108000f 	tsteq	r8, pc
    1bf4:	0f745300 	svceq	0x00745300
    1bf8:	0f860800 	svceq	0x00860800
    1bfc:	00010800 	andeq	r0, r1, r0, lsl #16
    1c00:	0010b853 	andseq	fp, r0, r3, asr r8
    1c04:	0010bd08 	andseq	fp, r0, r8, lsl #26
    1c08:	53000108 	movwpl	r0, #264	; 0x108
    1c0c:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    1c10:	080010c5 	stmdaeq	r0, {r0, r2, r6, r7, ip}
    1c14:	00530001 	subseq	r0, r3, r1
	...
    1c2c:	50000000 	andpl	r0, r0, r0
    1c30:	9408000e 	strls	r0, [r8], #-14
    1c34:	0108000e 	tsteq	r8, lr
    1c38:	0e985000 	cdpeq	0, 9, cr5, cr8, cr0, {0}
    1c3c:	0e9a0800 	cdpeq	8, 9, cr0, cr10, cr0, {0}
    1c40:	00010800 	andeq	r0, r1, r0, lsl #16
    1c44:	000ea050 	andeq	sl, lr, r0, asr r0
    1c48:	000efc08 	andeq	pc, lr, r8, lsl #24
    1c4c:	50000108 	andpl	r0, r0, r8, lsl #2
    1c50:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
    1c54:	08000f52 	stmdaeq	r0, {r1, r4, r6, r8, r9, sl, fp}
    1c58:	74500001 	ldrbvc	r0, [r0], #-1
    1c5c:	2608000f 	strcs	r0, [r8], -pc
    1c60:	01080010 	tsteq	r8, r0, lsl r0
    1c64:	10405000 	subne	r5, r0, r0
    1c68:	105a0800 	subsne	r0, sl, r0, lsl #16
    1c6c:	00010800 	andeq	r0, r1, r0, lsl #16
    1c70:	0010b850 	andseq	fp, r0, r0, asr r8
    1c74:	0010ba08 	andseq	fp, r0, r8, lsl #20
    1c78:	50000108 	andpl	r0, r0, r8, lsl #2
    1c7c:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    1c80:	080010c2 	stmdaeq	r0, {r1, r6, r7, ip}
    1c84:	00500001 	subseq	r0, r0, r1
	...
    1c90:	52000000 	andpl	r0, r0, #0
    1c94:	6a08000e 	bvs	201cd4 <_Min_Heap_Size+0x2014d4>
    1c98:	0108000e 	tsteq	r8, lr
    1c9c:	0e985100 	fmleqe	f5, f0, f0
    1ca0:	0e9d0800 	cdpeq	8, 9, cr0, cr13, cr0, {0}
    1ca4:	00010800 	andeq	r0, r1, r0, lsl #16
    1ca8:	00000051 	andeq	r0, r0, r1, asr r0
    1cac:	00000000 	andeq	r0, r0, r0
    1cb0:	03030100 	movweq	r0, #12544	; 0x3100
    1cb4:	52000000 	andpl	r0, r0, #0
    1cb8:	5208000e 	andpl	r0, r8, #14
    1cbc:	0208000e 	andeq	r0, r8, #14
    1cc0:	529f3000 	addspl	r3, pc, #0
    1cc4:	5608000e 	strpl	r0, [r8], -lr
    1cc8:	0508000e 	streq	r0, [r8, #-14]
    1ccc:	3f007300 	svccc	0x00007300
    1cd0:	0e569f1a 	mrceq	15, 2, r9, cr6, cr10, {0}
    1cd4:	10cc0800 	sbcne	r0, ip, r0, lsl #16
    1cd8:	00010800 	andeq	r0, r1, r0, lsl #16
    1cdc:	00000055 	andeq	r0, r0, r5, asr r0
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1cf0:	000e5200 	andeq	r5, lr, r0, lsl #4
    1cf4:	000e9408 	andeq	r9, lr, r8, lsl #8
    1cf8:	30000208 	andcc	r0, r0, r8, lsl #4
    1cfc:	000e989f 	muleq	lr, pc, r8	; <UNPREDICTABLE>
    1d00:	000f0408 	andeq	r0, pc, r8, lsl #8
    1d04:	30000208 	andcc	r0, r0, r8, lsl #4
    1d08:	000f049f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    1d0c:	000f1308 	andeq	r1, pc, r8, lsl #6
    1d10:	73000808 	movwvc	r0, #2056	; 0x808
    1d14:	082e3000 	stmdaeq	lr!, {ip, sp}
    1d18:	509f1aff 			; <UNDEFINED> instruction: 0x509f1aff
    1d1c:	5808000f 	stmdapl	r8, {r0, r1, r2, r3}
    1d20:	0208000f 	andeq	r0, r8, #15
    1d24:	689f3000 	ldmvs	pc, {ip, sp}	; <UNPREDICTABLE>
    1d28:	6d08000f 	stcvs	0, cr0, [r8, #-60]	; 0xffffffc4
    1d2c:	0808000f 	stmdaeq	r8, {r0, r1, r2, r3}
    1d30:	30007300 	andcc	r7, r0, r0, lsl #6
    1d34:	1aff082e 	bne	fffc3df4 <_estack+0xdffc2bb4>
    1d38:	000f749f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    1d3c:	0010cc08 	andseq	ip, r0, r8, lsl #24
    1d40:	30000208 	andcc	r0, r0, r8, lsl #4
    1d44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d48:	00000000 	andeq	r0, r0, r0
    1d4c:	2c000000 	stccs	0, cr0, [r0], {-0}
    1d50:	3808000f 	stmdacc	r8, {r0, r1, r2, r3}
    1d54:	0108000f 	tsteq	r8, pc
    1d58:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1d64:	01000000 	mrseq	r0, (UNDEF: 0)
    1d68:	08000f20 	stmdaeq	r0, {r5, r8, r9, sl, fp}
    1d6c:	08000f24 	stmdaeq	r0, {r2, r5, r8, r9, sl, fp}
    1d70:	14720003 	ldrbtne	r0, [r2], #-3
    1d74:	000f249f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    1d78:	000f2808 	andeq	r2, pc, r8, lsl #16
    1d7c:	53000108 	movwpl	r0, #264	; 0x108
    1d80:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
    1d84:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
    1d88:	14720003 	ldrbtne	r0, [r2], #-3
    1d8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d90:	00000000 	andeq	r0, r0, r0
    1d94:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    1d98:	2808000f 	stmdacs	r8, {r0, r1, r2, r3}
    1d9c:	0108000f 	tsteq	r8, pc
    1da0:	00005300 	andeq	r5, r0, r0, lsl #6
    1da4:	00000000 	andeq	r0, r0, r0
    1da8:	00010000 	andeq	r0, r1, r0
    1dac:	0f2c0100 	svceq	0x002c0100
    1db0:	0f2e0800 	svceq	0x002e0800
    1db4:	00030800 	andeq	r0, r3, r0, lsl #16
    1db8:	2e9f1472 	mrccs	4, 4, r1, cr15, cr2, {3}
    1dbc:	3208000f 	andcc	r0, r8, #15
    1dc0:	0108000f 	tsteq	r8, pc
    1dc4:	00005200 	andeq	r5, r0, r0, lsl #4
    1dc8:	00000000 	andeq	r0, r0, r0
    1dcc:	01010000 	mrseq	r0, (UNDEF: 1)
    1dd0:	08000f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp}
    1dd4:	08000f32 	stmdaeq	r0, {r1, r4, r5, r8, r9, sl, fp}
    1dd8:	00530001 	subseq	r0, r3, r1
	...
    1de4:	000f3201 	andeq	r3, pc, r1, lsl #4
    1de8:	000f3208 	andeq	r3, pc, r8, lsl #4
    1dec:	51000108 	tstpl	r0, r8, lsl #2
	...
    1dfc:	08000fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp}
    1e00:	08000fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp}
    1e04:	b4530001 	ldrblt	r0, [r3], #-1
    1e08:	0808000f 	stmdaeq	r8, {r0, r1, r2, r3}
    1e0c:	02080010 	andeq	r0, r8, #16
    1e10:	002e7400 	eoreq	r7, lr, r0, lsl #8
	...
    1e1c:	000fc800 	andeq	ip, pc, r0, lsl #16
    1e20:	000fd208 	andeq	sp, pc, r8, lsl #4
    1e24:	53000108 	movwpl	r0, #264	; 0x108
	...
    1e34:	0fbc0100 	svceq	0x00bc0100
    1e38:	0fc00800 	svceq	0x00c00800
    1e3c:	00030800 	andeq	r0, r3, r0, lsl #16
    1e40:	c09f0c72 	addsgt	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1e44:	c408000f 	strgt	r0, [r8], #-15
    1e48:	0108000f 	tsteq	r8, pc
    1e4c:	0fc45300 	svceq	0x00c45300
    1e50:	0fc40800 	svceq	0x00c40800
    1e54:	00030800 	andeq	r0, r3, r0, lsl #16
    1e58:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1e64:	000fc401 	andeq	ip, pc, r1, lsl #8
    1e68:	000fc408 	andeq	ip, pc, r8, lsl #8
    1e6c:	53000108 	movwpl	r0, #264	; 0x108
	...
    1e78:	01000001 	tsteq	r0, r1
    1e7c:	08000fc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl, fp}
    1e80:	08000fca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl, fp}
    1e84:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1e88:	000fca9f 	muleq	pc, pc, sl	; <UNPREDICTABLE>
    1e8c:	000fce08 	andeq	ip, pc, r8, lsl #28
    1e90:	52000108 	andpl	r0, r0, #8, 2
	...
    1e9c:	0fc80101 	svceq	0x00c80101
    1ea0:	0fce0800 	svceq	0x00ce0800
    1ea4:	00010800 	andeq	r0, r1, r0, lsl #16
    1ea8:	00000053 	andeq	r0, r0, r3, asr r0
    1eac:	00000000 	andeq	r0, r0, r0
    1eb0:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    1eb4:	ce08000f 	cdpgt	0, 0, cr0, cr8, cr15, {0}
    1eb8:	0108000f 	tsteq	r8, pc
    1ebc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1ec8:	08000fe0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, fp}
    1ecc:	08000fea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, sl, fp}
    1ed0:	00530001 	subseq	r0, r3, r1
	...
    1ee0:	000fd401 	andeq	sp, pc, r1, lsl #8
    1ee4:	000fd808 	andeq	sp, pc, r8, lsl #16
    1ee8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    1eec:	0fd89f14 	svceq	0x00d89f14
    1ef0:	0fdc0800 	svceq	0x00dc0800
    1ef4:	00010800 	andeq	r0, r1, r0, lsl #16
    1ef8:	000fdc53 	andeq	sp, pc, r3, asr ip	; <UNPREDICTABLE>
    1efc:	000fdc08 	andeq	sp, pc, r8, lsl #24
    1f00:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    1f04:	00009f14 	andeq	r9, r0, r4, lsl pc
    1f08:	00000000 	andeq	r0, r0, r0
    1f0c:	01000000 	mrseq	r0, (UNDEF: 0)
    1f10:	08000fdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, fp}
    1f14:	08000fdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, fp}
    1f18:	00530001 	subseq	r0, r3, r1
    1f1c:	00000000 	andeq	r0, r0, r0
    1f20:	01000000 	mrseq	r0, (UNDEF: 0)
    1f24:	e0010000 	and	r0, r1, r0
    1f28:	e208000f 	and	r0, r8, #15
    1f2c:	0308000f 	movweq	r0, #32783	; 0x800f
    1f30:	9f147200 	svcls	0x00147200
    1f34:	08000fe2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, sl, fp}
    1f38:	08000fe6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, sl, fp}
    1f3c:	00520001 	subseq	r0, r2, r1
    1f40:	00000000 	andeq	r0, r0, r0
    1f44:	01000000 	mrseq	r0, (UNDEF: 0)
    1f48:	000fe001 	andeq	lr, pc, r1
    1f4c:	000fe608 	andeq	lr, pc, r8, lsl #12
    1f50:	53000108 	movwpl	r0, #264	; 0x108
	...
    1f5c:	0fe60100 	svceq	0x00e60100
    1f60:	0fe60800 	svceq	0x00e60800
    1f64:	00010800 	andeq	r0, r1, r0, lsl #16
    1f68:	00000051 	andeq	r0, r0, r1, asr r0
    1f6c:	00000000 	andeq	r0, r0, r0
    1f70:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    1f74:	0408000f 	streq	r0, [r8], #-15
    1f78:	01080010 	tsteq	r8, r0, lsl r0
    1f7c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1f88:	01000000 	mrseq	r0, (UNDEF: 0)
    1f8c:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
    1f90:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
    1f94:	14720003 	ldrbtne	r0, [r2], #-3
    1f98:	000ff09f 	muleq	pc, pc, r0	; <UNPREDICTABLE>
    1f9c:	000ff408 	andeq	pc, pc, r8, lsl #8
    1fa0:	53000108 	movwpl	r0, #264	; 0x108
    1fa4:	08000ff4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, fp}
    1fa8:	08000ff4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, fp}
    1fac:	14720003 	ldrbtne	r0, [r2], #-3
    1fb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1fb4:	00000000 	andeq	r0, r0, r0
    1fb8:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    1fbc:	f408000f 	vst4.8	{d0-d3}, [r8]
    1fc0:	0108000f 	tsteq	r8, pc
    1fc4:	00005300 	andeq	r5, r0, r0, lsl #6
    1fc8:	00000000 	andeq	r0, r0, r0
    1fcc:	00010000 	andeq	r0, r1, r0
    1fd0:	0ff80100 	svceq	0x00f80100
    1fd4:	0ffa0800 	svceq	0x00fa0800
    1fd8:	00030800 	andeq	r0, r3, r0, lsl #16
    1fdc:	fa9f1472 	blx	fe7c71ac <_estack+0xde7c5f6c>
    1fe0:	fe08000f 	cdp2	0, 0, cr0, cr8, cr15, {0}
    1fe4:	0108000f 	tsteq	r8, pc
    1fe8:	00005200 	andeq	r5, r0, r0, lsl #4
    1fec:	00000000 	andeq	r0, r0, r0
    1ff0:	01010000 	mrseq	r0, (UNDEF: 1)
    1ff4:	08000ff8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl, fp}
    1ff8:	08000ffe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    1ffc:	00530001 	subseq	r0, r3, r1
	...
    2008:	000ffe01 	andeq	pc, pc, r1, lsl #28
    200c:	000ffe08 	andeq	pc, pc, r8, lsl #28
    2010:	51000108 	tstpl	r0, r8, lsl #2
	...
    201c:	101a0000 	andsne	r0, sl, r0
    2020:	10290800 	eorne	r0, r9, r0, lsl #16
    2024:	00010800 	andeq	r0, r1, r0, lsl #16
    2028:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2034:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    2038:	12080010 	andne	r0, r8, #16
    203c:	03080010 	movweq	r0, #32784	; 0x8010
    2040:	9f0c7200 	svcls	0x000c7200
    2044:	08001012 	stmdaeq	r0, {r1, r4, ip}
    2048:	08001016 	stmdaeq	r0, {r1, r2, r4, ip}
    204c:	16530001 	ldrbne	r0, [r3], -r1
    2050:	16080010 			; <UNDEFINED> instruction: 0x16080010
    2054:	03080010 	movweq	r0, #32784	; 0x8010
    2058:	9f0c7200 	svcls	0x000c7200
	...
    2064:	10160100 	andsne	r0, r6, r0, lsl #2
    2068:	10160800 	andsne	r0, r6, r0, lsl #16
    206c:	00010800 	andeq	r0, r1, r0, lsl #16
    2070:	00000053 	andeq	r0, r0, r3, asr r0
    2074:	00000000 	andeq	r0, r0, r0
    2078:	00000100 	andeq	r0, r0, r0, lsl #2
    207c:	00101a01 	andseq	r1, r0, r1, lsl #20
    2080:	00101c08 	andseq	r1, r0, r8, lsl #24
    2084:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2088:	101c9f0c 	andsne	r9, ip, ip, lsl #30
    208c:	10200800 	eorne	r0, r0, r0, lsl #16
    2090:	00010800 	andeq	r0, r1, r0, lsl #16
    2094:	00000052 	andeq	r0, r0, r2, asr r0
    2098:	00000000 	andeq	r0, r0, r0
    209c:	1a010100 	bne	424a4 <_Min_Heap_Size+0x41ca4>
    20a0:	20080010 	andcs	r0, r8, r0, lsl r0
    20a4:	01080010 	tsteq	r8, r0, lsl r0
    20a8:	00005300 	andeq	r5, r0, r0, lsl #6
    20ac:	00000000 	andeq	r0, r0, r0
    20b0:	01000000 	mrseq	r0, (UNDEF: 0)
    20b4:	08001020 	stmdaeq	r0, {r5, ip}
    20b8:	08001020 	stmdaeq	r0, {r5, ip}
    20bc:	00510001 	subseq	r0, r1, r1
	...
    20c8:	00104a00 	andseq	r4, r0, r0, lsl #20
    20cc:	0010b508 	andseq	fp, r0, r8, lsl #10
    20d0:	51000108 	tstpl	r0, r8, lsl #2
	...
    20dc:	10680000 	rsbne	r0, r8, r0
    20e0:	10720800 	rsbsne	r0, r2, r0, lsl #16
    20e4:	00010800 	andeq	r0, r1, r0, lsl #16
    20e8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    20f4:	5c010000 	stcpl	0, cr0, [r1], {-0}
    20f8:	60080010 	andvs	r0, r8, r0, lsl r0
    20fc:	03080010 	movweq	r0, #32784	; 0x8010
    2100:	9f0c7200 	svcls	0x000c7200
    2104:	08001060 	stmdaeq	r0, {r5, r6, ip}
    2108:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
    210c:	64530001 	ldrbvs	r0, [r3], #-1
    2110:	64080010 	strvs	r0, [r8], #-16
    2114:	03080010 	movweq	r0, #32784	; 0x8010
    2118:	9f0c7200 	svcls	0x000c7200
	...
    2124:	10640100 	rsbne	r0, r4, r0, lsl #2
    2128:	10640800 	rsbne	r0, r4, r0, lsl #16
    212c:	00010800 	andeq	r0, r1, r0, lsl #16
    2130:	00000053 	andeq	r0, r0, r3, asr r0
    2134:	00000000 	andeq	r0, r0, r0
    2138:	00000100 	andeq	r0, r0, r0, lsl #2
    213c:	00106801 	andseq	r6, r0, r1, lsl #16
    2140:	00106a08 	andseq	r6, r0, r8, lsl #20
    2144:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2148:	106a9f0c 	rsbne	r9, sl, ip, lsl #30
    214c:	106e0800 	rsbne	r0, lr, r0, lsl #16
    2150:	00010800 	andeq	r0, r1, r0, lsl #16
    2154:	00000052 	andeq	r0, r0, r2, asr r0
    2158:	00000000 	andeq	r0, r0, r0
    215c:	68010100 	stmdavs	r1, {r8}
    2160:	6e080010 	mcrvs	0, 0, r0, cr8, cr0, {0}
    2164:	01080010 	tsteq	r8, r0, lsl r0
    2168:	00005300 	andeq	r5, r0, r0, lsl #6
    216c:	00000000 	andeq	r0, r0, r0
    2170:	01000000 	mrseq	r0, (UNDEF: 0)
    2174:	0800106e 	stmdaeq	r0, {r1, r2, r3, r5, r6, ip}
    2178:	0800106e 	stmdaeq	r0, {r1, r2, r3, r5, r6, ip}
    217c:	00500001 	subseq	r0, r0, r1
	...
    2188:	00108000 	andseq	r8, r0, r0
    218c:	00108c08 	andseq	r8, r0, r8, lsl #24
    2190:	53000108 	movwpl	r0, #264	; 0x108
	...
    21a0:	10740100 	rsbsne	r0, r4, r0, lsl #2
    21a4:	10780800 	rsbsne	r0, r8, r0, lsl #16
    21a8:	00030800 	andeq	r0, r3, r0, lsl #16
    21ac:	789f1472 	ldmvc	pc, {r1, r4, r5, r6, sl, ip}	; <UNPREDICTABLE>
    21b0:	7c080010 	stcvc	0, cr0, [r8], {16}
    21b4:	01080010 	tsteq	r8, r0, lsl r0
    21b8:	107c5300 	rsbsne	r5, ip, r0, lsl #6
    21bc:	107c0800 	rsbsne	r0, ip, r0, lsl #16
    21c0:	00030800 	andeq	r0, r3, r0, lsl #16
    21c4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    21d0:	00107c01 	andseq	r7, r0, r1, lsl #24
    21d4:	00107c08 	andseq	r7, r0, r8, lsl #24
    21d8:	53000108 	movwpl	r0, #264	; 0x108
	...
    21e4:	01000001 	tsteq	r0, r1
    21e8:	08001080 	stmdaeq	r0, {r7, ip}
    21ec:	08001082 	stmdaeq	r0, {r1, r7, ip}
    21f0:	14720003 	ldrbtne	r0, [r2], #-3
    21f4:	0010829f 	mulseq	r0, pc, r2	; <UNPREDICTABLE>
    21f8:	00108608 	andseq	r8, r0, r8, lsl #12
    21fc:	52000108 	andpl	r0, r0, #8, 2
	...
    2208:	10800101 	addne	r0, r0, r1, lsl #2
    220c:	10860800 	addne	r0, r6, r0, lsl #16
    2210:	00010800 	andeq	r0, r1, r0, lsl #16
    2214:	00000053 	andeq	r0, r0, r3, asr r0
    2218:	00000000 	andeq	r0, r0, r0
    221c:	86010000 	strhi	r0, [r1], -r0
    2220:	86080010 			; <UNDEFINED> instruction: 0x86080010
    2224:	01080010 	tsteq	r8, r0, lsl r0
    2228:	00005000 	andeq	r5, r0, r0
	...
    2234:	080010a2 	stmdaeq	r0, {r1, r5, r7, ip}
    2238:	080010ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, ip}
    223c:	00530001 	subseq	r0, r3, r1
	...
    224c:	00109601 	andseq	r9, r0, r1, lsl #12
    2250:	00109a08 	andseq	r9, r0, r8, lsl #20
    2254:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2258:	109a9f0c 	addsne	r9, sl, ip, lsl #30
    225c:	109e0800 	addsne	r0, lr, r0, lsl #16
    2260:	00010800 	andeq	r0, r1, r0, lsl #16
    2264:	00109e53 	andseq	r9, r0, r3, asr lr
    2268:	00109e08 	andseq	r9, r0, r8, lsl #28
    226c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2270:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2274:	00000000 	andeq	r0, r0, r0
    2278:	01000000 	mrseq	r0, (UNDEF: 0)
    227c:	0800109e 	stmdaeq	r0, {r1, r2, r3, r4, r7, ip}
    2280:	0800109e 	stmdaeq	r0, {r1, r2, r3, r4, r7, ip}
    2284:	00530001 	subseq	r0, r3, r1
    2288:	00000000 	andeq	r0, r0, r0
    228c:	01000000 	mrseq	r0, (UNDEF: 0)
    2290:	a2010000 	andge	r0, r1, #0
    2294:	a4080010 	strge	r0, [r8], #-16
    2298:	03080010 	movweq	r0, #32784	; 0x8010
    229c:	9f0c7200 	svcls	0x000c7200
    22a0:	080010a4 	stmdaeq	r0, {r2, r5, r7, ip}
    22a4:	080010a8 	stmdaeq	r0, {r3, r5, r7, ip}
    22a8:	00520001 	subseq	r0, r2, r1
    22ac:	00000000 	andeq	r0, r0, r0
    22b0:	01000000 	mrseq	r0, (UNDEF: 0)
    22b4:	0010a201 	andseq	sl, r0, r1, lsl #4
    22b8:	0010a808 	andseq	sl, r0, r8, lsl #16
    22bc:	53000108 	movwpl	r0, #264	; 0x108
	...
    22c8:	10a80100 	adcne	r0, r8, r0, lsl #2
    22cc:	10a80800 	adcne	r0, r8, r0, lsl #16
    22d0:	00010800 	andeq	r0, r1, r0, lsl #16
    22d4:	00000050 	andeq	r0, r0, r0, asr r0
	...
    22e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    22f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    22f4:	00000008 	andeq	r0, r0, r8
	...
    2310:	01000000 	mrseq	r0, (UNDEF: 0)
    2314:	00005000 	andeq	r5, r0, r0
    2318:	00000000 	andeq	r0, r0, r0
    231c:	00010000 	andeq	r0, r1, r0
    2320:	00000054 	andeq	r0, r0, r4, asr r0
    2324:	00000000 	andeq	r0, r0, r0
    2328:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2334:	00540001 	subseq	r0, r4, r1
    2338:	00000000 	andeq	r0, r0, r0
    233c:	01000000 	mrseq	r0, (UNDEF: 0)
    2340:	00005000 	andeq	r5, r0, r0
    2344:	00000000 	andeq	r0, r0, r0
    2348:	00010000 	andeq	r0, r1, r0
    234c:	00000054 	andeq	r0, r0, r4, asr r0
    2350:	00000000 	andeq	r0, r0, r0
    2354:	f3000400 	vshl.u8	d0, d0, d0
    2358:	009f5001 	addseq	r5, pc, r1
	...
    236c:	53000100 	movwpl	r0, #256	; 0x100
	...
    237c:	00000100 	andeq	r0, r0, r0, lsl #2
    2380:	00000000 	andeq	r0, r0, r0
    2384:	00030000 	andeq	r0, r3, r0
    2388:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    238c:	00000000 	andeq	r0, r0, r0
    2390:	01000000 	mrseq	r0, (UNDEF: 0)
    2394:	00005300 	andeq	r5, r0, r0, lsl #6
    2398:	00000000 	andeq	r0, r0, r0
    239c:	00030000 	andeq	r0, r3, r0
    23a0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    23ac:	00000001 	andeq	r0, r0, r1
    23b0:	00000000 	andeq	r0, r0, r0
    23b4:	53000100 	movwpl	r0, #256	; 0x100
	...
    23c0:	01000001 	tsteq	r0, r1
	...
    23cc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    23d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    23d4:	00000000 	andeq	r0, r0, r0
    23d8:	52000100 	andpl	r0, r0, #0, 2
	...
    23e4:	00000101 	andeq	r0, r0, r1, lsl #2
    23e8:	00000000 	andeq	r0, r0, r0
    23ec:	00010000 	andeq	r0, r1, r0
    23f0:	00000053 	andeq	r0, r0, r3, asr r0
    23f4:	00000000 	andeq	r0, r0, r0
    23f8:	00010000 	andeq	r0, r1, r0
    23fc:	00000000 	andeq	r0, r0, r0
    2400:	01000000 	mrseq	r0, (UNDEF: 0)
    2404:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2418:	00530001 	subseq	r0, r3, r1
	...
    2428:	00000001 	andeq	r0, r0, r1
    242c:	00000000 	andeq	r0, r0, r0
    2430:	72000300 	andvc	r0, r0, #0, 6
    2434:	00009f14 	andeq	r9, r0, r4, lsl pc
    2438:	00000000 	andeq	r0, r0, r0
    243c:	00010000 	andeq	r0, r1, r0
    2440:	00000053 	andeq	r0, r0, r3, asr r0
    2444:	00000000 	andeq	r0, r0, r0
    2448:	72000300 	andvc	r0, r0, #0, 6
    244c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2450:	00000000 	andeq	r0, r0, r0
    2454:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2460:	00530001 	subseq	r0, r3, r1
    2464:	00000000 	andeq	r0, r0, r0
    2468:	01000000 	mrseq	r0, (UNDEF: 0)
    246c:	00010000 	andeq	r0, r1, r0
    2470:	00000000 	andeq	r0, r0, r0
    2474:	03000000 	movweq	r0, #0
    2478:	9f147200 	svcls	0x00147200
	...
    2484:	00520001 	subseq	r0, r2, r1
    2488:	00000000 	andeq	r0, r0, r0
    248c:	01000000 	mrseq	r0, (UNDEF: 0)
    2490:	00000001 	andeq	r0, r0, r1
    2494:	00000000 	andeq	r0, r0, r0
    2498:	53000100 	movwpl	r0, #256	; 0x100
	...
    24a4:	00000100 	andeq	r0, r0, r0, lsl #2
    24a8:	00000000 	andeq	r0, r0, r0
    24ac:	00010000 	andeq	r0, r1, r0
    24b0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    24c0:	01000000 	mrseq	r0, (UNDEF: 0)
    24c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    24d0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    24dc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    24e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24e4:	00000000 	andeq	r0, r0, r0
    24e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    24f4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    24f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24fc:	00000000 	andeq	r0, r0, r0
    2500:	00010000 	andeq	r0, r1, r0
    2504:	00000000 	andeq	r0, r0, r0
    2508:	01000000 	mrseq	r0, (UNDEF: 0)
    250c:	00005300 	andeq	r5, r0, r0, lsl #6
    2510:	00000000 	andeq	r0, r0, r0
    2514:	00010000 	andeq	r0, r1, r0
    2518:	00000100 	andeq	r0, r0, r0, lsl #2
    251c:	00000000 	andeq	r0, r0, r0
    2520:	00030000 	andeq	r0, r3, r0
    2524:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2528:	00000000 	andeq	r0, r0, r0
    252c:	01000000 	mrseq	r0, (UNDEF: 0)
    2530:	00005200 	andeq	r5, r0, r0, lsl #4
    2534:	00000000 	andeq	r0, r0, r0
    2538:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2544:	00530001 	subseq	r0, r3, r1
	...
    2550:	00000001 	andeq	r0, r0, r1
    2554:	00000000 	andeq	r0, r0, r0
    2558:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    256c:	00010000 	andeq	r0, r1, r0
    2570:	00000053 	andeq	r0, r0, r3, asr r0
	...
    257c:	00010000 	andeq	r0, r1, r0
    2580:	00000000 	andeq	r0, r0, r0
    2584:	03000000 	movweq	r0, #0
    2588:	9f147200 	svcls	0x00147200
	...
    2594:	00530001 	subseq	r0, r3, r1
    2598:	00000000 	andeq	r0, r0, r0
    259c:	03000000 	movweq	r0, #0
    25a0:	9f147200 	svcls	0x00147200
	...
    25ac:	00000100 	andeq	r0, r0, r0, lsl #2
    25b0:	00000000 	andeq	r0, r0, r0
    25b4:	00010000 	andeq	r0, r1, r0
    25b8:	00000053 	andeq	r0, r0, r3, asr r0
    25bc:	00000000 	andeq	r0, r0, r0
    25c0:	00000100 	andeq	r0, r0, r0, lsl #2
    25c4:	00000001 	andeq	r0, r0, r1
    25c8:	00000000 	andeq	r0, r0, r0
    25cc:	72000300 	andvc	r0, r0, #0, 6
    25d0:	00009f14 	andeq	r9, r0, r4, lsl pc
    25d4:	00000000 	andeq	r0, r0, r0
    25d8:	00010000 	andeq	r0, r1, r0
    25dc:	00000052 	andeq	r0, r0, r2, asr r0
    25e0:	00000000 	andeq	r0, r0, r0
    25e4:	00010100 	andeq	r0, r1, r0, lsl #2
    25e8:	00000000 	andeq	r0, r0, r0
    25ec:	01000000 	mrseq	r0, (UNDEF: 0)
    25f0:	00005300 	andeq	r5, r0, r0, lsl #6
    25f4:	00000000 	andeq	r0, r0, r0
    25f8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2604:	00510001 	subseq	r0, r1, r1
	...
    2614:	02000000 	andeq	r0, r0, #0
    2618:	00007d00 	andeq	r7, r0, r0, lsl #26
    261c:	00000000 	andeq	r0, r0, r0
    2620:	02000000 	andeq	r0, r0, #0
    2624:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2644:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2650:	00540001 	subseq	r0, r4, r1
    2654:	00000000 	andeq	r0, r0, r0
    2658:	01000000 	mrseq	r0, (UNDEF: 0)
    265c:	00005000 	andeq	r5, r0, r0
    2660:	00000000 	andeq	r0, r0, r0
    2664:	00010000 	andeq	r0, r1, r0
    2668:	00000054 	andeq	r0, r0, r4, asr r0
    266c:	00000000 	andeq	r0, r0, r0
    2670:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    267c:	00540001 	subseq	r0, r4, r1
    2680:	00000000 	andeq	r0, r0, r0
    2684:	04000000 	streq	r0, [r0], #-0
    2688:	5001f300 	andpl	pc, r1, r0, lsl #6
    268c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    269c:	01000000 	mrseq	r0, (UNDEF: 0)
    26a0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    26ac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    26b8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    26bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    26c0:	00000000 	andeq	r0, r0, r0
    26c4:	53000100 	movwpl	r0, #256	; 0x100
	...
    26d0:	0c720003 	ldcleq	0, cr0, [r2], #-12
    26d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    26d8:	00000000 	andeq	r0, r0, r0
    26dc:	00010000 	andeq	r0, r1, r0
    26e0:	00000000 	andeq	r0, r0, r0
    26e4:	01000000 	mrseq	r0, (UNDEF: 0)
    26e8:	00005300 	andeq	r5, r0, r0, lsl #6
    26ec:	00000000 	andeq	r0, r0, r0
    26f0:	00010000 	andeq	r0, r1, r0
    26f4:	00000100 	andeq	r0, r0, r0, lsl #2
    26f8:	00000000 	andeq	r0, r0, r0
    26fc:	00030000 	andeq	r0, r3, r0
    2700:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2704:	00000000 	andeq	r0, r0, r0
    2708:	01000000 	mrseq	r0, (UNDEF: 0)
    270c:	00005200 	andeq	r5, r0, r0, lsl #4
    2710:	00000000 	andeq	r0, r0, r0
    2714:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2720:	00530001 	subseq	r0, r3, r1
	...
    272c:	00000001 	andeq	r0, r0, r1
    2730:	00000000 	andeq	r0, r0, r0
    2734:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2748:	00010000 	andeq	r0, r1, r0
    274c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2758:	00010000 	andeq	r0, r1, r0
    275c:	00000000 	andeq	r0, r0, r0
    2760:	03000000 	movweq	r0, #0
    2764:	9f147200 	svcls	0x00147200
	...
    2770:	00530001 	subseq	r0, r3, r1
    2774:	00000000 	andeq	r0, r0, r0
    2778:	03000000 	movweq	r0, #0
    277c:	9f147200 	svcls	0x00147200
	...
    2788:	00000100 	andeq	r0, r0, r0, lsl #2
    278c:	00000000 	andeq	r0, r0, r0
    2790:	00010000 	andeq	r0, r1, r0
    2794:	00000053 	andeq	r0, r0, r3, asr r0
    2798:	00000000 	andeq	r0, r0, r0
    279c:	00000100 	andeq	r0, r0, r0, lsl #2
    27a0:	00000001 	andeq	r0, r0, r1
    27a4:	00000000 	andeq	r0, r0, r0
    27a8:	72000300 	andvc	r0, r0, #0, 6
    27ac:	00009f14 	andeq	r9, r0, r4, lsl pc
    27b0:	00000000 	andeq	r0, r0, r0
    27b4:	00010000 	andeq	r0, r1, r0
    27b8:	00000052 	andeq	r0, r0, r2, asr r0
    27bc:	00000000 	andeq	r0, r0, r0
    27c0:	00010100 	andeq	r0, r1, r0, lsl #2
    27c4:	00000000 	andeq	r0, r0, r0
    27c8:	01000000 	mrseq	r0, (UNDEF: 0)
    27cc:	00005300 	andeq	r5, r0, r0, lsl #6
    27d0:	00000000 	andeq	r0, r0, r0
    27d4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    27e0:	00510001 	subseq	r0, r1, r1
	...
    27f0:	02000000 	andeq	r0, r0, #0
    27f4:	00007d00 	andeq	r7, r0, r0, lsl #26
    27f8:	00000000 	andeq	r0, r0, r0
    27fc:	02000000 	andeq	r0, r0, #0
    2800:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    281c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2828:	00540001 	subseq	r0, r4, r1
    282c:	00000000 	andeq	r0, r0, r0
    2830:	01000000 	mrseq	r0, (UNDEF: 0)
    2834:	00005000 	andeq	r5, r0, r0
    2838:	00000000 	andeq	r0, r0, r0
    283c:	00010000 	andeq	r0, r1, r0
    2840:	00000054 	andeq	r0, r0, r4, asr r0
    2844:	00000000 	andeq	r0, r0, r0
    2848:	f3000400 	vshl.u8	d0, d0, d0
    284c:	009f5001 	addseq	r5, pc, r1
    2850:	00000000 	andeq	r0, r0, r0
    2854:	01000000 	mrseq	r0, (UNDEF: 0)
    2858:	01010000 	mrseq	r0, (UNDEF: 1)
    285c:	00000002 	andeq	r0, r0, r2
	...
    2868:	31000200 	mrscc	r0, R8_usr
    286c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2870:	00000000 	andeq	r0, r0, r0
    2874:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    2880:	9f310002 	svcls	0x00310002
	...
    288c:	9f310002 	svcls	0x00310002
	...
    2898:	00550001 	subseq	r0, r5, r1
	...
    28ac:	53000100 	movwpl	r0, #256	; 0x100
	...
    28bc:	00000100 	andeq	r0, r0, r0, lsl #2
    28c0:	00000000 	andeq	r0, r0, r0
    28c4:	00030000 	andeq	r0, r3, r0
    28c8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    28cc:	00000000 	andeq	r0, r0, r0
    28d0:	01000000 	mrseq	r0, (UNDEF: 0)
    28d4:	00005300 	andeq	r5, r0, r0, lsl #6
    28d8:	00000000 	andeq	r0, r0, r0
    28dc:	00030000 	andeq	r0, r3, r0
    28e0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    28ec:	00000001 	andeq	r0, r0, r1
    28f0:	00000000 	andeq	r0, r0, r0
    28f4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2900:	01000001 	tsteq	r0, r1
	...
    290c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2914:	00000000 	andeq	r0, r0, r0
    2918:	52000100 	andpl	r0, r0, #0, 2
	...
    2924:	00000101 	andeq	r0, r0, r1, lsl #2
    2928:	00000000 	andeq	r0, r0, r0
    292c:	00010000 	andeq	r0, r1, r0
    2930:	00000053 	andeq	r0, r0, r3, asr r0
    2934:	00000000 	andeq	r0, r0, r0
    2938:	00010000 	andeq	r0, r1, r0
    293c:	00000000 	andeq	r0, r0, r0
    2940:	01000000 	mrseq	r0, (UNDEF: 0)
    2944:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2958:	00530001 	subseq	r0, r3, r1
	...
    2968:	00000001 	andeq	r0, r0, r1
    296c:	00000000 	andeq	r0, r0, r0
    2970:	72000300 	andvc	r0, r0, #0, 6
    2974:	00009f14 	andeq	r9, r0, r4, lsl pc
    2978:	00000000 	andeq	r0, r0, r0
    297c:	00010000 	andeq	r0, r1, r0
    2980:	00000053 	andeq	r0, r0, r3, asr r0
    2984:	00000000 	andeq	r0, r0, r0
    2988:	72000300 	andvc	r0, r0, #0, 6
    298c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2990:	00000000 	andeq	r0, r0, r0
    2994:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    29a0:	00530001 	subseq	r0, r3, r1
    29a4:	00000000 	andeq	r0, r0, r0
    29a8:	01000000 	mrseq	r0, (UNDEF: 0)
    29ac:	00010000 	andeq	r0, r1, r0
    29b0:	00000000 	andeq	r0, r0, r0
    29b4:	03000000 	movweq	r0, #0
    29b8:	9f147200 	svcls	0x00147200
	...
    29c4:	00520001 	subseq	r0, r2, r1
    29c8:	00000000 	andeq	r0, r0, r0
    29cc:	01000000 	mrseq	r0, (UNDEF: 0)
    29d0:	00000001 	andeq	r0, r0, r1
    29d4:	00000000 	andeq	r0, r0, r0
    29d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    29e4:	00000100 	andeq	r0, r0, r0, lsl #2
    29e8:	00000000 	andeq	r0, r0, r0
    29ec:	00010000 	andeq	r0, r1, r0
    29f0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2a00:	01000000 	mrseq	r0, (UNDEF: 0)
    2a04:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2a10:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2a1c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2a20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a24:	00000000 	andeq	r0, r0, r0
    2a28:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a34:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2a38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a3c:	00000000 	andeq	r0, r0, r0
    2a40:	00010000 	andeq	r0, r1, r0
    2a44:	00000000 	andeq	r0, r0, r0
    2a48:	01000000 	mrseq	r0, (UNDEF: 0)
    2a4c:	00005300 	andeq	r5, r0, r0, lsl #6
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	00010000 	andeq	r0, r1, r0
    2a58:	00000100 	andeq	r0, r0, r0, lsl #2
    2a5c:	00000000 	andeq	r0, r0, r0
    2a60:	00030000 	andeq	r0, r3, r0
    2a64:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2a68:	00000000 	andeq	r0, r0, r0
    2a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a70:	00005200 	andeq	r5, r0, r0, lsl #4
    2a74:	00000000 	andeq	r0, r0, r0
    2a78:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2a84:	00530001 	subseq	r0, r3, r1
	...
    2a90:	00000001 	andeq	r0, r0, r1
    2a94:	00000000 	andeq	r0, r0, r0
    2a98:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2ab0:	00530001 	subseq	r0, r3, r1
    2ab4:	00000000 	andeq	r0, r0, r0
    2ab8:	01000000 	mrseq	r0, (UNDEF: 0)
    2abc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2ac8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2ad4:	14710003 	ldrbtne	r0, [r1], #-3
    2ad8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2adc:	00000000 	andeq	r0, r0, r0
    2ae0:	53000100 	movwpl	r0, #256	; 0x100
	...
    2aec:	14710003 	ldrbtne	r0, [r1], #-3
    2af0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2af4:	00000000 	andeq	r0, r0, r0
    2af8:	00010000 	andeq	r0, r1, r0
    2afc:	00000000 	andeq	r0, r0, r0
    2b00:	01000000 	mrseq	r0, (UNDEF: 0)
    2b04:	00005300 	andeq	r5, r0, r0, lsl #6
    2b08:	00000000 	andeq	r0, r0, r0
    2b0c:	00010000 	andeq	r0, r1, r0
    2b10:	00000100 	andeq	r0, r0, r0, lsl #2
    2b14:	00000000 	andeq	r0, r0, r0
    2b18:	00030000 	andeq	r0, r3, r0
    2b1c:	009f1471 	addseq	r1, pc, r1, ror r4	; <UNPREDICTABLE>
    2b20:	00000000 	andeq	r0, r0, r0
    2b24:	01000000 	mrseq	r0, (UNDEF: 0)
    2b28:	00005100 	andeq	r5, r0, r0, lsl #2
    2b2c:	00000000 	andeq	r0, r0, r0
    2b30:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2b3c:	00530001 	subseq	r0, r3, r1
	...
    2b48:	00000001 	andeq	r0, r0, r1
    2b4c:	00000000 	andeq	r0, r0, r0
    2b50:	52000100 	andpl	r0, r0, #0, 2
	...
    2b64:	00010000 	andeq	r0, r1, r0
    2b68:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2b74:	00010000 	andeq	r0, r1, r0
    2b78:	00000000 	andeq	r0, r0, r0
    2b7c:	03000000 	movweq	r0, #0
    2b80:	9f147200 	svcls	0x00147200
	...
    2b8c:	00530001 	subseq	r0, r3, r1
    2b90:	00000000 	andeq	r0, r0, r0
    2b94:	03000000 	movweq	r0, #0
    2b98:	9f147200 	svcls	0x00147200
	...
    2ba4:	00000100 	andeq	r0, r0, r0, lsl #2
    2ba8:	00000000 	andeq	r0, r0, r0
    2bac:	00010000 	andeq	r0, r1, r0
    2bb0:	00000053 	andeq	r0, r0, r3, asr r0
    2bb4:	00000000 	andeq	r0, r0, r0
    2bb8:	00000100 	andeq	r0, r0, r0, lsl #2
    2bbc:	00000001 	andeq	r0, r0, r1
    2bc0:	00000000 	andeq	r0, r0, r0
    2bc4:	72000300 	andvc	r0, r0, #0, 6
    2bc8:	00009f14 	andeq	r9, r0, r4, lsl pc
    2bcc:	00000000 	andeq	r0, r0, r0
    2bd0:	00010000 	andeq	r0, r1, r0
    2bd4:	00000052 	andeq	r0, r0, r2, asr r0
    2bd8:	00000000 	andeq	r0, r0, r0
    2bdc:	00010100 	andeq	r0, r1, r0, lsl #2
    2be0:	00000000 	andeq	r0, r0, r0
    2be4:	01000000 	mrseq	r0, (UNDEF: 0)
    2be8:	00005300 	andeq	r5, r0, r0, lsl #6
    2bec:	00000000 	andeq	r0, r0, r0
    2bf0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2bfc:	00510001 	subseq	r0, r1, r1
	...
    2c0c:	02000000 	andeq	r0, r0, #0
    2c10:	00007d00 	andeq	r7, r0, r0, lsl #26
    2c14:	00000000 	andeq	r0, r0, r0
    2c18:	02000000 	andeq	r0, r0, #0
    2c1c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2c34:	01000000 	mrseq	r0, (UNDEF: 0)
    2c38:	00005000 	andeq	r5, r0, r0
    2c3c:	00000000 	andeq	r0, r0, r0
    2c40:	00010000 	andeq	r0, r1, r0
    2c44:	00000054 	andeq	r0, r0, r4, asr r0
    2c48:	00000000 	andeq	r0, r0, r0
    2c4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2c58:	00540001 	subseq	r0, r4, r1
	...
    2c6c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2c7c:	00000100 	andeq	r0, r0, r0, lsl #2
    2c80:	00000000 	andeq	r0, r0, r0
    2c84:	00030000 	andeq	r0, r3, r0
    2c88:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2c8c:	00000000 	andeq	r0, r0, r0
    2c90:	01000000 	mrseq	r0, (UNDEF: 0)
    2c94:	00005300 	andeq	r5, r0, r0, lsl #6
    2c98:	00000000 	andeq	r0, r0, r0
    2c9c:	00030000 	andeq	r0, r3, r0
    2ca0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2cac:	00000001 	andeq	r0, r0, r1
    2cb0:	00000000 	andeq	r0, r0, r0
    2cb4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2cc0:	01000001 	tsteq	r0, r1
	...
    2ccc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2cd0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2cd4:	00000000 	andeq	r0, r0, r0
    2cd8:	52000100 	andpl	r0, r0, #0, 2
	...
    2ce4:	00000101 	andeq	r0, r0, r1, lsl #2
    2ce8:	00000000 	andeq	r0, r0, r0
    2cec:	00010000 	andeq	r0, r1, r0
    2cf0:	00000053 	andeq	r0, r0, r3, asr r0
    2cf4:	00000000 	andeq	r0, r0, r0
    2cf8:	00010000 	andeq	r0, r1, r0
    2cfc:	00000000 	andeq	r0, r0, r0
    2d00:	01000000 	mrseq	r0, (UNDEF: 0)
    2d04:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2d18:	00530001 	subseq	r0, r3, r1
	...
    2d28:	00000001 	andeq	r0, r0, r1
    2d2c:	00000000 	andeq	r0, r0, r0
    2d30:	72000300 	andvc	r0, r0, #0, 6
    2d34:	00009f14 	andeq	r9, r0, r4, lsl pc
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	00010000 	andeq	r0, r1, r0
    2d40:	00000053 	andeq	r0, r0, r3, asr r0
    2d44:	00000000 	andeq	r0, r0, r0
    2d48:	72000300 	andvc	r0, r0, #0, 6
    2d4c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2d50:	00000000 	andeq	r0, r0, r0
    2d54:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2d60:	00530001 	subseq	r0, r3, r1
    2d64:	00000000 	andeq	r0, r0, r0
    2d68:	01000000 	mrseq	r0, (UNDEF: 0)
    2d6c:	00010000 	andeq	r0, r1, r0
    2d70:	00000000 	andeq	r0, r0, r0
    2d74:	03000000 	movweq	r0, #0
    2d78:	9f147200 	svcls	0x00147200
	...
    2d84:	00520001 	subseq	r0, r2, r1
    2d88:	00000000 	andeq	r0, r0, r0
    2d8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d90:	00000001 	andeq	r0, r0, r1
    2d94:	00000000 	andeq	r0, r0, r0
    2d98:	53000100 	movwpl	r0, #256	; 0x100
	...
    2da4:	00000100 	andeq	r0, r0, r0, lsl #2
    2da8:	00000000 	andeq	r0, r0, r0
    2dac:	00010000 	andeq	r0, r1, r0
    2db0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2dc0:	01000000 	mrseq	r0, (UNDEF: 0)
    2dc4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2dd0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2ddc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2de0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2de4:	00000000 	andeq	r0, r0, r0
    2de8:	53000100 	movwpl	r0, #256	; 0x100
	...
    2df4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2df8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2dfc:	00000000 	andeq	r0, r0, r0
    2e00:	00010000 	andeq	r0, r1, r0
    2e04:	00000000 	andeq	r0, r0, r0
    2e08:	01000000 	mrseq	r0, (UNDEF: 0)
    2e0c:	00005300 	andeq	r5, r0, r0, lsl #6
    2e10:	00000000 	andeq	r0, r0, r0
    2e14:	00010000 	andeq	r0, r1, r0
    2e18:	00000100 	andeq	r0, r0, r0, lsl #2
    2e1c:	00000000 	andeq	r0, r0, r0
    2e20:	00030000 	andeq	r0, r3, r0
    2e24:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2e28:	00000000 	andeq	r0, r0, r0
    2e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    2e30:	00005200 	andeq	r5, r0, r0, lsl #4
    2e34:	00000000 	andeq	r0, r0, r0
    2e38:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2e44:	00530001 	subseq	r0, r3, r1
	...
    2e50:	00000001 	andeq	r0, r0, r1
    2e54:	00000000 	andeq	r0, r0, r0
    2e58:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2e6c:	00010000 	andeq	r0, r1, r0
    2e70:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2e7c:	00010000 	andeq	r0, r1, r0
    2e80:	00000000 	andeq	r0, r0, r0
    2e84:	03000000 	movweq	r0, #0
    2e88:	9f147200 	svcls	0x00147200
	...
    2e94:	00530001 	subseq	r0, r3, r1
    2e98:	00000000 	andeq	r0, r0, r0
    2e9c:	03000000 	movweq	r0, #0
    2ea0:	9f147200 	svcls	0x00147200
	...
    2eac:	00000100 	andeq	r0, r0, r0, lsl #2
    2eb0:	00000000 	andeq	r0, r0, r0
    2eb4:	00010000 	andeq	r0, r1, r0
    2eb8:	00000053 	andeq	r0, r0, r3, asr r0
    2ebc:	00000000 	andeq	r0, r0, r0
    2ec0:	00000100 	andeq	r0, r0, r0, lsl #2
    2ec4:	00000001 	andeq	r0, r0, r1
    2ec8:	00000000 	andeq	r0, r0, r0
    2ecc:	72000300 	andvc	r0, r0, #0, 6
    2ed0:	00009f14 	andeq	r9, r0, r4, lsl pc
    2ed4:	00000000 	andeq	r0, r0, r0
    2ed8:	00010000 	andeq	r0, r1, r0
    2edc:	00000052 	andeq	r0, r0, r2, asr r0
    2ee0:	00000000 	andeq	r0, r0, r0
    2ee4:	00010100 	andeq	r0, r1, r0, lsl #2
    2ee8:	00000000 	andeq	r0, r0, r0
    2eec:	01000000 	mrseq	r0, (UNDEF: 0)
    2ef0:	00005300 	andeq	r5, r0, r0, lsl #6
    2ef4:	00000000 	andeq	r0, r0, r0
    2ef8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f04:	00510001 	subseq	r0, r1, r1
	...
    2f14:	02000000 	andeq	r0, r0, #0
    2f18:	00007d00 	andeq	r7, r0, r0, lsl #26
    2f1c:	00000000 	andeq	r0, r0, r0
    2f20:	02000000 	andeq	r0, r0, #0
    2f24:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2f38:	01000000 	mrseq	r0, (UNDEF: 0)
    2f3c:	00005000 	andeq	r5, r0, r0
    2f40:	00000000 	andeq	r0, r0, r0
    2f44:	00010000 	andeq	r0, r1, r0
    2f48:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2f58:	01000000 	mrseq	r0, (UNDEF: 0)
    2f5c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2f68:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f74:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2f78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f7c:	00000000 	andeq	r0, r0, r0
    2f80:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f8c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2f90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f94:	00000000 	andeq	r0, r0, r0
    2f98:	00010000 	andeq	r0, r1, r0
    2f9c:	00000000 	andeq	r0, r0, r0
    2fa0:	01000000 	mrseq	r0, (UNDEF: 0)
    2fa4:	00005300 	andeq	r5, r0, r0, lsl #6
    2fa8:	00000000 	andeq	r0, r0, r0
    2fac:	00010000 	andeq	r0, r1, r0
    2fb0:	00000100 	andeq	r0, r0, r0, lsl #2
    2fb4:	00000000 	andeq	r0, r0, r0
    2fb8:	00030000 	andeq	r0, r3, r0
    2fbc:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2fc0:	00000000 	andeq	r0, r0, r0
    2fc4:	01000000 	mrseq	r0, (UNDEF: 0)
    2fc8:	00005200 	andeq	r5, r0, r0, lsl #4
    2fcc:	00000000 	andeq	r0, r0, r0
    2fd0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2fdc:	00530001 	subseq	r0, r3, r1
	...
    2fe8:	00000001 	andeq	r0, r0, r1
    2fec:	00000000 	andeq	r0, r0, r0
    2ff0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3004:	00010000 	andeq	r0, r1, r0
    3008:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3014:	00010000 	andeq	r0, r1, r0
    3018:	00000000 	andeq	r0, r0, r0
    301c:	03000000 	movweq	r0, #0
    3020:	9f147200 	svcls	0x00147200
	...
    302c:	00530001 	subseq	r0, r3, r1
    3030:	00000000 	andeq	r0, r0, r0
    3034:	03000000 	movweq	r0, #0
    3038:	9f147200 	svcls	0x00147200
	...
    3044:	00000100 	andeq	r0, r0, r0, lsl #2
    3048:	00000000 	andeq	r0, r0, r0
    304c:	00010000 	andeq	r0, r1, r0
    3050:	00000053 	andeq	r0, r0, r3, asr r0
    3054:	00000000 	andeq	r0, r0, r0
    3058:	00000100 	andeq	r0, r0, r0, lsl #2
    305c:	00000001 	andeq	r0, r0, r1
    3060:	00000000 	andeq	r0, r0, r0
    3064:	72000300 	andvc	r0, r0, #0, 6
    3068:	00009f14 	andeq	r9, r0, r4, lsl pc
    306c:	00000000 	andeq	r0, r0, r0
    3070:	00010000 	andeq	r0, r1, r0
    3074:	00000052 	andeq	r0, r0, r2, asr r0
    3078:	00000000 	andeq	r0, r0, r0
    307c:	00010100 	andeq	r0, r1, r0, lsl #2
    3080:	00000000 	andeq	r0, r0, r0
    3084:	01000000 	mrseq	r0, (UNDEF: 0)
    3088:	00005300 	andeq	r5, r0, r0, lsl #6
    308c:	00000000 	andeq	r0, r0, r0
    3090:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    309c:	00510001 	subseq	r0, r1, r1
	...
    30ac:	02000000 	andeq	r0, r0, #0
    30b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    30b4:	00000000 	andeq	r0, r0, r0
    30b8:	02000000 	andeq	r0, r0, #0
    30bc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    30d4:	01000000 	mrseq	r0, (UNDEF: 0)
    30d8:	00005000 	andeq	r5, r0, r0
    30dc:	00000000 	andeq	r0, r0, r0
    30e0:	00010000 	andeq	r0, r1, r0
    30e4:	00000054 	andeq	r0, r0, r4, asr r0
    30e8:	00000000 	andeq	r0, r0, r0
    30ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    30f8:	00540001 	subseq	r0, r4, r1
	...
    310c:	53000100 	movwpl	r0, #256	; 0x100
	...
    311c:	00000100 	andeq	r0, r0, r0, lsl #2
    3120:	00000000 	andeq	r0, r0, r0
    3124:	00030000 	andeq	r0, r3, r0
    3128:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    312c:	00000000 	andeq	r0, r0, r0
    3130:	01000000 	mrseq	r0, (UNDEF: 0)
    3134:	00005300 	andeq	r5, r0, r0, lsl #6
    3138:	00000000 	andeq	r0, r0, r0
    313c:	00030000 	andeq	r0, r3, r0
    3140:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    314c:	00000001 	andeq	r0, r0, r1
    3150:	00000000 	andeq	r0, r0, r0
    3154:	53000100 	movwpl	r0, #256	; 0x100
	...
    3160:	01000001 	tsteq	r0, r1
	...
    316c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3170:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3174:	00000000 	andeq	r0, r0, r0
    3178:	52000100 	andpl	r0, r0, #0, 2
	...
    3184:	00000101 	andeq	r0, r0, r1, lsl #2
    3188:	00000000 	andeq	r0, r0, r0
    318c:	00010000 	andeq	r0, r1, r0
    3190:	00000053 	andeq	r0, r0, r3, asr r0
    3194:	00000000 	andeq	r0, r0, r0
    3198:	00010000 	andeq	r0, r1, r0
    319c:	00000000 	andeq	r0, r0, r0
    31a0:	01000000 	mrseq	r0, (UNDEF: 0)
    31a4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    31b8:	00530001 	subseq	r0, r3, r1
	...
    31c8:	00000001 	andeq	r0, r0, r1
    31cc:	00000000 	andeq	r0, r0, r0
    31d0:	72000300 	andvc	r0, r0, #0, 6
    31d4:	00009f14 	andeq	r9, r0, r4, lsl pc
    31d8:	00000000 	andeq	r0, r0, r0
    31dc:	00010000 	andeq	r0, r1, r0
    31e0:	00000053 	andeq	r0, r0, r3, asr r0
    31e4:	00000000 	andeq	r0, r0, r0
    31e8:	72000300 	andvc	r0, r0, #0, 6
    31ec:	00009f14 	andeq	r9, r0, r4, lsl pc
    31f0:	00000000 	andeq	r0, r0, r0
    31f4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3200:	00530001 	subseq	r0, r3, r1
    3204:	00000000 	andeq	r0, r0, r0
    3208:	01000000 	mrseq	r0, (UNDEF: 0)
    320c:	00010000 	andeq	r0, r1, r0
    3210:	00000000 	andeq	r0, r0, r0
    3214:	03000000 	movweq	r0, #0
    3218:	9f147200 	svcls	0x00147200
	...
    3224:	00520001 	subseq	r0, r2, r1
    3228:	00000000 	andeq	r0, r0, r0
    322c:	01000000 	mrseq	r0, (UNDEF: 0)
    3230:	00000001 	andeq	r0, r0, r1
    3234:	00000000 	andeq	r0, r0, r0
    3238:	53000100 	movwpl	r0, #256	; 0x100
	...
    3244:	00000100 	andeq	r0, r0, r0, lsl #2
    3248:	00000000 	andeq	r0, r0, r0
    324c:	00010000 	andeq	r0, r1, r0
    3250:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3260:	01000000 	mrseq	r0, (UNDEF: 0)
    3264:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3270:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    327c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3280:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3284:	00000000 	andeq	r0, r0, r0
    3288:	53000100 	movwpl	r0, #256	; 0x100
	...
    3294:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3298:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    329c:	00000000 	andeq	r0, r0, r0
    32a0:	00010000 	andeq	r0, r1, r0
    32a4:	00000000 	andeq	r0, r0, r0
    32a8:	01000000 	mrseq	r0, (UNDEF: 0)
    32ac:	00005300 	andeq	r5, r0, r0, lsl #6
    32b0:	00000000 	andeq	r0, r0, r0
    32b4:	00010000 	andeq	r0, r1, r0
    32b8:	00000100 	andeq	r0, r0, r0, lsl #2
    32bc:	00000000 	andeq	r0, r0, r0
    32c0:	00030000 	andeq	r0, r3, r0
    32c4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    32c8:	00000000 	andeq	r0, r0, r0
    32cc:	01000000 	mrseq	r0, (UNDEF: 0)
    32d0:	00005200 	andeq	r5, r0, r0, lsl #4
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    32e4:	00530001 	subseq	r0, r3, r1
	...
    32f0:	00000001 	andeq	r0, r0, r1
    32f4:	00000000 	andeq	r0, r0, r0
    32f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    330c:	00010000 	andeq	r0, r1, r0
    3310:	00000053 	andeq	r0, r0, r3, asr r0
	...
    331c:	00010000 	andeq	r0, r1, r0
    3320:	00000000 	andeq	r0, r0, r0
    3324:	03000000 	movweq	r0, #0
    3328:	9f147200 	svcls	0x00147200
	...
    3334:	00530001 	subseq	r0, r3, r1
    3338:	00000000 	andeq	r0, r0, r0
    333c:	03000000 	movweq	r0, #0
    3340:	9f147200 	svcls	0x00147200
	...
    334c:	00000100 	andeq	r0, r0, r0, lsl #2
    3350:	00000000 	andeq	r0, r0, r0
    3354:	00010000 	andeq	r0, r1, r0
    3358:	00000053 	andeq	r0, r0, r3, asr r0
    335c:	00000000 	andeq	r0, r0, r0
    3360:	00000100 	andeq	r0, r0, r0, lsl #2
    3364:	00000001 	andeq	r0, r0, r1
    3368:	00000000 	andeq	r0, r0, r0
    336c:	72000300 	andvc	r0, r0, #0, 6
    3370:	00009f14 	andeq	r9, r0, r4, lsl pc
    3374:	00000000 	andeq	r0, r0, r0
    3378:	00010000 	andeq	r0, r1, r0
    337c:	00000052 	andeq	r0, r0, r2, asr r0
    3380:	00000000 	andeq	r0, r0, r0
    3384:	00010100 	andeq	r0, r1, r0, lsl #2
    3388:	00000000 	andeq	r0, r0, r0
    338c:	01000000 	mrseq	r0, (UNDEF: 0)
    3390:	00005300 	andeq	r5, r0, r0, lsl #6
    3394:	00000000 	andeq	r0, r0, r0
    3398:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    33a4:	00510001 	subseq	r0, r1, r1
	...
    33b8:	53000100 	movwpl	r0, #256	; 0x100
	...
    33c8:	00000100 	andeq	r0, r0, r0, lsl #2
    33cc:	00000000 	andeq	r0, r0, r0
    33d0:	00030000 	andeq	r0, r3, r0
    33d4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    33d8:	00000000 	andeq	r0, r0, r0
    33dc:	01000000 	mrseq	r0, (UNDEF: 0)
    33e0:	00005300 	andeq	r5, r0, r0, lsl #6
    33e4:	00000000 	andeq	r0, r0, r0
    33e8:	00030000 	andeq	r0, r3, r0
    33ec:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    33f8:	00000001 	andeq	r0, r0, r1
    33fc:	00000000 	andeq	r0, r0, r0
    3400:	53000100 	movwpl	r0, #256	; 0x100
	...
    340c:	01000001 	tsteq	r0, r1
	...
    3418:	14720003 	ldrbtne	r0, [r2], #-3
    341c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3420:	00000000 	andeq	r0, r0, r0
    3424:	52000100 	andpl	r0, r0, #0, 2
	...
    3430:	00000101 	andeq	r0, r0, r1, lsl #2
    3434:	00000000 	andeq	r0, r0, r0
    3438:	00010000 	andeq	r0, r1, r0
    343c:	00000053 	andeq	r0, r0, r3, asr r0
    3440:	00000000 	andeq	r0, r0, r0
    3444:	00010000 	andeq	r0, r1, r0
    3448:	00000000 	andeq	r0, r0, r0
    344c:	01000000 	mrseq	r0, (UNDEF: 0)
    3450:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3464:	00010000 	andeq	r0, r1, r0
    3468:	00000050 	andeq	r0, r0, r0, asr r0
    346c:	00000000 	andeq	r0, r0, r0
    3470:	f3000400 	vshl.u8	d0, d0, d0
    3474:	009f5001 	addseq	r5, pc, r1
	...
    3484:	02000000 	andeq	r0, r0, #0
    3488:	00007d00 	andeq	r7, r0, r0, lsl #26
    348c:	00000000 	andeq	r0, r0, r0
    3490:	02000000 	andeq	r0, r0, #0
    3494:	00087d00 	andeq	r7, r8, r0, lsl #26
    3498:	00000000 	andeq	r0, r0, r0
    349c:	02000000 	andeq	r0, r0, #0
    34a0:	00107d00 	andseq	r7, r0, r0, lsl #26
    34a4:	00000000 	andeq	r0, r0, r0
    34a8:	02000000 	andeq	r0, r0, #0
    34ac:	00087d00 	andeq	r7, r8, r0, lsl #26
    34b0:	00000000 	andeq	r0, r0, r0
    34b4:	02000000 	andeq	r0, r0, #0
    34b8:	00107d00 	andseq	r7, r0, r0, lsl #26
    34bc:	00000000 	andeq	r0, r0, r0
    34c0:	02000000 	andeq	r0, r0, #0
    34c4:	00007d00 	andeq	r7, r0, r0, lsl #26
    34c8:	00000000 	andeq	r0, r0, r0
    34cc:	02000000 	andeq	r0, r0, #0
    34d0:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    34f0:	01000000 	mrseq	r0, (UNDEF: 0)
    34f4:	00005000 	andeq	r5, r0, r0
    34f8:	00000000 	andeq	r0, r0, r0
    34fc:	00010000 	andeq	r0, r1, r0
    3500:	00000054 	andeq	r0, r0, r4, asr r0
    3504:	00000000 	andeq	r0, r0, r0
    3508:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3514:	00540001 	subseq	r0, r4, r1
    3518:	00000000 	andeq	r0, r0, r0
    351c:	01000000 	mrseq	r0, (UNDEF: 0)
    3520:	00005000 	andeq	r5, r0, r0
    3524:	00000000 	andeq	r0, r0, r0
    3528:	00040000 	andeq	r0, r4, r0
    352c:	9f5001f3 	svcls	0x005001f3
	...
    3538:	00500001 	subseq	r0, r0, r1
    353c:	00000000 	andeq	r0, r0, r0
    3540:	01000000 	mrseq	r0, (UNDEF: 0)
    3544:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3560:	00510001 	subseq	r0, r1, r1
    3564:	00000000 	andeq	r0, r0, r0
    3568:	04000000 	streq	r0, [r0], #-0
    356c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3570:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3574:	00000000 	andeq	r0, r0, r0
    3578:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3584:	01f30004 	mvnseq	r0, r4
    3588:	00009f51 	andeq	r9, r0, r1, asr pc
    358c:	00000000 	andeq	r0, r0, r0
    3590:	00010000 	andeq	r0, r1, r0
    3594:	00000051 	andeq	r0, r0, r1, asr r0
	...
    35ac:	01000000 	mrseq	r0, (UNDEF: 0)
    35b0:	00005200 	andeq	r5, r0, r0, lsl #4
    35b4:	00000000 	andeq	r0, r0, r0
    35b8:	00040000 	andeq	r0, r4, r0
    35bc:	9f5201f3 	svcls	0x005201f3
	...
    35c8:	00520001 	subseq	r0, r2, r1
    35cc:	00000000 	andeq	r0, r0, r0
    35d0:	04000000 	streq	r0, [r0], #-0
    35d4:	5201f300 	andpl	pc, r1, #0, 6
    35d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35dc:	00000000 	andeq	r0, r0, r0
    35e0:	52000100 	andpl	r0, r0, #0, 2
	...
    35f8:	00010000 	andeq	r0, r1, r0
    35fc:	00000050 	andeq	r0, r0, r0, asr r0
    3600:	00000000 	andeq	r0, r0, r0
    3604:	31000200 	mrscc	r0, R8_usr
    3608:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    360c:	00000000 	andeq	r0, r0, r0
    3610:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3624:	00010000 	andeq	r0, r1, r0
    3628:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3634:	00010000 	andeq	r0, r1, r0
    3638:	00000000 	andeq	r0, r0, r0
    363c:	03000000 	movweq	r0, #0
    3640:	9f0c7200 	svcls	0x000c7200
	...
    364c:	00530001 	subseq	r0, r3, r1
    3650:	00000000 	andeq	r0, r0, r0
    3654:	03000000 	movweq	r0, #0
    3658:	9f0c7200 	svcls	0x000c7200
	...
    3664:	00000100 	andeq	r0, r0, r0, lsl #2
    3668:	00000000 	andeq	r0, r0, r0
    366c:	00010000 	andeq	r0, r1, r0
    3670:	00000053 	andeq	r0, r0, r3, asr r0
    3674:	00000000 	andeq	r0, r0, r0
    3678:	00000100 	andeq	r0, r0, r0, lsl #2
    367c:	00000001 	andeq	r0, r0, r1
    3680:	00000000 	andeq	r0, r0, r0
    3684:	72000300 	andvc	r0, r0, #0, 6
    3688:	00009f0c 	andeq	r9, r0, ip, lsl #30
    368c:	00000000 	andeq	r0, r0, r0
    3690:	00010000 	andeq	r0, r1, r0
    3694:	00000052 	andeq	r0, r0, r2, asr r0
    3698:	00000000 	andeq	r0, r0, r0
    369c:	00010100 	andeq	r0, r1, r0, lsl #2
    36a0:	00000000 	andeq	r0, r0, r0
    36a4:	01000000 	mrseq	r0, (UNDEF: 0)
    36a8:	00005300 	andeq	r5, r0, r0, lsl #6
    36ac:	00000000 	andeq	r0, r0, r0
    36b0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    36bc:	00510001 	subseq	r0, r1, r1
	...
    36cc:	02000000 	andeq	r0, r0, #0
    36d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    36d4:	00000000 	andeq	r0, r0, r0
    36d8:	02000000 	andeq	r0, r0, #0
    36dc:	00087d00 	andeq	r7, r8, r0, lsl #26
    36e0:	00000000 	andeq	r0, r0, r0
    36e4:	02000000 	andeq	r0, r0, #0
    36e8:	00107d00 	andseq	r7, r0, r0, lsl #26
    36ec:	00000000 	andeq	r0, r0, r0
    36f0:	02000000 	andeq	r0, r0, #0
    36f4:	00087d00 	andeq	r7, r8, r0, lsl #26
    36f8:	00000000 	andeq	r0, r0, r0
    36fc:	02000000 	andeq	r0, r0, #0
    3700:	00107d00 	andseq	r7, r0, r0, lsl #26
    3704:	00000000 	andeq	r0, r0, r0
    3708:	02000000 	andeq	r0, r0, #0
    370c:	00007d00 	andeq	r7, r0, r0, lsl #26
    3710:	00000000 	andeq	r0, r0, r0
    3714:	02000000 	andeq	r0, r0, #0
    3718:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    3738:	01000000 	mrseq	r0, (UNDEF: 0)
    373c:	00005000 	andeq	r5, r0, r0
    3740:	00000000 	andeq	r0, r0, r0
    3744:	00010000 	andeq	r0, r1, r0
    3748:	00000054 	andeq	r0, r0, r4, asr r0
    374c:	00000000 	andeq	r0, r0, r0
    3750:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    375c:	00540001 	subseq	r0, r4, r1
    3760:	00000000 	andeq	r0, r0, r0
    3764:	01000000 	mrseq	r0, (UNDEF: 0)
    3768:	00005000 	andeq	r5, r0, r0
    376c:	00000000 	andeq	r0, r0, r0
    3770:	00040000 	andeq	r0, r4, r0
    3774:	9f5001f3 	svcls	0x005001f3
	...
    3780:	00500001 	subseq	r0, r0, r1
    3784:	00000000 	andeq	r0, r0, r0
    3788:	01000000 	mrseq	r0, (UNDEF: 0)
    378c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    37a8:	00510001 	subseq	r0, r1, r1
    37ac:	00000000 	andeq	r0, r0, r0
    37b0:	04000000 	streq	r0, [r0], #-0
    37b4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    37b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    37bc:	00000000 	andeq	r0, r0, r0
    37c0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    37cc:	01f30004 	mvnseq	r0, r4
    37d0:	00009f51 	andeq	r9, r0, r1, asr pc
    37d4:	00000000 	andeq	r0, r0, r0
    37d8:	00010000 	andeq	r0, r1, r0
    37dc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    37f4:	01000000 	mrseq	r0, (UNDEF: 0)
    37f8:	00005200 	andeq	r5, r0, r0, lsl #4
    37fc:	00000000 	andeq	r0, r0, r0
    3800:	00040000 	andeq	r0, r4, r0
    3804:	9f5201f3 	svcls	0x005201f3
	...
    3810:	00520001 	subseq	r0, r2, r1
    3814:	00000000 	andeq	r0, r0, r0
    3818:	04000000 	streq	r0, [r0], #-0
    381c:	5201f300 	andpl	pc, r1, #0, 6
    3820:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3824:	00000000 	andeq	r0, r0, r0
    3828:	52000100 	andpl	r0, r0, #0, 2
	...
    3840:	00010000 	andeq	r0, r1, r0
    3844:	00000050 	andeq	r0, r0, r0, asr r0
    3848:	00000000 	andeq	r0, r0, r0
    384c:	31000200 	mrscc	r0, R8_usr
    3850:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3854:	00000000 	andeq	r0, r0, r0
    3858:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    386c:	00010000 	andeq	r0, r1, r0
    3870:	00000053 	andeq	r0, r0, r3, asr r0
	...
    387c:	00010000 	andeq	r0, r1, r0
    3880:	00000000 	andeq	r0, r0, r0
    3884:	03000000 	movweq	r0, #0
    3888:	9f0c7200 	svcls	0x000c7200
	...
    3894:	00530001 	subseq	r0, r3, r1
    3898:	00000000 	andeq	r0, r0, r0
    389c:	03000000 	movweq	r0, #0
    38a0:	9f0c7200 	svcls	0x000c7200
	...
    38ac:	00000100 	andeq	r0, r0, r0, lsl #2
    38b0:	00000000 	andeq	r0, r0, r0
    38b4:	00010000 	andeq	r0, r1, r0
    38b8:	00000053 	andeq	r0, r0, r3, asr r0
    38bc:	00000000 	andeq	r0, r0, r0
    38c0:	00000100 	andeq	r0, r0, r0, lsl #2
    38c4:	00000001 	andeq	r0, r0, r1
    38c8:	00000000 	andeq	r0, r0, r0
    38cc:	72000300 	andvc	r0, r0, #0, 6
    38d0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    38d4:	00000000 	andeq	r0, r0, r0
    38d8:	00010000 	andeq	r0, r1, r0
    38dc:	00000052 	andeq	r0, r0, r2, asr r0
    38e0:	00000000 	andeq	r0, r0, r0
    38e4:	00010100 	andeq	r0, r1, r0, lsl #2
    38e8:	00000000 	andeq	r0, r0, r0
    38ec:	01000000 	mrseq	r0, (UNDEF: 0)
    38f0:	00005300 	andeq	r5, r0, r0, lsl #6
    38f4:	00000000 	andeq	r0, r0, r0
    38f8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3904:	00510001 	subseq	r0, r1, r1
	...
    3914:	02000000 	andeq	r0, r0, #0
    3918:	00007d00 	andeq	r7, r0, r0, lsl #26
    391c:	00000000 	andeq	r0, r0, r0
    3920:	02000000 	andeq	r0, r0, #0
    3924:	001c7d00 	andseq	r7, ip, r0, lsl #26
    3928:	00000000 	andeq	r0, r0, r0
    392c:	02000000 	andeq	r0, r0, #0
    3930:	00287d00 	eoreq	r7, r8, r0, lsl #26
    3934:	00000000 	andeq	r0, r0, r0
    3938:	02000000 	andeq	r0, r0, #0
    393c:	001c7d00 	andseq	r7, ip, r0, lsl #26
    3940:	00000000 	andeq	r0, r0, r0
    3944:	02000000 	andeq	r0, r0, #0
    3948:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
    3968:	01000000 	mrseq	r0, (UNDEF: 0)
    396c:	00005000 	andeq	r5, r0, r0
    3970:	00000000 	andeq	r0, r0, r0
    3974:	00010000 	andeq	r0, r1, r0
    3978:	00000054 	andeq	r0, r0, r4, asr r0
    397c:	00000000 	andeq	r0, r0, r0
    3980:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    398c:	00540001 	subseq	r0, r4, r1
    3990:	00000000 	andeq	r0, r0, r0
    3994:	01000000 	mrseq	r0, (UNDEF: 0)
    3998:	00005000 	andeq	r5, r0, r0
    399c:	00000000 	andeq	r0, r0, r0
    39a0:	00040000 	andeq	r0, r4, r0
    39a4:	9f5001f3 	svcls	0x005001f3
	...
    39b0:	00500001 	subseq	r0, r0, r1
    39b4:	00000000 	andeq	r0, r0, r0
    39b8:	01000000 	mrseq	r0, (UNDEF: 0)
    39bc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    39e0:	00510001 	subseq	r0, r1, r1
    39e4:	00000000 	andeq	r0, r0, r0
    39e8:	01000000 	mrseq	r0, (UNDEF: 0)
    39ec:	00005500 	andeq	r5, r0, r0, lsl #10
    39f0:	00000000 	andeq	r0, r0, r0
    39f4:	00040000 	andeq	r0, r4, r0
    39f8:	9f5101f3 	svcls	0x005101f3
	...
    3a04:	00550001 	subseq	r0, r5, r1
    3a08:	00000000 	andeq	r0, r0, r0
    3a0c:	01000000 	mrseq	r0, (UNDEF: 0)
    3a10:	00005900 	andeq	r5, r0, r0, lsl #18
    3a14:	00000000 	andeq	r0, r0, r0
    3a18:	00040000 	andeq	r0, r4, r0
    3a1c:	9f5101f3 	svcls	0x005101f3
	...
    3a28:	00510001 	subseq	r0, r1, r1
    3a2c:	00000000 	andeq	r0, r0, r0
    3a30:	04000000 	streq	r0, [r0], #-0
    3a34:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3a38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3a3c:	00000000 	andeq	r0, r0, r0
    3a40:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3a5c:	00010000 	andeq	r0, r1, r0
    3a60:	00000052 	andeq	r0, r0, r2, asr r0
    3a64:	00000000 	andeq	r0, r0, r0
    3a68:	f3000400 	vshl.u8	d0, d0, d0
    3a6c:	009f5201 	addseq	r5, pc, r1, lsl #4
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	01000000 	mrseq	r0, (UNDEF: 0)
    3a78:	00005200 	andeq	r5, r0, r0, lsl #4
    3a7c:	00000000 	andeq	r0, r0, r0
    3a80:	00040000 	andeq	r0, r4, r0
    3a84:	9f5201f3 	svcls	0x005201f3
	...
    3a90:	00520001 	subseq	r0, r2, r1
	...
    3aa4:	01000000 	mrseq	r0, (UNDEF: 0)
    3aa8:	00005300 	andeq	r5, r0, r0, lsl #6
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	00010000 	andeq	r0, r1, r0
    3ab4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    3ac8:	91000200 	mrsls	r0, R8_usr
	...
    3ad4:	91000200 	mrsls	r0, R8_usr
	...
    3aec:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3af8:	00550001 	subseq	r0, r5, r1
	...
    3b08:	00000101 	andeq	r0, r0, r1, lsl #2
    3b0c:	00000000 	andeq	r0, r0, r0
    3b10:	01000000 	mrseq	r0, (UNDEF: 0)
    3b14:	00005900 	andeq	r5, r0, r0, lsl #18
    3b18:	00000000 	andeq	r0, r0, r0
    3b1c:	00010000 	andeq	r0, r1, r0
    3b20:	00000059 	andeq	r0, r0, r9, asr r0
    3b24:	00000000 	andeq	r0, r0, r0
    3b28:	79000300 	stmdbvc	r0, {r8, r9}
    3b2c:	00009f7e 	andeq	r9, r0, lr, ror pc
    3b30:	00000000 	andeq	r0, r0, r0
    3b34:	00010000 	andeq	r0, r1, r0
    3b38:	00000059 	andeq	r0, r0, r9, asr r0
	...
    3b4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b58:	00580001 	subseq	r0, r8, r1
	...
    3b68:	02000000 	andeq	r0, r0, #0
    3b6c:	00007d00 	andeq	r7, r0, r0, lsl #26
    3b70:	00000000 	andeq	r0, r0, r0
    3b74:	02000000 	andeq	r0, r0, #0
    3b78:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3b90:	01000000 	mrseq	r0, (UNDEF: 0)
    3b94:	00005000 	andeq	r5, r0, r0
    3b98:	00000000 	andeq	r0, r0, r0
    3b9c:	00010000 	andeq	r0, r1, r0
    3ba0:	00000054 	andeq	r0, r0, r4, asr r0
    3ba4:	00000000 	andeq	r0, r0, r0
    3ba8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3bb4:	00540001 	subseq	r0, r4, r1
    3bb8:	00000000 	andeq	r0, r0, r0
    3bbc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3bd0:	30000200 	andcc	r0, r0, r0, lsl #4
    3bd4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3bd8:	00000000 	andeq	r0, r0, r0
    3bdc:	72000b00 	andvc	r0, r0, #0, 22
    3be0:	1a800800 	bne	fe005be8 <_estack+0xde0049a8>
    3be4:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    3be8:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3bec:	00000000 	andeq	r0, r0, r0
    3bf0:	00080000 	andeq	r0, r8, r0
    3bf4:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    3bf8:	9f1aff08 	svcls	0x001aff08
	...
    3c04:	0072000b 	rsbseq	r0, r2, fp
    3c08:	301a8008 	andscc	r8, sl, r8
    3c0c:	1aff082e 	bne	fffc5ccc <_estack+0xdffc4a8c>
    3c10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3c14:	00000000 	andeq	r0, r0, r0
    3c18:	72000800 	andvc	r0, r0, #0, 16
    3c1c:	082e3000 	stmdaeq	lr!, {ip, sp}
    3c20:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    3c34:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c44:	00000100 	andeq	r0, r0, r0, lsl #2
    3c48:	00000000 	andeq	r0, r0, r0
    3c4c:	00030000 	andeq	r0, r3, r0
    3c50:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3c54:	00000000 	andeq	r0, r0, r0
    3c58:	01000000 	mrseq	r0, (UNDEF: 0)
    3c5c:	00005300 	andeq	r5, r0, r0, lsl #6
    3c60:	00000000 	andeq	r0, r0, r0
    3c64:	00030000 	andeq	r0, r3, r0
    3c68:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3c74:	00000001 	andeq	r0, r0, r1
    3c78:	00000000 	andeq	r0, r0, r0
    3c7c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c88:	01000001 	tsteq	r0, r1
	...
    3c94:	14720003 	ldrbtne	r0, [r2], #-3
    3c98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3c9c:	00000000 	andeq	r0, r0, r0
    3ca0:	52000100 	andpl	r0, r0, #0, 2
	...
    3cac:	00000101 	andeq	r0, r0, r1, lsl #2
    3cb0:	00000000 	andeq	r0, r0, r0
    3cb4:	00010000 	andeq	r0, r1, r0
    3cb8:	00000053 	andeq	r0, r0, r3, asr r0
    3cbc:	00000000 	andeq	r0, r0, r0
    3cc0:	00010000 	andeq	r0, r1, r0
    3cc4:	00000000 	andeq	r0, r0, r0
    3cc8:	01000000 	mrseq	r0, (UNDEF: 0)
    3ccc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3ce0:	00530001 	subseq	r0, r3, r1
	...
    3cf0:	00000001 	andeq	r0, r0, r1
    3cf4:	00000000 	andeq	r0, r0, r0
    3cf8:	72000300 	andvc	r0, r0, #0, 6
    3cfc:	00009f14 	andeq	r9, r0, r4, lsl pc
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	00010000 	andeq	r0, r1, r0
    3d08:	00000053 	andeq	r0, r0, r3, asr r0
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	72000300 	andvc	r0, r0, #0, 6
    3d14:	00009f14 	andeq	r9, r0, r4, lsl pc
    3d18:	00000000 	andeq	r0, r0, r0
    3d1c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3d28:	00530001 	subseq	r0, r3, r1
    3d2c:	00000000 	andeq	r0, r0, r0
    3d30:	01000000 	mrseq	r0, (UNDEF: 0)
    3d34:	00010000 	andeq	r0, r1, r0
    3d38:	00000000 	andeq	r0, r0, r0
    3d3c:	03000000 	movweq	r0, #0
    3d40:	9f147200 	svcls	0x00147200
	...
    3d4c:	00520001 	subseq	r0, r2, r1
    3d50:	00000000 	andeq	r0, r0, r0
    3d54:	01000000 	mrseq	r0, (UNDEF: 0)
    3d58:	00000001 	andeq	r0, r0, r1
    3d5c:	00000000 	andeq	r0, r0, r0
    3d60:	53000100 	movwpl	r0, #256	; 0x100
	...
    3d6c:	00000100 	andeq	r0, r0, r0, lsl #2
    3d70:	00000000 	andeq	r0, r0, r0
    3d74:	00010000 	andeq	r0, r1, r0
    3d78:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3d88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3d94:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3d98:	00000008 	andeq	r0, r0, r8
    3d9c:	00000000 	andeq	r0, r0, r0
    3da0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3dbc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3dc8:	01f30004 	mvnseq	r0, r4
    3dcc:	00009f50 	andeq	r9, r0, r0, asr pc
    3dd0:	00000000 	andeq	r0, r0, r0
    3dd4:	00010000 	andeq	r0, r1, r0
    3dd8:	00000050 	andeq	r0, r0, r0, asr r0
    3ddc:	00000000 	andeq	r0, r0, r0
    3de0:	f3000400 	vshl.u8	d0, d0, d0
    3de4:	009f5001 	addseq	r5, pc, r1
	...
    3df8:	53000100 	movwpl	r0, #256	; 0x100
	...
    3e08:	00000100 	andeq	r0, r0, r0, lsl #2
    3e0c:	00000000 	andeq	r0, r0, r0
    3e10:	00030000 	andeq	r0, r3, r0
    3e14:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3e18:	00000000 	andeq	r0, r0, r0
    3e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e20:	00005300 	andeq	r5, r0, r0, lsl #6
    3e24:	00000000 	andeq	r0, r0, r0
    3e28:	00030000 	andeq	r0, r3, r0
    3e2c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3e38:	00000001 	andeq	r0, r0, r1
    3e3c:	00000000 	andeq	r0, r0, r0
    3e40:	53000100 	movwpl	r0, #256	; 0x100
	...
    3e4c:	01000001 	tsteq	r0, r1
	...
    3e58:	14720003 	ldrbtne	r0, [r2], #-3
    3e5c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e60:	00000000 	andeq	r0, r0, r0
    3e64:	52000100 	andpl	r0, r0, #0, 2
	...
    3e70:	00000101 	andeq	r0, r0, r1, lsl #2
    3e74:	00000000 	andeq	r0, r0, r0
    3e78:	00010000 	andeq	r0, r1, r0
    3e7c:	00000053 	andeq	r0, r0, r3, asr r0
    3e80:	00000000 	andeq	r0, r0, r0
    3e84:	00010000 	andeq	r0, r1, r0
    3e88:	00000000 	andeq	r0, r0, r0
    3e8c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e90:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3ea4:	00530001 	subseq	r0, r3, r1
	...
    3eb4:	00000001 	andeq	r0, r0, r1
    3eb8:	00000000 	andeq	r0, r0, r0
    3ebc:	72000300 	andvc	r0, r0, #0, 6
    3ec0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3ec4:	00000000 	andeq	r0, r0, r0
    3ec8:	00010000 	andeq	r0, r1, r0
    3ecc:	00000053 	andeq	r0, r0, r3, asr r0
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	72000300 	andvc	r0, r0, #0, 6
    3ed8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3edc:	00000000 	andeq	r0, r0, r0
    3ee0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3eec:	00530001 	subseq	r0, r3, r1
    3ef0:	00000000 	andeq	r0, r0, r0
    3ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ef8:	00010000 	andeq	r0, r1, r0
    3efc:	00000000 	andeq	r0, r0, r0
    3f00:	03000000 	movweq	r0, #0
    3f04:	9f0c7200 	svcls	0x000c7200
	...
    3f10:	00520001 	subseq	r0, r2, r1
    3f14:	00000000 	andeq	r0, r0, r0
    3f18:	01000000 	mrseq	r0, (UNDEF: 0)
    3f1c:	00000001 	andeq	r0, r0, r1
    3f20:	00000000 	andeq	r0, r0, r0
    3f24:	53000100 	movwpl	r0, #256	; 0x100
	...
    3f30:	00000100 	andeq	r0, r0, r0, lsl #2
    3f34:	00000000 	andeq	r0, r0, r0
    3f38:	00010000 	andeq	r0, r1, r0
    3f3c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3f4c:	01000000 	mrseq	r0, (UNDEF: 0)
    3f50:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3f5c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3f68:	14720003 	ldrbtne	r0, [r2], #-3
    3f6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3f70:	00000000 	andeq	r0, r0, r0
    3f74:	53000100 	movwpl	r0, #256	; 0x100
	...
    3f80:	14720003 	ldrbtne	r0, [r2], #-3
    3f84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3f88:	00000000 	andeq	r0, r0, r0
    3f8c:	00010000 	andeq	r0, r1, r0
    3f90:	00000000 	andeq	r0, r0, r0
    3f94:	01000000 	mrseq	r0, (UNDEF: 0)
    3f98:	00005300 	andeq	r5, r0, r0, lsl #6
    3f9c:	00000000 	andeq	r0, r0, r0
    3fa0:	00010000 	andeq	r0, r1, r0
    3fa4:	00000100 	andeq	r0, r0, r0, lsl #2
    3fa8:	00000000 	andeq	r0, r0, r0
    3fac:	00030000 	andeq	r0, r3, r0
    3fb0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3fb4:	00000000 	andeq	r0, r0, r0
    3fb8:	01000000 	mrseq	r0, (UNDEF: 0)
    3fbc:	00005200 	andeq	r5, r0, r0, lsl #4
    3fc0:	00000000 	andeq	r0, r0, r0
    3fc4:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3fd0:	00530001 	subseq	r0, r3, r1
	...
    3fdc:	00000001 	andeq	r0, r0, r1
    3fe0:	00000000 	andeq	r0, r0, r0
    3fe4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3ff8:	00010000 	andeq	r0, r1, r0
    3ffc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4008:	00010000 	andeq	r0, r1, r0
    400c:	00000000 	andeq	r0, r0, r0
    4010:	03000000 	movweq	r0, #0
    4014:	9f147200 	svcls	0x00147200
	...
    4020:	00530001 	subseq	r0, r3, r1
    4024:	00000000 	andeq	r0, r0, r0
    4028:	03000000 	movweq	r0, #0
    402c:	9f147200 	svcls	0x00147200
	...
    4038:	00000100 	andeq	r0, r0, r0, lsl #2
    403c:	00000000 	andeq	r0, r0, r0
    4040:	00010000 	andeq	r0, r1, r0
    4044:	00000053 	andeq	r0, r0, r3, asr r0
    4048:	00000000 	andeq	r0, r0, r0
    404c:	00000100 	andeq	r0, r0, r0, lsl #2
    4050:	00000001 	andeq	r0, r0, r1
    4054:	00000000 	andeq	r0, r0, r0
    4058:	72000300 	andvc	r0, r0, #0, 6
    405c:	00009f14 	andeq	r9, r0, r4, lsl pc
    4060:	00000000 	andeq	r0, r0, r0
    4064:	00010000 	andeq	r0, r1, r0
    4068:	00000052 	andeq	r0, r0, r2, asr r0
    406c:	00000000 	andeq	r0, r0, r0
    4070:	00010100 	andeq	r0, r1, r0, lsl #2
    4074:	00000000 	andeq	r0, r0, r0
    4078:	01000000 	mrseq	r0, (UNDEF: 0)
    407c:	00005300 	andeq	r5, r0, r0, lsl #6
    4080:	00000000 	andeq	r0, r0, r0
    4084:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4090:	00510001 	subseq	r0, r1, r1
	...
    40a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    40b4:	01f30004 	mvnseq	r0, r4
    40b8:	00009f50 	andeq	r9, r0, r0, asr pc
    40bc:	00000000 	andeq	r0, r0, r0
    40c0:	00010000 	andeq	r0, r1, r0
    40c4:	00000050 	andeq	r0, r0, r0, asr r0
    40c8:	00000000 	andeq	r0, r0, r0
    40cc:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    40dc:	02000000 	andeq	r0, r0, #0
    40e0:	009f3000 	addseq	r3, pc, r0
    40e4:	00000000 	andeq	r0, r0, r0
    40e8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    40ec:	30007200 	andcc	r7, r0, r0, lsl #4
    40f0:	1aff082e 	bne	fffc61b0 <_estack+0xdffc4f70>
    40f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    40f8:	00000000 	andeq	r0, r0, r0
    40fc:	72000800 	andvc	r0, r0, #0, 16
    4100:	082e3000 	stmdaeq	lr!, {ip, sp}
    4104:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    4108:	00000000 	andeq	r0, r0, r0
    410c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4110:	30007200 	andcc	r7, r0, r0, lsl #4
    4114:	1aff082e 	bne	fffc61d4 <_estack+0xdffc4f94>
    4118:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    411c:	00000000 	andeq	r0, r0, r0
    4120:	72000800 	andvc	r0, r0, #0, 16
    4124:	082e3000 	stmdaeq	lr!, {ip, sp}
    4128:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    413c:	53000100 	movwpl	r0, #256	; 0x100
	...
    414c:	00000100 	andeq	r0, r0, r0, lsl #2
    4150:	00000000 	andeq	r0, r0, r0
    4154:	00030000 	andeq	r0, r3, r0
    4158:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    415c:	00000000 	andeq	r0, r0, r0
    4160:	01000000 	mrseq	r0, (UNDEF: 0)
    4164:	00005300 	andeq	r5, r0, r0, lsl #6
    4168:	00000000 	andeq	r0, r0, r0
    416c:	00030000 	andeq	r0, r3, r0
    4170:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    417c:	00000001 	andeq	r0, r0, r1
    4180:	00000000 	andeq	r0, r0, r0
    4184:	53000100 	movwpl	r0, #256	; 0x100
	...
    4190:	01000001 	tsteq	r0, r1
	...
    419c:	14720003 	ldrbtne	r0, [r2], #-3
    41a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    41a4:	00000000 	andeq	r0, r0, r0
    41a8:	52000100 	andpl	r0, r0, #0, 2
	...
    41b4:	00000101 	andeq	r0, r0, r1, lsl #2
    41b8:	00000000 	andeq	r0, r0, r0
    41bc:	00010000 	andeq	r0, r1, r0
    41c0:	00000053 	andeq	r0, r0, r3, asr r0
    41c4:	00000000 	andeq	r0, r0, r0
    41c8:	00010000 	andeq	r0, r1, r0
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	01000000 	mrseq	r0, (UNDEF: 0)
    41d4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    41e8:	00530001 	subseq	r0, r3, r1
	...
    41f8:	00000001 	andeq	r0, r0, r1
    41fc:	00000000 	andeq	r0, r0, r0
    4200:	72000300 	andvc	r0, r0, #0, 6
    4204:	00009f0c 	andeq	r9, r0, ip, lsl #30
    4208:	00000000 	andeq	r0, r0, r0
    420c:	00010000 	andeq	r0, r1, r0
    4210:	00000053 	andeq	r0, r0, r3, asr r0
    4214:	00000000 	andeq	r0, r0, r0
    4218:	72000300 	andvc	r0, r0, #0, 6
    421c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    4220:	00000000 	andeq	r0, r0, r0
    4224:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4230:	00530001 	subseq	r0, r3, r1
    4234:	00000000 	andeq	r0, r0, r0
    4238:	01000000 	mrseq	r0, (UNDEF: 0)
    423c:	00010000 	andeq	r0, r1, r0
    4240:	00000000 	andeq	r0, r0, r0
    4244:	03000000 	movweq	r0, #0
    4248:	9f0c7200 	svcls	0x000c7200
	...
    4254:	00520001 	subseq	r0, r2, r1
    4258:	00000000 	andeq	r0, r0, r0
    425c:	01000000 	mrseq	r0, (UNDEF: 0)
    4260:	00000001 	andeq	r0, r0, r1
    4264:	00000000 	andeq	r0, r0, r0
    4268:	53000100 	movwpl	r0, #256	; 0x100
	...
    4274:	00000100 	andeq	r0, r0, r0, lsl #2
    4278:	00000000 	andeq	r0, r0, r0
    427c:	00010000 	andeq	r0, r1, r0
    4280:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4290:	01000000 	mrseq	r0, (UNDEF: 0)
    4294:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    42a0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    42ac:	14720003 	ldrbtne	r0, [r2], #-3
    42b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    42b4:	00000000 	andeq	r0, r0, r0
    42b8:	53000100 	movwpl	r0, #256	; 0x100
	...
    42c4:	14720003 	ldrbtne	r0, [r2], #-3
    42c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    42cc:	00000000 	andeq	r0, r0, r0
    42d0:	00010000 	andeq	r0, r1, r0
    42d4:	00000000 	andeq	r0, r0, r0
    42d8:	01000000 	mrseq	r0, (UNDEF: 0)
    42dc:	00005300 	andeq	r5, r0, r0, lsl #6
    42e0:	00000000 	andeq	r0, r0, r0
    42e4:	00010000 	andeq	r0, r1, r0
    42e8:	00000100 	andeq	r0, r0, r0, lsl #2
    42ec:	00000000 	andeq	r0, r0, r0
    42f0:	00030000 	andeq	r0, r3, r0
    42f4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    42f8:	00000000 	andeq	r0, r0, r0
    42fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4300:	00005200 	andeq	r5, r0, r0, lsl #4
    4304:	00000000 	andeq	r0, r0, r0
    4308:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4314:	00530001 	subseq	r0, r3, r1
	...
    4320:	00000001 	andeq	r0, r0, r1
    4324:	00000000 	andeq	r0, r0, r0
    4328:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    433c:	00010000 	andeq	r0, r1, r0
    4340:	00000053 	andeq	r0, r0, r3, asr r0
	...
    434c:	00010000 	andeq	r0, r1, r0
    4350:	00000000 	andeq	r0, r0, r0
    4354:	03000000 	movweq	r0, #0
    4358:	9f147200 	svcls	0x00147200
	...
    4364:	00530001 	subseq	r0, r3, r1
    4368:	00000000 	andeq	r0, r0, r0
    436c:	03000000 	movweq	r0, #0
    4370:	9f147200 	svcls	0x00147200
	...
    437c:	00000100 	andeq	r0, r0, r0, lsl #2
    4380:	00000000 	andeq	r0, r0, r0
    4384:	00010000 	andeq	r0, r1, r0
    4388:	00000053 	andeq	r0, r0, r3, asr r0
    438c:	00000000 	andeq	r0, r0, r0
    4390:	00000100 	andeq	r0, r0, r0, lsl #2
    4394:	00000001 	andeq	r0, r0, r1
    4398:	00000000 	andeq	r0, r0, r0
    439c:	72000300 	andvc	r0, r0, #0, 6
    43a0:	00009f14 	andeq	r9, r0, r4, lsl pc
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	00010000 	andeq	r0, r1, r0
    43ac:	00000052 	andeq	r0, r0, r2, asr r0
    43b0:	00000000 	andeq	r0, r0, r0
    43b4:	00010100 	andeq	r0, r1, r0, lsl #2
    43b8:	00000000 	andeq	r0, r0, r0
    43bc:	01000000 	mrseq	r0, (UNDEF: 0)
    43c0:	00005300 	andeq	r5, r0, r0, lsl #6
    43c4:	00000000 	andeq	r0, r0, r0
    43c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    43d4:	00510001 	subseq	r0, r1, r1
	...
    43e4:	02000000 	andeq	r0, r0, #0
    43e8:	00007d00 	andeq	r7, r0, r0, lsl #26
    43ec:	00000000 	andeq	r0, r0, r0
    43f0:	02000000 	andeq	r0, r0, #0
    43f4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    4414:	01000000 	mrseq	r0, (UNDEF: 0)
    4418:	00005000 	andeq	r5, r0, r0
    441c:	00000000 	andeq	r0, r0, r0
    4420:	00040000 	andeq	r0, r4, r0
    4424:	9f5001f3 	svcls	0x005001f3
	...
    4430:	00500001 	subseq	r0, r0, r1
    4434:	00000000 	andeq	r0, r0, r0
    4438:	04000000 	streq	r0, [r0], #-0
    443c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4440:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4444:	00000000 	andeq	r0, r0, r0
    4448:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4454:	01f30004 	mvnseq	r0, r4
    4458:	00009f50 	andeq	r9, r0, r0, asr pc
    445c:	00000000 	andeq	r0, r0, r0
    4460:	00010000 	andeq	r0, r1, r0
    4464:	00000050 	andeq	r0, r0, r0, asr r0
    4468:	00000000 	andeq	r0, r0, r0
    446c:	f3000400 	vshl.u8	d0, d0, d0
    4470:	009f5001 	addseq	r5, pc, r1
	...
    448c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4498:	01f30004 	mvnseq	r0, r4
    449c:	00009f51 	andeq	r9, r0, r1, asr pc
    44a0:	00000000 	andeq	r0, r0, r0
    44a4:	00010000 	andeq	r0, r1, r0
    44a8:	00000051 	andeq	r0, r0, r1, asr r0
    44ac:	00000000 	andeq	r0, r0, r0
    44b0:	f3000400 	vshl.u8	d0, d0, d0
    44b4:	009f5101 	addseq	r5, pc, r1, lsl #2
    44b8:	00000000 	andeq	r0, r0, r0
    44bc:	01000000 	mrseq	r0, (UNDEF: 0)
    44c0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    44dc:	00520001 	subseq	r0, r2, r1
    44e0:	00000000 	andeq	r0, r0, r0
    44e4:	04000000 	streq	r0, [r0], #-0
    44e8:	5201f300 	andpl	pc, r1, #0, 6
    44ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44f0:	00000000 	andeq	r0, r0, r0
    44f4:	52000100 	andpl	r0, r0, #0, 2
	...
    4500:	01f30004 	mvnseq	r0, r4
    4504:	00009f52 	andeq	r9, r0, r2, asr pc
    4508:	00000000 	andeq	r0, r0, r0
    450c:	00010000 	andeq	r0, r1, r0
    4510:	00000052 	andeq	r0, r0, r2, asr r0
	...
    4520:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    452c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4530:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    4550:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    455c:	01f30004 	mvnseq	r0, r4
    4560:	00009f50 	andeq	r9, r0, r0, asr pc
    4564:	00000000 	andeq	r0, r0, r0
    4568:	00010000 	andeq	r0, r1, r0
    456c:	00000050 	andeq	r0, r0, r0, asr r0
    4570:	00000000 	andeq	r0, r0, r0
    4574:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4580:	00500001 	subseq	r0, r0, r1
    4584:	00000000 	andeq	r0, r0, r0
    4588:	04000000 	streq	r0, [r0], #-0
    458c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4590:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4594:	00000000 	andeq	r0, r0, r0
    4598:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    45a4:	00540001 	subseq	r0, r4, r1
	...
    45c0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    45cc:	01f30004 	mvnseq	r0, r4
    45d0:	00009f51 	andeq	r9, r0, r1, asr pc
    45d4:	00000000 	andeq	r0, r0, r0
    45d8:	00010000 	andeq	r0, r1, r0
    45dc:	00000051 	andeq	r0, r0, r1, asr r0
    45e0:	00000000 	andeq	r0, r0, r0
    45e4:	f3000400 	vshl.u8	d0, d0, d0
    45e8:	009f5101 	addseq	r5, pc, r1, lsl #2
    45ec:	00000000 	andeq	r0, r0, r0
    45f0:	01000000 	mrseq	r0, (UNDEF: 0)
    45f4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4610:	00520001 	subseq	r0, r2, r1
    4614:	00000000 	andeq	r0, r0, r0
    4618:	04000000 	streq	r0, [r0], #-0
    461c:	5201f300 	andpl	pc, r1, #0, 6
    4620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4624:	00000000 	andeq	r0, r0, r0
    4628:	52000100 	andpl	r0, r0, #0, 2
	...
    4634:	01f30004 	mvnseq	r0, r4
    4638:	00009f52 	andeq	r9, r0, r2, asr pc
    463c:	00000000 	andeq	r0, r0, r0
    4640:	00010000 	andeq	r0, r1, r0
    4644:	00000052 	andeq	r0, r0, r2, asr r0
    4648:	00000000 	andeq	r0, r0, r0
    464c:	00000100 	andeq	r0, r0, r0, lsl #2
    4650:	00000000 	andeq	r0, r0, r0
    4654:	06000000 	streq	r0, [r0], -r0
    4658:	68a9f200 	stmiavs	r9!, {r9, ip, sp, lr, pc}
	...
    4670:	53000100 	movwpl	r0, #256	; 0x100
	...
    4680:	00000100 	andeq	r0, r0, r0, lsl #2
    4684:	00000000 	andeq	r0, r0, r0
    4688:	00030000 	andeq	r0, r3, r0
    468c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4690:	00000000 	andeq	r0, r0, r0
    4694:	01000000 	mrseq	r0, (UNDEF: 0)
    4698:	00005300 	andeq	r5, r0, r0, lsl #6
    469c:	00000000 	andeq	r0, r0, r0
    46a0:	00030000 	andeq	r0, r3, r0
    46a4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    46b0:	00000001 	andeq	r0, r0, r1
    46b4:	00000000 	andeq	r0, r0, r0
    46b8:	53000100 	movwpl	r0, #256	; 0x100
	...
    46c4:	01000001 	tsteq	r0, r1
	...
    46d0:	14720003 	ldrbtne	r0, [r2], #-3
    46d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    46d8:	00000000 	andeq	r0, r0, r0
    46dc:	52000100 	andpl	r0, r0, #0, 2
	...
    46e8:	00000101 	andeq	r0, r0, r1, lsl #2
    46ec:	00000000 	andeq	r0, r0, r0
    46f0:	00010000 	andeq	r0, r1, r0
    46f4:	00000053 	andeq	r0, r0, r3, asr r0
    46f8:	00000000 	andeq	r0, r0, r0
    46fc:	00010000 	andeq	r0, r1, r0
    4700:	00000000 	andeq	r0, r0, r0
    4704:	01000000 	mrseq	r0, (UNDEF: 0)
    4708:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4718:	00020000 	andeq	r0, r2, r0
    471c:	0000007d 	andeq	r0, r0, sp, ror r0
    4720:	00000000 	andeq	r0, r0, r0
    4724:	00020000 	andeq	r0, r2, r0
    4728:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4748:	00010000 	andeq	r0, r1, r0
    474c:	00000050 	andeq	r0, r0, r0, asr r0
    4750:	00000000 	andeq	r0, r0, r0
    4754:	f3000400 	vshl.u8	d0, d0, d0
    4758:	009f5001 	addseq	r5, pc, r1
    475c:	00000000 	andeq	r0, r0, r0
    4760:	01000000 	mrseq	r0, (UNDEF: 0)
    4764:	00005000 	andeq	r5, r0, r0
    4768:	00000000 	andeq	r0, r0, r0
    476c:	00040000 	andeq	r0, r4, r0
    4770:	9f5001f3 	svcls	0x005001f3
	...
    477c:	00500001 	subseq	r0, r0, r1
    4780:	00000000 	andeq	r0, r0, r0
    4784:	04000000 	streq	r0, [r0], #-0
    4788:	5001f300 	andpl	pc, r1, r0, lsl #6
    478c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4790:	00000000 	andeq	r0, r0, r0
    4794:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    47a0:	01f30004 	mvnseq	r0, r4
    47a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    47c0:	00510001 	subseq	r0, r1, r1
    47c4:	00000000 	andeq	r0, r0, r0
    47c8:	04000000 	streq	r0, [r0], #-0
    47cc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    47d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    47d4:	00000000 	andeq	r0, r0, r0
    47d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    47e4:	01f30004 	mvnseq	r0, r4
    47e8:	00009f51 	andeq	r9, r0, r1, asr pc
    47ec:	00000000 	andeq	r0, r0, r0
    47f0:	00010000 	andeq	r0, r1, r0
    47f4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    480c:	01000000 	mrseq	r0, (UNDEF: 0)
    4810:	00005200 	andeq	r5, r0, r0, lsl #4
    4814:	00000000 	andeq	r0, r0, r0
    4818:	00040000 	andeq	r0, r4, r0
    481c:	9f5201f3 	svcls	0x005201f3
	...
    4828:	00520001 	subseq	r0, r2, r1
    482c:	00000000 	andeq	r0, r0, r0
    4830:	04000000 	streq	r0, [r0], #-0
    4834:	5201f300 	andpl	pc, r1, #0, 6
    4838:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    483c:	00000000 	andeq	r0, r0, r0
    4840:	52000100 	andpl	r0, r0, #0, 2
	...
    4864:	00500001 	subseq	r0, r0, r1
    4868:	00000000 	andeq	r0, r0, r0
    486c:	04000000 	streq	r0, [r0], #-0
    4870:	5001f300 	andpl	pc, r1, r0, lsl #6
    4874:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4878:	00000000 	andeq	r0, r0, r0
    487c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4888:	01f30004 	mvnseq	r0, r4
    488c:	00009f50 	andeq	r9, r0, r0, asr pc
    4890:	00000000 	andeq	r0, r0, r0
    4894:	00010000 	andeq	r0, r1, r0
    4898:	00000050 	andeq	r0, r0, r0, asr r0
    489c:	00000000 	andeq	r0, r0, r0
    48a0:	f3000400 	vshl.u8	d0, d0, d0
    48a4:	009f5001 	addseq	r5, pc, r1
    48a8:	00000000 	andeq	r0, r0, r0
    48ac:	01000000 	mrseq	r0, (UNDEF: 0)
    48b0:	00005000 	andeq	r5, r0, r0
    48b4:	00000000 	andeq	r0, r0, r0
    48b8:	00040000 	andeq	r0, r4, r0
    48bc:	9f5001f3 	svcls	0x005001f3
	...
    48d8:	00510001 	subseq	r0, r1, r1
    48dc:	00000000 	andeq	r0, r0, r0
    48e0:	02000000 	andeq	r0, r0, #0
    48e4:	00207000 	eoreq	r7, r0, r0
    48e8:	00000000 	andeq	r0, r0, r0
    48ec:	04000000 	streq	r0, [r0], #-0
    48f0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    48f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    48f8:	00000000 	andeq	r0, r0, r0
    48fc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4918:	00520001 	subseq	r0, r2, r1
    491c:	00000000 	andeq	r0, r0, r0
    4920:	02000000 	andeq	r0, r0, #0
    4924:	00247000 	eoreq	r7, r4, r0
    4928:	00000000 	andeq	r0, r0, r0
    492c:	04000000 	streq	r0, [r0], #-0
    4930:	5201f300 	andpl	pc, r1, #0, 6
    4934:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4938:	00000000 	andeq	r0, r0, r0
    493c:	52000100 	andpl	r0, r0, #0, 2
	...
    4950:	007d0002 	rsbseq	r0, sp, r2
	...
    495c:	187d0002 	ldmdane	sp!, {r1}^
	...
    4968:	207d0002 	rsbscs	r0, sp, r2
	...
    4974:	187d0002 	ldmdane	sp!, {r1}^
	...
    4980:	207d0002 	rsbscs	r0, sp, r2
	...
    49a4:	00500001 	subseq	r0, r0, r1
    49a8:	00000000 	andeq	r0, r0, r0
    49ac:	01000000 	mrseq	r0, (UNDEF: 0)
    49b0:	00005400 	andeq	r5, r0, r0, lsl #8
    49b4:	00000000 	andeq	r0, r0, r0
    49b8:	00010000 	andeq	r0, r1, r0
    49bc:	00000050 	andeq	r0, r0, r0, asr r0
    49c0:	00000000 	andeq	r0, r0, r0
    49c4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    49d0:	00500001 	subseq	r0, r0, r1
    49d4:	00000000 	andeq	r0, r0, r0
    49d8:	04000000 	streq	r0, [r0], #-0
    49dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    49e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49e4:	00000000 	andeq	r0, r0, r0
    49e8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    49f4:	00540001 	subseq	r0, r4, r1
	...
    4a14:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4a20:	00550001 	subseq	r0, r5, r1
    4a24:	00000000 	andeq	r0, r0, r0
    4a28:	01000000 	mrseq	r0, (UNDEF: 0)
    4a2c:	00005800 	andeq	r5, r0, r0, lsl #16
    4a30:	00000000 	andeq	r0, r0, r0
    4a34:	00040000 	andeq	r0, r4, r0
    4a38:	9f5101f3 	svcls	0x005101f3
	...
    4a44:	00510001 	subseq	r0, r1, r1
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	04000000 	streq	r0, [r0], #-0
    4a50:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4a54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a58:	00000000 	andeq	r0, r0, r0
    4a5c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4a78:	00010000 	andeq	r0, r1, r0
    4a7c:	00000052 	andeq	r0, r0, r2, asr r0
    4a80:	00000000 	andeq	r0, r0, r0
    4a84:	f3000400 	vshl.u8	d0, d0, d0
    4a88:	009f5201 	addseq	r5, pc, r1, lsl #4
    4a8c:	00000000 	andeq	r0, r0, r0
    4a90:	01000000 	mrseq	r0, (UNDEF: 0)
    4a94:	00005200 	andeq	r5, r0, r0, lsl #4
    4a98:	00000000 	andeq	r0, r0, r0
    4a9c:	00040000 	andeq	r0, r4, r0
    4aa0:	9f5201f3 	svcls	0x005201f3
	...
    4aac:	00520001 	subseq	r0, r2, r1
	...
    4ac0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ac4:	00005300 	andeq	r5, r0, r0, lsl #6
    4ac8:	00000000 	andeq	r0, r0, r0
    4acc:	00010000 	andeq	r0, r1, r0
    4ad0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4ae0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ae4:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    4af0:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    4afc:	00580001 	subseq	r0, r8, r1
    4b00:	00000000 	andeq	r0, r0, r0
    4b04:	03000000 	movweq	r0, #0
    4b08:	9f7e7800 	svcls	0x007e7800
	...
    4b14:	00580001 	subseq	r0, r8, r1
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	03000000 	movweq	r0, #0
	...
    4b30:	30000200 	andcc	r0, r0, r0, lsl #4
    4b34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b38:	00000000 	andeq	r0, r0, r0
    4b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4b48:	00570001 	subseq	r0, r7, r1
    4b4c:	00000000 	andeq	r0, r0, r0
    4b50:	02000000 	andeq	r0, r0, #0
    4b54:	009f3000 	addseq	r3, pc, r0
    4b58:	00000000 	andeq	r0, r0, r0
    4b5c:	02000000 	andeq	r0, r0, #0
    4b60:	009f3000 	addseq	r3, pc, r0
    4b64:	00000000 	andeq	r0, r0, r0
    4b68:	60000000 	andvs	r0, r0, r0
    4b6c:	6408000c 	strvs	r0, [r8], #-12
    4b70:	0208000c 	andeq	r0, r8, #12
    4b74:	64007d00 	strvs	r7, [r0], #-3328	; 0xfffff300
    4b78:	6608000c 	strvs	r0, [r8], -ip
    4b7c:	0208000c 	andeq	r0, r8, #12
    4b80:	66187d00 	ldrvs	r7, [r8], -r0, lsl #26
    4b84:	2408000c 	strcs	r0, [r8], #-12
    4b88:	0208000d 	andeq	r0, r8, #13
    4b8c:	24207d00 	strtcs	r7, [r0], #-3328	; 0xfffff300
    4b90:	2808000d 	stmdacs	r8, {r0, r2, r3}
    4b94:	0208000d 	andeq	r0, r8, #13
    4b98:	28187d00 	ldmdacs	r8, {r8, sl, fp, ip, sp, lr}
    4b9c:	2c08000d 	stccs	0, cr0, [r8], {13}
    4ba0:	0208000d 	andeq	r0, r8, #13
    4ba4:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    4bbc:	60000000 	andvs	r0, r0, r0
    4bc0:	8008000c 	andhi	r0, r8, ip
    4bc4:	0108000c 	tsteq	r8, ip
    4bc8:	0c805000 	stceq	0, cr5, [r0], {0}
    4bcc:	0c820800 	stceq	8, cr0, [r2], {0}
    4bd0:	00010800 	andeq	r0, r1, r0, lsl #16
    4bd4:	000c8254 	andeq	r8, ip, r4, asr r2
    4bd8:	000c8f08 	andeq	r8, ip, r8, lsl #30
    4bdc:	50000108 	andpl	r0, r0, r8, lsl #2
    4be0:	08000c8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, sl, fp}
    4be4:	08000d20 	stmdaeq	r0, {r5, r8, sl, fp}
    4be8:	20540001 	subscs	r0, r4, r1
    4bec:	2208000d 	andcs	r0, r8, #13
    4bf0:	0108000d 	tsteq	r8, sp
    4bf4:	0d225000 	stceq	0, cr5, [r2, #-0]
    4bf8:	0d280800 	stceq	8, cr0, [r8, #-0]
    4bfc:	00040800 	andeq	r0, r4, r0, lsl #16
    4c00:	9f5001f3 	svcls	0x005001f3
    4c04:	08000d28 	stmdaeq	r0, {r3, r5, r8, sl, fp}
    4c08:	08000d2a 	stmdaeq	r0, {r1, r3, r5, r8, sl, fp}
    4c0c:	2a500001 	bcs	1404c18 <_Min_Heap_Size+0x1404418>
    4c10:	2c08000d 	stccs	0, cr0, [r8], {13}
    4c14:	0108000d 	tsteq	r8, sp
    4c18:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4c34:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
    4c38:	08000c8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, sl, fp}
    4c3c:	8f510001 	svchi	0x00510001
    4c40:	b208000c 	andlt	r0, r8, #12
    4c44:	0108000c 	tsteq	r8, ip
    4c48:	0cb25500 	cfldr32eq	mvfx5, [r2]
    4c4c:	0cf80800 	ldcleq	8, cr0, [r8]
    4c50:	00040800 	andeq	r0, r4, r0, lsl #16
    4c54:	9f5101f3 	svcls	0x005101f3
    4c58:	08000cf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, fp}
    4c5c:	08000cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp}
    4c60:	fc550001 	mrrc2	0, 0, r0, r5, cr1
    4c64:	fe08000c 	cdp2	0, 0, cr0, cr8, cr12, {0}
    4c68:	0108000c 	tsteq	r8, ip
    4c6c:	0cfe5800 	ldcleq	8, cr5, [lr]
    4c70:	0d200800 	stceq	8, cr0, [r0, #-0]
    4c74:	00040800 	andeq	r0, r4, r0, lsl #16
    4c78:	9f5101f3 	svcls	0x005101f3
    4c7c:	08000d20 	stmdaeq	r0, {r5, r8, sl, fp}
    4c80:	08000d22 	stmdaeq	r0, {r1, r5, r8, sl, fp}
    4c84:	22510001 	subscs	r0, r1, #1
    4c88:	2808000d 	stmdacs	r8, {r0, r2, r3}
    4c8c:	0408000d 	streq	r0, [r8], #-13
    4c90:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4c94:	000d289f 	muleq	sp, pc, r8	; <UNPREDICTABLE>
    4c98:	000d2c08 	andeq	r2, sp, r8, lsl #24
    4c9c:	51000108 	tstpl	r0, r8, lsl #2
	...
    4cb0:	0c600000 	stcleq	0, cr0, [r0], #-0
    4cb4:	0c8f0800 	stceq	8, cr0, [pc], {0}
    4cb8:	00010800 	andeq	r0, r1, r0, lsl #16
    4cbc:	000c8f52 	andeq	r8, ip, r2, asr pc
    4cc0:	000d2008 	andeq	r2, sp, r8
    4cc4:	f3000408 	vshl.u8	d0, d8, d0
    4cc8:	209f5201 	addscs	r5, pc, r1, lsl #4
    4ccc:	2208000d 	andcs	r0, r8, #13
    4cd0:	0108000d 	tsteq	r8, sp
    4cd4:	0d225200 	sfmeq	f5, 4, [r2, #-0]
    4cd8:	0d280800 	stceq	8, cr0, [r8, #-0]
    4cdc:	00040800 	andeq	r0, r4, r0, lsl #16
    4ce0:	9f5201f3 	svcls	0x005201f3
    4ce4:	08000d28 	stmdaeq	r0, {r3, r5, r8, sl, fp}
    4ce8:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
    4cec:	00520001 	subseq	r0, r2, r1
	...
    4cf8:	60000000 	andvs	r0, r0, r0
    4cfc:	6c08000c 	stcvs	0, cr0, [r8], {12}
    4d00:	0108000c 	tsteq	r8, ip
    4d04:	0c6c5300 	stcleq	3, cr5, [ip], #-0
    4d08:	0d2c0800 	stceq	8, cr0, [ip, #-0]
    4d0c:	00010800 	andeq	r0, r1, r0, lsl #16
    4d10:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4d1c:	00000101 	andeq	r0, r0, r1, lsl #2
    4d20:	000cb200 	andeq	fp, ip, r0, lsl #4
    4d24:	000cf208 	andeq	pc, ip, r8, lsl #4
    4d28:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    4d2c:	08000cf2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sl, fp}
    4d30:	08000cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp}
    4d34:	7f750003 	svcvc	0x00750003
    4d38:	000cf69f 	muleq	ip, pc, r6	; <UNPREDICTABLE>
    4d3c:	000cf808 	andeq	pc, ip, r8, lsl #16
    4d40:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    4d44:	08000cfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, fp}
    4d48:	08000d20 	stmdaeq	r0, {r5, r8, sl, fp}
    4d4c:	00550001 	subseq	r0, r5, r1
	...
    4d58:	01010000 	mrseq	r0, (UNDEF: 1)
    4d5c:	b2000000 	andlt	r0, r0, #0
    4d60:	c008000c 	andgt	r0, r8, ip
    4d64:	0108000c 	tsteq	r8, ip
    4d68:	0cc05800 	stcleq	8, cr5, [r0], {0}
    4d6c:	0cc80800 	stcleq	8, cr0, [r8], {0}
    4d70:	00030800 	andeq	r0, r3, r0, lsl #16
    4d74:	c89f7e78 	ldmgt	pc, {r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    4d78:	f808000c 			; <UNDEFINED> instruction: 0xf808000c
    4d7c:	0108000c 	tsteq	r8, ip
    4d80:	0cfe5800 	ldcleq	8, cr5, [lr]
    4d84:	0d200800 	stceq	8, cr0, [r0, #-0]
    4d88:	00010800 	andeq	r0, r1, r0, lsl #16
    4d8c:	00000058 	andeq	r0, r0, r8, asr r0
    4d90:	00000000 	andeq	r0, r0, r0
    4d94:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4da0:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    4da4:	9208000c 	andls	r0, r8, #12
    4da8:	0208000c 	andeq	r0, r8, #12
    4dac:	929f3000 	addsls	r3, pc, #0
    4db0:	b208000c 	andlt	r0, r8, #12
    4db4:	0108000c 	tsteq	r8, ip
    4db8:	0cb25000 	ldceq	0, cr5, [r2]
    4dbc:	0cf80800 	ldcleq	8, cr0, [r8]
    4dc0:	00010800 	andeq	r0, r1, r0, lsl #16
    4dc4:	000cf857 	andeq	pc, ip, r7, asr r8	; <UNPREDICTABLE>
    4dc8:	000cfe08 	andeq	pc, ip, r8, lsl #28
    4dcc:	50000108 	andpl	r0, r0, r8, lsl #2
    4dd0:	08000cfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, fp}
    4dd4:	08000d20 	stmdaeq	r0, {r5, r8, sl, fp}
    4dd8:	20570001 	subscs	r0, r7, r1
    4ddc:	2208000d 	andcs	r0, r8, #13
    4de0:	0208000d 	andeq	r0, r8, #13
    4de4:	289f3000 	ldmcs	pc, {ip, sp}	; <UNPREDICTABLE>
    4de8:	2c08000d 	stccs	0, cr0, [r8], {13}
    4dec:	0208000d 	andeq	r0, r8, #13
    4df0:	009f3000 	addseq	r3, pc, r0
	...
    4e00:	02000000 	andeq	r0, r0, #0
    4e04:	00007d00 	andeq	r7, r0, r0, lsl #26
    4e08:	00000000 	andeq	r0, r0, r0
    4e0c:	02000000 	andeq	r0, r0, #0
    4e10:	00087d00 	andeq	r7, r8, r0, lsl #26
    4e14:	00000000 	andeq	r0, r0, r0
    4e18:	02000000 	andeq	r0, r0, #0
    4e1c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    4e34:	01000000 	mrseq	r0, (UNDEF: 0)
    4e38:	00005000 	andeq	r5, r0, r0
    4e3c:	00000000 	andeq	r0, r0, r0
    4e40:	00010000 	andeq	r0, r1, r0
    4e44:	00000054 	andeq	r0, r0, r4, asr r0
    4e48:	00000000 	andeq	r0, r0, r0
    4e4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4e58:	01f30004 	mvnseq	r0, r4
    4e5c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4e6c:	00020000 	andeq	r0, r2, r0
    4e70:	0000007d 	andeq	r0, r0, sp, ror r0
    4e74:	00000000 	andeq	r0, r0, r0
    4e78:	00020000 	andeq	r0, r2, r0
    4e7c:	0000107d 	andeq	r1, r0, sp, ror r0
    4e80:	00000000 	andeq	r0, r0, r0
    4e84:	00020000 	andeq	r0, r2, r0
    4e88:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    4ea0:	00010000 	andeq	r0, r1, r0
    4ea4:	00000050 	andeq	r0, r0, r0, asr r0
    4ea8:	00000000 	andeq	r0, r0, r0
    4eac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4eb8:	00500001 	subseq	r0, r0, r1
    4ebc:	00000000 	andeq	r0, r0, r0
    4ec0:	04000000 	streq	r0, [r0], #-0
    4ec4:	5001f300 	andpl	pc, r1, r0, lsl #6
    4ec8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4edc:	01000000 	mrseq	r0, (UNDEF: 0)
    4ee0:	00005100 	andeq	r5, r0, r0, lsl #2
    4ee4:	00000000 	andeq	r0, r0, r0
    4ee8:	00040000 	andeq	r0, r4, r0
    4eec:	9f5101f3 	svcls	0x005101f3
	...
    4ef8:	00510001 	subseq	r0, r1, r1
	...
    4f14:	52000100 	andpl	r0, r0, #0, 2
	...
    4f20:	00560001 	subseq	r0, r6, r1
    4f24:	00000000 	andeq	r0, r0, r0
    4f28:	04000000 	streq	r0, [r0], #-0
    4f2c:	5201f300 	andpl	pc, r1, #0, 6
    4f30:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4f34:	00000000 	andeq	r0, r0, r0
    4f38:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    4f44:	00520001 	subseq	r0, r2, r1
	...
    4f54:	02000000 	andeq	r0, r0, #0
    4f58:	00007d00 	andeq	r7, r0, r0, lsl #26
    4f5c:	00000000 	andeq	r0, r0, r0
    4f60:	02000000 	andeq	r0, r0, #0
    4f64:	00107d00 	andseq	r7, r0, r0, lsl #26
    4f68:	00000000 	andeq	r0, r0, r0
    4f6c:	02000000 	andeq	r0, r0, #0
    4f70:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    4f88:	01000000 	mrseq	r0, (UNDEF: 0)
    4f8c:	00005000 	andeq	r5, r0, r0
    4f90:	00000000 	andeq	r0, r0, r0
    4f94:	00010000 	andeq	r0, r1, r0
    4f98:	00000054 	andeq	r0, r0, r4, asr r0
    4f9c:	00000000 	andeq	r0, r0, r0
    4fa0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4fac:	01f30004 	mvnseq	r0, r4
    4fb0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4fcc:	00510001 	subseq	r0, r1, r1
    4fd0:	00000000 	andeq	r0, r0, r0
    4fd4:	01000000 	mrseq	r0, (UNDEF: 0)
    4fd8:	00005500 	andeq	r5, r0, r0, lsl #10
    4fdc:	00000000 	andeq	r0, r0, r0
    4fe0:	00040000 	andeq	r0, r4, r0
    4fe4:	9f5101f3 	svcls	0x005101f3
	...
    4ff0:	00550001 	subseq	r0, r5, r1
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	01000000 	mrseq	r0, (UNDEF: 0)
    4ffc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    500c:	00020000 	andeq	r0, r2, r0
    5010:	0000007d 	andeq	r0, r0, sp, ror r0
    5014:	00000000 	andeq	r0, r0, r0
    5018:	00020000 	andeq	r0, r2, r0
    501c:	0000087d 	andeq	r0, r0, sp, ror r8
    5020:	00000000 	andeq	r0, r0, r0
    5024:	00020000 	andeq	r0, r2, r0
    5028:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    5040:	00010000 	andeq	r0, r1, r0
    5044:	00000050 	andeq	r0, r0, r0, asr r0
    5048:	00000000 	andeq	r0, r0, r0
    504c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5058:	00500001 	subseq	r0, r0, r1
    505c:	00000000 	andeq	r0, r0, r0
    5060:	04000000 	streq	r0, [r0], #-0
    5064:	5001f300 	andpl	pc, r1, r0, lsl #6
    5068:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    506c:	00000000 	andeq	r0, r0, r0
    5070:	000b3400 	andeq	r3, fp, r0, lsl #8
    5074:	000b3c08 	andeq	r3, fp, r8, lsl #24
    5078:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    507c:	000b3c00 	andeq	r3, fp, r0, lsl #24
    5080:	000c5208 	andeq	r5, ip, r8, lsl #4
    5084:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    5088:	000c5208 	andeq	r5, ip, r8, lsl #4
    508c:	000c6008 	andeq	r6, ip, r8
    5090:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
    50a8:	000b3400 	andeq	r3, fp, r0, lsl #8
    50ac:	000b6a08 	andeq	r6, fp, r8, lsl #20
    50b0:	50000108 	andpl	r0, r0, r8, lsl #2
    50b4:	08000b6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, fp}
    50b8:	08000bf2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, fp}
    50bc:	f2540001 	vhadd.s16	d16, d4, d1
    50c0:	2808000b 	stmdacs	r8, {r0, r1, r3}
    50c4:	0108000c 	tsteq	r8, ip
    50c8:	0c285000 	stceq	0, cr5, [r8], #-0
    50cc:	0c520800 	mrrceq	8, 0, r0, r2, cr0
    50d0:	00010800 	andeq	r0, r1, r0, lsl #16
    50d4:	000c5254 	andeq	r5, ip, r4, asr r2
    50d8:	000c5408 	andeq	r5, ip, r8, lsl #8
    50dc:	50000108 	andpl	r0, r0, r8, lsl #2
    50e0:	08000c54 	stmdaeq	r0, {r2, r4, r6, sl, fp}
    50e4:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
    50e8:	01f30004 	mvnseq	r0, r4
    50ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    50fc:	00020000 	andeq	r0, r2, r0
    5100:	0000007d 	andeq	r0, r0, sp, ror r0
    5104:	00000000 	andeq	r0, r0, r0
    5108:	00020000 	andeq	r0, r2, r0
    510c:	0000087d 	andeq	r0, r0, sp, ror r8
    5110:	00000000 	andeq	r0, r0, r0
    5114:	10f80000 	rscsne	r0, r8, r0
    5118:	10fa0800 	rscsne	r0, sl, r0, lsl #16
    511c:	00020800 	andeq	r0, r2, r0, lsl #16
    5120:	10fa007d 	rscsne	r0, sl, sp, ror r0
    5124:	11180800 	tstne	r8, r0, lsl #16
    5128:	00020800 	andeq	r0, r2, r0, lsl #16
    512c:	0000087d 	andeq	r0, r0, sp, ror r8
    5130:	00000000 	andeq	r0, r0, r0
    5134:	10d80000 	sbcsne	r0, r8, r0
    5138:	10da0800 	sbcsne	r0, sl, r0, lsl #16
    513c:	00020800 	andeq	r0, r2, r0, lsl #16
    5140:	10da007d 	sbcsne	r0, sl, sp, ror r0
    5144:	10f80800 	rscsne	r0, r8, r0, lsl #16
    5148:	00020800 	andeq	r0, r2, r0, lsl #16
    514c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    515c:	00020000 	andeq	r0, r2, r0
    5160:	0000007d 	andeq	r0, r0, sp, ror r0
    5164:	00000000 	andeq	r0, r0, r0
    5168:	00020000 	andeq	r0, r2, r0
    516c:	0000087d 	andeq	r0, r0, sp, ror r8
    5170:	00000000 	andeq	r0, r0, r0
    5174:	00010000 	andeq	r0, r1, r0
    5178:	00000000 	andeq	r0, r0, r0
    517c:	00000100 	andeq	r0, r0, r0, lsl #2
    5180:	00000000 	andeq	r0, r0, r0
    5184:	00020000 	andeq	r0, r2, r0
    5188:	00009f30 	andeq	r9, r0, r0, lsr pc
    518c:	00000000 	andeq	r0, r0, r0
    5190:	00010000 	andeq	r0, r1, r0
    5194:	00000052 	andeq	r0, r0, r2, asr r0
    5198:	00000000 	andeq	r0, r0, r0
    519c:	52000100 	andpl	r0, r0, #0, 2
	...
    51a8:	9f300002 	svcls	0x00300002
	...
    51b4:	00000001 	andeq	r0, r0, r1
    51b8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    51c4:	9f300002 	svcls	0x00300002
	...
    51d0:	00500001 	subseq	r0, r0, r1
    51d4:	00000000 	andeq	r0, r0, r0
    51d8:	02000000 	andeq	r0, r0, #0
    51dc:	009f3000 	addseq	r3, pc, r0
    51e0:	00000000 	andeq	r0, r0, r0
    51e4:	02000000 	andeq	r0, r0, #0
    51e8:	009f3000 	addseq	r3, pc, r0
    51ec:	00000000 	andeq	r0, r0, r0
    51f0:	01000000 	mrseq	r0, (UNDEF: 0)
    51f4:	00000000 	andeq	r0, r0, r0
    51f8:	00000001 	andeq	r0, r0, r1
    51fc:	00000000 	andeq	r0, r0, r0
    5200:	30000200 	andcc	r0, r0, r0, lsl #4
    5204:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5208:	00000000 	andeq	r0, r0, r0
    520c:	53000100 	movwpl	r0, #256	; 0x100
	...
    5218:	9f300002 	svcls	0x00300002
	...
    5224:	00000002 	andeq	r0, r0, r2
    5228:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5234:	9f300002 	svcls	0x00300002
	...
    5240:	00500001 	subseq	r0, r0, r1
    5244:	00000000 	andeq	r0, r0, r0
    5248:	02000000 	andeq	r0, r0, #0
    524c:	009f3000 	addseq	r3, pc, r0
    5250:	00000000 	andeq	r0, r0, r0
    5254:	06000000 	streq	r0, [r0], -r0
    5258:	24000c00 	strcs	r0, [r0], #-3072	; 0xfffff400
    525c:	009f00f4 	ldrsheq	r0, [pc], r4
	...
    526c:	02000000 	andeq	r0, r0, #0
    5270:	00007d00 	andeq	r7, r0, r0, lsl #26
    5274:	00000000 	andeq	r0, r0, r0
    5278:	02000000 	andeq	r0, r0, #0
    527c:	00107d00 	andseq	r7, r0, r0, lsl #26
    5280:	00000000 	andeq	r0, r0, r0
    5284:	02000000 	andeq	r0, r0, #0
    5288:	00307d00 	eorseq	r7, r0, r0, lsl #26
    528c:	00000000 	andeq	r0, r0, r0
    5290:	02000000 	andeq	r0, r0, #0
    5294:	00107d00 	andseq	r7, r0, r0, lsl #26
    5298:	00000000 	andeq	r0, r0, r0
    529c:	02000000 	andeq	r0, r0, #0
    52a0:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    52c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    52cc:	00560001 	subseq	r0, r6, r1
    52d0:	00000000 	andeq	r0, r0, r0
    52d4:	04000000 	streq	r0, [r0], #-0
    52d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    52dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    52e0:	00000000 	andeq	r0, r0, r0
    52e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    52f0:	00560001 	subseq	r0, r6, r1
    52f4:	00000000 	andeq	r0, r0, r0
    52f8:	04000000 	streq	r0, [r0], #-0
    52fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    5300:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5304:	00000000 	andeq	r0, r0, r0
    5308:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5324:	00510001 	subseq	r0, r1, r1
    5328:	00000000 	andeq	r0, r0, r0
    532c:	01000000 	mrseq	r0, (UNDEF: 0)
    5330:	00005500 	andeq	r5, r0, r0, lsl #10
    5334:	00000000 	andeq	r0, r0, r0
    5338:	00010000 	andeq	r0, r1, r0
    533c:	00000051 	andeq	r0, r0, r1, asr r0
    5340:	00000000 	andeq	r0, r0, r0
    5344:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5364:	00010000 	andeq	r0, r1, r0
    5368:	00000052 	andeq	r0, r0, r2, asr r0
    536c:	00000000 	andeq	r0, r0, r0
    5370:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    537c:	01f30004 	mvnseq	r0, r4
    5380:	00009f52 	andeq	r9, r0, r2, asr pc
    5384:	00000000 	andeq	r0, r0, r0
    5388:	00010000 	andeq	r0, r1, r0
    538c:	00000052 	andeq	r0, r0, r2, asr r0
    5390:	00000000 	andeq	r0, r0, r0
    5394:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    53a0:	01f30004 	mvnseq	r0, r4
    53a4:	00009f52 	andeq	r9, r0, r2, asr pc
    53a8:	00000000 	andeq	r0, r0, r0
    53ac:	00010000 	andeq	r0, r1, r0
    53b0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    53c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    53cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    53d0:	00000010 	andeq	r0, r0, r0, lsl r0
    53d4:	00000000 	andeq	r0, r0, r0
    53d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    53e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    53e8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5404:	01000000 	mrseq	r0, (UNDEF: 0)
    5408:	00005000 	andeq	r5, r0, r0
    540c:	00000000 	andeq	r0, r0, r0
    5410:	00010000 	andeq	r0, r1, r0
    5414:	00000054 	andeq	r0, r0, r4, asr r0
    5418:	00000000 	andeq	r0, r0, r0
    541c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5428:	00540001 	subseq	r0, r4, r1
    542c:	00000000 	andeq	r0, r0, r0
    5430:	01000000 	mrseq	r0, (UNDEF: 0)
    5434:	00005000 	andeq	r5, r0, r0
    5438:	00000000 	andeq	r0, r0, r0
    543c:	00040000 	andeq	r0, r4, r0
    5440:	9f5001f3 	svcls	0x005001f3
	...
    544c:	00540001 	subseq	r0, r4, r1
	...
    5468:	01000000 	mrseq	r0, (UNDEF: 0)
    546c:	00005100 	andeq	r5, r0, r0, lsl #2
    5470:	00000000 	andeq	r0, r0, r0
    5474:	00010000 	andeq	r0, r1, r0
    5478:	00000055 	andeq	r0, r0, r5, asr r0
    547c:	00000000 	andeq	r0, r0, r0
    5480:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    548c:	00550001 	subseq	r0, r5, r1
    5490:	00000000 	andeq	r0, r0, r0
    5494:	01000000 	mrseq	r0, (UNDEF: 0)
    5498:	00005100 	andeq	r5, r0, r0, lsl #2
    549c:	00000000 	andeq	r0, r0, r0
    54a0:	00010000 	andeq	r0, r1, r0
    54a4:	00000055 	andeq	r0, r0, r5, asr r0
    54a8:	00000000 	andeq	r0, r0, r0
    54ac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    54b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    54c4:	00560001 	subseq	r0, r6, r1
	...
    54d4:	02000000 	andeq	r0, r0, #0
    54d8:	00007d00 	andeq	r7, r0, r0, lsl #26
    54dc:	00000000 	andeq	r0, r0, r0
    54e0:	02000000 	andeq	r0, r0, #0
    54e4:	00107d00 	andseq	r7, r0, r0, lsl #26
    54e8:	00000000 	andeq	r0, r0, r0
    54ec:	02000000 	andeq	r0, r0, #0
    54f0:	00187d00 	andseq	r7, r8, r0, lsl #26
    54f4:	00000000 	andeq	r0, r0, r0
    54f8:	02000000 	andeq	r0, r0, #0
    54fc:	00007d00 	andeq	r7, r0, r0, lsl #26
    5500:	00000000 	andeq	r0, r0, r0
    5504:	02000000 	andeq	r0, r0, #0
    5508:	00187d00 	andseq	r7, r8, r0, lsl #26
    550c:	00000000 	andeq	r0, r0, r0
    5510:	02000000 	andeq	r0, r0, #0
    5514:	00107d00 	andseq	r7, r0, r0, lsl #26
    5518:	00000000 	andeq	r0, r0, r0
    551c:	02000000 	andeq	r0, r0, #0
    5520:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    554c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5558:	00540001 	subseq	r0, r4, r1
    555c:	00000000 	andeq	r0, r0, r0
    5560:	01000000 	mrseq	r0, (UNDEF: 0)
    5564:	00005000 	andeq	r5, r0, r0
    5568:	00000000 	andeq	r0, r0, r0
    556c:	00010000 	andeq	r0, r1, r0
    5570:	00000054 	andeq	r0, r0, r4, asr r0
    5574:	00000000 	andeq	r0, r0, r0
    5578:	f3000400 	vshl.u8	d0, d0, d0
    557c:	009f5001 	addseq	r5, pc, r1
    5580:	00000000 	andeq	r0, r0, r0
    5584:	01000000 	mrseq	r0, (UNDEF: 0)
    5588:	00005400 	andeq	r5, r0, r0, lsl #8
    558c:	00000000 	andeq	r0, r0, r0
    5590:	00040000 	andeq	r0, r4, r0
    5594:	9f5001f3 	svcls	0x005001f3
	...
    55a0:	00540001 	subseq	r0, r4, r1
    55a4:	00000000 	andeq	r0, r0, r0
    55a8:	01000000 	mrseq	r0, (UNDEF: 0)
    55ac:	00005000 	andeq	r5, r0, r0
    55b0:	00000000 	andeq	r0, r0, r0
    55b4:	00040000 	andeq	r0, r4, r0
    55b8:	9f5001f3 	svcls	0x005001f3
	...
    55c4:	00540001 	subseq	r0, r4, r1
    55c8:	00000000 	andeq	r0, r0, r0
    55cc:	04000000 	streq	r0, [r0], #-0
    55d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    55d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    55d8:	00000000 	andeq	r0, r0, r0
    55dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    55e8:	00010100 	andeq	r0, r1, r0, lsl #2
    55ec:	00010100 	andeq	r0, r1, r0, lsl #2
    55f0:	00010100 	andeq	r0, r1, r0, lsl #2
    55f4:	00010100 	andeq	r0, r1, r0, lsl #2
    55f8:	00010100 	andeq	r0, r1, r0, lsl #2
    55fc:	00010100 	andeq	r0, r1, r0, lsl #2
    5600:	00010100 	andeq	r0, r1, r0, lsl #2
    5604:	00010100 	andeq	r0, r1, r0, lsl #2
    5608:	00010100 	andeq	r0, r1, r0, lsl #2
    560c:	00010100 	andeq	r0, r1, r0, lsl #2
    5610:	00000000 	andeq	r0, r0, r0
    5614:	00010100 	andeq	r0, r1, r0, lsl #2
    5618:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    5624:	00500001 	subseq	r0, r0, r1
    5628:	00000000 	andeq	r0, r0, r0
    562c:	01000000 	mrseq	r0, (UNDEF: 0)
    5630:	00005500 	andeq	r5, r0, r0, lsl #10
    5634:	00000000 	andeq	r0, r0, r0
    5638:	00010000 	andeq	r0, r1, r0
    563c:	00000050 	andeq	r0, r0, r0, asr r0
    5640:	00000000 	andeq	r0, r0, r0
    5644:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5650:	00500001 	subseq	r0, r0, r1
    5654:	00000000 	andeq	r0, r0, r0
    5658:	01000000 	mrseq	r0, (UNDEF: 0)
    565c:	00005500 	andeq	r5, r0, r0, lsl #10
    5660:	00000000 	andeq	r0, r0, r0
    5664:	00010000 	andeq	r0, r1, r0
    5668:	00000050 	andeq	r0, r0, r0, asr r0
    566c:	00000000 	andeq	r0, r0, r0
    5670:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    567c:	00500001 	subseq	r0, r0, r1
    5680:	00000000 	andeq	r0, r0, r0
    5684:	01000000 	mrseq	r0, (UNDEF: 0)
    5688:	00005500 	andeq	r5, r0, r0, lsl #10
    568c:	00000000 	andeq	r0, r0, r0
    5690:	00010000 	andeq	r0, r1, r0
    5694:	00000050 	andeq	r0, r0, r0, asr r0
    5698:	00000000 	andeq	r0, r0, r0
    569c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    56a8:	00500001 	subseq	r0, r0, r1
    56ac:	00000000 	andeq	r0, r0, r0
    56b0:	01000000 	mrseq	r0, (UNDEF: 0)
    56b4:	00005600 	andeq	r5, r0, r0, lsl #12
    56b8:	00000000 	andeq	r0, r0, r0
    56bc:	00010000 	andeq	r0, r1, r0
    56c0:	00000050 	andeq	r0, r0, r0, asr r0
    56c4:	00000000 	andeq	r0, r0, r0
    56c8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    56d4:	00500001 	subseq	r0, r0, r1
    56d8:	00000000 	andeq	r0, r0, r0
    56dc:	01000000 	mrseq	r0, (UNDEF: 0)
    56e0:	00005600 	andeq	r5, r0, r0, lsl #12
    56e4:	00000000 	andeq	r0, r0, r0
    56e8:	00010000 	andeq	r0, r1, r0
    56ec:	00000050 	andeq	r0, r0, r0, asr r0
    56f0:	00000000 	andeq	r0, r0, r0
    56f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5700:	00560001 	subseq	r0, r6, r1
    5704:	00000000 	andeq	r0, r0, r0
    5708:	01000000 	mrseq	r0, (UNDEF: 0)
    570c:	00005500 	andeq	r5, r0, r0, lsl #10
    5710:	00000000 	andeq	r0, r0, r0
    5714:	00010000 	andeq	r0, r1, r0
    5718:	00000050 	andeq	r0, r0, r0, asr r0
    571c:	00000000 	andeq	r0, r0, r0
    5720:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    572c:	00500001 	subseq	r0, r0, r1
    5730:	00000000 	andeq	r0, r0, r0
    5734:	01000000 	mrseq	r0, (UNDEF: 0)
    5738:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    574c:	00010000 	andeq	r0, r1, r0
    5750:	00000053 	andeq	r0, r0, r3, asr r0
    5754:	00000000 	andeq	r0, r0, r0
    5758:	53000100 	movwpl	r0, #256	; 0x100
	...
    5764:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    5778:	9f300002 	svcls	0x00300002
	...
    5784:	9f310002 	svcls	0x00310002
	...
    5790:	00550001 	subseq	r0, r5, r1
    5794:	00000000 	andeq	r0, r0, r0
    5798:	02000000 	andeq	r0, r0, #0
    579c:	009f3000 	addseq	r3, pc, r0
    57a0:	00000000 	andeq	r0, r0, r0
    57a4:	01000000 	mrseq	r0, (UNDEF: 0)
    57a8:	00005500 	andeq	r5, r0, r0, lsl #10
    57ac:	00000000 	andeq	r0, r0, r0
    57b0:	00010000 	andeq	r0, r1, r0
    57b4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    57c4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    57d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    57d4:	00000008 	andeq	r0, r0, r8
	...
    57ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    57f8:	01f30004 	mvnseq	r0, r4
    57fc:	00009f50 	andeq	r9, r0, r0, asr pc
    5800:	00000000 	andeq	r0, r0, r0
    5804:	00010000 	andeq	r0, r1, r0
    5808:	00000050 	andeq	r0, r0, r0, asr r0
    580c:	00000000 	andeq	r0, r0, r0
    5810:	f3000400 	vshl.u8	d0, d0, d0
    5814:	009f5001 	addseq	r5, pc, r1
	...
    5824:	02000000 	andeq	r0, r0, #0
    5828:	00007d00 	andeq	r7, r0, r0, lsl #26
    582c:	00000000 	andeq	r0, r0, r0
    5830:	02000000 	andeq	r0, r0, #0
    5834:	000c7d00 	andeq	r7, ip, r0, lsl #26
    5838:	00000000 	andeq	r0, r0, r0
    583c:	02000000 	andeq	r0, r0, #0
    5840:	00187d00 	andseq	r7, r8, r0, lsl #26
    5844:	00000000 	andeq	r0, r0, r0
    5848:	02000000 	andeq	r0, r0, #0
    584c:	000c7d00 	andeq	r7, ip, r0, lsl #26
    5850:	00000000 	andeq	r0, r0, r0
    5854:	02000000 	andeq	r0, r0, #0
    5858:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5870:	01000000 	mrseq	r0, (UNDEF: 0)
    5874:	00005000 	andeq	r5, r0, r0
    5878:	00000000 	andeq	r0, r0, r0
    587c:	00010000 	andeq	r0, r1, r0
    5880:	00000054 	andeq	r0, r0, r4, asr r0
    5884:	00000000 	andeq	r0, r0, r0
    5888:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5894:	00540001 	subseq	r0, r4, r1
	...
    58ac:	01000000 	mrseq	r0, (UNDEF: 0)
    58b0:	00005100 	andeq	r5, r0, r0, lsl #2
    58b4:	00000000 	andeq	r0, r0, r0
    58b8:	00040000 	andeq	r0, r4, r0
    58bc:	9f5101f3 	svcls	0x005101f3
	...
    58c8:	00510001 	subseq	r0, r1, r1
    58cc:	00000000 	andeq	r0, r0, r0
    58d0:	04000000 	streq	r0, [r0], #-0
    58d4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    58d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    58e8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    58f4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    58f8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5910:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    591c:	00550001 	subseq	r0, r5, r1
    5920:	00000000 	andeq	r0, r0, r0
    5924:	01000000 	mrseq	r0, (UNDEF: 0)
    5928:	00005000 	andeq	r5, r0, r0
    592c:	00000000 	andeq	r0, r0, r0
    5930:	00010000 	andeq	r0, r1, r0
    5934:	00000055 	andeq	r0, r0, r5, asr r0
	...
    594c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5958:	01f30004 	mvnseq	r0, r4
    595c:	00009f51 	andeq	r9, r0, r1, asr pc
    5960:	00000000 	andeq	r0, r0, r0
    5964:	00010000 	andeq	r0, r1, r0
    5968:	00000051 	andeq	r0, r0, r1, asr r0
    596c:	00000000 	andeq	r0, r0, r0
    5970:	f3000400 	vshl.u8	d0, d0, d0
    5974:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5988:	53000100 	movwpl	r0, #256	; 0x100
	...
    599c:	007d0002 	rsbseq	r0, sp, r2
	...
    59a8:	107d0002 	rsbsne	r0, sp, r2
	...
    59c4:	00500001 	subseq	r0, r0, r1
    59c8:	00000000 	andeq	r0, r0, r0
    59cc:	01000000 	mrseq	r0, (UNDEF: 0)
    59d0:	00005500 	andeq	r5, r0, r0, lsl #10
    59d4:	00000000 	andeq	r0, r0, r0
    59d8:	00010000 	andeq	r0, r1, r0
    59dc:	00000050 	andeq	r0, r0, r0, asr r0
    59e0:	00000000 	andeq	r0, r0, r0
    59e4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5a00:	00510001 	subseq	r0, r1, r1
    5a04:	00000000 	andeq	r0, r0, r0
    5a08:	04000000 	streq	r0, [r0], #-0
    5a0c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5a10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5a14:	00000000 	andeq	r0, r0, r0
    5a18:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5a24:	01f30004 	mvnseq	r0, r4
    5a28:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5a40:	00010000 	andeq	r0, r1, r0
    5a44:	00000052 	andeq	r0, r0, r2, asr r0
    5a48:	00000000 	andeq	r0, r0, r0
    5a4c:	f3000400 	vshl.u8	d0, d0, d0
    5a50:	009f5201 	addseq	r5, pc, r1, lsl #4
    5a54:	00000000 	andeq	r0, r0, r0
    5a58:	01000000 	mrseq	r0, (UNDEF: 0)
    5a5c:	00005200 	andeq	r5, r0, r0, lsl #4
    5a60:	00000000 	andeq	r0, r0, r0
    5a64:	00040000 	andeq	r0, r4, r0
    5a68:	9f5201f3 	svcls	0x005201f3
	...
    5a7c:	007d0002 	rsbseq	r0, sp, r2
	...
    5a88:	107d0002 	rsbsne	r0, sp, r2
	...
    5aa4:	00500001 	subseq	r0, r0, r1
    5aa8:	00000000 	andeq	r0, r0, r0
    5aac:	01000000 	mrseq	r0, (UNDEF: 0)
    5ab0:	00005400 	andeq	r5, r0, r0, lsl #8
    5ab4:	00000000 	andeq	r0, r0, r0
    5ab8:	00010000 	andeq	r0, r1, r0
    5abc:	00000050 	andeq	r0, r0, r0, asr r0
    5ac0:	00000000 	andeq	r0, r0, r0
    5ac4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5ae0:	00510001 	subseq	r0, r1, r1
    5ae4:	00000000 	andeq	r0, r0, r0
    5ae8:	04000000 	streq	r0, [r0], #-0
    5aec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5af0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5af4:	00000000 	andeq	r0, r0, r0
    5af8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5b04:	01f30004 	mvnseq	r0, r4
    5b08:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5b1c:	00500001 	subseq	r0, r0, r1
	...
    5b2c:	02000000 	andeq	r0, r0, #0
    5b30:	00007d00 	andeq	r7, r0, r0, lsl #26
    5b34:	00000000 	andeq	r0, r0, r0
    5b38:	02000000 	andeq	r0, r0, #0
    5b3c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5b54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5b60:	00540001 	subseq	r0, r4, r1
    5b64:	00000000 	andeq	r0, r0, r0
    5b68:	04000000 	streq	r0, [r0], #-0
    5b6c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5b70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5b84:	01000000 	mrseq	r0, (UNDEF: 0)
    5b88:	00005100 	andeq	r5, r0, r0, lsl #2
    5b8c:	00000000 	andeq	r0, r0, r0
    5b90:	00010000 	andeq	r0, r1, r0
    5b94:	00000055 	andeq	r0, r0, r5, asr r0
    5b98:	00000000 	andeq	r0, r0, r0
    5b9c:	f3000400 	vshl.u8	d0, d0, d0
    5ba0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5bb4:	53000100 	movwpl	r0, #256	; 0x100
	...
    5bc0:	00000002 	andeq	r0, r0, r2
	...
    5bd0:	9f300002 	svcls	0x00300002
	...
    5bdc:	00520001 	subseq	r0, r2, r1
    5be0:	00000000 	andeq	r0, r0, r0
    5be4:	05000000 	streq	r0, [r0, #-0]
    5be8:	00733100 	rsbseq	r3, r3, r0, lsl #2
    5bec:	00009f24 	andeq	r9, r0, r4, lsr #30
    5bf0:	00000000 	andeq	r0, r0, r0
    5bf4:	00010000 	andeq	r0, r1, r0
    5bf8:	00000052 	andeq	r0, r0, r2, asr r0
    5bfc:	00000000 	andeq	r0, r0, r0
    5c00:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    5c10:	02000000 	andeq	r0, r0, #0
    5c14:	009f3000 	addseq	r3, pc, r0
    5c18:	00000000 	andeq	r0, r0, r0
    5c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c20:	00005c00 	andeq	r5, r0, r0, lsl #24
    5c24:	00000000 	andeq	r0, r0, r0
    5c28:	00060000 	andeq	r0, r6, r0
    5c2c:	00750072 	rsbseq	r0, r5, r2, ror r0
    5c30:	00009f1a 	andeq	r9, r0, sl, lsl pc
    5c34:	00000000 	andeq	r0, r0, r0
    5c38:	00080000 	andeq	r0, r8, r0
    5c3c:	24007331 	strcs	r7, [r0], #-817	; 0xfffffccf
    5c40:	9f1a0075 	svcls	0x001a0075
	...
    5c4c:	005c0001 	subseq	r0, ip, r1
    5c50:	00000000 	andeq	r0, r0, r0
    5c54:	04000000 	streq	r0, [r0], #-0
    5c58:	00000000 	andeq	r0, r0, r0
    5c5c:	00000100 	andeq	r0, r0, r0, lsl #2
    5c60:	00000000 	andeq	r0, r0, r0
    5c64:	02000000 	andeq	r0, r0, #0
    5c68:	009f3000 	addseq	r3, pc, r0
    5c6c:	00000000 	andeq	r0, r0, r0
    5c70:	01000000 	mrseq	r0, (UNDEF: 0)
    5c74:	00005000 	andeq	r5, r0, r0
    5c78:	00000000 	andeq	r0, r0, r0
    5c7c:	00010000 	andeq	r0, r1, r0
    5c80:	00000050 	andeq	r0, r0, r0, asr r0
    5c84:	00000000 	andeq	r0, r0, r0
    5c88:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    5c94:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
    5c98:	0800111c 	stmdaeq	r0, {r2, r3, r4, r8, ip}
    5c9c:	007d0002 	rsbseq	r0, sp, r2
    5ca0:	0800111c 	stmdaeq	r0, {r2, r3, r4, r8, ip}
    5ca4:	0800111e 	stmdaeq	r0, {r1, r2, r3, r4, r8, ip}
    5ca8:	187d0002 	ldmdane	sp!, {r1}^
    5cac:	0800111e 	stmdaeq	r0, {r1, r2, r3, r4, r8, ip}
    5cb0:	080013ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, ip}
    5cb4:	207d0002 	rsbscs	r0, sp, r2
    5cb8:	080013ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, ip}
    5cbc:	08001400 	stmdaeq	r0, {sl, ip}
    5cc0:	187d0002 	ldmdane	sp!, {r1}^
	...
    5cd0:	11180000 	tstne	r8, r0
    5cd4:	116c0800 	cmnne	ip, r0, lsl #16
    5cd8:	00010800 	andeq	r0, r1, r0, lsl #16
    5cdc:	00116c50 	andseq	r6, r1, r0, asr ip
    5ce0:	0013f008 	andseq	pc, r3, r8
    5ce4:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    5ce8:	080013f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, ip}
    5cec:	08001400 	stmdaeq	r0, {sl, ip}
    5cf0:	01f30004 	mvnseq	r0, r4
    5cf4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5d04:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
    5d08:	0800116a 	stmdaeq	r0, {r1, r3, r5, r6, r8, ip}
    5d0c:	6a510001 	bvs	1445d18 <_Min_Heap_Size+0x1445518>
    5d10:	f0080011 			; <UNDEFINED> instruction: 0xf0080011
    5d14:	01080013 	tsteq	r8, r3, lsl r0
    5d18:	13f05600 	mvnsne	r5, #0, 12
    5d1c:	14000800 	strne	r0, [r0], #-2048	; 0xfffff800
    5d20:	00040800 	andeq	r0, r4, r0, lsl #16
    5d24:	9f5101f3 	svcls	0x005101f3
	...
    5d30:	11cc0000 	bicne	r0, ip, r0
    5d34:	13f00800 	mvnsne	r0, #0, 16
    5d38:	00010800 	andeq	r0, r1, r0, lsl #16
    5d3c:	00000054 	andeq	r0, r0, r4, asr r0
    5d40:	00000000 	andeq	r0, r0, r0
    5d44:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    5d54:	22000000 	andcs	r0, r0, #0
    5d58:	cc080011 	stcgt	0, cr0, [r8], {17}
    5d5c:	02080011 	andeq	r0, r8, #17
    5d60:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
    5d64:	f2080011 	vqadd.s8	d0, d8, d1
    5d68:	01080011 	tsteq	r8, r1, lsl r0
    5d6c:	11f25500 	mvnsne	r5, r0, lsl #10
    5d70:	11fa0800 	mvnsne	r0, r0, lsl #16
    5d74:	00050800 	andeq	r0, r5, r0, lsl #16
    5d78:	24007431 	strcs	r7, [r0], #-1073	; 0xfffffbcf
    5d7c:	0011fa9f 	mulseq	r1, pc, sl	; <UNPREDICTABLE>
    5d80:	00120408 	andseq	r0, r2, r8, lsl #8
    5d84:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5d88:	08001204 	stmdaeq	r0, {r2, r9, ip}
    5d8c:	080012e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip}
    5d90:	74310005 	ldrtvc	r0, [r1], #-5
    5d94:	f09f2400 			; <UNDEFINED> instruction: 0xf09f2400
    5d98:	0a080012 	beq	205de8 <_Min_Heap_Size+0x2055e8>
    5d9c:	01080013 	tsteq	r8, r3, lsl r0
    5da0:	130a5500 	movwne	r5, #42240	; 0xa500
    5da4:	13d40800 	bicsne	r0, r4, #0, 16
    5da8:	00050800 	andeq	r0, r5, r0, lsl #16
    5dac:	24007431 	strcs	r7, [r0], #-1073	; 0xfffffbcf
    5db0:	0013d49f 	mulseq	r3, pc, r4	; <UNPREDICTABLE>
    5db4:	0013d608 	andseq	sp, r3, r8, lsl #12
    5db8:	73000608 	movwvc	r0, #1544	; 0x608
    5dbc:	24007400 	strcs	r7, [r0], #-1024	; 0xfffffc00
    5dc0:	0013d69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
    5dc4:	0013ea08 	andseq	lr, r3, r8, lsl #20
    5dc8:	31000508 	tstcc	r0, r8, lsl #10
    5dcc:	9f240074 	svcls	0x00240074
	...
    5dd8:	00000003 	andeq	r0, r0, r3
    5ddc:	11220000 			; <UNDEFINED> instruction: 0x11220000
    5de0:	11cc0800 	bicne	r0, ip, r0, lsl #16
    5de4:	00020800 	andeq	r0, r2, r0, lsl #16
    5de8:	11cc9f30 	bicne	r9, ip, r0, lsr pc
    5dec:	12e80800 	rscne	r0, r8, #0, 16
    5df0:	00010800 	andeq	r0, r1, r0, lsl #16
    5df4:	0012f658 	andseq	pc, r2, r8, asr r6	; <UNPREDICTABLE>
    5df8:	0013ea08 	andseq	lr, r3, r8, lsl #20
    5dfc:	58000108 	stmdapl	r0, {r3, r8}
	...
    5e08:	00000004 	andeq	r0, r0, r4
	...
    5e38:	08001122 	stmdaeq	r0, {r1, r5, r8, ip}
    5e3c:	080011cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, ip}
    5e40:	9f300002 	svcls	0x00300002
    5e44:	080011d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, ip}
    5e48:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
    5e4c:	e4520001 	ldrb	r0, [r2], #-1
    5e50:	e8080011 	stmda	r8, {r0, r4}
    5e54:	01080011 	tsteq	r8, r1, lsl r0
    5e58:	11e85300 	mvnne	r5, r0, lsl #6
    5e5c:	11f60800 	mvnsne	r0, r0, lsl #16
    5e60:	00010800 	andeq	r0, r1, r0, lsl #16
    5e64:	0011f652 	andseq	pc, r1, r2, asr r6	; <UNPREDICTABLE>
    5e68:	0011fa08 	andseq	pc, r1, r8, lsl #20
    5e6c:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5e70:	0800124a 	stmdaeq	r0, {r1, r3, r6, r9, ip}
    5e74:	0800125e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r9, ip}
    5e78:	5e500001 	cdppl	0, 5, cr0, cr0, cr1, {0}
    5e7c:	64080012 	strvs	r0, [r8], #-18	; 0xffffffee
    5e80:	01080012 	tsteq	r8, r2, lsl r0
    5e84:	126e5300 	rsbne	r5, lr, #0, 6
    5e88:	12820800 	addne	r0, r2, #0, 16
    5e8c:	00010800 	andeq	r0, r1, r0, lsl #16
    5e90:	00128250 	andseq	r8, r2, r0, asr r2
    5e94:	00128c08 	andseq	r8, r2, r8, lsl #24
    5e98:	53000108 	movwpl	r0, #264	; 0x108
    5e9c:	0800128c 	stmdaeq	r0, {r2, r3, r7, r9, ip}
    5ea0:	0800128e 	stmdaeq	r0, {r1, r2, r3, r7, r9, ip}
    5ea4:	00720007 	rsbseq	r0, r2, r7
    5ea8:	00712432 	rsbseq	r2, r1, r2, lsr r4
    5eac:	00128e22 	andseq	r8, r2, r2, lsr #28
    5eb0:	00129608 	andseq	r9, r2, r8, lsl #12
    5eb4:	52000108 	andpl	r0, r0, #8, 2
    5eb8:	08001296 	stmdaeq	r0, {r1, r2, r4, r7, r9, ip}
    5ebc:	080012a8 	stmdaeq	r0, {r3, r5, r7, r9, ip}
    5ec0:	a8510001 	ldmdage	r1, {r0}^
    5ec4:	ac080012 	stcge	0, cr0, [r8], {18}
    5ec8:	01080012 	tsteq	r8, r2, lsl r0
    5ecc:	12ac5200 	adcne	r5, ip, #0, 4
    5ed0:	12be0800 	adcsne	r0, lr, #0, 16
    5ed4:	00010800 	andeq	r0, r1, r0, lsl #16
    5ed8:	0012be51 	andseq	fp, r2, r1, asr lr
    5edc:	0012c208 	andseq	ip, r2, r8, lsl #4
    5ee0:	52000108 	andpl	r0, r0, #8, 2
    5ee4:	080012c2 	stmdaeq	r0, {r1, r6, r7, r9, ip}
    5ee8:	080012d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, ip}
    5eec:	d4510001 	ldrble	r0, [r1], #-1
    5ef0:	d6080012 			; <UNDEFINED> instruction: 0xd6080012
    5ef4:	01080012 	tsteq	r8, r2, lsl r0
    5ef8:	12d65200 	sbcsne	r5, r6, #0, 4
    5efc:	12e60800 	rscne	r0, r6, #0, 16
    5f00:	00010800 	andeq	r0, r1, r0, lsl #16
    5f04:	00131e53 	andseq	r1, r3, r3, asr lr
    5f08:	00132e08 	andseq	r2, r3, r8, lsl #28
    5f0c:	52000108 	andpl	r0, r0, #8, 2
    5f10:	0800132e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, ip}
    5f14:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
    5f18:	3e530001 	cdpcc	0, 5, cr0, cr3, cr1, {0}
    5f1c:	52080013 	andpl	r0, r8, #19
    5f20:	01080013 	tsteq	r8, r3, lsl r0
    5f24:	13525200 	cmpne	r2, #0, 4
    5f28:	13560800 	cmpne	r6, #0, 16
    5f2c:	00010800 	andeq	r0, r1, r0, lsl #16
    5f30:	00135653 	andseq	r5, r3, r3, asr r6
    5f34:	00136008 	andseq	r6, r3, r8
    5f38:	77000208 	strvc	r0, [r0, -r8, lsl #4]
    5f3c:	00137e00 	andseq	r7, r3, r0, lsl #28
    5f40:	0013ea08 	andseq	lr, r3, r8, lsl #20
    5f44:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    5f94:	00500001 	subseq	r0, r0, r1
    5f98:	00000000 	andeq	r0, r0, r0
    5f9c:	04000000 	streq	r0, [r0], #-0
    5fa0:	5001f300 	andpl	pc, r1, r0, lsl #6
    5fa4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5fa8:	00000000 	andeq	r0, r0, r0
    5fac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5fb8:	01f30004 	mvnseq	r0, r4
    5fbc:	00009f50 	andeq	r9, r0, r0, asr pc
    5fc0:	00000000 	andeq	r0, r0, r0
    5fc4:	00010000 	andeq	r0, r1, r0
    5fc8:	00000050 	andeq	r0, r0, r0, asr r0
    5fcc:	00000000 	andeq	r0, r0, r0
    5fd0:	f3000400 	vshl.u8	d0, d0, d0
    5fd4:	009f5001 	addseq	r5, pc, r1
    5fd8:	00000000 	andeq	r0, r0, r0
    5fdc:	01000000 	mrseq	r0, (UNDEF: 0)
    5fe0:	00005000 	andeq	r5, r0, r0
    5fe4:	00000000 	andeq	r0, r0, r0
    5fe8:	00040000 	andeq	r0, r4, r0
    5fec:	9f5001f3 	svcls	0x005001f3
	...
    5ff8:	00500001 	subseq	r0, r0, r1
    5ffc:	00000000 	andeq	r0, r0, r0
    6000:	04000000 	streq	r0, [r0], #-0
    6004:	5001f300 	andpl	pc, r1, r0, lsl #6
    6008:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    600c:	00000000 	andeq	r0, r0, r0
    6010:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    601c:	01f30004 	mvnseq	r0, r4
    6020:	00009f50 	andeq	r9, r0, r0, asr pc
    6024:	00000000 	andeq	r0, r0, r0
    6028:	00010000 	andeq	r0, r1, r0
    602c:	00000050 	andeq	r0, r0, r0, asr r0
    6030:	00000000 	andeq	r0, r0, r0
    6034:	f3000400 	vshl.u8	d0, d0, d0
    6038:	009f5001 	addseq	r5, pc, r1
    603c:	00000000 	andeq	r0, r0, r0
    6040:	01000000 	mrseq	r0, (UNDEF: 0)
    6044:	00005000 	andeq	r5, r0, r0
    6048:	00000000 	andeq	r0, r0, r0
    604c:	00040000 	andeq	r0, r4, r0
    6050:	9f5001f3 	svcls	0x005001f3
	...
    605c:	00500001 	subseq	r0, r0, r1
    6060:	00000000 	andeq	r0, r0, r0
    6064:	04000000 	streq	r0, [r0], #-0
    6068:	5001f300 	andpl	pc, r1, r0, lsl #6
    606c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6070:	00000000 	andeq	r0, r0, r0
    6074:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6080:	01f30004 	mvnseq	r0, r4
    6084:	00009f50 	andeq	r9, r0, r0, asr pc
    6088:	00000000 	andeq	r0, r0, r0
    608c:	00010000 	andeq	r0, r1, r0
    6090:	00000050 	andeq	r0, r0, r0, asr r0
    6094:	00000000 	andeq	r0, r0, r0
    6098:	f3000400 	vshl.u8	d0, d0, d0
    609c:	009f5001 	addseq	r5, pc, r1
    60a0:	00000000 	andeq	r0, r0, r0
    60a4:	01000000 	mrseq	r0, (UNDEF: 0)
    60a8:	00005000 	andeq	r5, r0, r0
    60ac:	00000000 	andeq	r0, r0, r0
    60b0:	00040000 	andeq	r0, r4, r0
    60b4:	9f5001f3 	svcls	0x005001f3
	...
    60c0:	00500001 	subseq	r0, r0, r1
    60c4:	00000000 	andeq	r0, r0, r0
    60c8:	04000000 	streq	r0, [r0], #-0
    60cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    60d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    60d4:	00000000 	andeq	r0, r0, r0
    60d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60e4:	01f30004 	mvnseq	r0, r4
    60e8:	00009f50 	andeq	r9, r0, r0, asr pc
    60ec:	00000000 	andeq	r0, r0, r0
    60f0:	00010000 	andeq	r0, r1, r0
    60f4:	00000050 	andeq	r0, r0, r0, asr r0
    60f8:	00000000 	andeq	r0, r0, r0
    60fc:	f3000400 	vshl.u8	d0, d0, d0
    6100:	009f5001 	addseq	r5, pc, r1
    6104:	00000000 	andeq	r0, r0, r0
    6108:	02000000 	andeq	r0, r0, #0
	...
    6114:	02000000 	andeq	r0, r0, #0
    6118:	009f3000 	addseq	r3, pc, r0
    611c:	00000000 	andeq	r0, r0, r0
    6120:	01000000 	mrseq	r0, (UNDEF: 0)
    6124:	00005000 	andeq	r5, r0, r0
	...
    616c:	00530001 	subseq	r0, r3, r1
    6170:	00000000 	andeq	r0, r0, r0
    6174:	02000000 	andeq	r0, r0, #0
    6178:	00287000 	eoreq	r7, r8, r0
    617c:	00000000 	andeq	r0, r0, r0
    6180:	05000000 	streq	r0, [r0, #-0]
    6184:	5001f300 	andpl	pc, r1, r0, lsl #6
    6188:	00002823 	andeq	r2, r0, r3, lsr #16
    618c:	00000000 	andeq	r0, r0, r0
    6190:	00010000 	andeq	r0, r1, r0
    6194:	00000053 	andeq	r0, r0, r3, asr r0
    6198:	00000000 	andeq	r0, r0, r0
    619c:	70000200 	andvc	r0, r0, r0, lsl #4
    61a0:	00000028 	andeq	r0, r0, r8, lsr #32
    61a4:	00000000 	andeq	r0, r0, r0
    61a8:	f3000500 	vrshl.u8	d0, d0, d0
    61ac:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    61b8:	00530001 	subseq	r0, r3, r1
    61bc:	00000000 	andeq	r0, r0, r0
    61c0:	02000000 	andeq	r0, r0, #0
    61c4:	00287000 	eoreq	r7, r8, r0
    61c8:	00000000 	andeq	r0, r0, r0
    61cc:	05000000 	streq	r0, [r0, #-0]
    61d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    61d4:	00002823 	andeq	r2, r0, r3, lsr #16
    61d8:	00000000 	andeq	r0, r0, r0
    61dc:	00010000 	andeq	r0, r1, r0
    61e0:	00000053 	andeq	r0, r0, r3, asr r0
    61e4:	00000000 	andeq	r0, r0, r0
    61e8:	70000200 	andvc	r0, r0, r0, lsl #4
    61ec:	00000028 	andeq	r0, r0, r8, lsr #32
    61f0:	00000000 	andeq	r0, r0, r0
    61f4:	f3000500 	vrshl.u8	d0, d0, d0
    61f8:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6204:	00530001 	subseq	r0, r3, r1
    6208:	00000000 	andeq	r0, r0, r0
    620c:	02000000 	andeq	r0, r0, #0
    6210:	00287000 	eoreq	r7, r8, r0
    6214:	00000000 	andeq	r0, r0, r0
    6218:	05000000 	streq	r0, [r0, #-0]
    621c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6220:	00002823 	andeq	r2, r0, r3, lsr #16
    6224:	00000000 	andeq	r0, r0, r0
    6228:	00020000 	andeq	r0, r2, r0
    622c:	00002870 	andeq	r2, r0, r0, ror r8
    6230:	00000000 	andeq	r0, r0, r0
    6234:	00050000 	andeq	r0, r5, r0
    6238:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    623c:	00000028 	andeq	r0, r0, r8, lsr #32
    6240:	00000000 	andeq	r0, r0, r0
    6244:	70000200 	andvc	r0, r0, r0, lsl #4
    6248:	00000028 	andeq	r0, r0, r8, lsr #32
    624c:	00000000 	andeq	r0, r0, r0
    6250:	f3000500 	vrshl.u8	d0, d0, d0
    6254:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6260:	00530001 	subseq	r0, r3, r1
    6264:	00000000 	andeq	r0, r0, r0
    6268:	02000000 	andeq	r0, r0, #0
    626c:	00287000 	eoreq	r7, r8, r0
    6270:	00000000 	andeq	r0, r0, r0
    6274:	05000000 	streq	r0, [r0, #-0]
    6278:	5001f300 	andpl	pc, r1, r0, lsl #6
    627c:	00002823 	andeq	r2, r0, r3, lsr #16
    6280:	00000000 	andeq	r0, r0, r0
    6284:	00020000 	andeq	r0, r2, r0
    6288:	00002870 	andeq	r2, r0, r0, ror r8
    628c:	00000000 	andeq	r0, r0, r0
    6290:	00050000 	andeq	r0, r5, r0
    6294:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    6298:	00000028 	andeq	r0, r0, r8, lsr #32
    629c:	00000000 	andeq	r0, r0, r0
    62a0:	53000100 	movwpl	r0, #256	; 0x100
	...
    62ac:	28700002 	ldmdacs	r0!, {r1}^
	...
    62b8:	01f30005 	mvnseq	r0, r5
    62bc:	00282350 	eoreq	r2, r8, r0, asr r3
	...
    62cc:	02000000 	andeq	r0, r0, #0
    62d0:	00007d00 	andeq	r7, r0, r0, lsl #26
    62d4:	00000000 	andeq	r0, r0, r0
    62d8:	02000000 	andeq	r0, r0, #0
    62dc:	00047d00 	andeq	r7, r4, r0, lsl #26
    62e0:	00000000 	andeq	r0, r0, r0
    62e4:	02000000 	andeq	r0, r0, #0
    62e8:	00007d00 	andeq	r7, r0, r0, lsl #26
    62ec:	00000000 	andeq	r0, r0, r0
    62f0:	02000000 	andeq	r0, r0, #0
    62f4:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    630c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6318:	01f30004 	mvnseq	r0, r4
    631c:	00009f50 	andeq	r9, r0, r0, asr pc
    6320:	00000000 	andeq	r0, r0, r0
    6324:	00010000 	andeq	r0, r1, r0
    6328:	00000050 	andeq	r0, r0, r0, asr r0
	...
    633c:	52000100 	andpl	r0, r0, #0, 2
	...
    6348:	0071001e 	rsbseq	r0, r1, lr, lsl r0
    634c:	29f730f7 	ldmibcs	r7!, {r0, r1, r2, r4, r5, r6, r7, ip, sp}^
    6350:	ab0829f4 	blge	210b28 <_Min_Heap_Size+0x210328>
    6354:	00aaaaaa 	adceq	sl, sl, sl, lsr #21
    6358:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    635c:	29f72008 	ldmibcs	r7!, {r3, sp}^
    6360:	f730f725 			; <UNDEFINED> instruction: 0xf730f725
    6364:	9f253400 	svcls	0x00253400
	...
    6378:	007d0002 	rsbseq	r0, sp, r2
	...
    6384:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6390:	007d0002 	rsbseq	r0, sp, r2
	...
    639c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    63b8:	00010000 	andeq	r0, r1, r0
    63bc:	00000053 	andeq	r0, r0, r3, asr r0
    63c0:	00000000 	andeq	r0, r0, r0
    63c4:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    63c8:	00000004 	andeq	r0, r0, r4
    63cc:	00000000 	andeq	r0, r0, r0
    63d0:	f3000400 	vshl.u8	d0, d0, d0
    63d4:	009f5301 	addseq	r5, pc, r1, lsl #6
    63d8:	00000000 	andeq	r0, r0, r0
    63dc:	02000000 	andeq	r0, r0, #0
    63e0:	00047400 	andeq	r7, r4, r0, lsl #8
    63e4:	00000000 	andeq	r0, r0, r0
    63e8:	04000000 	streq	r0, [r0], #-0
    63ec:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    63f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6404:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6410:	01f30004 	mvnseq	r0, r4
    6414:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6428:	00010000 	andeq	r0, r1, r0
    642c:	00000050 	andeq	r0, r0, r0, asr r0
    6430:	00000000 	andeq	r0, r0, r0
    6434:	f3000400 	vshl.u8	d0, d0, d0
    6438:	009f5001 	addseq	r5, pc, r1
	...
    6450:	01000000 	mrseq	r0, (UNDEF: 0)
    6454:	00005000 	andeq	r5, r0, r0
    6458:	00000000 	andeq	r0, r0, r0
    645c:	00010000 	andeq	r0, r1, r0
    6460:	00000053 	andeq	r0, r0, r3, asr r0
    6464:	00000000 	andeq	r0, r0, r0
    6468:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6474:	00530001 	subseq	r0, r3, r1
    6478:	00000000 	andeq	r0, r0, r0
    647c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    648c:	30000200 	andcc	r0, r0, r0, lsl #4
    6490:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6494:	00000000 	andeq	r0, r0, r0
    6498:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    64a4:	9f300002 	svcls	0x00300002
	...
    64bc:	00500001 	subseq	r0, r0, r1
    64c0:	00000000 	andeq	r0, r0, r0
    64c4:	01000000 	mrseq	r0, (UNDEF: 0)
    64c8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    64e0:	00520001 	subseq	r0, r2, r1
    64e4:	00000000 	andeq	r0, r0, r0
    64e8:	04000000 	streq	r0, [r0], #-0
    64ec:	5201f300 	andpl	pc, r1, #0, 6
    64f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    64f4:	00000000 	andeq	r0, r0, r0
    64f8:	52000100 	andpl	r0, r0, #0, 2
	...
    6504:	00000001 	andeq	r0, r0, r1
	...
    6510:	00020000 	andeq	r0, r2, r0
    6514:	00009f30 	andeq	r9, r0, r0, lsr pc
    6518:	00000000 	andeq	r0, r0, r0
    651c:	00010000 	andeq	r0, r1, r0
    6520:	00000050 	andeq	r0, r0, r0, asr r0
    6524:	00000000 	andeq	r0, r0, r0
    6528:	30000200 	andcc	r0, r0, r0, lsl #4
    652c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    653c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6548:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    654c:	00000014 	andeq	r0, r0, r4, lsl r0
    6550:	00000000 	andeq	r0, r0, r0
    6554:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6558:	00000020 	andeq	r0, r0, r0, lsr #32
    655c:	00000000 	andeq	r0, r0, r0
    6560:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6564:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    6580:	01000000 	mrseq	r0, (UNDEF: 0)
    6584:	00005000 	andeq	r5, r0, r0
    6588:	00000000 	andeq	r0, r0, r0
    658c:	00010000 	andeq	r0, r1, r0
    6590:	00000054 	andeq	r0, r0, r4, asr r0
    6594:	00000000 	andeq	r0, r0, r0
    6598:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    65a4:	00540001 	subseq	r0, r4, r1
    65a8:	00000000 	andeq	r0, r0, r0
    65ac:	01000000 	mrseq	r0, (UNDEF: 0)
    65b0:	00005000 	andeq	r5, r0, r0
    65b4:	00000000 	andeq	r0, r0, r0
    65b8:	00010000 	andeq	r0, r1, r0
    65bc:	00000054 	andeq	r0, r0, r4, asr r0
    65c0:	00000000 	andeq	r0, r0, r0
    65c4:	f3000400 	vshl.u8	d0, d0, d0
    65c8:	009f5001 	addseq	r5, pc, r1
	...
    65dc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    65f0:	00010000 	andeq	r0, r1, r0
    65f4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6604:	01000000 	mrseq	r0, (UNDEF: 0)
    6608:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    6618:	00020000 	andeq	r0, r2, r0
    661c:	0000007d 	andeq	r0, r0, sp, ror r0
    6620:	00000000 	andeq	r0, r0, r0
    6624:	00020000 	andeq	r0, r2, r0
    6628:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    663c:	00010000 	andeq	r0, r1, r0
    6640:	00000050 	andeq	r0, r0, r0, asr r0
    6644:	00000000 	andeq	r0, r0, r0
    6648:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6660:	00510001 	subseq	r0, r1, r1
    6664:	00000000 	andeq	r0, r0, r0
    6668:	04000000 	streq	r0, [r0], #-0
    666c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6684:	52000100 	andpl	r0, r0, #0, 2
	...
    6690:	00560001 	subseq	r0, r6, r1
	...
    66a4:	01000000 	mrseq	r0, (UNDEF: 0)
    66a8:	00005a00 	andeq	r5, r0, r0, lsl #20
    66ac:	00000000 	andeq	r0, r0, r0
    66b0:	00010000 	andeq	r0, r1, r0
    66b4:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    66c0:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    66d0:	01000000 	mrseq	r0, (UNDEF: 0)
    66d4:	00005000 	andeq	r5, r0, r0
    66d8:	00000000 	andeq	r0, r0, r0
    66dc:	00010000 	andeq	r0, r1, r0
    66e0:	00000050 	andeq	r0, r0, r0, asr r0
    66e4:	00000000 	andeq	r0, r0, r0
    66e8:	59000100 	stmdbpl	r0, {r8}
	...
    66f4:	00500001 	subseq	r0, r0, r1
    66f8:	00000000 	andeq	r0, r0, r0
    66fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6700:	00005900 	andeq	r5, r0, r0, lsl #18
    6704:	00000000 	andeq	r0, r0, r0
    6708:	00010000 	andeq	r0, r1, r0
    670c:	00000050 	andeq	r0, r0, r0, asr r0
    6710:	00000000 	andeq	r0, r0, r0
    6714:	59000100 	stmdbpl	r0, {r8}
	...
    672c:	00530001 	subseq	r0, r3, r1
    6730:	00000000 	andeq	r0, r0, r0
    6734:	01000000 	mrseq	r0, (UNDEF: 0)
    6738:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    674c:	00010000 	andeq	r0, r1, r0
    6750:	00000057 	andeq	r0, r0, r7, asr r0
    6754:	00000000 	andeq	r0, r0, r0
    6758:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    676c:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
    6770:	080014a4 	stmdaeq	r0, {r2, r5, r7, sl, ip}
    6774:	a4500001 	ldrbge	r0, [r0], #-1
    6778:	a6080014 			; <UNDEFINED> instruction: 0xa6080014
    677c:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    6780:	5001f300 	andpl	pc, r1, r0, lsl #6
    6784:	0014a69f 	mulseq	r4, pc, r6	; <UNPREDICTABLE>
    6788:	0014b808 	andseq	fp, r4, r8, lsl #16
    678c:	50000108 	andpl	r0, r0, r8, lsl #2
    6790:	080014b8 	stmdaeq	r0, {r3, r4, r5, r7, sl, ip}
    6794:	080014ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, ip}
    6798:	01f30004 	mvnseq	r0, r4
    679c:	00009f50 	andeq	r9, r0, r0, asr pc
    67a0:	00000000 	andeq	r0, r0, r0
    67a4:	14000000 	strne	r0, [r0], #-0
    67a8:	14020800 	strne	r0, [r2], #-2048	; 0xfffff800
    67ac:	00020800 	andeq	r0, r2, r0, lsl #16
    67b0:	1402007d 	strne	r0, [r2], #-125	; 0xffffff83
    67b4:	14940800 	ldrne	r0, [r4], #2048	; 0x800
    67b8:	00020800 	andeq	r0, r2, r0, lsl #16
    67bc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    67c8:	14000000 	strne	r0, [r0], #-0
    67cc:	14090800 	strne	r0, [r9], #-2048	; 0xfffff800
    67d0:	00010800 	andeq	r0, r1, r0, lsl #16
    67d4:	00140950 	andseq	r0, r4, r0, asr r9
    67d8:	00149408 	andseq	r9, r4, r8, lsl #8
    67dc:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    67e8:	14060000 	strne	r0, [r6], #-0
    67ec:	14940800 	ldrne	r0, [r4], #2048	; 0x800
    67f0:	00010800 	andeq	r0, r1, r0, lsl #16
    67f4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6800:	00000101 	andeq	r0, r0, r1, lsl #2
    6804:	0a000000 	beq	680c <_Min_Heap_Size+0x600c>
    6808:	20080014 	andcs	r0, r8, r4, lsl r0
    680c:	01080014 	tsteq	r8, r4, lsl r0
    6810:	14225000 	strtne	r5, [r2], #-0
    6814:	14500800 	ldrbne	r0, [r0], #-2048	; 0xfffff800
    6818:	00010800 	andeq	r0, r1, r0, lsl #16
    681c:	00145050 	andseq	r5, r4, r0, asr r0
    6820:	00147608 	andseq	r7, r4, r8, lsl #12
    6824:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    6828:	08001476 	stmdaeq	r0, {r1, r2, r4, r5, r6, sl, ip}
    682c:	0800147e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, sl, ip}
    6830:	7e500001 	cdpvc	0, 5, cr0, cr0, cr1, {0}
    6834:	94080014 	strls	r0, [r8], #-20	; 0xffffffec
    6838:	01080014 	tsteq	r8, r4, lsl r0
    683c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    684c:	00020000 	andeq	r0, r2, r0
    6850:	0000007d 	andeq	r0, r0, sp, ror r0
    6854:	00000000 	andeq	r0, r0, r0
    6858:	00020000 	andeq	r0, r2, r0
    685c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6874:	00010000 	andeq	r0, r1, r0
    6878:	00000050 	andeq	r0, r0, r0, asr r0
    687c:	00000000 	andeq	r0, r0, r0
    6880:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    688c:	00500001 	subseq	r0, r0, r1
    6890:	00000000 	andeq	r0, r0, r0
    6894:	01000000 	mrseq	r0, (UNDEF: 0)
    6898:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    68b0:	00010000 	andeq	r0, r1, r0
    68b4:	00000051 	andeq	r0, r0, r1, asr r0
    68b8:	00000000 	andeq	r0, r0, r0
    68bc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    68c8:	00510001 	subseq	r0, r1, r1
    68cc:	00000000 	andeq	r0, r0, r0
    68d0:	01000000 	mrseq	r0, (UNDEF: 0)
    68d4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    68e8:	00010000 	andeq	r0, r1, r0
    68ec:	00000052 	andeq	r0, r0, r2, asr r0
    68f0:	00000000 	andeq	r0, r0, r0
    68f4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    690c:	00530001 	subseq	r0, r3, r1
    6910:	00000000 	andeq	r0, r0, r0
    6914:	01000000 	mrseq	r0, (UNDEF: 0)
    6918:	00005500 	andeq	r5, r0, r0, lsl #10
    691c:	00000000 	andeq	r0, r0, r0
    6920:	02010000 	andeq	r0, r1, #0
    6924:	00000002 	andeq	r0, r0, r2
	...
    6930:	9f300002 	svcls	0x00300002
	...
    693c:	9f320002 	svcls	0x00320002
	...
    6948:	9f300002 	svcls	0x00300002
	...
    695c:	00010000 	andeq	r0, r1, r0
    6960:	00000058 	andeq	r0, r0, r8, asr r0
	...
    6970:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    697c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6980:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6998:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    69a4:	00540001 	subseq	r0, r4, r1
    69a8:	00000000 	andeq	r0, r0, r0
    69ac:	01000000 	mrseq	r0, (UNDEF: 0)
    69b0:	00005000 	andeq	r5, r0, r0
    69b4:	00000000 	andeq	r0, r0, r0
    69b8:	00010000 	andeq	r0, r1, r0
    69bc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    69d4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    69e0:	00560001 	subseq	r0, r6, r1
    69e4:	00000000 	andeq	r0, r0, r0
    69e8:	01000000 	mrseq	r0, (UNDEF: 0)
    69ec:	00005100 	andeq	r5, r0, r0, lsl #2
    69f0:	00000000 	andeq	r0, r0, r0
    69f4:	00010000 	andeq	r0, r1, r0
    69f8:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6a0c:	52000100 	andpl	r0, r0, #0, 2
	...
    6a18:	00570001 	subseq	r0, r7, r1
	...
    6a2c:	01000000 	mrseq	r0, (UNDEF: 0)
    6a30:	00005300 	andeq	r5, r0, r0, lsl #6
    6a34:	00000000 	andeq	r0, r0, r0
    6a38:	00010000 	andeq	r0, r1, r0
    6a3c:	00000055 	andeq	r0, r0, r5, asr r0
    6a40:	00000000 	andeq	r0, r0, r0
    6a44:	02020100 	andeq	r0, r2, #0, 2
	...
    6a50:	02000000 	andeq	r0, r0, #0
    6a54:	009f3000 	addseq	r3, pc, r0
    6a58:	00000000 	andeq	r0, r0, r0
    6a5c:	02000000 	andeq	r0, r0, #0
    6a60:	009f3200 	addseq	r3, pc, r0, lsl #4
    6a64:	00000000 	andeq	r0, r0, r0
    6a68:	02000000 	andeq	r0, r0, #0
    6a6c:	009f3000 	addseq	r3, pc, r0
	...
    6a7c:	02000000 	andeq	r0, r0, #0
    6a80:	00007d00 	andeq	r7, r0, r0, lsl #26
    6a84:	00000000 	andeq	r0, r0, r0
    6a88:	02000000 	andeq	r0, r0, #0
    6a8c:	00107d00 	andseq	r7, r0, r0, lsl #26
    6a90:	00000000 	andeq	r0, r0, r0
    6a94:	02000000 	andeq	r0, r0, #0
    6a98:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6ab0:	01000000 	mrseq	r0, (UNDEF: 0)
    6ab4:	00005000 	andeq	r5, r0, r0
    6ab8:	00000000 	andeq	r0, r0, r0
    6abc:	00010000 	andeq	r0, r1, r0
    6ac0:	00000055 	andeq	r0, r0, r5, asr r0
    6ac4:	00000000 	andeq	r0, r0, r0
    6ac8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ad4:	01f30004 	mvnseq	r0, r4
    6ad8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6aec:	00500001 	subseq	r0, r0, r1
	...
    6afc:	02000000 	andeq	r0, r0, #0
    6b00:	00007d00 	andeq	r7, r0, r0, lsl #26
    6b04:	00000000 	andeq	r0, r0, r0
    6b08:	02000000 	andeq	r0, r0, #0
    6b0c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    6b20:	01000000 	mrseq	r0, (UNDEF: 0)
    6b24:	00005000 	andeq	r5, r0, r0
    6b28:	00000000 	andeq	r0, r0, r0
    6b2c:	00010000 	andeq	r0, r1, r0
    6b30:	00000054 	andeq	r0, r0, r4, asr r0
    6b34:	00000000 	andeq	r0, r0, r0
    6b38:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6b50:	02000000 	andeq	r0, r0, #0
    6b54:	009f3000 	addseq	r3, pc, r0
    6b58:	00000000 	andeq	r0, r0, r0
    6b5c:	02000000 	andeq	r0, r0, #0
    6b60:	009f3000 	addseq	r3, pc, r0
    6b64:	00000000 	andeq	r0, r0, r0
    6b68:	01000000 	mrseq	r0, (UNDEF: 0)
    6b6c:	00005200 	andeq	r5, r0, r0, lsl #4
    6b70:	00000000 	andeq	r0, r0, r0
    6b74:	00010000 	andeq	r0, r1, r0
    6b78:	00000050 	andeq	r0, r0, r0, asr r0
    6b7c:	00000000 	andeq	r0, r0, r0
    6b80:	52000100 	andpl	r0, r0, #0, 2
	...
    6b8c:	00550001 	subseq	r0, r5, r1
    6b90:	00000000 	andeq	r0, r0, r0
    6b94:	01000000 	mrseq	r0, (UNDEF: 0)
    6b98:	00005200 	andeq	r5, r0, r0, lsl #4
    6b9c:	00000000 	andeq	r0, r0, r0
    6ba0:	00010000 	andeq	r0, r1, r0
    6ba4:	00000055 	andeq	r0, r0, r5, asr r0
    6ba8:	00000000 	andeq	r0, r0, r0
    6bac:	30000200 	andcc	r0, r0, r0, lsl #4
    6bb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6bbc:	00000001 	andeq	r0, r0, r1
	...
    6bc8:	01000000 	mrseq	r0, (UNDEF: 0)
    6bcc:	00005000 	andeq	r5, r0, r0
    6bd0:	00000000 	andeq	r0, r0, r0
    6bd4:	00010000 	andeq	r0, r1, r0
    6bd8:	00000055 	andeq	r0, r0, r5, asr r0
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6bec:	00550001 	subseq	r0, r5, r1
    6bf0:	00000000 	andeq	r0, r0, r0
    6bf4:	01000000 	mrseq	r0, (UNDEF: 0)
    6bf8:	00005000 	andeq	r5, r0, r0
	...
    6c0c:	00500001 	subseq	r0, r0, r1
	...
    6c1c:	02000000 	andeq	r0, r0, #0
    6c20:	00007d00 	andeq	r7, r0, r0, lsl #26
    6c24:	00000000 	andeq	r0, r0, r0
    6c28:	02000000 	andeq	r0, r0, #0
    6c2c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6c3c:	02000000 	andeq	r0, r0, #0
    6c40:	00007d00 	andeq	r7, r0, r0, lsl #26
    6c44:	00000000 	andeq	r0, r0, r0
    6c48:	02000000 	andeq	r0, r0, #0
    6c4c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6c64:	01000000 	mrseq	r0, (UNDEF: 0)
    6c68:	00005000 	andeq	r5, r0, r0
    6c6c:	00000000 	andeq	r0, r0, r0
    6c70:	00010000 	andeq	r0, r1, r0
    6c74:	00000054 	andeq	r0, r0, r4, asr r0
    6c78:	00000000 	andeq	r0, r0, r0
    6c7c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c88:	00540001 	subseq	r0, r4, r1
	...
    6c98:	02000000 	andeq	r0, r0, #0
    6c9c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6ca0:	00000000 	andeq	r0, r0, r0
    6ca4:	02000000 	andeq	r0, r0, #0
    6ca8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6cc4:	00005000 	andeq	r5, r0, r0
    6cc8:	00000000 	andeq	r0, r0, r0
    6ccc:	00040000 	andeq	r0, r4, r0
    6cd0:	9f5001f3 	svcls	0x005001f3
	...
    6cdc:	00500001 	subseq	r0, r0, r1
    6ce0:	00000000 	andeq	r0, r0, r0
    6ce4:	04000000 	streq	r0, [r0], #-0
    6ce8:	5001f300 	andpl	pc, r1, r0, lsl #6
    6cec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6cf0:	00000000 	andeq	r0, r0, r0
    6cf4:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    6d00:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6d0c:	00540001 	subseq	r0, r4, r1
	...
    6d1c:	02000000 	andeq	r0, r0, #0
    6d20:	00007d00 	andeq	r7, r0, r0, lsl #26
    6d24:	00000000 	andeq	r0, r0, r0
    6d28:	02000000 	andeq	r0, r0, #0
    6d2c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6d44:	01000000 	mrseq	r0, (UNDEF: 0)
    6d48:	00005000 	andeq	r5, r0, r0
    6d4c:	00000000 	andeq	r0, r0, r0
    6d50:	00040000 	andeq	r0, r4, r0
    6d54:	9f5001f3 	svcls	0x005001f3
	...
    6d60:	00500001 	subseq	r0, r0, r1
    6d64:	00000000 	andeq	r0, r0, r0
    6d68:	04000000 	streq	r0, [r0], #-0
    6d6c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6d70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6d74:	00000000 	andeq	r0, r0, r0
    6d78:	00000100 	andeq	r0, r0, r0, lsl #2
    6d7c:	00000000 	andeq	r0, r0, r0
    6d80:	01000000 	mrseq	r0, (UNDEF: 0)
    6d84:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6d94:	00020000 	andeq	r0, r2, r0
    6d98:	0000007d 	andeq	r0, r0, sp, ror r0
    6d9c:	00000000 	andeq	r0, r0, r0
    6da0:	00020000 	andeq	r0, r2, r0
    6da4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6dbc:	00010000 	andeq	r0, r1, r0
    6dc0:	00000050 	andeq	r0, r0, r0, asr r0
    6dc4:	00000000 	andeq	r0, r0, r0
    6dc8:	f3000400 	vshl.u8	d0, d0, d0
    6dcc:	009f5001 	addseq	r5, pc, r1
    6dd0:	00000000 	andeq	r0, r0, r0
    6dd4:	01000000 	mrseq	r0, (UNDEF: 0)
    6dd8:	00005000 	andeq	r5, r0, r0
    6ddc:	00000000 	andeq	r0, r0, r0
    6de0:	00040000 	andeq	r0, r4, r0
    6de4:	9f5001f3 	svcls	0x005001f3
	...
    6df0:	00000001 	andeq	r0, r0, r1
	...
    6dfc:	00540001 	subseq	r0, r4, r1
    6e00:	00000000 	andeq	r0, r0, r0
    6e04:	01000000 	mrseq	r0, (UNDEF: 0)
    6e08:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6e18:	00020000 	andeq	r0, r2, r0
    6e1c:	0000007d 	andeq	r0, r0, sp, ror r0
    6e20:	00000000 	andeq	r0, r0, r0
    6e24:	00020000 	andeq	r0, r2, r0
    6e28:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6e40:	00010000 	andeq	r0, r1, r0
    6e44:	00000050 	andeq	r0, r0, r0, asr r0
    6e48:	00000000 	andeq	r0, r0, r0
    6e4c:	f3000400 	vshl.u8	d0, d0, d0
    6e50:	009f5001 	addseq	r5, pc, r1
    6e54:	00000000 	andeq	r0, r0, r0
    6e58:	01000000 	mrseq	r0, (UNDEF: 0)
    6e5c:	00005000 	andeq	r5, r0, r0
    6e60:	00000000 	andeq	r0, r0, r0
    6e64:	00040000 	andeq	r0, r4, r0
    6e68:	9f5001f3 	svcls	0x005001f3
	...
    6e74:	00000001 	andeq	r0, r0, r1
    6e78:	00000000 	andeq	r0, r0, r0
    6e7c:	00010000 	andeq	r0, r1, r0
    6e80:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6e90:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6e9c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6ea0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6eb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ec4:	01f30004 	mvnseq	r0, r4
    6ec8:	00009f50 	andeq	r9, r0, r0, asr pc
    6ecc:	00000000 	andeq	r0, r0, r0
    6ed0:	00010000 	andeq	r0, r1, r0
    6ed4:	00000050 	andeq	r0, r0, r0, asr r0
    6ed8:	00000000 	andeq	r0, r0, r0
    6edc:	f3000400 	vshl.u8	d0, d0, d0
    6ee0:	009f5001 	addseq	r5, pc, r1
	...
    6efc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6f08:	00540001 	subseq	r0, r4, r1
    6f0c:	00000000 	andeq	r0, r0, r0
    6f10:	04000000 	streq	r0, [r0], #-0
    6f14:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6f18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6f1c:	00000000 	andeq	r0, r0, r0
    6f20:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6f2c:	00540001 	subseq	r0, r4, r1
	...
    6f44:	01000000 	mrseq	r0, (UNDEF: 0)
    6f48:	00005200 	andeq	r5, r0, r0, lsl #4
    6f4c:	00000000 	andeq	r0, r0, r0
    6f50:	00010000 	andeq	r0, r1, r0
    6f54:	00000057 	andeq	r0, r0, r7, asr r0
    6f58:	00000000 	andeq	r0, r0, r0
    6f5c:	52000100 	andpl	r0, r0, #0, 2
	...
    6f68:	00570001 	subseq	r0, r7, r1
	...
    6f7c:	01000000 	mrseq	r0, (UNDEF: 0)
    6f80:	00005300 	andeq	r5, r0, r0, lsl #6
    6f84:	00000000 	andeq	r0, r0, r0
    6f88:	00010000 	andeq	r0, r1, r0
    6f8c:	00000056 	andeq	r0, r0, r6, asr r0
    6f90:	00000000 	andeq	r0, r0, r0
    6f94:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    6fa0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6fac:	00550001 	subseq	r0, r5, r1
	...
    6fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6fc4:	00005600 	andeq	r5, r0, r0, lsl #12
    6fc8:	00000000 	andeq	r0, r0, r0
    6fcc:	00010000 	andeq	r0, r1, r0
    6fd0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6fe4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    6ff0:	00570001 	subseq	r0, r7, r1
	...
    7008:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7014:	01f30004 	mvnseq	r0, r4
    7018:	00009f51 	andeq	r9, r0, r1, asr pc
    701c:	00000000 	andeq	r0, r0, r0
    7020:	00010000 	andeq	r0, r1, r0
    7024:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7038:	53000100 	movwpl	r0, #256	; 0x100
	...
    7044:	00530001 	subseq	r0, r3, r1
	...
    7060:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    706c:	7c700003 	ldclvc	0, cr0, [r0], #-12
    7070:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7074:	00000000 	andeq	r0, r0, r0
    7078:	f3000600 	vmax.u8	d0, d0, d0
    707c:	1a375101 	bne	ddb488 <_Min_Heap_Size+0xddac88>
    7080:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7084:	00000000 	andeq	r0, r0, r0
    7088:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7094:	7c700003 	ldclvc	0, cr0, [r0], #-12
    7098:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    70ac:	01000000 	mrseq	r0, (UNDEF: 0)
    70b0:	00005200 	andeq	r5, r0, r0, lsl #4
    70b4:	00000000 	andeq	r0, r0, r0
    70b8:	001d0000 	andseq	r0, sp, r0
    70bc:	5101f334 	tstpl	r1, r4, lsr r3	; <UNPREDICTABLE>
    70c0:	f31a3720 	vabd.u16	d3, d10, d16
    70c4:	37205101 	strcc	r5, [r0, -r1, lsl #2]!
    70c8:	244b401a 	strbcs	r4, [fp], #-26	; 0xffffffe6
    70cc:	00040c22 	andeq	r0, r4, r2, lsr #24
    70d0:	282a8000 	stmdacs	sl!, {pc}
    70d4:	13160001 	tstne	r6, #1
    70d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    70dc:	00000000 	andeq	r0, r0, r0
    70e0:	52000100 	andpl	r0, r0, #0, 2
	...
    70f4:	00010000 	andeq	r0, r1, r0
    70f8:	00000051 	andeq	r0, r0, r1, asr r0
	...
    7108:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7114:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7118:	00000008 	andeq	r0, r0, r8
	...
    7130:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    713c:	00540001 	subseq	r0, r4, r1
    7140:	00000000 	andeq	r0, r0, r0
    7144:	01000000 	mrseq	r0, (UNDEF: 0)
    7148:	00005000 	andeq	r5, r0, r0
    714c:	00000000 	andeq	r0, r0, r0
    7150:	00010000 	andeq	r0, r1, r0
    7154:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7168:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7174:	01f30004 	mvnseq	r0, r4
    7178:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7188:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    718c:	080015b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sl, ip}
    7190:	b6500001 	ldrblt	r0, [r0], -r1
    7194:	cc080015 	stcgt	0, cr0, [r8], {21}
    7198:	03080015 	movweq	r0, #32789	; 0x8015
    719c:	9f017000 	svcls	0x00017000
    71a0:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    71a4:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
    71a8:	01f30004 	mvnseq	r0, r4
    71ac:	00009f50 	andeq	r9, r0, r0, asr pc
    71b0:	00000000 	andeq	r0, r0, r0
    71b4:	00020000 	andeq	r0, r2, r0
    71b8:	00000000 	andeq	r0, r0, r0
    71bc:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    71c0:	080015b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sl, ip}
    71c4:	b6500001 	ldrblt	r0, [r0], -r1
    71c8:	cc080015 	stcgt	0, cr0, [r8], {21}
    71cc:	03080015 	movweq	r0, #32789	; 0x8015
    71d0:	9f017000 	svcls	0x00017000
    71d4:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    71d8:	080015d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, sl, ip}
    71dc:	01f30004 	mvnseq	r0, r4
    71e0:	00009f50 	andeq	r9, r0, r0, asr pc
    71e4:	00000000 	andeq	r0, r0, r0
    71e8:	00010000 	andeq	r0, r1, r0
    71ec:	080015c2 	stmdaeq	r0, {r1, r6, r7, r8, sl, ip}
    71f0:	080015ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, ip}
    71f4:	9f3f0002 	svcls	0x003f0002
	...
    7200:	15c20001 	strbne	r0, [r2, #1]
    7204:	15ca0800 	strbne	r0, [sl, #2048]	; 0x800
    7208:	00030800 	andeq	r0, r3, r0, lsl #16
    720c:	009fff09 	addseq	pc, pc, r9, lsl #30
	...
    721c:	02000000 	andeq	r0, r0, #0
    7220:	00007d00 	andeq	r7, r0, r0, lsl #26
    7224:	00000000 	andeq	r0, r0, r0
    7228:	02000000 	andeq	r0, r0, #0
    722c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7244:	01000000 	mrseq	r0, (UNDEF: 0)
    7248:	00005000 	andeq	r5, r0, r0
    724c:	00000000 	andeq	r0, r0, r0
    7250:	00040000 	andeq	r0, r4, r0
    7254:	9f5001f3 	svcls	0x005001f3
	...
    7260:	00500001 	subseq	r0, r0, r1
    7264:	00000000 	andeq	r0, r0, r0
    7268:	04000000 	streq	r0, [r0], #-0
    726c:	5001f300 	andpl	pc, r1, r0, lsl #6
    7270:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7274:	00000000 	andeq	r0, r0, r0
    7278:	00000100 	andeq	r0, r0, r0, lsl #2
    727c:	00000000 	andeq	r0, r0, r0
    7280:	01000000 	mrseq	r0, (UNDEF: 0)
    7284:	00005400 	andeq	r5, r0, r0, lsl #8
    7288:	00000000 	andeq	r0, r0, r0
    728c:	15840000 	strne	r0, [r4]
    7290:	15860800 	strne	r0, [r6, #2048]	; 0x800
    7294:	00020800 	andeq	r0, r2, r0, lsl #16
    7298:	1586007d 	strne	r0, [r6, #125]	; 0x7d
    729c:	15b40800 	ldrne	r0, [r4, #2048]!	; 0x800
    72a0:	00020800 	andeq	r0, r2, r0, lsl #16
    72a4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    72b4:	15840000 	strne	r0, [r4]
    72b8:	158a0800 	strne	r0, [sl, #2048]	; 0x800
    72bc:	00010800 	andeq	r0, r1, r0, lsl #16
    72c0:	00158a50 	andseq	r8, r5, r0, asr sl
    72c4:	0015a008 	andseq	sl, r5, r8
    72c8:	f3000408 	vshl.u8	d0, d8, d0
    72cc:	a09f5001 	addsge	r5, pc, r1
    72d0:	a4080015 	strge	r0, [r8], #-21	; 0xffffffeb
    72d4:	01080015 	tsteq	r8, r5, lsl r0
    72d8:	15a45000 	strne	r5, [r4, #0]!
    72dc:	15b40800 	ldrne	r0, [r4, #2048]!	; 0x800
    72e0:	00040800 	andeq	r0, r4, r0, lsl #16
    72e4:	9f5001f3 	svcls	0x005001f3
	...
    72f0:	158a0001 	strne	r0, [sl, #1]
    72f4:	15940800 	ldrne	r0, [r4, #2048]	; 0x800
    72f8:	00010800 	andeq	r0, r1, r0, lsl #16
    72fc:	00000054 	andeq	r0, r0, r4, asr r0
    7300:	00000000 	andeq	r0, r0, r0
    7304:	0014f800 	andseq	pc, r4, r0, lsl #16
    7308:	0014fa08 	andseq	pc, r4, r8, lsl #20
    730c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7310:	0014fa00 	andseq	pc, r4, r0, lsl #20
    7314:	00158408 	andseq	r8, r5, r8, lsl #8
    7318:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    731c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    732c:	0014f800 	andseq	pc, r4, r0, lsl #16
    7330:	00150408 	andseq	r0, r5, r8, lsl #8
    7334:	50000108 	andpl	r0, r0, r8, lsl #2
    7338:	08001504 	stmdaeq	r0, {r2, r8, sl, ip}
    733c:	08001550 	stmdaeq	r0, {r4, r6, r8, sl, ip}
    7340:	01f30004 	mvnseq	r0, r4
    7344:	15509f50 	ldrbne	r9, [r0, #-3920]	; 0xfffff0b0
    7348:	15540800 	ldrbne	r0, [r4, #-2048]	; 0xfffff800
    734c:	00010800 	andeq	r0, r1, r0, lsl #16
    7350:	00155450 	andseq	r5, r5, r0, asr r4
    7354:	00158408 	andseq	r8, r5, r8, lsl #8
    7358:	f3000408 	vshl.u8	d0, d8, d0
    735c:	009f5001 	addseq	r5, pc, r1
	...
    7370:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    7374:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    7378:	01080015 	tsteq	r8, r5, lsl r0
    737c:	15045100 	strne	r5, [r4, #-256]	; 0xffffff00
    7380:	152e0800 	strne	r0, [lr, #-2048]!	; 0xfffff800
    7384:	00010800 	andeq	r0, r1, r0, lsl #16
    7388:	00152e54 	andseq	r2, r5, r4, asr lr
    738c:	00155008 	andseq	r5, r5, r8
    7390:	f3000408 	vshl.u8	d0, d8, d0
    7394:	509f5101 	addspl	r5, pc, r1, lsl #2
    7398:	52080015 	andpl	r0, r8, #21
    739c:	01080015 	tsteq	r8, r5, lsl r0
    73a0:	15525100 	ldrbne	r5, [r2, #-256]	; 0xffffff00
    73a4:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    73a8:	00010800 	andeq	r0, r1, r0, lsl #16
    73ac:	00156854 	andseq	r6, r5, r4, asr r8
    73b0:	00158408 	andseq	r8, r5, r8, lsl #8
    73b4:	f3000408 	vshl.u8	d0, d8, d0
    73b8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    73cc:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    73d0:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    73d4:	01080015 	tsteq	r8, r5, lsl r0
    73d8:	15045200 	strne	r5, [r4, #-512]	; 0xfffffe00
    73dc:	15380800 	ldrne	r0, [r8, #-2048]!	; 0xfffff800
    73e0:	00010800 	andeq	r0, r1, r0, lsl #16
    73e4:	00153856 	andseq	r3, r5, r6, asr r8
    73e8:	00155008 	andseq	r5, r5, r8
    73ec:	f3000408 	vshl.u8	d0, d8, d0
    73f0:	509f5201 	addspl	r5, pc, r1, lsl #4
    73f4:	57080015 	smladpl	r8, r5, r0, r0
    73f8:	01080015 	tsteq	r8, r5, lsl r0
    73fc:	15575200 	ldrbne	r5, [r7, #-512]	; 0xfffffe00
    7400:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    7404:	00010800 	andeq	r0, r1, r0, lsl #16
    7408:	00156856 	andseq	r6, r5, r6, asr r8
    740c:	00158408 	andseq	r8, r5, r8, lsl #8
    7410:	f3000408 	vshl.u8	d0, d8, d0
    7414:	009f5201 	addseq	r5, pc, r1, lsl #4
    7418:	00000000 	andeq	r0, r0, r0
    741c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    742c:	10080015 	andne	r0, r8, r5, lsl r0
    7430:	02080015 	andeq	r0, r8, #21
    7434:	109f3000 	addsne	r3, pc, r0
    7438:	22080015 	andcs	r0, r8, #21
    743c:	01080015 	tsteq	r8, r5, lsl r0
    7440:	15225300 	strne	r5, [r2, #-768]!	; 0xfffffd00
    7444:	15260800 	strne	r0, [r6, #-2048]!	; 0xfffff800
    7448:	00030800 	andeq	r0, r3, r0, lsl #16
    744c:	509f7c72 	addspl	r7, pc, r2, ror ip	; <UNPREDICTABLE>
    7450:	64080015 	strvs	r0, [r8], #-21	; 0xffffffeb
    7454:	02080015 	andeq	r0, r8, #21
    7458:	649f3000 	ldrvs	r3, [pc], #0	; 7460 <_Min_Heap_Size+0x6c60>
    745c:	66080015 			; <UNDEFINED> instruction: 0x66080015
    7460:	01080015 	tsteq	r8, r5, lsl r0
    7464:	15665300 	strbne	r5, [r6, #-768]!	; 0xfffffd00
    7468:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    746c:	00030800 	andeq	r0, r3, r0, lsl #16
    7470:	009f7c72 	addseq	r7, pc, r2, ror ip	; <UNPREDICTABLE>
    7474:	00000000 	andeq	r0, r0, r0
    7478:	02000000 	andeq	r0, r0, #0
    747c:	00000000 	andeq	r0, r0, r0
    7480:	00151000 	andseq	r1, r5, r0
    7484:	00153808 	andseq	r3, r5, r8, lsl #16
    7488:	56000108 	strpl	r0, [r0], -r8, lsl #2
    748c:	08001538 	stmdaeq	r0, {r3, r4, r5, r8, sl, ip}
    7490:	0800153a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, ip}
    7494:	01f30004 	mvnseq	r0, r4
    7498:	15649f52 	strbne	r9, [r4, #-3922]!	; 0xfffff0ae
    749c:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    74a0:	00010800 	andeq	r0, r1, r0, lsl #16
    74a4:	00000056 	andeq	r0, r0, r6, asr r0
    74a8:	00000000 	andeq	r0, r0, r0
    74ac:	00000200 	andeq	r0, r0, r0, lsl #4
    74b0:	10000000 	andne	r0, r0, r0
    74b4:	2e080015 	mcrcs	0, 0, r0, cr8, cr5, {0}
    74b8:	01080015 	tsteq	r8, r5, lsl r0
    74bc:	152e5400 	strne	r5, [lr, #-1024]!	; 0xfffffc00
    74c0:	153a0800 	ldrne	r0, [sl, #-2048]!	; 0xfffff800
    74c4:	00040800 	andeq	r0, r4, r0, lsl #16
    74c8:	9f5101f3 	svcls	0x005101f3
    74cc:	08001564 	stmdaeq	r0, {r2, r5, r6, r8, sl, ip}
    74d0:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
    74d4:	00540001 	subseq	r0, r4, r1
    74d8:	00000000 	andeq	r0, r0, r0
    74dc:	02000000 	andeq	r0, r0, #0
    74e0:	00000000 	andeq	r0, r0, r0
    74e4:	10000000 	andne	r0, r0, r0
    74e8:	22080015 	andcs	r0, r8, #21
    74ec:	01080015 	tsteq	r8, r5, lsl r0
    74f0:	15225300 	strne	r5, [r2, #-768]!	; 0xfffffd00
    74f4:	15260800 	strne	r0, [r6, #-2048]!	; 0xfffff800
    74f8:	00030800 	andeq	r0, r3, r0, lsl #16
    74fc:	649f7c72 	ldrvs	r7, [pc], #3186	; 7504 <_Min_Heap_Size+0x6d04>
    7500:	66080015 			; <UNDEFINED> instruction: 0x66080015
    7504:	01080015 	tsteq	r8, r5, lsl r0
    7508:	15665300 	strbne	r5, [r6, #-768]!	; 0xfffffd00
    750c:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    7510:	00030800 	andeq	r0, r3, r0, lsl #16
    7514:	009f7c72 	addseq	r7, pc, r2, ror ip	; <UNPREDICTABLE>
    7518:	00000000 	andeq	r0, r0, r0
    751c:	04000000 	streq	r0, [r0], #-0
    7520:	00000000 	andeq	r0, r0, r0
    7524:	10000000 	andne	r0, r0, r0
    7528:	22080015 	andcs	r0, r8, #21
    752c:	01080015 	tsteq	r8, r5, lsl r0
    7530:	15225300 	strne	r5, [r2, #-768]!	; 0xfffffd00
    7534:	15260800 	strne	r0, [r6, #-2048]!	; 0xfffff800
    7538:	00030800 	andeq	r0, r3, r0, lsl #16
    753c:	649f7c72 	ldrvs	r7, [pc], #3186	; 7544 <_Min_Heap_Size+0x6d44>
    7540:	66080015 			; <UNDEFINED> instruction: 0x66080015
    7544:	01080015 	tsteq	r8, r5, lsl r0
    7548:	15665300 	strbne	r5, [r6, #-768]!	; 0xfffffd00
    754c:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    7550:	00030800 	andeq	r0, r3, r0, lsl #16
    7554:	009f7c72 	addseq	r7, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    7560:	1a000000 	bne	7568 <_Min_Heap_Size+0x6d68>
    7564:	2a080015 	bcs	2075c0 <_Min_Heap_Size+0x206dc0>
    7568:	01080015 	tsteq	r8, r5, lsl r0
    756c:	15645100 	strbne	r5, [r4, #-256]!	; 0xffffff00
    7570:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    7574:	00010800 	andeq	r0, r1, r0, lsl #16
    7578:	00000051 	andeq	r0, r0, r1, asr r0
    757c:	00000000 	andeq	r0, r0, r0
    7580:	22000000 	andcs	r0, r0, #0
    7584:	34080015 	strcc	r0, [r8], #-21	; 0xffffffeb
    7588:	01080015 	tsteq	r8, r5, lsl r0
    758c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7598:	153a0000 	ldrne	r0, [sl, #-0]!
    759c:	15400800 	strbne	r0, [r0, #-2048]	; 0xfffff800
    75a0:	00010800 	andeq	r0, r1, r0, lsl #16
    75a4:	00156854 	andseq	r6, r5, r4, asr r8
    75a8:	00156e08 	andseq	r6, r5, r8, lsl #28
    75ac:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    75bc:	0800153a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, ip}
    75c0:	08001546 	stmdaeq	r0, {r1, r2, r6, r8, sl, ip}
    75c4:	68550001 	ldmdavs	r5, {r0}^
    75c8:	6c080015 	stcvs	0, cr0, [r8], {21}
    75cc:	01080015 	tsteq	r8, r5, lsl r0
    75d0:	00005500 	andeq	r5, r0, r0, lsl #10
    75d4:	00000000 	andeq	r0, r0, r0
    75d8:	14bc0000 	ldrtne	r0, [ip], #0
    75dc:	14be0800 	ldrtne	r0, [lr], #2048	; 0x800
    75e0:	00020800 	andeq	r0, r2, r0, lsl #16
    75e4:	14be007d 	ldrtne	r0, [lr], #125	; 0x7d
    75e8:	14f80800 	ldrbtne	r0, [r8], #2048	; 0x800
    75ec:	00020800 	andeq	r0, r2, r0, lsl #16
    75f0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7604:	080014bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip}
    7608:	080014c6 	stmdaeq	r0, {r1, r2, r6, r7, sl, ip}
    760c:	c6500001 	ldrbgt	r0, [r0], -r1
    7610:	d4080014 	strle	r0, [r8], #-20	; 0xffffffec
    7614:	01080014 	tsteq	r8, r4, lsl r0
    7618:	14d45400 	ldrbne	r5, [r4], #1024	; 0x400
    761c:	14e60800 	strbtne	r0, [r6], #2048	; 0x800
    7620:	00040800 	andeq	r0, r4, r0, lsl #16
    7624:	9f5001f3 	svcls	0x005001f3
    7628:	080014e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, sl, ip}
    762c:	080014ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, sl, ip}
    7630:	ea500001 	b	140763c <_Min_Heap_Size+0x1406e3c>
    7634:	f8080014 			; <UNDEFINED> instruction: 0xf8080014
    7638:	01080014 	tsteq	r8, r4, lsl r0
    763c:	00005400 	andeq	r5, r0, r0, lsl #8
    7640:	00000000 	andeq	r0, r0, r0
    7644:	00010000 	andeq	r0, r1, r0
    7648:	14c60000 	strbne	r0, [r6], #0
    764c:	14d40800 	ldrbne	r0, [r4], #2048	; 0x800
    7650:	00010800 	andeq	r0, r1, r0, lsl #16
    7654:	0014d454 	andseq	sp, r4, r4, asr r4
    7658:	0014e408 	andseq	lr, r4, r8, lsl #8
    765c:	f3000408 	vshl.u8	d0, d8, d0
    7660:	009f5001 	addseq	r5, pc, r1
	...
    7670:	0014ca00 	andseq	ip, r4, r0, lsl #20
    7674:	0014ce08 	andseq	ip, r4, r8, lsl #28
    7678:	53000108 	movwpl	r0, #264	; 0x108
    767c:	080014d2 	stmdaeq	r0, {r1, r4, r6, r7, sl, ip}
    7680:	080014da 	stmdaeq	r0, {r1, r3, r4, r6, r7, sl, ip}
    7684:	e2530001 	subs	r0, r3, #1
    7688:	e4080014 	str	r0, [r8], #-20	; 0xffffffec
    768c:	01080014 	tsteq	r8, r4, lsl r0
    7690:	00005300 	andeq	r5, r0, r0, lsl #6
    7694:	00000000 	andeq	r0, r0, r0
    7698:	00040000 	andeq	r0, r4, r0
    769c:	14c60000 	strbne	r0, [r6], #0
    76a0:	14d40800 	ldrbne	r0, [r4], #2048	; 0x800
    76a4:	00050800 	andeq	r0, r5, r0, lsl #16
    76a8:	1a370074 	bne	dc7880 <_Min_Heap_Size+0xdc7080>
    76ac:	0014d49f 	mulseq	r4, pc, r4	; <UNPREDICTABLE>
    76b0:	0014e608 	andseq	lr, r4, r8, lsl #12
    76b4:	f3000608 	vmax.u8	d0, d0, d8
    76b8:	1a375001 	bne	ddb6c4 <_Min_Heap_Size+0xddaec4>
    76bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    76c0:	00000000 	andeq	r0, r0, r0
    76c4:	00168000 	andseq	r8, r6, r0
    76c8:	00168208 	andseq	r8, r6, r8, lsl #4
    76cc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    76d0:	00168200 	andseq	r8, r6, r0, lsl #4
    76d4:	0016a808 	andseq	sl, r6, r8, lsl #16
    76d8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    76dc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    76e8:	80000000 	andhi	r0, r0, r0
    76ec:	87080016 	smladhi	r8, r6, r0, r0
    76f0:	01080016 	tsteq	r8, r6, lsl r0
    76f4:	16875000 	strne	r5, [r7], r0
    76f8:	16960800 	ldrne	r0, [r6], r0, lsl #16
    76fc:	00010800 	andeq	r0, r1, r0, lsl #16
    7700:	00169654 	andseq	r9, r6, r4, asr r6
    7704:	0016a808 	andseq	sl, r6, r8, lsl #16
    7708:	f3000408 	vshl.u8	d0, d8, d0
    770c:	009f5001 	addseq	r5, pc, r1
	...
    7718:	8a000000 	bhi	7720 <_Min_Heap_Size+0x6f20>
    771c:	96080016 			; <UNDEFINED> instruction: 0x96080016
    7720:	01080016 	tsteq	r8, r6, lsl r0
    7724:	16965000 	ldrne	r5, [r6], r0
    7728:	16a20800 	strtne	r0, [r2], r0, lsl #16
    772c:	00010800 	andeq	r0, r1, r0, lsl #16
    7730:	00000055 	andeq	r0, r0, r5, asr r0
    7734:	00000000 	andeq	r0, r0, r0
    7738:	8a000100 	bhi	7b40 <_Min_Heap_Size+0x7340>
    773c:	a2080016 	andge	r0, r8, #22
    7740:	01080016 	tsteq	r8, r6, lsl r0
    7744:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7754:	00020000 	andeq	r0, r2, r0
    7758:	0000007d 	andeq	r0, r0, sp, ror r0
    775c:	00000000 	andeq	r0, r0, r0
    7760:	00020000 	andeq	r0, r2, r0
    7764:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    777c:	00010000 	andeq	r0, r1, r0
    7780:	00000050 	andeq	r0, r0, r0, asr r0
    7784:	00000000 	andeq	r0, r0, r0
    7788:	f3000400 	vshl.u8	d0, d0, d0
    778c:	009f5001 	addseq	r5, pc, r1
    7790:	00000000 	andeq	r0, r0, r0
    7794:	01000000 	mrseq	r0, (UNDEF: 0)
    7798:	00005000 	andeq	r5, r0, r0
    779c:	00000000 	andeq	r0, r0, r0
    77a0:	00040000 	andeq	r0, r4, r0
    77a4:	9f5001f3 	svcls	0x005001f3
	...
    77b0:	00000001 	andeq	r0, r0, r1
	...
    77c0:	9f300002 	svcls	0x00300002
	...
    77cc:	00500001 	subseq	r0, r0, r1
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	02000000 	andeq	r0, r0, #0
    77d8:	009f3000 	addseq	r3, pc, r0
    77dc:	00000000 	andeq	r0, r0, r0
    77e0:	01000000 	mrseq	r0, (UNDEF: 0)
    77e4:	00005000 	andeq	r5, r0, r0
    77e8:	00000000 	andeq	r0, r0, r0
    77ec:	00010000 	andeq	r0, r1, r0
	...
    77f8:	00550001 	subseq	r0, r5, r1
    77fc:	00000000 	andeq	r0, r0, r0
    7800:	dc000000 	stcle	0, cr0, [r0], {-0}
    7804:	de080015 	mcrle	0, 0, r0, cr8, cr5, {0}
    7808:	02080015 	andeq	r0, r8, #21
    780c:	de007d00 	cdple	13, 0, cr7, cr0, cr0, {0}
    7810:	28080015 	stmdacs	r8, {r0, r2, r4}
    7814:	02080016 	andeq	r0, r8, #22
    7818:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    7828:	0015dc00 	andseq	sp, r5, r0, lsl #24
    782c:	0015e408 	andseq	lr, r5, r8, lsl #8
    7830:	50000108 	andpl	r0, r0, r8, lsl #2
    7834:	080015e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, ip}
    7838:	0800161a 	stmdaeq	r0, {r1, r3, r4, r9, sl, ip}
    783c:	1a540001 	bne	1507848 <_Min_Heap_Size+0x1507048>
    7840:	28080016 	stmdacs	r8, {r1, r2, r4}
    7844:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7848:	5001f300 	andpl	pc, r1, r0, lsl #6
    784c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    785c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7868:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    786c:	00000008 	andeq	r0, r0, r8
    7870:	00000000 	andeq	r0, r0, r0
    7874:	00162800 	andseq	r2, r6, r0, lsl #16
    7878:	00162a08 	andseq	r2, r6, r8, lsl #20
    787c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7880:	00162a00 	andseq	r2, r6, r0, lsl #20
    7884:	00165c08 	andseq	r5, r6, r8, lsl #24
    7888:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    788c:	00000008 	andeq	r0, r0, r8
    7890:	00000000 	andeq	r0, r0, r0
    7894:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    78a8:	30000200 	andcc	r0, r0, r0, lsl #4
    78ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    78b0:	00000000 	andeq	r0, r0, r0
    78b4:	53000100 	movwpl	r0, #256	; 0x100
	...
    78c0:	00530001 	subseq	r0, r3, r1
    78c4:	00000000 	andeq	r0, r0, r0
    78c8:	01000000 	mrseq	r0, (UNDEF: 0)
    78cc:	00005100 	andeq	r5, r0, r0, lsl #2
    78d0:	00000000 	andeq	r0, r0, r0
    78d4:	00010000 	andeq	r0, r1, r0
    78d8:	00000053 	andeq	r0, r0, r3, asr r0
    78dc:	00000000 	andeq	r0, r0, r0
    78e0:	53000100 	movwpl	r0, #256	; 0x100
	...
    78ec:	00000102 	andeq	r0, r0, r2, lsl #2
	...
    78fc:	00020000 	andeq	r0, r2, r0
    7900:	00009f30 	andeq	r9, r0, r0, lsr pc
    7904:	00000000 	andeq	r0, r0, r0
    7908:	00020000 	andeq	r0, r2, r0
    790c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7910:	00000000 	andeq	r0, r0, r0
    7914:	00010000 	andeq	r0, r1, r0
    7918:	00000053 	andeq	r0, r0, r3, asr r0
    791c:	00000000 	andeq	r0, r0, r0
    7920:	30000200 	andcc	r0, r0, r0, lsl #4
    7924:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7928:	00000000 	andeq	r0, r0, r0
    792c:	53000100 	movwpl	r0, #256	; 0x100
	...
    7938:	00000102 	andeq	r0, r0, r2, lsl #2
	...
    7948:	9f320002 	svcls	0x00320002
	...
    7954:	9f320002 	svcls	0x00320002
	...
    7960:	00520001 	subseq	r0, r2, r1
    7964:	00000000 	andeq	r0, r0, r0
    7968:	02000000 	andeq	r0, r0, #0
    796c:	009f3200 	addseq	r3, pc, r0, lsl #4
    7970:	00000000 	andeq	r0, r0, r0
    7974:	02000000 	andeq	r0, r0, #0
    7978:	00000001 	andeq	r0, r0, r1
	...
    7984:	30000200 	andcc	r0, r0, r0, lsl #4
    7988:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    798c:	00000000 	andeq	r0, r0, r0
    7990:	30000200 	andcc	r0, r0, r0, lsl #4
    7994:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7998:	00000000 	andeq	r0, r0, r0
    799c:	71000800 	tstvc	r0, r0, lsl #16
    79a0:	24ed0900 	strbtcs	r0, [sp], #2304	; 0x900
    79a4:	009f2533 	addseq	r2, pc, r3, lsr r5	; <UNPREDICTABLE>
    79a8:	00000000 	andeq	r0, r0, r0
    79ac:	02000000 	andeq	r0, r0, #0
    79b0:	00000001 	andeq	r0, r0, r1
	...
    79bc:	02000000 	andeq	r0, r0, #0
    79c0:	009f3200 	addseq	r3, pc, r0, lsl #4
    79c4:	00000000 	andeq	r0, r0, r0
    79c8:	02000000 	andeq	r0, r0, #0
    79cc:	009f3200 	addseq	r3, pc, r0, lsl #4
    79d0:	00000000 	andeq	r0, r0, r0
    79d4:	01000000 	mrseq	r0, (UNDEF: 0)
    79d8:	00005200 	andeq	r5, r0, r0, lsl #4
    79dc:	00000000 	andeq	r0, r0, r0
    79e0:	00010000 	andeq	r0, r1, r0
    79e4:	00000052 	andeq	r0, r0, r2, asr r0
	...
    79fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7a08:	10030005 	andne	r0, r3, r5
    7a0c:	00200000 	eoreq	r0, r0, r0
    7a10:	00000000 	andeq	r0, r0, r0
    7a14:	01000000 	mrseq	r0, (UNDEF: 0)
    7a18:	00005000 	andeq	r5, r0, r0
    7a1c:	00000000 	andeq	r0, r0, r0
    7a20:	00040000 	andeq	r0, r4, r0
    7a24:	9f5001f3 	svcls	0x005001f3
	...
    7a30:	00010102 	andeq	r0, r1, r2, lsl #2
	...
    7a3c:	00020000 	andeq	r0, r2, r0
    7a40:	00009f32 	andeq	r9, r0, r2, lsr pc
    7a44:	00000000 	andeq	r0, r0, r0
    7a48:	00020000 	andeq	r0, r2, r0
    7a4c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	00020000 	andeq	r0, r2, r0
    7a58:	00009f32 	andeq	r9, r0, r2, lsr pc
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7a6c:	00500001 	subseq	r0, r0, r1
    7a70:	00000000 	andeq	r0, r0, r0
    7a74:	20000000 	andcs	r0, r0, r0
    7a78:	24080017 	strcs	r0, [r8], #-23	; 0xffffffe9
    7a7c:	02080017 	andeq	r0, r8, #23
    7a80:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
    7a84:	9c080017 	stcls	0, cr0, [r8], {23}
    7a88:	02080017 	andeq	r0, r8, #23
    7a8c:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    7a9c:	20000000 	andcs	r0, r0, r0
    7aa0:	3a080017 	bcc	207b04 <_Min_Heap_Size+0x207304>
    7aa4:	01080017 	tsteq	r8, r7, lsl r0
    7aa8:	173a5000 	ldrne	r5, [sl, -r0]!
    7aac:	17740800 	ldrbne	r0, [r4, -r0, lsl #16]!
    7ab0:	00010800 	andeq	r0, r1, r0, lsl #16
    7ab4:	00177458 	andseq	r7, r7, r8, asr r4
    7ab8:	00177a08 	andseq	r7, r7, r8, lsl #20
    7abc:	f3000408 	vshl.u8	d0, d8, d0
    7ac0:	7a9f5001 	bvc	fe7dbacc <_estack+0xde7da88c>
    7ac4:	9c080017 	stcls	0, cr0, [r8], {23}
    7ac8:	01080017 	tsteq	r8, r7, lsl r0
    7acc:	00005000 	andeq	r5, r0, r0
	...
    7adc:	17200000 	strne	r0, [r0, -r0]!
    7ae0:	173a0800 	ldrne	r0, [sl, -r0, lsl #16]!
    7ae4:	00010800 	andeq	r0, r1, r0, lsl #16
    7ae8:	00173a51 	andseq	r3, r7, r1, asr sl
    7aec:	00177408 	andseq	r7, r7, r8, lsl #8
    7af0:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    7af4:	08001774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, ip}
    7af8:	0800177a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl, ip}
    7afc:	01f30004 	mvnseq	r0, r4
    7b00:	177a9f51 			; <UNDEFINED> instruction: 0x177a9f51
    7b04:	179c0800 	ldrne	r0, [ip, r0, lsl #16]
    7b08:	00010800 	andeq	r0, r1, r0, lsl #16
    7b0c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    7b18:	20000000 	andcs	r0, r0, r0
    7b1c:	3a080017 	bcc	207b80 <_Min_Heap_Size+0x207380>
    7b20:	01080017 	tsteq	r8, r7, lsl r0
    7b24:	173a5200 	ldrne	r5, [sl, -r0, lsl #4]!
    7b28:	177a0800 	ldrbne	r0, [sl, -r0, lsl #16]!
    7b2c:	00040800 	andeq	r0, r4, r0, lsl #16
    7b30:	9f5201f3 	svcls	0x005201f3
    7b34:	0800177a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl, ip}
    7b38:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
    7b3c:	00520001 	subseq	r0, r2, r1
	...
    7b4c:	20000000 	andcs	r0, r0, r0
    7b50:	3a080017 	bcc	207bb4 <_Min_Heap_Size+0x2073b4>
    7b54:	01080017 	tsteq	r8, r7, lsl r0
    7b58:	173a5300 	ldrne	r5, [sl, -r0, lsl #6]!
    7b5c:	17740800 	ldrbne	r0, [r4, -r0, lsl #16]!
    7b60:	00010800 	andeq	r0, r1, r0, lsl #16
    7b64:	00177455 	andseq	r7, r7, r5, asr r4
    7b68:	00177a08 	andseq	r7, r7, r8, lsl #20
    7b6c:	f3000408 	vshl.u8	d0, d8, d0
    7b70:	7a9f5301 	bvc	fe7dc77c <_estack+0xde7db53c>
    7b74:	9c080017 	stcls	0, cr0, [r8], {23}
    7b78:	01080017 	tsteq	r8, r7, lsl r0
    7b7c:	00005300 	andeq	r5, r0, r0, lsl #6
    7b80:	00000000 	andeq	r0, r0, r0
    7b84:	00010000 	andeq	r0, r1, r0
    7b88:	00000000 	andeq	r0, r0, r0
    7b8c:	08001724 	stmdaeq	r0, {r2, r5, r8, r9, sl, ip}
    7b90:	0800173a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, ip}
    7b94:	9f300002 	svcls	0x00300002
    7b98:	0800173a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, ip}
    7b9c:	08001774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, ip}
    7ba0:	7a560001 	bvc	1587bac <_Min_Heap_Size+0x15873ac>
    7ba4:	90080017 	andls	r0, r8, r7, lsl r0
    7ba8:	02080017 	andeq	r0, r8, #23
    7bac:	009f3000 	addseq	r3, pc, r0
    7bb0:	00000000 	andeq	r0, r0, r0
    7bb4:	02000000 	andeq	r0, r0, #0
    7bb8:	01010000 	mrseq	r0, (UNDEF: 1)
    7bbc:	00000000 	andeq	r0, r0, r0
    7bc0:	00172400 	andseq	r2, r7, r0, lsl #8
    7bc4:	00173a08 	andseq	r3, r7, r8, lsl #20
    7bc8:	30000208 	andcc	r0, r0, r8, lsl #4
    7bcc:	0017449f 	mulseq	r7, pc, r4	; <UNPREDICTABLE>
    7bd0:	00175608 	andseq	r5, r7, r8, lsl #12
    7bd4:	52000108 	andpl	r0, r0, #8, 2
    7bd8:	08001756 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, sl, ip}
    7bdc:	0800175a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, sl, ip}
    7be0:	7f720003 	svcvc	0x00720003
    7be4:	00175a9f 	mulseq	r7, pc, sl	; <UNPREDICTABLE>
    7be8:	00177408 	andseq	r7, r7, r8, lsl #8
    7bec:	59000108 	stmdbpl	r0, {r3, r8}
    7bf0:	0800177a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl, ip}
    7bf4:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
    7bf8:	9f300002 	svcls	0x00300002
	...
    7c04:	00000002 	andeq	r0, r0, r2
    7c08:	17240000 	strne	r0, [r4, -r0]!
    7c0c:	173a0800 	ldrne	r0, [sl, -r0, lsl #16]!
    7c10:	00020800 	andeq	r0, r2, r0, lsl #16
    7c14:	17629f30 			; <UNDEFINED> instruction: 0x17629f30
    7c18:	17650800 	strbne	r0, [r5, -r0, lsl #16]!
    7c1c:	00010800 	andeq	r0, r1, r0, lsl #16
    7c20:	00177a50 	andseq	r7, r7, r0, asr sl
    7c24:	00179c08 	andseq	r9, r7, r8, lsl #24
    7c28:	30000208 	andcc	r0, r0, r8, lsl #4
    7c2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7c30:	00000000 	andeq	r0, r0, r0
    7c34:	00000200 	andeq	r0, r0, r0, lsl #4
    7c38:	24000000 	strcs	r0, [r0], #-0
    7c3c:	3a080017 	bcc	207ca0 <_Min_Heap_Size+0x2074a0>
    7c40:	02080017 	andeq	r0, r8, #23
    7c44:	3a9f3000 	bcc	fe7d3c4c <_estack+0xde7d2a0c>
    7c48:	74080017 	strvc	r0, [r8], #-23	; 0xffffffe9
    7c4c:	01080017 	tsteq	r8, r7, lsl r0
    7c50:	177a5400 	ldrbne	r5, [sl, -r0, lsl #8]!
    7c54:	179c0800 	ldrne	r0, [ip, r0, lsl #16]
    7c58:	00020800 	andeq	r0, r2, r0, lsl #16
    7c5c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
    7c68:	180e0800 	stmdane	lr, {fp}
    7c6c:	00020800 	andeq	r0, r2, r0, lsl #16
    7c70:	180e007d 	stmdane	lr, {r0, r2, r3, r4, r5, r6}
    7c74:	19b80800 	ldmibne	r8!, {fp}
    7c78:	00020800 	andeq	r0, r2, r0, lsl #16
    7c7c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    7c90:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
    7c94:	08001858 	stmdaeq	r0, {r3, r4, r6, fp, ip}
    7c98:	58500001 	ldmdapl	r0, {r0}^
    7c9c:	0e080018 	mcreq	0, 0, r0, cr8, cr8, {0}
    7ca0:	01080019 	tsteq	r8, r9, lsl r0
    7ca4:	190e5500 	stmdbne	lr, {r8, sl, ip, lr}
    7ca8:	19220800 	stmdbne	r2!, {fp}
    7cac:	00040800 	andeq	r0, r4, r0, lsl #16
    7cb0:	9f5001f3 	svcls	0x005001f3
    7cb4:	08001922 	stmdaeq	r0, {r1, r5, r8, fp, ip}
    7cb8:	08001932 	stmdaeq	r0, {r1, r4, r5, r8, fp, ip}
    7cbc:	32550001 	subscc	r0, r5, #1
    7cc0:	b8080019 	stmdalt	r8, {r0, r3, r4}
    7cc4:	04080019 	streq	r0, [r8], #-25	; 0xffffffe7
    7cc8:	5001f300 	andpl	pc, r1, r0, lsl #6
    7ccc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7cd8:	00180c00 	andseq	r0, r8, r0, lsl #24
    7cdc:	00185b08 	andseq	r5, r8, r8, lsl #22
    7ce0:	51000108 	tstpl	r0, r8, lsl #2
    7ce4:	0800185b 	stmdaeq	r0, {r0, r1, r3, r4, r6, fp, ip}
    7ce8:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
    7cec:	00560001 	subseq	r0, r6, r1
    7cf0:	00000000 	andeq	r0, r0, r0
    7cf4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7d00:	12000000 	andne	r0, r0, #0
    7d04:	0e080018 	mcreq	0, 0, r0, cr8, cr8, {0}
    7d08:	02080019 	andeq	r0, r8, #25
    7d0c:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
    7d10:	10080019 	andne	r0, r8, r9, lsl r0
    7d14:	01080019 	tsteq	r8, r9, lsl r0
    7d18:	19105000 	ldmdbne	r0, {ip, lr}
    7d1c:	19220800 	stmdbne	r2!, {fp}
    7d20:	00010800 	andeq	r0, r1, r0, lsl #16
    7d24:	00192255 	andseq	r2, r9, r5, asr r2
    7d28:	00193208 	andseq	r3, r9, r8, lsl #4
    7d2c:	30000208 	andcc	r0, r0, r8, lsl #4
    7d30:	0019329f 	mulseq	r9, pc, r2	; <UNPREDICTABLE>
    7d34:	00193408 	andseq	r3, r9, r8, lsl #8
    7d38:	50000108 	andpl	r0, r0, r8, lsl #2
    7d3c:	08001934 	stmdaeq	r0, {r2, r4, r5, r8, fp, ip}
    7d40:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
    7d44:	00550001 	subseq	r0, r5, r1
    7d48:	00000000 	andeq	r0, r0, r0
    7d4c:	01000000 	mrseq	r0, (UNDEF: 0)
    7d50:	01010101 	tsteq	r1, r1, lsl #2
    7d54:	00000000 	andeq	r0, r0, r0
    7d58:	00181200 	andseq	r1, r8, r0, lsl #4
    7d5c:	0018f408 	andseq	pc, r8, r8, lsl #8
    7d60:	30000208 	andcc	r0, r0, r8, lsl #4
    7d64:	0018f49f 	mulseq	r8, pc, r4	; <UNPREDICTABLE>
    7d68:	00191e08 	andseq	r1, r9, r8, lsl #28
    7d6c:	40000208 	andmi	r0, r0, r8, lsl #4
    7d70:	00191e9f 	mulseq	r9, pc, lr	; <UNPREDICTABLE>
    7d74:	00192208 	andseq	r2, r9, r8, lsl #4
    7d78:	30000208 	andcc	r0, r0, r8, lsl #4
    7d7c:	0019229f 	mulseq	r9, pc, r2	; <UNPREDICTABLE>
    7d80:	00193408 	andseq	r3, r9, r8, lsl #8
    7d84:	40000208 	andmi	r0, r0, r8, lsl #4
    7d88:	0019349f 	mulseq	r9, pc, r4	; <UNPREDICTABLE>
    7d8c:	0019b808 	andseq	fp, r9, r8, lsl #16
    7d90:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    7d9c:	01050502 	tsteq	r5, r2, lsl #10
    7da0:	01010101 	tsteq	r1, r1, lsl #2
    7da4:	01010101 	tsteq	r1, r1, lsl #2
    7da8:	01010101 	tsteq	r1, r1, lsl #2
    7dac:	01010101 	tsteq	r1, r1, lsl #2
    7db0:	01010101 	tsteq	r1, r1, lsl #2
    7db4:	01010101 	tsteq	r1, r1, lsl #2
    7db8:	01010101 	tsteq	r1, r1, lsl #2
    7dbc:	00000001 	andeq	r0, r0, r1
    7dc0:	00000000 	andeq	r0, r0, r0
    7dc4:	18120000 	ldmdane	r2, {}	; <UNPREDICTABLE>
    7dc8:	18120800 	ldmdane	r2, {fp}
    7dcc:	00010800 	andeq	r0, r1, r0, lsl #16
    7dd0:	00181250 	andseq	r1, r8, r0, asr r2
    7dd4:	00181808 	andseq	r1, r8, r8, lsl #16
    7dd8:	70000308 	andvc	r0, r0, r8, lsl #6
    7ddc:	18189f04 	ldmdane	r8, {r2, r8, r9, sl, fp, ip, pc}
    7de0:	181c0800 	ldmdane	ip, {fp}
    7de4:	00030800 	andeq	r0, r3, r0, lsl #16
    7de8:	1c9f0870 	ldcne	8, cr0, [pc], {112}	; 0x70
    7dec:	20080018 	andcs	r0, r8, r8, lsl r0
    7df0:	03080018 	movweq	r0, #32792	; 0x8018
    7df4:	9f0c7000 	svcls	0x000c7000
    7df8:	08001820 	stmdaeq	r0, {r5, fp, ip}
    7dfc:	08001824 	stmdaeq	r0, {r2, r5, fp, ip}
    7e00:	10700003 	rsbsne	r0, r0, r3
    7e04:	0018249f 	mulseq	r8, pc, r4	; <UNPREDICTABLE>
    7e08:	00182808 	andseq	r2, r8, r8, lsl #16
    7e0c:	70000308 	andvc	r0, r0, r8, lsl #6
    7e10:	18289f14 	stmdane	r8!, {r2, r4, r8, r9, sl, fp, ip, pc}
    7e14:	182c0800 	stmdane	ip!, {fp}
    7e18:	00030800 	andeq	r0, r3, r0, lsl #16
    7e1c:	2c9f1870 	ldccs	8, cr1, [pc], {112}	; 0x70
    7e20:	30080018 	andcc	r0, r8, r8, lsl r0
    7e24:	03080018 	movweq	r0, #32792	; 0x8018
    7e28:	9f1c7000 	svcls	0x001c7000
    7e2c:	08001830 	stmdaeq	r0, {r4, r5, fp, ip}
    7e30:	08001834 	stmdaeq	r0, {r2, r4, r5, fp, ip}
    7e34:	20700003 	rsbscs	r0, r0, r3
    7e38:	0018349f 	mulseq	r8, pc, r4	; <UNPREDICTABLE>
    7e3c:	00183808 	andseq	r3, r8, r8, lsl #16
    7e40:	70000308 	andvc	r0, r0, r8, lsl #6
    7e44:	18389f24 	ldmdane	r8!, {r2, r5, r8, r9, sl, fp, ip, pc}
    7e48:	183c0800 	ldmdane	ip!, {fp}
    7e4c:	00030800 	andeq	r0, r3, r0, lsl #16
    7e50:	3c9f2870 	ldccc	8, cr2, [pc], {112}	; 0x70
    7e54:	40080018 	andmi	r0, r8, r8, lsl r0
    7e58:	03080018 	movweq	r0, #32792	; 0x8018
    7e5c:	9f2c7000 	svcls	0x002c7000
    7e60:	08001840 	stmdaeq	r0, {r6, fp, ip}
    7e64:	08001844 	stmdaeq	r0, {r2, r6, fp, ip}
    7e68:	30700003 	rsbscc	r0, r0, r3
    7e6c:	0018449f 	mulseq	r8, pc, r4	; <UNPREDICTABLE>
    7e70:	00184808 	andseq	r4, r8, r8, lsl #16
    7e74:	70000308 	andvc	r0, r0, r8, lsl #6
    7e78:	18489f34 	stmdane	r8, {r2, r4, r5, r8, r9, sl, fp, ip, pc}^
    7e7c:	184c0800 	stmdane	ip, {fp}^
    7e80:	00030800 	andeq	r0, r3, r0, lsl #16
    7e84:	4c9f3870 	ldcmi	8, cr3, [pc], {112}	; 0x70
    7e88:	50080018 	andpl	r0, r8, r8, lsl r0
    7e8c:	03080018 	movweq	r0, #32792	; 0x8018
    7e90:	9f3c7000 	svcls	0x003c7000
    7e94:	08001850 	stmdaeq	r0, {r4, r6, fp, ip}
    7e98:	08001858 	stmdaeq	r0, {r3, r4, r6, fp, ip}
    7e9c:	c0700004 	rsbsgt	r0, r0, r4
    7ea0:	18589f00 	ldmdane	r8, {r8, r9, sl, fp, ip, pc}^
    7ea4:	190e0800 	stmdbne	lr, {fp}
    7ea8:	00040800 	andeq	r0, r4, r0, lsl #16
    7eac:	9f00c075 	svcls	0x0000c075
    7eb0:	0800190e 	stmdaeq	r0, {r1, r2, r3, r8, fp, ip}
    7eb4:	08001922 	stmdaeq	r0, {r1, r5, r8, fp, ip}
    7eb8:	01f30006 	mvnseq	r0, r6
    7ebc:	9f402350 	svcls	0x00402350
    7ec0:	08001922 	stmdaeq	r0, {r1, r5, r8, fp, ip}
    7ec4:	08001932 	stmdaeq	r0, {r1, r4, r5, r8, fp, ip}
    7ec8:	c0750004 	rsbsgt	r0, r5, r4
    7ecc:	19329f00 	ldmdbne	r2!, {r8, r9, sl, fp, ip, pc}
    7ed0:	19b80800 	ldmibne	r8!, {fp}
    7ed4:	00060800 	andeq	r0, r6, r0, lsl #16
    7ed8:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    7edc:	00009f40 	andeq	r9, r0, r0, asr #30
    7ee0:	00000000 	andeq	r0, r0, r0
    7ee4:	17b40000 	ldrne	r0, [r4, r0]!
    7ee8:	17b60800 	ldrne	r0, [r6, r0, lsl #16]!
    7eec:	00020800 	andeq	r0, r2, r0, lsl #16
    7ef0:	17b6007d 			; <UNDEFINED> instruction: 0x17b6007d
    7ef4:	17bc0800 	ldrne	r0, [ip, r0, lsl #16]!
    7ef8:	00020800 	andeq	r0, r2, r0, lsl #16
    7efc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7f08:	17b40000 	ldrne	r0, [r4, r0]!
    7f0c:	17b90800 	ldrne	r0, [r9, r0, lsl #16]!
    7f10:	00010800 	andeq	r0, r1, r0, lsl #16
    7f14:	0017b950 	andseq	fp, r7, r0, asr r9
    7f18:	0017bc08 	andseq	fp, r7, r8, lsl #24
    7f1c:	f3000408 	vshl.u8	d0, d8, d0
    7f20:	009f5001 	addseq	r5, pc, r1
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	01000000 	mrseq	r0, (UNDEF: 0)
    7f2c:	b6000000 	strlt	r0, [r0], -r0
    7f30:	ba080017 	blt	207f94 <_Min_Heap_Size+0x207794>
    7f34:	02080017 	andeq	r0, r8, #23
    7f38:	ba9f3100 	blt	fe7d4340 <_estack+0xde7d3100>
    7f3c:	bc080017 	stclt	0, cr0, [r8], {23}
    7f40:	01080017 	tsteq	r8, r7, lsl r0
    7f44:	00005000 	andeq	r5, r0, r0
    7f48:	00000000 	andeq	r0, r0, r0
    7f4c:	179c0000 	ldrne	r0, [ip, r0]
    7f50:	179e0800 	ldrne	r0, [lr, r0, lsl #16]
    7f54:	00020800 	andeq	r0, r2, r0, lsl #16
    7f58:	179e007d 			; <UNDEFINED> instruction: 0x179e007d
    7f5c:	17b40800 	ldrne	r0, [r4, r0, lsl #16]!
    7f60:	00020800 	andeq	r0, r2, r0, lsl #16
    7f64:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7f74:	179c0000 	ldrne	r0, [ip, r0]
    7f78:	17a40800 	strne	r0, [r4, r0, lsl #16]!
    7f7c:	00010800 	andeq	r0, r1, r0, lsl #16
    7f80:	0017a450 	andseq	sl, r7, r0, asr r4
    7f84:	0017a708 	andseq	sl, r7, r8, lsl #14
    7f88:	51000108 	tstpl	r0, r8, lsl #2
    7f8c:	080017a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, r9, sl, ip}
    7f90:	080017b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl, ip}
    7f94:	b0540001 	subslt	r0, r4, r1
    7f98:	b4080017 	strlt	r0, [r8], #-23	; 0xffffffe9
    7f9c:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    7fa0:	5001f300 	andpl	pc, r1, r0, lsl #6
    7fa4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7fb0:	0016e800 	andseq	lr, r6, r0, lsl #16
    7fb4:	0016ee08 	andseq	lr, r6, r8, lsl #28
    7fb8:	50000108 	andpl	r0, r0, r8, lsl #2
    7fbc:	080016ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl, ip}
    7fc0:	0800171e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, ip}
    7fc4:	01f30004 	mvnseq	r0, r4
    7fc8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7fd4:	080016ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip}
    7fd8:	0800171e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, ip}
    7fdc:	00530001 	subseq	r0, r3, r1
	...
    7ff8:	f2000000 	vhadd.s8	d0, d0, d0
    7ffc:	0c080016 	stceq	0, cr0, [r8], {22}
    8000:	01080017 	tsteq	r8, r7, lsl r0
    8004:	170c5000 	strne	r5, [ip, -r0]
    8008:	170e0800 	strne	r0, [lr, -r0, lsl #16]
    800c:	000a0800 	andeq	r0, sl, r0, lsl #16
    8010:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    8014:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    8018:	170e9f1a 	smladne	lr, sl, pc, r9	; <UNPREDICTABLE>
    801c:	17100800 	ldrne	r0, [r0, -r0, lsl #16]
    8020:	00010800 	andeq	r0, r1, r0, lsl #16
    8024:	00171050 	andseq	r1, r7, r0, asr r0
    8028:	00171208 	andseq	r1, r7, r8, lsl #4
    802c:	f3000a08 	vpmax.u8	d0, d0, d8
    8030:	25405001 	strbcs	r5, [r0, #-1]
    8034:	1af8000a 	bne	ffe08064 <_estack+0xdfe06e24>
    8038:	0017129f 	mulseq	r7, pc, r2	; <UNPREDICTABLE>
    803c:	00171408 	andseq	r1, r7, r8, lsl #8
    8040:	50000108 	andpl	r0, r0, r8, lsl #2
    8044:	08001714 	stmdaeq	r0, {r2, r4, r8, r9, sl, ip}
    8048:	08001716 	stmdaeq	r0, {r1, r2, r4, r8, r9, sl, ip}
    804c:	01f3000a 	mvnseq	r0, sl
    8050:	0a254050 	beq	958198 <_Min_Heap_Size+0x957998>
    8054:	9f1af800 	svcls	0x001af800
    8058:	08001716 	stmdaeq	r0, {r1, r2, r4, r8, r9, sl, ip}
    805c:	08001718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip}
    8060:	18500001 	ldmdane	r0, {r0}^
    8064:	1a080017 	bne	2080c8 <_Min_Heap_Size+0x2078c8>
    8068:	0a080017 	beq	2080cc <_Min_Heap_Size+0x2078cc>
    806c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8070:	000a2540 	andeq	r2, sl, r0, asr #10
    8074:	1a9f1af8 	bne	fe7cec5c <_estack+0xde7cda1c>
    8078:	1c080017 	stcne	0, cr0, [r8], {23}
    807c:	01080017 	tsteq	r8, r7, lsl r0
    8080:	171c5000 	ldrne	r5, [ip, -r0]
    8084:	171e0800 	ldrne	r0, [lr, -r0, lsl #16]
    8088:	000a0800 	andeq	r0, sl, r0, lsl #16
    808c:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    8090:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    8094:	00009f1a 	andeq	r9, r0, sl, lsl pc
    8098:	00000000 	andeq	r0, r0, r0
    809c:	16bc0000 	ldrtne	r0, [ip], r0
    80a0:	16be0800 	ldrtne	r0, [lr], r0, lsl #16
    80a4:	00020800 	andeq	r0, r2, r0, lsl #16
    80a8:	16be007d 	sxtahne	r0, lr, sp
    80ac:	16e60800 	strbtne	r0, [r6], r0, lsl #16
    80b0:	00020800 	andeq	r0, r2, r0, lsl #16
    80b4:	16e6087d 	uxtabne	r0, r6, sp, ror #16
    80b8:	16e80800 	strbtne	r0, [r8], r0, lsl #16
    80bc:	00020800 	andeq	r0, r2, r0, lsl #16
    80c0:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    80cc:	16bc0000 	ldrtne	r0, [ip], r0
    80d0:	16dc0800 	ldrbne	r0, [ip], r0, lsl #16
    80d4:	00010800 	andeq	r0, r1, r0, lsl #16
    80d8:	0016dc50 	andseq	sp, r6, r0, asr ip
    80dc:	0016e808 	andseq	lr, r6, r8, lsl #16
    80e0:	f3000408 	vshl.u8	d0, d8, d0
    80e4:	009f5001 	addseq	r5, pc, r1
    80e8:	00000000 	andeq	r0, r0, r0
    80ec:	01000000 	mrseq	r0, (UNDEF: 0)
    80f0:	00000000 	andeq	r0, r0, r0
    80f4:	0016c200 	andseq	ip, r6, r0, lsl #4
    80f8:	0016e008 	andseq	lr, r6, r8
    80fc:	30000208 	andcc	r0, r0, r8, lsl #4
    8100:	0016e09f 	mulseq	r6, pc, r0	; <UNPREDICTABLE>
    8104:	0016e408 	andseq	lr, r6, r8, lsl #8
    8108:	70000808 	andvc	r0, r0, r8, lsl #16
    810c:	73244000 			; <UNDEFINED> instruction: 0x73244000
    8110:	e49f2100 	ldr	r2, [pc], #256	; 8118 <_Min_Heap_Size+0x7918>
    8114:	e8080016 	stmda	r8, {r1, r2, r4}
    8118:	01080016 	tsteq	r8, r6, lsl r0
    811c:	00005000 	andeq	r5, r0, r0
    8120:	00000000 	andeq	r0, r0, r0
    8124:	00030000 	andeq	r0, r3, r0
    8128:	16c20000 	strbne	r0, [r2], r0
    812c:	16c40800 	strbne	r0, [r4], r0, lsl #16
    8130:	00020800 	andeq	r0, r2, r0, lsl #16
    8134:	16c49f30 			; <UNDEFINED> instruction: 0x16c49f30
    8138:	16e00800 	strbtne	r0, [r0], r0, lsl #16
    813c:	00010800 	andeq	r0, r1, r0, lsl #16
    8140:	00000053 	andeq	r0, r0, r3, asr r0
    8144:	00000000 	andeq	r0, r0, r0
    8148:	0017bc00 	andseq	fp, r7, r0, lsl #24
    814c:	0017be08 	andseq	fp, r7, r8, lsl #28
    8150:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8154:	0017be00 	andseq	fp, r7, r0, lsl #28
    8158:	00180c08 	andseq	r0, r8, r8, lsl #24
    815c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8160:	00000008 	andeq	r0, r0, r8
    8164:	00000000 	andeq	r0, r0, r0
    8168:	001a5000 	andseq	r5, sl, r0
    816c:	001a5208 	andseq	r5, sl, r8, lsl #4
    8170:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8174:	001a5200 	andseq	r5, sl, r0, lsl #4
    8178:	001a5408 	andseq	r5, sl, r8, lsl #8
    817c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8180:	001a540c 	andseq	r5, sl, ip, lsl #8
    8184:	001a9208 	andseq	r9, sl, r8, lsl #4
    8188:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    818c:	001a9218 	andseq	r9, sl, r8, lsl r2
    8190:	001a9c08 	andseq	r9, sl, r8, lsl #24
    8194:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8198:	0000000c 	andeq	r0, r0, ip
    819c:	00000000 	andeq	r0, r0, r0
    81a0:	01010100 	mrseq	r0, (UNDEF: 17)
    81a4:	54000101 	strpl	r0, [r0], #-257	; 0xfffffeff
    81a8:	7208001a 	andvc	r0, r8, #26
    81ac:	0208001a 	andeq	r0, r8, #26
    81b0:	729f3000 	addsvc	r3, pc, #0
    81b4:	8008001a 	andhi	r0, r8, sl, lsl r0
    81b8:	0208001a 	andeq	r0, r8, #26
    81bc:	809f3400 	addshi	r3, pc, r0, lsl #8
    81c0:	9c08001a 	stcls	0, cr0, [r8], {26}
    81c4:	0208001a 	andeq	r0, r8, #26
    81c8:	009f3300 	addseq	r3, pc, r0, lsl #6
	...
    81d8:	02000000 	andeq	r0, r0, #0
    81dc:	00007d00 	andeq	r7, r0, r0, lsl #26
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	02000000 	andeq	r0, r0, #0
    81e8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    81f8:	40000000 	andmi	r0, r0, r0
    81fc:	4808001a 	stmdami	r8, {r1, r3, r4}
    8200:	0108001a 	tsteq	r8, sl, lsl r0
    8204:	1a485000 	bne	121c20c <_Min_Heap_Size+0x121ba0c>
    8208:	1a4a0800 	bne	128a210 <_Min_Heap_Size+0x1289a10>
    820c:	00040800 	andeq	r0, r4, r0, lsl #16
    8210:	9f5001f3 	svcls	0x005001f3
    8214:	08001a4a 	stmdaeq	r0, {r1, r3, r6, r9, fp, ip}
    8218:	08001a4c 	stmdaeq	r0, {r2, r3, r6, r9, fp, ip}
    821c:	4c500001 	mrrcmi	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    8220:	4e08001a 	mcrmi	0, 0, r0, cr8, cr10, {0}
    8224:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    8228:	5001f300 	andpl	pc, r1, r0, lsl #6
    822c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8230:	00000000 	andeq	r0, r0, r0
    8234:	0019b800 	andseq	fp, r9, r0, lsl #16
    8238:	0019ba08 	andseq	fp, r9, r8, lsl #20
    823c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8240:	0019ba00 	andseq	fp, r9, r0, lsl #20
    8244:	001a4008 	andseq	r4, sl, r8
    8248:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    824c:	00000008 	andeq	r0, r0, r8
	...
    8258:	0019b800 	andseq	fp, r9, r0, lsl #16
    825c:	0019be08 	andseq	fp, r9, r8, lsl #28
    8260:	50000108 	andpl	r0, r0, r8, lsl #2
    8264:	080019be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, fp, ip}
    8268:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
    826c:	00540001 	subseq	r0, r4, r1
    8270:	00000000 	andeq	r0, r0, r0
    8274:	9c000000 	stcls	0, cr0, [r0], {-0}
    8278:	9e08001a 	mcrls	0, 0, r0, cr8, cr10, {0}
    827c:	0208001a 	andeq	r0, r8, #26
    8280:	9e007d00 	cdpls	13, 0, cr7, cr0, cr0, {0}
    8284:	e408001a 	str	r0, [r8], #-26	; 0xffffffe6
    8288:	0208001a 	andeq	r0, r8, #26
    828c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    82a0:	001a9c00 	andseq	r9, sl, r0, lsl #24
    82a4:	001aa608 	andseq	sl, sl, r8, lsl #12
    82a8:	50000108 	andpl	r0, r0, r8, lsl #2
    82ac:	08001aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, ip}
    82b0:	08001ab0 	stmdaeq	r0, {r4, r5, r7, r9, fp, ip}
    82b4:	b0530001 	subslt	r0, r3, r1
    82b8:	bc08001a 	stclt	0, cr0, [r8], {26}
    82bc:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    82c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    82c4:	001abc9f 	mulseq	sl, pc, ip	; <UNPREDICTABLE>
    82c8:	001ac408 	andseq	ip, sl, r8, lsl #8
    82cc:	53000108 	movwpl	r0, #264	; 0x108
    82d0:	08001ac4 	stmdaeq	r0, {r2, r6, r7, r9, fp, ip}
    82d4:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
    82d8:	01f30004 	mvnseq	r0, r4
    82dc:	00009f50 	andeq	r9, r0, r0, asr pc
    82e0:	00000000 	andeq	r0, r0, r0
    82e4:	01010000 	mrseq	r0, (UNDEF: 1)
    82e8:	08001ab6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9, fp, ip}
    82ec:	08001aba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, fp, ip}
    82f0:	00500001 	subseq	r0, r0, r1
	...
    8300:	02000000 	andeq	r0, r0, #0
    8304:	00007d00 	andeq	r7, r0, r0, lsl #26
    8308:	00000000 	andeq	r0, r0, r0
    830c:	02000000 	andeq	r0, r0, #0
    8310:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8324:	01000000 	mrseq	r0, (UNDEF: 0)
    8328:	00005000 	andeq	r5, r0, r0
    832c:	00000000 	andeq	r0, r0, r0
    8330:	00040000 	andeq	r0, r4, r0
    8334:	9f5001f3 	svcls	0x005001f3
	...
    834c:	00510001 	subseq	r0, r1, r1
    8350:	00000000 	andeq	r0, r0, r0
    8354:	04000000 	streq	r0, [r0], #-0
    8358:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    835c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8370:	52000100 	andpl	r0, r0, #0, 2
	...
    837c:	01f30004 	mvnseq	r0, r4
    8380:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    8390:	00020000 	andeq	r0, r2, r0
    8394:	0000007d 	andeq	r0, r0, sp, ror r0
    8398:	00000000 	andeq	r0, r0, r0
    839c:	00020000 	andeq	r0, r2, r0
    83a0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    83b0:	00020000 	andeq	r0, r2, r0
    83b4:	0000007d 	andeq	r0, r0, sp, ror r0
    83b8:	00000000 	andeq	r0, r0, r0
    83bc:	00020000 	andeq	r0, r2, r0
    83c0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    83d4:	00010000 	andeq	r0, r1, r0
    83d8:	00000050 	andeq	r0, r0, r0, asr r0
    83dc:	00000000 	andeq	r0, r0, r0
    83e0:	f3000400 	vshl.u8	d0, d0, d0
    83e4:	009f5001 	addseq	r5, pc, r1
	...
    83f8:	01000000 	mrseq	r0, (UNDEF: 0)
    83fc:	00005100 	andeq	r5, r0, r0, lsl #2
    8400:	00000000 	andeq	r0, r0, r0
    8404:	00040000 	andeq	r0, r4, r0
    8408:	9f5101f3 	svcls	0x005101f3
	...
    8420:	00500001 	subseq	r0, r0, r1
    8424:	00000000 	andeq	r0, r0, r0
    8428:	04000000 	streq	r0, [r0], #-0
    842c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8430:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8444:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8450:	01f30004 	mvnseq	r0, r4
    8454:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8464:	00020000 	andeq	r0, r2, r0
    8468:	0000007d 	andeq	r0, r0, sp, ror r0
    846c:	00000000 	andeq	r0, r0, r0
    8470:	00020000 	andeq	r0, r2, r0
    8474:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8488:	00010000 	andeq	r0, r1, r0
    848c:	00000050 	andeq	r0, r0, r0, asr r0
    8490:	00000000 	andeq	r0, r0, r0
    8494:	f3000400 	vshl.u8	d0, d0, d0
    8498:	009f5001 	addseq	r5, pc, r1
	...
    84a8:	02000000 	andeq	r0, r0, #0
    84ac:	00007d00 	andeq	r7, r0, r0, lsl #26
    84b0:	00000000 	andeq	r0, r0, r0
    84b4:	02000000 	andeq	r0, r0, #0
    84b8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    84cc:	01000000 	mrseq	r0, (UNDEF: 0)
    84d0:	00005000 	andeq	r5, r0, r0
    84d4:	00000000 	andeq	r0, r0, r0
    84d8:	00040000 	andeq	r0, r4, r0
    84dc:	9f5001f3 	svcls	0x005001f3
	...
    84f0:	007d0002 	rsbseq	r0, sp, r2
	...
    84fc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    8508:	007d0002 	rsbseq	r0, sp, r2
	...
    8520:	00500001 	subseq	r0, r0, r1
    8524:	00000000 	andeq	r0, r0, r0
    8528:	04000000 	streq	r0, [r0], #-0
    852c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8530:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    853c:	001b3400 	andseq	r3, fp, r0, lsl #8
    8540:	001b3608 	andseq	r3, fp, r8, lsl #12
    8544:	50000108 	andpl	r0, r0, r8, lsl #2
    8548:	08001b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp, ip}
    854c:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
    8550:	01f30004 	mvnseq	r0, r4
    8554:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8560:	1b300000 	blne	c08568 <_Min_Heap_Size+0xc07d68>
    8564:	1b320800 	blne	c8a56c <_Min_Heap_Size+0xc89d6c>
    8568:	00010800 	andeq	r0, r1, r0, lsl #16
    856c:	001b3250 	andseq	r3, fp, r0, asr r2
    8570:	001b3408 	andseq	r3, fp, r8, lsl #8
    8574:	f3000408 	vshl.u8	d0, d8, d0
    8578:	009f5001 	addseq	r5, pc, r1
	...
    8584:	26000000 	strcs	r0, [r0], -r0
    8588:	2e08001b 	mcrcs	0, 0, r0, cr8, cr11, {0}
    858c:	0108001b 	tsteq	r8, fp, lsl r0
    8590:	1b2e5000 	blne	b9c598 <_Min_Heap_Size+0xb9bd98>
    8594:	1b300800 	blne	c0a59c <_Min_Heap_Size+0xc09d9c>
    8598:	00040800 	andeq	r0, r4, r0, lsl #16
    859c:	9f5001f3 	svcls	0x005001f3
	...
    85ac:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
    85b0:	08001b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, ip}
    85b4:	24500001 	ldrbcs	r0, [r0], #-1
    85b8:	2608001b 			; <UNDEFINED> instruction: 0x2608001b
    85bc:	0408001b 	streq	r0, [r8], #-27	; 0xffffffe5
    85c0:	5001f300 	andpl	pc, r1, r0, lsl #6
    85c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    85c8:	00000000 	andeq	r0, r0, r0
    85cc:	001b0400 	andseq	r0, fp, r0, lsl #8
    85d0:	001b0608 	andseq	r0, fp, r8, lsl #12
    85d4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    85d8:	001b0600 	andseq	r0, fp, r0, lsl #12
    85dc:	001b2008 	andseq	r2, fp, r8
    85e0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    85e4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    85f0:	001b0400 	andseq	r0, fp, r0, lsl #8
    85f4:	001b0e08 	andseq	r0, fp, r8, lsl #28
    85f8:	50000108 	andpl	r0, r0, r8, lsl #2
    85fc:	08001b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp, ip}
    8600:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
    8604:	01f30004 	mvnseq	r0, r4
    8608:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8614:	00010100 	andeq	r0, r1, r0, lsl #2
    8618:	1b040000 	blne	108620 <_Min_Heap_Size+0x107e20>
    861c:	1b0e0800 	blne	38a624 <_Min_Heap_Size+0x389e24>
    8620:	00010800 	andeq	r0, r1, r0, lsl #16
    8624:	001b0e51 	andseq	r0, fp, r1, asr lr
    8628:	001b0e08 	andseq	r0, fp, r8, lsl #28
    862c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    8630:	08001b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp, ip}
    8634:	08001b12 	stmdaeq	r0, {r1, r4, r8, r9, fp, ip}
    8638:	01740003 	cmneq	r4, r3
    863c:	001b129f 	mulseq	fp, pc, r2	; <UNPREDICTABLE>
    8640:	001b2008 	andseq	r2, fp, r8
    8644:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    8654:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    8658:	08001b0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, fp, ip}
    865c:	0e520001 	cdpeq	0, 5, cr0, cr2, cr1, {0}
    8660:	2008001b 	andcs	r0, r8, fp, lsl r0
    8664:	0108001b 	tsteq	r8, fp, lsl r0
    8668:	00005600 	andeq	r5, r0, r0, lsl #12
    866c:	00000000 	andeq	r0, r0, r0
    8670:	00030000 	andeq	r0, r3, r0
    8674:	1b0a0000 	blne	28867c <_Min_Heap_Size+0x287e7c>
    8678:	1b0e0800 	blne	38a680 <_Min_Heap_Size+0x389e80>
    867c:	00020800 	andeq	r0, r2, r0, lsl #16
    8680:	1b0e9f30 	blne	3b0348 <_Min_Heap_Size+0x3afb48>
    8684:	1b200800 	blne	80a68c <_Min_Heap_Size+0x809e8c>
    8688:	00010800 	andeq	r0, r1, r0, lsl #16
    868c:	00000055 	andeq	r0, r0, r5, asr r0
    8690:	00000000 	andeq	r0, r0, r0
    8694:	001ae400 	andseq	lr, sl, r0, lsl #8
    8698:	001ae608 	andseq	lr, sl, r8, lsl #12
    869c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    86a0:	001ae600 	andseq	lr, sl, r0, lsl #12
    86a4:	001b0408 	andseq	r0, fp, r8, lsl #8
    86a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    86ac:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    86b8:	001ae400 	andseq	lr, sl, r0, lsl #8
    86bc:	001aee08 	andseq	lr, sl, r8, lsl #28
    86c0:	50000108 	andpl	r0, r0, r8, lsl #2
    86c4:	08001aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp, ip}
    86c8:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    86cc:	01f30004 	mvnseq	r0, r4
    86d0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    86e0:	1ae40000 	bne	ff9086e8 <_estack+0xdf9074a8>
    86e4:	1af10800 	bne	ffc4a6ec <_estack+0xdfc494ac>
    86e8:	00010800 	andeq	r0, r1, r0, lsl #16
    86ec:	001af151 	andseq	pc, sl, r1, asr r1	; <UNPREDICTABLE>
    86f0:	001af408 	andseq	pc, sl, r8, lsl #8
    86f4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    86f8:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
    86fc:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
    8700:	01710003 	cmneq	r1, r3
    8704:	001af89f 	mulseq	sl, pc, r8	; <UNPREDICTABLE>
    8708:	001b0408 	andseq	r0, fp, r8, lsl #8
    870c:	51000108 	tstpl	r0, r8, lsl #2
	...
    871c:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
    8720:	08001aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp, ip}
    8724:	ee520001 	cdp	0, 5, cr0, cr2, cr1, {0}
    8728:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    872c:	0108001b 	tsteq	r8, fp, lsl r0
    8730:	00005600 	andeq	r5, r0, r0, lsl #12
    8734:	00000000 	andeq	r0, r0, r0
    8738:	00030000 	andeq	r0, r3, r0
    873c:	1aea0000 	bne	ffa88744 <_estack+0xdfa87504>
    8740:	1aee0800 	bne	ffb8a748 <_estack+0xdfb89508>
    8744:	00020800 	andeq	r0, r2, r0, lsl #16
    8748:	1aee9f30 	bne	ffbb0410 <_estack+0xdfbaf1d0>
    874c:	1b040800 	blne	10a754 <_Min_Heap_Size+0x109f54>
    8750:	00010800 	andeq	r0, r1, r0, lsl #16
    8754:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8764:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    8770:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    8774:	00000008 	andeq	r0, r0, r8
	...
    8788:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8794:	01f30004 	mvnseq	r0, r4
    8798:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    87a8:	00020000 	andeq	r0, r2, r0
    87ac:	0000007d 	andeq	r0, r0, sp, ror r0
    87b0:	00000000 	andeq	r0, r0, r0
    87b4:	00020000 	andeq	r0, r2, r0
    87b8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    87cc:	00010000 	andeq	r0, r1, r0
    87d0:	00000050 	andeq	r0, r0, r0, asr r0
    87d4:	00000000 	andeq	r0, r0, r0
    87d8:	f3000400 	vshl.u8	d0, d0, d0
    87dc:	009f5001 	addseq	r5, pc, r1
	...
    87f0:	01000000 	mrseq	r0, (UNDEF: 0)
    87f4:	00005100 	andeq	r5, r0, r0, lsl #2
    87f8:	00000000 	andeq	r0, r0, r0
    87fc:	00040000 	andeq	r0, r4, r0
    8800:	9f5101f3 	svcls	0x005101f3
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
{
   0:	0000005c 	andeq	r0, r0, ip, asr r0
  errno = ENOMEM;
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
  14:	00000020 	andeq	r0, r0, r0, lsr #32
  18:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  1c:	00000018 	andeq	r0, r0, r8, lsl r0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	080005fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl}
  24:	00000018 	andeq	r0, r0, r8, lsl r0
}
  28:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
    if (status != HAL_OK)
  34:	00000018 	andeq	r0, r0, r8, lsl r0
      uwTickFreq = prevTickFreq;
  38:	08000644 	stmdaeq	r0, {r2, r6, r9, sl}
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
  44:	00000018 	andeq	r0, r0, r8, lsl r0
      if (pllsource != 0)
  48:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
  4c:	0000002c 	andeq	r0, r0, ip, lsr #32
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	00000000 	andeq	r0, r0, r0
  54:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	00000074 	andeq	r0, r0, r4, ror r0
  64:	0e5f0002 	cdpeq	0, 5, cr0, cr15, cr2, {0}
  68:	00040000 	andeq	r0, r4, r0
      SystemCoreClock = pllvco/pllp;
  6c:	00000000 	andeq	r0, r0, r0
  70:	080006a0 	stmdaeq	r0, {r5, r7, r9, sl}
      break;
  74:	00000014 	andeq	r0, r0, r4, lsl r0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00000000 	andeq	r0, r0, r0
  7c:	00000014 	andeq	r0, r0, r4, lsl r0
  80:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
  84:	00000014 	andeq	r0, r0, r4, lsl r0
  88:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
  8c:	00000014 	andeq	r0, r0, r4, lsl r0
  90:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
  94:	00000014 	andeq	r0, r0, r4, lsl r0
  98:	080006f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl}
  9c:	00000002 	andeq	r0, r0, r2
  a0:	080006f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl}
  a4:	00000002 	andeq	r0, r0, r2
  a8:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	00000002 	andeq	r0, r0, r2
  b0:	080006f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000008 	andeq	r0, r0, r8
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000700 	stmdaeq	r0, {r8, r9, sl}
  bc:	00000010 	andeq	r0, r0, r0, lsl r0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
  c4:	00000018 	andeq	r0, r0, r8, lsl r0
  c8:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	00000018 	andeq	r0, r0, r8, lsl r0
	...
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	0000001c 	andeq	r0, r0, ip, lsl r0
  dc:	18220002 	stmdane	r2!, {r1}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  e0:	00040000 	andeq	r0, r4, r0
    if (huart->hdmarx != NULL)
  e4:	00000000 	andeq	r0, r0, r0
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	0000004c 	andeq	r0, r0, ip, asr #32
	...
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	0000002c 	andeq	r0, r0, ip, lsr #32
    huart->gState  = HAL_UART_STATE_READY;
  fc:	1b2a0002 	blne	a8010c <_Min_Heap_Size+0xa7f90c>
    huart->RxState = HAL_UART_STATE_READY;
 100:	00040000 	andeq	r0, r4, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000000 	andeq	r0, r0, r0
    HAL_UART_AbortCpltCallback(huart);
 108:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
 10c:	00000034 	andeq	r0, r0, r4, lsr r0
  uint32_t AbortCplt = 0x01U;
 110:	080007c0 	stmdaeq	r0, {r6, r7, r8, r9, sl}
  if (AbortCplt == 0x01U)
 114:	00000080 	andeq	r0, r0, r0, lsl #1
}
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000034 	andeq	r0, r0, r4, lsr r0
	...
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	28920002 	ldmcs	r2, {r1}
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	08000840 	stmdaeq	r0, {r6, fp}
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	00000038 	andeq	r0, r0, r8, lsr r0
	...
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	00000204 	andeq	r0, r0, r4, lsl #4
 14c:	2b7d0002 	blcs	1f4015c <_Min_Heap_Size+0x1f3f95c>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	00040000 	andeq	r0, r4, r0
	...
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 15c:	00000020 	andeq	r0, r0, r0, lsr #32
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
 164:	0000005c 	andeq	r0, r0, ip, asr r0
 168:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
 16c:	00000060 	andeq	r0, r0, r0, rrx
 170:	08000934 	stmdaeq	r0, {r2, r4, r5, r8, fp}
}
 174:	00000174 	andeq	r0, r0, r4, ror r1
 178:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
 17c:	0000008a 	andeq	r0, r0, sl, lsl #1
 180:	00000000 	andeq	r0, r0, r0
}
 184:	00000002 	andeq	r0, r0, r2
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	08000b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp}
 18c:	0000012c 	andeq	r0, r0, ip, lsr #2
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000000 	andeq	r0, r0, r0
 194:	000000e0 	andeq	r0, r0, r0, ror #1
 198:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	000000fc 	strdeq	r0, [r0], -ip
 1a0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000124 	andeq	r0, r0, r4, lsr #2
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000002 	andeq	r0, r0, r2
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000078 	andeq	r0, r0, r8, ror r0
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
 1bc:	000000cc 	andeq	r0, r0, ip, asr #1
 1c0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	000000d2 	ldrdeq	r0, [r0], -r2
 1c8:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000038 	andeq	r0, r0, r8, lsr r0
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	00000084 	andeq	r0, r0, r4, lsl #1
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	00000094 	muleq	r0, r4, r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	00000096 	muleq	r0, r6, r0
 1e8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000084 	andeq	r0, r0, r4, lsl #1
 1f0:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000120 	andeq	r0, r0, r0, lsr #2
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	00000004 	andeq	r0, r0, r4
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000000 	andeq	r0, r0, r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	000000f2 	strdeq	r0, [r0], -r2
 208:	00000000 	andeq	r0, r0, r0
 20c:	0000006c 	andeq	r0, r0, ip, rrx
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000000 	andeq	r0, r0, r0
 214:	000000a6 	andeq	r0, r0, r6, lsr #1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 21c:	00000002 	andeq	r0, r0, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000000 	andeq	r0, r0, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	0000004c 	andeq	r0, r0, ip, asr #32
 228:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	0000001a 	andeq	r0, r0, sl, lsl r0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000000 	andeq	r0, r0, r0
  tmp |= hdma->Init.FIFOMode;
 234:	00000002 	andeq	r0, r0, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	00000000 	andeq	r0, r0, r0
    tmp |= hdma->Init.FIFOThreshold;
 23c:	0000000a 	andeq	r0, r0, sl
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000002 	andeq	r0, r0, r2
 248:	00000000 	andeq	r0, r0, r0
  hdma->Instance->FCR = tmp;
 24c:	00000002 	andeq	r0, r0, r2
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000002 	andeq	r0, r0, r2
 258:	00000000 	andeq	r0, r0, r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000058 	andeq	r0, r0, r8, asr r0
  hdma->State = HAL_DMA_STATE_READY;
 260:	08000d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp}
 264:	00000010 	andeq	r0, r0, r0, lsl r0
  return HAL_OK;
 268:	00000000 	andeq	r0, r0, r0
 26c:	00000002 	andeq	r0, r0, r2
 270:	00000000 	andeq	r0, r0, r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000124 	andeq	r0, r0, r4, lsr #2
 278:	00000000 	andeq	r0, r0, r0
 27c:	0000002c 	andeq	r0, r0, ip, lsr #32
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000000 	andeq	r0, r0, r0
        hdma->State = HAL_DMA_STATE_READY;
 284:	0000002c 	andeq	r0, r0, ip, lsr #32
        return HAL_ERROR; 
 288:	00000000 	andeq	r0, r0, r0
    return HAL_ERROR;
 28c:	00000002 	andeq	r0, r0, r2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000000 	andeq	r0, r0, r0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	00000080 	andeq	r0, r0, r0, lsl #1
 298:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 29c:	00000014 	andeq	r0, r0, r4, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	00000002 	andeq	r0, r0, r2
 2a8:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	000000bc 	strheq	r0, [r0], -ip
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000016 	andeq	r0, r0, r6, lsl r0
          return HAL_TIMEOUT;
 2b8:	08000d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp}
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000002 	andeq	r0, r0, r2
 2c0:	08000d5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, fp}
 2c4:	000000e6 	andeq	r0, r0, r6, ror #1
    FlagStatus       pwrclkchanged = RESET;
 2c8:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000288 	andeq	r0, r0, r8, lsl #5
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	0000001e 	andeq	r0, r0, lr, lsl r0
      tickstart = HAL_GetTick();
 2d8:	00000000 	andeq	r0, r0, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	0000009a 	muleq	r0, sl, r0
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	00000084 	andeq	r0, r0, r4, lsl #1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000088 	andeq	r0, r0, r8, lsl #1
          return HAL_TIMEOUT;
 2f0:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000088 	andeq	r0, r0, r8, lsl #1
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000036 	andeq	r0, r0, r6, lsr r0
 300:	00000000 	andeq	r0, r0, r0
 304:	00000036 	andeq	r0, r0, r6, lsr r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	0000000c 	andeq	r0, r0, ip
 310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 314:	00000004 	andeq	r0, r0, r4
 318:	00000000 	andeq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000036 	andeq	r0, r0, r6, lsr r0
 320:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000026 	andeq	r0, r0, r6, lsr #32
 328:	00000000 	andeq	r0, r0, r0
 32c:	00000066 	andeq	r0, r0, r6, rrx
 330:	00000000 	andeq	r0, r0, r0
          return HAL_TIMEOUT;
 334:	000000a4 	andeq	r0, r0, r4, lsr #1
    if(pwrclkchanged == SET)
 338:	00000000 	andeq	r0, r0, r0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000026 	andeq	r0, r0, r6, lsr #32
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000000 	andeq	r0, r0, r0
 344:	00000066 	andeq	r0, r0, r6, rrx
	...
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 350:	00000084 	andeq	r0, r0, r4, lsl #1
 354:	71ab0002 			; <UNDEFINED> instruction: 0x71ab0002
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00040000 	andeq	r0, r4, r0
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000004 	andeq	r0, r0, r4
 368:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	000004fc 	strdeq	r0, [r0], -ip
 370:	00000000 	andeq	r0, r0, r0
 374:	00000118 	andeq	r0, r0, r8, lsl r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000000 	andeq	r0, r0, r0
 37c:	0000000c 	andeq	r0, r0, ip
 380:	00000000 	andeq	r0, r0, r0
 384:	0000000c 	andeq	r0, r0, ip
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000000 	andeq	r0, r0, r0
 38c:	000000d4 	ldrdeq	r0, [r0], -r4
        __HAL_RCC_PLL_DISABLE();
 390:	00000000 	andeq	r0, r0, r0
 394:	0000021c 	andeq	r0, r0, ip, lsl r2
        tickstart = HAL_GetTick();
 398:	080010cc 	stmdaeq	r0, {r2, r3, r6, r7, ip}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	0000000c 	andeq	r0, r0, ip
 3a0:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
 3a4:	00000020 	andeq	r0, r0, r0, lsr #32
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	080010f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, ip}
 3ac:	00000020 	andeq	r0, r0, r0, lsr #32
            return HAL_TIMEOUT;
 3b0:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	000000cc 	andeq	r0, r0, ip, asr #1
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	0000003c 	andeq	r0, r0, ip, lsr r0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000002 	andeq	r0, r0, r2
 3c8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000020 	andeq	r0, r0, r0, lsr #32
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000054 	andeq	r0, r0, r4, asr r0
 3dc:	802e0002 	eorhi	r0, lr, r2
 3e0:	00040000 	andeq	r0, r4, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000000 	andeq	r0, r0, r0
 3e8:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
 3ec:	000002e8 	andeq	r0, r0, r8, ror #5
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	00000184 	andeq	r0, r0, r4, lsl #3
 3f8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000028 	andeq	r0, r0, r8, lsr #32
 400:	00000000 	andeq	r0, r0, r0
 404:	00000038 	andeq	r0, r0, r8, lsr r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000000 	andeq	r0, r0, r0
 40c:	0000002c 	andeq	r0, r0, ip, lsr #32
 410:	00000000 	andeq	r0, r0, r0
 414:	00000048 	andeq	r0, r0, r8, asr #32
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000002 	andeq	r0, r0, r2
 420:	00000000 	andeq	r0, r0, r0
 424:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
        tickstart = HAL_GetTick();
 430:	0000008c 	andeq	r0, r0, ip, lsl #1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	8a0c0002 	bhi	300444 <_Min_Heap_Size+0x2ffc44>
 438:	00040000 	andeq	r0, r4, r0
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 444:	0000002c 	andeq	r0, r0, ip, lsr #32
            return HAL_TIMEOUT;
 448:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 44c:	00000044 	andeq	r0, r0, r4, asr #32
        __HAL_RCC_PLL_DISABLE();
 450:	00000000 	andeq	r0, r0, r0
 454:	0000008e 	andeq	r0, r0, lr, lsl #1
        tickstart = HAL_GetTick();
 458:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	0000028e 	andeq	r0, r0, lr, lsl #5
 460:	00000000 	andeq	r0, r0, r0
 464:	000000dc 	ldrdeq	r0, [r0], -ip
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000000 	andeq	r0, r0, r0
 46c:	00000078 	andeq	r0, r0, r8, ror r0
            return HAL_TIMEOUT;
 470:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 474:	00000098 	muleq	r0, r8, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	08001400 	stmdaeq	r0, {sl, ip}
        pll_config = RCC->PLLCFGR;
 47c:	00000094 	muleq	r0, r4, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
 484:	00000026 	andeq	r0, r0, r6, lsr #32
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	00000128 	andeq	r0, r0, r8, lsr #2
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	000001dc 	ldrdeq	r0, [r0], -ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	00000000 	andeq	r0, r0, r0
 49c:	0000005a 	andeq	r0, r0, sl, asr r0
 4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	0000006e 	andeq	r0, r0, lr, rrx
 4a8:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000006 	andeq	r0, r0, r6
 4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	00000004 	andeq	r0, r0, r4
	...
  return HAL_OK;
 4c0:	000000ac 	andeq	r0, r0, ip, lsr #1
}
 4c4:	97e30002 	strbls	r0, [r3, r2]!
        return HAL_ERROR;
 4c8:	00040000 	andeq	r0, r4, r0
        return HAL_ERROR;
 4cc:	00000000 	andeq	r0, r0, r0
}
 4d0:	080014bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip}
        return HAL_ERROR;
 4d4:	0000003c 	andeq	r0, r0, ip, lsr r0
          return HAL_ERROR;
 4d8:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
 4dc:	0000008c 	andeq	r0, r0, ip, lsl #1
 4e0:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
 4e4:	00000030 	andeq	r0, r0, r0, lsr r0
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	00000038 	andeq	r0, r0, r8, lsr r0
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	00000024 	andeq	r0, r0, r4, lsr #32
 4f8:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
 4fc:	00000028 	andeq	r0, r0, r8, lsr #32
 500:	00000000 	andeq	r0, r0, r0
 504:	0000001c 	andeq	r0, r0, ip, lsl r0
 508:	00000000 	andeq	r0, r0, r0
 50c:	00000020 	andeq	r0, r0, r0, lsr #32
 510:	00000000 	andeq	r0, r0, r0
 514:	00000128 	andeq	r0, r0, r8, lsr #2
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000006 	andeq	r0, r0, r6
 520:	00000000 	andeq	r0, r0, r0
 524:	00000010 	andeq	r0, r0, r0, lsl r0
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000007c 	andeq	r0, r0, ip, ror r0
 530:	00000000 	andeq	r0, r0, r0
 534:	00000034 	andeq	r0, r0, r4, lsr r0
 538:	00000000 	andeq	r0, r0, r0
 53c:	0000003c 	andeq	r0, r0, ip, lsr r0
 540:	00000000 	andeq	r0, r0, r0
 544:	00000034 	andeq	r0, r0, r4, lsr r0
 548:	00000000 	andeq	r0, r0, r0
 54c:	0000003c 	andeq	r0, r0, ip, lsr r0
 550:	00000000 	andeq	r0, r0, r0
 554:	0000003c 	andeq	r0, r0, ip, lsr r0
 558:	00000000 	andeq	r0, r0, r0
 55c:	00000002 	andeq	r0, r0, r2
 560:	00000000 	andeq	r0, r0, r0
 564:	00000008 	andeq	r0, r0, r8
	...
 570:	000000ec 	andeq	r0, r0, ip, ror #1
 574:	ac0b0002 	stcge	0, cr0, [fp], {2}
 578:	00040000 	andeq	r0, r4, r0
	...
 584:	00000002 	andeq	r0, r0, r2
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000002 	andeq	r0, r0, r2
 590:	00000000 	andeq	r0, r0, r0
 594:	0000003c 	andeq	r0, r0, ip, lsr r0
 598:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
 59c:	0000004c 	andeq	r0, r0, ip, asr #32
 5a0:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
 5a4:	00000034 	andeq	r0, r0, r4, lsr r0
 5a8:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
 5ac:	00000018 	andeq	r0, r0, r8, lsl r0
 5b0:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
 5b4:	0000000c 	andeq	r0, r0, ip
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	0000000c 	andeq	r0, r0, ip
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000048 	andeq	r0, r0, r8, asr #32
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	0000000c 	andeq	r0, r0, ip
 5d0:	08001680 	stmdaeq	r0, {r7, r9, sl, ip}
 5d4:	00000028 	andeq	r0, r0, r8, lsr #32
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000000e 	andeq	r0, r0, lr
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	0000000e 	andeq	r0, r0, lr
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	00000008 	andeq	r0, r0, r8
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000000c 	andeq	r0, r0, ip
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000010 	andeq	r0, r0, r0, lsl r0
 600:	00000000 	andeq	r0, r0, r0
 604:	00000010 	andeq	r0, r0, r0, lsl r0
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000010 	andeq	r0, r0, r0, lsl r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000010 	andeq	r0, r0, r0, lsl r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000010 	andeq	r0, r0, r0, lsl r0
 620:	00000000 	andeq	r0, r0, r0
 624:	00000010 	andeq	r0, r0, r0, lsl r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	00000010 	andeq	r0, r0, r0, lsl r0
 630:	00000000 	andeq	r0, r0, r0
 634:	00000010 	andeq	r0, r0, r0, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000010 	andeq	r0, r0, r0, lsl r0
 640:	00000000 	andeq	r0, r0, r0
 644:	0000000c 	andeq	r0, r0, ip
 648:	00000000 	andeq	r0, r0, r0
 64c:	0000000c 	andeq	r0, r0, ip
 650:	00000000 	andeq	r0, r0, r0
 654:	0000000c 	andeq	r0, r0, ip
	...
 660:	00000024 	andeq	r0, r0, r4, lsr #32
 664:	b70d0002 	strlt	r0, [sp, -r2]
 668:	00040000 	andeq	r0, r4, r0
 66c:	00000000 	andeq	r0, r0, r0
 670:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 674:	00000014 	andeq	r0, r0, r4, lsl r0
 678:	00000000 	andeq	r0, r0, r0
 67c:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 688:	00000074 	andeq	r0, r0, r4, ror r0
 68c:	bcc00002 	stcllt	0, cr0, [r0], {2}
 690:	00040000 	andeq	r0, r4, r0
 694:	00000000 	andeq	r0, r0, r0
 698:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
 69c:	0000002c 	andeq	r0, r0, ip, lsr #32
 6a0:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
 6a4:	00000036 	andeq	r0, r0, r6, lsr r0
 6a8:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
 6ac:	0000007c 	andeq	r0, r0, ip, ror r0
 6b0:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 6b4:	00000018 	andeq	r0, r0, r8, lsl r0
 6b8:	080017b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, ip}
 6bc:	00000008 	andeq	r0, r0, r8
 6c0:	080017bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip}
 6c4:	00000050 	andeq	r0, r0, r0, asr r0
 6c8:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 6cc:	000001ac 	andeq	r0, r0, ip, lsr #3
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000006 	andeq	r0, r0, r6
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	00000008 	andeq	r0, r0, r8
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000008 	andeq	r0, r0, r8
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000008 	andeq	r0, r0, r8
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 700:	00000034 	andeq	r0, r0, r4, lsr r0
 704:	c6ff0002 	ldrbtgt	r0, [pc], r2
 708:	00040000 	andeq	r0, r4, r0
 70c:	00000000 	andeq	r0, r0, r0
 710:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
 714:	00000088 	andeq	r0, r0, r8, lsl #1
 718:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
 71c:	0000000e 	andeq	r0, r0, lr
 720:	00000000 	andeq	r0, r0, r0
 724:	00000020 	andeq	r0, r0, r0, lsr #32
 728:	08001a50 	stmdaeq	r0, {r4, r6, r9, fp, ip}
 72c:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 738:	0000001c 	andeq	r0, r0, ip, lsl r0
 73c:	cbfd0002 	blgt	fff4074c <_estack+0xdff3f50c>
 740:	00040000 	andeq	r0, r4, r0
 744:	00000000 	andeq	r0, r0, r0
 748:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
 74c:	00000048 	andeq	r0, r0, r8, asr #32
	...
 758:	000000a4 	andeq	r0, r0, r4, lsr #1
 75c:	cd820002 	stcgt	0, cr0, [r2, #8]
 760:	00040000 	andeq	r0, r4, r0
	...
 76c:	00000002 	andeq	r0, r0, r2
 770:	00000000 	andeq	r0, r0, r0
 774:	00000004 	andeq	r0, r0, r4
 778:	00000000 	andeq	r0, r0, r0
 77c:	00000010 	andeq	r0, r0, r0, lsl r0
 780:	00000000 	andeq	r0, r0, r0
 784:	0000000c 	andeq	r0, r0, ip
 788:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
 78c:	00000020 	andeq	r0, r0, r0, lsr #32
 790:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
 794:	0000001c 	andeq	r0, r0, ip, lsl r0
 798:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
 79c:	00000006 	andeq	r0, r0, r6
 7a0:	08001b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, ip}
 7a4:	0000000a 	andeq	r0, r0, sl
 7a8:	08001b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip}
 7ac:	00000004 	andeq	r0, r0, r4
 7b0:	08001b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, ip}
 7b4:	00000004 	andeq	r0, r0, r4
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	0000000a 	andeq	r0, r0, sl
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000010 	andeq	r0, r0, r0, lsl r0
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	00000010 	andeq	r0, r0, r0, lsl r0
 7d0:	00000000 	andeq	r0, r0, r0
 7d4:	00000006 	andeq	r0, r0, r6
 7d8:	00000000 	andeq	r0, r0, r0
 7dc:	0000000a 	andeq	r0, r0, sl
 7e0:	00000000 	andeq	r0, r0, r0
 7e4:	00000010 	andeq	r0, r0, r0, lsl r0
 7e8:	00000000 	andeq	r0, r0, r0
 7ec:	00000010 	andeq	r0, r0, r0, lsl r0
 7f0:	00000000 	andeq	r0, r0, r0
 7f4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 800:	00000024 	andeq	r0, r0, r4, lsr #32
 804:	d5b70002 	ldrle	r0, [r7, #2]!
 808:	00040000 	andeq	r0, r4, r0
 80c:	00000000 	andeq	r0, r0, r0
 810:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
 814:	00000050 	andeq	r0, r0, r0, asr r0
 818:	08001b88 	stmdaeq	r0, {r3, r7, r8, r9, fp, ip}
 81c:	00000002 	andeq	r0, r0, r2
	...
 828:	0000001c 	andeq	r0, r0, ip, lsl r0
 82c:	d5d90002 	ldrble	r0, [r9, #2]
 830:	00040000 	andeq	r0, r4, r0
 834:	00000000 	andeq	r0, r0, r0
 838:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
 83c:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
{
   0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
  errno = ENOMEM;
   4:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
   8:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
}
   c:	080005fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl}
  10:	080005fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl}
  14:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
  18:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
  1c:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
  24:	08000644 	stmdaeq	r0, {r2, r6, r9, sl}
}
  28:	08000644 	stmdaeq	r0, {r2, r6, r9, sl}
  2c:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
  30:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
    if (status != HAL_OK)
  34:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
      uwTickFreq = prevTickFreq;
  38:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
  3c:	080006a0 	stmdaeq	r0, {r5, r7, r9, sl}
  40:	00000001 	andeq	r0, r0, r1
  44:	00000001 	andeq	r0, r0, r1
	...
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	080006a0 	stmdaeq	r0, {r5, r7, r9, sl}
  54:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
  58:	00000001 	andeq	r0, r0, r1
  5c:	00000001 	andeq	r0, r0, r1
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
  64:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
  68:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
      SystemCoreClock = pllvco/pllp;
  6c:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
  70:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
      break;
  74:	080006f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl}
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	080006f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl}
  7c:	080006f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl}
  80:	080006f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl}
  84:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
  88:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
  8c:	080006f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl}
  90:	080006f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl}
  94:	080006fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl}
  98:	08000700 	stmdaeq	r0, {r8, r9, sl}
  9c:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
  a0:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
  a4:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
  a8:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
	...
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
  bc:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
	...
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c8:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	080007c0 	stmdaeq	r0, {r6, r7, r8, r9, sl}
  d0:	080007c0 	stmdaeq	r0, {r6, r7, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	08000840 	stmdaeq	r0, {r6, fp}
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	00000001 	andeq	r0, r0, r1
  dc:	00000001 	andeq	r0, r0, r1
	...
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	08000840 	stmdaeq	r0, {r6, fp}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
	...
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	00000001 	andeq	r0, r0, r1
    huart->gState  = HAL_UART_STATE_READY;
  fc:	00000001 	andeq	r0, r0, r1
    huart->RxState = HAL_UART_STATE_READY;
 100:	00000001 	andeq	r0, r0, r1
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000001 	andeq	r0, r0, r1
	...
  uint32_t AbortCplt = 0x01U;
 110:	00000001 	andeq	r0, r0, r1
  if (AbortCplt == 0x01U)
 114:	00000001 	andeq	r0, r0, r1
}
 118:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
 11c:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
 120:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
 124:	08000934 	stmdaeq	r0, {r2, r4, r5, r8, fp}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	08000934 	stmdaeq	r0, {r2, r4, r5, r8, fp}
 12c:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
 130:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
 134:	08000b32 	stmdaeq	r0, {r1, r4, r5, r8, r9, fp}
 138:	00000001 	andeq	r0, r0, r1
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	00000001 	andeq	r0, r0, r1
 140:	08000b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp}
 144:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	00000001 	andeq	r0, r0, r1
 14c:	00000001 	andeq	r0, r0, r1
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	00000001 	andeq	r0, r0, r1
 15c:	00000001 	andeq	r0, r0, r1
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	00000001 	andeq	r0, r0, r1
 16c:	00000001 	andeq	r0, r0, r1
 170:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
}
 174:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 178:	00000001 	andeq	r0, r0, r1
 17c:	00000001 	andeq	r0, r0, r1
 180:	00000001 	andeq	r0, r0, r1
}
 184:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	00000001 	andeq	r0, r0, r1
 18c:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
 198:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 1d4:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
 1e4:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
 1e8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
 1fc:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000001 	andeq	r0, r0, r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000001 	andeq	r0, r0, r1
 208:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
 20c:	08000d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	08000d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp}
 21c:	08000d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp}
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	00000001 	andeq	r0, r0, r1
 228:	00000001 	andeq	r0, r0, r1
  tmp = hdma->Instance->FCR;
 22c:	00000001 	andeq	r0, r0, r1
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000001 	andeq	r0, r0, r1
  tmp |= hdma->Init.FIFOMode;
 234:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	00000001 	andeq	r0, r0, r1
    tmp |= hdma->Init.FIFOThreshold;
 23c:	00000001 	andeq	r0, r0, r1
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000001 	andeq	r0, r0, r1
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
  hdma->Instance->FCR = tmp;
 24c:	00000001 	andeq	r0, r0, r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	00000001 	andeq	r0, r0, r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000001 	andeq	r0, r0, r1
 258:	00000001 	andeq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000001 	andeq	r0, r0, r1
  hdma->State = HAL_DMA_STATE_READY;
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	08000d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	08000d5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, fp}
 278:	08000d5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, fp}
 27c:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
        hdma->State = HAL_DMA_STATE_READY;
 284:	080010cc 	stmdaeq	r0, {r2, r3, r6, r7, ip}
        return HAL_ERROR; 
 288:	00000001 	andeq	r0, r0, r1
    return HAL_ERROR;
 28c:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000001 	andeq	r0, r0, r1
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	00000001 	andeq	r0, r0, r1
 298:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 29c:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000001 	andeq	r0, r0, r1
 2a4:	00000001 	andeq	r0, r0, r1
 2a8:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	00000001 	andeq	r0, r0, r1
 2b4:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2b8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000001 	andeq	r0, r0, r1
 2c0:	00000001 	andeq	r0, r0, r1
 2c4:	00000001 	andeq	r0, r0, r1
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000001 	andeq	r0, r0, r1
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	00000001 	andeq	r0, r0, r1
 2d4:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 2d8:	00000001 	andeq	r0, r0, r1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	00000001 	andeq	r0, r0, r1
 2e4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2f0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000001 	andeq	r0, r0, r1
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
	...
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
 310:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 314:	00000001 	andeq	r0, r0, r1
	...
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 320:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000001 	andeq	r0, r0, r1
 328:	00000001 	andeq	r0, r0, r1
 32c:	00000001 	andeq	r0, r0, r1
 330:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 334:	00000001 	andeq	r0, r0, r1
    if(pwrclkchanged == SET)
 338:	00000001 	andeq	r0, r0, r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000001 	andeq	r0, r0, r1
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	080010cc 	stmdaeq	r0, {r2, r3, r6, r7, ip}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
 360:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	080010f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, ip}
 368:	080010f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, ip}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
	...
        tickstart = HAL_GetTick();
 398:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	08001400 	stmdaeq	r0, {sl, ip}
 3a0:	00000001 	andeq	r0, r0, r1
 3a4:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 3b0:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000001 	andeq	r0, r0, r1
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000001 	andeq	r0, r0, r1
 3d0:	00000001 	andeq	r0, r0, r1
 3d4:	00000001 	andeq	r0, r0, r1
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3e0:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	00000001 	andeq	r0, r0, r1
 414:	00000001 	andeq	r0, r0, r1
 418:	08001400 	stmdaeq	r0, {sl, ip}
 41c:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
 420:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
 424:	080014ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, ip}
        __HAL_RCC_PLL_ENABLE();
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 430:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 448:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 44c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 460:	08001510 	stmdaeq	r0, {r4, r8, sl, ip}
 464:	0800153a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, ip}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	08001564 	stmdaeq	r0, {r2, r5, r6, r8, sl, ip}
 46c:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
	...
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	0800153a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, ip}
        pll_config = RCC->PLLCFGR;
 47c:	0800154e 	stmdaeq	r0, {r1, r2, r3, r6, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
 484:	08001574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, ip}
	...
 490:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a8:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000001 	andeq	r0, r0, r1
 4b0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	00000001 	andeq	r0, r0, r1
	...
  return HAL_OK;
 4c0:	00000001 	andeq	r0, r0, r1
}
 4c4:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4c8:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4cc:	00000001 	andeq	r0, r0, r1
	...
          return HAL_ERROR;
 4d8:	00000001 	andeq	r0, r0, r1
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
	...
 4f0:	080014bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip}
 4f4:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
 4f8:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
 4fc:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
 500:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
 504:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
 51c:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
 520:	00000001 	andeq	r0, r0, r1
 524:	00000001 	andeq	r0, r0, r1
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
 570:	00000001 	andeq	r0, r0, r1
 574:	00000001 	andeq	r0, r0, r1
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
	...
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
 598:	00000001 	andeq	r0, r0, r1
 59c:	00000001 	andeq	r0, r0, r1
 5a0:	00000001 	andeq	r0, r0, r1
 5a4:	00000001 	andeq	r0, r0, r1
 5a8:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
 5ac:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
 5b0:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
 5b4:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
 5b8:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
 5bc:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
 5c0:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
 5c4:	08001680 	stmdaeq	r0, {r7, r9, sl, ip}
 5c8:	00000001 	andeq	r0, r0, r1
 5cc:	00000001 	andeq	r0, r0, r1
 5d0:	00000001 	andeq	r0, r0, r1
 5d4:	00000001 	andeq	r0, r0, r1
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	08001680 	stmdaeq	r0, {r7, r9, sl, ip}
 5e4:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	00000001 	andeq	r0, r0, r1
 5f4:	00000001 	andeq	r0, r0, r1
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
 658:	00000001 	andeq	r0, r0, r1
 65c:	00000001 	andeq	r0, r0, r1
 660:	00000001 	andeq	r0, r0, r1
 664:	00000001 	andeq	r0, r0, r1
	...
 670:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 674:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
 678:	00000001 	andeq	r0, r0, r1
 67c:	00000001 	andeq	r0, r0, r1
	...
 688:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
 68c:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
 690:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
 694:	0800171e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, ip}
 698:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
 69c:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 6a0:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
 6a4:	080017b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, ip}
 6a8:	080017b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, ip}
 6ac:	080017bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip}
 6b0:	080017bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip}
 6b4:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 6b8:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
 6bc:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	00000001 	andeq	r0, r0, r1
 6d8:	00000001 	andeq	r0, r0, r1
 6dc:	00000001 	andeq	r0, r0, r1
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
	...
 6f0:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
 6f4:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
 6f8:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
 6fc:	08001a4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, fp, ip}
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
 708:	08001a50 	stmdaeq	r0, {r4, r6, r9, fp, ip}
 70c:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
	...
 718:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
 71c:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
	...
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
 738:	00000001 	andeq	r0, r0, r1
 73c:	00000001 	andeq	r0, r0, r1
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
 74c:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
 750:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
 754:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
 758:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
 75c:	08001b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, ip}
 760:	08001b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, ip}
 764:	08001b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip}
 768:	08001b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip}
 76c:	08001b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, ip}
 770:	08001b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, ip}
 774:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
 778:	00000001 	andeq	r0, r0, r1
 77c:	00000001 	andeq	r0, r0, r1
 780:	00000001 	andeq	r0, r0, r1
 784:	00000001 	andeq	r0, r0, r1
 788:	00000001 	andeq	r0, r0, r1
 78c:	00000001 	andeq	r0, r0, r1
 790:	00000001 	andeq	r0, r0, r1
 794:	00000001 	andeq	r0, r0, r1
 798:	00000001 	andeq	r0, r0, r1
 79c:	00000001 	andeq	r0, r0, r1
 7a0:	00000001 	andeq	r0, r0, r1
 7a4:	00000001 	andeq	r0, r0, r1
 7a8:	00000001 	andeq	r0, r0, r1
 7ac:	00000001 	andeq	r0, r0, r1
 7b0:	00000001 	andeq	r0, r0, r1
 7b4:	00000001 	andeq	r0, r0, r1
	...
 7c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
 7cc:	08001b88 	stmdaeq	r0, {r3, r7, r8, r9, fp, ip}
 7d0:	08001b88 	stmdaeq	r0, {r3, r7, r8, r9, fp, ip}
 7d4:	08001b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp, ip}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
{
       0:	0000046f 	andeq	r0, r0, pc, ror #8
  errno = ENOMEM;
       4:	02bd0003 	adcseq	r0, sp, #3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
}
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    if (status != HAL_OK)
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      uwTickFreq = prevTickFreq;
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      if (pllsource != 0)
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      SystemCoreClock = pllvco/pllp;
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      break;
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    if (huart->hdmarx != NULL)
      e4:	2f737265 	svccs	0x00737265
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
      f0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    huart->TxXferCount = 0x00U;
      f4:	2f54532f 	svccs	0x0054532f
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	334d5453 	movtcc	r5, #54355	; 0xd453
    huart->gState  = HAL_UART_STATE_READY;
      fc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    huart->RxState = HAL_UART_STATE_READY;
     100:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    HAL_UART_AbortCpltCallback(huart);
     108:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     10c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
  uint32_t AbortCplt = 0x01U;
     110:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
  if (AbortCplt == 0x01U)
     114:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
}
     118:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     11c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     120:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 128 <_Min_Heap_Size-0x6d8>
     124:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
     12c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
     130:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     134:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     138:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	2f2e2e2f 	svccs	0x002e2e2f
     140:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 90 <_Min_Heap_Size-0x770>
     144:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	2f736c69 	svccs	0x00736c69
     14c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     154:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	6300636e 	movwvs	r6, #878	; 0x36e
     15c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     164:	6f646978 	svcvs	0x00646978
     168:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     16c:	6172676f 	cmnvs	r2, pc, ror #14
     170:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
}
     174:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     178:	63675c63 	cmnvs	r7, #25344	; 0x6300
     17c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     180:	6f6e2d6d 	svcvs	0x006e2d6d
}
     184:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     18c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     194:	30312e31 	eorscc	r2, r1, r1, lsr lr
     198:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     1a0:	61652d65 	cmnvs	r5, r5, ror #26
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     1a8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1ac:	00006564 	andeq	r6, r0, r4, ror #10
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	6e69616d 	powvsez	f6, f1, #5.0
     1b4:	0100632e 	tsteq	r0, lr, lsr #6
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	645f0000 	ldrbvs	r0, [pc], #-0	; 1c0 <_Min_Heap_Size-0x640>
     1bc:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     1c0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1c8 <_Min_Heap_Size-0x638>
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	73657079 	cmnvc	r5, #121	; 0x79
     1c8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	735f0000 	cmpvc	pc, #0
     1d0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     1d4:	00682e74 	rsbeq	r2, r8, r4, ror lr
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	73000003 	movwvc	r0, #3
     1dc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
     1e4:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     1e8:	00000400 	andeq	r0, r0, r0, lsl #8
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     1f0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	61685f78 	smcvs	34296	; 0x85f8
     1f8:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
     1fc:	00682e66 	rsbeq	r2, r8, r6, ror #28
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	73000005 	movwvc	r0, #5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     208:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     20c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
     214:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00050068 	andeq	r0, r5, r8, rrx
     21c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     228:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
  tmp = hdma->Instance->FCR;
     22c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00000500 	andeq	r0, r0, r0, lsl #10
  tmp |= hdma->Init.FIFOMode;
     234:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    tmp |= hdma->Init.FIFOThreshold;
     23c:	61685f78 	smcvs	34296	; 0x85f8
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00682e61 	rsbeq	r2, r8, r1, ror #28
     248:	73000005 	movwvc	r0, #5
  hdma->Instance->FCR = tmp;
     24c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     258:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00682e74 	rsbeq	r2, r8, r4, ror lr
  hdma->State = HAL_DMA_STATE_READY;
     260:	73000005 	movwvc	r0, #5
     264:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  return HAL_OK;
     268:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     26c:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
     270:	00060068 	andeq	r0, r6, r8, rrx
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     278:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     27c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000500 	andeq	r0, r0, r0, lsl #10
        return HAL_ERROR; 
     288:	6f697067 	svcvs	0x00697067
    return HAL_ERROR;
     28c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	73750000 	cmnvc	r5, #0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     298:	00060068 	andeq	r0, r6, r8, rrx
      tickstart = HAL_GetTick();
     29c:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     2a4:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
     2a8:	00070068 	andeq	r0, r7, r8, rrx
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
     2b0:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     2b4:	003e6e69 	eorseq	r6, lr, r9, ror #28
          return HAL_TIMEOUT;
     2b8:	73000000 	movwvc	r0, #0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	6f696474 	svcvs	0x00696474
     2c0:	0800682e 	stmdaeq	r0, {r1, r2, r3, r5, fp, sp, lr}
     2c4:	05000000 	streq	r0, [r0, #-0]
    FlagStatus       pwrclkchanged = RESET;
     2c8:	0205001a 	andeq	r0, r5, #26
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
     2d0:	06011803 	streq	r1, [r1], -r3, lsl #16
     2d4:	06050501 	streq	r0, [r5], -r1, lsl #10
      tickstart = HAL_GetTick();
     2d8:	0658063d 			; <UNDEFINED> instruction: 0x0658063d
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0601052f 	streq	r0, [r1], -pc, lsr #10
     2e0:	00060213 	andeq	r0, r6, r3, lsl r2
     2e4:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
     2ec:	03080005 	movweq	r0, #32773	; 0x8005
          return HAL_TIMEOUT;
     2f0:	0505012e 	streq	r0, [r5, #-302]	; 0xfffffed2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	05134b21 	ldreq	r4, [r3, #-2849]	; 0xfffff4df
     2f8:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     2fc:	01010005 	tsteq	r1, r5
     300:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     304:	0005fc02 	andeq	pc, r5, r2, lsl #24
     308:	01340308 	teqeq	r4, r8, lsl #6
     30c:	4b210505 	blmi	841728 <_Min_Heap_Size+0x840f28>
     310:	2f060105 	svccs	0x00060105
      tickstart = HAL_GetTick();
     314:	01000502 	tsteq	r0, r2, lsl #10
     318:	00120501 	andseq	r0, r2, r1, lsl #10
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	06140205 	ldreq	r0, [r4], -r5, lsl #4
     320:	39030800 	stmdbcc	r3, {fp}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	21050501 	tstcs	r5, r1, lsl #10
     328:	0601054b 	streq	r0, [r1], -fp, asr #10
     32c:	0005022f 	andeq	r0, r5, pc, lsr #4
     330:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
          return HAL_TIMEOUT;
     334:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    if(pwrclkchanged == SET)
     338:	03080006 	movweq	r0, #32774	; 0x8006
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0505013e 	streq	r0, [r5, #-318]	; 0xfffffec2
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	01054b21 	tsteq	r5, r1, lsr #22
     344:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     34c:	02050012 	andeq	r0, r5, #18
     350:	08000644 	stmdaeq	r0, {r2, r6, r9, sl}
     354:	0100c303 	tsteq	r0, r3, lsl #6
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	4b210505 	blmi	841774 <_Min_Heap_Size+0x840f74>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	2f060105 	svccs	0x00060105
     360:	01000502 	tsteq	r0, r2, lsl #10
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	00120501 	andseq	r0, r2, r1, lsl #10
     368:	065c0205 	ldrbeq	r0, [ip], -r5, lsl #4
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	c8030800 	stmdagt	r3, {fp}
     370:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
     374:	01054b21 	tsteq	r5, r1, lsr #22
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     37c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     380:	02050010 	andeq	r0, r5, #16
     384:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	0100cd03 	tsteq	r0, r3, lsl #26
     38c:	30210505 	eorcc	r0, r1, r5, lsl #10
        __HAL_RCC_PLL_DISABLE();
     390:	002f302f 	eoreq	r3, pc, pc, lsr #32
     394:	30010402 	andcc	r0, r1, r2, lsl #8
        tickstart = HAL_GetTick();
     398:	02000905 	andeq	r0, r0, #81920	; 0x14000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00130104 	andseq	r0, r3, r4, lsl #2
     3a0:	3d010402 	cfstrscc	mvf0, [r1, #-8]
     3a4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	02480104 	subeq	r0, r8, #4, 2
     3ac:	01010004 	tsteq	r1, r4
            return HAL_TIMEOUT;
     3b0:	05001f05 	streq	r1, [r0, #-3845]	; 0xfffff0fb
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00000002 	andeq	r0, r0, r2
     3b8:	00dd0300 	sbcseq	r0, sp, r0, lsl #6
     3bc:	2f050501 	svccs	0x00050501
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	01061805 	tsteq	r6, r5, lsl #16
     3c4:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
     3c8:	01061805 	tsteq	r6, r5, lsl #16
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	6a060505 	bvs	1817e8 <_Min_Heap_Size+0x180fe8>
     3d0:	4a582001 	bmi	16083dc <_Min_Heap_Size+0x1607bdc>
     3d4:	20011320 	andcs	r1, r1, r0, lsr #6
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	17204a58 			; <UNDEFINED> instruction: 0x17204a58
     3dc:	01062605 	tsteq	r6, r5, lsl #12
     3e0:	2f060505 	svccs	0x00060505
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	01062005 	tsteq	r6, r5
     3e8:	2f060505 	svccs	0x00060505
     3ec:	01062b05 	tsteq	r6, r5, lsl #22
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	2f060505 	svccs	0x00060505
     3f4:	01062405 	tsteq	r6, r5, lsl #8
     3f8:	21060505 	tstcs	r6, r5, lsl #10
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01062505 	tsteq	r6, r5, lsl #10
     400:	21060505 	tstcs	r6, r5, lsl #10
     404:	01062005 	tsteq	r6, r5
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	2f060505 	svccs	0x00060505
     40c:	01062005 	tsteq	r6, r5
     410:	2f060505 	svccs	0x00060505
     414:	01062005 	tsteq	r6, r5
     418:	21060505 	tstcs	r6, r5, lsl #10
     41c:	01062005 	tsteq	r6, r5
     420:	2f060505 	svccs	0x00060505
     424:	01060905 	tsteq	r6, r5, lsl #18
        __HAL_RCC_PLL_ENABLE();
     428:	053c0805 	ldreq	r0, [ip, #-2053]!	; 0xfffff7fb
     42c:	05260605 	streq	r0, [r6, #-1541]!	; 0xfffff9fb
        tickstart = HAL_GetTick();
     430:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
     438:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
     43c:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe3f <_estack+0xdfffebff>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     444:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe47 <_estack+0xdfffec07>
            return HAL_TIMEOUT;
     448:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
  return HAL_OK;
     44c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
        __HAL_RCC_PLL_DISABLE();
     450:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
     454:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
        tickstart = HAL_GetTick();
     458:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	01054a08 	tsteq	r5, r8, lsl #20
     460:	06090523 	streq	r0, [r9], -r3, lsr #10
     464:	033c7103 	teqeq	ip, #-1073741824	; 0xc0000000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	01053c0d 	tsteq	r5, sp, lsl #24
     46c:	05023006 	streq	r3, [r2, #-6]
            return HAL_TIMEOUT;
     470:	f2010100 	vrhadd.s8	d0, d1, d0
  return HAL_OK;
     474:	03000003 	movweq	r0, #3
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00024a00 	andeq	r4, r2, r0, lsl #20
        pll_config = RCC->PLLCFGR;
     47c:	fb010200 	blx	40c86 <_Min_Heap_Size+0x40486>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	01000d0e 	tsteq	r0, lr, lsl #26
     484:	00010101 	andeq	r0, r1, r1, lsl #2
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00010000 	andeq	r0, r1, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	2f2e0100 	svccs	0x002e0100
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     49c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 4a4 <_Min_Heap_Size-0x35c>
     4a0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     4a8:	5349534d 	movtpl	r5, #37709	; 0x934d
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     4b0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     4bc:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
  return HAL_OK;
     4c0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
}
     4c4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
        return HAL_ERROR;
     4c8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
        return HAL_ERROR;
     4cc:	5f6d7261 	svcpl	0x006d7261
}
     4d0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
        return HAL_ERROR;
     4d4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
          return HAL_ERROR;
     4d8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     4dc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     4e0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     4e4:	30312d69 	eorscc	r2, r1, r9, ror #26
     4e8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     4ec:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     4f0:	615c3031 	cmpvs	ip, r1, lsr r0
     4f4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4f8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     4fc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     500:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     504:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     508:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     50c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     510:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     514:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     518:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     51c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     520:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     524:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     528:	5f6d7261 	svcpl	0x006d7261
     52c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     530:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     534:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     538:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     53c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     540:	30312d69 	eorscc	r2, r1, r9, ror #26
     544:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     548:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     54c:	615c3031 	cmpvs	ip, r1, lsr r0
     550:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     554:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     558:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     55c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     560:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     564:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     568:	2f2e2e00 	svccs	0x002e2e00
     56c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     570:	2f737265 	svccs	0x00737265
     574:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     578:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     57c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     580:	2f54532f 	svccs	0x0054532f
     584:	334d5453 	movtcc	r5, #54355	; 0xd453
     588:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     58c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     590:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     594:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     598:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     59c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     5a0:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     5a4:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     5a8:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     5ac:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 5b4 <_Min_Heap_Size-0x24c>
     5b0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5b4:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
     5b8:	3a630063 	bcc	18c074c <_Min_Heap_Size+0x18bff4c>
     5bc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     5c0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     5c4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     5c8:	6f72705c 	svcvs	0x0072705c
     5cc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     5d0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     5d4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     5d8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     5dc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     5e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     5e4:	61652d65 	cmnvs	r5, r5, ror #26
     5e8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     5ec:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     5f0:	31323032 	teqcc	r2, r2, lsr r0
     5f4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     5f8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     5fc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     600:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     604:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     608:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     60c:	73000065 	movwvc	r0, #101	; 0x65
     610:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     614:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     618:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
     61c:	00010063 	andeq	r0, r1, r3, rrx
     620:	736d6300 	cmnvc	sp, #0, 6
     624:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
     628:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
     62c:	00000200 	andeq	r0, r0, r0, lsl #4
     630:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     634:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     638:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     63c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     640:	00000300 	andeq	r0, r0, r0, lsl #6
     644:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     648:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     64c:	00040068 	andeq	r0, r4, r8, rrx
     650:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     654:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     658:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
     65c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     660:	74730000 	ldrbtvc	r0, [r3], #-0
     664:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     668:	5f787834 	svcpl	0x00787834
     66c:	5f6c6168 	svcpl	0x006c6168
     670:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     674:	00060068 	andeq	r0, r6, r8, rrx
     678:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     67c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     680:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     684:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 68c <_Min_Heap_Size-0x174>
     688:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
     68c:	00000600 	andeq	r0, r0, r0, lsl #12
     690:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     694:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     698:	61685f78 	smcvs	34296	; 0x85f8
     69c:	61755f6c 	cmnvs	r5, ip, ror #30
     6a0:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     6a4:	00000600 	andeq	r0, r0, r0, lsl #12
     6a8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     6ac:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     6b0:	73000007 	movwvc	r0, #7
     6b4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     6b8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     6bc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     6c0:	0600682e 	streq	r6, [r0], -lr, lsr #16
     6c4:	05000000 	streq	r0, [r0, #-0]
     6c8:	02050001 	andeq	r0, r5, #1
     6cc:	080006a0 	stmdaeq	r0, {r5, r7, r9, sl}
     6d0:	0100c603 	tsteq	r0, r3, lsl #12
     6d4:	00220305 	eoreq	r0, r2, r5, lsl #6
     6d8:	4d010402 	cfstrsmi	mvf0, [r1, #-8]
     6dc:	01040200 	mrseq	r0, R12_usr
     6e0:	00090514 	andeq	r0, r9, r4, lsl r5
     6e4:	10010402 	andne	r0, r1, r2, lsl #8
     6e8:	01000502 	tsteq	r0, r2, lsl #10
     6ec:	00010501 	andeq	r0, r1, r1, lsl #10
     6f0:	00000205 	andeq	r0, r0, r5, lsl #4
     6f4:	d5030000 	strle	r0, [r3, #-0]
     6f8:	03050100 	movweq	r0, #20736	; 0x5100
     6fc:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     700:	02004c01 	andeq	r4, r0, #256	; 0x100
     704:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
     708:	04020009 	streq	r0, [r2], #-9
     70c:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     710:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     714:	02050001 	andeq	r0, r5, #1
     718:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
     71c:	0100e403 	tsteq	r0, r3, lsl #8
     720:	00220305 	eoreq	r0, r2, r5, lsl #6
     724:	4c010402 	cfstrsmi	mvf0, [r1], {2}
     728:	01040200 	mrseq	r0, R12_usr
     72c:	00090516 	andeq	r0, r9, r6, lsl r5
     730:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
     734:	01000502 	tsteq	r0, r2, lsl #10
     738:	00010501 	andeq	r0, r1, r1, lsl #10
     73c:	06c80205 	strbeq	r0, [r8], r5, lsl #4
     740:	f3030800 	vsub.i8	d0, d3, d0
     744:	03050100 	movweq	r0, #20736	; 0x5100
     748:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     74c:	02004c01 	andeq	r4, r0, #256	; 0x100
     750:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
     754:	04020009 	streq	r0, [r2], #-9
     758:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     75c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     760:	02050001 	andeq	r0, r5, #1
     764:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
     768:	01018203 	tsteq	r1, r3, lsl #4
     76c:	00220305 	eoreq	r0, r2, r5, lsl #6
     770:	4c010402 	cfstrsmi	mvf0, [r1], {2}
     774:	01040200 	mrseq	r0, R12_usr
     778:	00090516 	andeq	r0, r9, r6, lsl r5
     77c:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
     780:	01000502 	tsteq	r0, r2, lsl #10
     784:	00010501 	andeq	r0, r1, r1, lsl #10
     788:	06f00205 	ldrbteq	r0, [r0], r5, lsl #4
     78c:	91030800 	tstls	r3, r0, lsl #16
     790:	02190101 	andseq	r0, r9, #1073741824	; 0x40000000
     794:	01010001 	tsteq	r1, r1
     798:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     79c:	0006f202 	andeq	pc, r6, r2, lsl #4
     7a0:	019e0308 	orrseq	r0, lr, r8, lsl #6
     7a4:	01021901 	tsteq	r2, r1, lsl #18
     7a8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     7ac:	02050001 	andeq	r0, r5, #1
     7b0:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
     7b4:	0101ab03 	tsteq	r1, r3, lsl #22
     7b8:	00010219 	andeq	r0, r1, r9, lsl r2
     7bc:	01050101 	tsteq	r5, r1, lsl #2
     7c0:	f6020500 			; <UNDEFINED> instruction: 0xf6020500
     7c4:	03080006 	movweq	r0, #32774	; 0x8006
     7c8:	050101b8 	streq	r0, [r1, #-440]	; 0xfffffe48
     7cc:	01052403 	tsteq	r5, r3, lsl #8
     7d0:	01023206 	tsteq	r2, r6, lsl #4
     7d4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     7d8:	02050001 	andeq	r0, r5, #1
     7dc:	08000700 	stmdaeq	r0, {r8, r9, sl}
     7e0:	0101cd03 	tsteq	r1, r3, lsl #26
     7e4:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
     7e8:	02400601 	subeq	r0, r0, #1048576	; 0x100000
     7ec:	01010004 	tsteq	r1, r4
     7f0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     7f4:	00071002 	andeq	r1, r7, r2
     7f8:	01dd0308 	bicseq	r0, sp, r8, lsl #6
     7fc:	21030501 	tstcs	r3, r1, lsl #10
     800:	0502044b 	streq	r0, [r2, #-1099]	; 0xfffffbb5
     804:	05e0031b 	strbeq	r0, [r0, #795]!	; 0x31b
     808:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     80c:	02000104 	andeq	r0, r0, #4, 2
     810:	9f030104 	svcls	0x00030104
     814:	0e05207a 	mcreq	0, 0, r2, cr5, cr10, {3}
     818:	01040200 	mrseq	r0, R12_usr
     81c:	00090501 	andeq	r0, r9, r1, lsl #10
     820:	01010402 	tsteq	r1, r2, lsl #8
     824:	01000602 	tsteq	r0, r2, lsl #12
     828:	00010501 	andeq	r0, r1, r1, lsl #10
     82c:	07280205 	streq	r0, [r8, -r5, lsl #4]!
     830:	ec030800 	stc	8, cr0, [r3], {-0}
     834:	01060101 	tsteq	r6, r1, lsl #2
     838:	21060305 	tstcs	r6, r5, lsl #6
     83c:	06202006 	strteq	r2, [r0], -r6
     840:	0502042f 	streq	r0, [r2, #-1071]	; 0xfffffbd1
     844:	05d1031b 	ldrbeq	r0, [r1, #795]	; 0x31b
     848:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     84c:	02000104 	andeq	r0, r0, #4, 2
     850:	ae030104 	adfges	f0, f3, f4
     854:	0e05207a 	mcreq	0, 0, r2, cr5, cr10, {3}
     858:	01040200 	mrseq	r0, R12_usr
     85c:	00090501 	andeq	r0, r9, r1, lsl #10
     860:	01010402 	tsteq	r1, r2, lsl #8
     864:	01000602 	tsteq	r0, r2, lsl #12
     868:	00016b01 	andeq	r6, r1, r1, lsl #22
     86c:	3c000300 	stccc	3, cr0, [r0], {-0}
     870:	02000001 	andeq	r0, r0, #1
     874:	0d0efb01 	vstreq	d15, [lr, #-4]
     878:	01010100 	mrseq	r0, (UNDEF: 17)
     87c:	00000001 	andeq	r0, r0, r1
     880:	01000001 	tsteq	r0, r1
     884:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     888:	2f65726f 	svccs	0x0065726f
     88c:	00637253 	rsbeq	r7, r3, r3, asr r2
     890:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     894:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     898:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     89c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     8a0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     8a4:	615c6d61 	cmpvs	ip, r1, ror #26
     8a8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     8ac:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     8b0:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     8b4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     8b8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     8bc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     8c0:	2e30312d 	rsfcssp	f3, f0, #5.0
     8c4:	30322d33 	eorscc	r2, r2, r3, lsr sp
     8c8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     8cc:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     8d0:	6f6e2d6d 	svcvs	0x006e2d6d
     8d4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     8d8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     8dc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     8e0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     8e4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     8e8:	00656e69 	rsbeq	r6, r5, r9, ror #28
     8ec:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     8f0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     8f4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     8f8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     8fc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     900:	615c6d61 	cmpvs	ip, r1, ror #26
     904:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     908:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     90c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     910:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     914:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     918:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     91c:	2e30312d 	rsfcssp	f3, f0, #5.0
     920:	30322d33 	eorscc	r2, r2, r3, lsr sp
     924:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     928:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     92c:	6f6e2d6d 	svcvs	0x006e2d6d
     930:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     934:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     938:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     93c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     940:	00737973 	rsbseq	r7, r3, r3, ror r9
     944:	442f2e2e 	strtmi	r2, [pc], #-3630	; 94c <_Min_Heap_Size+0x14c>
     948:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     94c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     950:	5349534d 	movtpl	r5, #37709	; 0x934d
     954:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     958:	2f656369 	svccs	0x00656369
     95c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
     960:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     964:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     968:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     96c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     970:	70670000 	rsbvc	r0, r7, r0
     974:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
     978:	00000100 	andeq	r0, r0, r0, lsl #2
     97c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     980:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     984:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     988:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     98c:	00000200 	andeq	r0, r0, r0, lsl #4
     990:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     994:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     998:	00030068 	andeq	r0, r3, r8, rrx
     99c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     9a0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     9a4:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
     9a8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     9ac:	05000000 	streq	r0, [r0, #-0]
     9b0:	02050001 	andeq	r0, r5, #1
     9b4:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
     9b8:	05012a03 	streq	r2, [r1, #-2563]	; 0xfffff5fd
     9bc:	2e012303 	cdpcs	3, 0, cr2, cr1, cr3, {0}
     9c0:	13204a58 			; <UNDEFINED> instruction: 0x13204a58
     9c4:	4a4a2001 	bmi	12889d0 <_Min_Heap_Size+0x12881d0>
     9c8:	20011320 	andcs	r1, r1, r0, lsr #6
     9cc:	05204a4a 	streq	r4, [r0, #-2634]!	; 0xfffff5b6
     9d0:	02140601 	andseq	r0, r4, #1048576	; 0x100000
     9d4:	01010005 	tsteq	r1, r5
     9d8:	0000030c 	andeq	r0, r0, ip, lsl #6
     9dc:	02020003 	andeq	r0, r2, #3
     9e0:	01020000 	mrseq	r0, (UNDEF: 2)
     9e4:	000d0efb 	strdeq	r0, [sp], -fp
     9e8:	01010101 	tsteq	r1, r1, lsl #2
     9ec:	01000000 	mrseq	r0, (UNDEF: 0)
     9f0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     9f4:	6f432f2e 	svcvs	0x00432f2e
     9f8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     9fc:	63006372 	movwvs	r6, #882	; 0x372
     a00:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     a04:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     a08:	6f646978 	svcvs	0x00646978
     a0c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     a10:	6172676f 	cmnvs	r2, pc, ror #14
     a14:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     a18:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     a1c:	63675c63 	cmnvs	r7, #25344	; 0x6300
     a20:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     a24:	6f6e2d6d 	svcvs	0x006e2d6d
     a28:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     a2c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     a30:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     a34:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     a38:	30312e31 	eorscc	r2, r1, r1, lsr lr
     a3c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     a40:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     a44:	61652d65 	cmnvs	r5, r5, ror #26
     a48:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     a4c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     a50:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     a54:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     a58:	6300656e 	movwvs	r6, #1390	; 0x56e
     a5c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     a60:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     a64:	6f646978 	svcvs	0x00646978
     a68:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     a6c:	6172676f 	cmnvs	r2, pc, ror #14
     a70:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     a74:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     a78:	63675c63 	cmnvs	r7, #25344	; 0x6300
     a7c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     a80:	6f6e2d6d 	svcvs	0x006e2d6d
     a84:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     a88:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     a8c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     a90:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     a94:	30312e31 	eorscc	r2, r1, r1, lsr lr
     a98:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     a9c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     aa0:	61652d65 	cmnvs	r5, r5, ror #26
     aa4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     aa8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     aac:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     ab0:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     ab4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     ab8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     abc:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     ac0:	2f534953 	svccs	0x00534953
     ac4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     ac8:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
     acc:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     ad0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     ad4:	2f787834 	svccs	0x00787834
     ad8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     adc:	00656475 	rsbeq	r6, r5, r5, ror r4
     ae0:	442f2e2e 	strtmi	r2, [pc], #-3630	; ae8 <_Min_Heap_Size+0x2e8>
     ae4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     ae8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     aec:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     af0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     af4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     af8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     afc:	2f726576 	svccs	0x00726576
     b00:	00636e49 	rsbeq	r6, r3, r9, asr #28
     b04:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     b08:	2f65726f 	svccs	0x0065726f
     b0c:	00636e49 	rsbeq	r6, r3, r9, asr #28
     b10:	61737500 	cmnvs	r3, r0, lsl #10
     b14:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
     b18:	00000100 	andeq	r0, r0, r0, lsl #2
     b1c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     b20:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     b24:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     b28:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     b2c:	00000200 	andeq	r0, r0, r0, lsl #4
     b30:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     b34:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     b38:	00030068 	andeq	r0, r3, r8, rrx
     b3c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     b40:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     b44:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
     b48:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     b4c:	74730000 	ldrbtvc	r0, [r3], #-0
     b50:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     b54:	5f787834 	svcpl	0x00787834
     b58:	5f6c6168 	svcpl	0x006c6168
     b5c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     b60:	00050068 	andeq	r0, r5, r8, rrx
     b64:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     b68:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     b6c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     b70:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
     b74:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
     b78:	00050068 	andeq	r0, r5, r8, rrx
     b7c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     b80:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     b84:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     b88:	645f6c61 	ldrbvs	r6, [pc], #-3169	; b90 <_Min_Heap_Size+0x390>
     b8c:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
     b90:	00000500 	andeq	r0, r0, r0, lsl #10
     b94:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     b98:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     b9c:	61685f78 	smcvs	34296	; 0x85f8
     ba0:	61755f6c 	cmnvs	r5, ip, ror #30
     ba4:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     ba8:	00000500 	andeq	r0, r0, r0, lsl #10
     bac:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     bb0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     bb4:	61685f78 	smcvs	34296	; 0x85f8
     bb8:	6f635f6c 	svcvs	0x00635f6c
     bbc:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
     bc0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     bc4:	74730000 	ldrbtvc	r0, [r3], #-0
     bc8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     bcc:	5f787834 	svcpl	0x00787834
     bd0:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
     bd4:	00000600 	andeq	r0, r0, r0, lsl #12
     bd8:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     bdc:	00682e74 	rsbeq	r2, r8, r4, ror lr
     be0:	00000006 	andeq	r0, r0, r6
     be4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     be8:	00078c02 	andeq	r8, r7, r2, lsl #24
     bec:	011f0308 	tsteq	pc, r8, lsl #6
     bf0:	09030305 	stmdbeq	r3, {r0, r2, r8, r9}
     bf4:	06130520 	ldreq	r0, [r3], -r0, lsr #10
     bf8:	06030501 	streq	r0, [r3], -r1, lsl #10
     bfc:	0618053d 			; <UNDEFINED> instruction: 0x0618053d
     c00:	06030501 	streq	r0, [r3], -r1, lsl #10
     c04:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
     c08:	06030501 	streq	r0, [r3], -r1, lsl #10
     c0c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
     c10:	06030501 	streq	r0, [r3], -r1, lsl #10
     c14:	06160521 	ldreq	r0, [r6], -r1, lsr #10
     c18:	06030501 	streq	r0, [r3], -r1, lsl #10
     c1c:	06140521 	ldreq	r0, [r4], -r1, lsr #10
     c20:	06030501 	streq	r0, [r3], -r1, lsl #10
     c24:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
     c28:	06030501 	streq	r0, [r3], -r1, lsl #10
     c2c:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
     c30:	06030501 	streq	r0, [r3], -r1, lsl #10
     c34:	06070521 	streq	r0, [r7], -r1, lsr #10
     c38:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
     c3c:	05280105 	streq	r0, [r8, #-261]!	; 0xfffffefb
     c40:	7a030605 	bvc	c245c <_Min_Heap_Size+0xc1c5c>
     c44:	06010520 	streq	r0, [r1], -r0, lsr #10
     c48:	00050234 	andeq	r0, r5, r4, lsr r2
     c4c:	01050101 	tsteq	r5, r1, lsl #2
     c50:	c0020500 	andgt	r0, r2, r0, lsl #10
     c54:	03080007 	movweq	r0, #32775	; 0x8007
     c58:	0106013b 	tsteq	r6, fp, lsr r1
     c5c:	30060305 	andcc	r0, r6, r5, lsl #6
     c60:	01061405 	tsteq	r6, r5, lsl #8
     c64:	67060305 	strvs	r0, [r6, -r5, lsl #6]
     c68:	01061005 	tsteq	r6, r5
     c6c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     c70:	661b0301 	ldrvs	r0, [fp], -r1, lsl #6
     c74:	03060505 	movweq	r0, #25861	; 0x6505
     c78:	2e012e6b 	cdpcs	14, 0, cr2, cr1, cr11, {3}
     c7c:	14204a66 	strtne	r4, [r0], #-2662	; 0xfffff59a
     c80:	4a4a2001 	bmi	1288c8c <_Min_Heap_Size+0x128848c>
     c84:	19051720 	stmdbne	r5, {r5, r8, r9, sl, ip}
     c88:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     c8c:	1a053d06 	bne	1500ac <_Min_Heap_Size+0x14f8ac>
     c90:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     c94:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
     c98:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
     c9c:	052f0605 	streq	r0, [pc, #-1541]!	; 69f <_Min_Heap_Size-0x161>
     ca0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
     ca4:	062f0605 	strteq	r0, [pc], -r5, lsl #12
     ca8:	5931062e 	ldmdbpl	r1!, {r1, r2, r3, r5, r9, sl}
     cac:	41060105 	tstmi	r6, r5, lsl #2
     cb0:	01000302 	tsteq	r0, r2, lsl #6
     cb4:	00010501 	andeq	r0, r1, r1, lsl #10
     cb8:	00000205 	andeq	r0, r0, r5, lsl #4
     cbc:	dc030000 	stcle	0, cr0, [r3], {-0}
     cc0:	01060100 	mrseq	r0, (UNDEF: 22)
     cc4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
     cc8:	01061005 	tsteq	r6, r5
     ccc:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
     cd0:	3c140301 	ldccc	3, cr0, [r4], {1}
     cd4:	03060505 	movweq	r0, #25861	; 0x6505
     cd8:	065e2072 			; <UNDEFINED> instruction: 0x065e2072
     cdc:	0531063c 	ldreq	r0, [r1, #-1596]!	; 0xfffff9c4
     ce0:	02410601 	subeq	r0, r1, #1048576	; 0x100000
     ce4:	01010007 	tsteq	r1, r7
     ce8:	00000172 	andeq	r0, r0, r2, ror r1
     cec:	01490003 	cmpeq	r9, r3
     cf0:	01020000 	mrseq	r0, (UNDEF: 2)
     cf4:	000d0efb 	strdeq	r0, [sp], -fp
     cf8:	01010101 	tsteq	r1, r1, lsl #2
     cfc:	01000000 	mrseq	r0, (UNDEF: 0)
     d00:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     d04:	6f432f2e 	svcvs	0x00432f2e
     d08:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     d0c:	63006372 	movwvs	r6, #882	; 0x372
     d10:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     d14:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     d18:	6f646978 	svcvs	0x00646978
     d1c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     d20:	6172676f 	cmnvs	r2, pc, ror #14
     d24:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     d28:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     d2c:	63675c63 	cmnvs	r7, #25344	; 0x6300
     d30:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     d34:	6f6e2d6d 	svcvs	0x006e2d6d
     d38:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     d3c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     d40:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     d44:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     d48:	30312e31 	eorscc	r2, r1, r1, lsr lr
     d4c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     d50:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     d54:	61652d65 	cmnvs	r5, r5, ror #26
     d58:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     d5c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     d60:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     d64:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     d68:	6300656e 	movwvs	r6, #1390	; 0x56e
     d6c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     d70:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     d74:	6f646978 	svcvs	0x00646978
     d78:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     d7c:	6172676f 	cmnvs	r2, pc, ror #14
     d80:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     d84:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     d88:	63675c63 	cmnvs	r7, #25344	; 0x6300
     d8c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     d90:	6f6e2d6d 	svcvs	0x006e2d6d
     d94:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     d98:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     d9c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     da0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     da4:	30312e31 	eorscc	r2, r1, r1, lsr lr
     da8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     dac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     db0:	61652d65 	cmnvs	r5, r5, ror #26
     db4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     db8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     dbc:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     dc0:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     dc4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     dc8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     dcc:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     dd0:	2f534953 	svccs	0x00534953
     dd4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     dd8:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
     ddc:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     de0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     de4:	2f787834 	svccs	0x00787834
     de8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     dec:	00656475 	rsbeq	r6, r5, r5, ror r4
     df0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     df4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     df8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     dfc:	6d5f6c61 	ldclvs	12, cr6, [pc, #-388]	; c80 <_Min_Heap_Size+0x480>
     e00:	632e7073 			; <UNDEFINED> instruction: 0x632e7073
     e04:	00000100 	andeq	r0, r0, r0, lsl #2
     e08:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     e0c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     e10:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     e14:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     e18:	00000200 	andeq	r0, r0, r0, lsl #4
     e1c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     e20:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     e24:	00030068 	andeq	r0, r3, r8, rrx
     e28:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     e2c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     e30:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
     e34:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     e38:	05000000 	streq	r0, [r0, #-0]
     e3c:	02050001 	andeq	r0, r5, #1
     e40:	08000840 	stmdaeq	r0, {r6, fp}
     e44:	05013f03 	streq	r3, [r1, #-3843]	; 0xfffff0fd
     e48:	2e012603 	cfmadd32cs	mvax0, mvfx2, mvfx1, mvfx3
     e4c:	13204a58 			; <UNDEFINED> instruction: 0x13204a58
     e50:	4a4a2001 	bmi	1288e5c <_Min_Heap_Size+0x128865c>
     e54:	06010520 	streq	r0, [r1], -r0, lsr #10
     e58:	00050219 	andeq	r0, r5, r9, lsl r2
     e5c:	44f40101 	ldrbtmi	r0, [r4], #257	; 0x101
     e60:	00030000 	andeq	r0, r3, r0
     e64:	00000251 	andeq	r0, r0, r1, asr r2
     e68:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     e6c:	0101000d 	tsteq	r1, sp
     e70:	00000101 	andeq	r0, r0, r1, lsl #2
     e74:	00000100 	andeq	r0, r0, r0, lsl #2
     e78:	2f2e2e01 	svccs	0x002e2e01
     e7c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     e80:	2f737265 	svccs	0x00737265
     e84:	334d5453 	movtcc	r5, #54355	; 0xd453
     e88:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     e8c:	41485f78 	hvcmi	34296	; 0x85f8
     e90:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
     e94:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     e98:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     e9c:	2f2e2e00 	svccs	0x002e2e00
     ea0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     ea4:	2f737265 	svccs	0x00737265
     ea8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     eac:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
     eb0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     eb4:	3a630065 	bcc	18c1050 <_Min_Heap_Size+0x18c0850>
     eb8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     ebc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     ec0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     ec4:	6f72705c 	svcvs	0x0072705c
     ec8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     ecc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     ed0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     ed4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     ed8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     edc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     ee0:	61652d65 	cmnvs	r5, r5, ror #26
     ee4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     ee8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     eec:	31323032 	teqcc	r2, r2, lsr r0
     ef0:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     ef4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     ef8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     efc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     f00:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     f04:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     f08:	616d5c65 	cmnvs	sp, r5, ror #24
     f0c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     f10:	3a630065 	bcc	18c10ac <_Min_Heap_Size+0x18c08ac>
     f14:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     f18:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     f1c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     f20:	6f72705c 	svcvs	0x0072705c
     f24:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     f28:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     f2c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     f30:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     f34:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     f38:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     f3c:	61652d65 	cmnvs	r5, r5, ror #26
     f40:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     f44:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     f48:	31323032 	teqcc	r2, r2, lsr r0
     f4c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     f50:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     f54:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     f58:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     f5c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     f60:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     f64:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     f68:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     f6c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     f70:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     f74:	534d432f 	movtpl	r4, #54063	; 0xd32f
     f78:	442f5349 	strtmi	r5, [pc], #-841	; f80 <_Min_Heap_Size+0x780>
     f7c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     f80:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     f84:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     f88:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     f8c:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     f90:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     f94:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     f98:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     f9c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     fa0:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     fa4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     fa8:	5f787834 	svcpl	0x00787834
     fac:	5f4c4148 	svcpl	0x004c4148
     fb0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     fb4:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     fb8:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     fbc:	6f432f2e 	svcvs	0x00432f2e
     fc0:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     fc4:	0000636e 	andeq	r6, r0, lr, ror #6
     fc8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     fcc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     fd0:	61685f78 	smcvs	34296	; 0x85f8
     fd4:	61755f6c 	cmnvs	r5, ip, ror #30
     fd8:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
     fdc:	00000100 	andeq	r0, r0, r0, lsl #2
     fe0:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
     fe4:	63675f73 	cmnvs	r7, #460	; 0x1cc
     fe8:	00682e63 	rsbeq	r2, r8, r3, ror #28
     fec:	5f000002 	svcpl	0x00000002
     ff0:	61666564 	cmnvs	r6, r4, ror #10
     ff4:	5f746c75 	svcpl	0x00746c75
     ff8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     ffc:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1000:	5f000003 	svcpl	0x00000003
    1004:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1008:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    100c:	00000400 	andeq	r0, r0, r0, lsl #8
    1010:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1014:	30346632 	eorscc	r6, r4, r2, lsr r6
    1018:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    101c:	00050068 	andeq	r0, r5, r8, rrx
    1020:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1024:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1028:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    102c:	00000500 	andeq	r0, r0, r0, lsl #10
    1030:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1034:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1038:	61685f78 	smcvs	34296	; 0x85f8
    103c:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    1040:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1044:	73000006 	movwvc	r0, #6
    1048:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    104c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1050:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1054:	616d645f 	cmnvs	sp, pc, asr r4
    1058:	0600682e 	streq	r6, [r0], -lr, lsr #16
    105c:	74730000 	ldrbtvc	r0, [r3], #-0
    1060:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1064:	5f787834 	svcpl	0x00787834
    1068:	5f6c6168 	svcpl	0x006c6168
    106c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1070:	0600682e 	streq	r6, [r0], -lr, lsr #16
    1074:	74730000 	ldrbtvc	r0, [r3], #-0
    1078:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    107c:	5f787834 	svcpl	0x00787834
    1080:	5f6c6168 	svcpl	0x006c6168
    1084:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1088:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    108c:	74730000 	ldrbtvc	r0, [r3], #-0
    1090:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1094:	5f787834 	svcpl	0x00787834
    1098:	5f6c6168 	svcpl	0x006c6168
    109c:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    10a0:	00060068 	andeq	r0, r6, r8, rrx
    10a4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    10a8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    10ac:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    10b0:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    10b4:	00000600 	andeq	r0, r0, r0, lsl #12
    10b8:	00010500 	andeq	r0, r1, r0, lsl #10
    10bc:	00000205 	andeq	r0, r0, r5, lsl #4
    10c0:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    10c4:	03050119 	movweq	r0, #20761	; 0x5119
    10c8:	01040200 	mrseq	r0, R12_usr
    10cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    10d0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    10d4:	00010104 	andeq	r0, r1, r4, lsl #2
    10d8:	01010402 	tsteq	r1, r2, lsl #8
    10dc:	1f050204 	svcne	0x00050204
    10e0:	01040200 	mrseq	r0, R12_usr
    10e4:	2069e003 	rsbcs	lr, r9, r3
    10e8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    10ec:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    10f0:	04020004 	streq	r0, [r2], #-4
    10f4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    10f8:	2e060104 	adfcss	f0, f6, f4
    10fc:	01040200 	mrseq	r0, R12_usr
    1100:	02002f06 	andeq	r2, r0, #6, 30
    1104:	01060104 	tsteq	r6, r4, lsl #2
    1108:	03050104 	movweq	r0, #20740	; 0x5104
    110c:	01040200 	mrseq	r0, R12_usr
    1110:	01169b03 	tsteq	r6, r3, lsl #22
    1114:	01040200 	mrseq	r0, R12_usr
    1118:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    111c:	02001f05 	andeq	r1, r0, #5, 30
    1120:	93030104 	movwls	r0, #12548	; 0x3104
    1124:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    1128:	01040200 	mrseq	r0, R12_usr
    112c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1130:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1134:	20060104 	andcs	r0, r6, r4, lsl #2
    1138:	01040200 	mrseq	r0, R12_usr
    113c:	02002f06 	andeq	r2, r0, #6, 30
    1140:	01060104 	tsteq	r6, r4, lsl #2
    1144:	03050104 	movweq	r0, #20740	; 0x5104
    1148:	01040200 	mrseq	r0, R12_usr
    114c:	0115e803 	tsteq	r5, r3, lsl #16
    1150:	02040200 	andeq	r0, r4, #0, 4
    1154:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1158:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    115c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    1160:	00010602 	andeq	r0, r1, r2, lsl #12
    1164:	20020402 	andcs	r0, r2, r2, lsl #8
    1168:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    116c:	022f0204 	eoreq	r0, pc, #4, 4	; 0x40000000
    1170:	01010001 	tsteq	r1, r1
    1174:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1178:	00087802 	andeq	r7, r8, r2, lsl #16
    117c:	1a870308 	bne	fe1c1da4 <_estack+0xde1c0b64>
    1180:	00030501 	andeq	r0, r3, r1, lsl #10
    1184:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1188:	01040200 	mrseq	r0, R12_usr
    118c:	04020001 	streq	r0, [r2], #-1
    1190:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1194:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1198:	001f0502 	andseq	r0, pc, r2, lsl #10
    119c:	03010402 	movweq	r0, #5122	; 0x1402
    11a0:	052069d2 	streq	r6, [r0, #-2514]!	; 0xfffff62e
    11a4:	04020005 	streq	r0, [r2], #-5
    11a8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    11ac:	01040200 	mrseq	r0, R12_usr
    11b0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    11b4:	002e0601 	eoreq	r0, lr, r1, lsl #12
    11b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    11bc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    11c0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    11c4:	00030501 	andeq	r0, r3, r1, lsl #10
    11c8:	03010402 	movweq	r0, #5122	; 0x1402
    11cc:	000116a9 	andeq	r1, r1, r9, lsr #13
    11d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    11d4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    11d8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    11dc:	6a850301 	bvs	fe141de8 <_estack+0xde140ba8>
    11e0:	00040501 	andeq	r0, r4, r1, lsl #10
    11e4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    11e8:	01040200 	mrseq	r0, R12_usr
    11ec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    11f0:	00200601 	eoreq	r0, r0, r1, lsl #12
    11f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    11f8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    11fc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1200:	00030501 	andeq	r0, r3, r1, lsl #10
    1204:	03010402 	movweq	r0, #5122	; 0x1402
    1208:	000115f6 	strdeq	r1, [r1], -r6
    120c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1210:	01040200 	mrseq	r0, R12_usr
    1214:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1218:	00130104 	andseq	r0, r3, r4, lsl #2
    121c:	01010402 	tsteq	r1, r2, lsl #8
    1220:	01040200 	mrseq	r0, R12_usr
    1224:	04020001 	streq	r0, [r2], #-1
    1228:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    122c:	02001f05 	andeq	r1, r0, #5, 30
    1230:	d1030104 	tstle	r3, r4, lsl #2
    1234:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    1238:	01040200 	mrseq	r0, R12_usr
    123c:	00040514 	andeq	r0, r4, r4, lsl r5
    1240:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1244:	01040200 	mrseq	r0, R12_usr
    1248:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    124c:	2f060104 	svccs	0x00060104
    1250:	01040200 	mrseq	r0, R12_usr
    1254:	01040106 	tsteq	r4, r6, lsl #2
    1258:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    125c:	aa030104 	bge	c1674 <_Min_Heap_Size+0xc0e74>
    1260:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    1264:	2e060104 	adfcss	f0, f6, f4
    1268:	1f050204 	svcne	0x00050204
    126c:	01040200 	mrseq	r0, R12_usr
    1270:	016a8403 	cmneq	sl, r3, lsl #8
    1274:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1278:	00140104 	andseq	r0, r4, r4, lsl #2
    127c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1280:	01040200 	mrseq	r0, R12_usr
    1284:	02002006 	andeq	r2, r0, #6
    1288:	2f060104 	svccs	0x00060104
    128c:	01040200 	mrseq	r0, R12_usr
    1290:	01040106 	tsteq	r4, r6, lsl #2
    1294:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1298:	f7030104 			; <UNDEFINED> instruction: 0xf7030104
    129c:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    12a0:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    12a4:	02040200 	andeq	r0, r4, #0, 4
    12a8:	000c0515 	andeq	r0, ip, r5, lsl r5
    12ac:	06020402 	streq	r0, [r2], -r2, lsl #8
    12b0:	00060501 	andeq	r0, r6, r1, lsl #10
    12b4:	20020402 	andcs	r0, r2, r2, lsl #8
    12b8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    12bc:	30060204 	andcc	r0, r6, r4, lsl #4
    12c0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    12c4:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    12c8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    12cc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    12d0:	04020003 	streq	r0, [r2], #-3
    12d4:	053d0602 	ldreq	r0, [sp, #-1538]!	; 0xfffff9fe
    12d8:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    12dc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    12e0:	04020001 	streq	r0, [r2], #-1
    12e4:	05052f02 	streq	r2, [r5, #-3842]	; 0xfffff0fe
    12e8:	01040200 	mrseq	r0, R12_usr
    12ec:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    12f0:	01040200 	mrseq	r0, R12_usr
    12f4:	04020001 	streq	r0, [r2], #-1
    12f8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    12fc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1300:	001f0502 	andseq	r0, pc, r2, lsl #10
    1304:	03010402 	movweq	r0, #5122	; 0x1402
    1308:	052069cc 	streq	r6, [r0, #-2508]!	; 0xfffff634
    130c:	04020005 	streq	r0, [r2], #-5
    1310:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1314:	01040200 	mrseq	r0, R12_usr
    1318:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    131c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1320:	06010402 	streq	r0, [r1], -r2, lsl #8
    1324:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1328:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    132c:	00050501 	andeq	r0, r5, r1, lsl #10
    1330:	03010402 	movweq	r0, #5122	; 0x1402
    1334:	000116af 	andeq	r1, r1, pc, lsr #13
    1338:	06010402 	streq	r0, [r1], -r2, lsl #8
    133c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1340:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1344:	69ff0301 	ldmibvs	pc!, {r0, r8, r9}^	; <UNPREDICTABLE>
    1348:	00040501 	andeq	r0, r4, r1, lsl #10
    134c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1350:	01040200 	mrseq	r0, R12_usr
    1354:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1358:	00200601 	eoreq	r0, r0, r1, lsl #12
    135c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1360:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1364:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1368:	00050501 	andeq	r0, r5, r1, lsl #10
    136c:	03010402 	movweq	r0, #5122	; 0x1402
    1370:	020115fc 	andeq	r1, r1, #252, 10	; 0x3f000000
    1374:	01010003 	tsteq	r1, r3
    1378:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    137c:	0008d402 	andeq	sp, r8, r2, lsl #8
    1380:	1bc90308 	blne	ff241fa8 <_estack+0xdf240d68>
    1384:	13030501 	movwne	r0, #13569	; 0x3501
    1388:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    138c:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    1390:	19030c05 	stmdbne	r3, {r0, r2, sl, fp}
    1394:	2201052e 	andcs	r0, r1, #192937984	; 0xb800000
    1398:	03060505 	movweq	r0, #25861	; 0x6505
    139c:	15052067 	strne	r2, [r5, #-103]	; 0xffffff99
    13a0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    13a4:	06070520 	streq	r0, [r7], -r0, lsr #10
    13a8:	062d0544 	strteq	r0, [sp], -r4, asr #10
    13ac:	20390501 	eorscs	r0, r9, r1, lsl #10
    13b0:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    13b4:	1b05200c 	blne	1493ec <_Min_Heap_Size+0x148bec>
    13b8:	06050520 	streq	r0, [r5], -r0, lsr #10
    13bc:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    13c0:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    13c4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    13c8:	5b310607 	blpl	c42bec <_Min_Heap_Size+0xc423ec>
    13cc:	055a0505 	ldrbeq	r0, [sl, #-1285]	; 0xfffffafb
    13d0:	2001060c 	andcs	r0, r1, ip, lsl #12
    13d4:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    13d8:	6d030104 	stfvss	f0, [r3, #-16]
    13dc:	00380520 	eorseq	r0, r8, r0, lsr #10
    13e0:	20010402 	andcs	r0, r1, r2, lsl #8
    13e4:	30060705 	andcc	r0, r6, r5, lsl #14
    13e8:	01060b05 	tsteq	r6, r5, lsl #22
    13ec:	21060705 	tstcs	r6, r5, lsl #14
    13f0:	01062805 	tsteq	r6, r5, lsl #16
    13f4:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    13f8:	1b05201d 	blne	149474 <_Min_Heap_Size+0x148c74>
    13fc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1400:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    1404:	00040201 	andeq	r0, r4, r1, lsl #4
    1408:	01050101 	tsteq	r5, r1, lsl #2
    140c:	34020500 	strcc	r0, [r2], #-1280	; 0xfffffb00
    1410:	03080009 	movweq	r0, #32777	; 0x8009
    1414:	06011cef 	streq	r1, [r1], -pc, ror #25
    1418:	06030501 	streq	r0, [r3], -r1, lsl #10
    141c:	4b15132f 	blmi	5460e0 <_Min_Heap_Size+0x5458e0>
    1420:	01040200 	mrseq	r0, R12_usr
    1424:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    1428:	01040200 	mrseq	r0, R12_usr
    142c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1430:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    1434:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1438:	00580602 	subseq	r0, r8, r2, lsl #12
    143c:	20030402 	andcs	r0, r3, r2, lsl #8
    1440:	09035d06 	stmdbeq	r3, {r1, r2, r8, sl, fp, ip, lr}
    1444:	06210574 			; <UNDEFINED> instruction: 0x06210574
    1448:	203a0501 	eorscs	r0, sl, r1, lsl #10
    144c:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    1450:	4205204f 	andmi	r2, r5, #79	; 0x4f
    1454:	20620520 	rsbcs	r0, r2, r0, lsr #10
    1458:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    145c:	88210603 	stmdahi	r1!, {r0, r1, r9, sl}
    1460:	05052006 	streq	r2, [r5, #-6]
    1464:	66090306 	strvs	r0, [r9], -r6, lsl #6
    1468:	01060f05 	tsteq	r6, r5, lsl #30
    146c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    1470:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    1474:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    1478:	4a0c0306 	bmi	302098 <_Min_Heap_Size+0x301898>
    147c:	01060e05 	tsteq	r6, r5, lsl #28
    1480:	0003052e 	andeq	r0, r3, lr, lsr #10
    1484:	03010402 	movweq	r0, #5122	; 0x1402
    1488:	02002053 	andeq	r2, r0, #83	; 0x53
    148c:	003c0104 	eorseq	r0, ip, r4, lsl #2
    1490:	3d020402 	cfstrscc	mvf0, [r2, #-8]
    1494:	03040200 	movweq	r0, #16896	; 0x4200
    1498:	06070567 	streq	r0, [r7], -r7, ror #10
    149c:	05662103 	strbeq	r2, [r6, #-259]!	; 0xfffffefd
    14a0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    14a4:	0d030603 	stceq	6, cr0, [r3, #-12]
    14a8:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    14ac:	20060501 	andcs	r0, r6, r1, lsl #10
    14b0:	42060505 	andmi	r0, r6, #20971520	; 0x1400000
    14b4:	01061c05 	tsteq	r6, r5, lsl #24
    14b8:	080a05ac 	stmdaeq	sl, {r2, r3, r5, r7, r8, sl}
    14bc:	201c059e 	mulscs	ip, lr, r5
    14c0:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    14c4:	05052201 	streq	r2, [r5, #-513]	; 0xfffffdff
    14c8:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    14cc:	01061c05 	tsteq	r6, r5, lsl #24
    14d0:	080a05ba 	stmdaeq	sl, {r1, r3, r4, r5, r7, r8, sl}
    14d4:	201c0590 	mulscs	ip, r0, r5
    14d8:	02201a05 	eoreq	r1, r0, #20480	; 0x5000
    14dc:	0101000a 	tsteq	r1, sl
    14e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    14e4:	000aa802 	andeq	sl, sl, r2, lsl #16
    14e8:	18f20308 	ldmne	r2!, {r3, r8, r9}^
    14ec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    14f0:	05920603 	ldreq	r0, [r2, #1539]	; 0x603
    14f4:	0b050109 	bleq	141920 <_Min_Heap_Size+0x141120>
    14f8:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    14fc:	7409052e 	strvc	r0, [r9], #-1326	; 0xfffffad2
    1500:	31060505 	tstcc	r6, r5, lsl #10
    1504:	01060805 	tsteq	r6, r5, lsl #16
    1508:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    150c:	01060d05 	tsteq	r6, r5, lsl #26
    1510:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    1514:	33052e0a 	movwcc	r2, #24074	; 0x5e0a
    1518:	01040200 	mrseq	r0, R12_usr
    151c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1520:	060c0542 	streq	r0, [ip], -r2, asr #10
    1524:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    1528:	02004005 	andeq	r4, r0, #5
    152c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1530:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
    1534:	09052e02 	stmdbeq	r5, {r1, r9, sl, fp, sp}
    1538:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    153c:	0c050106 	stfeqs	f0, [r5], {6}
    1540:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1544:	2e2e013f 	mcrcs	1, 1, r0, cr14, cr15, {1}
    1548:	3e17202e 	cdpcc	0, 1, cr2, cr7, cr14, {1}
    154c:	01061c05 	tsteq	r6, r5, lsl #24
    1550:	31060b05 	tstcc	r6, r5, lsl #22
    1554:	05142e01 	ldreq	r2, [r4, #-3585]	; 0xfffff1ff
    1558:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    155c:	0105330a 	tsteq	r5, sl, lsl #6
    1560:	03100521 	tsteq	r0, #138412032	; 0x8400000
    1564:	04023c66 	streq	r3, [r2], #-3174	; 0xfffff39a
    1568:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    156c:	02050001 	andeq	r0, r5, #1
    1570:	00000000 	andeq	r0, r0, r0
    1574:	0105cb03 	tsteq	r5, r3, lsl #22
    1578:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    157c:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    1580:	01010001 	tsteq	r1, r1
    1584:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1588:	000b3402 	andeq	r3, fp, r2, lsl #8
    158c:	02e50308 	rsceq	r0, r5, #8, 6	; 0x20000000
    1590:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1594:	01060605 	tsteq	r6, r5, lsl #12
    1598:	053a0105 	ldreq	r0, [sl, #-261]!	; 0xfffffefb
    159c:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    15a0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    15a4:	05052006 	streq	r2, [r5, #-6]
    15a8:	02003306 	andeq	r3, r0, #402653184	; 0x18000000
    15ac:	4a060104 	bmi	1819c4 <_Min_Heap_Size+0x1811c4>
    15b0:	02040200 	andeq	r0, r4, #0, 4
    15b4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    15b8:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    15bc:	004a0404 	subeq	r0, sl, r4, lsl #8
    15c0:	3c040402 	cfstrscc	mvf0, [r4], {2}
    15c4:	02002f06 	andeq	r2, r0, #6, 30
    15c8:	2e060104 	adfcss	f0, f6, f4
    15cc:	02040200 	andeq	r0, r4, #0, 4
    15d0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    15d4:	03053c03 	movweq	r3, #23555	; 0x5c03
    15d8:	02004206 	andeq	r4, r0, #1610612736	; 0x60000000
    15dc:	2e060104 	adfcss	f0, f6, f4
    15e0:	02003d06 	andeq	r3, r0, #384	; 0x180
    15e4:	2e060104 	adfcss	f0, f6, f4
    15e8:	0c053e06 	stceq	14, cr3, [r5], {6}
    15ec:	06050106 	streq	r0, [r5], -r6, lsl #2
    15f0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    15f4:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    15f8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    15fc:	5b3f0603 	blpl	fc2e10 <_Min_Heap_Size+0xfc2610>
    1600:	5b5b5941 	blpl	16d7b0c <_Min_Heap_Size+0x16d730c>
    1604:	01061405 	tsteq	r6, r5, lsl #8
    1608:	2f060305 	svccs	0x00060305
    160c:	01061105 	tsteq	r6, r5, lsl #2
    1610:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1614:	01061205 	tsteq	r6, r5, lsl #4
    1618:	2f060305 	svccs	0x00060305
    161c:	01061605 	tsteq	r6, r5, lsl #12
    1620:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    1624:	13060105 	movwne	r0, #24837	; 0x6105
    1628:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    162c:	4a030404 	bmi	c2644 <_Min_Heap_Size+0xc1e44>
    1630:	006a0620 	rsbeq	r0, sl, r0, lsr #12
    1634:	06010402 	streq	r0, [r1], -r2, lsl #8
    1638:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    163c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1640:	004a0304 	subeq	r0, sl, r4, lsl #6
    1644:	4a040402 	bmi	102654 <_Min_Heap_Size+0x101e54>
    1648:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    164c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1650:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1654:	053c0604 	ldreq	r0, [ip, #-1540]!	; 0xfffff9fc
    1658:	04020003 	streq	r0, [r2], #-3
    165c:	02003e02 	andeq	r3, r0, #2, 28
    1660:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    1664:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    1668:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    166c:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    1670:	060c052e 	streq	r0, [ip], -lr, lsr #10
    1674:	054a5c03 	strbeq	r5, [sl, #-3075]	; 0xfffff3fd
    1678:	00c00301 	sbceq	r0, r0, r1, lsl #6
    167c:	00060220 	andeq	r0, r6, r0, lsr #4
    1680:	01050101 	tsteq	r5, r1, lsl #2
    1684:	00020500 	andeq	r0, r2, r0, lsl #10
    1688:	03000000 	movweq	r0, #0
    168c:	050103b3 	streq	r0, [r1, #-947]	; 0xfffffc4d
    1690:	06051403 	streq	r1, [r5], -r3, lsl #8
    1694:	01050106 	tsteq	r5, r6, lsl #2
    1698:	0603052c 	streq	r0, [r3], -ip, lsr #10
    169c:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    16a0:	004a0601 	subeq	r0, sl, r1, lsl #12
    16a4:	4a020402 	bmi	826b4 <_Min_Heap_Size+0x81eb4>
    16a8:	03040200 	movweq	r0, #16896	; 0x4200
    16ac:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    16b0:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    16b4:	004a0504 	subeq	r0, sl, r4, lsl #10
    16b8:	4a060402 	bmi	1826c8 <_Min_Heap_Size+0x181ec8>
    16bc:	06040200 	streq	r0, [r4], -r0, lsl #4
    16c0:	002f063c 	eoreq	r0, pc, ip, lsr r6	; <UNPREDICTABLE>
    16c4:	06010402 	streq	r0, [r1], -r2, lsl #8
    16c8:	003d062e 	eorseq	r0, sp, lr, lsr #12
    16cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    16d0:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    16d4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    16d8:	03052e06 	movweq	r2, #24070	; 0x5e06
    16dc:	2e150306 	cdpcs	3, 1, cr0, cr5, cr6, {0}
    16e0:	01061105 	tsteq	r6, r5, lsl #2
    16e4:	3f060305 	svccc	0x00060305
    16e8:	5b59415b 	blpl	1651c5c <_Min_Heap_Size+0x165145c>
    16ec:	14055b5b 	strne	r5, [r5], #-2907	; 0xfffff4a5
    16f0:	03050106 	movweq	r0, #20742	; 0x5106
    16f4:	11052f06 	tstne	r5, r6, lsl #30
    16f8:	03050106 	movweq	r0, #20742	; 0x5106
    16fc:	12053d06 	andne	r3, r5, #384	; 0x180
    1700:	03050106 	movweq	r0, #20742	; 0x5106
    1704:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1708:	03050106 	movweq	r0, #20742	; 0x5106
    170c:	01052206 	tsteq	r5, r6, lsl #4
    1710:	03051306 	movweq	r1, #21254	; 0x5306
    1714:	02040200 	andeq	r0, r4, #0, 4
    1718:	00204d03 	eoreq	r4, r0, r3, lsl #26
    171c:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    1720:	6b060505 	blvs	182b3c <_Min_Heap_Size+0x18233c>
    1724:	01061105 	tsteq	r6, r5, lsl #2
    1728:	03060505 	movweq	r0, #25861	; 0x6505
    172c:	0c052e0e 	stceq	14, cr2, [r5], {14}
    1730:	4a670306 	bmi	19c2350 <_Min_Heap_Size+0x19c1b50>
    1734:	38030105 	stmdacc	r3, {r0, r2, r8}
    1738:	00060220 	andeq	r0, r6, r0, lsr #4
    173c:	01050101 	tsteq	r5, r1, lsl #2
    1740:	00020500 	andeq	r0, r2, r0, lsl #10
    1744:	03000000 	movweq	r0, #0
    1748:	050103fd 	streq	r0, [r1, #-1021]	; 0xfffffc03
    174c:	06051403 	streq	r1, [r5], -r3, lsl #8
    1750:	01050106 	tsteq	r5, r6, lsl #2
    1754:	0603052c 	streq	r0, [r3], -ip, lsr #10
    1758:	04020044 	streq	r0, [r2], #-68	; 0xffffffbc
    175c:	004a0601 	subeq	r0, sl, r1, lsl #12
    1760:	4a020402 	bmi	82770 <_Min_Heap_Size+0x81f70>
    1764:	03040200 	movweq	r0, #16896	; 0x4200
    1768:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    176c:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1770:	004a0504 	subeq	r0, sl, r4, lsl #10
    1774:	4a060402 	bmi	182784 <_Min_Heap_Size+0x181f84>
    1778:	06040200 	streq	r0, [r4], -r0, lsl #4
    177c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1780:	31062006 	tstcc	r6, r6
    1784:	01040200 	mrseq	r0, R12_usr
    1788:	2f062006 	svccs	0x00062006
    178c:	0c053e3d 	stceq	14, cr3, [r5], {61}	; 0x3d
    1790:	06050106 	streq	r0, [r5], -r6, lsl #2
    1794:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1798:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    179c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    17a0:	5b3f0603 	blpl	fc2fb4 <_Min_Heap_Size+0xfc27b4>
    17a4:	5b5b5941 	blpl	16d7cb0 <_Min_Heap_Size+0x16d74b0>
    17a8:	063c0659 			; <UNDEFINED> instruction: 0x063c0659
    17ac:	14055b23 	strne	r5, [r5], #-2851	; 0xfffff4dd
    17b0:	03050106 	movweq	r0, #20742	; 0x5106
    17b4:	11052f06 	tstne	r5, r6, lsl #30
    17b8:	03050106 	movweq	r0, #20742	; 0x5106
    17bc:	12053d06 	andne	r3, r5, #384	; 0x180
    17c0:	03050106 	movweq	r0, #20742	; 0x5106
    17c4:	16052f06 	strne	r2, [r5], -r6, lsl #30
    17c8:	03050106 	movweq	r0, #20742	; 0x5106
    17cc:	01052206 	tsteq	r5, r6, lsl #4
    17d0:	03051306 	movweq	r1, #21254	; 0x5306
    17d4:	02040200 	andeq	r0, r4, #0, 4
    17d8:	00204803 	eoreq	r4, r0, r3, lsl #16
    17dc:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    17e0:	01040200 	mrseq	r0, R12_usr
    17e4:	06050567 	streq	r0, [r5], -r7, ror #10
    17e8:	0611056b 	ldreq	r0, [r1], -fp, ror #10
    17ec:	06050501 	streq	r0, [r5], -r1, lsl #10
    17f0:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    17f4:	6403060c 	strvs	r0, [r3], #-1548	; 0xfffff9f4
    17f8:	0301054a 	movweq	r0, #5450	; 0x154a
    17fc:	0502203f 	streq	r2, [r2, #-63]	; 0xffffffc1
    1800:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1804:	02050001 	andeq	r0, r5, #1
    1808:	00000000 	andeq	r0, r0, r0
    180c:	0104cf03 	tsteq	r4, r3, lsl #30
    1810:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1814:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1818:	03053a01 	movweq	r3, #23041	; 0x5a01
    181c:	2e065206 	cdpcs	2, 0, cr5, cr6, cr6, {0}
    1820:	01040200 	mrseq	r0, R12_usr
    1824:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1828:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    182c:	004a0304 	subeq	r0, sl, r4, lsl #6
    1830:	4a040402 	bmi	102840 <_Min_Heap_Size+0x102040>
    1834:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1838:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    183c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1840:	002e0604 	eoreq	r0, lr, r4, lsl #12
    1844:	20060402 	andcs	r0, r6, r2, lsl #8
    1848:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    184c:	20060104 	andcs	r0, r6, r4, lsl #2
    1850:	002f3d06 	eoreq	r3, pc, r6, lsl #26
    1854:	06010402 	streq	r0, [r1], -r2, lsl #8
    1858:	003d062e 	eorseq	r0, sp, lr, lsr #12
    185c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1860:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    1864:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1868:	03052e06 	movweq	r2, #24070	; 0x5e06
    186c:	2e150306 	cdpcs	3, 1, cr0, cr5, cr6, {0}
    1870:	01061105 	tsteq	r6, r5, lsl #2
    1874:	3f060305 	svccc	0x00060305
    1878:	5b59415b 	blpl	1651dec <_Min_Heap_Size+0x16515ec>
    187c:	06594d59 			; <UNDEFINED> instruction: 0x06594d59
    1880:	5b23063c 	blpl	8c3178 <_Min_Heap_Size+0x8c2978>
    1884:	01061405 	tsteq	r6, r5, lsl #8
    1888:	2f060305 	svccs	0x00060305
    188c:	01061105 	tsteq	r6, r5, lsl #2
    1890:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1894:	01061205 	tsteq	r6, r5, lsl #4
    1898:	2f060305 	svccs	0x00060305
    189c:	01061605 	tsteq	r6, r5, lsl #12
    18a0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    18a4:	13060105 	movwne	r0, #24837	; 0x6105
    18a8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    18ac:	46030204 	strmi	r0, [r3], -r4, lsl #4
    18b0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    18b4:	02006701 	andeq	r6, r0, #262144	; 0x40000
    18b8:	00670204 	rsbeq	r0, r7, r4, lsl #4
    18bc:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    18c0:	6b060505 	blvs	182cdc <_Min_Heap_Size+0x1824dc>
    18c4:	01061105 	tsteq	r6, r5, lsl #2
    18c8:	03060505 	movweq	r0, #25861	; 0x6505
    18cc:	0c052e0e 	stceq	14, cr2, [r5], {14}
    18d0:	4a630306 	bmi	18c24f0 <_Min_Heap_Size+0x18c1cf0>
    18d4:	c1030105 	tstgt	r3, r5, lsl #2
    18d8:	06022000 	streq	r2, [r2], -r0
    18dc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    18e0:	02050001 	andeq	r0, r5, #1
    18e4:	00000000 	andeq	r0, r0, r0
    18e8:	0105da03 	tsteq	r5, r3, lsl #20
    18ec:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    18f0:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    18f4:	01010001 	tsteq	r1, r1
    18f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    18fc:	00000002 	andeq	r0, r0, r2
    1900:	059d0300 	ldreq	r0, [sp, #768]	; 0x300
    1904:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1908:	01060605 	tsteq	r6, r5, lsl #12
    190c:	051e0105 	ldreq	r0, [lr, #-261]	; 0xfffffefb
    1910:	00360603 	eorseq	r0, r6, r3, lsl #12
    1914:	06010402 	streq	r0, [r1], -r2, lsl #8
    1918:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    191c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1920:	004a0304 	subeq	r0, sl, r4, lsl #6
    1924:	4a040402 	bmi	102934 <_Min_Heap_Size+0x102134>
    1928:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    192c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1930:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1934:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    1938:	06110530 			; <UNDEFINED> instruction: 0x06110530
    193c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1940:	580b033f 	stmdapl	fp, {r0, r1, r2, r3, r4, r5, r8, r9}
    1944:	0614053f 			; <UNDEFINED> instruction: 0x0614053f
    1948:	06030501 	streq	r0, [r3], -r1, lsl #10
    194c:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1950:	06030501 	streq	r0, [r3], -r1, lsl #10
    1954:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    1958:	06030501 	streq	r0, [r3], -r1, lsl #10
    195c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    1960:	06030501 	streq	r0, [r3], -r1, lsl #10
    1964:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    1968:	06030501 	streq	r0, [r3], -r1, lsl #10
    196c:	142e0123 	strtne	r0, [lr], #-291	; 0xfffffedd
    1970:	13060105 	movwne	r0, #24837	; 0x6105
    1974:	5f030c05 	svcpl	0x00030c05
    1978:	03010520 	movweq	r0, #5408	; 0x1520
    197c:	05022021 	streq	r2, [r2, #-33]	; 0xffffffdf
    1980:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1984:	02050001 	andeq	r0, r5, #1
    1988:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
    198c:	0108ef03 	tsteq	r8, r3, lsl #30
    1990:	03050106 	movweq	r0, #20742	; 0x5106
    1994:	13134b06 	tstne	r3, #6144	; 0x1800
    1998:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    199c:	06052e01 	streq	r2, [r5], -r1, lsl #28
    19a0:	06050520 	streq	r0, [r5], -r0, lsr #10
    19a4:	0608055a 			; <UNDEFINED> instruction: 0x0608055a
    19a8:	00190501 	andseq	r0, r9, r1, lsl #10
    19ac:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    19b0:	20220f05 	eorcs	r0, r2, r5, lsl #30
    19b4:	23060505 	movwcs	r0, #25861	; 0x6505
    19b8:	01061605 	tsteq	r6, r5, lsl #12
    19bc:	2f060505 	svccs	0x00060505
    19c0:	01061305 	tsteq	r6, r5, lsl #6
    19c4:	3f060505 	svccc	0x00060505
    19c8:	01061105 	tsteq	r6, r5, lsl #2
    19cc:	0605052e 	streq	r0, [r5], -lr, lsr #10
    19d0:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    19d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    19d8:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    19dc:	06050501 	streq	r0, [r5], -r1, lsl #10
    19e0:	06150531 			; <UNDEFINED> instruction: 0x06150531
    19e4:	20080501 	andcs	r0, r8, r1, lsl #10
    19e8:	05441305 	strbeq	r1, [r4, #-773]	; 0xfffffcfb
    19ec:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    19f0:	3c780301 	ldclcc	3, cr0, [r8], #-4
    19f4:	02003805 	andeq	r3, r0, #327680	; 0x50000
    19f8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    19fc:	09052813 	stmdbeq	r5, {r0, r1, r4, fp, sp}
    1a00:	17054306 	strne	r4, [r5, -r6, lsl #6]
    1a04:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1a08:	10053e06 	andne	r3, r5, r6, lsl #28
    1a0c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1a10:	2a053206 	bcs	14e230 <_Min_Heap_Size+0x14da30>
    1a14:	0e050106 	adfeqs	f0, f5, f6
    1a18:	201f052e 	andscs	r0, pc, lr, lsr #10
    1a1c:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    1a20:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1a24:	0c051907 			; <UNDEFINED> instruction: 0x0c051907
    1a28:	19050106 	stmdbne	r5, {r1, r2, r8}
    1a2c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1a30:	053c6e03 	ldreq	r6, [ip, #-3587]!	; 0xfffff1fd
    1a34:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1a38:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
    1a3c:	0b052206 	bleq	14a25c <_Min_Heap_Size+0x149a5c>
    1a40:	0a050106 	beq	141e60 <_Min_Heap_Size+0x141660>
    1a44:	06070574 			; <UNDEFINED> instruction: 0x06070574
    1a48:	060a0534 			; <UNDEFINED> instruction: 0x060a0534
    1a4c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1a50:	06290535 			; <UNDEFINED> instruction: 0x06290535
    1a54:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    1a58:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    1a5c:	06210609 	strteq	r0, [r1], -r9, lsl #12
    1a60:	03130501 	tsteq	r3, #4194304	; 0x400000
    1a64:	201f2068 	andscs	r2, pc, r8, rrx
    1a68:	03060505 	movweq	r0, #25861	; 0x6505
    1a6c:	0905201e 	stmdbeq	r5, {r1, r2, r3, r4, sp}
    1a70:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1a74:	06050574 			; <UNDEFINED> instruction: 0x06050574
    1a78:	06130528 	ldreq	r0, [r3], -r8, lsr #10
    1a7c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1a80:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1a84:	06070501 	streq	r0, [r7], -r1, lsl #10
    1a88:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    1a8c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    1a90:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    1a94:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1a98:	2e0a030c 	cdpcs	3, 0, cr0, cr10, cr12, {0}
    1a9c:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    1aa0:	3c43030f 	mcrrcc	3, 0, r0, r3, cr15
    1aa4:	00010220 	andeq	r0, r1, r0, lsr #4
    1aa8:	01050101 	tsteq	r5, r1, lsl #2
    1aac:	00020500 	andeq	r0, r2, r0, lsl #10
    1ab0:	03000000 	movweq	r0, #0
    1ab4:	060109c5 	streq	r0, [r1], -r5, asr #19
    1ab8:	06030501 	streq	r0, [r3], -r1, lsl #10
    1abc:	1513134b 	ldrne	r1, [r3, #-843]	; 0xfffffcb5
    1ac0:	01060c05 	tsteq	r6, r5, lsl #24
    1ac4:	2006052e 	andcs	r0, r6, lr, lsr #10
    1ac8:	5a060505 	bpl	182ee4 <_Min_Heap_Size+0x1826e4>
    1acc:	01060805 	tsteq	r6, r5, lsl #16
    1ad0:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1ad4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1ad8:	0520220f 	streq	r2, [r0, #-527]!	; 0xfffffdf1
    1adc:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1ae0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1ae4:	052f0605 	streq	r0, [pc, #-1541]!	; 14e7 <_Min_Heap_Size+0xce7>
    1ae8:	20010614 	andcs	r0, r1, r4, lsl r6
    1aec:	2f060505 	svccs	0x00060505
    1af0:	01061a05 	tsteq	r6, r5, lsl #20
    1af4:	23060505 	movwcs	r0, #25861	; 0x6505
    1af8:	01061105 	tsteq	r6, r5, lsl #2
    1afc:	0605052e 	streq	r0, [r5], -lr, lsr #10
    1b00:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    1b04:	06050501 	streq	r0, [r5], -r1, lsl #10
    1b08:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    1b0c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1b10:	06150531 			; <UNDEFINED> instruction: 0x06150531
    1b14:	20080501 	andcs	r0, r8, r1, lsl #10
    1b18:	05441305 	strbeq	r1, [r4, #-773]	; 0xfffffcfb
    1b1c:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    1b20:	3c780301 	ldclcc	3, cr0, [r8], #-4
    1b24:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1b28:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1b2c:	1f372813 	svcne	0x00372813
    1b30:	06090520 	streq	r0, [r9], -r0, lsr #10
    1b34:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    1b38:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1b3c:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    1b40:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1b44:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1b48:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    1b4c:	18052032 	stmdane	r5, {r1, r4, r5, sp}
    1b50:	2e160520 	cfmul64cs	mvdx0, mvdx6, mvdx0
    1b54:	2f060905 	svccs	0x00060905
    1b58:	0b050106 	bleq	141f78 <_Min_Heap_Size+0x141778>
    1b5c:	28052606 	stmdacs	r5, {r1, r2, r9, sl, sp}
    1b60:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    1b64:	20170520 	andscs	r0, r7, r0, lsr #10
    1b68:	26060905 	strcs	r0, [r6], -r5, lsl #18
    1b6c:	01061305 	tsteq	r6, r5, lsl #6
    1b70:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    1b74:	01060c05 	tsteq	r6, r5, lsl #24
    1b78:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    1b7c:	6703060b 	strvs	r0, [r3, -fp, lsl #12]
    1b80:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    1b84:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    1b88:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    1b8c:	01060b05 	tsteq	r6, r5, lsl #22
    1b90:	05740a05 	ldrbeq	r0, [r4, #-2565]!	; 0xfffff5fb
    1b94:	05340607 	ldreq	r0, [r4, #-1543]!	; 0xfffff9f9
    1b98:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1b9c:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    1ba0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1ba4:	3c05200c 	stccc	0, cr2, [r5], {12}
    1ba8:	01040200 	mrseq	r0, R12_usr
    1bac:	007e053c 	rsbseq	r0, lr, ip, lsr r5
    1bb0:	20020402 	andcs	r0, r2, r2, lsl #8
    1bb4:	02006f05 	andeq	r6, r0, #5, 30
    1bb8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    1bbc:	0534060b 	ldreq	r0, [r4, #-1547]!	; 0xfffff9f5
    1bc0:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    1bc4:	19052032 	stmdbne	r5, {r1, r4, r5, sp}
    1bc8:	2e170520 	cfmul64cs	mvdx0, mvdx7, mvdx0
    1bcc:	36060505 	strcc	r0, [r6], -r5, lsl #10
    1bd0:	01061405 	tsteq	r6, r5, lsl #8
    1bd4:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1bd8:	01060c05 	tsteq	r6, r5, lsl #24
    1bdc:	22010532 	andcs	r0, r1, #209715200	; 0xc800000
    1be0:	41030f05 	tstmi	r3, r5, lsl #30
    1be4:	0102203c 	tsteq	r2, ip, lsr r0
    1be8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1bec:	02050001 	andeq	r0, r5, #1
    1bf0:	00000000 	andeq	r0, r0, r0
    1bf4:	010a9c03 	tsteq	sl, r3, lsl #24
    1bf8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1bfc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1c00:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    1c04:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    1c08:	19050106 	stmdbne	r5, {r1, r2, r8}
    1c0c:	01040200 	mrseq	r0, R12_usr
    1c10:	06050520 	streq	r0, [r5], -r0, lsr #10
    1c14:	06170525 	ldreq	r0, [r7], -r5, lsr #10
    1c18:	06050501 	streq	r0, [r5], -r1, lsl #10
    1c1c:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    1c20:	06050501 	streq	r0, [r5], -r1, lsl #10
    1c24:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1c28:	06050501 	streq	r0, [r5], -r1, lsl #10
    1c2c:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    1c30:	06050501 	streq	r0, [r5], -r1, lsl #10
    1c34:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1c38:	05052001 	streq	r2, [r5, #-1]
    1c3c:	20063106 	andcs	r3, r6, r6, lsl #2
    1c40:	0c054c06 	stceq	12, cr4, [r5], {6}
    1c44:	24200106 	strtcs	r0, [r0], #-262	; 0xfffffefa
    1c48:	030e0520 	movweq	r0, #58656	; 0xe520
    1c4c:	2020206f 	eorcs	r2, r0, pc, rrx
    1c50:	13030105 	movwne	r0, #12549	; 0x3105
    1c54:	00010220 	andeq	r0, r1, r0, lsr #4
    1c58:	01050101 	tsteq	r5, r1, lsl #2
    1c5c:	00020500 	andeq	r0, r2, r0, lsl #10
    1c60:	03000000 	movweq	r0, #0
    1c64:	06010ae3 	streq	r0, [r1], -r3, ror #21
    1c68:	06030501 	streq	r0, [r3], -r1, lsl #10
    1c6c:	0c051521 	cfstr32eq	mvfx1, [r5], {33}	; 0x21
    1c70:	06050106 	streq	r0, [r5], -r6, lsl #2
    1c74:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    1c78:	0608053e 			; <UNDEFINED> instruction: 0x0608053e
    1c7c:	00190501 	andseq	r0, r9, r1, lsl #10
    1c80:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1c84:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    1c88:	20270301 	eorcs	r0, r7, r1, lsl #6
    1c8c:	03060505 	movweq	r0, #25861	; 0x6505
    1c90:	1705205c 	smlsdne	r5, ip, r0, r2
    1c94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c98:	17052106 	strne	r2, [r5, -r6, lsl #2]
    1c9c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1ca0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1ca4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1ca8:	16052206 	strne	r2, [r5], -r6, lsl #4
    1cac:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1cb0:	13052f06 	movwne	r2, #24326	; 0x5f06
    1cb4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1cb8:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    1cbc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1cc0:	05052025 	streq	r2, [r5, #-37]	; 0xffffffdb
    1cc4:	0a053106 	beq	14e0e4 <_Min_Heap_Size+0x14d8e4>
    1cc8:	29050106 	stmdbcs	r5, {r1, r2, r8}
    1ccc:	06050520 	streq	r0, [r5], -r0, lsr #10
    1cd0:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    1cd4:	20260501 	eorcs	r0, r6, r1, lsl #10
    1cd8:	31060505 	tstcc	r6, r5, lsl #10
    1cdc:	01060a05 	tsteq	r6, r5, lsl #20
    1ce0:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    1ce4:	13230605 			; <UNDEFINED> instruction: 0x13230605
    1ce8:	01064d05 	tsteq	r6, r5, lsl #26
    1cec:	2e200505 	cfsh64cs	mvdx0, mvdx0, #5
    1cf0:	02003f06 	andeq	r3, r0, #6, 30
    1cf4:	004e0104 	subeq	r0, lr, r4, lsl #2
    1cf8:	01010402 	tsteq	r1, r2, lsl #8
    1cfc:	01040200 	mrseq	r0, R12_usr
    1d00:	04020001 	streq	r0, [r2], #-1
    1d04:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1d08:	02001f05 	andeq	r1, r0, #5, 30
    1d0c:	d1030104 	tstle	r3, r4, lsl #2
    1d10:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    1d14:	01040200 	mrseq	r0, R12_usr
    1d18:	00040514 	andeq	r0, r4, r4, lsl r5
    1d1c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1d20:	01040200 	mrseq	r0, R12_usr
    1d24:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1d28:	2f060104 	svccs	0x00060104
    1d2c:	01040200 	mrseq	r0, R12_usr
    1d30:	01040106 	tsteq	r4, r6, lsl #2
    1d34:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1d38:	aa030104 	bge	c2150 <_Min_Heap_Size+0xc1950>
    1d3c:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    1d40:	2e060104 	adfcss	f0, f6, f4
    1d44:	1f050204 	svcne	0x00050204
    1d48:	01040200 	mrseq	r0, R12_usr
    1d4c:	01798403 	cmneq	r9, r3, lsl #8
    1d50:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1d54:	00140104 	andseq	r0, r4, r4, lsl #2
    1d58:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1d5c:	01040200 	mrseq	r0, R12_usr
    1d60:	02002006 	andeq	r2, r0, #6
    1d64:	2f060104 	svccs	0x00060104
    1d68:	01040200 	mrseq	r0, R12_usr
    1d6c:	01040106 	tsteq	r4, r6, lsl #2
    1d70:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1d74:	f7030104 			; <UNDEFINED> instruction: 0xf7030104
    1d78:	0c050106 	stfeqs	f0, [r5], {6}
    1d7c:	20162e30 	andscs	r2, r6, r0, lsr lr
    1d80:	5b030e05 	blpl	c559c <_Min_Heap_Size+0xc4d9c>
    1d84:	08022020 	stmdaeq	r2, {r5, sp}
    1d88:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1d8c:	02050001 	andeq	r0, r5, #1
    1d90:	00000000 	andeq	r0, r0, r0
    1d94:	010bbc03 	tsteq	fp, r3, lsl #24
    1d98:	14130305 	ldrne	r0, [r3], #-773	; 0xfffffcfb
    1d9c:	01061005 	tsteq	r6, r5
    1da0:	4b060305 	blmi	1829bc <_Min_Heap_Size+0x1821bc>
    1da4:	01060d05 	tsteq	r6, r5, lsl #26
    1da8:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    1dac:	04020005 	streq	r0, [r2], #-5
    1db0:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    1db4:	04020003 	streq	r0, [r2], #-3
    1db8:	10051502 	andne	r1, r5, r2, lsl #10
    1dbc:	02040200 	andeq	r0, r4, #0, 4
    1dc0:	03050106 	movweq	r0, #20742	; 0x5106
    1dc4:	02040200 	andeq	r0, r4, #0, 4
    1dc8:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    1dcc:	02040200 	andeq	r0, r4, #0, 4
    1dd0:	06050106 	streq	r0, [r5], -r6, lsl #2
    1dd4:	02040200 	andeq	r0, r4, #0, 4
    1dd8:	0005053c 	andeq	r0, r5, ip, lsr r5
    1ddc:	06020402 	streq	r0, [r2], -r2, lsl #8
    1de0:	00030535 	andeq	r0, r3, r5, lsr r5
    1de4:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    1de8:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    1dec:	13060204 	movwne	r0, #25092	; 0x6204
    1df0:	02040200 	andeq	r0, r4, #0, 4
    1df4:	00310520 	eorseq	r0, r1, r0, lsr #10
    1df8:	03010402 	movweq	r0, #5122	; 0x1402
    1dfc:	0505206e 	streq	r2, [r5, #-110]	; 0xffffff92
    1e00:	01040200 	mrseq	r0, R12_usr
    1e04:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    1e08:	00010104 	andeq	r0, r1, r4, lsl #2
    1e0c:	01010402 	tsteq	r1, r2, lsl #8
    1e10:	01040200 	mrseq	r0, R12_usr
    1e14:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1e18:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1e1c:	78980301 	ldmvc	r8, {r0, r8, r9}
    1e20:	00050520 	andeq	r0, r5, r0, lsr #10
    1e24:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1e28:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1e2c:	00140104 	andseq	r0, r4, r4, lsl #2
    1e30:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e34:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1e38:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1e3c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e40:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1e44:	04020005 	streq	r0, [r2], #-5
    1e48:	07e30301 	strbeq	r0, [r3, r1, lsl #6]!
    1e4c:	04020001 	streq	r0, [r2], #-1
    1e50:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1e54:	001f0502 	andseq	r0, pc, r2, lsl #10
    1e58:	03010402 	movweq	r0, #5122	; 0x1402
    1e5c:	050178cb 	streq	r7, [r1, #-2251]	; 0xfffff735
    1e60:	04020004 	streq	r0, [r2], #-4
    1e64:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1e68:	00140104 	andseq	r0, r4, r4, lsl #2
    1e6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e70:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1e74:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1e78:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e7c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1e80:	04020005 	streq	r0, [r2], #-5
    1e84:	07b00301 	ldreq	r0, [r0, r1, lsl #6]!
    1e88:	04020001 	streq	r0, [r2], #-1
    1e8c:	32053c01 	andcc	r3, r5, #256	; 0x100
    1e90:	01040200 	mrseq	r0, R12_usr
    1e94:	00050516 	andeq	r0, r5, r6, lsl r5
    1e98:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e9c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1ea0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1ea4:	00010104 	andeq	r0, r1, r4, lsl #2
    1ea8:	01010402 	tsteq	r1, r2, lsl #8
    1eac:	1f050204 	svcne	0x00050204
    1eb0:	01040200 	mrseq	r0, R12_usr
    1eb4:	20789103 	rsbscs	r9, r8, r3, lsl #2
    1eb8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1ebc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1ec0:	04020004 	streq	r0, [r2], #-4
    1ec4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1ec8:	2e060104 	adfcss	f0, f6, f4
    1ecc:	01040200 	mrseq	r0, R12_usr
    1ed0:	02002f06 	andeq	r2, r0, #6, 30
    1ed4:	01060104 	tsteq	r6, r4, lsl #2
    1ed8:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1edc:	01040200 	mrseq	r0, R12_usr
    1ee0:	0107ea03 	tsteq	r7, r3, lsl #20
    1ee4:	01040200 	mrseq	r0, R12_usr
    1ee8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    1eec:	02001f05 	andeq	r1, r0, #5, 30
    1ef0:	c4030104 	strgt	r0, [r3], #-260	; 0xfffffefc
    1ef4:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    1ef8:	01040200 	mrseq	r0, R12_usr
    1efc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f00:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1f04:	20060104 	andcs	r0, r6, r4, lsl #2
    1f08:	01040200 	mrseq	r0, R12_usr
    1f0c:	02002f06 	andeq	r2, r0, #6, 30
    1f10:	01060104 	tsteq	r6, r4, lsl #2
    1f14:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1f18:	01040200 	mrseq	r0, R12_usr
    1f1c:	0107b703 	tsteq	r7, r3, lsl #14
    1f20:	01040200 	mrseq	r0, R12_usr
    1f24:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1f28:	00010601 	andeq	r0, r1, r1, lsl #12
    1f2c:	13010402 	movwne	r0, #5122	; 0x1402
    1f30:	01040200 	mrseq	r0, R12_usr
    1f34:	04020001 	streq	r0, [r2], #-1
    1f38:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1f3c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1f40:	001f0502 	andseq	r0, pc, r2, lsl #10
    1f44:	03010402 	movweq	r0, #5122	; 0x1402
    1f48:	05207890 	streq	r7, [r0, #-2192]!	; 0xfffff770
    1f4c:	04020005 	streq	r0, [r2], #-5
    1f50:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1f54:	01040200 	mrseq	r0, R12_usr
    1f58:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f5c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1f60:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f64:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1f68:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1f6c:	00050501 	andeq	r0, r5, r1, lsl #10
    1f70:	03010402 	movweq	r0, #5122	; 0x1402
    1f74:	000107eb 	andeq	r0, r1, fp, ror #15
    1f78:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f7c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1f80:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1f84:	78c30301 	stmiavc	r3, {r0, r8, r9}^
    1f88:	00040501 	andeq	r0, r4, r1, lsl #10
    1f8c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1f90:	01040200 	mrseq	r0, R12_usr
    1f94:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f98:	00200601 	eoreq	r0, r0, r1, lsl #12
    1f9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1fa0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1fa4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1fa8:	00050501 	andeq	r0, r5, r1, lsl #10
    1fac:	03010402 	movweq	r0, #5122	; 0x1402
    1fb0:	000107b8 			; <UNDEFINED> instruction: 0x000107b8
    1fb4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1fb8:	01040200 	mrseq	r0, R12_usr
    1fbc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1fc0:	00150104 	andseq	r0, r5, r4, lsl #2
    1fc4:	01010402 	tsteq	r1, r2, lsl #8
    1fc8:	01040200 	mrseq	r0, R12_usr
    1fcc:	04020001 	streq	r0, [r2], #-1
    1fd0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1fd4:	02001f05 	andeq	r1, r0, #5, 30
    1fd8:	8d030104 	stfhis	f0, [r3, #-16]
    1fdc:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    1fe0:	01040200 	mrseq	r0, R12_usr
    1fe4:	00040514 	andeq	r0, r4, r4, lsl r5
    1fe8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1fec:	01040200 	mrseq	r0, R12_usr
    1ff0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1ff4:	2f060104 	svccs	0x00060104
    1ff8:	01040200 	mrseq	r0, R12_usr
    1ffc:	01040106 	tsteq	r4, r6, lsl #2
    2000:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2004:	ee030104 	adfs	f0, f3, f4
    2008:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    200c:	2e060104 	adfcss	f0, f6, f4
    2010:	1f050204 	svcne	0x00050204
    2014:	01040200 	mrseq	r0, R12_usr
    2018:	0178c003 	cmneq	r8, r3
    201c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2020:	00140104 	andseq	r0, r4, r4, lsl #2
    2024:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2028:	01040200 	mrseq	r0, R12_usr
    202c:	02002006 	andeq	r2, r0, #6
    2030:	2f060104 	svccs	0x00060104
    2034:	01040200 	mrseq	r0, R12_usr
    2038:	01040106 	tsteq	r4, r6, lsl #2
    203c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2040:	bb030104 	bllt	c2458 <_Min_Heap_Size+0xc1c58>
    2044:	03020107 	movweq	r0, #8455	; 0x2107
    2048:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    204c:	02050001 	andeq	r0, r5, #1
    2050:	00000000 	andeq	r0, r0, r0
    2054:	010bdb03 	tsteq	fp, r3, lsl #22
    2058:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    205c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2060:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    2064:	02040200 	andeq	r0, r4, #0, 4
    2068:	03053106 	movweq	r3, #20742	; 0x5106
    206c:	02040200 	andeq	r0, r4, #0, 4
    2070:	000c0515 	andeq	r0, ip, r5, lsl r5
    2074:	06020402 	streq	r0, [r2], -r2, lsl #8
    2078:	00060501 	andeq	r0, r6, r1, lsl #10
    207c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    2080:	03060505 	movweq	r0, #25861	; 0x6505
    2084:	03052e0d 	movweq	r2, #24077	; 0x5e0d
    2088:	06010515 			; <UNDEFINED> instruction: 0x06010515
    208c:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
    2090:	01040200 	mrseq	r0, R12_usr
    2094:	206c0306 	rsbcs	r0, ip, r6, lsl #6
    2098:	01040200 	mrseq	r0, R12_usr
    209c:	04020001 	streq	r0, [r2], #-1
    20a0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    20a4:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    20a8:	001f0502 	andseq	r0, pc, r2, lsl #10
    20ac:	03010402 	movweq	r0, #5122	; 0x1402
    20b0:	052077fb 	streq	r7, [r0, #-2043]!	; 0xfffff805
    20b4:	04020005 	streq	r0, [r2], #-5
    20b8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    20bc:	01040200 	mrseq	r0, R12_usr
    20c0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    20c4:	002e0601 	eoreq	r0, lr, r1, lsl #12
    20c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    20cc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    20d0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    20d4:	00050501 	andeq	r0, r5, r1, lsl #10
    20d8:	03010402 	movweq	r0, #5122	; 0x1402
    20dc:	00010880 	andeq	r0, r1, r0, lsl #17
    20e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    20e4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    20e8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    20ec:	78ae0301 	stmiavc	lr!, {r0, r8, r9}
    20f0:	00040501 	andeq	r0, r4, r1, lsl #10
    20f4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    20f8:	01040200 	mrseq	r0, R12_usr
    20fc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2100:	00200601 	eoreq	r0, r0, r1, lsl #12
    2104:	06010402 	streq	r0, [r1], -r2, lsl #8
    2108:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    210c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2110:	00050501 	andeq	r0, r5, r1, lsl #10
    2114:	03010402 	movweq	r0, #5122	; 0x1402
    2118:	000107cd 	andeq	r0, r1, sp, asr #15
    211c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    2120:	050d0105 	streq	r0, [sp, #-261]	; 0xfffffefb
    2124:	0b030605 	bleq	c3940 <_Min_Heap_Size+0xc3140>
    2128:	3c2e0120 	stfccs	f0, [lr], #-128	; 0xffffff80
    212c:	0515202e 	ldreq	r2, [r5, #-46]	; 0xffffffd2
    2130:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2134:	07052008 	streq	r2, [r5, -r8]
    2138:	01040200 	mrseq	r0, R12_usr
    213c:	02002206 	andeq	r2, r0, #1610612736	; 0x60000000
    2140:	00010104 	andeq	r0, r1, r4, lsl #2
    2144:	01010402 	tsteq	r1, r2, lsl #8
    2148:	01040200 	mrseq	r0, R12_usr
    214c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2150:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2154:	77f00301 	ldrbvc	r0, [r0, r1, lsl #6]!
    2158:	00050520 	andeq	r0, r5, r0, lsr #10
    215c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2160:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2164:	00140104 	andseq	r0, r4, r4, lsl #2
    2168:	06010402 	streq	r0, [r1], -r2, lsl #8
    216c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2170:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2174:	06010402 	streq	r0, [r1], -r2, lsl #8
    2178:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    217c:	04020007 	streq	r0, [r2], #-7
    2180:	088b0301 	stmeq	fp, {r0, r8, r9}
    2184:	04020001 	streq	r0, [r2], #-1
    2188:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    218c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2190:	03010402 	movweq	r0, #5122	; 0x1402
    2194:	050178a3 	streq	r7, [r1, #-2211]	; 0xfffff75d
    2198:	04020004 	streq	r0, [r2], #-4
    219c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    21a0:	00140104 	andseq	r0, r4, r4, lsl #2
    21a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    21a8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    21ac:	002f0601 	eoreq	r0, pc, r1, lsl #12
    21b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    21b4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    21b8:	04020007 	streq	r0, [r2], #-7
    21bc:	07d80301 	ldrbeq	r0, [r8, r1, lsl #6]
    21c0:	04020001 	streq	r0, [r2], #-1
    21c4:	02002e01 	andeq	r2, r0, #1, 28
    21c8:	01060104 	tsteq	r6, r4, lsl #2
    21cc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    21d0:	00140104 	andseq	r0, r4, r4, lsl #2
    21d4:	01010402 	tsteq	r1, r2, lsl #8
    21d8:	01040200 	mrseq	r0, R12_usr
    21dc:	04020001 	streq	r0, [r2], #-1
    21e0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    21e4:	02001f05 	andeq	r1, r0, #5, 30
    21e8:	ee030104 	adfs	f0, f3, f4
    21ec:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    21f0:	01040200 	mrseq	r0, R12_usr
    21f4:	00040514 	andeq	r0, r4, r4, lsl r5
    21f8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    21fc:	01040200 	mrseq	r0, R12_usr
    2200:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2204:	2f060104 	svccs	0x00060104
    2208:	01040200 	mrseq	r0, R12_usr
    220c:	01040106 	tsteq	r4, r6, lsl #2
    2210:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2214:	8d030104 	stfhis	f0, [r3, #-16]
    2218:	02000108 	andeq	r0, r0, #8, 2
    221c:	2e060104 	adfcss	f0, f6, f4
    2220:	1f050204 	svcne	0x00050204
    2224:	01040200 	mrseq	r0, R12_usr
    2228:	0178a103 	cmneq	r8, r3, lsl #2
    222c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2230:	00140104 	andseq	r0, r4, r4, lsl #2
    2234:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2238:	01040200 	mrseq	r0, R12_usr
    223c:	02002006 	andeq	r2, r0, #6
    2240:	2f060104 	svccs	0x00060104
    2244:	01040200 	mrseq	r0, R12_usr
    2248:	01040106 	tsteq	r4, r6, lsl #2
    224c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2250:	da030104 	ble	c2668 <_Min_Heap_Size+0xc1e68>
    2254:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2258:	002e0104 	eoreq	r0, lr, r4, lsl #2
    225c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2260:	04020001 	streq	r0, [r2], #-1
    2264:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    2268:	00010104 	andeq	r0, r1, r4, lsl #2
    226c:	01010402 	tsteq	r1, r2, lsl #8
    2270:	01040200 	mrseq	r0, R12_usr
    2274:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2278:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    227c:	77eb0301 	strbvc	r0, [fp, r1, lsl #6]!
    2280:	00050520 	andeq	r0, r5, r0, lsr #10
    2284:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2288:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    228c:	00140104 	andseq	r0, r4, r4, lsl #2
    2290:	06010402 	streq	r0, [r1], -r2, lsl #8
    2294:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2298:	002f0601 	eoreq	r0, pc, r1, lsl #12
    229c:	06010402 	streq	r0, [r1], -r2, lsl #8
    22a0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    22a4:	04020005 	streq	r0, [r2], #-5
    22a8:	08900301 	ldmeq	r0, {r0, r8, r9}
    22ac:	04020001 	streq	r0, [r2], #-1
    22b0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    22b4:	001f0502 	andseq	r0, pc, r2, lsl #10
    22b8:	03010402 	movweq	r0, #5122	; 0x1402
    22bc:	0501789e 	streq	r7, [r1, #-2206]	; 0xfffff762
    22c0:	04020004 	streq	r0, [r2], #-4
    22c4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    22c8:	00140104 	andseq	r0, r4, r4, lsl #2
    22cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    22d0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    22d4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    22d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    22dc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    22e0:	04020005 	streq	r0, [r2], #-5
    22e4:	07dd0301 	ldrbeq	r0, [sp, r1, lsl #6]
    22e8:	04020001 	streq	r0, [r2], #-1
    22ec:	052e0602 	streq	r0, [lr, #-1538]!	; 0xfffff9fe
    22f0:	04020003 	streq	r0, [r2], #-3
    22f4:	01051502 	tsteq	r5, r2, lsl #10
    22f8:	02040200 	andeq	r0, r4, #0, 4
    22fc:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    2300:	02200204 	eoreq	r0, r0, #4, 4	; 0x40000000
    2304:	01010002 	tsteq	r1, r2
    2308:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    230c:	00000002 	andeq	r0, r0, r2
    2310:	0bfd0300 	bleq	fff42f18 <_estack+0xdff41cd8>
    2314:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2318:	1a2f0603 	bne	bc3b2c <_Min_Heap_Size+0xbc332c>
    231c:	01061005 	tsteq	r6, r5
    2320:	2f060305 	svccs	0x00060305
    2324:	01060d05 	tsteq	r6, r5, lsl #26
    2328:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    232c:	0d030603 	stceq	6, cr0, [r3, #-12]
    2330:	0610052e 	ldreq	r0, [r0], -lr, lsr #10
    2334:	06030501 	streq	r0, [r3], -r1, lsl #10
    2338:	060d054b 	streq	r0, [sp], -fp, asr #10
    233c:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    2340:	03060305 	movweq	r0, #25349	; 0x6305
    2344:	01052e0c 	tsteq	r5, ip, lsl #28
    2348:	052e1306 	streq	r1, [lr, #-774]!	; 0xfffffcfa
    234c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    2350:	2e650301 	cdpcs	3, 6, cr0, cr5, cr1, {0}
    2354:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2358:	30060104 	andcc	r0, r6, r4, lsl #2
    235c:	01040200 	mrseq	r0, R12_usr
    2360:	04020001 	streq	r0, [r2], #-1
    2364:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2368:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    236c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2370:	03010402 	movweq	r0, #5122	; 0x1402
    2374:	052077d2 	streq	r7, [r0, #-2002]!	; 0xfffff82e
    2378:	04020005 	streq	r0, [r2], #-5
    237c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2380:	01040200 	mrseq	r0, R12_usr
    2384:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2388:	002e0601 	eoreq	r0, lr, r1, lsl #12
    238c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2390:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2394:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2398:	00050501 	andeq	r0, r5, r1, lsl #10
    239c:	03010402 	movweq	r0, #5122	; 0x1402
    23a0:	000108a9 	andeq	r0, r1, r9, lsr #17
    23a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    23a8:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    23ac:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    23b0:	78850301 	stmvc	r5, {r0, r8, r9}
    23b4:	00040501 	andeq	r0, r4, r1, lsl #10
    23b8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    23bc:	01040200 	mrseq	r0, R12_usr
    23c0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    23c4:	00200601 	eoreq	r0, r0, r1, lsl #12
    23c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    23cc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    23d0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    23d4:	00050501 	andeq	r0, r5, r1, lsl #10
    23d8:	03010402 	movweq	r0, #5122	; 0x1402
    23dc:	000107f6 	strdeq	r0, [r1], -r6
    23e0:	06020402 	streq	r0, [r2], -r2, lsl #8
    23e4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    23e8:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    23ec:	02040200 	andeq	r0, r4, #0, 4
    23f0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    23f4:	02040200 	andeq	r0, r4, #0, 4
    23f8:	06070520 	streq	r0, [r7], -r0, lsr #10
    23fc:	30050522 	andcc	r0, r5, r2, lsr #10
    2400:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    2404:	4f060104 	svcmi	0x00060104
    2408:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    240c:	30060104 	andcc	r0, r6, r4, lsl #2
    2410:	01040200 	mrseq	r0, R12_usr
    2414:	04020001 	streq	r0, [r2], #-1
    2418:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    241c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2420:	001f0502 	andseq	r0, pc, r2, lsl #10
    2424:	03010402 	movweq	r0, #5122	; 0x1402
    2428:	052077c4 	streq	r7, [r0, #-1988]!	; 0xfffff83c
    242c:	04020005 	streq	r0, [r2], #-5
    2430:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2434:	01040200 	mrseq	r0, R12_usr
    2438:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    243c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2440:	06010402 	streq	r0, [r1], -r2, lsl #8
    2444:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2448:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    244c:	00050501 	andeq	r0, r5, r1, lsl #10
    2450:	03010402 	movweq	r0, #5122	; 0x1402
    2454:	000108b7 			; <UNDEFINED> instruction: 0x000108b7
    2458:	06010402 	streq	r0, [r1], -r2, lsl #8
    245c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2460:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2464:	77f70301 	ldrbvc	r0, [r7, r1, lsl #6]!
    2468:	00040501 	andeq	r0, r4, r1, lsl #10
    246c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2470:	01040200 	mrseq	r0, R12_usr
    2474:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2478:	00200601 	eoreq	r0, r0, r1, lsl #12
    247c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2480:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2484:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2488:	00050501 	andeq	r0, r5, r1, lsl #10
    248c:	03010402 	movweq	r0, #5122	; 0x1402
    2490:	00010884 	andeq	r0, r1, r4, lsl #17
    2494:	06020402 	streq	r0, [r2], -r2, lsl #8
    2498:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    249c:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    24a0:	02040200 	andeq	r0, r4, #0, 4
    24a4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    24a8:	02040200 	andeq	r0, r4, #0, 4
    24ac:	06070520 	streq	r0, [r7], -r0, lsr #10
    24b0:	30050522 	andcc	r0, r5, r2, lsr #10
    24b4:	01000402 	tsteq	r0, r2, lsl #8
    24b8:	00010501 	andeq	r0, r1, r1, lsl #10
    24bc:	00000205 	andeq	r0, r0, r5, lsl #4
    24c0:	b5030000 	strlt	r0, [r3, #-0]
    24c4:	0106010c 	tsteq	r6, ip, lsl #2
    24c8:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    24cc:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    24d0:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    24d4:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    24d8:	055a0605 	ldrbeq	r0, [sl, #-1541]	; 0xfffff9fb
    24dc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    24e0:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    24e4:	0f052e01 	svceq	0x00052e01
    24e8:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    24ec:	16052306 	strne	r2, [r5], -r6, lsl #6
    24f0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    24f4:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    24f8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    24fc:	052f0605 	streq	r0, [pc, #-1541]!	; 1eff <_Min_Heap_Size+0x16ff>
    2500:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2504:	052f0605 	streq	r0, [pc, #-1541]!	; 1f07 <_Min_Heap_Size+0x1707>
    2508:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    250c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2510:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    2514:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2518:	01061805 	tsteq	r6, r5, lsl #16
    251c:	2f060505 	svccs	0x00060505
    2520:	01061805 	tsteq	r6, r5, lsl #16
    2524:	31060505 	tstcc	r6, r5, lsl #10
    2528:	01061505 	tsteq	r6, r5, lsl #10
    252c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    2530:	05054413 	streq	r4, [r5, #-1043]	; 0xfffffbed
    2534:	0c053206 	sfmeq	f3, 4, [r5], {6}
    2538:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    253c:	0b053106 	bleq	14e95c <_Min_Heap_Size+0x14e15c>
    2540:	47050106 	strmi	r0, [r5, -r6, lsl #2]
    2544:	01040200 	mrseq	r0, R12_usr
    2548:	05207103 	streq	r7, [r0, #-259]!	; 0xfffffefd
    254c:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    2550:	13052001 	movwne	r2, #20481	; 0x5001
    2554:	201f3728 	andscs	r3, pc, r8, lsr #14
    2558:	03060b05 	movweq	r0, #27397	; 0x6b05
    255c:	1e052019 	mcrne	0, 0, r2, cr5, cr9, {0}
    2560:	0b050106 	bleq	142980 <_Min_Heap_Size+0x142180>
    2564:	1a052f06 	bne	14e184 <_Min_Heap_Size+0x14d984>
    2568:	0b050106 	bleq	142988 <_Min_Heap_Size+0x142188>
    256c:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    2570:	0b050106 	bleq	142990 <_Min_Heap_Size+0x142190>
    2574:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    2578:	01063405 	tsteq	r6, r5, lsl #8
    257c:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    2580:	0b052e18 	bleq	14dde8 <_Min_Heap_Size+0x14d5e8>
    2584:	01062f06 	tsteq	r6, r6, lsl #30
    2588:	26060d05 	strcs	r0, [r6], -r5, lsl #26
    258c:	01063405 	tsteq	r6, r5, lsl #8
    2590:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    2594:	0527060b 	streq	r0, [r7, #-1547]!	; 0xfffff9f5
    2598:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    259c:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    25a0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    25a4:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    25a8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    25ac:	07052e1b 	smladeq	r5, fp, lr, r2
    25b0:	0a054006 	beq	1525d0 <_Min_Heap_Size+0x151dd0>
    25b4:	0b050106 	bleq	1429d4 <_Min_Heap_Size+0x1421d4>
    25b8:	3c520306 	mrrccc	3, 0, r0, r2, cr6
    25bc:	01061105 	tsteq	r6, r5, lsl #2
    25c0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    25c4:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    25c8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    25cc:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    25d0:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    25d4:	16202e2e 	strtne	r2, [r0], -lr, lsr #28
    25d8:	01060d05 	tsteq	r6, r5, lsl #26
    25dc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    25e0:	0a030607 	beq	c3e04 <_Min_Heap_Size+0xc3604>
    25e4:	060b052e 	streq	r0, [fp], -lr, lsr #10
    25e8:	200a0501 	andcs	r0, sl, r1, lsl #10
    25ec:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    25f0:	01060c05 	tsteq	r6, r5, lsl #24
    25f4:	35060b05 	strcc	r0, [r6, #-2821]	; 0xfffff4fb
    25f8:	01061b05 	tsteq	r6, r5, lsl #22
    25fc:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    2600:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    2604:	80053c01 	andhi	r3, r5, r1, lsl #24
    2608:	04020001 	streq	r0, [r2], #-1
    260c:	71052002 	tstvc	r5, r2
    2610:	02040200 	andeq	r0, r4, #0, 4
    2614:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2618:	06340534 			; <UNDEFINED> instruction: 0x06340534
    261c:	201b0501 	andscs	r0, fp, r1, lsl #10
    2620:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    2624:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    2628:	060f052e 	streq	r0, [pc], -lr, lsr #10
    262c:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    2630:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    2634:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    2638:	0b052e01 	bleq	14de44 <_Min_Heap_Size+0x14d644>
    263c:	1a053006 	bne	14e65c <_Min_Heap_Size+0x14de5c>
    2640:	0b050106 	bleq	142a60 <_Min_Heap_Size+0x142260>
    2644:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    2648:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    264c:	13053406 	movwne	r3, #21510	; 0x5406
    2650:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    2654:	2e200520 	cfsh64cs	mvdx0, mvdx0, #16
    2658:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    265c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2660:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2664:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    2668:	3201060c 	andcc	r0, r1, #12, 12	; 0xc00000
    266c:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    2670:	7f9e030f 	svcvc	0x009e030f
    2674:	0102203c 	tsteq	r2, ip, lsr r0
    2678:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    267c:	02050001 	andeq	r0, r5, #1
    2680:	00000000 	andeq	r0, r0, r0
    2684:	010eb103 	tsteq	lr, r3, lsl #2
    2688:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    268c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2690:	01022101 	tsteq	r2, r1, lsl #2
    2694:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2698:	02050001 	andeq	r0, r5, #1
    269c:	00000000 	andeq	r0, r0, r0
    26a0:	010ec303 	tsteq	lr, r3, lsl #6
    26a4:	03050106 	movweq	r0, #20742	; 0x5106
    26a8:	01040200 	mrseq	r0, R12_usr
    26ac:	02003006 	andeq	r3, r0, #6
    26b0:	00010104 	andeq	r0, r1, r4, lsl #2
    26b4:	01010402 	tsteq	r1, r2, lsl #8
    26b8:	01040200 	mrseq	r0, R12_usr
    26bc:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    26c0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    26c4:	75960301 	ldrvc	r0, [r6, #769]	; 0x301
    26c8:	00050520 	andeq	r0, r5, r0, lsr #10
    26cc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    26d0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    26d4:	00140104 	andseq	r0, r4, r4, lsl #2
    26d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    26dc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    26e0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    26e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    26e8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    26ec:	04020003 	streq	r0, [r2], #-3
    26f0:	0ae50301 	beq	ff9432fc <_estack+0xdf9420bc>
    26f4:	04020001 	streq	r0, [r2], #-1
    26f8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    26fc:	001f0502 	andseq	r0, pc, r2, lsl #10
    2700:	03010402 	movweq	r0, #5122	; 0x1402
    2704:	050175c9 	streq	r7, [r1, #-1481]	; 0xfffffa37
    2708:	04020004 	streq	r0, [r2], #-4
    270c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2710:	00140104 	andseq	r0, r4, r4, lsl #2
    2714:	06010402 	streq	r0, [r1], -r2, lsl #8
    2718:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    271c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2720:	06010402 	streq	r0, [r1], -r2, lsl #8
    2724:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2728:	04020003 	streq	r0, [r2], #-3
    272c:	0ab20301 	beq	fec83338 <_estack+0xdec820f8>
    2730:	04020001 	streq	r0, [r2], #-1
    2734:	02002e01 	andeq	r2, r0, #1, 28
    2738:	01060104 	tsteq	r6, r4, lsl #2
    273c:	01040200 	mrseq	r0, R12_usr
    2740:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2744:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2748:	00010104 	andeq	r0, r1, r4, lsl #2
    274c:	01010402 	tsteq	r1, r2, lsl #8
    2750:	1f050204 	svcne	0x00050204
    2754:	01040200 	mrseq	r0, R12_usr
    2758:	20759503 	rsbscs	r9, r5, r3, lsl #10
    275c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2760:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2764:	04020004 	streq	r0, [r2], #-4
    2768:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    276c:	2e060104 	adfcss	f0, f6, f4
    2770:	01040200 	mrseq	r0, R12_usr
    2774:	02002f06 	andeq	r2, r0, #6, 30
    2778:	01060104 	tsteq	r6, r4, lsl #2
    277c:	03050104 	movweq	r0, #20740	; 0x5104
    2780:	01040200 	mrseq	r0, R12_usr
    2784:	010ae603 	tsteq	sl, r3, lsl #12
    2788:	01040200 	mrseq	r0, R12_usr
    278c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2790:	02001f05 	andeq	r1, r0, #5, 30
    2794:	c8030104 	stmdagt	r3, {r2, r8}
    2798:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    279c:	01040200 	mrseq	r0, R12_usr
    27a0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    27a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    27a8:	20060104 	andcs	r0, r6, r4, lsl #2
    27ac:	01040200 	mrseq	r0, R12_usr
    27b0:	02002f06 	andeq	r2, r0, #6, 30
    27b4:	01060104 	tsteq	r6, r4, lsl #2
    27b8:	03050104 	movweq	r0, #20740	; 0x5104
    27bc:	01040200 	mrseq	r0, R12_usr
    27c0:	010ab303 	tsteq	sl, r3, lsl #6
    27c4:	02040200 	andeq	r0, r4, #0, 4
    27c8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    27cc:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    27d0:	0402000c 	streq	r0, [r2], #-12
    27d4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    27d8:	04020006 	streq	r0, [r2], #-6
    27dc:	05052002 	streq	r2, [r5, #-2]
    27e0:	02040200 	andeq	r0, r4, #0, 4
    27e4:	03053006 	movweq	r3, #20486	; 0x5006
    27e8:	02040200 	andeq	r0, r4, #0, 4
    27ec:	00070516 	andeq	r0, r7, r6, lsl r5
    27f0:	06020402 	streq	r0, [r2], -r2, lsl #8
    27f4:	00060501 	andeq	r0, r6, r1, lsl #10
    27f8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    27fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2800:	3e060104 	adfccs	f0, f6, f4
    2804:	01040200 	mrseq	r0, R12_usr
    2808:	04020001 	streq	r0, [r2], #-1
    280c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2810:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2814:	001f0502 	andseq	r0, pc, r2, lsl #10
    2818:	03010402 	movweq	r0, #5122	; 0x1402
    281c:	0520758a 	streq	r7, [r0, #-1418]!	; 0xfffffa76
    2820:	04020005 	streq	r0, [r2], #-5
    2824:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2828:	01040200 	mrseq	r0, R12_usr
    282c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2830:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2834:	06010402 	streq	r0, [r1], -r2, lsl #8
    2838:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    283c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2840:	00050501 	andeq	r0, r5, r1, lsl #10
    2844:	03010402 	movweq	r0, #5122	; 0x1402
    2848:	00010af1 	strdeq	r0, [r1], -r1
    284c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2850:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2854:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2858:	75bd0301 	ldrvc	r0, [sp, #769]!	; 0x301
    285c:	00040501 	andeq	r0, r4, r1, lsl #10
    2860:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2864:	01040200 	mrseq	r0, R12_usr
    2868:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    286c:	00200601 	eoreq	r0, r0, r1, lsl #12
    2870:	06010402 	streq	r0, [r1], -r2, lsl #8
    2874:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2878:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    287c:	00050501 	andeq	r0, r5, r1, lsl #10
    2880:	03010402 	movweq	r0, #5122	; 0x1402
    2884:	00010abe 			; <UNDEFINED> instruction: 0x00010abe
    2888:	06020402 	streq	r0, [r2], -r2, lsl #8
    288c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2890:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2894:	02040200 	andeq	r0, r4, #0, 4
    2898:	08050106 	stmdaeq	r5, {r1, r2, r8}
    289c:	02040200 	andeq	r0, r4, #0, 4
    28a0:	06070520 	streq	r0, [r7], -r0, lsr #10
    28a4:	06280524 	strteq	r0, [r8], -r4, lsr #10
    28a8:	06070501 	streq	r0, [r7], -r1, lsl #10
    28ac:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    28b0:	0a052001 	beq	14a8bc <_Min_Heap_Size+0x14a0bc>
    28b4:	0603052e 	streq	r0, [r3], -lr, lsr #10
    28b8:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    28bc:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    28c0:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    28c4:	01040200 	mrseq	r0, R12_usr
    28c8:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    28cc:	00010104 	andeq	r0, r1, r4, lsl #2
    28d0:	01010402 	tsteq	r1, r2, lsl #8
    28d4:	01040200 	mrseq	r0, R12_usr
    28d8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    28dc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    28e0:	74f10301 	ldrbtvc	r0, [r1], #769	; 0x301
    28e4:	00050520 	andeq	r0, r5, r0, lsr #10
    28e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    28ec:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    28f0:	00140104 	andseq	r0, r4, r4, lsl #2
    28f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    28f8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    28fc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2900:	06010402 	streq	r0, [r1], -r2, lsl #8
    2904:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2908:	04020005 	streq	r0, [r2], #-5
    290c:	0b8a0301 	bleq	fe283518 <_estack+0xde2822d8>
    2910:	04020001 	streq	r0, [r2], #-1
    2914:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2918:	001f0502 	andseq	r0, pc, r2, lsl #10
    291c:	03010402 	movweq	r0, #5122	; 0x1402
    2920:	050175a4 	streq	r7, [r1, #-1444]	; 0xfffffa5c
    2924:	04020004 	streq	r0, [r2], #-4
    2928:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    292c:	00140104 	andseq	r0, r4, r4, lsl #2
    2930:	06010402 	streq	r0, [r1], -r2, lsl #8
    2934:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2938:	002f0601 	eoreq	r0, pc, r1, lsl #12
    293c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2940:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2944:	04020005 	streq	r0, [r2], #-5
    2948:	0ad70301 	beq	ff5c3554 <_estack+0xdf5c2314>
    294c:	04020001 	streq	r0, [r2], #-1
    2950:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2954:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2958:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    295c:	01060204 	tsteq	r6, r4, lsl #4
    2960:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2964:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2968:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    296c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2970:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    2974:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2978:	03053c0a 	movweq	r3, #23562	; 0x5c0a
    297c:	200e0306 	andcs	r0, lr, r6, lsl #6
    2980:	01061605 	tsteq	r6, r5, lsl #12
    2984:	2f060305 	svccs	0x00060305
    2988:	01061605 	tsteq	r6, r5, lsl #12
    298c:	23060305 	movwcs	r0, #25349	; 0x6305
    2990:	01061405 	tsteq	r6, r5, lsl #8
    2994:	23060305 	movwcs	r0, #25349	; 0x6305
    2998:	01061205 	tsteq	r6, r5, lsl #4
    299c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    29a0:	01061105 	tsteq	r6, r5, lsl #2
    29a4:	2f060305 	svccs	0x00060305
    29a8:	01061805 	tsteq	r6, r5, lsl #16
    29ac:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    29b0:	13060105 	movwne	r0, #24837	; 0x6105
    29b4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    29b8:	03060104 	movweq	r0, #24836	; 0x6104
    29bc:	00207fbe 	strhteq	r7, [r0], -lr
    29c0:	01010402 	tsteq	r1, r2, lsl #8
    29c4:	01040200 	mrseq	r0, R12_usr
    29c8:	04020001 	streq	r0, [r2], #-1
    29cc:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    29d0:	02001f05 	andeq	r1, r0, #5, 30
    29d4:	90030104 	andls	r0, r3, r4, lsl #2
    29d8:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    29dc:	01040200 	mrseq	r0, R12_usr
    29e0:	00040514 	andeq	r0, r4, r4, lsl r5
    29e4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    29e8:	01040200 	mrseq	r0, R12_usr
    29ec:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    29f0:	2f060104 	svccs	0x00060104
    29f4:	01040200 	mrseq	r0, R12_usr
    29f8:	01040106 	tsteq	r4, r6, lsl #2
    29fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2a00:	eb030104 	bl	c2e18 <_Min_Heap_Size+0xc2618>
    2a04:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2a08:	2e060104 	adfcss	f0, f6, f4
    2a0c:	1f050204 	svcne	0x00050204
    2a10:	01040200 	mrseq	r0, R12_usr
    2a14:	0175c303 	cmneq	r5, r3, lsl #6
    2a18:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2a1c:	00140104 	andseq	r0, r4, r4, lsl #2
    2a20:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2a24:	01040200 	mrseq	r0, R12_usr
    2a28:	02002006 	andeq	r2, r0, #6
    2a2c:	2f060104 	svccs	0x00060104
    2a30:	01040200 	mrseq	r0, R12_usr
    2a34:	01040106 	tsteq	r4, r6, lsl #2
    2a38:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2a3c:	b8030104 	stmdalt	r3, {r2, r8}
    2a40:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2a44:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    2a48:	11030609 	tstne	r3, r9, lsl #12
    2a4c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    2a50:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    2a54:	31060b05 	tstcc	r6, r5, lsl #22
    2a58:	01061c05 	tsteq	r6, r5, lsl #24
    2a5c:	30060b05 	andcc	r0, r6, r5, lsl #22
    2a60:	01061205 	tsteq	r6, r5, lsl #4
    2a64:	03060905 	movweq	r0, #26885	; 0x6905
    2a68:	0d052e14 	stceq	14, cr2, [r5, #-80]	; 0xffffffb0
    2a6c:	0c050106 	stfeqs	f0, [r5], {6}
    2a70:	060b053c 			; <UNDEFINED> instruction: 0x060b053c
    2a74:	061c0531 			; <UNDEFINED> instruction: 0x061c0531
    2a78:	060b0501 	streq	r0, [fp], -r1, lsl #10
    2a7c:	06120530 			; <UNDEFINED> instruction: 0x06120530
    2a80:	00020201 	andeq	r0, r2, r1, lsl #4
    2a84:	01050101 	tsteq	r5, r1, lsl #2
    2a88:	00020500 	andeq	r0, r2, r0, lsl #10
    2a8c:	03000000 	movweq	r0, #0
    2a90:	06010f9c 			; <UNDEFINED> instruction: 0x06010f9c
    2a94:	00030501 	andeq	r0, r3, r1, lsl #10
    2a98:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a9c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    2aa0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2aa4:	00010104 	andeq	r0, r1, r4, lsl #2
    2aa8:	01010402 	tsteq	r1, r2, lsl #8
    2aac:	1f050204 	svcne	0x00050204
    2ab0:	01040200 	mrseq	r0, R12_usr
    2ab4:	2074bd03 	rsbscs	fp, r4, r3, lsl #26
    2ab8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2abc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2ac0:	04020004 	streq	r0, [r2], #-4
    2ac4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2ac8:	2e060104 	adfcss	f0, f6, f4
    2acc:	01040200 	mrseq	r0, R12_usr
    2ad0:	02002f06 	andeq	r2, r0, #6, 30
    2ad4:	01060104 	tsteq	r6, r4, lsl #2
    2ad8:	03050104 	movweq	r0, #20740	; 0x5104
    2adc:	01040200 	mrseq	r0, R12_usr
    2ae0:	010bbe03 	tsteq	fp, r3, lsl #28
    2ae4:	01040200 	mrseq	r0, R12_usr
    2ae8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2aec:	02001f05 	andeq	r1, r0, #5, 30
    2af0:	f0030104 			; <UNDEFINED> instruction: 0xf0030104
    2af4:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    2af8:	01040200 	mrseq	r0, R12_usr
    2afc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2b00:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2b04:	20060104 	andcs	r0, r6, r4, lsl #2
    2b08:	01040200 	mrseq	r0, R12_usr
    2b0c:	02002f06 	andeq	r2, r0, #6, 30
    2b10:	01060104 	tsteq	r6, r4, lsl #2
    2b14:	03050104 	movweq	r0, #20740	; 0x5104
    2b18:	01040200 	mrseq	r0, R12_usr
    2b1c:	010b8b03 	tsteq	fp, r3, lsl #22
    2b20:	02040200 	andeq	r0, r4, #0, 4
    2b24:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2b28:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    2b2c:	04020007 	streq	r0, [r2], #-7
    2b30:	00010602 	andeq	r0, r1, r2, lsl #12
    2b34:	20020402 	andcs	r0, r2, r2, lsl #8
    2b38:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2b3c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2b40:	04020005 	streq	r0, [r2], #-5
    2b44:	003e0601 	eorseq	r0, lr, r1, lsl #12
    2b48:	01010402 	tsteq	r1, r2, lsl #8
    2b4c:	01040200 	mrseq	r0, R12_usr
    2b50:	04020001 	streq	r0, [r2], #-1
    2b54:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2b58:	02001f05 	andeq	r1, r0, #5, 30
    2b5c:	b8030104 	stmdalt	r3, {r2, r8}
    2b60:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    2b64:	01040200 	mrseq	r0, R12_usr
    2b68:	00040514 	andeq	r0, r4, r4, lsl r5
    2b6c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2b70:	01040200 	mrseq	r0, R12_usr
    2b74:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2b78:	2f060104 	svccs	0x00060104
    2b7c:	01040200 	mrseq	r0, R12_usr
    2b80:	01040106 	tsteq	r4, r6, lsl #2
    2b84:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2b88:	c3030104 	movwgt	r0, #12548	; 0x3104
    2b8c:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2b90:	2e060104 	adfcss	f0, f6, f4
    2b94:	1f050204 	svcne	0x00050204
    2b98:	01040200 	mrseq	r0, R12_usr
    2b9c:	0174eb03 	cmneq	r4, r3, lsl #22
    2ba0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2ba4:	00140104 	andseq	r0, r4, r4, lsl #2
    2ba8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2bac:	01040200 	mrseq	r0, R12_usr
    2bb0:	02002006 	andeq	r2, r0, #6
    2bb4:	2f060104 	svccs	0x00060104
    2bb8:	01040200 	mrseq	r0, R12_usr
    2bbc:	01040106 	tsteq	r4, r6, lsl #2
    2bc0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2bc4:	90030104 	andls	r0, r3, r4, lsl #2
    2bc8:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2bcc:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2bd0:	02040200 	andeq	r0, r4, #0, 4
    2bd4:	000e0515 	andeq	r0, lr, r5, lsl r5
    2bd8:	06020402 	streq	r0, [r2], -r2, lsl #8
    2bdc:	00080501 	andeq	r0, r8, r1, lsl #10
    2be0:	20020402 	andcs	r0, r2, r2, lsl #8
    2be4:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    2be8:	01062805 	tsteq	r6, r5, lsl #16
    2bec:	30060705 	andcc	r0, r6, r5, lsl #14
    2bf0:	01060b05 	tsteq	r6, r5, lsl #22
    2bf4:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    2bf8:	03060305 	movweq	r0, #25349	; 0x6305
    2bfc:	1605200e 	strne	r2, [r5], -lr
    2c00:	03050106 	movweq	r0, #20742	; 0x5106
    2c04:	11053106 	tstne	r5, r6, lsl #2
    2c08:	03050106 	movweq	r0, #20742	; 0x5106
    2c0c:	01053e06 	tsteq	r5, r6, lsl #28
    2c10:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    2c14:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    2c18:	01060d05 	tsteq	r6, r5, lsl #26
    2c1c:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    2c20:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    2c24:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2c28:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    2c2c:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    2c30:	01010002 	tsteq	r1, r2
    2c34:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2c38:	00000002 	andeq	r0, r0, r2
    2c3c:	0fcf0300 	svceq	0x00cf0300
    2c40:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2c44:	04020003 	streq	r0, [r2], #-3
    2c48:	00300601 	eorseq	r0, r0, r1, lsl #12
    2c4c:	01010402 	tsteq	r1, r2, lsl #8
    2c50:	01040200 	mrseq	r0, R12_usr
    2c54:	04020001 	streq	r0, [r2], #-1
    2c58:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2c5c:	02001f05 	andeq	r1, r0, #5, 30
    2c60:	8a030104 	bhi	c3078 <_Min_Heap_Size+0xc2878>
    2c64:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    2c68:	01040200 	mrseq	r0, R12_usr
    2c6c:	00040514 	andeq	r0, r4, r4, lsl r5
    2c70:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2c74:	01040200 	mrseq	r0, R12_usr
    2c78:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2c7c:	2f060104 	svccs	0x00060104
    2c80:	01040200 	mrseq	r0, R12_usr
    2c84:	01040106 	tsteq	r4, r6, lsl #2
    2c88:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2c8c:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    2c90:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2c94:	2e060104 	adfcss	f0, f6, f4
    2c98:	1f050204 	svcne	0x00050204
    2c9c:	01040200 	mrseq	r0, R12_usr
    2ca0:	0174bd03 	cmneq	r4, r3, lsl #26
    2ca4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2ca8:	00140104 	andseq	r0, r4, r4, lsl #2
    2cac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2cb0:	01040200 	mrseq	r0, R12_usr
    2cb4:	02002006 	andeq	r2, r0, #6
    2cb8:	2f060104 	svccs	0x00060104
    2cbc:	01040200 	mrseq	r0, R12_usr
    2cc0:	01040106 	tsteq	r4, r6, lsl #2
    2cc4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2cc8:	be030104 	adflts	f0, f3, f4
    2ccc:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    2cd0:	002e0104 	eoreq	r0, lr, r4, lsl #2
    2cd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2cd8:	04020001 	streq	r0, [r2], #-1
    2cdc:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    2ce0:	00010104 	andeq	r0, r1, r4, lsl #2
    2ce4:	01010402 	tsteq	r1, r2, lsl #8
    2ce8:	01040200 	mrseq	r0, R12_usr
    2cec:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2cf0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2cf4:	74890301 	strvc	r0, [r9], #769	; 0x301
    2cf8:	00050520 	andeq	r0, r5, r0, lsr #10
    2cfc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2d00:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2d04:	00140104 	andseq	r0, r4, r4, lsl #2
    2d08:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d0c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2d10:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d14:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d18:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d1c:	04020003 	streq	r0, [r2], #-3
    2d20:	0bf20301 	bleq	ffc8392c <_estack+0xdfc826ec>
    2d24:	04020001 	streq	r0, [r2], #-1
    2d28:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2d2c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2d30:	03010402 	movweq	r0, #5122	; 0x1402
    2d34:	050174bc 	streq	r7, [r1, #-1212]	; 0xfffffb44
    2d38:	04020004 	streq	r0, [r2], #-4
    2d3c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2d40:	00140104 	andseq	r0, r4, r4, lsl #2
    2d44:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d48:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2d4c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d50:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d54:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d58:	04020003 	streq	r0, [r2], #-3
    2d5c:	0bbf0301 	bleq	fefc3968 <_estack+0xdefc2728>
    2d60:	04020001 	streq	r0, [r2], #-1
    2d64:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2d68:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2d6c:	02000c05 	andeq	r0, r0, #1280	; 0x500
    2d70:	01060204 	tsteq	r6, r4, lsl #4
    2d74:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2d78:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2d7c:	04020005 	streq	r0, [r2], #-5
    2d80:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    2d84:	04020003 	streq	r0, [r2], #-3
    2d88:	07051602 	streq	r1, [r5, -r2, lsl #12]
    2d8c:	02040200 	andeq	r0, r4, #0, 4
    2d90:	06050106 	streq	r0, [r5], -r6, lsl #2
    2d94:	02040200 	andeq	r0, r4, #0, 4
    2d98:	0005052e 	andeq	r0, r5, lr, lsr #10
    2d9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2da0:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    2da4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2da8:	00010104 	andeq	r0, r1, r4, lsl #2
    2dac:	01010402 	tsteq	r1, r2, lsl #8
    2db0:	1f050204 	svcne	0x00050204
    2db4:	01040200 	mrseq	r0, R12_usr
    2db8:	2073fe03 	rsbscs	pc, r3, r3, lsl #28
    2dbc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2dc0:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2dc4:	04020004 	streq	r0, [r2], #-4
    2dc8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2dcc:	2e060104 	adfcss	f0, f6, f4
    2dd0:	01040200 	mrseq	r0, R12_usr
    2dd4:	02002f06 	andeq	r2, r0, #6, 30
    2dd8:	01060104 	tsteq	r6, r4, lsl #2
    2ddc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2de0:	01040200 	mrseq	r0, R12_usr
    2de4:	010bfd03 	tsteq	fp, r3, lsl #26	; <UNPREDICTABLE>
    2de8:	01040200 	mrseq	r0, R12_usr
    2dec:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2df0:	02001f05 	andeq	r1, r0, #5, 30
    2df4:	b1030104 	tstlt	r3, r4, lsl #2
    2df8:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    2dfc:	01040200 	mrseq	r0, R12_usr
    2e00:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2e04:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2e08:	20060104 	andcs	r0, r6, r4, lsl #2
    2e0c:	01040200 	mrseq	r0, R12_usr
    2e10:	02002f06 	andeq	r2, r0, #6, 30
    2e14:	01060104 	tsteq	r6, r4, lsl #2
    2e18:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2e1c:	01040200 	mrseq	r0, R12_usr
    2e20:	010bca03 	tsteq	fp, r3, lsl #20
    2e24:	02040200 	andeq	r0, r4, #0, 4
    2e28:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2e2c:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    2e30:	0402000e 	streq	r0, [r2], #-14
    2e34:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2e38:	04020008 	streq	r0, [r2], #-8
    2e3c:	07052002 	streq	r2, [r5, -r2]
    2e40:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    2e44:	07050106 	streq	r0, [r5, -r6, lsl #2]
    2e48:	0b053006 	bleq	14ee68 <_Min_Heap_Size+0x14e668>
    2e4c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2e50:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    2e54:	200e0306 	andcs	r0, lr, r6, lsl #6
    2e58:	01061605 	tsteq	r6, r5, lsl #12
    2e5c:	31060305 	tstcc	r6, r5, lsl #6
    2e60:	01061205 	tsteq	r6, r5, lsl #4
    2e64:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    2e68:	01061805 	tsteq	r6, r5, lsl #16
    2e6c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    2e70:	13060105 	movwne	r0, #24837	; 0x6105
    2e74:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2e78:	03060104 	movweq	r0, #24836	; 0x6104
    2e7c:	0200205c 	andeq	r2, r0, #92	; 0x5c
    2e80:	00010104 	andeq	r0, r1, r4, lsl #2
    2e84:	01010402 	tsteq	r1, r2, lsl #8
    2e88:	01040200 	mrseq	r0, R12_usr
    2e8c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2e90:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2e94:	74840301 	strvc	r0, [r4], #769	; 0x301
    2e98:	00050520 	andeq	r0, r5, r0, lsr #10
    2e9c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2ea0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2ea4:	00140104 	andseq	r0, r4, r4, lsl #2
    2ea8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2eac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2eb0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2eb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2eb8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2ebc:	04020005 	streq	r0, [r2], #-5
    2ec0:	0bf70301 	bleq	ffdc3acc <_estack+0xdfdc288c>
    2ec4:	04020001 	streq	r0, [r2], #-1
    2ec8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2ecc:	001f0502 	andseq	r0, pc, r2, lsl #10
    2ed0:	03010402 	movweq	r0, #5122	; 0x1402
    2ed4:	050174b7 	streq	r7, [r1, #-1207]	; 0xfffffb49
    2ed8:	04020004 	streq	r0, [r2], #-4
    2edc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2ee0:	00140104 	andseq	r0, r4, r4, lsl #2
    2ee4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ee8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2eec:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2ef0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ef4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2ef8:	04020005 	streq	r0, [r2], #-5
    2efc:	0bc40301 	bleq	ff103b08 <_estack+0xdf1028c8>
    2f00:	04020001 	streq	r0, [r2], #-1
    2f04:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    2f08:	01110306 	tsteq	r1, r6, lsl #6
    2f0c:	01060d05 	tsteq	r6, r5, lsl #26
    2f10:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    2f14:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    2f18:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2f1c:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    2f20:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    2f24:	01010002 	tsteq	r1, r2
    2f28:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2f2c:	000d2c02 	andeq	r2, sp, r2, lsl #24
    2f30:	14a00308 	strtne	r0, [r0], #776	; 0x308
    2f34:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    2f38:	16060105 	strne	r0, [r6], -r5, lsl #2
    2f3c:	01000102 	tsteq	r0, r2, lsl #2
    2f40:	00010501 	andeq	r0, r1, r1, lsl #10
    2f44:	00000205 	andeq	r0, r0, r5, lsl #4
    2f48:	ac030000 	stcge	0, cr0, [r3], {-0}
    2f4c:	01060117 	tsteq	r6, r7, lsl r1
    2f50:	2f060305 	svccs	0x00060305
    2f54:	01061705 	tsteq	r6, r5, lsl #14
    2f58:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    2f5c:	01060c05 	tsteq	r6, r5, lsl #24
    2f60:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    2f64:	05052006 	streq	r2, [r5, #-6]
    2f68:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    2f6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2f70:	01040200 	mrseq	r0, R12_usr
    2f74:	02003206 	andeq	r3, r0, #1610612736	; 0x60000000
    2f78:	00010104 	andeq	r0, r1, r4, lsl #2
    2f7c:	01010402 	tsteq	r1, r2, lsl #8
    2f80:	01040200 	mrseq	r0, R12_usr
    2f84:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2f88:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2f8c:	6ca60301 	stcvs	3, cr0, [r6], #4
    2f90:	00050520 	andeq	r0, r5, r0, lsr #10
    2f94:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2f98:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2f9c:	00140104 	andseq	r0, r4, r4, lsl #2
    2fa0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fa4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2fa8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2fac:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fb0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2fb4:	04020005 	streq	r0, [r2], #-5
    2fb8:	13d50301 	bicsne	r0, r5, #67108864	; 0x4000000
    2fbc:	04020001 	streq	r0, [r2], #-1
    2fc0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2fc4:	001f0502 	andseq	r0, pc, r2, lsl #10
    2fc8:	03010402 	movweq	r0, #5122	; 0x1402
    2fcc:	05016cd9 	streq	r6, [r1, #-3289]	; 0xfffff327
    2fd0:	04020004 	streq	r0, [r2], #-4
    2fd4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2fd8:	00140104 	andseq	r0, r4, r4, lsl #2
    2fdc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fe0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2fe4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2fe8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fec:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2ff0:	04020005 	streq	r0, [r2], #-5
    2ff4:	13a20301 			; <UNDEFINED> instruction: 0x13a20301
    2ff8:	04020001 	streq	r0, [r2], #-1
    2ffc:	02002e01 	andeq	r2, r0, #1, 28
    3000:	01060104 	tsteq	r6, r4, lsl #2
    3004:	01040200 	mrseq	r0, R12_usr
    3008:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    300c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3010:	00010104 	andeq	r0, r1, r4, lsl #2
    3014:	01010402 	tsteq	r1, r2, lsl #8
    3018:	1f050204 	svcne	0x00050204
    301c:	01040200 	mrseq	r0, R12_usr
    3020:	206ca303 	rsbcs	sl, ip, r3, lsl #6
    3024:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3028:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    302c:	04020004 	streq	r0, [r2], #-4
    3030:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3034:	2e060104 	adfcss	f0, f6, f4
    3038:	01040200 	mrseq	r0, R12_usr
    303c:	02002f06 	andeq	r2, r0, #6, 30
    3040:	01060104 	tsteq	r6, r4, lsl #2
    3044:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3048:	01040200 	mrseq	r0, R12_usr
    304c:	0113d803 	tsteq	r3, r3, lsl #16
    3050:	01040200 	mrseq	r0, R12_usr
    3054:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3058:	02001f05 	andeq	r1, r0, #5, 30
    305c:	d6030104 	strle	r0, [r3], -r4, lsl #2
    3060:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    3064:	01040200 	mrseq	r0, R12_usr
    3068:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    306c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3070:	20060104 	andcs	r0, r6, r4, lsl #2
    3074:	01040200 	mrseq	r0, R12_usr
    3078:	02002f06 	andeq	r2, r0, #6, 30
    307c:	01060104 	tsteq	r6, r4, lsl #2
    3080:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3084:	01040200 	mrseq	r0, R12_usr
    3088:	0113a503 	tsteq	r3, r3, lsl #10
    308c:	01040200 	mrseq	r0, R12_usr
    3090:	0301052e 	movweq	r0, #5422	; 0x152e
    3094:	0505010e 	streq	r0, [r5, #-270]	; 0xfffffef2
    3098:	01051d06 	tsteq	r5, r6, lsl #26
    309c:	01023106 	tsteq	r2, r6, lsl #2
    30a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    30a4:	02050001 	andeq	r0, r5, #1
    30a8:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
    30ac:	011bf103 	tsteq	fp, r3, lsl #2	; <UNPREDICTABLE>
    30b0:	03050106 	movweq	r0, #20742	; 0x5106
    30b4:	055b2206 	ldrbeq	r2, [fp, #-518]	; 0xfffffdfa
    30b8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    30bc:	31430603 	cmpcc	r3, r3, lsl #12
    30c0:	13060105 	movwne	r0, #24837	; 0x6105
    30c4:	01000202 	tsteq	r0, r2, lsl #4
    30c8:	00010501 	andeq	r0, r1, r1, lsl #10
    30cc:	00000205 	andeq	r0, r0, r5, lsl #4
    30d0:	af030000 	svcge	0x00030000
    30d4:	03050114 	movweq	r0, #20756	; 0x5114
    30d8:	06010514 			; <UNDEFINED> instruction: 0x06010514
    30dc:	00010216 	andeq	r0, r1, r6, lsl r2
    30e0:	01050101 	tsteq	r5, r1, lsl #2
    30e4:	00020500 	andeq	r0, r2, r0, lsl #10
    30e8:	03000000 	movweq	r0, #0
    30ec:	060117cf 	streq	r1, [r1], -pc, asr #15
    30f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    30f4:	20061921 	andcs	r1, r6, r1, lsr #18
    30f8:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    30fc:	01010001 	tsteq	r1, r1
    3100:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3104:	000d4802 	andeq	r4, sp, r2, lsl #16
    3108:	14be0308 	ldrtne	r0, [lr], #776	; 0x308
    310c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3110:	16060105 	strne	r0, [r6], -r5, lsl #2
    3114:	01000102 	tsteq	r0, r2, lsl #2
    3118:	00010501 	andeq	r0, r1, r1, lsl #10
    311c:	00000205 	andeq	r0, r0, r5, lsl #4
    3120:	cd030000 	stcgt	0, cr0, [r3, #-0]
    3124:	03050114 	movweq	r0, #20756	; 0x5114
    3128:	06010514 			; <UNDEFINED> instruction: 0x06010514
    312c:	00010216 	andeq	r0, r1, r6, lsl r2
    3130:	01050101 	tsteq	r5, r1, lsl #2
    3134:	4a020500 	bmi	8453c <_Min_Heap_Size+0x83d3c>
    3138:	0308000d 	movweq	r0, #32781	; 0x800d
    313c:	050114dc 	streq	r1, [r1, #-1244]	; 0xfffffb24
    3140:	01051403 	tsteq	r5, r3, lsl #8
    3144:	01021606 	tsteq	r2, r6, lsl #12
    3148:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    314c:	02050001 	andeq	r0, r5, #1
    3150:	00000000 	andeq	r0, r0, r0
    3154:	0118c703 	tsteq	r8, r3, lsl #14
    3158:	03050106 	movweq	r0, #20742	; 0x5106
    315c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    3160:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3164:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    3168:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    316c:	052f0603 	streq	r0, [pc, #-1539]!	; 2b71 <_Min_Heap_Size+0x2371>
    3170:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    3174:	03053c06 	movweq	r3, #23558	; 0x5c06
    3178:	10053506 	andne	r3, r5, r6, lsl #10
    317c:	03050106 	movweq	r0, #20742	; 0x5106
    3180:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    3184:	06050106 	streq	r0, [r5], -r6, lsl #2
    3188:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    318c:	06140534 			; <UNDEFINED> instruction: 0x06140534
    3190:	06030501 	streq	r0, [r3], -r1, lsl #10
    3194:	06010550 			; <UNDEFINED> instruction: 0x06010550
    3198:	3105203e 	tstcc	r5, lr, lsr r0
    319c:	01040200 	mrseq	r0, R12_usr
    31a0:	052e6a03 	streq	r6, [lr, #-2563]!	; 0xfffff5fd
    31a4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    31a8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    31ac:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    31b0:	00320520 	eorseq	r0, r2, r0, lsr #10
    31b4:	41010402 	tstmi	r1, r2, lsl #8
    31b8:	30060505 	andcc	r0, r6, r5, lsl #10
    31bc:	01061805 	tsteq	r6, r5, lsl #16
    31c0:	2f060505 	svccs	0x00060505
    31c4:	01023c06 	tsteq	r2, r6, lsl #24
    31c8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    31cc:	02050001 	andeq	r0, r5, #1
    31d0:	08000d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp}
    31d4:	011a9f03 	tsteq	sl, r3, lsl #30
    31d8:	03050106 	movweq	r0, #20742	; 0x5106
    31dc:	17052106 	strne	r2, [r5, -r6, lsl #2]
    31e0:	03050106 	movweq	r0, #20742	; 0x5106
    31e4:	16052106 	strne	r2, [r5], -r6, lsl #2
    31e8:	03050106 	movweq	r0, #20742	; 0x5106
    31ec:	16052f06 	strne	r2, [r5], -r6, lsl #30
    31f0:	03050106 	movweq	r0, #20742	; 0x5106
    31f4:	01052706 	tsteq	r5, r6, lsl #14
    31f8:	01023006 	tsteq	r2, r6
    31fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3200:	02050001 	andeq	r0, r5, #1
    3204:	00000000 	andeq	r0, r0, r0
    3208:	0114ea03 	tsteq	r4, r3, lsl #20
    320c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3210:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    3214:	01010001 	tsteq	r1, r1
    3218:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    321c:	00000002 	andeq	r0, r0, r2
    3220:	108c0300 	addne	r0, ip, r0, lsl #6
    3224:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3228:	002f0603 	eoreq	r0, pc, r3, lsl #12
    322c:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    3230:	01040200 	mrseq	r0, R12_usr
    3234:	04020001 	streq	r0, [r2], #-1
    3238:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    323c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3240:	001f0502 	andseq	r0, pc, r2, lsl #10
    3244:	03010402 	movweq	r0, #5122	; 0x1402
    3248:	052073cb 	streq	r7, [r0, #-971]!	; 0xfffffc35
    324c:	04020005 	streq	r0, [r2], #-5
    3250:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3254:	01040200 	mrseq	r0, R12_usr
    3258:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    325c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3260:	06010402 	streq	r0, [r1], -r2, lsl #8
    3264:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3268:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    326c:	00030501 	andeq	r0, r3, r1, lsl #10
    3270:	03010402 	movweq	r0, #5122	; 0x1402
    3274:	00010cb0 			; <UNDEFINED> instruction: 0x00010cb0
    3278:	06010402 	streq	r0, [r1], -r2, lsl #8
    327c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3280:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3284:	73fe0301 	mvnsvc	r0, #67108864	; 0x4000000
    3288:	00040501 	andeq	r0, r4, r1, lsl #10
    328c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3290:	01040200 	mrseq	r0, R12_usr
    3294:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3298:	00200601 	eoreq	r0, r0, r1, lsl #12
    329c:	06010402 	streq	r0, [r1], -r2, lsl #8
    32a0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    32a4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    32a8:	00030501 	andeq	r0, r3, r1, lsl #10
    32ac:	03010402 	movweq	r0, #5122	; 0x1402
    32b0:	00010bfd 	strdeq	r0, [r1], -sp
    32b4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    32b8:	01040200 	mrseq	r0, R12_usr
    32bc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    32c0:	00130104 	andseq	r0, r3, r4, lsl #2
    32c4:	01010402 	tsteq	r1, r2, lsl #8
    32c8:	01040200 	mrseq	r0, R12_usr
    32cc:	04020001 	streq	r0, [r2], #-1
    32d0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    32d4:	02001f05 	andeq	r1, r0, #5, 30
    32d8:	ca030104 	bgt	c36f0 <_Min_Heap_Size+0xc2ef0>
    32dc:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    32e0:	01040200 	mrseq	r0, R12_usr
    32e4:	00040514 	andeq	r0, r4, r4, lsl r5
    32e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    32ec:	01040200 	mrseq	r0, R12_usr
    32f0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    32f4:	2f060104 	svccs	0x00060104
    32f8:	01040200 	mrseq	r0, R12_usr
    32fc:	01040106 	tsteq	r4, r6, lsl #2
    3300:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3304:	b1030104 	tstlt	r3, r4, lsl #2
    3308:	0200010c 	andeq	r0, r0, #12, 2
    330c:	2e060104 	adfcss	f0, f6, f4
    3310:	1f050204 	svcne	0x00050204
    3314:	01040200 	mrseq	r0, R12_usr
    3318:	0173fd03 	cmneq	r3, r3, lsl #26	; <UNPREDICTABLE>
    331c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3320:	00140104 	andseq	r0, r4, r4, lsl #2
    3324:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3328:	01040200 	mrseq	r0, R12_usr
    332c:	02002006 	andeq	r2, r0, #6
    3330:	2f060104 	svccs	0x00060104
    3334:	01040200 	mrseq	r0, R12_usr
    3338:	01040106 	tsteq	r4, r6, lsl #2
    333c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3340:	fe030104 	cdp2	1, 0, cr0, cr3, cr4, {0}
    3344:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3348:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    334c:	02040200 	andeq	r0, r4, #0, 4
    3350:	000c0515 	andeq	r0, ip, r5, lsl r5
    3354:	06020402 	streq	r0, [r2], -r2, lsl #8
    3358:	00060501 	andeq	r0, r6, r1, lsl #10
    335c:	20020402 	andcs	r0, r2, r2, lsl #8
    3360:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3364:	30060204 	andcc	r0, r6, r4, lsl #4
    3368:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    336c:	05180204 	ldreq	r0, [r8, #-516]	; 0xfffffdfc
    3370:	0402000c 	streq	r0, [r2], #-12
    3374:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3378:	04020006 	streq	r0, [r2], #-6
    337c:	05052002 	streq	r2, [r5, #-2]
    3380:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    3384:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3388:	0607052e 	streq	r0, [r7], -lr, lsr #10
    338c:	0628053e 			; <UNDEFINED> instruction: 0x0628053e
    3390:	06030501 	streq	r0, [r3], -r1, lsl #10
    3394:	060c0536 			; <UNDEFINED> instruction: 0x060c0536
    3398:	20060501 	andcs	r0, r6, r1, lsl #10
    339c:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    33a0:	01060905 	tsteq	r6, r5, lsl #18
    33a4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    33a8:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    33ac:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    33b0:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
    33b4:	0607052e 	streq	r0, [r7], -lr, lsr #10
    33b8:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    33bc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    33c0:	3f060104 	svccc	0x00060104
    33c4:	01040200 	mrseq	r0, R12_usr
    33c8:	04020001 	streq	r0, [r2], #-1
    33cc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    33d0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    33d4:	001f0502 	andseq	r0, pc, r2, lsl #10
    33d8:	03010402 	movweq	r0, #5122	; 0x1402
    33dc:	0520739f 	streq	r7, [r0, #-927]!	; 0xfffffc61
    33e0:	04020005 	streq	r0, [r2], #-5
    33e4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    33e8:	01040200 	mrseq	r0, R12_usr
    33ec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    33f0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    33f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    33f8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    33fc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3400:	00050501 	andeq	r0, r5, r1, lsl #10
    3404:	03010402 	movweq	r0, #5122	; 0x1402
    3408:	00010cdc 	ldrdeq	r0, [r1], -ip
    340c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3410:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3414:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3418:	73d20301 	bicsvc	r0, r2, #67108864	; 0x4000000
    341c:	00040501 	andeq	r0, r4, r1, lsl #10
    3420:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3424:	01040200 	mrseq	r0, R12_usr
    3428:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    342c:	00200601 	eoreq	r0, r0, r1, lsl #12
    3430:	06010402 	streq	r0, [r1], -r2, lsl #8
    3434:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    3438:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    343c:	00050501 	andeq	r0, r5, r1, lsl #10
    3440:	03010402 	movweq	r0, #5122	; 0x1402
    3444:	00010ca9 	andeq	r0, r1, r9, lsr #25
    3448:	06020402 	streq	r0, [r2], -r2, lsl #8
    344c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3450:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3454:	02040200 	andeq	r0, r4, #0, 4
    3458:	08050106 	stmdaeq	r5, {r1, r2, r8}
    345c:	02040200 	andeq	r0, r4, #0, 4
    3460:	06070520 	streq	r0, [r7], -r0, lsr #10
    3464:	060b0534 			; <UNDEFINED> instruction: 0x060b0534
    3468:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    346c:	22060905 	andcs	r0, r6, #81920	; 0x14000
    3470:	01060e05 	tsteq	r6, r5, lsl #28
    3474:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    3478:	2e46030c 	cdpcs	3, 4, cr0, cr6, cr12, {0}
    347c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3480:	03060104 	movweq	r0, #24836	; 0x6104
    3484:	02002e09 	andeq	r2, r0, #9, 28	; 0x90
    3488:	00010104 	andeq	r0, r1, r4, lsl #2
    348c:	01010402 	tsteq	r1, r2, lsl #8
    3490:	01040200 	mrseq	r0, R12_usr
    3494:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3498:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    349c:	73c50301 	bicvc	r0, r5, #67108864	; 0x4000000
    34a0:	00050520 	andeq	r0, r5, r0, lsr #10
    34a4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    34a8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    34ac:	00140104 	andseq	r0, r4, r4, lsl #2
    34b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    34b4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    34b8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    34bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    34c0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    34c4:	04020005 	streq	r0, [r2], #-5
    34c8:	0cb60301 	ldceq	3, cr0, [r6], #4
    34cc:	04020001 	streq	r0, [r2], #-1
    34d0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    34d4:	001f0502 	andseq	r0, pc, r2, lsl #10
    34d8:	03010402 	movweq	r0, #5122	; 0x1402
    34dc:	050173f8 	streq	r7, [r1, #-1016]	; 0xfffffc08
    34e0:	04020004 	streq	r0, [r2], #-4
    34e4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    34e8:	00140104 	andseq	r0, r4, r4, lsl #2
    34ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    34f0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    34f4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    34f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    34fc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3500:	04020005 	streq	r0, [r2], #-5
    3504:	0c830301 	stceq	3, cr0, [r3], {1}
    3508:	04020001 	streq	r0, [r2], #-1
    350c:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3510:	01100306 	tsteq	r0, r6, lsl #6
    3514:	01062805 	tsteq	r6, r5, lsl #16
    3518:	03060705 	movweq	r0, #26373	; 0x6705
    351c:	28053c0e 	stmdacs	r5, {r1, r2, r3, sl, fp, ip, sp}
    3520:	0c050106 	stfeqs	f0, [r5], {6}
    3524:	053c5903 	ldreq	r5, [ip, #-2307]!	; 0xfffff6fd
    3528:	c4030603 	strgt	r0, [r3], #-1539	; 0xfffff9fd
    352c:	07052000 	streq	r2, [r5, -r0]
    3530:	06050106 	streq	r0, [r5], -r6, lsl #2
    3534:	0005052e 	andeq	r0, r5, lr, lsr #10
    3538:	06010402 	streq	r0, [r1], -r2, lsl #8
    353c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3540:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3544:	00010104 	andeq	r0, r1, r4, lsl #2
    3548:	01010402 	tsteq	r1, r2, lsl #8
    354c:	1f050204 	svcne	0x00050204
    3550:	01040200 	mrseq	r0, R12_usr
    3554:	20738803 	rsbscs	r8, r3, r3, lsl #16
    3558:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    355c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3560:	04020004 	streq	r0, [r2], #-4
    3564:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3568:	2e060104 	adfcss	f0, f6, f4
    356c:	01040200 	mrseq	r0, R12_usr
    3570:	02002f06 	andeq	r2, r0, #6, 30
    3574:	01060104 	tsteq	r6, r4, lsl #2
    3578:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    357c:	01040200 	mrseq	r0, R12_usr
    3580:	010cf303 	tsteq	ip, r3, lsl #6	; <UNPREDICTABLE>
    3584:	01040200 	mrseq	r0, R12_usr
    3588:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    358c:	02001f05 	andeq	r1, r0, #5, 30
    3590:	bb030104 	bllt	c39a8 <_Min_Heap_Size+0xc31a8>
    3594:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    3598:	01040200 	mrseq	r0, R12_usr
    359c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    35a0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    35a4:	20060104 	andcs	r0, r6, r4, lsl #2
    35a8:	01040200 	mrseq	r0, R12_usr
    35ac:	02002f06 	andeq	r2, r0, #6, 30
    35b0:	01060104 	tsteq	r6, r4, lsl #2
    35b4:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    35b8:	01040200 	mrseq	r0, R12_usr
    35bc:	010cc003 	tsteq	ip, r3
    35c0:	02040200 	andeq	r0, r4, #0, 4
    35c4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    35c8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    35cc:	0402000e 	streq	r0, [r2], #-14
    35d0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    35d4:	04020008 	streq	r0, [r2], #-8
    35d8:	07052002 	streq	r2, [r5, -r2]
    35dc:	0b052606 	bleq	14cdfc <_Min_Heap_Size+0x14c5fc>
    35e0:	0a050106 	beq	143a00 <_Min_Heap_Size+0x143200>
    35e4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    35e8:	060e0522 	streq	r0, [lr], -r2, lsr #10
    35ec:	202a0501 	eorcs	r0, sl, r1, lsl #10
    35f0:	2f060905 	svccs	0x00060905
    35f4:	0a030305 	beq	c4210 <_Min_Heap_Size+0xc3a10>
    35f8:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    35fc:	01061805 	tsteq	r6, r5, lsl #16
    3600:	2f060505 	svccs	0x00060505
    3604:	01061805 	tsteq	r6, r5, lsl #16
    3608:	23060505 	movwcs	r0, #25861	; 0x6505
    360c:	01061605 	tsteq	r6, r5, lsl #12
    3610:	23060505 	movwcs	r0, #25861	; 0x6505
    3614:	01061405 	tsteq	r6, r5, lsl #8
    3618:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    361c:	01061405 	tsteq	r6, r5, lsl #8
    3620:	2f060505 	svccs	0x00060505
    3624:	01061a05 	tsteq	r6, r5, lsl #20
    3628:	28060505 	stmdacs	r6, {r0, r2, r8, sl}
    362c:	03060c05 	movweq	r0, #27653	; 0x6c05
    3630:	054a7f90 	strbeq	r7, [sl, #-3984]	; 0xfffff070
    3634:	dc030603 	stcle	6, cr0, [r3], {3}
    3638:	06052e00 	streq	r2, [r5], -r0, lsl #28
    363c:	03050106 	movweq	r0, #20742	; 0x5106
    3640:	2e180306 	cdpcs	3, 1, cr0, cr8, cr6, {0}
    3644:	13060105 	movwne	r0, #24837	; 0x6105
    3648:	0005022e 	andeq	r0, r5, lr, lsr #4
    364c:	01050101 	tsteq	r5, r1, lsl #2
    3650:	00020500 	andeq	r0, r2, r0, lsl #10
    3654:	03000000 	movweq	r0, #0
    3658:	06011ae5 	streq	r1, [r1], -r5, ror #21
    365c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3660:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    3664:	06030501 	streq	r0, [r3], -r1, lsl #10
    3668:	06080522 	streq	r0, [r8], -r2, lsr #10
    366c:	20240501 	eorcs	r0, r4, r1, lsl #10
    3670:	31060305 	tstcc	r6, r5, lsl #6
    3674:	01060c05 	tsteq	r6, r5, lsl #24
    3678:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    367c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    3680:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3684:	03052008 	movweq	r2, #20488	; 0x5008
    3688:	16052706 	strne	r2, [r5], -r6, lsl #14
    368c:	03050106 	movweq	r0, #20742	; 0x5106
    3690:	16052f06 	strne	r2, [r5], -r6, lsl #30
    3694:	03050106 	movweq	r0, #20742	; 0x5106
    3698:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    369c:	03050106 	movweq	r0, #20742	; 0x5106
    36a0:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    36a4:	03050106 	movweq	r0, #20742	; 0x5106
    36a8:	12053d06 	andne	r3, r5, #384	; 0x180
    36ac:	03050106 	movweq	r0, #20742	; 0x5106
    36b0:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    36b4:	03050106 	movweq	r0, #20742	; 0x5106
    36b8:	01052806 	tsteq	r5, r6, lsl #16
    36bc:	01023006 	tsteq	r2, r6
    36c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    36c4:	02050001 	andeq	r0, r5, #1
    36c8:	00000000 	andeq	r0, r0, r0
    36cc:	011ab703 	tsteq	sl, r3, lsl #14
    36d0:	03050106 	movweq	r0, #20742	; 0x5106
    36d4:	17052106 	strne	r2, [r5, -r6, lsl #2]
    36d8:	03050106 	movweq	r0, #20742	; 0x5106
    36dc:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
    36e0:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    36e4:	06030520 	streq	r0, [r3], -r0, lsr #10
    36e8:	060c0531 			; <UNDEFINED> instruction: 0x060c0531
    36ec:	20060501 	andcs	r0, r6, r1, lsl #10
    36f0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    36f4:	01061605 	tsteq	r6, r5, lsl #12
    36f8:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    36fc:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
    3700:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3704:	052f0603 	streq	r0, [pc, #-1539]!	; 3109 <_Min_Heap_Size+0x2909>
    3708:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    370c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    3710:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3714:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    3718:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    371c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    3720:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3724:	052f0603 	streq	r0, [pc, #-1539]!	; 3129 <_Min_Heap_Size+0x2929>
    3728:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    372c:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    3730:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    3734:	01010001 	tsteq	r1, r1
    3738:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    373c:	00000002 	andeq	r0, r0, r2
    3740:	14f90300 	ldrbtne	r0, [r9], #768	; 0x300
    3744:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3748:	17060105 	strne	r0, [r6, -r5, lsl #2]
    374c:	01000102 	tsteq	r0, r2, lsl #2
    3750:	00010501 	andeq	r0, r1, r1, lsl #10
    3754:	00000205 	andeq	r0, r0, r5, lsl #4
    3758:	93030000 	movwls	r0, #12288	; 0x3000
    375c:	01060111 	tsteq	r6, r1, lsl r1
    3760:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3764:	30060104 	andcc	r0, r6, r4, lsl #2
    3768:	01040200 	mrseq	r0, R12_usr
    376c:	04020001 	streq	r0, [r2], #-1
    3770:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3774:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3778:	001f0502 	andseq	r0, pc, r2, lsl #10
    377c:	03010402 	movweq	r0, #5122	; 0x1402
    3780:	052072c6 	streq	r7, [r0, #-710]!	; 0xfffffd3a
    3784:	04020005 	streq	r0, [r2], #-5
    3788:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    378c:	01040200 	mrseq	r0, R12_usr
    3790:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3794:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3798:	06010402 	streq	r0, [r1], -r2, lsl #8
    379c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    37a0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    37a4:	00030501 	andeq	r0, r3, r1, lsl #10
    37a8:	03010402 	movweq	r0, #5122	; 0x1402
    37ac:	00010db5 			; <UNDEFINED> instruction: 0x00010db5
    37b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    37b4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    37b8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    37bc:	72f90301 	rscsvc	r0, r9, #67108864	; 0x4000000
    37c0:	00040501 	andeq	r0, r4, r1, lsl #10
    37c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    37c8:	01040200 	mrseq	r0, R12_usr
    37cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    37d0:	00200601 	eoreq	r0, r0, r1, lsl #12
    37d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    37d8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    37dc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    37e0:	00030501 	andeq	r0, r3, r1, lsl #10
    37e4:	03010402 	movweq	r0, #5122	; 0x1402
    37e8:	00010d82 	andeq	r0, r1, r2, lsl #27
    37ec:	06020402 	streq	r0, [r2], -r2, lsl #8
    37f0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    37f4:	07051502 	streq	r1, [r5, -r2, lsl #10]
    37f8:	02040200 	andeq	r0, r4, #0, 4
    37fc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3800:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3804:	04020006 	streq	r0, [r2], #-6
    3808:	05052002 	streq	r2, [r5, #-2]
    380c:	01040200 	mrseq	r0, R12_usr
    3810:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    3814:	00010104 	andeq	r0, r1, r4, lsl #2
    3818:	01010402 	tsteq	r1, r2, lsl #8
    381c:	01040200 	mrseq	r0, R12_usr
    3820:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3824:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3828:	72c10301 	sbcvc	r0, r1, #67108864	; 0x4000000
    382c:	00050520 	andeq	r0, r5, r0, lsr #10
    3830:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3834:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3838:	00140104 	andseq	r0, r4, r4, lsl #2
    383c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3840:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3844:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3848:	06010402 	streq	r0, [r1], -r2, lsl #8
    384c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3850:	04020005 	streq	r0, [r2], #-5
    3854:	0dba0301 	ldceq	3, cr0, [sl, #4]!
    3858:	04020001 	streq	r0, [r2], #-1
    385c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3860:	001f0502 	andseq	r0, pc, r2, lsl #10
    3864:	03010402 	movweq	r0, #5122	; 0x1402
    3868:	050172f4 	streq	r7, [r1, #-756]	; 0xfffffd0c
    386c:	04020004 	streq	r0, [r2], #-4
    3870:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3874:	00140104 	andseq	r0, r4, r4, lsl #2
    3878:	06010402 	streq	r0, [r1], -r2, lsl #8
    387c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3880:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3884:	06010402 	streq	r0, [r1], -r2, lsl #8
    3888:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    388c:	04020005 	streq	r0, [r2], #-5
    3890:	0d870301 	stceq	3, cr0, [r7, #4]
    3894:	04020001 	streq	r0, [r2], #-1
    3898:	002e0602 	eoreq	r0, lr, r2, lsl #12
    389c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    38a0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    38a4:	01060204 	tsteq	r6, r4, lsl #4
    38a8:	02000805 	andeq	r0, r0, #327680	; 0x50000
    38ac:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    38b0:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    38b4:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    38b8:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    38bc:	2001060b 	andcs	r0, r1, fp, lsl #12
    38c0:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    38c4:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    38c8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    38cc:	09052016 	stmdbeq	r5, {r1, r2, r4, sp}
    38d0:	06070520 	streq	r0, [r7], -r0, lsr #10
    38d4:	061a0534 			; <UNDEFINED> instruction: 0x061a0534
    38d8:	06070501 	streq	r0, [r7], -r1, lsl #10
    38dc:	06150531 			; <UNDEFINED> instruction: 0x06150531
    38e0:	06070501 	streq	r0, [r7], -r1, lsl #10
    38e4:	05200644 	streq	r0, [r0, #-1604]!	; 0xfffff9bc
    38e8:	05430605 	strbeq	r0, [r3, #-1541]	; 0xfffff9fb
    38ec:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    38f0:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    38f4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    38f8:	06440605 	strbeq	r0, [r4], -r5, lsl #12
    38fc:	06030520 	streq	r0, [r3], -r0, lsr #10
    3900:	06010532 			; <UNDEFINED> instruction: 0x06010532
    3904:	02022e13 	andeq	r2, r2, #304	; 0x130
    3908:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    390c:	02050001 	andeq	r0, r5, #1
    3910:	00000000 	andeq	r0, r0, r0
    3914:	011b9303 	tsteq	fp, r3, lsl #6
    3918:	03050106 	movweq	r0, #20742	; 0x5106
    391c:	17052106 	strne	r2, [r5, -r6, lsl #2]
    3920:	03050106 	movweq	r0, #20742	; 0x5106
    3924:	16052206 	strne	r2, [r5], -r6, lsl #4
    3928:	03050106 	movweq	r0, #20742	; 0x5106
    392c:	11053106 	tstne	r5, r6, lsl #2
    3930:	03050106 	movweq	r0, #20742	; 0x5106
    3934:	01054406 	tsteq	r5, r6, lsl #8
    3938:	01023006 	tsteq	r2, r6
    393c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3940:	02050001 	andeq	r0, r5, #1
    3944:	00000000 	andeq	r0, r0, r0
    3948:	01158803 	tsteq	r5, r3, lsl #16
    394c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3950:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    3954:	01010001 	tsteq	r1, r1
    3958:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    395c:	00000002 	andeq	r0, r0, r2
    3960:	11e00300 	mvnne	r0, r0, lsl #6
    3964:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3968:	04020003 	streq	r0, [r2], #-3
    396c:	00300601 	eorseq	r0, r0, r1, lsl #12
    3970:	01010402 	tsteq	r1, r2, lsl #8
    3974:	01040200 	mrseq	r0, R12_usr
    3978:	04020001 	streq	r0, [r2], #-1
    397c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3980:	02001f05 	andeq	r1, r0, #5, 30
    3984:	f9030104 			; <UNDEFINED> instruction: 0xf9030104
    3988:	05052071 	streq	r2, [r5, #-113]	; 0xffffff8f
    398c:	01040200 	mrseq	r0, R12_usr
    3990:	00040514 	andeq	r0, r4, r4, lsl r5
    3994:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3998:	01040200 	mrseq	r0, R12_usr
    399c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    39a0:	2f060104 	svccs	0x00060104
    39a4:	01040200 	mrseq	r0, R12_usr
    39a8:	01040106 	tsteq	r4, r6, lsl #2
    39ac:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    39b0:	82030104 	andhi	r0, r3, #4, 2
    39b4:	0200010e 	andeq	r0, r0, #-2147483645	; 0x80000003
    39b8:	2e060104 	adfcss	f0, f6, f4
    39bc:	1f050204 	svcne	0x00050204
    39c0:	01040200 	mrseq	r0, R12_usr
    39c4:	0172ac03 	cmneq	r2, r3, lsl #24
    39c8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    39cc:	00140104 	andseq	r0, r4, r4, lsl #2
    39d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    39d4:	01040200 	mrseq	r0, R12_usr
    39d8:	02002006 	andeq	r2, r0, #6
    39dc:	2f060104 	svccs	0x00060104
    39e0:	01040200 	mrseq	r0, R12_usr
    39e4:	01040106 	tsteq	r4, r6, lsl #2
    39e8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    39ec:	cf030104 	svcgt	0x00030104
    39f0:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    39f4:	002e0104 	eoreq	r0, lr, r4, lsl #2
    39f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    39fc:	04020001 	streq	r0, [r2], #-1
    3a00:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    3a04:	00010104 	andeq	r0, r1, r4, lsl #2
    3a08:	01010402 	tsteq	r1, r2, lsl #8
    3a0c:	01040200 	mrseq	r0, R12_usr
    3a10:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3a14:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3a18:	71f80301 	mvnsvc	r0, r1, lsl #6
    3a1c:	00050520 	andeq	r0, r5, r0, lsr #10
    3a20:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3a24:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3a28:	00140104 	andseq	r0, r4, r4, lsl #2
    3a2c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a30:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3a34:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a38:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a3c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a40:	04020003 	streq	r0, [r2], #-3
    3a44:	0e830301 	cdpeq	3, 8, cr0, cr3, cr1, {0}
    3a48:	04020001 	streq	r0, [r2], #-1
    3a4c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3a50:	001f0502 	andseq	r0, pc, r2, lsl #10
    3a54:	03010402 	movweq	r0, #5122	; 0x1402
    3a58:	050172ab 	streq	r7, [r1, #-683]	; 0xfffffd55
    3a5c:	04020004 	streq	r0, [r2], #-4
    3a60:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3a64:	00140104 	andseq	r0, r4, r4, lsl #2
    3a68:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a6c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3a70:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a74:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a78:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a7c:	04020003 	streq	r0, [r2], #-3
    3a80:	0dd00301 	ldcleq	3, cr0, [r0, #4]
    3a84:	04020001 	streq	r0, [r2], #-1
    3a88:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3a8c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3a90:	02000c05 	andeq	r0, r0, #1280	; 0x500
    3a94:	01060204 	tsteq	r6, r4, lsl #4
    3a98:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    3a9c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3aa0:	04020005 	streq	r0, [r2], #-5
    3aa4:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    3aa8:	04020003 	streq	r0, [r2], #-3
    3aac:	07051602 	streq	r1, [r5, -r2, lsl #12]
    3ab0:	02040200 	andeq	r0, r4, #0, 4
    3ab4:	06050106 	streq	r0, [r5], -r6, lsl #2
    3ab8:	02040200 	andeq	r0, r4, #0, 4
    3abc:	0005052e 	andeq	r0, r5, lr, lsr #10
    3ac0:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ac4:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3ac8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3acc:	00010104 	andeq	r0, r1, r4, lsl #2
    3ad0:	01010402 	tsteq	r1, r2, lsl #8
    3ad4:	1f050204 	svcne	0x00050204
    3ad8:	01040200 	mrseq	r0, R12_usr
    3adc:	2071ed03 	rsbscs	lr, r1, r3, lsl #26
    3ae0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3ae4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3ae8:	04020004 	streq	r0, [r2], #-4
    3aec:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3af0:	2e060104 	adfcss	f0, f6, f4
    3af4:	01040200 	mrseq	r0, R12_usr
    3af8:	02002f06 	andeq	r2, r0, #6, 30
    3afc:	01060104 	tsteq	r6, r4, lsl #2
    3b00:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3b04:	01040200 	mrseq	r0, R12_usr
    3b08:	010e8e03 	tsteq	lr, r3, lsl #28
    3b0c:	01040200 	mrseq	r0, R12_usr
    3b10:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3b14:	02001f05 	andeq	r1, r0, #5, 30
    3b18:	a0030104 	andge	r0, r3, r4, lsl #2
    3b1c:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3b20:	01040200 	mrseq	r0, R12_usr
    3b24:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3b28:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3b2c:	20060104 	andcs	r0, r6, r4, lsl #2
    3b30:	01040200 	mrseq	r0, R12_usr
    3b34:	02002f06 	andeq	r2, r0, #6, 30
    3b38:	01060104 	tsteq	r6, r4, lsl #2
    3b3c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3b40:	01040200 	mrseq	r0, R12_usr
    3b44:	010ddb03 	tsteq	sp, r3, lsl #22
    3b48:	02040200 	andeq	r0, r4, #0, 4
    3b4c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3b50:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3b54:	0402000e 	streq	r0, [r2], #-14
    3b58:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3b5c:	04020008 	streq	r0, [r2], #-8
    3b60:	07052002 	streq	r2, [r5, -r2]
    3b64:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    3b68:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3b6c:	0b053106 	bleq	14ff8c <_Min_Heap_Size+0x14f78c>
    3b70:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3b74:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3b78:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    3b7c:	16050106 	strne	r0, [r5], -r6, lsl #2
    3b80:	20090520 	andcs	r0, r9, r0, lsr #10
    3b84:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3b88:	03060104 	movweq	r0, #24836	; 0x6104
    3b8c:	02002e6d 	andeq	r2, r0, #1744	; 0x6d0
    3b90:	00010104 	andeq	r0, r1, r4, lsl #2
    3b94:	01010402 	tsteq	r1, r2, lsl #8
    3b98:	01040200 	mrseq	r0, R12_usr
    3b9c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3ba0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3ba4:	71f30301 	mvnsvc	r0, r1, lsl #6
    3ba8:	00050520 	andeq	r0, r5, r0, lsr #10
    3bac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3bb0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3bb4:	00140104 	andseq	r0, r4, r4, lsl #2
    3bb8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bbc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3bc0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3bc4:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bc8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3bcc:	04020005 	streq	r0, [r2], #-5
    3bd0:	0e880301 	cdpeq	3, 8, cr0, cr8, cr1, {0}
    3bd4:	04020001 	streq	r0, [r2], #-1
    3bd8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3bdc:	001f0502 	andseq	r0, pc, r2, lsl #10
    3be0:	03010402 	movweq	r0, #5122	; 0x1402
    3be4:	050172a6 	streq	r7, [r1, #-678]	; 0xfffffd5a
    3be8:	04020004 	streq	r0, [r2], #-4
    3bec:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3bf0:	00140104 	andseq	r0, r4, r4, lsl #2
    3bf4:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bf8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3bfc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3c00:	06010402 	streq	r0, [r1], -r2, lsl #8
    3c04:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3c08:	04020005 	streq	r0, [r2], #-5
    3c0c:	0dd50301 	ldcleq	3, cr0, [r5, #4]
    3c10:	04020001 	streq	r0, [r2], #-1
    3c14:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3c18:	01190306 	tsteq	r9, r6, lsl #6
    3c1c:	01061a05 	tsteq	r6, r5, lsl #20
    3c20:	31060705 	tstcc	r6, r5, lsl #14
    3c24:	01061605 	tsteq	r6, r5, lsl #12
    3c28:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    3c2c:	01061c05 	tsteq	r6, r5, lsl #24
    3c30:	28060705 	stmdacs	r6, {r0, r2, r8, r9, sl}
    3c34:	05052006 	streq	r2, [r5, #-6]
    3c38:	18054306 	stmdane	r5, {r1, r2, r8, r9, lr}
    3c3c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c40:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    3c44:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c48:	1a053d06 	bne	153068 <_Min_Heap_Size+0x152868>
    3c4c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c50:	20062806 	andcs	r2, r6, r6, lsl #16
    3c54:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
    3c58:	13060105 	movwne	r0, #24837	; 0x6105
    3c5c:	0002022e 	andeq	r0, r2, lr, lsr #4
    3c60:	01050101 	tsteq	r5, r1, lsl #2
    3c64:	00020500 	andeq	r0, r2, r0, lsl #10
    3c68:	03000000 	movweq	r0, #0
    3c6c:	06011baf 	streq	r1, [r1], -pc, lsr #23
    3c70:	06030501 	streq	r0, [r3], -r1, lsl #10
    3c74:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    3c78:	06030501 	streq	r0, [r3], -r1, lsl #10
    3c7c:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    3c80:	06030501 	streq	r0, [r3], -r1, lsl #10
    3c84:	06120531 			; <UNDEFINED> instruction: 0x06120531
    3c88:	06030501 	streq	r0, [r3], -r1, lsl #10
    3c8c:	0618053d 			; <UNDEFINED> instruction: 0x0618053d
    3c90:	06030501 	streq	r0, [r3], -r1, lsl #10
    3c94:	06010528 	streq	r0, [r1], -r8, lsr #10
    3c98:	00010230 	andeq	r0, r1, r0, lsr r2
    3c9c:	01050101 	tsteq	r5, r1, lsl #2
    3ca0:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    3ca4:	0308000d 	movweq	r0, #32781	; 0x800d
    3ca8:	05011599 	streq	r1, [r1, #-1433]	; 0xfffffa67
    3cac:	05131403 	ldreq	r1, [r3, #-1027]	; 0xfffffbfd
    3cb0:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    3cb4:	01010001 	tsteq	r1, r1
    3cb8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3cbc:	000d5e02 	andeq	r5, sp, r2, lsl #28
    3cc0:	1c8a0308 	stcne	3, cr0, [sl], {8}
    3cc4:	13030501 	movwne	r0, #13569	; 0x3501
    3cc8:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    3ccc:	06050106 	streq	r0, [r5], -r6, lsl #2
    3cd0:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    3cd4:	06150530 			; <UNDEFINED> instruction: 0x06150530
    3cd8:	20080501 	andcs	r0, r8, r1, lsl #10
    3cdc:	03060705 	movweq	r0, #26373	; 0x6705
    3ce0:	12053c09 	andne	r3, r5, #2304	; 0x900
    3ce4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3ce8:	05142106 	ldreq	r2, [r4, #-262]	; 0xfffffefa
    3cec:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    3cf0:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    3cf4:	7c053c01 	stcvc	12, cr3, [r5], {1}
    3cf8:	02040200 	andeq	r0, r4, #0, 4
    3cfc:	006d052e 	rsbeq	r0, sp, lr, lsr #10
    3d00:	20020402 	andcs	r0, r2, r2, lsl #8
    3d04:	30060905 	andcc	r0, r6, r5, lsl #18
    3d08:	01062605 	tsteq	r6, r5, lsl #12
    3d0c:	05203005 	streq	r3, [r0, #-5]!
    3d10:	07052015 	smladeq	r5, r5, r0, r2
    3d14:	19052606 	stmdbne	r5, {r1, r2, r9, sl, sp}
    3d18:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3d1c:	10053f06 	andne	r3, r5, r6, lsl #30
    3d20:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3d24:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
    3d28:	62030105 	andvs	r0, r3, #1073741825	; 0x40000001
    3d2c:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    3d30:	5b2e2103 	blpl	b8c144 <_Min_Heap_Size+0xb8b944>
    3d34:	16055b5b 			; <UNDEFINED> instruction: 0x16055b5b
    3d38:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3d3c:	1a053f06 	bne	15395c <_Min_Heap_Size+0x15315c>
    3d40:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3d44:	10053206 	andne	r3, r5, r6, lsl #4
    3d48:	0a050106 	beq	144168 <_Min_Heap_Size+0x143968>
    3d4c:	06090520 	streq	r0, [r9], -r0, lsr #10
    3d50:	061e0531 			; <UNDEFINED> instruction: 0x061e0531
    3d54:	00090501 	andeq	r0, r9, r1, lsl #10
    3d58:	06010402 	streq	r0, [r1], -r2, lsl #8
    3d5c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    3d60:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3d64:	00010104 	andeq	r0, r1, r4, lsl #2
    3d68:	01010402 	tsteq	r1, r2, lsl #8
    3d6c:	1f050204 	svcne	0x00050204
    3d70:	01040200 	mrseq	r0, R12_usr
    3d74:	20679a03 	rsbcs	r9, r7, r3, lsl #20
    3d78:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3d7c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3d80:	04020004 	streq	r0, [r2], #-4
    3d84:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3d88:	2e060104 	adfcss	f0, f6, f4
    3d8c:	01040200 	mrseq	r0, R12_usr
    3d90:	02002f06 	andeq	r2, r0, #6, 30
    3d94:	01060104 	tsteq	r6, r4, lsl #2
    3d98:	09050104 	stmdbeq	r5, {r2, r8}
    3d9c:	01040200 	mrseq	r0, R12_usr
    3da0:	0118e103 	tsteq	r8, r3, lsl #2
    3da4:	01040200 	mrseq	r0, R12_usr
    3da8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3dac:	02001f05 	andeq	r1, r0, #5, 30
    3db0:	cd030104 	stfgts	f0, [r3, #-16]
    3db4:	04050167 	streq	r0, [r5], #-359	; 0xfffffe99
    3db8:	01040200 	mrseq	r0, R12_usr
    3dbc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3dc0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3dc4:	20060104 	andcs	r0, r6, r4, lsl #2
    3dc8:	01040200 	mrseq	r0, R12_usr
    3dcc:	02002f06 	andeq	r2, r0, #6, 30
    3dd0:	01060104 	tsteq	r6, r4, lsl #2
    3dd4:	09050104 	stmdbeq	r5, {r2, r8}
    3dd8:	01040200 	mrseq	r0, R12_usr
    3ddc:	0118ae03 	tsteq	r8, r3, lsl #28
    3de0:	02040200 	andeq	r0, r4, #0, 4
    3de4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3de8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3dec:	0402000d 	streq	r0, [r2], #-13
    3df0:	00010602 	andeq	r0, r1, r2, lsl #12
    3df4:	20020402 	andcs	r0, r2, r2, lsl #8
    3df8:	02000c05 	andeq	r0, r0, #1280	; 0x500
    3dfc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3e00:	013f060b 	teqeq	pc, fp, lsl #12
    3e04:	002e2e2e 	eoreq	r2, lr, lr, lsr #28
    3e08:	20010402 	andcs	r0, r1, r2, lsl #8
    3e0c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3e10:	051a0104 	ldreq	r0, [sl, #-260]	; 0xfffffefc
    3e14:	3c0f0307 	stccc	3, cr0, [pc], {7}
    3e18:	01060e05 	tsteq	r6, r5, lsl #28
    3e1c:	05280105 	streq	r0, [r8, #-261]!	; 0xfffffefb
    3e20:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    3e24:	7fab0301 	svcvc	0x00ab0301
    3e28:	0038053c 	eorseq	r0, r8, ip, lsr r5
    3e2c:	20010402 	andcs	r0, r1, r2, lsl #8
    3e30:	30060705 	andcc	r0, r6, r5, lsl #14
    3e34:	06130513 			; <UNDEFINED> instruction: 0x06130513
    3e38:	06070501 	streq	r0, [r7], -r1, lsl #10
    3e3c:	06260521 	strteq	r0, [r6], -r1, lsr #10
    3e40:	20300501 	eorscs	r0, r0, r1, lsl #10
    3e44:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    3e48:	07052e14 	smladeq	r5, r4, lr, r2
    3e4c:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    3e50:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3e54:	4a0d0306 	bmi	344a74 <_Min_Heap_Size+0x344274>
    3e58:	01062605 	tsteq	r6, r5, lsl #12
    3e5c:	05203005 	streq	r3, [r0, #-5]!
    3e60:	15052017 	strne	r2, [r5, #-23]	; 0xffffffe9
    3e64:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3e68:	062e3703 	strteq	r3, [lr], -r3, lsl #14
    3e6c:	030c052e 	movweq	r0, #50478	; 0xc52e
    3e70:	1c20200a 	stcne	0, cr2, [r0], #-40	; 0xffffffd8
    3e74:	02260105 	eoreq	r0, r6, #1073741825	; 0x40000001
    3e78:	01010001 	tsteq	r1, r1
    3e7c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3e80:	000e4402 	andeq	r4, lr, r2, lsl #8
    3e84:	12ae0308 	adcne	r0, lr, #8, 6	; 0x20000000
    3e88:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3e8c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    3e90:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    3e94:	0305200c 	movweq	r2, #20492	; 0x500c
    3e98:	0c052106 	stfeqs	f2, [r5], {6}
    3e9c:	03050106 	movweq	r0, #20742	; 0x5106
    3ea0:	0c052106 	stfeqs	f2, [r5], {6}
    3ea4:	03050106 	movweq	r0, #20742	; 0x5106
    3ea8:	15132106 	ldrne	r2, [r3, #-262]	; 0xfffffefa
    3eac:	06060513 			; <UNDEFINED> instruction: 0x06060513
    3eb0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    3eb4:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    3eb8:	2f050106 	svccs	0x00050106
    3ebc:	01040200 	mrseq	r0, R12_usr
    3ec0:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    3ec4:	06060544 	streq	r0, [r6], -r4, asr #10
    3ec8:	001d0501 	andseq	r0, sp, r1, lsl #10
    3ecc:	20010402 	andcs	r0, r1, r2, lsl #8
    3ed0:	01040200 	mrseq	r0, R12_usr
    3ed4:	2121052e 			; <UNDEFINED> instruction: 0x2121052e
    3ed8:	03060305 	movweq	r0, #25349	; 0x6305
    3edc:	053c00eb 	ldreq	r0, [ip, #-235]!	; 0xffffff15
    3ee0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    3ee4:	03052006 	movweq	r2, #20486	; 0x5006
    3ee8:	00dd0306 	sbcseq	r0, sp, r6, lsl #6
    3eec:	0606052e 	streq	r0, [r6], -lr, lsr #10
    3ef0:	002c0501 	eoreq	r0, ip, r1, lsl #10
    3ef4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3ef8:	51060305 	tstpl	r6, r5, lsl #6
    3efc:	01060605 	tsteq	r6, r5, lsl #12
    3f00:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    3f04:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3f08:	07054f01 	streq	r4, [r5, -r1, lsl #30]
    3f0c:	7ea50306 	cdpvc	3, 10, cr0, cr5, cr6, {0}
    3f10:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    3f14:	0305052f 	movweq	r0, #21807	; 0x552f
    3f18:	08052009 	stmdaeq	r5, {r0, r3, sp}
    3f1c:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    3f20:	01040200 	mrseq	r0, R12_usr
    3f24:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    3f28:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    3f2c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3f30:	0608054e 	streq	r0, [r8], -lr, asr #10
    3f34:	002d0501 	eoreq	r0, sp, r1, lsl #10
    3f38:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3f3c:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    3f40:	01061805 	tsteq	r6, r5, lsl #16
    3f44:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    3f48:	01060805 	tsteq	r6, r5, lsl #16
    3f4c:	02002d05 	andeq	r2, r0, #320	; 0x140
    3f50:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3f54:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    3f58:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3f5c:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    3f60:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3f64:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3f68:	32053c01 	andcc	r3, r5, #256	; 0x100
    3f6c:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
    3f70:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    3f74:	06050501 	streq	r0, [r5], -r1, lsl #10
    3f78:	060e054e 	streq	r0, [lr], -lr, asr #10
    3f7c:	20080501 	andcs	r0, r8, r1, lsl #10
    3f80:	31060705 	tstcc	r6, r5, lsl #14
    3f84:	01060a05 	tsteq	r6, r5, lsl #20
    3f88:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    3f8c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3f90:	05430607 	strbeq	r0, [r3, #-1543]	; 0xfffff9f9
    3f94:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3f98:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    3f9c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3fa0:	3e05200a 	cdpcc	0, 0, cr2, cr5, cr10, {0}
    3fa4:	01040200 	mrseq	r0, R12_usr
    3fa8:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    3fac:	0d053f25 	stceq	15, cr3, [r5, #-148]	; 0xffffff6c
    3fb0:	0c050106 	stfeqs	f0, [r5], {6}
    3fb4:	000b052e 	andeq	r0, fp, lr, lsr #10
    3fb8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3fbc:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3fc0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3fc4:	00010104 	andeq	r0, r1, r4, lsl #2
    3fc8:	01010402 	tsteq	r1, r2, lsl #8
    3fcc:	1f050204 	svcne	0x00050204
    3fd0:	01040200 	mrseq	r0, R12_usr
    3fd4:	2070e703 	rsbscs	lr, r0, r3, lsl #14
    3fd8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3fdc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3fe0:	04020004 	streq	r0, [r2], #-4
    3fe4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3fe8:	2e060104 	adfcss	f0, f6, f4
    3fec:	01040200 	mrseq	r0, R12_usr
    3ff0:	02002f06 	andeq	r2, r0, #6, 30
    3ff4:	01060104 	tsteq	r6, r4, lsl #2
    3ff8:	0b050104 	bleq	144410 <_Min_Heap_Size+0x143c10>
    3ffc:	01040200 	mrseq	r0, R12_usr
    4000:	010f9403 	tsteq	pc, r3, lsl #8
    4004:	01040200 	mrseq	r0, R12_usr
    4008:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    400c:	02001f05 	andeq	r1, r0, #5, 30
    4010:	9a030104 	bls	c4428 <_Min_Heap_Size+0xc3c28>
    4014:	04050171 	streq	r0, [r5], #-369	; 0xfffffe8f
    4018:	01040200 	mrseq	r0, R12_usr
    401c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4020:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4024:	20060104 	andcs	r0, r6, r4, lsl #2
    4028:	01040200 	mrseq	r0, R12_usr
    402c:	02002f06 	andeq	r2, r0, #6, 30
    4030:	01060104 	tsteq	r6, r4, lsl #2
    4034:	0b050104 	bleq	14444c <_Min_Heap_Size+0x143c4c>
    4038:	01040200 	mrseq	r0, R12_usr
    403c:	010ee103 	tsteq	lr, r3, lsl #2
    4040:	02040200 	andeq	r0, r4, #0, 4
    4044:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4048:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    404c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4050:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4054:	0402000e 	streq	r0, [r2], #-14
    4058:	0d052002 	stceq	0, cr2, [r5, #-8]
    405c:	2e052406 	cdpcs	4, 0, cr2, cr5, cr6, {0}
    4060:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4064:	11052f06 	tstne	r5, r6, lsl #30
    4068:	10050106 	andne	r0, r5, r6, lsl #2
    406c:	060f053c 			; <UNDEFINED> instruction: 0x060f053c
    4070:	06140531 			; <UNDEFINED> instruction: 0x06140531
    4074:	201c0501 	andscs	r0, ip, r1, lsl #10
    4078:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    407c:	65030609 	strvs	r0, [r3, #-1545]	; 0xfffff9f7
    4080:	2e20062e 	cfmadda32cs	mvax1, mvax0, mvfx0, mvfx14
    4084:	03060d05 	movweq	r0, #27909	; 0x6d05
    4088:	0b052026 	bleq	14c128 <_Min_Heap_Size+0x14b928>
    408c:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    4090:	4a0d0309 	bmi	344cbc <_Min_Heap_Size+0x3444bc>
    4094:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    4098:	06050501 	streq	r0, [r5], -r1, lsl #10
    409c:	06070531 			; <UNDEFINED> instruction: 0x06070531
    40a0:	05054b26 	streq	r4, [r5, #-2854]	; 0xfffff4da
    40a4:	06014c06 	streq	r4, [r1], -r6, lsl #24
    40a8:	2e200620 	cfmadda32cs	mvax1, mvax0, mvfx0, mvfx0
    40ac:	0515202e 	ldreq	r2, [r5, #-46]	; 0xffffffd2
    40b0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    40b4:	07052008 	streq	r2, [r5, -r8]
    40b8:	32054206 	andcc	r4, r5, #1610612736	; 0x60000000
    40bc:	10050106 	andne	r0, r5, r6, lsl #2
    40c0:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    40c4:	060a0521 	streq	r0, [sl], -r1, lsr #10
    40c8:	3d2b0501 	cfstr32cc	mvfx0, [fp, #-4]!
    40cc:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    40d0:	053f0609 	ldreq	r0, [pc, #-1545]!	; 3acf <_Min_Heap_Size+0x32cf>
    40d4:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    40d8:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    40dc:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    40e0:	0b05200c 	bleq	14c118 <_Min_Heap_Size+0x14b918>
    40e4:	01040200 	mrseq	r0, R12_usr
    40e8:	02003f06 	andeq	r3, r0, #6, 30
    40ec:	00010104 	andeq	r0, r1, r4, lsl #2
    40f0:	01010402 	tsteq	r1, r2, lsl #8
    40f4:	01040200 	mrseq	r0, R12_usr
    40f8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    40fc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4100:	70950301 	addsvc	r0, r5, r1, lsl #6
    4104:	00050520 	andeq	r0, r5, r0, lsr #10
    4108:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    410c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4110:	00140104 	andseq	r0, r4, r4, lsl #2
    4114:	06010402 	streq	r0, [r1], -r2, lsl #8
    4118:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    411c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4120:	06010402 	streq	r0, [r1], -r2, lsl #8
    4124:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4128:	0402000b 	streq	r0, [r2], #-11
    412c:	0fe60301 	svceq	0x00e60301
    4130:	04020001 	streq	r0, [r2], #-1
    4134:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4138:	001f0502 	andseq	r0, pc, r2, lsl #10
    413c:	03010402 	movweq	r0, #5122	; 0x1402
    4140:	050170c8 	streq	r7, [r1, #-200]	; 0xffffff38
    4144:	04020004 	streq	r0, [r2], #-4
    4148:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    414c:	00140104 	andseq	r0, r4, r4, lsl #2
    4150:	06010402 	streq	r0, [r1], -r2, lsl #8
    4154:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4158:	002f0601 	eoreq	r0, pc, r1, lsl #12
    415c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4160:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4164:	0402000b 	streq	r0, [r2], #-11
    4168:	0fb30301 	svceq	0x00b30301
    416c:	04020001 	streq	r0, [r2], #-1
    4170:	02002e01 	andeq	r2, r0, #1, 28
    4174:	01060104 	tsteq	r6, r4, lsl #2
    4178:	01040200 	mrseq	r0, R12_usr
    417c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4180:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4184:	00010104 	andeq	r0, r1, r4, lsl #2
    4188:	01010402 	tsteq	r1, r2, lsl #8
    418c:	1f050204 	svcne	0x00050204
    4190:	01040200 	mrseq	r0, R12_usr
    4194:	20709403 	rsbscs	r9, r0, r3, lsl #8
    4198:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    419c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    41a0:	04020004 	streq	r0, [r2], #-4
    41a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    41a8:	2e060104 	adfcss	f0, f6, f4
    41ac:	01040200 	mrseq	r0, R12_usr
    41b0:	02002f06 	andeq	r2, r0, #6, 30
    41b4:	01060104 	tsteq	r6, r4, lsl #2
    41b8:	0b050104 	bleq	1445d0 <_Min_Heap_Size+0x143dd0>
    41bc:	01040200 	mrseq	r0, R12_usr
    41c0:	010fe703 	tsteq	pc, r3, lsl #14
    41c4:	01040200 	mrseq	r0, R12_usr
    41c8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    41cc:	02001f05 	andeq	r1, r0, #5, 30
    41d0:	c7030104 	strgt	r0, [r3, -r4, lsl #2]
    41d4:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    41d8:	01040200 	mrseq	r0, R12_usr
    41dc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    41e0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    41e4:	20060104 	andcs	r0, r6, r4, lsl #2
    41e8:	01040200 	mrseq	r0, R12_usr
    41ec:	02002f06 	andeq	r2, r0, #6, 30
    41f0:	01060104 	tsteq	r6, r4, lsl #2
    41f4:	0b050104 	bleq	14460c <_Min_Heap_Size+0x143e0c>
    41f8:	01040200 	mrseq	r0, R12_usr
    41fc:	010fb403 	tsteq	pc, r3, lsl #8
    4200:	01040200 	mrseq	r0, R12_usr
    4204:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4208:	00010601 	andeq	r0, r1, r1, lsl #12
    420c:	16010402 	strne	r0, [r1], -r2, lsl #8
    4210:	01040200 	mrseq	r0, R12_usr
    4214:	04020001 	streq	r0, [r2], #-1
    4218:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    421c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4220:	001f0502 	andseq	r0, pc, r2, lsl #10
    4224:	03010402 	movweq	r0, #5122	; 0x1402
    4228:	05207090 	streq	r7, [r0, #-144]!	; 0xffffff70
    422c:	04020005 	streq	r0, [r2], #-5
    4230:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4234:	01040200 	mrseq	r0, R12_usr
    4238:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    423c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4240:	06010402 	streq	r0, [r1], -r2, lsl #8
    4244:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4248:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    424c:	000b0501 	andeq	r0, fp, r1, lsl #10
    4250:	03010402 	movweq	r0, #5122	; 0x1402
    4254:	00010feb 	andeq	r0, r1, fp, ror #31
    4258:	06010402 	streq	r0, [r1], -r2, lsl #8
    425c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4260:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4264:	70c30301 	sbcvc	r0, r3, r1, lsl #6
    4268:	00040501 	andeq	r0, r4, r1, lsl #10
    426c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4270:	01040200 	mrseq	r0, R12_usr
    4274:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4278:	00200601 	eoreq	r0, r0, r1, lsl #12
    427c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4280:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4284:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4288:	000b0501 	andeq	r0, fp, r1, lsl #10
    428c:	03010402 	movweq	r0, #5122	; 0x1402
    4290:	00010fb8 			; <UNDEFINED> instruction: 0x00010fb8
    4294:	06020402 	streq	r0, [r2], -r2, lsl #8
    4298:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    429c:	1a051502 	bne	1496ac <_Min_Heap_Size+0x148eac>
    42a0:	02040200 	andeq	r0, r4, #0, 4
    42a4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    42a8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    42ac:	0402000b 	streq	r0, [r2], #-11
    42b0:	052f0602 	streq	r0, [pc, #-1538]!	; 3cb6 <_Min_Heap_Size+0x34b6>
    42b4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    42b8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    42bc:	0402000b 	streq	r0, [r2], #-11
    42c0:	00300601 	eorseq	r0, r0, r1, lsl #12
    42c4:	01010402 	tsteq	r1, r2, lsl #8
    42c8:	01040200 	mrseq	r0, R12_usr
    42cc:	04020001 	streq	r0, [r2], #-1
    42d0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    42d4:	02001f05 	andeq	r1, r0, #5, 30
    42d8:	8a030104 	bhi	c46f0 <_Min_Heap_Size+0xc3ef0>
    42dc:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    42e0:	01040200 	mrseq	r0, R12_usr
    42e4:	00040514 	andeq	r0, r4, r4, lsl r5
    42e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    42ec:	01040200 	mrseq	r0, R12_usr
    42f0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    42f4:	2f060104 	svccs	0x00060104
    42f8:	01040200 	mrseq	r0, R12_usr
    42fc:	01040106 	tsteq	r4, r6, lsl #2
    4300:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4304:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    4308:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    430c:	2e060104 	adfcss	f0, f6, f4
    4310:	1f050204 	svcne	0x00050204
    4314:	01040200 	mrseq	r0, R12_usr
    4318:	0170bd03 	cmneq	r0, r3, lsl #26
    431c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4320:	00140104 	andseq	r0, r4, r4, lsl #2
    4324:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4328:	01040200 	mrseq	r0, R12_usr
    432c:	02002006 	andeq	r2, r0, #6
    4330:	2f060104 	svccs	0x00060104
    4334:	01040200 	mrseq	r0, R12_usr
    4338:	01040106 	tsteq	r4, r6, lsl #2
    433c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4340:	be030104 	adflts	f0, f3, f4
    4344:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4348:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    434c:	02040200 	andeq	r0, r4, #0, 4
    4350:	00110515 	andseq	r0, r1, r5, lsl r5
    4354:	06020402 	streq	r0, [r2], -r2, lsl #8
    4358:	04020001 	streq	r0, [r2], #-1
    435c:	09052002 	stmdbeq	r5, {r1, sp}
    4360:	1c053306 	stcne	3, cr3, [r5], {6}
    4364:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4368:	31053506 	tstcc	r5, r6, lsl #10
    436c:	45050106 	strmi	r0, [r5, #-262]	; 0xfffffefa
    4370:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
    4374:	5b060705 	blpl	185f90 <_Min_Heap_Size+0x185790>
    4378:	19062006 	stmdbne	r6, {r1, r2, sp}
    437c:	01062205 	tsteq	r6, r5, lsl #4
    4380:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    4384:	07052e10 	smladeq	r5, r0, lr, r2
    4388:	11052f06 	tstne	r5, r6, lsl #30
    438c:	0a050106 	beq	1447ac <_Min_Heap_Size+0x143fac>
    4390:	3d0b052e 	cfstr32cc	mvfx0, [fp, #-184]	; 0xffffff48
    4394:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4398:	3f060104 	svccc	0x00060104
    439c:	01040200 	mrseq	r0, R12_usr
    43a0:	04020001 	streq	r0, [r2], #-1
    43a4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    43a8:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    43ac:	001f0502 	andseq	r0, pc, r2, lsl #10
    43b0:	03010402 	movweq	r0, #5122	; 0x1402
    43b4:	05206fec 	streq	r6, [r0, #-4076]!	; 0xfffff014
    43b8:	04020005 	streq	r0, [r2], #-5
    43bc:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    43c0:	01040200 	mrseq	r0, R12_usr
    43c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    43c8:	002e0601 	eoreq	r0, lr, r1, lsl #12
    43cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    43d0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    43d4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    43d8:	00090501 	andeq	r0, r9, r1, lsl #10
    43dc:	03010402 	movweq	r0, #5122	; 0x1402
    43e0:	0001108f 	andeq	r1, r1, pc, lsl #1
    43e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    43e8:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    43ec:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    43f0:	709f0301 	addsvc	r0, pc, r1, lsl #6
    43f4:	00040501 	andeq	r0, r4, r1, lsl #10
    43f8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    43fc:	01040200 	mrseq	r0, R12_usr
    4400:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4404:	00200601 	eoreq	r0, r0, r1, lsl #12
    4408:	06010402 	streq	r0, [r1], -r2, lsl #8
    440c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4410:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4414:	00090501 	andeq	r0, r9, r1, lsl #10
    4418:	03010402 	movweq	r0, #5122	; 0x1402
    441c:	00010fdc 	ldrdeq	r0, [r1], -ip
    4420:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4424:	01040200 	mrseq	r0, R12_usr
    4428:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    442c:	00150104 	andseq	r0, r5, r4, lsl #2
    4430:	01010402 	tsteq	r1, r2, lsl #8
    4434:	01040200 	mrseq	r0, R12_usr
    4438:	04020001 	streq	r0, [r2], #-1
    443c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4440:	02001f05 	andeq	r1, r0, #5, 30
    4444:	e9030104 	stmdb	r3, {r2, r8}
    4448:	0505206f 	streq	r2, [r5, #-111]	; 0xffffff91
    444c:	01040200 	mrseq	r0, R12_usr
    4450:	00040514 	andeq	r0, r4, r4, lsl r5
    4454:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4458:	01040200 	mrseq	r0, R12_usr
    445c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4460:	2f060104 	svccs	0x00060104
    4464:	01040200 	mrseq	r0, R12_usr
    4468:	01040106 	tsteq	r4, r6, lsl #2
    446c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4470:	92030104 	andls	r0, r3, #4, 2
    4474:	02000110 	andeq	r0, r0, #16, 2
    4478:	2e060104 	adfcss	f0, f6, f4
    447c:	1f050204 	svcne	0x00050204
    4480:	01040200 	mrseq	r0, R12_usr
    4484:	01709c03 	cmneq	r0, r3, lsl #24
    4488:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    448c:	00140104 	andseq	r0, r4, r4, lsl #2
    4490:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4494:	01040200 	mrseq	r0, R12_usr
    4498:	02002006 	andeq	r2, r0, #6
    449c:	2f060104 	svccs	0x00060104
    44a0:	01040200 	mrseq	r0, R12_usr
    44a4:	01040106 	tsteq	r4, r6, lsl #2
    44a8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    44ac:	df030104 	svcle	0x00030104
    44b0:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    44b4:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    44b8:	02040200 	andeq	r0, r4, #0, 4
    44bc:	00180515 	andseq	r0, r8, r5, lsl r5
    44c0:	06020402 	streq	r0, [r2], -r2, lsl #8
    44c4:	04020001 	streq	r0, [r2], #-1
    44c8:	09052002 	stmdbeq	r5, {r1, sp}
    44cc:	02040200 	andeq	r0, r4, #0, 4
    44d0:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    44d4:	02040200 	andeq	r0, r4, #0, 4
    44d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    44dc:	01040200 	mrseq	r0, R12_usr
    44e0:	02003006 	andeq	r3, r0, #6
    44e4:	00010104 	andeq	r0, r1, r4, lsl #2
    44e8:	01010402 	tsteq	r1, r2, lsl #8
    44ec:	01040200 	mrseq	r0, R12_usr
    44f0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    44f4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    44f8:	6fe30301 	svcvs	0x00e30301
    44fc:	00050520 	andeq	r0, r5, r0, lsr #10
    4500:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4504:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4508:	00140104 	andseq	r0, r4, r4, lsl #2
    450c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4510:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4514:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4518:	06010402 	streq	r0, [r1], -r2, lsl #8
    451c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4520:	04020009 	streq	r0, [r2], #-9
    4524:	10980301 	addsne	r0, r8, r1, lsl #6
    4528:	04020001 	streq	r0, [r2], #-1
    452c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4530:	001f0502 	andseq	r0, pc, r2, lsl #10
    4534:	03010402 	movweq	r0, #5122	; 0x1402
    4538:	05017096 	streq	r7, [r1, #-150]	; 0xffffff6a
    453c:	04020004 	streq	r0, [r2], #-4
    4540:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4544:	00140104 	andseq	r0, r4, r4, lsl #2
    4548:	06010402 	streq	r0, [r1], -r2, lsl #8
    454c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4550:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4554:	06010402 	streq	r0, [r1], -r2, lsl #8
    4558:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    455c:	04020009 	streq	r0, [r2], #-9
    4560:	0fe50301 	svceq	0x00e50301
    4564:	04020001 	streq	r0, [r2], #-1
    4568:	002e0602 	eoreq	r0, lr, r2, lsl #12
    456c:	16020402 	strne	r0, [r2], -r2, lsl #8
    4570:	02001c05 	andeq	r1, r0, #1280	; 0x500
    4574:	01060204 	tsteq	r6, r4, lsl #4
    4578:	02040200 	andeq	r0, r4, #0, 4
    457c:	00090520 	andeq	r0, r9, r0, lsr #10
    4580:	06020402 	streq	r0, [r2], -r2, lsl #8
    4584:	00070527 	andeq	r0, r7, r7, lsr #10
    4588:	3f020402 	svccc	0x00020402
    458c:	02040200 	andeq	r0, r4, #0, 4
    4590:	05052006 	streq	r2, [r5, #-6]
    4594:	20061906 	andcs	r1, r6, r6, lsl #18
    4598:	06262f06 	strteq	r2, [r6], -r6, lsl #30
    459c:	022f0620 	eoreq	r0, pc, #32, 12	; 0x2000000
    45a0:	01010003 	tsteq	r1, r3
    45a4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    45a8:	00000002 	andeq	r0, r0, r2
    45ac:	18a00300 	stmiane	r0!, {r8, r9}
    45b0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    45b4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    45b8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    45bc:	05240603 	streq	r0, [r4, #-1539]!	; 0xfffff9fd
    45c0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    45c4:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
    45c8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    45cc:	05052006 	streq	r2, [r5, #-6]
    45d0:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    45d4:	31060105 	tstcc	r6, r5, lsl #2
    45d8:	03060505 	movweq	r0, #25861	; 0x6505
    45dc:	2c052072 	stccs	0, cr2, [r5], {114}	; 0x72
    45e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    45e4:	01023c20 	tsteq	r2, r0, lsr #24
    45e8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    45ec:	02050001 	andeq	r0, r5, #1
    45f0:	00000000 	andeq	r0, r0, r0
    45f4:	0117e203 	tsteq	r7, r3, lsl #4
    45f8:	03050106 	movweq	r0, #20742	; 0x5106
    45fc:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    4600:	03050106 	movweq	r0, #20742	; 0x5106
    4604:	0c052306 	stceq	3, cr2, [r5], {6}
    4608:	16050106 	strne	r0, [r5], -r6, lsl #2
    460c:	20060520 	andcs	r0, r6, r0, lsr #10
    4610:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    4614:	01061805 	tsteq	r6, r5, lsl #16
    4618:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    461c:	31060104 	tstcc	r6, r4, lsl #2
    4620:	01040200 	mrseq	r0, R12_usr
    4624:	04020001 	streq	r0, [r2], #-1
    4628:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    462c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4630:	001f0502 	andseq	r0, pc, r2, lsl #10
    4634:	03010402 	movweq	r0, #5122	; 0x1402
    4638:	05206bf0 	streq	r6, [r0, #-3056]!	; 0xfffff410
    463c:	04020005 	streq	r0, [r2], #-5
    4640:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4644:	01040200 	mrseq	r0, R12_usr
    4648:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    464c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4650:	06010402 	streq	r0, [r1], -r2, lsl #8
    4654:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4658:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    465c:	00050501 	andeq	r0, r5, r1, lsl #10
    4660:	03010402 	movweq	r0, #5122	; 0x1402
    4664:	0001148b 	andeq	r1, r1, fp, lsl #9
    4668:	06010402 	streq	r0, [r1], -r2, lsl #8
    466c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4670:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4674:	6ca30301 	stcvs	3, cr0, [r3], #4
    4678:	00040501 	andeq	r0, r4, r1, lsl #10
    467c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4680:	01040200 	mrseq	r0, R12_usr
    4684:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4688:	00200601 	eoreq	r0, r0, r1, lsl #12
    468c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4690:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4694:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4698:	00050501 	andeq	r0, r5, r1, lsl #10
    469c:	03010402 	movweq	r0, #5122	; 0x1402
    46a0:	000113d8 	ldrdeq	r1, [r1], -r8
    46a4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    46a8:	01040200 	mrseq	r0, R12_usr
    46ac:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    46b0:	00130104 	andseq	r0, r3, r4, lsl #2
    46b4:	01010402 	tsteq	r1, r2, lsl #8
    46b8:	01040200 	mrseq	r0, R12_usr
    46bc:	04020001 	streq	r0, [r2], #-1
    46c0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    46c4:	02001f05 	andeq	r1, r0, #5, 30
    46c8:	ef030104 	svc	0x00030104
    46cc:	0505206b 	streq	r2, [r5, #-107]	; 0xffffff95
    46d0:	01040200 	mrseq	r0, R12_usr
    46d4:	00040514 	andeq	r0, r4, r4, lsl r5
    46d8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    46dc:	01040200 	mrseq	r0, R12_usr
    46e0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    46e4:	2f060104 	svccs	0x00060104
    46e8:	01040200 	mrseq	r0, R12_usr
    46ec:	01040106 	tsteq	r4, r6, lsl #2
    46f0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    46f4:	8c030104 	stfhis	f0, [r3], {4}
    46f8:	02000114 	andeq	r0, r0, #20, 2
    46fc:	2e060104 	adfcss	f0, f6, f4
    4700:	1f050204 	svcne	0x00050204
    4704:	01040200 	mrseq	r0, R12_usr
    4708:	016ca203 	cmneq	ip, r3, lsl #4
    470c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4710:	00140104 	andseq	r0, r4, r4, lsl #2
    4714:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4718:	01040200 	mrseq	r0, R12_usr
    471c:	02002006 	andeq	r2, r0, #6
    4720:	2f060104 	svccs	0x00060104
    4724:	01040200 	mrseq	r0, R12_usr
    4728:	01040106 	tsteq	r4, r6, lsl #2
    472c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4730:	d9030104 	stmdble	r3, {r2, r8}
    4734:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    4738:	002e0104 	eoreq	r0, lr, r4, lsl #2
    473c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4740:	04020001 	streq	r0, [r2], #-1
    4744:	02001601 	andeq	r1, r0, #1048576	; 0x100000
    4748:	00010104 	andeq	r0, r1, r4, lsl #2
    474c:	01010402 	tsteq	r1, r2, lsl #8
    4750:	01040200 	mrseq	r0, R12_usr
    4754:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4758:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    475c:	6beb0301 	blvs	ffac5368 <_estack+0xdfac4128>
    4760:	00050520 	andeq	r0, r5, r0, lsr #10
    4764:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4768:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    476c:	00140104 	andseq	r0, r4, r4, lsl #2
    4770:	06010402 	streq	r0, [r1], -r2, lsl #8
    4774:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4778:	002f0601 	eoreq	r0, pc, r1, lsl #12
    477c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4780:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4784:	04020005 	streq	r0, [r2], #-5
    4788:	14900301 	ldrne	r0, [r0], #769	; 0x301
    478c:	04020001 	streq	r0, [r2], #-1
    4790:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4794:	001f0502 	andseq	r0, pc, r2, lsl #10
    4798:	03010402 	movweq	r0, #5122	; 0x1402
    479c:	05016c9e 	streq	r6, [r1, #-3230]	; 0xfffff362
    47a0:	04020004 	streq	r0, [r2], #-4
    47a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    47a8:	00140104 	andseq	r0, r4, r4, lsl #2
    47ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    47b0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    47b4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    47b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    47bc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    47c0:	04020005 	streq	r0, [r2], #-5
    47c4:	13dd0301 	bicsne	r0, sp, #67108864	; 0x4000000
    47c8:	04020001 	streq	r0, [r2], #-1
    47cc:	002e0602 	eoreq	r0, lr, r2, lsl #12
    47d0:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    47d4:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    47d8:	01060204 	tsteq	r6, r4, lsl #4
    47dc:	02040200 	andeq	r0, r4, #0, 4
    47e0:	00050520 	andeq	r0, r5, r0, lsr #10
    47e4:	06020402 	streq	r0, [r2], -r2, lsl #8
    47e8:	000e0531 	andeq	r0, lr, r1, lsr r5
    47ec:	06020402 	streq	r0, [r2], -r2, lsl #8
    47f0:	00080501 	andeq	r0, r8, r1, lsl #10
    47f4:	20020402 	andcs	r0, r2, r2, lsl #8
    47f8:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    47fc:	30060204 	andcc	r0, r6, r4, lsl #4
    4800:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4804:	05180204 	ldreq	r0, [r8, #-516]	; 0xfffffdfc
    4808:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    480c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4810:	04020003 	streq	r0, [r2], #-3
    4814:	05320602 	ldreq	r0, [r2, #-1538]!	; 0xfffff9fe
    4818:	0402000c 	streq	r0, [r2], #-12
    481c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4820:	04020006 	streq	r0, [r2], #-6
    4824:	05052002 	streq	r2, [r5, #-2]
    4828:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    482c:	31060105 	tstcc	r6, r5, lsl #2
    4830:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    4834:	03060104 	movweq	r0, #24836	; 0x6104
    4838:	02002061 	andeq	r2, r0, #97	; 0x61
    483c:	00010104 	andeq	r0, r1, r4, lsl #2
    4840:	01010402 	tsteq	r1, r2, lsl #8
    4844:	01040200 	mrseq	r0, R12_usr
    4848:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    484c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4850:	6be30301 	blvs	ff8c545c <_estack+0xdf8c421c>
    4854:	00050520 	andeq	r0, r5, r0, lsr #10
    4858:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    485c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4860:	00140104 	andseq	r0, r4, r4, lsl #2
    4864:	06010402 	streq	r0, [r1], -r2, lsl #8
    4868:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    486c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4870:	06010402 	streq	r0, [r1], -r2, lsl #8
    4874:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4878:	04020007 	streq	r0, [r2], #-7
    487c:	14980301 	ldrne	r0, [r8], #769	; 0x301
    4880:	04020001 	streq	r0, [r2], #-1
    4884:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4888:	001f0502 	andseq	r0, pc, r2, lsl #10
    488c:	03010402 	movweq	r0, #5122	; 0x1402
    4890:	05016c96 	streq	r6, [r1, #-3222]	; 0xfffff36a
    4894:	04020004 	streq	r0, [r2], #-4
    4898:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    489c:	00140104 	andseq	r0, r4, r4, lsl #2
    48a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    48a4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    48a8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    48ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    48b0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    48b4:	04020007 	streq	r0, [r2], #-7
    48b8:	13e50301 	mvnne	r0, #67108864	; 0x4000000
    48bc:	04020001 	streq	r0, [r2], #-1
    48c0:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    48c4:	01110306 	tsteq	r1, r6, lsl #6
    48c8:	01023c06 	tsteq	r2, r6, lsl #24
    48cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    48d0:	02050001 	andeq	r0, r5, #1
    48d4:	00000000 	andeq	r0, r0, r0
    48d8:	0115c103 	tsteq	r5, r3, lsl #2
    48dc:	03050106 	movweq	r0, #20742	; 0x5106
    48e0:	02003006 	andeq	r3, r0, #6
    48e4:	4a060104 	bmi	184cfc <_Min_Heap_Size+0x1844fc>
    48e8:	02040200 	andeq	r0, r4, #0, 4
    48ec:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    48f0:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    48f4:	004a0404 	subeq	r0, sl, r4, lsl #8
    48f8:	4a050402 	bmi	145908 <_Min_Heap_Size+0x145108>
    48fc:	06040200 	streq	r0, [r4], -r0, lsl #4
    4900:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4904:	31063c06 	tstcc	r6, r6, lsl #24
    4908:	04020001 	streq	r0, [r2], #-1
    490c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4910:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4914:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4918:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    491c:	01060204 	tsteq	r6, r4, lsl #4
    4920:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4924:	3f060104 	svccc	0x00060104
    4928:	01040200 	mrseq	r0, R12_usr
    492c:	04020001 	streq	r0, [r2], #-1
    4930:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4934:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4938:	001f0502 	andseq	r0, pc, r2, lsl #10
    493c:	03010402 	movweq	r0, #5122	; 0x1402
    4940:	05206e90 	streq	r6, [r0, #-3728]!	; 0xfffff170
    4944:	04020005 	streq	r0, [r2], #-5
    4948:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    494c:	01040200 	mrseq	r0, R12_usr
    4950:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4954:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4958:	06010402 	streq	r0, [r1], -r2, lsl #8
    495c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4960:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4964:	00030501 	andeq	r0, r3, r1, lsl #10
    4968:	03010402 	movweq	r0, #5122	; 0x1402
    496c:	000111eb 	andeq	r1, r1, fp, ror #3
    4970:	06010402 	streq	r0, [r1], -r2, lsl #8
    4974:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4978:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    497c:	6ec30301 	cdpvs	3, 12, cr0, cr3, cr1, {0}
    4980:	00040501 	andeq	r0, r4, r1, lsl #10
    4984:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4988:	01040200 	mrseq	r0, R12_usr
    498c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4990:	00200601 	eoreq	r0, r0, r1, lsl #12
    4994:	06010402 	streq	r0, [r1], -r2, lsl #8
    4998:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    499c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    49a0:	00030501 	andeq	r0, r3, r1, lsl #10
    49a4:	03010402 	movweq	r0, #5122	; 0x1402
    49a8:	000111b8 			; <UNDEFINED> instruction: 0x000111b8
    49ac:	06020402 	streq	r0, [r2], -r2, lsl #8
    49b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    49b4:	11051402 	tstne	r5, r2, lsl #8
    49b8:	02040200 	andeq	r0, r4, #0, 4
    49bc:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    49c0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    49c4:	04020003 	streq	r0, [r2], #-3
    49c8:	00310602 	eorseq	r0, r1, r2, lsl #12
    49cc:	01020402 	tsteq	r2, r2, lsl #8
    49d0:	02040200 	andeq	r0, r4, #0, 4
    49d4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    49d8:	01051402 	tsteq	r5, r2, lsl #8
    49dc:	03051306 	movweq	r1, #21254	; 0x5306
    49e0:	02207303 	eoreq	r7, r0, #201326592	; 0xc000000
    49e4:	01010006 	tsteq	r1, r6
    49e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    49ec:	00000002 	andeq	r0, r0, r2
    49f0:	15dc0300 	ldrbne	r0, [ip, #768]	; 0x300
    49f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    49f8:	00300603 	eorseq	r0, r0, r3, lsl #12
    49fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a00:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4a04:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4a08:	004a0304 	subeq	r0, sl, r4, lsl #6
    4a0c:	4a040402 	bmi	105a1c <_Min_Heap_Size+0x10521c>
    4a10:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    4a14:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4a18:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4a1c:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    4a20:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    4a24:	004a0204 	subeq	r0, sl, r4, lsl #4
    4a28:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4a2c:	02040200 	andeq	r0, r4, #0, 4
    4a30:	00110514 	andseq	r0, r1, r4, lsl r5
    4a34:	06020402 	streq	r0, [r2], -r2, lsl #8
    4a38:	00030501 	andeq	r0, r3, r1, lsl #10
    4a3c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a40:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    4a44:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4a48:	00010104 	andeq	r0, r1, r4, lsl #2
    4a4c:	01010402 	tsteq	r1, r2, lsl #8
    4a50:	1f050204 	svcne	0x00050204
    4a54:	01040200 	mrseq	r0, R12_usr
    4a58:	206df503 	rsbcs	pc, sp, r3, lsl #10
    4a5c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4a60:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4a64:	04020004 	streq	r0, [r2], #-4
    4a68:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4a6c:	2e060104 	adfcss	f0, f6, f4
    4a70:	01040200 	mrseq	r0, R12_usr
    4a74:	02002f06 	andeq	r2, r0, #6, 30
    4a78:	01060104 	tsteq	r6, r4, lsl #2
    4a7c:	03050104 	movweq	r0, #20740	; 0x5104
    4a80:	01040200 	mrseq	r0, R12_usr
    4a84:	01128603 	tsteq	r2, r3, lsl #12
    4a88:	01040200 	mrseq	r0, R12_usr
    4a8c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4a90:	02001f05 	andeq	r1, r0, #5, 30
    4a94:	a8030104 	stmdage	r3, {r2, r8}
    4a98:	0405016e 	streq	r0, [r5], #-366	; 0xfffffe92
    4a9c:	01040200 	mrseq	r0, R12_usr
    4aa0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4aa4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4aa8:	20060104 	andcs	r0, r6, r4, lsl #2
    4aac:	01040200 	mrseq	r0, R12_usr
    4ab0:	02002f06 	andeq	r2, r0, #6, 30
    4ab4:	01060104 	tsteq	r6, r4, lsl #2
    4ab8:	03050104 	movweq	r0, #20740	; 0x5104
    4abc:	01040200 	mrseq	r0, R12_usr
    4ac0:	0111d303 	tsteq	r1, r3, lsl #6
    4ac4:	02040200 	andeq	r0, r4, #0, 4
    4ac8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4acc:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4ad0:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4ad4:	00010602 	andeq	r0, r1, r2, lsl #12
    4ad8:	20020402 	andcs	r0, r2, r2, lsl #8
    4adc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4ae0:	2f060204 	svccs	0x00060204
    4ae4:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4ae8:	01060204 	tsteq	r6, r4, lsl #4
    4aec:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4af0:	31060204 	tstcc	r6, r4, lsl #4
    4af4:	02040200 	andeq	r0, r4, #0, 4
    4af8:	04020001 	streq	r0, [r2], #-1
    4afc:	02002e02 	andeq	r2, r0, #2, 28
    4b00:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4b04:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    4b08:	20720303 	rsbscs	r0, r2, r3, lsl #6
    4b0c:	01000702 	tsteq	r0, r2, lsl #14
    4b10:	00010501 	andeq	r0, r1, r1, lsl #10
    4b14:	00000205 	andeq	r0, r0, r5, lsl #4
    4b18:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    4b1c:	01060115 	tsteq	r6, r5, lsl r1
    4b20:	30060305 	andcc	r0, r6, r5, lsl #6
    4b24:	01040200 	mrseq	r0, R12_usr
    4b28:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4b2c:	004a0204 	subeq	r0, sl, r4, lsl #4
    4b30:	4a030402 	bmi	c5b40 <_Min_Heap_Size+0xc5340>
    4b34:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4b38:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4b3c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    4b40:	004a0604 	subeq	r0, sl, r4, lsl #12
    4b44:	3c060402 	cfstrscc	mvf0, [r6], {2}
    4b48:	00013106 	andeq	r3, r1, r6, lsl #2
    4b4c:	4a020402 	bmi	85b5c <_Min_Heap_Size+0x8535c>
    4b50:	02040200 	andeq	r0, r4, #0, 4
    4b54:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4b58:	11051402 	tstne	r5, r2, lsl #8
    4b5c:	02040200 	andeq	r0, r4, #0, 4
    4b60:	03050106 	movweq	r0, #20742	; 0x5106
    4b64:	01040200 	mrseq	r0, R12_usr
    4b68:	02003f06 	andeq	r3, r0, #6, 30
    4b6c:	00010104 	andeq	r0, r1, r4, lsl #2
    4b70:	01010402 	tsteq	r1, r2, lsl #8
    4b74:	01040200 	mrseq	r0, R12_usr
    4b78:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4b7c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4b80:	6dd90301 	ldclvs	3, cr0, [r9, #4]
    4b84:	00050520 	andeq	r0, r5, r0, lsr #10
    4b88:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4b8c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4b90:	00140104 	andseq	r0, r4, r4, lsl #2
    4b94:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b98:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b9c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4ba0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ba4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4ba8:	04020003 	streq	r0, [r2], #-3
    4bac:	12a20301 	adcne	r0, r2, #67108864	; 0x4000000
    4bb0:	04020001 	streq	r0, [r2], #-1
    4bb4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4bb8:	001f0502 	andseq	r0, pc, r2, lsl #10
    4bbc:	03010402 	movweq	r0, #5122	; 0x1402
    4bc0:	05016e8c 	streq	r6, [r1, #-3724]	; 0xfffff174
    4bc4:	04020004 	streq	r0, [r2], #-4
    4bc8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4bcc:	00140104 	andseq	r0, r4, r4, lsl #2
    4bd0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bd4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4bd8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4bdc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4be0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4be4:	04020003 	streq	r0, [r2], #-3
    4be8:	11ef0301 	mvnne	r0, r1, lsl #6
    4bec:	04020001 	streq	r0, [r2], #-1
    4bf0:	002e0602 	eoreq	r0, lr, r2, lsl #12
    4bf4:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4bf8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4bfc:	01060204 	tsteq	r6, r4, lsl #4
    4c00:	02040200 	andeq	r0, r4, #0, 4
    4c04:	00030520 	andeq	r0, r3, r0, lsr #10
    4c08:	06020402 	streq	r0, [r2], -r2, lsl #8
    4c0c:	0016052f 	andseq	r0, r6, pc, lsr #10
    4c10:	06020402 	streq	r0, [r2], -r2, lsl #8
    4c14:	00030501 	andeq	r0, r3, r1, lsl #10
    4c18:	06020402 	streq	r0, [r2], -r2, lsl #8
    4c1c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4c20:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    4c24:	002e0204 	eoreq	r0, lr, r4, lsl #4
    4c28:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4c2c:	13060105 	movwne	r0, #24837	; 0x6105
    4c30:	72030305 	andvc	r0, r3, #335544320	; 0x14000000
    4c34:	00070220 	andeq	r0, r7, r0, lsr #4
    4c38:	01050101 	tsteq	r5, r1, lsl #2
    4c3c:	00020500 	andeq	r0, r2, r0, lsl #10
    4c40:	03000000 	movweq	r0, #0
    4c44:	05011694 	streq	r1, [r1, #-1684]	; 0xfffff96c
    4c48:	01151303 	tsteq	r5, r3, lsl #6
    4c4c:	02040200 	andeq	r0, r4, #0, 4
    4c50:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4c54:	02003c02 	andeq	r3, r0, #512	; 0x200
    4c58:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4c5c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4c60:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4c64:	04020003 	streq	r0, [r2], #-3
    4c68:	053f0602 	ldreq	r0, [pc, #-1538]!	; 466e <_Min_Heap_Size+0x3e6e>
    4c6c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4c70:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4c74:	0402000a 	streq	r0, [r2], #-10
    4c78:	03052002 	movweq	r2, #20482	; 0x5002
    4c7c:	02040200 	andeq	r0, r4, #0, 4
    4c80:	0a052306 	beq	14d8a0 <_Min_Heap_Size+0x14d0a0>
    4c84:	02040200 	andeq	r0, r4, #0, 4
    4c88:	03050106 	movweq	r0, #20742	; 0x5106
    4c8c:	02040200 	andeq	r0, r4, #0, 4
    4c90:	0a053106 	beq	1510b0 <_Min_Heap_Size+0x1508b0>
    4c94:	02040200 	andeq	r0, r4, #0, 4
    4c98:	03050106 	movweq	r0, #20742	; 0x5106
    4c9c:	02040200 	andeq	r0, r4, #0, 4
    4ca0:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4ca4:	05220204 	streq	r0, [r2, #-516]!	; 0xfffffdfc
    4ca8:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4cac:	00010602 	andeq	r0, r1, r2, lsl #12
    4cb0:	20020402 	andcs	r0, r2, r2, lsl #8
    4cb4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4cb8:	31060204 	tstcc	r6, r4, lsl #4
    4cbc:	02040200 	andeq	r0, r4, #0, 4
    4cc0:	04020001 	streq	r0, [r2], #-1
    4cc4:	02003c02 	andeq	r3, r0, #512	; 0x200
    4cc8:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4ccc:	0402000a 	streq	r0, [r2], #-10
    4cd0:	00010602 	andeq	r0, r1, r2, lsl #12
    4cd4:	20020402 	andcs	r0, r2, r2, lsl #8
    4cd8:	6b030305 	blvs	c58f4 <_Min_Heap_Size+0xc50f4>
    4cdc:	03010520 	movweq	r0, #5408	; 0x1520
    4ce0:	01022016 	tsteq	r2, r6, lsl r0
    4ce4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4ce8:	02050001 	andeq	r0, r5, #1
    4cec:	00000000 	andeq	r0, r0, r0
    4cf0:	0116b703 	tsteq	r6, r3, lsl #14
    4cf4:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    4cf8:	04020001 	streq	r0, [r2], #-1
    4cfc:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4d00:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4d04:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4d08:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4d0c:	01060204 	tsteq	r6, r4, lsl #4
    4d10:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4d14:	3f060204 	svccc	0x00060204
    4d18:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4d1c:	01060204 	tsteq	r6, r4, lsl #4
    4d20:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4d24:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4d28:	04020003 	streq	r0, [r2], #-3
    4d2c:	05230602 	streq	r0, [r3, #-1538]!	; 0xfffff9fe
    4d30:	0402000a 	streq	r0, [r2], #-10
    4d34:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4d38:	04020003 	streq	r0, [r2], #-3
    4d3c:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    4d40:	0402000a 	streq	r0, [r2], #-10
    4d44:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4d48:	04020003 	streq	r0, [r2], #-3
    4d4c:	00310602 	eorseq	r0, r1, r2, lsl #12
    4d50:	22020402 	andcs	r0, r2, #33554432	; 0x2000000
    4d54:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4d58:	01060204 	tsteq	r6, r4, lsl #4
    4d5c:	02040200 	andeq	r0, r4, #0, 4
    4d60:	00030520 	andeq	r0, r3, r0, lsr #10
    4d64:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d68:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4d6c:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    4d70:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4d74:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4d78:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4d7c:	01060204 	tsteq	r6, r4, lsl #4
    4d80:	02040200 	andeq	r0, r4, #0, 4
    4d84:	03030520 	movweq	r0, #13600	; 0x3520
    4d88:	0105206b 	tsteq	r5, fp, rrx
    4d8c:	02201603 	eoreq	r1, r0, #3145728	; 0x300000
    4d90:	01010001 	tsteq	r1, r1
    4d94:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4d98:	00000002 	andeq	r0, r0, r2
    4d9c:	16f00300 	ldrbtne	r0, [r0], r0, lsl #6
    4da0:	13030501 	movwne	r0, #13569	; 0x3501
    4da4:	06100513 			; <UNDEFINED> instruction: 0x06100513
    4da8:	06030501 	streq	r0, [r3], -r1, lsl #10
    4dac:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    4db0:	06030501 	streq	r0, [r3], -r1, lsl #10
    4db4:	06010530 			; <UNDEFINED> instruction: 0x06010530
    4db8:	01022013 	tsteq	r2, r3, lsl r0
    4dbc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4dc0:	02050001 	andeq	r0, r5, #1
    4dc4:	00000000 	andeq	r0, r0, r0
    4dc8:	0116ff03 	tsteq	r6, r3, lsl #30	; <UNPREDICTABLE>
    4dcc:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    4dd0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    4dd4:	01022101 	tsteq	r2, r1, lsl #2
    4dd8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4ddc:	02050001 	andeq	r0, r5, #1
    4de0:	00000000 	andeq	r0, r0, r0
    4de4:	0119a403 	tsteq	r9, r3, lsl #8
    4de8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    4dec:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4df0:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    4df4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4df8:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    4dfc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4e00:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    4e04:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    4e08:	052f0603 	streq	r0, [pc, #-1539]!	; 480d <_Min_Heap_Size+0x400d>
    4e0c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    4e10:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    4e14:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    4e18:	05052006 	streq	r2, [r5, #-6]
    4e1c:	20062306 	andcs	r2, r6, r6, lsl #6
    4e20:	4e060305 	cdpmi	3, 0, cr0, cr6, cr5, {0}
    4e24:	01055a5b 	tsteq	r5, fp, asr sl
    4e28:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    4e2c:	01010001 	tsteq	r1, r1
    4e30:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4e34:	00000002 	andeq	r0, r0, r2
    4e38:	0ac30300 	beq	ff0c5a40 <_estack+0xdf0c4800>
    4e3c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4e40:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    4e44:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4e48:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    4e4c:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    4e50:	19050106 	stmdbne	r5, {r1, r2, r8}
    4e54:	01040200 	mrseq	r0, R12_usr
    4e58:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    4e5c:	0c030105 	stfeqs	f0, [r3], {5}
    4e60:	06050520 	streq	r0, [r5], -r0, lsr #10
    4e64:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    4e68:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    4e6c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    4e70:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    4e74:	20240c05 	eorcs	r0, r4, r5, lsl #24
    4e78:	76030e05 	strvc	r0, [r3], -r5, lsl #28
    4e7c:	01022020 	tsteq	r2, r0, lsr #32
    4e80:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4e84:	02050001 	andeq	r0, r5, #1
    4e88:	00000000 	andeq	r0, r0, r0
    4e8c:	010db103 	tsteq	sp, r3, lsl #2
    4e90:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    4e94:	01060c05 	tsteq	r6, r5, lsl #24
    4e98:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    4e9c:	05052a01 	streq	r2, [r5, #-2561]	; 0xfffff5ff
    4ea0:	08054206 	stmdaeq	r5, {r1, r2, r9, lr}
    4ea4:	19050106 	stmdbne	r5, {r1, r2, r8}
    4ea8:	01040200 	mrseq	r0, R12_usr
    4eac:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    4eb0:	21030105 	tstcs	r3, r5, lsl #2
    4eb4:	06050520 	streq	r0, [r5], -r0, lsr #10
    4eb8:	052e6303 	streq	r6, [lr, #-771]!	; 0xfffffcfd
    4ebc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    4ec0:	052f0605 	streq	r0, [pc, #-1541]!	; 48c3 <_Min_Heap_Size+0x40c3>
    4ec4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4ec8:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    4ecc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    4ed0:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    4ed4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4ed8:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    4edc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    4ee0:	1005200a 	andne	r2, r5, sl
    4ee4:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    4ee8:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    4eec:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4ef0:	73030609 	movwvc	r0, #13833	; 0x3609
    4ef4:	3c2e0120 	stfccs	f0, [lr], #-128	; 0xffffff80
    4ef8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4efc:	02002001 	andeq	r2, r0, #1
    4f00:	00130104 	andseq	r0, r3, r4, lsl #2
    4f04:	01010402 	tsteq	r1, r2, lsl #8
    4f08:	01040200 	mrseq	r0, R12_usr
    4f0c:	04020001 	streq	r0, [r2], #-1
    4f10:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4f14:	02001f05 	andeq	r1, r0, #5, 30
    4f18:	93030104 	movwls	r0, #12548	; 0x3104
    4f1c:	05052076 	streq	r2, [r5, #-118]	; 0xffffff8a
    4f20:	01040200 	mrseq	r0, R12_usr
    4f24:	00040514 	andeq	r0, r4, r4, lsl r5
    4f28:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4f2c:	01040200 	mrseq	r0, R12_usr
    4f30:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4f34:	2f060104 	svccs	0x00060104
    4f38:	01040200 	mrseq	r0, R12_usr
    4f3c:	01040106 	tsteq	r4, r6, lsl #2
    4f40:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4f44:	e8030104 	stmda	r3, {r2, r8}
    4f48:	02000109 	andeq	r0, r0, #1073741826	; 0x40000002
    4f4c:	2e060104 	adfcss	f0, f6, f4
    4f50:	1f050204 	svcne	0x00050204
    4f54:	01040200 	mrseq	r0, R12_usr
    4f58:	0176c603 	cmneq	r6, r3, lsl #12
    4f5c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4f60:	00140104 	andseq	r0, r4, r4, lsl #2
    4f64:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4f68:	01040200 	mrseq	r0, R12_usr
    4f6c:	02002006 	andeq	r2, r0, #6
    4f70:	2f060104 	svccs	0x00060104
    4f74:	01040200 	mrseq	r0, R12_usr
    4f78:	01040106 	tsteq	r4, r6, lsl #2
    4f7c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4f80:	b5030104 	strlt	r0, [r3, #-260]	; 0xfffffefc
    4f84:	02000109 	andeq	r0, r0, #1073741826	; 0x40000002
    4f88:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4f8c:	0110030c 	tsteq	r0, ip, lsl #6
    4f90:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    4f94:	205f030e 	subscs	r0, pc, lr, lsl #6
    4f98:	00010220 	andeq	r0, r1, r0, lsr #4
    4f9c:	01050101 	tsteq	r5, r1, lsl #2
    4fa0:	00020500 	andeq	r0, r2, r0, lsl #10
    4fa4:	03000000 	movweq	r0, #0
    4fa8:	060119c7 	streq	r1, [r1], -r7, asr #19
    4fac:	06030501 	streq	r0, [r3], -r1, lsl #10
    4fb0:	1505144b 	strne	r1, [r5, #-1099]	; 0xfffffbb5
    4fb4:	03050106 	movweq	r0, #20742	; 0x5106
    4fb8:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    4fbc:	03050106 	movweq	r0, #20742	; 0x5106
    4fc0:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    4fc4:	03050106 	movweq	r0, #20742	; 0x5106
    4fc8:	12052f06 	andne	r2, r5, #6, 30
    4fcc:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4fd0:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    4fd4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4fd8:	05202023 	streq	r2, [r0, #-35]!	; 0xffffffdd
    4fdc:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    4fe0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4fe4:	03052027 	movweq	r2, #20519	; 0x5027
    4fe8:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    4fec:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    4ff0:	06030520 	streq	r0, [r3], -r0, lsr #10
    4ff4:	06080531 			; <UNDEFINED> instruction: 0x06080531
    4ff8:	20240501 	eorcs	r0, r4, r1, lsl #10
    4ffc:	23060305 	movwcs	r0, #25349	; 0x6305
    5000:	06330513 			; <UNDEFINED> instruction: 0x06330513
    5004:	20030501 	andcs	r0, r3, r1, lsl #10
    5008:	013f062e 	teqeq	pc, lr, lsr #12
    500c:	202e3c20 	eorcs	r3, lr, r0, lsr #24
    5010:	06120514 			; <UNDEFINED> instruction: 0x06120514
    5014:	20060501 	andcs	r0, r6, r1, lsl #10
    5018:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    501c:	23060104 	movwcs	r0, #24836	; 0x6104
    5020:	01040200 	mrseq	r0, R12_usr
    5024:	04020001 	streq	r0, [r2], #-1
    5028:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    502c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    5030:	001f0502 	andseq	r0, pc, r2, lsl #10
    5034:	03010402 	movweq	r0, #5122	; 0x1402
    5038:	052069f5 	streq	r6, [r0, #-2549]!	; 0xfffff60b
    503c:	04020005 	streq	r0, [r2], #-5
    5040:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    5044:	01040200 	mrseq	r0, R12_usr
    5048:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    504c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5050:	06010402 	streq	r0, [r1], -r2, lsl #8
    5054:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5058:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    505c:	00050501 	andeq	r0, r5, r1, lsl #10
    5060:	03010402 	movweq	r0, #5122	; 0x1402
    5064:	00011686 	andeq	r1, r1, r6, lsl #13
    5068:	06010402 	streq	r0, [r1], -r2, lsl #8
    506c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5070:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5074:	6aa80301 	bvs	fea05c80 <_estack+0xdea04a40>
    5078:	00040501 	andeq	r0, r4, r1, lsl #10
    507c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5080:	01040200 	mrseq	r0, R12_usr
    5084:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5088:	00200601 	eoreq	r0, r0, r1, lsl #12
    508c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5090:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5094:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5098:	00050501 	andeq	r0, r5, r1, lsl #10
    509c:	03010402 	movweq	r0, #5122	; 0x1402
    50a0:	000115d3 	ldrdeq	r1, [r1], -r3
    50a4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    50a8:	01040200 	mrseq	r0, R12_usr
    50ac:	03050106 	movweq	r0, #20742	; 0x5106
    50b0:	01040200 	mrseq	r0, R12_usr
    50b4:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    50b8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    50bc:	00010104 	andeq	r0, r1, r4, lsl #2
    50c0:	01010402 	tsteq	r1, r2, lsl #8
    50c4:	1f050204 	svcne	0x00050204
    50c8:	01040200 	mrseq	r0, R12_usr
    50cc:	2069f103 	rsbcs	pc, r9, r3, lsl #2
    50d0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    50d4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    50d8:	04020004 	streq	r0, [r2], #-4
    50dc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    50e0:	2e060104 	adfcss	f0, f6, f4
    50e4:	01040200 	mrseq	r0, R12_usr
    50e8:	02002f06 	andeq	r2, r0, #6, 30
    50ec:	01060104 	tsteq	r6, r4, lsl #2
    50f0:	03050104 	movweq	r0, #20740	; 0x5104
    50f4:	01040200 	mrseq	r0, R12_usr
    50f8:	01168a03 	tsteq	r6, r3, lsl #20
    50fc:	01040200 	mrseq	r0, R12_usr
    5100:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    5104:	02001f05 	andeq	r1, r0, #5, 30
    5108:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
    510c:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    5110:	01040200 	mrseq	r0, R12_usr
    5114:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5118:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    511c:	20060104 	andcs	r0, r6, r4, lsl #2
    5120:	01040200 	mrseq	r0, R12_usr
    5124:	02002f06 	andeq	r2, r0, #6, 30
    5128:	01060104 	tsteq	r6, r4, lsl #2
    512c:	03050104 	movweq	r0, #20740	; 0x5104
    5130:	01040200 	mrseq	r0, R12_usr
    5134:	0115d703 	tsteq	r5, r3, lsl #14
    5138:	01040200 	mrseq	r0, R12_usr
    513c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5140:	00010601 	andeq	r0, r1, r1, lsl #12
    5144:	16010402 	strne	r0, [r1], -r2, lsl #8
    5148:	01040200 	mrseq	r0, R12_usr
    514c:	04020001 	streq	r0, [r2], #-1
    5150:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    5154:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    5158:	001f0502 	andseq	r0, pc, r2, lsl #10
    515c:	03010402 	movweq	r0, #5122	; 0x1402
    5160:	052069ed 	streq	r6, [r0, #-2541]!	; 0xfffff613
    5164:	04020005 	streq	r0, [r2], #-5
    5168:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    516c:	01040200 	mrseq	r0, R12_usr
    5170:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5174:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5178:	06010402 	streq	r0, [r1], -r2, lsl #8
    517c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5180:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5184:	00030501 	andeq	r0, r3, r1, lsl #10
    5188:	03010402 	movweq	r0, #5122	; 0x1402
    518c:	0001168e 	andeq	r1, r1, lr, lsl #13
    5190:	06010402 	streq	r0, [r1], -r2, lsl #8
    5194:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5198:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    519c:	6aa00301 	bvs	fe805da8 <_estack+0xde804b68>
    51a0:	00040501 	andeq	r0, r4, r1, lsl #10
    51a4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    51a8:	01040200 	mrseq	r0, R12_usr
    51ac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    51b0:	00200601 	eoreq	r0, r0, r1, lsl #12
    51b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    51b8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    51bc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    51c0:	00030501 	andeq	r0, r3, r1, lsl #10
    51c4:	03010402 	movweq	r0, #5122	; 0x1402
    51c8:	000115db 	ldrdeq	r1, [r1], -fp
    51cc:	06020402 	streq	r0, [r2], -r2, lsl #8
    51d0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    51d4:	01051402 	tsteq	r5, r2, lsl #8
    51d8:	02040200 	andeq	r0, r4, #0, 4
    51dc:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    51e0:	023c0204 	eorseq	r0, ip, #4, 4	; 0x40000000
    51e4:	01010006 	tsteq	r1, r6
    51e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    51ec:	00000002 	andeq	r0, r0, r2
    51f0:	0ba10300 	bleq	fe845df8 <_estack+0xde844bb8>
    51f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    51f8:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    51fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5200:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    5204:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    5208:	19050106 	stmdbne	r5, {r1, r2, r8}
    520c:	01040200 	mrseq	r0, R12_usr
    5210:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    5214:	0c030105 	stfeqs	f0, [r3], {5}
    5218:	06050520 	streq	r0, [r5], -r0, lsr #10
    521c:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    5220:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5224:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    5228:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    522c:	20240c05 	eorcs	r0, r4, r5, lsl #24
    5230:	76030e05 	strvc	r0, [r3], -r5, lsl #28
    5234:	01022020 	tsteq	r2, r0, lsr #32
    5238:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    523c:	02050001 	andeq	r0, r5, #1
    5240:	00000000 	andeq	r0, r0, r0
    5244:	010ded03 	tsteq	sp, r3, lsl #26
    5248:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    524c:	01060c05 	tsteq	r6, r5, lsl #24
    5250:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    5254:	05052a01 	streq	r2, [r5, #-2561]	; 0xfffff5ff
    5258:	08054206 	stmdaeq	r5, {r1, r2, r9, lr}
    525c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5260:	01040200 	mrseq	r0, R12_usr
    5264:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    5268:	21030105 	tstcs	r3, r5, lsl #2
    526c:	06050520 	streq	r0, [r5], -r0, lsr #10
    5270:	052e6303 	streq	r6, [lr, #-771]!	; 0xfffffcfd
    5274:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5278:	052f0605 	streq	r0, [pc, #-1541]!	; 4c7b <_Min_Heap_Size+0x447b>
    527c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    5280:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    5284:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5288:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    528c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5290:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    5294:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    5298:	1005200a 	andne	r2, r5, sl
    529c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    52a0:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    52a4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    52a8:	73030609 	movwvc	r0, #13833	; 0x3609
    52ac:	3c2e0120 	stfccs	f0, [lr], #-128	; 0xffffff80
    52b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    52b4:	02002001 	andeq	r2, r0, #1
    52b8:	00130104 	andseq	r0, r3, r4, lsl #2
    52bc:	01010402 	tsteq	r1, r2, lsl #8
    52c0:	01040200 	mrseq	r0, R12_usr
    52c4:	04020001 	streq	r0, [r2], #-1
    52c8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    52cc:	02001f05 	andeq	r1, r0, #5, 30
    52d0:	d7030104 	strle	r0, [r3, -r4, lsl #2]
    52d4:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    52d8:	01040200 	mrseq	r0, R12_usr
    52dc:	00040514 	andeq	r0, r4, r4, lsl r5
    52e0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    52e4:	01040200 	mrseq	r0, R12_usr
    52e8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    52ec:	2f060104 	svccs	0x00060104
    52f0:	01040200 	mrseq	r0, R12_usr
    52f4:	01040106 	tsteq	r4, r6, lsl #2
    52f8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    52fc:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
    5300:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    5304:	2e060104 	adfcss	f0, f6, f4
    5308:	1f050204 	svcne	0x00050204
    530c:	01040200 	mrseq	r0, R12_usr
    5310:	01768a03 	cmneq	r6, r3, lsl #20
    5314:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5318:	00140104 	andseq	r0, r4, r4, lsl #2
    531c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5320:	01040200 	mrseq	r0, R12_usr
    5324:	02002006 	andeq	r2, r0, #6
    5328:	2f060104 	svccs	0x00060104
    532c:	01040200 	mrseq	r0, R12_usr
    5330:	01040106 	tsteq	r4, r6, lsl #2
    5334:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5338:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    533c:	02000109 	andeq	r0, r0, #1073741826	; 0x40000002
    5340:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5344:	0110030c 	tsteq	r0, ip, lsl #6
    5348:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    534c:	205f030e 	subscs	r0, pc, lr, lsl #6
    5350:	00010220 	andeq	r0, r1, r0, lsr #4
    5354:	0ca70101 	stfeqs	f0, [r7], #4
    5358:	00030000 	andeq	r0, r3, r0
    535c:	00000241 	andeq	r0, r0, r1, asr #4
    5360:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    5364:	0101000d 	tsteq	r1, sp
    5368:	00000101 	andeq	r0, r0, r1, lsl #2
    536c:	00000100 	andeq	r0, r0, r0, lsl #2
    5370:	2f2e2e01 	svccs	0x002e2e01
    5374:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    5378:	2f737265 	svccs	0x00737265
    537c:	334d5453 	movtcc	r5, #54355	; 0xd453
    5380:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    5384:	41485f78 	hvcmi	34296	; 0x85f8
    5388:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    538c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    5390:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    5394:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    5398:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    539c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    53a0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    53a4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    53a8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    53ac:	5f6d7261 	svcpl	0x006d7261
    53b0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    53b4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    53b8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    53bc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    53c0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    53c4:	30312d69 	eorscc	r2, r1, r9, ror #26
    53c8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    53cc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    53d0:	615c3031 	cmpvs	ip, r1, lsr r0
    53d4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    53d8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    53dc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    53e0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    53e4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    53e8:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    53ec:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    53f0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    53f4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    53f8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    53fc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    5400:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    5404:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    5408:	5f6d7261 	svcpl	0x006d7261
    540c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    5410:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    5414:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    5418:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    541c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    5420:	30312d69 	eorscc	r2, r1, r9, ror #26
    5424:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    5428:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    542c:	615c3031 	cmpvs	ip, r1, lsr r0
    5430:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    5434:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    5438:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    543c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    5440:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5444:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    5448:	2f2e2e00 	svccs	0x002e2e00
    544c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    5450:	2f737265 	svccs	0x00737265
    5454:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    5458:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    545c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    5460:	2f54532f 	svccs	0x0054532f
    5464:	334d5453 	movtcc	r5, #54355	; 0xd453
    5468:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    546c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    5470:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5474:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    5478:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    547c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    5480:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    5484:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    5488:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    548c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 5494 <_Min_Heap_Size+0x4c94>
    5490:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    5494:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    5498:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    549c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    54a0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    54a4:	73000063 	movwvc	r0, #99	; 0x63
    54a8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    54ac:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    54b0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    54b4:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    54b8:	0100632e 	tsteq	r0, lr, lsr #6
    54bc:	645f0000 	ldrbvs	r0, [pc], #-0	; 54c4 <_Min_Heap_Size+0x4cc4>
    54c0:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    54c4:	745f746c 	ldrbvc	r7, [pc], #-1132	; 54cc <_Min_Heap_Size+0x4ccc>
    54c8:	73657079 	cmnvc	r5, #121	; 0x79
    54cc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    54d0:	735f0000 	cmpvc	pc, #0
    54d4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    54d8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    54dc:	73000003 	movwvc	r0, #3
    54e0:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    54e4:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    54e8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    54ec:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    54f0:	00040068 	andeq	r0, r4, r8, rrx
    54f4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    54f8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    54fc:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    5500:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    5504:	74730000 	ldrbtvc	r0, [r3], #-0
    5508:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    550c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    5510:	00040068 	andeq	r0, r4, r8, rrx
    5514:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5518:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    551c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5520:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 5528 <_Min_Heap_Size+0x4d28>
    5524:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    5528:	00000500 	andeq	r0, r0, r0, lsl #10
    552c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5530:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5534:	61685f78 	smcvs	34296	; 0x85f8
    5538:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    553c:	78655f63 	stmdavc	r5!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    5540:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    5544:	74730000 	ldrbtvc	r0, [r3], #-0
    5548:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    554c:	5f787834 	svcpl	0x00787834
    5550:	5f6c6168 	svcpl	0x006c6168
    5554:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    5558:	00050068 	andeq	r0, r5, r8, rrx
    555c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5560:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5564:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5568:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    556c:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    5570:	00050068 	andeq	r0, r5, r8, rrx
    5574:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5578:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    557c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5580:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    5584:	00000500 	andeq	r0, r0, r0, lsl #10
    5588:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    558c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5590:	61685f78 	smcvs	34296	; 0x85f8
    5594:	6f635f6c 	svcvs	0x00635f6c
    5598:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    559c:	00000600 	andeq	r0, r0, r0, lsl #12
    55a0:	00010500 	andeq	r0, r1, r0, lsl #10
    55a4:	00000205 	andeq	r0, r0, r5, lsl #4
    55a8:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
    55ac:	03050101 	movweq	r0, #20737	; 0x5101
    55b0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    55b4:	00020213 	andeq	r0, r2, r3, lsl r2
    55b8:	01050101 	tsteq	r5, r1, lsl #2
    55bc:	00020500 	andeq	r0, r2, r0, lsl #10
    55c0:	03000000 	movweq	r0, #0
    55c4:	050101db 	streq	r0, [r1, #-475]	; 0xfffffe25
    55c8:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    55cc:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    55d0:	03053801 	movweq	r3, #22529	; 0x5801
    55d4:	3c0a0306 	stccc	3, cr0, [sl], {6}
    55d8:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    55dc:	20050501 	andcs	r0, r5, r1, lsl #10
    55e0:	02003f06 	andeq	r3, r0, #6, 30
    55e4:	2e060104 	adfcss	f0, f6, f4
    55e8:	02040200 	andeq	r0, r4, #0, 4
    55ec:	053e063c 	ldreq	r0, [lr, #-1596]!	; 0xfffff9c4
    55f0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    55f4:	09054a07 	stmdbeq	r5, {r0, r1, r2, r9, fp, lr}
    55f8:	01040200 	mrseq	r0, R12_usr
    55fc:	003c052f 	eorseq	r0, ip, pc, lsr #10
    5600:	49010402 	stmdbmi	r1, {r1, sl}
    5604:	03060705 	movweq	r0, #26373	; 0x6705
    5608:	00012e0b 	andeq	r2, r1, fp, lsl #28
    560c:	4a020402 	bmi	8661c <_Min_Heap_Size+0x85e1c>
    5610:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5614:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5618:	02005805 	andeq	r5, r0, #327680	; 0x50000
    561c:	004a0704 	subeq	r0, sl, r4, lsl #14
    5620:	15070402 	strne	r0, [r7, #-1026]	; 0xfffffbfe
    5624:	02001c05 	andeq	r1, r0, #1280	; 0x500
    5628:	01060704 	tsteq	r6, r4, lsl #14
    562c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5630:	06200704 	strteq	r0, [r0], -r4, lsl #14
    5634:	06150531 			; <UNDEFINED> instruction: 0x06150531
    5638:	06090501 	streq	r0, [r9], -r1, lsl #10
    563c:	010e053f 	tsteq	lr, pc, lsr r5
    5640:	01060f05 	tsteq	r6, r5, lsl #30
    5644:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5648:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    564c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5650:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    5654:	30140520 	andscc	r0, r4, r0, lsr #10
    5658:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    565c:	61030104 	tstvs	r3, r4, lsl #2
    5660:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5664:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    5668:	03040200 	movweq	r0, #16896	; 0x4200
    566c:	5b440541 	blpl	1106b78 <_Min_Heap_Size+0x1106378>
    5670:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
    5674:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    5678:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    567c:	4e052e09 	cdpmi	14, 0, cr2, cr5, cr9, {0}
    5680:	01040200 	mrseq	r0, R12_usr
    5684:	0039053c 	eorseq	r0, r9, ip, lsr r5
    5688:	20010402 	andcs	r0, r1, r2, lsl #8
    568c:	03060305 	movweq	r0, #25349	; 0x6305
    5690:	19053c2a 	stmdbne	r5, {r1, r3, r5, sl, fp, ip, sp}
    5694:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5698:	3d3f0620 	ldccc	6, cr0, [pc, #-128]!	; 5620 <_Min_Heap_Size+0x4e20>
    569c:	0609053f 			; <UNDEFINED> instruction: 0x0609053f
    56a0:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    56a4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    56a8:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    56ac:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    56b0:	07054901 	streq	r4, [r5, -r1, lsl #18]
    56b4:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    56b8:	01061c05 	tsteq	r6, r5, lsl #24
    56bc:	06200905 	strteq	r0, [r0], -r5, lsl #18
    56c0:	15053f31 	strne	r3, [r5, #-3889]	; 0xfffff0cf
    56c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    56c8:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    56cc:	060f0501 	streq	r0, [pc], -r1, lsl #10
    56d0:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    56d4:	3e060b05 	vmlacc.f64	d0, d6, d5
    56d8:	01060f05 	tsteq	r6, r5, lsl #30
    56dc:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    56e0:	1405200d 	strne	r2, [r5], #-13
    56e4:	00070530 	andeq	r0, r7, r0, lsr r5
    56e8:	06010402 	streq	r0, [r1], -r2, lsl #8
    56ec:	2e7fb803 	cdpcs	8, 7, cr11, cr15, cr3, {0}
    56f0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    56f4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    56f8:	09055804 	stmdbeq	r5, {r2, fp, ip, lr}
    56fc:	05581403 	ldrbeq	r1, [r8, #-1027]	; 0xfffffbfd
    5700:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5704:	053f0609 	ldreq	r0, [pc, #-1545]!	; 5103 <_Min_Heap_Size+0x4903>
    5708:	0f05010e 	svceq	0x0005010e
    570c:	0e050106 	adfeqs	f0, f5, f6
    5710:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5714:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5718:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    571c:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5720:	05053014 	streq	r3, [r5, #-20]	; 0xffffffec
    5724:	01040200 	mrseq	r0, R12_usr
    5728:	002e0a03 	eoreq	r0, lr, r3, lsl #20
    572c:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    5730:	056a4405 	strbeq	r4, [sl, #-1029]!	; 0xfffffbfb
    5734:	07052e3c 	smladxeq	r5, ip, lr, r2
    5738:	0b053f06 	bleq	155358 <_Min_Heap_Size+0x154b58>
    573c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5740:	004e052e 	subeq	r0, lr, lr, lsr #10
    5744:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5748:	02003905 	andeq	r3, r0, #81920	; 0x14000
    574c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    5750:	05440609 	strbeq	r0, [r4, #-1545]	; 0xfffff9f7
    5754:	822e0303 	eorhi	r0, lr, #201326592	; 0xc000000
    5758:	01061905 	tsteq	r6, r5, lsl #18
    575c:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5760:	1a053f3f 	bne	155464 <_Min_Heap_Size+0x154c64>
    5764:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5768:	4d230620 	stcmi	6, cr0, [r3, #-128]!	; 0xffffff80
    576c:	01061305 	tsteq	r6, r5, lsl #6
    5770:	3f060705 	svccc	0x00060705
    5774:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5778:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    577c:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    5780:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    5784:	1b050106 	blne	145ba4 <_Min_Heap_Size+0x1453a4>
    5788:	200b052e 	andcs	r0, fp, lr, lsr #10
    578c:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    5790:	57030609 	strpl	r0, [r3, -r9, lsl #12]
    5794:	053f952e 	ldreq	r9, [pc, #-1326]!	; 526e <_Min_Heap_Size+0x4a6e>
    5798:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    579c:	053f0609 	ldreq	r0, [pc, #-1545]!	; 519b <_Min_Heap_Size+0x499b>
    57a0:	0f05010e 	svceq	0x0005010e
    57a4:	0e050106 	adfeqs	f0, f5, f6
    57a8:	060b052e 	streq	r0, [fp], -lr, lsr #10
    57ac:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    57b0:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    57b4:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    57b8:	05053014 	streq	r3, [r5, #-20]	; 0xffffffec
    57bc:	01040200 	mrseq	r0, R12_usr
    57c0:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    57c4:	17030607 	strne	r0, [r3, -r7, lsl #12]
    57c8:	13054d66 	movwne	r4, #23910	; 0x5d66
    57cc:	07050106 	streq	r0, [r5, -r6, lsl #2]
    57d0:	0c053f06 	stceq	15, cr3, [r5], {6}
    57d4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    57d8:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    57dc:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    57e0:	01060d05 	tsteq	r6, r5, lsl #26
    57e4:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    57e8:	1205200b 	andne	r2, r5, #11
    57ec:	06030530 			; <UNDEFINED> instruction: 0x06030530
    57f0:	06190588 	ldreq	r0, [r9], -r8, lsl #11
    57f4:	20050501 	andcs	r0, r5, r1, lsl #10
    57f8:	00153e06 	andseq	r3, r5, r6, lsl #28
    57fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    5800:	0532063c 	ldreq	r0, [r2, #-1596]!	; 0xfffff9c4
    5804:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5808:	3e062e07 	cdpcc	14, 0, cr2, cr6, cr7, {0}
    580c:	4a582e01 	bmi	1611018 <_Min_Heap_Size+0x1610818>
    5810:	15051320 	strne	r1, [r5, #-800]	; 0xfffffce0
    5814:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5818:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    581c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5820:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5824:	013c1203 	teqeq	ip, r3, lsl #4
    5828:	02040200 	andeq	r0, r4, #0, 4
    582c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5830:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    5834:	00580504 	subseq	r0, r8, r4, lsl #10
    5838:	4a070402 	bmi	1c6848 <_Min_Heap_Size+0x1c6048>
    583c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5840:	001a0514 	andseq	r0, sl, r4, lsl r5
    5844:	06070402 	streq	r0, [r7], -r2, lsl #8
    5848:	00070501 	andeq	r0, r7, r1, lsl #10
    584c:	20070402 	andcs	r0, r7, r2, lsl #8
    5850:	13053106 	movwne	r3, #20742	; 0x5106
    5854:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5858:	0c053f06 	stceq	15, cr3, [r5], {6}
    585c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5860:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    5864:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    5868:	01060d05 	tsteq	r6, r5, lsl #26
    586c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5870:	1205200b 	andne	r2, r5, #11
    5874:	0005054c 	andeq	r0, r5, ip, asr #10
    5878:	03020402 	movweq	r0, #9218	; 0x2402
    587c:	16052e58 			; <UNDEFINED> instruction: 0x16052e58
    5880:	06070563 	streq	r0, [r7], -r3, ror #10
    5884:	5b2e1003 	blpl	b89898 <_Min_Heap_Size+0xb89098>
    5888:	01061305 	tsteq	r6, r5, lsl #6
    588c:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    5890:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5894:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5898:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    589c:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    58a0:	1b050106 	blne	145cc0 <_Min_Heap_Size+0x1454c0>
    58a4:	200b052e 	andcs	r0, fp, lr, lsr #10
    58a8:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    58ac:	04020005 	streq	r0, [r2], #-5
    58b0:	00340601 	eorseq	r0, r4, r1, lsl #12
    58b4:	66040402 	strvs	r0, [r4], -r2, lsl #8
    58b8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    58bc:	03070558 	movweq	r0, #30040	; 0x7558
    58c0:	13055813 	movwne	r5, #22547	; 0x5813
    58c4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    58c8:	0c053f06 	stceq	15, cr3, [r5], {6}
    58cc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    58d0:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    58d4:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    58d8:	01060d05 	tsteq	r6, r5, lsl #26
    58dc:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    58e0:	1205200b 	andne	r2, r5, #11
    58e4:	0605054c 	streq	r0, [r5], -ip, asr #10
    58e8:	06070534 			; <UNDEFINED> instruction: 0x06070534
    58ec:	03052e01 	movweq	r2, #24065	; 0x5e01
    58f0:	053d1906 	ldreq	r1, [sp, #-2310]!	; 0xfffff6fa
    58f4:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    58f8:	05052006 	streq	r2, [r5, #-6]
    58fc:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    5900:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5904:	053e064a 	ldreq	r0, [lr, #-1610]!	; 0xfffff9b6
    5908:	06010609 	streq	r0, [r1], -r9, lsl #12
    590c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    5910:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    5914:	00594b3d 	subseq	r4, r9, sp, lsr fp
    5918:	06010402 	streq	r0, [r1], -r2, lsl #8
    591c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5920:	02002e02 	andeq	r2, r0, #2, 28
    5924:	062e0304 	strteq	r0, [lr], -r4, lsl #6
    5928:	053f4d2f 	ldreq	r4, [pc, #-3375]!	; 4c01 <_Min_Heap_Size+0x4401>
    592c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5930:	053f0609 	ldreq	r0, [pc, #-1545]!	; 532f <_Min_Heap_Size+0x4b2f>
    5934:	0f05010e 	svceq	0x0005010e
    5938:	0e050106 	adfeqs	f0, f5, f6
    593c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5940:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5944:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5948:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    594c:	07053014 	smladeq	r5, r4, r0, r3
    5950:	2e610306 	cdpcs	3, 6, cr0, cr1, cr6, {0}
    5954:	03056606 	movweq	r6, #22022	; 0x5606
    5958:	01040200 	mrseq	r0, R12_usr
    595c:	00090517 	andeq	r0, r9, r7, lsl r5
    5960:	03020402 	movweq	r0, #9218	; 0x2402
    5964:	02006609 	andeq	r6, r0, #9437184	; 0x900000
    5968:	00670104 	rsbeq	r0, r7, r4, lsl #2
    596c:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    5970:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5974:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5978:	03066701 	movweq	r6, #26369	; 0x6701
    597c:	3ff86612 	svccc	0x00f86612
    5980:	01061505 	tsteq	r6, r5, lsl #10
    5984:	3f060905 	svccc	0x00060905
    5988:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    598c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5990:	0b052e0e 	bleq	1511d0 <_Min_Heap_Size+0x1509d0>
    5994:	0f053e06 	svceq	0x00053e06
    5998:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    599c:	200d052e 	andcs	r0, sp, lr, lsr #10
    59a0:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    59a4:	2e37030a 	cdpcs	3, 3, cr0, cr7, cr10, {0}
    59a8:	03060905 	movweq	r0, #26885	; 0x6905
    59ac:	053f2e50 	ldreq	r2, [pc, #-3664]!	; 4b64 <_Min_Heap_Size+0x4364>
    59b0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    59b4:	053f0609 	ldreq	r0, [pc, #-1545]!	; 53b3 <_Min_Heap_Size+0x4bb3>
    59b8:	0f05010e 	svceq	0x0005010e
    59bc:	0e050106 	adfeqs	f0, f5, f6
    59c0:	060b052e 	streq	r0, [fp], -lr, lsr #10
    59c4:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    59c8:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    59cc:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    59d0:	0a053014 	beq	151a28 <_Min_Heap_Size+0x151228>
    59d4:	052e2603 	streq	r2, [lr, #-1539]!	; 0xfffff9fd
    59d8:	62030607 	andvs	r0, r3, #7340032	; 0x700000
    59dc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    59e0:	05350601 	ldreq	r0, [r5, #-1537]!	; 0xfffff9ff
    59e4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    59e8:	0a030609 	beq	c7214 <_Min_Heap_Size+0xc6a14>
    59ec:	060e052e 	streq	r0, [lr], -lr, lsr #10
    59f0:	2e500513 	mrccs	5, 2, r0, cr0, cr3, {0}
    59f4:	051f4005 	ldreq	r4, [pc, #-5]	; 59f7 <_Min_Heap_Size+0x51f7>
    59f8:	5605300e 	strpl	r3, [r5], -lr
    59fc:	1f5c052e 	svcne	0x005c052e
    5a00:	05304f05 	ldreq	r4, [r0, #-3845]!	; 0xfffff0fb
    5a04:	0e051f6f 	cdpeq	15, 0, cr1, cr5, cr15, {3}
    5a08:	2e510568 	cdpcs	5, 5, cr0, cr1, cr8, {3}
    5a0c:	05205705 	streq	r5, [r0, #-1797]!	; 0xfffff8fb
    5a10:	6f05205e 	svcvs	0x0005205e
    5a14:	3e0e051f 	mcrcc	5, 0, r0, cr14, cr15, {0}
    5a18:	052e4f05 	streq	r4, [lr, #-3845]!	; 0xfffff0fb
    5a1c:	0a051f7e 	beq	14d81c <_Min_Heap_Size+0x14d01c>
    5a20:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    5a24:	7daf030c 	stcvc	3, cr0, [pc, #48]!	; 5a5c <_Min_Heap_Size+0x525c>
    5a28:	0301052e 	movweq	r0, #5422	; 0x152e
    5a2c:	052002d2 	streq	r0, [r0, #-722]!	; 0xfffffd2e
    5a30:	7dbe0310 	ldcvc	3, cr0, [lr, #64]!	; 0x40
    5a34:	2e350320 	cdpcs	3, 3, cr0, cr5, cr0, {1}
    5a38:	8c030a05 			; <UNDEFINED> instruction: 0x8c030a05
    5a3c:	01052e02 	tsteq	r5, r2, lsl #28
    5a40:	03100521 	tsteq	r0, #138412032	; 0x8400000
    5a44:	12052e63 	andne	r2, r5, #1584	; 0x630
    5a48:	f22e1703 	vabd.s32	d1, d14, d3
    5a4c:	01000202 	tsteq	r0, r2, lsl #4
    5a50:	00010501 	andeq	r0, r1, r1, lsl #10
    5a54:	00000205 	andeq	r0, r0, r5, lsl #4
    5a58:	87030000 	strhi	r0, [r3, -r0]
    5a5c:	01060106 	tsteq	r6, r6, lsl #2
    5a60:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    5a64:	02002f14 	andeq	r2, r0, #20, 30	; 0x50
    5a68:	20060104 	andcs	r0, r6, r4, lsl #2
    5a6c:	02040200 	andeq	r0, r4, #0, 4
    5a70:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5a74:	02003c03 	andeq	r3, r0, #768	; 0x300
    5a78:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    5a7c:	0605053e 			; <UNDEFINED> instruction: 0x0605053e
    5a80:	00300601 	eorseq	r0, r0, r1, lsl #12
    5a84:	06010402 	streq	r0, [r1], -r2, lsl #8
    5a88:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5a8c:	02003c02 	andeq	r3, r0, #512	; 0x200
    5a90:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    5a94:	062e013f 			; <UNDEFINED> instruction: 0x062e013f
    5a98:	4a4a0620 	bmi	1287320 <_Min_Heap_Size+0x1286b20>
    5a9c:	19051520 	stmdbne	r5, {r5, r8, sl, ip}
    5aa0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5aa4:	1a053d06 	bne	154ec4 <_Min_Heap_Size+0x1546c4>
    5aa8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5aac:	1b052f06 	blne	1516cc <_Min_Heap_Size+0x150ecc>
    5ab0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5ab4:	1a052f06 	bne	1516d4 <_Min_Heap_Size+0x150ed4>
    5ab8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5abc:	1f052106 	svcne	0x00052106
    5ac0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5ac4:	064d2106 	strbeq	r2, [sp], -r6, lsl #2
    5ac8:	0301054a 	movweq	r0, #5450	; 0x154a
    5acc:	03052e20 	movweq	r2, #24096	; 0x5e20
    5ad0:	01040200 	mrseq	r0, R12_usr
    5ad4:	002e4d03 	eoreq	r4, lr, r3, lsl #26
    5ad8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5adc:	01040200 	mrseq	r0, R12_usr
    5ae0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5ae4:	02002e01 	andeq	r2, r0, #1, 28
    5ae8:	05210504 	streq	r0, [r1, #-1284]!	; 0xfffffafc
    5aec:	04020005 	streq	r0, [r2], #-5
    5af0:	03066a04 	movweq	r6, #27140	; 0x6a04
    5af4:	02006618 	andeq	r6, r0, #24, 12	; 0x1800000
    5af8:	20060104 	andcs	r0, r6, r4, lsl #2
    5afc:	02040200 	andeq	r0, r4, #0, 4
    5b00:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5b04:	3f063c03 	svccc	0x00063c03
    5b08:	20062e01 	andcs	r2, r6, r1, lsl #28
    5b0c:	204a4a06 	subcs	r4, sl, r6, lsl #20
    5b10:	06190515 			; <UNDEFINED> instruction: 0x06190515
    5b14:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b18:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    5b1c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b20:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    5b24:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b28:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    5b2c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b30:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    5b34:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b38:	58064d21 	stmdapl	r6, {r0, r5, r8, sl, fp, lr}
    5b3c:	05360105 	ldreq	r0, [r6, #-261]!	; 0xfffffefb
    5b40:	04020005 	streq	r0, [r2], #-5
    5b44:	206a0304 	rsbcs	r0, sl, r4, lsl #6
    5b48:	01000e02 	tsteq	r0, r2, lsl #28
    5b4c:	00010501 	andeq	r0, r1, r1, lsl #10
    5b50:	00000205 	andeq	r0, r0, r5, lsl #4
    5b54:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    5b58:	03050106 	movweq	r0, #20742	; 0x5106
    5b5c:	06260513 			; <UNDEFINED> instruction: 0x06260513
    5b60:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
    5b64:	01000302 	tsteq	r0, r2, lsl #6
    5b68:	00010501 	andeq	r0, r1, r1, lsl #10
    5b6c:	00000205 	andeq	r0, r0, r5, lsl #4
    5b70:	d2030000 	andle	r0, r3, #0
    5b74:	03050106 	movweq	r0, #20742	; 0x5106
    5b78:	06260513 			; <UNDEFINED> instruction: 0x06260513
    5b7c:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
    5b80:	01000302 	tsteq	r0, r2, lsl #6
    5b84:	00010501 	andeq	r0, r1, r1, lsl #10
    5b88:	00000205 	andeq	r0, r0, r5, lsl #4
    5b8c:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    5b90:	03050106 	movweq	r0, #20742	; 0x5106
    5b94:	05151321 	ldreq	r1, [r5, #-801]	; 0xfffffcdf
    5b98:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    5b9c:	03052e15 	movweq	r2, #24085	; 0x5e15
    5ba0:	0607052e 	streq	r0, [r7], -lr, lsr #10
    5ba4:	054a1003 	strbeq	r1, [sl, #-3]
    5ba8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    5bac:	07052e0c 	streq	r2, [r5, -ip, lsl #28]
    5bb0:	0a052f06 	beq	1517d0 <_Min_Heap_Size+0x150fd0>
    5bb4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5bb8:	053f0620 	ldreq	r0, [pc, #-1568]!	; 55a0 <_Min_Heap_Size+0x4da0>
    5bbc:	05010648 	streq	r0, [r1, #-1608]	; 0xfffff9b8
    5bc0:	35052e38 	strcc	r2, [r5, #-3640]	; 0xfffff1c8
    5bc4:	0182052e 	orreq	r0, r2, lr, lsr #10
    5bc8:	07056608 	streq	r6, [r5, -r8, lsl #12]
    5bcc:	15057b06 	strne	r7, [r5, #-2822]	; 0xfffff4fa
    5bd0:	33050106 	movwcc	r0, #20742	; 0x5106
    5bd4:	2e4c052e 	cdpcs	5, 4, cr0, cr12, cr14, {1}
    5bd8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    5bdc:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    5be0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    5be4:	052f0607 	streq	r0, [pc, #-1543]!	; 55e5 <_Min_Heap_Size+0x4de5>
    5be8:	48051b09 	stmdami	r5, {r0, r3, r8, r9, fp, ip}
    5bec:	38050106 	stmdacc	r5, {r1, r2, r8}
    5bf0:	2e35052e 	cdpcs	5, 3, cr0, cr5, cr14, {1}
    5bf4:	08018205 	stmdaeq	r1, {r0, r2, r9, pc}
    5bf8:	14057466 	strne	r7, [r5], #-1126	; 0xfffffb9a
    5bfc:	05207003 	streq	r7, [r0, #-3]!
    5c00:	2e770303 	cdpcs	3, 7, cr0, cr7, cr3, {0}
    5c04:	20260306 	eorcs	r0, r6, r6, lsl #6
    5c08:	13060105 	movwne	r0, #24837	; 0x6105
    5c0c:	01000802 	tsteq	r0, r2, lsl #16
    5c10:	00010501 	andeq	r0, r1, r1, lsl #10
    5c14:	00000205 	andeq	r0, r0, r5, lsl #4
    5c18:	cf030000 	svcgt	0x00030000
    5c1c:	03050104 	movweq	r0, #20740	; 0x5104
    5c20:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    5c24:	01050106 	tsteq	r5, r6, lsl #2
    5c28:	06030538 			; <UNDEFINED> instruction: 0x06030538
    5c2c:	4b3c0a03 	blmi	f08440 <_Min_Heap_Size+0xf07c40>
    5c30:	06110535 			; <UNDEFINED> instruction: 0x06110535
    5c34:	4a050501 	bmi	147040 <_Min_Heap_Size+0x146840>
    5c38:	05403106 	strbeq	r3, [r0, #-262]	; 0xfffffefa
    5c3c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5c40:	03053c07 	movweq	r3, #23559	; 0x5c07
    5c44:	19054306 	stmdbne	r5, {r1, r2, r8, r9, lr}
    5c48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5c4c:	05400620 	strbeq	r0, [r0, #-1568]	; 0xfffff9e0
    5c50:	06010607 	streq	r0, [r1], -r7, lsl #12
    5c54:	5b05053e 	blpl	147154 <_Min_Heap_Size+0x146954>
    5c58:	01061b05 	tsteq	r6, r5, lsl #22
    5c5c:	06200705 	strteq	r0, [r0], -r5, lsl #14
    5c60:	5b05053e 	blpl	147160 <_Min_Heap_Size+0x146960>
    5c64:	01040200 	mrseq	r0, R12_usr
    5c68:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5c6c:	002e0204 	eoreq	r0, lr, r4, lsl #4
    5c70:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    5c74:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5c78:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5c7c:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    5c80:	002e0604 	eoreq	r0, lr, r4, lsl #12
    5c84:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    5c88:	08040200 	stmdaeq	r4, {r9}
    5c8c:	052f062e 	streq	r0, [pc, #-1582]!	; 5666 <_Min_Heap_Size+0x4e66>
    5c90:	19057803 	stmdbne	r5, {r0, r1, fp, ip, sp, lr}
    5c94:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5c98:	3f3e0620 	svccc	0x003e0620
    5c9c:	01061905 	tsteq	r6, r5, lsl #18
    5ca0:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    5ca4:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
    5ca8:	064c052e 	strbeq	r0, [ip], -lr, lsr #10
    5cac:	200c0501 	andcs	r0, ip, r1, lsl #10
    5cb0:	03060705 	movweq	r0, #26373	; 0x6705
    5cb4:	0a052e0d 	beq	1514f0 <_Min_Heap_Size+0x150cf0>
    5cb8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5cbc:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5cc0:	11056950 	tstne	r5, r0, asr r9
    5cc4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5cc8:	0b053e06 	bleq	1554e8 <_Min_Heap_Size+0x154ce8>
    5ccc:	060c0501 	streq	r0, [ip], -r1, lsl #10
    5cd0:	4a3f0501 	bmi	fc70dc <_Min_Heap_Size+0xfc68dc>
    5cd4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    5cd8:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    5cdc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5ce0:	0a052e1a 	beq	151550 <_Min_Heap_Size+0x150d50>
    5ce4:	4c100520 	cfldr32mi	mvfx0, [r0], {32}
    5ce8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5cec:	ad030104 	stfges	f0, [r3, #-16]
    5cf0:	02002e7f 	andeq	r2, r0, #2032	; 0x7f0
    5cf4:	002e0104 	eoreq	r0, lr, r4, lsl #2
    5cf8:	20010402 	andcs	r0, r1, r2, lsl #8
    5cfc:	01040200 	mrseq	r0, R12_usr
    5d00:	0005053d 	andeq	r0, r5, sp, lsr r5
    5d04:	03090402 	movweq	r0, #37890	; 0x9402
    5d08:	02006623 	andeq	r6, r0, #36700160	; 0x2300000
    5d0c:	056d0104 	strbeq	r0, [sp, #-260]!	; 0xfffffefc
    5d10:	056c0607 	strbeq	r0, [ip, #-1543]!	; 0xfffff9f9
    5d14:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5d18:	10052e09 	andne	r2, r5, r9, lsl #28
    5d1c:	0607053e 			; <UNDEFINED> instruction: 0x0607053e
    5d20:	060a0536 			; <UNDEFINED> instruction: 0x060a0536
    5d24:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    5d28:	053e1005 	ldreq	r1, [lr, #-5]!
    5d2c:	1c030603 	stcne	6, cr0, [r3], {3}
    5d30:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    5d34:	4a050501 	bmi	147140 <_Min_Heap_Size+0x146940>
    5d38:	05403106 	strbeq	r3, [r0, #-262]	; 0xfffffefa
    5d3c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5d40:	03053c07 	movweq	r3, #23559	; 0x5c07
    5d44:	19053506 	stmdbne	r5, {r1, r2, r8, sl, ip, sp}
    5d48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5d4c:	003e0620 	eorseq	r0, lr, r0, lsr #12
    5d50:	06010402 	streq	r0, [r1], -r2, lsl #8
    5d54:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d58:	02003c02 	andeq	r3, r0, #512	; 0x200
    5d5c:	003c0304 	eorseq	r0, ip, r4, lsl #6
    5d60:	3c040402 	cfstrscc	mvf0, [r4], {2}
    5d64:	03053d06 	movweq	r3, #23814	; 0x5d06
    5d68:	06190578 			; <UNDEFINED> instruction: 0x06190578
    5d6c:	20050501 	andcs	r0, r5, r1, lsl #10
    5d70:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    5d74:	2e060104 	adfcss	f0, f6, f4
    5d78:	02040200 	andeq	r0, r4, #0, 4
    5d7c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5d80:	02003c03 	andeq	r3, r0, #768	; 0x300
    5d84:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    5d88:	8603053d 			; <UNDEFINED> instruction: 0x8603053d
    5d8c:	01061505 	tsteq	r6, r5, lsl #10
    5d90:	052e4405 	streq	r4, [lr, #-1029]!	; 0xfffffbfb
    5d94:	3f052e5b 	svccc	0x00052e5b
    5d98:	2e2f052e 	cfsh64cs	mvdx0, mvdx15, #30
    5d9c:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    5da0:	4c310603 	ldcmi	6, cr0, [r1], #-12
    5da4:	01060a05 	tsteq	r6, r5, lsl #20
    5da8:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    5dac:	04020005 	streq	r0, [r2], #-5
    5db0:	206e0305 	rsbcs	r0, lr, r5, lsl #6
    5db4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5db8:	030c056d 	movweq	r0, #50541	; 0xc56d
    5dbc:	05667f8c 	strbeq	r7, [r6, #-3980]!	; 0xfffff074
    5dc0:	00ff0301 	rscseq	r0, pc, r1, lsl #6
    5dc4:	030e0520 	movweq	r0, #58656	; 0xe520
    5dc8:	05207f96 	streq	r7, [r0, #-3990]!	; 0xfffff06a
    5dcc:	2e350310 	mrccs	3, 1, r0, cr5, cr0, {0}
    5dd0:	1c030e05 	stcne	14, cr0, [r3], {5}
    5dd4:	000e022e 	andeq	r0, lr, lr, lsr #4
    5dd8:	01050101 	tsteq	r5, r1, lsl #2
    5ddc:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    5de0:	03080010 	movweq	r0, #32784	; 0x8010
    5de4:	050107ad 	streq	r0, [r1, #-1965]	; 0xfffff853
    5de8:	01051303 	tsteq	r5, r3, lsl #6
    5dec:	06021306 	streq	r1, [r2], -r6, lsl #6
    5df0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5df4:	02050001 	andeq	r0, r5, #1
    5df8:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
    5dfc:	0107b803 	tsteq	r7, r3, lsl #16
    5e00:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
    5e04:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5e08:	4e052e36 	mcrmi	14, 0, r2, cr5, cr6, {1}
    5e0c:	2e31052e 	cdpcs	5, 3, cr0, cr1, cr14, {1}
    5e10:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    5e14:	01010007 	tsteq	r1, r7
    5e18:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e1c:	0010f802 	andseq	pc, r0, r2, lsl #16
    5e20:	07c40308 	strbeq	r0, [r4, r8, lsl #6]
    5e24:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    5e28:	01060b05 	tsteq	r6, r5, lsl #22
    5e2c:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    5e30:	30052e4d 	andcc	r2, r5, sp, asr #28
    5e34:	2f01052e 	svccs	0x0001052e
    5e38:	01000702 	tsteq	r0, r2, lsl #14
    5e3c:	00010501 	andeq	r0, r1, r1, lsl #10
    5e40:	00000205 	andeq	r0, r0, r5, lsl #4
    5e44:	d1030000 	mrsle	r0, (UNDEF: 3)
    5e48:	03050107 	movweq	r0, #20743	; 0x5107
    5e4c:	06250514 			; <UNDEFINED> instruction: 0x06250514
    5e50:	06030501 	streq	r0, [r3], -r1, lsl #10
    5e54:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    5e58:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5e5c:	21053e06 	tstcs	r5, r6, lsl #28
    5e60:	03050106 	movweq	r0, #20742	; 0x5106
    5e64:	3c0c0306 	stccc	3, cr0, [ip], {6}
    5e68:	01060a05 	tsteq	r6, r5, lsl #20
    5e6c:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    5e70:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    5e74:	06030501 	streq	r0, [r3], -r1, lsl #10
    5e78:	063b0535 			; <UNDEFINED> instruction: 0x063b0535
    5e7c:	2e2c0501 	cfsh64cs	mvdx0, mvdx12, #1
    5e80:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
    5e84:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    5e88:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5e8c:	3e062005 	cdpcc	0, 0, cr2, cr6, cr5, {0}
    5e90:	01062105 	tsteq	r6, r5, lsl #2
    5e94:	03060305 	movweq	r0, #25349	; 0x6305
    5e98:	0a052e0c 	beq	1516d0 <_Min_Heap_Size+0x150ed0>
    5e9c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5ea0:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    5ea4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5ea8:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    5eac:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5eb0:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    5eb4:	01062505 	tsteq	r6, r5, lsl #10
    5eb8:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    5ebc:	01063405 	tsteq	r6, r5, lsl #8
    5ec0:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    5ec4:	03052e24 	movweq	r2, #24100	; 0x5e24
    5ec8:	2f052106 	svccs	0x00052106
    5ecc:	21050106 	tstcs	r5, r6, lsl #2
    5ed0:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    5ed4:	21060305 	tstcs	r6, r5, lsl #6
    5ed8:	01063005 	tsteq	r6, r5
    5edc:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    5ee0:	03052e1f 	movweq	r2, #24095	; 0x5e1f
    5ee4:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    5ee8:	3c050106 	stfccs	f0, [r5], {6}
    5eec:	2e500520 	cdpcs	5, 5, cr0, cr0, cr0, {1}
    5ef0:	052e2105 	streq	r2, [lr, #-261]!	; 0xfffffefb
    5ef4:	0305201f 	movweq	r2, #20511	; 0x501f
    5ef8:	30052106 	andcc	r2, r5, r6, lsl #2
    5efc:	21050106 	tstcs	r5, r6, lsl #2
    5f00:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    5f04:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    5f08:	45030608 	strmi	r0, [r3, #-1544]	; 0xfffff9f8
    5f0c:	060f0520 	streq	r0, [pc], -r0, lsr #10
    5f10:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    5f14:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    5f18:	01062105 	tsteq	r6, r5, lsl #2
    5f1c:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    5f20:	01062105 	tsteq	r6, r5, lsl #2
    5f24:	03060505 	movweq	r0, #25861	; 0x6505
    5f28:	21053c0a 	tstcs	r5, sl, lsl #24
    5f2c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    5f30:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5f34:	01060f05 	tsteq	r6, r5, lsl #30
    5f38:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    5f3c:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    5f40:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f44:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    5f48:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f4c:	0a030605 	beq	c7768 <_Min_Heap_Size+0xc6f68>
    5f50:	0621053c 			; <UNDEFINED> instruction: 0x0621053c
    5f54:	06050501 	streq	r0, [r5], -r1, lsl #10
    5f58:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    5f5c:	02010625 	andeq	r0, r1, #38797312	; 0x2500000
    5f60:	01010006 	tsteq	r1, r6
    5f64:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5f68:	00000002 	andeq	r0, r0, r2
    5f6c:	08a00300 	stmiaeq	r0!, {r8, r9}
    5f70:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    5f74:	01062005 	tsteq	r6, r5
    5f78:	31060305 	tstcc	r6, r5, lsl #6
    5f7c:	01063305 	tsteq	r6, r5, lsl #6
    5f80:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    5f84:	03052e23 	movweq	r2, #24099	; 0x5e23
    5f88:	34052306 	strcc	r2, [r5], #-774	; 0xfffffcfa
    5f8c:	26050106 	strcs	r0, [r5], -r6, lsl #2
    5f90:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
    5f94:	23060305 	movwcs	r0, #25349	; 0x6305
    5f98:	01063505 	tsteq	r6, r5, lsl #10
    5f9c:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    5fa0:	03052e25 	movweq	r2, #24101	; 0x5e25
    5fa4:	36052306 	strcc	r2, [r5], -r6, lsl #6
    5fa8:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    5fac:	3c250520 	cfstr32cc	mvfx0, [r5], #-128	; 0xffffff80
    5fb0:	23060305 	movwcs	r0, #25349	; 0x6305
    5fb4:	01062005 	tsteq	r6, r5
    5fb8:	052e1005 	streq	r1, [lr, #-5]!
    5fbc:	01052e0e 	tsteq	r5, lr, lsl #28
    5fc0:	00050221 	andeq	r0, r5, r1, lsr #4
    5fc4:	01050101 	tsteq	r5, r1, lsl #2
    5fc8:	00020500 	andeq	r0, r2, r0, lsl #10
    5fcc:	03000000 	movweq	r0, #0
    5fd0:	160108cb 	strne	r0, [r1], -fp, asr #17
    5fd4:	01000102 	tsteq	r0, r2, lsl #2
    5fd8:	00010501 	andeq	r0, r1, r1, lsl #10
    5fdc:	00000205 	andeq	r0, r0, r5, lsl #4
    5fe0:	ba030000 	blt	c5fe8 <_Min_Heap_Size+0xc57e8>
    5fe4:	03050108 	movweq	r0, #20744	; 0x5108
    5fe8:	06060522 	streq	r0, [r6], -r2, lsr #10
    5fec:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5ff0:	05440105 	strbeq	r0, [r4, #-261]	; 0xfffffefb
    5ff4:	311b0605 	tstcc	fp, r5, lsl #12
    5ff8:	3e060105 	adfccs	f0, f6, f5
    5ffc:	01000402 	tsteq	r0, r2, lsl #8
    6000:	00088101 	andeq	r8, r8, r1, lsl #2
    6004:	e8000300 	stmda	r0, {r8, r9}
    6008:	02000001 	andeq	r0, r0, #1
    600c:	0d0efb01 	vstreq	d15, [lr, #-4]
    6010:	01010100 	mrseq	r0, (UNDEF: 17)
    6014:	00000001 	andeq	r0, r0, r1
    6018:	01000001 	tsteq	r0, r1
    601c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 6024 <_Min_Heap_Size+0x5824>
    6020:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6024:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    6028:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    602c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6030:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    6034:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    6038:	2f726576 	svccs	0x00726576
    603c:	00637253 	rsbeq	r7, r3, r3, asr r2
    6040:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    6044:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    6048:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    604c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    6050:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    6054:	615c6d61 	cmpvs	ip, r1, ror #26
    6058:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    605c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    6060:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    6064:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6068:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    606c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6070:	2e30312d 	rsfcssp	f3, f0, #5.0
    6074:	30322d33 	eorscc	r2, r2, r3, lsr sp
    6078:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    607c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    6080:	6f6e2d6d 	svcvs	0x006e2d6d
    6084:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6088:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    608c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6090:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    6094:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6098:	00656e69 	rsbeq	r6, r5, r9, ror #28
    609c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    60a0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    60a4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    60a8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    60ac:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    60b0:	615c6d61 	cmpvs	ip, r1, ror #26
    60b4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    60b8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    60bc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    60c0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    60c4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    60c8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    60cc:	2e30312d 	rsfcssp	f3, f0, #5.0
    60d0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    60d4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    60d8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    60dc:	6f6e2d6d 	svcvs	0x006e2d6d
    60e0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    60e4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    60e8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    60ec:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    60f0:	00737973 	rsbseq	r7, r3, r3, ror r9
    60f4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 60fc <_Min_Heap_Size+0x58fc>
    60f8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    60fc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    6100:	5349534d 	movtpl	r5, #37709	; 0x934d
    6104:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    6108:	2f656369 	svccs	0x00656369
    610c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    6110:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    6114:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6118:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    611c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6120:	2f2e2e00 	svccs	0x002e2e00
    6124:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6128:	2f737265 	svccs	0x00737265
    612c:	334d5453 	movtcc	r5, #54355	; 0xd453
    6130:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    6134:	41485f78 	hvcmi	34296	; 0x85f8
    6138:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    613c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6140:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    6144:	2f2e2e00 	svccs	0x002e2e00
    6148:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    614c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    6150:	74730000 	ldrbtvc	r0, [r3], #-0
    6154:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6158:	5f787834 	svcpl	0x00787834
    615c:	5f6c6168 	svcpl	0x006c6168
    6160:	6f697067 	svcvs	0x00697067
    6164:	0100632e 	tsteq	r0, lr, lsr #6
    6168:	645f0000 	ldrbvs	r0, [pc], #-0	; 6170 <_Min_Heap_Size+0x5970>
    616c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    6170:	745f746c 	ldrbvc	r7, [pc], #-1132	; 6178 <_Min_Heap_Size+0x5978>
    6174:	73657079 	cmnvc	r5, #121	; 0x79
    6178:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    617c:	735f0000 	cmpvc	pc, #0
    6180:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    6184:	00682e74 	rsbeq	r2, r8, r4, ror lr
    6188:	73000003 	movwvc	r0, #3
    618c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6190:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    6194:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    6198:	00000400 	andeq	r0, r0, r0, lsl #8
    619c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    61a0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    61a4:	00682e78 	rsbeq	r2, r8, r8, ror lr
    61a8:	73000004 	movwvc	r0, #4
    61ac:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    61b0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    61b4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    61b8:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    61bc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    61c0:	74730000 	ldrbtvc	r0, [r3], #-0
    61c4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    61c8:	5f787834 	svcpl	0x00787834
    61cc:	5f6c6168 	svcpl	0x006c6168
    61d0:	6f697067 	svcvs	0x00697067
    61d4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    61d8:	74730000 	ldrbtvc	r0, [r3], #-0
    61dc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    61e0:	5f787834 	svcpl	0x00787834
    61e4:	5f6c6168 	svcpl	0x006c6168
    61e8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    61ec:	0600682e 	streq	r6, [r0], -lr, lsr #16
    61f0:	05000000 	streq	r0, [r0, #-0]
    61f4:	02050001 	andeq	r0, r5, #1
    61f8:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
    61fc:	0101a403 	tsteq	r1, r3, lsl #8
    6200:	03050106 	movweq	r0, #20742	; 0x5106
    6204:	13135906 	tstne	r3, #98304	; 0x18000
    6208:	02001513 	andeq	r1, r0, #79691776	; 0x4c00000
    620c:	3c060104 	stfccs	f0, [r6], {4}
    6210:	02040200 	andeq	r0, r4, #0, 4
    6214:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6218:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    621c:	004a0404 	subeq	r0, sl, r4, lsl #8
    6220:	4a050402 	bmi	147230 <_Min_Heap_Size+0x146a30>
    6224:	06040200 	streq	r0, [r4], -r0, lsl #4
    6228:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    622c:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    6230:	004a0804 	subeq	r0, sl, r4, lsl #16
    6234:	4a090402 	bmi	247244 <_Min_Heap_Size+0x246a44>
    6238:	09040200 	stmdbeq	r4, {r9}
    623c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6240:	2f062009 	svccs	0x00062009
    6244:	02040200 	andeq	r0, r4, #0, 4
    6248:	02003c06 	andeq	r3, r0, #1536	; 0x600
    624c:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    6250:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    6254:	003c0601 	eorseq	r0, ip, r1, lsl #12
    6258:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    625c:	03040200 	movweq	r0, #16896	; 0x4200
    6260:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6264:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
    6268:	003c0504 	eorseq	r0, ip, r4, lsl #10
    626c:	3c060402 	cfstrscc	mvf0, [r6], {2}
    6270:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6274:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6278:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    627c:	003c0904 	eorseq	r0, ip, r4, lsl #18
    6280:	3c0a0402 	cfstrscc	mvf0, [sl], {2}
    6284:	02001d05 	andeq	r1, r0, #320	; 0x140
    6288:	c7030104 	strgt	r0, [r3, -r4, lsl #2]
    628c:	03052e00 	movweq	r2, #24064	; 0x5e00
    6290:	0b040200 	bleq	106a98 <_Min_Heap_Size+0x106298>
    6294:	2e7fb903 	vaddcs.f16	s23, s30, s6	; <UNPREDICTABLE>
    6298:	03060905 	movweq	r0, #26885	; 0x6905
    629c:	053e5812 	ldreq	r5, [lr, #-2066]!	; 0xfffff7ee
    62a0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    62a4:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    62a8:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    62ac:	0e05202a 	cdpeq	0, 0, cr2, cr5, cr10, {1}
    62b0:	0609052e 	streq	r0, [r9], -lr, lsr #10
    62b4:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    62b8:	20230501 	eorcs	r0, r3, r1, lsl #10
    62bc:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    62c0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    62c4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    62c8:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    62cc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    62d0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    62d4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    62d8:	052f0609 	streq	r0, [pc, #-1545]!	; 5cd7 <_Min_Heap_Size+0x54d7>
    62dc:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    62e0:	47052033 	smladxmi	r5, r3, r0, r2
    62e4:	200e052e 	andcs	r0, lr, lr, lsr #10
    62e8:	21060905 	tstcs	r6, r5, lsl #18
    62ec:	01061705 	tsteq	r6, r5, lsl #14
    62f0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    62f4:	75030104 	strvc	r0, [r3, #-260]	; 0xfffffefc
    62f8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    62fc:	58110301 	ldmdapl	r1, {r0, r8, r9}
    6300:	580d0306 	stmdapl	sp, {r1, r2, r8, r9}
    6304:	01040200 	mrseq	r0, R12_usr
    6308:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    630c:	002e0604 	eoreq	r0, lr, r4, lsl #12
    6310:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    6314:	0b040200 	bleq	106b1c <_Min_Heap_Size+0x10631c>
    6318:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    631c:	02002e0c 	andeq	r2, r0, #12, 28	; 0xc0
    6320:	002e0f04 	eoreq	r0, lr, r4, lsl #30
    6324:	2e120402 	cfmulscs	mvf0, mvf2, mvf2
    6328:	14040200 	strne	r0, [r4], #-512	; 0xfffffe00
    632c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6330:	02002e17 	andeq	r2, r0, #368	; 0x170
    6334:	002e1c04 	eoreq	r1, lr, r4, lsl #24
    6338:	2e1e0402 	cfmulscs	mvf0, mvf14, mvf2
    633c:	21040200 	mrscs	r0, R12_usr
    6340:	0530062e 	ldreq	r0, [r0, #-1582]!	; 0xfffff9d2
    6344:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    6348:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    634c:	1c053d06 	stcne	13, cr3, [r5], {6}
    6350:	39050106 	stmdbcc	r5, {r1, r2, r8}
    6354:	2018052e 	andscs	r0, r8, lr, lsr #10
    6358:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    635c:	052f0609 	streq	r0, [pc, #-1545]!	; 5d5b <_Min_Heap_Size+0x555b>
    6360:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    6364:	0e052033 	mcreq	0, 0, r2, cr5, cr3, {1}
    6368:	06090520 	streq	r0, [r9], -r0, lsr #10
    636c:	06240521 	strteq	r0, [r4], -r1, lsr #10
    6370:	00090501 	andeq	r0, r9, r1, lsl #10
    6374:	37220402 	strcc	r0, [r2, -r2, lsl #8]!
    6378:	17031d05 	strne	r1, [r3, -r5, lsl #26]
    637c:	74120558 	ldrvc	r0, [r2], #-1368	; 0xfffffaa8
    6380:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    6384:	05202004 	streq	r2, [r0, #-4]!
    6388:	0402000e 	streq	r0, [r2], #-14
    638c:	09052020 	stmdbeq	r5, {r5, sp}
    6390:	20040200 	andcs	r0, r4, r0, lsl #4
    6394:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    6398:	20040200 	andcs	r0, r4, r0, lsl #4
    639c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    63a0:	20040200 	andcs	r0, r4, r0, lsl #4
    63a4:	0e054d06 	cdpeq	13, 0, cr4, cr5, cr6, {0}
    63a8:	20040200 	andcs	r0, r4, r0, lsl #4
    63ac:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    63b0:	05202004 	streq	r2, [r0, #-4]!
    63b4:	04020009 	streq	r0, [r2], #-9
    63b8:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
    63bc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    63c0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    63c4:	0402000e 	streq	r0, [r2], #-14
    63c8:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
    63cc:	20040200 	andcs	r0, r4, r0, lsl #4
    63d0:	16052f06 	strne	r2, [r5], -r6, lsl #30
    63d4:	20040200 	andcs	r0, r4, r0, lsl #4
    63d8:	0b050106 	bleq	1467f8 <_Min_Heap_Size+0x145ff8>
    63dc:	20040200 	andcs	r0, r4, r0, lsl #4
    63e0:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    63e4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    63e8:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    63ec:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    63f0:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    63f4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    63f8:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    63fc:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6400:	052f0609 	streq	r0, [pc, #-1545]!	; 5dff <_Min_Heap_Size+0x55ff>
    6404:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6408:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    640c:	01061005 	tsteq	r6, r5
    6410:	30060905 	andcc	r0, r6, r5, lsl #18
    6414:	01061405 	tsteq	r6, r5, lsl #8
    6418:	30060905 	andcc	r0, r6, r5, lsl #18
    641c:	01060e05 	tsteq	r6, r5, lsl #28
    6420:	21060905 	tstcs	r6, r5, lsl #18
    6424:	01060e05 	tsteq	r6, r5, lsl #28
    6428:	2f060905 	svccs	0x00060905
    642c:	01061605 	tsteq	r6, r5, lsl #12
    6430:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    6434:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    6438:	06090501 	streq	r0, [r9], -r1, lsl #10
    643c:	06130530 			; <UNDEFINED> instruction: 0x06130530
    6440:	06090501 	streq	r0, [r9], -r1, lsl #10
    6444:	060e0531 			; <UNDEFINED> instruction: 0x060e0531
    6448:	06090501 	streq	r0, [r9], -r1, lsl #10
    644c:	060e0521 	streq	r0, [lr], -r1, lsr #10
    6450:	06090501 	streq	r0, [r9], -r1, lsl #10
    6454:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    6458:	200b0501 	andcs	r0, fp, r1, lsl #10
    645c:	10053e06 	andne	r3, r5, r6, lsl #28
    6460:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6464:	13053006 	movwne	r3, #20486	; 0x5006
    6468:	2e050106 	adfcss	f0, f5, f6
    646c:	02040200 	andeq	r0, r4, #0, 4
    6470:	7f990306 	svcvc	0x00990306
    6474:	0036052e 	eorseq	r0, r6, lr, lsr #10
    6478:	06020402 	streq	r0, [r2], -r2, lsl #8
    647c:	00160501 	andseq	r0, r6, r1, lsl #10
    6480:	06010402 	streq	r0, [r1], -r2, lsl #8
    6484:	00030520 	andeq	r0, r3, r0, lsr #10
    6488:	06010402 	streq	r0, [r1], -r2, lsl #8
    648c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6490:	06100531 			; <UNDEFINED> instruction: 0x06100531
    6494:	06050501 	streq	r0, [r5], -r1, lsl #10
    6498:	06250530 			; <UNDEFINED> instruction: 0x06250530
    649c:	200f0501 	andcs	r0, pc, r1, lsl #10
    64a0:	30060505 	andcc	r0, r6, r5, lsl #10
    64a4:	01060705 	tsteq	r6, r5, lsl #14
    64a8:	15054006 	strne	r4, [r5, #-6]
    64ac:	1c050106 	stfnes	f0, [r5], {6}
    64b0:	2e390520 	cfabs64cs	mvdx0, mvdx9
    64b4:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    64b8:	12030607 	andne	r0, r3, #7340032	; 0x700000
    64bc:	0614053c 			; <UNDEFINED> instruction: 0x0614053c
    64c0:	201b0501 	andscs	r0, fp, r1, lsl #10
    64c4:	062e0905 	strteq	r0, [lr], -r5, lsl #18
    64c8:	0e054d31 	mcreq	13, 0, r4, cr5, cr1, {1}
    64cc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    64d0:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    64d4:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    64d8:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    64dc:	2f060905 	svccs	0x00060905
    64e0:	01061c05 	tsteq	r6, r5, lsl #24
    64e4:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    64e8:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    64ec:	16052106 	strne	r2, [r5], -r6, lsl #2
    64f0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    64f4:	14052406 	strne	r2, [r5], #-1030	; 0xfffffbfa
    64f8:	1b050106 	blne	146918 <_Min_Heap_Size+0x146118>
    64fc:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
    6500:	03060705 	movweq	r0, #26373	; 0x6705
    6504:	0c053c0c 	stceq	12, cr3, [r5], {12}
    6508:	07050106 	streq	r0, [r5, -r6, lsl #2]
    650c:	30052106 	andcc	r2, r5, r6, lsl #2
    6510:	23050106 	movwcs	r0, #20742	; 0x5106
    6514:	2e0c0520 	cfsh32cs	mvfx0, mvfx12, #16
    6518:	2f060705 	svccs	0x00060705
    651c:	01061a05 	tsteq	r6, r5, lsl #20
    6520:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    6524:	0c052e2e 	stceq	14, cr2, [r5], {46}	; 0x2e
    6528:	06070520 	streq	r0, [r7], -r0, lsr #10
    652c:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    6530:	06070501 	streq	r0, [r7], -r1, lsl #10
    6534:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    6538:	20090501 	andcs	r0, r9, r1, lsl #10
    653c:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    6540:	14204a58 	strtne	r4, [r0], #-2648	; 0xfffff5a8
    6544:	01062805 	tsteq	r6, r5, lsl #16
    6548:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    654c:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    6550:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    6554:	19052e20 	stmdbne	r5, {r5, r9, sl, fp, sp}
    6558:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    655c:	2f060905 	svccs	0x00060905
    6560:	01061205 	tsteq	r6, r5, lsl #4
    6564:	02001d05 	andeq	r1, r0, #320	; 0x140
    6568:	004a0104 	subeq	r0, sl, r4, lsl #2
    656c:	4a030402 	bmi	c757c <_Min_Heap_Size+0xc6d7c>
    6570:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6574:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6578:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    657c:	004a0904 	subeq	r0, sl, r4, lsl #18
    6580:	4a0b0402 	bmi	2c7590 <_Min_Heap_Size+0x2c6d90>
    6584:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    6588:	203c584a 	eorscs	r5, ip, sl, asr #16
    658c:	27030105 	strcs	r0, [r3, -r5, lsl #2]
    6590:	08023c9e 	stmdaeq	r2, {r1, r2, r3, r4, r7, sl, fp, ip, sp}
    6594:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6598:	02050001 	andeq	r0, r5, #1
    659c:	00000000 	andeq	r0, r0, r0
    65a0:	0102a603 	tsteq	r2, r3, lsl #12
    65a4:	03050106 	movweq	r0, #20742	; 0x5106
    65a8:	13133d06 	tstne	r3, #384	; 0x180
    65ac:	02001513 	andeq	r1, r0, #79691776	; 0x4c00000
    65b0:	3c060104 	stfccs	f0, [r6], {4}
    65b4:	02040200 	andeq	r0, r4, #0, 4
    65b8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    65bc:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    65c0:	004a0404 	subeq	r0, sl, r4, lsl #8
    65c4:	4a050402 	bmi	1475d4 <_Min_Heap_Size+0x146dd4>
    65c8:	06040200 	streq	r0, [r4], -r0, lsl #4
    65cc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    65d0:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    65d4:	004a0804 	subeq	r0, sl, r4, lsl #16
    65d8:	4a090402 	bmi	2475e8 <_Min_Heap_Size+0x246de8>
    65dc:	09040200 	stmdbeq	r4, {r9}
    65e0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    65e4:	1d052009 	stcne	0, cr2, [r5, #-36]	; 0xffffffdc
    65e8:	01040200 	mrseq	r0, R12_usr
    65ec:	2e2e0f03 	cdpcs	15, 2, cr0, cr14, cr3, {0}
    65f0:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    65f4:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    65f8:	09052020 	stmdbeq	r5, {r5, sp}
    65fc:	20040200 	andcs	r0, r4, r0, lsl #4
    6600:	0607052e 	streq	r0, [r7], -lr, lsr #10
    6604:	052e1103 	streq	r1, [lr, #-259]!	; 0xfffffefd
    6608:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    660c:	2b052038 	blcs	14e6f4 <_Min_Heap_Size+0x14def4>
    6610:	3c140520 	cfldr32cc	mvfx0, [r4], {32}
    6614:	3f060705 	svccc	0x00060705
    6618:	01062205 	tsteq	r6, r5, lsl #4
    661c:	05583005 	ldrbeq	r3, [r8, #-5]
    6620:	2c052e4d 	stccs	14, cr2, [r5], {77}	; 0x4d
    6624:	4a22052e 	bmi	887ae4 <_Min_Heap_Size+0x8872e4>
    6628:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    662c:	01061405 	tsteq	r6, r5, lsl #8
    6630:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    6634:	01061605 	tsteq	r6, r5, lsl #12
    6638:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    663c:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    6640:	002e0501 	eoreq	r0, lr, r1, lsl #10
    6644:	06020402 	streq	r0, [r2], -r2, lsl #8
    6648:	054a5703 	strbeq	r5, [sl, #-1795]	; 0xfffff8fd
    664c:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    6650:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    6654:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    6658:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    665c:	04020003 	streq	r0, [r2], #-3
    6660:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6664:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    6668:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    666c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6670:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6674:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6678:	06010607 	streq	r0, [r1], -r7, lsl #12
    667c:	0625053f 			; <UNDEFINED> instruction: 0x0625053f
    6680:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    6684:	59060705 	stmdbpl	r6, {r0, r2, r8, r9, sl}
    6688:	01062805 	tsteq	r6, r5, lsl #16
    668c:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
    6690:	0b052015 	bleq	14e6ec <_Min_Heap_Size+0x14deec>
    6694:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    6698:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    669c:	001d0501 	andseq	r0, sp, r1, lsl #10
    66a0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    66a4:	03040200 	movweq	r0, #16896	; 0x4200
    66a8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    66ac:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    66b0:	004a0704 	subeq	r0, sl, r4, lsl #14
    66b4:	4a090402 	bmi	2476c4 <_Min_Heap_Size+0x246ec4>
    66b8:	0b040200 	bleq	106ec0 <_Min_Heap_Size+0x1066c0>
    66bc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    66c0:	054a4a0d 	strbeq	r4, [sl, #-2573]	; 0xfffff5f3
    66c4:	05d90609 	ldrbeq	r0, [r9, #1545]	; 0x609
    66c8:	2e010613 	mcrcs	6, 0, r0, cr1, cr3, {0}
    66cc:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    66d0:	01061305 	tsteq	r6, r5, lsl #6
    66d4:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    66d8:	01061405 	tsteq	r6, r5, lsl #8
    66dc:	4b060905 	blmi	188af8 <_Min_Heap_Size+0x1882f8>
    66e0:	01061405 	tsteq	r6, r5, lsl #8
    66e4:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    66e8:	06280513 			; <UNDEFINED> instruction: 0x06280513
    66ec:	03010501 	movweq	r0, #5377	; 0x1501
    66f0:	02209e14 	eoreq	r9, r0, #20, 28	; 0x140
    66f4:	01010008 	tsteq	r1, r8
    66f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    66fc:	00000002 	andeq	r0, r0, r2
    6700:	02f70300 	rscseq	r0, r7, #0, 6
    6704:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6708:	152f0603 	strne	r0, [pc, #-1539]!	; 610d <_Min_Heap_Size+0x590d>
    670c:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
    6710:	20050501 	andcs	r0, r5, r1, lsl #10
    6714:	05300f05 	ldreq	r0, [r0, #-3845]!	; 0xfffff0fb
    6718:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    671c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    6720:	04020003 	streq	r0, [r2], #-3
    6724:	20750303 	rsbscs	r0, r5, r3, lsl #6
    6728:	03040200 	movweq	r0, #16896	; 0x4200
    672c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6730:	0f052003 	svceq	0x00052003
    6734:	00050244 	andeq	r0, r5, r4, asr #4
    6738:	01050101 	tsteq	r5, r1, lsl #2
    673c:	00020500 	andeq	r0, r2, r0, lsl #10
    6740:	03000000 	movweq	r0, #0
    6744:	0601039a 			; <UNDEFINED> instruction: 0x0601039a
    6748:	06030501 	streq	r0, [r3], -r1, lsl #10
    674c:	05302f3e 	ldreq	r2, [r0, #-3902]!	; 0xfffff0c2
    6750:	06010605 	streq	r0, [r1], -r5, lsl #12
    6754:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    6758:	26010501 	strcs	r0, [r1], -r1, lsl #10
    675c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    6760:	75030304 	strvc	r0, [r3, #-772]	; 0xfffffcfc
    6764:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6768:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    676c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6770:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6774:	01040200 	mrseq	r0, R12_usr
    6778:	06050521 	streq	r0, [r5], -r1, lsr #10
    677c:	0626056e 	strteq	r0, [r6], -lr, ror #10
    6780:	20110501 	andscs	r0, r1, r1, lsl #10
    6784:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
    6788:	01010004 	tsteq	r1, r4
    678c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6790:	00000002 	andeq	r0, r0, r2
    6794:	03b10300 			; <UNDEFINED> instruction: 0x03b10300
    6798:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    679c:	152f0603 	strne	r0, [pc, #-1539]!	; 61a1 <_Min_Heap_Size+0x59a1>
    67a0:	06070531 			; <UNDEFINED> instruction: 0x06070531
    67a4:	06030501 	streq	r0, [r3], -r1, lsl #10
    67a8:	06170523 	ldreq	r0, [r7], -r3, lsr #10
    67ac:	2e3b0501 	cdpcs	5, 3, cr0, cr11, cr1, {0}
    67b0:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    67b4:	01052e0f 	tsteq	r5, pc, lsl #28
    67b8:	00030521 	andeq	r0, r3, r1, lsr #10
    67bc:	03030402 	movweq	r0, #13314	; 0x3402
    67c0:	02002079 	andeq	r2, r0, #121	; 0x79
    67c4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    67c8:	20030402 	andcs	r0, r3, r2, lsl #8
    67cc:	01000602 	tsteq	r0, r2, lsl #12
    67d0:	00010501 	andeq	r0, r1, r1, lsl #10
    67d4:	00000205 	andeq	r0, r0, r5, lsl #4
    67d8:	ca030000 	bgt	c67e0 <_Min_Heap_Size+0xc5fe0>
    67dc:	01060103 	tsteq	r6, r3, lsl #2
    67e0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    67e4:	01061105 	tsteq	r6, r5, lsl #2
    67e8:	3f060305 	svccc	0x00060305
    67ec:	06070531 			; <UNDEFINED> instruction: 0x06070531
    67f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    67f4:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    67f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    67fc:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    6800:	06030501 	streq	r0, [r3], -r1, lsl #10
    6804:	060f0522 	streq	r0, [pc], -r2, lsr #10
    6808:	06030501 	streq	r0, [r3], -r1, lsl #10
    680c:	060e0530 			; <UNDEFINED> instruction: 0x060e0530
    6810:	20070501 	andcs	r0, r7, r1, lsl #10
    6814:	23060205 	movwcs	r0, #25093	; 0x6205
    6818:	01060b05 	tsteq	r6, r5, lsl #22
    681c:	05200405 	streq	r0, [r0, #-1029]!	; 0xfffffbfb
    6820:	01053e0c 	tsteq	r5, ip, lsl #28
    6824:	00030526 	andeq	r0, r3, r6, lsr #10
    6828:	03030402 	movweq	r0, #13314	; 0x3402
    682c:	02002e6a 	andeq	r2, r0, #1696	; 0x6a0
    6830:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6834:	20030402 	andcs	r0, r3, r2, lsl #8
    6838:	14030c05 	strne	r0, [r3], #-3077	; 0xfffff3fb
    683c:	0005023c 	andeq	r0, r5, ip, lsr r2
    6840:	01050101 	tsteq	r5, r1, lsl #2
    6844:	00020500 	andeq	r0, r2, r0, lsl #10
    6848:	03000000 	movweq	r0, #0
    684c:	050103fb 	streq	r0, [r1, #-1019]	; 0xfffffc05
    6850:	01051403 	tsteq	r5, r3, lsl #8
    6854:	01021606 	tsteq	r2, r6, lsl #12
    6858:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    685c:	02050001 	andeq	r0, r5, #1
    6860:	00000000 	andeq	r0, r0, r0
    6864:	0103ec03 	tsteq	r3, r3, lsl #24
    6868:	03050106 	movweq	r0, #20742	; 0x5106
    686c:	06052206 	streq	r2, [r5], -r6, lsl #4
    6870:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6874:	3301052e 	movwcc	r0, #5422	; 0x152e
    6878:	1d060505 	cfstr32ne	mvfx0, [r6, #-20]	; 0xffffffec
    687c:	0601052f 	streq	r0, [r1], -pc, lsr #10
    6880:	00040230 	andeq	r0, r4, r0, lsr r2
    6884:	10100101 	andsne	r0, r0, r1, lsl #2
    6888:	00030000 	andeq	r0, r3, r0
    688c:	0000020f 	andeq	r0, r0, pc, lsl #4
    6890:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6894:	0101000d 	tsteq	r1, sp
    6898:	00000101 	andeq	r0, r0, r1, lsl #2
    689c:	00000100 	andeq	r0, r0, r0, lsl #2
    68a0:	2f2e2e01 	svccs	0x002e2e01
    68a4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    68a8:	2f737265 	svccs	0x00737265
    68ac:	334d5453 	movtcc	r5, #54355	; 0xd453
    68b0:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    68b4:	41485f78 	hvcmi	34296	; 0x85f8
    68b8:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    68bc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    68c0:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    68c4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    68c8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    68cc:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    68d0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    68d4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    68d8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    68dc:	5f6d7261 	svcpl	0x006d7261
    68e0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    68e4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    68e8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    68ec:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    68f0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    68f4:	30312d69 	eorscc	r2, r1, r9, ror #26
    68f8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    68fc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    6900:	615c3031 	cmpvs	ip, r1, lsr r0
    6904:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6908:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    690c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6910:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    6914:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6918:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    691c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    6920:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    6924:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    6928:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    692c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    6930:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    6934:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    6938:	5f6d7261 	svcpl	0x006d7261
    693c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    6940:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    6944:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6948:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    694c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6950:	30312d69 	eorscc	r2, r1, r9, ror #26
    6954:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    6958:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    695c:	615c3031 	cmpvs	ip, r1, lsr r0
    6960:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6964:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6968:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    696c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    6970:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6974:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    6978:	2f2e2e00 	svccs	0x002e2e00
    697c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6980:	2f737265 	svccs	0x00737265
    6984:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    6988:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    698c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    6990:	2f54532f 	svccs	0x0054532f
    6994:	334d5453 	movtcc	r5, #54355	; 0xd453
    6998:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    699c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    69a0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    69a4:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    69a8:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    69ac:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    69b0:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    69b4:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    69b8:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    69bc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 69c4 <_Min_Heap_Size+0x61c4>
    69c0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    69c4:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    69c8:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    69cc:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    69d0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    69d4:	73000063 	movwvc	r0, #99	; 0x63
    69d8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    69dc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    69e0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    69e4:	616d645f 	cmnvs	sp, pc, asr r4
    69e8:	0100632e 	tsteq	r0, lr, lsr #6
    69ec:	645f0000 	ldrbvs	r0, [pc], #-0	; 69f4 <_Min_Heap_Size+0x61f4>
    69f0:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    69f4:	745f746c 	ldrbvc	r7, [pc], #-1132	; 69fc <_Min_Heap_Size+0x61fc>
    69f8:	73657079 	cmnvc	r5, #121	; 0x79
    69fc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    6a00:	735f0000 	cmpvc	pc, #0
    6a04:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    6a08:	00682e74 	rsbeq	r2, r8, r4, ror lr
    6a0c:	73000003 	movwvc	r0, #3
    6a10:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6a14:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    6a18:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    6a1c:	00000400 	andeq	r0, r0, r0, lsl #8
    6a20:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6a24:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6a28:	00682e78 	rsbeq	r2, r8, r8, ror lr
    6a2c:	73000004 	movwvc	r0, #4
    6a30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6a34:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6a38:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    6a3c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    6a40:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6a44:	74730000 	ldrbtvc	r0, [r3], #-0
    6a48:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6a4c:	5f787834 	svcpl	0x00787834
    6a50:	5f6c6168 	svcpl	0x006c6168
    6a54:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    6a58:	00050068 	andeq	r0, r5, r8, rrx
    6a5c:	73797300 	cmnvc	r9, #0, 6
    6a60:	5f6d6574 	svcpl	0x006d6574
    6a64:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6a68:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6a6c:	00682e78 	rsbeq	r2, r8, r8, ror lr
    6a70:	73000004 	movwvc	r0, #4
    6a74:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6a78:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6a7c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    6a80:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6a84:	74730000 	ldrbtvc	r0, [r3], #-0
    6a88:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6a8c:	5f787834 	svcpl	0x00787834
    6a90:	5f6c6168 	svcpl	0x006c6168
    6a94:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    6a98:	0600682e 	streq	r6, [r0], -lr, lsr #16
    6a9c:	05000000 	streq	r0, [r0, #-0]
    6aa0:	02050001 	andeq	r0, r5, #1
    6aa4:	00000000 	andeq	r0, r0, r0
    6aa8:	0108ff03 	tsteq	r8, r3, lsl #30	; <UNPREDICTABLE>
    6aac:	03050106 	movweq	r0, #20742	; 0x5106
    6ab0:	07052206 	streq	r2, [r5, -r6, lsl #4]
    6ab4:	16050106 	strne	r0, [r5], -r6, lsl #2
    6ab8:	06030520 	streq	r0, [r3], -r0, lsr #10
    6abc:	0607054d 	streq	r0, [r7], -sp, asr #10
    6ac0:	20180501 	andscs	r0, r8, r1, lsl #10
    6ac4:	23060305 	movwcs	r0, #25349	; 0x6305
    6ac8:	01061105 	tsteq	r6, r5, lsl #2
    6acc:	06200505 	strteq	r0, [r0], -r5, lsl #10
    6ad0:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    6ad4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    6ad8:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    6adc:	09052306 	stmdbeq	r5, {r1, r2, r8, r9, sp}
    6ae0:	1a050106 	bne	146f00 <_Min_Heap_Size+0x146700>
    6ae4:	22010520 	andcs	r0, r1, #32, 10	; 0x8000000
    6ae8:	03060505 	movweq	r0, #25861	; 0x6505
    6aec:	09052e72 	stmdbeq	r5, {r1, r4, r5, r6, r9, sl, fp, sp}
    6af0:	19050106 	stmdbne	r5, {r1, r2, r8}
    6af4:	06050520 	streq	r0, [r5], -r0, lsr #10
    6af8:	06090523 	streq	r0, [r9], -r3, lsr #10
    6afc:	201a0501 	andscs	r0, sl, r1, lsl #10
    6b00:	01000202 	tsteq	r0, r2, lsl #4
    6b04:	00010501 	andeq	r0, r1, r1, lsl #10
    6b08:	00000205 	andeq	r0, r0, r5, lsl #4
    6b0c:	a1030000 	mrsge	r0, (UNDEF: 3)
    6b10:	01060109 	tsteq	r6, r9, lsl #2
    6b14:	21060305 	tstcs	r6, r5, lsl #6
    6b18:	01062c05 	tsteq	r6, r5, lsl #24
    6b1c:	05203705 	streq	r3, [r0, #-1797]!	; 0xfffff8fb
    6b20:	0c052040 	stceq	0, cr2, [r5], {64}	; 0x40
    6b24:	06030520 	streq	r0, [r3], -r0, lsr #10
    6b28:	2905134d 	stmdbcs	r5, {r0, r2, r3, r6, r8, r9, ip}
    6b2c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    6b30:	0603052e 	streq	r0, [r3], -lr, lsr #10
    6b34:	06060522 	streq	r0, [r6], -r2, lsr #10
    6b38:	06050501 	streq	r0, [r5], -r1, lsl #10
    6b3c:	063a0531 			; <UNDEFINED> instruction: 0x063a0531
    6b40:	4a510501 	bmi	1447f4c <_Min_Heap_Size+0x144774c>
    6b44:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    6b48:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    6b4c:	20130601 	andscs	r0, r3, r1, lsl #12
    6b50:	38060505 	stmdacc	r6, {r0, r2, r8, sl}
    6b54:	01063905 	tsteq	r6, r5, lsl #18
    6b58:	024a1d05 	subeq	r1, sl, #320	; 0x140
    6b5c:	01010007 	tsteq	r1, r7
    6b60:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6b64:	00000002 	andeq	r0, r0, r2
    6b68:	09bd0300 	ldmibeq	sp!, {r8, r9}
    6b6c:	13030501 	movwne	r0, #13569	; 0x3501
    6b70:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    6b74:	06030501 	streq	r0, [r3], -r1, lsl #10
    6b78:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    6b7c:	20050501 	andcs	r0, r5, r1, lsl #10
    6b80:	66062206 	strvs	r2, [r6], -r6, lsl #4
    6b84:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    6b88:	01061605 	tsteq	r6, r5, lsl #12
    6b8c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6b90:	3c760315 	ldclcc	3, cr0, [r6], #-84	; 0xffffffac
    6b94:	06070520 	streq	r0, [r7], -r0, lsr #10
    6b98:	05201003 	streq	r1, [r0, #-3]!
    6b9c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    6ba0:	1505200a 	strne	r2, [r5, #-10]
    6ba4:	203c7003 	eorscs	r7, ip, r3
    6ba8:	03060805 	movweq	r0, #26629	; 0x6805
    6bac:	0b05201d 	bleq	14ec28 <_Min_Heap_Size+0x14e428>
    6bb0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6bb4:	3c1c0306 	ldccc	3, cr0, [ip], {6}
    6bb8:	05520705 	ldrbeq	r0, [r2, #-1797]	; 0xfffff8fb
    6bbc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6bc0:	1505200a 	strne	r2, [r5, #-10]
    6bc4:	3c7fbf03 	ldclcc	15, cr11, [pc], #-12	; 6bc0 <_Min_Heap_Size+0x63c0>
    6bc8:	06050520 	streq	r0, [r5], -r0, lsr #10
    6bcc:	06201f03 	strteq	r1, [r0], -r3, lsl #30
    6bd0:	06070574 			; <UNDEFINED> instruction: 0x06070574
    6bd4:	06160527 	ldreq	r0, [r6], -r7, lsr #10
    6bd8:	200a0501 	andcs	r0, sl, r1, lsl #10
    6bdc:	5a031505 	bpl	cbff8 <_Min_Heap_Size+0xcb7f8>
    6be0:	0705203c 	smladxeq	r5, ip, r0, r2
    6be4:	202c0306 	eorcs	r0, ip, r6, lsl #6
    6be8:	01061505 	tsteq	r6, r5, lsl #10
    6bec:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6bf0:	3c540315 	mrrccc	3, 1, r0, r4, cr5
    6bf4:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    6bf8:	2620200c 	strtcs	r2, [r0], -ip
    6bfc:	030e0520 	movweq	r0, #58656	; 0xe520
    6c00:	05202011 	streq	r2, [r0, #-17]!	; 0xffffffef
    6c04:	26202510 			; <UNDEFINED> instruction: 0x26202510
    6c08:	030e0520 	movweq	r0, #58656	; 0xe520
    6c0c:	05202010 	streq	r2, [r0, #-16]!
    6c10:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    6c14:	200a0310 	andcs	r0, sl, r0, lsl r3
    6c18:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    6c1c:	13060105 	movwne	r0, #24837	; 0x6105
    6c20:	01000102 	tsteq	r0, r2, lsl #2
    6c24:	00010501 	andeq	r0, r1, r1, lsl #10
    6c28:	00000205 	andeq	r0, r0, r5, lsl #4
    6c2c:	aa030000 	bge	c6c34 <_Min_Heap_Size+0xc6434>
    6c30:	01060101 	tsteq	r6, r1, lsl #2
    6c34:	2f060305 	svccs	0x00060305
    6c38:	06180513 			; <UNDEFINED> instruction: 0x06180513
    6c3c:	06030501 	streq	r0, [r3], -r1, lsl #10
    6c40:	0505152f 	streq	r1, [r5, #-1327]	; 0xfffffad1
    6c44:	03050106 	movweq	r0, #20742	; 0x5106
    6c48:	02005006 	andeq	r5, r0, #6
    6c4c:	4a060104 	bmi	187064 <_Min_Heap_Size+0x186864>
    6c50:	02040200 	andeq	r0, r4, #0, 4
    6c54:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c58:	02003c03 	andeq	r3, r0, #768	; 0x300
    6c5c:	003c0404 	eorseq	r0, ip, r4, lsl #8
    6c60:	3c050402 	cfstrscc	mvf0, [r5], {2}
    6c64:	06040200 	streq	r0, [r4], -r0, lsl #4
    6c68:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c6c:	02003c07 	andeq	r3, r0, #1792	; 0x700
    6c70:	003c0804 	eorseq	r0, ip, r4, lsl #16
    6c74:	4a090402 	bmi	247c84 <_Min_Heap_Size+0x247484>
    6c78:	0a040200 	beq	107480 <_Min_Heap_Size+0x106c80>
    6c7c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c80:	02003c0b 	andeq	r3, r0, #2816	; 0xb00
    6c84:	003c0c04 	eorseq	r0, ip, r4, lsl #24
    6c88:	3c0d0402 	cfstrscc	mvf0, [sp], {2}
    6c8c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    6c90:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c94:	02003c0f 	andeq	r3, r0, #3840	; 0xf00
    6c98:	003c1004 	eorseq	r1, ip, r4
    6c9c:	2e100402 	cfmulscs	mvf0, mvf0, mvf2
    6ca0:	02002f06 	andeq	r2, r0, #6, 30
    6ca4:	2e060104 	adfcss	f0, f6, f4
    6ca8:	02040200 	andeq	r0, r4, #0, 4
    6cac:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6cb0:	02003c03 	andeq	r3, r0, #768	; 0x300
    6cb4:	003c0404 	eorseq	r0, ip, r4, lsl #8
    6cb8:	3c050402 	cfstrscc	mvf0, [r5], {2}
    6cbc:	06040200 	streq	r0, [r4], -r0, lsl #4
    6cc0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6cc4:	3d063c07 	stccc	12, cr3, [r6, #-28]	; 0xffffffe4
    6cc8:	01040200 	mrseq	r0, R12_usr
    6ccc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6cd0:	062e0204 	strteq	r0, [lr], -r4, lsl #4
    6cd4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    6cd8:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    6cdc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    6ce0:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    6ce4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    6ce8:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6cec:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6cf0:	02003d06 	andeq	r3, r0, #384	; 0x180
    6cf4:	2e060104 	adfcss	f0, f6, f4
    6cf8:	02040200 	andeq	r0, r4, #0, 4
    6cfc:	003d063c 	eorseq	r0, sp, ip, lsr r6
    6d00:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d04:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6d08:	2f063c02 	svccs	0x00063c02
    6d0c:	01040200 	mrseq	r0, R12_usr
    6d10:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6d14:	003c0204 	eorseq	r0, ip, r4, lsl #4
    6d18:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6d1c:	02003d06 	andeq	r3, r0, #384	; 0x180
    6d20:	2e060104 	adfcss	f0, f6, f4
    6d24:	10053106 	andne	r3, r5, r6, lsl #2
    6d28:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6d2c:	3d220620 	stccc	6, cr0, [r2, #-128]!	; 0xffffff80
    6d30:	01040200 	mrseq	r0, R12_usr
    6d34:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6d38:	003c0204 	eorseq	r0, ip, r4, lsl #4
    6d3c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6d40:	02003d06 	andeq	r3, r0, #384	; 0x180
    6d44:	2e060104 	adfcss	f0, f6, f4
    6d48:	02040200 	andeq	r0, r4, #0, 4
    6d4c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6d50:	03053c03 	movweq	r3, #23555	; 0x5c03
    6d54:	0f054006 	svceq	0x00054006
    6d58:	03050106 	movweq	r0, #20742	; 0x5106
    6d5c:	3c013f06 	stccc	15, cr3, [r1], {6}
    6d60:	08055b15 	stmdaeq	r5, {r0, r2, r4, r8, r9, fp, ip, lr}
    6d64:	060e0501 	streq	r0, [lr], -r1, lsl #10
    6d68:	20180501 	andscs	r0, r8, r1, lsl #10
    6d6c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    6d70:	053f0605 	ldreq	r0, [pc, #-1541]!	; 6773 <_Min_Heap_Size+0x5f73>
    6d74:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    6d78:	07052e17 	smladeq	r5, r7, lr, r2
    6d7c:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
    6d80:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6d84:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    6d88:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    6d8c:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    6d90:	ce030601 	cfmadd32gt	mvax0, mvfx0, mvfx3, mvfx1
    6d94:	03050100 	movweq	r0, #20736	; 0x5100
    6d98:	08040200 	stmdaeq	r4, {r9}
    6d9c:	207f8b03 	rsbscs	r8, pc, r3, lsl #22
    6da0:	03040200 	movweq	r0, #16896	; 0x4200
    6da4:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6da8:	02005902 	andeq	r5, r0, #32768	; 0x8000
    6dac:	00590204 	subseq	r0, r9, r4, lsl #4
    6db0:	59030402 	stmdbpl	r3, {r1, sl}
    6db4:	03040200 	movweq	r0, #16896	; 0x4200
    6db8:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6dbc:	02005903 	andeq	r5, r0, #49152	; 0xc000
    6dc0:	00590404 	subseq	r0, r9, r4, lsl #8
    6dc4:	59020402 	stmdbpl	r2, {r1, sl}
    6dc8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6dcc:	005d0104 	subseq	r0, sp, r4, lsl #2
    6dd0:	59040402 	stmdbpl	r4, {r1, sl}
    6dd4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6dd8:	06030559 			; <UNDEFINED> instruction: 0x06030559
    6ddc:	05581d03 	ldrbeq	r1, [r8, #-3331]	; 0xfffff2fd
    6de0:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6de4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6de8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6dec:	05340603 	ldreq	r0, [r4, #-1539]!	; 0xfffff9fd
    6df0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    6df4:	2a052036 	bcs	14eed4 <_Min_Heap_Size+0x14e6d4>
    6df8:	21150520 	tstcs	r5, r0, lsr #10
    6dfc:	051f4805 	ldreq	r4, [pc, #-2053]	; 65ff <_Min_Heap_Size+0x5dff>
    6e00:	2a052136 	bcs	14f2e0 <_Min_Heap_Size+0x14eae0>
    6e04:	21150520 	tstcs	r5, r0, lsr #10
    6e08:	051f4805 	ldreq	r4, [pc, #-2053]	; 660b <_Min_Heap_Size+0x5e0b>
    6e0c:	2a052136 	bcs	14f2ec <_Min_Heap_Size+0x14eaec>
    6e10:	21150520 	tstcs	r5, r0, lsr #10
    6e14:	051f4805 	ldreq	r4, [pc, #-2053]	; 6617 <_Min_Heap_Size+0x5e17>
    6e18:	2a052136 	bcs	14f2f8 <_Min_Heap_Size+0x14eaf8>
    6e1c:	1d070520 	cfstr32ne	mvfx0, [r7, #-128]	; 0xffffff80
    6e20:	26060305 	strcs	r0, [r6], -r5, lsl #6
    6e24:	01061005 	tsteq	r6, r5
    6e28:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    6e2c:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
    6e30:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6e34:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6e38:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    6e3c:	03052007 	movweq	r2, #20487	; 0x5007
    6e40:	07052306 	streq	r2, [r5, -r6, lsl #6]
    6e44:	03050106 	movweq	r0, #20742	; 0x5106
    6e48:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    6e4c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6e50:	06030520 	streq	r0, [r3], -r0, lsr #10
    6e54:	06050523 	streq	r0, [r5], -r3, lsr #10
    6e58:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    6e5c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6e60:	05052009 	streq	r2, [r5, #-9]
    6e64:	13052406 	movwne	r2, #21510	; 0x5406
    6e68:	08050106 	stmdaeq	r5, {r1, r2, r8}
    6e6c:	06070520 	streq	r0, [r7], -r0, lsr #10
    6e70:	060b0522 	streq	r0, [fp], -r2, lsr #10
    6e74:	3c0a0501 	cfstr32cc	mvfx0, [sl], {1}
    6e78:	03060305 	movweq	r0, #25349	; 0x6305
    6e7c:	1705200e 	strne	r2, [r5, -lr]
    6e80:	03050106 	movweq	r0, #20742	; 0x5106
    6e84:	20052406 	andcs	r2, r5, r6, lsl #8
    6e88:	03050106 	movweq	r0, #20742	; 0x5106
    6e8c:	1d053f06 	stcne	15, cr3, [r5, #-24]	; 0xffffffe8
    6e90:	16050106 	strne	r0, [r5], -r6, lsl #2
    6e94:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    6e98:	23060305 	movwcs	r0, #25349	; 0x6305
    6e9c:	01061305 	tsteq	r6, r5, lsl #6
    6ea0:	06030520 	streq	r0, [r3], -r0, lsr #10
    6ea4:	060f0523 	streq	r0, [pc], -r3, lsr #10
    6ea8:	06030501 	streq	r0, [r3], -r1, lsl #10
    6eac:	060a053e 			; <UNDEFINED> instruction: 0x060a053e
    6eb0:	06050501 	streq	r0, [r5], -r1, lsl #10
    6eb4:	05744a03 	ldrbeq	r4, [r4, #-2563]!	; 0xfffff5fd
    6eb8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6ebc:	2105202d 	tstcs	r5, sp, lsr #32
    6ec0:	20090520 	andcs	r0, r9, r0, lsr #10
    6ec4:	1c030620 	stcne	6, cr0, [r3], {32}
    6ec8:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    6ecc:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ed0:	06150531 			; <UNDEFINED> instruction: 0x06150531
    6ed4:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ed8:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    6edc:	030c0501 	movweq	r0, #50433	; 0xc501
    6ee0:	20207f9c 	mlacs	r0, ip, pc, r7	; <UNPREDICTABLE>
    6ee4:	01000102 	tsteq	r0, r2, lsl #2
    6ee8:	00010501 	andeq	r0, r1, r1, lsl #10
    6eec:	00000205 	andeq	r0, r0, r5, lsl #4
    6ef0:	b5030000 	strlt	r0, [r3, #-0]
    6ef4:	03050102 	movweq	r0, #20738	; 0x5102
    6ef8:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    6efc:	01050106 	tsteq	r5, r6, lsl #2
    6f00:	0603052a 	streq	r0, [r3], -sl, lsr #10
    6f04:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    6f08:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
    6f0c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    6f10:	00350603 	eorseq	r0, r5, r3, lsl #12
    6f14:	06010402 	streq	r0, [r1], -r2, lsl #8
    6f18:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6f1c:	02003c02 	andeq	r3, r0, #512	; 0x200
    6f20:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6f24:	3c040402 	cfstrscc	mvf0, [r4], {2}
    6f28:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6f2c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f30:	02003c06 	andeq	r3, r0, #1536	; 0x600
    6f34:	003c0704 	eorseq	r0, ip, r4, lsl #14
    6f38:	3c080402 	cfstrscc	mvf0, [r8], {2}
    6f3c:	09040200 	stmdbeq	r4, {r9}
    6f40:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6f44:	02003c0a 	andeq	r3, r0, #2560	; 0xa00
    6f48:	003c0b04 	eorseq	r0, ip, r4, lsl #22
    6f4c:	3c0c0402 	cfstrscc	mvf0, [ip], {2}
    6f50:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    6f54:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f58:	02003c0e 	andeq	r3, r0, #3584	; 0xe00
    6f5c:	003c0f04 	eorseq	r0, ip, r4, lsl #30
    6f60:	3c100402 	cfldrscc	mvf0, [r0], {2}
    6f64:	055b5b06 	ldrbeq	r5, [fp, #-2822]	; 0xfffff4fa
    6f68:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6f6c:	03052018 	movweq	r2, #20504	; 0x5018
    6f70:	07053106 	streq	r3, [r5, -r6, lsl #2]
    6f74:	18050106 	stmdane	r5, {r1, r2, r8}
    6f78:	06030520 	streq	r0, [r3], -r0, lsr #10
    6f7c:	06070523 	streq	r0, [r7], -r3, lsr #10
    6f80:	20180501 	andscs	r0, r8, r1, lsl #10
    6f84:	23060305 	movwcs	r0, #25349	; 0x6305
    6f88:	01060705 	tsteq	r6, r5, lsl #14
    6f8c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6f90:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6f94:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6f98:	03052018 	movweq	r2, #20504	; 0x5018
    6f9c:	07052306 	streq	r2, [r5, -r6, lsl #6]
    6fa0:	18050106 	stmdane	r5, {r1, r2, r8}
    6fa4:	06030520 	streq	r0, [r3], -r0, lsr #10
    6fa8:	06200531 			; <UNDEFINED> instruction: 0x06200531
    6fac:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fb0:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    6fb4:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fb8:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    6fbc:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fc0:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    6fc4:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fc8:	06200521 	strteq	r0, [r0], -r1, lsr #10
    6fcc:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fd0:	061b0521 	ldreq	r0, [fp], -r1, lsr #10
    6fd4:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fd8:	061b0521 	ldreq	r0, [fp], -r1, lsr #10
    6fdc:	06030501 	streq	r0, [r3], -r1, lsl #10
    6fe0:	061d0523 	ldreq	r0, [sp], -r3, lsr #10
    6fe4:	20160501 	andscs	r0, r6, r1, lsl #10
    6fe8:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    6fec:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6ff0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    6ff4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6ff8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6ffc:	01310603 	teqeq	r1, r3, lsl #12
    7000:	0a05142e 	beq	14c0c0 <_Min_Heap_Size+0x14b8c0>
    7004:	01050106 	tsteq	r5, r6, lsl #2
    7008:	030c0521 	movweq	r0, #50465	; 0xc521
    700c:	01052046 	tsteq	r5, r6, asr #32
    7010:	02203a03 	eoreq	r3, r0, #12288	; 0x3000
    7014:	01010006 	tsteq	r1, r6
    7018:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    701c:	00000002 	andeq	r0, r0, r2
    7020:	03970300 	orrseq	r0, r7, #0, 6
    7024:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7028:	15670603 	strbne	r0, [r7, #-1539]!	; 0xfffff9fd
    702c:	062e2006 	strteq	r2, [lr], -r6
    7030:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    7034:	004a0204 	subeq	r0, sl, r4, lsl #4
    7038:	3c020402 	cfstrscc	mvf0, [r2], {2}
    703c:	02040200 	andeq	r0, r4, #0, 4
    7040:	00210514 	eoreq	r0, r1, r4, lsl r5
    7044:	06020402 	streq	r0, [r2], -r2, lsl #8
    7048:	00050501 	andeq	r0, r5, r1, lsl #10
    704c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7050:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
    7054:	05153c01 	ldreq	r3, [r5, #-3073]	; 0xfffff3ff
    7058:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    705c:	03052301 	movweq	r2, #21249	; 0x5301
    7060:	01040200 	mrseq	r0, R12_usr
    7064:	002e6403 	eoreq	r6, lr, r3, lsl #8
    7068:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    706c:	01040200 	mrseq	r0, R12_usr
    7070:	06050520 	streq	r0, [r5], -r0, lsr #10
    7074:	06110544 	ldreq	r0, [r1], -r4, asr #10
    7078:	06050501 	streq	r0, [r5], -r1, lsl #10
    707c:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    7080:	06050501 	streq	r0, [r5], -r1, lsl #10
    7084:	1505694d 	strne	r6, [r5, #-2381]	; 0xfffff6b3
    7088:	586c0306 	stmdapl	ip!, {r1, r2, r8, r9}^
    708c:	02340305 	eorseq	r0, r4, #335544320	; 0x14000000
    7090:	01010005 	tsteq	r1, r5
    7094:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7098:	00000002 	andeq	r0, r0, r2
    709c:	03c30300 	biceq	r0, r3, #0, 6
    70a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    70a4:	15670603 	strbne	r0, [r7, #-1539]!	; 0xfffff9fd
    70a8:	01063805 	tsteq	r6, r5, lsl #16
    70ac:	31060305 	tstcc	r6, r5, lsl #6
    70b0:	062e2006 	strteq	r2, [lr], -r6
    70b4:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    70b8:	004a0204 	subeq	r0, sl, r4, lsl #4
    70bc:	3c020402 	cfstrscc	mvf0, [r2], {2}
    70c0:	02040200 	andeq	r0, r4, #0, 4
    70c4:	00210514 	eoreq	r0, r1, r4, lsl r5
    70c8:	06020402 	streq	r0, [r2], -r2, lsl #8
    70cc:	00050501 	andeq	r0, r5, r1, lsl #10
    70d0:	3c020402 	cfstrscc	mvf0, [r2], {2}
    70d4:	2e1c0306 	cdpcs	3, 1, cr0, cr12, cr6, {0}
    70d8:	05153c01 	ldreq	r3, [r5, #-3073]	; 0xfffff3ff
    70dc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    70e0:	03052401 	movweq	r2, #21505	; 0x5401
    70e4:	01040200 	mrseq	r0, R12_usr
    70e8:	002e5803 	eoreq	r5, lr, r3, lsl #16
    70ec:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    70f0:	01040200 	mrseq	r0, R12_usr
    70f4:	06050520 	streq	r0, [r5], -r0, lsr #10
    70f8:	06110544 	ldreq	r0, [r1], -r4, asr #10
    70fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    7100:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    7104:	06050501 	streq	r0, [r5], -r1, lsl #10
    7108:	1f056931 	svcne	0x00056931
    710c:	18050106 	stmdane	r5, {r1, r2, r8}
    7110:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    7114:	31060505 	tstcc	r6, r5, lsl #10
    7118:	01060905 	tsteq	r6, r5, lsl #18
    711c:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    7120:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    7124:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    7128:	22062007 	andcs	r2, r6, #7
    712c:	01060b05 	tsteq	r6, r5, lsl #22
    7130:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    7134:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    7138:	5e030615 	mcrpl	6, 0, r0, cr3, cr5, {0}
    713c:	03030558 	movweq	r0, #13656	; 0x3558
    7140:	04022e09 	streq	r2, [r2], #-3593	; 0xfffff1f7
    7144:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7148:	02050001 	andeq	r0, r5, #1
    714c:	08001400 	stmdaeq	r0, {sl, ip}
    7150:	01048103 	tsteq	r4, r3, lsl #2
    7154:	03050106 	movweq	r0, #20742	; 0x5106
    7158:	38053006 	stmdacc	r5, {r1, r2, ip, sp}
    715c:	03050106 	movweq	r0, #20742	; 0x5106
    7160:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    7164:	03050106 	movweq	r0, #20742	; 0x5106
    7168:	0a053006 	beq	153188 <_Min_Heap_Size+0x152988>
    716c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7170:	0530063c 	ldreq	r0, [r0, #-1596]!	; 0xfffff9c4
    7174:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7178:	01310605 	teqeq	r1, r5, lsl #12
    717c:	0c05143c 	cfstrseq	mvf1, [r5], {60}	; 0x3c
    7180:	01050106 	tsteq	r5, r6, lsl #2
    7184:	20202d03 	eorcs	r2, r0, r3, lsl #26
    7188:	03060505 	movweq	r0, #25861	; 0x6505
    718c:	09052058 	stmdbeq	r5, {r3, r4, r6, sp}
    7190:	19050106 	stmdbne	r5, {r1, r2, r8}
    7194:	06050520 	streq	r0, [r5], -r0, lsr #10
    7198:	0609054b 	streq	r0, [r9], -fp, asr #10
    719c:	20190501 	andscs	r0, r9, r1, lsl #10
    71a0:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    71a4:	01060d05 	tsteq	r6, r5, lsl #26
    71a8:	06200705 	strteq	r0, [r0], -r5, lsl #14
    71ac:	060b0522 	streq	r0, [fp], -r2, lsr #10
    71b0:	201b0501 	andscs	r0, fp, r1, lsl #10
    71b4:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    71b8:	010a055b 	tsteq	sl, fp, asr r5
    71bc:	01061005 	tsteq	r6, r5
    71c0:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    71c4:	0705200a 	streq	r2, [r5, -sl]
    71c8:	0b053f06 	bleq	156de8 <_Min_Heap_Size+0x1565e8>
    71cc:	19050106 	stmdbne	r5, {r1, r2, r8}
    71d0:	2009052e 	andcs	r0, r9, lr, lsr #10
    71d4:	19053106 	stmdbne	r5, {r1, r2, r8, ip, sp}
    71d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    71dc:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    71e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    71e4:	3c013f06 	stccc	15, cr3, [r1], {6}
    71e8:	06100514 			; <UNDEFINED> instruction: 0x06100514
    71ec:	00350501 	eorseq	r0, r5, r1, lsl #10
    71f0:	03010402 	movweq	r0, #5122	; 0x1402
    71f4:	2d052069 	stccs	0, cr2, [r5, #-420]	; 0xfffffe5c
    71f8:	01040200 	mrseq	r0, R12_usr
    71fc:	06050520 	streq	r0, [r5], -r0, lsr #10
    7200:	053c1c03 	ldreq	r1, [ip, #-3075]!	; 0xfffff3fd
    7204:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7208:	10052018 	andne	r2, r5, r8, lsl r0
    720c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7210:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    7214:	06050501 	streq	r0, [r5], -r1, lsl #10
    7218:	053c013f 	ldreq	r0, [ip, #-319]!	; 0xfffffec1
    721c:	0a051403 	beq	14c230 <_Min_Heap_Size+0x14ba30>
    7220:	01020106 	tsteq	r2, r6, lsl #2
    7224:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7228:	02050001 	andeq	r0, r5, #1
    722c:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
    7230:	0104c403 	tsteq	r4, r3, lsl #8
    7234:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    7238:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    723c:	30063c05 	andcc	r3, r6, r5, lsl #24
    7240:	01061505 	tsteq	r6, r5, lsl #10
    7244:	2f060505 	svccs	0x00060505
    7248:	01060c05 	tsteq	r6, r5, lsl #24
    724c:	06050520 	streq	r0, [r5], -r0, lsr #10
    7250:	06110525 	ldreq	r0, [r1], -r5, lsr #10
    7254:	06050501 	streq	r0, [r5], -r1, lsl #10
    7258:	5b03053f 	blpl	c875c <_Min_Heap_Size+0xc7f5c>
    725c:	01060a05 	tsteq	r6, r5, lsl #20
    7260:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    7264:	01010001 	tsteq	r1, r1
    7268:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    726c:	00000002 	andeq	r0, r0, r2
    7270:	04e20300 	strbteq	r0, [r2], #768	; 0x300
    7274:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7278:	13590603 	cmpne	r9, #3145728	; 0x300000
    727c:	06180513 			; <UNDEFINED> instruction: 0x06180513
    7280:	06030501 	streq	r0, [r3], -r1, lsl #10
    7284:	0514152f 	ldreq	r1, [r4, #-1327]	; 0xfffffad1
    7288:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    728c:	31063c05 	tstcc	r6, r5, lsl #24
    7290:	01061505 	tsteq	r6, r5, lsl #10
    7294:	2f060505 	svccs	0x00060505
    7298:	05133c01 	ldreq	r3, [r3, #-3073]	; 0xfffff3ff
    729c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    72a0:	00f10301 	rscseq	r0, r1, r1, lsl #6
    72a4:	03052e20 	movweq	r2, #24096	; 0x5e20
    72a8:	7f930306 	svcvc	0x00930306
    72ac:	060c0520 	streq	r0, [ip], -r0, lsr #10
    72b0:	20160501 	andscs	r0, r6, r1, lsl #10
    72b4:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    72b8:	05430603 	strbeq	r0, [r3, #-1539]	; 0xfffff9fd
    72bc:	06010605 	streq	r0, [r1], -r5, lsl #12
    72c0:	062e053f 			; <UNDEFINED> instruction: 0x062e053f
    72c4:	20140501 	andscs	r0, r4, r1, lsl #10
    72c8:	52060305 	andpl	r0, r6, #335544320	; 0x14000000
    72cc:	01062405 	tsteq	r6, r5, lsl #8
    72d0:	21060305 	tstcs	r6, r5, lsl #6
    72d4:	01060a05 	tsteq	r6, r5, lsl #20
    72d8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    72dc:	05010805 	streq	r0, [r1, #-2053]	; 0xfffff7fb
    72e0:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    72e4:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    72e8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    72ec:	05052001 	streq	r2, [r5, #-1]
    72f0:	07053f06 	streq	r3, [r5, -r6, lsl #30]
    72f4:	3e060106 	adfccs	f0, f6, f6
    72f8:	01060905 	tsteq	r6, r5, lsl #18
    72fc:	02001d05 	andeq	r1, r0, #320	; 0x140
    7300:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    7304:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    7308:	19052e01 	stmdbne	r5, {r0, r9, sl, fp, sp}
    730c:	01040200 	mrseq	r0, R12_usr
    7310:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7314:	052e1003 	streq	r1, [lr, #-3]!
    7318:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    731c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    7320:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    7324:	07052024 	streq	r2, [r5, -r4, lsr #32]
    7328:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    732c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7330:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    7334:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7338:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    733c:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    7340:	07052024 	streq	r2, [r5, -r4, lsr #32]
    7344:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    7348:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    734c:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    7350:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7354:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    7358:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    735c:	07052025 	streq	r2, [r5, -r5, lsr #32]
    7360:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    7364:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7368:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    736c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7370:	be030605 	cfmadd32lt	mvax0, mvfx0, mvfx3, mvfx5
    7374:	15052e7f 	strne	r2, [r5, #-3711]	; 0xfffff181
    7378:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    737c:	0c053d06 	stceq	13, cr3, [r5], {6}
    7380:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7384:	0c030605 	stceq	6, cr0, [r3], {5}
    7388:	062e0520 	strteq	r0, [lr], -r0, lsr #10
    738c:	20140501 	andscs	r0, r4, r1, lsl #10
    7390:	0609054a 	streq	r0, [r9], -sl, asr #10
    7394:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    7398:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    739c:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    73a0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    73a4:	013f0609 	teqeq	pc, r9, lsl #12
    73a8:	1005143c 	andne	r1, r5, ip, lsr r4
    73ac:	03050106 	movweq	r0, #20742	; 0x5106
    73b0:	2e230306 	cdpcs	3, 2, cr0, cr3, cr6, {0}
    73b4:	01060a05 	tsteq	r6, r5, lsl #20
    73b8:	06200505 	strteq	r0, [r0], -r5, lsl #10
    73bc:	060d0522 	streq	r0, [sp], -r2, lsr #10
    73c0:	20070501 	andcs	r0, r7, r1, lsl #10
    73c4:	03060305 	movweq	r0, #25349	; 0x6305
    73c8:	05053c12 	streq	r3, [r5, #-3090]	; 0xfffff3ee
    73cc:	3f060106 	svccc	0x00060106
    73d0:	01063f05 	tsteq	r6, r5, lsl #30
    73d4:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    73d8:	05052e10 	streq	r2, [r5, #-3600]	; 0xfffff1f0
    73dc:	11052206 	tstne	r5, r6, lsl #4
    73e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    73e4:	3c013f06 	stccc	15, cr3, [r1], {6}
    73e8:	1a060a05 	bne	189c04 <_Min_Heap_Size+0x189404>
    73ec:	03060705 	movweq	r0, #26373	; 0x6705
    73f0:	053f2e60 	ldreq	r2, [pc, #-3680]!	; 6598 <_Min_Heap_Size+0x5d98>
    73f4:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    73f8:	1205203a 	andne	r2, r5, #58	; 0x3a
    73fc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    7400:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    7404:	06070501 	streq	r0, [r7], -r1, lsl #10
    7408:	143c013f 	ldrtne	r0, [ip], #-319	; 0xfffffec1
    740c:	01060e05 	tsteq	r6, r5, lsl #28
    7410:	03060505 	movweq	r0, #25861	; 0x6505
    7414:	2c052012 	stccs	0, cr2, [r5], {18}
    7418:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    741c:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    7420:	02230a05 	eoreq	r0, r3, #20480	; 0x5000
    7424:	01010002 	tsteq	r1, r2
    7428:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    742c:	00000002 	andeq	r0, r0, r2
    7430:	05ea0300 	strbeq	r0, [sl, #768]!	; 0x300
    7434:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7438:	133d0603 	teqne	sp, #3145728	; 0x300000
    743c:	01061105 	tsteq	r6, r5, lsl #2
    7440:	2f060305 	svccs	0x00060305
    7444:	01062605 	tsteq	r6, r5, lsl #12
    7448:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    744c:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
    7450:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    7454:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    7458:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    745c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7460:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7464:	06052023 	streq	r2, [r5], -r3, lsr #32
    7468:	0605052e 	streq	r0, [r5], -lr, lsr #10
    746c:	06080530 			; <UNDEFINED> instruction: 0x06080530
    7470:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7474:	1b053f06 	blne	157094 <_Min_Heap_Size+0x156894>
    7478:	07050106 	streq	r0, [r5, -r6, lsl #2]
    747c:	2c054d06 	stccs	13, cr4, [r5], {6}
    7480:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    7484:	2e120520 	cfmul64cs	mvdx0, mvdx2, mvdx0
    7488:	23060705 	movwcs	r0, #26373	; 0x6705
    748c:	01061705 	tsteq	r6, r5, lsl #14
    7490:	4e060305 	cdpmi	3, 0, cr0, cr6, cr5, {0}
    7494:	01062a05 	tsteq	r6, r5, lsl #20
    7498:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    749c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    74a0:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    74a4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    74a8:	053f062e 	ldreq	r0, [pc, #-1582]!	; 6e82 <_Min_Heap_Size+0x6682>
    74ac:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    74b0:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    74b4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    74b8:	054e0603 	strbeq	r0, [lr, #-1539]	; 0xfffff9fd
    74bc:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    74c0:	06052024 	streq	r2, [r5], -r4, lsr #32
    74c4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    74c8:	06080530 			; <UNDEFINED> instruction: 0x06080530
    74cc:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    74d0:	12053f06 	andne	r3, r5, #6, 30
    74d4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    74d8:	17052306 	strne	r2, [r5, -r6, lsl #6]
    74dc:	03050106 	movweq	r0, #20742	; 0x5106
    74e0:	2a054e06 	bcs	15ad00 <_Min_Heap_Size+0x15a500>
    74e4:	23050106 	movwcs	r0, #20742	; 0x5106
    74e8:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    74ec:	30060505 	andcc	r0, r6, r5, lsl #10
    74f0:	01060805 	tsteq	r6, r5, lsl #16
    74f4:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    74f8:	0612053f 			; <UNDEFINED> instruction: 0x0612053f
    74fc:	06070501 	streq	r0, [r7], -r1, lsl #10
    7500:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    7504:	201a0501 	andscs	r0, sl, r1, lsl #10
    7508:	06200905 	strteq	r0, [r0], -r5, lsl #18
    750c:	061b053f 			; <UNDEFINED> instruction: 0x061b053f
    7510:	200b0501 	andcs	r0, fp, r1, lsl #10
    7514:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    7518:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    751c:	06230620 	strteq	r0, [r3], -r0, lsr #12
    7520:	060b0520 	streq	r0, [fp], -r0, lsr #10
    7524:	06120534 			; <UNDEFINED> instruction: 0x06120534
    7528:	200d0501 	andcs	r0, sp, r1, lsl #10
    752c:	20062306 	andcs	r2, r6, r6, lsl #6
    7530:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    7534:	01061b05 	tsteq	r6, r5, lsl #22
    7538:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    753c:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    7540:	06090501 	streq	r0, [r9], -r1, lsl #10
    7544:	0610054d 	ldreq	r0, [r0], -sp, asr #10
    7548:	200b0501 	andcs	r0, fp, r1, lsl #10
    754c:	20062306 	andcs	r2, r6, r6, lsl #6
    7550:	26060305 	strcs	r0, [r6], -r5, lsl #6
    7554:	01062a05 	tsteq	r6, r5, lsl #20
    7558:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    755c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    7560:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    7564:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7568:	053f062e 	ldreq	r0, [pc, #-1582]!	; 6f42 <_Min_Heap_Size+0x6742>
    756c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7570:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    7574:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    7578:	07053c09 	streq	r3, [r5, -r9, lsl #24]
    757c:	2e1b0306 	cdpcs	3, 1, cr0, cr11, cr6, {0}
    7580:	01061005 	tsteq	r6, r5
    7584:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    7588:	3f062009 	svccc	0x00062009
    758c:	01061b05 	tsteq	r6, r5, lsl #22
    7590:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    7594:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    7598:	200d0501 	andcs	r0, sp, r1, lsl #10
    759c:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    75a0:	053c6003 	ldreq	r6, [ip, #-3]!
    75a4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    75a8:	0905201d 	stmdbeq	r5, {r0, r2, r3, r4, sp}
    75ac:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    75b0:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    75b4:	06090520 	streq	r0, [r9], -r0, lsr #10
    75b8:	0611054c 	ldreq	r0, [r1], -ip, asr #10
    75bc:	200b0501 	andcs	r0, fp, r1, lsl #10
    75c0:	0f052206 	svceq	0x00052206
    75c4:	1f050106 	svcne	0x00050106
    75c8:	06090520 	streq	r0, [r9], -r0, lsr #10
    75cc:	0623054e 	strteq	r0, [r3], -lr, asr #10
    75d0:	201c0501 	andscs	r0, ip, r1, lsl #10
    75d4:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    75d8:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    75dc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    75e0:	013f0609 	teqeq	pc, r9, lsl #12
    75e4:	1005143c 	andne	r1, r5, ip, lsr r4
    75e8:	0b050106 	bleq	147a08 <_Min_Heap_Size+0x147208>
    75ec:	05300620 	ldreq	r0, [r0, #-1568]!	; 0xfffff9e0
    75f0:	39053009 	stmdbcc	r5, {r0, r3, ip, sp}
    75f4:	01040200 	mrseq	r0, R12_usr
    75f8:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    75fc:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    7600:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    7604:	2303060b 	movwcs	r0, #13835	; 0x360b
    7608:	0612053c 			; <UNDEFINED> instruction: 0x0612053c
    760c:	200d0501 	andcs	r0, sp, r1, lsl #10
    7610:	09052306 	stmdbeq	r5, {r1, r2, r8, r9, sp}
    7614:	061b0543 	ldreq	r0, [fp], -r3, asr #10
    7618:	200b0501 	andcs	r0, fp, r1, lsl #10
    761c:	1f053f06 	svcne	0x00053f06
    7620:	0b050106 	bleq	147a40 <_Min_Heap_Size+0x147240>
    7624:	17054d06 	strne	r4, [r5, -r6, lsl #26]
    7628:	0b050106 	bleq	147a48 <_Min_Heap_Size+0x147248>
    762c:	00013f06 	andeq	r3, r1, r6, lsl #30
    7630:	3c010402 	cfstrscc	mvf0, [r1], {2}
    7634:	02000905 	andeq	r0, r0, #81920	; 0x14000
    7638:	05150104 	ldreq	r0, [r5, #-260]	; 0xfffffefc
    763c:	04020010 	streq	r0, [r2], #-16
    7640:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7644:	0402000b 	streq	r0, [r2], #-11
    7648:	23062001 	movwcs	r2, #24577	; 0x6001
    764c:	05350305 	ldreq	r0, [r5, #-773]!	; 0xfffffcfb
    7650:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7654:	22062005 	andcs	r2, r6, #5
    7658:	01060d05 	tsteq	r6, r5, lsl #26
    765c:	06200705 	strteq	r0, [r0], -r5, lsl #14
    7660:	0613053e 			; <UNDEFINED> instruction: 0x0613053e
    7664:	06070501 	streq	r0, [r7], -r1, lsl #10
    7668:	09055a3f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, r9, fp, ip, lr}
    766c:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    7670:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    7674:	12054106 	andne	r4, r5, #-2147483647	; 0x80000001
    7678:	1c050106 	stfnes	f0, [r5], {6}
    767c:	20070520 	andcs	r0, r7, r0, lsr #10
    7680:	13053f06 	movwne	r3, #24326	; 0x5f06
    7684:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7688:	00013f06 	andeq	r3, r1, r6, lsl #30
    768c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    7690:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7694:	05150104 	ldreq	r0, [r5, #-260]	; 0xfffffefc
    7698:	0402000c 	streq	r0, [r2], #-12
    769c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    76a0:	04020007 	streq	r0, [r2], #-7
    76a4:	23062001 	movwcs	r2, #24577	; 0x6001
    76a8:	31060105 	tstcc	r6, r5, lsl #2
    76ac:	0004022e 	andeq	r0, r4, lr, lsr #4
    76b0:	01050101 	tsteq	r5, r1, lsl #2
    76b4:	00020500 	andeq	r0, r2, r0, lsl #10
    76b8:	03000000 	movweq	r0, #0
    76bc:	060107c7 	streq	r0, [r1], -r7, asr #15
    76c0:	06030501 	streq	r0, [r3], -r1, lsl #10
    76c4:	06011522 	streq	r1, [r1], -r2, lsr #10
    76c8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    76cc:	002e0602 	eoreq	r0, lr, r2, lsl #12
    76d0:	3c020402 	cfstrscc	mvf0, [r2], {2}
    76d4:	02040200 	andeq	r0, r4, #0, 4
    76d8:	00210514 	eoreq	r0, r1, r4, lsl r5
    76dc:	06020402 	streq	r0, [r2], -r2, lsl #8
    76e0:	00050501 	andeq	r0, r5, r1, lsl #10
    76e4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    76e8:	25030c05 	strcs	r0, [r3, #-3077]	; 0xfffff3fb
    76ec:	0603052e 	streq	r0, [r3], -lr, lsr #10
    76f0:	20060124 	andcs	r0, r6, r4, lsr #2
    76f4:	05142e06 	ldreq	r2, [r4, #-3590]	; 0xfffff1fa
    76f8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    76fc:	57030605 	strpl	r0, [r3, -r5, lsl #12]
    7700:	77070520 	strvc	r0, [r7, -r0, lsr #10]
    7704:	01061e05 	tsteq	r6, r5, lsl #28
    7708:	21060705 	tstcs	r6, r5, lsl #14
    770c:	03061505 	movweq	r1, #25861	; 0x6505
    7710:	07050175 	smlsdxeq	r5, r5, r1, r0
    7714:	06200b03 	strteq	r0, [r0], -r3, lsl #22
    7718:	06220523 	strteq	r0, [r2], -r3, lsr #10
    771c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7720:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7724:	05017103 	streq	r7, [r1, #-259]	; 0xfffffefd
    7728:	200f0307 	andcs	r0, pc, r7, lsl #6
    772c:	20052306 	andcs	r2, r5, r6, lsl #6
    7730:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7734:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    7738:	016d0306 	cmneq	sp, r6, lsl #6
    773c:	13030705 	movwne	r0, #14085	; 0x3705
    7740:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7744:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7748:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    774c:	69030615 	stmdbvs	r3, {r0, r2, r4, r9, sl}
    7750:	03070501 	movweq	r0, #29953	; 0x7501
    7754:	23062017 	movwcs	r2, #24599	; 0x6017
    7758:	01061f05 	tsteq	r6, r5, lsl #30
    775c:	21060705 	tstcs	r6, r5, lsl #14
    7760:	03061505 	movweq	r1, #25861	; 0x6505
    7764:	07050165 	streq	r0, [r5, -r5, ror #2]
    7768:	06201b03 	strteq	r1, [r0], -r3, lsl #22
    776c:	061f0523 	ldreq	r0, [pc], -r3, lsr #10
    7770:	06070501 	streq	r0, [r7], -r1, lsl #10
    7774:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7778:	05016103 	streq	r6, [r1, #-259]	; 0xfffffefd
    777c:	201f0307 	andscs	r0, pc, r7, lsl #6
    7780:	64030305 	strvs	r0, [r3], #-773	; 0xfffffcfb
    7784:	03010520 	movweq	r0, #5408	; 0x1520
    7788:	0102202e 	tsteq	r2, lr, lsr #32
    778c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7790:	02050001 	andeq	r0, r5, #1
    7794:	00000000 	andeq	r0, r0, r0
    7798:	01088503 	tsteq	r8, r3, lsl #10
    779c:	03050106 	movweq	r0, #20742	; 0x5106
    77a0:	01152106 	tsteq	r5, r6, lsl #2
    77a4:	02040200 	andeq	r0, r4, #0, 4
    77a8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    77ac:	02003c02 	andeq	r3, r0, #512	; 0x200
    77b0:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    77b4:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    77b8:	00010602 	andeq	r0, r1, r2, lsl #12
    77bc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    77c0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    77c4:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    77c8:	2e2c030c 	cdpcs	3, 2, cr0, cr12, cr12, {0}
    77cc:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
    77d0:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    77d4:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    77d8:	50030605 	andpl	r0, r3, r5, lsl #12
    77dc:	85070520 	strhi	r0, [r7, #-1312]	; 0xfffffae0
    77e0:	01061e05 	tsteq	r6, r5, lsl #28
    77e4:	2f060705 	svccs	0x00060705
    77e8:	03061505 	movweq	r1, #25861	; 0x6505
    77ec:	07050175 	smlsdxeq	r5, r5, r1, r0
    77f0:	06200b03 	strteq	r0, [r0], -r3, lsl #22
    77f4:	06220523 	strteq	r0, [r2], -r3, lsr #10
    77f8:	06070501 	streq	r0, [r7], -r1, lsl #10
    77fc:	2005232f 	andcs	r2, r5, pc, lsr #6
    7800:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7804:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    7808:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    780c:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    7810:	01061f05 	tsteq	r6, r5, lsl #30
    7814:	2f060705 	svccs	0x00060705
    7818:	061f0523 	ldreq	r0, [pc], -r3, lsr #10
    781c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7820:	1e05232f 	cdpne	3, 0, cr2, cr5, cr15, {1}
    7824:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7828:	22052f06 	andcs	r2, r5, #6, 30
    782c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7830:	20052106 	andcs	r2, r5, r6, lsl #2
    7834:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7838:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
    783c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7840:	1f052106 	svcne	0x00052106
    7844:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7848:	1f052106 	svcne	0x00052106
    784c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7850:	03052106 	movweq	r2, #20742	; 0x5106
    7854:	205b0306 	subscs	r0, fp, r6, lsl #6
    7858:	35030105 	strcc	r0, [r3, #-261]	; 0xfffffefb
    785c:	00010220 	andeq	r0, r1, r0, lsr #4
    7860:	01050101 	tsteq	r5, r1, lsl #2
    7864:	00020500 	andeq	r0, r2, r0, lsl #10
    7868:	03000000 	movweq	r0, #0
    786c:	050108da 	streq	r0, [r1, #-2266]	; 0xfffff726
    7870:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
    7874:	01050106 	tsteq	r5, r6, lsl #2
    7878:	0001022f 	andeq	r0, r1, pc, lsr #4
    787c:	01050101 	tsteq	r5, r1, lsl #2
    7880:	00020500 	andeq	r0, r2, r0, lsl #10
    7884:	03000000 	movweq	r0, #0
    7888:	050108e5 	streq	r0, [r1, #-2277]	; 0xfffff71b
    788c:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
    7890:	01050106 	tsteq	r5, r6, lsl #2
    7894:	00010221 	andeq	r0, r1, r1, lsr #4
    7898:	08ee0101 	stmiaeq	lr!, {r0, r8}^
    789c:	00030000 	andeq	r0, r3, r0
    78a0:	0000020b 	andeq	r0, r0, fp, lsl #4
    78a4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    78a8:	0101000d 	tsteq	r1, sp
    78ac:	00000101 	andeq	r0, r0, r1, lsl #2
    78b0:	00000100 	andeq	r0, r0, r0, lsl #2
    78b4:	2f2e2e01 	svccs	0x002e2e01
    78b8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    78bc:	2f737265 	svccs	0x00737265
    78c0:	334d5453 	movtcc	r5, #54355	; 0xd453
    78c4:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    78c8:	41485f78 	hvcmi	34296	; 0x85f8
    78cc:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    78d0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    78d4:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    78d8:	2f2e2e00 	svccs	0x002e2e00
    78dc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    78e0:	2f737265 	svccs	0x00737265
    78e4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    78e8:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    78ec:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    78f0:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    78f4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    78f8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    78fc:	534d432f 	movtpl	r4, #54063	; 0xd32f
    7900:	442f5349 	strtmi	r5, [pc], #-841	; 7908 <_Min_Heap_Size+0x7108>
    7904:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    7908:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    790c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    7910:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    7914:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    7918:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    791c:	63006564 	movwvs	r6, #1380	; 0x564
    7920:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7924:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7928:	6f646978 	svcvs	0x00646978
    792c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7930:	6172676f 	cmnvs	r2, pc, ror #14
    7934:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7938:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    793c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7940:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7944:	6f6e2d6d 	svcvs	0x006e2d6d
    7948:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    794c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7950:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7954:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7958:	30312e31 	eorscc	r2, r1, r1, lsr lr
    795c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    7960:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7964:	61652d65 	cmnvs	r5, r5, ror #26
    7968:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    796c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7970:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    7974:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    7978:	6300656e 	movwvs	r6, #1390	; 0x56e
    797c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7980:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7984:	6f646978 	svcvs	0x00646978
    7988:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    798c:	6172676f 	cmnvs	r2, pc, ror #14
    7990:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7994:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7998:	63675c63 	cmnvs	r7, #25344	; 0x6300
    799c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    79a0:	6f6e2d6d 	svcvs	0x006e2d6d
    79a4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    79a8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    79ac:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    79b0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    79b4:	30312e31 	eorscc	r2, r1, r1, lsr lr
    79b8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    79bc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    79c0:	61652d65 	cmnvs	r5, r5, ror #26
    79c4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    79c8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    79cc:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    79d0:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    79d4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    79d8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    79dc:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    79e0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    79e4:	5f787834 	svcpl	0x00787834
    79e8:	5f4c4148 	svcpl	0x004c4148
    79ec:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    79f0:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    79f4:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    79f8:	6f432f2e 	svcvs	0x00432f2e
    79fc:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    7a00:	0000636e 	andeq	r6, r0, lr, ror #6
    7a04:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7a08:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    7a0c:	61685f78 	smcvs	34296	; 0x85f8
    7a10:	6f635f6c 	svcvs	0x00635f6c
    7a14:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    7a18:	0100632e 	tsteq	r0, lr, lsr #6
    7a1c:	6f630000 	svcvs	0x00630000
    7a20:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    7a24:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    7a28:	00000200 	andeq	r0, r0, r0, lsl #4
    7a2c:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    7a30:	63675f73 	cmnvs	r7, #460	; 0x1cc
    7a34:	00682e63 	rsbeq	r2, r8, r3, ror #28
    7a38:	73000002 	movwvc	r0, #2
    7a3c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    7a40:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    7a44:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    7a48:	00000300 	andeq	r0, r0, r0, lsl #6
    7a4c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    7a50:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    7a54:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    7a58:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    7a5c:	00000400 	andeq	r0, r0, r0, lsl #8
    7a60:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    7a64:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    7a68:	00050068 	andeq	r0, r5, r8, rrx
    7a6c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    7a70:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7a74:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    7a78:	00000300 	andeq	r0, r0, r0, lsl #6
    7a7c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7a80:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    7a84:	61685f78 	smcvs	34296	; 0x85f8
    7a88:	6f635f6c 	svcvs	0x00635f6c
    7a8c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    7a90:	0600682e 	streq	r6, [r0], -lr, lsr #16
    7a94:	74730000 	ldrbtvc	r0, [r3], #-0
    7a98:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    7a9c:	5f787834 	svcpl	0x00787834
    7aa0:	5f6c6168 	svcpl	0x006c6168
    7aa4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    7aa8:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    7aac:	05000000 	streq	r0, [r0, #-0]
    7ab0:	02050001 	andeq	r0, r5, #1
    7ab4:	080014bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip}
    7ab8:	01018d03 	tsteq	r1, r3, lsl #26
    7abc:	03050106 	movweq	r0, #20742	; 0x5106
    7ac0:	043f3006 	ldrteq	r3, [pc], #-6	; 7ac8 <_Min_Heap_Size+0x72c8>
    7ac4:	03160502 	tsteq	r6, #8388608	; 0x800000
    7ac8:	05010be2 	streq	r0, [r1, #-3042]	; 0xfffff41e
    7acc:	14131403 	ldrne	r1, [r3], #-1027	; 0xfffffbfd
    7ad0:	01060e05 	tsteq	r6, r5, lsl #28
    7ad4:	2f060305 	svccs	0x00060305
    7ad8:	01060d05 	tsteq	r6, r5, lsl #26
    7adc:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7ae0:	0623052f 	strteq	r0, [r3], -pc, lsr #10
    7ae4:	3e052014 	mcrcc	0, 0, r2, cr5, cr4, {0}
    7ae8:	1f0e052d 	svcne	0x000e052d
    7aec:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    7af0:	01060e05 	tsteq	r6, r5, lsl #28
    7af4:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    7af8:	74950301 	ldrvc	r0, [r5], #769	; 0x301
    7afc:	00030501 	andeq	r0, r3, r1, lsl #10
    7b00:	1c010402 	cfstrsne	mvf0, [r1], {2}
    7b04:	01040200 	mrseq	r0, R12_usr
    7b08:	0007022e 	andeq	r0, r7, lr, lsr #4
    7b0c:	01050101 	tsteq	r5, r1, lsl #2
    7b10:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    7b14:	03080014 	movweq	r0, #32788	; 0x8014
    7b18:	060101a3 	streq	r0, [r1], -r3, lsr #3
    7b1c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7b20:	302f154b 	eorcc	r1, pc, fp, asr #10
    7b24:	1a050204 	bne	14833c <_Min_Heap_Size+0x147b3c>
    7b28:	010bdd03 	tsteq	fp, r3, lsl #26
    7b2c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7b30:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    7b34:	042e2e0b 	strteq	r2, [lr], #-3595	; 0xfffff1f5
    7b38:	06030501 	streq	r0, [r3], -r1, lsl #10
    7b3c:	0174a303 	cmneq	r4, r3, lsl #6
    7b40:	1a050204 	bne	148358 <_Min_Heap_Size+0x147b58>
    7b44:	010d9803 	tsteq	sp, r3, lsl #16
    7b48:	13140305 	tstne	r4, #335544320	; 0x14000000
    7b4c:	1f051413 	svcne	0x00051413
    7b50:	17050106 	strne	r0, [r5, -r6, lsl #2]
    7b54:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7b58:	062c053d 			; <UNDEFINED> instruction: 0x062c053d
    7b5c:	206d0501 	rsbcs	r0, sp, r1, lsl #10
    7b60:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    7b64:	13061e05 	movwne	r1, #28165	; 0x6e05
    7b68:	52052e2e 	andpl	r2, r5, #736	; 0x2e0
    7b6c:	211e052e 	tstcs	lr, lr, lsr #10
    7b70:	2d66052e 	cfstr64cs	mvdx0, [r6, #-184]!	; 0xffffff48
    7b74:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    7b78:	05014703 	streq	r4, [r1, #-1795]	; 0xfffff8fd
    7b7c:	06051403 	streq	r1, [r5], -r3, lsl #8
    7b80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7b84:	30053006 	andcc	r3, r5, r6
    7b88:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7b8c:	4a2e202e 	bmi	b8fc4c <_Min_Heap_Size+0xb8f44c>
    7b90:	01050104 	tsteq	r5, r4, lsl #2
    7b94:	01739403 	cmneq	r3, r3, lsl #8
    7b98:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7b9c:	7a030104 	bvc	c7fb4 <_Min_Heap_Size+0xc77b4>
    7ba0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7ba4:	02002001 	andeq	r2, r0, #1
    7ba8:	00200104 	eoreq	r0, r0, r4, lsl #2
    7bac:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7bb0:	01040200 	mrseq	r0, R12_usr
    7bb4:	05020421 	streq	r0, [r2, #-1057]	; 0xfffffbdf
    7bb8:	0da3036d 	stceq	3, cr0, [r3, #436]!	; 0x1b4
    7bbc:	05202058 	streq	r2, [r0, #-88]!	; 0xffffffa8
    7bc0:	52030605 	andpl	r0, r3, #5242880	; 0x500000
    7bc4:	06200501 	strteq	r0, [r0], -r1, lsl #10
    7bc8:	2e300501 	cdpcs	5, 3, cr0, cr0, cr1, {0}
    7bcc:	202e0520 	eorcs	r0, lr, r0, lsr #10
    7bd0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    7bd4:	73900301 	orrsvc	r0, r0, #67108864	; 0x4000000
    7bd8:	00080201 	andeq	r0, r8, r1, lsl #4
    7bdc:	01050101 	tsteq	r5, r1, lsl #2
    7be0:	84020500 	strhi	r0, [r2], #-1280	; 0xfffffb00
    7be4:	03080015 	movweq	r0, #32789	; 0x8015
    7be8:	060101b9 			; <UNDEFINED> instruction: 0x060101b9
    7bec:	06030501 	streq	r0, [r3], -r1, lsl #10
    7bf0:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    7bf4:	d5031605 	strle	r1, [r3, #-1541]	; 0xfffff9fb
    7bf8:	0305010b 	movweq	r0, #20747	; 0x510b
    7bfc:	06060514 			; <UNDEFINED> instruction: 0x06060514
    7c00:	06050501 	streq	r0, [r5], -r1, lsl #10
    7c04:	51051330 	tstpl	r5, r0, lsr r3
    7c08:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    7c0c:	202d052e 	eorcs	r0, sp, lr, lsr #10
    7c10:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    7c14:	063d0605 	ldrteq	r0, [sp], -r5, lsl #12
    7c18:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    7c1c:	74a60301 	strtvc	r0, [r6], #769	; 0x301
    7c20:	00030501 	andeq	r0, r3, r1, lsl #10
    7c24:	1c010402 	cfstrsne	mvf0, [r1], {2}
    7c28:	01040200 	mrseq	r0, R12_usr
    7c2c:	0008022e 	andeq	r0, r8, lr, lsr #4
    7c30:	01050101 	tsteq	r5, r1, lsl #2
    7c34:	00020500 	andeq	r0, r2, r0, lsl #10
    7c38:	03000000 	movweq	r0, #0
    7c3c:	060101c9 	streq	r0, [r1], -r9, asr #3
    7c40:	06030501 	streq	r0, [r3], -r1, lsl #10
    7c44:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    7c48:	eb031605 	bl	cd464 <_Min_Heap_Size+0xccc64>
    7c4c:	0305010b 	movweq	r0, #20747	; 0x510b
    7c50:	06060514 			; <UNDEFINED> instruction: 0x06060514
    7c54:	06050501 	streq	r0, [r5], -r1, lsl #10
    7c58:	06510530 			; <UNDEFINED> instruction: 0x06510530
    7c5c:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    7c60:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    7c64:	05052e2b 	streq	r2, [r5, #-3627]	; 0xfffff1d5
    7c68:	03044b06 	movweq	r4, #19206	; 0x4b06
    7c6c:	ce031b05 	vmlagt.f64	d1, d3, d5
    7c70:	03050174 	movweq	r0, #20852	; 0x5174
    7c74:	05020414 	streq	r0, [r2, #-1044]	; 0xfffffbec
    7c78:	0bb10305 	bleq	fec48894 <_estack+0xdec47654>
    7c7c:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
    7c80:	74c2031b 	strbvc	r0, [r2], #795	; 0x31b
    7c84:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7c88:	01042e06 	tsteq	r4, r6, lsl #28
    7c8c:	4c030105 	stfmis	f0, [r3], {5}
    7c90:	00030501 	andeq	r0, r3, r1, lsl #10
    7c94:	1c010402 	cfstrsne	mvf0, [r1], {2}
    7c98:	01040200 	mrseq	r0, R12_usr
    7c9c:	0007022e 	andeq	r0, r7, lr, lsr #4
    7ca0:	01050101 	tsteq	r5, r1, lsl #2
    7ca4:	00020500 	andeq	r0, r2, r0, lsl #10
    7ca8:	03000000 	movweq	r0, #0
    7cac:	050101d6 	streq	r0, [r1, #-470]	; 0xfffffe2a
    7cb0:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    7cb4:	b9032205 	stmdblt	r3, {r0, r2, r9, sp}
    7cb8:	0305010d 	movweq	r0, #20749	; 0x510d
    7cbc:	05030414 	streq	r0, [r3, #-1044]	; 0xfffffbec
    7cc0:	72f9031b 	rscsvc	r0, r9, #1811939328	; 0x6c000000
    7cc4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7cc8:	87030204 	strhi	r0, [r3, -r4, lsl #4]
    7ccc:	20052e0d 	andcs	r2, r5, sp, lsl #28
    7cd0:	28051306 	stmdacs	r5, {r1, r2, r8, r9, ip}
    7cd4:	2d11052e 	cfldr32cs	mvfx0, [r1, #-184]	; 0xffffff48
    7cd8:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    7cdc:	04230603 	strteq	r0, [r3], #-1539	; 0xfffff9fd
    7ce0:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    7ce4:	050172f4 	streq	r7, [r1, #-756]	; 0xfffffd0c
    7ce8:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    7cec:	2e0d8c03 	cdpcs	12, 0, cr8, cr13, cr3, {0}
    7cf0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    7cf4:	06021e08 	streq	r1, [r2], -r8, lsl #28
    7cf8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7cfc:	02050001 	andeq	r0, r5, #1
    7d00:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
    7d04:	0101e303 	tsteq	r1, r3, lsl #6
    7d08:	04130405 	ldreq	r0, [r3], #-1029	; 0xfffffbfb
    7d0c:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7d10:	05010e81 	streq	r0, [r1, #-3713]	; 0xfffff17f
    7d14:	0e051403 	cdpeq	4, 0, cr1, cr5, cr3, {0}
    7d18:	06050106 	streq	r0, [r5], -r6, lsl #2
    7d1c:	06030520 	streq	r0, [r3], -r0, lsr #10
    7d20:	06120541 	ldreq	r0, [r2], -r1, asr #10
    7d24:	06030501 	streq	r0, [r3], -r1, lsl #10
    7d28:	0316053d 	tsteq	r6, #255852544	; 0xf400000
    7d2c:	05017ea8 	streq	r7, [r1, #-3752]	; 0xfffff158
    7d30:	05051403 	streq	r1, [r5, #-1027]	; 0xfffffbfd
    7d34:	062e0518 			; <UNDEFINED> instruction: 0x062e0518
    7d38:	03054a01 	movweq	r4, #23041	; 0x5a01
    7d3c:	01d10306 	bicseq	r0, r1, r6, lsl #6
    7d40:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    7d44:	03052001 	movweq	r2, #20481	; 0x5001
    7d48:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    7d4c:	03050106 	movweq	r0, #20742	; 0x5106
    7d50:	0a053106 	beq	154170 <_Min_Heap_Size+0x153970>
    7d54:	0c050106 	stfeqs	f0, [r5], {6}
    7d58:	20207703 	eorcs	r7, r0, r3, lsl #14
    7d5c:	01050104 	tsteq	r5, r4, lsl #2
    7d60:	0171fc03 	cmneq	r1, r3, lsl #24	; <UNPREDICTABLE>
    7d64:	01000302 	tsteq	r0, r2, lsl #6
    7d68:	00010501 	andeq	r0, r1, r1, lsl #10
    7d6c:	00000205 	andeq	r0, r0, r5, lsl #4
    7d70:	80030000 	andhi	r0, r3, r0
    7d74:	03050102 	movweq	r0, #20738	; 0x5102
    7d78:	05030414 	streq	r0, [r3, #-1044]	; 0xfffffbec
    7d7c:	0115031b 	tsteq	r5, fp, lsl r3
    7d80:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7d84:	2e6c0301 	cdpcs	3, 6, cr0, cr12, cr1, {0}
    7d88:	01060e05 	tsteq	r6, r5, lsl #28
    7d8c:	5b060305 	blpl	1889a8 <_Min_Heap_Size+0x1881a8>
    7d90:	01060d05 	tsteq	r6, r5, lsl #26
    7d94:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    7d98:	01010004 	tsteq	r1, r4
    7d9c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7da0:	00000002 	andeq	r0, r0, r2
    7da4:	02970300 	addseq	r0, r7, #0, 6
    7da8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7dac:	01061b05 	tsteq	r6, r5, lsl #22
    7db0:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    7db4:	053f0603 	ldreq	r0, [pc, #-1539]!	; 77b9 <_Min_Heap_Size+0x6fb9>
    7db8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7dbc:	044d0603 	strbeq	r0, [sp], #-1539	; 0xfffff9fd
    7dc0:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    7dc4:	0305016d 	movweq	r0, #20845	; 0x516d
    7dc8:	03010414 	movweq	r0, #5140	; 0x1414
    7dcc:	03042e12 	movweq	r2, #19986	; 0x4e12
    7dd0:	61031b05 	tstvs	r3, r5, lsl #22
    7dd4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7dd8:	01050104 	tsteq	r5, r4, lsl #2
    7ddc:	2e1e0306 	cdpcs	3, 1, cr0, cr14, cr6, {0}
    7de0:	01000302 	tsteq	r0, r2, lsl #6
    7de4:	00010501 	andeq	r0, r1, r1, lsl #10
    7de8:	00000205 	andeq	r0, r0, r5, lsl #4
    7dec:	aa030000 	bge	c7df4 <_Min_Heap_Size+0xc75f4>
    7df0:	01060102 	tsteq	r6, r2, lsl #2
    7df4:	30060305 	andcc	r0, r6, r5, lsl #6
    7df8:	16053f3d 			; <UNDEFINED> instruction: 0x16053f3d
    7dfc:	0c050106 	stfeqs	f0, [r5], {6}
    7e00:	06030520 	streq	r0, [r3], -r0, lsr #10
    7e04:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    7e08:	20060501 	andcs	r0, r6, r1, lsl #10
    7e0c:	31060505 	tstcc	r6, r5, lsl #10
    7e10:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    7e14:	003c0601 	eorseq	r0, ip, r1, lsl #12
    7e18:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    7e1c:	3d3d2f06 	ldccc	15, cr2, [sp, #-24]!	; 0xffffffe8
    7e20:	5a3d3d3d 	bpl	f5731c <_Min_Heap_Size+0xf56b1c>
    7e24:	01061905 	tsteq	r6, r5, lsl #18
    7e28:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    7e2c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    7e30:	21010624 	tstcs	r1, r4, lsr #12
    7e34:	05203e05 	streq	r3, [r0, #-3589]!	; 0xfffff1fb
    7e38:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    7e3c:	1f540530 	svcne	0x00540530
    7e40:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    7e44:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    7e48:	1f540530 	svcne	0x00540530
    7e4c:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    7e50:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    7e54:	1f540530 	svcne	0x00540530
    7e58:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    7e5c:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    7e60:	1f540530 	svcne	0x00540530
    7e64:	79030f05 	stmdbvc	r3, {r0, r2, r8, r9, sl, fp}
    7e68:	03010520 	movweq	r0, #5408	; 0x1520
    7e6c:	03052e0f 	movweq	r2, #24079	; 0x5e0f
    7e70:	01040200 	mrseq	r0, R12_usr
    7e74:	00205e03 	eoreq	r5, r0, r3, lsl #28
    7e78:	3c010402 	cfstrscc	mvf0, [r1], {2}
    7e7c:	01040200 	mrseq	r0, R12_usr
    7e80:	0005053d 	andeq	r0, r5, sp, lsr r5
    7e84:	6e010402 	cdpvs	4, 0, cr0, cr1, cr2, {0}
    7e88:	03040200 	movweq	r0, #16896	; 0x4200
    7e8c:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7e90:	02006701 	andeq	r6, r0, #262144	; 0x40000
    7e94:	00670104 	rsbeq	r0, r7, r4, lsl #2
    7e98:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    7e9c:	01040200 	mrseq	r0, R12_usr
    7ea0:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7ea4:	02006701 	andeq	r6, r0, #262144	; 0x40000
    7ea8:	06670104 	strbteq	r0, [r7], -r4, lsl #2
    7eac:	05660f03 	strbeq	r0, [r6, #-3843]!	; 0xfffff0fd
    7eb0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7eb4:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    7eb8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    7ebc:	05023001 	streq	r3, [r2, #-1]
    7ec0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7ec4:	02050001 	andeq	r0, r5, #1
    7ec8:	00000000 	andeq	r0, r0, r0
    7ecc:	0102d603 	tsteq	r2, r3, lsl #12
    7ed0:	21130305 	tstcs	r3, r5, lsl #6
    7ed4:	21060105 	tstcs	r6, r5, lsl #2
    7ed8:	01000102 	tsteq	r0, r2, lsl #2
    7edc:	00010501 	andeq	r0, r1, r1, lsl #10
    7ee0:	00000205 	andeq	r0, r0, r5, lsl #4
    7ee4:	e0030000 	and	r0, r3, r0
    7ee8:	03050102 	movweq	r0, #20738	; 0x5102
    7eec:	05020414 	streq	r0, [r2, #-1044]	; 0xfffffbec
    7ef0:	0aa5031a 	beq	fe948b60 <_estack+0xde947920>
    7ef4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7ef8:	01061a05 	tsteq	r6, r5, lsl #20
    7efc:	01050104 	tsteq	r5, r4, lsl #2
    7f00:	2e75da03 	vaddcs.f32	s27, s10, s6
    7f04:	01000602 	tsteq	r0, r2, lsl #12
    7f08:	00010501 	andeq	r0, r1, r1, lsl #10
    7f0c:	00000205 	andeq	r0, r0, r5, lsl #4
    7f10:	fb030000 	blx	c7f1a <_Min_Heap_Size+0xc771a>
    7f14:	01060102 	tsteq	r6, r2, lsl #2
    7f18:	5a060305 	bpl	188b34 <_Min_Heap_Size+0x188334>
    7f1c:	30062006 	andcc	r2, r6, r6
    7f20:	1a050204 	bne	148738 <_Min_Heap_Size+0x147f38>
    7f24:	010bac03 	tsteq	fp, r3, lsl #24
    7f28:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
    7f2c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    7f30:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    7f34:	2e01061f 	mcrcs	6, 0, r0, cr1, cr15, {0}
    7f38:	204a4005 	subcs	r4, sl, r5
    7f3c:	03061605 	movweq	r1, #26117	; 0x6605
    7f40:	0305012f 	movweq	r0, #20783	; 0x512f
    7f44:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    7f48:	06030501 	streq	r0, [r3], -r1, lsl #10
    7f4c:	0514132f 	ldreq	r1, [r4, #-815]	; 0xfffffcd1
    7f50:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7f54:	03052e17 	movweq	r2, #24087	; 0x5e17
    7f58:	2c053d06 	stccs	13, cr3, [r5], {6}
    7f5c:	6d050106 	stfvss	f0, [r5, #-24]	; 0xffffffe8
    7f60:	06030520 	streq	r0, [r3], -r0, lsr #10
    7f64:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    7f68:	2e350501 	cdpcs	5, 3, cr0, cr5, cr1, {0}
    7f6c:	15052e2e 	strne	r2, [r5, #-3630]	; 0xfffff1d2
    7f70:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7f74:	06350521 	ldrteq	r0, [r5], -r1, lsr #10
    7f78:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    7f7c:	0104202e 	tsteq	r4, lr, lsr #32
    7f80:	97030105 	strls	r0, [r3, -r5, lsl #2]
    7f84:	03050174 	movweq	r0, #20852	; 0x5174
    7f88:	01040200 	mrseq	r0, R12_usr
    7f8c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    7f90:	02002e01 	andeq	r2, r0, #1, 28
    7f94:	00200104 	eoreq	r0, r0, r4, lsl #2
    7f98:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7f9c:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    7fa0:	0bb70306 	bleq	fedc8bc0 <_estack+0xdedc7980>
    7fa4:	06320520 	ldrteq	r0, [r2], -r0, lsr #10
    7fa8:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    7fac:	2e2e4005 	cdpcs	0, 2, cr4, cr14, cr5, {0}
    7fb0:	32036d05 	andcc	r6, r3, #320	; 0x140
    7fb4:	06022001 	streq	r2, [r2], -r1
    7fb8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7fbc:	02050001 	andeq	r0, r5, #1
    7fc0:	00000000 	andeq	r0, r0, r0
    7fc4:	01038a03 	tsteq	r3, r3, lsl #20
    7fc8:	03050106 	movweq	r0, #20742	; 0x5106
    7fcc:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    7fd0:	03160502 	tsteq	r6, #8388608	; 0x800000
    7fd4:	05010ad0 	streq	r0, [r1, #-2768]	; 0xfffff530
    7fd8:	06051403 	streq	r1, [r5], -r3, lsl #8
    7fdc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7fe0:	51053006 	tstpl	r5, r6
    7fe4:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    7fe8:	202d052e 	eorcs	r0, sp, lr, lsr #10
    7fec:	4a2e2b05 	bmi	b92c08 <_Min_Heap_Size+0xb92408>
    7ff0:	01050104 	tsteq	r5, r4, lsl #2
    7ff4:	0175ad03 	cmneq	r5, r3, lsl #26
    7ff8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7ffc:	001c0104 	andseq	r0, ip, r4, lsl #2
    8000:	3c010402 	cfstrscc	mvf0, [r1], {2}
    8004:	01000802 	tsteq	r0, r2, lsl #16
    8008:	00010501 	andeq	r0, r1, r1, lsl #10
    800c:	00000205 	andeq	r0, r0, r5, lsl #4
    8010:	9c030000 	stcls	0, cr0, [r3], {-0}
    8014:	01060103 	tsteq	r6, r3, lsl #2
    8018:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    801c:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    8020:	0aab031a 	beq	feac8c90 <_estack+0xdeac7a50>
    8024:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8028:	01060605 	tsteq	r6, r5, lsl #12
    802c:	30060505 	andcc	r0, r6, r5, lsl #10
    8030:	01063605 	tsteq	r6, r5, lsl #12
    8034:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    8038:	67054a5b 	smlsdvs	r5, fp, sl, r4
    803c:	2e0c052e 	cfsh32cs	mvfx0, mvfx12, #30
    8040:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    8044:	75d20301 	ldrbvc	r0, [r2, #769]	; 0x301
    8048:	00030501 	andeq	r0, r3, r1, lsl #10
    804c:	1c010402 	cfstrsne	mvf0, [r1], {2}
    8050:	01040200 	mrseq	r0, R12_usr
    8054:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    8058:	0ab6030b 	beq	fed88c8c <_estack+0xded87a4c>
    805c:	0104203c 	tsteq	r4, ip, lsr r0
    8060:	cd030a05 	vstrgt	s0, [r3, #-20]	; 0xffffffec
    8064:	06020175 			; <UNDEFINED> instruction: 0x06020175
    8068:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    806c:	02050001 	andeq	r0, r5, #1
    8070:	00000000 	andeq	r0, r0, r0
    8074:	0103ac03 	tsteq	r3, r3, lsl #24
    8078:	03050106 	movweq	r0, #20742	; 0x5106
    807c:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    8080:	03160502 	tsteq	r6, #8388608	; 0x800000
    8084:	05010abd 	streq	r0, [r1, #-2749]	; 0xfffff543
    8088:	06051403 	streq	r1, [r5], -r3, lsl #8
    808c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8090:	51053006 	tstpl	r5, r6
    8094:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    8098:	202d052e 	eorcs	r0, sp, lr, lsr #10
    809c:	4a2e2b05 	bmi	b92cb8 <_Min_Heap_Size+0xb924b8>
    80a0:	01050104 	tsteq	r5, r4, lsl #2
    80a4:	0175c003 	cmneq	r5, r3
    80a8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    80ac:	001c0104 	andseq	r0, ip, r4, lsl #2
    80b0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    80b4:	01000802 	tsteq	r0, r2, lsl #16
    80b8:	00010501 	andeq	r0, r1, r1, lsl #10
    80bc:	00000205 	andeq	r0, r0, r5, lsl #4
    80c0:	bd030000 	stclt	0, cr0, [r3, #-0]
    80c4:	01060103 	tsteq	r6, r3, lsl #2
    80c8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    80cc:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    80d0:	0abd031a 	beq	fef48d40 <_estack+0xdef47b00>
    80d4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    80d8:	01060605 	tsteq	r6, r5, lsl #12
    80dc:	30060505 	andcc	r0, r6, r5, lsl #10
    80e0:	01063605 	tsteq	r6, r5, lsl #12
    80e4:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    80e8:	67054a5b 	smlsdvs	r5, fp, sl, r4
    80ec:	2e0c052e 	cfsh32cs	mvfx0, mvfx12, #30
    80f0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    80f4:	75c00301 	strbvc	r0, [r0, #769]	; 0x301
    80f8:	00030501 	andeq	r0, r3, r1, lsl #10
    80fc:	1c010402 	cfstrsne	mvf0, [r1], {2}
    8100:	01040200 	mrseq	r0, R12_usr
    8104:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    8108:	0ac8030b 	beq	ff208d3c <_estack+0xdf207afc>
    810c:	0104203c 	tsteq	r4, ip, lsr r0
    8110:	bb030a05 	bllt	ca92c <_Min_Heap_Size+0xca12c>
    8114:	06020175 			; <UNDEFINED> instruction: 0x06020175
    8118:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    811c:	02050001 	andeq	r0, r5, #1
    8120:	00000000 	andeq	r0, r0, r0
    8124:	0103ce03 	tsteq	r3, r3, lsl #28
    8128:	03050106 	movweq	r0, #20742	; 0x5106
    812c:	02003006 	andeq	r3, r0, #6
    8130:	2e060104 	adfcss	f0, f6, f4
    8134:	06052106 	streq	r2, [r5], -r6, lsl #2
    8138:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    813c:	13053406 	movwne	r3, #21510	; 0x5406
    8140:	01050106 	tsteq	r5, r6, lsl #2
    8144:	00030568 	andeq	r0, r3, r8, ror #10
    8148:	03020402 	movweq	r0, #9218	; 0x2402
    814c:	02002077 	andeq	r2, r0, #119	; 0x77
    8150:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    8154:	053f0605 	ldreq	r0, [pc, #-1541]!	; 7b57 <_Min_Heap_Size+0x7357>
    8158:	02010613 	andeq	r0, r1, #19922944	; 0x1300000
    815c:	0101000a 	tsteq	r1, sl
    8160:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8164:	00000002 	andeq	r0, r0, r2
    8168:	03e90300 	mvneq	r0, #0, 6
    816c:	01021601 	tsteq	r2, r1, lsl #12
    8170:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8174:	02050001 	andeq	r0, r5, #1
    8178:	00000000 	andeq	r0, r0, r0
    817c:	0103e003 	tsteq	r3, r3
    8180:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
    8184:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    8188:	01010001 	tsteq	r1, r1
    818c:	000005be 			; <UNDEFINED> instruction: 0x000005be
    8190:	02350003 	eorseq	r0, r5, #3
    8194:	01020000 	mrseq	r0, (UNDEF: 2)
    8198:	000d0efb 	strdeq	r0, [sp], -fp
    819c:	01010101 	tsteq	r1, r1, lsl #2
    81a0:	01000000 	mrseq	r0, (UNDEF: 0)
    81a4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    81a8:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    81ac:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    81b0:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    81b4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    81b8:	5f787834 	svcpl	0x00787834
    81bc:	5f4c4148 	svcpl	0x004c4148
    81c0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    81c4:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    81c8:	63006372 	movwvs	r6, #882	; 0x372
    81cc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    81d0:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    81d4:	6f646978 	svcvs	0x00646978
    81d8:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    81dc:	6172676f 	cmnvs	r2, pc, ror #14
    81e0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    81e4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    81e8:	63675c63 	cmnvs	r7, #25344	; 0x6300
    81ec:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    81f0:	6f6e2d6d 	svcvs	0x006e2d6d
    81f4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    81f8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    81fc:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8200:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8204:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8208:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    820c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8210:	61652d65 	cmnvs	r5, r5, ror #26
    8214:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8218:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    821c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    8220:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    8224:	6300656e 	movwvs	r6, #1390	; 0x56e
    8228:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    822c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8230:	6f646978 	svcvs	0x00646978
    8234:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8238:	6172676f 	cmnvs	r2, pc, ror #14
    823c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8240:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8244:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8248:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    824c:	6f6e2d6d 	svcvs	0x006e2d6d
    8250:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8254:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8258:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    825c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8260:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8264:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8268:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    826c:	61652d65 	cmnvs	r5, r5, ror #26
    8270:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8274:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8278:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    827c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    8280:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    8284:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8288:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    828c:	2f534953 	svccs	0x00534953
    8290:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    8294:	00656475 	rsbeq	r6, r5, r5, ror r4
    8298:	442f2e2e 	strtmi	r2, [pc], #-3630	; 82a0 <_Min_Heap_Size+0x7aa0>
    829c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    82a0:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    82a4:	5349534d 	movtpl	r5, #37709	; 0x934d
    82a8:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    82ac:	2f656369 	svccs	0x00656369
    82b0:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    82b4:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    82b8:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    82bc:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    82c0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    82c4:	2f2e2e00 	svccs	0x002e2e00
    82c8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    82cc:	2f737265 	svccs	0x00737265
    82d0:	334d5453 	movtcc	r5, #54355	; 0xd453
    82d4:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    82d8:	41485f78 	hvcmi	34296	; 0x85f8
    82dc:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    82e0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    82e4:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    82e8:	2f2e2e00 	svccs	0x002e2e00
    82ec:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    82f0:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    82f4:	74730000 	ldrbtvc	r0, [r3], #-0
    82f8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    82fc:	5f787834 	svcpl	0x00787834
    8300:	2e6c6168 	powcsez	f6, f4, #0.0
    8304:	00010063 	andeq	r0, r1, r3, rrx
    8308:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    830c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8310:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    8314:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8318:	00020068 	andeq	r0, r2, r8, rrx
    831c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    8320:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    8324:	0300682e 	movweq	r6, #2094	; 0x82e
    8328:	6f630000 	svcvs	0x00630000
    832c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    8330:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    8334:	00000400 	andeq	r0, r0, r0, lsl #8
    8338:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    833c:	30346632 	eorscc	r6, r4, r2, lsr r6
    8340:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    8344:	00050068 	andeq	r0, r5, r8, rrx
    8348:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    834c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8350:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    8354:	00000500 	andeq	r0, r0, r0, lsl #10
    8358:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    835c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8360:	61685f78 	smcvs	34296	; 0x85f8
    8364:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    8368:	00682e66 	rsbeq	r2, r8, r6, ror #28
    836c:	73000006 	movwvc	r0, #6
    8370:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8374:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8378:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    837c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8380:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    8384:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    8388:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    838c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8390:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    8394:	00000500 	andeq	r0, r0, r0, lsl #10
    8398:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    839c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    83a0:	61685f78 	smcvs	34296	; 0x85f8
    83a4:	6f635f6c 	svcvs	0x00635f6c
    83a8:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    83ac:	00000700 	andeq	r0, r0, r0, lsl #14
    83b0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    83b4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    83b8:	61685f78 	smcvs	34296	; 0x85f8
    83bc:	6f635f6c 	svcvs	0x00635f6c
    83c0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    83c4:	0600682e 	streq	r6, [r0], -lr, lsr #16
    83c8:	05000000 	streq	r0, [r0, #-0]
    83cc:	02050001 	andeq	r0, r5, #1
    83d0:	00000000 	andeq	r0, r0, r0
    83d4:	0101db03 	tsteq	r1, r3, lsl #22
    83d8:	00010216 	andeq	r0, r1, r6, lsl r2
    83dc:	01050101 	tsteq	r5, r1, lsl #2
    83e0:	00020500 	andeq	r0, r2, r0, lsl #10
    83e4:	03000000 	movweq	r0, #0
    83e8:	160101e6 	strne	r0, [r1], -r6, ror #3
    83ec:	01000102 	tsteq	r0, r2, lsl #2
    83f0:	00010501 	andeq	r0, r1, r1, lsl #10
    83f4:	00000205 	andeq	r0, r0, r5, lsl #4
    83f8:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    83fc:	03050101 	movweq	r0, #20737	; 0x5101
    8400:	2f303d22 	svccs	0x00303d22
    8404:	2f222f22 	svccs	0x00222f22
    8408:	31232f22 			; <UNDEFINED> instruction: 0x31232f22
    840c:	13060105 	movwne	r0, #24837	; 0x6105
    8410:	01000a02 	tsteq	r0, r2, lsl #20
    8414:	00010501 	andeq	r0, r1, r1, lsl #10
    8418:	15dc0205 	ldrbne	r0, [ip, #517]	; 0x205
    841c:	fd030800 	stc2	8, cr0, [r3, #-0]
    8420:	01060101 	tsteq	r6, r1, lsl #2
    8424:	30060305 	andcc	r0, r6, r5, lsl #6
    8428:	01063305 	tsteq	r6, r5, lsl #6
    842c:	4a07052e 	bmi	1c98ec <_Min_Heap_Size+0x1c90ec>
    8430:	05660605 	strbeq	r0, [r6, #-1541]!	; 0xfffff9fb
    8434:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    8438:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    843c:	0505350c 	streq	r3, [r5, #-1292]	; 0xfffffaf4
    8440:	05672906 	strbeq	r2, [r7, #-2310]!	; 0xfffff6fa
    8444:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    8448:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    844c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    8450:	2e71030c 	cdpcs	3, 7, cr0, cr1, cr12, {0}
    8454:	10030105 	andne	r0, r3, r5, lsl #2
    8458:	07022020 	streq	r2, [r2, -r0, lsr #32]
    845c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8460:	02050001 	andeq	r0, r5, #1
    8464:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
    8468:	01019d03 	tsteq	r1, r3, lsl #26
    846c:	5c230305 	stcpl	3, cr0, [r3], #-20	; 0xffffffec
    8470:	3f3f4e4e 	svccc	0x003f4e4e
    8474:	06010531 			; <UNDEFINED> instruction: 0x06010531
    8478:	00040213 	andeq	r0, r4, r3, lsl r2
    847c:	01050101 	tsteq	r5, r1, lsl #2
    8480:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    8484:	03080016 	movweq	r0, #32790	; 0x8016
    8488:	050102b8 	streq	r0, [r1, #-696]	; 0xfffffd48
    848c:	0a051303 	beq	14d0a0 <_Min_Heap_Size+0x14c8a0>
    8490:	01050106 	tsteq	r5, r6, lsl #2
    8494:	00060267 	andeq	r0, r6, r7, ror #4
    8498:	01050101 	tsteq	r5, r1, lsl #2
    849c:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
    84a0:	03080016 	movweq	r0, #32790	; 0x8016
    84a4:	050102c3 	streq	r0, [r1, #-707]	; 0xfffffd3d
    84a8:	0a051303 	beq	14d0bc <_Min_Heap_Size+0x14c8bc>
    84ac:	01050106 	tsteq	r5, r6, lsl #2
    84b0:	0004022f 	andeq	r0, r4, pc, lsr #4
    84b4:	01050101 	tsteq	r5, r1, lsl #2
    84b8:	00020500 	andeq	r0, r2, r0, lsl #10
    84bc:	03000000 	movweq	r0, #0
    84c0:	050102cc 	streq	r0, [r1, #-716]	; 0xfffffd34
    84c4:	01051303 	tsteq	r5, r3, lsl #6
    84c8:	06021306 	streq	r1, [r2], -r6, lsl #6
    84cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    84d0:	02050001 	andeq	r0, r5, #1
    84d4:	00000000 	andeq	r0, r0, r0
    84d8:	0102d503 	tsteq	r2, r3, lsl #10
    84dc:	03050106 	movweq	r0, #20742	; 0x5106
    84e0:	14132f06 	ldrne	r2, [r3], #-3846	; 0xfffff0fa
    84e4:	01040200 	mrseq	r0, R12_usr
    84e8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    84ec:	062e0204 	strteq	r0, [lr], -r4, lsl #4
    84f0:	06120530 			; <UNDEFINED> instruction: 0x06120530
    84f4:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    84f8:	05291505 	streq	r1, [r9, #-1285]!	; 0xfffffafb
    84fc:	17030603 	strne	r0, [r3, -r3, lsl #12]
    8500:	06010520 	streq	r0, [r1], -r0, lsr #10
    8504:	00030513 	andeq	r0, r3, r3, lsl r5
    8508:	03030402 	movweq	r0, #13314	; 0x3402
    850c:	0200206b 	andeq	r2, r0, #107	; 0x6b
    8510:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    8514:	15410605 	strbne	r0, [r1, #-1541]	; 0xfffff9fb
    8518:	01061005 	tsteq	r6, r5
    851c:	23060505 	movwcs	r0, #25861	; 0x6505
    8520:	01060e05 	tsteq	r6, r5, lsl #28
    8524:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    8528:	01060805 	tsteq	r6, r5, lsl #16
    852c:	31060705 	tstcc	r6, r5, lsl #14
    8530:	01061205 	tsteq	r6, r5, lsl #4
    8534:	01000902 	tsteq	r0, r2, lsl #18
    8538:	00010501 	andeq	r0, r1, r1, lsl #10
    853c:	00000205 	andeq	r0, r0, r5, lsl #4
    8540:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    8544:	03050102 	movweq	r0, #20738	; 0x5102
    8548:	06010513 			; <UNDEFINED> instruction: 0x06010513
    854c:	00060213 	andeq	r0, r6, r3, lsl r2
    8550:	01050101 	tsteq	r5, r1, lsl #2
    8554:	80020500 	andhi	r0, r2, r0, lsl #10
    8558:	03080016 	movweq	r0, #32790	; 0x8016
    855c:	06010386 	streq	r0, [r1], -r6, lsl #7
    8560:	06030501 	streq	r0, [r3], -r1, lsl #10
    8564:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    8568:	03052e01 	movweq	r2, #24065	; 0x5e01
    856c:	05152106 	ldreq	r2, [r5, #-262]	; 0xfffffefa
    8570:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8574:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    8578:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    857c:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    8580:	01040200 	mrseq	r0, R12_usr
    8584:	08052506 	stmdaeq	r5, {r1, r2, r8, sl, sp}
    8588:	01040200 	mrseq	r0, R12_usr
    858c:	000a0510 	andeq	r0, sl, r0, lsl r5
    8590:	06010402 	streq	r0, [r1], -r2, lsl #8
    8594:	00180501 	andseq	r0, r8, r1, lsl #10
    8598:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    859c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    85a0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    85a4:	02203101 	eoreq	r3, r0, #1073741824	; 0x40000000
    85a8:	01010003 	tsteq	r1, r3
    85ac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    85b0:	00000002 	andeq	r0, r0, r2
    85b4:	03a00300 	moveq	r0, #0, 6
    85b8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    85bc:	01061105 	tsteq	r6, r5, lsl #2
    85c0:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    85c4:	01010001 	tsteq	r1, r1
    85c8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    85cc:	00000002 	andeq	r0, r0, r2
    85d0:	03b00300 	movseq	r0, #0, 6
    85d4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    85d8:	01061205 	tsteq	r6, r5, lsl #4
    85dc:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    85e0:	01010001 	tsteq	r1, r1
    85e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    85e8:	00000002 	andeq	r0, r0, r2
    85ec:	03ba0300 			; <UNDEFINED> instruction: 0x03ba0300
    85f0:	13030501 	movwne	r0, #13569	; 0x3501
    85f4:	13060105 	movwne	r0, #24837	; 0x6105
    85f8:	01000402 	tsteq	r0, r2, lsl #8
    85fc:	00010501 	andeq	r0, r1, r1, lsl #10
    8600:	00000205 	andeq	r0, r0, r5, lsl #4
    8604:	c3030000 	movwgt	r0, #12288	; 0x3000
    8608:	03050103 	movweq	r0, #20739	; 0x5103
    860c:	06110513 			; <UNDEFINED> instruction: 0x06110513
    8610:	2f010501 	svccs	0x00010501
    8614:	01000402 	tsteq	r0, r2, lsl #8
    8618:	00010501 	andeq	r0, r1, r1, lsl #10
    861c:	00000205 	andeq	r0, r0, r5, lsl #4
    8620:	cc030000 	stcgt	0, cr0, [r3], {-0}
    8624:	03050103 	movweq	r0, #20739	; 0x5103
    8628:	06110513 			; <UNDEFINED> instruction: 0x06110513
    862c:	2f010501 	svccs	0x00010501
    8630:	01000602 	tsteq	r0, r2, lsl #12
    8634:	00010501 	andeq	r0, r1, r1, lsl #10
    8638:	00000205 	andeq	r0, r0, r5, lsl #4
    863c:	d5030000 	strle	r0, [r3, #-0]
    8640:	03050103 	movweq	r0, #20739	; 0x5103
    8644:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8648:	00030259 	andeq	r0, r3, r9, asr r2
    864c:	01050101 	tsteq	r5, r1, lsl #2
    8650:	00020500 	andeq	r0, r2, r0, lsl #10
    8654:	03000000 	movweq	r0, #0
    8658:	050103de 	streq	r0, [r1, #-990]	; 0xfffffc22
    865c:	01051303 	tsteq	r5, r3, lsl #6
    8660:	03025906 	movweq	r5, #10502	; 0x2906
    8664:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8668:	02050001 	andeq	r0, r5, #1
    866c:	00000000 	andeq	r0, r0, r0
    8670:	0103e703 	tsteq	r3, r3, lsl #14
    8674:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8678:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    867c:	01010003 	tsteq	r1, r3
    8680:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8684:	00000002 	andeq	r0, r0, r2
    8688:	03f00300 	mvnseq	r0, #0, 6
    868c:	13030501 	movwne	r0, #13569	; 0x3501
    8690:	59060105 	stmdbpl	r6, {r0, r2, r8}
    8694:	01000302 	tsteq	r0, r2, lsl #6
    8698:	00010501 	andeq	r0, r1, r1, lsl #10
    869c:	00000205 	andeq	r0, r0, r5, lsl #4
    86a0:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    86a4:	03050103 	movweq	r0, #20739	; 0x5103
    86a8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    86ac:	00030259 	andeq	r0, r3, r9, asr r2
    86b0:	01050101 	tsteq	r5, r1, lsl #2
    86b4:	00020500 	andeq	r0, r2, r0, lsl #10
    86b8:	03000000 	movweq	r0, #0
    86bc:	05010482 	streq	r0, [r1, #-1154]	; 0xfffffb7e
    86c0:	01051303 	tsteq	r5, r3, lsl #6
    86c4:	03025906 	movweq	r5, #10502	; 0x2906
    86c8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    86cc:	02050001 	andeq	r0, r5, #1
    86d0:	00000000 	andeq	r0, r0, r0
    86d4:	01048d03 	tsteq	r4, r3, lsl #26
    86d8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    86dc:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    86e0:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    86e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    86e8:	02050001 	andeq	r0, r5, #1
    86ec:	00000000 	andeq	r0, r0, r0
    86f0:	01049803 	tsteq	r4, r3, lsl #16
    86f4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    86f8:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    86fc:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    8700:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8704:	02050001 	andeq	r0, r5, #1
    8708:	00000000 	andeq	r0, r0, r0
    870c:	0104a103 	tsteq	r4, r3, lsl #2
    8710:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8714:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8718:	01010006 	tsteq	r1, r6
    871c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8720:	00000002 	andeq	r0, r0, r2
    8724:	04aa0300 	strteq	r0, [sl], #768	; 0x300
    8728:	13030501 	movwne	r0, #13569	; 0x3501
    872c:	13060105 	movwne	r0, #24837	; 0x6105
    8730:	01000602 	tsteq	r0, r2, lsl #12
    8734:	00010501 	andeq	r0, r1, r1, lsl #10
    8738:	00000205 	andeq	r0, r0, r5, lsl #4
    873c:	b3030000 	movwlt	r0, #12288	; 0x3000
    8740:	03050104 	movweq	r0, #20740	; 0x5104
    8744:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8748:	00060213 	andeq	r0, r6, r3, lsl r2
    874c:	026b0101 	rsbeq	r0, fp, #1073741824	; 0x40000000
    8750:	00030000 	andeq	r0, r3, r0
    8754:	00000185 	andeq	r0, r0, r5, lsl #3
    8758:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    875c:	0101000d 	tsteq	r1, sp
    8760:	00000101 	andeq	r0, r0, r1, lsl #2
    8764:	00000100 	andeq	r0, r0, r0, lsl #2
    8768:	2f2e2e01 	svccs	0x002e2e01
    876c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    8770:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    8774:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8778:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    877c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8780:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8784:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8788:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    878c:	5f6d7261 	svcpl	0x006d7261
    8790:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8794:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8798:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    879c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    87a0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    87a4:	30312d69 	eorscc	r2, r1, r9, ror #26
    87a8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    87ac:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    87b0:	615c3031 	cmpvs	ip, r1, lsr r0
    87b4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    87b8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    87bc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    87c0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    87c4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    87c8:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    87cc:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    87d0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    87d4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    87d8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    87dc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    87e0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    87e4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    87e8:	5f6d7261 	svcpl	0x006d7261
    87ec:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    87f0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    87f4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    87f8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    87fc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8800:	30312d69 	eorscc	r2, r1, r9, ror #26
    8804:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8808:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    880c:	615c3031 	cmpvs	ip, r1, lsr r0
    8810:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8814:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8818:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    881c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8820:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8824:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    8828:	2f2e2e00 	svccs	0x002e2e00
    882c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8830:	2f737265 	svccs	0x00737265
    8834:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    8838:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    883c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8840:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    8844:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8848:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    884c:	534d432f 	movtpl	r4, #54063	; 0xd32f
    8850:	442f5349 	strtmi	r5, [pc], #-841	; 8858 <_Min_Heap_Size+0x8058>
    8854:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    8858:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    885c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    8860:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    8864:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    8868:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    886c:	00006564 	andeq	r6, r0, r4, ror #10
    8870:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    8874:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    8878:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    887c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8880:	0100632e 	tsteq	r0, lr, lsr #6
    8884:	645f0000 	ldrbvs	r0, [pc], #-0	; 888c <_Min_Heap_Size+0x808c>
    8888:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    888c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 8894 <_Min_Heap_Size+0x8094>
    8890:	73657079 	cmnvc	r5, #121	; 0x79
    8894:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8898:	735f0000 	cmpvc	pc, #0
    889c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    88a0:	00682e74 	rsbeq	r2, r8, r4, ror lr
    88a4:	63000003 	movwvs	r0, #3
    88a8:	5f65726f 	svcpl	0x0065726f
    88ac:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    88b0:	00040068 	andeq	r0, r4, r8, rrx
    88b4:	73797300 	cmnvc	r9, #0, 6
    88b8:	5f6d6574 	svcpl	0x006d6574
    88bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    88c0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    88c4:	00682e78 	rsbeq	r2, r8, r8, ror lr
    88c8:	73000005 	movwvc	r0, #5
    88cc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    88d0:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    88d4:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    88d8:	00000500 	andeq	r0, r0, r0, lsl #10
    88dc:	00010500 	andeq	r0, r1, r0, lsl #10
    88e0:	16a80205 	strtne	r0, [r8], r5, lsl #4
    88e4:	a7030800 	strge	r0, [r3, -r0, lsl #16]
    88e8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    88ec:	06100515 			; <UNDEFINED> instruction: 0x06100515
    88f0:	03010501 	movweq	r0, #5377	; 0x1501
    88f4:	0302740b 	movweq	r7, #9227	; 0x240b
    88f8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    88fc:	02050001 	andeq	r0, r5, #1
    8900:	00000000 	andeq	r0, r0, r0
    8904:	0101dc03 	tsteq	r1, r3, lsl #24
    8908:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    890c:	01060c05 	tsteq	r6, r5, lsl #24
    8910:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    8914:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    8918:	581f0307 	ldmdapl	pc, {r0, r1, r2, r8, r9}	; <UNPREDICTABLE>
    891c:	01061705 	tsteq	r6, r5, lsl #14
    8920:	06070520 	streq	r0, [r7], -r0, lsr #10
    8924:	2063032f 	rsbcs	r0, r3, pc, lsr #6
    8928:	01061705 	tsteq	r6, r5, lsl #14
    892c:	06070520 	streq	r0, [r7], -r0, lsr #10
    8930:	0303052f 	movweq	r0, #13615	; 0x352f
    8934:	1c050120 	stfnes	f0, [r5], {32}
    8938:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    893c:	2e16052e 	cfmul64cs	mvdx0, mvdx6, mvdx14
    8940:	30060305 	andcc	r0, r6, r5, lsl #6
    8944:	01061305 	tsteq	r6, r5, lsl #6
    8948:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
    894c:	5f030607 	svcpl	0x00030607
    8950:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    8954:	07052001 	streq	r2, [r5, -r1]
    8958:	05262f06 	streq	r2, [r6, #-3846]!	; 0xfffff0fa
    895c:	20010617 	andcs	r0, r1, r7, lsl r6
    8960:	21060705 	tstcs	r6, r5, lsl #14
    8964:	01061105 	tsteq	r6, r5, lsl #2
    8968:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    896c:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    8970:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    8974:	053f0609 	ldreq	r0, [pc, #-1545]!	; 8373 <_Min_Heap_Size+0x7b73>
    8978:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    897c:	05203c2c 	streq	r3, [r0, #-3116]!	; 0xfffff3d4
    8980:	1005204a 	andne	r2, r5, sl, asr #32
    8984:	0607052e 	streq	r0, [r7], -lr, lsr #10
    8988:	06140536 			; <UNDEFINED> instruction: 0x06140536
    898c:	2e320501 	cdpcs	5, 3, cr0, cr2, cr1, {0}
    8990:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
    8994:	0705200c 	streq	r2, [r5, -ip]
    8998:	1f052106 	svcne	0x00052106
    899c:	17050106 	strne	r0, [r5, -r6, lsl #2]
    89a0:	0705202e 	streq	r2, [r5, -lr, lsr #32]
    89a4:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    89a8:	061d051b 			; <UNDEFINED> instruction: 0x061d051b
    89ac:	3c2c0501 	cfstr32cc	mvfx0, [ip], #-4
    89b0:	204a0520 	subcs	r0, sl, r0, lsr #10
    89b4:	2e2e1005 	cdpcs	0, 2, cr1, cr14, cr5, {0}
    89b8:	01000c02 	tsteq	r0, r2, lsl #24
    89bc:	00063901 	andeq	r3, r6, r1, lsl #18
    89c0:	4e000300 	cdpmi	3, 0, cr0, cr0, cr0, {0}
    89c4:	02000002 	andeq	r0, r0, #2
    89c8:	0d0efb01 	vstreq	d15, [lr, #-4]
    89cc:	01010100 	mrseq	r0, (UNDEF: 17)
    89d0:	00000001 	andeq	r0, r0, r1
    89d4:	01000001 	tsteq	r0, r1
    89d8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    89dc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    89e0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    89e4:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    89e8:	61662f73 	smcvs	25331	; 0x62f3
    89ec:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    89f0:	706d7564 	rsbvc	r7, sp, r4, ror #10
    89f4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    89f8:	2f2e2e00 	svccs	0x002e2e00
    89fc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8a00:	2f737265 	svccs	0x00737265
    8a04:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    8a08:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    8a0c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8a10:	3a630065 	bcc	18c8bac <_Min_Heap_Size+0x18c83ac>
    8a14:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8a18:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8a1c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8a20:	6f72705c 	svcvs	0x0072705c
    8a24:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8a28:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8a2c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8a30:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8a34:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8a38:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8a3c:	61652d65 	cmnvs	r5, r5, ror #26
    8a40:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8a44:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8a48:	31323032 	teqcc	r2, r2, lsr r0
    8a4c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8a50:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8a54:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8a58:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8a5c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8a60:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8a64:	616d5c65 	cmnvs	sp, r5, ror #24
    8a68:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    8a6c:	3a630065 	bcc	18c8c08 <_Min_Heap_Size+0x18c8408>
    8a70:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8a74:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8a78:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8a7c:	6f72705c 	svcvs	0x0072705c
    8a80:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8a84:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8a88:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8a8c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8a90:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8a94:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8a98:	61652d65 	cmnvs	r5, r5, ror #26
    8a9c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8aa0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8aa4:	31323032 	teqcc	r2, r2, lsr r0
    8aa8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8aac:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    8ab0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8ab4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8ab8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8abc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8ac0:	30315c69 	eorscc	r5, r1, r9, ror #24
    8ac4:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    8ac8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8acc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8ad0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8ad4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8ad8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8adc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8ae0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8ae4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8ae8:	5f6d7261 	svcpl	0x006d7261
    8aec:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8af0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8af4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8af8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8afc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8b00:	30312d69 	eorscc	r2, r1, r9, ror #26
    8b04:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8b08:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8b0c:	615c3031 	cmpvs	ip, r1, lsr r0
    8b10:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8b14:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8b18:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8b1c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8b20:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8b24:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    8b28:	2f2e2e00 	svccs	0x002e2e00
    8b2c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8b30:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    8b34:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    8b38:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    8b3c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8b40:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    8b44:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
    8b48:	3a630063 	bcc	18c8cdc <_Min_Heap_Size+0x18c84dc>
    8b4c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    8b50:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    8b54:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    8b58:	6f72705c 	svcvs	0x0072705c
    8b5c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    8b60:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8b64:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8b68:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    8b6c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8b70:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8b74:	61652d65 	cmnvs	r5, r5, ror #26
    8b78:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8b7c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8b80:	31323032 	teqcc	r2, r2, lsr r0
    8b84:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    8b88:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8b8c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8b90:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8b94:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    8b98:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8b9c:	66000065 	strvs	r0, [r0], -r5, rrx
    8ba0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8ba4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    8ba8:	00632e70 	rsbeq	r2, r3, r0, ror lr
    8bac:	63000001 	movwvs	r0, #1
    8bb0:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    8bb4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    8bb8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8bbc:	645f0000 	ldrbvs	r0, [pc], #-0	; 8bc4 <_Min_Heap_Size+0x83c4>
    8bc0:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8bc4:	745f746c 	ldrbvc	r7, [pc], #-1132	; 8bcc <_Min_Heap_Size+0x83cc>
    8bc8:	73657079 	cmnvc	r5, #121	; 0x79
    8bcc:	0300682e 	movweq	r6, #2094	; 0x82e
    8bd0:	74730000 	ldrbtvc	r0, [r3], #-0
    8bd4:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    8bd8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    8bdc:	735f0000 	cmpvc	pc, #0
    8be0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    8be4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    8be8:	66000005 	strvs	r0, [r0], -r5
    8bec:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8bf0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    8bf4:	00682e70 	rsbeq	r2, r8, r0, ror lr
    8bf8:	73000006 	movwvc	r0, #6
    8bfc:	6f696474 	svcvs	0x00696474
    8c00:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    8c04:	623c0000 	eorsvs	r0, ip, #0
    8c08:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    8c0c:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    8c10:	00000000 	andeq	r0, r0, r0
    8c14:	00380500 	eorseq	r0, r8, r0, lsl #10
    8c18:	16bc0205 	ldrtne	r0, [ip], r5, lsl #4
    8c1c:	81030800 	tsthi	r3, r0, lsl #16
    8c20:	01060101 	tsteq	r6, r1, lsl #2
    8c24:	21060505 	tstcs	r6, r5, lsl #10
    8c28:	01060e05 	tsteq	r6, r5, lsl #28
    8c2c:	2f060505 	svccs	0x00060505
    8c30:	010a0513 	tsteq	sl, r3, lsl r5
    8c34:	01060505 	tsteq	r6, r5, lsl #10
    8c38:	02000905 	andeq	r0, r0, #81920	; 0x14000
    8c3c:	21060304 	tstcs	r6, r4, lsl #6
    8c40:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    8c44:	01060304 	tsteq	r6, r4, lsl #6
    8c48:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    8c4c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    8c50:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    8c54:	05570603 	ldrbeq	r0, [r7, #-1539]	; 0xfffff9fd
    8c58:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    8c5c:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    8c60:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    8c64:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    8c68:	04020005 	streq	r0, [r2], #-5
    8c6c:	06010601 	streq	r0, [r1], -r1, lsl #12
    8c70:	06220531 			; <UNDEFINED> instruction: 0x06220531
    8c74:	05052f01 	streq	r2, [r5, #-3841]	; 0xfffff0ff
    8c78:	01052f06 	tsteq	r5, r6, lsl #30
    8c7c:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    8c80:	01010002 	tsteq	r1, r2
    8c84:	05003305 	streq	r3, [r0, #-773]	; 0xfffffcfb
    8c88:	0016e802 	andseq	lr, r6, r2, lsl #16
    8c8c:	018c0308 	orreq	r0, ip, r8, lsl #6
    8c90:	16050501 	strne	r0, [r5], -r1, lsl #10
    8c94:	01060e05 	tsteq	r6, r5, lsl #28
    8c98:	2f060505 	svccs	0x00060505
    8c9c:	01063205 	tsteq	r6, r5, lsl #4
    8ca0:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    8ca4:	052f0605 	streq	r0, [pc, #-1541]!	; 86a7 <_Min_Heap_Size+0x7ea7>
    8ca8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    8cac:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    8cb0:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    8cb4:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    8cb8:	26050106 	strcs	r0, [r5], -r6, lsl #2
    8cbc:	01040200 	mrseq	r0, R12_usr
    8cc0:	3f0c053c 	svccc	0x000c053c
    8cc4:	1b100520 	blne	40a14c <_Min_Heap_Size+0x40994c>
    8cc8:	23202020 			; <UNDEFINED> instruction: 0x23202020
    8ccc:	01052020 	tsteq	r5, r0, lsr #32
    8cd0:	00010223 	andeq	r0, r1, r3, lsr #4
    8cd4:	73050101 	movwvc	r0, #20737	; 0x5101
    8cd8:	20020500 	andcs	r0, r2, r0, lsl #10
    8cdc:	03080017 	movweq	r0, #32791	; 0x8017
    8ce0:	060101ee 	streq	r0, [r1], -lr, ror #3
    8ce4:	06050501 	streq	r0, [r5], -r1, lsl #10
    8ce8:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    8cec:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    8cf0:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    8cf4:	05055801 	streq	r5, [r5, #-2049]	; 0xfffff7ff
    8cf8:	02002306 	andeq	r2, r0, #402653184	; 0x18000000
    8cfc:	20060104 	andcs	r0, r6, r4, lsl #2
    8d00:	05290905 	streq	r0, [r9, #-2309]!	; 0xfffff6fb
    8d04:	04020005 	streq	r0, [r2], #-5
    8d08:	00360602 	eorseq	r0, r6, r2, lsl #12
    8d0c:	20010402 	andcs	r0, r1, r2, lsl #8
    8d10:	03040200 	movweq	r0, #16896	; 0x4200
    8d14:	09052006 	stmdbeq	r5, {r1, r2, sp}
    8d18:	0c053006 	stceq	0, cr3, [r5], {6}
    8d1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8d20:	13052206 	movwne	r2, #20998	; 0x5206
    8d24:	0c050106 	stfeqs	f0, [r5], {6}
    8d28:	002f0520 	eoreq	r0, pc, r0, lsr #10
    8d2c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    8d30:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    8d34:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    8d38:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    8d3c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    8d40:	14400609 	strbne	r0, [r0], #-1545	; 0xfffff9f7
    8d44:	01060c05 	tsteq	r6, r5, lsl #24
    8d48:	30060905 	andcc	r0, r6, r5, lsl #18
    8d4c:	01060c05 	tsteq	r6, r5, lsl #24
    8d50:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    8d54:	01060e05 	tsteq	r6, r5, lsl #28
    8d58:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    8d5c:	01060e05 	tsteq	r6, r5, lsl #28
    8d60:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    8d64:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    8d68:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    8d6c:	052f0609 	streq	r0, [pc, #-1545]!	; 876b <_Min_Heap_Size+0x7f6b>
    8d70:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    8d74:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    8d78:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    8d7c:	10053301 	andne	r3, r5, r1, lsl #6
    8d80:	3c3c5a03 			; <UNDEFINED> instruction: 0x3c3c5a03
    8d84:	0602583f 			; <UNDEFINED> instruction: 0x0602583f
    8d88:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d8c:	02050036 	andeq	r0, r5, #54	; 0x36
    8d90:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
    8d94:	01019b03 	tsteq	r1, r3, lsl #22
    8d98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8d9c:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
    8da0:	05133006 	ldreq	r3, [r3, #-6]
    8da4:	203e0601 	eorscs	r0, lr, r1, lsl #12
    8da8:	01000202 	tsteq	r0, r2, lsl #4
    8dac:	00360501 	eorseq	r0, r6, r1, lsl #10
    8db0:	17b40205 	ldrne	r0, [r4, r5, lsl #4]!
    8db4:	a3030800 	movwge	r0, #14336	; 0x3800
    8db8:	01060101 	tsteq	r6, r1, lsl #2
    8dbc:	21060505 	tstcs	r6, r5, lsl #10
    8dc0:	0e051314 	mcreq	3, 0, r1, cr5, cr4, {0}
    8dc4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8dc8:	01053206 	tsteq	r5, r6, lsl #4
    8dcc:	01021306 	tsteq	r2, r6, lsl #6
    8dd0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8dd4:	0205001c 	andeq	r0, r5, #28
    8dd8:	080017bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip}
    8ddc:	0100f603 	tsteq	r0, r3, lsl #12	; <UNPREDICTABLE>
    8de0:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    8de4:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    8de8:	05052018 	streq	r2, [r5, #-24]	; 0xffffffe8
    8dec:	1a052f06 	bne	154a0c <_Min_Heap_Size+0x15420c>
    8df0:	18050106 	stmdane	r5, {r1, r2, r8}
    8df4:	06050520 	streq	r0, [r5], -r0, lsr #10
    8df8:	05684c2f 	strbeq	r4, [r8, #-3119]!	; 0xfffff3d1
    8dfc:	024c0601 	subeq	r0, ip, #1048576	; 0x100000
    8e00:	01010013 	tsteq	r1, r3, lsl r0
    8e04:	05004305 	streq	r4, [r0, #-773]	; 0xfffffcfb
    8e08:	00180c02 	andseq	r0, r8, r2, lsl #24
    8e0c:	01ae0308 			; <UNDEFINED> instruction: 0x01ae0308
    8e10:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8e14:	133d0605 	teqne	sp, #5242880	; 0x500000
    8e18:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    8e1c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8e20:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8e24:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    8e28:	16050106 	strne	r0, [r5], -r6, lsl #2
    8e2c:	06050520 	streq	r0, [r5], -r0, lsr #10
    8e30:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8e34:	20160501 	andscs	r0, r6, r1, lsl #10
    8e38:	21060505 	tstcs	r6, r5, lsl #10
    8e3c:	01061805 	tsteq	r6, r5, lsl #16
    8e40:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8e44:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8e48:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8e4c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8e50:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8e54:	16050106 	strne	r0, [r5], -r6, lsl #2
    8e58:	06050520 	streq	r0, [r5], -r0, lsr #10
    8e5c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8e60:	20160501 	andscs	r0, r6, r1, lsl #10
    8e64:	21060505 	tstcs	r6, r5, lsl #10
    8e68:	01061805 	tsteq	r6, r5, lsl #16
    8e6c:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8e70:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8e74:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8e78:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8e7c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8e80:	16050106 	strne	r0, [r5], -r6, lsl #2
    8e84:	06050520 	streq	r0, [r5], -r0, lsr #10
    8e88:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8e8c:	20160501 	andscs	r0, r6, r1, lsl #10
    8e90:	21060505 	tstcs	r6, r5, lsl #10
    8e94:	01061805 	tsteq	r6, r5, lsl #16
    8e98:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8e9c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8ea0:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8ea4:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8ea8:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8eac:	16050106 	strne	r0, [r5], -r6, lsl #2
    8eb0:	06050520 	streq	r0, [r5], -r0, lsr #10
    8eb4:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8eb8:	20160501 	andscs	r0, r6, r1, lsl #10
    8ebc:	21060505 	tstcs	r6, r5, lsl #10
    8ec0:	01061805 	tsteq	r6, r5, lsl #16
    8ec4:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8ec8:	06220605 	strteq	r0, [r2], -r5, lsl #12
    8ecc:	3d2f062e 	stccc	6, cr0, [pc, #-184]!	; 8e1c <_Min_Heap_Size+0x861c>
    8ed0:	4b4b4b3d 	blmi	12dbbcc <_Min_Heap_Size+0x12db3cc>
    8ed4:	4b4b4b4b 	blmi	12dbc08 <_Min_Heap_Size+0x12db408>
    8ed8:	4b4b4b4b 	blmi	12dbc0c <_Min_Heap_Size+0x12db40c>
    8edc:	4b4b4b4b 	blmi	12dbc10 <_Min_Heap_Size+0x12db410>
    8ee0:	143e3d4b 	ldrtne	r3, [lr], #-3403	; 0xfffff2b5
    8ee4:	01060905 	tsteq	r6, r5, lsl #18
    8ee8:	053c0805 	ldreq	r0, [ip, #-2053]!	; 0xfffff7fb
    8eec:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    8ef0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    8ef4:	06970605 	ldreq	r0, [r7], r5, lsl #12
    8ef8:	592f0620 	stmdbpl	pc!, {r5, r9, sl}	; <UNPREDICTABLE>
    8efc:	01061005 	tsteq	r6, r5
    8f00:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    8f04:	051b0609 	ldreq	r0, [fp, #-1545]	; 0xfffff9f7
    8f08:	82010611 	andhi	r0, r1, #17825792	; 0x1100000
    8f0c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    8f10:	26060304 	strcs	r0, [r6], -r4, lsl #6
    8f14:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    8f18:	05650304 	strbeq	r0, [r5, #-772]!	; 0xfffffcfc
    8f1c:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    8f20:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    8f24:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    8f28:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    8f2c:	04020005 	streq	r0, [r2], #-5
    8f30:	06010601 	streq	r0, [r1], -r1, lsl #12
    8f34:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    8f38:	0e053d01 	cdpeq	13, 0, cr3, cr5, cr1, {0}
    8f3c:	01040200 	mrseq	r0, R12_usr
    8f40:	000b0501 	andeq	r0, fp, r1, lsl #10
    8f44:	01010402 	tsteq	r1, r2, lsl #8
    8f48:	01003602 	tsteq	r0, r2, lsl #12
    8f4c:	002e0501 	eoreq	r0, lr, r1, lsl #10
    8f50:	00000205 	andeq	r0, r0, r5, lsl #4
    8f54:	9a030000 	bls	c8f5c <_Min_Heap_Size+0xc875c>
    8f58:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    8f5c:	05020413 	streq	r0, [r2, #-1043]	; 0xfffffbed
    8f60:	06c7031f 			; <UNDEFINED> instruction: 0x06c7031f
    8f64:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8f68:	01062f14 	tsteq	r6, r4, lsl pc
    8f6c:	01050104 	tsteq	r5, r4, lsl #2
    8f70:	0179b503 	cmneq	r9, r3, lsl #10
    8f74:	01000102 	tsteq	r0, r2, lsl #2
    8f78:	002e0501 	eoreq	r0, lr, r1, lsl #10
    8f7c:	00000205 	andeq	r0, r0, r5, lsl #4
    8f80:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    8f84:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    8f88:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8f8c:	00040213 	andeq	r0, r4, r3, lsl r2
    8f90:	29050101 	stmdbcs	r5, {r0, r8}
    8f94:	00020500 	andeq	r0, r2, r0, lsl #10
    8f98:	03000000 	movweq	r0, #0
    8f9c:	050102a2 	streq	r0, [r1, #-674]	; 0xfffffd5e
    8fa0:	01051305 	tsteq	r5, r5, lsl #6
    8fa4:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    8fa8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8fac:	02050029 	andeq	r0, r5, #41	; 0x29
    8fb0:	00000000 	andeq	r0, r0, r0
    8fb4:	0102a603 	tsteq	r2, r3, lsl #12
    8fb8:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    8fbc:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8fc0:	01010004 	tsteq	r1, r4
    8fc4:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    8fc8:	00000002 	andeq	r0, r0, r2
    8fcc:	02aa0300 	adceq	r0, sl, #0, 6
    8fd0:	13050501 	movwne	r0, #21761	; 0x5501
    8fd4:	06080513 			; <UNDEFINED> instruction: 0x06080513
    8fd8:	06090501 	streq	r0, [r9], -r1, lsl #10
    8fdc:	061d0521 	ldreq	r0, [sp], -r1, lsr #10
    8fe0:	06090501 	streq	r0, [r9], -r1, lsl #10
    8fe4:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    8fe8:	09052001 	stmdbeq	r5, {r0, sp}
    8fec:	0605051d 			; <UNDEFINED> instruction: 0x0605051d
    8ff0:	06010525 	streq	r0, [r1], -r5, lsr #10
    8ff4:	00040213 	andeq	r0, r4, r3, lsl r2
    8ff8:	02980101 	addseq	r0, r8, #1073741824	; 0x40000000
    8ffc:	00030000 	andeq	r0, r3, r0
    9000:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    9004:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    9008:	0101000d 	tsteq	r1, sp
    900c:	00000101 	andeq	r0, r0, r1, lsl #2
    9010:	00000100 	andeq	r0, r0, r0, lsl #2
    9014:	2f2e2e01 	svccs	0x002e2e01
    9018:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    901c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    9020:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    9024:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    9028:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    902c:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    9030:	70632f70 	rsbvc	r2, r3, r0, ror pc
    9034:	6f632f75 	svcvs	0x00632f75
    9038:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    903c:	00346d2d 	eorseq	r6, r4, sp, lsr #26
    9040:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    9044:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    9048:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    904c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    9050:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    9054:	615c6d61 	cmpvs	ip, r1, ror #26
    9058:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    905c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    9060:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    9064:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    9068:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    906c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9070:	2e30312d 	rsfcssp	f3, f0, #5.0
    9074:	30322d33 	eorscc	r2, r2, r3, lsr sp
    9078:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    907c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    9080:	6f6e2d6d 	svcvs	0x006e2d6d
    9084:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9088:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    908c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    9090:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    9094:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    9098:	00656e69 	rsbeq	r6, r5, r9, ror #28
    909c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    90a0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    90a4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    90a8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    90ac:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    90b0:	615c6d61 	cmpvs	ip, r1, ror #26
    90b4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    90b8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    90bc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    90c0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    90c4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    90c8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    90cc:	2e30312d 	rsfcssp	f3, f0, #5.0
    90d0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    90d4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    90d8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    90dc:	6f6e2d6d 	svcvs	0x006e2d6d
    90e0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    90e4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    90e8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    90ec:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    90f0:	00737973 	rsbseq	r7, r3, r3, ror r9
    90f4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 90fc <_Min_Heap_Size+0x88fc>
    90f8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    90fc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    9100:	5349534d 	movtpl	r5, #37709	; 0x934d
    9104:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    9108:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    910c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    9110:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    9114:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    9118:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    911c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    9120:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    9124:	5f6d7261 	svcpl	0x006d7261
    9128:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    912c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    9130:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    9134:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    9138:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    913c:	30312d69 	eorscc	r2, r1, r9, ror #26
    9140:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    9144:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    9148:	615c3031 	cmpvs	ip, r1, lsr r0
    914c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    9150:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9154:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9158:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    915c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    9160:	61660000 	cmnvs	r6, r0
    9164:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    9168:	2e6c6168 	powcsez	f6, f4, #0.0
    916c:	00010063 	andeq	r0, r1, r3, rrx
    9170:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    9174:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    9178:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    917c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    9180:	00020068 	andeq	r0, r2, r8, rrx
    9184:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    9188:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    918c:	0300682e 	movweq	r6, #2094	; 0x82e
    9190:	6f630000 	svcvs	0x00630000
    9194:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    9198:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    919c:	00000400 	andeq	r0, r0, r0, lsl #8
    91a0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    91a4:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    91a8:	3c000005 	stccc	0, cr0, [r0], {5}
    91ac:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    91b0:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    91b4:	0000003e 	andeq	r0, r0, lr, lsr r0
    91b8:	35050000 	strcc	r0, [r5, #-0]
    91bc:	b8020500 	stmdalt	r2, {r8, sl}
    91c0:	03080019 	movweq	r0, #32793	; 0x8019
    91c4:	0106010e 	tsteq	r6, lr, lsl #2
    91c8:	2f060505 	svccs	0x00060505
    91cc:	2f062006 	svccs	0x00062006
    91d0:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    91d4:	06090501 	streq	r0, [r9], -r1, lsl #10
    91d8:	4005053d 	andmi	r0, r5, sp, lsr r5
    91dc:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    91e0:	06090501 	streq	r0, [r9], -r1, lsl #10
    91e4:	4005053d 	andmi	r0, r5, sp, lsr r5
    91e8:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    91ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    91f0:	4005053d 	andmi	r0, r5, sp, lsr r5
    91f4:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
    91f8:	03060905 	movweq	r0, #26885	; 0x6905
    91fc:	50502071 	subspl	r2, r0, r1, ror r0
    9200:	01001802 	tsteq	r0, r2, lsl #16
    9204:	00340501 	eorseq	r0, r4, r1, lsl #10
    9208:	1a400205 	bne	1009a24 <_Min_Heap_Size+0x1009224>
    920c:	25030800 	strcs	r0, [r3, #-2048]	; 0xfffff800
    9210:	13050501 	movwne	r0, #21761	; 0x5501
    9214:	01060805 	tsteq	r6, r5, lsl #16
    9218:	203d1005 	eorscs	r1, sp, r5
    921c:	22010522 	andcs	r0, r1, #142606336	; 0x8800000
    9220:	01000102 	tsteq	r0, r2, lsl #2
    9224:	00200501 	eoreq	r0, r0, r1, lsl #10
    9228:	00000205 	andeq	r0, r0, r5, lsl #4
    922c:	2d030000 	stccs	0, cr0, [r3, #-0]
    9230:	21050501 	tstcs	r5, r1, lsl #10
    9234:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    9238:	06050501 	streq	r0, [r5], -r1, lsl #10
    923c:	01051359 	tsteq	r5, r9, asr r3
    9240:	06024b06 	streq	r4, [r2], -r6, lsl #22
    9244:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9248:	0205001f 	andeq	r0, r5, #31
    924c:	08001a50 	stmdaeq	r0, {r4, r6, r9, fp, ip}
    9250:	05013503 	streq	r3, [r1, #-1283]	; 0xfffffafd
    9254:	05132f05 	ldreq	r2, [r3, #-3845]	; 0xfffff0fb
    9258:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    925c:	052f0605 	streq	r0, [pc, #-1541]!	; 8c5f <_Min_Heap_Size+0x845f>
    9260:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    9264:	13590605 	cmpne	r9, #5242880	; 0x500000
    9268:	01060d05 	tsteq	r6, r5, lsl #26
    926c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    9270:	67210605 	strvs	r0, [r1, -r5, lsl #12]!
    9274:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    9278:	200b0501 	andcs	r0, fp, r1, lsl #10
    927c:	21060505 	tstcs	r6, r5, lsl #10
    9280:	0d051359 	stceq	3, cr1, [r5, #-356]	; 0xfffffe9c
    9284:	0b050106 	bleq	1496a4 <_Min_Heap_Size+0x148ea4>
    9288:	0605052e 	streq	r0, [r5], -lr, lsr #10
    928c:	06010521 	streq	r0, [r1], -r1, lsr #10
    9290:	00060259 	andeq	r0, r6, r9, asr r2
    9294:	01e40101 	mvneq	r0, r1, lsl #2
    9298:	00030000 	andeq	r0, r3, r0
    929c:	0000017c 	andeq	r0, r0, ip, ror r1
    92a0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    92a4:	0101000d 	tsteq	r1, sp
    92a8:	00000101 	andeq	r0, r0, r1, lsl #2
    92ac:	00000100 	andeq	r0, r0, r0, lsl #2
    92b0:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
    92b4:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    92b8:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    92bc:	63006e6f 	movwvs	r6, #3695	; 0xe6f
    92c0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    92c4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    92c8:	6f646978 	svcvs	0x00646978
    92cc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    92d0:	6172676f 	cmnvs	r2, pc, ror #14
    92d4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    92d8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    92dc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    92e0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    92e4:	6f6e2d6d 	svcvs	0x006e2d6d
    92e8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    92ec:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    92f0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    92f4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    92f8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    92fc:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    9300:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    9304:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9308:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    930c:	61652d65 	cmnvs	r5, r5, ror #26
    9310:	315c6962 	cmpcc	ip, r2, ror #18
    9314:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    9318:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    931c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    9320:	3a630065 	bcc	18c94bc <_Min_Heap_Size+0x18c8cbc>
    9324:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    9328:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    932c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    9330:	6f72705c 	svcvs	0x0072705c
    9334:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    9338:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    933c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    9340:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    9344:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    9348:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    934c:	61652d65 	cmnvs	r5, r5, ror #26
    9350:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    9354:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    9358:	31323032 	teqcc	r2, r2, lsr r0
    935c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    9360:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    9364:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    9368:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    936c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    9370:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    9374:	616d5c65 	cmnvs	sp, r5, ror #24
    9378:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    937c:	3a630065 	bcc	18c9518 <_Min_Heap_Size+0x18c8d18>
    9380:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    9384:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    9388:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    938c:	6f72705c 	svcvs	0x0072705c
    9390:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    9394:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9398:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    939c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    93a0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    93a4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    93a8:	61652d65 	cmnvs	r5, r5, ror #26
    93ac:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    93b0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    93b4:	31323032 	teqcc	r2, r2, lsr r0
    93b8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    93bc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    93c0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    93c4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    93c8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    93cc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    93d0:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    93d4:	73000073 	movwvc	r0, #115	; 0x73
    93d8:	656d7379 	strbvs	r7, [sp, #-889]!	; 0xfffffc87
    93dc:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    93e0:	73000001 	movwvc	r0, #1
    93e4:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    93e8:	00682e66 	rsbeq	r2, r8, r6, ror #28
    93ec:	5f000002 	svcpl	0x00000002
    93f0:	61666564 	cmnvs	r6, r4, ror #10
    93f4:	5f746c75 	svcpl	0x00746c75
    93f8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    93fc:	00682e73 	rsbeq	r2, r8, r3, ror lr
    9400:	5f000003 	svcpl	0x00000003
    9404:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    9408:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    940c:	00000400 	andeq	r0, r0, r0, lsl #8
    9410:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    9414:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    9418:	00000004 	andeq	r0, r0, r4
    941c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9420:	001a9c02 	andseq	r9, sl, r2, lsl #24
    9424:	01350308 	teqeq	r5, r8, lsl #6
    9428:	03050106 	movweq	r0, #20742	; 0x5106
    942c:	13132f06 	tstne	r3, #6, 30
    9430:	06120513 			; <UNDEFINED> instruction: 0x06120513
    9434:	06030501 	streq	r0, [r3], -r1, lsl #10
    9438:	0515132f 	ldreq	r1, [r5, #-815]	; 0xfffffcd1
    943c:	2001060c 	andcs	r0, r1, ip, lsl #12
    9440:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    9444:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    9448:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    944c:	03053c06 	movweq	r3, #23558	; 0x5c06
    9450:	05134206 	ldreq	r4, [r3, #-518]	; 0xfffffdfa
    9454:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    9458:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    945c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    9460:	72030605 	andvc	r0, r3, #5242880	; 0x500000
    9464:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    9468:	06050501 	streq	r0, [r5], -r1, lsl #10
    946c:	060b0550 			; <UNDEFINED> instruction: 0x060b0550
    9470:	0605052e 	streq	r0, [r5], -lr, lsr #10
    9474:	060c052f 	streq	r0, [ip], -pc, lsr #10
    9478:	000c0201 	andeq	r0, ip, r1, lsl #4
    947c:	04190101 	ldreq	r0, [r9], #-257	; 0xfffffeff
    9480:	00030000 	andeq	r0, r3, r0
    9484:	0000014b 	andeq	r0, r0, fp, asr #2
    9488:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    948c:	0101000d 	tsteq	r1, sp
    9490:	00000101 	andeq	r0, r0, r1, lsl #2
    9494:	00000100 	andeq	r0, r0, r0, lsl #2
    9498:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
    949c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    94a0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    94a4:	63006e6f 	movwvs	r6, #3695	; 0xe6f
    94a8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    94ac:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    94b0:	6f646978 	svcvs	0x00646978
    94b4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    94b8:	6172676f 	cmnvs	r2, pc, ror #14
    94bc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    94c0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    94c4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    94c8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    94cc:	6f6e2d6d 	svcvs	0x006e2d6d
    94d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    94d4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    94d8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    94dc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    94e0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    94e4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    94e8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    94ec:	61652d65 	cmnvs	r5, r5, ror #26
    94f0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    94f4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    94f8:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    94fc:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    9500:	6300656e 	movwvs	r6, #1390	; 0x56e
    9504:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    9508:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    950c:	6f646978 	svcvs	0x00646978
    9510:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    9514:	6172676f 	cmnvs	r2, pc, ror #14
    9518:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    951c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    9520:	63675c63 	cmnvs	r7, #25344	; 0x6300
    9524:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    9528:	6f6e2d6d 	svcvs	0x006e2d6d
    952c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9530:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    9534:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    9538:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    953c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    9540:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9544:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9548:	61652d65 	cmnvs	r5, r5, ror #26
    954c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    9550:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    9554:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    9558:	00007379 	andeq	r7, r0, r9, ror r3
    955c:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    9560:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    9564:	0100632e 	tsteq	r0, lr, lsr #6
    9568:	645f0000 	ldrbvs	r0, [pc], #-0	; 9570 <_Min_Heap_Size+0x8d70>
    956c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    9570:	745f746c 	ldrbvc	r7, [pc], #-1132	; 9578 <_Min_Heap_Size+0x8d78>
    9574:	73657079 	cmnvc	r5, #121	; 0x79
    9578:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    957c:	745f0000 	ldrbvc	r0, [pc], #-0	; 9584 <_Min_Heap_Size+0x8d84>
    9580:	73657079 	cmnvc	r5, #121	; 0x79
    9584:	0300682e 	movweq	r6, #2094	; 0x82e
    9588:	745f0000 	ldrbvc	r0, [pc], #-0	; 9590 <_Min_Heap_Size+0x8d90>
    958c:	76656d69 	strbtvc	r6, [r5], -r9, ror #26
    9590:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    9594:	00000300 	andeq	r0, r0, r0, lsl #6
    9598:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    959c:	65707365 	ldrbvs	r7, [r0, #-869]!	; 0xfffffc9b
    95a0:	00682e63 	rsbeq	r2, r8, r3, ror #28
    95a4:	74000003 	strvc	r0, [r0], #-3
    95a8:	73657079 	cmnvc	r5, #121	; 0x79
    95ac:	0300682e 	movweq	r6, #2094	; 0x82e
    95b0:	74730000 	ldrbtvc	r0, [r3], #-0
    95b4:	682e7461 	stmdavs	lr!, {r0, r5, r6, sl, ip, sp, lr}
    95b8:	00000300 	andeq	r0, r0, r0, lsl #6
    95bc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    95c0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    95c4:	65000003 	strvs	r0, [r0, #-3]
    95c8:	6f6e7272 	svcvs	0x006e7272
    95cc:	0300682e 	movweq	r6, #2094	; 0x82e
    95d0:	05000000 	streq	r0, [r0, #-0]
    95d4:	02050001 	andeq	r0, r5, #1
    95d8:	00000000 	andeq	r0, r0, r0
    95dc:	13012c03 	movwne	r2, #7171	; 0x1c03
    95e0:	01000102 	tsteq	r0, r2, lsl #2
    95e4:	00010501 	andeq	r0, r1, r1, lsl #10
    95e8:	00000205 	andeq	r0, r0, r5, lsl #4
    95ec:	30030000 	andcc	r0, r3, r0
    95f0:	13030501 	movwne	r0, #13569	; 0x3501
    95f4:	13060105 	movwne	r0, #24837	; 0x6105
    95f8:	01000202 	tsteq	r0, r2, lsl #4
    95fc:	00010501 	andeq	r0, r1, r1, lsl #10
    9600:	00000205 	andeq	r0, r0, r5, lsl #4
    9604:	35030000 	strcc	r0, [r3, #-0]
    9608:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    960c:	13210603 			; <UNDEFINED> instruction: 0x13210603
    9610:	06090513 			; <UNDEFINED> instruction: 0x06090513
    9614:	0603052e 	streq	r0, [r3], -lr, lsr #10
    9618:	0601052f 	streq	r0, [r1], -pc, lsr #10
    961c:	00030213 	andeq	r0, r3, r3, lsl r2
    9620:	01050101 	tsteq	r5, r1, lsl #2
    9624:	00020500 	andeq	r0, r2, r0, lsl #10
    9628:	03000000 	movweq	r0, #0
    962c:	0106013d 	tsteq	r6, sp, lsr r1
    9630:	21060305 	tstcs	r6, r5, lsl #6
    9634:	01040200 	mrseq	r0, R12_usr
    9638:	000e054b 	andeq	r0, lr, fp, asr #10
    963c:	01010402 	tsteq	r1, r2, lsl #8
    9640:	02000905 	andeq	r0, r0, #81920	; 0x14000
    9644:	02010104 	andeq	r0, r1, #4, 2
    9648:	01010001 	tsteq	r1, r1
    964c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9650:	001ae402 	andseq	lr, sl, r2, lsl #8
    9654:	00c30308 	sbceq	r0, r3, r8, lsl #6
    9658:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    965c:	133d0603 	teqne	sp, #3145728	; 0x300000
    9660:	06100514 			; <UNDEFINED> instruction: 0x06100514
    9664:	20030501 	andcs	r0, r3, r1, lsl #10
    9668:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    966c:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
    9670:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    9674:	01060304 	tsteq	r6, r4, lsl #6
    9678:	02000905 	andeq	r0, r0, #81920	; 0x14000
    967c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    9680:	0402000c 	streq	r0, [r2], #-12
    9684:	24052003 	strcs	r2, [r5], #-3
    9688:	03040200 	movweq	r0, #16896	; 0x4200
    968c:	2b052c06 	blcs	1546ac <_Min_Heap_Size+0x153eac>
    9690:	03040200 	movweq	r0, #16896	; 0x4200
    9694:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9698:	03040200 	movweq	r0, #16896	; 0x4200
    969c:	00150522 	andseq	r0, r5, r2, lsr #10
    96a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    96a4:	0003051e 	andeq	r0, r3, lr, lsl r5
    96a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    96ac:	05330601 	ldreq	r0, [r3, #-1537]!	; 0xfffff9ff
    96b0:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    96b4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    96b8:	02050001 	andeq	r0, r5, #1
    96bc:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    96c0:	0100d003 	tsteq	r0, r3
    96c4:	03050106 	movweq	r0, #20742	; 0x5106
    96c8:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
    96cc:	01061005 	tsteq	r6, r5
    96d0:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
    96d4:	04020005 	streq	r0, [r2], #-5
    96d8:	00220603 	eoreq	r0, r2, r3, lsl #12
    96dc:	06030402 	streq	r0, [r3], -r2, lsl #8
    96e0:	04020001 	streq	r0, [r2], #-1
    96e4:	24052e03 	strcs	r2, [r5], #-3587	; 0xfffff1fd
    96e8:	03040200 	movweq	r0, #16896	; 0x4200
    96ec:	2b052c06 	blcs	15470c <_Min_Heap_Size+0x153f0c>
    96f0:	03040200 	movweq	r0, #16896	; 0x4200
    96f4:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    96f8:	01040200 	mrseq	r0, R12_usr
    96fc:	03052006 	movweq	r2, #20486	; 0x5006
    9700:	01040200 	mrseq	r0, R12_usr
    9704:	32060106 	andcc	r0, r6, #-2147483647	; 0x80000001
    9708:	13060105 	movwne	r0, #24837	; 0x6105
    970c:	0101002e 	tsteq	r1, lr, lsr #32
    9710:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9714:	001b2002 	andseq	r2, fp, r2
    9718:	00dc0308 	sbcseq	r0, ip, r8, lsl #6
    971c:	13030501 	movwne	r0, #13569	; 0x3501
    9720:	06010513 			; <UNDEFINED> instruction: 0x06010513
    9724:	01022e13 	tsteq	r2, r3, lsl lr
    9728:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    972c:	02050001 	andeq	r0, r5, #1
    9730:	08001b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, ip}
    9734:	0100e303 	tsteq	r0, r3, lsl #6
    9738:	13130305 	tstne	r3, #335544320	; 0x14000000
    973c:	01060f05 	tsteq	r6, r5, lsl #30
    9740:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    9744:	13060105 	movwne	r0, #24837	; 0x6105
    9748:	00010220 	andeq	r0, r1, r0, lsr #4
    974c:	01050101 	tsteq	r5, r1, lsl #2
    9750:	30020500 	andcc	r0, r2, r0, lsl #10
    9754:	0308001b 	movweq	r0, #32795	; 0x801b
    9758:	050100ea 	streq	r0, [r1, #-234]	; 0xffffff16
    975c:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    9760:	20130601 	andscs	r0, r3, r1, lsl #12
    9764:	01000102 	tsteq	r0, r2, lsl #2
    9768:	00010501 	andeq	r0, r1, r1, lsl #10
    976c:	1b340205 	blne	d09f88 <_Min_Heap_Size+0xd09788>
    9770:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
    9774:	03050100 	movweq	r0, #20736	; 0x5100
    9778:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    977c:	13060105 	movwne	r0, #24837	; 0x6105
    9780:	00010220 	andeq	r0, r1, r0, lsr #4
    9784:	01050101 	tsteq	r5, r1, lsl #2
    9788:	00020500 	andeq	r0, r2, r0, lsl #10
    978c:	03000000 	movweq	r0, #0
    9790:	060100f8 			; <UNDEFINED> instruction: 0x060100f8
    9794:	06030501 	streq	r0, [r3], -r1, lsl #10
    9798:	05141321 	ldreq	r1, [r4, #-801]	; 0xfffffcdf
    979c:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    97a0:	01000202 	tsteq	r0, r2, lsl #4
    97a4:	00010501 	andeq	r0, r1, r1, lsl #10
    97a8:	00000205 	andeq	r0, r0, r5, lsl #4
    97ac:	80030000 	andhi	r0, r3, r0
    97b0:	01060101 	tsteq	r6, r1, lsl #2
    97b4:	21060305 	tstcs	r6, r5, lsl #6
    97b8:	06090513 			; <UNDEFINED> instruction: 0x06090513
    97bc:	0603052e 	streq	r0, [r3], -lr, lsr #10
    97c0:	0601052f 	streq	r0, [r1], -pc, lsr #10
    97c4:	00030213 	andeq	r0, r3, r3, lsl r2
    97c8:	01050101 	tsteq	r5, r1, lsl #2
    97cc:	00020500 	andeq	r0, r2, r0, lsl #10
    97d0:	03000000 	movweq	r0, #0
    97d4:	06010187 	streq	r0, [r1], -r7, lsl #3
    97d8:	06030501 	streq	r0, [r3], -r1, lsl #10
    97dc:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    97e0:	03052e06 	movweq	r2, #24070	; 0x5e06
    97e4:	01052f06 	tsteq	r5, r6, lsl #30
    97e8:	03021306 	movweq	r1, #8966	; 0x2306
    97ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    97f0:	02050001 	andeq	r0, r5, #1
    97f4:	00000000 	andeq	r0, r0, r0
    97f8:	01018e03 	tsteq	r1, r3, lsl #28
    97fc:	13130305 	tstne	r3, #335544320	; 0x14000000
    9800:	13060105 	movwne	r0, #24837	; 0x6105
    9804:	0001022e 	andeq	r0, r1, lr, lsr #4
    9808:	01050101 	tsteq	r5, r1, lsl #2
    980c:	00020500 	andeq	r0, r2, r0, lsl #10
    9810:	03000000 	movweq	r0, #0
    9814:	05010194 	streq	r0, [r1, #-404]	; 0xfffffe6c
    9818:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    981c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    9820:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    9824:	20130601 	andscs	r0, r3, r1, lsl #12
    9828:	01000102 	tsteq	r0, r2, lsl #2
    982c:	00010501 	andeq	r0, r1, r1, lsl #10
    9830:	00000205 	andeq	r0, r0, r5, lsl #4
    9834:	9b030000 	blls	c983c <_Min_Heap_Size+0xc903c>
    9838:	01060101 	tsteq	r6, r1, lsl #2
    983c:	21060305 	tstcs	r6, r5, lsl #6
    9840:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    9844:	03052e06 	movweq	r2, #24070	; 0x5e06
    9848:	01052f06 	tsteq	r5, r6, lsl #30
    984c:	03021306 	movweq	r1, #8966	; 0x2306
    9850:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9854:	02050001 	andeq	r0, r5, #1
    9858:	00000000 	andeq	r0, r0, r0
    985c:	0101a303 	tsteq	r1, r3, lsl #6
    9860:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
    9864:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    9868:	052f0603 	streq	r0, [pc, #-1539]!	; 926d <_Min_Heap_Size+0x8a6d>
    986c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    9870:	01010003 	tsteq	r1, r3
    9874:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9878:	00000002 	andeq	r0, r0, r2
    987c:	01a90300 			; <UNDEFINED> instruction: 0x01a90300
    9880:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    9884:	13210603 			; <UNDEFINED> instruction: 0x13210603
    9888:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    988c:	03052e06 	movweq	r2, #24070	; 0x5e06
    9890:	01052f06 	tsteq	r5, r6, lsl #30
    9894:	03021306 	movweq	r1, #8966	; 0x2306
    9898:	80010100 	andhi	r0, r1, r0, lsl #2
    989c:	03000000 	movweq	r0, #0
    98a0:	00003a00 	andeq	r3, r0, r0, lsl #20
    98a4:	fb010200 	blx	4a0ae <_Min_Heap_Size+0x498ae>
    98a8:	01000d0e 	tsteq	r0, lr, lsl #26
    98ac:	00010101 	andeq	r0, r1, r1, lsl #2
    98b0:	00010000 	andeq	r0, r1, r0
    98b4:	2f2e0100 	svccs	0x002e0100
    98b8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    98bc:	2f707574 	svccs	0x00707574
    98c0:	00636367 	rsbeq	r6, r3, r7, ror #6
    98c4:	61747300 	cmnvs	r4, r0, lsl #6
    98c8:	70757472 	rsbsvc	r7, r5, r2, ror r4
    98cc:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    98d0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    98d4:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    98d8:	0100732e 	tsteq	r0, lr, lsr #6
    98dc:	00000000 	andeq	r0, r0, r0
    98e0:	1b380205 	blne	e0a0fc <_Min_Heap_Size+0xe098fc>
    98e4:	3c030800 	stccc	8, cr0, [r3], {-0}
    98e8:	21313101 	teqcs	r1, r1, lsl #2
    98ec:	23212121 			; <UNDEFINED> instruction: 0x23212121
    98f0:	21232121 			; <UNDEFINED> instruction: 0x21232121
    98f4:	21212321 			; <UNDEFINED> instruction: 0x21212321
    98f8:	23212321 			; <UNDEFINED> instruction: 0x23212321
    98fc:	2f302321 	svccs	0x00302321
    9900:	34205803 	strtcc	r5, [r0], #-2051	; 0xfffff7fd
    9904:	0f032f2f 	svceq	0x00032f2f
    9908:	02022f2e 	andeq	r2, r2, #46, 30	; 0xb8
    990c:	00010100 	andeq	r0, r1, r0, lsl #2
    9910:	1b880205 	blne	fe20a12c <_estack+0xde208eec>
    9914:	f1030800 			; <UNDEFINED> instruction: 0xf1030800
    9918:	01020100 	mrseq	r0, (UNDEF: 18)
    991c:	7f010100 	svcvc	0x00010100
    9920:	03000000 	movweq	r0, #0
    9924:	00004d00 	andeq	r4, r0, r0, lsl #26
    9928:	fb010200 	blx	4a132 <_Min_Heap_Size+0x49932>
    992c:	01000d0e 	tsteq	r0, lr, lsl #26
    9930:	00010101 	andeq	r0, r1, r1, lsl #2
    9934:	00010000 	andeq	r0, r1, r0
    9938:	2e2e0100 	sufcse	f0, f6, f0
    993c:	2f2e2e2f 	svccs	0x002e2e2f
    9940:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 9890 <_Min_Heap_Size+0x9090>
    9944:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    9948:	2f736c69 	svccs	0x00736c69
    994c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    9950:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    9954:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    9958:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    995c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    9960:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    9964:	61660000 	cmnvs	r6, r0
    9968:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    996c:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    9970:	00010073 	andeq	r0, r1, r3, ror r0
    9974:	05000000 	streq	r0, [r0, #-0]
    9978:	0001d002 	andeq	sp, r1, r2
    997c:	01190308 	tsteq	r9, r8, lsl #6
    9980:	21212121 			; <UNDEFINED> instruction: 0x21212121
    9984:	2f222f22 	svccs	0x00222f22
    9988:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    998c:	2f222f2f 	svccs	0x00222f2f
    9990:	21212231 			; <UNDEFINED> instruction: 0x21212231
    9994:	6403212f 	strvs	r2, [r3], #-303	; 0xfffffed1
    9998:	17033020 	strne	r3, [r3, -r0, lsr #32]
    999c:	0002022e 	andeq	r0, r2, lr, lsr #4
    99a0:	Address 0x000099a0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
{
       0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
  errno = ENOMEM;
       4:	4d006674 	stcmi	6, cr6, [r0, #-464]	; 0xfffffe30
       8:	53555f58 	cmppl	r5, #88, 30	; 0x160
}
       c:	31545241 	cmpcc	r4, r1, asr #4
      10:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      14:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
      18:	41007469 	tstmi	r0, r9, ror #8
      1c:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
}
      28:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      2c:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
      30:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    if (status != HAL_OK)
      34:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      uwTickFreq = prevTickFreq;
      38:	66006665 	strvs	r6, [r0], -r5, ror #12
      3c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
      40:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
      44:	6e755f70 	mrcvs	15, 3, r5, cr5, cr0, {3}
      if (pllsource != 0)
      48:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
      4c:	304d006e 	subcc	r0, sp, lr, rrx
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	44005241 	strmi	r5, [r0], #-577	; 0xfffffdbf
      54:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
      58:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
      5c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	41006665 	tstmi	r0, r5, ror #12
      64:	43314250 	teqmi	r1, #80, 4
      68:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
      SystemCoreClock = pllvco/pllp;
      6c:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
      70:	5f5f0072 	svcpl	0x005f0072
      break;
      74:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00745f38 	rsbseq	r5, r4, r8, lsr pc
      7c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
      80:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
      84:	695f706d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
      88:	0074696e 	rsbseq	r6, r4, lr, ror #18
      8c:	534c4c50 	movtpl	r4, #52304	; 0xcc50
      90:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
      94:	4c4c5000 	marmi	acc0, r5, ip
      98:	4c50004d 	mrrcmi	0, 4, r0, r0, cr13	; <UNPREDICTABLE>
      9c:	50004e4c 	andpl	r4, r0, ip, asr #28
      a0:	00504c4c 	subseq	r4, r0, ip, asr #24
      a4:	514c4c50 	cmppl	ip, r0, asr ip
      a8:	625f5f00 	subsvs	r5, pc, #0, 30
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      b0:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ffffff14 <_estack+0xdfffecd4>
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xfffff29b
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	6f6c0074 	svcvs	0x006c0074
      bc:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      c4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      c8:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      d0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	78525f54 	ldmdavc	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
      dc:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
      e0:	70795474 	rsbsvc	r5, r9, r4, ror r4
    if (huart->hdmarx != NULL)
      e4:	70795465 	rsbsvc	r5, r9, r5, ror #8
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	45534c00 	ldrbmi	r4, [r3, #-3072]	; 0xfffff400
      f0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    huart->TxXferCount = 0x00U;
      f4:	43520065 	cmpmi	r2, #101	; 0x65
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	734f5f43 	movtvc	r5, #65347	; 0xff43
    huart->gState  = HAL_UART_STATE_READY;
      fc:	696e4963 	stmdbvs	lr!, {r0, r1, r5, r6, r8, fp, lr}^
    huart->RxState = HAL_UART_STATE_READY;
     100:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00746375 	rsbseq	r6, r4, r5, ror r3
    HAL_UART_AbortCpltCallback(huart);
     108:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     10c:	65740032 	ldrbvs	r0, [r4, #-50]!	; 0xffffffce
  uint32_t AbortCplt = 0x01U;
     110:	00337473 	eorseq	r7, r3, r3, ror r4
  if (AbortCplt == 0x01U)
     114:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
}
     118:	65740034 	ldrbvs	r0, [r4, #-52]!	; 0xffffffcc
     11c:	00357473 	eorseq	r7, r5, r3, ror r4
     120:	5f4c4148 	svcpl	0x004c4148
     124:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	6172545f 	cmnvs	r2, pc, asr r4
     12c:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
     130:	48410074 	stmdami	r1, {r2, r4, r5, r6}^
     134:	504c3142 	subpl	r3, ip, r2, asr #2
     138:	00524e45 	subseq	r4, r2, r5, asr #28
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
     140:	706d6153 	rsbvc	r6, sp, r3, asr r1
     144:	676e696c 	strbvs	r6, [lr, -ip, ror #18]!
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	58785400 	ldmdapl	r8!, {sl, ip, lr}^
     14c:	43726566 	cmnmi	r2, #427819008	; 0x19800000
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     154:	43435200 	movtmi	r5, #12800	; 0x3200
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	63734f5f 	cmnvs	r3, #380	; 0x17c
     15c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     164:	00666544 	rsbeq	r6, r6, r4, asr #10
     168:	31424841 	cmpcc	r2, r1, asr #16
     16c:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     170:	74536700 	ldrbvc	r6, [r3], #-1792	; 0xfffff900
}
     174:	00657461 	rsbeq	r7, r5, r1, ror #8
     178:	52505447 	subspl	r5, r0, #1191182336	; 0x47000000
     17c:	75614200 	strbvc	r4, [r1, #-512]!	; 0xfffffe00
     180:	74615264 	strbtvc	r5, [r1], #-612	; 0xfffffd9c
}
     184:	66580065 	ldrbvs	r0, [r8], -r5, rrx
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	314d7265 	cmpcc	sp, r5, ror #4
     18c:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     194:	6b636162 	blvs	18d8724 <_Min_Heap_Size+0x18d7f24>
     198:	52575000 	subspl	r5, r7, #0
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1a0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	706d7400 	rsbvc	r7, sp, r0, lsl #8
     1a8:	00676572 	rsbeq	r6, r7, r2, ror r5
     1ac:	5f4c4148 	svcpl	0x004c4148
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	6b636f4c 	blvs	18dbee8 <_Min_Heap_Size+0x18db6e8>
     1b4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00666544 	rsbeq	r6, r6, r4, asr #10
     1bc:	5f434352 	svcpl	0x00434352
     1c0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	00666544 	rsbeq	r6, r6, r4, asr #10
     1c8:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
     1d0:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     1d4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	6b636162 	blvs	18d8768 <_Min_Heap_Size+0x18d7f68>
     1dc:	78547000 	ldmdavc	r4, {ip, sp, lr}^
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     1e4:	00727450 	rsbseq	r7, r2, r0, asr r4
     1e8:	32425041 	subcc	r5, r2, #65	; 0x41
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     1f0:	72655000 	rsbvc	r5, r5, #0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	49687069 	stmdbmi	r8!, {r0, r3, r5, r6, ip, sp, lr}^
     1f8:	4c00636e 	stcmi	3, cr6, [r0], {110}	; 0x6e
     1fc:	74534953 	ldrbvc	r4, [r3], #-2387	; 0xfffff6ad
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00657461 	rsbeq	r7, r5, r1, ror #8
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	426d654d 	rsbmi	r6, sp, #322961408	; 0x13400000
     208:	74737275 	ldrbtvc	r7, [r3], #-629	; 0xfffffd8b
     20c:	625f5f00 	subsvs	r5, pc, #0, 30
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     214:	705f6e69 	subsvc	r6, pc, r9, ror #28
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00737475 	rsbseq	r7, r3, r5, ror r4
     21c:	5f4c4148 	svcpl	0x004c4148
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	5f414d44 	svcpl	0x00414d44
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     228:	52455f45 	subpl	r5, r5, #276	; 0x114
  tmp = hdma->Instance->FCR;
     22c:	00524f52 	subseq	r4, r2, r2, asr pc
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	53495348 	movtpl	r5, #37704	; 0x9348
  tmp |= hdma->Init.FIFOMode;
     234:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	49534800 	ldmdbmi	r3, {fp, lr}^
    tmp |= hdma->Init.FIFOThreshold;
     23c:	696c6143 	stmdbvs	ip!, {r0, r1, r6, r8, sp, lr}^
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	74617262 	strbtvc	r7, [r1], #-610	; 0xfffffd9e
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	566e6f69 	strbtpl	r6, [lr], -r9, ror #30
     248:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
  hdma->Instance->FCR = tmp;
     24c:	6f745300 	svcvs	0x00745300
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	74694270 	strbtvc	r4, [r9], #-624	; 0xfffffd90
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	4c500073 	mrrcmi	0, 7, r0, r0, cr3	; <UNPREDICTABLE>
     258:	4746434c 	strbmi	r4, [r6, -ip, asr #6]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
  hdma->State = HAL_DMA_STATE_READY;
     260:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     264:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
  return HAL_OK;
     268:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     26c:	00737365 	rsbseq	r7, r3, r5, ror #6
     270:	65726150 	ldrbvs	r6, [r2, #-336]!	; 0xfffffeb0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	4c00746e 	cfstrsmi	mvf7, [r0], {110}	; 0x6e
     278:	006b636f 	rsbeq	r6, fp, pc, ror #6
     27c:	5f4c4148 	svcpl	0x004c4148
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
        hdma->State = HAL_DMA_STATE_READY;
     284:	4154535f 	cmpmi	r4, pc, asr r3
        return HAL_ERROR; 
     288:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
    return HAL_ERROR;
     28c:	59444145 	stmdbpl	r4, {r0, r2, r6, r8, lr}^
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff398 <_estack+0xdfffe158>
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	33746e69 	cmncc	r4, #1680	; 0x690
     298:	00745f32 	rsbseq	r5, r4, r2, lsr pc
      tickstart = HAL_GetTick();
     29c:	65726944 	ldrbvs	r6, [r2, #-2372]!	; 0xfffff6bc
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	6f697463 	svcvs	0x00697463
     2a4:	6468006e 	strbtvs	r0, [r8], #-110	; 0xffffff92
     2a8:	7872616d 	ldmdavc	r2!, {r0, r2, r3, r5, r6, r8, sp, lr}^
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     2b0:	6f6c2067 	svcvs	0x006c2067
     2b4:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
          return HAL_TIMEOUT;
     2b8:	5200746e 	andpl	r7, r0, #1845493760	; 0x6e000000
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
     2c0:	6e496b6c 	vmlsvs.f64	d22, d9, d28
     2c4:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
    FlagStatus       pwrclkchanged = RESET;
     2c8:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	45534800 	ldrbmi	r4, [r3, #-2048]	; 0xfffff800
     2d0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     2d4:	41480065 	cmpmi	r8, r5, rrx
      tickstart = HAL_GetTick();
     2d8:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     2e0:	5f455441 	svcpl	0x00455441
     2e4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	61500054 	cmpvs	r0, r4, asr r0
     2ec:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
          return HAL_TIMEOUT;
     2f0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     2f8:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     2fc:	61756800 	cmnvs	r5, r0, lsl #16
     300:	00317472 	eorseq	r7, r1, r2, ror r4
     304:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     308:	6e496d61 	cdpvs	13, 4, cr6, cr9, cr1, {3}
     30c:	00786564 	rsbseq	r6, r8, r4, ror #10
     310:	5f4c4148 	svcpl	0x004c4148
      tickstart = HAL_GetTick();
     314:	2e004b4f 	vmlscs.f64	d4, d0, d15
     318:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	6163696c 	cmnvs	r3, ip, ror #18
     320:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
     328:	00632e6e 	rsbeq	r2, r3, lr, ror #28
     32c:	66587852 			; <UNDEFINED> instruction: 0x66587852
     330:	69537265 	ldmdbvs	r3, {r0, r2, r5, r6, r9, ip, sp, lr}^
          return HAL_TIMEOUT;
     334:	7300657a 	movwvc	r6, #1402	; 0x57a
    if(pwrclkchanged == SET)
     338:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     344:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	78540074 	ldmdavc	r4, {r2, r4, r5, r6}^
     34c:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     350:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     354:	4c4c5000 	marmi	acc0, r5, ip
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	43533249 	cmpmi	r3, #-1879048188	; 0x90000004
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	00524746 	subseq	r4, r2, r6, asr #14
     360:	5f4c4148 	svcpl	0x004c4148
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	5f414d44 	svcpl	0x00414d44
     368:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	42415f45 	submi	r5, r1, #276	; 0x114
     370:	0054524f 	subseq	r5, r4, pc, asr #4
     374:	33424841 	movtcc	r4, #10305	; 0x2841
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     37c:	72724500 	rsbsvc	r4, r2, #0, 10
     380:	6f43726f 	svcvs	0x0043726f
     384:	4f006564 	svcmi	0x00006564
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	6c696373 	stclvs	3, cr6, [r9], #-460	; 0xfffffe34
     38c:	6f74616c 	svcvs	0x0074616c
        __HAL_RCC_PLL_DISABLE();
     390:	70795472 	rsbsvc	r5, r9, r2, ror r4
     394:	654d0065 	strbvs	r0, [sp, #-101]	; 0xffffff9b
        tickstart = HAL_GetTick();
     398:	7461446d 	strbtvc	r4, [r1], #-1133	; 0xfffffb93
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	696c4161 	stmdbvs	ip!, {r0, r5, r6, r8, lr}^
     3a0:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
     3a4:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     3ac:	7079545f 	rsbsvc	r5, r9, pc, asr r4
            return HAL_TIMEOUT;
     3b0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	42504100 	subsmi	r4, r0, #0, 2
     3b8:	45504c32 	ldrbmi	r4, [r0, #-3122]	; 0xfffff3ce
     3bc:	4100524e 	tstmi	r0, lr, asr #4
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	4c434248 	sfmmi	f4, 2, [r3], {72}	; 0x48
     3c4:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
     3c8:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	72724500 	rsbsvc	r4, r2, #0, 10
     3d0:	485f726f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     3d4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     3dc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 3e4 <_Min_Heap_Size-0x41c>
     3e0:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     3e8:	4145525f 	cmpmi	r5, pc, asr r2
     3ec:	48005944 	stmdami	r0, {r2, r6, r8, fp, ip, lr}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
     3f4:	0074696e 	rsbseq	r6, r4, lr, ror #18
     3f8:	6f695f5f 	svcvs	0x00695f5f
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
     400:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     404:	555f5f00 	ldrbpl	r5, [pc, #-3840]	; fffff50c <_estack+0xdfffe2cc>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	5f545241 	svcpl	0x00545241
     40c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     410:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
     414:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     418:	41480066 	cmpmi	r8, r6, rrx
     41c:	41555f4c 	cmpmi	r5, ip, asr #30
     420:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     424:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
        __HAL_RCC_PLL_ENABLE();
     428:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     42c:	58545f59 	ldmdapl	r4, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
        tickstart = HAL_GetTick();
     430:	0058525f 	subseq	r5, r8, pc, asr r2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	5f4c4148 	svcpl	0x004c4148
     438:	4b434f4c 	blmi	10d4170 <_Min_Heap_Size+0x10d3970>
     43c:	41004445 	tstmi	r0, r5, asr #8
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	45334248 	ldrmi	r4, [r3, #-584]!	; 0xfffffdb8
     444:	4900524e 	stmdbmi	r0, {r1, r2, r3, r6, r9, ip, lr}
            return HAL_TIMEOUT;
     448:	6174736e 	cmnvs	r4, lr, ror #6
  return HAL_OK;
     44c:	0065636e 	rsbeq	r6, r5, lr, ror #6
        __HAL_RCC_PLL_DISABLE();
     450:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     454:	6f727245 	svcvs	0x00727245
        tickstart = HAL_GetTick();
     458:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     460:	4148006b 	cmpmi	r8, fp, rrx
     464:	41555f4c 	cmpmi	r5, ip, asr #30
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     46c:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
            return HAL_TIMEOUT;
     470:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
  return HAL_OK;
     474:	58545f59 	ldmdapl	r4, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	42484100 	submi	r4, r8, #0, 2
        pll_config = RCC->PLLCFGR;
     47c:	45504c32 	ldrbmi	r4, [r0, #-3122]	; 0xfffff3ce
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	6800524e 	stmdavs	r0, {r1, r2, r3, r6, r9, ip, lr}
     484:	74616d64 	strbtvc	r6, [r1], #-3428	; 0xfffff29c
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	43520078 	cmpmi	r2, #120	; 0x78
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	696e496b 	stmdbvs	lr!, {r0, r1, r3, r5, r6, r8, fp, lr}^
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	70795474 	rsbsvc	r5, r9, r4, ror r4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     49c:	42504100 	subsmi	r4, r0, #0, 2
     4a0:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	45520052 	ldrbmi	r0, [r2, #-82]	; 0xffffffae
     4a8:	56524553 			; <UNDEFINED> instruction: 0x56524553
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	00304445 	eorseq	r4, r0, r5, asr #8
     4b0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	45520031 	ldrbmi	r0, [r2, #-49]	; 0xffffffcf
     4bc:	56524553 			; <UNDEFINED> instruction: 0x56524553
  return HAL_OK;
     4c0:	00324445 	eorseq	r4, r2, r5, asr #8
}
     4c4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
        return HAL_ERROR;
     4c8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
        return HAL_ERROR;
     4cc:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
}
     4d0:	56524553 			; <UNDEFINED> instruction: 0x56524553
        return HAL_ERROR;
     4d4:	00344445 	eorseq	r4, r4, r5, asr #8
          return HAL_ERROR;
     4d8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     4dc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     4e0:	45520035 	ldrbmi	r0, [r2, #-53]	; 0xffffffcb
     4e4:	56524553 			; <UNDEFINED> instruction: 0x56524553
     4e8:	00364445 	eorseq	r4, r6, r5, asr #8
     4ec:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     4f0:	6148314d 	cmpvs	r8, sp, asr #2
     4f4:	7043666c 	subvc	r6, r3, ip, ror #12
     4f8:	6143746c 	cmpvs	r3, ip, ror #8
     4fc:	61626c6c 	cmnvs	r2, ip, ror #24
     500:	43006b63 	movwmi	r6, #2915	; 0xb63
     504:	6e6e6168 	powvsez	f6, f6, #0.0
     508:	75006c65 	strvc	r6, [r0, #-3173]	; 0xfffff39b
     50c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     510:	2064656e 	rsbcs	r6, r4, lr, ror #10
     514:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     518:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     51c:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     520:	2e303120 	rsfcssp	f3, f0, f0
     524:	20312e33 	eorscs	r2, r1, r3, lsr lr
     528:	31323032 	teqcc	r2, r2, lsr r0
     52c:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
     530:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     534:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     538:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
     53c:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
     540:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
     544:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     548:	2d20346d 	cfstrscs	mvf3, [r0, #-436]!	; 0xfffffe4c
     54c:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
     550:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
     554:	7570666d 	ldrbvc	r6, [r0, #-1645]!	; 0xfffff993
     558:	7670663d 			; <UNDEFINED> instruction: 0x7670663d
     55c:	70732d34 	rsbsvc	r2, r3, r4, lsr sp
     560:	3631642d 	ldrtcc	r6, [r1], -sp, lsr #8
     564:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     568:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     56c:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     570:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
     574:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
     578:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     57c:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     580:	2d653776 	stclcs	7, cr3, [r5, #-472]!	; 0xfffffe28
     584:	70662b6d 	rsbvc	r2, r6, sp, ror #22
     588:	20672d20 	rsbcs	r2, r7, r0, lsr #26
     58c:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
     590:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
     594:	4f2d2032 	svcmi	0x002d2032
     598:	662d2067 	strtvs	r2, [sp], -r7, rrx
     59c:	61746164 	cmnvs	r4, r4, ror #2
     5a0:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     5a4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     5a8:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     5ac:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     5b0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     5b4:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     5b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     5bc:	41480073 	hvcmi	32771	; 0x8003
     5c0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     5c4:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
     5c8:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
     5cc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     5d0:	73006665 	movwvc	r6, #1637	; 0x665
     5d4:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     5d8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     5dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     5e0:	414d445f 	cmpmi	sp, pc, asr r4
     5e4:	4154535f 	cmpmi	r4, pc, asr r3
     5e8:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     5ec:	00595355 	subseq	r5, r9, r5, asr r3
     5f0:	33424841 	movtcc	r4, #10305	; 0x2841
     5f4:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     5f8:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     5fc:	756f534c 	strbvc	r5, [pc, #-844]!	; 2b8 <_Min_Heap_Size-0x548>
     600:	00656372 	rsbeq	r6, r5, r2, ror r3
     604:	75665f5f 	strbvc	r5, [r6, #-3935]!	; 0xfffff0a1
     608:	5f5f636e 	svcpl	0x005f636e
     60c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     610:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     614:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     618:	5f455441 	svcpl	0x00455441
     61c:	4f525245 	svcmi	0x00525245
     620:	50410052 	subpl	r0, r1, r2, asr r0
     624:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     628:	5f5f0052 	svcpl	0x005f0052
     62c:	5f414d44 	svcpl	0x00414d44
     630:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     634:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
     638:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     63c:	49460066 	stmdbmi	r6, {r1, r2, r5, r6}^
     640:	6f4d4f46 	svcvs	0x004d4f46
     644:	57006564 	strpl	r6, [r0, -r4, ror #10]
     648:	4c64726f 	sfmmi	f7, 2, [r4], #-444	; 0xfffffe44
     64c:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     650:	41480068 	cmpmi	r8, r8, rrx
     654:	52455f4c 	subpl	r5, r5, #76, 30	; 0x130
     658:	00524f52 	subseq	r4, r2, r2, asr pc
     65c:	31425041 	cmpcc	r2, r1, asr #32
     660:	00524e45 	subseq	r4, r2, r5, asr #28
     664:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     668:	756f6420 	strbvc	r6, [pc, #-1056]!	; 250 <_Min_Heap_Size-0x5b0>
     66c:	00656c62 	rsbeq	r6, r5, r2, ror #24
     670:	4f464946 	svcmi	0x00464946
     674:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     678:	6c6f6873 	stclvs	8, cr6, [pc], #-460	; 4b4 <_Min_Heap_Size-0x34c>
     67c:	41480064 	cmpmi	r8, r4, rrx
     680:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     684:	734f5f43 	movtvc	r5, #65347	; 0xff43
     688:	6e6f4363 	cdpvs	3, 6, cr4, cr15, cr3, {3}
     68c:	00676966 	rsbeq	r6, r7, r6, ror #18
     690:	5f4c4148 	svcpl	0x004c4148
     694:	616c6544 	cmnvs	ip, r4, asr #10
     698:	5f5f0079 	svcpl	0x005f0079
     69c:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     6a0:	745f3631 	ldrbvc	r3, [pc], #-1585	; 6a8 <_Min_Heap_Size-0x158>
     6a4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     6a8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     6ac:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     6b0:	5f455441 	svcpl	0x00455441
     6b4:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     6b8:	0058525f 	subseq	r5, r8, pc, asr r2
     6bc:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     6c0:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     6c4:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     6c8:	00636e49 	rsbeq	r6, r3, r9, asr #28
     6cc:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     6d0:	75426870 	strbvc	r6, [r2, #-2160]	; 0xfffff790
     6d4:	00747372 	rsbseq	r7, r4, r2, ror r3
     6d8:	32425041 	subcc	r5, r2, #65	; 0x41
     6dc:	444b4c43 	strbmi	r4, [fp], #-3139	; 0xfffff3bd
     6e0:	64697669 	strbtvs	r7, [r9], #-1641	; 0xfffff997
     6e4:	53007265 	movwpl	r7, #613	; 0x265
     6e8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     6ec:	6f6c436d 	svcvs	0x006c436d
     6f0:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
     6f4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     6f8:	444e0067 	strbmi	r0, [lr], #-103	; 0xffffff99
     6fc:	48005254 	stmdami	r0, {r2, r4, r6, r9, ip, lr}
     700:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffac7 <_estack+0xdfffe887>
     704:	5f545241 	svcpl	0x00545241
     708:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     70c:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     710:	00544553 	subseq	r4, r4, r3, asr r5
     714:	5f414d44 	svcpl	0x00414d44
     718:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     71c:	545f6d61 	ldrbpl	r6, [pc], #-3425	; 724 <_Min_Heap_Size-0xdc>
     720:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     724:	41006665 	tstmi	r0, r5, ror #12
     728:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
     72c:	7400524e 	strvc	r5, [r0], #-590	; 0xfffffdb2
     730:	30747365 	rsbscc	r7, r4, r5, ror #6
     734:	73657400 	cmnvc	r5, #0, 8
     738:	4d003174 	stfmis	f3, [r0, #-464]	; 0xfffffe30
     73c:	00524131 	subseq	r4, r2, r1, lsr r1
     740:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     744:	61446870 	hvcvs	18048	; 0x4680
     748:	6c416174 	stfvse	f6, [r1], {116}	; 0x74
     74c:	6d6e6769 	stclvs	7, cr6, [lr, #-420]!	; 0xfffffe5c
     750:	00746e65 	rsbseq	r6, r4, r5, ror #28
     754:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     758:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     75c:	70795474 	rsbsvc	r5, r9, r4, ror r4
     760:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     764:	43535300 	cmpmi	r3, #0, 6
     768:	48005247 	stmdami	r0, {r0, r1, r2, r6, r9, ip, lr}
     76c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffb33 <_estack+0xdfffe8f3>
     770:	5f545241 	svcpl	0x00545241
     774:	79547852 	ldmdbvc	r4, {r1, r4, r6, fp, ip, sp, lr}^
     778:	79546570 	ldmdbvc	r4, {r4, r5, r6, r8, sl, sp, lr}^
     77c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     780:	41480066 	cmpmi	r8, r6, rrx
     784:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     788:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
     78c:	436b636f 	cmnmi	fp, #-1140850687	; 0xbc000001
     790:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     794:	44420067 	strbmi	r0, [r2], #-103	; 0xffffff99
     798:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
     79c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffb63 <_estack+0xdfffe923>
     7a0:	5f545241 	svcpl	0x00545241
     7a4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     7a8:	49545f45 	ldmdbmi	r4, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
     7ac:	554f454d 	strbpl	r4, [pc, #-1357]	; 267 <_Min_Heap_Size-0x599>
     7b0:	77480054 	smlsldvc	r0, r8, r4, r0
     7b4:	776f6c46 	strbvc	r6, [pc, -r6, asr #24]!
     7b8:	006c7443 	rsbeq	r7, ip, r3, asr #8
     7bc:	5f4c4148 	svcpl	0x004c4148
     7c0:	5f414d44 	svcpl	0x00414d44
     7c4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     7c8:	49545f45 	ldmdbmi	r4, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
     7cc:	554f454d 	strbpl	r4, [pc, #-1357]	; 287 <_Min_Heap_Size-0x579>
     7d0:	52700054 	rsbspl	r0, r0, #84	; 0x54
     7d4:	66754278 			; <UNDEFINED> instruction: 0x66754278
     7d8:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     7dc:	43435200 	movtmi	r5, #12800	; 0x3200
     7e0:	4c4c505f 	mcrrmi	0, 5, r5, ip, cr15
     7e4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     7e8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     7ec:	00666544 	rsbeq	r6, r6, r4, asr #10
     7f0:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     7f4:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     7f8:	41480065 	cmpmi	r8, r5, rrx
     7fc:	41555f4c 	cmpmi	r5, ip, asr #30
     800:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     804:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     808:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     80c:	48410059 	stmdami	r1, {r0, r3, r4, r6}^
     810:	4e453142 	dvfmism	f3, f5, f2
     814:	78520052 	ldmdavc	r2, {r1, r4, r6}^
     818:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     81c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     820:	3a430074 	bcc	10c09f8 <_Min_Heap_Size+0x10c01f8>
     824:	6573555c 	ldrbvs	r5, [r3, #-1372]!	; 0xfffffaa4
     828:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     82c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     830:	646f635c 	strbtvs	r6, [pc], #-860	; 838 <_Min_Heap_Size+0x38>
     834:	69675c65 	stmdbvs	r7!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     838:	62756874 	rsbsvs	r6, r5, #116, 16	; 0x740000
     83c:	6d65715c 	stfvse	f7, [r5, #-368]!	; 0xfffffe90
     840:	69732d75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r8, sl, fp, sp}^
     844:	616c756d 	cmnvs	ip, sp, ror #10
     848:	5c726f74 	ldclpl	15, cr6, [r2], #-464	; 0xfffffe30
     84c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
     850:	735c7364 	cmpvc	ip, #100, 6	; 0x90000001
     854:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     858:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
     85c:	425c6772 	subsmi	r6, ip, #29884416	; 0x1c80000
     860:	4d657261 	sfmmi	f7, 2, [r5, #-388]!	; 0xfffffe7c
     864:	6c617465 	cfstrdvs	mvd7, [r1], #-404	; 0xfffffe6c
     868:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     86c:	4c4e555f 	cfstr64mi	mvdx5, [lr], {95}	; 0x5f
     870:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
     874:	41480044 	cmpmi	r8, r4, asr #32
     878:	55425f4c 	strbpl	r5, [r2, #-3916]	; 0xfffff0b4
     87c:	52005953 	andpl	r5, r0, #1359872	; 0x14c000
     880:	61745378 	cmnvs	r4, r8, ror r3
     884:	6d006574 	cfstr32vs	mvfx6, [r0, #-464]	; 0xfffffe30
     888:	006e6961 	rsbeq	r6, lr, r1, ror #18
     88c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
     890:	6f697470 	svcvs	0x00697470
     894:	7079546e 	rsbsvc	r5, r9, lr, ror #8
     898:	66580065 	ldrbvs	r0, [r8], -r5, rrx
     89c:	62417265 	subvs	r7, r1, #1342177286	; 0x50000006
     8a0:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
     8a4:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     8a8:	006b6361 	rsbeq	r6, fp, r1, ror #6
     8ac:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     8b0:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     8b4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     8b8:	6b636162 	blvs	18d8e48 <_Min_Heap_Size+0x18d8648>
     8bc:	5f584d00 	svcpl	0x00584d00
     8c0:	4f495047 	svcmi	0x00495047
     8c4:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     8c8:	59530074 	ldmdbpl	r3, {r2, r4, r5, r6}^
     8cc:	4b4c4353 	blmi	1311620 <_Min_Heap_Size+0x1310e20>
     8d0:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     8d4:	4e006563 	cfsh32mi	mvfx6, mvfx0, #51
     8d8:	485f494d 	ldmdami	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
     8dc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     8e0:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     8e4:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     8e8:	5f6e6f4d 	svcpl	0x006e6f4d
     8ec:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     8f0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     8f4:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     8f8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8fc:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     900:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     904:	41535500 	cmpmi	r3, r0, lsl #10
     908:	5f315452 	svcpl	0x00315452
     90c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     910:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     914:	55007265 	strpl	r7, [r0, #-613]	; 0xfffffd9b
     918:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     91c:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     920:	61485f74 	hvcvs	34292	; 0x85f4
     924:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     928:	41480072 	hvcmi	32770	; 0x8002
     92c:	41555f4c 	cmpmi	r5, ip, asr #30
     930:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     934:	61485152 	cmpvs	r8, r2, asr r1
     938:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     93c:	654d0072 	strbvs	r0, [sp, #-114]	; 0xffffff8e
     940:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
     944:	5f656761 	svcpl	0x00656761
     948:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     94c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     950:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
     954:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     958:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     95c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     960:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     964:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     968:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     96c:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
     970:	65500063 	ldrbvs	r0, [r0, #-99]	; 0xffffff9d
     974:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
     978:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     97c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     980:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     984:	636e495f 	cmnvs	lr, #1556480	; 0x17c000
     988:	6b636954 	blvs	18daee0 <_Min_Heap_Size+0x18da6e0>
     98c:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 994 <_Min_Heap_Size+0x194>
     990:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
     994:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     998:	61007172 	tstvs	r0, r2, ror r1
     99c:	72657373 	rsbvc	r7, r5, #-872415231	; 0xcc000001
     9a0:	61665f74 	smcvs	26100	; 0x65f4
     9a4:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
     9a8:	6c696600 	stclvs	6, cr6, [r9], #-0
     9ac:	56530065 	ldrbpl	r0, [r3], -r5, rrx
     9b0:	61485f43 	cmpvs	r8, r3, asr #30
     9b4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     9b8:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
     9bc:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     9c0:	61485f6b 	cmpvs	r8, fp, ror #30
     9c4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     9c8:	61480072 	hvcvs	32770	; 0x8002
     9cc:	61466472 	hvcvs	26178	; 0x6642
     9d0:	5f746c75 	svcpl	0x00746c75
     9d4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     9d8:	5f72656c 	svcpl	0x0072656c
     9dc:	6567654c 	strbvs	r6, [r7, #-1356]!	; 0xfffffab4
     9e0:	0079636e 	rsbseq	r6, r9, lr, ror #6
     9e4:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     9e8:	2f65726f 	svccs	0x0065726f
     9ec:	2f637253 	svccs	0x00637253
     9f0:	6f697067 	svcvs	0x00697067
     9f4:	5300632e 	movwpl	r6, #814	; 0x32e
     9f8:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
     9fc:	43545200 	cmpmi	r4, #0, 4
     a00:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     a04:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     a08:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     a0c:	32495458 	subcc	r5, r9, #88, 8	; 0x58000000
     a10:	5152495f 	cmppl	r2, pc, asr r9
     a14:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     a18:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     a1c:	61657274 	smcvs	22308	; 0x5724
     a20:	495f366d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     a24:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a28:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     a2c:	5f50555f 	svcpl	0x0050555f
     a30:	314d4954 	cmpcc	sp, r4, asr r9
     a34:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     a38:	47006e51 	smlsdmi	r0, r1, lr, r6
     a3c:	5f4f4950 	svcpl	0x004f4950
     a40:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     a44:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     a48:	44007463 	strmi	r7, [r0], #-1123	; 0xfffffb9d
     a4c:	5f32414d 	svcpl	0x0032414d
     a50:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     a54:	5f316d61 	svcpl	0x00316d61
     a58:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     a5c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     a60:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     a64:	46006e51 			; <UNDEFINED> instruction: 0x46006e51
     a68:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     a6c:	5152495f 	cmppl	r2, pc, asr r9
     a70:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     a74:	495f324d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     a78:	006e5152 	rsbeq	r5, lr, r2, asr r1
     a7c:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     a80:	3058525f 	subscc	r5, r8, pc, asr r2
     a84:	5152495f 	cmppl	r2, pc, asr r9
     a88:	5355006e 	cmppl	r5, #110	; 0x6e
     a8c:	36545241 	ldrbcc	r5, [r4], -r1, asr #4
     a90:	5152495f 	cmppl	r2, pc, asr r9
     a94:	4148006e 	cmpmi	r8, lr, rrx
     a98:	41555f4c 	cmpmi	r5, ip, asr #30
     a9c:	4d5f5452 	cfldrdmi	mvd5, [pc, #-328]	; 95c <_Min_Heap_Size+0x15c>
     aa0:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
     aa4:	53007469 	movwpl	r7, #1129	; 0x469
     aa8:	5f324950 	svcpl	0x00324950
     aac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ab0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     ab4:	52425f38 	subpl	r5, r2, #56, 30	; 0xe0
     ab8:	49545f4b 	ldmdbmi	r4, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
     abc:	5f32314d 	svcpl	0x0032314d
     ac0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ac4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     ac8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     acc:	734d5f54 	movtvc	r5, #57172	; 0xdf54
     ad0:	49654470 	stmdbmi	r5!, {r4, r5, r6, sl, lr}^
     ad4:	0074696e 	rsbseq	r6, r4, lr, ror #18
     ad8:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     adc:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     ae0:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
     ae4:	5152495f 	cmppl	r2, pc, asr r9
     ae8:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     aec:	545f314d 	ldrbpl	r3, [pc], #-333	; af4 <_Min_Heap_Size+0x2f4>
     af0:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     af4:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; afc <_Min_Heap_Size+0x2fc>
     af8:	31314d49 	teqcc	r1, r9, asr #26
     afc:	5152495f 	cmppl	r2, pc, asr r9
     b00:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
     b04:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     b08:	52495f6b 	subpl	r5, r9, #428	; 0x1ac
     b0c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     b10:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     b14:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     b18:	47006e51 	smlsdmi	r0, r1, lr, r6
     b1c:	5f4f4950 	svcpl	0x004f4950
     b20:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     b24:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     b28:	00666544 	rsbeq	r6, r6, r4, asr #10
     b2c:	31414d44 	cmpcc	r1, r4, asr #26
     b30:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     b34:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
     b38:	5152495f 	cmppl	r2, pc, asr r9
     b3c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     b40:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     b44:	61657274 	smcvs	22308	; 0x5724
     b48:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     b4c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b50:	5f4c4148 	svcpl	0x004c4148
     b54:	4f495047 	svcmi	0x00495047
     b58:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     b5c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     b60:	31433249 	cmpcc	r3, r9, asr #4
     b64:	5f52455f 	svcpl	0x0052455f
     b68:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b6c:	72617500 	rsbvc	r7, r1, #0, 10
     b70:	6e614874 	mcrvs	8, 3, r4, cr1, cr4, {3}
     b74:	00656c64 	rsbeq	r6, r5, r4, ror #24
     b78:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     b7c:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
     b80:	5152495f 	cmppl	r2, pc, asr r9
     b84:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     b88:	495f354d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     b8c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b90:	67617355 			; <UNDEFINED> instruction: 0x67617355
     b94:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
     b98:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     b9c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ba0:	5f4c4148 	svcpl	0x004c4148
     ba4:	4f495047 	svcmi	0x00495047
     ba8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     bac:	41430074 	hvcmi	12292	; 0x3004
     bb0:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     bb4:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     bb8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     bbc:	344d4954 	strbcc	r4, [sp], #-2388	; 0xfffff6ac
     bc0:	5152495f 	cmppl	r2, pc, asr r9
     bc4:	5355006e 	cmppl	r5, #110	; 0x6e
     bc8:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     bcc:	5152495f 	cmppl	r2, pc, asr r9
     bd0:	4148006e 	cmpmi	r8, lr, rrx
     bd4:	41555f4c 	cmpmi	r5, ip, asr #30
     bd8:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     bdc:	0074696e 	rsbseq	r6, r4, lr, ror #18
     be0:	31433249 	cmpcc	r3, r9, asr #4
     be4:	5f56455f 	svcpl	0x0056455f
     be8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     bec:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     bf0:	43435f31 	movtmi	r5, #16177	; 0x3f31
     bf4:	5152495f 	cmppl	r2, pc, asr r9
     bf8:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     bfc:	5f314954 	svcpl	0x00314954
     c00:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c04:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     c08:	58545f31 	ldmdapl	r4, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     c0c:	5152495f 	cmppl	r2, pc, asr r9
     c10:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     c14:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     c18:	61657274 	smcvs	22308	; 0x5724
     c1c:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     c20:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c24:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     c28:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
     c2c:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; ab8 <_Min_Heap_Size+0x2b8>
     c30:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     c34:	495f3431 	ldmdbmi	pc, {r0, r4, r5, sl, ip, sp}^	; <UNPREDICTABLE>
     c38:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c3c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     c40:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     c44:	376d6165 	strbcc	r6, [sp, -r5, ror #2]!
     c48:	5152495f 	cmppl	r2, pc, asr r9
     c4c:	544f006e 	strbpl	r0, [pc], #-110	; c54 <_Min_Heap_Size+0x454>
     c50:	53465f47 	movtpl	r5, #28487	; 0x6f47
     c54:	5152495f 	cmppl	r2, pc, asr r9
     c58:	6f4e006e 	svcvs	0x004e006e
     c5c:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
     c60:	6c62616b 	stfvse	f6, [r2], #-428	; 0xfffffe54
     c64:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
     c68:	5152495f 	cmppl	r2, pc, asr r9
     c6c:	5757006e 	ldrbpl	r0, [r7, -lr, rrx]
     c70:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     c74:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c78:	5f47544f 	svcpl	0x0047544f
     c7c:	575f5348 	ldrbpl	r5, [pc, -r8, asr #6]
     c80:	5f50554b 	svcpl	0x0050554b
     c84:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c88:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     c8c:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     c90:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     c94:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     c98:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     c9c:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     ca0:	5f504d41 	svcpl	0x00504d41
     ca4:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
     ca8:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     cac:	43006e51 	movwmi	r6, #3665	; 0xe51
     cb0:	5f314e41 	svcpl	0x00314e41
     cb4:	5f454353 	svcpl	0x00454353
     cb8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     cbc:	414d4400 	cmpmi	sp, r0, lsl #8
     cc0:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     cc4:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     cc8:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     ccc:	4c006e51 	stcmi	14, cr6, [r0], {81}	; 0x51
     cd0:	00524b43 	subseq	r4, r2, r3, asr #22
     cd4:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     cd8:	5f52455f 	svcpl	0x0052455f
     cdc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ce0:	50534f00 	subspl	r4, r3, r0, lsl #30
     ce4:	52444545 	subpl	r4, r4, #289406976	; 0x11400000
     ce8:	73754200 	cmnvc	r5, #0, 4
     cec:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     cf0:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     cf4:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     cf8:	35545241 	ldrbcc	r5, [r4, #-577]	; 0xfffffdbf
     cfc:	5152495f 	cmppl	r2, pc, asr r9
     d00:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     d04:	425f314d 	subsmi	r3, pc, #1073741843	; 0x40000013
     d08:	545f4b52 	ldrbpl	r4, [pc], #-2898	; d10 <_Min_Heap_Size+0x510>
     d0c:	5f394d49 	svcpl	0x00394d49
     d10:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d14:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     d18:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
     d1c:	4f006e51 	svcmi	0x00006e51
     d20:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     d24:	52495f53 	subpl	r5, r9, #332	; 0x14c
     d28:	50006e51 	andpl	r6, r0, r1, asr lr
     d2c:	52445055 	subpl	r5, r4, #85	; 0x55
     d30:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     d34:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     d38:	53006e51 	movwpl	r6, #3665	; 0xe51
     d3c:	6c614356 	stclvs	3, cr4, [r1], #-344	; 0xfffffea8
     d40:	52495f6c 	subpl	r5, r9, #108, 30	; 0x1b0
     d44:	46006e51 			; <UNDEFINED> instruction: 0x46006e51
     d48:	495f5550 	ldmdbmi	pc, {r4, r6, r8, sl, ip, lr}^	; <UNPREDICTABLE>
     d4c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d50:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     d54:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     d58:	41006e51 	tstmi	r0, r1, asr lr
     d5c:	7265746c 	rsbvc	r7, r5, #108, 8	; 0x6c000000
     d60:	6574616e 	ldrbvs	r6, [r4, #-366]!	; 0xfffffe92
     d64:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     d68:	5f53465f 	svcpl	0x0053465f
     d6c:	50554b57 	subspl	r4, r5, r7, asr fp
     d70:	5152495f 	cmppl	r2, pc, asr r9
     d74:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     d78:	5f344954 	svcpl	0x00344954
     d7c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d80:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     d84:	41445f36 	cmpmi	r4, r6, lsr pc
     d88:	52495f43 	subpl	r5, r9, #268	; 0x10c
     d8c:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     d90:	5f324332 	svcpl	0x00324332
     d94:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     d98:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d9c:	31414d44 	cmpcc	r1, r4, asr #26
     da0:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     da4:	316d6165 	cmncc	sp, r5, ror #2
     da8:	5152495f 	cmppl	r2, pc, asr r9
     dac:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     db0:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     db4:	61657274 	smcvs	22308	; 0x5724
     db8:	495f336d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     dbc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     dc0:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     dc4:	5f58545f 	svcpl	0x0058545f
     dc8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dcc:	6c755000 	ldclvs	0, cr5, [r5], #-0
     dd0:	4d44006c 	stclmi	0, cr0, [r4, #-432]	; 0xfffffe50
     dd4:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     dd8:	61657274 	smcvs	22308	; 0x5724
     ddc:	495f306d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, ip, sp}^	; <UNPREDICTABLE>
     de0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     de4:	5f435452 	svcpl	0x00435452
     de8:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     dec:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     df0:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     df4:	5f334332 	svcpl	0x00334332
     df8:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     dfc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e00:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     e04:	315f3531 	cmpcc	pc, r1, lsr r5	; <UNPREDICTABLE>
     e08:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     e0c:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     e10:	5f334d49 	svcpl	0x00334d49
     e14:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e18:	41535500 	cmpmi	r3, r0, lsl #10
     e1c:	5f315452 	svcpl	0x00315452
     e20:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     e28:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
     e2c:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
     e30:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
     e34:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     e38:	4e520079 	mrcmi	0, 2, r0, cr2, cr9, {3}
     e3c:	52495f47 	subpl	r5, r9, #284	; 0x11c
     e40:	43006e51 	movwmi	r6, #3665	; 0xe51
     e44:	5f324e41 	svcpl	0x00324e41
     e48:	5f315852 	svcpl	0x00315852
     e4c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e50:	43444100 	movtmi	r4, #16640	; 0x4100
     e54:	5152495f 	cmppl	r2, pc, asr r9
     e58:	5650006e 	ldrbpl	r0, [r0], -lr, rrx
     e5c:	52495f44 	subpl	r5, r9, #68, 30	; 0x110
     e60:	4f006e51 	svcmi	0x00006e51
     e64:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
     e68:	53460052 	movtpl	r0, #24658	; 0x6052
     e6c:	495f434d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     e70:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e74:	5f4c4148 	svcpl	0x004c4148
     e78:	4349564e 	movtmi	r5, #38478	; 0x964e
     e7c:	616e455f 	cmnvs	lr, pc, asr r5
     e80:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     e84:	45005152 	strmi	r5, [r0, #-338]	; 0xfffffeae
     e88:	30495458 	subcc	r5, r9, r8, asr r4
     e8c:	5152495f 	cmppl	r2, pc, asr r9
     e90:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     e94:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     e98:	61657274 	smcvs	22308	; 0x5724
     e9c:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     ea0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ea4:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     ea8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     eac:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
     eb0:	5152495f 	cmppl	r2, pc, asr r9
     eb4:	6544006e 	strbvs	r0, [r4, #-110]	; 0xffffff92
     eb8:	4d677562 	cfstr64mi	mvdx7, [r7, #-392]!	; 0xfffffe78
     ebc:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     ec0:	495f726f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     ec4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ec8:	33433249 	movtcc	r3, #12873	; 0x3249
     ecc:	5f56455f 	svcpl	0x0056455f
     ed0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ed4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     ed8:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
     edc:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     ee0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     ee4:	51524965 	cmppl	r2, r5, ror #18
     ee8:	43435200 	movtmi	r5, #12800	; 0x3200
     eec:	5152495f 	cmppl	r2, pc, asr r9
     ef0:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     ef4:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     ef8:	61657274 	smcvs	22308	; 0x5724
     efc:	495f336d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     f00:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f04:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
     f08:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     f0c:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     f10:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     f14:	49540066 	ldmdbmi	r4, {r1, r2, r5, r6}^
     f18:	555f314d 	ldrbpl	r3, [pc, #-333]	; dd3 <_Min_Heap_Size+0x5d3>
     f1c:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
     f20:	5f30314d 	svcpl	0x0030314d
     f24:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f28:	2f2e2e00 	svccs	0x002e2e00
     f2c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     f30:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     f34:	6173752f 	cmnvs	r3, pc, lsr #10
     f38:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
     f3c:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     f40:	5f53485f 	svcpl	0x0053485f
     f44:	5f315045 	svcpl	0x00315045
     f48:	5f54554f 	svcpl	0x0054554f
     f4c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f50:	444f4d00 	strbmi	r4, [pc], #-3328	; f58 <_Min_Heap_Size+0x758>
     f54:	43005245 	movwmi	r5, #581	; 0x245
     f58:	5f314e41 	svcpl	0x00314e41
     f5c:	5f315852 	svcpl	0x00315852
     f60:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f64:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     f68:	355f3949 	ldrbcc	r3, [pc, #-2377]	; 627 <_Min_Heap_Size-0x1d9>
     f6c:	5152495f 	cmppl	r2, pc, asr r9
     f70:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     f74:	435f384d 	cmpmi	pc, #5046272	; 0x4d0000
     f78:	52495f43 	subpl	r5, r9, #268	; 0x10c
     f7c:	53006e51 	movwpl	r6, #3665	; 0xe51
     f80:	5f4f4944 	svcpl	0x004f4944
     f84:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f88:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     f8c:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     f90:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f94:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     f98:	495f5653 	ldmdbmi	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     f9c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fa0:	5f47544f 	svcpl	0x0047544f
     fa4:	455f5348 	ldrbmi	r5, [pc, #-840]	; c64 <_Min_Heap_Size+0x464>
     fa8:	495f3150 	ldmdbmi	pc, {r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     fac:	52495f4e 	subpl	r5, r9, #312	; 0x138
     fb0:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     fb4:	5f31414d 	svcpl	0x0031414d
     fb8:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     fbc:	5f376d61 	svcpl	0x00376d61
     fc0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fc4:	414d4400 	cmpmi	sp, r0, lsl #8
     fc8:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     fcc:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     fd0:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     fd4:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     fd8:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; edc <_Min_Heap_Size+0x6dc>
     fdc:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
     fe0:	2e007469 	cdpcs	4, 0, cr7, cr0, cr9, {3}
     fe4:	6f432f2e 	svcvs	0x00432f2e
     fe8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     fec:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
     ff0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     ff4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     ff8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     ffc:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
    1000:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1004:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1008:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    100c:	43507465 	cmpmi	r0, #1694498816	; 0x65000000
    1010:	46314b4c 	ldrtmi	r4, [r1], -ip, asr #22
    1014:	00716572 	rsbseq	r6, r1, r2, ror r5
    1018:	5f4c4148 	svcpl	0x004c4148
    101c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1020:	475f7845 	ldrbmi	r7, [pc, -r5, asr #16]
    1024:	78527465 	ldmdavc	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1028:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    102c:	70795474 	rsbsvc	r5, r9, r4, ror r4
    1030:	41480065 	cmpmi	r8, r5, rrx
    1034:	41555f4c 	cmpmi	r5, ip, asr #30
    1038:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1040 <_Min_Heap_Size+0x840>
    103c:	6150414d 	cmpvs	r0, sp, asr #2
    1040:	00657375 	rsbeq	r7, r5, r5, ror r3
    1044:	5f4c4148 	svcpl	0x004c4148
    1048:	5f4e494c 	svcpl	0x004e494c
    104c:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
    1050:	61657242 	cmnvs	r5, r2, asr #4
    1054:	6c46006b 	mcrrvs	0, 6, r0, r6, cr11
    1058:	74536761 	ldrbvc	r6, [r3], #-1889	; 0xfffff89f
    105c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1060:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1064:	414d445f 	cmpmi	sp, pc, asr r4
    1068:	6f62415f 	svcvs	0x0062415f
    106c:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1070:	41480054 	qdaddmi	r0, r4, r8
    1074:	61485f4c 	cmpvs	r8, ip, asr #30
    1078:	7544666c 	strbvc	r6, [r4, #-1644]	; 0xfffff994
    107c:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    1080:	616e455f 	cmnvs	lr, pc, asr r5
    1084:	54656c62 	strbtpl	r6, [r5], #-3170	; 0xfffff39e
    1088:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    108c:	7474696d 	ldrbtvc	r6, [r4], #-2413	; 0xfffff693
    1090:	63007265 	movwvs	r7, #613	; 0x265
    1094:	74693372 	strbtvc	r3, [r9], #-882	; 0xfffffc8e
    1098:	41480073 	hvcmi	32771	; 0x8003
    109c:	41555f4c 	cmpmi	r5, ip, asr #30
    10a0:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    10a4:	4578525f 	ldrbmi	r5, [r8, #-607]!	; 0xfffffda1
    10a8:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    10ac:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    10b0:	6b636162 	blvs	18d9640 <_Min_Heap_Size+0x18d8e40>
    10b4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    10b8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    10bc:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    10c0:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    10c4:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    10c8:	48006576 	stmdami	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    10cc:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 493 <_Min_Heap_Size-0x36d>
    10d0:	5f545241 	svcpl	0x00545241
    10d4:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0xfffffab9
    10d8:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    10dc:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
    10e0:	44700072 	ldrbtmi	r0, [r0], #-114	; 0xffffff8e
    10e4:	00617461 	rsbeq	r7, r1, r1, ror #8
    10e8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    10ec:	646e455f 	strbtvs	r4, [lr], #-1375	; 0xfffffaa1
    10f0:	72547852 	subsvc	r7, r4, #5373952	; 0x520000
    10f4:	66736e61 	ldrbtvs	r6, [r3], -r1, ror #28
    10f8:	55007265 	strpl	r7, [r0, #-613]	; 0xfffffd9b
    10fc:	5f545241 	svcpl	0x00545241
    1100:	54646e45 	strbtpl	r6, [r4], #-3653	; 0xfffff1bb
    1104:	61725478 	cmnvs	r2, r8, ror r4
    1108:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
    110c:	64700072 	ldrbtvs	r0, [r0], #-114	; 0xffffff8e
    1110:	38617461 	stmdacc	r1!, {r0, r5, r6, sl, ip, sp, lr}^
    1114:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1118:	52415500 	subpl	r5, r1, #0, 10
    111c:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1120:	63655241 	cmnvs	r5, #268435460	; 0x10000004
    1124:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1128:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    112c:	52415500 	subpl	r5, r1, #0, 10
    1130:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1134:	48785441 	ldmdami	r8!, {r0, r6, sl, ip, lr}^
    1138:	43666c61 	cmnmi	r6, #24832	; 0x6100
    113c:	00746c70 	rsbseq	r6, r4, r0, ror ip
    1140:	5f4c4148 	svcpl	0x004c4148
    1144:	5f414d44 	svcpl	0x00414d44
    1148:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    114c:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1150:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1154:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1158:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    115c:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    1160:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1164:	70436576 	subvc	r6, r3, r6, ror r5
    1168:	6143746c 	cmpvs	r3, ip, ror #8
    116c:	61626c6c 	cmnvs	r2, ip, ror #24
    1170:	46006b63 	strmi	r6, [r0], -r3, ror #22
    1174:	0067616c 	rsbeq	r6, r7, ip, ror #2
    1178:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    117c:	62363161 	eorsvs	r3, r6, #1073741848	; 0x40000018
    1180:	00737469 	rsbseq	r7, r3, r9, ror #8
    1184:	5f4c4148 	svcpl	0x004c4148
    1188:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    118c:	4878525f 	ldmdami	r8!, {r0, r1, r2, r3, r4, r6, r9, ip, lr}^
    1190:	43666c61 	cmnmi	r6, #24832	; 0x6100
    1194:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    1198:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    119c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    11a0:	6b636954 	blvs	18db6f8 <_Min_Heap_Size+0x18daef8>
    11a4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    11a8:	41480074 	hvcmi	32772	; 0x8004
    11ac:	61485f4c 	cmpvs	r8, ip, asr #30
    11b0:	7544666c 	strbvc	r6, [r4, #-1644]	; 0xfffff994
    11b4:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    11b8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    11bc:	41480074 	hvcmi	32772	; 0x8004
    11c0:	41555f4c 	cmpmi	r5, ip, asr #30
    11c4:	445f5452 	ldrbmi	r5, [pc], #-1106	; 11cc <_Min_Heap_Size+0x9cc>
    11c8:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    11cc:	61570074 	cmpvs	r7, r4, ror r0
    11d0:	7055656b 	subsvc	r6, r5, fp, ror #10
    11d4:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
    11d8:	4200646f 	andmi	r6, r0, #1862270976	; 0x6f000000
    11dc:	6b616572 	blvs	185a7ac <_Min_Heap_Size+0x1859fac>
    11e0:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
    11e4:	654c7463 	strbvs	r7, [ip, #-1123]	; 0xfffffb9d
    11e8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    11ec:	52415500 	subpl	r5, r1, #0, 10
    11f0:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
    11f4:	5f747261 	svcpl	0x00747261
    11f8:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    11fc:	5f657669 	svcpl	0x00657669
    1200:	55005449 	strpl	r5, [r0, #-1097]	; 0xfffffbb7
    1204:	5f545241 	svcpl	0x00545241
    1208:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    120c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1210:	62410067 	subvs	r0, r1, #103	; 0x67
    1214:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    1218:	00746c70 	rsbseq	r6, r4, r0, ror ip
    121c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1220:	414d445f 	cmpmi	sp, pc, asr r4
    1224:	62417852 	subvs	r7, r1, #5373952	; 0x520000
    1228:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    122c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1230:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1234:	5f4c4148 	svcpl	0x004c4148
    1238:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    123c:	6f62415f 	svcvs	0x0062415f
    1240:	72547472 	subsvc	r7, r4, #1912602624	; 0x72000000
    1244:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1248:	495f7469 	ldmdbmi	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    124c:	41480054 	qdaddmi	r0, r4, r8
    1250:	41555f4c 	cmpmi	r5, ip, asr #30
    1254:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
    1258:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    125c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1260:	54535f5f 	ldrbpl	r5, [r3], #-3935	; 0xfffff0a1
    1264:	57584552 			; <UNDEFINED> instruction: 0x57584552
    1268:	52415500 	subpl	r5, r1, #0, 10
    126c:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1270:	4f785241 	svcmi	0x00785241
    1274:	41796c6e 	cmnmi	r9, lr, ror #24
    1278:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    127c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1280:	6b636162 	blvs	18d9810 <_Min_Heap_Size+0x18d9010>
    1284:	72726500 	rsbsvc	r6, r2, #0, 10
    1288:	6c66726f 	sfmvs	f7, 2, [r6], #-444	; 0xfffffe44
    128c:	00736761 	rsbseq	r6, r3, r1, ror #14
    1290:	5f4c4148 	svcpl	0x004c4148
    1294:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1298:	79547375 	ldmdbvc	r4, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
    129c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    12a0:	41480066 	cmpmi	r8, r6, rrx
    12a4:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    12a8:	62415f41 	subvs	r5, r1, #260	; 0x104
    12ac:	0074726f 	rsbseq	r7, r4, pc, ror #4
    12b0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 12b8 <_Min_Heap_Size+0xab8>
    12b4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    12b8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    12bc:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    12c0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    12c4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    12c8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    12cc:	2f726576 	svccs	0x00726576
    12d0:	2f637253 	svccs	0x00637253
    12d4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    12d8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    12dc:	61685f78 	smcvs	34296	; 0x85f8
    12e0:	61755f6c 	cmnvs	r5, ip, ror #30
    12e4:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    12e8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    12ec:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    12f0:	78545f54 	ldmdavc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    12f4:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    12f8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    12fc:	6b636162 	blvs	18d988c <_Min_Heap_Size+0x18d908c>
    1300:	52415500 	subpl	r5, r1, #0, 10
    1304:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1308:	41785441 	cmnmi	r8, r1, asr #8
    130c:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1310:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1314:	6b636162 	blvs	18d98a4 <_Min_Heap_Size+0x18d90a4>
    1318:	6d646800 	stclvs	8, cr6, [r4, #-0]
    131c:	73690061 	cmnvc	r9, #97	; 0x61
    1320:	616c6672 	smcvs	50786	; 0xc662
    1324:	55007367 	strpl	r7, [r0, #-871]	; 0xfffffc99
    1328:	5f545241 	svcpl	0x00545241
    132c:	45414d44 	strbmi	r4, [r1, #-3396]	; 0xfffff2bc
    1330:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1334:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1338:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    133c:	6b636954 	blvs	18db894 <_Min_Heap_Size+0x18db094>
    1340:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1344:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1348:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    134c:	5f74726f 	svcpl	0x0074726f
    1350:	55005449 	strpl	r5, [r0, #-1097]	; 0xfffffbb7
    1354:	5f545241 	svcpl	0x00545241
    1358:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    135c:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    1360:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    1364:	41480074 	hvcmi	32772	; 0x8004
    1368:	41555f4c 	cmpmi	r5, ip, asr #30
    136c:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    1370:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1374:	445f6576 	ldrbmi	r6, [pc], #-1398	; 137c <_Min_Heap_Size+0xb7c>
    1378:	4800414d 	stmdami	r0, {r0, r2, r3, r6, r8, lr}
    137c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 743 <_Min_Heap_Size-0xbd>
    1380:	5f545241 	svcpl	0x00545241
    1384:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1388:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    138c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1390:	0054495f 	subseq	r4, r4, pc, asr r9
    1394:	654c7852 	strbvs	r7, [ip, #-2130]	; 0xfffff7ae
    1398:	4148006e 	cmpmi	r8, lr, rrx
    139c:	754d5f4c 	strbvc	r5, [sp, #-3916]	; 0xfffff0b4
    13a0:	5069746c 	rsbpl	r7, r9, ip, ror #8
    13a4:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    13a8:	726f7373 	rsbvc	r7, pc, #-872415231	; 0xcc000001
    13ac:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    13b0:	41550074 	cmpmi	r5, r4, ror r0
    13b4:	575f5452 			; <UNDEFINED> instruction: 0x575f5452
    13b8:	4f746961 	svcmi	0x00746961
    13bc:	616c466e 	cmnvs	ip, lr, ror #12
    13c0:	746e5567 	strbtvc	r5, [lr], #-1383	; 0xfffffa99
    13c4:	69546c69 	ldmdbvs	r4, {r0, r3, r5, r6, sl, fp, sp, lr}^
    13c8:	756f656d 	strbvc	r6, [pc, #-1389]!	; e63 <_Min_Heap_Size+0x663>
    13cc:	41480074 	hvcmi	32772	; 0x8004
    13d0:	41555f4c 	cmpmi	r5, ip, asr #30
    13d4:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    13d8:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    13dc:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    13e0:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    13e4:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    13e8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    13ec:	6b636162 	blvs	18d997c <_Min_Heap_Size+0x18d917c>
    13f0:	4c5f5f00 	mrrcmi	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
    13f4:	58455244 	stmdapl	r5, {r2, r6, r9, ip, lr}^
    13f8:	41480057 	qdaddmi	r0, r7, r8
    13fc:	41555f4c 	cmpmi	r5, ip, asr #30
    1400:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    1404:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1408:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    140c:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    1410:	52415500 	subpl	r5, r1, #0, 10
    1414:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
    1418:	5f747261 	svcpl	0x00747261
    141c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1420:	5f657669 	svcpl	0x00657669
    1424:	00414d44 	subeq	r4, r1, r4, asr #26
    1428:	5f4c4148 	svcpl	0x004c4148
    142c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1430:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    1434:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1438:	6f546576 	svcvs	0x00546576
    143c:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    1440:	0054495f 	subseq	r4, r4, pc, asr r9
    1444:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1448:	3436746e 	ldrtcc	r7, [r6], #-1134	; 0xfffffb92
    144c:	5f00745f 	svcpl	0x0000745f
    1450:	6165615f 	cmnvs	r5, pc, asr r1
    1454:	755f6962 	ldrbvc	r6, [pc, #-2402]	; afa <_Min_Heap_Size+0x2fa>
    1458:	7669646c 	strbtvc	r6, [r9], -ip, ror #8
    145c:	00646f6d 	rsbeq	r6, r4, sp, ror #30
    1460:	5f4c4148 	svcpl	0x004c4148
    1464:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1468:	414d445f 	cmpmi	sp, pc, asr r4
    146c:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    1470:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1474:	6c754d5f 	ldclvs	13, cr4, [r5], #-380	; 0xfffffe84
    1478:	72506974 	subsvc	r6, r0, #116, 18	; 0x1d0000
    147c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    1480:	5f726f73 	svcpl	0x00726f73
    1484:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
    1488:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    148c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1490:	61756800 	cmnvs	r5, r0, lsl #16
    1494:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    1498:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    149c:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    14a0:	43507465 	cmpmi	r0, #1694498816	; 0x65000000
    14a4:	46324b4c 	ldrtmi	r4, [r2], -ip, asr #22
    14a8:	00716572 	rsbseq	r6, r1, r2, ror r5
    14ac:	5f4c4148 	svcpl	0x004c4148
    14b0:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    14b4:	6c707544 	cfldr64vs	mvdx7, [r0], #-272	; 0xfffffef0
    14b8:	455f7865 	ldrbmi	r7, [pc, #-2149]	; c5b <_Min_Heap_Size+0x45b>
    14bc:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    14c0:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
    14c4:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    14c8:	63700072 	cmnvs	r0, #114	; 0x72
    14cc:	74006b6c 	strvc	r6, [r0], #-2924	; 0xfffff494
    14d0:	31706d65 	cmncc	r0, r5, ror #26
    14d4:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    14d8:	74003270 	strvc	r3, [r0], #-624	; 0xfffffd90
    14dc:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    14e0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    14e4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    14e8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    14ec:	78525f54 	ldmdavc	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    14f0:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    14f4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    14f8:	6b636162 	blvs	18d9a88 <_Min_Heap_Size+0x18d9288>
    14fc:	5f626e00 	svcpl	0x00626e00
    1500:	616d6572 	smcvs	54866	; 0xd652
    1504:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    1508:	78725f67 	ldmdavc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    150c:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    1510:	41480061 	cmpmi	r8, r1, rrx
    1514:	41555f4c 	cmpmi	r5, ip, asr #30
    1518:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    151c:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1520:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    1524:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1528:	6b636162 	blvs	18d9ab8 <_Min_Heap_Size+0x18d92b8>
    152c:	616d6400 	cmnvs	sp, r0, lsl #8
    1530:	75716572 	ldrbvc	r6, [r1, #-1394]!	; 0xfffffa8e
    1534:	00747365 	rsbseq	r7, r4, r5, ror #6
    1538:	5f4c4148 	svcpl	0x004c4148
    153c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1540:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    1544:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1548:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    154c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1550:	72545f54 	subsvc	r5, r4, #84, 30	; 0x150
    1554:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1558:	495f7469 	ldmdbmi	pc, {r0, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    155c:	41550054 	cmpmi	r5, r4, asr r0
    1560:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1568 <_Min_Heap_Size+0xd68>
    1564:	6241414d 	subvs	r4, r1, #1073741843	; 0x40000013
    1568:	4f74726f 	svcmi	0x0074726f
    156c:	7272456e 	rsbsvc	r4, r2, #461373440	; 0x1b800000
    1570:	6e00726f 	cdpvs	2, 0, cr7, cr0, cr15, {3}
    1574:	78725f62 	ldmdavc	r2!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    1578:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    157c:	41550061 	cmpmi	r5, r1, rrx
    1580:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1588 <_Min_Heap_Size+0xd88>
    1584:	7254414d 	subsvc	r4, r4, #1073741843	; 0x40000013
    1588:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    158c:	70437469 	subvc	r7, r3, r9, ror #8
    1590:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    1594:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 95b <_Min_Heap_Size+0x15b>
    1598:	45545241 	ldrbmi	r5, [r4, #-577]	; 0xfffffdbf
    159c:	65525f78 	ldrbvs	r5, [r2, #-3960]	; 0xfffff088
    15a0:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    15a4:	496f5465 	stmdbmi	pc!, {r0, r2, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    15a8:	5f656c64 	svcpl	0x00656c64
    15ac:	00414d44 	subeq	r4, r1, r4, asr #26
    15b0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15b4:	646e455f 	strbtvs	r4, [lr], #-1375	; 0xfffffaa1
    15b8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    15bc:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    15c0:	0054495f 	subseq	r4, r4, pc, asr r9
    15c4:	5f4c4148 	svcpl	0x004c4148
    15c8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15cc:	4878545f 	ldmdami	r8!, {r0, r1, r2, r3, r4, r6, sl, ip, lr}^
    15d0:	43666c61 	cmnmi	r6, #24832	; 0x6100
    15d4:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    15d8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    15dc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    15e0:	5f4c4148 	svcpl	0x004c4148
    15e4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15e8:	7272455f 	rsbsvc	r4, r2, #398458880	; 0x17c00000
    15ec:	6143726f 	cmpvs	r3, pc, ror #4
    15f0:	61626c6c 	cmnvs	r2, ip, ror #24
    15f4:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    15f8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1600 <_Min_Heap_Size+0xe00>
    15fc:	475f414d 	ldrbmi	r4, [pc, -sp, asr #2]
    1600:	72457465 	subvc	r7, r5, #1694498816	; 0x65000000
    1604:	00726f72 	rsbseq	r6, r2, r2, ror pc
    1608:	5f4c4148 	svcpl	0x004c4148
    160c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1610:	6172545f 	cmnvs	r2, pc, asr r4
    1614:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1618:	4d445f74 	stclmi	15, cr5, [r4, #-464]	; 0xfffffe30
    161c:	41480041 	cmpmi	r8, r1, asr #32
    1620:	41555f4c 	cmpmi	r5, ip, asr #30
    1624:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    1628:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    162c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1630:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    1634:	4800656c 	stmdami	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    1638:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 153c <_Min_Heap_Size+0xd3c>
    163c:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    1640:	636f7250 	cmnvs	pc, #80, 4
    1644:	6f737365 	svcvs	0x00737365
    1648:	6e455f72 	mcrvs	15, 2, r5, cr5, cr2, {3}
    164c:	4d726574 	cfldr64mi	mvdx6, [r2, #-464]!	; 0xfffffe30
    1650:	4d657475 	cfstrdmi	mvd7, [r5, #-468]!	; 0xfffffe2c
    1654:	0065646f 	rsbeq	r6, r5, pc, ror #8
    1658:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    165c:	414d445f 	cmpmi	sp, pc, asr r4
    1660:	6e4f7854 	mcrvs	8, 2, r7, cr15, cr4, {2}
    1664:	6241796c 	subvs	r7, r1, #108, 18	; 0x1b0000
    1668:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    166c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1670:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1674:	69317263 	ldmdbvs	r1!, {r0, r1, r5, r6, r9, ip, sp, lr}
    1678:	48007374 	stmdami	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    167c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; a43 <_Min_Heap_Size+0x243>
    1680:	5f545241 	svcpl	0x00545241
    1684:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    1688:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    168c:	41480065 	cmpmi	r8, r5, rrx
    1690:	41555f4c 	cmpmi	r5, ip, asr #30
    1694:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    1698:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    169c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16a0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16a4:	65525f54 	ldrbvs	r5, [r2, #-3924]	; 0xfffff0ac
    16a8:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    16ac:	54495f65 	strbpl	r5, [r9], #-3941	; 0xfffff09b
    16b0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16b4:	4e494c5f 	mcrmi	12, 2, r4, cr9, cr15, {2}
    16b8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    16bc:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
    16c0:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
    16c4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16c8:	4343525f 	movtmi	r5, #12895	; 0x325f
    16cc:	5353435f 	cmppl	r3, #2080374785	; 0x7c000001
    16d0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    16d4:	6b636162 	blvs	18d9c64 <_Min_Heap_Size+0x18d9464>
    16d8:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    16dc:	77700070 			; <UNDEFINED> instruction: 0x77700070
    16e0:	6b6c6372 	blvs	1b1a4b0 <_Min_Heap_Size+0x1b19cb0>
    16e4:	6e616863 	cdpvs	8, 6, cr6, cr1, cr3, {3}
    16e8:	00646567 	rsbeq	r6, r4, r7, ror #10
    16ec:	50425041 	subpl	r5, r2, r1, asr #32
    16f0:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    16f4:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
    16f8:	504f0065 	subpl	r0, pc, r5, rrx
    16fc:	00524354 	subseq	r4, r2, r4, asr r3
    1700:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1704:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
    1708:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    170c:	4e450066 	cdpmi	0, 4, cr0, cr5, cr6, {3}
    1710:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
    1714:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    1718:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
    171c:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    1720:	006f6376 	rsbeq	r6, pc, r6, ror r3	; <UNPREDICTABLE>
    1724:	41534944 	cmpmi	r3, r4, asr #18
    1728:	00454c42 	subeq	r4, r5, r2, asr #24
    172c:	4354504f 	cmpmi	r4, #79	; 0x4f
    1730:	52003152 	andpl	r3, r0, #-2147483628	; 0x80000014
    1734:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 1630 <_Min_Heap_Size+0xe30>
    1738:	69444f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, lr}^
    173c:	41480076 	hvcmi	32774	; 0x8006
    1740:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1744:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
    1748:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    174c:	00535343 	subseq	r5, r3, r3, asr #6
    1750:	50424841 	subpl	r4, r2, r1, asr #16
    1754:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    1758:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
    175c:	79730065 	ldmdbvc	r3!, {r0, r2, r5, r6}^
    1760:	6f6c6373 	svcvs	0x006c6373
    1764:	72666b63 	rsbvc	r6, r6, #101376	; 0x18c00
    1768:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    176c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1770:	445f4343 	ldrbmi	r4, [pc], #-835	; 1778 <_Min_Heap_Size+0xf78>
    1774:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    1778:	5343656c 	movtpl	r6, #13676	; 0x356c
    177c:	41480053 	qdaddmi	r0, r3, r8
    1780:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1784:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1788:	6e6f434f 	cdpvs	3, 6, cr4, cr15, cr15, {2}
    178c:	00676966 	rsbeq	r6, r7, r6, ror #18
    1790:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    1794:	6f436d65 	svcvs	0x00436d65
    1798:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
    179c:	006b636f 	rsbeq	r6, fp, pc, ror #6
    17a0:	5f4c4148 	svcpl	0x004c4148
    17a4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    17a8:	6b636954 	blvs	18dbd00 <_Min_Heap_Size+0x18db500>
    17ac:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    17b0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    17b4:	00676966 	rsbeq	r6, r7, r6, ror #18
    17b8:	69547775 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    17bc:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
    17c0:	70006f69 	andvc	r6, r0, r9, ror #30
    17c4:	006d6c6c 	rsbeq	r6, sp, ip, ror #24
    17c8:	5f4c4148 	svcpl	0x004c4148
    17cc:	5f434352 	svcpl	0x00434352
    17d0:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    17d4:	6c437379 	mcrrvs	3, 7, r7, r3, cr9
    17d8:	466b636f 	strbtmi	r6, [fp], -pc, ror #6
    17dc:	00716572 	rsbseq	r6, r1, r2, ror r5
    17e0:	5f4c4148 	svcpl	0x004c4148
    17e4:	5f434352 	svcpl	0x00434352
    17e8:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    17ec:	52007469 	andpl	r7, r0, #1761607680	; 0x69000000
    17f0:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 16ec <_Min_Heap_Size+0xeec>
    17f4:	6f534f43 	svcvs	0x00534f43
    17f8:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    17fc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1800:	4343525f 	movtmi	r5, #12895	; 0x325f
    1804:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1808:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    180c:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    1810:	00676966 	rsbeq	r6, r7, r6, ror #18
    1814:	5f4c4148 	svcpl	0x004c4148
    1818:	5f434352 	svcpl	0x00434352
    181c:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    1820:	464b4c43 	strbmi	r4, [fp], -r3, asr #24
    1824:	00716572 	rsbseq	r6, r1, r2, ror r5
    1828:	442f2e2e 	strtmi	r2, [pc], #-3630	; 1830 <_Min_Heap_Size+0x1030>
    182c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1830:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    1834:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1838:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    183c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1840:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1844:	2f726576 	svccs	0x00726576
    1848:	2f637253 	svccs	0x00637253
    184c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1850:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1854:	61685f78 	smcvs	34296	; 0x85f8
    1858:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    185c:	00632e63 	rsbeq	r2, r3, r3, ror #28
    1860:	5f434352 	svcpl	0x00434352
    1864:	784f434d 	stmdavc	pc, {r0, r2, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    1868:	4c467000 	marmi	acc0, r7, r6
    186c:	6e657461 	cdpvs	4, 6, cr7, cr5, cr1, {3}
    1870:	48007963 	stmdami	r0, {r0, r1, r5, r6, r8, fp, ip, sp, lr}
    1874:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1878:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    187c:	734f7465 	movtvc	r7, #62565	; 0xf465
    1880:	6e6f4363 	cdpvs	3, 6, cr4, cr15, cr3, {3}
    1884:	00676966 	rsbeq	r6, r7, r6, ror #18
    1888:	5f4c4148 	svcpl	0x004c4148
    188c:	5f434352 	svcpl	0x00434352
    1890:	5f494d4e 	svcpl	0x00494d4e
    1894:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1898:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    189c:	47007265 	strmi	r7, [r0, -r5, ror #4]
    18a0:	5f4f4950 	svcpl	0x004f4950
    18a4:	006e6950 	rsbeq	r6, lr, r0, asr r9
    18a8:	5f4c4148 	svcpl	0x004c4148
    18ac:	4f495047 	svcmi	0x00495047
    18b0:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
    18b4:	6e69506b 	cdpvs	0, 6, cr5, cr9, cr11, {3}
    18b8:	706f6900 	rsbvc	r6, pc, r0, lsl #18
    18bc:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    18c0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    18c4:	524d454d 	subpl	r4, sp, #322961408	; 0x13400000
    18c8:	4500504d 	strmi	r5, [r0, #-77]	; 0xffffffb3
    18cc:	43495458 	movtmi	r5, #37976	; 0x9458
    18d0:	41480052 	qdaddmi	r0, r2, r8
    18d4:	50475f4c 	subpl	r5, r7, ip, asr #30
    18d8:	545f4f49 	ldrbpl	r4, [pc], #-3913	; 18e0 <_Min_Heap_Size+0x10e0>
    18dc:	6c67676f 	stclvs	7, cr6, [r7], #-444	; 0xfffffe44
    18e0:	6e695065 	cdpvs	0, 6, cr5, cr9, cr5, {3}
    18e4:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    18e8:	49505f4f 	ldmdbmi	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    18ec:	45535f4e 	ldrbmi	r5, [r3, #-3918]	; 0xfffff0b2
    18f0:	58450054 	stmdapl	r5, {r2, r4, r6}^
    18f4:	545f4954 	ldrbpl	r4, [pc], #-2388	; 18fc <_Min_Heap_Size+0x10fc>
    18f8:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    18fc:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1900:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1904:	5f4f4950 	svcpl	0x004f4950
    1908:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    190c:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1910:	5f4c4148 	svcpl	0x004c4148
    1914:	4f495047 	svcmi	0x00495047
    1918:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    191c:	69506574 	ldmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1920:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
    1924:	00524350 	subseq	r4, r2, r0, asr r3
    1928:	73746962 	cmnvc	r4, #1605632	; 0x188000
    192c:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1930:	50470073 	subpl	r0, r7, r3, ror r0
    1934:	505f4f49 	subspl	r4, pc, r9, asr #30
    1938:	525f4e49 	subspl	r4, pc, #1168	; 0x490
    193c:	54455345 	strbpl	r5, [r5], #-837	; 0xfffffcbb
    1940:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1944:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1948:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    194c:	435f4954 	cmpmi	pc, #84, 18	; 0x150000
    1950:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1954:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1958:	706d6574 	rsbvc	r6, sp, r4, ror r5
    195c:	53544600 	cmppl	r4, #0, 12
    1960:	41480052 	qdaddmi	r0, r2, r8
    1964:	50475f4c 	subpl	r5, r7, ip, asr #30
    1968:	455f4f49 	ldrbmi	r4, [pc, #-3913]	; a27 <_Min_Heap_Size+0x227>
    196c:	5f495458 	svcpl	0x00495458
    1970:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1974:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1978:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    197c:	7275636f 	rsbsvc	r6, r5, #-1140850687	; 0xbc000001
    1980:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1984:	53595300 	cmppl	r9, #0, 6
    1988:	5f474643 	svcpl	0x00474643
    198c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1990:	00666544 	rsbeq	r6, r6, r4, asr #10
    1994:	52535452 	subspl	r5, r3, #1375731712	; 0x52000000
    1998:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    199c:	2e00784f 	cdpcs	8, 0, cr7, cr0, cr15, {2}
    19a0:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    19a4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    19a8:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    19ac:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    19b0:	5f787834 	svcpl	0x00787834
    19b4:	5f4c4148 	svcpl	0x004c4148
    19b8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    19bc:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    19c0:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    19c4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    19c8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    19cc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    19d0:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    19d4:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    19d8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    19dc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    19e0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    19e4:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    19e8:	6174536e 	cmnvs	r4, lr, ror #6
    19ec:	53006574 	movwpl	r6, #1396	; 0x574
    19f0:	52454957 	subpl	r4, r5, #1425408	; 0x15c000
    19f4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    19f8:	414d445f 	cmpmi	sp, pc, asr r4
    19fc:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1a00:	42415f52 	submi	r5, r1, #328	; 0x148
    1a04:	5f54524f 	svcpl	0x0054524f
    1a08:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1a0c:	41480044 	cmpmi	r8, r4, asr #32
    1a10:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1a14:	6e495f41 	cdpvs	15, 4, cr5, cr9, cr1, {2}
    1a18:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1a1c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1a24 <_Min_Heap_Size+0x1224>
    1a20:	525f414d 	subspl	r4, pc, #1073741843	; 0x40000013
    1a24:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1a28:	43726574 	cmnmi	r2, #116, 10	; 0x1d000000
    1a2c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1a30:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1a34:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1a38:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
    1a3c:	6c660030 	stclvs	0, cr0, [r6], #-192	; 0xffffff40
    1a40:	69426761 	stmdbvs	r2, {r0, r5, r6, r8, r9, sl, sp, lr}^
    1a44:	69687374 	stmdbvs	r8!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}^
    1a48:	664f7466 	strbvs	r7, [pc], -r6, ror #8
    1a4c:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    1a50:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    1a54:	00727369 	rsbseq	r7, r2, r9, ror #6
    1a58:	5f4c4148 	svcpl	0x004c4148
    1a5c:	5f414d44 	svcpl	0x00414d44
    1a60:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1a64:	4c50435f 	mrrcmi	3, 5, r4, r0, cr15
    1a68:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1a6c:	0044495f 	subeq	r4, r4, pc, asr r9
    1a70:	5f4c4148 	svcpl	0x004c4148
    1a74:	5f414d44 	svcpl	0x00414d44
    1a78:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    1a7c:	41480074 	hvcmi	32772	; 0x8004
    1a80:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1a84:	65445f41 	strbvs	r5, [r4, #-3905]	; 0xfffff0bf
    1a88:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1a8c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a90:	414d445f 	cmpmi	sp, pc, asr r4
    1a94:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1a98:	52455f52 	subpl	r5, r5, #328	; 0x148
    1a9c:	5f524f52 	svcpl	0x00524f52
    1aa0:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1aa4:	41480044 	cmpmi	r8, r4, asr #32
    1aa8:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1aac:	41485f41 	cmpmi	r8, r1, asr #30
    1ab0:	545f464c 	ldrbpl	r4, [pc], #-1612	; 1ab8 <_Min_Heap_Size+0x12b8>
    1ab4:	534e4152 	movtpl	r4, #57682	; 0xe152
    1ab8:	00524546 	subseq	r4, r2, r6, asr #10
    1abc:	5f414d44 	svcpl	0x00414d44
    1ac0:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    1ac4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1ac8:	2e2e0067 	cdpcs	0, 2, cr0, cr14, cr7, {3}
    1acc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1ad0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1ad4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1ad8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1adc:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1ae0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1ae8 <_Min_Heap_Size+0x12e8>
    1ae4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1ae8:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1aec:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1af0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1af4:	5f787834 	svcpl	0x00787834
    1af8:	5f6c6168 	svcpl	0x006c6168
    1afc:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    1b00:	41480063 	cmpmi	r8, r3, rrx
    1b04:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1b08:	654c5f41 	strbvs	r5, [ip, #-3905]	; 0xfffff0bf
    1b0c:	436c6576 	cmnmi	ip, #494927872	; 0x1d800000
    1b10:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    1b14:	54657465 	strbtpl	r7, [r5], #-1125	; 0xfffffb9b
    1b18:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1b1c:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1b20:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1b28 <_Min_Heap_Size+0x1328>
    1b24:	465f414d 	ldrbmi	r4, [pc], -sp, asr #2
    1b28:	5f4c4c55 	svcpl	0x004c4c55
    1b2c:	4e415254 	mcrmi	2, 2, r5, cr1, cr4, {2}
    1b30:	52454653 	subpl	r4, r5, #87031808	; 0x5300000
    1b34:	72747300 	rsbsvc	r7, r4, #0, 6
    1b38:	5f6d6165 	svcpl	0x006d6165
    1b3c:	626d756e 	rsbvs	r7, sp, #461373440	; 0x1b800000
    1b40:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1b44:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1b4c <_Min_Heap_Size+0x134c>
    1b48:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1b4c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1b50:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1b54:	70795444 	rsbsvc	r5, r9, r4, asr #8
    1b58:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1b5c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1b60:	414d445f 	cmpmi	sp, pc, asr r4
    1b64:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1b68:	314d5f52 	cmpcc	sp, r2, asr pc
    1b6c:	544c5043 	strbpl	r5, [ip], #-67	; 0xffffffbd
    1b70:	5f42435f 	svcpl	0x0042435f
    1b74:	43004449 	movwmi	r4, #1097	; 0x449
    1b78:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    1b7c:	4c657465 	cfstrdmi	mvd7, [r5], #-404	; 0xfffffe6c
    1b80:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
    1b84:	43464900 	movtmi	r4, #26880	; 0x6900
    1b88:	73440052 	movtvc	r0, #16466	; 0x4052
    1b8c:	64644174 	strbtvs	r4, [r4], #-372	; 0xfffffe8c
    1b90:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1b94:	6c614300 	stclvs	3, cr4, [r1], #-0
    1b98:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1b9c:	0044496b 	subeq	r4, r4, fp, ror #18
    1ba0:	5f414d44 	svcpl	0x00414d44
    1ba4:	63656843 	cmnvs	r5, #4390912	; 0x430000
    1ba8:	6669466b 	strbtvs	r4, [r9], -fp, ror #12
    1bac:	7261506f 	rsbvc	r5, r1, #111	; 0x6f
    1bb0:	48006d61 	stmdami	r0, {r0, r5, r6, r8, sl, fp, sp, lr}
    1bb4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1bbc <_Min_Heap_Size+0x13bc>
    1bb8:	555f414d 	ldrbpl	r4, [pc, #-333]	; 1a73 <_Min_Heap_Size+0x1273>
    1bbc:	6765526e 	strbvs	r5, [r5, -lr, ror #4]!
    1bc0:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1bc4:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    1bc8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1bcc:	4148006b 	cmpmi	r8, fp, rrx
    1bd0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1bd4:	52495f41 	subpl	r5, r9, #260	; 0x104
    1bd8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1bdc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1be0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1be4:	414d445f 	cmpmi	sp, pc, asr r4
    1be8:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1bec:	4c415f52 	mcrrmi	15, 5, r5, r1, cr2
    1bf0:	42435f4c 	submi	r5, r3, #76, 30	; 0x130
    1bf4:	0044495f 	subeq	r4, r4, pc, asr r9
    1bf8:	5f414d44 	svcpl	0x00414d44
    1bfc:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    1c00:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    1c04:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    1c08:	44007372 	strmi	r7, [r0], #-882	; 0xfffffc8e
    1c0c:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1c10:	42636c61 	rsbmi	r6, r3, #24832	; 0x6100
    1c14:	41657361 	cmnmi	r5, r1, ror #6
    1c18:	6942646e 	stmdbvs	r2, {r1, r2, r3, r5, r6, sl, sp, lr}^
    1c1c:	69687374 	stmdbvs	r8!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}^
    1c20:	48007466 	stmdami	r0, {r1, r2, r5, r6, sl, ip, sp, lr}
    1c24:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1c2c <_Min_Heap_Size+0x142c>
    1c28:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1c2c:	5f524546 	svcpl	0x00524546
    1c30:	464c4148 	strbmi	r4, [ip], -r8, asr #2
    1c34:	544c5043 	strbpl	r5, [ip], #-67	; 0xffffffbd
    1c38:	5f42435f 	svcpl	0x0042435f
    1c3c:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    1c40:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1c48 <_Min_Heap_Size+0x1448>
    1c44:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1c48:	5f524546 	svcpl	0x00524546
    1c4c:	4148314d 	cmpmi	r8, sp, asr #2
    1c50:	5043464c 	subpl	r4, r3, ip, asr #12
    1c54:	435f544c 	cmpmi	pc, #76, 8	; 0x4c000000
    1c58:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1c5c:	756f6300 	strbvc	r6, [pc, #-768]!	; 1964 <_Min_Heap_Size+0x1164>
    1c60:	5300746e 	movwpl	r7, #1134	; 0x46e
    1c64:	64416372 	strbvs	r6, [r1], #-882	; 0xfffffc8e
    1c68:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1c6c:	61440073 	hvcvs	16387	; 0x4003
    1c70:	654c6174 	strbvs	r6, [ip, #-372]	; 0xfffffe8c
    1c74:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1c78:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c7c:	414d445f 	cmpmi	sp, pc, asr r4
    1c80:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1c84:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1c88:	43700065 	cmnmi	r0, #101	; 0x65
    1c8c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c90:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1c94:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1c98:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1c9c:	73676572 	cmnvc	r7, #478150656	; 0x1c800000
    1ca0:	73616d00 	cmnvc	r1, #0, 26
    1ca4:	70635f6b 	rsbvc	r5, r3, fp, ror #30
    1ca8:	656c746c 	strbvs	r7, [ip, #-1132]!	; 0xfffffb94
    1cac:	006c6576 	rsbeq	r6, ip, r6, ror r5
    1cb0:	5f4c4148 	svcpl	0x004c4148
    1cb4:	5f414d44 	svcpl	0x00414d44
    1cb8:	6c6c6f50 	stclvs	15, cr6, [ip], #-320	; 0xfffffec0
    1cbc:	54726f46 	ldrbtpl	r6, [r2], #-3910	; 0xfffff0ba
    1cc0:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1cc4:	00726566 	rsbseq	r6, r2, r6, ror #10
    1cc8:	52504349 	subspl	r4, r0, #603979777	; 0x24000001
    1ccc:	70795400 	rsbsvc	r5, r9, r0, lsl #8
    1cd0:	74784565 	ldrbtvc	r4, [r8], #-1381	; 0xfffffa9b
    1cd4:	6c656946 			; <UNDEFINED> instruction: 0x6c656946
    1cd8:	2e2e0064 	cdpcs	0, 2, cr0, cr14, cr4, {3}
    1cdc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1ce0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1ce4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1ce8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1cec:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1cf0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1cf8 <_Min_Heap_Size+0x14f8>
    1cf4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1cf8:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1cfc:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1d00:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1d04:	5f787834 	svcpl	0x00787834
    1d08:	5f6c6168 	svcpl	0x006c6168
    1d0c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1d10:	632e7865 			; <UNDEFINED> instruction: 0x632e7865
    1d14:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d18:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    1d1c:	4b434954 	blmi	10d4274 <_Min_Heap_Size+0x10d3a74>
    1d20:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    1d24:	00676966 	rsbeq	r6, r7, r6, ror #18
    1d28:	5f4c4148 	svcpl	0x004c4148
    1d2c:	54524f43 	ldrbpl	r4, [r2], #-3907	; 0xfffff0bd
    1d30:	435f5845 	cmpmi	pc, #4521984	; 0x450000
    1d34:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1d38:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1d3c:	41520074 	cmpmi	r2, r4, ror r0
    1d40:	415f5253 	cmpmi	pc, r3, asr r2	; <UNPREDICTABLE>
    1d44:	53490033 	movtpl	r0, #36915	; 0x9033
    1d48:	49005250 	stmdbmi	r0, {r4, r6, r9, ip, lr}
    1d4c:	66754273 			; <UNDEFINED> instruction: 0x66754273
    1d50:	61726566 	cmnvs	r2, r6, ror #10
    1d54:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1d58:	6f697250 	svcvs	0x00697250
    1d5c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1d60:	756f7247 	strbvc	r7, [pc, #-583]!	; 1b21 <_Min_Heap_Size+0x1321>
    1d64:	53490070 	movtpl	r0, #36976	; 0x9070
    1d68:	48005241 	stmdami	r0, {r0, r6, r9, ip, lr}
    1d6c:	535f4c41 	cmppl	pc, #16640	; 0x4100
    1d70:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
    1d74:	495f4b43 	ldmdbmi	pc, {r0, r1, r6, r8, r9, fp, lr}^	; <UNPREDICTABLE>
    1d78:	61485152 	cmpvs	r8, r2, asr r1
    1d7c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1d80:	41480072 	hvcmi	32770	; 0x8002
    1d84:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1d88:	435f4349 	cmpmi	pc, #603979777	; 0x24000001
    1d8c:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1d90:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1d94:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1d98:	48005152 	stmdami	r0, {r1, r4, r6, r8, ip, lr}
    1d9c:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 1ca0 <_Min_Heap_Size+0x14a0>
    1da0:	445f5550 	ldrbmi	r5, [pc], #-1360	; 1da8 <_Min_Heap_Size+0x15a8>
    1da4:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    1da8:	5200656c 	andpl	r6, r0, #108, 10	; 0x1b000000
    1dac:	5f525341 	svcpl	0x00525341
    1db0:	4d003141 	stfmis	f3, [r0, #-260]	; 0xfffffefc
    1db4:	435f5550 	cmpmi	pc, #80, 10	; 0x14000000
    1db8:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1dbc:	48006c6f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}
    1dc0:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1dc4:	5f434956 	svcpl	0x00434956
    1dc8:	50746547 	rsbspl	r6, r4, r7, asr #10
    1dcc:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1dd0:	00797469 	rsbseq	r7, r9, r9, ror #8
    1dd4:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1dd8:	435f4349 	cmpmi	pc, #603979777	; 0x24000001
    1ddc:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1de0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1de4:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1de8:	5f005152 	svcpl	0x00005152
    1dec:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1df0:	79535f43 	ldmdbvc	r3, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1df4:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1df8:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1dfc:	42520074 	subsmi	r0, r2, #116	; 0x74
    1e00:	415f5241 	cmpmi	pc, r1, asr #4
    1e04:	42520031 	subsmi	r0, r2, #49	; 0x31
    1e08:	415f5241 	cmpmi	pc, r1, asr #4
    1e0c:	42520032 	subsmi	r0, r2, #50	; 0x32
    1e10:	415f5241 	cmpmi	pc, r1, asr #4
    1e14:	504d0033 	subpl	r0, sp, r3, lsr r0
    1e18:	6e495f55 	mcrvs	15, 2, r5, cr9, cr5, {2}
    1e1c:	50007469 	andpl	r7, r0, r9, ror #8
    1e20:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    1e24:	72507470 	subsvc	r7, r0, #112, 8	; 0x70000000
    1e28:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1e2c:	69427974 	stmdbvs	r2, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    1e30:	52007374 	andpl	r7, r0, #116, 6	; 0xd0000001
    1e34:	5f525341 	svcpl	0x00525341
    1e38:	4d003241 	sfmmi	f3, 4, [r0, #-260]	; 0xfffffefc
    1e3c:	525f5550 	subspl	r5, pc, #80, 10	; 0x14000000
    1e40:	6f696765 	svcvs	0x00696765
    1e44:	6e495f6e 	cdpvs	15, 4, cr5, cr9, cr14, {3}
    1e48:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1e4c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1e50:	73490066 	movtvc	r0, #36966	; 0x9066
    1e54:	68636143 	stmdavs	r3!, {r0, r1, r6, r8, sp, lr}^
    1e58:	6c626165 	stfvse	f6, [r2], #-404	; 0xfffffe6c
    1e5c:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
    1e60:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    1e64:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1e68:	5f006570 	svcpl	0x00006570
    1e6c:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1e70:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1e74:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1e78:	51524965 	cmppl	r2, r5, ror #18
    1e7c:	53464100 	movtpl	r4, #24832	; 0x6100
    1e80:	43530052 	cmpmi	r3, #82	; 0x52
    1e84:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
    1e88:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    1e8c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1e90:	5f434956 	svcpl	0x00434956
    1e94:	50746547 	rsbspl	r6, r4, r7, asr #10
    1e98:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1e9c:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    1ea0:	41480051 	qdaddmi	r0, r1, r8
    1ea4:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1ea8:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    1eac:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1eb0:	7365526d 	cmnvc	r5, #-805306362	; 0xd0000006
    1eb4:	72007465 	andvc	r7, r0, #1694498816	; 0x65000000
    1eb8:	765f6765 	ldrbvc	r6, [pc], -r5, ror #14
    1ebc:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1ec0:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
    1ec4:	70004249 	andvc	r4, r0, r9, asr #4
    1ec8:	65657250 	strbvs	r7, [r5, #-592]!	; 0xfffffdb0
    1ecc:	5074706d 	rsbspl	r7, r4, sp, rrx
    1ed0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1ed4:	00797469 	rsbseq	r7, r9, r9, ror #8
    1ed8:	524f5456 	subpl	r5, pc, #1442840576	; 0x56000000
    1edc:	63634100 	cmnvs	r3, #0, 2
    1ee0:	50737365 	rsbspl	r7, r3, r5, ror #6
    1ee4:	696d7265 	stmdbvs	sp!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1ee8:	6f697373 	svcvs	0x00697373
    1eec:	4349006e 	movtmi	r0, #36974	; 0x906e
    1ef0:	41005253 	tstmi	r0, r3, asr r2
    1ef4:	52435249 	subpl	r5, r3, #-1879048188	; 0x90000004
    1ef8:	53464400 	movtpl	r4, #25600	; 0x6400
    1efc:	4d4d0052 	stclmi	0, cr0, [sp, #-328]	; 0xfffffeb8
    1f00:	00524146 	subseq	r4, r2, r6, asr #2
    1f04:	6f697270 	svcvs	0x00697270
    1f08:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1f0c:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
    1f10:	5f5f0052 	svcpl	0x005f0052
    1f14:	33746e69 	cmncc	r4, #1680	; 0x690
    1f18:	00745f32 	rsbseq	r5, r4, r2, lsr pc
    1f1c:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1f20:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    1f24:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    1f28:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f2c:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    1f30:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    1f34:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    1f38:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1f3c:	5f434956 	svcpl	0x00434956
    1f40:	41746547 	cmnmi	r4, r7, asr #10
    1f44:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    1f48:	5f5f0065 	svcpl	0x005f0065
    1f4c:	00425344 	subeq	r5, r2, r4, asr #6
    1f50:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1f54:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1f58:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    1f5c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f60:	70007974 	andvc	r7, r0, r4, ror r9
    1f64:	50627553 	rsbpl	r7, r2, r3, asr r5
    1f68:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1f6c:	00797469 	rsbseq	r7, r9, r9, ror #8
    1f70:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    1f74:	70007265 	andvc	r7, r0, r5, ror #4
    1f78:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1f7c:	67797469 	ldrbvs	r7, [r9, -r9, ror #8]!
    1f80:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    1f84:	414f4c00 	cmpmi	pc, r0, lsl #24
    1f88:	69740044 	ldmdbvs	r4!, {r2, r6}^
    1f8c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    1f90:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
    1f94:	42414900 	submi	r4, r1, #0, 18
    1f98:	5f5f0052 	svcpl	0x005f0052
    1f9c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1fa0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1fa4:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1fa8:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1fac:	5f005152 	svcpl	0x00005152
    1fb0:	4253495f 	subsmi	r4, r3, #1556480	; 0x17c000
    1fb4:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    1fb8:	6e455f43 	cdpvs	15, 4, cr5, cr5, cr3, {2}
    1fbc:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    1fc0:	6f697250 	svcvs	0x00697250
    1fc4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1fc8:	45434900 	strbmi	r4, [r3, #-2304]	; 0xfffff700
    1fcc:	75530052 	ldrbvc	r0, [r3, #-82]	; 0xffffffae
    1fd0:	69725062 	ldmdbvs	r2!, {r1, r5, r6, ip, lr}^
    1fd4:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1fd8:	74694279 	strbtvc	r4, [r9], #-633	; 0xfffffd87
    1fdc:	564e0073 			; <UNDEFINED> instruction: 0x564e0073
    1fe0:	445f4349 	ldrbmi	r4, [pc], #-841	; 1fe8 <_Min_Heap_Size+0x17e8>
    1fe4:	646f6365 	strbtvs	r6, [pc], #-869	; 1fec <_Min_Heap_Size+0x17ec>
    1fe8:	69725065 	ldmdbvs	r2!, {r0, r2, r5, r6, ip, lr}^
    1fec:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1ff0:	41480079 	hvcmi	32777	; 0x8009
    1ff4:	59535f4c 	ldmdbpl	r3, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1ff8:	43495453 	movtmi	r5, #37971	; 0x9453
    1ffc:	61435f4b 	cmpvs	r3, fp, asr #30
    2000:	61626c6c 	cmnvs	r2, ip, ror #24
    2004:	43006b63 	movwmi	r6, #2915	; 0xb63
    2008:	44495550 	strbmi	r5, [r9], #-1360	; 0xfffffab0
    200c:	73694400 	cmnvc	r9, #0, 8
    2010:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2014:	63657845 	cmnvs	r5, #4521984	; 0x450000
    2018:	41464200 	mrsmi	r4, (UNDEF: 102)
    201c:	48530052 	ldmdami	r3, {r1, r4, r6}^
    2020:	00525343 	subseq	r5, r2, r3, asr #6
    2024:	4d445f5f 	stclmi	15, cr5, [r4, #-380]	; 0xfffffe84
    2028:	75530042 	ldrbvc	r0, [r3, #-66]	; 0xffffffbe
    202c:	67655262 	strbvs	r5, [r5, -r2, ror #4]!
    2030:	446e6f69 	strbtmi	r6, [lr], #-3945	; 0xfffff097
    2034:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    2038:	4900656c 	stmdbmi	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    203c:	00524553 	subseq	r4, r2, r3, asr r5
    2040:	4349564e 	movtmi	r5, #38478	; 0x964e
    2044:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    2048:	41480065 	cmpmi	r8, r5, rrx
    204c:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    2050:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2054:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2058:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    205c:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    2060:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2064:	5f00676e 	svcpl	0x0000676e
    2068:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    206c:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    2070:	6e655074 	mcrvs	0, 3, r5, cr5, cr4, {3}
    2074:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    2078:	00515249 	subseq	r5, r1, r9, asr #4
    207c:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2080:	455f4349 	ldrbmi	r4, [pc, #-841]	; 1d3f <_Min_Heap_Size+0x153f>
    2084:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2088:	51524965 	cmppl	r2, r5, ror #18
    208c:	41425200 	mrsmi	r5, (UNDEF: 98)
    2090:	72500052 	subsvc	r0, r0, #82	; 0x52
    2094:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2098:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    209c:	5470756f 	ldrbtpl	r7, [r0], #-1391	; 0xfffffa91
    20a0:	4900706d 	stmdbmi	r0, {r0, r2, r3, r5, r6, ip, sp, lr}
    20a4:	5f6e5152 	svcpl	0x006e5152
    20a8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    20ac:	63695400 	cmnvs	r9, #0, 8
    20b0:	754e736b 	strbvc	r7, [lr, #-875]	; 0xfffffc95
    20b4:	5200626d 	andpl	r6, r0, #-805306362	; 0xd0000006
    20b8:	00525341 	subseq	r5, r2, r1, asr #6
    20bc:	5f4c4148 	svcpl	0x004c4148
    20c0:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    20c4:	5f4b4349 	svcpl	0x004b4349
    20c8:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    20cc:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    20d0:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
    20d4:	00676966 	rsbeq	r6, r7, r6, ror #18
    20d8:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    20dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    20e0:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xfffff2a1
    20e4:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    20e8:	52676966 	rsbpl	r6, r7, #1671168	; 0x198000
    20ec:	6f696765 	svcvs	0x00696765
    20f0:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
    20f4:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    20f8:	6f435f6b 	svcvs	0x00435f6b
    20fc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2100:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2104:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    2108:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    210c:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    2110:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2114:	6f724779 	svcvs	0x00724779
    2118:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
    211c:	41480067 	cmpmi	r8, r7, rrx
    2120:	504d5f4c 	subpl	r5, sp, ip, asr #30
    2124:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    2128:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    212c:	52544300 	subspl	r4, r4, #0, 6
    2130:	5f5f004c 	svcpl	0x005f004c
    2134:	4349564e 	movtmi	r5, #38478	; 0x964e
    2138:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    213c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    2140:	5f006576 	svcpl	0x00006576
    2144:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    2148:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    214c:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    2150:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2154:	6f724779 	svcvs	0x00724779
    2158:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
    215c:	54530067 	ldrbpl	r0, [r3], #-103	; 0xffffff99
    2160:	49005249 	stmdbmi	r0, {r0, r3, r6, r9, ip, lr}
    2164:	61685373 	smcvs	34099	; 0x8533
    2168:	62616572 	rsbvs	r6, r1, #478150656	; 0x1c800000
    216c:	5f00656c 	svcpl	0x0000656c
    2170:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    2174:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    2178:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    217c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2180:	41480079 	hvcmi	32777	; 0x8009
    2184:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    2188:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    218c:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2190:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    2194:	51524967 	cmppl	r2, r7, ror #18
    2198:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
    219c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    21a0:	50430065 	subpl	r0, r3, r5, rrx
    21a4:	00524341 	subseq	r4, r2, r1, asr #6
    21a8:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
    21ac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    21b0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    21b4:	566c6148 	strbtpl	r6, [ip], -r8, asr #2
    21b8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    21bc:	48006e6f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
    21c0:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 21c8 <_Min_Heap_Size+0x19c8>
    21c4:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    21c8:	54716572 	ldrbtpl	r6, [r1], #-1394	; 0xfffffa8e
    21cc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    21d0:	54006665 	strpl	r6, [r0], #-1637	; 0xfffff99b
    21d4:	506b6369 	rsbpl	r6, fp, r9, ror #6
    21d8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    21dc:	00797469 	rsbseq	r7, r9, r9, ror #8
    21e0:	5f4c4148 	svcpl	0x004c4148
    21e4:	54746553 	ldrbtpl	r6, [r4], #-1363	; 0xfffffaad
    21e8:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    21ec:	00716572 	rsbseq	r6, r1, r2, ror r5
    21f0:	4f434449 	svcmi	0x00434449
    21f4:	48004544 	stmdami	r0, {r2, r6, r8, sl, lr}
    21f8:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    21fc:	49557465 	ldmdbmi	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2200:	00327744 	eorseq	r7, r2, r4, asr #14
    2204:	5f4c4148 	svcpl	0x004c4148
    2208:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    220c:	455f5543 	ldrbmi	r5, [pc, #-1347]	; 1cd1 <_Min_Heap_Size+0x14d1>
    2210:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2214:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2218:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    221c:	4d796264 	lfmmi	f6, 2, [r9, #-400]!	; 0xfffffe70
    2220:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2224:	5f4c4148 	svcpl	0x004c4148
    2228:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    222c:	506b6369 	rsbpl	r6, fp, r9, ror #6
    2230:	006f6972 	rsbeq	r6, pc, r2, ror r9	; <UNPREDICTABLE>
    2234:	5f4c4148 	svcpl	0x004c4148
    2238:	4b434954 	blmi	10d4790 <_Min_Heap_Size+0x10d3f90>
    223c:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
    2240:	30315f51 	eorscc	r5, r1, r1, asr pc
    2244:	48005a48 	stmdami	r0, {r3, r6, r9, fp, ip, lr}
    2248:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 214c <_Min_Heap_Size+0x194c>
    224c:	65447073 	strbvs	r7, [r4, #-115]	; 0xffffff8d
    2250:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2254:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2258:	4742445f 	smlsldmi	r4, r2, pc, r4	; <UNPREDICTABLE>
    225c:	5f55434d 	svcpl	0x0055434d
    2260:	61736944 	cmnvs	r3, r4, asr #18
    2264:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    2268:	6c534742 	mrrcvs	7, 4, r4, r3, cr2
    226c:	4d706565 	cfldr64mi	mvdx6, [r0, #-404]!	; 0xfffffe6c
    2270:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2274:	5f4c4148 	svcpl	0x004c4148
    2278:	4b434954 	blmi	10d47d0 <_Min_Heap_Size+0x10d3fd0>
    227c:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
    2280:	30315f51 	eorscc	r5, r1, r1, asr pc
    2284:	005a4830 	subseq	r4, sl, r0, lsr r8
    2288:	5f4c4148 	svcpl	0x004c4148
    228c:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    2290:	445f5543 	ldrbmi	r5, [pc], #-1347	; 2298 <_Min_Heap_Size+0x1a98>
    2294:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    2298:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    229c:	6f745347 	svcvs	0x00745347
    22a0:	646f4d70 	strbtvs	r4, [pc], #-3440	; 22a8 <_Min_Heap_Size+0x1aa8>
    22a4:	41480065 	cmpmi	r8, r5, rrx
    22a8:	65445f4c 	strbvs	r5, [r4, #-3916]	; 0xfffff0b4
    22ac:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    22b0:	54777500 	ldrbtpl	r7, [r7], #-1280	; 0xfffffb00
    22b4:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    22b8:	00716572 	rsbseq	r6, r1, r2, ror r5
    22bc:	69547775 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    22c0:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    22c4:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 22cc <_Min_Heap_Size+0x1acc>
    22c8:	5f4b4349 	svcpl	0x004b4349
    22cc:	51455246 	cmppl	r5, r6, asr #4
    22d0:	484b315f 	stmdami	fp, {r0, r1, r2, r3, r4, r6, r8, ip, sp}^
    22d4:	4148005a 	qdaddmi	r0, sl, r8
    22d8:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    22dc:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    22e0:	616e455f 	cmnvs	lr, pc, asr r5
    22e4:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    22e8:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    22ec:	6f4d706f 	svcvs	0x004d706f
    22f0:	41006564 	tstmi	r0, r4, ror #10
    22f4:	46324250 			; <UNDEFINED> instruction: 0x46324250
    22f8:	4148005a 	qdaddmi	r0, sl, r8
    22fc:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    2300:	44495574 	strbmi	r5, [r9], #-1396	; 0xfffffa8c
    2304:	48003077 	stmdami	r0, {r0, r1, r2, r4, r5, r6, ip, sp}
    2308:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    230c:	49557465 	ldmdbmi	r5, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2310:	00317744 	eorseq	r7, r1, r4, asr #14
    2314:	5f4c4148 	svcpl	0x004c4148
    2318:	4b434954 	blmi	10d4870 <_Min_Heap_Size+0x10d4070>
    231c:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
    2320:	45445f51 	strbmi	r5, [r4, #-3921]	; 0xfffff0af
    2324:	4c554146 	ldfmie	f4, [r5], {70}	; 0x46
    2328:	41480054 	qdaddmi	r0, r4, r8
    232c:	65525f4c 	ldrbvs	r5, [r2, #-3916]	; 0xfffff0b4
    2330:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    2334:	6b636954 	blvs	18dc88c <_Min_Heap_Size+0x18dc08c>
    2338:	42504100 	subsmi	r4, r0, #0, 2
    233c:	005a4631 	subseq	r4, sl, r1, lsr r6
    2340:	5f4c4148 	svcpl	0x004c4148
    2344:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    2348:	445f5543 	ldrbmi	r5, [pc], #-1347	; 2350 <_Min_Heap_Size+0x1b50>
    234c:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    2350:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    2354:	61745347 	cmnvs	r4, r7, asr #6
    2358:	7962646e 	stmdbvc	r2!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    235c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2360:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2364:	7375535f 	cmnvc	r5, #2080374785	; 0x7c000001
    2368:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    236c:	6b636954 	blvs	18dc8c4 <_Min_Heap_Size+0x18dc0c4>
    2370:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2374:	4742445f 	smlsldmi	r4, r2, pc, r4	; <UNPREDICTABLE>
    2378:	5f55434d 	svcpl	0x0055434d
    237c:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    2380:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    2384:	656c5347 	strbvs	r5, [ip, #-839]!	; 0xfffffcb9
    2388:	6f4d7065 	svcvs	0x004d7065
    238c:	44006564 	strmi	r6, [r0], #-1380	; 0xfffffa9c
    2390:	434d4742 	movtmi	r4, #55106	; 0xd742
    2394:	79545f55 	ldmdbvc	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    2398:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    239c:	41480066 	cmpmi	r8, r6, rrx
    23a0:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    23a4:	56455274 			; <UNDEFINED> instruction: 0x56455274
    23a8:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    23ac:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    23b0:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    23b4:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    23b8:	70007165 	andvc	r7, r0, r5, ror #2
    23bc:	54766572 	ldrbtpl	r6, [r6], #-1394	; 0xfffffa8e
    23c0:	466b6369 	strbtmi	r6, [fp], -r9, ror #6
    23c4:	00716572 	rsbseq	r6, r1, r2, ror r5
    23c8:	5f4c4148 	svcpl	0x004c4148
    23cc:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    23d0:	6f43656c 	svcvs	0x0043656c
    23d4:	6e65706d 	cdpvs	0, 6, cr7, cr5, cr13, {3}
    23d8:	69746173 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, sp, lr}^
    23dc:	65436e6f 	strbvs	r6, [r3, #-3695]	; 0xfffff191
    23e0:	2e006c6c 	cdpcs	12, 0, cr6, cr0, cr12, {3}
    23e4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    23e8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    23ec:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    23f0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    23f4:	5f787834 	svcpl	0x00787834
    23f8:	5f4c4148 	svcpl	0x004c4148
    23fc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2400:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    2404:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    2408:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    240c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    2410:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    2414:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    2418:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2420 <_Min_Heap_Size+0x1c20>
    241c:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    2420:	6f43656c 	svcvs	0x0043656c
    2424:	6e65706d 	cdpvs	0, 6, cr7, cr5, cr13, {3}
    2428:	69746173 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, sp, lr}^
    242c:	65436e6f 	strbvs	r6, [r3, #-3695]	; 0xfffff191
    2430:	48006c6c 	stmdami	r0, {r2, r3, r5, r6, sl, fp, sp, lr}
    2434:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    2438:	45447465 	strbmi	r7, [r4, #-1125]	; 0xfffffb9b
    243c:	00444956 	subeq	r4, r4, r6, asr r9
    2440:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    2444:	2f65726f 	svccs	0x0065726f
    2448:	2f637253 	svccs	0x00637253
    244c:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    2450:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    2454:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2458:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    245c:	7000632e 	andvc	r6, r0, lr, lsr #6
    2460:	6f736c6c 	svcvs	0x00736c6c
    2464:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    2468:	73795300 	cmnvc	r9, #0, 6
    246c:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2470:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2474:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    2478:	6f436d65 	svcvs	0x00436d65
    247c:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
    2480:	556b636f 	strbpl	r6, [fp, #-879]!	; 0xfffffc91
    2484:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
    2488:	61660065 	cmnvs	r6, r5, rrx
    248c:	5f746c75 	svcpl	0x00746c75
    2490:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2494:	7073705f 	rsbsvc	r7, r3, pc, asr r0
    2498:	6174735f 	cmnvs	r4, pc, asr r3
    249c:	705f6b63 	subsvc	r6, pc, r3, ror #22
    24a0:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
    24a4:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
    24a8:	5f6b6361 	svcpl	0x006b6361
    24ac:	6e697375 	mcrvs	3, 3, r7, cr9, cr5, {3}
    24b0:	736d5f67 	cmnvc	sp, #412	; 0x19c
    24b4:	61660070 	smcvs	24576	; 0x6000
    24b8:	5f746c75 	svcpl	0x00746c75
    24bc:	706d7564 	rsbvc	r7, sp, r4, ror #10
    24c0:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    24c4:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    24c8:	006e7275 	rsbeq	r7, lr, r5, ror r2
    24cc:	6f63706f 	svcvs	0x0063706f
    24d0:	695f6564 	ldmdbvs	pc, {r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    24d4:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    24d8:	5f726f5f 	svcpl	0x00726f5f
    24dc:	00786c62 	rsbseq	r6, r8, r2, ror #24
    24e0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    24e4:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    24e8:	5f656d61 	svcpl	0x00656d61
    24ec:	735f0074 	cmpvc	pc, #116	; 0x74
    24f0:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    24f4:	5f646600 	svcpl	0x00646600
    24f8:	6e69616d 	powvsez	f6, f1, #5.0
    24fc:	6174735f 	cmnvs	r4, pc, asr r3
    2500:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2504:	006c6c75 	rsbeq	r6, ip, r5, ror ip
    2508:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
    250c:	61660078 	smcvs	24584	; 0x6008
    2510:	5f746c75 	svcpl	0x00746c75
    2514:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2518:	5f6d625f 	svcpl	0x006d625f
    251c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2520:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
    2524:	00747261 	rsbseq	r7, r4, r1, ror #4
    2528:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
    252c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2530:	7473735f 	ldrbtvc	r7, [r3], #-863	; 0xfffffca1
    2534:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2538:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    253c:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2540:	625f706d 	subsvs	r7, pc, #109	; 0x6d
    2544:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    2548:	5f6b6361 	svcpl	0x006b6361
    254c:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
    2550:	61660074 	smcvs	24580	; 0x6004
    2554:	5f746c75 	svcpl	0x00746c75
    2558:	706d7564 	rsbvc	r7, sp, r4, ror #10
    255c:	63706f5f 	cmnvs	r0, #380	; 0x17c
    2560:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2564:	6d5f6466 	cfldrdvs	mvd6, [pc, #-408]	; 23d4 <_Min_Heap_Size+0x1bd4>
    2568:	5f6e6961 	svcpl	0x006e6961
    256c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2570:	61625f6b 	cmnvs	r2, fp, ror #30
    2574:	66006573 			; <UNDEFINED> instruction: 0x66006573
    2578:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    257c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    2580:	61635f70 	smcvs	13808	; 0x35f0
    2584:	74736c6c 	ldrbtvc	r6, [r3], #-3180	; 0xfffff394
    2588:	006b6361 	rsbeq	r6, fp, r1, ror #6
    258c:	6b6e696c 	blvs	1b9cb44 <_Min_Heap_Size+0x1b9c344>
    2590:	73007265 	movwvc	r7, #613	; 0x265
    2594:	6b636174 	blvs	18dab6c <_Min_Heap_Size+0x18da36c>
    2598:	6172665f 	cmnvs	r2, pc, asr r6
    259c:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 23f0 <_Min_Heap_Size+0x1bf0>
    25a0:	61756e61 	cmnvs	r5, r1, ror #28
    25a4:	00745f6c 	rsbseq	r5, r4, ip, ror #30
    25a8:	6f63706f 	svcvs	0x0063706f
    25ac:	00316564 	eorseq	r6, r1, r4, ror #10
    25b0:	6f63706f 	svcvs	0x0063706f
    25b4:	00326564 	eorseq	r6, r2, r4, ror #10
    25b8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    25bc:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    25c0:	5f656d61 	svcpl	0x00656d61
    25c4:	756e616d 	strbvc	r6, [lr, #-365]!	; 0xfffffe93
    25c8:	66006c61 	strvs	r6, [r0], -r1, ror #24
    25cc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    25d0:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    25d4:	65745f70 	ldrbvs	r5, [r4, #-3952]!	; 0xfffff090
    25d8:	655f7478 	ldrbvs	r7, [pc, #-1144]	; 2168 <_Min_Heap_Size+0x1968>
    25dc:	0073646e 	rsbseq	r6, r3, lr, ror #8
    25e0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    25e4:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    25e8:	00656d61 	rsbeq	r6, r5, r1, ror #26
    25ec:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    25f0:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    25f4:	5f656d61 	svcpl	0x00656d61
    25f8:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    25fc:	745f7470 	ldrbvc	r7, [pc], #-1136	; 2604 <_Min_Heap_Size+0x1e04>
    2600:	5f646600 	svcpl	0x00646600
    2604:	5f707370 	svcpl	0x00707370
    2608:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    260c:	61705f6b 	cmnvs	r0, fp, ror #30
    2610:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
    2614:	5f646600 	svcpl	0x00646600
    2618:	5f70736d 	svcpl	0x0070736d
    261c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2620:	61705f6b 	cmnvs	r0, fp, ror #30
    2624:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
    2628:	6f425f00 	svcvs	0x00425f00
    262c:	2e006c6f 	cdpcs	12, 0, cr6, cr0, cr15, {3}
    2630:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2634:	2f2e2e2f 	svccs	0x002e2e2f
    2638:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    263c:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2640:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2644:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2648:	2f706d75 	svccs	0x00706d75
    264c:	2f637273 	svccs	0x00637273
    2650:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2654:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    2658:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
    265c:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
    2660:	00726566 	rsbseq	r6, r2, r6, ror #10
    2664:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2668:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    266c:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    2670:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2674:	66007265 	strvs	r7, [r0], -r5, ror #4
    2678:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    267c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    2680:	73755f70 	cmnvc	r5, #112, 30	; 0x1c0
    2684:	5f676e69 	svcpl	0x00676e69
    2688:	0070736d 	rsbseq	r7, r0, sp, ror #6
    268c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2690:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2694:	745f706d 	ldrbvc	r7, [pc], #-109	; 269c <_Min_Heap_Size+0x1e9c>
    2698:	5f747865 	svcpl	0x00747865
    269c:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    26a0:	61747300 	cmnvs	r4, r0, lsl #6
    26a4:	705f6b63 	subsvc	r6, pc, r3, ror #22
    26a8:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
    26ac:	00745f72 	rsbseq	r5, r4, r2, ror pc
    26b0:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
    26b4:	534d5f74 	movtpl	r5, #57204	; 0xdf74
    26b8:	74730050 	ldrbtvc	r0, [r3], #-80	; 0xffffffb0
    26bc:	5f6b6361 	svcpl	0x006b6361
    26c0:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    26c4:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    26c8:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    26cc:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
    26d0:	00747865 	rsbseq	r7, r4, r5, ror #16
    26d4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    26d8:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    26dc:	645f706d 	ldrbvs	r7, [pc], #-109	; 26e4 <_Min_Heap_Size+0x1ee4>
    26e0:	7a5f7669 	bvc	17e008c <_Min_Heap_Size+0x17df88c>
    26e4:	006f7265 	rsbeq	r7, pc, r5, ror #4
    26e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    26ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    26f0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    26f4:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    26f8:	61662f73 	smcvs	25331	; 0x62f3
    26fc:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2700:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2704:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    2708:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    270c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    2710:	662f346d 	strtvs	r3, [pc], -sp, ror #8
    2714:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2718:	6c61682d 	stclvs	8, cr6, [r1], #-180	; 0xffffff4c
    271c:	7000632e 	andvc	r6, r0, lr, lsr #6
    2720:	5f766572 	svcpl	0x00766572
    2724:	70616568 	rsbvc	r6, r1, r8, ror #10
    2728:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    272c:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
    2730:	6165685f 	cmnvs	r5, pc, asr r8
    2734:	74700070 	ldrbtvc	r0, [r0], #-112	; 0xffffff90
    2738:	66696472 			; <UNDEFINED> instruction: 0x66696472
    273c:	00745f66 	rsbseq	r5, r4, r6, ror #30
    2740:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
    2744:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    2748:	6f697461 	svcvs	0x00697461
    274c:	79732f6e 	ldmdbvc	r3!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    2750:	6d656d73 	stclvs	13, cr6, [r5, #-460]!	; 0xfffffe34
    2754:	5f00632e 	svcpl	0x0000632e
    2758:	5f6e694d 	svcpl	0x006e694d
    275c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    2760:	69535f6b 	ldmdbvs	r3, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2764:	6900657a 	stmdbvs	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    2768:	0072636e 	rsbseq	r6, r2, lr, ror #6
    276c:	62735f5f 	rsbsvs	r5, r3, #380	; 0x17c
    2770:	685f6b72 	ldmdavs	pc, {r1, r4, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    2774:	5f706165 	svcpl	0x00706165
    2778:	00646e65 	rsbeq	r6, r4, r5, ror #28
    277c:	72655f5f 	rsbvc	r5, r5, #380	; 0x17c
    2780:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
    2784:	7262735f 	rsbvc	r7, r2, #2080374785	; 0x7c000001
    2788:	7473006b 	ldrbtvc	r0, [r3], #-107	; 0xffffff95
    278c:	5f6b6361 	svcpl	0x006b6361
    2790:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    2794:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
    2798:	6564725f 	strbvs	r7, [r4, #-607]!	; 0xfffffda1
    279c:	6c630076 	stclvs	0, cr0, [r3], #-472	; 0xfffffe28
    27a0:	5f6b636f 	svcpl	0x006b636f
    27a4:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
    27a8:	6f726976 	svcvs	0x00726976
    27ac:	6c5f006e 	mrrcvs	0, 6, r0, pc, cr14	; <UNPREDICTABLE>
    27b0:	6b656573 	blvs	195bd84 <_Min_Heap_Size+0x195b584>
    27b4:	736d7400 	cmnvc	sp, #0, 8
    27b8:	7475635f 	ldrbtvc	r6, [r5], #-863	; 0xfffffca1
    27bc:	00656d69 	rsbeq	r6, r5, r9, ror #26
    27c0:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
    27c4:	00657663 	rsbeq	r7, r5, r3, ror #12
    27c8:	735f7674 	cmpvc	pc, #116, 12	; 0x7400000
    27cc:	5f006365 	svcpl	0x00006365
    27d0:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    27d4:	5f747300 	svcpl	0x00747300
    27d8:	6d697463 	cfstrdvs	mvd7, [r9, #-396]!	; 0xfffffe74
    27dc:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; 18e4 <_Min_Heap_Size+0x10e4>
    27e0:	5f00766e 	svcpl	0x0000766e
    27e4:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
    27e8:	72775f00 	rsbsvc	r5, r7, #0, 30
    27ec:	00657469 	rsbeq	r7, r5, r9, ror #8
    27f0:	645f7473 	ldrbvs	r7, [pc], #-1139	; 27f8 <_Min_Heap_Size+0x1ff8>
    27f4:	5f007665 	svcpl	0x00007665
    27f8:	61747366 	cmnvs	r4, r6, ror #6
    27fc:	6b5f0074 	blvs	17c29d4 <_Min_Heap_Size+0x17c21d4>
    2800:	006c6c69 	rsbeq	r6, ip, r9, ror #24
    2804:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2808:	5f00745f 	svcpl	0x0000745f
    280c:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    2810:	61656c5f 	cmnvs	r5, pc, asr ip
    2814:	34367473 	ldrtcc	r7, [r6], #-1139	; 0xfffffb8d
    2818:	7300745f 	movwvc	r7, #1119	; 0x45f
    281c:	6c625f74 	stclvs	15, cr5, [r2], #-464	; 0xfffffe30
    2820:	7a69736b 	bvc	1a5f5d4 <_Min_Heap_Size+0x1a5edd4>
    2824:	6e690065 	cdpvs	0, 6, cr0, cr9, cr5, {3}
    2828:	61697469 	cmnvs	r9, r9, ror #8
    282c:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    2830:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
    2834:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    2838:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    283c:	73656c64 	cmnvc	r5, #100, 24	; 0x6400
    2840:	5f747300 	svcpl	0x00747300
    2844:	00646967 	rsbeq	r6, r4, r7, ror #18
    2848:	6f6d5f5f 	svcvs	0x006d5f5f
    284c:	745f6564 	ldrbvc	r6, [pc], #-1380	; 2854 <_Min_Heap_Size+0x2054>
    2850:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
    2854:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    2858:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    285c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2860:	61637379 	smcvs	14137	; 0x3739
    2864:	2e736c6c 	cdpcs	12, 7, cr6, cr3, cr12, {3}
    2868:	6d740063 	ldclvs	0, cr0, [r4, #-396]!	; 0xfffffe74
    286c:	73635f73 	cmnvc	r3, #460	; 0x1cc
    2870:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2874:	69745f00 	ldmdbvs	r4!, {r8, r9, sl, fp, ip, lr}^
    2878:	0073656d 	rsbseq	r6, r3, sp, ror #10
    287c:	6c6e5f5f 	stclvs	15, cr5, [lr], #-380	; 0xfffffe84
    2880:	5f6b6e69 	svcpl	0x006b6e69
    2884:	616e0074 	smcvs	57348	; 0xe004
    2888:	5f00656d 	svcpl	0x0000656d
    288c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    2890:	5f747300 	svcpl	0x00747300
    2894:	006f6e69 	rsbeq	r6, pc, r9, ror #28
    2898:	6165725f 	cmnvs	r5, pc, asr r2
    289c:	5f5f0064 	svcpl	0x005f0064
    28a0:	675f6f69 	ldrbvs	r6, [pc, -r9, ror #30]
    28a4:	68637465 	stmdavs	r3!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    28a8:	74007261 	strvc	r7, [r0], #-609	; 0xfffffd9f
    28ac:	736e5f76 	cmnvc	lr, #472	; 0x1d8
    28b0:	73006365 	movwvc	r6, #869	; 0x365
    28b4:	6c6e5f74 	stclvs	15, cr5, [lr], #-464	; 0xfffffe30
    28b8:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    28bc:	65706f5f 	ldrbvs	r6, [r0, #-3935]!	; 0xfffff0a1
    28c0:	7261006e 	rsbvc	r0, r1, #110	; 0x6e
    28c4:	5f007667 	svcpl	0x00007667
    28c8:	6b6c625f 	blvs	1b1b24c <_Min_Heap_Size+0x1b1aa4c>
    28cc:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    28d0:	7300745f 	movwvc	r7, #1119	; 0x45f
    28d4:	74615f74 	strbtvc	r5, [r1], #-3956	; 0xfffff08c
    28d8:	5f006d69 	svcpl	0x00006d69
    28dc:	6b6e696c 	blvs	1b9ce94 <_Min_Heap_Size+0x1b9c694>
    28e0:	6c635f00 	stclvs	15, cr5, [r3], #-0
    28e4:	0065736f 	rsbeq	r7, r5, pc, ror #6
    28e8:	625f7473 	subsvs	r7, pc, #1929379840	; 0x73000000
    28ec:	6b636f6c 	blvs	18de6a4 <_Min_Heap_Size+0x18ddea4>
    28f0:	695f0073 	ldmdbvs	pc, {r0, r1, r4, r5, r6}^	; <UNPREDICTABLE>
    28f4:	74746173 	ldrbtvc	r6, [r4], #-371	; 0xfffffe8d
    28f8:	74730079 	ldrbtvc	r0, [r3], #-121	; 0xffffff87
    28fc:	69746d5f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    2900:	5f5f006d 	svcpl	0x005f006d
    2904:	5f6f6e69 	svcpl	0x006f6e69
    2908:	6d740074 	ldclvs	0, cr0, [r4, #-464]!	; 0xfffffe30
    290c:	74735f73 	ldrbtvc	r5, [r3], #-3955	; 0xfffff08d
    2910:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2914:	755f7473 	ldrbvc	r7, [pc, #-1139]	; 24a9 <_Min_Heap_Size+0x1ca9>
    2918:	73006469 	movwvc	r6, #1129	; 0x469
    291c:	69735f74 	ldmdbvs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2920:	7300657a 	movwvc	r6, #1402	; 0x57a
    2924:	70735f74 	rsbsvc	r5, r3, r4, ror pc
    2928:	34657261 	strbtcc	r7, [r5], #-609	; 0xfffffd9f
    292c:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    2930:	78644961 	stmdavc	r4!, {r0, r5, r6, r8, fp, lr}^
    2934:	6f665f00 	svcvs	0x00665f00
    2938:	5f006b72 	svcpl	0x00006b72
    293c:	70746567 	rsbsvc	r6, r4, r7, ror #10
    2940:	5f006469 	svcpl	0x00006469
    2944:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    2948:	5f00745f 	svcpl	0x0000745f
    294c:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    2950:	7000745f 	andvc	r7, r0, pc, asr r4
    2954:	00687461 	rsbeq	r7, r8, r1, ror #8
    2958:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    295c:	63657073 	cmnvs	r5, #115	; 0x73
    2960:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; 1a68 <_Min_Heap_Size+0x1268>
    2964:	745f6469 	ldrbvc	r6, [pc], #-1129	; 296c <_Min_Heap_Size+0x216c>
    2968:	5f747300 	svcpl	0x00747300
    296c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    2970:	736d7400 	cmnvc	sp, #0, 8
    2974:	6974755f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
    2978:	5f00656d 	svcpl	0x0000656d
    297c:	696c6e75 	stmdbvs	ip!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    2980:	5f006b6e 	svcpl	0x00006b6e
    2984:	6b6c625f 	blvs	1b1b308 <_Min_Heap_Size+0x1b1ab08>
    2988:	5f746e63 	svcpl	0x00746e63
    298c:	5f5f0074 	svcpl	0x005f0074
    2990:	5f646967 	svcpl	0x00646967
    2994:	2f2e0074 	svccs	0x002e0074
    2998:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    299c:	2f707574 	svccs	0x00707574
    29a0:	2f636367 	svccs	0x00636367
    29a4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    29a8:	5f707574 	svcpl	0x00707574
    29ac:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    29b0:	30346632 	eorscc	r6, r4, r2, lsr r6
    29b4:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    29b8:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
    29bc:	53412055 	movtpl	r2, #4181	; 0x1055
    29c0:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
    29c4:	00312e36 	eorseq	r2, r1, r6, lsr lr
    29c8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    29cc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    29d0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    29d4:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    29d8:	61662f73 	smcvs	25331	; 0x62f3
    29dc:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    29e0:	706d7564 	rsbvc	r7, sp, r4, ror #10
    29e4:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    29e8:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    29ec:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    29f0:	662f346d 	strtvs	r3, [pc], -sp, ror #8
    29f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    29f8:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    29fc:	Address 0x000029fc is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
{
   0:	3a434347 	bcc	10d0d24 <_Min_Heap_Size+0x10d0524>
  errno = ENOMEM;
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
}
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    if (status != HAL_OK)
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
      uwTickFreq = prevTickFreq;
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
{
       0:	0000000c 	andeq	r0, r0, ip
  errno = ENOMEM;
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000018 	andeq	r0, r0, r8, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
}
      28:	00040e4a 	andeq	r0, r4, sl, asr #28
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
      30:	00000000 	andeq	r0, r0, r0
    if (status != HAL_OK)
      34:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
      uwTickFreq = prevTickFreq;
      38:	00000018 	andeq	r0, r0, r8, lsl r0
      3c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      40:	00018e02 	andeq	r8, r1, r2, lsl #28
      44:	00000014 	andeq	r0, r0, r4, lsl r0
      if (pllsource != 0)
      48:	00000000 	andeq	r0, r0, r0
      4c:	080005fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00000018 	andeq	r0, r0, r8, lsl r0
      54:	83080e41 	movwhi	r0, #36417	; 0x8e41
      58:	00018e02 	andeq	r8, r1, r2, lsl #28
      5c:	00000014 	andeq	r0, r0, r4, lsl r0
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00000000 	andeq	r0, r0, r0
      64:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
      68:	00000018 	andeq	r0, r0, r8, lsl r0
      SystemCoreClock = pllvco/pllp;
      6c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      70:	00018e02 	andeq	r8, r1, r2, lsl #28
      break;
      74:	00000014 	andeq	r0, r0, r4, lsl r0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00000000 	andeq	r0, r0, r0
      7c:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
      80:	00000018 	andeq	r0, r0, r8, lsl r0
      84:	83080e41 	movwhi	r0, #36417	; 0x8e41
      88:	00018e02 	andeq	r8, r1, r2, lsl #28
      8c:	00000014 	andeq	r0, r0, r4, lsl r0
      90:	00000000 	andeq	r0, r0, r0
      94:	08000644 	stmdaeq	r0, {r2, r6, r9, sl}
      98:	00000018 	andeq	r0, r0, r8, lsl r0
      9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      a0:	00018e02 	andeq	r8, r1, r2, lsl #28
      a4:	00000014 	andeq	r0, r0, r4, lsl r0
      a8:	00000000 	andeq	r0, r0, r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
      b0:	00000018 	andeq	r0, r0, r8, lsl r0
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00018e02 	andeq	r8, r1, r2, lsl #28
      bc:	00000014 	andeq	r0, r0, r4, lsl r0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00000000 	andeq	r0, r0, r0
      c4:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
      c8:	0000002c 	andeq	r0, r0, ip, lsr #32
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
      d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
      e0:	000000a8 	andeq	r0, r0, r8, lsr #1
    if (huart->hdmarx != NULL)
      e4:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	580e4101 	stmdapl	lr, {r0, r8, lr}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0e0a4602 	cfmadd32eq	mvax0, mvfx4, mvfx10, mvfx2
      f0:	000b4204 	andeq	r4, fp, r4, lsl #4
    huart->TxXferCount = 0x00U;
      f4:	0000000c 	andeq	r0, r0, ip
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    huart->gState  = HAL_UART_STATE_READY;
      fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    huart->RxState = HAL_UART_STATE_READY;
     100:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000014 	andeq	r0, r0, r4, lsl r0
    HAL_UART_AbortCpltCallback(huart);
     108:	000000f4 	strdeq	r0, [r0], -r4
     10c:	080006a0 	stmdaeq	r0, {r5, r7, r9, sl}
  uint32_t AbortCplt = 0x01U;
     110:	00000014 	andeq	r0, r0, r4, lsl r0
  if (AbortCplt == 0x01U)
     114:	83080e41 	movwhi	r0, #36417	; 0x8e41
}
     118:	00018e02 	andeq	r8, r1, r2, lsl #28
     11c:	00000014 	andeq	r0, r0, r4, lsl r0
     120:	000000f4 	strdeq	r0, [r0], -r4
     124:	00000000 	andeq	r0, r0, r0
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	00000014 	andeq	r0, r0, r4, lsl r0
     12c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     130:	00018e02 	andeq	r8, r1, r2, lsl #28
     134:	00000014 	andeq	r0, r0, r4, lsl r0
     138:	000000f4 	strdeq	r0, [r0], -r4
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	080006b4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl}
     140:	00000014 	andeq	r0, r0, r4, lsl r0
     144:	83080e41 	movwhi	r0, #36417	; 0x8e41
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00018e02 	andeq	r8, r1, r2, lsl #28
     14c:	00000014 	andeq	r0, r0, r4, lsl r0
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	000000f4 	strdeq	r0, [r0], -r4
     154:	080006c8 	stmdaeq	r0, {r3, r6, r7, r9, sl}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	00000014 	andeq	r0, r0, r4, lsl r0
     15c:	83080e41 	movwhi	r0, #36417	; 0x8e41
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	00018e02 	andeq	r8, r1, r2, lsl #28
     164:	00000014 	andeq	r0, r0, r4, lsl r0
     168:	000000f4 	strdeq	r0, [r0], -r4
     16c:	080006dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl}
     170:	00000014 	andeq	r0, r0, r4, lsl r0
}
     174:	83080e41 	movwhi	r0, #36417	; 0x8e41
     178:	00018e02 	andeq	r8, r1, r2, lsl #28
     17c:	0000000c 	andeq	r0, r0, ip
     180:	000000f4 	strdeq	r0, [r0], -r4
}
     184:	080006f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	00000002 	andeq	r0, r0, r2
     18c:	0000000c 	andeq	r0, r0, ip
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	000000f4 	strdeq	r0, [r0], -r4
     194:	080006f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl}
     198:	00000002 	andeq	r0, r0, r2
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	0000000c 	andeq	r0, r0, ip
     1a0:	000000f4 	strdeq	r0, [r0], -r4
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
     1a8:	00000002 	andeq	r0, r0, r2
     1ac:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	000000f4 	strdeq	r0, [r0], -r4
     1b4:	080006f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00000008 	andeq	r0, r0, r8
     1bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1c0:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	00000014 	andeq	r0, r0, r4, lsl r0
     1c8:	000000f4 	strdeq	r0, [r0], -r4
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	08000700 	stmdaeq	r0, {r8, r9, sl}
     1d0:	00000010 	andeq	r0, r0, r0, lsl r0
     1d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	00018e02 	andeq	r8, r1, r2, lsl #28
     1dc:	00000014 	andeq	r0, r0, r4, lsl r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	000000f4 	strdeq	r0, [r0], -r4
     1e4:	08000710 	stmdaeq	r0, {r4, r8, r9, sl}
     1e8:	00000018 	andeq	r0, r0, r8, lsl r0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	00000014 	andeq	r0, r0, r4, lsl r0
     1f8:	000000f4 	strdeq	r0, [r0], -r4
     1fc:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00000018 	andeq	r0, r0, r8, lsl r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	83080e41 	movwhi	r0, #36417	; 0x8e41
     208:	00018e02 	andeq	r8, r1, r2, lsl #28
     20c:	0000000c 	andeq	r0, r0, ip
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     214:	7c020001 	stcvc	0, cr0, [r2], {1}
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     21c:	00000014 	andeq	r0, r0, r4, lsl r0
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	0000020c 	andeq	r0, r0, ip, lsl #4
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	08000740 	stmdaeq	r0, {r6, r8, r9, sl}
     228:	0000004c 	andeq	r0, r0, ip, asr #32
  tmp = hdma->Instance->FCR;
     22c:	61100e41 	tstvs	r0, r1, asr #28
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	0000000e 	andeq	r0, r0, lr
  tmp |= hdma->Init.FIFOMode;
     234:	0000000c 	andeq	r0, r0, ip
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    tmp |= hdma->Init.FIFOThreshold;
     23c:	7c020001 	stcvc	0, cr0, [r2], {1}
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00000014 	andeq	r0, r0, r4, lsl r0
     248:	00000234 	andeq	r0, r0, r4, lsr r2
  hdma->Instance->FCR = tmp;
     24c:	0800078c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl}
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000034 	andeq	r0, r0, r4, lsr r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	83080e41 	movwhi	r0, #36417	; 0x8e41
     258:	00018e02 	andeq	r8, r1, r2, lsl #28
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	0000001c 	andeq	r0, r0, ip, lsl r0
  hdma->State = HAL_DMA_STATE_READY;
     260:	00000234 	andeq	r0, r0, r4, lsr r2
     264:	080007c0 	stmdaeq	r0, {r6, r7, r8, r9, sl}
  return HAL_OK;
     268:	00000080 	andeq	r0, r0, r0, lsl #1
     26c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     270:	41018e02 	tstmi	r1, r2, lsl #28
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	0a4e280e 	beq	138a2b4 <_Min_Heap_Size+0x1389ab4>
     278:	0b41080e 	bleq	10422b8 <_Min_Heap_Size+0x1041ab8>
     27c:	00000014 	andeq	r0, r0, r4, lsl r0
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	00000234 	andeq	r0, r0, r4, lsr r2
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR; 
     288:	00000034 	andeq	r0, r0, r4, lsr r0
    return HAL_ERROR;
     28c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00018e02 	andeq	r8, r1, r2, lsl #28
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0000000c 	andeq	r0, r0, ip
     298:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      tickstart = HAL_GetTick();
     29c:	7c020001 	stcvc	0, cr0, [r2], {1}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2a4:	00000014 	andeq	r0, r0, r4, lsl r0
     2a8:	00000294 	muleq	r0, r4, r2
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	08000840 	stmdaeq	r0, {r6, fp}
     2b0:	00000038 	andeq	r0, r0, r8, lsr r0
     2b4:	57080e41 	strpl	r0, [r8, -r1, asr #28]
          return HAL_TIMEOUT;
     2b8:	0000000e 	andeq	r0, r0, lr
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	0000000c 	andeq	r0, r0, ip
     2c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    FlagStatus       pwrclkchanged = RESET;
     2c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	0000000c 	andeq	r0, r0, ip
     2d0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     2d4:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
     2d8:	00000020 	andeq	r0, r0, r0, lsr #32
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0000000c 	andeq	r0, r0, ip
     2e0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     2e4:	08000878 	stmdaeq	r0, {r3, r4, r5, r6, fp}
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	0000005c 	andeq	r0, r0, ip, asr r0
     2ec:	0000000c 	andeq	r0, r0, ip
          return HAL_TIMEOUT;
     2f0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	080008d4 	stmdaeq	r0, {r2, r4, r6, r7, fp}
     2f8:	00000060 	andeq	r0, r0, r0, rrx
     2fc:	00000018 	andeq	r0, r0, r8, lsl r0
     300:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     304:	08000934 	stmdaeq	r0, {r2, r4, r5, r8, fp}
     308:	00000174 	andeq	r0, r0, r4, ror r1
     30c:	83100e41 	tsthi	r0, #1040	; 0x410
     310:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
      tickstart = HAL_GetTick();
     314:	00018e02 	andeq	r8, r1, r2, lsl #28
     318:	00000028 	andeq	r0, r0, r8, lsr #32
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     320:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	0000008a 	andeq	r0, r0, sl, lsl #1
     328:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     32c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     330:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
          return HAL_TIMEOUT;
     334:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    if(pwrclkchanged == SET)
     338:	280e4101 	stmdacs	lr, {r0, r8, lr}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	1c0e0a7c 			; <UNDEFINED> instruction: 0x1c0e0a7c
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	00000b42 	andeq	r0, r0, r2, asr #22
     344:	0000000c 	andeq	r0, r0, ip
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     34c:	00000000 	andeq	r0, r0, r0
     350:	00000002 	andeq	r0, r0, r2
     354:	0000001c 	andeq	r0, r0, ip, lsl r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	08000b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp}
     360:	0000012c 	andeq	r0, r0, ip, lsr #2
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     368:	02018e02 	andeq	r8, r1, #2, 28
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	c4000e8b 	strgt	r0, [r0], #-3723	; 0xfffff175
     370:	000000ce 	andeq	r0, r0, lr, asr #1
     374:	0000001c 	andeq	r0, r0, ip, lsl r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     37c:	00000000 	andeq	r0, r0, r0
     380:	000000e0 	andeq	r0, r0, r0, ror #1
     384:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	02018e02 	andeq	r8, r1, #2, 28
     38c:	c4000e66 	strgt	r0, [r0], #-3686	; 0xfffff19a
        __HAL_RCC_PLL_DISABLE();
     390:	000000ce 	andeq	r0, r0, lr, asr #1
     394:	00000020 	andeq	r0, r0, r0, lsr #32
        tickstart = HAL_GetTick();
     398:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	000000fc 	strdeq	r0, [r0], -ip
     3a4:	83100e43 	tsthi	r0, #1072	; 0x430
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     3ac:	02018e02 	andeq	r8, r1, #2, 28
            return HAL_TIMEOUT;
     3b0:	c3000e75 	movwgt	r0, #3701	; 0xe75
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     3b8:	00000020 	andeq	r0, r0, r0, lsr #32
     3bc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00000000 	andeq	r0, r0, r0
     3c4:	00000124 	andeq	r0, r0, r4, lsr #2
     3c8:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     3d0:	02018e02 	andeq	r8, r1, #2, 28
     3d4:	c4000e87 	strgt	r0, [r0], #-3719	; 0xfffff179
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00cec6c5 	sbceq	ip, lr, r5, asr #13
     3dc:	0000000c 	andeq	r0, r0, ip
     3e0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00000000 	andeq	r0, r0, r0
     3e8:	00000002 	andeq	r0, r0, r2
     3ec:	00000018 	andeq	r0, r0, r8, lsl r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	00000078 	andeq	r0, r0, r8, ror r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     400:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
     404:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00000028 	andeq	r0, r0, r8, lsr #32
     40c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     410:	08000c60 	stmdaeq	r0, {r5, r6, sl, fp}
     414:	000000cc 	andeq	r0, r0, ip, asr #1
     418:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     41c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     420:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     424:	41018e02 	tstmi	r1, r2, lsl #28
        __HAL_RCC_PLL_ENABLE();
     428:	5f02200e 	svcpl	0x0002200e
     42c:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
        tickstart = HAL_GetTick();
     430:	0000000b 	andeq	r0, r0, fp
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00000028 	andeq	r0, r0, r8, lsr #32
     438:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     43c:	00000000 	andeq	r0, r0, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	000000d2 	ldrdeq	r0, [r0], -r2
     444:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
            return HAL_TIMEOUT;
     448:	86058506 	strhi	r8, [r5], -r6, lsl #10
  return HAL_OK;
     44c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
        __HAL_RCC_PLL_DISABLE();
     450:	41018e02 	tstmi	r1, r2, lsl #28
     454:	6202200e 	andvs	r2, r2, #14
        tickstart = HAL_GetTick();
     458:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0000000b 	andeq	r0, r0, fp
     460:	0000000c 	andeq	r0, r0, ip
     464:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00000000 	andeq	r0, r0, r0
     46c:	00000038 	andeq	r0, r0, r8, lsr r0
            return HAL_TIMEOUT;
     470:	00000018 	andeq	r0, r0, r8, lsl r0
  return HAL_OK;
     474:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00000000 	andeq	r0, r0, r0
        pll_config = RCC->PLLCFGR;
     47c:	00000084 	andeq	r0, r0, r4, lsl #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	83100e41 	tsthi	r0, #1040	; 0x410
     484:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00018e02 	andeq	r8, r1, r2, lsl #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	0000000c 	andeq	r0, r0, ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00000094 	muleq	r0, r4, r0
     49c:	00000014 	andeq	r0, r0, r4, lsl r0
     4a0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00000000 	andeq	r0, r0, r0
     4a8:	00000096 	muleq	r0, r6, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	70080e5a 	andvc	r0, r8, sl, asr lr
     4b0:	0000000e 	andeq	r0, r0, lr
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000014 	andeq	r0, r0, r4, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     4bc:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     4c0:	00000084 	andeq	r0, r0, r4, lsl #1
}
     4c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
        return HAL_ERROR;
     4c8:	00018e02 	andeq	r8, r1, r2, lsl #28
        return HAL_ERROR;
     4cc:	00000028 	andeq	r0, r0, r8, lsr #32
}
     4d0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
        return HAL_ERROR;
     4d4:	00000000 	andeq	r0, r0, r0
          return HAL_ERROR;
     4d8:	00000120 	andeq	r0, r0, r0, lsr #2
     4dc:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     4e0:	86068507 	strhi	r8, [r6], -r7, lsl #10
     4e4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     4e8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     4ec:	280e4101 	stmdacs	lr, {r0, r8, lr}
     4f0:	0e0a8902 	vmlaeq.f16	s16, s20, s4	; <UNPREDICTABLE>
     4f4:	000b421c 	andeq	r4, fp, ip, lsl r2
     4f8:	0000000c 	andeq	r0, r0, ip
     4fc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     500:	00000000 	andeq	r0, r0, r0
     504:	00000004 	andeq	r0, r0, r4
     508:	00000014 	andeq	r0, r0, r4, lsl r0
     50c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     510:	00000000 	andeq	r0, r0, r0
     514:	000000f2 	strdeq	r0, [r0], -r2
     518:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     51c:	00018e02 	andeq	r8, r1, r2, lsl #28
     520:	00000014 	andeq	r0, r0, r4, lsl r0
     524:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     528:	00000000 	andeq	r0, r0, r0
     52c:	0000006c 	andeq	r0, r0, ip, rrx
     530:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     534:	00018e02 	andeq	r8, r1, r2, lsl #28
     538:	00000014 	andeq	r0, r0, r4, lsl r0
     53c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     540:	00000000 	andeq	r0, r0, r0
     544:	000000a6 	andeq	r0, r0, r6, lsr #1
     548:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     54c:	00018e02 	andeq	r8, r1, r2, lsl #28
     550:	0000000c 	andeq	r0, r0, ip
     554:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     558:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
     55c:	00000002 	andeq	r0, r0, r2
     560:	00000014 	andeq	r0, r0, r4, lsl r0
     564:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     568:	00000000 	andeq	r0, r0, r0
     56c:	0000004c 	andeq	r0, r0, ip, asr #32
     570:	83080e41 	movwhi	r0, #36417	; 0x8e41
     574:	00018e02 	andeq	r8, r1, r2, lsl #28
     578:	00000014 	andeq	r0, r0, r4, lsl r0
     57c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     580:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
     584:	0000001a 	andeq	r0, r0, sl, lsl r0
     588:	83080e41 	movwhi	r0, #36417	; 0x8e41
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000000c 	andeq	r0, r0, ip
     594:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     598:	00000000 	andeq	r0, r0, r0
     59c:	00000002 	andeq	r0, r0, r2
     5a0:	00000014 	andeq	r0, r0, r4, lsl r0
     5a4:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     5a8:	00000000 	andeq	r0, r0, r0
     5ac:	0000000a 	andeq	r0, r0, sl
     5b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b8:	0000000c 	andeq	r0, r0, ip
     5bc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     5c0:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
     5c4:	00000002 	andeq	r0, r0, r2
     5c8:	0000000c 	andeq	r0, r0, ip
     5cc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	00000002 	andeq	r0, r0, r2
     5d8:	0000000c 	andeq	r0, r0, ip
     5dc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     5e0:	08000d4a 	stmdaeq	r0, {r1, r3, r6, r8, sl, fp}
     5e4:	00000002 	andeq	r0, r0, r2
     5e8:	00000014 	andeq	r0, r0, r4, lsl r0
     5ec:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     5f0:	00000000 	andeq	r0, r0, r0
     5f4:	00000058 	andeq	r0, r0, r8, asr r0
     5f8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     600:	00000014 	andeq	r0, r0, r4, lsl r0
     604:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     608:	08000d4c 	stmdaeq	r0, {r2, r3, r6, r8, sl, fp}
     60c:	00000010 	andeq	r0, r0, r0, lsl r0
     610:	83080e41 	movwhi	r0, #36417	; 0x8e41
     614:	00018e02 	andeq	r8, r1, r2, lsl #28
     618:	0000000c 	andeq	r0, r0, ip
     61c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     620:	00000000 	andeq	r0, r0, r0
     624:	00000002 	andeq	r0, r0, r2
     628:	00000018 	andeq	r0, r0, r8, lsl r0
     62c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     630:	00000000 	andeq	r0, r0, r0
     634:	00000124 	andeq	r0, r0, r4, lsr #2
     638:	83100e41 	tsthi	r0, #1040	; 0x410
     63c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     640:	00018e02 	andeq	r8, r1, r2, lsl #28
     644:	00000014 	andeq	r0, r0, r4, lsl r0
     648:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     64c:	00000000 	andeq	r0, r0, r0
     650:	0000002c 	andeq	r0, r0, ip, lsr #32
     654:	83080e41 	movwhi	r0, #36417	; 0x8e41
     658:	00018e02 	andeq	r8, r1, r2, lsl #28
     65c:	00000014 	andeq	r0, r0, r4, lsl r0
     660:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     664:	00000000 	andeq	r0, r0, r0
     668:	0000002c 	andeq	r0, r0, ip, lsr #32
     66c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     670:	00018e02 	andeq	r8, r1, r2, lsl #28
     674:	0000000c 	andeq	r0, r0, ip
     678:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     67c:	00000000 	andeq	r0, r0, r0
     680:	00000002 	andeq	r0, r0, r2
     684:	00000014 	andeq	r0, r0, r4, lsl r0
     688:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     68c:	00000000 	andeq	r0, r0, r0
     690:	00000080 	andeq	r0, r0, r0, lsl #1
     694:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     698:	00018e02 	andeq	r8, r1, r2, lsl #28
     69c:	00000014 	andeq	r0, r0, r4, lsl r0
     6a0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     6a4:	00000000 	andeq	r0, r0, r0
     6a8:	00000014 	andeq	r0, r0, r4, lsl r0
     6ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6b4:	0000000c 	andeq	r0, r0, ip
     6b8:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     6bc:	00000000 	andeq	r0, r0, r0
     6c0:	00000002 	andeq	r0, r0, r2
     6c4:	00000014 	andeq	r0, r0, r4, lsl r0
     6c8:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     6cc:	00000000 	andeq	r0, r0, r0
     6d0:	000000bc 	strheq	r0, [r0], -ip
     6d4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6d8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6dc:	00000014 	andeq	r0, r0, r4, lsl r0
     6e0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     6e4:	00000000 	andeq	r0, r0, r0
     6e8:	00000016 	andeq	r0, r0, r6, lsl r0
     6ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6f4:	0000000c 	andeq	r0, r0, ip
     6f8:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     6fc:	08000d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp}
     700:	00000002 	andeq	r0, r0, r2
     704:	00000024 	andeq	r0, r0, r4, lsr #32
     708:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     70c:	08000d5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, fp}
     710:	000000e6 	andeq	r0, r0, r6, ror #1
     714:	8e040e60 	cdphi	14, 0, cr0, cr4, cr0, {3}
     718:	100e4101 	andne	r4, lr, r1, lsl #2
     71c:	42040e76 	andmi	r0, r4, #1888	; 0x760
     720:	53ce000e 	bicpl	r0, lr, #14
     724:	018e100e 	orreq	r1, lr, lr
     728:	ce000e43 	cdpgt	14, 0, cr0, cr0, cr3, {2}
     72c:	00000020 	andeq	r0, r0, r0, lsr #32
     730:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     734:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
     738:	00000288 	andeq	r0, r0, r8, lsl #5
     73c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     740:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     744:	180e4101 	stmdane	lr, {r0, r8, lr}
     748:	0c0e0a67 			; <UNDEFINED> instruction: 0x0c0e0a67
     74c:	00000b41 	andeq	r0, r0, r1, asr #22
     750:	00000014 	andeq	r0, r0, r4, lsl r0
     754:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     758:	00000000 	andeq	r0, r0, r0
     75c:	0000001e 	andeq	r0, r0, lr, lsl r0
     760:	83080e41 	movwhi	r0, #36417	; 0x8e41
     764:	00018e02 	andeq	r8, r1, r2, lsl #28
     768:	00000014 	andeq	r0, r0, r4, lsl r0
     76c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     770:	00000000 	andeq	r0, r0, r0
     774:	0000009a 	muleq	r0, sl, r0
     778:	83080e41 	movwhi	r0, #36417	; 0x8e41
     77c:	00018e02 	andeq	r8, r1, r2, lsl #28
     780:	00000014 	andeq	r0, r0, r4, lsl r0
     784:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     788:	00000000 	andeq	r0, r0, r0
     78c:	00000084 	andeq	r0, r0, r4, lsl #1
     790:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     794:	00018e02 	andeq	r8, r1, r2, lsl #28
     798:	00000014 	andeq	r0, r0, r4, lsl r0
     79c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     7a0:	00000000 	andeq	r0, r0, r0
     7a4:	00000088 	andeq	r0, r0, r8, lsl #1
     7a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     7b0:	00000014 	andeq	r0, r0, r4, lsl r0
     7b4:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     7b8:	00000000 	andeq	r0, r0, r0
     7bc:	00000088 	andeq	r0, r0, r8, lsl #1
     7c0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7c4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7c8:	0000000c 	andeq	r0, r0, ip
     7cc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     7d0:	00000000 	andeq	r0, r0, r0
     7d4:	00000036 	andeq	r0, r0, r6, lsr r0
     7d8:	0000000c 	andeq	r0, r0, ip
     7dc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     7e0:	00000000 	andeq	r0, r0, r0
     7e4:	00000036 	andeq	r0, r0, r6, lsr r0
     7e8:	0000000c 	andeq	r0, r0, ip
     7ec:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     7f0:	00000000 	andeq	r0, r0, r0
     7f4:	0000000c 	andeq	r0, r0, ip
     7f8:	0000000c 	andeq	r0, r0, ip
     7fc:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     800:	00000000 	andeq	r0, r0, r0
     804:	00000004 	andeq	r0, r0, r4
     808:	0000000c 	andeq	r0, r0, ip
     80c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     810:	00000000 	andeq	r0, r0, r0
     814:	00000036 	andeq	r0, r0, r6, lsr r0
     818:	00000014 	andeq	r0, r0, r4, lsl r0
     81c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     820:	00000000 	andeq	r0, r0, r0
     824:	00000026 	andeq	r0, r0, r6, lsr #32
     828:	83080e41 	movwhi	r0, #36417	; 0x8e41
     82c:	00018e02 	andeq	r8, r1, r2, lsl #28
     830:	00000028 	andeq	r0, r0, r8, lsr #32
     834:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     838:	00000000 	andeq	r0, r0, r0
     83c:	00000066 	andeq	r0, r0, r6, rrx
     840:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     844:	41018e02 	tstmi	r1, r2, lsl #28
     848:	0a45100e 	beq	1144888 <_Min_Heap_Size+0x1144088>
     84c:	0b41080e 	bleq	104288c <_Min_Heap_Size+0x104208c>
     850:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     854:	100e42ce 	andne	r4, lr, lr, asr #5
     858:	018e0284 	orreq	r0, lr, r4, lsl #5
     85c:	0000001c 	andeq	r0, r0, ip, lsl r0
     860:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     864:	00000000 	andeq	r0, r0, r0
     868:	000000a4 	andeq	r0, r0, r4, lsr #1
     86c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     870:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     874:	180e4101 	stmdane	lr, {r0, r8, lr}
     878:	0c0e4902 			; <UNDEFINED> instruction: 0x0c0e4902
     87c:	00000014 	andeq	r0, r0, r4, lsl r0
     880:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     884:	00000000 	andeq	r0, r0, r0
     888:	00000026 	andeq	r0, r0, r6, lsr #32
     88c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     890:	00018e02 	andeq	r8, r1, r2, lsl #28
     894:	00000028 	andeq	r0, r0, r8, lsr #32
     898:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	00000066 	andeq	r0, r0, r6, rrx
     8a4:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     8a8:	41018e02 	tstmi	r1, r2, lsl #28
     8ac:	0a45100e 	beq	11448ec <_Min_Heap_Size+0x11440ec>
     8b0:	0b41080e 	bleq	10428f0 <_Min_Heap_Size+0x10420f0>
     8b4:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     8b8:	100e42ce 	andne	r4, lr, lr, asr #5
     8bc:	018e0284 	orreq	r0, lr, r4, lsl #5
     8c0:	0000000c 	andeq	r0, r0, ip
     8c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     8c8:	7c020001 	stcvc	0, cr0, [r2], {1}
     8cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8d0:	0000000c 	andeq	r0, r0, ip
     8d4:	000008c0 	andeq	r0, r0, r0, asr #17
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	00000004 	andeq	r0, r0, r4
     8e0:	00000034 	andeq	r0, r0, r4, lsr r0
     8e4:	000008c0 	andeq	r0, r0, r0, asr #17
     8e8:	00000000 	andeq	r0, r0, r0
     8ec:	000004fc 	strdeq	r0, [r0], -ip
     8f0:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     8f4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     8f8:	41018e02 	tstmi	r1, r2, lsl #28
     8fc:	5c03180e 	stcpl	8, cr1, [r3], {14}
     900:	c4000e02 	strgt	r0, [r0], #-3586	; 0xfffff1fe
     904:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     908:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     90c:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     910:	0a46018e 	beq	1180f50 <_Min_Heap_Size+0x1180750>
     914:	0b41100e 	bleq	1044954 <_Min_Heap_Size+0x1044154>
     918:	00000020 	andeq	r0, r0, r0, lsr #32
     91c:	000008c0 	andeq	r0, r0, r0, asr #17
     920:	00000000 	andeq	r0, r0, r0
     924:	00000118 	andeq	r0, r0, r8, lsl r1
     928:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     92c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     930:	41018e02 	tstmi	r1, r2, lsl #28
     934:	0a7e300e 	beq	1f8c974 <_Min_Heap_Size+0x1f8c174>
     938:	0b41100e 	bleq	1044978 <_Min_Heap_Size+0x1044178>
     93c:	0000000c 	andeq	r0, r0, ip
     940:	000008c0 	andeq	r0, r0, r0, asr #17
     944:	00000000 	andeq	r0, r0, r0
     948:	0000000c 	andeq	r0, r0, ip
     94c:	0000000c 	andeq	r0, r0, ip
     950:	000008c0 	andeq	r0, r0, r0, asr #17
     954:	00000000 	andeq	r0, r0, r0
     958:	0000000c 	andeq	r0, r0, ip
     95c:	00000014 	andeq	r0, r0, r4, lsl r0
     960:	000008c0 	andeq	r0, r0, r0, asr #17
     964:	00000000 	andeq	r0, r0, r0
     968:	000000d4 	ldrdeq	r0, [r0], -r4
     96c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     970:	00018e02 	andeq	r8, r1, r2, lsl #28
     974:	0000002c 	andeq	r0, r0, ip, lsr #32
     978:	000008c0 	andeq	r0, r0, r0, asr #17
     97c:	00000000 	andeq	r0, r0, r0
     980:	0000021c 	andeq	r0, r0, ip, lsl r2
     984:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     988:	86038504 	strhi	r8, [r3], -r4, lsl #10
     98c:	02018e02 	andeq	r8, r1, #2, 28
     990:	c4000ef6 	strgt	r0, [r0], #-3830	; 0xfffff10a
     994:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     998:	0484100e 	streq	r1, [r4], #14
     99c:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     9a0:	0000018e 	andeq	r0, r0, lr, lsl #3
     9a4:	0000000c 	andeq	r0, r0, ip
     9a8:	000008c0 	andeq	r0, r0, r0, asr #17
     9ac:	080010cc 	stmdaeq	r0, {r2, r3, r6, r7, ip}
     9b0:	0000000c 	andeq	r0, r0, ip
     9b4:	00000014 	andeq	r0, r0, r4, lsl r0
     9b8:	000008c0 	andeq	r0, r0, r0, asr #17
     9bc:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
     9c0:	00000020 	andeq	r0, r0, r0, lsr #32
     9c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     9cc:	00000014 	andeq	r0, r0, r4, lsl r0
     9d0:	000008c0 	andeq	r0, r0, r0, asr #17
     9d4:	080010f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, ip}
     9d8:	00000020 	andeq	r0, r0, r0, lsr #32
     9dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     9e4:	0000000c 	andeq	r0, r0, ip
     9e8:	000008c0 	andeq	r0, r0, r0, asr #17
     9ec:	00000000 	andeq	r0, r0, r0
     9f0:	000000cc 	andeq	r0, r0, ip, asr #1
     9f4:	0000000c 	andeq	r0, r0, ip
     9f8:	000008c0 	andeq	r0, r0, r0, asr #17
     9fc:	00000000 	andeq	r0, r0, r0
     a00:	0000003c 	andeq	r0, r0, ip, lsr r0
     a04:	0000000c 	andeq	r0, r0, ip
     a08:	000008c0 	andeq	r0, r0, r0, asr #17
     a0c:	00000000 	andeq	r0, r0, r0
     a10:	00000002 	andeq	r0, r0, r2
     a14:	00000014 	andeq	r0, r0, r4, lsl r0
     a18:	000008c0 	andeq	r0, r0, r0, asr #17
     a1c:	00000000 	andeq	r0, r0, r0
     a20:	00000020 	andeq	r0, r0, r0, lsr #32
     a24:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a28:	00018e02 	andeq	r8, r1, r2, lsl #28
     a2c:	0000000c 	andeq	r0, r0, ip
     a30:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a34:	7c020001 	stcvc	0, cr0, [r2], {1}
     a38:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a3c:	00000024 	andeq	r0, r0, r4, lsr #32
     a40:	00000a2c 	andeq	r0, r0, ip, lsr #20
     a44:	08001118 	stmdaeq	r0, {r3, r4, r8, ip}
     a48:	000002e8 	andeq	r0, r0, r8, ror #5
     a4c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     a50:	86058506 	strhi	r8, [r5], -r6, lsl #10
     a54:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     a58:	41018e02 	tstmi	r1, r2, lsl #28
     a5c:	6703200e 	strvs	r2, [r3, -lr]
     a60:	00180e01 	andseq	r0, r8, r1, lsl #28
     a64:	0000001c 	andeq	r0, r0, ip, lsl r0
     a68:	00000a2c 	andeq	r0, r0, ip, lsr #20
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	00000184 	andeq	r0, r0, r4, lsl #3
     a74:	83180e41 	tsthi	r8, #1040	; 0x410
     a78:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     a7c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     a80:	00018e02 	andeq	r8, r1, r2, lsl #28
     a84:	00000018 	andeq	r0, r0, r8, lsl r0
     a88:	00000a2c 	andeq	r0, r0, ip, lsr #20
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	00000028 	andeq	r0, r0, r8, lsr #32
     a94:	83100e41 	tsthi	r0, #1040	; 0x410
     a98:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     a9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     aa0:	00000018 	andeq	r0, r0, r8, lsl r0
     aa4:	00000a2c 	andeq	r0, r0, ip, lsr #20
     aa8:	00000000 	andeq	r0, r0, r0
     aac:	00000038 	andeq	r0, r0, r8, lsr r0
     ab0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     ab4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ab8:	00018e02 	andeq	r8, r1, r2, lsl #28
     abc:	00000018 	andeq	r0, r0, r8, lsl r0
     ac0:	00000a2c 	andeq	r0, r0, ip, lsr #20
     ac4:	00000000 	andeq	r0, r0, r0
     ac8:	0000002c 	andeq	r0, r0, ip, lsr #32
     acc:	83100e41 	tsthi	r0, #1040	; 0x410
     ad0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     ad4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ad8:	00000020 	andeq	r0, r0, r0, lsr #32
     adc:	00000a2c 	andeq	r0, r0, ip, lsr #20
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00000048 	andeq	r0, r0, r8, asr #32
     ae8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     aec:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     af0:	180e4101 	stmdane	lr, {r0, r8, lr}
     af4:	0c0e0a56 			; <UNDEFINED> instruction: 0x0c0e0a56
     af8:	00000b41 	andeq	r0, r0, r1, asr #22
     afc:	0000000c 	andeq	r0, r0, ip
     b00:	00000a2c 	andeq	r0, r0, ip, lsr #20
     b04:	00000000 	andeq	r0, r0, r0
     b08:	00000002 	andeq	r0, r0, r2
     b0c:	00000014 	andeq	r0, r0, r4, lsl r0
     b10:	00000a2c 	andeq	r0, r0, ip, lsr #20
     b14:	00000000 	andeq	r0, r0, r0
     b18:	0000001c 	andeq	r0, r0, ip, lsl r0
     b1c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b20:	00018e02 	andeq	r8, r1, r2, lsl #28
     b24:	0000000c 	andeq	r0, r0, ip
     b28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b2c:	7c020001 	stcvc	0, cr0, [r2], {1}
     b30:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b34:	0000001c 	andeq	r0, r0, ip, lsl r0
     b38:	00000b24 	andeq	r0, r0, r4, lsr #22
     b3c:	00000000 	andeq	r0, r0, r0
     b40:	0000002c 	andeq	r0, r0, ip, lsr #32
     b44:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     b48:	4f018502 	svcmi	0x00018502
     b4c:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     b50:	000b4100 	andeq	r4, fp, r0, lsl #2
     b54:	00000018 	andeq	r0, r0, r8, lsl r0
     b58:	00000b24 	andeq	r0, r0, r4, lsr #22
     b5c:	00000000 	andeq	r0, r0, r0
     b60:	00000044 	andeq	r0, r0, r4, asr #32
     b64:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     b68:	c40a5501 	strgt	r5, [sl], #-1281	; 0xfffffaff
     b6c:	0b41000e 	bleq	1040bac <_Min_Heap_Size+0x10403ac>
     b70:	0000000c 	andeq	r0, r0, ip
     b74:	00000b24 	andeq	r0, r0, r4, lsr #22
     b78:	00000000 	andeq	r0, r0, r0
     b7c:	0000008e 	andeq	r0, r0, lr, lsl #1
     b80:	00000018 	andeq	r0, r0, r8, lsl r0
     b84:	00000b24 	andeq	r0, r0, r4, lsr #22
     b88:	00000000 	andeq	r0, r0, r0
     b8c:	0000028e 	andeq	r0, r0, lr, lsl #5
     b90:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     b94:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b98:	00018e02 	andeq	r8, r1, r2, lsl #28
     b9c:	00000020 	andeq	r0, r0, r0, lsr #32
     ba0:	00000b24 	andeq	r0, r0, r4, lsr #22
     ba4:	00000000 	andeq	r0, r0, r0
     ba8:	000000dc 	ldrdeq	r0, [r0], -ip
     bac:	83100e43 	tsthi	r0, #1072	; 0x430
     bb0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     bb4:	02018e02 	andeq	r8, r1, #2, 28
     bb8:	c3000e64 	movwgt	r0, #3684	; 0xe64
     bbc:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     bc0:	0000001c 	andeq	r0, r0, ip, lsl r0
     bc4:	00000b24 	andeq	r0, r0, r4, lsr #22
     bc8:	00000000 	andeq	r0, r0, r0
     bcc:	00000078 	andeq	r0, r0, r8, ror r0
     bd0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     bd4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     bd8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     bdc:	00018e02 	andeq	r8, r1, r2, lsl #28
     be0:	0000001c 	andeq	r0, r0, ip, lsl r0
     be4:	00000b24 	andeq	r0, r0, r4, lsr #22
     be8:	00000000 	andeq	r0, r0, r0
     bec:	00000098 	muleq	r0, r8, r0
     bf0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     bf4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     bf8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     c00:	00000018 	andeq	r0, r0, r8, lsl r0
     c04:	00000b24 	andeq	r0, r0, r4, lsr #22
     c08:	08001400 	stmdaeq	r0, {sl, ip}
     c0c:	00000094 	muleq	r0, r4, r0
     c10:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c14:	86038504 	strhi	r8, [r3], -r4, lsl #10
     c18:	00018e02 	andeq	r8, r1, r2, lsl #28
     c1c:	0000000c 	andeq	r0, r0, ip
     c20:	00000b24 	andeq	r0, r0, r4, lsr #22
     c24:	08001494 	stmdaeq	r0, {r2, r4, r7, sl, ip}
     c28:	00000026 	andeq	r0, r0, r6, lsr #32
     c2c:	00000020 	andeq	r0, r0, r0, lsr #32
     c30:	00000b24 	andeq	r0, r0, r4, lsr #22
     c34:	00000000 	andeq	r0, r0, r0
     c38:	00000128 	andeq	r0, r0, r8, lsr #2
     c3c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     c40:	86078508 	strhi	r8, [r7], -r8, lsl #10
     c44:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     c48:	8a038904 	bhi	e3060 <_Min_Heap_Size+0xe2860>
     c4c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c50:	00000020 	andeq	r0, r0, r0, lsr #32
     c54:	00000b24 	andeq	r0, r0, r4, lsr #22
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	000001dc 	ldrdeq	r0, [r0], -ip
     c60:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     c64:	86048505 	strhi	r8, [r4], -r5, lsl #10
     c68:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     c6c:	200e4101 	andcs	r4, lr, r1, lsl #2
     c70:	140ee702 	strne	lr, [lr], #-1794	; 0xfffff8fe
     c74:	0000000c 	andeq	r0, r0, ip
     c78:	00000b24 	andeq	r0, r0, r4, lsr #22
     c7c:	00000000 	andeq	r0, r0, r0
     c80:	0000005a 	andeq	r0, r0, sl, asr r0
     c84:	0000000c 	andeq	r0, r0, ip
     c88:	00000b24 	andeq	r0, r0, r4, lsr #22
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	0000006e 	andeq	r0, r0, lr, rrx
     c94:	0000000c 	andeq	r0, r0, ip
     c98:	00000b24 	andeq	r0, r0, r4, lsr #22
     c9c:	00000000 	andeq	r0, r0, r0
     ca0:	00000006 	andeq	r0, r0, r6
     ca4:	0000000c 	andeq	r0, r0, ip
     ca8:	00000b24 	andeq	r0, r0, r4, lsr #22
     cac:	00000000 	andeq	r0, r0, r0
     cb0:	00000004 	andeq	r0, r0, r4
     cb4:	0000000c 	andeq	r0, r0, ip
     cb8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     cbc:	7c020001 	stcvc	0, cr0, [r2], {1}
     cc0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cc4:	00000014 	andeq	r0, r0, r4, lsl r0
     cc8:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     ccc:	080014bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip}
     cd0:	0000003c 	andeq	r0, r0, ip, lsr r0
     cd4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cd8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cdc:	00000018 	andeq	r0, r0, r8, lsl r0
     ce0:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     ce4:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
     ce8:	0000008c 	andeq	r0, r0, ip, lsl #1
     cec:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     cf0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     cf4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cf8:	00000014 	andeq	r0, r0, r4, lsl r0
     cfc:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d00:	08001584 	stmdaeq	r0, {r2, r7, r8, sl, ip}
     d04:	00000030 	andeq	r0, r0, r0, lsr r0
     d08:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d10:	00000014 	andeq	r0, r0, r4, lsl r0
     d14:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d18:	00000000 	andeq	r0, r0, r0
     d1c:	00000038 	andeq	r0, r0, r8, lsr r0
     d20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d24:	00018e02 	andeq	r8, r1, r2, lsl #28
     d28:	0000000c 	andeq	r0, r0, ip
     d2c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d30:	00000000 	andeq	r0, r0, r0
     d34:	00000024 	andeq	r0, r0, r4, lsr #32
     d38:	0000000c 	andeq	r0, r0, ip
     d3c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d40:	080015b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl, ip}
     d44:	00000028 	andeq	r0, r0, r8, lsr #32
     d48:	0000000c 	andeq	r0, r0, ip
     d4c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d50:	00000000 	andeq	r0, r0, r0
     d54:	0000001c 	andeq	r0, r0, ip, lsl r0
     d58:	0000000c 	andeq	r0, r0, ip
     d5c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d60:	00000000 	andeq	r0, r0, r0
     d64:	00000020 	andeq	r0, r0, r0, lsr #32
     d68:	00000014 	andeq	r0, r0, r4, lsl r0
     d6c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d70:	00000000 	andeq	r0, r0, r0
     d74:	00000128 	andeq	r0, r0, r8, lsr #2
     d78:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d80:	0000000c 	andeq	r0, r0, ip
     d84:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	00000006 	andeq	r0, r0, r6
     d90:	0000000c 	andeq	r0, r0, ip
     d94:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000010 	andeq	r0, r0, r0, lsl r0
     da0:	0000001c 	andeq	r0, r0, ip, lsl r0
     da4:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     da8:	00000000 	andeq	r0, r0, r0
     dac:	0000007c 	andeq	r0, r0, ip, ror r0
     db0:	83180e41 	tsthi	r8, #1040	; 0x410
     db4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     db8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     dbc:	00018e02 	andeq	r8, r1, r2, lsl #28
     dc0:	00000014 	andeq	r0, r0, r4, lsl r0
     dc4:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     dc8:	00000000 	andeq	r0, r0, r0
     dcc:	00000034 	andeq	r0, r0, r4, lsr r0
     dd0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     dd4:	00018e02 	andeq	r8, r1, r2, lsl #28
     dd8:	00000014 	andeq	r0, r0, r4, lsl r0
     ddc:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     de0:	00000000 	andeq	r0, r0, r0
     de4:	0000003c 	andeq	r0, r0, ip, lsr r0
     de8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     dec:	00018e02 	andeq	r8, r1, r2, lsl #28
     df0:	00000014 	andeq	r0, r0, r4, lsl r0
     df4:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     df8:	00000000 	andeq	r0, r0, r0
     dfc:	00000034 	andeq	r0, r0, r4, lsr r0
     e00:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e04:	00018e02 	andeq	r8, r1, r2, lsl #28
     e08:	00000014 	andeq	r0, r0, r4, lsl r0
     e0c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     e10:	00000000 	andeq	r0, r0, r0
     e14:	0000003c 	andeq	r0, r0, ip, lsr r0
     e18:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e20:	00000014 	andeq	r0, r0, r4, lsl r0
     e24:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     e28:	00000000 	andeq	r0, r0, r0
     e2c:	0000003c 	andeq	r0, r0, ip, lsr r0
     e30:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e34:	00018e02 	andeq	r8, r1, r2, lsl #28
     e38:	0000000c 	andeq	r0, r0, ip
     e3c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     e40:	00000000 	andeq	r0, r0, r0
     e44:	00000002 	andeq	r0, r0, r2
     e48:	00000014 	andeq	r0, r0, r4, lsl r0
     e4c:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
     e50:	00000000 	andeq	r0, r0, r0
     e54:	00000008 	andeq	r0, r0, r8
     e58:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e60:	0000000c 	andeq	r0, r0, ip
     e64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     e68:	7c020001 	stcvc	0, cr0, [r2], {1}
     e6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     e70:	0000000c 	andeq	r0, r0, ip
     e74:	00000e60 	andeq	r0, r0, r0, ror #28
     e78:	00000000 	andeq	r0, r0, r0
     e7c:	00000002 	andeq	r0, r0, r2
     e80:	0000000c 	andeq	r0, r0, ip
     e84:	00000e60 	andeq	r0, r0, r0, ror #28
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	00000002 	andeq	r0, r0, r2
     e90:	00000014 	andeq	r0, r0, r4, lsl r0
     e94:	00000e60 	andeq	r0, r0, r0, ror #28
     e98:	00000000 	andeq	r0, r0, r0
     e9c:	0000003c 	andeq	r0, r0, ip, lsr r0
     ea0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ea4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ea8:	00000014 	andeq	r0, r0, r4, lsl r0
     eac:	00000e60 	andeq	r0, r0, r0, ror #28
     eb0:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
     eb4:	0000004c 	andeq	r0, r0, ip, asr #32
     eb8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ebc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ec0:	00000014 	andeq	r0, r0, r4, lsl r0
     ec4:	00000e60 	andeq	r0, r0, r0, ror #28
     ec8:	08001628 	stmdaeq	r0, {r3, r5, r9, sl, ip}
     ecc:	00000034 	andeq	r0, r0, r4, lsr r0
     ed0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ed4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ed8:	0000000c 	andeq	r0, r0, ip
     edc:	00000e60 	andeq	r0, r0, r0, ror #28
     ee0:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
     ee4:	00000018 	andeq	r0, r0, r8, lsl r0
     ee8:	0000000c 	andeq	r0, r0, ip
     eec:	00000e60 	andeq	r0, r0, r0, ror #28
     ef0:	08001674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, ip}
     ef4:	0000000c 	andeq	r0, r0, ip
     ef8:	0000000c 	andeq	r0, r0, ip
     efc:	00000e60 	andeq	r0, r0, r0, ror #28
     f00:	00000000 	andeq	r0, r0, r0
     f04:	0000000c 	andeq	r0, r0, ip
     f08:	00000018 	andeq	r0, r0, r8, lsl r0
     f0c:	00000e60 	andeq	r0, r0, r0, ror #28
     f10:	00000000 	andeq	r0, r0, r0
     f14:	00000048 	andeq	r0, r0, r8, asr #32
     f18:	83100e41 	tsthi	r0, #1040	; 0x410
     f1c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f20:	00018e02 	andeq	r8, r1, r2, lsl #28
     f24:	0000000c 	andeq	r0, r0, ip
     f28:	00000e60 	andeq	r0, r0, r0, ror #28
     f2c:	00000000 	andeq	r0, r0, r0
     f30:	0000000c 	andeq	r0, r0, ip
     f34:	00000018 	andeq	r0, r0, r8, lsl r0
     f38:	00000e60 	andeq	r0, r0, r0, ror #28
     f3c:	08001680 	stmdaeq	r0, {r7, r9, sl, ip}
     f40:	00000028 	andeq	r0, r0, r8, lsr #32
     f44:	83100e41 	tsthi	r0, #1040	; 0x410
     f48:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f4c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f50:	0000000c 	andeq	r0, r0, ip
     f54:	00000e60 	andeq	r0, r0, r0, ror #28
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	0000000e 	andeq	r0, r0, lr
     f60:	0000000c 	andeq	r0, r0, ip
     f64:	00000e60 	andeq	r0, r0, r0, ror #28
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	0000000e 	andeq	r0, r0, lr
     f70:	0000000c 	andeq	r0, r0, ip
     f74:	00000e60 	andeq	r0, r0, r0, ror #28
     f78:	00000000 	andeq	r0, r0, r0
     f7c:	00000008 	andeq	r0, r0, r8
     f80:	0000000c 	andeq	r0, r0, ip
     f84:	00000e60 	andeq	r0, r0, r0, ror #28
     f88:	00000000 	andeq	r0, r0, r0
     f8c:	0000000c 	andeq	r0, r0, ip
     f90:	0000000c 	andeq	r0, r0, ip
     f94:	00000e60 	andeq	r0, r0, r0, ror #28
     f98:	00000000 	andeq	r0, r0, r0
     f9c:	00000010 	andeq	r0, r0, r0, lsl r0
     fa0:	0000000c 	andeq	r0, r0, ip
     fa4:	00000e60 	andeq	r0, r0, r0, ror #28
     fa8:	00000000 	andeq	r0, r0, r0
     fac:	00000010 	andeq	r0, r0, r0, lsl r0
     fb0:	0000000c 	andeq	r0, r0, ip
     fb4:	00000e60 	andeq	r0, r0, r0, ror #28
     fb8:	00000000 	andeq	r0, r0, r0
     fbc:	00000010 	andeq	r0, r0, r0, lsl r0
     fc0:	0000000c 	andeq	r0, r0, ip
     fc4:	00000e60 	andeq	r0, r0, r0, ror #28
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	00000010 	andeq	r0, r0, r0, lsl r0
     fd0:	0000000c 	andeq	r0, r0, ip
     fd4:	00000e60 	andeq	r0, r0, r0, ror #28
     fd8:	00000000 	andeq	r0, r0, r0
     fdc:	00000010 	andeq	r0, r0, r0, lsl r0
     fe0:	0000000c 	andeq	r0, r0, ip
     fe4:	00000e60 	andeq	r0, r0, r0, ror #28
     fe8:	00000000 	andeq	r0, r0, r0
     fec:	00000010 	andeq	r0, r0, r0, lsl r0
     ff0:	0000000c 	andeq	r0, r0, ip
     ff4:	00000e60 	andeq	r0, r0, r0, ror #28
     ff8:	00000000 	andeq	r0, r0, r0
     ffc:	00000010 	andeq	r0, r0, r0, lsl r0
    1000:	0000000c 	andeq	r0, r0, ip
    1004:	00000e60 	andeq	r0, r0, r0, ror #28
    1008:	00000000 	andeq	r0, r0, r0
    100c:	00000010 	andeq	r0, r0, r0, lsl r0
    1010:	0000000c 	andeq	r0, r0, ip
    1014:	00000e60 	andeq	r0, r0, r0, ror #28
    1018:	00000000 	andeq	r0, r0, r0
    101c:	00000010 	andeq	r0, r0, r0, lsl r0
    1020:	0000000c 	andeq	r0, r0, ip
    1024:	00000e60 	andeq	r0, r0, r0, ror #28
    1028:	00000000 	andeq	r0, r0, r0
    102c:	0000000c 	andeq	r0, r0, ip
    1030:	0000000c 	andeq	r0, r0, ip
    1034:	00000e60 	andeq	r0, r0, r0, ror #28
    1038:	00000000 	andeq	r0, r0, r0
    103c:	0000000c 	andeq	r0, r0, ip
    1040:	0000000c 	andeq	r0, r0, ip
    1044:	00000e60 	andeq	r0, r0, r0, ror #28
    1048:	00000000 	andeq	r0, r0, r0
    104c:	0000000c 	andeq	r0, r0, ip
    1050:	0000000c 	andeq	r0, r0, ip
    1054:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1058:	7c020001 	stcvc	0, cr0, [r2], {1}
    105c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1060:	0000000c 	andeq	r0, r0, ip
    1064:	00001050 	andeq	r1, r0, r0, asr r0
    1068:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
    106c:	00000014 	andeq	r0, r0, r4, lsl r0
    1070:	0000000c 	andeq	r0, r0, ip
    1074:	00001050 	andeq	r1, r0, r0, asr r0
    1078:	00000000 	andeq	r0, r0, r0
    107c:	000000a0 	andeq	r0, r0, r0, lsr #1
    1080:	0000000c 	andeq	r0, r0, ip
    1084:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1088:	7c020001 	stcvc	0, cr0, [r2], {1}
    108c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1090:	00000014 	andeq	r0, r0, r4, lsl r0
    1094:	00001080 	andeq	r1, r0, r0, lsl #1
    1098:	080016bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, ip}
    109c:	0000002c 	andeq	r0, r0, ip, lsr #32
    10a0:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
    10a4:	0000000e 	andeq	r0, r0, lr
    10a8:	0000000c 	andeq	r0, r0, ip
    10ac:	00001080 	andeq	r1, r0, r0, lsl #1
    10b0:	080016e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, ip}
    10b4:	00000036 	andeq	r0, r0, r6, lsr r0
    10b8:	00000020 	andeq	r0, r0, r0, lsr #32
    10bc:	00001080 	andeq	r1, r0, r0, lsl #1
    10c0:	08001720 	stmdaeq	r0, {r5, r8, r9, sl, ip}
    10c4:	0000007c 	andeq	r0, r0, ip, ror r0
    10c8:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    10cc:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    10d0:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    10d4:	89038804 	stmdbhi	r3, {r2, fp, pc}
    10d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    10dc:	00000014 	andeq	r0, r0, r4, lsl r0
    10e0:	00001080 	andeq	r1, r0, r0, lsl #1
    10e4:	0800179c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl, ip}
    10e8:	00000018 	andeq	r0, r0, r8, lsl r0
    10ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    10f4:	00000014 	andeq	r0, r0, r4, lsl r0
    10f8:	00001080 	andeq	r1, r0, r0, lsl #1
    10fc:	080017b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, ip}
    1100:	00000008 	andeq	r0, r0, r8
    1104:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1108:	00018e02 	andeq	r8, r1, r2, lsl #28
    110c:	00000014 	andeq	r0, r0, r4, lsl r0
    1110:	00001080 	andeq	r1, r0, r0, lsl #1
    1114:	080017bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, ip}
    1118:	00000050 	andeq	r0, r0, r0, asr r0
    111c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1120:	00018e02 	andeq	r8, r1, r2, lsl #28
    1124:	0000001c 	andeq	r0, r0, ip, lsl r0
    1128:	00001080 	andeq	r1, r0, r0, lsl #1
    112c:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
    1130:	000001ac 	andeq	r0, r0, ip, lsr #3
    1134:	83180e41 	tsthi	r8, #1040	; 0x410
    1138:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    113c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1140:	00018e02 	andeq	r8, r1, r2, lsl #28
    1144:	0000000c 	andeq	r0, r0, ip
    1148:	00001080 	andeq	r1, r0, r0, lsl #1
    114c:	00000000 	andeq	r0, r0, r0
    1150:	00000006 	andeq	r0, r0, r6
    1154:	0000000c 	andeq	r0, r0, ip
    1158:	00001080 	andeq	r1, r0, r0, lsl #1
    115c:	00000000 	andeq	r0, r0, r0
    1160:	00000008 	andeq	r0, r0, r8
    1164:	0000000c 	andeq	r0, r0, ip
    1168:	00001080 	andeq	r1, r0, r0, lsl #1
    116c:	00000000 	andeq	r0, r0, r0
    1170:	00000008 	andeq	r0, r0, r8
    1174:	0000000c 	andeq	r0, r0, ip
    1178:	00001080 	andeq	r1, r0, r0, lsl #1
    117c:	00000000 	andeq	r0, r0, r0
    1180:	00000008 	andeq	r0, r0, r8
    1184:	0000000c 	andeq	r0, r0, ip
    1188:	00001080 	andeq	r1, r0, r0, lsl #1
    118c:	00000000 	andeq	r0, r0, r0
    1190:	00000014 	andeq	r0, r0, r4, lsl r0
    1194:	0000000c 	andeq	r0, r0, ip
    1198:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    119c:	7c020001 	stcvc	0, cr0, [r2], {1}
    11a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11a4:	00000014 	andeq	r0, r0, r4, lsl r0
    11a8:	00001194 	muleq	r0, r4, r1
    11ac:	080019b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp, ip}
    11b0:	00000088 	andeq	r0, r0, r8, lsl #1
    11b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    11b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11bc:	0000000c 	andeq	r0, r0, ip
    11c0:	00001194 	muleq	r0, r4, r1
    11c4:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
    11c8:	0000000e 	andeq	r0, r0, lr
    11cc:	00000014 	andeq	r0, r0, r4, lsl r0
    11d0:	00001194 	muleq	r0, r4, r1
    11d4:	00000000 	andeq	r0, r0, r0
    11d8:	00000020 	andeq	r0, r0, r0, lsr #32
    11dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
    11e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    11e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    11e8:	00001194 	muleq	r0, r4, r1
    11ec:	08001a50 	stmdaeq	r0, {r4, r6, r9, fp, ip}
    11f0:	0000004c 	andeq	r0, r0, ip, asr #32
    11f4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    11f8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    11fc:	180e4101 	stmdane	lr, {r0, r8, lr}
    1200:	000c0e5f 	andeq	r0, ip, pc, asr lr
    1204:	0000000c 	andeq	r0, r0, ip
    1208:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    120c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1210:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1214:	00000014 	andeq	r0, r0, r4, lsl r0
    1218:	00001204 	andeq	r1, r0, r4, lsl #4
    121c:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
    1220:	00000048 	andeq	r0, r0, r8, asr #32
    1224:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1228:	00018e02 	andeq	r8, r1, r2, lsl #28
    122c:	0000000c 	andeq	r0, r0, ip
    1230:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1234:	7c020001 	stcvc	0, cr0, [r2], {1}
    1238:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    123c:	0000000c 	andeq	r0, r0, ip
    1240:	0000122c 	andeq	r1, r0, ip, lsr #4
    1244:	00000000 	andeq	r0, r0, r0
    1248:	00000002 	andeq	r0, r0, r2
    124c:	0000000c 	andeq	r0, r0, ip
    1250:	0000122c 	andeq	r1, r0, ip, lsr #4
    1254:	00000000 	andeq	r0, r0, r0
    1258:	00000004 	andeq	r0, r0, r4
    125c:	00000014 	andeq	r0, r0, r4, lsl r0
    1260:	0000122c 	andeq	r1, r0, ip, lsr #4
    1264:	00000000 	andeq	r0, r0, r0
    1268:	00000010 	andeq	r0, r0, r0, lsl r0
    126c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1270:	00018e02 	andeq	r8, r1, r2, lsl #28
    1274:	00000014 	andeq	r0, r0, r4, lsl r0
    1278:	0000122c 	andeq	r1, r0, ip, lsr #4
    127c:	00000000 	andeq	r0, r0, r0
    1280:	0000000c 	andeq	r0, r0, ip
    1284:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1288:	00018e02 	andeq	r8, r1, r2, lsl #28
    128c:	00000018 	andeq	r0, r0, r8, lsl r0
    1290:	0000122c 	andeq	r1, r0, ip, lsr #4
    1294:	08001ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, ip}
    1298:	00000020 	andeq	r0, r0, r0, lsr #32
    129c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12a0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    12a8:	00000018 	andeq	r0, r0, r8, lsl r0
    12ac:	0000122c 	andeq	r1, r0, ip, lsr #4
    12b0:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    12b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    12b8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    12c4:	0000000c 	andeq	r0, r0, ip
    12c8:	0000122c 	andeq	r1, r0, ip, lsr #4
    12cc:	08001b20 	stmdaeq	r0, {r5, r8, r9, fp, ip}
    12d0:	00000006 	andeq	r0, r0, r6
    12d4:	0000000c 	andeq	r0, r0, ip
    12d8:	0000122c 	andeq	r1, r0, ip, lsr #4
    12dc:	08001b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, ip}
    12e0:	0000000a 	andeq	r0, r0, sl
    12e4:	0000000c 	andeq	r0, r0, ip
    12e8:	0000122c 	andeq	r1, r0, ip, lsr #4
    12ec:	08001b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip}
    12f0:	00000004 	andeq	r0, r0, r4
    12f4:	0000000c 	andeq	r0, r0, ip
    12f8:	0000122c 	andeq	r1, r0, ip, lsr #4
    12fc:	08001b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, ip}
    1300:	00000004 	andeq	r0, r0, r4
    1304:	0000001c 	andeq	r0, r0, ip, lsl r0
    1308:	0000122c 	andeq	r1, r0, ip, lsr #4
    130c:	00000000 	andeq	r0, r0, r0
    1310:	0000000a 	andeq	r0, r0, sl
    1314:	810c0e41 	tsthi	ip, r1, asr #28
    1318:	83028203 	movwhi	r8, #8707	; 0x2203
    131c:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
    1320:	00000ec1 	andeq	r0, r0, r1, asr #29
    1324:	00000014 	andeq	r0, r0, r4, lsl r0
    1328:	0000122c 	andeq	r1, r0, ip, lsr #4
    132c:	00000000 	andeq	r0, r0, r0
    1330:	00000010 	andeq	r0, r0, r0, lsl r0
    1334:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1338:	00018e02 	andeq	r8, r1, r2, lsl #28
    133c:	00000014 	andeq	r0, r0, r4, lsl r0
    1340:	0000122c 	andeq	r1, r0, ip, lsr #4
    1344:	00000000 	andeq	r0, r0, r0
    1348:	00000010 	andeq	r0, r0, r0, lsl r0
    134c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1350:	00018e02 	andeq	r8, r1, r2, lsl #28
    1354:	0000000c 	andeq	r0, r0, ip
    1358:	0000122c 	andeq	r1, r0, ip, lsr #4
    135c:	00000000 	andeq	r0, r0, r0
    1360:	00000006 	andeq	r0, r0, r6
    1364:	0000000c 	andeq	r0, r0, ip
    1368:	0000122c 	andeq	r1, r0, ip, lsr #4
    136c:	00000000 	andeq	r0, r0, r0
    1370:	0000000a 	andeq	r0, r0, sl
    1374:	00000014 	andeq	r0, r0, r4, lsl r0
    1378:	0000122c 	andeq	r1, r0, ip, lsr #4
    137c:	00000000 	andeq	r0, r0, r0
    1380:	00000010 	andeq	r0, r0, r0, lsl r0
    1384:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1388:	00018e02 	andeq	r8, r1, r2, lsl #28
    138c:	00000014 	andeq	r0, r0, r4, lsl r0
    1390:	0000122c 	andeq	r1, r0, ip, lsr #4
    1394:	00000000 	andeq	r0, r0, r0
    1398:	00000010 	andeq	r0, r0, r0, lsl r0
    139c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    13a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    13a4:	00000014 	andeq	r0, r0, r4, lsl r0
    13a8:	0000122c 	andeq	r1, r0, ip, lsr #4
    13ac:	00000000 	andeq	r0, r0, r0
    13b0:	00000010 	andeq	r0, r0, r0, lsl r0
    13b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    13b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    13bc:	0000000c 	andeq	r0, r0, ip
    13c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    13c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13cc:	0000000c 	andeq	r0, r0, ip
    13d0:	000013bc 			; <UNDEFINED> instruction: 0x000013bc
    13d4:	08001b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp, ip}
    13d8:	0000000c 	andeq	r0, r0, ip
    13dc:	0000000c 	andeq	r0, r0, ip
    13e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13e4:	7c020001 	stcvc	0, cr0, [r2], {1}
    13e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13ec:	00000018 	andeq	r0, r0, r8, lsl r0
    13f0:	000013dc 	ldrdeq	r1, [r0], -ip
    13f4:	08001b98 	stmdaeq	r0, {r3, r4, r7, r8, r9, fp, ip}
    13f8:	00000048 	andeq	r0, r0, r8, asr #32
    13fc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1400:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1404:	00018e02 	andeq	r8, r1, r2, lsl #28
    1408:	0000000c 	andeq	r0, r0, ip
    140c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1410:	7c020001 	stcvc	0, cr0, [r2], {1}
    1414:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1418:	0000000c 	andeq	r0, r0, ip
    141c:	00001408 	andeq	r1, r0, r8, lsl #8
    1420:	08001be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp, ip}
    1424:	00000010 	andeq	r0, r0, r0, lsl r0
    1428:	0000000c 	andeq	r0, r0, ip
    142c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1430:	7c020001 	stcvc	0, cr0, [r2], {1}
    1434:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1438:	0000002c 	andeq	r0, r0, ip, lsr #32
    143c:	00001428 	andeq	r1, r0, r8, lsr #8
    1440:	00000000 	andeq	r0, r0, r0
    1444:	00000028 	andeq	r0, r0, r8, lsr #32
    1448:	810c0e41 	tsthi	ip, r1, asr #28
    144c:	83028203 	movwhi	r8, #8707	; 0x2203
    1450:	200e4101 	andcs	r4, lr, r1, lsl #2
    1454:	048e0584 	streq	r0, [lr], #1412	; 0x584
    1458:	42140e4e 	andsmi	r0, r4, #1248	; 0x4e0
    145c:	0c0ec4ce 	cfstrseq	mvf12, [lr], {206}	; 0xce
    1460:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    1464:	0000000e 	andeq	r0, r0, lr
    1468:	00000030 	andeq	r0, r0, r0, lsr r0
    146c:	00001428 	andeq	r1, r0, r8, lsr #8
    1470:	08001bf0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, fp, ip}
    1474:	00000030 	andeq	r0, r0, r0, lsr r0
    1478:	80100e41 	andshi	r0, r0, r1, asr #28
    147c:	82038104 	andhi	r8, r3, #4, 2
    1480:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    1484:	0684200e 	streq	r2, [r4], lr
    1488:	0e4f058e 	cdpeq	5, 4, cr0, cr15, cr14, {4}
    148c:	c4ce4218 	strbgt	r4, [lr], #536	; 0x218
    1490:	c341100e 	movtgt	r1, #4110	; 0x100e
    1494:	0ec0c1c2 	acseqdm	f4, f2
    1498:	00000000 	andeq	r0, r0, r0
    149c:	0000000c 	andeq	r0, r0, ip
    14a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14a4:	7c020001 	stcvc	0, cr0, [r2], {1}
    14a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14ac:	00000018 	andeq	r0, r0, r8, lsl r0
    14b0:	0000149c 	muleq	r0, ip, r4
    14b4:	08001c20 	stmdaeq	r0, {r5, sl, fp, ip}
    14b8:	000000dc 	ldrdeq	r0, [r0], -ip
    14bc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    14c0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    14c8:	0000000c 	andeq	r0, r0, ip
    14cc:	0000149c 	muleq	r0, ip, r4
    14d0:	08001cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, ip}
    14d4:	00000010 	andeq	r0, r0, r0, lsl r0
    14d8:	0000000c 	andeq	r0, r0, ip
    14dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    14e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14e8:	0000001c 	andeq	r0, r0, ip, lsl r0
    14ec:	000014d8 	ldrdeq	r1, [r0], -r8
    14f0:	08001d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp, ip}
    14f4:	000000a4 	andeq	r0, r0, r4, lsr #1
    14f8:	83180e41 	tsthi	r8, #1040	; 0x410
    14fc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1500:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1504:	00018e02 	andeq	r8, r1, r2, lsl #28
    1508:	0000000c 	andeq	r0, r0, ip
    150c:	000014d8 	ldrdeq	r1, [r0], -r8
    1510:	00000000 	andeq	r0, r0, r0
    1514:	00000010 	andeq	r0, r0, r0, lsl r0
    1518:	0000000c 	andeq	r0, r0, ip
    151c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1520:	7c020001 	stcvc	0, cr0, [r2], {1}
    1524:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1528:	00000018 	andeq	r0, r0, r8, lsl r0
    152c:	00001518 	andeq	r1, r0, r8, lsl r5
    1530:	08001db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip}
    1534:	000000dc 	ldrdeq	r0, [r0], -ip
    1538:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    153c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1540:	00018e02 	andeq	r8, r1, r2, lsl #28
    1544:	0000000c 	andeq	r0, r0, ip
    1548:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    154c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1550:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1554:	0000001c 	andeq	r0, r0, ip, lsl r0
    1558:	00001544 	andeq	r1, r0, r4, asr #10
    155c:	08001e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp, ip}
    1560:	0000010c 	andeq	r0, r0, ip, lsl #2
    1564:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    1568:	86058506 	strhi	r8, [r5], -r6, lsl #10
    156c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1570:	00018e02 	andeq	r8, r1, r2, lsl #28
    1574:	00000018 	andeq	r0, r0, r8, lsl r0
    1578:	00001544 	andeq	r1, r0, r4, asr #10
    157c:	08001f98 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, fp, ip}
    1580:	00000078 	andeq	r0, r0, r8, ror r0
    1584:	83100e41 	tsthi	r0, #1040	; 0x410
    1588:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    158c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1590:	0000000c 	andeq	r0, r0, ip
    1594:	00001544 	andeq	r1, r0, r4, asr #10
    1598:	00000000 	andeq	r0, r0, r0
    159c:	00000024 	andeq	r0, r0, r4, lsr #32
    15a0:	0000000c 	andeq	r0, r0, ip
    15a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    15a8:	7c020001 	stcvc	0, cr0, [r2], {1}
    15ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    15b0:	00000014 	andeq	r0, r0, r4, lsl r0
    15b4:	000015a0 	andeq	r1, r0, r0, lsr #11
    15b8:	08002010 	stmdaeq	r0, {r4, sp}
    15bc:	00000048 	andeq	r0, r0, r8, asr #32
    15c0:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    15c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    15c8:	0000000c 	andeq	r0, r0, ip
    15cc:	000015a0 	andeq	r1, r0, r0, lsr #11
    15d0:	08002058 	stmdaeq	r0, {r3, r4, r6, sp}
    15d4:	0000000c 	andeq	r0, r0, ip
    15d8:	00000014 	andeq	r0, r0, r4, lsl r0
    15dc:	000015a0 	andeq	r1, r0, r0, lsr #11
    15e0:	00000000 	andeq	r0, r0, r0
    15e4:	00000018 	andeq	r0, r0, r8, lsl r0
    15e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    15ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    15f0:	00000014 	andeq	r0, r0, r4, lsl r0
    15f4:	000015a0 	andeq	r1, r0, r0, lsr #11
    15f8:	00000000 	andeq	r0, r0, r0
    15fc:	00000018 	andeq	r0, r0, r8, lsl r0
    1600:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1604:	00018e02 	andeq	r8, r1, r2, lsl #28
    1608:	00000018 	andeq	r0, r0, r8, lsl r0
    160c:	000015a0 	andeq	r1, r0, r0, lsr #11
    1610:	08002064 	stmdaeq	r0, {r2, r5, r6, sp}
    1614:	0000002c 	andeq	r0, r0, ip, lsr #32
    1618:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    161c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1620:	00018e02 	andeq	r8, r1, r2, lsl #28
    1624:	0000000c 	andeq	r0, r0, ip
    1628:	000015a0 	andeq	r1, r0, r0, lsr #11
    162c:	00000000 	andeq	r0, r0, r0
    1630:	0000000c 	andeq	r0, r0, ip
    1634:	0000000c 	andeq	r0, r0, ip
    1638:	000015a0 	andeq	r1, r0, r0, lsr #11
    163c:	08002090 	stmdaeq	r0, {r4, r7, sp}
    1640:	0000000c 	andeq	r0, r0, ip
    1644:	0000000c 	andeq	r0, r0, ip
    1648:	000015a0 	andeq	r1, r0, r0, lsr #11
    164c:	0800209c 	stmdaeq	r0, {r2, r3, r4, r7, sp}
    1650:	0000000c 	andeq	r0, r0, ip
    1654:	0000000c 	andeq	r0, r0, ip
    1658:	000015a0 	andeq	r1, r0, r0, lsr #11
    165c:	080020a8 	stmdaeq	r0, {r3, r5, r7, sp}
    1660:	0000000c 	andeq	r0, r0, ip
    1664:	0000000c 	andeq	r0, r0, ip
    1668:	000015a0 	andeq	r1, r0, r0, lsr #11
    166c:	080020b4 	stmdaeq	r0, {r2, r4, r5, r7, sp}
    1670:	0000000c 	andeq	r0, r0, ip
    1674:	0000001c 	andeq	r0, r0, ip, lsl r0
    1678:	000015a0 	andeq	r1, r0, r0, lsr #11
    167c:	080020c0 	stmdaeq	r0, {r6, r7, sp}
    1680:	00000070 	andeq	r0, r0, r0, ror r0
    1684:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1688:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    168c:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
    1690:	000b4200 	andeq	r4, fp, r0, lsl #4
    1694:	0000001c 	andeq	r0, r0, ip, lsl r0
    1698:	000015a0 	andeq	r1, r0, r0, lsr #11
    169c:	08002130 	stmdaeq	r0, {r4, r5, r8, sp}
    16a0:	0000008c 	andeq	r0, r0, ip, lsl #1
    16a4:	83180e41 	tsthi	r8, #1040	; 0x410
    16a8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    16ac:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    16b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16b4:	00000018 	andeq	r0, r0, r8, lsl r0
    16b8:	000015a0 	andeq	r1, r0, r0, lsr #11
    16bc:	00000000 	andeq	r0, r0, r0
    16c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    16c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    16c8:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    16cc:	000ec3ce 	andeq	ip, lr, lr, asr #7
    16d0:	00000018 	andeq	r0, r0, r8, lsl r0
    16d4:	000015a0 	andeq	r1, r0, r0, lsr #11
    16d8:	00000000 	andeq	r0, r0, r0
    16dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    16e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    16e4:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    16e8:	000ec3ce 	andeq	ip, lr, lr, asr #7
    16ec:	0000000c 	andeq	r0, r0, ip
    16f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16f4:	7c020001 	stcvc	0, cr0, [r2], {1}
    16f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1700:	000016ec 	andeq	r1, r0, ip, ror #13
    1704:	00000000 	andeq	r0, r0, r0
    1708:	0000003a 	andeq	r0, r0, sl, lsr r0
    170c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1710:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1714:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1718:	00018e02 	andeq	r8, r1, r2, lsl #28
    171c:	00000020 	andeq	r0, r0, r0, lsr #32
    1720:	000016ec 	andeq	r1, r0, ip, ror #13
    1724:	080021bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sp}
    1728:	0000003e 	andeq	r0, r0, lr, lsr r0
    172c:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    1730:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    1734:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    1738:	89038804 	stmdbhi	r3, {r2, fp, pc}
    173c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1740:	0000000c 	andeq	r0, r0, ip
    1744:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1748:	7c020001 	stcvc	0, cr0, [r2], {1}
    174c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1750:	0000000c 	andeq	r0, r0, ip
    1754:	00001740 	andeq	r1, r0, r0, asr #14
    1758:	00000000 	andeq	r0, r0, r0
    175c:	00000002 	andeq	r0, r0, r2
    1760:	0000000c 	andeq	r0, r0, ip
    1764:	00001740 	andeq	r1, r0, r0, asr #14
    1768:	080021fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, sp}
    176c:	00000002 	andeq	r0, r0, r2
    1770:	0000000c 	andeq	r0, r0, ip
    1774:	00001740 	andeq	r1, r0, r0, asr #14
    1778:	00000000 	andeq	r0, r0, r0
    177c:	00000002 	andeq	r0, r0, r2
    1780:	0000000c 	andeq	r0, r0, ip
    1784:	00001740 	andeq	r1, r0, r0, asr #14
    1788:	00000000 	andeq	r0, r0, r0
    178c:	00000002 	andeq	r0, r0, r2
    1790:	0000000c 	andeq	r0, r0, ip
    1794:	00001740 	andeq	r1, r0, r0, asr #14
    1798:	00000000 	andeq	r0, r0, r0
    179c:	00000002 	andeq	r0, r0, r2
    17a0:	0000000c 	andeq	r0, r0, ip
    17a4:	00001740 	andeq	r1, r0, r0, asr #14
    17a8:	080021fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sp}
    17ac:	00000002 	andeq	r0, r0, r2
    17b0:	0000000c 	andeq	r0, r0, ip
    17b4:	00001740 	andeq	r1, r0, r0, asr #14
    17b8:	00000000 	andeq	r0, r0, r0
    17bc:	00000004 	andeq	r0, r0, r4
    17c0:	0000000c 	andeq	r0, r0, ip
    17c4:	00001740 	andeq	r1, r0, r0, asr #14
    17c8:	00000000 	andeq	r0, r0, r0
    17cc:	00000004 	andeq	r0, r0, r4
    17d0:	0000000c 	andeq	r0, r0, ip
    17d4:	00001740 	andeq	r1, r0, r0, asr #14
    17d8:	00000000 	andeq	r0, r0, r0
    17dc:	00000002 	andeq	r0, r0, r2
    17e0:	0000000c 	andeq	r0, r0, ip
    17e4:	00001740 	andeq	r1, r0, r0, asr #14
    17e8:	080021fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sp}
    17ec:	00000002 	andeq	r0, r0, r2
    17f0:	0000000c 	andeq	r0, r0, ip
    17f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17f8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1800:	00000020 	andeq	r0, r0, r0, lsr #32
    1804:	000017f0 	strdeq	r1, [r0], -r0
    1808:	08002200 	stmdaeq	r0, {r9, sp}
    180c:	0000004a 	andeq	r0, r0, sl, asr #32
    1810:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1814:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1818:	45018e02 	strmi	r8, [r1, #-3586]	; 0xfffff1fe
    181c:	0e5e680e 	cdpeq	8, 5, cr6, cr14, cr14, {0}
    1820:	00000010 	andeq	r0, r0, r0, lsl r0
    1824:	00000020 	andeq	r0, r0, r0, lsr #32
    1828:	000017f0 	strdeq	r1, [r0], -r0
    182c:	0800224c 	stmdaeq	r0, {r2, r3, r6, r9, sp}
    1830:	00000080 	andeq	r0, r0, r0, lsl #1
    1834:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1838:	86038504 	strhi	r8, [r3], -r4, lsl #10
    183c:	4b018e02 	blmi	6504c <_Min_Heap_Size+0x6484c>
    1840:	41100e0a 	tstmi	r0, sl, lsl #28
    1844:	0000000b 	andeq	r0, r0, fp
    1848:	0000000c 	andeq	r0, r0, ip
    184c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1850:	7c020001 	stcvc	0, cr0, [r2], {1}
    1854:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1858:	00000024 	andeq	r0, r0, r4, lsr #32
    185c:	00001848 	andeq	r1, r0, r8, asr #16
    1860:	080022cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sp}
    1864:	00000098 	muleq	r0, r8, r0
    1868:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
    186c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1870:	0e0a5301 	cdpeq	3, 0, cr5, cr10, cr1, {0}
    1874:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
    1878:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    187c:	0c0e710b 	stfeqs	f7, [lr], {11}
    1880:	0000000c 	andeq	r0, r0, ip
    1884:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1888:	7c020001 	stcvc	0, cr0, [r2], {1}
    188c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1890:	00000018 	andeq	r0, r0, r8, lsl r0
    1894:	00001880 	andeq	r1, r0, r0, lsl #17
    1898:	08002364 	stmdaeq	r0, {r2, r5, r6, r8, r9, sp}
    189c:	00000040 	andeq	r0, r0, r0, asr #32
    18a0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    18a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    18a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    18ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    18b0:	00001880 	andeq	r1, r0, r0, lsl #17
    18b4:	080023a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sp}
    18b8:	000000e8 	andeq	r0, r0, r8, ror #1
    18bc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    18c0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    18c4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    18c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    18cc:	0000000c 	andeq	r0, r0, ip
    18d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    18d4:	7c020001 	stcvc	0, cr0, [r2], {1}
    18d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    18dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    18e0:	000018cc 	andeq	r1, r0, ip, asr #17
    18e4:	0800248c 	stmdaeq	r0, {r2, r3, r7, sl, sp}
    18e8:	0000002e 	andeq	r0, r0, lr, lsr #32
    18ec:	84040e44 	strhi	r0, [r4], #-3652	; 0xfffff1bc
    18f0:	c40a4901 	strgt	r4, [sl], #-2305	; 0xfffff6ff
    18f4:	0b42000e 	bleq	1081934 <_Min_Heap_Size+0x1081134>
    18f8:	000ec447 	andeq	ip, lr, r7, asr #8
    18fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1900:	000018cc 	andeq	r1, r0, ip, asr #17
    1904:	080024ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, sp}
    1908:	00000024 	andeq	r0, r0, r4, lsr #32
    190c:	83180e41 	tsthi	r8, #1040	; 0x410
    1910:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1914:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1918:	00018e02 	andeq	r8, r1, r2, lsl #28
    191c:	00000018 	andeq	r0, r0, r8, lsl r0
    1920:	000018cc 	andeq	r1, r0, ip, asr #17
    1924:	00000000 	andeq	r0, r0, r0
    1928:	0000001a 	andeq	r0, r0, sl, lsl r0
    192c:	83100e41 	tsthi	r0, #1040	; 0x410
    1930:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1934:	00018e02 	andeq	r8, r1, r2, lsl #28
    1938:	0000002c 	andeq	r0, r0, ip, lsr #32
    193c:	000018cc 	andeq	r1, r0, ip, asr #17
    1940:	080024e0 	stmdaeq	r0, {r5, r6, r7, sl, sp}
    1944:	00000260 	andeq	r0, r0, r0, ror #4
    1948:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    194c:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1950:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1954:	8a048905 	bhi	123d70 <_Min_Heap_Size+0x123570>
    1958:	8e028b03 	vmlahi.f64	d8, d2, d3
    195c:	980e4201 	stmdals	lr, {r0, r9, lr}
    1960:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    1964:	000b4224 	andeq	r4, fp, r4, lsr #4
    1968:	0000000c 	andeq	r0, r0, ip
    196c:	000018cc 	andeq	r1, r0, ip, asr #17
    1970:	00000000 	andeq	r0, r0, r0
    1974:	00000014 	andeq	r0, r0, r4, lsl r0
    1978:	0000000c 	andeq	r0, r0, ip
    197c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1980:	7c020001 	stcvc	0, cr0, [r2], {1}
    1984:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1988:	00000020 	andeq	r0, r0, r0, lsr #32
    198c:	00001978 	andeq	r1, r0, r8, ror r9
    1990:	08002740 	stmdaeq	r0, {r6, r8, r9, sl, sp}
    1994:	000000da 	ldrdeq	r0, [r0], -sl
    1998:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    199c:	86078508 	strhi	r8, [r7], -r8, lsl #10
    19a0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    19a4:	8a038904 	bhi	e3dbc <_Min_Heap_Size+0xe35bc>
    19a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    19ac:	00000028 	andeq	r0, r0, r8, lsr #32
    19b0:	00001978 	andeq	r1, r0, r8, ror r9
    19b4:	0800281c 	stmdaeq	r0, {r2, r3, r4, fp, sp}
    19b8:	0000024c 	andeq	r0, r0, ip, asr #4
    19bc:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    19c0:	86078508 	strhi	r8, [r7], -r8, lsl #10
    19c4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    19c8:	8a038904 	bhi	e3de0 <_Min_Heap_Size+0xe35e0>
    19cc:	02018e02 	andeq	r8, r1, #2, 28
    19d0:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    19d4:	00000b42 	andeq	r0, r0, r2, asr #22
    19d8:	0000000c 	andeq	r0, r0, ip
    19dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    19e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19e8:	00000018 	andeq	r0, r0, r8, lsl r0
    19ec:	000019d8 	ldrdeq	r1, [r0], -r8
    19f0:	08002a68 	stmdaeq	r0, {r3, r5, r6, r9, fp, sp}
    19f4:	00000020 	andeq	r0, r0, r0, lsr #32
    19f8:	83100e41 	tsthi	r0, #1040	; 0x410
    19fc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a00:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a0c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a10:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a14:	00000014 	andeq	r0, r0, r4, lsl r0
    1a18:	00001a04 	andeq	r1, r0, r4, lsl #20
    1a1c:	08002a88 	stmdaeq	r0, {r3, r7, r9, fp, sp}
    1a20:	00000022 	andeq	r0, r0, r2, lsr #32
    1a24:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1a28:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a2c:	0000000c 	andeq	r0, r0, ip
    1a30:	00001a04 	andeq	r1, r0, r4, lsl #20
    1a34:	00000000 	andeq	r0, r0, r0
    1a38:	00000004 	andeq	r0, r0, r4
    1a3c:	00000024 	andeq	r0, r0, r4, lsr #32
    1a40:	00001a04 	andeq	r1, r0, r4, lsl #20
    1a44:	08002aaa 	stmdaeq	r0, {r1, r3, r5, r7, r9, fp, sp}
    1a48:	00000038 	andeq	r0, r0, r8, lsr r0
    1a4c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1a50:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1a54:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1a58:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    1a5c:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1a60:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1a64:	00000014 	andeq	r0, r0, r4, lsl r0
    1a68:	00001a04 	andeq	r1, r0, r4, lsl #20
    1a6c:	08002ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp, sp}
    1a70:	00000024 	andeq	r0, r0, r4, lsr #32
    1a74:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1a78:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a7c:	0000000c 	andeq	r0, r0, ip
    1a80:	00001a04 	andeq	r1, r0, r4, lsl #20
    1a84:	08002b06 	stmdaeq	r0, {r1, r2, r8, r9, fp, sp}
    1a88:	00000008 	andeq	r0, r0, r8
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a94:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1aa0:	00001a8c 	andeq	r1, r0, ip, lsl #21
    1aa4:	08002b10 	stmdaeq	r0, {r4, r8, r9, fp, sp}
    1aa8:	00000024 	andeq	r0, r0, r4, lsr #32
    1aac:	83100e41 	tsthi	r0, #1040	; 0x410
    1ab0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ab4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ab8:	0000000c 	andeq	r0, r0, ip
    1abc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ac0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ac4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ac8:	00000018 	andeq	r0, r0, r8, lsl r0
    1acc:	00001ab8 			; <UNDEFINED> instruction: 0x00001ab8
    1ad0:	08002b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, sp}
    1ad4:	00000020 	andeq	r0, r0, r0, lsr #32
    1ad8:	83100e41 	tsthi	r0, #1040	; 0x410
    1adc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ae0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ae4:	0000000c 	andeq	r0, r0, ip
    1ae8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aec:	7c020001 	stcvc	0, cr0, [r2], {1}
    1af0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1af4:	00000018 	andeq	r0, r0, r8, lsl r0
    1af8:	00001ae4 	andeq	r1, r0, r4, ror #21
    1afc:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
    1b00:	00000024 	andeq	r0, r0, r4, lsr #32
    1b04:	83100e41 	tsthi	r0, #1040	; 0x410
    1b08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b10:	0000000c 	andeq	r0, r0, ip
    1b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b20:	00000018 	andeq	r0, r0, r8, lsl r0
    1b24:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b28:	08002b78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, fp, sp}
    1b2c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b30:	83100e41 	tsthi	r0, #1040	; 0x410
    1b34:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b38:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b3c:	0000000c 	andeq	r0, r0, ip
    1b40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b44:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b48:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b4c:	00000018 	andeq	r0, r0, r8, lsl r0
    1b50:	00001b3c 	andeq	r1, r0, ip, lsr fp
    1b54:	08002b98 	stmdaeq	r0, {r3, r4, r7, r8, r9, fp, sp}
    1b58:	00000024 	andeq	r0, r0, r4, lsr #32
    1b5c:	83100e41 	tsthi	r0, #1040	; 0x410
    1b60:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b64:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b68:	0000000c 	andeq	r0, r0, ip
    1b6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b70:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b78:	0000000c 	andeq	r0, r0, ip
    1b7c:	00001b68 	andeq	r1, r0, r8, ror #22
    1b80:	08002bbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, fp, sp}
    1b84:	0000000c 	andeq	r0, r0, ip
    1b88:	0000000c 	andeq	r0, r0, ip
    1b8c:	00001b68 	andeq	r1, r0, r8, ror #22
    1b90:	08002bc8 	stmdaeq	r0, {r3, r6, r7, r8, r9, fp, sp}
    1b94:	0000000c 	andeq	r0, r0, ip
    1b98:	0000000c 	andeq	r0, r0, ip
    1b9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ba0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ba4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ba8:	00000018 	andeq	r0, r0, r8, lsl r0
    1bac:	00001b98 	muleq	r0, r8, fp
    1bb0:	08002bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, sp}
    1bb4:	00000024 	andeq	r0, r0, r4, lsr #32
    1bb8:	83100e41 	tsthi	r0, #1040	; 0x410
    1bbc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1bc0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1bc4:	0000000c 	andeq	r0, r0, ip
    1bc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bcc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bd0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bd4:	00000020 	andeq	r0, r0, r0, lsr #32
    1bd8:	00001bc4 	andeq	r1, r0, r4, asr #23
    1bdc:	00000000 	andeq	r0, r0, r0
    1be0:	0000001a 	andeq	r0, r0, sl, lsl r0
    1be4:	83100e41 	tsthi	r0, #1040	; 0x410
    1be8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1bec:	4a018e02 	bmi	653fc <_Min_Heap_Size+0x64bfc>
    1bf0:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1bf4:	0000000e 	andeq	r0, r0, lr
    1bf8:	00000024 	andeq	r0, r0, r4, lsr #32
    1bfc:	00001bc4 	andeq	r1, r0, r4, asr #23
    1c00:	00000000 	andeq	r0, r0, r0
    1c04:	000000b8 	strheq	r0, [r0], -r8
    1c08:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    1c0c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1c10:	7f018e02 	svcvc	0x00018e02
    1c14:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1c18:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1c1c:	0000000b 	andeq	r0, r0, fp
    1c20:	0000000c 	andeq	r0, r0, ip
    1c24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c28:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c30:	00000018 	andeq	r0, r0, r8, lsl r0
    1c34:	00001c20 	andeq	r1, r0, r0, lsr #24
    1c38:	080002c0 	stmdaeq	r0, {r6, r7, r9}
    1c3c:	00000030 	andeq	r0, r0, r0, lsr r0
    1c40:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1c44:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1c48:	00000010 	andeq	r0, r0, r0, lsl r0
    1c4c:	0000000c 	andeq	r0, r0, ip
    1c50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c54:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c58:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c5c:	00000020 	andeq	r0, r0, r0, lsr #32
    1c60:	00001c4c 	andeq	r1, r0, ip, asr #24
    1c64:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
    1c68:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c6c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1c70:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1c74:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1c78:	8a038904 	bhi	e4090 <_Min_Heap_Size+0xe3890>
    1c7c:	00018e02 	andeq	r8, r1, r2, lsl #28


build/stm32-qemu.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20001238 	andcs	r1, r0, r8, lsr r2
 8000004:	08001af5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp, ip}
 8000008:	080008b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp}
 800000c:	080001d1 	stmdaeq	r0, {r0, r4, r6, r7, r8}
 8000010:	080008c9 	stmdaeq	r0, {r0, r3, r6, r7, fp}
 8000014:	080008dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp}
 8000018:	080008f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp}
	...
 800002c:	08000905 	stmdaeq	r0, {r0, r2, r8, fp}
 8000030:	08000907 	stmdaeq	r0, {r0, r1, r2, r8, fp}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000909 	stmdaeq	r0, {r0, r3, r8, fp}
 800003c:	0800090b 	stmdaeq	r0, {r0, r1, r3, r8, fp}
 8000040:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000044:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000048:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800004c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000050:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000054:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000058:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800005c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000060:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000064:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000068:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800006c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000070:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000074:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000078:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800007c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000080:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000084:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000088:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800008c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000090:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000094:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000098:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800009c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000a0:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000a4:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000a8:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000ac:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000b0:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000b4:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000b8:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000bc:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000c0:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000c4:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000c8:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000cc:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000d0:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000d4:	08000915 	stmdaeq	r0, {r0, r2, r4, r8, fp}
 80000d8:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000dc:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000e0:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000e4:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000e8:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000ec:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000f0:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000f4:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000f8:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 80000fc:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000100:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000104:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000108:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800010c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000110:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000114:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000118:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800011c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000120:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000124:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000128:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800012c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000130:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
	...
 800013c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000140:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000144:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000148:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800014c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000150:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000154:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000158:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800015c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000160:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000164:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000168:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 800016c:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000170:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000174:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
	...
 8000180:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}
 8000184:	08001b45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip}

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000070 	andcs	r0, r0, r0, ror r0
 80001ac:	00000000 	andeq	r0, r0, r0
 80001b0:	08002bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, sp}

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	andeq	r0, r0, r0
 80001c8:	20000074 	andcs	r0, r0, r4, ror r0
 80001cc:	08002bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, sp}

080001d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
 80001d0:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 80001d2:	4b0e      	ldr	r3, [pc, #56]	; (800020c <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
 80001d4:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 80001d6:	4b0e      	ldr	r3, [pc, #56]	; (8000210 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
 80001d8:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
 80001da:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
 80001de:	d105      	bne.n	80001ec <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
 80001e0:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
 80001e4:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
 80001e6:	db0a      	blt.n	80001fe <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
 80001e8:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
 80001ea:	dc08      	bgt.n	80001fe <stack_invalid>

080001ec <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
 80001ec:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
 80001f0:	f01e 0f04 	tst.w	lr, #4
    ite     eq
 80001f4:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
 80001f6:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001fa:	f3ef 8009 	mrsne	r0, PSP

080001fe <stack_invalid>:
stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
 80001fe:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000200:	4a04      	ldr	r2, [pc, #16]	; (8000214 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
 8000202:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
 8000206:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
 8000208:	4710      	bx	r2
 800020a:	01dc0000 	bicseq	r0, ip, r0
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 800020e:	01e02000 	mvneq	r2, r0
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 8000212:	18e92000 	stmiane	r9!, {sp}^
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000216:	00000800 	andeq	r0, r0, r0, lsl #16
 800021a:	00000000 	andeq	r0, r0, r0
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005c4:	b510      	push	{r4, lr}
 80005c6:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005c8:	4a0c      	ldr	r2, [pc, #48]	; (80005fc <_sbrk+0x38>)
 80005ca:	490d      	ldr	r1, [pc, #52]	; (8000600 <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80005cc:	480d      	ldr	r0, [pc, #52]	; (8000604 <_sbrk+0x40>)
 80005ce:	6800      	ldr	r0, [r0, #0]
 80005d0:	b140      	cbz	r0, 80005e4 <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80005d2:	480c      	ldr	r0, [pc, #48]	; (8000604 <_sbrk+0x40>)
 80005d4:	6800      	ldr	r0, [r0, #0]
 80005d6:	4403      	add	r3, r0
 80005d8:	1a52      	subs	r2, r2, r1
 80005da:	4293      	cmp	r3, r2
 80005dc:	d806      	bhi.n	80005ec <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80005de:	4a09      	ldr	r2, [pc, #36]	; (8000604 <_sbrk+0x40>)
 80005e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 80005e2:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80005e4:	4807      	ldr	r0, [pc, #28]	; (8000604 <_sbrk+0x40>)
 80005e6:	4c08      	ldr	r4, [pc, #32]	; (8000608 <_sbrk+0x44>)
 80005e8:	6004      	str	r4, [r0, #0]
 80005ea:	e7f2      	b.n	80005d2 <_sbrk+0xe>
    errno = ENOMEM;
 80005ec:	f001 faac 	bl	8001b48 <__errno>
 80005f0:	230c      	movs	r3, #12
 80005f2:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80005f4:	f04f 30ff 	mov.w	r0, #4294967295
 80005f8:	e7f3      	b.n	80005e2 <_sbrk+0x1e>
 80005fa:	bf00      	nop
 80005fc:	20001238 	andcs	r1, r0, r8, lsr r2
 8000600:	00000800 	andeq	r0, r0, r0, lsl #16
 8000604:	2000008c 	andcs	r0, r0, ip, lsl #1
 8000608:	20000238 	andcs	r0, r0, r8, lsr r2

0800060c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800060c:	b570      	push	{r4, r5, r6, lr}
 800060e:	460c      	mov	r4, r1
 8000610:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000612:	2500      	movs	r5, #0
 8000614:	e006      	b.n	8000624 <_read+0x18>
  {
    *ptr++ = __io_getchar();
 8000616:	f3af 8000 	nop.w
 800061a:	4621      	mov	r1, r4
 800061c:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000620:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 8000622:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000624:	42b5      	cmp	r5, r6
 8000626:	dbf6      	blt.n	8000616 <_read+0xa>
  }

  return len;
}
 8000628:	4630      	mov	r0, r6
 800062a:	bd70      	pop	{r4, r5, r6, pc}

0800062c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	460c      	mov	r4, r1
 8000630:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000632:	2500      	movs	r5, #0
 8000634:	e004      	b.n	8000640 <_write+0x14>
  {
    __io_putchar(*ptr++);
 8000636:	f814 0b01 	ldrb.w	r0, [r4], #1
 800063a:	f000 f811 	bl	8000660 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800063e:	3501      	adds	r5, #1
 8000640:	42b5      	cmp	r5, r6
 8000642:	dbf8      	blt.n	8000636 <_write+0xa>
  }
  return len;
}
 8000644:	4630      	mov	r0, r6
 8000646:	bd70      	pop	{r4, r5, r6, pc}

08000648 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000648:	f04f 30ff 	mov.w	r0, #4294967295
 800064c:	4770      	bx	lr

0800064e <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 800064e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000652:	604b      	str	r3, [r1, #4]
  return 0;
}
 8000654:	2000      	movs	r0, #0
 8000656:	4770      	bx	lr

08000658 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000658:	2001      	movs	r0, #1
 800065a:	4770      	bx	lr

0800065c <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 800065c:	2000      	movs	r0, #0
 800065e:	4770      	bx	lr

08000660 <__io_putchar>:
  * @brief  Retargets the C library printf function to the USART.
  * @param  None
  * @retval None
  */
PUTCHAR_PROTOTYPE
{
 8000660:	b500      	push	{lr}
 8000662:	b083      	sub	sp, #12
 8000664:	9001      	str	r0, [sp, #4]
  /* Place your implementation of fputc here */
  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
  HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 8000666:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800066a:	2201      	movs	r2, #1
 800066c:	a901      	add	r1, sp, #4
 800066e:	4803      	ldr	r0, [pc, #12]	; (800067c <__io_putchar+0x1c>)
 8000670:	f000 fb68 	bl	8000d44 <HAL_UART_Transmit>
  return ch;
}
 8000674:	9801      	ldr	r0, [sp, #4]
 8000676:	b003      	add	sp, #12
 8000678:	f85d fb04 	ldr.w	pc, [sp], #4
 800067c:	20000090 	mulcs	r0, r0, r0

08000680 <fault_unalign_trigger>:
  c = (a + (b / c));
  printf("c = %d\r\n", c);
}

void fault_unalign_trigger(void) 
{
 8000680:	b530      	push	{r4, r5, lr}
 8000682:	b083      	sub	sp, #12
  volatile int *addr = NULL;
  volatile int value = 0;
 8000684:	2400      	movs	r4, #0
 8000686:	9401      	str	r4, [sp, #4]
  SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
 8000688:	4a0e      	ldr	r2, [pc, #56]	; (80006c4 <fault_unalign_trigger+0x44>)
 800068a:	6953      	ldr	r3, [r2, #20]
 800068c:	f043 0308 	orr.w	r3, r3, #8
 8000690:	6153      	str	r3, [r2, #20]

  addr = (int*)0x00;
  value = *addr;
 8000692:	6823      	ldr	r3, [r4, #0]
 8000694:	9301      	str	r3, [sp, #4]
  printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 8000696:	9a01      	ldr	r2, [sp, #4]
 8000698:	4d0b      	ldr	r5, [pc, #44]	; (80006c8 <fault_unalign_trigger+0x48>)
 800069a:	4621      	mov	r1, r4
 800069c:	4628      	mov	r0, r5
 800069e:	f001 fa85 	bl	8001bac <iprintf>
  addr = (int*)0x04;
  value = *addr;
 80006a2:	6863      	ldr	r3, [r4, #4]
 80006a4:	9301      	str	r3, [sp, #4]
  printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 80006a6:	9a01      	ldr	r2, [sp, #4]
 80006a8:	2104      	movs	r1, #4
 80006aa:	4628      	mov	r0, r5
 80006ac:	f001 fa7e 	bl	8001bac <iprintf>
  addr = (int*)0x03;
  value = *addr;
 80006b0:	f8d4 3003 	ldr.w	r3, [r4, #3]
 80006b4:	9301      	str	r3, [sp, #4]
  printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 80006b6:	9a01      	ldr	r2, [sp, #4]
 80006b8:	2103      	movs	r1, #3
 80006ba:	4628      	mov	r0, r5
 80006bc:	f001 fa76 	bl	8001bac <iprintf>
}
 80006c0:	b003      	add	sp, #12
 80006c2:	bd30      	pop	{r4, r5, pc}
 80006c4:	e000ed00 	and	lr, r0, r0, lsl #26
 80006c8:	08002bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp, sp}

080006cc <test0>:

void test0(void)
{
 80006cc:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 80006ce:	4903      	ldr	r1, [pc, #12]	; (80006dc <test0+0x10>)
 80006d0:	4803      	ldr	r0, [pc, #12]	; (80006e0 <test0+0x14>)
 80006d2:	f001 fa6b 	bl	8001bac <iprintf>
  // trigger a fault.
  //float a = 0.0, b = 1.1;
  //printf("this is %f.\r\n", (a + b));
  fault_unalign_trigger();
 80006d6:	f7ff ffd3 	bl	8000680 <fault_unalign_trigger>
}
 80006da:	bd08      	pop	{r3, pc}
 80006dc:	08002c50 	stmdaeq	r0, {r4, r6, sl, fp, sp}
 80006e0:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080006e4 <test1>:

void test1(void)
{
 80006e4:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 80006e6:	4903      	ldr	r1, [pc, #12]	; (80006f4 <test1+0x10>)
 80006e8:	4803      	ldr	r0, [pc, #12]	; (80006f8 <test1+0x14>)
 80006ea:	f001 fa5f 	bl	8001bac <iprintf>
  test0();
 80006ee:	f7ff ffed 	bl	80006cc <test0>
}
 80006f2:	bd08      	pop	{r3, pc}
 80006f4:	08002c48 	stmdaeq	r0, {r3, r6, sl, fp, sp}
 80006f8:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080006fc <test2>:

void test2(void)
{
 80006fc:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 80006fe:	4903      	ldr	r1, [pc, #12]	; (800070c <test2+0x10>)
 8000700:	4803      	ldr	r0, [pc, #12]	; (8000710 <test2+0x14>)
 8000702:	f001 fa53 	bl	8001bac <iprintf>
  test1();
 8000706:	f7ff ffed 	bl	80006e4 <test1>
}
 800070a:	bd08      	pop	{r3, pc}
 800070c:	08002c40 	stmdaeq	r0, {r6, sl, fp, sp}
 8000710:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

08000714 <test3>:

void test3(void)
{
 8000714:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000716:	4903      	ldr	r1, [pc, #12]	; (8000724 <test3+0x10>)
 8000718:	4803      	ldr	r0, [pc, #12]	; (8000728 <test3+0x14>)
 800071a:	f001 fa47 	bl	8001bac <iprintf>
  test2();
 800071e:	f7ff ffed 	bl	80006fc <test2>
}
 8000722:	bd08      	pop	{r3, pc}
 8000724:	08002c38 	stmdaeq	r0, {r3, r4, r5, sl, fp, sp}
 8000728:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

0800072c <test4>:

void test4(void)
{
 800072c:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 800072e:	4903      	ldr	r1, [pc, #12]	; (800073c <test4+0x10>)
 8000730:	4803      	ldr	r0, [pc, #12]	; (8000740 <test4+0x14>)
 8000732:	f001 fa3b 	bl	8001bac <iprintf>
  test3();
 8000736:	f7ff ffed 	bl	8000714 <test3>
}
 800073a:	bd08      	pop	{r3, pc}
 800073c:	08002c30 	stmdaeq	r0, {r4, r5, sl, fp, sp}
 8000740:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

08000744 <test5>:

void test5(void)
{
 8000744:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000746:	4903      	ldr	r1, [pc, #12]	; (8000754 <test5+0x10>)
 8000748:	4803      	ldr	r0, [pc, #12]	; (8000758 <test5+0x14>)
 800074a:	f001 fa2f 	bl	8001bac <iprintf>
  test4();
 800074e:	f7ff ffed 	bl	800072c <test4>
}
 8000752:	bd08      	pop	{r3, pc}
 8000754:	08002c28 	stmdaeq	r0, {r3, r5, sl, fp, sp}
 8000758:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

0800075c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800075c:	b508      	push	{r3, lr}
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800075e:	f000 ffd5 	bl	800170c <HAL_Init>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000762:	f000 f827 	bl	80007b4 <MX_GPIO_Init>
  MX_USART1_UART_Init();
 8000766:	f000 f84b 	bl	8000800 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  fault_dump_init();
 800076a:	f001 f857 	bl	800181c <fault_dump_init>
  test5();
 800076e:	f7ff ffe9 	bl	8000744 <test5>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    printf("%s", "hello qemu.\r\n");
 8000772:	4804      	ldr	r0, [pc, #16]	; (8000784 <main+0x28>)
 8000774:	f001 faa0 	bl	8001cb8 <puts>
    HAL_Delay(1000);
 8000778:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800077c:	f000 fff2 	bl	8001764 <HAL_Delay>
  while (1)
 8000780:	e7f7      	b.n	8000772 <main+0x16>
 8000782:	bf00      	nop
 8000784:	08002bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, sp}

08000788 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000788:	b508      	push	{r3, lr}
  /* USER CODE BEGIN Error_Handler_Debug */
	printf("this is %s.\r\n", __func__);
 800078a:	4903      	ldr	r1, [pc, #12]	; (8000798 <Error_Handler+0x10>)
 800078c:	4803      	ldr	r0, [pc, #12]	; (800079c <Error_Handler+0x14>)
 800078e:	f001 fa0d 	bl	8001bac <iprintf>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000792:	b672      	cpsid	i
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000794:	e7fe      	b.n	8000794 <Error_Handler+0xc>
 8000796:	bf00      	nop
 8000798:	08002c18 	stmdaeq	r0, {r3, r4, sl, fp, sp}
 800079c:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080007a0 <assert_failed>:
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
 80007a0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 6 */
  printf("this is %s.\r\n", __func__);
 80007a2:	4902      	ldr	r1, [pc, #8]	; (80007ac <assert_failed+0xc>)
 80007a4:	4802      	ldr	r0, [pc, #8]	; (80007b0 <assert_failed+0x10>)
 80007a6:	f001 fa01 	bl	8001bac <iprintf>
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
  /* USER CODE END 6 */
}
 80007aa:	bd08      	pop	{r3, pc}
 80007ac:	08002c08 	stmdaeq	r0, {r3, sl, fp, sp}
 80007b0:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080007b4 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80007b4:	b084      	sub	sp, #16

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80007b6:	2200      	movs	r2, #0
 80007b8:	9201      	str	r2, [sp, #4]
 80007ba:	4b10      	ldr	r3, [pc, #64]	; (80007fc <MX_GPIO_Init+0x48>)
 80007bc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80007be:	f041 0104 	orr.w	r1, r1, #4
 80007c2:	6319      	str	r1, [r3, #48]	; 0x30
 80007c4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80007c6:	f001 0104 	and.w	r1, r1, #4
 80007ca:	9101      	str	r1, [sp, #4]
 80007cc:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80007ce:	9202      	str	r2, [sp, #8]
 80007d0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80007d2:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80007d6:	6319      	str	r1, [r3, #48]	; 0x30
 80007d8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80007da:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80007de:	9102      	str	r1, [sp, #8]
 80007e0:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007e2:	9203      	str	r2, [sp, #12]
 80007e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80007e6:	f042 0201 	orr.w	r2, r2, #1
 80007ea:	631a      	str	r2, [r3, #48]	; 0x30
 80007ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007ee:	f003 0301 	and.w	r3, r3, #1
 80007f2:	9303      	str	r3, [sp, #12]
 80007f4:	9b03      	ldr	r3, [sp, #12]

}
 80007f6:	b004      	add	sp, #16
 80007f8:	4770      	bx	lr
 80007fa:	bf00      	nop
 80007fc:	40023800 	andmi	r3, r2, r0, lsl #16

08000800 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8000800:	b508      	push	{r3, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000802:	480a      	ldr	r0, [pc, #40]	; (800082c <MX_USART1_UART_Init+0x2c>)
 8000804:	4b0a      	ldr	r3, [pc, #40]	; (8000830 <MX_USART1_UART_Init+0x30>)
 8000806:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 8000808:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 800080c:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800080e:	2300      	movs	r3, #0
 8000810:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000812:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000814:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000816:	220c      	movs	r2, #12
 8000818:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800081a:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800081c:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800081e:	f000 f9fb 	bl	8000c18 <HAL_UART_Init>
 8000822:	b900      	cbnz	r0, 8000826 <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000824:	bd08      	pop	{r3, pc}
    Error_Handler();
 8000826:	f7ff ffaf 	bl	8000788 <Error_Handler>
}
 800082a:	e7fb      	b.n	8000824 <MX_USART1_UART_Init+0x24>
 800082c:	20000090 	mulcs	r0, r0, r0
 8000830:	40011000 	andmi	r1, r1, r0

08000834 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8000834:	b510      	push	{r4, lr}
 8000836:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000838:	2300      	movs	r3, #0
 800083a:	9303      	str	r3, [sp, #12]
 800083c:	9304      	str	r3, [sp, #16]
 800083e:	9305      	str	r3, [sp, #20]
 8000840:	9306      	str	r3, [sp, #24]
 8000842:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 8000844:	6802      	ldr	r2, [r0, #0]
 8000846:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800084a:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 800084e:	429a      	cmp	r2, r3
 8000850:	d001      	beq.n	8000856 <HAL_UART_MspInit+0x22>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8000852:	b008      	add	sp, #32
 8000854:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 8000856:	2400      	movs	r4, #0
 8000858:	9401      	str	r4, [sp, #4]
 800085a:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 800085e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000860:	f042 0210 	orr.w	r2, r2, #16
 8000864:	645a      	str	r2, [r3, #68]	; 0x44
 8000866:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000868:	f002 0210 	and.w	r2, r2, #16
 800086c:	9201      	str	r2, [sp, #4]
 800086e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000870:	9402      	str	r4, [sp, #8]
 8000872:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000874:	f042 0201 	orr.w	r2, r2, #1
 8000878:	631a      	str	r2, [r3, #48]	; 0x30
 800087a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800087c:	f003 0301 	and.w	r3, r3, #1
 8000880:	9302      	str	r3, [sp, #8]
 8000882:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8000884:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000888:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800088a:	2302      	movs	r3, #2
 800088c:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800088e:	2303      	movs	r3, #3
 8000890:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8000892:	2307      	movs	r3, #7
 8000894:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000896:	a903      	add	r1, sp, #12
 8000898:	4805      	ldr	r0, [pc, #20]	; (80008b0 <HAL_UART_MspInit+0x7c>)
 800089a:	f000 fcaf 	bl	80011fc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800089e:	4622      	mov	r2, r4
 80008a0:	4621      	mov	r1, r4
 80008a2:	2025      	movs	r0, #37	; 0x25
 80008a4:	f000 fe9a 	bl	80015dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80008a8:	2025      	movs	r0, #37	; 0x25
 80008aa:	f000 fedd 	bl	8001668 <HAL_NVIC_EnableIRQ>
}
 80008ae:	e7d0      	b.n	8000852 <HAL_UART_MspInit+0x1e>
 80008b0:	40020000 	andmi	r0, r2, r0

080008b4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80008b4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80008b6:	4902      	ldr	r1, [pc, #8]	; (80008c0 <NMI_Handler+0xc>)
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <NMI_Handler+0x10>)
 80008ba:	f001 f977 	bl	8001bac <iprintf>
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80008be:	e7fe      	b.n	80008be <NMI_Handler+0xa>
 80008c0:	08002c94 	stmdaeq	r0, {r2, r4, r7, sl, fp, sp}
 80008c4:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080008c8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80008c8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80008ca:	4902      	ldr	r1, [pc, #8]	; (80008d4 <MemManage_Handler+0xc>)
 80008cc:	4802      	ldr	r0, [pc, #8]	; (80008d8 <MemManage_Handler+0x10>)
 80008ce:	f001 f96d 	bl	8001bac <iprintf>
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80008d2:	e7fe      	b.n	80008d2 <MemManage_Handler+0xa>
 80008d4:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
 80008d8:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080008dc <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80008dc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BusFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80008de:	4902      	ldr	r1, [pc, #8]	; (80008e8 <BusFault_Handler+0xc>)
 80008e0:	4802      	ldr	r0, [pc, #8]	; (80008ec <BusFault_Handler+0x10>)
 80008e2:	f001 f963 	bl	8001bac <iprintf>
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80008e6:	e7fe      	b.n	80008e6 <BusFault_Handler+0xa>
 80008e8:	08002c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp, sp}
 80008ec:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

080008f0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80008f0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UsageFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80008f2:	4902      	ldr	r1, [pc, #8]	; (80008fc <UsageFault_Handler+0xc>)
 80008f4:	4802      	ldr	r0, [pc, #8]	; (8000900 <UsageFault_Handler+0x10>)
 80008f6:	f001 f959 	bl	8001bac <iprintf>
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80008fa:	e7fe      	b.n	80008fa <UsageFault_Handler+0xa>
 80008fc:	08002c58 	stmdaeq	r0, {r3, r4, r6, sl, fp, sp}
 8000900:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}

08000904 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000904:	4770      	bx	lr

08000906 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000906:	4770      	bx	lr

08000908 <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000908:	4770      	bx	lr

0800090a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800090a:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800090c:	f000 ff18 	bl	8001740 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000910:	bd08      	pop	{r3, pc}
	...

08000914 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8000914:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8000916:	4802      	ldr	r0, [pc, #8]	; (8000920 <USART1_IRQHandler+0xc>)
 8000918:	f000 fb06 	bl	8000f28 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 800091c:	bd08      	pop	{r3, pc}
 800091e:	bf00      	nop
 8000920:	20000090 	mulcs	r0, r0, r0

08000924 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000924:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000926:	2100      	movs	r1, #0
 8000928:	9100      	str	r1, [sp, #0]
 800092a:	4b0b      	ldr	r3, [pc, #44]	; (8000958 <HAL_MspInit+0x34>)
 800092c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800092e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000932:	645a      	str	r2, [r3, #68]	; 0x44
 8000934:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000936:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800093a:	9200      	str	r2, [sp, #0]
 800093c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800093e:	9101      	str	r1, [sp, #4]
 8000940:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000942:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000946:	641a      	str	r2, [r3, #64]	; 0x40
 8000948:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800094a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800094e:	9301      	str	r3, [sp, #4]
 8000950:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000952:	b002      	add	sp, #8
 8000954:	4770      	bx	lr
 8000956:	bf00      	nop
 8000958:	40023800 	andmi	r3, r2, r0, lsl #16

0800095c <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800095c:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800095e:	f102 030c 	add.w	r3, r2, #12
 8000962:	e853 3f00 	ldrex	r3, [r3]
 8000966:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800096a:	320c      	adds	r2, #12
 800096c:	e842 3100 	strex	r1, r3, [r2]
 8000970:	2900      	cmp	r1, #0
 8000972:	d1f3      	bne.n	800095c <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8000974:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000976:	f102 0314 	add.w	r3, r2, #20
 800097a:	e853 3f00 	ldrex	r3, [r3]
 800097e:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000982:	3214      	adds	r2, #20
 8000984:	e842 3100 	strex	r1, r3, [r2]
 8000988:	2900      	cmp	r1, #0
 800098a:	d1f3      	bne.n	8000974 <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800098c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800098e:	2b01      	cmp	r3, #1
 8000990:	d005      	beq.n	800099e <UART_EndRxTransfer+0x42>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8000992:	2320      	movs	r3, #32
 8000994:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000998:	2300      	movs	r3, #0
 800099a:	6303      	str	r3, [r0, #48]	; 0x30
}
 800099c:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800099e:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80009a0:	f102 030c 	add.w	r3, r2, #12
 80009a4:	e853 3f00 	ldrex	r3, [r3]
 80009a8:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80009ac:	320c      	adds	r2, #12
 80009ae:	e842 3100 	strex	r1, r3, [r2]
 80009b2:	2900      	cmp	r1, #0
 80009b4:	d1f3      	bne.n	800099e <UART_EndRxTransfer+0x42>
 80009b6:	e7ec      	b.n	8000992 <UART_EndRxTransfer+0x36>

080009b8 <UART_Transmit_IT>:
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80009b8:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80009bc:	b2db      	uxtb	r3, r3
 80009be:	2b21      	cmp	r3, #33	; 0x21
 80009c0:	d001      	beq.n	80009c6 <UART_Transmit_IT+0xe>
    }
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 80009c2:	2002      	movs	r0, #2
  }
}
 80009c4:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80009c6:	6883      	ldr	r3, [r0, #8]
 80009c8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80009cc:	d017      	beq.n	80009fe <UART_Transmit_IT+0x46>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80009ce:	6a03      	ldr	r3, [r0, #32]
 80009d0:	1c5a      	adds	r2, r3, #1
 80009d2:	6202      	str	r2, [r0, #32]
 80009d4:	781a      	ldrb	r2, [r3, #0]
 80009d6:	6803      	ldr	r3, [r0, #0]
 80009d8:	605a      	str	r2, [r3, #4]
    if (--huart->TxXferCount == 0U)
 80009da:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80009dc:	b29b      	uxth	r3, r3
 80009de:	3b01      	subs	r3, #1
 80009e0:	b29b      	uxth	r3, r3
 80009e2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80009e4:	b94b      	cbnz	r3, 80009fa <UART_Transmit_IT+0x42>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80009e6:	6802      	ldr	r2, [r0, #0]
 80009e8:	68d3      	ldr	r3, [r2, #12]
 80009ea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80009ee:	60d3      	str	r3, [r2, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80009f0:	6802      	ldr	r2, [r0, #0]
 80009f2:	68d3      	ldr	r3, [r2, #12]
 80009f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009f8:	60d3      	str	r3, [r2, #12]
    return HAL_OK;
 80009fa:	2000      	movs	r0, #0
 80009fc:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80009fe:	6903      	ldr	r3, [r0, #16]
 8000a00:	2b00      	cmp	r3, #0
 8000a02:	d1e4      	bne.n	80009ce <UART_Transmit_IT+0x16>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8000a04:	6a03      	ldr	r3, [r0, #32]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8000a06:	881b      	ldrh	r3, [r3, #0]
 8000a08:	6802      	ldr	r2, [r0, #0]
 8000a0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000a0e:	6053      	str	r3, [r2, #4]
      huart->pTxBuffPtr += 2U;
 8000a10:	6a03      	ldr	r3, [r0, #32]
 8000a12:	3302      	adds	r3, #2
 8000a14:	6203      	str	r3, [r0, #32]
 8000a16:	e7e0      	b.n	80009da <UART_Transmit_IT+0x22>

08000a18 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8000a18:	b538      	push	{r3, r4, r5, lr}
 8000a1a:	4604      	mov	r4, r0
  uint32_t tmpreg;
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000a1c:	6842      	ldr	r2, [r0, #4]
 8000a1e:	4b57      	ldr	r3, [pc, #348]	; (8000b7c <UART_SetConfig+0x164>)
 8000a20:	429a      	cmp	r2, r3
 8000a22:	d83f      	bhi.n	8000aa4 <UART_SetConfig+0x8c>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000a24:	68e3      	ldr	r3, [r4, #12]
 8000a26:	b113      	cbz	r3, 8000a2e <UART_SetConfig+0x16>
 8000a28:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000a2c:	d140      	bne.n	8000ab0 <UART_SetConfig+0x98>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000a2e:	6923      	ldr	r3, [r4, #16]
 8000a30:	b12b      	cbz	r3, 8000a3e <UART_SetConfig+0x26>
 8000a32:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000a36:	d002      	beq.n	8000a3e <UART_SetConfig+0x26>
 8000a38:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000a3c:	d13e      	bne.n	8000abc <UART_SetConfig+0xa4>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 8000a3e:	6963      	ldr	r3, [r4, #20]
 8000a40:	f64f 72f3 	movw	r2, #65523	; 0xfff3
 8000a44:	4213      	tst	r3, r2
 8000a46:	d100      	bne.n	8000a4a <UART_SetConfig+0x32>
 8000a48:	b923      	cbnz	r3, 8000a54 <UART_SetConfig+0x3c>
 8000a4a:	f640 6178 	movw	r1, #3704	; 0xe78
 8000a4e:	484c      	ldr	r0, [pc, #304]	; (8000b80 <UART_SetConfig+0x168>)
 8000a50:	f7ff fea6 	bl	80007a0 <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8000a54:	6822      	ldr	r2, [r4, #0]
 8000a56:	6913      	ldr	r3, [r2, #16]
 8000a58:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000a5c:	68e1      	ldr	r1, [r4, #12]
 8000a5e:	430b      	orrs	r3, r1
 8000a60:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8000a62:	68a3      	ldr	r3, [r4, #8]
 8000a64:	6922      	ldr	r2, [r4, #16]
 8000a66:	4313      	orrs	r3, r2
 8000a68:	6962      	ldr	r2, [r4, #20]
 8000a6a:	4313      	orrs	r3, r2
 8000a6c:	69e2      	ldr	r2, [r4, #28]
 8000a6e:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1,
 8000a70:	6821      	ldr	r1, [r4, #0]
 8000a72:	68cb      	ldr	r3, [r1, #12]
 8000a74:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8000a78:	f023 030c 	bic.w	r3, r3, #12
 8000a7c:	4313      	orrs	r3, r2
 8000a7e:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8000a80:	6822      	ldr	r2, [r4, #0]
 8000a82:	6953      	ldr	r3, [r2, #20]
 8000a84:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000a88:	69a1      	ldr	r1, [r4, #24]
 8000a8a:	430b      	orrs	r3, r1
 8000a8c:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8000a8e:	6823      	ldr	r3, [r4, #0]
 8000a90:	4a3c      	ldr	r2, [pc, #240]	; (8000b84 <UART_SetConfig+0x16c>)
 8000a92:	4293      	cmp	r3, r2
 8000a94:	d018      	beq.n	8000ac8 <UART_SetConfig+0xb0>
 8000a96:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000a9a:	4293      	cmp	r3, r2
 8000a9c:	d014      	beq.n	8000ac8 <UART_SetConfig+0xb0>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8000a9e:	f000 fb8d 	bl	80011bc <HAL_RCC_GetPCLK1Freq>
 8000aa2:	e013      	b.n	8000acc <UART_SetConfig+0xb4>
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000aa4:	f640 6175 	movw	r1, #3701	; 0xe75
 8000aa8:	4835      	ldr	r0, [pc, #212]	; (8000b80 <UART_SetConfig+0x168>)
 8000aaa:	f7ff fe79 	bl	80007a0 <assert_failed>
 8000aae:	e7b9      	b.n	8000a24 <UART_SetConfig+0xc>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000ab0:	f640 6176 	movw	r1, #3702	; 0xe76
 8000ab4:	4832      	ldr	r0, [pc, #200]	; (8000b80 <UART_SetConfig+0x168>)
 8000ab6:	f7ff fe73 	bl	80007a0 <assert_failed>
 8000aba:	e7b8      	b.n	8000a2e <UART_SetConfig+0x16>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000abc:	f640 6177 	movw	r1, #3703	; 0xe77
 8000ac0:	482f      	ldr	r0, [pc, #188]	; (8000b80 <UART_SetConfig+0x168>)
 8000ac2:	f7ff fe6d 	bl	80007a0 <assert_failed>
 8000ac6:	e7ba      	b.n	8000a3e <UART_SetConfig+0x26>
      pclk = HAL_RCC_GetPCLK2Freq();
 8000ac8:	f000 fb88 	bl	80011dc <HAL_RCC_GetPCLK2Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8000acc:	69e3      	ldr	r3, [r4, #28]
 8000ace:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000ad2:	d029      	beq.n	8000b28 <UART_SetConfig+0x110>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8000ad4:	2100      	movs	r1, #0
 8000ad6:	1803      	adds	r3, r0, r0
 8000ad8:	4149      	adcs	r1, r1
 8000ada:	181b      	adds	r3, r3, r0
 8000adc:	f141 0100 	adc.w	r1, r1, #0
 8000ae0:	00c9      	lsls	r1, r1, #3
 8000ae2:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
 8000ae6:	00db      	lsls	r3, r3, #3
 8000ae8:	1818      	adds	r0, r3, r0
 8000aea:	6863      	ldr	r3, [r4, #4]
 8000aec:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8000af0:	ea4f 7393 	mov.w	r3, r3, lsr #30
 8000af4:	f141 0100 	adc.w	r1, r1, #0
 8000af8:	f7ff fbe2 	bl	80002c0 <__aeabi_uldivmod>
 8000afc:	4d22      	ldr	r5, [pc, #136]	; (8000b88 <UART_SetConfig+0x170>)
 8000afe:	fba5 3200 	umull	r3, r2, r5, r0
 8000b02:	0951      	lsrs	r1, r2, #5
 8000b04:	2364      	movs	r3, #100	; 0x64
 8000b06:	fb03 0311 	mls	r3, r3, r1, r0
 8000b0a:	011b      	lsls	r3, r3, #4
 8000b0c:	3332      	adds	r3, #50	; 0x32
 8000b0e:	fba5 2303 	umull	r2, r3, r5, r3
 8000b12:	095b      	lsrs	r3, r3, #5
 8000b14:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8000b18:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000b1c:	f003 030f 	and.w	r3, r3, #15
 8000b20:	6821      	ldr	r1, [r4, #0]
 8000b22:	4413      	add	r3, r2
 8000b24:	608b      	str	r3, [r1, #8]
  }
}
 8000b26:	bd38      	pop	{r3, r4, r5, pc}
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8000b28:	2300      	movs	r3, #0
 8000b2a:	1802      	adds	r2, r0, r0
 8000b2c:	eb43 0103 	adc.w	r1, r3, r3
 8000b30:	1812      	adds	r2, r2, r0
 8000b32:	f141 0100 	adc.w	r1, r1, #0
 8000b36:	00c9      	lsls	r1, r1, #3
 8000b38:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8000b3c:	00d2      	lsls	r2, r2, #3
 8000b3e:	1810      	adds	r0, r2, r0
 8000b40:	f141 0100 	adc.w	r1, r1, #0
 8000b44:	6862      	ldr	r2, [r4, #4]
 8000b46:	1892      	adds	r2, r2, r2
 8000b48:	415b      	adcs	r3, r3
 8000b4a:	f7ff fbb9 	bl	80002c0 <__aeabi_uldivmod>
 8000b4e:	4d0e      	ldr	r5, [pc, #56]	; (8000b88 <UART_SetConfig+0x170>)
 8000b50:	fba5 3200 	umull	r3, r2, r5, r0
 8000b54:	0951      	lsrs	r1, r2, #5
 8000b56:	2364      	movs	r3, #100	; 0x64
 8000b58:	fb03 0311 	mls	r3, r3, r1, r0
 8000b5c:	00db      	lsls	r3, r3, #3
 8000b5e:	3332      	adds	r3, #50	; 0x32
 8000b60:	fba5 2303 	umull	r2, r3, r5, r3
 8000b64:	095b      	lsrs	r3, r3, #5
 8000b66:	005a      	lsls	r2, r3, #1
 8000b68:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8000b6c:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000b70:	f003 0307 	and.w	r3, r3, #7
 8000b74:	6821      	ldr	r1, [r4, #0]
 8000b76:	4413      	add	r3, r2
 8000b78:	608b      	str	r3, [r1, #8]
 8000b7a:	e7d4      	b.n	8000b26 <UART_SetConfig+0x10e>
 8000b7c:	00a037a0 	adceq	r3, r0, r0, lsr #15
 8000b80:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}
 8000b84:	40011000 	andmi	r1, r1, r0
 8000b88:	51eb851f 	mvnpl	r8, pc, lsl r5

08000b8c <UART_WaitOnFlagUntilTimeout>:
{
 8000b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000b90:	b083      	sub	sp, #12
 8000b92:	4605      	mov	r5, r0
 8000b94:	460e      	mov	r6, r1
 8000b96:	4617      	mov	r7, r2
 8000b98:	4699      	mov	r9, r3
 8000b9a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8000b9e:	682c      	ldr	r4, [r5, #0]
 8000ba0:	6824      	ldr	r4, [r4, #0]
 8000ba2:	ea36 0304 	bics.w	r3, r6, r4
 8000ba6:	bf0c      	ite	eq
 8000ba8:	f04f 0c01 	moveq.w	ip, #1
 8000bac:	f04f 0c00 	movne.w	ip, #0
 8000bb0:	45bc      	cmp	ip, r7
 8000bb2:	d128      	bne.n	8000c06 <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8000bb4:	f1b8 3fff 	cmp.w	r8, #4294967295
 8000bb8:	d0f1      	beq.n	8000b9e <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8000bba:	f000 fdcd 	bl	8001758 <HAL_GetTick>
 8000bbe:	eba0 0009 	sub.w	r0, r0, r9
 8000bc2:	4540      	cmp	r0, r8
 8000bc4:	d823      	bhi.n	8000c0e <UART_WaitOnFlagUntilTimeout+0x82>
 8000bc6:	f1b8 0f00 	cmp.w	r8, #0
 8000bca:	d022      	beq.n	8000c12 <UART_WaitOnFlagUntilTimeout+0x86>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8000bcc:	682b      	ldr	r3, [r5, #0]
 8000bce:	68da      	ldr	r2, [r3, #12]
 8000bd0:	f012 0f04 	tst.w	r2, #4
 8000bd4:	d0e3      	beq.n	8000b9e <UART_WaitOnFlagUntilTimeout+0x12>
 8000bd6:	2e80      	cmp	r6, #128	; 0x80
 8000bd8:	d0e1      	beq.n	8000b9e <UART_WaitOnFlagUntilTimeout+0x12>
 8000bda:	2e40      	cmp	r6, #64	; 0x40
 8000bdc:	d0df      	beq.n	8000b9e <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8000bde:	681a      	ldr	r2, [r3, #0]
 8000be0:	f012 0f08 	tst.w	r2, #8
 8000be4:	d0db      	beq.n	8000b9e <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8000be6:	2400      	movs	r4, #0
 8000be8:	9401      	str	r4, [sp, #4]
 8000bea:	681a      	ldr	r2, [r3, #0]
 8000bec:	9201      	str	r2, [sp, #4]
 8000bee:	685b      	ldr	r3, [r3, #4]
 8000bf0:	9301      	str	r3, [sp, #4]
 8000bf2:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8000bf4:	4628      	mov	r0, r5
 8000bf6:	f7ff feb1 	bl	800095c <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8000bfa:	2308      	movs	r3, #8
 8000bfc:	646b      	str	r3, [r5, #68]	; 0x44
          __HAL_UNLOCK(huart);
 8000bfe:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
          return HAL_ERROR;
 8000c02:	2001      	movs	r0, #1
 8000c04:	e000      	b.n	8000c08 <UART_WaitOnFlagUntilTimeout+0x7c>
  return HAL_OK;
 8000c06:	2000      	movs	r0, #0
}
 8000c08:	b003      	add	sp, #12
 8000c0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
 8000c0e:	2003      	movs	r0, #3
 8000c10:	e7fa      	b.n	8000c08 <UART_WaitOnFlagUntilTimeout+0x7c>
 8000c12:	2003      	movs	r0, #3
 8000c14:	e7f8      	b.n	8000c08 <UART_WaitOnFlagUntilTimeout+0x7c>
	...

08000c18 <HAL_UART_Init>:
  if (huart == NULL)
 8000c18:	2800      	cmp	r0, #0
 8000c1a:	f000 808c 	beq.w	8000d36 <HAL_UART_Init+0x11e>
{
 8000c1e:	b510      	push	{r4, lr}
 8000c20:	4604      	mov	r4, r0
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8000c22:	6983      	ldr	r3, [r0, #24]
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	d056      	beq.n	8000cd6 <HAL_UART_Init+0xbe>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8000c28:	6803      	ldr	r3, [r0, #0]
 8000c2a:	4a44      	ldr	r2, [pc, #272]	; (8000d3c <HAL_UART_Init+0x124>)
 8000c2c:	4293      	cmp	r3, r2
 8000c2e:	d010      	beq.n	8000c52 <HAL_UART_Init+0x3a>
 8000c30:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000c34:	4293      	cmp	r3, r2
 8000c36:	d00c      	beq.n	8000c52 <HAL_UART_Init+0x3a>
 8000c38:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c3c:	4293      	cmp	r3, r2
 8000c3e:	d008      	beq.n	8000c52 <HAL_UART_Init+0x3a>
 8000c40:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8000c44:	4293      	cmp	r3, r2
 8000c46:	d004      	beq.n	8000c52 <HAL_UART_Init+0x3a>
 8000c48:	f240 1173 	movw	r1, #371	; 0x173
 8000c4c:	483c      	ldr	r0, [pc, #240]	; (8000d40 <HAL_UART_Init+0x128>)
 8000c4e:	f7ff fda7 	bl	80007a0 <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000c52:	69a3      	ldr	r3, [r4, #24]
 8000c54:	b143      	cbz	r3, 8000c68 <HAL_UART_Init+0x50>
 8000c56:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c5a:	d005      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000c5c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000c60:	d002      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000c62:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000c66:	d130      	bne.n	8000cca <HAL_UART_Init+0xb2>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000c68:	68a3      	ldr	r3, [r4, #8]
 8000c6a:	b113      	cbz	r3, 8000c72 <HAL_UART_Init+0x5a>
 8000c6c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000c70:	d14f      	bne.n	8000d12 <HAL_UART_Init+0xfa>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000c72:	69e3      	ldr	r3, [r4, #28]
 8000c74:	b113      	cbz	r3, 8000c7c <HAL_UART_Init+0x64>
 8000c76:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000c7a:	d150      	bne.n	8000d1e <HAL_UART_Init+0x106>
  if (huart->gState == HAL_UART_STATE_RESET)
 8000c7c:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
 8000c80:	2b00      	cmp	r3, #0
 8000c82:	d052      	beq.n	8000d2a <HAL_UART_Init+0x112>
  huart->gState = HAL_UART_STATE_BUSY;
 8000c84:	2324      	movs	r3, #36	; 0x24
 8000c86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UART_DISABLE(huart);
 8000c8a:	6822      	ldr	r2, [r4, #0]
 8000c8c:	68d3      	ldr	r3, [r2, #12]
 8000c8e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000c92:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8000c94:	4620      	mov	r0, r4
 8000c96:	f7ff febf 	bl	8000a18 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8000c9a:	6822      	ldr	r2, [r4, #0]
 8000c9c:	6913      	ldr	r3, [r2, #16]
 8000c9e:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8000ca2:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8000ca4:	6822      	ldr	r2, [r4, #0]
 8000ca6:	6953      	ldr	r3, [r2, #20]
 8000ca8:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8000cac:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8000cae:	6822      	ldr	r2, [r4, #0]
 8000cb0:	68d3      	ldr	r3, [r2, #12]
 8000cb2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000cb6:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000cb8:	2000      	movs	r0, #0
 8000cba:	6460      	str	r0, [r4, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 8000cbc:	2320      	movs	r3, #32
 8000cbe:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8000cc2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000cc6:	6360      	str	r0, [r4, #52]	; 0x34
}
 8000cc8:	bd10      	pop	{r4, pc}
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000cca:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8000cce:	481c      	ldr	r0, [pc, #112]	; (8000d40 <HAL_UART_Init+0x128>)
 8000cd0:	f7ff fd66 	bl	80007a0 <assert_failed>
 8000cd4:	e7c8      	b.n	8000c68 <HAL_UART_Init+0x50>
    assert_param(IS_UART_INSTANCE(huart->Instance));
 8000cd6:	6803      	ldr	r3, [r0, #0]
 8000cd8:	4a18      	ldr	r2, [pc, #96]	; (8000d3c <HAL_UART_Init+0x124>)
 8000cda:	4293      	cmp	r3, r2
 8000cdc:	d0c4      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000cde:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000ce2:	4293      	cmp	r3, r2
 8000ce4:	d0c0      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000ce6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000cea:	4293      	cmp	r3, r2
 8000cec:	d0bc      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000cee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000cf2:	4293      	cmp	r3, r2
 8000cf4:	d0b8      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000cf6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000cfa:	4293      	cmp	r3, r2
 8000cfc:	d0b4      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000cfe:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8000d02:	4293      	cmp	r3, r2
 8000d04:	d0b0      	beq.n	8000c68 <HAL_UART_Init+0x50>
 8000d06:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8000d0a:	480d      	ldr	r0, [pc, #52]	; (8000d40 <HAL_UART_Init+0x128>)
 8000d0c:	f7ff fd48 	bl	80007a0 <assert_failed>
 8000d10:	e7aa      	b.n	8000c68 <HAL_UART_Init+0x50>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000d12:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8000d16:	480a      	ldr	r0, [pc, #40]	; (8000d40 <HAL_UART_Init+0x128>)
 8000d18:	f7ff fd42 	bl	80007a0 <assert_failed>
 8000d1c:	e7a9      	b.n	8000c72 <HAL_UART_Init+0x5a>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000d1e:	f240 117b 	movw	r1, #379	; 0x17b
 8000d22:	4807      	ldr	r0, [pc, #28]	; (8000d40 <HAL_UART_Init+0x128>)
 8000d24:	f7ff fd3c 	bl	80007a0 <assert_failed>
 8000d28:	e7a8      	b.n	8000c7c <HAL_UART_Init+0x64>
    huart->Lock = HAL_UNLOCKED;
 8000d2a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_UART_MspInit(huart);
 8000d2e:	4620      	mov	r0, r4
 8000d30:	f7ff fd80 	bl	8000834 <HAL_UART_MspInit>
 8000d34:	e7a6      	b.n	8000c84 <HAL_UART_Init+0x6c>
    return HAL_ERROR;
 8000d36:	2001      	movs	r0, #1
}
 8000d38:	4770      	bx	lr
 8000d3a:	bf00      	nop
 8000d3c:	40011000 	andmi	r1, r1, r0
 8000d40:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}

08000d44 <HAL_UART_Transmit>:
{
 8000d44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d48:	b082      	sub	sp, #8
 8000d4a:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8000d4c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000d50:	b2db      	uxtb	r3, r3
 8000d52:	2b20      	cmp	r3, #32
 8000d54:	d156      	bne.n	8000e04 <HAL_UART_Transmit+0xc0>
 8000d56:	4604      	mov	r4, r0
 8000d58:	460d      	mov	r5, r1
 8000d5a:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8000d5c:	2900      	cmp	r1, #0
 8000d5e:	d055      	beq.n	8000e0c <HAL_UART_Transmit+0xc8>
 8000d60:	b90a      	cbnz	r2, 8000d66 <HAL_UART_Transmit+0x22>
      return  HAL_ERROR;
 8000d62:	2001      	movs	r0, #1
 8000d64:	e04f      	b.n	8000e06 <HAL_UART_Transmit+0xc2>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000d66:	2300      	movs	r3, #0
 8000d68:	6443      	str	r3, [r0, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8000d6a:	2321      	movs	r3, #33	; 0x21
 8000d6c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    tickstart = HAL_GetTick();
 8000d70:	f000 fcf2 	bl	8001758 <HAL_GetTick>
 8000d74:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8000d76:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8000d7a:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000d7e:	68a3      	ldr	r3, [r4, #8]
 8000d80:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000d84:	d002      	beq.n	8000d8c <HAL_UART_Transmit+0x48>
      pdata16bits = NULL;
 8000d86:	f04f 0800 	mov.w	r8, #0
 8000d8a:	e014      	b.n	8000db6 <HAL_UART_Transmit+0x72>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000d8c:	6923      	ldr	r3, [r4, #16]
 8000d8e:	b32b      	cbz	r3, 8000ddc <HAL_UART_Transmit+0x98>
      pdata16bits = NULL;
 8000d90:	f04f 0800 	mov.w	r8, #0
 8000d94:	e00f      	b.n	8000db6 <HAL_UART_Transmit+0x72>
        huart->gState = HAL_UART_STATE_READY;
 8000d96:	2320      	movs	r3, #32
 8000d98:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        return HAL_TIMEOUT;
 8000d9c:	2003      	movs	r0, #3
 8000d9e:	e032      	b.n	8000e06 <HAL_UART_Transmit+0xc2>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8000da0:	f838 3b02 	ldrh.w	r3, [r8], #2
 8000da4:	6822      	ldr	r2, [r4, #0]
 8000da6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000daa:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8000dac:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000dae:	b292      	uxth	r2, r2
 8000db0:	3a01      	subs	r2, #1
 8000db2:	b292      	uxth	r2, r2
 8000db4:	84e2      	strh	r2, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8000db6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000db8:	b29b      	uxth	r3, r3
 8000dba:	b193      	cbz	r3, 8000de2 <HAL_UART_Transmit+0x9e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8000dbc:	9600      	str	r6, [sp, #0]
 8000dbe:	463b      	mov	r3, r7
 8000dc0:	2200      	movs	r2, #0
 8000dc2:	2180      	movs	r1, #128	; 0x80
 8000dc4:	4620      	mov	r0, r4
 8000dc6:	f7ff fee1 	bl	8000b8c <UART_WaitOnFlagUntilTimeout>
 8000dca:	2800      	cmp	r0, #0
 8000dcc:	d1e3      	bne.n	8000d96 <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 8000dce:	2d00      	cmp	r5, #0
 8000dd0:	d0e6      	beq.n	8000da0 <HAL_UART_Transmit+0x5c>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8000dd2:	f815 2b01 	ldrb.w	r2, [r5], #1
 8000dd6:	6823      	ldr	r3, [r4, #0]
 8000dd8:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8000dda:	e7e7      	b.n	8000dac <HAL_UART_Transmit+0x68>
      pdata16bits = (const uint16_t *) pData;
 8000ddc:	46a8      	mov	r8, r5
      pdata8bits  = NULL;
 8000dde:	2500      	movs	r5, #0
 8000de0:	e7e9      	b.n	8000db6 <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8000de2:	9600      	str	r6, [sp, #0]
 8000de4:	463b      	mov	r3, r7
 8000de6:	2200      	movs	r2, #0
 8000de8:	2140      	movs	r1, #64	; 0x40
 8000dea:	4620      	mov	r0, r4
 8000dec:	f7ff fece 	bl	8000b8c <UART_WaitOnFlagUntilTimeout>
 8000df0:	b918      	cbnz	r0, 8000dfa <HAL_UART_Transmit+0xb6>
    huart->gState = HAL_UART_STATE_READY;
 8000df2:	2320      	movs	r3, #32
 8000df4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    return HAL_OK;
 8000df8:	e005      	b.n	8000e06 <HAL_UART_Transmit+0xc2>
      huart->gState = HAL_UART_STATE_READY;
 8000dfa:	2320      	movs	r3, #32
 8000dfc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      return HAL_TIMEOUT;
 8000e00:	2003      	movs	r0, #3
 8000e02:	e000      	b.n	8000e06 <HAL_UART_Transmit+0xc2>
    return HAL_BUSY;
 8000e04:	2002      	movs	r0, #2
}
 8000e06:	b002      	add	sp, #8
 8000e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 8000e0c:	2001      	movs	r0, #1
 8000e0e:	e7fa      	b.n	8000e06 <HAL_UART_Transmit+0xc2>

08000e10 <HAL_UART_TxCpltCallback>:
}
 8000e10:	4770      	bx	lr

08000e12 <UART_EndTransmit_IT>:
{
 8000e12:	b508      	push	{r3, lr}
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8000e14:	6801      	ldr	r1, [r0, #0]
 8000e16:	68ca      	ldr	r2, [r1, #12]
 8000e18:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000e1c:	60ca      	str	r2, [r1, #12]
  huart->gState = HAL_UART_STATE_READY;
 8000e1e:	2220      	movs	r2, #32
 8000e20:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
  HAL_UART_TxCpltCallback(huart);
 8000e24:	f7ff fff4 	bl	8000e10 <HAL_UART_TxCpltCallback>
}
 8000e28:	2000      	movs	r0, #0
 8000e2a:	bd08      	pop	{r3, pc}

08000e2c <HAL_UART_RxCpltCallback>:
}
 8000e2c:	4770      	bx	lr

08000e2e <HAL_UART_ErrorCallback>:
}
 8000e2e:	4770      	bx	lr

08000e30 <UART_DMAAbortOnError>:
{
 8000e30:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8000e32:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8000e34:	2300      	movs	r3, #0
 8000e36:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8000e38:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8000e3a:	f7ff fff8 	bl	8000e2e <HAL_UART_ErrorCallback>
}
 8000e3e:	bd08      	pop	{r3, pc}

08000e40 <HAL_UARTEx_RxEventCallback>:
}
 8000e40:	4770      	bx	lr

08000e42 <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8000e42:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 8000e46:	b2db      	uxtb	r3, r3
 8000e48:	2b22      	cmp	r3, #34	; 0x22
 8000e4a:	d169      	bne.n	8000f20 <UART_Receive_IT+0xde>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000e4c:	6883      	ldr	r3, [r0, #8]
 8000e4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000e52:	d04f      	beq.n	8000ef4 <UART_Receive_IT+0xb2>
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8000e54:	6a82      	ldr	r2, [r0, #40]	; 0x28
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8000e56:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000e5a:	d004      	beq.n	8000e66 <UART_Receive_IT+0x24>
 8000e5c:	2b00      	cmp	r3, #0
 8000e5e:	d156      	bne.n	8000f0e <UART_Receive_IT+0xcc>
 8000e60:	6903      	ldr	r3, [r0, #16]
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d153      	bne.n	8000f0e <UART_Receive_IT+0xcc>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8000e66:	6803      	ldr	r3, [r0, #0]
 8000e68:	685b      	ldr	r3, [r3, #4]
 8000e6a:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr += 1U;
 8000e6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e6e:	3301      	adds	r3, #1
 8000e70:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8000e72:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8000e74:	b29b      	uxth	r3, r3
 8000e76:	3b01      	subs	r3, #1
 8000e78:	b29b      	uxth	r3, r3
 8000e7a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d151      	bne.n	8000f24 <UART_Receive_IT+0xe2>
{
 8000e80:	b500      	push	{lr}
 8000e82:	b083      	sub	sp, #12
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8000e84:	6802      	ldr	r2, [r0, #0]
 8000e86:	68d3      	ldr	r3, [r2, #12]
 8000e88:	f023 0320 	bic.w	r3, r3, #32
 8000e8c:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8000e8e:	6802      	ldr	r2, [r0, #0]
 8000e90:	68d3      	ldr	r3, [r2, #12]
 8000e92:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000e96:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8000e98:	6802      	ldr	r2, [r0, #0]
 8000e9a:	6953      	ldr	r3, [r2, #20]
 8000e9c:	f023 0301 	bic.w	r3, r3, #1
 8000ea0:	6153      	str	r3, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8000ea2:	2320      	movs	r3, #32
 8000ea4:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	6343      	str	r3, [r0, #52]	; 0x34
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000eac:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000eae:	2b01      	cmp	r3, #1
 8000eb0:	d133      	bne.n	8000f1a <UART_Receive_IT+0xd8>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	6303      	str	r3, [r0, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000eb6:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000eb8:	f102 030c 	add.w	r3, r2, #12
 8000ebc:	e853 3f00 	ldrex	r3, [r3]
 8000ec0:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000ec4:	320c      	adds	r2, #12
 8000ec6:	e842 3100 	strex	r1, r3, [r2]
 8000eca:	2900      	cmp	r1, #0
 8000ecc:	d1f3      	bne.n	8000eb6 <UART_Receive_IT+0x74>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8000ece:	6803      	ldr	r3, [r0, #0]
 8000ed0:	681a      	ldr	r2, [r3, #0]
 8000ed2:	f012 0f10 	tst.w	r2, #16
 8000ed6:	d006      	beq.n	8000ee6 <UART_Receive_IT+0xa4>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000ed8:	2200      	movs	r2, #0
 8000eda:	9201      	str	r2, [sp, #4]
 8000edc:	681a      	ldr	r2, [r3, #0]
 8000ede:	9201      	str	r2, [sp, #4]
 8000ee0:	685b      	ldr	r3, [r3, #4]
 8000ee2:	9301      	str	r3, [sp, #4]
 8000ee4:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8000ee6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8000ee8:	f7ff ffaa 	bl	8000e40 <HAL_UARTEx_RxEventCallback>
      return HAL_OK;
 8000eec:	2000      	movs	r0, #0
}
 8000eee:	b003      	add	sp, #12
 8000ef0:	f85d fb04 	ldr.w	pc, [sp], #4
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000ef4:	6902      	ldr	r2, [r0, #16]
 8000ef6:	2a00      	cmp	r2, #0
 8000ef8:	d1ac      	bne.n	8000e54 <UART_Receive_IT+0x12>
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8000efa:	6a82      	ldr	r2, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8000efc:	6803      	ldr	r3, [r0, #0]
 8000efe:	685b      	ldr	r3, [r3, #4]
 8000f00:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000f04:	8013      	strh	r3, [r2, #0]
      huart->pRxBuffPtr += 2U;
 8000f06:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000f08:	3302      	adds	r3, #2
 8000f0a:	6283      	str	r3, [r0, #40]	; 0x28
 8000f0c:	e7b1      	b.n	8000e72 <UART_Receive_IT+0x30>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8000f0e:	6803      	ldr	r3, [r0, #0]
 8000f10:	685b      	ldr	r3, [r3, #4]
 8000f12:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000f16:	7013      	strb	r3, [r2, #0]
 8000f18:	e7a8      	b.n	8000e6c <UART_Receive_IT+0x2a>
        HAL_UART_RxCpltCallback(huart);
 8000f1a:	f7ff ff87 	bl	8000e2c <HAL_UART_RxCpltCallback>
 8000f1e:	e7e5      	b.n	8000eec <UART_Receive_IT+0xaa>
    return HAL_BUSY;
 8000f20:	2002      	movs	r0, #2
 8000f22:	4770      	bx	lr
    return HAL_OK;
 8000f24:	2000      	movs	r0, #0
}
 8000f26:	4770      	bx	lr

08000f28 <HAL_UART_IRQHandler>:
{
 8000f28:	b530      	push	{r4, r5, lr}
 8000f2a:	b083      	sub	sp, #12
 8000f2c:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8000f2e:	6802      	ldr	r2, [r0, #0]
 8000f30:	6813      	ldr	r3, [r2, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8000f32:	68d0      	ldr	r0, [r2, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8000f34:	6951      	ldr	r1, [r2, #20]
  if (errorflags == RESET)
 8000f36:	f013 050f 	ands.w	r5, r3, #15
 8000f3a:	d105      	bne.n	8000f48 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000f3c:	f013 0f20 	tst.w	r3, #32
 8000f40:	d002      	beq.n	8000f48 <HAL_UART_IRQHandler+0x20>
 8000f42:	f010 0f20 	tst.w	r0, #32
 8000f46:	d119      	bne.n	8000f7c <HAL_UART_IRQHandler+0x54>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8000f48:	b12d      	cbz	r5, 8000f56 <HAL_UART_IRQHandler+0x2e>
 8000f4a:	f011 0101 	ands.w	r1, r1, #1
 8000f4e:	d119      	bne.n	8000f84 <HAL_UART_IRQHandler+0x5c>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8000f50:	f410 7f90 	tst.w	r0, #288	; 0x120
 8000f54:	d116      	bne.n	8000f84 <HAL_UART_IRQHandler+0x5c>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000f56:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000f58:	2901      	cmp	r1, #1
 8000f5a:	d07d      	beq.n	8001058 <HAL_UART_IRQHandler+0x130>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8000f5c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000f60:	d003      	beq.n	8000f6a <HAL_UART_IRQHandler+0x42>
 8000f62:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000f66:	f040 8119 	bne.w	800119c <HAL_UART_IRQHandler+0x274>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8000f6a:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f6e:	d003      	beq.n	8000f78 <HAL_UART_IRQHandler+0x50>
 8000f70:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000f74:	f040 8116 	bne.w	80011a4 <HAL_UART_IRQHandler+0x27c>
}
 8000f78:	b003      	add	sp, #12
 8000f7a:	bd30      	pop	{r4, r5, pc}
      UART_Receive_IT(huart);
 8000f7c:	4620      	mov	r0, r4
 8000f7e:	f7ff ff60 	bl	8000e42 <UART_Receive_IT>
      return;
 8000f82:	e7f9      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8000f84:	f013 0f01 	tst.w	r3, #1
 8000f88:	d006      	beq.n	8000f98 <HAL_UART_IRQHandler+0x70>
 8000f8a:	f410 7f80 	tst.w	r0, #256	; 0x100
 8000f8e:	d003      	beq.n	8000f98 <HAL_UART_IRQHandler+0x70>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8000f90:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f92:	f042 0201 	orr.w	r2, r2, #1
 8000f96:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000f98:	f013 0f04 	tst.w	r3, #4
 8000f9c:	d004      	beq.n	8000fa8 <HAL_UART_IRQHandler+0x80>
 8000f9e:	b119      	cbz	r1, 8000fa8 <HAL_UART_IRQHandler+0x80>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8000fa0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fa2:	f042 0202 	orr.w	r2, r2, #2
 8000fa6:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000fa8:	f013 0f02 	tst.w	r3, #2
 8000fac:	d004      	beq.n	8000fb8 <HAL_UART_IRQHandler+0x90>
 8000fae:	b119      	cbz	r1, 8000fb8 <HAL_UART_IRQHandler+0x90>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8000fb0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fb2:	f042 0204 	orr.w	r2, r2, #4
 8000fb6:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8000fb8:	f013 0f08 	tst.w	r3, #8
 8000fbc:	d007      	beq.n	8000fce <HAL_UART_IRQHandler+0xa6>
 8000fbe:	f010 0f20 	tst.w	r0, #32
 8000fc2:	d100      	bne.n	8000fc6 <HAL_UART_IRQHandler+0x9e>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8000fc4:	b119      	cbz	r1, 8000fce <HAL_UART_IRQHandler+0xa6>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8000fc6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fc8:	f042 0208 	orr.w	r2, r2, #8
 8000fcc:	6462      	str	r2, [r4, #68]	; 0x44
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8000fce:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fd0:	2a00      	cmp	r2, #0
 8000fd2:	d0d1      	beq.n	8000f78 <HAL_UART_IRQHandler+0x50>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000fd4:	f013 0f20 	tst.w	r3, #32
 8000fd8:	d002      	beq.n	8000fe0 <HAL_UART_IRQHandler+0xb8>
 8000fda:	f010 0f20 	tst.w	r0, #32
 8000fde:	d129      	bne.n	8001034 <HAL_UART_IRQHandler+0x10c>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8000fe0:	6823      	ldr	r3, [r4, #0]
 8000fe2:	695b      	ldr	r3, [r3, #20]
 8000fe4:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8000fe8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fea:	f012 0f08 	tst.w	r2, #8
 8000fee:	d100      	bne.n	8000ff2 <HAL_UART_IRQHandler+0xca>
 8000ff0:	b363      	cbz	r3, 800104c <HAL_UART_IRQHandler+0x124>
        UART_EndRxTransfer(huart);
 8000ff2:	4620      	mov	r0, r4
 8000ff4:	f7ff fcb2 	bl	800095c <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000ff8:	6823      	ldr	r3, [r4, #0]
 8000ffa:	695b      	ldr	r3, [r3, #20]
 8000ffc:	f013 0f40 	tst.w	r3, #64	; 0x40
 8001000:	d020      	beq.n	8001044 <HAL_UART_IRQHandler+0x11c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8001002:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001004:	f102 0314 	add.w	r3, r2, #20
 8001008:	e853 3f00 	ldrex	r3, [r3]
 800100c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001010:	3214      	adds	r2, #20
 8001012:	e842 3100 	strex	r1, r3, [r2]
 8001016:	2900      	cmp	r1, #0
 8001018:	d1f3      	bne.n	8001002 <HAL_UART_IRQHandler+0xda>
          if (huart->hdmarx != NULL)
 800101a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800101c:	b173      	cbz	r3, 800103c <HAL_UART_IRQHandler+0x114>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800101e:	4a63      	ldr	r2, [pc, #396]	; (80011ac <HAL_UART_IRQHandler+0x284>)
 8001020:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8001022:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001024:	f000 faa8 	bl	8001578 <HAL_DMA_Abort_IT>
 8001028:	2800      	cmp	r0, #0
 800102a:	d0a5      	beq.n	8000f78 <HAL_UART_IRQHandler+0x50>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800102c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800102e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8001030:	4798      	blx	r3
 8001032:	e7a1      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
        UART_Receive_IT(huart);
 8001034:	4620      	mov	r0, r4
 8001036:	f7ff ff04 	bl	8000e42 <UART_Receive_IT>
 800103a:	e7d1      	b.n	8000fe0 <HAL_UART_IRQHandler+0xb8>
            HAL_UART_ErrorCallback(huart);
 800103c:	4620      	mov	r0, r4
 800103e:	f7ff fef6 	bl	8000e2e <HAL_UART_ErrorCallback>
 8001042:	e799      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
          HAL_UART_ErrorCallback(huart);
 8001044:	4620      	mov	r0, r4
 8001046:	f7ff fef2 	bl	8000e2e <HAL_UART_ErrorCallback>
 800104a:	e795      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
        HAL_UART_ErrorCallback(huart);
 800104c:	4620      	mov	r0, r4
 800104e:	f7ff feee 	bl	8000e2e <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001052:	2300      	movs	r3, #0
 8001054:	6463      	str	r3, [r4, #68]	; 0x44
    return;
 8001056:	e78f      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8001058:	f013 0f10 	tst.w	r3, #16
 800105c:	f43f af7e 	beq.w	8000f5c <HAL_UART_IRQHandler+0x34>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8001060:	f010 0f10 	tst.w	r0, #16
 8001064:	f43f af7a 	beq.w	8000f5c <HAL_UART_IRQHandler+0x34>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8001068:	2300      	movs	r3, #0
 800106a:	9301      	str	r3, [sp, #4]
 800106c:	6813      	ldr	r3, [r2, #0]
 800106e:	9301      	str	r3, [sp, #4]
 8001070:	6853      	ldr	r3, [r2, #4]
 8001072:	9301      	str	r3, [sp, #4]
 8001074:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8001076:	6953      	ldr	r3, [r2, #20]
 8001078:	f013 0f40 	tst.w	r3, #64	; 0x40
 800107c:	d052      	beq.n	8001124 <HAL_UART_IRQHandler+0x1fc>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800107e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8001080:	6813      	ldr	r3, [r2, #0]
 8001082:	685b      	ldr	r3, [r3, #4]
 8001084:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8001086:	2b00      	cmp	r3, #0
 8001088:	f43f af76 	beq.w	8000f78 <HAL_UART_IRQHandler+0x50>
          && (nb_remaining_rx_data < huart->RxXferSize))
 800108c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800108e:	4299      	cmp	r1, r3
 8001090:	f67f af72 	bls.w	8000f78 <HAL_UART_IRQHandler+0x50>
        huart->RxXferCount = nb_remaining_rx_data;
 8001094:	85e3      	strh	r3, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8001096:	69d3      	ldr	r3, [r2, #28]
 8001098:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800109c:	d037      	beq.n	800110e <HAL_UART_IRQHandler+0x1e6>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800109e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010a0:	f102 030c 	add.w	r3, r2, #12
 80010a4:	e853 3f00 	ldrex	r3, [r3]
 80010a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010ac:	320c      	adds	r2, #12
 80010ae:	e842 3100 	strex	r1, r3, [r2]
 80010b2:	2900      	cmp	r1, #0
 80010b4:	d1f3      	bne.n	800109e <HAL_UART_IRQHandler+0x176>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80010b6:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010b8:	f102 0314 	add.w	r3, r2, #20
 80010bc:	e853 3f00 	ldrex	r3, [r3]
 80010c0:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010c4:	3214      	adds	r2, #20
 80010c6:	e842 3100 	strex	r1, r3, [r2]
 80010ca:	2900      	cmp	r1, #0
 80010cc:	d1f3      	bne.n	80010b6 <HAL_UART_IRQHandler+0x18e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80010ce:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010d0:	f102 0314 	add.w	r3, r2, #20
 80010d4:	e853 3f00 	ldrex	r3, [r3]
 80010d8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010dc:	3214      	adds	r2, #20
 80010de:	e842 3100 	strex	r1, r3, [r2]
 80010e2:	2900      	cmp	r1, #0
 80010e4:	d1f3      	bne.n	80010ce <HAL_UART_IRQHandler+0x1a6>
          huart->RxState = HAL_UART_STATE_READY;
 80010e6:	2320      	movs	r3, #32
 80010e8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80010ec:	2300      	movs	r3, #0
 80010ee:	6323      	str	r3, [r4, #48]	; 0x30
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80010f0:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010f2:	f102 030c 	add.w	r3, r2, #12
 80010f6:	e853 3f00 	ldrex	r3, [r3]
 80010fa:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010fe:	320c      	adds	r2, #12
 8001100:	e842 3100 	strex	r1, r3, [r2]
 8001104:	2900      	cmp	r1, #0
 8001106:	d1f3      	bne.n	80010f0 <HAL_UART_IRQHandler+0x1c8>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8001108:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800110a:	f000 f9eb 	bl	80014e4 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800110e:	2302      	movs	r3, #2
 8001110:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8001112:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001114:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001116:	b29b      	uxth	r3, r3
 8001118:	1ac9      	subs	r1, r1, r3
 800111a:	b289      	uxth	r1, r1
 800111c:	4620      	mov	r0, r4
 800111e:	f7ff fe8f 	bl	8000e40 <HAL_UARTEx_RxEventCallback>
      return;
 8001122:	e729      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8001124:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001126:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001128:	b29b      	uxth	r3, r3
 800112a:	1ac9      	subs	r1, r1, r3
 800112c:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 800112e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001130:	b29b      	uxth	r3, r3
 8001132:	2b00      	cmp	r3, #0
 8001134:	f43f af20 	beq.w	8000f78 <HAL_UART_IRQHandler+0x50>
          && (nb_rx_data > 0U))
 8001138:	2900      	cmp	r1, #0
 800113a:	f43f af1d 	beq.w	8000f78 <HAL_UART_IRQHandler+0x50>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800113e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001140:	f102 030c 	add.w	r3, r2, #12
 8001144:	e853 3f00 	ldrex	r3, [r3]
 8001148:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800114c:	320c      	adds	r2, #12
 800114e:	e842 3000 	strex	r0, r3, [r2]
 8001152:	2800      	cmp	r0, #0
 8001154:	d1f3      	bne.n	800113e <HAL_UART_IRQHandler+0x216>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001156:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001158:	f102 0314 	add.w	r3, r2, #20
 800115c:	e853 3f00 	ldrex	r3, [r3]
 8001160:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001164:	3214      	adds	r2, #20
 8001166:	e842 3000 	strex	r0, r3, [r2]
 800116a:	2800      	cmp	r0, #0
 800116c:	d1f3      	bne.n	8001156 <HAL_UART_IRQHandler+0x22e>
        huart->RxState = HAL_UART_STATE_READY;
 800116e:	2320      	movs	r3, #32
 8001170:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001174:	2300      	movs	r3, #0
 8001176:	6323      	str	r3, [r4, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001178:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800117a:	f102 030c 	add.w	r3, r2, #12
 800117e:	e853 3f00 	ldrex	r3, [r3]
 8001182:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001186:	320c      	adds	r2, #12
 8001188:	e842 3000 	strex	r0, r3, [r2]
 800118c:	2800      	cmp	r0, #0
 800118e:	d1f3      	bne.n	8001178 <HAL_UART_IRQHandler+0x250>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8001190:	2302      	movs	r3, #2
 8001192:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8001194:	4620      	mov	r0, r4
 8001196:	f7ff fe53 	bl	8000e40 <HAL_UARTEx_RxEventCallback>
      return;
 800119a:	e6ed      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
    UART_Transmit_IT(huart);
 800119c:	4620      	mov	r0, r4
 800119e:	f7ff fc0b 	bl	80009b8 <UART_Transmit_IT>
    return;
 80011a2:	e6e9      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
    UART_EndTransmit_IT(huart);
 80011a4:	4620      	mov	r0, r4
 80011a6:	f7ff fe34 	bl	8000e12 <UART_EndTransmit_IT>
    return;
 80011aa:	e6e5      	b.n	8000f78 <HAL_UART_IRQHandler+0x50>
 80011ac:	08000e31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp}

080011b0 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80011b0:	4b01      	ldr	r3, [pc, #4]	; (80011b8 <HAL_RCC_GetHCLKFreq+0x8>)
 80011b2:	6818      	ldr	r0, [r3, #0]
 80011b4:	4770      	bx	lr
 80011b6:	bf00      	nop
 80011b8:	20000008 	andcs	r0, r0, r8

080011bc <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80011bc:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80011be:	f7ff fff7 	bl	80011b0 <HAL_RCC_GetHCLKFreq>
 80011c2:	4b04      	ldr	r3, [pc, #16]	; (80011d4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80011c4:	689b      	ldr	r3, [r3, #8]
 80011c6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80011ca:	4a03      	ldr	r2, [pc, #12]	; (80011d8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80011cc:	5cd3      	ldrb	r3, [r2, r3]
}
 80011ce:	40d8      	lsrs	r0, r3
 80011d0:	bd08      	pop	{r3, pc}
 80011d2:	bf00      	nop
 80011d4:	40023800 	andmi	r3, r2, r0, lsl #16
 80011d8:	08002d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp, sp}

080011dc <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80011dc:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80011de:	f7ff ffe7 	bl	80011b0 <HAL_RCC_GetHCLKFreq>
 80011e2:	4b04      	ldr	r3, [pc, #16]	; (80011f4 <HAL_RCC_GetPCLK2Freq+0x18>)
 80011e4:	689b      	ldr	r3, [r3, #8]
 80011e6:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80011ea:	4a03      	ldr	r2, [pc, #12]	; (80011f8 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80011ec:	5cd3      	ldrb	r3, [r2, r3]
}
 80011ee:	40d8      	lsrs	r0, r3
 80011f0:	bd08      	pop	{r3, pc}
 80011f2:	bf00      	nop
 80011f4:	40023800 	andmi	r3, r2, r0, lsl #16
 80011f8:	08002d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp, sp}

080011fc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80011fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001200:	b082      	sub	sp, #8
 8001202:	4607      	mov	r7, r0
 8001204:	460e      	mov	r6, r1
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 8001206:	4b54      	ldr	r3, [pc, #336]	; (8001358 <HAL_GPIO_Init+0x15c>)
 8001208:	4298      	cmp	r0, r3
 800120a:	d023      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 800120c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001210:	4298      	cmp	r0, r3
 8001212:	d01f      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 8001214:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001218:	4298      	cmp	r0, r3
 800121a:	d01b      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 800121c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001220:	4298      	cmp	r0, r3
 8001222:	d017      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 8001224:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001228:	4298      	cmp	r0, r3
 800122a:	d013      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 800122c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001230:	4298      	cmp	r0, r3
 8001232:	d00f      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 8001234:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001238:	4298      	cmp	r0, r3
 800123a:	d00b      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 800123c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001240:	4298      	cmp	r0, r3
 8001242:	d007      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 8001244:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001248:	4298      	cmp	r0, r3
 800124a:	d003      	beq.n	8001254 <HAL_GPIO_Init+0x58>
 800124c:	21ac      	movs	r1, #172	; 0xac
 800124e:	4843      	ldr	r0, [pc, #268]	; (800135c <HAL_GPIO_Init+0x160>)
 8001250:	f7ff faa6 	bl	80007a0 <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 8001254:	6833      	ldr	r3, [r6, #0]
 8001256:	b29a      	uxth	r2, r3
 8001258:	b112      	cbz	r2, 8001260 <HAL_GPIO_Init+0x64>
 800125a:	0c1b      	lsrs	r3, r3, #16
 800125c:	041b      	lsls	r3, r3, #16
 800125e:	b11b      	cbz	r3, 8001268 <HAL_GPIO_Init+0x6c>
 8001260:	21ad      	movs	r1, #173	; 0xad
 8001262:	483e      	ldr	r0, [pc, #248]	; (800135c <HAL_GPIO_Init+0x160>)
 8001264:	f7ff fa9c 	bl	80007a0 <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 8001268:	6873      	ldr	r3, [r6, #4]
 800126a:	2b01      	cmp	r3, #1
 800126c:	d919      	bls.n	80012a2 <HAL_GPIO_Init+0xa6>
 800126e:	2b11      	cmp	r3, #17
 8001270:	d017      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 8001272:	2b02      	cmp	r3, #2
 8001274:	d015      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 8001276:	2b12      	cmp	r3, #18
 8001278:	d013      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 800127a:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 800127e:	d010      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 8001280:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 8001284:	d00d      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 8001286:	f5b3 1f44 	cmp.w	r3, #3211264	; 0x310000
 800128a:	d00a      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 800128c:	f5b3 1f90 	cmp.w	r3, #1179648	; 0x120000
 8001290:	d007      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 8001292:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 8001296:	d004      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 8001298:	f5b3 1f48 	cmp.w	r3, #3276800	; 0x320000
 800129c:	d001      	beq.n	80012a2 <HAL_GPIO_Init+0xa6>
 800129e:	2b03      	cmp	r3, #3
 80012a0:	d101      	bne.n	80012a6 <HAL_GPIO_Init+0xaa>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80012a2:	2400      	movs	r4, #0
 80012a4:	e092      	b.n	80013cc <HAL_GPIO_Init+0x1d0>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80012a6:	21ae      	movs	r1, #174	; 0xae
 80012a8:	482c      	ldr	r0, [pc, #176]	; (800135c <HAL_GPIO_Init+0x160>)
 80012aa:	f7ff fa79 	bl	80007a0 <assert_failed>
 80012ae:	e7f8      	b.n	80012a2 <HAL_GPIO_Init+0xa6>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80012b0:	68f3      	ldr	r3, [r6, #12]
 80012b2:	2b03      	cmp	r3, #3
 80012b4:	d813      	bhi.n	80012de <HAL_GPIO_Init+0xe2>
        temp = GPIOx->OSPEEDR; 
 80012b6:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80012b8:	0061      	lsls	r1, r4, #1
 80012ba:	2303      	movs	r3, #3
 80012bc:	408b      	lsls	r3, r1
 80012be:	ea22 0203 	bic.w	r2, r2, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 80012c2:	68f3      	ldr	r3, [r6, #12]
 80012c4:	408b      	lsls	r3, r1
 80012c6:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 80012c8:	60bb      	str	r3, [r7, #8]
        temp = GPIOx->OTYPER;
 80012ca:	687a      	ldr	r2, [r7, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80012cc:	ea22 0205 	bic.w	r2, r2, r5
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80012d0:	6873      	ldr	r3, [r6, #4]
 80012d2:	f3c3 1500 	ubfx	r5, r3, #4, #1
 80012d6:	40a5      	lsls	r5, r4
 80012d8:	4315      	orrs	r5, r2
        GPIOx->OTYPER = temp;
 80012da:	607d      	str	r5, [r7, #4]
 80012dc:	e087      	b.n	80013ee <HAL_GPIO_Init+0x1f2>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80012de:	21c0      	movs	r1, #192	; 0xc0
 80012e0:	481e      	ldr	r0, [pc, #120]	; (800135c <HAL_GPIO_Init+0x160>)
 80012e2:	f7ff fa5d 	bl	80007a0 <assert_failed>
 80012e6:	e7e6      	b.n	80012b6 <HAL_GPIO_Init+0xba>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80012e8:	21d1      	movs	r1, #209	; 0xd1
 80012ea:	481c      	ldr	r0, [pc, #112]	; (800135c <HAL_GPIO_Init+0x160>)
 80012ec:	f7ff fa58 	bl	80007a0 <assert_failed>
 80012f0:	e086      	b.n	8001400 <HAL_GPIO_Init+0x204>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 80012f2:	6933      	ldr	r3, [r6, #16]
 80012f4:	b1bb      	cbz	r3, 8001326 <HAL_GPIO_Init+0x12a>
 80012f6:	2b09      	cmp	r3, #9
 80012f8:	d015      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 80012fa:	2b01      	cmp	r3, #1
 80012fc:	d013      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 80012fe:	2b02      	cmp	r3, #2
 8001300:	d011      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 8001302:	2b03      	cmp	r3, #3
 8001304:	d00f      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 8001306:	2b04      	cmp	r3, #4
 8001308:	d00d      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 800130a:	2b05      	cmp	r3, #5
 800130c:	d00b      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 800130e:	2b06      	cmp	r3, #6
 8001310:	d009      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 8001312:	2b07      	cmp	r3, #7
 8001314:	d007      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 8001316:	2b08      	cmp	r3, #8
 8001318:	d005      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 800131a:	2b0a      	cmp	r3, #10
 800131c:	d003      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 800131e:	2b0c      	cmp	r3, #12
 8001320:	d001      	beq.n	8001326 <HAL_GPIO_Init+0x12a>
 8001322:	2b0f      	cmp	r3, #15
 8001324:	d110      	bne.n	8001348 <HAL_GPIO_Init+0x14c>
        temp = GPIOx->AFR[position >> 3U];
 8001326:	08e2      	lsrs	r2, r4, #3
 8001328:	3208      	adds	r2, #8
 800132a:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800132e:	f004 0307 	and.w	r3, r4, #7
 8001332:	0099      	lsls	r1, r3, #2
 8001334:	230f      	movs	r3, #15
 8001336:	408b      	lsls	r3, r1
 8001338:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800133c:	6933      	ldr	r3, [r6, #16]
 800133e:	408b      	lsls	r3, r1
 8001340:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3U] = temp;
 8001342:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
 8001346:	e06b      	b.n	8001420 <HAL_GPIO_Init+0x224>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 8001348:	21de      	movs	r1, #222	; 0xde
 800134a:	4804      	ldr	r0, [pc, #16]	; (800135c <HAL_GPIO_Init+0x160>)
 800134c:	f7ff fa28 	bl	80007a0 <assert_failed>
 8001350:	e7e9      	b.n	8001326 <HAL_GPIO_Init+0x12a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001352:	2307      	movs	r3, #7
 8001354:	e005      	b.n	8001362 <HAL_GPIO_Init+0x166>
 8001356:	bf00      	nop
 8001358:	40020000 	andmi	r0, r2, r0
 800135c:	08002cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, sp}
 8001360:	2300      	movs	r3, #0
 8001362:	408b      	lsls	r3, r1
 8001364:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001366:	3202      	adds	r2, #2
 8001368:	495a      	ldr	r1, [pc, #360]	; (80014d4 <HAL_GPIO_Init+0x2d8>)
 800136a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800136e:	4b5a      	ldr	r3, [pc, #360]	; (80014d8 <HAL_GPIO_Init+0x2dc>)
 8001370:	689a      	ldr	r2, [r3, #8]
        temp &= ~((uint32_t)iocurrent);
 8001372:	ea6f 0308 	mvn.w	r3, r8
 8001376:	ea22 0108 	bic.w	r1, r2, r8
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800137a:	6870      	ldr	r0, [r6, #4]
 800137c:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 8001380:	d001      	beq.n	8001386 <HAL_GPIO_Init+0x18a>
        {
          temp |= iocurrent;
 8001382:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->RTSR = temp;
 8001386:	4a54      	ldr	r2, [pc, #336]	; (80014d8 <HAL_GPIO_Init+0x2dc>)
 8001388:	6091      	str	r1, [r2, #8]

        temp = EXTI->FTSR;
 800138a:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 800138c:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001390:	6870      	ldr	r0, [r6, #4]
 8001392:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 8001396:	d001      	beq.n	800139c <HAL_GPIO_Init+0x1a0>
        {
          temp |= iocurrent;
 8001398:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->FTSR = temp;
 800139c:	4a4e      	ldr	r2, [pc, #312]	; (80014d8 <HAL_GPIO_Init+0x2dc>)
 800139e:	60d1      	str	r1, [r2, #12]

        temp = EXTI->EMR;
 80013a0:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80013a2:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80013a6:	6870      	ldr	r0, [r6, #4]
 80013a8:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 80013ac:	d001      	beq.n	80013b2 <HAL_GPIO_Init+0x1b6>
        {
          temp |= iocurrent;
 80013ae:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->EMR = temp;
 80013b2:	4a49      	ldr	r2, [pc, #292]	; (80014d8 <HAL_GPIO_Init+0x2dc>)
 80013b4:	6051      	str	r1, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80013b6:	6812      	ldr	r2, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80013b8:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80013ba:	6871      	ldr	r1, [r6, #4]
 80013bc:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 80013c0:	d001      	beq.n	80013c6 <HAL_GPIO_Init+0x1ca>
        {
          temp |= iocurrent;
 80013c2:	ea48 0302 	orr.w	r3, r8, r2
        }
        EXTI->IMR = temp;
 80013c6:	4a44      	ldr	r2, [pc, #272]	; (80014d8 <HAL_GPIO_Init+0x2dc>)
 80013c8:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80013ca:	3401      	adds	r4, #1
 80013cc:	2c0f      	cmp	r4, #15
 80013ce:	d87e      	bhi.n	80014ce <HAL_GPIO_Init+0x2d2>
    ioposition = 0x01U << position;
 80013d0:	2501      	movs	r5, #1
 80013d2:	40a5      	lsls	r5, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80013d4:	6833      	ldr	r3, [r6, #0]
 80013d6:	ea03 0805 	and.w	r8, r3, r5
    if(iocurrent == ioposition)
 80013da:	ea35 0303 	bics.w	r3, r5, r3
 80013de:	d1f4      	bne.n	80013ca <HAL_GPIO_Init+0x1ce>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80013e0:	6873      	ldr	r3, [r6, #4]
 80013e2:	f003 0303 	and.w	r3, r3, #3
 80013e6:	3b01      	subs	r3, #1
 80013e8:	2b01      	cmp	r3, #1
 80013ea:	f67f af61 	bls.w	80012b0 <HAL_GPIO_Init+0xb4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80013ee:	6873      	ldr	r3, [r6, #4]
 80013f0:	f003 0303 	and.w	r3, r3, #3
 80013f4:	2b03      	cmp	r3, #3
 80013f6:	d00d      	beq.n	8001414 <HAL_GPIO_Init+0x218>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80013f8:	68b3      	ldr	r3, [r6, #8]
 80013fa:	2b02      	cmp	r3, #2
 80013fc:	f63f af74 	bhi.w	80012e8 <HAL_GPIO_Init+0xec>
        temp = GPIOx->PUPDR;
 8001400:	68fa      	ldr	r2, [r7, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001402:	0061      	lsls	r1, r4, #1
 8001404:	2303      	movs	r3, #3
 8001406:	408b      	lsls	r3, r1
 8001408:	ea22 0203 	bic.w	r2, r2, r3
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800140c:	68b3      	ldr	r3, [r6, #8]
 800140e:	408b      	lsls	r3, r1
 8001410:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 8001412:	60fb      	str	r3, [r7, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001414:	6873      	ldr	r3, [r6, #4]
 8001416:	f003 0303 	and.w	r3, r3, #3
 800141a:	2b02      	cmp	r3, #2
 800141c:	f43f af69 	beq.w	80012f2 <HAL_GPIO_Init+0xf6>
      temp = GPIOx->MODER;
 8001420:	683a      	ldr	r2, [r7, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001422:	0061      	lsls	r1, r4, #1
 8001424:	2303      	movs	r3, #3
 8001426:	408b      	lsls	r3, r1
 8001428:	ea22 0203 	bic.w	r2, r2, r3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800142c:	6873      	ldr	r3, [r6, #4]
 800142e:	f003 0303 	and.w	r3, r3, #3
 8001432:	408b      	lsls	r3, r1
 8001434:	4313      	orrs	r3, r2
      GPIOx->MODER = temp;
 8001436:	603b      	str	r3, [r7, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001438:	6873      	ldr	r3, [r6, #4]
 800143a:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 800143e:	d0c4      	beq.n	80013ca <HAL_GPIO_Init+0x1ce>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001440:	2300      	movs	r3, #0
 8001442:	9301      	str	r3, [sp, #4]
 8001444:	4b25      	ldr	r3, [pc, #148]	; (80014dc <HAL_GPIO_Init+0x2e0>)
 8001446:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001448:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800144c:	645a      	str	r2, [r3, #68]	; 0x44
 800144e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001450:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001454:	9301      	str	r3, [sp, #4]
 8001456:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8001458:	08a2      	lsrs	r2, r4, #2
 800145a:	1c91      	adds	r1, r2, #2
 800145c:	4b1d      	ldr	r3, [pc, #116]	; (80014d4 <HAL_GPIO_Init+0x2d8>)
 800145e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001462:	f004 0303 	and.w	r3, r4, #3
 8001466:	0099      	lsls	r1, r3, #2
 8001468:	230f      	movs	r3, #15
 800146a:	408b      	lsls	r3, r1
 800146c:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001470:	4b1b      	ldr	r3, [pc, #108]	; (80014e0 <HAL_GPIO_Init+0x2e4>)
 8001472:	429f      	cmp	r7, r3
 8001474:	f43f af74 	beq.w	8001360 <HAL_GPIO_Init+0x164>
 8001478:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800147c:	429f      	cmp	r7, r3
 800147e:	d01a      	beq.n	80014b6 <HAL_GPIO_Init+0x2ba>
 8001480:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001484:	429f      	cmp	r7, r3
 8001486:	d018      	beq.n	80014ba <HAL_GPIO_Init+0x2be>
 8001488:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800148c:	429f      	cmp	r7, r3
 800148e:	d016      	beq.n	80014be <HAL_GPIO_Init+0x2c2>
 8001490:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001494:	429f      	cmp	r7, r3
 8001496:	d014      	beq.n	80014c2 <HAL_GPIO_Init+0x2c6>
 8001498:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800149c:	429f      	cmp	r7, r3
 800149e:	d012      	beq.n	80014c6 <HAL_GPIO_Init+0x2ca>
 80014a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80014a4:	429f      	cmp	r7, r3
 80014a6:	d010      	beq.n	80014ca <HAL_GPIO_Init+0x2ce>
 80014a8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80014ac:	429f      	cmp	r7, r3
 80014ae:	f43f af50 	beq.w	8001352 <HAL_GPIO_Init+0x156>
 80014b2:	2308      	movs	r3, #8
 80014b4:	e755      	b.n	8001362 <HAL_GPIO_Init+0x166>
 80014b6:	2301      	movs	r3, #1
 80014b8:	e753      	b.n	8001362 <HAL_GPIO_Init+0x166>
 80014ba:	2302      	movs	r3, #2
 80014bc:	e751      	b.n	8001362 <HAL_GPIO_Init+0x166>
 80014be:	2303      	movs	r3, #3
 80014c0:	e74f      	b.n	8001362 <HAL_GPIO_Init+0x166>
 80014c2:	2304      	movs	r3, #4
 80014c4:	e74d      	b.n	8001362 <HAL_GPIO_Init+0x166>
 80014c6:	2305      	movs	r3, #5
 80014c8:	e74b      	b.n	8001362 <HAL_GPIO_Init+0x166>
 80014ca:	2306      	movs	r3, #6
 80014cc:	e749      	b.n	8001362 <HAL_GPIO_Init+0x166>
      }
    }
  }
}
 80014ce:	b002      	add	sp, #8
 80014d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014d4:	40013800 	andmi	r3, r1, r0, lsl #16
 80014d8:	40013c00 	andmi	r3, r1, r0, lsl #24
 80014dc:	40023800 	andmi	r3, r2, r0, lsl #16
 80014e0:	40020000 	andmi	r0, r2, r0

080014e4 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80014e4:	b570      	push	{r4, r5, r6, lr}
 80014e6:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80014e8:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 80014ea:	f000 f935 	bl	8001758 <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80014ee:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80014f2:	b2db      	uxtb	r3, r3
 80014f4:	2b02      	cmp	r3, #2
 80014f6:	d006      	beq.n	8001506 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80014f8:	2380      	movs	r3, #128	; 0x80
 80014fa:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80014fc:	2300      	movs	r3, #0
 80014fe:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 8001502:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8001504:	bd70      	pop	{r4, r5, r6, pc}
 8001506:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001508:	6822      	ldr	r2, [r4, #0]
 800150a:	6813      	ldr	r3, [r2, #0]
 800150c:	f023 0316 	bic.w	r3, r3, #22
 8001510:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001512:	6822      	ldr	r2, [r4, #0]
 8001514:	6953      	ldr	r3, [r2, #20]
 8001516:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800151a:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800151c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800151e:	b1e3      	cbz	r3, 800155a <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8001520:	6822      	ldr	r2, [r4, #0]
 8001522:	6813      	ldr	r3, [r2, #0]
 8001524:	f023 0308 	bic.w	r3, r3, #8
 8001528:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 800152a:	6822      	ldr	r2, [r4, #0]
 800152c:	6813      	ldr	r3, [r2, #0]
 800152e:	f023 0301 	bic.w	r3, r3, #1
 8001532:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001534:	6823      	ldr	r3, [r4, #0]
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	f013 0f01 	tst.w	r3, #1
 800153c:	d011      	beq.n	8001562 <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800153e:	f000 f90b 	bl	8001758 <HAL_GetTick>
 8001542:	1b43      	subs	r3, r0, r5
 8001544:	2b05      	cmp	r3, #5
 8001546:	d9f5      	bls.n	8001534 <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001548:	2320      	movs	r3, #32
 800154a:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800154c:	2003      	movs	r0, #3
 800154e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8001552:	2300      	movs	r3, #0
 8001554:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8001558:	e7d4      	b.n	8001504 <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800155a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800155c:	2b00      	cmp	r3, #0
 800155e:	d1df      	bne.n	8001520 <HAL_DMA_Abort+0x3c>
 8001560:	e7e3      	b.n	800152a <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001562:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001564:	233f      	movs	r3, #63	; 0x3f
 8001566:	4093      	lsls	r3, r2
 8001568:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800156a:	2301      	movs	r3, #1
 800156c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8001570:	2000      	movs	r0, #0
 8001572:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 8001576:	e7c5      	b.n	8001504 <HAL_DMA_Abort+0x20>

08001578 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001578:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800157c:	b2db      	uxtb	r3, r3
 800157e:	2b02      	cmp	r3, #2
 8001580:	d003      	beq.n	800158a <HAL_DMA_Abort_IT+0x12>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001582:	2380      	movs	r3, #128	; 0x80
 8001584:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8001586:	2001      	movs	r0, #1
 8001588:	4770      	bx	lr
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 800158a:	2305      	movs	r3, #5
 800158c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8001590:	6802      	ldr	r2, [r0, #0]
 8001592:	6813      	ldr	r3, [r2, #0]
 8001594:	f023 0301 	bic.w	r3, r3, #1
 8001598:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 800159a:	2000      	movs	r0, #0
}
 800159c:	4770      	bx	lr
	...

080015a0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80015a0:	b510      	push	{r4, lr}
 80015a2:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80015a4:	1ec3      	subs	r3, r0, #3
 80015a6:	2b04      	cmp	r3, #4
 80015a8:	d80f      	bhi.n	80015ca <HAL_NVIC_SetPriorityGrouping+0x2a>
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80015aa:	4a0a      	ldr	r2, [pc, #40]	; (80015d4 <HAL_NVIC_SetPriorityGrouping+0x34>)
 80015ac:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80015ae:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80015b2:	041b      	lsls	r3, r3, #16
 80015b4:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80015b6:	0224      	lsls	r4, r4, #8
 80015b8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80015bc:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 80015be:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80015c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80015c6:	60d3      	str	r3, [r2, #12]
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80015c8:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80015ca:	2190      	movs	r1, #144	; 0x90
 80015cc:	4802      	ldr	r0, [pc, #8]	; (80015d8 <HAL_NVIC_SetPriorityGrouping+0x38>)
 80015ce:	f7ff f8e7 	bl	80007a0 <assert_failed>
 80015d2:	e7ea      	b.n	80015aa <HAL_NVIC_SetPriorityGrouping+0xa>
 80015d4:	e000ed00 	and	lr, r0, r0, lsl #26
 80015d8:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}

080015dc <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80015dc:	b570      	push	{r4, r5, r6, lr}
 80015de:	4605      	mov	r5, r0
 80015e0:	460c      	mov	r4, r1
 80015e2:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00U;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 80015e4:	2a0f      	cmp	r2, #15
 80015e6:	d825      	bhi.n	8001634 <HAL_NVIC_SetPriority+0x58>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 80015e8:	2c0f      	cmp	r4, #15
 80015ea:	d828      	bhi.n	800163e <HAL_NVIC_SetPriority+0x62>
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80015ec:	4b1b      	ldr	r3, [pc, #108]	; (800165c <HAL_NVIC_SetPriority+0x80>)
 80015ee:	68db      	ldr	r3, [r3, #12]
 80015f0:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80015f4:	f1c3 0107 	rsb	r1, r3, #7
 80015f8:	2904      	cmp	r1, #4
 80015fa:	bf28      	it	cs
 80015fc:	2104      	movcs	r1, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80015fe:	1d1a      	adds	r2, r3, #4
 8001600:	2a06      	cmp	r2, #6
 8001602:	d921      	bls.n	8001648 <HAL_NVIC_SetPriority+0x6c>
 8001604:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001606:	f04f 32ff 	mov.w	r2, #4294967295
 800160a:	fa02 f101 	lsl.w	r1, r2, r1
 800160e:	ea24 0401 	bic.w	r4, r4, r1
 8001612:	409c      	lsls	r4, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001614:	fa02 f303 	lsl.w	r3, r2, r3
 8001618:	ea26 0603 	bic.w	r6, r6, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800161c:	4334      	orrs	r4, r6
  if ((int32_t)(IRQn) >= 0)
 800161e:	2d00      	cmp	r5, #0
 8001620:	db14      	blt.n	800164c <HAL_NVIC_SetPriority+0x70>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001622:	0124      	lsls	r4, r4, #4
 8001624:	b2e4      	uxtb	r4, r4
 8001626:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 800162a:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 800162e:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001632:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001634:	21a8      	movs	r1, #168	; 0xa8
 8001636:	480a      	ldr	r0, [pc, #40]	; (8001660 <HAL_NVIC_SetPriority+0x84>)
 8001638:	f7ff f8b2 	bl	80007a0 <assert_failed>
 800163c:	e7d4      	b.n	80015e8 <HAL_NVIC_SetPriority+0xc>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 800163e:	21a9      	movs	r1, #169	; 0xa9
 8001640:	4807      	ldr	r0, [pc, #28]	; (8001660 <HAL_NVIC_SetPriority+0x84>)
 8001642:	f7ff f8ad 	bl	80007a0 <assert_failed>
 8001646:	e7d1      	b.n	80015ec <HAL_NVIC_SetPriority+0x10>
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001648:	2300      	movs	r3, #0
 800164a:	e7dc      	b.n	8001606 <HAL_NVIC_SetPriority+0x2a>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800164c:	f005 050f 	and.w	r5, r5, #15
 8001650:	0124      	lsls	r4, r4, #4
 8001652:	b2e4      	uxtb	r4, r4
 8001654:	4b03      	ldr	r3, [pc, #12]	; (8001664 <HAL_NVIC_SetPriority+0x88>)
 8001656:	555c      	strb	r4, [r3, r5]
}
 8001658:	e7eb      	b.n	8001632 <HAL_NVIC_SetPriority+0x56>
 800165a:	bf00      	nop
 800165c:	e000ed00 	and	lr, r0, r0, lsl #26
 8001660:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
 8001664:	e000ed14 	and	lr, r0, r4, lsl sp

08001668 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001668:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 800166a:	1e04      	subs	r4, r0, #0
 800166c:	db0a      	blt.n	8001684 <HAL_NVIC_EnableIRQ+0x1c>
  if ((int32_t)(IRQn) >= 0)
 800166e:	2c00      	cmp	r4, #0
 8001670:	db07      	blt.n	8001682 <HAL_NVIC_EnableIRQ+0x1a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001672:	f004 021f 	and.w	r2, r4, #31
 8001676:	0964      	lsrs	r4, r4, #5
 8001678:	2301      	movs	r3, #1
 800167a:	4093      	lsls	r3, r2
 800167c:	4a04      	ldr	r2, [pc, #16]	; (8001690 <HAL_NVIC_EnableIRQ+0x28>)
 800167e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8001682:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 8001684:	21bc      	movs	r1, #188	; 0xbc
 8001686:	4803      	ldr	r0, [pc, #12]	; (8001694 <HAL_NVIC_EnableIRQ+0x2c>)
 8001688:	f7ff f88a 	bl	80007a0 <assert_failed>
 800168c:	e7ef      	b.n	800166e <HAL_NVIC_EnableIRQ+0x6>
 800168e:	bf00      	nop
 8001690:	e000e100 	and	lr, r0, r0, lsl #2
 8001694:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}

08001698 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001698:	3801      	subs	r0, #1
 800169a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800169e:	d20b      	bcs.n	80016b8 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80016a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80016a4:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016a6:	4a05      	ldr	r2, [pc, #20]	; (80016bc <HAL_SYSTICK_Config+0x24>)
 80016a8:	21f0      	movs	r1, #240	; 0xf0
 80016aa:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80016ae:	2000      	movs	r0, #0
 80016b0:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80016b2:	2207      	movs	r2, #7
 80016b4:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80016b6:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80016b8:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80016ba:	4770      	bx	lr
 80016bc:	e000ed00 	and	lr, r0, r0, lsl #26

080016c0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80016c0:	b510      	push	{r4, lr}
 80016c2:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80016c4:	4b0e      	ldr	r3, [pc, #56]	; (8001700 <HAL_InitTick+0x40>)
 80016c6:	7818      	ldrb	r0, [r3, #0]
 80016c8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80016cc:	fbb3 f3f0 	udiv	r3, r3, r0
 80016d0:	4a0c      	ldr	r2, [pc, #48]	; (8001704 <HAL_InitTick+0x44>)
 80016d2:	6810      	ldr	r0, [r2, #0]
 80016d4:	fbb0 f0f3 	udiv	r0, r0, r3
 80016d8:	f7ff ffde 	bl	8001698 <HAL_SYSTICK_Config>
 80016dc:	b968      	cbnz	r0, 80016fa <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80016de:	2c0f      	cmp	r4, #15
 80016e0:	d901      	bls.n	80016e6 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 80016e2:	2001      	movs	r0, #1
 80016e4:	e00a      	b.n	80016fc <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80016e6:	2200      	movs	r2, #0
 80016e8:	4621      	mov	r1, r4
 80016ea:	f04f 30ff 	mov.w	r0, #4294967295
 80016ee:	f7ff ff75 	bl	80015dc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80016f2:	4b05      	ldr	r3, [pc, #20]	; (8001708 <HAL_InitTick+0x48>)
 80016f4:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80016f6:	2000      	movs	r0, #0
 80016f8:	e000      	b.n	80016fc <HAL_InitTick+0x3c>
    return HAL_ERROR;
 80016fa:	2001      	movs	r0, #1
}
 80016fc:	bd10      	pop	{r4, pc}
 80016fe:	bf00      	nop
 8001700:	20000000 	andcs	r0, r0, r0
 8001704:	20000008 	andcs	r0, r0, r8
 8001708:	20000004 	andcs	r0, r0, r4

0800170c <HAL_Init>:
{
 800170c:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800170e:	4b0b      	ldr	r3, [pc, #44]	; (800173c <HAL_Init+0x30>)
 8001710:	681a      	ldr	r2, [r3, #0]
 8001712:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001716:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001718:	681a      	ldr	r2, [r3, #0]
 800171a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800171e:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001720:	681a      	ldr	r2, [r3, #0]
 8001722:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001726:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001728:	2003      	movs	r0, #3
 800172a:	f7ff ff39 	bl	80015a0 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 800172e:	200f      	movs	r0, #15
 8001730:	f7ff ffc6 	bl	80016c0 <HAL_InitTick>
  HAL_MspInit();
 8001734:	f7ff f8f6 	bl	8000924 <HAL_MspInit>
}
 8001738:	2000      	movs	r0, #0
 800173a:	bd08      	pop	{r3, pc}
 800173c:	40023c00 	andmi	r3, r2, r0, lsl #24

08001740 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8001740:	4a03      	ldr	r2, [pc, #12]	; (8001750 <HAL_IncTick+0x10>)
 8001742:	6811      	ldr	r1, [r2, #0]
 8001744:	4b03      	ldr	r3, [pc, #12]	; (8001754 <HAL_IncTick+0x14>)
 8001746:	781b      	ldrb	r3, [r3, #0]
 8001748:	440b      	add	r3, r1
 800174a:	6013      	str	r3, [r2, #0]
}
 800174c:	4770      	bx	lr
 800174e:	bf00      	nop
 8001750:	200000d8 	ldrdcs	r0, [r0], -r8
 8001754:	20000000 	andcs	r0, r0, r0

08001758 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001758:	4b01      	ldr	r3, [pc, #4]	; (8001760 <HAL_GetTick+0x8>)
 800175a:	6818      	ldr	r0, [r3, #0]
}
 800175c:	4770      	bx	lr
 800175e:	bf00      	nop
 8001760:	200000d8 	ldrdcs	r0, [r0], -r8

08001764 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001764:	b538      	push	{r3, r4, r5, lr}
 8001766:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001768:	f7ff fff6 	bl	8001758 <HAL_GetTick>
 800176c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800176e:	f1b4 3fff 	cmp.w	r4, #4294967295
 8001772:	d002      	beq.n	800177a <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8001774:	4b04      	ldr	r3, [pc, #16]	; (8001788 <HAL_Delay+0x24>)
 8001776:	781b      	ldrb	r3, [r3, #0]
 8001778:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800177a:	f7ff ffed 	bl	8001758 <HAL_GetTick>
 800177e:	1b40      	subs	r0, r0, r5
 8001780:	42a0      	cmp	r0, r4
 8001782:	d3fa      	bcc.n	800177a <HAL_Delay+0x16>
  {
  }
}
 8001784:	bd38      	pop	{r3, r4, r5, pc}
 8001786:	bf00      	nop
 8001788:	20000000 	andcs	r0, r0, r0

0800178c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800178c:	4a03      	ldr	r2, [pc, #12]	; (800179c <SystemInit+0x10>)
 800178e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001792:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001796:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800179a:	4770      	bx	lr
 800179c:	e000ed00 	and	lr, r0, r0, lsl #26

080017a0 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
 80017a0:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
 80017a2:	2300      	movs	r3, #0
 80017a4:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80017a6:	e007      	b.n	80017b8 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
 80017a8:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80017ac:	aa02      	add	r2, sp, #8
 80017ae:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80017b2:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80017b6:	3301      	adds	r3, #1
 80017b8:	2b01      	cmp	r3, #1
 80017ba:	d9f5      	bls.n	80017a8 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
 80017bc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
 80017c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
 80017c4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80017c8:	b002      	add	sp, #8
 80017ca:	4770      	bx	lr

080017cc <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80017cc:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80017d0:	0c00      	lsrs	r0, r0, #16
 80017d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
 80017d6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 80017da:	d00a      	beq.n	80017f2 <opcode_is_bl_or_blx+0x26>
 80017dc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 80017e0:	d009      	beq.n	80017f6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
 80017e2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
 80017e6:	d008      	beq.n	80017fa <opcode_is_bl_or_blx+0x2e>
 80017e8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
 80017ec:	d007      	beq.n	80017fe <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
 80017ee:	2000      	movs	r0, #0
 80017f0:	4770      	bx	lr
        return true;
 80017f2:	2001      	movs	r0, #1
 80017f4:	4770      	bx	lr
 80017f6:	2001      	movs	r0, #1
 80017f8:	4770      	bx	lr
        return true;
 80017fa:	2001      	movs	r0, #1
 80017fc:	4770      	bx	lr
 80017fe:	2001      	movs	r0, #1
}
 8001800:	4770      	bx	lr
	...

08001804 <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
 8001804:	b510      	push	{r4, lr}
 8001806:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
 8001808:	4601      	mov	r1, r0
 800180a:	4803      	ldr	r0, [pc, #12]	; (8001818 <dump_exc_return+0x14>)
 800180c:	f000 f9ce 	bl	8001bac <iprintf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
 8001810:	4620      	mov	r0, r4
 8001812:	f000 f92b 	bl	8001a6c <fault_dump_exc_return>
#endif
}
 8001816:	bd10      	pop	{r4, pc}
 8001818:	08002d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp, sp}

0800181c <fault_dump_init>:
void fault_dump_init(void) {
 800181c:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
 800181e:	490a      	ldr	r1, [pc, #40]	; (8001848 <fault_dump_init+0x2c>)
 8001820:	4b0a      	ldr	r3, [pc, #40]	; (800184c <fault_dump_init+0x30>)
 8001822:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
 8001824:	4a0a      	ldr	r2, [pc, #40]	; (8001850 <fault_dump_init+0x34>)
 8001826:	4b0b      	ldr	r3, [pc, #44]	; (8001854 <fault_dump_init+0x38>)
 8001828:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
 800182a:	1a53      	subs	r3, r2, r1
 800182c:	480a      	ldr	r0, [pc, #40]	; (8001858 <fault_dump_init+0x3c>)
 800182e:	f000 f9bd 	bl	8001bac <iprintf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
 8001832:	490a      	ldr	r1, [pc, #40]	; (800185c <fault_dump_init+0x40>)
 8001834:	4a0a      	ldr	r2, [pc, #40]	; (8001860 <fault_dump_init+0x44>)
 8001836:	1a53      	subs	r3, r2, r1
 8001838:	480a      	ldr	r0, [pc, #40]	; (8001864 <fault_dump_init+0x48>)
 800183a:	f000 f9b7 	bl	8001bac <iprintf>
    printf("Code Stack Growth Downward:%d\r\n", 
 800183e:	2101      	movs	r1, #1
 8001840:	4809      	ldr	r0, [pc, #36]	; (8001868 <fault_dump_init+0x4c>)
 8001842:	f000 f9b3 	bl	8001bac <iprintf>
}
 8001846:	bd08      	pop	{r3, pc}
 8001848:	20000a38 	andcs	r0, r0, r8, lsr sl
 800184c:	200001dc 	ldrdcs	r0, [r0], -ip
 8001850:	20001238 	andcs	r1, r0, r8, lsr r2
 8001854:	200001e0 	andcs	r0, r0, r0, ror #3
 8001858:	08002d74 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, fp, sp}
 800185c:	08000190 	stmdaeq	r0, {r4, r7, r8}
 8001860:	08002bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp, sp}
 8001864:	08002d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp, sp}
 8001868:	08002dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp, sp}

0800186c <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
 800186c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
 8001870:	b348      	cbz	r0, 80018c6 <fault_dump_callstack+0x5a>
 8001872:	460f      	mov	r7, r1
 8001874:	4614      	mov	r4, r2
 8001876:	461d      	mov	r5, r3
 8001878:	4680      	mov	r8, r0
 800187a:	b339      	cbz	r1, 80018cc <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
 800187c:	b34a      	cbz	r2, 80018d2 <fault_dump_callstack+0x66>
 800187e:	429a      	cmp	r2, r3
 8001880:	d82a      	bhi.n	80018d8 <fault_dump_callstack+0x6c>
    int count = 0;
 8001882:	2600      	movs	r6, #0
 8001884:	e000      	b.n	8001888 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
 8001886:	3404      	adds	r4, #4
 8001888:	b1d4      	cbz	r4, 80018c0 <fault_dump_callstack+0x54>
 800188a:	42ac      	cmp	r4, r5
 800188c:	d818      	bhi.n	80018c0 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
 800188e:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
 8001890:	4813      	ldr	r0, [pc, #76]	; (80018e0 <fault_dump_callstack+0x74>)
 8001892:	4290      	cmp	r0, r2
 8001894:	d8f7      	bhi.n	8001886 <fault_dump_callstack+0x1a>
 8001896:	4b13      	ldr	r3, [pc, #76]	; (80018e4 <fault_dump_callstack+0x78>)
 8001898:	4293      	cmp	r3, r2
 800189a:	d3f4      	bcc.n	8001886 <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
 800189c:	f012 0f01 	tst.w	r2, #1
 80018a0:	d0f1      	beq.n	8001886 <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
 80018a2:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
 80018a6:	d0ee      	beq.n	8001886 <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
 80018a8:	4648      	mov	r0, r9
 80018aa:	f7ff ff79 	bl	80017a0 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
 80018ae:	f7ff ff8d 	bl	80017cc <opcode_is_bl_or_blx>
 80018b2:	2800      	cmp	r0, #0
 80018b4:	d0e7      	beq.n	8001886 <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
 80018b6:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
 80018ba:	3601      	adds	r6, #1
        if (count >= size) {
 80018bc:	42be      	cmp	r6, r7
 80018be:	d3e2      	bcc.n	8001886 <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
 80018c0:	4630      	mov	r0, r6
 80018c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
 80018c6:	f06f 0601 	mvn.w	r6, #1
 80018ca:	e7f9      	b.n	80018c0 <fault_dump_callstack+0x54>
 80018cc:	f06f 0601 	mvn.w	r6, #1
 80018d0:	e7f6      	b.n	80018c0 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
 80018d2:	f06f 0602 	mvn.w	r6, #2
 80018d6:	e7f3      	b.n	80018c0 <fault_dump_callstack+0x54>
 80018d8:	f06f 0602 	mvn.w	r6, #2
 80018dc:	e7f0      	b.n	80018c0 <fault_dump_callstack+0x54>
 80018de:	bf00      	nop
 80018e0:	08000190 	stmdaeq	r0, {r4, r7, r8}
 80018e4:	08002bcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, fp, sp}

080018e8 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
 80018e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018ea:	4605      	mov	r5, r0
 80018ec:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
 80018ee:	6803      	ldr	r3, [r0, #0]
 80018f0:	4c46      	ldr	r4, [pc, #280]	; (8001a0c <fault_dump_handler+0x124>)
 80018f2:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
 80018f4:	6843      	ldr	r3, [r0, #4]
 80018f6:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
 80018f8:	6883      	ldr	r3, [r0, #8]
 80018fa:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
 80018fc:	68c3      	ldr	r3, [r0, #12]
 80018fe:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
 8001900:	6903      	ldr	r3, [r0, #16]
 8001902:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
 8001904:	6943      	ldr	r3, [r0, #20]
 8001906:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
 8001908:	6983      	ldr	r3, [r0, #24]
 800190a:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
 800190c:	69c3      	ldr	r3, [r0, #28]
 800190e:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
 8001910:	6a03      	ldr	r3, [r0, #32]
 8001912:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
 8001914:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001916:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
 8001918:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800191a:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
 800191c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800191e:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
 8001920:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001922:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
 8001924:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8001926:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
 8001928:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800192a:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
 800192c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800192e:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
 8001930:	4f37      	ldr	r7, [pc, #220]	; (8001a10 <fault_dump_handler+0x128>)
 8001932:	4638      	mov	r0, r7
 8001934:	f000 f9c0 	bl	8001cb8 <puts>
    printf(" HardFault Information Dump \r\n");
 8001938:	4836      	ldr	r0, [pc, #216]	; (8001a14 <fault_dump_handler+0x12c>)
 800193a:	f000 f9bd 	bl	8001cb8 <puts>
    printf(" Stack Frame   \r\n");
 800193e:	4836      	ldr	r0, [pc, #216]	; (8001a18 <fault_dump_handler+0x130>)
 8001940:	f000 f9ba 	bl	8001cb8 <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
 8001944:	6a21      	ldr	r1, [r4, #32]
 8001946:	4835      	ldr	r0, [pc, #212]	; (8001a1c <fault_dump_handler+0x134>)
 8001948:	f000 f930 	bl	8001bac <iprintf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
 800194c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800194e:	4834      	ldr	r0, [pc, #208]	; (8001a20 <fault_dump_handler+0x138>)
 8001950:	f000 f92c 	bl	8001bac <iprintf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
 8001954:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8001956:	4833      	ldr	r0, [pc, #204]	; (8001a24 <fault_dump_handler+0x13c>)
 8001958:	f000 f928 	bl	8001bac <iprintf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
 800195c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800195e:	4832      	ldr	r0, [pc, #200]	; (8001a28 <fault_dump_handler+0x140>)
 8001960:	f000 f924 	bl	8001bac <iprintf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
 8001964:	6821      	ldr	r1, [r4, #0]
 8001966:	4831      	ldr	r0, [pc, #196]	; (8001a2c <fault_dump_handler+0x144>)
 8001968:	f000 f920 	bl	8001bac <iprintf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
 800196c:	6861      	ldr	r1, [r4, #4]
 800196e:	4830      	ldr	r0, [pc, #192]	; (8001a30 <fault_dump_handler+0x148>)
 8001970:	f000 f91c 	bl	8001bac <iprintf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
 8001974:	68a1      	ldr	r1, [r4, #8]
 8001976:	482f      	ldr	r0, [pc, #188]	; (8001a34 <fault_dump_handler+0x14c>)
 8001978:	f000 f918 	bl	8001bac <iprintf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
 800197c:	68e1      	ldr	r1, [r4, #12]
 800197e:	482e      	ldr	r0, [pc, #184]	; (8001a38 <fault_dump_handler+0x150>)
 8001980:	f000 f914 	bl	8001bac <iprintf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
 8001984:	6921      	ldr	r1, [r4, #16]
 8001986:	482d      	ldr	r0, [pc, #180]	; (8001a3c <fault_dump_handler+0x154>)
 8001988:	f000 f910 	bl	8001bac <iprintf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
 800198c:	6961      	ldr	r1, [r4, #20]
 800198e:	482c      	ldr	r0, [pc, #176]	; (8001a40 <fault_dump_handler+0x158>)
 8001990:	f000 f90c 	bl	8001bac <iprintf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
 8001994:	69a1      	ldr	r1, [r4, #24]
 8001996:	482b      	ldr	r0, [pc, #172]	; (8001a44 <fault_dump_handler+0x15c>)
 8001998:	f000 f908 	bl	8001bac <iprintf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
 800199c:	69e1      	ldr	r1, [r4, #28]
 800199e:	482a      	ldr	r0, [pc, #168]	; (8001a48 <fault_dump_handler+0x160>)
 80019a0:	f000 f904 	bl	8001bac <iprintf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
 80019a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80019a6:	4829      	ldr	r0, [pc, #164]	; (8001a4c <fault_dump_handler+0x164>)
 80019a8:	f000 f900 	bl	8001bac <iprintf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
 80019ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80019ae:	4828      	ldr	r0, [pc, #160]	; (8001a50 <fault_dump_handler+0x168>)
 80019b0:	f000 f8fc 	bl	8001bac <iprintf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
 80019b4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80019b6:	4827      	ldr	r0, [pc, #156]	; (8001a54 <fault_dump_handler+0x16c>)
 80019b8:	f000 f8f8 	bl	8001bac <iprintf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
 80019bc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80019be:	4826      	ldr	r0, [pc, #152]	; (8001a58 <fault_dump_handler+0x170>)
 80019c0:	f000 f8f4 	bl	8001bac <iprintf>
    printf("\r\n");
 80019c4:	4638      	mov	r0, r7
 80019c6:	f000 f977 	bl	8001cb8 <puts>
    dump_exc_return(linker);
 80019ca:	4630      	mov	r0, r6
 80019cc:	f7ff ff1a 	bl	8001804 <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
 80019d0:	4b22      	ldr	r3, [pc, #136]	; (8001a5c <fault_dump_handler+0x174>)
 80019d2:	f105 0240 	add.w	r2, r5, #64	; 0x40
 80019d6:	2140      	movs	r1, #64	; 0x40
 80019d8:	4821      	ldr	r0, [pc, #132]	; (8001a60 <fault_dump_handler+0x178>)
 80019da:	f7ff ff47 	bl	800186c <fault_dump_callstack>
 80019de:	4605      	mov	r5, r0
    printf(" Stack Call: ");
 80019e0:	4820      	ldr	r0, [pc, #128]	; (8001a64 <fault_dump_handler+0x17c>)
 80019e2:	f000 f8e3 	bl	8001bac <iprintf>
    printf("%08X ", (unsigned int)frame.except.pc);
 80019e6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80019e8:	481f      	ldr	r0, [pc, #124]	; (8001a68 <fault_dump_handler+0x180>)
 80019ea:	f000 f8df 	bl	8001bac <iprintf>
    for (index = 0; index < count; index++) {
 80019ee:	2400      	movs	r4, #0
 80019f0:	e006      	b.n	8001a00 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
 80019f2:	4b1b      	ldr	r3, [pc, #108]	; (8001a60 <fault_dump_handler+0x178>)
 80019f4:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 80019f8:	481b      	ldr	r0, [pc, #108]	; (8001a68 <fault_dump_handler+0x180>)
 80019fa:	f000 f8d7 	bl	8001bac <iprintf>
    for (index = 0; index < count; index++) {
 80019fe:	3401      	adds	r4, #1
 8001a00:	42ac      	cmp	r4, r5
 8001a02:	dbf6      	blt.n	80019f2 <fault_dump_handler+0x10a>
    printf("\r\n");
 8001a04:	4802      	ldr	r0, [pc, #8]	; (8001a10 <fault_dump_handler+0x128>)
 8001a06:	f000 f957 	bl	8001cb8 <puts>
    while (1);
 8001a0a:	e7fe      	b.n	8001a0a <fault_dump_handler+0x122>
 8001a0c:	200001e4 	andcs	r0, r0, r4, ror #3
 8001a10:	08002df8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, fp, sp}
 8001a14:	08002ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp, sp}
 8001a18:	08002dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, sp}
 8001a1c:	08002e10 	stmdaeq	r0, {r4, r9, sl, fp, sp}
 8001a20:	08002e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, sp}
 8001a24:	08002e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, sp}
 8001a28:	08002e4c 	stmdaeq	r0, {r2, r3, r6, r9, sl, fp, sp}
 8001a2c:	08002e60 	stmdaeq	r0, {r5, r6, r9, sl, fp, sp}
 8001a30:	08002e74 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl, fp, sp}
 8001a34:	08002e88 	stmdaeq	r0, {r3, r7, r9, sl, fp, sp}
 8001a38:	08002e9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, fp, sp}
 8001a3c:	08002eb0 	stmdaeq	r0, {r4, r5, r7, r9, sl, fp, sp}
 8001a40:	08002ec4 	stmdaeq	r0, {r2, r6, r7, r9, sl, fp, sp}
 8001a44:	08002ed8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, fp, sp}
 8001a48:	08002eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, sp}
 8001a4c:	08002f00 	stmdaeq	r0, {r8, r9, sl, fp, sp}
 8001a50:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
 8001a54:	08002f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, sp}
 8001a58:	08002f3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl, fp, sp}
 8001a5c:	20001238 	andcs	r1, r0, r8, lsr r2
 8001a60:	200000dc 	ldrdcs	r0, [r0], -ip
 8001a64:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
 8001a68:	08002f60 	stmdaeq	r0, {r5, r6, r8, r9, sl, fp, sp}

08001a6c <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
 8001a6c:	b510      	push	{r4, lr}
 8001a6e:	4604      	mov	r4, r0
    printf(" \r\n");
 8001a70:	4816      	ldr	r0, [pc, #88]	; (8001acc <fault_dump_exc_return+0x60>)
 8001a72:	f000 f921 	bl	8001cb8 <puts>
    printf(" Bit2 Return Stack Select: ");
 8001a76:	4816      	ldr	r0, [pc, #88]	; (8001ad0 <fault_dump_exc_return+0x64>)
 8001a78:	f000 f898 	bl	8001bac <iprintf>
    if (FD_CHECK_BIT(exc_return, 2)) {
 8001a7c:	f014 0f04 	tst.w	r4, #4
 8001a80:	d018      	beq.n	8001ab4 <fault_dump_exc_return+0x48>
        printf("[Use PSP               ].\r\n");
 8001a82:	4814      	ldr	r0, [pc, #80]	; (8001ad4 <fault_dump_exc_return+0x68>)
 8001a84:	f000 f918 	bl	8001cb8 <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Return Mode Select:  ");
 8001a88:	4813      	ldr	r0, [pc, #76]	; (8001ad8 <fault_dump_exc_return+0x6c>)
 8001a8a:	f000 f88f 	bl	8001bac <iprintf>
    if (FD_CHECK_BIT(exc_return, 3)) {
 8001a8e:	f014 0f08 	tst.w	r4, #8
 8001a92:	d013      	beq.n	8001abc <fault_dump_exc_return+0x50>
        printf("[Use Thread Mode       ].\r\n");
 8001a94:	4811      	ldr	r0, [pc, #68]	; (8001adc <fault_dump_exc_return+0x70>)
 8001a96:	f000 f90f 	bl	8001cb8 <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:    ");
 8001a9a:	4811      	ldr	r0, [pc, #68]	; (8001ae0 <fault_dump_exc_return+0x74>)
 8001a9c:	f000 f886 	bl	8001bac <iprintf>
    if (FD_CHECK_BIT(exc_return, 4)) {
 8001aa0:	f014 0f10 	tst.w	r4, #16
 8001aa4:	d00e      	beq.n	8001ac4 <fault_dump_exc_return+0x58>
        printf("[Use 8 World Frame     ].\r\n");
 8001aa6:	480f      	ldr	r0, [pc, #60]	; (8001ae4 <fault_dump_exc_return+0x78>)
 8001aa8:	f000 f906 	bl	8001cb8 <puts>
    } else {
        printf("[Use 26 World Frame    ].\r\n");
    }
    printf(" \r\n");
 8001aac:	4807      	ldr	r0, [pc, #28]	; (8001acc <fault_dump_exc_return+0x60>)
 8001aae:	f000 f903 	bl	8001cb8 <puts>
}
 8001ab2:	bd10      	pop	{r4, pc}
        printf("[Use MSP               ].\r\n");
 8001ab4:	480c      	ldr	r0, [pc, #48]	; (8001ae8 <fault_dump_exc_return+0x7c>)
 8001ab6:	f000 f8ff 	bl	8001cb8 <puts>
 8001aba:	e7e5      	b.n	8001a88 <fault_dump_exc_return+0x1c>
        printf("[Use Process Mode      ].\r\n");
 8001abc:	480b      	ldr	r0, [pc, #44]	; (8001aec <fault_dump_exc_return+0x80>)
 8001abe:	f000 f8fb 	bl	8001cb8 <puts>
 8001ac2:	e7ea      	b.n	8001a9a <fault_dump_exc_return+0x2e>
        printf("[Use 26 World Frame    ].\r\n");
 8001ac4:	480a      	ldr	r0, [pc, #40]	; (8001af0 <fault_dump_exc_return+0x84>)
 8001ac6:	f000 f8f7 	bl	8001cb8 <puts>
 8001aca:	e7ef      	b.n	8001aac <fault_dump_exc_return+0x40>
 8001acc:	08002f68 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, fp, sp}
 8001ad0:	08002f6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, fp, sp}
 8001ad4:	08002f88 	stmdaeq	r0, {r3, r7, r8, r9, sl, fp, sp}
 8001ad8:	08002fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, sp}
 8001adc:	08002fdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, fp, sp}
 8001ae0:	08003014 	stmdaeq	r0, {r2, r4, ip, sp}
 8001ae4:	08003030 	stmdaeq	r0, {r4, r5, ip, sp}
 8001ae8:	08002fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, sp}
 8001aec:	08002ff8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 8001af0:	0800304c 	stmdaeq	r0, {r2, r3, r6, ip, sp}

08001af4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001af4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b2c <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001af8:	f7ff fe48 	bl	800178c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001afc:	480c      	ldr	r0, [pc, #48]	; (8001b30 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001afe:	490d      	ldr	r1, [pc, #52]	; (8001b34 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001b00:	4a0d      	ldr	r2, [pc, #52]	; (8001b38 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001b02:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001b04:	e002      	b.n	8001b0c <LoopCopyDataInit>

08001b06 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001b06:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001b08:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001b0a:	3304      	adds	r3, #4

08001b0c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001b0c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001b0e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001b10:	d3f9      	bcc.n	8001b06 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001b12:	4a0a      	ldr	r2, [pc, #40]	; (8001b3c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001b14:	4c0a      	ldr	r4, [pc, #40]	; (8001b40 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001b16:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b18:	e001      	b.n	8001b1e <LoopFillZerobss>

08001b1a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b1a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b1c:	3204      	adds	r2, #4

08001b1e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b1e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b20:	d3fb      	bcc.n	8001b1a <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001b22:	f000 f817 	bl	8001b54 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001b26:	f7fe fe19 	bl	800075c <main>
  bx  lr    
 8001b2a:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001b2c:	20001238 	andcs	r1, r0, r8, lsr r2
  ldr r0, =_sdata
 8001b30:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 8001b34:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r2, =_sidata
 8001b38:	08003110 	stmdaeq	r0, {r4, r8, ip, sp}
  ldr r2, =_sbss
 8001b3c:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r4, =_ebss
 8001b40:	20000234 	andcs	r0, r0, r4, lsr r2

08001b44 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b44:	e7fe      	b.n	8001b44 <ADC_IRQHandler>
	...

08001b48 <__errno>:
 8001b48:	4b01      	ldr	r3, [pc, #4]	; (8001b50 <__errno+0x8>)
 8001b4a:	6818      	ldr	r0, [r3, #0]
 8001b4c:	4770      	bx	lr
 8001b4e:	bf00      	nop
 8001b50:	2000000c 	andcs	r0, r0, ip

08001b54 <__libc_init_array>:
 8001b54:	b570      	push	{r4, r5, r6, lr}
 8001b56:	4d0d      	ldr	r5, [pc, #52]	; (8001b8c <__libc_init_array+0x38>)
 8001b58:	4c0d      	ldr	r4, [pc, #52]	; (8001b90 <__libc_init_array+0x3c>)
 8001b5a:	1b64      	subs	r4, r4, r5
 8001b5c:	10a4      	asrs	r4, r4, #2
 8001b5e:	2600      	movs	r6, #0
 8001b60:	42a6      	cmp	r6, r4
 8001b62:	d109      	bne.n	8001b78 <__libc_init_array+0x24>
 8001b64:	4d0b      	ldr	r5, [pc, #44]	; (8001b94 <__libc_init_array+0x40>)
 8001b66:	4c0c      	ldr	r4, [pc, #48]	; (8001b98 <__libc_init_array+0x44>)
 8001b68:	f001 f824 	bl	8002bb4 <_init>
 8001b6c:	1b64      	subs	r4, r4, r5
 8001b6e:	10a4      	asrs	r4, r4, #2
 8001b70:	2600      	movs	r6, #0
 8001b72:	42a6      	cmp	r6, r4
 8001b74:	d105      	bne.n	8001b82 <__libc_init_array+0x2e>
 8001b76:	bd70      	pop	{r4, r5, r6, pc}
 8001b78:	f855 3b04 	ldr.w	r3, [r5], #4
 8001b7c:	4798      	blx	r3
 8001b7e:	3601      	adds	r6, #1
 8001b80:	e7ee      	b.n	8001b60 <__libc_init_array+0xc>
 8001b82:	f855 3b04 	ldr.w	r3, [r5], #4
 8001b86:	4798      	blx	r3
 8001b88:	3601      	adds	r6, #1
 8001b8a:	e7f2      	b.n	8001b72 <__libc_init_array+0x1e>
 8001b8c:	08003108 	stmdaeq	r0, {r3, r8, ip, sp}
 8001b90:	08003108 	stmdaeq	r0, {r3, r8, ip, sp}
 8001b94:	08003108 	stmdaeq	r0, {r3, r8, ip, sp}
 8001b98:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}

08001b9c <memset>:
 8001b9c:	4402      	add	r2, r0
 8001b9e:	4603      	mov	r3, r0
 8001ba0:	4293      	cmp	r3, r2
 8001ba2:	d100      	bne.n	8001ba6 <memset+0xa>
 8001ba4:	4770      	bx	lr
 8001ba6:	f803 1b01 	strb.w	r1, [r3], #1
 8001baa:	e7f9      	b.n	8001ba0 <memset+0x4>

08001bac <iprintf>:
 8001bac:	b40f      	push	{r0, r1, r2, r3}
 8001bae:	4b0a      	ldr	r3, [pc, #40]	; (8001bd8 <iprintf+0x2c>)
 8001bb0:	b513      	push	{r0, r1, r4, lr}
 8001bb2:	681c      	ldr	r4, [r3, #0]
 8001bb4:	b124      	cbz	r4, 8001bc0 <iprintf+0x14>
 8001bb6:	69a3      	ldr	r3, [r4, #24]
 8001bb8:	b913      	cbnz	r3, 8001bc0 <iprintf+0x14>
 8001bba:	4620      	mov	r0, r4
 8001bbc:	f000 fa5e 	bl	800207c <__sinit>
 8001bc0:	ab05      	add	r3, sp, #20
 8001bc2:	9a04      	ldr	r2, [sp, #16]
 8001bc4:	68a1      	ldr	r1, [r4, #8]
 8001bc6:	9301      	str	r3, [sp, #4]
 8001bc8:	4620      	mov	r0, r4
 8001bca:	f000 fc67 	bl	800249c <_vfiprintf_r>
 8001bce:	b002      	add	sp, #8
 8001bd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bd4:	b004      	add	sp, #16
 8001bd6:	4770      	bx	lr
 8001bd8:	2000000c 	andcs	r0, r0, ip

08001bdc <_puts_r>:
 8001bdc:	b570      	push	{r4, r5, r6, lr}
 8001bde:	460e      	mov	r6, r1
 8001be0:	4605      	mov	r5, r0
 8001be2:	b118      	cbz	r0, 8001bec <_puts_r+0x10>
 8001be4:	6983      	ldr	r3, [r0, #24]
 8001be6:	b90b      	cbnz	r3, 8001bec <_puts_r+0x10>
 8001be8:	f000 fa48 	bl	800207c <__sinit>
 8001bec:	69ab      	ldr	r3, [r5, #24]
 8001bee:	68ac      	ldr	r4, [r5, #8]
 8001bf0:	b913      	cbnz	r3, 8001bf8 <_puts_r+0x1c>
 8001bf2:	4628      	mov	r0, r5
 8001bf4:	f000 fa42 	bl	800207c <__sinit>
 8001bf8:	4b2c      	ldr	r3, [pc, #176]	; (8001cac <_puts_r+0xd0>)
 8001bfa:	429c      	cmp	r4, r3
 8001bfc:	d120      	bne.n	8001c40 <_puts_r+0x64>
 8001bfe:	686c      	ldr	r4, [r5, #4]
 8001c00:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c02:	07db      	lsls	r3, r3, #31
 8001c04:	d405      	bmi.n	8001c12 <_puts_r+0x36>
 8001c06:	89a3      	ldrh	r3, [r4, #12]
 8001c08:	0598      	lsls	r0, r3, #22
 8001c0a:	d402      	bmi.n	8001c12 <_puts_r+0x36>
 8001c0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c0e:	f000 fad3 	bl	80021b8 <__retarget_lock_acquire_recursive>
 8001c12:	89a3      	ldrh	r3, [r4, #12]
 8001c14:	0719      	lsls	r1, r3, #28
 8001c16:	d51d      	bpl.n	8001c54 <_puts_r+0x78>
 8001c18:	6923      	ldr	r3, [r4, #16]
 8001c1a:	b1db      	cbz	r3, 8001c54 <_puts_r+0x78>
 8001c1c:	3e01      	subs	r6, #1
 8001c1e:	68a3      	ldr	r3, [r4, #8]
 8001c20:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001c24:	3b01      	subs	r3, #1
 8001c26:	60a3      	str	r3, [r4, #8]
 8001c28:	bb39      	cbnz	r1, 8001c7a <_puts_r+0x9e>
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	da38      	bge.n	8001ca0 <_puts_r+0xc4>
 8001c2e:	4622      	mov	r2, r4
 8001c30:	210a      	movs	r1, #10
 8001c32:	4628      	mov	r0, r5
 8001c34:	f000 f848 	bl	8001cc8 <__swbuf_r>
 8001c38:	3001      	adds	r0, #1
 8001c3a:	d011      	beq.n	8001c60 <_puts_r+0x84>
 8001c3c:	250a      	movs	r5, #10
 8001c3e:	e011      	b.n	8001c64 <_puts_r+0x88>
 8001c40:	4b1b      	ldr	r3, [pc, #108]	; (8001cb0 <_puts_r+0xd4>)
 8001c42:	429c      	cmp	r4, r3
 8001c44:	d101      	bne.n	8001c4a <_puts_r+0x6e>
 8001c46:	68ac      	ldr	r4, [r5, #8]
 8001c48:	e7da      	b.n	8001c00 <_puts_r+0x24>
 8001c4a:	4b1a      	ldr	r3, [pc, #104]	; (8001cb4 <_puts_r+0xd8>)
 8001c4c:	429c      	cmp	r4, r3
 8001c4e:	bf08      	it	eq
 8001c50:	68ec      	ldreq	r4, [r5, #12]
 8001c52:	e7d5      	b.n	8001c00 <_puts_r+0x24>
 8001c54:	4621      	mov	r1, r4
 8001c56:	4628      	mov	r0, r5
 8001c58:	f000 f888 	bl	8001d6c <__swsetup_r>
 8001c5c:	2800      	cmp	r0, #0
 8001c5e:	d0dd      	beq.n	8001c1c <_puts_r+0x40>
 8001c60:	f04f 35ff 	mov.w	r5, #4294967295
 8001c64:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c66:	07da      	lsls	r2, r3, #31
 8001c68:	d405      	bmi.n	8001c76 <_puts_r+0x9a>
 8001c6a:	89a3      	ldrh	r3, [r4, #12]
 8001c6c:	059b      	lsls	r3, r3, #22
 8001c6e:	d402      	bmi.n	8001c76 <_puts_r+0x9a>
 8001c70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c72:	f000 faa2 	bl	80021ba <__retarget_lock_release_recursive>
 8001c76:	4628      	mov	r0, r5
 8001c78:	bd70      	pop	{r4, r5, r6, pc}
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	da04      	bge.n	8001c88 <_puts_r+0xac>
 8001c7e:	69a2      	ldr	r2, [r4, #24]
 8001c80:	429a      	cmp	r2, r3
 8001c82:	dc06      	bgt.n	8001c92 <_puts_r+0xb6>
 8001c84:	290a      	cmp	r1, #10
 8001c86:	d004      	beq.n	8001c92 <_puts_r+0xb6>
 8001c88:	6823      	ldr	r3, [r4, #0]
 8001c8a:	1c5a      	adds	r2, r3, #1
 8001c8c:	6022      	str	r2, [r4, #0]
 8001c8e:	7019      	strb	r1, [r3, #0]
 8001c90:	e7c5      	b.n	8001c1e <_puts_r+0x42>
 8001c92:	4622      	mov	r2, r4
 8001c94:	4628      	mov	r0, r5
 8001c96:	f000 f817 	bl	8001cc8 <__swbuf_r>
 8001c9a:	3001      	adds	r0, #1
 8001c9c:	d1bf      	bne.n	8001c1e <_puts_r+0x42>
 8001c9e:	e7df      	b.n	8001c60 <_puts_r+0x84>
 8001ca0:	6823      	ldr	r3, [r4, #0]
 8001ca2:	250a      	movs	r5, #10
 8001ca4:	1c5a      	adds	r2, r3, #1
 8001ca6:	6022      	str	r2, [r4, #0]
 8001ca8:	701d      	strb	r5, [r3, #0]
 8001caa:	e7db      	b.n	8001c64 <_puts_r+0x88>
 8001cac:	0800308c 	stmdaeq	r0, {r2, r3, r7, ip, sp}
 8001cb0:	080030ac 	stmdaeq	r0, {r2, r3, r5, r7, ip, sp}
 8001cb4:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}

08001cb8 <puts>:
 8001cb8:	4b02      	ldr	r3, [pc, #8]	; (8001cc4 <puts+0xc>)
 8001cba:	4601      	mov	r1, r0
 8001cbc:	6818      	ldr	r0, [r3, #0]
 8001cbe:	f7ff bf8d 	b.w	8001bdc <_puts_r>
 8001cc2:	bf00      	nop
 8001cc4:	2000000c 	andcs	r0, r0, ip

08001cc8 <__swbuf_r>:
 8001cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cca:	460e      	mov	r6, r1
 8001ccc:	4614      	mov	r4, r2
 8001cce:	4605      	mov	r5, r0
 8001cd0:	b118      	cbz	r0, 8001cda <__swbuf_r+0x12>
 8001cd2:	6983      	ldr	r3, [r0, #24]
 8001cd4:	b90b      	cbnz	r3, 8001cda <__swbuf_r+0x12>
 8001cd6:	f000 f9d1 	bl	800207c <__sinit>
 8001cda:	4b21      	ldr	r3, [pc, #132]	; (8001d60 <__swbuf_r+0x98>)
 8001cdc:	429c      	cmp	r4, r3
 8001cde:	d12b      	bne.n	8001d38 <__swbuf_r+0x70>
 8001ce0:	686c      	ldr	r4, [r5, #4]
 8001ce2:	69a3      	ldr	r3, [r4, #24]
 8001ce4:	60a3      	str	r3, [r4, #8]
 8001ce6:	89a3      	ldrh	r3, [r4, #12]
 8001ce8:	071a      	lsls	r2, r3, #28
 8001cea:	d52f      	bpl.n	8001d4c <__swbuf_r+0x84>
 8001cec:	6923      	ldr	r3, [r4, #16]
 8001cee:	b36b      	cbz	r3, 8001d4c <__swbuf_r+0x84>
 8001cf0:	6923      	ldr	r3, [r4, #16]
 8001cf2:	6820      	ldr	r0, [r4, #0]
 8001cf4:	1ac0      	subs	r0, r0, r3
 8001cf6:	6963      	ldr	r3, [r4, #20]
 8001cf8:	b2f6      	uxtb	r6, r6
 8001cfa:	4283      	cmp	r3, r0
 8001cfc:	4637      	mov	r7, r6
 8001cfe:	dc04      	bgt.n	8001d0a <__swbuf_r+0x42>
 8001d00:	4621      	mov	r1, r4
 8001d02:	4628      	mov	r0, r5
 8001d04:	f000 f926 	bl	8001f54 <_fflush_r>
 8001d08:	bb30      	cbnz	r0, 8001d58 <__swbuf_r+0x90>
 8001d0a:	68a3      	ldr	r3, [r4, #8]
 8001d0c:	3b01      	subs	r3, #1
 8001d0e:	60a3      	str	r3, [r4, #8]
 8001d10:	6823      	ldr	r3, [r4, #0]
 8001d12:	1c5a      	adds	r2, r3, #1
 8001d14:	6022      	str	r2, [r4, #0]
 8001d16:	701e      	strb	r6, [r3, #0]
 8001d18:	6963      	ldr	r3, [r4, #20]
 8001d1a:	3001      	adds	r0, #1
 8001d1c:	4283      	cmp	r3, r0
 8001d1e:	d004      	beq.n	8001d2a <__swbuf_r+0x62>
 8001d20:	89a3      	ldrh	r3, [r4, #12]
 8001d22:	07db      	lsls	r3, r3, #31
 8001d24:	d506      	bpl.n	8001d34 <__swbuf_r+0x6c>
 8001d26:	2e0a      	cmp	r6, #10
 8001d28:	d104      	bne.n	8001d34 <__swbuf_r+0x6c>
 8001d2a:	4621      	mov	r1, r4
 8001d2c:	4628      	mov	r0, r5
 8001d2e:	f000 f911 	bl	8001f54 <_fflush_r>
 8001d32:	b988      	cbnz	r0, 8001d58 <__swbuf_r+0x90>
 8001d34:	4638      	mov	r0, r7
 8001d36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001d38:	4b0a      	ldr	r3, [pc, #40]	; (8001d64 <__swbuf_r+0x9c>)
 8001d3a:	429c      	cmp	r4, r3
 8001d3c:	d101      	bne.n	8001d42 <__swbuf_r+0x7a>
 8001d3e:	68ac      	ldr	r4, [r5, #8]
 8001d40:	e7cf      	b.n	8001ce2 <__swbuf_r+0x1a>
 8001d42:	4b09      	ldr	r3, [pc, #36]	; (8001d68 <__swbuf_r+0xa0>)
 8001d44:	429c      	cmp	r4, r3
 8001d46:	bf08      	it	eq
 8001d48:	68ec      	ldreq	r4, [r5, #12]
 8001d4a:	e7ca      	b.n	8001ce2 <__swbuf_r+0x1a>
 8001d4c:	4621      	mov	r1, r4
 8001d4e:	4628      	mov	r0, r5
 8001d50:	f000 f80c 	bl	8001d6c <__swsetup_r>
 8001d54:	2800      	cmp	r0, #0
 8001d56:	d0cb      	beq.n	8001cf0 <__swbuf_r+0x28>
 8001d58:	f04f 37ff 	mov.w	r7, #4294967295
 8001d5c:	e7ea      	b.n	8001d34 <__swbuf_r+0x6c>
 8001d5e:	bf00      	nop
 8001d60:	0800308c 	stmdaeq	r0, {r2, r3, r7, ip, sp}
 8001d64:	080030ac 	stmdaeq	r0, {r2, r3, r5, r7, ip, sp}
 8001d68:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}

08001d6c <__swsetup_r>:
 8001d6c:	4b32      	ldr	r3, [pc, #200]	; (8001e38 <__swsetup_r+0xcc>)
 8001d6e:	b570      	push	{r4, r5, r6, lr}
 8001d70:	681d      	ldr	r5, [r3, #0]
 8001d72:	4606      	mov	r6, r0
 8001d74:	460c      	mov	r4, r1
 8001d76:	b125      	cbz	r5, 8001d82 <__swsetup_r+0x16>
 8001d78:	69ab      	ldr	r3, [r5, #24]
 8001d7a:	b913      	cbnz	r3, 8001d82 <__swsetup_r+0x16>
 8001d7c:	4628      	mov	r0, r5
 8001d7e:	f000 f97d 	bl	800207c <__sinit>
 8001d82:	4b2e      	ldr	r3, [pc, #184]	; (8001e3c <__swsetup_r+0xd0>)
 8001d84:	429c      	cmp	r4, r3
 8001d86:	d10f      	bne.n	8001da8 <__swsetup_r+0x3c>
 8001d88:	686c      	ldr	r4, [r5, #4]
 8001d8a:	89a3      	ldrh	r3, [r4, #12]
 8001d8c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001d90:	0719      	lsls	r1, r3, #28
 8001d92:	d42c      	bmi.n	8001dee <__swsetup_r+0x82>
 8001d94:	06dd      	lsls	r5, r3, #27
 8001d96:	d411      	bmi.n	8001dbc <__swsetup_r+0x50>
 8001d98:	2309      	movs	r3, #9
 8001d9a:	6033      	str	r3, [r6, #0]
 8001d9c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001da0:	81a3      	strh	r3, [r4, #12]
 8001da2:	f04f 30ff 	mov.w	r0, #4294967295
 8001da6:	e03e      	b.n	8001e26 <__swsetup_r+0xba>
 8001da8:	4b25      	ldr	r3, [pc, #148]	; (8001e40 <__swsetup_r+0xd4>)
 8001daa:	429c      	cmp	r4, r3
 8001dac:	d101      	bne.n	8001db2 <__swsetup_r+0x46>
 8001dae:	68ac      	ldr	r4, [r5, #8]
 8001db0:	e7eb      	b.n	8001d8a <__swsetup_r+0x1e>
 8001db2:	4b24      	ldr	r3, [pc, #144]	; (8001e44 <__swsetup_r+0xd8>)
 8001db4:	429c      	cmp	r4, r3
 8001db6:	bf08      	it	eq
 8001db8:	68ec      	ldreq	r4, [r5, #12]
 8001dba:	e7e6      	b.n	8001d8a <__swsetup_r+0x1e>
 8001dbc:	0758      	lsls	r0, r3, #29
 8001dbe:	d512      	bpl.n	8001de6 <__swsetup_r+0x7a>
 8001dc0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001dc2:	b141      	cbz	r1, 8001dd6 <__swsetup_r+0x6a>
 8001dc4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001dc8:	4299      	cmp	r1, r3
 8001dca:	d002      	beq.n	8001dd2 <__swsetup_r+0x66>
 8001dcc:	4630      	mov	r0, r6
 8001dce:	f000 fa5b 	bl	8002288 <_free_r>
 8001dd2:	2300      	movs	r3, #0
 8001dd4:	6363      	str	r3, [r4, #52]	; 0x34
 8001dd6:	89a3      	ldrh	r3, [r4, #12]
 8001dd8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001ddc:	81a3      	strh	r3, [r4, #12]
 8001dde:	2300      	movs	r3, #0
 8001de0:	6063      	str	r3, [r4, #4]
 8001de2:	6923      	ldr	r3, [r4, #16]
 8001de4:	6023      	str	r3, [r4, #0]
 8001de6:	89a3      	ldrh	r3, [r4, #12]
 8001de8:	f043 0308 	orr.w	r3, r3, #8
 8001dec:	81a3      	strh	r3, [r4, #12]
 8001dee:	6923      	ldr	r3, [r4, #16]
 8001df0:	b94b      	cbnz	r3, 8001e06 <__swsetup_r+0x9a>
 8001df2:	89a3      	ldrh	r3, [r4, #12]
 8001df4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001df8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001dfc:	d003      	beq.n	8001e06 <__swsetup_r+0x9a>
 8001dfe:	4621      	mov	r1, r4
 8001e00:	4630      	mov	r0, r6
 8001e02:	f000 fa01 	bl	8002208 <__smakebuf_r>
 8001e06:	89a0      	ldrh	r0, [r4, #12]
 8001e08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001e0c:	f010 0301 	ands.w	r3, r0, #1
 8001e10:	d00a      	beq.n	8001e28 <__swsetup_r+0xbc>
 8001e12:	2300      	movs	r3, #0
 8001e14:	60a3      	str	r3, [r4, #8]
 8001e16:	6963      	ldr	r3, [r4, #20]
 8001e18:	425b      	negs	r3, r3
 8001e1a:	61a3      	str	r3, [r4, #24]
 8001e1c:	6923      	ldr	r3, [r4, #16]
 8001e1e:	b943      	cbnz	r3, 8001e32 <__swsetup_r+0xc6>
 8001e20:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001e24:	d1ba      	bne.n	8001d9c <__swsetup_r+0x30>
 8001e26:	bd70      	pop	{r4, r5, r6, pc}
 8001e28:	0781      	lsls	r1, r0, #30
 8001e2a:	bf58      	it	pl
 8001e2c:	6963      	ldrpl	r3, [r4, #20]
 8001e2e:	60a3      	str	r3, [r4, #8]
 8001e30:	e7f4      	b.n	8001e1c <__swsetup_r+0xb0>
 8001e32:	2000      	movs	r0, #0
 8001e34:	e7f7      	b.n	8001e26 <__swsetup_r+0xba>
 8001e36:	bf00      	nop
 8001e38:	2000000c 	andcs	r0, r0, ip
 8001e3c:	0800308c 	stmdaeq	r0, {r2, r3, r7, ip, sp}
 8001e40:	080030ac 	stmdaeq	r0, {r2, r3, r5, r7, ip, sp}
 8001e44:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}

08001e48 <__sflush_r>:
 8001e48:	898a      	ldrh	r2, [r1, #12]
 8001e4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e4e:	4605      	mov	r5, r0
 8001e50:	0710      	lsls	r0, r2, #28
 8001e52:	460c      	mov	r4, r1
 8001e54:	d458      	bmi.n	8001f08 <__sflush_r+0xc0>
 8001e56:	684b      	ldr	r3, [r1, #4]
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	dc05      	bgt.n	8001e68 <__sflush_r+0x20>
 8001e5c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	dc02      	bgt.n	8001e68 <__sflush_r+0x20>
 8001e62:	2000      	movs	r0, #0
 8001e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e68:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001e6a:	2e00      	cmp	r6, #0
 8001e6c:	d0f9      	beq.n	8001e62 <__sflush_r+0x1a>
 8001e6e:	2300      	movs	r3, #0
 8001e70:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001e74:	682f      	ldr	r7, [r5, #0]
 8001e76:	602b      	str	r3, [r5, #0]
 8001e78:	d032      	beq.n	8001ee0 <__sflush_r+0x98>
 8001e7a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001e7c:	89a3      	ldrh	r3, [r4, #12]
 8001e7e:	075a      	lsls	r2, r3, #29
 8001e80:	d505      	bpl.n	8001e8e <__sflush_r+0x46>
 8001e82:	6863      	ldr	r3, [r4, #4]
 8001e84:	1ac0      	subs	r0, r0, r3
 8001e86:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001e88:	b10b      	cbz	r3, 8001e8e <__sflush_r+0x46>
 8001e8a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e8c:	1ac0      	subs	r0, r0, r3
 8001e8e:	2300      	movs	r3, #0
 8001e90:	4602      	mov	r2, r0
 8001e92:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001e94:	6a21      	ldr	r1, [r4, #32]
 8001e96:	4628      	mov	r0, r5
 8001e98:	47b0      	blx	r6
 8001e9a:	1c43      	adds	r3, r0, #1
 8001e9c:	89a3      	ldrh	r3, [r4, #12]
 8001e9e:	d106      	bne.n	8001eae <__sflush_r+0x66>
 8001ea0:	6829      	ldr	r1, [r5, #0]
 8001ea2:	291d      	cmp	r1, #29
 8001ea4:	d82c      	bhi.n	8001f00 <__sflush_r+0xb8>
 8001ea6:	4a2a      	ldr	r2, [pc, #168]	; (8001f50 <__sflush_r+0x108>)
 8001ea8:	40ca      	lsrs	r2, r1
 8001eaa:	07d6      	lsls	r6, r2, #31
 8001eac:	d528      	bpl.n	8001f00 <__sflush_r+0xb8>
 8001eae:	2200      	movs	r2, #0
 8001eb0:	6062      	str	r2, [r4, #4]
 8001eb2:	04d9      	lsls	r1, r3, #19
 8001eb4:	6922      	ldr	r2, [r4, #16]
 8001eb6:	6022      	str	r2, [r4, #0]
 8001eb8:	d504      	bpl.n	8001ec4 <__sflush_r+0x7c>
 8001eba:	1c42      	adds	r2, r0, #1
 8001ebc:	d101      	bne.n	8001ec2 <__sflush_r+0x7a>
 8001ebe:	682b      	ldr	r3, [r5, #0]
 8001ec0:	b903      	cbnz	r3, 8001ec4 <__sflush_r+0x7c>
 8001ec2:	6560      	str	r0, [r4, #84]	; 0x54
 8001ec4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001ec6:	602f      	str	r7, [r5, #0]
 8001ec8:	2900      	cmp	r1, #0
 8001eca:	d0ca      	beq.n	8001e62 <__sflush_r+0x1a>
 8001ecc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001ed0:	4299      	cmp	r1, r3
 8001ed2:	d002      	beq.n	8001eda <__sflush_r+0x92>
 8001ed4:	4628      	mov	r0, r5
 8001ed6:	f000 f9d7 	bl	8002288 <_free_r>
 8001eda:	2000      	movs	r0, #0
 8001edc:	6360      	str	r0, [r4, #52]	; 0x34
 8001ede:	e7c1      	b.n	8001e64 <__sflush_r+0x1c>
 8001ee0:	6a21      	ldr	r1, [r4, #32]
 8001ee2:	2301      	movs	r3, #1
 8001ee4:	4628      	mov	r0, r5
 8001ee6:	47b0      	blx	r6
 8001ee8:	1c41      	adds	r1, r0, #1
 8001eea:	d1c7      	bne.n	8001e7c <__sflush_r+0x34>
 8001eec:	682b      	ldr	r3, [r5, #0]
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d0c4      	beq.n	8001e7c <__sflush_r+0x34>
 8001ef2:	2b1d      	cmp	r3, #29
 8001ef4:	d001      	beq.n	8001efa <__sflush_r+0xb2>
 8001ef6:	2b16      	cmp	r3, #22
 8001ef8:	d101      	bne.n	8001efe <__sflush_r+0xb6>
 8001efa:	602f      	str	r7, [r5, #0]
 8001efc:	e7b1      	b.n	8001e62 <__sflush_r+0x1a>
 8001efe:	89a3      	ldrh	r3, [r4, #12]
 8001f00:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f04:	81a3      	strh	r3, [r4, #12]
 8001f06:	e7ad      	b.n	8001e64 <__sflush_r+0x1c>
 8001f08:	690f      	ldr	r7, [r1, #16]
 8001f0a:	2f00      	cmp	r7, #0
 8001f0c:	d0a9      	beq.n	8001e62 <__sflush_r+0x1a>
 8001f0e:	0793      	lsls	r3, r2, #30
 8001f10:	680e      	ldr	r6, [r1, #0]
 8001f12:	bf08      	it	eq
 8001f14:	694b      	ldreq	r3, [r1, #20]
 8001f16:	600f      	str	r7, [r1, #0]
 8001f18:	bf18      	it	ne
 8001f1a:	2300      	movne	r3, #0
 8001f1c:	eba6 0807 	sub.w	r8, r6, r7
 8001f20:	608b      	str	r3, [r1, #8]
 8001f22:	f1b8 0f00 	cmp.w	r8, #0
 8001f26:	dd9c      	ble.n	8001e62 <__sflush_r+0x1a>
 8001f28:	6a21      	ldr	r1, [r4, #32]
 8001f2a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001f2c:	4643      	mov	r3, r8
 8001f2e:	463a      	mov	r2, r7
 8001f30:	4628      	mov	r0, r5
 8001f32:	47b0      	blx	r6
 8001f34:	2800      	cmp	r0, #0
 8001f36:	dc06      	bgt.n	8001f46 <__sflush_r+0xfe>
 8001f38:	89a3      	ldrh	r3, [r4, #12]
 8001f3a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f3e:	81a3      	strh	r3, [r4, #12]
 8001f40:	f04f 30ff 	mov.w	r0, #4294967295
 8001f44:	e78e      	b.n	8001e64 <__sflush_r+0x1c>
 8001f46:	4407      	add	r7, r0
 8001f48:	eba8 0800 	sub.w	r8, r8, r0
 8001f4c:	e7e9      	b.n	8001f22 <__sflush_r+0xda>
 8001f4e:	bf00      	nop
 8001f50:	20400001 	subcs	r0, r0, r1

08001f54 <_fflush_r>:
 8001f54:	b538      	push	{r3, r4, r5, lr}
 8001f56:	690b      	ldr	r3, [r1, #16]
 8001f58:	4605      	mov	r5, r0
 8001f5a:	460c      	mov	r4, r1
 8001f5c:	b913      	cbnz	r3, 8001f64 <_fflush_r+0x10>
 8001f5e:	2500      	movs	r5, #0
 8001f60:	4628      	mov	r0, r5
 8001f62:	bd38      	pop	{r3, r4, r5, pc}
 8001f64:	b118      	cbz	r0, 8001f6e <_fflush_r+0x1a>
 8001f66:	6983      	ldr	r3, [r0, #24]
 8001f68:	b90b      	cbnz	r3, 8001f6e <_fflush_r+0x1a>
 8001f6a:	f000 f887 	bl	800207c <__sinit>
 8001f6e:	4b14      	ldr	r3, [pc, #80]	; (8001fc0 <_fflush_r+0x6c>)
 8001f70:	429c      	cmp	r4, r3
 8001f72:	d11b      	bne.n	8001fac <_fflush_r+0x58>
 8001f74:	686c      	ldr	r4, [r5, #4]
 8001f76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d0ef      	beq.n	8001f5e <_fflush_r+0xa>
 8001f7e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001f80:	07d0      	lsls	r0, r2, #31
 8001f82:	d404      	bmi.n	8001f8e <_fflush_r+0x3a>
 8001f84:	0599      	lsls	r1, r3, #22
 8001f86:	d402      	bmi.n	8001f8e <_fflush_r+0x3a>
 8001f88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001f8a:	f000 f915 	bl	80021b8 <__retarget_lock_acquire_recursive>
 8001f8e:	4628      	mov	r0, r5
 8001f90:	4621      	mov	r1, r4
 8001f92:	f7ff ff59 	bl	8001e48 <__sflush_r>
 8001f96:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001f98:	07da      	lsls	r2, r3, #31
 8001f9a:	4605      	mov	r5, r0
 8001f9c:	d4e0      	bmi.n	8001f60 <_fflush_r+0xc>
 8001f9e:	89a3      	ldrh	r3, [r4, #12]
 8001fa0:	059b      	lsls	r3, r3, #22
 8001fa2:	d4dd      	bmi.n	8001f60 <_fflush_r+0xc>
 8001fa4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001fa6:	f000 f908 	bl	80021ba <__retarget_lock_release_recursive>
 8001faa:	e7d9      	b.n	8001f60 <_fflush_r+0xc>
 8001fac:	4b05      	ldr	r3, [pc, #20]	; (8001fc4 <_fflush_r+0x70>)
 8001fae:	429c      	cmp	r4, r3
 8001fb0:	d101      	bne.n	8001fb6 <_fflush_r+0x62>
 8001fb2:	68ac      	ldr	r4, [r5, #8]
 8001fb4:	e7df      	b.n	8001f76 <_fflush_r+0x22>
 8001fb6:	4b04      	ldr	r3, [pc, #16]	; (8001fc8 <_fflush_r+0x74>)
 8001fb8:	429c      	cmp	r4, r3
 8001fba:	bf08      	it	eq
 8001fbc:	68ec      	ldreq	r4, [r5, #12]
 8001fbe:	e7da      	b.n	8001f76 <_fflush_r+0x22>
 8001fc0:	0800308c 	stmdaeq	r0, {r2, r3, r7, ip, sp}
 8001fc4:	080030ac 	stmdaeq	r0, {r2, r3, r5, r7, ip, sp}
 8001fc8:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}

08001fcc <std>:
 8001fcc:	2300      	movs	r3, #0
 8001fce:	b510      	push	{r4, lr}
 8001fd0:	4604      	mov	r4, r0
 8001fd2:	e9c0 3300 	strd	r3, r3, [r0]
 8001fd6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001fda:	6083      	str	r3, [r0, #8]
 8001fdc:	8181      	strh	r1, [r0, #12]
 8001fde:	6643      	str	r3, [r0, #100]	; 0x64
 8001fe0:	81c2      	strh	r2, [r0, #14]
 8001fe2:	6183      	str	r3, [r0, #24]
 8001fe4:	4619      	mov	r1, r3
 8001fe6:	2208      	movs	r2, #8
 8001fe8:	305c      	adds	r0, #92	; 0x5c
 8001fea:	f7ff fdd7 	bl	8001b9c <memset>
 8001fee:	4b05      	ldr	r3, [pc, #20]	; (8002004 <std+0x38>)
 8001ff0:	6263      	str	r3, [r4, #36]	; 0x24
 8001ff2:	4b05      	ldr	r3, [pc, #20]	; (8002008 <std+0x3c>)
 8001ff4:	62a3      	str	r3, [r4, #40]	; 0x28
 8001ff6:	4b05      	ldr	r3, [pc, #20]	; (800200c <std+0x40>)
 8001ff8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001ffa:	4b05      	ldr	r3, [pc, #20]	; (8002010 <std+0x44>)
 8001ffc:	6224      	str	r4, [r4, #32]
 8001ffe:	6323      	str	r3, [r4, #48]	; 0x30
 8002000:	bd10      	pop	{r4, pc}
 8002002:	bf00      	nop
 8002004:	08002a45 	stmdaeq	r0, {r0, r2, r6, r9, fp, sp}
 8002008:	08002a67 	stmdaeq	r0, {r0, r1, r2, r5, r6, r9, fp, sp}
 800200c:	08002a9f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, fp, sp}
 8002010:	08002ac3 	stmdaeq	r0, {r0, r1, r6, r7, r9, fp, sp}

08002014 <_cleanup_r>:
 8002014:	4901      	ldr	r1, [pc, #4]	; (800201c <_cleanup_r+0x8>)
 8002016:	f000 b8af 	b.w	8002178 <_fwalk_reent>
 800201a:	bf00      	nop
 800201c:	08001f55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, ip}

08002020 <__sfmoreglue>:
 8002020:	b570      	push	{r4, r5, r6, lr}
 8002022:	2268      	movs	r2, #104	; 0x68
 8002024:	1e4d      	subs	r5, r1, #1
 8002026:	4355      	muls	r5, r2
 8002028:	460e      	mov	r6, r1
 800202a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800202e:	f000 f997 	bl	8002360 <_malloc_r>
 8002032:	4604      	mov	r4, r0
 8002034:	b140      	cbz	r0, 8002048 <__sfmoreglue+0x28>
 8002036:	2100      	movs	r1, #0
 8002038:	e9c0 1600 	strd	r1, r6, [r0]
 800203c:	300c      	adds	r0, #12
 800203e:	60a0      	str	r0, [r4, #8]
 8002040:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002044:	f7ff fdaa 	bl	8001b9c <memset>
 8002048:	4620      	mov	r0, r4
 800204a:	bd70      	pop	{r4, r5, r6, pc}

0800204c <__sfp_lock_acquire>:
 800204c:	4801      	ldr	r0, [pc, #4]	; (8002054 <__sfp_lock_acquire+0x8>)
 800204e:	f000 b8b3 	b.w	80021b8 <__retarget_lock_acquire_recursive>
 8002052:	bf00      	nop
 8002054:	20000225 	andcs	r0, r0, r5, lsr #4

08002058 <__sfp_lock_release>:
 8002058:	4801      	ldr	r0, [pc, #4]	; (8002060 <__sfp_lock_release+0x8>)
 800205a:	f000 b8ae 	b.w	80021ba <__retarget_lock_release_recursive>
 800205e:	bf00      	nop
 8002060:	20000225 	andcs	r0, r0, r5, lsr #4

08002064 <__sinit_lock_acquire>:
 8002064:	4801      	ldr	r0, [pc, #4]	; (800206c <__sinit_lock_acquire+0x8>)
 8002066:	f000 b8a7 	b.w	80021b8 <__retarget_lock_acquire_recursive>
 800206a:	bf00      	nop
 800206c:	20000226 	andcs	r0, r0, r6, lsr #4

08002070 <__sinit_lock_release>:
 8002070:	4801      	ldr	r0, [pc, #4]	; (8002078 <__sinit_lock_release+0x8>)
 8002072:	f000 b8a2 	b.w	80021ba <__retarget_lock_release_recursive>
 8002076:	bf00      	nop
 8002078:	20000226 	andcs	r0, r0, r6, lsr #4

0800207c <__sinit>:
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
 8002080:	f7ff fff0 	bl	8002064 <__sinit_lock_acquire>
 8002084:	69a3      	ldr	r3, [r4, #24]
 8002086:	b11b      	cbz	r3, 8002090 <__sinit+0x14>
 8002088:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800208c:	f7ff bff0 	b.w	8002070 <__sinit_lock_release>
 8002090:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002094:	6523      	str	r3, [r4, #80]	; 0x50
 8002096:	4b13      	ldr	r3, [pc, #76]	; (80020e4 <__sinit+0x68>)
 8002098:	4a13      	ldr	r2, [pc, #76]	; (80020e8 <__sinit+0x6c>)
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	62a2      	str	r2, [r4, #40]	; 0x28
 800209e:	42a3      	cmp	r3, r4
 80020a0:	bf04      	itt	eq
 80020a2:	2301      	moveq	r3, #1
 80020a4:	61a3      	streq	r3, [r4, #24]
 80020a6:	4620      	mov	r0, r4
 80020a8:	f000 f820 	bl	80020ec <__sfp>
 80020ac:	6060      	str	r0, [r4, #4]
 80020ae:	4620      	mov	r0, r4
 80020b0:	f000 f81c 	bl	80020ec <__sfp>
 80020b4:	60a0      	str	r0, [r4, #8]
 80020b6:	4620      	mov	r0, r4
 80020b8:	f000 f818 	bl	80020ec <__sfp>
 80020bc:	2200      	movs	r2, #0
 80020be:	60e0      	str	r0, [r4, #12]
 80020c0:	2104      	movs	r1, #4
 80020c2:	6860      	ldr	r0, [r4, #4]
 80020c4:	f7ff ff82 	bl	8001fcc <std>
 80020c8:	68a0      	ldr	r0, [r4, #8]
 80020ca:	2201      	movs	r2, #1
 80020cc:	2109      	movs	r1, #9
 80020ce:	f7ff ff7d 	bl	8001fcc <std>
 80020d2:	68e0      	ldr	r0, [r4, #12]
 80020d4:	2202      	movs	r2, #2
 80020d6:	2112      	movs	r1, #18
 80020d8:	f7ff ff78 	bl	8001fcc <std>
 80020dc:	2301      	movs	r3, #1
 80020de:	61a3      	str	r3, [r4, #24]
 80020e0:	e7d2      	b.n	8002088 <__sinit+0xc>
 80020e2:	bf00      	nop
 80020e4:	08003068 	stmdaeq	r0, {r3, r5, r6, ip, sp}
 80020e8:	08002015 	stmdaeq	r0, {r0, r2, r4, sp}

080020ec <__sfp>:
 80020ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020ee:	4607      	mov	r7, r0
 80020f0:	f7ff ffac 	bl	800204c <__sfp_lock_acquire>
 80020f4:	4b1e      	ldr	r3, [pc, #120]	; (8002170 <__sfp+0x84>)
 80020f6:	681e      	ldr	r6, [r3, #0]
 80020f8:	69b3      	ldr	r3, [r6, #24]
 80020fa:	b913      	cbnz	r3, 8002102 <__sfp+0x16>
 80020fc:	4630      	mov	r0, r6
 80020fe:	f7ff ffbd 	bl	800207c <__sinit>
 8002102:	3648      	adds	r6, #72	; 0x48
 8002104:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8002108:	3b01      	subs	r3, #1
 800210a:	d503      	bpl.n	8002114 <__sfp+0x28>
 800210c:	6833      	ldr	r3, [r6, #0]
 800210e:	b30b      	cbz	r3, 8002154 <__sfp+0x68>
 8002110:	6836      	ldr	r6, [r6, #0]
 8002112:	e7f7      	b.n	8002104 <__sfp+0x18>
 8002114:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8002118:	b9d5      	cbnz	r5, 8002150 <__sfp+0x64>
 800211a:	4b16      	ldr	r3, [pc, #88]	; (8002174 <__sfp+0x88>)
 800211c:	60e3      	str	r3, [r4, #12]
 800211e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002122:	6665      	str	r5, [r4, #100]	; 0x64
 8002124:	f000 f847 	bl	80021b6 <__retarget_lock_init_recursive>
 8002128:	f7ff ff96 	bl	8002058 <__sfp_lock_release>
 800212c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002130:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002134:	6025      	str	r5, [r4, #0]
 8002136:	61a5      	str	r5, [r4, #24]
 8002138:	2208      	movs	r2, #8
 800213a:	4629      	mov	r1, r5
 800213c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002140:	f7ff fd2c 	bl	8001b9c <memset>
 8002144:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8002148:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800214c:	4620      	mov	r0, r4
 800214e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002150:	3468      	adds	r4, #104	; 0x68
 8002152:	e7d9      	b.n	8002108 <__sfp+0x1c>
 8002154:	2104      	movs	r1, #4
 8002156:	4638      	mov	r0, r7
 8002158:	f7ff ff62 	bl	8002020 <__sfmoreglue>
 800215c:	4604      	mov	r4, r0
 800215e:	6030      	str	r0, [r6, #0]
 8002160:	2800      	cmp	r0, #0
 8002162:	d1d5      	bne.n	8002110 <__sfp+0x24>
 8002164:	f7ff ff78 	bl	8002058 <__sfp_lock_release>
 8002168:	230c      	movs	r3, #12
 800216a:	603b      	str	r3, [r7, #0]
 800216c:	e7ee      	b.n	800214c <__sfp+0x60>
 800216e:	bf00      	nop
 8002170:	08003068 	stmdaeq	r0, {r3, r5, r6, ip, sp}
 8002174:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

08002178 <_fwalk_reent>:
 8002178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800217c:	4606      	mov	r6, r0
 800217e:	4688      	mov	r8, r1
 8002180:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002184:	2700      	movs	r7, #0
 8002186:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800218a:	f1b9 0901 	subs.w	r9, r9, #1
 800218e:	d505      	bpl.n	800219c <_fwalk_reent+0x24>
 8002190:	6824      	ldr	r4, [r4, #0]
 8002192:	2c00      	cmp	r4, #0
 8002194:	d1f7      	bne.n	8002186 <_fwalk_reent+0xe>
 8002196:	4638      	mov	r0, r7
 8002198:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800219c:	89ab      	ldrh	r3, [r5, #12]
 800219e:	2b01      	cmp	r3, #1
 80021a0:	d907      	bls.n	80021b2 <_fwalk_reent+0x3a>
 80021a2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021a6:	3301      	adds	r3, #1
 80021a8:	d003      	beq.n	80021b2 <_fwalk_reent+0x3a>
 80021aa:	4629      	mov	r1, r5
 80021ac:	4630      	mov	r0, r6
 80021ae:	47c0      	blx	r8
 80021b0:	4307      	orrs	r7, r0
 80021b2:	3568      	adds	r5, #104	; 0x68
 80021b4:	e7e9      	b.n	800218a <_fwalk_reent+0x12>

080021b6 <__retarget_lock_init_recursive>:
 80021b6:	4770      	bx	lr

080021b8 <__retarget_lock_acquire_recursive>:
 80021b8:	4770      	bx	lr

080021ba <__retarget_lock_release_recursive>:
 80021ba:	4770      	bx	lr

080021bc <__swhatbuf_r>:
 80021bc:	b570      	push	{r4, r5, r6, lr}
 80021be:	460e      	mov	r6, r1
 80021c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80021c4:	2900      	cmp	r1, #0
 80021c6:	b096      	sub	sp, #88	; 0x58
 80021c8:	4614      	mov	r4, r2
 80021ca:	461d      	mov	r5, r3
 80021cc:	da08      	bge.n	80021e0 <__swhatbuf_r+0x24>
 80021ce:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80021d2:	2200      	movs	r2, #0
 80021d4:	602a      	str	r2, [r5, #0]
 80021d6:	061a      	lsls	r2, r3, #24
 80021d8:	d410      	bmi.n	80021fc <__swhatbuf_r+0x40>
 80021da:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80021de:	e00e      	b.n	80021fe <__swhatbuf_r+0x42>
 80021e0:	466a      	mov	r2, sp
 80021e2:	f000 fc95 	bl	8002b10 <_fstat_r>
 80021e6:	2800      	cmp	r0, #0
 80021e8:	dbf1      	blt.n	80021ce <__swhatbuf_r+0x12>
 80021ea:	9a01      	ldr	r2, [sp, #4]
 80021ec:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80021f0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80021f4:	425a      	negs	r2, r3
 80021f6:	415a      	adcs	r2, r3
 80021f8:	602a      	str	r2, [r5, #0]
 80021fa:	e7ee      	b.n	80021da <__swhatbuf_r+0x1e>
 80021fc:	2340      	movs	r3, #64	; 0x40
 80021fe:	2000      	movs	r0, #0
 8002200:	6023      	str	r3, [r4, #0]
 8002202:	b016      	add	sp, #88	; 0x58
 8002204:	bd70      	pop	{r4, r5, r6, pc}
	...

08002208 <__smakebuf_r>:
 8002208:	898b      	ldrh	r3, [r1, #12]
 800220a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800220c:	079d      	lsls	r5, r3, #30
 800220e:	4606      	mov	r6, r0
 8002210:	460c      	mov	r4, r1
 8002212:	d507      	bpl.n	8002224 <__smakebuf_r+0x1c>
 8002214:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8002218:	6023      	str	r3, [r4, #0]
 800221a:	6123      	str	r3, [r4, #16]
 800221c:	2301      	movs	r3, #1
 800221e:	6163      	str	r3, [r4, #20]
 8002220:	b002      	add	sp, #8
 8002222:	bd70      	pop	{r4, r5, r6, pc}
 8002224:	ab01      	add	r3, sp, #4
 8002226:	466a      	mov	r2, sp
 8002228:	f7ff ffc8 	bl	80021bc <__swhatbuf_r>
 800222c:	9900      	ldr	r1, [sp, #0]
 800222e:	4605      	mov	r5, r0
 8002230:	4630      	mov	r0, r6
 8002232:	f000 f895 	bl	8002360 <_malloc_r>
 8002236:	b948      	cbnz	r0, 800224c <__smakebuf_r+0x44>
 8002238:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800223c:	059a      	lsls	r2, r3, #22
 800223e:	d4ef      	bmi.n	8002220 <__smakebuf_r+0x18>
 8002240:	f023 0303 	bic.w	r3, r3, #3
 8002244:	f043 0302 	orr.w	r3, r3, #2
 8002248:	81a3      	strh	r3, [r4, #12]
 800224a:	e7e3      	b.n	8002214 <__smakebuf_r+0xc>
 800224c:	4b0d      	ldr	r3, [pc, #52]	; (8002284 <__smakebuf_r+0x7c>)
 800224e:	62b3      	str	r3, [r6, #40]	; 0x28
 8002250:	89a3      	ldrh	r3, [r4, #12]
 8002252:	6020      	str	r0, [r4, #0]
 8002254:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002258:	81a3      	strh	r3, [r4, #12]
 800225a:	9b00      	ldr	r3, [sp, #0]
 800225c:	6163      	str	r3, [r4, #20]
 800225e:	9b01      	ldr	r3, [sp, #4]
 8002260:	6120      	str	r0, [r4, #16]
 8002262:	b15b      	cbz	r3, 800227c <__smakebuf_r+0x74>
 8002264:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002268:	4630      	mov	r0, r6
 800226a:	f000 fc63 	bl	8002b34 <_isatty_r>
 800226e:	b128      	cbz	r0, 800227c <__smakebuf_r+0x74>
 8002270:	89a3      	ldrh	r3, [r4, #12]
 8002272:	f023 0303 	bic.w	r3, r3, #3
 8002276:	f043 0301 	orr.w	r3, r3, #1
 800227a:	81a3      	strh	r3, [r4, #12]
 800227c:	89a0      	ldrh	r0, [r4, #12]
 800227e:	4305      	orrs	r5, r0
 8002280:	81a5      	strh	r5, [r4, #12]
 8002282:	e7cd      	b.n	8002220 <__smakebuf_r+0x18>
 8002284:	08002015 	stmdaeq	r0, {r0, r2, r4, sp}

08002288 <_free_r>:
 8002288:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800228a:	2900      	cmp	r1, #0
 800228c:	d044      	beq.n	8002318 <_free_r+0x90>
 800228e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002292:	9001      	str	r0, [sp, #4]
 8002294:	2b00      	cmp	r3, #0
 8002296:	f1a1 0404 	sub.w	r4, r1, #4
 800229a:	bfb8      	it	lt
 800229c:	18e4      	addlt	r4, r4, r3
 800229e:	f000 fc6b 	bl	8002b78 <__malloc_lock>
 80022a2:	4a1e      	ldr	r2, [pc, #120]	; (800231c <_free_r+0x94>)
 80022a4:	9801      	ldr	r0, [sp, #4]
 80022a6:	6813      	ldr	r3, [r2, #0]
 80022a8:	b933      	cbnz	r3, 80022b8 <_free_r+0x30>
 80022aa:	6063      	str	r3, [r4, #4]
 80022ac:	6014      	str	r4, [r2, #0]
 80022ae:	b003      	add	sp, #12
 80022b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80022b4:	f000 bc66 	b.w	8002b84 <__malloc_unlock>
 80022b8:	42a3      	cmp	r3, r4
 80022ba:	d908      	bls.n	80022ce <_free_r+0x46>
 80022bc:	6825      	ldr	r5, [r4, #0]
 80022be:	1961      	adds	r1, r4, r5
 80022c0:	428b      	cmp	r3, r1
 80022c2:	bf01      	itttt	eq
 80022c4:	6819      	ldreq	r1, [r3, #0]
 80022c6:	685b      	ldreq	r3, [r3, #4]
 80022c8:	1949      	addeq	r1, r1, r5
 80022ca:	6021      	streq	r1, [r4, #0]
 80022cc:	e7ed      	b.n	80022aa <_free_r+0x22>
 80022ce:	461a      	mov	r2, r3
 80022d0:	685b      	ldr	r3, [r3, #4]
 80022d2:	b10b      	cbz	r3, 80022d8 <_free_r+0x50>
 80022d4:	42a3      	cmp	r3, r4
 80022d6:	d9fa      	bls.n	80022ce <_free_r+0x46>
 80022d8:	6811      	ldr	r1, [r2, #0]
 80022da:	1855      	adds	r5, r2, r1
 80022dc:	42a5      	cmp	r5, r4
 80022de:	d10b      	bne.n	80022f8 <_free_r+0x70>
 80022e0:	6824      	ldr	r4, [r4, #0]
 80022e2:	4421      	add	r1, r4
 80022e4:	1854      	adds	r4, r2, r1
 80022e6:	42a3      	cmp	r3, r4
 80022e8:	6011      	str	r1, [r2, #0]
 80022ea:	d1e0      	bne.n	80022ae <_free_r+0x26>
 80022ec:	681c      	ldr	r4, [r3, #0]
 80022ee:	685b      	ldr	r3, [r3, #4]
 80022f0:	6053      	str	r3, [r2, #4]
 80022f2:	4421      	add	r1, r4
 80022f4:	6011      	str	r1, [r2, #0]
 80022f6:	e7da      	b.n	80022ae <_free_r+0x26>
 80022f8:	d902      	bls.n	8002300 <_free_r+0x78>
 80022fa:	230c      	movs	r3, #12
 80022fc:	6003      	str	r3, [r0, #0]
 80022fe:	e7d6      	b.n	80022ae <_free_r+0x26>
 8002300:	6825      	ldr	r5, [r4, #0]
 8002302:	1961      	adds	r1, r4, r5
 8002304:	428b      	cmp	r3, r1
 8002306:	bf04      	itt	eq
 8002308:	6819      	ldreq	r1, [r3, #0]
 800230a:	685b      	ldreq	r3, [r3, #4]
 800230c:	6063      	str	r3, [r4, #4]
 800230e:	bf04      	itt	eq
 8002310:	1949      	addeq	r1, r1, r5
 8002312:	6021      	streq	r1, [r4, #0]
 8002314:	6054      	str	r4, [r2, #4]
 8002316:	e7ca      	b.n	80022ae <_free_r+0x26>
 8002318:	b003      	add	sp, #12
 800231a:	bd30      	pop	{r4, r5, pc}
 800231c:	20000228 	andcs	r0, r0, r8, lsr #4

08002320 <sbrk_aligned>:
 8002320:	b570      	push	{r4, r5, r6, lr}
 8002322:	4e0e      	ldr	r6, [pc, #56]	; (800235c <sbrk_aligned+0x3c>)
 8002324:	460c      	mov	r4, r1
 8002326:	6831      	ldr	r1, [r6, #0]
 8002328:	4605      	mov	r5, r0
 800232a:	b911      	cbnz	r1, 8002332 <sbrk_aligned+0x12>
 800232c:	f000 fb7a 	bl	8002a24 <_sbrk_r>
 8002330:	6030      	str	r0, [r6, #0]
 8002332:	4621      	mov	r1, r4
 8002334:	4628      	mov	r0, r5
 8002336:	f000 fb75 	bl	8002a24 <_sbrk_r>
 800233a:	1c43      	adds	r3, r0, #1
 800233c:	d00a      	beq.n	8002354 <sbrk_aligned+0x34>
 800233e:	1cc4      	adds	r4, r0, #3
 8002340:	f024 0403 	bic.w	r4, r4, #3
 8002344:	42a0      	cmp	r0, r4
 8002346:	d007      	beq.n	8002358 <sbrk_aligned+0x38>
 8002348:	1a21      	subs	r1, r4, r0
 800234a:	4628      	mov	r0, r5
 800234c:	f000 fb6a 	bl	8002a24 <_sbrk_r>
 8002350:	3001      	adds	r0, #1
 8002352:	d101      	bne.n	8002358 <sbrk_aligned+0x38>
 8002354:	f04f 34ff 	mov.w	r4, #4294967295
 8002358:	4620      	mov	r0, r4
 800235a:	bd70      	pop	{r4, r5, r6, pc}
 800235c:	2000022c 	andcs	r0, r0, ip, lsr #4

08002360 <_malloc_r>:
 8002360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002364:	1ccd      	adds	r5, r1, #3
 8002366:	f025 0503 	bic.w	r5, r5, #3
 800236a:	3508      	adds	r5, #8
 800236c:	2d0c      	cmp	r5, #12
 800236e:	bf38      	it	cc
 8002370:	250c      	movcc	r5, #12
 8002372:	2d00      	cmp	r5, #0
 8002374:	4607      	mov	r7, r0
 8002376:	db01      	blt.n	800237c <_malloc_r+0x1c>
 8002378:	42a9      	cmp	r1, r5
 800237a:	d905      	bls.n	8002388 <_malloc_r+0x28>
 800237c:	230c      	movs	r3, #12
 800237e:	603b      	str	r3, [r7, #0]
 8002380:	2600      	movs	r6, #0
 8002382:	4630      	mov	r0, r6
 8002384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002388:	4e2e      	ldr	r6, [pc, #184]	; (8002444 <_malloc_r+0xe4>)
 800238a:	f000 fbf5 	bl	8002b78 <__malloc_lock>
 800238e:	6833      	ldr	r3, [r6, #0]
 8002390:	461c      	mov	r4, r3
 8002392:	bb34      	cbnz	r4, 80023e2 <_malloc_r+0x82>
 8002394:	4629      	mov	r1, r5
 8002396:	4638      	mov	r0, r7
 8002398:	f7ff ffc2 	bl	8002320 <sbrk_aligned>
 800239c:	1c43      	adds	r3, r0, #1
 800239e:	4604      	mov	r4, r0
 80023a0:	d14d      	bne.n	800243e <_malloc_r+0xde>
 80023a2:	6834      	ldr	r4, [r6, #0]
 80023a4:	4626      	mov	r6, r4
 80023a6:	2e00      	cmp	r6, #0
 80023a8:	d140      	bne.n	800242c <_malloc_r+0xcc>
 80023aa:	6823      	ldr	r3, [r4, #0]
 80023ac:	4631      	mov	r1, r6
 80023ae:	4638      	mov	r0, r7
 80023b0:	eb04 0803 	add.w	r8, r4, r3
 80023b4:	f000 fb36 	bl	8002a24 <_sbrk_r>
 80023b8:	4580      	cmp	r8, r0
 80023ba:	d13a      	bne.n	8002432 <_malloc_r+0xd2>
 80023bc:	6821      	ldr	r1, [r4, #0]
 80023be:	3503      	adds	r5, #3
 80023c0:	1a6d      	subs	r5, r5, r1
 80023c2:	f025 0503 	bic.w	r5, r5, #3
 80023c6:	3508      	adds	r5, #8
 80023c8:	2d0c      	cmp	r5, #12
 80023ca:	bf38      	it	cc
 80023cc:	250c      	movcc	r5, #12
 80023ce:	4629      	mov	r1, r5
 80023d0:	4638      	mov	r0, r7
 80023d2:	f7ff ffa5 	bl	8002320 <sbrk_aligned>
 80023d6:	3001      	adds	r0, #1
 80023d8:	d02b      	beq.n	8002432 <_malloc_r+0xd2>
 80023da:	6823      	ldr	r3, [r4, #0]
 80023dc:	442b      	add	r3, r5
 80023de:	6023      	str	r3, [r4, #0]
 80023e0:	e00e      	b.n	8002400 <_malloc_r+0xa0>
 80023e2:	6822      	ldr	r2, [r4, #0]
 80023e4:	1b52      	subs	r2, r2, r5
 80023e6:	d41e      	bmi.n	8002426 <_malloc_r+0xc6>
 80023e8:	2a0b      	cmp	r2, #11
 80023ea:	d916      	bls.n	800241a <_malloc_r+0xba>
 80023ec:	1961      	adds	r1, r4, r5
 80023ee:	42a3      	cmp	r3, r4
 80023f0:	6025      	str	r5, [r4, #0]
 80023f2:	bf18      	it	ne
 80023f4:	6059      	strne	r1, [r3, #4]
 80023f6:	6863      	ldr	r3, [r4, #4]
 80023f8:	bf08      	it	eq
 80023fa:	6031      	streq	r1, [r6, #0]
 80023fc:	5162      	str	r2, [r4, r5]
 80023fe:	604b      	str	r3, [r1, #4]
 8002400:	4638      	mov	r0, r7
 8002402:	f104 060b 	add.w	r6, r4, #11
 8002406:	f000 fbbd 	bl	8002b84 <__malloc_unlock>
 800240a:	f026 0607 	bic.w	r6, r6, #7
 800240e:	1d23      	adds	r3, r4, #4
 8002410:	1af2      	subs	r2, r6, r3
 8002412:	d0b6      	beq.n	8002382 <_malloc_r+0x22>
 8002414:	1b9b      	subs	r3, r3, r6
 8002416:	50a3      	str	r3, [r4, r2]
 8002418:	e7b3      	b.n	8002382 <_malloc_r+0x22>
 800241a:	6862      	ldr	r2, [r4, #4]
 800241c:	42a3      	cmp	r3, r4
 800241e:	bf0c      	ite	eq
 8002420:	6032      	streq	r2, [r6, #0]
 8002422:	605a      	strne	r2, [r3, #4]
 8002424:	e7ec      	b.n	8002400 <_malloc_r+0xa0>
 8002426:	4623      	mov	r3, r4
 8002428:	6864      	ldr	r4, [r4, #4]
 800242a:	e7b2      	b.n	8002392 <_malloc_r+0x32>
 800242c:	4634      	mov	r4, r6
 800242e:	6876      	ldr	r6, [r6, #4]
 8002430:	e7b9      	b.n	80023a6 <_malloc_r+0x46>
 8002432:	230c      	movs	r3, #12
 8002434:	603b      	str	r3, [r7, #0]
 8002436:	4638      	mov	r0, r7
 8002438:	f000 fba4 	bl	8002b84 <__malloc_unlock>
 800243c:	e7a1      	b.n	8002382 <_malloc_r+0x22>
 800243e:	6025      	str	r5, [r4, #0]
 8002440:	e7de      	b.n	8002400 <_malloc_r+0xa0>
 8002442:	bf00      	nop
 8002444:	20000228 	andcs	r0, r0, r8, lsr #4

08002448 <__sfputc_r>:
 8002448:	6893      	ldr	r3, [r2, #8]
 800244a:	3b01      	subs	r3, #1
 800244c:	2b00      	cmp	r3, #0
 800244e:	b410      	push	{r4}
 8002450:	6093      	str	r3, [r2, #8]
 8002452:	da08      	bge.n	8002466 <__sfputc_r+0x1e>
 8002454:	6994      	ldr	r4, [r2, #24]
 8002456:	42a3      	cmp	r3, r4
 8002458:	db01      	blt.n	800245e <__sfputc_r+0x16>
 800245a:	290a      	cmp	r1, #10
 800245c:	d103      	bne.n	8002466 <__sfputc_r+0x1e>
 800245e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002462:	f7ff bc31 	b.w	8001cc8 <__swbuf_r>
 8002466:	6813      	ldr	r3, [r2, #0]
 8002468:	1c58      	adds	r0, r3, #1
 800246a:	6010      	str	r0, [r2, #0]
 800246c:	7019      	strb	r1, [r3, #0]
 800246e:	4608      	mov	r0, r1
 8002470:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002474:	4770      	bx	lr

08002476 <__sfputs_r>:
 8002476:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002478:	4606      	mov	r6, r0
 800247a:	460f      	mov	r7, r1
 800247c:	4614      	mov	r4, r2
 800247e:	18d5      	adds	r5, r2, r3
 8002480:	42ac      	cmp	r4, r5
 8002482:	d101      	bne.n	8002488 <__sfputs_r+0x12>
 8002484:	2000      	movs	r0, #0
 8002486:	e007      	b.n	8002498 <__sfputs_r+0x22>
 8002488:	f814 1b01 	ldrb.w	r1, [r4], #1
 800248c:	463a      	mov	r2, r7
 800248e:	4630      	mov	r0, r6
 8002490:	f7ff ffda 	bl	8002448 <__sfputc_r>
 8002494:	1c43      	adds	r3, r0, #1
 8002496:	d1f3      	bne.n	8002480 <__sfputs_r+0xa>
 8002498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800249c <_vfiprintf_r>:
 800249c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024a0:	460d      	mov	r5, r1
 80024a2:	b09d      	sub	sp, #116	; 0x74
 80024a4:	4614      	mov	r4, r2
 80024a6:	4698      	mov	r8, r3
 80024a8:	4606      	mov	r6, r0
 80024aa:	b118      	cbz	r0, 80024b4 <_vfiprintf_r+0x18>
 80024ac:	6983      	ldr	r3, [r0, #24]
 80024ae:	b90b      	cbnz	r3, 80024b4 <_vfiprintf_r+0x18>
 80024b0:	f7ff fde4 	bl	800207c <__sinit>
 80024b4:	4b89      	ldr	r3, [pc, #548]	; (80026dc <_vfiprintf_r+0x240>)
 80024b6:	429d      	cmp	r5, r3
 80024b8:	d11b      	bne.n	80024f2 <_vfiprintf_r+0x56>
 80024ba:	6875      	ldr	r5, [r6, #4]
 80024bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80024be:	07d9      	lsls	r1, r3, #31
 80024c0:	d405      	bmi.n	80024ce <_vfiprintf_r+0x32>
 80024c2:	89ab      	ldrh	r3, [r5, #12]
 80024c4:	059a      	lsls	r2, r3, #22
 80024c6:	d402      	bmi.n	80024ce <_vfiprintf_r+0x32>
 80024c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80024ca:	f7ff fe75 	bl	80021b8 <__retarget_lock_acquire_recursive>
 80024ce:	89ab      	ldrh	r3, [r5, #12]
 80024d0:	071b      	lsls	r3, r3, #28
 80024d2:	d501      	bpl.n	80024d8 <_vfiprintf_r+0x3c>
 80024d4:	692b      	ldr	r3, [r5, #16]
 80024d6:	b9eb      	cbnz	r3, 8002514 <_vfiprintf_r+0x78>
 80024d8:	4629      	mov	r1, r5
 80024da:	4630      	mov	r0, r6
 80024dc:	f7ff fc46 	bl	8001d6c <__swsetup_r>
 80024e0:	b1c0      	cbz	r0, 8002514 <_vfiprintf_r+0x78>
 80024e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80024e4:	07dc      	lsls	r4, r3, #31
 80024e6:	d50e      	bpl.n	8002506 <_vfiprintf_r+0x6a>
 80024e8:	f04f 30ff 	mov.w	r0, #4294967295
 80024ec:	b01d      	add	sp, #116	; 0x74
 80024ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024f2:	4b7b      	ldr	r3, [pc, #492]	; (80026e0 <_vfiprintf_r+0x244>)
 80024f4:	429d      	cmp	r5, r3
 80024f6:	d101      	bne.n	80024fc <_vfiprintf_r+0x60>
 80024f8:	68b5      	ldr	r5, [r6, #8]
 80024fa:	e7df      	b.n	80024bc <_vfiprintf_r+0x20>
 80024fc:	4b79      	ldr	r3, [pc, #484]	; (80026e4 <_vfiprintf_r+0x248>)
 80024fe:	429d      	cmp	r5, r3
 8002500:	bf08      	it	eq
 8002502:	68f5      	ldreq	r5, [r6, #12]
 8002504:	e7da      	b.n	80024bc <_vfiprintf_r+0x20>
 8002506:	89ab      	ldrh	r3, [r5, #12]
 8002508:	0598      	lsls	r0, r3, #22
 800250a:	d4ed      	bmi.n	80024e8 <_vfiprintf_r+0x4c>
 800250c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800250e:	f7ff fe54 	bl	80021ba <__retarget_lock_release_recursive>
 8002512:	e7e9      	b.n	80024e8 <_vfiprintf_r+0x4c>
 8002514:	2300      	movs	r3, #0
 8002516:	9309      	str	r3, [sp, #36]	; 0x24
 8002518:	2320      	movs	r3, #32
 800251a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800251e:	f8cd 800c 	str.w	r8, [sp, #12]
 8002522:	2330      	movs	r3, #48	; 0x30
 8002524:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80026e8 <_vfiprintf_r+0x24c>
 8002528:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800252c:	f04f 0901 	mov.w	r9, #1
 8002530:	4623      	mov	r3, r4
 8002532:	469a      	mov	sl, r3
 8002534:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002538:	b10a      	cbz	r2, 800253e <_vfiprintf_r+0xa2>
 800253a:	2a25      	cmp	r2, #37	; 0x25
 800253c:	d1f9      	bne.n	8002532 <_vfiprintf_r+0x96>
 800253e:	ebba 0b04 	subs.w	fp, sl, r4
 8002542:	d00b      	beq.n	800255c <_vfiprintf_r+0xc0>
 8002544:	465b      	mov	r3, fp
 8002546:	4622      	mov	r2, r4
 8002548:	4629      	mov	r1, r5
 800254a:	4630      	mov	r0, r6
 800254c:	f7ff ff93 	bl	8002476 <__sfputs_r>
 8002550:	3001      	adds	r0, #1
 8002552:	f000 80aa 	beq.w	80026aa <_vfiprintf_r+0x20e>
 8002556:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002558:	445a      	add	r2, fp
 800255a:	9209      	str	r2, [sp, #36]	; 0x24
 800255c:	f89a 3000 	ldrb.w	r3, [sl]
 8002560:	2b00      	cmp	r3, #0
 8002562:	f000 80a2 	beq.w	80026aa <_vfiprintf_r+0x20e>
 8002566:	2300      	movs	r3, #0
 8002568:	f04f 32ff 	mov.w	r2, #4294967295
 800256c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002570:	f10a 0a01 	add.w	sl, sl, #1
 8002574:	9304      	str	r3, [sp, #16]
 8002576:	9307      	str	r3, [sp, #28]
 8002578:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800257c:	931a      	str	r3, [sp, #104]	; 0x68
 800257e:	4654      	mov	r4, sl
 8002580:	2205      	movs	r2, #5
 8002582:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002586:	4858      	ldr	r0, [pc, #352]	; (80026e8 <_vfiprintf_r+0x24c>)
 8002588:	f7fd fe4a 	bl	8000220 <memchr>
 800258c:	9a04      	ldr	r2, [sp, #16]
 800258e:	b9d8      	cbnz	r0, 80025c8 <_vfiprintf_r+0x12c>
 8002590:	06d1      	lsls	r1, r2, #27
 8002592:	bf44      	itt	mi
 8002594:	2320      	movmi	r3, #32
 8002596:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800259a:	0713      	lsls	r3, r2, #28
 800259c:	bf44      	itt	mi
 800259e:	232b      	movmi	r3, #43	; 0x2b
 80025a0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80025a4:	f89a 3000 	ldrb.w	r3, [sl]
 80025a8:	2b2a      	cmp	r3, #42	; 0x2a
 80025aa:	d015      	beq.n	80025d8 <_vfiprintf_r+0x13c>
 80025ac:	9a07      	ldr	r2, [sp, #28]
 80025ae:	4654      	mov	r4, sl
 80025b0:	2000      	movs	r0, #0
 80025b2:	f04f 0c0a 	mov.w	ip, #10
 80025b6:	4621      	mov	r1, r4
 80025b8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80025bc:	3b30      	subs	r3, #48	; 0x30
 80025be:	2b09      	cmp	r3, #9
 80025c0:	d94e      	bls.n	8002660 <_vfiprintf_r+0x1c4>
 80025c2:	b1b0      	cbz	r0, 80025f2 <_vfiprintf_r+0x156>
 80025c4:	9207      	str	r2, [sp, #28]
 80025c6:	e014      	b.n	80025f2 <_vfiprintf_r+0x156>
 80025c8:	eba0 0308 	sub.w	r3, r0, r8
 80025cc:	fa09 f303 	lsl.w	r3, r9, r3
 80025d0:	4313      	orrs	r3, r2
 80025d2:	9304      	str	r3, [sp, #16]
 80025d4:	46a2      	mov	sl, r4
 80025d6:	e7d2      	b.n	800257e <_vfiprintf_r+0xe2>
 80025d8:	9b03      	ldr	r3, [sp, #12]
 80025da:	1d19      	adds	r1, r3, #4
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	9103      	str	r1, [sp, #12]
 80025e0:	2b00      	cmp	r3, #0
 80025e2:	bfbb      	ittet	lt
 80025e4:	425b      	neglt	r3, r3
 80025e6:	f042 0202 	orrlt.w	r2, r2, #2
 80025ea:	9307      	strge	r3, [sp, #28]
 80025ec:	9307      	strlt	r3, [sp, #28]
 80025ee:	bfb8      	it	lt
 80025f0:	9204      	strlt	r2, [sp, #16]
 80025f2:	7823      	ldrb	r3, [r4, #0]
 80025f4:	2b2e      	cmp	r3, #46	; 0x2e
 80025f6:	d10c      	bne.n	8002612 <_vfiprintf_r+0x176>
 80025f8:	7863      	ldrb	r3, [r4, #1]
 80025fa:	2b2a      	cmp	r3, #42	; 0x2a
 80025fc:	d135      	bne.n	800266a <_vfiprintf_r+0x1ce>
 80025fe:	9b03      	ldr	r3, [sp, #12]
 8002600:	1d1a      	adds	r2, r3, #4
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	9203      	str	r2, [sp, #12]
 8002606:	2b00      	cmp	r3, #0
 8002608:	bfb8      	it	lt
 800260a:	f04f 33ff 	movlt.w	r3, #4294967295
 800260e:	3402      	adds	r4, #2
 8002610:	9305      	str	r3, [sp, #20]
 8002612:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80026f8 <_vfiprintf_r+0x25c>
 8002616:	7821      	ldrb	r1, [r4, #0]
 8002618:	2203      	movs	r2, #3
 800261a:	4650      	mov	r0, sl
 800261c:	f7fd fe00 	bl	8000220 <memchr>
 8002620:	b140      	cbz	r0, 8002634 <_vfiprintf_r+0x198>
 8002622:	2340      	movs	r3, #64	; 0x40
 8002624:	eba0 000a 	sub.w	r0, r0, sl
 8002628:	fa03 f000 	lsl.w	r0, r3, r0
 800262c:	9b04      	ldr	r3, [sp, #16]
 800262e:	4303      	orrs	r3, r0
 8002630:	3401      	adds	r4, #1
 8002632:	9304      	str	r3, [sp, #16]
 8002634:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002638:	482c      	ldr	r0, [pc, #176]	; (80026ec <_vfiprintf_r+0x250>)
 800263a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800263e:	2206      	movs	r2, #6
 8002640:	f7fd fdee 	bl	8000220 <memchr>
 8002644:	2800      	cmp	r0, #0
 8002646:	d03f      	beq.n	80026c8 <_vfiprintf_r+0x22c>
 8002648:	4b29      	ldr	r3, [pc, #164]	; (80026f0 <_vfiprintf_r+0x254>)
 800264a:	bb1b      	cbnz	r3, 8002694 <_vfiprintf_r+0x1f8>
 800264c:	9b03      	ldr	r3, [sp, #12]
 800264e:	3307      	adds	r3, #7
 8002650:	f023 0307 	bic.w	r3, r3, #7
 8002654:	3308      	adds	r3, #8
 8002656:	9303      	str	r3, [sp, #12]
 8002658:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800265a:	443b      	add	r3, r7
 800265c:	9309      	str	r3, [sp, #36]	; 0x24
 800265e:	e767      	b.n	8002530 <_vfiprintf_r+0x94>
 8002660:	fb0c 3202 	mla	r2, ip, r2, r3
 8002664:	460c      	mov	r4, r1
 8002666:	2001      	movs	r0, #1
 8002668:	e7a5      	b.n	80025b6 <_vfiprintf_r+0x11a>
 800266a:	2300      	movs	r3, #0
 800266c:	3401      	adds	r4, #1
 800266e:	9305      	str	r3, [sp, #20]
 8002670:	4619      	mov	r1, r3
 8002672:	f04f 0c0a 	mov.w	ip, #10
 8002676:	4620      	mov	r0, r4
 8002678:	f810 2b01 	ldrb.w	r2, [r0], #1
 800267c:	3a30      	subs	r2, #48	; 0x30
 800267e:	2a09      	cmp	r2, #9
 8002680:	d903      	bls.n	800268a <_vfiprintf_r+0x1ee>
 8002682:	2b00      	cmp	r3, #0
 8002684:	d0c5      	beq.n	8002612 <_vfiprintf_r+0x176>
 8002686:	9105      	str	r1, [sp, #20]
 8002688:	e7c3      	b.n	8002612 <_vfiprintf_r+0x176>
 800268a:	fb0c 2101 	mla	r1, ip, r1, r2
 800268e:	4604      	mov	r4, r0
 8002690:	2301      	movs	r3, #1
 8002692:	e7f0      	b.n	8002676 <_vfiprintf_r+0x1da>
 8002694:	ab03      	add	r3, sp, #12
 8002696:	9300      	str	r3, [sp, #0]
 8002698:	462a      	mov	r2, r5
 800269a:	4b16      	ldr	r3, [pc, #88]	; (80026f4 <_vfiprintf_r+0x258>)
 800269c:	a904      	add	r1, sp, #16
 800269e:	4630      	mov	r0, r6
 80026a0:	f3af 8000 	nop.w
 80026a4:	4607      	mov	r7, r0
 80026a6:	1c78      	adds	r0, r7, #1
 80026a8:	d1d6      	bne.n	8002658 <_vfiprintf_r+0x1bc>
 80026aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80026ac:	07d9      	lsls	r1, r3, #31
 80026ae:	d405      	bmi.n	80026bc <_vfiprintf_r+0x220>
 80026b0:	89ab      	ldrh	r3, [r5, #12]
 80026b2:	059a      	lsls	r2, r3, #22
 80026b4:	d402      	bmi.n	80026bc <_vfiprintf_r+0x220>
 80026b6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80026b8:	f7ff fd7f 	bl	80021ba <__retarget_lock_release_recursive>
 80026bc:	89ab      	ldrh	r3, [r5, #12]
 80026be:	065b      	lsls	r3, r3, #25
 80026c0:	f53f af12 	bmi.w	80024e8 <_vfiprintf_r+0x4c>
 80026c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80026c6:	e711      	b.n	80024ec <_vfiprintf_r+0x50>
 80026c8:	ab03      	add	r3, sp, #12
 80026ca:	9300      	str	r3, [sp, #0]
 80026cc:	462a      	mov	r2, r5
 80026ce:	4b09      	ldr	r3, [pc, #36]	; (80026f4 <_vfiprintf_r+0x258>)
 80026d0:	a904      	add	r1, sp, #16
 80026d2:	4630      	mov	r0, r6
 80026d4:	f000 f880 	bl	80027d8 <_printf_i>
 80026d8:	e7e4      	b.n	80026a4 <_vfiprintf_r+0x208>
 80026da:	bf00      	nop
 80026dc:	0800308c 	stmdaeq	r0, {r2, r3, r7, ip, sp}
 80026e0:	080030ac 	stmdaeq	r0, {r2, r3, r5, r7, ip, sp}
 80026e4:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}
 80026e8:	080030cc 	stmdaeq	r0, {r2, r3, r6, r7, ip, sp}
 80026ec:	080030d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, ip, sp}
 80026f0:	00000000 	andeq	r0, r0, r0
 80026f4:	08002477 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, sl, sp}
 80026f8:	080030d2 	stmdaeq	r0, {r1, r4, r6, r7, ip, sp}

080026fc <_printf_common>:
 80026fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002700:	4616      	mov	r6, r2
 8002702:	4699      	mov	r9, r3
 8002704:	688a      	ldr	r2, [r1, #8]
 8002706:	690b      	ldr	r3, [r1, #16]
 8002708:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800270c:	4293      	cmp	r3, r2
 800270e:	bfb8      	it	lt
 8002710:	4613      	movlt	r3, r2
 8002712:	6033      	str	r3, [r6, #0]
 8002714:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002718:	4607      	mov	r7, r0
 800271a:	460c      	mov	r4, r1
 800271c:	b10a      	cbz	r2, 8002722 <_printf_common+0x26>
 800271e:	3301      	adds	r3, #1
 8002720:	6033      	str	r3, [r6, #0]
 8002722:	6823      	ldr	r3, [r4, #0]
 8002724:	0699      	lsls	r1, r3, #26
 8002726:	bf42      	ittt	mi
 8002728:	6833      	ldrmi	r3, [r6, #0]
 800272a:	3302      	addmi	r3, #2
 800272c:	6033      	strmi	r3, [r6, #0]
 800272e:	6825      	ldr	r5, [r4, #0]
 8002730:	f015 0506 	ands.w	r5, r5, #6
 8002734:	d106      	bne.n	8002744 <_printf_common+0x48>
 8002736:	f104 0a19 	add.w	sl, r4, #25
 800273a:	68e3      	ldr	r3, [r4, #12]
 800273c:	6832      	ldr	r2, [r6, #0]
 800273e:	1a9b      	subs	r3, r3, r2
 8002740:	42ab      	cmp	r3, r5
 8002742:	dc26      	bgt.n	8002792 <_printf_common+0x96>
 8002744:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002748:	1e13      	subs	r3, r2, #0
 800274a:	6822      	ldr	r2, [r4, #0]
 800274c:	bf18      	it	ne
 800274e:	2301      	movne	r3, #1
 8002750:	0692      	lsls	r2, r2, #26
 8002752:	d42b      	bmi.n	80027ac <_printf_common+0xb0>
 8002754:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002758:	4649      	mov	r1, r9
 800275a:	4638      	mov	r0, r7
 800275c:	47c0      	blx	r8
 800275e:	3001      	adds	r0, #1
 8002760:	d01e      	beq.n	80027a0 <_printf_common+0xa4>
 8002762:	6823      	ldr	r3, [r4, #0]
 8002764:	68e5      	ldr	r5, [r4, #12]
 8002766:	6832      	ldr	r2, [r6, #0]
 8002768:	f003 0306 	and.w	r3, r3, #6
 800276c:	2b04      	cmp	r3, #4
 800276e:	bf08      	it	eq
 8002770:	1aad      	subeq	r5, r5, r2
 8002772:	68a3      	ldr	r3, [r4, #8]
 8002774:	6922      	ldr	r2, [r4, #16]
 8002776:	bf0c      	ite	eq
 8002778:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800277c:	2500      	movne	r5, #0
 800277e:	4293      	cmp	r3, r2
 8002780:	bfc4      	itt	gt
 8002782:	1a9b      	subgt	r3, r3, r2
 8002784:	18ed      	addgt	r5, r5, r3
 8002786:	2600      	movs	r6, #0
 8002788:	341a      	adds	r4, #26
 800278a:	42b5      	cmp	r5, r6
 800278c:	d11a      	bne.n	80027c4 <_printf_common+0xc8>
 800278e:	2000      	movs	r0, #0
 8002790:	e008      	b.n	80027a4 <_printf_common+0xa8>
 8002792:	2301      	movs	r3, #1
 8002794:	4652      	mov	r2, sl
 8002796:	4649      	mov	r1, r9
 8002798:	4638      	mov	r0, r7
 800279a:	47c0      	blx	r8
 800279c:	3001      	adds	r0, #1
 800279e:	d103      	bne.n	80027a8 <_printf_common+0xac>
 80027a0:	f04f 30ff 	mov.w	r0, #4294967295
 80027a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80027a8:	3501      	adds	r5, #1
 80027aa:	e7c6      	b.n	800273a <_printf_common+0x3e>
 80027ac:	18e1      	adds	r1, r4, r3
 80027ae:	1c5a      	adds	r2, r3, #1
 80027b0:	2030      	movs	r0, #48	; 0x30
 80027b2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80027b6:	4422      	add	r2, r4
 80027b8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80027bc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80027c0:	3302      	adds	r3, #2
 80027c2:	e7c7      	b.n	8002754 <_printf_common+0x58>
 80027c4:	2301      	movs	r3, #1
 80027c6:	4622      	mov	r2, r4
 80027c8:	4649      	mov	r1, r9
 80027ca:	4638      	mov	r0, r7
 80027cc:	47c0      	blx	r8
 80027ce:	3001      	adds	r0, #1
 80027d0:	d0e6      	beq.n	80027a0 <_printf_common+0xa4>
 80027d2:	3601      	adds	r6, #1
 80027d4:	e7d9      	b.n	800278a <_printf_common+0x8e>
	...

080027d8 <_printf_i>:
 80027d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80027dc:	7e0f      	ldrb	r7, [r1, #24]
 80027de:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80027e0:	2f78      	cmp	r7, #120	; 0x78
 80027e2:	4691      	mov	r9, r2
 80027e4:	4680      	mov	r8, r0
 80027e6:	460c      	mov	r4, r1
 80027e8:	469a      	mov	sl, r3
 80027ea:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80027ee:	d807      	bhi.n	8002800 <_printf_i+0x28>
 80027f0:	2f62      	cmp	r7, #98	; 0x62
 80027f2:	d80a      	bhi.n	800280a <_printf_i+0x32>
 80027f4:	2f00      	cmp	r7, #0
 80027f6:	f000 80d8 	beq.w	80029aa <_printf_i+0x1d2>
 80027fa:	2f58      	cmp	r7, #88	; 0x58
 80027fc:	f000 80a3 	beq.w	8002946 <_printf_i+0x16e>
 8002800:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002804:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002808:	e03a      	b.n	8002880 <_printf_i+0xa8>
 800280a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800280e:	2b15      	cmp	r3, #21
 8002810:	d8f6      	bhi.n	8002800 <_printf_i+0x28>
 8002812:	a101      	add	r1, pc, #4	; (adr r1, 8002818 <_printf_i+0x40>)
 8002814:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002818:	08002871 	stmdaeq	r0, {r0, r4, r5, r6, fp, sp}
 800281c:	08002885 	stmdaeq	r0, {r0, r2, r7, fp, sp}
 8002820:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002824:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002828:	08002801 	stmdaeq	r0, {r0, fp, sp}
 800282c:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002830:	08002885 	stmdaeq	r0, {r0, r2, r7, fp, sp}
 8002834:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002838:	08002801 	stmdaeq	r0, {r0, fp, sp}
 800283c:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002840:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002844:	08002991 	stmdaeq	r0, {r0, r4, r7, r8, fp, sp}
 8002848:	080028b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, sp}
 800284c:	08002973 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, fp, sp}
 8002850:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002854:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002858:	080029b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, fp, sp}
 800285c:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002860:	080028b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, sp}
 8002864:	08002801 	stmdaeq	r0, {r0, fp, sp}
 8002868:	08002801 	stmdaeq	r0, {r0, fp, sp}
 800286c:	0800297b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r8, fp, sp}
 8002870:	682b      	ldr	r3, [r5, #0]
 8002872:	1d1a      	adds	r2, r3, #4
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	602a      	str	r2, [r5, #0]
 8002878:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800287c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002880:	2301      	movs	r3, #1
 8002882:	e0a3      	b.n	80029cc <_printf_i+0x1f4>
 8002884:	6820      	ldr	r0, [r4, #0]
 8002886:	6829      	ldr	r1, [r5, #0]
 8002888:	0606      	lsls	r6, r0, #24
 800288a:	f101 0304 	add.w	r3, r1, #4
 800288e:	d50a      	bpl.n	80028a6 <_printf_i+0xce>
 8002890:	680e      	ldr	r6, [r1, #0]
 8002892:	602b      	str	r3, [r5, #0]
 8002894:	2e00      	cmp	r6, #0
 8002896:	da03      	bge.n	80028a0 <_printf_i+0xc8>
 8002898:	232d      	movs	r3, #45	; 0x2d
 800289a:	4276      	negs	r6, r6
 800289c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028a0:	485e      	ldr	r0, [pc, #376]	; (8002a1c <_printf_i+0x244>)
 80028a2:	230a      	movs	r3, #10
 80028a4:	e019      	b.n	80028da <_printf_i+0x102>
 80028a6:	680e      	ldr	r6, [r1, #0]
 80028a8:	602b      	str	r3, [r5, #0]
 80028aa:	f010 0f40 	tst.w	r0, #64	; 0x40
 80028ae:	bf18      	it	ne
 80028b0:	b236      	sxthne	r6, r6
 80028b2:	e7ef      	b.n	8002894 <_printf_i+0xbc>
 80028b4:	682b      	ldr	r3, [r5, #0]
 80028b6:	6820      	ldr	r0, [r4, #0]
 80028b8:	1d19      	adds	r1, r3, #4
 80028ba:	6029      	str	r1, [r5, #0]
 80028bc:	0601      	lsls	r1, r0, #24
 80028be:	d501      	bpl.n	80028c4 <_printf_i+0xec>
 80028c0:	681e      	ldr	r6, [r3, #0]
 80028c2:	e002      	b.n	80028ca <_printf_i+0xf2>
 80028c4:	0646      	lsls	r6, r0, #25
 80028c6:	d5fb      	bpl.n	80028c0 <_printf_i+0xe8>
 80028c8:	881e      	ldrh	r6, [r3, #0]
 80028ca:	4854      	ldr	r0, [pc, #336]	; (8002a1c <_printf_i+0x244>)
 80028cc:	2f6f      	cmp	r7, #111	; 0x6f
 80028ce:	bf0c      	ite	eq
 80028d0:	2308      	moveq	r3, #8
 80028d2:	230a      	movne	r3, #10
 80028d4:	2100      	movs	r1, #0
 80028d6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80028da:	6865      	ldr	r5, [r4, #4]
 80028dc:	60a5      	str	r5, [r4, #8]
 80028de:	2d00      	cmp	r5, #0
 80028e0:	bfa2      	ittt	ge
 80028e2:	6821      	ldrge	r1, [r4, #0]
 80028e4:	f021 0104 	bicge.w	r1, r1, #4
 80028e8:	6021      	strge	r1, [r4, #0]
 80028ea:	b90e      	cbnz	r6, 80028f0 <_printf_i+0x118>
 80028ec:	2d00      	cmp	r5, #0
 80028ee:	d04d      	beq.n	800298c <_printf_i+0x1b4>
 80028f0:	4615      	mov	r5, r2
 80028f2:	fbb6 f1f3 	udiv	r1, r6, r3
 80028f6:	fb03 6711 	mls	r7, r3, r1, r6
 80028fa:	5dc7      	ldrb	r7, [r0, r7]
 80028fc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002900:	4637      	mov	r7, r6
 8002902:	42bb      	cmp	r3, r7
 8002904:	460e      	mov	r6, r1
 8002906:	d9f4      	bls.n	80028f2 <_printf_i+0x11a>
 8002908:	2b08      	cmp	r3, #8
 800290a:	d10b      	bne.n	8002924 <_printf_i+0x14c>
 800290c:	6823      	ldr	r3, [r4, #0]
 800290e:	07de      	lsls	r6, r3, #31
 8002910:	d508      	bpl.n	8002924 <_printf_i+0x14c>
 8002912:	6923      	ldr	r3, [r4, #16]
 8002914:	6861      	ldr	r1, [r4, #4]
 8002916:	4299      	cmp	r1, r3
 8002918:	bfde      	ittt	le
 800291a:	2330      	movle	r3, #48	; 0x30
 800291c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002920:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002924:	1b52      	subs	r2, r2, r5
 8002926:	6122      	str	r2, [r4, #16]
 8002928:	f8cd a000 	str.w	sl, [sp]
 800292c:	464b      	mov	r3, r9
 800292e:	aa03      	add	r2, sp, #12
 8002930:	4621      	mov	r1, r4
 8002932:	4640      	mov	r0, r8
 8002934:	f7ff fee2 	bl	80026fc <_printf_common>
 8002938:	3001      	adds	r0, #1
 800293a:	d14c      	bne.n	80029d6 <_printf_i+0x1fe>
 800293c:	f04f 30ff 	mov.w	r0, #4294967295
 8002940:	b004      	add	sp, #16
 8002942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002946:	4835      	ldr	r0, [pc, #212]	; (8002a1c <_printf_i+0x244>)
 8002948:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800294c:	6829      	ldr	r1, [r5, #0]
 800294e:	6823      	ldr	r3, [r4, #0]
 8002950:	f851 6b04 	ldr.w	r6, [r1], #4
 8002954:	6029      	str	r1, [r5, #0]
 8002956:	061d      	lsls	r5, r3, #24
 8002958:	d514      	bpl.n	8002984 <_printf_i+0x1ac>
 800295a:	07df      	lsls	r7, r3, #31
 800295c:	bf44      	itt	mi
 800295e:	f043 0320 	orrmi.w	r3, r3, #32
 8002962:	6023      	strmi	r3, [r4, #0]
 8002964:	b91e      	cbnz	r6, 800296e <_printf_i+0x196>
 8002966:	6823      	ldr	r3, [r4, #0]
 8002968:	f023 0320 	bic.w	r3, r3, #32
 800296c:	6023      	str	r3, [r4, #0]
 800296e:	2310      	movs	r3, #16
 8002970:	e7b0      	b.n	80028d4 <_printf_i+0xfc>
 8002972:	6823      	ldr	r3, [r4, #0]
 8002974:	f043 0320 	orr.w	r3, r3, #32
 8002978:	6023      	str	r3, [r4, #0]
 800297a:	2378      	movs	r3, #120	; 0x78
 800297c:	4828      	ldr	r0, [pc, #160]	; (8002a20 <_printf_i+0x248>)
 800297e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002982:	e7e3      	b.n	800294c <_printf_i+0x174>
 8002984:	0659      	lsls	r1, r3, #25
 8002986:	bf48      	it	mi
 8002988:	b2b6      	uxthmi	r6, r6
 800298a:	e7e6      	b.n	800295a <_printf_i+0x182>
 800298c:	4615      	mov	r5, r2
 800298e:	e7bb      	b.n	8002908 <_printf_i+0x130>
 8002990:	682b      	ldr	r3, [r5, #0]
 8002992:	6826      	ldr	r6, [r4, #0]
 8002994:	6961      	ldr	r1, [r4, #20]
 8002996:	1d18      	adds	r0, r3, #4
 8002998:	6028      	str	r0, [r5, #0]
 800299a:	0635      	lsls	r5, r6, #24
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	d501      	bpl.n	80029a4 <_printf_i+0x1cc>
 80029a0:	6019      	str	r1, [r3, #0]
 80029a2:	e002      	b.n	80029aa <_printf_i+0x1d2>
 80029a4:	0670      	lsls	r0, r6, #25
 80029a6:	d5fb      	bpl.n	80029a0 <_printf_i+0x1c8>
 80029a8:	8019      	strh	r1, [r3, #0]
 80029aa:	2300      	movs	r3, #0
 80029ac:	6123      	str	r3, [r4, #16]
 80029ae:	4615      	mov	r5, r2
 80029b0:	e7ba      	b.n	8002928 <_printf_i+0x150>
 80029b2:	682b      	ldr	r3, [r5, #0]
 80029b4:	1d1a      	adds	r2, r3, #4
 80029b6:	602a      	str	r2, [r5, #0]
 80029b8:	681d      	ldr	r5, [r3, #0]
 80029ba:	6862      	ldr	r2, [r4, #4]
 80029bc:	2100      	movs	r1, #0
 80029be:	4628      	mov	r0, r5
 80029c0:	f7fd fc2e 	bl	8000220 <memchr>
 80029c4:	b108      	cbz	r0, 80029ca <_printf_i+0x1f2>
 80029c6:	1b40      	subs	r0, r0, r5
 80029c8:	6060      	str	r0, [r4, #4]
 80029ca:	6863      	ldr	r3, [r4, #4]
 80029cc:	6123      	str	r3, [r4, #16]
 80029ce:	2300      	movs	r3, #0
 80029d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80029d4:	e7a8      	b.n	8002928 <_printf_i+0x150>
 80029d6:	6923      	ldr	r3, [r4, #16]
 80029d8:	462a      	mov	r2, r5
 80029da:	4649      	mov	r1, r9
 80029dc:	4640      	mov	r0, r8
 80029de:	47d0      	blx	sl
 80029e0:	3001      	adds	r0, #1
 80029e2:	d0ab      	beq.n	800293c <_printf_i+0x164>
 80029e4:	6823      	ldr	r3, [r4, #0]
 80029e6:	079b      	lsls	r3, r3, #30
 80029e8:	d413      	bmi.n	8002a12 <_printf_i+0x23a>
 80029ea:	68e0      	ldr	r0, [r4, #12]
 80029ec:	9b03      	ldr	r3, [sp, #12]
 80029ee:	4298      	cmp	r0, r3
 80029f0:	bfb8      	it	lt
 80029f2:	4618      	movlt	r0, r3
 80029f4:	e7a4      	b.n	8002940 <_printf_i+0x168>
 80029f6:	2301      	movs	r3, #1
 80029f8:	4632      	mov	r2, r6
 80029fa:	4649      	mov	r1, r9
 80029fc:	4640      	mov	r0, r8
 80029fe:	47d0      	blx	sl
 8002a00:	3001      	adds	r0, #1
 8002a02:	d09b      	beq.n	800293c <_printf_i+0x164>
 8002a04:	3501      	adds	r5, #1
 8002a06:	68e3      	ldr	r3, [r4, #12]
 8002a08:	9903      	ldr	r1, [sp, #12]
 8002a0a:	1a5b      	subs	r3, r3, r1
 8002a0c:	42ab      	cmp	r3, r5
 8002a0e:	dcf2      	bgt.n	80029f6 <_printf_i+0x21e>
 8002a10:	e7eb      	b.n	80029ea <_printf_i+0x212>
 8002a12:	2500      	movs	r5, #0
 8002a14:	f104 0619 	add.w	r6, r4, #25
 8002a18:	e7f5      	b.n	8002a06 <_printf_i+0x22e>
 8002a1a:	bf00      	nop
 8002a1c:	080030dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, ip, sp}
 8002a20:	080030ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, ip, sp}

08002a24 <_sbrk_r>:
 8002a24:	b538      	push	{r3, r4, r5, lr}
 8002a26:	4d06      	ldr	r5, [pc, #24]	; (8002a40 <_sbrk_r+0x1c>)
 8002a28:	2300      	movs	r3, #0
 8002a2a:	4604      	mov	r4, r0
 8002a2c:	4608      	mov	r0, r1
 8002a2e:	602b      	str	r3, [r5, #0]
 8002a30:	f7fd fdc8 	bl	80005c4 <_sbrk>
 8002a34:	1c43      	adds	r3, r0, #1
 8002a36:	d102      	bne.n	8002a3e <_sbrk_r+0x1a>
 8002a38:	682b      	ldr	r3, [r5, #0]
 8002a3a:	b103      	cbz	r3, 8002a3e <_sbrk_r+0x1a>
 8002a3c:	6023      	str	r3, [r4, #0]
 8002a3e:	bd38      	pop	{r3, r4, r5, pc}
 8002a40:	20000230 	andcs	r0, r0, r0, lsr r2

08002a44 <__sread>:
 8002a44:	b510      	push	{r4, lr}
 8002a46:	460c      	mov	r4, r1
 8002a48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a4c:	f000 f8a0 	bl	8002b90 <_read_r>
 8002a50:	2800      	cmp	r0, #0
 8002a52:	bfab      	itete	ge
 8002a54:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002a56:	89a3      	ldrhlt	r3, [r4, #12]
 8002a58:	181b      	addge	r3, r3, r0
 8002a5a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002a5e:	bfac      	ite	ge
 8002a60:	6563      	strge	r3, [r4, #84]	; 0x54
 8002a62:	81a3      	strhlt	r3, [r4, #12]
 8002a64:	bd10      	pop	{r4, pc}

08002a66 <__swrite>:
 8002a66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a6a:	461f      	mov	r7, r3
 8002a6c:	898b      	ldrh	r3, [r1, #12]
 8002a6e:	05db      	lsls	r3, r3, #23
 8002a70:	4605      	mov	r5, r0
 8002a72:	460c      	mov	r4, r1
 8002a74:	4616      	mov	r6, r2
 8002a76:	d505      	bpl.n	8002a84 <__swrite+0x1e>
 8002a78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a7c:	2302      	movs	r3, #2
 8002a7e:	2200      	movs	r2, #0
 8002a80:	f000 f868 	bl	8002b54 <_lseek_r>
 8002a84:	89a3      	ldrh	r3, [r4, #12]
 8002a86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002a8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002a8e:	81a3      	strh	r3, [r4, #12]
 8002a90:	4632      	mov	r2, r6
 8002a92:	463b      	mov	r3, r7
 8002a94:	4628      	mov	r0, r5
 8002a96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002a9a:	f000 b817 	b.w	8002acc <_write_r>

08002a9e <__sseek>:
 8002a9e:	b510      	push	{r4, lr}
 8002aa0:	460c      	mov	r4, r1
 8002aa2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002aa6:	f000 f855 	bl	8002b54 <_lseek_r>
 8002aaa:	1c43      	adds	r3, r0, #1
 8002aac:	89a3      	ldrh	r3, [r4, #12]
 8002aae:	bf15      	itete	ne
 8002ab0:	6560      	strne	r0, [r4, #84]	; 0x54
 8002ab2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002ab6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002aba:	81a3      	strheq	r3, [r4, #12]
 8002abc:	bf18      	it	ne
 8002abe:	81a3      	strhne	r3, [r4, #12]
 8002ac0:	bd10      	pop	{r4, pc}

08002ac2 <__sclose>:
 8002ac2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002ac6:	f000 b813 	b.w	8002af0 <_close_r>
	...

08002acc <_write_r>:
 8002acc:	b538      	push	{r3, r4, r5, lr}
 8002ace:	4d07      	ldr	r5, [pc, #28]	; (8002aec <_write_r+0x20>)
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	4608      	mov	r0, r1
 8002ad4:	4611      	mov	r1, r2
 8002ad6:	2200      	movs	r2, #0
 8002ad8:	602a      	str	r2, [r5, #0]
 8002ada:	461a      	mov	r2, r3
 8002adc:	f7fd fda6 	bl	800062c <_write>
 8002ae0:	1c43      	adds	r3, r0, #1
 8002ae2:	d102      	bne.n	8002aea <_write_r+0x1e>
 8002ae4:	682b      	ldr	r3, [r5, #0]
 8002ae6:	b103      	cbz	r3, 8002aea <_write_r+0x1e>
 8002ae8:	6023      	str	r3, [r4, #0]
 8002aea:	bd38      	pop	{r3, r4, r5, pc}
 8002aec:	20000230 	andcs	r0, r0, r0, lsr r2

08002af0 <_close_r>:
 8002af0:	b538      	push	{r3, r4, r5, lr}
 8002af2:	4d06      	ldr	r5, [pc, #24]	; (8002b0c <_close_r+0x1c>)
 8002af4:	2300      	movs	r3, #0
 8002af6:	4604      	mov	r4, r0
 8002af8:	4608      	mov	r0, r1
 8002afa:	602b      	str	r3, [r5, #0]
 8002afc:	f7fd fda4 	bl	8000648 <_close>
 8002b00:	1c43      	adds	r3, r0, #1
 8002b02:	d102      	bne.n	8002b0a <_close_r+0x1a>
 8002b04:	682b      	ldr	r3, [r5, #0]
 8002b06:	b103      	cbz	r3, 8002b0a <_close_r+0x1a>
 8002b08:	6023      	str	r3, [r4, #0]
 8002b0a:	bd38      	pop	{r3, r4, r5, pc}
 8002b0c:	20000230 	andcs	r0, r0, r0, lsr r2

08002b10 <_fstat_r>:
 8002b10:	b538      	push	{r3, r4, r5, lr}
 8002b12:	4d07      	ldr	r5, [pc, #28]	; (8002b30 <_fstat_r+0x20>)
 8002b14:	2300      	movs	r3, #0
 8002b16:	4604      	mov	r4, r0
 8002b18:	4608      	mov	r0, r1
 8002b1a:	4611      	mov	r1, r2
 8002b1c:	602b      	str	r3, [r5, #0]
 8002b1e:	f7fd fd96 	bl	800064e <_fstat>
 8002b22:	1c43      	adds	r3, r0, #1
 8002b24:	d102      	bne.n	8002b2c <_fstat_r+0x1c>
 8002b26:	682b      	ldr	r3, [r5, #0]
 8002b28:	b103      	cbz	r3, 8002b2c <_fstat_r+0x1c>
 8002b2a:	6023      	str	r3, [r4, #0]
 8002b2c:	bd38      	pop	{r3, r4, r5, pc}
 8002b2e:	bf00      	nop
 8002b30:	20000230 	andcs	r0, r0, r0, lsr r2

08002b34 <_isatty_r>:
 8002b34:	b538      	push	{r3, r4, r5, lr}
 8002b36:	4d06      	ldr	r5, [pc, #24]	; (8002b50 <_isatty_r+0x1c>)
 8002b38:	2300      	movs	r3, #0
 8002b3a:	4604      	mov	r4, r0
 8002b3c:	4608      	mov	r0, r1
 8002b3e:	602b      	str	r3, [r5, #0]
 8002b40:	f7fd fd8a 	bl	8000658 <_isatty>
 8002b44:	1c43      	adds	r3, r0, #1
 8002b46:	d102      	bne.n	8002b4e <_isatty_r+0x1a>
 8002b48:	682b      	ldr	r3, [r5, #0]
 8002b4a:	b103      	cbz	r3, 8002b4e <_isatty_r+0x1a>
 8002b4c:	6023      	str	r3, [r4, #0]
 8002b4e:	bd38      	pop	{r3, r4, r5, pc}
 8002b50:	20000230 	andcs	r0, r0, r0, lsr r2

08002b54 <_lseek_r>:
 8002b54:	b538      	push	{r3, r4, r5, lr}
 8002b56:	4d07      	ldr	r5, [pc, #28]	; (8002b74 <_lseek_r+0x20>)
 8002b58:	4604      	mov	r4, r0
 8002b5a:	4608      	mov	r0, r1
 8002b5c:	4611      	mov	r1, r2
 8002b5e:	2200      	movs	r2, #0
 8002b60:	602a      	str	r2, [r5, #0]
 8002b62:	461a      	mov	r2, r3
 8002b64:	f7fd fd7a 	bl	800065c <_lseek>
 8002b68:	1c43      	adds	r3, r0, #1
 8002b6a:	d102      	bne.n	8002b72 <_lseek_r+0x1e>
 8002b6c:	682b      	ldr	r3, [r5, #0]
 8002b6e:	b103      	cbz	r3, 8002b72 <_lseek_r+0x1e>
 8002b70:	6023      	str	r3, [r4, #0]
 8002b72:	bd38      	pop	{r3, r4, r5, pc}
 8002b74:	20000230 	andcs	r0, r0, r0, lsr r2

08002b78 <__malloc_lock>:
 8002b78:	4801      	ldr	r0, [pc, #4]	; (8002b80 <__malloc_lock+0x8>)
 8002b7a:	f7ff bb1d 	b.w	80021b8 <__retarget_lock_acquire_recursive>
 8002b7e:	bf00      	nop
 8002b80:	20000224 	andcs	r0, r0, r4, lsr #4

08002b84 <__malloc_unlock>:
 8002b84:	4801      	ldr	r0, [pc, #4]	; (8002b8c <__malloc_unlock+0x8>)
 8002b86:	f7ff bb18 	b.w	80021ba <__retarget_lock_release_recursive>
 8002b8a:	bf00      	nop
 8002b8c:	20000224 	andcs	r0, r0, r4, lsr #4

08002b90 <_read_r>:
 8002b90:	b538      	push	{r3, r4, r5, lr}
 8002b92:	4d07      	ldr	r5, [pc, #28]	; (8002bb0 <_read_r+0x20>)
 8002b94:	4604      	mov	r4, r0
 8002b96:	4608      	mov	r0, r1
 8002b98:	4611      	mov	r1, r2
 8002b9a:	2200      	movs	r2, #0
 8002b9c:	602a      	str	r2, [r5, #0]
 8002b9e:	461a      	mov	r2, r3
 8002ba0:	f7fd fd34 	bl	800060c <_read>
 8002ba4:	1c43      	adds	r3, r0, #1
 8002ba6:	d102      	bne.n	8002bae <_read_r+0x1e>
 8002ba8:	682b      	ldr	r3, [r5, #0]
 8002baa:	b103      	cbz	r3, 8002bae <_read_r+0x1e>
 8002bac:	6023      	str	r3, [r4, #0]
 8002bae:	bd38      	pop	{r3, r4, r5, pc}
 8002bb0:	20000230 	andcs	r0, r0, r0, lsr r2

08002bb4 <_init>:
 8002bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bb6:	bf00      	nop
 8002bb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bba:	bc08      	pop	{r3}
 8002bbc:	469e      	mov	lr, r3
 8002bbe:	4770      	bx	lr

08002bc0 <_fini>:
 8002bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bc2:	bf00      	nop
 8002bc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bc6:	bc08      	pop	{r3}
 8002bc8:	469e      	mov	lr, r3
 8002bca:	4770      	bx	lr

Disassembly of section .rodata:

08002bcc <__func__.0-0x3c>:
 8002bcc:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 8002bd0:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
 8002bd4:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
 8002bd8:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8002bdc:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
 8002be0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002be4:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002be8:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8002bec:	20736920 	rsbscs	r6, r3, r0, lsr #18
 8002bf0:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
 8002bf4:	0000000a 	andeq	r0, r0, sl
 8002bf8:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 8002bfc:	6571206f 	ldrbvs	r2, [r1, #-111]!	; 0xffffff91
 8002c00:	0d2e756d 	cfstr32eq	mvfx7, [lr, #-436]!	; 0xfffffe4c
 8002c04:	00000000 	andeq	r0, r0, r0

08002c08 <__func__.0>:
 8002c08:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
 8002c0c:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
 8002c10:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8002c14:	00000064 	andeq	r0, r0, r4, rrx

08002c18 <__func__.1>:
 8002c18:	6f727245 	svcvs	0x00727245
 8002c1c:	61485f72 	hvcvs	34290	; 0x85f2
 8002c20:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c24:	00000072 	andeq	r0, r0, r2, ror r0

08002c28 <__func__.2>:
 8002c28:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c2c:	00000035 	andeq	r0, r0, r5, lsr r0

08002c30 <__func__.3>:
 8002c30:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c34:	00000034 	andeq	r0, r0, r4, lsr r0

08002c38 <__func__.4>:
 8002c38:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c3c:	00000033 	andeq	r0, r0, r3, lsr r0

08002c40 <__func__.5>:
 8002c40:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c44:	00000032 	andeq	r0, r0, r2, lsr r0

08002c48 <__func__.6>:
 8002c48:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c4c:	00000031 	andeq	r0, r0, r1, lsr r0

08002c50 <__func__.7>:
 8002c50:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c54:	00000030 	andeq	r0, r0, r0, lsr r0

08002c58 <__func__.0>:
 8002c58:	67617355 			; <UNDEFINED> instruction: 0x67617355
 8002c5c:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
 8002c60:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8002c64:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 8002c68:	00007265 	andeq	r7, r0, r5, ror #4

08002c6c <__func__.1>:
 8002c6c:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 8002c70:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 8002c74:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 8002c78:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 8002c7c:	00000000 	andeq	r0, r0, r0

08002c80 <__func__.2>:
 8002c80:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
 8002c84:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 8002c88:	61485f65 	cmpvs	r8, r5, ror #30
 8002c8c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c90:	00000072 	andeq	r0, r0, r2, ror r0

08002c94 <__func__.4>:
 8002c94:	5f494d4e 	svcpl	0x00494d4e
 8002c98:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 8002c9c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 8002ca0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002ca8 <__func__.4+0x14>
 8002ca4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002ca8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002cac:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cb0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cb4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002cb8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002cbc:	2f726576 	svccs	0x00726576
 8002cc0:	2f637253 	svccs	0x00637253
 8002cc4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002cc8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002ccc:	61685f78 	smcvs	34296	; 0x85f8
 8002cd0:	61755f6c 	cmnvs	r5, ip, ror #30
 8002cd4:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 8002cd8:	00000000 	andeq	r0, r0, r0
 8002cdc:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002ce4 <__func__.4+0x50>
 8002ce0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002ce4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002ce8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cec:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cf0:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002cf4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002cf8:	2f726576 	svccs	0x00726576
 8002cfc:	2f637253 	svccs	0x00637253
 8002d00:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d04:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d08:	61685f78 	smcvs	34296	; 0x85f8
 8002d0c:	70675f6c 	rsbvc	r5, r7, ip, ror #30
 8002d10:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 8002d14:	00000000 	andeq	r0, r0, r0
 8002d18:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002d20 <__func__.4+0x8c>
 8002d1c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002d20:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002d24:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002d28:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002d2c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002d30:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002d34:	2f726576 	svccs	0x00726576
 8002d38:	2f637253 	svccs	0x00637253
 8002d3c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d40:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d44:	61685f78 	smcvs	34296	; 0x85f8
 8002d48:	6f635f6c 	svcvs	0x00635f6c
 8002d4c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 8002d50:	0000632e 	andeq	r6, r0, lr, lsr #6

08002d54 <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 8002d54:	00000000 	andeq	r0, r0, r0
 8002d58:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8002d5c:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
 8002d60:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
 8002d64:	3a4e5255 	bcc	93976c0 <_siccmram+0x1394540>
 8002d68:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8002d6c:	20583830 	subscs	r3, r8, r0, lsr r8
 8002d70:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002d74:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002d78:	61745320 	cmnvs	r4, r0, lsr #6
 8002d7c:	5b3a6b63 	blpl	8e9db10 <_siccmram+0xe9a990>
 8002d80:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002d84:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002d88:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002d8c:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002d90:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002d94:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002d98:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002d9c:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
 8002da0:	5b3a2074 	blpl	8e8af78 <_siccmram+0xe87df8>
 8002da4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002da8:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002dac:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002db0:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002db4:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002db8:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002dbc:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002dc0:	61745320 	cmnvs	r4, r0, lsr #6
 8002dc4:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
 8002dc8:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
 8002dcc:	6f442068 	svcvs	0x00442068
 8002dd0:	61776e77 	cmnvs	r7, r7, ror lr
 8002dd4:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
 8002dd8:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002ddc:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
 8002de0:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 8002de4:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
 8002de8:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
 8002dec:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8002df0:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
 8002df4:	20706d75 	rsbscs	r6, r0, r5, ror sp
 8002df8:	0000000d 	andeq	r0, r0, sp
 8002dfc:	61745320 	cmnvs	r4, r0, lsr #6
 8002e00:	46206b63 	strtmi	r6, [r0], -r3, ror #22
 8002e04:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8002e08:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
 8002e0c:	00000000 	andeq	r0, r0, r0
 8002e10:	20305220 	eorscs	r5, r0, r0, lsr #4
 8002e14:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e18:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e1c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e20:	0000000a 	andeq	r0, r0, sl
 8002e24:	20315220 	eorscs	r5, r1, r0, lsr #4
 8002e28:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e2c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e30:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e34:	0000000a 	andeq	r0, r0, sl
 8002e38:	20325220 	eorscs	r5, r2, r0, lsr #4
 8002e3c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e40:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e44:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e48:	0000000a 	andeq	r0, r0, sl
 8002e4c:	20335220 	eorscs	r5, r3, r0, lsr #4
 8002e50:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e54:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e58:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e5c:	0000000a 	andeq	r0, r0, sl
 8002e60:	20345220 	eorscs	r5, r4, r0, lsr #4
 8002e64:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e68:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e6c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e70:	0000000a 	andeq	r0, r0, sl
 8002e74:	20355220 	eorscs	r5, r5, r0, lsr #4
 8002e78:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e7c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e80:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e84:	0000000a 	andeq	r0, r0, sl
 8002e88:	20365220 	eorscs	r5, r6, r0, lsr #4
 8002e8c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e90:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e94:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e98:	0000000a 	andeq	r0, r0, sl
 8002e9c:	20375220 	eorscs	r5, r7, r0, lsr #4
 8002ea0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ea4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ea8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002eac:	0000000a 	andeq	r0, r0, sl
 8002eb0:	20385220 	eorscs	r5, r8, r0, lsr #4
 8002eb4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002eb8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ebc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ec0:	0000000a 	andeq	r0, r0, sl
 8002ec4:	20395220 	eorscs	r5, r9, r0, lsr #4
 8002ec8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ecc:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ed0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ed4:	0000000a 	andeq	r0, r0, sl
 8002ed8:	30315220 	eorscc	r5, r1, r0, lsr #4
 8002edc:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ee0:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ee4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ee8:	0000000a 	andeq	r0, r0, sl
 8002eec:	31315220 	teqcc	r1, r0, lsr #4
 8002ef0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ef4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ef8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002efc:	0000000a 	andeq	r0, r0, sl
 8002f00:	32315220 	eorscc	r5, r1, #32, 4
 8002f04:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f08:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f0c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f10:	0000000a 	andeq	r0, r0, sl
 8002f14:	20524c20 	subscs	r4, r2, r0, lsr #24
 8002f18:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f1c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f24:	0000000a 	andeq	r0, r0, sl
 8002f28:	20435020 	subcs	r5, r3, r0, lsr #32
 8002f2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f30:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f38:	0000000a 	andeq	r0, r0, sl
 8002f3c:	52535020 	subspl	r5, r3, #32
 8002f40:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f44:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f4c:	0000000a 	andeq	r0, r0, sl
 8002f50:	61745320 	cmnvs	r4, r0, lsr #6
 8002f54:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
 8002f58:	3a6c6c61 	bcc	9b1e0e4 <_siccmram+0x1b1af64>
 8002f5c:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f60:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002f64:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f68:	00000d20 	andeq	r0, r0, r0, lsr #26
 8002f6c:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002f70:	65522032 	ldrbvs	r2, [r2, #-50]	; 0xffffffce
 8002f74:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002f78:	61745320 	cmnvs	r4, r0, lsr #6
 8002f7c:	53206b63 			; <UNDEFINED> instruction: 0x53206b63
 8002f80:	63656c65 	cmnvs	r5, #25856	; 0x6500
 8002f84:	00203a74 	eoreq	r3, r0, r4, ror sl
 8002f88:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002f8c:	50535020 	subspl	r5, r3, r0, lsr #32
 8002f90:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f94:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f98:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f9c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002fa0:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fa4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fa8:	50534d20 	subspl	r4, r3, r0, lsr #26
 8002fac:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb8:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002fbc:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fc0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002fc4:	65522033 	ldrbvs	r2, [r2, #-51]	; 0xffffffcd
 8002fc8:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002fcc:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8002fd4 <APBPrescTable+0x280>
 8002fd0:	65532065 	ldrbvs	r2, [r3, #-101]	; 0xffffff9b
 8002fd4:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 8002fd8:	0020203a 	eoreq	r2, r0, sl, lsr r0
 8002fdc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fe0:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
 8002fe4:	20646165 	rsbcs	r6, r4, r5, ror #2
 8002fe8:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8002fec:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002ff0:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002ff4:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002ff8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002ffc:	6f725020 	svcvs	0x00725020
 8003000:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
 8003004:	646f4d20 	strbtvs	r4, [pc], #-3360	; 800300c <APBPrescTable+0x2b8>
 8003008:	20202065 	eorcs	r2, r0, r5, rrx
 800300c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003010:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003014:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8003018:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
 800301c:	206b6361 	rsbcs	r6, fp, r1, ror #6
 8003020:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
 8003024:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
 8003028:	203a6570 	eorscs	r6, sl, r0, ror r5
 800302c:	00202020 	eoreq	r2, r0, r0, lsr #32
 8003030:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003034:	57203820 	strpl	r3, [r0, -r0, lsr #16]!
 8003038:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
 800303c:	61724620 	cmnvs	r2, r0, lsr #12
 8003040:	2020656d 	eorcs	r6, r0, sp, ror #10
 8003044:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003048:	00000d2e 	andeq	r0, r0, lr, lsr #26
 800304c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003050:	20363220 	eorscs	r3, r6, r0, lsr #4
 8003054:	6c726f57 	ldclvs	15, cr6, [r2], #-348	; 0xfffffea4
 8003058:	72462064 	subvc	r2, r6, #100	; 0x64
 800305c:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8003060:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003064:	00000d2e 	andeq	r0, r0, lr, lsr #26

08003068 <_global_impure_ptr>:
 8003068:	20000010 	andcs	r0, r0, r0, lsl r0

0800306c <__sf_fake_stderr>:
	...

0800308c <__sf_fake_stdin>:
	...

080030ac <__sf_fake_stdout>:
	...
 80030cc:	2b302d23 	blcs	8c0e560 <_siccmram+0xc0b3e0>
 80030d0:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
 80030d4:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
 80030d8:	47464567 	strbmi	r4, [r6, -r7, ror #10]
 80030dc:	32313000 	eorscc	r3, r1, #0
 80030e0:	36353433 			; <UNDEFINED> instruction: 0x36353433
 80030e4:	41393837 	teqmi	r9, r7, lsr r8
 80030e8:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 80030ec:	31300046 	teqcc	r0, r6, asr #32
 80030f0:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 80030f4:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 80030f8:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 80030fc:	00006665 	andeq	r6, r0, r5, ror #12

Disassembly of section .ARM:

08003100 <__exidx_start>:
 8003100:	7fffd1f0 	svcvc	0x00ffd1f0
 8003104:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

08003108 <__frame_dummy_init_array_entry>:
 8003108:	080001b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8}

Disassembly of section .fini_array:

0800310c <__do_global_dtors_aux_fini_array_entry>:
 800310c:	08000191 	stmdaeq	r0, {r0, r4, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <_impure_ptr>:
2000000c:	20000010 	andcs	r0, r0, r0, lsl r0

20000010 <impure_data>:
20000010:	00000000 	andeq	r0, r0, r0
20000014:	0800308c 	stmdaeq	r0, {r2, r3, r7, ip, sp}
20000018:	080030ac 	stmdaeq	r0, {r2, r3, r5, r7, ip, sp}
2000001c:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}
	...

Disassembly of section .bss:

20000070 <__bss_start__>:
20000070:	00000000 	andeq	r0, r0, r0

20000074 <object.0>:
	...

2000008c <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
2000008c:	00000000 	andeq	r0, r0, r0

20000090 <huart1>:
	...

200000d8 <uwTick>:
__IO uint32_t uwTick;
200000d8:	00000000 	andeq	r0, r0, r0

200000dc <buffer.0>:
	...

200001dc <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
200001dc:	00000000 	andeq	r0, r0, r0

200001e0 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
200001e0:	00000000 	andeq	r0, r0, r0

200001e4 <frame.1>:
	...

20000224 <__lock___malloc_recursive_mutex>:
	...

20000225 <__lock___sfp_recursive_mutex>:
	...

20000226 <__lock___sinit_recursive_mutex>:
	...

20000228 <__malloc_free_list>:
20000228:	00000000 	andeq	r0, r0, r0

2000022c <__malloc_sbrk_start>:
2000022c:	00000000 	andeq	r0, r0, r0

20000230 <errno>:
20000230:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

20000234 <_end-0x4>:
20000234:	00000000 	andeq	r0, r0, r0

20000238 <_end>:
	...

20000a38 <_sstack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   0:	00002f41 	andeq	r2, r0, r1, asr #30
   4:	61656100 	cmnvs	r5, r0, lsl #2
int _execve(char *name, char **argv, char **env)
{
  (void)name;
  (void)argv;
  (void)env;
  errno = ENOMEM;
   8:	01006962 	tsteq	r0, r2, ror #18
  return -1;
}
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  while (1)
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc

    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6

    /* USART1 interrupt Deinit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }
}
  28:	011b011a 	tsteq	fp, sl, lsl r1
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000181 	andeq	r0, r0, r1, lsl #3
       4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000131 	andeq	r0, r0, r1, lsr r1
      10:	0000b70c 	andeq	fp, r0, ip, lsl #14
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00004b00 	andeq	r4, r0, r0, lsl #22
	...
}
      28:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      2c:	00746e69 	rsbseq	r6, r4, r9, ror #28
      30:	00008c03 	andeq	r8, r0, r3, lsl #24
    if (status != HAL_OK)
      34:	1a8f0200 	bne	fe3c083c <_estack+0xde3bf604>
      uwTickFreq = prevTickFreq;
      38:	00000029 	andeq	r0, r0, r9, lsr #32
      3c:	a0070404 	andge	r0, r7, r4, lsl #8
      40:	04000000 	streq	r0, [r0], #-0
      44:	00000508 	andeq	r0, r0, r8, lsl #10
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      
      if (pllsource != 0)
      48:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
      4c:	00010f04 	andeq	r0, r1, r4, lsl #30
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	06010400 	streq	r0, [r1], -r0, lsl #8
      54:	000000e0 	andeq	r0, r0, r0, ror #1
      58:	0000ad03 	andeq	sl, r0, r3, lsl #26
      5c:	182b0300 	stmdane	fp!, {r8, r9}
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00000064 	andeq	r0, r0, r4, rrx
      64:	de080104 	adflee	f0, f0, f4
      68:	04000000 	streq	r0, [r0], #-0
      SystemCoreClock = pllvco/pllp;
      6c:	01270502 			; <UNDEFINED> instruction: 0x01270502
      70:	02040000 	andeq	r0, r4, #0
      break;
      74:	00000e07 	andeq	r0, r0, r7, lsl #28
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      7c:	00000005 	andeq	r0, r0, r5
      80:	00004003 	andeq	r4, r0, r3
      84:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
      88:	0000008c 	andeq	r0, r0, ip, lsl #1
      8c:	9b070404 	blls	1c10a4 <_Min_Heap_Size+0x1c08a4>
      90:	04000000 	streq	r0, [r0], #-0
      94:	00960708 	addseq	r0, r6, r8, lsl #14
      98:	04050000 	streq	r0, [r5], #-0
      9c:	e7080104 	str	r0, [r8, -r4, lsl #2]
    Error_Handler();
      a0:	03000000 	movweq	r0, #0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	000000af 	andeq	r0, r0, pc, lsr #1
      a8:	58131804 	ldmdapl	r3, {r2, fp, ip}
      ac:	06000000 	streq	r0, [r0], -r0
      b0:	000000a3 	andeq	r0, r0, r3, lsr #1
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	00004203 	andeq	r4, r0, r3, lsl #4
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
      bc:	00000080 	andeq	r0, r0, r0, lsl #1
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0000b406 	andeq	fp, r0, r6, lsl #8
      c4:	00f10700 	rscseq	r0, r1, r0, lsl #14
      c8:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0000d711 	andeq	sp, r0, r1, lsl r7
      d0:	8c030500 	cfstr32hi	mvfx0, [r3], {-0}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	0000a304 	andeq	sl, r0, r4, lsl #6
      dc:	09010900 	stmdbeq	r1, {r8, fp}
      e0:	01000001 	tsteq	r0, r1
    if (huart->hdmarx != NULL)
      e4:	9a010735 	bls	41dc0 <_Min_Heap_Size+0x415c0>
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	c4000000 	strgt	r0, [r0], #-0
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0c080005 	stceq	0, cr0, [r8], {5}
      f0:	00080006 	andeq	r0, r8, r6
    huart->TxXferCount = 0x00U;
      f4:	01000000 	mrseq	r0, (UNDEF: 0)
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00000170 	andeq	r0, r0, r0, ror r1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0000ec0a 	andeq	lr, r0, sl, lsl #24
    huart->RxState = HAL_UART_STATE_READY;
     100:	17350100 	ldrne	r0, [r5, -r0, lsl #2]!
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000030 	andeq	r0, r0, r0, lsr r0
    HAL_UART_AbortCpltCallback(huart);
     108:	0000002a 	andeq	r0, r0, sl, lsr #32
     10c:	00000020 	andeq	r0, r0, r0, lsr #32
  uint32_t AbortCplt = 0x01U;
     110:	0000fc0b 	andeq	pc, r0, fp, lsl #24
  if (AbortCplt == 0x01U)
     114:	12370100 	eorsne	r0, r7, #0, 2
}
     118:	000000a3 	andeq	r0, r0, r3, lsr #1
     11c:	210b0101 	tstcs	fp, r1, lsl #2
     120:	01000000 	mrseq	r0, (UNDEF: 0)
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
     124:	00a31238 	adceq	r1, r3, r8, lsr r2
    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	01010000 	mrseq	r0, (UNDEF: 1)
     12c:	0000ce0b 	andeq	ip, r0, fp, lsl #28
     130:	13390100 	teqne	r9, #0, 2
     134:	000000b4 	strheq	r0, [r0], -r4
     138:	1b0c0101 	blne	300544 <_Min_Heap_Size+0x2ffd44>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	01000001 	tsteq	r0, r1
     140:	00c0123a 	sbceq	r1, r0, sl, lsr r2
     144:	370c0000 	strcc	r0, [ip, -r0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	01000000 	mrseq	r0, (UNDEF: 0)
     14c:	0170123b 	cmneq	r0, fp, lsr r2
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	290d0000 	stmdbcs	sp, {}	; <UNPREDICTABLE>
     154:	01000000 	mrseq	r0, (UNDEF: 0)
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	00d70c3c 	sbcseq	r0, r7, ip, lsr ip
     15c:	00710000 	rsbseq	r0, r1, r0

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	006f0000 	rsbeq	r0, pc, r0
     164:	f00e0000 			; <UNDEFINED> instruction: 0xf00e0000
     168:	76080005 	strvc	r0, [r8], -r5
     16c:	00000001 	andeq	r0, r0, r1
     170:	00af0408 	adceq	r0, pc, r8, lsl #8

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    }
  }
}
     174:	010f0000 	mrseq	r0, CPSR
     178:	00010101 	andeq	r0, r1, r1, lsl #2
     17c:	00010100 	andeq	r0, r1, r0, lsl #2
     180:	0d0f0500 	cfstr32eq	mvfx0, [pc, #-0]	; 188 <_Min_Heap_Size-0x678>
}
     184:	00083100 	andeq	r3, r8, r0, lsl #2
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	ea000200 	b	990 <_Min_Heap_Size+0x190>
     18c:	04000000 	streq	r0, [r0], #-0
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00013101 	andeq	r3, r1, r1, lsl #2
     194:	02960c00 	addseq	r0, r6, #0, 24
     198:	004b0000 	subeq	r0, fp, r0
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	00100000 	andseq	r0, r0, r0
	...
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a8:	01e80000 	mvneq	r0, r0
     1ac:	01020000 	mrseq	r0, (UNDEF: 2)
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	0000e006 	andeq	lr, r0, r6
     1b4:	08010200 	stmdaeq	r1, {r9}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000000de 	ldrdeq	r0, [r0], -lr
     1bc:	27050202 	strcs	r0, [r5, -r2, lsl #4]
     1c0:	02000001 	andeq	r0, r0, #1
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	000e0702 	andeq	r0, lr, r2, lsl #14
     1c8:	04020000 	streq	r0, [r2], #-0
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00000505 	andeq	r0, r0, r5, lsl #10
     1d0:	00400300 	subeq	r0, r0, r0, lsl #6
     1d4:	4f020000 	svcmi	0x00020000
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	00005819 	andeq	r5, r0, r9, lsl r8
     1dc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	0000009b 	muleq	r0, fp, r0
     1e4:	00050802 	andeq	r0, r5, r2, lsl #16
     1e8:	02000000 	andeq	r0, r0, #0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	00960708 	addseq	r0, r6, r8, lsl #14
     1f0:	50030000 	andpl	r0, r3, r0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	02000002 	andeq	r0, r0, #2
     1f8:	005f1ec8 	subseq	r1, pc, r8, asr #29
     1fc:	04040000 	streq	r0, [r4], #-0
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	07040200 	streq	r0, [r4, -r0, lsl #4]
     208:	000000a0 	andeq	r0, r0, r0, lsr #1
     20c:	0f040802 	svceq	0x00040802
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	03000001 	movweq	r0, #1
     214:	000003d5 	ldrdeq	r0, [r0], -r5
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	450e1e03 	strmi	r1, [lr, #-3587]	; 0xfffff1fd
     21c:	03000000 	movweq	r0, #0
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	0000030c 	andeq	r0, r0, ip, lsl #6
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	450e2203 	strmi	r2, [lr, #-515]	; 0xfffffdfd
     228:	03000000 	movweq	r0, #0
  tmp = hdma->Instance->FCR;
     22c:	0000039e 	muleq	r0, lr, r3
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	450e2e03 	strmi	r2, [lr, #-3587]	; 0xfffff1fd
  tmp |= hdma->Init.FIFOMode;
     234:	03000000 	movweq	r0, #0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	00000395 	muleq	r0, r5, r3
    tmp |= hdma->Init.FIFOThreshold;
     23c:	370f3803 	strcc	r3, [pc, -r3, lsl #16]
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	03000000 	movweq	r0, #0
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
     248:	3e183c03 	cdpcc	12, 1, cr3, cr8, cr3, {0}
  hdma->Instance->FCR = tmp;
     24c:	03000000 	movweq	r0, #0
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	000003e0 	andeq	r0, r0, r0, ror #7
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	3e183f03 	cdpcc	15, 1, cr3, cr8, cr3, {0}
     258:	03000000 	movweq	r0, #0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000347 	andeq	r0, r0, r7, asr #6
  hdma->State = HAL_DMA_STATE_READY;
     260:	3e184b03 	vnmlscc.f64	d4, d8, d3
     264:	03000000 	movweq	r0, #0
  return HAL_OK;
     268:	0000028d 	andeq	r0, r0, sp, lsl #5
     26c:	4c145a03 			; <UNDEFINED> instruction: 0x4c145a03
     270:	03000000 	movweq	r0, #0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	0000039d 	muleq	r0, sp, r3
     278:	a6106603 	ldrge	r6, [r0], -r3, lsl #12
     27c:	03000000 	movweq	r0, #0
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	000002c1 	andeq	r0, r0, r1, asr #5
        hdma->State = HAL_DMA_STATE_READY;
     284:	3e18d103 	mnfcce	f5, f3
        return HAL_ERROR; 
     288:	05000000 	streq	r0, [r0, #-0]
    return HAL_ERROR;
     28c:	00010c04 	andeq	r0, r1, r4, lsl #24
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	08010200 	stmdaeq	r1, {r9}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	000000e7 	andeq	r0, r0, r7, ror #1
     298:	00024903 	andeq	r4, r2, r3, lsl #18
      tickstart = HAL_GetTick();
     29c:	122a0400 	eorne	r0, sl, #0, 8
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	0000006d 	andeq	r0, r0, sp, rrx
     2a4:	0003aa06 	andeq	sl, r3, r6, lsl #20
     2a8:	2f051000 	svccs	0x00051000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	00014b08 	andeq	r4, r1, r8, lsl #22
     2b0:	02080700 	andeq	r0, r8, #0, 14
     2b4:	30050000 	andcc	r0, r5, r0
          return HAL_TIMEOUT;
     2b8:	00011309 	andeq	r1, r1, r9, lsl #6
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00230200 	eoreq	r0, r3, r0, lsl #4
     2c0:	0002f007 	andeq	pc, r2, r7
     2c4:	07310500 	ldreq	r0, [r1, -r0, lsl #10]!
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00000045 	andeq	r0, r0, r5, asr #32
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	00082302 	andeq	r2, r8, r2, lsl #6
     2d0:	0003d703 	andeq	sp, r3, r3, lsl #14
     2d4:	14610600 	strbtne	r0, [r1], #-1536	; 0xfffffa00
      tickstart = HAL_GetTick();
     2d8:	0000008e 	andeq	r0, r0, lr, lsl #1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00030e03 	andeq	r0, r3, r3, lsl #28
     2e0:	15660600 	strbne	r0, [r6, #-1536]!	; 0xfffffa00
     2e4:	0000009a 	muleq	r0, sl, r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	0001de03 	andeq	sp, r1, r3, lsl #28
     2ec:	136b0600 	cmnne	fp, #0, 12
          return HAL_TIMEOUT;
     2f0:	00000058 	andeq	r0, r0, r8, asr r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00034903 	andeq	r4, r3, r3, lsl #18
     2f8:	128b0600 	addne	r0, fp, #0, 12
     2fc:	000000d6 	ldrdeq	r0, [r0], -r6
     300:	00039f03 	andeq	r9, r3, r3, lsl #30
     304:	129d0600 	addsne	r0, sp, #0, 12
     308:	000000ee 	andeq	r0, r0, lr, ror #1
     30c:	00039703 	andeq	r9, r3, r3, lsl #14
     310:	12a10600 	adcne	r0, r1, #0, 12
      tickstart = HAL_GetTick();
     314:	000000b2 	strheq	r0, [r0], -r2
     318:	0003b503 	andeq	fp, r3, r3, lsl #10
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	12a50600 	adcne	r0, r5, #0, 12
     320:	000000be 	strheq	r0, [r0], -lr
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	0003e203 	andeq	lr, r3, r3, lsl #4
     328:	12a90600 	adcne	r0, r9, #0, 12
     32c:	000000ca 	andeq	r0, r0, sl, asr #1
     330:	00028f03 	andeq	r8, r2, r3, lsl #30
          return HAL_TIMEOUT;
     334:	12bd0600 	adcsne	r0, sp, #0, 12
    if(pwrclkchanged == SET)
     338:	000000e2 	andeq	r0, r0, r2, ror #1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0002c303 	andeq	ip, r2, r3, lsl #6
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	13c20600 	bicne	r0, r2, #0, 12
     344:	000000fa 	strdeq	r0, [r0], -sl
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00021006 	andeq	r1, r2, r6
     34c:	1b075800 	blne	1d6354 <_Min_Heap_Size+0x1d5b54>
     350:	0002a308 	andeq	sl, r2, r8, lsl #6
     354:	02300700 	eorseq	r0, r0, #0, 14
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	1d070000 	stcne	0, cr0, [r7, #-0]
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0001870a 	andeq	r8, r1, sl, lsl #14
     360:	00230200 	eoreq	r0, r3, r0, lsl #4
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	0002d607 	andeq	sp, r2, r7, lsl #12
     368:	0a1e0700 	beq	781f70 <_Min_Heap_Size+0x781770>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	0000016f 	andeq	r0, r0, pc, ror #2
     370:	07022302 	streq	r2, [r2, -r2, lsl #6]
     374:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	ab0a1f07 	blge	287f9c <_Min_Heap_Size+0x28779c>
     37c:	02000001 	andeq	r0, r0, #1
     380:	f8070423 			; <UNDEFINED> instruction: 0xf8070423
     384:	07000002 	streq	r0, [r0, -r2]
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	01b70b20 			; <UNDEFINED> instruction: 0x01b70b20
     38c:	23020000 	movwcs	r0, #8192	; 0x2000
        __HAL_RCC_PLL_DISABLE();
     390:	03590708 	cmpeq	r9, #8, 14	; 0x200000
     394:	21070000 	mrscs	r0, (UNDEF: 7)
        tickstart = HAL_GetTick();
     398:	0001930a 	andeq	r9, r1, sl, lsl #6
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	0a230200 	beq	8c0ba4 <_Min_Heap_Size+0x8c03a4>
     3a0:	00028607 	andeq	r8, r2, r7, lsl #12
     3a4:	0a220700 	beq	881fac <_Min_Heap_Size+0x8817ac>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
     3ac:	070c2302 	streq	r2, [ip, -r2, lsl #6]
            return HAL_TIMEOUT;
     3b0:	000001d6 	ldrdeq	r0, [r0], -r6
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	870a2307 	strhi	r2, [sl, -r7, lsl #6]
     3b8:	02000001 	andeq	r0, r0, #1
     3bc:	60070e23 	andvs	r0, r7, r3, lsr #28
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	07000003 	streq	r0, [r0, -r3]
     3c4:	017b0a24 	cmneq	fp, r4, lsr #20
     3c8:	23020000 	movwcs	r0, #8192	; 0x2000
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	03180710 	tsteq	r8, #16, 14	; 0x400000
     3d0:	2a070000 	bcs	1c03d8 <_Min_Heap_Size+0x1bfbd8>
     3d4:	00011f13 	andeq	r1, r1, r3, lsl pc
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	18230200 	stmdane	r3!, {r9}
     3dc:	00033f07 	andeq	r3, r3, r7, lsl #30
     3e0:	132b0700 			; <UNDEFINED> instruction: 0x132b0700
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	0000011f 	andeq	r0, r0, pc, lsl r1
     3e8:	07282302 	streq	r2, [r8, -r2, lsl #6]!
     3ec:	00000215 	andeq	r0, r0, r5, lsl r2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	1f132c07 	svcne	0x00132c07
     3f4:	02000001 	andeq	r0, r0, #1
     3f8:	60073823 	andvs	r3, r7, r3, lsr #16
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	07000002 	streq	r0, [r0, -r2]
     400:	0157112d 	cmpeq	r7, sp, lsr #2
     404:	23020000 	movwcs	r0, #8192	; 0x2000
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	032d0748 			; <UNDEFINED> instruction: 0x032d0748
     40c:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
     410:	00014b0c 	andeq	r4, r1, ip, lsl #22
     414:	4c230200 	sfmmi	f0, 4, [r3], #-0
     418:	00036807 	andeq	r6, r3, r7, lsl #16
     41c:	09300700 	ldmdbeq	r0!, {r8, r9, sl}
     420:	000002a3 	andeq	r0, r0, r3, lsr #5
     424:	00502302 	subseq	r2, r0, r2, lsl #6
        __HAL_RCC_PLL_ENABLE();
     428:	00004508 	andeq	r4, r0, r8, lsl #10
     42c:	0002b300 	andeq	fp, r2, r0, lsl #6
        tickstart = HAL_GetTick();
     430:	00800900 	addeq	r0, r0, r0, lsl #18
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00010000 	andeq	r0, r1, r0
     438:	736d740a 	cmnvc	sp, #167772160	; 0xa000000
     43c:	11081000 	mrsne	r1, (UNDEF: 8)
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0002fd08 	andeq	pc, r2, r8, lsl #26
     444:	03c30700 	biceq	r0, r3, #0, 14
            return HAL_TIMEOUT;
     448:	12080000 	andne	r0, r8, #0
  return HAL_OK;
     44c:	0001630a 	andeq	r6, r1, sl, lsl #6
        __HAL_RCC_PLL_DISABLE();
     450:	00230200 	eoreq	r0, r3, r0, lsl #4
     454:	00034f07 	andeq	r4, r3, r7, lsl #30
        tickstart = HAL_GetTick();
     458:	0a130800 	beq	4c2460 <_Min_Heap_Size+0x4c1c60>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	00000163 	andeq	r0, r0, r3, ror #2
     460:	07042302 	streq	r2, [r4, -r2, lsl #6]
     464:	000001f5 	strdeq	r0, [r0], -r5
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	630a1408 	movwvs	r1, #41992	; 0xa408
     46c:	02000001 	andeq	r0, r0, #1
            return HAL_TIMEOUT;
     470:	af070823 	svcge	0x00070823
  return HAL_OK;
     474:	08000002 	stmdaeq	r0, {r1}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	01630a15 	cmneq	r3, r5, lsl sl
        pll_config = RCC->PLLCFGR;
     47c:	23020000 	movwcs	r0, #8192	; 0x2000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0608000c 	streq	r0, [r8], -ip
     484:	0d000001 	stceq	0, cr0, [r0, #-4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	09000003 	stmdbeq	r0, {r0, r1}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	00000080 	andeq	r0, r0, r0, lsl #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	1d0b0000 	stcne	0, cr0, [fp, #-0]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	01000002 	tsteq	r0, r2
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	02fd0727 	rscseq	r0, sp, #10223616	; 0x9c0000
     49c:	05010000 	streq	r0, [r1, #-0]
     4a0:	00000003 	andeq	r0, r0, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	01e60b00 	mvneq	r0, r0, lsl #22
     4a8:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	00033308 	andeq	r3, r3, r8, lsl #6
     4b0:	03050100 	movweq	r0, #20736	; 0x5100
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	01060405 	tsteq	r6, r5, lsl #8
     4bc:	010c0000 	mrseq	r0, (UNDEF: 12)
  return HAL_OK;
     4c0:	00000200 	andeq	r0, r0, r0, lsl #4
}
     4c4:	0105a901 	tsteq	r5, r1, lsl #18
        return HAL_ERROR;
     4c8:	00000079 	andeq	r0, r0, r9, ror r0
	...
        return HAL_ERROR;
     4d4:	00000084 	andeq	r0, r0, r4, lsl #1
          return HAL_ERROR;
     4d8:	00039e01 	andeq	r9, r3, r1, lsl #28
     4dc:	02cb0d00 	sbceq	r0, fp, #0, 26
     4e0:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
     4e4:	00010613 	andeq	r0, r1, r3, lsl r6
     4e8:	0000a800 	andeq	sl, r0, r0, lsl #16
     4ec:	0000a400 	andeq	sl, r0, r0, lsl #8
     4f0:	03070d00 	movweq	r0, #32000	; 0x7d00
     4f4:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
     4f8:	00033320 	andeq	r3, r3, r0, lsr #6
     4fc:	0000cd00 	andeq	ip, r0, r0, lsl #26
     500:	0000c900 	andeq	ip, r0, r0, lsl #18
     504:	6e650e00 	cdpvs	14, 6, cr0, cr5, cr0, {0}
     508:	a9010076 	stmdbge	r1, {r1, r2, r4, r5, r6}
     50c:	0003332d 	andeq	r3, r3, sp, lsr #6
     510:	0000f200 	andeq	pc, r0, r0, lsl #4
     514:	0000ee00 	andeq	lr, r0, r0, lsl #28
     518:	00000f00 	andeq	r0, r0, r0, lsl #30
     51c:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
     520:	0c000000 	stceq	0, cr0, [r0], {-0}
     524:	00038701 	andeq	r8, r3, r1, lsl #14
     528:	05a30100 	streq	r0, [r3, #256]!	; 0x100
     52c:	00007901 	andeq	r7, r0, r1, lsl #18
	...
     538:	00011300 	andeq	r1, r1, r0, lsl #6
     53c:	03c70100 	biceq	r0, r7, #0, 2
     540:	000f0000 	andeq	r0, pc, r0
     544:	0a000000 	beq	54c <_Min_Heap_Size-0x2b4>
     548:	00000008 	andeq	r0, r0, r8
     54c:	0320010c 			; <UNDEFINED> instruction: 0x0320010c
     550:	9b010000 	blls	40558 <_Min_Heap_Size+0x3fd58>
     554:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
     560:	01330000 	teqeq	r3, r0
     564:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     568:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
     56c:	00646c6f 	rsbeq	r6, r4, pc, ror #24
     570:	06119b01 	ldreq	r9, [r1], -r1, lsl #22
     574:	57000001 	strpl	r0, [r0, -r1]
     578:	53000001 	movwpl	r0, #1
     57c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     580:	0077656e 	rsbseq	r6, r7, lr, ror #10
     584:	061c9b01 	ldreq	r9, [ip], -r1, lsl #22
     588:	7c000001 	stcvc	0, cr0, [r0], {1}
     58c:	78000001 	stmdavc	r0, {r0}
     590:	0f000001 	svceq	0x00000001
     594:	00000000 	andeq	r0, r0, r0
     598:	0000080a 	andeq	r0, r0, sl, lsl #16
     59c:	0f011000 	svceq	0x00011000
     5a0:	01000002 	tsteq	r0, r2
     5a4:	79010594 	stmdbvc	r1, {r2, r4, r7, r8, sl}
	...
     5b0:	02000000 	andeq	r0, r0, #0
     5b4:	5801007d 	stmdapl	r1, {r0, r2, r3, r4, r5, r6}
     5b8:	0d000004 	stceq	0, cr0, [r0, #-16]
     5bc:	0000023e 	andeq	r0, r0, lr, lsr r2
     5c0:	06119401 	ldreq	r9, [r1], -r1, lsl #8
     5c4:	a1000001 	tstge	r0, r1
     5c8:	9d000001 	stcls	0, cr0, [r0, #-4]
     5cc:	11000001 	tstne	r0, r1
     5d0:	01007473 	tsteq	r0, r3, ror r4
     5d4:	04582494 	ldrbeq	r2, [r8], #-1172	; 0xfffffb6c
     5d8:	51010000 	mrspl	r0, (UNDEF: 1)
     5dc:	c3040500 	movwgt	r0, #17664	; 0x4500
     5e0:	10000001 	andne	r0, r0, r1
     5e4:	0002ba01 	andeq	fp, r2, r1, lsl #20
     5e8:	058e0100 	streq	r0, [lr, #256]	; 0x100
     5ec:	00007901 	andeq	r7, r0, r1, lsl #18
	...
     5f8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
     5fc:	00049101 	andeq	r9, r4, r1, lsl #2
     600:	75620e00 	strbvc	r0, [r2, #-3584]!	; 0xfffff200
     604:	8e010066 	cdphi	0, 0, cr0, cr1, cr6, {3}
     608:	00049118 	andeq	r9, r4, r8, lsl r1
     60c:	0001c600 	andeq	ip, r1, r0, lsl #12
     610:	0001c200 	andeq	ip, r1, r0, lsl #4
     614:	04050000 	streq	r0, [r5], #-0
     618:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
     61c:	03cd010c 	biceq	r0, sp, #12, 2
     620:	87010000 	strhi	r0, [r1, -r0]
     624:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
     630:	01e70000 	mvneq	r0, r0
     634:	d4010000 	strle	r0, [r1], #-0
     638:	0d000004 	stceq	0, cr0, [r0, #-16]
     63c:	000002cb 	andeq	r0, r0, fp, asr #5
     640:	06138701 	ldreq	r8, [r3], -r1, lsl #14
     644:	0b000001 	bleq	650 <_Min_Heap_Size-0x1b0>
     648:	07000002 	streq	r0, [r0, -r2]
     64c:	0f000002 	svceq	0x00000002
     650:	00000000 	andeq	r0, r0, r0
     654:	0000080a 	andeq	r0, r0, sl, lsl #16
     658:	d0010c00 	andle	r0, r1, r0, lsl #24
     65c:	01000002 	tsteq	r0, r2
     660:	79010580 	stmdbvc	r1, {r7, r8, sl}
	...
     66c:	2c000000 	stccs	0, cr0, [r0], {-0}
     670:	01000002 	tsteq	r0, r2
     674:	00000511 	andeq	r0, r0, r1, lsl r5
     678:	001c130d 	andseq	r1, ip, sp, lsl #6
     67c:	10800100 	addne	r0, r0, r0, lsl #2
     680:	00000511 	andeq	r0, r0, r1, lsl r5
     684:	00000250 	andeq	r0, r0, r0, asr r2
     688:	0000024c 	andeq	r0, r0, ip, asr #4
     68c:	0000000f 	andeq	r0, r0, pc
     690:	00080a00 	andeq	r0, r8, r0, lsl #20
     694:	04050000 	streq	r0, [r5], #-0
     698:	00000079 	andeq	r0, r0, r9, ror r0
     69c:	0301010c 	movweq	r0, #4364	; 0x110c
     6a0:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
     6a4:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
     6b0:	02710000 	rsbseq	r0, r1, #0
     6b4:	5b010000 	blpl	406bc <_Min_Heap_Size+0x3febc>
     6b8:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
     6bc:	000003a5 	andeq	r0, r0, r5, lsr #7
     6c0:	06117801 	ldreq	r7, [r1], -r1, lsl #16
     6c4:	a1000001 	tstge	r0, r1
     6c8:	9d000002 	stcls	0, cr0, [r0, #-8]
     6cc:	12000002 	andne	r0, r0, #2
     6d0:	0000156d 	andeq	r1, r0, sp, ror #10
     6d4:	791b7801 	ldmdbvc	fp, {r0, fp, ip, sp, lr}
     6d8:	02000000 	andeq	r0, r0, #0
     6dc:	00137491 	mulseq	r3, r1, r4
     6e0:	01ee0110 	mvneq	r0, r0, lsl r1
     6e4:	70010000 	andvc	r0, r1, r0
     6e8:	00790105 	rsbseq	r0, r9, r5, lsl #2
     6ec:	065c0000 	ldrbeq	r0, [ip], -r0
     6f0:	06600800 	strbteq	r0, [r0], -r0, lsl #16
     6f4:	7d020800 	stcvc	8, cr0, [r2, #-0]
     6f8:	05aa0100 	streq	r0, [sl, #256]!	; 0x100
     6fc:	3e0d0000 	cdpcc	0, 0, cr0, cr13, cr0, {0}
     700:	01000002 	tsteq	r0, r2
     704:	00791070 	rsbseq	r1, r9, r0, ror r0
     708:	02c60000 	sbceq	r0, r6, #0
     70c:	02c20000 	sbceq	r0, r2, #0
     710:	70110000 	andsvc	r0, r1, r0
     714:	01007274 	tsteq	r0, r4, ror r2
     718:	00791a70 	rsbseq	r1, r9, r0, ror sl
     71c:	51010000 	mrspl	r0, (UNDEF: 1)
     720:	72696411 	rsbvc	r6, r9, #285212672	; 0x11000000
     724:	23700100 	cmncs	r0, #0, 2
     728:	00000079 	andeq	r0, r0, r9, ror r0
     72c:	10005201 	andne	r5, r0, r1, lsl #4
     730:	00033701 	andeq	r3, r3, r1, lsl #14
     734:	056a0100 	strbeq	r0, [sl, #-256]!	; 0xffffff00
     738:	00007901 	andeq	r7, r0, r1, lsl #18
     73c:	00065800 	andeq	r5, r6, r0, lsl #16
     740:	00065c08 	andeq	r5, r6, r8, lsl #24
     744:	007d0208 	rsbseq	r0, sp, r8, lsl #4
     748:	0005dd01 	andeq	sp, r5, r1, lsl #26
     74c:	023e0d00 	eorseq	r0, lr, #0, 26
     750:	6a010000 	bvs	40758 <_Min_Heap_Size+0x3ff58>
     754:	00007911 	andeq	r7, r0, r1, lsl r9
     758:	0002eb00 	andeq	lr, r2, r0, lsl #22
     75c:	0002e700 	andeq	lr, r2, r0, lsl #14
     760:	01100000 	tsteq	r0, r0
     764:	00000237 	andeq	r0, r0, r7, lsr r2
     768:	01056301 	tsteq	r5, r1, lsl #6
     76c:	00000079 	andeq	r0, r0, r9, ror r0
     770:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
     774:	08000658 	stmdaeq	r0, {r3, r4, r6, r9, sl}
     778:	01007d02 	tsteq	r0, r2, lsl #26
     77c:	0000061d 	andeq	r0, r0, sp, lsl r6
     780:	00023e0d 	andeq	r3, r2, sp, lsl #28
     784:	10630100 	rsbne	r0, r3, r0, lsl #2
     788:	00000079 	andeq	r0, r0, r9, ror r0
     78c:	00000310 	andeq	r0, r0, r0, lsl r3
     790:	0000030c 	andeq	r0, r0, ip, lsl #6
     794:	00747311 	rsbseq	r7, r4, r1, lsl r3
     798:	58236301 	stmdapl	r3!, {r0, r8, r9, sp, lr}
     79c:	01000004 	tsteq	r0, r4
     7a0:	01100051 	tsteq	r0, r1, asr r0
     7a4:	00000326 	andeq	r0, r0, r6, lsr #6
     7a8:	01055c01 	tsteq	r5, r1, lsl #24
     7ac:	00000079 	andeq	r0, r0, r9, ror r0
     7b0:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
     7b4:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
     7b8:	01007d02 	tsteq	r0, r2, lsl #26
     7bc:	00000650 	andeq	r0, r0, r0, asr r6
     7c0:	00023e0d 	andeq	r3, r2, sp, lsl #28
     7c4:	105c0100 	subsne	r0, ip, r0, lsl #2
     7c8:	00000079 	andeq	r0, r0, r9, ror r0
     7cc:	00000335 	andeq	r0, r0, r5, lsr r3
     7d0:	00000331 	andeq	r0, r0, r1, lsr r3
     7d4:	29010c00 	stmdbcs	r1, {sl, fp}
     7d8:	01000002 	tsteq	r0, r2
     7dc:	79011b50 	stmdbvc	r1, {r4, r6, r8, r9, fp, ip}
     7e0:	2c000000 	stccs	0, cr0, [r0], {-0}
     7e4:	48080006 	stmdami	r8, {r1, r2}
     7e8:	56080006 	strpl	r0, [r8], -r6
     7ec:	01000003 	tsteq	r0, r3
     7f0:	000006c9 	andeq	r0, r0, r9, asr #13
     7f4:	00023e0d 	andeq	r3, r2, sp, lsl #28
     7f8:	26500100 	ldrbcs	r0, [r0], -r0, lsl #2
     7fc:	00000079 	andeq	r0, r0, r9, ror r0
     800:	0000037a 	andeq	r0, r0, sl, ror r3
     804:	00000376 	andeq	r0, r0, r6, ror r3
     808:	7274700e 	rsbsvc	r7, r4, #14
     80c:	32500100 	subscc	r0, r0, #0, 2
     810:	00000106 	andeq	r0, r0, r6, lsl #2
     814:	000003a3 	andeq	r0, r0, r3, lsr #7
     818:	0000039b 	muleq	r0, fp, r3
     81c:	6e656c0e 	cdpvs	12, 6, cr6, cr5, cr14, {0}
     820:	3b500100 	blcc	1400c28 <_Min_Heap_Size+0x1400428>
     824:	00000079 	andeq	r0, r0, r9, ror r0
     828:	000003dd 	ldrdeq	r0, [r0], -sp
     82c:	000003d9 	ldrdeq	r0, [r0], -r9
     830:	00037f14 	andeq	r7, r3, r4, lsl pc
     834:	07530100 	ldrbeq	r0, [r3, -r0, lsl #2]
     838:	00000079 	andeq	r0, r0, r9, ror r0
     83c:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     840:	000003fb 	strdeq	r0, [r0], -fp
     844:	00063e0f 	andeq	r3, r6, pc, lsl #28
     848:	00081808 	andeq	r1, r8, r8, lsl #16
     84c:	010c0000 	mrseq	r0, (UNDEF: 12)
     850:	000002dd 	ldrdeq	r0, [r0], -sp
     854:	011b4301 	tsteq	fp, r1, lsl #6
     858:	00000079 	andeq	r0, r0, r9, ror r0
     85c:	0800060c 	stmdaeq	r0, {r2, r3, r9, sl}
     860:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
     864:	0000041e 	andeq	r0, r0, lr, lsl r4
     868:	00074201 	andeq	r4, r7, r1, lsl #4
     86c:	023e0d00 	eorseq	r0, lr, #0, 26
     870:	43010000 	movwmi	r0, #4096	; 0x1000
     874:	00007925 	andeq	r7, r0, r5, lsr #18
     878:	00044200 	andeq	r4, r4, r0, lsl #4
     87c:	00043e00 	andeq	r3, r4, r0, lsl #28
     880:	74700e00 	ldrbtvc	r0, [r0], #-3584	; 0xfffff200
     884:	43010072 	movwmi	r0, #4210	; 0x1072
     888:	00010631 	andeq	r0, r1, r1, lsr r6
     88c:	00046b00 	andeq	r6, r4, r0, lsl #22
     890:	00046300 	andeq	r6, r4, r0, lsl #6
     894:	656c0e00 	strbvs	r0, [ip, #-3584]!	; 0xfffff200
     898:	4301006e 	movwmi	r0, #4206	; 0x106e
     89c:	0000793a 	andeq	r7, r0, sl, lsr r9
     8a0:	0004a500 	andeq	sl, r4, r0, lsl #10
     8a4:	0004a100 	andeq	sl, r4, r0, lsl #2
     8a8:	037f1400 	cmneq	pc, #0, 8
     8ac:	46010000 	strmi	r0, [r1], -r0
     8b0:	00007907 	andeq	r7, r0, r7, lsl #18
     8b4:	0004c700 	andeq	ip, r4, r0, lsl #14
     8b8:	0004c300 	andeq	ip, r4, r0, lsl #6
     8bc:	061a0f00 	ldreq	r0, [sl], -r0, lsl #30
     8c0:	08260800 	stmdaeq	r6!, {fp}
     8c4:	15000000 	strne	r0, [r0, #-0]
     8c8:	00022301 	andeq	r2, r2, r1, lsl #6
     8cc:	063d0100 	ldrteq	r0, [sp], -r0, lsl #2
     8d0:	00000101 	andeq	r0, r0, r1, lsl #2
     8d4:	00000000 	andeq	r0, r0, r0
     8d8:	04e60000 	strbteq	r0, [r6], #0
     8dc:	8a010000 	bhi	408e4 <_Min_Heap_Size+0x400e4>
     8e0:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
     8e4:	00001c13 	andeq	r1, r0, r3, lsl ip
     8e8:	79113d01 	ldmdbvc	r1, {r0, r8, sl, fp, ip, sp}
     8ec:	0a000000 	beq	8f4 <_Min_Heap_Size+0xf4>
     8f0:	06000005 	streq	r0, [r0], -r5
     8f4:	16000005 	strne	r0, [r0], -r5
     8f8:	00000000 	andeq	r0, r0, r0
     8fc:	0000078a 	andeq	r0, r0, sl, lsl #15
     900:	03500117 	cmpeq	r0, #-1073741819	; 0xc0000005
     904:	175001f3 	smmlsrne	r0, r3, r1, r0
     908:	09025101 	stmdbeq	r2, {r0, r8, ip, lr}
     90c:	0c0000ff 	stceq	0, cr0, [r0], {255}	; 0xff
     910:	00024301 	andeq	r4, r2, r1, lsl #6
     914:	05350100 	ldreq	r0, [r5, #-256]!	; 0xffffff00
     918:	00007901 	andeq	r7, r0, r1, lsl #18
	...
     924:	00052b00 	andeq	r2, r5, r0, lsl #22
     928:	07db0100 	ldrbeq	r0, [fp, r0, lsl #2]
     92c:	700e0000 	andvc	r0, lr, r0
     930:	01006469 	tsteq	r0, r9, ror #8
     934:	00790f35 	rsbseq	r0, r9, r5, lsr pc
     938:	054f0000 	strbeq	r0, [pc, #-0]	; 940 <_Min_Heap_Size+0x140>
     93c:	054b0000 	strbeq	r0, [fp, #-0]
     940:	730e0000 	movwvc	r0, #57344	; 0xe000
     944:	01006769 	tsteq	r0, r9, ror #14
     948:	00791835 	rsbseq	r1, r9, r5, lsr r8
     94c:	05740000 	ldrbeq	r0, [r4, #-0]!
     950:	05700000 	ldrbeq	r0, [r0, #-0]!
     954:	000f0000 	andeq	r0, pc, r0
     958:	0a000000 	beq	960 <_Min_Heap_Size+0x160>
     95c:	00000008 	andeq	r0, r0, r8
     960:	038d0118 	orreq	r0, sp, #24, 2
     964:	30010000 	andcc	r0, r1, r0
     968:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
     974:	7d020000 	stcvc	0, cr0, [r2, #-0]
     978:	01190100 	tsteq	r9, r0, lsl #2
     97c:	0000026b 	andeq	r0, r0, fp, ror #4
     980:	00062c01 	andeq	r2, r6, r1, lsl #24
     984:	00000000 	andeq	r0, r0, r0
     988:	02000000 	andeq	r0, r0, #0
     98c:	1a01007d 	bne	40b88 <_Min_Heap_Size+0x40388>
     990:	01010101 	tsteq	r1, r1, lsl #2
     994:	01010000 	mrseq	r0, (UNDEF: 1)
     998:	0f090000 	svceq	0x00090000
     99c:	01011a0d 	tsteq	r1, sp, lsl #20
     9a0:	00000372 	andeq	r0, r0, r2, ror r3
     9a4:	00000372 	andeq	r0, r0, r2, ror r3
     9a8:	1a0c2301 	bne	3095b4 <_Min_Heap_Size+0x308db4>
     9ac:	02e30101 	rsceq	r0, r3, #1073741824	; 0x40000000
     9b0:	02e30000 	rsceq	r0, r3, #0
     9b4:	24010000 	strcs	r0, [r1], #-0
     9b8:	11f1000c 	mvnsne	r0, ip
     9bc:	00020000 	andeq	r0, r2, r0
     9c0:	000002ae 	andeq	r0, r0, lr, lsr #5
     9c4:	01310104 	teqeq	r1, r4, lsl #2
     9c8:	af0c0000 	svcge	0x000c0000
     9cc:	4b000009 	blmi	9f8 <_Min_Heap_Size+0x1f8>
     9d0:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
	...
     9dc:	05000000 	streq	r0, [r0, #-0]
     9e0:	02000006 	andeq	r0, r0, #6
     9e4:	00e00601 	rsceq	r0, r0, r1, lsl #12
     9e8:	ad030000 	stcge	0, cr0, [r3, #-0]
     9ec:	03000000 	movweq	r0, #0
     9f0:	003c182b 	eorseq	r1, ip, fp, lsr #16
     9f4:	01020000 	mrseq	r0, (UNDEF: 2)
     9f8:	0000de08 	andeq	sp, r0, r8, lsl #28
     9fc:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     a00:	00000127 	andeq	r0, r0, r7, lsr #2
     a04:	0009ec03 	andeq	lr, r9, r3, lsl #24
     a08:	19390300 	ldmdbne	r9!, {r8, r9}
     a0c:	00000056 	andeq	r0, r0, r6, asr r0
     a10:	0e070202 	cdpeq	2, 0, cr0, cr7, cr2, {0}
     a14:	02000000 	andeq	r0, r0, #0
     a18:	00050504 	andeq	r0, r5, r4, lsl #10
     a1c:	40030000 	andmi	r0, r3, r0
     a20:	03000000 	movweq	r0, #0
     a24:	0070194f 	rsbseq	r1, r0, pc, asr #18
     a28:	04020000 	streq	r0, [r2], #-0
     a2c:	00009b07 	andeq	r9, r0, r7, lsl #22
     a30:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     a34:	00000000 	andeq	r0, r0, r0
     a38:	96070802 	strls	r0, [r7], -r2, lsl #16
     a3c:	04000000 	streq	r0, [r0], #-0
     a40:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     a44:	85050074 	strhi	r0, [r5, #-116]	; 0xffffff8c
     a48:	02000000 	andeq	r0, r0, #0
     a4c:	00a00704 	adceq	r0, r0, r4, lsl #14
     a50:	af030000 	svcge	0x00030000
     a54:	04000000 	streq	r0, [r0], #-0
     a58:	00301318 	eorseq	r1, r0, r8, lsl r3
     a5c:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
     a60:	06000000 	streq	r0, [r0], -r0
     a64:	00000098 	muleq	r0, r8, r0
     a68:	0009ee03 	andeq	lr, r9, r3, lsl #28
     a6c:	14240400 	strtne	r0, [r4], #-1024	; 0xfffffc00
     a70:	0000004a 	andeq	r0, r0, sl, asr #32
     a74:	0000ae05 	andeq	sl, r0, r5, lsl #28
     a78:	00420300 	subeq	r0, r2, r0, lsl #6
     a7c:	30040000 	andcc	r0, r4, r0
     a80:	00006414 	andeq	r6, r0, r4, lsl r4
     a84:	00bf0500 	adcseq	r0, pc, r0, lsl #10
     a88:	cb060000 	blgt	180a90 <_Min_Heap_Size+0x180290>
     a8c:	07000000 	streq	r0, [r0, -r0]
     a90:	01bd058c 			; <UNDEFINED> instruction: 0x01bd058c
     a94:	00023109 	andeq	r3, r2, r9, lsl #2
     a98:	04c80800 	strbeq	r0, [r8], #2048	; 0x800
     a9c:	bf050000 	svclt	0x00050000
     aa0:	00d01201 	sbcseq	r1, r0, r1, lsl #4
     aa4:	23020000 	movwcs	r0, #8192	; 0x2000
     aa8:	07230800 	streq	r0, [r3, -r0, lsl #16]!
     aac:	c0050000 	andgt	r0, r5, r0
     ab0:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     ab4:	23020000 	movwcs	r0, #8192	; 0x2000
     ab8:	06fd0804 	ldrbteq	r0, [sp], r4, lsl #16
     abc:	c1050000 	mrsgt	r0, (UNDEF: 5)
     ac0:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     ac4:	23020000 	movwcs	r0, #8192	; 0x2000
     ac8:	073c0808 	ldreq	r0, [ip, -r8, lsl #16]!
     acc:	c2050000 	andgt	r0, r5, #0
     ad0:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     ad4:	23020000 	movwcs	r0, #8192	; 0x2000
     ad8:	4353090c 	cmpmi	r3, #12, 18	; 0x30000
     adc:	c3050052 	movwgt	r0, #20562	; 0x5052
     ae0:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     ae4:	23020000 	movwcs	r0, #8192	; 0x2000
     ae8:	43430910 	movtmi	r0, #14608	; 0x3910
     aec:	c4050052 	strgt	r0, [r5], #-82	; 0xffffffae
     af0:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     af4:	23020000 	movwcs	r0, #8192	; 0x2000
     af8:	48530914 	ldmdami	r3, {r2, r4, r8, fp}^
     afc:	c5050050 	strgt	r0, [r5, #-80]	; 0xffffffb0
     b00:	02411201 	subeq	r1, r1, #268435456	; 0x10000000
     b04:	23020000 	movwcs	r0, #8192	; 0x2000
     b08:	09170818 	ldmdbeq	r7, {r3, r4, fp}
     b0c:	c6050000 	strgt	r0, [r5], -r0
     b10:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b14:	23020000 	movwcs	r0, #8192	; 0x2000
     b18:	081a0824 	ldmdaeq	sl, {r2, r5, fp}
     b1c:	c7050000 	strgt	r0, [r5, -r0]
     b20:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b24:	23020000 	movwcs	r0, #8192	; 0x2000
     b28:	0b970828 	bleq	fe5c2bd0 <_estack+0xde5c1998>
     b2c:	c8050000 	stmdagt	r5, {}	; <UNPREDICTABLE>
     b30:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b34:	23020000 	movwcs	r0, #8192	; 0x2000
     b38:	0742082c 	strbeq	r0, [r2, -ip, lsr #16]
     b3c:	c9050000 	stmdbgt	r5, {}	; <UNPREDICTABLE>
     b40:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b44:	23020000 	movwcs	r0, #8192	; 0x2000
     b48:	07600830 			; <UNDEFINED> instruction: 0x07600830
     b4c:	ca050000 	bgt	140b54 <_Min_Heap_Size+0x140354>
     b50:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b54:	23020000 	movwcs	r0, #8192	; 0x2000
     b58:	06630834 			; <UNDEFINED> instruction: 0x06630834
     b5c:	cb050000 	blgt	140b64 <_Min_Heap_Size+0x140364>
     b60:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b64:	23020000 	movwcs	r0, #8192	; 0x2000
     b68:	0a660838 	beq	1982c50 <_Min_Heap_Size+0x1982450>
     b6c:	cc050000 	stcgt	0, cr0, [r5], {-0}
     b70:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     b74:	23020000 	movwcs	r0, #8192	; 0x2000
     b78:	4650093c 			; <UNDEFINED> instruction: 0x4650093c
     b7c:	cd050052 	stcgt	0, cr0, [r5, #-328]	; 0xfffffeb8
     b80:	025b1201 	subseq	r1, fp, #268435456	; 0x10000000
     b84:	23020000 	movwcs	r0, #8192	; 0x2000
     b88:	46440940 	strbmi	r0, [r4], -r0, asr #18
     b8c:	ce050052 	mcrgt	0, 0, r0, cr5, cr2, {2}
     b90:	00d01201 	sbcseq	r1, r0, r1, lsl #4
     b94:	23020000 	movwcs	r0, #8192	; 0x2000
     b98:	44410948 	strbmi	r0, [r1], #-2376	; 0xfffff6b8
     b9c:	cf050052 	svcgt	0x00050052
     ba0:	00d01201 	sbcseq	r1, r0, r1, lsl #4
     ba4:	23020000 	movwcs	r0, #8192	; 0x2000
     ba8:	078f084c 	streq	r0, [pc, ip, asr #16]
     bac:	d0050000 	andle	r0, r5, r0
     bb0:	02751201 	rsbseq	r1, r5, #268435456	; 0x10000000
     bb4:	23020000 	movwcs	r0, #8192	; 0x2000
     bb8:	05150850 	ldreq	r0, [r5, #-2128]	; 0xfffff7b0
     bbc:	d1050000 	mrsle	r0, (UNDEF: 5)
     bc0:	028f1201 	addeq	r1, pc, #268435456	; 0x10000000
     bc4:	23020000 	movwcs	r0, #8192	; 0x2000
     bc8:	08b20860 	ldmeq	r2!, {r5, r6, fp}
     bcc:	d2050000 	andle	r0, r5, #0
     bd0:	02941201 	addseq	r1, r4, #268435456	; 0x10000000
     bd4:	23020000 	movwcs	r0, #8192	; 0x2000
     bd8:	089e0874 	ldmeq	lr, {r2, r4, r5, r6, fp}
     bdc:	d3050000 	movwle	r0, #20480	; 0x5000
     be0:	00cb1201 	sbceq	r1, fp, r1, lsl #4
     be4:	23030000 	movwcs	r0, #12288	; 0x3000
     be8:	0a000188 	beq	1210 <_Min_Heap_Size+0xa10>
     bec:	000000a4 	andeq	r0, r0, r4, lsr #1
     bf0:	00000241 	andeq	r0, r0, r1, asr #4
     bf4:	0000910b 	andeq	r9, r0, fp, lsl #2
     bf8:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
     bfc:	00000231 	andeq	r0, r0, r1, lsr r2
     c00:	0000d00a 	andeq	sp, r0, sl
     c04:	00025600 	andeq	r5, r2, r0, lsl #12
     c08:	00910b00 	addseq	r0, r1, r0, lsl #22
     c0c:	00010000 	andeq	r0, r1, r0
     c10:	00024606 	andeq	r4, r2, r6, lsl #12
     c14:	02560500 	subseq	r0, r6, #0, 10
     c18:	d00a0000 	andle	r0, sl, r0
     c1c:	70000000 	andvc	r0, r0, r0
     c20:	0b000002 	bleq	c30 <_Min_Heap_Size+0x430>
     c24:	00000091 	muleq	r0, r1, r0
     c28:	60060003 	andvs	r0, r6, r3
     c2c:	05000002 	streq	r0, [r0, #-2]
     c30:	00000270 	andeq	r0, r0, r0, ror r2
     c34:	0000d00a 	andeq	sp, r0, sl
     c38:	00028a00 	andeq	r8, r2, r0, lsl #20
     c3c:	00910b00 	addseq	r0, r1, r0, lsl #22
     c40:	00040000 	andeq	r0, r4, r0
     c44:	00027a06 	andeq	r7, r2, r6, lsl #20
     c48:	028a0500 	addeq	r0, sl, #0, 10
     c4c:	bf0a0000 	svclt	0x000a0000
     c50:	a4000000 	strge	r0, [r0], #-0
     c54:	0b000002 	bleq	c64 <_Min_Heap_Size+0x464>
     c58:	00000091 	muleq	r0, r1, r0
     c5c:	930c0004 	movwls	r0, #49156	; 0xc004
     c60:	05000006 	streq	r0, [r0, #-6]
     c64:	d50301d4 	strle	r0, [r3, #-468]	; 0xfffffe2c
     c68:	0a000000 	beq	c70 <_Min_Heap_Size+0x470>
     c6c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     c70:	000002c1 	andeq	r0, r0, r1, asr #5
     c74:	0000910b 	andeq	r9, r0, fp, lsl #2
     c78:	07000100 	streq	r0, [r0, -r0, lsl #2]
     c7c:	01440618 	cmpeq	r4, r8, lsl r6
     c80:	00032b09 	andeq	r2, r3, r9, lsl #22
     c84:	52430900 	subpl	r0, r3, #0, 18
     c88:	01460600 	cmpeq	r6, r0, lsl #12
     c8c:	0000cb11 	andeq	ip, r0, r1, lsl fp
     c90:	00230200 	eoreq	r0, r3, r0, lsl #4
     c94:	000a4c08 	andeq	r4, sl, r8, lsl #24
     c98:	01470600 	cmpeq	r7, r0, lsl #12
     c9c:	0000cb11 	andeq	ip, r0, r1, lsl fp
     ca0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     ca4:	52415009 	subpl	r5, r1, #9
     ca8:	01480600 	cmpeq	r8, r0, lsl #12
     cac:	0000cb11 	andeq	ip, r0, r1, lsl fp
     cb0:	08230200 	stmdaeq	r3!, {r9}
     cb4:	00042a08 	andeq	r2, r4, r8, lsl #20
     cb8:	01490600 	cmpeq	r9, r0, lsl #12
     cbc:	0000cb11 	andeq	ip, r0, r1, lsl fp
     cc0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     cc4:	000a9208 	andeq	r9, sl, r8, lsl #4
     cc8:	014a0600 	cmpeq	sl, r0, lsl #12
     ccc:	0000cb11 	andeq	ip, r0, r1, lsl fp
     cd0:	10230200 	eorne	r0, r3, r0, lsl #4
     cd4:	52434609 	subpl	r4, r3, #9437184	; 0x900000
     cd8:	014b0600 	cmpeq	fp, r0, lsl #12
     cdc:	0000cb11 	andeq	ip, r0, r1, lsl fp
     ce0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     ce4:	0a6b0c00 	beq	1ac3cec <_Min_Heap_Size+0x1ac34ec>
     ce8:	4c060000 	stcmi	0, cr0, [r6], {-0}
     cec:	02c10301 	sbceq	r0, r1, #67108864	; 0x4000000
     cf0:	08070000 	stmdaeq	r7, {}	; <UNPREDICTABLE>
     cf4:	0901ea06 	stmdbeq	r1, {r1, r2, r9, fp, sp, lr, pc}
     cf8:	00000362 	andeq	r0, r0, r2, ror #6
     cfc:	00524309 	subseq	r4, r2, r9, lsl #6
     d00:	1101ec06 	tstne	r1, r6, lsl #24
     d04:	000000cb 	andeq	r0, r0, fp, asr #1
     d08:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
     d0c:	00525343 	subseq	r5, r2, r3, asr #6
     d10:	1101ed06 	tstne	r1, r6, lsl #26
     d14:	000000cb 	andeq	r0, r0, fp, asr #1
     d18:	00042302 	andeq	r2, r4, r2, lsl #6
     d1c:	0005710c 	andeq	r7, r5, ip, lsl #2
     d20:	01ee0600 	mvneq	r0, r0, lsl #12
     d24:	00033803 	andeq	r3, r3, r3, lsl #16
     d28:	06880700 	streq	r0, [r8], r0, lsl #14
     d2c:	5b0901f4 	blpl	241504 <_Min_Heap_Size+0x240d04>
     d30:	09000005 	stmdbeq	r0, {r0, r2}
     d34:	06005243 	streq	r5, [r0], -r3, asr #4
     d38:	cb1101f6 	blgt	441518 <_Min_Heap_Size+0x440d18>
     d3c:	02000000 	andeq	r0, r0, #0
     d40:	49080023 	stmdbmi	r8, {r0, r1, r5}
     d44:	06000006 	streq	r0, [r0], -r6
     d48:	cb1101f7 	blgt	44152c <_Min_Heap_Size+0x440d2c>
     d4c:	02000000 	andeq	r0, r0, #0
     d50:	4c080423 	cfstrsmi	mvf0, [r8], {35}	; 0x23
     d54:	06000006 	streq	r0, [r0], -r6
     d58:	cb1101f8 	blgt	441540 <_Min_Heap_Size+0x440d40>
     d5c:	02000000 	andeq	r0, r0, #0
     d60:	43090823 	movwmi	r0, #38947	; 0x9823
     d64:	06005249 	streq	r5, [r0], -r9, asr #4
     d68:	cb1101f9 	blgt	441554 <_Min_Heap_Size+0x440d54>
     d6c:	02000000 	andeq	r0, r0, #0
     d70:	2d080c23 	stccs	12, cr0, [r8, #-140]	; 0xffffff74
     d74:	06000005 	streq	r0, [r0], -r5
     d78:	cb1101fa 	blgt	441568 <_Min_Heap_Size+0x440d68>
     d7c:	02000000 	andeq	r0, r0, #0
     d80:	0e081023 	cdpeq	0, 0, cr1, cr8, cr3, {1}
     d84:	0600000a 	streq	r0, [r0], -sl
     d88:	cb1101fb 	blgt	44157c <_Min_Heap_Size+0x440d7c>
     d8c:	02000000 	andeq	r0, r0, #0
     d90:	6c081423 	cfstrsvs	mvf1, [r8], {35}	; 0x23
     d94:	06000009 	streq	r0, [r0], -r9
     d98:	cb1101fc 	blgt	441590 <_Min_Heap_Size+0x440d90>
     d9c:	02000000 	andeq	r0, r0, #0
     da0:	b2081823 	andlt	r1, r8, #2293760	; 0x230000
     da4:	06000008 	streq	r0, [r0], -r8
     da8:	bf1101fd 	svclt	0x001101fd
     dac:	02000000 	andeq	r0, r0, #0
     db0:	8f081c23 	svchi	0x00081c23
     db4:	06000008 	streq	r0, [r0], -r8
     db8:	cb1101fe 	blgt	4415b8 <_Min_Heap_Size+0x440db8>
     dbc:	02000000 	andeq	r0, r0, #0
     dc0:	c0082023 	andgt	r2, r8, r3, lsr #32
     dc4:	06000005 	streq	r0, [r0], -r5
     dc8:	cb1101ff 	blgt	4415cc <_Min_Heap_Size+0x440dcc>
     dcc:	02000000 	andeq	r0, r0, #0
     dd0:	bc082423 	cfstrslt	mvf2, [r8], {35}	; 0x23
     dd4:	06000008 	streq	r0, [r0], -r8
     dd8:	b1110200 	tstlt	r1, r0, lsl #4
     ddc:	02000002 	andeq	r0, r0, #2
     de0:	51082823 	tstpl	r8, r3, lsr #16
     de4:	0600000b 	streq	r0, [r0], -fp
     de8:	cb110201 	blgt	4415f4 <_Min_Heap_Size+0x440df4>
     dec:	02000000 	andeq	r0, r0, #0
     df0:	7e083023 	cdpvc	0, 0, cr3, cr8, cr3, {1}
     df4:	0600000a 	streq	r0, [r0], -sl
     df8:	cb110202 	blgt	441608 <_Min_Heap_Size+0x440e08>
     dfc:	02000000 	andeq	r0, r0, #0
     e00:	2a083423 	bcs	20de94 <_Min_Heap_Size+0x20d694>
     e04:	06000008 	streq	r0, [r0], -r8
     e08:	cb110203 	blgt	44161c <_Min_Heap_Size+0x440e1c>
     e0c:	02000000 	andeq	r0, r0, #0
     e10:	c6083823 	strgt	r3, [r8], -r3, lsr #16
     e14:	06000008 	streq	r0, [r0], -r8
     e18:	bf110204 	svclt	0x00110204
     e1c:	02000000 	andeq	r0, r0, #0
     e20:	a7083c23 	strge	r3, [r8, -r3, lsr #24]
     e24:	06000009 	streq	r0, [r0], -r9
     e28:	cb110205 	blgt	441644 <_Min_Heap_Size+0x440e44>
     e2c:	02000000 	andeq	r0, r0, #0
     e30:	64084023 	strvs	r4, [r8], #-35	; 0xffffffdd
     e34:	06000009 	streq	r0, [r0], -r9
     e38:	cb110206 	blgt	441658 <_Min_Heap_Size+0x440e58>
     e3c:	02000000 	andeq	r0, r0, #0
     e40:	d0084423 	andle	r4, r8, r3, lsr #8
     e44:	06000008 	streq	r0, [r0], -r8
     e48:	b1110207 	tstlt	r1, r7, lsl #4
     e4c:	02000002 	andeq	r0, r0, #2
     e50:	f2084823 	vadd.i8	d4, d8, d19
     e54:	06000004 	streq	r0, [r0], -r4
     e58:	cb110208 	blgt	441680 <_Min_Heap_Size+0x440e80>
     e5c:	02000000 	andeq	r0, r0, #0
     e60:	64085023 	strvs	r5, [r8], #-35	; 0xffffffdd
     e64:	06000008 	streq	r0, [r0], -r8
     e68:	cb110209 	blgt	441694 <_Min_Heap_Size+0x440e94>
     e6c:	02000000 	andeq	r0, r0, #0
     e70:	32085423 	andcc	r5, r8, #587202560	; 0x23000000
     e74:	06000009 	streq	r0, [r0], -r9
     e78:	cb11020a 	blgt	4416a8 <_Min_Heap_Size+0x440ea8>
     e7c:	02000000 	andeq	r0, r0, #0
     e80:	da085823 	ble	216f14 <_Min_Heap_Size+0x216714>
     e84:	06000008 	streq	r0, [r0], -r8
     e88:	bf11020b 	svclt	0x0011020b
     e8c:	02000000 	andeq	r0, r0, #0
     e90:	03085c23 	movweq	r5, #35875	; 0x8c23
     e94:	06000004 	streq	r0, [r0], -r4
     e98:	cb11020c 	blgt	4416d0 <_Min_Heap_Size+0x440ed0>
     e9c:	02000000 	andeq	r0, r0, #0
     ea0:	85086023 	strhi	r6, [r8, #-35]	; 0xffffffdd
     ea4:	06000007 	streq	r0, [r0], -r7
     ea8:	cb11020d 	blgt	4416e4 <_Min_Heap_Size+0x440ee4>
     eac:	02000000 	andeq	r0, r0, #0
     eb0:	e4086423 	str	r6, [r8], #-1059	; 0xfffffbdd
     eb4:	06000008 	streq	r0, [r0], -r8
     eb8:	b111020e 	tstlt	r1, lr, lsl #4
     ebc:	02000002 	andeq	r0, r0, #2
     ec0:	ed086823 	stc	8, cr6, [r8, #-140]	; 0xffffff74
     ec4:	0600000a 	streq	r0, [r0], -sl
     ec8:	cb11020f 	blgt	44170c <_Min_Heap_Size+0x440f0c>
     ecc:	02000000 	andeq	r0, r0, #0
     ed0:	43097023 	movwmi	r7, #36899	; 0x9023
     ed4:	06005253 			; <UNDEFINED> instruction: 0x06005253
     ed8:	cb110210 	blgt	441720 <_Min_Heap_Size+0x440f20>
     edc:	02000000 	andeq	r0, r0, #0
     ee0:	ee087423 	cdp	4, 0, cr7, cr8, cr3, {1}
     ee4:	06000008 	streq	r0, [r0], -r8
     ee8:	b1110211 	tstlt	r1, r1, lsl r2
     eec:	02000002 	andeq	r0, r0, #2
     ef0:	bc087823 	stclt	8, cr7, [r8], {35}	; 0x23
     ef4:	0600000a 	streq	r0, [r0], -sl
     ef8:	cb110212 	blgt	441748 <_Min_Heap_Size+0x440f48>
     efc:	03000000 	movweq	r0, #0
     f00:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     f04:	00000718 	andeq	r0, r0, r8, lsl r7
     f08:	11021306 	tstne	r2, r6, lsl #6
     f0c:	000000cb 	andeq	r0, r0, fp, asr #1
     f10:	01842303 	orreq	r2, r4, r3, lsl #6
     f14:	05940c00 	ldreq	r0, [r4, #3072]	; 0xc00
     f18:	14060000 	strne	r0, [r6], #-0
     f1c:	036f0302 	cmneq	pc, #134217728	; 0x8000000
     f20:	1c070000 	stcne	0, cr0, [r7], {-0}
     f24:	09029506 	stmdbeq	r2, {r1, r2, r8, sl, ip, pc}
     f28:	000005e1 	andeq	r0, r0, r1, ror #11
     f2c:	00525309 	subseq	r5, r2, r9, lsl #6
     f30:	11029706 	tstne	r2, r6, lsl #14
     f34:	000000cb 	andeq	r0, r0, fp, asr #1
     f38:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
     f3c:	06005244 	streq	r5, [r0], -r4, asr #4
     f40:	cb110298 	blgt	4419a8 <_Min_Heap_Size+0x4411a8>
     f44:	02000000 	andeq	r0, r0, #0
     f48:	42090423 	andmi	r0, r9, #587202560	; 0x23000000
     f4c:	06005252 			; <UNDEFINED> instruction: 0x06005252
     f50:	cb110299 	blgt	4419bc <_Min_Heap_Size+0x4411bc>
     f54:	02000000 	andeq	r0, r0, #0
     f58:	43090823 	movwmi	r0, #38947	; 0x9823
     f5c:	06003152 			; <UNDEFINED> instruction: 0x06003152
     f60:	cb11029a 	blgt	4419d0 <_Min_Heap_Size+0x4411d0>
     f64:	02000000 	andeq	r0, r0, #0
     f68:	43090c23 	movwmi	r0, #39971	; 0x9c23
     f6c:	06003252 			; <UNDEFINED> instruction: 0x06003252
     f70:	cb11029b 	blgt	4419e4 <_Min_Heap_Size+0x4411e4>
     f74:	02000000 	andeq	r0, r0, #0
     f78:	43091023 	movwmi	r1, #36899	; 0x9023
     f7c:	06003352 			; <UNDEFINED> instruction: 0x06003352
     f80:	cb11029c 	blgt	4419f8 <_Min_Heap_Size+0x4411f8>
     f84:	02000000 	andeq	r0, r0, #0
     f88:	50081423 	andpl	r1, r8, r3, lsr #8
     f8c:	06000005 	streq	r0, [r0], -r5
     f90:	cb11029d 	blgt	441a0c <_Min_Heap_Size+0x44120c>
     f94:	02000000 	andeq	r0, r0, #0
     f98:	0c001823 	stceq	8, cr1, [r0], {35}	; 0x23
     f9c:	00000777 	andeq	r0, r0, r7, ror r7
     fa0:	03029e06 	movweq	r9, #11782	; 0x2e06
     fa4:	00000568 	andeq	r0, r0, r8, ror #10
     fa8:	0f040802 	svceq	0x00040802
     fac:	0d000001 	stceq	0, cr0, [r0, #-4]
     fb0:	003c0107 	eorseq	r0, ip, r7, lsl #2
     fb4:	27070000 	strcs	r0, [r7, -r0]
     fb8:	00061c01 	andeq	r1, r6, r1, lsl #24
     fbc:	06f60e00 	ldrbteq	r0, [r6], r0, lsl #28
     fc0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     fc4:	0000099d 	muleq	r0, sp, r9
     fc8:	0b860e01 	bleq	fe1847d4 <_estack+0xde18359c>
     fcc:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     fd0:	000006d7 	ldrdeq	r0, [r0], -r7
     fd4:	070d0003 	streq	r0, [sp, -r3]
     fd8:	00003c01 	andeq	r3, r0, r1, lsl #24
     fdc:	01320700 	teqeq	r2, r0, lsl #14
     fe0:	00000637 	andeq	r0, r0, r7, lsr r6
     fe4:	000b790e 	andeq	r7, fp, lr, lsl #18
     fe8:	1f0e0000 	svcne	0x000e0000
     fec:	01000008 	tsteq	r0, r8
     ff0:	05840300 	streq	r0, [r4, #768]	; 0x300
     ff4:	35070000 	strcc	r0, [r7, #-0]
     ff8:	00061c03 	andeq	r1, r6, r3, lsl #24
     ffc:	08180f00 	ldmdaeq	r8, {r8, r9, sl, fp}
    1000:	06a7092d 	strteq	r0, [r7], sp, lsr #18
    1004:	5e100000 	cdppl	0, 1, cr0, cr0, cr0, {0}
    1008:	08000004 	stmdaeq	r0, {r2}
    100c:	00bf0c2f 	adcseq	r0, pc, pc, lsr #24
    1010:	23020000 	movwcs	r0, #8192	; 0x2000
    1014:	093c1000 	ldmdbeq	ip!, {ip}
    1018:	32080000 	andcc	r0, r8, #0
    101c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    1020:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1024:	00046710 	andeq	r6, r4, r0, lsl r7
    1028:	0c350800 	ldceq	8, cr0, [r5], #-0
    102c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    1030:	10082302 	andne	r2, r8, r2, lsl #6
    1034:	0000046c 	andeq	r0, r0, ip, ror #8
    1038:	bf0c3808 	svclt	0x000c3808
    103c:	02000000 	andeq	r0, r0, #0
    1040:	71100c23 	tstvc	r0, r3, lsr #24
    1044:	08000004 	stmdaeq	r0, {r2}
    1048:	00bf0c3c 	adcseq	r0, pc, ip, lsr ip	; <UNPREDICTABLE>
    104c:	23020000 	movwcs	r0, #8192	; 0x2000
    1050:	04761010 	ldrbteq	r1, [r6], #-16
    1054:	3f080000 	svccc	0x00080000
    1058:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    105c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1060:	0b340300 	bleq	d01c68 <_Min_Heap_Size+0xd01468>
    1064:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    1068:	00064302 	andeq	r4, r6, r2, lsl #6
    106c:	09300f00 	ldmdbeq	r0!, {r8, r9, sl, fp}
    1070:	07260931 			; <UNDEFINED> instruction: 0x07260931
    1074:	51100000 	tstpl	r0, r0
    1078:	09000007 	stmdbeq	r0, {r0, r1, r2}
    107c:	00bf0c33 	adcseq	r0, pc, r3, lsr ip	; <UNPREDICTABLE>
    1080:	23020000 	movwcs	r0, #8192	; 0x2000
    1084:	06b51000 	ldrteq	r1, [r5], r0
    1088:	36090000 	strcc	r0, [r9], -r0
    108c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    1090:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1094:	0004ad10 	andeq	sl, r4, r0, lsl sp
    1098:	0c390900 			; <UNDEFINED> instruction: 0x0c390900
    109c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    10a0:	10082302 	andne	r2, r8, r2, lsl #6
    10a4:	00000608 	andeq	r0, r0, r8, lsl #12
    10a8:	bf0c3c09 	svclt	0x000c3c09
    10ac:	02000000 	andeq	r0, r0, #0
    10b0:	27100c23 	ldrcs	r0, [r0, -r3, lsr #24]
    10b4:	09000006 	stmdbeq	r0, {r1, r2}
    10b8:	00bf0c3f 	adcseq	r0, pc, pc, lsr ip	; <UNPREDICTABLE>
    10bc:	23020000 	movwcs	r0, #8192	; 0x2000
    10c0:	05d31010 	ldrbeq	r1, [r3, #16]
    10c4:	42090000 	andmi	r0, r9, #0
    10c8:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    10cc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    10d0:	4c4c5011 	mcrrmi	0, 1, r5, ip, cr1
    10d4:	16450900 	strbne	r0, [r5], -r0, lsl #18
    10d8:	000006a7 	andeq	r0, r0, r7, lsr #13
    10dc:	00182302 	andseq	r2, r8, r2, lsl #6
    10e0:	00051a03 	andeq	r1, r5, r3, lsl #20
    10e4:	02460900 	subeq	r0, r6, #0, 18
    10e8:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    10ec:	4b09140f 	blmi	246130 <_Min_Heap_Size+0x245930>
    10f0:	00078709 	andeq	r8, r7, r9, lsl #14
    10f4:	0b471000 	bleq	11c50fc <_Min_Heap_Size+0x11c48fc>
    10f8:	4d090000 	stcmi	0, cr0, [r9, #-0]
    10fc:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    1100:	00230200 	eoreq	r0, r3, r0, lsl #4
    1104:	000bda10 	andeq	sp, fp, r0, lsl sl
    1108:	0c500900 	mrrceq	9, 0, r0, r0, cr0	; <UNPREDICTABLE>
    110c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    1110:	10042302 	andne	r2, r4, r2, lsl #6
    1114:	00000794 	muleq	r0, r4, r7
    1118:	bf0c5309 	svclt	0x000c5309
    111c:	02000000 	andeq	r0, r0, #0
    1120:	3f100823 	svccc	0x00100823
    1124:	09000004 	stmdbeq	r0, {r2}
    1128:	00bf0c56 	adcseq	r0, pc, r6, asr ip	; <UNPREDICTABLE>
    112c:	23020000 	movwcs	r0, #8192	; 0x2000
    1130:	0a2a100c 	beq	a85168 <_Min_Heap_Size+0xa84968>
    1134:	59090000 	stmdbpl	r9, {}	; <UNPREDICTABLE>
    1138:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    113c:	10230200 	eorne	r0, r3, r0, lsl #4
    1140:	08750300 	ldmdaeq	r5!, {r8, r9}^
    1144:	5c090000 	stcpl	0, cr0, [r9], {-0}
    1148:	00073202 	andeq	r3, r7, r2, lsl #4
    114c:	0a300f00 	beq	c04d54 <_Min_Heap_Size+0xc04554>
    1150:	08510930 	ldmdaeq	r1, {r4, r5, r8, fp}^
    1154:	0f100000 	svceq	0x00100000
    1158:	0a000009 	beq	1184 <_Min_Heap_Size+0x984>
    115c:	00bf0c32 	adcseq	r0, pc, r2, lsr ip	; <UNPREDICTABLE>
    1160:	23020000 	movwcs	r0, #8192	; 0x2000
    1164:	06891000 	streq	r1, [r9], r0
    1168:	350a0000 	strcc	r0, [sl, #-0]
    116c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    1170:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1174:	0005c910 	andeq	ip, r5, r0, lsl r9
    1178:	0c390a00 			; <UNDEFINED> instruction: 0x0c390a00
    117c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    1180:	10082302 	andne	r2, r8, r2, lsl #6
    1184:	00000a17 	andeq	r0, r0, r7, lsl sl
    1188:	bf0c3c0a 	svclt	0x000c3c0a
    118c:	02000000 	andeq	r0, r0, #0
    1190:	97100c23 	ldrls	r0, [r0, -r3, lsr #24]
    1194:	0a00000a 	beq	11c4 <_Min_Heap_Size+0x9c4>
    1198:	00bf0c3f 	adcseq	r0, pc, pc, lsr ip	; <UNPREDICTABLE>
    119c:	23020000 	movwcs	r0, #8192	; 0x2000
    11a0:	07661010 			; <UNDEFINED> instruction: 0x07661010
    11a4:	420a0000 	andmi	r0, sl, #0
    11a8:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    11ac:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    11b0:	00098d10 	andeq	r8, r9, r0, lsl sp
    11b4:	0c450a00 	mcrreq	10, 0, r0, r5, cr0
    11b8:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    11bc:	10182302 	andsne	r2, r8, r2, lsl #6
    11c0:	00002217 	andeq	r2, r0, r7, lsl r2
    11c4:	bf0c4a0a 	svclt	0x000c4a0a
    11c8:	02000000 	andeq	r0, r0, #0
    11cc:	89101c23 	ldmdbhi	r0, {r0, r1, r5, sl, fp, ip}
    11d0:	0a000009 	beq	11fc <_Min_Heap_Size+0x9fc>
    11d4:	00bf0c4d 	adcseq	r0, pc, sp, asr #24
    11d8:	23020000 	movwcs	r0, #8192	; 0x2000
    11dc:	09c21020 	stmibeq	r2, {r5, ip}^
    11e0:	520a0000 	andpl	r0, sl, #0
    11e4:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    11e8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    11ec:	0005dc10 	andeq	sp, r5, r0, lsl ip
    11f0:	0c550a00 	mrrceq	10, 0, r0, r5, cr0
    11f4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    11f8:	10282302 	eorne	r2, r8, r2, lsl #6
    11fc:	00000a1e 	andeq	r0, r0, lr, lsl sl
    1200:	bf0c5b0a 	svclt	0x000c5b0a
    1204:	02000000 	andeq	r0, r0, #0
    1208:	03002c23 	movweq	r2, #3107	; 0xc23
    120c:	0000042f 	andeq	r0, r0, pc, lsr #8
    1210:	9302600a 	movwls	r6, #8202	; 0x200a
    1214:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    1218:	003c0107 	eorseq	r0, ip, r7, lsl #2
    121c:	670a0000 	strvs	r0, [sl, -r0]
    1220:	00089001 	andeq	r9, r8, r1
    1224:	06be0e00 	ldrteq	r0, [lr], r0, lsl #28
    1228:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    122c:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    1230:	07cd0e01 	strbeq	r0, [sp, r1, lsl #28]
    1234:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    1238:	00000b13 	andeq	r0, r0, r3, lsl fp
    123c:	05f40e03 	ldrbeq	r0, [r4, #3587]!	; 0xe03
    1240:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1244:	00000728 	andeq	r0, r0, r8, lsr #14
    1248:	1d030005 	stcne	0, cr0, [r3, #-20]	; 0xffffffec
    124c:	0a000009 	beq	1278 <_Min_Heap_Size+0xa78>
    1250:	085d026e 	ldmdaeq	sp, {r1, r2, r3, r5, r6, r9}^
    1254:	90050000 	andls	r0, r5, r0
    1258:	12000008 	andne	r0, r0, #8
    125c:	00000975 	andeq	r0, r0, r5, ror r9
    1260:	108a0a60 	addne	r0, sl, r0, ror #20
    1264:	00000981 	andeq	r0, r0, r1, lsl #19
    1268:	00083210 	andeq	r3, r8, r0, lsl r2
    126c:	1f8c0a00 	svcne	0x008c0a00
    1270:	00000981 	andeq	r0, r0, r1, lsl #19
    1274:	10002302 	andne	r2, r0, r2, lsl #6
    1278:	00001cf9 	strdeq	r1, [r0], -r9
    127c:	511e8e0a 	tstpl	lr, sl, lsl #28
    1280:	02000008 	andeq	r0, r0, #8
    1284:	6f100423 	svcvs	0x00100423
    1288:	0a000006 	beq	12a8 <_Min_Heap_Size+0xaa8>
    128c:	06371e90 			; <UNDEFINED> instruction: 0x06371e90
    1290:	23020000 	movwcs	r0, #8192	; 0x2000
    1294:	06b81034 			; <UNDEFINED> instruction: 0x06b81034
    1298:	920a0000 	andls	r0, sl, #0
    129c:	00089c1e 	andeq	r9, r8, lr, lsl ip
    12a0:	35230200 	strcc	r0, [r3, #-512]!	; 0xfffffe00
    12a4:	00066810 	andeq	r6, r6, r0, lsl r8
    12a8:	1f940a00 	svcne	0x00940a00
    12ac:	00000987 	andeq	r0, r0, r7, lsl #19
    12b0:	10382302 	eorsne	r2, r8, r2, lsl #6
    12b4:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    12b8:	9b21960a 	blls	866ae8 <_Min_Heap_Size+0x8662e8>
    12bc:	02000009 	andeq	r0, r0, #9
    12c0:	a0103c23 	andsge	r3, r0, r3, lsr #24
    12c4:	0a000005 	beq	12e0 <_Min_Heap_Size+0xae0>
    12c8:	099b2198 	ldmibeq	fp, {r3, r4, r7, r8, sp}
    12cc:	23020000 	movwcs	r0, #8192	; 0x2000
    12d0:	055e1040 	ldrbeq	r1, [lr, #-64]	; 0xffffffc0
    12d4:	9a0a0000 	bls	2812dc <_Min_Heap_Size+0x280adc>
    12d8:	00099b21 	andeq	r9, r9, r1, lsr #22
    12dc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    12e0:	0008f810 	andeq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
    12e4:	219c0a00 	orrscs	r0, ip, r0, lsl #20
    12e8:	0000099b 	muleq	r0, fp, r9
    12ec:	10482302 	subne	r2, r8, r2, lsl #6
    12f0:	0000083b 	andeq	r0, r0, fp, lsr r8
    12f4:	9b219e0a 	blls	868b24 <_Min_Heap_Size+0x868324>
    12f8:	02000009 	andeq	r0, r0, #9
    12fc:	aa104c23 	bge	414390 <_Min_Heap_Size+0x413b90>
    1300:	0a00000b 	beq	1334 <_Min_Heap_Size+0xb34>
    1304:	099b21a0 	ldmibeq	fp, {r5, r7, r8, sp}
    1308:	23020000 	movwcs	r0, #8192	; 0x2000
    130c:	07471050 	smlsldeq	r1, r7, r0, r0
    1310:	a20a0000 	andge	r0, sl, #0
    1314:	0000cb1e 	andeq	ip, r0, lr, lsl fp
    1318:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    131c:	00065110 	andeq	r5, r6, r0, lsl r1
    1320:	1ea40a00 	vfmane.f32	s0, s8, s0
    1324:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    1328:	10582302 	subsne	r2, r8, r2, lsl #6
    132c:	000006ea 	andeq	r0, r0, sl, ror #13
    1330:	bf1ea60a 	svclt	0x001ea60a
    1334:	02000000 	andeq	r0, r0, #0
    1338:	13005c23 	movwne	r5, #3107	; 0xc23
    133c:	00032b04 	andeq	r2, r3, r4, lsl #22
    1340:	15041400 	strne	r1, [r4, #-1024]	; 0xfffffc00
    1344:	00099501 	andeq	r9, r9, r1, lsl #10
    1348:	09951600 	ldmibeq	r5, {r9, sl, ip}
    134c:	13000000 	movwne	r0, #0
    1350:	0008a104 	andeq	sl, r8, r4, lsl #2
    1354:	89041300 	stmdbhi	r4, {r8, r9, ip}
    1358:	03000009 	movweq	r0, #9
    135c:	00000977 	andeq	r0, r0, r7, ror r9
    1360:	a102a80a 	tstge	r2, sl, lsl #16
    1364:	0f000008 	svceq	0x00000008
    1368:	092e0b1c 	stmdbeq	lr!, {r2, r3, r4, r8, r9, fp}
    136c:	00000a20 	andeq	r0, r0, r0, lsr #20
    1370:	00055510 	andeq	r5, r5, r0, lsl r5
    1374:	0c300b00 			; <UNDEFINED> instruction: 0x0c300b00
    1378:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    137c:	10002302 	andne	r2, r0, r2, lsl #6
    1380:	00000992 	muleq	r0, r2, r9
    1384:	bf0c360b 	svclt	0x000c360b
    1388:	02000000 	andeq	r0, r0, #0
    138c:	40100423 	andsmi	r0, r0, r3, lsr #8
    1390:	0b000006 	bleq	13b0 <_Min_Heap_Size+0xbb0>
    1394:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
    1398:	23020000 	movwcs	r0, #8192	; 0x2000
    139c:	08881008 	stmeq	r8, {r3, ip}
    13a0:	3c0b0000 	stccc	0, cr0, [fp], {-0}
    13a4:	0000bf0c 	andeq	fp, r0, ip, lsl #30
    13a8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    13ac:	00098d10 	andeq	r8, r9, r0, lsl sp
    13b0:	0c430b00 	mcrreq	11, 0, r0, r3, cr0
    13b4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
    13b8:	10102302 	andsne	r2, r0, r2, lsl #6
    13bc:	00000b09 	andeq	r0, r0, r9, lsl #22
    13c0:	bf0c460b 	svclt	0x000c460b
    13c4:	02000000 	andeq	r0, r0, #0
    13c8:	fc101423 	ldc2	4, cr1, [r0], {35}	; 0x23
    13cc:	0b000004 	bleq	13e4 <_Min_Heap_Size+0xbe4>
    13d0:	00bf0c49 	adcseq	r0, pc, r9, asr #24
    13d4:	23020000 	movwcs	r0, #8192	; 0x2000
    13d8:	ab030018 	blge	c1440 <_Min_Heap_Size+0xc0c40>
    13dc:	0b00000a 	bleq	140c <_Min_Heap_Size+0xc0c>
    13e0:	09ad034b 	stmibeq	sp!, {r0, r1, r3, r6, r8, r9}
    13e4:	070d0000 	streq	r0, [sp, -r0]
    13e8:	00003c01 	andeq	r3, r0, r1, lsl #24
    13ec:	01750b00 	cmneq	r5, r0, lsl #22
    13f0:	00000a6b 	andeq	r0, r0, fp, ror #20
    13f4:	000a510e 	andeq	r5, sl, lr, lsl #2
    13f8:	740e0000 	strvc	r0, [lr], #-0
    13fc:	20000006 	andcs	r0, r0, r6
    1400:	000b650e 	andeq	r6, fp, lr, lsl #10
    1404:	4d0e2400 	cfstrsmi	mvf2, [lr, #-0]
    1408:	21000008 	tstcs	r0, r8
    140c:	0009f70e 	andeq	pc, r9, lr, lsl #14
    1410:	360e2200 	strcc	r2, [lr], -r0, lsl #4
    1414:	23000005 	movwcs	r0, #5
    1418:	000af20e 	andeq	pc, sl, lr, lsl #4
    141c:	4f0ea000 	svcmi	0x000ea000
    1420:	e0000009 	and	r0, r0, r9
    1424:	040d0300 	streq	r0, [sp], #-768	; 0xfffffd00
    1428:	870b0000 	strhi	r0, [fp, -r0]
    142c:	000a2c03 	andeq	r2, sl, r3, lsl #24
    1430:	0a6b0500 	beq	1ac2838 <_Min_Heap_Size+0x1ac2038>
    1434:	c2030000 	andgt	r0, r3, #0
    1438:	0b00000a 	bleq	1468 <_Min_Heap_Size+0xc68>
    143c:	00bf1290 	umlalseq	r1, pc, r0, r2	; <UNPREDICTABLE>
    1440:	7c050000 	stcvc	0, cr0, [r5], {-0}
    1444:	0300000a 	movweq	r0, #10
    1448:	00000491 	muleq	r0, r1, r4
    144c:	bf129b0b 	svclt	0x00129b0b
    1450:	05000000 	streq	r0, [r0, #-0]
    1454:	00000a8d 	andeq	r0, r0, sp, lsl #21
    1458:	0007f712 	andeq	pc, r7, r2, lsl r7	; <UNPREDICTABLE>
    145c:	a00b4800 	andge	r4, fp, r0, lsl #16
    1460:	000b9c10 	andeq	r9, fp, r0, lsl ip
    1464:	08321000 	ldmdaeq	r2!, {ip}
    1468:	a20b0000 	andge	r0, fp, #0
    146c:	000b9c22 	andeq	r9, fp, r2, lsr #24
    1470:	00230200 	eoreq	r0, r3, r0, lsl #4
    1474:	001cf910 	andseq	pc, ip, r0, lsl r9	; <UNPREDICTABLE>
    1478:	21a40b00 			; <UNDEFINED> instruction: 0x21a40b00
    147c:	00000a20 	andeq	r0, r0, r0, lsr #20
    1480:	10042302 	andne	r2, r4, r2, lsl #6
    1484:	000005b5 			; <UNDEFINED> instruction: 0x000005b5
    1488:	a222a60b 	eorge	sl, r2, #11534336	; 0xb00000
    148c:	0200000b 	andeq	r0, r0, #11
    1490:	0d102023 	ldceq	0, cr2, [r0, #-140]	; 0xffffff74
    1494:	0b000007 	bleq	14b8 <_Min_Heap_Size+0xcb8>
    1498:	00ae21a8 	adceq	r2, lr, r8, lsr #3
    149c:	23020000 	movwcs	r0, #8192	; 0x2000
    14a0:	05091024 	streq	r1, [r9, #-36]	; 0xffffffdc
    14a4:	aa0b0000 	bge	2c14ac <_Min_Heap_Size+0x2c0cac>
    14a8:	0000ba21 	andeq	fp, r0, r1, lsr #20
    14ac:	26230200 	strtcs	r0, [r3], -r0, lsl #4
    14b0:	000b2910 	andeq	r2, fp, r0, lsl r9
    14b4:	22ac0b00 	adccs	r0, ip, #0, 22
    14b8:	00000ba8 	andeq	r0, r0, r8, lsr #23
    14bc:	10282302 	eorne	r2, r8, r2, lsl #6
    14c0:	00000702 	andeq	r0, r0, r2, lsl #14
    14c4:	ae21ae0b 	cdpge	14, 2, cr10, cr1, cr11, {0}
    14c8:	02000000 	andeq	r0, r0, #0
    14cc:	59102c23 	ldmdbpl	r0, {r0, r1, r5, sl, fp, sp}
    14d0:	0b00000b 	bleq	1504 <_Min_Heap_Size+0xd04>
    14d4:	00ba21b0 	ldrhteq	r2, [sl], r0
    14d8:	23020000 	movwcs	r0, #8192	; 0x2000
    14dc:	0b9c102e 	bleq	fe70559c <_estack+0xde704364>
    14e0:	b20b0000 	andlt	r0, fp, #0
    14e4:	000a881f 	andeq	r8, sl, pc, lsl r8
    14e8:	30230200 	eorcc	r0, r3, r0, lsl #4
    14ec:	00130e10 	andseq	r0, r3, r0, lsl lr
    14f0:	24b40b00 	ldrtcs	r0, [r4], #2816	; 0xb00
    14f4:	00000a99 	muleq	r0, r9, sl
    14f8:	10342302 	eorsne	r2, r4, r2, lsl #6
    14fc:	0000086e 	andeq	r0, r0, lr, ror #16
    1500:	ae22b60b 	cfmadda32ge	mvax0, mvax11, mvfx2, mvfx11
    1504:	0200000b 	andeq	r0, r0, #11
    1508:	9c103823 	ldcls	8, cr3, [r0], {35}	; 0x23
    150c:	0b000006 	bleq	152c <_Min_Heap_Size+0xd2c>
    1510:	0bae22b8 	bleq	feb89ff8 <_estack+0xdeb88dc0>
    1514:	23020000 	movwcs	r0, #8192	; 0x2000
    1518:	066f103c 			; <UNDEFINED> instruction: 0x066f103c
    151c:	ba0b0000 	blt	2c1524 <_Min_Heap_Size+0x2c0d24>
    1520:	00063721 	andeq	r3, r6, r1, lsr #14
    1524:	40230200 	eormi	r0, r3, r0, lsl #4
    1528:	00042310 	andeq	r2, r4, r0, lsl r3
    152c:	21bc0b00 			; <UNDEFINED> instruction: 0x21bc0b00
    1530:	00000a77 	andeq	r0, r0, r7, ror sl
    1534:	10412302 	subne	r2, r1, r2, lsl #6
    1538:	00000b8f 	andeq	r0, r0, pc, lsl #23
    153c:	7721c00b 	strvc	ip, [r1, -fp]!
    1540:	0200000a 	andeq	r0, r0, #10
    1544:	47104223 	ldrmi	r4, [r0, -r3, lsr #4]
    1548:	0b000007 	bleq	156c <_Min_Heap_Size+0xd6c>
    154c:	00cb21c3 	sbceq	r2, fp, r3, asr #3
    1550:	23020000 	movwcs	r0, #8192	; 0x2000
    1554:	04130044 	ldreq	r0, [r3], #-68	; 0xffffffbc
    1558:	000005e1 	andeq	r0, r0, r1, ror #11
    155c:	00a90413 	adceq	r0, r9, r3, lsl r4
    1560:	04130000 	ldreq	r0, [r3], #-0
    1564:	00000098 	muleq	r0, r8, r0
    1568:	09a10413 	stmibeq	r1!, {r0, r1, r4, sl}
    156c:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    1570:	0b000007 	bleq	1594 <_Min_Heap_Size+0xd94>
    1574:	0a9e03d5 	beq	fe7824d0 <_estack+0xde781298>
    1578:	e3170000 	tst	r7, #0
    157c:	0c000006 	stceq	0, cr0, [r0], {6}
    1580:	0bb41b23 	bleq	fed08214 <_estack+0xded06fdc>
    1584:	01010000 	mrseq	r0, (UNDEF: 1)
    1588:	e7080102 	str	r0, [r8, -r2, lsl #2]
    158c:	06000000 	streq	r0, [r0], -r0
    1590:	00000bce 	andeq	r0, r0, lr, asr #23
    1594:	080c0118 	stmdaeq	ip, {r3, r4, r8}
    1598:	0c010000 	stceq	0, cr0, [r1], {-0}
    159c:	a0010601 	andge	r0, r1, r1, lsl #12
    15a0:	b4080007 	strlt	r0, [r8], #-7
    15a4:	95080007 	strls	r0, [r8, #-7]
    15a8:	01000005 	tsteq	r0, r5
    15ac:	00000c4d 	andeq	r0, r0, sp, asr #24
    15b0:	00023e19 	andeq	r3, r2, r9, lsl lr
    15b4:	010c0100 	mrseq	r0, (UNDEF: 28)
    15b8:	000ba81d 	andeq	sl, fp, sp, lsl r8
    15bc:	0005b900 	andeq	fp, r5, r0, lsl #18
    15c0:	0005b500 	andeq	fp, r5, r0, lsl #10
    15c4:	06d21900 	ldrbeq	r1, [r2], r0, lsl #18
    15c8:	0c010000 	stceq	0, cr0, [r1], {-0}
    15cc:	00bf2c01 	adcseq	r2, pc, r1, lsl #24
    15d0:	05de0000 	ldrbeq	r0, [lr]
    15d4:	05da0000 	ldrbeq	r0, [sl]
    15d8:	461a0000 	ldrmi	r0, [sl], -r0
    15dc:	5d000009 	stcpl	0, cr0, [r0, #-36]	; 0xffffffdc
    15e0:	0100000c 	tsteq	r0, ip
    15e4:	2c080305 	stccs	3, cr0, [r8], {5}
    15e8:	aa1b0800 	bge	6c35f0 <_Min_Heap_Size+0x6c2df0>
    15ec:	59080007 	stmdbpl	r8, {r0, r1, r2}
    15f0:	1c000011 	stcne	0, cr0, [r0], {17}
    15f4:	03055001 	movweq	r5, #20481	; 0x5001
    15f8:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}
    15fc:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
    1600:	002c0803 	eoreq	r0, ip, r3, lsl #16
    1604:	0a000008 	beq	162c <_Min_Heap_Size+0xe2c>
    1608:	00000bd5 	ldrdeq	r0, [r0], -r5
    160c:	00000c5d 	andeq	r0, r0, sp, asr ip
    1610:	0000910b 	andeq	r9, r0, fp, lsl #2
    1614:	06000d00 	streq	r0, [r0], -r0, lsl #26
    1618:	00000c4d 	andeq	r0, r0, sp, asr #24
    161c:	07a2011d 			; <UNDEFINED> instruction: 0x07a2011d
    1620:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    1624:	07880106 	streq	r0, [r8, r6, lsl #2]
    1628:	07a00800 	streq	r0, [r0, r0, lsl #16]!
    162c:	05ff0800 	ldrbeq	r0, [pc, #2048]!	; 1e34 <_Min_Heap_Size+0x1634>
    1630:	bf010000 	svclt	0x00010000
    1634:	1a00000c 	bne	166c <_Min_Heap_Size+0xe6c>
    1638:	00000946 	andeq	r0, r0, r6, asr #18
    163c:	00000c5d 	andeq	r0, r0, sp, asr ip
    1640:	18030501 	stmdane	r3, {r0, r8, sl}
    1644:	1e08002c 	cdpne	0, 0, cr0, cr8, cr12, {1}
    1648:	0000114e 	andeq	r1, r0, lr, asr #2
    164c:	08000792 	stmdaeq	r0, {r1, r4, r7, r8, r9, sl}
    1650:	00079201 	andeq	r9, r7, r1, lsl #4
    1654:	00079408 	andeq	r9, r7, r8, lsl #8
    1658:	03fd0108 	mvnseq	r0, #8, 2
    165c:	0007921b 	andeq	r9, r7, fp, lsl r2
    1660:	00115908 	andseq	r5, r1, r8, lsl #18
    1664:	50011c00 	andpl	r1, r1, r0, lsl #24
    1668:	2be80305 	blcs	ffa02284 <_estack+0xdfa0104c>
    166c:	011c0800 	tsteq	ip, r0, lsl #16
    1670:	18030551 	stmdane	r3, {r0, r4, r6, r8, sl}
    1674:	0008002c 	andeq	r0, r8, ip, lsr #32
    1678:	39011d00 	stmdbcc	r1, {r8, sl, fp, ip}
    167c:	0100000a 	tsteq	r0, sl
    1680:	000106c6 	andeq	r0, r1, r6, asr #13
    1684:	00000000 	andeq	r0, r0, r0
    1688:	1f000000 	svcne	0x00000000
    168c:	01000006 	tsteq	r0, r6
    1690:	00000d95 	muleq	r0, r5, sp
    1694:	0004b61f 	andeq	fp, r4, pc, lsl r6
    1698:	16c80100 	strbne	r0, [r8], r0, lsl #2
    169c:	00000726 	andeq	r0, r0, r6, lsr #14
    16a0:	1f489102 	svcne	0x00489102
    16a4:	000006a3 	andeq	r0, r0, r3, lsr #13
    16a8:	8716c901 	ldrhi	ip, [r6, -r1, lsl #18]
    16ac:	03000007 	movweq	r0, #7
    16b0:	207fb491 			; <UNDEFINED> instruction: 0x207fb491
	...
    16bc:	00000d17 	andeq	r0, r0, r7, lsl sp
    16c0:	00057d1f 	andeq	r7, r5, pc, lsl sp
    16c4:	03cd0100 	biceq	r0, sp, #0, 2
    16c8:	000000cb 	andeq	r0, r0, fp, asr #1
    16cc:	7fac9103 	svcvc	0x00ac9103
    16d0:	00002000 	andeq	r2, r0, r0
    16d4:	00000000 	andeq	r0, r0, r0
    16d8:	0d350000 	ldceq	0, cr0, [r5, #-0]
    16dc:	7d1f0000 	ldcvc	0, cr0, [pc, #-0]	; 16e4 <_Min_Heap_Size+0xee4>
    16e0:	01000005 	tsteq	r0, r5
    16e4:	00cb03ce 	sbceq	r0, fp, lr, asr #7
    16e8:	91030000 	mrsls	r0, (UNDEF: 3)
    16ec:	21007fb0 			; <UNDEFINED> instruction: 0x21007fb0
    16f0:	00000000 	andeq	r0, r0, r0
    16f4:	00001167 	andeq	r1, r0, r7, ror #2
    16f8:	00000d54 	andeq	r0, r0, r4, asr sp
    16fc:	0250011c 	subseq	r0, r0, #28, 2
    1700:	011c4891 			; <UNDEFINED> instruction: 0x011c4891
    1704:	1c300151 	ldfnes	f0, [r0], #-324	; 0xfffffebc
    1708:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
    170c:	00210030 	eoreq	r0, r1, r0, lsr r0
    1710:	74000000 	strvc	r0, [r0], #-0
    1714:	68000011 	stmdavs	r0, {r0, r4}
    1718:	1c00000d 	stcne	0, cr0, [r0], {13}
    171c:	91025001 	tstls	r2, r1
    1720:	00210048 	eoreq	r0, r1, r8, asr #32
    1724:	83000000 	movwhi	r0, #0
    1728:	82000011 	andhi	r0, r0, #17
    172c:	1c00000d 	stcne	0, cr0, [r0], {13}
    1730:	91035001 	tstls	r3, r1
    1734:	011c7fb4 			; <UNDEFINED> instruction: 0x011c7fb4
    1738:	00350151 	eorseq	r0, r5, r1, asr r1
    173c:	00000022 	andeq	r0, r0, r2, lsr #32
    1740:	000c6200 	andeq	r6, ip, r0, lsl #4
    1744:	00002200 	andeq	r2, r0, r0, lsl #4
    1748:	0c620000 	stcleq	0, cr0, [r2], #-0
    174c:	23000000 	movwcs	r0, #0
    1750:	00063b01 	andeq	r3, r6, r1, lsl #22
    1754:	05960100 	ldreq	r0, [r6, #256]	; 0x100
    1758:	00008501 	andeq	r8, r0, r1, lsl #10
    175c:	00075c00 	andeq	r5, r7, r0, lsl #24
    1760:	00078808 	andeq	r8, r7, r8, lsl #16
    1764:	00066508 	andeq	r6, r6, r8, lsl #10
    1768:	0e0a0100 	adfeqe	f0, f2, f0
    176c:	62220000 	eorvs	r0, r2, #0
    1770:	92080007 	andls	r0, r8, #7
    1774:	22000011 	andcs	r0, r0, #17
    1778:	08000766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl}
    177c:	000011a0 	andeq	r1, r0, r0, lsr #3
    1780:	00076a22 	andeq	r6, r7, r2, lsr #20
    1784:	0011ae08 	andseq	sl, r1, r8, lsl #28
    1788:	076e2200 	strbeq	r2, [lr, -r0, lsl #4]!
    178c:	11bc0800 			; <UNDEFINED> instruction: 0x11bc0800
    1790:	72220000 	eorvc	r0, r2, #0
    1794:	0a080007 	beq	2017b8 <_Min_Heap_Size+0x200fb8>
    1798:	2100000e 	tstcs	r0, lr
    179c:	08000778 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl}
    17a0:	000011ca 	andeq	r1, r0, sl, asr #3
    17a4:	00000df8 	strdeq	r0, [r0], -r8
    17a8:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
    17ac:	002bf803 	eoreq	pc, fp, r3, lsl #16
    17b0:	801b0008 	andshi	r0, fp, r8
    17b4:	d7080007 	strle	r0, [r8, -r7]
    17b8:	1c000011 	stcne	0, cr0, [r0], {17}
    17bc:	0a035001 	beq	d57c8 <_Min_Heap_Size+0xd4fc8>
    17c0:	000003e8 	andeq	r0, r0, r8, ror #7
    17c4:	04da011d 	ldrbeq	r0, [sl], #285	; 0x11d
    17c8:	8b010000 	blhi	417d0 <_Min_Heap_Size+0x40fd0>
    17cc:	07440106 	strbeq	r0, [r4, -r6, lsl #2]
    17d0:	075c0800 	ldrbeq	r0, [ip, -r0, lsl #16]
    17d4:	06850800 	streq	r0, [r5], r0, lsl #16
    17d8:	5f010000 	svcpl	0x00010000
    17dc:	1a00000e 	bne	181c <_Min_Heap_Size+0x101c>
    17e0:	00000946 	andeq	r0, r0, r6, asr #18
    17e4:	00000e6f 	andeq	r0, r0, pc, ror #28
    17e8:	28030501 	stmdacs	r3, {r0, r8, sl}
    17ec:	2108002c 	tstcs	r8, ip, lsr #32
    17f0:	0800074e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, sl}
    17f4:	00001159 	andeq	r1, r0, r9, asr r1
    17f8:	00000e55 	andeq	r0, r0, r5, asr lr
    17fc:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
    1800:	002be803 	eoreq	lr, fp, r3, lsl #16
    1804:	51011c08 	tstpl	r1, r8, lsl #24
    1808:	2c280305 	stccs	3, cr0, [r8], #-20	; 0xffffffec
    180c:	22000800 	andcs	r0, r0, #0, 16
    1810:	08000752 	stmdaeq	r0, {r1, r4, r6, r8, r9, sl}
    1814:	00000e74 	andeq	r0, r0, r4, ror lr
    1818:	0bd50a00 	bleq	ff544020 <_estack+0xdf542de8>
    181c:	0e6f0000 	cdpeq	0, 6, cr0, cr15, cr0, {0}
    1820:	910b0000 	mrsls	r0, (UNDEF: 11)
    1824:	05000000 	streq	r0, [r0, #-0]
    1828:	0e5f0600 	cdpeq	6, 5, cr0, cr15, cr0, {0}
    182c:	011d0000 	tsteq	sp, r0
    1830:	000004d4 	ldrdeq	r0, [r0], -r4
    1834:	01068501 	tsteq	r6, r1, lsl #10
    1838:	0800072c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl}
    183c:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
    1840:	000006a5 	andeq	r0, r0, r5, lsr #13
    1844:	000ec901 	andeq	ip, lr, r1, lsl #18
    1848:	09461a00 	stmdbeq	r6, {r9, fp, ip}^
    184c:	0e6f0000 	cdpeq	0, 6, cr0, cr15, cr0, {0}
    1850:	05010000 	streq	r0, [r1, #-0]
    1854:	002c3003 	eoreq	r3, ip, r3
    1858:	07362108 	ldreq	r2, [r6, -r8, lsl #2]!
    185c:	11590800 	cmpne	r9, r0, lsl #16
    1860:	0ebf0000 	cdpeq	0, 11, cr0, cr15, cr0, {0}
    1864:	011c0000 	tsteq	ip, r0
    1868:	e8030550 	stmda	r3, {r4, r6, r8, sl}
    186c:	1c08002b 	stcne	0, cr0, [r8], {43}	; 0x2b
    1870:	03055101 	movweq	r5, #20737	; 0x5101
    1874:	08002c30 	stmdaeq	r0, {r4, r5, sl, fp, sp}
    1878:	073a2200 	ldreq	r2, [sl, -r0, lsl #4]!
    187c:	0ec90800 	cdpeq	8, 12, cr0, cr9, cr0, {0}
    1880:	1d000000 	stcne	0, cr0, [r0, #-0]
    1884:	0004ce01 	andeq	ip, r4, r1, lsl #28
    1888:	067f0100 	ldrbteq	r0, [pc], -r0, lsl #2
    188c:	00071401 	andeq	r1, r7, r1, lsl #8
    1890:	00072c08 	andeq	r2, r7, r8, lsl #24
    1894:	0006c508 	andeq	ip, r6, r8, lsl #10
    1898:	0f1e0100 	svceq	0x001e0100
    189c:	461a0000 	ldrmi	r0, [sl], -r0
    18a0:	6f000009 	svcvs	0x00000009
    18a4:	0100000e 	tsteq	r0, lr
    18a8:	2c380305 	ldccs	3, cr0, [r8], #-20	; 0xffffffec
    18ac:	1e210800 	cdpne	8, 2, cr0, cr1, cr0, {0}
    18b0:	59080007 	stmdbpl	r8, {r0, r1, r2}
    18b4:	14000011 	strne	r0, [r0], #-17	; 0xffffffef
    18b8:	1c00000f 	stcne	0, cr0, [r0], {15}
    18bc:	03055001 	movweq	r5, #20481	; 0x5001
    18c0:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}
    18c4:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
    18c8:	002c3803 	eoreq	r3, ip, r3, lsl #16
    18cc:	22220008 	eorcs	r0, r2, #8
    18d0:	1e080007 	cdpne	0, 0, cr0, cr8, cr7, {0}
    18d4:	0000000f 	andeq	r0, r0, pc
    18d8:	0898011d 	ldmeq	r8, {r0, r2, r3, r4, r8}
    18dc:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    18e0:	06fc0106 	ldrbteq	r0, [ip], r6, lsl #2
    18e4:	07140800 	ldreq	r0, [r4, -r0, lsl #16]
    18e8:	06e50800 	strbteq	r0, [r5], r0, lsl #16
    18ec:	73010000 	movwvc	r0, #4096	; 0x1000
    18f0:	1a00000f 	bne	1934 <_Min_Heap_Size+0x1134>
    18f4:	00000946 	andeq	r0, r0, r6, asr #18
    18f8:	00000e6f 	andeq	r0, r0, pc, ror #28
    18fc:	40030501 	andmi	r0, r3, r1, lsl #10
    1900:	2108002c 	tstcs	r8, ip, lsr #32
    1904:	08000706 	stmdaeq	r0, {r1, r2, r8, r9, sl}
    1908:	00001159 	andeq	r1, r0, r9, asr r1
    190c:	00000f69 	andeq	r0, r0, r9, ror #30
    1910:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
    1914:	002be803 	eoreq	lr, fp, r3, lsl #16
    1918:	51011c08 	tstpl	r1, r8, lsl #24
    191c:	2c400305 	mcrrcs	3, 0, r0, r0, cr5
    1920:	22000800 	andcs	r0, r0, #0, 16
    1924:	0800070a 	stmdaeq	r0, {r1, r3, r8, r9, sl}
    1928:	00000f73 	andeq	r0, r0, r3, ror pc
    192c:	8c011d00 	stchi	13, cr1, [r1], {-0}
    1930:	0100000a 	tsteq	r0, sl
    1934:	e4010673 	str	r0, [r1], #-1651	; 0xfffff98d
    1938:	fc080006 	stc2	0, cr0, [r8], {6}
    193c:	05080006 	streq	r0, [r8, #-6]
    1940:	01000007 	tsteq	r0, r7
    1944:	00000fc8 	andeq	r0, r0, r8, asr #31
    1948:	0009461a 	andeq	r4, r9, sl, lsl r6
    194c:	000e6f00 	andeq	r6, lr, r0, lsl #30
    1950:	03050100 	movweq	r0, #20736	; 0x5100
    1954:	08002c48 	stmdaeq	r0, {r3, r6, sl, fp, sp}
    1958:	0006ee21 	andeq	lr, r6, r1, lsr #28
    195c:	00115908 	andseq	r5, r1, r8, lsl #18
    1960:	000fbe00 	andeq	fp, pc, r0, lsl #28
    1964:	50011c00 	andpl	r1, r1, r0, lsl #24
    1968:	2be80305 	blcs	ffa02584 <_estack+0xdfa0134c>
    196c:	011c0800 	tsteq	ip, r0, lsl #16
    1970:	48030551 	stmdami	r3, {r0, r4, r6, r8, sl}
    1974:	0008002c 	andeq	r0, r8, ip, lsr #32
    1978:	0006f222 	andeq	pc, r6, r2, lsr #4
    197c:	000fc808 	andeq	ip, pc, r8, lsl #16
    1980:	011d0000 	tsteq	sp, r0
    1984:	00000a86 	andeq	r0, r0, r6, lsl #21
    1988:	01066a01 	tsteq	r6, r1, lsl #20
    198c:	080006cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl}
    1990:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
    1994:	00000725 	andeq	r0, r0, r5, lsr #14
    1998:	00101d01 	andseq	r1, r0, r1, lsl #26
    199c:	09461a00 	stmdbeq	r6, {r9, fp, ip}^
    19a0:	0e6f0000 	cdpeq	0, 6, cr0, cr15, cr0, {0}
    19a4:	05010000 	streq	r0, [r1, #-0]
    19a8:	002c5003 	eoreq	r5, ip, r3
    19ac:	06d62108 	ldrbeq	r2, [r6], r8, lsl #2
    19b0:	11590800 	cmpne	r9, r0, lsl #16
    19b4:	10130000 	andsne	r0, r3, r0
    19b8:	011c0000 	tsteq	ip, r0
    19bc:	e8030550 	stmda	r3, {r4, r6, r8, sl}
    19c0:	1c08002b 	stcne	0, cr0, [r8], {43}	; 0x2b
    19c4:	03055101 	movweq	r5, #20737	; 0x5101
    19c8:	08002c50 	stmdaeq	r0, {r4, r6, sl, fp, sp}
    19cc:	06da2200 	ldrbeq	r2, [sl], r0, lsl #4
    19d0:	101d0800 	andsne	r0, sp, r0, lsl #16
    19d4:	1d000000 	stcne	0, cr0, [r0, #-0]
    19d8:	00061101 	andeq	r1, r6, r1, lsl #2
    19dc:	06590100 	ldrbeq	r0, [r9], -r0, lsl #2
    19e0:	00068001 	andeq	r8, r6, r1
    19e4:	0006cc08 	andeq	ip, r6, r8, lsl #24
    19e8:	00074508 	andeq	r4, r7, r8, lsl #10
    19ec:	10a40100 	adcne	r0, r4, r0, lsl #2
    19f0:	8c240000 	stchi	0, cr0, [r4], #-0
    19f4:	01000004 	tsteq	r0, r4
    19f8:	10a4115b 	adcne	r1, r4, fp, asr r1
    19fc:	07830000 	streq	r0, [r3, r0]
    1a00:	077d0000 	ldrbeq	r0, [sp, -r0]!
    1a04:	8b1f0000 	blhi	7c1a0c <_Min_Heap_Size+0x7c120c>
    1a08:	01000021 	tsteq	r0, r1, lsr #32
    1a0c:	008c105c 	addeq	r1, ip, ip, asr r0
    1a10:	91020000 	mrsls	r0, (UNDEF: 2)
    1a14:	06a2216c 	strteq	r2, [r2], ip, ror #2
    1a18:	11590800 	cmpne	r9, r0, lsl #16
    1a1c:	10750000 	rsbsne	r0, r5, r0
    1a20:	011c0000 	tsteq	ip, r0
    1a24:	00750250 	rsbseq	r0, r5, r0, asr r2
    1a28:	0251011c 	subseq	r0, r1, #28, 2
    1a2c:	21000074 	tstcs	r0, r4, ror r0
    1a30:	080006b0 	stmdaeq	r0, {r4, r5, r7, r9, sl}
    1a34:	00001159 	andeq	r1, r0, r9, asr r1
    1a38:	0000108e 	andeq	r1, r0, lr, lsl #1
    1a3c:	0250011c 	subseq	r0, r0, #28, 2
    1a40:	011c0075 	tsteq	ip, r5, ror r0
    1a44:	00340151 	eorseq	r0, r4, r1, asr r1
    1a48:	0006c01b 	andeq	ip, r6, fp, lsl r0
    1a4c:	00115908 	andseq	r5, r1, r8, lsl #18
    1a50:	50011c00 	andpl	r1, r1, r0, lsl #24
    1a54:	1c007502 	cfstr32ne	mvfx7, [r0], {2}
    1a58:	33015101 	movwcc	r5, #4353	; 0x1101
    1a5c:	04130000 	ldreq	r0, [r3], #-0
    1a60:	0000008c 	andeq	r0, r0, ip, lsl #1
    1a64:	07e0011d 			; <UNDEFINED> instruction: 0x07e0011d
    1a68:	50010000 	andpl	r0, r1, r0
    1a6c:	00000106 	andeq	r0, r0, r6, lsl #2
    1a70:	00000000 	andeq	r0, r0, r0
    1a74:	07af0000 	streq	r0, [pc, r0]!
    1a78:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    1a7c:	25000010 	strcs	r0, [r0, #-16]
    1a80:	52010061 	andpl	r0, r1, #97	; 0x61
    1a84:	00008507 	andeq	r8, r0, r7, lsl #10
    1a88:	62250000 	eorvs	r0, r5, #0
    1a8c:	0e520100 	rdfeqs	f0, f2, f0
    1a90:	00000085 	andeq	r0, r0, r5, lsl #1
    1a94:	00632500 	rsbeq	r2, r3, r0, lsl #10
    1a98:	85155201 	ldrhi	r5, [r5, #-513]	; 0xfffffdff
    1a9c:	00000000 	andeq	r0, r0, r0
    1aa0:	0000001b 	andeq	r0, r0, fp, lsl r0
    1aa4:	00115900 	andseq	r5, r1, r0, lsl #18
    1aa8:	50011c00 	andpl	r1, r1, r0, lsl #24
    1aac:	00000305 	andeq	r0, r0, r5, lsl #6
    1ab0:	011c0000 	tsteq	ip, r0
    1ab4:	00300151 	eorseq	r0, r0, r1, asr r1
    1ab8:	72012300 	andvc	r2, r1, #0, 6
    1abc:	01000003 	tsteq	r0, r3
    1ac0:	85010148 	strhi	r0, [r1, #-328]	; 0xfffffeb8
    1ac4:	60000000 	andvs	r0, r0, r0
    1ac8:	80080006 	andhi	r0, r8, r6
    1acc:	cf080006 	svcgt	0x00080006
    1ad0:	01000007 	tsteq	r0, r7
    1ad4:	0000114e 	andeq	r1, r0, lr, asr #2
    1ad8:	00686326 	rsbeq	r6, r8, r6, lsr #6
    1adc:	85014801 	strhi	r4, [r1, #-2049]	; 0xfffff7ff
    1ae0:	0b000000 	bleq	1ae8 <_Min_Heap_Size+0x12e8>
    1ae4:	07000008 	streq	r0, [r0, -r8]
    1ae8:	1b000008 	blne	1b10 <_Min_Heap_Size+0x1310>
    1aec:	08000674 	stmdaeq	r0, {r2, r4, r5, r6, r9, sl}
    1af0:	000011e5 	andeq	r1, r0, r5, ror #3
    1af4:	0251011c 	subseq	r0, r1, #28, 2
    1af8:	011c7491 			; <UNDEFINED> instruction: 0x011c7491
    1afc:	1c310152 	ldfnes	f0, [r1], #-328	; 0xfffffeb8
    1b00:	0a035301 	beq	d670c <_Min_Heap_Size+0xd5f0c>
    1b04:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
    1b08:	0008a427 	andeq	sl, r8, r7, lsr #8
    1b0c:	03c00200 	biceq	r0, r0, #0, 4
    1b10:	2803011b 	stmdacs	r3, {r0, r1, r3, r4, r8}
    1b14:	03e80101 	mvneq	r0, #1073741824	; 0x40000000
    1b18:	03e80000 	mvneq	r0, #0
    1b1c:	c80d0000 	stmdagt	sp, {}	; <UNPREDICTABLE>
    1b20:	01012905 	tsteq	r1, r5, lsl #18
    1b24:	00000485 	andeq	r0, r0, r5, lsl #9
    1b28:	0000047b 	andeq	r0, r0, fp, ror r4
    1b2c:	012a0011 			; <UNDEFINED> instruction: 0x012a0011
    1b30:	0009d001 	andeq	sp, r9, r1
    1b34:	0009d000 	andeq	sp, r9, r0
    1b38:	04db0900 	ldrbeq	r0, [fp], #2304	; 0x900
    1b3c:	01012a13 	tsteq	r1, r3, lsl sl
    1b40:	00000ad9 	ldrdeq	r0, [r0], -r9
    1b44:	00000ad9 	ldrdeq	r0, [r0], -r9
    1b48:	1304dc09 	movwne	sp, #19465	; 0x4c09
    1b4c:	c4010128 	strgt	r0, [r1], #-296	; 0xfffffed8
    1b50:	c4000007 	strgt	r0, [r0], #-7
    1b54:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    1b58:	012813db 	ldrdeq	r1, [r8, -fp]!
    1b5c:	000bcd01 	andeq	ip, fp, r1, lsl #26
    1b60:	000bcd00 	andeq	ip, fp, r0, lsl #26
    1b64:	06270f00 	strteq	r0, [r7], -r0, lsl #30
    1b68:	ef010128 	svc	0x00010128
    1b6c:	ef000003 	svc	0x00000003
    1b70:	0c000003 	stceq	0, cr0, [r0], {3}
    1b74:	01280629 			; <UNDEFINED> instruction: 0x01280629
    1b78:	00044e01 	andeq	r4, r4, r1, lsl #28
    1b7c:	00044e00 	andeq	r4, r4, r0, lsl #28
    1b80:	06461000 	strbeq	r1, [r6], -r0
    1b84:	ef010129 	svc	0x00010129
    1b88:	e5000005 	str	r0, [r0, #-5]
    1b8c:	11000005 	tstne	r0, r5
    1b90:	01012800 	tsteq	r1, r0, lsl #16
    1b94:	000009e2 	andeq	r0, r0, r2, ror #19
    1b98:	000009e2 	andeq	r0, r0, r2, ror #19
    1b9c:	2a06e90e 	bcs	1bbfdc <_Min_Heap_Size+0x1bb7dc>
    1ba0:	04e00101 	strbteq	r0, [r0], #257	; 0x101
    1ba4:	04e00000 	strbteq	r0, [r0], #0
    1ba8:	e90b0000 	stmdb	fp, {}	; <UNPREDICTABLE>
    1bac:	04001302 	streq	r1, [r0], #-770	; 0xfffffcfe
    1bb0:	02000003 	andeq	r0, r0, #3
    1bb4:	00053600 	andeq	r3, r5, r0, lsl #12
    1bb8:	31010400 	tstcc	r1, r0, lsl #8
    1bbc:	0c000001 	stceq	0, cr0, [r0], {1}
    1bc0:	00000be7 	andeq	r0, r0, r7, ror #23
    1bc4:	0000004b 	andeq	r0, r0, fp, asr #32
    1bc8:	00000118 	andeq	r0, r0, r8, lsl r1
	...
    1bd4:	00000b68 	andeq	r0, r0, r8, ror #22
    1bd8:	e0060102 	and	r0, r6, r2, lsl #2
    1bdc:	02000000 	andeq	r0, r0, #0
    1be0:	00de0801 	sbcseq	r0, lr, r1, lsl #16
    1be4:	02020000 	andeq	r0, r2, #0
    1be8:	00012705 	andeq	r2, r1, r5, lsl #14
    1bec:	07020200 	streq	r0, [r2, -r0, lsl #4]
    1bf0:	0000000e 	andeq	r0, r0, lr
    1bf4:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
    1bf8:	03000000 	movweq	r0, #0
    1bfc:	00000040 	andeq	r0, r0, r0, asr #32
    1c00:	58194f02 	ldmdapl	r9, {r1, r8, r9, sl, fp, lr}
    1c04:	02000000 	andeq	r0, r0, #0
    1c08:	009b0704 	addseq	r0, fp, r4, lsl #14
    1c0c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1c10:	00000005 	andeq	r0, r0, r5
    1c14:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1c18:	00000096 	muleq	r0, r6, r0
    1c1c:	69050404 	stmdbvs	r5, {r2, sl}
    1c20:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    1c24:	00a00704 	adceq	r0, r0, r4, lsl #14
    1c28:	42030000 	andmi	r0, r3, #0
    1c2c:	03000000 	movweq	r0, #0
    1c30:	004c1430 	subeq	r1, ip, r0, lsr r4
    1c34:	7b050000 	blvc	141c3c <_Min_Heap_Size+0x14143c>
    1c38:	06000000 	streq	r0, [r0], -r0
    1c3c:	0000007b 	andeq	r0, r0, fp, ror r0
    1c40:	0000009c 	muleq	r0, ip, r0
    1c44:	00007407 	andeq	r7, r0, r7, lsl #8
    1c48:	08000100 	stmdaeq	r0, {r8}
    1c4c:	01f40488 	mvnseq	r0, r8, lsl #9
    1c50:	00028809 	andeq	r8, r2, r9, lsl #16
    1c54:	52430900 	subpl	r0, r3, #0, 18
    1c58:	01f60400 	mvnseq	r0, r0, lsl #8
    1c5c:	00008711 	andeq	r8, r0, r1, lsl r7
    1c60:	00230200 	eoreq	r0, r3, r0, lsl #4
    1c64:	0006490a 	andeq	r4, r6, sl, lsl #18
    1c68:	01f70400 	mvnseq	r0, r0, lsl #8
    1c6c:	00008711 	andeq	r8, r0, r1, lsl r7
    1c70:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1c74:	00064c0a 	andeq	r4, r6, sl, lsl #24
    1c78:	01f80400 	mvnseq	r0, r0, lsl #8
    1c7c:	00008711 	andeq	r8, r0, r1, lsl r7
    1c80:	08230200 	stmdaeq	r3!, {r9}
    1c84:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
    1c88:	01f90400 	mvnseq	r0, r0, lsl #8
    1c8c:	00008711 	andeq	r8, r0, r1, lsl r7
    1c90:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1c94:	00052d0a 	andeq	r2, r5, sl, lsl #26
    1c98:	01fa0400 	mvnseq	r0, r0, lsl #8
    1c9c:	00008711 	andeq	r8, r0, r1, lsl r7
    1ca0:	10230200 	eorne	r0, r3, r0, lsl #4
    1ca4:	000a0e0a 	andeq	r0, sl, sl, lsl #28
    1ca8:	01fb0400 	mvnseq	r0, r0, lsl #8
    1cac:	00008711 	andeq	r8, r0, r1, lsl r7
    1cb0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1cb4:	00096c0a 	andeq	r6, r9, sl, lsl #24
    1cb8:	01fc0400 	mvnseq	r0, r0, lsl #8
    1cbc:	00008711 	andeq	r8, r0, r1, lsl r7
    1cc0:	18230200 	stmdane	r3!, {r9}
    1cc4:	0008b20a 	andeq	fp, r8, sl, lsl #4
    1cc8:	01fd0400 	mvnseq	r0, r0, lsl #8
    1ccc:	00007b11 	andeq	r7, r0, r1, lsl fp
    1cd0:	1c230200 	sfmne	f0, 4, [r3], #-0
    1cd4:	00088f0a 	andeq	r8, r8, sl, lsl #30
    1cd8:	01fe0400 	mvnseq	r0, r0, lsl #8
    1cdc:	00008711 	andeq	r8, r0, r1, lsl r7
    1ce0:	20230200 	eorcs	r0, r3, r0, lsl #4
    1ce4:	0005c00a 	andeq	ip, r5, sl
    1ce8:	01ff0400 	mvnseq	r0, r0, lsl #8
    1cec:	00008711 	andeq	r8, r0, r1, lsl r7
    1cf0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    1cf4:	0008bc0a 	andeq	fp, r8, sl, lsl #24
    1cf8:	02000400 	andeq	r0, r0, #0, 8
    1cfc:	00008c11 	andeq	r8, r0, r1, lsl ip
    1d00:	28230200 	stmdacs	r3!, {r9}
    1d04:	000b510a 	andeq	r5, fp, sl, lsl #2
    1d08:	02010400 	andeq	r0, r1, #0, 8
    1d0c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d10:	30230200 	eorcc	r0, r3, r0, lsl #4
    1d14:	000a7e0a 	andeq	r7, sl, sl, lsl #28
    1d18:	02020400 	andeq	r0, r2, #0, 8
    1d1c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d20:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    1d24:	00082a0a 	andeq	r2, r8, sl, lsl #20
    1d28:	02030400 	andeq	r0, r3, #0, 8
    1d2c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d30:	38230200 	stmdacc	r3!, {r9}
    1d34:	0008c60a 	andeq	ip, r8, sl, lsl #12
    1d38:	02040400 	andeq	r0, r4, #0, 8
    1d3c:	00007b11 	andeq	r7, r0, r1, lsl fp
    1d40:	3c230200 	sfmcc	f0, 4, [r3], #-0
    1d44:	0009a70a 	andeq	sl, r9, sl, lsl #14
    1d48:	02050400 	andeq	r0, r5, #0, 8
    1d4c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d50:	40230200 	eormi	r0, r3, r0, lsl #4
    1d54:	0009640a 	andeq	r6, r9, sl, lsl #8
    1d58:	02060400 	andeq	r0, r6, #0, 8
    1d5c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d60:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    1d64:	0008d00a 	andeq	sp, r8, sl
    1d68:	02070400 	andeq	r0, r7, #0, 8
    1d6c:	00008c11 	andeq	r8, r0, r1, lsl ip
    1d70:	48230200 	stmdami	r3!, {r9}
    1d74:	0004f20a 	andeq	pc, r4, sl, lsl #4
    1d78:	02080400 	andeq	r0, r8, #0, 8
    1d7c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d80:	50230200 	eorpl	r0, r3, r0, lsl #4
    1d84:	0008640a 	andeq	r6, r8, sl, lsl #8
    1d88:	02090400 	andeq	r0, r9, #0, 8
    1d8c:	00008711 	andeq	r8, r0, r1, lsl r7
    1d90:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    1d94:	0009320a 	andeq	r3, r9, sl, lsl #4
    1d98:	020a0400 	andeq	r0, sl, #0, 8
    1d9c:	00008711 	andeq	r8, r0, r1, lsl r7
    1da0:	58230200 	stmdapl	r3!, {r9}
    1da4:	0008da0a 	andeq	sp, r8, sl, lsl #20
    1da8:	020b0400 	andeq	r0, fp, #0, 8
    1dac:	00007b11 	andeq	r7, r0, r1, lsl fp
    1db0:	5c230200 	sfmpl	f0, 4, [r3], #-0
    1db4:	0004030a 	andeq	r0, r4, sl, lsl #6
    1db8:	020c0400 	andeq	r0, ip, #0, 8
    1dbc:	00008711 	andeq	r8, r0, r1, lsl r7
    1dc0:	60230200 	eorvs	r0, r3, r0, lsl #4
    1dc4:	0007850a 	andeq	r8, r7, sl, lsl #10
    1dc8:	020d0400 	andeq	r0, sp, #0, 8
    1dcc:	00008711 	andeq	r8, r0, r1, lsl r7
    1dd0:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
    1dd4:	0008e40a 	andeq	lr, r8, sl, lsl #8
    1dd8:	020e0400 	andeq	r0, lr, #0, 8
    1ddc:	00008c11 	andeq	r8, r0, r1, lsl ip
    1de0:	68230200 	stmdavs	r3!, {r9}
    1de4:	000aed0a 	andeq	lr, sl, sl, lsl #26
    1de8:	020f0400 	andeq	r0, pc, #0, 8
    1dec:	00008711 	andeq	r8, r0, r1, lsl r7
    1df0:	70230200 	eorvc	r0, r3, r0, lsl #4
    1df4:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
    1df8:	02100400 	andseq	r0, r0, #0, 8
    1dfc:	00008711 	andeq	r8, r0, r1, lsl r7
    1e00:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    1e04:	0008ee0a 	andeq	lr, r8, sl, lsl #28
    1e08:	02110400 	andseq	r0, r1, #0, 8
    1e0c:	00008c11 	andeq	r8, r0, r1, lsl ip
    1e10:	78230200 	stmdavc	r3!, {r9}
    1e14:	000abc0a 	andeq	fp, sl, sl, lsl #24
    1e18:	02120400 	andseq	r0, r2, #0, 8
    1e1c:	00008711 	andeq	r8, r0, r1, lsl r7
    1e20:	80230300 	eorhi	r0, r3, r0, lsl #6
    1e24:	07180a01 	ldreq	r0, [r8, -r1, lsl #20]
    1e28:	13040000 	movwne	r0, #16384	; 0x4000
    1e2c:	00871102 	addeq	r1, r7, r2, lsl #2
    1e30:	23030000 	movwcs	r0, #12288	; 0x3000
    1e34:	0b000184 	bleq	244c <_Min_Heap_Size+0x1c4c>
    1e38:	00000594 	muleq	r0, r4, r5
    1e3c:	03021404 	movweq	r1, #9220	; 0x2404
    1e40:	0000009c 	muleq	r0, ip, r0
    1e44:	0f040802 	svceq	0x00040802
    1e48:	0c000001 	stceq	0, cr0, [r0], {1}
    1e4c:	000bcd01 	andeq	ip, fp, r1, lsl #26
    1e50:	062a0100 	strteq	r0, [sl], -r0, lsl #2
    1e54:	0007b401 	andeq	fp, r7, r1, lsl #8
    1e58:	00080008 	andeq	r0, r8, r8
    1e5c:	00082a08 	andeq	r2, r8, r8, lsl #20
    1e60:	b60d0100 	strlt	r0, [sp], -r0, lsl #2
    1e64:	ce080007 	cdpgt	0, 0, cr0, cr8, cr7, {0}
    1e68:	d0080007 	andle	r0, r8, r7
    1e6c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1e70:	0000057d 	andeq	r0, r0, sp, ror r5
    1e74:	87032e01 	strhi	r2, [r3, -r1, lsl #28]
    1e78:	02000000 	andeq	r0, r0, #0
    1e7c:	0d007491 	cfstrseq	mvf7, [r0, #-580]	; 0xfffffdbc
    1e80:	080007ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl}
    1e84:	080007e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, sl}
    1e88:	000002ed 	andeq	r0, r0, sp, ror #5
    1e8c:	00057d0e 	andeq	r7, r5, lr, lsl #26
    1e90:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    1e94:	00000087 	andeq	r0, r0, r7, lsl #1
    1e98:	00789102 	rsbseq	r9, r8, r2, lsl #2
    1e9c:	0007e20f 	andeq	lr, r7, pc, lsl #4
    1ea0:	0007f608 	andeq	pc, r7, r8, lsl #12
    1ea4:	057d0e08 	ldrbeq	r0, [sp, #-3592]!	; 0xfffff1f8
    1ea8:	30010000 	andcc	r0, r1, r0
    1eac:	00008703 	andeq	r8, r0, r3, lsl #14
    1eb0:	7c910200 	lfmvc	f0, 4, [r1], {0}
    1eb4:	64000000 	strvs	r0, [r0], #-0
    1eb8:	0200000d 	andeq	r0, r0, #13
    1ebc:	00060900 	andeq	r0, r6, r0, lsl #18
    1ec0:	31010400 	tstcc	r1, r0, lsl #8
    1ec4:	0c000001 	stceq	0, cr0, [r0], {1}
    1ec8:	0000112c 	andeq	r1, r0, ip, lsr #2
    1ecc:	0000004b 	andeq	r0, r0, fp, asr #32
    1ed0:	00000128 	andeq	r0, r0, r8, lsr #2
	...
    1edc:	00000cd7 	ldrdeq	r0, [r0], -r7
    1ee0:	3c010502 	cfstr32cc	mvfx0, [r1], {2}
    1ee4:	04000002 	streq	r0, [r0], #-2
    1ee8:	023c0142 	eorseq	r0, ip, #-2147483632	; 0x80000010
    1eec:	5d030000 	stcpl	0, cr0, [r3, #-0]
    1ef0:	7200000e 	andvc	r0, r0, #14
    1ef4:	000e8c03 	andeq	r8, lr, r3, lsl #24
    1ef8:	ec037400 	cfstrs	mvf7, [r3], {-0}
    1efc:	7500000e 	strvc	r0, [r0, #-14]
    1f00:	000d9303 	andeq	r9, sp, r3, lsl #6
    1f04:	3e037600 	cfmadd32cc	mvax0, mvfx7, mvfx3, mvfx0
    1f08:	7b00000f 	blvc	1f4c <_Min_Heap_Size+0x174c>
    1f0c:	0010b903 	andseq	fp, r0, r3, lsl #18
    1f10:	97037c00 	strls	r7, [r3, -r0, lsl #24]
    1f14:	7e000011 	mcrvc	0, 0, r0, cr0, cr1, {0}
    1f18:	000d0503 	andeq	r0, sp, r3, lsl #10
    1f1c:	71047f00 	tstvc	r4, r0, lsl #30
    1f20:	0000000e 	andeq	r0, r0, lr
    1f24:	00105d04 	andseq	r5, r0, r4, lsl #26
    1f28:	a2040100 	andge	r0, r4, #0, 2
    1f2c:	0200000e 	andeq	r0, r0, #14
    1f30:	000c0004 	andeq	r0, ip, r4
    1f34:	6a040300 	bvs	102b3c <_Min_Heap_Size+0x10233c>
    1f38:	0400000c 	streq	r0, [r0], #-12
    1f3c:	0010ec04 	andseq	lr, r0, r4, lsl #24
    1f40:	8a040500 	bhi	103348 <_Min_Heap_Size+0x102b48>
    1f44:	06000010 			; <UNDEFINED> instruction: 0x06000010
    1f48:	000dfd04 	andeq	pc, sp, r4, lsl #26
    1f4c:	0e040700 	cdpeq	7, 0, cr0, cr4, cr0, {0}
    1f50:	0800000c 	stmdaeq	r0, {r2, r3}
    1f54:	00118c04 	andseq	r8, r1, r4, lsl #24
    1f58:	79040900 	stmdbvc	r4, {r8, fp}
    1f5c:	0a00000f 	beq	1fa0 <_Min_Heap_Size+0x17a0>
    1f60:	000fd504 	andeq	sp, pc, r4, lsl #10
    1f64:	9f040b00 	svcls	0x00040b00
    1f68:	0c00000f 	stceq	0, cr0, [r0], {15}
    1f6c:	000d2f04 	andeq	r2, sp, r4, lsl #30
    1f70:	f5040d00 			; <UNDEFINED> instruction: 0xf5040d00
    1f74:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    1f78:	00109504 	andseq	r9, r0, r4, lsl #10
    1f7c:	15040f00 	strne	r0, [r4, #-3840]	; 0xfffff100
    1f80:	1000000e 	andne	r0, r0, lr
    1f84:	000c1904 	andeq	r1, ip, r4, lsl #18
    1f88:	54041100 	strpl	r1, [r4], #-256	; 0xffffff00
    1f8c:	12000010 	andne	r0, r0, #16
    1f90:	000e0804 	andeq	r0, lr, r4, lsl #16
    1f94:	b1041300 	mrslt	r1, LR_abt
    1f98:	1400000d 	strne	r0, [r0], #-13
    1f9c:	00115a04 	andseq	r5, r1, r4, lsl #20
    1fa0:	b2041500 	andlt	r1, r4, #0, 10
    1fa4:	1600000e 	strne	r0, [r0], -lr
    1fa8:	00116804 	andseq	r6, r1, r4, lsl #16
    1fac:	05041700 	streq	r1, [r4, #-1792]	; 0xfffff900
    1fb0:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    1fb4:	00111904 	andseq	r1, r1, r4, lsl #18
    1fb8:	ed041900 	vstr.16	s2, [r4, #-0]
    1fbc:	1a00000c 	bne	1ff4 <_Min_Heap_Size+0x17f4>
    1fc0:	000df004 	andeq	pc, sp, r4
    1fc4:	75041b00 	strvc	r1, [r4, #-2816]	; 0xfffff500
    1fc8:	1c00000c 	stcne	0, cr0, [r0], {12}
    1fcc:	00101204 	andseq	r1, r0, r4, lsl #4
    1fd0:	bf041d00 	svclt	0x00041d00
    1fd4:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    1fd8:	000de304 	andeq	lr, sp, r4, lsl #6
    1fdc:	63041f00 	movwvs	r1, #20224	; 0x4f00
    1fe0:	2000000d 	andcs	r0, r0, sp
    1fe4:	000f9204 	andeq	r9, pc, r4, lsl #4
    1fe8:	d7042100 	strle	r2, [r4, -r0, lsl #2]
    1fec:	2200000e 	andcs	r0, r0, #14
    1ff0:	000f3404 	andeq	r3, pc, r4, lsl #8
    1ff4:	aa042300 	bge	10abfc <_Min_Heap_Size+0x10a3fc>
    1ff8:	2400000c 	strcs	r0, [r0], #-12
    1ffc:	00101c04 	andseq	r1, r0, r4, lsl #24
    2000:	c9042500 	stmdbgt	r4, {r8, sl, sp}
    2004:	2600000d 	strcs	r0, [r0], -sp
    2008:	000d1204 	andeq	r1, sp, r4, lsl #4
    200c:	03042700 	movweq	r2, #18176	; 0x4700
    2010:	28000010 	stmdacs	r0, {r4}
    2014:	000fe704 	andeq	lr, pc, r4, lsl #14
    2018:	68042900 	stmdavs	r4, {r8, fp, sp}
    201c:	2a00000f 	bcs	2060 <_Min_Heap_Size+0x1860>
    2020:	000cb404 	andeq	fp, ip, r4, lsl #8
    2024:	2b042b00 	blcs	10cc2c <_Min_Heap_Size+0x10c42c>
    2028:	2c00000c 	stccs	0, cr0, [r0], {12}
    202c:	000e2704 	andeq	r2, lr, r4, lsl #14
    2030:	75042d00 	strvc	r2, [r4, #-3328]	; 0xfffff300
    2034:	2e000011 	mcrcs	0, 0, r0, cr0, cr1, {0}
    2038:	0011b604 	andseq	fp, r1, r4, lsl #12
    203c:	6d042f00 	stcvs	15, cr2, [r4, #-0]
    2040:	30000010 	andcc	r0, r0, r0, lsl r0
    2044:	00118204 	andseq	r8, r1, r4, lsl #4
    2048:	89043100 	stmdbhi	r4, {r8, ip, sp}
    204c:	3200000d 	andcc	r0, r0, #13
    2050:	000c6004 	andeq	r6, ip, r4
    2054:	53043300 	movwpl	r3, #17152	; 0x4300
    2058:	3400000f 	strcc	r0, [r0], #-15
    205c:	000efa04 	andeq	pc, lr, r4, lsl #20
    2060:	84043500 	strhi	r3, [r4], #-1280	; 0xfffffb00
    2064:	3600000f 	strcc	r0, [r0], -pc
    2068:	000f1804 	andeq	r1, pc, r4, lsl #16
    206c:	c0043700 	andgt	r3, r4, r0, lsl #14
    2070:	3800000e 	stmdacc	r0, {r1, r2, r3}
    2074:	000c4e04 	andeq	r4, ip, r4, lsl #28
    2078:	c8043900 	stmdagt	r4, {r8, fp, ip, sp}
    207c:	3a000011 	bcc	20c8 <_Min_Heap_Size+0x18c8>
    2080:	000fb104 	andeq	fp, pc, r4, lsl #2
    2084:	41043b00 	tstmi	r4, r0, lsl #22
    2088:	3c00000d 	stccc	0, cr0, [r0], {13}
    208c:	000fc304 	andeq	ip, pc, r4, lsl #6
    2090:	7f043f00 	svcvc	0x00043f00
    2094:	4000000c 	andmi	r0, r0, ip
    2098:	00104604 	andseq	r4, r0, r4, lsl #12
    209c:	7b044100 	blvc	1124a4 <_Min_Heap_Size+0x111ca4>
    20a0:	4200000d 	andmi	r0, r0, #13
    20a4:	000e5104 	andeq	r5, lr, r4, lsl #2
    20a8:	db044300 	blle	112cb0 <_Min_Heap_Size+0x1124b0>
    20ac:	4400000c 	strmi	r0, [r0], #-12
    20b0:	0010a704 	andseq	sl, r0, r4, lsl #14
    20b4:	3f044500 	svccc	0x00044500
    20b8:	4600000e 	strmi	r0, [r0], -lr
    20bc:	000c8d04 	andeq	r8, ip, r4, lsl #26
    20c0:	cb044700 	blgt	113cc8 <_Min_Heap_Size+0x1134c8>
    20c4:	48000010 	stmdami	r0, {r4}
    20c8:	000ff604 	andeq	pc, pc, r4, lsl #12
    20cc:	40044900 	andmi	r4, r4, r0, lsl #18
    20d0:	4a000011 	bmi	211c <_Min_Heap_Size+0x191c>
    20d4:	0011a304 	andseq	sl, r1, r4, lsl #6
    20d8:	7b044b00 	blvc	114ce0 <_Min_Heap_Size+0x1144e0>
    20dc:	4c00000e 	stcmi	0, cr0, [r0], {14}
    20e0:	000f2204 	andeq	r2, pc, r4, lsl #4
    20e4:	3d044d00 	stccc	13, cr4, [r4, #-0]
    20e8:	50000010 	andpl	r0, r0, r0, lsl r0
    20ec:	000f4a04 	andeq	r4, pc, r4, lsl #20
    20f0:	05005100 	streq	r5, [r0, #-256]	; 0xffffff00
    20f4:	00e00601 	rsceq	r0, r0, r1, lsl #12
    20f8:	ad060000 	stcge	0, cr0, [r6, #-0]
    20fc:	02000000 	andeq	r0, r0, #0
    2100:	024f182b 	subeq	r1, pc, #2818048	; 0x2b0000
    2104:	01050000 	mrseq	r0, (UNDEF: 5)
    2108:	0000de08 	andeq	sp, r0, r8, lsl #28
    210c:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
    2110:	00000127 	andeq	r0, r0, r7, lsr #2
    2114:	0009ec06 	andeq	lr, r9, r6, lsl #24
    2118:	19390200 	ldmdbne	r9!, {r9}
    211c:	00000269 	andeq	r0, r0, r9, ror #4
    2120:	0e070205 	cdpeq	2, 0, cr0, cr7, cr5, {0}
    2124:	05000000 	streq	r0, [r0, #-0]
    2128:	00050504 	andeq	r0, r5, r4, lsl #10
    212c:	40060000 	andmi	r0, r6, r0
    2130:	02000000 	andeq	r0, r0, #0
    2134:	0283194f 	addeq	r1, r3, #1294336	; 0x13c000
    2138:	04050000 	streq	r0, [r5], #-0
    213c:	00009b07 	andeq	r9, r0, r7, lsl #22
    2140:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    2144:	00000000 	andeq	r0, r0, r0
    2148:	96070805 	strls	r0, [r7], -r5, lsl #16
    214c:	07000000 	streq	r0, [r0, -r0]
    2150:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2154:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    2158:	0000a007 	andeq	sl, r0, r7
    215c:	00af0600 	adceq	r0, pc, r0, lsl #12
    2160:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    2164:	00024313 	andeq	r4, r2, r3, lsl r3
    2168:	02a60800 	adceq	r0, r6, #0, 16
    216c:	ee060000 	cdp	0, 0, cr0, cr6, cr0, {0}
    2170:	03000009 	movweq	r0, #9
    2174:	025d1424 	subseq	r1, sp, #36, 8	; 0x24000000
    2178:	b7090000 	strlt	r0, [r9, -r0]
    217c:	06000002 	streq	r0, [r0], -r2
    2180:	00000042 	andeq	r0, r0, r2, asr #32
    2184:	77143003 	ldrvc	r3, [r4, -r3]
    2188:	09000002 	stmdbeq	r0, {r1}
    218c:	000002c8 	andeq	r0, r0, r8, asr #5
    2190:	0002c80a 	andeq	ip, r2, sl, lsl #16
    2194:	0002e900 	andeq	lr, r2, r0, lsl #18
    2198:	029f0b00 	addseq	r0, pc, #0, 22
    219c:	00010000 	andeq	r0, r1, r0
    21a0:	4404180c 	strmi	r1, [r4], #-2060	; 0xfffff7f4
    21a4:	03530901 	cmpeq	r3, #16384	; 0x4000
    21a8:	430d0000 	movwmi	r0, #53248	; 0xd000
    21ac:	46040052 			; <UNDEFINED> instruction: 0x46040052
    21b0:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    21b4:	23020000 	movwcs	r0, #8192	; 0x2000
    21b8:	0a4c0e00 	beq	13059c0 <_Min_Heap_Size+0x13051c0>
    21bc:	47040000 	strmi	r0, [r4, -r0]
    21c0:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    21c4:	23020000 	movwcs	r0, #8192	; 0x2000
    21c8:	41500d04 	cmpmi	r0, r4, lsl #26
    21cc:	48040052 	stmdami	r4, {r1, r4, r6}
    21d0:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    21d4:	23020000 	movwcs	r0, #8192	; 0x2000
    21d8:	042a0e08 	strteq	r0, [sl], #-3592	; 0xfffff1f8
    21dc:	49040000 	stmdbmi	r4, {}	; <UNPREDICTABLE>
    21e0:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    21e4:	23020000 	movwcs	r0, #8192	; 0x2000
    21e8:	0a920e0c 	beq	fe485a20 <_estack+0xde4847e8>
    21ec:	4a040000 	bmi	1021f4 <_Min_Heap_Size+0x1019f4>
    21f0:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    21f4:	23020000 	movwcs	r0, #8192	; 0x2000
    21f8:	43460d10 	movtmi	r0, #27920	; 0x6d10
    21fc:	4b040052 	blmi	10234c <_Min_Heap_Size+0x101b4c>
    2200:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2204:	23020000 	movwcs	r0, #8192	; 0x2000
    2208:	6b0f0014 	blvs	3c2260 <_Min_Heap_Size+0x3c1a60>
    220c:	0400000a 	streq	r0, [r0], #-10
    2210:	e903014c 	stmdb	r3, {r2, r3, r6, r8}
    2214:	0c000002 	stceq	0, cr0, [r0], {2}
    2218:	01ae0428 			; <UNDEFINED> instruction: 0x01ae0428
    221c:	0003fb09 	andeq	pc, r3, r9, lsl #22
    2220:	11540e00 	cmpne	r4, r0, lsl #28
    2224:	b0040000 	andlt	r0, r4, r0
    2228:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    222c:	23020000 	movwcs	r0, #8192	; 0x2000
    2230:	10660e00 	rsbne	r0, r6, r0, lsl #28
    2234:	b1040000 	mrslt	r0, (UNDEF: 4)
    2238:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    223c:	23020000 	movwcs	r0, #8192	; 0x2000
    2240:	0ee40e04 	cdpeq	14, 14, cr0, cr4, cr4, {0}
    2244:	b2040000 	andlt	r0, r4, #0
    2248:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    224c:	23020000 	movwcs	r0, #8192	; 0x2000
    2250:	0f2e0e08 	svceq	0x002e0e08
    2254:	b3040000 	movwlt	r0, #16384	; 0x4000
    2258:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    225c:	23020000 	movwcs	r0, #8192	; 0x2000
    2260:	44490d0c 	strbmi	r0, [r9], #-3340	; 0xfffff2f4
    2264:	b4040052 	strlt	r0, [r4], #-82	; 0xffffffae
    2268:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    226c:	23020000 	movwcs	r0, #8192	; 0x2000
    2270:	444f0d10 	strbmi	r0, [pc], #-3344	; 2278 <_Min_Heap_Size+0x1a78>
    2274:	b5040052 	strlt	r0, [r4, #-82]	; 0xffffffae
    2278:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    227c:	23020000 	movwcs	r0, #8192	; 0x2000
    2280:	11070e14 	tstne	r7, r4, lsl lr
    2284:	b6040000 	strlt	r0, [r4], -r0
    2288:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    228c:	23020000 	movwcs	r0, #8192	; 0x2000
    2290:	0ed20e18 	mrceq	14, 6, r0, cr2, cr8, {0}
    2294:	b7040000 	strlt	r0, [r4, -r0]
    2298:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    229c:	23020000 	movwcs	r0, #8192	; 0x2000
    22a0:	46410d1c 			; <UNDEFINED> instruction: 0x46410d1c
    22a4:	b8040052 	stmdalt	r4, {r1, r4, r6}
    22a8:	040b1101 	streq	r1, [fp], #-257	; 0xfffffeff
    22ac:	23020000 	movwcs	r0, #8192	; 0x2000
    22b0:	d40a0020 	strle	r0, [sl], #-32	; 0xffffffe0
    22b4:	0b000002 	bleq	22c4 <_Min_Heap_Size+0x1ac4>
    22b8:	0b000004 	bleq	22d0 <_Min_Heap_Size+0x1ad0>
    22bc:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    22c0:	fb090001 	blx	2422ce <_Min_Heap_Size+0x241ace>
    22c4:	0f000003 	svceq	0x00000003
    22c8:	0000110c 	andeq	r1, r0, ip, lsl #2
    22cc:	0301b904 	movweq	fp, #6404	; 0x1904
    22d0:	00000360 	andeq	r0, r0, r0, ror #6
    22d4:	f404880c 	vst2.8	{d8-d9}, [r4], ip
    22d8:	06090901 	streq	r0, [r9], -r1, lsl #18
    22dc:	430d0000 	movwmi	r0, #53248	; 0xd000
    22e0:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
    22e4:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    22e8:	23020000 	movwcs	r0, #8192	; 0x2000
    22ec:	06490e00 	strbeq	r0, [r9], -r0, lsl #28
    22f0:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    22f4:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    22f8:	23020000 	movwcs	r0, #8192	; 0x2000
    22fc:	064c0e04 	strbeq	r0, [ip], -r4, lsl #28
    2300:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    2304:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2308:	23020000 	movwcs	r0, #8192	; 0x2000
    230c:	49430d08 	stmdbmi	r3, {r3, r8, sl, fp}^
    2310:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
    2314:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2318:	23020000 	movwcs	r0, #8192	; 0x2000
    231c:	052d0e0c 	streq	r0, [sp, #-3596]!	; 0xfffff1f4
    2320:	fa040000 	blx	102328 <_Min_Heap_Size+0x101b28>
    2324:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2328:	23020000 	movwcs	r0, #8192	; 0x2000
    232c:	0a0e0e10 	beq	385b74 <_Min_Heap_Size+0x385374>
    2330:	fb040000 	blx	10233a <_Min_Heap_Size+0x101b3a>
    2334:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2338:	23020000 	movwcs	r0, #8192	; 0x2000
    233c:	096c0e14 	stmdbeq	ip!, {r2, r4, r9, sl, fp}^
    2340:	fc040000 	stc2	0, cr0, [r4], {-0}
    2344:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2348:	23020000 	movwcs	r0, #8192	; 0x2000
    234c:	08b20e18 	ldmeq	r2!, {r3, r4, r9, sl, fp}
    2350:	fd040000 	stc2	0, cr0, [r4, #-0]
    2354:	02c81101 	sbceq	r1, r8, #1073741824	; 0x40000000
    2358:	23020000 	movwcs	r0, #8192	; 0x2000
    235c:	088f0e1c 	stmeq	pc, {r2, r3, r4, r9, sl, fp}	; <UNPREDICTABLE>
    2360:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    2364:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2368:	23020000 	movwcs	r0, #8192	; 0x2000
    236c:	05c00e20 	strbeq	r0, [r0, #3616]	; 0xe20
    2370:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    2374:	02d41101 	sbcseq	r1, r4, #1073741824	; 0x40000000
    2378:	23020000 	movwcs	r0, #8192	; 0x2000
    237c:	08bc0e24 	ldmeq	ip!, {r2, r5, r9, sl, fp}
    2380:	00040000 	andeq	r0, r4, r0
    2384:	02d91102 	sbcseq	r1, r9, #-2147483648	; 0x80000000
    2388:	23020000 	movwcs	r0, #8192	; 0x2000
    238c:	0b510e28 	bleq	1445c34 <_Min_Heap_Size+0x1445434>
    2390:	01040000 	mrseq	r0, (UNDEF: 4)
    2394:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2398:	23020000 	movwcs	r0, #8192	; 0x2000
    239c:	0a7e0e30 	beq	1f85c64 <_Min_Heap_Size+0x1f85464>
    23a0:	02040000 	andeq	r0, r4, #0
    23a4:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    23a8:	23020000 	movwcs	r0, #8192	; 0x2000
    23ac:	082a0e34 	stmdaeq	sl!, {r2, r4, r5, r9, sl, fp}
    23b0:	03040000 	movweq	r0, #16384	; 0x4000
    23b4:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    23b8:	23020000 	movwcs	r0, #8192	; 0x2000
    23bc:	08c60e38 	stmiaeq	r6, {r3, r4, r5, r9, sl, fp}^
    23c0:	04040000 	streq	r0, [r4], #-0
    23c4:	02c81102 	sbceq	r1, r8, #-2147483648	; 0x80000000
    23c8:	23020000 	movwcs	r0, #8192	; 0x2000
    23cc:	09a70e3c 	stmibeq	r7!, {r2, r3, r4, r5, r9, sl, fp}
    23d0:	05040000 	streq	r0, [r4, #-0]
    23d4:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    23d8:	23020000 	movwcs	r0, #8192	; 0x2000
    23dc:	09640e40 	stmdbeq	r4!, {r6, r9, sl, fp}^
    23e0:	06040000 	streq	r0, [r4], -r0
    23e4:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    23e8:	23020000 	movwcs	r0, #8192	; 0x2000
    23ec:	08d00e44 	ldmeq	r0, {r2, r6, r9, sl, fp}^
    23f0:	07040000 	streq	r0, [r4, -r0]
    23f4:	02d91102 	sbcseq	r1, r9, #-2147483648	; 0x80000000
    23f8:	23020000 	movwcs	r0, #8192	; 0x2000
    23fc:	04f20e48 	ldrbteq	r0, [r2], #3656	; 0xe48
    2400:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    2404:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2408:	23020000 	movwcs	r0, #8192	; 0x2000
    240c:	08640e50 	stmdaeq	r4!, {r4, r6, r9, sl, fp}^
    2410:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    2414:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2418:	23020000 	movwcs	r0, #8192	; 0x2000
    241c:	09320e54 	ldmdbeq	r2!, {r2, r4, r6, r9, sl, fp}
    2420:	0a040000 	beq	102428 <_Min_Heap_Size+0x101c28>
    2424:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2428:	23020000 	movwcs	r0, #8192	; 0x2000
    242c:	08da0e58 	ldmeq	sl, {r3, r4, r6, r9, sl, fp}^
    2430:	0b040000 	bleq	102438 <_Min_Heap_Size+0x101c38>
    2434:	02c81102 	sbceq	r1, r8, #-2147483648	; 0x80000000
    2438:	23020000 	movwcs	r0, #8192	; 0x2000
    243c:	04030e5c 	streq	r0, [r3], #-3676	; 0xfffff1a4
    2440:	0c040000 	stceq	0, cr0, [r4], {-0}
    2444:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2448:	23020000 	movwcs	r0, #8192	; 0x2000
    244c:	07850e60 	streq	r0, [r5, r0, ror #28]
    2450:	0d040000 	stceq	0, cr0, [r4, #-0]
    2454:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2458:	23020000 	movwcs	r0, #8192	; 0x2000
    245c:	08e40e64 	stmiaeq	r4!, {r2, r5, r6, r9, sl, fp}^
    2460:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    2464:	02d91102 	sbcseq	r1, r9, #-2147483648	; 0x80000000
    2468:	23020000 	movwcs	r0, #8192	; 0x2000
    246c:	0aed0e68 	beq	ffb45e14 <_estack+0xdfb44bdc>
    2470:	0f040000 	svceq	0x00040000
    2474:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2478:	23020000 	movwcs	r0, #8192	; 0x2000
    247c:	53430d70 	movtpl	r0, #15728	; 0x3d70
    2480:	10040052 	andne	r0, r4, r2, asr r0
    2484:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2488:	23020000 	movwcs	r0, #8192	; 0x2000
    248c:	08ee0e74 	stmiaeq	lr!, {r2, r4, r5, r6, r9, sl, fp}^
    2490:	11040000 	mrsne	r0, (UNDEF: 4)
    2494:	02d91102 	sbcseq	r1, r9, #-2147483648	; 0x80000000
    2498:	23020000 	movwcs	r0, #8192	; 0x2000
    249c:	0abc0e78 	beq	fef05e84 <_estack+0xdef04c4c>
    24a0:	12040000 	andne	r0, r4, #0
    24a4:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    24a8:	23030000 	movwcs	r0, #12288	; 0x3000
    24ac:	180e0180 	stmdane	lr, {r7, r8}
    24b0:	04000007 	streq	r0, [r0], #-7
    24b4:	d4110213 	ldrle	r0, [r1], #-531	; 0xfffffded
    24b8:	03000002 	movweq	r0, #2
    24bc:	00018423 	andeq	r8, r1, r3, lsr #8
    24c0:	0005940f 	andeq	r9, r5, pc, lsl #8
    24c4:	02140400 	andseq	r0, r4, #0, 8
    24c8:	00041d03 	andeq	r1, r4, r3, lsl #26
    24cc:	041c0c00 	ldreq	r0, [ip], #-3072	; 0xfffff400
    24d0:	8f090295 	svchi	0x00090295
    24d4:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    24d8:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    24dc:	d4110297 	ldrle	r0, [r1], #-663	; 0xfffffd69
    24e0:	02000002 	andeq	r0, r0, #2
    24e4:	440d0023 	strmi	r0, [sp], #-35	; 0xffffffdd
    24e8:	98040052 	stmdals	r4, {r1, r4, r6}
    24ec:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    24f0:	23020000 	movwcs	r0, #8192	; 0x2000
    24f4:	52420d04 	subpl	r0, r2, #4, 26	; 0x100
    24f8:	99040052 	stmdbls	r4, {r1, r4, r6}
    24fc:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2500:	23020000 	movwcs	r0, #8192	; 0x2000
    2504:	52430d08 	subpl	r0, r3, #8, 26	; 0x200
    2508:	9a040031 	bls	1025d4 <_Min_Heap_Size+0x101dd4>
    250c:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2510:	23020000 	movwcs	r0, #8192	; 0x2000
    2514:	52430d0c 	subpl	r0, r3, #12, 26	; 0x300
    2518:	9b040032 	blls	1025e8 <_Min_Heap_Size+0x101de8>
    251c:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2520:	23020000 	movwcs	r0, #8192	; 0x2000
    2524:	52430d10 	subpl	r0, r3, #16, 26	; 0x400
    2528:	9c040033 	stcls	0, cr0, [r4], {51}	; 0x33
    252c:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2530:	23020000 	movwcs	r0, #8192	; 0x2000
    2534:	05500e14 	ldrbeq	r0, [r0, #-3604]	; 0xfffff1ec
    2538:	9d040000 	stcls	0, cr0, [r4, #-0]
    253c:	02d41102 	sbcseq	r1, r4, #-2147483648	; 0x80000000
    2540:	23020000 	movwcs	r0, #8192	; 0x2000
    2544:	770f0018 	smladvc	pc, r8, r0, r0	; <UNPREDICTABLE>
    2548:	04000007 	streq	r0, [r0], #-7
    254c:	1603029e 			; <UNDEFINED> instruction: 0x1603029e
    2550:	05000006 	streq	r0, [r0, #-6]
    2554:	010f0408 	tsteq	pc, r8, lsl #8
    2558:	07020000 	streq	r0, [r2, -r0]
    255c:	00024f01 	andeq	r4, r2, r1, lsl #30
    2560:	01270500 			; <UNDEFINED> instruction: 0x01270500
    2564:	000006ca 	andeq	r0, r0, sl, asr #13
    2568:	0006f604 	andeq	pc, r6, r4, lsl #12
    256c:	9d040000 	stcls	0, cr0, [r4, #-0]
    2570:	01000009 	tsteq	r0, r9
    2574:	000b8604 	andeq	r8, fp, r4, lsl #12
    2578:	d7040200 	strle	r0, [r4, -r0, lsl #4]
    257c:	03000006 	movweq	r0, #6
    2580:	01070200 	mrseq	r0, (UNDEF: 39)
    2584:	0000024f 	andeq	r0, r0, pc, asr #4
    2588:	e5013205 	str	r3, [r1, #-517]	; 0xfffffdfb
    258c:	04000006 	streq	r0, [r0], #-6
    2590:	00000b79 	andeq	r0, r0, r9, ror fp
    2594:	081f0400 	ldmdaeq	pc, {sl}	; <UNPREDICTABLE>
    2598:	00010000 	andeq	r0, r1, r0
    259c:	00058406 	andeq	r8, r5, r6, lsl #8
    25a0:	03350500 	teqeq	r5, #0, 10
    25a4:	000006ca 	andeq	r0, r0, sl, asr #13
    25a8:	2e061410 	cfmvdlrcs	mvd6, r1
    25ac:	00074609 	andeq	r4, r7, r9, lsl #12
    25b0:	69501100 	ldmdbvs	r0, {r8, ip}^
    25b4:	3006006e 	andcc	r0, r6, lr, rrx
    25b8:	0002c80c 	andeq	ip, r2, ip, lsl #16
    25bc:	00230200 	eoreq	r0, r3, r0, lsl #4
    25c0:	00098d12 	andeq	r8, r9, r2, lsl sp
    25c4:	0c330600 	ldceq	6, cr0, [r3], #-0
    25c8:	000002c8 	andeq	r0, r0, r8, asr #5
    25cc:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    25d0:	00000fd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    25d4:	c80c3606 	stmdagt	ip, {r1, r2, r9, sl, ip, sp}
    25d8:	02000002 	andeq	r0, r0, #2
    25dc:	fa120823 	blx	484670 <_Min_Heap_Size+0x483e70>
    25e0:	0600000b 	streq	r0, [r0], -fp
    25e4:	02c80c39 	sbceq	r0, r8, #14592	; 0x3900
    25e8:	23020000 	movwcs	r0, #8192	; 0x2000
    25ec:	0f5e120c 	svceq	0x005e120c
    25f0:	3c060000 	stccc	0, cr0, [r6], {-0}
    25f4:	0002c80c 	andeq	ip, r2, ip, lsl #16
    25f8:	10230200 	eorne	r0, r3, r0, lsl #4
    25fc:	0d1e0600 	ldceq	6, cr0, [lr, #-0]
    2600:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    2604:	0006f102 	andeq	pc, r6, r2, lsl #2
    2608:	07301000 	ldreq	r1, [r0, -r0]!
    260c:	08100930 	ldmdaeq	r0, {r4, r5, r8, fp}
    2610:	0f120000 	svceq	0x00120000
    2614:	07000009 	streq	r0, [r0, -r9]
    2618:	02c80c32 	sbceq	r0, r8, #12800	; 0x3200
    261c:	23020000 	movwcs	r0, #8192	; 0x2000
    2620:	06891200 	streq	r1, [r9], r0, lsl #4
    2624:	35070000 	strcc	r0, [r7, #-0]
    2628:	0002c80c 	andeq	ip, r2, ip, lsl #16
    262c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2630:	0005c912 	andeq	ip, r5, r2, lsl r9
    2634:	0c390700 	ldceq	7, cr0, [r9], #-0
    2638:	000002c8 	andeq	r0, r0, r8, asr #5
    263c:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    2640:	00000a17 	andeq	r0, r0, r7, lsl sl
    2644:	c80c3c07 	stmdagt	ip, {r0, r1, r2, sl, fp, ip, sp}
    2648:	02000002 	andeq	r0, r0, #2
    264c:	97120c23 	ldrls	r0, [r2, -r3, lsr #24]
    2650:	0700000a 	streq	r0, [r0, -sl]
    2654:	02c80c3f 	sbceq	r0, r8, #16128	; 0x3f00
    2658:	23020000 	movwcs	r0, #8192	; 0x2000
    265c:	07661210 			; <UNDEFINED> instruction: 0x07661210
    2660:	42070000 	andmi	r0, r7, #0
    2664:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2668:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    266c:	00098d12 	andeq	r8, r9, r2, lsl sp
    2670:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    2674:	000002c8 	andeq	r0, r0, r8, asr #5
    2678:	12182302 	andsne	r2, r8, #134217728	; 0x8000000
    267c:	00002217 	andeq	r2, r0, r7, lsl r2
    2680:	c80c4a07 	stmdagt	ip, {r0, r1, r2, r9, fp, lr}
    2684:	02000002 	andeq	r0, r0, #2
    2688:	89121c23 	ldmdbhi	r2, {r0, r1, r5, sl, fp, ip}
    268c:	07000009 	streq	r0, [r0, -r9]
    2690:	02c80c4d 	sbceq	r0, r8, #19712	; 0x4d00
    2694:	23020000 	movwcs	r0, #8192	; 0x2000
    2698:	09c21220 	stmibeq	r2, {r5, r9, ip}^
    269c:	52070000 	andpl	r0, r7, #0
    26a0:	0002c80c 	andeq	ip, r2, ip, lsl #16
    26a4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    26a8:	0005dc12 	andeq	sp, r5, r2, lsl ip
    26ac:	0c550700 	mrrceq	7, 0, r0, r5, cr0
    26b0:	000002c8 	andeq	r0, r0, r8, asr #5
    26b4:	12282302 	eorne	r2, r8, #134217728	; 0x8000000
    26b8:	00000a1e 	andeq	r0, r0, lr, lsl sl
    26bc:	c80c5b07 	stmdagt	ip, {r0, r1, r2, r8, r9, fp, ip, lr}
    26c0:	02000002 	andeq	r0, r0, #2
    26c4:	06002c23 	streq	r2, [r0], -r3, lsr #24
    26c8:	0000042f 	andeq	r0, r0, pc, lsr #8
    26cc:	52026007 	andpl	r6, r2, #7
    26d0:	02000007 	andeq	r0, r0, #7
    26d4:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    26d8:	67070000 	strvs	r0, [r7, -r0]
    26dc:	00084f01 	andeq	r4, r8, r1, lsl #30
    26e0:	06be0400 	ldrteq	r0, [lr], r0, lsl #8
    26e4:	04000000 	streq	r0, [r0], #-0
    26e8:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    26ec:	07cd0401 	strbeq	r0, [sp, r1, lsl #8]
    26f0:	04020000 	streq	r0, [r2], #-0
    26f4:	00000b13 	andeq	r0, r0, r3, lsl fp
    26f8:	05f40403 	ldrbeq	r0, [r4, #1027]!	; 0x403
    26fc:	04040000 	streq	r0, [r4], #-0
    2700:	00000728 	andeq	r0, r0, r8, lsr #14
    2704:	1d060005 	stcne	0, cr0, [r6, #-20]	; 0xffffffec
    2708:	07000009 	streq	r0, [r0, -r9]
    270c:	081c026e 	ldmdaeq	ip, {r1, r2, r3, r5, r6, r9}
    2710:	4f090000 	svcmi	0x00090000
    2714:	13000008 	movwne	r0, #8
    2718:	00000975 	andeq	r0, r0, r5, ror r9
    271c:	108a0760 	addne	r0, sl, r0, ror #14
    2720:	00000940 	andeq	r0, r0, r0, asr #18
    2724:	00083212 	andeq	r3, r8, r2, lsl r2
    2728:	1f8c0700 	svcne	0x008c0700
    272c:	00000940 	andeq	r0, r0, r0, asr #18
    2730:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    2734:	00001cf9 	strdeq	r1, [r0], -r9
    2738:	101e8e07 	andsne	r8, lr, r7, lsl #28
    273c:	02000008 	andeq	r0, r0, #8
    2740:	6f120423 	svcvs	0x00120423
    2744:	07000006 	streq	r0, [r0, -r6]
    2748:	06e51e90 	usateq	r1, #5, r0, lsl #29
    274c:	23020000 	movwcs	r0, #8192	; 0x2000
    2750:	06b81234 			; <UNDEFINED> instruction: 0x06b81234
    2754:	92070000 	andls	r0, r7, #0
    2758:	00085b1e 	andeq	r5, r8, lr, lsl fp
    275c:	35230200 	strcc	r0, [r3, #-512]!	; 0xfffffe00
    2760:	00066812 	andeq	r6, r6, r2, lsl r8
    2764:	1f940700 	svcne	0x00940700
    2768:	00000946 	andeq	r0, r0, r6, asr #18
    276c:	12382302 	eorsne	r2, r8, #134217728	; 0x8000000
    2770:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    2774:	5a219607 	bpl	867f98 <_Min_Heap_Size+0x867798>
    2778:	02000009 	andeq	r0, r0, #9
    277c:	a0123c23 	andsge	r3, r2, r3, lsr #24
    2780:	07000005 	streq	r0, [r0, -r5]
    2784:	095a2198 	ldmdbeq	sl, {r3, r4, r7, r8, sp}^
    2788:	23020000 	movwcs	r0, #8192	; 0x2000
    278c:	055e1240 	ldrbeq	r1, [lr, #-576]	; 0xfffffdc0
    2790:	9a070000 	bls	1c2798 <_Min_Heap_Size+0x1c1f98>
    2794:	00095a21 	andeq	r5, r9, r1, lsr #20
    2798:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    279c:	0008f812 	andeq	pc, r8, r2, lsl r8	; <UNPREDICTABLE>
    27a0:	219c0700 	orrscs	r0, ip, r0, lsl #14
    27a4:	0000095a 	andeq	r0, r0, sl, asr r9
    27a8:	12482302 	subne	r2, r8, #134217728	; 0x8000000
    27ac:	0000083b 	andeq	r0, r0, fp, lsr r8
    27b0:	5a219e07 	bpl	869fd4 <_Min_Heap_Size+0x8697d4>
    27b4:	02000009 	andeq	r0, r0, #9
    27b8:	aa124c23 	bge	49584c <_Min_Heap_Size+0x49504c>
    27bc:	0700000b 	streq	r0, [r0, -fp]
    27c0:	095a21a0 	ldmdbeq	sl, {r5, r7, r8, sp}^
    27c4:	23020000 	movwcs	r0, #8192	; 0x2000
    27c8:	07471250 	smlsldeq	r1, r7, r0, r2
    27cc:	a2070000 	andge	r0, r7, #0
    27d0:	0002d41e 	andeq	sp, r2, lr, lsl r4
    27d4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    27d8:	00065112 	andeq	r5, r6, r2, lsl r1
    27dc:	1ea40700 	cdpne	7, 10, cr0, cr4, cr0, {0}
    27e0:	000002c8 	andeq	r0, r0, r8, asr #5
    27e4:	12582302 	subsne	r2, r8, #134217728	; 0x8000000
    27e8:	000006ea 	andeq	r0, r0, sl, ror #13
    27ec:	c81ea607 	ldmdagt	lr, {r0, r1, r2, r9, sl, sp, pc}
    27f0:	02000002 	andeq	r0, r0, #2
    27f4:	14005c23 	strne	r5, [r0], #-3107	; 0xfffff3dd
    27f8:	00035304 	andeq	r5, r3, r4, lsl #6
    27fc:	16041500 	strne	r1, [r4], -r0, lsl #10
    2800:	00095401 	andeq	r5, r9, r1, lsl #8
    2804:	09541700 	ldmdbeq	r4, {r8, r9, sl, ip}^
    2808:	14000000 	strne	r0, [r0], #-0
    280c:	00086004 	andeq	r6, r8, r4
    2810:	48041400 	stmdami	r4, {sl, ip}
    2814:	06000009 	streq	r0, [r0], -r9
    2818:	00000977 	andeq	r0, r0, r7, ror r9
    281c:	6002a807 	andvs	sl, r2, r7, lsl #16
    2820:	10000008 	andne	r0, r0, r8
    2824:	092e081c 	stmdbeq	lr!, {r2, r3, r4, fp}
    2828:	000009df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    282c:	00055512 	andeq	r5, r5, r2, lsl r5
    2830:	0c300800 	ldceq	8, cr0, [r0], #-0
    2834:	000002c8 	andeq	r0, r0, r8, asr #5
    2838:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    283c:	00000992 	muleq	r0, r2, r9
    2840:	c80c3608 	stmdagt	ip, {r3, r9, sl, ip, sp}
    2844:	02000002 	andeq	r0, r0, #2
    2848:	40120423 	andsmi	r0, r2, r3, lsr #8
    284c:	08000006 	stmdaeq	r0, {r1, r2}
    2850:	02c80c39 	sbceq	r0, r8, #14592	; 0x3900
    2854:	23020000 	movwcs	r0, #8192	; 0x2000
    2858:	08881208 	stmeq	r8, {r3, r9, ip}
    285c:	3c080000 	stccc	0, cr0, [r8], {-0}
    2860:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2864:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2868:	00098d12 	andeq	r8, r9, r2, lsl sp
    286c:	0c430800 	mcrreq	8, 0, r0, r3, cr0
    2870:	000002c8 	andeq	r0, r0, r8, asr #5
    2874:	12102302 	andsne	r2, r0, #134217728	; 0x8000000
    2878:	00000b09 	andeq	r0, r0, r9, lsl #22
    287c:	c80c4608 	stmdagt	ip, {r3, r9, sl, lr}
    2880:	02000002 	andeq	r0, r0, #2
    2884:	fc121423 	ldc2	4, cr1, [r2], {35}	; 0x23
    2888:	08000004 	stmdaeq	r0, {r2}
    288c:	02c80c49 	sbceq	r0, r8, #18688	; 0x4900
    2890:	23020000 	movwcs	r0, #8192	; 0x2000
    2894:	ab060018 	blge	1828fc <_Min_Heap_Size+0x1820fc>
    2898:	0800000a 	stmdaeq	r0, {r1, r3}
    289c:	096c034b 	stmdbeq	ip!, {r0, r1, r3, r6, r8, r9}^
    28a0:	07020000 	streq	r0, [r2, -r0]
    28a4:	00024f01 	andeq	r4, r2, r1, lsl #30
    28a8:	01750800 	cmneq	r5, r0, lsl #16
    28ac:	00000a2a 	andeq	r0, r0, sl, lsr #20
    28b0:	000a5104 	andeq	r5, sl, r4, lsl #2
    28b4:	74040000 	strvc	r0, [r4], #-0
    28b8:	20000006 	andcs	r0, r0, r6
    28bc:	000b6504 	andeq	r6, fp, r4, lsl #10
    28c0:	4d042400 	cfstrsmi	mvf2, [r4, #-0]
    28c4:	21000008 	tstcs	r0, r8
    28c8:	0009f704 	andeq	pc, r9, r4, lsl #14
    28cc:	36042200 	strcc	r2, [r4], -r0, lsl #4
    28d0:	23000005 	movwcs	r0, #5
    28d4:	000af204 	andeq	pc, sl, r4, lsl #4
    28d8:	4f04a000 	svcmi	0x0004a000
    28dc:	e0000009 	and	r0, r0, r9
    28e0:	040d0600 	streq	r0, [sp], #-1536	; 0xfffffa00
    28e4:	87080000 	strhi	r0, [r8, -r0]
    28e8:	0009eb03 	andeq	lr, r9, r3, lsl #22
    28ec:	0a2a0900 	beq	a84cf4 <_Min_Heap_Size+0xa844f4>
    28f0:	c2060000 	andgt	r0, r6, #0
    28f4:	0800000a 	stmdaeq	r0, {r1, r3}
    28f8:	02c81290 	sbceq	r1, r8, #144, 4
    28fc:	3b090000 	blcc	242904 <_Min_Heap_Size+0x242104>
    2900:	0600000a 	streq	r0, [r0], -sl
    2904:	00000491 	muleq	r0, r1, r4
    2908:	c8129b08 	ldmdagt	r2, {r3, r8, r9, fp, ip, pc}
    290c:	09000002 	stmdbeq	r0, {r1}
    2910:	00000a4c 	andeq	r0, r0, ip, asr #20
    2914:	0007f713 	andeq	pc, r7, r3, lsl r7	; <UNPREDICTABLE>
    2918:	a0084800 	andge	r4, r8, r0, lsl #16
    291c:	000b5b10 	andeq	r5, fp, r0, lsl fp
    2920:	08321200 	ldmdaeq	r2!, {r9, ip}
    2924:	a2080000 	andge	r0, r8, #0
    2928:	000b5b22 	andeq	r5, fp, r2, lsr #22
    292c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2930:	001cf912 	andseq	pc, ip, r2, lsl r9	; <UNPREDICTABLE>
    2934:	21a40800 			; <UNDEFINED> instruction: 0x21a40800
    2938:	000009df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    293c:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    2940:	000005b5 			; <UNDEFINED> instruction: 0x000005b5
    2944:	6122a608 			; <UNDEFINED> instruction: 0x6122a608
    2948:	0200000b 	andeq	r0, r0, #11
    294c:	0d122023 	ldceq	0, cr2, [r2, #-140]	; 0xffffff74
    2950:	08000007 	stmdaeq	r0, {r0, r1, r2}
    2954:	02b721a8 	adcseq	r2, r7, #168, 2	; 0x2a
    2958:	23020000 	movwcs	r0, #8192	; 0x2000
    295c:	05091224 	streq	r1, [r9, #-548]	; 0xfffffddc
    2960:	aa080000 	bge	202968 <_Min_Heap_Size+0x202168>
    2964:	0002c321 	andeq	ip, r2, r1, lsr #6
    2968:	26230200 	strtcs	r0, [r3], -r0, lsl #4
    296c:	000b2912 	andeq	r2, fp, r2, lsl r9
    2970:	22ac0800 	adccs	r0, ip, #0, 16
    2974:	00000b67 	andeq	r0, r0, r7, ror #22
    2978:	12282302 	eorne	r2, r8, #134217728	; 0x8000000
    297c:	00000702 	andeq	r0, r0, r2, lsl #14
    2980:	b721ae08 	strlt	sl, [r1, -r8, lsl #28]!
    2984:	02000002 	andeq	r0, r0, #2
    2988:	59122c23 	ldmdbpl	r2, {r0, r1, r5, sl, fp, sp}
    298c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2990:	02c321b0 	sbceq	r2, r3, #176, 2	; 0x2c
    2994:	23020000 	movwcs	r0, #8192	; 0x2000
    2998:	0b9c122e 	bleq	fe707258 <_estack+0xde706020>
    299c:	b2080000 	andlt	r0, r8, #0
    29a0:	000a471f 	andeq	r4, sl, pc, lsl r7
    29a4:	30230200 	eorcc	r0, r3, r0, lsl #4
    29a8:	00130e12 	andseq	r0, r3, r2, lsl lr
    29ac:	24b40800 	ldrtcs	r0, [r4], #2048	; 0x800
    29b0:	00000a58 	andeq	r0, r0, r8, asr sl
    29b4:	12342302 	eorsne	r2, r4, #134217728	; 0x8000000
    29b8:	0000086e 	andeq	r0, r0, lr, ror #16
    29bc:	6d22b608 	stcvs	6, cr11, [r2, #-32]!	; 0xffffffe0
    29c0:	0200000b 	andeq	r0, r0, #11
    29c4:	9c123823 	ldcls	8, cr3, [r2], {35}	; 0x23
    29c8:	08000006 	stmdaeq	r0, {r1, r2}
    29cc:	0b6d22b8 	bleq	1b4b4b4 <_Min_Heap_Size+0x1b4acb4>
    29d0:	23020000 	movwcs	r0, #8192	; 0x2000
    29d4:	066f123c 			; <UNDEFINED> instruction: 0x066f123c
    29d8:	ba080000 	blt	2029e0 <_Min_Heap_Size+0x2021e0>
    29dc:	0006e521 	andeq	lr, r6, r1, lsr #10
    29e0:	40230200 	eormi	r0, r3, r0, lsl #4
    29e4:	00042312 	andeq	r2, r4, r2, lsl r3
    29e8:	21bc0800 			; <UNDEFINED> instruction: 0x21bc0800
    29ec:	00000a36 	andeq	r0, r0, r6, lsr sl
    29f0:	12412302 	subne	r2, r1, #134217728	; 0x8000000
    29f4:	00000b8f 	andeq	r0, r0, pc, lsl #23
    29f8:	3621c008 	strtcc	ip, [r1], -r8
    29fc:	0200000a 	andeq	r0, r0, #10
    2a00:	47124223 	ldrmi	r4, [r2, -r3, lsr #4]
    2a04:	08000007 	stmdaeq	r0, {r0, r1, r2}
    2a08:	02d421c3 	sbcseq	r2, r4, #-1073741776	; 0xc0000030
    2a0c:	23020000 	movwcs	r0, #8192	; 0x2000
    2a10:	04140044 	ldreq	r0, [r4], #-68	; 0xffffffbc
    2a14:	0000068f 	andeq	r0, r0, pc, lsl #13
    2a18:	02b20414 	adcseq	r0, r2, #20, 8	; 0x14000000
    2a1c:	04140000 	ldreq	r0, [r4], #-0
    2a20:	000002a6 	andeq	r0, r0, r6, lsr #5
    2a24:	09600414 	stmdbeq	r0!, {r2, r4, sl}^
    2a28:	f9060000 			; <UNDEFINED> instruction: 0xf9060000
    2a2c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    2a30:	0a5d03d5 	beq	174398c <_Min_Heap_Size+0x174318c>
    2a34:	e3180000 	tst	r8, #0
    2a38:	0b000006 	bleq	2a58 <_Min_Heap_Size+0x2258>
    2a3c:	0b731b23 	bleq	1cc96d0 <_Min_Heap_Size+0x1cc8ed0>
    2a40:	01010000 	mrseq	r0, (UNDEF: 1)
    2a44:	000b7f19 	andeq	r7, fp, r9, lsl pc
    2a48:	141b0100 	ldrne	r0, [fp], #-256	; 0xffffff00
    2a4c:	00900305 	addseq	r0, r0, r5, lsl #6
    2a50:	011a2000 	tsteq	sl, r0
    2a54:	00000cc8 	andeq	r0, r0, r8, asr #25
    2a58:	01065c01 	tsteq	r6, r1, lsl #24
	...
    2a64:	00000856 	andeq	r0, r0, r6, asr r8
    2a68:	000bf901 	andeq	pc, fp, r1, lsl #18
    2a6c:	0d701b00 	vldmdbeq	r0!, {d17-d16}
    2a70:	5c010000 	stcpl	0, cr0, [r1], {-0}
    2a74:	000bf92d 	andeq	pc, fp, sp, lsr #18
    2a78:	00087e00 	andeq	r7, r8, r0, lsl #28
    2a7c:	00087600 	andeq	r7, r8, r0, lsl #12
    2a80:	00001c00 	andeq	r1, r0, r0, lsl #24
    2a84:	0d010000 	stceq	0, cr0, [r1, #-0]
    2a88:	0be80000 	bleq	ffa02a90 <_estack+0xdfa01858>
    2a8c:	011d0000 	tsteq	sp, r0
    2a90:	000c0550 	andeq	r0, ip, r0, asr r5
    2a94:	1d400200 	sfmne	f0, 2, [r0, #-0]
    2a98:	0a035101 	beq	d6ea4 <_Min_Heap_Size+0xd66a4>
    2a9c:	1e000600 	cfmadd32ne	mvax0, mvfx0, mvfx0, mvfx0
    2aa0:	00000000 	andeq	r0, r0, r0
    2aa4:	00000d0f 	andeq	r0, r0, pc, lsl #26
    2aa8:	0250011d 	subseq	r0, r0, #1073741831	; 0x40000007
    2aac:	00002508 	andeq	r2, r0, r8, lsl #10
    2ab0:	0b730414 	bleq	1cc3b08 <_Min_Heap_Size+0x1cc3308>
    2ab4:	011a0000 	tsteq	sl, r0
    2ab8:	00000c99 	muleq	r0, r9, ip
    2abc:	01063b01 	tsteq	r6, r1, lsl #22
    2ac0:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
    2ac4:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
    2ac8:	000008b8 			; <UNDEFINED> instruction: 0x000008b8
    2acc:	000cc501 	andeq	ip, ip, r1, lsl #10
    2ad0:	0d701b00 	vldmdbeq	r0!, {d17-d16}
    2ad4:	3b010000 	blcc	42adc <_Min_Heap_Size+0x422dc>
    2ad8:	000bf92b 	andeq	pc, fp, fp, lsr #18
    2adc:	00090400 	andeq	r0, r9, r0, lsl #8
    2ae0:	0008fc00 	andeq	pc, r8, r0, lsl #24
    2ae4:	0c3e1f00 	ldceq	15, cr1, [lr], #-0
    2ae8:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    2aec:	00074614 	andeq	r4, r7, r4, lsl r6
    2af0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    2af4:	00085620 	andeq	r5, r8, r0, lsr #12
    2af8:	00087008 	andeq	r7, r8, r8
    2afc:	000c5a08 	andeq	r5, ip, r8, lsl #20
    2b00:	057d1f00 	ldrbeq	r1, [sp, #-3840]!	; 0xfffff100
    2b04:	45010000 	strmi	r0, [r1, #-0]
    2b08:	0002d405 	andeq	sp, r2, r5, lsl #8
    2b0c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    2b10:	08702000 	ldmdaeq	r0!, {sp}^
    2b14:	08840800 	stmeq	r4, {fp}
    2b18:	0c770800 	ldcleq	8, cr0, [r7], #-0
    2b1c:	7d1f0000 	ldcvc	0, cr0, [pc, #-0]	; 2b24 <_Min_Heap_Size+0x2324>
    2b20:	01000005 	tsteq	r0, r5
    2b24:	02d40547 	sbcseq	r0, r4, #297795584	; 0x11c00000
    2b28:	91020000 	mrsls	r0, (UNDEF: 2)
    2b2c:	9e1c0060 	cdpls	0, 1, cr0, cr12, cr0, {3}
    2b30:	1e080008 	cdpne	0, 0, cr0, cr8, cr8, {0}
    2b34:	9400000d 	strls	r0, [r0], #-13
    2b38:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    2b3c:	0c055001 	stceq	0, cr5, [r5], {1}
    2b40:	40020000 	andmi	r0, r2, r0
    2b44:	0251011d 	subseq	r0, r1, #1073741831	; 0x40000007
    2b48:	1c006491 	cfstrsne	mvf6, [r0], {145}	; 0x91
    2b4c:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
    2b50:	00000d2c 	andeq	r0, r0, ip, lsr #26
    2b54:	00000cb4 			; <UNDEFINED> instruction: 0x00000cb4
    2b58:	0250011d 	subseq	r0, r0, #1073741831	; 0x40000007
    2b5c:	011d2508 	tsteq	sp, r8, lsl #10
    2b60:	00740251 	rsbseq	r0, r4, r1, asr r2
    2b64:	0252011d 	subseq	r0, r2, #1073741831	; 0x40000007
    2b68:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    2b6c:	080008ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp}
    2b70:	00000d3b 	andeq	r0, r0, fp, lsr sp
    2b74:	0250011d 	subseq	r0, r0, #1073741831	; 0x40000007
    2b78:	00002508 	andeq	r2, r0, r8, lsl #10
    2b7c:	03ef011a 	mvneq	r0, #-2147483642	; 0x80000006
    2b80:	1f010000 	svcne	0x00010000
    2b84:	08000106 	stmdaeq	r0, {r1, r2, r8}
    2b88:	08340800 	ldmdaeq	r4!, {fp}
    2b8c:	093e0800 	ldmdbeq	lr!, {fp}
    2b90:	01010000 	mrseq	r0, (UNDEF: 1)
    2b94:	1c00000d 	stcne	0, cr0, [r0], {13}
    2b98:	08000822 	stmdaeq	r0, {r1, r5, fp}
    2b9c:	00000d4a 	andeq	r0, r0, sl, asr #26
    2ba0:	00000cf7 	strdeq	r0, [r0], -r7
    2ba4:	0550011d 	ldrbeq	r0, [r0, #-285]	; 0xfffffee3
    2ba8:	00009003 	andeq	r9, r0, r3
    2bac:	2a210020 	bcs	842c34 <_Min_Heap_Size+0x842434>
    2bb0:	59080008 	stmdbpl	r8, {r3}
    2bb4:	0000000d 	andeq	r0, r0, sp
    2bb8:	53010122 	movwpl	r0, #4386	; 0x1122
    2bbc:	5300000d 	movwpl	r0, #13
    2bc0:	0600000d 	streq	r0, [r0], -sp
    2bc4:	012307e1 	smulwteq	r3, r1, r7
    2bc8:	0010d801 	andseq	sp, r0, r1, lsl #16
    2bcc:	0010d800 	andseq	sp, r0, r0, lsl #16
    2bd0:	01070900 	tsteq	r7, r0, lsl #18
    2bd4:	01012206 	tsteq	r1, r6, lsl #4
    2bd8:	00000da3 	andeq	r0, r0, r3, lsr #27
    2bdc:	00000da3 	andeq	r0, r0, r3, lsr #27
    2be0:	2307e006 	movwcs	lr, #28678	; 0x7006
    2be4:	10280101 	eorne	r0, r8, r1, lsl #2
    2be8:	10280000 	eorne	r0, r8, r0
    2bec:	05090000 	streq	r0, [r9, #-0]
    2bf0:	01230601 			; <UNDEFINED> instruction: 0x01230601
    2bf4:	00107701 	andseq	r7, r0, r1, lsl #14
    2bf8:	00107700 	andseq	r7, r0, r0, lsl #14
    2bfc:	01060900 	tsteq	r6, r0, lsl #18
    2c00:	01012306 	tsteq	r1, r6, lsl #6
    2c04:	00000dd5 	ldrdeq	r0, [r0], -r5
    2c08:	00000dd5 	ldrdeq	r0, [r0], -r5
    2c0c:	1302ce08 	movwne	ip, #11784	; 0x2e08
    2c10:	a2010122 	andge	r0, r1, #-2147483640	; 0x80000008
    2c14:	a2000007 	andge	r0, r0, #7
    2c18:	0a000007 	beq	2c3c <_Min_Heap_Size+0x243c>
    2c1c:	bd000635 	stclt	6, cr0, [r0, #-212]	; 0xffffff2c
    2c20:	02000008 	andeq	r0, r0, #8
    2c24:	0007f000 	andeq	pc, r7, r0
    2c28:	31010400 	tstcc	r1, r0, lsl #8
    2c2c:	0c000001 	stceq	0, cr0, [r0], {1}
    2c30:	000012a4 	andeq	r1, r0, r4, lsr #5
    2c34:	0000004b 	andeq	r0, r0, fp, asr #32
    2c38:	00000148 	andeq	r0, r0, r8, asr #2
	...
    2c44:	00000fdf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2c48:	e0060102 	and	r0, r6, r2, lsl #2
    2c4c:	03000000 	movweq	r0, #0
    2c50:	000000ad 	andeq	r0, r0, sp, lsr #1
    2c54:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    2c58:	02000000 	andeq	r0, r0, #0
    2c5c:	00de0801 	sbcseq	r0, lr, r1, lsl #16
    2c60:	02020000 	andeq	r0, r2, #0
    2c64:	00012705 	andeq	r2, r1, r5, lsl #14
    2c68:	09ec0300 	stmibeq	ip!, {r8, r9}^
    2c6c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    2c70:	00005619 	andeq	r5, r0, r9, lsl r6
    2c74:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2c78:	0000000e 	andeq	r0, r0, lr
    2c7c:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
    2c80:	03000000 	movweq	r0, #0
    2c84:	00000040 	andeq	r0, r0, r0, asr #32
    2c88:	70194f02 	andsvc	r4, r9, r2, lsl #30
    2c8c:	02000000 	andeq	r0, r0, #0
    2c90:	009b0704 	addseq	r0, fp, r4, lsl #14
    2c94:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2c98:	00000005 	andeq	r0, r0, r5
    2c9c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2ca0:	00000096 	muleq	r0, r6, r0
    2ca4:	69050404 	stmdbvs	r5, {r2, sl}
    2ca8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    2cac:	00a00704 	adceq	r0, r0, r4, lsl #14
    2cb0:	af030000 	svcge	0x00030000
    2cb4:	03000000 	movweq	r0, #0
    2cb8:	00301318 	eorseq	r1, r0, r8, lsl r3
    2cbc:	93050000 	movwls	r0, #20480	; 0x5000
    2cc0:	03000000 	movweq	r0, #0
    2cc4:	000009ee 	andeq	r0, r0, lr, ror #19
    2cc8:	4a142403 	bmi	50bcdc <_Min_Heap_Size+0x50b4dc>
    2ccc:	06000000 	streq	r0, [r0], -r0
    2cd0:	000000a4 	andeq	r0, r0, r4, lsr #1
    2cd4:	00004203 	andeq	r4, r0, r3, lsl #4
    2cd8:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    2cdc:	00000064 	andeq	r0, r0, r4, rrx
    2ce0:	0000b506 	andeq	fp, r0, r6, lsl #10
    2ce4:	04180700 	ldreq	r0, [r8], #-1792	; 0xfffff900
    2ce8:	30090144 	andcc	r0, r9, r4, asr #2
    2cec:	08000001 	stmdaeq	r0, {r0}
    2cf0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    2cf4:	c1110146 	tstgt	r1, r6, asr #2
    2cf8:	02000000 	andeq	r0, r0, #0
    2cfc:	4c090023 	stcmi	0, cr0, [r9], {35}	; 0x23
    2d00:	0400000a 	streq	r0, [r0], #-10
    2d04:	c1110147 	tstgt	r1, r7, asr #2
    2d08:	02000000 	andeq	r0, r0, #0
    2d0c:	50080423 	andpl	r0, r8, r3, lsr #8
    2d10:	04005241 	streq	r5, [r0], #-577	; 0xfffffdbf
    2d14:	c1110148 	tstgt	r1, r8, asr #2
    2d18:	02000000 	andeq	r0, r0, #0
    2d1c:	2a090823 	bcs	244db0 <_Min_Heap_Size+0x2445b0>
    2d20:	04000004 	streq	r0, [r0], #-4
    2d24:	c1110149 	tstgt	r1, r9, asr #2
    2d28:	02000000 	andeq	r0, r0, #0
    2d2c:	92090c23 	andls	r0, r9, #8960	; 0x2300
    2d30:	0400000a 	streq	r0, [r0], #-10
    2d34:	c111014a 	tstgt	r1, sl, asr #2
    2d38:	02000000 	andeq	r0, r0, #0
    2d3c:	46081023 	strmi	r1, [r8], -r3, lsr #32
    2d40:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    2d44:	c111014b 	tstgt	r1, fp, asr #2
    2d48:	02000000 	andeq	r0, r0, #0
    2d4c:	0a001423 	beq	7de0 <_Min_Heap_Size+0x75e0>
    2d50:	00000a6b 	andeq	r0, r0, fp, ror #20
    2d54:	03014c04 	movweq	r4, #7172	; 0x1c04
    2d58:	000000c6 	andeq	r0, r0, r6, asr #1
    2d5c:	95041c07 	strls	r1, [r4, #-3079]	; 0xfffff3f9
    2d60:	01b60902 			; <UNDEFINED> instruction: 0x01b60902
    2d64:	53080000 	movwpl	r0, #32768	; 0x8000
    2d68:	97040052 	smlsdls	r4, r2, r0, r0
    2d6c:	00c11102 	sbceq	r1, r1, r2, lsl #2
    2d70:	23020000 	movwcs	r0, #8192	; 0x2000
    2d74:	52440800 	subpl	r0, r4, #0, 16
    2d78:	02980400 	addseq	r0, r8, #0, 8
    2d7c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2d80:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2d84:	52524208 	subspl	r4, r2, #8, 4	; 0x80000000
    2d88:	02990400 	addseq	r0, r9, #0, 8
    2d8c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2d90:	08230200 	stmdaeq	r3!, {r9}
    2d94:	31524308 	cmpcc	r2, r8, lsl #6
    2d98:	029a0400 	addseq	r0, sl, #0, 8
    2d9c:	0000c111 	andeq	ip, r0, r1, lsl r1
    2da0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    2da4:	32524308 	subscc	r4, r2, #8, 6	; 0x20000000
    2da8:	029b0400 	addseq	r0, fp, #0, 8
    2dac:	0000c111 	andeq	ip, r0, r1, lsl r1
    2db0:	10230200 	eorne	r0, r3, r0, lsl #4
    2db4:	33524308 	cmpcc	r2, #8, 6	; 0x20000000
    2db8:	029c0400 	addseq	r0, ip, #0, 8
    2dbc:	0000c111 	andeq	ip, r0, r1, lsl r1
    2dc0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    2dc4:	00055009 	andeq	r5, r5, r9
    2dc8:	029d0400 	addseq	r0, sp, #0, 8
    2dcc:	0000c111 	andeq	ip, r0, r1, lsl r1
    2dd0:	18230200 	stmdane	r3!, {r9}
    2dd4:	07770a00 	ldrbeq	r0, [r7, -r0, lsl #20]!
    2dd8:	9e040000 	cdpls	0, 0, cr0, cr4, cr0, {0}
    2ddc:	013d0302 	teqeq	sp, r2, lsl #6
    2de0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2de4:	00010f04 	andeq	r0, r1, r4, lsl #30
    2de8:	01070b00 	tsteq	r7, r0, lsl #22
    2dec:	0000003c 	andeq	r0, r0, ip, lsr r0
    2df0:	e5013205 	str	r3, [r1, #-517]	; 0xfffffdfb
    2df4:	0c000001 	stceq	0, cr0, [r0], {1}
    2df8:	00000b79 	andeq	r0, r0, r9, ror fp
    2dfc:	081f0c00 	ldmdaeq	pc, {sl, fp}	; <UNPREDICTABLE>
    2e00:	00010000 	andeq	r0, r1, r0
    2e04:	00058403 	andeq	r8, r5, r3, lsl #8
    2e08:	03350500 	teqeq	r5, #0, 10
    2e0c:	000001ca 	andeq	r0, r0, sl, asr #3
    2e10:	3006300d 	andcc	r3, r6, sp
    2e14:	0002af09 	andeq	sl, r2, r9, lsl #30
    2e18:	090f0e00 	stmdbeq	pc, {r9, sl, fp}	; <UNPREDICTABLE>
    2e1c:	32060000 	andcc	r0, r6, #0
    2e20:	0000b50c 	andeq	fp, r0, ip, lsl #10
    2e24:	00230200 	eoreq	r0, r3, r0, lsl #4
    2e28:	0006890e 	andeq	r8, r6, lr, lsl #18
    2e2c:	0c350600 	ldceq	6, cr0, [r5], #-0
    2e30:	000000b5 	strheq	r0, [r0], -r5
    2e34:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    2e38:	000005c9 	andeq	r0, r0, r9, asr #11
    2e3c:	b50c3906 	strlt	r3, [ip, #-2310]	; 0xfffff6fa
    2e40:	02000000 	andeq	r0, r0, #0
    2e44:	170e0823 	strne	r0, [lr, -r3, lsr #16]
    2e48:	0600000a 	streq	r0, [r0], -sl
    2e4c:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
    2e50:	23020000 	movwcs	r0, #8192	; 0x2000
    2e54:	0a970e0c 	beq	fe5c668c <_estack+0xde5c5454>
    2e58:	3f060000 	svccc	0x00060000
    2e5c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    2e60:	10230200 	eorne	r0, r3, r0, lsl #4
    2e64:	0007660e 	andeq	r6, r7, lr, lsl #12
    2e68:	0c420600 	mcrreq	6, 0, r0, r2, cr0
    2e6c:	000000b5 	strheq	r0, [r0], -r5
    2e70:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    2e74:	0000098d 	andeq	r0, r0, sp, lsl #19
    2e78:	b50c4506 	strlt	r4, [ip, #-1286]	; 0xfffffafa
    2e7c:	02000000 	andeq	r0, r0, #0
    2e80:	170e1823 	strne	r1, [lr, -r3, lsr #16]
    2e84:	06000022 	streq	r0, [r0], -r2, lsr #32
    2e88:	00b50c4a 	adcseq	r0, r5, sl, asr #24
    2e8c:	23020000 	movwcs	r0, #8192	; 0x2000
    2e90:	09890e1c 	stmibeq	r9, {r2, r3, r4, r9, sl, fp}
    2e94:	4d060000 	stcmi	0, cr0, [r6, #-0]
    2e98:	0000b50c 	andeq	fp, r0, ip, lsl #10
    2e9c:	20230200 	eorcs	r0, r3, r0, lsl #4
    2ea0:	0009c20e 	andeq	ip, r9, lr, lsl #4
    2ea4:	0c520600 	mrrceq	6, 0, r0, r2, cr0
    2ea8:	000000b5 	strheq	r0, [r0], -r5
    2eac:	0e242302 	cdpeq	3, 2, cr2, cr4, cr2, {0}
    2eb0:	000005dc 	ldrdeq	r0, [r0], -ip
    2eb4:	b50c5506 	strlt	r5, [ip, #-1286]	; 0xfffffafa
    2eb8:	02000000 	andeq	r0, r0, #0
    2ebc:	1e0e2823 	cdpne	8, 0, cr2, cr14, cr3, {1}
    2ec0:	0600000a 	streq	r0, [r0], -sl
    2ec4:	00b50c5b 	adcseq	r0, r5, fp, asr ip
    2ec8:	23020000 	movwcs	r0, #8192	; 0x2000
    2ecc:	2f03002c 	svccs	0x0003002c
    2ed0:	06000004 	streq	r0, [r0], -r4
    2ed4:	01f10260 	mvnseq	r0, r0, ror #4
    2ed8:	070b0000 	streq	r0, [fp, -r0]
    2edc:	00003c01 	andeq	r3, r0, r1, lsl #24
    2ee0:	01670600 	cmneq	r7, r0, lsl #12
    2ee4:	000002ee 	andeq	r0, r0, lr, ror #5
    2ee8:	0006be0c 	andeq	fp, r6, ip, lsl #28
    2eec:	b00c0000 	andlt	r0, ip, r0
    2ef0:	01000007 	tsteq	r0, r7
    2ef4:	0007cd0c 	andeq	ip, r7, ip, lsl #26
    2ef8:	130c0200 	movwne	r0, #49664	; 0xc200
    2efc:	0300000b 	movweq	r0, #11
    2f00:	0005f40c 	andeq	pc, r5, ip, lsl #8
    2f04:	280c0400 	stmdacs	ip, {sl}
    2f08:	05000007 	streq	r0, [r0, #-7]
    2f0c:	091d0300 	ldmdbeq	sp, {r8, r9}
    2f10:	6e060000 	cdpvs	0, 0, cr0, cr6, cr0, {0}
    2f14:	0002bb02 	andeq	fp, r2, r2, lsl #22
    2f18:	02ee0600 	rsceq	r0, lr, #0, 12
    2f1c:	750f0000 	strvc	r0, [pc, #-0]	; 2f24 <_Min_Heap_Size+0x2724>
    2f20:	60000009 	andvs	r0, r0, r9
    2f24:	df108a06 	svcle	0x00108a06
    2f28:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    2f2c:	00000832 	andeq	r0, r0, r2, lsr r8
    2f30:	df1f8c06 	svcle	0x001f8c06
    2f34:	02000003 	andeq	r0, r0, #3
    2f38:	f90e0023 			; <UNDEFINED> instruction: 0xf90e0023
    2f3c:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    2f40:	02af1e8e 	adceq	r1, pc, #2272	; 0x8e0
    2f44:	23020000 	movwcs	r0, #8192	; 0x2000
    2f48:	066f0e04 	strbteq	r0, [pc], -r4, lsl #28
    2f4c:	90060000 	andls	r0, r6, r0
    2f50:	0001e51e 	andeq	lr, r1, lr, lsl r5
    2f54:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    2f58:	0006b80e 	andeq	fp, r6, lr, lsl #16
    2f5c:	1e920600 	cdpne	6, 9, cr0, cr2, cr0, {0}
    2f60:	000002fa 	strdeq	r0, [r0], -sl
    2f64:	0e352302 	cdpeq	3, 3, cr2, cr5, cr2, {0}
    2f68:	00000668 	andeq	r0, r0, r8, ror #12
    2f6c:	e51f9406 	ldr	r9, [pc, #-1030]	; 2b6e <_Min_Heap_Size+0x236e>
    2f70:	02000003 	andeq	r0, r0, #3
    2f74:	bc0e3823 	stclt	8, cr3, [lr], {35}	; 0x23
    2f78:	0600000b 	streq	r0, [r0], -fp
    2f7c:	03f92196 	mvnseq	r2, #-2147483611	; 0x80000025
    2f80:	23020000 	movwcs	r0, #8192	; 0x2000
    2f84:	05a00e3c 	streq	r0, [r0, #3644]!	; 0xe3c
    2f88:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    2f8c:	0003f921 	andeq	pc, r3, r1, lsr #18
    2f90:	40230200 	eormi	r0, r3, r0, lsl #4
    2f94:	00055e0e 	andeq	r5, r5, lr, lsl #28
    2f98:	219a0600 	orrscs	r0, sl, r0, lsl #12
    2f9c:	000003f9 	strdeq	r0, [r0], -r9
    2fa0:	0e442302 	cdpeq	3, 4, cr2, cr4, cr2, {0}
    2fa4:	000008f8 	strdeq	r0, [r0], -r8
    2fa8:	f9219c06 			; <UNDEFINED> instruction: 0xf9219c06
    2fac:	02000003 	andeq	r0, r0, #3
    2fb0:	3b0e4823 	blcc	395044 <_Min_Heap_Size+0x394844>
    2fb4:	06000008 	streq	r0, [r0], -r8
    2fb8:	03f9219e 	mvnseq	r2, #-2147483609	; 0x80000027
    2fbc:	23020000 	movwcs	r0, #8192	; 0x2000
    2fc0:	0baa0e4c 	bleq	fea868f8 <_estack+0xdea856c0>
    2fc4:	a0060000 	andge	r0, r6, r0
    2fc8:	0003f921 	andeq	pc, r3, r1, lsr #18
    2fcc:	50230200 	eorpl	r0, r3, r0, lsl #4
    2fd0:	0007470e 	andeq	r4, r7, lr, lsl #14
    2fd4:	1ea20600 	cdpne	6, 10, cr0, cr2, cr0, {0}
    2fd8:	000000c1 	andeq	r0, r0, r1, asr #1
    2fdc:	0e542302 	cdpeq	3, 5, cr2, cr4, cr2, {0}
    2fe0:	00000651 	andeq	r0, r0, r1, asr r6
    2fe4:	b51ea406 	ldrlt	sl, [lr, #-1030]	; 0xfffffbfa
    2fe8:	02000000 	andeq	r0, r0, #0
    2fec:	ea0e5823 	b	399080 <_Min_Heap_Size+0x398880>
    2ff0:	06000006 	streq	r0, [r0], -r6
    2ff4:	00b51ea6 	adcseq	r1, r5, r6, lsr #29
    2ff8:	23020000 	movwcs	r0, #8192	; 0x2000
    2ffc:	0410005c 	ldreq	r0, [r0], #-92	; 0xffffffa4
    3000:	00000130 	andeq	r0, r0, r0, lsr r1
    3004:	01120411 	tsteq	r2, r1, lsl r4
    3008:	000003f3 	strdeq	r0, [r0], -r3
    300c:	0003f313 	andeq	pc, r3, r3, lsl r3	; <UNPREDICTABLE>
    3010:	04100000 	ldreq	r0, [r0], #-0
    3014:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3018:	03e70410 	mvneq	r0, #16, 8	; 0x10000000
    301c:	77030000 	strvc	r0, [r3, -r0]
    3020:	06000009 	streq	r0, [r0], -r9
    3024:	02ff02a8 	rscseq	r0, pc, #168, 4	; 0x8000000a
    3028:	1c0d0000 	stcne	0, cr0, [sp], {-0}
    302c:	7e092e07 	cdpvc	14, 0, cr2, cr9, cr7, {0}
    3030:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    3034:	00000555 	andeq	r0, r0, r5, asr r5
    3038:	b50c3007 	strlt	r3, [ip, #-7]
    303c:	02000000 	andeq	r0, r0, #0
    3040:	920e0023 	andls	r0, lr, #35	; 0x23
    3044:	07000009 	streq	r0, [r0, -r9]
    3048:	00b50c36 	adcseq	r0, r5, r6, lsr ip
    304c:	23020000 	movwcs	r0, #8192	; 0x2000
    3050:	06400e04 	strbeq	r0, [r0], -r4, lsl #28
    3054:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    3058:	0000b50c 	andeq	fp, r0, ip, lsl #10
    305c:	08230200 	stmdaeq	r3!, {r9}
    3060:	0008880e 	andeq	r8, r8, lr, lsl #16
    3064:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    3068:	000000b5 	strheq	r0, [r0], -r5
    306c:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    3070:	0000098d 	andeq	r0, r0, sp, lsl #19
    3074:	b50c4307 	strlt	r4, [ip, #-775]	; 0xfffffcf9
    3078:	02000000 	andeq	r0, r0, #0
    307c:	090e1023 	stmdbeq	lr, {r0, r1, r5, ip}
    3080:	0700000b 	streq	r0, [r0, -fp]
    3084:	00b50c46 	adcseq	r0, r5, r6, asr #24
    3088:	23020000 	movwcs	r0, #8192	; 0x2000
    308c:	04fc0e14 	ldrbteq	r0, [ip], #3604	; 0xe14
    3090:	49070000 	stmdbmi	r7, {}	; <UNPREDICTABLE>
    3094:	0000b50c 	andeq	fp, r0, ip, lsl #10
    3098:	18230200 	stmdane	r3!, {r9}
    309c:	0aab0300 	beq	feac3ca4 <_estack+0xdeac2a6c>
    30a0:	4b070000 	blmi	1c30a8 <_Min_Heap_Size+0x1c28a8>
    30a4:	00040b03 	andeq	r0, r4, r3, lsl #22
    30a8:	01070b00 	tsteq	r7, r0, lsl #22
    30ac:	0000003c 	andeq	r0, r0, ip, lsr r0
    30b0:	c9017507 	stmdbgt	r1, {r0, r1, r2, r8, sl, ip, sp, lr}
    30b4:	0c000004 	stceq	0, cr0, [r0], {4}
    30b8:	00000a51 	andeq	r0, r0, r1, asr sl
    30bc:	06740c00 	ldrbteq	r0, [r4], -r0, lsl #24
    30c0:	0c200000 	stceq	0, cr0, [r0], #-0
    30c4:	00000b65 	andeq	r0, r0, r5, ror #22
    30c8:	084d0c24 	stmdaeq	sp, {r2, r5, sl, fp}^
    30cc:	0c210000 	stceq	0, cr0, [r1], #-0
    30d0:	000009f7 	strdeq	r0, [r0], -r7
    30d4:	05360c22 	ldreq	r0, [r6, #-3106]!	; 0xfffff3de
    30d8:	0c230000 	stceq	0, cr0, [r3], #-0
    30dc:	00000af2 	strdeq	r0, [r0], -r2
    30e0:	094f0ca0 	stmdbeq	pc, {r5, r7, sl, fp}^	; <UNPREDICTABLE>
    30e4:	00e00000 	rsceq	r0, r0, r0
    30e8:	00040d03 	andeq	r0, r4, r3, lsl #26
    30ec:	03870700 	orreq	r0, r7, #0, 14
    30f0:	0000048a 	andeq	r0, r0, sl, lsl #9
    30f4:	0004c906 	andeq	ip, r4, r6, lsl #18
    30f8:	0ac20300 	beq	ff083d00 <_estack+0xdf082ac8>
    30fc:	90070000 	andls	r0, r7, r0
    3100:	0000b512 	andeq	fp, r0, r2, lsl r5
    3104:	04da0600 	ldrbeq	r0, [sl], #1536	; 0x600
    3108:	91030000 	mrsls	r0, (UNDEF: 3)
    310c:	07000004 	streq	r0, [r0, -r4]
    3110:	00b5129b 	umlalseq	r1, r5, fp, r2
    3114:	eb060000 	bl	18311c <_Min_Heap_Size+0x18291c>
    3118:	0f000004 	svceq	0x00000004
    311c:	000007f7 	strdeq	r0, [r0], -r7
    3120:	10a00748 	adcne	r0, r0, r8, asr #14
    3124:	000005fa 	strdeq	r0, [r0], -sl
    3128:	0008320e 	andeq	r3, r8, lr, lsl #4
    312c:	22a20700 	adccs	r0, r2, #0, 14
    3130:	000005fa 	strdeq	r0, [r0], -sl
    3134:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    3138:	00001cf9 	strdeq	r1, [r0], -r9
    313c:	7e21a407 	cdpvc	4, 2, cr10, cr1, cr7, {0}
    3140:	02000004 	andeq	r0, r0, #4
    3144:	b50e0423 	strlt	r0, [lr, #-1059]	; 0xfffffbdd
    3148:	07000005 	streq	r0, [r0, -r5]
    314c:	060022a6 	streq	r2, [r0], -r6, lsr #5
    3150:	23020000 	movwcs	r0, #8192	; 0x2000
    3154:	070d0e20 	streq	r0, [sp, -r0, lsr #28]
    3158:	a8070000 	stmdage	r7, {}	; <UNPREDICTABLE>
    315c:	0000a421 	andeq	sl, r0, r1, lsr #8
    3160:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    3164:	0005090e 	andeq	r0, r5, lr, lsl #18
    3168:	21aa0700 			; <UNDEFINED> instruction: 0x21aa0700
    316c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    3170:	0e262302 	cdpeq	3, 2, cr2, cr6, cr2, {0}
    3174:	00000b29 	andeq	r0, r0, r9, lsr #22
    3178:	0622ac07 	strteq	sl, [r2], -r7, lsl #24
    317c:	02000006 	andeq	r0, r0, #6
    3180:	020e2823 	andeq	r2, lr, #2293760	; 0x230000
    3184:	07000007 	streq	r0, [r0, -r7]
    3188:	00a421ae 	adceq	r2, r4, lr, lsr #3
    318c:	23020000 	movwcs	r0, #8192	; 0x2000
    3190:	0b590e2c 	bleq	1646a48 <_Min_Heap_Size+0x1646248>
    3194:	b0070000 	andlt	r0, r7, r0
    3198:	0000b021 	andeq	fp, r0, r1, lsr #32
    319c:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    31a0:	000b9c0e 	andeq	r9, fp, lr, lsl #24
    31a4:	1fb20700 	svcne	0x00b20700
    31a8:	000004e6 	andeq	r0, r0, r6, ror #9
    31ac:	0e302302 	cdpeq	3, 3, cr2, cr0, cr2, {0}
    31b0:	0000130e 	andeq	r1, r0, lr, lsl #6
    31b4:	f724b407 			; <UNDEFINED> instruction: 0xf724b407
    31b8:	02000004 	andeq	r0, r0, #4
    31bc:	6e0e3423 	cdpvs	4, 0, cr3, cr14, cr3, {1}
    31c0:	07000008 	streq	r0, [r0, -r8]
    31c4:	060c22b6 			; <UNDEFINED> instruction: 0x060c22b6
    31c8:	23020000 	movwcs	r0, #8192	; 0x2000
    31cc:	069c0e38 			; <UNDEFINED> instruction: 0x069c0e38
    31d0:	b8070000 	stmdalt	r7, {}	; <UNPREDICTABLE>
    31d4:	00060c22 	andeq	r0, r6, r2, lsr #24
    31d8:	3c230200 	sfmcc	f0, 4, [r3], #-0
    31dc:	00066f0e 	andeq	r6, r6, lr, lsl #30
    31e0:	21ba0700 			; <UNDEFINED> instruction: 0x21ba0700
    31e4:	000001e5 	andeq	r0, r0, r5, ror #3
    31e8:	0e402302 	cdpeq	3, 4, cr2, cr0, cr2, {0}
    31ec:	00000423 	andeq	r0, r0, r3, lsr #8
    31f0:	d521bc07 	strle	fp, [r1, #-3079]!	; 0xfffff3f9
    31f4:	02000004 	andeq	r0, r0, #4
    31f8:	8f0e4123 	svchi	0x000e4123
    31fc:	0700000b 	streq	r0, [r0, -fp]
    3200:	04d521c0 	ldrbeq	r2, [r5], #448	; 0x1c0
    3204:	23020000 	movwcs	r0, #8192	; 0x2000
    3208:	07470e42 	strbeq	r0, [r7, -r2, asr #28]
    320c:	c3070000 	movwgt	r0, #28672	; 0x7000
    3210:	0000c121 	andeq	ip, r0, r1, lsr #2
    3214:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    3218:	b6041000 	strlt	r1, [r4], -r0
    321c:	10000001 	andne	r0, r0, r1
    3220:	00009f04 	andeq	r9, r0, r4, lsl #30
    3224:	93041000 	movwls	r1, #16384	; 0x4000
    3228:	10000000 	andne	r0, r0, r0
    322c:	0003ff04 	andeq	pc, r3, r4, lsl #30
    3230:	07f90300 	ldrbeq	r0, [r9, r0, lsl #6]!
    3234:	d5070000 	strle	r0, [r7, #-0]
    3238:	0004fc03 	andeq	pc, r4, r3, lsl #24
    323c:	08010200 	stmdaeq	r1, {r9}
    3240:	000000e7 	andeq	r0, r0, r7, ror #1
    3244:	00061e05 	andeq	r1, r6, r5, lsl #28
    3248:	06e31400 	strbteq	r1, [r3], r0, lsl #8
    324c:	3b010000 	blcc	43254 <_Min_Heap_Size+0x42a54>
    3250:	0006121b 	andeq	r1, r6, fp, lsl r2
    3254:	15010100 	strne	r0, [r1, #-256]	; 0xffffff00
    3258:	00120d01 	andseq	r0, r2, r1, lsl #26
    325c:	06cd0100 	strbeq	r0, [sp], r0, lsl #2
    3260:	00091401 	andeq	r1, r9, r1, lsl #8
    3264:	00092408 	andeq	r2, r9, r8, lsl #8
    3268:	00095e08 	andeq	r5, r9, r8, lsl #28
    326c:	065d0100 	ldrbeq	r0, [sp], -r0, lsl #2
    3270:	1c160000 	ldcne	0, cr0, [r6], {-0}
    3274:	95080009 	strls	r0, [r8, #-9]
    3278:	00000008 	andeq	r0, r0, r8
    327c:	12620115 	rsbne	r0, r2, #1073741829	; 0x40000005
    3280:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    3284:	090a0106 	stmdbeq	sl, {r1, r2, r8}
    3288:	09120800 	ldmdbeq	r2, {fp}
    328c:	097e0800 	ldmdbeq	lr!, {fp}^
    3290:	82010000 	andhi	r0, r1, #0
    3294:	16000006 	strne	r0, [r0], -r6
    3298:	08000910 	stmdaeq	r0, {r4, r8, fp}
    329c:	000008a4 	andeq	r0, r0, r4, lsr #17
    32a0:	83011700 	movwhi	r1, #5888	; 0x1700
    32a4:	01000012 	tsteq	r0, r2, lsl r0
    32a8:	080106ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, sl}
    32ac:	0a080009 	beq	2032d8 <_Min_Heap_Size+0x202ad8>
    32b0:	02080009 	andeq	r0, r8, #9
    32b4:	1701007d 	smlsdxne	r1, sp, r0, r0
    32b8:	00124501 	andseq	r4, r2, r1, lsl #10
    32bc:	069e0100 	ldreq	r0, [lr], r0, lsl #2
    32c0:	00090601 	andeq	r0, r9, r1, lsl #12
    32c4:	00090808 	andeq	r0, r9, r8, lsl #16
    32c8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    32cc:	56011701 	strpl	r1, [r1], -r1, lsl #14
    32d0:	01000012 	tsteq	r0, r2, lsl r0
    32d4:	04010691 	streq	r0, [r1], #-1681	; 0xfffff96f
    32d8:	06080009 	streq	r0, [r8], -r9
    32dc:	02080009 	andeq	r0, r8, #9
    32e0:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    32e4:	0011da01 	andseq	sp, r1, r1, lsl #20
    32e8:	06820100 	streq	r0, [r2], r0, lsl #2
    32ec:	0008f001 	andeq	pc, r8, r1
    32f0:	00090408 	andeq	r0, r9, r8, lsl #8
    32f4:	00099e08 	andeq	r9, r9, r8, lsl #28
    32f8:	070c0100 	streq	r0, [ip, -r0, lsl #2]
    32fc:	46180000 	ldrmi	r0, [r8], -r0
    3300:	1c000009 	stcne	0, cr0, [r0], {9}
    3304:	01000007 	tsteq	r0, r7
    3308:	2c580305 	mrrccs	3, 0, r0, r8, cr5
    330c:	fa190800 	blx	645314 <_Min_Heap_Size+0x644b14>
    3310:	b2080008 	andlt	r0, r8, #8
    3314:	1a000008 	bne	333c <_Min_Heap_Size+0x2b3c>
    3318:	03055001 	movweq	r5, #20481	; 0x5001
    331c:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}
    3320:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    3324:	002c5803 	eoreq	r5, ip, r3, lsl #16
    3328:	1b000008 	blne	3350 <_Min_Heap_Size+0x2b50>
    332c:	00000625 	andeq	r0, r0, r5, lsr #12
    3330:	0000071c 	andeq	r0, r0, ip, lsl r7
    3334:	00008c1c 	andeq	r8, r0, ip, lsl ip
    3338:	05001200 	streq	r1, [r0, #-512]	; 0xfffffe00
    333c:	0000070c 	andeq	r0, r0, ip, lsl #14
    3340:	12720115 	rsbsne	r0, r2, #1073741829	; 0x40000005
    3344:	73010000 	movwvc	r0, #4096	; 0x1000
    3348:	08dc0106 	ldmeq	ip, {r1, r2, r8}^
    334c:	08f00800 	ldmeq	r0!, {fp}^
    3350:	09be0800 	ldmibeq	lr!, {fp}
    3354:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    3358:	18000007 	stmdane	r0, {r0, r1, r2}
    335c:	00000946 	andeq	r0, r0, r6, asr #18
    3360:	00000779 	andeq	r0, r0, r9, ror r7
    3364:	6c030501 	cfstr32vs	mvfx0, [r3], {1}
    3368:	1908002c 	stmdbne	r8, {r2, r3, r5}
    336c:	080008e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, fp}
    3370:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    3374:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3378:	002be803 	eoreq	lr, fp, r3, lsl #16
    337c:	51011a08 	tstpl	r1, r8, lsl #20
    3380:	2c6c0305 	stclcs	3, cr0, [ip], #-20	; 0xffffffec
    3384:	00000800 	andeq	r0, r0, r0, lsl #16
    3388:	0006251b 	andeq	r2, r6, fp, lsl r5
    338c:	00077900 	andeq	r7, r7, r0, lsl #18
    3390:	008c1c00 	addeq	r1, ip, r0, lsl #24
    3394:	00100000 	andseq	r0, r0, r0
    3398:	00076905 	andeq	r6, r7, r5, lsl #18
    339c:	92011500 	andls	r1, r1, #0, 10
    33a0:	01000012 	tsteq	r0, r2, lsl r0
    33a4:	c8010664 	stmdagt	r1, {r2, r5, r6, r9, sl}
    33a8:	dc080008 	stcle	0, cr0, [r8], {8}
    33ac:	de080008 	cdple	0, 0, cr0, cr8, cr8, {0}
    33b0:	01000009 	tsteq	r0, r9
    33b4:	000007c6 	andeq	r0, r0, r6, asr #15
    33b8:	00094618 	andeq	r4, r9, r8, lsl r6
    33bc:	0007d600 	andeq	sp, r7, r0, lsl #12
    33c0:	03050100 	movweq	r0, #20736	; 0x5100
    33c4:	08002c80 	stmdaeq	r0, {r7, sl, fp, sp}
    33c8:	0008d219 	andeq	sp, r8, r9, lsl r2
    33cc:	0008b208 	andeq	fp, r8, r8, lsl #4
    33d0:	50011a00 	andpl	r1, r1, r0, lsl #20
    33d4:	2be80305 	blcs	ffa03ff0 <_estack+0xdfa02db8>
    33d8:	011a0800 	tsteq	sl, r0, lsl #16
    33dc:	80030551 	andhi	r0, r3, r1, asr r5
    33e0:	0008002c 	andeq	r0, r8, ip, lsr #32
    33e4:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    33e8:	07d60000 	ldrbeq	r0, [r6, r0]
    33ec:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    33f0:	11000000 	mrsne	r0, (UNDEF: 0)
    33f4:	07c60500 	strbeq	r0, [r6, r0, lsl #10]
    33f8:	01150000 	tsteq	r5, r0
    33fc:	0000122b 	andeq	r1, r0, fp, lsr #4
    3400:	01065501 	tsteq	r6, r1, lsl #10
	...
    340c:	000009fe 	strdeq	r0, [r0], -lr
    3410:	00082301 	andeq	r2, r8, r1, lsl #6
    3414:	09461800 	stmdbeq	r6, {fp, ip}^
    3418:	08330000 	ldmdaeq	r3!, {}	; <UNPREDICTABLE>
    341c:	05010000 	streq	r0, [r1, #-0]
    3420:	00000003 	andeq	r0, r0, r3
    3424:	00001900 	andeq	r1, r0, r0, lsl #18
    3428:	08b20000 	ldmeq	r2!, {}	; <UNPREDICTABLE>
    342c:	011a0000 	tsteq	sl, r0
    3430:	e8030550 	stmda	r3, {r4, r6, r8, sl}
    3434:	1a08002b 	bne	2034e8 <_Min_Heap_Size+0x202ce8>
    3438:	03055101 	movweq	r5, #20737	; 0x5101
    343c:	00000000 	andeq	r0, r0, r0
    3440:	251b0000 	ldrcs	r0, [fp, #-0]
    3444:	33000006 	movwcc	r0, #6
    3448:	1c000008 	stcne	0, cr0, [r0], {8}
    344c:	0000008c 	andeq	r0, r0, ip, lsl #1
    3450:	23050019 	movwcs	r0, #20505	; 0x5019
    3454:	15000008 	strne	r0, [r0, #-8]
    3458:	00120101 	andseq	r0, r2, r1, lsl #2
    345c:	06460100 	strbeq	r0, [r6], -r0, lsl #2
    3460:	0008b401 	andeq	fp, r8, r1, lsl #8
    3464:	0008c808 	andeq	ip, r8, r8, lsl #16
    3468:	000a1e08 	andeq	r1, sl, r8, lsl #28
    346c:	08800100 	stmeq	r0, {r8}
    3470:	46180000 	ldrmi	r0, [r8], -r0
    3474:	90000009 	andls	r0, r0, r9
    3478:	01000008 	tsteq	r0, r8
    347c:	2c940305 	ldccs	3, cr0, [r4], {5}
    3480:	be190800 	cdplt	8, 1, cr0, cr9, cr0, {0}
    3484:	b2080008 	andlt	r0, r8, #8
    3488:	1a000008 	bne	34b0 <_Min_Heap_Size+0x2cb0>
    348c:	03055001 	movweq	r5, #20481	; 0x5001
    3490:	08002be8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, fp, sp}
    3494:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    3498:	002c9403 	eoreq	r9, ip, r3, lsl #8
    349c:	1b000008 	blne	34c4 <_Min_Heap_Size+0x2cc4>
    34a0:	00000625 	andeq	r0, r0, r5, lsr #12
    34a4:	00000890 	muleq	r0, r0, r8
    34a8:	00008c1c 	andeq	r8, r0, ip, lsl ip
    34ac:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
    34b0:	00000880 	andeq	r0, r0, r0, lsl #17
    34b4:	ed01011d 	stfs	f0, [r1, #-116]	; 0xffffff8c
    34b8:	ed000011 	stc	0, cr0, [r0, #-68]	; 0xffffffbc
    34bc:	07000011 	smladeq	r0, r1, r0, r0
    34c0:	1e060302 	cdpne	3, 0, cr0, cr6, cr2, {0}
    34c4:	121f0101 	andsne	r0, pc, #1073741824	; 0x40000000
    34c8:	121f0000 	andsne	r0, pc, #0
    34cc:	e8080000 	stmda	r8, {}	; <UNPREDICTABLE>
    34d0:	01011e06 	tsteq	r1, r6, lsl #28
    34d4:	000003e8 	andeq	r0, r0, r8, ror #7
    34d8:	000003e8 	andeq	r0, r0, r8, ror #7
    34dc:	0005c809 	andeq	ip, r5, r9, lsl #16
    34e0:	000002e7 	andeq	r0, r0, r7, ror #5
    34e4:	09980002 	ldmibeq	r8, {r1}
    34e8:	01040000 	mrseq	r0, (UNDEF: 4)
    34ec:	00000131 	andeq	r0, r0, r1, lsr r1
    34f0:	0012cb0c 	andseq	ip, r2, ip, lsl #22
    34f4:	00004b00 	andeq	r4, r0, r0, lsl #22
    34f8:	0001a000 	andeq	sl, r1, r0
	...
    3504:	00133200 	andseq	r3, r3, r0, lsl #4
    3508:	06010200 	streq	r0, [r1], -r0, lsl #4
    350c:	000000e0 	andeq	r0, r0, r0, ror #1
    3510:	de080102 	adflee	f0, f0, f2
    3514:	02000000 	andeq	r0, r0, #0
    3518:	01270502 			; <UNDEFINED> instruction: 0x01270502
    351c:	02020000 	andeq	r0, r2, #0
    3520:	00000e07 	andeq	r0, r0, r7, lsl #28
    3524:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3528:	00000005 	andeq	r0, r0, r5
    352c:	00004003 	andeq	r4, r0, r3
    3530:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    3534:	00000058 	andeq	r0, r0, r8, asr r0
    3538:	9b070402 	blls	1c4548 <_Min_Heap_Size+0x1c3d48>
    353c:	02000000 	andeq	r0, r0, #0
    3540:	00000508 	andeq	r0, r0, r8, lsl #10
    3544:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3548:	00009607 	andeq	r9, r0, r7, lsl #12
    354c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    3550:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3554:	a0070402 	andge	r0, r7, r2, lsl #8
    3558:	03000000 	movweq	r0, #0
    355c:	00000042 	andeq	r0, r0, r2, asr #32
    3560:	4c143003 	ldcmi	0, cr3, [r4], {3}
    3564:	05000000 	streq	r0, [r0, #-0]
    3568:	0000007b 	andeq	r0, r0, fp, ror r0
    356c:	00007b06 	andeq	r7, r0, r6, lsl #22
    3570:	00009c00 	andeq	r9, r0, r0, lsl #24
    3574:	00740700 	rsbseq	r0, r4, r0, lsl #14
    3578:	00010000 	andeq	r0, r1, r0
    357c:	f4048808 	vst2.8	{d8-d9}, [r4], r8
    3580:	02880901 	addeq	r0, r8, #16384	; 0x4000
    3584:	43090000 	movwmi	r0, #36864	; 0x9000
    3588:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
    358c:	00871101 	addeq	r1, r7, r1, lsl #2
    3590:	23020000 	movwcs	r0, #8192	; 0x2000
    3594:	06490a00 	strbeq	r0, [r9], -r0, lsl #20
    3598:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    359c:	00871101 	addeq	r1, r7, r1, lsl #2
    35a0:	23020000 	movwcs	r0, #8192	; 0x2000
    35a4:	064c0a04 	strbeq	r0, [ip], -r4, lsl #20
    35a8:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    35ac:	00871101 	addeq	r1, r7, r1, lsl #2
    35b0:	23020000 	movwcs	r0, #8192	; 0x2000
    35b4:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    35b8:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
    35bc:	00871101 	addeq	r1, r7, r1, lsl #2
    35c0:	23020000 	movwcs	r0, #8192	; 0x2000
    35c4:	052d0a0c 	streq	r0, [sp, #-2572]!	; 0xfffff5f4
    35c8:	fa040000 	blx	1035d0 <_Min_Heap_Size+0x102dd0>
    35cc:	00871101 	addeq	r1, r7, r1, lsl #2
    35d0:	23020000 	movwcs	r0, #8192	; 0x2000
    35d4:	0a0e0a10 	beq	385e1c <_Min_Heap_Size+0x38561c>
    35d8:	fb040000 	blx	1035e2 <_Min_Heap_Size+0x102de2>
    35dc:	00871101 	addeq	r1, r7, r1, lsl #2
    35e0:	23020000 	movwcs	r0, #8192	; 0x2000
    35e4:	096c0a14 	stmdbeq	ip!, {r2, r4, r9, fp}^
    35e8:	fc040000 	stc2	0, cr0, [r4], {-0}
    35ec:	00871101 	addeq	r1, r7, r1, lsl #2
    35f0:	23020000 	movwcs	r0, #8192	; 0x2000
    35f4:	08b20a18 	ldmeq	r2!, {r3, r4, r9, fp}
    35f8:	fd040000 	stc2	0, cr0, [r4, #-0]
    35fc:	007b1101 	rsbseq	r1, fp, r1, lsl #2
    3600:	23020000 	movwcs	r0, #8192	; 0x2000
    3604:	088f0a1c 	stmeq	pc, {r2, r3, r4, r9, fp}	; <UNPREDICTABLE>
    3608:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    360c:	00871101 	addeq	r1, r7, r1, lsl #2
    3610:	23020000 	movwcs	r0, #8192	; 0x2000
    3614:	05c00a20 	strbeq	r0, [r0, #2592]	; 0xa20
    3618:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    361c:	00871101 	addeq	r1, r7, r1, lsl #2
    3620:	23020000 	movwcs	r0, #8192	; 0x2000
    3624:	08bc0a24 	ldmeq	ip!, {r2, r5, r9, fp}
    3628:	00040000 	andeq	r0, r4, r0
    362c:	008c1102 	addeq	r1, ip, r2, lsl #2
    3630:	23020000 	movwcs	r0, #8192	; 0x2000
    3634:	0b510a28 	bleq	1445edc <_Min_Heap_Size+0x14456dc>
    3638:	01040000 	mrseq	r0, (UNDEF: 4)
    363c:	00871102 	addeq	r1, r7, r2, lsl #2
    3640:	23020000 	movwcs	r0, #8192	; 0x2000
    3644:	0a7e0a30 	beq	1f85f0c <_Min_Heap_Size+0x1f8570c>
    3648:	02040000 	andeq	r0, r4, #0
    364c:	00871102 	addeq	r1, r7, r2, lsl #2
    3650:	23020000 	movwcs	r0, #8192	; 0x2000
    3654:	082a0a34 	stmdaeq	sl!, {r2, r4, r5, r9, fp}
    3658:	03040000 	movweq	r0, #16384	; 0x4000
    365c:	00871102 	addeq	r1, r7, r2, lsl #2
    3660:	23020000 	movwcs	r0, #8192	; 0x2000
    3664:	08c60a38 	stmiaeq	r6, {r3, r4, r5, r9, fp}^
    3668:	04040000 	streq	r0, [r4], #-0
    366c:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    3670:	23020000 	movwcs	r0, #8192	; 0x2000
    3674:	09a70a3c 	stmibeq	r7!, {r2, r3, r4, r5, r9, fp}
    3678:	05040000 	streq	r0, [r4, #-0]
    367c:	00871102 	addeq	r1, r7, r2, lsl #2
    3680:	23020000 	movwcs	r0, #8192	; 0x2000
    3684:	09640a40 	stmdbeq	r4!, {r6, r9, fp}^
    3688:	06040000 	streq	r0, [r4], -r0
    368c:	00871102 	addeq	r1, r7, r2, lsl #2
    3690:	23020000 	movwcs	r0, #8192	; 0x2000
    3694:	08d00a44 	ldmeq	r0, {r2, r6, r9, fp}^
    3698:	07040000 	streq	r0, [r4, -r0]
    369c:	008c1102 	addeq	r1, ip, r2, lsl #2
    36a0:	23020000 	movwcs	r0, #8192	; 0x2000
    36a4:	04f20a48 	ldrbteq	r0, [r2], #2632	; 0xa48
    36a8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    36ac:	00871102 	addeq	r1, r7, r2, lsl #2
    36b0:	23020000 	movwcs	r0, #8192	; 0x2000
    36b4:	08640a50 	stmdaeq	r4!, {r4, r6, r9, fp}^
    36b8:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    36bc:	00871102 	addeq	r1, r7, r2, lsl #2
    36c0:	23020000 	movwcs	r0, #8192	; 0x2000
    36c4:	09320a54 	ldmdbeq	r2!, {r2, r4, r6, r9, fp}
    36c8:	0a040000 	beq	1036d0 <_Min_Heap_Size+0x102ed0>
    36cc:	00871102 	addeq	r1, r7, r2, lsl #2
    36d0:	23020000 	movwcs	r0, #8192	; 0x2000
    36d4:	08da0a58 	ldmeq	sl, {r3, r4, r6, r9, fp}^
    36d8:	0b040000 	bleq	1036e0 <_Min_Heap_Size+0x102ee0>
    36dc:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    36e0:	23020000 	movwcs	r0, #8192	; 0x2000
    36e4:	04030a5c 	streq	r0, [r3], #-2652	; 0xfffff5a4
    36e8:	0c040000 	stceq	0, cr0, [r4], {-0}
    36ec:	00871102 	addeq	r1, r7, r2, lsl #2
    36f0:	23020000 	movwcs	r0, #8192	; 0x2000
    36f4:	07850a60 	streq	r0, [r5, r0, ror #20]
    36f8:	0d040000 	stceq	0, cr0, [r4, #-0]
    36fc:	00871102 	addeq	r1, r7, r2, lsl #2
    3700:	23020000 	movwcs	r0, #8192	; 0x2000
    3704:	08e40a64 	stmiaeq	r4!, {r2, r5, r6, r9, fp}^
    3708:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    370c:	008c1102 	addeq	r1, ip, r2, lsl #2
    3710:	23020000 	movwcs	r0, #8192	; 0x2000
    3714:	0aed0a68 	beq	ffb460bc <_estack+0xdfb44e84>
    3718:	0f040000 	svceq	0x00040000
    371c:	00871102 	addeq	r1, r7, r2, lsl #2
    3720:	23020000 	movwcs	r0, #8192	; 0x2000
    3724:	53430970 	movtpl	r0, #14704	; 0x3970
    3728:	10040052 	andne	r0, r4, r2, asr r0
    372c:	00871102 	addeq	r1, r7, r2, lsl #2
    3730:	23020000 	movwcs	r0, #8192	; 0x2000
    3734:	08ee0a74 	stmiaeq	lr!, {r2, r4, r5, r6, r9, fp}^
    3738:	11040000 	mrsne	r0, (UNDEF: 4)
    373c:	008c1102 	addeq	r1, ip, r2, lsl #2
    3740:	23020000 	movwcs	r0, #8192	; 0x2000
    3744:	0abc0a78 	beq	fef0612c <_estack+0xdef04ef4>
    3748:	12040000 	andne	r0, r4, #0
    374c:	00871102 	addeq	r1, r7, r2, lsl #2
    3750:	23030000 	movwcs	r0, #12288	; 0x3000
    3754:	180a0180 	stmdane	sl, {r7, r8}
    3758:	04000007 	streq	r0, [r0], #-7
    375c:	87110213 			; <UNDEFINED> instruction: 0x87110213
    3760:	03000000 	movweq	r0, #0
    3764:	00018423 	andeq	r8, r1, r3, lsr #8
    3768:	0005940b 	andeq	r9, r5, fp, lsl #8
    376c:	02140400 	andseq	r0, r4, #0, 8
    3770:	00009c03 	andeq	r9, r0, r3, lsl #24
    3774:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    3778:	0000010f 	andeq	r0, r0, pc, lsl #2
    377c:	12bf010c 	adcsne	r0, pc, #12, 2
    3780:	3f010000 	svccc	0x00010000
    3784:	09240106 	stmdbeq	r4!, {r1, r2, r8}
    3788:	095c0800 	ldmdbeq	ip, {fp}^
    378c:	0a3e0800 	beq	f85794 <_Min_Heap_Size+0xf84f94>
    3790:	0d010000 	stceq	0, cr0, [r1, #-0]
    3794:	08000926 	stmdaeq	r0, {r1, r2, r5, r8, fp}
    3798:	0800093e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp}
    379c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    37a0:	00057d0e 	andeq	r7, r5, lr, lsl #26
    37a4:	03460100 	movteq	r0, #24832	; 0x6100
    37a8:	00000087 	andeq	r0, r0, r7, lsl #1
    37ac:	00789102 	rsbseq	r9, r8, r2, lsl #2
    37b0:	00093e0f 	andeq	r3, r9, pc, lsl #28
    37b4:	00095208 	andeq	r5, r9, r8, lsl #4
    37b8:	057d0e08 	ldrbeq	r0, [sp, #-3592]!	; 0xfffff1f8
    37bc:	47010000 	strmi	r0, [r1, -r0]
    37c0:	00008703 	andeq	r8, r0, r3, lsl #14
    37c4:	7c910200 	lfmvc	f0, 4, [r1], {0}
    37c8:	2a000000 	bcs	37d0 <_Min_Heap_Size+0x2fd0>
    37cc:	02000046 	andeq	r0, r0, #70	; 0x46
    37d0:	000a6b00 	andeq	r6, sl, r0, lsl #22
    37d4:	31010400 	tstcc	r1, r0, lsl #8
    37d8:	0c000001 	stceq	0, cr0, [r0], {1}
    37dc:	00001593 	muleq	r0, r3, r5
    37e0:	0000004b 	andeq	r0, r0, fp, asr #32
    37e4:	000001c8 	andeq	r0, r0, r8, asr #3
	...
    37f0:	000014a8 	andeq	r1, r0, r8, lsr #9
    37f4:	e0060102 	and	r0, r6, r2, lsl #2
    37f8:	03000000 	movweq	r0, #0
    37fc:	000000ad 	andeq	r0, r0, sp, lsr #1
    3800:	3c182b03 			; <UNDEFINED> instruction: 0x3c182b03
    3804:	02000000 	andeq	r0, r0, #0
    3808:	00de0801 	sbcseq	r0, lr, r1, lsl #16
    380c:	02020000 	andeq	r0, r2, #0
    3810:	00012705 	andeq	r2, r1, r5, lsl #14
    3814:	09ec0300 	stmibeq	ip!, {r8, r9}^
    3818:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    381c:	00005619 	andeq	r5, r0, r9, lsl r6
    3820:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3824:	0000000e 	andeq	r0, r0, lr
    3828:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
    382c:	03000000 	movweq	r0, #0
    3830:	00000040 	andeq	r0, r0, r0, asr #32
    3834:	70194f03 	andsvc	r4, r9, r3, lsl #30
    3838:	02000000 	andeq	r0, r0, #0
    383c:	009b0704 	addseq	r0, fp, r4, lsl #14
    3840:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3844:	00000005 	andeq	r0, r0, r5
    3848:	17270300 	strne	r0, [r7, -r0, lsl #6]!
    384c:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    3850:	00008a19 	andeq	r8, r0, r9, lsl sl
    3854:	07080200 	streq	r0, [r8, -r0, lsl #4]
    3858:	00000096 	muleq	r0, r6, r0
    385c:	69050404 	stmdbvs	r5, {r2, sl}
    3860:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3864:	00a00704 	adceq	r0, r0, r4, lsl #14
    3868:	af030000 	svcge	0x00030000
    386c:	04000000 	streq	r0, [r0], #-0
    3870:	00301318 	eorseq	r1, r0, r8, lsl r3
    3874:	9f050000 	svcls	0x00050000
    3878:	03000000 	movweq	r0, #0
    387c:	000009ee 	andeq	r0, r0, lr, ror #19
    3880:	4a142404 	bmi	50c898 <_Min_Heap_Size+0x50c098>
    3884:	06000000 	streq	r0, [r0], -r0
    3888:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    388c:	0000b005 	andeq	fp, r0, r5
    3890:	00420300 	subeq	r0, r2, r0, lsl #6
    3894:	30040000 	andcc	r0, r4, r0
    3898:	00006414 	andeq	r6, r0, r4, lsl r4
    389c:	00c60600 	sbceq	r0, r6, r0, lsl #12
    38a0:	c6050000 	strgt	r0, [r5], -r0
    38a4:	03000000 	movweq	r0, #0
    38a8:	00001729 	andeq	r1, r0, r9, lsr #14
    38ac:	7e143c04 	cdpvc	12, 1, cr3, cr4, cr4, {0}
    38b0:	07000000 	streq	r0, [r0, -r0]
    38b4:	01440518 	cmpeq	r4, r8, lsl r5
    38b8:	00015209 	andeq	r5, r1, r9, lsl #4
    38bc:	52430800 	subpl	r0, r3, #0, 16
    38c0:	01460500 	cmpeq	r6, r0, lsl #10
    38c4:	0000d211 	andeq	sp, r0, r1, lsl r2
    38c8:	00230200 	eoreq	r0, r3, r0, lsl #4
    38cc:	000a4c09 	andeq	r4, sl, r9, lsl #24
    38d0:	01470500 	cmpeq	r7, r0, lsl #10
    38d4:	0000d211 	andeq	sp, r0, r1, lsl r2
    38d8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    38dc:	52415008 	subpl	r5, r1, #8
    38e0:	01480500 	cmpeq	r8, r0, lsl #10
    38e4:	0000d211 	andeq	sp, r0, r1, lsl r2
    38e8:	08230200 	stmdaeq	r3!, {r9}
    38ec:	00042a09 	andeq	r2, r4, r9, lsl #20
    38f0:	01490500 	cmpeq	r9, r0, lsl #10
    38f4:	0000d211 	andeq	sp, r0, r1, lsl r2
    38f8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    38fc:	000a9209 	andeq	r9, sl, r9, lsl #4
    3900:	014a0500 	cmpeq	sl, r0, lsl #10
    3904:	0000d211 	andeq	sp, r0, r1, lsl r2
    3908:	10230200 	eorne	r0, r3, r0, lsl #4
    390c:	52434608 	subpl	r4, r3, #8, 12	; 0x800000
    3910:	014b0500 	cmpeq	fp, r0, lsl #10
    3914:	0000d211 	andeq	sp, r0, r1, lsl r2
    3918:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    391c:	0a6b0a00 	beq	1ac6124 <_Min_Heap_Size+0x1ac5924>
    3920:	4c050000 	stcmi	0, cr0, [r5], {-0}
    3924:	00e80301 	rsceq	r0, r8, r1, lsl #6
    3928:	1c070000 	stcne	0, cr0, [r7], {-0}
    392c:	09029505 	stmdbeq	r2, {r0, r2, r8, sl, ip, pc}
    3930:	000001d8 	ldrdeq	r0, [r0], -r8
    3934:	00525308 	subseq	r5, r2, r8, lsl #6
    3938:	11029705 	tstne	r2, r5, lsl #14
    393c:	000000d2 	ldrdeq	r0, [r0], -r2
    3940:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3944:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    3948:	d2110298 	andsle	r0, r1, #152, 4	; 0x80000009
    394c:	02000000 	andeq	r0, r0, #0
    3950:	42080423 	andmi	r0, r8, #587202560	; 0x23000000
    3954:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
    3958:	d2110299 	andsle	r0, r1, #-1879048183	; 0x90000009
    395c:	02000000 	andeq	r0, r0, #0
    3960:	43080823 	movwmi	r0, #34851	; 0x8823
    3964:	05003152 	streq	r3, [r0, #-338]	; 0xfffffeae
    3968:	d211029a 	andsle	r0, r1, #-1610612727	; 0xa0000009
    396c:	02000000 	andeq	r0, r0, #0
    3970:	43080c23 	movwmi	r0, #35875	; 0x8c23
    3974:	05003252 	streq	r3, [r0, #-594]	; 0xfffffdae
    3978:	d211029b 	andsle	r0, r1, #-1342177271	; 0xb0000009
    397c:	02000000 	andeq	r0, r0, #0
    3980:	43081023 	movwmi	r1, #32803	; 0x8023
    3984:	05003352 	streq	r3, [r0, #-850]	; 0xfffffcae
    3988:	d211029c 	andsle	r0, r1, #156, 4	; 0xc0000009
    398c:	02000000 	andeq	r0, r0, #0
    3990:	50091423 	andpl	r1, r9, r3, lsr #8
    3994:	05000005 	streq	r0, [r0, #-5]
    3998:	d211029d 	andsle	r0, r1, #-805306359	; 0xd0000009
    399c:	02000000 	andeq	r0, r0, #0
    39a0:	0a001823 	beq	9a34 <_Min_Heap_Size+0x9234>
    39a4:	00000777 	andeq	r0, r0, r7, ror r7
    39a8:	03029e05 	movweq	r9, #11781	; 0x2e05
    39ac:	0000015f 	andeq	r0, r0, pc, asr r1
    39b0:	3c01070b 	stccc	7, cr0, [r1], {11}
    39b4:	06000000 	streq	r0, [r0], -r0
    39b8:	020001b9 	andeq	r0, r0, #1073741870	; 0x4000002e
    39bc:	cc0c0000 	stcgt	0, cr0, [ip], {-0}
    39c0:	00000006 	andeq	r0, r0, r6
    39c4:	5445530d 	strbpl	r5, [r5], #-781	; 0xfffffcf3
    39c8:	03000100 	movweq	r0, #256	; 0x100
    39cc:	0000133e 	andeq	r1, r0, lr, lsr r3
    39d0:	e503bc06 	str	fp, [r3, #-3078]	; 0xfffff3fa
    39d4:	02000001 	andeq	r0, r0, #1
    39d8:	010f0408 	tsteq	pc, r8, lsl #8
    39dc:	070b0000 	streq	r0, [fp, -r0]
    39e0:	00003c01 	andeq	r3, r0, r1, lsl #24
    39e4:	01270700 			; <UNDEFINED> instruction: 0x01270700
    39e8:	0000023a 	andeq	r0, r0, sl, lsr r2
    39ec:	0006f60c 	andeq	pc, r6, ip, lsl #12
    39f0:	9d0c0000 	stcls	0, cr0, [ip, #-0]
    39f4:	01000009 	tsteq	r0, r9
    39f8:	000b860c 	andeq	r8, fp, ip, lsl #12
    39fc:	d70c0200 	strle	r0, [ip, -r0, lsl #4]
    3a00:	03000006 	movweq	r0, #6
    3a04:	15730300 	ldrbne	r0, [r3, #-768]!	; 0xfffffd00
    3a08:	2c070000 	stccs	0, cr0, [r7], {-0}
    3a0c:	00021303 	andeq	r1, r2, r3, lsl #6
    3a10:	01070b00 	tsteq	r7, r0, lsl #22
    3a14:	0000003c 	andeq	r0, r0, ip, lsr r0
    3a18:	61013207 	tstvs	r1, r7, lsl #4
    3a1c:	0c000002 	stceq	0, cr0, [r0], {2}
    3a20:	00000b79 	andeq	r0, r0, r9, ror fp
    3a24:	081f0c00 	ldmdaeq	pc, {sl, fp}	; <UNPREDICTABLE>
    3a28:	00010000 	andeq	r0, r1, r0
    3a2c:	00058403 	andeq	r8, r5, r3, lsl #8
    3a30:	03350700 	teqeq	r5, #0, 14
    3a34:	00000246 	andeq	r0, r0, r6, asr #4
    3a38:	3008300e 	andcc	r3, r8, lr
    3a3c:	00032b09 	andeq	r2, r3, r9, lsl #22
    3a40:	090f0f00 	stmdbeq	pc, {r8, r9, sl, fp}	; <UNPREDICTABLE>
    3a44:	32080000 	andcc	r0, r8, #0
    3a48:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3a4c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3a50:	0006890f 	andeq	r8, r6, pc, lsl #18
    3a54:	0c350800 	ldceq	8, cr0, [r5], #-0
    3a58:	000000c6 	andeq	r0, r0, r6, asr #1
    3a5c:	0f042302 	svceq	0x00042302
    3a60:	000005c9 	andeq	r0, r0, r9, asr #11
    3a64:	c60c3908 	strgt	r3, [ip], -r8, lsl #18
    3a68:	02000000 	andeq	r0, r0, #0
    3a6c:	170f0823 	strne	r0, [pc, -r3, lsr #16]
    3a70:	0800000a 	stmdaeq	r0, {r1, r3}
    3a74:	00c60c3c 	sbceq	r0, r6, ip, lsr ip
    3a78:	23020000 	movwcs	r0, #8192	; 0x2000
    3a7c:	0a970f0c 	beq	fe5c76b4 <_estack+0xde5c647c>
    3a80:	3f080000 	svccc	0x00080000
    3a84:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3a88:	10230200 	eorne	r0, r3, r0, lsl #4
    3a8c:	0007660f 	andeq	r6, r7, pc, lsl #12
    3a90:	0c420800 	mcrreq	8, 0, r0, r2, cr0
    3a94:	000000c6 	andeq	r0, r0, r6, asr #1
    3a98:	0f142302 	svceq	0x00142302
    3a9c:	0000098d 	andeq	r0, r0, sp, lsl #19
    3aa0:	c60c4508 	strgt	r4, [ip], -r8, lsl #10
    3aa4:	02000000 	andeq	r0, r0, #0
    3aa8:	170f1823 	strne	r1, [pc, -r3, lsr #16]
    3aac:	08000022 	stmdaeq	r0, {r1, r5}
    3ab0:	00c60c4a 	sbceq	r0, r6, sl, asr #24
    3ab4:	23020000 	movwcs	r0, #8192	; 0x2000
    3ab8:	09890f1c 	stmibeq	r9, {r2, r3, r4, r8, r9, sl, fp}
    3abc:	4d080000 	stcmi	0, cr0, [r8, #-0]
    3ac0:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3ac4:	20230200 	eorcs	r0, r3, r0, lsl #4
    3ac8:	0009c20f 	andeq	ip, r9, pc, lsl #4
    3acc:	0c520800 	mrrceq	8, 0, r0, r2, cr0
    3ad0:	000000c6 	andeq	r0, r0, r6, asr #1
    3ad4:	0f242302 	svceq	0x00242302
    3ad8:	000005dc 	ldrdeq	r0, [r0], -ip
    3adc:	c60c5508 	strgt	r5, [ip], -r8, lsl #10
    3ae0:	02000000 	andeq	r0, r0, #0
    3ae4:	1e0f2823 	cdpne	8, 0, cr2, cr15, cr3, {1}
    3ae8:	0800000a 	stmdaeq	r0, {r1, r3}
    3aec:	00c60c5b 	sbceq	r0, r6, fp, asr ip
    3af0:	23020000 	movwcs	r0, #8192	; 0x2000
    3af4:	2f03002c 	svccs	0x0003002c
    3af8:	08000004 	stmdaeq	r0, {r2}
    3afc:	026d0260 	rsbeq	r0, sp, #96, 4
    3b00:	070b0000 	streq	r0, [fp, -r0]
    3b04:	00003c01 	andeq	r3, r0, r1, lsl #24
    3b08:	01670800 	cmneq	r7, r0, lsl #16
    3b0c:	0000036a 	andeq	r0, r0, sl, ror #6
    3b10:	0006be0c 	andeq	fp, r6, ip, lsl #28
    3b14:	b00c0000 	andlt	r0, ip, r0
    3b18:	01000007 	tsteq	r0, r7
    3b1c:	0007cd0c 	andeq	ip, r7, ip, lsl #26
    3b20:	130c0200 	movwne	r0, #49664	; 0xc200
    3b24:	0300000b 	movweq	r0, #11
    3b28:	0005f40c 	andeq	pc, r5, ip, lsl #8
    3b2c:	280c0400 	stmdacs	ip, {sl}
    3b30:	05000007 	streq	r0, [r0, #-7]
    3b34:	091d0300 	ldmdbeq	sp, {r8, r9}
    3b38:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
    3b3c:	00033702 	andeq	r3, r3, r2, lsl #14
    3b40:	036a0600 	cmneq	sl, #0, 12
    3b44:	75100000 	ldrvc	r0, [r0, #-0]
    3b48:	60000009 	andvs	r0, r0, r9
    3b4c:	5b108a08 	blpl	426374 <_Min_Heap_Size+0x425b74>
    3b50:	0f000004 	svceq	0x00000004
    3b54:	00000832 	andeq	r0, r0, r2, lsr r8
    3b58:	5b1f8c08 	blpl	7e6b80 <_Min_Heap_Size+0x7e6380>
    3b5c:	02000004 	andeq	r0, r0, #4
    3b60:	f90f0023 			; <UNDEFINED> instruction: 0xf90f0023
    3b64:	0800001c 	stmdaeq	r0, {r2, r3, r4}
    3b68:	032b1e8e 			; <UNDEFINED> instruction: 0x032b1e8e
    3b6c:	23020000 	movwcs	r0, #8192	; 0x2000
    3b70:	066f0f04 	strbteq	r0, [pc], -r4, lsl #30
    3b74:	90080000 	andls	r0, r8, r0
    3b78:	0002611e 	andeq	r6, r2, lr, lsl r1
    3b7c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    3b80:	0006b80f 	andeq	fp, r6, pc, lsl #16
    3b84:	1e920800 	cdpne	8, 9, cr0, cr2, cr0, {0}
    3b88:	00000376 	andeq	r0, r0, r6, ror r3
    3b8c:	0f352302 	svceq	0x00352302
    3b90:	00000668 	andeq	r0, r0, r8, ror #12
    3b94:	611f9408 	tstvs	pc, r8, lsl #8
    3b98:	02000004 	andeq	r0, r0, #4
    3b9c:	bc0f3823 	stclt	8, cr3, [pc], {35}	; 0x23
    3ba0:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    3ba4:	04752196 	ldrbteq	r2, [r5], #-406	; 0xfffffe6a
    3ba8:	23020000 	movwcs	r0, #8192	; 0x2000
    3bac:	05a00f3c 	streq	r0, [r0, #3900]!	; 0xf3c
    3bb0:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    3bb4:	00047521 	andeq	r7, r4, r1, lsr #10
    3bb8:	40230200 	eormi	r0, r3, r0, lsl #4
    3bbc:	00055e0f 	andeq	r5, r5, pc, lsl #28
    3bc0:	219a0800 	orrscs	r0, sl, r0, lsl #16
    3bc4:	00000475 	andeq	r0, r0, r5, ror r4
    3bc8:	0f442302 	svceq	0x00442302
    3bcc:	000008f8 	strdeq	r0, [r0], -r8
    3bd0:	75219c08 	strvc	r9, [r1, #-3080]!	; 0xfffff3f8
    3bd4:	02000004 	andeq	r0, r0, #4
    3bd8:	3b0f4823 	blcc	3d5c6c <_Min_Heap_Size+0x3d546c>
    3bdc:	08000008 	stmdaeq	r0, {r3}
    3be0:	0475219e 	ldrbteq	r2, [r5], #-414	; 0xfffffe62
    3be4:	23020000 	movwcs	r0, #8192	; 0x2000
    3be8:	0baa0f4c 	bleq	fea87920 <_estack+0xdea866e8>
    3bec:	a0080000 	andge	r0, r8, r0
    3bf0:	00047521 	andeq	r7, r4, r1, lsr #10
    3bf4:	50230200 	eorpl	r0, r3, r0, lsl #4
    3bf8:	0007470f 	andeq	r4, r7, pc, lsl #14
    3bfc:	1ea20800 	cdpne	8, 10, cr0, cr2, cr0, {0}
    3c00:	000000d2 	ldrdeq	r0, [r0], -r2
    3c04:	0f542302 	svceq	0x00542302
    3c08:	00000651 	andeq	r0, r0, r1, asr r6
    3c0c:	c61ea408 	ldrgt	sl, [lr], -r8, lsl #8
    3c10:	02000000 	andeq	r0, r0, #0
    3c14:	ea0f5823 	b	3d9ca8 <_Min_Heap_Size+0x3d94a8>
    3c18:	08000006 	stmdaeq	r0, {r1, r2}
    3c1c:	00c61ea6 	sbceq	r1, r6, r6, lsr #29
    3c20:	23020000 	movwcs	r0, #8192	; 0x2000
    3c24:	0411005c 	ldreq	r0, [r1], #-92	; 0xffffffa4
    3c28:	00000152 	andeq	r0, r0, r2, asr r1
    3c2c:	01130412 	tsteq	r3, r2, lsl r4
    3c30:	0000046f 	andeq	r0, r0, pc, ror #8
    3c34:	00046f14 	andeq	r6, r4, r4, lsl pc
    3c38:	04110000 	ldreq	r0, [r1], #-0
    3c3c:	0000037b 	andeq	r0, r0, fp, ror r3
    3c40:	04630411 	strbteq	r0, [r3], #-1041	; 0xfffffbef
    3c44:	77030000 	strvc	r0, [r3, -r0]
    3c48:	08000009 	stmdaeq	r0, {r0, r3}
    3c4c:	037b02a8 	cmneq	fp, #168, 4	; 0x8000000a
    3c50:	1c0e0000 	stcne	0, cr0, [lr], {-0}
    3c54:	fa092e09 	blx	24f480 <_Min_Heap_Size+0x24ec80>
    3c58:	0f000004 	svceq	0x00000004
    3c5c:	00000555 	andeq	r0, r0, r5, asr r5
    3c60:	c60c3009 	strgt	r3, [ip], -r9
    3c64:	02000000 	andeq	r0, r0, #0
    3c68:	920f0023 	andls	r0, pc, #35	; 0x23
    3c6c:	09000009 	stmdbeq	r0, {r0, r3}
    3c70:	00c60c36 	sbceq	r0, r6, r6, lsr ip
    3c74:	23020000 	movwcs	r0, #8192	; 0x2000
    3c78:	06400f04 	strbeq	r0, [r0], -r4, lsl #30
    3c7c:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    3c80:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3c84:	08230200 	stmdaeq	r3!, {r9}
    3c88:	0008880f 	andeq	r8, r8, pc, lsl #16
    3c8c:	0c3c0900 			; <UNDEFINED> instruction: 0x0c3c0900
    3c90:	000000c6 	andeq	r0, r0, r6, asr #1
    3c94:	0f0c2302 	svceq	0x000c2302
    3c98:	0000098d 	andeq	r0, r0, sp, lsl #19
    3c9c:	c60c4309 	strgt	r4, [ip], -r9, lsl #6
    3ca0:	02000000 	andeq	r0, r0, #0
    3ca4:	090f1023 	stmdbeq	pc, {r0, r1, r5, ip}	; <UNPREDICTABLE>
    3ca8:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    3cac:	00c60c46 	sbceq	r0, r6, r6, asr #24
    3cb0:	23020000 	movwcs	r0, #8192	; 0x2000
    3cb4:	04fc0f14 	ldrbteq	r0, [ip], #3860	; 0xf14
    3cb8:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
    3cbc:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3cc0:	18230200 	stmdane	r3!, {r9}
    3cc4:	0aab0300 	beq	feac48cc <_estack+0xdeac3694>
    3cc8:	4b090000 	blmi	243cd0 <_Min_Heap_Size+0x2434d0>
    3ccc:	00048703 	andeq	r8, r4, r3, lsl #14
    3cd0:	01070b00 	tsteq	r7, r0, lsl #22
    3cd4:	0000003c 	andeq	r0, r0, ip, lsr r0
    3cd8:	45017509 	strmi	r7, [r1, #-1289]	; 0xfffffaf7
    3cdc:	0c000005 	stceq	0, cr0, [r0], {5}
    3ce0:	00000a51 	andeq	r0, r0, r1, asr sl
    3ce4:	06740c00 	ldrbteq	r0, [r4], -r0, lsl #24
    3ce8:	0c200000 	stceq	0, cr0, [r0], #-0
    3cec:	00000b65 	andeq	r0, r0, r5, ror #22
    3cf0:	084d0c24 	stmdaeq	sp, {r2, r5, sl, fp}^
    3cf4:	0c210000 	stceq	0, cr0, [r1], #-0
    3cf8:	000009f7 	strdeq	r0, [r0], -r7
    3cfc:	05360c22 	ldreq	r0, [r6, #-3106]!	; 0xfffff3de
    3d00:	0c230000 	stceq	0, cr0, [r3], #-0
    3d04:	00000af2 	strdeq	r0, [r0], -r2
    3d08:	094f0ca0 	stmdbeq	pc, {r5, r7, sl, fp}^	; <UNPREDICTABLE>
    3d0c:	00e00000 	rsceq	r0, r0, r0
    3d10:	00040d03 	andeq	r0, r4, r3, lsl #26
    3d14:	03870900 	orreq	r0, r7, #0, 18
    3d18:	00000506 	andeq	r0, r0, r6, lsl #10
    3d1c:	00054506 	andeq	r4, r5, r6, lsl #10
    3d20:	0ac20300 	beq	ff084928 <_estack+0xdf0836f0>
    3d24:	90090000 	andls	r0, r9, r0
    3d28:	0000c612 	andeq	ip, r0, r2, lsl r6
    3d2c:	05560600 	ldrbeq	r0, [r6, #-1536]	; 0xfffffa00
    3d30:	91030000 	mrsls	r0, (UNDEF: 3)
    3d34:	09000004 	stmdbeq	r0, {r2}
    3d38:	00c6129b 	smulleq	r1, r6, fp, r2
    3d3c:	67060000 	strvs	r0, [r6, -r0]
    3d40:	10000005 	andne	r0, r0, r5
    3d44:	000007f7 	strdeq	r0, [r0], -r7
    3d48:	10a00948 	adcne	r0, r0, r8, asr #18
    3d4c:	00000676 	andeq	r0, r0, r6, ror r6
    3d50:	0008320f 	andeq	r3, r8, pc, lsl #4
    3d54:	22a20900 	adccs	r0, r2, #0, 18
    3d58:	00000676 	andeq	r0, r0, r6, ror r6
    3d5c:	0f002302 	svceq	0x00002302
    3d60:	00001cf9 	strdeq	r1, [r0], -r9
    3d64:	fa21a409 	blx	86cd90 <_Min_Heap_Size+0x86c590>
    3d68:	02000004 	andeq	r0, r0, #4
    3d6c:	b50f0423 	strlt	r0, [pc, #-1059]	; 3951 <_Min_Heap_Size+0x3151>
    3d70:	09000005 	stmdbeq	r0, {r0, r2}
    3d74:	067c22a6 	ldrbteq	r2, [ip], -r6, lsr #5
    3d78:	23020000 	movwcs	r0, #8192	; 0x2000
    3d7c:	070d0f20 	streq	r0, [sp, -r0, lsr #30]
    3d80:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
    3d84:	0000b021 	andeq	fp, r0, r1, lsr #32
    3d88:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    3d8c:	0005090f 	andeq	r0, r5, pc, lsl #18
    3d90:	21aa0900 			; <UNDEFINED> instruction: 0x21aa0900
    3d94:	000000bc 	strheq	r0, [r0], -ip
    3d98:	0f262302 	svceq	0x00262302
    3d9c:	00000b29 	andeq	r0, r0, r9, lsr #22
    3da0:	8222ac09 	eorhi	sl, r2, #2304	; 0x900
    3da4:	02000006 	andeq	r0, r0, #6
    3da8:	020f2823 	andeq	r2, pc, #2293760	; 0x230000
    3dac:	09000007 	stmdbeq	r0, {r0, r1, r2}
    3db0:	00b021ae 	adcseq	r2, r0, lr, lsr #3
    3db4:	23020000 	movwcs	r0, #8192	; 0x2000
    3db8:	0b590f2c 	bleq	1647a70 <_Min_Heap_Size+0x1647270>
    3dbc:	b0090000 	andlt	r0, r9, r0
    3dc0:	0000bc21 	andeq	fp, r0, r1, lsr #24
    3dc4:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    3dc8:	000b9c0f 	andeq	r9, fp, pc, lsl #24
    3dcc:	1fb20900 	svcne	0x00b20900
    3dd0:	00000562 	andeq	r0, r0, r2, ror #10
    3dd4:	0f302302 	svceq	0x00302302
    3dd8:	0000130e 	andeq	r1, r0, lr, lsl #6
    3ddc:	7324b409 			; <UNDEFINED> instruction: 0x7324b409
    3de0:	02000005 	andeq	r0, r0, #5
    3de4:	6e0f3423 	cdpvs	4, 0, cr3, cr15, cr3, {1}
    3de8:	09000008 	stmdbeq	r0, {r3}
    3dec:	068822b6 			; <UNDEFINED> instruction: 0x068822b6
    3df0:	23020000 	movwcs	r0, #8192	; 0x2000
    3df4:	069c0f38 			; <UNDEFINED> instruction: 0x069c0f38
    3df8:	b8090000 	stmdalt	r9, {}	; <UNPREDICTABLE>
    3dfc:	00068822 	andeq	r8, r6, r2, lsr #16
    3e00:	3c230200 	sfmcc	f0, 4, [r3], #-0
    3e04:	00066f0f 	andeq	r6, r6, pc, lsl #30
    3e08:	21ba0900 			; <UNDEFINED> instruction: 0x21ba0900
    3e0c:	00000261 	andeq	r0, r0, r1, ror #4
    3e10:	0f402302 	svceq	0x00402302
    3e14:	00000423 	andeq	r0, r0, r3, lsr #8
    3e18:	5121bc09 			; <UNDEFINED> instruction: 0x5121bc09
    3e1c:	02000005 	andeq	r0, r0, #5
    3e20:	8f0f4123 	svchi	0x000f4123
    3e24:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    3e28:	055121c0 	ldrbeq	r2, [r1, #-448]	; 0xfffffe40
    3e2c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e30:	07470f42 	strbeq	r0, [r7, -r2, asr #30]
    3e34:	c3090000 	movwgt	r0, #36864	; 0x9000
    3e38:	0000d221 	andeq	sp, r0, r1, lsr #4
    3e3c:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    3e40:	d8041100 	stmdale	r4, {r8, ip}
    3e44:	11000001 	tstne	r0, r1
    3e48:	0000ab04 	andeq	sl, r0, r4, lsl #22
    3e4c:	9f041100 	svcls	0x00041100
    3e50:	11000000 	mrsne	r0, (UNDEF: 0)
    3e54:	00047b04 	andeq	r7, r4, r4, lsl #22
    3e58:	07f90300 	ldrbeq	r0, [r9, r0, lsl #6]!
    3e5c:	d5090000 	strle	r0, [r9, #-0]
    3e60:	00057803 	andeq	r7, r5, r3, lsl #16
    3e64:	068e0500 	streq	r0, [lr], r0, lsl #10
    3e68:	e6150000 	ldr	r0, [r5], -r0
    3e6c:	01000014 	tsteq	r0, r4, lsl r0
    3e70:	010d0e6f 	tsteq	sp, pc, ror #28
    3e74:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
    3e78:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
    3e7c:	00000a6a 	andeq	r0, r0, sl, ror #20
    3e80:	00079601 	andeq	r9, r7, r1, lsl #12
    3e84:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    3e88:	6f010000 	svcvs	0x00010000
    3e8c:	0796300e 	ldreq	r3, [r6, lr]
    3e90:	0a920000 	beq	fe483e98 <_estack+0xde482c60>
    3e94:	0a8a0000 	beq	fe283e9c <_estack+0xde282c64>
    3e98:	7d170000 	ldcvc	0, cr0, [r7, #-0]
    3e9c:	01000005 	tsteq	r0, r5
    3ea0:	c60c0e71 			; <UNDEFINED> instruction: 0xc60c0e71
    3ea4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    3ea8:	c600000a 	strgt	r0, [r0], -sl
    3eac:	1700000a 	strne	r0, [r0, -sl]
    3eb0:	000017ad 	andeq	r1, r0, sp, lsr #15
    3eb4:	0c0e7201 	sfmeq	f7, 4, [lr], {1}
    3eb8:	000000c6 	andeq	r0, r0, r6, asr #1
    3ebc:	00000ae1 	andeq	r0, r0, r1, ror #21
    3ec0:	00000adb 	ldrdeq	r0, [r0], -fp
    3ec4:	000a5418 	andeq	r5, sl, r8, lsl r4
    3ec8:	0045ab08 	subeq	sl, r5, r8, lsl #22
    3ecc:	00071700 	andeq	r1, r7, r0, lsl #14
    3ed0:	50011900 	andpl	r1, r1, r0, lsl #18
    3ed4:	2ca00305 	stccs	3, cr0, [r0], #20
    3ed8:	01190800 	tsteq	r9, r0, lsl #16
    3edc:	780a0351 	stmdavc	sl, {r0, r4, r6, r8, r9}
    3ee0:	a21a000e 	andsge	r0, sl, #14
    3ee4:	ba08000a 	blt	203f14 <_Min_Heap_Size+0x203714>
    3ee8:	18000045 	stmdane	r0, {r0, r2, r6}
    3eec:	08000aae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, fp}
    3ef0:	000045ab 	andeq	r4, r0, fp, lsr #11
    3ef4:	0000073e 	andeq	r0, r0, lr, lsr r7
    3ef8:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3efc:	002ca003 	eoreq	sl, ip, r3
    3f00:	51011908 	tstpl	r1, r8, lsl #18
    3f04:	0e750a03 	vaddeq.f32	s1, s10, s6
    3f08:	0aba1800 	beq	fee89f10 <_estack+0xdee88cd8>
    3f0c:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3f10:	075c0000 	ldrbeq	r0, [ip, -r0]
    3f14:	01190000 	tsteq	r9, r0
    3f18:	a0030550 	andge	r0, r3, r0, asr r5
    3f1c:	1908002c 	stmdbne	r8, {r2, r3, r5}
    3f20:	0a035101 	beq	d832c <_Min_Heap_Size+0xd7b2c>
    3f24:	18000e76 	stmdane	r0, {r1, r2, r4, r5, r6, r9, sl, fp}
    3f28:	08000ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp}
    3f2c:	000045ab 	andeq	r4, r0, fp, lsr #11
    3f30:	0000077a 	andeq	r0, r0, sl, ror r7
    3f34:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3f38:	002ca003 	eoreq	sl, ip, r3
    3f3c:	51011908 	tstpl	r1, r8, lsl #18
    3f40:	0e770a03 	vaddeq.f32	s1, s14, s6
    3f44:	0acc1a00 	beq	ff30a74c <_estack+0xdf309514>
    3f48:	45c90800 	strbmi	r0, [r9, #2048]	; 0x800
    3f4c:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    3f50:	d808000a 	stmdale	r8, {r1, r3}
    3f54:	1a000045 	bne	4070 <_Min_Heap_Size+0x3870>
    3f58:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
    3f5c:	000045d8 	ldrdeq	r4, [r0], -r8
    3f60:	8e041100 	adfhis	f1, f4, f0
    3f64:	1b000006 	blne	3f84 <_Min_Heap_Size+0x3784>
    3f68:	00001984 	andeq	r1, r0, r4, lsl #19
    3f6c:	1a0e0a01 	bne	386778 <_Min_Heap_Size+0x385f78>
    3f70:	00023a01 	andeq	r3, r2, r1, lsl #20
    3f74:	000e4200 	andeq	r4, lr, r0, lsl #4
    3f78:	000f2808 	andeq	r2, pc, r8, lsl #16
    3f7c:	000b0a08 	andeq	r0, fp, r8, lsl #20
    3f80:	08cf0100 	stmiaeq	pc, {r8}^	; <UNPREDICTABLE>
    3f84:	74160000 	ldrvc	r0, [r6], #-0
    3f88:	01000017 	tsteq	r0, r7, lsl r0
    3f8c:	963e0e0a 	ldrtls	r0, [lr], -sl, lsl #28
    3f90:	76000007 	strvc	r0, [r0], -r7
    3f94:	6600000b 	strvs	r0, [r0], -fp
    3f98:	1700000b 	strne	r0, [r0, -fp]
    3f9c:	000013f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    3fa0:	0d0e0c01 	stceq	12, cr0, [lr, #-4]
    3fa4:	00000682 	andeq	r0, r0, r2, lsl #13
    3fa8:	00000be8 	andeq	r0, r0, r8, ror #23
    3fac:	00000be2 	andeq	r0, r0, r2, ror #23
    3fb0:	00145b17 	andseq	r5, r4, r7, lsl fp
    3fb4:	0e0d0100 	adfeqe	f0, f5, f0
    3fb8:	0008cf0d 	andeq	ip, r8, sp, lsl #30
    3fbc:	000c1800 	andeq	r1, ip, r0, lsl #16
    3fc0:	000c1200 	andeq	r1, ip, r0, lsl #4
    3fc4:	0eb61c00 	cdpeq	12, 11, cr1, cr6, cr0, {0}
    3fc8:	0ece0800 	cdpeq	8, 12, cr0, cr14, cr0, {0}
    3fcc:	08920800 	ldmeq	r2, {fp}
    3fd0:	761d0000 	ldrvc	r0, [sp], -r0
    3fd4:	01006c61 	tsteq	r0, r1, ror #24
    3fd8:	c6090e42 	strgt	r0, [r9], -r2, asr #28
    3fdc:	45000000 	strmi	r0, [r0, #-0]
    3fe0:	4300000c 	movwmi	r0, #12
    3fe4:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
    3fe8:	0000457d 	andeq	r4, r0, sp, ror r5
    3fec:	08000eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp}
    3ff0:	0eb80000 	cdpeq	0, 11, cr0, cr8, cr0, {0}
    3ff4:	0ec00800 	cdpeq	8, 12, cr0, cr0, cr0, {0}
    3ff8:	42010800 	andmi	r0, r1, #0, 16
    3ffc:	0852090e 	ldmdaeq	r2, {r1, r2, r3, r8, fp}^
    4000:	901f0000 	andsls	r0, pc, r0
    4004:	5e000045 	cdppl	0, 0, cr0, cr0, cr5, {2}
    4008:	5800000c 	stmdapl	r0, {r2, r3}
    400c:	2000000c 	andcs	r0, r0, ip
    4010:	0000459d 	muleq	r0, sp, r5
    4014:	00000c8d 	andeq	r0, r0, sp, lsl #25
    4018:	00000c8b 	andeq	r0, r0, fp, lsl #25
    401c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4020:	0ec40000 	cdpeq	0, 12, cr0, cr4, cr0, {0}
    4024:	00010800 	andeq	r0, r1, r0, lsl #16
    4028:	08000ec4 	stmdaeq	r0, {r2, r6, r7, r9, sl, fp}
    402c:	08000eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp}
    4030:	090e4201 	stmdbeq	lr, {r0, r9, lr}
    4034:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4038:	000ca400 	andeq	sl, ip, r0, lsl #8
    403c:	000ca000 	andeq	sl, ip, r0
    4040:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3148 <_Min_Heap_Size+0x2948>
    4044:	0cc60000 	stcleq	0, cr0, [r6], {0}
    4048:	0cc40000 	stcleq	0, cr0, [r4], {0}
    404c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4050:	db000045 	blle	416c <_Min_Heap_Size+0x396c>
    4054:	d900000c 	stmdble	r0, {r2, r3}
    4058:	0000000c 	andeq	r0, r0, ip
    405c:	0ed81c00 	cdpeq	12, 13, cr1, cr8, cr0, {0}
    4060:	0ee60800 	cdpeq	8, 14, cr0, cr6, cr0, {0}
    4064:	08b00800 	ldmeq	r0!, {fp}
    4068:	7d220000 	stcvc	0, cr0, [r2, #-0]
    406c:	01000005 	tsteq	r0, r5
    4070:	d20b0e48 	andle	r0, fp, #72, 28	; 0x480
    4074:	02000000 	andeq	r0, r0, #0
    4078:	18007491 	stmdane	r0, {r0, r4, r7, sl, ip, sp, lr}
    407c:	08000eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp}
    4080:	00001a8f 	andeq	r1, r0, pc, lsl #21
    4084:	000008c5 	andeq	r0, r0, r5, asr #17
    4088:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    408c:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    4090:	000f1e1a 	andeq	r1, pc, sl, lsl lr	; <UNPREDICTABLE>
    4094:	001ba008 	andseq	sl, fp, r8
    4098:	04110000 	ldreq	r0, [r1], #-0
    409c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    40a0:	0018931b 	andseq	r9, r8, fp, lsl r3
    40a4:	0df10100 	ldfeqe	f0, [r1]
    40a8:	023a011a 	eorseq	r0, sl, #-2147483642	; 0x80000006
    40ac:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
    40b0:	0e2c0800 	cdpeq	8, 2, cr0, cr12, cr0, {0}
    40b4:	0cee0800 	stcleq	8, cr0, [lr]
    40b8:	1b010000 	blne	440c0 <_Min_Heap_Size+0x438c0>
    40bc:	16000009 	strne	r0, [r0], -r9
    40c0:	00001774 	andeq	r1, r0, r4, ror r7
    40c4:	420df101 	andmi	pc, sp, #1073741824	; 0x40000000
    40c8:	00000796 	muleq	r0, r6, r7
    40cc:	00000d12 	andeq	r0, r0, r2, lsl sp
    40d0:	00000d0e 	andeq	r0, r0, lr, lsl #26
    40d4:	000e2823 	andeq	r2, lr, r3, lsr #16
    40d8:	001bf608 	andseq	pc, fp, r8, lsl #12
    40dc:	50011900 	andpl	r1, r1, r0, lsl #18
    40e0:	5001f303 	andpl	pc, r1, r3, lsl #6
    40e4:	30240000 	eorcc	r0, r4, r0
    40e8:	01000018 	tsteq	r0, r8, lsl r0
    40ec:	011a0dc9 	tsteq	sl, r9, asr #27
    40f0:	0000023a 	andeq	r0, r0, sl, lsr r2
    40f4:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
    40f8:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
    40fc:	01007d02 	tsteq	r0, r2, lsl #26
    4100:	00000964 	andeq	r0, r0, r4, ror #18
    4104:	00177416 	andseq	r7, r7, r6, lsl r4
    4108:	0dc90100 	stfeqe	f0, [r9]
    410c:	0007963f 	andeq	r9, r7, pc, lsr r6
    4110:	000d3d00 	andeq	r3, sp, r0, lsl #26
    4114:	000d3300 	andeq	r3, sp, r0, lsl #6
    4118:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    411c:	cb010070 	blgt	442e4 <_Min_Heap_Size+0x43ae4>
    4120:	0964130d 	stmdbeq	r4!, {r0, r2, r3, r8, r9, ip}^
    4124:	0d860000 	stceq	0, cr0, [r6]
    4128:	0d820000 	stceq	0, cr0, [r2]
    412c:	11000000 	mrsne	r0, (UNDEF: 0)
    4130:	0000c104 	andeq	ip, r0, r4, lsl #2
    4134:	154c1500 	strbne	r1, [ip, #-1280]	; 0xfffffb00
    4138:	af010000 	svcge	0x00010000
    413c:	00010d0d 	andeq	r0, r1, sp, lsl #26
    4140:	00000000 	andeq	r0, r0, r0
    4144:	a5000000 	strge	r0, [r0, #-0]
    4148:	0100000d 	tsteq	r0, sp
    414c:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
    4150:	0015fc16 	andseq	pc, r5, r6, lsl ip	; <UNPREDICTABLE>
    4154:	0daf0100 	stfeqs	f0, [pc]	; 415c <_Min_Heap_Size+0x395c>
    4158:	0006883c 	andeq	r8, r6, ip, lsr r8
    415c:	000dc900 	andeq	ip, sp, r0, lsl #18
    4160:	000dc500 	andeq	ip, sp, r0, lsl #10
    4164:	17741700 	ldrbne	r1, [r4, -r0, lsl #14]!
    4168:	b1010000 	mrslt	r0, (UNDEF: 1)
    416c:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    4170:	0dec0000 	stcleq	0, cr0, [ip]
    4174:	0dea0000 	stcleq	0, cr0, [sl]
    4178:	001a0000 	andseq	r0, sl, r0
    417c:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    4180:	0000001a 	andeq	r0, r0, sl, lsl r0
    4184:	00193b15 	andseq	r3, r9, r5, lsl fp
    4188:	0d930100 	ldfeqs	f0, [r3]
    418c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4190:	00000000 	andeq	r0, r0, r0
    4194:	0dff0000 	ldcleq	0, cr0, [pc]	; 419c <_Min_Heap_Size+0x399c>
    4198:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    419c:	1600000a 	strne	r0, [r0], -sl
    41a0:	000015fc 	strdeq	r1, [r0], -ip
    41a4:	3c0d9301 	stccc	3, cr9, [sp], {1}
    41a8:	00000688 	andeq	r0, r0, r8, lsl #13
    41ac:	00000e23 	andeq	r0, r0, r3, lsr #28
    41b0:	00000e1f 	andeq	r0, r0, pc, lsl lr
    41b4:	00177417 	andseq	r7, r7, r7, lsl r4
    41b8:	0d950100 	ldfeqs	f0, [r5]
    41bc:	00079617 	andeq	r9, r7, r7, lsl r6
    41c0:	000e4600 	andeq	r4, lr, r0, lsl #12
    41c4:	000e4400 	andeq	r4, lr, r0, lsl #8
    41c8:	00001a00 	andeq	r1, r0, r0, lsl #20
    41cc:	1af40000 	bne	ffd041d4 <_estack+0xdfd02f9c>
    41d0:	15000000 	strne	r0, [r0, #-0]
    41d4:	000014ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    41d8:	0d0d6501 	cfstr32eq	mvfx6, [sp, #-4]
    41dc:	00000001 	andeq	r0, r0, r1
    41e0:	00000000 	andeq	r0, r0, r0
    41e4:	000e5900 	andeq	r5, lr, r0, lsl #18
    41e8:	0a570100 	beq	15c45f0 <_Min_Heap_Size+0x15c3df0>
    41ec:	fc160000 	ldc2	0, cr0, [r6], {-0}
    41f0:	01000015 	tsteq	r0, r5, lsl r0
    41f4:	88380d65 	ldmdahi	r8!, {r0, r2, r5, r6, r8, sl, fp}
    41f8:	7d000006 	stcvc	0, cr0, [r0, #-24]	; 0xffffffe8
    41fc:	7900000e 	stmdbvc	r0, {r1, r2, r3}
    4200:	1700000e 	strne	r0, [r0, -lr]
    4204:	00001774 	andeq	r1, r0, r4, ror r7
    4208:	170d6701 	strne	r6, [sp, -r1, lsl #14]
    420c:	00000796 	muleq	r0, r6, r7
    4210:	00000ea0 	andeq	r0, r0, r0, lsr #29
    4214:	00000e9e 	muleq	r0, lr, lr
    4218:	0000001a 	andeq	r0, r0, sl, lsl r0
    421c:	001b1f00 	andseq	r1, fp, r0, lsl #30
    4220:	e4150000 	ldr	r0, [r5], #-0
    4224:	01000015 	tsteq	r0, r5, lsl r0
    4228:	010d0d37 	tsteq	sp, r7, lsr sp
	...
    4234:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    4238:	000aa601 	andeq	sl, sl, r1, lsl #12
    423c:	15fc1600 	ldrbne	r1, [ip, #1536]!	; 0x600
    4240:	37010000 	strcc	r0, [r1, -r0]
    4244:	0688380d 	streq	r3, [r8], sp, lsl #16
    4248:	0ed70000 	cdpeq	0, 13, cr0, cr7, cr0, {0}
    424c:	0ed30000 	cdpeq	0, 13, cr0, cr3, cr0, {0}
    4250:	74170000 	ldrvc	r0, [r7], #-0
    4254:	01000017 	tsteq	r0, r7, lsl r0
    4258:	96170d39 			; <UNDEFINED> instruction: 0x96170d39
    425c:	fa000007 	blx	4280 <_Min_Heap_Size+0x3a80>
    4260:	f800000e 			; <UNDEFINED> instruction: 0xf800000e
    4264:	1a00000e 	bne	42a4 <_Min_Heap_Size+0x3aa4>
    4268:	00000000 	andeq	r0, r0, r0
    426c:	00001b1f 	andeq	r1, r0, pc, lsl fp
    4270:	18411500 	stmdane	r1, {r8, sl, ip}^
    4274:	1f010000 	svcne	0x00010000
    4278:	30010d0d 	andcc	r0, r1, sp, lsl #26
    427c:	4008000e 	andmi	r0, r8, lr
    4280:	0d08000e 	stceq	0, cr0, [r8, #-56]	; 0xffffffc8
    4284:	0100000f 	tsteq	r0, pc
    4288:	00000af5 	strdeq	r0, [r0], -r5
    428c:	0015fc16 	andseq	pc, r5, r6, lsl ip	; <UNPREDICTABLE>
    4290:	0d1f0100 	ldfeqs	f0, [pc, #-0]	; 4298 <_Min_Heap_Size+0x3a98>
    4294:	00068835 	andeq	r8, r6, r5, lsr r8
    4298:	000f3100 	andeq	r3, pc, r0, lsl #2
    429c:	000f2d00 	andeq	r2, pc, r0, lsl #26
    42a0:	17741700 	ldrbne	r1, [r4, -r0, lsl #14]!
    42a4:	21010000 	mrscs	r0, (UNDEF: 1)
    42a8:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    42ac:	0f540000 	svceq	0x00540000
    42b0:	0f520000 	svceq	0x00520000
    42b4:	3e1a0000 	cdpcc	0, 1, cr0, cr10, cr0, {0}
    42b8:	4a08000e 	bmi	2042f8 <_Min_Heap_Size+0x203af8>
    42bc:	0000001b 	andeq	r0, r0, fp, lsl r0
    42c0:	0013cb25 	andseq	ip, r3, r5, lsr #22
    42c4:	0d070100 	stfeqs	f0, [r7, #-0]
    42c8:	095c010d 	ldmdbeq	ip, {r0, r2, r3, r8}^
    42cc:	09b80800 	ldmibeq	r8!, {fp}
    42d0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    42d4:	0ce90100 	stfeqe	f0, [r9]
    42d8:	74160000 	ldrvc	r0, [r6], #-0
    42dc:	01000017 	tsteq	r0, r7, lsl r0
    42e0:	96340d07 	ldrtls	r0, [r4], -r7, lsl #26
    42e4:	69000007 	stmdbvs	r0, {r0, r1, r2}
    42e8:	6700000f 	strvs	r0, [r0, -pc]
    42ec:	1c00000f 	stcne	0, cr0, [r0], {15}
    42f0:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
    42f4:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
    42f8:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    42fc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4300:	0d0a0100 	stfeqs	f0, [sl, #-0]
    4304:	0000c603 	andeq	ip, r0, r3, lsl #12
    4308:	000f7e00 	andeq	r7, pc, r0, lsl #28
    430c:	000f7c00 	andeq	r7, pc, r0, lsl #24
    4310:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    4314:	095e0000 	ldmdbeq	lr, {}^	; <UNPREDICTABLE>
    4318:	00000800 	andeq	r0, r0, r0, lsl #16
    431c:	0800095e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, fp}
    4320:	08000966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp}
    4324:	030d0a01 	movweq	r0, #55809	; 0xda01
    4328:	00000b7c 	andeq	r0, r0, ip, ror fp
    432c:	0045901f 	subeq	r9, r5, pc, lsl r0
    4330:	000f9700 	andeq	r9, pc, r0, lsl #14
    4334:	000f9100 	andeq	r9, pc, r0, lsl #2
    4338:	459d2000 	ldrmi	r2, [sp]
    433c:	0fc60000 	svceq	0x00c60000
    4340:	0fc40000 	svceq	0x00c40000
    4344:	21000000 	mrscs	r0, (UNDEF: 0)
    4348:	0000453c 	andeq	r4, r0, ip, lsr r5
    434c:	0800096a 	stmdaeq	r0, {r1, r3, r5, r6, r8, fp}
    4350:	096a0001 	stmdbeq	sl!, {r0}^
    4354:	09700800 	ldmdbeq	r0!, {fp}^
    4358:	0a010800 	beq	46360 <_Min_Heap_Size+0x45b60>
    435c:	5c1f030d 	ldcpl	3, cr0, [pc], {13}
    4360:	dd000045 	stcle	0, cr0, [r0, #-276]	; 0xfffffeec
    4364:	d900000f 	stmdble	r0, {r0, r1, r2, r3}
    4368:	1f00000f 	svcne	0x0000000f
    436c:	0000454f 	andeq	r4, r0, pc, asr #10
    4370:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4374:	00000ffd 	strdeq	r0, [r0], -sp
    4378:	00456920 	subeq	r6, r5, r0, lsr #18
    437c:	00101400 	andseq	r1, r0, r0, lsl #8
    4380:	00101200 	andseq	r1, r0, r0, lsl #4
    4384:	1c000000 	stcne	0, cr0, [r0], {-0}
    4388:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
    438c:	0800098c 	stmdaeq	r0, {r2, r3, r7, r8, fp}
    4390:	00000c54 	andeq	r0, r0, r4, asr ip
    4394:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4398:	0d0b0100 	stfeqs	f0, [fp, #-0]
    439c:	0000c603 	andeq	ip, r0, r3, lsl #12
    43a0:	00102900 	andseq	r2, r0, r0, lsl #18
    43a4:	00102700 	andseq	r2, r0, r0, lsl #14
    43a8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    43ac:	09760000 	ldmdbeq	r6!, {}^	; <UNPREDICTABLE>
    43b0:	00000800 	andeq	r0, r0, r0, lsl #16
    43b4:	08000976 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, fp}
    43b8:	0800097e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, fp}
    43bc:	030d0b01 	movweq	r0, #56065	; 0xdb01
    43c0:	00000c14 	andeq	r0, r0, r4, lsl ip
    43c4:	0045901f 	subeq	r9, r5, pc, lsl r0
    43c8:	00104200 	andseq	r4, r0, r0, lsl #4
    43cc:	00103c00 	andseq	r3, r0, r0, lsl #24
    43d0:	459d2000 	ldrmi	r2, [sp]
    43d4:	10710000 	rsbsne	r0, r1, r0
    43d8:	106f0000 	rsbne	r0, pc, r0
    43dc:	21000000 	mrscs	r0, (UNDEF: 0)
    43e0:	0000453c 	andeq	r4, r0, ip, lsr r5
    43e4:	08000982 	stmdaeq	r0, {r1, r7, r8, fp}
    43e8:	09820001 	stmibeq	r2, {r0}
    43ec:	09880800 	stmibeq	r8, {fp}
    43f0:	0b010800 	bleq	463f8 <_Min_Heap_Size+0x45bf8>
    43f4:	5c1f030d 	ldcpl	3, cr0, [pc], {13}
    43f8:	88000045 	stmdahi	r0, {r0, r2, r6}
    43fc:	84000010 	strhi	r0, [r0], #-16
    4400:	1f000010 	svcne	0x00000010
    4404:	0000454f 	andeq	r4, r0, pc, asr #10
    4408:	000010aa 	andeq	r1, r0, sl, lsr #1
    440c:	000010a8 	andeq	r1, r0, r8, lsr #1
    4410:	00456920 	subeq	r6, r5, r0, lsr #18
    4414:	0010bf00 	andseq	fp, r0, r0, lsl #30
    4418:	0010bd00 	andseq	fp, r0, r0, lsl #26
    441c:	26000000 	strcs	r0, [r0], -r0
    4420:	0800099e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, fp}
    4424:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
    4428:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    442c:	0d100100 	ldfeqs	f0, [r0, #-0]
    4430:	0000c605 	andeq	ip, r0, r5, lsl #12
    4434:	0010d400 	andseq	sp, r0, r0, lsl #8
    4438:	0010d200 	andseq	sp, r0, r0, lsl #4
    443c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    4440:	09a00000 	stmibeq	r0!, {}	; <UNPREDICTABLE>
    4444:	00000800 	andeq	r0, r0, r0, lsl #16
    4448:	080009a0 	stmdaeq	r0, {r5, r7, r8, fp}
    444c:	080009a8 	stmdaeq	r0, {r3, r5, r7, r8, fp}
    4450:	050d1001 	streq	r1, [sp, #-1]
    4454:	00000ca8 	andeq	r0, r0, r8, lsr #25
    4458:	0045901f 	subeq	r9, r5, pc, lsl r0
    445c:	0010ed00 	andseq	lr, r0, r0, lsl #26
    4460:	0010e700 	andseq	lr, r0, r0, lsl #14
    4464:	459d2000 	ldrmi	r2, [sp]
    4468:	111c0000 	tstne	ip, r0
    446c:	111a0000 	tstne	sl, r0
    4470:	21000000 	mrscs	r0, (UNDEF: 0)
    4474:	0000453c 	andeq	r4, r0, ip, lsr r5
    4478:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    447c:	09ac0001 	stmibeq	ip!, {r0}
    4480:	09b20800 	ldmibeq	r2!, {fp}
    4484:	10010800 	andne	r0, r1, r0, lsl #16
    4488:	5c1f050d 	cfldr32pl	mvfx0, [pc], {13}
    448c:	33000045 	movwcc	r0, #69	; 0x45
    4490:	2f000011 	svccs	0x00000011
    4494:	1f000011 	svcne	0x00000011
    4498:	0000454f 	andeq	r4, r0, pc, asr #10
    449c:	00001155 	andeq	r1, r0, r5, asr r1
    44a0:	00001153 	andeq	r1, r0, r3, asr r1
    44a4:	00456920 	subeq	r6, r5, r0, lsr #18
    44a8:	00116a00 	andseq	r6, r1, r0, lsl #20
    44ac:	00116800 	andseq	r6, r1, r0, lsl #16
    44b0:	00000000 	andeq	r0, r0, r0
    44b4:	0013de25 	andseq	sp, r3, r5, lsr #28
    44b8:	0cf90100 	ldfeqe	f0, [r9]
    44bc:	0000010d 	andeq	r0, r0, sp, lsl #2
    44c0:	00000000 	andeq	r0, r0, r0
    44c4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    44c8:	0dad0100 	stfeqs	f0, [sp]
    44cc:	74160000 	ldrvc	r0, [r6], #-0
    44d0:	01000017 	tsteq	r0, r7, lsl r0
    44d4:	96340cf9 			; <UNDEFINED> instruction: 0x96340cf9
    44d8:	7f000007 	svcvc	0x00000007
    44dc:	7d000011 	stcvc	0, cr0, [r0, #-68]	; 0xffffffbc
    44e0:	26000011 			; <UNDEFINED> instruction: 0x26000011
	...
    44ec:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    44f0:	0cfc0100 	ldfeqe	f0, [ip]
    44f4:	0000c603 	andeq	ip, r0, r3, lsl #12
    44f8:	00119400 	andseq	r9, r1, r0, lsl #8
    44fc:	00119200 	andseq	r9, r1, r0, lsl #4
    4500:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4514:	030cfc01 	movweq	pc, #52225	; 0xcc01	; <UNPREDICTABLE>
    4518:	00000d6c 	andeq	r0, r0, ip, ror #26
    451c:	0045901f 	subeq	r9, r5, pc, lsl r0
    4520:	0011ad00 	andseq	sl, r1, r0, lsl #26
    4524:	0011a700 	andseq	sl, r1, r0, lsl #14
    4528:	459d2000 	ldrmi	r2, [sp]
    452c:	11dc0000 	bicsne	r0, ip, r0
    4530:	11da0000 	bicsne	r0, sl, r0
    4534:	21000000 	mrscs	r0, (UNDEF: 0)
    4538:	0000453c 	andeq	r4, r0, ip, lsr r5
    453c:	00000000 	andeq	r0, r0, r0
    4540:	00000001 	andeq	r0, r0, r1
    4544:	00000000 	andeq	r0, r0, r0
    4548:	fc010000 	stc2	0, cr0, [r1], {-0}
    454c:	5c1f030c 	ldcpl	3, cr0, [pc], {12}
    4550:	f3000045 	vhadd.u8	q0, q0, <illegal reg q2.5>
    4554:	ef000011 	svc	0x00000011
    4558:	1f000011 	svcne	0x00000011
    455c:	0000454f 	andeq	r4, r0, pc, asr #10
    4560:	00001215 	andeq	r1, r0, r5, lsl r2
    4564:	00001213 	andeq	r1, r0, r3, lsl r2
    4568:	00456920 	subeq	r6, r5, r0, lsr #18
    456c:	00122a00 	andseq	r2, r2, r0, lsl #20
    4570:	00122800 	andseq	r2, r2, r0, lsl #16
    4574:	00000000 	andeq	r0, r0, r0
    4578:	16f40127 	ldrbtne	r0, [r4], r7, lsr #2
    457c:	c7010000 	strgt	r0, [r1, -r0]
    4580:	3a01130c 	bcc	491b8 <_Min_Heap_Size+0x489b8>
    4584:	00000002 	andeq	r0, r0, r2
    4588:	00000000 	andeq	r0, r0, r0
    458c:	3d000000 	stccc	0, cr0, [r0, #-0]
    4590:	01000012 	tsteq	r0, r2, lsl r0
    4594:	00001019 	andeq	r1, r0, r9, lsl r0
    4598:	00177416 	andseq	r7, r7, r6, lsl r4
    459c:	0cc70100 	stfeqe	f0, [r7], {0}
    45a0:	0007963e 	andeq	r9, r7, lr, lsr r6
    45a4:	00127b00 	andseq	r7, r2, r0, lsl #22
    45a8:	00127500 	andseq	r7, r2, r0, lsl #10
    45ac:	13c51600 	bicne	r1, r5, #0, 12
    45b0:	c7010000 	strgt	r0, [r1, -r0]
    45b4:	06824e0c 	streq	r4, [r2], ip, lsl #28
    45b8:	12ad0000 	adcne	r0, sp, #0
    45bc:	12a70000 	adcne	r0, r7, #0
    45c0:	d9160000 	ldmdble	r6, {}	; <UNPREDICTABLE>
    45c4:	01000000 	mrseq	r0, (UNDEF: 0)
    45c8:	b05e0cc7 	subslt	r0, lr, r7, asr #25
    45cc:	e1000000 	mrs	r0, (UNDEF: 0)
    45d0:	d9000012 	stmdble	r0, {r1, r4}
    45d4:	1d000012 	stcne	0, cr0, [r0, #-72]	; 0xffffffb8
    45d8:	00706d74 	rsbseq	r6, r0, r4, ror sp
    45dc:	0d0cc901 	vstreq.16	s24, [ip, #-2]	; <UNPREDICTABLE>
    45e0:	00001019 	andeq	r1, r0, r9, lsl r0
    45e4:	0000131c 	andeq	r1, r0, ip, lsl r3
    45e8:	0000131a 	andeq	r1, r0, sl, lsl r3
    45ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    45f0:	00000000 	andeq	r0, r0, r0
    45f4:	000e3f00 	andeq	r3, lr, r0, lsl #30
    45f8:	057d2200 	ldrbeq	r2, [sp, #-512]!	; 0xfffffe00
    45fc:	e2010000 	and	r0, r1, #0
    4600:	00d2030c 	sbcseq	r0, r2, ip, lsl #6
    4604:	91020000 	mrsls	r0, (UNDEF: 2)
    4608:	001c006c 	andseq	r0, ip, ip, rrx
    460c:	00000000 	andeq	r0, r0, r0
    4610:	d7000000 	strle	r0, [r0, -r0]
    4614:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    4618:	006c6176 	rsbeq	r6, ip, r6, ror r1
    461c:	050ce701 	streq	lr, [ip, #-1793]	; 0xfffff8ff
    4620:	000000c6 	andeq	r0, r0, r6, asr #1
    4624:	00001336 	andeq	r1, r0, r6, lsr r3
    4628:	00001334 	andeq	r1, r0, r4, lsr r3
    462c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    463c:	01000000 	mrseq	r0, (UNDEF: 0)
    4640:	97050ce7 	strls	r0, [r5, -r7, ror #25]
    4644:	1f00000e 	svcne	0x0000000e
    4648:	00004590 	muleq	r0, r0, r5
    464c:	0000134f 	andeq	r1, r0, pc, asr #6
    4650:	00001349 	andeq	r1, r0, r9, asr #6
    4654:	00459d20 	subeq	r9, r5, r0, lsr #26
    4658:	00137e00 	andseq	r7, r3, r0, lsl #28
    465c:	00137c00 	andseq	r7, r3, r0, lsl #24
    4660:	3c210000 	stccc	0, cr0, [r1], #-0
    4664:	00000045 	andeq	r0, r0, r5, asr #32
    4668:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4674:	0ce70100 	stfeqe	f0, [r7]
    4678:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    467c:	13950000 	orrsne	r0, r5, #0
    4680:	13910000 	orrsne	r0, r1, #0
    4684:	4f1f0000 	svcmi	0x001f0000
    4688:	b7000045 	strlt	r0, [r0, -r5, asr #32]
    468c:	b5000013 	strlt	r0, [r0, #-19]	; 0xffffffed
    4690:	20000013 	andcs	r0, r0, r3, lsl r0
    4694:	00004569 	andeq	r4, r0, r9, ror #10
    4698:	000013cc 	andeq	r1, r0, ip, asr #7
    469c:	000013ca 	andeq	r1, r0, sl, asr #7
    46a0:	001c0000 	andseq	r0, ip, r0
    46a4:	00000000 	andeq	r0, r0, r0
    46a8:	6f000000 	svcvs	0x00000000
    46ac:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    46b0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    46b4:	030ceb01 	movweq	lr, #51969	; 0xcb01
    46b8:	000000c6 	andeq	r0, r0, r6, asr #1
    46bc:	000013e1 	andeq	r1, r0, r1, ror #7
    46c0:	000013df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    46c4:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    46d4:	01000000 	mrseq	r0, (UNDEF: 0)
    46d8:	2f030ceb 	svccs	0x00030ceb
    46dc:	1f00000f 	svcne	0x0000000f
    46e0:	00004590 	muleq	r0, r0, r5
    46e4:	000013fa 	strdeq	r1, [r0], -sl
    46e8:	000013f4 	strdeq	r1, [r0], -r4
    46ec:	00459d20 	subeq	r9, r5, r0, lsr #26
    46f0:	00142900 	andseq	r2, r4, r0, lsl #18
    46f4:	00142700 	andseq	r2, r4, r0, lsl #14
    46f8:	3c210000 	stccc	0, cr0, [r1], #-0
    46fc:	00000045 	andeq	r0, r0, r5, asr #32
    4700:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    470c:	0ceb0100 	stfeqe	f0, [fp]
    4710:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    4714:	14400000 	strbne	r0, [r0], #-0
    4718:	143c0000 	ldrtne	r0, [ip], #-0
    471c:	4f1f0000 	svcmi	0x001f0000
    4720:	62000045 	andvs	r0, r0, #69	; 0x45
    4724:	60000014 	andvs	r0, r0, r4, lsl r0
    4728:	20000014 	andcs	r0, r0, r4, lsl r0
    472c:	00004569 	andeq	r4, r0, r9, ror #10
    4730:	00001477 	andeq	r1, r0, r7, ror r4
    4734:	00001475 	andeq	r1, r0, r5, ror r4
    4738:	001c0000 	andseq	r0, ip, r0
    473c:	00000000 	andeq	r0, r0, r0
    4740:	07000000 	streq	r0, [r0, -r0]
    4744:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    4748:	006c6176 	rsbeq	r6, ip, r6, ror r1
    474c:	030cef01 	movweq	lr, #52993	; 0xcf01
    4750:	000000c6 	andeq	r0, r0, r6, asr #1
    4754:	0000148c 	andeq	r1, r0, ip, lsl #9
    4758:	0000148a 	andeq	r1, r0, sl, lsl #9
    475c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    476c:	01000000 	mrseq	r0, (UNDEF: 0)
    4770:	c7030cef 	strgt	r0, [r3, -pc, ror #25]
    4774:	1f00000f 	svcne	0x0000000f
    4778:	00004590 	muleq	r0, r0, r5
    477c:	000014a5 	andeq	r1, r0, r5, lsr #9
    4780:	0000149f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    4784:	00459d20 	subeq	r9, r5, r0, lsr #26
    4788:	0014d400 	andseq	sp, r4, r0, lsl #8
    478c:	0014d200 	andseq	sp, r4, r0, lsl #4
    4790:	3c210000 	stccc	0, cr0, [r1], #-0
    4794:	00000045 	andeq	r0, r0, r5, asr #32
    4798:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    47a4:	0cef0100 	stfeqe	f0, [pc]	; 47ac <_Min_Heap_Size+0x3fac>
    47a8:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    47ac:	14eb0000 	strbtne	r0, [fp], #0
    47b0:	14e70000 	strbtne	r0, [r7], #0
    47b4:	4f1f0000 	svcmi	0x001f0000
    47b8:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    47bc:	0b000015 	bleq	4818 <_Min_Heap_Size+0x4018>
    47c0:	20000015 	andcs	r0, r0, r5, lsl r0
    47c4:	00004569 	andeq	r4, r0, r9, ror #10
    47c8:	00001522 	andeq	r1, r0, r2, lsr #10
    47cc:	00001520 	andeq	r1, r0, r0, lsr #10
    47d0:	00230000 	eoreq	r0, r3, r0
    47d4:	e3000000 	movw	r0, #0
    47d8:	19000045 	stmdbne	r0, {r0, r2, r6}
    47dc:	f3035201 	vhsub.u8	d5, d3, d1
    47e0:	00005101 	andeq	r5, r0, r1, lsl #2
    47e4:	00c60411 	sbceq	r0, r6, r1, lsl r4
    47e8:	01280000 			; <UNDEFINED> instruction: 0x01280000
    47ec:	000014d0 	ldrdeq	r1, [r0], -r0
    47f0:	130ca401 	movwne	sl, #50177	; 0xc401
    47f4:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4800:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4804:	00107801 	andseq	r7, r0, r1, lsl #16
    4808:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    480c:	a4010000 	strge	r0, [r1], #-0
    4810:	07963d0c 	ldreq	r3, [r6, ip, lsl #26]
    4814:	15390000 	ldrne	r0, [r9, #-0]!
    4818:	15350000 	ldrne	r0, [r5, #-0]!
    481c:	c5290000 	strgt	r0, [r9, #-0]!
    4820:	01000013 	tsteq	r0, r3, lsl r0
    4824:	824d0ca4 	subhi	r0, sp, #164, 24	; 0xa400
    4828:	01000006 	tsteq	r0, r6
    482c:	00d91651 	sbcseq	r1, r9, r1, asr r6
    4830:	a4010000 	strge	r0, [r1], #-0
    4834:	00b05d0c 	adcseq	r5, r0, ip, lsl #26
    4838:	15600000 	strbne	r0, [r0, #-0]!
    483c:	155a0000 	ldrbne	r0, [sl, #-0]
    4840:	1b000000 	blne	4848 <_Min_Heap_Size+0x4048>
    4844:	00001695 	muleq	r0, r5, r6
    4848:	1a0c7101 	bne	320c54 <_Min_Heap_Size+0x320454>
    484c:	00023a01 	andeq	r3, r2, r1, lsl #20
    4850:	000b8c00 	andeq	r8, fp, r0, lsl #24
    4854:	000c1608 	andeq	r1, ip, r8, lsl #12
    4858:	00158d08 	andseq	r8, r5, r8, lsl #26
    485c:	11380100 	teqne	r8, r0, lsl #2
    4860:	74160000 	ldrvc	r0, [r6], #-0
    4864:	01000017 	tsteq	r0, r7, lsl r0
    4868:	964a0c71 			; <UNDEFINED> instruction: 0x964a0c71
    486c:	d5000007 	strle	r0, [r0, #-7]
    4870:	d1000015 	tstle	r0, r5, lsl r0
    4874:	16000015 			; <UNDEFINED> instruction: 0x16000015
    4878:	00001456 	andeq	r1, r0, r6, asr r4
    487c:	5a0c7101 	bpl	320c88 <_Min_Heap_Size+0x320488>
    4880:	000000c6 	andeq	r0, r0, r6, asr #1
    4884:	000015f7 	strdeq	r1, [r0], -r7
    4888:	000015f3 	strdeq	r1, [r0], -r3
    488c:	00134216 	andseq	r4, r3, r6, lsl r2
    4890:	0c710100 	ldfeqe	f0, [r1], #-0
    4894:	0002006b 	andeq	r0, r2, fp, rrx
    4898:	00161900 	andseq	r1, r6, r0, lsl #18
    489c:	00161500 	andseq	r1, r6, r0, lsl #10
    48a0:	14831600 	strne	r1, [r3], #1536	; 0x600
    48a4:	72010000 	andvc	r0, r1, #0
    48a8:	00c63f0c 	sbceq	r3, r6, ip, lsl #30
    48ac:	163e0000 	ldrtne	r0, [lr], -r0
    48b0:	163a0000 	ldrtne	r0, [sl], -r0
    48b4:	a9160000 	ldmdbge	r6, {}	; <UNPREDICTABLE>
    48b8:	01000016 	tsteq	r0, r6, lsl r0
    48bc:	c6530c72 			; <UNDEFINED> instruction: 0xc6530c72
    48c0:	60000000 	andvs	r0, r0, r0
    48c4:	5c000016 	stcpl	0, cr0, [r0], {22}
    48c8:	1c000016 	stcne	0, cr0, [r0], {22}
    48cc:	08000be6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, fp}
    48d0:	08000bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp}
    48d4:	0000111e 	andeq	r1, r0, lr, lsl r1
    48d8:	00057d22 	andeq	r7, r5, r2, lsr #26
    48dc:	0c850100 	stfeqs	f0, [r5], {0}
    48e0:	0000d20b 	andeq	sp, r0, fp, lsl #4
    48e4:	5c910200 	lfmpl	f0, 4, [r1], {0}
    48e8:	0bbe1a00 	bleq	fef8b0f0 <_estack+0xdef89eb8>
    48ec:	45f20800 	ldrbmi	r0, [r2, #2048]!	; 0x800
    48f0:	fa230000 	blx	8c48f8 <_Min_Heap_Size+0x8c40f8>
    48f4:	f508000b 			; <UNDEFINED> instruction: 0xf508000b
    48f8:	1900000a 	stmdbne	r0, {r1, r3}
    48fc:	75025001 	strvc	r5, [r2, #-1]
    4900:	15000000 	strne	r0, [r0, #-0]
    4904:	0000160a 	andeq	r1, r0, sl, lsl #12
    4908:	0d0c4701 	stceq	7, cr4, [ip, #-4]
    490c:	00000001 	andeq	r0, r0, r1
    4910:	00000000 	andeq	r0, r0, r0
    4914:	00168000 	andseq	r8, r6, r0
    4918:	11cb0100 	bicne	r0, fp, r0, lsl #2
    491c:	fc160000 	ldc2	0, cr0, [r6], {-0}
    4920:	01000015 	tsteq	r0, r5, lsl r0
    4924:	882e0c47 	stmdahi	lr!, {r0, r1, r2, r6, sl, fp}
    4928:	a8000006 	stmdage	r0, {r1, r2}
    492c:	a0000016 	andge	r0, r0, r6, lsl r0
    4930:	17000016 	smladne	r0, r6, r0, r0
    4934:	00001810 	andeq	r1, r0, r0, lsl r8
    4938:	0c0c4901 			; <UNDEFINED> instruction: 0x0c0c4901
    493c:	000000c6 	andeq	r0, r0, r6, asr #1
    4940:	000016ec 	andeq	r1, r0, ip, ror #13
    4944:	000016e2 	andeq	r1, r0, r2, ror #13
    4948:	00177417 	andseq	r7, r7, r7, lsl r4
    494c:	0c4a0100 	stfeqe	f0, [sl], {-0}
    4950:	00079617 	andeq	r9, r7, r7, lsl r6
    4954:	00175000 	andseq	r5, r7, r0
    4958:	00174e00 	andseq	r4, r7, r0, lsl #28
    495c:	00001800 	andeq	r1, r0, r0, lsl #16
    4960:	1b4a0000 	blne	1284968 <_Min_Heap_Size+0x1284168>
    4964:	11a60000 			; <UNDEFINED> instruction: 0x11a60000
    4968:	01190000 	tsteq	r9, r0
    496c:	00740250 	rsbseq	r0, r4, r0, asr r2
    4970:	00001800 	andeq	r1, r0, r0, lsl #16
    4974:	0ce90000 	stcleq	0, cr0, [r9]
    4978:	11ba0000 			; <UNDEFINED> instruction: 0x11ba0000
    497c:	01190000 	tsteq	r9, r0
    4980:	00740250 	rsbseq	r0, r4, r0, asr r2
    4984:	00002300 	andeq	r2, r0, r0, lsl #6
    4988:	0af50000 	beq	ffd44990 <_estack+0xdfd43758>
    498c:	01190000 	tsteq	r9, r0
    4990:	00740250 	rsbseq	r0, r4, r0, asr r2
    4994:	36150000 	ldrcc	r0, [r5], -r0
    4998:	01000016 	tsteq	r0, r6, lsl r0
    499c:	010d0c20 	tsteq	sp, r0, lsr #24
	...
    49a8:	00001763 	andeq	r1, r0, r3, ror #14
    49ac:	00122301 	andseq	r2, r2, r1, lsl #6
    49b0:	15fc1600 	ldrbne	r1, [ip, #1536]!	; 0x600
    49b4:	20010000 	andcs	r0, r1, r0
    49b8:	0688330c 	streq	r3, [r8], ip, lsl #6
    49bc:	17870000 	strne	r0, [r7, r0]
    49c0:	17830000 	strne	r0, [r3, r0]
    49c4:	74170000 	ldrvc	r0, [r7], #-0
    49c8:	01000017 	tsteq	r0, r7, lsl r0
    49cc:	96170c22 	ldrls	r0, [r7], -r2, lsr #24
    49d0:	ac000007 	stcge	0, cr0, [r0], {7}
    49d4:	a8000017 	stmdage	r0, {r0, r1, r2, r4}
    49d8:	1a000017 	bne	4a3c <_Min_Heap_Size+0x423c>
    49dc:	00000000 	andeq	r0, r0, r0
    49e0:	00001b75 	andeq	r1, r0, r5, ror fp
    49e4:	0000001a 	andeq	r0, r0, sl, lsl r0
    49e8:	001a8f00 	andseq	r8, sl, r0, lsl #30
    49ec:	fc150000 	ldc2	0, cr0, [r5], {-0}
    49f0:	01000013 	tsteq	r0, r3, lsl r0
    49f4:	010d0be2 	smlatteq	sp, r2, fp, r0
	...
    4a00:	000017ca 	andeq	r1, r0, sl, asr #15
    4a04:	0014db01 	andseq	sp, r4, r1, lsl #22
    4a08:	15fc1600 	ldrbne	r1, [ip, #1536]!	; 0x600
    4a0c:	e2010000 	and	r0, r1, #0
    4a10:	0688340b 	streq	r3, [r8], fp, lsl #8
    4a14:	17f00000 	ldrbne	r0, [r0, r0]!
    4a18:	17ea0000 	strbne	r0, [sl, r0]!
    4a1c:	74170000 	ldrvc	r0, [r7], #-0
    4a20:	01000017 	tsteq	r0, r7, lsl r0
    4a24:	96170be4 	ldrls	r0, [r7], -r4, ror #23
    4a28:	20000007 	andcs	r0, r0, r7
    4a2c:	1c000018 	stcne	0, cr0, [r0], {24}
    4a30:	1c000018 	stcne	0, cr0, [r0], {24}
	...
    4a3c:	00001300 	andeq	r1, r0, r0, lsl #6
    4a40:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4a44:	0bec0100 	bleq	ffb04e4c <_estack+0xdfb03c14>
    4a48:	0000c605 	andeq	ip, r0, r5, lsl #12
    4a4c:	00184000 	andseq	r4, r8, r0
    4a50:	00183e00 	andseq	r3, r8, r0, lsl #28
    4a54:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4a68:	050bec01 	streq	lr, [fp, #-3073]	; 0xfffff3ff
    4a6c:	000012c0 	andeq	r1, r0, r0, asr #5
    4a70:	0045901f 	subeq	r9, r5, pc, lsl r0
    4a74:	00185900 	andseq	r5, r8, r0, lsl #18
    4a78:	00185300 	andseq	r5, r8, r0, lsl #6
    4a7c:	459d2000 	ldrmi	r2, [sp]
    4a80:	18880000 	stmne	r8, {}	; <UNPREDICTABLE>
    4a84:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    4a88:	21000000 	mrscs	r0, (UNDEF: 0)
    4a8c:	0000453c 	andeq	r4, r0, ip, lsr r5
    4a90:	00000000 	andeq	r0, r0, r0
    4a94:	00000001 	andeq	r0, r0, r1
    4a98:	00000000 	andeq	r0, r0, r0
    4a9c:	ec010000 	stc	0, cr0, [r1], {-0}
    4aa0:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4aa4:	9f000045 	svcls	0x00000045
    4aa8:	9b000018 	blls	4b10 <_Min_Heap_Size+0x4310>
    4aac:	1f000018 	svcne	0x00000018
    4ab0:	0000454f 	andeq	r4, r0, pc, asr #10
    4ab4:	000018c1 	andeq	r1, r0, r1, asr #17
    4ab8:	000018bf 			; <UNDEFINED> instruction: 0x000018bf
    4abc:	00456920 	subeq	r6, r5, r0, lsr #18
    4ac0:	0018d600 	andseq	sp, r8, r0, lsl #12
    4ac4:	0018d400 	andseq	sp, r8, r0, lsl #8
    4ac8:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4ad4:	00001398 	muleq	r0, r8, r3
    4ad8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4adc:	0bed0100 	bleq	ffb44ee4 <_estack+0xdfb43cac>
    4ae0:	0000c605 	andeq	ip, r0, r5, lsl #12
    4ae4:	0018eb00 	andseq	lr, r8, r0, lsl #22
    4ae8:	0018e900 	andseq	lr, r8, r0, lsl #18
    4aec:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4b00:	050bed01 	streq	lr, [fp, #-3329]	; 0xfffff2ff
    4b04:	00001358 	andeq	r1, r0, r8, asr r3
    4b08:	0045901f 	subeq	r9, r5, pc, lsl r0
    4b0c:	00190400 	andseq	r0, r9, r0, lsl #8
    4b10:	0018fe00 	andseq	pc, r8, r0, lsl #28
    4b14:	459d2000 	ldrmi	r2, [sp]
    4b18:	19330000 	ldmdbne	r3!, {}	; <UNPREDICTABLE>
    4b1c:	19310000 	ldmdbne	r1!, {}	; <UNPREDICTABLE>
    4b20:	21000000 	mrscs	r0, (UNDEF: 0)
    4b24:	0000453c 	andeq	r4, r0, ip, lsr r5
    4b28:	00000000 	andeq	r0, r0, r0
    4b2c:	00000001 	andeq	r0, r0, r1
    4b30:	00000000 	andeq	r0, r0, r0
    4b34:	ed010000 	stc	0, cr0, [r1, #-0]
    4b38:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4b3c:	4a000045 	bmi	4c58 <_Min_Heap_Size+0x4458>
    4b40:	46000019 			; <UNDEFINED> instruction: 0x46000019
    4b44:	1f000019 	svcne	0x00000019
    4b48:	0000454f 	andeq	r4, r0, pc, asr #10
    4b4c:	0000196c 	andeq	r1, r0, ip, ror #18
    4b50:	0000196a 	andeq	r1, r0, sl, ror #18
    4b54:	00456920 	subeq	r6, r5, r0, lsr #18
    4b58:	00198100 	andseq	r8, r9, r0, lsl #2
    4b5c:	00197f00 	andseq	r7, r9, r0, lsl #30
    4b60:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4b6c:	00001430 	andeq	r1, r0, r0, lsr r4
    4b70:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4b74:	0bf10100 	bleq	ffc44f7c <_estack+0xdfc43d44>
    4b78:	0000c605 	andeq	ip, r0, r5, lsl #12
    4b7c:	00199600 	andseq	r9, r9, r0, lsl #12
    4b80:	00199400 	andseq	r9, r9, r0, lsl #8
    4b84:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4b98:	050bf101 	streq	pc, [fp, #-257]	; 0xfffffeff
    4b9c:	000013f0 	strdeq	r1, [r0], -r0
    4ba0:	0045901f 	subeq	r9, r5, pc, lsl r0
    4ba4:	0019af00 	andseq	sl, r9, r0, lsl #30
    4ba8:	0019a900 	andseq	sl, r9, r0, lsl #18
    4bac:	459d2000 	ldrmi	r2, [sp]
    4bb0:	19de0000 	ldmibne	lr, {}^	; <UNPREDICTABLE>
    4bb4:	19dc0000 	ldmibne	ip, {}^	; <UNPREDICTABLE>
    4bb8:	21000000 	mrscs	r0, (UNDEF: 0)
    4bbc:	0000453c 	andeq	r4, r0, ip, lsr r5
    4bc0:	00000000 	andeq	r0, r0, r0
    4bc4:	00000001 	andeq	r0, r0, r1
    4bc8:	00000000 	andeq	r0, r0, r0
    4bcc:	f1010000 	setend	le
    4bd0:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4bd4:	f5000045 			; <UNDEFINED> instruction: 0xf5000045
    4bd8:	f1000019 	cps	#25
    4bdc:	1f000019 	svcne	0x00000019
    4be0:	0000454f 	andeq	r4, r0, pc, asr #10
    4be4:	00001a17 	andeq	r1, r0, r7, lsl sl
    4be8:	00001a15 	andeq	r1, r0, r5, lsl sl
    4bec:	00456920 	subeq	r6, r5, r0, lsr #18
    4bf0:	001a2c00 	andseq	r2, sl, r0, lsl #24
    4bf4:	001a2a00 	andseq	r2, sl, r0, lsl #20
    4bf8:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4c04:	000014c8 	andeq	r1, r0, r8, asr #9
    4c08:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4c0c:	0bf90100 	bleq	ffe45014 <_estack+0xdfe43ddc>
    4c10:	0000c607 	andeq	ip, r0, r7, lsl #12
    4c14:	001a4100 	andseq	r4, sl, r0, lsl #2
    4c18:	001a3f00 	andseq	r3, sl, r0, lsl #30
    4c1c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4c30:	070bf901 	streq	pc, [fp, -r1, lsl #18]
    4c34:	00001488 	andeq	r1, r0, r8, lsl #9
    4c38:	0045901f 	subeq	r9, r5, pc, lsl r0
    4c3c:	001a5a00 	andseq	r5, sl, r0, lsl #20
    4c40:	001a5400 	andseq	r5, sl, r0, lsl #8
    4c44:	459d2000 	ldrmi	r2, [sp]
    4c48:	1a890000 	bne	fe244c50 <_estack+0xde243a18>
    4c4c:	1a870000 	bne	fe1c4c54 <_estack+0xde1c3a1c>
    4c50:	21000000 	mrscs	r0, (UNDEF: 0)
    4c54:	0000453c 	andeq	r4, r0, ip, lsr r5
    4c58:	00000000 	andeq	r0, r0, r0
    4c5c:	00000001 	andeq	r0, r0, r1
    4c60:	00000000 	andeq	r0, r0, r0
    4c64:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    4c68:	5c1f070b 	ldcpl	7, cr0, [pc], {11}
    4c6c:	a0000045 	andge	r0, r0, r5, asr #32
    4c70:	9c00001a 	stcls	0, cr0, [r0], {26}
    4c74:	1f00001a 	svcne	0x0000001a
    4c78:	0000454f 	andeq	r4, r0, pc, asr #10
    4c7c:	00001ac2 	andeq	r1, r0, r2, asr #21
    4c80:	00001ac0 	andeq	r1, r0, r0, asr #21
    4c84:	00456920 	subeq	r6, r5, r0, lsr #18
    4c88:	001ad700 	andseq	sp, sl, r0, lsl #14
    4c8c:	001ad500 	andseq	sp, sl, r0, lsl #10
    4c90:	1a000000 	bne	4c98 <_Min_Heap_Size+0x4498>
    4c94:	00000000 	andeq	r0, r0, r0
    4c98:	00001ba0 	andeq	r1, r0, r0, lsr #23
    4c9c:	0000001a 	andeq	r0, r0, sl, lsl r0
    4ca0:	001a8f00 	andseq	r8, sl, r0, lsl #30
    4ca4:	10150000 	andsne	r0, r5, r0
    4ca8:	01000014 	tsteq	r0, r4, lsl r0
    4cac:	010d0bcf 	smlabteq	sp, pc, fp, r0	; <UNPREDICTABLE>
	...
    4cb8:	00001aea 	andeq	r1, r0, sl, ror #21
    4cbc:	00152a01 	andseq	r2, r5, r1, lsl #20
    4cc0:	15fc1600 	ldrbne	r1, [ip, #1536]!	; 0x600
    4cc4:	cf010000 	svcgt	0x00010000
    4cc8:	0688330b 	streq	r3, [r8], fp, lsl #6
    4ccc:	1b0e0000 	blne	384cd4 <_Min_Heap_Size+0x3844d4>
    4cd0:	1b0a0000 	blne	284cd8 <_Min_Heap_Size+0x2844d8>
    4cd4:	74170000 	ldrvc	r0, [r7], #-0
    4cd8:	01000017 	tsteq	r0, r7, lsl r0
    4cdc:	96170bd1 			; <UNDEFINED> instruction: 0x96170bd1
    4ce0:	33000007 	movwcc	r0, #7
    4ce4:	2f00001b 	svccs	0x0000001b
    4ce8:	1a00001b 	bne	4d5c <_Min_Heap_Size+0x455c>
    4cec:	00000000 	andeq	r0, r0, r0
    4cf0:	00001bcb 	andeq	r1, r0, fp, asr #23
    4cf4:	18611500 	stmdane	r1!, {r8, sl, ip}^
    4cf8:	ac010000 	stcge	0, cr0, [r1], {-0}
    4cfc:	00010d0b 	andeq	r0, r1, fp, lsl #26
    4d00:	00000000 	andeq	r0, r0, r0
    4d04:	52000000 	andpl	r0, r0, #0
    4d08:	0100001b 	tsteq	r0, fp, lsl r0
    4d0c:	000016a9 	andeq	r1, r0, r9, lsr #13
    4d10:	0015fc16 	andseq	pc, r5, r6, lsl ip	; <UNPREDICTABLE>
    4d14:	0bac0100 	bleq	feb0511c <_estack+0xdeb03ee4>
    4d18:	00068835 	andeq	r8, r6, r5, lsr r8
    4d1c:	001b7800 	andseq	r7, fp, r0, lsl #16
    4d20:	001b7200 	andseq	r7, fp, r0, lsl #4
    4d24:	17741700 	ldrbne	r1, [r4, -r0, lsl #14]!
    4d28:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    4d2c:	0796170b 	ldreq	r1, [r6, fp, lsl #14]
    4d30:	1ba80000 	blne	fea04d38 <_estack+0xdea03b00>
    4d34:	1ba40000 	blne	fe904d3c <_estack+0xde903b04>
    4d38:	001c0000 	andseq	r0, ip, r0
    4d3c:	00000000 	andeq	r0, r0, r0
    4d40:	07000000 	streq	r0, [r0, -r0]
    4d44:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    4d48:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4d4c:	050bb601 	streq	fp, [fp, #-1537]	; 0xfffff9ff
    4d50:	000000c6 	andeq	r0, r0, r6, asr #1
    4d54:	00001bc8 	andeq	r1, r0, r8, asr #23
    4d58:	00001bc6 	andeq	r1, r0, r6, asr #23
    4d5c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    4d6c:	01000000 	mrseq	r0, (UNDEF: 0)
    4d70:	c7050bb6 			; <UNDEFINED> instruction: 0xc7050bb6
    4d74:	1f000015 	svcne	0x00000015
    4d78:	00004590 	muleq	r0, r0, r5
    4d7c:	00001be1 	andeq	r1, r0, r1, ror #23
    4d80:	00001bdb 	ldrdeq	r1, [r0], -fp
    4d84:	00459d20 	subeq	r9, r5, r0, lsr #26
    4d88:	001c1000 	andseq	r1, ip, r0
    4d8c:	001c0e00 	andseq	r0, ip, r0, lsl #28
    4d90:	3c210000 	stccc	0, cr0, [r1], #-0
    4d94:	00000045 	andeq	r0, r0, r5, asr #32
    4d98:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4da4:	0bb60100 	bleq	fed851ac <_estack+0xded83f74>
    4da8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    4dac:	1c270000 	stcne	0, cr0, [r7], #-0
    4db0:	1c230000 	stcne	0, cr0, [r3], #-0
    4db4:	4f1f0000 	svcmi	0x001f0000
    4db8:	49000045 	stmdbmi	r0, {r0, r2, r6}
    4dbc:	4700001c 	smladmi	r0, ip, r0, r0
    4dc0:	2000001c 	andcs	r0, r0, ip, lsl r0
    4dc4:	00004569 	andeq	r4, r0, r9, ror #10
    4dc8:	00001c5e 	andeq	r1, r0, lr, asr ip
    4dcc:	00001c5c 	andeq	r1, r0, ip, asr ip
    4dd0:	001c0000 	andseq	r0, ip, r0
    4dd4:	00000000 	andeq	r0, r0, r0
    4dd8:	9f000000 	svcls	0x00000000
    4ddc:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    4de0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4de4:	050bb901 	streq	fp, [fp, #-2305]	; 0xfffff6ff
    4de8:	000000c6 	andeq	r0, r0, r6, asr #1
    4dec:	00001c73 	andeq	r1, r0, r3, ror ip
    4df0:	00001c71 	andeq	r1, r0, r1, ror ip
    4df4:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    4e04:	01000000 	mrseq	r0, (UNDEF: 0)
    4e08:	5f050bb9 	svcpl	0x00050bb9
    4e0c:	1f000016 	svcne	0x00000016
    4e10:	00004590 	muleq	r0, r0, r5
    4e14:	00001c8c 	andeq	r1, r0, ip, lsl #25
    4e18:	00001c86 	andeq	r1, r0, r6, lsl #25
    4e1c:	00459d20 	subeq	r9, r5, r0, lsr #26
    4e20:	001cbb00 	andseq	fp, ip, r0, lsl #22
    4e24:	001cb900 	andseq	fp, ip, r0, lsl #18
    4e28:	3c210000 	stccc	0, cr0, [r1], #-0
    4e2c:	00000045 	andeq	r0, r0, r5, asr #32
    4e30:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4e3c:	0bb90100 	bleq	fee45244 <_estack+0xdee4400c>
    4e40:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    4e44:	1cd20000 	ldclne	0, cr0, [r2], {0}
    4e48:	1cce0000 	stclne	0, cr0, [lr], {0}
    4e4c:	4f1f0000 	svcmi	0x001f0000
    4e50:	f4000045 	vst4.16	{d0-d3}, [r0], r5
    4e54:	f200001c 	vqadd.s8	d0, d0, d12
    4e58:	2000001c 	andcs	r0, r0, ip, lsl r0
    4e5c:	00004569 	andeq	r4, r0, r9, ror #10
    4e60:	00001d09 	andeq	r1, r0, r9, lsl #26
    4e64:	00001d07 	andeq	r1, r0, r7, lsl #26
    4e68:	001a0000 	andseq	r0, sl, r0
    4e6c:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    4e70:	0000001b 	andeq	r0, r0, fp, lsl r0
    4e74:	13b30128 			; <UNDEFINED> instruction: 0x13b30128
    4e78:	7f010000 	svcvc	0x00010000
    4e7c:	c6010a0b 	strgt	r0, [r1], -fp, lsl #20
	...
    4e88:	02000000 	andeq	r0, r0, #0
    4e8c:	de01007d 	mcrle	0, 0, r0, cr1, cr13, {3}
    4e90:	16000016 			; <UNDEFINED> instruction: 0x16000016
    4e94:	00001774 	andeq	r1, r0, r4, ror r7
    4e98:	360b7f01 	strcc	r7, [fp], -r1, lsl #30
    4e9c:	000016de 	ldrdeq	r1, [r0], -lr
    4ea0:	00001d20 	andeq	r1, r0, r0, lsr #26
    4ea4:	00001d1c 	andeq	r1, r0, ip, lsl sp
    4ea8:	9a041100 	bls	1092b0 <_Min_Heap_Size+0x108ab0>
    4eac:	28000006 	stmdacs	r0, {r1, r2}
    4eb0:	00153101 	andseq	r3, r5, r1, lsl #2
    4eb4:	0b700100 	bleq	1c052bc <_Min_Heap_Size+0x1c04abc>
    4eb8:	05450117 	strbeq	r0, [r5, #-279]	; 0xfffffee9
	...
    4ec4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4ec8:	17430100 	strbne	r0, [r3, -r0, lsl #2]
    4ecc:	74160000 	ldrvc	r0, [r6], #-0
    4ed0:	01000017 	tsteq	r0, r7, lsl r0
    4ed4:	de430b70 	vmovle.8	d3[3], r0
    4ed8:	45000016 	strmi	r0, [r0, #-22]	; 0xffffffea
    4edc:	4100001d 	tstmi	r0, sp, lsl r0
    4ee0:	1700001d 	smladne	r0, sp, r0, r0
    4ee4:	000017b2 			; <UNDEFINED> instruction: 0x000017b2
    4ee8:	0c0b7201 	sfmeq	f7, 4, [fp], {1}
    4eec:	000000c6 	andeq	r0, r0, r6, asr #1
    4ef0:	00001d6a 	andeq	r1, r0, sl, ror #26
    4ef4:	00001d66 	andeq	r1, r0, r6, ror #26
    4ef8:	0017b817 	andseq	fp, r7, r7, lsl r8
    4efc:	0b720100 	bleq	1c85304 <_Min_Heap_Size+0x1c84b04>
    4f00:	0000c61b 	andeq	ip, r0, fp, lsl r6
    4f04:	001d8d00 	andseq	r8, sp, r0, lsl #26
    4f08:	001d8900 	andseq	r8, sp, r0, lsl #18
    4f0c:	01280000 			; <UNDEFINED> instruction: 0x01280000
    4f10:	0000178f 	andeq	r1, r0, pc, lsl #15
    4f14:	130b3701 	movwne	r3, #46849	; 0xb701
    4f18:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4f24:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4f28:	00178d01 	andseq	r8, r7, r1, lsl #26
    4f2c:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    4f30:	37010000 	strcc	r0, [r1, -r0]
    4f34:	0796450b 	ldreq	r4, [r6, fp, lsl #10]
    4f38:	1db40000 	ldcne	0, cr0, [r4]
    4f3c:	1dac0000 	stcne	0, cr0, [ip]
    4f40:	7d170000 	ldcvc	0, cr0, [r7, #-0]
    4f44:	01000005 	tsteq	r0, r5
    4f48:	c60c0b39 			; <UNDEFINED> instruction: 0xc60c0b39
    4f4c:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    4f50:	ee00001d 	mcr	0, 0, r0, cr0, cr13, {0}
    4f54:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f58:	135a0128 	cmpne	sl, #40, 2
    4f5c:	14010000 	strne	r0, [r1], #-0
    4f60:	3a01130b 	bcc	49b94 <_Min_Heap_Size+0x49394>
    4f64:	00000002 	andeq	r0, r0, r2
    4f68:	00000000 	andeq	r0, r0, r0
    4f6c:	02000000 	andeq	r0, r0, #0
    4f70:	d701007d 	smlsdxle	r1, sp, r0, r0
    4f74:	16000017 			; <UNDEFINED> instruction: 0x16000017
    4f78:	00001774 	andeq	r1, r0, r4, ror r7
    4f7c:	480b1401 	stmdami	fp, {r0, sl, ip}
    4f80:	00000796 	muleq	r0, r6, r7
    4f84:	00001e35 	andeq	r1, r0, r5, lsr lr
    4f88:	00001e2d 	andeq	r1, r0, sp, lsr #28
    4f8c:	00057d17 	andeq	r7, r5, r7, lsl sp
    4f90:	0b160100 	bleq	585398 <_Min_Heap_Size+0x584b98>
    4f94:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4f98:	001e7700 	andseq	r7, lr, r0, lsl #14
    4f9c:	001e6f00 	andseq	r6, lr, r0, lsl #30
    4fa0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    4fa4:	00001754 	andeq	r1, r0, r4, asr r7
    4fa8:	130af801 	movwne	pc, #43009	; 0xa801	; <UNPREDICTABLE>
    4fac:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4fb8:	001eae00 	andseq	sl, lr, r0, lsl #28
    4fbc:	18bf0100 	ldmne	pc!, {r8}	; <UNPREDICTABLE>
    4fc0:	74160000 	ldrvc	r0, [r6], #-0
    4fc4:	01000017 	tsteq	r0, r7, lsl r0
    4fc8:	96470af8 			; <UNDEFINED> instruction: 0x96470af8
    4fcc:	d2000007 	andle	r0, r0, #7
    4fd0:	ce00001e 	mcrgt	0, 0, r0, cr0, cr14, {0}
    4fd4:	1c00001e 	stcne	0, cr0, [r0], {30}
	...
    4fe0:	000018a4 	andeq	r1, r0, r4, lsr #17
    4fe4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4fe8:	0b030100 	bleq	c53f0 <_Min_Heap_Size+0xc4bf0>
    4fec:	0000c603 	andeq	ip, r0, r3, lsl #12
    4ff0:	001ef200 	andseq	pc, lr, r0, lsl #4
    4ff4:	001ef000 	andseq	pc, lr, r0
    4ff8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    500c:	030b0301 	movweq	r0, #45825	; 0xb301
    5010:	00001864 	andeq	r1, r0, r4, ror #16
    5014:	0045901f 	subeq	r9, r5, pc, lsl r0
    5018:	001f0b00 	andseq	r0, pc, r0, lsl #22
    501c:	001f0500 	andseq	r0, pc, r0, lsl #10
    5020:	459d2000 	ldrmi	r2, [sp]
    5024:	1f3a0000 	svcne	0x003a0000
    5028:	1f380000 	svcne	0x00380000
    502c:	21000000 	mrscs	r0, (UNDEF: 0)
    5030:	0000453c 	andeq	r4, r0, ip, lsr r5
    5034:	00000000 	andeq	r0, r0, r0
    5038:	00000001 	andeq	r0, r0, r1
    503c:	00000000 	andeq	r0, r0, r0
    5040:	03010000 	movweq	r0, #4096	; 0x1000
    5044:	5c1f030b 	ldcpl	3, cr0, [pc], {11}
    5048:	51000045 	tstpl	r0, r5, asr #32
    504c:	4d00001f 	stcmi	0, cr0, [r0, #-124]	; 0xffffff84
    5050:	1f00001f 	svcne	0x0000001f
    5054:	0000454f 	andeq	r4, r0, pc, asr #10
    5058:	00001f73 	andeq	r1, r0, r3, ror pc
    505c:	00001f71 	andeq	r1, r0, r1, ror pc
    5060:	00456920 	subeq	r6, r5, r0, lsr #18
    5064:	001f8800 	andseq	r8, pc, r0, lsl #16
    5068:	001f8600 	andseq	r8, pc, r0, lsl #12
    506c:	23000000 	movwcs	r0, #0
    5070:	00000000 	andeq	r0, r0, r0
    5074:	000045ab 	andeq	r4, r0, fp, lsr #11
    5078:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    507c:	002ca003 	eoreq	sl, ip, r3
    5080:	51011908 	tstpl	r1, r8, lsl #18
    5084:	0afb0a03 	beq	ffec7898 <_estack+0xdfec6660>
    5088:	01270000 			; <UNDEFINED> instruction: 0x01270000
    508c:	0000191a 	andeq	r1, r0, sl, lsl r9
    5090:	130adc01 	movwne	sp, #44033	; 0xac01
    5094:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    50a0:	001f9b00 	andseq	r9, pc, r0, lsl #22
    50a4:	19a70100 	stmibne	r7!, {r8}
    50a8:	74160000 	ldrvc	r0, [r6], #-0
    50ac:	01000017 	tsteq	r0, r7, lsl r0
    50b0:	96480adc 			; <UNDEFINED> instruction: 0x96480adc
    50b4:	bf000007 	svclt	0x00000007
    50b8:	bb00001f 	bllt	513c <_Min_Heap_Size+0x493c>
    50bc:	1c00001f 	stcne	0, cr0, [r0], {31}
	...
    50c8:	0000198c 	andeq	r1, r0, ip, lsl #19
    50cc:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    50d0:	0ae70100 	beq	ff9c54d8 <_estack+0xdf9c42a0>
    50d4:	0000c603 	andeq	ip, r0, r3, lsl #12
    50d8:	001fdf00 	andseq	sp, pc, r0, lsl #30
    50dc:	001fdd00 	andseq	sp, pc, r0, lsl #26
    50e0:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    50f4:	030ae701 	movweq	lr, #42753	; 0xa701
    50f8:	0000194c 	andeq	r1, r0, ip, asr #18
    50fc:	0045901f 	subeq	r9, r5, pc, lsl r0
    5100:	001ff800 	andseq	pc, pc, r0, lsl #16
    5104:	001ff200 	andseq	pc, pc, r0, lsl #4
    5108:	459d2000 	ldrmi	r2, [sp]
    510c:	20270000 	eorcs	r0, r7, r0
    5110:	20250000 	eorcs	r0, r5, r0
    5114:	21000000 	mrscs	r0, (UNDEF: 0)
    5118:	0000453c 	andeq	r4, r0, ip, lsr r5
    511c:	00000000 	andeq	r0, r0, r0
    5120:	00000001 	andeq	r0, r0, r1
    5124:	00000000 	andeq	r0, r0, r0
    5128:	e7010000 	str	r0, [r1, -r0]
    512c:	5c1f030a 	ldcpl	3, cr0, [pc], {10}
    5130:	3e000045 	cdpcc	0, 0, cr0, cr0, cr5, {2}
    5134:	3a000020 	bcc	51bc <_Min_Heap_Size+0x49bc>
    5138:	1f000020 	svcne	0x00000020
    513c:	0000454f 	andeq	r4, r0, pc, asr #10
    5140:	00002060 	andeq	r2, r0, r0, rrx
    5144:	0000205e 	andeq	r2, r0, lr, asr r0
    5148:	00456920 	subeq	r6, r5, r0, lsr #18
    514c:	00207500 	eoreq	r7, r0, r0, lsl #10
    5150:	00207300 	eoreq	r7, r0, r0, lsl #6
    5154:	23000000 	movwcs	r0, #0
    5158:	00000000 	andeq	r0, r0, r0
    515c:	000045ab 	andeq	r4, r0, fp, lsr #11
    5160:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    5164:	002ca003 	eoreq	sl, ip, r3
    5168:	51011908 	tstpl	r1, r8, lsl #18
    516c:	0adf0a03 	beq	ff7c7980 <_estack+0xdf7c6748>
    5170:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5174:	0000132c 	andeq	r1, r0, ip, lsr #6
    5178:	130ac101 	movwne	ip, #41217	; 0xa101
    517c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    5188:	00208800 	eoreq	r8, r0, r0, lsl #16
    518c:	1a8f0100 	bne	fe3c5594 <_estack+0xde3c435c>
    5190:	74160000 	ldrvc	r0, [r6], #-0
    5194:	01000017 	tsteq	r0, r7, lsl r0
    5198:	96390ac1 	ldrtls	r0, [r9], -r1, asr #21
    519c:	ac000007 	stcge	0, cr0, [r0], {7}
    51a0:	a8000020 	stmdage	r0, {r5}
    51a4:	1c000020 	stcne	0, cr0, [r0], {32}
	...
    51b0:	00001a74 	andeq	r1, r0, r4, ror sl
    51b4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    51b8:	0acc0100 	beq	ff3055c0 <_estack+0xdf304388>
    51bc:	0000c603 	andeq	ip, r0, r3, lsl #12
    51c0:	0020cc00 	eoreq	ip, r0, r0, lsl #24
    51c4:	0020ca00 	eoreq	ip, r0, r0, lsl #20
    51c8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    51dc:	030acc01 	movweq	ip, #44033	; 0xac01
    51e0:	00001a34 	andeq	r1, r0, r4, lsr sl
    51e4:	0045901f 	subeq	r9, r5, pc, lsl r0
    51e8:	0020e500 	eoreq	lr, r0, r0, lsl #10
    51ec:	0020df00 	eoreq	sp, r0, r0, lsl #30
    51f0:	459d2000 	ldrmi	r2, [sp]
    51f4:	21140000 	tstcs	r4, r0
    51f8:	21120000 	tstcs	r2, r0
    51fc:	21000000 	mrscs	r0, (UNDEF: 0)
    5200:	0000453c 	andeq	r4, r0, ip, lsr r5
    5204:	00000000 	andeq	r0, r0, r0
    5208:	00000001 	andeq	r0, r0, r1
    520c:	00000000 	andeq	r0, r0, r0
    5210:	cc010000 	stcgt	0, cr0, [r1], {-0}
    5214:	5c1f030a 	ldcpl	3, cr0, [pc], {10}
    5218:	2b000045 	blcs	5334 <_Min_Heap_Size+0x4b34>
    521c:	27000021 	strcs	r0, [r0, -r1, lsr #32]
    5220:	1f000021 	svcne	0x00000021
    5224:	0000454f 	andeq	r4, r0, pc, asr #10
    5228:	0000214d 	andeq	r2, r0, sp, asr #2
    522c:	0000214b 	andeq	r2, r0, fp, asr #2
    5230:	00456920 	subeq	r6, r5, r0, lsr #18
    5234:	00216200 	eoreq	r6, r1, r0, lsl #4
    5238:	00216000 	eoreq	r6, r1, r0
    523c:	23000000 	movwcs	r0, #0
    5240:	00000000 	andeq	r0, r0, r0
    5244:	000045ab 	andeq	r4, r0, fp, lsr #11
    5248:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    524c:	002ca003 	eoreq	sl, ip, r3
    5250:	51011908 	tstpl	r1, r8, lsl #18
    5254:	0ac40a03 	beq	ff107a68 <_estack+0xdf106830>
    5258:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    525c:	00001382 	andeq	r1, r0, r2, lsl #7
    5260:	0d0a9901 	vstreq.16	s18, [sl, #-2]	; <UNPREDICTABLE>
    5264:	000e4001 	andeq	r4, lr, r1
    5268:	000e4208 	andeq	r4, lr, r8, lsl #4
    526c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    5270:	001ac901 	andseq	ip, sl, r1, lsl #18
    5274:	17742900 	ldrbne	r2, [r4, -r0, lsl #18]!
    5278:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    527c:	07963c0a 	ldreq	r3, [r6, sl, lsl #24]
    5280:	50010000 	andpl	r0, r1, r0
    5284:	0000d929 	andeq	sp, r0, r9, lsr #18
    5288:	0a990100 	beq	fe645690 <_estack+0xde644458>
    528c:	0000b04c 	andeq	fp, r0, ip, asr #32
    5290:	00510100 	subseq	r0, r1, r0, lsl #2
    5294:	1434012a 	ldrtne	r0, [r4], #-298	; 0xfffffed6
    5298:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    529c:	00010d0a 	andeq	r0, r1, sl, lsl #26
    52a0:	00000000 	andeq	r0, r0, r0
    52a4:	02000000 	andeq	r0, r0, #0
    52a8:	f401007d 	vst4.16	{d0-d3}, [r1 :256]!
    52ac:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    52b0:	00001774 	andeq	r1, r0, r4, ror r7
    52b4:	430a8801 	movwmi	r8, #43009	; 0xa801
    52b8:	00000796 	muleq	r0, r6, r7
    52bc:	2a005001 	bcs	192c8 <_Min_Heap_Size+0x18ac8>
    52c0:	0016b101 	andseq	fp, r6, r1, lsl #2
    52c4:	0a790100 	beq	1e456cc <_Min_Heap_Size+0x1e44ecc>
    52c8:	0000010d 	andeq	r0, r0, sp, lsl #2
    52cc:	00000000 	andeq	r0, r0, r0
    52d0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    52d4:	1b1f0100 	blne	7c56dc <_Min_Heap_Size+0x7c4edc>
    52d8:	74290000 	strtvc	r0, [r9], #-0
    52dc:	01000017 	tsteq	r0, r7, lsl r0
    52e0:	96440a79 			; <UNDEFINED> instruction: 0x96440a79
    52e4:	01000007 	tsteq	r0, r7
    52e8:	012a0050 	qsubeq	r0, r0, sl
    52ec:	000017f5 	strdeq	r1, [r0], -r5
    52f0:	0d0a6a01 	vstreq	s12, [sl, #-4]
    52f4:	00000001 	andeq	r0, r0, r1
    52f8:	00000000 	andeq	r0, r0, r0
    52fc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    5300:	001b4a01 	andseq	r4, fp, r1, lsl #20
    5304:	17742900 	ldrbne	r2, [r4, -r0, lsl #18]!
    5308:	6a010000 	bvs	45310 <_Min_Heap_Size+0x44b10>
    530c:	07963c0a 	ldreq	r3, [r6, sl, lsl #24]
    5310:	50010000 	andpl	r0, r1, r0
    5314:	c3012a00 	movwgt	r2, #6656	; 0x1a00
    5318:	01000018 	tsteq	r0, r8, lsl r0
    531c:	010d0a5c 	tsteq	sp, ip, asr sl
    5320:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
    5324:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
    5328:	01007d02 	tsteq	r0, r2, lsl #26
    532c:	00001b75 	andeq	r1, r0, r5, ror fp
    5330:	00177429 	andseq	r7, r7, r9, lsr #8
    5334:	0a5c0100 	beq	170573c <_Min_Heap_Size+0x1704f3c>
    5338:	00079638 	andeq	r9, r7, r8, lsr r6
    533c:	00500100 	subseq	r0, r0, r0, lsl #2
    5340:	1467012a 	strbtne	r0, [r7], #-298	; 0xfffffed6
    5344:	4d010000 	stcmi	0, cr0, [r1, #-0]
    5348:	00010d0a 	andeq	r0, r1, sl, lsl #26
    534c:	00000000 	andeq	r0, r0, r0
    5350:	02000000 	andeq	r0, r0, #0
    5354:	a001007d 	andge	r0, r1, sp, ror r0
    5358:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    535c:	00001774 	andeq	r1, r0, r4, ror r7
    5360:	3d0a4d01 	stccc	13, cr4, [sl, #-4]
    5364:	00000796 	muleq	r0, r6, r7
    5368:	2a005001 	bcs	19374 <_Min_Heap_Size+0x18b74>
    536c:	0017c801 	andseq	ip, r7, r1, lsl #16
    5370:	0a3e0100 	beq	f85778 <_Min_Heap_Size+0xf84f78>
    5374:	0e2c010d 	sufeqe	f0, f4, #5.0
    5378:	0e2e0800 	cdpeq	8, 2, cr0, cr14, cr0, {0}
    537c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    5380:	1bcb0100 	blne	ff2c5788 <_estack+0xdf2c4550>
    5384:	74290000 	strtvc	r0, [r9], #-0
    5388:	01000017 	tsteq	r0, r7, lsl r0
    538c:	96390a3e 			; <UNDEFINED> instruction: 0x96390a3e
    5390:	01000007 	tsteq	r0, r7
    5394:	012a0050 	qsubeq	r0, r0, sl
    5398:	000018a7 	andeq	r1, r0, r7, lsr #17
    539c:	0d0a2f01 	stceq	15, cr2, [sl, #-4]
    53a0:	00000001 	andeq	r0, r0, r1
    53a4:	00000000 	andeq	r0, r0, r0
    53a8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    53ac:	001bf601 	andseq	pc, fp, r1, lsl #12
    53b0:	17742900 	ldrbne	r2, [r4, -r0, lsl #18]!
    53b4:	2f010000 	svccs	0x00010000
    53b8:	07963d0a 	ldreq	r3, [r6, sl, lsl #26]
    53bc:	50010000 	andpl	r0, r1, r0
    53c0:	cc012a00 			; <UNDEFINED> instruction: 0xcc012a00
    53c4:	01000015 	tsteq	r0, r5, lsl r0
    53c8:	010d0a20 	tsteq	sp, r0, lsr #20
    53cc:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
    53d0:	08000e12 	stmdaeq	r0, {r1, r4, r9, sl, fp}
    53d4:	01007d02 	tsteq	r0, r2, lsl #26
    53d8:	00001c21 	andeq	r1, r0, r1, lsr #24
    53dc:	00177429 	andseq	r7, r7, r9, lsr #8
    53e0:	0a200100 	beq	8057e8 <_Min_Heap_Size+0x804fe8>
    53e4:	00079639 	andeq	r9, r7, r9, lsr r6
    53e8:	00500100 	subseq	r0, r0, r0, lsl #2
    53ec:	11ed012b 	mvnne	r0, fp, lsr #2
    53f0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    53f4:	28010609 	stmdacs	r1, {r0, r3, r9, sl}
    53f8:	b008000f 	andlt	r0, r8, pc
    53fc:	75080011 	strvc	r0, [r8, #-17]	; 0xffffffef
    5400:	01000021 	tsteq	r0, r1, lsr #32
    5404:	000022ae 	andeq	r2, r0, lr, lsr #5
    5408:	00177416 	andseq	r7, r7, r6, lsl r4
    540c:	092e0100 	stmdbeq	lr!, {r8}
    5410:	0007962e 	andeq	r9, r7, lr, lsr #12
    5414:	0021bd00 	eoreq	fp, r1, r0, lsl #26
    5418:	0021b900 	eoreq	fp, r1, r0, lsl #18
    541c:	16011700 	strne	r1, [r1], -r0, lsl #14
    5420:	30010000 	andcc	r0, r1, r0
    5424:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    5428:	21e90000 	mvncs	r0, r0
    542c:	21db0000 	bicscs	r0, fp, r0
    5430:	57170000 	ldrpl	r0, [r7, -r0]
    5434:	01000019 	tsteq	r0, r9, lsl r0
    5438:	c60c0931 			; <UNDEFINED> instruction: 0xc60c0931
    543c:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    5440:	3e000022 	cdpcc	0, 0, cr0, cr0, cr2, {1}
    5444:	17000022 	strne	r0, [r0, -r2, lsr #32]
    5448:	0000137b 	andeq	r1, r0, fp, ror r3
    544c:	0c093201 	sfmeq	f3, 4, [r9], {1}
    5450:	000000c6 	andeq	r0, r0, r6, asr #1
    5454:	000022b2 			; <UNDEFINED> instruction: 0x000022b2
    5458:	000022ae 	andeq	r2, r0, lr, lsr #5
    545c:	00156817 	andseq	r6, r5, r7, lsl r8
    5460:	09330100 	ldmdbeq	r3!, {r8}
    5464:	0000c60c 	andeq	ip, r0, ip, lsl #12
    5468:	0022d600 	eoreq	sp, r2, r0, lsl #12
    546c:	0022d000 	eoreq	sp, r2, r0
    5470:	18101700 	ldmdane	r0, {r8, r9, sl, ip}
    5474:	34010000 	strcc	r0, [r1], #-0
    5478:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    547c:	23100000 	tstcs	r0, #0
    5480:	23040000 	movwcs	r0, #16384	; 0x4000
    5484:	021c0000 	andseq	r0, ip, #0
    5488:	1a080010 	bne	2054d0 <_Min_Heap_Size+0x204cd0>
    548c:	53080010 	movwpl	r0, #32784	; 0x8010
    5490:	1d00001d 	stcne	0, cr0, [r0, #-116]	; 0xffffff8c
    5494:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5498:	0b097501 	bleq	2628a4 <_Min_Heap_Size+0x2620a4>
    549c:	000000c6 	andeq	r0, r0, r6, asr #1
    54a0:	0000236e 	andeq	r2, r0, lr, ror #6
    54a4:	0000236c 	andeq	r2, r0, ip, ror #6
    54a8:	00457d1e 	subeq	r7, r5, lr, lsl sp
    54ac:	00100400 	andseq	r0, r0, r0, lsl #8
    54b0:	04000008 	streq	r0, [r0], #-8
    54b4:	0c080010 	stceq	0, cr0, [r8], {16}
    54b8:	01080010 	tsteq	r8, r0, lsl r0
    54bc:	130b0975 	movwne	r0, #47477	; 0xb975
    54c0:	1f00001d 	svcne	0x0000001d
    54c4:	00004590 	muleq	r0, r0, r5
    54c8:	00002387 	andeq	r2, r0, r7, lsl #7
    54cc:	00002381 	andeq	r2, r0, r1, lsl #7
    54d0:	00459d20 	subeq	r9, r5, r0, lsr #26
    54d4:	0023b600 	eoreq	fp, r3, r0, lsl #12
    54d8:	0023b400 	eoreq	fp, r3, r0, lsl #8
    54dc:	3c210000 	stccc	0, cr0, [r1], #-0
    54e0:	10000045 	andne	r0, r0, r5, asr #32
    54e4:	01080010 	tsteq	r8, r0, lsl r0
    54e8:	00101000 	andseq	r1, r0, r0
    54ec:	00101608 	andseq	r1, r0, r8, lsl #12
    54f0:	09750108 	ldmdbeq	r5!, {r3, r8}^
    54f4:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    54f8:	23cd0000 	biccs	r0, sp, #0
    54fc:	23c90000 	biccs	r0, r9, #0
    5500:	4f1f0000 	svcmi	0x001f0000
    5504:	ef000045 	svc	0x00000045
    5508:	ed000023 	stc	0, cr0, [r0, #-140]	; 0xffffff74
    550c:	20000023 	andcs	r0, r0, r3, lsr #32
    5510:	00004569 	andeq	r4, r0, r9, ror #10
    5514:	00002404 	andeq	r2, r0, r4, lsl #8
    5518:	00002402 	andeq	r2, r0, r2, lsl #8
    551c:	681c0000 	ldmdavs	ip, {}	; <UNPREDICTABLE>
    5520:	76080010 			; <UNDEFINED> instruction: 0x76080010
    5524:	71080010 	tstvc	r8, r0, lsl r0
    5528:	2200001d 	andcs	r0, r0, #29
    552c:	0000057d 	andeq	r0, r0, sp, ror r5
    5530:	0509b301 	streq	fp, [r9, #-769]	; 0xfffffcff
    5534:	000000d2 	ldrdeq	r0, [r0], -r2
    5538:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    553c:	00107e1c 	andseq	r7, r0, ip, lsl lr
    5540:	00112408 	andseq	r2, r1, r8, lsl #8
    5544:	00200d08 	eoreq	r0, r0, r8, lsl #26
    5548:	17e01700 	strbne	r1, [r0, r0, lsl #14]!
    554c:	bc010000 	stclt	0, cr0, [r1], {-0}
    5550:	00b01009 	adcseq	r1, r0, r9
    5554:	241b0000 	ldrcs	r0, [fp], #-0
    5558:	24170000 	ldrcs	r0, [r7], #-0
    555c:	9e1c0000 	cdpls	0, 1, cr0, cr12, cr0, {0}
    5560:	b6080010 			; <UNDEFINED> instruction: 0xb6080010
    5564:	2b080010 	blcs	2055ac <_Min_Heap_Size+0x204dac>
    5568:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    556c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5570:	0b09c701 	bleq	27717c <_Min_Heap_Size+0x27697c>
    5574:	000000c6 	andeq	r0, r0, r6, asr #1
    5578:	0000243c 	andeq	r2, r0, ip, lsr r4
    557c:	0000243a 	andeq	r2, r0, sl, lsr r4
    5580:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5584:	0010a000 	andseq	sl, r0, r0
    5588:	a0000008 	andge	r0, r0, r8
    558c:	a8080010 	stmdage	r8, {r4}
    5590:	01080010 	tsteq	r8, r0, lsl r0
    5594:	eb0b09c7 	bl	2c7cb8 <_Min_Heap_Size+0x2c74b8>
    5598:	1f00001d 	svcne	0x0000001d
    559c:	00004590 	muleq	r0, r0, r5
    55a0:	00002455 	andeq	r2, r0, r5, asr r4
    55a4:	0000244f 	andeq	r2, r0, pc, asr #8
    55a8:	00459d20 	subeq	r9, r5, r0, lsr #26
    55ac:	00248400 	eoreq	r8, r4, r0, lsl #8
    55b0:	00248200 	eoreq	r8, r4, r0, lsl #4
    55b4:	3c210000 	stccc	0, cr0, [r1], #-0
    55b8:	ac000045 	stcge	0, cr0, [r0], {69}	; 0x45
    55bc:	01080010 	tsteq	r8, r0, lsl r0
    55c0:	0010ac00 	andseq	sl, r0, r0, lsl #24
    55c4:	0010b208 	andseq	fp, r0, r8, lsl #4
    55c8:	09c70108 	stmibeq	r7, {r3, r8}^
    55cc:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    55d0:	249b0000 	ldrcs	r0, [fp], #0
    55d4:	24970000 	ldrcs	r0, [r7], #0
    55d8:	4f1f0000 	svcmi	0x001f0000
    55dc:	bd000045 	stclt	0, cr0, [r0, #-276]	; 0xfffffeec
    55e0:	bb000024 	bllt	5678 <_Min_Heap_Size+0x4e78>
    55e4:	20000024 	andcs	r0, r0, r4, lsr #32
    55e8:	00004569 	andeq	r4, r0, r9, ror #10
    55ec:	000024d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    55f0:	000024d0 	ldrdeq	r2, [r0], -r0
    55f4:	b61c0000 	ldrlt	r0, [ip], -r0
    55f8:	ce080010 	mcrgt	0, 0, r0, cr8, cr0, {0}
    55fc:	c3080010 	movwgt	r0, #32784	; 0x8010
    5600:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    5604:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5608:	0b09c801 	bleq	277614 <_Min_Heap_Size+0x276e14>
    560c:	000000c6 	andeq	r0, r0, r6, asr #1
    5610:	000024e7 	andeq	r2, r0, r7, ror #9
    5614:	000024e5 	andeq	r2, r0, r5, ror #9
    5618:	00457d1e 	subeq	r7, r5, lr, lsl sp
    561c:	0010b800 	andseq	fp, r0, r0, lsl #16
    5620:	b8000008 	stmdalt	r0, {r3}
    5624:	c0080010 	andgt	r0, r8, r0, lsl r0
    5628:	01080010 	tsteq	r8, r0, lsl r0
    562c:	830b09c8 	movwhi	r0, #47560	; 0xb9c8
    5630:	1f00001e 	svcne	0x0000001e
    5634:	00004590 	muleq	r0, r0, r5
    5638:	00002500 	andeq	r2, r0, r0, lsl #10
    563c:	000024fa 	strdeq	r2, [r0], -sl
    5640:	00459d20 	subeq	r9, r5, r0, lsr #26
    5644:	00252f00 	eoreq	r2, r5, r0, lsl #30
    5648:	00252d00 	eoreq	r2, r5, r0, lsl #26
    564c:	3c210000 	stccc	0, cr0, [r1], #-0
    5650:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    5654:	01080010 	tsteq	r8, r0, lsl r0
    5658:	0010c400 	andseq	ip, r0, r0, lsl #8
    565c:	0010ca08 	andseq	ip, r0, r8, lsl #20
    5660:	09c80108 	stmibeq	r8, {r3, r8}^
    5664:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    5668:	25460000 	strbcs	r0, [r6, #-0]
    566c:	25420000 	strbcs	r0, [r2, #-0]
    5670:	4f1f0000 	svcmi	0x001f0000
    5674:	68000045 	stmdavs	r0, {r0, r2, r6}
    5678:	66000025 	strvs	r0, [r0], -r5, lsr #32
    567c:	20000025 	andcs	r0, r0, r5, lsr #32
    5680:	00004569 	andeq	r4, r0, r9, ror #10
    5684:	0000257d 	andeq	r2, r0, sp, ror r5
    5688:	0000257b 	andeq	r2, r0, fp, ror r5
    568c:	ce1c0000 	cdpgt	0, 1, cr0, cr12, cr0, {0}
    5690:	e6080010 			; <UNDEFINED> instruction: 0xe6080010
    5694:	5b080010 	blpl	2056dc <_Min_Heap_Size+0x204edc>
    5698:	1d00001f 	stcne	0, cr0, [r0, #-124]	; 0xffffff84
    569c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    56a0:	0b09cc01 	bleq	2786ac <_Min_Heap_Size+0x277eac>
    56a4:	000000c6 	andeq	r0, r0, r6, asr #1
    56a8:	00002592 	muleq	r0, r2, r5
    56ac:	00002590 	muleq	r0, r0, r5
    56b0:	00457d1e 	subeq	r7, r5, lr, lsl sp
    56b4:	0010d000 	andseq	sp, r0, r0
    56b8:	d0000008 	andle	r0, r0, r8
    56bc:	d8080010 	stmdale	r8, {r4}
    56c0:	01080010 	tsteq	r8, r0, lsl r0
    56c4:	1b0b09cc 	blne	2c7dfc <_Min_Heap_Size+0x2c75fc>
    56c8:	1f00001f 	svcne	0x0000001f
    56cc:	00004590 	muleq	r0, r0, r5
    56d0:	000025ab 	andeq	r2, r0, fp, lsr #11
    56d4:	000025a5 	andeq	r2, r0, r5, lsr #11
    56d8:	00459d20 	subeq	r9, r5, r0, lsr #26
    56dc:	0025da00 	eoreq	sp, r5, r0, lsl #20
    56e0:	0025d800 	eoreq	sp, r5, r0, lsl #16
    56e4:	3c210000 	stccc	0, cr0, [r1], #-0
    56e8:	dc000045 	stcle	0, cr0, [r0], {69}	; 0x45
    56ec:	01080010 	tsteq	r8, r0, lsl r0
    56f0:	0010dc00 	andseq	sp, r0, r0, lsl #24
    56f4:	0010e208 	andseq	lr, r0, r8, lsl #4
    56f8:	09cc0108 	stmibeq	ip, {r3, r8}^
    56fc:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    5700:	25f10000 	ldrbcs	r0, [r1, #0]!
    5704:	25ed0000 	strbcs	r0, [sp, #0]!
    5708:	4f1f0000 	svcmi	0x001f0000
    570c:	13000045 	movwne	r0, #69	; 0x45
    5710:	11000026 	tstne	r0, r6, lsr #32
    5714:	20000026 	andcs	r0, r0, r6, lsr #32
    5718:	00004569 	andeq	r4, r0, r9, ror #10
    571c:	00002628 	andeq	r2, r0, r8, lsr #12
    5720:	00002626 	andeq	r2, r0, r6, lsr #12
    5724:	f01c0000 			; <UNDEFINED> instruction: 0xf01c0000
    5728:	08080010 	stmdaeq	r8, {r4}
    572c:	f3080011 	vqadd.u8	d0, d8, d1
    5730:	1d00001f 	stcne	0, cr0, [r0, #-124]	; 0xffffff84
    5734:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5738:	0b09d201 	bleq	279f44 <_Min_Heap_Size+0x279744>
    573c:	000000c6 	andeq	r0, r0, r6, asr #1
    5740:	0000263d 	andeq	r2, r0, sp, lsr r6
    5744:	0000263b 	andeq	r2, r0, fp, lsr r6
    5748:	00457d1e 	subeq	r7, r5, lr, lsl sp
    574c:	0010f200 	andseq	pc, r0, r0, lsl #4
    5750:	f2000008 	vhadd.s8	d0, d0, d8
    5754:	fa080010 	blx	20579c <_Min_Heap_Size+0x204f9c>
    5758:	01080010 	tsteq	r8, r0, lsl r0
    575c:	b30b09d2 	movwlt	r0, #47570	; 0xb9d2
    5760:	1f00001f 	svcne	0x0000001f
    5764:	00004590 	muleq	r0, r0, r5
    5768:	00002656 	andeq	r2, r0, r6, asr r6
    576c:	00002650 	andeq	r2, r0, r0, asr r6
    5770:	00459d20 	subeq	r9, r5, r0, lsr #26
    5774:	00268500 	eoreq	r8, r6, r0, lsl #10
    5778:	00268300 	eoreq	r8, r6, r0, lsl #6
    577c:	3c210000 	stccc	0, cr0, [r1], #-0
    5780:	fe000045 	cdp2	0, 0, cr0, cr0, cr5, {2}
    5784:	01080010 	tsteq	r8, r0, lsl r0
    5788:	0010fe00 	andseq	pc, r0, r0, lsl #28
    578c:	00110408 	andseq	r0, r1, r8, lsl #8
    5790:	09d20108 	ldmibeq	r2, {r3, r8}^
    5794:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    5798:	269c0000 	ldrcs	r0, [ip], r0
    579c:	26980000 	ldrcs	r0, [r8], r0
    57a0:	4f1f0000 	svcmi	0x001f0000
    57a4:	be000045 	cdplt	0, 0, cr0, cr0, cr5, {2}
    57a8:	bc000026 	stclt	0, cr0, [r0], {38}	; 0x26
    57ac:	20000026 	andcs	r0, r0, r6, lsr #32
    57b0:	00004569 	andeq	r4, r0, r9, ror #10
    57b4:	000026d3 	ldrdeq	r2, [r0], -r3
    57b8:	000026d1 	ldrdeq	r2, [r0], -r1
    57bc:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
    57c0:	00080011 	andeq	r0, r8, r1, lsl r0
    57c4:	23000046 	movwcs	r0, #70	; 0x46
    57c8:	08001122 	stmdaeq	r0, {r1, r5, r8, ip}
    57cc:	00001a8f 	andeq	r1, r0, pc, lsl #21
    57d0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    57d4:	00000074 	andeq	r0, r0, r4, ror r0
    57d8:	0011241c 	andseq	r2, r1, ip, lsl r4
    57dc:	00119c08 	andseq	r9, r1, r8, lsl #24
    57e0:	00220808 	eoreq	r0, r2, r8, lsl #16
    57e4:	18561700 	ldmdane	r6, {r8, r9, sl, ip}^
    57e8:	eb010000 	bl	457f0 <_Min_Heap_Size+0x44ff0>
    57ec:	00b01009 	adcseq	r1, r0, r9
    57f0:	26e80000 	strbtcs	r0, [r8], r0
    57f4:	26e60000 	strbtcs	r0, [r6], r0
    57f8:	3e1c0000 	cdpcc	0, 1, cr0, cr12, cr0, {0}
    57fc:	56080011 			; <UNDEFINED> instruction: 0x56080011
    5800:	c7080011 	smladgt	r8, r1, r0, r0
    5804:	1d000020 	stcne	0, cr0, [r0, #-128]	; 0xffffff80
    5808:	006c6176 	rsbeq	r6, ip, r6, ror r1
    580c:	0909f001 	stmdbeq	r9, {r0, ip, sp, lr, pc}
    5810:	000000c6 	andeq	r0, r0, r6, asr #1
    5814:	000026fd 	strdeq	r2, [r0], -sp
    5818:	000026fb 	strdeq	r2, [r0], -fp
    581c:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5820:	00114000 	andseq	r4, r1, r0
    5824:	40000008 	andmi	r0, r0, r8
    5828:	48080011 	stmdami	r8, {r0, r4}
    582c:	01080011 	tsteq	r8, r1, lsl r0
    5830:	870909f0 			; <UNDEFINED> instruction: 0x870909f0
    5834:	1f000020 	svcne	0x00000020
    5838:	00004590 	muleq	r0, r0, r5
    583c:	00002716 	andeq	r2, r0, r6, lsl r7
    5840:	00002710 	andeq	r2, r0, r0, lsl r7
    5844:	00459d20 	subeq	r9, r5, r0, lsr #26
    5848:	00274500 	eoreq	r4, r7, r0, lsl #10
    584c:	00274300 	eoreq	r4, r7, r0, lsl #6
    5850:	3c210000 	stccc	0, cr0, [r1], #-0
    5854:	4c000045 	stcmi	0, cr0, [r0], {69}	; 0x45
    5858:	01080011 	tsteq	r8, r1, lsl r0
    585c:	00114c00 	andseq	r4, r1, r0, lsl #24
    5860:	00115208 	andseq	r5, r1, r8, lsl #4
    5864:	09f00108 	ldmibeq	r0!, {r3, r8}^
    5868:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    586c:	275c0000 	ldrbcs	r0, [ip, -r0]
    5870:	27580000 	ldrbcs	r0, [r8, -r0]
    5874:	4f1f0000 	svcmi	0x001f0000
    5878:	7e000045 	cdpvc	0, 0, cr0, cr0, cr5, {2}
    587c:	7c000027 	stcvc	0, cr0, [r0], {39}	; 0x27
    5880:	20000027 	andcs	r0, r0, r7, lsr #32
    5884:	00004569 	andeq	r4, r0, r9, ror #10
    5888:	00002793 	muleq	r0, r3, r7
    588c:	00002791 	muleq	r0, r1, r7
    5890:	561c0000 	ldrpl	r0, [ip], -r0
    5894:	6e080011 	mcrvs	0, 0, r0, cr8, cr1, {0}
    5898:	5f080011 	svcpl	0x00080011
    589c:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    58a0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    58a4:	0909f301 	stmdbeq	r9, {r0, r8, r9, ip, sp, lr, pc}
    58a8:	000000c6 	andeq	r0, r0, r6, asr #1
    58ac:	000027a8 	andeq	r2, r0, r8, lsr #15
    58b0:	000027a6 	andeq	r2, r0, r6, lsr #15
    58b4:	00457d1e 	subeq	r7, r5, lr, lsl sp
    58b8:	00115800 	andseq	r5, r1, r0, lsl #16
    58bc:	58000008 	stmdapl	r0, {r3}
    58c0:	60080011 	andvs	r0, r8, r1, lsl r0
    58c4:	01080011 	tsteq	r8, r1, lsl r0
    58c8:	1f0909f3 	svcne	0x000909f3
    58cc:	1f000021 	svcne	0x00000021
    58d0:	00004590 	muleq	r0, r0, r5
    58d4:	000027c1 	andeq	r2, r0, r1, asr #15
    58d8:	000027bb 			; <UNDEFINED> instruction: 0x000027bb
    58dc:	00459d20 	subeq	r9, r5, r0, lsr #26
    58e0:	0027f000 	eoreq	pc, r7, r0
    58e4:	0027ee00 	eoreq	lr, r7, r0, lsl #28
    58e8:	3c210000 	stccc	0, cr0, [r1], #-0
    58ec:	64000045 	strvs	r0, [r0], #-69	; 0xffffffbb
    58f0:	01080011 	tsteq	r8, r1, lsl r0
    58f4:	00116400 	andseq	r6, r1, r0, lsl #8
    58f8:	00116a08 	andseq	r6, r1, r8, lsl #20
    58fc:	09f30108 	ldmibeq	r3!, {r3, r8}^
    5900:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    5904:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    5908:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    590c:	4f1f0000 	svcmi	0x001f0000
    5910:	29000045 	stmdbcs	r0, {r0, r2, r6}
    5914:	27000028 	strcs	r0, [r0, -r8, lsr #32]
    5918:	20000028 	andcs	r0, r0, r8, lsr #32
    591c:	00004569 	andeq	r4, r0, r9, ror #10
    5920:	0000283e 	andeq	r2, r0, lr, lsr r8
    5924:	0000283c 	andeq	r2, r0, ip, lsr r8
    5928:	781c0000 	ldmdavc	ip, {}	; <UNPREDICTABLE>
    592c:	90080011 	andls	r0, r8, r1, lsl r0
    5930:	f7080011 			; <UNDEFINED> instruction: 0xf7080011
    5934:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    5938:	006c6176 	rsbeq	r6, ip, r6, ror r1
    593c:	0909f901 	stmdbeq	r9, {r0, r8, fp, ip, sp, lr, pc}
    5940:	000000c6 	andeq	r0, r0, r6, asr #1
    5944:	00002853 	andeq	r2, r0, r3, asr r8
    5948:	00002851 	andeq	r2, r0, r1, asr r8
    594c:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5950:	00117a00 	andseq	r7, r1, r0, lsl #20
    5954:	7a000008 	bvc	597c <_Min_Heap_Size+0x517c>
    5958:	82080011 	andhi	r0, r8, #17
    595c:	01080011 	tsteq	r8, r1, lsl r0
    5960:	b70909f9 			; <UNDEFINED> instruction: 0xb70909f9
    5964:	1f000021 	svcne	0x00000021
    5968:	00004590 	muleq	r0, r0, r5
    596c:	0000286c 	andeq	r2, r0, ip, ror #16
    5970:	00002866 	andeq	r2, r0, r6, ror #16
    5974:	00459d20 	subeq	r9, r5, r0, lsr #26
    5978:	00289b00 	eoreq	r9, r8, r0, lsl #22
    597c:	00289900 	eoreq	r9, r8, r0, lsl #18
    5980:	3c210000 	stccc	0, cr0, [r1], #-0
    5984:	86000045 	strhi	r0, [r0], -r5, asr #32
    5988:	01080011 	tsteq	r8, r1, lsl r0
    598c:	00118600 	andseq	r8, r1, r0, lsl #12
    5990:	00118c08 	andseq	r8, r1, r8, lsl #24
    5994:	09f90108 	ldmibeq	r9!, {r3, r8}^
    5998:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    599c:	28b20000 	ldmcs	r2!, {}	; <UNPREDICTABLE>
    59a0:	28ae0000 	stmiacs	lr!, {}	; <UNPREDICTABLE>
    59a4:	4f1f0000 	svcmi	0x001f0000
    59a8:	d4000045 	strle	r0, [r0], #-69	; 0xffffffbb
    59ac:	d2000028 	andle	r0, r0, #40	; 0x28
    59b0:	20000028 	andcs	r0, r0, r8, lsr #32
    59b4:	00004569 	andeq	r4, r0, r9, ror #10
    59b8:	000028e9 	andeq	r2, r0, r9, ror #17
    59bc:	000028e7 	andeq	r2, r0, r7, ror #17
    59c0:	9a230000 	bls	8c59c8 <_Min_Heap_Size+0x8c51c8>
    59c4:	8f080011 	svchi	0x00080011
    59c8:	1900001a 	stmdbne	r0, {r1, r3, r4}
    59cc:	74025001 	strvc	r5, [r2], #-1
    59d0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    59d4:	08000f82 	stmdaeq	r0, {r1, r7, r8, r9, sl, fp}
    59d8:	0000079c 	muleq	r0, ip, r7
    59dc:	0000221c 	andeq	r2, r0, ip, lsl r2
    59e0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    59e4:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    59e8:	08000ff8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl, fp}
    59ec:	00000af5 	strdeq	r0, [r0], -r5
    59f0:	00002230 	andeq	r2, r0, r0, lsr r2
    59f4:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    59f8:	1a000074 	bne	5bd0 <_Min_Heap_Size+0x53d0>
    59fc:	08001028 	stmdaeq	r0, {r3, r5, ip}
    5a00:	0000460f 	andeq	r4, r0, pc, lsl #12
    5a04:	00103a18 	andseq	r3, r0, r8, lsl sl
    5a08:	00079c08 	andeq	r9, r7, r8, lsl #24
    5a0c:	00224d00 	eoreq	r4, r2, r0, lsl #26
    5a10:	50011900 	andpl	r1, r1, r0, lsl #18
    5a14:	00007402 	andeq	r7, r0, r2, lsl #8
    5a18:	00104218 	andseq	r4, r0, r8, lsl r2
    5a1c:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5a20:	00226100 	eoreq	r6, r2, r0, lsl #2
    5a24:	50011900 	andpl	r1, r1, r0, lsl #18
    5a28:	00007402 	andeq	r7, r0, r2, lsl #8
    5a2c:	00104a18 	andseq	r4, r0, r8, lsl sl
    5a30:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5a34:	00227500 	eoreq	r7, r2, r0, lsl #10
    5a38:	50011900 	andpl	r1, r1, r0, lsl #18
    5a3c:	00007402 	andeq	r7, r0, r2, lsl #8
    5a40:	00105218 	andseq	r5, r0, r8, lsl r2
    5a44:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5a48:	00228900 	eoreq	r8, r2, r0, lsl #18
    5a4c:	50011900 	andpl	r1, r1, r0, lsl #18
    5a50:	00007402 	andeq	r7, r0, r2, lsl #8
    5a54:	0011a218 	andseq	sl, r1, r8, lsl r2
    5a58:	00091b08 	andeq	r1, r9, r8, lsl #22
    5a5c:	00229d00 	eoreq	r9, r2, r0, lsl #26
    5a60:	50011900 	andpl	r1, r1, r0, lsl #18
    5a64:	00007402 	andeq	r7, r0, r2, lsl #8
    5a68:	0011aa23 	andseq	sl, r1, r3, lsr #20
    5a6c:	0008d508 	andeq	sp, r8, r8, lsl #10
    5a70:	50011900 	andpl	r1, r1, r0, lsl #18
    5a74:	00007402 	andeq	r7, r0, r2, lsl #8
    5a78:	5e012c00 	cdppl	12, 0, cr2, cr1, cr0, {0}
    5a7c:	01000016 	tsteq	r0, r6, lsl r0
    5a80:	011308e0 	tsteq	r3, r0, ror #17
    5a84:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    5a90:	000028fc 	strdeq	r2, [r0], -ip
    5a94:	00257101 	eoreq	r7, r5, r1, lsl #2
    5a98:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    5a9c:	e0010000 	and	r0, r1, r0
    5aa0:	07964008 	ldreq	r4, [r6, r8]
    5aa4:	292a0000 	stmdbcs	sl!, {}	; <UNPREDICTABLE>
    5aa8:	291c0000 	ldmdbcs	ip, {}	; <UNPREDICTABLE>
    5aac:	001c0000 	andseq	r0, ip, r0
    5ab0:	00000000 	andeq	r0, r0, r0
    5ab4:	7b000000 	blvc	5abc <_Min_Heap_Size+0x52bc>
    5ab8:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5abc:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5ac0:	0308e301 	movweq	lr, #33537	; 0x8301
    5ac4:	000000c6 	andeq	r0, r0, r6, asr #1
    5ac8:	00002984 	andeq	r2, r0, r4, lsl #19
    5acc:	00002982 	andeq	r2, r0, r2, lsl #19
    5ad0:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5ae0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ae4:	3b0308e3 	blcc	c7e78 <_Min_Heap_Size+0xc7678>
    5ae8:	1f000023 	svcne	0x00000023
    5aec:	00004590 	muleq	r0, r0, r5
    5af0:	0000299d 	muleq	r0, sp, r9
    5af4:	00002997 	muleq	r0, r7, r9
    5af8:	00459d20 	subeq	r9, r5, r0, lsr #26
    5afc:	0029cc00 	eoreq	ip, r9, r0, lsl #24
    5b00:	0029ca00 	eoreq	ip, r9, r0, lsl #20
    5b04:	3c210000 	stccc	0, cr0, [r1], #-0
    5b08:	00000045 	andeq	r0, r0, r5, asr #32
    5b0c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5b18:	08e30100 	stmiaeq	r3!, {r8}^
    5b1c:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    5b20:	29e30000 	stmibcs	r3!, {}^	; <UNPREDICTABLE>
    5b24:	29df0000 	ldmibcs	pc, {}^	; <UNPREDICTABLE>
    5b28:	4f1f0000 	svcmi	0x001f0000
    5b2c:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    5b30:	0300002a 	movweq	r0, #42	; 0x2a
    5b34:	2000002a 	andcs	r0, r0, sl, lsr #32
    5b38:	00004569 	andeq	r4, r0, r9, ror #10
    5b3c:	00002a1a 	andeq	r2, r0, sl, lsl sl
    5b40:	00002a18 	andeq	r2, r0, r8, lsl sl
    5b44:	001c0000 	andseq	r0, ip, r0
    5b48:	00000000 	andeq	r0, r0, r0
    5b4c:	13000000 	movwne	r0, #0
    5b50:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5b54:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5b58:	0308e401 	movweq	lr, #33793	; 0x8401
    5b5c:	000000c6 	andeq	r0, r0, r6, asr #1
    5b60:	00002a2f 	andeq	r2, r0, pc, lsr #20
    5b64:	00002a2d 	andeq	r2, r0, sp, lsr #20
    5b68:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5b78:	01000000 	mrseq	r0, (UNDEF: 0)
    5b7c:	d30308e4 	movwle	r0, #14564	; 0x38e4
    5b80:	1f000023 	svcne	0x00000023
    5b84:	00004590 	muleq	r0, r0, r5
    5b88:	00002a48 	andeq	r2, r0, r8, asr #20
    5b8c:	00002a42 	andeq	r2, r0, r2, asr #20
    5b90:	00459d20 	subeq	r9, r5, r0, lsr #26
    5b94:	002a7700 	eoreq	r7, sl, r0, lsl #14
    5b98:	002a7500 	eoreq	r7, sl, r0, lsl #10
    5b9c:	3c210000 	stccc	0, cr0, [r1], #-0
    5ba0:	00000045 	andeq	r0, r0, r5, asr #32
    5ba4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5bb0:	08e40100 	stmiaeq	r4!, {r8}^
    5bb4:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    5bb8:	2a8e0000 	bcs	fe385bc0 <_estack+0xde384988>
    5bbc:	2a8a0000 	bcs	fe285bc4 <_estack+0xde28498c>
    5bc0:	4f1f0000 	svcmi	0x001f0000
    5bc4:	b0000045 	andlt	r0, r0, r5, asr #32
    5bc8:	ae00002a 	cdpge	0, 0, cr0, cr0, cr10, {1}
    5bcc:	2000002a 	andcs	r0, r0, sl, lsr #32
    5bd0:	00004569 	andeq	r4, r0, r9, ror #10
    5bd4:	00002ac5 	andeq	r2, r0, r5, asr #21
    5bd8:	00002ac3 	andeq	r2, r0, r3, asr #21
    5bdc:	001c0000 	andseq	r0, ip, r0
    5be0:	00000000 	andeq	r0, r0, r0
    5be4:	ab000000 	blge	5bec <_Min_Heap_Size+0x53ec>
    5be8:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5bec:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5bf0:	0508e901 	streq	lr, [r8, #-2305]	; 0xfffff6ff
    5bf4:	000000c6 	andeq	r0, r0, r6, asr #1
    5bf8:	00002ada 	ldrdeq	r2, [r0], -sl
    5bfc:	00002ad8 	ldrdeq	r2, [r0], -r8
    5c00:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5c10:	01000000 	mrseq	r0, (UNDEF: 0)
    5c14:	6b0508e9 	blvs	147fc0 <_Min_Heap_Size+0x1477c0>
    5c18:	1f000024 	svcne	0x00000024
    5c1c:	00004590 	muleq	r0, r0, r5
    5c20:	00002af3 	strdeq	r2, [r0], -r3
    5c24:	00002aed 	andeq	r2, r0, sp, ror #21
    5c28:	00459d20 	subeq	r9, r5, r0, lsr #26
    5c2c:	002b2200 	eoreq	r2, fp, r0, lsl #4
    5c30:	002b2000 	eoreq	r2, fp, r0
    5c34:	3c210000 	stccc	0, cr0, [r1], #-0
    5c38:	00000045 	andeq	r0, r0, r5, asr #32
    5c3c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5c48:	08e90100 	stmiaeq	r9!, {r8}^
    5c4c:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    5c50:	2b390000 	blcs	e45c58 <_Min_Heap_Size+0xe45458>
    5c54:	2b350000 	blcs	d45c5c <_Min_Heap_Size+0xd4545c>
    5c58:	4f1f0000 	svcmi	0x001f0000
    5c5c:	5b000045 	blpl	5d78 <_Min_Heap_Size+0x5578>
    5c60:	5900002b 	stmdbpl	r0, {r0, r1, r3, r5}
    5c64:	2000002b 	andcs	r0, r0, fp, lsr #32
    5c68:	00004569 	andeq	r4, r0, r9, ror #10
    5c6c:	00002b70 	andeq	r2, r0, r0, ror fp
    5c70:	00002b6e 	andeq	r2, r0, lr, ror #22
    5c74:	001c0000 	andseq	r0, ip, r0
    5c78:	00000000 	andeq	r0, r0, r0
    5c7c:	43000000 	movwmi	r0, #0
    5c80:	1d000025 	stcne	0, cr0, [r0, #-148]	; 0xffffff6c
    5c84:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5c88:	0508ef01 	streq	lr, [r8, #-3841]	; 0xfffff0ff
    5c8c:	000000c6 	andeq	r0, r0, r6, asr #1
    5c90:	00002b85 	andeq	r2, r0, r5, lsl #23
    5c94:	00002b83 	andeq	r2, r0, r3, lsl #23
    5c98:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5ca8:	01000000 	mrseq	r0, (UNDEF: 0)
    5cac:	030508ef 	movweq	r0, #22767	; 0x58ef
    5cb0:	1f000025 	svcne	0x00000025
    5cb4:	00004590 	muleq	r0, r0, r5
    5cb8:	00002b9e 	muleq	r0, lr, fp
    5cbc:	00002b98 	muleq	r0, r8, fp
    5cc0:	00459d20 	subeq	r9, r5, r0, lsr #26
    5cc4:	002bcd00 	eoreq	ip, fp, r0, lsl #26
    5cc8:	002bcb00 	eoreq	ip, fp, r0, lsl #22
    5ccc:	3c210000 	stccc	0, cr0, [r1], #-0
    5cd0:	00000045 	andeq	r0, r0, r5, asr #32
    5cd4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5ce0:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    5ce4:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    5ce8:	2be40000 	blcs	ff905cf0 <_estack+0xdf904ab8>
    5cec:	2be00000 	blcs	ff805cf4 <_estack+0xdf804abc>
    5cf0:	4f1f0000 	svcmi	0x001f0000
    5cf4:	06000045 	streq	r0, [r0], -r5, asr #32
    5cf8:	0400002c 	streq	r0, [r0], #-44	; 0xffffffd4
    5cfc:	2000002c 	andcs	r0, r0, ip, lsr #32
    5d00:	00004569 	andeq	r4, r0, r9, ror #10
    5d04:	00002c1b 	andeq	r2, r0, fp, lsl ip
    5d08:	00002c19 	andeq	r2, r0, r9, lsl ip
    5d0c:	001a0000 	andseq	r0, sl, r0
    5d10:	0f000000 	svceq	0x00000000
    5d14:	18000046 	stmdane	r0, {r1, r2, r6}
    5d18:	00000000 	andeq	r0, r0, r0
    5d1c:	00001ac9 	andeq	r1, r0, r9, asr #21
    5d20:	00002560 	andeq	r2, r0, r0, ror #10
    5d24:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5d28:	23000074 	movwcs	r0, #116	; 0x74
    5d2c:	00000000 	andeq	r0, r0, r0
    5d30:	00001ac9 	andeq	r1, r0, r9, asr #21
    5d34:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5d38:	00000074 	andeq	r0, r0, r4, ror r0
    5d3c:	1517012c 	ldrne	r0, [r7, #-300]	; 0xfffffed4
    5d40:	93010000 	movwls	r0, #4096	; 0x1000
    5d44:	3a011308 	bcc	4a96c <_Min_Heap_Size+0x4a16c>
    5d48:	00000002 	andeq	r0, r0, r2
    5d4c:	00000000 	andeq	r0, r0, r0
    5d50:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    5d54:	0100002c 	tsteq	r0, ip, lsr #32
    5d58:	00002704 	andeq	r2, r0, r4, lsl #14
    5d5c:	00177416 	andseq	r7, r7, r6, lsl r4
    5d60:	08930100 	ldmeq	r3, {r8}
    5d64:	00079641 	andeq	r9, r7, r1, asr #12
    5d68:	002c5c00 	eoreq	r5, ip, r0, lsl #24
    5d6c:	002c4e00 	eoreq	r4, ip, r0, lsl #28
    5d70:	00001c00 	andeq	r1, r0, r0, lsl #24
    5d74:	00000000 	andeq	r0, r0, r0
    5d78:	263e0000 	ldrtcs	r0, [lr], -r0
    5d7c:	761d0000 	ldrvc	r0, [sp], -r0
    5d80:	01006c61 	tsteq	r0, r1, ror #24
    5d84:	c6030896 			; <UNDEFINED> instruction: 0xc6030896
    5d88:	b6000000 	strlt	r0, [r0], -r0
    5d8c:	b400002c 	strlt	r0, [r0], #-44	; 0xffffffd4
    5d90:	1e00002c 	cdpne	0, 0, cr0, cr0, cr12, {1}
    5d94:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5da4:	96010000 	strls	r0, [r1], -r0
    5da8:	25fe0308 	ldrbcs	r0, [lr, #776]!	; 0x308
    5dac:	901f0000 	andsls	r0, pc, r0
    5db0:	cf000045 	svcgt	0x00000045
    5db4:	c900002c 	stmdbgt	r0, {r2, r3, r5}
    5db8:	2000002c 	andcs	r0, r0, ip, lsr #32
    5dbc:	0000459d 	muleq	r0, sp, r5
    5dc0:	00002cfe 	strdeq	r2, [r0], -lr
    5dc4:	00002cfc 	strdeq	r2, [r0], -ip
    5dc8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5dcc:	00000000 	andeq	r0, r0, r0
    5dd0:	00010000 	andeq	r0, r1, r0
	...
    5ddc:	03089601 	movweq	r9, #34305	; 0x8601
    5de0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5de4:	002d1500 	eoreq	r1, sp, r0, lsl #10
    5de8:	002d1100 	eoreq	r1, sp, r0, lsl #2
    5dec:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4ef4 <_Min_Heap_Size+0x46f4>
    5df0:	2d370000 	ldccs	0, cr0, [r7, #-0]
    5df4:	2d350000 	ldccs	0, cr0, [r5, #-0]
    5df8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5dfc:	4c000045 	stcmi	0, cr0, [r0], {69}	; 0x45
    5e00:	4a00002d 	bmi	5ebc <_Min_Heap_Size+0x56bc>
    5e04:	0000002d 	andeq	r0, r0, sp, lsr #32
    5e08:	00001c00 	andeq	r1, r0, r0, lsl #24
    5e0c:	00000000 	andeq	r0, r0, r0
    5e10:	26d60000 	ldrbcs	r0, [r6], r0
    5e14:	761d0000 	ldrvc	r0, [sp], -r0
    5e18:	01006c61 	tsteq	r0, r1, ror #24
    5e1c:	c605089b 			; <UNDEFINED> instruction: 0xc605089b
    5e20:	61000000 	mrsvs	r0, (UNDEF: 0)
    5e24:	5f00002d 	svcpl	0x0000002d
    5e28:	1e00002d 	cdpne	0, 0, cr0, cr0, cr13, {1}
    5e2c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5e3c:	9b010000 	blls	45e44 <_Min_Heap_Size+0x45644>
    5e40:	26960508 	ldrcs	r0, [r6], r8, lsl #10
    5e44:	901f0000 	andsls	r0, pc, r0
    5e48:	7a000045 	bvc	5f64 <_Min_Heap_Size+0x5764>
    5e4c:	7400002d 	strvc	r0, [r0], #-45	; 0xffffffd3
    5e50:	2000002d 	andcs	r0, r0, sp, lsr #32
    5e54:	0000459d 	muleq	r0, sp, r5
    5e58:	00002da9 	andeq	r2, r0, r9, lsr #27
    5e5c:	00002da7 	andeq	r2, r0, r7, lsr #27
    5e60:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	00010000 	andeq	r0, r1, r0
	...
    5e74:	05089b01 	streq	r9, [r8, #-2817]	; 0xfffff4ff
    5e78:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5e7c:	002dc000 	eoreq	ip, sp, r0
    5e80:	002dbc00 	eoreq	fp, sp, r0, lsl #24
    5e84:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4f8c <_Min_Heap_Size+0x478c>
    5e88:	2de20000 	stclcs	0, cr0, [r2]
    5e8c:	2de00000 	stclcs	0, cr0, [r0]
    5e90:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5e94:	f7000045 			; <UNDEFINED> instruction: 0xf7000045
    5e98:	f500002d 			; <UNDEFINED> instruction: 0xf500002d
    5e9c:	0000002d 	andeq	r0, r0, sp, lsr #32
    5ea0:	00001a00 	andeq	r1, r0, r0, lsl #20
    5ea4:	460f0000 	strmi	r0, [pc], -r0
    5ea8:	00180000 	andseq	r0, r8, r0
    5eac:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    5eb0:	f300001a 	vqadd.u8	d0, d0, d10
    5eb4:	19000026 	stmdbne	r0, {r1, r2, r5}
    5eb8:	74025001 	strvc	r5, [r2], #-1
    5ebc:	00230000 	eoreq	r0, r3, r0
    5ec0:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    5ec4:	1900001a 	stmdbne	r0, {r1, r3, r4}
    5ec8:	74025001 	strvc	r5, [r2], #-1
    5ecc:	27000000 	strcs	r0, [r0, -r0]
    5ed0:	00162401 	andseq	r2, r6, r1, lsl #8
    5ed4:	080c0100 	stmdaeq	ip, {r8}
    5ed8:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    5ee4:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    5ee8:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    5eec:	1600002a 	strne	r0, [r0], -sl, lsr #32
    5ef0:	00001774 	andeq	r1, r0, r4, ror r7
    5ef4:	39080c01 	stmdbcc	r8, {r0, sl, fp}
    5ef8:	00000796 	muleq	r0, r6, r7
    5efc:	00002e34 	andeq	r2, r0, r4, lsr lr
    5f00:	00002e2a 	andeq	r2, r0, sl, lsr #28
    5f04:	0014f517 	andseq	pc, r4, r7, lsl r5	; <UNPREDICTABLE>
    5f08:	080e0100 	stmdaeq	lr, {r8}
    5f0c:	0000c60c 	andeq	ip, r0, ip, lsl #12
    5f10:	002e8000 	eoreq	r8, lr, r0
    5f14:	002e7600 	eoreq	r7, lr, r0, lsl #12
    5f18:	00001c00 	andeq	r1, r0, r0, lsl #24
    5f1c:	00000000 	andeq	r0, r0, r0
    5f20:	27e60000 	strbcs	r0, [r6, r0]!
    5f24:	761d0000 	ldrvc	r0, [sp], -r0
    5f28:	01006c61 	tsteq	r0, r1, ror #24
    5f2c:	c6030811 			; <UNDEFINED> instruction: 0xc6030811
    5f30:	c4000000 	strgt	r0, [r0], #-0
    5f34:	c200002e 	andgt	r0, r0, #46	; 0x2e
    5f38:	1e00002e 	cdpne	0, 0, cr0, cr0, cr14, {1}
    5f3c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5f4c:	11010000 	mrsne	r0, (UNDEF: 1)
    5f50:	27a60308 	strcs	r0, [r6, r8, lsl #6]!
    5f54:	901f0000 	andsls	r0, pc, r0
    5f58:	dd000045 	stcle	0, cr0, [r0, #-276]	; 0xfffffeec
    5f5c:	d700002e 	strle	r0, [r0, -lr, lsr #32]
    5f60:	2000002e 	andcs	r0, r0, lr, lsr #32
    5f64:	0000459d 	muleq	r0, sp, r5
    5f68:	00002f0c 	andeq	r2, r0, ip, lsl #30
    5f6c:	00002f0a 	andeq	r2, r0, sl, lsl #30
    5f70:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5f74:	00000000 	andeq	r0, r0, r0
    5f78:	00010000 	andeq	r0, r1, r0
	...
    5f84:	03081101 	movweq	r1, #33025	; 0x8101
    5f88:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5f8c:	002f2300 	eoreq	r2, pc, r0, lsl #6
    5f90:	002f1f00 	eoreq	r1, pc, r0, lsl #30
    5f94:	454f1f00 	strbmi	r1, [pc, #-3840]	; 509c <_Min_Heap_Size+0x489c>
    5f98:	2f450000 	svccs	0x00450000
    5f9c:	2f430000 	svccs	0x00430000
    5fa0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5fa4:	5a000045 	bpl	60c0 <_Min_Heap_Size+0x58c0>
    5fa8:	5800002f 	stmdapl	r0, {r0, r1, r2, r3, r5}
    5fac:	0000002f 	andeq	r0, r0, pc, lsr #32
    5fb0:	00001c00 	andeq	r1, r0, r0, lsl #24
    5fb4:	00000000 	andeq	r0, r0, r0
    5fb8:	287e0000 	ldmdacs	lr!, {}^	; <UNPREDICTABLE>
    5fbc:	761d0000 	ldrvc	r0, [sp], -r0
    5fc0:	01006c61 	tsteq	r0, r1, ror #24
    5fc4:	c6030812 			; <UNDEFINED> instruction: 0xc6030812
    5fc8:	6f000000 	svcvs	0x00000000
    5fcc:	6d00002f 	stcvs	0, cr0, [r0, #-188]	; 0xffffff44
    5fd0:	1e00002f 	cdpne	0, 0, cr0, cr0, cr15, {1}
    5fd4:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5fe4:	12010000 	andne	r0, r1, #0
    5fe8:	283e0308 	ldmdacs	lr!, {r3, r8, r9}
    5fec:	901f0000 	andsls	r0, pc, r0
    5ff0:	88000045 	stmdahi	r0, {r0, r2, r6}
    5ff4:	8200002f 	andhi	r0, r0, #47	; 0x2f
    5ff8:	2000002f 	andcs	r0, r0, pc, lsr #32
    5ffc:	0000459d 	muleq	r0, sp, r5
    6000:	00002fb7 			; <UNDEFINED> instruction: 0x00002fb7
    6004:	00002fb5 			; <UNDEFINED> instruction: 0x00002fb5
    6008:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    600c:	00000000 	andeq	r0, r0, r0
    6010:	00010000 	andeq	r0, r1, r0
	...
    601c:	03081201 	movweq	r1, #33281	; 0x8201
    6020:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6024:	002fce00 	eoreq	ip, pc, r0, lsl #28
    6028:	002fca00 	eoreq	ip, pc, r0, lsl #20
    602c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5134 <_Min_Heap_Size+0x4934>
    6030:	2ff00000 	svccs	0x00f00000	; IMB
    6034:	2fee0000 	svccs	0x00ee0000
    6038:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    603c:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    6040:	03000030 	movweq	r0, #48	; 0x30
    6044:	00000030 	andeq	r0, r0, r0, lsr r0
    6048:	00001c00 	andeq	r1, r0, r0, lsl #24
    604c:	00000000 	andeq	r0, r0, r0
    6050:	29160000 	ldmdbcs	r6, {}	; <UNPREDICTABLE>
    6054:	761d0000 	ldrvc	r0, [sp], -r0
    6058:	01006c61 	tsteq	r0, r1, ror #24
    605c:	c6050817 			; <UNDEFINED> instruction: 0xc6050817
    6060:	1a000000 	bne	6068 <_Min_Heap_Size+0x5868>
    6064:	18000030 	stmdane	r0, {r4, r5}
    6068:	1e000030 	mcrne	0, 0, r0, cr0, cr0, {1}
    606c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    607c:	17010000 	strne	r0, [r1, -r0]
    6080:	28d60508 	ldmcs	r6, {r3, r8, sl}^
    6084:	901f0000 	andsls	r0, pc, r0
    6088:	33000045 	movwcc	r0, #69	; 0x45
    608c:	2d000030 	stccs	0, cr0, [r0, #-192]	; 0xffffff40
    6090:	20000030 	andcs	r0, r0, r0, lsr r0
    6094:	0000459d 	muleq	r0, sp, r5
    6098:	00003062 	andeq	r3, r0, r2, rrx
    609c:	00003060 	andeq	r3, r0, r0, rrx
    60a0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    60a4:	00000000 	andeq	r0, r0, r0
    60a8:	00010000 	andeq	r0, r1, r0
	...
    60b4:	05081701 	streq	r1, [r8, #-1793]	; 0xfffff8ff
    60b8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    60bc:	00307900 	eorseq	r7, r0, r0, lsl #18
    60c0:	00307500 	eorseq	r7, r0, r0, lsl #10
    60c4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 51cc <_Min_Heap_Size+0x49cc>
    60c8:	309b0000 	addscc	r0, fp, r0
    60cc:	30990000 	addscc	r0, r9, r0
    60d0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    60d4:	b0000045 	andlt	r0, r0, r5, asr #32
    60d8:	ae000030 	mcrge	0, 0, r0, cr0, cr0, {1}
    60dc:	00000030 	andeq	r0, r0, r0, lsr r0
    60e0:	00001c00 	andeq	r1, r0, r0, lsl #24
    60e4:	00000000 	andeq	r0, r0, r0
    60e8:	29ae0000 	stmibcs	lr!, {}	; <UNPREDICTABLE>
    60ec:	761d0000 	ldrvc	r0, [sp], -r0
    60f0:	01006c61 	tsteq	r0, r1, ror #24
    60f4:	c605083d 			; <UNDEFINED> instruction: 0xc605083d
    60f8:	c7000000 	strgt	r0, [r0, -r0]
    60fc:	c3000030 	movwgt	r0, #48	; 0x30
    6100:	1e000030 	mcrne	0, 0, r0, cr0, cr0, {1}
    6104:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6114:	3d010000 	stccc	0, cr0, [r1, #-0]
    6118:	296e0508 	stmdbcs	lr!, {r3, r8, sl}^
    611c:	901f0000 	andsls	r0, pc, r0
    6120:	eb000045 	bl	623c <_Min_Heap_Size+0x5a3c>
    6124:	e5000030 	str	r0, [r0, #-48]	; 0xffffffd0
    6128:	20000030 	andcs	r0, r0, r0, lsr r0
    612c:	0000459d 	muleq	r0, sp, r5
    6130:	0000311a 	andeq	r3, r0, sl, lsl r1
    6134:	00003118 	andeq	r3, r0, r8, lsl r1
    6138:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    613c:	00000000 	andeq	r0, r0, r0
    6140:	00010000 	andeq	r0, r1, r0
	...
    614c:	05083d01 	streq	r3, [r8, #-3329]	; 0xfffff2ff
    6150:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6154:	00313100 	eorseq	r3, r1, r0, lsl #2
    6158:	00312d00 	eorseq	r2, r1, r0, lsl #26
    615c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5264 <_Min_Heap_Size+0x4a64>
    6160:	31530000 	cmpcc	r3, r0
    6164:	31510000 	cmpcc	r1, r0
    6168:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    616c:	68000045 	stmdavs	r0, {r0, r2, r6}
    6170:	66000031 			; <UNDEFINED> instruction: 0x66000031
    6174:	00000031 	andeq	r0, r0, r1, lsr r0
    6178:	00001c00 	andeq	r1, r0, r0, lsl #24
    617c:	00000000 	andeq	r0, r0, r0
    6180:	2a460000 	bcs	1186188 <_Min_Heap_Size+0x1185988>
    6184:	761d0000 	ldrvc	r0, [sp], -r0
    6188:	01006c61 	tsteq	r0, r1, ror #24
    618c:	c6050854 			; <UNDEFINED> instruction: 0xc6050854
    6190:	7d000000 	stcvc	0, cr0, [r0, #-0]
    6194:	7b000031 	blvc	6260 <_Min_Heap_Size+0x5a60>
    6198:	1e000031 	mcrne	0, 0, r0, cr0, cr1, {1}
    619c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    61ac:	54010000 	strpl	r0, [r1], #-0
    61b0:	2a060508 	bcs	1875d8 <_Min_Heap_Size+0x186dd8>
    61b4:	901f0000 	andsls	r0, pc, r0
    61b8:	96000045 	strls	r0, [r0], -r5, asr #32
    61bc:	90000031 	andls	r0, r0, r1, lsr r0
    61c0:	20000031 	andcs	r0, r0, r1, lsr r0
    61c4:	0000459d 	muleq	r0, sp, r5
    61c8:	000031c5 	andeq	r3, r0, r5, asr #3
    61cc:	000031c3 	andeq	r3, r0, r3, asr #3
    61d0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    61d4:	00000000 	andeq	r0, r0, r0
    61d8:	00010000 	andeq	r0, r1, r0
	...
    61e4:	05085401 	streq	r5, [r8, #-1025]	; 0xfffffbff
    61e8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    61ec:	0031dc00 	eorseq	sp, r1, r0, lsl #24
    61f0:	0031d800 	eorseq	sp, r1, r0, lsl #16
    61f4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 52fc <_Min_Heap_Size+0x4afc>
    61f8:	31fe0000 	mvnscc	r0, r0
    61fc:	31fc0000 	mvnscc	r0, r0
    6200:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6204:	13000045 	movwne	r0, #69	; 0x45
    6208:	11000032 	tstne	r0, r2, lsr r0
    620c:	00000032 	andeq	r0, r0, r2, lsr r0
    6210:	00001a00 	andeq	r1, r0, r0, lsl #20
    6214:	460f0000 	strmi	r0, [pc], -r0
    6218:	001a0000 	andseq	r0, sl, r0
    621c:	0f000000 	svceq	0x00000000
    6220:	23000046 	movwcs	r0, #70	; 0x46
    6224:	00000000 	andeq	r0, r0, r0
    6228:	00001b1f 	andeq	r1, r0, pc, lsl fp
    622c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6230:	00000074 	andeq	r0, r0, r4, ror r0
    6234:	139d0127 	orrsne	r0, sp, #-1073741815	; 0xc0000009
    6238:	cf010000 	svcgt	0x00010000
    623c:	3a011307 	bcc	4ae60 <_Min_Heap_Size+0x4a660>
    6240:	00000002 	andeq	r0, r0, r2
    6244:	00000000 	andeq	r0, r0, r0
    6248:	26000000 	strcs	r0, [r0], -r0
    624c:	01000032 	tsteq	r0, r2, lsr r0
    6250:	00002d11 	andeq	r2, r0, r1, lsl sp
    6254:	00177416 	andseq	r7, r7, r6, lsl r4
    6258:	07cf0100 	strbeq	r0, [pc, r0, lsl #2]
    625c:	0007963d 	andeq	r9, r7, sp, lsr r6
    6260:	00324e00 	eorseq	r4, r2, r0, lsl #28
    6264:	00324600 	eorseq	r4, r2, r0, lsl #12
    6268:	00001c00 	andeq	r1, r0, r0, lsl #24
    626c:	00000000 	andeq	r0, r0, r0
    6270:	2b360000 	blcs	d86278 <_Min_Heap_Size+0xd85a78>
    6274:	761d0000 	ldrvc	r0, [sp], -r0
    6278:	01006c61 	tsteq	r0, r1, ror #24
    627c:	c60307d2 			; <UNDEFINED> instruction: 0xc60307d2
    6280:	84000000 	strhi	r0, [r0], #-0
    6284:	82000032 	andhi	r0, r0, #50	; 0x32
    6288:	1e000032 	mcrne	0, 0, r0, cr0, cr2, {1}
    628c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    629c:	d2010000 	andle	r0, r1, #0
    62a0:	2af60307 	bcs	ffd86ec4 <_estack+0xdfd85c8c>
    62a4:	901f0000 	andsls	r0, pc, r0
    62a8:	9d000045 	stcls	0, cr0, [r0, #-276]	; 0xfffffeec
    62ac:	97000032 	smladxls	r0, r2, r0, r0
    62b0:	20000032 	andcs	r0, r0, r2, lsr r0
    62b4:	0000459d 	muleq	r0, sp, r5
    62b8:	000032cc 	andeq	r3, r0, ip, asr #5
    62bc:	000032ca 	andeq	r3, r0, sl, asr #5
    62c0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    62c4:	00000000 	andeq	r0, r0, r0
    62c8:	00010000 	andeq	r0, r1, r0
	...
    62d4:	0307d201 	movweq	sp, #29185	; 0x7201
    62d8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    62dc:	0032e300 	eorseq	lr, r2, r0, lsl #6
    62e0:	0032df00 	eorseq	sp, r2, r0, lsl #30
    62e4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 53ec <_Min_Heap_Size+0x4bec>
    62e8:	33050000 	movwcc	r0, #20480	; 0x5000
    62ec:	33030000 	movwcc	r0, #12288	; 0x3000
    62f0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    62f4:	1a000045 	bne	6410 <_Min_Heap_Size+0x5c10>
    62f8:	18000033 	stmdane	r0, {r0, r1, r4, r5}
    62fc:	00000033 	andeq	r0, r0, r3, lsr r0
    6300:	00001c00 	andeq	r1, r0, r0, lsl #24
    6304:	00000000 	andeq	r0, r0, r0
    6308:	2bce0000 	blcs	ff386310 <_estack+0xdf3850d8>
    630c:	761d0000 	ldrvc	r0, [sp], -r0
    6310:	01006c61 	tsteq	r0, r1, ror #24
    6314:	c60307d3 			; <UNDEFINED> instruction: 0xc60307d3
    6318:	2f000000 	svccs	0x00000000
    631c:	2d000033 	stccs	0, cr0, [r0, #-204]	; 0xffffff34
    6320:	1e000033 	mcrne	0, 0, r0, cr0, cr3, {1}
    6324:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6334:	d3010000 	movwle	r0, #4096	; 0x1000
    6338:	2b8e0307 	blcs	fe386f5c <_estack+0xde385d24>
    633c:	901f0000 	andsls	r0, pc, r0
    6340:	48000045 	stmdami	r0, {r0, r2, r6}
    6344:	42000033 	andmi	r0, r0, #51	; 0x33
    6348:	20000033 	andcs	r0, r0, r3, lsr r0
    634c:	0000459d 	muleq	r0, sp, r5
    6350:	00003377 	andeq	r3, r0, r7, ror r3
    6354:	00003375 	andeq	r3, r0, r5, ror r3
    6358:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    635c:	00000000 	andeq	r0, r0, r0
    6360:	00010000 	andeq	r0, r1, r0
	...
    636c:	0307d301 	movweq	sp, #29441	; 0x7301
    6370:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6374:	00338e00 	eorseq	r8, r3, r0, lsl #28
    6378:	00338a00 	eorseq	r8, r3, r0, lsl #20
    637c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5484 <_Min_Heap_Size+0x4c84>
    6380:	33b00000 	movscc	r0, #0
    6384:	33ae0000 			; <UNDEFINED> instruction: 0x33ae0000
    6388:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    638c:	c5000045 	strgt	r0, [r0, #-69]	; 0xffffffbb
    6390:	c3000033 	movwgt	r0, #51	; 0x33
    6394:	00000033 	andeq	r0, r0, r3, lsr r0
    6398:	00001c00 	andeq	r1, r0, r0, lsl #24
    639c:	00000000 	andeq	r0, r0, r0
    63a0:	2c660000 	stclcs	0, cr0, [r6], #-0
    63a4:	761d0000 	ldrvc	r0, [sp], -r0
    63a8:	01006c61 	tsteq	r0, r1, ror #24
    63ac:	c60507d8 			; <UNDEFINED> instruction: 0xc60507d8
    63b0:	da000000 	ble	63b8 <_Min_Heap_Size+0x5bb8>
    63b4:	d8000033 	stmdale	r0, {r0, r1, r4, r5}
    63b8:	1e000033 	mcrne	0, 0, r0, cr0, cr3, {1}
    63bc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    63cc:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    63d0:	2c260507 	cfstr32cs	mvfx0, [r6], #-28	; 0xffffffe4
    63d4:	901f0000 	andsls	r0, pc, r0
    63d8:	f3000045 	vhadd.u8	q0, q0, <illegal reg q2.5>
    63dc:	ed000033 	stc	0, cr0, [r0, #-204]	; 0xffffff34
    63e0:	20000033 	andcs	r0, r0, r3, lsr r0
    63e4:	0000459d 	muleq	r0, sp, r5
    63e8:	00003422 	andeq	r3, r0, r2, lsr #8
    63ec:	00003420 	andeq	r3, r0, r0, lsr #8
    63f0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    63f4:	00000000 	andeq	r0, r0, r0
    63f8:	00010000 	andeq	r0, r1, r0
	...
    6404:	0507d801 	streq	sp, [r7, #-2049]	; 0xfffff7ff
    6408:	00455c1f 	subeq	r5, r5, pc, lsl ip
    640c:	00343900 	eorseq	r3, r4, r0, lsl #18
    6410:	00343500 	eorseq	r3, r4, r0, lsl #10
    6414:	454f1f00 	strbmi	r1, [pc, #-3840]	; 551c <_Min_Heap_Size+0x4d1c>
    6418:	345b0000 	ldrbcc	r0, [fp], #-0
    641c:	34590000 	ldrbcc	r0, [r9], #-0
    6420:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6424:	70000045 	andvc	r0, r0, r5, asr #32
    6428:	6e000034 	mcrvs	0, 0, r0, cr0, cr4, {1}
    642c:	00000034 	andeq	r0, r0, r4, lsr r0
    6430:	00001c00 	andeq	r1, r0, r0, lsl #24
    6434:	00000000 	andeq	r0, r0, r0
    6438:	2cfe0000 	ldclcs	0, cr0, [lr]
    643c:	761d0000 	ldrvc	r0, [sp], -r0
    6440:	01006c61 	tsteq	r0, r1, ror #24
    6444:	c60507de 			; <UNDEFINED> instruction: 0xc60507de
    6448:	85000000 	strhi	r0, [r0, #-0]
    644c:	83000034 	movwhi	r0, #52	; 0x34
    6450:	1e000034 	mcrne	0, 0, r0, cr0, cr4, {1}
    6454:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6464:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    6468:	2cbe0507 	cfldr32cs	mvfx0, [lr], #28
    646c:	901f0000 	andsls	r0, pc, r0
    6470:	9e000045 	cdpls	0, 0, cr0, cr0, cr5, {2}
    6474:	98000034 	stmdals	r0, {r2, r4, r5}
    6478:	20000034 	andcs	r0, r0, r4, lsr r0
    647c:	0000459d 	muleq	r0, sp, r5
    6480:	000034cd 	andeq	r3, r0, sp, asr #9
    6484:	000034cb 	andeq	r3, r0, fp, asr #9
    6488:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    648c:	00000000 	andeq	r0, r0, r0
    6490:	00010000 	andeq	r0, r1, r0
	...
    649c:	0507de01 	streq	sp, [r7, #-3585]	; 0xfffff1ff
    64a0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    64a4:	0034e400 	eorseq	lr, r4, r0, lsl #8
    64a8:	0034e000 	eorseq	lr, r4, r0
    64ac:	454f1f00 	strbmi	r1, [pc, #-3840]	; 55b4 <_Min_Heap_Size+0x4db4>
    64b0:	35060000 	strcc	r0, [r6, #-0]
    64b4:	35040000 	strcc	r0, [r4, #-0]
    64b8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    64bc:	1b000045 	blne	65d8 <_Min_Heap_Size+0x5dd8>
    64c0:	19000035 	stmdbne	r0, {r0, r2, r4, r5}
    64c4:	00000035 	andeq	r0, r0, r5, lsr r0
    64c8:	00001a00 	andeq	r1, r0, r0, lsl #20
    64cc:	46000000 	strmi	r0, [r0], -r0
    64d0:	001a0000 	andseq	r0, sl, r0
    64d4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    64d8:	00000046 	andeq	r0, r0, r6, asr #32
    64dc:	16dd0127 	ldrbne	r0, [sp], r7, lsr #2
    64e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    64e4:	3a011307 	bcc	4b108 <_Min_Heap_Size+0x4a908>
    64e8:	00000002 	andeq	r0, r0, r2
    64ec:	00000000 	andeq	r0, r0, r0
    64f0:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    64f4:	01000035 	tsteq	r0, r5, lsr r0
    64f8:	00002e89 	andeq	r2, r0, r9, lsl #29
    64fc:	00177416 	andseq	r7, r7, r6, lsl r4
    6500:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
    6504:	0007963e 	andeq	r9, r7, lr, lsr r6
    6508:	00355200 	eorseq	r5, r5, r0, lsl #4
    650c:	00354e00 	eorseq	r4, r5, r0, lsl #28
    6510:	00001c00 	andeq	r1, r0, r0, lsl #24
    6514:	00000000 	andeq	r0, r0, r0
    6518:	2dde0000 	ldclcs	0, cr0, [lr]
    651c:	761d0000 	ldrvc	r0, [sp], -r0
    6520:	01006c61 	tsteq	r0, r1, ror #24
    6524:	c603079f 			; <UNDEFINED> instruction: 0xc603079f
    6528:	72000000 	andvc	r0, r0, #0
    652c:	70000035 	andvc	r0, r0, r5, lsr r0
    6530:	1e000035 	mcrne	0, 0, r0, cr0, cr5, {1}
    6534:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6544:	9f010000 	svcls	0x00010000
    6548:	2d9e0307 	ldccs	3, cr0, [lr, #28]
    654c:	901f0000 	andsls	r0, pc, r0
    6550:	8b000045 	blhi	666c <_Min_Heap_Size+0x5e6c>
    6554:	85000035 	strhi	r0, [r0, #-53]	; 0xffffffcb
    6558:	20000035 	andcs	r0, r0, r5, lsr r0
    655c:	0000459d 	muleq	r0, sp, r5
    6560:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    6564:	000035b8 			; <UNDEFINED> instruction: 0x000035b8
    6568:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    656c:	00000000 	andeq	r0, r0, r0
    6570:	00010000 	andeq	r0, r1, r0
	...
    657c:	03079f01 	movweq	r9, #32513	; 0x7f01
    6580:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6584:	0035d100 	eorseq	sp, r5, r0, lsl #2
    6588:	0035cd00 	eorseq	ip, r5, r0, lsl #26
    658c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5694 <_Min_Heap_Size+0x4e94>
    6590:	35f30000 	ldrbcc	r0, [r3, #0]!
    6594:	35f10000 	ldrbcc	r0, [r1, #0]!
    6598:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    659c:	08000045 	stmdaeq	r0, {r0, r2, r6}
    65a0:	06000036 			; <UNDEFINED> instruction: 0x06000036
    65a4:	00000036 	andeq	r0, r0, r6, lsr r0
    65a8:	00001c00 	andeq	r1, r0, r0, lsl #24
    65ac:	00000000 	andeq	r0, r0, r0
    65b0:	2e760000 	cdpcs	0, 7, cr0, cr6, cr0, {0}
    65b4:	761d0000 	ldrvc	r0, [sp], -r0
    65b8:	01006c61 	tsteq	r0, r1, ror #24
    65bc:	c60507a4 	strgt	r0, [r5], -r4, lsr #15
    65c0:	1d000000 	stcne	0, cr0, [r0, #-0]
    65c4:	1b000036 	blne	66a4 <_Min_Heap_Size+0x5ea4>
    65c8:	1e000036 	mcrne	0, 0, r0, cr0, cr6, {1}
    65cc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    65dc:	a4010000 	strge	r0, [r1], #-0
    65e0:	2e360507 	cdpcs	5, 3, cr0, cr6, cr7, {0}
    65e4:	901f0000 	andsls	r0, pc, r0
    65e8:	36000045 	strcc	r0, [r0], -r5, asr #32
    65ec:	30000036 	andcc	r0, r0, r6, lsr r0
    65f0:	20000036 	andcs	r0, r0, r6, lsr r0
    65f4:	0000459d 	muleq	r0, sp, r5
    65f8:	00003665 	andeq	r3, r0, r5, ror #12
    65fc:	00003663 	andeq	r3, r0, r3, ror #12
    6600:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6604:	00000000 	andeq	r0, r0, r0
    6608:	00010000 	andeq	r0, r1, r0
	...
    6614:	0507a401 	streq	sl, [r7, #-1025]	; 0xfffffbff
    6618:	00455c1f 	subeq	r5, r5, pc, lsl ip
    661c:	00367c00 	eorseq	r7, r6, r0, lsl #24
    6620:	00367800 	eorseq	r7, r6, r0, lsl #16
    6624:	454f1f00 	strbmi	r1, [pc, #-3840]	; 572c <_Min_Heap_Size+0x4f2c>
    6628:	369e0000 	ldrcc	r0, [lr], r0
    662c:	369c0000 	ldrcc	r0, [ip], r0
    6630:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6634:	b3000045 	movwlt	r0, #69	; 0x45
    6638:	b1000036 	tstlt	r0, r6, lsr r0
    663c:	00000036 	andeq	r0, r0, r6, lsr r0
    6640:	00001a00 	andeq	r1, r0, r0, lsl #20
    6644:	46000000 	strmi	r0, [r0], -r0
    6648:	001a0000 	andseq	r0, sl, r0
    664c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6650:	00000046 	andeq	r0, r0, r6, asr #32
    6654:	19710127 	ldmdbne	r1!, {r0, r1, r2, r5, r8}^
    6658:	43010000 	movwmi	r0, #4096	; 0x1000
    665c:	3a011307 	bcc	4b280 <_Min_Heap_Size+0x4aa80>
    6660:	00000002 	andeq	r0, r0, r2
    6664:	00000000 	andeq	r0, r0, r0
    6668:	c6000000 	strgt	r0, [r0], -r0
    666c:	01000036 	tsteq	r0, r6, lsr r0
    6670:	000031db 	ldrdeq	r3, [r0], -fp
    6674:	00177416 	andseq	r7, r7, r6, lsl r4
    6678:	07430100 	strbeq	r0, [r3, -r0, lsl #2]
    667c:	00079636 	andeq	r9, r7, r6, lsr r6
    6680:	0036ee00 	eorseq	lr, r6, r0, lsl #28
    6684:	0036e600 	eorseq	lr, r6, r0, lsl #12
    6688:	00001c00 	andeq	r1, r0, r0, lsl #24
    668c:	00000000 	andeq	r0, r0, r0
    6690:	2f560000 	svccs	0x00560000
    6694:	761d0000 	ldrvc	r0, [sp], -r0
    6698:	01006c61 	tsteq	r0, r1, ror #24
    669c:	c6030746 	strgt	r0, [r3], -r6, asr #14
    66a0:	24000000 	strcs	r0, [r0], #-0
    66a4:	22000037 	andcs	r0, r0, #55	; 0x37
    66a8:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    66ac:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    66bc:	46010000 	strmi	r0, [r1], -r0
    66c0:	2f160307 	svccs	0x00160307
    66c4:	901f0000 	andsls	r0, pc, r0
    66c8:	3d000045 	stccc	0, cr0, [r0, #-276]	; 0xfffffeec
    66cc:	37000037 	smladxcc	r0, r7, r0, r0
    66d0:	20000037 	andcs	r0, r0, r7, lsr r0
    66d4:	0000459d 	muleq	r0, sp, r5
    66d8:	0000376c 	andeq	r3, r0, ip, ror #14
    66dc:	0000376a 	andeq	r3, r0, sl, ror #14
    66e0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    66e4:	00000000 	andeq	r0, r0, r0
    66e8:	00010000 	andeq	r0, r1, r0
	...
    66f4:	03074601 	movweq	r4, #30209	; 0x7601
    66f8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    66fc:	00378300 	eorseq	r8, r7, r0, lsl #6
    6700:	00377f00 	eorseq	r7, r7, r0, lsl #30
    6704:	454f1f00 	strbmi	r1, [pc, #-3840]	; 580c <_Min_Heap_Size+0x500c>
    6708:	37a50000 	strcc	r0, [r5, r0]!
    670c:	37a30000 	strcc	r0, [r3, r0]!
    6710:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6714:	ba000045 	blt	6830 <_Min_Heap_Size+0x6030>
    6718:	b8000037 	stmdalt	r0, {r0, r1, r2, r4, r5}
    671c:	00000037 	andeq	r0, r0, r7, lsr r0
    6720:	00001c00 	andeq	r1, r0, r0, lsl #24
    6724:	00000000 	andeq	r0, r0, r0
    6728:	2fee0000 	svccs	0x00ee0000
    672c:	761d0000 	ldrvc	r0, [sp], -r0
    6730:	01006c61 	tsteq	r0, r1, ror #24
    6734:	c6030747 	strgt	r0, [r3], -r7, asr #14
    6738:	cf000000 	svcgt	0x00000000
    673c:	cd000037 	stcgt	0, cr0, [r0, #-220]	; 0xffffff24
    6740:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    6744:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6754:	47010000 	strmi	r0, [r1, -r0]
    6758:	2fae0307 	svccs	0x00ae0307
    675c:	901f0000 	andsls	r0, pc, r0
    6760:	e8000045 	stmda	r0, {r0, r2, r6}
    6764:	e2000037 	and	r0, r0, #55	; 0x37
    6768:	20000037 	andcs	r0, r0, r7, lsr r0
    676c:	0000459d 	muleq	r0, sp, r5
    6770:	00003817 	andeq	r3, r0, r7, lsl r8
    6774:	00003815 	andeq	r3, r0, r5, lsl r8
    6778:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    677c:	00000000 	andeq	r0, r0, r0
    6780:	00010000 	andeq	r0, r1, r0
	...
    678c:	03074701 	movweq	r4, #30465	; 0x7701
    6790:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6794:	00382e00 	eorseq	r2, r8, r0, lsl #28
    6798:	00382a00 	eorseq	r2, r8, r0, lsl #20
    679c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 58a4 <_Min_Heap_Size+0x50a4>
    67a0:	38500000 	ldmdacc	r0, {}^	; <UNPREDICTABLE>
    67a4:	384e0000 	stmdacc	lr, {}^	; <UNPREDICTABLE>
    67a8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    67ac:	65000045 	strvs	r0, [r0, #-69]	; 0xffffffbb
    67b0:	63000038 	movwvs	r0, #56	; 0x38
    67b4:	00000038 	andeq	r0, r0, r8, lsr r0
    67b8:	00001c00 	andeq	r1, r0, r0, lsl #24
    67bc:	00000000 	andeq	r0, r0, r0
    67c0:	30860000 	addcc	r0, r6, r0
    67c4:	761d0000 	ldrvc	r0, [sp], -r0
    67c8:	01006c61 	tsteq	r0, r1, ror #24
    67cc:	c605074c 	strgt	r0, [r5], -ip, asr #14
    67d0:	7a000000 	bvc	67d8 <_Min_Heap_Size+0x5fd8>
    67d4:	78000038 	stmdavc	r0, {r3, r4, r5}
    67d8:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    67dc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    67ec:	4c010000 	stcmi	0, cr0, [r1], {-0}
    67f0:	30460507 	subcc	r0, r6, r7, lsl #10
    67f4:	901f0000 	andsls	r0, pc, r0
    67f8:	93000045 	movwls	r0, #69	; 0x45
    67fc:	8d000038 	stchi	0, cr0, [r0, #-224]	; 0xffffff20
    6800:	20000038 	andcs	r0, r0, r8, lsr r0
    6804:	0000459d 	muleq	r0, sp, r5
    6808:	000038c2 	andeq	r3, r0, r2, asr #17
    680c:	000038c0 	andeq	r3, r0, r0, asr #17
    6810:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6814:	00000000 	andeq	r0, r0, r0
    6818:	00010000 	andeq	r0, r1, r0
	...
    6824:	05074c01 	streq	r4, [r7, #-3073]	; 0xfffff3ff
    6828:	00455c1f 	subeq	r5, r5, pc, lsl ip
    682c:	0038d900 	eorseq	sp, r8, r0, lsl #18
    6830:	0038d500 	eorseq	sp, r8, r0, lsl #10
    6834:	454f1f00 	strbmi	r1, [pc, #-3840]	; 593c <_Min_Heap_Size+0x513c>
    6838:	38fb0000 	ldmcc	fp!, {}^	; <UNPREDICTABLE>
    683c:	38f90000 	ldmcc	r9!, {}^	; <UNPREDICTABLE>
    6840:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6844:	10000045 	andne	r0, r0, r5, asr #32
    6848:	0e000039 	mcreq	0, 0, r0, cr0, cr9, {1}
    684c:	00000039 	andeq	r0, r0, r9, lsr r0
    6850:	00001c00 	andeq	r1, r0, r0, lsl #24
    6854:	00000000 	andeq	r0, r0, r0
    6858:	311e0000 	tstcc	lr, r0
    685c:	761d0000 	ldrvc	r0, [sp], -r0
    6860:	01006c61 	tsteq	r0, r1, ror #24
    6864:	c6050752 			; <UNDEFINED> instruction: 0xc6050752
    6868:	25000000 	strcs	r0, [r0, #-0]
    686c:	23000039 	movwcs	r0, #57	; 0x39
    6870:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
    6874:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6884:	52010000 	andpl	r0, r1, #0
    6888:	30de0507 	sbcscc	r0, lr, r7, lsl #10
    688c:	901f0000 	andsls	r0, pc, r0
    6890:	3e000045 	cdpcc	0, 0, cr0, cr0, cr5, {2}
    6894:	38000039 	stmdacc	r0, {r0, r3, r4, r5}
    6898:	20000039 	andcs	r0, r0, r9, lsr r0
    689c:	0000459d 	muleq	r0, sp, r5
    68a0:	0000396d 	andeq	r3, r0, sp, ror #18
    68a4:	0000396b 	andeq	r3, r0, fp, ror #18
    68a8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    68ac:	00000000 	andeq	r0, r0, r0
    68b0:	00010000 	andeq	r0, r1, r0
	...
    68bc:	05075201 	streq	r5, [r7, #-513]	; 0xfffffdff
    68c0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    68c4:	00398400 	eorseq	r8, r9, r0, lsl #8
    68c8:	00398000 	eorseq	r8, r9, r0
    68cc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 59d4 <_Min_Heap_Size+0x51d4>
    68d0:	39a60000 	stmibcc	r6!, {}	; <UNPREDICTABLE>
    68d4:	39a40000 	stmibcc	r4!, {}	; <UNPREDICTABLE>
    68d8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    68dc:	bb000045 	bllt	69f8 <_Min_Heap_Size+0x61f8>
    68e0:	b9000039 	stmdblt	r0, {r0, r3, r4, r5}
    68e4:	00000039 	andeq	r0, r0, r9, lsr r0
    68e8:	00001c00 	andeq	r1, r0, r0, lsl #24
    68ec:	00000000 	andeq	r0, r0, r0
    68f0:	31b60000 			; <UNDEFINED> instruction: 0x31b60000
    68f4:	761d0000 	ldrvc	r0, [sp], -r0
    68f8:	01006c61 	tsteq	r0, r1, ror #24
    68fc:	c605076b 	strgt	r0, [r5], -fp, ror #14
    6900:	d0000000 	andle	r0, r0, r0
    6904:	ce000039 	mcrgt	0, 0, r0, cr0, cr9, {1}
    6908:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
    690c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    691c:	6b010000 	blvs	46924 <_Min_Heap_Size+0x46124>
    6920:	31760507 	cmncc	r6, r7, lsl #10
    6924:	901f0000 	andsls	r0, pc, r0
    6928:	e9000045 	stmdb	r0, {r0, r2, r6}
    692c:	e3000039 	movw	r0, #57	; 0x39
    6930:	20000039 	andcs	r0, r0, r9, lsr r0
    6934:	0000459d 	muleq	r0, sp, r5
    6938:	00003a18 	andeq	r3, r0, r8, lsl sl
    693c:	00003a16 	andeq	r3, r0, r6, lsl sl
    6940:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6944:	00000000 	andeq	r0, r0, r0
    6948:	00010000 	andeq	r0, r1, r0
	...
    6954:	05076b01 	streq	r6, [r7, #-2817]	; 0xfffff4ff
    6958:	00455c1f 	subeq	r5, r5, pc, lsl ip
    695c:	003a2f00 	eorseq	r2, sl, r0, lsl #30
    6960:	003a2b00 	eorseq	r2, sl, r0, lsl #22
    6964:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5a6c <_Min_Heap_Size+0x526c>
    6968:	3a510000 	bcc	1446970 <_Min_Heap_Size+0x1446170>
    696c:	3a4f0000 	bcc	13c6974 <_Min_Heap_Size+0x13c6174>
    6970:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6974:	66000045 	strvs	r0, [r0], -r5, asr #32
    6978:	6400003a 	strvs	r0, [r0], #-58	; 0xffffffc6
    697c:	0000003a 	andeq	r0, r0, sl, lsr r0
    6980:	00001a00 	andeq	r1, r0, r0, lsl #20
    6984:	46000000 	strmi	r0, [r0], -r0
    6988:	001a0000 	andseq	r0, sl, r0
    698c:	00000000 	andeq	r0, r0, r0
    6990:	1a000046 	bne	6ab0 <_Min_Heap_Size+0x62b0>
    6994:	00000000 	andeq	r0, r0, r0
    6998:	0000461e 	andeq	r4, r0, lr, lsl r6
    699c:	0000001a 	andeq	r0, r0, sl, lsl r0
    69a0:	00461e00 	subeq	r1, r6, r0, lsl #28
    69a4:	01280000 			; <UNDEFINED> instruction: 0x01280000
    69a8:	00001300 	andeq	r1, r0, r0, lsl #6
    69ac:	1d073101 	stfnes	f3, [r7, #-4]
    69b0:	00056701 	andeq	r6, r5, r1, lsl #14
	...
    69bc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    69c0:	00321001 	eorseq	r1, r2, r1
    69c4:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    69c8:	31010000 	mrscc	r0, (UNDEF: 1)
    69cc:	07964b07 	ldreq	r4, [r6, r7, lsl #22]
    69d0:	3a7d0000 	bcc	1f469d8 <_Min_Heap_Size+0x1f461d8>
    69d4:	3a790000 	bcc	1e469dc <_Min_Heap_Size+0x1e461dc>
    69d8:	27000000 	strcs	r0, [r0, -r0]
    69dc:	00187601 	andseq	r7, r8, r1, lsl #12
    69e0:	06ed0100 	strbteq	r0, [sp], r0, lsl #2
    69e4:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    69f0:	3a9e0000 	bcc	fe7869f8 <_estack+0xde7857c0>
    69f4:	4b010000 	blmi	469fc <_Min_Heap_Size+0x461fc>
    69f8:	16000033 			; <UNDEFINED> instruction: 0x16000033
    69fc:	00001774 	andeq	r1, r0, r4, ror r7
    6a00:	4406ed01 	strmi	lr, [r6], #-3329	; 0xfffff2ff
    6a04:	00000796 	muleq	r0, r6, r7
    6a08:	00003b0a 	andeq	r3, r0, sl, lsl #22
    6a0c:	00003afa 	strdeq	r3, [r0], -sl
    6a10:	0013c516 	andseq	ip, r3, r6, lsl r5
    6a14:	06ed0100 	strbteq	r0, [sp], r0, lsl #2
    6a18:	00068254 	andeq	r8, r6, r4, asr r2
    6a1c:	003b7700 	eorseq	r7, fp, r0, lsl #14
    6a20:	003b6d00 	eorseq	r6, fp, r0, lsl #26
    6a24:	00d91600 	sbcseq	r1, r9, r0, lsl #12
    6a28:	ed010000 	stc	0, cr0, [r1, #-0]
    6a2c:	00b06406 	adcseq	r6, r0, r6, lsl #8
    6a30:	3bc60000 	blcc	ff186a38 <_estack+0xdf185800>
    6a34:	3bbc0000 	blcc	fef06a3c <_estack+0xdef05804>
    6a38:	13170000 	tstne	r7, #0
    6a3c:	0100001c 	tsteq	r0, ip, lsl r0
    6a40:	3a1506ef 	bcc	548604 <_Min_Heap_Size+0x547e04>
    6a44:	11000002 	tstne	r0, r2
    6a48:	0b00003c 	bleq	6b40 <_Min_Heap_Size+0x6340>
    6a4c:	1c00003c 	stcne	0, cr0, [r0], {60}	; 0x3c
	...
    6a58:	000032a2 	andeq	r3, r0, r2, lsr #5
    6a5c:	00057d22 	andeq	r7, r5, r2, lsr #26
    6a60:	07040100 	streq	r0, [r4, -r0, lsl #2]
    6a64:	0000d209 	andeq	sp, r0, r9, lsl #4
    6a68:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6a6c:	00001c00 	andeq	r1, r0, r0, lsl #24
    6a70:	00000000 	andeq	r0, r0, r0
    6a74:	333a0000 	teqcc	sl, #0
    6a78:	761d0000 	ldrvc	r0, [sp], -r0
    6a7c:	01006c61 	tsteq	r0, r1, ror #24
    6a80:	c6090705 	strgt	r0, [r9], -r5, lsl #14
    6a84:	3d000000 	stccc	0, cr0, [r0, #-0]
    6a88:	3b00003c 	blcc	6b80 <_Min_Heap_Size+0x6380>
    6a8c:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    6a90:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6aa0:	05010000 	streq	r0, [r1, #-0]
    6aa4:	32fa0907 	rscscc	r0, sl, #114688	; 0x1c000
    6aa8:	901f0000 	andsls	r0, pc, r0
    6aac:	56000045 	strpl	r0, [r0], -r5, asr #32
    6ab0:	5000003c 	andpl	r0, r0, ip, lsr r0
    6ab4:	2000003c 	andcs	r0, r0, ip, lsr r0
    6ab8:	0000459d 	muleq	r0, sp, r5
    6abc:	00003c85 	andeq	r3, r0, r5, lsl #25
    6ac0:	00003c83 	andeq	r3, r0, r3, lsl #25
    6ac4:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6ac8:	00000000 	andeq	r0, r0, r0
    6acc:	00010000 	andeq	r0, r1, r0
	...
    6ad8:	09070501 	stmdbeq	r7, {r0, r8, sl}
    6adc:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6ae0:	003c9c00 	eorseq	r9, ip, r0, lsl #24
    6ae4:	003c9800 	eorseq	r9, ip, r0, lsl #16
    6ae8:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5bf0 <_Min_Heap_Size+0x53f0>
    6aec:	3cbe0000 	ldccc	0, cr0, [lr]
    6af0:	3cbc0000 	ldccc	0, cr0, [ip]
    6af4:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6af8:	d3000045 	movwle	r0, #69	; 0x45
    6afc:	d100003c 	tstle	r0, ip, lsr r0
    6b00:	0000003c 	andeq	r0, r0, ip, lsr r0
    6b04:	00002300 	andeq	r2, r0, r0, lsl #6
    6b08:	0dad0000 	stceq	0, cr0, [sp]
    6b0c:	01190000 	tsteq	r9, r0
    6b10:	00740250 	rsbseq	r0, r4, r0, asr r2
    6b14:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6b18:	0000170b 	andeq	r1, r0, fp, lsl #14
    6b1c:	1306b101 	movwne	fp, #24833	; 0x6101
    6b20:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6b2c:	003ce600 	eorseq	lr, ip, r0, lsl #12
    6b30:	34860100 	strcc	r0, [r6], #256	; 0x100
    6b34:	74160000 	ldrvc	r0, [r6], #-0
    6b38:	01000017 	tsteq	r0, r7, lsl r0
    6b3c:	964306b1 			; <UNDEFINED> instruction: 0x964306b1
    6b40:	52000007 	andpl	r0, r0, #7
    6b44:	4200003d 	andmi	r0, r0, #61	; 0x3d
    6b48:	1600003d 			; <UNDEFINED> instruction: 0x1600003d
    6b4c:	000013c5 	andeq	r1, r0, r5, asr #7
    6b50:	5306b101 	movwpl	fp, #24833	; 0x6101
    6b54:	00000682 	andeq	r0, r0, r2, lsl #13
    6b58:	00003dbf 			; <UNDEFINED> instruction: 0x00003dbf
    6b5c:	00003db5 			; <UNDEFINED> instruction: 0x00003db5
    6b60:	0000d916 	andeq	sp, r0, r6, lsl r9
    6b64:	06b10100 	ldrteq	r0, [r1], r0, lsl #2
    6b68:	0000b063 	andeq	fp, r0, r3, rrx
    6b6c:	003e0e00 	eorseq	r0, lr, r0, lsl #28
    6b70:	003e0400 	eorseq	r0, lr, r0, lsl #8
    6b74:	1c131700 	ldcne	7, cr1, [r3], {-0}
    6b78:	b3010000 	movwlt	r0, #4096	; 0x1000
    6b7c:	023a1506 	eorseq	r1, sl, #25165824	; 0x1800000
    6b80:	3e590000 	cdpcc	0, 5, cr0, cr9, cr0, {0}
    6b84:	3e530000 	cdpcc	0, 5, cr0, cr3, cr0, {0}
    6b88:	001c0000 	andseq	r0, ip, r0
    6b8c:	00000000 	andeq	r0, r0, r0
    6b90:	dd000000 	stcle	0, cr0, [r0, #-0]
    6b94:	22000033 	andcs	r0, r0, #51	; 0x33
    6b98:	0000057d 	andeq	r0, r0, sp, ror r5
    6b9c:	0906c801 	stmdbeq	r6, {r0, fp, lr, pc}
    6ba0:	000000d2 	ldrdeq	r0, [r0], -r2
    6ba4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6ba8:	0000001c 	andeq	r0, r0, ip, lsl r0
    6bac:	00000000 	andeq	r0, r0, r0
    6bb0:	00347500 	eorseq	r7, r4, r0, lsl #10
    6bb4:	61761d00 	cmnvs	r6, r0, lsl #26
    6bb8:	c901006c 	stmdbgt	r1, {r2, r3, r5, r6}
    6bbc:	00c60906 	sbceq	r0, r6, r6, lsl #18
    6bc0:	3e850000 	cdpcc	0, 8, cr0, cr5, cr0, {0}
    6bc4:	3e830000 	cdpcc	0, 8, cr0, cr3, cr0, {0}
    6bc8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6bcc:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6bdc:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    6be0:	00343509 	eorseq	r3, r4, r9, lsl #10
    6be4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6be8:	3e9e0000 	cdpcc	0, 9, cr0, cr14, cr0, {0}
    6bec:	3e980000 	cdpcc	0, 9, cr0, cr8, cr0, {0}
    6bf0:	9d200000 	stcls	0, cr0, [r0, #-0]
    6bf4:	cd000045 	stcgt	0, cr0, [r0, #-276]	; 0xfffffeec
    6bf8:	cb00003e 	blgt	6cf8 <_Min_Heap_Size+0x64f8>
    6bfc:	0000003e 	andeq	r0, r0, lr, lsr r0
    6c00:	00453c21 	subeq	r3, r5, r1, lsr #24
    6c04:	00000000 	andeq	r0, r0, r0
    6c08:	00000100 	andeq	r0, r0, r0, lsl #2
    6c0c:	00000000 	andeq	r0, r0, r0
    6c10:	01000000 	mrseq	r0, (UNDEF: 0)
    6c14:	1f0906c9 	svcne	0x000906c9
    6c18:	0000455c 	andeq	r4, r0, ip, asr r5
    6c1c:	00003ee4 	andeq	r3, r0, r4, ror #29
    6c20:	00003ee0 	andeq	r3, r0, r0, ror #29
    6c24:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6c28:	003f0600 	eorseq	r0, pc, r0, lsl #12
    6c2c:	003f0400 	eorseq	r0, pc, r0, lsl #8
    6c30:	45692000 	strbmi	r2, [r9, #-0]!
    6c34:	3f1b0000 	svccc	0x001b0000
    6c38:	3f190000 	svccc	0x00190000
    6c3c:	00000000 	andeq	r0, r0, r0
    6c40:	00000023 	andeq	r0, r0, r3, lsr #32
    6c44:	00101f00 	andseq	r1, r0, r0, lsl #30
    6c48:	50011900 	andpl	r1, r1, r0, lsl #18
    6c4c:	00007402 	andeq	r7, r0, r2, lsl #8
    6c50:	01012700 	tsteq	r1, r0, lsl #14
    6c54:	01000019 	tsteq	r0, r9, lsl r0
    6c58:	01130634 	tsteq	r3, r4, lsr r6
    6c5c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6c68:	00003f2e 	andeq	r3, r0, lr, lsr #30
    6c6c:	00357f01 	eorseq	r7, r5, r1, lsl #30
    6c70:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    6c74:	34010000 	strcc	r0, [r1], #-0
    6c78:	07964006 	ldreq	r4, [r6, r6]
    6c7c:	3f820000 	svccc	0x00820000
    6c80:	3f720000 	svccc	0x00720000
    6c84:	c5160000 	ldrgt	r0, [r6, #-0]
    6c88:	01000013 	tsteq	r0, r3, lsl r0
    6c8c:	82500634 	subshi	r0, r0, #52, 12	; 0x3400000
    6c90:	f7000006 			; <UNDEFINED> instruction: 0xf7000006
    6c94:	e500003f 	str	r0, [r0, #-63]	; 0xffffffc1
    6c98:	1600003f 			; <UNDEFINED> instruction: 0x1600003f
    6c9c:	000000d9 	ldrdeq	r0, [r0], -r9
    6ca0:	60063401 	andvs	r3, r6, r1, lsl #8
    6ca4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6ca8:	00004075 	andeq	r4, r0, r5, ror r0
    6cac:	0000406b 	andeq	r4, r0, fp, rrx
    6cb0:	00167716 	andseq	r7, r6, r6, lsl r7
    6cb4:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    6cb8:	0008cf70 	andeq	ip, r8, r0, ror pc
    6cbc:	0040be00 	subeq	fp, r0, r0, lsl #28
    6cc0:	0040ba00 	subeq	fp, r0, r0, lsl #20
    6cc4:	16a91600 	strtne	r1, [r9], r0, lsl #12
    6cc8:	35010000 	strcc	r0, [r1, #-0]
    6ccc:	00c63506 	sbceq	r3, r6, r6, lsl #10
    6cd0:	40e00000 	rscmi	r0, r0, r0
    6cd4:	40dc0000 	sbcsmi	r0, ip, r0
    6cd8:	f1170000 			; <UNDEFINED> instruction: 0xf1170000
    6cdc:	01000013 	tsteq	r0, r3, lsl r0
    6ce0:	820d0637 	andhi	r0, sp, #57671680	; 0x3700000
    6ce4:	04000006 	streq	r0, [r0], #-6
    6ce8:	00000041 	andeq	r0, r0, r1, asr #32
    6cec:	17000041 	strne	r0, [r0, -r1, asr #32]
    6cf0:	0000145b 	andeq	r1, r0, fp, asr r4
    6cf4:	0d063801 	stceq	8, cr3, [r6, #-4]
    6cf8:	000008cf 	andeq	r0, r0, pc, asr #17
    6cfc:	0000412a 	andeq	r4, r0, sl, lsr #2
    6d00:	00004122 	andeq	r4, r0, r2, lsr #2
    6d04:	0017be17 	andseq	fp, r7, r7, lsl lr
    6d08:	06390100 	ldrteq	r0, [r9], -r0, lsl #2
    6d0c:	0000c60c 	andeq	ip, r0, ip, lsl #12
    6d10:	00416400 	subeq	r6, r1, r0, lsl #8
    6d14:	00416000 	subeq	r6, r1, r0
    6d18:	00001c00 	andeq	r1, r0, r0, lsl #24
    6d1c:	00000000 	andeq	r0, r0, r0
    6d20:	356c0000 	strbcc	r0, [ip, #-0]!
    6d24:	7d220000 	stcvc	0, cr0, [r2, #-0]
    6d28:	01000005 	tsteq	r0, r5
    6d2c:	d2090664 	andle	r0, r9, #100, 12	; 0x6400000
    6d30:	02000000 	andeq	r0, r0, #0
    6d34:	1a005c91 	bne	1df80 <_Min_Heap_Size+0x1d780>
    6d38:	00000000 	andeq	r0, r0, r0
    6d3c:	000045f2 	strdeq	r4, [r0], -r2
    6d40:	0000001a 	andeq	r0, r0, sl, lsl r0
    6d44:	0045f200 	subeq	pc, r5, r0, lsl #4
    6d48:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6d4c:	00001743 	andeq	r1, r0, r3, asr #14
    6d50:	1305fd01 	movwne	pc, #23809	; 0x5d01	; <UNPREDICTABLE>
    6d54:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6d60:	00418200 	subeq	r8, r1, r0, lsl #4
    6d64:	37300100 	ldrcc	r0, [r0, -r0, lsl #2]!
    6d68:	74160000 	ldrvc	r0, [r6], #-0
    6d6c:	01000017 	tsteq	r0, r7, lsl r0
    6d70:	963805fd 			; <UNDEFINED> instruction: 0x963805fd
    6d74:	aa000007 	bge	6d98 <_Min_Heap_Size+0x6598>
    6d78:	a2000041 	andge	r0, r0, #65	; 0x41
    6d7c:	17000041 	strne	r0, [r0, -r1, asr #32]
    6d80:	00001810 	andeq	r1, r0, r0, lsl r8
    6d84:	0c05ff01 	stceq	15, cr15, [r5], {1}
    6d88:	000000c6 	andeq	r0, r0, r6, asr #1
    6d8c:	000041e8 	andeq	r4, r0, r8, ror #3
    6d90:	000041de 	ldrdeq	r4, [r0], -lr
    6d94:	0000001c 	andeq	r0, r0, ip, lsl r0
    6d98:	00000000 	andeq	r0, r0, r0
    6d9c:	00366100 	eorseq	r6, r6, r0, lsl #2
    6da0:	61761d00 	cmnvs	r6, r0, lsl #26
    6da4:	0a01006c 	beq	46f5c <_Min_Heap_Size+0x4675c>
    6da8:	00c60506 	sbceq	r0, r6, r6, lsl #10
    6dac:	424c0000 	submi	r0, ip, #0
    6db0:	424a0000 	submi	r0, sl, #0
    6db4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6db8:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6dc8:	060a0100 	streq	r0, [sl], -r0, lsl #2
    6dcc:	00362105 	eorseq	r2, r6, r5, lsl #2
    6dd0:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6dd4:	42650000 	rsbmi	r0, r5, #0
    6dd8:	425f0000 	subsmi	r0, pc, #0
    6ddc:	9d200000 	stcls	0, cr0, [r0, #-0]
    6de0:	94000045 	strls	r0, [r0], #-69	; 0xffffffbb
    6de4:	92000042 	andls	r0, r0, #66	; 0x42
    6de8:	00000042 	andeq	r0, r0, r2, asr #32
    6dec:	00453c21 	subeq	r3, r5, r1, lsr #24
    6df0:	00000000 	andeq	r0, r0, r0
    6df4:	00000100 	andeq	r0, r0, r0, lsl #2
    6df8:	00000000 	andeq	r0, r0, r0
    6dfc:	01000000 	mrseq	r0, (UNDEF: 0)
    6e00:	1f05060a 	svcne	0x0005060a
    6e04:	0000455c 	andeq	r4, r0, ip, asr r5
    6e08:	000042ab 	andeq	r4, r0, fp, lsr #5
    6e0c:	000042a7 	andeq	r4, r0, r7, lsr #5
    6e10:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6e14:	0042cd00 	subeq	ip, r2, r0, lsl #26
    6e18:	0042cb00 	subeq	ip, r2, r0, lsl #22
    6e1c:	45692000 	strbmi	r2, [r9, #-0]!
    6e20:	42e20000 	rscmi	r0, r2, #0
    6e24:	42e00000 	rscmi	r0, r0, #0
    6e28:	00000000 	andeq	r0, r0, r0
    6e2c:	0000001c 	andeq	r0, r0, ip, lsl r0
    6e30:	00000000 	andeq	r0, r0, r0
    6e34:	0036f900 	eorseq	pc, r6, r0, lsl #18
    6e38:	61761d00 	cmnvs	r6, r0, lsl #26
    6e3c:	1801006c 	stmdane	r1, {r2, r3, r5, r6}
    6e40:	00c60506 	sbceq	r0, r6, r6, lsl #10
    6e44:	42f70000 	rscsmi	r0, r7, #0
    6e48:	42f50000 	rscsmi	r0, r5, #0
    6e4c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6e50:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6e60:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    6e64:	0036b905 	eorseq	fp, r6, r5, lsl #18
    6e68:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6e6c:	43100000 	tstmi	r0, #0
    6e70:	430a0000 	movwmi	r0, #40960	; 0xa000
    6e74:	9d200000 	stcls	0, cr0, [r0, #-0]
    6e78:	3f000045 	svccc	0x00000045
    6e7c:	3d000043 	stccc	0, cr0, [r0, #-268]	; 0xfffffef4
    6e80:	00000043 	andeq	r0, r0, r3, asr #32
    6e84:	00453c21 	subeq	r3, r5, r1, lsr #24
    6e88:	00000000 	andeq	r0, r0, r0
    6e8c:	00000100 	andeq	r0, r0, r0, lsl #2
    6e90:	00000000 	andeq	r0, r0, r0
    6e94:	01000000 	mrseq	r0, (UNDEF: 0)
    6e98:	1f050618 	svcne	0x00050618
    6e9c:	0000455c 	andeq	r4, r0, ip, asr r5
    6ea0:	00004356 	andeq	r4, r0, r6, asr r3
    6ea4:	00004352 	andeq	r4, r0, r2, asr r3
    6ea8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6eac:	00437800 	subeq	r7, r3, r0, lsl #16
    6eb0:	00437600 	subeq	r7, r3, r0, lsl #12
    6eb4:	45692000 	strbmi	r2, [r9, #-0]!
    6eb8:	438d0000 	orrmi	r0, sp, #0
    6ebc:	438b0000 	orrmi	r0, fp, #0
    6ec0:	00000000 	andeq	r0, r0, r0
    6ec4:	0000001a 	andeq	r0, r0, sl, lsl r0
    6ec8:	00460000 	subeq	r0, r6, r0
    6ecc:	00001800 	andeq	r1, r0, r0, lsl #16
    6ed0:	0ce90000 	stcleq	0, cr0, [r9]
    6ed4:	37160000 	ldrcc	r0, [r6, -r0]
    6ed8:	01190000 	tsteq	r9, r0
    6edc:	00740250 	rsbseq	r0, r4, r0, asr r2
    6ee0:	00001a00 	andeq	r1, r0, r0, lsl #20
    6ee4:	46000000 	strmi	r0, [r0], -r0
    6ee8:	00230000 	eoreq	r0, r3, r0
    6eec:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    6ef0:	1900000a 	stmdbne	r0, {r1, r3}
    6ef4:	74025001 	strvc	r5, [r2], #-1
    6ef8:	27000000 	strcs	r0, [r0, -r0]
    6efc:	00195e01 	andseq	r5, r9, r1, lsl #28
    6f00:	05db0100 	ldrbeq	r0, [fp, #256]	; 0x100
    6f04:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6f10:	43a00000 	movmi	r0, #0
    6f14:	e0010000 	and	r0, r1, r0
    6f18:	16000039 			; <UNDEFINED> instruction: 0x16000039
    6f1c:	00001774 	andeq	r1, r0, r4, ror r7
    6f20:	3a05db01 	bcc	17db2c <_Min_Heap_Size+0x17d32c>
    6f24:	00000796 	muleq	r0, r6, r7
    6f28:	000043d4 	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    6f2c:	000043cc 	andeq	r4, r0, ip, asr #7
    6f30:	0000001c 	andeq	r0, r0, ip, lsl r0
    6f34:	00000000 	andeq	r0, r0, r0
    6f38:	0037fd00 	eorseq	pc, r7, r0, lsl #26
    6f3c:	61761d00 	cmnvs	r6, r0, lsl #26
    6f40:	e101006c 	tst	r1, ip, rrx
    6f44:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6f48:	44100000 	ldrmi	r0, [r0], #-0
    6f4c:	440e0000 	strmi	r0, [lr], #-0
    6f50:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6f54:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6f64:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
    6f68:	0037bd05 	eorseq	fp, r7, r5, lsl #26
    6f6c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6f70:	44290000 	strtmi	r0, [r9], #-0
    6f74:	44230000 	strtmi	r0, [r3], #-0
    6f78:	9d200000 	stcls	0, cr0, [r0, #-0]
    6f7c:	58000045 	stmdapl	r0, {r0, r2, r6}
    6f80:	56000044 	strpl	r0, [r0], -r4, asr #32
    6f84:	00000044 	andeq	r0, r0, r4, asr #32
    6f88:	00453c21 	subeq	r3, r5, r1, lsr #24
    6f8c:	00000000 	andeq	r0, r0, r0
    6f90:	00000100 	andeq	r0, r0, r0, lsl #2
    6f94:	00000000 	andeq	r0, r0, r0
    6f98:	01000000 	mrseq	r0, (UNDEF: 0)
    6f9c:	1f0505e1 	svcne	0x000505e1
    6fa0:	0000455c 	andeq	r4, r0, ip, asr r5
    6fa4:	0000446f 	andeq	r4, r0, pc, ror #8
    6fa8:	0000446b 	andeq	r4, r0, fp, ror #8
    6fac:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6fb0:	00449100 	subeq	r9, r4, r0, lsl #2
    6fb4:	00448f00 	subeq	r8, r4, r0, lsl #30
    6fb8:	45692000 	strbmi	r2, [r9, #-0]!
    6fbc:	44a60000 	strtmi	r0, [r6], #0
    6fc0:	44a40000 	strtmi	r0, [r4], #0
    6fc4:	00000000 	andeq	r0, r0, r0
    6fc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    6fcc:	00000000 	andeq	r0, r0, r0
    6fd0:	00381b00 	eorseq	r1, r8, r0, lsl #22
    6fd4:	057d2200 	ldrbeq	r2, [sp, #-512]!	; 0xfffffe00
    6fd8:	e7010000 	str	r0, [r1, -r0]
    6fdc:	00d20505 	sbcseq	r0, r2, r5, lsl #10
    6fe0:	91020000 	mrsls	r0, (UNDEF: 2)
    6fe4:	001c007c 	andseq	r0, ip, ip, ror r0
    6fe8:	00000000 	andeq	r0, r0, r0
    6fec:	b3000000 	movwlt	r0, #0
    6ff0:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    6ff4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6ff8:	0705ec01 	streq	lr, [r5, -r1, lsl #24]
    6ffc:	000000c6 	andeq	r0, r0, r6, asr #1
    7000:	000044bb 			; <UNDEFINED> instruction: 0x000044bb
    7004:	000044b9 			; <UNDEFINED> instruction: 0x000044b9
    7008:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    7018:	01000000 	mrseq	r0, (UNDEF: 0)
    701c:	730705ec 	movwvc	r0, #30188	; 0x75ec
    7020:	1f000038 	svcne	0x00000038
    7024:	00004590 	muleq	r0, r0, r5
    7028:	000044d4 	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    702c:	000044ce 	andeq	r4, r0, lr, asr #9
    7030:	00459d20 	subeq	r9, r5, r0, lsr #26
    7034:	00450300 	subeq	r0, r5, r0, lsl #6
    7038:	00450100 	subeq	r0, r5, r0, lsl #2
    703c:	3c210000 	stccc	0, cr0, [r1], #-0
    7040:	00000045 	andeq	r0, r0, r5, asr #32
    7044:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7050:	05ec0100 	strbeq	r0, [ip, #256]!	; 0x100
    7054:	455c1f07 	ldrbmi	r1, [ip, #-3847]	; 0xfffff0f9
    7058:	451a0000 	ldrmi	r0, [sl, #-0]
    705c:	45160000 	ldrmi	r0, [r6, #-0]
    7060:	4f1f0000 	svcmi	0x001f0000
    7064:	3c000045 	stccc	0, cr0, [r0], {69}	; 0x45
    7068:	3a000045 	bcc	7184 <_Min_Heap_Size+0x6984>
    706c:	20000045 	andcs	r0, r0, r5, asr #32
    7070:	00004569 	andeq	r4, r0, r9, ror #10
    7074:	00004551 	andeq	r4, r0, r1, asr r5
    7078:	0000454f 	andeq	r4, r0, pc, asr #10
    707c:	001c0000 	andseq	r0, ip, r0
    7080:	00000000 	andeq	r0, r0, r0
    7084:	4b000000 	blmi	708c <_Min_Heap_Size+0x688c>
    7088:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
    708c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    7090:	0505ee01 	streq	lr, [r5, #-3585]	; 0xfffff1ff
    7094:	000000c6 	andeq	r0, r0, r6, asr #1
    7098:	00004566 	andeq	r4, r0, r6, ror #10
    709c:	00004564 	andeq	r4, r0, r4, ror #10
    70a0:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    70b0:	01000000 	mrseq	r0, (UNDEF: 0)
    70b4:	0b0505ee 	bleq	148874 <_Min_Heap_Size+0x148074>
    70b8:	1f000039 	svcne	0x00000039
    70bc:	00004590 	muleq	r0, r0, r5
    70c0:	0000457f 	andeq	r4, r0, pc, ror r5
    70c4:	00004579 	andeq	r4, r0, r9, ror r5
    70c8:	00459d20 	subeq	r9, r5, r0, lsr #26
    70cc:	0045ae00 	subeq	sl, r5, r0, lsl #28
    70d0:	0045ac00 	subeq	sl, r5, r0, lsl #24
    70d4:	3c210000 	stccc	0, cr0, [r1], #-0
    70d8:	00000045 	andeq	r0, r0, r5, asr #32
    70dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    70e8:	05ee0100 	strbeq	r0, [lr, #256]!	; 0x100
    70ec:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    70f0:	45c50000 	strbmi	r0, [r5]
    70f4:	45c10000 	strbmi	r0, [r1]
    70f8:	4f1f0000 	svcmi	0x001f0000
    70fc:	e7000045 	str	r0, [r0, -r5, asr #32]
    7100:	e5000045 	str	r0, [r0, #-69]	; 0xffffffbb
    7104:	20000045 	andcs	r0, r0, r5, asr #32
    7108:	00004569 	andeq	r4, r0, r9, ror #10
    710c:	000045fc 	strdeq	r4, [r0], -ip
    7110:	000045fa 	strdeq	r4, [r0], -sl
    7114:	00260000 	eoreq	r0, r6, r0
    7118:	00000000 	andeq	r0, r0, r0
    711c:	1d000000 	stcne	0, cr0, [r0, #-0]
    7120:	006c6176 	rsbeq	r6, ip, r6, ror r1
    7124:	0505f101 	streq	pc, [r5, #-257]	; 0xfffffeff
    7128:	000000c6 	andeq	r0, r0, r6, asr #1
    712c:	00004611 	andeq	r4, r0, r1, lsl r6
    7130:	0000460f 	andeq	r4, r0, pc, lsl #12
    7134:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    7144:	01000000 	mrseq	r0, (UNDEF: 0)
    7148:	9f0505f1 	svcls	0x000505f1
    714c:	1f000039 	svcne	0x00000039
    7150:	00004590 	muleq	r0, r0, r5
    7154:	0000462a 	andeq	r4, r0, sl, lsr #12
    7158:	00004624 	andeq	r4, r0, r4, lsr #12
    715c:	00459d20 	subeq	r9, r5, r0, lsr #26
    7160:	00465900 	subeq	r5, r6, r0, lsl #18
    7164:	00465700 	subeq	r5, r6, r0, lsl #14
    7168:	3c210000 	stccc	0, cr0, [r1], #-0
    716c:	00000045 	andeq	r0, r0, r5, asr #32
    7170:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    717c:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    7180:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    7184:	46700000 	ldrbtmi	r0, [r0], -r0
    7188:	466c0000 	strbtmi	r0, [ip], -r0
    718c:	4f1f0000 	svcmi	0x001f0000
    7190:	92000045 	andls	r0, r0, #69	; 0x45
    7194:	90000046 	andls	r0, r0, r6, asr #32
    7198:	20000046 	andcs	r0, r0, r6, asr #32
    719c:	00004569 	andeq	r4, r0, r9, ror #10
    71a0:	000046a7 	andeq	r4, r0, r7, lsr #13
    71a4:	000046a5 	andeq	r4, r0, r5, lsr #13
    71a8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    71ac:	00131a01 	andseq	r1, r3, r1, lsl #20
    71b0:	05bc0100 	ldreq	r0, [ip, #256]!	; 0x100
    71b4:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    71c0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    71c4:	3c860100 	stfccs	f0, [r6], {0}
    71c8:	74160000 	ldrvc	r0, [r6], #-0
    71cc:	01000017 	tsteq	r0, r7, lsl r0
    71d0:	963905bc 			; <UNDEFINED> instruction: 0x963905bc
    71d4:	c0000007 	andgt	r0, r0, r7
    71d8:	ba000046 	blt	72f8 <_Min_Heap_Size+0x6af8>
    71dc:	17000046 	strne	r0, [r0, -r6, asr #32]
    71e0:	00001810 	andeq	r1, r0, r0, lsl r8
    71e4:	0c05be01 	stceq	14, cr11, [r5], {1}
    71e8:	000000c6 	andeq	r0, r0, r6, asr #1
    71ec:	000046f6 	strdeq	r4, [r0], -r6
    71f0:	000046ec 	andeq	r4, r0, ip, ror #13
    71f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    71f8:	00000000 	andeq	r0, r0, r0
    71fc:	003ac100 	eorseq	ip, sl, r0, lsl #2
    7200:	61761d00 	cmnvs	r6, r0, lsl #26
    7204:	c401006c 	strgt	r0, [r1], #-108	; 0xffffff94
    7208:	00c60505 	sbceq	r0, r6, r5, lsl #10
    720c:	47540000 	ldrbmi	r0, [r4, -r0]
    7210:	47520000 	ldrbmi	r0, [r2, -r0]
    7214:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    7218:	00000045 	andeq	r0, r0, r5, asr #32
	...
    7228:	05c40100 	strbeq	r0, [r4, #256]	; 0x100
    722c:	003a8105 	eorseq	r8, sl, r5, lsl #2
    7230:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    7234:	476d0000 	strbmi	r0, [sp, -r0]!
    7238:	47670000 	strbmi	r0, [r7, -r0]!
    723c:	9d200000 	stcls	0, cr0, [r0, #-0]
    7240:	9c000045 	stcls	0, cr0, [r0], {69}	; 0x45
    7244:	9a000047 	bls	7368 <_Min_Heap_Size+0x6b68>
    7248:	00000047 	andeq	r0, r0, r7, asr #32
    724c:	00453c21 	subeq	r3, r5, r1, lsr #24
    7250:	00000000 	andeq	r0, r0, r0
    7254:	00000100 	andeq	r0, r0, r0, lsl #2
    7258:	00000000 	andeq	r0, r0, r0
    725c:	01000000 	mrseq	r0, (UNDEF: 0)
    7260:	1f0505c4 	svcne	0x000505c4
    7264:	0000455c 	andeq	r4, r0, ip, asr r5
    7268:	000047b3 			; <UNDEFINED> instruction: 0x000047b3
    726c:	000047af 	andeq	r4, r0, pc, lsr #15
    7270:	00454f1f 	subeq	r4, r5, pc, lsl pc
    7274:	0047d500 	subeq	sp, r7, r0, lsl #10
    7278:	0047d300 	subeq	sp, r7, r0, lsl #6
    727c:	45692000 	strbmi	r2, [r9, #-0]!
    7280:	47ea0000 	strbmi	r0, [sl, r0]!
    7284:	47e80000 	strbmi	r0, [r8, r0]!
    7288:	00000000 	andeq	r0, r0, r0
    728c:	0000001c 	andeq	r0, r0, ip, lsl r0
    7290:	00000000 	andeq	r0, r0, r0
    7294:	003b5900 	eorseq	r5, fp, r0, lsl #18
    7298:	61761d00 	cmnvs	r6, r0, lsl #26
    729c:	cb01006c 	blgt	47454 <_Min_Heap_Size+0x46c54>
    72a0:	00c60505 	sbceq	r0, r6, r5, lsl #10
    72a4:	47ff0000 	ldrbmi	r0, [pc, r0]!
    72a8:	47fd0000 	ldrbmi	r0, [sp, r0]!
    72ac:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    72b0:	00000045 	andeq	r0, r0, r5, asr #32
	...
    72c0:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    72c4:	003b1905 	eorseq	r1, fp, r5, lsl #18
    72c8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    72cc:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
    72d0:	48120000 	ldmdami	r2, {}	; <UNPREDICTABLE>
    72d4:	9d200000 	stcls	0, cr0, [r0, #-0]
    72d8:	47000045 	strmi	r0, [r0, -r5, asr #32]
    72dc:	45000048 	strmi	r0, [r0, #-72]	; 0xffffffb8
    72e0:	00000048 	andeq	r0, r0, r8, asr #32
    72e4:	00453c21 	subeq	r3, r5, r1, lsr #24
    72e8:	00000000 	andeq	r0, r0, r0
    72ec:	00000100 	andeq	r0, r0, r0, lsl #2
    72f0:	00000000 	andeq	r0, r0, r0
    72f4:	01000000 	mrseq	r0, (UNDEF: 0)
    72f8:	1f0505cb 	svcne	0x000505cb
    72fc:	0000455c 	andeq	r4, r0, ip, asr r5
    7300:	0000485e 	andeq	r4, r0, lr, asr r8
    7304:	0000485a 	andeq	r4, r0, sl, asr r8
    7308:	00454f1f 	subeq	r4, r5, pc, lsl pc
    730c:	00488000 	subeq	r8, r8, r0
    7310:	00487e00 	subeq	r7, r8, r0, lsl #28
    7314:	45692000 	strbmi	r2, [r9, #-0]!
    7318:	48950000 	ldmmi	r5, {}	; <UNPREDICTABLE>
    731c:	48930000 	ldmmi	r3, {}	; <UNPREDICTABLE>
    7320:	00000000 	andeq	r0, r0, r0
    7324:	0000001c 	andeq	r0, r0, ip, lsl r0
    7328:	00000000 	andeq	r0, r0, r0
    732c:	003bf100 	eorseq	pc, fp, r0, lsl #2
    7330:	61761d00 	cmnvs	r6, r0, lsl #26
    7334:	cc01006c 	stcgt	0, cr0, [r1], {108}	; 0x6c
    7338:	00c60505 	sbceq	r0, r6, r5, lsl #10
    733c:	48aa0000 	stmiami	sl!, {}	; <UNPREDICTABLE>
    7340:	48a80000 	stmiami	r8!, {}	; <UNPREDICTABLE>
    7344:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    7348:	00000045 	andeq	r0, r0, r5, asr #32
	...
    7358:	05cc0100 	strbeq	r0, [ip, #256]	; 0x100
    735c:	003bb105 	eorseq	fp, fp, r5, lsl #2
    7360:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    7364:	48c30000 	stmiami	r3, {}^	; <UNPREDICTABLE>
    7368:	48bd0000 	popmi	{}	; <UNPREDICTABLE>
    736c:	9d200000 	stcls	0, cr0, [r0, #-0]
    7370:	f2000045 	vhadd.s8	q0, q0, <illegal reg q2.5>
    7374:	f0000048 			; <UNDEFINED> instruction: 0xf0000048
    7378:	00000048 	andeq	r0, r0, r8, asr #32
    737c:	00453c21 	subeq	r3, r5, r1, lsr #24
    7380:	00000000 	andeq	r0, r0, r0
    7384:	00000100 	andeq	r0, r0, r0, lsl #2
    7388:	00000000 	andeq	r0, r0, r0
    738c:	01000000 	mrseq	r0, (UNDEF: 0)
    7390:	1f0505cc 	svcne	0x000505cc
    7394:	0000455c 	andeq	r4, r0, ip, asr r5
    7398:	00004909 	andeq	r4, r0, r9, lsl #18
    739c:	00004905 	andeq	r4, r0, r5, lsl #18
    73a0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    73a4:	00492b00 	subeq	r2, r9, r0, lsl #22
    73a8:	00492900 	subeq	r2, r9, r0, lsl #18
    73ac:	45692000 	strbmi	r2, [r9, #-0]!
    73b0:	49400000 	stmdbmi	r0, {}^	; <UNPREDICTABLE>
    73b4:	493e0000 	ldmdbmi	lr!, {}	; <UNPREDICTABLE>
    73b8:	00000000 	andeq	r0, r0, r0
    73bc:	00000026 	andeq	r0, r0, r6, lsr #32
    73c0:	00000000 	andeq	r0, r0, r0
    73c4:	61761d00 	cmnvs	r6, r0, lsl #26
    73c8:	cf01006c 	svcgt	0x0001006c
    73cc:	00c60505 	sbceq	r0, r6, r5, lsl #10
    73d0:	49550000 	ldmdbmi	r5, {}^	; <UNPREDICTABLE>
    73d4:	49530000 	ldmdbmi	r3, {}^	; <UNPREDICTABLE>
    73d8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    73dc:	00000045 	andeq	r0, r0, r5, asr #32
	...
    73ec:	05cf0100 	strbeq	r0, [pc, #256]	; 74f4 <_Min_Heap_Size+0x6cf4>
    73f0:	003c4505 	eorseq	r4, ip, r5, lsl #10
    73f4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    73f8:	496e0000 	stmdbmi	lr!, {}^	; <UNPREDICTABLE>
    73fc:	49680000 	stmdbmi	r8!, {}^	; <UNPREDICTABLE>
    7400:	9d200000 	stcls	0, cr0, [r0, #-0]
    7404:	9d000045 	stcls	0, cr0, [r0, #-276]	; 0xfffffeec
    7408:	9b000049 	blls	7534 <_Min_Heap_Size+0x6d34>
    740c:	00000049 	andeq	r0, r0, r9, asr #32
    7410:	00453c21 	subeq	r3, r5, r1, lsr #24
    7414:	00000000 	andeq	r0, r0, r0
    7418:	00000100 	andeq	r0, r0, r0, lsl #2
    741c:	00000000 	andeq	r0, r0, r0
    7420:	01000000 	mrseq	r0, (UNDEF: 0)
    7424:	1f0505cf 	svcne	0x000505cf
    7428:	0000455c 	andeq	r4, r0, ip, asr r5
    742c:	000049b4 			; <UNDEFINED> instruction: 0x000049b4
    7430:	000049b0 			; <UNDEFINED> instruction: 0x000049b0
    7434:	00454f1f 	subeq	r4, r5, pc, lsl pc
    7438:	0049d600 	subeq	sp, r9, r0, lsl #12
    743c:	0049d400 	subeq	sp, r9, r0, lsl #8
    7440:	45692000 	strbmi	r2, [r9, #-0]!
    7444:	49eb0000 	stmibmi	fp!, {}^	; <UNPREDICTABLE>
    7448:	49e90000 	stmibmi	r9!, {}^	; <UNPREDICTABLE>
    744c:	00000000 	andeq	r0, r0, r0
    7450:	49012700 	stmdbmi	r1, {r8, r9, sl, sp}
    7454:	01000016 	tsteq	r0, r6, lsl r0
    7458:	011305a1 	tsteq	r3, r1, lsr #11
    745c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    7468:	000049fe 	strdeq	r4, [r0], -lr
    746c:	003cf701 	eorseq	pc, ip, r1, lsl #14
    7470:	17741600 	ldrbne	r1, [r4, -r0, lsl #12]!
    7474:	a1010000 	mrsge	r0, (UNDEF: 1)
    7478:	07963c05 	ldreq	r3, [r6, r5, lsl #24]
    747c:	4a2e0000 	bmi	b87484 <_Min_Heap_Size+0xb86c84>
    7480:	4a1e0000 	bmi	787488 <_Min_Heap_Size+0x786c88>
    7484:	c5160000 	ldrgt	r0, [r6, #-0]
    7488:	01000013 	tsteq	r0, r3, lsl r0
    748c:	824c05a1 	subhi	r0, ip, #675282944	; 0x28400000
    7490:	a4000006 	strge	r0, [r0], #-6
    7494:	9a00004a 	bls	75c4 <_Min_Heap_Size+0x6dc4>
    7498:	1600004a 	strne	r0, [r0], -sl, asr #32
    749c:	000000d9 	ldrdeq	r0, [r0], -r9
    74a0:	5c05a101 	stfpld	f2, [r5], {1}
    74a4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    74a8:	00004af3 	strdeq	r4, [r0], -r3
    74ac:	00004ae9 	andeq	r4, r0, r9, ror #21
    74b0:	00000023 	andeq	r0, r0, r3, lsr #32
    74b4:	000dad00 	andeq	sl, sp, r0, lsl #26
    74b8:	50011900 	andpl	r1, r1, r0, lsl #18
    74bc:	5001f303 	andpl	pc, r1, r3, lsl #6
    74c0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    74c4:	000018eb 	andeq	r1, r0, fp, ror #17
    74c8:	13056301 	movwne	r6, #21249	; 0x5301
    74cc:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    74d8:	004b3800 	subeq	r3, fp, r0, lsl #16
    74dc:	3e110100 	mufccs	f0, f1, f0
    74e0:	74160000 	ldrvc	r0, [r6], #-0
    74e4:	01000017 	tsteq	r0, r7, lsl r0
    74e8:	963d0563 	ldrtls	r0, [sp], -r3, ror #10
    74ec:	68000007 	stmdavs	r0, {r0, r1, r2}
    74f0:	5800004b 	stmdapl	r0, {r0, r1, r3, r6}
    74f4:	1600004b 	strne	r0, [r0], -fp, asr #32
    74f8:	000013c5 	andeq	r1, r0, r5, asr #7
    74fc:	53056301 	movwpl	r6, #21249	; 0x5301
    7500:	0000067c 	andeq	r0, r0, ip, ror r6
    7504:	00004bd8 	ldrdeq	r4, [r0], -r8
    7508:	00004bce 	andeq	r4, r0, lr, asr #23
    750c:	0000d916 	andeq	sp, r0, r6, lsl r9
    7510:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    7514:	0000b063 	andeq	fp, r0, r3, rrx
    7518:	004c2700 	subeq	r2, ip, r0, lsl #14
    751c:	004c1d00 	subeq	r1, ip, r0, lsl #26
    7520:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    7524:	65010070 	strvs	r0, [r1, #-112]	; 0xffffff90
    7528:	3e111305 	cdpcc	3, 1, cr1, cr1, cr5, {0}
    752c:	4c6e0000 	stclmi	0, cr0, [lr], #-0
    7530:	4c6c0000 	stclmi	0, cr0, [ip], #-0
    7534:	b02d0000 	eorlt	r0, sp, r0
    7538:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    753c:	1d00003d 	stcne	0, cr0, [r0, #-244]	; 0xffffff0c
    7540:	006c6176 	rsbeq	r6, ip, r6, ror r1
    7544:	05058b01 	streq	r8, [r5, #-2817]	; 0xfffff4ff
    7548:	000000c6 	andeq	r0, r0, r6, asr #1
    754c:	00004c88 	andeq	r4, r0, r8, lsl #25
    7550:	00004c86 	andeq	r4, r0, r6, lsl #25
    7554:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    7564:	01000000 	mrseq	r0, (UNDEF: 0)
    7568:	bf05058b 	svclt	0x0005058b
    756c:	1f00003d 	svcne	0x0000003d
    7570:	00004590 	muleq	r0, r0, r5
    7574:	00004ca1 	andeq	r4, r0, r1, lsr #25
    7578:	00004c9b 	muleq	r0, fp, ip
    757c:	00459d20 	subeq	r9, r5, r0, lsr #26
    7580:	004cd000 	subeq	sp, ip, r0
    7584:	004cce00 	subeq	ip, ip, r0, lsl #28
    7588:	3c210000 	stccc	0, cr0, [r1], #-0
    758c:	00000045 	andeq	r0, r0, r5, asr #32
    7590:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    759c:	058b0100 	streq	r0, [fp, #256]	; 0x100
    75a0:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    75a4:	4ce70000 	stclmi	0, cr0, [r7]
    75a8:	4ce30000 	stclmi	0, cr0, [r3]
    75ac:	4f1f0000 	svcmi	0x001f0000
    75b0:	09000045 	stmdbeq	r0, {r0, r2, r6}
    75b4:	0700004d 	streq	r0, [r0, -sp, asr #32]
    75b8:	2000004d 	andcs	r0, r0, sp, asr #32
    75bc:	00004569 	andeq	r4, r0, r9, ror #10
    75c0:	00004d1e 	andeq	r4, r0, lr, lsl sp
    75c4:	00004d1c 	andeq	r4, r0, ip, lsl sp
    75c8:	00230000 	eoreq	r0, r3, r0
    75cc:	e3000000 	movw	r0, #0
    75d0:	19000045 	stmdbne	r0, {r0, r2, r6}
    75d4:	f3035101 	vrhadd.u8	d5, d3, d1
    75d8:	00005101 	andeq	r5, r0, r1, lsl #2
    75dc:	00d70411 	sbcseq	r0, r7, r1, lsl r4
    75e0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    75e4:	00001980 	andeq	r1, r0, r0, lsl #19
    75e8:	13054301 	movwne	r4, #21249	; 0x5301
    75ec:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    75f8:	004d3100 	subeq	r3, sp, r0, lsl #2
    75fc:	3e880100 	rmfcce	f0, f0, f0
    7600:	74160000 	ldrvc	r0, [r6], #-0
    7604:	01000017 	tsteq	r0, r7, lsl r0
    7608:	963b0543 	ldrtls	r0, [fp], -r3, asr #10
    760c:	61000007 	tstvs	r0, r7
    7610:	5100004d 	tstpl	r0, sp, asr #32
    7614:	1600004d 	strne	r0, [r0], -sp, asr #32
    7618:	000013c5 	andeq	r1, r0, r5, asr #7
    761c:	4b054301 	blmi	158228 <_Min_Heap_Size+0x157a28>
    7620:	00000682 	andeq	r0, r0, r2, lsl #13
    7624:	00004dd7 	ldrdeq	r4, [r0], -r7
    7628:	00004dcd 	andeq	r4, r0, sp, asr #27
    762c:	0000d916 	andeq	sp, r0, r6, lsl r9
    7630:	05430100 	strbeq	r0, [r3, #-256]	; 0xffffff00
    7634:	0000b05b 	andeq	fp, r0, fp, asr r0
    7638:	004e2600 	subeq	r2, lr, r0, lsl #12
    763c:	004e1c00 	subeq	r1, lr, r0, lsl #24
    7640:	00002300 	andeq	r2, r0, r0, lsl #6
    7644:	101f0000 	andsne	r0, pc, r0
    7648:	01190000 	tsteq	r9, r0
    764c:	01f30350 	mvnseq	r0, r0, asr r3
    7650:	28000050 	stmdacs	r0, {r4, r6}
    7654:	00182c01 	andseq	r2, r8, r1, lsl #24
    7658:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    765c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    7668:	7d020000 	stcvc	0, cr0, [r2, #-0]
    766c:	3ee70100 	cdpcc	1, 14, cr0, cr7, cr0, {0}
    7670:	74160000 	ldrvc	r0, [r6], #-0
    7674:	01000017 	tsteq	r0, r7, lsl r0
    7678:	963c051c 			; <UNDEFINED> instruction: 0x963c051c
    767c:	7b000007 	blvc	76a0 <_Min_Heap_Size+0x6ea0>
    7680:	6b00004e 	blvs	77c0 <_Min_Heap_Size+0x6fc0>
    7684:	1600004e 	strne	r0, [r0], -lr, asr #32
    7688:	000013c5 	andeq	r1, r0, r5, asr #7
    768c:	52051c01 	andpl	r1, r5, #256	; 0x100
    7690:	0000067c 	andeq	r0, r0, ip, ror r6
    7694:	00004eef 	andeq	r4, r0, pc, ror #29
    7698:	00004ee7 	andeq	r4, r0, r7, ror #29
    769c:	0000d916 	andeq	sp, r0, r6, lsl r9
    76a0:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    76a4:	0000b062 	andeq	fp, r0, r2, rrx
    76a8:	004f2f00 	subeq	r2, pc, r0, lsl #30
    76ac:	004f2700 	subeq	r2, pc, r0, lsl #14
    76b0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    76b4:	0000181b 	andeq	r1, r0, fp, lsl r8
    76b8:	1304c501 	movwne	ip, #17665	; 0x4501
    76bc:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    76c8:	004f6700 	subeq	r6, pc, r0, lsl #14
    76cc:	3fcc0100 	svccc	0x00cc0100
    76d0:	74160000 	ldrvc	r0, [r6], #-0
    76d4:	01000017 	tsteq	r0, r7, lsl r0
    76d8:	963804c5 	ldrtls	r0, [r8], -r5, asr #9
    76dc:	bb000007 	bllt	7700 <_Min_Heap_Size+0x6f00>
    76e0:	ab00004f 	blge	7824 <_Min_Heap_Size+0x7024>
    76e4:	1600004f 	strne	r0, [r0], -pc, asr #32
    76e8:	000013c5 	andeq	r1, r0, r5, asr #7
    76ec:	4804c501 	stmdami	r4, {r0, r8, sl, lr, pc}
    76f0:	00000682 	andeq	r0, r0, r2, lsl #13
    76f4:	0000502c 	andeq	r5, r0, ip, lsr #32
    76f8:	0000501e 	andeq	r5, r0, lr, lsl r0
    76fc:	0000d916 	andeq	sp, r0, r6, lsl r9
    7700:	04c50100 	strbeq	r0, [r5], #256	; 0x100
    7704:	0000b058 	andeq	fp, r0, r8, asr r0
    7708:	00509100 	subseq	r9, r0, r0, lsl #2
    770c:	00508700 	subseq	r8, r0, r0, lsl #14
    7710:	16a91600 	strtne	r1, [r9], r0, lsl #12
    7714:	c5010000 	strgt	r0, [r1, #-0]
    7718:	00c66704 	sbceq	r6, r6, r4, lsl #14
    771c:	50da0000 	sbcspl	r0, sl, r0
    7720:	50d60000 	sbcspl	r0, r6, r0
    7724:	f1170000 			; <UNDEFINED> instruction: 0xf1170000
    7728:	01000013 	tsteq	r0, r3, lsl r0
    772c:	820d04c7 	andhi	r0, sp, #-956301312	; 0xc7000000
    7730:	fa000006 	blx	7750 <_Min_Heap_Size+0x6f50>
    7734:	f8000050 			; <UNDEFINED> instruction: 0xf8000050
    7738:	17000050 	smlsdne	r0, r0, r0, r0
    773c:	0000145b 	andeq	r1, r0, fp, asr r4
    7740:	0d04c801 	stceq	8, cr12, [r4, #-4]
    7744:	000008cf 	andeq	r0, r0, pc, asr #17
    7748:	00005113 	andeq	r5, r0, r3, lsl r1
    774c:	0000510d 	andeq	r5, r0, sp, lsl #2
    7750:	0017be17 	andseq	fp, r7, r7, lsl lr
    7754:	04c90100 	strbeq	r0, [r9], #256	; 0x100
    7758:	0000c60c 	andeq	ip, r0, ip, lsl #12
    775c:	00514800 	subseq	r4, r1, r0, lsl #16
    7760:	00513e00 	subseq	r3, r1, r0, lsl #28
    7764:	00001a00 	andeq	r1, r0, r0, lsl #20
    7768:	45f20000 	ldrbmi	r0, [r2, #0]!
    776c:	00230000 	eoreq	r0, r3, r0
    7770:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    7774:	19000010 	stmdbne	r0, {r4}
    7778:	74025001 	strvc	r5, [r2], #-1
    777c:	51011900 	tstpl	r1, r0, lsl #18
    7780:	19200802 	stmdbne	r0!, {r1, fp}
    7784:	30015201 	andcc	r5, r1, r1, lsl #4
    7788:	02530119 	subseq	r0, r3, #1073741830	; 0x40000006
    778c:	02190077 	andseq	r0, r9, #119	; 0x77
    7790:	7602007d 			; <UNDEFINED> instruction: 0x7602007d
    7794:	27000000 	strcs	r0, [r0, -r0]
    7798:	0004e001 	andeq	lr, r4, r1
    779c:	046f0100 	strbteq	r0, [pc], #-256	; 77a4 <_Min_Heap_Size+0x6fa4>
    77a0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
    77a4:	0d440000 	stcleq	0, cr0, [r4, #-0]
    77a8:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
    77ac:	518a0800 	orrpl	r0, sl, r0, lsl #16
    77b0:	dd010000 	stcle	0, cr0, [r1, #-0]
    77b4:	16000040 	strne	r0, [r0], -r0, asr #32
    77b8:	00001774 	andeq	r1, r0, r4, ror r7
    77bc:	39046f01 	stmdbcc	r4, {r0, r8, r9, sl, fp, sp, lr}
    77c0:	00000796 	muleq	r0, r6, r7
    77c4:	000051de 	ldrdeq	r5, [r0], -lr
    77c8:	000051ce 	andeq	r5, r0, lr, asr #3
    77cc:	0013c516 	andseq	ip, r3, r6, lsl r5
    77d0:	046f0100 	strbteq	r0, [pc], #-256	; 77d8 <_Min_Heap_Size+0x6fd8>
    77d4:	00067c4f 	andeq	r7, r6, pc, asr #24
    77d8:	00525300 	subseq	r5, r2, r0, lsl #6
    77dc:	00524100 	subseq	r4, r2, r0, lsl #2
    77e0:	00d91600 	sbcseq	r1, r9, r0, lsl #12
    77e4:	6f010000 	svcvs	0x00010000
    77e8:	00b05f04 	adcseq	r5, r0, r4, lsl #30
    77ec:	52d10000 	sbcspl	r0, r1, #0
    77f0:	52c70000 	sbcpl	r0, r7, #0
    77f4:	a9160000 	ldmdbge	r6, {}	; <UNPREDICTABLE>
    77f8:	01000016 	tsteq	r0, r6, lsl r0
    77fc:	c66e046f 	strbtgt	r0, [lr], -pc, ror #8
    7800:	1a000000 	bne	7808 <_Min_Heap_Size+0x7008>
    7804:	16000053 			; <UNDEFINED> instruction: 0x16000053
    7808:	17000053 	smlsdne	r0, r3, r0, r0
    780c:	000013f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    7810:	13047101 	movwne	r7, #16641	; 0x4101
    7814:	0000067c 	andeq	r0, r0, ip, ror r6
    7818:	00005340 	andeq	r5, r0, r0, asr #6
    781c:	00005338 	andeq	r5, r0, r8, lsr r3
    7820:	00145b17 	andseq	r5, r4, r7, lsl fp
    7824:	04720100 	ldrbteq	r0, [r2], #-256	; 0xffffff00
    7828:	00096413 	andeq	r6, r9, r3, lsl r4
    782c:	00537e00 	subseq	r7, r3, r0, lsl #28
    7830:	00537600 	subseq	r7, r3, r0, lsl #12
    7834:	17be1700 	ldrne	r1, [lr, r0, lsl #14]!
    7838:	73010000 	movwvc	r0, #4096	; 0x1000
    783c:	00c60c04 	sbceq	r0, r6, r4, lsl #24
    7840:	53c20000 	bicpl	r0, r2, #0
    7844:	53b40000 			; <UNDEFINED> instruction: 0x53b40000
    7848:	741a0000 	ldrvc	r0, [sl], #-0
    784c:	f208000d 	vhadd.s8	d0, d8, d13
    7850:	18000045 	stmdane	r0, {r0, r2, r6}
    7854:	08000dca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, fp}
    7858:	00001078 	andeq	r1, r0, r8, ror r0
    785c:	000040b4 	strheq	r4, [r0], -r4	; <UNPREDICTABLE>
    7860:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    7864:	01190074 	tsteq	r9, r4, ror r0
    7868:	80080251 	andhi	r0, r8, r1, asr r2
    786c:	01520119 	cmpeq	r2, r9, lsl r1
    7870:	53011930 	movwpl	r1, #6448	; 0x1930
    7874:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
    7878:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    787c:	23000076 	movwcs	r0, #118	; 0x76
    7880:	08000df0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, fp}
    7884:	00001078 	andeq	r1, r0, r8, ror r0
    7888:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    788c:	01190074 	tsteq	r9, r4, ror r0
    7890:	40080251 	andmi	r0, r8, r1, asr r2
    7894:	01520119 	cmpeq	r2, r9, lsl r1
    7898:	53011930 	movwpl	r1, #6448	; 0x1930
    789c:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
    78a0:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    78a4:	00000076 	andeq	r0, r0, r6, ror r0
    78a8:	0cc8012a 	stfeqe	f0, [r8], {42}	; 0x2a
    78ac:	da010000 	ble	478b4 <_Min_Heap_Size+0x470b4>
    78b0:	00010d02 	andeq	r0, r1, r2, lsl #26
    78b4:	00000000 	andeq	r0, r0, r0
    78b8:	02000000 	andeq	r0, r0, #0
    78bc:	0801007d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6}
    78c0:	29000041 	stmdbcs	r0, {r0, r6}
    78c4:	00001774 	andeq	r1, r0, r4, ror r7
    78c8:	3402da01 	strcc	sp, [r2], #-2561	; 0xfffff5ff
    78cc:	00000796 	muleq	r0, r6, r7
    78d0:	2a005001 	bcs	1b8dc <_Min_Heap_Size+0x1b0dc>
    78d4:	000c9901 	andeq	r9, ip, r1, lsl #18
    78d8:	02cb0100 	sbceq	r0, fp, #0, 2
    78dc:	0000010d 	andeq	r0, r0, sp, lsl #2
    78e0:	00000000 	andeq	r0, r0, r0
    78e4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    78e8:	41330100 	teqmi	r3, r0, lsl #2
    78ec:	74290000 	strtvc	r0, [r9], #-0
    78f0:	01000017 	tsteq	r0, r7, lsl r0
    78f4:	963202cb 	ldrtls	r0, [r2], -fp, asr #5
    78f8:	01000007 	tsteq	r0, r7
    78fc:	01270050 	qsubeq	r0, r0, r7
    7900:	000014a1 	andeq	r1, r0, r1, lsr #9
    7904:	13029d01 	movwne	r9, #11521	; 0x2d01
    7908:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    7914:	00541a00 	subseq	r1, r4, r0, lsl #20
    7918:	41970100 	orrsmi	r0, r7, r0, lsl #2
    791c:	74160000 	ldrvc	r0, [r6], #-0
    7920:	01000017 	tsteq	r0, r7, lsl r0
    7924:	9637029d 			; <UNDEFINED> instruction: 0x9637029d
    7928:	4e000007 	cdpmi	0, 0, cr0, cr0, cr7, {0}
    792c:	46000054 			; <UNDEFINED> instruction: 0x46000054
    7930:	18000054 	stmdane	r0, {r2, r4, r6}
    7934:	00000000 	andeq	r0, r0, r0
    7938:	000045ab 	andeq	r4, r0, fp, lsr #11
    793c:	00004186 	andeq	r4, r0, r6, lsl #3
    7940:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7944:	002ca003 	eoreq	sl, ip, r3
    7948:	51011908 	tstpl	r1, r8, lsl #18
    794c:	02a60a03 	adceq	r0, r6, #12288	; 0x3000
    7950:	00002300 	andeq	r2, r0, r0, lsl #6
    7954:	40dd0000 	sbcsmi	r0, sp, r0
    7958:	01190000 	tsteq	r9, r0
    795c:	00740250 	rsbseq	r0, r4, r0, asr r2
    7960:	01270000 			; <UNDEFINED> instruction: 0x01270000
    7964:	0000167d 	andeq	r1, r0, sp, ror r6
    7968:	13024f01 	movwne	r4, #12033	; 0x2f01
    796c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    7978:	00548500 	subseq	r8, r4, r0, lsl #10
    797c:	42b10100 	adcsmi	r0, r1, #0, 2
    7980:	74160000 	ldrvc	r0, [r6], #-0
    7984:	01000017 	tsteq	r0, r7, lsl r0
    7988:	963f024f 	ldrtls	r0, [pc], -pc, asr #4
    798c:	b9000007 	stmdblt	r0, {r0, r1, r2}
    7990:	b1000054 	qaddlt	r0, r4, r0
    7994:	16000054 			; <UNDEFINED> instruction: 0x16000054
    7998:	00001f49 	andeq	r1, r0, r9, asr #30
    799c:	4e024f01 	cdpmi	15, 0, cr4, cr2, cr1, {0}
    79a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    79a4:	000054f6 	strdeq	r5, [r0], -r6
    79a8:	000054f0 	strdeq	r5, [r0], -r0
    79ac:	0014b116 	andseq	fp, r4, r6, lsl r1
    79b0:	024f0100 	subeq	r0, pc, #0, 2
    79b4:	0000c660 	andeq	ip, r0, r0, ror #12
    79b8:	00552c00 	subseq	r2, r5, r0, lsl #24
    79bc:	00552200 	subseq	r2, r5, r0, lsl #4
    79c0:	00001800 	andeq	r1, r0, r0, lsl #16
    79c4:	45ab0000 	strmi	r0, [fp, #0]!
    79c8:	42140000 	andsmi	r0, r4, #0
    79cc:	01190000 	tsteq	r9, r0
    79d0:	a0030550 	andge	r0, r3, r0, asr r5
    79d4:	1908002c 	stmdbne	r8, {r2, r3, r5}
    79d8:	0a035101 	beq	dbde4 <_Min_Heap_Size+0xdb5e4>
    79dc:	18000258 	stmdane	r0, {r3, r4, r6, r9}
    79e0:	00000000 	andeq	r0, r0, r0
    79e4:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    79e8:	00004228 	andeq	r4, r0, r8, lsr #4
    79ec:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    79f0:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    79f4:	00000000 	andeq	r0, r0, r0
    79f8:	000045ab 	andeq	r4, r0, fp, lsr #11
    79fc:	00004246 	andeq	r4, r0, r6, asr #4
    7a00:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7a04:	002ca003 	eoreq	sl, ip, r3
    7a08:	51011908 	tstpl	r1, r8, lsl #18
    7a0c:	025b0a03 	subseq	r0, fp, #12288	; 0x3000
    7a10:	00001800 	andeq	r1, r0, r0, lsl #16
    7a14:	45ab0000 	strmi	r0, [fp, #0]!
    7a18:	42640000 	rsbmi	r0, r4, #0
    7a1c:	01190000 	tsteq	r9, r0
    7a20:	a0030550 	andge	r0, r3, r0, asr r5
    7a24:	1908002c 	stmdbne	r8, {r2, r3, r5}
    7a28:	0a035101 	beq	dbe34 <_Min_Heap_Size+0xdb634>
    7a2c:	1800025c 	stmdane	r0, {r2, r3, r4, r6, r9}
    7a30:	00000000 	andeq	r0, r0, r0
    7a34:	000045ab 	andeq	r4, r0, fp, lsr #11
    7a38:	00004282 	andeq	r4, r0, r2, lsl #5
    7a3c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7a40:	002ca003 	eoreq	sl, ip, r3
    7a44:	51011908 	tstpl	r1, r8, lsl #18
    7a48:	025d0a03 	subseq	r0, sp, #12288	; 0x3000
    7a4c:	00001800 	andeq	r1, r0, r0, lsl #16
    7a50:	45ab0000 	strmi	r0, [fp, #0]!
    7a54:	42a00000 	adcmi	r0, r0, #0
    7a58:	01190000 	tsteq	r9, r0
    7a5c:	a0030550 	andge	r0, r3, r0, asr r5
    7a60:	1908002c 	stmdbne	r8, {r2, r3, r5}
    7a64:	0a035101 	beq	dbe70 <_Min_Heap_Size+0xdb670>
    7a68:	2300025e 	movwcs	r0, #606	; 0x25e
    7a6c:	00000000 	andeq	r0, r0, r0
    7a70:	00004108 	andeq	r4, r0, r8, lsl #2
    7a74:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    7a78:	00000074 	andeq	r0, r0, r4, ror r0
    7a7c:	19940127 	ldmibne	r4, {r0, r1, r2, r5, r8}
    7a80:	fd010000 	stc2	0, cr0, [r1, #-0]
    7a84:	3a011301 	bcc	4c690 <_Min_Heap_Size+0x4be90>
    7a88:	00000002 	andeq	r0, r0, r2
    7a8c:	00000000 	andeq	r0, r0, r0
    7a90:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    7a94:	01000055 	qaddeq	r0, r5, r0
    7a98:	00004398 	muleq	r0, r8, r3
    7a9c:	00177416 	andseq	r7, r7, r6, lsl r4
    7aa0:	01fd0100 	mvnseq	r0, r0, lsl #2
    7aa4:	00079634 	andeq	r9, r7, r4, lsr r6
    7aa8:	0055a200 	subseq	sl, r5, r0, lsl #4
    7aac:	00559a00 	subseq	r9, r5, r0, lsl #20
    7ab0:	14be1600 	ldrtne	r1, [lr], #1536	; 0x600
    7ab4:	fd010000 	stc2	0, cr0, [r1, #-0]
    7ab8:	00c64401 	sbceq	r4, r6, r1, lsl #8
    7abc:	55e30000 	strbpl	r0, [r3, #0]!
    7ac0:	55d90000 	ldrbpl	r0, [r9]
    7ac4:	00180000 	andseq	r0, r8, r0
    7ac8:	ab000000 	blge	7ad0 <_Min_Heap_Size+0x72d0>
    7acc:	19000045 	stmdbne	r0, {r0, r2, r6}
    7ad0:	19000043 	stmdbne	r0, {r0, r1, r6}
    7ad4:	03055001 	movweq	r5, #20481	; 0x5001
    7ad8:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}
    7adc:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7ae0:	0002060a 	andeq	r0, r2, sl, lsl #12
    7ae4:	00000018 	andeq	r0, r0, r8, lsl r0
    7ae8:	00069f00 	andeq	r9, r6, r0, lsl #30
    7aec:	00432d00 	subeq	r2, r3, r0, lsl #26
    7af0:	50011900 	andpl	r1, r1, r0, lsl #18
    7af4:	00007402 	andeq	r7, r0, r2, lsl #8
    7af8:	00000018 	andeq	r0, r0, r8, lsl r0
    7afc:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7b00:	00434b00 	subeq	r4, r3, r0, lsl #22
    7b04:	50011900 	andpl	r1, r1, r0, lsl #18
    7b08:	2ca00305 	stccs	3, cr0, [r0], #20
    7b0c:	01190800 	tsteq	r9, r0, lsl #16
    7b10:	090a0351 	stmdbeq	sl, {r0, r4, r6, r8, r9}
    7b14:	00180002 	andseq	r0, r8, r2
    7b18:	ab000000 	blge	7b20 <_Min_Heap_Size+0x7320>
    7b1c:	69000045 	stmdbvs	r0, {r0, r2, r6}
    7b20:	19000043 	stmdbne	r0, {r0, r1, r6}
    7b24:	03055001 	movweq	r5, #20481	; 0x5001
    7b28:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}
    7b2c:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7b30:	00020a0a 	andeq	r0, r2, sl, lsl #20
    7b34:	00000018 	andeq	r0, r0, r8, lsl r0
    7b38:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7b3c:	00438700 	subeq	r8, r3, r0, lsl #14
    7b40:	50011900 	andpl	r1, r1, r0, lsl #18
    7b44:	2ca00305 	stccs	3, cr0, [r0], #20
    7b48:	01190800 	tsteq	r9, r0, lsl #16
    7b4c:	0b0a0351 	bleq	288898 <_Min_Heap_Size+0x288098>
    7b50:	00230002 	eoreq	r0, r3, r2
    7b54:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7b58:	19000041 	stmdbne	r0, {r0, r6}
    7b5c:	74025001 	strvc	r5, [r2], #-1
    7b60:	27000000 	strcs	r0, [r0, -r0]
    7b64:	00148d01 	andseq	r8, r4, r1, lsl #26
    7b68:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    7b6c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    7b78:	56250000 	strtpl	r0, [r5], -r0
    7b7c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    7b80:	16000044 	strne	r0, [r0], -r4, asr #32
    7b84:	00001774 	andeq	r1, r0, r4, ror r7
    7b88:	3b01b301 	blcc	74794 <_Min_Heap_Size+0x73f94>
    7b8c:	00000796 	muleq	r0, r6, r7
    7b90:	00005659 	andeq	r5, r0, r9, asr r6
    7b94:	00005651 	andeq	r5, r0, r1, asr r6
    7b98:	00000018 	andeq	r0, r0, r8, lsl r0
    7b9c:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7ba0:	0043eb00 	subeq	lr, r3, r0, lsl #22
    7ba4:	50011900 	andpl	r1, r1, r0, lsl #18
    7ba8:	2ca00305 	stccs	3, cr0, [r0], #20
    7bac:	01190800 	tsteq	r9, r0, lsl #16
    7bb0:	bc0a0351 	stclt	3, cr0, [sl], {81}	; 0x51
    7bb4:	00180001 	andseq	r0, r8, r1
    7bb8:	9f000000 	svcls	0x00000000
    7bbc:	ff000006 			; <UNDEFINED> instruction: 0xff000006
    7bc0:	19000043 	stmdbne	r0, {r0, r1, r6}
    7bc4:	74025001 	strvc	r5, [r2], #-1
    7bc8:	00180000 	andseq	r0, r8, r0
    7bcc:	ab000000 	blge	7bd4 <_Min_Heap_Size+0x73d4>
    7bd0:	1d000045 	stcne	0, cr0, [r0, #-276]	; 0xfffffeec
    7bd4:	19000044 	stmdbne	r0, {r2, r6}
    7bd8:	03055001 	movweq	r5, #20481	; 0x5001
    7bdc:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}
    7be0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7be4:	0001bd0a 	andeq	fp, r1, sl, lsl #26
    7be8:	00000018 	andeq	r0, r0, r8, lsl r0
    7bec:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7bf0:	00443b00 	subeq	r3, r4, r0, lsl #22
    7bf4:	50011900 	andpl	r1, r1, r0, lsl #18
    7bf8:	2ca00305 	stccs	3, cr0, [r0], #20
    7bfc:	01190800 	tsteq	r9, r0, lsl #16
    7c00:	be0a0351 	mcrlt	3, 0, r0, cr10, cr1, {2}
    7c04:	00230001 	eoreq	r0, r3, r1
    7c08:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7c0c:	19000041 	stmdbne	r0, {r0, r6}
    7c10:	74025001 	strvc	r5, [r2], #-1
    7c14:	27000000 	strcs	r0, [r0, -r0]
    7c18:	000dd501 	andeq	sp, sp, r1, lsl #10
    7c1c:	01650100 	cmneq	r5, r0, lsl #2
    7c20:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
    7c24:	0c180000 	ldceq	0, cr0, [r8], {-0}
    7c28:	0d440800 	stcleq	8, cr0, [r4, #-0]
    7c2c:	56900800 	ldrpl	r0, [r0], r0, lsl #16
    7c30:	3c010000 	stccc	0, cr0, [r1], {-0}
    7c34:	16000045 	strne	r0, [r0], -r5, asr #32
    7c38:	00001774 	andeq	r1, r0, r4, ror r7
    7c3c:	35016501 	strcc	r6, [r1, #-1281]	; 0xfffffaff
    7c40:	00000796 	muleq	r0, r6, r7
    7c44:	000056c8 	andeq	r5, r0, r8, asr #13
    7c48:	000056bc 			; <UNDEFINED> instruction: 0x000056bc
    7c4c:	000c5218 	andeq	r5, ip, r8, lsl r2
    7c50:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7c54:	00449f00 	subeq	r9, r4, r0, lsl #30
    7c58:	50011900 	andpl	r1, r1, r0, lsl #18
    7c5c:	2ca00305 	stccs	3, cr0, [r0], #20
    7c60:	01190800 	tsteq	r9, r0, lsl #16
    7c64:	730a0351 	movwvc	r0, #41809	; 0xa351
    7c68:	9a180001 	bls	607c74 <_Min_Heap_Size+0x607474>
    7c6c:	9f08000c 	svcls	0x0008000c
    7c70:	b3000006 	movwlt	r0, #6
    7c74:	19000044 	stmdbne	r0, {r2, r6}
    7c78:	74025001 	strvc	r5, [r2], #-1
    7c7c:	d4180000 	ldrle	r0, [r8], #-0
    7c80:	ab08000c 	blge	207cb8 <_Min_Heap_Size+0x2074b8>
    7c84:	d1000045 	tstle	r0, r5, asr #32
    7c88:	19000044 	stmdbne	r0, {r2, r6}
    7c8c:	03055001 	movweq	r5, #20481	; 0x5001
    7c90:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}
    7c94:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7c98:	0001740a 	andeq	r7, r1, sl, lsl #8
    7c9c:	000d1018 	andeq	r1, sp, r8, lsl r0
    7ca0:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7ca4:	0044ef00 	subeq	lr, r4, r0, lsl #30
    7ca8:	50011900 	andpl	r1, r1, r0, lsl #18
    7cac:	2ca00305 	stccs	3, cr0, [r0], #20
    7cb0:	01190800 	tsteq	r9, r0, lsl #16
    7cb4:	780a0351 	stmdavc	sl, {r0, r4, r6, r8, r9}
    7cb8:	1c180001 	ldcne	0, cr0, [r8], {1}
    7cbc:	ab08000d 	blge	207cf8 <_Min_Heap_Size+0x2074f8>
    7cc0:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    7cc4:	19000045 	stmdbne	r0, {r0, r2, r6}
    7cc8:	03055001 	movweq	r5, #20481	; 0x5001
    7ccc:	08002ca0 	stmdaeq	r0, {r5, r7, sl, fp, sp}
    7cd0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7cd4:	00017a0a 	andeq	r7, r1, sl, lsl #20
    7cd8:	000d2818 	andeq	r2, sp, r8, lsl r8
    7cdc:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7ce0:	00452b00 	subeq	r2, r5, r0, lsl #22
    7ce4:	50011900 	andpl	r1, r1, r0, lsl #18
    7ce8:	2ca00305 	stccs	3, cr0, [r0], #20
    7cec:	01190800 	tsteq	r9, r0, lsl #16
    7cf0:	7b0a0351 	blvc	288a3c <_Min_Heap_Size+0x28823c>
    7cf4:	34230001 	strtcc	r0, [r3], #-1
    7cf8:	0808000d 	stmdaeq	r8, {r0, r2, r3}
    7cfc:	19000041 	stmdbne	r0, {r0, r6}
    7d00:	74025001 	strvc	r5, [r2], #-1
    7d04:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    7d08:	00001543 	andeq	r1, r0, r3, asr #10
    7d0c:	1f020f02 	svcne	0x00020f02
    7d10:	0000c601 	andeq	ip, r0, r1, lsl #12
    7d14:	45770300 	ldrbmi	r0, [r7, #-768]!	; 0xfffffd00
    7d18:	8b2f0000 	blhi	bc7d20 <_Min_Heap_Size+0xbc7520>
    7d1c:	02000021 	andeq	r0, r0, #33	; 0x21
    7d20:	c631020f 	ldrtgt	r0, [r1], -pc, lsl #4
    7d24:	2f000000 	svccs	0x00000000
    7d28:	0000048c 	andeq	r0, r0, ip, lsl #9
    7d2c:	4b020f02 	blmi	8b93c <_Min_Heap_Size+0x8b13c>
    7d30:	00004577 	andeq	r4, r0, r7, ror r5
    7d34:	0019a130 	andseq	sl, r9, r0, lsr r1
    7d38:	02110200 	andseq	r0, r1, #0, 4
    7d3c:	0000c60d 	andeq	ip, r0, sp, lsl #12
    7d40:	04110000 	ldreq	r0, [r1], #-0
    7d44:	000000d2 	ldrdeq	r0, [r0], -r2
    7d48:	0016d42e 	andseq	sp, r6, lr, lsr #8
    7d4c:	01dc0200 	bicseq	r0, ip, r0, lsl #4
    7d50:	00c6011f 	sbceq	r0, r6, pc, lsl r1
    7d54:	ab030000 	blge	c7d5c <_Min_Heap_Size+0xc755c>
    7d58:	2f000045 	svccs	0x00000045
    7d5c:	0000048c 	andeq	r0, r0, ip, lsl #9
    7d60:	3b01dc02 	blcc	7ed70 <_Min_Heap_Size+0x7e570>
    7d64:	00004577 	andeq	r4, r0, r7, ror r5
    7d68:	0019a130 	andseq	sl, r9, r0, lsr r1
    7d6c:	01de0200 	bicseq	r0, lr, r0, lsl #4
    7d70:	0000c60e 	andeq	ip, r0, lr, lsl #12
    7d74:	01310000 	teqeq	r1, r0
    7d78:	00080c01 	andeq	r0, r8, r1, lsl #24
    7d7c:	00080c00 	andeq	r0, r8, r0, lsl #24
    7d80:	01e60a00 	mvneq	r0, r0, lsl #20
    7d84:	01013108 	tsteq	r1, r8, lsl #2
    7d88:	000012eb 	andeq	r1, r0, fp, ror #5
    7d8c:	000012eb 	andeq	r1, r0, fp, ror #5
    7d90:	0a04ea0b 	beq	1425c4 <_Min_Heap_Size+0x141dc4>
    7d94:	7a010131 	bvc	48260 <_Min_Heap_Size+0x47a60>
    7d98:	7a000017 	bvc	7dfc <_Min_Heap_Size+0x75fc>
    7d9c:	0b000017 	bleq	7e00 <_Min_Heap_Size+0x7600>
    7da0:	320a04eb 	andcc	r0, sl, #-352321536	; 0xeb000000
    7da4:	17320101 	ldrne	r0, [r2, -r1, lsl #2]!
    7da8:	17320000 	ldrne	r0, [r2, -r0]!
    7dac:	01310000 	teqeq	r1, r0
    7db0:	00142301 	andseq	r2, r4, r1, lsl #6
    7db4:	00142300 	andseq	r2, r4, r0, lsl #6
    7db8:	02970800 	addseq	r0, r7, #0, 16
    7dbc:	01013313 	tsteq	r1, r3, lsl r3
    7dc0:	00001618 	andeq	r1, r0, r8, lsl r6
    7dc4:	00001618 	andeq	r1, r0, r8, lsl r6
    7dc8:	310aea0c 	tstcc	sl, ip, lsl #20
    7dcc:	15850101 	strne	r0, [r5, #257]	; 0x101
    7dd0:	15850000 	strne	r0, [r5]
    7dd4:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    7dd8:	01311302 	teqeq	r1, r2, lsl #6
    7ddc:	00134901 	andseq	r4, r3, r1, lsl #18
    7de0:	00134900 	andseq	r4, r3, r0, lsl #18
    7de4:	02990800 	addseq	r0, r9, #0, 16
    7de8:	01013113 	tsteq	r1, r3, lsl r1
    7dec:	000018da 	ldrdeq	r1, [r0], -sl
    7df0:	000018da 	ldrdeq	r1, [r0], -sl
    7df4:	1602a908 	strne	sl, [r2], -r8, lsl #18
    7df8:	000e7f00 	andeq	r7, lr, r0, lsl #30
    7dfc:	c1000200 	mrsgt	r0, R8_usr
    7e00:	0400000d 	streq	r0, [r0], #-13
    7e04:	00013101 	andeq	r3, r1, r1, lsl #2
    7e08:	1b0b0c00 	blne	2cae10 <_Min_Heap_Size+0x2ca610>
    7e0c:	004b0000 	subeq	r0, fp, r0
    7e10:	03d80000 	bicseq	r0, r8, #0
	...
    7e1c:	59a00000 	stmibpl	r0!, {}	; <UNPREDICTABLE>
    7e20:	01020000 	mrseq	r0, (UNDEF: 2)
    7e24:	0000e006 	andeq	lr, r0, r6
    7e28:	00ad0300 	adceq	r0, sp, r0, lsl #6
    7e2c:	2b020000 	blcs	87e34 <_Min_Heap_Size+0x87634>
    7e30:	00003c18 	andeq	r3, r0, r8, lsl ip
    7e34:	08010200 	stmdaeq	r1, {r9}
    7e38:	000000de 	ldrdeq	r0, [r0], -lr
    7e3c:	27050202 	strcs	r0, [r5, -r2, lsl #4]
    7e40:	03000001 	movweq	r0, #1
    7e44:	000009ec 	andeq	r0, r0, ip, ror #19
    7e48:	56193902 	ldrpl	r3, [r9], -r2, lsl #18
    7e4c:	02000000 	andeq	r0, r0, #0
    7e50:	000e0702 	andeq	r0, lr, r2, lsl #14
    7e54:	04020000 	streq	r0, [r2], #-0
    7e58:	00000505 	andeq	r0, r0, r5, lsl #10
    7e5c:	00400300 	subeq	r0, r0, r0, lsl #6
    7e60:	4f020000 	svcmi	0x00020000
    7e64:	00007019 	andeq	r7, r0, r9, lsl r0
    7e68:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7e6c:	0000009b 	muleq	r0, fp, r0
    7e70:	00050802 	andeq	r0, r5, r2, lsl #16
    7e74:	03000000 	movweq	r0, #0
    7e78:	00001727 	andeq	r1, r0, r7, lsr #14
    7e7c:	8a196902 	bhi	66228c <_Min_Heap_Size+0x661a8c>
    7e80:	02000000 	andeq	r0, r0, #0
    7e84:	00960708 	addseq	r0, r6, r8, lsl #14
    7e88:	04040000 	streq	r0, [r4], #-0
    7e8c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    7e90:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7e94:	000000a0 	andeq	r0, r0, r0, lsr #1
    7e98:	0000af03 	andeq	sl, r0, r3, lsl #30
    7e9c:	13180300 	tstne	r8, #0, 6
    7ea0:	00000030 	andeq	r0, r0, r0, lsr r0
    7ea4:	00009f05 	andeq	r9, r0, r5, lsl #30
    7ea8:	09ee0300 	stmibeq	lr!, {r8, r9}^
    7eac:	24030000 	strcs	r0, [r3], #-0
    7eb0:	00004a14 	andeq	r4, r0, r4, lsl sl
    7eb4:	00420300 	subeq	r0, r2, r0, lsl #6
    7eb8:	30030000 	andcc	r0, r3, r0
    7ebc:	00006414 	andeq	r6, r0, r4, lsl r4
    7ec0:	00bc0600 	adcseq	r0, ip, r0, lsl #12
    7ec4:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    7ec8:	03000017 	movweq	r0, #23
    7ecc:	007e143c 	rsbseq	r1, lr, ip, lsr r4
    7ed0:	bc070000 	stclt	0, cr0, [r7], {-0}
    7ed4:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    7ed8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7edc:	00000098 	muleq	r0, r8, r0
    7ee0:	73090001 	movwvc	r0, #36865	; 0x9001
    7ee4:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    7ee8:	00bc1139 	adcseq	r1, ip, r9, lsr r1
    7eec:	01010000 	mrseq	r0, (UNDEF: 1)
    7ef0:	0000ab07 	andeq	sl, r0, r7, lsl #22
    7ef4:	00010700 	andeq	r0, r1, r0, lsl #14
    7ef8:	00980800 	addseq	r0, r8, r0, lsl #16
    7efc:	000f0000 	andeq	r0, pc, r0
    7f00:	0000f705 	andeq	pc, r0, r5, lsl #14
    7f04:	1a330900 	bne	cca30c <_Min_Heap_Size+0xcc9b0c>
    7f08:	3b040000 	blcc	107f10 <_Min_Heap_Size+0x107710>
    7f0c:	00010717 	andeq	r0, r1, r7, lsl r7
    7f10:	07010100 	streq	r0, [r1, -r0, lsl #2]
    7f14:	000000ab 	andeq	r0, r0, fp, lsr #1
    7f18:	0000012a 	andeq	r0, r0, sl, lsr #2
    7f1c:	00009808 	andeq	r9, r0, r8, lsl #16
    7f20:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    7f24:	0000011a 	andeq	r0, r0, sl, lsl r1
    7f28:	0019cf09 	andseq	ip, r9, r9, lsl #30
    7f2c:	173c0400 	ldrne	r0, [ip, -r0, lsl #8]!
    7f30:	0000012a 	andeq	r0, r0, sl, lsr #2
    7f34:	1c0a0101 	stfnes	f0, [sl], {1}
    7f38:	09016805 	stmdbeq	r1, {r0, r2, fp, sp, lr}
    7f3c:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    7f40:	5243410b 	subpl	r4, r3, #-1073741822	; 0xc0000002
    7f44:	016a0500 	cmneq	sl, r0, lsl #10
    7f48:	0000c811 	andeq	ip, r0, r1, lsl r8
    7f4c:	00230200 	eoreq	r0, r3, r0, lsl #4
    7f50:	0019fb0c 	andseq	pc, r9, ip, lsl #22
    7f54:	016b0500 	cmneq	fp, r0, lsl #10
    7f58:	0000c811 	andeq	ip, r0, r1, lsl r8
    7f5c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7f60:	0019f80c 	andseq	pc, r9, ip, lsl #16
    7f64:	016c0500 	cmneq	ip, r0, lsl #10
    7f68:	0000c811 	andeq	ip, r0, r1, lsl r8
    7f6c:	08230200 	stmdaeq	r3!, {r9}
    7f70:	0052530b 	subseq	r5, r2, fp, lsl #6
    7f74:	11016d05 	tstne	r1, r5, lsl #26
    7f78:	000000c8 	andeq	r0, r0, r8, asr #1
    7f7c:	0b0c2302 	bleq	310b8c <_Min_Heap_Size+0x31038c>
    7f80:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    7f84:	c811016e 	ldmdagt	r1, {r1, r2, r3, r5, r6, r8}
    7f88:	02000000 	andeq	r0, r0, #0
    7f8c:	dd0c1023 	stcle	0, cr1, [ip, #-140]	; 0xffffff74
    7f90:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    7f94:	c811016f 	ldmdagt	r1, {r0, r1, r2, r3, r5, r6, r8}
    7f98:	02000000 	andeq	r0, r0, #0
    7f9c:	0f0c1423 	svceq	0x000c1423
    7fa0:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    7fa4:	c8110170 	ldmdagt	r1, {r4, r5, r6, r8}
    7fa8:	02000000 	andeq	r0, r0, #0
    7fac:	0d001823 	stceq	8, cr1, [r0, #-140]	; 0xffffff74
    7fb0:	000019e3 	andeq	r1, r0, r3, ror #19
    7fb4:	03017105 	movweq	r7, #4357	; 0x1105
    7fb8:	0000013d 	andeq	r0, r0, sp, lsr r1
    7fbc:	ae05280a 	cdpge	8, 0, cr2, cr5, cr10, {0}
    7fc0:	025e0901 	subseq	r0, lr, #16384	; 0x4000
    7fc4:	540c0000 	strpl	r0, [ip], #-0
    7fc8:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    7fcc:	c81101b0 	ldmdagt	r1, {r4, r5, r7, r8}
    7fd0:	02000000 	andeq	r0, r0, #0
    7fd4:	660c0023 	strvs	r0, [ip], -r3, lsr #32
    7fd8:	05000010 	streq	r0, [r0, #-16]
    7fdc:	c81101b1 	ldmdagt	r1, {r0, r4, r5, r7, r8}
    7fe0:	02000000 	andeq	r0, r0, #0
    7fe4:	e40c0423 	str	r0, [ip], #-1059	; 0xfffffbdd
    7fe8:	0500000e 	streq	r0, [r0, #-14]
    7fec:	c81101b2 	ldmdagt	r1, {r1, r4, r5, r7, r8}
    7ff0:	02000000 	andeq	r0, r0, #0
    7ff4:	2e0c0823 	cdpcs	8, 0, cr0, cr12, cr3, {1}
    7ff8:	0500000f 	streq	r0, [r0, #-15]
    7ffc:	c81101b3 	ldmdagt	r1, {r0, r1, r4, r5, r7, r8}
    8000:	02000000 	andeq	r0, r0, #0
    8004:	490b0c23 	stmdbmi	fp, {r0, r1, r5, sl, fp}
    8008:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    800c:	c81101b4 	ldmdagt	r1, {r2, r4, r5, r7, r8}
    8010:	02000000 	andeq	r0, r0, #0
    8014:	4f0b1023 	svcmi	0x000b1023
    8018:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    801c:	c81101b5 	ldmdagt	r1, {r0, r2, r4, r5, r7, r8}
    8020:	02000000 	andeq	r0, r0, #0
    8024:	070c1423 	streq	r1, [ip, -r3, lsr #8]
    8028:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    802c:	c81101b6 	ldmdagt	r1, {r1, r2, r4, r5, r7, r8}
    8030:	02000000 	andeq	r0, r0, #0
    8034:	d20c1823 	andle	r1, ip, #2293760	; 0x230000
    8038:	0500000e 	streq	r0, [r0, #-14]
    803c:	c81101b7 	ldmdagt	r1, {r0, r1, r2, r4, r5, r7, r8}
    8040:	02000000 	andeq	r0, r0, #0
    8044:	410b1c23 	tstmi	fp, r3, lsr #24
    8048:	05005246 	streq	r5, [r0, #-582]	; 0xfffffdba
    804c:	6e1101b8 	mrcvs	1, 0, r0, cr1, cr8, {5}
    8050:	02000002 	andeq	r0, r0, #2
    8054:	07002023 	streq	r2, [r0, -r3, lsr #32]
    8058:	000000c8 	andeq	r0, r0, r8, asr #1
    805c:	0000026e 	andeq	r0, r0, lr, ror #4
    8060:	00009808 	andeq	r9, r0, r8, lsl #16
    8064:	06000100 	streq	r0, [r0], -r0, lsl #2
    8068:	0000025e 	andeq	r0, r0, lr, asr r2
    806c:	00110c0d 	andseq	r0, r1, sp, lsl #24
    8070:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    8074:	0001c303 	andeq	ip, r1, r3, lsl #6
    8078:	05080a00 	streq	r0, [r8, #-2560]	; 0xfffff600
    807c:	aa0901ea 	bge	24882c <_Min_Heap_Size+0x24802c>
    8080:	0b000002 	bleq	8090 <_Min_Heap_Size+0x7890>
    8084:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    8088:	c81101ec 	ldmdagt	r1, {r2, r3, r5, r6, r7, r8}
    808c:	02000000 	andeq	r0, r0, #0
    8090:	430b0023 	movwmi	r0, #45091	; 0xb023
    8094:	05005253 	streq	r5, [r0, #-595]	; 0xfffffdad
    8098:	c81101ed 	ldmdagt	r1, {r0, r2, r3, r5, r6, r7, r8}
    809c:	02000000 	andeq	r0, r0, #0
    80a0:	0d000423 	cfstrseq	mvf0, [r0, #-140]	; 0xffffff74
    80a4:	00000571 	andeq	r0, r0, r1, ror r5
    80a8:	0301ee05 	movweq	lr, #7685	; 0x1e05
    80ac:	00000280 	andeq	r0, r0, r0, lsl #5
    80b0:	f405880a 	vst2.8	{d8-d9}, [r5], sl
    80b4:	04a30901 	strteq	r0, [r3], #2305	; 0x901
    80b8:	430b0000 	movwmi	r0, #45056	; 0xb000
    80bc:	f6050052 			; <UNDEFINED> instruction: 0xf6050052
    80c0:	00c81101 	sbceq	r1, r8, r1, lsl #2
    80c4:	23020000 	movwcs	r0, #8192	; 0x2000
    80c8:	06490c00 	strbeq	r0, [r9], -r0, lsl #24
    80cc:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    80d0:	00c81101 	sbceq	r1, r8, r1, lsl #2
    80d4:	23020000 	movwcs	r0, #8192	; 0x2000
    80d8:	064c0c04 	strbeq	r0, [ip], -r4, lsl #24
    80dc:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    80e0:	00c81101 	sbceq	r1, r8, r1, lsl #2
    80e4:	23020000 	movwcs	r0, #8192	; 0x2000
    80e8:	49430b08 	stmdbmi	r3, {r3, r8, r9, fp}^
    80ec:	f9050052 			; <UNDEFINED> instruction: 0xf9050052
    80f0:	00c81101 	sbceq	r1, r8, r1, lsl #2
    80f4:	23020000 	movwcs	r0, #8192	; 0x2000
    80f8:	052d0c0c 	streq	r0, [sp, #-3084]!	; 0xfffff3f4
    80fc:	fa050000 	blx	148104 <_Min_Heap_Size+0x147904>
    8100:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8104:	23020000 	movwcs	r0, #8192	; 0x2000
    8108:	0a0e0c10 	beq	38b150 <_Min_Heap_Size+0x38a950>
    810c:	fb050000 	blx	148116 <_Min_Heap_Size+0x147916>
    8110:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8114:	23020000 	movwcs	r0, #8192	; 0x2000
    8118:	096c0c14 	stmdbeq	ip!, {r2, r4, sl, fp}^
    811c:	fc050000 	stc2	0, cr0, [r5], {-0}
    8120:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8124:	23020000 	movwcs	r0, #8192	; 0x2000
    8128:	08b20c18 	ldmeq	r2!, {r3, r4, sl, fp}
    812c:	fd050000 	stc2	0, cr0, [r5, #-0]
    8130:	00bc1101 	adcseq	r1, ip, r1, lsl #2
    8134:	23020000 	movwcs	r0, #8192	; 0x2000
    8138:	088f0c1c 	stmeq	pc, {r2, r3, r4, sl, fp}	; <UNPREDICTABLE>
    813c:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    8140:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8144:	23020000 	movwcs	r0, #8192	; 0x2000
    8148:	05c00c20 	strbeq	r0, [r0, #3104]	; 0xc20
    814c:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    8150:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8154:	23020000 	movwcs	r0, #8192	; 0x2000
    8158:	08bc0c24 	ldmeq	ip!, {r2, r5, sl, fp}
    815c:	00050000 	andeq	r0, r5, r0
    8160:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    8164:	23020000 	movwcs	r0, #8192	; 0x2000
    8168:	0b510c28 	bleq	144b210 <_Min_Heap_Size+0x144aa10>
    816c:	01050000 	mrseq	r0, (UNDEF: 5)
    8170:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8174:	23020000 	movwcs	r0, #8192	; 0x2000
    8178:	0a7e0c30 	beq	1f8b240 <_Min_Heap_Size+0x1f8aa40>
    817c:	02050000 	andeq	r0, r5, #0
    8180:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8184:	23020000 	movwcs	r0, #8192	; 0x2000
    8188:	082a0c34 	stmdaeq	sl!, {r2, r4, r5, sl, fp}
    818c:	03050000 	movweq	r0, #20480	; 0x5000
    8190:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8194:	23020000 	movwcs	r0, #8192	; 0x2000
    8198:	08c60c38 	stmiaeq	r6, {r3, r4, r5, sl, fp}^
    819c:	04050000 	streq	r0, [r5], #-0
    81a0:	00bc1102 	adcseq	r1, ip, r2, lsl #2
    81a4:	23020000 	movwcs	r0, #8192	; 0x2000
    81a8:	09a70c3c 	stmibeq	r7!, {r2, r3, r4, r5, sl, fp}
    81ac:	05050000 	streq	r0, [r5, #-0]
    81b0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81b4:	23020000 	movwcs	r0, #8192	; 0x2000
    81b8:	09640c40 	stmdbeq	r4!, {r6, sl, fp}^
    81bc:	06050000 	streq	r0, [r5], -r0
    81c0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81c4:	23020000 	movwcs	r0, #8192	; 0x2000
    81c8:	08d00c44 	ldmeq	r0, {r2, r6, sl, fp}^
    81cc:	07050000 	streq	r0, [r5, -r0]
    81d0:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    81d4:	23020000 	movwcs	r0, #8192	; 0x2000
    81d8:	04f20c48 	ldrbteq	r0, [r2], #3144	; 0xc48
    81dc:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    81e0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81e4:	23020000 	movwcs	r0, #8192	; 0x2000
    81e8:	08640c50 	stmdaeq	r4!, {r4, r6, sl, fp}^
    81ec:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    81f0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81f4:	23020000 	movwcs	r0, #8192	; 0x2000
    81f8:	09320c54 	ldmdbeq	r2!, {r2, r4, r6, sl, fp}
    81fc:	0a050000 	beq	148204 <_Min_Heap_Size+0x147a04>
    8200:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8204:	23020000 	movwcs	r0, #8192	; 0x2000
    8208:	08da0c58 	ldmeq	sl, {r3, r4, r6, sl, fp}^
    820c:	0b050000 	bleq	148214 <_Min_Heap_Size+0x147a14>
    8210:	00bc1102 	adcseq	r1, ip, r2, lsl #2
    8214:	23020000 	movwcs	r0, #8192	; 0x2000
    8218:	04030c5c 	streq	r0, [r3], #-3164	; 0xfffff3a4
    821c:	0c050000 	stceq	0, cr0, [r5], {-0}
    8220:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8224:	23020000 	movwcs	r0, #8192	; 0x2000
    8228:	07850c60 	streq	r0, [r5, r0, ror #24]
    822c:	0d050000 	stceq	0, cr0, [r5, #-0]
    8230:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8234:	23020000 	movwcs	r0, #8192	; 0x2000
    8238:	08e40c64 	stmiaeq	r4!, {r2, r5, r6, sl, fp}^
    823c:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    8240:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    8244:	23020000 	movwcs	r0, #8192	; 0x2000
    8248:	0aed0c68 	beq	ffb4b3f0 <_estack+0xdfb4a1b8>
    824c:	0f050000 	svceq	0x00050000
    8250:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8254:	23020000 	movwcs	r0, #8192	; 0x2000
    8258:	53430b70 	movtpl	r0, #15216	; 0x3b70
    825c:	10050052 	andne	r0, r5, r2, asr r0
    8260:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8264:	23020000 	movwcs	r0, #8192	; 0x2000
    8268:	08ee0c74 	stmiaeq	lr!, {r2, r4, r5, r6, sl, fp}^
    826c:	11050000 	mrsne	r0, (UNDEF: 5)
    8270:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    8274:	23020000 	movwcs	r0, #8192	; 0x2000
    8278:	0abc0c78 	beq	fef0b460 <_estack+0xdef0a228>
    827c:	12050000 	andne	r0, r5, #0
    8280:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8284:	23030000 	movwcs	r0, #12288	; 0x3000
    8288:	180c0180 	stmdane	ip, {r7, r8}
    828c:	05000007 	streq	r0, [r0, #-7]
    8290:	c8110213 	ldmdagt	r1, {r0, r1, r4, r9}
    8294:	03000000 	movweq	r0, #0
    8298:	00018423 	andeq	r8, r1, r3, lsr #8
    829c:	0005940d 	andeq	r9, r5, sp, lsl #8
    82a0:	02140500 	andseq	r0, r4, #0, 10
    82a4:	0002b703 	andeq	fp, r2, r3, lsl #14
    82a8:	01070e00 	tsteq	r7, r0, lsl #28
    82ac:	0000003c 	andeq	r0, r0, ip, lsr r0
    82b0:	cb01b906 	blgt	766d0 <_Min_Heap_Size+0x75ed0>
    82b4:	0f000004 	svceq	0x00000004
    82b8:	000006cc 	andeq	r0, r0, ip, asr #13
    82bc:	45531000 	ldrbmi	r1, [r3, #-0]
    82c0:	00010054 	andeq	r0, r1, r4, asr r0
    82c4:	00133e03 	andseq	r3, r3, r3, lsl #28
    82c8:	03bc0600 			; <UNDEFINED> instruction: 0x03bc0600
    82cc:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    82d0:	3c01070e 	stccc	7, cr0, [r1], {14}
    82d4:	06000000 	streq	r0, [r0], -r0
    82d8:	04f201bf 	ldrbteq	r0, [r2], #447	; 0x1bf
    82dc:	070f0000 	streq	r0, [pc, -r0]
    82e0:	0000001a 	andeq	r0, r0, sl, lsl r0
    82e4:	0019f10f 	andseq	pc, r9, pc, lsl #2
    82e8:	02000100 	andeq	r0, r0, #0, 2
    82ec:	010f0408 	tsteq	pc, r8, lsl #8
    82f0:	070e0000 	streq	r0, [lr, -r0]
    82f4:	00003c01 	andeq	r3, r0, r1, lsl #24
    82f8:	01270700 			; <UNDEFINED> instruction: 0x01270700
    82fc:	00000520 	andeq	r0, r0, r0, lsr #10
    8300:	0006f60f 	andeq	pc, r6, pc, lsl #12
    8304:	9d0f0000 	stcls	0, cr0, [pc, #-0]	; 830c <_Min_Heap_Size+0x7b0c>
    8308:	01000009 	tsteq	r0, r9
    830c:	000b860f 	andeq	r8, fp, pc, lsl #12
    8310:	d70f0200 	strle	r0, [pc, -r0, lsl #4]
    8314:	03000006 	movweq	r0, #6
    8318:	15730300 	ldrbne	r0, [r3, #-768]!	; 0xfffffd00
    831c:	2c070000 	stccs	0, cr0, [r7], {-0}
    8320:	0004f903 	andeq	pc, r4, r3, lsl #18
    8324:	08181100 	ldmdaeq	r8, {r8, ip}
    8328:	0590092d 	ldreq	r0, [r0, #2349]	; 0x92d
    832c:	5e120000 	cdppl	0, 1, cr0, cr2, cr0, {0}
    8330:	08000004 	stmdaeq	r0, {r2}
    8334:	00bc0c2f 	adcseq	r0, ip, pc, lsr #24
    8338:	23020000 	movwcs	r0, #8192	; 0x2000
    833c:	093c1200 	ldmdbeq	ip!, {r9, ip}
    8340:	32080000 	andcc	r0, r8, #0
    8344:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8348:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    834c:	00046712 	andeq	r6, r4, r2, lsl r7
    8350:	0c350800 	ldceq	8, cr0, [r5], #-0
    8354:	000000bc 	strheq	r0, [r0], -ip
    8358:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    835c:	0000046c 	andeq	r0, r0, ip, ror #8
    8360:	bc0c3808 	stclt	8, cr3, [ip], {8}
    8364:	02000000 	andeq	r0, r0, #0
    8368:	71120c23 	tstvc	r2, r3, lsr #24
    836c:	08000004 	stmdaeq	r0, {r2}
    8370:	00bc0c3c 	adcseq	r0, ip, ip, lsr ip
    8374:	23020000 	movwcs	r0, #8192	; 0x2000
    8378:	04761210 	ldrbteq	r1, [r6], #-528	; 0xfffffdf0
    837c:	3f080000 	svccc	0x00080000
    8380:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8384:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    8388:	0b340300 	bleq	d08f90 <_Min_Heap_Size+0xd08790>
    838c:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    8390:	00052c02 	andeq	r2, r5, r2, lsl #24
    8394:	09301100 	ldmdbeq	r0!, {r8, ip}
    8398:	060f0931 			; <UNDEFINED> instruction: 0x060f0931
    839c:	51120000 	tstpl	r2, r0
    83a0:	09000007 	stmdbeq	r0, {r0, r1, r2}
    83a4:	00bc0c33 	adcseq	r0, ip, r3, lsr ip
    83a8:	23020000 	movwcs	r0, #8192	; 0x2000
    83ac:	06b51200 	ldrteq	r1, [r5], r0, lsl #4
    83b0:	36090000 	strcc	r0, [r9], -r0
    83b4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    83b8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    83bc:	0004ad12 	andeq	sl, r4, r2, lsl sp
    83c0:	0c390900 			; <UNDEFINED> instruction: 0x0c390900
    83c4:	000000bc 	strheq	r0, [r0], -ip
    83c8:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    83cc:	00000608 	andeq	r0, r0, r8, lsl #12
    83d0:	bc0c3c09 	stclt	12, cr3, [ip], {9}
    83d4:	02000000 	andeq	r0, r0, #0
    83d8:	27120c23 	ldrcs	r0, [r2, -r3, lsr #24]
    83dc:	09000006 	stmdbeq	r0, {r1, r2}
    83e0:	00bc0c3f 	adcseq	r0, ip, pc, lsr ip
    83e4:	23020000 	movwcs	r0, #8192	; 0x2000
    83e8:	05d31210 	ldrbeq	r1, [r3, #528]	; 0x210
    83ec:	42090000 	andmi	r0, r9, #0
    83f0:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    83f4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    83f8:	4c4c5013 	mcrrmi	0, 1, r5, ip, cr3
    83fc:	16450900 	strbne	r0, [r5], -r0, lsl #18
    8400:	00000590 	muleq	r0, r0, r5
    8404:	00182302 	andseq	r2, r8, r2, lsl #6
    8408:	00051a03 	andeq	r1, r5, r3, lsl #20
    840c:	02460900 	subeq	r0, r6, #0, 18
    8410:	0000059c 	muleq	r0, ip, r5
    8414:	4b091411 	blmi	24d460 <_Min_Heap_Size+0x24cc60>
    8418:	00067009 	andeq	r7, r6, r9
    841c:	0b471200 	bleq	11ccc24 <_Min_Heap_Size+0x11cc424>
    8420:	4d090000 	stcmi	0, cr0, [r9, #-0]
    8424:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8428:	00230200 	eoreq	r0, r3, r0, lsl #4
    842c:	000bda12 	andeq	sp, fp, r2, lsl sl
    8430:	0c500900 	mrrceq	9, 0, r0, r0, cr0	; <UNPREDICTABLE>
    8434:	000000bc 	strheq	r0, [r0], -ip
    8438:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    843c:	00000794 	muleq	r0, r4, r7
    8440:	bc0c5309 	stclt	3, cr5, [ip], {9}
    8444:	02000000 	andeq	r0, r0, #0
    8448:	3f120823 	svccc	0x00120823
    844c:	09000004 	stmdbeq	r0, {r2}
    8450:	00bc0c56 	adcseq	r0, ip, r6, asr ip
    8454:	23020000 	movwcs	r0, #8192	; 0x2000
    8458:	0a2a120c 	beq	a8cc90 <_Min_Heap_Size+0xa8c490>
    845c:	59090000 	stmdbpl	r9, {}	; <UNPREDICTABLE>
    8460:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8464:	10230200 	eorne	r0, r3, r0, lsl #4
    8468:	08750300 	ldmdaeq	r5!, {r8, r9}^
    846c:	5c090000 	stcpl	0, cr0, [r9], {-0}
    8470:	00061b02 	andeq	r1, r6, r2, lsl #22
    8474:	0a141100 	beq	50c87c <_Min_Heap_Size+0x50c07c>
    8478:	06d1092e 	ldrbeq	r0, [r1], lr, lsr #18
    847c:	50130000 	andspl	r0, r3, r0
    8480:	0a006e69 	beq	23e2c <_Min_Heap_Size+0x2362c>
    8484:	00bc0c30 	adcseq	r0, ip, r0, lsr ip
    8488:	23020000 	movwcs	r0, #8192	; 0x2000
    848c:	098d1200 	stmibeq	sp, {r9, ip}
    8490:	330a0000 	movwcc	r0, #40960	; 0xa000
    8494:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8498:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    849c:	000fd012 	andeq	sp, pc, r2, lsl r0	; <UNPREDICTABLE>
    84a0:	0c360a00 			; <UNDEFINED> instruction: 0x0c360a00
    84a4:	000000bc 	strheq	r0, [r0], -ip
    84a8:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    84ac:	00000bfa 	strdeq	r0, [r0], -sl
    84b0:	bc0c390a 			; <UNDEFINED> instruction: 0xbc0c390a
    84b4:	02000000 	andeq	r0, r0, #0
    84b8:	5e120c23 	cdppl	12, 1, cr0, cr2, cr3, {1}
    84bc:	0a00000f 	beq	8500 <_Min_Heap_Size+0x7d00>
    84c0:	00bc0c3c 	adcseq	r0, ip, ip, lsr ip
    84c4:	23020000 	movwcs	r0, #8192	; 0x2000
    84c8:	1e030010 	mcrne	0, 0, r0, cr3, cr0, {0}
    84cc:	0a00000d 	beq	8508 <_Min_Heap_Size+0x7d08>
    84d0:	067c023e 			; <UNDEFINED> instruction: 0x067c023e
    84d4:	9b090000 	blls	2484dc <_Min_Heap_Size+0x247cdc>
    84d8:	0b00001a 	bleq	8548 <_Min_Heap_Size+0x7d48>
    84dc:	00bc11cd 	adcseq	r1, ip, sp, asr #3
    84e0:	01010000 	mrseq	r0, (UNDEF: 1)
    84e4:	19a80114 	stmibne	r8!, {r2, r4, r8}
    84e8:	4b010000 	blmi	484f0 <_Min_Heap_Size+0x47cf0>
    84ec:	00010d04 	andeq	r0, r1, r4, lsl #26
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	02000000 	andeq	r0, r0, #0
    84f8:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    84fc:	001b6b01 	andseq	r6, fp, r1, lsl #22
    8500:	043a0100 	ldrteq	r0, [sl], #-256	; 0xffffff00
    8504:	00000106 	andeq	r0, r0, r6, lsl #2
    8508:	00000000 	andeq	r0, r0, r0
    850c:	57150000 	ldrpl	r0, [r5, -r0]
    8510:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    8514:	16000007 	strne	r0, [r0], -r7
    8518:	00000000 	andeq	r0, r0, r0
    851c:	000006eb 	andeq	r0, r0, fp, ror #13
    8520:	e0011700 	and	r1, r1, r0, lsl #14
    8524:	0100001a 	tsteq	r0, sl, lsl r0
    8528:	01060420 	tsteq	r6, r0, lsr #8
	...
    8534:	01007d02 	tsteq	r0, r2, lsl #26
    8538:	00000762 	andeq	r0, r0, r2, ror #14
    853c:	0006a318 	andeq	sl, r6, r8, lsl r3
    8540:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
    8544:	00076232 	andeq	r6, r7, r2, lsr r2
    8548:	18500100 	ldmdane	r0, {r8}^
    854c:	00001b4c 	andeq	r1, r0, ip, asr #22
    8550:	4f042001 	svcmi	0x00042001
    8554:	00000768 	andeq	r0, r0, r8, ror #14
    8558:	19005101 	stmdbne	r0, {r0, r8, ip, lr}
    855c:	00067004 	andeq	r7, r6, r4
    8560:	bc041900 			; <UNDEFINED> instruction: 0xbc041900
    8564:	17000000 	strne	r0, [r0, -r0]
    8568:	001b5601 	andseq	r5, fp, r1, lsl #12
    856c:	03d10100 	bicseq	r0, r1, #0, 2
    8570:	0000010d 	andeq	r0, r0, sp, lsl #2
    8574:	00000000 	andeq	r0, r0, r0
    8578:	7d020000 	stcvc	0, cr0, [r2, #-0]
    857c:	07990100 	ldreq	r0, [r9, r0, lsl #2]
    8580:	b6180000 	ldrlt	r0, [r8], -r0
    8584:	01000004 	tsteq	r0, r4
    8588:	993703d1 	ldmdbls	r7!, {r0, r4, r6, r7, r8, r9}
    858c:	01000007 	tsteq	r0, r7
    8590:	04190050 	ldreq	r0, [r9], #-80	; 0xffffffb0
    8594:	0000060f 	andeq	r0, r0, pc, lsl #12
    8598:	177a011a 			; <UNDEFINED> instruction: 0x177a011a
    859c:	c4010000 	strgt	r0, [r1], #-0
    85a0:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    85a4:	dc000000 	stcle	0, cr0, [r0], {-0}
    85a8:	fc080011 	stc2	0, cr0, [r8], {17}
    85ac:	35080011 	strcc	r0, [r8, #-17]	; 0xffffffef
    85b0:	01000057 	qaddeq	r0, r7, r0
    85b4:	000007c9 	andeq	r0, r0, r9, asr #15
    85b8:	0011e216 	andseq	lr, r1, r6, lsl r2
    85bc:	0007f308 	andeq	pc, r7, r8, lsl #6
    85c0:	011a0000 	tsteq	sl, r0
    85c4:	000012eb 	andeq	r1, r0, fp, ror #5
    85c8:	0a03b801 	beq	f65d4 <_Min_Heap_Size+0xf5dd4>
    85cc:	0000bc01 	andeq	fp, r0, r1, lsl #24
    85d0:	0011bc00 	andseq	fp, r1, r0, lsl #24
    85d4:	0011dc08 	andseq	sp, r1, r8, lsl #24
    85d8:	00575508 	subseq	r5, r7, r8, lsl #10
    85dc:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    85e0:	c2160000 	andsgt	r0, r6, #0
    85e4:	f3080011 	vqadd.u8	d0, d8, d1
    85e8:	00000007 	andeq	r0, r0, r7
    85ec:	1af7011b 	bne	ffdc8a60 <_estack+0xdfdc7828>
    85f0:	ad010000 	stcge	0, cr0, [r1, #-0]
    85f4:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    85f8:	b0000000 	andlt	r0, r0, r0
    85fc:	bc080011 	stclt	0, cr0, [r8], {17}
    8600:	02080011 	andeq	r0, r8, #17
    8604:	1a01007d 	bne	48800 <_Min_Heap_Size+0x48000>
    8608:	001aab01 	andseq	sl, sl, r1, lsl #22
    860c:	03750100 	cmneq	r5, #0, 2
    8610:	00bc0111 	adcseq	r0, ip, r1, lsl r1
	...
    861c:	57750000 	ldrbpl	r0, [r5, -r0]!
    8620:	95010000 	strls	r0, [r1, #-0]
    8624:	1c000008 	stcne	0, cr0, [r0], {8}
    8628:	00001aa6 	andeq	r1, r0, r6, lsr #21
    862c:	0c037701 	stceq	7, cr7, [r3], {1}
    8630:	000000bc 	strheq	r0, [r0], -ip
    8634:	0000579d 	muleq	r0, sp, r7
    8638:	00005795 	muleq	r0, r5, r7
    863c:	001a001c 	andseq	r0, sl, ip, lsl r0
    8640:	03770100 	cmneq	r7, #0, 2
    8644:	0000bc17 	andeq	fp, r0, r7, lsl ip
    8648:	0057db00 	subseq	sp, r7, r0, lsl #22
    864c:	0057d300 	subseq	sp, r7, r0, lsl #6
    8650:	19bc1c00 	ldmibne	ip!, {sl, fp, ip}
    8654:	77010000 	strvc	r0, [r1, -r0]
    8658:	00bc2403 	adcseq	r2, ip, r3, lsl #8
    865c:	58180000 	ldmdapl	r8, {}	; <UNPREDICTABLE>
    8660:	58120000 	ldmdapl	r2, {}	; <UNPREDICTABLE>
    8664:	411c0000 	tstmi	ip, r0
    8668:	0100001a 	tsteq	r0, sl, lsl r0
    866c:	bc0c0378 	stclt	3, cr0, [ip], {120}	; 0x78
    8670:	4b000000 	blmi	8678 <_Min_Heap_Size+0x7e78>
    8674:	43000058 	movwmi	r0, #88	; 0x58
    8678:	16000058 			; <UNDEFINED> instruction: 0x16000058
    867c:	00000000 	andeq	r0, r0, r0
    8680:	00000e3e 	andeq	r0, r0, lr, lsr lr
    8684:	00000016 	andeq	r0, r0, r6, lsl r0
    8688:	000e3e00 	andeq	r3, lr, r0, lsl #28
    868c:	01140000 	tsteq	r4, r0
    8690:	00001a4e 	andeq	r1, r0, lr, asr #20
    8694:	06035201 	streq	r5, [r3], -r1, lsl #4
    8698:	00000001 	andeq	r0, r0, r1
    869c:	00000000 	andeq	r0, r0, r0
    86a0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    86a4:	21011401 	tstcs	r1, r1, lsl #8
    86a8:	0100001a 	tsteq	r0, sl, lsl r0
    86ac:	01060349 	tsteq	r6, r9, asr #6
	...
    86b8:	01007d02 	tsteq	r0, r2, lsl #26
    86bc:	1a610115 	bne	1848b18 <_Min_Heap_Size+0x1848318>
    86c0:	07010000 	streq	r0, [r1, -r0]
    86c4:	00010603 	andeq	r0, r1, r3, lsl #12
    86c8:	00000000 	andeq	r0, r0, r0
    86cc:	86000000 	strhi	r0, [r0], -r0
    86d0:	01000058 	qaddeq	r0, r8, r0
    86d4:	00000a19 	andeq	r0, r0, r9, lsl sl
    86d8:	001b431d 	andseq	r4, fp, sp, lsl r3
    86dc:	03070100 	movweq	r0, #28928	; 0x7100
    86e0:	0000bc21 	andeq	fp, r0, r1, lsr #24
    86e4:	0058d800 	subseq	sp, r8, r0, lsl #16
    86e8:	0058ca00 	subseq	ip, r8, r0, lsl #20
    86ec:	1ad21d00 	bne	ff48faf4 <_estack+0xdf48e8bc>
    86f0:	07010000 	streq	r0, [r1, -r0]
    86f4:	00bc3403 	adcseq	r3, ip, r3, lsl #8
    86f8:	593b0000 	ldmdbpl	fp!, {}	; <UNPREDICTABLE>
    86fc:	59330000 	ldmdbpl	r3!, {}	; <UNPREDICTABLE>
    8700:	161d0000 	ldrne	r0, [sp], -r0
    8704:	0100001a 	tsteq	r0, sl, lsl r0
    8708:	bc4c0307 	mcrrlt	3, 0, r0, ip, cr7
    870c:	7d000000 	stcvc	0, cr0, [r0, #-0]
    8710:	6f000059 	svcvs	0x00000059
    8714:	1e000059 	mcrne	0, 0, r0, cr0, cr9, {2}
    8718:	00000c3e 	andeq	r0, r0, lr, lsr ip
    871c:	14030901 	strne	r0, [r3], #-2305	; 0xfffff6ff
    8720:	000006d1 	ldrdeq	r0, [r0], -r1
    8724:	1f5c9102 	svcne	0x005c9102
	...
    8730:	0000094c 	andeq	r0, r0, ip, asr #18
    8734:	00057d1e 	andeq	r7, r5, lr, lsl sp
    8738:	03130100 	tsteq	r3, #0, 2
    873c:	0000c805 	andeq	ip, r0, r5, lsl #16
    8740:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    8744:	00001f00 	andeq	r1, r0, r0, lsl #30
    8748:	00000000 	andeq	r0, r0, r0
    874c:	096a0000 	stmdbeq	sl!, {}^	; <UNPREDICTABLE>
    8750:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    8754:	01000005 	tsteq	r0, r5
    8758:	c805032b 	stmdagt	r5, {r0, r1, r3, r5, r8, r9}
    875c:	02000000 	andeq	r0, r0, #0
    8760:	20005891 	mulcs	r0, r1, r8
    8764:	00000000 	andeq	r0, r0, r0
    8768:	00000e49 	andeq	r0, r0, r9, asr #28
    876c:	00000987 	andeq	r0, r0, r7, lsl #19
    8770:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8774:	0200000c 	andeq	r0, r0, #12
    8778:	51012140 	tstpl	r1, r0, asr #2
    877c:	005c9102 	subseq	r9, ip, r2, lsl #2
    8780:	00000020 	andeq	r0, r0, r0, lsr #32
    8784:	000e5700 	andeq	r5, lr, r0, lsl #14
    8788:	0009a500 	andeq	sl, r9, r0, lsl #10
    878c:	50012100 	andpl	r2, r1, r0, lsl #2
    8790:	00000305 	andeq	r0, r0, r5, lsl #6
    8794:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8798:	0b0a0351 	bleq	2894e4 <_Min_Heap_Size+0x288ce4>
    879c:	00200003 	eoreq	r0, r0, r3
    87a0:	57000000 	strpl	r0, [r0, -r0]
    87a4:	c300000e 	movwgt	r0, #14
    87a8:	21000009 	tstcs	r0, r9
    87ac:	03055001 	movweq	r5, #20481	; 0x5001
    87b0:	00000000 	andeq	r0, r0, r0
    87b4:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    87b8:	00030c0a 	andeq	r0, r3, sl, lsl #24
    87bc:	00000020 	andeq	r0, r0, r0, lsr #32
    87c0:	000e5700 	andeq	r5, lr, r0, lsl #14
    87c4:	0009e100 	andeq	lr, r9, r0, lsl #2
    87c8:	50012100 	andpl	r2, r1, r0, lsl #2
    87cc:	00000305 	andeq	r0, r0, r5, lsl #6
    87d0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    87d4:	100a0351 	andne	r0, sl, r1, asr r3
    87d8:	00200003 	eoreq	r0, r0, r3
    87dc:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    87e0:	fe00000e 	cdp2	0, 0, cr0, cr0, cr14, {0}
    87e4:	21000009 	tstcs	r0, r9
    87e8:	0c055001 	stceq	0, cr5, [r5], {1}
    87ec:	40020800 	andmi	r0, r2, r0, lsl #16
    87f0:	02510121 	subseq	r0, r1, #1073741832	; 0x40000008
    87f4:	22005c91 	andcs	r5, r0, #37120	; 0x9100
    87f8:	00000000 	andeq	r0, r0, r0
    87fc:	00000e57 	andeq	r0, r0, r7, asr lr
    8800:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8804:	00000003 	andeq	r0, r0, r3
    8808:	51012100 	mrspl	r2, (UNDEF: 17)
    880c:	03280a03 			; <UNDEFINED> instruction: 0x03280a03
    8810:	011a0000 	tsteq	sl, r0
    8814:	00000ad9 	ldrdeq	r0, [r0], -r9
    8818:	13024f01 	movwne	r4, #12033	; 0x2f01
    881c:	00052001 	andeq	r2, r5, r1
	...
    8828:	0059d800 	subseq	sp, r9, r0, lsl #16
    882c:	0b4d0100 	bleq	1348c34 <_Min_Heap_Size+0x1348434>
    8830:	a31d0000 	tstge	sp, #0
    8834:	01000006 	tsteq	r0, r6
    8838:	623c024f 	eorsvs	r0, ip, #-268435452	; 0xf0000004
    883c:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    8840:	1000005a 	andne	r0, r0, sl, asr r0
    8844:	1d00005a 	stcne	0, cr0, [r0, #-360]	; 0xfffffe98
    8848:	00001b4d 	andeq	r1, r0, sp, asr #22
    884c:	58024f01 	stmdapl	r2, {r0, r8, r9, sl, fp, lr}
    8850:	000000bc 	strheq	r0, [r0], -ip
    8854:	00005a82 	andeq	r5, r0, r2, lsl #21
    8858:	00005a76 	andeq	r5, r0, r6, ror sl
    885c:	0017be1c 	andseq	fp, r7, ip, lsl lr
    8860:	02510100 	subseq	r0, r1, #0, 2
    8864:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8868:	005ad000 	subseq	sp, sl, r0
    886c:	005acc00 	subseq	ip, sl, r0, lsl #24
    8870:	00001600 	andeq	r1, r0, r0, lsl #12
    8874:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8878:	00160000 	andseq	r0, r6, r0
    887c:	66000000 	strvs	r0, [r0], -r0
    8880:	2000000e 	andcs	r0, r0, lr
    8884:	00000000 	andeq	r0, r0, r0
    8888:	00000e57 	andeq	r0, r0, r7, asr lr
    888c:	00000aa8 	andeq	r0, r0, r8, lsr #21
    8890:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8894:	00000003 	andeq	r0, r0, r3
    8898:	51012100 	mrspl	r2, (UNDEF: 17)
    889c:	025a0a03 	subseq	r0, sl, #12288	; 0x3000
    88a0:	00002000 	andeq	r2, r0, r0
    88a4:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    88a8:	0ac60000 	beq	ff1888b0 <_estack+0xdf187678>
    88ac:	01210000 			; <UNDEFINED> instruction: 0x01210000
    88b0:	00030550 	andeq	r0, r3, r0, asr r5
    88b4:	21000000 	mrscs	r0, (UNDEF: 0)
    88b8:	0a035101 	beq	dccc4 <_Min_Heap_Size+0xdc4c4>
    88bc:	2000025b 	andcs	r0, r0, fp, asr r2
    88c0:	00000000 	andeq	r0, r0, r0
    88c4:	00000e57 	andeq	r0, r0, r7, asr lr
    88c8:	00000ae4 	andeq	r0, r0, r4, ror #21
    88cc:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    88d0:	00000003 	andeq	r0, r0, r3
    88d4:	51012100 	mrspl	r2, (UNDEF: 17)
    88d8:	027e0a03 	rsbseq	r0, lr, #12288	; 0x3000
    88dc:	00002000 	andeq	r2, r0, r0
    88e0:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    88e4:	0b020000 	bleq	888ec <_Min_Heap_Size+0x880ec>
    88e8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    88ec:	00030550 	andeq	r0, r3, r0, asr r5
    88f0:	21000000 	mrscs	r0, (UNDEF: 0)
    88f4:	0a035101 	beq	dcd00 <_Min_Heap_Size+0xdc500>
    88f8:	16000285 	strne	r0, [r0], -r5, lsl #5
    88fc:	00000000 	andeq	r0, r0, r0
    8900:	0000080e 	andeq	r0, r0, lr, lsl #16
    8904:	00000016 	andeq	r0, r0, r6, lsl r0
    8908:	000e7400 	andeq	r7, lr, r0, lsl #8
    890c:	00002000 	andeq	r2, r0, r0
    8910:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8914:	0b320000 	bleq	c8891c <_Min_Heap_Size+0xc8811c>
    8918:	01210000 			; <UNDEFINED> instruction: 0x01210000
    891c:	00030550 	andeq	r0, r3, r0, asr r5
    8920:	21000000 	mrscs	r0, (UNDEF: 0)
    8924:	0a035101 	beq	dcd30 <_Min_Heap_Size+0xdc530>
    8928:	220002c3 	andcs	r0, r0, #805306380	; 0x3000000c
    892c:	00000000 	andeq	r0, r0, r0
    8930:	00000e57 	andeq	r0, r0, r7, asr lr
    8934:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8938:	00000003 	andeq	r0, r0, r3
    893c:	51012100 	mrspl	r2, (UNDEF: 17)
    8940:	02ca0a03 	sbceq	r0, sl, #12288	; 0x3000
    8944:	01230000 			; <UNDEFINED> instruction: 0x01230000
    8948:	000009d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    894c:	011adb01 	tsteq	sl, r1, lsl #22
    8950:	00000520 	andeq	r0, r0, r0, lsr #10
	...
    895c:	00005aee 	andeq	r5, r0, lr, ror #21
    8960:	000e2401 	andeq	r2, lr, r1, lsl #8
    8964:	04b62400 	ldrteq	r2, [r6], #1024	; 0x400
    8968:	db010000 	blle	48970 <_Min_Heap_Size+0x48170>
    896c:	00079941 	andeq	r9, r7, r1, asr #18
    8970:	005b6400 	subseq	r6, fp, r0, lsl #8
    8974:	005b4a00 	subseq	r4, fp, r0, lsl #20
    8978:	17be2500 	ldrne	r2, [lr, r0, lsl #10]!
    897c:	dd010000 	stcle	0, cr0, [r1, #-0]
    8980:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8984:	005c3b00 	subseq	r3, ip, r0, lsl #22
    8988:	005c0700 	subseq	r0, ip, r0, lsl #14
    898c:	1a902500 	bne	fe411d94 <_estack+0xde410b5c>
    8990:	dd010000 	stcle	0, cr0, [r1, #-0]
    8994:	0000bc17 	andeq	fp, r0, r7, lsl ip
    8998:	005d6500 	subseq	r6, sp, r0, lsl #10
    899c:	005d6100 	subseq	r6, sp, r0, lsl #2
    89a0:	03c02600 	biceq	r2, r0, #0, 12
    89a4:	0c390000 	ldceq	0, cr0, [r9], #-0
    89a8:	c11c0000 	tstgt	ip, r0
    89ac:	01000019 	tsteq	r0, r9, lsl r0
    89b0:	cb160187 	blgt	588fd4 <_Min_Heap_Size+0x5887d4>
    89b4:	8f000004 	svchi	0x00000004
    89b8:	8300005d 	movwhi	r0, #93	; 0x5d
    89bc:	1f00005d 	svcne	0x0000005d
	...
    89c8:	00000be4 	andeq	r0, r0, r4, ror #23
    89cc:	00057d1e 	andeq	r7, r5, lr, lsl sp
    89d0:	01900100 	orrseq	r0, r0, r0, lsl #2
    89d4:	0000c807 	andeq	ip, r0, r7, lsl #16
    89d8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    89dc:	00001600 	andeq	r1, r0, r0, lsl #12
    89e0:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    89e4:	00160000 	andseq	r0, r6, r0
    89e8:	66000000 	strvs	r0, [r0], -r0
    89ec:	2000000e 	andcs	r0, r0, lr
    89f0:	00000000 	andeq	r0, r0, r0
    89f4:	00000e57 	andeq	r0, r0, r7, asr lr
    89f8:	00000c14 	andeq	r0, r0, r4, lsl ip
    89fc:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8a00:	00000003 	andeq	r0, r0, r3
    8a04:	51012100 	mrspl	r2, (UNDEF: 17)
    8a08:	018a0a03 	orreq	r0, sl, r3, lsl #20
    8a0c:	00001600 	andeq	r1, r0, r0, lsl #12
    8a10:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8a14:	00160000 	andseq	r0, r6, r0
    8a18:	66000000 	strvs	r0, [r0], -r0
    8a1c:	1600000e 	strne	r0, [r0], -lr
    8a20:	00000000 	andeq	r0, r0, r0
    8a24:	00000e66 	andeq	r0, r0, r6, ror #28
    8a28:	00000016 	andeq	r0, r0, r6, lsl r0
    8a2c:	000e6600 	andeq	r6, lr, r0, lsl #12
    8a30:	00160000 	andseq	r0, r6, r0
    8a34:	66000000 	strvs	r0, [r0], -r0
    8a38:	1600000e 	strne	r0, [r0], -lr
    8a3c:	00000000 	andeq	r0, r0, r0
    8a40:	00000e66 	andeq	r0, r0, r6, ror #28
    8a44:	00000020 	andeq	r0, r0, r0, lsr #32
    8a48:	000e5700 	andeq	r5, lr, r0, lsl #14
    8a4c:	000c6800 	andeq	r6, ip, r0, lsl #16
    8a50:	50012100 	andpl	r2, r1, r0, lsl #2
    8a54:	00000305 	andeq	r0, r0, r5, lsl #6
    8a58:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8a5c:	e6080251 			; <UNDEFINED> instruction: 0xe6080251
    8a60:	00002000 	andeq	r2, r0, r0
    8a64:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8a68:	0c850000 	stceq	0, cr0, [r5], {0}
    8a6c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8a70:	00030550 	andeq	r0, r3, r0, asr r5
    8a74:	21000000 	mrscs	r0, (UNDEF: 0)
    8a78:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    8a7c:	001600eb 	andseq	r0, r6, fp, ror #1
    8a80:	66000000 	strvs	r0, [r0], -r0
    8a84:	1600000e 	strne	r0, [r0], -lr
    8a88:	00000000 	andeq	r0, r0, r0
    8a8c:	00000e66 	andeq	r0, r0, r6, ror #28
    8a90:	00000016 	andeq	r0, r0, r6, lsl r0
    8a94:	000e6600 	andeq	r6, lr, r0, lsl #12
    8a98:	00001600 	andeq	r1, r0, r0, lsl #12
    8a9c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8aa0:	00200000 	eoreq	r0, r0, r0
    8aa4:	57000000 	strpl	r0, [r0, -r0]
    8aa8:	c700000e 	strgt	r0, [r0, -lr]
    8aac:	2100000c 	tstcs	r0, ip
    8ab0:	03055001 	movweq	r5, #20481	; 0x5001
    8ab4:	00000000 	andeq	r0, r0, r0
    8ab8:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8abc:	00011d0a 	andeq	r1, r1, sl, lsl #26
    8ac0:	00000020 	andeq	r0, r0, r0, lsr #32
    8ac4:	000e5700 	andeq	r5, lr, r0, lsl #14
    8ac8:	000ce500 	andeq	lr, ip, r0, lsl #10
    8acc:	50012100 	andpl	r2, r1, r0, lsl #2
    8ad0:	00000305 	andeq	r0, r0, r5, lsl #6
    8ad4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8ad8:	1e0a0351 	mcrne	3, 0, r0, cr10, cr1, {2}
    8adc:	00160001 	andseq	r0, r6, r1
    8ae0:	66000000 	strvs	r0, [r0], -r0
    8ae4:	1600000e 	strne	r0, [r0], -lr
    8ae8:	00000000 	andeq	r0, r0, r0
    8aec:	00000e66 	andeq	r0, r0, r6, ror #28
    8af0:	00000016 	andeq	r0, r0, r6, lsl r0
    8af4:	000e6600 	andeq	r6, lr, r0, lsl #12
    8af8:	00001600 	andeq	r1, r0, r0, lsl #12
    8afc:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8b00:	00200000 	eoreq	r0, r0, r0
    8b04:	57000000 	strpl	r0, [r0, -r0]
    8b08:	2700000e 	strcs	r0, [r0, -lr]
    8b0c:	2100000d 	tstcs	r0, sp
    8b10:	03055001 	movweq	r5, #20481	; 0x5001
    8b14:	00000000 	andeq	r0, r0, r0
    8b18:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8b1c:	00015e0a 	andeq	r5, r1, sl, lsl #28
    8b20:	00000016 	andeq	r0, r0, r6, lsl r0
    8b24:	000e6600 	andeq	r6, lr, r0, lsl #12
    8b28:	00001600 	andeq	r1, r0, r0, lsl #12
    8b2c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8b30:	00160000 	andseq	r0, r6, r0
    8b34:	66000000 	strvs	r0, [r0], -r0
    8b38:	1600000e 	strne	r0, [r0], -lr
    8b3c:	00000000 	andeq	r0, r0, r0
    8b40:	00000e66 	andeq	r0, r0, r6, ror #28
    8b44:	00000020 	andeq	r0, r0, r0, lsr #32
    8b48:	000e5700 	andeq	r5, lr, r0, lsl #14
    8b4c:	000d6900 	andeq	r6, sp, r0, lsl #18
    8b50:	50012100 	andpl	r2, r1, r0, lsl #2
    8b54:	00000305 	andeq	r0, r0, r5, lsl #6
    8b58:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8b5c:	cd0a0351 	stcgt	3, cr0, [sl, #-324]	; 0xfffffebc
    8b60:	00200001 	eoreq	r0, r0, r1
    8b64:	57000000 	strpl	r0, [r0, -r0]
    8b68:	8700000e 	strhi	r0, [r0, -lr]
    8b6c:	2100000d 	tstcs	r0, sp
    8b70:	03055001 	movweq	r5, #20481	; 0x5001
    8b74:	00000000 	andeq	r0, r0, r0
    8b78:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8b7c:	0001d60a 	andeq	sp, r1, sl, lsl #12
    8b80:	00000020 	andeq	r0, r0, r0, lsr #32
    8b84:	000e5700 	andeq	r5, lr, r0, lsl #14
    8b88:	000da500 	andeq	sl, sp, r0, lsl #10
    8b8c:	50012100 	andpl	r2, r1, r0, lsl #2
    8b90:	00000305 	andeq	r0, r0, r5, lsl #6
    8b94:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8b98:	d70a0351 	smlsdle	sl, r1, r3, r0
    8b9c:	00200001 	eoreq	r0, r0, r1
    8ba0:	57000000 	strpl	r0, [r0, -r0]
    8ba4:	c300000e 	movwgt	r0, #14
    8ba8:	2100000d 	tstcs	r0, sp
    8bac:	03055001 	movweq	r5, #20481	; 0x5001
    8bb0:	00000000 	andeq	r0, r0, r0
    8bb4:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8bb8:	0001d80a 	andeq	sp, r1, sl, lsl #16
    8bbc:	00000020 	andeq	r0, r0, r0, lsr #32
    8bc0:	000e5700 	andeq	r5, lr, r0, lsl #14
    8bc4:	000de100 	andeq	lr, sp, r0, lsl #2
    8bc8:	50012100 	andpl	r2, r1, r0, lsl #2
    8bcc:	00000305 	andeq	r0, r0, r5, lsl #6
    8bd0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8bd4:	d90a0351 	stmdble	sl, {r0, r4, r6, r8, r9}
    8bd8:	00200001 	eoreq	r0, r0, r1
    8bdc:	57000000 	strpl	r0, [r0, -r0]
    8be0:	ff00000e 			; <UNDEFINED> instruction: 0xff00000e
    8be4:	2100000d 	tstcs	r0, sp
    8be8:	03055001 	movweq	r5, #20481	; 0x5001
    8bec:	00000000 	andeq	r0, r0, r0
    8bf0:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8bf4:	0001da0a 	andeq	sp, r1, sl, lsl #20
    8bf8:	00000016 	andeq	r0, r0, r6, lsl r0
    8bfc:	000e6600 	andeq	r6, lr, r0, lsl #12
    8c00:	00001600 	andeq	r1, r0, r0, lsl #12
    8c04:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8c08:	00160000 	andseq	r0, r6, r0
    8c0c:	66000000 	strvs	r0, [r0], -r0
    8c10:	1600000e 	strne	r0, [r0], -lr
    8c14:	00000000 	andeq	r0, r0, r0
    8c18:	00000e66 	andeq	r0, r0, r6, ror #28
    8c1c:	c3012700 	movwgt	r2, #5888	; 0x1700
    8c20:	0100001a 	tsteq	r0, sl, lsl r0
    8c24:	20011ac8 	andcs	r1, r1, r8, asr #21
    8c28:	00000005 	andeq	r0, r0, r5
    8c2c:	00000000 	andeq	r0, r0, r0
    8c30:	02000000 	andeq	r0, r0, #0
    8c34:	2801007d 	stmdacs	r1, {r0, r2, r3, r4, r5, r6}
    8c38:	17320101 	ldrne	r0, [r2, -r1, lsl #2]!
    8c3c:	17320000 	ldrne	r0, [r2, -r0]!
    8c40:	01290000 			; <UNDEFINED> instruction: 0x01290000
    8c44:	000da301 	andeq	sl, sp, r1, lsl #6
    8c48:	000da300 	andeq	sl, sp, r0, lsl #6
    8c4c:	07e00a00 	strbeq	r0, [r0, r0, lsl #20]!
    8c50:	0c01012a 	stfeqs	f0, [r1], {42}	; 0x2a
    8c54:	0c000008 	stceq	0, cr0, [r0], {8}
    8c58:	0c000008 	stceq	0, cr0, [r0], {8}
    8c5c:	290801e6 	stmdbcs	r8, {r1, r2, r5, r6, r7, r8}
    8c60:	16180101 	ldrne	r0, [r8], -r1, lsl #2
    8c64:	16180000 	ldrne	r0, [r8], -r0
    8c68:	ea0b0000 	b	2c8c70 <_Min_Heap_Size+0x2c8470>
    8c6c:	0101290a 	tsteq	r1, sl, lsl #18
    8c70:	00001a83 	andeq	r1, r0, r3, lsl #21
    8c74:	00001a83 	andeq	r1, r0, r3, lsl #21
    8c78:	0013df0b 	andseq	sp, r3, fp, lsl #30
    8c7c:	000009da 	ldrdeq	r0, [r0], -sl
    8c80:	107f0002 	rsbsne	r0, pc, r2
    8c84:	01040000 	mrseq	r0, (UNDEF: 4)
    8c88:	00000131 	andeq	r0, r0, r1, lsr r1
    8c8c:	001c820c 	andseq	r8, ip, ip, lsl #4
    8c90:	00004b00 	andeq	r4, r0, r0, lsl #22
    8c94:	00045000 	andeq	r5, r4, r0
	...
    8ca0:	00664b00 	rsbeq	r4, r6, r0, lsl #22
    8ca4:	06010200 	streq	r0, [r1], -r0, lsl #4
    8ca8:	000000e0 	andeq	r0, r0, r0, ror #1
    8cac:	0000ad03 	andeq	sl, r0, r3, lsl #26
    8cb0:	182b0200 	stmdane	fp!, {r9}
    8cb4:	0000003c 	andeq	r0, r0, ip, lsr r0
    8cb8:	de080102 	adflee	f0, f0, f2
    8cbc:	02000000 	andeq	r0, r0, #0
    8cc0:	01270502 			; <UNDEFINED> instruction: 0x01270502
    8cc4:	ec030000 	stc	0, cr0, [r3], {-0}
    8cc8:	02000009 	andeq	r0, r0, #9
    8ccc:	00561939 	subseq	r1, r6, r9, lsr r9
    8cd0:	02020000 	andeq	r0, r2, #0
    8cd4:	00000e07 	andeq	r0, r0, r7, lsl #28
    8cd8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    8cdc:	00000005 	andeq	r0, r0, r5
    8ce0:	00004003 	andeq	r4, r0, r3
    8ce4:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    8ce8:	00000070 	andeq	r0, r0, r0, ror r0
    8cec:	9b070402 	blls	1c9cfc <_Min_Heap_Size+0x1c94fc>
    8cf0:	02000000 	andeq	r0, r0, #0
    8cf4:	00000508 	andeq	r0, r0, r8, lsl #10
    8cf8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    8cfc:	00009607 	andeq	r9, r0, r7, lsl #12
    8d00:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    8d04:	00746e69 	rsbseq	r6, r4, r9, ror #28
    8d08:	a0070402 	andge	r0, r7, r2, lsl #8
    8d0c:	03000000 	movweq	r0, #0
    8d10:	000000af 	andeq	r0, r0, pc, lsr #1
    8d14:	30131803 	andscc	r1, r3, r3, lsl #16
    8d18:	03000000 	movweq	r0, #0
    8d1c:	000009ee 	andeq	r0, r0, lr, ror #19
    8d20:	4a142403 	bmi	511d34 <_Min_Heap_Size+0x511534>
    8d24:	03000000 	movweq	r0, #0
    8d28:	00000042 	andeq	r0, r0, r2, asr #32
    8d2c:	64143003 	ldrvs	r3, [r4], #-3
    8d30:	05000000 	streq	r0, [r0, #-0]
    8d34:	000000ab 	andeq	r0, r0, fp, lsr #1
    8d38:	0000ab06 	andeq	sl, r0, r6, lsl #22
    8d3c:	0000cc00 	andeq	ip, r0, r0, lsl #24
    8d40:	008c0700 	addeq	r0, ip, r0, lsl #14
    8d44:	00010000 	andeq	r0, r1, r0
    8d48:	5a041808 	bpl	10ed70 <_Min_Heap_Size+0x10e570>
    8d4c:	01360901 	teqeq	r6, r1, lsl #18
    8d50:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
    8d54:	0400524d 	streq	r5, [r0], #-589	; 0xfffffdb3
    8d58:	b711015c 			; <UNDEFINED> instruction: 0xb711015c
    8d5c:	02000000 	andeq	r0, r0, #0
    8d60:	45090023 	strmi	r0, [r9, #-35]	; 0xffffffdd
    8d64:	0400524d 	streq	r5, [r0], #-589	; 0xfffffdb3
    8d68:	b711015d 			; <UNDEFINED> instruction: 0xb711015d
    8d6c:	02000000 	andeq	r0, r0, #0
    8d70:	770a0423 	strvc	r0, [sl, -r3, lsr #8]
    8d74:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8d78:	b711015e 			; <UNDEFINED> instruction: 0xb711015e
    8d7c:	02000000 	andeq	r0, r0, #0
    8d80:	400a0823 	andmi	r0, sl, r3, lsr #16
    8d84:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8d88:	b711015f 			; <UNDEFINED> instruction: 0xb711015f
    8d8c:	02000000 	andeq	r0, r0, #0
    8d90:	d20a0c23 	andle	r0, sl, #8960	; 0x2300
    8d94:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8d98:	b7110160 	ldrlt	r0, [r1, -r0, ror #2]
    8d9c:	02000000 	andeq	r0, r0, #0
    8da0:	50091023 	andpl	r1, r9, r3, lsr #32
    8da4:	61040052 	qaddvs	r0, r2, r4
    8da8:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8dac:	23020000 	movwcs	r0, #8192	; 0x2000
    8db0:	da0b0014 	ble	2c8e08 <_Min_Heap_Size+0x2c8608>
    8db4:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8db8:	cc030162 	stfgts	f0, [r3], {98}	; 0x62
    8dbc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8dc0:	01ae0428 			; <UNDEFINED> instruction: 0x01ae0428
    8dc4:	0001de09 	andeq	sp, r1, r9, lsl #28
    8dc8:	11540a00 	cmpne	r4, r0, lsl #20
    8dcc:	b0040000 	andlt	r0, r4, r0
    8dd0:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    8dd8:	10660a00 	rsbne	r0, r6, r0, lsl #20
    8ddc:	b1040000 	mrslt	r0, (UNDEF: 4)
    8de0:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8de4:	23020000 	movwcs	r0, #8192	; 0x2000
    8de8:	0ee40a04 	vfmaeq.f32	s1, s8, s8
    8dec:	b2040000 	andlt	r0, r4, #0
    8df0:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8df4:	23020000 	movwcs	r0, #8192	; 0x2000
    8df8:	0f2e0a08 	svceq	0x002e0a08
    8dfc:	b3040000 	movwlt	r0, #16384	; 0x4000
    8e00:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e04:	23020000 	movwcs	r0, #8192	; 0x2000
    8e08:	4449090c 	strbmi	r0, [r9], #-2316	; 0xfffff6f4
    8e0c:	b4040052 	strlt	r0, [r4], #-82	; 0xffffffae
    8e10:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e14:	23020000 	movwcs	r0, #8192	; 0x2000
    8e18:	444f0910 	strbmi	r0, [pc], #-2320	; 8e20 <_Min_Heap_Size+0x8620>
    8e1c:	b5040052 	strlt	r0, [r4, #-82]	; 0xffffffae
    8e20:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e24:	23020000 	movwcs	r0, #8192	; 0x2000
    8e28:	11070a14 	tstne	r7, r4, lsl sl
    8e2c:	b6040000 	strlt	r0, [r4], -r0
    8e30:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e34:	23020000 	movwcs	r0, #8192	; 0x2000
    8e38:	0ed20a18 			; <UNDEFINED> instruction: 0x0ed20a18
    8e3c:	b7040000 	strlt	r0, [r4, -r0]
    8e40:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e44:	23020000 	movwcs	r0, #8192	; 0x2000
    8e48:	4641091c 			; <UNDEFINED> instruction: 0x4641091c
    8e4c:	b8040052 	stmdalt	r4, {r1, r4, r6}
    8e50:	01ee1101 	mvneq	r1, r1, lsl #2
    8e54:	23020000 	movwcs	r0, #8192	; 0x2000
    8e58:	b7060020 	strlt	r0, [r6, -r0, lsr #32]
    8e5c:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    8e60:	07000001 	streq	r0, [r0, -r1]
    8e64:	0000008c 	andeq	r0, r0, ip, lsl #1
    8e68:	de050001 	cdple	0, 0, cr0, cr5, cr1, {0}
    8e6c:	0b000001 	bleq	8e78 <_Min_Heap_Size+0x8678>
    8e70:	0000110c 	andeq	r1, r0, ip, lsl #2
    8e74:	0301b904 	movweq	fp, #6404	; 0x1904
    8e78:	00000143 	andeq	r0, r0, r3, asr #2
    8e7c:	bf042408 	svclt	0x00042408
    8e80:	025b0901 	subseq	r0, fp, #16384	; 0x4000
    8e84:	a70a0000 	strge	r0, [sl, -r0]
    8e88:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8e8c:	b71101c1 	ldrlt	r0, [r1, -r1, asr #3]
    8e90:	02000000 	andeq	r0, r0, #0
    8e94:	50090023 	andpl	r0, r9, r3, lsr #32
    8e98:	0400434d 	streq	r4, [r0], #-845	; 0xfffffcb3
    8e9c:	b71101c2 	ldrlt	r0, [r1, -r2, asr #3]
    8ea0:	02000000 	andeq	r0, r0, #0
    8ea4:	ae0a0423 	cdpge	4, 0, cr0, cr10, cr3, {1}
    8ea8:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8eac:	6b1101c3 	blvs	4495c0 <_Min_Heap_Size+0x448dc0>
    8eb0:	02000002 	andeq	r0, r0, #2
    8eb4:	bb0a0823 	bllt	28af48 <_Min_Heap_Size+0x28a748>
    8eb8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8ebc:	bc1101c4 	ldflts	f0, [r1], {196}	; 0xc4
    8ec0:	02000000 	andeq	r0, r0, #0
    8ec4:	0a0a1823 	beq	28ef58 <_Min_Heap_Size+0x28e758>
    8ec8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8ecc:	b71101c5 	ldrlt	r0, [r1, -r5, asr #3]
    8ed0:	02000000 	andeq	r0, r0, #0
    8ed4:	06002023 	streq	r2, [r0], -r3, lsr #32
    8ed8:	000000b7 	strheq	r0, [r0], -r7
    8edc:	0000026b 	andeq	r0, r0, fp, ror #4
    8ee0:	00008c07 	andeq	r8, r0, r7, lsl #24
    8ee4:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    8ee8:	0000025b 	andeq	r0, r0, fp, asr r2
    8eec:	001c680b 	andseq	r6, ip, fp, lsl #16
    8ef0:	01c60400 	biceq	r0, r6, r0, lsl #8
    8ef4:	00020003 	andeq	r0, r2, r3
    8ef8:	04880800 	streq	r0, [r8], #2048	; 0x800
    8efc:	690901f4 	stmdbvs	r9, {r2, r4, r5, r6, r7, r8}
    8f00:	09000004 	stmdbeq	r0, {r2}
    8f04:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    8f08:	b71101f6 			; <UNDEFINED> instruction: 0xb71101f6
    8f0c:	02000000 	andeq	r0, r0, #0
    8f10:	490a0023 	stmdbmi	sl, {r0, r1, r5}
    8f14:	04000006 	streq	r0, [r0], #-6
    8f18:	b71101f7 			; <UNDEFINED> instruction: 0xb71101f7
    8f1c:	02000000 	andeq	r0, r0, #0
    8f20:	4c0a0423 	cfstrsmi	mvf0, [sl], {35}	; 0x23
    8f24:	04000006 	streq	r0, [r0], #-6
    8f28:	b71101f8 			; <UNDEFINED> instruction: 0xb71101f8
    8f2c:	02000000 	andeq	r0, r0, #0
    8f30:	43090823 	movwmi	r0, #38947	; 0x9823
    8f34:	04005249 	streq	r5, [r0], #-585	; 0xfffffdb7
    8f38:	b71101f9 			; <UNDEFINED> instruction: 0xb71101f9
    8f3c:	02000000 	andeq	r0, r0, #0
    8f40:	2d0a0c23 	stccs	12, cr0, [sl, #-140]	; 0xffffff74
    8f44:	04000005 	streq	r0, [r0], #-5
    8f48:	b71101fa 			; <UNDEFINED> instruction: 0xb71101fa
    8f4c:	02000000 	andeq	r0, r0, #0
    8f50:	0e0a1023 	cdpeq	0, 0, cr1, cr10, cr3, {1}
    8f54:	0400000a 	streq	r0, [r0], #-10
    8f58:	b71101fb 			; <UNDEFINED> instruction: 0xb71101fb
    8f5c:	02000000 	andeq	r0, r0, #0
    8f60:	6c0a1423 	cfstrsvs	mvf1, [sl], {35}	; 0x23
    8f64:	04000009 	streq	r0, [r0], #-9
    8f68:	b71101fc 			; <UNDEFINED> instruction: 0xb71101fc
    8f6c:	02000000 	andeq	r0, r0, #0
    8f70:	b20a1823 	andlt	r1, sl, #2293760	; 0x230000
    8f74:	04000008 	streq	r0, [r0], #-8
    8f78:	ab1101fd 	blge	449774 <_Min_Heap_Size+0x448f74>
    8f7c:	02000000 	andeq	r0, r0, #0
    8f80:	8f0a1c23 	svchi	0x000a1c23
    8f84:	04000008 	streq	r0, [r0], #-8
    8f88:	b71101fe 			; <UNDEFINED> instruction: 0xb71101fe
    8f8c:	02000000 	andeq	r0, r0, #0
    8f90:	c00a2023 	andgt	r2, sl, r3, lsr #32
    8f94:	04000005 	streq	r0, [r0], #-5
    8f98:	b71101ff 			; <UNDEFINED> instruction: 0xb71101ff
    8f9c:	02000000 	andeq	r0, r0, #0
    8fa0:	bc0a2423 	cfstrslt	mvf2, [sl], {35}	; 0x23
    8fa4:	04000008 	streq	r0, [r0], #-8
    8fa8:	bc110200 	lfmlt	f0, 4, [r1], {-0}
    8fac:	02000000 	andeq	r0, r0, #0
    8fb0:	510a2823 	tstpl	sl, r3, lsr #16
    8fb4:	0400000b 	streq	r0, [r0], #-11
    8fb8:	b7110201 	ldrlt	r0, [r1, -r1, lsl #4]
    8fbc:	02000000 	andeq	r0, r0, #0
    8fc0:	7e0a3023 	cdpvc	0, 0, cr3, cr10, cr3, {1}
    8fc4:	0400000a 	streq	r0, [r0], #-10
    8fc8:	b7110202 	ldrlt	r0, [r1, -r2, lsl #4]
    8fcc:	02000000 	andeq	r0, r0, #0
    8fd0:	2a0a3423 	bcs	296064 <_Min_Heap_Size+0x295864>
    8fd4:	04000008 	streq	r0, [r0], #-8
    8fd8:	b7110203 	ldrlt	r0, [r1, -r3, lsl #4]
    8fdc:	02000000 	andeq	r0, r0, #0
    8fe0:	c60a3823 	strgt	r3, [sl], -r3, lsr #16
    8fe4:	04000008 	streq	r0, [r0], #-8
    8fe8:	ab110204 	blge	449800 <_Min_Heap_Size+0x449000>
    8fec:	02000000 	andeq	r0, r0, #0
    8ff0:	a70a3c23 	strge	r3, [sl, -r3, lsr #24]
    8ff4:	04000009 	streq	r0, [r0], #-9
    8ff8:	b7110205 	ldrlt	r0, [r1, -r5, lsl #4]
    8ffc:	02000000 	andeq	r0, r0, #0
    9000:	640a4023 	strvs	r4, [sl], #-35	; 0xffffffdd
    9004:	04000009 	streq	r0, [r0], #-9
    9008:	b7110206 	ldrlt	r0, [r1, -r6, lsl #4]
    900c:	02000000 	andeq	r0, r0, #0
    9010:	d00a4423 	andle	r4, sl, r3, lsr #8
    9014:	04000008 	streq	r0, [r0], #-8
    9018:	bc110207 	lfmlt	f0, 4, [r1], {7}
    901c:	02000000 	andeq	r0, r0, #0
    9020:	f20a4823 	vadd.i8	d4, d10, d19
    9024:	04000004 	streq	r0, [r0], #-4
    9028:	b7110208 	ldrlt	r0, [r1, -r8, lsl #4]
    902c:	02000000 	andeq	r0, r0, #0
    9030:	640a5023 	strvs	r5, [sl], #-35	; 0xffffffdd
    9034:	04000008 	streq	r0, [r0], #-8
    9038:	b7110209 	ldrlt	r0, [r1, -r9, lsl #4]
    903c:	02000000 	andeq	r0, r0, #0
    9040:	320a5423 	andcc	r5, sl, #587202560	; 0x23000000
    9044:	04000009 	streq	r0, [r0], #-9
    9048:	b711020a 	ldrlt	r0, [r1, -sl, lsl #4]
    904c:	02000000 	andeq	r0, r0, #0
    9050:	da0a5823 	ble	29f0e4 <_Min_Heap_Size+0x29e8e4>
    9054:	04000008 	streq	r0, [r0], #-8
    9058:	ab11020b 	blge	44988c <_Min_Heap_Size+0x44908c>
    905c:	02000000 	andeq	r0, r0, #0
    9060:	030a5c23 	movweq	r5, #44067	; 0xac23
    9064:	04000004 	streq	r0, [r0], #-4
    9068:	b711020c 	ldrlt	r0, [r1, -ip, lsl #4]
    906c:	02000000 	andeq	r0, r0, #0
    9070:	850a6023 	strhi	r6, [sl, #-35]	; 0xffffffdd
    9074:	04000007 	streq	r0, [r0], #-7
    9078:	b711020d 	ldrlt	r0, [r1, -sp, lsl #4]
    907c:	02000000 	andeq	r0, r0, #0
    9080:	e40a6423 	str	r6, [sl], #-1059	; 0xfffffbdd
    9084:	04000008 	streq	r0, [r0], #-8
    9088:	bc11020e 	lfmlt	f0, 4, [r1], {14}
    908c:	02000000 	andeq	r0, r0, #0
    9090:	ed0a6823 	stc	8, cr6, [sl, #-140]	; 0xffffff74
    9094:	0400000a 	streq	r0, [r0], #-10
    9098:	b711020f 	ldrlt	r0, [r1, -pc, lsl #4]
    909c:	02000000 	andeq	r0, r0, #0
    90a0:	43097023 	movwmi	r7, #36899	; 0x9023
    90a4:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    90a8:	b7110210 			; <UNDEFINED> instruction: 0xb7110210
    90ac:	02000000 	andeq	r0, r0, #0
    90b0:	ee0a7423 	cdp	4, 0, cr7, cr10, cr3, {1}
    90b4:	04000008 	streq	r0, [r0], #-8
    90b8:	bc110211 	lfmlt	f0, 4, [r1], {17}
    90bc:	02000000 	andeq	r0, r0, #0
    90c0:	bc0a7823 	stclt	8, cr7, [sl], {35}	; 0x23
    90c4:	0400000a 	streq	r0, [r0], #-10
    90c8:	b7110212 			; <UNDEFINED> instruction: 0xb7110212
    90cc:	03000000 	movweq	r0, #0
    90d0:	0a018023 	beq	69164 <_Min_Heap_Size+0x68964>
    90d4:	00000718 	andeq	r0, r0, r8, lsl r7
    90d8:	11021304 	tstne	r2, r4, lsl #6
    90dc:	000000b7 	strheq	r0, [r0], -r7
    90e0:	01842303 	orreq	r2, r4, r3, lsl #6
    90e4:	05940b00 	ldreq	r0, [r4, #2816]	; 0xb00
    90e8:	14040000 	strne	r0, [r4], #-0
    90ec:	027d0302 	rsbseq	r0, sp, #134217728	; 0x8000000
    90f0:	070c0000 	streq	r0, [ip, -r0]
    90f4:	00003c01 	andeq	r3, r0, r1, lsl #24
    90f8:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    90fc:	00000491 	muleq	r0, r1, r4
    9100:	0006cc0d 	andeq	ip, r6, sp, lsl #24
    9104:	530e0000 	movwpl	r0, #57344	; 0xe000
    9108:	01005445 	tsteq	r0, r5, asr #8
    910c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    9110:	0000010f 	andeq	r0, r0, pc, lsl #2
    9114:	3c01070c 	stccc	7, cr0, [r1], {12}
    9118:	06000000 	streq	r0, [r0], -r0
    911c:	04bf0127 	ldrteq	r0, [pc], #295	; 9124 <_Min_Heap_Size+0x8924>
    9120:	f60d0000 			; <UNDEFINED> instruction: 0xf60d0000
    9124:	00000006 	andeq	r0, r0, r6
    9128:	00099d0d 	andeq	r9, r9, sp, lsl #26
    912c:	860d0100 	strhi	r0, [sp], -r0, lsl #2
    9130:	0200000b 	andeq	r0, r0, #11
    9134:	0006d70d 	andeq	sp, r6, sp, lsl #14
    9138:	03000300 	movweq	r0, #768	; 0x300
    913c:	00001573 	andeq	r1, r0, r3, ror r5
    9140:	98032c06 	stmdals	r3, {r1, r2, sl, fp, sp}
    9144:	0f000004 	svceq	0x00000004
    9148:	092e0714 	stmdbeq	lr!, {r2, r4, r8, r9, sl}
    914c:	00000520 	andeq	r0, r0, r0, lsr #10
    9150:	6e695010 	mcrvs	0, 3, r5, cr9, cr0, {0}
    9154:	0c300700 	ldceq	7, cr0, [r0], #-0
    9158:	000000ab 	andeq	r0, r0, fp, lsr #1
    915c:	11002302 	tstne	r0, r2, lsl #6
    9160:	0000098d 	andeq	r0, r0, sp, lsl #19
    9164:	ab0c3307 	blge	315d88 <_Min_Heap_Size+0x315588>
    9168:	02000000 	andeq	r0, r0, #0
    916c:	d0110423 	andsle	r0, r1, r3, lsr #8
    9170:	0700000f 	streq	r0, [r0, -pc]
    9174:	00ab0c36 	adceq	r0, fp, r6, lsr ip
    9178:	23020000 	movwcs	r0, #8192	; 0x2000
    917c:	0bfa1108 	bleq	ffe8d5a4 <_estack+0xdfe8c36c>
    9180:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    9184:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    9188:	0c230200 	sfmeq	f0, 4, [r3], #-0
    918c:	000f5e11 	andeq	r5, pc, r1, lsl lr	; <UNPREDICTABLE>
    9190:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    9194:	000000ab 	andeq	r0, r0, fp, lsr #1
    9198:	00102302 	andseq	r2, r0, r2, lsl #6
    919c:	000d1e03 	andeq	r1, sp, r3, lsl #28
    91a0:	023e0700 	eorseq	r0, lr, #0, 14
    91a4:	000004cb 	andeq	r0, r0, fp, asr #9
    91a8:	3c01070c 	stccc	7, cr0, [r1], {12}
    91ac:	07000000 	streq	r0, [r0, -r0]
    91b0:	05470144 	strbeq	r0, [r7, #-324]	; 0xfffffebc
    91b4:	1a0d0000 	bne	3491bc <_Min_Heap_Size+0x3489bc>
    91b8:	0000001c 	andeq	r0, r0, ip, lsl r0
    91bc:	001bcd0d 	andseq	ip, fp, sp, lsl #26
    91c0:	03000100 	movweq	r0, #256	; 0x100
    91c4:	00001cc4 	andeq	r1, r0, r4, asr #25
    91c8:	2c024707 	stccs	7, cr4, [r2], {7}
    91cc:	12000005 	andne	r0, r0, #5
    91d0:	001c2901 	andseq	r2, ip, r1, lsl #18
    91d4:	01fb0100 	mvnseq	r0, r0, lsl #2
    91d8:	0000010d 	andeq	r0, r0, sp, lsl #2
    91dc:	00000000 	andeq	r0, r0, r0
    91e0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    91e4:	057e0100 	ldrbeq	r0, [lr, #-256]!	; 0xffffff00
    91e8:	82130000 	andshi	r0, r3, #0
    91ec:	0100001b 	tsteq	r0, fp, lsl r0
    91f0:	9f2d01fb 	svcls	0x002d01fb
    91f4:	01000000 	mrseq	r0, (UNDEF: 0)
    91f8:	01140050 	tsteq	r4, r0, asr r0
    91fc:	00001c45 	andeq	r1, r0, r5, asr #24
    9200:	0601ec01 	streq	lr, [r1], -r1, lsl #24
    9204:	00000001 	andeq	r0, r0, r1
    9208:	00000000 	andeq	r0, r0, r0
    920c:	005ddc00 	subseq	sp, sp, r0, lsl #24
    9210:	05b90100 	ldreq	r0, [r9, #256]!	; 0x100
    9214:	82150000 	andshi	r0, r5, #0
    9218:	0100001b 	tsteq	r0, fp, lsl r0
    921c:	9f2801ec 	svcls	0x002801ec
    9220:	04000000 	streq	r0, [r0], #-0
    9224:	fc00005e 	stc2	0, cr0, [r0], {94}	; 0x5e
    9228:	1600005d 			; <UNDEFINED> instruction: 0x1600005d
    922c:	00000000 	andeq	r0, r0, r0
    9230:	00000553 	andeq	r0, r0, r3, asr r5
    9234:	8b011700 	blhi	4ee3c <_Min_Heap_Size+0x4e63c>
    9238:	0100001b 	tsteq	r0, fp, lsl r0
    923c:	011301ca 	tsteq	r3, sl, asr #3
    9240:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
	...
    924c:	00005e3e 	andeq	r5, r0, lr, lsr lr
    9250:	00062e01 	andeq	r2, r6, r1, lsl #28
    9254:	1c7c1500 	cfldr64ne	mvdx1, [ip], #-0
    9258:	ca010000 	bgt	49260 <_Min_Heap_Size+0x48a60>
    925c:	062e3201 	strteq	r3, [lr], -r1, lsl #4
    9260:	5e8a0000 	cdppl	0, 8, cr0, cr10, cr0, {0}
    9264:	5e820000 	cdppl	0, 8, cr0, cr2, cr0, {0}
    9268:	82150000 	andshi	r0, r5, #0
    926c:	0100001b 	tsteq	r0, fp, lsl r0
    9270:	9f4201ca 	svcls	0x004201ca
    9274:	c6000000 	strgt	r0, [r0], -r0
    9278:	be00005e 	mcrlt	0, 0, r0, cr0, cr14, {2}
    927c:	1800005e 	stmdane	r0, {r1, r2, r3, r4, r6}
    9280:	00706d74 	rsbseq	r6, r0, r4, ror sp
    9284:	1101cc01 	tstne	r1, r1, lsl #24
    9288:	000000b7 	strheq	r0, [r0], -r7
    928c:	196c9102 	stmdbne	ip!, {r1, r8, ip, pc}^
    9290:	00000000 	andeq	r0, r0, r0
    9294:	000009ce 	andeq	r0, r0, lr, asr #19
    9298:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    929c:	002cdc03 	eoreq	sp, ip, r3, lsl #24
    92a0:	51011a08 	tstpl	r1, r8, lsl #20
    92a4:	01cf0a03 	biceq	r0, pc, r3, lsl #20
    92a8:	041b0000 	ldreq	r0, [fp], #-0
    92ac:	000001f3 	strdeq	r0, [r0], -r3
    92b0:	1bb50114 	blne	fed49708 <_estack+0xded484d0>
    92b4:	b1010000 	mrslt	r0, (UNDEF: 1)
    92b8:	00010601 	andeq	r0, r1, r1, lsl #12
	...
    92c4:	0100005f 	qaddeq	r0, pc, r0	; <UNPREDICTABLE>
    92c8:	000006aa 	andeq	r0, r0, sl, lsr #13
    92cc:	001c7c15 	andseq	r7, ip, r5, lsl ip
    92d0:	01b10100 			; <UNDEFINED> instruction: 0x01b10100
    92d4:	00062e27 	andeq	r2, r6, r7, lsr #28
    92d8:	005f2800 	subseq	r2, pc, r0, lsl #16
    92dc:	005f2000 	subseq	r2, pc, r0
    92e0:	1b821500 	blne	fe08e6e8 <_estack+0xde08d4b0>
    92e4:	b1010000 	mrslt	r0, (UNDEF: 1)
    92e8:	009f3701 	addseq	r3, pc, r1, lsl #14
    92ec:	5f640000 	svcpl	0x00640000
    92f0:	5f5c0000 	svcpl	0x005c0000
    92f4:	6f1c0000 	svcvs	0x001c0000
    92f8:	01007264 	tsteq	r0, r4, ror #4
    92fc:	ab0c01b3 	blge	3099d0 <_Min_Heap_Size+0x3091d0>
    9300:	a0000000 	andge	r0, r0, r0
    9304:	9e00005f 	mcrls	0, 0, r0, cr0, cr15, {2}
    9308:	1900005f 	stmdbne	r0, {r0, r1, r2, r3, r4, r6}
    930c:	00000000 	andeq	r0, r0, r0
    9310:	000009ce 	andeq	r0, r0, lr, asr #19
    9314:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    9318:	002cdc03 	eoreq	sp, ip, r3, lsl #24
    931c:	51011a08 	tstpl	r1, r8, lsl #20
    9320:	01b60a03 			; <UNDEFINED> instruction: 0x01b60a03
    9324:	01140000 	tsteq	r4, r0
    9328:	00001bf8 	strdeq	r1, [r0], -r8
    932c:	06019a01 	streq	r9, [r1], -r1, lsl #20
    9330:	00000001 	andeq	r0, r0, r1
    9334:	00000000 	andeq	r0, r0, r0
    9338:	005fb300 	subseq	fp, pc, r0, lsl #6
    933c:	073e0100 	ldreq	r0, [lr, -r0, lsl #2]!
    9340:	7c150000 	ldcvc	0, cr0, [r5], {-0}
    9344:	0100001c 	tsteq	r0, ip, lsl r0
    9348:	2e26019a 	mcrcs	1, 1, r0, cr6, cr10, {4}
    934c:	db000006 	blle	936c <_Min_Heap_Size+0x8b6c>
    9350:	d300005f 	movwle	r0, #95	; 0x5f
    9354:	1500005f 	strne	r0, [r0, #-95]	; 0xffffffa1
    9358:	00001b82 	andeq	r1, r0, r2, lsl #23
    935c:	36019a01 	strcc	r9, [r1], -r1, lsl #20
    9360:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9364:	00006017 	andeq	r6, r0, r7, lsl r0
    9368:	0000600f 	andeq	r6, r0, pc
    936c:	001cc915 	andseq	ip, ip, r5, lsl r9
    9370:	019a0100 	orrseq	r0, sl, r0, lsl #2
    9374:	0005474e 	andeq	r4, r5, lr, asr #14
    9378:	00605900 	rsbeq	r5, r0, r0, lsl #18
    937c:	00605100 	rsbeq	r5, r0, r0, lsl #2
    9380:	00001d00 	andeq	r1, r0, r0, lsl #26
    9384:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    9388:	07230000 	streq	r0, [r3, -r0]!
    938c:	011a0000 	tsteq	sl, r0
    9390:	dc030550 	cfstr32le	mvfx0, [r3], {80}	; 0x50
    9394:	1a08002c 	bne	20944c <_Min_Heap_Size+0x208c4c>
    9398:	0a035101 	beq	dd7a4 <_Min_Heap_Size+0xdcfa4>
    939c:	1900019d 	stmdbne	r0, {r0, r2, r3, r4, r7, r8}
    93a0:	00000000 	andeq	r0, r0, r0
    93a4:	000009ce 	andeq	r0, r0, lr, asr #19
    93a8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    93ac:	002cdc03 	eoreq	sp, ip, r3, lsl #24
    93b0:	51011a08 	tstpl	r1, r8, lsl #20
    93b4:	019e0a03 	orrseq	r0, lr, r3, lsl #20
    93b8:	01170000 	tsteq	r7, r0
    93bc:	00001be7 	andeq	r1, r0, r7, ror #23
    93c0:	0f017701 	svceq	0x00017701
    93c4:	00054701 	andeq	r4, r5, r1, lsl #14
	...
    93d0:	00609300 	rsbeq	r9, r0, r0, lsl #6
    93d4:	07b80100 	ldreq	r0, [r8, r0, lsl #2]!
    93d8:	7c150000 	ldcvc	0, cr0, [r5], {-0}
    93dc:	0100001c 	tsteq	r0, ip, lsl r0
    93e0:	2e2e0177 	mcrcs	1, 1, r0, cr14, cr7, {3}
    93e4:	bb000006 	bllt	9404 <_Min_Heap_Size+0x8c04>
    93e8:	b3000060 	movwlt	r0, #96	; 0x60
    93ec:	15000060 	strne	r0, [r0, #-96]	; 0xffffffa0
    93f0:	00001b82 	andeq	r1, r0, r2, lsl #23
    93f4:	3e017701 	cdpcc	7, 0, cr7, cr1, cr1, {0}
    93f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    93fc:	000060f7 	strdeq	r6, [r0], -r7
    9400:	000060ef 	andeq	r6, r0, pc, ror #1
    9404:	001c101e 	andseq	r1, ip, lr, lsl r0
    9408:	01790100 	cmneq	r9, r0, lsl #2
    940c:	00054711 	andeq	r4, r5, r1, lsl r7
    9410:	00613300 	rsbeq	r3, r1, r0, lsl #6
    9414:	00613100 	rsbeq	r3, r1, r0, lsl #2
    9418:	00001900 	andeq	r1, r0, r0, lsl #18
    941c:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    9420:	011a0000 	tsteq	sl, r0
    9424:	dc030550 	cfstr32le	mvfx0, [r3], {80}	; 0x50
    9428:	1a08002c 	bne	2094e0 <_Min_Heap_Size+0x208ce0>
    942c:	0a035101 	beq	dd838 <_Min_Heap_Size+0xdd038>
    9430:	0000017c 	andeq	r0, r0, ip, ror r1
    9434:	0d530114 	ldfeqe	f0, [r3, #-80]	; 0xffffffb0
    9438:	26010000 	strcs	r0, [r1], -r0
    943c:	00010601 	andeq	r0, r1, r1, lsl #12
    9440:	00000000 	andeq	r0, r0, r0
    9444:	46000000 	strmi	r0, [r0], -r0
    9448:	01000061 	tsteq	r0, r1, rrx
    944c:	0000086d 	andeq	r0, r0, sp, ror #16
    9450:	001c7c15 	andseq	r7, ip, r5, lsl ip
    9454:	01260100 			; <UNDEFINED> instruction: 0x01260100
    9458:	00062e25 	andeq	r2, r6, r5, lsr #28
    945c:	00616c00 	rsbeq	r6, r1, r0, lsl #24
    9460:	00616600 	rsbeq	r6, r1, r0, lsl #12
    9464:	1b821500 	blne	fe08e86c <_estack+0xde08d634>
    9468:	26010000 	strcs	r0, [r1], -r0
    946c:	00ab3501 	adceq	r3, fp, r1, lsl #10
    9470:	619e0000 	orrsvs	r0, lr, r0
    9474:	61980000 	orrsvs	r0, r8, r0
    9478:	9e1e0000 	cdpls	0, 1, cr0, cr14, cr0, {0}
    947c:	0100001b 	tsteq	r0, fp, lsl r0
    9480:	ab0c0128 	blge	309928 <_Min_Heap_Size+0x309128>
    9484:	cc000000 	stcgt	0, cr0, [r0], {-0}
    9488:	ca000061 	bgt	9614 <_Min_Heap_Size+0x8e14>
    948c:	1e000061 	cdpne	0, 0, cr0, cr0, cr1, {3}
    9490:	00001b9c 	muleq	r0, ip, fp
    9494:	0c012901 			; <UNDEFINED> instruction: 0x0c012901
    9498:	000000ab 	andeq	r0, r0, fp, lsr #1
    949c:	000061e7 	andeq	r6, r0, r7, ror #3
    94a0:	000061df 	ldrdeq	r6, [r0], -pc	; <UNPREDICTABLE>
    94a4:	001c5e1e 	andseq	r5, ip, lr, lsl lr
    94a8:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    94ac:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    94b0:	00622a00 	rsbeq	r2, r2, r0, lsl #20
    94b4:	00622000 	rsbeq	r2, r2, r0
    94b8:	6d741c00 	ldclvs	12, cr1, [r4, #-0]
    94bc:	2b010070 	blcs	49684 <_Min_Heap_Size+0x48e84>
    94c0:	00ab0c01 	adceq	r0, fp, r1, lsl #24
    94c4:	627e0000 	rsbsvs	r0, lr, #0
    94c8:	62760000 	rsbsvs	r0, r6, #0
    94cc:	00190000 	andseq	r0, r9, r0
    94d0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    94d4:	1a000009 	bne	9500 <_Min_Heap_Size+0x8d00>
    94d8:	03055001 	movweq	r5, #20481	; 0x5001
    94dc:	08002cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, sp}
    94e0:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    94e4:	00012e0a 	andeq	r2, r1, sl, lsl #28
    94e8:	a3011f00 	movwge	r1, #7936	; 0x1f00
    94ec:	0100000d 	tsteq	r0, sp
    94f0:	fc0106a4 	stc2	6, cr0, [r1], {164}	; 0xa4
    94f4:	e4080011 	str	r0, [r8], #-17	; 0xffffffef
    94f8:	b3080014 	movwlt	r0, #32788	; 0x8014
    94fc:	01000062 	tsteq	r0, r2, rrx
    9500:	000009c8 	andeq	r0, r0, r8, asr #19
    9504:	001c7c20 	andseq	r7, ip, r0, lsr #24
    9508:	23a40100 			; <UNDEFINED> instruction: 0x23a40100
    950c:	0000062e 	andeq	r0, r0, lr, lsr #12
    9510:	000062f1 	strdeq	r6, [r0], -r1
    9514:	000062eb 	andeq	r6, r0, fp, ror #5
    9518:	000da720 	andeq	sl, sp, r0, lsr #14
    951c:	3ca40100 	stfccs	f0, [r4]
    9520:	000009c8 	andeq	r0, r0, r8, asr #19
    9524:	00006323 	andeq	r6, r0, r3, lsr #6
    9528:	0000631d 	andeq	r6, r0, sp, lsl r3
    952c:	001b9e21 	andseq	r9, fp, r1, lsr #28
    9530:	0ca60100 	stfeqs	f0, [r6]
    9534:	000000ab 	andeq	r0, r0, fp, lsr #1
    9538:	00006351 	andeq	r6, r0, r1, asr r3
    953c:	0000634f 	andeq	r6, r0, pc, asr #6
    9540:	001b9c21 	andseq	r9, fp, r1, lsr #24
    9544:	0ca70100 	stfeqs	f0, [r7]
    9548:	000000ab 	andeq	r0, r0, fp, lsr #1
    954c:	00006376 	andeq	r6, r0, r6, ror r3
    9550:	00006364 	andeq	r6, r0, r4, ror #6
    9554:	001c5e21 	andseq	r5, ip, r1, lsr #28
    9558:	0ca80100 	stfeqs	f0, [r8]
    955c:	000000ab 	andeq	r0, r0, fp, lsr #1
    9560:	000063fd 	strdeq	r6, [r0], -sp
    9564:	000063f7 	strdeq	r6, [r0], -r7
    9568:	001bc821 	andseq	ip, fp, r1, lsr #16
    956c:	0ca90100 	stfeqs	f0, [r9]
    9570:	000000ab 	andeq	r0, r0, fp, lsr #1
    9574:	00006457 	andeq	r6, r0, r7, asr r4
    9578:	00006427 	andeq	r6, r0, r7, lsr #8
    957c:	00144022 	andseq	r4, r4, r2, lsr #32
    9580:	00145808 	andseq	r5, r4, r8, lsl #16
    9584:	00091d08 	andeq	r1, r9, r8, lsl #26
    9588:	057d2300 	ldrbeq	r2, [sp, #-768]!	; 0xfffffd00
    958c:	f1010000 	setend	le
    9590:	0000b709 	andeq	fp, r0, r9, lsl #14
    9594:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    9598:	12541d00 	subsne	r1, r4, #0, 26
    959c:	09ce0800 	stmibeq	lr, {fp}^
    95a0:	093a0000 	ldmdbeq	sl!, {}	; <UNPREDICTABLE>
    95a4:	011a0000 	tsteq	sl, r0
    95a8:	dc030550 	cfstr32le	mvfx0, [r3], {80}	; 0x50
    95ac:	1a08002c 	bne	209664 <_Min_Heap_Size+0x208e64>
    95b0:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    95b4:	681d00ac 	ldmdavs	sp, {r2, r3, r5, r7}
    95b8:	ce080012 	mcrgt	0, 0, r0, cr8, cr2, {0}
    95bc:	57000009 	strpl	r0, [r0, -r9]
    95c0:	1a000009 	bne	95ec <_Min_Heap_Size+0x8dec>
    95c4:	03055001 	movweq	r5, #20481	; 0x5001
    95c8:	08002cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, sp}
    95cc:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    95d0:	1d00ad08 	stcne	13, cr10, [r0, #-32]	; 0xffffffe0
    95d4:	080012ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, ip}
    95d8:	000009ce 	andeq	r0, r0, lr, asr #19
    95dc:	00000974 	andeq	r0, r0, r4, ror r9
    95e0:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    95e4:	002cdc03 	eoreq	sp, ip, r3, lsl #24
    95e8:	51011a08 	tstpl	r1, r8, lsl #20
    95ec:	00ae0802 	adceq	r0, lr, r2, lsl #16
    95f0:	0012e61d 	andseq	lr, r2, sp, lsl r6
    95f4:	0009ce08 	andeq	ip, r9, r8, lsl #28
    95f8:	00099100 	andeq	r9, r9, r0, lsl #2
    95fc:	50011a00 	andpl	r1, r1, r0, lsl #20
    9600:	2cdc0305 	ldclcs	3, cr0, [ip], {5}
    9604:	011a0800 	tsteq	sl, r0, lsl #16
    9608:	c0080251 	andgt	r0, r8, r1, asr r2
    960c:	12f01d00 	rscsne	r1, r0, #0, 26
    9610:	09ce0800 	stmibeq	lr, {fp}^
    9614:	09ae0000 	stmibeq	lr!, {}	; <UNPREDICTABLE>
    9618:	011a0000 	tsteq	sl, r0
    961c:	dc030550 	cfstr32le	mvfx0, [r3], {80}	; 0x50
    9620:	1a08002c 	bne	2096d8 <_Min_Heap_Size+0x208ed8>
    9624:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9628:	501900d1 	ldrsbpl	r0, [r9], -r1
    962c:	ce080013 	mcrgt	0, 0, r0, cr8, cr3, {0}
    9630:	1a000009 	bne	965c <_Min_Heap_Size+0x8e5c>
    9634:	03055001 	movweq	r5, #20481	; 0x5001
    9638:	08002cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, sp}
    963c:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    9640:	0000de08 	andeq	sp, r0, r8, lsl #28
    9644:	0520041b 	streq	r0, [r0, #-1051]!	; 0xfffffbe5
    9648:	01240000 			; <UNDEFINED> instruction: 0x01240000
    964c:	00080c01 	andeq	r0, r8, r1, lsl #24
    9650:	00080c00 	andeq	r0, r8, r0, lsl #24
    9654:	01e60800 	mvneq	r0, r0, lsl #16
    9658:	0dd30008 	ldcleq	0, cr0, [r3, #32]
    965c:	00020000 	andeq	r0, r2, r0
    9660:	000012c9 	andeq	r1, r0, r9, asr #5
    9664:	01310104 	teqeq	r1, r4, lsl #2
    9668:	ad0c0000 	stcge	0, cr0, [ip, #-0]
    966c:	4b00001d 	blmi	96e8 <_Min_Heap_Size+0x8ee8>
    9670:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    9674:	00000004 	andeq	r0, r0, r4
    9678:	00000000 	andeq	r0, r0, r0
    967c:	d0000000 	andle	r0, r0, r0
    9680:	0200006e 	andeq	r0, r0, #110	; 0x6e
    9684:	00960708 	addseq	r0, r6, r8, lsl #14
    9688:	04020000 	streq	r0, [r2], #-0
    968c:	0000a007 	andeq	sl, r0, r7
    9690:	06010200 	streq	r0, [r1], -r0, lsl #4
    9694:	000000e0 	andeq	r0, r0, r0, ror #1
    9698:	0000ad03 	andeq	sl, r0, r3, lsl #26
    969c:	182b0200 	stmdane	fp!, {r9}
    96a0:	0000004a 	andeq	r0, r0, sl, asr #32
    96a4:	de080102 	adflee	f0, f0, f2
    96a8:	02000000 	andeq	r0, r0, #0
    96ac:	01270502 			; <UNDEFINED> instruction: 0x01270502
    96b0:	02020000 	andeq	r0, r2, #0
    96b4:	00000e07 	andeq	r0, r0, r7, lsl #28
    96b8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    96bc:	00000005 	andeq	r0, r0, r5
    96c0:	00004003 	andeq	r4, r0, r3
    96c4:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    96c8:	00000072 	andeq	r0, r0, r2, ror r0
    96cc:	9b070402 	blls	1ca6dc <_Min_Heap_Size+0x1c9edc>
    96d0:	02000000 	andeq	r0, r0, #0
    96d4:	00000508 	andeq	r0, r0, r8, lsl #10
    96d8:	04040000 	streq	r0, [r4], #-0
    96dc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    96e0:	00af0300 	adceq	r0, pc, r0, lsl #6
    96e4:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    96e8:	00003e13 	andeq	r3, r0, r3, lsl lr
    96ec:	00870500 	addeq	r0, r7, r0, lsl #10
    96f0:	42030000 	andmi	r0, r3, #0
    96f4:	03000000 	movweq	r0, #0
    96f8:	00661430 	rsbeq	r1, r6, r0, lsr r4
    96fc:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    9700:	07000000 	streq	r0, [r0, -r0]
    9704:	00001a73 	andeq	r1, r0, r3, ror sl
    9708:	98113908 	ldmdals	r1, {r3, r8, fp, ip, sp}
    970c:	01000000 	mrseq	r0, (UNDEF: 0)
    9710:	00930801 	addseq	r0, r3, r1, lsl #16
    9714:	00c70000 	sbceq	r0, r7, r0
    9718:	30090000 	andcc	r0, r9, r0
    971c:	07000000 	streq	r0, [r0, -r0]
    9720:	00b70500 	adcseq	r0, r7, r0, lsl #10
    9724:	180a0000 	stmdane	sl, {}	; <UNPREDICTABLE>
    9728:	09014404 	stmdbeq	r1, {r2, sl, lr}
    972c:	00000136 	andeq	r0, r0, r6, lsr r1
    9730:	0052430b 	subseq	r4, r2, fp, lsl #6
    9734:	11014604 	tstne	r1, r4, lsl #12
    9738:	000000a4 	andeq	r0, r0, r4, lsr #1
    973c:	0c002302 	stceq	3, cr2, [r0], {2}
    9740:	00000a4c 	andeq	r0, r0, ip, asr #20
    9744:	11014704 	tstne	r1, r4, lsl #14
    9748:	000000a4 	andeq	r0, r0, r4, lsr #1
    974c:	0b042302 	bleq	11235c <_Min_Heap_Size+0x111b5c>
    9750:	00524150 	subseq	r4, r2, r0, asr r1
    9754:	11014804 	tstne	r1, r4, lsl #16
    9758:	000000a4 	andeq	r0, r0, r4, lsr #1
    975c:	0c082302 	stceq	3, cr2, [r8], {2}
    9760:	0000042a 	andeq	r0, r0, sl, lsr #8
    9764:	11014904 	tstne	r1, r4, lsl #18
    9768:	000000a4 	andeq	r0, r0, r4, lsr #1
    976c:	0c0c2302 	stceq	3, cr2, [ip], {2}
    9770:	00000a92 	muleq	r0, r2, sl
    9774:	11014a04 	tstne	r1, r4, lsl #20
    9778:	000000a4 	andeq	r0, r0, r4, lsr #1
    977c:	0b102302 	bleq	41238c <_Min_Heap_Size+0x411b8c>
    9780:	00524346 	subseq	r4, r2, r6, asr #6
    9784:	11014b04 	tstne	r1, r4, lsl #22
    9788:	000000a4 	andeq	r0, r0, r4, lsr #1
    978c:	00142302 	andseq	r2, r4, r2, lsl #6
    9790:	000a6b0d 	andeq	r6, sl, sp, lsl #22
    9794:	014c0400 	cmpeq	ip, r0, lsl #8
    9798:	0000cc03 	andeq	ip, r0, r3, lsl #24
    979c:	01070e00 	tsteq	r7, r0, lsl #28
    97a0:	0000004a 	andeq	r0, r0, sl, asr #32
    97a4:	5e01b905 	vmlapl.f16	s22, s2, s10	; <UNPREDICTABLE>
    97a8:	0f000001 	svceq	0x00000001
    97ac:	000006cc 	andeq	r0, r0, ip, asr #13
    97b0:	45531000 	ldrbmi	r1, [r3, #-0]
    97b4:	00010054 	andeq	r0, r1, r4, asr r0
    97b8:	0f040802 	svceq	0x00040802
    97bc:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    97c0:	004a0107 	subeq	r0, sl, r7, lsl #2
    97c4:	27060000 	strcs	r0, [r6, -r0]
    97c8:	00018c01 	andeq	r8, r1, r1, lsl #24
    97cc:	06f60f00 	ldrbteq	r0, [r6], r0, lsl #30
    97d0:	0f000000 	svceq	0x00000000
    97d4:	0000099d 	muleq	r0, sp, r9
    97d8:	0b860f01 	bleq	fe18d3e4 <_estack+0xde18c1ac>
    97dc:	0f020000 	svceq	0x00020000
    97e0:	000006d7 	ldrdeq	r0, [r0], -r7
    97e4:	73030003 	movwvc	r0, #12291	; 0x3003
    97e8:	06000015 			; <UNDEFINED> instruction: 0x06000015
    97ec:	0165032c 	cmneq	r5, ip, lsr #6
    97f0:	070e0000 	streq	r0, [lr, -r0]
    97f4:	00004a01 	andeq	r4, r0, r1, lsl #20
    97f8:	01320600 	teqeq	r2, r0, lsl #12
    97fc:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    9800:	000b790f 	andeq	r7, fp, pc, lsl #18
    9804:	1f0f0000 	svcne	0x000f0000
    9808:	01000008 	tsteq	r0, r8
    980c:	05840300 	streq	r0, [r4, #768]	; 0x300
    9810:	35060000 	strcc	r0, [r6, #-0]
    9814:	00019803 	andeq	r9, r1, r3, lsl #16
    9818:	07301100 	ldreq	r1, [r0, -r0, lsl #2]!
    981c:	027d0930 	rsbseq	r0, sp, #48, 18	; 0xc0000
    9820:	0f120000 	svceq	0x00120000
    9824:	07000009 	streq	r0, [r0, -r9]
    9828:	00980c32 	addseq	r0, r8, r2, lsr ip
    982c:	23020000 	movwcs	r0, #8192	; 0x2000
    9830:	06891200 	streq	r1, [r9], r0, lsl #4
    9834:	35070000 	strcc	r0, [r7, #-0]
    9838:	0000980c 	andeq	r9, r0, ip, lsl #16
    983c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9840:	0005c912 	andeq	ip, r5, r2, lsl r9
    9844:	0c390700 	ldceq	7, cr0, [r9], #-0
    9848:	00000098 	muleq	r0, r8, r0
    984c:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    9850:	00000a17 	andeq	r0, r0, r7, lsl sl
    9854:	980c3c07 	stmdals	ip, {r0, r1, r2, sl, fp, ip, sp}
    9858:	02000000 	andeq	r0, r0, #0
    985c:	97120c23 	ldrls	r0, [r2, -r3, lsr #24]
    9860:	0700000a 	streq	r0, [r0, -sl]
    9864:	00980c3f 	addseq	r0, r8, pc, lsr ip
    9868:	23020000 	movwcs	r0, #8192	; 0x2000
    986c:	07661210 			; <UNDEFINED> instruction: 0x07661210
    9870:	42070000 	andmi	r0, r7, #0
    9874:	0000980c 	andeq	r9, r0, ip, lsl #16
    9878:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    987c:	00098d12 	andeq	r8, r9, r2, lsl sp
    9880:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    9884:	00000098 	muleq	r0, r8, r0
    9888:	12182302 	andsne	r2, r8, #134217728	; 0x8000000
    988c:	00002217 	andeq	r2, r0, r7, lsl r2
    9890:	980c4a07 	stmdals	ip, {r0, r1, r2, r9, fp, lr}
    9894:	02000000 	andeq	r0, r0, #0
    9898:	89121c23 	ldmdbhi	r2, {r0, r1, r5, sl, fp, ip}
    989c:	07000009 	streq	r0, [r0, -r9]
    98a0:	00980c4d 	addseq	r0, r8, sp, asr #24
    98a4:	23020000 	movwcs	r0, #8192	; 0x2000
    98a8:	09c21220 	stmibeq	r2, {r5, r9, ip}^
    98ac:	52070000 	andpl	r0, r7, #0
    98b0:	0000980c 	andeq	r9, r0, ip, lsl #16
    98b4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    98b8:	0005dc12 	andeq	sp, r5, r2, lsl ip
    98bc:	0c550700 	mrrceq	7, 0, r0, r5, cr0
    98c0:	00000098 	muleq	r0, r8, r0
    98c4:	12282302 	eorne	r2, r8, #134217728	; 0x8000000
    98c8:	00000a1e 	andeq	r0, r0, lr, lsl sl
    98cc:	980c5b07 	stmdals	ip, {r0, r1, r2, r8, r9, fp, ip, lr}
    98d0:	02000000 	andeq	r0, r0, #0
    98d4:	03002c23 	movweq	r2, #3107	; 0xc23
    98d8:	0000042f 	andeq	r0, r0, pc, lsr #8
    98dc:	bf026007 	svclt	0x00026007
    98e0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    98e4:	004a0107 	subeq	r0, sl, r7, lsl #2
    98e8:	67070000 	strvs	r0, [r7, -r0]
    98ec:	0002bc01 	andeq	fp, r2, r1, lsl #24
    98f0:	06be0f00 	ldrteq	r0, [lr], r0, lsl #30
    98f4:	0f000000 	svceq	0x00000000
    98f8:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    98fc:	07cd0f01 	strbeq	r0, [sp, r1, lsl #30]
    9900:	0f020000 	svceq	0x00020000
    9904:	00000b13 	andeq	r0, r0, r3, lsl fp
    9908:	05f40f03 	ldrbeq	r0, [r4, #3843]!	; 0xf03
    990c:	0f040000 	svceq	0x00040000
    9910:	00000728 	andeq	r0, r0, r8, lsr #14
    9914:	1d030005 	stcne	0, cr0, [r3, #-20]	; 0xffffffec
    9918:	07000009 	streq	r0, [r0, -r9]
    991c:	0289026e 	addeq	r0, r9, #-536870906	; 0xe0000006
    9920:	bc060000 	stclt	0, cr0, [r6], {-0}
    9924:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    9928:	004a0107 	subeq	r0, sl, r7, lsl #2
    992c:	74070000 	strvc	r0, [r7], #-0
    9930:	0002e801 	andeq	lr, r2, r1, lsl #16
    9934:	1e020f00 	cdpne	15, 0, cr0, cr2, cr0, {0}
    9938:	0f000000 	svceq	0x00000000
    993c:	00001d89 	andeq	r1, r0, r9, lsl #27
    9940:	e5030001 	str	r0, [r3, #-1]
    9944:	0700001d 	smladeq	r0, sp, r0, r0
    9948:	02cd0277 	sbceq	r0, sp, #1879048199	; 0x70000007
    994c:	070e0000 	streq	r0, [lr, -r0]
    9950:	00004a01 	andeq	r4, r0, r1, lsl #20
    9954:	017d0700 	cmneq	sp, r0, lsl #14
    9958:	0000032d 	andeq	r0, r0, sp, lsr #6
    995c:	001d3b0f 	andseq	r3, sp, pc, lsl #22
    9960:	060f0000 	streq	r0, [pc], -r0
    9964:	0100001f 	tsteq	r0, pc, lsl r0
    9968:	001e400f 	andseq	r4, lr, pc
    996c:	220f0200 	andcs	r0, pc, #0, 4
    9970:	0300001f 	movweq	r0, #31
    9974:	001d700f 	andseq	r7, sp, pc
    9978:	d80f0400 	stmdale	pc, {sl}	; <UNPREDICTABLE>
    997c:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    9980:	001ec40f 	andseq	ip, lr, pc, lsl #8
    9984:	03000600 	movweq	r0, #1536	; 0x600
    9988:	00001e26 	andeq	r1, r0, r6, lsr #28
    998c:	f4028507 	vst3.8	{d8,d10,d12}, [r2], r7
    9990:	13000002 	movwne	r0, #2
    9994:	00000975 	andeq	r0, r0, r5, ror r9
    9998:	108a0760 	addne	r0, sl, r0, ror #14
    999c:	00000419 	andeq	r0, r0, r9, lsl r4
    99a0:	00083212 	andeq	r3, r8, r2, lsl r2
    99a4:	1f8c0700 	svcne	0x008c0700
    99a8:	00000419 	andeq	r0, r0, r9, lsl r4
    99ac:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    99b0:	00001cf9 	strdeq	r1, [r0], -r9
    99b4:	7d1e8e07 	ldcvc	14, cr8, [lr, #-28]	; 0xffffffe4
    99b8:	02000002 	andeq	r0, r0, #2
    99bc:	6f120423 	svcvs	0x00120423
    99c0:	07000006 	streq	r0, [r0, -r6]
    99c4:	01b31e90 			; <UNDEFINED> instruction: 0x01b31e90
    99c8:	23020000 	movwcs	r0, #8192	; 0x2000
    99cc:	06b81234 			; <UNDEFINED> instruction: 0x06b81234
    99d0:	92070000 	andls	r0, r7, #0
    99d4:	0002c81e 	andeq	ip, r2, lr, lsl r8
    99d8:	35230200 	strcc	r0, [r3, #-512]!	; 0xfffffe00
    99dc:	00066812 	andeq	r6, r6, r2, lsl r8
    99e0:	1f940700 	svcne	0x00940700
    99e4:	0000041f 	andeq	r0, r0, pc, lsl r4
    99e8:	12382302 	eorsne	r2, r8, #134217728	; 0x8000000
    99ec:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    99f0:	33219607 			; <UNDEFINED> instruction: 0x33219607
    99f4:	02000004 	andeq	r0, r0, #4
    99f8:	a0123c23 	andsge	r3, r2, r3, lsr #24
    99fc:	07000005 	streq	r0, [r0, -r5]
    9a00:	04332198 	ldrteq	r2, [r3], #-408	; 0xfffffe68
    9a04:	23020000 	movwcs	r0, #8192	; 0x2000
    9a08:	055e1240 	ldrbeq	r1, [lr, #-576]	; 0xfffffdc0
    9a0c:	9a070000 	bls	1c9a14 <_Min_Heap_Size+0x1c9214>
    9a10:	00043321 	andeq	r3, r4, r1, lsr #6
    9a14:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    9a18:	0008f812 	andeq	pc, r8, r2, lsl r8	; <UNPREDICTABLE>
    9a1c:	219c0700 	orrscs	r0, ip, r0, lsl #14
    9a20:	00000433 	andeq	r0, r0, r3, lsr r4
    9a24:	12482302 	subne	r2, r8, #134217728	; 0x8000000
    9a28:	0000083b 	andeq	r0, r0, fp, lsr r8
    9a2c:	33219e07 			; <UNDEFINED> instruction: 0x33219e07
    9a30:	02000004 	andeq	r0, r0, #4
    9a34:	aa124c23 	bge	49cac8 <_Min_Heap_Size+0x49c2c8>
    9a38:	0700000b 	streq	r0, [r0, -fp]
    9a3c:	043321a0 	ldrteq	r2, [r3], #-416	; 0xfffffe60
    9a40:	23020000 	movwcs	r0, #8192	; 0x2000
    9a44:	07471250 	smlsldeq	r1, r7, r0, r2
    9a48:	a2070000 	andge	r0, r7, #0
    9a4c:	0000a41e 	andeq	sl, r0, lr, lsl r4
    9a50:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    9a54:	00065112 	andeq	r5, r6, r2, lsl r1
    9a58:	1ea40700 	cdpne	7, 10, cr0, cr4, cr0, {0}
    9a5c:	00000098 	muleq	r0, r8, r0
    9a60:	12582302 	subsne	r2, r8, #134217728	; 0x8000000
    9a64:	000006ea 	andeq	r0, r0, sl, ror #13
    9a68:	981ea607 	ldmdals	lr, {r0, r1, r2, r9, sl, sp, pc}
    9a6c:	02000000 	andeq	r0, r0, #0
    9a70:	14005c23 	strne	r5, [r0], #-3107	; 0xfffff3dd
    9a74:	00013604 	andeq	r3, r1, r4, lsl #12
    9a78:	16041500 	strne	r1, [r4], -r0, lsl #10
    9a7c:	00042d01 	andeq	r2, r4, r1, lsl #26
    9a80:	042d1700 	strteq	r1, [sp], #-1792	; 0xfffff900
    9a84:	14000000 	strne	r0, [r0], #-0
    9a88:	00033904 	andeq	r3, r3, r4, lsl #18
    9a8c:	21041400 	tstcs	r4, r0, lsl #8
    9a90:	03000004 	movweq	r0, #4
    9a94:	00000977 	andeq	r0, r0, r7, ror r9
    9a98:	3902a807 	stmdbcc	r2, {r0, r1, r2, fp, sp, pc}
    9a9c:	14000003 	strne	r0, [r0], #-3
    9aa0:	00043904 	andeq	r3, r4, r4, lsl #18
    9aa4:	010c1100 	mrseq	r1, (UNDEF: 28)
    9aa8:	0482096f 	streq	r0, [r2], #2415	; 0x96f
    9aac:	49180000 	ldmdbmi	r8, {}	; <UNPREDICTABLE>
    9ab0:	01005253 	tsteq	r0, r3, asr r2
    9ab4:	00a41171 	adceq	r1, r4, r1, ror r1
    9ab8:	23020000 	movwcs	r0, #8192	; 0x2000
    9abc:	1d171200 	lfmne	f1, 4, [r7, #-0]
    9ac0:	72010000 	andvc	r0, r1, #0
    9ac4:	0000a411 	andeq	sl, r0, r1, lsl r4
    9ac8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9acc:	001e6812 	andseq	r6, lr, r2, lsl r8
    9ad0:	11730100 	cmnne	r3, r0, lsl #2
    9ad4:	000000a4 	andeq	r0, r0, r4, lsr #1
    9ad8:	00082302 	andeq	r2, r8, r2, lsl #6
    9adc:	001edb03 	andseq	sp, lr, r3, lsl #22
    9ae0:	03740100 	cmneq	r4, #0, 2
    9ae4:	0000044b 	andeq	r0, r0, fp, asr #8
    9ae8:	001e8319 	andseq	r8, lr, r9, lsl r3
    9aec:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
    9af0:	018c011a 	orreq	r0, ip, sl, lsl r1
	...
    9afc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9b00:	04ec0100 	strbteq	r0, [ip], #256	; 0x100
    9b04:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    9b08:	01000015 	tsteq	r0, r5, lsl r0
    9b0c:	454004bd 	strbmi	r0, [r0, #-1213]	; 0xfffffb43
    9b10:	ab000004 	blge	9b28 <_Min_Heap_Size+0x9328>
    9b14:	6f000065 	svcvs	0x00000065
    9b18:	1b000065 	blne	9cb4 <_Min_Heap_Size+0x94b4>
    9b1c:	00001c13 	andeq	r1, r0, r3, lsl ip
    9b20:	1504bf01 	strne	fp, [r4, #-3841]	; 0xfffff0ff
    9b24:	0000018c 	andeq	r0, r0, ip, lsl #3
    9b28:	0000672e 	andeq	r6, r0, lr, lsr #14
    9b2c:	0000672a 	andeq	r6, r0, sl, lsr #14
    9b30:	706d741c 	rsbvc	r7, sp, ip, lsl r4
    9b34:	04c00100 	strbeq	r0, [r0], #256	; 0x100
    9b38:	0000980c 	andeq	r9, r0, ip, lsl #16
    9b3c:	00678300 	rsbeq	r8, r7, r0, lsl #6
    9b40:	00674d00 	rsbeq	r4, r7, r0, lsl #26
    9b44:	ee1d0000 	cdp	0, 1, cr0, cr13, cr0, {0}
    9b48:	0100001e 	tsteq	r0, lr, lsl r0
    9b4c:	011104a1 	tsteq	r1, r1, lsr #9
    9b50:	00000098 	muleq	r0, r8, r0
	...
    9b5c:	000068e6 	andeq	r6, r0, r6, ror #17
    9b60:	00054901 	andeq	r4, r5, r1, lsl #18
    9b64:	15fc1a00 	ldrbne	r1, [ip, #2560]!	; 0xa00
    9b68:	a1010000 	mrsge	r0, (UNDEF: 1)
    9b6c:	04453c04 	strbeq	r3, [r5], #-3076	; 0xfffff3fc
    9b70:	69240000 	stmdbvs	r4!, {}	; <UNPREDICTABLE>
    9b74:	691e0000 	ldmdbvs	lr, {}	; <UNPREDICTABLE>
    9b78:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    9b7c:	0100001e 	tsteq	r0, lr, lsl r0
    9b80:	980c04a3 	stmdals	ip, {r0, r1, r5, r7, sl}
    9b84:	54000000 	strpl	r0, [r0], #-0
    9b88:	50000069 	andpl	r0, r0, r9, rrx
    9b8c:	1e000069 	cdpne	0, 0, cr0, cr0, cr9, {3}
    9b90:	00001d21 	andeq	r1, r0, r1, lsr #26
    9b94:	1804a601 	stmdane	r4, {r0, r9, sl, sp, pc}
    9b98:	000000c7 	andeq	r0, r0, r7, asr #1
    9b9c:	00000305 	andeq	r0, r0, r5, lsl #6
    9ba0:	1f000000 	svcne	0x00000000
    9ba4:	00001d9f 	muleq	r0, pc, sp	; <UNPREDICTABLE>
    9ba8:	0d047f01 	stceq	15, cr7, [r4, #-4]
    9bac:	00000001 	andeq	r0, r0, r1
    9bb0:	00000000 	andeq	r0, r0, r0
    9bb4:	00698f00 	rsbeq	r8, r9, r0, lsl #30
    9bb8:	05a70100 	streq	r0, [r7, #256]!	; 0x100
    9bbc:	fc200000 	stc2	0, cr0, [r0], #-0
    9bc0:	01000015 	tsteq	r0, r5, lsl r0
    9bc4:	452e047f 	strmi	r0, [lr, #-1151]!	; 0xfffffb81
    9bc8:	01000004 	tsteq	r0, r4
    9bcc:	1f462050 	svcne	0x00462050
    9bd0:	7f010000 	svcvc	0x00010000
    9bd4:	00983d04 	addseq	r3, r8, r4, lsl #26
    9bd8:	51010000 	mrspl	r0, (UNDEF: 1)
    9bdc:	001e6d20 	andseq	r6, lr, r0, lsr #26
    9be0:	047f0100 	ldrbteq	r0, [pc], #-256	; 9be8 <_Min_Heap_Size+0x93e8>
    9be4:	00009852 	andeq	r9, r0, r2, asr r8
    9be8:	1a520100 	bne	1489ff0 <_Min_Heap_Size+0x14897f0>
    9bec:	00001f51 	andeq	r1, r0, r1, asr pc
    9bf0:	67047f01 	strvs	r7, [r4, -r1, lsl #30]
    9bf4:	00000098 	muleq	r0, r8, r0
    9bf8:	000069d1 	ldrdeq	r6, [r0], -r1
    9bfc:	000069c7 	andeq	r6, r0, r7, asr #19
    9c00:	da012100 	ble	52008 <_Min_Heap_Size+0x51808>
    9c04:	01000018 	tsteq	r0, r8, lsl r0
    9c08:	010a0465 	tsteq	sl, r5, ror #8
    9c0c:	00000098 	muleq	r0, r8, r0
	...
    9c18:	01007d02 	tsteq	r0, r2, lsl #26
    9c1c:	000005dc 	ldrdeq	r0, [r0], -ip
    9c20:	0015fc1a 	andseq	pc, r5, sl, lsl ip	; <UNPREDICTABLE>
    9c24:	04650100 	strbteq	r0, [r5], #-256	; 0xffffff00
    9c28:	0004452e 	andeq	r4, r4, lr, lsr #10
    9c2c:	006a1c00 	rsbeq	r1, sl, r0, lsl #24
    9c30:	006a1800 	rsbeq	r1, sl, r0, lsl #16
    9c34:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9c38:	00001f5c 	andeq	r1, r0, ip, asr pc
    9c3c:	16045a01 	strne	r5, [r4], -r1, lsl #20
    9c40:	0002bc01 	andeq	fp, r2, r1, lsl #24
	...
    9c4c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9c50:	00061101 	andeq	r1, r6, r1, lsl #2
    9c54:	15fc1a00 	ldrbne	r1, [ip, #2560]!	; 0xa00
    9c58:	5a010000 	bpl	49c60 <_Min_Heap_Size+0x49460>
    9c5c:	04453a04 	strbeq	r3, [r5], #-2564	; 0xfffff5fc
    9c60:	6a410000 	bvs	1049c68 <_Min_Heap_Size+0x1049468>
    9c64:	6a3d0000 	bvs	f49c6c <_Min_Heap_Size+0xf4946c>
    9c68:	21000000 	mrscs	r0, (UNDEF: 0)
    9c6c:	001e9601 	andseq	r9, lr, r1, lsl #12
    9c70:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    9c74:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    9c80:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9c84:	066a0100 	strbteq	r0, [sl], -r0, lsl #2
    9c88:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    9c8c:	01000015 	tsteq	r0, r5, lsl r0
    9c90:	45410405 	strbmi	r0, [r1, #-1029]	; 0xfffffbfb
    9c94:	6a000004 	bvs	9cac <_Min_Heap_Size+0x94ac>
    9c98:	6200006a 	andvs	r0, r0, #106	; 0x6a
    9c9c:	2000006a 	andcs	r0, r0, sl, rrx
    9ca0:	00001e78 	andeq	r1, r0, r8, ror lr
    9ca4:	61040501 	tstvs	r4, r1, lsl #10
    9ca8:	0000032d 	andeq	r0, r0, sp, lsr #6
    9cac:	131b5101 	tstne	fp, #1073741824	; 0x40000000
    9cb0:	0100001c 	tsteq	r0, ip, lsl r0
    9cb4:	8c150407 	cfldrshi	mvf0, [r5], {7}
    9cb8:	a4000001 	strge	r0, [r0], #-1
    9cbc:	9e00006a 	cdpls	0, 0, cr0, cr0, cr10, {3}
    9cc0:	0000006a 	andeq	r0, r0, sl, rrx
    9cc4:	1cfe0121 	ldfnee	f0, [lr], #132	; 0x84
    9cc8:	c7010000 	strgt	r0, [r1, -r0]
    9ccc:	8c011303 	stchi	3, cr1, [r1], {3}
    9cd0:	00000001 	andeq	r0, r0, r1
    9cd4:	00000000 	andeq	r0, r0, r0
    9cd8:	02000000 	andeq	r0, r0, #0
    9cdc:	d801007d 	stmdale	r1, {r0, r2, r3, r4, r5, r6}
    9ce0:	1a000006 	bne	9d00 <_Min_Heap_Size+0x9500>
    9ce4:	000015fc 	strdeq	r1, [r0], -ip
    9ce8:	3f03c701 	svccc	0x0003c701
    9cec:	00000445 	andeq	r0, r0, r5, asr #8
    9cf0:	00006ad3 	ldrdeq	r6, [r0], -r3
    9cf4:	00006acf 	andeq	r6, r0, pc, asr #21
    9cf8:	001e7820 	andseq	r7, lr, r0, lsr #16
    9cfc:	03c70100 	biceq	r0, r7, #0, 2
    9d00:	00032d5f 	andeq	r2, r3, pc, asr sp
    9d04:	1a510100 	bne	144a10c <_Min_Heap_Size+0x144990c>
    9d08:	00001f6d 	andeq	r1, r0, sp, ror #30
    9d0c:	7303c701 	movwvc	ip, #14081	; 0x3701
    9d10:	000006e4 	andeq	r0, r0, r4, ror #13
    9d14:	00006af7 	strdeq	r6, [r0], -r7
    9d18:	00006af1 	strdeq	r6, [r0], -r1
    9d1c:	001c131b 	andseq	r1, ip, fp, lsl r3
    9d20:	03ca0100 	biceq	r0, sl, #0, 2
    9d24:	00018c15 	andeq	r8, r1, r5, lsl ip
    9d28:	006b2900 	rsbeq	r2, fp, r0, lsl #18
    9d2c:	006b2300 	rsbeq	r2, fp, r0, lsl #6
    9d30:	01160000 	tsteq	r6, r0
    9d34:	000006e4 	andeq	r0, r0, r4, ror #13
    9d38:	00044517 	andeq	r4, r4, r7, lsl r5
    9d3c:	04140000 	ldreq	r0, [r4], #-0
    9d40:	000006d8 	ldrdeq	r0, [r0], -r8
    9d44:	1eb10122 	frdnesp	f0, f1, f2
    9d48:	ea010000 	b	49d50 <_Min_Heap_Size+0x49550>
    9d4c:	00010602 	andeq	r0, r1, r2, lsl #12
    9d50:	00000000 	andeq	r0, r0, r0
    9d54:	54000000 	strpl	r0, [r0], #-0
    9d58:	0100006b 	tsteq	r0, fp, rrx
    9d5c:	000007e7 	andeq	r0, r0, r7, ror #15
    9d60:	0015fc1a 	andseq	pc, r5, sl, lsl ip	; <UNPREDICTABLE>
    9d64:	02ea0100 	rsceq	r0, sl, #0, 2
    9d68:	0004452c 	andeq	r4, r4, ip, lsr #10
    9d6c:	006b9a00 	rsbeq	r9, fp, r0, lsl #20
    9d70:	006b8c00 	rsbeq	r8, fp, r0, lsl #24
    9d74:	1d341b00 	vldmdbne	r4!, {d1-d0}
    9d78:	ec010000 	stc	0, cr0, [r1], {-0}
    9d7c:	00980c02 	addseq	r0, r8, r2, lsl #24
    9d80:	6bf40000 	blvs	ffd09d88 <_estack+0xdfd08b50>
    9d84:	6bf20000 	blvs	ffc89d8c <_estack+0xdfc88b54>
    9d88:	401e0000 	andsmi	r0, lr, r0
    9d8c:	0100001f 	tsteq	r0, pc, lsl r0
    9d90:	a41102ed 	ldrge	r0, [r1], #-749	; 0xfffffd13
    9d94:	02000000 	andeq	r0, r0, #0
    9d98:	771b6491 			; <UNDEFINED> instruction: 0x771b6491
    9d9c:	0100001f 	tsteq	r0, pc, lsl r0
    9da0:	980c02ee 	stmdals	ip, {r1, r2, r3, r5, r6, r7, r9}
    9da4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9da8:	0700006c 	streq	r0, [r0, -ip, rrx]
    9dac:	1b00006c 	blne	9f64 <_Min_Heap_Size+0x9764>
    9db0:	00001f7f 	andeq	r1, r0, pc, ror pc
    9db4:	1702f101 	strne	pc, [r2, -r1, lsl #2]
    9db8:	000007e7 	andeq	r0, r0, r7, ror #15
    9dbc:	00006c1e 	andeq	r6, r0, lr, lsl ip
    9dc0:	00006c1c 	andeq	r6, r0, ip, lsl ip
    9dc4:	00000023 	andeq	r0, r0, r3, lsr #32
    9dc8:	00077a00 	andeq	r7, r7, r0, lsl #20
    9dcc:	50012400 	andpl	r2, r1, r0, lsl #8
    9dd0:	00007402 	andeq	r7, r0, r2, lsl #8
    9dd4:	00000023 	andeq	r0, r0, r3, lsr #32
    9dd8:	00078a00 	andeq	r8, r7, r0, lsl #20
    9ddc:	50012400 	andpl	r2, r1, r0, lsl #8
    9de0:	00007402 	andeq	r7, r0, r2, lsl #8
    9de4:	00000023 	andeq	r0, r0, r3, lsr #32
    9de8:	00079a00 	andeq	r9, r7, r0, lsl #20
    9dec:	50012400 	andpl	r2, r1, r0, lsl #8
    9df0:	00007402 	andeq	r7, r0, r2, lsl #8
    9df4:	00000023 	andeq	r0, r0, r3, lsr #32
    9df8:	0007aa00 	andeq	sl, r7, r0, lsl #20
    9dfc:	50012400 	andpl	r2, r1, r0, lsl #8
    9e00:	00007402 	andeq	r7, r0, r2, lsl #8
    9e04:	00000023 	andeq	r0, r0, r3, lsr #32
    9e08:	0007ba00 	andeq	fp, r7, r0, lsl #20
    9e0c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e10:	00007402 	andeq	r7, r0, r2, lsl #8
    9e14:	00000023 	andeq	r0, r0, r3, lsr #32
    9e18:	0007ca00 	andeq	ip, r7, r0, lsl #20
    9e1c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e20:	00007402 	andeq	r7, r0, r2, lsl #8
    9e24:	00000023 	andeq	r0, r0, r3, lsr #32
    9e28:	0007da00 	andeq	sp, r7, r0, lsl #20
    9e2c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e30:	00007402 	andeq	r7, r0, r2, lsl #8
    9e34:	00000025 	andeq	r0, r0, r5, lsr #32
    9e38:	50012400 	andpl	r2, r1, r0, lsl #8
    9e3c:	00007402 	andeq	r7, r0, r2, lsl #8
    9e40:	82041400 	andhi	r1, r4, #0, 8
    9e44:	26000004 	strcs	r0, [r0], -r4
    9e48:	001f9301 	andseq	r9, pc, r1, lsl #6
    9e4c:	02620100 	rsbeq	r0, r2, #0, 2
    9e50:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    9e5c:	6c310000 	ldcvs	0, cr0, [r1], #-0
    9e60:	d1010000 	mrsle	r0, (UNDEF: 1)
    9e64:	1a000008 	bne	9e8c <_Min_Heap_Size+0x968c>
    9e68:	000015fc 	strdeq	r1, [r0], -ip
    9e6c:	3e026201 	cdpcc	2, 0, cr6, cr2, cr1, {0}
    9e70:	00000445 	andeq	r0, r0, r5, asr #8
    9e74:	00006c55 	andeq	r6, r0, r5, asr ip
    9e78:	00006c51 	andeq	r6, r0, r1, asr ip
    9e7c:	001e5a1a 	andseq	r5, lr, sl, lsl sl
    9e80:	02620100 	rsbeq	r0, r2, #0, 2
    9e84:	0002e861 	andeq	lr, r2, r1, ror #16
    9e88:	006c7700 	rsbeq	r7, ip, r0, lsl #14
    9e8c:	006c7300 	rsbeq	r7, ip, r0, lsl #6
    9e90:	16a91a00 	strtne	r1, [r9], r0, lsl #20
    9e94:	62010000 	andvs	r0, r1, #0
    9e98:	00987902 	addseq	r7, r8, r2, lsl #18
    9e9c:	6c9c0000 	ldcvs	0, cr0, [ip], {0}
    9ea0:	6c980000 	ldcvs	0, cr0, [r8], {0}
    9ea4:	13270000 			; <UNDEFINED> instruction: 0x13270000
    9ea8:	0100001c 	tsteq	r0, ip, lsl r0
    9eac:	8c150264 	lfmhi	f0, 4, [r5], {100}	; 0x64
    9eb0:	00000001 	andeq	r0, r0, r1
    9eb4:	001f841b 	andseq	r8, pc, fp, lsl r4	; <UNPREDICTABLE>
    9eb8:	02650100 	rsbeq	r0, r5, #0, 2
    9ebc:	0000980c 	andeq	r9, r0, ip, lsl #16
    9ec0:	006cbe00 	rsbeq	fp, ip, r0, lsl #28
    9ec4:	006cba00 	rsbeq	fp, ip, r0, lsl #20
    9ec8:	17be1b00 	ldrne	r1, [lr, r0, lsl #22]!
    9ecc:	66010000 	strvs	r0, [r1], -r0
    9ed0:	00980c02 	addseq	r0, r8, r2, lsl #24
    9ed4:	6cea0000 	stclvs	0, cr0, [sl]
    9ed8:	6cdc0000 	ldclvs	0, cr0, [ip], {0}
    9edc:	341b0000 	ldrcc	r0, [fp], #-0
    9ee0:	0100001d 	tsteq	r0, sp, lsl r0
    9ee4:	980c0267 	stmdals	ip, {r0, r1, r2, r5, r6, r9}
    9ee8:	43000000 	movwmi	r0, #0
    9eec:	3f00006d 	svccc	0x0000006d
    9ef0:	1b00006d 	blne	a0ac <_Min_Heap_Size+0x98ac>
    9ef4:	00001f7f 	andeq	r1, r0, pc, ror pc
    9ef8:	17026a01 	strne	r6, [r2, -r1, lsl #20]
    9efc:	000007e7 	andeq	r0, r0, r7, ror #15
    9f00:	00006d65 	andeq	r6, r0, r5, ror #26
    9f04:	00006d61 	andeq	r6, r0, r1, ror #26
    9f08:	00000028 	andeq	r0, r0, r8, lsr #32
    9f0c:	000db900 	andeq	fp, sp, r0, lsl #18
    9f10:	00002800 	andeq	r2, r0, r0, lsl #16
    9f14:	0db90000 	ldceq	0, cr0, [r9]
    9f18:	00290000 	eoreq	r0, r9, r0
    9f1c:	06000000 	streq	r0, [r0], -r0
    9f20:	24000009 	strcs	r0, [r0], #-9
    9f24:	74025001 	strvc	r5, [r2], #-1
    9f28:	21000000 	mrscs	r0, (UNDEF: 0)
    9f2c:	00134901 	andseq	r4, r3, r1, lsl #18
    9f30:	02440100 	subeq	r0, r4, #0, 2
    9f34:	018c0113 	orreq	r0, ip, r3, lsl r1
    9f38:	15780000 	ldrbne	r0, [r8, #-0]!
    9f3c:	159e0800 	ldrne	r0, [lr, #2048]	; 0x800
    9f40:	7d020800 	stcvc	8, cr0, [r2, #-0]
    9f44:	09060100 	stmdbeq	r6, {r8}
    9f48:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    9f4c:	01000015 	tsteq	r0, r5, lsl r0
    9f50:	45370244 	ldrmi	r0, [r7, #-580]!	; 0xfffffdbc
    9f54:	8b000004 	blhi	9f6c <_Min_Heap_Size+0x976c>
    9f58:	8300006d 	movwhi	r0, #109	; 0x6d
    9f5c:	0000006d 	andeq	r0, r0, sp, rrx
    9f60:	15850126 	strne	r0, [r5, #294]	; 0x126
    9f64:	01010000 	mrseq	r0, (UNDEF: 1)
    9f68:	8c011302 	stchi	3, cr1, [r1], {2}
    9f6c:	e4000001 	str	r0, [r0], #-1
    9f70:	78080014 	stmdavc	r8, {r2, r4}
    9f74:	c5080015 	strgt	r0, [r8, #-21]	; 0xffffffeb
    9f78:	0100006d 	tsteq	r0, sp, rrx
    9f7c:	00000978 	andeq	r0, r0, r8, ror r9
    9f80:	0015fc1a 	andseq	pc, r5, sl, lsl ip	; <UNPREDICTABLE>
    9f84:	02010100 	andeq	r0, r1, #0, 2
    9f88:	00044534 	andeq	r4, r4, r4, lsr r5
    9f8c:	006de900 	rsbeq	lr, sp, r0, lsl #18
    9f90:	006de500 	rsbeq	lr, sp, r0, lsl #10
    9f94:	1f7f1b00 	svcne	0x007f1b00
    9f98:	04010000 	streq	r0, [r1], #-0
    9f9c:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    9fa0:	6e090000 	cdpvs	0, 0, cr0, cr9, cr0, {0}
    9fa4:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    9fa8:	be1b0000 	cdplt	0, 1, cr0, cr11, cr0, {0}
    9fac:	01000017 	tsteq	r0, r7, lsl r0
    9fb0:	980c0206 	stmdals	ip, {r1, r2, r9}
    9fb4:	26000000 	strcs	r0, [r0], -r0
    9fb8:	1c00006e 	stcne	0, cr0, [r0], {110}	; 0x6e
    9fbc:	2800006e 	stmdacs	r0, {r1, r2, r3, r5, r6}
    9fc0:	080014ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, sl, ip}
    9fc4:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    9fc8:	00154228 	andseq	r4, r5, r8, lsr #4
    9fcc:	000db908 	andeq	fp, sp, r8, lsl #18
    9fd0:	01260000 			; <UNDEFINED> instruction: 0x01260000
    9fd4:	00001423 	andeq	r1, r0, r3, lsr #8
    9fd8:	1301c301 	movwne	ip, #4865	; 0x1301
    9fdc:	00018c01 	andeq	r8, r1, r1, lsl #24
	...
    9fe8:	006e6500 	rsbeq	r6, lr, r0, lsl #10
    9fec:	0a570100 	beq	15ca3f4 <_Min_Heap_Size+0x15c9bf4>
    9ff0:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    9ff4:	01000015 	tsteq	r0, r5, lsl r0
    9ff8:	453701c3 	ldrmi	r0, [r7, #-451]!	; 0xfffffe3d
    9ffc:	8d000004 	stchi	0, cr0, [r0, #-16]
    a000:	8500006e 	strhi	r0, [r0, #-110]	; 0xffffff92
    a004:	1a00006e 	bne	a1c4 <_Min_Heap_Size+0x99c4>
    a008:	00001f46 	andeq	r1, r0, r6, asr #30
    a00c:	4601c301 	strmi	ip, [r1], -r1, lsl #6
    a010:	00000098 	muleq	r0, r8, r0
    a014:	00006ec9 	andeq	r6, r0, r9, asr #29
    a018:	00006ec1 	andeq	r6, r0, r1, asr #29
    a01c:	001e6d1a 	andseq	r6, lr, sl, lsl sp
    a020:	01c30100 	biceq	r0, r3, r0, lsl #2
    a024:	0000985b 	andeq	r9, r0, fp, asr r8
    a028:	006f0100 	rsbeq	r0, pc, r0, lsl #2
    a02c:	006efd00 	rsbeq	pc, lr, r0, lsl #26
    a030:	1f511a00 	svcne	0x00511a00
    a034:	c3010000 	movwgt	r0, #4096	; 0x1000
    a038:	00987001 	addseq	r7, r8, r1
    a03c:	6f230000 	svcvs	0x00230000
    a040:	6f1f0000 	svcvs	0x001f0000
    a044:	131b0000 	tstne	fp, #0
    a048:	0100001c 	tsteq	r0, ip, lsl r0
    a04c:	8c1501c5 	ldfhis	f0, [r5], {197}	; 0xc5
    a050:	47000001 	strmi	r0, [r0, -r1]
    a054:	4100006f 	tstmi	r0, pc, rrx
    a058:	1b00006f 	blne	a21c <_Min_Heap_Size+0x9a1c>
    a05c:	00001f7f 	andeq	r1, r0, pc, ror pc
    a060:	1701c801 	strne	ip, [r1, -r1, lsl #16]
    a064:	000007e7 	andeq	r0, r0, r7, ror #15
    a068:	00006f75 	andeq	r6, r0, r5, ror pc
    a06c:	00006f73 	andeq	r6, r0, r3, ror pc
    a070:	0000002a 	andeq	r0, r0, sl, lsr #32
    a074:	000dc700 	andeq	ip, sp, r0, lsl #14
    a078:	000a3400 	andeq	r3, sl, r0, lsl #8
    a07c:	50012400 	andpl	r2, r1, r0, lsl #8
    a080:	00000305 	andeq	r0, r0, r5, lsl #6
    a084:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a088:	cb0a0351 	blgt	28add4 <_Min_Heap_Size+0x28a5d4>
    a08c:	00290001 	eoreq	r0, r9, r1
    a090:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    a094:	24000005 	strcs	r0, [r0], #-5
    a098:	74025001 	strvc	r5, [r2], #-1
    a09c:	51012400 	tstpl	r1, r0, lsl #8
    a0a0:	24007602 	strcs	r7, [r0], #-1538	; 0xfffff9fe
    a0a4:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    a0a8:	53012400 	movwpl	r2, #5120	; 0x1400
    a0ac:	00007502 	andeq	r7, r0, r2, lsl #10
    a0b0:	53012600 	movwpl	r2, #5632	; 0x1600
    a0b4:	0100001d 	tsteq	r0, sp, lsl r0
    a0b8:	01130197 			; <UNDEFINED> instruction: 0x01130197
    a0bc:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    a0c8:	00006f88 	andeq	r6, r0, r8, lsl #31
    a0cc:	000b2101 	andeq	r2, fp, r1, lsl #2
    a0d0:	15fc1a00 	ldrbne	r1, [ip, #2560]!	; 0xa00
    a0d4:	97010000 	strls	r0, [r1, -r0]
    a0d8:	04453401 	strbeq	r3, [r5], #-1025	; 0xfffffbff
    a0dc:	6fb00000 	svcvs	0x00b00000
    a0e0:	6fa80000 	svcvs	0x00a80000
    a0e4:	461a0000 	ldrmi	r0, [sl], -r0
    a0e8:	0100001f 	tsteq	r0, pc, lsl r0
    a0ec:	98430197 	stmdals	r3, {r0, r1, r2, r4, r7, r8}^
    a0f0:	ec000000 	stc	0, cr0, [r0], {-0}
    a0f4:	e400006f 	str	r0, [r0], #-111	; 0xffffff91
    a0f8:	1a00006f 	bne	a2bc <_Min_Heap_Size+0x9abc>
    a0fc:	00001e6d 	andeq	r1, r0, sp, ror #28
    a100:	58019701 	stmdapl	r1, {r0, r8, r9, sl, ip, pc}
    a104:	00000098 	muleq	r0, r8, r0
    a108:	00007024 	andeq	r7, r0, r4, lsr #32
    a10c:	00007020 	andeq	r7, r0, r0, lsr #32
    a110:	001f511a 	andseq	r5, pc, sl, lsl r1	; <UNPREDICTABLE>
    a114:	01970100 	orrseq	r0, r7, r0, lsl #2
    a118:	0000986d 	andeq	r9, r0, sp, ror #16
    a11c:	00704600 	rsbseq	r4, r0, r0, lsl #12
    a120:	00704200 	rsbseq	r4, r0, r0, lsl #4
    a124:	1c131b00 			; <UNDEFINED> instruction: 0x1c131b00
    a128:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    a12c:	018c1501 	orreq	r1, ip, r1, lsl #10
    a130:	706a0000 	rsbvc	r0, sl, r0
    a134:	70640000 	rsbvc	r0, r4, r0
    a138:	002a0000 	eoreq	r0, sl, r0
    a13c:	c7000000 	strgt	r0, [r0, -r0]
    a140:	fe00000d 	cdp2	0, 0, cr0, cr0, cr13, {0}
    a144:	2400000a 	strcs	r0, [r0], #-10
    a148:	03055001 	movweq	r5, #20481	; 0x5001
    a14c:	00000000 	andeq	r0, r0, r0
    a150:	03510124 	cmpeq	r1, #36, 2
    a154:	00019c0a 	andeq	r9, r1, sl, lsl #24
    a158:	00000029 	andeq	r0, r0, r9, lsr #32
    a15c:	00054900 	andeq	r4, r5, r0, lsl #18
    a160:	50012400 	andpl	r2, r1, r0, lsl #8
    a164:	24007402 	strcs	r7, [r0], #-1026	; 0xfffffbfe
    a168:	76025101 	strvc	r5, [r2], -r1, lsl #2
    a16c:	52012400 	andpl	r2, r1, #0, 8
    a170:	24007702 	strcs	r7, [r0], #-1794	; 0xfffff8fe
    a174:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    a178:	26000000 	strcs	r0, [r0], -r0
    a17c:	001d6101 	andseq	r6, sp, r1, lsl #2
    a180:	01350100 	teqeq	r5, r0, lsl #2
    a184:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    a190:	70960000 	addsvc	r0, r6, r0
    a194:	9a010000 	bls	4a19c <_Min_Heap_Size+0x4999c>
    a198:	1a00000b 	bne	a1cc <_Min_Heap_Size+0x99cc>
    a19c:	000015fc 	strdeq	r1, [r0], -ip
    a1a0:	35013501 	strcc	r3, [r1, #-1281]	; 0xfffffaff
    a1a4:	00000445 	andeq	r0, r0, r5, asr #8
    a1a8:	000070ca 	andeq	r7, r0, sl, asr #1
    a1ac:	000070c2 	andeq	r7, r0, r2, asr #1
    a1b0:	001f7f1b 	andseq	r7, pc, fp, lsl pc	; <UNPREDICTABLE>
    a1b4:	01370100 	teqeq	r7, r0, lsl #2
    a1b8:	0007e717 	andeq	lr, r7, r7, lsl r7
    a1bc:	00710300 	rsbseq	r0, r1, r0, lsl #6
    a1c0:	00710100 	rsbseq	r0, r1, r0, lsl #2
    a1c4:	00002a00 	andeq	r2, r0, r0, lsl #20
    a1c8:	0dc70000 	stcleq	0, cr0, [r7]
    a1cc:	0b890000 	bleq	fe24a1d4 <_estack+0xde248f9c>
    a1d0:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a1d4:	00030550 	andeq	r0, r3, r0, asr r5
    a1d8:	24000000 	strcs	r0, [r0], #-0
    a1dc:	0a035101 	beq	de5e8 <_Min_Heap_Size+0xddde8>
    a1e0:	29000147 	stmdbcs	r0, {r0, r1, r2, r6, r8}
    a1e4:	00000000 	andeq	r0, r0, r0
    a1e8:	000004ec 	andeq	r0, r0, ip, ror #9
    a1ec:	02500124 	subseq	r0, r0, #36, 2
    a1f0:	00000075 	andeq	r0, r0, r5, ror r0
    a1f4:	1cf1012b 	ldfnee	f0, [r1], #172	; 0xac
    a1f8:	aa010000 	bge	4a200 <_Min_Heap_Size+0x49a00>
    a1fc:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    a208:	71160000 	tstvc	r6, r0
    a20c:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    a210:	2c00000d 	stccs	0, cr0, [r0], {13}
    a214:	000015fc 	strdeq	r1, [r0], -ip
    a218:	4533aa01 	ldrmi	sl, [r3, #-2561]!	; 0xfffff5ff
    a21c:	3a000004 	bcc	a234 <_Min_Heap_Size+0x9a34>
    a220:	36000071 			; <UNDEFINED> instruction: 0x36000071
    a224:	2d000071 	stccs	0, cr0, [r0, #-452]	; 0xfffffe3c
    a228:	00706d74 	rsbseq	r6, r0, r4, ror sp
    a22c:	980cac01 	stmdals	ip, {r0, sl, fp, sp, pc}
    a230:	6a000000 	bvs	a238 <_Min_Heap_Size+0x9a38>
    a234:	58000071 	stmdapl	r0, {r0, r4, r5, r6}
    a238:	2e000071 	mcrcs	0, 0, r0, cr0, cr1, {3}
    a23c:	000017be 			; <UNDEFINED> instruction: 0x000017be
    a240:	980cad01 	stmdals	ip, {r0, r8, sl, fp, sp, pc}
    a244:	e2000000 	and	r0, r0, #0
    a248:	d8000071 	stmdale	r0, {r0, r4, r5, r6}
    a24c:	2e000071 	mcrcs	0, 0, r0, cr0, cr1, {3}
    a250:	00001f7f 	andeq	r1, r0, pc, ror pc
    a254:	e717ae01 	ldr	sl, [r7, -r1, lsl #28]
    a258:	23000007 	movwcs	r0, #7
    a25c:	21000072 	tstcs	r0, r2, ror r0
    a260:	28000072 	stmdacs	r0, {r1, r4, r5, r6}
    a264:	00000000 	andeq	r0, r0, r0
    a268:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    a26c:	0000002a 	andeq	r0, r0, sl, lsr #32
    a270:	000dc700 	andeq	ip, sp, r0, lsl #14
    a274:	000c2f00 	andeq	r2, ip, r0, lsl #30
    a278:	50012400 	andpl	r2, r1, r0, lsl #8
    a27c:	00000305 	andeq	r0, r0, r5, lsl #6
    a280:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a284:	b7080251 	smlsdlt	r8, r1, r2, r0
    a288:	00002800 	andeq	r2, r0, r0, lsl #16
    a28c:	0db90000 	ldceq	0, cr0, [r9]
    a290:	002a0000 	eoreq	r0, sl, r0
    a294:	c7000000 	strgt	r0, [r0, -r0]
    a298:	5500000d 	strpl	r0, [r0, #-13]
    a29c:	2400000c 	strcs	r0, [r0], #-12
    a2a0:	03055001 	movweq	r5, #20481	; 0x5001
    a2a4:	00000000 	andeq	r0, r0, r0
    a2a8:	02510124 	subseq	r0, r1, #36, 2
    a2ac:	2a00b808 	bcs	382d4 <_Min_Heap_Size+0x37ad4>
    a2b0:	00000000 	andeq	r0, r0, r0
    a2b4:	00000dc7 	andeq	r0, r0, r7, asr #27
    a2b8:	00000c72 	andeq	r0, r0, r2, ror ip
    a2bc:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    a2c0:	00000003 	andeq	r0, r0, r3
    a2c4:	51012400 	tstpl	r1, r0, lsl #8
    a2c8:	00b90802 	adcseq	r0, r9, r2, lsl #16
    a2cc:	0000002a 	andeq	r0, r0, sl, lsr #32
    a2d0:	000dc700 	andeq	ip, sp, r0, lsl #14
    a2d4:	000c8f00 	andeq	r8, ip, r0, lsl #30
    a2d8:	50012400 	andpl	r2, r1, r0, lsl #8
    a2dc:	00000305 	andeq	r0, r0, r5, lsl #6
    a2e0:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a2e4:	ba080251 	blt	20ac30 <_Min_Heap_Size+0x20a430>
    a2e8:	00002a00 	andeq	r2, r0, r0, lsl #20
    a2ec:	0dc70000 	stcleq	0, cr0, [r7]
    a2f0:	0cac0000 	stceq	0, cr0, [ip]
    a2f4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a2f8:	00030550 	andeq	r0, r3, r0, asr r5
    a2fc:	24000000 	strcs	r0, [r0], #-0
    a300:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a304:	002a00bb 	strhteq	r0, [sl], -fp
    a308:	c7000000 	strgt	r0, [r0, -r0]
    a30c:	c900000d 	stmdbgt	r0, {r0, r2, r3}
    a310:	2400000c 	strcs	r0, [r0], #-12
    a314:	03055001 	movweq	r5, #20481	; 0x5001
    a318:	00000000 	andeq	r0, r0, r0
    a31c:	02510124 	subseq	r0, r1, #36, 2
    a320:	2a00bc08 	bcs	39348 <_Min_Heap_Size+0x38b48>
    a324:	00000000 	andeq	r0, r0, r0
    a328:	00000dc7 	andeq	r0, r0, r7, asr #27
    a32c:	00000ce6 	andeq	r0, r0, r6, ror #25
    a330:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    a334:	00000003 	andeq	r0, r0, r3
    a338:	51012400 	tstpl	r1, r0, lsl #8
    a33c:	00bd0802 	adcseq	r0, sp, r2, lsl #16
    a340:	0000002a 	andeq	r0, r0, sl, lsr #32
    a344:	000dc700 	andeq	ip, sp, r0, lsl #14
    a348:	000d0300 	andeq	r0, sp, r0, lsl #6
    a34c:	50012400 	andpl	r2, r1, r0, lsl #8
    a350:	00000305 	andeq	r0, r0, r5, lsl #6
    a354:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a358:	be080251 	mcrlt	2, 0, r0, cr8, cr1, {2}
    a35c:	00002a00 	andeq	r2, r0, r0, lsl #20
    a360:	0dc70000 	stcleq	0, cr0, [r7]
    a364:	0d200000 	stceq	0, cr0, [r0, #-0]
    a368:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a36c:	00030550 	andeq	r0, r3, r0, asr r5
    a370:	24000000 	strcs	r0, [r0], #-0
    a374:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a378:	002a00bf 	strhteq	r0, [sl], -pc
    a37c:	c7000000 	strgt	r0, [r0, -r0]
    a380:	3d00000d 	stccc	0, cr0, [r0, #-52]	; 0xffffffcc
    a384:	2400000d 	strcs	r0, [r0], #-13
    a388:	03055001 	movweq	r5, #20481	; 0x5001
    a38c:	00000000 	andeq	r0, r0, r0
    a390:	02510124 	subseq	r0, r1, #36, 2
    a394:	2a00c008 	bcs	3a3bc <_Min_Heap_Size+0x39bbc>
    a398:	00000000 	andeq	r0, r0, r0
    a39c:	00000dc7 	andeq	r0, r0, r7, asr #27
    a3a0:	00000d5a 	andeq	r0, r0, sl, asr sp
    a3a4:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    a3a8:	00000003 	andeq	r0, r0, r3
    a3ac:	51012400 	tstpl	r1, r0, lsl #8
    a3b0:	00c50802 	sbceq	r0, r5, r2, lsl #16
    a3b4:	0000002a 	andeq	r0, r0, sl, lsr #32
    a3b8:	000dc700 	andeq	ip, sp, r0, lsl #14
    a3bc:	000d7700 	andeq	r7, sp, r0, lsl #14
    a3c0:	50012400 	andpl	r2, r1, r0, lsl #8
    a3c4:	00000305 	andeq	r0, r0, r5, lsl #6
    a3c8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a3cc:	c6080251 			; <UNDEFINED> instruction: 0xc6080251
    a3d0:	00002a00 	andeq	r2, r0, r0, lsl #20
    a3d4:	0dc70000 	stcleq	0, cr0, [r7]
    a3d8:	0d940000 	ldceq	0, cr0, [r4]
    a3dc:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a3e0:	00030550 	andeq	r0, r3, r0, asr r5
    a3e4:	24000000 	strcs	r0, [r0], #-0
    a3e8:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a3ec:	002a00c7 	eoreq	r0, sl, r7, asr #1
    a3f0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    a3f4:	a8000004 	stmdage	r0, {r2}
    a3f8:	2400000d 	strcs	r0, [r0], #-13
    a3fc:	74025001 	strvc	r5, [r2], #-1
    a400:	00290000 	eoreq	r0, r9, r0
    a404:	ec000000 	stc	0, cr0, [r0], {-0}
    a408:	24000004 	strcs	r0, [r0], #-4
    a40c:	74025001 	strvc	r5, [r2], #-1
    a410:	2f000000 	svccs	0x00000000
    a414:	16180101 	ldrne	r0, [r8], -r1, lsl #2
    a418:	16180000 	ldrne	r0, [r8], -r0
    a41c:	ea090000 	b	24a424 <_Min_Heap_Size+0x249c24>
    a420:	0101300a 	tsteq	r1, sl
    a424:	0000080c 	andeq	r0, r0, ip, lsl #16
    a428:	0000080c 	andeq	r0, r0, ip, lsl #16
    a42c:	0801e60a 	stmdaeq	r1, {r1, r3, r9, sl, sp, lr, pc}
    a430:	00142400 	andseq	r2, r4, r0, lsl #8
    a434:	dc000200 	sfmle	f0, 4, [r0], {-0}
    a438:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    a43c:	00013101 	andeq	r3, r1, r1, lsl #2
    a440:	1fbd0c00 	svcne	0x00bd0c00
    a444:	004b0000 	subeq	r0, fp, r0
    a448:	05a80000 	streq	r0, [r8, #0]!
	...
    a454:	7ee40000 	cdpvc	0, 14, cr0, cr4, cr0, {0}
    a458:	05020000 	streq	r0, [r2, #-0]
    a45c:	00023c01 	andeq	r3, r2, r1, lsl #24
    a460:	01420400 	cmpeq	r2, r0, lsl #8
    a464:	0000023c 	andeq	r0, r0, ip, lsr r2
    a468:	000e5d03 	andeq	r5, lr, r3, lsl #26
    a46c:	8c037200 	sfmhi	f7, 4, [r3], {-0}
    a470:	7400000e 	strvc	r0, [r0], #-14
    a474:	000eec03 	andeq	lr, lr, r3, lsl #24
    a478:	93037500 	movwls	r7, #13568	; 0x3500
    a47c:	7600000d 	strvc	r0, [r0], -sp
    a480:	000f3e03 	andeq	r3, pc, r3, lsl #28
    a484:	b9037b00 	stmdblt	r3, {r8, r9, fp, ip, sp, lr}
    a488:	7c000010 	stcvc	0, cr0, [r0], {16}
    a48c:	00119703 	andseq	r9, r1, r3, lsl #14
    a490:	05037e00 	streq	r7, [r3, #-3584]	; 0xfffff200
    a494:	7f00000d 	svcvc	0x0000000d
    a498:	000e7104 	andeq	r7, lr, r4, lsl #2
    a49c:	5d040000 	stcpl	0, cr0, [r4, #-0]
    a4a0:	01000010 	tsteq	r0, r0, lsl r0
    a4a4:	000ea204 	andeq	sl, lr, r4, lsl #4
    a4a8:	00040200 	andeq	r0, r4, r0, lsl #4
    a4ac:	0300000c 	movweq	r0, #12
    a4b0:	000c6a04 	andeq	r6, ip, r4, lsl #20
    a4b4:	ec040400 	cfstrs	mvf0, [r4], {-0}
    a4b8:	05000010 	streq	r0, [r0, #-16]
    a4bc:	00108a04 	andseq	r8, r0, r4, lsl #20
    a4c0:	fd040600 	stc2	6, cr0, [r4, #-0]
    a4c4:	0700000d 	streq	r0, [r0, -sp]
    a4c8:	000c0e04 	andeq	r0, ip, r4, lsl #28
    a4cc:	8c040800 	stchi	8, cr0, [r4], {-0}
    a4d0:	09000011 	stmdbeq	r0, {r0, r4}
    a4d4:	000f7904 	andeq	r7, pc, r4, lsl #18
    a4d8:	d5040a00 	strle	r0, [r4, #-2560]	; 0xfffff600
    a4dc:	0b00000f 	bleq	a520 <_Min_Heap_Size+0x9d20>
    a4e0:	000f9f04 	andeq	r9, pc, r4, lsl #30
    a4e4:	2f040c00 	svccs	0x00040c00
    a4e8:	0d00000d 	stceq	0, cr0, [r0, #-52]	; 0xffffffcc
    a4ec:	0010f504 	andseq	pc, r0, r4, lsl #10
    a4f0:	95040e00 	strls	r0, [r4, #-3584]	; 0xfffff200
    a4f4:	0f000010 	svceq	0x00000010
    a4f8:	000e1504 	andeq	r1, lr, r4, lsl #10
    a4fc:	19041000 	stmdbne	r4, {ip}
    a500:	1100000c 	tstne	r0, ip
    a504:	00105404 	andseq	r5, r0, r4, lsl #8
    a508:	08041200 	stmdaeq	r4, {r9, ip}
    a50c:	1300000e 	movwne	r0, #14
    a510:	000db104 	andeq	fp, sp, r4, lsl #2
    a514:	5a041400 	bpl	10f51c <_Min_Heap_Size+0x10ed1c>
    a518:	15000011 	strne	r0, [r0, #-17]	; 0xffffffef
    a51c:	000eb204 	andeq	fp, lr, r4, lsl #4
    a520:	68041600 	stmdavs	r4, {r9, sl, ip}
    a524:	17000011 	smladne	r0, r1, r0, r0
    a528:	000f0504 	andeq	r0, pc, r4, lsl #10
    a52c:	19041800 	stmdbne	r4, {fp, ip}
    a530:	19000011 	stmdbne	r0, {r0, r4}
    a534:	000ced04 	andeq	lr, ip, r4, lsl #26
    a538:	f0041a00 			; <UNDEFINED> instruction: 0xf0041a00
    a53c:	1b00000d 	blne	a578 <_Min_Heap_Size+0x9d78>
    a540:	000c7504 	andeq	r7, ip, r4, lsl #10
    a544:	12041c00 	andne	r1, r4, #0, 24
    a548:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    a54c:	000dbf04 	andeq	fp, sp, r4, lsl #30
    a550:	e3041e00 	movw	r1, #19968	; 0x4e00
    a554:	1f00000d 	svcne	0x0000000d
    a558:	000d6304 	andeq	r6, sp, r4, lsl #6
    a55c:	92042000 	andls	r2, r4, #0
    a560:	2100000f 	tstcs	r0, pc
    a564:	000ed704 	andeq	sp, lr, r4, lsl #14
    a568:	34042200 	strcc	r2, [r4], #-512	; 0xfffffe00
    a56c:	2300000f 	movwcs	r0, #15
    a570:	000caa04 	andeq	sl, ip, r4, lsl #20
    a574:	1c042400 	cfstrsne	mvf2, [r4], {-0}
    a578:	25000010 	strcs	r0, [r0, #-16]
    a57c:	000dc904 	andeq	ip, sp, r4, lsl #18
    a580:	12042600 	andne	r2, r4, #0, 12
    a584:	2700000d 	strcs	r0, [r0, -sp]
    a588:	00100304 	andseq	r0, r0, r4, lsl #6
    a58c:	e7042800 	str	r2, [r4, -r0, lsl #16]
    a590:	2900000f 	stmdbcs	r0, {r0, r1, r2, r3}
    a594:	000f6804 	andeq	r6, pc, r4, lsl #16
    a598:	b4042a00 	strlt	r2, [r4], #-2560	; 0xfffff600
    a59c:	2b00000c 	blcs	a5d4 <_Min_Heap_Size+0x9dd4>
    a5a0:	000c2b04 	andeq	r2, ip, r4, lsl #22
    a5a4:	27042c00 	strcs	r2, [r4, -r0, lsl #24]
    a5a8:	2d00000e 	stccs	0, cr0, [r0, #-56]	; 0xffffffc8
    a5ac:	00117504 	andseq	r7, r1, r4, lsl #10
    a5b0:	b6042e00 	strlt	r2, [r4], -r0, lsl #28
    a5b4:	2f000011 	svccs	0x00000011
    a5b8:	00106d04 	andseq	r6, r0, r4, lsl #26
    a5bc:	82043000 	andhi	r3, r4, #0
    a5c0:	31000011 	tstcc	r0, r1, lsl r0
    a5c4:	000d8904 	andeq	r8, sp, r4, lsl #18
    a5c8:	60043200 	andvs	r3, r4, r0, lsl #4
    a5cc:	3300000c 	movwcc	r0, #12
    a5d0:	000f5304 	andeq	r5, pc, r4, lsl #6
    a5d4:	fa043400 	blx	1175dc <_Min_Heap_Size+0x116ddc>
    a5d8:	3500000e 	strcc	r0, [r0, #-14]
    a5dc:	000f8404 	andeq	r8, pc, r4, lsl #8
    a5e0:	18043600 	stmdane	r4, {r9, sl, ip, sp}
    a5e4:	3700000f 	strcc	r0, [r0, -pc]
    a5e8:	000ec004 	andeq	ip, lr, r4
    a5ec:	4e043800 	cdpmi	8, 0, cr3, cr4, cr0, {0}
    a5f0:	3900000c 	stmdbcc	r0, {r2, r3}
    a5f4:	0011c804 	andseq	ip, r1, r4, lsl #16
    a5f8:	b1043a00 	tstlt	r4, r0, lsl #20
    a5fc:	3b00000f 	blcc	a640 <_Min_Heap_Size+0x9e40>
    a600:	000d4104 	andeq	r4, sp, r4, lsl #2
    a604:	c3043c00 	movwgt	r3, #19456	; 0x4c00
    a608:	3f00000f 	svccc	0x0000000f
    a60c:	000c7f04 	andeq	r7, ip, r4, lsl #30
    a610:	46044000 	strmi	r4, [r4], -r0
    a614:	41000010 	tstmi	r0, r0, lsl r0
    a618:	000d7b04 	andeq	r7, sp, r4, lsl #22
    a61c:	51044200 	mrspl	r4, R12_usr
    a620:	4300000e 	movwmi	r0, #14
    a624:	000cdb04 	andeq	sp, ip, r4, lsl #22
    a628:	a7044400 	strge	r4, [r4, -r0, lsl #8]
    a62c:	45000010 	strmi	r0, [r0, #-16]
    a630:	000e3f04 	andeq	r3, lr, r4, lsl #30
    a634:	8d044600 	stchi	6, cr4, [r4, #-0]
    a638:	4700000c 	strmi	r0, [r0, -ip]
    a63c:	0010cb04 	andseq	ip, r0, r4, lsl #22
    a640:	f6044800 			; <UNDEFINED> instruction: 0xf6044800
    a644:	4900000f 	stmdbmi	r0, {r0, r1, r2, r3}
    a648:	00114004 	andseq	r4, r1, r4
    a64c:	a3044a00 	movwge	r4, #18944	; 0x4a00
    a650:	4b000011 	blmi	a69c <_Min_Heap_Size+0x9e9c>
    a654:	000e7b04 	andeq	r7, lr, r4, lsl #22
    a658:	22044c00 	andcs	r4, r4, #0, 24
    a65c:	4d00000f 	stcmi	0, cr0, [r0, #-60]	; 0xffffffc4
    a660:	00103d04 	andseq	r3, r0, r4, lsl #26
    a664:	4a045000 	bmi	11e66c <_Min_Heap_Size+0x11de6c>
    a668:	5100000f 	tstpl	r0, pc
    a66c:	06010500 	streq	r0, [r1], -r0, lsl #10
    a670:	000000e0 	andeq	r0, r0, r0, ror #1
    a674:	00233d06 	eoreq	r3, r3, r6, lsl #26
    a678:	039b0400 	orrseq	r0, fp, #0, 8
    a67c:	00000029 	andeq	r0, r0, r9, lsr #32
    a680:	0000ad06 	andeq	sl, r0, r6, lsl #26
    a684:	182b0500 	stmdane	fp!, {r8, sl}
    a688:	0000025b 	andeq	r0, r0, fp, asr r2
    a68c:	de080105 	adflee	f0, f0, f5
    a690:	05000000 	streq	r0, [r0, #-0]
    a694:	01270502 			; <UNDEFINED> instruction: 0x01270502
    a698:	ec060000 	stc	0, cr0, [r6], {-0}
    a69c:	05000009 	streq	r0, [r0, #-9]
    a6a0:	02751939 	rsbseq	r1, r5, #933888	; 0xe4000
    a6a4:	02050000 	andeq	r0, r5, #0
    a6a8:	00000e07 	andeq	r0, r0, r7, lsl #28
    a6ac:	21c20600 	biccs	r0, r2, r0, lsl #12
    a6b0:	4d050000 	stcmi	0, cr0, [r5, #-0]
    a6b4:	00028818 	andeq	r8, r2, r8, lsl r8
    a6b8:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    a6bc:	00000005 	andeq	r0, r0, r5
    a6c0:	00004006 	andeq	r4, r0, r6
    a6c4:	194f0500 	stmdbne	pc, {r8, sl}^	; <UNPREDICTABLE>
    a6c8:	0000029b 	muleq	r0, fp, r2
    a6cc:	9b070405 	blls	1cb6e8 <_Min_Heap_Size+0x1caee8>
    a6d0:	05000000 	streq	r0, [r0, #-0]
    a6d4:	00000508 	andeq	r0, r0, r8, lsl #10
    a6d8:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    a6dc:	00009607 	andeq	r9, r0, r7, lsl #12
    a6e0:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    a6e4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    a6e8:	a0070405 	andge	r0, r7, r5, lsl #8
    a6ec:	06000000 	streq	r0, [r0], -r0
    a6f0:	000000af 	andeq	r0, r0, pc, lsr #1
    a6f4:	4f131806 	svcmi	0x00131806
    a6f8:	08000002 	stmdaeq	r0, {r1}
    a6fc:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a700:	0009ee06 	andeq	lr, r9, r6, lsl #28
    a704:	14240600 	strtne	r0, [r4], #-1536	; 0xfffffa00
    a708:	00000269 	andeq	r0, r0, r9, ror #4
    a70c:	0021c406 	eoreq	ip, r1, r6, lsl #8
    a710:	132c0600 			; <UNDEFINED> instruction: 0x132c0600
    a714:	0000027c 	andeq	r0, r0, ip, ror r2
    a718:	00004206 	andeq	r4, r0, r6, lsl #4
    a71c:	14300600 	ldrtne	r0, [r0], #-1536	; 0xfffffa00
    a720:	0000028f 	andeq	r0, r0, pc, lsl #5
    a724:	0002e708 	andeq	lr, r2, r8, lsl #14
    a728:	02f30900 	rscseq	r0, r3, #0, 18
    a72c:	040a0000 	streq	r0, [sl], #-0
    a730:	019b020e 	orrseq	r0, fp, lr, lsl #4
    a734:	0003e309 	andeq	lr, r3, r9, lsl #6
    a738:	22d50b00 	sbcscs	r0, r5, #0, 22
    a73c:	9d020000 	stcls	0, cr0, [r2, #-0]
    a740:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    a744:	23020000 	movwcs	r0, #8192	; 0x2000
    a748:	08b20b00 	ldmeq	r2!, {r8, r9, fp}
    a74c:	9e020000 	cdpls	0, 0, cr0, cr2, cr0, {0}
    a750:	03f81201 	mvnseq	r1, #268435456	; 0x10000000
    a754:	23020000 	movwcs	r0, #8192	; 0x2000
    a758:	22740b20 	rsbscs	r0, r4, #32, 22	; 0x8000
    a75c:	9f020000 	svcls	0x00020000
    a760:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    a764:	23030000 	movwcs	r0, #12288	; 0x3000
    a768:	bc0b0180 	stflts	f0, [fp], {128}	; 0x80
    a76c:	02000008 	andeq	r0, r0, #8
    a770:	f81201a0 			; <UNDEFINED> instruction: 0xf81201a0
    a774:	03000003 	movweq	r0, #3
    a778:	0b01a023 	bleq	7280c <_Min_Heap_Size+0x7200c>
    a77c:	00002029 	andeq	r2, r0, r9, lsr #32
    a780:	1201a102 	andne	sl, r1, #-2147483648	; 0x80000000
    a784:	000003f3 	strdeq	r0, [r0], -r3
    a788:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
    a78c:	0008c60b 	andeq	ip, r8, fp, lsl #12
    a790:	01a20200 			; <UNDEFINED> instruction: 0x01a20200
    a794:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    a798:	a0230300 	eorge	r0, r3, r0, lsl #6
    a79c:	1fab0b02 	svcne	0x00ab0b02
    a7a0:	a3020000 	movwge	r0, #8192	; 0x2000
    a7a4:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    a7a8:	23030000 	movwcs	r0, #12288	; 0x3000
    a7ac:	d00b0380 	andle	r0, fp, r0, lsl #7
    a7b0:	02000008 	andeq	r0, r0, #8
    a7b4:	f81201a4 			; <UNDEFINED> instruction: 0xf81201a4
    a7b8:	03000003 	movweq	r0, #3
    a7bc:	0b03a023 	bleq	f2850 <_Min_Heap_Size+0xf2050>
    a7c0:	00002240 	andeq	r2, r0, r0, asr #4
    a7c4:	1201a502 	andne	sl, r1, #8388608	; 0x800000
    a7c8:	000003f3 	strdeq	r0, [r0], -r3
    a7cc:	04802303 	streq	r2, [r0], #771	; 0x303
    a7d0:	0008da0b 	andeq	sp, r8, fp, lsl #20
    a7d4:	01a60200 			; <UNDEFINED> instruction: 0x01a60200
    a7d8:	00040812 	andeq	r0, r4, r2, lsl r8
    a7dc:	a0230300 	eorge	r0, r3, r0, lsl #6
    a7e0:	50490c04 	subpl	r0, r9, r4, lsl #24
    a7e4:	01a70200 			; <UNDEFINED> instruction: 0x01a70200
    a7e8:	00042812 	andeq	r2, r4, r2, lsl r8
    a7ec:	80230300 	eorhi	r0, r3, r0, lsl #6
    a7f0:	08e40b06 	stmiaeq	r4!, {r1, r2, r8, r9, fp}^
    a7f4:	a8020000 	stmdage	r2, {}	; <UNPREDICTABLE>
    a7f8:	042d1201 	strteq	r1, [sp], #-513	; 0xfffffdff
    a7fc:	23030000 	movwcs	r0, #12288	; 0x3000
    a800:	f80b07f0 			; <UNDEFINED> instruction: 0xf80b07f0
    a804:	02000023 	andeq	r0, r0, #35	; 0x23
    a808:	f31201a9 	vrhadd.u16	d0, d18, d25
    a80c:	03000002 	movweq	r0, #2
    a810:	001c8023 	andseq	r8, ip, r3, lsr #32
    a814:	0002f30d 	andeq	pc, r2, sp, lsl #6
    a818:	0003f300 	andeq	pc, r3, r0, lsl #6
    a81c:	02b70e00 	adcseq	r0, r7, #0, 28
    a820:	00070000 	andeq	r0, r7, r0
    a824:	0003e308 	andeq	lr, r3, r8, lsl #6
    a828:	02e70d00 	rsceq	r0, r7, #0, 26
    a82c:	04080000 	streq	r0, [r8], #-0
    a830:	b70e0000 	strlt	r0, [lr, -r0]
    a834:	17000002 	strne	r0, [r0, -r2]
    a838:	02e70d00 	rsceq	r0, r7, #0, 26
    a83c:	04180000 	ldreq	r0, [r8], #-0
    a840:	b70e0000 	strlt	r0, [lr, -r0]
    a844:	37000002 	strcc	r0, [r0, -r2]
    a848:	02ca0d00 	sbceq	r0, sl, #0, 26
    a84c:	04280000 	strteq	r0, [r8], #-0
    a850:	b70e0000 	strlt	r0, [lr, -r0]
    a854:	ef000002 	svc	0x00000002
    a858:	04180800 	ldreq	r0, [r8], #-2048	; 0xfffff800
    a85c:	e70d0000 	str	r0, [sp, -r0]
    a860:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
    a864:	0f000004 	svceq	0x00000004
    a868:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    a86c:	10000283 	andne	r0, r0, r3, lsl #5
    a870:	000022da 	ldrdeq	r2, [r0], -sl
    a874:	0401aa02 	streq	sl, [r1], #-2562	; 0xfffff5fe
    a878:	000002fd 	strdeq	r0, [r0], -sp
    a87c:	bd028c11 	stclt	12, cr8, [r2, #-68]	; 0xffffffbc
    a880:	05a70901 	streq	r0, [r7, #2305]!	; 0x901
    a884:	c80b0000 	stmdagt	fp, {}	; <UNPREDICTABLE>
    a888:	02000004 	andeq	r0, r0, #4
    a88c:	f81201bf 			; <UNDEFINED> instruction: 0xf81201bf
    a890:	02000002 	andeq	r0, r0, #2
    a894:	230b0023 	movwcs	r0, #45091	; 0xb023
    a898:	02000007 	andeq	r0, r0, #7
    a89c:	f31201c0 	vrhadd.u16	q0, q9, q0
    a8a0:	02000002 	andeq	r0, r0, #2
    a8a4:	fd0b0423 	stc2	4, cr0, [fp, #-140]	; 0xffffff74
    a8a8:	02000006 	andeq	r0, r0, #6
    a8ac:	f31201c1 	vrhadd.u16	q0, q9, <illegal reg q0.5>
    a8b0:	02000002 	andeq	r0, r0, #2
    a8b4:	3c0b0823 	stccc	8, cr0, [fp], {35}	; 0x23
    a8b8:	02000007 	andeq	r0, r0, #7
    a8bc:	f31201c2 	vrhadd.u16	q0, q9, q1
    a8c0:	02000002 	andeq	r0, r0, #2
    a8c4:	530c0c23 	movwpl	r0, #52259	; 0xcc23
    a8c8:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    a8cc:	f31201c3 	vrhadd.u16	q0, q9, <illegal reg q1.5>
    a8d0:	02000002 	andeq	r0, r0, #2
    a8d4:	430c1023 	movwmi	r1, #49187	; 0xc023
    a8d8:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    a8dc:	f31201c4 	vrhadd.u16	q0, q9, q2
    a8e0:	02000002 	andeq	r0, r0, #2
    a8e4:	530c1423 	movwpl	r1, #50211	; 0xc423
    a8e8:	02005048 	andeq	r5, r0, #72	; 0x48
    a8ec:	b71201c5 	ldrlt	r0, [r2, -r5, asr #3]
    a8f0:	02000005 	andeq	r0, r0, #5
    a8f4:	170b1823 	strne	r1, [fp, -r3, lsr #16]
    a8f8:	02000009 	andeq	r0, r0, #9
    a8fc:	f31201c6 	vrhadd.u16	q0, q9, q3
    a900:	02000002 	andeq	r0, r0, #2
    a904:	1a0b2423 	bne	2d3998 <_Min_Heap_Size+0x2d3198>
    a908:	02000008 	andeq	r0, r0, #8
    a90c:	f31201c7 	vrhadd.u16	q0, q9, <illegal reg q3.5>
    a910:	02000002 	andeq	r0, r0, #2
    a914:	970b2823 	strls	r2, [fp, -r3, lsr #16]
    a918:	0200000b 	andeq	r0, r0, #11
    a91c:	f31201c8 	vrhadd.u16	q0, q9, q4
    a920:	02000002 	andeq	r0, r0, #2
    a924:	420b2c23 	andmi	r2, fp, #8960	; 0x2300
    a928:	02000007 	andeq	r0, r0, #7
    a92c:	f31201c9 	vrhadd.u16	q0, q9, <illegal reg q4.5>
    a930:	02000002 	andeq	r0, r0, #2
    a934:	600b3023 	andvs	r3, fp, r3, lsr #32
    a938:	02000007 	andeq	r0, r0, #7
    a93c:	f31201ca 	vrhadd.u16	q0, q9, q5
    a940:	02000002 	andeq	r0, r0, #2
    a944:	630b3423 	movwvs	r3, #46115	; 0xb423
    a948:	02000006 	andeq	r0, r0, #6
    a94c:	f31201cb 	vrhadd.u16	q0, q9, <illegal reg q5.5>
    a950:	02000002 	andeq	r0, r0, #2
    a954:	660b3823 	strvs	r3, [fp], -r3, lsr #16
    a958:	0200000a 	andeq	r0, r0, #10
    a95c:	f31201cc 	vrhadd.u16	q0, q9, q6
    a960:	02000002 	andeq	r0, r0, #2
    a964:	500c3c23 	andpl	r3, ip, r3, lsr #24
    a968:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    a96c:	d11201cd 	tstle	r2, sp, asr #3
    a970:	02000005 	andeq	r0, r0, #5
    a974:	440c4023 	strmi	r4, [ip], #-35	; 0xffffffdd
    a978:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    a97c:	f81201ce 			; <UNDEFINED> instruction: 0xf81201ce
    a980:	02000002 	andeq	r0, r0, #2
    a984:	410c4823 	tstmi	ip, r3, lsr #16
    a988:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
    a98c:	f81201cf 			; <UNDEFINED> instruction: 0xf81201cf
    a990:	02000002 	andeq	r0, r0, #2
    a994:	8f0b4c23 	svchi	0x000b4c23
    a998:	02000007 	andeq	r0, r0, #7
    a99c:	eb1201d0 	bl	48b0e4 <_Min_Heap_Size+0x48a8e4>
    a9a0:	02000005 	andeq	r0, r0, #5
    a9a4:	150b5023 	strne	r5, [fp, #-35]	; 0xffffffdd
    a9a8:	02000005 	andeq	r0, r0, #5
    a9ac:	051201d1 	ldreq	r0, [r2, #-465]	; 0xfffffe2f
    a9b0:	02000006 	andeq	r0, r0, #6
    a9b4:	b20b6023 	andlt	r6, fp, #35	; 0x23
    a9b8:	02000008 	andeq	r0, r0, #8
    a9bc:	0a1201d2 	beq	48b10c <_Min_Heap_Size+0x48a90c>
    a9c0:	02000006 	andeq	r0, r0, #6
    a9c4:	9e0b7423 	cdpls	4, 0, cr7, cr11, cr3, {1}
    a9c8:	02000008 	andeq	r0, r0, #8
    a9cc:	f31201d3 	vbsl	q0, q9, <illegal reg q1.5>
    a9d0:	03000002 	movweq	r0, #2
    a9d4:	00018823 	andeq	r8, r1, r3, lsr #16
    a9d8:	0002ca0d 	andeq	ip, r2, sp, lsl #20
    a9dc:	0005b700 	andeq	fp, r5, r0, lsl #14
    a9e0:	02b70e00 	adcseq	r0, r7, #0, 28
    a9e4:	000b0000 	andeq	r0, fp, r0
    a9e8:	0005a708 	andeq	sl, r5, r8, lsl #14
    a9ec:	02f80d00 	rscseq	r0, r8, #0, 26
    a9f0:	05cc0000 	strbeq	r0, [ip]
    a9f4:	b70e0000 	strlt	r0, [lr, -r0]
    a9f8:	01000002 	tsteq	r0, r2
    a9fc:	05bc0900 	ldreq	r0, [ip, #2304]!	; 0x900
    aa00:	cc080000 	stcgt	0, cr0, [r8], {-0}
    aa04:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    aa08:	000002f8 	strdeq	r0, [r0], -r8
    aa0c:	000005e6 	andeq	r0, r0, r6, ror #11
    aa10:	0002b70e 	andeq	fp, r2, lr, lsl #14
    aa14:	09000300 	stmdbeq	r0, {r8, r9}
    aa18:	000005d6 	ldrdeq	r0, [r0], -r6
    aa1c:	0005e608 	andeq	lr, r5, r8, lsl #12
    aa20:	02f80d00 	rscseq	r0, r8, #0, 26
    aa24:	06000000 	streq	r0, [r0], -r0
    aa28:	b70e0000 	strlt	r0, [lr, -r0]
    aa2c:	04000002 	streq	r0, [r0], #-2
    aa30:	05f00900 	ldrbeq	r0, [r0, #2304]!	; 0x900
    aa34:	00080000 	andeq	r0, r8, r0
    aa38:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    aa3c:	000002e7 	andeq	r0, r0, r7, ror #5
    aa40:	0000061a 	andeq	r0, r0, sl, lsl r6
    aa44:	0002b70e 	andeq	fp, r2, lr, lsl #14
    aa48:	10000400 	andne	r0, r0, r0, lsl #8
    aa4c:	00000693 	muleq	r0, r3, r6
    aa50:	0301d402 	movweq	sp, #5122	; 0x1402
    aa54:	0000044b 	andeq	r0, r0, fp, asr #8
    aa58:	fc021011 	stc2	0, cr1, [r2], {17}
    aa5c:	06720902 	ldrbteq	r0, [r2], -r2, lsl #18
    aa60:	c70b0000 	strgt	r0, [fp, -r0]
    aa64:	02000023 	andeq	r0, r0, #35	; 0x23
    aa68:	f31202fe 	vqsub.u16	q0, q9, q15
    aa6c:	02000002 	andeq	r0, r0, #2
    aa70:	350b0023 	strcc	r0, [fp, #-35]	; 0xffffffdd
    aa74:	02000022 	andeq	r0, r0, #34	; 0x22
    aa78:	f31202ff 	vqsub.u16	q0, q9, <illegal reg q15.5>
    aa7c:	02000002 	andeq	r0, r0, #2
    aa80:	560c0423 	strpl	r0, [ip], -r3, lsr #8
    aa84:	02004c41 	andeq	r4, r0, #16640	; 0x4100
    aa88:	f3120300 	vcgt.u16	d0, d2, d0
    aa8c:	02000002 	andeq	r0, r0, #2
    aa90:	910b0823 	tstls	fp, r3, lsr #16
    aa94:	02000021 	andeq	r0, r0, #33	; 0x21
    aa98:	f8120301 			; <UNDEFINED> instruction: 0xf8120301
    aa9c:	02000002 	andeq	r0, r0, #2
    aaa0:	10000c23 	andne	r0, r0, r3, lsr #24
    aaa4:	0000213c 	andeq	r2, r0, ip, lsr r1
    aaa8:	03030202 	movweq	r0, #12802	; 0x3202
    aaac:	00000627 	andeq	r0, r0, r7, lsr #12
    aab0:	bd022c11 	stclt	12, cr2, [r2, #-68]	; 0xffffffbc
    aab4:	073a0904 	ldreq	r0, [sl, -r4, lsl #18]!
    aab8:	720b0000 	andvc	r0, fp, #0
    aabc:	02000023 	andeq	r0, r0, #35	; 0x23
    aac0:	f81204bf 			; <UNDEFINED> instruction: 0xf81204bf
    aac4:	02000002 	andeq	r0, r0, #2
    aac8:	c70b0023 	strgt	r0, [fp, -r3, lsr #32]
    aacc:	02000023 	andeq	r0, r0, #35	; 0x23
    aad0:	f31204c0 	vshl.u16	q0, q0, q9
    aad4:	02000002 	andeq	r0, r0, #2
    aad8:	520c0423 	andpl	r0, ip, #587202560	; 0x23000000
    aadc:	0200524e 	andeq	r5, r0, #-536870908	; 0xe0000004
    aae0:	f31204c1 	vshl.u16	q0, <illegal reg q0.5>, q9
    aae4:	02000002 	andeq	r0, r0, #2
    aae8:	270b0823 	strcs	r0, [fp, -r3, lsr #16]
    aaec:	02000023 	andeq	r0, r0, #35	; 0x23
    aaf0:	f31204c2 	vshl.u16	q0, q1, q9
    aaf4:	02000002 	andeq	r0, r0, #2
    aaf8:	510b0c23 	tstpl	fp, r3, lsr #24
    aafc:	02000023 	andeq	r0, r0, #35	; 0x23
    ab00:	f31204c3 	vshl.u16	q0, <illegal reg q1.5>, q9
    ab04:	02000002 	andeq	r0, r0, #2
    ab08:	dc0b1023 	stcle	0, cr1, [fp], {35}	; 0x23
    ab0c:	02000020 	andeq	r0, r0, #32
    ab10:	f31204c4 	vshl.u16	q0, q2, q9
    ab14:	02000002 	andeq	r0, r0, #2
    ab18:	890b1423 	stmdbhi	fp, {r0, r1, r5, sl, ip}
    ab1c:	02000020 	andeq	r0, r0, #32
    ab20:	f31204c5 	vshl.u16	q0, <illegal reg q2.5>, q9
    ab24:	02000002 	andeq	r0, r0, #2
    ab28:	e40b1823 	str	r1, [fp], #-2083	; 0xfffff7dd
    ab2c:	02000020 	andeq	r0, r0, #32
    ab30:	f31204c6 	vshl.u16	q0, q3, q9
    ab34:	02000002 	andeq	r0, r0, #2
    ab38:	110b1c23 	tstne	fp, r3, lsr #24
    ab3c:	02000021 	andeq	r0, r0, #33	; 0x21
    ab40:	f31204c7 	vshl.u16	q0, <illegal reg q3.5>, q9
    ab44:	02000002 	andeq	r0, r0, #2
    ab48:	ec0b2023 	stc	0, cr2, [fp], {35}	; 0x23
    ab4c:	02000020 	andeq	r0, r0, #32
    ab50:	f31204c8 	vshl.u16	q0, q4, q9
    ab54:	02000002 	andeq	r0, r0, #2
    ab58:	210b2423 	tstcs	fp, r3, lsr #8
    ab5c:	02000020 	andeq	r0, r0, #32
    ab60:	f31204c9 	vshl.u16	q0, <illegal reg q4.5>, q9
    ab64:	02000002 	andeq	r0, r0, #2
    ab68:	10002823 	andne	r2, r0, r3, lsr #16
    ab6c:	00002433 	andeq	r2, r0, r3, lsr r4
    ab70:	0304ca02 	movweq	ip, #18946	; 0x4a02
    ab74:	0000067f 	andeq	r0, r0, pc, ror r6
    ab78:	5b010702 	blpl	4c788 <_Min_Heap_Size+0x4bf88>
    ab7c:	07000002 	streq	r0, [r0, -r2]
    ab80:	076201b9 			; <UNDEFINED> instruction: 0x076201b9
    ab84:	cc040000 	stcgt	0, cr0, [r4], {-0}
    ab88:	00000006 	andeq	r0, r0, r6
    ab8c:	54455312 	strbpl	r5, [r5], #-786	; 0xfffffcee
    ab90:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    ab94:	010f0408 	tsteq	pc, r8, lsl #8
    ab98:	10130000 	andsne	r0, r3, r0
    ab9c:	18092e08 	stmdane	r9, {r3, r9, sl, fp, sp}
    aba0:	14000008 	strne	r0, [r0], #-8
    aba4:	000023c0 	andeq	r2, r0, r0, asr #7
    aba8:	be1a3008 	cdplt	0, 1, cr3, cr10, cr8, {0}
    abac:	02000002 	andeq	r0, r0, #2
    abb0:	20140023 	andscs	r0, r4, r3, lsr #32
    abb4:	08000022 	stmdaeq	r0, {r1, r5}
    abb8:	02be1a32 	adcseq	r1, lr, #204800	; 0x32000
    abbc:	23020000 	movwcs	r0, #8192	; 0x2000
    abc0:	06571401 	ldrbeq	r1, [r7], -r1, lsl #8
    abc4:	34080000 	strcc	r0, [r8], #-0
    abc8:	0002e71a 	andeq	lr, r2, sl, lsl r7
    abcc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    abd0:	0000d914 	andeq	sp, r0, r4, lsl r9
    abd4:	1a350800 	bne	d4cbdc <_Min_Heap_Size+0xd4c3dc>
    abd8:	000002be 			; <UNDEFINED> instruction: 0x000002be
    abdc:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    abe0:	000022c4 	andeq	r2, r0, r4, asr #5
    abe4:	be1a3708 	cdplt	7, 1, cr3, cr10, cr8, {0}
    abe8:	02000002 	andeq	r0, r0, #2
    abec:	b0140923 	andslt	r0, r4, r3, lsr #18
    abf0:	0800001f 	stmdaeq	r0, {r0, r1, r2, r3, r4}
    abf4:	02be1a39 	adcseq	r1, lr, #233472	; 0x39000
    abf8:	23020000 	movwcs	r0, #8192	; 0x2000
    abfc:	21a8140a 			; <UNDEFINED> instruction: 0x21a8140a
    ac00:	3b080000 	blcc	20ac08 <_Min_Heap_Size+0x20a408>
    ac04:	0002be1a 	andeq	fp, r2, sl, lsl lr
    ac08:	0b230200 	bleq	8cb410 <_Min_Heap_Size+0x8cac10>
    ac0c:	0022b214 	eoreq	fp, r2, r4, lsl r2
    ac10:	1a3d0800 	bne	f4cc18 <_Min_Heap_Size+0xf4c418>
    ac14:	000002be 			; <UNDEFINED> instruction: 0x000002be
    ac18:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    ac1c:	000023fd 	strdeq	r2, [r0], -sp
    ac20:	be1a3f08 	cdplt	15, 1, cr3, cr10, cr8, {0}
    ac24:	02000002 	andeq	r0, r0, #2
    ac28:	30140d23 	andscc	r0, r4, r3, lsr #26
    ac2c:	08000021 	stmdaeq	r0, {r0, r5}
    ac30:	02be1a41 	adcseq	r1, lr, #266240	; 0x41000
    ac34:	23020000 	movwcs	r0, #8192	; 0x2000
    ac38:	202e140e 	eorcs	r1, lr, lr, lsl #8
    ac3c:	43080000 	movwmi	r0, #32768	; 0x8000
    ac40:	0002be1a 	andeq	fp, r2, sl, lsl lr
    ac44:	0f230200 	svceq	0x00230200
    ac48:	21190600 	tstcs	r9, r0, lsl #12
    ac4c:	45080000 	strmi	r0, [r8, #-0]
    ac50:	00076902 	andeq	r6, r7, r2, lsl #18
    ac54:	9d011500 	cfstr32ls	mvfx1, [r1, #-0]
    ac58:	01000022 	tsteq	r0, r2, lsr #32
    ac5c:	010d01e9 	smlatteq	sp, r9, r1, r0
	...
    ac68:	01007d02 	tsteq	r0, r2, lsl #26
    ac6c:	20490116 	subcs	r0, r9, r6, lsl r1
    ac70:	e0010000 	and	r0, r1, r0
    ac74:	00010601 	andeq	r0, r1, r1, lsl #12
    ac78:	00000000 	andeq	r0, r0, r0
    ac7c:	36000000 	strcc	r0, [r0], -r0
    ac80:	01000072 	tsteq	r0, r2, ror r0
    ac84:	00000861 	andeq	r0, r0, r1, ror #16
    ac88:	00000017 	andeq	r0, r0, r7, lsl r0
    ac8c:	00082400 	andeq	r2, r8, r0, lsl #8
    ac90:	01160000 	tsteq	r6, r0
    ac94:	00002356 	andeq	r2, r0, r6, asr r3
    ac98:	0601ce01 	streq	ip, [r1], -r1, lsl #28
    ac9c:	00000001 	andeq	r0, r0, r1
    aca0:	00000000 	andeq	r0, r0, r0
    aca4:	00725600 	rsbseq	r5, r2, r0, lsl #12
    aca8:	08ad0100 	stmiaeq	sp!, {r8}
    acac:	dd180000 	ldcle	0, cr0, [r8, #-0]
    acb0:	0100000b 	tsteq	r0, fp
    acb4:	e72b01ce 	str	r0, [fp, -lr, asr #3]!
    acb8:	7e000002 	cdpvc	0, 0, cr0, cr0, cr2, {0}
    acbc:	76000072 			; <UNDEFINED> instruction: 0x76000072
    acc0:	19000072 	stmdbne	r0, {r1, r4, r5, r6}
    acc4:	00000000 	andeq	r0, r0, r0
    acc8:	00001418 	andeq	r1, r0, r8, lsl r4
    accc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    acd0:	002d1803 	eoreq	r1, sp, r3, lsl #16
    acd4:	51011a08 	tstpl	r1, r8, lsl #20
    acd8:	01d10a03 	bicseq	r0, r1, r3, lsl #20
    acdc:	011b0000 	tsteq	fp, r0
    ace0:	000021e7 	andeq	r2, r0, r7, ror #3
    ace4:	0a01bd01 	beq	7a0f0 <_Min_Heap_Size+0x798f0>
    ace8:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    acf4:	0072b200 	rsbseq	fp, r2, r0, lsl #4
    acf8:	09210100 	stmdbeq	r1!, {r8}
    acfc:	27180000 	ldrcs	r0, [r8, -r0]
    ad00:	01000011 	tsteq	r0, r1, lsl r0
    ad04:	432701bd 			; <UNDEFINED> instruction: 0x432701bd
    ad08:	da000002 	ble	ad18 <_Min_Heap_Size+0xa518>
    ad0c:	d2000072 	andle	r0, r0, #114	; 0x72
    ad10:	1c000072 	stcne	0, cr0, [r0], {114}	; 0x72
    ad14:	000012fb 	strdeq	r1, [r0], -fp
    ad18:	00000000 	andeq	r0, r0, r0
    ad1c:	00059001 	andeq	r9, r5, r1
    ad20:	01c30100 	biceq	r0, r3, r0, lsl #2
    ad24:	0009060a 	andeq	r0, r9, sl, lsl #12
    ad28:	130e1d00 	movwne	r1, #60672	; 0xed00
    ad2c:	73180000 	tstvc	r8, #0
    ad30:	73140000 	tstvc	r4, #0
    ad34:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ad38:	00000000 	andeq	r0, r0, r0
    ad3c:	00001418 	andeq	r1, r0, r8, lsl r4
    ad40:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ad44:	002d1803 	eoreq	r1, sp, r3, lsl #16
    ad48:	51011a08 	tstpl	r1, r8, lsl #20
    ad4c:	01c00a03 	biceq	r0, r0, r3, lsl #20
    ad50:	01160000 	tsteq	r6, r0
    ad54:	00002060 	andeq	r2, r0, r0, rrx
    ad58:	0601ac01 	streq	sl, [r1], -r1, lsl #24
    ad5c:	00000001 	andeq	r0, r0, r1
    ad60:	00000000 	andeq	r0, r0, r0
    ad64:	00733600 	rsbseq	r3, r3, r0, lsl #12
    ad68:	09950100 	ldmibeq	r5, {r8}
    ad6c:	27180000 	ldrcs	r0, [r8, -r0]
    ad70:	01000011 	tsteq	r0, r1, lsl r0
    ad74:	432901ac 			; <UNDEFINED> instruction: 0x432901ac
    ad78:	5e000002 	cdppl	0, 0, cr0, cr0, cr2, {0}
    ad7c:	56000073 			; <UNDEFINED> instruction: 0x56000073
    ad80:	1e000073 	mcrne	0, 0, r0, cr0, cr3, {3}
    ad84:	0000131c 	andeq	r1, r0, ip, lsl r3
    ad88:	00000000 	andeq	r0, r0, r0
    ad8c:	00000001 	andeq	r0, r0, r1
    ad90:	00000000 	andeq	r0, r0, r0
    ad94:	01b20100 			; <UNDEFINED> instruction: 0x01b20100
    ad98:	00097a03 	andeq	r7, r9, r3, lsl #20
    ad9c:	132b1d00 			; <UNDEFINED> instruction: 0x132b1d00
    ada0:	739a0000 	orrsvc	r0, sl, #0
    ada4:	73980000 	orrsvc	r0, r8, #0
    ada8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    adac:	00000000 	andeq	r0, r0, r0
    adb0:	00001418 	andeq	r1, r0, r8, lsl r4
    adb4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    adb8:	002d1803 	eoreq	r1, sp, r3, lsl #16
    adbc:	51011a08 	tstpl	r1, r8, lsl #20
    adc0:	01af0a03 			; <UNDEFINED> instruction: 0x01af0a03
    adc4:	011b0000 	tsteq	fp, r0
    adc8:	0000215b 	andeq	r2, r0, fp, asr r1
    adcc:	0a019c01 	beq	71dd8 <_Min_Heap_Size+0x715d8>
    add0:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    addc:	0073ad00 	rsbseq	sl, r3, r0, lsl #26
    ade0:	0a090100 	beq	24b1e8 <_Min_Heap_Size+0x24a9e8>
    ade4:	27180000 	ldrcs	r0, [r8, -r0]
    ade8:	01000011 	tsteq	r0, r1, lsl r0
    adec:	432b019c 			; <UNDEFINED> instruction: 0x432b019c
    adf0:	d5000002 	strle	r0, [r0, #-2]
    adf4:	cd000073 	stcgt	0, cr0, [r0, #-460]	; 0xfffffe34
    adf8:	1c000073 	stcne	0, cr0, [r0], {115}	; 0x73
    adfc:	00001356 	andeq	r1, r0, r6, asr r3
    ae00:	00000000 	andeq	r0, r0, r0
    ae04:	00057801 	andeq	r7, r5, r1, lsl #16
    ae08:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    ae0c:	0009ee0a 	andeq	lr, r9, sl, lsl #28
    ae10:	13691d00 	cmnne	r9, #0, 26
    ae14:	74130000 	ldrvc	r0, [r3], #-0
    ae18:	740f0000 	strvc	r0, [pc], #-0	; ae20 <_Min_Heap_Size+0xa620>
    ae1c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ae20:	00000000 	andeq	r0, r0, r0
    ae24:	00001418 	andeq	r1, r0, r8, lsl r4
    ae28:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ae2c:	002d1803 	eoreq	r1, sp, r3, lsl #16
    ae30:	51011a08 	tstpl	r1, r8, lsl #20
    ae34:	019f0a03 	orrseq	r0, pc, r3, lsl #20
    ae38:	01160000 	tsteq	r6, r0
    ae3c:	0000241c 	andeq	r2, r0, ip, lsl r4
    ae40:	06018a01 	streq	r8, [r1], -r1, lsl #20
    ae44:	00000001 	andeq	r0, r0, r1
    ae48:	00000000 	andeq	r0, r0, r0
    ae4c:	00743100 	rsbseq	r3, r4, r0, lsl #2
    ae50:	0a7d0100 	beq	1f4b258 <_Min_Heap_Size+0x1f4aa58>
    ae54:	27180000 	ldrcs	r0, [r8, -r0]
    ae58:	01000011 	tsteq	r0, r1, lsl r0
    ae5c:	4327018a 			; <UNDEFINED> instruction: 0x4327018a
    ae60:	59000002 	stmdbpl	r0, {r1}
    ae64:	51000074 	tstpl	r0, r4, ror r0
    ae68:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    ae6c:	00001339 	andeq	r1, r0, r9, lsr r3
    ae70:	00000000 	andeq	r0, r0, r0
    ae74:	00000001 	andeq	r0, r0, r1
    ae78:	00000000 	andeq	r0, r0, r0
    ae7c:	01900100 	orrseq	r0, r0, r0, lsl #2
    ae80:	000a6203 	andeq	r6, sl, r3, lsl #4
    ae84:	13481d00 	movtne	r1, #36096	; 0x8d00
    ae88:	74950000 	ldrvc	r0, [r5], #0
    ae8c:	74930000 	ldrvc	r0, [r3], #0
    ae90:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ae94:	00000000 	andeq	r0, r0, r0
    ae98:	00001418 	andeq	r1, r0, r8, lsl r4
    ae9c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    aea0:	002d1803 	eoreq	r1, sp, r3, lsl #16
    aea4:	51011a08 	tstpl	r1, r8, lsl #20
    aea8:	018d0a03 	orreq	r0, sp, r3, lsl #20
    aeac:	01160000 	tsteq	r6, r0
    aeb0:	0000209d 	muleq	r0, sp, r0
    aeb4:	06017b01 	streq	r7, [r1], -r1, lsl #22
    aeb8:	00000001 	andeq	r0, r0, r1
    aebc:	00000000 	andeq	r0, r0, r0
    aec0:	0074a800 	rsbseq	sl, r4, r0, lsl #16
    aec4:	0ba40100 	bleq	fe90b2cc <_estack+0xde90a094>
    aec8:	27180000 	ldrcs	r0, [r8, -r0]
    aecc:	01000011 	tsteq	r0, r1, lsl r0
    aed0:	4325017b 			; <UNDEFINED> instruction: 0x4325017b
    aed4:	d0000002 	andle	r0, r0, r2
    aed8:	c8000074 	stmdagt	r0, {r2, r4, r5, r6}
    aedc:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    aee0:	0000203b 	andeq	r2, r0, fp, lsr r0
    aee4:	34017b01 	strcc	r7, [r1], #-2817	; 0xfffff4ff
    aee8:	000002e7 	andeq	r0, r0, r7, ror #5
    aeec:	00007514 	andeq	r7, r0, r4, lsl r5
    aef0:	0000750a 	andeq	r7, r0, sl, lsl #10
    aef4:	00219718 	eoreq	r9, r1, r8, lsl r7
    aef8:	017b0100 	cmneq	fp, r0, lsl #2
    aefc:	000ba44d 	andeq	sl, fp, sp, asr #8
    af00:	00755e00 	rsbseq	r5, r5, r0, lsl #28
    af04:	00755600 	rsbseq	r5, r5, r0, lsl #12
    af08:	22131800 	andscs	r1, r3, #0, 16
    af0c:	7b010000 	blvc	4af14 <_Min_Heap_Size+0x4a714>
    af10:	0ba46901 	bleq	fe92531c <_estack+0xde9240e4>
    af14:	75960000 	ldrvc	r0, [r6]
    af18:	75920000 	ldrvc	r0, [r2]
    af1c:	b01c0000 	andslt	r0, ip, r0
    af20:	00000012 	andeq	r0, r0, r2, lsl r0
    af24:	01000000 	mrseq	r0, (UNDEF: 0)
    af28:	00000548 	andeq	r0, r0, r8, asr #10
    af2c:	03018001 	movweq	r8, #4097	; 0x1001
    af30:	00000b11 	andeq	r0, r0, r1, lsl fp
    af34:	0012c31d 	andseq	ip, r2, sp, lsl r3
    af38:	0075b800 	rsbseq	fp, r5, r0, lsl #16
    af3c:	0075b400 	rsbseq	fp, r5, r0, lsl #8
    af40:	e31c0000 	tst	ip, #0
    af44:	00000011 	andeq	r0, r0, r1, lsl r0
    af48:	01000000 	mrseq	r0, (UNDEF: 0)
    af4c:	00000560 	andeq	r0, r0, r0, ror #10
    af50:	03018001 	movweq	r8, #4097	; 0x1001
    af54:	00000b89 	andeq	r0, r0, r9, lsl #23
    af58:	0012191d 	andseq	r1, r2, sp, lsl r9
    af5c:	0075da00 	rsbseq	sp, r5, r0, lsl #20
    af60:	0075d600 	rsbseq	sp, r5, r0, lsl #12
    af64:	120c1d00 	andne	r1, ip, #0, 26
    af68:	75fc0000 	ldrbvc	r0, [ip, #0]!
    af6c:	75f80000 	ldrbvc	r0, [r8, #0]!
    af70:	ff1d0000 			; <UNDEFINED> instruction: 0xff1d0000
    af74:	20000011 	andcs	r0, r0, r1, lsl r0
    af78:	1a000076 	bne	b158 <_Min_Heap_Size+0xa958>
    af7c:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    af80:	000011f2 	strdeq	r1, [r0], -r2
    af84:	00007650 	andeq	r7, r0, r0, asr r6
    af88:	0000764c 	andeq	r7, r0, ip, asr #12
    af8c:	0005601f 	andeq	r6, r5, pc, lsl r0
    af90:	12262000 	eorne	r2, r6, #0
    af94:	76780000 	ldrbtvc	r0, [r8], -r0
    af98:	766e0000 	strbtvc	r0, [lr], -r0
    af9c:	33200000 	nopcc	{0}	; <UNPREDICTABLE>
    afa0:	c6000012 			; <UNDEFINED> instruction: 0xc6000012
    afa4:	c0000076 	andgt	r0, r0, r6, ror r0
    afa8:	20000076 	andcs	r0, r0, r6, ror r0
    afac:	00001240 	andeq	r1, r0, r0, asr #4
    afb0:	0000770d 	andeq	r7, r0, sp, lsl #14
    afb4:	0000770b 	andeq	r7, r0, fp, lsl #14
    afb8:	00190000 	andseq	r0, r9, r0
    afbc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    afc0:	1a000014 	bne	b018 <_Min_Heap_Size+0xa818>
    afc4:	03055001 	movweq	r5, #20481	; 0x5001
    afc8:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    afcc:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    afd0:	00017e0a 	andeq	r7, r1, sl, lsl #28
    afd4:	e7042100 	str	r2, [r4, -r0, lsl #2]
    afd8:	09000002 	stmdbeq	r0, {r1}
    afdc:	00000ba4 	andeq	r0, r0, r4, lsr #23
    afe0:	239b0122 	orrscs	r0, fp, #-2147483640	; 0x80000008
    afe4:	60010000 	andvs	r0, r1, r0
    afe8:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    afec:	00000002 	andeq	r0, r0, r2
    aff0:	00000000 	andeq	r0, r0, r0
    aff4:	02000000 	andeq	r0, r0, #0
    aff8:	e501007d 	str	r0, [r1, #-125]	; 0xffffff83
    affc:	2300000b 	movwcs	r0, #11
    b000:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b004:	00000000 	andeq	r0, r0, r0
    b008:	00000002 	andeq	r0, r0, r2
    b00c:	00000000 	andeq	r0, r0, r0
    b010:	01630100 	cmneq	r3, r0, lsl #2
    b014:	0115000a 	tsteq	r5, sl
    b018:	0000200b 	andeq	r2, r0, fp
    b01c:	06015601 	streq	r5, [r1], -r1, lsl #12
    b020:	00000001 	andeq	r0, r0, r1
    b024:	00000000 	andeq	r0, r0, r0
    b028:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b02c:	77011601 	strvc	r1, [r1, -r1, lsl #12]
    b030:	01000023 	tsteq	r0, r3, lsr #32
    b034:	0106012a 	tsteq	r6, sl, lsr #2
	...
    b040:	00007720 	andeq	r7, r0, r0, lsr #14
    b044:	000d5601 	andeq	r5, sp, r1, lsl #12
    b048:	20f41800 	rscscs	r1, r4, r0, lsl #16
    b04c:	2a010000 	bcs	4b054 <_Min_Heap_Size+0x4a854>
    b050:	0d563301 	ldcleq	3, cr3, [r6, #-4]
    b054:	77480000 	strbvc	r0, [r8, -r0]
    b058:	77400000 	strbvc	r0, [r0, -r0]
    b05c:	00240000 	eoreq	r0, r4, r0
    b060:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b064:	4b000014 	blmi	b0bc <_Min_Heap_Size+0xa8bc>
    b068:	1a00000c 	bne	b0a0 <_Min_Heap_Size+0xa8a0>
    b06c:	03055001 	movweq	r5, #20481	; 0x5001
    b070:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b074:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b078:	00012d0a 	andeq	r2, r1, sl, lsl #26
    b07c:	00000024 	andeq	r0, r0, r4, lsr #32
    b080:	00141800 	andseq	r1, r4, r0, lsl #16
    b084:	000c6900 	andeq	r6, ip, r0, lsl #18
    b088:	50011a00 	andpl	r1, r1, r0, lsl #20
    b08c:	2d180305 	ldccs	3, cr0, [r8, #-20]	; 0xffffffec
    b090:	011a0800 	tsteq	sl, r0, lsl #16
    b094:	2e0a0351 	mcrcs	3, 0, r0, cr10, cr1, {2}
    b098:	00240001 	eoreq	r0, r4, r1
    b09c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b0a0:	87000014 	smladhi	r0, r4, r0, r0
    b0a4:	1a00000c 	bne	b0dc <_Min_Heap_Size+0xa8dc>
    b0a8:	03055001 	movweq	r5, #20481	; 0x5001
    b0ac:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b0b0:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b0b4:	0001360a 	andeq	r3, r1, sl, lsl #12
    b0b8:	00000024 	andeq	r0, r0, r4, lsr #32
    b0bc:	00141800 	andseq	r1, r4, r0, lsl #16
    b0c0:	000ca500 	andeq	sl, ip, r0, lsl #10
    b0c4:	50011a00 	andpl	r1, r1, r0, lsl #20
    b0c8:	2d180305 	ldccs	3, cr0, [r8, #-20]	; 0xffffffec
    b0cc:	011a0800 	tsteq	sl, r0, lsl #16
    b0d0:	370a0351 	smlsdcc	sl, r1, r3, r0
    b0d4:	00240001 	eoreq	r0, r4, r1
    b0d8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b0dc:	c3000014 	movwgt	r0, #20
    b0e0:	1a00000c 	bne	b118 <_Min_Heap_Size+0xa918>
    b0e4:	03055001 	movweq	r5, #20481	; 0x5001
    b0e8:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b0ec:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b0f0:	0001380a 	andeq	r3, r1, sl, lsl #16
    b0f4:	00000024 	andeq	r0, r0, r4, lsr #32
    b0f8:	00141800 	andseq	r1, r4, r0, lsl #16
    b0fc:	000ce100 	andeq	lr, ip, r0, lsl #2
    b100:	50011a00 	andpl	r1, r1, r0, lsl #20
    b104:	2d180305 	ldccs	3, cr0, [r8, #-20]	; 0xffffffec
    b108:	011a0800 	tsteq	sl, r0, lsl #16
    b10c:	390a0351 	stmdbcc	sl, {r0, r4, r6, r8, r9}
    b110:	00240001 	eoreq	r0, r4, r1
    b114:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b118:	ff000014 			; <UNDEFINED> instruction: 0xff000014
    b11c:	1a00000c 	bne	b154 <_Min_Heap_Size+0xa954>
    b120:	03055001 	movweq	r5, #20481	; 0x5001
    b124:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b128:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b12c:	00013a0a 	andeq	r3, r1, sl, lsl #20
    b130:	00000024 	andeq	r0, r0, r4, lsr #32
    b134:	00141800 	andseq	r1, r4, r0, lsl #16
    b138:	000d1d00 	andeq	r1, sp, r0, lsl #26
    b13c:	50011a00 	andpl	r1, r1, r0, lsl #20
    b140:	2d180305 	ldccs	3, cr0, [r8, #-20]	; 0xffffffec
    b144:	011a0800 	tsteq	sl, r0, lsl #16
    b148:	3b0a0351 	blcc	28be94 <_Min_Heap_Size+0x28b694>
    b14c:	00240001 	eoreq	r0, r4, r1
    b150:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b154:	3b000014 	blcc	b1ac <_Min_Heap_Size+0xa9ac>
    b158:	1a00000d 	bne	b194 <_Min_Heap_Size+0xa994>
    b15c:	03055001 	movweq	r5, #20481	; 0x5001
    b160:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b164:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b168:	00013c0a 	andeq	r3, r1, sl, lsl #24
    b16c:	00000019 	andeq	r0, r0, r9, lsl r0
    b170:	00141800 	andseq	r1, r4, r0, lsl #16
    b174:	50011a00 	andpl	r1, r1, r0, lsl #20
    b178:	2d180305 	ldccs	3, cr0, [r8, #-20]	; 0xffffffec
    b17c:	011a0800 	tsteq	sl, r0, lsl #16
    b180:	3d0a0351 	stccc	3, cr0, [sl, #-324]	; 0xfffffebc
    b184:	21000001 	tstcs	r0, r1
    b188:	00081804 	andeq	r1, r8, r4, lsl #16
    b18c:	b8012500 	stmdalt	r1, {r8, sl, sp}
    b190:	01000023 	tsteq	r0, r3, lsr #32
    b194:	01060117 	tsteq	r6, r7, lsl r1
	...
    b1a0:	01007d02 	tsteq	r0, r2, lsl #26
    b1a4:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    b1a8:	00209118 	eoreq	r9, r0, r8, lsl r1
    b1ac:	01170100 	tsteq	r7, r0, lsl #2
    b1b0:	0002e71e 	andeq	lr, r2, lr, lsl r7
    b1b4:	00778000 	rsbseq	r8, r7, r0
    b1b8:	00777c00 	rsbseq	r7, r7, r0, lsl #24
    b1bc:	14022300 	strne	r2, [r2], #-768	; 0xfffffd00
    b1c0:	00000000 	andeq	r0, r0, r0
    b1c4:	00010000 	andeq	r0, r1, r0
    b1c8:	00000000 	andeq	r0, r0, r0
    b1cc:	01000000 	mrseq	r0, (UNDEF: 0)
    b1d0:	23030120 	movwcs	r0, #12576	; 0x3120
    b1d4:	0000140d 	andeq	r1, r0, sp, lsl #8
    b1d8:	00000000 	andeq	r0, r0, r0
    b1dc:	00000001 	andeq	r0, r0, r1
    b1e0:	00000000 	andeq	r0, r0, r0
    b1e4:	01210100 			; <UNDEFINED> instruction: 0x01210100
    b1e8:	01250003 			; <UNDEFINED> instruction: 0x01250003
    b1ec:	00002079 	andeq	r2, r0, r9, ror r0
    b1f0:	06010001 	streq	r0, [r1], -r1
    b1f4:	00000001 	andeq	r0, r0, r1
    b1f8:	00000000 	andeq	r0, r0, r0
    b1fc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b200:	000deb01 	andeq	lr, sp, r1, lsl #22
    b204:	13f72300 	mvnsne	r2, #0, 6
    b208:	00000000 	andeq	r0, r0, r0
    b20c:	00020000 	andeq	r0, r2, r0
    b210:	00000000 	andeq	r0, r0, r0
    b214:	01000000 	mrseq	r0, (UNDEF: 0)
    b218:	00030103 	andeq	r0, r3, r3, lsl #2
    b21c:	1ff80126 	svcne	0x00f80126
    b220:	e3010000 	movw	r0, #4096	; 0x1000
    b224:	02e7010a 	rsceq	r0, r7, #-2147483646	; 0x80000002
    b228:	16980000 	ldrne	r0, [r8], r0
    b22c:	16c00800 	strbne	r0, [r0], r0, lsl #16
    b230:	7d020800 	stcvc	8, cr0, [r2, #-0]
    b234:	0e720100 	rpweqs	f0, f2, f0
    b238:	47270000 	strmi	r0, [r7, -r0]!
    b23c:	01000023 	tsteq	r0, r3, lsr #32
    b240:	02e726e3 	rsceq	r2, r7, #238026752	; 0xe300000
    b244:	77a70000 	strvc	r0, [r7, r0]!
    b248:	77a10000 	strvc	r0, [r1, r0]!
    b24c:	b6280000 	strtlt	r0, [r8], -r0
    b250:	98000011 	stmdals	r0, {r0, r4}
    b254:	02080016 	andeq	r0, r8, #22
    b258:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
    b25c:	080016ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, sl, ip}
    b260:	1d0be501 	cfstr32ne	mvfx14, [fp, #-4]
    b264:	000011c9 	andeq	r1, r0, r9, asr #3
    b268:	000077db 	ldrdeq	r7, [r0], -fp
    b26c:	000077d5 	ldrdeq	r7, [r0], -r5
    b270:	0012d129 	andseq	sp, r2, r9, lsr #2
    b274:	0016a600 	andseq	sl, r6, r0, lsl #12
    b278:	16a60108 	strtne	r0, [r6], r8, lsl #2
    b27c:	16ae0800 	strtne	r0, [lr], r0, lsl #16
    b280:	ee020800 	cdp	8, 0, cr0, cr2, cr0, {0}
    b284:	ed1d0307 	ldc	3, cr0, [sp, #-28]	; 0xffffffe4
    b288:	0b000012 	bleq	b2d8 <_Min_Heap_Size+0xaad8>
    b28c:	09000078 	stmdbeq	r0, {r3, r4, r5, r6}
    b290:	1d000078 	stcne	0, cr0, [r0, #-480]	; 0xfffffe20
    b294:	000012e0 	andeq	r1, r0, r0, ror #5
    b298:	00007821 	andeq	r7, r0, r1, lsr #16
    b29c:	0000781f 	andeq	r7, r0, pc, lsl r8
    b2a0:	2a000000 	bcs	b2a8 <_Min_Heap_Size+0xaaa8>
    b2a4:	00217201 	eoreq	r7, r1, r1, lsl #4
    b2a8:	06d60100 	ldrbeq	r0, [r6], r0, lsl #2
    b2ac:	00000001 	andeq	r0, r0, r1
    b2b0:	00000000 	andeq	r0, r0, r0
    b2b4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b2b8:	000ecf01 	andeq	ip, lr, r1, lsl #30
    b2bc:	11d72800 	bicsne	r2, r7, r0, lsl #16
    b2c0:	00000000 	andeq	r0, r0, r0
    b2c4:	00020000 	andeq	r0, r2, r0
    b2c8:	00000000 	andeq	r0, r0, r0
    b2cc:	01000000 	mrseq	r0, (UNDEF: 0)
    b2d0:	022303d9 	eoreq	r0, r3, #1677721603	; 0x64000003
    b2d4:	00000014 	andeq	r0, r0, r4, lsl r0
    b2d8:	04000000 	streq	r0, [r0], #-0
	...
    b2e4:	03079402 	movweq	r9, #29698	; 0x7402
    b2e8:	00140223 	andseq	r0, r4, r3, lsr #4
    b2ec:	00000000 	andeq	r0, r0, r0
    b2f0:	00000100 	andeq	r0, r0, r0, lsl #2
    b2f4:	00000000 	andeq	r0, r0, r0
    b2f8:	99020000 	stmdbls	r2, {}	; <UNPREDICTABLE>
    b2fc:	00000307 	andeq	r0, r0, r7, lsl #6
    b300:	10d8012b 	sbcsne	r0, r8, fp, lsr #2
    b304:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    b308:	00000106 	andeq	r0, r0, r6, lsl #2
    b30c:	00000000 	andeq	r0, r0, r0
    b310:	78360000 	ldmdavc	r6!, {}	; <UNPREDICTABLE>
    b314:	6b010000 	blvs	4b31c <_Min_Heap_Size+0x4ab1c>
    b318:	2700000f 	strcs	r0, [r0, -pc]
    b31c:	00001127 	andeq	r1, r0, r7, lsr #2
    b320:	4324c901 			; <UNDEFINED> instruction: 0x4324c901
    b324:	5e000002 	cdppl	0, 0, cr0, cr0, cr2, {0}
    b328:	56000078 			; <UNDEFINED> instruction: 0x56000078
    b32c:	2c000078 	stccs	0, cr0, [r0], {120}	; 0x78
    b330:	00001377 	andeq	r1, r0, r7, ror r3
    b334:	00000000 	andeq	r0, r0, r0
    b338:	00000001 	andeq	r0, r0, r1
    b33c:	00000000 	andeq	r0, r0, r0
    b340:	03cf0100 	biceq	r0, pc, #0, 2
    b344:	00000f51 	andeq	r0, r0, r1, asr pc
    b348:	0013861d 	andseq	r8, r3, sp, lsl r6
    b34c:	00789a00 	rsbseq	r9, r8, r0, lsl #20
    b350:	00789800 	rsbseq	r9, r8, r0, lsl #16
    b354:	14022300 	strne	r2, [r2], #-768	; 0xfffffd00
    b358:	00000000 	andeq	r0, r0, r0
    b35c:	00010000 	andeq	r0, r1, r0
    b360:	00000000 	andeq	r0, r0, r0
    b364:	02000000 	andeq	r0, r0, #0
    b368:	230506bf 	movwcs	r0, #22207	; 0x56bf
    b36c:	0000140d 	andeq	r1, r0, sp, lsl #8
    b370:	00000000 	andeq	r0, r0, r0
    b374:	00000001 	andeq	r0, r0, r1
    b378:	00000000 	andeq	r0, r0, r0
    b37c:	06c00200 	strbeq	r0, [r0], r0, lsl #4
    b380:	00190005 	andseq	r0, r9, r5
    b384:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b388:	1a000014 	bne	b3e0 <_Min_Heap_Size+0xabe0>
    b38c:	03055001 	movweq	r5, #20481	; 0x5001
    b390:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b394:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    b398:	0000cc08 	andeq	ip, r0, r8, lsl #24
    b39c:	1077012b 	rsbsne	r0, r7, fp, lsr #2
    b3a0:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    b3a4:	16680106 	strbtne	r0, [r8], -r6, lsl #2
    b3a8:	16980800 	ldrne	r0, [r8], r0, lsl #16
    b3ac:	78ad0800 	stmiavc	sp!, {fp}
    b3b0:	db010000 	blle	4b3b8 <_Min_Heap_Size+0x4abb8>
    b3b4:	2700000f 	strcs	r0, [r0, -pc]
    b3b8:	00001127 	andeq	r1, r0, r7, lsr #2
    b3bc:	4323b901 			; <UNDEFINED> instruction: 0x4323b901
    b3c0:	d5000002 	strle	r0, [r0, #-2]
    b3c4:	cd000078 	stcgt	0, cr0, [r0, #-480]	; 0xfffffe20
    b3c8:	2c000078 	stccs	0, cr0, [r0], {120}	; 0x78
    b3cc:	00001394 	muleq	r0, r4, r3
    b3d0:	0800166e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9, sl, ip}
    b3d4:	00166e01 	andseq	r6, r6, r1, lsl #28
    b3d8:	00168208 	andseq	r8, r6, r8, lsl #4
    b3dc:	03bf0108 			; <UNDEFINED> instruction: 0x03bf0108
    b3e0:	00000fc1 	andeq	r0, r0, r1, asr #31
    b3e4:	0013a31d 	andseq	sl, r3, sp, lsl r3
    b3e8:	00791100 	rsbseq	r1, r9, r0, lsl #2
    b3ec:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    b3f0:	8c190000 	ldchi	0, cr0, [r9], {-0}
    b3f4:	18080016 	stmdane	r8, {r1, r2, r4}
    b3f8:	1a000014 	bne	b450 <_Min_Heap_Size+0xac50>
    b3fc:	03055001 	movweq	r5, #20481	; 0x5001
    b400:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b404:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    b408:	0000bc08 	andeq	fp, r0, r8, lsl #24
    b40c:	1028012b 	eorne	r0, r8, fp, lsr #2
    b410:	a3010000 	movwge	r0, #4096	; 0x1000
    b414:	15dc0106 	ldrbne	r0, [ip, #262]	; 0x106
    b418:	16680800 	strbtne	r0, [r8], -r0, lsl #16
    b41c:	79240800 	stmdbvc	r4!, {fp}
    b420:	2c010000 	stccs	0, cr0, [r1], {-0}
    b424:	27000011 	smladcs	r0, r1, r0, r0
    b428:	00001127 	andeq	r1, r0, r7, lsr #2
    b42c:	4325a301 			; <UNDEFINED> instruction: 0x4325a301
    b430:	4c000002 	stcmi	0, cr0, [r0], {2}
    b434:	44000079 	strmi	r0, [r0], #-121	; 0xffffff87
    b438:	27000079 	smlsdxcs	r0, r9, r0, r0
    b43c:	00002198 	muleq	r0, r8, r1
    b440:	e734a301 	ldr	sl, [r4, -r1, lsl #6]!
    b444:	92000002 	andls	r0, r0, #2
    b448:	86000079 			; <UNDEFINED> instruction: 0x86000079
    b44c:	27000079 	smlsdxcs	r0, r9, r0, r0
    b450:	00002214 	andeq	r2, r0, r4, lsl r2
    b454:	e74ea301 	strb	sl, [lr, -r1, lsl #6]
    b458:	ee000002 	cdp	0, 0, cr0, cr0, cr2, {0}
    b45c:	e2000079 	and	r0, r0, #121	; 0x79
    b460:	2d000079 	stccs	0, cr0, [r0, #-484]	; 0xfffffe1c
    b464:	00002227 	andeq	r2, r0, r7, lsr #4
    b468:	e70ca501 	str	sl, [ip, -r1, lsl #10]
    b46c:	4a000002 	bmi	b47c <_Min_Heap_Size+0xac7c>
    b470:	3e00007a 	mcrcc	0, 0, r0, cr0, cr10, {3}
    b474:	2e00007a 	mcrcs	0, 0, r0, cr0, cr10, {3}
    b478:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b47c:	080015ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, ip}
    b480:	0015ec01 	andseq	lr, r5, r1, lsl #24
    b484:	0015f408 	andseq	pc, r5, r8, lsl #8
    b488:	13ab0108 			; <UNDEFINED> instruction: 0x13ab0108
    b48c:	00124e2f 	andseq	r4, r2, pc, lsr #28
    b490:	0015f400 	andseq	pc, r5, r0, lsl #8
    b494:	05180208 	ldreq	r0, [r8, #-520]	; 0xfffffdf8
    b498:	ad010000 	stcge	0, cr0, [r1, #-0]
    b49c:	0010c503 	andseq	ip, r0, r3, lsl #10
    b4a0:	127b1d00 	rsbsne	r1, fp, #0, 26
    b4a4:	7aa00000 	bvc	fe80b4ac <_estack+0xde80a274>
    b4a8:	7a9a0000 	bvc	fe68b4b0 <_estack+0xde68a278>
    b4ac:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    b4b0:	d2000012 	andle	r0, r0, #18
    b4b4:	cc00007a 	stcgt	0, cr0, [r0], {122}	; 0x7a
    b4b8:	1d00007a 	stcne	0, cr0, [r0, #-488]	; 0xfffffe18
    b4bc:	00001261 	andeq	r1, r0, r1, ror #4
    b4c0:	00007b06 	andeq	r7, r0, r6, lsl #22
    b4c4:	00007afe 	strdeq	r7, [r0], -lr
    b4c8:	0005181f 	andeq	r1, r5, pc, lsl r8
    b4cc:	12882000 	addne	r2, r8, #0
    b4d0:	7b460000 	blvc	118b4d8 <_Min_Heap_Size+0x118acd8>
    b4d4:	7b3e0000 	blvc	f8b4dc <_Min_Heap_Size+0xf8acdc>
    b4d8:	95200000 	strls	r0, [r0, #-0]!
    b4dc:	82000012 	andhi	r0, r0, #18
    b4e0:	7e00007b 	mcrvc	0, 0, r0, cr0, cr11, {3}
    b4e4:	2000007b 	andcs	r0, r0, fp, ror r0
    b4e8:	000012a2 	andeq	r1, r0, r2, lsr #5
    b4ec:	00007ba2 	andeq	r7, r0, r2, lsr #23
    b4f0:	00007ba0 	andeq	r7, r0, r0, lsr #23
    b4f4:	d12f0000 			; <UNDEFINED> instruction: 0xd12f0000
    b4f8:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    b4fc:	01080016 	tsteq	r8, r6, lsl r0
    b500:	00000530 	andeq	r0, r0, r0, lsr r5
    b504:	f503ad01 			; <UNDEFINED> instruction: 0xf503ad01
    b508:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    b50c:	000012ed 	andeq	r1, r0, sp, ror #5
    b510:	00007bb9 			; <UNDEFINED> instruction: 0x00007bb9
    b514:	00007bb5 			; <UNDEFINED> instruction: 0x00007bb5
    b518:	0012e01d 	andseq	lr, r2, sp, lsl r0
    b51c:	007bdb00 	rsbseq	sp, fp, r0, lsl #22
    b520:	007bd700 	rsbseq	sp, fp, r0, lsl #14
    b524:	3c240000 	stccc	0, cr0, [r4], #-0
    b528:	18080016 	stmdane	r8, {r1, r2, r4}
    b52c:	12000014 	andne	r0, r0, #20
    b530:	1a000011 	bne	b57c <_Min_Heap_Size+0xad7c>
    b534:	03055001 	movweq	r5, #20481	; 0x5001
    b538:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    b53c:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    b540:	1900a808 	stmdbne	r0, {r3, fp, sp, pc}
    b544:	08001646 	stmdaeq	r0, {r1, r2, r6, r9, sl, ip}
    b548:	00001418 	andeq	r1, r0, r8, lsl r4
    b54c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    b550:	002d1803 	eoreq	r1, sp, r3, lsl #16
    b554:	51011a08 	tstpl	r1, r8, lsl #20
    b558:	00a90802 	adceq	r0, r9, r2, lsl #16
    b55c:	e4012b00 	str	r2, [r1], #-2816	; 0xfffff500
    b560:	01000022 	tsteq	r0, r2, lsr #32
    b564:	a001068d 	andge	r0, r1, sp, lsl #13
    b568:	dc080015 	stcle	0, cr0, [r8], {21}
    b56c:	f9080015 			; <UNDEFINED> instruction: 0xf9080015
    b570:	0100007b 	tsteq	r0, fp, ror r0
    b574:	000011b6 			; <UNDEFINED> instruction: 0x000011b6
    b578:	00203b27 	eoreq	r3, r0, r7, lsr #22
    b57c:	2c8d0100 	stfcss	f0, [sp], {0}
    b580:	000002e7 	andeq	r0, r0, r7, ror #5
    b584:	00007c23 	andeq	r7, r0, r3, lsr #24
    b588:	00007c19 	andeq	r7, r0, r9, lsl ip
    b58c:	0013c02c 	andseq	ip, r3, ip, lsr #32
    b590:	0015aa00 	andseq	sl, r5, r0, lsl #20
    b594:	15aa0108 	strne	r0, [sl, #264]!	; 0x108
    b598:	15c80800 	strbne	r0, [r8, #2048]	; 0x800
    b59c:	93010800 	movwls	r0, #6144	; 0x1800
    b5a0:	00119c03 	andseq	r9, r1, r3, lsl #24
    b5a4:	13cf1d00 	bicne	r1, pc, #0, 26
    b5a8:	7c690000 	stclvc	0, cr0, [r9], #-0
    b5ac:	7c650000 	stclvc	0, cr0, [r5], #-0
    b5b0:	dc200000 	stcle	0, cr0, [r0], #-0
    b5b4:	90000013 	andls	r0, r0, r3, lsl r0
    b5b8:	8a00007c 	bhi	b7b0 <_Min_Heap_Size+0xafb0>
    b5bc:	2000007c 	andcs	r0, r0, ip, ror r0
    b5c0:	000013e9 	andeq	r1, r0, r9, ror #7
    b5c4:	00007cbd 			; <UNDEFINED> instruction: 0x00007cbd
    b5c8:	00007cb9 			; <UNDEFINED> instruction: 0x00007cb9
    b5cc:	15d21900 	ldrbne	r1, [r2, #2304]	; 0x900
    b5d0:	14180800 	ldrne	r0, [r8], #-2048	; 0xfffff800
    b5d4:	011a0000 	tsteq	sl, r0
    b5d8:	18030550 	stmdane	r3, {r4, r6, r8, sl}
    b5dc:	1a08002d 	bne	20b698 <_Min_Heap_Size+0x20ae98>
    b5e0:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    b5e4:	30000090 	mulcc	r0, r0, r0
    b5e8:	0000238c 	andeq	r2, r0, ip, lsl #7
    b5ec:	1a07e602 	bne	204dfc <_Min_Heap_Size+0x2045fc>
    b5f0:	0002e701 	andeq	lr, r2, r1, lsl #14
    b5f4:	11d70300 	bicsne	r0, r7, r0, lsl #6
    b5f8:	3a310000 	bcc	c4b600 <_Min_Heap_Size+0xc4ae00>
    b5fc:	02000022 	andeq	r0, r0, #34	; 0x22
    b600:	e73207e6 	ldr	r0, [r2, -r6, ror #15]!
    b604:	00000002 	andeq	r0, r0, r2
    b608:	0020c932 	eoreq	ip, r0, r2, lsr r9
    b60c:	07920200 	ldreq	r0, [r2, r0, lsl #4]
    b610:	03010122 	movweq	r0, #4386	; 0x1122
    b614:	00228933 	eoreq	r8, r2, r3, lsr r9
    b618:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    b61c:	4e030116 	mcrmi	1, 0, r0, cr3, cr6, {0}
    b620:	31000012 	tstcc	r0, r2, lsl r0
    b624:	00002217 	andeq	r2, r0, r7, lsl r2
    b628:	34076002 	strcc	r6, [r7], #-2
    b62c:	000002e7 	andeq	r0, r0, r7, ror #5
    b630:	00203b31 	eoreq	r3, r0, r1, lsr fp
    b634:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    b638:	0002e747 	andeq	lr, r2, r7, asr #14
    b63c:	21973100 	orrscs	r3, r7, r0, lsl #2
    b640:	60020000 	andvs	r0, r2, r0
    b644:	0baa6607 	bleq	feaa4e68 <_estack+0xdeaa3c30>
    b648:	13310000 	teqne	r1, #0
    b64c:	02000022 	andeq	r0, r0, #34	; 0x22
    b650:	aa880760 	bge	fe20d3d8 <_estack+0xde20c1a0>
    b654:	3400000b 	strcc	r0, [r0], #-11
    b658:	0000232c 	andeq	r2, r0, ip, lsr #6
    b65c:	0c076202 	sfmeq	f6, 4, [r7], {2}
    b660:	000002e7 	andeq	r0, r0, r7, ror #5
    b664:	0020fd34 	eoreq	pc, r0, r4, lsr sp	; <UNPREDICTABLE>
    b668:	07630200 	strbeq	r0, [r3, -r0, lsl #4]!
    b66c:	0002e70c 	andeq	lr, r2, ip, lsl #14
    b670:	22793400 	rsbscs	r3, r9, #0, 8
    b674:	64020000 	strvs	r0, [r2], #-0
    b678:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    b67c:	30000000 	andcc	r0, r0, r0
    b680:	00002260 	andeq	r2, r0, r0, ror #4
    b684:	1a074502 	bne	1dca94 <_Min_Heap_Size+0x1dc294>
    b688:	0002e701 	andeq	lr, r2, r1, lsl #14
    b68c:	12b00300 	adcsne	r0, r0, #0, 6
    b690:	3b310000 	blcc	c4b698 <_Min_Heap_Size+0xc4ae98>
    b694:	02000020 	andeq	r0, r0, #32
    b698:	e7380745 	ldr	r0, [r8, -r5, asr #14]!
    b69c:	31000002 	tstcc	r0, r2
    b6a0:	00002198 	muleq	r0, r8, r1
    b6a4:	50074502 	andpl	r4, r7, r2, lsl #10
    b6a8:	000002e7 	andeq	r0, r0, r7, ror #5
    b6ac:	00221431 	eoreq	r1, r2, r1, lsr r4
    b6b0:	07450200 	strbeq	r0, [r5, -r0, lsl #4]
    b6b4:	0002e76a 	andeq	lr, r2, sl, ror #14
    b6b8:	232c3400 			; <UNDEFINED> instruction: 0x232c3400
    b6bc:	47020000 	strmi	r0, [r2, -r0]
    b6c0:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    b6c4:	fd340000 	ldc2	0, cr0, [r4, #-0]
    b6c8:	02000020 	andeq	r0, r0, #32
    b6cc:	e70c0748 	str	r0, [ip, -r8, asr #14]
    b6d0:	34000002 	strcc	r0, [r0], #-2
    b6d4:	00002279 	andeq	r2, r0, r9, ror r2
    b6d8:	0c074902 			; <UNDEFINED> instruction: 0x0c074902
    b6dc:	000002e7 	andeq	r0, r0, r7, ror #5
    b6e0:	22003000 	andcs	r3, r0, #0
    b6e4:	2c020000 	stccs	0, cr0, [r2], {-0}
    b6e8:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    b6ec:	03000002 	movweq	r0, #2
    b6f0:	000012d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    b6f4:	00112731 	andseq	r2, r1, r1, lsr r7
    b6f8:	072c0200 	streq	r0, [ip, -r0, lsl #4]!
    b6fc:	00024337 	andeq	r4, r2, r7, lsr r3
    b700:	09330000 	ldmdbeq	r3!, {}	; <UNPREDICTABLE>
    b704:	02000024 	andeq	r0, r0, #36	; 0x24
    b708:	01160716 	tsteq	r6, r6, lsl r7
    b70c:	0012fb03 	andseq	pc, r2, r3, lsl #22
    b710:	11273100 			; <UNDEFINED> instruction: 0x11273100
    b714:	16020000 	strne	r0, [r2], -r0
    b718:	02433307 	subeq	r3, r3, #469762048	; 0x1c000000
    b71c:	b9310000 	ldmdblt	r1!, {}	; <UNPREDICTABLE>
    b720:	02000021 	andeq	r0, r0, #33	; 0x21
    b724:	e7420716 	smlald	r0, r2, r6, r7
    b728:	00000002 	andeq	r0, r0, r2
    b72c:	0023cc30 	eoreq	ip, r3, r0, lsr ip
    b730:	07000200 	streq	r0, [r0, -r0, lsl #4]
    b734:	02e7011a 	rsceq	r0, r7, #-2147483642	; 0x80000006
    b738:	1c030000 	stcne	0, cr0, [r3], {-0}
    b73c:	31000013 	tstcc	r0, r3, lsl r0
    b740:	00001127 	andeq	r1, r0, r7, lsr #2
    b744:	35070002 	strcc	r0, [r7, #-2]
    b748:	00000243 	andeq	r0, r0, r3, asr #4
    b74c:	20b23300 	adcscs	r3, r2, r0, lsl #6
    b750:	ef020000 	svc	0x00020000
    b754:	03011606 	movweq	r1, #5638	; 0x1606
    b758:	00001339 	andeq	r1, r0, r9, lsr r3
    b75c:	00112731 	andseq	r2, r1, r1, lsr r7
    b760:	06ef0200 	strbteq	r0, [pc], r0, lsl #4
    b764:	00024337 	andeq	r4, r2, r7, lsr r3
    b768:	01330000 	teqeq	r3, r0
    b76c:	02000023 	andeq	r0, r0, #35	; 0x23
    b770:	011606e0 	tsteq	r6, r0, ror #13
    b774:	00135603 	andseq	r5, r3, r3, lsl #12
    b778:	11273100 			; <UNDEFINED> instruction: 0x11273100
    b77c:	e0020000 	and	r0, r2, r0
    b780:	02433506 	subeq	r3, r3, #25165824	; 0x1800000
    b784:	30000000 	andcc	r0, r0, r0
    b788:	00002245 	andeq	r2, r0, r5, asr #4
    b78c:	1a06cd02 	bne	1beb9c <_Min_Heap_Size+0x1be39c>
    b790:	0002e701 	andeq	lr, r2, r1, lsl #14
    b794:	13770300 	cmnne	r7, #0, 6
    b798:	27310000 	ldrcs	r0, [r1, -r0]!
    b79c:	02000011 	andeq	r0, r0, #17
    b7a0:	433906cd 	teqmi	r9, #214958080	; 0xcd00000
    b7a4:	00000002 	andeq	r0, r0, r2
    b7a8:	00214933 	eoreq	r4, r1, r3, lsr r9
    b7ac:	06ba0200 	ldrteq	r0, [sl], r0, lsl #4
    b7b0:	94030116 	strls	r0, [r3], #-278	; 0xfffffeea
    b7b4:	31000013 	tstcc	r0, r3, lsl r0
    b7b8:	00001127 	andeq	r1, r0, r7, lsr #2
    b7bc:	3206ba02 	andcc	fp, r6, #8192	; 0x2000
    b7c0:	00000243 	andeq	r0, r0, r3, asr #4
    b7c4:	23163300 	tstcs	r6, #0, 6
    b7c8:	94020000 	strls	r0, [r2], #-0
    b7cc:	03011606 	movweq	r1, #5638	; 0x1606
    b7d0:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b7d4:	00112731 	andseq	r2, r1, r1, lsr r7
    b7d8:	06940200 	ldreq	r0, [r4], r0, lsl #4
    b7dc:	00024331 	andeq	r4, r2, r1, lsr r3
    b7e0:	dd350000 	ldcle	0, cr0, [r5, #-0]
    b7e4:	02000023 	andeq	r0, r0, #35	; 0x23
    b7e8:	011a0688 	tsteq	sl, r8, lsl #13
    b7ec:	000002e7 	andeq	r0, r0, r7, ror #5
    b7f0:	21cc3303 	biccs	r3, ip, r3, lsl #6
    b7f4:	75020000 	strvc	r0, [r2, #-0]
    b7f8:	03011606 	movweq	r1, #5638	; 0x1606
    b7fc:	000013f7 	strdeq	r1, [r0], -r7
    b800:	00203b31 	eoreq	r3, r0, r1, lsr fp
    b804:	06750200 	ldrbteq	r0, [r5], -r0, lsl #4
    b808:	0002e73a 	andeq	lr, r2, sl, lsr r7
    b80c:	21873400 	orrcs	r3, r7, r0, lsl #8
    b810:	77020000 	strvc	r0, [r2, -r0]
    b814:	02e70c06 	rsceq	r0, r7, #1536	; 0x600
    b818:	2c340000 	ldccs	0, cr0, [r4], #-0
    b81c:	02000023 	andeq	r0, r0, #35	; 0x23
    b820:	e70c0678 	smlsdx	ip, r8, r6, r0
    b824:	00000002 	andeq	r0, r0, r2
    b828:	0022be36 	eoreq	fp, r2, r6, lsr lr
    b82c:	01180300 	tsteq	r8, r0, lsl #6
    b830:	3603011b 			; <UNDEFINED> instruction: 0x3603011b
    b834:	000021fa 	strdeq	r2, [r0], -sl
    b838:	1b010d03 	blne	4ec4c <_Min_Heap_Size+0x4e44c>
    b83c:	5a360301 	bpl	d8c448 <_Min_Heap_Size+0xd8bc48>
    b840:	03000022 	movweq	r0, #34	; 0x22
    b844:	011b0102 	tsteq	fp, r2, lsl #2
    b848:	01013703 	tsteq	r1, r3, lsl #14
    b84c:	0000080c 	andeq	r0, r0, ip, lsl #16
    b850:	0000080c 	andeq	r0, r0, ip, lsl #16
    b854:	0801e609 	stmdaeq	r1, {r0, r3, r9, sl, sp, lr, pc}
    b858:	000afe00 	andeq	pc, sl, r0, lsl #28
    b85c:	9a000200 	bls	c064 <_Min_Heap_Size+0xb864>
    b860:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    b864:	00013101 	andeq	r3, r1, r1, lsl #2
    b868:	26720c00 	ldrbtcs	r0, [r2], -r0, lsl #24
    b86c:	004b0000 	subeq	r0, fp, r0
    b870:	06480000 	strbeq	r0, [r8], -r0
	...
    b87c:	87d60000 	ldrbhi	r0, [r6, r0]
    b880:	05020000 	streq	r0, [r2, #-0]
    b884:	00023c01 	andeq	r3, r2, r1, lsl #24
    b888:	01420500 	cmpeq	r2, r0, lsl #10
    b88c:	0000023c 	andeq	r0, r0, ip, lsr r2
    b890:	000e5d03 	andeq	r5, lr, r3, lsl #26
    b894:	8c037200 	sfmhi	f7, 4, [r3], {-0}
    b898:	7400000e 	strvc	r0, [r0], #-14
    b89c:	000eec03 	andeq	lr, lr, r3, lsl #24
    b8a0:	93037500 	movwls	r7, #13568	; 0x3500
    b8a4:	7600000d 	strvc	r0, [r0], -sp
    b8a8:	000f3e03 	andeq	r3, pc, r3, lsl #28
    b8ac:	b9037b00 	stmdblt	r3, {r8, r9, fp, ip, sp, lr}
    b8b0:	7c000010 	stcvc	0, cr0, [r0], {16}
    b8b4:	00119703 	andseq	r9, r1, r3, lsl #14
    b8b8:	05037e00 	streq	r7, [r3, #-3584]	; 0xfffff200
    b8bc:	7f00000d 	svcvc	0x0000000d
    b8c0:	000e7104 	andeq	r7, lr, r4, lsl #2
    b8c4:	5d040000 	stcpl	0, cr0, [r4, #-0]
    b8c8:	01000010 	tsteq	r0, r0, lsl r0
    b8cc:	000ea204 	andeq	sl, lr, r4, lsl #4
    b8d0:	00040200 	andeq	r0, r4, r0, lsl #4
    b8d4:	0300000c 	movweq	r0, #12
    b8d8:	000c6a04 	andeq	r6, ip, r4, lsl #20
    b8dc:	ec040400 	cfstrs	mvf0, [r4], {-0}
    b8e0:	05000010 	streq	r0, [r0, #-16]
    b8e4:	00108a04 	andseq	r8, r0, r4, lsl #20
    b8e8:	fd040600 	stc2	6, cr0, [r4, #-0]
    b8ec:	0700000d 	streq	r0, [r0, -sp]
    b8f0:	000c0e04 	andeq	r0, ip, r4, lsl #28
    b8f4:	8c040800 	stchi	8, cr0, [r4], {-0}
    b8f8:	09000011 	stmdbeq	r0, {r0, r4}
    b8fc:	000f7904 	andeq	r7, pc, r4, lsl #18
    b900:	d5040a00 	strle	r0, [r4, #-2560]	; 0xfffff600
    b904:	0b00000f 	bleq	b948 <_Min_Heap_Size+0xb148>
    b908:	000f9f04 	andeq	r9, pc, r4, lsl #30
    b90c:	2f040c00 	svccs	0x00040c00
    b910:	0d00000d 	stceq	0, cr0, [r0, #-52]	; 0xffffffcc
    b914:	0010f504 	andseq	pc, r0, r4, lsl #10
    b918:	95040e00 	strls	r0, [r4, #-3584]	; 0xfffff200
    b91c:	0f000010 	svceq	0x00000010
    b920:	000e1504 	andeq	r1, lr, r4, lsl #10
    b924:	19041000 	stmdbne	r4, {ip}
    b928:	1100000c 	tstne	r0, ip
    b92c:	00105404 	andseq	r5, r0, r4, lsl #8
    b930:	08041200 	stmdaeq	r4, {r9, ip}
    b934:	1300000e 	movwne	r0, #14
    b938:	000db104 	andeq	fp, sp, r4, lsl #2
    b93c:	5a041400 	bpl	110944 <_Min_Heap_Size+0x110144>
    b940:	15000011 	strne	r0, [r0, #-17]	; 0xffffffef
    b944:	000eb204 	andeq	fp, lr, r4, lsl #4
    b948:	68041600 	stmdavs	r4, {r9, sl, ip}
    b94c:	17000011 	smladne	r0, r1, r0, r0
    b950:	000f0504 	andeq	r0, pc, r4, lsl #10
    b954:	19041800 	stmdbne	r4, {fp, ip}
    b958:	19000011 	stmdbne	r0, {r0, r4}
    b95c:	000ced04 	andeq	lr, ip, r4, lsl #26
    b960:	f0041a00 			; <UNDEFINED> instruction: 0xf0041a00
    b964:	1b00000d 	blne	b9a0 <_Min_Heap_Size+0xb1a0>
    b968:	000c7504 	andeq	r7, ip, r4, lsl #10
    b96c:	12041c00 	andne	r1, r4, #0, 24
    b970:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    b974:	000dbf04 	andeq	fp, sp, r4, lsl #30
    b978:	e3041e00 	movw	r1, #19968	; 0x4e00
    b97c:	1f00000d 	svcne	0x0000000d
    b980:	000d6304 	andeq	r6, sp, r4, lsl #6
    b984:	92042000 	andls	r2, r4, #0
    b988:	2100000f 	tstcs	r0, pc
    b98c:	000ed704 	andeq	sp, lr, r4, lsl #14
    b990:	34042200 	strcc	r2, [r4], #-512	; 0xfffffe00
    b994:	2300000f 	movwcs	r0, #15
    b998:	000caa04 	andeq	sl, ip, r4, lsl #20
    b99c:	1c042400 	cfstrsne	mvf2, [r4], {-0}
    b9a0:	25000010 	strcs	r0, [r0, #-16]
    b9a4:	000dc904 	andeq	ip, sp, r4, lsl #18
    b9a8:	12042600 	andne	r2, r4, #0, 12
    b9ac:	2700000d 	strcs	r0, [r0, -sp]
    b9b0:	00100304 	andseq	r0, r0, r4, lsl #6
    b9b4:	e7042800 	str	r2, [r4, -r0, lsl #16]
    b9b8:	2900000f 	stmdbcs	r0, {r0, r1, r2, r3}
    b9bc:	000f6804 	andeq	r6, pc, r4, lsl #16
    b9c0:	b4042a00 	strlt	r2, [r4], #-2560	; 0xfffff600
    b9c4:	2b00000c 	blcs	b9fc <_Min_Heap_Size+0xb1fc>
    b9c8:	000c2b04 	andeq	r2, ip, r4, lsl #22
    b9cc:	27042c00 	strcs	r2, [r4, -r0, lsl #24]
    b9d0:	2d00000e 	stccs	0, cr0, [r0, #-56]	; 0xffffffc8
    b9d4:	00117504 	andseq	r7, r1, r4, lsl #10
    b9d8:	b6042e00 	strlt	r2, [r4], -r0, lsl #28
    b9dc:	2f000011 	svccs	0x00000011
    b9e0:	00106d04 	andseq	r6, r0, r4, lsl #26
    b9e4:	82043000 	andhi	r3, r4, #0
    b9e8:	31000011 	tstcc	r0, r1, lsl r0
    b9ec:	000d8904 	andeq	r8, sp, r4, lsl #18
    b9f0:	60043200 	andvs	r3, r4, r0, lsl #4
    b9f4:	3300000c 	movwcc	r0, #12
    b9f8:	000f5304 	andeq	r5, pc, r4, lsl #6
    b9fc:	fa043400 	blx	118a04 <_Min_Heap_Size+0x118204>
    ba00:	3500000e 	strcc	r0, [r0, #-14]
    ba04:	000f8404 	andeq	r8, pc, r4, lsl #8
    ba08:	18043600 	stmdane	r4, {r9, sl, ip, sp}
    ba0c:	3700000f 	strcc	r0, [r0, -pc]
    ba10:	000ec004 	andeq	ip, lr, r4
    ba14:	4e043800 	cdpmi	8, 0, cr3, cr4, cr0, {0}
    ba18:	3900000c 	stmdbcc	r0, {r2, r3}
    ba1c:	0011c804 	andseq	ip, r1, r4, lsl #16
    ba20:	b1043a00 	tstlt	r4, r0, lsl #20
    ba24:	3b00000f 	blcc	ba68 <_Min_Heap_Size+0xb268>
    ba28:	000d4104 	andeq	r4, sp, r4, lsl #2
    ba2c:	c3043c00 	movwgt	r3, #19456	; 0x4c00
    ba30:	3f00000f 	svccc	0x0000000f
    ba34:	000c7f04 	andeq	r7, ip, r4, lsl #30
    ba38:	46044000 	strmi	r4, [r4], -r0
    ba3c:	41000010 	tstmi	r0, r0, lsl r0
    ba40:	000d7b04 	andeq	r7, sp, r4, lsl #22
    ba44:	51044200 	mrspl	r4, R12_usr
    ba48:	4300000e 	movwmi	r0, #14
    ba4c:	000cdb04 	andeq	sp, ip, r4, lsl #22
    ba50:	a7044400 	strge	r4, [r4, -r0, lsl #8]
    ba54:	45000010 	strmi	r0, [r0, #-16]
    ba58:	000e3f04 	andeq	r3, lr, r4, lsl #30
    ba5c:	8d044600 	stchi	6, cr4, [r4, #-0]
    ba60:	4700000c 	strmi	r0, [r0, -ip]
    ba64:	0010cb04 	andseq	ip, r0, r4, lsl #22
    ba68:	f6044800 			; <UNDEFINED> instruction: 0xf6044800
    ba6c:	4900000f 	stmdbmi	r0, {r0, r1, r2, r3}
    ba70:	00114004 	andseq	r4, r1, r4
    ba74:	a3044a00 	movwge	r4, #18944	; 0x4a00
    ba78:	4b000011 	blmi	bac4 <_Min_Heap_Size+0xb2c4>
    ba7c:	000e7b04 	andeq	r7, lr, r4, lsl #22
    ba80:	22044c00 	andcs	r4, r4, #0, 24
    ba84:	4d00000f 	stcmi	0, cr0, [r0, #-60]	; 0xffffffc4
    ba88:	00103d04 	andseq	r3, r0, r4, lsl #26
    ba8c:	4a045000 	bmi	11fa94 <_Min_Heap_Size+0x11f294>
    ba90:	5100000f 	tstpl	r0, pc
    ba94:	06010500 	streq	r0, [r1], -r0, lsl #10
    ba98:	000000e0 	andeq	r0, r0, r0, ror #1
    ba9c:	0000ad06 	andeq	sl, r0, r6, lsl #26
    baa0:	182b0200 	stmdane	fp!, {r9}
    baa4:	0000024f 	andeq	r0, r0, pc, asr #4
    baa8:	de080105 	adflee	f0, f0, f5
    baac:	05000000 	streq	r0, [r0, #-0]
    bab0:	01270502 			; <UNDEFINED> instruction: 0x01270502
    bab4:	02050000 	andeq	r0, r5, #0
    bab8:	00000e07 	andeq	r0, r0, r7, lsl #28
    babc:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    bac0:	00000005 	andeq	r0, r0, r5
    bac4:	00004006 	andeq	r4, r0, r6
    bac8:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    bacc:	00000277 	andeq	r0, r0, r7, ror r2
    bad0:	9b070405 	blls	1ccaec <_Min_Heap_Size+0x1cc2ec>
    bad4:	05000000 	streq	r0, [r0, #-0]
    bad8:	00000508 	andeq	r0, r0, r8, lsl #10
    badc:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    bae0:	00009607 	andeq	r9, r0, r7, lsl #12
    bae4:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    bae8:	00746e69 	rsbseq	r6, r4, r9, ror #28
    baec:	a0070405 	andge	r0, r7, r5, lsl #8
    baf0:	06000000 	streq	r0, [r0], -r0
    baf4:	000000af 	andeq	r0, r0, pc, lsr #1
    baf8:	43131803 	tstmi	r3, #196608	; 0x30000
    bafc:	06000002 	streq	r0, [r0], -r2
    bb00:	00000042 	andeq	r0, r0, r2, asr #32
    bb04:	6b143003 	blvs	517b18 <_Min_Heap_Size+0x517318>
    bb08:	08000002 	stmdaeq	r0, {r1}
    bb0c:	000002a6 	andeq	r0, r0, r6, lsr #5
    bb10:	0002b209 	andeq	fp, r2, r9, lsl #4
    bb14:	04100a00 	ldreq	r0, [r0], #-2560	; 0xfffff600
    bb18:	070902fc 			; <UNDEFINED> instruction: 0x070902fc
    bb1c:	0b000003 	bleq	bb30 <_Min_Heap_Size+0xb330>
    bb20:	000023c7 	andeq	r2, r0, r7, asr #7
    bb24:	1202fe04 	andne	pc, r2, #4, 28	; 0x40
    bb28:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bb2c:	0b002302 	bleq	1473c <_Min_Heap_Size+0x13f3c>
    bb30:	00002235 	andeq	r2, r0, r5, lsr r2
    bb34:	1202ff04 	andne	pc, r2, #4, 30
    bb38:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bb3c:	0c042302 	stceq	3, cr2, [r4], {2}
    bb40:	004c4156 	subeq	r4, ip, r6, asr r1
    bb44:	12030004 	andne	r0, r3, #4
    bb48:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bb4c:	0b082302 	bleq	21475c <_Min_Heap_Size+0x213f5c>
    bb50:	00002191 	muleq	r0, r1, r1
    bb54:	12030104 	andne	r0, r3, #4, 2
    bb58:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    bb5c:	000c2302 	andeq	r2, ip, r2, lsl #6
    bb60:	00213c0d 	eoreq	r3, r1, sp, lsl #24
    bb64:	03020400 	movweq	r0, #9216	; 0x2400
    bb68:	0002bc03 	andeq	fp, r2, r3, lsl #24
    bb6c:	02a60e00 	adceq	r0, r6, #0, 28
    bb70:	03240000 			; <UNDEFINED> instruction: 0x03240000
    bb74:	930f0000 	movwls	r0, #61440	; 0xf000
    bb78:	01000002 	tsteq	r0, r2
    bb7c:	1a731000 	bne	1ccfb84 <_Min_Heap_Size+0x1ccf384>
    bb80:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    bb84:	0002a611 	andeq	sl, r2, r1, lsl r6
    bb88:	0a010100 	beq	4bf90 <_Min_Heap_Size+0x4b790>
    bb8c:	01370510 	teqeq	r7, r0, lsl r5
    bb90:	00037c09 	andeq	r7, r3, r9, lsl #24
    bb94:	247f0b00 	ldrbtcs	r0, [pc], #-2816	; bb9c <_Min_Heap_Size+0xb39c>
    bb98:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    bb9c:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bba0:	23020000 	movwcs	r0, #8192	; 0x2000
    bba4:	52430c00 	subpl	r0, r3, #0, 24
    bba8:	013a0500 	teqeq	sl, r0, lsl #10
    bbac:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbb0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    bbb4:	0025c80b 	eoreq	ip, r5, fp, lsl #16
    bbb8:	013b0500 	teqeq	fp, r0, lsl #10
    bbbc:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbc0:	08230200 	stmdaeq	r3!, {r9}
    bbc4:	0025820b 	eoreq	r8, r5, fp, lsl #4
    bbc8:	013c0500 	teqeq	ip, r0, lsl #10
    bbcc:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbd0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    bbd4:	261e0d00 	ldrcs	r0, [lr], -r0, lsl #26
    bbd8:	3d050000 	stccc	0, cr0, [r5, #-0]
    bbdc:	03320301 	teqeq	r2, #67108864	; 0x4000000
    bbe0:	1c0a0000 	stcne	0, cr0, [sl], {-0}
    bbe4:	09016805 	stmdbeq	r1, {r0, r2, fp, sp, lr}
    bbe8:	00000402 	andeq	r0, r0, r2, lsl #8
    bbec:	5243410c 	subpl	r4, r3, #12, 2
    bbf0:	016a0500 	cmneq	sl, r0, lsl #10
    bbf4:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbf8:	00230200 	eoreq	r0, r3, r0, lsl #4
    bbfc:	0019fb0b 	andseq	pc, r9, fp, lsl #22
    bc00:	016b0500 	cmneq	fp, r0, lsl #10
    bc04:	0002b211 	andeq	fp, r2, r1, lsl r2
    bc08:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    bc0c:	0019f80b 	andseq	pc, r9, fp, lsl #16
    bc10:	016c0500 	cmneq	ip, r0, lsl #10
    bc14:	0002b211 	andeq	fp, r2, r1, lsl r2
    bc18:	08230200 	stmdaeq	r3!, {r9}
    bc1c:	0052530c 	subseq	r5, r2, ip, lsl #6
    bc20:	11016d05 	tstne	r1, r5, lsl #26
    bc24:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bc28:	0c0c2302 	stceq	3, cr2, [ip], {2}
    bc2c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    bc30:	b211016e 	andslt	r0, r1, #-2147483621	; 0x8000001b
    bc34:	02000002 	andeq	r0, r0, #2
    bc38:	dd0b1023 	stcle	0, cr1, [fp, #-140]	; 0xffffff74
    bc3c:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    bc40:	b211016f 	andslt	r0, r1, #-1073741797	; 0xc000001b
    bc44:	02000002 	andeq	r0, r0, #2
    bc48:	0f0b1423 	svceq	0x000b1423
    bc4c:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    bc50:	b2110170 	andslt	r0, r1, #112, 2
    bc54:	02000002 	andeq	r0, r0, #2
    bc58:	0d001823 	stceq	8, cr1, [r0, #-140]	; 0xffffff74
    bc5c:	000019e3 	andeq	r1, r0, r3, ror #19
    bc60:	03017105 	movweq	r7, #4357	; 0x1105
    bc64:	00000389 	andeq	r0, r0, r9, lsl #7
    bc68:	f405880a 	vst2.8	{d8-d9}, [r5], sl
    bc6c:	05fb0901 	ldrbeq	r0, [fp, #2305]!	; 0x901
    bc70:	430c0000 	movwmi	r0, #49152	; 0xc000
    bc74:	f6050052 			; <UNDEFINED> instruction: 0xf6050052
    bc78:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bc7c:	23020000 	movwcs	r0, #8192	; 0x2000
    bc80:	06490b00 	strbeq	r0, [r9], -r0, lsl #22
    bc84:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    bc88:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bc8c:	23020000 	movwcs	r0, #8192	; 0x2000
    bc90:	064c0b04 	strbeq	r0, [ip], -r4, lsl #22
    bc94:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    bc98:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bc9c:	23020000 	movwcs	r0, #8192	; 0x2000
    bca0:	49430c08 	stmdbmi	r3, {r3, sl, fp}^
    bca4:	f9050052 			; <UNDEFINED> instruction: 0xf9050052
    bca8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcac:	23020000 	movwcs	r0, #8192	; 0x2000
    bcb0:	052d0b0c 	streq	r0, [sp, #-2828]!	; 0xfffff4f4
    bcb4:	fa050000 	blx	14bcbc <_Min_Heap_Size+0x14b4bc>
    bcb8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcbc:	23020000 	movwcs	r0, #8192	; 0x2000
    bcc0:	0a0e0b10 	beq	38e908 <_Min_Heap_Size+0x38e108>
    bcc4:	fb050000 	blx	14bcce <_Min_Heap_Size+0x14b4ce>
    bcc8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bccc:	23020000 	movwcs	r0, #8192	; 0x2000
    bcd0:	096c0b14 	stmdbeq	ip!, {r2, r4, r8, r9, fp}^
    bcd4:	fc050000 	stc2	0, cr0, [r5], {-0}
    bcd8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcdc:	23020000 	movwcs	r0, #8192	; 0x2000
    bce0:	08b20b18 	ldmeq	r2!, {r3, r4, r8, r9, fp}
    bce4:	fd050000 	stc2	0, cr0, [r5, #-0]
    bce8:	02a61101 	adceq	r1, r6, #1073741824	; 0x40000000
    bcec:	23020000 	movwcs	r0, #8192	; 0x2000
    bcf0:	088f0b1c 	stmeq	pc, {r2, r3, r4, r8, r9, fp}	; <UNPREDICTABLE>
    bcf4:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    bcf8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcfc:	23020000 	movwcs	r0, #8192	; 0x2000
    bd00:	05c00b20 	strbeq	r0, [r0, #2848]	; 0xb20
    bd04:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    bd08:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bd0c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd10:	08bc0b24 	ldmeq	ip!, {r2, r5, r8, r9, fp}
    bd14:	00050000 	andeq	r0, r5, r0
    bd18:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    bd1c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd20:	0b510b28 	bleq	144e9c8 <_Min_Heap_Size+0x144e1c8>
    bd24:	01050000 	mrseq	r0, (UNDEF: 5)
    bd28:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd2c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd30:	0a7e0b30 	beq	1f8e9f8 <_Min_Heap_Size+0x1f8e1f8>
    bd34:	02050000 	andeq	r0, r5, #0
    bd38:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd3c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd40:	082a0b34 	stmdaeq	sl!, {r2, r4, r5, r8, r9, fp}
    bd44:	03050000 	movweq	r0, #20480	; 0x5000
    bd48:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd4c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd50:	08c60b38 	stmiaeq	r6, {r3, r4, r5, r8, r9, fp}^
    bd54:	04050000 	streq	r0, [r5], #-0
    bd58:	02a61102 	adceq	r1, r6, #-2147483648	; 0x80000000
    bd5c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd60:	09a70b3c 	stmibeq	r7!, {r2, r3, r4, r5, r8, r9, fp}
    bd64:	05050000 	streq	r0, [r5, #-0]
    bd68:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd6c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd70:	09640b40 	stmdbeq	r4!, {r6, r8, r9, fp}^
    bd74:	06050000 	streq	r0, [r5], -r0
    bd78:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd7c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd80:	08d00b44 	ldmeq	r0, {r2, r6, r8, r9, fp}^
    bd84:	07050000 	streq	r0, [r5, -r0]
    bd88:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    bd8c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd90:	04f20b48 	ldrbteq	r0, [r2], #2888	; 0xb48
    bd94:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    bd98:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd9c:	23020000 	movwcs	r0, #8192	; 0x2000
    bda0:	08640b50 	stmdaeq	r4!, {r4, r6, r8, r9, fp}^
    bda4:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    bda8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bdac:	23020000 	movwcs	r0, #8192	; 0x2000
    bdb0:	09320b54 	ldmdbeq	r2!, {r2, r4, r6, r8, r9, fp}
    bdb4:	0a050000 	beq	14bdbc <_Min_Heap_Size+0x14b5bc>
    bdb8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bdbc:	23020000 	movwcs	r0, #8192	; 0x2000
    bdc0:	08da0b58 	ldmeq	sl, {r3, r4, r6, r8, r9, fp}^
    bdc4:	0b050000 	bleq	14bdcc <_Min_Heap_Size+0x14b5cc>
    bdc8:	02a61102 	adceq	r1, r6, #-2147483648	; 0x80000000
    bdcc:	23020000 	movwcs	r0, #8192	; 0x2000
    bdd0:	04030b5c 	streq	r0, [r3], #-2908	; 0xfffff4a4
    bdd4:	0c050000 	stceq	0, cr0, [r5], {-0}
    bdd8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bddc:	23020000 	movwcs	r0, #8192	; 0x2000
    bde0:	07850b60 	streq	r0, [r5, r0, ror #22]
    bde4:	0d050000 	stceq	0, cr0, [r5, #-0]
    bde8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bdec:	23020000 	movwcs	r0, #8192	; 0x2000
    bdf0:	08e40b64 	stmiaeq	r4!, {r2, r5, r6, r8, r9, fp}^
    bdf4:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    bdf8:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    bdfc:	23020000 	movwcs	r0, #8192	; 0x2000
    be00:	0aed0b68 	beq	ffb4eba8 <_estack+0xdfb4d970>
    be04:	0f050000 	svceq	0x00050000
    be08:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be0c:	23020000 	movwcs	r0, #8192	; 0x2000
    be10:	53430c70 	movtpl	r0, #15472	; 0x3c70
    be14:	10050052 	andne	r0, r5, r2, asr r0
    be18:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be1c:	23020000 	movwcs	r0, #8192	; 0x2000
    be20:	08ee0b74 	stmiaeq	lr!, {r2, r4, r5, r6, r8, r9, fp}^
    be24:	11050000 	mrsne	r0, (UNDEF: 5)
    be28:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    be2c:	23020000 	movwcs	r0, #8192	; 0x2000
    be30:	0abc0b78 	beq	fef0ec18 <_estack+0xdef0d9e0>
    be34:	12050000 	andne	r0, r5, #0
    be38:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be3c:	23030000 	movwcs	r0, #12288	; 0x3000
    be40:	180b0180 	stmdane	fp, {r7, r8}
    be44:	05000007 	streq	r0, [r0, #-7]
    be48:	b2110213 	andslt	r0, r1, #805306369	; 0x30000001
    be4c:	03000002 	movweq	r0, #2
    be50:	00018423 	andeq	r8, r1, r3, lsr #8
    be54:	0005940d 	andeq	r9, r5, sp, lsl #8
    be58:	02140500 	andseq	r0, r4, #0, 10
    be5c:	00040f03 	andeq	r0, r4, r3, lsl #30
    be60:	01070200 	mrseq	r0, (UNDEF: 39)
    be64:	0000024f 	andeq	r0, r0, pc, asr #4
    be68:	2301bf06 	movwcs	fp, #7942	; 0x1f06
    be6c:	04000006 	streq	r0, [r0], #-6
    be70:	00001a07 	andeq	r1, r0, r7, lsl #20
    be74:	19f10400 	ldmibne	r1!, {sl}^
    be78:	00010000 	andeq	r0, r1, r0
    be7c:	0f040805 	svceq	0x00040805
    be80:	02000001 	andeq	r0, r0, #1
    be84:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    be88:	27070000 	strcs	r0, [r7, -r0]
    be8c:	00065101 	andeq	r5, r6, r1, lsl #2
    be90:	06f60400 	ldrbteq	r0, [r6], r0, lsl #8
    be94:	04000000 	streq	r0, [r0], #-0
    be98:	0000099d 	muleq	r0, sp, r9
    be9c:	0b860401 	bleq	fe18cea8 <_estack+0xde18bc70>
    bea0:	04020000 	streq	r0, [r2], #-0
    bea4:	000006d7 	ldrdeq	r0, [r0], -r7
    bea8:	73060003 	movwvc	r0, #24579	; 0x6003
    beac:	07000015 	smladeq	r0, r5, r0, r0
    beb0:	062a032c 	strteq	r0, [sl], -ip, lsr #6
    beb4:	07020000 	streq	r0, [r2, -r0]
    beb8:	00024f01 	andeq	r4, r2, r1, lsl #30
    bebc:	01320800 	teqeq	r2, r0, lsl #16
    bec0:	00000684 	andeq	r0, r0, r4, lsl #13
    bec4:	0024c304 	eoreq	ip, r4, r4, lsl #6
    bec8:	03046400 	movweq	r6, #17408	; 0x4400
    becc:	0a000025 	beq	bf68 <_Min_Heap_Size+0xb768>
    bed0:	00255204 	eoreq	r5, r5, r4, lsl #4
    bed4:	a3040100 	movwge	r0, #16640	; 0x4100
    bed8:	01000025 	tsteq	r0, r5, lsr #32
    bedc:	244e0600 	strbcs	r0, [lr], #-1536	; 0xfffffa00
    bee0:	37080000 	strcc	r0, [r8, -r0]
    bee4:	00065d03 	andeq	r5, r6, r3, lsl #26
    bee8:	254b1000 	strbcs	r1, [fp, #-0]
    beec:	cc080000 	stcgt	0, cr0, [r8], {-0}
    bef0:	0002b216 	andeq	fp, r2, r6, lsl r2
    bef4:	10010100 	andne	r0, r1, r0, lsl #2
    bef8:	00001a9b 	muleq	r0, fp, sl
    befc:	a611cd08 	ldrge	ip, [r1], -r8, lsl #26
    bf00:	01000002 	tsteq	r0, r2
    bf04:	25401001 	strbcs	r1, [r0, #-1]
    bf08:	ce080000 	cdpgt	0, 0, cr0, cr8, cr0, {0}
    bf0c:	0006841c 	andeq	r8, r6, ip, lsl r4
    bf10:	11010100 	mrsne	r0, (UNDEF: 17)
    bf14:	00000690 	muleq	r0, r0, r6
    bf18:	050f5e01 	streq	r5, [pc, #-3585]	; b11f <_Min_Heap_Size+0xa91f>
    bf1c:	0000d803 	andeq	sp, r0, r3, lsl #16
    bf20:	069e1120 	ldreq	r1, [lr], r0, lsr #2
    bf24:	5f010000 	svcpl	0x00010000
    bf28:	0403050a 	streq	r0, [r3], #-1290	; 0xfffffaf6
    bf2c:	11200000 			; <UNDEFINED> instruction: 0x11200000
    bf30:	000006ac 	andeq	r0, r0, ip, lsr #13
    bf34:	05156001 	ldreq	r6, [r5, #-1]
    bf38:	00000003 	andeq	r0, r0, r3
    bf3c:	86011220 	strhi	r1, [r1], -r0, lsr #4
    bf40:	01000024 	tsteq	r0, r4, lsr #32
    bf44:	010a0233 	tsteq	sl, r3, lsr r2
    bf48:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    bf54:	01007d02 	tsteq	r0, r2, lsl #26
    bf58:	25960112 	ldrcs	r0, [r6, #274]	; 0x112
    bf5c:	2a010000 	bcs	4bf64 <_Min_Heap_Size+0x4b764>
    bf60:	a6010a02 	strge	r0, [r1], -r2, lsl #20
    bf64:	00000002 	andeq	r0, r0, r2
    bf68:	00000000 	andeq	r0, r0, r0
    bf6c:	02000000 	andeq	r0, r0, #0
    bf70:	1201007d 	andne	r0, r1, #125	; 0x7d
    bf74:	00258901 	eoreq	r8, r5, r1, lsl #18
    bf78:	02210100 	eoreq	r0, r1, #0, 2
    bf7c:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    bf88:	7d020000 	stcvc	0, cr0, [r2, #-0]
    bf8c:	01130100 	tsteq	r3, r0, lsl #2
    bf90:	000026a6 	andeq	r2, r0, r6, lsr #13
    bf94:	06021801 	streq	r1, [r2], -r1, lsl #16
    bf98:	00000001 	andeq	r0, r0, r1
    bf9c:	00000000 	andeq	r0, r0, r0
    bfa0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    bfa4:	57011301 	strpl	r1, [r1, -r1, lsl #6]
    bfa8:	01000026 	tsteq	r0, r6, lsr #32
    bfac:	0106020d 	tsteq	r6, sp, lsl #4
	...
    bfb8:	01007d02 	tsteq	r0, r2, lsl #26
    bfbc:	25cf0113 	strbcs	r0, [pc, #275]	; c0d7 <_Min_Heap_Size+0xb8d7>
    bfc0:	02010000 	andeq	r0, r1, #0
    bfc4:	00010602 	andeq	r0, r1, r2, lsl #12
    bfc8:	00000000 	andeq	r0, r0, r0
    bfcc:	02000000 	andeq	r0, r0, #0
    bfd0:	1301007d 	movwne	r0, #4221	; 0x107d
    bfd4:	00249301 	eoreq	r9, r4, r1, lsl #6
    bfd8:	01f90100 	mvnseq	r0, r0, lsl #2
    bfdc:	00000106 	andeq	r0, r0, r6, lsl #2
    bfe0:	00000000 	andeq	r0, r0, r0
    bfe4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    bfe8:	01130100 	tsteq	r3, r0, lsl #2
    bfec:	00002517 	andeq	r2, r0, r7, lsl r5
    bff0:	0601f001 	streq	pc, [r1], -r1
    bff4:	00000001 	andeq	r0, r0, r1
    bff8:	00000000 	andeq	r0, r0, r0
    bffc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c000:	65011301 	strvs	r1, [r1, #-769]	; 0xfffffcff
    c004:	01000025 	tsteq	r0, r5, lsr #32
    c008:	010601e7 	smlatteq	r6, r7, r1, r0
	...
    c014:	01007d02 	tsteq	r0, r2, lsl #26
    c018:	24e40113 	strbtcs	r0, [r4], #275	; 0x113
    c01c:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    c020:	00010601 	andeq	r0, r1, r1, lsl #12
    c024:	00000000 	andeq	r0, r0, r0
    c028:	02000000 	andeq	r0, r0, #0
    c02c:	1301007d 	movwne	r0, #4221	; 0x107d
    c030:	00260001 	eoreq	r0, r6, r1
    c034:	01d50100 	bicseq	r0, r5, r0, lsl #2
    c038:	00000106 	andeq	r0, r0, r6, lsl #2
    c03c:	00000000 	andeq	r0, r0, r0
    c040:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c044:	01120100 	tsteq	r2, r0, lsl #2
    c048:	000026c2 	andeq	r2, r0, r2, asr #13
    c04c:	0a01cc01 	beq	7f058 <_Min_Heap_Size+0x7e858>
    c050:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    c05c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c060:	2d011201 	sfmcs	f1, 4, [r1, #-4]
    c064:	01000026 	tsteq	r0, r6, lsr #32
    c068:	010a01c3 	smlabteq	sl, r3, r1, r0
    c06c:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    c078:	01007d02 	tsteq	r0, r2, lsl #26
    c07c:	243c0112 	ldrtcs	r0, [ip], #-274	; 0xfffffeee
    c080:	ba010000 	blt	4c088 <_Min_Heap_Size+0x4b888>
    c084:	a6010a01 	strge	r0, [r1], -r1, lsl #20
    c088:	00000002 	andeq	r0, r0, r2
    c08c:	00000000 	andeq	r0, r0, r0
    c090:	02000000 	andeq	r0, r0, #0
    c094:	1301007d 	movwne	r0, #4221	; 0x107d
    c098:	0025b901 	eoreq	fp, r5, r1, lsl #18
    c09c:	01b00100 	lslseq	r0, r0, #2
    c0a0:	0000010d 	andeq	r0, r0, sp, lsl #2
    c0a4:	00000000 	andeq	r0, r0, r0
    c0a8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c0ac:	01130100 	tsteq	r3, r0, lsl #2
    c0b0:	000025f0 	strdeq	r2, [r0], -r0
    c0b4:	0d01a001 	stceq	0, cr10, [r1, #-4]
    c0b8:	00000001 	andeq	r0, r0, r1
    c0bc:	00000000 	andeq	r0, r0, r0
    c0c0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c0c4:	e2011401 	and	r1, r1, #16777216	; 0x1000000
    c0c8:	01000009 	tsteq	r0, r9
    c0cc:	010d0186 	smlabbeq	sp, r6, r1, r0
    c0d0:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
    c0d4:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
    c0d8:	00007ce4 	andeq	r7, r0, r4, ror #25
    c0dc:	0008da01 	andeq	sp, r8, r1, lsl #20
    c0e0:	09e61500 	stmibeq	r6!, {r8, sl, ip}^
    c0e4:	86010000 	strhi	r0, [r1], -r0
    c0e8:	02a62001 	adceq	r2, r6, #1
    c0ec:	7d0a0000 	stcvc	0, cr0, [sl, #-0]
    c0f0:	7d040000 	stcvc	0, cr0, [r4, #-0]
    c0f4:	be160000 	cdplt	0, 1, cr0, cr6, cr0, {0}
    c0f8:	01000017 	tsteq	r0, r7, lsl r0
    c0fc:	a60c0188 	strge	r0, [ip], -r8, lsl #3
    c100:	3a000002 	bcc	c110 <_Min_Heap_Size+0xb910>
    c104:	3600007d 			; <UNDEFINED> instruction: 0x3600007d
    c108:	1600007d 			; <UNDEFINED> instruction: 0x1600007d
    c10c:	000002d1 	ldrdeq	r0, [r0], -r1
    c110:	0c018901 			; <UNDEFINED> instruction: 0x0c018901
    c114:	000002a6 	andeq	r0, r0, r6, lsr #5
    c118:	00007d5a 	andeq	r7, r0, sl, asr sp
    c11c:	00007d58 	andeq	r7, r0, r8, asr sp
    c120:	00176c17 	andseq	r6, r7, r7, lsl ip
    c124:	00099708 	andeq	r9, r9, r8, lsl #14
    c128:	177e1700 	ldrbne	r1, [lr, -r0, lsl #14]!
    c12c:	09970800 	ldmibeq	r7, {fp}
    c130:	12000000 	andne	r0, r0, #0
    c134:	00263a01 	eoreq	r3, r6, r1, lsl #20
    c138:	01760100 	cmneq	r6, r0, lsl #2
    c13c:	06840115 	pkhbteq	r0, r4, r5, lsl #2
	...
    c148:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c14c:	01180100 	tsteq	r8, r0, lsl #2
    c150:	0000246f 	andeq	r2, r0, pc, ror #8
    c154:	13015501 	movwne	r5, #5377	; 0x1501
    c158:	00065101 	andeq	r5, r6, r1, lsl #2
	...
    c164:	007d6d00 	rsbseq	r6, sp, r0, lsl #26
    c168:	097c0100 	ldmdbeq	ip!, {r8}^
    c16c:	fb150000 	blx	54c176 <_Min_Heap_Size+0x54b976>
    c170:	01000012 	tsteq	r0, r2, lsl r0
    c174:	84370155 	ldrthi	r0, [r7], #-341	; 0xfffffeab
    c178:	95000006 	strls	r0, [r0, #-6]
    c17c:	8d00007d 	stchi	0, cr0, [r0, #-500]	; 0xfffffe0c
    c180:	1600007d 			; <UNDEFINED> instruction: 0x1600007d
    c184:	00001c13 	andeq	r1, r0, r3, lsl ip
    c188:	15015701 	strne	r5, [r1, #-1793]	; 0xfffff8ff
    c18c:	00000651 	andeq	r0, r0, r1, asr r6
    c190:	00007dd7 	ldrdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    c194:	00007dcf 	andeq	r7, r0, pc, asr #27
    c198:	00264a16 	eoreq	r4, r6, r6, lsl sl
    c19c:	01580100 	cmpeq	r8, r0, lsl #2
    c1a0:	00068417 	andeq	r8, r6, r7, lsl r4
    c1a4:	007e0f00 	rsbseq	r0, lr, r0, lsl #30
    c1a8:	007e0d00 	rsbseq	r0, lr, r0, lsl #26
    c1ac:	00001900 	andeq	r1, r0, r0, lsl #18
    c1b0:	0ac50000 	beq	ff14c1b8 <_estack+0xdf14af80>
    c1b4:	09720000 	ldmdbeq	r2!, {}^	; <UNPREDICTABLE>
    c1b8:	011a0000 	tsteq	sl, r0
    c1bc:	00030550 	andeq	r0, r3, r0, asr r5
    c1c0:	1a000000 	bne	c1c8 <_Min_Heap_Size+0xb9c8>
    c1c4:	0a035101 	beq	e05d0 <_Min_Heap_Size+0xdfdd0>
    c1c8:	1700015a 	smlsdne	r0, sl, r1, r0
    c1cc:	00000000 	andeq	r0, r0, r0
    c1d0:	000009c9 	andeq	r0, r0, r9, asr #19
    c1d4:	b3011200 	movwlt	r1, #4608	; 0x1200
    c1d8:	01000024 	tsteq	r0, r4, lsr #32
    c1dc:	010a014c 	tsteq	sl, ip, asr #2
    c1e0:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    c1ec:	01007d02 	tsteq	r0, r2, lsl #26
    c1f0:	16180112 			; <UNDEFINED> instruction: 0x16180112
    c1f4:	43010000 	movwmi	r0, #4096	; 0x1000
    c1f8:	a6011101 	strge	r1, [r1], -r1, lsl #2
    c1fc:	58000002 	stmdapl	r0, {r1}
    c200:	64080017 	strvs	r0, [r8], #-23	; 0xffffffe9
    c204:	02080017 	andeq	r0, r8, #23
    c208:	1301007d 	movwne	r0, #4221	; 0x107d
    c20c:	00121f01 	andseq	r1, r2, r1, lsl #30
    c210:	01380100 	teqeq	r8, r0, lsl #2
    c214:	1740010d 	strbne	r0, [r0, -sp, lsl #2]
    c218:	17580800 	ldrbne	r0, [r8, -r0, lsl #16]
    c21c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    c220:	011b0100 	tsteq	fp, r0, lsl #2
    c224:	00001a83 	andeq	r1, r0, r3, lsl #21
    c228:	011afd01 	tsteq	sl, r1, lsl #26	; <UNPREDICTABLE>
    c22c:	00000651 	andeq	r0, r0, r1, asr r6
    c230:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
    c234:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    c238:	00007e22 	andeq	r7, r0, r2, lsr #28
    c23c:	000a2101 	andeq	r2, sl, r1, lsl #2
    c240:	24621c00 	strbtcs	r1, [r2], #-3072	; 0xfffff400
    c244:	fd010000 	stc2	0, cr0, [r1, #-0]
    c248:	0002a630 	andeq	sl, r2, r0, lsr r6
    c24c:	007e4800 	rsbseq	r4, lr, r0, lsl #16
    c250:	007e4200 	rsbseq	r4, lr, r0, lsl #4
    c254:	16dc1700 	ldrbne	r1, [ip], r0, lsl #14
    c258:	0ad40800 	beq	ff50e260 <_estack+0xdf50d028>
    c25c:	f21d0000 	vhadd.s16	d0, d13, d0
    c260:	e3080016 	movw	r0, #32790	; 0x8016
    c264:	1a00000a 	bne	c294 <_Min_Heap_Size+0xba94>
    c268:	09025001 	stmdbeq	r2, {r0, ip, lr}
    c26c:	51011aff 	strdpl	r1, [r1, -pc]
    c270:	1a007402 	bne	29280 <_Min_Heap_Size+0x28a80>
    c274:	30015201 	andcc	r5, r1, r1, lsl #4
    c278:	011e0000 	tsteq	lr, r0
    c27c:	000024d6 	ldrdeq	r2, [r0], -r6
    c280:	010de601 	tsteq	sp, r1, lsl #12
	...
    c28c:	01007d02 	tsteq	r0, r2, lsl #26
    c290:	12bf011e 	adcsne	r0, pc, #-2147483641	; 0x80000007
    c294:	db010000 	blle	4c29c <_Min_Heap_Size+0x4ba9c>
    c298:	0000010d 	andeq	r0, r0, sp, lsl #2
    c29c:	00000000 	andeq	r0, r0, r0
    c2a0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c2a4:	011b0100 	tsteq	fp, r0, lsl #2
    c2a8:	00002535 	andeq	r2, r0, r5, lsr r5
    c2ac:	0113be01 	tsteq	r3, r1, lsl #28
    c2b0:	00000651 	andeq	r0, r0, r1, asr r6
	...
    c2bc:	00007e74 	andeq	r7, r0, r4, ror lr
    c2c0:	000a7601 	andeq	r7, sl, r1, lsl #12
    c2c4:	00001700 	andeq	r1, r0, r0, lsl #14
    c2c8:	0a210000 	beq	84c2d0 <_Min_Heap_Size+0x84bad0>
    c2cc:	1b000000 	blne	c2d4 <_Min_Heap_Size+0xbad4>
    c2d0:	0007c401 	andeq	ip, r7, r1, lsl #8
    c2d4:	139d0100 	orrsne	r0, sp, #0, 2
    c2d8:	00065101 	andeq	r5, r6, r1, lsl #2
    c2dc:	00170c00 	andseq	r0, r7, r0, lsl #24
    c2e0:	00174008 	andseq	r4, r7, r8
    c2e4:	007e9408 	rsbseq	r9, lr, r8, lsl #8
    c2e8:	0ac50100 	beq	ff14c6f0 <_estack+0xdf14b4b8>
    c2ec:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    c2f0:	f2080017 	vqadd.s8	d0, d8, d7
    c2f4:	a800000a 	stmdage	r0, {r1, r3}
    c2f8:	1a00000a 	bne	c328 <_Min_Heap_Size+0xbb28>
    c2fc:	33015001 	movwcc	r5, #4097	; 0x1001
    c300:	17341900 	ldrne	r1, [r4, -r0, lsl #18]!
    c304:	09c90800 	stmibeq	r9, {fp}^
    c308:	0abb0000 	beq	feecc310 <_estack+0xdeecb0d8>
    c30c:	011a0000 	tsteq	sl, r0
    c310:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    c314:	00173817 	andseq	r3, r7, r7, lsl r8
    c318:	000a3708 	andeq	r3, sl, r8, lsl #14
    c31c:	011f0000 	tsteq	pc, r0
    c320:	00080c01 	andeq	r0, r8, r1, lsl #24
    c324:	00080c00 	andeq	r0, r8, r0, lsl #24
    c328:	01e60a00 	mvneq	r0, r0, lsl #20
    c32c:	01011f08 	tsteq	r1, r8, lsl #30
    c330:	00001ff8 	strdeq	r1, [r0], -r8
    c334:	00001ff8 	strdeq	r1, [r0], -r8
    c338:	0a01090b 	beq	4e76c <_Min_Heap_Size+0x4df6c>
    c33c:	2801011f 	stmdacs	r1, {r0, r1, r2, r3, r4, r8}
    c340:	28000010 	stmdacs	r0, {r4}
    c344:	0b000010 	bleq	c38c <_Min_Heap_Size+0xbb8c>
    c348:	1f060105 	svcne	0x00060105
    c34c:	22e40101 	rsccs	r0, r4, #1073741824	; 0x40000000
    c350:	22e40000 	rsccs	r0, r4, #0
    c354:	040b0000 	streq	r0, [fp], #-0
    c358:	af000601 	svcge	0x00000601
    c35c:	02000005 	andeq	r0, r0, #5
    c360:	001ba300 	andseq	sl, fp, r0, lsl #6
    c364:	31010400 	tstcc	r1, r0, lsl #8
    c368:	0c000001 	stceq	0, cr0, [r0], {1}
    c36c:	000026cf 	andeq	r2, r0, pc, asr #13
    c370:	0000004b 	andeq	r0, r0, fp, asr #32
    c374:	00000728 	andeq	r0, r0, r8, lsr #14
	...
    c380:	00008d98 	muleq	r0, r8, sp
    c384:	e0060102 	and	r0, r6, r2, lsl #2
    c388:	03000000 	movweq	r0, #0
    c38c:	000000ad 	andeq	r0, r0, sp, lsr #1
    c390:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    c394:	02000000 	andeq	r0, r0, #0
    c398:	00de0801 	sbcseq	r0, lr, r1, lsl #16
    c39c:	02020000 	andeq	r0, r2, #0
    c3a0:	00012705 	andeq	r2, r1, r5, lsl #14
    c3a4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    c3a8:	0000000e 	andeq	r0, r0, lr
    c3ac:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
    c3b0:	03000000 	movweq	r0, #0
    c3b4:	00000040 	andeq	r0, r0, r0, asr #32
    c3b8:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    c3bc:	02000000 	andeq	r0, r0, #0
    c3c0:	009b0704 	addseq	r0, fp, r4, lsl #14
    c3c4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c3c8:	00000005 	andeq	r0, r0, r5
    c3cc:	07080200 	streq	r0, [r8, -r0, lsl #4]
    c3d0:	00000096 	muleq	r0, r6, r0
    c3d4:	69050404 	stmdbvs	r5, {r2, sl}
    c3d8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    c3dc:	00a00704 	adceq	r0, r0, r4, lsl #14
    c3e0:	af030000 	svcge	0x00030000
    c3e4:	03000000 	movweq	r0, #0
    c3e8:	00301318 	eorseq	r1, r0, r8, lsl r3
    c3ec:	87050000 	strhi	r0, [r5, -r0]
    c3f0:	06000000 	streq	r0, [r0], -r0
    c3f4:	00000087 	andeq	r0, r0, r7, lsl #1
    c3f8:	00004203 	andeq	r4, r0, r3, lsl #4
    c3fc:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    c400:	00000058 	andeq	r0, r0, r8, asr r0
    c404:	00009d05 	andeq	r9, r0, r5, lsl #26
    c408:	00a90600 	adceq	r0, r9, r0, lsl #12
    c40c:	8c070000 	stchi	0, cr0, [r7], {-0}
    c410:	0901bd04 	stmdbeq	r1, {r2, r8, sl, fp, ip, sp, pc}
    c414:	0000020f 	andeq	r0, r0, pc, lsl #4
    c418:	0004c808 	andeq	ip, r4, r8, lsl #16
    c41c:	01bf0400 			; <UNDEFINED> instruction: 0x01bf0400
    c420:	0000ae12 	andeq	sl, r0, r2, lsl lr
    c424:	00230200 	eoreq	r0, r3, r0, lsl #4
    c428:	00072308 	andeq	r2, r7, r8, lsl #6
    c42c:	01c00400 	biceq	r0, r0, r0, lsl #8
    c430:	0000a912 	andeq	sl, r0, r2, lsl r9
    c434:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    c438:	0006fd08 	andeq	pc, r6, r8, lsl #26
    c43c:	01c10400 	biceq	r0, r1, r0, lsl #8
    c440:	0000a912 	andeq	sl, r0, r2, lsl r9
    c444:	08230200 	stmdaeq	r3!, {r9}
    c448:	00073c08 	andeq	r3, r7, r8, lsl #24
    c44c:	01c20400 	biceq	r0, r2, r0, lsl #8
    c450:	0000a912 	andeq	sl, r0, r2, lsl r9
    c454:	0c230200 	sfmeq	f0, 4, [r3], #-0
    c458:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
    c45c:	01c30400 	biceq	r0, r3, r0, lsl #8
    c460:	0000a912 	andeq	sl, r0, r2, lsl r9
    c464:	10230200 	eorne	r0, r3, r0, lsl #4
    c468:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
    c46c:	01c40400 	biceq	r0, r4, r0, lsl #8
    c470:	0000a912 	andeq	sl, r0, r2, lsl r9
    c474:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    c478:	50485309 	subpl	r5, r8, r9, lsl #6
    c47c:	01c50400 	biceq	r0, r5, r0, lsl #8
    c480:	00021f12 	andeq	r1, r2, r2, lsl pc
    c484:	18230200 	stmdane	r3!, {r9}
    c488:	00091708 	andeq	r1, r9, r8, lsl #14
    c48c:	01c60400 	biceq	r0, r6, r0, lsl #8
    c490:	0000a912 	andeq	sl, r0, r2, lsl r9
    c494:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    c498:	00081a08 	andeq	r1, r8, r8, lsl #20
    c49c:	01c70400 	biceq	r0, r7, r0, lsl #8
    c4a0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4a4:	28230200 	stmdacs	r3!, {r9}
    c4a8:	000b9708 	andeq	r9, fp, r8, lsl #14
    c4ac:	01c80400 	biceq	r0, r8, r0, lsl #8
    c4b0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4b4:	2c230200 	sfmcs	f0, 4, [r3], #-0
    c4b8:	00074208 	andeq	r4, r7, r8, lsl #4
    c4bc:	01c90400 	biceq	r0, r9, r0, lsl #8
    c4c0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4c4:	30230200 	eorcc	r0, r3, r0, lsl #4
    c4c8:	00076008 	andeq	r6, r7, r8
    c4cc:	01ca0400 	biceq	r0, sl, r0, lsl #8
    c4d0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4d4:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    c4d8:	00066308 	andeq	r6, r6, r8, lsl #6
    c4dc:	01cb0400 	biceq	r0, fp, r0, lsl #8
    c4e0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4e4:	38230200 	stmdacc	r3!, {r9}
    c4e8:	000a6608 	andeq	r6, sl, r8, lsl #12
    c4ec:	01cc0400 	biceq	r0, ip, r0, lsl #8
    c4f0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4f4:	3c230200 	sfmcc	f0, 4, [r3], #-0
    c4f8:	52465009 	subpl	r5, r6, #9
    c4fc:	01cd0400 	biceq	r0, sp, r0, lsl #8
    c500:	00023912 	andeq	r3, r2, r2, lsl r9
    c504:	40230200 	eormi	r0, r3, r0, lsl #4
    c508:	52464409 	subpl	r4, r6, #150994944	; 0x9000000
    c50c:	01ce0400 	biceq	r0, lr, r0, lsl #8
    c510:	0000ae12 	andeq	sl, r0, r2, lsl lr
    c514:	48230200 	stmdami	r3!, {r9}
    c518:	52444109 	subpl	r4, r4, #1073741826	; 0x40000002
    c51c:	01cf0400 	biceq	r0, pc, r0, lsl #8
    c520:	0000ae12 	andeq	sl, r0, r2, lsl lr
    c524:	4c230200 	sfmmi	f0, 4, [r3], #-0
    c528:	00078f08 	andeq	r8, r7, r8, lsl #30
    c52c:	01d00400 	bicseq	r0, r0, r0, lsl #8
    c530:	00025312 	andeq	r5, r2, r2, lsl r3
    c534:	50230200 	eorpl	r0, r3, r0, lsl #4
    c538:	00051508 	andeq	r1, r5, r8, lsl #10
    c53c:	01d10400 	bicseq	r0, r1, r0, lsl #8
    c540:	00026d12 	andeq	r6, r2, r2, lsl sp
    c544:	60230200 	eorvs	r0, r3, r0, lsl #4
    c548:	0008b208 	andeq	fp, r8, r8, lsl #4
    c54c:	01d20400 	bicseq	r0, r2, r0, lsl #8
    c550:	00027212 	andeq	r7, r2, r2, lsl r2
    c554:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    c558:	00089e08 	andeq	r9, r8, r8, lsl #28
    c55c:	01d30400 	bicseq	r0, r3, r0, lsl #8
    c560:	0000a912 	andeq	sl, r0, r2, lsl r9
    c564:	88230300 	stmdahi	r3!, {r8, r9}
    c568:	930a0001 	movwls	r0, #40961	; 0xa001
    c56c:	1f000000 	svcne	0x00000000
    c570:	0b000002 	bleq	c580 <_Min_Heap_Size+0xbd80>
    c574:	00000080 	andeq	r0, r0, r0, lsl #1
    c578:	0f05000b 	svceq	0x0005000b
    c57c:	0a000002 	beq	c58c <_Min_Heap_Size+0xbd8c>
    c580:	000000ae 	andeq	r0, r0, lr, lsr #1
    c584:	00000234 	andeq	r0, r0, r4, lsr r2
    c588:	0000800b 	andeq	r8, r0, fp
    c58c:	06000100 	streq	r0, [r0], -r0, lsl #2
    c590:	00000224 	andeq	r0, r0, r4, lsr #4
    c594:	00023405 	andeq	r3, r2, r5, lsl #8
    c598:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    c59c:	024e0000 	subeq	r0, lr, #0
    c5a0:	800b0000 	andhi	r0, fp, r0
    c5a4:	03000000 	movweq	r0, #0
    c5a8:	023e0600 	eorseq	r0, lr, #0, 12
    c5ac:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
    c5b0:	0a000002 	beq	c5c0 <_Min_Heap_Size+0xbdc0>
    c5b4:	000000ae 	andeq	r0, r0, lr, lsr #1
    c5b8:	00000268 	andeq	r0, r0, r8, ror #4
    c5bc:	0000800b 	andeq	r8, r0, fp
    c5c0:	06000400 	streq	r0, [r0], -r0, lsl #8
    c5c4:	00000258 	andeq	r0, r0, r8, asr r2
    c5c8:	00026805 	andeq	r6, r2, r5, lsl #16
    c5cc:	009d0a00 	addseq	r0, sp, r0, lsl #20
    c5d0:	02820000 	addeq	r0, r2, #0
    c5d4:	800b0000 	andhi	r0, fp, r0
    c5d8:	04000000 	streq	r0, [r0], #-0
    c5dc:	06930c00 	ldreq	r0, [r3], r0, lsl #24
    c5e0:	d4040000 	strle	r0, [r4], #-0
    c5e4:	00b30301 	adcseq	r0, r3, r1, lsl #6
    c5e8:	9d0a0000 	stcls	0, cr0, [sl, #-0]
    c5ec:	9f000000 	svcls	0x00000000
    c5f0:	0b000002 	bleq	c600 <_Min_Heap_Size+0xbe00>
    c5f4:	00000080 	andeq	r0, r0, r0, lsl #1
    c5f8:	730d0001 	movwvc	r0, #53249	; 0xd001
    c5fc:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    c600:	009d1139 	addseq	r1, sp, r9, lsr r1
    c604:	01010000 	mrseq	r0, (UNDEF: 1)
    c608:	0000980a 	andeq	r9, r0, sl, lsl #16
    c60c:	0002bd00 	andeq	fp, r2, r0, lsl #26
    c610:	00800b00 	addeq	r0, r0, r0, lsl #22
    c614:	000f0000 	andeq	r0, pc, r0
    c618:	0002ad06 	andeq	sl, r2, r6, lsl #26
    c61c:	1a330d00 	bne	ccfa24 <_Min_Heap_Size+0xccf224>
    c620:	3b050000 	blcc	14c628 <_Min_Heap_Size+0x14be28>
    c624:	0002bd17 	andeq	fp, r2, r7, lsl sp
    c628:	0a010100 	beq	4ca30 <_Min_Heap_Size+0x4c230>
    c62c:	00000098 	muleq	r0, r8, r0
    c630:	000002e0 	andeq	r0, r0, r0, ror #5
    c634:	0000800b 	andeq	r8, r0, fp
    c638:	06000700 	streq	r0, [r0], -r0, lsl #14
    c63c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c640:	0019cf0d 	andseq	ip, r9, sp, lsl #30
    c644:	173c0500 	ldrne	r0, [ip, -r0, lsl #10]!
    c648:	000002e0 	andeq	r0, r0, r0, ror #5
    c64c:	88070101 	stmdahi	r7, {r0, r8}
    c650:	0901f406 	stmdbeq	r1, {r1, r2, sl, ip, sp, lr, pc}
    c654:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    c658:	00524309 	subseq	r4, r2, r9, lsl #6
    c65c:	1101f606 	tstne	r1, r6, lsl #12	; <UNPREDICTABLE>
    c660:	000000a9 	andeq	r0, r0, r9, lsr #1
    c664:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    c668:	00000649 	andeq	r0, r0, r9, asr #12
    c66c:	1101f706 	tstne	r1, r6, lsl #14	; <UNPREDICTABLE>
    c670:	000000a9 	andeq	r0, r0, r9, lsr #1
    c674:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    c678:	0000064c 	andeq	r0, r0, ip, asr #12
    c67c:	1101f806 	tstne	r1, r6, lsl #16	; <UNPREDICTABLE>
    c680:	000000a9 	andeq	r0, r0, r9, lsr #1
    c684:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    c688:	00524943 	subseq	r4, r2, r3, asr #18
    c68c:	1101f906 	tstne	r1, r6, lsl #18	; <UNPREDICTABLE>
    c690:	000000a9 	andeq	r0, r0, r9, lsr #1
    c694:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    c698:	0000052d 	andeq	r0, r0, sp, lsr #10
    c69c:	1101fa06 	tstne	r1, r6, lsl #20	; <UNPREDICTABLE>
    c6a0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6a4:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    c6a8:	00000a0e 	andeq	r0, r0, lr, lsl #20
    c6ac:	1101fb06 	tstne	r1, r6, lsl #22	; <UNPREDICTABLE>
    c6b0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6b4:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    c6b8:	0000096c 	andeq	r0, r0, ip, ror #18
    c6bc:	1101fc06 	tstne	r1, r6, lsl #24	; <UNPREDICTABLE>
    c6c0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6c4:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    c6c8:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    c6cc:	1101fd06 	tstne	r1, r6, lsl #26	; <UNPREDICTABLE>
    c6d0:	0000009d 	muleq	r0, sp, r0
    c6d4:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    c6d8:	0000088f 	andeq	r0, r0, pc, lsl #17
    c6dc:	1101fe06 	tstne	r1, r6, lsl #28	; <UNPREDICTABLE>
    c6e0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6e4:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    c6e8:	000005c0 	andeq	r0, r0, r0, asr #11
    c6ec:	1101ff06 	tstne	r1, r6, lsl #30	; <UNPREDICTABLE>
    c6f0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6f4:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    c6f8:	000008bc 			; <UNDEFINED> instruction: 0x000008bc
    c6fc:	11020006 	tstne	r2, r6
    c700:	0000028f 	andeq	r0, r0, pc, lsl #5
    c704:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    c708:	00000b51 	andeq	r0, r0, r1, asr fp
    c70c:	11020106 	tstne	r2, r6, lsl #2
    c710:	000000a9 	andeq	r0, r0, r9, lsr #1
    c714:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    c718:	00000a7e 	andeq	r0, r0, lr, ror sl
    c71c:	11020206 	tstne	r2, r6, lsl #4
    c720:	000000a9 	andeq	r0, r0, r9, lsr #1
    c724:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    c728:	0000082a 	andeq	r0, r0, sl, lsr #16
    c72c:	11020306 	tstne	r2, r6, lsl #6
    c730:	000000a9 	andeq	r0, r0, r9, lsr #1
    c734:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    c738:	000008c6 	andeq	r0, r0, r6, asr #17
    c73c:	11020406 	tstne	r2, r6, lsl #8
    c740:	0000009d 	muleq	r0, sp, r0
    c744:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    c748:	000009a7 	andeq	r0, r0, r7, lsr #19
    c74c:	11020506 	tstne	r2, r6, lsl #10
    c750:	000000a9 	andeq	r0, r0, r9, lsr #1
    c754:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    c758:	00000964 	andeq	r0, r0, r4, ror #18
    c75c:	11020606 	tstne	r2, r6, lsl #12
    c760:	000000a9 	andeq	r0, r0, r9, lsr #1
    c764:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    c768:	000008d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c76c:	11020706 	tstne	r2, r6, lsl #14
    c770:	0000028f 	andeq	r0, r0, pc, lsl #5
    c774:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    c778:	000004f2 	strdeq	r0, [r0], -r2
    c77c:	11020806 	tstne	r2, r6, lsl #16
    c780:	000000a9 	andeq	r0, r0, r9, lsr #1
    c784:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    c788:	00000864 	andeq	r0, r0, r4, ror #16
    c78c:	11020906 	tstne	r2, r6, lsl #18
    c790:	000000a9 	andeq	r0, r0, r9, lsr #1
    c794:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    c798:	00000932 	andeq	r0, r0, r2, lsr r9
    c79c:	11020a06 	tstne	r2, r6, lsl #20
    c7a0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7a4:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    c7a8:	000008da 	ldrdeq	r0, [r0], -sl
    c7ac:	11020b06 	tstne	r2, r6, lsl #22
    c7b0:	0000009d 	muleq	r0, sp, r0
    c7b4:	085c2302 	ldmdaeq	ip, {r1, r8, r9, sp}^
    c7b8:	00000403 	andeq	r0, r0, r3, lsl #8
    c7bc:	11020c06 	tstne	r2, r6, lsl #24
    c7c0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7c4:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
    c7c8:	00000785 	andeq	r0, r0, r5, lsl #15
    c7cc:	11020d06 	tstne	r2, r6, lsl #26
    c7d0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7d4:	08642302 	stmdaeq	r4!, {r1, r8, r9, sp}^
    c7d8:	000008e4 	andeq	r0, r0, r4, ror #17
    c7dc:	11020e06 	tstne	r2, r6, lsl #28
    c7e0:	0000028f 	andeq	r0, r0, pc, lsl #5
    c7e4:	08682302 	stmdaeq	r8!, {r1, r8, r9, sp}^
    c7e8:	00000aed 	andeq	r0, r0, sp, ror #21
    c7ec:	11020f06 	tstne	r2, r6, lsl #30
    c7f0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7f4:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    c7f8:	00525343 	subseq	r5, r2, r3, asr #6
    c7fc:	11021006 	tstne	r2, r6
    c800:	000000a9 	andeq	r0, r0, r9, lsr #1
    c804:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
    c808:	000008ee 	andeq	r0, r0, lr, ror #17
    c80c:	11021106 	tstne	r2, r6, lsl #2
    c810:	0000028f 	andeq	r0, r0, pc, lsl #5
    c814:	08782302 	ldmdaeq	r8!, {r1, r8, r9, sp}^
    c818:	00000abc 			; <UNDEFINED> instruction: 0x00000abc
    c81c:	11021206 	tstne	r2, r6, lsl #4
    c820:	000000a9 	andeq	r0, r0, r9, lsr #1
    c824:	01802303 	orreq	r2, r0, r3, lsl #6
    c828:	00071808 	andeq	r1, r7, r8, lsl #16
    c82c:	02130600 	andseq	r0, r3, #0, 12
    c830:	0000a911 	andeq	sl, r0, r1, lsl r9
    c834:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    c838:	940c0001 	strls	r0, [ip], #-1
    c83c:	06000005 	streq	r0, [r0], -r5
    c840:	f3030214 	vqsub.u8	d0, d3, d4
    c844:	02000002 	andeq	r0, r0, #2
    c848:	010f0408 	tsteq	pc, r8, lsl #8
    c84c:	9f0e0000 	svcls	0x000e0000
    c850:	01000002 	tsteq	r0, r2
    c854:	03050a89 	movweq	r0, #23177	; 0x5a89
    c858:	20000008 	andcs	r0, r0, r8
    c85c:	0002c20e 	andeq	ip, r2, lr, lsl #4
    c860:	0f8a0100 	svceq	0x008a0100
    c864:	00000305 	andeq	r0, r0, r5, lsl #6
    c868:	e50e0000 	str	r0, [lr, #-0]
    c86c:	01000002 	tsteq	r0, r2
    c870:	03050f8b 	movweq	r0, #24459	; 0x5f8b
    c874:	08002d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp, sp}
    c878:	2703010f 	strcs	r0, [r3, -pc, lsl #2]
    c87c:	dc010000 	stcle	0, cr0, [r1], {-0}
    c880:	00000106 	andeq	r0, r0, r6, lsl #2
    c884:	00000000 	andeq	r0, r0, r0
    c888:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c88c:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
    c890:	74100000 	ldrvc	r0, [r0], #-0
    c894:	0100706d 	tsteq	r0, sp, rrx
    c898:	009d0cde 			; <UNDEFINED> instruction: 0x009d0cde
    c89c:	7ec00000 	cdpvc	0, 12, cr0, cr0, cr0, {0}
    c8a0:	7eb40000 	cdpvc	0, 11, cr0, cr4, cr0, {0}
    c8a4:	00110000 	andseq	r0, r1, r0
    c8a8:	0100001a 	tsteq	r0, sl, lsl r0
    c8ac:	009d15de 			; <UNDEFINED> instruction: 0x009d15de
    c8b0:	7f150000 	svcvc	0x00150000
    c8b4:	7f0b0000 	svcvc	0x000b0000
    c8b8:	bc110000 	ldclt	0, cr0, [r1], {-0}
    c8bc:	01000019 	tsteq	r0, r9, lsl r0
    c8c0:	009d21de 			; <UNDEFINED> instruction: 0x009d21de
    c8c4:	7f5f0000 	svcvc	0x005f0000
    c8c8:	7f570000 	svcvc	0x00570000
    c8cc:	ee110000 	cdp	0, 1, cr0, cr1, cr0, {0}
    c8d0:	01000026 	tsteq	r0, r6, lsr #32
    c8d4:	009d2bde 			; <UNDEFINED> instruction: 0x009d2bde
    c8d8:	7f9c0000 	svcvc	0x009c0000
    c8dc:	7f960000 	svcvc	0x00960000
    c8e0:	a6110000 	ldrge	r0, [r1], -r0
    c8e4:	0100001a 	tsteq	r0, sl, lsl r0
    c8e8:	009d3ade 			; <UNDEFINED> instruction: 0x009d3ade
    c8ec:	7fd60000 	svcvc	0x00d60000
    c8f0:	7fce0000 	svcvc	0x00ce0000
    c8f4:	12000000 	andne	r0, r0, #0
    c8f8:	0026f801 	eoreq	pc, r6, r1, lsl #16
    c8fc:	06a70100 	strteq	r0, [r7], r0, lsl #2
    c900:	00178c01 	andseq	r8, r7, r1, lsl #24
    c904:	0017a008 	andseq	sl, r7, r8
    c908:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    c90c:	08ac0001 	stmiaeq	ip!, {r0}
    c910:	00020000 	andeq	r0, r2, r0
    c914:	00001cbe 			; <UNDEFINED> instruction: 0x00001cbe
    c918:	01310104 	teqeq	r1, r4, lsl #2
    c91c:	370c0000 	strcc	r0, [ip, -r0]
    c920:	4b000028 	blmi	c9c8 <_Min_Heap_Size+0xc1c8>
    c924:	40000000 	andmi	r0, r0, r0
    c928:	00000007 	andeq	r0, r0, r7
    c92c:	00000000 	andeq	r0, r0, r0
    c930:	07000000 	streq	r0, [r0, -r0]
    c934:	02000090 	andeq	r0, r0, #144	; 0x90
    c938:	00e00601 	rsceq	r0, r0, r1, lsl #12
    c93c:	01020000 	mrseq	r0, (UNDEF: 2)
    c940:	0000de08 	andeq	sp, r0, r8, lsl #28
    c944:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    c948:	00000127 	andeq	r0, r0, r7, lsr #2
    c94c:	0009ec03 	andeq	lr, r9, r3, lsl #24
    c950:	19390300 	ldmdbne	r9!, {r8, r9}
    c954:	0000004a 	andeq	r0, r0, sl, asr #32
    c958:	0e070202 	cdpeq	2, 0, cr0, cr7, cr2, {0}
    c95c:	02000000 	andeq	r0, r0, #0
    c960:	00050504 	andeq	r0, r5, r4, lsl #10
    c964:	40030000 	andmi	r0, r3, r0
    c968:	03000000 	movweq	r0, #0
    c96c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    c970:	04020000 	streq	r0, [r2], #-0
    c974:	00009b07 	andeq	r9, r0, r7, lsl #22
    c978:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    c97c:	00000000 	andeq	r0, r0, r0
    c980:	96070802 	strls	r0, [r7], -r2, lsl #16
    c984:	04000000 	streq	r0, [r0], #-0
    c988:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c98c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c990:	0000a007 	andeq	sl, r0, r7
    c994:	00800500 	addeq	r0, r0, r0, lsl #10
    c998:	11030000 	mrsne	r0, (UNDEF: 3)
    c99c:	04000003 	streq	r0, [r0], #-3
    c9a0:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    c9a4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c9a8:	00010f04 	andeq	r0, r1, r4, lsl #30
    c9ac:	08010200 	stmdaeq	r1, {r9}
    c9b0:	000000e7 	andeq	r0, r0, r7, ror #1
    c9b4:	0009ee03 	andeq	lr, r9, r3, lsl #28
    c9b8:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    c9bc:	0000003e 	andeq	r0, r0, lr, lsr r0
    c9c0:	00004203 	andeq	r4, r0, r3, lsl #4
    c9c4:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    c9c8:	00000058 	andeq	r0, r0, r8, asr r0
    c9cc:	00280903 	eoreq	r0, r8, r3, lsl #18
    c9d0:	23280600 			; <UNDEFINED> instruction: 0x23280600
    c9d4:	000000ca 	andeq	r0, r0, sl, asr #1
    c9d8:	00289f06 	eoreq	r9, r8, r6, lsl #30
    c9dc:	29062000 	stmdbcs	r6, {sp}
    c9e0:	00014a08 	andeq	r4, r1, r8, lsl #20
    c9e4:	30720700 	rsbscc	r0, r2, r0, lsl #14
    c9e8:	122a0600 	eorne	r0, sl, #0, 12
    c9ec:	00000080 	andeq	r0, r0, r0, lsl #1
    c9f0:	07002302 	streq	r2, [r0, -r2, lsl #6]
    c9f4:	06003172 			; <UNDEFINED> instruction: 0x06003172
    c9f8:	0080122b 	addeq	r1, r0, fp, lsr #4
    c9fc:	23020000 	movwcs	r0, #8192	; 0x2000
    ca00:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    ca04:	122c0600 	eorne	r0, ip, #0, 12
    ca08:	00000080 	andeq	r0, r0, r0, lsl #1
    ca0c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    ca10:	06003372 			; <UNDEFINED> instruction: 0x06003372
    ca14:	0080122d 	addeq	r1, r0, sp, lsr #4
    ca18:	23020000 	movwcs	r0, #8192	; 0x2000
    ca1c:	3172070c 	cmncc	r2, ip, lsl #14
    ca20:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    ca24:	00008012 	andeq	r8, r0, r2, lsl r0
    ca28:	10230200 	eorne	r0, r3, r0, lsl #4
    ca2c:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    ca30:	80122f06 	andshi	r2, r2, r6, lsl #30
    ca34:	02000000 	andeq	r0, r0, #0
    ca38:	70071423 	andvc	r1, r7, r3, lsr #8
    ca3c:	30060063 	andcc	r0, r6, r3, rrx
    ca40:	00008012 	andeq	r8, r0, r2, lsl r0
    ca44:	18230200 	stmdane	r3!, {r9}
    ca48:	72737007 	rsbsvc	r7, r3, #7
    ca4c:	12310600 	eorsne	r0, r1, #0, 12
    ca50:	00000080 	andeq	r0, r0, r0, lsl #1
    ca54:	001c2302 	andseq	r2, ip, r2, lsl #6
    ca58:	0027c503 	eoreq	ip, r7, r3, lsl #10
    ca5c:	23340600 	teqcs	r4, #0, 12
    ca60:	00000156 	andeq	r0, r0, r6, asr r1
    ca64:	0027ea06 	eoreq	lr, r7, r6, lsl #20
    ca68:	35062000 	strcc	r2, [r6, #-0]
    ca6c:	0001d608 	andeq	sp, r1, r8, lsl #12
    ca70:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    ca74:	12360600 	eorsne	r0, r6, #0, 12
    ca78:	00000080 	andeq	r0, r0, r0, lsl #1
    ca7c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    ca80:	06003572 			; <UNDEFINED> instruction: 0x06003572
    ca84:	00801237 	addeq	r1, r0, r7, lsr r2
    ca88:	23020000 	movwcs	r0, #8192	; 0x2000
    ca8c:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    ca90:	12380600 	eorsne	r0, r8, #0, 12
    ca94:	00000080 	andeq	r0, r0, r0, lsl #1
    ca98:	07082302 	streq	r2, [r8, -r2, lsl #6]
    ca9c:	06003772 			; <UNDEFINED> instruction: 0x06003772
    caa0:	00801239 	addeq	r1, r0, r9, lsr r2
    caa4:	23020000 	movwcs	r0, #8192	; 0x2000
    caa8:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    caac:	123a0600 	eorsne	r0, sl, #0, 12
    cab0:	00000080 	andeq	r0, r0, r0, lsl #1
    cab4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    cab8:	06003972 			; <UNDEFINED> instruction: 0x06003972
    cabc:	0080123b 	addeq	r1, r0, fp, lsr r2
    cac0:	23020000 	movwcs	r0, #8192	; 0x2000
    cac4:	31720714 	cmncc	r2, r4, lsl r7
    cac8:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    cacc:	00008012 	andeq	r8, r0, r2, lsl r0
    cad0:	18230200 	stmdane	r3!, {r9}
    cad4:	31317207 	teqcc	r1, r7, lsl #4
    cad8:	123d0600 	eorsne	r0, sp, #0, 12
    cadc:	00000080 	andeq	r0, r0, r0, lsl #1
    cae0:	001c2302 	andseq	r2, ip, r2, lsl #6
    cae4:	00273403 	eoreq	r3, r7, r3, lsl #8
    cae8:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    caec:	000001e2 	andeq	r0, r0, r2, ror #3
    caf0:	0027fd06 	eoreq	pc, r7, r6, lsl #26
    caf4:	41064000 	mrsmi	r4, (UNDEF: 6)
    caf8:	00020e08 	andeq	r0, r2, r8, lsl #28
    cafc:	27f60800 	ldrbcs	r0, [r6, r0, lsl #16]!
    cb00:	42060000 	andmi	r0, r6, #0
    cb04:	00014a1a 	andeq	r4, r1, sl, lsl sl
    cb08:	00230200 	eoreq	r0, r3, r0, lsl #4
    cb0c:	0028ab08 	eoreq	sl, r8, r8, lsl #22
    cb10:	1a430600 	bne	10ce318 <_Min_Heap_Size+0x10cdb18>
    cb14:	000000be 	strheq	r0, [r0], -lr
    cb18:	00202302 	eoreq	r2, r0, r2, lsl #6
    cb1c:	00271909 	eoreq	r1, r7, r9, lsl #18
    cb20:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    cb24:	00000080 	andeq	r0, r0, r0, lsl #1
    cb28:	b2090101 	andlt	r0, r9, #1073741824	; 0x40000000
    cb2c:	01000028 	tsteq	r0, r8, lsr #32
    cb30:	0080151e 	addeq	r1, r0, lr, lsl r5
    cb34:	01010000 	mrseq	r0, (UNDEF: 1)
    cb38:	00277509 	eoreq	r7, r7, r9, lsl #10
    cb3c:	151f0100 	ldrne	r0, [pc, #-256]	; ca44 <_Min_Heap_Size+0xc244>
    cb40:	00000080 	andeq	r0, r0, r0, lsl #1
    cb44:	21090101 	tstcs	r9, r1, lsl #2
    cb48:	01000000 	mrseq	r0, (UNDEF: 0)
    cb4c:	00801520 	addeq	r1, r0, r0, lsr #10
    cb50:	01010000 	mrseq	r0, (UNDEF: 1)
    cb54:	00281e0a 	eoreq	r1, r8, sl, lsl #28
    cb58:	17660100 	strbne	r0, [r6, -r0, lsl #2]!
    cb5c:	00000087 	andeq	r0, r0, r7, lsl #1
    cb60:	dc030501 	cfstr32le	mvfx0, [r3], {1}
    cb64:	0a200001 	beq	80cb70 <_Min_Heap_Size+0x80c370>
    cb68:	00002742 	andeq	r2, r0, r2, asr #14
    cb6c:	87176701 	ldrhi	r6, [r7, -r1, lsl #14]
    cb70:	01000000 	mrseq	r0, (UNDEF: 0)
    cb74:	01e00305 	mvneq	r0, r5, lsl #6
    cb78:	010b2000 	mrseq	r2, (UNDEF: 11)
    cb7c:	0000275b 	andeq	r2, r0, fp, asr r7
    cb80:	0e010101 	adfeqs	f0, f1, f1
    cb84:	00008001 	andeq	r8, r0, r1
	...
    cb90:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    cb94:	7d010c01 	stcvc	12, cr0, [r1, #-4]
    cb98:	01000027 	tsteq	r0, r7, lsr #32
    cb9c:	80010efd 	strdhi	r0, [r1], -sp
	...
    cba8:	02000000 	andeq	r0, r0, #0
    cbac:	c901007d 	stmdbgt	r1, {r0, r2, r3, r4, r5, r6}
    cbb0:	0d000002 	stceq	0, cr0, [r0, #-8]
    cbb4:	00000865 	andeq	r0, r0, r5, ror #16
    cbb8:	00000000 	andeq	r0, r0, r0
    cbbc:	00000002 	andeq	r0, r0, r2
    cbc0:	00000000 	andeq	r0, r0, r0
    cbc4:	0cfe0100 	ldfeqe	f0, [lr]
    cbc8:	0008780e 	andeq	r7, r8, lr, lsl #16
    cbcc:	00800e00 	addeq	r0, r0, r0, lsl #28
    cbd0:	00800c00 	addeq	r0, r0, r0, lsl #24
    cbd4:	0f000000 	svceq	0x00000000
    cbd8:	0027a901 	eoreq	sl, r7, r1, lsl #18
    cbdc:	05d10100 	ldrbeq	r0, [r1, #256]	; 0x100
    cbe0:	00007901 	andeq	r7, r0, r1, lsl #18
    cbe4:	00186c00 	andseq	r6, r8, r0, lsl #24
    cbe8:	0018e808 	andseq	lr, r8, r8, lsl #16
    cbec:	00802108 	addeq	r2, r0, r8, lsl #2
    cbf0:	03a30100 			; <UNDEFINED> instruction: 0x03a30100
    cbf4:	65100000 	ldrvs	r0, [r0, #-0]
    cbf8:	01000028 	tsteq	r0, r8, lsr #32
    cbfc:	03a328d1 			; <UNDEFINED> instruction: 0x03a328d1
    cc00:	80490000 	subhi	r0, r9, r0
    cc04:	80410000 	subhi	r0, r1, r0
    cc08:	63100000 	tstvs	r0, #0
    cc0c:	01000003 	tsteq	r0, r3
    cc10:	008c37d1 	ldrdeq	r3, [ip], r1
    cc14:	80880000 	addhi	r0, r8, r0
    cc18:	80800000 	addhi	r0, r0, r0
    cc1c:	8b100000 	blhi	40cc24 <_Min_Heap_Size+0x40c424>
    cc20:	01000027 	tsteq	r0, r7, lsr #32
    cc24:	03a34bd1 			; <UNDEFINED> instruction: 0x03a34bd1
    cc28:	80c50000 	sbchi	r0, r5, r0
    cc2c:	80bf0000 	adcshi	r0, pc, r0
    cc30:	69100000 	ldmdbvs	r0, {}	; <UNPREDICTABLE>
    cc34:	01000027 	tsteq	r0, r7, lsr #32
    cc38:	03a366d1 			; <UNDEFINED> instruction: 0x03a366d1
    cc3c:	80f90000 	rscshi	r0, r9, r0
    cc40:	80f10000 	rscshi	r0, r1, r0
    cc44:	40110000 	andsmi	r0, r1, r0
    cc48:	0100001f 	tsteq	r0, pc, lsl r0
    cc4c:	007909d2 	ldrsbteq	r0, [r9], #-146	; 0xffffff6e
    cc50:	81360000 	teqhi	r6, r0
    cc54:	81300000 	teqhi	r0, r0
    cc58:	70120000 	andsvc	r0, r2, r0
    cc5c:	d3010063 	movwle	r0, #4195	; 0x1063
    cc60:	00008012 	andeq	r8, r0, r2, lsl r0
    cc64:	00816b00 	addeq	r6, r1, r0, lsl #22
    cc68:	00816100 	addeq	r6, r1, r0, lsl #2
    cc6c:	706f1200 	rsbvc	r1, pc, r0, lsl #4
    cc70:	1ad30100 	bne	ff4cd078 <_estack+0xdf4cbe40>
    cc74:	00000080 	andeq	r0, r0, r0, lsl #1
    cc78:	000081b4 			; <UNDEFINED> instruction: 0x000081b4
    cc7c:	000081ae 	andeq	r8, r0, lr, lsr #3
    cc80:	00707312 	rsbseq	r7, r0, r2, lsl r3
    cc84:	a323d301 			; <UNDEFINED> instruction: 0xa323d301
    cc88:	e5000003 	str	r0, [r0, #-3]
    cc8c:	df000081 	svcle	0x00000081
    cc90:	13000081 	movwne	r0, #129	; 0x81
    cc94:	080018ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp, ip}
    cc98:	00000782 	andeq	r0, r0, r2, lsl #15
    cc9c:	00000399 	muleq	r0, r9, r3
    cca0:	02500114 	subseq	r0, r0, #20, 2
    cca4:	15000079 	strne	r0, [r0, #-121]	; 0xffffff87
    cca8:	080018b2 	stmdaeq	r0, {r1, r4, r5, r7, fp, ip}
    ccac:	00000721 	andeq	r0, r0, r1, lsr #14
    ccb0:	80041600 	andhi	r1, r4, r0, lsl #12
    ccb4:	17000000 	strne	r0, [r0, -r0]
    ccb8:	00286c01 	eoreq	r6, r8, r1, lsl #24
    ccbc:	06960100 	ldreq	r0, [r6], r0, lsl #2
    ccc0:	0018e801 	andseq	lr, r8, r1, lsl #16
    ccc4:	001a6c08 	andseq	r6, sl, r8, lsl #24
    ccc8:	00821008 	addeq	r1, r2, r8
    cccc:	06a00100 	strteq	r0, [r0], r0, lsl #2
    ccd0:	23100000 	tstcs	r0, #0
    ccd4:	01000000 	mrseq	r0, (UNDEF: 0)
    ccd8:	03a32796 			; <UNDEFINED> instruction: 0x03a32796
    ccdc:	82360000 	eorshi	r0, r6, #0
    cce0:	82300000 	eorshi	r0, r0, #0
    cce4:	be100000 	cdplt	0, 1, cr0, cr0, cr0, {0}
    cce8:	01000027 	tsteq	r0, r7, lsr #32
    ccec:	00803b96 	umulleq	r3, r0, r6, fp
    ccf0:	82660000 	rsbhi	r0, r6, #0
    ccf4:	82620000 	rsbhi	r0, r2, #0
    ccf8:	40110000 	andsmi	r0, r1, r0
    ccfc:	0100001f 	tsteq	r0, pc, lsl r0
    cd00:	00790997 			; <UNDEFINED> instruction: 0x00790997
    cd04:	828a0000 	addhi	r0, sl, #0
    cd08:	82840000 	addhi	r0, r4, #0
    cd0c:	55110000 	ldrpl	r0, [r1, #-0]
    cd10:	01000027 	tsteq	r0, r7, lsr #32
    cd14:	00791497 			; <UNDEFINED> instruction: 0x00791497
    cd18:	82bc0000 	adcshi	r0, ip, #0
    cd1c:	82b40000 	adcshi	r0, r4, #0
    cd20:	91110000 	tstls	r1, r0
    cd24:	01000027 	tsteq	r0, r7, lsr #32
    cd28:	03a31398 			; <UNDEFINED> instruction: 0x03a31398
    cd2c:	83190000 	tsthi	r9, #0
    cd30:	82f30000 	rscshi	r0, r3, #0
    cd34:	03180000 	tsteq	r8, #0
    cd38:	01000028 	tsteq	r0, r8, lsr #32
    cd3c:	01d61a99 			; <UNDEFINED> instruction: 0x01d61a99
    cd40:	03050000 	movweq	r0, #20480	; 0x5000
    cd44:	200001e4 	andcs	r0, r0, r4, ror #3
    cd48:	00286518 	eoreq	r6, r8, r8, lsl r5
    cd4c:	199a0100 	ldmibne	sl, {r8}
    cd50:	000006a0 	andeq	r0, r0, r0, lsr #13
    cd54:	00dc0305 	sbcseq	r0, ip, r5, lsl #6
    cd58:	38132000 	ldmdacc	r3, {sp}
    cd5c:	86080019 			; <UNDEFINED> instruction: 0x86080019
    cd60:	60000008 	andvs	r0, r0, r8
    cd64:	14000004 	strne	r0, [r0], #-4
    cd68:	77025001 	strvc	r5, [r2, -r1]
    cd6c:	3e130000 	cdpcc	0, 1, cr0, cr3, cr0, {0}
    cd70:	86080019 			; <UNDEFINED> instruction: 0x86080019
    cd74:	77000008 	strvc	r0, [r0, -r8]
    cd78:	14000004 	strne	r0, [r0], #-4
    cd7c:	03055001 	movweq	r5, #20481	; 0x5001
    cd80:	08002ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp, sp}
    cd84:	19441300 	stmdbne	r4, {r8, r9, ip}^
    cd88:	08860800 	stmeq	r6, {fp}
    cd8c:	048e0000 	streq	r0, [lr], #0
    cd90:	01140000 	tsteq	r4, r0
    cd94:	fc030550 	stc2	5, cr0, [r3], {80}	; 0x50
    cd98:	0008002d 	andeq	r0, r8, sp, lsr #32
    cd9c:	00194c13 	andseq	r4, r9, r3, lsl ip
    cda0:	00089308 	andeq	r9, r8, r8, lsl #6
    cda4:	0004a500 	andeq	sl, r4, r0, lsl #10
    cda8:	50011400 	andpl	r1, r1, r0, lsl #8
    cdac:	2e100305 	cdpcs	3, 1, cr0, cr0, cr5, {0}
    cdb0:	13000800 	movwne	r0, #2048	; 0x800
    cdb4:	08001954 	stmdaeq	r0, {r2, r4, r6, r8, fp, ip}
    cdb8:	00000893 	muleq	r0, r3, r8
    cdbc:	000004bc 			; <UNDEFINED> instruction: 0x000004bc
    cdc0:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cdc4:	002e2403 	eoreq	r2, lr, r3, lsl #8
    cdc8:	5c130008 	ldcpl	0, cr0, [r3], {8}
    cdcc:	93080019 	movwls	r0, #32793	; 0x8019
    cdd0:	d3000008 	movwle	r0, #8
    cdd4:	14000004 	strne	r0, [r0], #-4
    cdd8:	03055001 	movweq	r5, #20481	; 0x5001
    cddc:	08002e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, sp}
    cde0:	19641300 	stmdbne	r4!, {r8, r9, ip}^
    cde4:	08930800 	ldmeq	r3, {fp}
    cde8:	04ea0000 	strbteq	r0, [sl], #0
    cdec:	01140000 	tsteq	r4, r0
    cdf0:	4c030550 	cfstr32mi	mvfx0, [r3], {80}	; 0x50
    cdf4:	0008002e 	andeq	r0, r8, lr, lsr #32
    cdf8:	00196c13 	andseq	r6, r9, r3, lsl ip
    cdfc:	00089308 	andeq	r9, r8, r8, lsl #6
    ce00:	00050100 	andeq	r0, r5, r0, lsl #2
    ce04:	50011400 	andpl	r1, r1, r0, lsl #8
    ce08:	2e600305 	cdpcs	3, 6, cr0, cr0, cr5, {0}
    ce0c:	13000800 	movwne	r0, #2048	; 0x800
    ce10:	08001974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp, ip}
    ce14:	00000893 	muleq	r0, r3, r8
    ce18:	00000518 	andeq	r0, r0, r8, lsl r5
    ce1c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ce20:	002e7403 	eoreq	r7, lr, r3, lsl #8
    ce24:	7c130008 	ldcvc	0, cr0, [r3], {8}
    ce28:	93080019 	movwls	r0, #32793	; 0x8019
    ce2c:	2f000008 	svccs	0x00000008
    ce30:	14000005 	strne	r0, [r0], #-5
    ce34:	03055001 	movweq	r5, #20481	; 0x5001
    ce38:	08002e88 	stmdaeq	r0, {r3, r7, r9, sl, fp, sp}
    ce3c:	19841300 	stmibne	r4, {r8, r9, ip}
    ce40:	08930800 	ldmeq	r3, {fp}
    ce44:	05460000 	strbeq	r0, [r6, #-0]
    ce48:	01140000 	tsteq	r4, r0
    ce4c:	9c030550 	cfstr32ls	mvfx0, [r3], {80}	; 0x50
    ce50:	0008002e 	andeq	r0, r8, lr, lsr #32
    ce54:	00198c13 	andseq	r8, r9, r3, lsl ip
    ce58:	00089308 	andeq	r9, r8, r8, lsl #6
    ce5c:	00055d00 	andeq	r5, r5, r0, lsl #26
    ce60:	50011400 	andpl	r1, r1, r0, lsl #8
    ce64:	2eb00305 	cdpcs	3, 11, cr0, cr0, cr5, {0}
    ce68:	13000800 	movwne	r0, #2048	; 0x800
    ce6c:	08001994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip}
    ce70:	00000893 	muleq	r0, r3, r8
    ce74:	00000574 	andeq	r0, r0, r4, ror r5
    ce78:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ce7c:	002ec403 	eoreq	ip, lr, r3, lsl #8
    ce80:	9c130008 	ldcls	0, cr0, [r3], {8}
    ce84:	93080019 	movwls	r0, #32793	; 0x8019
    ce88:	8b000008 	blhi	ceb0 <_Min_Heap_Size+0xc6b0>
    ce8c:	14000005 	strne	r0, [r0], #-5
    ce90:	03055001 	movweq	r5, #20481	; 0x5001
    ce94:	08002ed8 	stmdaeq	r0, {r3, r4, r6, r7, r9, sl, fp, sp}
    ce98:	19a41300 	stmibne	r4!, {r8, r9, ip}
    ce9c:	08930800 	ldmeq	r3, {fp}
    cea0:	05a20000 	streq	r0, [r2, #0]!
    cea4:	01140000 	tsteq	r4, r0
    cea8:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    ceac:	0008002e 	andeq	r0, r8, lr, lsr #32
    ceb0:	0019ac13 	andseq	sl, r9, r3, lsl ip
    ceb4:	00089308 	andeq	r9, r8, r8, lsl #6
    ceb8:	0005b900 	andeq	fp, r5, r0, lsl #18
    cebc:	50011400 	andpl	r1, r1, r0, lsl #8
    cec0:	2f000305 	svccs	0x00000305
    cec4:	13000800 	movwne	r0, #2048	; 0x800
    cec8:	080019b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, fp, ip}
    cecc:	00000893 	muleq	r0, r3, r8
    ced0:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ced4:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ced8:	002f1403 	eoreq	r1, pc, r3, lsl #8
    cedc:	bc130008 	ldclt	0, cr0, [r3], {8}
    cee0:	93080019 	movwls	r0, #32793	; 0x8019
    cee4:	e7000008 	str	r0, [r0, -r8]
    cee8:	14000005 	strne	r0, [r0], #-5
    ceec:	03055001 	movweq	r5, #20481	; 0x5001
    cef0:	08002f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, sp}
    cef4:	19c41300 	stmibne	r4, {r8, r9, ip}^
    cef8:	08930800 	ldmeq	r3, {fp}
    cefc:	05fe0000 	ldrbeq	r0, [lr, #0]!
    cf00:	01140000 	tsteq	r4, r0
    cf04:	3c030550 	cfstr32cc	mvfx0, [r3], {80}	; 0x50
    cf08:	0008002f 	andeq	r0, r8, pc, lsr #32
    cf0c:	0019ca13 	andseq	ip, r9, r3, lsl sl
    cf10:	00088608 	andeq	r8, r8, r8, lsl #12
    cf14:	00061200 	andeq	r1, r6, r0, lsl #4
    cf18:	50011400 	andpl	r1, r1, r0, lsl #8
    cf1c:	00007702 	andeq	r7, r0, r2, lsl #14
    cf20:	0019d013 	andseq	sp, r9, r3, lsl r0
    cf24:	0006b008 	andeq	fp, r6, r8
    cf28:	00062600 	andeq	r2, r6, r0, lsl #12
    cf2c:	50011400 	andpl	r1, r1, r0, lsl #8
    cf30:	00007602 	andeq	r7, r0, r2, lsl #12
    cf34:	0019de13 	andseq	sp, r9, r3, lsl lr
    cf38:	0002c908 	andeq	ip, r2, r8, lsl #18
    cf3c:	00064a00 	andeq	r4, r6, r0, lsl #20
    cf40:	50011400 	andpl	r1, r1, r0, lsl #8
    cf44:	00dc0305 	sbcseq	r0, ip, r5, lsl #6
    cf48:	01142000 	tsteq	r4, r0
    cf4c:	40080251 	andmi	r0, r8, r1, asr r2
    cf50:	03520114 	cmpeq	r2, #20, 2
    cf54:	0000c075 	andeq	ip, r0, r5, ror r0
    cf58:	0019e613 	andseq	lr, r9, r3, lsl r6
    cf5c:	00089308 	andeq	r9, r8, r8, lsl #6
    cf60:	00066100 	andeq	r6, r6, r0, lsl #2
    cf64:	50011400 	andpl	r1, r1, r0, lsl #8
    cf68:	2f500305 	svccs	0x00500305
    cf6c:	13000800 	movwne	r0, #2048	; 0x800
    cf70:	080019ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, fp, ip}
    cf74:	00000893 	muleq	r0, r3, r8
    cf78:	00000678 	andeq	r0, r0, r8, ror r6
    cf7c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cf80:	002f6003 	eoreq	r6, pc, r3
    cf84:	fe130008 	cdp2	0, 1, cr0, cr3, cr8, {0}
    cf88:	93080019 	movwls	r0, #32793	; 0x8019
    cf8c:	8f000008 	svchi	0x00000008
    cf90:	14000006 	strne	r0, [r0], #-6
    cf94:	03055001 	movweq	r5, #20481	; 0x5001
    cf98:	08002f60 	stmdaeq	r0, {r5, r6, r8, r9, sl, fp, sp}
    cf9c:	1a0a1900 	bne	2933a4 <_Min_Heap_Size+0x292ba4>
    cfa0:	08860800 	stmeq	r6, {fp}
    cfa4:	01140000 	tsteq	r4, r0
    cfa8:	00770250 	rsbseq	r0, r7, r0, asr r2
    cfac:	801a0000 	andshi	r0, sl, r0
    cfb0:	b0000000 	andlt	r0, r0, r0
    cfb4:	1b000006 	blne	cfd4 <_Min_Heap_Size+0xc7d4>
    cfb8:	00000080 	andeq	r0, r0, r0, lsl #1
    cfbc:	851c003f 	ldrhi	r0, [ip, #-63]	; 0xffffffc1
    cfc0:	01000028 	tsteq	r0, r8, lsr #32
    cfc4:	04010d8e 	streq	r0, [r1], #-3470	; 0xfffff272
    cfc8:	1c080018 	stcne	0, cr0, [r8], {24}
    cfcc:	1b080018 	blne	20d034 <_Min_Heap_Size+0x20c834>
    cfd0:	01000084 	smlabbeq	r0, r4, r0, r0
    cfd4:	00000721 	andeq	r0, r0, r1, lsr #14
    cfd8:	00288a10 	eoreq	r8, r8, r0, lsl sl
    cfdc:	2a8e0100 	bcs	fe38d3e4 <_estack+0xde38c1ac>
    cfe0:	00000080 	andeq	r0, r0, r0, lsl #1
    cfe4:	00008443 	andeq	r8, r0, r3, asr #8
    cfe8:	0000843b 	andeq	r8, r0, fp, lsr r4
    cfec:	287f011d 	ldmdacs	pc!, {r0, r2, r3, r4, r8}^	; <UNPREDICTABLE>
    cff0:	91010000 	mrsls	r0, (UNDEF: 1)
    cff4:	f3010111 	veor	d0, d1, d1
    cff8:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
    cffc:	00000080 	andeq	r0, r0, r0, lsl #1
    d000:	18101300 	ldmdane	r0, {r8, r9, ip}
    d004:	08930800 	ldmeq	r3, {fp}
    d008:	07100000 	ldreq	r0, [r0, -r0]
    d00c:	01140000 	tsteq	r4, r0
    d010:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    d014:	1408002d 	strne	r0, [r8], #-45	; 0xffffffd3
    d018:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    d01c:	16190000 	ldrne	r0, [r9], -r0
    d020:	a1080018 	tstge	r8, r8, lsl r0
    d024:	14000008 	strne	r0, [r0], #-8
    d028:	74025001 	strvc	r5, [r2], #-1
    d02c:	1f000000 	svcne	0x00000000
    d030:	00002720 	andeq	r2, r0, r0, lsr #14
    d034:	010d7f01 	tsteq	sp, r1, lsl #30
    d038:	0000077b 	andeq	r0, r0, fp, ror r7
    d03c:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    d040:	08001802 	stmdaeq	r0, {r1, fp, ip}
    d044:	01007d02 	tsteq	r0, r2, lsl #26
    d048:	0000077b 	andeq	r0, r0, fp, ror r7
    d04c:	736e6920 	cmnvc	lr, #32, 18	; 0x80000
    d050:	2e7f0100 	rpwcse	f0, f7, f0
    d054:	00000080 	andeq	r0, r0, r0, lsl #1
    d058:	0000847e 	andeq	r8, r0, lr, ror r4
    d05c:	0000847a 	andeq	r8, r0, sl, ror r4
    d060:	0027da11 	eoreq	sp, r7, r1, lsl sl
    d064:	0e830100 	rmfeqs	f0, f3, f0
    d068:	000000a6 	andeq	r0, r0, r6, lsr #1
    d06c:	000084a1 	andeq	r8, r0, r1, lsr #9
    d070:	0000849f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    d074:	0027e211 	eoreq	lr, r7, r1, lsl r2
    d078:	0e840100 	rmfeqs	f0, f4, f0
    d07c:	000000a6 	andeq	r0, r0, r6, lsr #1
    d080:	000084c8 	andeq	r8, r0, r8, asr #9
    d084:	000084b4 			; <UNDEFINED> instruction: 0x000084b4
    d088:	02010200 	andeq	r0, r1, #0, 4
    d08c:	00002831 	andeq	r2, r0, r1, lsr r8
    d090:	00279721 	eoreq	r9, r7, r1, lsr #14
    d094:	15740100 	ldrbne	r0, [r4, #-256]!	; 0xffffff00
    d098:	00008001 	andeq	r8, r0, r1
    d09c:	0017a000 	andseq	sl, r7, r0
    d0a0:	0017cc08 	andseq	ip, r7, r8, lsl #24
    d0a4:	00856b08 	addeq	r6, r5, r8, lsl #22
    d0a8:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    d0ac:	70200000 	eorvc	r0, r0, r0
    d0b0:	74010063 	strvc	r0, [r1], #-99	; 0xffffff9d
    d0b4:	00008034 	andeq	r8, r0, r4, lsr r0
    d0b8:	00859b00 	addeq	r9, r5, r0, lsl #22
    d0bc:	00859700 	addeq	r9, r5, r0, lsl #14
    d0c0:	218b1800 	orrcs	r1, fp, r0, lsl #16
    d0c4:	75010000 	strvc	r0, [r1, #-0]
    d0c8:	0007f30e 	andeq	pc, r7, lr, lsl #6
    d0cc:	7c910200 	lfmvc	f0, 4, [r1], {0}
    d0d0:	0027a211 	eoreq	sl, r7, r1, lsl r2
    d0d4:	12760100 	rsbsne	r0, r6, #0, 2
    d0d8:	00000080 	andeq	r0, r0, r0, lsl #1
    d0dc:	000085c2 	andeq	r8, r0, r2, asr #11
    d0e0:	000085bc 			; <UNDEFINED> instruction: 0x000085bc
    d0e4:	0017a622 	andseq	sl, r7, r2, lsr #12
    d0e8:	0017bc08 	andseq	fp, r7, r8, lsl #24
    d0ec:	00691208 	rsbeq	r1, r9, r8, lsl #4
    d0f0:	790e7701 	stmdbvc	lr, {r0, r8, r9, sl, ip, sp, lr}
    d0f4:	f7000000 			; <UNDEFINED> instruction: 0xf7000000
    d0f8:	f3000085 	vhadd.u8	d0, d16, d5
    d0fc:	00000085 	andeq	r0, r0, r5, lsl #1
    d100:	00a61a00 	adceq	r1, r6, r0, lsl #20
    d104:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    d108:	801b0000 	andshi	r0, fp, r0
    d10c:	01000000 	mrseq	r0, (UNDEF: 0)
    d110:	4e011700 	cdpmi	7, 0, cr1, cr1, cr0, {0}
    d114:	01000004 	tsteq	r0, r4
    d118:	1c010669 	stcne	6, cr0, [r1], {105}	; 0x69
    d11c:	6c080018 	stcvs	0, cr0, [r8], {24}
    d120:	16080018 			; <UNDEFINED> instruction: 0x16080018
    d124:	01000086 	smlabbeq	r0, r6, r0, r0
    d128:	00000865 	andeq	r0, r0, r5, ror #16
    d12c:	00183213 	andseq	r3, r8, r3, lsl r2
    d130:	00089308 	andeq	r9, r8, r8, lsl #6
    d134:	00083500 	andeq	r3, r8, r0, lsl #10
    d138:	50011400 	andpl	r1, r1, r0, lsl #8
    d13c:	2d740305 	ldclcs	3, cr0, [r4, #-20]!	; 0xffffffec
    d140:	13000800 	movwne	r0, #2048	; 0x800
    d144:	0800183e 	stmdaeq	r0, {r1, r2, r3, r4, r5, fp, ip}
    d148:	00000893 	muleq	r0, r3, r8
    d14c:	0000084c 	andeq	r0, r0, ip, asr #16
    d150:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    d154:	002d9803 	eoreq	r9, sp, r3, lsl #16
    d158:	46190008 	ldrmi	r0, [r9], -r8
    d15c:	93080018 	movwls	r0, #32792	; 0x8018
    d160:	14000008 	strne	r0, [r0], #-8
    d164:	03055001 	movweq	r5, #20481	; 0x5001
    d168:	08002dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp, sp}
    d16c:	01510114 	cmpeq	r1, r4, lsl r1
    d170:	23000031 	movwcs	r0, #49	; 0x31
    d174:	00002895 	muleq	r0, r5, r8
    d178:	1f046302 	svcne	0x00046302
    d17c:	0000b201 	andeq	fp, r0, r1, lsl #4
    d180:	08860300 	stmeq	r6, {r8, r9}
    d184:	a1240000 			; <UNDEFINED> instruction: 0xa1240000
    d188:	02000019 	andeq	r0, r0, #25
    d18c:	b20c0465 	andlt	r0, ip, #1694498816	; 0x65000000
    d190:	00000000 	andeq	r0, r0, r0
    d194:	ef010125 	svc	0x00010125
    d198:	e5000005 	str	r0, [r0, #-5]
    d19c:	08000005 	stmdaeq	r0, {r0, r2}
    d1a0:	01012600 	tsteq	r1, r0, lsl #12
    d1a4:	000003e8 	andeq	r0, r0, r8, ror #7
    d1a8:	000003e8 	andeq	r0, r0, r8, ror #7
    d1ac:	2605c807 	strcs	ip, [r5], -r7, lsl #16
    d1b0:	287f0101 	ldmdacs	pc!, {r0, r8}^	; <UNPREDICTABLE>
    d1b4:	287f0000 	ldmdacs	pc!, {}^	; <UNPREDICTABLE>
    d1b8:	91010000 	mrsls	r0, (UNDEF: 1)
    d1bc:	01be0011 			; <UNDEFINED> instruction: 0x01be0011
    d1c0:	00020000 	andeq	r0, r2, r0
    d1c4:	00001f5b 	andeq	r1, r0, fp, asr pc
    d1c8:	01310104 	teqeq	r1, r4, lsl #2
    d1cc:	b90c0000 	stmdblt	ip, {}	; <UNPREDICTABLE>
    d1d0:	4b000028 	blmi	d278 <_Min_Heap_Size+0xca78>
    d1d4:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    d1d8:	00000007 	andeq	r0, r0, r7
    d1dc:	00000000 	andeq	r0, r0, r0
    d1e0:	a2000000 	andge	r0, r0, #0
    d1e4:	02000095 	andeq	r0, r0, #149	; 0x95
    d1e8:	00e00601 	rsceq	r0, r0, r1, lsl #12
    d1ec:	01020000 	mrseq	r0, (UNDEF: 2)
    d1f0:	0000de08 	andeq	sp, r0, r8, lsl #28
    d1f4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    d1f8:	00000127 	andeq	r0, r0, r7, lsr #2
    d1fc:	0e070202 	cdpeq	2, 0, cr0, cr7, cr2, {0}
    d200:	02000000 	andeq	r0, r0, #0
    d204:	00050504 	andeq	r0, r5, r4, lsl #10
    d208:	04020000 	streq	r0, [r2], #-0
    d20c:	00009b07 	andeq	r9, r0, r7, lsl #22
    d210:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    d214:	00000000 	andeq	r0, r0, r0
    d218:	96070802 	strls	r0, [r7], -r2, lsl #16
    d21c:	03000000 	movweq	r0, #0
    d220:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    d224:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    d228:	0000a007 	andeq	sl, r0, r7
    d22c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    d230:	0000010f 	andeq	r0, r0, pc, lsl #2
    d234:	e7080102 	str	r0, [r8, -r2, lsl #2]
    d238:	04000000 	streq	r0, [r0], #-0
    d23c:	00287f01 	eoreq	r7, r8, r1, lsl #30
    d240:	060f0100 	streq	r0, [pc], -r0, lsl #2
    d244:	001a6c01 	andseq	r6, sl, r1, lsl #24
    d248:	001af408 	andseq	pc, sl, r8, lsl #8
    d24c:	00863608 	addeq	r3, r6, r8, lsl #12
    d250:	01a60100 			; <UNDEFINED> instruction: 0x01a60100
    d254:	8a050000 	bhi	14d25c <_Min_Heap_Size+0x14ca5c>
    d258:	01000028 	tsteq	r0, r8, lsr #32
    d25c:	0068290f 	rsbeq	r2, r8, pc, lsl #18
    d260:	865a0000 	ldrbhi	r0, [sl], -r0
    d264:	86560000 	ldrbhi	r0, [r6], -r0
    d268:	76060000 	strvc	r0, [r6], -r0
    d26c:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    d270:	c3000001 	movwgt	r0, #1
    d274:	07000000 	streq	r0, [r0, -r0]
    d278:	03055001 	movweq	r5, #20481	; 0x5001
    d27c:	08002f68 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, fp, sp}
    d280:	1a7c0600 	bne	1f0ea88 <_Min_Heap_Size+0x1f0e288>
    d284:	01b30800 			; <UNDEFINED> instruction: 0x01b30800
    d288:	00da0000 	sbcseq	r0, sl, r0
    d28c:	01070000 	mrseq	r0, (UNDEF: 7)
    d290:	6c030550 	cfstr32vs	mvfx0, [r3], {80}	; 0x50
    d294:	0008002f 	andeq	r0, r8, pc, lsr #32
    d298:	001a8806 	andseq	r8, sl, r6, lsl #16
    d29c:	0001a608 	andeq	sl, r1, r8, lsl #12
    d2a0:	0000f100 	andeq	pc, r0, r0, lsl #2
    d2a4:	50010700 	andpl	r0, r1, r0, lsl #14
    d2a8:	2f880305 	svccs	0x00880305
    d2ac:	06000800 	streq	r0, [r0], -r0, lsl #16
    d2b0:	08001a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp, ip}
    d2b4:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    d2b8:	00000108 	andeq	r0, r0, r8, lsl #2
    d2bc:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    d2c0:	002fc003 	eoreq	ip, pc, r3
    d2c4:	9a060008 	bls	18d2ec <_Min_Heap_Size+0x18caec>
    d2c8:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    d2cc:	1f000001 	svcne	0x00000001
    d2d0:	07000001 	streq	r0, [r0, -r1]
    d2d4:	03055001 	movweq	r5, #20481	; 0x5001
    d2d8:	08002fdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, fp, sp}
    d2dc:	1aa00600 	bne	fe80eae4 <_estack+0xde80d8ac>
    d2e0:	01b30800 			; <UNDEFINED> instruction: 0x01b30800
    d2e4:	01360000 	teqeq	r6, r0
    d2e8:	01070000 	mrseq	r0, (UNDEF: 7)
    d2ec:	14030550 	strne	r0, [r3], #-1360	; 0xfffffab0
    d2f0:	00080030 	andeq	r0, r8, r0, lsr r0
    d2f4:	001aac06 	andseq	sl, sl, r6, lsl #24
    d2f8:	0001a608 	andeq	sl, r1, r8, lsl #12
    d2fc:	00014d00 	andeq	r4, r1, r0, lsl #26
    d300:	50010700 	andpl	r0, r1, r0, lsl #14
    d304:	30300305 	eorscc	r0, r0, r5, lsl #6
    d308:	06000800 	streq	r0, [r0], -r0, lsl #16
    d30c:	08001ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp, ip}
    d310:	000001a6 	andeq	r0, r0, r6, lsr #3
    d314:	00000164 	andeq	r0, r0, r4, ror #2
    d318:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    d31c:	002f6803 	eoreq	r6, pc, r3, lsl #16
    d320:	ba060008 	blt	18d348 <_Min_Heap_Size+0x18cb48>
    d324:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    d328:	7b000001 	blvc	d334 <_Min_Heap_Size+0xcb34>
    d32c:	07000001 	streq	r0, [r0, -r1]
    d330:	03055001 	movweq	r5, #20481	; 0x5001
    d334:	08002fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, sp}
    d338:	1ac20600 	bne	ff08eb40 <_estack+0xdf08d908>
    d33c:	01a60800 			; <UNDEFINED> instruction: 0x01a60800
    d340:	01920000 	orrseq	r0, r2, r0
    d344:	01070000 	mrseq	r0, (UNDEF: 7)
    d348:	f8030550 			; <UNDEFINED> instruction: 0xf8030550
    d34c:	0008002f 	andeq	r0, r8, pc, lsr #32
    d350:	001aca08 	andseq	ip, sl, r8, lsl #20
    d354:	0001a608 	andeq	sl, r1, r8, lsl #12
    d358:	50010700 	andpl	r0, r1, r0, lsl #14
    d35c:	304c0305 	subcc	r0, ip, r5, lsl #6
    d360:	00000800 	andeq	r0, r0, r0, lsl #16
    d364:	ef010109 	svc	0x00010109
    d368:	e5000005 	str	r0, [r0, #-5]
    d36c:	02000005 	andeq	r0, r0, #5
    d370:	01010a00 	tsteq	r1, r0, lsl #20
    d374:	000003e8 	andeq	r0, r0, r8, ror #7
    d378:	000003e8 	andeq	r0, r0, r8, ror #7
    d37c:	0005c803 	andeq	ip, r5, r3, lsl #16
    d380:	0000001e 	andeq	r0, r0, lr, lsl r0
    d384:	20010002 	andcs	r0, r1, r2
    d388:	01040000 	mrseq	r0, (UNDEF: 4)
    d38c:	000096b1 			; <UNDEFINED> instruction: 0x000096b1
    d390:	00000798 	muleq	r0, r8, r7
    d394:	000028f0 	strdeq	r2, [r0], -r0
    d398:	0000004b 	andeq	r0, r0, fp, asr #32
    d39c:	00002910 	andeq	r2, r0, r0, lsl r9
    d3a0:	00228001 	eoreq	r8, r2, r1
    d3a4:	00020000 	andeq	r0, r2, r0
    d3a8:	00002013 	andeq	r2, r0, r3, lsl r0
    d3ac:	97310104 	ldrls	r0, [r1, -r4, lsl #2]!
    d3b0:	01d00000 	bicseq	r0, r0, r0
    d3b4:	02180800 	andseq	r0, r8, #0, 16
    d3b8:	291e0800 	ldmdbcs	lr, {fp}
    d3bc:	004b0000 	subeq	r0, fp, r0
    d3c0:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    d3c4:	80010000 	andhi	r0, r1, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
  errno = ENOMEM;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Heap_Size+0xf8244c>
      1c:	00000803 	andeq	r0, r0, r3, lsl #16
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Heap_Size+0x2ce064>
}
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	0b0b0024 	bleq	2c00c8 <_Min_Heap_Size+0x2bf8c8>
    if (status != HAL_OK)
      34:	0e030b3e 	vmoveq.16	d3[0], r0
      uwTickFreq = prevTickFreq;
      38:	0f050000 	svceq	0x00050000
      3c:	000b0b00 	andeq	r0, fp, r0, lsl #22
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
      44:	00001349 	andeq	r1, r0, r9, asr #6
      if (pllsource != 0)
      48:	03003407 	movweq	r3, #1031	; 0x407
      4c:	3b0b3a0e 	blcc	2ce88c <_Min_Heap_Size+0x2ce08c>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      54:	000a0213 	andeq	r0, sl, r3, lsl r2
      58:	000f0800 	andeq	r0, pc, r0, lsl #16
      5c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
      64:	030c3f01 	movweq	r3, #52993	; 0xcf01
      68:	3b0b3a0e 	blcc	2ce8a8 <_Min_Heap_Size+0x2ce0a8>
      SystemCoreClock = pllvco/pllp;
      6c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
      70:	1113490c 	tstne	r3, ip, lsl #18
      break;
      74:	40011201 	andmi	r1, r1, r1, lsl #4
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	0c429706 	mcrreq	7, 0, r9, r2, cr6
      7c:	00001301 	andeq	r1, r0, r1, lsl #6
      80:	0300050a 	movweq	r0, #1290	; 0x50a
      84:	3b0b3a0e 	blcc	2ce8c4 <_Min_Heap_Size+0x2ce0c4>
      88:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      8c:	b7060213 	smladlt	r6, r3, r2, r0
      90:	00000642 	andeq	r0, r0, r2, asr #12
      94:	0300340b 	movweq	r3, #1035	; 0x40b
      98:	3b0b3a0e 	blcc	2ce8d8 <_Min_Heap_Size+0x2ce0d8>
      9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      a0:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	0c00000c 	stceq	0, cr0, [r0], {12}
      a8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
      ac:	0b3b0b3a 	bleq	ec2d9c <_Min_Heap_Size+0xec259c>
      b0:	13490b39 	movtne	r0, #39737	; 0x9b39
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	340d0000 	strcc	r0, [sp], #-0
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	3a0e0300 	bcc	380cc0 <_Min_Heap_Size+0x3804c0>
      bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
      c4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
      c8:	890e0000 	stmdbhi	lr, {}	; <UNPREDICTABLE>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	11000182 	smlabbne	r0, r2, r1, r0
      d0:	00133101 	andseq	r3, r3, r1, lsl #2
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	002e0f00 	eoreq	r0, lr, r0, lsl #30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
      dc:	030e4087 	movweq	r4, #57479	; 0xe087
      e0:	3b0b3a0e 	blcc	2ce920 <_Min_Heap_Size+0x2ce120>
    if (huart->hdmarx != NULL)
      e4:	000b390b 	andeq	r3, fp, fp, lsl #18
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	11010000 	mrsne	r0, (UNDEF: 1)
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	130e2501 	movwne	r2, #58625	; 0xe501
      f0:	1b0e030b 	blne	380d24 <_Min_Heap_Size+0x380524>
    huart->TxXferCount = 0x00U;
      f4:	1106550e 	tstne	r6, lr, lsl #10
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	10015201 	andne	r5, r1, r1, lsl #4
    huart->gState  = HAL_UART_STATE_READY;
      fc:	02000006 	andeq	r0, r0, #6
    huart->RxState = HAL_UART_STATE_READY;
     100:	0b0b0024 	bleq	2c0198 <_Min_Heap_Size+0x2bf998>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	0e030b3e 	vmoveq.16	d3[0], r0
    HAL_UART_AbortCpltCallback(huart);
     108:	16030000 	strne	r0, [r3], -r0
     10c:	3a0e0300 	bcc	380d14 <_Min_Heap_Size+0x380514>
  uint32_t AbortCplt = 0x01U;
     110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (AbortCplt == 0x01U)
     114:	0013490b 	andseq	r4, r3, fp, lsl #18
}
     118:	00240400 	eoreq	r0, r4, r0, lsl #8
     11c:	0b3e0b0b 	bleq	f82d50 <_Min_Heap_Size+0xf82550>
     120:	00000803 	andeq	r0, r0, r3, lsl #16
     124:	0b000f05 	bleq	3d40 <_Min_Heap_Size+0x3540>
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	0013490b 	andseq	r4, r3, fp, lsl #18
     12c:	01130600 	tsteq	r3, r0, lsl #12
     130:	0b0b0e03 	bleq	2c3944 <_Min_Heap_Size+0x2c3144>
     134:	0b3b0b3a 	bleq	ec2e24 <_Min_Heap_Size+0xec2624>
     138:	13010b39 	movwne	r0, #6969	; 0x1b39
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	0d070000 	stceq	0, cr0, [r7, #-0]
     140:	3a0e0300 	bcc	380d48 <_Min_Heap_Size+0x380548>
     144:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     14c:	0800000a 	stmdaeq	r0, {r1, r3}
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	13490101 	movtne	r0, #37121	; 0x9101
     154:	00001301 	andeq	r1, r0, r1, lsl #6
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
     15c:	000b2f13 	andeq	r2, fp, r3, lsl pc
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	01130a00 	tsteq	r3, r0, lsl #20
     164:	0b0b0803 	bleq	2c2178 <_Min_Heap_Size+0x2c1978>
     168:	0b3b0b3a 	bleq	ec2e58 <_Min_Heap_Size+0xec2658>
     16c:	13010b39 	movwne	r0, #6969	; 0x1b39
     170:	340b0000 	strcc	r0, [fp], #-0
}
     174:	3a0e0300 	bcc	380d7c <_Min_Heap_Size+0x38057c>
     178:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     17c:	3f13490b 	svccc	0x0013490b
     180:	000a020c 	andeq	r0, sl, ip, lsl #4
}
     184:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     18c:	0b3b0b3a 	bleq	ec2e7c <_Min_Heap_Size+0xec267c>
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     194:	01111349 	tsteq	r1, r9, asr #6
     198:	06400112 			; <UNDEFINED> instruction: 0x06400112
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     1a0:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     1a8:	0b3b0b3a 	bleq	ec2e98 <_Min_Heap_Size+0xec2698>
     1ac:	13490b39 	movtne	r0, #39737	; 0x9b39
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     1b4:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	08030005 	stmdaeq	r3, {r0, r2}
     1bc:	0b3b0b3a 	bleq	ec2eac <_Min_Heap_Size+0xec26ac>
     1c0:	13490b39 	movtne	r0, #39737	; 0x9b39
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     1c8:	0f000006 	svceq	0x00000006
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00018289 	andeq	r8, r1, r9, lsl #5
     1d0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     1d4:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	030c3f01 	movweq	r3, #52993	; 0xcf01
     1dc:	3b0b3a0e 	blcc	2cea1c <_Min_Heap_Size+0x2ce21c>
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     1e4:	1113490c 	tstne	r3, ip, lsl #18
     1e8:	40011201 	andmi	r1, r1, r1, lsl #4
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     1f0:	00001301 	andeq	r1, r0, r1, lsl #6
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	03000511 	movweq	r0, #1297	; 0x511
     1f8:	3b0b3a08 	blcc	2cea20 <_Min_Heap_Size+0x2ce220>
     1fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	000a0213 	andeq	r0, sl, r3, lsl r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00051200 	andeq	r1, r5, r0, lsl #4
     208:	0b3a0e03 	bleq	e83a1c <_Min_Heap_Size+0xe8321c>
     20c:	0b390b3b 	bleq	e42f00 <_Min_Heap_Size+0xe42700>
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0a021349 	beq	84f3c <_Min_Heap_Size+0x8473c>
     214:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	14000000 	strne	r0, [r0], #-0
     21c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	0b3b0b3a 	bleq	ec2f10 <_Min_Heap_Size+0xec2710>
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	13490b39 	movtne	r0, #39737	; 0x9b39
     228:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
  tmp = hdma->Instance->FCR;
     22c:	15000006 	strne	r0, [r0, #-6]
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 180 <_Min_Heap_Size-0x680>
  tmp |= hdma->Init.FIFOMode;
     234:	0b3a0e03 	bleq	e83a48 <_Min_Heap_Size+0xe83248>
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	0b390b3b 	bleq	e42f2c <_Min_Heap_Size+0xe4272c>
    tmp |= hdma->Init.FIFOThreshold;
     23c:	01870c27 	orreq	r0, r7, r7, lsr #24
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	1201110c 	andne	r1, r1, #12, 2
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	97064001 	strls	r4, [r6, -r1]
     248:	13010c42 	movwne	r0, #7234	; 0x1c42
  hdma->Instance->FCR = tmp;
     24c:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	11010182 	smlabbne	r1, r2, r1, r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00133101 	andseq	r3, r3, r1, lsl #2
     258:	828a1700 	addhi	r1, sl, #0, 14
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	0a020001 	beq	80268 <_Min_Heap_Size+0x7fa68>
  hdma->State = HAL_DMA_STATE_READY;
     260:	000a4291 	muleq	sl, r1, r2
     264:	002e1800 	eoreq	r1, lr, r0, lsl #16
  return HAL_OK;
     268:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     26c:	0b3b0b3a 	bleq	ec2f5c <_Min_Heap_Size+0xec275c>
     270:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	01111349 	tsteq	r1, r9, asr #6
     278:	0a400112 	beq	10006c8 <_Min_Heap_Size+0xfffec8>
     27c:	000c4297 	muleq	ip, r7, r2
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	002e1900 	eoreq	r1, lr, r0, lsl #18
        hdma->State = HAL_DMA_STATE_READY;
     284:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
        return HAL_ERROR; 
     288:	0b3b0b3a 	bleq	ec2f78 <_Min_Heap_Size+0xec2778>
    return HAL_ERROR;
     28c:	01110b39 	tsteq	r1, r9, lsr fp
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	0a400112 	beq	10006e0 <_Min_Heap_Size+0xfffee0>
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	000c4297 	muleq	ip, r7, r2
     298:	002e1a00 	eoreq	r1, lr, r0, lsl #20
      tickstart = HAL_GetTick();
     29c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	030e4087 	movweq	r4, #57479	; 0xe087
     2a4:	3b0b3a0e 	blcc	2ceae4 <_Min_Heap_Size+0x2ce2e4>
     2a8:	000b390b 	andeq	r3, fp, fp, lsl #18
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	11010000 	mrsne	r0, (UNDEF: 1)
     2b0:	130e2501 	movwne	r2, #58625	; 0xe501
     2b4:	1b0e030b 	blne	380ee8 <_Min_Heap_Size+0x3806e8>
          return HAL_TIMEOUT;
     2b8:	1106550e 	tstne	r6, lr, lsl #10
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	10015201 	andne	r5, r1, r1, lsl #4
     2c0:	02000006 	andeq	r0, r0, #6
     2c4:	0b0b0024 	bleq	2c035c <_Min_Heap_Size+0x2bfb5c>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	0e030b3e 	vmoveq.16	d3[0], r0
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	16030000 	strne	r0, [r3], -r0
     2d0:	3a0e0300 	bcc	380ed8 <_Min_Heap_Size+0x3806d8>
     2d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      tickstart = HAL_GetTick();
     2d8:	0013490b 	andseq	r4, r3, fp, lsl #18
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00240400 	eoreq	r0, r4, r0, lsl #8
     2e0:	0b3e0b0b 	bleq	f82f14 <_Min_Heap_Size+0xf82714>
     2e4:	00000803 	andeq	r0, r0, r3, lsl #16
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     2ec:	06000013 			; <UNDEFINED> instruction: 0x06000013
          return HAL_TIMEOUT;
     2f0:	13490026 	movtne	r0, #36902	; 0x9026
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	13070000 	movwne	r0, #28672	; 0x7000
     2f8:	3a0b0b01 	bcc	2c2f04 <_Min_Heap_Size+0x2c2704>
     2fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     300:	0013010b 	andseq	r0, r3, fp, lsl #2
     304:	000d0800 	andeq	r0, sp, r0, lsl #16
     308:	0b3a0e03 	bleq	e83b1c <_Min_Heap_Size+0xe8331c>
     30c:	0b39053b 	bleq	e41800 <_Min_Heap_Size+0xe41000>
     310:	0a381349 	beq	e0503c <_Min_Heap_Size+0xe0483c>
      tickstart = HAL_GetTick();
     314:	0d090000 	stceq	0, cr0, [r9, #-0]
     318:	3a080300 	bcc	200f20 <_Min_Heap_Size+0x200720>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     320:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	0a00000a 	beq	354 <_Min_Heap_Size-0x4ac>
     328:	13490101 	movtne	r0, #37121	; 0x9101
     32c:	00001301 	andeq	r1, r0, r1, lsl #6
     330:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
          return HAL_TIMEOUT;
     334:	000b2f13 	andeq	r2, fp, r3, lsl pc
    if(pwrclkchanged == SET)
     338:	00160c00 	andseq	r0, r6, r0, lsl #24
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0b3a0e03 	bleq	e83b50 <_Min_Heap_Size+0xe83350>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	0b39053b 	bleq	e41834 <_Min_Heap_Size+0xe41034>
     344:	00001349 	andeq	r1, r0, r9, asr #6
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	3e01040d 	cdpcc	4, 0, cr0, cr1, cr13, {0}
     34c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     350:	3b0b3a13 	blcc	2ceba4 <_Min_Heap_Size+0x2ce3a4>
     354:	010b390b 	tsteq	fp, fp, lsl #18
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     360:	00000b1c 	andeq	r0, r0, ip, lsl fp
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	0b01130f 	bleq	44fa8 <_Min_Heap_Size+0x447a8>
     368:	3b0b3a0b 	blcc	2ceb9c <_Min_Heap_Size+0x2ce39c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	010b390b 	tsteq	fp, fp, lsl #18
     370:	10000013 	andne	r0, r0, r3, lsl r0
     374:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	0b3b0b3a 	bleq	ec3068 <_Min_Heap_Size+0xec2868>
     37c:	13490b39 	movtne	r0, #39737	; 0x9b39
     380:	00000a38 	andeq	r0, r0, r8, lsr sl
     384:	03000d11 	movweq	r0, #3345	; 0xd11
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	3b0b3a08 	blcc	2cebb0 <_Min_Heap_Size+0x2ce3b0>
     38c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
        __HAL_RCC_PLL_DISABLE();
     390:	000a3813 	andeq	r3, sl, r3, lsl r8
     394:	01131200 	tsteq	r3, r0, lsl #4
        tickstart = HAL_GetTick();
     398:	0b0b0e03 	bleq	2c3bac <_Min_Heap_Size+0x2c33ac>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	0b3b0b3a 	bleq	ec308c <_Min_Heap_Size+0xec288c>
     3a0:	13010b39 	movwne	r0, #6969	; 0x1b39
     3a4:	0f130000 	svceq	0x00130000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     3ac:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
            return HAL_TIMEOUT;
     3b0:	0b0b000f 	bleq	2c03f4 <_Min_Heap_Size+0x2bfbf4>
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	15150000 	ldrne	r0, [r5, #-0]
     3b8:	010c2701 	tsteq	ip, r1, lsl #14
     3bc:	16000013 			; <UNDEFINED> instruction: 0x16000013
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	13490005 	movtne	r0, #36869	; 0x9005
     3c4:	34170000 	ldrcc	r0, [r7], #-0
     3c8:	3a0e0300 	bcc	380fd0 <_Min_Heap_Size+0x3807d0>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3d0:	3f13490b 	svccc	0x0013490b
     3d4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
     3dc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     3e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     3e8:	01120111 	tsteq	r2, r1, lsl r1
     3ec:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0013010c 	andseq	r0, r3, ip, lsl #2
     3f4:	00051900 	andeq	r1, r5, r0, lsl #18
     3f8:	0b3a0e03 	bleq	e83c0c <_Min_Heap_Size+0xe8340c>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	0b39053b 	bleq	e418f0 <_Min_Heap_Size+0xe410f0>
     400:	06021349 	streq	r1, [r2], -r9, asr #6
     404:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00341a00 	eorseq	r1, r4, r0, lsl #20
     40c:	13490e03 	movtne	r0, #40451	; 0x9e03
     410:	0a020c34 	beq	834e8 <_Min_Heap_Size+0x82ce8>
     414:	891b0000 	ldmdbhi	fp, {}	; <UNPREDICTABLE>
     418:	11010182 	smlabbne	r1, r2, r1, r0
     41c:	00133101 	andseq	r3, r3, r1, lsl #2
     420:	828a1c00 	addhi	r1, sl, #0, 24
     424:	0a020001 	beq	80430 <_Min_Heap_Size+0x7fc30>
        __HAL_RCC_PLL_ENABLE();
     428:	000a4291 	muleq	sl, r1, r2
     42c:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
        tickstart = HAL_GetTick();
     430:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0b3b0b3a 	bleq	ec3124 <_Min_Heap_Size+0xec2924>
     438:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     43c:	01120111 	tsteq	r2, r1, lsl r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     444:	0013010c 	andseq	r0, r3, ip, lsl #2
            return HAL_TIMEOUT;
     448:	001d1e00 	andseq	r1, sp, r0, lsl #28
  return HAL_OK;
     44c:	01521331 	cmpeq	r2, r1, lsr r3
        __HAL_RCC_PLL_DISABLE();
     450:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     454:	58011201 	stmdapl	r1, {r0, r9, ip}
        tickstart = HAL_GetTick();
     458:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	1f00000b 	svcne	0x0000000b
     460:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     464:	0b3b0b3a 	bleq	ec3154 <_Min_Heap_Size+0xec2954>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	13490b39 	movtne	r0, #39737	; 0x9b39
     46c:	00000a02 	andeq	r0, r0, r2, lsl #20
            return HAL_TIMEOUT;
     470:	11010b20 	tstne	r1, r0, lsr #22
  return HAL_OK;
     474:	01011201 	tsteq	r1, r1, lsl #4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	21000013 	tstcs	r0, r3, lsl r0
        pll_config = RCC->PLLCFGR;
     47c:	01018289 	smlabbeq	r1, r9, r2, r8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	13310111 	teqne	r1, #1073741828	; 0x40000004
     484:	00001301 	andeq	r1, r0, r1, lsl #6
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	01828922 	orreq	r8, r2, r2, lsr #18
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	31011100 	mrscc	r1, (UNDEF: 17)
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	23000013 	movwcs	r0, #19
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 3e4 <_Min_Heap_Size-0x41c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0b3a0e03 	bleq	e83cac <_Min_Heap_Size+0xe834ac>
     49c:	0b390b3b 	bleq	e43190 <_Min_Heap_Size+0xe42990>
     4a0:	13490c27 	movtne	r0, #39975	; 0x9c27
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	01120111 	tsteq	r2, r1, lsl r1
     4a8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0013010c 	andseq	r0, r3, ip, lsl #2
     4b0:	00342400 	eorseq	r2, r4, r0, lsl #8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	0b3a0e03 	bleq	e83cc8 <_Min_Heap_Size+0xe834c8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	0b390b3b 	bleq	e431ac <_Min_Heap_Size+0xe429ac>
     4bc:	06021349 	streq	r1, [r2], -r9, asr #6
  return HAL_OK;
     4c0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
}
     4c4:	00342500 	eorseq	r2, r4, r0, lsl #10
        return HAL_ERROR;
     4c8:	0b3a0803 	bleq	e824dc <_Min_Heap_Size+0xe81cdc>
        return HAL_ERROR;
     4cc:	0b390b3b 	bleq	e431c0 <_Min_Heap_Size+0xe429c0>
}
     4d0:	0b1c1349 	bleq	7051fc <_Min_Heap_Size+0x7049fc>
        return HAL_ERROR;
     4d4:	05260000 	streq	r0, [r6, #-0]!
          return HAL_ERROR;
     4d8:	3a080300 	bcc	2010e0 <_Min_Heap_Size+0x2008e0>
     4dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     4e4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     4e8:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     4ec:	3a0e0300 	bcc	3810f4 <_Min_Heap_Size+0x3808f4>
     4f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4f4:	200c270b 	andcs	r2, ip, fp, lsl #14
     4f8:	2800000b 	stmdacs	r0, {r0, r1, r3}
     4fc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 44c <_Min_Heap_Size-0x3b4>
     500:	40870c3c 	addmi	r0, r7, ip, lsr ip
     504:	3a0e030e 	bcc	381144 <_Min_Heap_Size+0x380944>
     508:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     50c:	2900000b 	stmdbcs	r0, {r0, r1, r3}
     510:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 460 <_Min_Heap_Size-0x3a0>
     514:	40870c3c 	addmi	r0, r7, ip, lsr ip
     518:	3a0e030e 	bcc	381158 <_Min_Heap_Size+0x380958>
     51c:	000b3b0b 	andeq	r3, fp, fp, lsl #22
     520:	002e2a00 	eoreq	r2, lr, r0, lsl #20
     524:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     528:	030e4087 	movweq	r4, #57479	; 0xe087
     52c:	3b0b3a0e 	blcc	2ced6c <_Min_Heap_Size+0x2ce56c>
     530:	000b3905 	andeq	r3, fp, r5, lsl #18
     534:	11010000 	mrsne	r0, (UNDEF: 1)
     538:	130e2501 	movwne	r2, #58625	; 0xe501
     53c:	1b0e030b 	blne	381170 <_Min_Heap_Size+0x380970>
     540:	1106550e 	tstne	r6, lr, lsl #10
     544:	10015201 	andne	r5, r1, r1, lsl #4
     548:	02000006 	andeq	r0, r0, #6
     54c:	0b0b0024 	bleq	2c05e4 <_Min_Heap_Size+0x2bfde4>
     550:	0e030b3e 	vmoveq.16	d3[0], r0
     554:	16030000 	strne	r0, [r3], -r0
     558:	3a0e0300 	bcc	381160 <_Min_Heap_Size+0x380960>
     55c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     560:	0013490b 	andseq	r4, r3, fp, lsl #18
     564:	00240400 	eoreq	r0, r4, r0, lsl #8
     568:	0b3e0b0b 	bleq	f8319c <_Min_Heap_Size+0xf8299c>
     56c:	00000803 	andeq	r0, r0, r3, lsl #16
     570:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     574:	06000013 			; <UNDEFINED> instruction: 0x06000013
     578:	13490101 	movtne	r0, #37121	; 0x9101
     57c:	00001301 	andeq	r1, r0, r1, lsl #6
     580:	49002107 	stmdbmi	r0, {r0, r1, r2, r8, sp}
     584:	000b2f13 	andeq	r2, fp, r3, lsl pc
     588:	01130800 	tsteq	r3, r0, lsl #16
     58c:	0b3a0b0b 	bleq	e831c0 <_Min_Heap_Size+0xe829c0>
     590:	0b39053b 	bleq	e41a84 <_Min_Heap_Size+0xe41284>
     594:	00001301 	andeq	r1, r0, r1, lsl #6
     598:	03000d09 	movweq	r0, #3337	; 0xd09
     59c:	3b0b3a08 	blcc	2cedc4 <_Min_Heap_Size+0x2ce5c4>
     5a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     5a4:	000a3813 	andeq	r3, sl, r3, lsl r8
     5a8:	000d0a00 	andeq	r0, sp, r0, lsl #20
     5ac:	0b3a0e03 	bleq	e83dc0 <_Min_Heap_Size+0xe835c0>
     5b0:	0b39053b 	bleq	e41aa4 <_Min_Heap_Size+0xe412a4>
     5b4:	0a381349 	beq	e052e0 <_Min_Heap_Size+0xe04ae0>
     5b8:	160b0000 	strne	r0, [fp], -r0
     5bc:	3a0e0300 	bcc	3811c4 <_Min_Heap_Size+0x3809c4>
     5c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     5c4:	0013490b 	andseq	r4, r3, fp, lsl #18
     5c8:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
     5cc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     5d0:	0b3b0b3a 	bleq	ec32c0 <_Min_Heap_Size+0xec2ac0>
     5d4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5d8:	01120111 	tsteq	r2, r1, lsl r1
     5dc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     5e0:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     5e4:	0111010b 	tsteq	r1, fp, lsl #2
     5e8:	13010112 	movwne	r0, #4370	; 0x1112
     5ec:	340e0000 	strcc	r0, [lr], #-0
     5f0:	3a0e0300 	bcc	3811f8 <_Min_Heap_Size+0x3809f8>
     5f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     5fc:	0f00000a 	svceq	0x0000000a
     600:	0111010b 	tsteq	r1, fp, lsl #2
     604:	00000112 	andeq	r0, r0, r2, lsl r1
     608:	01110100 	tsteq	r1, r0, lsl #2
     60c:	0b130e25 	bleq	4c3ea8 <_Min_Heap_Size+0x4c36a8>
     610:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     614:	01110655 	tsteq	r1, r5, asr r6
     618:	06100152 			; <UNDEFINED> instruction: 0x06100152
     61c:	04020000 	streq	r0, [r2], #-0
     620:	0b0b3e01 	bleq	2cfe2c <_Min_Heap_Size+0x2cf62c>
     624:	3a13490b 	bcc	4d2a58 <_Min_Heap_Size+0x4d2258>
     628:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     62c:	0013010b 	andseq	r0, r3, fp, lsl #2
     630:	00280300 	eoreq	r0, r8, r0, lsl #6
     634:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     638:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     63c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     640:	0500000b 	streq	r0, [r0, #-11]
     644:	0b0b0024 	bleq	2c06dc <_Min_Heap_Size+0x2bfedc>
     648:	0e030b3e 	vmoveq.16	d3[0], r0
     64c:	16060000 	strne	r0, [r6], -r0
     650:	3a0e0300 	bcc	381258 <_Min_Heap_Size+0x380a58>
     654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     658:	0013490b 	andseq	r4, r3, fp, lsl #18
     65c:	00240700 	eoreq	r0, r4, r0, lsl #14
     660:	0b3e0b0b 	bleq	f83294 <_Min_Heap_Size+0xf82a94>
     664:	00000803 	andeq	r0, r0, r3, lsl #16
     668:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
     66c:	09000013 	stmdbeq	r0, {r0, r1, r4}
     670:	13490035 	movtne	r0, #36917	; 0x9035
     674:	010a0000 	mrseq	r0, (UNDEF: 10)
     678:	01134901 	tsteq	r3, r1, lsl #18
     67c:	0b000013 	bleq	6d0 <_Min_Heap_Size-0x130>
     680:	13490021 	movtne	r0, #36897	; 0x9021
     684:	00000b2f 	andeq	r0, r0, pc, lsr #22
     688:	0b01130c 	bleq	452c0 <_Min_Heap_Size+0x44ac0>
     68c:	3b0b3a0b 	blcc	2ceec0 <_Min_Heap_Size+0x2ce6c0>
     690:	010b3905 	tsteq	fp, r5, lsl #18
     694:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     698:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     69c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     6a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6a4:	00000a38 	andeq	r0, r0, r8, lsr sl
     6a8:	03000d0e 	movweq	r0, #3342	; 0xd0e
     6ac:	3b0b3a0e 	blcc	2ceeec <_Min_Heap_Size+0x2ce6ec>
     6b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     6b4:	000a3813 	andeq	r3, sl, r3, lsl r8
     6b8:	00160f00 	andseq	r0, r6, r0, lsl #30
     6bc:	0b3a0e03 	bleq	e83ed0 <_Min_Heap_Size+0xe836d0>
     6c0:	0b39053b 	bleq	e41bb4 <_Min_Heap_Size+0xe413b4>
     6c4:	00001349 	andeq	r1, r0, r9, asr #6
     6c8:	0b011310 	bleq	45310 <_Min_Heap_Size+0x44b10>
     6cc:	3b0b3a0b 	blcc	2cef00 <_Min_Heap_Size+0x2ce700>
     6d0:	010b390b 	tsteq	fp, fp, lsl #18
     6d4:	11000013 	tstne	r0, r3, lsl r0
     6d8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     6dc:	0b3b0b3a 	bleq	ec33cc <_Min_Heap_Size+0xec2bcc>
     6e0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6e4:	00000a38 	andeq	r0, r0, r8, lsr sl
     6e8:	03000d12 	movweq	r0, #3346	; 0xd12
     6ec:	3b0b3a0e 	blcc	2cef2c <_Min_Heap_Size+0x2ce72c>
     6f0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6f4:	000a3813 	andeq	r3, sl, r3, lsl r8
     6f8:	01131300 	tsteq	r3, r0, lsl #6
     6fc:	0b0b0e03 	bleq	2c3f10 <_Min_Heap_Size+0x2c3710>
     700:	0b3b0b3a 	bleq	ec33f0 <_Min_Heap_Size+0xec2bf0>
     704:	13010b39 	movwne	r0, #6969	; 0x1b39
     708:	0f140000 	svceq	0x00140000
     70c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     710:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     714:	0b0b000f 	bleq	2c0758 <_Min_Heap_Size+0x2bff58>
     718:	15160000 	ldrne	r0, [r6, #-0]
     71c:	010c2701 	tsteq	ip, r1, lsl #14
     720:	17000013 	smladne	r0, r3, r0, r0
     724:	13490005 	movtne	r0, #36869	; 0x9005
     728:	34180000 	ldrcc	r0, [r8], #-0
     72c:	3a0e0300 	bcc	381334 <_Min_Heap_Size+0x380b34>
     730:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     734:	3f13490b 	svccc	0x0013490b
     738:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     73c:	00341900 	eorseq	r1, r4, r0, lsl #18
     740:	0b3a1347 	bleq	e85464 <_Min_Heap_Size+0xe84c64>
     744:	0b390b3b 	bleq	e43438 <_Min_Heap_Size+0xe42c38>
     748:	00000a02 	andeq	r0, r0, r2, lsl #20
     74c:	3f012e1a 	svccc	0x00012e1a
     750:	3a0e030c 	bcc	381388 <_Min_Heap_Size+0x380b88>
     754:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     758:	110c270b 	tstne	ip, fp, lsl #14
     75c:	40011201 	andmi	r1, r1, r1, lsl #4
     760:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     764:	00001301 	andeq	r1, r0, r1, lsl #6
     768:	0300051b 	movweq	r0, #1307	; 0x51b
     76c:	3b0b3a0e 	blcc	2cefac <_Min_Heap_Size+0x2ce7ac>
     770:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     774:	b7060213 	smladlt	r6, r3, r2, r0
     778:	00000642 	andeq	r0, r0, r2, asr #12
     77c:	0182891c 	orreq	r8, r2, ip, lsl r9
     780:	31011101 	tstcc	r1, r1, lsl #2
     784:	00130113 	andseq	r0, r3, r3, lsl r1
     788:	828a1d00 	addhi	r1, sl, #0, 26
     78c:	0a020001 	beq	80798 <_Min_Heap_Size+0x7ff98>
     790:	000a4291 	muleq	sl, r1, r2
     794:	82891e00 	addhi	r1, r9, #0, 28
     798:	01110101 	tsteq	r1, r1, lsl #2
     79c:	00001331 	andeq	r1, r0, r1, lsr r3
     7a0:	0300341f 	movweq	r3, #1055	; 0x41f
     7a4:	3b0b3a0e 	blcc	2cefe4 <_Min_Heap_Size+0x2ce7e4>
     7a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     7ac:	000a0213 	andeq	r0, sl, r3, lsl r2
     7b0:	010b2000 	mrseq	r2, (UNDEF: 11)
     7b4:	01120111 	tsteq	r2, r1, lsl r1
     7b8:	00001301 	andeq	r1, r0, r1, lsl #6
     7bc:	01828921 	orreq	r8, r2, r1, lsr #18
     7c0:	31011100 	mrscc	r1, (UNDEF: 17)
     7c4:	22000013 	andcs	r0, r0, #19
     7c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 718 <_Min_Heap_Size-0xe8>
     7cc:	40870c3c 	addmi	r0, r7, ip, lsr ip
     7d0:	3a0e030e 	bcc	381410 <_Min_Heap_Size+0x380c10>
     7d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7d8:	2300000b 	movwcs	r0, #11
     7dc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 72c <_Min_Heap_Size-0xd4>
     7e0:	40870c3c 	addmi	r0, r7, ip, lsr ip
     7e4:	3a0e030e 	bcc	381424 <_Min_Heap_Size+0x380c24>
     7e8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     7ec:	0000000b 	andeq	r0, r0, fp
     7f0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     7f4:	030b130e 	movweq	r1, #45838	; 0xb30e
     7f8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     7fc:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     800:	00061001 	andeq	r1, r6, r1
     804:	00240200 	eoreq	r0, r4, r0, lsl #4
     808:	0b3e0b0b 	bleq	f8343c <_Min_Heap_Size+0xf82c3c>
     80c:	00000e03 	andeq	r0, r0, r3, lsl #28
     810:	03001603 	movweq	r1, #1539	; 0x603
     814:	3b0b3a0e 	blcc	2cf054 <_Min_Heap_Size+0x2ce854>
     818:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     81c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     820:	0b0b0024 	bleq	2c08b8 <_Min_Heap_Size+0x2c00b8>
     824:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     828:	26050000 	strcs	r0, [r5], -r0
     82c:	00134900 	andseq	r4, r3, r0, lsl #18
     830:	00350600 	eorseq	r0, r5, r0, lsl #12
     834:	00001349 	andeq	r1, r0, r9, asr #6
     838:	0b011307 	bleq	4545c <_Min_Heap_Size+0x44c5c>
     83c:	3b0b3a0b 	blcc	2cf070 <_Min_Heap_Size+0x2ce870>
     840:	010b3905 	tsteq	fp, r5, lsl #18
     844:	08000013 	stmdaeq	r0, {r0, r1, r4}
     848:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     84c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     850:	13490b39 	movtne	r0, #39737	; 0x9b39
     854:	00000a38 	andeq	r0, r0, r8, lsr sl
     858:	03000d09 	movweq	r0, #3337	; 0xd09
     85c:	3b0b3a0e 	blcc	2cf09c <_Min_Heap_Size+0x2ce89c>
     860:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     864:	000a3813 	andeq	r3, sl, r3, lsl r8
     868:	00160a00 	andseq	r0, r6, r0, lsl #20
     86c:	0b3a0e03 	bleq	e84080 <_Min_Heap_Size+0xe83880>
     870:	0b39053b 	bleq	e41d64 <_Min_Heap_Size+0xe41564>
     874:	00001349 	andeq	r1, r0, r9, asr #6
     878:	3e01040b 	cdpcc	4, 0, cr0, cr1, cr11, {0}
     87c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     880:	3b0b3a13 	blcc	2cf0d4 <_Min_Heap_Size+0x2ce8d4>
     884:	010b390b 	tsteq	fp, fp, lsl #18
     888:	0c000013 	stceq	0, cr0, [r0], {19}
     88c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     890:	00000b1c 	andeq	r0, r0, ip, lsl fp
     894:	0b01130d 	bleq	454d0 <_Min_Heap_Size+0x44cd0>
     898:	3b0b3a0b 	blcc	2cf0cc <_Min_Heap_Size+0x2ce8cc>
     89c:	010b390b 	tsteq	fp, fp, lsl #18
     8a0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     8a4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     8a8:	0b3b0b3a 	bleq	ec3598 <_Min_Heap_Size+0xec2d98>
     8ac:	13490b39 	movtne	r0, #39737	; 0x9b39
     8b0:	00000a38 	andeq	r0, r0, r8, lsr sl
     8b4:	0301130f 	movweq	r1, #4879	; 0x130f
     8b8:	3a0b0b0e 	bcc	2c34f8 <_Min_Heap_Size+0x2c2cf8>
     8bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8c0:	0013010b 	andseq	r0, r3, fp, lsl #2
     8c4:	000f1000 	andeq	r1, pc, r0
     8c8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     8cc:	0f110000 	svceq	0x00110000
     8d0:	000b0b00 	andeq	r0, fp, r0, lsl #22
     8d4:	01151200 	tsteq	r5, r0, lsl #4
     8d8:	13010c27 	movwne	r0, #7207	; 0x1c27
     8dc:	05130000 	ldreq	r0, [r3, #-0]
     8e0:	00134900 	andseq	r4, r3, r0, lsl #18
     8e4:	00341400 	eorseq	r1, r4, r0, lsl #8
     8e8:	0b3a0e03 	bleq	e840fc <_Min_Heap_Size+0xe838fc>
     8ec:	0b390b3b 	bleq	e435e0 <_Min_Heap_Size+0xe42de0>
     8f0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 7d4 <_Min_Heap_Size-0x2c>
     8f4:	00000c3c 	andeq	r0, r0, ip, lsr ip
     8f8:	3f012e15 	svccc	0x00012e15
     8fc:	3a0e030c 	bcc	381534 <_Min_Heap_Size+0x380d34>
     900:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     904:	110c270b 	tstne	ip, fp, lsl #14
     908:	40011201 	andmi	r1, r1, r1, lsl #4
     90c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     910:	00001301 	andeq	r1, r0, r1, lsl #6
     914:	01828916 	orreq	r8, r2, r6, lsl r9
     918:	31011100 	mrscc	r1, (UNDEF: 17)
     91c:	17000013 	smladne	r0, r3, r0, r0
     920:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 870 <_Min_Heap_Size+0x70>
     924:	0b3a0e03 	bleq	e84138 <_Min_Heap_Size+0xe83938>
     928:	0b390b3b 	bleq	e4361c <_Min_Heap_Size+0xe42e1c>
     92c:	01110c27 	tsteq	r1, r7, lsr #24
     930:	0a400112 	beq	1000d80 <_Min_Heap_Size+0x1000580>
     934:	000c4297 	muleq	ip, r7, r2
     938:	00341800 	eorseq	r1, r4, r0, lsl #16
     93c:	13490e03 	movtne	r0, #40451	; 0x9e03
     940:	0a020c34 	beq	83a18 <_Min_Heap_Size+0x83218>
     944:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
     948:	11010182 	smlabbne	r1, r2, r1, r0
     94c:	00133101 	andseq	r3, r3, r1, lsl #2
     950:	828a1a00 	addhi	r1, sl, #0, 20
     954:	0a020001 	beq	80960 <_Min_Heap_Size+0x80160>
     958:	000a4291 	muleq	sl, r1, r2
     95c:	01011b00 	tsteq	r1, r0, lsl #22
     960:	13011349 	movwne	r1, #4937	; 0x1349
     964:	211c0000 	tstcs	ip, r0
     968:	2f134900 	svccs	0x00134900
     96c:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     970:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 8c0 <_Min_Heap_Size+0xc0>
     974:	40870c3c 	addmi	r0, r7, ip, lsr ip
     978:	3a0e030e 	bcc	3815b8 <_Min_Heap_Size+0x380db8>
     97c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     980:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
     984:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 8d4 <_Min_Heap_Size+0xd4>
     988:	40870c3c 	addmi	r0, r7, ip, lsr ip
     98c:	3a0e030e 	bcc	3815cc <_Min_Heap_Size+0x380dcc>
     990:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     994:	0000000b 	andeq	r0, r0, fp
     998:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     99c:	030b130e 	movweq	r1, #45838	; 0xb30e
     9a0:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     9a4:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     9a8:	00061001 	andeq	r1, r6, r1
     9ac:	00240200 	eoreq	r0, r4, r0, lsl #4
     9b0:	0b3e0b0b 	bleq	f835e4 <_Min_Heap_Size+0xf82de4>
     9b4:	00000e03 	andeq	r0, r0, r3, lsl #28
     9b8:	03001603 	movweq	r1, #1539	; 0x603
     9bc:	3b0b3a0e 	blcc	2cf1fc <_Min_Heap_Size+0x2ce9fc>
     9c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     9c4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     9c8:	0b0b0024 	bleq	2c0a60 <_Min_Heap_Size+0x2c0260>
     9cc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     9d0:	35050000 	strcc	r0, [r5, #-0]
     9d4:	00134900 	andseq	r4, r3, r0, lsl #18
     9d8:	01010600 	tsteq	r1, r0, lsl #12
     9dc:	13011349 	movwne	r1, #4937	; 0x1349
     9e0:	21070000 	mrscs	r0, (UNDEF: 7)
     9e4:	2f134900 	svccs	0x00134900
     9e8:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     9ec:	0b0b0113 	bleq	2c0e40 <_Min_Heap_Size+0x2c0640>
     9f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9f4:	13010b39 	movwne	r0, #6969	; 0x1b39
     9f8:	0d090000 	stceq	0, cr0, [r9, #-0]
     9fc:	3a080300 	bcc	201604 <_Min_Heap_Size+0x200e04>
     a00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a04:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     a08:	0a00000a 	beq	a38 <_Min_Heap_Size+0x238>
     a0c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     a10:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a14:	13490b39 	movtne	r0, #39737	; 0x9b39
     a18:	00000a38 	andeq	r0, r0, r8, lsr sl
     a1c:	0300160b 	movweq	r1, #1547	; 0x60b
     a20:	3b0b3a0e 	blcc	2cf260 <_Min_Heap_Size+0x2cea60>
     a24:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a28:	0c000013 	stceq	0, cr0, [r0], {19}
     a2c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 97c <_Min_Heap_Size+0x17c>
     a30:	0b3a0e03 	bleq	e84244 <_Min_Heap_Size+0xe83a44>
     a34:	0b390b3b 	bleq	e43728 <_Min_Heap_Size+0xe42f28>
     a38:	01110c27 	tsteq	r1, r7, lsr #24
     a3c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     a40:	000c4297 	muleq	ip, r7, r2
     a44:	010b0d00 	tsteq	fp, r0, lsl #26
     a48:	01120111 	tsteq	r2, r1, lsl r1
     a4c:	00001301 	andeq	r1, r0, r1, lsl #6
     a50:	0300340e 	movweq	r3, #1038	; 0x40e
     a54:	3b0b3a0e 	blcc	2cf294 <_Min_Heap_Size+0x2cea94>
     a58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a5c:	000a0213 	andeq	r0, sl, r3, lsl r2
     a60:	010b0f00 	tsteq	fp, r0, lsl #30
     a64:	01120111 	tsteq	r2, r1, lsl r1
     a68:	01000000 	mrseq	r0, (UNDEF: 0)
     a6c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     a70:	0e030b13 	vmoveq.32	d3[0], r0
     a74:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     a78:	01520111 	cmpeq	r2, r1, lsl r1
     a7c:	00000610 	andeq	r0, r0, r0, lsl r6
     a80:	0b002402 	bleq	9a90 <_Min_Heap_Size+0x9290>
     a84:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     a88:	0300000e 	movweq	r0, #14
     a8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     a90:	0b3b0b3a 	bleq	ec3780 <_Min_Heap_Size+0xec2f80>
     a94:	13490b39 	movtne	r0, #39737	; 0x9b39
     a98:	24040000 	strcs	r0, [r4], #-0
     a9c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     aa0:	0008030b 	andeq	r0, r8, fp, lsl #6
     aa4:	00260500 	eoreq	r0, r6, r0, lsl #10
     aa8:	00001349 	andeq	r1, r0, r9, asr #6
     aac:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     ab0:	07000013 	smladeq	r0, r3, r0, r0
     ab4:	0b0b0113 	bleq	2c0f08 <_Min_Heap_Size+0x2c0708>
     ab8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     abc:	13010b39 	movwne	r0, #6969	; 0x1b39
     ac0:	0d080000 	stceq	0, cr0, [r8, #-0]
     ac4:	3a080300 	bcc	2016cc <_Min_Heap_Size+0x200ecc>
     ac8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     acc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ad0:	0900000a 	stmdbeq	r0, {r1, r3}
     ad4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     ad8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     adc:	13490b39 	movtne	r0, #39737	; 0x9b39
     ae0:	00000a38 	andeq	r0, r0, r8, lsr sl
     ae4:	0300160a 	movweq	r1, #1546	; 0x60a
     ae8:	3b0b3a0e 	blcc	2cf328 <_Min_Heap_Size+0x2ceb28>
     aec:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     af0:	0b000013 	bleq	b44 <_Min_Heap_Size+0x344>
     af4:	0b3e0104 	bleq	f80f0c <_Min_Heap_Size+0xf8070c>
     af8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     afc:	0b3b0b3a 	bleq	ec37ec <_Min_Heap_Size+0xec2fec>
     b00:	13010b39 	movwne	r0, #6969	; 0x1b39
     b04:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
     b08:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     b0c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     b10:	08030028 	stmdaeq	r3, {r3, r5}
     b14:	00000b1c 	andeq	r0, r0, ip, lsl fp
     b18:	0b01130e 	bleq	45758 <_Min_Heap_Size+0x44f58>
     b1c:	3b0b3a0b 	blcc	2cf350 <_Min_Heap_Size+0x2ceb50>
     b20:	010b390b 	tsteq	fp, fp, lsl #18
     b24:	0f000013 	svceq	0x00000013
     b28:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     b2c:	0b3b0b3a 	bleq	ec381c <_Min_Heap_Size+0xec301c>
     b30:	13490b39 	movtne	r0, #39737	; 0x9b39
     b34:	00000a38 	andeq	r0, r0, r8, lsr sl
     b38:	03011310 	movweq	r1, #4880	; 0x1310
     b3c:	3a0b0b0e 	bcc	2c377c <_Min_Heap_Size+0x2c2f7c>
     b40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b44:	0013010b 	andseq	r0, r3, fp, lsl #2
     b48:	000f1100 	andeq	r1, pc, r0, lsl #2
     b4c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     b50:	0f120000 	svceq	0x00120000
     b54:	000b0b00 	andeq	r0, fp, r0, lsl #22
     b58:	01151300 	tsteq	r5, r0, lsl #6
     b5c:	13010c27 	movwne	r0, #7207	; 0x1c27
     b60:	05140000 	ldreq	r0, [r4, #-0]
     b64:	00134900 	andseq	r4, r3, r0, lsl #18
     b68:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     b6c:	0b3a0e03 	bleq	e84380 <_Min_Heap_Size+0xe83b80>
     b70:	0b39053b 	bleq	e42064 <_Min_Heap_Size+0xe41864>
     b74:	01110c27 	tsteq	r1, r7, lsr #24
     b78:	06400112 			; <UNDEFINED> instruction: 0x06400112
     b7c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     b80:	16000013 			; <UNDEFINED> instruction: 0x16000013
     b84:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     b88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b8c:	13490b39 	movtne	r0, #39737	; 0x9b39
     b90:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     b94:	17000006 	strne	r0, [r0, -r6]
     b98:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     b9c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ba0:	13490b39 	movtne	r0, #39737	; 0x9b39
     ba4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     ba8:	18000006 	stmdane	r0, {r1, r2}
     bac:	01018289 	smlabbeq	r1, r9, r2, r8
     bb0:	13310111 	teqne	r1, #1073741828	; 0x40000004
     bb4:	00001301 	andeq	r1, r0, r1, lsl #6
     bb8:	01828a19 	orreq	r8, r2, r9, lsl sl
     bbc:	910a0200 	mrsls	r0, R10_fiq
     bc0:	00000a42 	andeq	r0, r0, r2, asr #20
     bc4:	0182891a 	orreq	r8, r2, sl, lsl r9
     bc8:	31011100 	mrscc	r1, (UNDEF: 17)
     bcc:	1b000013 	blne	c20 <_Min_Heap_Size+0x420>
     bd0:	0e03012e 	adfeqsp	f0, f3, #0.5
     bd4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bd8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     bdc:	01111349 	tsteq	r1, r9, asr #6
     be0:	06400112 			; <UNDEFINED> instruction: 0x06400112
     be4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     be8:	1c000013 	stcne	0, cr0, [r0], {19}
     bec:	0111010b 	tsteq	r1, fp, lsl #2
     bf0:	13010112 	movwne	r0, #4370	; 0x1112
     bf4:	341d0000 	ldrcc	r0, [sp], #-0
     bf8:	3a080300 	bcc	201800 <_Min_Heap_Size+0x201000>
     bfc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c00:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     c04:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     c08:	1d1e0000 	ldcne	0, cr0, [lr, #-0]
     c0c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     c10:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     c14:	01120111 	tsteq	r2, r1, lsl r1
     c18:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     c1c:	13010b57 	movwne	r0, #6999	; 0x1b57
     c20:	051f0000 	ldreq	r0, [pc, #-0]	; c28 <_Min_Heap_Size+0x428>
     c24:	02133100 	andseq	r3, r3, #0, 2
     c28:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     c2c:	34200000 	strtcc	r0, [r0], #-0
     c30:	02133100 	andseq	r3, r3, #0, 2
     c34:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     c38:	1d210000 	stcne	0, cr0, [r1, #-0]
     c3c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     c40:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     c44:	01120111 	tsteq	r2, r1, lsl r1
     c48:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     c4c:	00000b57 	andeq	r0, r0, r7, asr fp
     c50:	03003422 	movweq	r3, #1058	; 0x422
     c54:	3b0b3a0e 	blcc	2cf494 <_Min_Heap_Size+0x2cec94>
     c58:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     c5c:	000a0213 	andeq	r0, sl, r3, lsl r2
     c60:	82892300 	addhi	r2, r9, #0, 6
     c64:	01110101 	tsteq	r1, r1, lsl #2
     c68:	00001331 	andeq	r1, r0, r1, lsr r3
     c6c:	03012e24 	movweq	r2, #7716	; 0x1e24
     c70:	3b0b3a0e 	blcc	2cf4b0 <_Min_Heap_Size+0x2cecb0>
     c74:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c78:	1113490c 	tstne	r3, ip, lsl #18
     c7c:	40011201 	andmi	r1, r1, r1, lsl #4
     c80:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     c84:	00001301 	andeq	r1, r0, r1, lsl #6
     c88:	03012e25 	movweq	r2, #7717	; 0x1e25
     c8c:	3b0b3a0e 	blcc	2cf4cc <_Min_Heap_Size+0x2ceccc>
     c90:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c94:	1201110c 	andne	r1, r1, #12, 2
     c98:	970a4001 	strls	r4, [sl, -r1]
     c9c:	13010c42 	movwne	r0, #7234	; 0x1c42
     ca0:	0b260000 	bleq	980ca8 <_Min_Heap_Size+0x9804a8>
     ca4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     ca8:	27000001 	strcs	r0, [r0, -r1]
     cac:	0c3f012e 	ldfeqs	f0, [pc], #-184	; bfc <_Min_Heap_Size+0x3fc>
     cb0:	0b3a0e03 	bleq	e844c4 <_Min_Heap_Size+0xe83cc4>
     cb4:	0b39053b 	bleq	e421a8 <_Min_Heap_Size+0xe419a8>
     cb8:	13490c27 	movtne	r0, #39975	; 0x9c27
     cbc:	01120111 	tsteq	r2, r1, lsl r1
     cc0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     cc4:	0013010c 	andseq	r0, r3, ip, lsl #2
     cc8:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
     ccc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     cd0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cd4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     cd8:	01111349 	tsteq	r1, r9, asr #6
     cdc:	0a400112 	beq	100112c <_Min_Heap_Size+0x100092c>
     ce0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ce4:	29000013 	stmdbcs	r0, {r0, r1, r4}
     ce8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     cec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cf0:	13490b39 	movtne	r0, #39737	; 0x9b39
     cf4:	00000a02 	andeq	r0, r0, r2, lsl #20
     cf8:	3f012e2a 	svccc	0x00012e2a
     cfc:	3a0e030c 	bcc	381934 <_Min_Heap_Size+0x381134>
     d00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d04:	110c270b 	tstne	ip, fp, lsl #14
     d08:	40011201 	andmi	r1, r1, r1, lsl #4
     d0c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     d10:	00001301 	andeq	r1, r0, r1, lsl #6
     d14:	3f012e2b 	svccc	0x00012e2b
     d18:	3a0e030c 	bcc	381950 <_Min_Heap_Size+0x381150>
     d1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d20:	110c270b 	tstne	ip, fp, lsl #14
     d24:	40011201 	andmi	r1, r1, r1, lsl #4
     d28:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     d2c:	00001301 	andeq	r1, r0, r1, lsl #6
     d30:	3f012e2c 	svccc	0x00012e2c
     d34:	3a0e030c 	bcc	38196c <_Min_Heap_Size+0x38116c>
     d38:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d3c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     d40:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d44:	96064001 	strls	r4, [r6], -r1
     d48:	13010c42 	movwne	r0, #7234	; 0x1c42
     d4c:	0b2d0000 	bleq	b40d54 <_Min_Heap_Size+0xb40554>
     d50:	01065501 	tsteq	r6, r1, lsl #10
     d54:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     d58:	0e03012e 	adfeqsp	f0, f3, #0.5
     d5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d60:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     d64:	0b201349 	bleq	805a90 <_Min_Heap_Size+0x805290>
     d68:	00001301 	andeq	r1, r0, r1, lsl #6
     d6c:	0300052f 	movweq	r0, #1327	; 0x52f
     d70:	3b0b3a0e 	blcc	2cf5b0 <_Min_Heap_Size+0x2cedb0>
     d74:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d78:	30000013 	andcc	r0, r0, r3, lsl r0
     d7c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d84:	13490b39 	movtne	r0, #39737	; 0x9b39
     d88:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
     d8c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     d90:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     d94:	0b3a0e03 	bleq	e845a8 <_Min_Heap_Size+0xe83da8>
     d98:	0b39053b 	bleq	e4228c <_Min_Heap_Size+0xe41a8c>
     d9c:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
     da0:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     da4:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     da8:	00000e03 	andeq	r0, r0, r3, lsl #28
     dac:	3f002e33 	svccc	0x00002e33
     db0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     db4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     db8:	0b3b0b3a 	bleq	ec3aa8 <_Min_Heap_Size+0xec32a8>
     dbc:	00000b39 	andeq	r0, r0, r9, lsr fp
     dc0:	01110100 	tsteq	r1, r0, lsl #2
     dc4:	0b130e25 	bleq	4c4660 <_Min_Heap_Size+0x4c3e60>
     dc8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     dcc:	01110655 	tsteq	r1, r5, asr r6
     dd0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     dd4:	24020000 	strcs	r0, [r2], #-0
     dd8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ddc:	000e030b 	andeq	r0, lr, fp, lsl #6
     de0:	00160300 	andseq	r0, r6, r0, lsl #6
     de4:	0b3a0e03 	bleq	e845f8 <_Min_Heap_Size+0xe83df8>
     de8:	0b390b3b 	bleq	e43adc <_Min_Heap_Size+0xe432dc>
     dec:	00001349 	andeq	r1, r0, r9, asr #6
     df0:	0b002404 	bleq	9e08 <_Min_Heap_Size+0x9608>
     df4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     df8:	05000008 	streq	r0, [r0, #-8]
     dfc:	13490026 	movtne	r0, #36902	; 0x9026
     e00:	35060000 	strcc	r0, [r6, #-0]
     e04:	00134900 	andseq	r4, r3, r0, lsl #18
     e08:	01010700 	tsteq	r1, r0, lsl #14
     e0c:	13011349 	movwne	r1, #4937	; 0x1349
     e10:	21080000 	mrscs	r0, (UNDEF: 8)
     e14:	2f134900 	svccs	0x00134900
     e18:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     e1c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e20:	0b3b0b3a 	bleq	ec3b10 <_Min_Heap_Size+0xec3310>
     e24:	13490b39 	movtne	r0, #39737	; 0x9b39
     e28:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     e2c:	130a0000 	movwne	r0, #40960	; 0xa000
     e30:	3a0b0b01 	bcc	2c3a3c <_Min_Heap_Size+0x2c323c>
     e34:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e38:	0013010b 	andseq	r0, r3, fp, lsl #2
     e3c:	000d0b00 	andeq	r0, sp, r0, lsl #22
     e40:	0b3a0803 	bleq	e82e54 <_Min_Heap_Size+0xe82654>
     e44:	0b39053b 	bleq	e42338 <_Min_Heap_Size+0xe41b38>
     e48:	0a381349 	beq	e05b74 <_Min_Heap_Size+0xe05374>
     e4c:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     e50:	3a0e0300 	bcc	381a58 <_Min_Heap_Size+0x381258>
     e54:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e58:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e5c:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
     e60:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     e64:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e68:	13490b39 	movtne	r0, #39737	; 0x9b39
     e6c:	040e0000 	streq	r0, [lr], #-0
     e70:	0b0b3e01 	bleq	2d067c <_Min_Heap_Size+0x2cfe7c>
     e74:	3a13490b 	bcc	4d32a8 <_Min_Heap_Size+0x4d2aa8>
     e78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e7c:	0013010b 	andseq	r0, r3, fp, lsl #2
     e80:	00280f00 	eoreq	r0, r8, r0, lsl #30
     e84:	0b1c0e03 	bleq	704698 <_Min_Heap_Size+0x703e98>
     e88:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
     e8c:	1c080300 	stcne	3, cr0, [r8], {-0}
     e90:	1100000b 	tstne	r0, fp
     e94:	0b0b0113 	bleq	2c12e8 <_Min_Heap_Size+0x2c0ae8>
     e98:	0b3b0b3a 	bleq	ec3b88 <_Min_Heap_Size+0xec3388>
     e9c:	13010b39 	movwne	r0, #6969	; 0x1b39
     ea0:	0d120000 	ldceq	0, cr0, [r2, #-0]
     ea4:	3a0e0300 	bcc	381aac <_Min_Heap_Size+0x3812ac>
     ea8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     eac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     eb0:	1300000a 	movwne	r0, #10
     eb4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     eb8:	0b3b0b3a 	bleq	ec3ba8 <_Min_Heap_Size+0xec33a8>
     ebc:	13490b39 	movtne	r0, #39737	; 0x9b39
     ec0:	00000a38 	andeq	r0, r0, r8, lsr sl
     ec4:	3f002e14 	svccc	0x00002e14
     ec8:	3a0e030c 	bcc	381b00 <_Min_Heap_Size+0x381300>
     ecc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ed0:	110c270b 	tstne	ip, fp, lsl #14
     ed4:	40011201 	andmi	r1, r1, r1, lsl #4
     ed8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     edc:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     ee0:	030c3f01 	movweq	r3, #52993	; 0xcf01
     ee4:	3b0b3a0e 	blcc	2cf724 <_Min_Heap_Size+0x2cef24>
     ee8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     eec:	1201110c 	andne	r1, r1, #12, 2
     ef0:	97064001 	strls	r4, [r6, -r1]
     ef4:	13010c42 	movwne	r0, #7234	; 0x1c42
     ef8:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     efc:	11000182 	smlabbne	r0, r2, r1, r0
     f00:	00133101 	andseq	r3, r3, r1, lsl #2
     f04:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     f08:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     f0c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f10:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f14:	01120111 	tsteq	r2, r1, lsl r1
     f18:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     f1c:	0013010c 	andseq	r0, r3, ip, lsl #2
     f20:	00051800 	andeq	r1, r5, r0, lsl #16
     f24:	0b3a0e03 	bleq	e84738 <_Min_Heap_Size+0xe83f38>
     f28:	0b39053b 	bleq	e4241c <_Min_Heap_Size+0xe41c1c>
     f2c:	0a021349 	beq	85c58 <_Min_Heap_Size+0x85458>
     f30:	0f190000 	svceq	0x00190000
     f34:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     f38:	1a000013 	bne	f8c <_Min_Heap_Size+0x78c>
     f3c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e8c <_Min_Heap_Size+0x68c>
     f40:	0b3a0e03 	bleq	e84754 <_Min_Heap_Size+0xe83f54>
     f44:	0b39053b 	bleq	e42438 <_Min_Heap_Size+0xe41c38>
     f48:	13490c27 	movtne	r0, #39975	; 0x9c27
     f4c:	01120111 	tsteq	r2, r1, lsl r1
     f50:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     f54:	0013010c 	andseq	r0, r3, ip, lsl #2
     f58:	002e1b00 	eoreq	r1, lr, r0, lsl #22
     f5c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     f60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f64:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f68:	01111349 	tsteq	r1, r9, asr #6
     f6c:	0a400112 	beq	10013bc <_Min_Heap_Size+0x1000bbc>
     f70:	000c4297 	muleq	ip, r7, r2
     f74:	00341c00 	eorseq	r1, r4, r0, lsl #24
     f78:	0b3a0e03 	bleq	e8478c <_Min_Heap_Size+0xe83f8c>
     f7c:	0b39053b 	bleq	e42470 <_Min_Heap_Size+0xe41c70>
     f80:	06021349 	streq	r1, [r2], -r9, asr #6
     f84:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     f88:	00051d00 	andeq	r1, r5, r0, lsl #26
     f8c:	0b3a0e03 	bleq	e847a0 <_Min_Heap_Size+0xe83fa0>
     f90:	0b39053b 	bleq	e42484 <_Min_Heap_Size+0xe41c84>
     f94:	06021349 	streq	r1, [r2], -r9, asr #6
     f98:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     f9c:	00341e00 	eorseq	r1, r4, r0, lsl #28
     fa0:	0b3a0e03 	bleq	e847b4 <_Min_Heap_Size+0xe83fb4>
     fa4:	0b39053b 	bleq	e42498 <_Min_Heap_Size+0xe41c98>
     fa8:	0a021349 	beq	85cd4 <_Min_Heap_Size+0x854d4>
     fac:	0b1f0000 	bleq	7c0fb4 <_Min_Heap_Size+0x7c07b4>
     fb0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     fb4:	00130101 	andseq	r0, r3, r1, lsl #2
     fb8:	82892000 	addhi	r2, r9, #0
     fbc:	01110101 	tsteq	r1, r1, lsl #2
     fc0:	13011331 	movwne	r1, #4913	; 0x1331
     fc4:	8a210000 	bhi	840fcc <_Min_Heap_Size+0x8407cc>
     fc8:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     fcc:	0a42910a 	beq	10a53fc <_Min_Heap_Size+0x10a4bfc>
     fd0:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
     fd4:	11010182 	smlabbne	r1, r2, r1, r0
     fd8:	00133101 	andseq	r3, r3, r1, lsl #2
     fdc:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     fe0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     fe4:	0b3b0b3a 	bleq	ec3cd4 <_Min_Heap_Size+0xec34d4>
     fe8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     fec:	01111349 	tsteq	r1, r9, asr #6
     ff0:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ff4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     ff8:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     ffc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1000:	0b3b0b3a 	bleq	ec3cf0 <_Min_Heap_Size+0xec34f0>
    1004:	13490b39 	movtne	r0, #39737	; 0x9b39
    1008:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    100c:	25000006 	strcs	r0, [r0, #-6]
    1010:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1014:	0b3b0b3a 	bleq	ec3d04 <_Min_Heap_Size+0xec3504>
    1018:	13490b39 	movtne	r0, #39737	; 0x9b39
    101c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1020:	26000006 	strcs	r0, [r0], -r6
    1024:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
    1028:	00001301 	andeq	r1, r0, r1, lsl #6
    102c:	3f002e27 	svccc	0x00002e27
    1030:	3a0e030c 	bcc	381c68 <_Min_Heap_Size+0x381468>
    1034:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1038:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    103c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1040:	970a4001 	strls	r4, [sl, -r1]
    1044:	00000c42 	andeq	r0, r0, r2, asr #24
    1048:	3f002e28 	svccc	0x00002e28
    104c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1050:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1054:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    1058:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    105c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1060:	0b3a0e03 	bleq	e84874 <_Min_Heap_Size+0xe84074>
    1064:	0b390b3b 	bleq	e43d58 <_Min_Heap_Size+0xe43558>
    1068:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    106c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1070:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1074:	0b3a0e03 	bleq	e84888 <_Min_Heap_Size+0xe84088>
    1078:	0b39053b 	bleq	e4256c <_Min_Heap_Size+0xe41d6c>
    107c:	01000000 	mrseq	r0, (UNDEF: 0)
    1080:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1084:	0e030b13 	vmoveq.32	d3[0], r0
    1088:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    108c:	01520111 	cmpeq	r2, r1, lsl r1
    1090:	00000610 	andeq	r0, r0, r0, lsl r6
    1094:	0b002402 	bleq	a0a4 <_Min_Heap_Size+0x98a4>
    1098:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    109c:	0300000e 	movweq	r0, #14
    10a0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    10a4:	0b3b0b3a 	bleq	ec3d94 <_Min_Heap_Size+0xec3594>
    10a8:	13490b39 	movtne	r0, #39737	; 0x9b39
    10ac:	24040000 	strcs	r0, [r4], #-0
    10b0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    10b4:	0008030b 	andeq	r0, r8, fp, lsl #6
    10b8:	00350500 	eorseq	r0, r5, r0, lsl #10
    10bc:	00001349 	andeq	r1, r0, r9, asr #6
    10c0:	49010106 	stmdbmi	r1, {r1, r2, r8}
    10c4:	00130113 	andseq	r0, r3, r3, lsl r1
    10c8:	00210700 	eoreq	r0, r1, r0, lsl #14
    10cc:	0b2f1349 	bleq	bc5df8 <_Min_Heap_Size+0xbc55f8>
    10d0:	13080000 	movwne	r0, #32768	; 0x8000
    10d4:	3a0b0b01 	bcc	2c3ce0 <_Min_Heap_Size+0x2c34e0>
    10d8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10dc:	0013010b 	andseq	r0, r3, fp, lsl #2
    10e0:	000d0900 	andeq	r0, sp, r0, lsl #18
    10e4:	0b3a0803 	bleq	e830f8 <_Min_Heap_Size+0xe828f8>
    10e8:	0b39053b 	bleq	e425dc <_Min_Heap_Size+0xe41ddc>
    10ec:	0a381349 	beq	e05e18 <_Min_Heap_Size+0xe05618>
    10f0:	0d0a0000 	stceq	0, cr0, [sl, #-0]
    10f4:	3a0e0300 	bcc	381cfc <_Min_Heap_Size+0x3814fc>
    10f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10fc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1100:	0b00000a 	bleq	1130 <_Min_Heap_Size+0x930>
    1104:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1108:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    110c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1110:	040c0000 	streq	r0, [ip], #-0
    1114:	0b0b3e01 	bleq	2d0920 <_Min_Heap_Size+0x2d0120>
    1118:	3a13490b 	bcc	4d354c <_Min_Heap_Size+0x4d2d4c>
    111c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1120:	0013010b 	andseq	r0, r3, fp, lsl #2
    1124:	00280d00 	eoreq	r0, r8, r0, lsl #26
    1128:	0b1c0e03 	bleq	70493c <_Min_Heap_Size+0x70413c>
    112c:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
    1130:	1c080300 	stcne	3, cr0, [r8], {-0}
    1134:	0f00000b 	svceq	0x0000000b
    1138:	0b0b0113 	bleq	2c158c <_Min_Heap_Size+0x2c0d8c>
    113c:	0b3b0b3a 	bleq	ec3e2c <_Min_Heap_Size+0xec362c>
    1140:	13010b39 	movwne	r0, #6969	; 0x1b39
    1144:	0d100000 	ldceq	0, cr0, [r0, #-0]
    1148:	3a080300 	bcc	201d50 <_Min_Heap_Size+0x201550>
    114c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1150:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1154:	1100000a 	tstne	r0, sl
    1158:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    115c:	0b3b0b3a 	bleq	ec3e4c <_Min_Heap_Size+0xec364c>
    1160:	13490b39 	movtne	r0, #39737	; 0x9b39
    1164:	00000a38 	andeq	r0, r0, r8, lsr sl
    1168:	3f012e12 	svccc	0x00012e12
    116c:	3a0e030c 	bcc	381da4 <_Min_Heap_Size+0x3815a4>
    1170:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1174:	110c270b 	tstne	ip, fp, lsl #14
    1178:	40011201 	andmi	r1, r1, r1, lsl #4
    117c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1180:	00001301 	andeq	r1, r0, r1, lsl #6
    1184:	03000513 	movweq	r0, #1299	; 0x513
    1188:	3b0b3a0e 	blcc	2cf9c8 <_Min_Heap_Size+0x2cf1c8>
    118c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1190:	000a0213 	andeq	r0, sl, r3, lsl r2
    1194:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    1198:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    119c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    11a4:	01120111 	tsteq	r2, r1, lsl r1
    11a8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    11ac:	0013010c 	andseq	r0, r3, ip, lsl #2
    11b0:	00051500 	andeq	r1, r5, r0, lsl #10
    11b4:	0b3a0e03 	bleq	e849c8 <_Min_Heap_Size+0xe841c8>
    11b8:	0b39053b 	bleq	e426ac <_Min_Heap_Size+0xe41eac>
    11bc:	06021349 	streq	r1, [r2], -r9, asr #6
    11c0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    11c4:	82891600 	addhi	r1, r9, #0, 12
    11c8:	01110001 	tsteq	r1, r1
    11cc:	00001331 	andeq	r1, r0, r1, lsr r3
    11d0:	3f012e17 	svccc	0x00012e17
    11d4:	3a0e030c 	bcc	381e0c <_Min_Heap_Size+0x38160c>
    11d8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11dc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    11e0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11e4:	97064001 	strls	r4, [r6, -r1]
    11e8:	13010c42 	movwne	r0, #7234	; 0x1c42
    11ec:	34180000 	ldrcc	r0, [r8], #-0
    11f0:	3a080300 	bcc	201df8 <_Min_Heap_Size+0x2015f8>
    11f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11fc:	1900000a 	stmdbne	r0, {r1, r3}
    1200:	01018289 	smlabbeq	r1, r9, r2, r8
    1204:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1208:	8a1a0000 	bhi	681210 <_Min_Heap_Size+0x680a10>
    120c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1210:	0a42910a 	beq	10a5640 <_Min_Heap_Size+0x10a4e40>
    1214:	0f1b0000 	svceq	0x001b0000
    1218:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    121c:	1c000013 	stcne	0, cr0, [r0], {19}
    1220:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1224:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1228:	13490b39 	movtne	r0, #39737	; 0x9b39
    122c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1230:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    1234:	01018289 	smlabbeq	r1, r9, r2, r8
    1238:	13310111 	teqne	r1, #1073741828	; 0x40000004
    123c:	00001301 	andeq	r1, r0, r1, lsl #6
    1240:	0300341e 	movweq	r3, #1054	; 0x41e
    1244:	3b0b3a0e 	blcc	2cfa84 <_Min_Heap_Size+0x2cf284>
    1248:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    124c:	b7060213 	smladlt	r6, r3, r2, r0
    1250:	00000642 	andeq	r0, r0, r2, asr #12
    1254:	3f012e1f 	svccc	0x00012e1f
    1258:	3a0e030c 	bcc	381e90 <_Min_Heap_Size+0x381690>
    125c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1260:	110c270b 	tstne	ip, fp, lsl #14
    1264:	40011201 	andmi	r1, r1, r1, lsl #4
    1268:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    126c:	00001301 	andeq	r1, r0, r1, lsl #6
    1270:	03000520 	movweq	r0, #1312	; 0x520
    1274:	3b0b3a0e 	blcc	2cfab4 <_Min_Heap_Size+0x2cf2b4>
    1278:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    127c:	b7060213 	smladlt	r6, r3, r2, r0
    1280:	00000642 	andeq	r0, r0, r2, asr #12
    1284:	03003421 	movweq	r3, #1057	; 0x421
    1288:	3b0b3a0e 	blcc	2cfac8 <_Min_Heap_Size+0x2cf2c8>
    128c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1290:	b7060213 	smladlt	r6, r3, r2, r0
    1294:	00000642 	andeq	r0, r0, r2, asr #12
    1298:	11010b22 	tstne	r1, r2, lsr #22
    129c:	01011201 	tsteq	r1, r1, lsl #4
    12a0:	23000013 	movwcs	r0, #19
    12a4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    12a8:	0b3b0b3a 	bleq	ec3f98 <_Min_Heap_Size+0xec3798>
    12ac:	13490b39 	movtne	r0, #39737	; 0x9b39
    12b0:	00000a02 	andeq	r0, r0, r2, lsl #20
    12b4:	3f002e24 	svccc	0x00002e24
    12b8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    12bc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    12c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12c4:	00000b39 	andeq	r0, r0, r9, lsr fp
    12c8:	01110100 	tsteq	r1, r0, lsl #2
    12cc:	0b130e25 	bleq	4c4b68 <_Min_Heap_Size+0x4c4368>
    12d0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    12d4:	01110655 	tsteq	r1, r5, asr r6
    12d8:	06100152 			; <UNDEFINED> instruction: 0x06100152
    12dc:	24020000 	strcs	r0, [r2], #-0
    12e0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    12e4:	000e030b 	andeq	r0, lr, fp, lsl #6
    12e8:	00160300 	andseq	r0, r6, r0, lsl #6
    12ec:	0b3a0e03 	bleq	e84b00 <_Min_Heap_Size+0xe84300>
    12f0:	0b390b3b 	bleq	e43fe4 <_Min_Heap_Size+0xe437e4>
    12f4:	00001349 	andeq	r1, r0, r9, asr #6
    12f8:	0b002404 	bleq	a310 <_Min_Heap_Size+0x9b10>
    12fc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1300:	05000008 	streq	r0, [r0, #-8]
    1304:	13490026 	movtne	r0, #36902	; 0x9026
    1308:	35060000 	strcc	r0, [r6, #-0]
    130c:	00134900 	andseq	r4, r3, r0, lsl #18
    1310:	00340700 	eorseq	r0, r4, r0, lsl #14
    1314:	0b3a0e03 	bleq	e84b28 <_Min_Heap_Size+0xe84328>
    1318:	0b390b3b 	bleq	e4400c <_Min_Heap_Size+0xe4380c>
    131c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1200 <_Min_Heap_Size+0xa00>
    1320:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1324:	49010108 	stmdbmi	r1, {r3, r8}
    1328:	00130113 	andseq	r0, r3, r3, lsl r1
    132c:	00210900 	eoreq	r0, r1, r0, lsl #18
    1330:	0b2f1349 	bleq	bc605c <_Min_Heap_Size+0xbc585c>
    1334:	130a0000 	movwne	r0, #40960	; 0xa000
    1338:	3a0b0b01 	bcc	2c3f44 <_Min_Heap_Size+0x2c3744>
    133c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1340:	0013010b 	andseq	r0, r3, fp, lsl #2
    1344:	000d0b00 	andeq	r0, sp, r0, lsl #22
    1348:	0b3a0803 	bleq	e8335c <_Min_Heap_Size+0xe82b5c>
    134c:	0b39053b 	bleq	e42840 <_Min_Heap_Size+0xe42040>
    1350:	0a381349 	beq	e0607c <_Min_Heap_Size+0xe0587c>
    1354:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1358:	3a0e0300 	bcc	381f60 <_Min_Heap_Size+0x381760>
    135c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1360:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1364:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    1368:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    136c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1370:	13490b39 	movtne	r0, #39737	; 0x9b39
    1374:	040e0000 	streq	r0, [lr], #-0
    1378:	0b0b3e01 	bleq	2d0b84 <_Min_Heap_Size+0x2d0384>
    137c:	3a13490b 	bcc	4d37b0 <_Min_Heap_Size+0x4d2fb0>
    1380:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1384:	0013010b 	andseq	r0, r3, fp, lsl #2
    1388:	00280f00 	eoreq	r0, r8, r0, lsl #30
    138c:	0b1c0e03 	bleq	704ba0 <_Min_Heap_Size+0x7043a0>
    1390:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    1394:	1c080300 	stcne	3, cr0, [r8], {-0}
    1398:	1100000b 	tstne	r0, fp
    139c:	0b0b0113 	bleq	2c17f0 <_Min_Heap_Size+0x2c0ff0>
    13a0:	0b3b0b3a 	bleq	ec4090 <_Min_Heap_Size+0xec3890>
    13a4:	13010b39 	movwne	r0, #6969	; 0x1b39
    13a8:	0d120000 	ldceq	0, cr0, [r2, #-0]
    13ac:	3a0e0300 	bcc	381fb4 <_Min_Heap_Size+0x3817b4>
    13b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13b4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    13b8:	1300000a 	movwne	r0, #10
    13bc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    13c0:	0b3a0b0b 	bleq	e83ff4 <_Min_Heap_Size+0xe837f4>
    13c4:	0b390b3b 	bleq	e440b8 <_Min_Heap_Size+0xe438b8>
    13c8:	00001301 	andeq	r1, r0, r1, lsl #6
    13cc:	0b000f14 	bleq	5024 <_Min_Heap_Size+0x4824>
    13d0:	0013490b 	andseq	r4, r3, fp, lsl #18
    13d4:	000f1500 	andeq	r1, pc, r0, lsl #10
    13d8:	00000b0b 	andeq	r0, r0, fp, lsl #22
    13dc:	27011516 	smladcs	r1, r6, r5, r1
    13e0:	0013010c 	andseq	r0, r3, ip, lsl #2
    13e4:	00051700 	andeq	r1, r5, r0, lsl #14
    13e8:	00001349 	andeq	r1, r0, r9, asr #6
    13ec:	03000d18 	movweq	r0, #3352	; 0xd18
    13f0:	3b0b3a08 	blcc	2cfc18 <_Min_Heap_Size+0x2cf418>
    13f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13f8:	000a3813 	andeq	r3, sl, r3, lsl r8
    13fc:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    1400:	0b3a0e03 	bleq	e84c14 <_Min_Heap_Size+0xe84414>
    1404:	0b39053b 	bleq	e428f8 <_Min_Heap_Size+0xe420f8>
    1408:	13490c27 	movtne	r0, #39975	; 0x9c27
    140c:	01120111 	tsteq	r2, r1, lsl r1
    1410:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1414:	0013010c 	andseq	r0, r3, ip, lsl #2
    1418:	00051a00 	andeq	r1, r5, r0, lsl #20
    141c:	0b3a0e03 	bleq	e84c30 <_Min_Heap_Size+0xe84430>
    1420:	0b39053b 	bleq	e42914 <_Min_Heap_Size+0xe42114>
    1424:	06021349 	streq	r1, [r2], -r9, asr #6
    1428:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    142c:	00341b00 	eorseq	r1, r4, r0, lsl #22
    1430:	0b3a0e03 	bleq	e84c44 <_Min_Heap_Size+0xe84444>
    1434:	0b39053b 	bleq	e42928 <_Min_Heap_Size+0xe42128>
    1438:	06021349 	streq	r1, [r2], -r9, asr #6
    143c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1440:	00341c00 	eorseq	r1, r4, r0, lsl #24
    1444:	0b3a0803 	bleq	e83458 <_Min_Heap_Size+0xe82c58>
    1448:	0b39053b 	bleq	e4293c <_Min_Heap_Size+0xe4213c>
    144c:	06021349 	streq	r1, [r2], -r9, asr #6
    1450:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1454:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    1458:	0b3a0e03 	bleq	e84c6c <_Min_Heap_Size+0xe8446c>
    145c:	0b39053b 	bleq	e42950 <_Min_Heap_Size+0xe42150>
    1460:	13490c27 	movtne	r0, #39975	; 0x9c27
    1464:	01120111 	tsteq	r2, r1, lsl r1
    1468:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    146c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1470:	00341e00 	eorseq	r1, r4, r0, lsl #28
    1474:	0b3a0e03 	bleq	e84c88 <_Min_Heap_Size+0xe84488>
    1478:	0b39053b 	bleq	e4296c <_Min_Heap_Size+0xe4216c>
    147c:	0a021349 	beq	861a8 <_Min_Heap_Size+0x859a8>
    1480:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    1484:	3a0e0301 	bcc	382090 <_Min_Heap_Size+0x381890>
    1488:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    148c:	110c270b 	tstne	ip, fp, lsl #14
    1490:	40011201 	andmi	r1, r1, r1, lsl #4
    1494:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1498:	00001301 	andeq	r1, r0, r1, lsl #6
    149c:	03000520 	movweq	r0, #1312	; 0x520
    14a0:	3b0b3a0e 	blcc	2cfce0 <_Min_Heap_Size+0x2cf4e0>
    14a4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    14a8:	000a0213 	andeq	r0, sl, r3, lsl r2
    14ac:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    14b0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    14b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    14b8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    14bc:	01111349 	tsteq	r1, r9, asr #6
    14c0:	0a400112 	beq	1001910 <_Min_Heap_Size+0x1001110>
    14c4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    14c8:	22000013 	andcs	r0, r0, #19
    14cc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 141c <_Min_Heap_Size+0xc1c>
    14d0:	0b3a0e03 	bleq	e84ce4 <_Min_Heap_Size+0xe844e4>
    14d4:	0b39053b 	bleq	e429c8 <_Min_Heap_Size+0xe421c8>
    14d8:	01110c27 	tsteq	r1, r7, lsr #24
    14dc:	06400112 			; <UNDEFINED> instruction: 0x06400112
    14e0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    14e4:	23000013 	movwcs	r0, #19
    14e8:	01018289 	smlabbeq	r1, r9, r2, r8
    14ec:	13010111 	movwne	r0, #4369	; 0x1111
    14f0:	8a240000 	bhi	9014f8 <_Min_Heap_Size+0x900cf8>
    14f4:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    14f8:	0a42910a 	beq	10a5928 <_Min_Heap_Size+0x10a5128>
    14fc:	89250000 	stmdbhi	r5!, {}	; <UNPREDICTABLE>
    1500:	11010182 	smlabbne	r1, r2, r1, r0
    1504:	26000001 	strcs	r0, [r0], -r1
    1508:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1458 <_Min_Heap_Size+0xc58>
    150c:	0b3a0e03 	bleq	e84d20 <_Min_Heap_Size+0xe84520>
    1510:	0b39053b 	bleq	e42a04 <_Min_Heap_Size+0xe42204>
    1514:	13490c27 	movtne	r0, #39975	; 0x9c27
    1518:	01120111 	tsteq	r2, r1, lsl r1
    151c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1520:	0013010c 	andseq	r0, r3, ip, lsl #2
    1524:	00342700 	eorseq	r2, r4, r0, lsl #14
    1528:	0b3a0e03 	bleq	e84d3c <_Min_Heap_Size+0xe8453c>
    152c:	0b39053b 	bleq	e42a20 <_Min_Heap_Size+0xe42220>
    1530:	0b1c1349 	bleq	70625c <_Min_Heap_Size+0x705a5c>
    1534:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
    1538:	11000182 	smlabbne	r0, r2, r1, r0
    153c:	00133101 	andseq	r3, r3, r1, lsl #2
    1540:	82892900 	addhi	r2, r9, #0, 18
    1544:	01110101 	tsteq	r1, r1, lsl #2
    1548:	00001331 	andeq	r1, r0, r1, lsr r3
    154c:	0182892a 	orreq	r8, r2, sl, lsr #18
    1550:	31011101 	tstcc	r1, r1, lsl #2
    1554:	00130113 	andseq	r0, r3, r3, lsl r1
    1558:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    155c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1560:	0b3b0b3a 	bleq	ec4250 <_Min_Heap_Size+0xec3a50>
    1564:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1568:	01111349 	tsteq	r1, r9, asr #6
    156c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1570:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1574:	2c000013 	stccs	0, cr0, [r0], {19}
    1578:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    157c:	0b3b0b3a 	bleq	ec426c <_Min_Heap_Size+0xec3a6c>
    1580:	13490b39 	movtne	r0, #39737	; 0x9b39
    1584:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1588:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    158c:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1590:	0b3b0b3a 	bleq	ec4280 <_Min_Heap_Size+0xec3a80>
    1594:	13490b39 	movtne	r0, #39737	; 0x9b39
    1598:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    159c:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    15a0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    15a4:	0b3b0b3a 	bleq	ec4294 <_Min_Heap_Size+0xec3a94>
    15a8:	13490b39 	movtne	r0, #39737	; 0x9b39
    15ac:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    15b0:	2f000006 	svccs	0x00000006
    15b4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1504 <_Min_Heap_Size+0xd04>
    15b8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    15bc:	3a0e030e 	bcc	3821fc <_Min_Heap_Size+0x3819fc>
    15c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15c4:	3000000b 	andcc	r0, r0, fp
    15c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1518 <_Min_Heap_Size+0xd18>
    15cc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    15d0:	3a0e030e 	bcc	382210 <_Min_Heap_Size+0x381a10>
    15d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15d8:	0000000b 	andeq	r0, r0, fp
    15dc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    15e0:	030b130e 	movweq	r1, #45838	; 0xb30e
    15e4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    15e8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    15ec:	00061001 	andeq	r1, r6, r1
    15f0:	01040200 	mrseq	r0, R12_usr
    15f4:	0b0b0b3e 	bleq	2c42f4 <_Min_Heap_Size+0x2c3af4>
    15f8:	0b3a1349 	bleq	e86324 <_Min_Heap_Size+0xe85b24>
    15fc:	0b390b3b 	bleq	e442f0 <_Min_Heap_Size+0xe43af0>
    1600:	00001301 	andeq	r1, r0, r1, lsl #6
    1604:	03002803 	movweq	r2, #2051	; 0x803
    1608:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    160c:	00280400 	eoreq	r0, r8, r0, lsl #8
    1610:	0b1c0e03 	bleq	704e24 <_Min_Heap_Size+0x704624>
    1614:	24050000 	strcs	r0, [r5], #-0
    1618:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    161c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1620:	00160600 	andseq	r0, r6, r0, lsl #12
    1624:	0b3a0e03 	bleq	e84e38 <_Min_Heap_Size+0xe84638>
    1628:	0b390b3b 	bleq	e4431c <_Min_Heap_Size+0xe43b1c>
    162c:	00001349 	andeq	r1, r0, r9, asr #6
    1630:	0b002407 	bleq	a654 <_Min_Heap_Size+0x9e54>
    1634:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1638:	08000008 	stmdaeq	r0, {r3}
    163c:	13490035 	movtne	r0, #36917	; 0x9035
    1640:	26090000 	strcs	r0, [r9], -r0
    1644:	00134900 	andseq	r4, r3, r0, lsl #18
    1648:	01130a00 	tsteq	r3, r0, lsl #20
    164c:	0b3a050b 	bleq	e82a80 <_Min_Heap_Size+0xe82280>
    1650:	0b39053b 	bleq	e42b44 <_Min_Heap_Size+0xe42344>
    1654:	00001301 	andeq	r1, r0, r1, lsl #6
    1658:	03000d0b 	movweq	r0, #3339	; 0xd0b
    165c:	3b0b3a0e 	blcc	2cfe9c <_Min_Heap_Size+0x2cf69c>
    1660:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1664:	000a3813 	andeq	r3, sl, r3, lsl r8
    1668:	000d0c00 	andeq	r0, sp, r0, lsl #24
    166c:	0b3a0803 	bleq	e83680 <_Min_Heap_Size+0xe82e80>
    1670:	0b39053b 	bleq	e42b64 <_Min_Heap_Size+0xe42364>
    1674:	0a381349 	beq	e063a0 <_Min_Heap_Size+0xe05ba0>
    1678:	010d0000 	mrseq	r0, (UNDEF: 13)
    167c:	01134901 	tsteq	r3, r1, lsl #18
    1680:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1684:	13490021 	movtne	r0, #36897	; 0x9021
    1688:	00000b2f 	andeq	r0, r0, pc, lsr #22
    168c:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    1690:	00052f13 	andeq	r2, r5, r3, lsl pc
    1694:	00161000 	andseq	r1, r6, r0
    1698:	0b3a0e03 	bleq	e84eac <_Min_Heap_Size+0xe846ac>
    169c:	0b39053b 	bleq	e42b90 <_Min_Heap_Size+0xe42390>
    16a0:	00001349 	andeq	r1, r0, r9, asr #6
    16a4:	0b011311 	bleq	462f0 <_Min_Heap_Size+0x45af0>
    16a8:	3b0b3a0b 	blcc	2cfedc <_Min_Heap_Size+0x2cf6dc>
    16ac:	010b3905 	tsteq	fp, r5, lsl #18
    16b0:	12000013 	andne	r0, r0, #19
    16b4:	08030028 	stmdaeq	r3, {r3, r5}
    16b8:	00000b1c 	andeq	r0, r0, ip, lsl fp
    16bc:	0b011313 	bleq	46310 <_Min_Heap_Size+0x45b10>
    16c0:	3b0b3a0b 	blcc	2cfef4 <_Min_Heap_Size+0x2cf6f4>
    16c4:	010b390b 	tsteq	fp, fp, lsl #18
    16c8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    16cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    16d0:	0b3b0b3a 	bleq	ec43c0 <_Min_Heap_Size+0xec3bc0>
    16d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    16d8:	00000a38 	andeq	r0, r0, r8, lsr sl
    16dc:	3f002e15 	svccc	0x00002e15
    16e0:	3a0e030c 	bcc	382318 <_Min_Heap_Size+0x381b18>
    16e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16e8:	110c270b 	tstne	ip, fp, lsl #14
    16ec:	40011201 	andmi	r1, r1, r1, lsl #4
    16f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    16f4:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    16f8:	030c3f01 	movweq	r3, #52993	; 0xcf01
    16fc:	3b0b3a0e 	blcc	2cff3c <_Min_Heap_Size+0x2cf73c>
    1700:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1704:	1201110c 	andne	r1, r1, #12, 2
    1708:	97064001 	strls	r4, [r6, -r1]
    170c:	13010c42 	movwne	r0, #7234	; 0x1c42
    1710:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    1714:	11000182 	smlabbne	r0, r2, r1, r0
    1718:	00133101 	andseq	r3, r3, r1, lsl #2
    171c:	00051800 	andeq	r1, r5, r0, lsl #16
    1720:	0b3a0e03 	bleq	e84f34 <_Min_Heap_Size+0xe84734>
    1724:	0b39053b 	bleq	e42c18 <_Min_Heap_Size+0xe42418>
    1728:	06021349 	streq	r1, [r2], -r9, asr #6
    172c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1730:	82891900 	addhi	r1, r9, #0, 18
    1734:	01110101 	tsteq	r1, r1, lsl #2
    1738:	00001331 	andeq	r1, r0, r1, lsr r3
    173c:	01828a1a 	orreq	r8, r2, sl, lsl sl
    1740:	910a0200 	mrsls	r0, R10_fiq
    1744:	00000a42 	andeq	r0, r0, r2, asr #20
    1748:	3f012e1b 	svccc	0x00012e1b
    174c:	3a0e030c 	bcc	382384 <_Min_Heap_Size+0x381b84>
    1750:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1754:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1758:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    175c:	97064001 	strls	r4, [r6, -r1]
    1760:	13010c42 	movwne	r0, #7234	; 0x1c42
    1764:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
    1768:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    176c:	0b42b801 	bleq	10af778 <_Min_Heap_Size+0x10aef78>
    1770:	0b580655 	bleq	16030cc <_Min_Heap_Size+0x16028cc>
    1774:	0b570559 	bleq	15c2ce0 <_Min_Heap_Size+0x15c24e0>
    1778:	00001301 	andeq	r1, r0, r1, lsl #6
    177c:	3100051d 	tstcc	r0, sp, lsl r5
    1780:	b7060213 	smladlt	r6, r3, r2, r0
    1784:	00000642 	andeq	r0, r0, r2, asr #12
    1788:	31011d1e 	tstcc	r1, lr, lsl sp
    178c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1790:	01110b42 	tsteq	r1, r2, asr #22
    1794:	0b580112 	bleq	1601be4 <_Min_Heap_Size+0x16013e4>
    1798:	0b570559 	bleq	15c2d04 <_Min_Heap_Size+0x15c2504>
    179c:	00001301 	andeq	r1, r0, r1, lsl #6
    17a0:	55010b1f 	strpl	r0, [r1, #-2847]	; 0xfffff4e1
    17a4:	20000006 	andcs	r0, r0, r6
    17a8:	13310034 	teqne	r1, #52	; 0x34
    17ac:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    17b0:	21000006 	tstcs	r0, r6
    17b4:	0b0b000f 	bleq	2c17f8 <_Min_Heap_Size+0x2c0ff8>
    17b8:	00001349 	andeq	r1, r0, r9, asr #6
    17bc:	3f012e22 	svccc	0x00012e22
    17c0:	3a0e030c 	bcc	3823f8 <_Min_Heap_Size+0x381bf8>
    17c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    17cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    17d0:	970a4001 	strls	r4, [sl, -r1]
    17d4:	13010c42 	movwne	r0, #7234	; 0x1c42
    17d8:	1d230000 	stcne	0, cr0, [r3, #-0]
    17dc:	52133100 	andspl	r3, r3, #0, 2
    17e0:	0b42b801 	bleq	10af7ec <_Min_Heap_Size+0x10aefec>
    17e4:	01120111 	tsteq	r2, r1, lsl r1
    17e8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    17ec:	00000b57 	andeq	r0, r0, r7, asr fp
    17f0:	01828924 	orreq	r8, r2, r4, lsr #18
    17f4:	31011101 	tstcc	r1, r1, lsl #2
    17f8:	00130113 	andseq	r0, r3, r3, lsl r1
    17fc:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    1800:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1804:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1808:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    180c:	01120111 	tsteq	r2, r1, lsl r1
    1810:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1814:	0013010c 	andseq	r0, r3, ip, lsl #2
    1818:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    181c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1820:	0b3b0b3a 	bleq	ec4510 <_Min_Heap_Size+0xec3d10>
    1824:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1828:	01111349 	tsteq	r1, r9, asr #6
    182c:	0a400112 	beq	1001c7c <_Min_Heap_Size+0x100147c>
    1830:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1834:	27000013 	smladcs	r0, r3, r0, r0
    1838:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    183c:	0b3b0b3a 	bleq	ec452c <_Min_Heap_Size+0xec3d2c>
    1840:	13490b39 	movtne	r0, #39737	; 0x9b39
    1844:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1848:	28000006 	stmdacs	r0, {r1, r2}
    184c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1850:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1854:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1858:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    185c:	000b570b 	andeq	r5, fp, fp, lsl #14
    1860:	011d2900 	tsteq	sp, r0, lsl #18
    1864:	01521331 	cmpeq	r2, r1, lsr r3
    1868:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    186c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1870:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1874:	2a00000b 	bcs	18a8 <_Min_Heap_Size+0x10a8>
    1878:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 17c8 <_Min_Heap_Size+0xfc8>
    187c:	0b3a0e03 	bleq	e85090 <_Min_Heap_Size+0xe84890>
    1880:	0b390b3b 	bleq	e44574 <_Min_Heap_Size+0xe43d74>
    1884:	01110c27 	tsteq	r1, r7, lsr #24
    1888:	0a400112 	beq	1001cd8 <_Min_Heap_Size+0x10014d8>
    188c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1890:	2b000013 	blcs	18e4 <_Min_Heap_Size+0x10e4>
    1894:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 17e4 <_Min_Heap_Size+0xfe4>
    1898:	0b3a0e03 	bleq	e850ac <_Min_Heap_Size+0xe848ac>
    189c:	0b390b3b 	bleq	e44590 <_Min_Heap_Size+0xe43d90>
    18a0:	01110c27 	tsteq	r1, r7, lsr #24
    18a4:	06400112 			; <UNDEFINED> instruction: 0x06400112
    18a8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    18ac:	2c000013 	stccs	0, cr0, [r0], {19}
    18b0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    18b4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    18b8:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    18bc:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    18c0:	010b570b 	tsteq	fp, fp, lsl #14
    18c4:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    18c8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    18cc:	0b3b0b3a 	bleq	ec45bc <_Min_Heap_Size+0xec3dbc>
    18d0:	13490b39 	movtne	r0, #39737	; 0x9b39
    18d4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    18d8:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    18dc:	1331001d 	teqne	r1, #29
    18e0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    18e4:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    18e8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    18ec:	000b570b 	andeq	r5, fp, fp, lsl #14
    18f0:	011d2f00 	tsteq	sp, r0, lsl #30
    18f4:	01521331 	cmpeq	r2, r1, lsr r3
    18f8:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    18fc:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    1900:	010b570b 	tsteq	fp, fp, lsl #14
    1904:	30000013 	andcc	r0, r0, r3, lsl r0
    1908:	0e03012e 	adfeqsp	f0, f3, #0.5
    190c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1910:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1914:	0b201349 	bleq	806640 <_Min_Heap_Size+0x805e40>
    1918:	00001301 	andeq	r1, r0, r1, lsl #6
    191c:	03000531 	movweq	r0, #1329	; 0x531
    1920:	3b0b3a0e 	blcc	2d0160 <_Min_Heap_Size+0x2cf960>
    1924:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1928:	32000013 	andcc	r0, r0, #19
    192c:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    1930:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1934:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1938:	200c0187 	andcs	r0, ip, r7, lsl #3
    193c:	3300000b 	movwcc	r0, #11
    1940:	0e03012e 	adfeqsp	f0, f3, #0.5
    1944:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1948:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    194c:	13010b20 	movwne	r0, #6944	; 0x1b20
    1950:	34340000 	ldrtcc	r0, [r4], #-0
    1954:	3a0e0300 	bcc	38255c <_Min_Heap_Size+0x381d5c>
    1958:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    195c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1960:	002e3500 	eoreq	r3, lr, r0, lsl #10
    1964:	0b3a0e03 	bleq	e85178 <_Min_Heap_Size+0xe84978>
    1968:	0b39053b 	bleq	e42e5c <_Min_Heap_Size+0xe4265c>
    196c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1970:	00000b20 	andeq	r0, r0, r0, lsr #22
    1974:	03002e36 	movweq	r2, #3638	; 0xe36
    1978:	3b0b3a0e 	blcc	2d01b8 <_Min_Heap_Size+0x2cf9b8>
    197c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1980:	000b200c 	andeq	r2, fp, ip
    1984:	002e3700 	eoreq	r3, lr, r0, lsl #14
    1988:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    198c:	030e4087 	movweq	r4, #57479	; 0xe087
    1990:	3b0b3a0e 	blcc	2d01d0 <_Min_Heap_Size+0x2cf9d0>
    1994:	000b3905 	andeq	r3, fp, r5, lsl #18
    1998:	11010000 	mrsne	r0, (UNDEF: 1)
    199c:	130e2501 	movwne	r2, #58625	; 0xe501
    19a0:	1b0e030b 	blne	3825d4 <_Min_Heap_Size+0x381dd4>
    19a4:	1106550e 	tstne	r6, lr, lsl #10
    19a8:	10015201 	andne	r5, r1, r1, lsl #4
    19ac:	02000006 	andeq	r0, r0, #6
    19b0:	0b3e0104 	bleq	f81dc8 <_Min_Heap_Size+0xf815c8>
    19b4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    19b8:	0b3b0b3a 	bleq	ec46a8 <_Min_Heap_Size+0xec3ea8>
    19bc:	13010b39 	movwne	r0, #6969	; 0x1b39
    19c0:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    19c4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    19c8:	0400000d 	streq	r0, [r0], #-13
    19cc:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    19d0:	00000b1c 	andeq	r0, r0, ip, lsl fp
    19d4:	0b002405 	bleq	a9f0 <_Min_Heap_Size+0xa1f0>
    19d8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    19dc:	0600000e 	streq	r0, [r0], -lr
    19e0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    19e4:	0b3b0b3a 	bleq	ec46d4 <_Min_Heap_Size+0xec3ed4>
    19e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    19ec:	24070000 	strcs	r0, [r7], #-0
    19f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    19f4:	0008030b 	andeq	r0, r8, fp, lsl #6
    19f8:	00350800 	eorseq	r0, r5, r0, lsl #16
    19fc:	00001349 	andeq	r1, r0, r9, asr #6
    1a00:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
    1a04:	0a000013 	beq	1a58 <_Min_Heap_Size+0x1258>
    1a08:	0b0b0113 	bleq	2c1e5c <_Min_Heap_Size+0x2c165c>
    1a0c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1a10:	13010b39 	movwne	r0, #6969	; 0x1b39
    1a14:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    1a18:	3a0e0300 	bcc	382620 <_Min_Heap_Size+0x381e20>
    1a1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a20:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1a24:	0c00000a 	stceq	0, cr0, [r0], {10}
    1a28:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1a2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1a30:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a34:	00000a38 	andeq	r0, r0, r8, lsr sl
    1a38:	0300160d 	movweq	r1, #1549	; 0x60d
    1a3c:	3b0b3a0e 	blcc	2d027c <_Min_Heap_Size+0x2cfa7c>
    1a40:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1a44:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1a48:	13490101 	movtne	r0, #37121	; 0x9101
    1a4c:	00001301 	andeq	r1, r0, r1, lsl #6
    1a50:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    1a54:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1a58:	00341000 	eorseq	r1, r4, r0
    1a5c:	0b3a0e03 	bleq	e85270 <_Min_Heap_Size+0xe84a70>
    1a60:	0b390b3b 	bleq	e44754 <_Min_Heap_Size+0xe43f54>
    1a64:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1948 <_Min_Heap_Size+0x1148>
    1a68:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1a6c:	47003411 	smladmi	r0, r1, r4, r3
    1a70:	3b0b3a13 	blcc	2d02c4 <_Min_Heap_Size+0x2cfac4>
    1a74:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    1a78:	1200000a 	andne	r0, r0, #10
    1a7c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19cc <_Min_Heap_Size+0x11cc>
    1a80:	0b3a0e03 	bleq	e85294 <_Min_Heap_Size+0xe84a94>
    1a84:	0b39053b 	bleq	e42f78 <_Min_Heap_Size+0xe42778>
    1a88:	13490c27 	movtne	r0, #39975	; 0x9c27
    1a8c:	01120111 	tsteq	r2, r1, lsl r1
    1a90:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1a94:	1300000c 	movwne	r0, #12
    1a98:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19e8 <_Min_Heap_Size+0x11e8>
    1a9c:	0b3a0e03 	bleq	e852b0 <_Min_Heap_Size+0xe84ab0>
    1aa0:	0b39053b 	bleq	e42f94 <_Min_Heap_Size+0xe42794>
    1aa4:	01110c27 	tsteq	r1, r7, lsr #24
    1aa8:	0a400112 	beq	1001ef8 <_Min_Heap_Size+0x10016f8>
    1aac:	000c4297 	muleq	ip, r7, r2
    1ab0:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    1ab4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1ab8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1abc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1ac0:	01120111 	tsteq	r2, r1, lsl r1
    1ac4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1ac8:	0013010c 	andseq	r0, r3, ip, lsl #2
    1acc:	00051500 	andeq	r1, r5, r0, lsl #10
    1ad0:	0b3a0e03 	bleq	e852e4 <_Min_Heap_Size+0xe84ae4>
    1ad4:	0b39053b 	bleq	e42fc8 <_Min_Heap_Size+0xe427c8>
    1ad8:	06021349 	streq	r1, [r2], -r9, asr #6
    1adc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1ae0:	00341600 	eorseq	r1, r4, r0, lsl #12
    1ae4:	0b3a0e03 	bleq	e852f8 <_Min_Heap_Size+0xe84af8>
    1ae8:	0b39053b 	bleq	e42fdc <_Min_Heap_Size+0xe427dc>
    1aec:	06021349 	streq	r1, [r2], -r9, asr #6
    1af0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1af4:	82891700 	addhi	r1, r9, #0, 14
    1af8:	01110001 	tsteq	r1, r1
    1afc:	00001331 	andeq	r1, r0, r1, lsr r3
    1b00:	3f012e18 	svccc	0x00012e18
    1b04:	3a0e030c 	bcc	38273c <_Min_Heap_Size+0x381f3c>
    1b08:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b0c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1b10:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1b14:	97064001 	strls	r4, [r6, -r1]
    1b18:	13010c42 	movwne	r0, #7234	; 0x1c42
    1b1c:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    1b20:	11010182 	smlabbne	r1, r2, r1, r0
    1b24:	01133101 	tsteq	r3, r1, lsl #2
    1b28:	1a000013 	bne	1b7c <_Min_Heap_Size+0x137c>
    1b2c:	0001828a 	andeq	r8, r1, sl, lsl #5
    1b30:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1b34:	1b00000a 	blne	1b64 <_Min_Heap_Size+0x1364>
    1b38:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1a88 <_Min_Heap_Size+0x1288>
    1b3c:	0b3a0e03 	bleq	e85350 <_Min_Heap_Size+0xe84b50>
    1b40:	0b390b3b 	bleq	e44834 <_Min_Heap_Size+0xe44034>
    1b44:	13490c27 	movtne	r0, #39975	; 0x9c27
    1b48:	01120111 	tsteq	r2, r1, lsl r1
    1b4c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1b50:	0013010c 	andseq	r0, r3, ip, lsl #2
    1b54:	00051c00 	andeq	r1, r5, r0, lsl #24
    1b58:	0b3a0e03 	bleq	e8536c <_Min_Heap_Size+0xe84b6c>
    1b5c:	0b390b3b 	bleq	e44850 <_Min_Heap_Size+0xe44050>
    1b60:	06021349 	streq	r1, [r2], -r9, asr #6
    1b64:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1b68:	82891d00 	addhi	r1, r9, #0, 26
    1b6c:	01110101 	tsteq	r1, r1, lsl #2
    1b70:	00001331 	andeq	r1, r0, r1, lsr r3
    1b74:	3f002e1e 	svccc	0x00002e1e
    1b78:	3a0e030c 	bcc	3827b0 <_Min_Heap_Size+0x381fb0>
    1b7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b80:	110c270b 	tstne	ip, fp, lsl #14
    1b84:	40011201 	andmi	r1, r1, r1, lsl #4
    1b88:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1b8c:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    1b90:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1b94:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1b98:	0b3a0e03 	bleq	e853ac <_Min_Heap_Size+0xe84bac>
    1b9c:	0b39053b 	bleq	e43090 <_Min_Heap_Size+0xe42890>
    1ba0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ba4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1ba8:	0e030b13 	vmoveq.32	d3[0], r0
    1bac:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1bb0:	01520111 	cmpeq	r2, r1, lsl r1
    1bb4:	00000610 	andeq	r0, r0, r0, lsl r6
    1bb8:	0b002402 	bleq	abc8 <_Min_Heap_Size+0xa3c8>
    1bbc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1bc0:	0300000e 	movweq	r0, #14
    1bc4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1bc8:	0b3b0b3a 	bleq	ec48b8 <_Min_Heap_Size+0xec40b8>
    1bcc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bd0:	24040000 	strcs	r0, [r4], #-0
    1bd4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1bd8:	0008030b 	andeq	r0, r8, fp, lsl #6
    1bdc:	00350500 	eorseq	r0, r5, r0, lsl #10
    1be0:	00001349 	andeq	r1, r0, r9, asr #6
    1be4:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    1be8:	07000013 	smladeq	r0, r3, r0, r0
    1bec:	0b0b0113 	bleq	2c2040 <_Min_Heap_Size+0x2c1840>
    1bf0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1bf4:	13010b39 	movwne	r0, #6969	; 0x1b39
    1bf8:	0d080000 	stceq	0, cr0, [r8, #-0]
    1bfc:	3a0e0300 	bcc	382804 <_Min_Heap_Size+0x382004>
    1c00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c04:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1c08:	0900000a 	stmdbeq	r0, {r1, r3}
    1c0c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1c10:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1c14:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c18:	00000a38 	andeq	r0, r0, r8, lsr sl
    1c1c:	4901010a 	stmdbmi	r1, {r1, r3, r8}
    1c20:	00130113 	andseq	r0, r3, r3, lsl r1
    1c24:	00210b00 	eoreq	r0, r1, r0, lsl #22
    1c28:	0b2f1349 	bleq	bc6954 <_Min_Heap_Size+0xbc6154>
    1c2c:	160c0000 	strne	r0, [ip], -r0
    1c30:	3a0e0300 	bcc	382838 <_Min_Heap_Size+0x382038>
    1c34:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c38:	0013490b 	andseq	r4, r3, fp, lsl #18
    1c3c:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1c40:	0b3a0e03 	bleq	e85454 <_Min_Heap_Size+0xe84c54>
    1c44:	0b390b3b 	bleq	e44938 <_Min_Heap_Size+0xe44138>
    1c48:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1b2c <_Min_Heap_Size+0x132c>
    1c4c:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1c50:	4700340e 	strmi	r3, [r0, -lr, lsl #8]
    1c54:	3b0b3a13 	blcc	2d04a8 <_Min_Heap_Size+0x2cfca8>
    1c58:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    1c5c:	0f00000a 	svceq	0x0000000a
    1c60:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1bb0 <_Min_Heap_Size+0x13b0>
    1c64:	0b3a0e03 	bleq	e85478 <_Min_Heap_Size+0xe84c78>
    1c68:	0b390b3b 	bleq	e4495c <_Min_Heap_Size+0xe4415c>
    1c6c:	01110c27 	tsteq	r1, r7, lsr #24
    1c70:	0a400112 	beq	10020c0 <_Min_Heap_Size+0x10018c0>
    1c74:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1c78:	10000013 	andne	r0, r0, r3, lsl r0
    1c7c:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1c80:	0b3b0b3a 	bleq	ec4970 <_Min_Heap_Size+0xec4170>
    1c84:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c88:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1c8c:	11000006 	tstne	r0, r6
    1c90:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1c94:	0b3b0b3a 	bleq	ec4984 <_Min_Heap_Size+0xec4184>
    1c98:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c9c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1ca0:	12000006 	andne	r0, r0, #6
    1ca4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1bf4 <_Min_Heap_Size+0x13f4>
    1ca8:	0b3a0e03 	bleq	e854bc <_Min_Heap_Size+0xe84cbc>
    1cac:	0b390b3b 	bleq	e449a0 <_Min_Heap_Size+0xe441a0>
    1cb0:	01110c27 	tsteq	r1, r7, lsr #24
    1cb4:	0a400112 	beq	1002104 <_Min_Heap_Size+0x1001904>
    1cb8:	000c4297 	muleq	ip, r7, r2
    1cbc:	11010000 	mrsne	r0, (UNDEF: 1)
    1cc0:	130e2501 	movwne	r2, #58625	; 0xe501
    1cc4:	1b0e030b 	blne	3828f8 <_Min_Heap_Size+0x3820f8>
    1cc8:	1106550e 	tstne	r6, lr, lsl #10
    1ccc:	10015201 	andne	r5, r1, r1, lsl #4
    1cd0:	02000006 	andeq	r0, r0, #6
    1cd4:	0b0b0024 	bleq	2c1d6c <_Min_Heap_Size+0x2c156c>
    1cd8:	0e030b3e 	vmoveq.16	d3[0], r0
    1cdc:	16030000 	strne	r0, [r3], -r0
    1ce0:	3a0e0300 	bcc	3828e8 <_Min_Heap_Size+0x3820e8>
    1ce4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ce8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1cec:	00240400 	eoreq	r0, r4, r0, lsl #8
    1cf0:	0b3e0b0b 	bleq	f84924 <_Min_Heap_Size+0xf84124>
    1cf4:	00000803 	andeq	r0, r0, r3, lsl #16
    1cf8:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1cfc:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1d00:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1d04:	0b3a0b0b 	bleq	e84938 <_Min_Heap_Size+0xe84138>
    1d08:	0b390b3b 	bleq	e449fc <_Min_Heap_Size+0xe441fc>
    1d0c:	00001301 	andeq	r1, r0, r1, lsl #6
    1d10:	03000d07 	movweq	r0, #3335	; 0xd07
    1d14:	3b0b3a08 	blcc	2d053c <_Min_Heap_Size+0x2cfd3c>
    1d18:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d1c:	000a3813 	andeq	r3, sl, r3, lsl r8
    1d20:	000d0800 	andeq	r0, sp, r0, lsl #16
    1d24:	0b3a0e03 	bleq	e85538 <_Min_Heap_Size+0xe84d38>
    1d28:	0b390b3b 	bleq	e44a1c <_Min_Heap_Size+0xe4421c>
    1d2c:	0a381349 	beq	e06a58 <_Min_Heap_Size+0xe06258>
    1d30:	34090000 	strcc	r0, [r9], #-0
    1d34:	3a0e0300 	bcc	38293c <_Min_Heap_Size+0x38213c>
    1d38:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d3c:	3f13490b 	svccc	0x0013490b
    1d40:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1d44:	00340a00 	eorseq	r0, r4, r0, lsl #20
    1d48:	0b3a0e03 	bleq	e8555c <_Min_Heap_Size+0xe84d5c>
    1d4c:	0b390b3b 	bleq	e44a40 <_Min_Heap_Size+0xe44240>
    1d50:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1c34 <_Min_Heap_Size+0x1434>
    1d54:	00000a02 	andeq	r0, r0, r2, lsl #20
    1d58:	3f002e0b 	svccc	0x00002e0b
    1d5c:	3a0e030c 	bcc	382994 <_Min_Heap_Size+0x382194>
    1d60:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d64:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1d68:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d6c:	970a4001 	strls	r4, [sl, -r1]
    1d70:	00000c42 	andeq	r0, r0, r2, asr #24
    1d74:	3f012e0c 	svccc	0x00012e0c
    1d78:	3a0e030c 	bcc	3829b0 <_Min_Heap_Size+0x3821b0>
    1d7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d80:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1d84:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d88:	970a4001 	strls	r4, [sl, -r1]
    1d8c:	13010c42 	movwne	r0, #7234	; 0x1c42
    1d90:	1d0d0000 	stcne	0, cr0, [sp, #-0]
    1d94:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1d98:	0b42b801 	bleq	10afda4 <_Min_Heap_Size+0x10af5a4>
    1d9c:	01120111 	tsteq	r2, r1, lsl r1
    1da0:	0b590b58 	bleq	1644b08 <_Min_Heap_Size+0x1644308>
    1da4:	00000b57 	andeq	r0, r0, r7, asr fp
    1da8:	3100340e 	tstcc	r0, lr, lsl #8
    1dac:	b7060213 	smladlt	r6, r3, r2, r0
    1db0:	00000642 	andeq	r0, r0, r2, asr #12
    1db4:	3f012e0f 	svccc	0x00012e0f
    1db8:	3a0e030c 	bcc	3829f0 <_Min_Heap_Size+0x3821f0>
    1dbc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1dc0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1dc4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1dc8:	97064001 	strls	r4, [r6, -r1]
    1dcc:	13010c42 	movwne	r0, #7234	; 0x1c42
    1dd0:	05100000 	ldreq	r0, [r0, #-0]
    1dd4:	3a0e0300 	bcc	3829dc <_Min_Heap_Size+0x3821dc>
    1dd8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ddc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1de0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1de4:	34110000 	ldrcc	r0, [r1], #-0
    1de8:	3a0e0300 	bcc	3829f0 <_Min_Heap_Size+0x3821f0>
    1dec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1df0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1df4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1df8:	34120000 	ldrcc	r0, [r2], #-0
    1dfc:	3a080300 	bcc	202a04 <_Min_Heap_Size+0x202204>
    1e00:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e04:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1e08:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1e0c:	89130000 	ldmdbhi	r3, {}	; <UNPREDICTABLE>
    1e10:	11010182 	smlabbne	r1, r2, r1, r0
    1e14:	01133101 	tsteq	r3, r1, lsl #2
    1e18:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1e1c:	0001828a 	andeq	r8, r1, sl, lsl #5
    1e20:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1e24:	1500000a 	strne	r0, [r0, #-10]
    1e28:	00018289 	andeq	r8, r1, r9, lsl #5
    1e2c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1e30:	0f160000 	svceq	0x00160000
    1e34:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1e38:	17000013 	smladne	r0, r3, r0, r0
    1e3c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1d8c <_Min_Heap_Size+0x158c>
    1e40:	0b3a0e03 	bleq	e85654 <_Min_Heap_Size+0xe84e54>
    1e44:	0b390b3b 	bleq	e44b38 <_Min_Heap_Size+0xe44338>
    1e48:	01110c27 	tsteq	r1, r7, lsr #24
    1e4c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1e50:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e54:	18000013 	stmdane	r0, {r0, r1, r4}
    1e58:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e5c:	0b3b0b3a 	bleq	ec4b4c <_Min_Heap_Size+0xec434c>
    1e60:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e64:	00000a02 	andeq	r0, r0, r2, lsl #20
    1e68:	01828919 	orreq	r8, r2, r9, lsl r9
    1e6c:	31011101 	tstcc	r1, r1, lsl #2
    1e70:	1a000013 	bne	1ec4 <_Min_Heap_Size+0x16c4>
    1e74:	13490101 	movtne	r0, #37121	; 0x9101
    1e78:	00001301 	andeq	r1, r0, r1, lsl #6
    1e7c:	4900211b 	stmdbmi	r0, {r0, r1, r3, r4, r8, sp}
    1e80:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1e84:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    1e88:	0b3a0e03 	bleq	e8569c <_Min_Heap_Size+0xe84e9c>
    1e8c:	0b390b3b 	bleq	e44b80 <_Min_Heap_Size+0xe44380>
    1e90:	01110c27 	tsteq	r1, r7, lsr #24
    1e94:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1e98:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e9c:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    1ea0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1df0 <_Min_Heap_Size+0x15f0>
    1ea4:	0b3a0e03 	bleq	e856b8 <_Min_Heap_Size+0xe84eb8>
    1ea8:	0b390b3b 	bleq	e44b9c <_Min_Heap_Size+0xe4439c>
    1eac:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	; 0xffffff64
    1eb0:	00001301 	andeq	r1, r0, r1, lsl #6
    1eb4:	4900051e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl}
    1eb8:	1f000013 	svcne	0x00000013
    1ebc:	0e03012e 	adfeqsp	f0, f3, #0.5
    1ec0:	0b3b0b3a 	bleq	ec4bb0 <_Min_Heap_Size+0xec43b0>
    1ec4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1ec8:	01111349 	tsteq	r1, r9, asr #6
    1ecc:	0a400112 	beq	100231c <_Min_Heap_Size+0x1001b1c>
    1ed0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1ed4:	20000013 	andcs	r0, r0, r3, lsl r0
    1ed8:	08030005 	stmdaeq	r3, {r0, r2}
    1edc:	0b3b0b3a 	bleq	ec4bcc <_Min_Heap_Size+0xec43cc>
    1ee0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ee4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1ee8:	21000006 	tstcs	r0, r6
    1eec:	0e03012e 	adfeqsp	f0, f3, #0.5
    1ef0:	0b3b0b3a 	bleq	ec4be0 <_Min_Heap_Size+0xec43e0>
    1ef4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1ef8:	01111349 	tsteq	r1, r9, asr #6
    1efc:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1f00:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1f04:	22000013 	andcs	r0, r0, #19
    1f08:	0111010b 	tsteq	r1, fp, lsl #2
    1f0c:	00000112 	andeq	r0, r0, r2, lsl r1
    1f10:	03012e23 	movweq	r2, #7715	; 0x1e23
    1f14:	3b0b3a0e 	blcc	2d0754 <_Min_Heap_Size+0x2cff54>
    1f18:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1f1c:	2013490c 	andscs	r4, r3, ip, lsl #18
    1f20:	0013010b 	andseq	r0, r3, fp, lsl #2
    1f24:	00342400 	eorseq	r2, r4, r0, lsl #8
    1f28:	0b3a0e03 	bleq	e8573c <_Min_Heap_Size+0xe84f3c>
    1f2c:	0b39053b 	bleq	e43420 <_Min_Heap_Size+0xe42c20>
    1f30:	00001349 	andeq	r1, r0, r9, asr #6
    1f34:	3f002e25 	svccc	0x00002e25
    1f38:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1f3c:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1f40:	0b3b0b3a 	bleq	ec4c30 <_Min_Heap_Size+0xec4430>
    1f44:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    1f48:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1f4c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1f50:	0b3a0e03 	bleq	e85764 <_Min_Heap_Size+0xe84f64>
    1f54:	0b390b3b 	bleq	e44c48 <_Min_Heap_Size+0xe44448>
    1f58:	01000000 	mrseq	r0, (UNDEF: 0)
    1f5c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1f60:	0e030b13 	vmoveq.32	d3[0], r0
    1f64:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1f68:	01520111 	cmpeq	r2, r1, lsl r1
    1f6c:	00000610 	andeq	r0, r0, r0, lsl r6
    1f70:	0b002402 	bleq	af80 <_Min_Heap_Size+0xa780>
    1f74:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1f78:	0300000e 	movweq	r0, #14
    1f7c:	0b0b0024 	bleq	2c2014 <_Min_Heap_Size+0x2c1814>
    1f80:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1f84:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    1f88:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1f8c:	3b0b3a0e 	blcc	2d07cc <_Min_Heap_Size+0x2cffcc>
    1f90:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1f94:	1201110c 	andne	r1, r1, #12, 2
    1f98:	97064001 	strls	r4, [r6, -r1]
    1f9c:	13010c42 	movwne	r0, #7234	; 0x1c42
    1fa0:	05050000 	streq	r0, [r5, #-0]
    1fa4:	3a0e0300 	bcc	382bac <_Min_Heap_Size+0x3823ac>
    1fa8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1fb0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1fb4:	89060000 	stmdbhi	r6, {}	; <UNPREDICTABLE>
    1fb8:	11010182 	smlabbne	r1, r2, r1, r0
    1fbc:	01133101 	tsteq	r3, r1, lsl #2
    1fc0:	07000013 	smladeq	r0, r3, r0, r0
    1fc4:	0001828a 	andeq	r8, r1, sl, lsl #5
    1fc8:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1fcc:	0800000a 	stmdaeq	r0, {r1, r3}
    1fd0:	01018289 	smlabbeq	r1, r9, r2, r8
    1fd4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1fd8:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    1fdc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1fe0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1fe4:	0b3a0e03 	bleq	e857f8 <_Min_Heap_Size+0xe84ff8>
    1fe8:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1fec:	3f002e0a 	svccc	0x00002e0a
    1ff0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1ff4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1ff8:	0b3b0b3a 	bleq	ec4ce8 <_Min_Heap_Size+0xec44e8>
    1ffc:	00000b39 	andeq	r0, r0, r9, lsr fp
    2000:	00110100 	andseq	r0, r1, r0, lsl #2
    2004:	06550610 			; <UNDEFINED> instruction: 0x06550610
    2008:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    200c:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    2010:	01000000 	mrseq	r0, (UNDEF: 0)
    2014:	06100011 			; <UNDEFINED> instruction: 0x06100011
    2018:	01120111 	tsteq	r2, r1, lsl r1
    201c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2020:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    2024:	Address 0x00002024 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
       0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
       4:	080005c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, sl}
  errno = ENOMEM;
       8:	007d0002 	rsbseq	r0, sp, r2
}
       c:	080005c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, sl}
      10:	0800060c 	stmdaeq	r0, {r2, r3, r9, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
}
      28:	05c40000 	strbeq	r0, [r4]
      2c:	05ce0800 	strbeq	r0, [lr, #2048]	; 0x800
      30:	00010800 	andeq	r0, r1, r0, lsl #16
    if (status != HAL_OK)
      34:	0005ce50 	andeq	ip, r5, r0, asr lr
      uwTickFreq = prevTickFreq;
      38:	0005d808 	andeq	sp, r5, r8, lsl #16
      3c:	53000108 	movwpl	r0, #264	; 0x108
      40:	080005d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl}
      44:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
      if (pllsource != 0)
      48:	01f30004 	mvnseq	r0, r4
      4c:	05e49f50 	strbeq	r9, [r4, #3920]!	; 0xf50
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	05ec0800 	strbeq	r0, [ip, #2048]!	; 0x800
      54:	00010800 	andeq	r0, r1, r0, lsl #16
      58:	0005ec53 	andeq	lr, r5, r3, asr ip
      5c:	00060c08 	andeq	r0, r6, r8, lsl #24
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	f3000408 	vshl.u8	d0, d8, d0
      64:	009f5001 	addseq	r5, pc, r1
      68:	00000000 	andeq	r0, r0, r0
      SystemCoreClock = pllvco/pllp;
      6c:	01000000 	mrseq	r0, (UNDEF: 0)
      70:	0005de01 	andeq	sp, r5, r1, lsl #28
      break;
      74:	0005e208 	andeq	lr, r5, r8, lsl #4
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	50000108 	andpl	r0, r0, r8, lsl #2
	...
      8c:	007d0002 	rsbseq	r0, sp, r2
	...
      98:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      b0:	00500001 	subseq	r0, r0, r1
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	00000000 	andeq	r0, r0, r0
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	04000000 	streq	r0, [r0], #-0
      bc:	5001f300 	andpl	pc, r1, r0, lsl #6
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
      e0:	01f30004 	mvnseq	r0, r4
    if (huart->hdmarx != NULL)
      e4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00010000 	andeq	r0, r1, r0
    huart->gState  = HAL_UART_STATE_READY;
      fc:	00000052 	andeq	r0, r0, r2, asr r0
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000000 	andeq	r0, r0, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	f3000400 	vshl.u8	d0, d0, d0
    HAL_UART_AbortCpltCallback(huart);
     108:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
}
     118:	02000000 	andeq	r0, r0, #0
     11c:	00007d00 	andeq	r7, r0, r0, lsl #26
     120:	00000000 	andeq	r0, r0, r0
     124:	02000000 	andeq	r0, r0, #0
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     138:	02000000 	andeq	r0, r0, #0
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	00007d00 	andeq	r7, r0, r0, lsl #26
     140:	00000000 	andeq	r0, r0, r0
     144:	02000000 	andeq	r0, r0, #0
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     15c:	01000000 	mrseq	r0, (UNDEF: 0)
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	00005000 	andeq	r5, r0, r0
     164:	00000000 	andeq	r0, r0, r0
     168:	00040000 	andeq	r0, r4, r0
     16c:	9f5001f3 	svcls	0x005001f3
	...
}
     184:	00510001 	subseq	r0, r1, r1
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	00000000 	andeq	r0, r0, r0
     18c:	04000000 	streq	r0, [r0], #-0
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     194:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b4:	01f30004 	mvnseq	r0, r4
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00010000 	andeq	r0, r1, r0
     1d0:	00000050 	andeq	r0, r0, r0, asr r0
     1d4:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	f3000400 	vshl.u8	d0, d0, d0
     1dc:	009f5001 	addseq	r5, pc, r1
	...
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	02000000 	andeq	r0, r0, #0
     1f0:	00007d00 	andeq	r7, r0, r0, lsl #26
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	02000000 	andeq	r0, r0, #0
     1fc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	01000000 	mrseq	r0, (UNDEF: 0)
     214:	00005000 	andeq	r5, r0, r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000000 	andeq	r0, r0, r0
     21c:	00040000 	andeq	r0, r4, r0
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	9f5001f3 	svcls	0x005001f3
	...
  tmp |= hdma->Init.FIFOMode;
     234:	007d0002 	rsbseq	r0, sp, r2
	...
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     258:	00500001 	subseq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000000 	andeq	r0, r0, r0
  hdma->State = HAL_DMA_STATE_READY;
     260:	04000000 	streq	r0, [r0], #-0
     264:	5001f300 	andpl	pc, r1, r0, lsl #6
  return HAL_OK;
     268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     278:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
        hdma->State = HAL_DMA_STATE_READY;
     284:	7d000200 	sfmvc	f0, 4, [r0, #-0]
        return HAL_ERROR; 
     288:	0000000c 	andeq	r0, r0, ip
    return HAL_ERROR;
     28c:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b4:	01f30004 	mvnseq	r0, r4
          return HAL_TIMEOUT;
     2b8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2c4:	065c0000 	ldrbeq	r0, [ip], -r0
    FlagStatus       pwrclkchanged = RESET;
     2c8:	065e0800 	ldrbeq	r0, [lr], -r0, lsl #16
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	00010800 	andeq	r0, r1, r0, lsl #16
     2d0:	00065e50 	andeq	r5, r6, r0, asr lr
     2d4:	00066008 	andeq	r6, r6, r8
      tickstart = HAL_GetTick();
     2d8:	f3000408 	vshl.u8	d0, d8, d0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	009f5001 	addseq	r5, pc, r1
	...
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
     2ec:	5a080006 	bpl	20030c <_Min_Heap_Size+0x1ffb0c>
          return HAL_TIMEOUT;
     2f0:	01080006 	tsteq	r8, r6
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	065a5000 	ldrbeq	r5, [sl], -r0
     2f8:	065c0800 	ldrbeq	r0, [ip], -r0, lsl #16
     2fc:	00040800 	andeq	r0, r4, r0, lsl #16
     300:	9f5001f3 	svcls	0x005001f3
	...
     310:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
      tickstart = HAL_GetTick();
     314:	08000656 	stmdaeq	r0, {r1, r2, r4, r6, r9, sl}
     318:	56500001 	ldrbpl	r0, [r0], -r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	58080006 	stmdapl	r8, {r1, r2}
     320:	04080006 	streq	r0, [r8], #-6
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	5001f300 	andpl	pc, r1, r0, lsl #6
     328:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
          return HAL_TIMEOUT;
     334:	00064800 	andeq	r4, r6, r0, lsl #16
    if(pwrclkchanged == SET)
     338:	00064c08 	andeq	r4, r6, r8, lsl #24
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	50000108 	andpl	r0, r0, r8, lsl #2
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	0800064c 	stmdaeq	r0, {r2, r3, r6, r9, sl}
     344:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	01f30004 	mvnseq	r0, r4
     34c:	00009f50 	andeq	r9, r0, r0, asr pc
     350:	00000000 	andeq	r0, r0, r0
     354:	062c0000 	strteq	r0, [ip], -r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	062e0800 	strteq	r0, [lr], -r0, lsl #16
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	00020800 	andeq	r0, r2, r0, lsl #16
     360:	062e007d 			; <UNDEFINED> instruction: 0x062e007d
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	06480800 	strbeq	r0, [r8], -r0, lsl #16
     368:	00020800 	andeq	r0, r2, r0, lsl #16
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	062c0000 	strteq	r0, [ip], -r0
     37c:	06360800 	ldrteq	r0, [r6], -r0, lsl #16
     380:	00010800 	andeq	r0, r1, r0, lsl #16
     384:	00063650 	andeq	r3, r6, r0, asr r6
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00064808 	andeq	r4, r6, r8, lsl #16
     38c:	f3000408 	vshl.u8	d0, d8, d0
        __HAL_RCC_PLL_DISABLE();
     390:	009f5001 	addseq	r5, pc, r1
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	01010000 	mrseq	r0, (UNDEF: 1)
     3a0:	2c000000 	stccs	0, cr0, [r0], {-0}
     3a4:	36080006 	strcc	r0, [r8], -r6
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	01080006 	tsteq	r8, r6
     3ac:	06365100 	ldrteq	r5, [r6], -r0, lsl #2
            return HAL_TIMEOUT;
     3b0:	06360800 	ldrteq	r0, [r6], -r0, lsl #16
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00010800 	andeq	r0, r1, r0, lsl #16
     3b8:	00063654 	andeq	r3, r6, r4, asr r6
     3bc:	00063a08 	andeq	r3, r6, r8, lsl #20
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	74000308 	strvc	r0, [r0], #-776	; 0xfffffcf8
     3c4:	063a9f01 	ldrteq	r9, [sl], -r1, lsl #30
     3c8:	06480800 	strbeq	r0, [r8], -r0, lsl #16
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00010800 	andeq	r0, r1, r0, lsl #16
     3d0:	00000054 	andeq	r0, r0, r4, asr r0
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3dc:	00062c00 	andeq	r2, r6, r0, lsl #24
     3e0:	00063608 	andeq	r3, r6, r8, lsl #12
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	52000108 	andpl	r0, r0, #8, 2
     3e8:	08000636 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl}
     3ec:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00560001 	subseq	r0, r6, r1
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	03000000 	movweq	r0, #0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	32000000 	andcc	r0, r0, #0
     400:	36080006 	strcc	r0, [r8], -r6
     404:	02080006 	andeq	r0, r8, #6
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	369f3000 	ldrcc	r3, [pc], r0
     40c:	48080006 	stmdami	r8, {r1, r2}
     410:	01080006 	tsteq	r8, r6
     414:	00005500 	andeq	r5, r0, r0, lsl #10
     418:	00000000 	andeq	r0, r0, r0
     41c:	060c0000 	streq	r0, [ip], -r0
     420:	060e0800 	streq	r0, [lr], -r0, lsl #16
     424:	00020800 	andeq	r0, r2, r0, lsl #16
        __HAL_RCC_PLL_ENABLE();
     428:	060e007d 			; <UNDEFINED> instruction: 0x060e007d
     42c:	062c0800 	strteq	r0, [ip], -r0, lsl #16
        tickstart = HAL_GetTick();
     430:	00020800 	andeq	r0, r2, r0, lsl #16
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0000107d 	andeq	r1, r0, sp, ror r0
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	060c0000 	streq	r0, [ip], -r0
     444:	06160800 	ldreq	r0, [r6], -r0, lsl #16
            return HAL_TIMEOUT;
     448:	00010800 	andeq	r0, r1, r0, lsl #16
  return HAL_OK;
     44c:	00061650 	andeq	r1, r6, r0, asr r6
        __HAL_RCC_PLL_DISABLE();
     450:	00062c08 	andeq	r2, r6, r8, lsl #24
     454:	f3000408 	vshl.u8	d0, d8, d0
        tickstart = HAL_GetTick();
     458:	009f5001 	addseq	r5, pc, r1
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0c000000 	stceq	0, cr0, [r0], {-0}
     46c:	19080006 	stmdbne	r8, {r1, r2}
            return HAL_TIMEOUT;
     470:	01080006 	tsteq	r8, r6
  return HAL_OK;
     474:	06195100 	ldreq	r5, [r9], -r0, lsl #2
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	061c0800 	ldreq	r0, [ip], -r0, lsl #16
        pll_config = RCC->PLLCFGR;
     47c:	00010800 	andeq	r0, r1, r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00061c54 	andeq	r1, r6, r4, asr ip
     484:	00062008 	andeq	r2, r6, r8
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	71000308 	tstvc	r0, r8, lsl #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	06209f01 	strteq	r9, [r0], -r1, lsl #30
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	062c0800 	strteq	r0, [ip], -r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00010800 	andeq	r0, r1, r0, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00000051 	andeq	r0, r0, r1, asr r0
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00060c00 	andeq	r0, r6, r0, lsl #24
     4a8:	00061608 	andeq	r1, r6, r8, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	52000108 	andpl	r0, r0, #8, 2
     4b0:	08000616 	stmdaeq	r0, {r1, r2, r4, r9, sl}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00560001 	subseq	r0, r6, r1
     4bc:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     4c0:	03000000 	movweq	r0, #0
}
     4c4:	12000000 	andne	r0, r0, #0
        return HAL_ERROR;
     4c8:	16080006 	strne	r0, [r8], -r6
        return HAL_ERROR;
     4cc:	02080006 	andeq	r0, r8, #6
}
     4d0:	169f3000 	ldrne	r3, [pc], r0
        return HAL_ERROR;
     4d4:	2c080006 	stccs	0, cr0, [r8], {6}
          return HAL_ERROR;
     4d8:	01080006 	tsteq	r8, r6
     4dc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
     4ec:	00020000 	andeq	r0, r2, r0
     4f0:	0000007d 	andeq	r0, r0, sp, ror r0
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	00020000 	andeq	r0, r2, r0
     4fc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     510:	00010000 	andeq	r0, r1, r0
     514:	00000050 	andeq	r0, r0, r0, asr r0
     518:	00000000 	andeq	r0, r0, r0
     51c:	f3000400 	vshl.u8	d0, d0, d0
     520:	009f5001 	addseq	r5, pc, r1
	...
     530:	02000000 	andeq	r0, r0, #0
     534:	00007d00 	andeq	r7, r0, r0, lsl #26
     538:	00000000 	andeq	r0, r0, r0
     53c:	02000000 	andeq	r0, r0, #0
     540:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     554:	01000000 	mrseq	r0, (UNDEF: 0)
     558:	00005000 	andeq	r5, r0, r0
     55c:	00000000 	andeq	r0, r0, r0
     560:	00040000 	andeq	r0, r4, r0
     564:	9f5001f3 	svcls	0x005001f3
	...
     57c:	00510001 	subseq	r0, r1, r1
     580:	00000000 	andeq	r0, r0, r0
     584:	04000000 	streq	r0, [r0], #-0
     588:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     58c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     590:	00000000 	andeq	r0, r0, r0
     594:	0007a000 	andeq	sl, r7, r0
     598:	0007a208 	andeq	sl, r7, r8, lsl #4
     59c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5a0:	0007a200 	andeq	sl, r7, r0, lsl #4
     5a4:	0007b408 	andeq	fp, r7, r8, lsl #8
     5a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     5ac:	00000008 	andeq	r0, r0, r8
	...
     5b8:	0007a000 	andeq	sl, r7, r0
     5bc:	0007a608 	andeq	sl, r7, r8, lsl #12
     5c0:	50000108 	andpl	r0, r0, r8, lsl #2
     5c4:	080007a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl}
     5c8:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
     5cc:	01f30004 	mvnseq	r0, r4
     5d0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     5dc:	07a00000 	streq	r0, [r0, r0]!
     5e0:	07a40800 	streq	r0, [r4, r0, lsl #16]!
     5e4:	00010800 	andeq	r0, r1, r0, lsl #16
     5e8:	0007a451 	andeq	sl, r7, r1, asr r4
     5ec:	0007b408 	andeq	fp, r7, r8, lsl #8
     5f0:	f3000408 	vshl.u8	d0, d8, d0
     5f4:	009f5101 	addseq	r5, pc, r1, lsl #2
     5f8:	00000000 	andeq	r0, r0, r0
     5fc:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     600:	8a080007 	bhi	200624 <_Min_Heap_Size+0x1ffe24>
     604:	02080007 	andeq	r0, r8, #7
     608:	8a007d00 	bhi	1fa10 <_Min_Heap_Size+0x1f210>
     60c:	a0080007 	andge	r0, r8, r7
     610:	02080007 	andeq	r0, r8, #7
     614:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     624:	02000000 	andeq	r0, r0, #0
     628:	00007d00 	andeq	r7, r0, r0, lsl #26
     62c:	00000000 	andeq	r0, r0, r0
     630:	02000000 	andeq	r0, r0, #0
     634:	00047d00 	andeq	r7, r4, r0, lsl #26
     638:	00000000 	andeq	r0, r0, r0
     63c:	03000000 	movweq	r0, #0
     640:	00d87d00 	sbcseq	r7, r8, r0, lsl #26
	...
     64c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     658:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
     664:	00075c00 	andeq	r5, r7, r0, lsl #24
     668:	00075e08 	andeq	r5, r7, r8, lsl #28
     66c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     670:	00075e00 	andeq	r5, r7, r0, lsl #28
     674:	00078808 	andeq	r8, r7, r8, lsl #16
     678:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     67c:	00000008 	andeq	r0, r0, r8
     680:	00000000 	andeq	r0, r0, r0
     684:	00074400 	andeq	r4, r7, r0, lsl #8
     688:	00074608 	andeq	r4, r7, r8, lsl #12
     68c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     690:	00074600 	andeq	r4, r7, r0, lsl #12
     694:	00075c08 	andeq	r5, r7, r8, lsl #24
     698:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     69c:	00000008 	andeq	r0, r0, r8
     6a0:	00000000 	andeq	r0, r0, r0
     6a4:	00072c00 	andeq	r2, r7, r0, lsl #24
     6a8:	00072e08 	andeq	r2, r7, r8, lsl #28
     6ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     6b0:	00072e00 	andeq	r2, r7, r0, lsl #28
     6b4:	00074408 	andeq	r4, r7, r8, lsl #8
     6b8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     6bc:	00000008 	andeq	r0, r0, r8
     6c0:	00000000 	andeq	r0, r0, r0
     6c4:	00071400 	andeq	r1, r7, r0, lsl #8
     6c8:	00071608 	andeq	r1, r7, r8, lsl #12
     6cc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     6d0:	00071600 	andeq	r1, r7, r0, lsl #12
     6d4:	00072c08 	andeq	r2, r7, r8, lsl #24
     6d8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     6dc:	00000008 	andeq	r0, r0, r8
     6e0:	00000000 	andeq	r0, r0, r0
     6e4:	0006fc00 	andeq	pc, r6, r0, lsl #24
     6e8:	0006fe08 	andeq	pc, r6, r8, lsl #28
     6ec:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     6f0:	0006fe00 	andeq	pc, r6, r0, lsl #28
     6f4:	00071408 	andeq	r1, r7, r8, lsl #8
     6f8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     6fc:	00000008 	andeq	r0, r0, r8
     700:	00000000 	andeq	r0, r0, r0
     704:	0006e400 	andeq	lr, r6, r0, lsl #8
     708:	0006e608 	andeq	lr, r6, r8, lsl #12
     70c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     710:	0006e600 	andeq	lr, r6, r0, lsl #12
     714:	0006fc08 	andeq	pc, r6, r8, lsl #24
     718:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     71c:	00000008 	andeq	r0, r0, r8
     720:	00000000 	andeq	r0, r0, r0
     724:	0006cc00 	andeq	ip, r6, r0, lsl #24
     728:	0006ce08 	andeq	ip, r6, r8, lsl #28
     72c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     730:	0006ce00 	andeq	ip, r6, r0, lsl #28
     734:	0006e408 	andeq	lr, r6, r8, lsl #8
     738:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     73c:	00000008 	andeq	r0, r0, r8
     740:	00000000 	andeq	r0, r0, r0
     744:	00068000 	andeq	r8, r6, r0
     748:	00068208 	andeq	r8, r6, r8, lsl #4
     74c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     750:	00068200 	andeq	r8, r6, r0, lsl #4
     754:	00068408 	andeq	r8, r6, r8, lsl #8
     758:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     75c:	0006840c 	andeq	r8, r6, ip, lsl #8
     760:	0006c208 	andeq	ip, r6, r8, lsl #4
     764:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     768:	0006c218 	andeq	ip, r6, r8, lsl r2
     76c:	0006cc08 	andeq	ip, r6, r8, lsl #24
     770:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     774:	0000000c 	andeq	r0, r0, ip
     778:	00000000 	andeq	r0, r0, r0
     77c:	01010100 	mrseq	r0, (UNDEF: 17)
     780:	84000101 	strhi	r0, [r0], #-257	; 0xfffffeff
     784:	a2080006 	andge	r0, r8, #6
     788:	02080006 	andeq	r0, r8, #6
     78c:	a29f3000 	addsge	r3, pc, #0
     790:	b0080006 	andlt	r0, r8, r6
     794:	02080006 	andeq	r0, r8, #6
     798:	b09f3400 	addslt	r3, pc, r0, lsl #8
     79c:	cc080006 	stcgt	0, cr0, [r8], {6}
     7a0:	02080006 	andeq	r0, r8, #6
     7a4:	009f3300 	addseq	r3, pc, r0, lsl #6
	...
     7b4:	02000000 	andeq	r0, r0, #0
     7b8:	00007d00 	andeq	r7, r0, r0, lsl #26
     7bc:	00000000 	andeq	r0, r0, r0
     7c0:	02000000 	andeq	r0, r0, #0
     7c4:	00087d00 	andeq	r7, r8, r0, lsl #26
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	60000000 	andvs	r0, r0, r0
     7d0:	62080006 	andvs	r0, r8, #6
     7d4:	02080006 	andeq	r0, r8, #6
     7d8:	62007d00 	andvs	r7, r0, #0, 26
     7dc:	64080006 	strvs	r0, [r8], #-6
     7e0:	02080006 	andeq	r0, r8, #6
     7e4:	64047d00 	strvs	r7, [r4], #-3328	; 0xfffff300
     7e8:	78080006 	stmdavc	r8, {r1, r2}
     7ec:	02080006 	andeq	r0, r8, #6
     7f0:	78107d00 	ldmdavc	r0, {r8, sl, fp, ip, sp, lr}
     7f4:	80080006 	andhi	r0, r8, r6
     7f8:	02080006 	andeq	r0, r8, #6
     7fc:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     808:	60000000 	andvs	r0, r0, r0
     80c:	70080006 	andvc	r0, r8, r6
     810:	01080006 	tsteq	r8, r6
     814:	06705000 	ldrbteq	r5, [r0], -r0
     818:	06730800 	ldrbteq	r0, [r3], -r0, lsl #16
     81c:	00020800 	andeq	r0, r2, r0, lsl #16
     820:	00000071 	andeq	r0, r0, r1, ror r0
     824:	00000000 	andeq	r0, r0, r0
     828:	07b40000 	ldreq	r0, [r4, r0]!
     82c:	07b60800 	ldreq	r0, [r6, r0, lsl #16]!
     830:	00020800 	andeq	r0, r2, r0, lsl #16
     834:	07b6007d 			; <UNDEFINED> instruction: 0x07b6007d
     838:	07f80800 	ldrbeq	r0, [r8, r0, lsl #16]!
     83c:	00020800 	andeq	r0, r2, r0, lsl #16
     840:	07f8107d 			; <UNDEFINED> instruction: 0x07f8107d
     844:	08000800 	stmdaeq	r0, {fp}
     848:	00020800 	andeq	r0, r2, r0, lsl #16
     84c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     85c:	00020000 	andeq	r0, r2, r0
     860:	0000007d 	andeq	r0, r0, sp, ror r0
     864:	00000000 	andeq	r0, r0, r0
     868:	00020000 	andeq	r0, r2, r0
     86c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     884:	00010000 	andeq	r0, r1, r0
     888:	00000050 	andeq	r0, r0, r0, asr r0
     88c:	00000000 	andeq	r0, r0, r0
     890:	f3000400 	vshl.u8	d0, d0, d0
     894:	009f5001 	addseq	r5, pc, r1
     898:	00000000 	andeq	r0, r0, r0
     89c:	01000000 	mrseq	r0, (UNDEF: 0)
     8a0:	00005000 	andeq	r5, r0, r0
     8a4:	00000000 	andeq	r0, r0, r0
     8a8:	00040000 	andeq	r0, r4, r0
     8ac:	9f5001f3 	svcls	0x005001f3
	...
     8b8:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
     8bc:	08000836 	stmdaeq	r0, {r1, r2, r4, r5, fp}
     8c0:	007d0002 	rsbseq	r0, sp, r2
     8c4:	08000836 	stmdaeq	r0, {r1, r2, r4, r5, fp}
     8c8:	08000838 	stmdaeq	r0, {r3, r4, r5, fp}
     8cc:	087d0002 	ldmdaeq	sp!, {r1}^
     8d0:	08000838 	stmdaeq	r0, {r3, r4, r5, fp}
     8d4:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
     8d8:	287d0002 	ldmdacs	sp!, {r1}^
     8dc:	08000854 	stmdaeq	r0, {r2, r4, r6, fp}
     8e0:	08000856 	stmdaeq	r0, {r1, r2, r4, r6, fp}
     8e4:	087d0002 	ldmdaeq	sp!, {r1}^
     8e8:	08000856 	stmdaeq	r0, {r1, r2, r4, r6, fp}
     8ec:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
     8f0:	287d0002 	ldmdacs	sp!, {r1}^
	...
     904:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
     908:	08000852 	stmdaeq	r0, {r1, r4, r6, fp}
     90c:	52500001 	subspl	r0, r0, #1
     910:	56080008 	strpl	r0, [r8], -r8
     914:	04080008 	streq	r0, [r8], #-8
     918:	5001f300 	andpl	pc, r1, r0, lsl #6
     91c:	0008569f 	muleq	r8, pc, r6	; <UNPREDICTABLE>
     920:	00089a08 	andeq	r9, r8, r8, lsl #20
     924:	50000108 	andpl	r0, r0, r8, lsl #2
     928:	0800089a 	stmdaeq	r0, {r1, r3, r4, r7, fp}
     92c:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
     930:	01f30004 	mvnseq	r0, r4
     934:	00009f50 	andeq	r9, r0, r0, asr pc
     938:	00000000 	andeq	r0, r0, r0
     93c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     940:	08020800 	stmdaeq	r2, {fp}
     944:	00020800 	andeq	r0, r2, r0, lsl #16
     948:	0802007d 	stmdaeq	r2, {r0, r2, r3, r4, r5, r6}
     94c:	08340800 	ldmdaeq	r4!, {fp}
     950:	00020800 	andeq	r0, r2, r0, lsl #16
     954:	0000087d 	andeq	r0, r0, sp, ror r8
     958:	00000000 	andeq	r0, r0, r0
     95c:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
     960:	09160800 	ldmdbeq	r6, {fp}
     964:	00020800 	andeq	r0, r2, r0, lsl #16
     968:	0916007d 	ldmdbeq	r6, {r0, r2, r3, r4, r5, r6}
     96c:	09240800 	stmdbeq	r4!, {fp}
     970:	00020800 	andeq	r0, r2, r0, lsl #16
     974:	0000087d 	andeq	r0, r0, sp, ror r8
     978:	00000000 	andeq	r0, r0, r0
     97c:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
     980:	090c0800 	stmdbeq	ip, {fp}
     984:	00020800 	andeq	r0, r2, r0, lsl #16
     988:	090c007d 	stmdbeq	ip, {r0, r2, r3, r4, r5, r6}
     98c:	09120800 	ldmdbeq	r2, {fp}
     990:	00020800 	andeq	r0, r2, r0, lsl #16
     994:	0000087d 	andeq	r0, r0, sp, ror r8
     998:	00000000 	andeq	r0, r0, r0
     99c:	08f00000 	ldmeq	r0!, {}^	; <UNPREDICTABLE>
     9a0:	08f20800 	ldmeq	r2!, {fp}^
     9a4:	00020800 	andeq	r0, r2, r0, lsl #16
     9a8:	08f2007d 	ldmeq	r2!, {r0, r2, r3, r4, r5, r6}^
     9ac:	09040800 	stmdbeq	r4, {fp}
     9b0:	00020800 	andeq	r0, r2, r0, lsl #16
     9b4:	0000087d 	andeq	r0, r0, sp, ror r8
     9b8:	00000000 	andeq	r0, r0, r0
     9bc:	08dc0000 	ldmeq	ip, {}^	; <UNPREDICTABLE>
     9c0:	08de0800 	ldmeq	lr, {fp}^
     9c4:	00020800 	andeq	r0, r2, r0, lsl #16
     9c8:	08de007d 	ldmeq	lr, {r0, r2, r3, r4, r5, r6}^
     9cc:	08f00800 	ldmeq	r0!, {fp}^
     9d0:	00020800 	andeq	r0, r2, r0, lsl #16
     9d4:	0000087d 	andeq	r0, r0, sp, ror r8
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	08c80000 	stmiaeq	r8, {}^	; <UNPREDICTABLE>
     9e0:	08ca0800 	stmiaeq	sl, {fp}^
     9e4:	00020800 	andeq	r0, r2, r0, lsl #16
     9e8:	08ca007d 	stmiaeq	sl, {r0, r2, r3, r4, r5, r6}^
     9ec:	08dc0800 	ldmeq	ip, {fp}^
     9f0:	00020800 	andeq	r0, r2, r0, lsl #16
     9f4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     a04:	00020000 	andeq	r0, r2, r0
     a08:	0000007d 	andeq	r0, r0, sp, ror r0
     a0c:	00000000 	andeq	r0, r0, r0
     a10:	00020000 	andeq	r0, r2, r0
     a14:	0000087d 	andeq	r0, r0, sp, ror r8
     a18:	00000000 	andeq	r0, r0, r0
     a1c:	08b40000 	ldmeq	r4!, {}	; <UNPREDICTABLE>
     a20:	08b60800 	ldmeq	r6!, {fp}
     a24:	00020800 	andeq	r0, r2, r0, lsl #16
     a28:	08b6007d 	ldmeq	r6!, {r0, r2, r3, r4, r5, r6}
     a2c:	08c80800 	stmiaeq	r8, {fp}^
     a30:	00020800 	andeq	r0, r2, r0, lsl #16
     a34:	0000087d 	andeq	r0, r0, sp, ror r8
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	09240000 	stmdbeq	r4!, {}	; <UNPREDICTABLE>
     a40:	09260800 	stmdbeq	r6!, {fp}
     a44:	00020800 	andeq	r0, r2, r0, lsl #16
     a48:	0926007d 	stmdbeq	r6!, {r0, r2, r3, r4, r5, r6}
     a4c:	09540800 	ldmdbeq	r4, {fp}^
     a50:	00020800 	andeq	r0, r2, r0, lsl #16
     a54:	0954087d 	ldmdbeq	r4, {r0, r2, r3, r4, r5, r6, fp}^
     a58:	095c0800 	ldmdbeq	ip, {fp}^
     a5c:	00020800 	andeq	r0, r2, r0, lsl #16
     a60:	0000007d 	andeq	r0, r0, sp, ror r0
     a64:	00000000 	andeq	r0, r0, r0
     a68:	0a180000 	beq	600a70 <_Min_Heap_Size+0x600270>
     a6c:	0a1a0800 	beq	682a74 <_Min_Heap_Size+0x682274>
     a70:	00020800 	andeq	r0, r2, r0, lsl #16
     a74:	0a1a007d 	beq	680c70 <_Min_Heap_Size+0x680470>
     a78:	0b8c0800 	bleq	fe302a80 <_estack+0xde301848>
     a7c:	00020800 	andeq	r0, r2, r0, lsl #16
     a80:	0000107d 	andeq	r1, r0, sp, ror r0
	...
     a90:	0a180000 	beq	600a98 <_Min_Heap_Size+0x600298>
     a94:	0a240800 	beq	902a9c <_Min_Heap_Size+0x90229c>
     a98:	00010800 	andeq	r0, r1, r0, lsl #16
     a9c:	000a2450 	andeq	r2, sl, r0, asr r4
     aa0:	000aa408 	andeq	sl, sl, r8, lsl #8
     aa4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     aa8:	08000aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp}
     aac:	08000aaa 	stmdaeq	r0, {r1, r3, r5, r7, r9, fp}
     ab0:	aa500001 	bge	1400abc <_Min_Heap_Size+0x14002bc>
     ab4:	8c08000a 	stchi	0, cr0, [r8], {10}
     ab8:	0108000b 	tsteq	r8, fp
     abc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     ac8:	08000a70 	stmdaeq	r0, {r4, r5, r6, r9, fp}
     acc:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
     ad0:	00520001 	subseq	r0, r2, r1
	...
     ae0:	000aa200 	andeq	sl, sl, r0, lsl #4
     ae4:	000aa408 	andeq	sl, sl, r8, lsl #8
     ae8:	50000108 	andpl	r0, r0, r8, lsl #2
     aec:	08000acc 	stmdaeq	r0, {r2, r3, r6, r7, r9, fp}
     af0:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
     af4:	28500001 	ldmdacs	r0, {r0}^
     af8:	4008000b 	andmi	r0, r8, fp
     afc:	0108000b 	tsteq	r8, fp
     b00:	00005000 	andeq	r5, r0, r0
     b04:	00000000 	andeq	r0, r0, r0
     b08:	0e420000 	cdpeq	0, 4, cr0, cr2, cr0, {0}
     b0c:	0e820800 	cdpeq	8, 8, cr0, cr2, cr0, {0}
     b10:	00020800 	andeq	r0, r2, r0, lsl #16
     b14:	0e82007d 	mcreq	0, 4, r0, cr2, cr13, {3}
     b18:	0e840800 	cdpeq	8, 8, cr0, cr4, cr0, {0}
     b1c:	00020800 	andeq	r0, r2, r0, lsl #16
     b20:	0e84047d 	mcreq	4, 4, r0, cr4, cr13, {3}
     b24:	0ef00800 	cdpeq	8, 15, cr0, cr0, cr0, {0}
     b28:	00020800 	andeq	r0, r2, r0, lsl #16
     b2c:	0ef0107d 	mrceq	0, 7, r1, cr0, cr13, {3}
     b30:	0ef40800 	cdpeq	8, 15, cr0, cr4, cr0, {0}
     b34:	00020800 	andeq	r0, r2, r0, lsl #16
     b38:	0ef4047d 	mrceq	4, 7, r0, cr4, cr13, {3}
     b3c:	0f1a0800 	svceq	0x001a0800
     b40:	00020800 	andeq	r0, r2, r0, lsl #16
     b44:	0f1a007d 	svceq	0x001a007d
     b48:	0f200800 	svceq	0x00200800
     b4c:	00020800 	andeq	r0, r2, r0, lsl #16
     b50:	0f20107d 	svceq	0x0020107d
     b54:	0f280800 	svceq	0x00280800
     b58:	00020800 	andeq	r0, r2, r0, lsl #16
     b5c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     b74:	0e420000 	cdpeq	0, 4, cr0, cr2, cr0, {0}
     b78:	0eeb0800 	cdpeq	8, 14, cr0, cr11, cr0, {0}
     b7c:	00010800 	andeq	r0, r1, r0, lsl #16
     b80:	000eeb50 	andeq	lr, lr, r0, asr fp
     b84:	000ef408 	andeq	pc, lr, r8, lsl #8
     b88:	f3000408 	vshl.u8	d0, d8, d0
     b8c:	f49f5001 			; <UNDEFINED> instruction: 0xf49f5001
     b90:	1d08000e 	stcne	0, cr0, [r8, #-56]	; 0xffffffc8
     b94:	0108000f 	tsteq	r8, pc
     b98:	0f1d5000 	svceq	0x001d5000
     b9c:	0f200800 	svceq	0x00200800
     ba0:	00040800 	andeq	r0, r4, r0, lsl #16
     ba4:	9f5001f3 	svcls	0x005001f3
     ba8:	08000f20 	stmdaeq	r0, {r5, r8, r9, sl, fp}
     bac:	08000f22 	stmdaeq	r0, {r1, r5, r8, r9, sl, fp}
     bb0:	22500001 	subscs	r0, r0, #1
     bb4:	2408000f 	strcs	r0, [r8], #-15
     bb8:	0408000f 	streq	r0, [r8], #-15
     bbc:	5001f300 	andpl	pc, r1, r0, lsl #6
     bc0:	000f249f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
     bc4:	000f2608 	andeq	r2, pc, r8, lsl #12
     bc8:	50000108 	andpl	r0, r0, r8, lsl #2
     bcc:	08000f26 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl, fp}
     bd0:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
     bd4:	01f30004 	mvnseq	r0, r4
     bd8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     be4:	00000001 	andeq	r0, r0, r1
     be8:	08000e56 	stmdaeq	r0, {r1, r2, r4, r6, r9, sl, fp}
     bec:	08000e72 	stmdaeq	r0, {r1, r4, r5, r6, r9, sl, fp}
     bf0:	fa520001 	blx	1480bfc <_Min_Heap_Size+0x14803fc>
     bf4:	0e08000e 	cdpeq	0, 0, cr0, cr8, cr14, {0}
     bf8:	0208000f 	andeq	r0, r8, #15
     bfc:	0e9f3000 	cdpeq	0, 9, cr3, cr15, cr0, {0}
     c00:	1a08000f 	bne	200c44 <_Min_Heap_Size+0x200444>
     c04:	0108000f 	tsteq	r8, pc
     c08:	00005200 	andeq	r5, r0, r0, lsl #4
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	00010000 	andeq	r0, r1, r0
     c14:	00000000 	andeq	r0, r0, r0
     c18:	08000e56 	stmdaeq	r0, {r1, r2, r4, r6, r9, sl, fp}
     c1c:	08000e72 	stmdaeq	r0, {r1, r4, r5, r6, r9, sl, fp}
     c20:	9f300002 	svcls	0x00300002
     c24:	08000efc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl, fp}
     c28:	08000f0e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, fp}
     c2c:	0e520001 	cdpeq	0, 5, cr0, cr2, cr1, {0}
     c30:	1a08000f 	bne	200c74 <_Min_Heap_Size+0x200474>
     c34:	0208000f 	andeq	r0, r8, #15
     c38:	009f3000 	addseq	r3, pc, r0
	...
     c44:	000ec400 	andeq	ip, lr, r0, lsl #8
     c48:	000ed008 	andeq	sp, lr, r8
     c4c:	53000108 	movwpl	r0, #264	; 0x108
	...
     c5c:	0eb80100 	frdeqe	f0, f0, f0
     c60:	0ebc0800 	cdpeq	8, 11, cr0, cr12, cr0, {0}
     c64:	00030800 	andeq	r0, r3, r0, lsl #16
     c68:	bc9f0c72 	ldclt	12, cr0, [pc], {114}	; 0x72
     c6c:	c008000e 	andgt	r0, r8, lr
     c70:	0108000e 	tsteq	r8, lr
     c74:	0ec05300 	cdpeq	3, 12, cr5, cr0, cr0, {0}
     c78:	0ec00800 	cdpeq	8, 12, cr0, cr0, cr0, {0}
     c7c:	00030800 	andeq	r0, r3, r0, lsl #16
     c80:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     c8c:	000ec001 	andeq	ip, lr, r1
     c90:	000ec008 	andeq	ip, lr, r8
     c94:	53000108 	movwpl	r0, #264	; 0x108
	...
     ca0:	01000001 	tsteq	r0, r1
     ca4:	08000ec4 	stmdaeq	r0, {r2, r6, r7, r9, sl, fp}
     ca8:	08000ec6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl, fp}
     cac:	0c720003 	ldcleq	0, cr0, [r2], #-12
     cb0:	000ec69f 	muleq	lr, pc, r6	; <UNPREDICTABLE>
     cb4:	000eca08 	andeq	ip, lr, r8, lsl #20
     cb8:	52000108 	andpl	r0, r0, #8, 2
	...
     cc4:	0ec40101 	poleqs	f0, f4, f1
     cc8:	0eca0800 	cdpeq	8, 12, cr0, cr10, cr0, {0}
     ccc:	00010800 	andeq	r0, r1, r0, lsl #16
     cd0:	00000053 	andeq	r0, r0, r3, asr r0
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	ca010000 	bgt	40ce0 <_Min_Heap_Size+0x404e0>
     cdc:	ca08000e 	bgt	200d1c <_Min_Heap_Size+0x20051c>
     ce0:	0108000e 	tsteq	r8, lr
     ce4:	00005100 	andeq	r5, r0, r0, lsl #2
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     cf0:	0e140800 	cdpeq	8, 1, cr0, cr4, cr0, {0}
     cf4:	00020800 	andeq	r0, r2, r0, lsl #16
     cf8:	0e14007d 	mrceq	0, 0, r0, cr4, cr13, {3}
     cfc:	0e2c0800 	cdpeq	8, 2, cr0, cr12, cr0, {0}
     d00:	00020800 	andeq	r0, r2, r0, lsl #16
     d04:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     d10:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
     d14:	0e270800 	cdpeq	8, 2, cr0, cr7, cr0, {0}
     d18:	00010800 	andeq	r0, r1, r0, lsl #16
     d1c:	000e2750 	andeq	r2, lr, r0, asr r7
     d20:	000e2c08 	andeq	r2, lr, r8, lsl #24
     d24:	f3000408 	vshl.u8	d0, d8, d0
     d28:	009f5001 	addseq	r5, pc, r1
	...
     d3c:	0009b800 	andeq	fp, r9, r0, lsl #16
     d40:	0009c408 	andeq	ip, r9, r8, lsl #8
     d44:	50000108 	andpl	r0, r0, r8, lsl #2
     d48:	080009c4 	stmdaeq	r0, {r2, r6, r7, r8, fp}
     d4c:	080009c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, fp}
     d50:	01f30004 	mvnseq	r0, r4
     d54:	09c69f50 	stmibeq	r6, {r4, r6, r8, r9, sl, fp, ip, pc}^
     d58:	09fc0800 	ldmibeq	ip!, {fp}^
     d5c:	00010800 	andeq	r0, r1, r0, lsl #16
     d60:	0009fc50 	andeq	pc, r9, r0, asr ip	; <UNPREDICTABLE>
     d64:	0009fe08 	andeq	pc, r9, r8, lsl #28
     d68:	f3000408 	vshl.u8	d0, d8, d0
     d6c:	fe9f5001 	cdp2	0, 9, cr5, cr15, cr1, {0}
     d70:	18080009 	stmdane	r8, {r0, r3}
     d74:	0108000a 	tsteq	r8, sl
     d78:	00005000 	andeq	r5, r0, r0
	...
     d84:	0a060000 	beq	180d8c <_Min_Heap_Size+0x18058c>
     d88:	0a080800 	beq	202d90 <_Min_Heap_Size+0x202590>
     d8c:	00010800 	andeq	r0, r1, r0, lsl #16
     d90:	000a0853 	andeq	r0, sl, r3, asr r8
     d94:	000a1008 	andeq	r1, sl, r8
     d98:	70000208 	andvc	r0, r0, r8, lsl #4
     d9c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
     dac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     db8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     dbc:	00000008 	andeq	r0, r0, r8
	...
     dd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     ddc:	01f30004 	mvnseq	r0, r4
     de0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     df4:	00500001 	subseq	r0, r0, r1
	...
     e04:	02000000 	andeq	r0, r0, #0
     e08:	00007d00 	andeq	r7, r0, r0, lsl #26
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	02000000 	andeq	r0, r0, #0
     e14:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     e28:	01000000 	mrseq	r0, (UNDEF: 0)
     e2c:	00005000 	andeq	r5, r0, r0
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00040000 	andeq	r0, r4, r0
     e38:	9f5001f3 	svcls	0x005001f3
	...
     e4c:	00010000 	andeq	r0, r1, r0
     e50:	00000050 	andeq	r0, r0, r0, asr r0
	...
     e60:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     e6c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     e70:	00000008 	andeq	r0, r0, r8
	...
     e84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     e90:	01f30004 	mvnseq	r0, r4
     e94:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     ea8:	00500001 	subseq	r0, r0, r1
	...
     eb8:	02000000 	andeq	r0, r0, #0
     ebc:	00007d00 	andeq	r7, r0, r0, lsl #26
     ec0:	00000000 	andeq	r0, r0, r0
     ec4:	02000000 	andeq	r0, r0, #0
     ec8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     edc:	01000000 	mrseq	r0, (UNDEF: 0)
     ee0:	00005000 	andeq	r5, r0, r0
     ee4:	00000000 	andeq	r0, r0, r0
     ee8:	00040000 	andeq	r0, r4, r0
     eec:	9f5001f3 	svcls	0x005001f3
	...
     f00:	00010000 	andeq	r0, r1, r0
     f04:	00000050 	andeq	r0, r0, r0, asr r0
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	000e3000 	andeq	r3, lr, r0
     f10:	000e3208 	andeq	r3, lr, r8, lsl #4
     f14:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     f18:	000e3200 	andeq	r3, lr, r0, lsl #4
     f1c:	000e4008 	andeq	r4, lr, r8
     f20:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     f24:	00000008 	andeq	r0, r0, r8
	...
     f30:	000e3000 	andeq	r3, lr, r0
     f34:	000e3408 	andeq	r3, lr, r8, lsl #8
     f38:	50000108 	andpl	r0, r0, r8, lsl #2
     f3c:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
     f40:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
     f44:	01f30004 	mvnseq	r0, r4
     f48:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     f54:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
     f58:	08000e3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, fp}
     f5c:	00500001 	subseq	r0, r0, r1
     f60:	00000000 	andeq	r0, r0, r0
     f64:	01000000 	mrseq	r0, (UNDEF: 0)
     f68:	00095c00 	andeq	r5, r9, r0, lsl #24
     f6c:	0009b808 	andeq	fp, r9, r8, lsl #16
     f70:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     f7c:	096a0000 	stmdbeq	sl!, {}^	; <UNPREDICTABLE>
     f80:	09740800 	ldmdbeq	r4!, {fp}^
     f84:	00010800 	andeq	r0, r1, r0, lsl #16
     f88:	00000053 	andeq	r0, r0, r3, asr r0
	...
     f94:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
     f98:	62080009 	andvs	r0, r8, #9
     f9c:	03080009 	movweq	r0, #32777	; 0x8009
     fa0:	9f0c7200 	svcls	0x000c7200
     fa4:	08000962 	stmdaeq	r0, {r1, r5, r6, r8, fp}
     fa8:	08000966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp}
     fac:	66530001 	ldrbvs	r0, [r3], -r1
     fb0:	66080009 	strvs	r0, [r8], -r9
     fb4:	03080009 	movweq	r0, #32777	; 0x8009
     fb8:	9f0c7200 	svcls	0x000c7200
	...
     fc4:	09660100 	stmdbeq	r6!, {r8}^
     fc8:	09660800 	stmdbeq	r6!, {fp}^
     fcc:	00010800 	andeq	r0, r1, r0, lsl #16
     fd0:	00000053 	andeq	r0, r0, r3, asr r0
     fd4:	00000000 	andeq	r0, r0, r0
     fd8:	00000100 	andeq	r0, r0, r0, lsl #2
     fdc:	00096a01 	andeq	r6, r9, r1, lsl #20
     fe0:	00096c08 	andeq	r6, r9, r8, lsl #24
     fe4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     fe8:	096c9f0c 	stmdbeq	ip!, {r2, r3, r8, r9, sl, fp, ip, pc}^
     fec:	09700800 	ldmdbeq	r0!, {fp}^
     ff0:	00010800 	andeq	r0, r1, r0, lsl #16
     ff4:	00000052 	andeq	r0, r0, r2, asr r0
     ff8:	00000000 	andeq	r0, r0, r0
     ffc:	6a010100 	bvs	41404 <_Min_Heap_Size+0x40c04>
    1000:	70080009 	andvc	r0, r8, r9
    1004:	01080009 	tsteq	r8, r9
    1008:	00005300 	andeq	r5, r0, r0, lsl #6
    100c:	00000000 	andeq	r0, r0, r0
    1010:	01000000 	mrseq	r0, (UNDEF: 0)
    1014:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
    1018:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
    101c:	00510001 	subseq	r0, r1, r1
	...
    1028:	00098200 	andeq	r8, r9, r0, lsl #4
    102c:	00098e08 	andeq	r8, r9, r8, lsl #28
    1030:	53000108 	movwpl	r0, #264	; 0x108
	...
    1040:	09760100 	ldmdbeq	r6!, {r8}^
    1044:	097a0800 	ldmdbeq	sl!, {fp}^
    1048:	00030800 	andeq	r0, r3, r0, lsl #16
    104c:	7a9f1472 	bvc	fe7c621c <_estack+0xde7c4fe4>
    1050:	7e080009 	cdpvc	0, 0, cr0, cr8, cr9, {0}
    1054:	01080009 	tsteq	r8, r9
    1058:	097e5300 	ldmdbeq	lr!, {r8, r9, ip, lr}^
    105c:	097e0800 	ldmdbeq	lr!, {fp}^
    1060:	00030800 	andeq	r0, r3, r0, lsl #16
    1064:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1070:	00097e01 	andeq	r7, r9, r1, lsl #28
    1074:	00097e08 	andeq	r7, r9, r8, lsl #28
    1078:	53000108 	movwpl	r0, #264	; 0x108
	...
    1084:	01000001 	tsteq	r0, r1
    1088:	08000982 	stmdaeq	r0, {r1, r7, r8, fp}
    108c:	08000984 	stmdaeq	r0, {r2, r7, r8, fp}
    1090:	14720003 	ldrbtne	r0, [r2], #-3
    1094:	0009849f 	muleq	r9, pc, r4	; <UNPREDICTABLE>
    1098:	00098808 	andeq	r8, r9, r8, lsl #16
    109c:	52000108 	andpl	r0, r0, #8, 2
	...
    10a8:	09820101 	stmibeq	r2, {r0, r8}
    10ac:	09880800 	stmibeq	r8, {fp}
    10b0:	00010800 	andeq	r0, r1, r0, lsl #16
    10b4:	00000053 	andeq	r0, r0, r3, asr r0
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    10c0:	88080009 	stmdahi	r8, {r0, r3}
    10c4:	01080009 	tsteq	r8, r9
    10c8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    10d4:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    10d8:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
    10dc:	00530001 	subseq	r0, r3, r1
	...
    10ec:	0009a001 	andeq	sl, r9, r1
    10f0:	0009a408 	andeq	sl, r9, r8, lsl #8
    10f4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    10f8:	09a49f0c 	stmibeq	r4!, {r2, r3, r8, r9, sl, fp, ip, pc}
    10fc:	09a80800 	stmibeq	r8!, {fp}
    1100:	00010800 	andeq	r0, r1, r0, lsl #16
    1104:	0009a853 	andeq	sl, r9, r3, asr r8
    1108:	0009a808 	andeq	sl, r9, r8, lsl #16
    110c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    1110:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1114:	00000000 	andeq	r0, r0, r0
    1118:	01000000 	mrseq	r0, (UNDEF: 0)
    111c:	080009a8 	stmdaeq	r0, {r3, r5, r7, r8, fp}
    1120:	080009a8 	stmdaeq	r0, {r3, r5, r7, r8, fp}
    1124:	00530001 	subseq	r0, r3, r1
    1128:	00000000 	andeq	r0, r0, r0
    112c:	01000000 	mrseq	r0, (UNDEF: 0)
    1130:	ac010000 	stcge	0, cr0, [r1], {-0}
    1134:	ae080009 	cdpge	0, 0, cr0, cr8, cr9, {0}
    1138:	03080009 	movweq	r0, #32777	; 0x8009
    113c:	9f0c7200 	svcls	0x000c7200
    1140:	080009ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, fp}
    1144:	080009b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, fp}
    1148:	00520001 	subseq	r0, r2, r1
    114c:	00000000 	andeq	r0, r0, r0
    1150:	01000000 	mrseq	r0, (UNDEF: 0)
    1154:	0009ac01 	andeq	sl, r9, r1, lsl #24
    1158:	0009b208 	andeq	fp, r9, r8, lsl #4
    115c:	53000108 	movwpl	r0, #264	; 0x108
	...
    1168:	09b20100 	ldmibeq	r2!, {r8}
    116c:	09b20800 	ldmibeq	r2!, {fp}
    1170:	00010800 	andeq	r0, r1, r0, lsl #16
    1174:	00000051 	andeq	r0, r0, r1, asr r0
    1178:	00000000 	andeq	r0, r0, r0
    117c:	00000100 	andeq	r0, r0, r0, lsl #2
    1180:	00000000 	andeq	r0, r0, r0
    1184:	01000000 	mrseq	r0, (UNDEF: 0)
    1188:	00005000 	andeq	r5, r0, r0
	...
    119c:	00530001 	subseq	r0, r3, r1
	...
    11ac:	00000001 	andeq	r0, r0, r1
    11b0:	00000000 	andeq	r0, r0, r0
    11b4:	72000300 	andvc	r0, r0, #0, 6
    11b8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00010000 	andeq	r0, r1, r0
    11c4:	00000053 	andeq	r0, r0, r3, asr r0
    11c8:	00000000 	andeq	r0, r0, r0
    11cc:	72000300 	andvc	r0, r0, #0, 6
    11d0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    11d4:	00000000 	andeq	r0, r0, r0
    11d8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    11e4:	00530001 	subseq	r0, r3, r1
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	01000000 	mrseq	r0, (UNDEF: 0)
    11f0:	00010000 	andeq	r0, r1, r0
    11f4:	00000000 	andeq	r0, r0, r0
    11f8:	03000000 	movweq	r0, #0
    11fc:	9f0c7200 	svcls	0x000c7200
	...
    1208:	00520001 	subseq	r0, r2, r1
    120c:	00000000 	andeq	r0, r0, r0
    1210:	01000000 	mrseq	r0, (UNDEF: 0)
    1214:	00000001 	andeq	r0, r0, r1
    1218:	00000000 	andeq	r0, r0, r0
    121c:	53000100 	movwpl	r0, #256	; 0x100
	...
    1228:	00000100 	andeq	r0, r0, r0, lsl #2
    122c:	00000000 	andeq	r0, r0, r0
    1230:	00010000 	andeq	r0, r1, r0
    1234:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1244:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1250:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1254:	0000000c 	andeq	r0, r0, ip
    1258:	00000000 	andeq	r0, r0, r0
    125c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1260:	00000018 	andeq	r0, r0, r8, lsl r0
    1264:	00000000 	andeq	r0, r0, r0
    1268:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    126c:	0000000c 	andeq	r0, r0, ip
	...
    1280:	01000000 	mrseq	r0, (UNDEF: 0)
    1284:	00005000 	andeq	r5, r0, r0
    1288:	00000000 	andeq	r0, r0, r0
    128c:	00010000 	andeq	r0, r1, r0
    1290:	00000054 	andeq	r0, r0, r4, asr r0
    1294:	00000000 	andeq	r0, r0, r0
    1298:	f3000400 	vshl.u8	d0, d0, d0
    129c:	009f5001 	addseq	r5, pc, r1
	...
    12b4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    12c0:	00520001 	subseq	r0, r2, r1
    12c4:	00000000 	andeq	r0, r0, r0
    12c8:	04000000 	streq	r0, [r0], #-0
    12cc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    12d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    12e8:	52000100 	andpl	r0, r0, #0, 2
	...
    12f4:	2c700002 	ldclcs	0, cr0, [r0], #-8
	...
    1300:	2c740002 	ldclcs	0, cr0, [r4], #-8
	...
    130c:	01f30004 	mvnseq	r0, r4
    1310:	00009f52 	andeq	r9, r0, r2, asr pc
    1314:	00000000 	andeq	r0, r0, r0
    1318:	00010000 	andeq	r0, r1, r0
	...
    1324:	adf20006 	ldclge	0, cr0, [r2, #24]!
    1328:	00000045 	andeq	r0, r0, r5, asr #32
	...
    133c:	00010000 	andeq	r0, r1, r0
    1340:	00000053 	andeq	r0, r0, r3, asr r0
	...
    134c:	00010000 	andeq	r0, r1, r0
    1350:	00000000 	andeq	r0, r0, r0
    1354:	03000000 	movweq	r0, #0
    1358:	9f0c7200 	svcls	0x000c7200
	...
    1364:	00530001 	subseq	r0, r3, r1
    1368:	00000000 	andeq	r0, r0, r0
    136c:	03000000 	movweq	r0, #0
    1370:	9f0c7200 	svcls	0x000c7200
	...
    137c:	00000100 	andeq	r0, r0, r0, lsl #2
    1380:	00000000 	andeq	r0, r0, r0
    1384:	00010000 	andeq	r0, r1, r0
    1388:	00000053 	andeq	r0, r0, r3, asr r0
    138c:	00000000 	andeq	r0, r0, r0
    1390:	00000100 	andeq	r0, r0, r0, lsl #2
    1394:	00000001 	andeq	r0, r0, r1
    1398:	00000000 	andeq	r0, r0, r0
    139c:	72000300 	andvc	r0, r0, #0, 6
    13a0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    13a4:	00000000 	andeq	r0, r0, r0
    13a8:	00010000 	andeq	r0, r1, r0
    13ac:	00000052 	andeq	r0, r0, r2, asr r0
    13b0:	00000000 	andeq	r0, r0, r0
    13b4:	00010100 	andeq	r0, r1, r0, lsl #2
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	01000000 	mrseq	r0, (UNDEF: 0)
    13c0:	00005300 	andeq	r5, r0, r0, lsl #6
    13c4:	00000000 	andeq	r0, r0, r0
    13c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    13d4:	00510001 	subseq	r0, r1, r1
	...
    13e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    13f8:	00000100 	andeq	r0, r0, r0, lsl #2
    13fc:	00000000 	andeq	r0, r0, r0
    1400:	00030000 	andeq	r0, r3, r0
    1404:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1408:	00000000 	andeq	r0, r0, r0
    140c:	01000000 	mrseq	r0, (UNDEF: 0)
    1410:	00005300 	andeq	r5, r0, r0, lsl #6
    1414:	00000000 	andeq	r0, r0, r0
    1418:	00030000 	andeq	r0, r3, r0
    141c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1428:	00000001 	andeq	r0, r0, r1
    142c:	00000000 	andeq	r0, r0, r0
    1430:	53000100 	movwpl	r0, #256	; 0x100
	...
    143c:	01000001 	tsteq	r0, r1
	...
    1448:	14720003 	ldrbtne	r0, [r2], #-3
    144c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1450:	00000000 	andeq	r0, r0, r0
    1454:	52000100 	andpl	r0, r0, #0, 2
	...
    1460:	00000101 	andeq	r0, r0, r1, lsl #2
    1464:	00000000 	andeq	r0, r0, r0
    1468:	00010000 	andeq	r0, r1, r0
    146c:	00000053 	andeq	r0, r0, r3, asr r0
    1470:	00000000 	andeq	r0, r0, r0
    1474:	00010000 	andeq	r0, r1, r0
    1478:	00000000 	andeq	r0, r0, r0
    147c:	01000000 	mrseq	r0, (UNDEF: 0)
    1480:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1494:	00530001 	subseq	r0, r3, r1
	...
    14a4:	00000001 	andeq	r0, r0, r1
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	72000300 	andvc	r0, r0, #0, 6
    14b0:	00009f14 	andeq	r9, r0, r4, lsl pc
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	00010000 	andeq	r0, r1, r0
    14bc:	00000053 	andeq	r0, r0, r3, asr r0
    14c0:	00000000 	andeq	r0, r0, r0
    14c4:	72000300 	andvc	r0, r0, #0, 6
    14c8:	00009f14 	andeq	r9, r0, r4, lsl pc
    14cc:	00000000 	andeq	r0, r0, r0
    14d0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    14dc:	00530001 	subseq	r0, r3, r1
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	01000000 	mrseq	r0, (UNDEF: 0)
    14e8:	00010000 	andeq	r0, r1, r0
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	03000000 	movweq	r0, #0
    14f4:	9f147200 	svcls	0x00147200
	...
    1500:	00520001 	subseq	r0, r2, r1
    1504:	00000000 	andeq	r0, r0, r0
    1508:	01000000 	mrseq	r0, (UNDEF: 0)
    150c:	00000001 	andeq	r0, r0, r1
    1510:	00000000 	andeq	r0, r0, r0
    1514:	53000100 	movwpl	r0, #256	; 0x100
	...
    1520:	00000100 	andeq	r0, r0, r0, lsl #2
    1524:	00000000 	andeq	r0, r0, r0
    1528:	00010000 	andeq	r0, r1, r0
    152c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1540:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    154c:	01f30004 	mvnseq	r0, r4
    1550:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1568:	00520001 	subseq	r0, r2, r1
    156c:	00000000 	andeq	r0, r0, r0
    1570:	02000000 	andeq	r0, r0, #0
    1574:	002c7000 	eoreq	r7, ip, r0
    1578:	00000000 	andeq	r0, r0, r0
    157c:	04000000 	streq	r0, [r0], #-0
    1580:	5201f300 	andpl	pc, r1, #0, 6
    1584:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1588:	00000000 	andeq	r0, r0, r0
    158c:	000b8c00 	andeq	r8, fp, r0, lsl #24
    1590:	000b9008 	andeq	r9, fp, r8
    1594:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    1598:	000b9000 	andeq	r9, fp, r0
    159c:	000b9208 	andeq	r9, fp, r8, lsl #4
    15a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15a4:	000b921c 	andeq	r9, fp, ip, lsl r2
    15a8:	000c0a08 	andeq	r0, ip, r8, lsl #20
    15ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15b0:	000c0a28 	andeq	r0, ip, r8, lsr #20
    15b4:	000c0e08 	andeq	r0, ip, r8, lsl #28
    15b8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15bc:	000c0e1c 	andeq	r0, ip, ip, lsl lr
    15c0:	000c1608 	andeq	r1, ip, r8, lsl #12
    15c4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15c8:	00000028 	andeq	r0, r0, r8, lsr #32
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	01010000 	mrseq	r0, (UNDEF: 1)
    15d4:	000b8c00 	andeq	r8, fp, r0, lsl #24
    15d8:	000b9e08 	andeq	r9, fp, r8, lsl #28
    15dc:	50000108 	andpl	r0, r0, r8, lsl #2
    15e0:	08000b9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, fp}
    15e4:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
    15e8:	00550001 	subseq	r0, r5, r1
	...
    15f4:	8c000101 	stfhis	f0, [r0], {1}
    15f8:	9e08000b 	cdpls	0, 0, cr0, cr8, cr11, {0}
    15fc:	0108000b 	tsteq	r8, fp
    1600:	0b9e5100 	bleq	fe795a08 <_estack+0xde7947d0>
    1604:	0c160800 	ldceq	8, cr0, [r6], {-0}
    1608:	00010800 	andeq	r0, r1, r0, lsl #16
    160c:	00000056 	andeq	r0, r0, r6, asr r0
    1610:	00000000 	andeq	r0, r0, r0
    1614:	01010000 	mrseq	r0, (UNDEF: 1)
    1618:	000b8c00 	andeq	r8, fp, r0, lsl #24
    161c:	000b9e08 	andeq	r9, fp, r8, lsl #28
    1620:	52000108 	andpl	r0, r0, #8, 2
    1624:	08000b9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, fp}
    1628:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
    162c:	01f30004 	mvnseq	r0, r4
    1630:	00009f52 	andeq	r9, r0, r2, asr pc
    1634:	00000000 	andeq	r0, r0, r0
    1638:	01000000 	mrseq	r0, (UNDEF: 0)
    163c:	0b8c0001 	bleq	fe301648 <_estack+0xde300410>
    1640:	0b9e0800 	bleq	fe783648 <_estack+0xde782410>
    1644:	00010800 	andeq	r0, r1, r0, lsl #16
    1648:	000b9e53 	andeq	r9, fp, r3, asr lr
    164c:	000c1608 	andeq	r1, ip, r8, lsl #12
    1650:	59000108 	stmdbpl	r0, {r3, r8}
	...
    1660:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
    1664:	08000c0e 	stmdaeq	r0, {r1, r2, r3, sl, fp}
    1668:	00910002 	addseq	r0, r1, r2
    166c:	08000c0e 	stmdaeq	r0, {r1, r2, r3, sl, fp}
    1670:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
    1674:	00910002 	addseq	r0, r1, r2
	...
    1688:	007d0002 	rsbseq	r0, sp, r2
	...
    1694:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    16b0:	00500001 	subseq	r0, r0, r1
    16b4:	00000000 	andeq	r0, r0, r0
    16b8:	04000000 	streq	r0, [r0], #-0
    16bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    16c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    16c4:	00000000 	andeq	r0, r0, r0
    16c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    16d4:	01f30004 	mvnseq	r0, r4
    16d8:	00009f50 	andeq	r9, r0, r0, asr pc
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	00010000 	andeq	r0, r1, r0
	...
    16f4:	9f300002 	svcls	0x00300002
	...
    1700:	0072000b 	rsbseq	r0, r2, fp
    1704:	301a8008 	andscc	r8, sl, r8
    1708:	1aff082e 	bne	fffc37c8 <_estack+0xdffc2590>
    170c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1710:	00000000 	andeq	r0, r0, r0
    1714:	72000800 	andvc	r0, r0, #0, 16
    1718:	082e3000 	stmdaeq	lr!, {ip, sp}
    171c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    1720:	00000000 	andeq	r0, r0, r0
    1724:	0b000000 	bleq	172c <_Min_Heap_Size+0xf2c>
    1728:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    172c:	2e301a80 	vaddcs.f32	s2, s1, s0
    1730:	9f1aff08 	svcls	0x001aff08
	...
    173c:	00720008 	rsbseq	r0, r2, r8
    1740:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    1744:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    1758:	00540001 	subseq	r0, r4, r1
	...
    1768:	02000000 	andeq	r0, r0, #0
    176c:	00007d00 	andeq	r7, r0, r0, lsl #26
    1770:	00000000 	andeq	r0, r0, r0
    1774:	02000000 	andeq	r0, r0, #0
    1778:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    178c:	01000000 	mrseq	r0, (UNDEF: 0)
    1790:	00005000 	andeq	r5, r0, r0
    1794:	00000000 	andeq	r0, r0, r0
    1798:	00040000 	andeq	r0, r4, r0
    179c:	9f5001f3 	svcls	0x005001f3
	...
    17b4:	00500001 	subseq	r0, r0, r1
    17b8:	00000000 	andeq	r0, r0, r0
    17bc:	01000000 	mrseq	r0, (UNDEF: 0)
    17c0:	00005000 	andeq	r5, r0, r0
	...
    17d0:	00020000 	andeq	r0, r2, r0
    17d4:	0000007d 	andeq	r0, r0, sp, ror r0
    17d8:	00000000 	andeq	r0, r0, r0
    17dc:	00020000 	andeq	r0, r2, r0
    17e0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    17f8:	00500001 	subseq	r0, r0, r1
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	01000000 	mrseq	r0, (UNDEF: 0)
    1804:	00005300 	andeq	r5, r0, r0, lsl #6
    1808:	00000000 	andeq	r0, r0, r0
    180c:	00040000 	andeq	r0, r4, r0
    1810:	9f5001f3 	svcls	0x005001f3
	...
    1828:	00500001 	subseq	r0, r0, r1
    182c:	00000000 	andeq	r0, r0, r0
    1830:	01000000 	mrseq	r0, (UNDEF: 0)
    1834:	00005000 	andeq	r5, r0, r0
	...
    1848:	00530001 	subseq	r0, r3, r1
	...
    1858:	00000001 	andeq	r0, r0, r1
    185c:	00000000 	andeq	r0, r0, r0
    1860:	72000300 	andvc	r0, r0, #0, 6
    1864:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1868:	00000000 	andeq	r0, r0, r0
    186c:	00010000 	andeq	r0, r1, r0
    1870:	00000053 	andeq	r0, r0, r3, asr r0
    1874:	00000000 	andeq	r0, r0, r0
    1878:	72000300 	andvc	r0, r0, #0, 6
    187c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1880:	00000000 	andeq	r0, r0, r0
    1884:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1890:	00530001 	subseq	r0, r3, r1
    1894:	00000000 	andeq	r0, r0, r0
    1898:	01000000 	mrseq	r0, (UNDEF: 0)
    189c:	00010000 	andeq	r0, r1, r0
    18a0:	00000000 	andeq	r0, r0, r0
    18a4:	03000000 	movweq	r0, #0
    18a8:	9f0c7200 	svcls	0x000c7200
	...
    18b4:	00520001 	subseq	r0, r2, r1
    18b8:	00000000 	andeq	r0, r0, r0
    18bc:	01000000 	mrseq	r0, (UNDEF: 0)
    18c0:	00000001 	andeq	r0, r0, r1
    18c4:	00000000 	andeq	r0, r0, r0
    18c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    18d4:	00000100 	andeq	r0, r0, r0, lsl #2
    18d8:	00000000 	andeq	r0, r0, r0
    18dc:	00010000 	andeq	r0, r1, r0
    18e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    18f0:	01000000 	mrseq	r0, (UNDEF: 0)
    18f4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1900:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    190c:	14720003 	ldrbtne	r0, [r2], #-3
    1910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1914:	00000000 	andeq	r0, r0, r0
    1918:	53000100 	movwpl	r0, #256	; 0x100
	...
    1924:	14720003 	ldrbtne	r0, [r2], #-3
    1928:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    192c:	00000000 	andeq	r0, r0, r0
    1930:	00010000 	andeq	r0, r1, r0
    1934:	00000000 	andeq	r0, r0, r0
    1938:	01000000 	mrseq	r0, (UNDEF: 0)
    193c:	00005300 	andeq	r5, r0, r0, lsl #6
    1940:	00000000 	andeq	r0, r0, r0
    1944:	00010000 	andeq	r0, r1, r0
    1948:	00000100 	andeq	r0, r0, r0, lsl #2
    194c:	00000000 	andeq	r0, r0, r0
    1950:	00030000 	andeq	r0, r3, r0
    1954:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1958:	00000000 	andeq	r0, r0, r0
    195c:	01000000 	mrseq	r0, (UNDEF: 0)
    1960:	00005200 	andeq	r5, r0, r0, lsl #4
    1964:	00000000 	andeq	r0, r0, r0
    1968:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1974:	00530001 	subseq	r0, r3, r1
	...
    1980:	00000001 	andeq	r0, r0, r1
    1984:	00000000 	andeq	r0, r0, r0
    1988:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    199c:	00010000 	andeq	r0, r1, r0
    19a0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    19ac:	00010000 	andeq	r0, r1, r0
    19b0:	00000000 	andeq	r0, r0, r0
    19b4:	03000000 	movweq	r0, #0
    19b8:	9f147200 	svcls	0x00147200
	...
    19c4:	00530001 	subseq	r0, r3, r1
    19c8:	00000000 	andeq	r0, r0, r0
    19cc:	03000000 	movweq	r0, #0
    19d0:	9f147200 	svcls	0x00147200
	...
    19dc:	00000100 	andeq	r0, r0, r0, lsl #2
    19e0:	00000000 	andeq	r0, r0, r0
    19e4:	00010000 	andeq	r0, r1, r0
    19e8:	00000053 	andeq	r0, r0, r3, asr r0
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	00000100 	andeq	r0, r0, r0, lsl #2
    19f4:	00000001 	andeq	r0, r0, r1
    19f8:	00000000 	andeq	r0, r0, r0
    19fc:	72000300 	andvc	r0, r0, #0, 6
    1a00:	00009f14 	andeq	r9, r0, r4, lsl pc
    1a04:	00000000 	andeq	r0, r0, r0
    1a08:	00010000 	andeq	r0, r1, r0
    1a0c:	00000052 	andeq	r0, r0, r2, asr r0
    1a10:	00000000 	andeq	r0, r0, r0
    1a14:	00010100 	andeq	r0, r1, r0, lsl #2
    1a18:	00000000 	andeq	r0, r0, r0
    1a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a20:	00005300 	andeq	r5, r0, r0, lsl #6
    1a24:	00000000 	andeq	r0, r0, r0
    1a28:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1a34:	00510001 	subseq	r0, r1, r1
	...
    1a48:	53000100 	movwpl	r0, #256	; 0x100
	...
    1a58:	00000100 	andeq	r0, r0, r0, lsl #2
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	00030000 	andeq	r0, r3, r0
    1a64:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1a68:	00000000 	andeq	r0, r0, r0
    1a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a70:	00005300 	andeq	r5, r0, r0, lsl #6
    1a74:	00000000 	andeq	r0, r0, r0
    1a78:	00030000 	andeq	r0, r3, r0
    1a7c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1a88:	00000001 	andeq	r0, r0, r1
    1a8c:	00000000 	andeq	r0, r0, r0
    1a90:	53000100 	movwpl	r0, #256	; 0x100
	...
    1a9c:	01000001 	tsteq	r0, r1
	...
    1aa8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1aac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ab0:	00000000 	andeq	r0, r0, r0
    1ab4:	52000100 	andpl	r0, r0, #0, 2
	...
    1ac0:	00000101 	andeq	r0, r0, r1, lsl #2
    1ac4:	00000000 	andeq	r0, r0, r0
    1ac8:	00010000 	andeq	r0, r1, r0
    1acc:	00000053 	andeq	r0, r0, r3, asr r0
    1ad0:	00000000 	andeq	r0, r0, r0
    1ad4:	00010000 	andeq	r0, r1, r0
    1ad8:	00000000 	andeq	r0, r0, r0
    1adc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ae0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1af0:	00020000 	andeq	r0, r2, r0
    1af4:	0000007d 	andeq	r0, r0, sp, ror r0
    1af8:	00000000 	andeq	r0, r0, r0
    1afc:	00020000 	andeq	r0, r2, r0
    1b00:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1b14:	00010000 	andeq	r0, r1, r0
    1b18:	00000050 	andeq	r0, r0, r0, asr r0
    1b1c:	00000000 	andeq	r0, r0, r0
    1b20:	f3000400 	vshl.u8	d0, d0, d0
    1b24:	009f5001 	addseq	r5, pc, r1
    1b28:	00000000 	andeq	r0, r0, r0
    1b2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1b38:	02000000 	andeq	r0, r0, #0
    1b3c:	00387000 	eorseq	r7, r8, r0
    1b40:	00000000 	andeq	r0, r0, r0
    1b44:	01000000 	mrseq	r0, (UNDEF: 0)
    1b48:	00005000 	andeq	r5, r0, r0
	...
    1b58:	00020000 	andeq	r0, r2, r0
    1b5c:	0000007d 	andeq	r0, r0, sp, ror r0
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	00020000 	andeq	r0, r2, r0
    1b68:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1b80:	00500001 	subseq	r0, r0, r1
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	01000000 	mrseq	r0, (UNDEF: 0)
    1b8c:	00005300 	andeq	r5, r0, r0, lsl #6
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	00040000 	andeq	r0, r4, r0
    1b98:	9f5001f3 	svcls	0x005001f3
	...
    1bb0:	00500001 	subseq	r0, r0, r1
    1bb4:	00000000 	andeq	r0, r0, r0
    1bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bbc:	00005000 	andeq	r5, r0, r0
	...
    1bd0:	00530001 	subseq	r0, r3, r1
	...
    1be0:	00000001 	andeq	r0, r0, r1
    1be4:	00000000 	andeq	r0, r0, r0
    1be8:	72000300 	andvc	r0, r0, #0, 6
    1bec:	00009f14 	andeq	r9, r0, r4, lsl pc
    1bf0:	00000000 	andeq	r0, r0, r0
    1bf4:	00010000 	andeq	r0, r1, r0
    1bf8:	00000053 	andeq	r0, r0, r3, asr r0
    1bfc:	00000000 	andeq	r0, r0, r0
    1c00:	72000300 	andvc	r0, r0, #0, 6
    1c04:	00009f14 	andeq	r9, r0, r4, lsl pc
    1c08:	00000000 	andeq	r0, r0, r0
    1c0c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1c18:	00530001 	subseq	r0, r3, r1
    1c1c:	00000000 	andeq	r0, r0, r0
    1c20:	01000000 	mrseq	r0, (UNDEF: 0)
    1c24:	00010000 	andeq	r0, r1, r0
    1c28:	00000000 	andeq	r0, r0, r0
    1c2c:	03000000 	movweq	r0, #0
    1c30:	9f147200 	svcls	0x00147200
	...
    1c3c:	00520001 	subseq	r0, r2, r1
    1c40:	00000000 	andeq	r0, r0, r0
    1c44:	01000000 	mrseq	r0, (UNDEF: 0)
    1c48:	00000001 	andeq	r0, r0, r1
    1c4c:	00000000 	andeq	r0, r0, r0
    1c50:	53000100 	movwpl	r0, #256	; 0x100
	...
    1c5c:	00000100 	andeq	r0, r0, r0, lsl #2
    1c60:	00000000 	andeq	r0, r0, r0
    1c64:	00010000 	andeq	r0, r1, r0
    1c68:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1c78:	01000000 	mrseq	r0, (UNDEF: 0)
    1c7c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1c88:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1c94:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1c98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1c9c:	00000000 	andeq	r0, r0, r0
    1ca0:	53000100 	movwpl	r0, #256	; 0x100
	...
    1cac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1cb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1cb4:	00000000 	andeq	r0, r0, r0
    1cb8:	00010000 	andeq	r0, r1, r0
    1cbc:	00000000 	andeq	r0, r0, r0
    1cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    1cc4:	00005300 	andeq	r5, r0, r0, lsl #6
    1cc8:	00000000 	andeq	r0, r0, r0
    1ccc:	00010000 	andeq	r0, r1, r0
    1cd0:	00000100 	andeq	r0, r0, r0, lsl #2
    1cd4:	00000000 	andeq	r0, r0, r0
    1cd8:	00030000 	andeq	r0, r3, r0
    1cdc:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ce8:	00005200 	andeq	r5, r0, r0, lsl #4
    1cec:	00000000 	andeq	r0, r0, r0
    1cf0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1cfc:	00530001 	subseq	r0, r3, r1
	...
    1d08:	00000001 	andeq	r0, r0, r1
    1d0c:	00000000 	andeq	r0, r0, r0
    1d10:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1d28:	00500001 	subseq	r0, r0, r1
    1d2c:	00000000 	andeq	r0, r0, r0
    1d30:	04000000 	streq	r0, [r0], #-0
    1d34:	5001f300 	andpl	pc, r1, r0, lsl #6
    1d38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1d4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1d58:	01f30004 	mvnseq	r0, r4
    1d5c:	00009f50 	andeq	r9, r0, r0, asr pc
    1d60:	00000000 	andeq	r0, r0, r0
    1d64:	00020000 	andeq	r0, r2, r0
	...
    1d70:	00020000 	andeq	r0, r2, r0
    1d74:	00009f30 	andeq	r9, r0, r0, lsr pc
    1d78:	00000000 	andeq	r0, r0, r0
    1d7c:	00010000 	andeq	r0, r1, r0
    1d80:	00000053 	andeq	r0, r0, r3, asr r0
    1d84:	00000000 	andeq	r0, r0, r0
    1d88:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1d94:	30000200 	andcc	r0, r0, r0, lsl #4
    1d98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d9c:	00000000 	andeq	r0, r0, r0
    1da0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1dbc:	00500001 	subseq	r0, r0, r1
    1dc0:	00000000 	andeq	r0, r0, r0
    1dc4:	04000000 	streq	r0, [r0], #-0
    1dc8:	5001f300 	andpl	pc, r1, r0, lsl #6
    1dcc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1dd0:	00000000 	andeq	r0, r0, r0
    1dd4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1de0:	01f30004 	mvnseq	r0, r4
    1de4:	00009f50 	andeq	r9, r0, r0, asr pc
    1de8:	00000000 	andeq	r0, r0, r0
    1dec:	00020000 	andeq	r0, r2, r0
	...
    1dfc:	00020000 	andeq	r0, r2, r0
    1e00:	00009f30 	andeq	r9, r0, r0, lsr pc
    1e04:	00000000 	andeq	r0, r0, r0
    1e08:	00010000 	andeq	r0, r1, r0
    1e0c:	00000053 	andeq	r0, r0, r3, asr r0
    1e10:	00000000 	andeq	r0, r0, r0
    1e14:	72000200 	andvc	r0, r0, #0, 4
    1e18:	0000000c 	andeq	r0, r0, ip
    1e1c:	00000000 	andeq	r0, r0, r0
    1e20:	30000200 	andcc	r0, r0, r0, lsl #4
    1e24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1e3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1e48:	01f30004 	mvnseq	r0, r4
    1e4c:	00009f50 	andeq	r9, r0, r0, asr pc
    1e50:	00000000 	andeq	r0, r0, r0
    1e54:	00010000 	andeq	r0, r1, r0
    1e58:	00000050 	andeq	r0, r0, r0, asr r0
    1e5c:	00000000 	andeq	r0, r0, r0
    1e60:	f3000400 	vshl.u8	d0, d0, d0
    1e64:	009f5001 	addseq	r5, pc, r1
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	02000000 	andeq	r0, r0, #0
	...
    1e7c:	02000000 	andeq	r0, r0, #0
    1e80:	009f3000 	addseq	r3, pc, r0
    1e84:	00000000 	andeq	r0, r0, r0
    1e88:	01000000 	mrseq	r0, (UNDEF: 0)
    1e8c:	00005300 	andeq	r5, r0, r0, lsl #6
    1e90:	00000000 	andeq	r0, r0, r0
    1e94:	00020000 	andeq	r0, r2, r0
    1e98:	00000c72 	andeq	r0, r0, r2, ror ip
    1e9c:	00000000 	andeq	r0, r0, r0
    1ea0:	00020000 	andeq	r0, r2, r0
    1ea4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    1eb4:	00020000 	andeq	r0, r2, r0
    1eb8:	0000007d 	andeq	r0, r0, sp, ror r0
    1ebc:	00000000 	andeq	r0, r0, r0
    1ec0:	00020000 	andeq	r0, r2, r0
    1ec4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1ed8:	00010000 	andeq	r0, r1, r0
    1edc:	00000050 	andeq	r0, r0, r0, asr r0
    1ee0:	00000000 	andeq	r0, r0, r0
    1ee4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    1ef8:	00010000 	andeq	r0, r1, r0
    1efc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1f08:	00010000 	andeq	r0, r1, r0
    1f0c:	00000000 	andeq	r0, r0, r0
    1f10:	03000000 	movweq	r0, #0
    1f14:	9f0c7200 	svcls	0x000c7200
	...
    1f20:	00530001 	subseq	r0, r3, r1
    1f24:	00000000 	andeq	r0, r0, r0
    1f28:	03000000 	movweq	r0, #0
    1f2c:	9f0c7200 	svcls	0x000c7200
	...
    1f38:	00000100 	andeq	r0, r0, r0, lsl #2
    1f3c:	00000000 	andeq	r0, r0, r0
    1f40:	00010000 	andeq	r0, r1, r0
    1f44:	00000053 	andeq	r0, r0, r3, asr r0
    1f48:	00000000 	andeq	r0, r0, r0
    1f4c:	00000100 	andeq	r0, r0, r0, lsl #2
    1f50:	00000001 	andeq	r0, r0, r1
    1f54:	00000000 	andeq	r0, r0, r0
    1f58:	72000300 	andvc	r0, r0, #0, 6
    1f5c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1f60:	00000000 	andeq	r0, r0, r0
    1f64:	00010000 	andeq	r0, r1, r0
    1f68:	00000052 	andeq	r0, r0, r2, asr r0
    1f6c:	00000000 	andeq	r0, r0, r0
    1f70:	00010100 	andeq	r0, r1, r0, lsl #2
    1f74:	00000000 	andeq	r0, r0, r0
    1f78:	01000000 	mrseq	r0, (UNDEF: 0)
    1f7c:	00005300 	andeq	r5, r0, r0, lsl #6
    1f80:	00000000 	andeq	r0, r0, r0
    1f84:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1f90:	00510001 	subseq	r0, r1, r1
	...
    1fa0:	02000000 	andeq	r0, r0, #0
    1fa4:	00007d00 	andeq	r7, r0, r0, lsl #26
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	02000000 	andeq	r0, r0, #0
    1fb0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1fc4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fc8:	00005000 	andeq	r5, r0, r0
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	00010000 	andeq	r0, r1, r0
    1fd4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fe8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1ff4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2000:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2004:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2008:	00000000 	andeq	r0, r0, r0
    200c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2018:	0c720003 	ldcleq	0, cr0, [r2], #-12
    201c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2020:	00000000 	andeq	r0, r0, r0
    2024:	00010000 	andeq	r0, r1, r0
    2028:	00000000 	andeq	r0, r0, r0
    202c:	01000000 	mrseq	r0, (UNDEF: 0)
    2030:	00005300 	andeq	r5, r0, r0, lsl #6
    2034:	00000000 	andeq	r0, r0, r0
    2038:	00010000 	andeq	r0, r1, r0
    203c:	00000100 	andeq	r0, r0, r0, lsl #2
    2040:	00000000 	andeq	r0, r0, r0
    2044:	00030000 	andeq	r0, r3, r0
    2048:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    204c:	00000000 	andeq	r0, r0, r0
    2050:	01000000 	mrseq	r0, (UNDEF: 0)
    2054:	00005200 	andeq	r5, r0, r0, lsl #4
    2058:	00000000 	andeq	r0, r0, r0
    205c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2068:	00530001 	subseq	r0, r3, r1
	...
    2074:	00000001 	andeq	r0, r0, r1
    2078:	00000000 	andeq	r0, r0, r0
    207c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2090:	007d0002 	rsbseq	r0, sp, r2
	...
    209c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    20b4:	00500001 	subseq	r0, r0, r1
    20b8:	00000000 	andeq	r0, r0, r0
    20bc:	01000000 	mrseq	r0, (UNDEF: 0)
    20c0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    20d4:	00530001 	subseq	r0, r3, r1
	...
    20e4:	00000001 	andeq	r0, r0, r1
    20e8:	00000000 	andeq	r0, r0, r0
    20ec:	72000300 	andvc	r0, r0, #0, 6
    20f0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    20f4:	00000000 	andeq	r0, r0, r0
    20f8:	00010000 	andeq	r0, r1, r0
    20fc:	00000053 	andeq	r0, r0, r3, asr r0
    2100:	00000000 	andeq	r0, r0, r0
    2104:	72000300 	andvc	r0, r0, #0, 6
    2108:	00009f0c 	andeq	r9, r0, ip, lsl #30
    210c:	00000000 	andeq	r0, r0, r0
    2110:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    211c:	00530001 	subseq	r0, r3, r1
    2120:	00000000 	andeq	r0, r0, r0
    2124:	01000000 	mrseq	r0, (UNDEF: 0)
    2128:	00010000 	andeq	r0, r1, r0
    212c:	00000000 	andeq	r0, r0, r0
    2130:	03000000 	movweq	r0, #0
    2134:	9f0c7200 	svcls	0x000c7200
	...
    2140:	00520001 	subseq	r0, r2, r1
    2144:	00000000 	andeq	r0, r0, r0
    2148:	01000000 	mrseq	r0, (UNDEF: 0)
    214c:	00000001 	andeq	r0, r0, r1
    2150:	00000000 	andeq	r0, r0, r0
    2154:	53000100 	movwpl	r0, #256	; 0x100
	...
    2160:	00000100 	andeq	r0, r0, r0, lsl #2
    2164:	00000000 	andeq	r0, r0, r0
    2168:	00010000 	andeq	r0, r1, r0
    216c:	00000051 	andeq	r0, r0, r1, asr r0
    2170:	00000000 	andeq	r0, r0, r0
    2174:	000f2800 	andeq	r2, pc, r0, lsl #16
    2178:	000f2a08 	andeq	r2, pc, r8, lsl #20
    217c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    2180:	000f2a00 	andeq	r2, pc, r0, lsl #20
    2184:	000f2c08 	andeq	r2, pc, r8, lsl #24
    2188:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    218c:	000f2c0c 	andeq	r2, pc, ip, lsl #24
    2190:	000f7a08 	andeq	r7, pc, r8, lsl #20
    2194:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    2198:	000f7a18 	andeq	r7, pc, r8, lsl sl	; <UNPREDICTABLE>
    219c:	000f7c08 	andeq	r7, pc, r8, lsl #24
    21a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    21a4:	000f7c0c 	andeq	r7, pc, ip, lsl #24
    21a8:	0011b008 	andseq	fp, r1, r8
    21ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    21b0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    21bc:	000f2800 	andeq	r2, pc, r0, lsl #16
    21c0:	000f3408 	andeq	r3, pc, r8, lsl #8
    21c4:	50000108 	andpl	r0, r0, r8, lsl #2
    21c8:	08000f34 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, fp}
    21cc:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
    21d0:	00540001 	subseq	r0, r4, r1
	...
    21e8:	000f3200 	andeq	r3, pc, r0, lsl #4
    21ec:	000f7808 	andeq	r7, pc, r8, lsl #16
    21f0:	53000108 	movwpl	r0, #264	; 0x108
    21f4:	08000f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp}
    21f8:	08000f81 	stmdaeq	r0, {r0, r7, r8, r9, sl, fp}
    21fc:	84530001 	ldrbhi	r0, [r3], #-1
    2200:	e008000f 	and	r0, r8, pc
    2204:	0108000f 	tsteq	r8, pc
    2208:	10345300 	eorsne	r5, r4, r0, lsl #6
    220c:	10390800 	eorsne	r0, r9, r0, lsl #16
    2210:	00010800 	andeq	r0, r1, r0, lsl #16
    2214:	00105853 	andseq	r5, r0, r3, asr r8
    2218:	00106a08 	andseq	r6, r0, r8, lsl #20
    221c:	53000108 	movwpl	r0, #264	; 0x108
    2220:	0800119c 	stmdaeq	r0, {r2, r3, r4, r7, r8, ip}
    2224:	080011a1 	stmdaeq	r0, {r0, r5, r7, r8, ip}
    2228:	a4530001 	ldrbge	r0, [r3], #-1
    222c:	a9080011 	stmdbge	r8, {r0, r4}
    2230:	01080011 	tsteq	r8, r1, lsl r0
    2234:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    224c:	0f340000 	svceq	0x00340000
    2250:	0f780800 	svceq	0x00780800
    2254:	00010800 	andeq	r0, r1, r0, lsl #16
    2258:	000f7c50 	andeq	r7, pc, r0, asr ip	; <UNPREDICTABLE>
    225c:	000f7e08 	andeq	r7, pc, r8, lsl #28
    2260:	50000108 	andpl	r0, r0, r8, lsl #2
    2264:	08000f84 	stmdaeq	r0, {r2, r7, r8, r9, sl, fp}
    2268:	08000fe0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, fp}
    226c:	34500001 	ldrbcc	r0, [r0], #-1
    2270:	36080010 			; <UNDEFINED> instruction: 0x36080010
    2274:	01080010 	tsteq	r8, r0, lsl r0
    2278:	10585000 	subsne	r5, r8, r0
    227c:	110a0800 	tstne	sl, r0, lsl #16
    2280:	00010800 	andeq	r0, r1, r0, lsl #16
    2284:	00112450 	andseq	r2, r1, r0, asr r4
    2288:	00113e08 	andseq	r3, r1, r8, lsl #28
    228c:	50000108 	andpl	r0, r0, r8, lsl #2
    2290:	0800119c 	stmdaeq	r0, {r2, r3, r4, r7, r8, ip}
    2294:	0800119e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, ip}
    2298:	a4500001 	ldrbge	r0, [r0], #-1
    229c:	a6080011 			; <UNDEFINED> instruction: 0xa6080011
    22a0:	01080011 	tsteq	r8, r1, lsl r0
    22a4:	00005000 	andeq	r5, r0, r0
	...
    22b0:	0f360000 	svceq	0x00360000
    22b4:	0f4e0800 	svceq	0x004e0800
    22b8:	00010800 	andeq	r0, r1, r0, lsl #16
    22bc:	000f7c51 	andeq	r7, pc, r1, asr ip	; <UNPREDICTABLE>
    22c0:	000f8108 	andeq	r8, pc, r8, lsl #2
    22c4:	51000108 	tstpl	r0, r8, lsl #2
	...
    22d0:	00030301 	andeq	r0, r3, r1, lsl #6
    22d4:	0f360000 	svceq	0x00360000
    22d8:	0f360800 	svceq	0x00360800
    22dc:	00020800 	andeq	r0, r2, r0, lsl #16
    22e0:	0f369f30 	svceq	0x00369f30
    22e4:	0f3a0800 	svceq	0x003a0800
    22e8:	00050800 	andeq	r0, r5, r0, lsl #16
    22ec:	1a3f0073 	bne	fc24c0 <_Min_Heap_Size+0xfc1cc0>
    22f0:	000f3a9f 	muleq	pc, pc, sl	; <UNPREDICTABLE>
    22f4:	0011b008 	andseq	fp, r1, r8
    22f8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    2304:	00000002 	andeq	r0, r0, r2
	...
    2310:	08000f36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, sl, fp}
    2314:	08000f78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, fp}
    2318:	9f300002 	svcls	0x00300002
    231c:	08000f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp}
    2320:	08000fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp}
    2324:	9f300002 	svcls	0x00300002
    2328:	08000fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp}
    232c:	08000ff7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp}
    2330:	00730008 	rsbseq	r0, r3, r8
    2334:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    2338:	10349f1a 	eorsne	r9, r4, sl, lsl pc
    233c:	103c0800 	eorsne	r0, ip, r0, lsl #16
    2340:	00020800 	andeq	r0, r2, r0, lsl #16
    2344:	104c9f30 	subne	r9, ip, r0, lsr pc
    2348:	10510800 	subsne	r0, r1, r0, lsl #16
    234c:	00080800 	andeq	r0, r8, r0, lsl #16
    2350:	2e300073 	mrccs	0, 1, r0, cr0, cr3, {3}
    2354:	9f1aff08 	svcls	0x001aff08
    2358:	08001058 	stmdaeq	r0, {r3, r4, r6, ip}
    235c:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
    2360:	9f300002 	svcls	0x00300002
	...
    236c:	10100000 	andsne	r0, r0, r0
    2370:	101c0800 	andsne	r0, ip, r0, lsl #16
    2374:	00010800 	andeq	r0, r1, r0, lsl #16
    2378:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2384:	04010000 	streq	r0, [r1], #-0
    2388:	08080010 	stmdaeq	r8, {r4}
    238c:	03080010 	movweq	r0, #32784	; 0x8010
    2390:	9f147200 	svcls	0x00147200
    2394:	08001008 	stmdaeq	r0, {r3, ip}
    2398:	0800100c 	stmdaeq	r0, {r2, r3, ip}
    239c:	0c530001 	mrrceq	0, 0, r0, r3, cr1
    23a0:	0c080010 	stceq	0, cr0, [r8], {16}
    23a4:	03080010 	movweq	r0, #32784	; 0x8010
    23a8:	9f147200 	svcls	0x00147200
	...
    23b4:	100c0100 	andne	r0, ip, r0, lsl #2
    23b8:	100c0800 	andne	r0, ip, r0, lsl #16
    23bc:	00010800 	andeq	r0, r1, r0, lsl #16
    23c0:	00000053 	andeq	r0, r0, r3, asr r0
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	00000100 	andeq	r0, r0, r0, lsl #2
    23cc:	00101001 	andseq	r1, r0, r1
    23d0:	00101208 	andseq	r1, r0, r8, lsl #4
    23d4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    23d8:	10129f14 	andsne	r9, r2, r4, lsl pc
    23dc:	10160800 	andsne	r0, r6, r0, lsl #16
    23e0:	00010800 	andeq	r0, r1, r0, lsl #16
    23e4:	00000052 	andeq	r0, r0, r2, asr r0
    23e8:	00000000 	andeq	r0, r0, r0
    23ec:	10010100 	andne	r0, r1, r0, lsl #2
    23f0:	16080010 			; <UNDEFINED> instruction: 0x16080010
    23f4:	01080010 	tsteq	r8, r0, lsl r0
    23f8:	00005300 	andeq	r5, r0, r0, lsl #6
    23fc:	00000000 	andeq	r0, r0, r0
    2400:	01000000 	mrseq	r0, (UNDEF: 0)
    2404:	08001016 	stmdaeq	r0, {r1, r2, r4, ip}
    2408:	08001016 	stmdaeq	r0, {r1, r2, r4, ip}
    240c:	00510001 	subseq	r0, r1, r1
	...
    2418:	86000000 	strhi	r0, [r0], -r0
    241c:	98080010 	stmdals	r8, {r4}
    2420:	01080010 	tsteq	r8, r0, lsl r0
    2424:	10985300 	addsne	r5, r8, r0, lsl #6
    2428:	10ec0800 	rscne	r0, ip, r0, lsl #16
    242c:	00020800 	andeq	r0, r2, r0, lsl #16
    2430:	00002e74 	andeq	r2, r0, r4, ror lr
	...
    243c:	080010ac 	stmdaeq	r0, {r2, r3, r5, r7, ip}
    2440:	080010b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, ip}
    2444:	00530001 	subseq	r0, r3, r1
	...
    2454:	0010a001 	andseq	sl, r0, r1
    2458:	0010a408 	andseq	sl, r0, r8, lsl #8
    245c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2460:	10a49f0c 	adcne	r9, r4, ip, lsl #30
    2464:	10a80800 	adcne	r0, r8, r0, lsl #16
    2468:	00010800 	andeq	r0, r1, r0, lsl #16
    246c:	0010a853 	andseq	sl, r0, r3, asr r8
    2470:	0010a808 	andseq	sl, r0, r8, lsl #16
    2474:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2478:	00009f0c 	andeq	r9, r0, ip, lsl #30
    247c:	00000000 	andeq	r0, r0, r0
    2480:	01000000 	mrseq	r0, (UNDEF: 0)
    2484:	080010a8 	stmdaeq	r0, {r3, r5, r7, ip}
    2488:	080010a8 	stmdaeq	r0, {r3, r5, r7, ip}
    248c:	00530001 	subseq	r0, r3, r1
    2490:	00000000 	andeq	r0, r0, r0
    2494:	01000000 	mrseq	r0, (UNDEF: 0)
    2498:	ac010000 	stcge	0, cr0, [r1], {-0}
    249c:	ae080010 	mcrge	0, 0, r0, cr8, cr0, {0}
    24a0:	03080010 	movweq	r0, #32784	; 0x8010
    24a4:	9f0c7200 	svcls	0x000c7200
    24a8:	080010ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, ip}
    24ac:	080010b2 	stmdaeq	r0, {r1, r4, r5, r7, ip}
    24b0:	00520001 	subseq	r0, r2, r1
    24b4:	00000000 	andeq	r0, r0, r0
    24b8:	01000000 	mrseq	r0, (UNDEF: 0)
    24bc:	0010ac01 	andseq	sl, r0, r1, lsl #24
    24c0:	0010b208 	andseq	fp, r0, r8, lsl #4
    24c4:	53000108 	movwpl	r0, #264	; 0x108
	...
    24d0:	10b20100 	adcsne	r0, r2, r0, lsl #2
    24d4:	10b20800 	adcsne	r0, r2, r0, lsl #16
    24d8:	00010800 	andeq	r0, r1, r0, lsl #16
    24dc:	00000051 	andeq	r0, r0, r1, asr r0
    24e0:	00000000 	andeq	r0, r0, r0
    24e4:	c4000000 	strgt	r0, [r0], #-0
    24e8:	ce080010 	mcrgt	0, 0, r0, cr8, cr0, {0}
    24ec:	01080010 	tsteq	r8, r0, lsl r0
    24f0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    24fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2500:	080010b8 	stmdaeq	r0, {r3, r4, r5, r7, ip}
    2504:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
    2508:	14720003 	ldrbtne	r0, [r2], #-3
    250c:	0010bc9f 	mulseq	r0, pc, ip	; <UNPREDICTABLE>
    2510:	0010c008 	andseq	ip, r0, r8
    2514:	53000108 	movwpl	r0, #264	; 0x108
    2518:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    251c:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    2520:	14720003 	ldrbtne	r0, [r2], #-3
    2524:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2528:	00000000 	andeq	r0, r0, r0
    252c:	c0010000 	andgt	r0, r1, r0
    2530:	c0080010 	andgt	r0, r8, r0, lsl r0
    2534:	01080010 	tsteq	r8, r0, lsl r0
    2538:	00005300 	andeq	r5, r0, r0, lsl #6
    253c:	00000000 	andeq	r0, r0, r0
    2540:	00010000 	andeq	r0, r1, r0
    2544:	10c40100 	sbcne	r0, r4, r0, lsl #2
    2548:	10c60800 	sbcne	r0, r6, r0, lsl #16
    254c:	00030800 	andeq	r0, r3, r0, lsl #16
    2550:	c69f1472 			; <UNDEFINED> instruction: 0xc69f1472
    2554:	ca080010 	bgt	20259c <_Min_Heap_Size+0x201d9c>
    2558:	01080010 	tsteq	r8, r0, lsl r0
    255c:	00005200 	andeq	r5, r0, r0, lsl #4
    2560:	00000000 	andeq	r0, r0, r0
    2564:	01010000 	mrseq	r0, (UNDEF: 1)
    2568:	080010c4 	stmdaeq	r0, {r2, r6, r7, ip}
    256c:	080010ca 	stmdaeq	r0, {r1, r3, r6, r7, ip}
    2570:	00530001 	subseq	r0, r3, r1
	...
    257c:	0010ca01 	andseq	ip, r0, r1, lsl #20
    2580:	0010ca08 	andseq	ip, r0, r8, lsl #20
    2584:	51000108 	tstpl	r0, r8, lsl #2
	...
    2590:	10dc0000 	sbcsne	r0, ip, r0
    2594:	10e80800 	rscne	r0, r8, r0, lsl #16
    2598:	00010800 	andeq	r0, r1, r0, lsl #16
    259c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    25a8:	d0010000 	andle	r0, r1, r0
    25ac:	d4080010 	strle	r0, [r8], #-16
    25b0:	03080010 	movweq	r0, #32784	; 0x8010
    25b4:	9f147200 	svcls	0x00147200
    25b8:	080010d4 	stmdaeq	r0, {r2, r4, r6, r7, ip}
    25bc:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
    25c0:	d8530001 	ldmdale	r3, {r0}^
    25c4:	d8080010 	stmdale	r8, {r4}
    25c8:	03080010 	movweq	r0, #32784	; 0x8010
    25cc:	9f147200 	svcls	0x00147200
	...
    25d8:	10d80100 	sbcsne	r0, r8, r0, lsl #2
    25dc:	10d80800 	sbcsne	r0, r8, r0, lsl #16
    25e0:	00010800 	andeq	r0, r1, r0, lsl #16
    25e4:	00000053 	andeq	r0, r0, r3, asr r0
    25e8:	00000000 	andeq	r0, r0, r0
    25ec:	00000100 	andeq	r0, r0, r0, lsl #2
    25f0:	0010dc01 	andseq	sp, r0, r1, lsl #24
    25f4:	0010de08 	andseq	sp, r0, r8, lsl #28
    25f8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    25fc:	10de9f14 	sbcsne	r9, lr, r4, lsl pc
    2600:	10e20800 	rscne	r0, r2, r0, lsl #16
    2604:	00010800 	andeq	r0, r1, r0, lsl #16
    2608:	00000052 	andeq	r0, r0, r2, asr r0
    260c:	00000000 	andeq	r0, r0, r0
    2610:	dc010100 	stfles	f0, [r1], {-0}
    2614:	e2080010 	and	r0, r8, #16
    2618:	01080010 	tsteq	r8, r0, lsl r0
    261c:	00005300 	andeq	r5, r0, r0, lsl #6
    2620:	00000000 	andeq	r0, r0, r0
    2624:	01000000 	mrseq	r0, (UNDEF: 0)
    2628:	080010e2 	stmdaeq	r0, {r1, r5, r6, r7, ip}
    262c:	080010e2 	stmdaeq	r0, {r1, r5, r6, r7, ip}
    2630:	00510001 	subseq	r0, r1, r1
	...
    263c:	0010fe00 	andseq	pc, r0, r0, lsl #28
    2640:	00110d08 	andseq	r0, r1, r8, lsl #26
    2644:	53000108 	movwpl	r0, #264	; 0x108
	...
    2654:	10f20100 	rscsne	r0, r2, r0, lsl #2
    2658:	10f60800 	rscsne	r0, r6, r0, lsl #16
    265c:	00030800 	andeq	r0, r3, r0, lsl #16
    2660:	f69f0c72 			; <UNDEFINED> instruction: 0xf69f0c72
    2664:	fa080010 	blx	2026ac <_Min_Heap_Size+0x201eac>
    2668:	01080010 	tsteq	r8, r0, lsl r0
    266c:	10fa5300 	rscsne	r5, sl, r0, lsl #6
    2670:	10fa0800 	rscsne	r0, sl, r0, lsl #16
    2674:	00030800 	andeq	r0, r3, r0, lsl #16
    2678:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2684:	0010fa01 	andseq	pc, r0, r1, lsl #20
    2688:	0010fa08 	andseq	pc, r0, r8, lsl #20
    268c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2698:	01000001 	tsteq	r0, r1
    269c:	080010fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, ip}
    26a0:	08001100 	stmdaeq	r0, {r8, ip}
    26a4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    26a8:	0011009f 	mulseq	r1, pc, r0	; <UNPREDICTABLE>
    26ac:	00110408 	andseq	r0, r1, r8, lsl #8
    26b0:	52000108 	andpl	r0, r0, #8, 2
	...
    26bc:	10fe0101 	rscsne	r0, lr, r1, lsl #2
    26c0:	11040800 	tstne	r4, r0, lsl #16
    26c4:	00010800 	andeq	r0, r1, r0, lsl #16
    26c8:	00000053 	andeq	r0, r0, r3, asr r0
    26cc:	00000000 	andeq	r0, r0, r0
    26d0:	04010000 	streq	r0, [r1], #-0
    26d4:	04080011 	streq	r0, [r8], #-17	; 0xffffffef
    26d8:	01080011 	tsteq	r8, r1, lsl r0
    26dc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    26e8:	0800112e 	stmdaeq	r0, {r1, r2, r3, r5, r8, ip}
    26ec:	08001199 	stmdaeq	r0, {r0, r3, r4, r7, r8, ip}
    26f0:	00510001 	subseq	r0, r1, r1
	...
    26fc:	00114c00 	andseq	r4, r1, r0, lsl #24
    2700:	00115608 	andseq	r5, r1, r8, lsl #12
    2704:	53000108 	movwpl	r0, #264	; 0x108
	...
    2714:	11400100 	mrsne	r0, (UNDEF: 80)
    2718:	11440800 	cmpne	r4, r0, lsl #16
    271c:	00030800 	andeq	r0, r3, r0, lsl #16
    2720:	449f0c72 	ldrmi	r0, [pc], #3186	; 2728 <_Min_Heap_Size+0x1f28>
    2724:	48080011 	stmdami	r8, {r0, r4}
    2728:	01080011 	tsteq	r8, r1, lsl r0
    272c:	11485300 	mrsne	r5, (UNDEF: 120)
    2730:	11480800 	cmpne	r8, r0, lsl #16
    2734:	00030800 	andeq	r0, r3, r0, lsl #16
    2738:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2744:	00114801 	andseq	r4, r1, r1, lsl #16
    2748:	00114808 	andseq	r4, r1, r8, lsl #16
    274c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2758:	01000001 	tsteq	r0, r1
    275c:	0800114c 	stmdaeq	r0, {r2, r3, r6, r8, ip}
    2760:	0800114e 	stmdaeq	r0, {r1, r2, r3, r6, r8, ip}
    2764:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2768:	00114e9f 	mulseq	r1, pc, lr	; <UNPREDICTABLE>
    276c:	00115208 	andseq	r5, r1, r8, lsl #4
    2770:	52000108 	andpl	r0, r0, #8, 2
	...
    277c:	114c0101 	cmpne	ip, r1, lsl #2
    2780:	11520800 	cmpne	r2, r0, lsl #16
    2784:	00010800 	andeq	r0, r1, r0, lsl #16
    2788:	00000053 	andeq	r0, r0, r3, asr r0
    278c:	00000000 	andeq	r0, r0, r0
    2790:	52010000 	andpl	r0, r1, #0
    2794:	52080011 	andpl	r0, r8, #17
    2798:	01080011 	tsteq	r8, r1, lsl r0
    279c:	00005000 	andeq	r5, r0, r0
	...
    27a8:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
    27ac:	08001170 	stmdaeq	r0, {r4, r5, r6, r8, ip}
    27b0:	00530001 	subseq	r0, r3, r1
	...
    27c0:	00115801 	andseq	r5, r1, r1, lsl #16
    27c4:	00115c08 	andseq	r5, r1, r8, lsl #24
    27c8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    27cc:	115c9f14 	cmpne	ip, r4, lsl pc
    27d0:	11600800 	cmnne	r0, r0, lsl #16
    27d4:	00010800 	andeq	r0, r1, r0, lsl #16
    27d8:	00116053 	andseq	r6, r1, r3, asr r0
    27dc:	00116008 	andseq	r6, r1, r8
    27e0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    27e4:	00009f14 	andeq	r9, r0, r4, lsl pc
    27e8:	00000000 	andeq	r0, r0, r0
    27ec:	01000000 	mrseq	r0, (UNDEF: 0)
    27f0:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
    27f4:	08001160 	stmdaeq	r0, {r5, r6, r8, ip}
    27f8:	00530001 	subseq	r0, r3, r1
    27fc:	00000000 	andeq	r0, r0, r0
    2800:	01000000 	mrseq	r0, (UNDEF: 0)
    2804:	64010000 	strvs	r0, [r1], #-0
    2808:	66080011 			; <UNDEFINED> instruction: 0x66080011
    280c:	03080011 	movweq	r0, #32785	; 0x8011
    2810:	9f147200 	svcls	0x00147200
    2814:	08001166 	stmdaeq	r0, {r1, r2, r5, r6, r8, ip}
    2818:	0800116a 	stmdaeq	r0, {r1, r3, r5, r6, r8, ip}
    281c:	00520001 	subseq	r0, r2, r1
    2820:	00000000 	andeq	r0, r0, r0
    2824:	01000000 	mrseq	r0, (UNDEF: 0)
    2828:	00116401 	andseq	r6, r1, r1, lsl #8
    282c:	00116a08 	andseq	r6, r1, r8, lsl #20
    2830:	53000108 	movwpl	r0, #264	; 0x108
	...
    283c:	116a0100 	cmnne	sl, r0, lsl #2
    2840:	116a0800 	cmnne	sl, r0, lsl #16
    2844:	00010800 	andeq	r0, r1, r0, lsl #16
    2848:	00000050 	andeq	r0, r0, r0, asr r0
    284c:	00000000 	andeq	r0, r0, r0
    2850:	86000000 	strhi	r0, [r0], -r0
    2854:	92080011 	andls	r0, r8, #17
    2858:	01080011 	tsteq	r8, r1, lsl r0
    285c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2868:	01000000 	mrseq	r0, (UNDEF: 0)
    286c:	0800117a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, ip}
    2870:	0800117e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, ip}
    2874:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2878:	00117e9f 	mulseq	r1, pc, lr	; <UNPREDICTABLE>
    287c:	00118208 	andseq	r8, r1, r8, lsl #4
    2880:	53000108 	movwpl	r0, #264	; 0x108
    2884:	08001182 	stmdaeq	r0, {r1, r7, r8, ip}
    2888:	08001182 	stmdaeq	r0, {r1, r7, r8, ip}
    288c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2890:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2894:	00000000 	andeq	r0, r0, r0
    2898:	82010000 	andhi	r0, r1, #0
    289c:	82080011 	andhi	r0, r8, #17
    28a0:	01080011 	tsteq	r8, r1, lsl r0
    28a4:	00005300 	andeq	r5, r0, r0, lsl #6
    28a8:	00000000 	andeq	r0, r0, r0
    28ac:	00010000 	andeq	r0, r1, r0
    28b0:	11860100 	orrne	r0, r6, r0, lsl #2
    28b4:	11880800 	orrne	r0, r8, r0, lsl #16
    28b8:	00030800 	andeq	r0, r3, r0, lsl #16
    28bc:	889f0c72 	ldmhi	pc, {r1, r4, r5, r6, sl, fp}	; <UNPREDICTABLE>
    28c0:	8c080011 	stchi	0, cr0, [r8], {17}
    28c4:	01080011 	tsteq	r8, r1, lsl r0
    28c8:	00005200 	andeq	r5, r0, r0, lsl #4
    28cc:	00000000 	andeq	r0, r0, r0
    28d0:	01010000 	mrseq	r0, (UNDEF: 1)
    28d4:	08001186 	stmdaeq	r0, {r1, r2, r7, r8, ip}
    28d8:	0800118c 	stmdaeq	r0, {r2, r3, r7, r8, ip}
    28dc:	00530001 	subseq	r0, r3, r1
	...
    28e8:	00118c01 	andseq	r8, r1, r1, lsl #24
    28ec:	00118c08 	andseq	r8, r1, r8, lsl #24
    28f0:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    2904:	007d0002 	rsbseq	r0, sp, r2
	...
    2910:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2930:	00010000 	andeq	r0, r1, r0
    2934:	00000050 	andeq	r0, r0, r0, asr r0
    2938:	00000000 	andeq	r0, r0, r0
    293c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2948:	00500001 	subseq	r0, r0, r1
    294c:	00000000 	andeq	r0, r0, r0
    2950:	01000000 	mrseq	r0, (UNDEF: 0)
    2954:	00005400 	andeq	r5, r0, r0, lsl #8
    2958:	00000000 	andeq	r0, r0, r0
    295c:	00010000 	andeq	r0, r1, r0
    2960:	00000050 	andeq	r0, r0, r0, asr r0
    2964:	00000000 	andeq	r0, r0, r0
    2968:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2974:	01f30004 	mvnseq	r0, r4
    2978:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    298c:	00530001 	subseq	r0, r3, r1
	...
    299c:	00000001 	andeq	r0, r0, r1
    29a0:	00000000 	andeq	r0, r0, r0
    29a4:	72000300 	andvc	r0, r0, #0, 6
    29a8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    29ac:	00000000 	andeq	r0, r0, r0
    29b0:	00010000 	andeq	r0, r1, r0
    29b4:	00000053 	andeq	r0, r0, r3, asr r0
    29b8:	00000000 	andeq	r0, r0, r0
    29bc:	72000300 	andvc	r0, r0, #0, 6
    29c0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    29c4:	00000000 	andeq	r0, r0, r0
    29c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    29d4:	00530001 	subseq	r0, r3, r1
    29d8:	00000000 	andeq	r0, r0, r0
    29dc:	01000000 	mrseq	r0, (UNDEF: 0)
    29e0:	00010000 	andeq	r0, r1, r0
    29e4:	00000000 	andeq	r0, r0, r0
    29e8:	03000000 	movweq	r0, #0
    29ec:	9f0c7200 	svcls	0x000c7200
	...
    29f8:	00520001 	subseq	r0, r2, r1
    29fc:	00000000 	andeq	r0, r0, r0
    2a00:	01000000 	mrseq	r0, (UNDEF: 0)
    2a04:	00000001 	andeq	r0, r0, r1
    2a08:	00000000 	andeq	r0, r0, r0
    2a0c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a18:	00000100 	andeq	r0, r0, r0, lsl #2
    2a1c:	00000000 	andeq	r0, r0, r0
    2a20:	00010000 	andeq	r0, r1, r0
    2a24:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2a34:	01000000 	mrseq	r0, (UNDEF: 0)
    2a38:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2a44:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2a50:	14720003 	ldrbtne	r0, [r2], #-3
    2a54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a58:	00000000 	andeq	r0, r0, r0
    2a5c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a68:	14720003 	ldrbtne	r0, [r2], #-3
    2a6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a70:	00000000 	andeq	r0, r0, r0
    2a74:	00010000 	andeq	r0, r1, r0
    2a78:	00000000 	andeq	r0, r0, r0
    2a7c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a80:	00005300 	andeq	r5, r0, r0, lsl #6
    2a84:	00000000 	andeq	r0, r0, r0
    2a88:	00010000 	andeq	r0, r1, r0
    2a8c:	00000100 	andeq	r0, r0, r0, lsl #2
    2a90:	00000000 	andeq	r0, r0, r0
    2a94:	00030000 	andeq	r0, r3, r0
    2a98:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2a9c:	00000000 	andeq	r0, r0, r0
    2aa0:	01000000 	mrseq	r0, (UNDEF: 0)
    2aa4:	00005200 	andeq	r5, r0, r0, lsl #4
    2aa8:	00000000 	andeq	r0, r0, r0
    2aac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2ab8:	00530001 	subseq	r0, r3, r1
	...
    2ac4:	00000001 	andeq	r0, r0, r1
    2ac8:	00000000 	andeq	r0, r0, r0
    2acc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2ae0:	00010000 	andeq	r0, r1, r0
    2ae4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2af0:	00010000 	andeq	r0, r1, r0
    2af4:	00000000 	andeq	r0, r0, r0
    2af8:	03000000 	movweq	r0, #0
    2afc:	9f0c7200 	svcls	0x000c7200
	...
    2b08:	00530001 	subseq	r0, r3, r1
    2b0c:	00000000 	andeq	r0, r0, r0
    2b10:	03000000 	movweq	r0, #0
    2b14:	9f0c7200 	svcls	0x000c7200
	...
    2b20:	00000100 	andeq	r0, r0, r0, lsl #2
    2b24:	00000000 	andeq	r0, r0, r0
    2b28:	00010000 	andeq	r0, r1, r0
    2b2c:	00000053 	andeq	r0, r0, r3, asr r0
    2b30:	00000000 	andeq	r0, r0, r0
    2b34:	00000100 	andeq	r0, r0, r0, lsl #2
    2b38:	00000001 	andeq	r0, r0, r1
    2b3c:	00000000 	andeq	r0, r0, r0
    2b40:	72000300 	andvc	r0, r0, #0, 6
    2b44:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2b48:	00000000 	andeq	r0, r0, r0
    2b4c:	00010000 	andeq	r0, r1, r0
    2b50:	00000052 	andeq	r0, r0, r2, asr r0
    2b54:	00000000 	andeq	r0, r0, r0
    2b58:	00010100 	andeq	r0, r1, r0, lsl #2
    2b5c:	00000000 	andeq	r0, r0, r0
    2b60:	01000000 	mrseq	r0, (UNDEF: 0)
    2b64:	00005300 	andeq	r5, r0, r0, lsl #6
    2b68:	00000000 	andeq	r0, r0, r0
    2b6c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2b78:	00510001 	subseq	r0, r1, r1
	...
    2b8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b9c:	00000100 	andeq	r0, r0, r0, lsl #2
    2ba0:	00000000 	andeq	r0, r0, r0
    2ba4:	00030000 	andeq	r0, r3, r0
    2ba8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2bac:	00000000 	andeq	r0, r0, r0
    2bb0:	01000000 	mrseq	r0, (UNDEF: 0)
    2bb4:	00005300 	andeq	r5, r0, r0, lsl #6
    2bb8:	00000000 	andeq	r0, r0, r0
    2bbc:	00030000 	andeq	r0, r3, r0
    2bc0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2bcc:	00000001 	andeq	r0, r0, r1
    2bd0:	00000000 	andeq	r0, r0, r0
    2bd4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2be0:	01000001 	tsteq	r0, r1
	...
    2bec:	14720003 	ldrbtne	r0, [r2], #-3
    2bf0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2bf4:	00000000 	andeq	r0, r0, r0
    2bf8:	52000100 	andpl	r0, r0, #0, 2
	...
    2c04:	00000101 	andeq	r0, r0, r1, lsl #2
    2c08:	00000000 	andeq	r0, r0, r0
    2c0c:	00010000 	andeq	r0, r1, r0
    2c10:	00000053 	andeq	r0, r0, r3, asr r0
    2c14:	00000000 	andeq	r0, r0, r0
    2c18:	00010000 	andeq	r0, r1, r0
    2c1c:	00000000 	andeq	r0, r0, r0
    2c20:	01000000 	mrseq	r0, (UNDEF: 0)
    2c24:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2c34:	00020000 	andeq	r0, r2, r0
    2c38:	0000007d 	andeq	r0, r0, sp, ror r0
    2c3c:	00000000 	andeq	r0, r0, r0
    2c40:	00020000 	andeq	r0, r2, r0
    2c44:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    2c64:	00500001 	subseq	r0, r0, r1
    2c68:	00000000 	andeq	r0, r0, r0
    2c6c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c70:	00005400 	andeq	r5, r0, r0, lsl #8
    2c74:	00000000 	andeq	r0, r0, r0
    2c78:	00010000 	andeq	r0, r1, r0
    2c7c:	00000050 	andeq	r0, r0, r0, asr r0
    2c80:	00000000 	andeq	r0, r0, r0
    2c84:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2c90:	00500001 	subseq	r0, r0, r1
    2c94:	00000000 	andeq	r0, r0, r0
    2c98:	01000000 	mrseq	r0, (UNDEF: 0)
    2c9c:	00005400 	andeq	r5, r0, r0, lsl #8
    2ca0:	00000000 	andeq	r0, r0, r0
    2ca4:	00040000 	andeq	r0, r4, r0
    2ca8:	9f5001f3 	svcls	0x005001f3
	...
    2cbc:	00010000 	andeq	r0, r1, r0
    2cc0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2ccc:	00010000 	andeq	r0, r1, r0
    2cd0:	00000000 	andeq	r0, r0, r0
    2cd4:	03000000 	movweq	r0, #0
    2cd8:	9f0c7200 	svcls	0x000c7200
	...
    2ce4:	00530001 	subseq	r0, r3, r1
    2ce8:	00000000 	andeq	r0, r0, r0
    2cec:	03000000 	movweq	r0, #0
    2cf0:	9f0c7200 	svcls	0x000c7200
	...
    2cfc:	00000100 	andeq	r0, r0, r0, lsl #2
    2d00:	00000000 	andeq	r0, r0, r0
    2d04:	00010000 	andeq	r0, r1, r0
    2d08:	00000053 	andeq	r0, r0, r3, asr r0
    2d0c:	00000000 	andeq	r0, r0, r0
    2d10:	00000100 	andeq	r0, r0, r0, lsl #2
    2d14:	00000001 	andeq	r0, r0, r1
    2d18:	00000000 	andeq	r0, r0, r0
    2d1c:	72000300 	andvc	r0, r0, #0, 6
    2d20:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2d24:	00000000 	andeq	r0, r0, r0
    2d28:	00010000 	andeq	r0, r1, r0
    2d2c:	00000052 	andeq	r0, r0, r2, asr r0
    2d30:	00000000 	andeq	r0, r0, r0
    2d34:	00010100 	andeq	r0, r1, r0, lsl #2
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d40:	00005300 	andeq	r5, r0, r0, lsl #6
    2d44:	00000000 	andeq	r0, r0, r0
    2d48:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2d54:	00510001 	subseq	r0, r1, r1
	...
    2d68:	53000100 	movwpl	r0, #256	; 0x100
	...
    2d78:	00000100 	andeq	r0, r0, r0, lsl #2
    2d7c:	00000000 	andeq	r0, r0, r0
    2d80:	00030000 	andeq	r0, r3, r0
    2d84:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2d88:	00000000 	andeq	r0, r0, r0
    2d8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d90:	00005300 	andeq	r5, r0, r0, lsl #6
    2d94:	00000000 	andeq	r0, r0, r0
    2d98:	00030000 	andeq	r0, r3, r0
    2d9c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2da8:	00000001 	andeq	r0, r0, r1
    2dac:	00000000 	andeq	r0, r0, r0
    2db0:	53000100 	movwpl	r0, #256	; 0x100
	...
    2dbc:	01000001 	tsteq	r0, r1
	...
    2dc8:	14720003 	ldrbtne	r0, [r2], #-3
    2dcc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2dd0:	00000000 	andeq	r0, r0, r0
    2dd4:	52000100 	andpl	r0, r0, #0, 2
	...
    2de0:	00000101 	andeq	r0, r0, r1, lsl #2
    2de4:	00000000 	andeq	r0, r0, r0
    2de8:	00010000 	andeq	r0, r1, r0
    2dec:	00000053 	andeq	r0, r0, r3, asr r0
    2df0:	00000000 	andeq	r0, r0, r0
    2df4:	00010000 	andeq	r0, r1, r0
    2df8:	00000000 	andeq	r0, r0, r0
    2dfc:	01000000 	mrseq	r0, (UNDEF: 0)
    2e00:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2e10:	00020000 	andeq	r0, r2, r0
    2e14:	0000007d 	andeq	r0, r0, sp, ror r0
    2e18:	00000000 	andeq	r0, r0, r0
    2e1c:	00020000 	andeq	r0, r2, r0
    2e20:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    2e3c:	00500001 	subseq	r0, r0, r1
    2e40:	00000000 	andeq	r0, r0, r0
    2e44:	01000000 	mrseq	r0, (UNDEF: 0)
    2e48:	00005400 	andeq	r5, r0, r0, lsl #8
    2e4c:	00000000 	andeq	r0, r0, r0
    2e50:	00010000 	andeq	r0, r1, r0
    2e54:	00000050 	andeq	r0, r0, r0, asr r0
    2e58:	00000000 	andeq	r0, r0, r0
    2e5c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2e68:	01f30004 	mvnseq	r0, r4
    2e6c:	00009f50 	andeq	r9, r0, r0, asr pc
    2e70:	00000000 	andeq	r0, r0, r0
    2e74:	00010000 	andeq	r0, r1, r0
    2e78:	02010100 	andeq	r0, r1, #0, 2
	...
    2e88:	9f310002 	svcls	0x00310002
	...
    2e94:	00550001 	subseq	r0, r5, r1
    2e98:	00000000 	andeq	r0, r0, r0
    2e9c:	02000000 	andeq	r0, r0, #0
    2ea0:	009f3100 	addseq	r3, pc, r0, lsl #2
    2ea4:	00000000 	andeq	r0, r0, r0
    2ea8:	02000000 	andeq	r0, r0, #0
    2eac:	009f3100 	addseq	r3, pc, r0, lsl #2
    2eb0:	00000000 	andeq	r0, r0, r0
    2eb4:	01000000 	mrseq	r0, (UNDEF: 0)
    2eb8:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    2ecc:	00530001 	subseq	r0, r3, r1
	...
    2edc:	00000001 	andeq	r0, r0, r1
    2ee0:	00000000 	andeq	r0, r0, r0
    2ee4:	72000300 	andvc	r0, r0, #0, 6
    2ee8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2eec:	00000000 	andeq	r0, r0, r0
    2ef0:	00010000 	andeq	r0, r1, r0
    2ef4:	00000053 	andeq	r0, r0, r3, asr r0
    2ef8:	00000000 	andeq	r0, r0, r0
    2efc:	72000300 	andvc	r0, r0, #0, 6
    2f00:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2f04:	00000000 	andeq	r0, r0, r0
    2f08:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f14:	00530001 	subseq	r0, r3, r1
    2f18:	00000000 	andeq	r0, r0, r0
    2f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    2f20:	00010000 	andeq	r0, r1, r0
    2f24:	00000000 	andeq	r0, r0, r0
    2f28:	03000000 	movweq	r0, #0
    2f2c:	9f0c7200 	svcls	0x000c7200
	...
    2f38:	00520001 	subseq	r0, r2, r1
    2f3c:	00000000 	andeq	r0, r0, r0
    2f40:	01000000 	mrseq	r0, (UNDEF: 0)
    2f44:	00000001 	andeq	r0, r0, r1
    2f48:	00000000 	andeq	r0, r0, r0
    2f4c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f58:	00000100 	andeq	r0, r0, r0, lsl #2
    2f5c:	00000000 	andeq	r0, r0, r0
    2f60:	00010000 	andeq	r0, r1, r0
    2f64:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2f74:	01000000 	mrseq	r0, (UNDEF: 0)
    2f78:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2f84:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f90:	14720003 	ldrbtne	r0, [r2], #-3
    2f94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f98:	00000000 	andeq	r0, r0, r0
    2f9c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2fa8:	14720003 	ldrbtne	r0, [r2], #-3
    2fac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2fb0:	00000000 	andeq	r0, r0, r0
    2fb4:	00010000 	andeq	r0, r1, r0
    2fb8:	00000000 	andeq	r0, r0, r0
    2fbc:	01000000 	mrseq	r0, (UNDEF: 0)
    2fc0:	00005300 	andeq	r5, r0, r0, lsl #6
    2fc4:	00000000 	andeq	r0, r0, r0
    2fc8:	00010000 	andeq	r0, r1, r0
    2fcc:	00000100 	andeq	r0, r0, r0, lsl #2
    2fd0:	00000000 	andeq	r0, r0, r0
    2fd4:	00030000 	andeq	r0, r3, r0
    2fd8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2fdc:	00000000 	andeq	r0, r0, r0
    2fe0:	01000000 	mrseq	r0, (UNDEF: 0)
    2fe4:	00005200 	andeq	r5, r0, r0, lsl #4
    2fe8:	00000000 	andeq	r0, r0, r0
    2fec:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2ff8:	00530001 	subseq	r0, r3, r1
	...
    3004:	00000001 	andeq	r0, r0, r1
    3008:	00000000 	andeq	r0, r0, r0
    300c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3020:	00010000 	andeq	r0, r1, r0
    3024:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3030:	00010000 	andeq	r0, r1, r0
    3034:	00000000 	andeq	r0, r0, r0
    3038:	03000000 	movweq	r0, #0
    303c:	9f0c7200 	svcls	0x000c7200
	...
    3048:	00530001 	subseq	r0, r3, r1
    304c:	00000000 	andeq	r0, r0, r0
    3050:	03000000 	movweq	r0, #0
    3054:	9f0c7200 	svcls	0x000c7200
	...
    3060:	00000100 	andeq	r0, r0, r0, lsl #2
    3064:	00000000 	andeq	r0, r0, r0
    3068:	00010000 	andeq	r0, r1, r0
    306c:	00000053 	andeq	r0, r0, r3, asr r0
    3070:	00000000 	andeq	r0, r0, r0
    3074:	00000100 	andeq	r0, r0, r0, lsl #2
    3078:	00000001 	andeq	r0, r0, r1
    307c:	00000000 	andeq	r0, r0, r0
    3080:	72000300 	andvc	r0, r0, #0, 6
    3084:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3088:	00000000 	andeq	r0, r0, r0
    308c:	00010000 	andeq	r0, r1, r0
    3090:	00000052 	andeq	r0, r0, r2, asr r0
    3094:	00000000 	andeq	r0, r0, r0
    3098:	00010100 	andeq	r0, r1, r0, lsl #2
    309c:	00000000 	andeq	r0, r0, r0
    30a0:	01000000 	mrseq	r0, (UNDEF: 0)
    30a4:	00005300 	andeq	r5, r0, r0, lsl #6
    30a8:	00000000 	andeq	r0, r0, r0
    30ac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    30b8:	00510001 	subseq	r0, r1, r1
	...
    30cc:	01000000 	mrseq	r0, (UNDEF: 0)
    30d0:	00005300 	andeq	r5, r0, r0, lsl #6
    30d4:	00000000 	andeq	r0, r0, r0
    30d8:	00010000 	andeq	r0, r1, r0
    30dc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    30e8:	00010000 	andeq	r0, r1, r0
    30ec:	00000000 	andeq	r0, r0, r0
    30f0:	03000000 	movweq	r0, #0
    30f4:	9f147100 	svcls	0x00147100
	...
    3100:	00530001 	subseq	r0, r3, r1
    3104:	00000000 	andeq	r0, r0, r0
    3108:	03000000 	movweq	r0, #0
    310c:	9f147100 	svcls	0x00147100
	...
    3118:	00000100 	andeq	r0, r0, r0, lsl #2
    311c:	00000000 	andeq	r0, r0, r0
    3120:	00010000 	andeq	r0, r1, r0
    3124:	00000053 	andeq	r0, r0, r3, asr r0
    3128:	00000000 	andeq	r0, r0, r0
    312c:	00000100 	andeq	r0, r0, r0, lsl #2
    3130:	00000001 	andeq	r0, r0, r1
    3134:	00000000 	andeq	r0, r0, r0
    3138:	71000300 	mrsvc	r0, LR_irq
    313c:	00009f14 	andeq	r9, r0, r4, lsl pc
    3140:	00000000 	andeq	r0, r0, r0
    3144:	00010000 	andeq	r0, r1, r0
    3148:	00000051 	andeq	r0, r0, r1, asr r0
    314c:	00000000 	andeq	r0, r0, r0
    3150:	00010100 	andeq	r0, r1, r0, lsl #2
    3154:	00000000 	andeq	r0, r0, r0
    3158:	01000000 	mrseq	r0, (UNDEF: 0)
    315c:	00005300 	andeq	r5, r0, r0, lsl #6
    3160:	00000000 	andeq	r0, r0, r0
    3164:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3170:	00520001 	subseq	r0, r2, r1
	...
    3184:	53000100 	movwpl	r0, #256	; 0x100
	...
    3194:	00000100 	andeq	r0, r0, r0, lsl #2
    3198:	00000000 	andeq	r0, r0, r0
    319c:	00030000 	andeq	r0, r3, r0
    31a0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    31a4:	00000000 	andeq	r0, r0, r0
    31a8:	01000000 	mrseq	r0, (UNDEF: 0)
    31ac:	00005300 	andeq	r5, r0, r0, lsl #6
    31b0:	00000000 	andeq	r0, r0, r0
    31b4:	00030000 	andeq	r0, r3, r0
    31b8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    31c4:	00000001 	andeq	r0, r0, r1
    31c8:	00000000 	andeq	r0, r0, r0
    31cc:	53000100 	movwpl	r0, #256	; 0x100
	...
    31d8:	01000001 	tsteq	r0, r1
	...
    31e4:	14720003 	ldrbtne	r0, [r2], #-3
    31e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31ec:	00000000 	andeq	r0, r0, r0
    31f0:	52000100 	andpl	r0, r0, #0, 2
	...
    31fc:	00000101 	andeq	r0, r0, r1, lsl #2
    3200:	00000000 	andeq	r0, r0, r0
    3204:	00010000 	andeq	r0, r1, r0
    3208:	00000053 	andeq	r0, r0, r3, asr r0
    320c:	00000000 	andeq	r0, r0, r0
    3210:	00010000 	andeq	r0, r1, r0
    3214:	00000000 	andeq	r0, r0, r0
    3218:	01000000 	mrseq	r0, (UNDEF: 0)
    321c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    322c:	00020000 	andeq	r0, r2, r0
    3230:	0000007d 	andeq	r0, r0, sp, ror r0
    3234:	00000000 	andeq	r0, r0, r0
    3238:	00020000 	andeq	r0, r2, r0
    323c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3254:	00010000 	andeq	r0, r1, r0
    3258:	00000050 	andeq	r0, r0, r0, asr r0
    325c:	00000000 	andeq	r0, r0, r0
    3260:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    326c:	00500001 	subseq	r0, r0, r1
    3270:	00000000 	andeq	r0, r0, r0
    3274:	01000000 	mrseq	r0, (UNDEF: 0)
    3278:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    328c:	00530001 	subseq	r0, r3, r1
	...
    329c:	00000001 	andeq	r0, r0, r1
    32a0:	00000000 	andeq	r0, r0, r0
    32a4:	72000300 	andvc	r0, r0, #0, 6
    32a8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    32ac:	00000000 	andeq	r0, r0, r0
    32b0:	00010000 	andeq	r0, r1, r0
    32b4:	00000053 	andeq	r0, r0, r3, asr r0
    32b8:	00000000 	andeq	r0, r0, r0
    32bc:	72000300 	andvc	r0, r0, #0, 6
    32c0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    32c4:	00000000 	andeq	r0, r0, r0
    32c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    32d4:	00530001 	subseq	r0, r3, r1
    32d8:	00000000 	andeq	r0, r0, r0
    32dc:	01000000 	mrseq	r0, (UNDEF: 0)
    32e0:	00010000 	andeq	r0, r1, r0
    32e4:	00000000 	andeq	r0, r0, r0
    32e8:	03000000 	movweq	r0, #0
    32ec:	9f0c7200 	svcls	0x000c7200
	...
    32f8:	00520001 	subseq	r0, r2, r1
    32fc:	00000000 	andeq	r0, r0, r0
    3300:	01000000 	mrseq	r0, (UNDEF: 0)
    3304:	00000001 	andeq	r0, r0, r1
    3308:	00000000 	andeq	r0, r0, r0
    330c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3318:	00000100 	andeq	r0, r0, r0, lsl #2
    331c:	00000000 	andeq	r0, r0, r0
    3320:	00010000 	andeq	r0, r1, r0
    3324:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3334:	01000000 	mrseq	r0, (UNDEF: 0)
    3338:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3344:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3350:	14720003 	ldrbtne	r0, [r2], #-3
    3354:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3358:	00000000 	andeq	r0, r0, r0
    335c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3368:	14720003 	ldrbtne	r0, [r2], #-3
    336c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3370:	00000000 	andeq	r0, r0, r0
    3374:	00010000 	andeq	r0, r1, r0
    3378:	00000000 	andeq	r0, r0, r0
    337c:	01000000 	mrseq	r0, (UNDEF: 0)
    3380:	00005300 	andeq	r5, r0, r0, lsl #6
    3384:	00000000 	andeq	r0, r0, r0
    3388:	00010000 	andeq	r0, r1, r0
    338c:	00000100 	andeq	r0, r0, r0, lsl #2
    3390:	00000000 	andeq	r0, r0, r0
    3394:	00030000 	andeq	r0, r3, r0
    3398:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    339c:	00000000 	andeq	r0, r0, r0
    33a0:	01000000 	mrseq	r0, (UNDEF: 0)
    33a4:	00005200 	andeq	r5, r0, r0, lsl #4
    33a8:	00000000 	andeq	r0, r0, r0
    33ac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    33b8:	00530001 	subseq	r0, r3, r1
	...
    33c4:	00000001 	andeq	r0, r0, r1
    33c8:	00000000 	andeq	r0, r0, r0
    33cc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    33e0:	00010000 	andeq	r0, r1, r0
    33e4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    33f0:	00010000 	andeq	r0, r1, r0
    33f4:	00000000 	andeq	r0, r0, r0
    33f8:	03000000 	movweq	r0, #0
    33fc:	9f0c7200 	svcls	0x000c7200
	...
    3408:	00530001 	subseq	r0, r3, r1
    340c:	00000000 	andeq	r0, r0, r0
    3410:	03000000 	movweq	r0, #0
    3414:	9f0c7200 	svcls	0x000c7200
	...
    3420:	00000100 	andeq	r0, r0, r0, lsl #2
    3424:	00000000 	andeq	r0, r0, r0
    3428:	00010000 	andeq	r0, r1, r0
    342c:	00000053 	andeq	r0, r0, r3, asr r0
    3430:	00000000 	andeq	r0, r0, r0
    3434:	00000100 	andeq	r0, r0, r0, lsl #2
    3438:	00000001 	andeq	r0, r0, r1
    343c:	00000000 	andeq	r0, r0, r0
    3440:	72000300 	andvc	r0, r0, #0, 6
    3444:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3448:	00000000 	andeq	r0, r0, r0
    344c:	00010000 	andeq	r0, r1, r0
    3450:	00000052 	andeq	r0, r0, r2, asr r0
    3454:	00000000 	andeq	r0, r0, r0
    3458:	00010100 	andeq	r0, r1, r0, lsl #2
    345c:	00000000 	andeq	r0, r0, r0
    3460:	01000000 	mrseq	r0, (UNDEF: 0)
    3464:	00005300 	andeq	r5, r0, r0, lsl #6
    3468:	00000000 	andeq	r0, r0, r0
    346c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3478:	00510001 	subseq	r0, r1, r1
	...
    348c:	53000100 	movwpl	r0, #256	; 0x100
	...
    349c:	00000100 	andeq	r0, r0, r0, lsl #2
    34a0:	00000000 	andeq	r0, r0, r0
    34a4:	00030000 	andeq	r0, r3, r0
    34a8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    34ac:	00000000 	andeq	r0, r0, r0
    34b0:	01000000 	mrseq	r0, (UNDEF: 0)
    34b4:	00005300 	andeq	r5, r0, r0, lsl #6
    34b8:	00000000 	andeq	r0, r0, r0
    34bc:	00030000 	andeq	r0, r3, r0
    34c0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    34cc:	00000001 	andeq	r0, r0, r1
    34d0:	00000000 	andeq	r0, r0, r0
    34d4:	53000100 	movwpl	r0, #256	; 0x100
	...
    34e0:	01000001 	tsteq	r0, r1
	...
    34ec:	14720003 	ldrbtne	r0, [r2], #-3
    34f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	52000100 	andpl	r0, r0, #0, 2
	...
    3504:	00000101 	andeq	r0, r0, r1, lsl #2
    3508:	00000000 	andeq	r0, r0, r0
    350c:	00010000 	andeq	r0, r1, r0
    3510:	00000053 	andeq	r0, r0, r3, asr r0
    3514:	00000000 	andeq	r0, r0, r0
    3518:	00010000 	andeq	r0, r1, r0
    351c:	00000000 	andeq	r0, r0, r0
    3520:	01000000 	mrseq	r0, (UNDEF: 0)
    3524:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3534:	00020000 	andeq	r0, r2, r0
    3538:	0000007d 	andeq	r0, r0, sp, ror r0
    353c:	00000000 	andeq	r0, r0, r0
    3540:	00020000 	andeq	r0, r2, r0
    3544:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3558:	00010000 	andeq	r0, r1, r0
    355c:	00000050 	andeq	r0, r0, r0, asr r0
    3560:	00000000 	andeq	r0, r0, r0
    3564:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3578:	00010000 	andeq	r0, r1, r0
    357c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3588:	00010000 	andeq	r0, r1, r0
    358c:	00000000 	andeq	r0, r0, r0
    3590:	03000000 	movweq	r0, #0
    3594:	9f0c7200 	svcls	0x000c7200
	...
    35a0:	00530001 	subseq	r0, r3, r1
    35a4:	00000000 	andeq	r0, r0, r0
    35a8:	03000000 	movweq	r0, #0
    35ac:	9f0c7200 	svcls	0x000c7200
	...
    35b8:	00000100 	andeq	r0, r0, r0, lsl #2
    35bc:	00000000 	andeq	r0, r0, r0
    35c0:	00010000 	andeq	r0, r1, r0
    35c4:	00000053 	andeq	r0, r0, r3, asr r0
    35c8:	00000000 	andeq	r0, r0, r0
    35cc:	00000100 	andeq	r0, r0, r0, lsl #2
    35d0:	00000001 	andeq	r0, r0, r1
    35d4:	00000000 	andeq	r0, r0, r0
    35d8:	72000300 	andvc	r0, r0, #0, 6
    35dc:	00009f0c 	andeq	r9, r0, ip, lsl #30
    35e0:	00000000 	andeq	r0, r0, r0
    35e4:	00010000 	andeq	r0, r1, r0
    35e8:	00000052 	andeq	r0, r0, r2, asr r0
    35ec:	00000000 	andeq	r0, r0, r0
    35f0:	00010100 	andeq	r0, r1, r0, lsl #2
    35f4:	00000000 	andeq	r0, r0, r0
    35f8:	01000000 	mrseq	r0, (UNDEF: 0)
    35fc:	00005300 	andeq	r5, r0, r0, lsl #6
    3600:	00000000 	andeq	r0, r0, r0
    3604:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3610:	00510001 	subseq	r0, r1, r1
	...
    3624:	53000100 	movwpl	r0, #256	; 0x100
	...
    3634:	00000100 	andeq	r0, r0, r0, lsl #2
    3638:	00000000 	andeq	r0, r0, r0
    363c:	00030000 	andeq	r0, r3, r0
    3640:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3644:	00000000 	andeq	r0, r0, r0
    3648:	01000000 	mrseq	r0, (UNDEF: 0)
    364c:	00005300 	andeq	r5, r0, r0, lsl #6
    3650:	00000000 	andeq	r0, r0, r0
    3654:	00030000 	andeq	r0, r3, r0
    3658:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3664:	00000001 	andeq	r0, r0, r1
    3668:	00000000 	andeq	r0, r0, r0
    366c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3678:	01000001 	tsteq	r0, r1
	...
    3684:	14720003 	ldrbtne	r0, [r2], #-3
    3688:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    368c:	00000000 	andeq	r0, r0, r0
    3690:	52000100 	andpl	r0, r0, #0, 2
	...
    369c:	00000101 	andeq	r0, r0, r1, lsl #2
    36a0:	00000000 	andeq	r0, r0, r0
    36a4:	00010000 	andeq	r0, r1, r0
    36a8:	00000053 	andeq	r0, r0, r3, asr r0
    36ac:	00000000 	andeq	r0, r0, r0
    36b0:	00010000 	andeq	r0, r1, r0
    36b4:	00000000 	andeq	r0, r0, r0
    36b8:	01000000 	mrseq	r0, (UNDEF: 0)
    36bc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    36cc:	00020000 	andeq	r0, r2, r0
    36d0:	0000007d 	andeq	r0, r0, sp, ror r0
    36d4:	00000000 	andeq	r0, r0, r0
    36d8:	00020000 	andeq	r0, r2, r0
    36dc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    36f4:	00010000 	andeq	r0, r1, r0
    36f8:	00000050 	andeq	r0, r0, r0, asr r0
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    370c:	00500001 	subseq	r0, r0, r1
    3710:	00000000 	andeq	r0, r0, r0
    3714:	01000000 	mrseq	r0, (UNDEF: 0)
    3718:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    372c:	00530001 	subseq	r0, r3, r1
	...
    373c:	00000001 	andeq	r0, r0, r1
    3740:	00000000 	andeq	r0, r0, r0
    3744:	72000300 	andvc	r0, r0, #0, 6
    3748:	00009f0c 	andeq	r9, r0, ip, lsl #30
    374c:	00000000 	andeq	r0, r0, r0
    3750:	00010000 	andeq	r0, r1, r0
    3754:	00000053 	andeq	r0, r0, r3, asr r0
    3758:	00000000 	andeq	r0, r0, r0
    375c:	72000300 	andvc	r0, r0, #0, 6
    3760:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3764:	00000000 	andeq	r0, r0, r0
    3768:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3774:	00530001 	subseq	r0, r3, r1
    3778:	00000000 	andeq	r0, r0, r0
    377c:	01000000 	mrseq	r0, (UNDEF: 0)
    3780:	00010000 	andeq	r0, r1, r0
    3784:	00000000 	andeq	r0, r0, r0
    3788:	03000000 	movweq	r0, #0
    378c:	9f0c7200 	svcls	0x000c7200
	...
    3798:	00520001 	subseq	r0, r2, r1
    379c:	00000000 	andeq	r0, r0, r0
    37a0:	01000000 	mrseq	r0, (UNDEF: 0)
    37a4:	00000001 	andeq	r0, r0, r1
    37a8:	00000000 	andeq	r0, r0, r0
    37ac:	53000100 	movwpl	r0, #256	; 0x100
	...
    37b8:	00000100 	andeq	r0, r0, r0, lsl #2
    37bc:	00000000 	andeq	r0, r0, r0
    37c0:	00010000 	andeq	r0, r1, r0
    37c4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    37d4:	01000000 	mrseq	r0, (UNDEF: 0)
    37d8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    37e4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    37f0:	14720003 	ldrbtne	r0, [r2], #-3
    37f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    37f8:	00000000 	andeq	r0, r0, r0
    37fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    3808:	14720003 	ldrbtne	r0, [r2], #-3
    380c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3810:	00000000 	andeq	r0, r0, r0
    3814:	00010000 	andeq	r0, r1, r0
    3818:	00000000 	andeq	r0, r0, r0
    381c:	01000000 	mrseq	r0, (UNDEF: 0)
    3820:	00005300 	andeq	r5, r0, r0, lsl #6
    3824:	00000000 	andeq	r0, r0, r0
    3828:	00010000 	andeq	r0, r1, r0
    382c:	00000100 	andeq	r0, r0, r0, lsl #2
    3830:	00000000 	andeq	r0, r0, r0
    3834:	00030000 	andeq	r0, r3, r0
    3838:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    383c:	00000000 	andeq	r0, r0, r0
    3840:	01000000 	mrseq	r0, (UNDEF: 0)
    3844:	00005200 	andeq	r5, r0, r0, lsl #4
    3848:	00000000 	andeq	r0, r0, r0
    384c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3858:	00530001 	subseq	r0, r3, r1
	...
    3864:	00000001 	andeq	r0, r0, r1
    3868:	00000000 	andeq	r0, r0, r0
    386c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3880:	00010000 	andeq	r0, r1, r0
    3884:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3890:	00010000 	andeq	r0, r1, r0
    3894:	00000000 	andeq	r0, r0, r0
    3898:	03000000 	movweq	r0, #0
    389c:	9f0c7200 	svcls	0x000c7200
	...
    38a8:	00530001 	subseq	r0, r3, r1
    38ac:	00000000 	andeq	r0, r0, r0
    38b0:	03000000 	movweq	r0, #0
    38b4:	9f0c7200 	svcls	0x000c7200
	...
    38c0:	00000100 	andeq	r0, r0, r0, lsl #2
    38c4:	00000000 	andeq	r0, r0, r0
    38c8:	00010000 	andeq	r0, r1, r0
    38cc:	00000053 	andeq	r0, r0, r3, asr r0
    38d0:	00000000 	andeq	r0, r0, r0
    38d4:	00000100 	andeq	r0, r0, r0, lsl #2
    38d8:	00000001 	andeq	r0, r0, r1
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	72000300 	andvc	r0, r0, #0, 6
    38e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    38e8:	00000000 	andeq	r0, r0, r0
    38ec:	00010000 	andeq	r0, r1, r0
    38f0:	00000052 	andeq	r0, r0, r2, asr r0
    38f4:	00000000 	andeq	r0, r0, r0
    38f8:	00010100 	andeq	r0, r1, r0, lsl #2
    38fc:	00000000 	andeq	r0, r0, r0
    3900:	01000000 	mrseq	r0, (UNDEF: 0)
    3904:	00005300 	andeq	r5, r0, r0, lsl #6
    3908:	00000000 	andeq	r0, r0, r0
    390c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3918:	00510001 	subseq	r0, r1, r1
	...
    392c:	53000100 	movwpl	r0, #256	; 0x100
	...
    393c:	00000100 	andeq	r0, r0, r0, lsl #2
    3940:	00000000 	andeq	r0, r0, r0
    3944:	00030000 	andeq	r0, r3, r0
    3948:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    394c:	00000000 	andeq	r0, r0, r0
    3950:	01000000 	mrseq	r0, (UNDEF: 0)
    3954:	00005300 	andeq	r5, r0, r0, lsl #6
    3958:	00000000 	andeq	r0, r0, r0
    395c:	00030000 	andeq	r0, r3, r0
    3960:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    396c:	00000001 	andeq	r0, r0, r1
    3970:	00000000 	andeq	r0, r0, r0
    3974:	53000100 	movwpl	r0, #256	; 0x100
	...
    3980:	01000001 	tsteq	r0, r1
	...
    398c:	14720003 	ldrbtne	r0, [r2], #-3
    3990:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3994:	00000000 	andeq	r0, r0, r0
    3998:	52000100 	andpl	r0, r0, #0, 2
	...
    39a4:	00000101 	andeq	r0, r0, r1, lsl #2
    39a8:	00000000 	andeq	r0, r0, r0
    39ac:	00010000 	andeq	r0, r1, r0
    39b0:	00000053 	andeq	r0, r0, r3, asr r0
    39b4:	00000000 	andeq	r0, r0, r0
    39b8:	00010000 	andeq	r0, r1, r0
    39bc:	00000000 	andeq	r0, r0, r0
    39c0:	01000000 	mrseq	r0, (UNDEF: 0)
    39c4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    39d8:	00530001 	subseq	r0, r3, r1
	...
    39e8:	00000001 	andeq	r0, r0, r1
    39ec:	00000000 	andeq	r0, r0, r0
    39f0:	72000300 	andvc	r0, r0, #0, 6
    39f4:	00009f14 	andeq	r9, r0, r4, lsl pc
    39f8:	00000000 	andeq	r0, r0, r0
    39fc:	00010000 	andeq	r0, r1, r0
    3a00:	00000053 	andeq	r0, r0, r3, asr r0
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	72000300 	andvc	r0, r0, #0, 6
    3a0c:	00009f14 	andeq	r9, r0, r4, lsl pc
    3a10:	00000000 	andeq	r0, r0, r0
    3a14:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3a20:	00530001 	subseq	r0, r3, r1
    3a24:	00000000 	andeq	r0, r0, r0
    3a28:	01000000 	mrseq	r0, (UNDEF: 0)
    3a2c:	00010000 	andeq	r0, r1, r0
    3a30:	00000000 	andeq	r0, r0, r0
    3a34:	03000000 	movweq	r0, #0
    3a38:	9f147200 	svcls	0x00147200
	...
    3a44:	00520001 	subseq	r0, r2, r1
    3a48:	00000000 	andeq	r0, r0, r0
    3a4c:	01000000 	mrseq	r0, (UNDEF: 0)
    3a50:	00000001 	andeq	r0, r0, r1
    3a54:	00000000 	andeq	r0, r0, r0
    3a58:	53000100 	movwpl	r0, #256	; 0x100
	...
    3a64:	00000100 	andeq	r0, r0, r0, lsl #2
    3a68:	00000000 	andeq	r0, r0, r0
    3a6c:	00010000 	andeq	r0, r1, r0
    3a70:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3a84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a90:	01f30004 	mvnseq	r0, r4
    3a94:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3aa4:	00020000 	andeq	r0, r2, r0
    3aa8:	0000007d 	andeq	r0, r0, sp, ror r0
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	00020000 	andeq	r0, r2, r0
    3ab4:	0000087d 	andeq	r0, r0, sp, ror r8
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	00020000 	andeq	r0, r2, r0
    3ac0:	0000107d 	andeq	r1, r0, sp, ror r0
    3ac4:	00000000 	andeq	r0, r0, r0
    3ac8:	00020000 	andeq	r0, r2, r0
    3acc:	0000087d 	andeq	r0, r0, sp, ror r8
    3ad0:	00000000 	andeq	r0, r0, r0
    3ad4:	00020000 	andeq	r0, r2, r0
    3ad8:	0000107d 	andeq	r1, r0, sp, ror r0
    3adc:	00000000 	andeq	r0, r0, r0
    3ae0:	00020000 	andeq	r0, r2, r0
    3ae4:	0000007d 	andeq	r0, r0, sp, ror r0
    3ae8:	00000000 	andeq	r0, r0, r0
    3aec:	00020000 	andeq	r0, r2, r0
    3af0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3b10:	00010000 	andeq	r0, r1, r0
    3b14:	00000050 	andeq	r0, r0, r0, asr r0
    3b18:	00000000 	andeq	r0, r0, r0
    3b1c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3b28:	00500001 	subseq	r0, r0, r1
    3b2c:	00000000 	andeq	r0, r0, r0
    3b30:	01000000 	mrseq	r0, (UNDEF: 0)
    3b34:	00005400 	andeq	r5, r0, r0, lsl #8
    3b38:	00000000 	andeq	r0, r0, r0
    3b3c:	00010000 	andeq	r0, r1, r0
    3b40:	00000050 	andeq	r0, r0, r0, asr r0
    3b44:	00000000 	andeq	r0, r0, r0
    3b48:	f3000400 	vshl.u8	d0, d0, d0
    3b4c:	009f5001 	addseq	r5, pc, r1
    3b50:	00000000 	andeq	r0, r0, r0
    3b54:	01000000 	mrseq	r0, (UNDEF: 0)
    3b58:	00005000 	andeq	r5, r0, r0
    3b5c:	00000000 	andeq	r0, r0, r0
    3b60:	00010000 	andeq	r0, r1, r0
    3b64:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3b7c:	01000000 	mrseq	r0, (UNDEF: 0)
    3b80:	00005100 	andeq	r5, r0, r0, lsl #2
    3b84:	00000000 	andeq	r0, r0, r0
    3b88:	00040000 	andeq	r0, r4, r0
    3b8c:	9f5101f3 	svcls	0x005101f3
	...
    3b98:	00510001 	subseq	r0, r1, r1
    3b9c:	00000000 	andeq	r0, r0, r0
    3ba0:	04000000 	streq	r0, [r0], #-0
    3ba4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3ba8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3bac:	00000000 	andeq	r0, r0, r0
    3bb0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3bcc:	00010000 	andeq	r0, r1, r0
    3bd0:	00000052 	andeq	r0, r0, r2, asr r0
    3bd4:	00000000 	andeq	r0, r0, r0
    3bd8:	f3000400 	vshl.u8	d0, d0, d0
    3bdc:	009f5201 	addseq	r5, pc, r1, lsl #4
    3be0:	00000000 	andeq	r0, r0, r0
    3be4:	01000000 	mrseq	r0, (UNDEF: 0)
    3be8:	00005200 	andeq	r5, r0, r0, lsl #4
    3bec:	00000000 	andeq	r0, r0, r0
    3bf0:	00040000 	andeq	r0, r4, r0
    3bf4:	9f5201f3 	svcls	0x005201f3
	...
    3c00:	00520001 	subseq	r0, r2, r1
	...
    3c18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3c24:	9f310002 	svcls	0x00310002
	...
    3c30:	00500001 	subseq	r0, r0, r1
	...
    3c44:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c54:	00000100 	andeq	r0, r0, r0, lsl #2
    3c58:	00000000 	andeq	r0, r0, r0
    3c5c:	00030000 	andeq	r0, r3, r0
    3c60:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3c64:	00000000 	andeq	r0, r0, r0
    3c68:	01000000 	mrseq	r0, (UNDEF: 0)
    3c6c:	00005300 	andeq	r5, r0, r0, lsl #6
    3c70:	00000000 	andeq	r0, r0, r0
    3c74:	00030000 	andeq	r0, r3, r0
    3c78:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    3c84:	00000001 	andeq	r0, r0, r1
    3c88:	00000000 	andeq	r0, r0, r0
    3c8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c98:	01000001 	tsteq	r0, r1
	...
    3ca4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3ca8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3cac:	00000000 	andeq	r0, r0, r0
    3cb0:	52000100 	andpl	r0, r0, #0, 2
	...
    3cbc:	00000101 	andeq	r0, r0, r1, lsl #2
    3cc0:	00000000 	andeq	r0, r0, r0
    3cc4:	00010000 	andeq	r0, r1, r0
    3cc8:	00000053 	andeq	r0, r0, r3, asr r0
    3ccc:	00000000 	andeq	r0, r0, r0
    3cd0:	00010000 	andeq	r0, r1, r0
    3cd4:	00000000 	andeq	r0, r0, r0
    3cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    3cdc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3cec:	00020000 	andeq	r0, r2, r0
    3cf0:	0000007d 	andeq	r0, r0, sp, ror r0
    3cf4:	00000000 	andeq	r0, r0, r0
    3cf8:	00020000 	andeq	r0, r2, r0
    3cfc:	0000087d 	andeq	r0, r0, sp, ror r8
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	00020000 	andeq	r0, r2, r0
    3d08:	0000107d 	andeq	r1, r0, sp, ror r0
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	00020000 	andeq	r0, r2, r0
    3d14:	0000087d 	andeq	r0, r0, sp, ror r8
    3d18:	00000000 	andeq	r0, r0, r0
    3d1c:	00020000 	andeq	r0, r2, r0
    3d20:	0000107d 	andeq	r1, r0, sp, ror r0
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	00020000 	andeq	r0, r2, r0
    3d2c:	0000007d 	andeq	r0, r0, sp, ror r0
    3d30:	00000000 	andeq	r0, r0, r0
    3d34:	00020000 	andeq	r0, r2, r0
    3d38:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3d58:	00010000 	andeq	r0, r1, r0
    3d5c:	00000050 	andeq	r0, r0, r0, asr r0
    3d60:	00000000 	andeq	r0, r0, r0
    3d64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3d70:	00500001 	subseq	r0, r0, r1
    3d74:	00000000 	andeq	r0, r0, r0
    3d78:	01000000 	mrseq	r0, (UNDEF: 0)
    3d7c:	00005400 	andeq	r5, r0, r0, lsl #8
    3d80:	00000000 	andeq	r0, r0, r0
    3d84:	00010000 	andeq	r0, r1, r0
    3d88:	00000050 	andeq	r0, r0, r0, asr r0
    3d8c:	00000000 	andeq	r0, r0, r0
    3d90:	f3000400 	vshl.u8	d0, d0, d0
    3d94:	009f5001 	addseq	r5, pc, r1
    3d98:	00000000 	andeq	r0, r0, r0
    3d9c:	01000000 	mrseq	r0, (UNDEF: 0)
    3da0:	00005000 	andeq	r5, r0, r0
    3da4:	00000000 	andeq	r0, r0, r0
    3da8:	00010000 	andeq	r0, r1, r0
    3dac:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    3dc8:	00005100 	andeq	r5, r0, r0, lsl #2
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	00040000 	andeq	r0, r4, r0
    3dd4:	9f5101f3 	svcls	0x005101f3
	...
    3de0:	00510001 	subseq	r0, r1, r1
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	04000000 	streq	r0, [r0], #-0
    3dec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3df0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3df4:	00000000 	andeq	r0, r0, r0
    3df8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3e14:	00010000 	andeq	r0, r1, r0
    3e18:	00000052 	andeq	r0, r0, r2, asr r0
    3e1c:	00000000 	andeq	r0, r0, r0
    3e20:	f3000400 	vshl.u8	d0, d0, d0
    3e24:	009f5201 	addseq	r5, pc, r1, lsl #4
    3e28:	00000000 	andeq	r0, r0, r0
    3e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e30:	00005200 	andeq	r5, r0, r0, lsl #4
    3e34:	00000000 	andeq	r0, r0, r0
    3e38:	00040000 	andeq	r0, r4, r0
    3e3c:	9f5201f3 	svcls	0x005201f3
	...
    3e48:	00520001 	subseq	r0, r2, r1
	...
    3e60:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3e6c:	9f310002 	svcls	0x00310002
	...
    3e78:	00500001 	subseq	r0, r0, r1
	...
    3e8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3e9c:	00000100 	andeq	r0, r0, r0, lsl #2
    3ea0:	00000000 	andeq	r0, r0, r0
    3ea4:	00030000 	andeq	r0, r3, r0
    3ea8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3eac:	00000000 	andeq	r0, r0, r0
    3eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    3eb4:	00005300 	andeq	r5, r0, r0, lsl #6
    3eb8:	00000000 	andeq	r0, r0, r0
    3ebc:	00030000 	andeq	r0, r3, r0
    3ec0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    3ecc:	00000001 	andeq	r0, r0, r1
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	53000100 	movwpl	r0, #256	; 0x100
	...
    3ee0:	01000001 	tsteq	r0, r1
	...
    3eec:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3ef0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	52000100 	andpl	r0, r0, #0, 2
	...
    3f04:	00000101 	andeq	r0, r0, r1, lsl #2
    3f08:	00000000 	andeq	r0, r0, r0
    3f0c:	00010000 	andeq	r0, r1, r0
    3f10:	00000053 	andeq	r0, r0, r3, asr r0
    3f14:	00000000 	andeq	r0, r0, r0
    3f18:	00010000 	andeq	r0, r1, r0
    3f1c:	00000000 	andeq	r0, r0, r0
    3f20:	01000000 	mrseq	r0, (UNDEF: 0)
    3f24:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3f34:	00020000 	andeq	r0, r2, r0
    3f38:	0000007d 	andeq	r0, r0, sp, ror r0
    3f3c:	00000000 	andeq	r0, r0, r0
    3f40:	00020000 	andeq	r0, r2, r0
    3f44:	00001c7d 	andeq	r1, r0, sp, ror ip
    3f48:	00000000 	andeq	r0, r0, r0
    3f4c:	00020000 	andeq	r0, r2, r0
    3f50:	0000287d 	andeq	r2, r0, sp, ror r8
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	00020000 	andeq	r0, r2, r0
    3f5c:	00001c7d 	andeq	r1, r0, sp, ror ip
    3f60:	00000000 	andeq	r0, r0, r0
    3f64:	00020000 	andeq	r0, r2, r0
    3f68:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    3f88:	00010000 	andeq	r0, r1, r0
    3f8c:	00000050 	andeq	r0, r0, r0, asr r0
    3f90:	00000000 	andeq	r0, r0, r0
    3f94:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3fa0:	00500001 	subseq	r0, r0, r1
    3fa4:	00000000 	andeq	r0, r0, r0
    3fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    3fac:	00005400 	andeq	r5, r0, r0, lsl #8
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	00010000 	andeq	r0, r1, r0
    3fb8:	00000050 	andeq	r0, r0, r0, asr r0
    3fbc:	00000000 	andeq	r0, r0, r0
    3fc0:	f3000400 	vshl.u8	d0, d0, d0
    3fc4:	009f5001 	addseq	r5, pc, r1
    3fc8:	00000000 	andeq	r0, r0, r0
    3fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    3fd0:	00005000 	andeq	r5, r0, r0
    3fd4:	00000000 	andeq	r0, r0, r0
    3fd8:	00010000 	andeq	r0, r1, r0
    3fdc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    4000:	00005100 	andeq	r5, r0, r0, lsl #2
    4004:	00000000 	andeq	r0, r0, r0
    4008:	00010000 	andeq	r0, r1, r0
    400c:	00000055 	andeq	r0, r0, r5, asr r0
    4010:	00000000 	andeq	r0, r0, r0
    4014:	f3000400 	vshl.u8	d0, d0, d0
    4018:	009f5101 	addseq	r5, pc, r1, lsl #2
    401c:	00000000 	andeq	r0, r0, r0
    4020:	01000000 	mrseq	r0, (UNDEF: 0)
    4024:	00005500 	andeq	r5, r0, r0, lsl #10
    4028:	00000000 	andeq	r0, r0, r0
    402c:	00010000 	andeq	r0, r1, r0
    4030:	00000059 	andeq	r0, r0, r9, asr r0
    4034:	00000000 	andeq	r0, r0, r0
    4038:	f3000400 	vshl.u8	d0, d0, d0
    403c:	009f5101 	addseq	r5, pc, r1, lsl #2
    4040:	00000000 	andeq	r0, r0, r0
    4044:	01000000 	mrseq	r0, (UNDEF: 0)
    4048:	00005100 	andeq	r5, r0, r0, lsl #2
    404c:	00000000 	andeq	r0, r0, r0
    4050:	00040000 	andeq	r0, r4, r0
    4054:	9f5101f3 	svcls	0x005101f3
	...
    4060:	00510001 	subseq	r0, r1, r1
	...
    407c:	52000100 	andpl	r0, r0, #0, 2
	...
    4088:	01f30004 	mvnseq	r0, r4
    408c:	00009f52 	andeq	r9, r0, r2, asr pc
    4090:	00000000 	andeq	r0, r0, r0
    4094:	00010000 	andeq	r0, r1, r0
    4098:	00000052 	andeq	r0, r0, r2, asr r0
    409c:	00000000 	andeq	r0, r0, r0
    40a0:	f3000400 	vshl.u8	d0, d0, d0
    40a4:	009f5201 	addseq	r5, pc, r1, lsl #4
    40a8:	00000000 	andeq	r0, r0, r0
    40ac:	01000000 	mrseq	r0, (UNDEF: 0)
    40b0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    40c4:	00010000 	andeq	r0, r1, r0
    40c8:	00000053 	andeq	r0, r0, r3, asr r0
    40cc:	00000000 	andeq	r0, r0, r0
    40d0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    40e8:	00910002 	addseq	r0, r1, r2
	...
    40f4:	00910002 	addseq	r0, r1, r2
	...
    410c:	00550001 	subseq	r0, r5, r1
    4110:	00000000 	andeq	r0, r0, r0
    4114:	01000000 	mrseq	r0, (UNDEF: 0)
    4118:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    4124:	01000000 	mrseq	r0, (UNDEF: 0)
    4128:	00000001 	andeq	r0, r0, r1
    412c:	00000000 	andeq	r0, r0, r0
    4130:	00010000 	andeq	r0, r1, r0
    4134:	00000059 	andeq	r0, r0, r9, asr r0
    4138:	00000000 	andeq	r0, r0, r0
    413c:	59000100 	stmdbpl	r0, {r8}
	...
    4148:	7e790003 	cdpvc	0, 7, cr0, cr9, cr3, {0}
    414c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4150:	00000000 	andeq	r0, r0, r0
    4154:	59000100 	stmdbpl	r0, {r8}
	...
    416c:	00500001 	subseq	r0, r0, r1
    4170:	00000000 	andeq	r0, r0, r0
    4174:	01000000 	mrseq	r0, (UNDEF: 0)
    4178:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    4188:	00020000 	andeq	r0, r2, r0
    418c:	0000007d 	andeq	r0, r0, sp, ror r0
    4190:	00000000 	andeq	r0, r0, r0
    4194:	00020000 	andeq	r0, r2, r0
    4198:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    41b0:	00010000 	andeq	r0, r1, r0
    41b4:	00000050 	andeq	r0, r0, r0, asr r0
    41b8:	00000000 	andeq	r0, r0, r0
    41bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    41c8:	00500001 	subseq	r0, r0, r1
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	01000000 	mrseq	r0, (UNDEF: 0)
    41d4:	00005400 	andeq	r5, r0, r0, lsl #8
    41d8:	00000000 	andeq	r0, r0, r0
    41dc:	00010000 	andeq	r0, r1, r0
	...
    41f0:	9f300002 	svcls	0x00300002
	...
    41fc:	0072000b 	rsbseq	r0, r2, fp
    4200:	301a8008 	andscc	r8, sl, r8
    4204:	1aff082e 	bne	fffc62c4 <_estack+0xdffc508c>
    4208:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    420c:	00000000 	andeq	r0, r0, r0
    4210:	72000800 	andvc	r0, r0, #0, 16
    4214:	082e3000 	stmdaeq	lr!, {ip, sp}
    4218:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    421c:	00000000 	andeq	r0, r0, r0
    4220:	0b000000 	bleq	4228 <_Min_Heap_Size+0x3a28>
    4224:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    4228:	2e301a80 	vaddcs.f32	s2, s1, s0
    422c:	9f1aff08 	svcls	0x001aff08
	...
    4238:	00720008 	rsbseq	r0, r2, r8
    423c:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    4240:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    4254:	00530001 	subseq	r0, r3, r1
	...
    4264:	00000001 	andeq	r0, r0, r1
    4268:	00000000 	andeq	r0, r0, r0
    426c:	72000300 	andvc	r0, r0, #0, 6
    4270:	00009f14 	andeq	r9, r0, r4, lsl pc
    4274:	00000000 	andeq	r0, r0, r0
    4278:	00010000 	andeq	r0, r1, r0
    427c:	00000053 	andeq	r0, r0, r3, asr r0
    4280:	00000000 	andeq	r0, r0, r0
    4284:	72000300 	andvc	r0, r0, #0, 6
    4288:	00009f14 	andeq	r9, r0, r4, lsl pc
    428c:	00000000 	andeq	r0, r0, r0
    4290:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    429c:	00530001 	subseq	r0, r3, r1
    42a0:	00000000 	andeq	r0, r0, r0
    42a4:	01000000 	mrseq	r0, (UNDEF: 0)
    42a8:	00010000 	andeq	r0, r1, r0
    42ac:	00000000 	andeq	r0, r0, r0
    42b0:	03000000 	movweq	r0, #0
    42b4:	9f147200 	svcls	0x00147200
	...
    42c0:	00520001 	subseq	r0, r2, r1
    42c4:	00000000 	andeq	r0, r0, r0
    42c8:	01000000 	mrseq	r0, (UNDEF: 0)
    42cc:	00000001 	andeq	r0, r0, r1
    42d0:	00000000 	andeq	r0, r0, r0
    42d4:	53000100 	movwpl	r0, #256	; 0x100
	...
    42e0:	00000100 	andeq	r0, r0, r0, lsl #2
    42e4:	00000000 	andeq	r0, r0, r0
    42e8:	00010000 	andeq	r0, r1, r0
    42ec:	00000051 	andeq	r0, r0, r1, asr r0
	...
    42fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4300:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    430c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4318:	14720003 	ldrbtne	r0, [r2], #-3
    431c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4320:	00000000 	andeq	r0, r0, r0
    4324:	53000100 	movwpl	r0, #256	; 0x100
	...
    4330:	14720003 	ldrbtne	r0, [r2], #-3
    4334:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4338:	00000000 	andeq	r0, r0, r0
    433c:	00010000 	andeq	r0, r1, r0
    4340:	00000000 	andeq	r0, r0, r0
    4344:	01000000 	mrseq	r0, (UNDEF: 0)
    4348:	00005300 	andeq	r5, r0, r0, lsl #6
    434c:	00000000 	andeq	r0, r0, r0
    4350:	00010000 	andeq	r0, r1, r0
    4354:	00000100 	andeq	r0, r0, r0, lsl #2
    4358:	00000000 	andeq	r0, r0, r0
    435c:	00030000 	andeq	r0, r3, r0
    4360:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4364:	00000000 	andeq	r0, r0, r0
    4368:	01000000 	mrseq	r0, (UNDEF: 0)
    436c:	00005200 	andeq	r5, r0, r0, lsl #4
    4370:	00000000 	andeq	r0, r0, r0
    4374:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4380:	00530001 	subseq	r0, r3, r1
	...
    438c:	00000001 	andeq	r0, r0, r1
    4390:	00000000 	andeq	r0, r0, r0
    4394:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    43a8:	007d0002 	rsbseq	r0, sp, r2
	...
    43b4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    43c0:	007d0002 	rsbseq	r0, sp, r2
	...
    43dc:	00500001 	subseq	r0, r0, r1
    43e0:	00000000 	andeq	r0, r0, r0
    43e4:	04000000 	streq	r0, [r0], #-0
    43e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    43ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    43f0:	00000000 	andeq	r0, r0, r0
    43f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4400:	01f30004 	mvnseq	r0, r4
    4404:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4418:	00530001 	subseq	r0, r3, r1
	...
    4428:	00000001 	andeq	r0, r0, r1
    442c:	00000000 	andeq	r0, r0, r0
    4430:	72000300 	andvc	r0, r0, #0, 6
    4434:	00009f14 	andeq	r9, r0, r4, lsl pc
    4438:	00000000 	andeq	r0, r0, r0
    443c:	00010000 	andeq	r0, r1, r0
    4440:	00000053 	andeq	r0, r0, r3, asr r0
    4444:	00000000 	andeq	r0, r0, r0
    4448:	72000300 	andvc	r0, r0, #0, 6
    444c:	00009f14 	andeq	r9, r0, r4, lsl pc
    4450:	00000000 	andeq	r0, r0, r0
    4454:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4460:	00530001 	subseq	r0, r3, r1
    4464:	00000000 	andeq	r0, r0, r0
    4468:	01000000 	mrseq	r0, (UNDEF: 0)
    446c:	00010000 	andeq	r0, r1, r0
    4470:	00000000 	andeq	r0, r0, r0
    4474:	03000000 	movweq	r0, #0
    4478:	9f147200 	svcls	0x00147200
	...
    4484:	00520001 	subseq	r0, r2, r1
    4488:	00000000 	andeq	r0, r0, r0
    448c:	01000000 	mrseq	r0, (UNDEF: 0)
    4490:	00000001 	andeq	r0, r0, r1
    4494:	00000000 	andeq	r0, r0, r0
    4498:	53000100 	movwpl	r0, #256	; 0x100
	...
    44a4:	00000100 	andeq	r0, r0, r0, lsl #2
    44a8:	00000000 	andeq	r0, r0, r0
    44ac:	00010000 	andeq	r0, r1, r0
    44b0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    44c0:	01000000 	mrseq	r0, (UNDEF: 0)
    44c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    44d0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    44dc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    44e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44e4:	00000000 	andeq	r0, r0, r0
    44e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    44f4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    44f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44fc:	00000000 	andeq	r0, r0, r0
    4500:	00010000 	andeq	r0, r1, r0
    4504:	00000000 	andeq	r0, r0, r0
    4508:	01000000 	mrseq	r0, (UNDEF: 0)
    450c:	00005300 	andeq	r5, r0, r0, lsl #6
    4510:	00000000 	andeq	r0, r0, r0
    4514:	00010000 	andeq	r0, r1, r0
    4518:	00000100 	andeq	r0, r0, r0, lsl #2
    451c:	00000000 	andeq	r0, r0, r0
    4520:	00030000 	andeq	r0, r3, r0
    4524:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    4528:	00000000 	andeq	r0, r0, r0
    452c:	01000000 	mrseq	r0, (UNDEF: 0)
    4530:	00005200 	andeq	r5, r0, r0, lsl #4
    4534:	00000000 	andeq	r0, r0, r0
    4538:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4544:	00530001 	subseq	r0, r3, r1
	...
    4550:	00000001 	andeq	r0, r0, r1
    4554:	00000000 	andeq	r0, r0, r0
    4558:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    456c:	00010000 	andeq	r0, r1, r0
    4570:	00000053 	andeq	r0, r0, r3, asr r0
	...
    457c:	00010000 	andeq	r0, r1, r0
    4580:	00000000 	andeq	r0, r0, r0
    4584:	03000000 	movweq	r0, #0
    4588:	9f147200 	svcls	0x00147200
	...
    4594:	00530001 	subseq	r0, r3, r1
    4598:	00000000 	andeq	r0, r0, r0
    459c:	03000000 	movweq	r0, #0
    45a0:	9f147200 	svcls	0x00147200
	...
    45ac:	00000100 	andeq	r0, r0, r0, lsl #2
    45b0:	00000000 	andeq	r0, r0, r0
    45b4:	00010000 	andeq	r0, r1, r0
    45b8:	00000053 	andeq	r0, r0, r3, asr r0
    45bc:	00000000 	andeq	r0, r0, r0
    45c0:	00000100 	andeq	r0, r0, r0, lsl #2
    45c4:	00000001 	andeq	r0, r0, r1
    45c8:	00000000 	andeq	r0, r0, r0
    45cc:	72000300 	andvc	r0, r0, #0, 6
    45d0:	00009f14 	andeq	r9, r0, r4, lsl pc
    45d4:	00000000 	andeq	r0, r0, r0
    45d8:	00010000 	andeq	r0, r1, r0
    45dc:	00000052 	andeq	r0, r0, r2, asr r0
    45e0:	00000000 	andeq	r0, r0, r0
    45e4:	00010100 	andeq	r0, r1, r0, lsl #2
    45e8:	00000000 	andeq	r0, r0, r0
    45ec:	01000000 	mrseq	r0, (UNDEF: 0)
    45f0:	00005300 	andeq	r5, r0, r0, lsl #6
    45f4:	00000000 	andeq	r0, r0, r0
    45f8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4604:	00510001 	subseq	r0, r1, r1
	...
    4618:	53000100 	movwpl	r0, #256	; 0x100
	...
    4628:	00000100 	andeq	r0, r0, r0, lsl #2
    462c:	00000000 	andeq	r0, r0, r0
    4630:	00030000 	andeq	r0, r3, r0
    4634:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4638:	00000000 	andeq	r0, r0, r0
    463c:	01000000 	mrseq	r0, (UNDEF: 0)
    4640:	00005300 	andeq	r5, r0, r0, lsl #6
    4644:	00000000 	andeq	r0, r0, r0
    4648:	00030000 	andeq	r0, r3, r0
    464c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    4658:	00000001 	andeq	r0, r0, r1
    465c:	00000000 	andeq	r0, r0, r0
    4660:	53000100 	movwpl	r0, #256	; 0x100
	...
    466c:	01000001 	tsteq	r0, r1
	...
    4678:	14720003 	ldrbtne	r0, [r2], #-3
    467c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4680:	00000000 	andeq	r0, r0, r0
    4684:	52000100 	andpl	r0, r0, #0, 2
	...
    4690:	00000101 	andeq	r0, r0, r1, lsl #2
    4694:	00000000 	andeq	r0, r0, r0
    4698:	00010000 	andeq	r0, r1, r0
    469c:	00000053 	andeq	r0, r0, r3, asr r0
    46a0:	00000000 	andeq	r0, r0, r0
    46a4:	00010000 	andeq	r0, r1, r0
    46a8:	00000000 	andeq	r0, r0, r0
    46ac:	01000000 	mrseq	r0, (UNDEF: 0)
    46b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    46c8:	00500001 	subseq	r0, r0, r1
    46cc:	00000000 	andeq	r0, r0, r0
    46d0:	04000000 	streq	r0, [r0], #-0
    46d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    46d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    46dc:	00000000 	andeq	r0, r0, r0
    46e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    46ec:	00000002 	andeq	r0, r0, r2
	...
    46fc:	00020000 	andeq	r0, r2, r0
    4700:	00009f30 	andeq	r9, r0, r0, lsr pc
    4704:	00000000 	andeq	r0, r0, r0
    4708:	00080000 	andeq	r0, r8, r0
    470c:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    4710:	9f1aff08 	svcls	0x001aff08
	...
    471c:	00720008 	rsbseq	r0, r2, r8
    4720:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    4724:	00009f1a 	andeq	r9, r0, sl, lsl pc
    4728:	00000000 	andeq	r0, r0, r0
    472c:	00080000 	andeq	r0, r8, r0
    4730:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    4734:	9f1aff08 	svcls	0x001aff08
	...
    4740:	00720008 	rsbseq	r0, r2, r8
    4744:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    4748:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    475c:	00530001 	subseq	r0, r3, r1
	...
    476c:	00000001 	andeq	r0, r0, r1
    4770:	00000000 	andeq	r0, r0, r0
    4774:	72000300 	andvc	r0, r0, #0, 6
    4778:	00009f14 	andeq	r9, r0, r4, lsl pc
    477c:	00000000 	andeq	r0, r0, r0
    4780:	00010000 	andeq	r0, r1, r0
    4784:	00000053 	andeq	r0, r0, r3, asr r0
    4788:	00000000 	andeq	r0, r0, r0
    478c:	72000300 	andvc	r0, r0, #0, 6
    4790:	00009f14 	andeq	r9, r0, r4, lsl pc
    4794:	00000000 	andeq	r0, r0, r0
    4798:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    47a4:	00530001 	subseq	r0, r3, r1
    47a8:	00000000 	andeq	r0, r0, r0
    47ac:	01000000 	mrseq	r0, (UNDEF: 0)
    47b0:	00010000 	andeq	r0, r1, r0
    47b4:	00000000 	andeq	r0, r0, r0
    47b8:	03000000 	movweq	r0, #0
    47bc:	9f147200 	svcls	0x00147200
	...
    47c8:	00520001 	subseq	r0, r2, r1
    47cc:	00000000 	andeq	r0, r0, r0
    47d0:	01000000 	mrseq	r0, (UNDEF: 0)
    47d4:	00000001 	andeq	r0, r0, r1
    47d8:	00000000 	andeq	r0, r0, r0
    47dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    47e8:	00000100 	andeq	r0, r0, r0, lsl #2
    47ec:	00000000 	andeq	r0, r0, r0
    47f0:	00010000 	andeq	r0, r1, r0
    47f4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4804:	01000000 	mrseq	r0, (UNDEF: 0)
    4808:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4814:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4820:	0c720003 	ldcleq	0, cr0, [r2], #-12
    4824:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4828:	00000000 	andeq	r0, r0, r0
    482c:	53000100 	movwpl	r0, #256	; 0x100
	...
    4838:	0c720003 	ldcleq	0, cr0, [r2], #-12
    483c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4840:	00000000 	andeq	r0, r0, r0
    4844:	00010000 	andeq	r0, r1, r0
    4848:	00000000 	andeq	r0, r0, r0
    484c:	01000000 	mrseq	r0, (UNDEF: 0)
    4850:	00005300 	andeq	r5, r0, r0, lsl #6
    4854:	00000000 	andeq	r0, r0, r0
    4858:	00010000 	andeq	r0, r1, r0
    485c:	00000100 	andeq	r0, r0, r0, lsl #2
    4860:	00000000 	andeq	r0, r0, r0
    4864:	00030000 	andeq	r0, r3, r0
    4868:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    486c:	00000000 	andeq	r0, r0, r0
    4870:	01000000 	mrseq	r0, (UNDEF: 0)
    4874:	00005200 	andeq	r5, r0, r0, lsl #4
    4878:	00000000 	andeq	r0, r0, r0
    487c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4888:	00530001 	subseq	r0, r3, r1
	...
    4894:	00000001 	andeq	r0, r0, r1
    4898:	00000000 	andeq	r0, r0, r0
    489c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    48b0:	00010000 	andeq	r0, r1, r0
    48b4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    48c0:	00010000 	andeq	r0, r1, r0
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	03000000 	movweq	r0, #0
    48cc:	9f147200 	svcls	0x00147200
	...
    48d8:	00530001 	subseq	r0, r3, r1
    48dc:	00000000 	andeq	r0, r0, r0
    48e0:	03000000 	movweq	r0, #0
    48e4:	9f147200 	svcls	0x00147200
	...
    48f0:	00000100 	andeq	r0, r0, r0, lsl #2
    48f4:	00000000 	andeq	r0, r0, r0
    48f8:	00010000 	andeq	r0, r1, r0
    48fc:	00000053 	andeq	r0, r0, r3, asr r0
    4900:	00000000 	andeq	r0, r0, r0
    4904:	00000100 	andeq	r0, r0, r0, lsl #2
    4908:	00000001 	andeq	r0, r0, r1
    490c:	00000000 	andeq	r0, r0, r0
    4910:	72000300 	andvc	r0, r0, #0, 6
    4914:	00009f14 	andeq	r9, r0, r4, lsl pc
    4918:	00000000 	andeq	r0, r0, r0
    491c:	00010000 	andeq	r0, r1, r0
    4920:	00000052 	andeq	r0, r0, r2, asr r0
    4924:	00000000 	andeq	r0, r0, r0
    4928:	00010100 	andeq	r0, r1, r0, lsl #2
    492c:	00000000 	andeq	r0, r0, r0
    4930:	01000000 	mrseq	r0, (UNDEF: 0)
    4934:	00005300 	andeq	r5, r0, r0, lsl #6
    4938:	00000000 	andeq	r0, r0, r0
    493c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4948:	00510001 	subseq	r0, r1, r1
	...
    495c:	53000100 	movwpl	r0, #256	; 0x100
	...
    496c:	00000100 	andeq	r0, r0, r0, lsl #2
    4970:	00000000 	andeq	r0, r0, r0
    4974:	00030000 	andeq	r0, r3, r0
    4978:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    497c:	00000000 	andeq	r0, r0, r0
    4980:	01000000 	mrseq	r0, (UNDEF: 0)
    4984:	00005300 	andeq	r5, r0, r0, lsl #6
    4988:	00000000 	andeq	r0, r0, r0
    498c:	00030000 	andeq	r0, r3, r0
    4990:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    499c:	00000001 	andeq	r0, r0, r1
    49a0:	00000000 	andeq	r0, r0, r0
    49a4:	53000100 	movwpl	r0, #256	; 0x100
	...
    49b0:	01000001 	tsteq	r0, r1
	...
    49bc:	14720003 	ldrbtne	r0, [r2], #-3
    49c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49c4:	00000000 	andeq	r0, r0, r0
    49c8:	52000100 	andpl	r0, r0, #0, 2
	...
    49d4:	00000101 	andeq	r0, r0, r1, lsl #2
    49d8:	00000000 	andeq	r0, r0, r0
    49dc:	00010000 	andeq	r0, r1, r0
    49e0:	00000053 	andeq	r0, r0, r3, asr r0
    49e4:	00000000 	andeq	r0, r0, r0
    49e8:	00010000 	andeq	r0, r1, r0
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	01000000 	mrseq	r0, (UNDEF: 0)
    49f4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4a04:	00020000 	andeq	r0, r2, r0
    4a08:	0000007d 	andeq	r0, r0, sp, ror r0
    4a0c:	00000000 	andeq	r0, r0, r0
    4a10:	00020000 	andeq	r0, r2, r0
    4a14:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4a34:	00010000 	andeq	r0, r1, r0
    4a38:	00000050 	andeq	r0, r0, r0, asr r0
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	f3000400 	vshl.u8	d0, d0, d0
    4a44:	009f5001 	addseq	r5, pc, r1
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a50:	00005000 	andeq	r5, r0, r0
    4a54:	00000000 	andeq	r0, r0, r0
    4a58:	00040000 	andeq	r0, r4, r0
    4a5c:	9f5001f3 	svcls	0x005001f3
	...
    4a68:	00500001 	subseq	r0, r0, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	04000000 	streq	r0, [r0], #-0
    4a74:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a7c:	00000000 	andeq	r0, r0, r0
    4a80:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4a8c:	01f30004 	mvnseq	r0, r4
    4a90:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4aac:	00510001 	subseq	r0, r1, r1
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	04000000 	streq	r0, [r0], #-0
    4ab8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4abc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ac0:	00000000 	andeq	r0, r0, r0
    4ac4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4ad0:	01f30004 	mvnseq	r0, r4
    4ad4:	00009f51 	andeq	r9, r0, r1, asr pc
    4ad8:	00000000 	andeq	r0, r0, r0
    4adc:	00010000 	andeq	r0, r1, r0
    4ae0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4af8:	01000000 	mrseq	r0, (UNDEF: 0)
    4afc:	00005200 	andeq	r5, r0, r0, lsl #4
    4b00:	00000000 	andeq	r0, r0, r0
    4b04:	00040000 	andeq	r0, r4, r0
    4b08:	9f5201f3 	svcls	0x005201f3
	...
    4b14:	00520001 	subseq	r0, r2, r1
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	04000000 	streq	r0, [r0], #-0
    4b20:	5201f300 	andpl	pc, r1, #0, 6
    4b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b28:	00000000 	andeq	r0, r0, r0
    4b2c:	52000100 	andpl	r0, r0, #0, 2
	...
    4b40:	007d0002 	rsbseq	r0, sp, r2
	...
    4b4c:	107d0002 	rsbsne	r0, sp, r2
	...
    4b70:	00500001 	subseq	r0, r0, r1
    4b74:	00000000 	andeq	r0, r0, r0
    4b78:	04000000 	streq	r0, [r0], #-0
    4b7c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b84:	00000000 	andeq	r0, r0, r0
    4b88:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4b94:	00540001 	subseq	r0, r4, r1
    4b98:	00000000 	andeq	r0, r0, r0
    4b9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4ba0:	00005000 	andeq	r5, r0, r0
    4ba4:	00000000 	andeq	r0, r0, r0
    4ba8:	00040000 	andeq	r0, r4, r0
    4bac:	9f5001f3 	svcls	0x005001f3
	...
    4bb8:	00500001 	subseq	r0, r0, r1
    4bbc:	00000000 	andeq	r0, r0, r0
    4bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    4bc4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4be0:	00510001 	subseq	r0, r1, r1
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	04000000 	streq	r0, [r0], #-0
    4bec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4bf0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4bf4:	00000000 	andeq	r0, r0, r0
    4bf8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4c04:	01f30004 	mvnseq	r0, r4
    4c08:	00009f51 	andeq	r9, r0, r1, asr pc
    4c0c:	00000000 	andeq	r0, r0, r0
    4c10:	00010000 	andeq	r0, r1, r0
    4c14:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4c2c:	01000000 	mrseq	r0, (UNDEF: 0)
    4c30:	00005200 	andeq	r5, r0, r0, lsl #4
    4c34:	00000000 	andeq	r0, r0, r0
    4c38:	00040000 	andeq	r0, r4, r0
    4c3c:	9f5201f3 	svcls	0x005201f3
	...
    4c48:	00520001 	subseq	r0, r2, r1
    4c4c:	00000000 	andeq	r0, r0, r0
    4c50:	04000000 	streq	r0, [r0], #-0
    4c54:	5201f300 	andpl	pc, r1, #0, 6
    4c58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	52000100 	andpl	r0, r0, #0, 2
	...
    4c6c:	00000001 	andeq	r0, r0, r1
    4c70:	00000000 	andeq	r0, r0, r0
    4c74:	00060000 	andeq	r0, r6, r0
    4c78:	0074f7f2 	ldrshteq	pc, [r4], #-114	; 0xffffff8e	; <UNPREDICTABLE>
	...
    4c90:	00530001 	subseq	r0, r3, r1
	...
    4ca0:	00000001 	andeq	r0, r0, r1
    4ca4:	00000000 	andeq	r0, r0, r0
    4ca8:	72000300 	andvc	r0, r0, #0, 6
    4cac:	00009f14 	andeq	r9, r0, r4, lsl pc
    4cb0:	00000000 	andeq	r0, r0, r0
    4cb4:	00010000 	andeq	r0, r1, r0
    4cb8:	00000053 	andeq	r0, r0, r3, asr r0
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	72000300 	andvc	r0, r0, #0, 6
    4cc4:	00009f14 	andeq	r9, r0, r4, lsl pc
    4cc8:	00000000 	andeq	r0, r0, r0
    4ccc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4cd8:	00530001 	subseq	r0, r3, r1
    4cdc:	00000000 	andeq	r0, r0, r0
    4ce0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ce4:	00010000 	andeq	r0, r1, r0
    4ce8:	00000000 	andeq	r0, r0, r0
    4cec:	03000000 	movweq	r0, #0
    4cf0:	9f147200 	svcls	0x00147200
	...
    4cfc:	00520001 	subseq	r0, r2, r1
    4d00:	00000000 	andeq	r0, r0, r0
    4d04:	01000000 	mrseq	r0, (UNDEF: 0)
    4d08:	00000001 	andeq	r0, r0, r1
    4d0c:	00000000 	andeq	r0, r0, r0
    4d10:	53000100 	movwpl	r0, #256	; 0x100
	...
    4d1c:	00000100 	andeq	r0, r0, r0, lsl #2
    4d20:	00000000 	andeq	r0, r0, r0
    4d24:	00010000 	andeq	r0, r1, r0
    4d28:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4d38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4d44:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d48:	00000008 	andeq	r0, r0, r8
	...
    4d68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4d74:	01f30004 	mvnseq	r0, r4
    4d78:	00009f50 	andeq	r9, r0, r0, asr pc
    4d7c:	00000000 	andeq	r0, r0, r0
    4d80:	00010000 	andeq	r0, r1, r0
    4d84:	00000050 	andeq	r0, r0, r0, asr r0
    4d88:	00000000 	andeq	r0, r0, r0
    4d8c:	f3000400 	vshl.u8	d0, d0, d0
    4d90:	009f5001 	addseq	r5, pc, r1
    4d94:	00000000 	andeq	r0, r0, r0
    4d98:	01000000 	mrseq	r0, (UNDEF: 0)
    4d9c:	00005000 	andeq	r5, r0, r0
    4da0:	00000000 	andeq	r0, r0, r0
    4da4:	00040000 	andeq	r0, r4, r0
    4da8:	9f5001f3 	svcls	0x005001f3
	...
    4db4:	00500001 	subseq	r0, r0, r1
    4db8:	00000000 	andeq	r0, r0, r0
    4dbc:	04000000 	streq	r0, [r0], #-0
    4dc0:	5001f300 	andpl	pc, r1, r0, lsl #6
    4dc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ddc:	01000000 	mrseq	r0, (UNDEF: 0)
    4de0:	00005100 	andeq	r5, r0, r0, lsl #2
    4de4:	00000000 	andeq	r0, r0, r0
    4de8:	00040000 	andeq	r0, r4, r0
    4dec:	9f5101f3 	svcls	0x005101f3
	...
    4df8:	00510001 	subseq	r0, r1, r1
    4dfc:	00000000 	andeq	r0, r0, r0
    4e00:	04000000 	streq	r0, [r0], #-0
    4e04:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4e08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e0c:	00000000 	andeq	r0, r0, r0
    4e10:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4e2c:	00010000 	andeq	r0, r1, r0
    4e30:	00000052 	andeq	r0, r0, r2, asr r0
    4e34:	00000000 	andeq	r0, r0, r0
    4e38:	f3000400 	vshl.u8	d0, d0, d0
    4e3c:	009f5201 	addseq	r5, pc, r1, lsl #4
    4e40:	00000000 	andeq	r0, r0, r0
    4e44:	01000000 	mrseq	r0, (UNDEF: 0)
    4e48:	00005200 	andeq	r5, r0, r0, lsl #4
    4e4c:	00000000 	andeq	r0, r0, r0
    4e50:	00040000 	andeq	r0, r4, r0
    4e54:	9f5201f3 	svcls	0x005201f3
	...
    4e60:	00520001 	subseq	r0, r2, r1
	...
    4e80:	01000000 	mrseq	r0, (UNDEF: 0)
    4e84:	00005000 	andeq	r5, r0, r0
    4e88:	00000000 	andeq	r0, r0, r0
    4e8c:	00040000 	andeq	r0, r4, r0
    4e90:	9f5001f3 	svcls	0x005001f3
	...
    4e9c:	00500001 	subseq	r0, r0, r1
    4ea0:	00000000 	andeq	r0, r0, r0
    4ea4:	04000000 	streq	r0, [r0], #-0
    4ea8:	5001f300 	andpl	pc, r1, r0, lsl #6
    4eac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4eb0:	00000000 	andeq	r0, r0, r0
    4eb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4ec0:	01f30004 	mvnseq	r0, r4
    4ec4:	00009f50 	andeq	r9, r0, r0, asr pc
    4ec8:	00000000 	andeq	r0, r0, r0
    4ecc:	00010000 	andeq	r0, r1, r0
    4ed0:	00000050 	andeq	r0, r0, r0, asr r0
    4ed4:	00000000 	andeq	r0, r0, r0
    4ed8:	f3000400 	vshl.u8	d0, d0, d0
    4edc:	009f5001 	addseq	r5, pc, r1
	...
    4ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ef8:	00005100 	andeq	r5, r0, r0, lsl #2
    4efc:	00000000 	andeq	r0, r0, r0
    4f00:	00020000 	andeq	r0, r2, r0
    4f04:	00002070 	andeq	r2, r0, r0, ror r0
    4f08:	00000000 	andeq	r0, r0, r0
    4f0c:	00040000 	andeq	r0, r4, r0
    4f10:	9f5101f3 	svcls	0x005101f3
	...
    4f1c:	00510001 	subseq	r0, r1, r1
	...
    4f34:	01000000 	mrseq	r0, (UNDEF: 0)
    4f38:	00005200 	andeq	r5, r0, r0, lsl #4
    4f3c:	00000000 	andeq	r0, r0, r0
    4f40:	00020000 	andeq	r0, r2, r0
    4f44:	00002470 	andeq	r2, r0, r0, ror r4
    4f48:	00000000 	andeq	r0, r0, r0
    4f4c:	00040000 	andeq	r0, r4, r0
    4f50:	9f5201f3 	svcls	0x005201f3
	...
    4f5c:	00520001 	subseq	r0, r2, r1
	...
    4f6c:	02000000 	andeq	r0, r0, #0
    4f70:	00007d00 	andeq	r7, r0, r0, lsl #26
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	02000000 	andeq	r0, r0, #0
    4f7c:	00187d00 	andseq	r7, r8, r0, lsl #26
    4f80:	00000000 	andeq	r0, r0, r0
    4f84:	02000000 	andeq	r0, r0, #0
    4f88:	00207d00 	eoreq	r7, r0, r0, lsl #26
    4f8c:	00000000 	andeq	r0, r0, r0
    4f90:	02000000 	andeq	r0, r0, #0
    4f94:	00187d00 	andseq	r7, r8, r0, lsl #26
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	02000000 	andeq	r0, r0, #0
    4fa0:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    4fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    4fc4:	00005000 	andeq	r5, r0, r0
    4fc8:	00000000 	andeq	r0, r0, r0
    4fcc:	00010000 	andeq	r0, r1, r0
    4fd0:	00000054 	andeq	r0, r0, r4, asr r0
    4fd4:	00000000 	andeq	r0, r0, r0
    4fd8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4fe4:	00540001 	subseq	r0, r4, r1
    4fe8:	00000000 	andeq	r0, r0, r0
    4fec:	01000000 	mrseq	r0, (UNDEF: 0)
    4ff0:	00005000 	andeq	r5, r0, r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	00040000 	andeq	r0, r4, r0
    4ffc:	9f5001f3 	svcls	0x005001f3
	...
    5008:	00500001 	subseq	r0, r0, r1
    500c:	00000000 	andeq	r0, r0, r0
    5010:	01000000 	mrseq	r0, (UNDEF: 0)
    5014:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5034:	00510001 	subseq	r0, r1, r1
    5038:	00000000 	andeq	r0, r0, r0
    503c:	01000000 	mrseq	r0, (UNDEF: 0)
    5040:	00005500 	andeq	r5, r0, r0, lsl #10
    5044:	00000000 	andeq	r0, r0, r0
    5048:	00010000 	andeq	r0, r1, r0
    504c:	00000058 	andeq	r0, r0, r8, asr r0
    5050:	00000000 	andeq	r0, r0, r0
    5054:	f3000400 	vshl.u8	d0, d0, d0
    5058:	009f5101 	addseq	r5, pc, r1, lsl #2
    505c:	00000000 	andeq	r0, r0, r0
    5060:	01000000 	mrseq	r0, (UNDEF: 0)
    5064:	00005100 	andeq	r5, r0, r0, lsl #2
    5068:	00000000 	andeq	r0, r0, r0
    506c:	00040000 	andeq	r0, r4, r0
    5070:	9f5101f3 	svcls	0x005101f3
	...
    507c:	00510001 	subseq	r0, r1, r1
	...
    5098:	52000100 	andpl	r0, r0, #0, 2
	...
    50a4:	01f30004 	mvnseq	r0, r4
    50a8:	00009f52 	andeq	r9, r0, r2, asr pc
    50ac:	00000000 	andeq	r0, r0, r0
    50b0:	00010000 	andeq	r0, r1, r0
    50b4:	00000052 	andeq	r0, r0, r2, asr r0
    50b8:	00000000 	andeq	r0, r0, r0
    50bc:	f3000400 	vshl.u8	d0, d0, d0
    50c0:	009f5201 	addseq	r5, pc, r1, lsl #4
    50c4:	00000000 	andeq	r0, r0, r0
    50c8:	01000000 	mrseq	r0, (UNDEF: 0)
    50cc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    50e0:	00010000 	andeq	r0, r1, r0
    50e4:	00000053 	andeq	r0, r0, r3, asr r0
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5100:	00010000 	andeq	r0, r1, r0
    5104:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5110:	00000101 	andeq	r0, r0, r1, lsl #2
    5114:	00000000 	andeq	r0, r0, r0
    5118:	01000000 	mrseq	r0, (UNDEF: 0)
    511c:	00005800 	andeq	r5, r0, r0, lsl #16
    5120:	00000000 	andeq	r0, r0, r0
    5124:	00030000 	andeq	r0, r3, r0
    5128:	009f7e78 	addseq	r7, pc, r8, ror lr	; <UNPREDICTABLE>
    512c:	00000000 	andeq	r0, r0, r0
    5130:	01000000 	mrseq	r0, (UNDEF: 0)
    5134:	00005800 	andeq	r5, r0, r0, lsl #16
    5138:	00000000 	andeq	r0, r0, r0
    513c:	00030000 	andeq	r0, r3, r0
	...
    5150:	9f300002 	svcls	0x00300002
	...
    515c:	00500001 	subseq	r0, r0, r1
    5160:	00000000 	andeq	r0, r0, r0
    5164:	01000000 	mrseq	r0, (UNDEF: 0)
    5168:	00005700 	andeq	r5, r0, r0, lsl #14
    516c:	00000000 	andeq	r0, r0, r0
    5170:	00020000 	andeq	r0, r2, r0
    5174:	00009f30 	andeq	r9, r0, r0, lsr pc
    5178:	00000000 	andeq	r0, r0, r0
    517c:	00020000 	andeq	r0, r2, r0
    5180:	00009f30 	andeq	r9, r0, r0, lsr pc
    5184:	00000000 	andeq	r0, r0, r0
    5188:	0d440000 	stcleq	0, cr0, [r4, #-0]
    518c:	0d480800 	stcleq	8, cr0, [r8, #-0]
    5190:	00020800 	andeq	r0, r2, r0, lsl #16
    5194:	0d48007d 	stcleq	0, cr0, [r8, #-500]	; 0xfffffe0c
    5198:	0d4a0800 	stcleq	8, cr0, [sl, #-0]
    519c:	00020800 	andeq	r0, r2, r0, lsl #16
    51a0:	0d4a187d 	stcleq	8, cr1, [sl, #-500]	; 0xfffffe0c
    51a4:	0e080800 	cdpeq	8, 0, cr0, cr8, cr0, {0}
    51a8:	00020800 	andeq	r0, r2, r0, lsl #16
    51ac:	0e08207d 	mcreq	0, 0, r2, cr8, cr13, {3}
    51b0:	0e0c0800 	cdpeq	8, 0, cr0, cr12, cr0, {0}
    51b4:	00020800 	andeq	r0, r2, r0, lsl #16
    51b8:	0e0c187d 	mcreq	8, 0, r1, cr12, cr13, {3}
    51bc:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
    51c0:	00020800 	andeq	r0, r2, r0, lsl #16
    51c4:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    51dc:	0d440000 	stcleq	0, cr0, [r4, #-0]
    51e0:	0d640800 	stcleq	8, cr0, [r4, #-0]
    51e4:	00010800 	andeq	r0, r1, r0, lsl #16
    51e8:	000d6450 	andeq	r6, sp, r0, asr r4
    51ec:	000d6608 	andeq	r6, sp, r8, lsl #12
    51f0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    51f4:	08000d66 	stmdaeq	r0, {r1, r2, r5, r6, r8, sl, fp}
    51f8:	08000d73 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, sl, fp}
    51fc:	73500001 	cmpvc	r0, #1
    5200:	0408000d 	streq	r0, [r8], #-13
    5204:	0108000e 	tsteq	r8, lr
    5208:	0e045400 	cfcpyseq	mvf5, mvf4
    520c:	0e060800 	cdpeq	8, 0, cr0, cr6, cr0, {0}
    5210:	00010800 	andeq	r0, r1, r0, lsl #16
    5214:	000e0650 	andeq	r0, lr, r0, asr r6
    5218:	000e0c08 	andeq	r0, lr, r8, lsl #24
    521c:	f3000408 	vshl.u8	d0, d8, d0
    5220:	0c9f5001 	ldceq	0, cr5, [pc], {1}
    5224:	0e08000e 	cdpeq	0, 0, cr0, cr8, cr14, {0}
    5228:	0108000e 	tsteq	r8, lr
    522c:	0e0e5000 	cdpeq	0, 0, cr5, cr14, cr0, {0}
    5230:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
    5234:	00010800 	andeq	r0, r1, r0, lsl #16
    5238:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5250:	44000000 	strmi	r0, [r0], #-0
    5254:	7308000d 	movwvc	r0, #32781	; 0x800d
    5258:	0108000d 	tsteq	r8, sp
    525c:	0d735100 	ldfeqe	f5, [r3, #-0]
    5260:	0d960800 	ldceq	8, cr0, [r6]
    5264:	00010800 	andeq	r0, r1, r0, lsl #16
    5268:	000d9655 	andeq	r9, sp, r5, asr r6
    526c:	000ddc08 	andeq	sp, sp, r8, lsl #24
    5270:	f3000408 	vshl.u8	d0, d8, d0
    5274:	dc9f5101 	ldfles	f5, [pc], {1}
    5278:	e008000d 	and	r0, r8, sp
    527c:	0108000d 	tsteq	r8, sp
    5280:	0de05500 	cfstr64eq	mvdx5, [r0]
    5284:	0de20800 	stcleq	8, cr0, [r2]
    5288:	00010800 	andeq	r0, r1, r0, lsl #16
    528c:	000de258 	andeq	lr, sp, r8, asr r2
    5290:	000e0408 	andeq	r0, lr, r8, lsl #8
    5294:	f3000408 	vshl.u8	d0, d8, d0
    5298:	049f5101 	ldreq	r5, [pc], #257	; 52a0 <_Min_Heap_Size+0x4aa0>
    529c:	0608000e 	streq	r0, [r8], -lr
    52a0:	0108000e 	tsteq	r8, lr
    52a4:	0e065100 	adfeqs	f5, f6, f0
    52a8:	0e0c0800 	cdpeq	8, 0, cr0, cr12, cr0, {0}
    52ac:	00040800 	andeq	r0, r4, r0, lsl #16
    52b0:	9f5101f3 	svcls	0x005101f3
    52b4:	08000e0c 	stmdaeq	r0, {r2, r3, r9, sl, fp}
    52b8:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
    52bc:	00510001 	subseq	r0, r1, r1
	...
    52d0:	000d4400 	andeq	r4, sp, r0, lsl #8
    52d4:	000d7308 	andeq	r7, sp, r8, lsl #6
    52d8:	52000108 	andpl	r0, r0, #8, 2
    52dc:	08000d73 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, sl, fp}
    52e0:	08000e04 	stmdaeq	r0, {r2, r9, sl, fp}
    52e4:	01f30004 	mvnseq	r0, r4
    52e8:	0e049f52 	mcreq	15, 0, r9, cr4, cr2, {2}
    52ec:	0e060800 	cdpeq	8, 0, cr0, cr6, cr0, {0}
    52f0:	00010800 	andeq	r0, r1, r0, lsl #16
    52f4:	000e0652 	andeq	r0, lr, r2, asr r6
    52f8:	000e0c08 	andeq	r0, lr, r8, lsl #24
    52fc:	f3000408 	vshl.u8	d0, d8, d0
    5300:	0c9f5201 	lfmeq	f5, 4, [pc], {1}
    5304:	1008000e 	andne	r0, r8, lr
    5308:	0108000e 	tsteq	r8, lr
    530c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5318:	0d440000 	stcleq	0, cr0, [r4, #-0]
    531c:	0d500800 	ldcleq	8, cr0, [r0, #-0]
    5320:	00010800 	andeq	r0, r1, r0, lsl #16
    5324:	000d5053 	andeq	r5, sp, r3, asr r0
    5328:	000e1008 	andeq	r1, lr, r8
    532c:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    5338:	01000000 	mrseq	r0, (UNDEF: 0)
    533c:	00000001 	andeq	r0, r0, r1
    5340:	08000d96 	stmdaeq	r0, {r1, r2, r4, r7, r8, sl, fp}
    5344:	08000dd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, sl, fp}
    5348:	d6550001 	ldrble	r0, [r5], -r1
    534c:	da08000d 	ble	205388 <_Min_Heap_Size+0x204b88>
    5350:	0308000d 	movweq	r0, #32781	; 0x800d
    5354:	9f7f7500 	svcls	0x007f7500
    5358:	08000dda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl, fp}
    535c:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
    5360:	e2550001 	subs	r0, r5, #1
    5364:	0408000d 	streq	r0, [r8], #-13
    5368:	0108000e 	tsteq	r8, lr
    536c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5378:	00010100 	andeq	r0, r1, r0, lsl #2
    537c:	0d960000 	ldceq	0, cr0, [r6]
    5380:	0da40800 	stceq	8, cr0, [r4]
    5384:	00010800 	andeq	r0, r1, r0, lsl #16
    5388:	000da458 	andeq	sl, sp, r8, asr r4
    538c:	000dac08 	andeq	sl, sp, r8, lsl #24
    5390:	78000308 	stmdavc	r0, {r3, r8, r9}
    5394:	0dac9f7e 	stceq	15, cr9, [ip, #504]!	; 0x1f8
    5398:	0ddc0800 	ldcleq	8, cr0, [ip]
    539c:	00010800 	andeq	r0, r1, r0, lsl #16
    53a0:	000de258 	andeq	lr, sp, r8, asr r2
    53a4:	000e0408 	andeq	r0, lr, r8, lsl #8
    53a8:	58000108 	stmdapl	r0, {r3, r8}
	...
    53b4:	00000003 	andeq	r0, r0, r3
	...
    53c0:	0d4c0000 	stcleq	0, cr0, [ip, #-0]
    53c4:	0d760800 	ldcleq	8, cr0, [r6, #-0]
    53c8:	00020800 	andeq	r0, r2, r0, lsl #16
    53cc:	0d769f30 	ldcleq	15, cr9, [r6, #-192]!	; 0xffffff40
    53d0:	0d960800 	ldceq	8, cr0, [r6]
    53d4:	00010800 	andeq	r0, r1, r0, lsl #16
    53d8:	000d9650 	andeq	r9, sp, r0, asr r6
    53dc:	000ddc08 	andeq	sp, sp, r8, lsl #24
    53e0:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    53e4:	08000ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp}
    53e8:	08000de2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, fp}
    53ec:	e2500001 	subs	r0, r0, #1
    53f0:	0408000d 	streq	r0, [r8], #-13
    53f4:	0108000e 	tsteq	r8, lr
    53f8:	0e045700 	cdpeq	7, 0, cr5, cr4, cr0, {0}
    53fc:	0e060800 	cdpeq	8, 0, cr0, cr6, cr0, {0}
    5400:	00020800 	andeq	r0, r2, r0, lsl #16
    5404:	0e0c9f30 	mcreq	15, 0, r9, cr12, cr0, {1}
    5408:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
    540c:	00020800 	andeq	r0, r2, r0, lsl #16
    5410:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    5420:	00020000 	andeq	r0, r2, r0
    5424:	0000007d 	andeq	r0, r0, sp, ror r0
    5428:	00000000 	andeq	r0, r0, r0
    542c:	00020000 	andeq	r0, r2, r0
    5430:	0000087d 	andeq	r0, r0, sp, ror r8
    5434:	00000000 	andeq	r0, r0, r0
    5438:	00020000 	andeq	r0, r2, r0
    543c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    5454:	00010000 	andeq	r0, r1, r0
    5458:	00000050 	andeq	r0, r0, r0, asr r0
    545c:	00000000 	andeq	r0, r0, r0
    5460:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    546c:	00500001 	subseq	r0, r0, r1
    5470:	00000000 	andeq	r0, r0, r0
    5474:	04000000 	streq	r0, [r0], #-0
    5478:	5001f300 	andpl	pc, r1, r0, lsl #6
    547c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    548c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5498:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    549c:	00000010 	andeq	r0, r0, r0, lsl r0
    54a0:	00000000 	andeq	r0, r0, r0
    54a4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    54c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    54cc:	00540001 	subseq	r0, r4, r1
    54d0:	00000000 	andeq	r0, r0, r0
    54d4:	01000000 	mrseq	r0, (UNDEF: 0)
    54d8:	00005000 	andeq	r5, r0, r0
    54dc:	00000000 	andeq	r0, r0, r0
    54e0:	00040000 	andeq	r0, r4, r0
    54e4:	9f5001f3 	svcls	0x005001f3
	...
    54fc:	00010000 	andeq	r0, r1, r0
    5500:	00000051 	andeq	r0, r0, r1, asr r0
    5504:	00000000 	andeq	r0, r0, r0
    5508:	f3000400 	vshl.u8	d0, d0, d0
    550c:	009f5101 	addseq	r5, pc, r1, lsl #2
    5510:	00000000 	andeq	r0, r0, r0
    5514:	01000000 	mrseq	r0, (UNDEF: 0)
    5518:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    5534:	00520001 	subseq	r0, r2, r1
    5538:	00000000 	andeq	r0, r0, r0
    553c:	01000000 	mrseq	r0, (UNDEF: 0)
    5540:	00005600 	andeq	r5, r0, r0, lsl #12
    5544:	00000000 	andeq	r0, r0, r0
    5548:	00040000 	andeq	r0, r4, r0
    554c:	9f5201f3 	svcls	0x005201f3
	...
    5558:	00560001 	subseq	r0, r6, r1
    555c:	00000000 	andeq	r0, r0, r0
    5560:	01000000 	mrseq	r0, (UNDEF: 0)
    5564:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5574:	00020000 	andeq	r0, r2, r0
    5578:	0000007d 	andeq	r0, r0, sp, ror r0
    557c:	00000000 	andeq	r0, r0, r0
    5580:	00020000 	andeq	r0, r2, r0
    5584:	0000107d 	andeq	r1, r0, sp, ror r0
    5588:	00000000 	andeq	r0, r0, r0
    558c:	00020000 	andeq	r0, r2, r0
    5590:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    55a8:	00010000 	andeq	r0, r1, r0
    55ac:	00000050 	andeq	r0, r0, r0, asr r0
    55b0:	00000000 	andeq	r0, r0, r0
    55b4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    55c0:	00500001 	subseq	r0, r0, r1
    55c4:	00000000 	andeq	r0, r0, r0
    55c8:	04000000 	streq	r0, [r0], #-0
    55cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    55d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    55e8:	01000000 	mrseq	r0, (UNDEF: 0)
    55ec:	00005100 	andeq	r5, r0, r0, lsl #2
    55f0:	00000000 	andeq	r0, r0, r0
    55f4:	00010000 	andeq	r0, r1, r0
    55f8:	00000055 	andeq	r0, r0, r5, asr r0
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	f3000400 	vshl.u8	d0, d0, d0
    5604:	009f5101 	addseq	r5, pc, r1, lsl #2
    5608:	00000000 	andeq	r0, r0, r0
    560c:	01000000 	mrseq	r0, (UNDEF: 0)
    5610:	00005500 	andeq	r5, r0, r0, lsl #10
    5614:	00000000 	andeq	r0, r0, r0
    5618:	00010000 	andeq	r0, r1, r0
    561c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    562c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5638:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    563c:	00000008 	andeq	r0, r0, r8
    5640:	00000000 	andeq	r0, r0, r0
    5644:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5660:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    566c:	00540001 	subseq	r0, r4, r1
    5670:	00000000 	andeq	r0, r0, r0
    5674:	01000000 	mrseq	r0, (UNDEF: 0)
    5678:	00005000 	andeq	r5, r0, r0
    567c:	00000000 	andeq	r0, r0, r0
    5680:	00040000 	andeq	r0, r4, r0
    5684:	9f5001f3 	svcls	0x005001f3
	...
    5690:	08000c18 	stmdaeq	r0, {r3, r4, sl, fp}
    5694:	08000c20 	stmdaeq	r0, {r5, sl, fp}
    5698:	007d0002 	rsbseq	r0, sp, r2
    569c:	08000c20 	stmdaeq	r0, {r5, sl, fp}
    56a0:	08000d36 	stmdaeq	r0, {r1, r2, r4, r5, r8, sl, fp}
    56a4:	087d0002 	ldmdaeq	sp!, {r1}^
    56a8:	08000d36 	stmdaeq	r0, {r1, r2, r4, r5, r8, sl, fp}
    56ac:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
    56b0:	007d0002 	rsbseq	r0, sp, r2
	...
    56c8:	08000c18 	stmdaeq	r0, {r3, r4, sl, fp}
    56cc:	08000c4e 	stmdaeq	r0, {r1, r2, r3, r6, sl, fp}
    56d0:	4e500001 	cdpmi	0, 5, cr0, cr0, cr1, {0}
    56d4:	d608000c 	strle	r0, [r8], -ip
    56d8:	0108000c 	tsteq	r8, ip
    56dc:	0cd65400 	cfldrdeq	mvd5, [r6], {0}
    56e0:	0d0c0800 	stceq	8, cr0, [ip, #-0]
    56e4:	00010800 	andeq	r0, r1, r0, lsl #16
    56e8:	000d0c50 	andeq	r0, sp, r0, asr ip
    56ec:	000d3608 	andeq	r3, sp, r8, lsl #12
    56f0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    56f4:	08000d36 	stmdaeq	r0, {r1, r2, r4, r5, r8, sl, fp}
    56f8:	08000d38 	stmdaeq	r0, {r3, r4, r5, r8, sl, fp}
    56fc:	38500001 	ldmdacc	r0, {r0}^
    5700:	4408000d 	strmi	r0, [r8], #-13
    5704:	0408000d 	streq	r0, [r8], #-13
    5708:	5001f300 	andpl	pc, r1, r0, lsl #6
    570c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    571c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5728:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    572c:	00000008 	andeq	r0, r0, r8
    5730:	00000000 	andeq	r0, r0, r0
    5734:	0011dc00 	andseq	sp, r1, r0, lsl #24
    5738:	0011de08 	andseq	sp, r1, r8, lsl #28
    573c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    5740:	0011de00 	andseq	sp, r1, r0, lsl #28
    5744:	0011fc08 	andseq	pc, r1, r8, lsl #24
    5748:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    574c:	00000008 	andeq	r0, r0, r8
    5750:	00000000 	andeq	r0, r0, r0
    5754:	0011bc00 	andseq	fp, r1, r0, lsl #24
    5758:	0011be08 	andseq	fp, r1, r8, lsl #28
    575c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    5760:	0011be00 	andseq	fp, r1, r0, lsl #28
    5764:	0011dc08 	andseq	sp, r1, r8, lsl #24
    5768:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    576c:	00000008 	andeq	r0, r0, r8
	...
    577c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5788:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    578c:	00000008 	andeq	r0, r0, r8
    5790:	00000000 	andeq	r0, r0, r0
    5794:	00000100 	andeq	r0, r0, r0, lsl #2
    5798:	00000000 	andeq	r0, r0, r0
    579c:	00000001 	andeq	r0, r0, r1
    57a0:	00000000 	andeq	r0, r0, r0
    57a4:	30000200 	andcc	r0, r0, r0, lsl #4
    57a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    57ac:	00000000 	andeq	r0, r0, r0
    57b0:	52000100 	andpl	r0, r0, #0, 2
	...
    57bc:	00520001 	subseq	r0, r2, r1
    57c0:	00000000 	andeq	r0, r0, r0
    57c4:	02000000 	andeq	r0, r0, #0
    57c8:	009f3000 	addseq	r3, pc, r0
    57cc:	00000000 	andeq	r0, r0, r0
    57d0:	01000000 	mrseq	r0, (UNDEF: 0)
    57d4:	00000000 	andeq	r0, r0, r0
    57d8:	00010000 	andeq	r0, r1, r0
    57dc:	00000000 	andeq	r0, r0, r0
    57e0:	02000000 	andeq	r0, r0, #0
    57e4:	009f3000 	addseq	r3, pc, r0
    57e8:	00000000 	andeq	r0, r0, r0
    57ec:	01000000 	mrseq	r0, (UNDEF: 0)
    57f0:	00005000 	andeq	r5, r0, r0
    57f4:	00000000 	andeq	r0, r0, r0
    57f8:	00020000 	andeq	r0, r2, r0
    57fc:	00009f30 	andeq	r9, r0, r0, lsr pc
    5800:	00000000 	andeq	r0, r0, r0
    5804:	00020000 	andeq	r0, r2, r0
    5808:	00009f30 	andeq	r9, r0, r0, lsr pc
    580c:	00000000 	andeq	r0, r0, r0
    5810:	00010000 	andeq	r0, r1, r0
    5814:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5820:	9f300002 	svcls	0x00300002
	...
    582c:	00530001 	subseq	r0, r3, r1
    5830:	00000000 	andeq	r0, r0, r0
    5834:	02000000 	andeq	r0, r0, #0
    5838:	009f3000 	addseq	r3, pc, r0
    583c:	00000000 	andeq	r0, r0, r0
    5840:	02000000 	andeq	r0, r0, #0
    5844:	00000000 	andeq	r0, r0, r0
    5848:	00010000 	andeq	r0, r1, r0
    584c:	00000000 	andeq	r0, r0, r0
    5850:	02000000 	andeq	r0, r0, #0
    5854:	009f3000 	addseq	r3, pc, r0
    5858:	00000000 	andeq	r0, r0, r0
    585c:	01000000 	mrseq	r0, (UNDEF: 0)
    5860:	00005000 	andeq	r5, r0, r0
    5864:	00000000 	andeq	r0, r0, r0
    5868:	00020000 	andeq	r0, r2, r0
    586c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5870:	00000000 	andeq	r0, r0, r0
    5874:	00060000 	andeq	r0, r6, r0
    5878:	f424000c 	vld4.8	{d0-d3}, [r4], ip
    587c:	00009f00 	andeq	r9, r0, r0, lsl #30
	...
    588c:	00020000 	andeq	r0, r2, r0
    5890:	0000007d 	andeq	r0, r0, sp, ror r0
    5894:	00000000 	andeq	r0, r0, r0
    5898:	00020000 	andeq	r0, r2, r0
    589c:	0000107d 	andeq	r1, r0, sp, ror r0
    58a0:	00000000 	andeq	r0, r0, r0
    58a4:	00020000 	andeq	r0, r2, r0
    58a8:	0000307d 	andeq	r3, r0, sp, ror r0
    58ac:	00000000 	andeq	r0, r0, r0
    58b0:	00020000 	andeq	r0, r2, r0
    58b4:	0000107d 	andeq	r1, r0, sp, ror r0
    58b8:	00000000 	andeq	r0, r0, r0
    58bc:	00020000 	andeq	r0, r2, r0
    58c0:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    58e0:	00500001 	subseq	r0, r0, r1
    58e4:	00000000 	andeq	r0, r0, r0
    58e8:	01000000 	mrseq	r0, (UNDEF: 0)
    58ec:	00005600 	andeq	r5, r0, r0, lsl #12
    58f0:	00000000 	andeq	r0, r0, r0
    58f4:	00040000 	andeq	r0, r4, r0
    58f8:	9f5001f3 	svcls	0x005001f3
	...
    5904:	00500001 	subseq	r0, r0, r1
    5908:	00000000 	andeq	r0, r0, r0
    590c:	01000000 	mrseq	r0, (UNDEF: 0)
    5910:	00005600 	andeq	r5, r0, r0, lsl #12
    5914:	00000000 	andeq	r0, r0, r0
    5918:	00040000 	andeq	r0, r4, r0
    591c:	9f5001f3 	svcls	0x005001f3
	...
    5928:	00560001 	subseq	r0, r6, r1
	...
    5940:	01000000 	mrseq	r0, (UNDEF: 0)
    5944:	00005100 	andeq	r5, r0, r0, lsl #2
    5948:	00000000 	andeq	r0, r0, r0
    594c:	00010000 	andeq	r0, r1, r0
    5950:	00000055 	andeq	r0, r0, r5, asr r0
    5954:	00000000 	andeq	r0, r0, r0
    5958:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5964:	00550001 	subseq	r0, r5, r1
	...
    5984:	52000100 	andpl	r0, r0, #0, 2
	...
    5990:	00540001 	subseq	r0, r4, r1
    5994:	00000000 	andeq	r0, r0, r0
    5998:	04000000 	streq	r0, [r0], #-0
    599c:	5201f300 	andpl	pc, r1, #0, 6
    59a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    59a4:	00000000 	andeq	r0, r0, r0
    59a8:	52000100 	andpl	r0, r0, #0, 2
	...
    59b4:	00540001 	subseq	r0, r4, r1
    59b8:	00000000 	andeq	r0, r0, r0
    59bc:	04000000 	streq	r0, [r0], #-0
    59c0:	5201f300 	andpl	pc, r1, #0, 6
    59c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    59c8:	00000000 	andeq	r0, r0, r0
    59cc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    59e0:	007d0002 	rsbseq	r0, sp, r2
	...
    59ec:	107d0002 	rsbsne	r0, sp, r2
	...
    59f8:	007d0002 	rsbseq	r0, sp, r2
	...
    5a04:	107d0002 	rsbsne	r0, sp, r2
	...
    5a24:	00010000 	andeq	r0, r1, r0
    5a28:	00000050 	andeq	r0, r0, r0, asr r0
    5a2c:	00000000 	andeq	r0, r0, r0
    5a30:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5a3c:	00500001 	subseq	r0, r0, r1
    5a40:	00000000 	andeq	r0, r0, r0
    5a44:	01000000 	mrseq	r0, (UNDEF: 0)
    5a48:	00005400 	andeq	r5, r0, r0, lsl #8
    5a4c:	00000000 	andeq	r0, r0, r0
    5a50:	00010000 	andeq	r0, r1, r0
    5a54:	00000050 	andeq	r0, r0, r0, asr r0
    5a58:	00000000 	andeq	r0, r0, r0
    5a5c:	f3000400 	vshl.u8	d0, d0, d0
    5a60:	009f5001 	addseq	r5, pc, r1
    5a64:	00000000 	andeq	r0, r0, r0
    5a68:	01000000 	mrseq	r0, (UNDEF: 0)
    5a6c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5a88:	00010000 	andeq	r0, r1, r0
    5a8c:	00000051 	andeq	r0, r0, r1, asr r0
    5a90:	00000000 	andeq	r0, r0, r0
    5a94:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5aa0:	00510001 	subseq	r0, r1, r1
    5aa4:	00000000 	andeq	r0, r0, r0
    5aa8:	01000000 	mrseq	r0, (UNDEF: 0)
    5aac:	00005500 	andeq	r5, r0, r0, lsl #10
    5ab0:	00000000 	andeq	r0, r0, r0
    5ab4:	00010000 	andeq	r0, r1, r0
    5ab8:	00000051 	andeq	r0, r0, r1, asr r0
    5abc:	00000000 	andeq	r0, r0, r0
    5ac0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5acc:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    5ad8:	00500001 	subseq	r0, r0, r1
    5adc:	00000000 	andeq	r0, r0, r0
    5ae0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ae4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5af4:	00020000 	andeq	r0, r2, r0
    5af8:	0000007d 	andeq	r0, r0, sp, ror r0
    5afc:	00000000 	andeq	r0, r0, r0
    5b00:	00020000 	andeq	r0, r2, r0
    5b04:	0000107d 	andeq	r1, r0, sp, ror r0
    5b08:	00000000 	andeq	r0, r0, r0
    5b0c:	00020000 	andeq	r0, r2, r0
    5b10:	0000187d 	andeq	r1, r0, sp, ror r8
    5b14:	00000000 	andeq	r0, r0, r0
    5b18:	00020000 	andeq	r0, r2, r0
    5b1c:	0000007d 	andeq	r0, r0, sp, ror r0
    5b20:	00000000 	andeq	r0, r0, r0
    5b24:	00020000 	andeq	r0, r2, r0
    5b28:	0000187d 	andeq	r1, r0, sp, ror r8
    5b2c:	00000000 	andeq	r0, r0, r0
    5b30:	00020000 	andeq	r0, r2, r0
    5b34:	0000107d 	andeq	r1, r0, sp, ror r0
    5b38:	00000000 	andeq	r0, r0, r0
    5b3c:	00020000 	andeq	r0, r2, r0
    5b40:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    5b6c:	00500001 	subseq	r0, r0, r1
    5b70:	00000000 	andeq	r0, r0, r0
    5b74:	01000000 	mrseq	r0, (UNDEF: 0)
    5b78:	00005400 	andeq	r5, r0, r0, lsl #8
    5b7c:	00000000 	andeq	r0, r0, r0
    5b80:	00010000 	andeq	r0, r1, r0
    5b84:	00000050 	andeq	r0, r0, r0, asr r0
    5b88:	00000000 	andeq	r0, r0, r0
    5b8c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5b98:	01f30004 	mvnseq	r0, r4
    5b9c:	00009f50 	andeq	r9, r0, r0, asr pc
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	00010000 	andeq	r0, r1, r0
    5ba8:	00000054 	andeq	r0, r0, r4, asr r0
    5bac:	00000000 	andeq	r0, r0, r0
    5bb0:	f3000400 	vshl.u8	d0, d0, d0
    5bb4:	009f5001 	addseq	r5, pc, r1
    5bb8:	00000000 	andeq	r0, r0, r0
    5bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    5bc0:	00005400 	andeq	r5, r0, r0, lsl #8
    5bc4:	00000000 	andeq	r0, r0, r0
    5bc8:	00010000 	andeq	r0, r1, r0
    5bcc:	00000050 	andeq	r0, r0, r0, asr r0
    5bd0:	00000000 	andeq	r0, r0, r0
    5bd4:	f3000400 	vshl.u8	d0, d0, d0
    5bd8:	009f5001 	addseq	r5, pc, r1
    5bdc:	00000000 	andeq	r0, r0, r0
    5be0:	01000000 	mrseq	r0, (UNDEF: 0)
    5be4:	00005400 	andeq	r5, r0, r0, lsl #8
    5be8:	00000000 	andeq	r0, r0, r0
    5bec:	00040000 	andeq	r0, r4, r0
    5bf0:	9f5001f3 	svcls	0x005001f3
	...
    5bfc:	00540001 	subseq	r0, r4, r1
	...
    5c08:	00000101 	andeq	r0, r0, r1, lsl #2
    5c0c:	00000101 	andeq	r0, r0, r1, lsl #2
    5c10:	00000101 	andeq	r0, r0, r1, lsl #2
    5c14:	00000101 	andeq	r0, r0, r1, lsl #2
    5c18:	00000101 	andeq	r0, r0, r1, lsl #2
    5c1c:	00000101 	andeq	r0, r0, r1, lsl #2
    5c20:	00000101 	andeq	r0, r0, r1, lsl #2
    5c24:	00000101 	andeq	r0, r0, r1, lsl #2
    5c28:	00000101 	andeq	r0, r0, r1, lsl #2
    5c2c:	00000101 	andeq	r0, r0, r1, lsl #2
    5c30:	00000000 	andeq	r0, r0, r0
    5c34:	00000101 	andeq	r0, r0, r1, lsl #2
    5c38:	00000101 	andeq	r0, r0, r1, lsl #2
    5c3c:	00000000 	andeq	r0, r0, r0
    5c40:	01000000 	mrseq	r0, (UNDEF: 0)
    5c44:	00005000 	andeq	r5, r0, r0
    5c48:	00000000 	andeq	r0, r0, r0
    5c4c:	00010000 	andeq	r0, r1, r0
    5c50:	00000055 	andeq	r0, r0, r5, asr r0
    5c54:	00000000 	andeq	r0, r0, r0
    5c58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5c64:	00550001 	subseq	r0, r5, r1
    5c68:	00000000 	andeq	r0, r0, r0
    5c6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c70:	00005000 	andeq	r5, r0, r0
    5c74:	00000000 	andeq	r0, r0, r0
    5c78:	00010000 	andeq	r0, r1, r0
    5c7c:	00000055 	andeq	r0, r0, r5, asr r0
    5c80:	00000000 	andeq	r0, r0, r0
    5c84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5c90:	00550001 	subseq	r0, r5, r1
    5c94:	00000000 	andeq	r0, r0, r0
    5c98:	01000000 	mrseq	r0, (UNDEF: 0)
    5c9c:	00005000 	andeq	r5, r0, r0
    5ca0:	00000000 	andeq	r0, r0, r0
    5ca4:	00010000 	andeq	r0, r1, r0
    5ca8:	00000055 	andeq	r0, r0, r5, asr r0
    5cac:	00000000 	andeq	r0, r0, r0
    5cb0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5cbc:	00550001 	subseq	r0, r5, r1
    5cc0:	00000000 	andeq	r0, r0, r0
    5cc4:	01000000 	mrseq	r0, (UNDEF: 0)
    5cc8:	00005000 	andeq	r5, r0, r0
    5ccc:	00000000 	andeq	r0, r0, r0
    5cd0:	00010000 	andeq	r0, r1, r0
    5cd4:	00000056 	andeq	r0, r0, r6, asr r0
    5cd8:	00000000 	andeq	r0, r0, r0
    5cdc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5ce8:	00560001 	subseq	r0, r6, r1
    5cec:	00000000 	andeq	r0, r0, r0
    5cf0:	01000000 	mrseq	r0, (UNDEF: 0)
    5cf4:	00005000 	andeq	r5, r0, r0
    5cf8:	00000000 	andeq	r0, r0, r0
    5cfc:	00010000 	andeq	r0, r1, r0
    5d00:	00000056 	andeq	r0, r0, r6, asr r0
    5d04:	00000000 	andeq	r0, r0, r0
    5d08:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d14:	00550001 	subseq	r0, r5, r1
    5d18:	00000000 	andeq	r0, r0, r0
    5d1c:	01000000 	mrseq	r0, (UNDEF: 0)
    5d20:	00005600 	andeq	r5, r0, r0, lsl #12
    5d24:	00000000 	andeq	r0, r0, r0
    5d28:	00010000 	andeq	r0, r1, r0
    5d2c:	00000055 	andeq	r0, r0, r5, asr r0
    5d30:	00000000 	andeq	r0, r0, r0
    5d34:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d40:	00540001 	subseq	r0, r4, r1
    5d44:	00000000 	andeq	r0, r0, r0
    5d48:	01000000 	mrseq	r0, (UNDEF: 0)
    5d4c:	00005000 	andeq	r5, r0, r0
    5d50:	00000000 	andeq	r0, r0, r0
    5d54:	00010000 	andeq	r0, r1, r0
    5d58:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5d6c:	53000100 	movwpl	r0, #256	; 0x100
	...
    5d78:	00530001 	subseq	r0, r3, r1
    5d7c:	00000000 	andeq	r0, r0, r0
    5d80:	01000000 	mrseq	r0, (UNDEF: 0)
    5d84:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    5d94:	02000000 	andeq	r0, r0, #0
    5d98:	009f3000 	addseq	r3, pc, r0
    5d9c:	00000000 	andeq	r0, r0, r0
    5da0:	02000000 	andeq	r0, r0, #0
    5da4:	009f3100 	addseq	r3, pc, r0, lsl #2
    5da8:	00000000 	andeq	r0, r0, r0
    5dac:	01000000 	mrseq	r0, (UNDEF: 0)
    5db0:	00005500 	andeq	r5, r0, r0, lsl #10
    5db4:	00000000 	andeq	r0, r0, r0
    5db8:	00020000 	andeq	r0, r2, r0
    5dbc:	00009f30 	andeq	r9, r0, r0, lsr pc
    5dc0:	00000000 	andeq	r0, r0, r0
    5dc4:	00010000 	andeq	r0, r1, r0
    5dc8:	00000055 	andeq	r0, r0, r5, asr r0
    5dcc:	00000000 	andeq	r0, r0, r0
    5dd0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5de4:	007d0002 	rsbseq	r0, sp, r2
	...
    5df0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5e0c:	00500001 	subseq	r0, r0, r1
    5e10:	00000000 	andeq	r0, r0, r0
    5e14:	04000000 	streq	r0, [r0], #-0
    5e18:	5001f300 	andpl	pc, r1, r0, lsl #6
    5e1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e20:	00000000 	andeq	r0, r0, r0
    5e24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5e30:	01f30004 	mvnseq	r0, r4
    5e34:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5e44:	00020000 	andeq	r0, r2, r0
    5e48:	0000007d 	andeq	r0, r0, sp, ror r0
    5e4c:	00000000 	andeq	r0, r0, r0
    5e50:	00020000 	andeq	r0, r2, r0
    5e54:	00000c7d 	andeq	r0, r0, sp, ror ip
    5e58:	00000000 	andeq	r0, r0, r0
    5e5c:	00020000 	andeq	r0, r2, r0
    5e60:	0000187d 	andeq	r1, r0, sp, ror r8
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	00020000 	andeq	r0, r2, r0
    5e6c:	00000c7d 	andeq	r0, r0, sp, ror ip
    5e70:	00000000 	andeq	r0, r0, r0
    5e74:	00020000 	andeq	r0, r2, r0
    5e78:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    5e90:	00010000 	andeq	r0, r1, r0
    5e94:	00000050 	andeq	r0, r0, r0, asr r0
    5e98:	00000000 	andeq	r0, r0, r0
    5e9c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5ea8:	00500001 	subseq	r0, r0, r1
    5eac:	00000000 	andeq	r0, r0, r0
    5eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    5eb4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5ecc:	00010000 	andeq	r0, r1, r0
    5ed0:	00000051 	andeq	r0, r0, r1, asr r0
    5ed4:	00000000 	andeq	r0, r0, r0
    5ed8:	f3000400 	vshl.u8	d0, d0, d0
    5edc:	009f5101 	addseq	r5, pc, r1, lsl #2
    5ee0:	00000000 	andeq	r0, r0, r0
    5ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ee8:	00005100 	andeq	r5, r0, r0, lsl #2
    5eec:	00000000 	andeq	r0, r0, r0
    5ef0:	00040000 	andeq	r0, r4, r0
    5ef4:	9f5101f3 	svcls	0x005101f3
	...
    5f08:	007d0002 	rsbseq	r0, sp, r2
	...
    5f14:	107d0002 	rsbsne	r0, sp, r2
	...
    5f30:	00500001 	subseq	r0, r0, r1
    5f34:	00000000 	andeq	r0, r0, r0
    5f38:	01000000 	mrseq	r0, (UNDEF: 0)
    5f3c:	00005500 	andeq	r5, r0, r0, lsl #10
    5f40:	00000000 	andeq	r0, r0, r0
    5f44:	00010000 	andeq	r0, r1, r0
    5f48:	00000050 	andeq	r0, r0, r0, asr r0
    5f4c:	00000000 	andeq	r0, r0, r0
    5f50:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5f6c:	00510001 	subseq	r0, r1, r1
    5f70:	00000000 	andeq	r0, r0, r0
    5f74:	04000000 	streq	r0, [r0], #-0
    5f78:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5f7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5f80:	00000000 	andeq	r0, r0, r0
    5f84:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5f90:	01f30004 	mvnseq	r0, r4
    5f94:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5fa8:	00530001 	subseq	r0, r3, r1
	...
    5fb8:	02000000 	andeq	r0, r0, #0
    5fbc:	00007d00 	andeq	r7, r0, r0, lsl #26
    5fc0:	00000000 	andeq	r0, r0, r0
    5fc4:	02000000 	andeq	r0, r0, #0
    5fc8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5fe0:	01000000 	mrseq	r0, (UNDEF: 0)
    5fe4:	00005000 	andeq	r5, r0, r0
    5fe8:	00000000 	andeq	r0, r0, r0
    5fec:	00010000 	andeq	r0, r1, r0
    5ff0:	00000055 	andeq	r0, r0, r5, asr r0
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6004:	00550001 	subseq	r0, r5, r1
	...
    601c:	01000000 	mrseq	r0, (UNDEF: 0)
    6020:	00005100 	andeq	r5, r0, r0, lsl #2
    6024:	00000000 	andeq	r0, r0, r0
    6028:	00040000 	andeq	r0, r4, r0
    602c:	9f5101f3 	svcls	0x005101f3
	...
    6038:	00510001 	subseq	r0, r1, r1
    603c:	00000000 	andeq	r0, r0, r0
    6040:	04000000 	streq	r0, [r0], #-0
    6044:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6048:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6060:	52000100 	andpl	r0, r0, #0, 2
	...
    606c:	01f30004 	mvnseq	r0, r4
    6070:	00009f52 	andeq	r9, r0, r2, asr pc
    6074:	00000000 	andeq	r0, r0, r0
    6078:	00010000 	andeq	r0, r1, r0
    607c:	00000052 	andeq	r0, r0, r2, asr r0
    6080:	00000000 	andeq	r0, r0, r0
    6084:	f3000400 	vshl.u8	d0, d0, d0
    6088:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    6098:	02000000 	andeq	r0, r0, #0
    609c:	00007d00 	andeq	r7, r0, r0, lsl #26
    60a0:	00000000 	andeq	r0, r0, r0
    60a4:	02000000 	andeq	r0, r0, #0
    60a8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    60c0:	01000000 	mrseq	r0, (UNDEF: 0)
    60c4:	00005000 	andeq	r5, r0, r0
    60c8:	00000000 	andeq	r0, r0, r0
    60cc:	00010000 	andeq	r0, r1, r0
    60d0:	00000054 	andeq	r0, r0, r4, asr r0
    60d4:	00000000 	andeq	r0, r0, r0
    60d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60e4:	00540001 	subseq	r0, r4, r1
	...
    60fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6100:	00005100 	andeq	r5, r0, r0, lsl #2
    6104:	00000000 	andeq	r0, r0, r0
    6108:	00040000 	andeq	r0, r4, r0
    610c:	9f5101f3 	svcls	0x005101f3
	...
    6118:	00510001 	subseq	r0, r1, r1
    611c:	00000000 	andeq	r0, r0, r0
    6120:	04000000 	streq	r0, [r0], #-0
    6124:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6128:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6138:	01000000 	mrseq	r0, (UNDEF: 0)
    613c:	00005000 	andeq	r5, r0, r0
	...
    614c:	00020000 	andeq	r0, r2, r0
    6150:	0000007d 	andeq	r0, r0, sp, ror r0
    6154:	00000000 	andeq	r0, r0, r0
    6158:	00020000 	andeq	r0, r2, r0
    615c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6174:	00500001 	subseq	r0, r0, r1
    6178:	00000000 	andeq	r0, r0, r0
    617c:	01000000 	mrseq	r0, (UNDEF: 0)
    6180:	00005400 	andeq	r5, r0, r0, lsl #8
    6184:	00000000 	andeq	r0, r0, r0
    6188:	00040000 	andeq	r0, r4, r0
    618c:	9f5001f3 	svcls	0x005001f3
	...
    61a4:	00010000 	andeq	r0, r1, r0
    61a8:	00000051 	andeq	r0, r0, r1, asr r0
    61ac:	00000000 	andeq	r0, r0, r0
    61b0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    61bc:	01f30004 	mvnseq	r0, r4
    61c0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    61d4:	00530001 	subseq	r0, r3, r1
    61d8:	00000000 	andeq	r0, r0, r0
    61dc:	02000000 	andeq	r0, r0, #0
	...
    61ec:	02000000 	andeq	r0, r0, #0
    61f0:	009f3000 	addseq	r3, pc, r0
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	01000000 	mrseq	r0, (UNDEF: 0)
    61fc:	00005200 	andeq	r5, r0, r0, lsl #4
    6200:	00000000 	andeq	r0, r0, r0
    6204:	00050000 	andeq	r0, r5, r0
    6208:	24007331 	strcs	r7, [r0], #-817	; 0xfffffccf
    620c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6210:	00000000 	andeq	r0, r0, r0
    6214:	52000100 	andpl	r0, r0, #0, 2
	...
    6220:	00000003 	andeq	r0, r0, r3
	...
    6230:	00020000 	andeq	r0, r2, r0
    6234:	00009f30 	andeq	r9, r0, r0, lsr pc
    6238:	00000000 	andeq	r0, r0, r0
    623c:	00010000 	andeq	r0, r1, r0
    6240:	0000005c 	andeq	r0, r0, ip, asr r0
    6244:	00000000 	andeq	r0, r0, r0
    6248:	72000600 	andvc	r0, r0, #0, 12
    624c:	1a007500 	bne	23654 <_Min_Heap_Size+0x22e54>
    6250:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6254:	00000000 	andeq	r0, r0, r0
    6258:	31000800 	tstcc	r0, r0, lsl #16
    625c:	75240073 	strvc	r0, [r4, #-115]!	; 0xffffff8d
    6260:	009f1a00 	addseq	r1, pc, r0, lsl #20
    6264:	00000000 	andeq	r0, r0, r0
    6268:	01000000 	mrseq	r0, (UNDEF: 0)
    626c:	00005c00 	andeq	r5, r0, r0, lsl #24
    6270:	00000000 	andeq	r0, r0, r0
    6274:	00040000 	andeq	r0, r4, r0
    6278:	00000000 	andeq	r0, r0, r0
    627c:	00000001 	andeq	r0, r0, r1
    6280:	00000000 	andeq	r0, r0, r0
    6284:	00020000 	andeq	r0, r2, r0
    6288:	00009f30 	andeq	r9, r0, r0, lsr pc
    628c:	00000000 	andeq	r0, r0, r0
    6290:	00010000 	andeq	r0, r1, r0
    6294:	00000050 	andeq	r0, r0, r0, asr r0
    6298:	00000000 	andeq	r0, r0, r0
    629c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    62a8:	00570001 	subseq	r0, r7, r1
    62ac:	00000000 	andeq	r0, r0, r0
    62b0:	fc000000 	stc2	0, cr0, [r0], {-0}
    62b4:	00080011 	andeq	r0, r8, r1, lsl r0
    62b8:	02080012 	andeq	r0, r8, #18
    62bc:	00007d00 	andeq	r7, r0, r0, lsl #26
    62c0:	02080012 	andeq	r0, r8, #18
    62c4:	02080012 	andeq	r0, r8, #18
    62c8:	02187d00 	andseq	r7, r8, #0, 26
    62cc:	d0080012 	andle	r0, r8, r2, lsl r0
    62d0:	02080014 	andeq	r0, r8, #20
    62d4:	d0207d00 	eorle	r7, r0, r0, lsl #26
    62d8:	e4080014 	str	r0, [r8], #-20	; 0xffffffec
    62dc:	02080014 	andeq	r0, r8, #20
    62e0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    62f0:	0011fc00 	andseq	pc, r1, r0, lsl #24
    62f4:	00125008 	andseq	r5, r2, r8
    62f8:	50000108 	andpl	r0, r0, r8, lsl #2
    62fc:	08001250 	stmdaeq	r0, {r4, r6, r9, ip}
    6300:	080014d4 	stmdaeq	r0, {r2, r4, r6, r7, sl, ip}
    6304:	d4570001 	ldrble	r0, [r7], #-1
    6308:	e4080014 	str	r0, [r8], #-20	; 0xffffffec
    630c:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    6310:	5001f300 	andpl	pc, r1, r0, lsl #6
    6314:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6320:	fc000000 	stc2	0, cr0, [r0], {-0}
    6324:	4e080011 	mcrmi	0, 0, r0, cr8, cr1, {0}
    6328:	01080012 	tsteq	r8, r2, lsl r0
    632c:	124e5100 	subne	r5, lr, #0, 2
    6330:	14d40800 	ldrbne	r0, [r4], #2048	; 0x800
    6334:	00010800 	andeq	r0, r1, r0, lsl #16
    6338:	0014d456 	andseq	sp, r4, r6, asr r4
    633c:	0014e408 	andseq	lr, r4, r8, lsl #8
    6340:	f3000408 	vshl.u8	d0, d8, d0
    6344:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    6350:	0012b000 	andseq	fp, r2, r0
    6354:	0014d408 	andseq	sp, r4, r8, lsl #8
    6358:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    6364:	00000002 	andeq	r0, r0, r2
	...
    6374:	12060000 	andne	r0, r6, #0
    6378:	12b00800 	adcsne	r0, r0, #0, 16
    637c:	00020800 	andeq	r0, r2, r0, lsl #16
    6380:	12b09f30 	adcsne	r9, r0, #48, 30	; 0xc0
    6384:	12d60800 	sbcsne	r0, r6, #0, 16
    6388:	00010800 	andeq	r0, r1, r0, lsl #16
    638c:	0012d655 	andseq	sp, r2, r5, asr r6
    6390:	0012de08 	andseq	sp, r2, r8, lsl #28
    6394:	31000508 	tstcc	r0, r8, lsl #10
    6398:	9f240074 	svcls	0x00240074
    639c:	080012de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, ip}
    63a0:	080012e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip}
    63a4:	e8550001 	ldmda	r5, {r0}^
    63a8:	cc080012 	stcgt	0, cr0, [r8], {18}
    63ac:	05080013 	streq	r0, [r8, #-19]	; 0xffffffed
    63b0:	00743100 	rsbseq	r3, r4, r0, lsl #2
    63b4:	13d49f24 	bicsne	r9, r4, #36, 30	; 0x90
    63b8:	13ee0800 	mvnne	r0, #0, 16
    63bc:	00010800 	andeq	r0, r1, r0, lsl #16
    63c0:	0013ee55 	andseq	lr, r3, r5, asr lr
    63c4:	0014b808 	andseq	fp, r4, r8, lsl #16
    63c8:	31000508 	tstcc	r0, r8, lsl #10
    63cc:	9f240074 	svcls	0x00240074
    63d0:	080014b8 	stmdaeq	r0, {r3, r4, r5, r7, sl, ip}
    63d4:	080014ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, ip}
    63d8:	00730006 	rsbseq	r0, r3, r6
    63dc:	9f240074 	svcls	0x00240074
    63e0:	080014ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, ip}
    63e4:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
    63e8:	74310005 	ldrtvc	r0, [r1], #-5
    63ec:	009f2400 	addseq	r2, pc, r0, lsl #8
    63f0:	00000000 	andeq	r0, r0, r0
    63f4:	03000000 	movweq	r0, #0
    63f8:	00000000 	andeq	r0, r0, r0
    63fc:	00120600 	andseq	r0, r2, r0, lsl #12
    6400:	0012b008 	andseq	fp, r2, r8
    6404:	30000208 	andcc	r0, r0, r8, lsl #4
    6408:	0012b09f 	mulseq	r2, pc, r0	; <UNPREDICTABLE>
    640c:	0013cc08 	andseq	ip, r3, r8, lsl #24
    6410:	58000108 	stmdapl	r0, {r3, r8}
    6414:	080013da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, ip}
    6418:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
    641c:	00580001 	subseq	r0, r8, r1
    6420:	00000000 	andeq	r0, r0, r0
    6424:	04000000 	streq	r0, [r0], #-0
	...
    6454:	06000000 	streq	r0, [r0], -r0
    6458:	b0080012 	andlt	r0, r8, r2, lsl r0
    645c:	02080012 	andeq	r0, r8, #18
    6460:	b89f3000 	ldmlt	pc, {ip, sp}	; <UNPREDICTABLE>
    6464:	c8080012 	stmdagt	r8, {r1, r4}
    6468:	01080012 	tsteq	r8, r2, lsl r0
    646c:	12c85200 	sbcne	r5, r8, #0, 4
    6470:	12cc0800 	sbcne	r0, ip, #0, 16
    6474:	00010800 	andeq	r0, r1, r0, lsl #16
    6478:	0012cc53 	andseq	ip, r2, r3, asr ip
    647c:	0012da08 	andseq	sp, r2, r8, lsl #20
    6480:	52000108 	andpl	r0, r0, #8, 2
    6484:	080012da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r9, ip}
    6488:	080012de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, ip}
    648c:	2e550001 	cdpcs	0, 5, cr0, cr5, cr1, {0}
    6490:	42080013 	andmi	r0, r8, #19
    6494:	01080013 	tsteq	r8, r3, lsl r0
    6498:	13425000 	movtne	r5, #8192	; 0x2000
    649c:	13480800 	movtne	r0, #34816	; 0x8800
    64a0:	00010800 	andeq	r0, r1, r0, lsl #16
    64a4:	00135253 	andseq	r5, r3, r3, asr r2
    64a8:	00136608 	andseq	r6, r3, r8, lsl #12
    64ac:	50000108 	andpl	r0, r0, r8, lsl #2
    64b0:	08001366 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, ip}
    64b4:	08001370 	stmdaeq	r0, {r4, r5, r6, r8, r9, ip}
    64b8:	70530001 	subsvc	r0, r3, r1
    64bc:	72080013 	andvc	r0, r8, #19
    64c0:	07080013 	smladeq	r8, r3, r0, r0
    64c4:	32007200 	andcc	r7, r0, #0, 4
    64c8:	22007124 	andcs	r7, r0, #36, 2
    64cc:	08001372 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, ip}
    64d0:	0800137a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, ip}
    64d4:	7a520001 	bvc	14864e0 <_Min_Heap_Size+0x1485ce0>
    64d8:	8c080013 	stchi	0, cr0, [r8], {19}
    64dc:	01080013 	tsteq	r8, r3, lsl r0
    64e0:	138c5100 	orrne	r5, ip, #0, 2
    64e4:	13900800 	orrsne	r0, r0, #0, 16
    64e8:	00010800 	andeq	r0, r1, r0, lsl #16
    64ec:	00139052 	andseq	r9, r3, r2, asr r0
    64f0:	0013a208 	andseq	sl, r3, r8, lsl #4
    64f4:	51000108 	tstpl	r0, r8, lsl #2
    64f8:	080013a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, ip}
    64fc:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
    6500:	a6520001 	ldrbge	r0, [r2], -r1
    6504:	b8080013 	stmdalt	r8, {r0, r1, r4}
    6508:	01080013 	tsteq	r8, r3, lsl r0
    650c:	13b85100 			; <UNDEFINED> instruction: 0x13b85100
    6510:	13ba0800 			; <UNDEFINED> instruction: 0x13ba0800
    6514:	00010800 	andeq	r0, r1, r0, lsl #16
    6518:	0013ba52 	andseq	fp, r3, r2, asr sl
    651c:	0013ca08 	andseq	ip, r3, r8, lsl #20
    6520:	53000108 	movwpl	r0, #264	; 0x108
    6524:	08001402 	stmdaeq	r0, {r1, sl, ip}
    6528:	08001412 	stmdaeq	r0, {r1, r4, sl, ip}
    652c:	12520001 	subsne	r0, r2, #1
    6530:	14080014 	strne	r0, [r8], #-20	; 0xffffffec
    6534:	01080014 	tsteq	r8, r4, lsl r0
    6538:	14225300 	strtne	r5, [r2], #-768	; 0xfffffd00
    653c:	14360800 	ldrtne	r0, [r6], #-2048	; 0xfffff800
    6540:	00010800 	andeq	r0, r1, r0, lsl #16
    6544:	00143652 	andseq	r3, r4, r2, asr r6
    6548:	00143a08 	andseq	r3, r4, r8, lsl #20
    654c:	53000108 	movwpl	r0, #264	; 0x108
    6550:	0800143a 	stmdaeq	r0, {r1, r3, r4, r5, sl, ip}
    6554:	08001444 	stmdaeq	r0, {r2, r6, sl, ip}
    6558:	00770002 	rsbseq	r0, r7, r2
    655c:	08001462 	stmdaeq	r0, {r1, r5, r6, sl, ip}
    6560:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
    6564:	00500001 	subseq	r0, r0, r1
	...
    65b0:	01000000 	mrseq	r0, (UNDEF: 0)
    65b4:	00005000 	andeq	r5, r0, r0
    65b8:	00000000 	andeq	r0, r0, r0
    65bc:	00040000 	andeq	r0, r4, r0
    65c0:	9f5001f3 	svcls	0x005001f3
	...
    65cc:	00500001 	subseq	r0, r0, r1
    65d0:	00000000 	andeq	r0, r0, r0
    65d4:	04000000 	streq	r0, [r0], #-0
    65d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    65dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65e0:	00000000 	andeq	r0, r0, r0
    65e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    65f0:	01f30004 	mvnseq	r0, r4
    65f4:	00009f50 	andeq	r9, r0, r0, asr pc
    65f8:	00000000 	andeq	r0, r0, r0
    65fc:	00010000 	andeq	r0, r1, r0
    6600:	00000050 	andeq	r0, r0, r0, asr r0
    6604:	00000000 	andeq	r0, r0, r0
    6608:	f3000400 	vshl.u8	d0, d0, d0
    660c:	009f5001 	addseq	r5, pc, r1
    6610:	00000000 	andeq	r0, r0, r0
    6614:	01000000 	mrseq	r0, (UNDEF: 0)
    6618:	00005000 	andeq	r5, r0, r0
    661c:	00000000 	andeq	r0, r0, r0
    6620:	00040000 	andeq	r0, r4, r0
    6624:	9f5001f3 	svcls	0x005001f3
	...
    6630:	00500001 	subseq	r0, r0, r1
    6634:	00000000 	andeq	r0, r0, r0
    6638:	04000000 	streq	r0, [r0], #-0
    663c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6640:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6644:	00000000 	andeq	r0, r0, r0
    6648:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6654:	01f30004 	mvnseq	r0, r4
    6658:	00009f50 	andeq	r9, r0, r0, asr pc
    665c:	00000000 	andeq	r0, r0, r0
    6660:	00010000 	andeq	r0, r1, r0
    6664:	00000050 	andeq	r0, r0, r0, asr r0
    6668:	00000000 	andeq	r0, r0, r0
    666c:	f3000400 	vshl.u8	d0, d0, d0
    6670:	009f5001 	addseq	r5, pc, r1
    6674:	00000000 	andeq	r0, r0, r0
    6678:	01000000 	mrseq	r0, (UNDEF: 0)
    667c:	00005000 	andeq	r5, r0, r0
    6680:	00000000 	andeq	r0, r0, r0
    6684:	00040000 	andeq	r0, r4, r0
    6688:	9f5001f3 	svcls	0x005001f3
	...
    6694:	00500001 	subseq	r0, r0, r1
    6698:	00000000 	andeq	r0, r0, r0
    669c:	04000000 	streq	r0, [r0], #-0
    66a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    66a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    66a8:	00000000 	andeq	r0, r0, r0
    66ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    66b8:	01f30004 	mvnseq	r0, r4
    66bc:	00009f50 	andeq	r9, r0, r0, asr pc
    66c0:	00000000 	andeq	r0, r0, r0
    66c4:	00010000 	andeq	r0, r1, r0
    66c8:	00000050 	andeq	r0, r0, r0, asr r0
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	f3000400 	vshl.u8	d0, d0, d0
    66d4:	009f5001 	addseq	r5, pc, r1
    66d8:	00000000 	andeq	r0, r0, r0
    66dc:	01000000 	mrseq	r0, (UNDEF: 0)
    66e0:	00005000 	andeq	r5, r0, r0
    66e4:	00000000 	andeq	r0, r0, r0
    66e8:	00040000 	andeq	r0, r4, r0
    66ec:	9f5001f3 	svcls	0x005001f3
	...
    66f8:	00500001 	subseq	r0, r0, r1
    66fc:	00000000 	andeq	r0, r0, r0
    6700:	04000000 	streq	r0, [r0], #-0
    6704:	5001f300 	andpl	pc, r1, r0, lsl #6
    6708:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    670c:	00000000 	andeq	r0, r0, r0
    6710:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    671c:	01f30004 	mvnseq	r0, r4
    6720:	00009f50 	andeq	r9, r0, r0, asr pc
    6724:	00000000 	andeq	r0, r0, r0
    6728:	00020000 	andeq	r0, r2, r0
	...
    6734:	00020000 	andeq	r0, r2, r0
    6738:	00009f30 	andeq	r9, r0, r0, lsr pc
    673c:	00000000 	andeq	r0, r0, r0
    6740:	00010000 	andeq	r0, r1, r0
    6744:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6788:	01000000 	mrseq	r0, (UNDEF: 0)
    678c:	00005300 	andeq	r5, r0, r0, lsl #6
    6790:	00000000 	andeq	r0, r0, r0
    6794:	00020000 	andeq	r0, r2, r0
    6798:	00002870 	andeq	r2, r0, r0, ror r8
    679c:	00000000 	andeq	r0, r0, r0
    67a0:	00050000 	andeq	r0, r5, r0
    67a4:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    67a8:	00000028 	andeq	r0, r0, r8, lsr #32
    67ac:	00000000 	andeq	r0, r0, r0
    67b0:	53000100 	movwpl	r0, #256	; 0x100
	...
    67bc:	28700002 	ldmdacs	r0!, {r1}^
	...
    67c8:	01f30005 	mvnseq	r0, r5
    67cc:	00282350 	eoreq	r2, r8, r0, asr r3
    67d0:	00000000 	andeq	r0, r0, r0
    67d4:	01000000 	mrseq	r0, (UNDEF: 0)
    67d8:	00005300 	andeq	r5, r0, r0, lsl #6
    67dc:	00000000 	andeq	r0, r0, r0
    67e0:	00020000 	andeq	r0, r2, r0
    67e4:	00002870 	andeq	r2, r0, r0, ror r8
    67e8:	00000000 	andeq	r0, r0, r0
    67ec:	00050000 	andeq	r0, r5, r0
    67f0:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    67f4:	00000028 	andeq	r0, r0, r8, lsr #32
    67f8:	00000000 	andeq	r0, r0, r0
    67fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    6808:	28700002 	ldmdacs	r0!, {r1}^
	...
    6814:	01f30005 	mvnseq	r0, r5
    6818:	00282350 	eoreq	r2, r8, r0, asr r3
    681c:	00000000 	andeq	r0, r0, r0
    6820:	01000000 	mrseq	r0, (UNDEF: 0)
    6824:	00005300 	andeq	r5, r0, r0, lsl #6
    6828:	00000000 	andeq	r0, r0, r0
    682c:	00020000 	andeq	r0, r2, r0
    6830:	00002870 	andeq	r2, r0, r0, ror r8
    6834:	00000000 	andeq	r0, r0, r0
    6838:	00050000 	andeq	r0, r5, r0
    683c:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    6840:	00000028 	andeq	r0, r0, r8, lsr #32
    6844:	00000000 	andeq	r0, r0, r0
    6848:	70000200 	andvc	r0, r0, r0, lsl #4
    684c:	00000028 	andeq	r0, r0, r8, lsr #32
    6850:	00000000 	andeq	r0, r0, r0
    6854:	f3000500 	vrshl.u8	d0, d0, d0
    6858:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6864:	28700002 	ldmdacs	r0!, {r1}^
	...
    6870:	01f30005 	mvnseq	r0, r5
    6874:	00282350 	eoreq	r2, r8, r0, asr r3
    6878:	00000000 	andeq	r0, r0, r0
    687c:	01000000 	mrseq	r0, (UNDEF: 0)
    6880:	00005300 	andeq	r5, r0, r0, lsl #6
    6884:	00000000 	andeq	r0, r0, r0
    6888:	00020000 	andeq	r0, r2, r0
    688c:	00002870 	andeq	r2, r0, r0, ror r8
    6890:	00000000 	andeq	r0, r0, r0
    6894:	00050000 	andeq	r0, r5, r0
    6898:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    689c:	00000028 	andeq	r0, r0, r8, lsr #32
    68a0:	00000000 	andeq	r0, r0, r0
    68a4:	70000200 	andvc	r0, r0, r0, lsl #4
    68a8:	00000028 	andeq	r0, r0, r8, lsr #32
    68ac:	00000000 	andeq	r0, r0, r0
    68b0:	f3000500 	vrshl.u8	d0, d0, d0
    68b4:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    68c0:	00530001 	subseq	r0, r3, r1
    68c4:	00000000 	andeq	r0, r0, r0
    68c8:	02000000 	andeq	r0, r0, #0
    68cc:	00287000 	eoreq	r7, r8, r0
    68d0:	00000000 	andeq	r0, r0, r0
    68d4:	05000000 	streq	r0, [r0, #-0]
    68d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    68dc:	00002823 	andeq	r2, r0, r3, lsr #16
	...
    68ec:	00020000 	andeq	r0, r2, r0
    68f0:	0000007d 	andeq	r0, r0, sp, ror r0
    68f4:	00000000 	andeq	r0, r0, r0
    68f8:	00020000 	andeq	r0, r2, r0
    68fc:	0000047d 	andeq	r0, r0, sp, ror r4
    6900:	00000000 	andeq	r0, r0, r0
    6904:	00020000 	andeq	r0, r2, r0
    6908:	0000007d 	andeq	r0, r0, sp, ror r0
    690c:	00000000 	andeq	r0, r0, r0
    6910:	00020000 	andeq	r0, r2, r0
    6914:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    692c:	00500001 	subseq	r0, r0, r1
    6930:	00000000 	andeq	r0, r0, r0
    6934:	04000000 	streq	r0, [r0], #-0
    6938:	5001f300 	andpl	pc, r1, r0, lsl #6
    693c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6940:	00000000 	andeq	r0, r0, r0
    6944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    695c:	00520001 	subseq	r0, r2, r1
    6960:	00000000 	andeq	r0, r0, r0
    6964:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6968:	f7007100 			; <UNDEFINED> instruction: 0xf7007100
    696c:	f429f730 	vld1.8	{d15}, [r9 :256], r0
    6970:	aaab0829 	bge	feac8a1c <_estack+0xdeac77e4>
    6974:	0000aaaa 	andeq	sl, r0, sl, lsr #21
    6978:	081e0000 	ldmdaeq	lr, {}	; <UNPREDICTABLE>
    697c:	2529f720 	strcs	pc, [r9, #-1824]!	; 0xfffff8e0
    6980:	00f730f7 	ldrshteq	r3, [r7], #7
    6984:	009f2534 	addseq	r2, pc, r4, lsr r5	; <UNPREDICTABLE>
	...
    6994:	02000000 	andeq	r0, r0, #0
    6998:	00007d00 	andeq	r7, r0, r0, lsl #26
    699c:	00000000 	andeq	r0, r0, r0
    69a0:	02000000 	andeq	r0, r0, #0
    69a4:	00087d00 	andeq	r7, r8, r0, lsl #26
    69a8:	00000000 	andeq	r0, r0, r0
    69ac:	02000000 	andeq	r0, r0, #0
    69b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    69b4:	00000000 	andeq	r0, r0, r0
    69b8:	02000000 	andeq	r0, r0, #0
    69bc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    69d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    69e4:	04740002 	ldrbteq	r0, [r4], #-2
	...
    69f0:	01f30004 	mvnseq	r0, r4
    69f4:	00009f53 	andeq	r9, r0, r3, asr pc
    69f8:	00000000 	andeq	r0, r0, r0
    69fc:	00020000 	andeq	r0, r2, r0
    6a00:	00000474 	andeq	r0, r0, r4, ror r4
    6a04:	00000000 	andeq	r0, r0, r0
    6a08:	00040000 	andeq	r0, r4, r0
    6a0c:	9f5301f3 	svcls	0x005301f3
	...
    6a24:	00500001 	subseq	r0, r0, r1
    6a28:	00000000 	andeq	r0, r0, r0
    6a2c:	04000000 	streq	r0, [r0], #-0
    6a30:	5001f300 	andpl	pc, r1, r0, lsl #6
    6a34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6a48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a54:	01f30004 	mvnseq	r0, r4
    6a58:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6a70:	00010000 	andeq	r0, r1, r0
    6a74:	00000050 	andeq	r0, r0, r0, asr r0
    6a78:	00000000 	andeq	r0, r0, r0
    6a7c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6a88:	00500001 	subseq	r0, r0, r1
    6a8c:	00000000 	andeq	r0, r0, r0
    6a90:	01000000 	mrseq	r0, (UNDEF: 0)
    6a94:	00005300 	andeq	r5, r0, r0, lsl #6
    6a98:	00000000 	andeq	r0, r0, r0
    6a9c:	00010000 	andeq	r0, r1, r0
	...
    6aac:	9f300002 	svcls	0x00300002
	...
    6ab8:	00500001 	subseq	r0, r0, r1
    6abc:	00000000 	andeq	r0, r0, r0
    6ac0:	02000000 	andeq	r0, r0, #0
    6ac4:	009f3000 	addseq	r3, pc, r0
	...
    6ad8:	01000000 	mrseq	r0, (UNDEF: 0)
    6adc:	00005000 	andeq	r5, r0, r0
    6ae0:	00000000 	andeq	r0, r0, r0
    6ae4:	00010000 	andeq	r0, r1, r0
    6ae8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6afc:	01000000 	mrseq	r0, (UNDEF: 0)
    6b00:	00005200 	andeq	r5, r0, r0, lsl #4
    6b04:	00000000 	andeq	r0, r0, r0
    6b08:	00040000 	andeq	r0, r4, r0
    6b0c:	9f5201f3 	svcls	0x005201f3
	...
    6b18:	00520001 	subseq	r0, r2, r1
    6b1c:	00000000 	andeq	r0, r0, r0
    6b20:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6b30:	30000200 	andcc	r0, r0, r0, lsl #4
    6b34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6b38:	00000000 	andeq	r0, r0, r0
    6b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b48:	9f300002 	svcls	0x00300002
	...
    6b5c:	007d0002 	rsbseq	r0, sp, r2
	...
    6b68:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    6b74:	207d0002 	rsbscs	r0, sp, r2
	...
    6b80:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    6ba0:	00010000 	andeq	r0, r1, r0
    6ba4:	00000050 	andeq	r0, r0, r0, asr r0
    6ba8:	00000000 	andeq	r0, r0, r0
    6bac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6bb8:	00500001 	subseq	r0, r0, r1
    6bbc:	00000000 	andeq	r0, r0, r0
    6bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bc4:	00005400 	andeq	r5, r0, r0, lsl #8
    6bc8:	00000000 	andeq	r0, r0, r0
    6bcc:	00010000 	andeq	r0, r1, r0
    6bd0:	00000050 	andeq	r0, r0, r0, asr r0
    6bd4:	00000000 	andeq	r0, r0, r0
    6bd8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6be4:	01f30004 	mvnseq	r0, r4
    6be8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6bfc:	00560001 	subseq	r0, r6, r1
	...
    6c10:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6c24:	00010000 	andeq	r0, r1, r0
    6c28:	00000057 	andeq	r0, r0, r7, asr r0
	...
    6c38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6c44:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6c48:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    6c5c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c68:	00540001 	subseq	r0, r4, r1
	...
    6c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    6c80:	00005100 	andeq	r5, r0, r0, lsl #2
    6c84:	00000000 	andeq	r0, r0, r0
    6c88:	00040000 	andeq	r0, r4, r0
    6c8c:	9f5101f3 	svcls	0x005101f3
	...
    6ca4:	00520001 	subseq	r0, r2, r1
    6ca8:	00000000 	andeq	r0, r0, r0
    6cac:	01000000 	mrseq	r0, (UNDEF: 0)
    6cb0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6cc4:	00010000 	andeq	r0, r1, r0
    6cc8:	0000005a 	andeq	r0, r0, sl, asr r0
    6ccc:	00000000 	andeq	r0, r0, r0
    6cd0:	5a000100 	bpl	70d8 <_Min_Heap_Size+0x68d8>
	...
    6cdc:	01000000 	mrseq	r0, (UNDEF: 0)
    6ce0:	00000001 	andeq	r0, r0, r1
	...
    6cf0:	00010000 	andeq	r0, r1, r0
    6cf4:	00000050 	andeq	r0, r0, r0, asr r0
    6cf8:	00000000 	andeq	r0, r0, r0
    6cfc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d08:	00590001 	subseq	r0, r9, r1
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	01000000 	mrseq	r0, (UNDEF: 0)
    6d14:	00005000 	andeq	r5, r0, r0
    6d18:	00000000 	andeq	r0, r0, r0
    6d1c:	00010000 	andeq	r0, r1, r0
    6d20:	00000059 	andeq	r0, r0, r9, asr r0
    6d24:	00000000 	andeq	r0, r0, r0
    6d28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d34:	00590001 	subseq	r0, r9, r1
	...
    6d48:	01000000 	mrseq	r0, (UNDEF: 0)
    6d4c:	00005300 	andeq	r5, r0, r0, lsl #6
    6d50:	00000000 	andeq	r0, r0, r0
    6d54:	00010000 	andeq	r0, r1, r0
    6d58:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6d6c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    6d78:	00570001 	subseq	r0, r7, r1
	...
    6d88:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    6d8c:	88080015 	stmdahi	r8, {r0, r2, r4}
    6d90:	01080015 	tsteq	r8, r5, lsl r0
    6d94:	15885000 	strne	r5, [r8]
    6d98:	158a0800 	strne	r0, [sl, #2048]	; 0x800
    6d9c:	00040800 	andeq	r0, r4, r0, lsl #16
    6da0:	9f5001f3 	svcls	0x005001f3
    6da4:	0800158a 	stmdaeq	r0, {r1, r3, r7, r8, sl, ip}
    6da8:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    6dac:	9c500001 	mrrcls	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    6db0:	9e080015 	mcrls	0, 0, r0, cr8, cr5, {0}
    6db4:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    6db8:	5001f300 	andpl	pc, r1, r0, lsl #6
    6dbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6dc0:	00000000 	andeq	r0, r0, r0
    6dc4:	0014e400 	andseq	lr, r4, r0, lsl #8
    6dc8:	0014e608 	andseq	lr, r4, r8, lsl #12
    6dcc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    6dd0:	0014e600 	andseq	lr, r4, r0, lsl #12
    6dd4:	00157808 	andseq	r7, r5, r8, lsl #16
    6dd8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    6ddc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6de8:	0014e400 	andseq	lr, r4, r0, lsl #8
    6dec:	0014ed08 	andseq	lr, r4, r8, lsl #26
    6df0:	50000108 	andpl	r0, r0, r8, lsl #2
    6df4:	080014ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, ip}
    6df8:	08001578 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, ip}
    6dfc:	00540001 	subseq	r0, r4, r1
	...
    6e08:	0014ea00 	andseq	lr, r4, r0, lsl #20
    6e0c:	00157808 	andseq	r7, r5, r8, lsl #16
    6e10:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    6e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    6e20:	00000001 	andeq	r0, r0, r1
    6e24:	14ee0000 	strbtne	r0, [lr], #0
    6e28:	15040800 	strne	r0, [r4, #-2048]	; 0xfffff800
    6e2c:	00010800 	andeq	r0, r1, r0, lsl #16
    6e30:	00150650 	andseq	r0, r5, r0, asr r6
    6e34:	00153408 	andseq	r3, r5, r8, lsl #8
    6e38:	50000108 	andpl	r0, r0, r8, lsl #2
    6e3c:	08001534 	stmdaeq	r0, {r2, r4, r5, r8, sl, ip}
    6e40:	0800155a 	stmdaeq	r0, {r1, r3, r4, r6, r8, sl, ip}
    6e44:	5a550001 	bpl	1546e50 <_Min_Heap_Size+0x1546650>
    6e48:	62080015 	andvs	r0, r8, #21
    6e4c:	01080015 	tsteq	r8, r5, lsl r0
    6e50:	15625000 	strbne	r5, [r2, #-0]!
    6e54:	15780800 	ldrbne	r0, [r8, #-2048]!	; 0xfffff800
    6e58:	00010800 	andeq	r0, r1, r0, lsl #16
    6e5c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6e6c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6e78:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6e7c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6e94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ea0:	00540001 	subseq	r0, r4, r1
    6ea4:	00000000 	andeq	r0, r0, r0
    6ea8:	01000000 	mrseq	r0, (UNDEF: 0)
    6eac:	00005000 	andeq	r5, r0, r0
    6eb0:	00000000 	andeq	r0, r0, r0
    6eb4:	00010000 	andeq	r0, r1, r0
    6eb8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6ed0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6edc:	00560001 	subseq	r0, r6, r1
    6ee0:	00000000 	andeq	r0, r0, r0
    6ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    6ee8:	00005100 	andeq	r5, r0, r0, lsl #2
    6eec:	00000000 	andeq	r0, r0, r0
    6ef0:	00010000 	andeq	r0, r1, r0
    6ef4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6f08:	52000100 	andpl	r0, r0, #0, 2
	...
    6f14:	00570001 	subseq	r0, r7, r1
	...
    6f28:	01000000 	mrseq	r0, (UNDEF: 0)
    6f2c:	00005300 	andeq	r5, r0, r0, lsl #6
    6f30:	00000000 	andeq	r0, r0, r0
    6f34:	00010000 	andeq	r0, r1, r0
    6f38:	00000055 	andeq	r0, r0, r5, asr r0
    6f3c:	00000000 	andeq	r0, r0, r0
    6f40:	02020100 	andeq	r0, r2, #0, 2
	...
    6f4c:	02000000 	andeq	r0, r0, #0
    6f50:	009f3000 	addseq	r3, pc, r0
    6f54:	00000000 	andeq	r0, r0, r0
    6f58:	02000000 	andeq	r0, r0, #0
    6f5c:	009f3200 	addseq	r3, pc, r0, lsl #4
    6f60:	00000000 	andeq	r0, r0, r0
    6f64:	02000000 	andeq	r0, r0, #0
    6f68:	009f3000 	addseq	r3, pc, r0
	...
    6f7c:	58000100 	stmdapl	r0, {r8}
	...
    6f90:	007d0002 	rsbseq	r0, sp, r2
	...
    6f9c:	187d0002 	ldmdane	sp!, {r1}^
	...
    6fb8:	00500001 	subseq	r0, r0, r1
    6fbc:	00000000 	andeq	r0, r0, r0
    6fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6fc4:	00005400 	andeq	r5, r0, r0, lsl #8
    6fc8:	00000000 	andeq	r0, r0, r0
    6fcc:	00010000 	andeq	r0, r1, r0
    6fd0:	00000050 	andeq	r0, r0, r0, asr r0
    6fd4:	00000000 	andeq	r0, r0, r0
    6fd8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6ff4:	00510001 	subseq	r0, r1, r1
    6ff8:	00000000 	andeq	r0, r0, r0
    6ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    7000:	00005600 	andeq	r5, r0, r0, lsl #12
    7004:	00000000 	andeq	r0, r0, r0
    7008:	00010000 	andeq	r0, r1, r0
    700c:	00000051 	andeq	r0, r0, r1, asr r0
    7010:	00000000 	andeq	r0, r0, r0
    7014:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    702c:	00520001 	subseq	r0, r2, r1
    7030:	00000000 	andeq	r0, r0, r0
    7034:	01000000 	mrseq	r0, (UNDEF: 0)
    7038:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    704c:	00010000 	andeq	r0, r1, r0
    7050:	00000053 	andeq	r0, r0, r3, asr r0
    7054:	00000000 	andeq	r0, r0, r0
    7058:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7064:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    7070:	00020000 	andeq	r0, r2, r0
    7074:	00009f30 	andeq	r9, r0, r0, lsr pc
    7078:	00000000 	andeq	r0, r0, r0
    707c:	00020000 	andeq	r0, r2, r0
    7080:	00009f32 	andeq	r9, r0, r2, lsr pc
    7084:	00000000 	andeq	r0, r0, r0
    7088:	00020000 	andeq	r0, r2, r0
    708c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    709c:	00020000 	andeq	r0, r2, r0
    70a0:	0000007d 	andeq	r0, r0, sp, ror r0
    70a4:	00000000 	andeq	r0, r0, r0
    70a8:	00020000 	andeq	r0, r2, r0
    70ac:	0000107d 	andeq	r1, r0, sp, ror r0
    70b0:	00000000 	andeq	r0, r0, r0
    70b4:	00020000 	andeq	r0, r2, r0
    70b8:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    70d0:	00010000 	andeq	r0, r1, r0
    70d4:	00000050 	andeq	r0, r0, r0, asr r0
    70d8:	00000000 	andeq	r0, r0, r0
    70dc:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    70e8:	00500001 	subseq	r0, r0, r1
    70ec:	00000000 	andeq	r0, r0, r0
    70f0:	04000000 	streq	r0, [r0], #-0
    70f4:	5001f300 	andpl	pc, r1, r0, lsl #6
    70f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7108:	01000000 	mrseq	r0, (UNDEF: 0)
    710c:	00005000 	andeq	r5, r0, r0
	...
    711c:	00020000 	andeq	r0, r2, r0
    7120:	0000007d 	andeq	r0, r0, sp, ror r0
    7124:	00000000 	andeq	r0, r0, r0
    7128:	00020000 	andeq	r0, r2, r0
    712c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    7140:	00010000 	andeq	r0, r1, r0
    7144:	00000050 	andeq	r0, r0, r0, asr r0
    7148:	00000000 	andeq	r0, r0, r0
    714c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7158:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    7170:	00020000 	andeq	r0, r2, r0
    7174:	00009f30 	andeq	r9, r0, r0, lsr pc
    7178:	00000000 	andeq	r0, r0, r0
    717c:	00020000 	andeq	r0, r2, r0
    7180:	00009f30 	andeq	r9, r0, r0, lsr pc
    7184:	00000000 	andeq	r0, r0, r0
    7188:	00010000 	andeq	r0, r1, r0
    718c:	00000052 	andeq	r0, r0, r2, asr r0
    7190:	00000000 	andeq	r0, r0, r0
    7194:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    71a0:	00520001 	subseq	r0, r2, r1
    71a4:	00000000 	andeq	r0, r0, r0
    71a8:	01000000 	mrseq	r0, (UNDEF: 0)
    71ac:	00005500 	andeq	r5, r0, r0, lsl #10
    71b0:	00000000 	andeq	r0, r0, r0
    71b4:	00010000 	andeq	r0, r1, r0
    71b8:	00000052 	andeq	r0, r0, r2, asr r0
    71bc:	00000000 	andeq	r0, r0, r0
    71c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    71cc:	9f300002 	svcls	0x00300002
	...
    71d8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    71e8:	00010000 	andeq	r0, r1, r0
    71ec:	00000050 	andeq	r0, r0, r0, asr r0
    71f0:	00000000 	andeq	r0, r0, r0
    71f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7200:	00550001 	subseq	r0, r5, r1
    7204:	00000000 	andeq	r0, r0, r0
    7208:	01000000 	mrseq	r0, (UNDEF: 0)
    720c:	00005500 	andeq	r5, r0, r0, lsl #10
    7210:	00000000 	andeq	r0, r0, r0
    7214:	00010000 	andeq	r0, r1, r0
    7218:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7228:	01000000 	mrseq	r0, (UNDEF: 0)
    722c:	00005000 	andeq	r5, r0, r0
	...
    723c:	00020000 	andeq	r0, r2, r0
    7240:	0000007d 	andeq	r0, r0, sp, ror r0
    7244:	00000000 	andeq	r0, r0, r0
    7248:	00020000 	andeq	r0, r2, r0
    724c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    725c:	00020000 	andeq	r0, r2, r0
    7260:	0000007d 	andeq	r0, r0, sp, ror r0
    7264:	00000000 	andeq	r0, r0, r0
    7268:	00020000 	andeq	r0, r2, r0
    726c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7284:	00010000 	andeq	r0, r1, r0
    7288:	00000050 	andeq	r0, r0, r0, asr r0
    728c:	00000000 	andeq	r0, r0, r0
    7290:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    729c:	00500001 	subseq	r0, r0, r1
    72a0:	00000000 	andeq	r0, r0, r0
    72a4:	01000000 	mrseq	r0, (UNDEF: 0)
    72a8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    72b8:	00020000 	andeq	r0, r2, r0
    72bc:	0000007d 	andeq	r0, r0, sp, ror r0
    72c0:	00000000 	andeq	r0, r0, r0
    72c4:	00020000 	andeq	r0, r2, r0
    72c8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    72e0:	00010000 	andeq	r0, r1, r0
    72e4:	00000050 	andeq	r0, r0, r0, asr r0
    72e8:	00000000 	andeq	r0, r0, r0
    72ec:	f3000400 	vshl.u8	d0, d0, d0
    72f0:	009f5001 	addseq	r5, pc, r1
    72f4:	00000000 	andeq	r0, r0, r0
    72f8:	01000000 	mrseq	r0, (UNDEF: 0)
    72fc:	00005000 	andeq	r5, r0, r0
    7300:	00000000 	andeq	r0, r0, r0
    7304:	00040000 	andeq	r0, r4, r0
    7308:	9f5001f3 	svcls	0x005001f3
	...
    7314:	00000001 	andeq	r0, r0, r1
	...
    7320:	00540001 	subseq	r0, r4, r1
    7324:	00000000 	andeq	r0, r0, r0
    7328:	01000000 	mrseq	r0, (UNDEF: 0)
    732c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    733c:	00020000 	andeq	r0, r2, r0
    7340:	0000007d 	andeq	r0, r0, sp, ror r0
    7344:	00000000 	andeq	r0, r0, r0
    7348:	00020000 	andeq	r0, r2, r0
    734c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7364:	00010000 	andeq	r0, r1, r0
    7368:	00000050 	andeq	r0, r0, r0, asr r0
    736c:	00000000 	andeq	r0, r0, r0
    7370:	f3000400 	vshl.u8	d0, d0, d0
    7374:	009f5001 	addseq	r5, pc, r1
    7378:	00000000 	andeq	r0, r0, r0
    737c:	01000000 	mrseq	r0, (UNDEF: 0)
    7380:	00005000 	andeq	r5, r0, r0
    7384:	00000000 	andeq	r0, r0, r0
    7388:	00040000 	andeq	r0, r4, r0
    738c:	9f5001f3 	svcls	0x005001f3
	...
    7398:	00000001 	andeq	r0, r0, r1
    739c:	00000000 	andeq	r0, r0, r0
    73a0:	00010000 	andeq	r0, r1, r0
    73a4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    73b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    73c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    73c4:	00000008 	andeq	r0, r0, r8
	...
    73dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    73e8:	01f30004 	mvnseq	r0, r4
    73ec:	00009f50 	andeq	r9, r0, r0, asr pc
    73f0:	00000000 	andeq	r0, r0, r0
    73f4:	00010000 	andeq	r0, r1, r0
    73f8:	00000050 	andeq	r0, r0, r0, asr r0
    73fc:	00000000 	andeq	r0, r0, r0
    7400:	f3000400 	vshl.u8	d0, d0, d0
    7404:	009f5001 	addseq	r5, pc, r1
    7408:	00000000 	andeq	r0, r0, r0
    740c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7418:	01000000 	mrseq	r0, (UNDEF: 0)
    741c:	00005400 	andeq	r5, r0, r0, lsl #8
    7420:	00000000 	andeq	r0, r0, r0
    7424:	00010000 	andeq	r0, r1, r0
    7428:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7438:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7444:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7448:	00000008 	andeq	r0, r0, r8
	...
    7460:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    746c:	01f30004 	mvnseq	r0, r4
    7470:	00009f50 	andeq	r9, r0, r0, asr pc
    7474:	00000000 	andeq	r0, r0, r0
    7478:	00010000 	andeq	r0, r1, r0
    747c:	00000050 	andeq	r0, r0, r0, asr r0
    7480:	00000000 	andeq	r0, r0, r0
    7484:	f3000400 	vshl.u8	d0, d0, d0
    7488:	009f5001 	addseq	r5, pc, r1
    748c:	00000000 	andeq	r0, r0, r0
    7490:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    749c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    74b0:	007d0002 	rsbseq	r0, sp, r2
	...
    74bc:	187d0002 	ldmdane	sp!, {r1}^
	...
    74d8:	00500001 	subseq	r0, r0, r1
    74dc:	00000000 	andeq	r0, r0, r0
    74e0:	04000000 	streq	r0, [r0], #-0
    74e4:	5001f300 	andpl	pc, r1, r0, lsl #6
    74e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    74ec:	00000000 	andeq	r0, r0, r0
    74f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    74fc:	01f30004 	mvnseq	r0, r4
    7500:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    751c:	00510001 	subseq	r0, r1, r1
    7520:	00000000 	andeq	r0, r0, r0
    7524:	01000000 	mrseq	r0, (UNDEF: 0)
    7528:	00005400 	andeq	r5, r0, r0, lsl #8
    752c:	00000000 	andeq	r0, r0, r0
    7530:	00040000 	andeq	r0, r4, r0
    7534:	9f5101f3 	svcls	0x005101f3
	...
    7540:	00510001 	subseq	r0, r1, r1
    7544:	00000000 	andeq	r0, r0, r0
    7548:	01000000 	mrseq	r0, (UNDEF: 0)
    754c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7564:	00010000 	andeq	r0, r1, r0
    7568:	00000052 	andeq	r0, r0, r2, asr r0
    756c:	00000000 	andeq	r0, r0, r0
    7570:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    757c:	00520001 	subseq	r0, r2, r1
    7580:	00000000 	andeq	r0, r0, r0
    7584:	01000000 	mrseq	r0, (UNDEF: 0)
    7588:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    759c:	00010000 	andeq	r0, r1, r0
    75a0:	00000053 	andeq	r0, r0, r3, asr r0
    75a4:	00000000 	andeq	r0, r0, r0
    75a8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    75b4:	00000001 	andeq	r0, r0, r1
	...
    75c0:	00550001 	subseq	r0, r5, r1
    75c4:	00000000 	andeq	r0, r0, r0
    75c8:	01000000 	mrseq	r0, (UNDEF: 0)
    75cc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    75e0:	00010000 	andeq	r0, r1, r0
    75e4:	00000056 	andeq	r0, r0, r6, asr r0
    75e8:	00000000 	andeq	r0, r0, r0
    75ec:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    7604:	00570001 	subseq	r0, r7, r1
    7608:	00000000 	andeq	r0, r0, r0
    760c:	01000000 	mrseq	r0, (UNDEF: 0)
    7610:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    7628:	00540001 	subseq	r0, r4, r1
    762c:	00000000 	andeq	r0, r0, r0
    7630:	04000000 	streq	r0, [r0], #-0
    7634:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7638:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    763c:	00000000 	andeq	r0, r0, r0
    7640:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7658:	00530001 	subseq	r0, r3, r1
    765c:	00000000 	andeq	r0, r0, r0
    7660:	01000000 	mrseq	r0, (UNDEF: 0)
    7664:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7680:	00510001 	subseq	r0, r1, r1
    7684:	00000000 	andeq	r0, r0, r0
    7688:	03000000 	movweq	r0, #0
    768c:	9f7c7000 	svcls	0x007c7000
	...
    7698:	01f30006 	mvnseq	r0, r6
    769c:	9f1a3751 	svcls	0x001a3751
	...
    76a8:	00510001 	subseq	r0, r1, r1
    76ac:	00000000 	andeq	r0, r0, r0
    76b0:	03000000 	movweq	r0, #0
    76b4:	9f7c7000 	svcls	0x007c7000
	...
    76cc:	00010000 	andeq	r0, r1, r0
    76d0:	00000052 	andeq	r0, r0, r2, asr r0
    76d4:	00000000 	andeq	r0, r0, r0
    76d8:	34001d00 	strcc	r1, [r0], #-3328	; 0xfffff300
    76dc:	205101f3 	ldrshcs	r0, [r1], #-19	; 0xffffffed
    76e0:	01f31a37 	mvnseq	r1, r7, lsr sl
    76e4:	1a372051 	bne	dcf830 <_Min_Heap_Size+0xdcf030>
    76e8:	22244b40 	eorcs	r4, r4, #64, 22	; 0x10000
    76ec:	0000040c 	andeq	r0, r0, ip, lsl #8
    76f0:	01282a80 	smlawbeq	r8, r0, sl, r2
    76f4:	9f131600 	svcls	0x00131600
	...
    7700:	00520001 	subseq	r0, r2, r1
	...
    7714:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7728:	007d0002 	rsbseq	r0, sp, r2
	...
    7734:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7750:	00500001 	subseq	r0, r0, r1
    7754:	00000000 	andeq	r0, r0, r0
    7758:	01000000 	mrseq	r0, (UNDEF: 0)
    775c:	00005400 	andeq	r5, r0, r0, lsl #8
    7760:	00000000 	andeq	r0, r0, r0
    7764:	00010000 	andeq	r0, r1, r0
    7768:	00000050 	andeq	r0, r0, r0, asr r0
    776c:	00000000 	andeq	r0, r0, r0
    7770:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7788:	00500001 	subseq	r0, r0, r1
    778c:	00000000 	andeq	r0, r0, r0
    7790:	04000000 	streq	r0, [r0], #-0
    7794:	5001f300 	andpl	pc, r1, r0, lsl #6
    7798:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    77a4:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    77a8:	9a080016 	bls	207808 <_Min_Heap_Size+0x207008>
    77ac:	01080016 	tsteq	r8, r6, lsl r0
    77b0:	169a5000 	ldrne	r5, [sl], r0
    77b4:	16b00800 	ldrtne	r0, [r0], r0, lsl #16
    77b8:	00030800 	andeq	r0, r3, r0, lsl #16
    77bc:	b09f0170 	addslt	r0, pc, r0, ror r1	; <UNPREDICTABLE>
    77c0:	c0080016 	andgt	r0, r8, r6, lsl r0
    77c4:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    77c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    77cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	00000200 	andeq	r0, r0, r0, lsl #4
    77d8:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    77dc:	9a080016 	bls	20783c <_Min_Heap_Size+0x20703c>
    77e0:	01080016 	tsteq	r8, r6, lsl r0
    77e4:	169a5000 	ldrne	r5, [sl], r0
    77e8:	16b00800 	ldrtne	r0, [r0], r0, lsl #16
    77ec:	00030800 	andeq	r0, r3, r0, lsl #16
    77f0:	b09f0170 	addslt	r0, pc, r0, ror r1	; <UNPREDICTABLE>
    77f4:	ba080016 	blt	207854 <_Min_Heap_Size+0x207054>
    77f8:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    77fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    7800:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7804:	00000000 	andeq	r0, r0, r0
    7808:	a6000100 	strge	r0, [r0], -r0, lsl #2
    780c:	ae080016 	mcrge	0, 0, r0, cr8, cr6, {0}
    7810:	02080016 	andeq	r0, r8, #22
    7814:	009f3f00 	addseq	r3, pc, r0, lsl #30
    7818:	00000000 	andeq	r0, r0, r0
    781c:	01000000 	mrseq	r0, (UNDEF: 0)
    7820:	0016a600 	andseq	sl, r6, r0, lsl #12
    7824:	0016ae08 	andseq	sl, r6, r8, lsl #28
    7828:	09000308 	stmdbeq	r0, {r3, r8, r9}
    782c:	00009fff 	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
	...
    783c:	00020000 	andeq	r0, r2, r0
    7840:	0000007d 	andeq	r0, r0, sp, ror r0
    7844:	00000000 	andeq	r0, r0, r0
    7848:	00020000 	andeq	r0, r2, r0
    784c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7864:	00010000 	andeq	r0, r1, r0
    7868:	00000050 	andeq	r0, r0, r0, asr r0
    786c:	00000000 	andeq	r0, r0, r0
    7870:	f3000400 	vshl.u8	d0, d0, d0
    7874:	009f5001 	addseq	r5, pc, r1
    7878:	00000000 	andeq	r0, r0, r0
    787c:	01000000 	mrseq	r0, (UNDEF: 0)
    7880:	00005000 	andeq	r5, r0, r0
    7884:	00000000 	andeq	r0, r0, r0
    7888:	00040000 	andeq	r0, r4, r0
    788c:	9f5001f3 	svcls	0x005001f3
	...
    7898:	00000001 	andeq	r0, r0, r1
    789c:	00000000 	andeq	r0, r0, r0
    78a0:	00010000 	andeq	r0, r1, r0
    78a4:	00000054 	andeq	r0, r0, r4, asr r0
    78a8:	00000000 	andeq	r0, r0, r0
    78ac:	00166800 	andseq	r6, r6, r0, lsl #16
    78b0:	00166a08 	andseq	r6, r6, r8, lsl #20
    78b4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    78b8:	00166a00 	andseq	r6, r6, r0, lsl #20
    78bc:	00169808 	andseq	r9, r6, r8, lsl #16
    78c0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    78c4:	00000008 	andeq	r0, r0, r8
	...
    78d4:	00166800 	andseq	r6, r6, r0, lsl #16
    78d8:	00166e08 	andseq	r6, r6, r8, lsl #28
    78dc:	50000108 	andpl	r0, r0, r8, lsl #2
    78e0:	0800166e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9, sl, ip}
    78e4:	08001684 	stmdaeq	r0, {r2, r7, r9, sl, ip}
    78e8:	01f30004 	mvnseq	r0, r4
    78ec:	16849f50 	pkhtbne	r9, r4, r0, asr #30
    78f0:	16880800 	strne	r0, [r8], r0, lsl #16
    78f4:	00010800 	andeq	r0, r1, r0, lsl #16
    78f8:	00168850 	andseq	r8, r6, r0, asr r8
    78fc:	00169808 	andseq	r9, r6, r8, lsl #16
    7900:	f3000408 	vshl.u8	d0, d8, d0
    7904:	009f5001 	addseq	r5, pc, r1
    7908:	00000000 	andeq	r0, r0, r0
    790c:	01000000 	mrseq	r0, (UNDEF: 0)
    7910:	00166e00 	andseq	r6, r6, r0, lsl #28
    7914:	00167808 	andseq	r7, r6, r8, lsl #16
    7918:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    7924:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
    7928:	080015de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, sl, ip}
    792c:	007d0002 	rsbseq	r0, sp, r2
    7930:	080015de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, sl, ip}
    7934:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
    7938:	107d0002 	rsbsne	r0, sp, r2
	...
    794c:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
    7950:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
    7954:	e8500001 	ldmda	r0, {r0}^
    7958:	34080015 	strcc	r0, [r8], #-21	; 0xffffffeb
    795c:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7960:	5001f300 	andpl	pc, r1, r0, lsl #6
    7964:	0016349f 	mulseq	r6, pc, r4	; <UNPREDICTABLE>
    7968:	00163808 	andseq	r3, r6, r8, lsl #16
    796c:	50000108 	andpl	r0, r0, r8, lsl #2
    7970:	08001638 	stmdaeq	r0, {r3, r4, r5, r9, sl, ip}
    7974:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
    7978:	01f30004 	mvnseq	r0, r4
    797c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7990:	15dc0000 	ldrbne	r0, [ip]
    7994:	15e80800 	strbne	r0, [r8, #2048]!	; 0x800
    7998:	00010800 	andeq	r0, r1, r0, lsl #16
    799c:	0015e851 	andseq	lr, r5, r1, asr r8
    79a0:	00161208 	andseq	r1, r6, r8, lsl #4
    79a4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    79a8:	08001612 	stmdaeq	r0, {r1, r4, r9, sl, ip}
    79ac:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
    79b0:	01f30004 	mvnseq	r0, r4
    79b4:	16349f51 	shsaxne	r9, r4, r1
    79b8:	16360800 	ldrtne	r0, [r6], -r0, lsl #16
    79bc:	00010800 	andeq	r0, r1, r0, lsl #16
    79c0:	00163651 	andseq	r3, r6, r1, asr r6
    79c4:	00164c08 	andseq	r4, r6, r8, lsl #24
    79c8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    79cc:	0800164c 	stmdaeq	r0, {r2, r3, r6, r9, sl, ip}
    79d0:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
    79d4:	01f30004 	mvnseq	r0, r4
    79d8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    79ec:	15dc0000 	ldrbne	r0, [ip]
    79f0:	15e80800 	strbne	r0, [r8, #2048]!	; 0x800
    79f4:	00010800 	andeq	r0, r1, r0, lsl #16
    79f8:	0015e852 	andseq	lr, r5, r2, asr r8
    79fc:	00161c08 	andseq	r1, r6, r8, lsl #24
    7a00:	56000108 	strpl	r0, [r0], -r8, lsl #2
    7a04:	0800161c 	stmdaeq	r0, {r2, r3, r4, r9, sl, ip}
    7a08:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
    7a0c:	01f30004 	mvnseq	r0, r4
    7a10:	16349f52 	shsaxne	r9, r4, r2
    7a14:	163b0800 	ldrtne	r0, [fp], -r0, lsl #16
    7a18:	00010800 	andeq	r0, r1, r0, lsl #16
    7a1c:	00163b52 	andseq	r3, r6, r2, asr fp
    7a20:	00164c08 	andseq	r4, r6, r8, lsl #24
    7a24:	56000108 	strpl	r0, [r0], -r8, lsl #2
    7a28:	0800164c 	stmdaeq	r0, {r2, r3, r6, r9, sl, ip}
    7a2c:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
    7a30:	01f30004 	mvnseq	r0, r4
    7a34:	00009f52 	andeq	r9, r0, r2, asr pc
    7a38:	00000000 	andeq	r0, r0, r0
    7a3c:	00010000 	andeq	r0, r1, r0
	...
    7a48:	15e40000 	strbne	r0, [r4, #0]!
    7a4c:	15f40800 	ldrbne	r0, [r4, #2048]!	; 0x800
    7a50:	00020800 	andeq	r0, r2, r0, lsl #16
    7a54:	15f49f30 	ldrbne	r9, [r4, #3888]!	; 0xf30
    7a58:	16060800 	strne	r0, [r6], -r0, lsl #16
    7a5c:	00010800 	andeq	r0, r1, r0, lsl #16
    7a60:	00160653 	andseq	r0, r6, r3, asr r6
    7a64:	00160a08 	andseq	r0, r6, r8, lsl #20
    7a68:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7a6c:	16349f7c 	shsub16ne	r9, r4, ip
    7a70:	16480800 	strbne	r0, [r8], -r0, lsl #16
    7a74:	00020800 	andeq	r0, r2, r0, lsl #16
    7a78:	16489f30 			; <UNDEFINED> instruction: 0x16489f30
    7a7c:	164a0800 	strbne	r0, [sl], -r0, lsl #16
    7a80:	00010800 	andeq	r0, r1, r0, lsl #16
    7a84:	00164a53 	andseq	r4, r6, r3, asr sl
    7a88:	00164c08 	andseq	r4, r6, r8, lsl #24
    7a8c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7a90:	00009f7c 	andeq	r9, r0, ip, ror pc
    7a94:	00000000 	andeq	r0, r0, r0
    7a98:	00020000 	andeq	r0, r2, r0
    7a9c:	00000000 	andeq	r0, r0, r0
    7aa0:	080015f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, ip}
    7aa4:	0800161c 	stmdaeq	r0, {r2, r3, r4, r9, sl, ip}
    7aa8:	1c560001 	mrrcne	0, 0, r0, r6, cr1
    7aac:	1e080016 	mcrne	0, 0, r0, cr8, cr6, {0}
    7ab0:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7ab4:	5201f300 	andpl	pc, r1, #0, 6
    7ab8:	0016489f 	mulseq	r6, pc, r8	; <UNPREDICTABLE>
    7abc:	00164c08 	andseq	r4, r6, r8, lsl #24
    7ac0:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    7acc:	00000002 	andeq	r0, r0, r2
    7ad0:	15f40000 	ldrbne	r0, [r4, #0]!
    7ad4:	16120800 	ldrne	r0, [r2], -r0, lsl #16
    7ad8:	00010800 	andeq	r0, r1, r0, lsl #16
    7adc:	00161254 	andseq	r1, r6, r4, asr r2
    7ae0:	00161e08 	andseq	r1, r6, r8, lsl #28
    7ae4:	f3000408 	vshl.u8	d0, d8, d0
    7ae8:	489f5101 	ldmmi	pc, {r0, r8, ip, lr}	; <UNPREDICTABLE>
    7aec:	4c080016 	stcmi	0, cr0, [r8], {22}
    7af0:	01080016 	tsteq	r8, r6, lsl r0
    7af4:	00005400 	andeq	r5, r0, r0, lsl #8
    7af8:	00000000 	andeq	r0, r0, r0
    7afc:	00020000 	andeq	r0, r2, r0
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	15f40000 	ldrbne	r0, [r4, #0]!
    7b08:	16060800 	strne	r0, [r6], -r0, lsl #16
    7b0c:	00010800 	andeq	r0, r1, r0, lsl #16
    7b10:	00160653 	andseq	r0, r6, r3, asr r6
    7b14:	00160a08 	andseq	r0, r6, r8, lsl #20
    7b18:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b1c:	16489f7c 			; <UNDEFINED> instruction: 0x16489f7c
    7b20:	164a0800 	strbne	r0, [sl], -r0, lsl #16
    7b24:	00010800 	andeq	r0, r1, r0, lsl #16
    7b28:	00164a53 	andseq	r4, r6, r3, asr sl
    7b2c:	00164c08 	andseq	r4, r6, r8, lsl #24
    7b30:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b34:	00009f7c 	andeq	r9, r0, ip, ror pc
    7b38:	00000000 	andeq	r0, r0, r0
    7b3c:	00040000 	andeq	r0, r4, r0
    7b40:	00000000 	andeq	r0, r0, r0
    7b44:	15f40000 	ldrbne	r0, [r4, #0]!
    7b48:	16060800 	strne	r0, [r6], -r0, lsl #16
    7b4c:	00010800 	andeq	r0, r1, r0, lsl #16
    7b50:	00160653 	andseq	r0, r6, r3, asr r6
    7b54:	00160a08 	andseq	r0, r6, r8, lsl #20
    7b58:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b5c:	16489f7c 			; <UNDEFINED> instruction: 0x16489f7c
    7b60:	164a0800 	strbne	r0, [sl], -r0, lsl #16
    7b64:	00010800 	andeq	r0, r1, r0, lsl #16
    7b68:	00164a53 	andseq	r4, r6, r3, asr sl
    7b6c:	00164c08 	andseq	r4, r6, r8, lsl #24
    7b70:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b74:	00009f7c 	andeq	r9, r0, ip, ror pc
	...
    7b80:	15fe0000 	ldrbne	r0, [lr, #0]!
    7b84:	160e0800 	strne	r0, [lr], -r0, lsl #16
    7b88:	00010800 	andeq	r0, r1, r0, lsl #16
    7b8c:	00164851 	andseq	r4, r6, r1, asr r8
    7b90:	00164c08 	andseq	r4, r6, r8, lsl #24
    7b94:	51000108 	tstpl	r0, r8, lsl #2
	...
    7ba0:	16060000 	strne	r0, [r6], -r0
    7ba4:	16180800 	ldrne	r0, [r8], -r0, lsl #16
    7ba8:	00010800 	andeq	r0, r1, r0, lsl #16
    7bac:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7bb8:	00161e00 	andseq	r1, r6, r0, lsl #28
    7bbc:	00162408 	andseq	r2, r6, r8, lsl #8
    7bc0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7bc4:	0800164c 	stmdaeq	r0, {r2, r3, r6, r9, sl, ip}
    7bc8:	08001652 	stmdaeq	r0, {r1, r4, r6, r9, sl, ip}
    7bcc:	00540001 	subseq	r0, r4, r1
	...
    7bd8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    7bdc:	2a080016 	bcs	207c3c <_Min_Heap_Size+0x20743c>
    7be0:	01080016 	tsteq	r8, r6, lsl r0
    7be4:	164c5500 	strbne	r5, [ip], -r0, lsl #10
    7be8:	16500800 	ldrbne	r0, [r0], -r0, lsl #16
    7bec:	00010800 	andeq	r0, r1, r0, lsl #16
    7bf0:	00000055 	andeq	r0, r0, r5, asr r0
    7bf4:	00000000 	andeq	r0, r0, r0
    7bf8:	0015a000 	andseq	sl, r5, r0
    7bfc:	0015a208 	andseq	sl, r5, r8, lsl #4
    7c00:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7c04:	0015a200 	andseq	sl, r5, r0, lsl #4
    7c08:	0015dc08 	andseq	sp, r5, r8, lsl #24
    7c0c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7c10:	00000008 	andeq	r0, r0, r8
	...
    7c20:	a0000000 	andge	r0, r0, r0
    7c24:	aa080015 	bge	207c80 <_Min_Heap_Size+0x207480>
    7c28:	01080015 	tsteq	r8, r5, lsl r0
    7c2c:	15aa5000 	strne	r5, [sl, #0]!
    7c30:	15b80800 	ldrne	r0, [r8, #2048]!	; 0x800
    7c34:	00010800 	andeq	r0, r1, r0, lsl #16
    7c38:	0015b854 	andseq	fp, r5, r4, asr r8
    7c3c:	0015ca08 	andseq	ip, r5, r8, lsl #20
    7c40:	f3000408 	vshl.u8	d0, d8, d0
    7c44:	ca9f5001 	bgt	fe7dbc50 <_estack+0xde7daa18>
    7c48:	ce080015 	mcrgt	0, 0, r0, cr8, cr5, {0}
    7c4c:	01080015 	tsteq	r8, r5, lsl r0
    7c50:	15ce5000 	strbne	r5, [lr]
    7c54:	15dc0800 	ldrbne	r0, [ip, #2048]	; 0x800
    7c58:	00010800 	andeq	r0, r1, r0, lsl #16
    7c5c:	00000054 	andeq	r0, r0, r4, asr r0
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	00000100 	andeq	r0, r0, r0, lsl #2
    7c68:	0015aa00 	andseq	sl, r5, r0, lsl #20
    7c6c:	0015b808 	andseq	fp, r5, r8, lsl #16
    7c70:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7c74:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
    7c78:	080015c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip}
    7c7c:	01f30004 	mvnseq	r0, r4
    7c80:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7c90:	080015ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, sl, ip}
    7c94:	080015b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, sl, ip}
    7c98:	b6530001 	ldrblt	r0, [r3], -r1
    7c9c:	be080015 	mcrlt	0, 0, r0, cr8, cr5, {0}
    7ca0:	01080015 	tsteq	r8, r5, lsl r0
    7ca4:	15c65300 	strbne	r5, [r6, #768]	; 0x300
    7ca8:	15c80800 	strbne	r0, [r8, #2048]	; 0x800
    7cac:	00010800 	andeq	r0, r1, r0, lsl #16
    7cb0:	00000053 	andeq	r0, r0, r3, asr r0
    7cb4:	00000000 	andeq	r0, r0, r0
    7cb8:	00000400 	andeq	r0, r0, r0, lsl #8
    7cbc:	0015aa00 	andseq	sl, r5, r0, lsl #20
    7cc0:	0015b808 	andseq	fp, r5, r8, lsl #16
    7cc4:	74000508 	strvc	r0, [r0], #-1288	; 0xfffffaf8
    7cc8:	9f1a3700 	svcls	0x001a3700
    7ccc:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
    7cd0:	080015ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, ip}
    7cd4:	01f30006 	mvnseq	r0, r6
    7cd8:	9f1a3750 	svcls	0x001a3750
	...
    7ce4:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
    7ce8:	08001766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, ip}
    7cec:	007d0002 	rsbseq	r0, sp, r2
    7cf0:	08001766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, ip}
    7cf4:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
    7cf8:	107d0002 	rsbsne	r0, sp, r2
	...
    7d08:	17640000 	strbne	r0, [r4, -r0]!
    7d0c:	176b0800 	strbne	r0, [fp, -r0, lsl #16]!
    7d10:	00010800 	andeq	r0, r1, r0, lsl #16
    7d14:	00176b50 	andseq	r6, r7, r0, asr fp
    7d18:	00177a08 	andseq	r7, r7, r8, lsl #20
    7d1c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7d20:	0800177a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, r9, sl, ip}
    7d24:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
    7d28:	01f30004 	mvnseq	r0, r4
    7d2c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7d38:	176e0000 	strbne	r0, [lr, -r0]!
    7d3c:	177a0800 	ldrbne	r0, [sl, -r0, lsl #16]!
    7d40:	00010800 	andeq	r0, r1, r0, lsl #16
    7d44:	00177a50 	andseq	r7, r7, r0, asr sl
    7d48:	00178608 	andseq	r8, r7, r8, lsl #12
    7d4c:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    7d58:	176e0001 	strbne	r0, [lr, -r1]!
    7d5c:	17860800 	strne	r0, [r6, r0, lsl #16]
    7d60:	00010800 	andeq	r0, r1, r0, lsl #16
    7d64:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7d74:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7d80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7d84:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7d9c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7da8:	01f30004 	mvnseq	r0, r4
    7dac:	00009f50 	andeq	r9, r0, r0, asr pc
    7db0:	00000000 	andeq	r0, r0, r0
    7db4:	00010000 	andeq	r0, r1, r0
    7db8:	00000050 	andeq	r0, r0, r0, asr r0
    7dbc:	00000000 	andeq	r0, r0, r0
    7dc0:	f3000400 	vshl.u8	d0, d0, d0
    7dc4:	009f5001 	addseq	r5, pc, r1
    7dc8:	00000000 	andeq	r0, r0, r0
    7dcc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7ddc:	02000000 	andeq	r0, r0, #0
    7de0:	009f3000 	addseq	r3, pc, r0
    7de4:	00000000 	andeq	r0, r0, r0
    7de8:	01000000 	mrseq	r0, (UNDEF: 0)
    7dec:	00005000 	andeq	r5, r0, r0
    7df0:	00000000 	andeq	r0, r0, r0
    7df4:	00020000 	andeq	r0, r2, r0
    7df8:	00009f30 	andeq	r9, r0, r0, lsr pc
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	00010000 	andeq	r0, r1, r0
    7e04:	00000050 	andeq	r0, r0, r0, asr r0
    7e08:	00000000 	andeq	r0, r0, r0
    7e0c:	00000100 	andeq	r0, r0, r0, lsl #2
    7e10:	00000000 	andeq	r0, r0, r0
    7e14:	01000000 	mrseq	r0, (UNDEF: 0)
    7e18:	00005500 	andeq	r5, r0, r0, lsl #10
    7e1c:	00000000 	andeq	r0, r0, r0
    7e20:	16c00000 	strbne	r0, [r0], r0
    7e24:	16c20800 	strbne	r0, [r2], r0, lsl #16
    7e28:	00020800 	andeq	r0, r2, r0, lsl #16
    7e2c:	16c2007d 	uxtab16ne	r0, r2, sp
    7e30:	170c0800 	strne	r0, [ip, -r0, lsl #16]
    7e34:	00020800 	andeq	r0, r2, r0, lsl #16
    7e38:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7e48:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
    7e4c:	080016c8 	stmdaeq	r0, {r3, r6, r7, r9, sl, ip}
    7e50:	c8500001 	ldmdagt	r0, {r0}^
    7e54:	fe080016 	mcr2	0, 0, r0, cr8, cr6, {0}
    7e58:	01080016 	tsteq	r8, r6, lsl r0
    7e5c:	16fe5400 	ldrbtne	r5, [lr], r0, lsl #8
    7e60:	170c0800 	strne	r0, [ip, -r0, lsl #16]
    7e64:	00040800 	andeq	r0, r4, r0, lsl #16
    7e68:	9f5001f3 	svcls	0x005001f3
	...
    7e7c:	007d0002 	rsbseq	r0, sp, r2
	...
    7e88:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7e94:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    7e98:	0800170e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, ip}
    7e9c:	007d0002 	rsbseq	r0, sp, r2
    7ea0:	0800170e 	stmdaeq	r0, {r1, r2, r3, r8, r9, sl, ip}
    7ea4:	08001740 	stmdaeq	r0, {r6, r8, r9, sl, ip}
    7ea8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7eb4:	00000002 	andeq	r0, r0, r2
	...
    7ec8:	9f300002 	svcls	0x00300002
	...
    7ed4:	00530001 	subseq	r0, r3, r1
    7ed8:	00000000 	andeq	r0, r0, r0
    7edc:	01000000 	mrseq	r0, (UNDEF: 0)
    7ee0:	00005300 	andeq	r5, r0, r0, lsl #6
    7ee4:	00000000 	andeq	r0, r0, r0
    7ee8:	00010000 	andeq	r0, r1, r0
    7eec:	00000051 	andeq	r0, r0, r1, asr r0
    7ef0:	00000000 	andeq	r0, r0, r0
    7ef4:	53000100 	movwpl	r0, #256	; 0x100
	...
    7f00:	00530001 	subseq	r0, r3, r1
    7f04:	00000000 	andeq	r0, r0, r0
    7f08:	02000000 	andeq	r0, r0, #0
    7f0c:	00000001 	andeq	r0, r0, r1
	...
    7f1c:	30000200 	andcc	r0, r0, r0, lsl #4
    7f20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	30000200 	andcc	r0, r0, r0, lsl #4
    7f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7f30:	00000000 	andeq	r0, r0, r0
    7f34:	53000100 	movwpl	r0, #256	; 0x100
	...
    7f40:	9f300002 	svcls	0x00300002
	...
    7f4c:	00530001 	subseq	r0, r3, r1
    7f50:	00000000 	andeq	r0, r0, r0
    7f54:	02000000 	andeq	r0, r0, #0
    7f58:	00000001 	andeq	r0, r0, r1
	...
    7f64:	02000000 	andeq	r0, r0, #0
    7f68:	009f3200 	addseq	r3, pc, r0, lsl #4
    7f6c:	00000000 	andeq	r0, r0, r0
    7f70:	02000000 	andeq	r0, r0, #0
    7f74:	009f3200 	addseq	r3, pc, r0, lsl #4
    7f78:	00000000 	andeq	r0, r0, r0
    7f7c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f80:	00005200 	andeq	r5, r0, r0, lsl #4
    7f84:	00000000 	andeq	r0, r0, r0
    7f88:	00020000 	andeq	r0, r2, r0
    7f8c:	00009f32 	andeq	r9, r0, r2, lsr pc
    7f90:	00000000 	andeq	r0, r0, r0
    7f94:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    7fa4:	9f300002 	svcls	0x00300002
	...
    7fb0:	9f300002 	svcls	0x00300002
	...
    7fbc:	00710008 	rsbseq	r0, r1, r8
    7fc0:	3324ed09 			; <UNDEFINED> instruction: 0x3324ed09
    7fc4:	00009f25 	andeq	r9, r0, r5, lsr #30
    7fc8:	00000000 	andeq	r0, r0, r0
    7fcc:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    7fdc:	00020000 	andeq	r0, r2, r0
    7fe0:	00009f32 	andeq	r9, r0, r2, lsr pc
    7fe4:	00000000 	andeq	r0, r0, r0
    7fe8:	00020000 	andeq	r0, r2, r0
    7fec:	00009f32 	andeq	r9, r0, r2, lsr pc
    7ff0:	00000000 	andeq	r0, r0, r0
    7ff4:	00010000 	andeq	r0, r1, r0
    7ff8:	00000052 	andeq	r0, r0, r2, asr r0
    7ffc:	00000000 	andeq	r0, r0, r0
    8000:	52000100 	andpl	r0, r0, #0, 2
	...
    800c:	00000100 	andeq	r0, r0, r0, lsl #2
    8010:	00000000 	andeq	r0, r0, r0
    8014:	00010000 	andeq	r0, r1, r0
    8018:	00000050 	andeq	r0, r0, r0, asr r0
    801c:	00000000 	andeq	r0, r0, r0
    8020:	00186c00 	andseq	r6, r8, r0, lsl #24
    8024:	00187008 	andseq	r7, r8, r8
    8028:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    802c:	00187000 	andseq	r7, r8, r0
    8030:	0018e808 	andseq	lr, r8, r8, lsl #16
    8034:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8038:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    8048:	00186c00 	andseq	r6, r8, r0, lsl #24
    804c:	00188608 	andseq	r8, r8, r8, lsl #12
    8050:	50000108 	andpl	r0, r0, r8, lsl #2
    8054:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
    8058:	080018c0 	stmdaeq	r0, {r6, r7, fp, ip}
    805c:	c0580001 	subsgt	r0, r8, r1
    8060:	c6080018 			; <UNDEFINED> instruction: 0xc6080018
    8064:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    8068:	5001f300 	andpl	pc, r1, r0, lsl #6
    806c:	0018c69f 	mulseq	r8, pc, r6	; <UNPREDICTABLE>
    8070:	0018e808 	andseq	lr, r8, r8, lsl #16
    8074:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    8088:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
    808c:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
    8090:	86510001 	ldrbhi	r0, [r1], -r1
    8094:	c0080018 	andgt	r0, r8, r8, lsl r0
    8098:	01080018 	tsteq	r8, r8, lsl r0
    809c:	18c05700 	stmiane	r0, {r8, r9, sl, ip, lr}^
    80a0:	18c60800 	stmiane	r6, {fp}^
    80a4:	00040800 	andeq	r0, r4, r0, lsl #16
    80a8:	9f5101f3 	svcls	0x005101f3
    80ac:	080018c6 	stmdaeq	r0, {r1, r2, r6, r7, fp, ip}
    80b0:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
    80b4:	00510001 	subseq	r0, r1, r1
	...
    80c4:	00186c00 	andseq	r6, r8, r0, lsl #24
    80c8:	00188608 	andseq	r8, r8, r8, lsl #12
    80cc:	52000108 	andpl	r0, r0, #8, 2
    80d0:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
    80d4:	080018c6 	stmdaeq	r0, {r1, r2, r6, r7, fp, ip}
    80d8:	01f30004 	mvnseq	r0, r4
    80dc:	18c69f52 	stmiane	r6, {r1, r4, r6, r8, r9, sl, fp, ip, pc}^
    80e0:	18e80800 	stmiane	r8!, {fp}^
    80e4:	00010800 	andeq	r0, r1, r0, lsl #16
    80e8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    80f8:	00186c00 	andseq	r6, r8, r0, lsl #24
    80fc:	00188608 	andseq	r8, r8, r8, lsl #12
    8100:	53000108 	movwpl	r0, #264	; 0x108
    8104:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
    8108:	080018c0 	stmdaeq	r0, {r6, r7, fp, ip}
    810c:	c0550001 	subsgt	r0, r5, r1
    8110:	c6080018 			; <UNDEFINED> instruction: 0xc6080018
    8114:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    8118:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    811c:	0018c69f 	mulseq	r8, pc, r6	; <UNPREDICTABLE>
    8120:	0018e808 	andseq	lr, r8, r8, lsl #16
    8124:	53000108 	movwpl	r0, #264	; 0x108
	...
    8130:	00000001 	andeq	r0, r0, r1
    8134:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
    8138:	18860800 	stmne	r6, {fp}
    813c:	00020800 	andeq	r0, r2, r0, lsl #16
    8140:	18869f30 	stmne	r6, {r4, r5, r8, r9, sl, fp, ip, pc}
    8144:	18c00800 	stmiane	r0, {fp}^
    8148:	00010800 	andeq	r0, r1, r0, lsl #16
    814c:	0018c656 	andseq	ip, r8, r6, asr r6
    8150:	0018dc08 	andseq	sp, r8, r8, lsl #24
    8154:	30000208 	andcc	r0, r0, r8, lsl #4
    8158:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    815c:	00000000 	andeq	r0, r0, r0
    8160:	00000200 	andeq	r0, r0, r0, lsl #4
    8164:	00000101 	andeq	r0, r0, r1, lsl #2
    8168:	70000000 	andvc	r0, r0, r0
    816c:	86080018 			; <UNDEFINED> instruction: 0x86080018
    8170:	02080018 	andeq	r0, r8, #24
    8174:	909f3000 	addsls	r3, pc, r0
    8178:	a2080018 	andge	r0, r8, #24
    817c:	01080018 	tsteq	r8, r8, lsl r0
    8180:	18a25200 	stmiane	r2!, {r9, ip, lr}
    8184:	18a60800 	stmiane	r6!, {fp}
    8188:	00030800 	andeq	r0, r3, r0, lsl #16
    818c:	a69f7f72 			; <UNDEFINED> instruction: 0xa69f7f72
    8190:	c0080018 	andgt	r0, r8, r8, lsl r0
    8194:	01080018 	tsteq	r8, r8, lsl r0
    8198:	18c65900 	stmiane	r6, {r8, fp, ip, lr}^
    819c:	18e80800 	stmiane	r8!, {fp}^
    81a0:	00020800 	andeq	r0, r2, r0, lsl #16
    81a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    81a8:	00000000 	andeq	r0, r0, r0
    81ac:	00020000 	andeq	r0, r2, r0
    81b0:	00000000 	andeq	r0, r0, r0
    81b4:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
    81b8:	08001886 	stmdaeq	r0, {r1, r2, r7, fp, ip}
    81bc:	9f300002 	svcls	0x00300002
    81c0:	080018ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp, ip}
    81c4:	080018b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, ip}
    81c8:	c6500001 	ldrbgt	r0, [r0], -r1
    81cc:	e8080018 	stmda	r8, {r3, r4}
    81d0:	02080018 	andeq	r0, r8, #24
    81d4:	009f3000 	addseq	r3, pc, r0
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	02000000 	andeq	r0, r0, #0
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	00187000 	andseq	r7, r8, r0
    81e8:	00188608 	andseq	r8, r8, r8, lsl #12
    81ec:	30000208 	andcc	r0, r0, r8, lsl #4
    81f0:	0018869f 	mulseq	r8, pc, r6	; <UNPREDICTABLE>
    81f4:	0018c008 	andseq	ip, r8, r8
    81f8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    81fc:	080018c6 	stmdaeq	r0, {r1, r2, r6, r7, fp, ip}
    8200:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
    8204:	9f300002 	svcls	0x00300002
	...
    8210:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
    8214:	080018ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, fp, ip}
    8218:	007d0002 	rsbseq	r0, sp, r2
    821c:	080018ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, fp, ip}
    8220:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
    8224:	187d0002 	ldmdane	sp!, {r1}^
	...
    8234:	18e80000 	stmiane	r8!, {}^	; <UNPREDICTABLE>
    8238:	19340800 	ldmdbne	r4!, {fp}
    823c:	00010800 	andeq	r0, r1, r0, lsl #16
    8240:	00193450 	andseq	r3, r9, r0, asr r4
    8244:	0019e008 	andseq	lr, r9, r8
    8248:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    824c:	080019e0 	stmdaeq	r0, {r5, r6, r7, r8, fp, ip}
    8250:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
    8254:	01f30004 	mvnseq	r0, r4
    8258:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8264:	18e80000 	stmiane	r8!, {}^	; <UNPREDICTABLE>
    8268:	19370800 	ldmdbne	r7!, {fp}
    826c:	00010800 	andeq	r0, r1, r0, lsl #16
    8270:	00193751 	andseq	r3, r9, r1, asr r7
    8274:	001a6c08 	andseq	r6, sl, r8, lsl #24
    8278:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    8284:	00000001 	andeq	r0, r0, r1
    8288:	18ee0000 	stmiane	lr!, {}^	; <UNPREDICTABLE>
    828c:	19e00800 	stmibne	r0!, {fp}^
    8290:	00020800 	andeq	r0, r2, r0, lsl #16
    8294:	19e09f30 	stmibne	r0!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    8298:	19e20800 	stmibne	r2!, {fp}^
    829c:	00010800 	andeq	r0, r1, r0, lsl #16
    82a0:	0019e250 	andseq	lr, r9, r0, asr r2
    82a4:	001a6c08 	andseq	r6, sl, r8, lsl #24
    82a8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    82b4:	01010101 	tsteq	r1, r1, lsl #2
    82b8:	00000001 	andeq	r0, r0, r1
    82bc:	080018ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, fp, ip}
    82c0:	080019d0 	stmdaeq	r0, {r4, r6, r7, r8, fp, ip}
    82c4:	9f300002 	svcls	0x00300002
    82c8:	080019d0 	stmdaeq	r0, {r4, r6, r7, r8, fp, ip}
    82cc:	080019ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, fp, ip}
    82d0:	9f400002 	svcls	0x00400002
    82d4:	080019ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, fp, ip}
    82d8:	080019f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp, ip}
    82dc:	9f300002 	svcls	0x00300002
    82e0:	080019f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp, ip}
    82e4:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
    82e8:	00540001 	subseq	r0, r4, r1
    82ec:	00000000 	andeq	r0, r0, r0
    82f0:	02000000 	andeq	r0, r0, #0
    82f4:	01010505 	tsteq	r1, r5, lsl #10
    82f8:	01010101 	tsteq	r1, r1, lsl #2
    82fc:	01010101 	tsteq	r1, r1, lsl #2
    8300:	01010101 	tsteq	r1, r1, lsl #2
    8304:	01010101 	tsteq	r1, r1, lsl #2
    8308:	01010101 	tsteq	r1, r1, lsl #2
    830c:	01010101 	tsteq	r1, r1, lsl #2
    8310:	01010101 	tsteq	r1, r1, lsl #2
    8314:	00000000 	andeq	r0, r0, r0
    8318:	0018ee00 	andseq	lr, r8, r0, lsl #28
    831c:	0018ee08 	andseq	lr, r8, r8, lsl #28
    8320:	50000108 	andpl	r0, r0, r8, lsl #2
    8324:	080018ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, fp, ip}
    8328:	080018f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp, ip}
    832c:	04700003 	ldrbteq	r0, [r0], #-3
    8330:	0018f49f 	mulseq	r8, pc, r4	; <UNPREDICTABLE>
    8334:	0018f808 	andseq	pc, r8, r8, lsl #16
    8338:	70000308 	andvc	r0, r0, r8, lsl #6
    833c:	18f89f08 	ldmne	r8!, {r3, r8, r9, sl, fp, ip, pc}^
    8340:	18fc0800 	ldmne	ip!, {fp}^
    8344:	00030800 	andeq	r0, r3, r0, lsl #16
    8348:	fc9f0c70 	ldc2	12, cr0, [pc], {112}	; 0x70
    834c:	00080018 	andeq	r0, r8, r8, lsl r0
    8350:	03080019 	movweq	r0, #32793	; 0x8019
    8354:	9f107000 	svcls	0x00107000
    8358:	08001900 	stmdaeq	r0, {r8, fp, ip}
    835c:	08001904 	stmdaeq	r0, {r2, r8, fp, ip}
    8360:	14700003 	ldrbtne	r0, [r0], #-3
    8364:	0019049f 	mulseq	r9, pc, r4	; <UNPREDICTABLE>
    8368:	00190808 	andseq	r0, r9, r8, lsl #16
    836c:	70000308 	andvc	r0, r0, r8, lsl #6
    8370:	19089f18 	stmdbne	r8, {r3, r4, r8, r9, sl, fp, ip, pc}
    8374:	190c0800 	stmdbne	ip, {fp}
    8378:	00030800 	andeq	r0, r3, r0, lsl #16
    837c:	0c9f1c70 	ldceq	12, cr1, [pc], {112}	; 0x70
    8380:	10080019 	andne	r0, r8, r9, lsl r0
    8384:	03080019 	movweq	r0, #32793	; 0x8019
    8388:	9f207000 	svcls	0x00207000
    838c:	08001910 	stmdaeq	r0, {r4, r8, fp, ip}
    8390:	08001914 	stmdaeq	r0, {r2, r4, r8, fp, ip}
    8394:	24700003 	ldrbtcs	r0, [r0], #-3
    8398:	0019149f 	mulseq	r9, pc, r4	; <UNPREDICTABLE>
    839c:	00191808 	andseq	r1, r9, r8, lsl #16
    83a0:	70000308 	andvc	r0, r0, r8, lsl #6
    83a4:	19189f28 	ldmdbne	r8, {r3, r5, r8, r9, sl, fp, ip, pc}
    83a8:	191c0800 	ldmdbne	ip, {fp}
    83ac:	00030800 	andeq	r0, r3, r0, lsl #16
    83b0:	1c9f2c70 	ldcne	12, cr2, [pc], {112}	; 0x70
    83b4:	20080019 	andcs	r0, r8, r9, lsl r0
    83b8:	03080019 	movweq	r0, #32793	; 0x8019
    83bc:	9f307000 	svcls	0x00307000
    83c0:	08001920 	stmdaeq	r0, {r5, r8, fp, ip}
    83c4:	08001924 	stmdaeq	r0, {r2, r5, r8, fp, ip}
    83c8:	34700003 	ldrbtcc	r0, [r0], #-3
    83cc:	0019249f 	mulseq	r9, pc, r4	; <UNPREDICTABLE>
    83d0:	00192808 	andseq	r2, r9, r8, lsl #16
    83d4:	70000308 	andvc	r0, r0, r8, lsl #6
    83d8:	19289f38 	stmdbne	r8!, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
    83dc:	192c0800 	stmdbne	ip!, {fp}
    83e0:	00030800 	andeq	r0, r3, r0, lsl #16
    83e4:	2c9f3c70 	ldccs	12, cr3, [pc], {112}	; 0x70
    83e8:	34080019 	strcc	r0, [r8], #-25	; 0xffffffe7
    83ec:	04080019 	streq	r0, [r8], #-25	; 0xffffffe7
    83f0:	00c07000 	sbceq	r7, r0, r0
    83f4:	0019349f 	mulseq	r9, pc, r4	; <UNPREDICTABLE>
    83f8:	0019e008 	andseq	lr, r9, r8
    83fc:	75000408 	strvc	r0, [r0, #-1032]	; 0xfffffbf8
    8400:	e09f00c0 	adds	r0, pc, r0, asr #1
    8404:	6c080019 	stcvs	0, cr0, [r8], {25}
    8408:	0608001a 			; <UNDEFINED> instruction: 0x0608001a
    840c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8410:	009f4023 	addseq	r4, pc, r3, lsr #32
    8414:	00000000 	andeq	r0, r0, r0
    8418:	04000000 	streq	r0, [r0], #-0
    841c:	06080018 			; <UNDEFINED> instruction: 0x06080018
    8420:	02080018 	andeq	r0, r8, #24
    8424:	06007d00 	streq	r7, [r0], -r0, lsl #26
    8428:	1c080018 	stcne	0, cr0, [r8], {24}
    842c:	02080018 	andeq	r0, r8, #24
    8430:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8440:	04000000 	streq	r0, [r0], #-0
    8444:	0c080018 	stceq	0, cr0, [r8], {24}
    8448:	01080018 	tsteq	r8, r8, lsl r0
    844c:	180c5000 	stmdane	ip, {ip, lr}
    8450:	180f0800 	stmdane	pc, {fp}	; <UNPREDICTABLE>
    8454:	00010800 	andeq	r0, r1, r0, lsl #16
    8458:	00180f51 	andseq	r0, r8, r1, asr pc
    845c:	00181808 	andseq	r1, r8, r8, lsl #16
    8460:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    8464:	08001818 	stmdaeq	r0, {r3, r4, fp, ip}
    8468:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
    846c:	01f30004 	mvnseq	r0, r4
    8470:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    847c:	17cc0000 	strbne	r0, [ip, r0]
    8480:	17d20800 	ldrbne	r0, [r2, r0, lsl #16]
    8484:	00010800 	andeq	r0, r1, r0, lsl #16
    8488:	0017d250 	andseq	sp, r7, r0, asr r2
    848c:	00180208 	andseq	r0, r8, r8, lsl #4
    8490:	f3000408 	vshl.u8	d0, d8, d0
    8494:	009f5001 	addseq	r5, pc, r1
	...
    84a0:	0017d000 	andseq	sp, r7, r0
    84a4:	00180208 	andseq	r0, r8, r8, lsl #4
    84a8:	53000108 	movwpl	r0, #264	; 0x108
	...
    84c8:	080017d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, sl, ip}
    84cc:	080017f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, ip}
    84d0:	f0500001 			; <UNDEFINED> instruction: 0xf0500001
    84d4:	f2080017 	vqadd.s8	d0, d8, d7
    84d8:	0a080017 	beq	20853c <_Min_Heap_Size+0x207d3c>
    84dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    84e0:	000a2540 	andeq	r2, sl, r0, asr #10
    84e4:	f29f1af8 			; <UNDEFINED> instruction: 0xf29f1af8
    84e8:	f4080017 	vst4.8	{d0-d3}, [r8 :64], r7
    84ec:	01080017 	tsteq	r8, r7, lsl r0
    84f0:	17f45000 	ldrbne	r5, [r4, r0]!
    84f4:	17f60800 	ldrbne	r0, [r6, r0, lsl #16]!
    84f8:	000a0800 	andeq	r0, sl, r0, lsl #16
    84fc:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    8500:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    8504:	17f69f1a 			; <UNDEFINED> instruction: 0x17f69f1a
    8508:	17f80800 	ldrbne	r0, [r8, r0, lsl #16]!
    850c:	00010800 	andeq	r0, r1, r0, lsl #16
    8510:	0017f850 	andseq	pc, r7, r0, asr r8	; <UNPREDICTABLE>
    8514:	0017fa08 	andseq	pc, r7, r8, lsl #20
    8518:	f3000a08 	vpmax.u8	d0, d0, d8
    851c:	25405001 	strbcs	r5, [r0, #-1]
    8520:	1af8000a 	bne	ffe08550 <_estack+0xdfe07318>
    8524:	0017fa9f 	mulseq	r7, pc, sl	; <UNPREDICTABLE>
    8528:	0017fc08 	andseq	pc, r7, r8, lsl #24
    852c:	50000108 	andpl	r0, r0, r8, lsl #2
    8530:	080017fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip}
    8534:	080017fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip}
    8538:	01f3000a 	mvnseq	r0, sl
    853c:	0a254050 	beq	958684 <_Min_Heap_Size+0x957e84>
    8540:	9f1af800 	svcls	0x001af800
    8544:	080017fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip}
    8548:	08001800 	stmdaeq	r0, {fp, ip}
    854c:	00500001 	subseq	r0, r0, r1
    8550:	02080018 	andeq	r0, r8, #24
    8554:	0a080018 	beq	2085bc <_Min_Heap_Size+0x207dbc>
    8558:	5001f300 	andpl	pc, r1, r0, lsl #6
    855c:	000a2540 	andeq	r2, sl, r0, asr #10
    8560:	009f1af8 			; <UNDEFINED> instruction: 0x009f1af8
    8564:	00000000 	andeq	r0, r0, r0
    8568:	a0000000 	andge	r0, r0, r0
    856c:	a2080017 	andge	r0, r8, #23
    8570:	02080017 	andeq	r0, r8, #23
    8574:	a2007d00 	andge	r7, r0, #0, 26
    8578:	ca080017 	bgt	2085dc <_Min_Heap_Size+0x207ddc>
    857c:	02080017 	andeq	r0, r8, #23
    8580:	ca087d00 	bgt	227988 <_Min_Heap_Size+0x227188>
    8584:	cc080017 	stcgt	0, cr0, [r8], {23}
    8588:	02080017 	andeq	r0, r8, #23
    858c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    8598:	a0000000 	andge	r0, r0, r0
    859c:	c0080017 	andgt	r0, r8, r7, lsl r0
    85a0:	01080017 	tsteq	r8, r7, lsl r0
    85a4:	17c05000 	strbne	r5, [r0, r0]
    85a8:	17cc0800 	strbne	r0, [ip, r0, lsl #16]
    85ac:	00040800 	andeq	r0, r4, r0, lsl #16
    85b0:	9f5001f3 	svcls	0x005001f3
	...
    85bc:	00000001 	andeq	r0, r0, r1
    85c0:	17a60000 	strne	r0, [r6, r0]!
    85c4:	17c40800 	strbne	r0, [r4, r0, lsl #16]
    85c8:	00020800 	andeq	r0, r2, r0, lsl #16
    85cc:	17c49f30 			; <UNDEFINED> instruction: 0x17c49f30
    85d0:	17c80800 	strbne	r0, [r8, r0, lsl #16]
    85d4:	00080800 	andeq	r0, r8, r0, lsl #16
    85d8:	24400070 	strbcs	r0, [r0], #-112	; 0xffffff90
    85dc:	9f210073 	svcls	0x00210073
    85e0:	080017c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, sl, ip}
    85e4:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    85e8:	00500001 	subseq	r0, r0, r1
    85ec:	00000000 	andeq	r0, r0, r0
    85f0:	03000000 	movweq	r0, #0
    85f4:	a6000000 	strge	r0, [r0], -r0
    85f8:	a8080017 	stmdage	r8, {r0, r1, r2, r4}
    85fc:	02080017 	andeq	r0, r8, #23
    8600:	a89f3000 	ldmge	pc, {ip, sp}	; <UNPREDICTABLE>
    8604:	c4080017 	strgt	r0, [r8], #-23	; 0xffffffe9
    8608:	01080017 	tsteq	r8, r7, lsl r0
    860c:	00005300 	andeq	r5, r0, r0, lsl #6
    8610:	00000000 	andeq	r0, r0, r0
    8614:	181c0000 	ldmdane	ip, {}	; <UNPREDICTABLE>
    8618:	181e0800 	ldmdane	lr, {fp}
    861c:	00020800 	andeq	r0, r2, r0, lsl #16
    8620:	181e007d 	ldmdane	lr, {r0, r2, r3, r4, r5, r6}
    8624:	186c0800 	stmdane	ip!, {fp}^
    8628:	00020800 	andeq	r0, r2, r0, lsl #16
    862c:	0000087d 	andeq	r0, r0, sp, ror r8
    8630:	00000000 	andeq	r0, r0, r0
    8634:	1a6c0000 	bne	1b0863c <_Min_Heap_Size+0x1b07e3c>
    8638:	1a6e0800 	bne	1b8a640 <_Min_Heap_Size+0x1b89e40>
    863c:	00020800 	andeq	r0, r2, r0, lsl #16
    8640:	1a6e007d 	bne	1b8883c <_Min_Heap_Size+0x1b8803c>
    8644:	1af40800 	bne	ffd0a64c <_estack+0xdfd09414>
    8648:	00020800 	andeq	r0, r2, r0, lsl #16
    864c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8658:	1a6c0000 	bne	1b08660 <_Min_Heap_Size+0x1b07e60>
    865c:	1a720800 	bne	1c8a664 <_Min_Heap_Size+0x1c89e64>
    8660:	00010800 	andeq	r0, r1, r0, lsl #16
    8664:	001a7250 	andseq	r7, sl, r0, asr r2
    8668:	001af408 	andseq	pc, sl, r8, lsl #8
    866c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	00000048 	andeq	r0, r0, r8, asr #32
	...
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	000000a4 	andeq	r0, r0, r4, lsr #1
  24:	01850002 	orreq	r0, r5, r2
}
  28:	00040000 	andeq	r0, r4, r0
	...
    if (status != HAL_OK)
  34:	00000002 	andeq	r0, r0, r2
      uwTickFreq = prevTickFreq;
  38:	00000000 	andeq	r0, r0, r0
  3c:	00000004 	andeq	r0, r0, r4
  40:	00000000 	andeq	r0, r0, r0
  44:	00000010 	andeq	r0, r0, r0, lsl r0
      if (pllsource != 0)
  48:	00000000 	andeq	r0, r0, r0
  4c:	0000000c 	andeq	r0, r0, ip
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	0800060c 	stmdaeq	r0, {r2, r3, r9, sl}
  54:	00000020 	andeq	r0, r0, r0, lsr #32
  58:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  64:	00000006 	andeq	r0, r0, r6
  68:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
      SystemCoreClock = pllvco/pllp;
  6c:	0000000a 	andeq	r0, r0, sl
  70:	08000658 	stmdaeq	r0, {r3, r4, r6, r9, sl}
      break;
  74:	00000004 	andeq	r0, r0, r4
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
  7c:	00000004 	andeq	r0, r0, r4
  80:	00000000 	andeq	r0, r0, r0
  84:	0000000a 	andeq	r0, r0, sl
  88:	00000000 	andeq	r0, r0, r0
  8c:	00000010 	andeq	r0, r0, r0, lsl r0
  90:	00000000 	andeq	r0, r0, r0
  94:	00000010 	andeq	r0, r0, r0, lsl r0
  98:	00000000 	andeq	r0, r0, r0
  9c:	00000006 	andeq	r0, r0, r6
  a0:	00000000 	andeq	r0, r0, r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  a4:	0000000a 	andeq	r0, r0, sl
  a8:	00000000 	andeq	r0, r0, r0
  ac:	00000010 	andeq	r0, r0, r0, lsl r0
  b0:	00000000 	andeq	r0, r0, r0
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000010 	andeq	r0, r0, r0, lsl r0
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	00000000 	andeq	r0, r0, r0
  bc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c8:	0000007c 	andeq	r0, r0, ip, ror r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	09ba0002 	ldmibeq	sl!, {r1}
  d0:	00040000 	andeq	r0, r4, r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	00000000 	andeq	r0, r0, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  dc:	00000020 	andeq	r0, r0, r0, lsr #32
  e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
  e4:	00000020 	andeq	r0, r0, r0, lsr #32
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	08000680 	stmdaeq	r0, {r7, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	0000004c 	andeq	r0, r0, ip, asr #32
  f0:	080006cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl}
    huart->TxXferCount = 0x00U;
  f4:	00000018 	andeq	r0, r0, r8, lsl r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
    huart->gState  = HAL_UART_STATE_READY;
  fc:	00000018 	andeq	r0, r0, r8, lsl r0
    huart->RxState = HAL_UART_STATE_READY;
 100:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000018 	andeq	r0, r0, r8, lsl r0
    HAL_UART_AbortCpltCallback(huart);
 108:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
 10c:	00000018 	andeq	r0, r0, r8, lsl r0
  uint32_t AbortCplt = 0x01U;
 110:	0800072c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl}
  if (AbortCplt == 0x01U)
 114:	00000018 	andeq	r0, r0, r8, lsl r0
}
 118:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
 11c:	00000018 	andeq	r0, r0, r8, lsl r0
 120:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
 124:	0000002c 	andeq	r0, r0, ip, lsr #32
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
 12c:	00000018 	andeq	r0, r0, r8, lsl r0
 130:	00000000 	andeq	r0, r0, r0
 134:	000000a4 	andeq	r0, r0, r4, lsr #1
 138:	080007a0 	stmdaeq	r0, {r5, r7, r8, r9, sl}
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	1baf0002 	blne	febc015c <_estack+0xdebbef24>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
 15c:	0000004c 	andeq	r0, r0, ip, asr #32
	...
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 168:	0000002c 	andeq	r0, r0, ip, lsr #32
 16c:	1eb70002 	cdpne	0, 11, cr0, cr7, cr2, {0}
 170:	00040000 	andeq	r0, r4, r0
}
 174:	00000000 	andeq	r0, r0, r0
 178:	08000800 	stmdaeq	r0, {fp}
 17c:	00000034 	andeq	r0, r0, r4, lsr r0
 180:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
}
 184:	00000080 	andeq	r0, r0, r0, lsl #1
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000034 	andeq	r0, r0, r4, lsr r0
	...
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 198:	00000064 	andeq	r0, r0, r4, rrx
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	2c1f0002 	ldccs	0, cr0, [pc], {2}
 1a0:	00040000 	andeq	r0, r4, r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000000 	andeq	r0, r0, r0
 1a8:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
 1ac:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
 1bc:	00000014 	andeq	r0, r0, r4, lsl r0
 1c0:	080008dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000014 	andeq	r0, r0, r4, lsl r0
 1c8:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000014 	andeq	r0, r0, r4, lsl r0
 1d0:	08000904 	stmdaeq	r0, {r2, r8, fp}
 1d4:	00000002 	andeq	r0, r0, r2
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	08000906 	stmdaeq	r0, {r1, r2, r8, fp}
 1dc:	00000002 	andeq	r0, r0, r2
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000908 	stmdaeq	r0, {r3, r8, fp}
 1e4:	00000002 	andeq	r0, r0, r2
 1e8:	0800090a 	stmdaeq	r0, {r1, r3, r8, fp}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000008 	andeq	r0, r0, r8
 1f0:	08000914 	stmdaeq	r0, {r2, r4, r8, fp}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	0000001c 	andeq	r0, r0, ip, lsl r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	34e00002 	strbtcc	r0, [r0], #2
 208:	00040000 	andeq	r0, r4, r0
 20c:	00000000 	andeq	r0, r0, r0
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	08000924 	stmdaeq	r0, {r2, r5, r8, fp}
 214:	00000038 	andeq	r0, r0, r8, lsr r0
	...
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000204 	andeq	r0, r0, r4, lsl #4
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	37cb0002 	strbcc	r0, [fp, r2]
 228:	00040000 	andeq	r0, r4, r0
	...
  tmp |= hdma->Init.FIFOMode;
 234:	00000020 	andeq	r0, r0, r0, lsr #32
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
    tmp |= hdma->Init.FIFOThreshold;
 23c:	0000005c 	andeq	r0, r0, ip, asr r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000060 	andeq	r0, r0, r0, rrx
 248:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
  hdma->Instance->FCR = tmp;
 24c:	00000174 	andeq	r0, r0, r4, ror r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	0000008a 	andeq	r0, r0, sl, lsl #1
 258:	00000000 	andeq	r0, r0, r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000002 	andeq	r0, r0, r2
  hdma->State = HAL_DMA_STATE_READY;
 260:	08000c18 	stmdaeq	r0, {r3, r4, sl, fp}
 264:	0000012c 	andeq	r0, r0, ip, lsr #2
  return HAL_OK;
 268:	00000000 	andeq	r0, r0, r0
 26c:	000000e0 	andeq	r0, r0, r0, ror #1
 270:	00000000 	andeq	r0, r0, r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	000000fc 	strdeq	r0, [r0], -ip
 278:	00000000 	andeq	r0, r0, r0
 27c:	00000124 	andeq	r0, r0, r4, lsr #2
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000000 	andeq	r0, r0, r0
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000002 	andeq	r0, r0, r2
        return HAL_ERROR; 
 288:	00000000 	andeq	r0, r0, r0
    return HAL_ERROR;
 28c:	00000078 	andeq	r0, r0, r8, ror r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	000000cc 	andeq	r0, r0, ip, asr #1
 298:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 29c:	000000d2 	ldrdeq	r0, [r0], -r2
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	00000038 	andeq	r0, r0, r8, lsr r0
 2a8:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000084 	andeq	r0, r0, r4, lsl #1
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000094 	muleq	r0, r4, r0
          return HAL_TIMEOUT;
 2b8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000096 	muleq	r0, r6, r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000084 	andeq	r0, r0, r4, lsl #1
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000000 	andeq	r0, r0, r0
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000120 	andeq	r0, r0, r0, lsr #2
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000004 	andeq	r0, r0, r4
      tickstart = HAL_GetTick();
 2d8:	00000000 	andeq	r0, r0, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	000000f2 	strdeq	r0, [r0], -r2
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000006c 	andeq	r0, r0, ip, rrx
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	000000a6 	andeq	r0, r0, r6, lsr #1
          return HAL_TIMEOUT;
 2f0:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000002 	andeq	r0, r0, r2
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	0000004c 	andeq	r0, r0, ip, asr #32
 300:	08000e12 	stmdaeq	r0, {r1, r4, r9, sl, fp}
 304:	0000001a 	andeq	r0, r0, sl, lsl r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000002 	andeq	r0, r0, r2
 310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 314:	0000000a 	andeq	r0, r0, sl
 318:	08000e2c 	stmdaeq	r0, {r2, r3, r5, r9, sl, fp}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000002 	andeq	r0, r0, r2
 320:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000002 	andeq	r0, r0, r2
 328:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
 32c:	00000002 	andeq	r0, r0, r2
 330:	00000000 	andeq	r0, r0, r0
          return HAL_TIMEOUT;
 334:	00000058 	andeq	r0, r0, r8, asr r0
    if(pwrclkchanged == SET)
 338:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000010 	andeq	r0, r0, r0, lsl r0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000000 	andeq	r0, r0, r0
 344:	00000002 	andeq	r0, r0, r2
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000124 	andeq	r0, r0, r4, lsr #2
 350:	00000000 	andeq	r0, r0, r0
 354:	0000002c 	andeq	r0, r0, ip, lsr #32
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	0000002c 	andeq	r0, r0, ip, lsr #32
 360:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000002 	andeq	r0, r0, r2
 368:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	00000080 	andeq	r0, r0, r0, lsl #1
 370:	00000000 	andeq	r0, r0, r0
 374:	00000014 	andeq	r0, r0, r4, lsl r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000002 	andeq	r0, r0, r2
 380:	00000000 	andeq	r0, r0, r0
 384:	000000bc 	strheq	r0, [r0], -ip
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000016 	andeq	r0, r0, r6, lsl r0
        __HAL_RCC_PLL_DISABLE();
 390:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
 394:	00000002 	andeq	r0, r0, r2
        tickstart = HAL_GetTick();
 398:	08000e42 	stmdaeq	r0, {r1, r6, r9, sl, fp}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	000000e6 	andeq	r0, r0, r6, ror #1
 3a0:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
 3a4:	00000288 	andeq	r0, r0, r8, lsl #5
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	0000001e 	andeq	r0, r0, lr, lsl r0
            return HAL_TIMEOUT;
 3b0:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	0000009a 	muleq	r0, sl, r0
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	00000084 	andeq	r0, r0, r4, lsl #1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000088 	andeq	r0, r0, r8, lsl #1
 3c8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000088 	andeq	r0, r0, r8, lsl #1
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	00000036 	andeq	r0, r0, r6, lsr r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	00000036 	andeq	r0, r0, r6, lsr r0
 3e0:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	0000000c 	andeq	r0, r0, ip
 3e8:	00000000 	andeq	r0, r0, r0
 3ec:	00000004 	andeq	r0, r0, r4
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	00000036 	andeq	r0, r0, r6, lsr r0
 3f8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000026 	andeq	r0, r0, r6, lsr #32
 400:	00000000 	andeq	r0, r0, r0
 404:	00000066 	andeq	r0, r0, r6, rrx
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000000 	andeq	r0, r0, r0
 40c:	000000a4 	andeq	r0, r0, r4, lsr #1
 410:	00000000 	andeq	r0, r0, r0
 414:	00000026 	andeq	r0, r0, r6, lsr #32
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000066 	andeq	r0, r0, r6, rrx
	...
        __HAL_RCC_PLL_ENABLE();
 428:	00000084 	andeq	r0, r0, r4, lsl #1
 42c:	7df90002 	ldclvc	0, cr0, [r9, #8]!
        tickstart = HAL_GetTick();
 430:	00040000 	andeq	r0, r4, r0
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 43c:	00000004 	andeq	r0, r0, r4
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000000 	andeq	r0, r0, r0
 444:	000004fc 	strdeq	r0, [r0], -ip
            return HAL_TIMEOUT;
 448:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 44c:	00000118 	andeq	r0, r0, r8, lsl r1
        __HAL_RCC_PLL_DISABLE();
 450:	00000000 	andeq	r0, r0, r0
 454:	0000000c 	andeq	r0, r0, ip
        tickstart = HAL_GetTick();
 458:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	0000000c 	andeq	r0, r0, ip
 460:	00000000 	andeq	r0, r0, r0
 464:	000000d4 	ldrdeq	r0, [r0], -r4
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000000 	andeq	r0, r0, r0
 46c:	0000021c 	andeq	r0, r0, ip, lsl r2
            return HAL_TIMEOUT;
 470:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
  return HAL_OK;
 474:	0000000c 	andeq	r0, r0, ip
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	080011bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, ip}
        pll_config = RCC->PLLCFGR;
 47c:	00000020 	andeq	r0, r0, r0, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	080011dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, ip}
 484:	00000020 	andeq	r0, r0, r0, lsr #32
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	000000cc 	andeq	r0, r0, ip, asr #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	0000003c 	andeq	r0, r0, ip, lsr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	00000000 	andeq	r0, r0, r0
 49c:	00000002 	andeq	r0, r0, r2
 4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000020 	andeq	r0, r0, r0, lsr #32
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4b0:	00000054 	andeq	r0, r0, r4, asr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	8c7c0002 	ldclhi	0, cr0, [ip], #-8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00040000 	andeq	r0, r4, r0
 4bc:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 4c0:	080011fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, ip}
}
 4c4:	000002e8 	andeq	r0, r0, r8, ror #5
        return HAL_ERROR;
 4c8:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 4cc:	00000184 	andeq	r0, r0, r4, lsl #3
}
 4d0:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 4d4:	00000028 	andeq	r0, r0, r8, lsr #32
          return HAL_ERROR;
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	00000038 	andeq	r0, r0, r8, lsr r0
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	0000002c 	andeq	r0, r0, ip, lsr #32
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	00000048 	andeq	r0, r0, r8, asr #32
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	00000002 	andeq	r0, r0, r2
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 508:	0000008c 	andeq	r0, r0, ip, lsl #1
 50c:	965a0002 	ldrbls	r0, [sl], -r2
 510:	00040000 	andeq	r0, r4, r0
	...
 51c:	0000002c 	andeq	r0, r0, ip, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000044 	andeq	r0, r0, r4, asr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000008e 	andeq	r0, r0, lr, lsl #1
 530:	00000000 	andeq	r0, r0, r0
 534:	0000028e 	andeq	r0, r0, lr, lsl #5
 538:	00000000 	andeq	r0, r0, r0
 53c:	000000dc 	ldrdeq	r0, [r0], -ip
 540:	00000000 	andeq	r0, r0, r0
 544:	00000078 	andeq	r0, r0, r8, ror r0
 548:	00000000 	andeq	r0, r0, r0
 54c:	00000098 	muleq	r0, r8, r0
 550:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
 554:	00000094 	muleq	r0, r4, r0
 558:	08001578 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, ip}
 55c:	00000026 	andeq	r0, r0, r6, lsr #32
 560:	00000000 	andeq	r0, r0, r0
 564:	00000128 	andeq	r0, r0, r8, lsr #2
 568:	00000000 	andeq	r0, r0, r0
 56c:	000001dc 	ldrdeq	r0, [r0], -ip
 570:	00000000 	andeq	r0, r0, r0
 574:	0000005a 	andeq	r0, r0, sl, asr r0
 578:	00000000 	andeq	r0, r0, r0
 57c:	0000006e 	andeq	r0, r0, lr, rrx
 580:	00000000 	andeq	r0, r0, r0
 584:	00000006 	andeq	r0, r0, r6
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000004 	andeq	r0, r0, r4
	...
 598:	000000ac 	andeq	r0, r0, ip, lsr #1
 59c:	a4310002 	ldrtge	r0, [r1], #-2
 5a0:	00040000 	andeq	r0, r4, r0
 5a4:	00000000 	andeq	r0, r0, r0
 5a8:	080015a0 	stmdaeq	r0, {r5, r7, r8, sl, ip}
 5ac:	0000003c 	andeq	r0, r0, ip, lsr r0
 5b0:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
 5b4:	0000008c 	andeq	r0, r0, ip, lsl #1
 5b8:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
 5bc:	00000030 	andeq	r0, r0, r0, lsr r0
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000038 	andeq	r0, r0, r8, lsr r0
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000024 	andeq	r0, r0, r4, lsr #32
 5d0:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
 5d4:	00000028 	andeq	r0, r0, r8, lsr #32
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	00000020 	andeq	r0, r0, r0, lsr #32
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	00000128 	andeq	r0, r0, r8, lsr #2
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	00000006 	andeq	r0, r0, r6
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000010 	andeq	r0, r0, r0, lsl r0
 600:	00000000 	andeq	r0, r0, r0
 604:	0000007c 	andeq	r0, r0, ip, ror r0
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000034 	andeq	r0, r0, r4, lsr r0
 610:	00000000 	andeq	r0, r0, r0
 614:	0000003c 	andeq	r0, r0, ip, lsr r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000034 	andeq	r0, r0, r4, lsr r0
 620:	00000000 	andeq	r0, r0, r0
 624:	0000003c 	andeq	r0, r0, ip, lsr r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	0000003c 	andeq	r0, r0, ip, lsr r0
 630:	00000000 	andeq	r0, r0, r0
 634:	00000002 	andeq	r0, r0, r2
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000008 	andeq	r0, r0, r8
	...
 648:	000000ec 	andeq	r0, r0, ip, ror #1
 64c:	b8590002 	ldmdalt	r9, {r1}^
 650:	00040000 	andeq	r0, r4, r0
	...
 65c:	00000002 	andeq	r0, r0, r2
 660:	00000000 	andeq	r0, r0, r0
 664:	00000002 	andeq	r0, r0, r2
 668:	00000000 	andeq	r0, r0, r0
 66c:	0000003c 	andeq	r0, r0, ip, lsr r0
 670:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
 674:	0000004c 	andeq	r0, r0, ip, asr #32
 678:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 67c:	00000034 	andeq	r0, r0, r4, lsr r0
 680:	08001740 	stmdaeq	r0, {r6, r8, r9, sl, ip}
 684:	00000018 	andeq	r0, r0, r8, lsl r0
 688:	08001758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip}
 68c:	0000000c 	andeq	r0, r0, ip
 690:	00000000 	andeq	r0, r0, r0
 694:	0000000c 	andeq	r0, r0, ip
 698:	00000000 	andeq	r0, r0, r0
 69c:	00000048 	andeq	r0, r0, r8, asr #32
 6a0:	00000000 	andeq	r0, r0, r0
 6a4:	0000000c 	andeq	r0, r0, ip
 6a8:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
 6ac:	00000028 	andeq	r0, r0, r8, lsr #32
 6b0:	00000000 	andeq	r0, r0, r0
 6b4:	0000000e 	andeq	r0, r0, lr
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	0000000e 	andeq	r0, r0, lr
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000008 	andeq	r0, r0, r8
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	0000000c 	andeq	r0, r0, ip
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000010 	andeq	r0, r0, r0, lsl r0
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	00000010 	andeq	r0, r0, r0, lsl r0
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000010 	andeq	r0, r0, r0, lsl r0
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000010 	andeq	r0, r0, r0, lsl r0
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000010 	andeq	r0, r0, r0, lsl r0
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000010 	andeq	r0, r0, r0, lsl r0
 700:	00000000 	andeq	r0, r0, r0
 704:	00000010 	andeq	r0, r0, r0, lsl r0
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000010 	andeq	r0, r0, r0, lsl r0
 710:	00000000 	andeq	r0, r0, r0
 714:	00000010 	andeq	r0, r0, r0, lsl r0
 718:	00000000 	andeq	r0, r0, r0
 71c:	0000000c 	andeq	r0, r0, ip
 720:	00000000 	andeq	r0, r0, r0
 724:	0000000c 	andeq	r0, r0, ip
 728:	00000000 	andeq	r0, r0, r0
 72c:	0000000c 	andeq	r0, r0, ip
	...
 738:	00000024 	andeq	r0, r0, r4, lsr #32
 73c:	c35b0002 	cmpgt	fp, #2
 740:	00040000 	andeq	r0, r4, r0
 744:	00000000 	andeq	r0, r0, r0
 748:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
 74c:	00000014 	andeq	r0, r0, r4, lsl r0
 750:	00000000 	andeq	r0, r0, r0
 754:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 760:	00000054 	andeq	r0, r0, r4, asr r0
 764:	c90e0002 	stmdbgt	lr, {r1}
 768:	00040000 	andeq	r0, r4, r0
 76c:	00000000 	andeq	r0, r0, r0
 770:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 774:	0000002c 	andeq	r0, r0, ip, lsr #32
 778:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 77c:	00000036 	andeq	r0, r0, r6, lsr r0
 780:	08001804 	stmdaeq	r0, {r2, fp, ip}
 784:	00000018 	andeq	r0, r0, r8, lsl r0
 788:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
 78c:	00000050 	andeq	r0, r0, r0, asr r0
 790:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
 794:	0000007c 	andeq	r0, r0, ip, ror r0
 798:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
 79c:	00000184 	andeq	r0, r0, r4, lsl #3
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000006 	andeq	r0, r0, r6
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00000008 	andeq	r0, r0, r8
	...
 7b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7bc:	d1be0002 			; <UNDEFINED> instruction: 0xd1be0002
 7c0:	00040000 	andeq	r0, r4, r0
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
 7cc:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 7d8:	00000024 	andeq	r0, r0, r4, lsr #32
 7dc:	d3800002 	orrle	r0, r0, #2
 7e0:	00040000 	andeq	r0, r4, r0
 7e4:	00000000 	andeq	r0, r0, r0
 7e8:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
 7ec:	00000050 	andeq	r0, r0, r0, asr r0
 7f0:	08001b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, ip}
 7f4:	00000002 	andeq	r0, r0, r2
	...
 800:	0000001c 	andeq	r0, r0, ip, lsl r0
 804:	d3a20002 			; <UNDEFINED> instruction: 0xd3a20002
 808:	00040000 	andeq	r0, r4, r0
 80c:	00000000 	andeq	r0, r0, r0
 810:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
 814:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
   4:	0800060c 	stmdaeq	r0, {r2, r3, r9, sl}
	...
  10:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	00000001 	andeq	r0, r0, r1
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	00000001 	andeq	r0, r0, r1
  1c:	00000001 	andeq	r0, r0, r1
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
}
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
  30:	0800060c 	stmdaeq	r0, {r2, r3, r9, sl}
    if (status != HAL_OK)
  34:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
      uwTickFreq = prevTickFreq;
  38:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
  3c:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  40:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  44:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
      if (pllsource != 0)
  48:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
  4c:	08000658 	stmdaeq	r0, {r3, r4, r6, r9, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	08000658 	stmdaeq	r0, {r3, r4, r6, r9, sl}
  54:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
  58:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
  5c:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	00000001 	andeq	r0, r0, r1
  64:	00000001 	andeq	r0, r0, r1
  68:	00000001 	andeq	r0, r0, r1
      SystemCoreClock = pllvco/pllp;
  6c:	00000001 	andeq	r0, r0, r1
  70:	00000001 	andeq	r0, r0, r1
      break;
  74:	00000001 	andeq	r0, r0, r1
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
  80:	00000001 	andeq	r0, r0, r1
  84:	00000001 	andeq	r0, r0, r1
  88:	00000001 	andeq	r0, r0, r1
  8c:	00000001 	andeq	r0, r0, r1
  90:	00000001 	andeq	r0, r0, r1
  94:	00000001 	andeq	r0, r0, r1
  98:	00000001 	andeq	r0, r0, r1
  9c:	00000001 	andeq	r0, r0, r1
	...
  a8:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	08000680 	stmdaeq	r0, {r7, r9, sl}
  b0:	00000001 	andeq	r0, r0, r1
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000001 	andeq	r0, r0, r1
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000680 	stmdaeq	r0, {r7, r9, sl}
  bc:	080006cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	080006cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl}
  c4:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
  c8:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
  d0:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
  dc:	0800072c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl}
  e0:	0800072c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl}
    if (huart->hdmarx != NULL)
  e4:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
  f0:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
    huart->TxXferCount = 0x00U;
  f4:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
    huart->gState  = HAL_UART_STATE_READY;
  fc:	080007a0 	stmdaeq	r0, {r5, r7, r8, r9, sl}
    huart->RxState = HAL_UART_STATE_READY;
 100:	00000001 	andeq	r0, r0, r1
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000001 	andeq	r0, r0, r1
    HAL_UART_AbortCpltCallback(huart);
 108:	080007a0 	stmdaeq	r0, {r5, r7, r8, r9, sl}
 10c:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
	...
}
 118:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
 11c:	08000800 	stmdaeq	r0, {fp}
	...
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	08000800 	stmdaeq	r0, {fp}
 12c:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
 130:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
 134:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
 138:	00000001 	andeq	r0, r0, r1
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	00000001 	andeq	r0, r0, r1
	...
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
 14c:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
 15c:	080008dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	080008dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp}
 164:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
 168:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
 16c:	08000904 	stmdaeq	r0, {r2, r8, fp}
 170:	08000904 	stmdaeq	r0, {r2, r8, fp}
}
 174:	08000906 	stmdaeq	r0, {r1, r2, r8, fp}
 178:	08000906 	stmdaeq	r0, {r1, r2, r8, fp}
 17c:	08000908 	stmdaeq	r0, {r3, r8, fp}
 180:	08000908 	stmdaeq	r0, {r3, r8, fp}
}
 184:	0800090a 	stmdaeq	r0, {r1, r3, r8, fp}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	0800090a 	stmdaeq	r0, {r1, r3, r8, fp}
 18c:	08000912 	stmdaeq	r0, {r1, r4, r8, fp}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	08000914 	stmdaeq	r0, {r2, r4, r8, fp}
 194:	08000924 	stmdaeq	r0, {r2, r5, r8, fp}
	...
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 1a0:	08000924 	stmdaeq	r0, {r2, r5, r8, fp}
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
	...
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c8:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
 1d4:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
 1dc:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
 1e4:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
 1e8:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	08000c16 	stmdaeq	r0, {r1, r2, r4, sl, fp}
 1f0:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	08000c18 	stmdaeq	r0, {r3, r4, sl, fp}
 1fc:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000001 	andeq	r0, r0, r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000001 	andeq	r0, r0, r1
 208:	00000001 	andeq	r0, r0, r1
 20c:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	00000001 	andeq	r0, r0, r1
 21c:	00000001 	andeq	r0, r0, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	00000001 	andeq	r0, r0, r1
 228:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000001 	andeq	r0, r0, r1
  tmp |= hdma->Init.FIFOMode;
 234:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	00000001 	andeq	r0, r0, r1
    tmp |= hdma->Init.FIFOThreshold;
 23c:	00000001 	andeq	r0, r0, r1
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000001 	andeq	r0, r0, r1
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
  hdma->Instance->FCR = tmp;
 24c:	00000001 	andeq	r0, r0, r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	00000001 	andeq	r0, r0, r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000001 	andeq	r0, r0, r1
 258:	00000001 	andeq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000001 	andeq	r0, r0, r1
  hdma->State = HAL_DMA_STATE_READY;
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000001 	andeq	r0, r0, r1
 278:	00000001 	andeq	r0, r0, r1
 27c:	00000001 	andeq	r0, r0, r1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000001 	andeq	r0, r0, r1
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR; 
 288:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
    return HAL_ERROR;
 28c:	08000e12 	stmdaeq	r0, {r1, r4, r9, sl, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000001 	andeq	r0, r0, r1
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	00000001 	andeq	r0, r0, r1
 298:	08000e12 	stmdaeq	r0, {r1, r4, r9, sl, fp}
      tickstart = HAL_GetTick();
 29c:	08000e2c 	stmdaeq	r0, {r2, r3, r5, r9, sl, fp}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000001 	andeq	r0, r0, r1
 2a4:	00000001 	andeq	r0, r0, r1
 2a8:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	08000e2c 	stmdaeq	r0, {r2, r3, r5, r9, sl, fp}
 2b4:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
          return HAL_TIMEOUT;
 2b8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000001 	andeq	r0, r0, r1
 2c0:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
 2c4:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000001 	andeq	r0, r0, r1
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
 2d4:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
      tickstart = HAL_GetTick();
 2d8:	00000001 	andeq	r0, r0, r1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	00000001 	andeq	r0, r0, r1
 2e4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2f0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000001 	andeq	r0, r0, r1
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
 310:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 314:	00000001 	andeq	r0, r0, r1
 318:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000001 	andeq	r0, r0, r1
 320:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000001 	andeq	r0, r0, r1
 328:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
 32c:	08000e42 	stmdaeq	r0, {r1, r6, r9, sl, fp}
 330:	08000e42 	stmdaeq	r0, {r1, r6, r9, sl, fp}
          return HAL_TIMEOUT;
 334:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
    if(pwrclkchanged == SET)
 338:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000001 	andeq	r0, r0, r1
 368:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	00000001 	andeq	r0, r0, r1
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 398:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	00000001 	andeq	r0, r0, r1
 3a4:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 3b0:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000001 	andeq	r0, r0, r1
	...
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000001 	andeq	r0, r0, r1
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
 414:	080011bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, ip}
 418:	080011bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, ip}
 41c:	080011dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, ip}
 420:	080011dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, ip}
 424:	080011fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, ip}
        __HAL_RCC_PLL_ENABLE();
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 430:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
	...
        __HAL_RCC_PLL_DISABLE();
 450:	080011fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, ip}
 454:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
        tickstart = HAL_GetTick();
 458:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 470:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 474:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	00000001 	andeq	r0, r0, r1
        pll_config = RCC->PLLCFGR;
 47c:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	00000001 	andeq	r0, r0, r1
	...
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000001 	andeq	r0, r0, r1
 4b0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 4c0:	00000001 	andeq	r0, r0, r1
}
 4c4:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4c8:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4cc:	00000001 	andeq	r0, r0, r1
}
 4d0:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
        return HAL_ERROR;
 4d4:	08001578 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, ip}
          return HAL_ERROR;
 4d8:	08001578 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, ip}
 4dc:	0800159e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, sl, ip}
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
 500:	00000001 	andeq	r0, r0, r1
 504:	00000001 	andeq	r0, r0, r1
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
	...
 518:	080015f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, ip}
 51c:	0800161e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, ip}
 520:	08001648 	stmdaeq	r0, {r3, r6, r9, sl, ip}
 524:	0800164c 	stmdaeq	r0, {r2, r3, r6, r9, sl, ip}
	...
 530:	0800161e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, ip}
 534:	08001632 	stmdaeq	r0, {r1, r4, r5, r9, sl, ip}
 538:	0800164c 	stmdaeq	r0, {r2, r3, r6, r9, sl, ip}
 53c:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
	...
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
	...
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
	...
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
	...
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
 598:	00000001 	andeq	r0, r0, r1
 59c:	00000001 	andeq	r0, r0, r1
	...
 5a8:	080015a0 	stmdaeq	r0, {r5, r7, r8, sl, ip}
 5ac:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
 5b0:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
 5b4:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
 5b8:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
 5bc:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
 5c0:	00000001 	andeq	r0, r0, r1
 5c4:	00000001 	andeq	r0, r0, r1
 5c8:	00000001 	andeq	r0, r0, r1
 5cc:	00000001 	andeq	r0, r0, r1
 5d0:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
 5d4:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	00000001 	andeq	r0, r0, r1
 5e4:	00000001 	andeq	r0, r0, r1
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	00000001 	andeq	r0, r0, r1
 5f4:	00000001 	andeq	r0, r0, r1
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
	...
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
 658:	00000001 	andeq	r0, r0, r1
 65c:	00000001 	andeq	r0, r0, r1
 660:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
 664:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 668:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
 66c:	08001740 	stmdaeq	r0, {r6, r8, r9, sl, ip}
 670:	08001740 	stmdaeq	r0, {r6, r8, r9, sl, ip}
 674:	08001758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip}
 678:	08001758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip}
 67c:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
 690:	00000001 	andeq	r0, r0, r1
 694:	00000001 	andeq	r0, r0, r1
 698:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
 69c:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
 6b8:	00000001 	andeq	r0, r0, r1
 6bc:	00000001 	andeq	r0, r0, r1
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	00000001 	andeq	r0, r0, r1
 6d8:	00000001 	andeq	r0, r0, r1
 6dc:	00000001 	andeq	r0, r0, r1
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
 6e8:	00000001 	andeq	r0, r0, r1
 6ec:	00000001 	andeq	r0, r0, r1
 6f0:	00000001 	andeq	r0, r0, r1
 6f4:	00000001 	andeq	r0, r0, r1
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
 708:	00000001 	andeq	r0, r0, r1
 70c:	00000001 	andeq	r0, r0, r1
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
	...
 728:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
 72c:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
	...
 740:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
 744:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 748:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
 74c:	08001802 	stmdaeq	r0, {r1, fp, ip}
 750:	08001804 	stmdaeq	r0, {r2, fp, ip}
 754:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
 758:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
 75c:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
 760:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
 764:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
 768:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
 76c:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
 778:	00000001 	andeq	r0, r0, r1
 77c:	00000001 	andeq	r0, r0, r1
	...
 788:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
 78c:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
	...
 798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 79c:	00000000 	andeq	r0, r0, r0
 7a0:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
 7a4:	08001b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, ip}
 7a8:	08001b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, ip}
 7ac:	08001b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp, ip}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	000001e4 	andeq	r0, r0, r4, ror #3
       4:	017c0003 	cmneq	ip, r3
  errno = ENOMEM;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
}
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    if (status != HAL_OK)
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      uwTickFreq = prevTickFreq;
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      if (pllsource != 0)
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
      68:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
      SystemCoreClock = pllvco/pllp;
      6c:	615c6363 	cmpvs	ip, r3, ror #6
      70:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      break;
      74:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      7c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
      80:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
      84:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      88:	00656475 	rsbeq	r6, r5, r5, ror r4
      8c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
      90:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
      94:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
      98:	705c6e6f 	subsvc	r6, ip, pc, ror #28
      9c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
      a0:	615c6d61 	cmpvs	ip, r1, ror #26
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
      a8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
      ac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
      b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      bc:	2e30312d 	rsfcssp	f3, f0, #5.0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	30322d33 	eorscc	r2, r2, r3, lsr sp
      c4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
      c8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	6f6e2d6d 	svcvs	0x006e2d6d
      d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      dc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
      e0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    if (huart->hdmarx != NULL)
      e4:	00656e69 	rsbeq	r6, r5, r9, ror #28
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
      f0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    huart->TxXferCount = 0x00U;
      f4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    huart->gState  = HAL_UART_STATE_READY;
      fc:	615c6d61 	cmpvs	ip, r1, ror #26
    huart->RxState = HAL_UART_STATE_READY;
     100:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    HAL_UART_AbortCpltCallback(huart);
     108:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     10c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  uint32_t AbortCplt = 0x01U;
     110:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  if (AbortCplt == 0x01U)
     114:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
}
     118:	2e30312d 	rsfcssp	f3, f0, #5.0
     11c:	30322d33 	eorscc	r2, r2, r3, lsr sp
     120:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     124:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	6f6e2d6d 	svcvs	0x006e2d6d
     12c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     130:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     134:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     138:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	00737973 	rsbseq	r7, r3, r3, ror r9
     140:	73797300 	cmnvc	r9, #0, 6
     144:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00010063 	andeq	r0, r1, r3, rrx
     14c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     154:	00020068 	andeq	r0, r2, r8, rrx
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     15c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     164:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     168:	00030068 	andeq	r0, r3, r8, rrx
     16c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     170:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
}
     174:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     178:	72650000 	rsbvc	r0, r5, #0
     17c:	2e6f6e72 	mcrcs	14, 3, r6, cr15, cr2, {3}
     180:	00040068 	andeq	r0, r4, r8, rrx
}
     184:	01050000 	mrseq	r0, (UNDEF: 5)
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
     18c:	03080005 	movweq	r0, #32773	; 0x8005
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	01060135 	tsteq	r6, r5, lsr r1
     194:	2f060305 	svccs	0x00060305
     198:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     1a0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
     1a8:	06052001 	streq	r2, [r5], -r1
     1ac:	06030520 	streq	r0, [r3], -r0, lsr #10
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	06170526 	ldreq	r0, [r7], -r6, lsr #10
     1b4:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	42060305 	andmi	r0, r6, #335544320	; 0x14000000
     1bc:	06130513 			; <UNDEFINED> instruction: 0x06130513
     1c0:	06030501 	streq	r0, [r3], -r1, lsl #10
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	06010530 			; <UNDEFINED> instruction: 0x06010530
     1c8:	06050513 			; <UNDEFINED> instruction: 0x06050513
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	05207203 	streq	r7, [r0, #-515]!	; 0xfffffdfd
     1d0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
     1d4:	05500605 	ldrbeq	r0, [r0, #-1541]	; 0xfffff9fb
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	052e060b 	streq	r0, [lr, #-1547]!	; 0xfffff9f5
     1dc:	052f0605 	streq	r0, [pc, #-1541]!	; fffffbdf <_estack+0xdfffe9a7>
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	0201060c 	andeq	r0, r1, #12, 12	; 0xc00000
     1e4:	0101000c 	tsteq	r1, ip
     1e8:	00000419 	andeq	r0, r0, r9, lsl r4
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	014b0003 	cmpeq	fp, r3
     1f0:	01020000 	mrseq	r0, (UNDEF: 2)
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	000d0efb 	strdeq	r0, [sp], -fp
     1f8:	01010101 	tsteq	r1, r1, lsl #2
     1fc:	01000000 	mrseq	r0, (UNDEF: 0)
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     208:	6163696c 	cmnvs	r3, ip, ror #18
     20c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     214:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     21c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     228:	5f6d7261 	svcpl	0x006d7261
  tmp = hdma->Instance->FCR;
     22c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
  tmp |= hdma->Init.FIFOMode;
     234:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    tmp |= hdma->Init.FIFOThreshold;
     23c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	30312d69 	eorscc	r2, r1, r9, ror #26
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     248:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
  hdma->Instance->FCR = tmp;
     24c:	615c3031 	cmpvs	ip, r1, lsr r0
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     258:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
  hdma->State = HAL_DMA_STATE_READY;
     260:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     264:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
  return HAL_OK;
     268:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     26c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     270:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     278:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     27c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
        hdma->State = HAL_DMA_STATE_READY;
     284:	5f6d7261 	svcpl	0x006d7261
        return HAL_ERROR; 
     288:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    return HAL_ERROR;
     28c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     298:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      tickstart = HAL_GetTick();
     29c:	30312d69 	eorscc	r2, r1, r9, ror #26
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     2a4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     2a8:	615c3031 	cmpvs	ip, r1, lsr r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     2b0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     2b4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
          return HAL_TIMEOUT;
     2b8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     2c0:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     2c4:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	632e736c 			; <UNDEFINED> instruction: 0x632e736c
     2d0:	00000100 	andeq	r0, r0, r0, lsl #2
     2d4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
      tickstart = HAL_GetTick();
     2d8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     2e0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     2e4:	00000200 	andeq	r0, r0, r0, lsl #4
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     2ec:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
          return HAL_TIMEOUT;
     2f0:	00000300 	andeq	r0, r0, r0, lsl #6
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     2f8:	6c617665 	stclvs	6, cr7, [r1], #-404	; 0xfffffe6c
     2fc:	0300682e 	movweq	r6, #2094	; 0x82e
     300:	745f0000 	ldrbvc	r0, [pc], #-0	; 308 <_Min_Heap_Size-0x4f8>
     304:	73656d69 	cmnvc	r5, #6720	; 0x1a40
     308:	2e636570 	mcrcs	5, 3, r6, cr3, cr0, {3}
     30c:	00030068 	andeq	r0, r3, r8, rrx
     310:	70797400 	rsbsvc	r7, r9, r0, lsl #8
      tickstart = HAL_GetTick();
     314:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     318:	00000300 	andeq	r0, r0, r0, lsl #6
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     320:	0300682e 	movweq	r6, #2094	; 0x82e
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
     328:	2e73656d 	cdpcs	5, 7, cr6, cr3, cr13, {3}
     32c:	00030068 	andeq	r0, r3, r8, rrx
     330:	72726500 	rsbsvc	r6, r2, #0, 10
          return HAL_TIMEOUT;
     334:	682e6f6e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    if(pwrclkchanged == SET)
     338:	00000300 	andeq	r0, r0, r0, lsl #6
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	00010500 	andeq	r0, r1, r0, lsl #10
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	00000205 	andeq	r0, r0, r5, lsl #4
     344:	2c030000 	stccs	0, cr0, [r3], {-0}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	01021301 	tsteq	r2, r1, lsl #6
     34c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     350:	02050001 	andeq	r0, r5, #1
     354:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	05013003 	streq	r3, [r1, #-3]
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	01051303 	tsteq	r5, r3, lsl #6
     360:	02021306 	andeq	r1, r2, #402653184	; 0x18000000
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     368:	02050001 	andeq	r0, r5, #1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	00000000 	andeq	r0, r0, r0
     370:	06013503 	streq	r3, [r1], -r3, lsl #10
     374:	06030501 	streq	r0, [r3], -r1, lsl #10
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
     37c:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
     380:	052f0603 	streq	r0, [pc, #-1539]!	; fffffd85 <_estack+0xdfffeb4d>
     384:	02130601 	andseq	r0, r3, #1048576	; 0x100000
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	01010003 	tsteq	r1, r3
     38c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
        __HAL_RCC_PLL_DISABLE();
     390:	00000002 	andeq	r0, r0, r2
     394:	013d0300 	teqeq	sp, r0, lsl #6
        tickstart = HAL_GetTick();
     398:	03050106 	movweq	r0, #20742	; 0x5106
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	02002106 	andeq	r2, r0, #-2147483647	; 0x80000001
     3a0:	054b0104 	strbeq	r0, [fp, #-260]	; 0xfffffefc
     3a4:	0402000e 	streq	r0, [r2], #-14
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	09050101 	stmdbeq	r5, {r0, r8}
     3ac:	01040200 	mrseq	r0, R12_usr
            return HAL_TIMEOUT;
     3b0:	00010201 	andeq	r0, r1, r1, lsl #4
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	01050101 	tsteq	r5, r1, lsl #2
     3b8:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
     3bc:	03080006 	movweq	r0, #32774	; 0x8006
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	060100c3 	streq	r0, [r1], -r3, asr #1
     3c4:	06030501 	streq	r0, [r3], -r1, lsl #10
     3c8:	0514133d 	ldreq	r1, [r4, #-829]	; 0xfffffcc3
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     3d0:	05052003 	streq	r2, [r5, #-3]
     3d4:	03040200 	movweq	r0, #16896	; 0x4200
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	0e052206 	cdpeq	2, 0, cr2, cr5, cr6, {0}
     3dc:	03040200 	movweq	r0, #16896	; 0x4200
     3e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	03040200 	movweq	r0, #16896	; 0x4200
     3e8:	000c052e 	andeq	r0, ip, lr, lsr #10
     3ec:	20030402 	andcs	r0, r3, r2, lsl #8
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     3f4:	2c060304 	stccs	3, cr0, [r6], {4}
     3f8:	02002b05 	andeq	r2, r0, #5120	; 0x1400
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01060304 	tsteq	r6, r4, lsl #6
     400:	02000905 	andeq	r0, r0, #81920	; 0x14000
     404:	05220304 	streq	r0, [r2, #-772]!	; 0xfffffcfc
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
     40c:	051e0601 	ldreq	r0, [lr, #-1537]	; 0xfffff9ff
     410:	04020003 	streq	r0, [r2], #-3
     414:	06010601 	streq	r0, [r1], -r1, lsl #12
     418:	06010533 			; <UNDEFINED> instruction: 0x06010533
     41c:	01002e13 	tsteq	r0, r3, lsl lr
     420:	00010501 	andeq	r0, r1, r1, lsl #10
     424:	062c0205 	strteq	r0, [ip], -r5, lsl #4
        __HAL_RCC_PLL_ENABLE();
     428:	d0030800 	andle	r0, r3, r0, lsl #16
     42c:	01060100 	mrseq	r0, (UNDEF: 22)
        tickstart = HAL_GetTick();
     430:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	10051413 	andne	r1, r5, r3, lsl r4
     438:	03050106 	movweq	r0, #20742	; 0x5106
     43c:	00050520 	andeq	r0, r5, r0, lsr #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	06030402 	streq	r0, [r3], -r2, lsl #8
     444:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
            return HAL_TIMEOUT;
     448:	00010603 	andeq	r0, r1, r3, lsl #12
  return HAL_OK;
     44c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
        __HAL_RCC_PLL_DISABLE();
     450:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     454:	2c060304 	stccs	3, cr0, [r6], {4}
        tickstart = HAL_GetTick();
     458:	02002b05 	andeq	r2, r0, #5120	; 0x1400
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	01060304 	tsteq	r6, r4, lsl #6
     460:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
     464:	20060104 	andcs	r0, r6, r4, lsl #2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     46c:	01060104 	tsteq	r6, r4, lsl #2
            return HAL_TIMEOUT;
     470:	01053206 	tsteq	r5, r6, lsl #4
  return HAL_OK;
     474:	002e1306 	eoreq	r1, lr, r6, lsl #6
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	01050101 	tsteq	r5, r1, lsl #2
        pll_config = RCC->PLLCFGR;
     47c:	48020500 	stmdami	r2, {r8, sl}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	03080006 	movweq	r0, #32774	; 0x8006
     484:	050100dc 	streq	r0, [r1, #-220]	; 0xffffff24
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	01000102 	tsteq	r0, r2, lsl #2
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00010501 	andeq	r0, r1, r1, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	064e0205 	strbeq	r0, [lr], -r5, lsl #4
     49c:	e3030800 	movw	r0, #14336	; 0x3800
     4a0:	03050100 	movweq	r0, #20736	; 0x5100
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	0f051313 	svceq	0x00051313
     4a8:	03050106 	movweq	r0, #20742	; 0x5106
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	01053d06 	tsteq	r5, r6, lsl #26
     4b0:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	01010001 	tsteq	r1, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     4bc:	00065802 	andeq	r5, r6, r2, lsl #16
  return HAL_OK;
     4c0:	00ea0308 	rsceq	r0, sl, r8, lsl #6
}
     4c4:	13030501 	movwne	r0, #13569	; 0x3501
        return HAL_ERROR;
     4c8:	06010513 			; <UNDEFINED> instruction: 0x06010513
        return HAL_ERROR;
     4cc:	01022013 	tsteq	r2, r3, lsl r0
}
     4d0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
        return HAL_ERROR;
     4d4:	02050001 	andeq	r0, r5, #1
          return HAL_ERROR;
     4d8:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
     4dc:	0100f003 	tsteq	r0, r3	; <UNPREDICTABLE>
     4e0:	13130305 	tstne	r3, #335544320	; 0x14000000
     4e4:	01051313 	tsteq	r5, r3, lsl r3
     4e8:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
     4ec:	01010001 	tsteq	r1, r1
     4f0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     4f4:	00000002 	andeq	r0, r0, r2
     4f8:	00f80300 	rscseq	r0, r8, r0, lsl #6
     4fc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     500:	13210603 			; <UNDEFINED> instruction: 0x13210603
     504:	06010514 			; <UNDEFINED> instruction: 0x06010514
     508:	02022e13 	andeq	r2, r2, #304	; 0x130
     50c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     510:	02050001 	andeq	r0, r5, #1
     514:	00000000 	andeq	r0, r0, r0
     518:	01018003 	tsteq	r1, r3
     51c:	03050106 	movweq	r0, #20742	; 0x5106
     520:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
     524:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
     528:	052f0603 	streq	r0, [pc, #-1539]!	; ffffff2d <_estack+0xdfffecf5>
     52c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     530:	01010003 	tsteq	r1, r3
     534:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     538:	00000002 	andeq	r0, r0, r2
     53c:	01870300 	orreq	r0, r7, r0, lsl #6
     540:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     544:	13210603 			; <UNDEFINED> instruction: 0x13210603
     548:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
     54c:	2f060305 	svccs	0x00060305
     550:	13060105 	movwne	r0, #24837	; 0x6105
     554:	01000302 	tsteq	r0, r2, lsl #6
     558:	00010501 	andeq	r0, r1, r1, lsl #10
     55c:	00000205 	andeq	r0, r0, r5, lsl #4
     560:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
     564:	03050101 	movweq	r0, #20737	; 0x5101
     568:	01051313 	tsteq	r5, r3, lsl r3
     56c:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
     570:	01010001 	tsteq	r1, r1
     574:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     578:	00000002 	andeq	r0, r0, r2
     57c:	01940300 	orrseq	r0, r4, r0, lsl #6
     580:	13030501 	movwne	r0, #13569	; 0x3501
     584:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     588:	06030501 	streq	r0, [r3], -r1, lsl #10
     58c:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
     590:	01022013 	tsteq	r2, r3, lsl r0
     594:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     598:	02050001 	andeq	r0, r5, #1
     59c:	00000000 	andeq	r0, r0, r0
     5a0:	01019b03 	tsteq	r1, r3, lsl #22
     5a4:	03050106 	movweq	r0, #20742	; 0x5106
     5a8:	13132106 	tstne	r3, #-2147483647	; 0x80000001
     5ac:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
     5b0:	2f060305 	svccs	0x00060305
     5b4:	13060105 	movwne	r0, #24837	; 0x6105
     5b8:	01000302 	tsteq	r0, r2, lsl #6
     5bc:	00010501 	andeq	r0, r1, r1, lsl #10
     5c0:	00000205 	andeq	r0, r0, r5, lsl #4
     5c4:	a3030000 	movwge	r0, #12288	; 0x3000
     5c8:	03050101 	movweq	r0, #20737	; 0x5101
     5cc:	06090521 	streq	r0, [r9], -r1, lsr #10
     5d0:	0603052e 	streq	r0, [r3], -lr, lsr #10
     5d4:	0601052f 	streq	r0, [r1], -pc, lsr #10
     5d8:	00030213 	andeq	r0, r3, r3, lsl r2
     5dc:	01050101 	tsteq	r5, r1, lsl #2
     5e0:	00020500 	andeq	r0, r2, r0, lsl #10
     5e4:	03000000 	movweq	r0, #0
     5e8:	060101a9 	streq	r0, [r1], -r9, lsr #3
     5ec:	06030501 	streq	r0, [r3], -r1, lsl #10
     5f0:	13131321 	tstne	r3, #-2080374784	; 0x84000000
     5f4:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
     5f8:	2f060305 	svccs	0x00060305
     5fc:	13060105 	movwne	r0, #24837	; 0x6105
     600:	01000302 	tsteq	r0, r2, lsl #6
     604:	00055f01 	andeq	r5, r5, r1, lsl #30
     608:	df000300 	svcle	0x00000300
     60c:	02000002 	andeq	r0, r0, #2
     610:	0d0efb01 	vstreq	d15, [lr, #-4]
     614:	01010100 	mrseq	r0, (UNDEF: 17)
     618:	00000001 	andeq	r0, r0, r1
     61c:	01000001 	tsteq	r0, r1
     620:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     624:	2f65726f 	svccs	0x0065726f
     628:	00637253 	rsbeq	r7, r3, r3, asr r2
     62c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 634 <_Min_Heap_Size-0x1cc>
     630:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     634:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     638:	5349534d 	movtpl	r5, #37709	; 0x934d
     63c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     640:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     644:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     648:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     64c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     650:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     654:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     658:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     65c:	5f6d7261 	svcpl	0x006d7261
     660:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     664:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     668:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     66c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     670:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     674:	30312d69 	eorscc	r2, r1, r9, ror #26
     678:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     67c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     680:	615c3031 	cmpvs	ip, r1, lsr r0
     684:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     688:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     68c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     690:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     694:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     698:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     69c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     6a0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     6a4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     6a8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     6ac:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     6b0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     6b4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     6b8:	5f6d7261 	svcpl	0x006d7261
     6bc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     6c0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     6c4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     6c8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     6cc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     6d0:	30312d69 	eorscc	r2, r1, r9, ror #26
     6d4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     6d8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     6dc:	615c3031 	cmpvs	ip, r1, lsr r0
     6e0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     6e4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     6e8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     6ec:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     6f0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     6f4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     6f8:	2f2e2e00 	svccs	0x002e2e00
     6fc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     700:	2f737265 	svccs	0x00737265
     704:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     708:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     70c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     710:	2f54532f 	svccs	0x0054532f
     714:	334d5453 	movtcc	r5, #54355	; 0xd453
     718:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     71c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     720:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     724:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     728:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     72c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     730:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     734:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     738:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     73c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 744 <_Min_Heap_Size-0xbc>
     740:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     744:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
     748:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
     74c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     750:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     754:	3a630063 	bcc	18c08e8 <_Min_Heap_Size+0x18c00e8>
     758:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     75c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     760:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     764:	6f72705c 	svcvs	0x0072705c
     768:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     76c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     770:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     774:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     778:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     77c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     780:	61652d65 	cmnvs	r5, r5, ror #26
     784:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     788:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     78c:	31323032 	teqcc	r2, r2, lsr r0
     790:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     794:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     798:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     79c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     7a0:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     7a4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     7a8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     7ac:	2f2e2e2f 	svccs	0x002e2e2f
     7b0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 700 <_Min_Heap_Size-0x100>
     7b4:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
     7b8:	2f736c69 	svccs	0x00736c69
     7bc:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     7c0:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
     7c4:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
     7c8:	0000636e 	andeq	r6, r0, lr, ror #6
     7cc:	6e69616d 	powvsez	f6, f1, #5.0
     7d0:	0100632e 	tsteq	r0, lr, lsr #6
     7d4:	6d630000 	stclvs	0, cr0, [r3, #-0]
     7d8:	5f736973 	svcpl	0x00736973
     7dc:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
     7e0:	00020068 	andeq	r0, r2, r8, rrx
     7e4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     7e8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     7ec:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7f0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     7f4:	00030068 	andeq	r0, r3, r8, rrx
     7f8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     7fc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     800:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     804:	6f630000 	svcvs	0x00630000
     808:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     80c:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
     810:	00000200 	andeq	r0, r0, r0, lsl #4
     814:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     818:	30346632 	eorscc	r6, r4, r2, lsr r6
     81c:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     820:	00050068 	andeq	r0, r5, r8, rrx
     824:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     828:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     82c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     830:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 838 <_Min_Heap_Size+0x38>
     834:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     838:	00000600 	andeq	r0, r0, r0, lsl #12
     83c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     840:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     844:	61685f78 	smcvs	34296	; 0x85f8
     848:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
     84c:	78655f63 	stmdavc	r5!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
     850:	0600682e 	streq	r6, [r0], -lr, lsr #16
     854:	74730000 	ldrbtvc	r0, [r3], #-0
     858:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     85c:	5f787834 	svcpl	0x00787834
     860:	5f6c6168 	svcpl	0x006c6168
     864:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
     868:	00060068 	andeq	r0, r6, r8, rrx
     86c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     870:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     874:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     878:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 880 <_Min_Heap_Size+0x80>
     87c:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
     880:	00000600 	andeq	r0, r0, r0, lsl #12
     884:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     888:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     88c:	61685f78 	smcvs	34296	; 0x85f8
     890:	61755f6c 	cmnvs	r5, ip, ror #30
     894:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     898:	00000600 	andeq	r0, r0, r0, lsl #12
     89c:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     8a0:	00682e74 	rsbeq	r2, r8, r4, ror lr
     8a4:	73000007 	movwvc	r0, #7
     8a8:	6f696474 	svcvs	0x00696474
     8ac:	0800682e 	stmdaeq	r0, {r1, r2, r3, r5, fp, sp, lr}
     8b0:	74730000 	ldrbtvc	r0, [r3], #-0
     8b4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     8b8:	5f787834 	svcpl	0x00787834
     8bc:	2e6c6168 	powcsez	f6, f4, #0.0
     8c0:	00060068 	andeq	r0, r6, r8, rrx
     8c4:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     8c8:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     8cc:	66000007 	strvs	r0, [r0], -r7
     8d0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     8d4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     8d8:	00682e70 	rsbeq	r2, r8, r0, ror lr
     8dc:	3c000009 	stccc	0, cr0, [r0], {9}
     8e0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     8e4:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
     8e8:	0000003e 	andeq	r0, r0, lr, lsr r0
     8ec:	01050000 	mrseq	r0, (UNDEF: 5)
     8f0:	60020500 	andvs	r0, r2, r0, lsl #10
     8f4:	03080006 	movweq	r0, #32774	; 0x8006
     8f8:	060100c8 	streq	r0, [r1], -r8, asr #1
     8fc:	06030501 	streq	r0, [r3], -r1, lsl #10
     900:	0658063f 			; <UNDEFINED> instruction: 0x0658063f
     904:	0601052f 	streq	r0, [r1], -pc, lsr #10
     908:	00060213 	andeq	r0, r6, r3, lsl r2
     90c:	01050101 	tsteq	r5, r1, lsl #2
     910:	00020500 	andeq	r0, r2, r0, lsl #10
     914:	03000000 	movweq	r0, #0
     918:	050100d0 	streq	r0, [r1, #-208]	; 0xffffff30
     91c:	05142103 	ldreq	r2, [r4, #-259]	; 0xfffffefd
     920:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     924:	13590603 	cmpne	r9, #3145728	; 0x300000
     928:	4b060105 	blmi	180d44 <_Min_Heap_Size+0x180544>
     92c:	01000602 	tsteq	r0, r2, lsl #12
     930:	00010501 	andeq	r0, r1, r1, lsl #10
     934:	06800205 	streq	r0, [r0], r5, lsl #4
     938:	d9030800 	stmdble	r3, {fp}
     93c:	03050100 	movweq	r0, #20736	; 0x5100
     940:	1005132f 	andne	r1, r5, pc, lsr #6
     944:	03050106 	movweq	r0, #20742	; 0x5106
     948:	0c052f06 	stceq	15, cr2, [r5], {6}
     94c:	03050106 	movweq	r0, #20742	; 0x5106
     950:	05135a06 	ldreq	r5, [r3, #-2566]	; 0xfffff5fa
     954:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     958:	03052009 	movweq	r2, #20489	; 0x5009
     95c:	13672106 	cmnne	r7, #-2147483647	; 0x80000001
     960:	01060b05 	tsteq	r6, r5, lsl #22
     964:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
     968:	59210603 	stmdbpl	r1!, {r0, r1, r9, sl}
     96c:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
     970:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
     974:	21060305 	tstcs	r6, r5, lsl #6
     978:	59060105 	stmdbpl	r6, {r0, r2, r8}
     97c:	01000602 	tsteq	r0, r2, lsl #12
     980:	00010501 	andeq	r0, r1, r1, lsl #10
     984:	06cc0205 	strbeq	r0, [ip], r5, lsl #4
     988:	ea030800 	b	c2990 <_Min_Heap_Size+0xc2190>
     98c:	03050100 	movweq	r0, #20736	; 0x5100
     990:	01054e21 	tsteq	r5, r1, lsr #28
     994:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     998:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     99c:	02050001 	andeq	r0, r5, #1
     9a0:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
     9a4:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
     9a8:	4b210305 	blmi	8415c4 <_Min_Heap_Size+0x840dc4>
     9ac:	2f060105 	svccs	0x00060105
     9b0:	01000502 	tsteq	r0, r2, lsl #10
     9b4:	00010501 	andeq	r0, r1, r1, lsl #10
     9b8:	06fc0205 	ldrbteq	r0, [ip], r5, lsl #4
     9bc:	f9030800 			; <UNDEFINED> instruction: 0xf9030800
     9c0:	03050100 	movweq	r0, #20736	; 0x5100
     9c4:	01054b21 	tsteq	r5, r1, lsr #22
     9c8:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     9cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     9d0:	02050001 	andeq	r0, r5, #1
     9d4:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
     9d8:	0100ff03 	tsteq	r0, r3, lsl #30	; <UNPREDICTABLE>
     9dc:	4b210305 	blmi	8415f8 <_Min_Heap_Size+0x840df8>
     9e0:	2f060105 	svccs	0x00060105
     9e4:	01000502 	tsteq	r0, r2, lsl #10
     9e8:	00010501 	andeq	r0, r1, r1, lsl #10
     9ec:	072c0205 	streq	r0, [ip, -r5, lsl #4]!
     9f0:	85030800 	strhi	r0, [r3, #-2048]	; 0xfffff800
     9f4:	03050101 	movweq	r0, #20737	; 0x5101
     9f8:	01054b21 	tsteq	r5, r1, lsr #22
     9fc:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     a00:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a04:	02050001 	andeq	r0, r5, #1
     a08:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
     a0c:	01018b03 	tsteq	r1, r3, lsl #22
     a10:	4b210305 	blmi	84162c <_Min_Heap_Size+0x840e2c>
     a14:	2f060105 	svccs	0x00060105
     a18:	01000502 	tsteq	r0, r2, lsl #10
     a1c:	00010501 	andeq	r0, r1, r1, lsl #10
     a20:	075c0205 	ldrbeq	r0, [ip, -r5, lsl #4]
     a24:	96030800 	strls	r0, [r3], -r0, lsl #16
     a28:	03050101 	movweq	r0, #20737	; 0x5101
     a2c:	03200903 			; <UNDEFINED> instruction: 0x03200903
     a30:	302f2e0e 	eorcc	r2, pc, lr, lsl #28
     a34:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     a38:	05053301 	streq	r3, [r5, #-769]	; 0xfffffcff
     a3c:	01040200 	mrseq	r0, R12_usr
     a40:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     a44:	09053d01 	stmdbeq	r5, {r0, r8, sl, fp, ip, sp}
     a48:	01040200 	mrseq	r0, R12_usr
     a4c:	00040247 	andeq	r0, r4, r7, asr #4
     a50:	01050101 	tsteq	r5, r1, lsl #2
     a54:	88020500 	stmdahi	r2, {r8, sl}
     a58:	03080007 	movweq	r0, #32775	; 0x8007
     a5c:	050101f8 	streq	r0, [r1, #-504]	; 0xfffffe08
     a60:	03052202 	movweq	r2, #20994	; 0x5202
     a64:	0502044c 	streq	r0, [r2, #-1100]	; 0xfffffbb4
     a68:	05c3031b 	strbeq	r0, [r3, #795]	; 0x31b
     a6c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     a70:	02000104 	andeq	r0, r0, #4, 2
     a74:	bc030104 	stflts	f0, [r3], {4}
     a78:	0200207a 	andeq	r2, r0, #122	; 0x7a
     a7c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
     a80:	04020009 	streq	r0, [r2], #-9
     a84:	06021001 	streq	r1, [r2], -r1
     a88:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a8c:	02050001 	andeq	r0, r5, #1
     a90:	00000000 	andeq	r0, r0, r0
     a94:	0101c603 	tsteq	r1, r3, lsl #12
     a98:	052f0305 	streq	r0, [pc, #-773]!	; 79b <_Min_Heap_Size-0x65>
     a9c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     aa0:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     aa4:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
     aa8:	016a0603 	cmneq	sl, r3, lsl #12
     aac:	204a5820 	subcs	r5, sl, r0, lsr #16
     ab0:	58200113 	stmdapl	r0!, {r0, r1, r4, r8}
     ab4:	0517204a 	ldreq	r2, [r7, #-74]	; 0xffffffb6
     ab8:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
     abc:	052f0603 	streq	r0, [pc, #-1539]!	; 4c1 <_Min_Heap_Size-0x33f>
     ac0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     ac4:	052f0603 	streq	r0, [pc, #-1539]!	; 4c9 <_Min_Heap_Size-0x337>
     ac8:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
     acc:	052f0603 	streq	r0, [pc, #-1539]!	; 4d1 <_Min_Heap_Size-0x32f>
     ad0:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
     ad4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     ad8:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
     adc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     ae0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     ae4:	052f0603 	streq	r0, [pc, #-1539]!	; 4e9 <_Min_Heap_Size-0x317>
     ae8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     aec:	052f0603 	streq	r0, [pc, #-1539]!	; 4f1 <_Min_Heap_Size-0x30f>
     af0:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     af4:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     af8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
     afc:	052f0603 	streq	r0, [pc, #-1539]!	; 501 <_Min_Heap_Size-0x2ff>
     b00:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     b04:	03053c06 	movweq	r3, #23558	; 0x5c06
     b08:	1f052706 	svcne	0x00052706
     b0c:	03050106 	movweq	r0, #20742	; 0x5106
     b10:	22053006 	andcs	r3, r5, #6
     b14:	03050106 	movweq	r0, #20742	; 0x5106
     b18:	23052f06 	movwcs	r2, #24326	; 0x5f06
     b1c:	03050106 	movweq	r0, #20742	; 0x5106
     b20:	24052f06 	strcs	r2, [r5], #-3846	; 0xfffff0fa
     b24:	03050106 	movweq	r0, #20742	; 0x5106
     b28:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
     b2c:	03050106 	movweq	r0, #20742	; 0x5106
     b30:	07053e06 	streq	r3, [r5, -r6, lsl #28]
     b34:	06050106 	streq	r0, [r5], -r6, lsl #2
     b38:	2401054a 	strcs	r0, [r1], #-1354	; 0xfffffab6
     b3c:	03060505 	movweq	r0, #25861	; 0x6505
     b40:	0e033c70 	mcreq	12, 0, r3, cr3, cr0, {3}
     b44:	0006022e 	andeq	r0, r6, lr, lsr #4
     b48:	01050101 	tsteq	r5, r1, lsl #2
     b4c:	a0020500 	andge	r0, r2, r0, lsl #10
     b50:	03080007 	movweq	r0, #32775	; 0x8007
     b54:	0601028c 	streq	r0, [r1], -ip, lsl #5
     b58:	06030501 	streq	r0, [r3], -r1, lsl #10
     b5c:	20200622 	eorcs	r0, r0, r2, lsr #12
     b60:	02320105 	eorseq	r0, r2, #1073741825	; 0x40000001
     b64:	01010005 	tsteq	r1, r5
     b68:	0000016b 	andeq	r0, r0, fp, ror #2
     b6c:	013c0003 	teqeq	ip, r3
     b70:	01020000 	mrseq	r0, (UNDEF: 2)
     b74:	000d0efb 	strdeq	r0, [sp], -fp
     b78:	01010101 	tsteq	r1, r1, lsl #2
     b7c:	01000000 	mrseq	r0, (UNDEF: 0)
     b80:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     b84:	6f432f2e 	svcvs	0x00432f2e
     b88:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     b8c:	63006372 	movwvs	r6, #882	; 0x372
     b90:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     b94:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     b98:	6f646978 	svcvs	0x00646978
     b9c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     ba0:	6172676f 	cmnvs	r2, pc, ror #14
     ba4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     ba8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     bac:	63675c63 	cmnvs	r7, #25344	; 0x6300
     bb0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     bb4:	6f6e2d6d 	svcvs	0x006e2d6d
     bb8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     bbc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     bc0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     bc4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     bc8:	30312e31 	eorscc	r2, r1, r1, lsr lr
     bcc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     bd0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     bd4:	61652d65 	cmnvs	r5, r5, ror #26
     bd8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     bdc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     be0:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     be4:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     be8:	6300656e 	movwvs	r6, #1390	; 0x56e
     bec:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     bf0:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     bf4:	6f646978 	svcvs	0x00646978
     bf8:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     bfc:	6172676f 	cmnvs	r2, pc, ror #14
     c00:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     c04:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     c08:	63675c63 	cmnvs	r7, #25344	; 0x6300
     c0c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     c10:	6f6e2d6d 	svcvs	0x006e2d6d
     c14:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     c18:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     c1c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     c20:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     c24:	30312e31 	eorscc	r2, r1, r1, lsr lr
     c28:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     c2c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     c30:	61652d65 	cmnvs	r5, r5, ror #26
     c34:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     c38:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     c3c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     c40:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     c44:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     c48:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     c4c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     c50:	2f534953 	svccs	0x00534953
     c54:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     c58:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
     c5c:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     c60:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     c64:	2f787834 	svccs	0x00787834
     c68:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     c6c:	00656475 	rsbeq	r6, r5, r5, ror r4
     c70:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     c74:	00632e6f 	rsbeq	r2, r3, pc, ror #28
     c78:	5f000001 	svcpl	0x00000001
     c7c:	61666564 	cmnvs	r6, r4, ror #10
     c80:	5f746c75 	svcpl	0x00746c75
     c84:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     c88:	00682e73 	rsbeq	r2, r8, r3, ror lr
     c8c:	5f000002 	svcpl	0x00000002
     c90:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     c94:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     c98:	00000300 	andeq	r0, r0, r0, lsl #6
     c9c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     ca0:	30346632 	eorscc	r6, r4, r2, lsr r6
     ca4:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     ca8:	00040068 	andeq	r0, r4, r8, rrx
     cac:	01050000 	mrseq	r0, (UNDEF: 5)
     cb0:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
     cb4:	03080007 	movweq	r0, #32775	; 0x8007
     cb8:	0305012a 	movweq	r0, #20778	; 0x512a
     cbc:	582e0123 	stmdapl	lr!, {r0, r1, r5, r8}
     cc0:	0113204a 	tsteq	r3, sl, asr #32
     cc4:	204a4a20 	subcs	r4, sl, r0, lsr #20
     cc8:	4a200113 	bmi	80111c <_Min_Heap_Size+0x80091c>
     ccc:	0105204a 	tsteq	r5, sl, asr #32
     cd0:	05021406 	streq	r1, [r2, #-1030]	; 0xfffffbfa
     cd4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
     cd8:	03000003 	movweq	r0, #3
     cdc:	0001fa00 	andeq	pc, r1, r0, lsl #20
     ce0:	fb010200 	blx	414ea <_Min_Heap_Size+0x40cea>
     ce4:	01000d0e 	tsteq	r0, lr, lsl #26
     ce8:	00010101 	andeq	r0, r1, r1, lsl #2
     cec:	00010000 	andeq	r0, r1, r0
     cf0:	2e2e0100 	sufcse	f0, f6, f0
     cf4:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     cf8:	72532f65 	subsvc	r2, r3, #404	; 0x194
     cfc:	3a630063 	bcc	18c0e90 <_Min_Heap_Size+0x18c0690>
     d00:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     d04:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     d08:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     d0c:	6f72705c 	svcvs	0x0072705c
     d10:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     d14:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     d18:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     d1c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     d20:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     d24:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     d28:	61652d65 	cmnvs	r5, r5, ror #26
     d2c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     d30:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     d34:	31323032 	teqcc	r2, r2, lsr r0
     d38:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     d3c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     d40:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     d44:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     d48:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     d4c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     d50:	616d5c65 	cmnvs	sp, r5, ror #24
     d54:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     d58:	3a630065 	bcc	18c0ef4 <_Min_Heap_Size+0x18c06f4>
     d5c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     d60:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     d64:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     d68:	6f72705c 	svcvs	0x0072705c
     d6c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     d70:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     d74:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     d78:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     d7c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     d80:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     d84:	61652d65 	cmnvs	r5, r5, ror #26
     d88:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     d8c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     d90:	31323032 	teqcc	r2, r2, lsr r0
     d94:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     d98:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     d9c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     da0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     da4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     da8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     dac:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     db0:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     db4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     db8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     dbc:	534d432f 	movtpl	r4, #54063	; 0xd32f
     dc0:	442f5349 	strtmi	r5, [pc], #-841	; dc8 <_Min_Heap_Size+0x5c8>
     dc4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     dc8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     dcc:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     dd0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     dd4:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     dd8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     ddc:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     de0:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     de4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     de8:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     dec:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     df0:	5f787834 	svcpl	0x00787834
     df4:	5f4c4148 	svcpl	0x004c4148
     df8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     dfc:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     e00:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     e04:	6f432f2e 	svcvs	0x00432f2e
     e08:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     e0c:	0000636e 	andeq	r6, r0, lr, ror #6
     e10:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     e14:	00632e74 	rsbeq	r2, r3, r4, ror lr
     e18:	5f000001 	svcpl	0x00000001
     e1c:	61666564 	cmnvs	r6, r4, ror #10
     e20:	5f746c75 	svcpl	0x00746c75
     e24:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     e28:	00682e73 	rsbeq	r2, r8, r3, ror lr
     e2c:	5f000002 	svcpl	0x00000002
     e30:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     e34:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     e38:	00000300 	andeq	r0, r0, r0, lsl #6
     e3c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e40:	30346632 	eorscc	r6, r4, r2, lsr r6
     e44:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     e48:	00040068 	andeq	r0, r4, r8, rrx
     e4c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     e50:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     e54:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     e58:	645f6c61 	ldrbvs	r6, [pc], #-3169	; e60 <_Min_Heap_Size+0x660>
     e5c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     e60:	00000500 	andeq	r0, r0, r0, lsl #10
     e64:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e68:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     e6c:	61685f78 	smcvs	34296	; 0x85f8
     e70:	70675f6c 	rsbvc	r5, r7, ip, ror #30
     e74:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     e78:	00000500 	andeq	r0, r0, r0, lsl #10
     e7c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e80:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     e84:	61685f78 	smcvs	34296	; 0x85f8
     e88:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
     e8c:	00682e61 	rsbeq	r2, r8, r1, ror #28
     e90:	73000005 	movwvc	r0, #5
     e94:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     e98:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     e9c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     ea0:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     ea4:	00682e74 	rsbeq	r2, r8, r4, ror lr
     ea8:	73000005 	movwvc	r0, #5
     eac:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     eb0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     eb4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     eb8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
     ebc:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
     ec0:	00050068 	andeq	r0, r5, r8, rrx
     ec4:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     ec8:	00682e6e 	rsbeq	r2, r8, lr, ror #28
     ecc:	75000006 	strvc	r0, [r0, #-6]
     ed0:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
     ed4:	0600682e 	streq	r6, [r0], -lr, lsr #16
     ed8:	05000000 	streq	r0, [r0, #-0]
     edc:	02050001 	andeq	r0, r5, #1
     ee0:	08000800 	stmdaeq	r0, {fp}
     ee4:	05011f03 	streq	r1, [r1, #-3843]	; 0xfffff0fd
     ee8:	20090303 	andcs	r0, r9, r3, lsl #6
     eec:	01061305 	tsteq	r6, r5, lsl #6
     ef0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     ef4:	01061805 	tsteq	r6, r5, lsl #16
     ef8:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     efc:	01061a05 	tsteq	r6, r5, lsl #20
     f00:	2f060305 	svccs	0x00060305
     f04:	01061805 	tsteq	r6, r5, lsl #16
     f08:	21060305 	tstcs	r6, r5, lsl #6
     f0c:	01061605 	tsteq	r6, r5, lsl #12
     f10:	21060305 	tstcs	r6, r5, lsl #6
     f14:	01061405 	tsteq	r6, r5, lsl #8
     f18:	2f060305 	svccs	0x00060305
     f1c:	01061905 	tsteq	r6, r5, lsl #18
     f20:	21060305 	tstcs	r6, r5, lsl #6
     f24:	01061c05 	tsteq	r6, r5, lsl #24
     f28:	21060305 	tstcs	r6, r5, lsl #6
     f2c:	01060705 	tsteq	r6, r5, lsl #14
     f30:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
     f34:	05052801 	streq	r2, [r5, #-2049]	; 0xfffff7ff
     f38:	207a0306 	rsbscs	r0, sl, r6, lsl #6
     f3c:	34060105 	strcc	r0, [r6], #-261	; 0xfffffefb
     f40:	01000502 	tsteq	r0, r2, lsl #10
     f44:	00010501 	andeq	r0, r1, r1, lsl #10
     f48:	08340205 	ldmdaeq	r4!, {r0, r2, r9}
     f4c:	3b030800 	blcc	c2f54 <_Min_Heap_Size+0xc2754>
     f50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     f54:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     f58:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     f5c:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     f60:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     f64:	01052005 	tsteq	r5, r5
     f68:	05661b03 	strbeq	r1, [r6, #-2819]!	; 0xfffff4fd
     f6c:	6b030605 	blvs	c2788 <_Min_Heap_Size+0xc1f88>
     f70:	662e012e 	strtvs	r0, [lr], -lr, lsr #2
     f74:	0114204a 	tsteq	r4, sl, asr #32
     f78:	204a4a20 	subcs	r4, sl, r0, lsr #20
     f7c:	06190517 			; <UNDEFINED> instruction: 0x06190517
     f80:	06050501 	streq	r0, [r5], -r1, lsl #10
     f84:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
     f88:	06050501 	streq	r0, [r5], -r1, lsl #10
     f8c:	1b05132f 	blne	145c50 <_Min_Heap_Size+0x145450>
     f90:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f94:	1f052f06 	svcne	0x00052f06
     f98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     f9c:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     fa0:	05593106 	ldrbeq	r3, [r9, #-262]	; 0xfffffefa
     fa4:	02410601 	subeq	r0, r1, #1048576	; 0x100000
     fa8:	01010003 	tsteq	r1, r3
     fac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     fb0:	00000002 	andeq	r0, r0, r2
     fb4:	00dc0300 	sbcseq	r0, ip, r0, lsl #6
     fb8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     fbc:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     fc0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     fc4:	01052005 	tsteq	r5, r5
     fc8:	053c1403 	ldreq	r1, [ip, #-1027]!	; 0xfffffbfd
     fcc:	72030605 	andvc	r0, r3, #5242880	; 0x500000
     fd0:	3c065e20 	stccc	14, cr5, [r6], {32}
     fd4:	01053106 	tsteq	r5, r6, lsl #2
     fd8:	07024106 	streq	r4, [r2, -r6, lsl #2]
     fdc:	4f010100 	svcmi	0x00010100
     fe0:	03000003 	movweq	r0, #3
     fe4:	00022000 	andeq	r2, r2, r0
     fe8:	fb010200 	blx	417f2 <_Min_Heap_Size+0x40ff2>
     fec:	01000d0e 	tsteq	r0, lr, lsl #26
     ff0:	00010101 	andeq	r0, r1, r1, lsl #2
     ff4:	00010000 	andeq	r0, r1, r0
     ff8:	2e2e0100 	sufcse	f0, f6, f0
     ffc:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    1000:	72532f65 	subsvc	r2, r3, #404	; 0x194
    1004:	3a630063 	bcc	18c1198 <_Min_Heap_Size+0x18c0998>
    1008:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    100c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1010:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1014:	6f72705c 	svcvs	0x0072705c
    1018:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    101c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1020:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1024:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1028:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    102c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1030:	61652d65 	cmnvs	r5, r5, ror #26
    1034:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1038:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    103c:	31323032 	teqcc	r2, r2, lsr r0
    1040:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1044:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1048:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    104c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1050:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1054:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1058:	616d5c65 	cmnvs	sp, r5, ror #24
    105c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    1060:	3a630065 	bcc	18c11fc <_Min_Heap_Size+0x18c09fc>
    1064:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    1068:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    106c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1070:	6f72705c 	svcvs	0x0072705c
    1074:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1078:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    107c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1080:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1084:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1088:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    108c:	61652d65 	cmnvs	r5, r5, ror #26
    1090:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1094:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    1098:	31323032 	teqcc	r2, r2, lsr r0
    109c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    10a0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    10a4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    10a8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    10ac:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    10b0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    10b4:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    10b8:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    10bc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    10c0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    10c4:	534d432f 	movtpl	r4, #54063	; 0xd32f
    10c8:	442f5349 	strtmi	r5, [pc], #-841	; 10d0 <_Min_Heap_Size+0x8d0>
    10cc:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    10d0:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    10d4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    10d8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    10dc:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    10e0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    10e4:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    10e8:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    10ec:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    10f0:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    10f4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    10f8:	5f787834 	svcpl	0x00787834
    10fc:	5f4c4148 	svcpl	0x004c4148
    1100:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1104:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    1108:	6300636e 	movwvs	r6, #878	; 0x36e
    110c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1110:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1114:	6f646978 	svcvs	0x00646978
    1118:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    111c:	6172676f 	cmnvs	r2, pc, ror #14
    1120:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1124:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1128:	63675c63 	cmnvs	r7, #25344	; 0x6300
    112c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1130:	6f6e2d6d 	svcvs	0x006e2d6d
    1134:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1138:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    113c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1140:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1144:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1148:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    114c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1150:	61652d65 	cmnvs	r5, r5, ror #26
    1154:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1158:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    115c:	00006564 	andeq	r6, r0, r4, ror #10
    1160:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1164:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1168:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xfffff088
    116c:	0100632e 	tsteq	r0, lr, lsr #6
    1170:	645f0000 	ldrbvs	r0, [pc], #-0	; 1178 <_Min_Heap_Size+0x978>
    1174:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1178:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1180 <_Min_Heap_Size+0x980>
    117c:	73657079 	cmnvc	r5, #121	; 0x79
    1180:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1184:	735f0000 	cmpvc	pc, #0
    1188:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    118c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1190:	73000003 	movwvc	r0, #3
    1194:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1198:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    119c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    11a0:	00000400 	andeq	r0, r0, r0, lsl #8
    11a4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    11a8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    11ac:	61685f78 	smcvs	34296	; 0x85f8
    11b0:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    11b4:	00682e66 	rsbeq	r2, r8, r6, ror #28
    11b8:	73000005 	movwvc	r0, #5
    11bc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    11c0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    11c4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    11c8:	616d645f 	cmnvs	sp, pc, asr r4
    11cc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    11d0:	74730000 	ldrbtvc	r0, [r3], #-0
    11d4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    11d8:	5f787834 	svcpl	0x00787834
    11dc:	5f6c6168 	svcpl	0x006c6168
    11e0:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    11e4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    11e8:	74730000 	ldrbtvc	r0, [r3], #-0
    11ec:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    11f0:	5f787834 	svcpl	0x00787834
    11f4:	2e6c6168 	powcsez	f6, f4, #0.0
    11f8:	00050068 	andeq	r0, r5, r8, rrx
    11fc:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1200:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1204:	00000600 	andeq	r0, r0, r0, lsl #12
    1208:	00010500 	andeq	r0, r1, r0, lsl #10
    120c:	08b40205 	ldmeq	r4!, {r0, r2, r9}
    1210:	c6030800 	strgt	r0, [r3], -r0, lsl #16
    1214:	03050100 	movweq	r0, #20736	; 0x5100
    1218:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    121c:	02004d01 	andeq	r4, r0, #1, 26	; 0x40
    1220:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1224:	04020009 	streq	r0, [r2], #-9
    1228:	05021001 	streq	r1, [r2, #-1]
    122c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1230:	02050001 	andeq	r0, r5, #1
    1234:	00000000 	andeq	r0, r0, r0
    1238:	0100d503 	tsteq	r0, r3, lsl #10
    123c:	00220305 	eoreq	r0, r2, r5, lsl #6
    1240:	4c010402 	cfstrsmi	mvf0, [r1], {2}
    1244:	01040200 	mrseq	r0, R12_usr
    1248:	00090516 	andeq	r0, r9, r6, lsl r5
    124c:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
    1250:	01000502 	tsteq	r0, r2, lsl #10
    1254:	00010501 	andeq	r0, r1, r1, lsl #10
    1258:	08c80205 	stmiaeq	r8, {r0, r2, r9}^
    125c:	e4030800 	str	r0, [r3], #-2048	; 0xfffff800
    1260:	03050100 	movweq	r0, #20736	; 0x5100
    1264:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    1268:	02004c01 	andeq	r4, r0, #256	; 0x100
    126c:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
    1270:	04020009 	streq	r0, [r2], #-9
    1274:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
    1278:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    127c:	02050001 	andeq	r0, r5, #1
    1280:	080008dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp}
    1284:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
    1288:	00220305 	eoreq	r0, r2, r5, lsl #6
    128c:	4c010402 	cfstrsmi	mvf0, [r1], {2}
    1290:	01040200 	mrseq	r0, R12_usr
    1294:	00090516 	andeq	r0, r9, r6, lsl r5
    1298:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
    129c:	01000502 	tsteq	r0, r2, lsl #10
    12a0:	00010501 	andeq	r0, r1, r1, lsl #10
    12a4:	08f00205 	ldmeq	r0!, {r0, r2, r9}^
    12a8:	82030800 	andhi	r0, r3, #0, 16
    12ac:	03050101 	movweq	r0, #20737	; 0x5101
    12b0:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    12b4:	02004c01 	andeq	r4, r0, #256	; 0x100
    12b8:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
    12bc:	04020009 	streq	r0, [r2], #-9
    12c0:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
    12c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    12c8:	02050001 	andeq	r0, r5, #1
    12cc:	08000904 	stmdaeq	r0, {r2, r8, fp}
    12d0:	01019103 	tsteq	r1, r3, lsl #2
    12d4:	00010219 	andeq	r0, r1, r9, lsl r2
    12d8:	01050101 	tsteq	r5, r1, lsl #2
    12dc:	06020500 	streq	r0, [r2], -r0, lsl #10
    12e0:	03080009 	movweq	r0, #32777	; 0x8009
    12e4:	1901019e 	stmdbne	r1, {r1, r2, r3, r4, r7, r8}
    12e8:	01000102 	tsteq	r0, r2, lsl #2
    12ec:	00010501 	andeq	r0, r1, r1, lsl #10
    12f0:	09080205 	stmdbeq	r8, {r0, r2, r9}
    12f4:	ab030800 	blge	c32fc <_Min_Heap_Size+0xc2afc>
    12f8:	02190101 	andseq	r0, r9, #1073741824	; 0x40000000
    12fc:	01010001 	tsteq	r1, r1
    1300:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1304:	00090a02 	andeq	r0, r9, r2, lsl #20
    1308:	01b80308 			; <UNDEFINED> instruction: 0x01b80308
    130c:	24030501 	strcs	r0, [r3], #-1281	; 0xfffffaff
    1310:	32060105 	andcc	r0, r6, #1073741825	; 0x40000001
    1314:	01000102 	tsteq	r0, r2, lsl #2
    1318:	00010501 	andeq	r0, r1, r1, lsl #10
    131c:	09140205 	ldmdbeq	r4, {r0, r2, r9}
    1320:	cd030800 	stcgt	8, cr0, [r3, #-0]
    1324:	03050101 	movweq	r0, #20737	; 0x5101
    1328:	06010524 	streq	r0, [r1], -r4, lsr #10
    132c:	00040240 	andeq	r0, r4, r0, asr #4
    1330:	01720101 	cmneq	r2, r1, lsl #2
    1334:	00030000 	andeq	r0, r3, r0
    1338:	00000149 	andeq	r0, r0, r9, asr #2
    133c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1340:	0101000d 	tsteq	r1, sp
    1344:	00000101 	andeq	r0, r0, r1, lsl #2
    1348:	00000100 	andeq	r0, r0, r0, lsl #2
    134c:	2f2e2e01 	svccs	0x002e2e01
    1350:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1354:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1358:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    135c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1360:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1364:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1368:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    136c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1370:	5f6d7261 	svcpl	0x006d7261
    1374:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1378:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    137c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1380:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1384:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1388:	30312d69 	eorscc	r2, r1, r9, ror #26
    138c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1390:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1394:	615c3031 	cmpvs	ip, r1, lsr r0
    1398:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    139c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    13a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    13a4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    13a8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    13ac:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    13b0:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    13b4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    13b8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    13bc:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    13c0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    13c4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    13c8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    13cc:	5f6d7261 	svcpl	0x006d7261
    13d0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    13d4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    13d8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    13dc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    13e0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    13e4:	30312d69 	eorscc	r2, r1, r9, ror #26
    13e8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    13ec:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    13f0:	615c3031 	cmpvs	ip, r1, lsr r0
    13f4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    13f8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    13fc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1400:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1404:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1408:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    140c:	2f2e2e00 	svccs	0x002e2e00
    1410:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1414:	2f737265 	svccs	0x00737265
    1418:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    141c:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    1420:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    1424:	2f54532f 	svccs	0x0054532f
    1428:	334d5453 	movtcc	r5, #54355	; 0xd453
    142c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1430:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    1434:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1438:	73000065 	movwvc	r0, #101	; 0x65
    143c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1440:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1444:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1448:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
    144c:	0100632e 	tsteq	r0, lr, lsr #6
    1450:	645f0000 	ldrbvs	r0, [pc], #-0	; 1458 <_Min_Heap_Size+0xc58>
    1454:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1458:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1460 <_Min_Heap_Size+0xc60>
    145c:	73657079 	cmnvc	r5, #121	; 0x79
    1460:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1464:	735f0000 	cmpvc	pc, #0
    1468:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    146c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1470:	73000003 	movwvc	r0, #3
    1474:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1478:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    147c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    1480:	00000400 	andeq	r0, r0, r0, lsl #8
    1484:	00010500 	andeq	r0, r1, r0, lsl #10
    1488:	09240205 	stmdbeq	r4!, {r0, r2, r9}
    148c:	3f030800 	svccc	0x00030800
    1490:	26030501 	strcs	r0, [r3], -r1, lsl #10
    1494:	4a582e01 	bmi	160cca0 <_Min_Heap_Size+0x160c4a0>
    1498:	20011320 	andcs	r1, r1, r0, lsr #6
    149c:	05204a4a 	streq	r4, [r0, #-2634]!	; 0xfffff5b6
    14a0:	02190601 	andseq	r0, r9, #1048576	; 0x100000
    14a4:	01010005 	tsteq	r1, r5
    14a8:	000044f4 	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    14ac:	02510003 	subseq	r0, r1, #3
    14b0:	01020000 	mrseq	r0, (UNDEF: 2)
    14b4:	000d0efb 	strdeq	r0, [sp], -fp
    14b8:	01010101 	tsteq	r1, r1, lsl #2
    14bc:	01000000 	mrseq	r0, (UNDEF: 0)
    14c0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    14c4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    14c8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    14cc:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    14d0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    14d4:	5f787834 	svcpl	0x00787834
    14d8:	5f4c4148 	svcpl	0x004c4148
    14dc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    14e0:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    14e4:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    14e8:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    14ec:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    14f0:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    14f4:	2f534953 	svccs	0x00534953
    14f8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    14fc:	00656475 	rsbeq	r6, r5, r5, ror r4
    1500:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1504:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1508:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    150c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1510:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1514:	615c6d61 	cmpvs	ip, r1, ror #26
    1518:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    151c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1520:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1524:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1528:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    152c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1530:	2e30312d 	rsfcssp	f3, f0, #5.0
    1534:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1538:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    153c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1540:	6f6e2d6d 	svcvs	0x006e2d6d
    1544:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1548:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    154c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1550:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1554:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1558:	00656e69 	rsbeq	r6, r5, r9, ror #28
    155c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1560:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1564:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1568:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    156c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1570:	615c6d61 	cmpvs	ip, r1, ror #26
    1574:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1578:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    157c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1580:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1584:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1588:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    158c:	2e30312d 	rsfcssp	f3, f0, #5.0
    1590:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1594:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1598:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    159c:	6f6e2d6d 	svcvs	0x006e2d6d
    15a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    15a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    15a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    15ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    15b0:	00737973 	rsbseq	r7, r3, r3, ror r9
    15b4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 15bc <_Min_Heap_Size+0xdbc>
    15b8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    15bc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    15c0:	5349534d 	movtpl	r5, #37709	; 0x934d
    15c4:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    15c8:	2f656369 	svccs	0x00656369
    15cc:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    15d0:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    15d4:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    15d8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    15dc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    15e0:	2f2e2e00 	svccs	0x002e2e00
    15e4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    15e8:	2f737265 	svccs	0x00737265
    15ec:	334d5453 	movtcc	r5, #54355	; 0xd453
    15f0:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    15f4:	41485f78 	hvcmi	34296	; 0x85f8
    15f8:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    15fc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1600:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1604:	2f2e2e00 	svccs	0x002e2e00
    1608:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    160c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1610:	74730000 	ldrbtvc	r0, [r3], #-0
    1614:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1618:	5f787834 	svcpl	0x00787834
    161c:	5f6c6168 	svcpl	0x006c6168
    1620:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1624:	0100632e 	tsteq	r0, lr, lsr #6
    1628:	6d630000 	stclvs	0, cr0, [r3, #-0]
    162c:	5f736973 	svcpl	0x00736973
    1630:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    1634:	00020068 	andeq	r0, r2, r8, rrx
    1638:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    163c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1640:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1644:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1648:	00030068 	andeq	r0, r3, r8, rrx
    164c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1650:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    1654:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1658:	74730000 	ldrbtvc	r0, [r3], #-0
    165c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1660:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    1664:	00682e78 	rsbeq	r2, r8, r8, ror lr
    1668:	73000005 	movwvc	r0, #5
    166c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1670:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1674:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1678:	74730000 	ldrbtvc	r0, [r3], #-0
    167c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1680:	5f787834 	svcpl	0x00787834
    1684:	5f6c6168 	svcpl	0x006c6168
    1688:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    168c:	00060068 	andeq	r0, r6, r8, rrx
    1690:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1694:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1698:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    169c:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 16a4 <_Min_Heap_Size+0xea4>
    16a0:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
    16a4:	00000600 	andeq	r0, r0, r0, lsl #12
    16a8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16ac:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    16b0:	61685f78 	smcvs	34296	; 0x85f8
    16b4:	61755f6c 	cmnvs	r5, ip, ror #30
    16b8:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    16bc:	00000600 	andeq	r0, r0, r0, lsl #12
    16c0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16c4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    16c8:	61685f78 	smcvs	34296	; 0x85f8
    16cc:	6f635f6c 	svcvs	0x00635f6c
    16d0:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    16d4:	00000700 	andeq	r0, r0, r0, lsl #14
    16d8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16dc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    16e0:	61685f78 	smcvs	34296	; 0x85f8
    16e4:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    16e8:	00682e63 	rsbeq	r2, r8, r3, ror #28
    16ec:	73000006 	movwvc	r0, #6
    16f0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    16f4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    16f8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    16fc:	0600682e 	streq	r6, [r0], -lr, lsr #16
    1700:	05000000 	streq	r0, [r0, #-0]
    1704:	02050001 	andeq	r0, r5, #1
    1708:	00000000 	andeq	r0, r0, r0
    170c:	0119f903 	tsteq	r9, r3, lsl #18	; <UNPREDICTABLE>
    1710:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1714:	00140104 	andseq	r0, r4, r4, lsl #2
    1718:	01010402 	tsteq	r1, r2, lsl #8
    171c:	01040200 	mrseq	r0, R12_usr
    1720:	04020001 	streq	r0, [r2], #-1
    1724:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1728:	02001f05 	andeq	r1, r0, #5, 30
    172c:	e0030104 	and	r0, r3, r4, lsl #2
    1730:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    1734:	01040200 	mrseq	r0, R12_usr
    1738:	00040514 	andeq	r0, r4, r4, lsl r5
    173c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1740:	01040200 	mrseq	r0, R12_usr
    1744:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1748:	2f060104 	svccs	0x00060104
    174c:	01040200 	mrseq	r0, R12_usr
    1750:	01040106 	tsteq	r4, r6, lsl #2
    1754:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1758:	9b030104 	blls	c1b70 <_Min_Heap_Size+0xc1370>
    175c:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    1760:	2e060104 	adfcss	f0, f6, f4
    1764:	1f050204 	svcne	0x00050204
    1768:	01040200 	mrseq	r0, R12_usr
    176c:	016a9303 	cmneq	sl, r3, lsl #6
    1770:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1774:	00140104 	andseq	r0, r4, r4, lsl #2
    1778:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    177c:	01040200 	mrseq	r0, R12_usr
    1780:	02002006 	andeq	r2, r0, #6
    1784:	2f060104 	svccs	0x00060104
    1788:	01040200 	mrseq	r0, R12_usr
    178c:	01040106 	tsteq	r4, r6, lsl #2
    1790:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1794:	e8030104 	stmda	r3, {r2, r8}
    1798:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    179c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    17a0:	02040200 	andeq	r0, r4, #0, 4
    17a4:	00110515 	andseq	r0, r1, r5, lsl r5
    17a8:	06020402 	streq	r0, [r2], -r2, lsl #8
    17ac:	04020001 	streq	r0, [r2], #-1
    17b0:	01052002 	tsteq	r5, r2
    17b4:	02040200 	andeq	r0, r4, #0, 4
    17b8:	0001022f 	andeq	r0, r1, pc, lsr #4
    17bc:	01050101 	tsteq	r5, r1, lsl #2
    17c0:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    17c4:	03080009 	movweq	r0, #32777	; 0x8009
    17c8:	05011a87 	streq	r1, [r1, #-2695]	; 0xfffff579
    17cc:	04020003 	streq	r0, [r2], #-3
    17d0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    17d4:	00010104 	andeq	r0, r1, r4, lsl #2
    17d8:	01010402 	tsteq	r1, r2, lsl #8
    17dc:	01040200 	mrseq	r0, R12_usr
    17e0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    17e4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    17e8:	69d20301 	ldmibvs	r2, {r0, r8, r9}^
    17ec:	00050520 	andeq	r0, r5, r0, lsr #10
    17f0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    17f4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    17f8:	00140104 	andseq	r0, r4, r4, lsl #2
    17fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1800:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1804:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1808:	06010402 	streq	r0, [r1], -r2, lsl #8
    180c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1810:	04020003 	streq	r0, [r2], #-3
    1814:	16a90301 	strtne	r0, [r9], r1, lsl #6
    1818:	04020001 	streq	r0, [r2], #-1
    181c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1820:	001f0502 	andseq	r0, pc, r2, lsl #10
    1824:	03010402 	movweq	r0, #5122	; 0x1402
    1828:	05016a85 	streq	r6, [r1, #-2693]	; 0xfffff57b
    182c:	04020004 	streq	r0, [r2], #-4
    1830:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1834:	00140104 	andseq	r0, r4, r4, lsl #2
    1838:	06010402 	streq	r0, [r1], -r2, lsl #8
    183c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1840:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1844:	06010402 	streq	r0, [r1], -r2, lsl #8
    1848:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    184c:	04020003 	streq	r0, [r2], #-3
    1850:	15f60301 	ldrbne	r0, [r6, #769]!	; 0x301
    1854:	04020001 	streq	r0, [r2], #-1
    1858:	02002e01 	andeq	r2, r0, #1, 28
    185c:	01060104 	tsteq	r6, r4, lsl #2
    1860:	01040200 	mrseq	r0, R12_usr
    1864:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1868:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    186c:	00010104 	andeq	r0, r1, r4, lsl #2
    1870:	01010402 	tsteq	r1, r2, lsl #8
    1874:	1f050204 	svcne	0x00050204
    1878:	01040200 	mrseq	r0, R12_usr
    187c:	2069d103 	rsbcs	sp, r9, r3, lsl #2
    1880:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1884:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1888:	04020004 	streq	r0, [r2], #-4
    188c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1890:	2e060104 	adfcss	f0, f6, f4
    1894:	01040200 	mrseq	r0, R12_usr
    1898:	02002f06 	andeq	r2, r0, #6, 30
    189c:	01060104 	tsteq	r6, r4, lsl #2
    18a0:	03050104 	movweq	r0, #20740	; 0x5104
    18a4:	01040200 	mrseq	r0, R12_usr
    18a8:	0116aa03 	tsteq	r6, r3, lsl #20
    18ac:	01040200 	mrseq	r0, R12_usr
    18b0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    18b4:	02001f05 	andeq	r1, r0, #5, 30
    18b8:	84030104 	strhi	r0, [r3], #-260	; 0xfffffefc
    18bc:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    18c0:	01040200 	mrseq	r0, R12_usr
    18c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    18c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    18cc:	20060104 	andcs	r0, r6, r4, lsl #2
    18d0:	01040200 	mrseq	r0, R12_usr
    18d4:	02002f06 	andeq	r2, r0, #6, 30
    18d8:	01060104 	tsteq	r6, r4, lsl #2
    18dc:	03050104 	movweq	r0, #20740	; 0x5104
    18e0:	01040200 	mrseq	r0, R12_usr
    18e4:	0115f703 	tsteq	r5, r3, lsl #14	; <UNPREDICTABLE>
    18e8:	02040200 	andeq	r0, r4, #0, 4
    18ec:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    18f0:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    18f4:	0402000c 	streq	r0, [r2], #-12
    18f8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    18fc:	04020006 	streq	r0, [r2], #-6
    1900:	05052002 	streq	r2, [r5, #-2]
    1904:	02040200 	andeq	r0, r4, #0, 4
    1908:	03053006 	movweq	r3, #20486	; 0x5006
    190c:	02040200 	andeq	r0, r4, #0, 4
    1910:	00120516 	andseq	r0, r2, r6, lsl r5
    1914:	06020402 	streq	r0, [r2], -r2, lsl #8
    1918:	00030501 	andeq	r0, r3, r1, lsl #10
    191c:	06020402 	streq	r0, [r2], -r2, lsl #8
    1920:	0018053d 	andseq	r0, r8, sp, lsr r5
    1924:	06020402 	streq	r0, [r2], -r2, lsl #8
    1928:	00010501 	andeq	r0, r1, r1, lsl #10
    192c:	2f020402 	svccs	0x00020402
    1930:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1934:	03060104 	movweq	r0, #24836	; 0x6104
    1938:	0200207a 	andeq	r2, r0, #122	; 0x7a
    193c:	00010104 	andeq	r0, r1, r4, lsl #2
    1940:	01010402 	tsteq	r1, r2, lsl #8
    1944:	01040200 	mrseq	r0, R12_usr
    1948:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    194c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1950:	69cc0301 	stmibvs	ip, {r0, r8, r9}^
    1954:	00050520 	andeq	r0, r5, r0, lsr #10
    1958:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    195c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1960:	00140104 	andseq	r0, r4, r4, lsl #2
    1964:	06010402 	streq	r0, [r1], -r2, lsl #8
    1968:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    196c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1970:	06010402 	streq	r0, [r1], -r2, lsl #8
    1974:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1978:	04020005 	streq	r0, [r2], #-5
    197c:	16af0301 	strtne	r0, [pc], r1, lsl #6
    1980:	04020001 	streq	r0, [r2], #-1
    1984:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1988:	001f0502 	andseq	r0, pc, r2, lsl #10
    198c:	03010402 	movweq	r0, #5122	; 0x1402
    1990:	050169ff 	streq	r6, [r1, #-2559]	; 0xfffff601
    1994:	04020004 	streq	r0, [r2], #-4
    1998:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    199c:	00140104 	andseq	r0, r4, r4, lsl #2
    19a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    19a4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    19a8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    19ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    19b0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    19b4:	04020005 	streq	r0, [r2], #-5
    19b8:	15fc0301 	ldrbne	r0, [ip, #769]!	; 0x301
    19bc:	00030201 	andeq	r0, r3, r1, lsl #4
    19c0:	01050101 	tsteq	r5, r1, lsl #2
    19c4:	b8020500 	stmdalt	r2, {r8, sl}
    19c8:	03080009 	movweq	r0, #32777	; 0x8009
    19cc:	05011bc9 	streq	r1, [r1, #-3017]	; 0xfffff437
    19d0:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    19d4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    19d8:	0c053c06 	stceq	12, cr3, [r5], {6}
    19dc:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    19e0:	05052201 	streq	r2, [r5, #-513]	; 0xfffffdff
    19e4:	20670306 	rsbcs	r0, r7, r6, lsl #6
    19e8:	01061505 	tsteq	r6, r5, lsl #10
    19ec:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    19f0:	05440607 	strbeq	r0, [r4, #-1543]	; 0xfffff9f9
    19f4:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    19f8:	27052039 	smladxcs	r5, r9, r0, r2
    19fc:	200c052e 	andcs	r0, ip, lr, lsr #10
    1a00:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    1a04:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1a08:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1a0c:	08052e09 	stmdaeq	r5, {r0, r3, r9, sl, fp, sp}
    1a10:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1a14:	05055b31 	streq	r5, [r5, #-2865]	; 0xfffff4cf
    1a18:	060c055a 			; <UNDEFINED> instruction: 0x060c055a
    1a1c:	47052001 	strmi	r2, [r5, -r1]
    1a20:	01040200 	mrseq	r0, R12_usr
    1a24:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    1a28:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    1a2c:	07052001 	streq	r2, [r5, -r1]
    1a30:	0b053006 	bleq	14da50 <_Min_Heap_Size+0x14d250>
    1a34:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1a38:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    1a3c:	0c050106 	stfeqs	f0, [r5], {6}
    1a40:	201d0520 	andscs	r0, sp, r0, lsr #10
    1a44:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    1a48:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    1a4c:	02010619 	andeq	r0, r1, #26214400	; 0x1900000
    1a50:	01010004 	tsteq	r1, r4
    1a54:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1a58:	000a1802 	andeq	r1, sl, r2, lsl #16
    1a5c:	1cef0308 	stclne	3, cr0, [pc], #32	; 1a84 <_Min_Heap_Size+0x1284>
    1a60:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1a64:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    1a68:	02004b15 	andeq	r4, r0, #21504	; 0x5400
    1a6c:	2e060104 	adfcss	f0, f6, f4
    1a70:	02003d06 	andeq	r3, r0, #384	; 0x180
    1a74:	2e060104 	adfcss	f0, f6, f4
    1a78:	02040200 	andeq	r0, r4, #0, 4
    1a7c:	003d063c 	eorseq	r0, sp, ip, lsr r6
    1a80:	06020402 	streq	r0, [r2], -r2, lsl #8
    1a84:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    1a88:	5d062003 	stcpl	0, cr2, [r6, #-12]
    1a8c:	05740903 	ldrbeq	r0, [r4, #-2307]!	; 0xfffff6fd
    1a90:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    1a94:	2d05203a 	stccs	0, cr2, [r5, #-232]	; 0xffffff18
    1a98:	204f0520 	subcs	r0, pc, r0, lsr #10
    1a9c:	05204205 	streq	r4, [r0, #-517]!	; 0xfffffdfb
    1aa0:	0a052062 	beq	149c30 <_Min_Heap_Size+0x149430>
    1aa4:	06030520 	streq	r0, [r3], -r0, lsr #10
    1aa8:	20068821 	andcs	r8, r6, r1, lsr #16
    1aac:	03060505 	movweq	r0, #25861	; 0x6505
    1ab0:	0f056609 	svceq	0x00056609
    1ab4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1ab8:	00250520 	eoreq	r0, r5, r0, lsr #10
    1abc:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1ac0:	03060705 	movweq	r0, #26373	; 0x6705
    1ac4:	0e054a0c 	vmlaeq.f32	s8, s10, s24
    1ac8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1acc:	04020003 	streq	r0, [r2], #-3
    1ad0:	20530301 	subscs	r0, r3, r1, lsl #6
    1ad4:	01040200 	mrseq	r0, R12_usr
    1ad8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1adc:	02003d02 	andeq	r3, r0, #2, 26	; 0x80
    1ae0:	05670304 	strbeq	r0, [r7, #-772]!	; 0xfffffcfc
    1ae4:	21030607 	tstcs	r3, r7, lsl #12
    1ae8:	060e0566 	streq	r0, [lr], -r6, ror #10
    1aec:	06030501 	streq	r0, [r3], -r1, lsl #10
    1af0:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    1af4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1af8:	05052006 	streq	r2, [r5, #-6]
    1afc:	1c054206 	sfmne	f4, 4, [r5], {6}
    1b00:	05ac0106 	streq	r0, [ip, #262]!	; 0x106
    1b04:	059e080a 	ldreq	r0, [lr, #2058]	; 0x80a
    1b08:	1a05201c 	bne	149b80 <_Min_Heap_Size+0x149380>
    1b0c:	22010520 	andcs	r0, r1, #32, 10	; 0x8000000
    1b10:	03060505 	movweq	r0, #25861	; 0x6505
    1b14:	1c05207a 	stcne	0, cr2, [r5], {122}	; 0x7a
    1b18:	05ba0106 	ldreq	r0, [sl, #262]!	; 0x106
    1b1c:	0590080a 	ldreq	r0, [r0, #2058]	; 0x80a
    1b20:	1a05201c 	bne	149b98 <_Min_Heap_Size+0x149398>
    1b24:	000a0220 	andeq	r0, sl, r0, lsr #4
    1b28:	01050101 	tsteq	r5, r1, lsl #2
    1b2c:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
    1b30:	0308000b 	movweq	r0, #32779	; 0x800b
    1b34:	060118f2 			; <UNDEFINED> instruction: 0x060118f2
    1b38:	06030501 	streq	r0, [r3], -r1, lsl #10
    1b3c:	01090592 			; <UNDEFINED> instruction: 0x01090592
    1b40:	01060b05 	tsteq	r6, r5, lsl #22
    1b44:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
    1b48:	05057409 	streq	r7, [r5, #-1033]	; 0xfffffbf7
    1b4c:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    1b50:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1b54:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    1b58:	1b050106 	blne	141f78 <_Min_Heap_Size+0x141778>
    1b5c:	2e0a052e 	cfsh32cs	mvfx0, mvfx10, #30
    1b60:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    1b64:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1b68:	05420607 	strbeq	r0, [r2, #-1543]	; 0xfffff9f9
    1b6c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b70:	40052e0a 	andmi	r2, r5, sl, lsl #28
    1b74:	01040200 	mrseq	r0, R12_usr
    1b78:	005b053c 	subseq	r0, fp, ip, lsr r5
    1b7c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1b80:	30060905 	andcc	r0, r6, r5, lsl #18
    1b84:	01060d05 	tsteq	r6, r5, lsl #26
    1b88:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1b8c:	013f060b 	teqeq	pc, fp, lsl #12
    1b90:	202e2e2e 	eorcs	r2, lr, lr, lsr #28
    1b94:	1c053e17 	stcne	14, cr3, [r5], {23}
    1b98:	0b050106 	bleq	141fb8 <_Min_Heap_Size+0x1417b8>
    1b9c:	2e013106 	adfcss	f3, f1, f6
    1ba0:	06120514 			; <UNDEFINED> instruction: 0x06120514
    1ba4:	330a0501 	movwcc	r0, #42241	; 0xa501
    1ba8:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    1bac:	3c660310 	stclcc	3, cr0, [r6], #-64	; 0xffffffc0
    1bb0:	01000402 	tsteq	r0, r2, lsl #8
    1bb4:	00010501 	andeq	r0, r1, r1, lsl #10
    1bb8:	00000205 	andeq	r0, r0, r5, lsl #4
    1bbc:	cb030000 	blgt	c1bc4 <_Min_Heap_Size+0xc13c4>
    1bc0:	03050105 	movweq	r0, #20741	; 0x5105
    1bc4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    1bc8:	00010216 	andeq	r0, r1, r6, lsl r2
    1bcc:	01050101 	tsteq	r5, r1, lsl #2
    1bd0:	18020500 	stmdane	r2, {r8, sl}
    1bd4:	0308000c 	movweq	r0, #32780	; 0x800c
    1bd8:	050102e5 	streq	r0, [r1, #-741]	; 0xfffffd1b
    1bdc:	06051403 	streq	r1, [r5], -r3, lsl #8
    1be0:	01050106 	tsteq	r5, r6, lsl #2
    1be4:	0603053a 			; <UNDEFINED> instruction: 0x0603053a
    1be8:	06120536 			; <UNDEFINED> instruction: 0x06120536
    1bec:	20060501 	andcs	r0, r6, r1, lsl #10
    1bf0:	33060505 	movwcc	r0, #25861	; 0x6505
    1bf4:	01040200 	mrseq	r0, R12_usr
    1bf8:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1bfc:	004a0204 	subeq	r0, sl, r4, lsl #4
    1c00:	4a030402 	bmi	c2c10 <_Min_Heap_Size+0xc2410>
    1c04:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1c08:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1c0c:	2f063c04 	svccs	0x00063c04
    1c10:	01040200 	mrseq	r0, R12_usr
    1c14:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1c18:	003c0204 	eorseq	r0, ip, r4, lsl #4
    1c1c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    1c20:	42060305 	andmi	r0, r6, #335544320	; 0x14000000
    1c24:	01040200 	mrseq	r0, R12_usr
    1c28:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    1c2c:	01040200 	mrseq	r0, R12_usr
    1c30:	3e062e06 	cdpcc	14, 0, cr2, cr6, cr6, {0}
    1c34:	01060c05 	tsteq	r6, r5, lsl #24
    1c38:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    1c3c:	15030603 	strne	r0, [r3, #-1539]	; 0xfffff9fd
    1c40:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1c44:	06030501 	streq	r0, [r3], -r1, lsl #10
    1c48:	59415b3f 	stmdbpl	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}^
    1c4c:	14055b5b 	strne	r5, [r5], #-2907	; 0xfffff4a5
    1c50:	03050106 	movweq	r0, #20742	; 0x5106
    1c54:	11052f06 	tstne	r5, r6, lsl #30
    1c58:	03050106 	movweq	r0, #20742	; 0x5106
    1c5c:	12053d06 	andne	r3, r5, #384	; 0x180
    1c60:	03050106 	movweq	r0, #20742	; 0x5106
    1c64:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1c68:	03050106 	movweq	r0, #20742	; 0x5106
    1c6c:	01052206 	tsteq	r5, r6, lsl #4
    1c70:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    1c74:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1c78:	06204a03 	strteq	r4, [r0], -r3, lsl #20
    1c7c:	0402006a 	streq	r0, [r2], #-106	; 0xffffff96
    1c80:	004a0601 	subeq	r0, sl, r1, lsl #12
    1c84:	4a020402 	bmi	82c94 <_Min_Heap_Size+0x82494>
    1c88:	03040200 	movweq	r0, #16896	; 0x4200
    1c8c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1c90:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1c94:	004a0504 	subeq	r0, sl, r4, lsl #10
    1c98:	4a060402 	bmi	182ca8 <_Min_Heap_Size+0x1824a8>
    1c9c:	06040200 	streq	r0, [r4], -r0, lsl #4
    1ca0:	0003053c 	andeq	r0, r3, ip, lsr r5
    1ca4:	3e020402 	cdpcc	4, 0, cr0, cr2, cr2, {0}
    1ca8:	02040200 	andeq	r0, r4, #0, 4
    1cac:	06050567 	streq	r0, [r5], -r7, ror #10
    1cb0:	0611056b 	ldreq	r0, [r1], -fp, ror #10
    1cb4:	06050501 	streq	r0, [r5], -r1, lsl #10
    1cb8:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    1cbc:	5c03060c 	stcpl	6, cr0, [r3], {12}
    1cc0:	0301054a 	movweq	r0, #5450	; 0x154a
    1cc4:	022000c0 	eoreq	r0, r0, #192	; 0xc0
    1cc8:	01010006 	tsteq	r1, r6
    1ccc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1cd0:	00000002 	andeq	r0, r0, r2
    1cd4:	03b30300 			; <UNDEFINED> instruction: 0x03b30300
    1cd8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1cdc:	01060605 	tsteq	r6, r5, lsl #12
    1ce0:	052c0105 	streq	r0, [ip, #-261]!	; 0xfffffefb
    1ce4:	00360603 	eorseq	r0, r6, r3, lsl #12
    1ce8:	06010402 	streq	r0, [r1], -r2, lsl #8
    1cec:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1cf0:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1cf4:	004a0304 	subeq	r0, sl, r4, lsl #6
    1cf8:	4a040402 	bmi	102d08 <_Min_Heap_Size+0x102508>
    1cfc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1d00:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1d04:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1d08:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    1d0c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1d10:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    1d14:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1d18:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    1d1c:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1d20:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    1d24:	03060305 	movweq	r0, #25349	; 0x6305
    1d28:	11052e15 	tstne	r5, r5, lsl lr
    1d2c:	03050106 	movweq	r0, #20742	; 0x5106
    1d30:	415b3f06 	cmpmi	fp, r6, lsl #30
    1d34:	5b5b5b59 	blpl	16d8aa0 <_Min_Heap_Size+0x16d82a0>
    1d38:	01061405 	tsteq	r6, r5, lsl #8
    1d3c:	2f060305 	svccs	0x00060305
    1d40:	01061105 	tsteq	r6, r5, lsl #2
    1d44:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1d48:	01061205 	tsteq	r6, r5, lsl #4
    1d4c:	2f060305 	svccs	0x00060305
    1d50:	01061605 	tsteq	r6, r5, lsl #12
    1d54:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    1d58:	13060105 	movwne	r0, #24837	; 0x6105
    1d5c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1d60:	4d030204 	sfmmi	f0, 4, [r3, #-16]
    1d64:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1d68:	05056702 	streq	r6, [r5, #-1794]	; 0xfffff8fe
    1d6c:	11056b06 	tstne	r5, r6, lsl #22
    1d70:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1d74:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    1d78:	03060c05 	movweq	r0, #27653	; 0x6c05
    1d7c:	01054a67 	tsteq	r5, r7, ror #20
    1d80:	02203803 	eoreq	r3, r0, #196608	; 0x30000
    1d84:	01010006 	tsteq	r1, r6
    1d88:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1d8c:	00000002 	andeq	r0, r0, r2
    1d90:	03fd0300 	mvnseq	r0, #0, 6
    1d94:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1d98:	01060605 	tsteq	r6, r5, lsl #12
    1d9c:	052c0105 	streq	r0, [ip, #-261]!	; 0xfffffefb
    1da0:	00440603 	subeq	r0, r4, r3, lsl #12
    1da4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1da8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1dac:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1db0:	004a0304 	subeq	r0, sl, r4, lsl #6
    1db4:	4a040402 	bmi	102dc4 <_Min_Heap_Size+0x1025c4>
    1db8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1dbc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1dc0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1dc4:	002e0604 	eoreq	r0, lr, r4, lsl #12
    1dc8:	20060402 	andcs	r0, r6, r2, lsl #8
    1dcc:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    1dd0:	20060104 	andcs	r0, r6, r4, lsl #2
    1dd4:	3e3d2f06 	cdpcc	15, 3, cr2, cr13, cr6, {0}
    1dd8:	01060c05 	tsteq	r6, r5, lsl #24
    1ddc:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    1de0:	15030603 	strne	r0, [r3, #-1539]	; 0xfffff9fd
    1de4:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1de8:	06030501 	streq	r0, [r3], -r1, lsl #10
    1dec:	59415b3f 	stmdbpl	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}^
    1df0:	06595b5b 			; <UNDEFINED> instruction: 0x06595b5b
    1df4:	5b23063c 	blpl	8c36ec <_Min_Heap_Size+0x8c2eec>
    1df8:	01061405 	tsteq	r6, r5, lsl #8
    1dfc:	2f060305 	svccs	0x00060305
    1e00:	01061105 	tsteq	r6, r5, lsl #2
    1e04:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1e08:	01061205 	tsteq	r6, r5, lsl #4
    1e0c:	2f060305 	svccs	0x00060305
    1e10:	01061605 	tsteq	r6, r5, lsl #12
    1e14:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    1e18:	13060105 	movwne	r0, #24837	; 0x6105
    1e1c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1e20:	48030204 	stmdami	r3, {r2, r9}
    1e24:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1e28:	02006701 	andeq	r6, r0, #262144	; 0x40000
    1e2c:	05670104 	strbeq	r0, [r7, #-260]!	; 0xfffffefc
    1e30:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    1e34:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1e38:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    1e3c:	060c052e 	streq	r0, [ip], -lr, lsr #10
    1e40:	054a6403 	strbeq	r6, [sl, #-1027]	; 0xfffffbfd
    1e44:	203f0301 	eorscs	r0, pc, r1, lsl #6
    1e48:	01000502 	tsteq	r0, r2, lsl #10
    1e4c:	00010501 	andeq	r0, r1, r1, lsl #10
    1e50:	00000205 	andeq	r0, r0, r5, lsl #4
    1e54:	cf030000 	svcgt	0x00030000
    1e58:	03050104 	movweq	r0, #20740	; 0x5104
    1e5c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    1e60:	3a010501 	bcc	4326c <_Min_Heap_Size+0x42a6c>
    1e64:	52060305 	andpl	r0, r6, #335544320	; 0x14000000
    1e68:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1e6c:	002e0104 	eoreq	r0, lr, r4, lsl #2
    1e70:	4a020402 	bmi	82e80 <_Min_Heap_Size+0x82680>
    1e74:	03040200 	movweq	r0, #16896	; 0x4200
    1e78:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1e7c:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1e80:	004a0504 	subeq	r0, sl, r4, lsl #10
    1e84:	4a060402 	bmi	182e94 <_Min_Heap_Size+0x182694>
    1e88:	06040200 	streq	r0, [r4], -r0, lsl #4
    1e8c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1e90:	31062006 	tstcc	r6, r6
    1e94:	01040200 	mrseq	r0, R12_usr
    1e98:	3d062006 	stccc	0, cr2, [r6, #-24]	; 0xffffffe8
    1e9c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1ea0:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    1ea4:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1ea8:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    1eac:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1eb0:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    1eb4:	03060305 	movweq	r0, #25349	; 0x6305
    1eb8:	11052e15 	tstne	r5, r5, lsl lr
    1ebc:	03050106 	movweq	r0, #20742	; 0x5106
    1ec0:	415b3f06 	cmpmi	fp, r6, lsl #30
    1ec4:	4d595b59 	vldrmi	d21, [r9, #-356]	; 0xfffffe9c
    1ec8:	063c0659 			; <UNDEFINED> instruction: 0x063c0659
    1ecc:	14055b23 	strne	r5, [r5], #-2851	; 0xfffff4dd
    1ed0:	03050106 	movweq	r0, #20742	; 0x5106
    1ed4:	11052f06 	tstne	r5, r6, lsl #30
    1ed8:	03050106 	movweq	r0, #20742	; 0x5106
    1edc:	12053d06 	andne	r3, r5, #384	; 0x180
    1ee0:	03050106 	movweq	r0, #20742	; 0x5106
    1ee4:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1ee8:	03050106 	movweq	r0, #20742	; 0x5106
    1eec:	01052206 	tsteq	r5, r6, lsl #4
    1ef0:	03051306 	movweq	r1, #21254	; 0x5306
    1ef4:	02040200 	andeq	r0, r4, #0, 4
    1ef8:	00204603 	eoreq	r4, r0, r3, lsl #12
    1efc:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    1f00:	02040200 	andeq	r0, r4, #0, 4
    1f04:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    1f08:	05056702 	streq	r6, [r5, #-1794]	; 0xfffff8fe
    1f0c:	11056b06 	tstne	r5, r6, lsl #22
    1f10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1f14:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    1f18:	03060c05 	movweq	r0, #27653	; 0x6c05
    1f1c:	01054a63 	tsteq	r5, r3, ror #20
    1f20:	2000c103 	andcs	ip, r0, r3, lsl #2
    1f24:	01000602 	tsteq	r0, r2, lsl #12
    1f28:	00010501 	andeq	r0, r1, r1, lsl #10
    1f2c:	00000205 	andeq	r0, r0, r5, lsl #4
    1f30:	da030000 	ble	c1f38 <_Min_Heap_Size+0xc1738>
    1f34:	03050105 	movweq	r0, #20741	; 0x5105
    1f38:	06010514 			; <UNDEFINED> instruction: 0x06010514
    1f3c:	00010216 	andeq	r0, r1, r6, lsl r2
    1f40:	01050101 	tsteq	r5, r1, lsl #2
    1f44:	00020500 	andeq	r0, r2, r0, lsl #10
    1f48:	03000000 	movweq	r0, #0
    1f4c:	0501059d 	streq	r0, [r1, #-1437]	; 0xfffffa63
    1f50:	06051403 	streq	r1, [r5], -r3, lsl #8
    1f54:	01050106 	tsteq	r5, r6, lsl #2
    1f58:	0603051e 			; <UNDEFINED> instruction: 0x0603051e
    1f5c:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1f60:	004a0601 	subeq	r0, sl, r1, lsl #12
    1f64:	4a020402 	bmi	82f74 <_Min_Heap_Size+0x82774>
    1f68:	03040200 	movweq	r0, #16896	; 0x4200
    1f6c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1f70:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1f74:	004a0504 	subeq	r0, sl, r4, lsl #10
    1f78:	4a060402 	bmi	182f88 <_Min_Heap_Size+0x182788>
    1f7c:	06040200 	streq	r0, [r4], -r0, lsl #4
    1f80:	0530063c 	ldreq	r0, [r0, #-1596]!	; 0xfffff9c4
    1f84:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1f88:	033f0603 	teqeq	pc, #3145728	; 0x300000
    1f8c:	053f580b 	ldreq	r5, [pc, #-2059]!	; 1789 <_Min_Heap_Size+0xf89>
    1f90:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1f94:	052f0603 	streq	r0, [pc, #-1539]!	; 1999 <_Min_Heap_Size+0x1199>
    1f98:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1f9c:	052f0603 	streq	r0, [pc, #-1539]!	; 19a1 <_Min_Heap_Size+0x11a1>
    1fa0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1fa4:	052f0603 	streq	r0, [pc, #-1539]!	; 19a9 <_Min_Heap_Size+0x11a9>
    1fa8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1fac:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1fb0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1fb4:	01230603 			; <UNDEFINED> instruction: 0x01230603
    1fb8:	0105142e 	tsteq	r5, lr, lsr #8
    1fbc:	0c051306 	stceq	3, cr1, [r5], {6}
    1fc0:	05205f03 	streq	r5, [r0, #-3843]!	; 0xfffff0fd
    1fc4:	20210301 	eorcs	r0, r1, r1, lsl #6
    1fc8:	01000502 	tsteq	r0, r2, lsl #10
    1fcc:	00010501 	andeq	r0, r1, r1, lsl #10
    1fd0:	0d440205 	sfmeq	f0, 2, [r4, #-20]	; 0xffffffec
    1fd4:	ef030800 	svc	0x00030800
    1fd8:	01060108 	tsteq	r6, r8, lsl #2
    1fdc:	4b060305 	blmi	182bf8 <_Min_Heap_Size+0x1823f8>
    1fe0:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    1fe4:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    1fe8:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    1fec:	055a0605 	ldrbeq	r0, [sl, #-1541]	; 0xfffff9fb
    1ff0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1ff4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1ff8:	0f052e01 	svceq	0x00052e01
    1ffc:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    2000:	16052306 	strne	r2, [r5], -r6, lsl #6
    2004:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2008:	13052f06 	movwne	r2, #24326	; 0x5f06
    200c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2010:	11053f06 	tstne	r5, r6, lsl #30
    2014:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2018:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    201c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2020:	052f0605 	streq	r0, [pc, #-1541]!	; 1a23 <_Min_Heap_Size+0x1223>
    2024:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2028:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    202c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2030:	13052008 	movwne	r2, #20488	; 0x5008
    2034:	00470544 	subeq	r0, r7, r4, asr #10
    2038:	03010402 	movweq	r0, #5122	; 0x1402
    203c:	38053c78 	stmdacc	r5, {r3, r4, r5, r6, sl, fp, ip, sp}
    2040:	01040200 	mrseq	r0, R12_usr
    2044:	28130520 	ldmdacs	r3, {r5, r8, sl}
    2048:	43060905 	movwmi	r0, #26885	; 0x6905
    204c:	01061705 	tsteq	r6, r5, lsl #14
    2050:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    2054:	01061005 	tsteq	r6, r5
    2058:	32060905 	andcc	r0, r6, #81920	; 0x14000
    205c:	01062a05 	tsteq	r6, r5, lsl #20
    2060:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    2064:	1d05201f 	stcne	0, cr2, [r5, #-124]	; 0xffffff84
    2068:	0609052e 	streq	r0, [r9], -lr, lsr #10
    206c:	19070521 	stmdbne	r7, {r0, r5, r8, sl}
    2070:	01060c05 	tsteq	r6, r5, lsl #24
    2074:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    2078:	6e03060b 	cfmadd32vs	mvax0, mvfx0, mvfx3, mvfx11
    207c:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    2080:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    2084:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    2088:	01060b05 	tsteq	r6, r5, lsl #22
    208c:	05740a05 	ldrbeq	r0, [r4, #-2565]!	; 0xfffff5fb
    2090:	05340607 	ldreq	r0, [r4, #-1543]!	; 0xfffff9f9
    2094:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    2098:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    209c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    20a0:	1d052e0e 	stcne	14, cr2, [r5, #-56]	; 0xffffffc8
    20a4:	06090520 	streq	r0, [r9], -r0, lsr #10
    20a8:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    20ac:	20680313 	rsbcs	r0, r8, r3, lsl r3
    20b0:	0505201f 	streq	r2, [r5, #-31]	; 0xffffffe1
    20b4:	201e0306 	andscs	r0, lr, r6, lsl #6
    20b8:	01060905 	tsteq	r6, r5, lsl #18
    20bc:	05740805 	ldrbeq	r0, [r4, #-2053]!	; 0xfffff7fb
    20c0:	05280605 	streq	r0, [r8, #-1541]!	; 0xfffff9fb
    20c4:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    20c8:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    20cc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    20d0:	78030607 	stmdavc	r3, {r0, r1, r2, r9, sl}
    20d4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    20d8:	06070501 	streq	r0, [r7], -r1, lsl #10
    20dc:	060e053e 			; <UNDEFINED> instruction: 0x060e053e
    20e0:	030c0501 	movweq	r0, #50433	; 0xc501
    20e4:	01052e0a 	tsteq	r5, sl, lsl #28
    20e8:	030f0522 	movweq	r0, #62754	; 0xf522
    20ec:	02203c43 	eoreq	r3, r0, #17152	; 0x4300
    20f0:	01010001 	tsteq	r1, r1
    20f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    20f8:	00000002 	andeq	r0, r0, r2
    20fc:	09c50300 	stmibeq	r5, {r8, r9}^
    2100:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2104:	134b0603 	movtne	r0, #46595	; 0xb603
    2108:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    210c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2110:	05052006 	streq	r2, [r5, #-6]
    2114:	08055a06 	stmdaeq	r5, {r1, r2, r9, fp, ip, lr}
    2118:	19050106 	stmdbne	r5, {r1, r2, r8}
    211c:	01040200 	mrseq	r0, R12_usr
    2120:	220f052e 	andcs	r0, pc, #192937984	; 0xb800000
    2124:	06050520 	streq	r0, [r5], -r0, lsr #10
    2128:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    212c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2130:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    2134:	05052001 	streq	r2, [r5, #-1]
    2138:	1a052f06 	bne	14dd58 <_Min_Heap_Size+0x14d558>
    213c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2140:	11052306 	tstne	r5, r6, lsl #6
    2144:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2148:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    214c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2150:	052f0605 	streq	r0, [pc, #-1541]!	; 1b53 <_Min_Heap_Size+0x1353>
    2154:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2158:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    215c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2160:	13052008 	movwne	r2, #20488	; 0x5008
    2164:	00470544 	subeq	r0, r7, r4, asr #10
    2168:	03010402 	movweq	r0, #5122	; 0x1402
    216c:	38053c78 	stmdacc	r5, {r3, r4, r5, r6, sl, fp, ip, sp}
    2170:	01040200 	mrseq	r0, R12_usr
    2174:	28130520 	ldmdacs	r3, {r5, r8, sl}
    2178:	05201f37 	streq	r1, [r0, #-3895]!	; 0xfffff0c9
    217c:	0e030609 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx9
    2180:	06180520 	ldreq	r0, [r8], -r0, lsr #10
    2184:	06090501 	streq	r0, [r9], -r1, lsl #10
    2188:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    218c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2190:	06280532 			; <UNDEFINED> instruction: 0x06280532
    2194:	20320501 	eorscs	r0, r2, r1, lsl #10
    2198:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    219c:	09052e16 	stmdbeq	r5, {r1, r2, r4, r9, sl, fp, sp}
    21a0:	01062f06 	tsteq	r6, r6, lsl #30
    21a4:	26060b05 	strcs	r0, [r6], -r5, lsl #22
    21a8:	01062805 	tsteq	r6, r5, lsl #16
    21ac:	05203205 	streq	r3, [r0, #-517]!	; 0xfffffdfb
    21b0:	09052017 	stmdbeq	r5, {r0, r1, r2, r4, sp}
    21b4:	13052606 	movwne	r2, #22022	; 0x5606
    21b8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    21bc:	0c052206 	sfmeq	f2, 4, [r5], {6}
    21c0:	19050106 	stmdbne	r5, {r1, r2, r8}
    21c4:	060b052e 	streq	r0, [fp], -lr, lsr #10
    21c8:	053c6703 	ldreq	r6, [ip, #-1795]!	; 0xfffff8fd
    21cc:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    21d0:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
    21d4:	0b052206 	bleq	14a9f4 <_Min_Heap_Size+0x14a1f4>
    21d8:	0a050106 	beq	1425f8 <_Min_Heap_Size+0x141df8>
    21dc:	06070574 			; <UNDEFINED> instruction: 0x06070574
    21e0:	060a0534 			; <UNDEFINED> instruction: 0x060a0534
    21e4:	06090501 	streq	r0, [r9], -r1, lsl #10
    21e8:	06190535 			; <UNDEFINED> instruction: 0x06190535
    21ec:	200c0501 	andcs	r0, ip, r1, lsl #10
    21f0:	02003c05 	andeq	r3, r0, #1280	; 0x500
    21f4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    21f8:	0402007e 	streq	r0, [r2], #-126	; 0xffffff82
    21fc:	6f052002 	svcvs	0x00052002
    2200:	02040200 	andeq	r0, r4, #0, 4
    2204:	060b0520 	streq	r0, [fp], -r0, lsr #10
    2208:	06280534 			; <UNDEFINED> instruction: 0x06280534
    220c:	20320501 	eorscs	r0, r2, r1, lsl #10
    2210:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    2214:	05052e17 	streq	r2, [r5, #-3607]	; 0xfffff1e9
    2218:	14053606 	strne	r3, [r5], #-1542	; 0xfffff9fa
    221c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2220:	0c053e06 	stceq	14, cr3, [r5], {6}
    2224:	05320106 	ldreq	r0, [r2, #-262]!	; 0xfffffefa
    2228:	0f052201 	svceq	0x00052201
    222c:	203c4103 	eorscs	r4, ip, r3, lsl #2
    2230:	01000102 	tsteq	r0, r2, lsl #2
    2234:	00010501 	andeq	r0, r1, r1, lsl #10
    2238:	00000205 	andeq	r0, r0, r5, lsl #4
    223c:	9c030000 	stcls	0, cr0, [r3], {-0}
    2240:	0305010a 	movweq	r0, #20746	; 0x510a
    2244:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    2248:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    224c:	30060505 	andcc	r0, r6, r5, lsl #10
    2250:	01060805 	tsteq	r6, r5, lsl #16
    2254:	02001905 	andeq	r1, r0, #81920	; 0x14000
    2258:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    225c:	05250605 	streq	r0, [r5, #-1541]!	; 0xfffff9fb
    2260:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2264:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2268:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    226c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2270:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2274:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2278:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    227c:	052f0605 	streq	r0, [pc, #-1541]!	; 1c7f <_Min_Heap_Size+0x147f>
    2280:	20010613 	andcs	r0, r1, r3, lsl r6
    2284:	31060505 	tstcc	r6, r5, lsl #10
    2288:	4c062006 	stcmi	0, cr2, [r6], {6}
    228c:	01060c05 	tsteq	r6, r5, lsl #24
    2290:	05202420 	streq	r2, [r0, #-1056]!	; 0xfffffbe0
    2294:	206f030e 	rsbcs	r0, pc, lr, lsl #6
    2298:	01052020 	tsteq	r5, r0, lsr #32
    229c:	02201303 	eoreq	r1, r0, #201326592	; 0xc000000
    22a0:	01010001 	tsteq	r1, r1
    22a4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    22a8:	00000002 	andeq	r0, r0, r2
    22ac:	0ae30300 	beq	ff8c2eb4 <_estack+0xdf8c1c7c>
    22b0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    22b4:	15210603 	strne	r0, [r1, #-1539]!	; 0xfffff9fd
    22b8:	01060c05 	tsteq	r6, r5, lsl #24
    22bc:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    22c0:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    22c4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    22c8:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    22cc:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
    22d0:	03010522 	movweq	r0, #5410	; 0x1522
    22d4:	05052027 	streq	r2, [r5, #-39]	; 0xffffffd9
    22d8:	205c0306 	subscs	r0, ip, r6, lsl #6
    22dc:	01061705 	tsteq	r6, r5, lsl #14
    22e0:	21060505 	tstcs	r6, r5, lsl #10
    22e4:	01061705 	tsteq	r6, r5, lsl #14
    22e8:	21060505 	tstcs	r6, r5, lsl #10
    22ec:	01061805 	tsteq	r6, r5, lsl #16
    22f0:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    22f4:	01061605 	tsteq	r6, r5, lsl #12
    22f8:	2f060505 	svccs	0x00060505
    22fc:	01061305 	tsteq	r6, r5, lsl #6
    2300:	06050520 	streq	r0, [r5], -r0, lsr #10
    2304:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    2308:	20250501 	eorcs	r0, r5, r1, lsl #10
    230c:	31060505 	tstcc	r6, r5, lsl #10
    2310:	01060a05 	tsteq	r6, r5, lsl #20
    2314:	05202905 	streq	r2, [r0, #-2309]!	; 0xfffff6fb
    2318:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    231c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    2320:	05052026 	streq	r2, [r5, #-38]	; 0xffffffda
    2324:	0a053106 	beq	14e744 <_Min_Heap_Size+0x14df44>
    2328:	26050106 	strcs	r0, [r5], -r6, lsl #2
    232c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2330:	4d051323 	stcmi	3, cr1, [r5, #-140]	; 0xffffff74
    2334:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2338:	3f062e20 	svccc	0x00062e20
    233c:	01040200 	mrseq	r0, R12_usr
    2340:	0402004e 	streq	r0, [r2], #-78	; 0xffffffb2
    2344:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2348:	00010104 	andeq	r0, r1, r4, lsl #2
    234c:	01010402 	tsteq	r1, r2, lsl #8
    2350:	1f050204 	svcne	0x00050204
    2354:	01040200 	mrseq	r0, R12_usr
    2358:	2078d103 	rsbscs	sp, r8, r3, lsl #2
    235c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2360:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2364:	04020004 	streq	r0, [r2], #-4
    2368:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    236c:	2e060104 	adfcss	f0, f6, f4
    2370:	01040200 	mrseq	r0, R12_usr
    2374:	02002f06 	andeq	r2, r0, #6, 30
    2378:	01060104 	tsteq	r6, r4, lsl #2
    237c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2380:	01040200 	mrseq	r0, R12_usr
    2384:	0107aa03 	tsteq	r7, r3, lsl #20
    2388:	01040200 	mrseq	r0, R12_usr
    238c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2390:	02001f05 	andeq	r1, r0, #5, 30
    2394:	84030104 	strhi	r0, [r3], #-260	; 0xfffffefc
    2398:	04050179 	streq	r0, [r5], #-377	; 0xfffffe87
    239c:	01040200 	mrseq	r0, R12_usr
    23a0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    23a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    23a8:	20060104 	andcs	r0, r6, r4, lsl #2
    23ac:	01040200 	mrseq	r0, R12_usr
    23b0:	02002f06 	andeq	r2, r0, #6, 30
    23b4:	01060104 	tsteq	r6, r4, lsl #2
    23b8:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    23bc:	01040200 	mrseq	r0, R12_usr
    23c0:	0106f703 	tsteq	r6, r3, lsl #14	; <UNPREDICTABLE>
    23c4:	2e300c05 	cdpcs	12, 3, cr0, cr0, cr5, {0}
    23c8:	0e052016 	mcreq	0, 0, r2, cr5, cr6, {0}
    23cc:	20205b03 	eorcs	r5, r0, r3, lsl #22
    23d0:	01000802 	tsteq	r0, r2, lsl #16
    23d4:	00010501 	andeq	r0, r1, r1, lsl #10
    23d8:	00000205 	andeq	r0, r0, r5, lsl #4
    23dc:	bc030000 	stclt	0, cr0, [r3], {-0}
    23e0:	0305010b 	movweq	r0, #20747	; 0x510b
    23e4:	10051413 	andne	r1, r5, r3, lsl r4
    23e8:	03050106 	movweq	r0, #20742	; 0x5106
    23ec:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    23f0:	06050106 	streq	r0, [r5], -r6, lsl #2
    23f4:	0005053c 	andeq	r0, r5, ip, lsr r5
    23f8:	06020402 	streq	r0, [r2], -r2, lsl #8
    23fc:	00030531 	andeq	r0, r3, r1, lsr r5
    2400:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2404:	02001005 	andeq	r1, r0, #5
    2408:	01060204 	tsteq	r6, r4, lsl #4
    240c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2410:	4b060204 	blmi	182c28 <_Min_Heap_Size+0x182428>
    2414:	02000d05 	andeq	r0, r0, #320	; 0x140
    2418:	01060204 	tsteq	r6, r4, lsl #4
    241c:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2420:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    2424:	04020005 	streq	r0, [r2], #-5
    2428:	05350602 	ldreq	r0, [r5, #-1538]!	; 0xfffff9fe
    242c:	04020003 	streq	r0, [r2], #-3
    2430:	01051502 	tsteq	r5, r2, lsl #10
    2434:	02040200 	andeq	r0, r4, #0, 4
    2438:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    243c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2440:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    2444:	206e0301 	rsbcs	r0, lr, r1, lsl #6
    2448:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    244c:	31060104 	tstcc	r6, r4, lsl #2
    2450:	01040200 	mrseq	r0, R12_usr
    2454:	04020001 	streq	r0, [r2], #-1
    2458:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    245c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2460:	001f0502 	andseq	r0, pc, r2, lsl #10
    2464:	03010402 	movweq	r0, #5122	; 0x1402
    2468:	05207898 	streq	r7, [r0, #-2200]!	; 0xfffff768
    246c:	04020005 	streq	r0, [r2], #-5
    2470:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2474:	01040200 	mrseq	r0, R12_usr
    2478:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    247c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2480:	06010402 	streq	r0, [r1], -r2, lsl #8
    2484:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2488:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    248c:	00050501 	andeq	r0, r5, r1, lsl #10
    2490:	03010402 	movweq	r0, #5122	; 0x1402
    2494:	000107e3 	andeq	r0, r1, r3, ror #15
    2498:	06010402 	streq	r0, [r1], -r2, lsl #8
    249c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    24a0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    24a4:	78cb0301 	stmiavc	fp, {r0, r8, r9}^
    24a8:	00040501 	andeq	r0, r4, r1, lsl #10
    24ac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    24b0:	01040200 	mrseq	r0, R12_usr
    24b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    24b8:	00200601 	eoreq	r0, r0, r1, lsl #12
    24bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    24c0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    24c4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    24c8:	00050501 	andeq	r0, r5, r1, lsl #10
    24cc:	03010402 	movweq	r0, #5122	; 0x1402
    24d0:	000107b0 			; <UNDEFINED> instruction: 0x000107b0
    24d4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    24d8:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    24dc:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
    24e0:	04020005 	streq	r0, [r2], #-5
    24e4:	00310601 	eorseq	r0, r1, r1, lsl #12
    24e8:	01010402 	tsteq	r1, r2, lsl #8
    24ec:	01040200 	mrseq	r0, R12_usr
    24f0:	04020001 	streq	r0, [r2], #-1
    24f4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    24f8:	02001f05 	andeq	r1, r0, #5, 30
    24fc:	91030104 	tstls	r3, r4, lsl #2
    2500:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    2504:	01040200 	mrseq	r0, R12_usr
    2508:	00040514 	andeq	r0, r4, r4, lsl r5
    250c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2510:	01040200 	mrseq	r0, R12_usr
    2514:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2518:	2f060104 	svccs	0x00060104
    251c:	01040200 	mrseq	r0, R12_usr
    2520:	01040106 	tsteq	r4, r6, lsl #2
    2524:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2528:	ea030104 	b	c2940 <_Min_Heap_Size+0xc2140>
    252c:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2530:	2e060104 	adfcss	f0, f6, f4
    2534:	1f050204 	svcne	0x00050204
    2538:	01040200 	mrseq	r0, R12_usr
    253c:	0178c403 	cmneq	r8, r3, lsl #8
    2540:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2544:	00140104 	andseq	r0, r4, r4, lsl #2
    2548:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    254c:	01040200 	mrseq	r0, R12_usr
    2550:	02002006 	andeq	r2, r0, #6
    2554:	2f060104 	svccs	0x00060104
    2558:	01040200 	mrseq	r0, R12_usr
    255c:	01040106 	tsteq	r4, r6, lsl #2
    2560:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2564:	b7030104 	strlt	r0, [r3, -r4, lsl #2]
    2568:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    256c:	002e0104 	eoreq	r0, lr, r4, lsl #2
    2570:	06010402 	streq	r0, [r1], -r2, lsl #8
    2574:	04020001 	streq	r0, [r2], #-1
    2578:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    257c:	00010104 	andeq	r0, r1, r4, lsl #2
    2580:	01010402 	tsteq	r1, r2, lsl #8
    2584:	01040200 	mrseq	r0, R12_usr
    2588:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    258c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2590:	78900301 	ldmvc	r0, {r0, r8, r9}
    2594:	00050520 	andeq	r0, r5, r0, lsr #10
    2598:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    259c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    25a0:	00140104 	andseq	r0, r4, r4, lsl #2
    25a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    25a8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    25ac:	002f0601 	eoreq	r0, pc, r1, lsl #12
    25b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    25b4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    25b8:	04020005 	streq	r0, [r2], #-5
    25bc:	07eb0301 	strbeq	r0, [fp, r1, lsl #6]!
    25c0:	04020001 	streq	r0, [r2], #-1
    25c4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    25c8:	001f0502 	andseq	r0, pc, r2, lsl #10
    25cc:	03010402 	movweq	r0, #5122	; 0x1402
    25d0:	050178c3 	streq	r7, [r1, #-2243]	; 0xfffff73d
    25d4:	04020004 	streq	r0, [r2], #-4
    25d8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    25dc:	00140104 	andseq	r0, r4, r4, lsl #2
    25e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    25e4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    25e8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    25ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    25f0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    25f4:	04020005 	streq	r0, [r2], #-5
    25f8:	07b80301 	ldreq	r0, [r8, r1, lsl #6]!
    25fc:	04020001 	streq	r0, [r2], #-1
    2600:	02002e01 	andeq	r2, r0, #1, 28
    2604:	01060104 	tsteq	r6, r4, lsl #2
    2608:	01040200 	mrseq	r0, R12_usr
    260c:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    2610:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2614:	00010104 	andeq	r0, r1, r4, lsl #2
    2618:	01010402 	tsteq	r1, r2, lsl #8
    261c:	1f050204 	svcne	0x00050204
    2620:	01040200 	mrseq	r0, R12_usr
    2624:	20788d03 	rsbscs	r8, r8, r3, lsl #26
    2628:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    262c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2630:	04020004 	streq	r0, [r2], #-4
    2634:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2638:	2e060104 	adfcss	f0, f6, f4
    263c:	01040200 	mrseq	r0, R12_usr
    2640:	02002f06 	andeq	r2, r0, #6, 30
    2644:	01060104 	tsteq	r6, r4, lsl #2
    2648:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    264c:	01040200 	mrseq	r0, R12_usr
    2650:	0107ee03 	tsteq	r7, r3, lsl #28
    2654:	01040200 	mrseq	r0, R12_usr
    2658:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    265c:	02001f05 	andeq	r1, r0, #5, 30
    2660:	c0030104 	andgt	r0, r3, r4, lsl #2
    2664:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    2668:	01040200 	mrseq	r0, R12_usr
    266c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2670:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2674:	20060104 	andcs	r0, r6, r4, lsl #2
    2678:	01040200 	mrseq	r0, R12_usr
    267c:	02002f06 	andeq	r2, r0, #6, 30
    2680:	01060104 	tsteq	r6, r4, lsl #2
    2684:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2688:	01040200 	mrseq	r0, R12_usr
    268c:	0107bb03 	tsteq	r7, r3, lsl #22
    2690:	01000302 	tsteq	r0, r2, lsl #6
    2694:	00010501 	andeq	r0, r1, r1, lsl #10
    2698:	00000205 	andeq	r0, r0, r5, lsl #4
    269c:	db030000 	blle	c26a4 <_Min_Heap_Size+0xc1ea4>
    26a0:	0305010b 	movweq	r0, #20747	; 0x510b
    26a4:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    26a8:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    26ac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    26b0:	31060204 	tstcc	r6, r4, lsl #4
    26b4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    26b8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    26bc:	0402000c 	streq	r0, [r2], #-12
    26c0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    26c4:	04020006 	streq	r0, [r2], #-6
    26c8:	05053c02 	streq	r3, [r5, #-3074]	; 0xfffff3fe
    26cc:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    26d0:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
    26d4:	20130601 	andscs	r0, r3, r1, lsl #12
    26d8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    26dc:	03060104 	movweq	r0, #24836	; 0x6104
    26e0:	0200206c 	andeq	r2, r0, #108	; 0x6c
    26e4:	00010104 	andeq	r0, r1, r4, lsl #2
    26e8:	01010402 	tsteq	r1, r2, lsl #8
    26ec:	01040200 	mrseq	r0, R12_usr
    26f0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    26f4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    26f8:	77fb0301 	ldrbvc	r0, [fp, r1, lsl #6]!
    26fc:	00050520 	andeq	r0, r5, r0, lsr #10
    2700:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2704:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2708:	00140104 	andseq	r0, r4, r4, lsl #2
    270c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2710:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2714:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2718:	06010402 	streq	r0, [r1], -r2, lsl #8
    271c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2720:	04020005 	streq	r0, [r2], #-5
    2724:	08800301 	stmeq	r0, {r0, r8, r9}
    2728:	04020001 	streq	r0, [r2], #-1
    272c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2730:	001f0502 	andseq	r0, pc, r2, lsl #10
    2734:	03010402 	movweq	r0, #5122	; 0x1402
    2738:	050178ae 	streq	r7, [r1, #-2222]	; 0xfffff752
    273c:	04020004 	streq	r0, [r2], #-4
    2740:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2744:	00140104 	andseq	r0, r4, r4, lsl #2
    2748:	06010402 	streq	r0, [r1], -r2, lsl #8
    274c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2750:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2754:	06010402 	streq	r0, [r1], -r2, lsl #8
    2758:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    275c:	04020005 	streq	r0, [r2], #-5
    2760:	07cd0301 	strbeq	r0, [sp, r1, lsl #6]
    2764:	04020001 	streq	r0, [r2], #-1
    2768:	01053c01 	tsteq	r5, r1, lsl #24
    276c:	0605050d 	streq	r0, [r5], -sp, lsl #10
    2770:	01200b03 			; <UNDEFINED> instruction: 0x01200b03
    2774:	202e3c2e 	eorcs	r3, lr, lr, lsr #24
    2778:	06140515 			; <UNDEFINED> instruction: 0x06140515
    277c:	20080501 	andcs	r0, r8, r1, lsl #10
    2780:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    2784:	22060104 	andcs	r0, r6, #4, 2
    2788:	01040200 	mrseq	r0, R12_usr
    278c:	04020001 	streq	r0, [r2], #-1
    2790:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2794:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2798:	001f0502 	andseq	r0, pc, r2, lsl #10
    279c:	03010402 	movweq	r0, #5122	; 0x1402
    27a0:	052077f0 	streq	r7, [r0, #-2032]!	; 0xfffff810
    27a4:	04020005 	streq	r0, [r2], #-5
    27a8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    27ac:	01040200 	mrseq	r0, R12_usr
    27b0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    27b4:	002e0601 	eoreq	r0, lr, r1, lsl #12
    27b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    27bc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    27c0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    27c4:	00070501 	andeq	r0, r7, r1, lsl #10
    27c8:	03010402 	movweq	r0, #5122	; 0x1402
    27cc:	0001088b 	andeq	r0, r1, fp, lsl #17
    27d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    27d4:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    27d8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    27dc:	78a30301 	stmiavc	r3!, {r0, r8, r9}
    27e0:	00040501 	andeq	r0, r4, r1, lsl #10
    27e4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    27e8:	01040200 	mrseq	r0, R12_usr
    27ec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    27f0:	00200601 	eoreq	r0, r0, r1, lsl #12
    27f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    27f8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    27fc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2800:	00070501 	andeq	r0, r7, r1, lsl #10
    2804:	03010402 	movweq	r0, #5122	; 0x1402
    2808:	000107d8 	ldrdeq	r0, [r1], -r8
    280c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2810:	01040200 	mrseq	r0, R12_usr
    2814:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2818:	01040200 	mrseq	r0, R12_usr
    281c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2820:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2824:	00010104 	andeq	r0, r1, r4, lsl #2
    2828:	01010402 	tsteq	r1, r2, lsl #8
    282c:	1f050204 	svcne	0x00050204
    2830:	01040200 	mrseq	r0, R12_usr
    2834:	2077ee03 	rsbscs	lr, r7, r3, lsl #28
    2838:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    283c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2840:	04020004 	streq	r0, [r2], #-4
    2844:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2848:	2e060104 	adfcss	f0, f6, f4
    284c:	01040200 	mrseq	r0, R12_usr
    2850:	02002f06 	andeq	r2, r0, #6, 30
    2854:	01060104 	tsteq	r6, r4, lsl #2
    2858:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    285c:	01040200 	mrseq	r0, R12_usr
    2860:	01088d03 	tsteq	r8, r3, lsl #26
    2864:	01040200 	mrseq	r0, R12_usr
    2868:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    286c:	02001f05 	andeq	r1, r0, #5, 30
    2870:	a1030104 	tstge	r3, r4, lsl #2
    2874:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    2878:	01040200 	mrseq	r0, R12_usr
    287c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2880:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2884:	20060104 	andcs	r0, r6, r4, lsl #2
    2888:	01040200 	mrseq	r0, R12_usr
    288c:	02002f06 	andeq	r2, r0, #6, 30
    2890:	01060104 	tsteq	r6, r4, lsl #2
    2894:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2898:	01040200 	mrseq	r0, R12_usr
    289c:	0107da03 	tsteq	r7, r3, lsl #20
    28a0:	01040200 	mrseq	r0, R12_usr
    28a4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    28a8:	00010601 	andeq	r0, r1, r1, lsl #12
    28ac:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    28b0:	01040200 	mrseq	r0, R12_usr
    28b4:	04020001 	streq	r0, [r2], #-1
    28b8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    28bc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    28c0:	001f0502 	andseq	r0, pc, r2, lsl #10
    28c4:	03010402 	movweq	r0, #5122	; 0x1402
    28c8:	052077eb 	streq	r7, [r0, #-2027]!	; 0xfffff815
    28cc:	04020005 	streq	r0, [r2], #-5
    28d0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    28d4:	01040200 	mrseq	r0, R12_usr
    28d8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    28dc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    28e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    28e4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    28e8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    28ec:	00050501 	andeq	r0, r5, r1, lsl #10
    28f0:	03010402 	movweq	r0, #5122	; 0x1402
    28f4:	00010890 	muleq	r1, r0, r8
    28f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    28fc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2900:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2904:	789e0301 	ldmvc	lr, {r0, r8, r9}
    2908:	00040501 	andeq	r0, r4, r1, lsl #10
    290c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2910:	01040200 	mrseq	r0, R12_usr
    2914:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2918:	00200601 	eoreq	r0, r0, r1, lsl #12
    291c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2920:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2924:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2928:	00050501 	andeq	r0, r5, r1, lsl #10
    292c:	03010402 	movweq	r0, #5122	; 0x1402
    2930:	000107dd 	ldrdeq	r0, [r1], -sp
    2934:	06020402 	streq	r0, [r2], -r2, lsl #8
    2938:	0003052e 	andeq	r0, r3, lr, lsr #10
    293c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2940:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    2944:	13060204 	movwne	r0, #25092	; 0x6204
    2948:	02040200 	andeq	r0, r4, #0, 4
    294c:	00020220 	andeq	r0, r2, r0, lsr #4
    2950:	01050101 	tsteq	r5, r1, lsl #2
    2954:	00020500 	andeq	r0, r2, r0, lsl #10
    2958:	03000000 	movweq	r0, #0
    295c:	06010bfd 			; <UNDEFINED> instruction: 0x06010bfd
    2960:	06030501 	streq	r0, [r3], -r1, lsl #10
    2964:	10051a2f 	andne	r1, r5, pc, lsr #20
    2968:	03050106 	movweq	r0, #20742	; 0x5106
    296c:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    2970:	06050106 	streq	r0, [r5], -r6, lsl #2
    2974:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    2978:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    297c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2980:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
    2984:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2988:	03053c06 	movweq	r3, #23558	; 0x5c06
    298c:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    2990:	13060105 	movwne	r0, #24837	; 0x6105
    2994:	0031052e 	eorseq	r0, r1, lr, lsr #10
    2998:	03010402 	movweq	r0, #5122	; 0x1402
    299c:	05052e65 	streq	r2, [r5, #-3685]	; 0xfffff19b
    29a0:	01040200 	mrseq	r0, R12_usr
    29a4:	02003006 	andeq	r3, r0, #6
    29a8:	00010104 	andeq	r0, r1, r4, lsl #2
    29ac:	01010402 	tsteq	r1, r2, lsl #8
    29b0:	01040200 	mrseq	r0, R12_usr
    29b4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    29b8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    29bc:	77d20301 	ldrbvc	r0, [r2, r1, lsl #6]
    29c0:	00050520 	andeq	r0, r5, r0, lsr #10
    29c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    29c8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    29cc:	00140104 	andseq	r0, r4, r4, lsl #2
    29d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    29d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    29d8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    29dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    29e0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    29e4:	04020005 	streq	r0, [r2], #-5
    29e8:	08a90301 	stmiaeq	r9!, {r0, r8, r9}
    29ec:	04020001 	streq	r0, [r2], #-1
    29f0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    29f4:	001f0502 	andseq	r0, pc, r2, lsl #10
    29f8:	03010402 	movweq	r0, #5122	; 0x1402
    29fc:	05017885 	streq	r7, [r1, #-2181]	; 0xfffff77b
    2a00:	04020004 	streq	r0, [r2], #-4
    2a04:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2a08:	00140104 	andseq	r0, r4, r4, lsl #2
    2a0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a10:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2a14:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2a18:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a1c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2a20:	04020005 	streq	r0, [r2], #-5
    2a24:	07f60301 	ldrbeq	r0, [r6, r1, lsl #6]!
    2a28:	04020001 	streq	r0, [r2], #-1
    2a2c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2a30:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2a34:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2a38:	01060204 	tsteq	r6, r4, lsl #4
    2a3c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2a40:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2a44:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    2a48:	32053005 	andcc	r3, r5, #5
    2a4c:	01040200 	mrseq	r0, R12_usr
    2a50:	05054f06 	streq	r4, [r5, #-3846]	; 0xfffff0fa
    2a54:	01040200 	mrseq	r0, R12_usr
    2a58:	02003006 	andeq	r3, r0, #6
    2a5c:	00010104 	andeq	r0, r1, r4, lsl #2
    2a60:	01010402 	tsteq	r1, r2, lsl #8
    2a64:	01040200 	mrseq	r0, R12_usr
    2a68:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2a6c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2a70:	77c40301 	strbvc	r0, [r4, r1, lsl #6]
    2a74:	00050520 	andeq	r0, r5, r0, lsr #10
    2a78:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2a7c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2a80:	00140104 	andseq	r0, r4, r4, lsl #2
    2a84:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a88:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2a8c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2a90:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a94:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2a98:	04020005 	streq	r0, [r2], #-5
    2a9c:	08b70301 	ldmeq	r7!, {r0, r8, r9}
    2aa0:	04020001 	streq	r0, [r2], #-1
    2aa4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2aa8:	001f0502 	andseq	r0, pc, r2, lsl #10
    2aac:	03010402 	movweq	r0, #5122	; 0x1402
    2ab0:	050177f7 	streq	r7, [r1, #-2039]	; 0xfffff809
    2ab4:	04020004 	streq	r0, [r2], #-4
    2ab8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2abc:	00140104 	andseq	r0, r4, r4, lsl #2
    2ac0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ac4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2ac8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2acc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ad0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2ad4:	04020005 	streq	r0, [r2], #-5
    2ad8:	08840301 	stmeq	r4, {r0, r8, r9}
    2adc:	04020001 	streq	r0, [r2], #-1
    2ae0:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2ae4:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2ae8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2aec:	01060204 	tsteq	r6, r4, lsl #4
    2af0:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2af4:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2af8:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    2afc:	04023005 	streq	r3, [r2], #-5
    2b00:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2b04:	02050001 	andeq	r0, r5, #1
    2b08:	00000000 	andeq	r0, r0, r0
    2b0c:	010cb503 	tsteq	ip, r3, lsl #10
    2b10:	03050106 	movweq	r0, #20742	; 0x5106
    2b14:	13135906 	tstne	r3, #98304	; 0x18000
    2b18:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    2b1c:	06052e01 	streq	r2, [r5], -r1, lsl #28
    2b20:	06050520 	streq	r0, [r5], -r0, lsr #10
    2b24:	0608055a 			; <UNDEFINED> instruction: 0x0608055a
    2b28:	00190501 	andseq	r0, r9, r1, lsl #10
    2b2c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2b30:	20220f05 	eorcs	r0, r2, r5, lsl #30
    2b34:	23060505 	movwcs	r0, #25861	; 0x6505
    2b38:	01061605 	tsteq	r6, r5, lsl #12
    2b3c:	2f060505 	svccs	0x00060505
    2b40:	01061405 	tsteq	r6, r5, lsl #8
    2b44:	06050520 	streq	r0, [r5], -r0, lsr #10
    2b48:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    2b4c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b50:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    2b54:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b58:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    2b5c:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    2b60:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    2b64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b68:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    2b6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b70:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    2b74:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2b78:	44130520 	ldrmi	r0, [r3], #-1312	; 0xfffffae0
    2b7c:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    2b80:	01060c05 	tsteq	r6, r5, lsl #24
    2b84:	31060505 	tstcc	r6, r5, lsl #10
    2b88:	01060b05 	tsteq	r6, r5, lsl #22
    2b8c:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    2b90:	71030104 	tstvc	r3, r4, lsl #2
    2b94:	00380520 	eorseq	r0, r8, r0, lsr #10
    2b98:	20010402 	andcs	r0, r1, r2, lsl #8
    2b9c:	37281305 	strcc	r1, [r8, -r5, lsl #6]!
    2ba0:	0b05201f 	bleq	14ac24 <_Min_Heap_Size+0x14a424>
    2ba4:	20190306 	andscs	r0, r9, r6, lsl #6
    2ba8:	01061e05 	tsteq	r6, r5, lsl #28
    2bac:	2f060b05 	svccs	0x00060b05
    2bb0:	01061a05 	tsteq	r6, r5, lsl #20
    2bb4:	3e060b05 	vmlacc.f64	d0, d6, d5
    2bb8:	01061205 	tsteq	r6, r5, lsl #4
    2bbc:	03060b05 	movweq	r0, #27397	; 0x6b05
    2bc0:	34052e09 	strcc	r2, [r5], #-3593	; 0xfffff1f7
    2bc4:	1a050106 	bne	142fe4 <_Min_Heap_Size+0x1427e4>
    2bc8:	2e180520 	cfmul64cs	mvdx0, mvdx8, mvdx0
    2bcc:	2f060b05 	svccs	0x00060b05
    2bd0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2bd4:	34052606 	strcc	r2, [r5], #-1542	; 0xfffff9fa
    2bd8:	19050106 	stmdbne	r5, {r1, r2, r8}
    2bdc:	060b0520 	streq	r0, [fp], -r0, lsr #10
    2be0:	06150527 	ldreq	r0, [r5], -r7, lsr #10
    2be4:	06090501 	streq	r0, [r9], -r1, lsl #10
    2be8:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    2bec:	06090501 	streq	r0, [r9], -r1, lsl #10
    2bf0:	060e053d 			; <UNDEFINED> instruction: 0x060e053d
    2bf4:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    2bf8:	40060705 	andmi	r0, r6, r5, lsl #14
    2bfc:	01060a05 	tsteq	r6, r5, lsl #20
    2c00:	03060b05 	movweq	r0, #27397	; 0x6b05
    2c04:	11053c52 	tstne	r5, r2, asr ip
    2c08:	0b050106 	bleq	143028 <_Min_Heap_Size+0x142828>
    2c0c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    2c10:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    2c14:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    2c18:	3f060905 	svccc	0x00060905
    2c1c:	2e2e2e01 	cdpcs	14, 2, cr2, cr14, cr1, {0}
    2c20:	0d051620 	stceq	6, cr1, [r5, #-128]	; 0xffffff80
    2c24:	0c050106 	stfeqs	f0, [r5], {6}
    2c28:	06070520 	streq	r0, [r7], -r0, lsr #10
    2c2c:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    2c30:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2c34:	0905200a 	stmdbeq	r5, {r1, r3, sp}
    2c38:	0c053e06 	stceq	14, cr3, [r5], {6}
    2c3c:	0b050106 	bleq	14305c <_Min_Heap_Size+0x14285c>
    2c40:	1b053506 	blne	150060 <_Min_Heap_Size+0x14f860>
    2c44:	0e050106 	adfeqs	f0, f5, f6
    2c48:	003e0520 	eorseq	r0, lr, r0, lsr #10
    2c4c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    2c50:	00018005 	andeq	r8, r1, r5
    2c54:	20020402 	andcs	r0, r2, r2, lsl #8
    2c58:	02007105 	andeq	r7, r0, #1073741825	; 0x40000001
    2c5c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2c60:	0534060d 	ldreq	r0, [r4, #-1549]!	; 0xfffff9f3
    2c64:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    2c68:	1905201b 	stmdbne	r5, {r0, r1, r3, r4, sp}
    2c6c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    2c70:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    2c74:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2c78:	0c052e1d 	stceq	14, cr2, [r5], {29}
    2c7c:	0035052e 	eorseq	r0, r5, lr, lsr #10
    2c80:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2c84:	30060b05 	andcc	r0, r6, r5, lsl #22
    2c88:	01061a05 	tsteq	r6, r5, lsl #20
    2c8c:	3e060b05 	vmlacc.f64	d0, d6, d5
    2c90:	01061205 	tsteq	r6, r5, lsl #4
    2c94:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    2c98:	01061305 	tsteq	r6, r5, lsl #6
    2c9c:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    2ca0:	0c052e20 	stceq	14, cr2, [r5], {32}
    2ca4:	06050520 	streq	r0, [r5], -r0, lsr #10
    2ca8:	06140522 	ldreq	r0, [r4], -r2, lsr #10
    2cac:	06050501 	streq	r0, [r5], -r1, lsl #10
    2cb0:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    2cb4:	01053201 	tsteq	r5, r1, lsl #4
    2cb8:	030f0522 	movweq	r0, #62754	; 0xf522
    2cbc:	203c7f9e 	mlascs	ip, lr, pc, r7	; <UNPREDICTABLE>
    2cc0:	01000102 	tsteq	r0, r2, lsl #2
    2cc4:	00010501 	andeq	r0, r1, r1, lsl #10
    2cc8:	00000205 	andeq	r0, r0, r5, lsl #4
    2ccc:	b1030000 	mrslt	r0, (UNDEF: 3)
    2cd0:	0305010e 	movweq	r0, #20750	; 0x510e
    2cd4:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    2cd8:	21010501 	tstcs	r1, r1, lsl #10
    2cdc:	01000102 	tsteq	r0, r2, lsl #2
    2ce0:	00010501 	andeq	r0, r1, r1, lsl #10
    2ce4:	00000205 	andeq	r0, r0, r5, lsl #4
    2ce8:	c3030000 	movwgt	r0, #12288	; 0x3000
    2cec:	0106010e 	tsteq	r6, lr, lsl #2
    2cf0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2cf4:	30060104 	andcc	r0, r6, r4, lsl #2
    2cf8:	01040200 	mrseq	r0, R12_usr
    2cfc:	04020001 	streq	r0, [r2], #-1
    2d00:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2d04:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2d08:	001f0502 	andseq	r0, pc, r2, lsl #10
    2d0c:	03010402 	movweq	r0, #5122	; 0x1402
    2d10:	05207596 	streq	r7, [r0, #-1430]!	; 0xfffffa6a
    2d14:	04020005 	streq	r0, [r2], #-5
    2d18:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2d1c:	01040200 	mrseq	r0, R12_usr
    2d20:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2d24:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2d28:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d2c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2d30:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2d34:	00030501 	andeq	r0, r3, r1, lsl #10
    2d38:	03010402 	movweq	r0, #5122	; 0x1402
    2d3c:	00010ae5 	andeq	r0, r1, r5, ror #21
    2d40:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d44:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2d48:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2d4c:	75c90301 	strbvc	r0, [r9, #769]	; 0x301
    2d50:	00040501 	andeq	r0, r4, r1, lsl #10
    2d54:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2d58:	01040200 	mrseq	r0, R12_usr
    2d5c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2d60:	00200601 	eoreq	r0, r0, r1, lsl #12
    2d64:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d68:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2d6c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2d70:	00030501 	andeq	r0, r3, r1, lsl #10
    2d74:	03010402 	movweq	r0, #5122	; 0x1402
    2d78:	00010ab2 			; <UNDEFINED> instruction: 0x00010ab2
    2d7c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2d80:	01040200 	mrseq	r0, R12_usr
    2d84:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    2d88:	00130104 	andseq	r0, r3, r4, lsl #2
    2d8c:	01010402 	tsteq	r1, r2, lsl #8
    2d90:	01040200 	mrseq	r0, R12_usr
    2d94:	04020001 	streq	r0, [r2], #-1
    2d98:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2d9c:	02001f05 	andeq	r1, r0, #5, 30
    2da0:	95030104 	strls	r0, [r3, #-260]	; 0xfffffefc
    2da4:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    2da8:	01040200 	mrseq	r0, R12_usr
    2dac:	00040514 	andeq	r0, r4, r4, lsl r5
    2db0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2db4:	01040200 	mrseq	r0, R12_usr
    2db8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2dbc:	2f060104 	svccs	0x00060104
    2dc0:	01040200 	mrseq	r0, R12_usr
    2dc4:	01040106 	tsteq	r4, r6, lsl #2
    2dc8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2dcc:	e6030104 	str	r0, [r3], -r4, lsl #2
    2dd0:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2dd4:	2e060104 	adfcss	f0, f6, f4
    2dd8:	1f050204 	svcne	0x00050204
    2ddc:	01040200 	mrseq	r0, R12_usr
    2de0:	0175c803 	cmneq	r5, r3, lsl #16
    2de4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2de8:	00140104 	andseq	r0, r4, r4, lsl #2
    2dec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2df0:	01040200 	mrseq	r0, R12_usr
    2df4:	02002006 	andeq	r2, r0, #6
    2df8:	2f060104 	svccs	0x00060104
    2dfc:	01040200 	mrseq	r0, R12_usr
    2e00:	01040106 	tsteq	r4, r6, lsl #2
    2e04:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2e08:	b3030104 	movwlt	r0, #12548	; 0x3104
    2e0c:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    2e10:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2e14:	02040200 	andeq	r0, r4, #0, 4
    2e18:	000c0515 	andeq	r0, ip, r5, lsl r5
    2e1c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2e20:	00060501 	andeq	r0, r6, r1, lsl #10
    2e24:	20020402 	andcs	r0, r2, r2, lsl #8
    2e28:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2e2c:	30060204 	andcc	r0, r6, r4, lsl #4
    2e30:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2e34:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    2e38:	04020007 	streq	r0, [r2], #-7
    2e3c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2e40:	04020006 	streq	r0, [r2], #-6
    2e44:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
    2e48:	01040200 	mrseq	r0, R12_usr
    2e4c:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    2e50:	00010104 	andeq	r0, r1, r4, lsl #2
    2e54:	01010402 	tsteq	r1, r2, lsl #8
    2e58:	01040200 	mrseq	r0, R12_usr
    2e5c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2e60:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2e64:	758a0301 	strvc	r0, [sl, #769]	; 0x301
    2e68:	00050520 	andeq	r0, r5, r0, lsr #10
    2e6c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2e70:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2e74:	00140104 	andseq	r0, r4, r4, lsl #2
    2e78:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2e80:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2e84:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e88:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2e8c:	04020005 	streq	r0, [r2], #-5
    2e90:	0af10301 	beq	ffc43a9c <_estack+0xdfc42864>
    2e94:	04020001 	streq	r0, [r2], #-1
    2e98:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2e9c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2ea0:	03010402 	movweq	r0, #5122	; 0x1402
    2ea4:	050175bd 	streq	r7, [r1, #-1469]	; 0xfffffa43
    2ea8:	04020004 	streq	r0, [r2], #-4
    2eac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2eb0:	00140104 	andseq	r0, r4, r4, lsl #2
    2eb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2eb8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2ebc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2ec0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ec4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2ec8:	04020005 	streq	r0, [r2], #-5
    2ecc:	0abe0301 	beq	fef83ad8 <_estack+0xdef828a0>
    2ed0:	04020001 	streq	r0, [r2], #-1
    2ed4:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2ed8:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2edc:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2ee0:	01060204 	tsteq	r6, r4, lsl #4
    2ee4:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2ee8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2eec:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    2ef0:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2ef4:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    2ef8:	2001060b 	andcs	r0, r1, fp, lsl #12
    2efc:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2f00:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    2f04:	06070520 	streq	r0, [r7], -r0, lsr #10
    2f08:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    2f0c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2f10:	3e060104 	adfccs	f0, f6, f4
    2f14:	01040200 	mrseq	r0, R12_usr
    2f18:	04020001 	streq	r0, [r2], #-1
    2f1c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2f20:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2f24:	001f0502 	andseq	r0, pc, r2, lsl #10
    2f28:	03010402 	movweq	r0, #5122	; 0x1402
    2f2c:	052074f1 	streq	r7, [r0, #-1265]!	; 0xfffffb0f
    2f30:	04020005 	streq	r0, [r2], #-5
    2f34:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2f38:	01040200 	mrseq	r0, R12_usr
    2f3c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2f40:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2f44:	06010402 	streq	r0, [r1], -r2, lsl #8
    2f48:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2f4c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2f50:	00050501 	andeq	r0, r5, r1, lsl #10
    2f54:	03010402 	movweq	r0, #5122	; 0x1402
    2f58:	00010b8a 	andeq	r0, r1, sl, lsl #23
    2f5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2f60:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2f64:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2f68:	75a40301 	strvc	r0, [r4, #769]!	; 0x301
    2f6c:	00040501 	andeq	r0, r4, r1, lsl #10
    2f70:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2f74:	01040200 	mrseq	r0, R12_usr
    2f78:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2f7c:	00200601 	eoreq	r0, r0, r1, lsl #12
    2f80:	06010402 	streq	r0, [r1], -r2, lsl #8
    2f84:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2f88:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2f8c:	00050501 	andeq	r0, r5, r1, lsl #10
    2f90:	03010402 	movweq	r0, #5122	; 0x1402
    2f94:	00010ad7 	ldrdeq	r0, [r1], -r7
    2f98:	06020402 	streq	r0, [r2], -r2, lsl #8
    2f9c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2fa0:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2fa4:	02040200 	andeq	r0, r4, #0, 4
    2fa8:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2fac:	02040200 	andeq	r0, r4, #0, 4
    2fb0:	06070520 	streq	r0, [r7], -r0, lsr #10
    2fb4:	06280524 	strteq	r0, [r8], -r4, lsr #10
    2fb8:	06070501 	streq	r0, [r7], -r1, lsl #10
    2fbc:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    2fc0:	3c0a0501 	cfstr32cc	mvfx0, [sl], {1}
    2fc4:	03060305 	movweq	r0, #25349	; 0x6305
    2fc8:	1605200e 	strne	r2, [r5], -lr
    2fcc:	03050106 	movweq	r0, #20742	; 0x5106
    2fd0:	16052f06 	strne	r2, [r5], -r6, lsl #30
    2fd4:	03050106 	movweq	r0, #20742	; 0x5106
    2fd8:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    2fdc:	03050106 	movweq	r0, #20742	; 0x5106
    2fe0:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    2fe4:	03050106 	movweq	r0, #20742	; 0x5106
    2fe8:	11053d06 	tstne	r5, r6, lsl #26
    2fec:	03050106 	movweq	r0, #20742	; 0x5106
    2ff0:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    2ff4:	03050106 	movweq	r0, #20742	; 0x5106
    2ff8:	01052206 	tsteq	r5, r6, lsl #4
    2ffc:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    3000:	01040200 	mrseq	r0, R12_usr
    3004:	7fbe0306 	svcvc	0x00be0306
    3008:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    300c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3010:	00010104 	andeq	r0, r1, r4, lsl #2
    3014:	01010402 	tsteq	r1, r2, lsl #8
    3018:	1f050204 	svcne	0x00050204
    301c:	01040200 	mrseq	r0, R12_usr
    3020:	20759003 	rsbscs	r9, r5, r3
    3024:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3028:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    302c:	04020004 	streq	r0, [r2], #-4
    3030:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3034:	2e060104 	adfcss	f0, f6, f4
    3038:	01040200 	mrseq	r0, R12_usr
    303c:	02002f06 	andeq	r2, r0, #6, 30
    3040:	01060104 	tsteq	r6, r4, lsl #2
    3044:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3048:	01040200 	mrseq	r0, R12_usr
    304c:	010aeb03 	tsteq	sl, r3, lsl #22
    3050:	01040200 	mrseq	r0, R12_usr
    3054:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3058:	02001f05 	andeq	r1, r0, #5, 30
    305c:	c3030104 	movwgt	r0, #12548	; 0x3104
    3060:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    3064:	01040200 	mrseq	r0, R12_usr
    3068:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    306c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3070:	20060104 	andcs	r0, r6, r4, lsl #2
    3074:	01040200 	mrseq	r0, R12_usr
    3078:	02002f06 	andeq	r2, r0, #6, 30
    307c:	01060104 	tsteq	r6, r4, lsl #2
    3080:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3084:	01040200 	mrseq	r0, R12_usr
    3088:	010ab803 	tsteq	sl, r3, lsl #16
    308c:	01040200 	mrseq	r0, R12_usr
    3090:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    3094:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
    3098:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    309c:	0b053c0c 	bleq	1520d4 <_Min_Heap_Size+0x1518d4>
    30a0:	1c053106 	stfnes	f3, [r5], {6}
    30a4:	0b050106 	bleq	1434c4 <_Min_Heap_Size+0x142cc4>
    30a8:	12053006 	andne	r3, r5, #6
    30ac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    30b0:	2e140306 	cdpcs	3, 1, cr0, cr4, cr6, {0}
    30b4:	01060d05 	tsteq	r6, r5, lsl #26
    30b8:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    30bc:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    30c0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    30c4:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    30c8:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    30cc:	01010002 	tsteq	r1, r2
    30d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    30d4:	00000002 	andeq	r0, r0, r2
    30d8:	0f9c0300 	svceq	0x009c0300
    30dc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    30e0:	04020003 	streq	r0, [r2], #-3
    30e4:	00300601 	eorseq	r0, r0, r1, lsl #12
    30e8:	01010402 	tsteq	r1, r2, lsl #8
    30ec:	01040200 	mrseq	r0, R12_usr
    30f0:	04020001 	streq	r0, [r2], #-1
    30f4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    30f8:	02001f05 	andeq	r1, r0, #5, 30
    30fc:	bd030104 	stflts	f0, [r3, #-16]
    3100:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    3104:	01040200 	mrseq	r0, R12_usr
    3108:	00040514 	andeq	r0, r4, r4, lsl r5
    310c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3110:	01040200 	mrseq	r0, R12_usr
    3114:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3118:	2f060104 	svccs	0x00060104
    311c:	01040200 	mrseq	r0, R12_usr
    3120:	01040106 	tsteq	r4, r6, lsl #2
    3124:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3128:	be030104 	adflts	f0, f3, f4
    312c:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3130:	2e060104 	adfcss	f0, f6, f4
    3134:	1f050204 	svcne	0x00050204
    3138:	01040200 	mrseq	r0, R12_usr
    313c:	0174f003 	cmneq	r4, r3	; <UNPREDICTABLE>
    3140:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3144:	00140104 	andseq	r0, r4, r4, lsl #2
    3148:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    314c:	01040200 	mrseq	r0, R12_usr
    3150:	02002006 	andeq	r2, r0, #6
    3154:	2f060104 	svccs	0x00060104
    3158:	01040200 	mrseq	r0, R12_usr
    315c:	01040106 	tsteq	r4, r6, lsl #2
    3160:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3164:	8b030104 	blhi	c357c <_Min_Heap_Size+0xc2d7c>
    3168:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    316c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    3170:	02040200 	andeq	r0, r4, #0, 4
    3174:	00070515 	andeq	r0, r7, r5, lsl r5
    3178:	06020402 	streq	r0, [r2], -r2, lsl #8
    317c:	04020001 	streq	r0, [r2], #-1
    3180:	06052002 	streq	r2, [r5], -r2
    3184:	02040200 	andeq	r0, r4, #0, 4
    3188:	00050520 	andeq	r0, r5, r0, lsr #10
    318c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3190:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3194:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3198:	00010104 	andeq	r0, r1, r4, lsl #2
    319c:	01010402 	tsteq	r1, r2, lsl #8
    31a0:	1f050204 	svcne	0x00050204
    31a4:	01040200 	mrseq	r0, R12_usr
    31a8:	2074b803 	rsbscs	fp, r4, r3, lsl #16
    31ac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    31b0:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    31b4:	04020004 	streq	r0, [r2], #-4
    31b8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    31bc:	2e060104 	adfcss	f0, f6, f4
    31c0:	01040200 	mrseq	r0, R12_usr
    31c4:	02002f06 	andeq	r2, r0, #6, 30
    31c8:	01060104 	tsteq	r6, r4, lsl #2
    31cc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    31d0:	01040200 	mrseq	r0, R12_usr
    31d4:	010bc303 	tsteq	fp, r3, lsl #6
    31d8:	01040200 	mrseq	r0, R12_usr
    31dc:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    31e0:	02001f05 	andeq	r1, r0, #5, 30
    31e4:	eb030104 	bl	c35fc <_Min_Heap_Size+0xc2dfc>
    31e8:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    31ec:	01040200 	mrseq	r0, R12_usr
    31f0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    31f4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    31f8:	20060104 	andcs	r0, r6, r4, lsl #2
    31fc:	01040200 	mrseq	r0, R12_usr
    3200:	02002f06 	andeq	r2, r0, #6, 30
    3204:	01060104 	tsteq	r6, r4, lsl #2
    3208:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    320c:	01040200 	mrseq	r0, R12_usr
    3210:	010b9003 	tsteq	fp, r3
    3214:	02040200 	andeq	r0, r4, #0, 4
    3218:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    321c:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3220:	0402000e 	streq	r0, [r2], #-14
    3224:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3228:	04020008 	streq	r0, [r2], #-8
    322c:	07052002 	streq	r2, [r5, -r2]
    3230:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    3234:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3238:	0b053006 	bleq	14f258 <_Min_Heap_Size+0x14ea58>
    323c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3240:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    3244:	200e0306 	andcs	r0, lr, r6, lsl #6
    3248:	01061605 	tsteq	r6, r5, lsl #12
    324c:	31060305 	tstcc	r6, r5, lsl #6
    3250:	01061105 	tsteq	r6, r5, lsl #2
    3254:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    3258:	13060105 	movwne	r0, #24837	; 0x6105
    325c:	03060905 	movweq	r0, #26885	; 0x6905
    3260:	0d05206e 	stceq	0, cr2, [r5, #-440]	; 0xfffffe48
    3264:	0c050106 	stfeqs	f0, [r5], {6}
    3268:	060b053c 			; <UNDEFINED> instruction: 0x060b053c
    326c:	061c0531 			; <UNDEFINED> instruction: 0x061c0531
    3270:	060b0501 	streq	r0, [fp], -r1, lsl #10
    3274:	06120530 			; <UNDEFINED> instruction: 0x06120530
    3278:	00020201 	andeq	r0, r2, r1, lsl #4
    327c:	01050101 	tsteq	r5, r1, lsl #2
    3280:	00020500 	andeq	r0, r2, r0, lsl #10
    3284:	03000000 	movweq	r0, #0
    3288:	06010fcf 	streq	r0, [r1], -pc, asr #31
    328c:	00030501 	andeq	r0, r3, r1, lsl #10
    3290:	06010402 	streq	r0, [r1], -r2, lsl #8
    3294:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    3298:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    329c:	00010104 	andeq	r0, r1, r4, lsl #2
    32a0:	01010402 	tsteq	r1, r2, lsl #8
    32a4:	1f050204 	svcne	0x00050204
    32a8:	01040200 	mrseq	r0, R12_usr
    32ac:	20748a03 	rsbscs	r8, r4, r3, lsl #20
    32b0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    32b4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    32b8:	04020004 	streq	r0, [r2], #-4
    32bc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    32c0:	2e060104 	adfcss	f0, f6, f4
    32c4:	01040200 	mrseq	r0, R12_usr
    32c8:	02002f06 	andeq	r2, r0, #6, 30
    32cc:	01060104 	tsteq	r6, r4, lsl #2
    32d0:	03050104 	movweq	r0, #20740	; 0x5104
    32d4:	01040200 	mrseq	r0, R12_usr
    32d8:	010bf103 	tsteq	fp, r3, lsl #2	; <UNPREDICTABLE>
    32dc:	01040200 	mrseq	r0, R12_usr
    32e0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    32e4:	02001f05 	andeq	r1, r0, #5, 30
    32e8:	bd030104 	stflts	f0, [r3, #-16]
    32ec:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    32f0:	01040200 	mrseq	r0, R12_usr
    32f4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    32f8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    32fc:	20060104 	andcs	r0, r6, r4, lsl #2
    3300:	01040200 	mrseq	r0, R12_usr
    3304:	02002f06 	andeq	r2, r0, #6, 30
    3308:	01060104 	tsteq	r6, r4, lsl #2
    330c:	03050104 	movweq	r0, #20740	; 0x5104
    3310:	01040200 	mrseq	r0, R12_usr
    3314:	010bbe03 	tsteq	fp, r3, lsl #28
    3318:	01040200 	mrseq	r0, R12_usr
    331c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3320:	00010601 	andeq	r0, r1, r1, lsl #12
    3324:	13010402 	movwne	r0, #5122	; 0x1402
    3328:	01040200 	mrseq	r0, R12_usr
    332c:	04020001 	streq	r0, [r2], #-1
    3330:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3334:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3338:	001f0502 	andseq	r0, pc, r2, lsl #10
    333c:	03010402 	movweq	r0, #5122	; 0x1402
    3340:	05207489 	streq	r7, [r0, #-1161]!	; 0xfffffb77
    3344:	04020005 	streq	r0, [r2], #-5
    3348:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    334c:	01040200 	mrseq	r0, R12_usr
    3350:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3354:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3358:	06010402 	streq	r0, [r1], -r2, lsl #8
    335c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3360:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3364:	00030501 	andeq	r0, r3, r1, lsl #10
    3368:	03010402 	movweq	r0, #5122	; 0x1402
    336c:	00010bf2 	strdeq	r0, [r1], -r2
    3370:	06010402 	streq	r0, [r1], -r2, lsl #8
    3374:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3378:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    337c:	74bc0301 	ldrtvc	r0, [ip], #769	; 0x301
    3380:	00040501 	andeq	r0, r4, r1, lsl #10
    3384:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3388:	01040200 	mrseq	r0, R12_usr
    338c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3390:	00200601 	eoreq	r0, r0, r1, lsl #12
    3394:	06010402 	streq	r0, [r1], -r2, lsl #8
    3398:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    339c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    33a0:	00030501 	andeq	r0, r3, r1, lsl #10
    33a4:	03010402 	movweq	r0, #5122	; 0x1402
    33a8:	00010bbf 			; <UNDEFINED> instruction: 0x00010bbf
    33ac:	06020402 	streq	r0, [r2], -r2, lsl #8
    33b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    33b4:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    33b8:	02040200 	andeq	r0, r4, #0, 4
    33bc:	06050106 	streq	r0, [r5], -r6, lsl #2
    33c0:	02040200 	andeq	r0, r4, #0, 4
    33c4:	00050520 	andeq	r0, r5, r0, lsr #10
    33c8:	06020402 	streq	r0, [r2], -r2, lsl #8
    33cc:	00030530 	andeq	r0, r3, r0, lsr r5
    33d0:	16020402 	strne	r0, [r2], -r2, lsl #8
    33d4:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    33d8:	01060204 	tsteq	r6, r4, lsl #4
    33dc:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    33e0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    33e4:	04020005 	streq	r0, [r2], #-5
    33e8:	003e0601 	eorseq	r0, lr, r1, lsl #12
    33ec:	01010402 	tsteq	r1, r2, lsl #8
    33f0:	01040200 	mrseq	r0, R12_usr
    33f4:	04020001 	streq	r0, [r2], #-1
    33f8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    33fc:	02001f05 	andeq	r1, r0, #5, 30
    3400:	fe030104 	cdp2	1, 0, cr0, cr3, cr4, {0}
    3404:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    3408:	01040200 	mrseq	r0, R12_usr
    340c:	00040514 	andeq	r0, r4, r4, lsl r5
    3410:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3414:	01040200 	mrseq	r0, R12_usr
    3418:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    341c:	2f060104 	svccs	0x00060104
    3420:	01040200 	mrseq	r0, R12_usr
    3424:	01040106 	tsteq	r4, r6, lsl #2
    3428:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    342c:	fd030104 	stc2	1, cr0, [r3, #-16]
    3430:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3434:	2e060104 	adfcss	f0, f6, f4
    3438:	1f050204 	svcne	0x00050204
    343c:	01040200 	mrseq	r0, R12_usr
    3440:	0174b103 	cmneq	r4, r3, lsl #2
    3444:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3448:	00140104 	andseq	r0, r4, r4, lsl #2
    344c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3450:	01040200 	mrseq	r0, R12_usr
    3454:	02002006 	andeq	r2, r0, #6
    3458:	2f060104 	svccs	0x00060104
    345c:	01040200 	mrseq	r0, R12_usr
    3460:	01040106 	tsteq	r4, r6, lsl #2
    3464:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3468:	ca030104 	bgt	c3880 <_Min_Heap_Size+0xc3080>
    346c:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3470:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    3474:	02040200 	andeq	r0, r4, #0, 4
    3478:	000e0515 	andeq	r0, lr, r5, lsl r5
    347c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3480:	00080501 	andeq	r0, r8, r1, lsl #10
    3484:	20020402 	andcs	r0, r2, r2, lsl #8
    3488:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    348c:	01062805 	tsteq	r6, r5, lsl #16
    3490:	30060705 	andcc	r0, r6, r5, lsl #14
    3494:	01060b05 	tsteq	r6, r5, lsl #22
    3498:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    349c:	03060305 	movweq	r0, #25349	; 0x6305
    34a0:	1605200e 	strne	r2, [r5], -lr
    34a4:	03050106 	movweq	r0, #20742	; 0x5106
    34a8:	12053106 	andne	r3, r5, #-2147483647	; 0x80000001
    34ac:	03050106 	movweq	r0, #20742	; 0x5106
    34b0:	18053d06 	stmdane	r5, {r1, r2, r8, sl, fp, ip, sp}
    34b4:	03050106 	movweq	r0, #20742	; 0x5106
    34b8:	01052206 	tsteq	r5, r6, lsl #4
    34bc:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    34c0:	01040200 	mrseq	r0, R12_usr
    34c4:	205c0306 	subscs	r0, ip, r6, lsl #6
    34c8:	01040200 	mrseq	r0, R12_usr
    34cc:	04020001 	streq	r0, [r2], #-1
    34d0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    34d4:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    34d8:	001f0502 	andseq	r0, pc, r2, lsl #10
    34dc:	03010402 	movweq	r0, #5122	; 0x1402
    34e0:	05207484 	streq	r7, [r0, #-1156]!	; 0xfffffb7c
    34e4:	04020005 	streq	r0, [r2], #-5
    34e8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    34ec:	01040200 	mrseq	r0, R12_usr
    34f0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    34f4:	002e0601 	eoreq	r0, lr, r1, lsl #12
    34f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    34fc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3500:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3504:	00050501 	andeq	r0, r5, r1, lsl #10
    3508:	03010402 	movweq	r0, #5122	; 0x1402
    350c:	00010bf7 	strdeq	r0, [r1], -r7
    3510:	06010402 	streq	r0, [r1], -r2, lsl #8
    3514:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3518:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    351c:	74b70301 	ldrtvc	r0, [r7], #769	; 0x301
    3520:	00040501 	andeq	r0, r4, r1, lsl #10
    3524:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3528:	01040200 	mrseq	r0, R12_usr
    352c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3530:	00200601 	eoreq	r0, r0, r1, lsl #12
    3534:	06010402 	streq	r0, [r1], -r2, lsl #8
    3538:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    353c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3540:	00050501 	andeq	r0, r5, r1, lsl #10
    3544:	03010402 	movweq	r0, #5122	; 0x1402
    3548:	00010bc4 	andeq	r0, r1, r4, asr #23
    354c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3550:	03060905 	movweq	r0, #26885	; 0x6905
    3554:	0d050111 	stfeqs	f0, [r5, #-68]	; 0xffffffbc
    3558:	0c050106 	stfeqs	f0, [r5], {6}
    355c:	060b053c 			; <UNDEFINED> instruction: 0x060b053c
    3560:	061c0531 			; <UNDEFINED> instruction: 0x061c0531
    3564:	060b0501 	streq	r0, [fp], -r1, lsl #10
    3568:	06120530 			; <UNDEFINED> instruction: 0x06120530
    356c:	00020201 	andeq	r0, r2, r1, lsl #4
    3570:	01050101 	tsteq	r5, r1, lsl #2
    3574:	10020500 	andne	r0, r2, r0, lsl #10
    3578:	0308000e 	movweq	r0, #32782	; 0x800e
    357c:	050114a0 	streq	r1, [r1, #-1184]	; 0xfffffb60
    3580:	01051403 	tsteq	r5, r3, lsl #8
    3584:	01021606 	tsteq	r2, r6, lsl #12
    3588:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    358c:	02050001 	andeq	r0, r5, #1
    3590:	00000000 	andeq	r0, r0, r0
    3594:	0117ac03 	tsteq	r7, r3, lsl #24
    3598:	03050106 	movweq	r0, #20742	; 0x5106
    359c:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    35a0:	03050106 	movweq	r0, #20742	; 0x5106
    35a4:	0c052206 	sfmeq	f2, 4, [r5], {6}
    35a8:	16050106 	strne	r0, [r5], -r6, lsl #2
    35ac:	20060520 	andcs	r0, r6, r0, lsr #10
    35b0:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    35b4:	01061805 	tsteq	r6, r5, lsl #16
    35b8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    35bc:	32060104 	andcc	r0, r6, #4, 2
    35c0:	01040200 	mrseq	r0, R12_usr
    35c4:	04020001 	streq	r0, [r2], #-1
    35c8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    35cc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    35d0:	001f0502 	andseq	r0, pc, r2, lsl #10
    35d4:	03010402 	movweq	r0, #5122	; 0x1402
    35d8:	05206ca6 	streq	r6, [r0, #-3238]!	; 0xfffff35a
    35dc:	04020005 	streq	r0, [r2], #-5
    35e0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    35e4:	01040200 	mrseq	r0, R12_usr
    35e8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    35ec:	002e0601 	eoreq	r0, lr, r1, lsl #12
    35f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    35f4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    35f8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    35fc:	00050501 	andeq	r0, r5, r1, lsl #10
    3600:	03010402 	movweq	r0, #5122	; 0x1402
    3604:	000113d5 	ldrdeq	r1, [r1], -r5
    3608:	06010402 	streq	r0, [r1], -r2, lsl #8
    360c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3610:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3614:	6cd90301 	ldclvs	3, cr0, [r9], {1}
    3618:	00040501 	andeq	r0, r4, r1, lsl #10
    361c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3620:	01040200 	mrseq	r0, R12_usr
    3624:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3628:	00200601 	eoreq	r0, r0, r1, lsl #12
    362c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3630:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3634:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3638:	00050501 	andeq	r0, r5, r1, lsl #10
    363c:	03010402 	movweq	r0, #5122	; 0x1402
    3640:	000113a2 	andeq	r1, r1, r2, lsr #7
    3644:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3648:	01040200 	mrseq	r0, R12_usr
    364c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3650:	00150104 	andseq	r0, r5, r4, lsl #2
    3654:	01010402 	tsteq	r1, r2, lsl #8
    3658:	01040200 	mrseq	r0, R12_usr
    365c:	04020001 	streq	r0, [r2], #-1
    3660:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3664:	02001f05 	andeq	r1, r0, #5, 30
    3668:	a3030104 	movwge	r0, #12548	; 0x3104
    366c:	0505206c 	streq	r2, [r5, #-108]	; 0xffffff94
    3670:	01040200 	mrseq	r0, R12_usr
    3674:	00040514 	andeq	r0, r4, r4, lsl r5
    3678:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    367c:	01040200 	mrseq	r0, R12_usr
    3680:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3684:	2f060104 	svccs	0x00060104
    3688:	01040200 	mrseq	r0, R12_usr
    368c:	01040106 	tsteq	r4, r6, lsl #2
    3690:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3694:	d8030104 	stmdale	r3, {r2, r8}
    3698:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    369c:	2e060104 	adfcss	f0, f6, f4
    36a0:	1f050204 	svcne	0x00050204
    36a4:	01040200 	mrseq	r0, R12_usr
    36a8:	016cd603 	cmneq	ip, r3, lsl #12
    36ac:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    36b0:	00140104 	andseq	r0, r4, r4, lsl #2
    36b4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    36b8:	01040200 	mrseq	r0, R12_usr
    36bc:	02002006 	andeq	r2, r0, #6
    36c0:	2f060104 	svccs	0x00060104
    36c4:	01040200 	mrseq	r0, R12_usr
    36c8:	01040106 	tsteq	r4, r6, lsl #2
    36cc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    36d0:	a5030104 	strge	r0, [r3, #-260]	; 0xfffffefc
    36d4:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    36d8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    36dc:	010e0301 	tsteq	lr, r1, lsl #6
    36e0:	1d060505 	cfstr32ne	mvfx0, [r6, #-20]	; 0xffffffec
    36e4:	31060105 	tstcc	r6, r5, lsl #2
    36e8:	01000102 	tsteq	r0, r2, lsl #2
    36ec:	00010501 	andeq	r0, r1, r1, lsl #10
    36f0:	0e120205 	cdpeq	2, 1, cr0, cr2, cr5, {0}
    36f4:	f1030800 			; <UNDEFINED> instruction: 0xf1030800
    36f8:	0106011b 	tsteq	r6, fp, lsl r1
    36fc:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3700:	0611055b 			; <UNDEFINED> instruction: 0x0611055b
    3704:	06030501 	streq	r0, [r3], -r1, lsl #10
    3708:	01053143 	tsteq	r5, r3, asr #2
    370c:	02021306 	andeq	r1, r2, #402653184	; 0x18000000
    3710:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3714:	02050001 	andeq	r0, r5, #1
    3718:	00000000 	andeq	r0, r0, r0
    371c:	0114af03 	tsteq	r4, r3, lsl #30
    3720:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3724:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    3728:	01010001 	tsteq	r1, r1
    372c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3730:	00000002 	andeq	r0, r0, r2
    3734:	17cf0300 	strbne	r0, [pc, r0, lsl #6]
    3738:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    373c:	19210603 	stmdbne	r1!, {r0, r1, r9, sl}
    3740:	01052006 	tsteq	r5, r6
    3744:	00010230 	andeq	r0, r1, r0, lsr r2
    3748:	01050101 	tsteq	r5, r1, lsl #2
    374c:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    3750:	0308000e 	movweq	r0, #32782	; 0x800e
    3754:	050114be 	streq	r1, [r1, #-1214]	; 0xfffffb42
    3758:	01051403 	tsteq	r5, r3, lsl #8
    375c:	01021606 	tsteq	r2, r6, lsl #12
    3760:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3764:	02050001 	andeq	r0, r5, #1
    3768:	00000000 	andeq	r0, r0, r0
    376c:	0114cd03 	tsteq	r4, r3, lsl #26
    3770:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3774:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    3778:	01010001 	tsteq	r1, r1
    377c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3780:	000e2e02 	andeq	r2, lr, r2, lsl #28
    3784:	14dc0308 	ldrbne	r0, [ip], #776	; 0x308
    3788:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    378c:	16060105 	strne	r0, [r6], -r5, lsl #2
    3790:	01000102 	tsteq	r0, r2, lsl #2
    3794:	00010501 	andeq	r0, r1, r1, lsl #10
    3798:	00000205 	andeq	r0, r0, r5, lsl #4
    379c:	c7030000 	strgt	r0, [r3, -r0]
    37a0:	01060118 	tsteq	r6, r8, lsl r1
    37a4:	21060305 	tstcs	r6, r5, lsl #6
    37a8:	06170513 			; <UNDEFINED> instruction: 0x06170513
    37ac:	06030501 	streq	r0, [r3], -r1, lsl #10
    37b0:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    37b4:	06030501 	streq	r0, [r3], -r1, lsl #10
    37b8:	060d052f 	streq	r0, [sp], -pc, lsr #10
    37bc:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    37c0:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
    37c4:	01061005 	tsteq	r6, r5
    37c8:	4b060305 	blmi	1843e4 <_Min_Heap_Size+0x183be4>
    37cc:	01060d05 	tsteq	r6, r5, lsl #26
    37d0:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    37d4:	05340603 	ldreq	r0, [r4, #-1539]!	; 0xfffff9fd
    37d8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    37dc:	05500603 	ldrbeq	r0, [r0, #-1539]	; 0xfffff9fd
    37e0:	203e0601 	eorscs	r0, lr, r1, lsl #12
    37e4:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    37e8:	6a030104 	bvs	c3c00 <_Min_Heap_Size+0xc3400>
    37ec:	0605052e 	streq	r0, [r5], -lr, lsr #10
    37f0:	06180530 			; <UNDEFINED> instruction: 0x06180530
    37f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    37f8:	0520062f 	streq	r0, [r0, #-1583]!	; 0xfffff9d1
    37fc:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    3800:	05054101 	streq	r4, [r5, #-257]	; 0xfffffeff
    3804:	18053006 	stmdane	r5, {r1, r2, ip, sp}
    3808:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    380c:	3c062f06 	stccc	15, cr2, [r6], {6}
    3810:	01000102 	tsteq	r0, r2, lsl #2
    3814:	00010501 	andeq	r0, r1, r1, lsl #10
    3818:	0e300205 	cdpeq	2, 3, cr0, cr0, cr5, {0}
    381c:	9f030800 	svcls	0x00030800
    3820:	0106011a 	tsteq	r6, sl, lsl r1
    3824:	21060305 	tstcs	r6, r5, lsl #6
    3828:	01061705 	tsteq	r6, r5, lsl #14
    382c:	21060305 	tstcs	r6, r5, lsl #6
    3830:	01061605 	tsteq	r6, r5, lsl #12
    3834:	2f060305 	svccs	0x00060305
    3838:	01061605 	tsteq	r6, r5, lsl #12
    383c:	27060305 	strcs	r0, [r6, -r5, lsl #6]
    3840:	30060105 	andcc	r0, r6, r5, lsl #2
    3844:	01000102 	tsteq	r0, r2, lsl #2
    3848:	00010501 	andeq	r0, r1, r1, lsl #10
    384c:	00000205 	andeq	r0, r0, r5, lsl #4
    3850:	ea030000 	b	c3858 <_Min_Heap_Size+0xc3058>
    3854:	03050114 	movweq	r0, #20756	; 0x5114
    3858:	06010514 			; <UNDEFINED> instruction: 0x06010514
    385c:	00010217 	andeq	r0, r1, r7, lsl r2
    3860:	01050101 	tsteq	r5, r1, lsl #2
    3864:	00020500 	andeq	r0, r2, r0, lsl #10
    3868:	03000000 	movweq	r0, #0
    386c:	0601108c 	streq	r1, [r1], -ip, lsl #1
    3870:	06030501 	streq	r0, [r3], -r1, lsl #10
    3874:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3878:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    387c:	00010104 	andeq	r0, r1, r4, lsl #2
    3880:	01010402 	tsteq	r1, r2, lsl #8
    3884:	01040200 	mrseq	r0, R12_usr
    3888:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    388c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3890:	73cb0301 	bicvc	r0, fp, #67108864	; 0x4000000
    3894:	00050520 	andeq	r0, r5, r0, lsr #10
    3898:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    389c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    38a0:	00140104 	andseq	r0, r4, r4, lsl #2
    38a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    38a8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    38ac:	002f0601 	eoreq	r0, pc, r1, lsl #12
    38b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    38b4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    38b8:	04020003 	streq	r0, [r2], #-3
    38bc:	0cb00301 	ldceq	3, cr0, [r0], #4
    38c0:	04020001 	streq	r0, [r2], #-1
    38c4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    38c8:	001f0502 	andseq	r0, pc, r2, lsl #10
    38cc:	03010402 	movweq	r0, #5122	; 0x1402
    38d0:	050173fe 	streq	r7, [r1, #-1022]	; 0xfffffc02
    38d4:	04020004 	streq	r0, [r2], #-4
    38d8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    38dc:	00140104 	andseq	r0, r4, r4, lsl #2
    38e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    38e4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    38e8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    38ec:	06010402 	streq	r0, [r1], -r2, lsl #8
    38f0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    38f4:	04020003 	streq	r0, [r2], #-3
    38f8:	0bfd0301 	bleq	fff44504 <_estack+0xdff432cc>
    38fc:	04020001 	streq	r0, [r2], #-1
    3900:	02002e01 	andeq	r2, r0, #1, 28
    3904:	01060104 	tsteq	r6, r4, lsl #2
    3908:	01040200 	mrseq	r0, R12_usr
    390c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    3910:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3914:	00010104 	andeq	r0, r1, r4, lsl #2
    3918:	01010402 	tsteq	r1, r2, lsl #8
    391c:	1f050204 	svcne	0x00050204
    3920:	01040200 	mrseq	r0, R12_usr
    3924:	2073ca03 	rsbscs	ip, r3, r3, lsl #20
    3928:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    392c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3930:	04020004 	streq	r0, [r2], #-4
    3934:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3938:	2e060104 	adfcss	f0, f6, f4
    393c:	01040200 	mrseq	r0, R12_usr
    3940:	02002f06 	andeq	r2, r0, #6, 30
    3944:	01060104 	tsteq	r6, r4, lsl #2
    3948:	03050104 	movweq	r0, #20740	; 0x5104
    394c:	01040200 	mrseq	r0, R12_usr
    3950:	010cb103 	tsteq	ip, r3, lsl #2
    3954:	01040200 	mrseq	r0, R12_usr
    3958:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    395c:	02001f05 	andeq	r1, r0, #5, 30
    3960:	fd030104 	stc2	1, cr0, [r3, #-16]
    3964:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    3968:	01040200 	mrseq	r0, R12_usr
    396c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3970:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3974:	20060104 	andcs	r0, r6, r4, lsl #2
    3978:	01040200 	mrseq	r0, R12_usr
    397c:	02002f06 	andeq	r2, r0, #6, 30
    3980:	01060104 	tsteq	r6, r4, lsl #2
    3984:	03050104 	movweq	r0, #20740	; 0x5104
    3988:	01040200 	mrseq	r0, R12_usr
    398c:	010bfe03 	tsteq	fp, r3, lsl #28	; <UNPREDICTABLE>
    3990:	02040200 	andeq	r0, r4, #0, 4
    3994:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3998:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    399c:	0402000c 	streq	r0, [r2], #-12
    39a0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    39a4:	04020006 	streq	r0, [r2], #-6
    39a8:	05052002 	streq	r2, [r5, #-2]
    39ac:	02040200 	andeq	r0, r4, #0, 4
    39b0:	03053006 	movweq	r3, #20486	; 0x5006
    39b4:	02040200 	andeq	r0, r4, #0, 4
    39b8:	000c0518 	andeq	r0, ip, r8, lsl r5
    39bc:	06020402 	streq	r0, [r2], -r2, lsl #8
    39c0:	00060501 	andeq	r0, r6, r1, lsl #10
    39c4:	20020402 	andcs	r0, r2, r2, lsl #8
    39c8:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    39cc:	01060905 	tsteq	r6, r5, lsl #18
    39d0:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    39d4:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    39d8:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    39dc:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    39e0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    39e4:	05052006 	streq	r2, [r5, #-6]
    39e8:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    39ec:	08050106 	stmdaeq	r5, {r1, r2, r8}
    39f0:	0607052e 	streq	r0, [r7], -lr, lsr #10
    39f4:	0628053e 			; <UNDEFINED> instruction: 0x0628053e
    39f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    39fc:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    3a00:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    3a04:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    3a08:	01040200 	mrseq	r0, R12_usr
    3a0c:	02003f06 	andeq	r3, r0, #6, 30
    3a10:	00010104 	andeq	r0, r1, r4, lsl #2
    3a14:	01010402 	tsteq	r1, r2, lsl #8
    3a18:	01040200 	mrseq	r0, R12_usr
    3a1c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3a20:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3a24:	739f0301 	orrsvc	r0, pc, #67108864	; 0x4000000
    3a28:	00050520 	andeq	r0, r5, r0, lsr #10
    3a2c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3a30:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3a34:	00140104 	andseq	r0, r4, r4, lsl #2
    3a38:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a3c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3a40:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a44:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a48:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a4c:	04020005 	streq	r0, [r2], #-5
    3a50:	0cdc0301 	ldcleq	3, cr0, [ip], {1}
    3a54:	04020001 	streq	r0, [r2], #-1
    3a58:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3a5c:	001f0502 	andseq	r0, pc, r2, lsl #10
    3a60:	03010402 	movweq	r0, #5122	; 0x1402
    3a64:	050173d2 	streq	r7, [r1, #-978]	; 0xfffffc2e
    3a68:	04020004 	streq	r0, [r2], #-4
    3a6c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3a70:	00140104 	andseq	r0, r4, r4, lsl #2
    3a74:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a78:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3a7c:	003d0601 	eorseq	r0, sp, r1, lsl #12
    3a80:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a84:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a88:	04020005 	streq	r0, [r2], #-5
    3a8c:	0ca90301 	stceq	3, cr0, [r9], #4
    3a90:	04020001 	streq	r0, [r2], #-1
    3a94:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3a98:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3a9c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    3aa0:	01060204 	tsteq	r6, r4, lsl #4
    3aa4:	02000805 	andeq	r0, r0, #327680	; 0x50000
    3aa8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3aac:	05340607 	ldreq	r0, [r4, #-1543]!	; 0xfffff9f9
    3ab0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    3ab4:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3ab8:	0e052206 	cdpeq	2, 0, cr2, cr5, cr6, {0}
    3abc:	2a050106 	bcs	143edc <_Min_Heap_Size+0x1436dc>
    3ac0:	030c0520 	movweq	r0, #50464	; 0xc520
    3ac4:	05052e46 	streq	r2, [r5, #-3654]	; 0xfffff1ba
    3ac8:	01040200 	mrseq	r0, R12_usr
    3acc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    3ad0:	01040200 	mrseq	r0, R12_usr
    3ad4:	04020001 	streq	r0, [r2], #-1
    3ad8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3adc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3ae0:	001f0502 	andseq	r0, pc, r2, lsl #10
    3ae4:	03010402 	movweq	r0, #5122	; 0x1402
    3ae8:	052073c5 	streq	r7, [r0, #-965]!	; 0xfffffc3b
    3aec:	04020005 	streq	r0, [r2], #-5
    3af0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3af4:	01040200 	mrseq	r0, R12_usr
    3af8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3afc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3b00:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b04:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3b08:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3b0c:	00050501 	andeq	r0, r5, r1, lsl #10
    3b10:	03010402 	movweq	r0, #5122	; 0x1402
    3b14:	00010cb6 			; <UNDEFINED> instruction: 0x00010cb6
    3b18:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b1c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3b20:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3b24:	73f80301 	mvnsvc	r0, #67108864	; 0x4000000
    3b28:	00040501 	andeq	r0, r4, r1, lsl #10
    3b2c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3b30:	01040200 	mrseq	r0, R12_usr
    3b34:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3b38:	00200601 	eoreq	r0, r0, r1, lsl #12
    3b3c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b40:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3b44:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3b48:	00050501 	andeq	r0, r5, r1, lsl #10
    3b4c:	03010402 	movweq	r0, #5122	; 0x1402
    3b50:	00010c83 	andeq	r0, r1, r3, lsl #25
    3b54:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3b58:	03060705 	movweq	r0, #26373	; 0x6705
    3b5c:	28050110 	stmdacs	r5, {r4, r8}
    3b60:	07050106 	streq	r0, [r5, -r6, lsl #2]
    3b64:	3c0e0306 	stccc	3, cr0, [lr], {6}
    3b68:	01062805 	tsteq	r6, r5, lsl #16
    3b6c:	59030c05 	stmdbpl	r3, {r0, r2, sl, fp}
    3b70:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    3b74:	2000c403 	andcs	ip, r0, r3, lsl #8
    3b78:	01060705 	tsteq	r6, r5, lsl #14
    3b7c:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    3b80:	04020005 	streq	r0, [r2], #-5
    3b84:	003e0601 	eorseq	r0, lr, r1, lsl #12
    3b88:	01010402 	tsteq	r1, r2, lsl #8
    3b8c:	01040200 	mrseq	r0, R12_usr
    3b90:	04020001 	streq	r0, [r2], #-1
    3b94:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3b98:	02001f05 	andeq	r1, r0, #5, 30
    3b9c:	88030104 	stmdahi	r3, {r2, r8}
    3ba0:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    3ba4:	01040200 	mrseq	r0, R12_usr
    3ba8:	00040514 	andeq	r0, r4, r4, lsl r5
    3bac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3bb0:	01040200 	mrseq	r0, R12_usr
    3bb4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3bb8:	2f060104 	svccs	0x00060104
    3bbc:	01040200 	mrseq	r0, R12_usr
    3bc0:	01040106 	tsteq	r4, r6, lsl #2
    3bc4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3bc8:	f3030104 	vrhadd.u8	d0, d3, d4
    3bcc:	0200010c 	andeq	r0, r0, #12, 2
    3bd0:	2e060104 	adfcss	f0, f6, f4
    3bd4:	1f050204 	svcne	0x00050204
    3bd8:	01040200 	mrseq	r0, R12_usr
    3bdc:	0173bb03 	cmneq	r3, r3, lsl #22
    3be0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3be4:	00140104 	andseq	r0, r4, r4, lsl #2
    3be8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3bec:	01040200 	mrseq	r0, R12_usr
    3bf0:	02002006 	andeq	r2, r0, #6
    3bf4:	2f060104 	svccs	0x00060104
    3bf8:	01040200 	mrseq	r0, R12_usr
    3bfc:	01040106 	tsteq	r4, r6, lsl #2
    3c00:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3c04:	c0030104 	andgt	r0, r3, r4, lsl #2
    3c08:	0200010c 	andeq	r0, r0, #12, 2
    3c0c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    3c10:	02040200 	andeq	r0, r4, #0, 4
    3c14:	000e0515 	andeq	r0, lr, r5, lsl r5
    3c18:	06020402 	streq	r0, [r2], -r2, lsl #8
    3c1c:	00080501 	andeq	r0, r8, r1, lsl #10
    3c20:	20020402 	andcs	r0, r2, r2, lsl #8
    3c24:	26060705 	strcs	r0, [r6], -r5, lsl #14
    3c28:	01060b05 	tsteq	r6, r5, lsl #22
    3c2c:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    3c30:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    3c34:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3c38:	0905202a 	stmdbeq	r5, {r1, r3, r5, sp}
    3c3c:	03052f06 	movweq	r2, #24326	; 0x5f06
    3c40:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    3c44:	18051505 	stmdane	r5, {r0, r2, r8, sl, ip}
    3c48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c4c:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    3c50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c54:	16052306 	strne	r2, [r5], -r6, lsl #6
    3c58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c5c:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    3c60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c64:	14053d06 	strne	r3, [r5], #-3334	; 0xfffff2fa
    3c68:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c6c:	1a052f06 	bne	14f88c <_Min_Heap_Size+0x14f08c>
    3c70:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3c74:	0c052806 	stceq	8, cr2, [r5], {6}
    3c78:	7f900306 	svcvc	0x00900306
    3c7c:	0603054a 	streq	r0, [r3], -sl, asr #10
    3c80:	2e00dc03 	cdpcs	12, 0, cr13, cr0, cr3, {0}
    3c84:	01060605 	tsteq	r6, r5, lsl #12
    3c88:	03060305 	movweq	r0, #25349	; 0x6305
    3c8c:	01052e18 	tsteq	r5, r8, lsl lr
    3c90:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    3c94:	01010005 	tsteq	r1, r5
    3c98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3c9c:	00000002 	andeq	r0, r0, r2
    3ca0:	1ae50300 	bne	ff9448a8 <_estack+0xdf943670>
    3ca4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    3ca8:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    3cac:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3cb0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    3cb4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3cb8:	03052024 	movweq	r2, #20516	; 0x5024
    3cbc:	0c053106 	stfeqs	f3, [r5], {6}
    3cc0:	06050106 	streq	r0, [r5], -r6, lsl #2
    3cc4:	06050520 	streq	r0, [r5], -r0, lsr #10
    3cc8:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    3ccc:	20080501 	andcs	r0, r8, r1, lsl #10
    3cd0:	27060305 	strcs	r0, [r6, -r5, lsl #6]
    3cd4:	01061605 	tsteq	r6, r5, lsl #12
    3cd8:	2f060305 	svccs	0x00060305
    3cdc:	01061605 	tsteq	r6, r5, lsl #12
    3ce0:	23060305 	movwcs	r0, #25349	; 0x6305
    3ce4:	01061405 	tsteq	r6, r5, lsl #8
    3ce8:	23060305 	movwcs	r0, #25349	; 0x6305
    3cec:	01061205 	tsteq	r6, r5, lsl #4
    3cf0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3cf4:	01061205 	tsteq	r6, r5, lsl #4
    3cf8:	2f060305 	svccs	0x00060305
    3cfc:	01061805 	tsteq	r6, r5, lsl #16
    3d00:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    3d04:	30060105 	andcc	r0, r6, r5, lsl #2
    3d08:	01000102 	tsteq	r0, r2, lsl #2
    3d0c:	00010501 	andeq	r0, r1, r1, lsl #10
    3d10:	00000205 	andeq	r0, r0, r5, lsl #4
    3d14:	b7030000 	strlt	r0, [r3, -r0]
    3d18:	0106011a 	tsteq	r6, sl, lsl r1
    3d1c:	21060305 	tstcs	r6, r5, lsl #6
    3d20:	01061705 	tsteq	r6, r5, lsl #14
    3d24:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3d28:	01060805 	tsteq	r6, r5, lsl #16
    3d2c:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    3d30:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    3d34:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    3d38:	05052006 	streq	r2, [r5, #-6]
    3d3c:	16052206 	strne	r2, [r5], -r6, lsl #4
    3d40:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3d44:	06030520 	streq	r0, [r3], -r0, lsr #10
    3d48:	06160527 	ldreq	r0, [r6], -r7, lsr #10
    3d4c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d50:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    3d54:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d58:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    3d5c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d60:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    3d64:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d68:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    3d6c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d70:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    3d74:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d78:	06010528 	streq	r0, [r1], -r8, lsr #10
    3d7c:	00010230 	andeq	r0, r1, r0, lsr r2
    3d80:	01050101 	tsteq	r5, r1, lsl #2
    3d84:	00020500 	andeq	r0, r2, r0, lsl #10
    3d88:	03000000 	movweq	r0, #0
    3d8c:	050114f9 	streq	r1, [r1, #-1273]	; 0xfffffb07
    3d90:	01051403 	tsteq	r5, r3, lsl #8
    3d94:	01021706 	tsteq	r2, r6, lsl #14
    3d98:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d9c:	02050001 	andeq	r0, r5, #1
    3da0:	00000000 	andeq	r0, r0, r0
    3da4:	01119303 	tsteq	r1, r3, lsl #6
    3da8:	03050106 	movweq	r0, #20742	; 0x5106
    3dac:	01040200 	mrseq	r0, R12_usr
    3db0:	02003006 	andeq	r3, r0, #6
    3db4:	00010104 	andeq	r0, r1, r4, lsl #2
    3db8:	01010402 	tsteq	r1, r2, lsl #8
    3dbc:	01040200 	mrseq	r0, R12_usr
    3dc0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3dc4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3dc8:	72c60301 	sbcvc	r0, r6, #67108864	; 0x4000000
    3dcc:	00050520 	andeq	r0, r5, r0, lsr #10
    3dd0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3dd4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3dd8:	00140104 	andseq	r0, r4, r4, lsl #2
    3ddc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3de0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3de4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3de8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3dec:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3df0:	04020003 	streq	r0, [r2], #-3
    3df4:	0db50301 	ldceq	3, cr0, [r5, #4]!
    3df8:	04020001 	streq	r0, [r2], #-1
    3dfc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3e00:	001f0502 	andseq	r0, pc, r2, lsl #10
    3e04:	03010402 	movweq	r0, #5122	; 0x1402
    3e08:	050172f9 	streq	r7, [r1, #-761]	; 0xfffffd07
    3e0c:	04020004 	streq	r0, [r2], #-4
    3e10:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3e14:	00140104 	andseq	r0, r4, r4, lsl #2
    3e18:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e1c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3e20:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3e24:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e28:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3e2c:	04020003 	streq	r0, [r2], #-3
    3e30:	0d820301 	stceq	3, cr0, [r2, #4]
    3e34:	04020001 	streq	r0, [r2], #-1
    3e38:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3e3c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3e40:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    3e44:	01060204 	tsteq	r6, r4, lsl #4
    3e48:	02040200 	andeq	r0, r4, #0, 4
    3e4c:	00060520 	andeq	r0, r6, r0, lsr #10
    3e50:	20020402 	andcs	r0, r2, r2, lsl #8
    3e54:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3e58:	3e060104 	adfccs	f0, f6, f4
    3e5c:	01040200 	mrseq	r0, R12_usr
    3e60:	04020001 	streq	r0, [r2], #-1
    3e64:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3e68:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3e6c:	001f0502 	andseq	r0, pc, r2, lsl #10
    3e70:	03010402 	movweq	r0, #5122	; 0x1402
    3e74:	052072c1 	streq	r7, [r0, #-705]!	; 0xfffffd3f
    3e78:	04020005 	streq	r0, [r2], #-5
    3e7c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3e80:	01040200 	mrseq	r0, R12_usr
    3e84:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e88:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3e8c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e90:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e94:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e98:	00050501 	andeq	r0, r5, r1, lsl #10
    3e9c:	03010402 	movweq	r0, #5122	; 0x1402
    3ea0:	00010dba 			; <UNDEFINED> instruction: 0x00010dba
    3ea4:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ea8:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3eac:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3eb0:	72f40301 	rscsvc	r0, r4, #67108864	; 0x4000000
    3eb4:	00040501 	andeq	r0, r4, r1, lsl #10
    3eb8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3ebc:	01040200 	mrseq	r0, R12_usr
    3ec0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3ec4:	00200601 	eoreq	r0, r0, r1, lsl #12
    3ec8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ecc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3ed0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3ed4:	00050501 	andeq	r0, r5, r1, lsl #10
    3ed8:	03010402 	movweq	r0, #5122	; 0x1402
    3edc:	00010d87 	andeq	r0, r1, r7, lsl #27
    3ee0:	06020402 	streq	r0, [r2], -r2, lsl #8
    3ee4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3ee8:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3eec:	02040200 	andeq	r0, r4, #0, 4
    3ef0:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3ef4:	02040200 	andeq	r0, r4, #0, 4
    3ef8:	06070520 	streq	r0, [r7], -r0, lsr #10
    3efc:	06280524 	strteq	r0, [r8], -r4, lsr #10
    3f00:	06070501 	streq	r0, [r7], -r1, lsl #10
    3f04:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    3f08:	0a052001 	beq	14bf14 <_Min_Heap_Size+0x14b714>
    3f0c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3f10:	060e0523 	streq	r0, [lr], -r3, lsr #10
    3f14:	20160501 	andscs	r0, r6, r1, lsl #10
    3f18:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    3f1c:	05340607 	ldreq	r0, [r4, #-1543]!	; 0xfffff9f9
    3f20:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3f24:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    3f28:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    3f2c:	06440607 	strbeq	r0, [r4], -r7, lsl #12
    3f30:	06050520 	streq	r0, [r5], -r0, lsr #10
    3f34:	06180543 	ldreq	r0, [r8], -r3, asr #10
    3f38:	06050501 	streq	r0, [r5], -r1, lsl #10
    3f3c:	06130531 			; <UNDEFINED> instruction: 0x06130531
    3f40:	06050501 	streq	r0, [r5], -r1, lsl #10
    3f44:	05200644 	streq	r0, [r0, #-1604]!	; 0xfffff9bc
    3f48:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
    3f4c:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    3f50:	01000202 	tsteq	r0, r2, lsl #4
    3f54:	00010501 	andeq	r0, r1, r1, lsl #10
    3f58:	00000205 	andeq	r0, r0, r5, lsl #4
    3f5c:	93030000 	movwls	r0, #12288	; 0x3000
    3f60:	0106011b 	tsteq	r6, fp, lsl r1
    3f64:	21060305 	tstcs	r6, r5, lsl #6
    3f68:	01061705 	tsteq	r6, r5, lsl #14
    3f6c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3f70:	01061605 	tsteq	r6, r5, lsl #12
    3f74:	31060305 	tstcc	r6, r5, lsl #6
    3f78:	01061105 	tsteq	r6, r5, lsl #2
    3f7c:	44060305 	strmi	r0, [r6], #-773	; 0xfffffcfb
    3f80:	30060105 	andcc	r0, r6, r5, lsl #2
    3f84:	01000102 	tsteq	r0, r2, lsl #2
    3f88:	00010501 	andeq	r0, r1, r1, lsl #10
    3f8c:	00000205 	andeq	r0, r0, r5, lsl #4
    3f90:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    3f94:	03050115 	movweq	r0, #20757	; 0x5115
    3f98:	06010514 			; <UNDEFINED> instruction: 0x06010514
    3f9c:	00010217 	andeq	r0, r1, r7, lsl r2
    3fa0:	01050101 	tsteq	r5, r1, lsl #2
    3fa4:	00020500 	andeq	r0, r2, r0, lsl #10
    3fa8:	03000000 	movweq	r0, #0
    3fac:	060111e0 	streq	r1, [r1], -r0, ror #3
    3fb0:	00030501 	andeq	r0, r3, r1, lsl #10
    3fb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    3fb8:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    3fbc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3fc0:	00010104 	andeq	r0, r1, r4, lsl #2
    3fc4:	01010402 	tsteq	r1, r2, lsl #8
    3fc8:	1f050204 	svcne	0x00050204
    3fcc:	01040200 	mrseq	r0, R12_usr
    3fd0:	2071f903 	rsbscs	pc, r1, r3, lsl #18
    3fd4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3fd8:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3fdc:	04020004 	streq	r0, [r2], #-4
    3fe0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3fe4:	2e060104 	adfcss	f0, f6, f4
    3fe8:	01040200 	mrseq	r0, R12_usr
    3fec:	02002f06 	andeq	r2, r0, #6, 30
    3ff0:	01060104 	tsteq	r6, r4, lsl #2
    3ff4:	03050104 	movweq	r0, #20740	; 0x5104
    3ff8:	01040200 	mrseq	r0, R12_usr
    3ffc:	010e8203 	tsteq	lr, r3, lsl #4
    4000:	01040200 	mrseq	r0, R12_usr
    4004:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4008:	02001f05 	andeq	r1, r0, #5, 30
    400c:	ac030104 	stfges	f0, [r3], {4}
    4010:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    4014:	01040200 	mrseq	r0, R12_usr
    4018:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    401c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4020:	20060104 	andcs	r0, r6, r4, lsl #2
    4024:	01040200 	mrseq	r0, R12_usr
    4028:	02002f06 	andeq	r2, r0, #6, 30
    402c:	01060104 	tsteq	r6, r4, lsl #2
    4030:	03050104 	movweq	r0, #20740	; 0x5104
    4034:	01040200 	mrseq	r0, R12_usr
    4038:	010dcf03 	tsteq	sp, r3, lsl #30
    403c:	01040200 	mrseq	r0, R12_usr
    4040:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4044:	00010601 	andeq	r0, r1, r1, lsl #12
    4048:	13010402 	movwne	r0, #5122	; 0x1402
    404c:	01040200 	mrseq	r0, R12_usr
    4050:	04020001 	streq	r0, [r2], #-1
    4054:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4058:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    405c:	001f0502 	andseq	r0, pc, r2, lsl #10
    4060:	03010402 	movweq	r0, #5122	; 0x1402
    4064:	052071f8 	streq	r7, [r0, #-504]!	; 0xfffffe08
    4068:	04020005 	streq	r0, [r2], #-5
    406c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4070:	01040200 	mrseq	r0, R12_usr
    4074:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4078:	002e0601 	eoreq	r0, lr, r1, lsl #12
    407c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4080:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4084:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4088:	00030501 	andeq	r0, r3, r1, lsl #10
    408c:	03010402 	movweq	r0, #5122	; 0x1402
    4090:	00010e83 	andeq	r0, r1, r3, lsl #29
    4094:	06010402 	streq	r0, [r1], -r2, lsl #8
    4098:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    409c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    40a0:	72ab0301 	adcvc	r0, fp, #67108864	; 0x4000000
    40a4:	00040501 	andeq	r0, r4, r1, lsl #10
    40a8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    40ac:	01040200 	mrseq	r0, R12_usr
    40b0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    40b4:	00200601 	eoreq	r0, r0, r1, lsl #12
    40b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    40bc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    40c0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    40c4:	00030501 	andeq	r0, r3, r1, lsl #10
    40c8:	03010402 	movweq	r0, #5122	; 0x1402
    40cc:	00010dd0 	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    40d0:	06020402 	streq	r0, [r2], -r2, lsl #8
    40d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    40d8:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    40dc:	02040200 	andeq	r0, r4, #0, 4
    40e0:	06050106 	streq	r0, [r5], -r6, lsl #2
    40e4:	02040200 	andeq	r0, r4, #0, 4
    40e8:	00050520 	andeq	r0, r5, r0, lsr #10
    40ec:	06020402 	streq	r0, [r2], -r2, lsl #8
    40f0:	00030530 	andeq	r0, r3, r0, lsr r5
    40f4:	16020402 	strne	r0, [r2], -r2, lsl #8
    40f8:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    40fc:	01060204 	tsteq	r6, r4, lsl #4
    4100:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    4104:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4108:	04020005 	streq	r0, [r2], #-5
    410c:	003e0601 	eorseq	r0, lr, r1, lsl #12
    4110:	01010402 	tsteq	r1, r2, lsl #8
    4114:	01040200 	mrseq	r0, R12_usr
    4118:	04020001 	streq	r0, [r2], #-1
    411c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4120:	02001f05 	andeq	r1, r0, #5, 30
    4124:	ed030104 	stfs	f0, [r3, #-16]
    4128:	05052071 	streq	r2, [r5, #-113]	; 0xffffff8f
    412c:	01040200 	mrseq	r0, R12_usr
    4130:	00040514 	andeq	r0, r4, r4, lsl r5
    4134:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4138:	01040200 	mrseq	r0, R12_usr
    413c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4140:	2f060104 	svccs	0x00060104
    4144:	01040200 	mrseq	r0, R12_usr
    4148:	01040106 	tsteq	r4, r6, lsl #2
    414c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4150:	8e030104 	adfhis	f0, f3, f4
    4154:	0200010e 	andeq	r0, r0, #-2147483645	; 0x80000003
    4158:	2e060104 	adfcss	f0, f6, f4
    415c:	1f050204 	svcne	0x00050204
    4160:	01040200 	mrseq	r0, R12_usr
    4164:	0172a003 	cmneq	r2, r3
    4168:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    416c:	00140104 	andseq	r0, r4, r4, lsl #2
    4170:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4174:	01040200 	mrseq	r0, R12_usr
    4178:	02002006 	andeq	r2, r0, #6
    417c:	2f060104 	svccs	0x00060104
    4180:	01040200 	mrseq	r0, R12_usr
    4184:	01040106 	tsteq	r4, r6, lsl #2
    4188:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    418c:	db030104 	blle	c45a4 <_Min_Heap_Size+0xc3da4>
    4190:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    4194:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4198:	02040200 	andeq	r0, r4, #0, 4
    419c:	000e0515 	andeq	r0, lr, r5, lsl r5
    41a0:	06020402 	streq	r0, [r2], -r2, lsl #8
    41a4:	00080501 	andeq	r0, r8, r1, lsl #10
    41a8:	20020402 	andcs	r0, r2, r2, lsl #8
    41ac:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    41b0:	01062805 	tsteq	r6, r5, lsl #16
    41b4:	31060705 	tstcc	r6, r5, lsl #14
    41b8:	01060b05 	tsteq	r6, r5, lsl #22
    41bc:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    41c0:	23060905 	movwcs	r0, #26885	; 0x6905
    41c4:	01060e05 	tsteq	r6, r5, lsl #28
    41c8:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    41cc:	05052009 	streq	r2, [r5, #-9]
    41d0:	01040200 	mrseq	r0, R12_usr
    41d4:	2e6d0306 	cdpcs	3, 6, cr0, cr13, cr6, {0}
    41d8:	01040200 	mrseq	r0, R12_usr
    41dc:	04020001 	streq	r0, [r2], #-1
    41e0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    41e4:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    41e8:	001f0502 	andseq	r0, pc, r2, lsl #10
    41ec:	03010402 	movweq	r0, #5122	; 0x1402
    41f0:	052071f3 	streq	r7, [r0, #-499]!	; 0xfffffe0d
    41f4:	04020005 	streq	r0, [r2], #-5
    41f8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    41fc:	01040200 	mrseq	r0, R12_usr
    4200:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4204:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4208:	06010402 	streq	r0, [r1], -r2, lsl #8
    420c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4210:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4214:	00050501 	andeq	r0, r5, r1, lsl #10
    4218:	03010402 	movweq	r0, #5122	; 0x1402
    421c:	00010e88 	andeq	r0, r1, r8, lsl #29
    4220:	06010402 	streq	r0, [r1], -r2, lsl #8
    4224:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4228:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    422c:	72a60301 	adcvc	r0, r6, #67108864	; 0x4000000
    4230:	00040501 	andeq	r0, r4, r1, lsl #10
    4234:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4238:	01040200 	mrseq	r0, R12_usr
    423c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4240:	00200601 	eoreq	r0, r0, r1, lsl #12
    4244:	06010402 	streq	r0, [r1], -r2, lsl #8
    4248:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    424c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4250:	00050501 	andeq	r0, r5, r1, lsl #10
    4254:	03010402 	movweq	r0, #5122	; 0x1402
    4258:	00010dd5 	ldrdeq	r0, [r1], -r5
    425c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4260:	03060705 	movweq	r0, #26373	; 0x6705
    4264:	1a050119 	bne	1446d0 <_Min_Heap_Size+0x143ed0>
    4268:	07050106 	streq	r0, [r5, -r6, lsl #2]
    426c:	16053106 	strne	r3, [r5], -r6, lsl #2
    4270:	07050106 	streq	r0, [r5, -r6, lsl #2]
    4274:	1c053d06 	stcne	13, cr3, [r5], {6}
    4278:	07050106 	streq	r0, [r5, -r6, lsl #2]
    427c:	20062806 	andcs	r2, r6, r6, lsl #16
    4280:	43060505 	movwmi	r0, #25861	; 0x6505
    4284:	01061805 	tsteq	r6, r5, lsl #16
    4288:	31060505 	tstcc	r6, r5, lsl #10
    428c:	01061405 	tsteq	r6, r5, lsl #8
    4290:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    4294:	01061a05 	tsteq	r6, r5, lsl #20
    4298:	28060505 	stmdacs	r6, {r0, r2, r8, sl}
    429c:	03052006 	movweq	r2, #20486	; 0x5006
    42a0:	01053206 	tsteq	r5, r6, lsl #4
    42a4:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    42a8:	01010002 	tsteq	r1, r2
    42ac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    42b0:	00000002 	andeq	r0, r0, r2
    42b4:	1baf0300 	blne	febc4ebc <_estack+0xdebc3c84>
    42b8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    42bc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    42c0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    42c4:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    42c8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    42cc:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    42d0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    42d4:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    42d8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    42dc:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    42e0:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    42e4:	01010001 	tsteq	r1, r1
    42e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    42ec:	000e4002 	andeq	r4, lr, r2
    42f0:	15990308 	ldrne	r0, [r9, #776]	; 0x308
    42f4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    42f8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    42fc:	00010217 	andeq	r0, r1, r7, lsl r2
    4300:	01050101 	tsteq	r5, r1, lsl #2
    4304:	42020500 	andmi	r0, r2, #0, 10
    4308:	0308000e 	movweq	r0, #32782	; 0x800e
    430c:	05011c8a 	streq	r1, [r1, #-3210]	; 0xfffff376
    4310:	15131303 	ldrne	r1, [r3, #-771]	; 0xfffffcfd
    4314:	01060c05 	tsteq	r6, r5, lsl #24
    4318:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    431c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    4320:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4324:	07052008 	streq	r2, [r5, -r8]
    4328:	3c090306 	stccc	3, cr0, [r9], {6}
    432c:	01061205 	tsteq	r6, r5, lsl #4
    4330:	21060705 	tstcs	r6, r5, lsl #14
    4334:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    4338:	003a0501 	eorseq	r0, sl, r1, lsl #10
    433c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4340:	02007c05 	andeq	r7, r0, #1280	; 0x500
    4344:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4348:	0402006d 	streq	r0, [r2], #-109	; 0xffffff93
    434c:	09052002 	stmdbeq	r5, {r1, sp}
    4350:	26053006 	strcs	r3, [r5], -r6
    4354:	30050106 	andcc	r0, r5, r6, lsl #2
    4358:	20150520 	andscs	r0, r5, r0, lsr #10
    435c:	26060705 	strcs	r0, [r6], -r5, lsl #14
    4360:	01061905 	tsteq	r6, r5, lsl #18
    4364:	3f060505 	svccc	0x00060505
    4368:	01061005 	tsteq	r6, r5
    436c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    4370:	01052e08 	tsteq	r5, r8, lsl #28
    4374:	053c6203 	ldreq	r6, [ip, #-515]!	; 0xfffffdfd
    4378:	21030607 	tstcs	r3, r7, lsl #12
    437c:	5b5b5b2e 	blpl	16db03c <_Min_Heap_Size+0x16da83c>
    4380:	01061605 	tsteq	r6, r5, lsl #12
    4384:	3f060705 	svccc	0x00060705
    4388:	01061a05 	tsteq	r6, r5, lsl #20
    438c:	32060705 	andcc	r0, r6, #1310720	; 0x140000
    4390:	01061005 	tsteq	r6, r5
    4394:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    4398:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    439c:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    43a0:	04020009 	streq	r0, [r2], #-9
    43a4:	00310601 	eorseq	r0, r1, r1, lsl #12
    43a8:	01010402 	tsteq	r1, r2, lsl #8
    43ac:	01040200 	mrseq	r0, R12_usr
    43b0:	04020001 	streq	r0, [r2], #-1
    43b4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    43b8:	02001f05 	andeq	r1, r0, #5, 30
    43bc:	9a030104 	bls	c47d4 <_Min_Heap_Size+0xc3fd4>
    43c0:	05052067 	streq	r2, [r5, #-103]	; 0xffffff99
    43c4:	01040200 	mrseq	r0, R12_usr
    43c8:	00040514 	andeq	r0, r4, r4, lsl r5
    43cc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    43d0:	01040200 	mrseq	r0, R12_usr
    43d4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    43d8:	2f060104 	svccs	0x00060104
    43dc:	01040200 	mrseq	r0, R12_usr
    43e0:	01040106 	tsteq	r4, r6, lsl #2
    43e4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    43e8:	e1030104 	tst	r3, r4, lsl #2
    43ec:	02000118 	andeq	r0, r0, #24, 2
    43f0:	2e060104 	adfcss	f0, f6, f4
    43f4:	1f050204 	svcne	0x00050204
    43f8:	01040200 	mrseq	r0, R12_usr
    43fc:	0167cd03 	cmneq	r7, r3, lsl #26
    4400:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4404:	00140104 	andseq	r0, r4, r4, lsl #2
    4408:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    440c:	01040200 	mrseq	r0, R12_usr
    4410:	02002006 	andeq	r2, r0, #6
    4414:	2f060104 	svccs	0x00060104
    4418:	01040200 	mrseq	r0, R12_usr
    441c:	01040106 	tsteq	r4, r6, lsl #2
    4420:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4424:	ae030104 	adfges	f0, f3, f4
    4428:	02000118 	andeq	r0, r0, #24, 2
    442c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4430:	02040200 	andeq	r0, r4, #0, 4
    4434:	000d0515 	andeq	r0, sp, r5, lsl r5
    4438:	06020402 	streq	r0, [r2], -r2, lsl #8
    443c:	04020001 	streq	r0, [r2], #-1
    4440:	0c052002 	stceq	0, cr2, [r5], {2}
    4444:	02040200 	andeq	r0, r4, #0, 4
    4448:	060b0520 	streq	r0, [fp], -r0, lsr #10
    444c:	2e2e013f 	mcrcs	1, 1, r0, cr14, cr15, {1}
    4450:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4454:	09052001 	stmdbeq	r5, {r0, sp}
    4458:	01040200 	mrseq	r0, R12_usr
    445c:	0307051a 	movweq	r0, #29978	; 0x751a
    4460:	0e053c0f 	cdpeq	12, 0, cr3, cr5, cr15, {0}
    4464:	01050106 	tsteq	r5, r6, lsl #2
    4468:	00470528 	subeq	r0, r7, r8, lsr #10
    446c:	03010402 	movweq	r0, #5122	; 0x1402
    4470:	053c7fab 	ldreq	r7, [ip, #-4011]!	; 0xfffff055
    4474:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    4478:	07052001 	streq	r2, [r5, -r1]
    447c:	05133006 	ldreq	r3, [r3, #-6]
    4480:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    4484:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    4488:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    448c:	16052030 			; <UNDEFINED> instruction: 0x16052030
    4490:	2e140520 	cfmul64cs	mvdx0, mvdx4, mvdx0
    4494:	21060705 	tstcs	r6, r5, lsl #14
    4498:	01061905 	tsteq	r6, r5, lsl #18
    449c:	03060905 	movweq	r0, #26885	; 0x6905
    44a0:	26054a0d 	strcs	r4, [r5], -sp, lsl #20
    44a4:	30050106 	andcc	r0, r5, r6, lsl #2
    44a8:	20170520 	andscs	r0, r7, r0, lsr #10
    44ac:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    44b0:	37030609 	strcc	r0, [r3, -r9, lsl #12]
    44b4:	052e062e 	streq	r0, [lr, #-1582]!	; 0xfffff9d2
    44b8:	200a030c 	andcs	r0, sl, ip, lsl #6
    44bc:	01051c20 	tsteq	r5, r0, lsr #24
    44c0:	00010226 	andeq	r0, r1, r6, lsr #4
    44c4:	01050101 	tsteq	r5, r1, lsl #2
    44c8:	28020500 	stmdacs	r2, {r8, sl}
    44cc:	0308000f 	movweq	r0, #32783	; 0x800f
    44d0:	060112ae 	streq	r1, [r1], -lr, lsr #5
    44d4:	06030501 	streq	r0, [r3], -r1, lsl #10
    44d8:	0619053d 			; <UNDEFINED> instruction: 0x0619053d
    44dc:	200c0501 	andcs	r0, ip, r1, lsl #10
    44e0:	21060305 	tstcs	r6, r5, lsl #6
    44e4:	01060c05 	tsteq	r6, r5, lsl #24
    44e8:	21060305 	tstcs	r6, r5, lsl #6
    44ec:	01060c05 	tsteq	r6, r5, lsl #24
    44f0:	21060305 	tstcs	r6, r5, lsl #6
    44f4:	05131513 	ldreq	r1, [r3, #-1299]	; 0xfffffaed
    44f8:	2e010606 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx6
    44fc:	23060505 	movwcs	r0, #25861	; 0x6505
    4500:	01060805 	tsteq	r6, r5, lsl #16
    4504:	02002f05 	andeq	r2, r0, #5, 30
    4508:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    450c:	05440603 	strbeq	r0, [r4, #-1539]	; 0xfffff9fd
    4510:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    4514:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    4518:	02002001 	andeq	r2, r0, #1
    451c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4520:	03052121 	movweq	r2, #20769	; 0x5121
    4524:	00eb0306 	rsceq	r0, fp, r6, lsl #6
    4528:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    452c:	20060501 	andcs	r0, r6, r1, lsl #10
    4530:	03060305 	movweq	r0, #25349	; 0x6305
    4534:	052e00dd 	streq	r0, [lr, #-221]!	; 0xffffff23
    4538:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    453c:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    4540:	03053c01 	movweq	r3, #23553	; 0x5c01
    4544:	06055106 	streq	r5, [r5], -r6, lsl #2
    4548:	2b050106 	blcs	144968 <_Min_Heap_Size+0x144168>
    454c:	01040200 	mrseq	r0, R12_usr
    4550:	4f01053c 	svcmi	0x0001053c
    4554:	03060705 	movweq	r0, #26373	; 0x6705
    4558:	062e7ea5 	strteq	r7, [lr], -r5, lsr #29
    455c:	052f0620 	streq	r0, [pc, #-1568]!	; 3f44 <_Min_Heap_Size+0x3744>
    4560:	20090305 	andcs	r0, r9, r5, lsl #6
    4564:	01060805 	tsteq	r6, r5, lsl #16
    4568:	02002d05 	andeq	r2, r0, #320	; 0x140
    456c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4570:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    4574:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4578:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    457c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4580:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    4584:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    4588:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    458c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4590:	08054e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, lr}
    4594:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    4598:	01040200 	mrseq	r0, R12_usr
    459c:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    45a0:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    45a4:	06050501 	streq	r0, [r5], -r1, lsl #10
    45a8:	0608054e 	streq	r0, [r8], -lr, asr #10
    45ac:	002e0501 	eoreq	r0, lr, r1, lsl #10
    45b0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    45b4:	053d3205 	ldreq	r3, [sp, #-517]!	; 0xfffffdfb
    45b8:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    45bc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    45c0:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    45c4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    45c8:	07052008 	streq	r2, [r5, -r8]
    45cc:	0a053106 	beq	1509ec <_Min_Heap_Size+0x1501ec>
    45d0:	31050106 	tstcc	r5, r6, lsl #2
    45d4:	01040200 	mrseq	r0, R12_usr
    45d8:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    45dc:	06140543 	ldreq	r0, [r4], -r3, asr #10
    45e0:	06070501 	streq	r0, [r7], -r1, lsl #10
    45e4:	0612054b 	ldreq	r0, [r2], -fp, asr #10
    45e8:	200a0501 	andcs	r0, sl, r1, lsl #10
    45ec:	02003e05 	andeq	r3, r0, #5, 28	; 0x50
    45f0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    45f4:	3f250609 	svccc	0x00250609
    45f8:	01060d05 	tsteq	r6, r5, lsl #26
    45fc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    4600:	0402000b 	streq	r0, [r2], #-11
    4604:	003e0601 	eorseq	r0, lr, r1, lsl #12
    4608:	01010402 	tsteq	r1, r2, lsl #8
    460c:	01040200 	mrseq	r0, R12_usr
    4610:	04020001 	streq	r0, [r2], #-1
    4614:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4618:	02001f05 	andeq	r1, r0, #5, 30
    461c:	e7030104 	str	r0, [r3, -r4, lsl #2]
    4620:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    4624:	01040200 	mrseq	r0, R12_usr
    4628:	00040514 	andeq	r0, r4, r4, lsl r5
    462c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4630:	01040200 	mrseq	r0, R12_usr
    4634:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4638:	2f060104 	svccs	0x00060104
    463c:	01040200 	mrseq	r0, R12_usr
    4640:	01040106 	tsteq	r4, r6, lsl #2
    4644:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4648:	94030104 	strls	r0, [r3], #-260	; 0xfffffefc
    464c:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4650:	2e060104 	adfcss	f0, f6, f4
    4654:	1f050204 	svcne	0x00050204
    4658:	01040200 	mrseq	r0, R12_usr
    465c:	01719a03 	cmneq	r1, r3, lsl #20
    4660:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4664:	00140104 	andseq	r0, r4, r4, lsl #2
    4668:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    466c:	01040200 	mrseq	r0, R12_usr
    4670:	02002006 	andeq	r2, r0, #6
    4674:	2f060104 	svccs	0x00060104
    4678:	01040200 	mrseq	r0, R12_usr
    467c:	01040106 	tsteq	r4, r6, lsl #2
    4680:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4684:	e1030104 	tst	r3, r4, lsl #2
    4688:	0200010e 	andeq	r0, r0, #-2147483645	; 0x80000003
    468c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4690:	02040200 	andeq	r0, r4, #0, 4
    4694:	00140515 	andseq	r0, r4, r5, lsl r5
    4698:	06020402 	streq	r0, [r2], -r2, lsl #8
    469c:	000e0501 	andeq	r0, lr, r1, lsl #10
    46a0:	20020402 	andcs	r0, r2, r2, lsl #8
    46a4:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    46a8:	01062e05 	tsteq	r6, r5, lsl #28
    46ac:	2f060d05 	svccs	0x00060d05
    46b0:	01061105 	tsteq	r6, r5, lsl #2
    46b4:	053c1005 	ldreq	r1, [ip, #-5]!
    46b8:	0531060f 	ldreq	r0, [r1, #-1551]!	; 0xfffff9f1
    46bc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    46c0:	0f05201c 	svceq	0x0005201c
    46c4:	06090520 	streq	r0, [r9], -r0, lsr #10
    46c8:	062e6503 	strteq	r6, [lr], -r3, lsl #10
    46cc:	0d052e20 	stceq	14, cr2, [r5, #-128]	; 0xffffff80
    46d0:	20260306 	eorcs	r0, r6, r6, lsl #6
    46d4:	0c030b05 			; <UNDEFINED> instruction: 0x0c030b05
    46d8:	0309054a 	movweq	r0, #38218	; 0x954a
    46dc:	053f4a0d 	ldreq	r4, [pc, #-2573]!	; 3cd7 <_Min_Heap_Size+0x34d7>
    46e0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    46e4:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    46e8:	4b260607 	blmi	985f0c <_Min_Heap_Size+0x98570c>
    46ec:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    46f0:	06200601 	strteq	r0, [r0], -r1, lsl #12
    46f4:	202e2e20 	eorcs	r2, lr, r0, lsr #28
    46f8:	06090515 			; <UNDEFINED> instruction: 0x06090515
    46fc:	20080501 	andcs	r0, r8, r1, lsl #10
    4700:	42060705 	andmi	r0, r6, #1310720	; 0x140000
    4704:	01063205 	tsteq	r6, r5, lsl #4
    4708:	053c1005 	ldreq	r1, [ip, #-5]!
    470c:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    4710:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    4714:	0b053d2b 	bleq	153bc8 <_Min_Heap_Size+0x1533c8>
    4718:	06090520 	streq	r0, [r9], -r0, lsr #10
    471c:	061c053f 			; <UNDEFINED> instruction: 0x061c053f
    4720:	06090501 	streq	r0, [r9], -r1, lsl #10
    4724:	06200523 	strteq	r0, [r0], -r3, lsr #10
    4728:	200c0501 	andcs	r0, ip, r1, lsl #10
    472c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4730:	3f060104 	svccc	0x00060104
    4734:	01040200 	mrseq	r0, R12_usr
    4738:	04020001 	streq	r0, [r2], #-1
    473c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4740:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4744:	001f0502 	andseq	r0, pc, r2, lsl #10
    4748:	03010402 	movweq	r0, #5122	; 0x1402
    474c:	05207095 	streq	r7, [r0, #-149]!	; 0xffffff6b
    4750:	04020005 	streq	r0, [r2], #-5
    4754:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4758:	01040200 	mrseq	r0, R12_usr
    475c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4760:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4764:	06010402 	streq	r0, [r1], -r2, lsl #8
    4768:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    476c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4770:	000b0501 	andeq	r0, fp, r1, lsl #10
    4774:	03010402 	movweq	r0, #5122	; 0x1402
    4778:	00010fe6 	andeq	r0, r1, r6, ror #31
    477c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4780:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4784:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4788:	70c80301 	sbcvc	r0, r8, r1, lsl #6
    478c:	00040501 	andeq	r0, r4, r1, lsl #10
    4790:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4794:	01040200 	mrseq	r0, R12_usr
    4798:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    479c:	00200601 	eoreq	r0, r0, r1, lsl #12
    47a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    47a4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    47a8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    47ac:	000b0501 	andeq	r0, fp, r1, lsl #10
    47b0:	03010402 	movweq	r0, #5122	; 0x1402
    47b4:	00010fb3 			; <UNDEFINED> instruction: 0x00010fb3
    47b8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    47bc:	01040200 	mrseq	r0, R12_usr
    47c0:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    47c4:	00130104 	andseq	r0, r3, r4, lsl #2
    47c8:	01010402 	tsteq	r1, r2, lsl #8
    47cc:	01040200 	mrseq	r0, R12_usr
    47d0:	04020001 	streq	r0, [r2], #-1
    47d4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    47d8:	02001f05 	andeq	r1, r0, #5, 30
    47dc:	94030104 	strls	r0, [r3], #-260	; 0xfffffefc
    47e0:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    47e4:	01040200 	mrseq	r0, R12_usr
    47e8:	00040514 	andeq	r0, r4, r4, lsl r5
    47ec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    47f0:	01040200 	mrseq	r0, R12_usr
    47f4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    47f8:	2f060104 	svccs	0x00060104
    47fc:	01040200 	mrseq	r0, R12_usr
    4800:	01040106 	tsteq	r4, r6, lsl #2
    4804:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4808:	e7030104 	str	r0, [r3, -r4, lsl #2]
    480c:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4810:	2e060104 	adfcss	f0, f6, f4
    4814:	1f050204 	svcne	0x00050204
    4818:	01040200 	mrseq	r0, R12_usr
    481c:	0170c703 	cmneq	r0, r3, lsl #14
    4820:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4824:	00140104 	andseq	r0, r4, r4, lsl #2
    4828:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    482c:	01040200 	mrseq	r0, R12_usr
    4830:	02002006 	andeq	r2, r0, #6
    4834:	2f060104 	svccs	0x00060104
    4838:	01040200 	mrseq	r0, R12_usr
    483c:	01040106 	tsteq	r4, r6, lsl #2
    4840:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4844:	b4030104 	strlt	r0, [r3], #-260	; 0xfffffefc
    4848:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    484c:	002e0104 	eoreq	r0, lr, r4, lsl #2
    4850:	06010402 	streq	r0, [r1], -r2, lsl #8
    4854:	04020001 	streq	r0, [r2], #-1
    4858:	02001601 	andeq	r1, r0, #1048576	; 0x100000
    485c:	00010104 	andeq	r0, r1, r4, lsl #2
    4860:	01010402 	tsteq	r1, r2, lsl #8
    4864:	01040200 	mrseq	r0, R12_usr
    4868:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    486c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4870:	70900301 	addsvc	r0, r0, r1, lsl #6
    4874:	00050520 	andeq	r0, r5, r0, lsr #10
    4878:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    487c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4880:	00140104 	andseq	r0, r4, r4, lsl #2
    4884:	06010402 	streq	r0, [r1], -r2, lsl #8
    4888:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    488c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4890:	06010402 	streq	r0, [r1], -r2, lsl #8
    4894:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4898:	0402000b 	streq	r0, [r2], #-11
    489c:	0feb0301 	svceq	0x00eb0301
    48a0:	04020001 	streq	r0, [r2], #-1
    48a4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    48a8:	001f0502 	andseq	r0, pc, r2, lsl #10
    48ac:	03010402 	movweq	r0, #5122	; 0x1402
    48b0:	050170c3 	streq	r7, [r1, #-195]	; 0xffffff3d
    48b4:	04020004 	streq	r0, [r2], #-4
    48b8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    48bc:	00140104 	andseq	r0, r4, r4, lsl #2
    48c0:	06010402 	streq	r0, [r1], -r2, lsl #8
    48c4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    48c8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    48cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    48d0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    48d4:	0402000b 	streq	r0, [r2], #-11
    48d8:	0fb80301 	svceq	0x00b80301
    48dc:	04020001 	streq	r0, [r2], #-1
    48e0:	002e0602 	eoreq	r0, lr, r2, lsl #12
    48e4:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    48e8:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    48ec:	01060204 	tsteq	r6, r4, lsl #4
    48f0:	02040200 	andeq	r0, r4, #0, 4
    48f4:	000b0520 	andeq	r0, fp, r0, lsr #10
    48f8:	06020402 	streq	r0, [r2], -r2, lsl #8
    48fc:	0020052f 	eoreq	r0, r0, pc, lsr #10
    4900:	06020402 	streq	r0, [r2], -r2, lsl #8
    4904:	000b0501 	andeq	r0, fp, r1, lsl #10
    4908:	06010402 	streq	r0, [r1], -r2, lsl #8
    490c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    4910:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4914:	00010104 	andeq	r0, r1, r4, lsl #2
    4918:	01010402 	tsteq	r1, r2, lsl #8
    491c:	1f050204 	svcne	0x00050204
    4920:	01040200 	mrseq	r0, R12_usr
    4924:	20708a03 	rsbscs	r8, r0, r3, lsl #20
    4928:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    492c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4930:	04020004 	streq	r0, [r2], #-4
    4934:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4938:	2e060104 	adfcss	f0, f6, f4
    493c:	01040200 	mrseq	r0, R12_usr
    4940:	02002f06 	andeq	r2, r0, #6, 30
    4944:	01060104 	tsteq	r6, r4, lsl #2
    4948:	0b050104 	bleq	144d60 <_Min_Heap_Size+0x144560>
    494c:	01040200 	mrseq	r0, R12_usr
    4950:	010ff103 	tsteq	pc, r3, lsl #2	; <UNPREDICTABLE>
    4954:	01040200 	mrseq	r0, R12_usr
    4958:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    495c:	02001f05 	andeq	r1, r0, #5, 30
    4960:	bd030104 	stflts	f0, [r3, #-16]
    4964:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    4968:	01040200 	mrseq	r0, R12_usr
    496c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4970:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4974:	20060104 	andcs	r0, r6, r4, lsl #2
    4978:	01040200 	mrseq	r0, R12_usr
    497c:	02002f06 	andeq	r2, r0, #6, 30
    4980:	01060104 	tsteq	r6, r4, lsl #2
    4984:	0b050104 	bleq	144d9c <_Min_Heap_Size+0x14459c>
    4988:	01040200 	mrseq	r0, R12_usr
    498c:	010fbe03 	tsteq	pc, r3, lsl #28
    4990:	02040200 	andeq	r0, r4, #0, 4
    4994:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4998:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    499c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    49a0:	00010602 	andeq	r0, r1, r2, lsl #12
    49a4:	20020402 	andcs	r0, r2, r2, lsl #8
    49a8:	33060905 	movwcc	r0, #26885	; 0x6905
    49ac:	01061c05 	tsteq	r6, r5, lsl #24
    49b0:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    49b4:	01063105 	tsteq	r6, r5, lsl #2
    49b8:	05204505 	streq	r4, [r0, #-1285]!	; 0xfffffafb
    49bc:	07052e09 	streq	r2, [r5, -r9, lsl #28]
    49c0:	20065b06 	andcs	r5, r6, r6, lsl #22
    49c4:	22051906 	andcs	r1, r5, #98304	; 0x18000
    49c8:	36050106 	strcc	r0, [r5], -r6, lsl #2
    49cc:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    49d0:	2f060705 	svccs	0x00060705
    49d4:	01061105 	tsteq	r6, r5, lsl #2
    49d8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    49dc:	09053d0b 	stmdbeq	r5, {r0, r1, r3, r8, sl, fp, ip, sp}
    49e0:	01040200 	mrseq	r0, R12_usr
    49e4:	02003f06 	andeq	r3, r0, #6, 30
    49e8:	00010104 	andeq	r0, r1, r4, lsl #2
    49ec:	01010402 	tsteq	r1, r2, lsl #8
    49f0:	01040200 	mrseq	r0, R12_usr
    49f4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    49f8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    49fc:	6fec0301 	svcvs	0x00ec0301
    4a00:	00050520 	andeq	r0, r5, r0, lsr #10
    4a04:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4a08:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4a0c:	00140104 	andseq	r0, r4, r4, lsl #2
    4a10:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4a18:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4a1c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a20:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4a24:	04020009 	streq	r0, [r2], #-9
    4a28:	108f0301 	addne	r0, pc, r1, lsl #6
    4a2c:	04020001 	streq	r0, [r2], #-1
    4a30:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4a34:	001f0502 	andseq	r0, pc, r2, lsl #10
    4a38:	03010402 	movweq	r0, #5122	; 0x1402
    4a3c:	0501709f 	streq	r7, [r1, #-159]	; 0xffffff61
    4a40:	04020004 	streq	r0, [r2], #-4
    4a44:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4a48:	00140104 	andseq	r0, r4, r4, lsl #2
    4a4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a50:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4a54:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4a58:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a5c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4a60:	04020009 	streq	r0, [r2], #-9
    4a64:	0fdc0301 	svceq	0x00dc0301
    4a68:	04020001 	streq	r0, [r2], #-1
    4a6c:	02002e01 	andeq	r2, r0, #1, 28
    4a70:	01060104 	tsteq	r6, r4, lsl #2
    4a74:	01040200 	mrseq	r0, R12_usr
    4a78:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    4a7c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4a80:	00010104 	andeq	r0, r1, r4, lsl #2
    4a84:	01010402 	tsteq	r1, r2, lsl #8
    4a88:	1f050204 	svcne	0x00050204
    4a8c:	01040200 	mrseq	r0, R12_usr
    4a90:	206fe903 	rsbcs	lr, pc, r3, lsl #18
    4a94:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4a98:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4a9c:	04020004 	streq	r0, [r2], #-4
    4aa0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4aa4:	2e060104 	adfcss	f0, f6, f4
    4aa8:	01040200 	mrseq	r0, R12_usr
    4aac:	02002f06 	andeq	r2, r0, #6, 30
    4ab0:	01060104 	tsteq	r6, r4, lsl #2
    4ab4:	09050104 	stmdbeq	r5, {r2, r8}
    4ab8:	01040200 	mrseq	r0, R12_usr
    4abc:	01109203 	tsteq	r0, r3, lsl #4
    4ac0:	01040200 	mrseq	r0, R12_usr
    4ac4:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4ac8:	02001f05 	andeq	r1, r0, #5, 30
    4acc:	9c030104 	stflss	f0, [r3], {4}
    4ad0:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    4ad4:	01040200 	mrseq	r0, R12_usr
    4ad8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4adc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4ae0:	20060104 	andcs	r0, r6, r4, lsl #2
    4ae4:	01040200 	mrseq	r0, R12_usr
    4ae8:	02002f06 	andeq	r2, r0, #6, 30
    4aec:	01060104 	tsteq	r6, r4, lsl #2
    4af0:	09050104 	stmdbeq	r5, {r2, r8}
    4af4:	01040200 	mrseq	r0, R12_usr
    4af8:	010fdf03 	tsteq	pc, r3, lsl #30
    4afc:	02040200 	andeq	r0, r4, #0, 4
    4b00:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4b04:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    4b08:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    4b0c:	00010602 	andeq	r0, r1, r2, lsl #12
    4b10:	20020402 	andcs	r0, r2, r2, lsl #8
    4b14:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4b18:	2f060204 	svccs	0x00060204
    4b1c:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    4b20:	01060204 	tsteq	r6, r4, lsl #4
    4b24:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4b28:	30060104 	andcc	r0, r6, r4, lsl #2
    4b2c:	01040200 	mrseq	r0, R12_usr
    4b30:	04020001 	streq	r0, [r2], #-1
    4b34:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4b38:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4b3c:	001f0502 	andseq	r0, pc, r2, lsl #10
    4b40:	03010402 	movweq	r0, #5122	; 0x1402
    4b44:	05206fe3 	streq	r6, [r0, #-4067]!	; 0xfffff01d
    4b48:	04020005 	streq	r0, [r2], #-5
    4b4c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4b50:	01040200 	mrseq	r0, R12_usr
    4b54:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4b58:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4b5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b60:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4b64:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4b68:	00090501 	andeq	r0, r9, r1, lsl #10
    4b6c:	03010402 	movweq	r0, #5122	; 0x1402
    4b70:	00011098 	muleq	r1, r8, r0
    4b74:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b78:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4b7c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4b80:	70960301 	addsvc	r0, r6, r1, lsl #6
    4b84:	00040501 	andeq	r0, r4, r1, lsl #10
    4b88:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4b8c:	01040200 	mrseq	r0, R12_usr
    4b90:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4b94:	00200601 	eoreq	r0, r0, r1, lsl #12
    4b98:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b9c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4ba0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4ba4:	00090501 	andeq	r0, r9, r1, lsl #10
    4ba8:	03010402 	movweq	r0, #5122	; 0x1402
    4bac:	00010fe5 	andeq	r0, r1, r5, ror #31
    4bb0:	06020402 	streq	r0, [r2], -r2, lsl #8
    4bb4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4bb8:	1c051602 	stcne	6, cr1, [r5], {2}
    4bbc:	02040200 	andeq	r0, r4, #0, 4
    4bc0:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4bc4:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4bc8:	04020009 	streq	r0, [r2], #-9
    4bcc:	05270602 	streq	r0, [r7, #-1538]!	; 0xfffff9fe
    4bd0:	04020007 	streq	r0, [r2], #-7
    4bd4:	02003f02 	andeq	r3, r0, #2, 30
    4bd8:	20060204 	andcs	r0, r6, r4, lsl #4
    4bdc:	19060505 	stmdbne	r6, {r0, r2, r8, sl}
    4be0:	2f062006 	svccs	0x00062006
    4be4:	06200626 	strteq	r0, [r0], -r6, lsr #12
    4be8:	0003022f 	andeq	r0, r3, pc, lsr #4
    4bec:	01050101 	tsteq	r5, r1, lsl #2
    4bf0:	00020500 	andeq	r0, r2, r0, lsl #10
    4bf4:	03000000 	movweq	r0, #0
    4bf8:	060118a0 	streq	r1, [r1], -r0, lsr #17
    4bfc:	06030501 	streq	r0, [r3], -r1, lsl #10
    4c00:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    4c04:	06030501 	streq	r0, [r3], -r1, lsl #10
    4c08:	06160524 	ldreq	r0, [r6], -r4, lsr #10
    4c0c:	06030501 	streq	r0, [r3], -r1, lsl #10
    4c10:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    4c14:	20060501 	andcs	r0, r6, r1, lsl #10
    4c18:	03060505 	movweq	r0, #25861	; 0x6505
    4c1c:	01052e12 	tsteq	r5, r2, lsl lr
    4c20:	05053106 	streq	r3, [r5, #-262]	; 0xfffffefa
    4c24:	20720306 	rsbscs	r0, r2, r6, lsl #6
    4c28:	01062c05 	tsteq	r6, r5, lsl #24
    4c2c:	3c200505 	cfstr32cc	mvfx0, [r0], #-20	; 0xffffffec
    4c30:	01000102 	tsteq	r0, r2, lsl #2
    4c34:	00010501 	andeq	r0, r1, r1, lsl #10
    4c38:	00000205 	andeq	r0, r0, r5, lsl #4
    4c3c:	e2030000 	and	r0, r3, #0
    4c40:	01060117 	tsteq	r6, r7, lsl r1
    4c44:	2f060305 	svccs	0x00060305
    4c48:	01061705 	tsteq	r6, r5, lsl #14
    4c4c:	23060305 	movwcs	r0, #25349	; 0x6305
    4c50:	01060c05 	tsteq	r6, r5, lsl #24
    4c54:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    4c58:	05052006 	streq	r2, [r5, #-6]
    4c5c:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    4c60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4c64:	01040200 	mrseq	r0, R12_usr
    4c68:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4c6c:	00010104 	andeq	r0, r1, r4, lsl #2
    4c70:	01010402 	tsteq	r1, r2, lsl #8
    4c74:	01040200 	mrseq	r0, R12_usr
    4c78:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4c7c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4c80:	6bf00301 	blvs	ffc0588c <_estack+0xdfc04654>
    4c84:	00050520 	andeq	r0, r5, r0, lsr #10
    4c88:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4c8c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4c90:	00140104 	andseq	r0, r4, r4, lsl #2
    4c94:	06010402 	streq	r0, [r1], -r2, lsl #8
    4c98:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4c9c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4ca0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ca4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4ca8:	04020005 	streq	r0, [r2], #-5
    4cac:	148b0301 	strne	r0, [fp], #769	; 0x301
    4cb0:	04020001 	streq	r0, [r2], #-1
    4cb4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4cb8:	001f0502 	andseq	r0, pc, r2, lsl #10
    4cbc:	03010402 	movweq	r0, #5122	; 0x1402
    4cc0:	05016ca3 	streq	r6, [r1, #-3235]	; 0xfffff35d
    4cc4:	04020004 	streq	r0, [r2], #-4
    4cc8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4ccc:	00140104 	andseq	r0, r4, r4, lsl #2
    4cd0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4cd4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4cd8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4cdc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ce0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4ce4:	04020005 	streq	r0, [r2], #-5
    4ce8:	13d80301 	bicsne	r0, r8, #67108864	; 0x4000000
    4cec:	04020001 	streq	r0, [r2], #-1
    4cf0:	02002e01 	andeq	r2, r0, #1, 28
    4cf4:	01060104 	tsteq	r6, r4, lsl #2
    4cf8:	01040200 	mrseq	r0, R12_usr
    4cfc:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4d00:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4d04:	00010104 	andeq	r0, r1, r4, lsl #2
    4d08:	01010402 	tsteq	r1, r2, lsl #8
    4d0c:	1f050204 	svcne	0x00050204
    4d10:	01040200 	mrseq	r0, R12_usr
    4d14:	206bef03 	rsbcs	lr, fp, r3, lsl #30
    4d18:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4d1c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4d20:	04020004 	streq	r0, [r2], #-4
    4d24:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4d28:	2e060104 	adfcss	f0, f6, f4
    4d2c:	01040200 	mrseq	r0, R12_usr
    4d30:	02002f06 	andeq	r2, r0, #6, 30
    4d34:	01060104 	tsteq	r6, r4, lsl #2
    4d38:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    4d3c:	01040200 	mrseq	r0, R12_usr
    4d40:	01148c03 	tsteq	r4, r3, lsl #24
    4d44:	01040200 	mrseq	r0, R12_usr
    4d48:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4d4c:	02001f05 	andeq	r1, r0, #5, 30
    4d50:	a2030104 	andge	r0, r3, #4, 2
    4d54:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    4d58:	01040200 	mrseq	r0, R12_usr
    4d5c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4d60:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4d64:	20060104 	andcs	r0, r6, r4, lsl #2
    4d68:	01040200 	mrseq	r0, R12_usr
    4d6c:	02002f06 	andeq	r2, r0, #6, 30
    4d70:	01060104 	tsteq	r6, r4, lsl #2
    4d74:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    4d78:	01040200 	mrseq	r0, R12_usr
    4d7c:	0113d903 	tsteq	r3, r3, lsl #18
    4d80:	01040200 	mrseq	r0, R12_usr
    4d84:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4d88:	00010601 	andeq	r0, r1, r1, lsl #12
    4d8c:	16010402 	strne	r0, [r1], -r2, lsl #8
    4d90:	01040200 	mrseq	r0, R12_usr
    4d94:	04020001 	streq	r0, [r2], #-1
    4d98:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4d9c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4da0:	001f0502 	andseq	r0, pc, r2, lsl #10
    4da4:	03010402 	movweq	r0, #5122	; 0x1402
    4da8:	05206beb 	streq	r6, [r0, #-3051]!	; 0xfffff415
    4dac:	04020005 	streq	r0, [r2], #-5
    4db0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4db4:	01040200 	mrseq	r0, R12_usr
    4db8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4dbc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4dc0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4dc4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4dc8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4dcc:	00050501 	andeq	r0, r5, r1, lsl #10
    4dd0:	03010402 	movweq	r0, #5122	; 0x1402
    4dd4:	00011490 	muleq	r1, r0, r4
    4dd8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ddc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4de0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4de4:	6c9e0301 	ldcvs	3, cr0, [lr], {1}
    4de8:	00040501 	andeq	r0, r4, r1, lsl #10
    4dec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4df0:	01040200 	mrseq	r0, R12_usr
    4df4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4df8:	00200601 	eoreq	r0, r0, r1, lsl #12
    4dfc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e00:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4e04:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4e08:	00050501 	andeq	r0, r5, r1, lsl #10
    4e0c:	03010402 	movweq	r0, #5122	; 0x1402
    4e10:	000113dd 	ldrdeq	r1, [r1], -sp
    4e14:	06020402 	streq	r0, [r2], -r2, lsl #8
    4e18:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4e1c:	14051502 	strne	r1, [r5], #-1282	; 0xfffffafe
    4e20:	02040200 	andeq	r0, r4, #0, 4
    4e24:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4e28:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4e2c:	04020005 	streq	r0, [r2], #-5
    4e30:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    4e34:	0402000e 	streq	r0, [r2], #-14
    4e38:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4e3c:	04020008 	streq	r0, [r2], #-8
    4e40:	07052002 	streq	r2, [r5, -r2]
    4e44:	02040200 	andeq	r0, r4, #0, 4
    4e48:	03053006 	movweq	r3, #20486	; 0x5006
    4e4c:	02040200 	andeq	r0, r4, #0, 4
    4e50:	00160518 	andseq	r0, r6, r8, lsl r5
    4e54:	06020402 	streq	r0, [r2], -r2, lsl #8
    4e58:	00030501 	andeq	r0, r3, r1, lsl #10
    4e5c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4e60:	000c0532 	andeq	r0, ip, r2, lsr r5
    4e64:	06020402 	streq	r0, [r2], -r2, lsl #8
    4e68:	00060501 	andeq	r0, r6, r1, lsl #10
    4e6c:	20020402 	andcs	r0, r2, r2, lsl #8
    4e70:	03060505 	movweq	r0, #25861	; 0x6505
    4e74:	01052e12 	tsteq	r5, r2, lsl lr
    4e78:	07053106 	streq	r3, [r5, -r6, lsl #2]
    4e7c:	01040200 	mrseq	r0, R12_usr
    4e80:	20610306 	rsbcs	r0, r1, r6, lsl #6
    4e84:	01040200 	mrseq	r0, R12_usr
    4e88:	04020001 	streq	r0, [r2], #-1
    4e8c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4e90:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4e94:	001f0502 	andseq	r0, pc, r2, lsl #10
    4e98:	03010402 	movweq	r0, #5122	; 0x1402
    4e9c:	05206be3 	streq	r6, [r0, #-3043]!	; 0xfffff41d
    4ea0:	04020005 	streq	r0, [r2], #-5
    4ea4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4ea8:	01040200 	mrseq	r0, R12_usr
    4eac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4eb0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4eb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4eb8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4ebc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4ec0:	00070501 	andeq	r0, r7, r1, lsl #10
    4ec4:	03010402 	movweq	r0, #5122	; 0x1402
    4ec8:	00011498 	muleq	r1, r8, r4
    4ecc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ed0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4ed4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4ed8:	6c960301 	ldcvs	3, cr0, [r6], {1}
    4edc:	00040501 	andeq	r0, r4, r1, lsl #10
    4ee0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4ee4:	01040200 	mrseq	r0, R12_usr
    4ee8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4eec:	00200601 	eoreq	r0, r0, r1, lsl #12
    4ef0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ef4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4ef8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4efc:	00070501 	andeq	r0, r7, r1, lsl #10
    4f00:	03010402 	movweq	r0, #5122	; 0x1402
    4f04:	000113e5 	andeq	r1, r1, r5, ror #7
    4f08:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4f0c:	03060505 	movweq	r0, #25861	; 0x6505
    4f10:	3c060111 	stfccs	f0, [r6], {17}
    4f14:	01000102 	tsteq	r0, r2, lsl #2
    4f18:	00010501 	andeq	r0, r1, r1, lsl #10
    4f1c:	00000205 	andeq	r0, r0, r5, lsl #4
    4f20:	c1030000 	mrsgt	r0, (UNDEF: 3)
    4f24:	01060115 	tsteq	r6, r5, lsl r1
    4f28:	30060305 	andcc	r0, r6, r5, lsl #6
    4f2c:	01040200 	mrseq	r0, R12_usr
    4f30:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4f34:	004a0204 	subeq	r0, sl, r4, lsl #4
    4f38:	4a030402 	bmi	c5f48 <_Min_Heap_Size+0xc5748>
    4f3c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4f40:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4f44:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    4f48:	004a0604 	subeq	r0, sl, r4, lsl #12
    4f4c:	3c060402 	cfstrscc	mvf0, [r6], {2}
    4f50:	00013106 	andeq	r3, r1, r6, lsl #2
    4f54:	4a020402 	bmi	85f64 <_Min_Heap_Size+0x85764>
    4f58:	02040200 	andeq	r0, r4, #0, 4
    4f5c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4f60:	11051402 	tstne	r5, r2, lsl #8
    4f64:	02040200 	andeq	r0, r4, #0, 4
    4f68:	03050106 	movweq	r0, #20742	; 0x5106
    4f6c:	01040200 	mrseq	r0, R12_usr
    4f70:	02003f06 	andeq	r3, r0, #6, 30
    4f74:	00010104 	andeq	r0, r1, r4, lsl #2
    4f78:	01010402 	tsteq	r1, r2, lsl #8
    4f7c:	01040200 	mrseq	r0, R12_usr
    4f80:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4f84:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4f88:	6e900301 	cdpvs	3, 9, cr0, cr0, cr1, {0}
    4f8c:	00050520 	andeq	r0, r5, r0, lsr #10
    4f90:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4f94:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4f98:	00140104 	andseq	r0, r4, r4, lsl #2
    4f9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fa0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4fa4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4fa8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fac:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4fb0:	04020003 	streq	r0, [r2], #-3
    4fb4:	11eb0301 	mvnne	r0, r1, lsl #6
    4fb8:	04020001 	streq	r0, [r2], #-1
    4fbc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4fc0:	001f0502 	andseq	r0, pc, r2, lsl #10
    4fc4:	03010402 	movweq	r0, #5122	; 0x1402
    4fc8:	05016ec3 	streq	r6, [r1, #-3779]	; 0xfffff13d
    4fcc:	04020004 	streq	r0, [r2], #-4
    4fd0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4fd4:	00140104 	andseq	r0, r4, r4, lsl #2
    4fd8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fdc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4fe0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4fe4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fe8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4fec:	04020003 	streq	r0, [r2], #-3
    4ff0:	11b80301 			; <UNDEFINED> instruction: 0x11b80301
    4ff4:	04020001 	streq	r0, [r2], #-1
    4ff8:	002e0602 	eoreq	r0, lr, r2, lsl #12
    4ffc:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    5000:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5004:	01060204 	tsteq	r6, r4, lsl #4
    5008:	02040200 	andeq	r0, r4, #0, 4
    500c:	00030520 	andeq	r0, r3, r0, lsr #10
    5010:	06020402 	streq	r0, [r2], -r2, lsl #8
    5014:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    5018:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    501c:	003c0204 	eorseq	r0, ip, r4, lsl #4
    5020:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    5024:	13060105 	movwne	r0, #24837	; 0x6105
    5028:	73030305 	movwvc	r0, #13061	; 0x3305
    502c:	00060220 	andeq	r0, r6, r0, lsr #4
    5030:	01050101 	tsteq	r5, r1, lsl #2
    5034:	00020500 	andeq	r0, r2, r0, lsl #10
    5038:	03000000 	movweq	r0, #0
    503c:	060115dc 			; <UNDEFINED> instruction: 0x060115dc
    5040:	06030501 	streq	r0, [r3], -r1, lsl #10
    5044:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    5048:	004a0601 	subeq	r0, sl, r1, lsl #12
    504c:	4a020402 	bmi	8605c <_Min_Heap_Size+0x8585c>
    5050:	03040200 	movweq	r0, #16896	; 0x4200
    5054:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5058:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    505c:	004a0504 	subeq	r0, sl, r4, lsl #10
    5060:	4a060402 	bmi	186070 <_Min_Heap_Size+0x185870>
    5064:	06040200 	streq	r0, [r4], -r0, lsl #4
    5068:	0131063c 	teqeq	r1, ip, lsr r6
    506c:	02040200 	andeq	r0, r4, #0, 4
    5070:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5074:	02003c02 	andeq	r3, r0, #512	; 0x200
    5078:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    507c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5080:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    5084:	04020003 	streq	r0, [r2], #-3
    5088:	003f0601 	eorseq	r0, pc, r1, lsl #12
    508c:	01010402 	tsteq	r1, r2, lsl #8
    5090:	01040200 	mrseq	r0, R12_usr
    5094:	04020001 	streq	r0, [r2], #-1
    5098:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    509c:	02001f05 	andeq	r1, r0, #5, 30
    50a0:	f5030104 			; <UNDEFINED> instruction: 0xf5030104
    50a4:	0505206d 	streq	r2, [r5, #-109]	; 0xffffff93
    50a8:	01040200 	mrseq	r0, R12_usr
    50ac:	00040514 	andeq	r0, r4, r4, lsl r5
    50b0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    50b4:	01040200 	mrseq	r0, R12_usr
    50b8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    50bc:	2f060104 	svccs	0x00060104
    50c0:	01040200 	mrseq	r0, R12_usr
    50c4:	01040106 	tsteq	r4, r6, lsl #2
    50c8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    50cc:	86030104 	strhi	r0, [r3], -r4, lsl #2
    50d0:	02000112 	andeq	r0, r0, #-2147483644	; 0x80000004
    50d4:	2e060104 	adfcss	f0, f6, f4
    50d8:	1f050204 	svcne	0x00050204
    50dc:	01040200 	mrseq	r0, R12_usr
    50e0:	016ea803 	cmneq	lr, r3, lsl #16
    50e4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    50e8:	00140104 	andseq	r0, r4, r4, lsl #2
    50ec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    50f0:	01040200 	mrseq	r0, R12_usr
    50f4:	02002006 	andeq	r2, r0, #6
    50f8:	2f060104 	svccs	0x00060104
    50fc:	01040200 	mrseq	r0, R12_usr
    5100:	01040106 	tsteq	r4, r6, lsl #2
    5104:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5108:	d3030104 	movwle	r0, #12548	; 0x3104
    510c:	02000111 	andeq	r0, r0, #1073741828	; 0x40000004
    5110:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    5114:	02040200 	andeq	r0, r4, #0, 4
    5118:	00110514 	andseq	r0, r1, r4, lsl r5
    511c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5120:	04020001 	streq	r0, [r2], #-1
    5124:	03052002 	movweq	r2, #20482	; 0x5002
    5128:	02040200 	andeq	r0, r4, #0, 4
    512c:	16052f06 	strne	r2, [r5], -r6, lsl #30
    5130:	02040200 	andeq	r0, r4, #0, 4
    5134:	03050106 	movweq	r0, #20742	; 0x5106
    5138:	02040200 	andeq	r0, r4, #0, 4
    513c:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    5140:	00010204 	andeq	r0, r1, r4, lsl #4
    5144:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    5148:	02040200 	andeq	r0, r4, #0, 4
    514c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    5150:	03030513 	movweq	r0, #13587	; 0x3513
    5154:	07022072 	smlsdxeq	r2, r2, r0, r2
    5158:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    515c:	02050001 	andeq	r0, r5, #1
    5160:	00000000 	andeq	r0, r0, r0
    5164:	0115f803 	tsteq	r5, r3, lsl #16	; <UNPREDICTABLE>
    5168:	03050106 	movweq	r0, #20742	; 0x5106
    516c:	02003006 	andeq	r3, r0, #6
    5170:	4a060104 	bmi	185588 <_Min_Heap_Size+0x184d88>
    5174:	02040200 	andeq	r0, r4, #0, 4
    5178:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    517c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    5180:	004a0404 	subeq	r0, sl, r4, lsl #8
    5184:	4a050402 	bmi	146194 <_Min_Heap_Size+0x145994>
    5188:	06040200 	streq	r0, [r4], -r0, lsl #4
    518c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5190:	31063c06 	tstcc	r6, r6, lsl #24
    5194:	04020001 	streq	r0, [r2], #-1
    5198:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    519c:	003c0204 	eorseq	r0, ip, r4, lsl #4
    51a0:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    51a4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    51a8:	01060204 	tsteq	r6, r4, lsl #4
    51ac:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    51b0:	3f060104 	svccc	0x00060104
    51b4:	01040200 	mrseq	r0, R12_usr
    51b8:	04020001 	streq	r0, [r2], #-1
    51bc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    51c0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    51c4:	001f0502 	andseq	r0, pc, r2, lsl #10
    51c8:	03010402 	movweq	r0, #5122	; 0x1402
    51cc:	05206dd9 	streq	r6, [r0, #-3545]!	; 0xfffff227
    51d0:	04020005 	streq	r0, [r2], #-5
    51d4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    51d8:	01040200 	mrseq	r0, R12_usr
    51dc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    51e0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    51e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    51e8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    51ec:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    51f0:	00030501 	andeq	r0, r3, r1, lsl #10
    51f4:	03010402 	movweq	r0, #5122	; 0x1402
    51f8:	000112a2 	andeq	r1, r1, r2, lsr #5
    51fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    5200:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5204:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5208:	6e8c0301 	cdpvs	3, 8, cr0, cr12, cr1, {0}
    520c:	00040501 	andeq	r0, r4, r1, lsl #10
    5210:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5214:	01040200 	mrseq	r0, R12_usr
    5218:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    521c:	00200601 	eoreq	r0, r0, r1, lsl #12
    5220:	06010402 	streq	r0, [r1], -r2, lsl #8
    5224:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5228:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    522c:	00030501 	andeq	r0, r3, r1, lsl #10
    5230:	03010402 	movweq	r0, #5122	; 0x1402
    5234:	000111ef 	andeq	r1, r1, pc, ror #3
    5238:	06020402 	streq	r0, [r2], -r2, lsl #8
    523c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5240:	11051402 	tstne	r5, r2, lsl #8
    5244:	02040200 	andeq	r0, r4, #0, 4
    5248:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    524c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    5250:	04020003 	streq	r0, [r2], #-3
    5254:	052f0602 	streq	r0, [pc, #-1538]!	; 4c5a <_Min_Heap_Size+0x445a>
    5258:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    525c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    5260:	04020003 	streq	r0, [r2], #-3
    5264:	00310602 	eorseq	r0, r1, r2, lsl #12
    5268:	01020402 	tsteq	r2, r2, lsl #8
    526c:	02040200 	andeq	r0, r4, #0, 4
    5270:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5274:	01051402 	tsteq	r5, r2, lsl #8
    5278:	03051306 	movweq	r1, #21254	; 0x5306
    527c:	02207203 	eoreq	r7, r0, #805306368	; 0x30000000
    5280:	01010007 	tsteq	r1, r7
    5284:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5288:	00000002 	andeq	r0, r0, r2
    528c:	16940300 	ldrne	r0, [r4], r0, lsl #6
    5290:	13030501 	movwne	r0, #13569	; 0x3501
    5294:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    5298:	004a0204 	subeq	r0, sl, r4, lsl #4
    529c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    52a0:	02040200 	andeq	r0, r4, #0, 4
    52a4:	00110514 	andseq	r0, r1, r4, lsl r5
    52a8:	06020402 	streq	r0, [r2], -r2, lsl #8
    52ac:	00030501 	andeq	r0, r3, r1, lsl #10
    52b0:	06020402 	streq	r0, [r2], -r2, lsl #8
    52b4:	0011053f 	andseq	r0, r1, pc, lsr r5
    52b8:	06020402 	streq	r0, [r2], -r2, lsl #8
    52bc:	000a0501 	andeq	r0, sl, r1, lsl #10
    52c0:	20020402 	andcs	r0, r2, r2, lsl #8
    52c4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    52c8:	23060204 	movwcs	r0, #25092	; 0x6204
    52cc:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    52d0:	01060204 	tsteq	r6, r4, lsl #4
    52d4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    52d8:	31060204 	tstcc	r6, r4, lsl #4
    52dc:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    52e0:	01060204 	tsteq	r6, r4, lsl #4
    52e4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    52e8:	31060204 	tstcc	r6, r4, lsl #4
    52ec:	02040200 	andeq	r0, r4, #0, 4
    52f0:	00110522 	andseq	r0, r1, r2, lsr #10
    52f4:	06020402 	streq	r0, [r2], -r2, lsl #8
    52f8:	04020001 	streq	r0, [r2], #-1
    52fc:	03052002 	movweq	r2, #20482	; 0x5002
    5300:	02040200 	andeq	r0, r4, #0, 4
    5304:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    5308:	00010204 	andeq	r0, r1, r4, lsl #4
    530c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5310:	02040200 	andeq	r0, r4, #0, 4
    5314:	000a0514 	andeq	r0, sl, r4, lsl r5
    5318:	06020402 	streq	r0, [r2], -r2, lsl #8
    531c:	04020001 	streq	r0, [r2], #-1
    5320:	03052002 	movweq	r2, #20482	; 0x5002
    5324:	05206b03 	streq	r6, [r0, #-2819]!	; 0xfffff4fd
    5328:	20160301 	andscs	r0, r6, r1, lsl #6
    532c:	01000102 	tsteq	r0, r2, lsl #2
    5330:	00010501 	andeq	r0, r1, r1, lsl #10
    5334:	00000205 	andeq	r0, r0, r5, lsl #4
    5338:	b7030000 	strlt	r0, [r3, -r0]
    533c:	03050116 	movweq	r0, #20758	; 0x5116
    5340:	00011513 	andeq	r1, r1, r3, lsl r5
    5344:	4a020402 	bmi	86354 <_Min_Heap_Size+0x85b54>
    5348:	02040200 	andeq	r0, r4, #0, 4
    534c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5350:	11051402 	tstne	r5, r2, lsl #8
    5354:	02040200 	andeq	r0, r4, #0, 4
    5358:	03050106 	movweq	r0, #20742	; 0x5106
    535c:	02040200 	andeq	r0, r4, #0, 4
    5360:	11053f06 	tstne	r5, r6, lsl #30
    5364:	02040200 	andeq	r0, r4, #0, 4
    5368:	0a050106 	beq	145788 <_Min_Heap_Size+0x144f88>
    536c:	02040200 	andeq	r0, r4, #0, 4
    5370:	00030520 	andeq	r0, r3, r0, lsr #10
    5374:	06020402 	streq	r0, [r2], -r2, lsl #8
    5378:	000a0523 	andeq	r0, sl, r3, lsr #10
    537c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5380:	00030501 	andeq	r0, r3, r1, lsl #10
    5384:	06020402 	streq	r0, [r2], -r2, lsl #8
    5388:	000a0531 	andeq	r0, sl, r1, lsr r5
    538c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5390:	00030501 	andeq	r0, r3, r1, lsl #10
    5394:	06020402 	streq	r0, [r2], -r2, lsl #8
    5398:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    539c:	11052202 	tstne	r5, r2, lsl #4
    53a0:	02040200 	andeq	r0, r4, #0, 4
    53a4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    53a8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    53ac:	04020003 	streq	r0, [r2], #-3
    53b0:	00310602 	eorseq	r0, r1, r2, lsl #12
    53b4:	01020402 	tsteq	r2, r2, lsl #8
    53b8:	02040200 	andeq	r0, r4, #0, 4
    53bc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    53c0:	0a051402 	beq	14a3d0 <_Min_Heap_Size+0x149bd0>
    53c4:	02040200 	andeq	r0, r4, #0, 4
    53c8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    53cc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    53d0:	206b0303 	rsbcs	r0, fp, r3, lsl #6
    53d4:	16030105 	strne	r0, [r3], -r5, lsl #2
    53d8:	00010220 	andeq	r0, r1, r0, lsr #4
    53dc:	01050101 	tsteq	r5, r1, lsl #2
    53e0:	00020500 	andeq	r0, r2, r0, lsl #10
    53e4:	03000000 	movweq	r0, #0
    53e8:	050116f0 	streq	r1, [r1, #-1776]	; 0xfffff910
    53ec:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    53f0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    53f4:	052f0603 	streq	r0, [pc, #-1539]!	; 4df9 <_Min_Heap_Size+0x45f9>
    53f8:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    53fc:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    5400:	20130601 	andscs	r0, r3, r1, lsl #12
    5404:	01000102 	tsteq	r0, r2, lsl #2
    5408:	00010501 	andeq	r0, r1, r1, lsl #10
    540c:	00000205 	andeq	r0, r0, r5, lsl #4
    5410:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    5414:	03050116 	movweq	r0, #20758	; 0x5116
    5418:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    541c:	21010501 	tstcs	r1, r1, lsl #10
    5420:	01000102 	tsteq	r0, r2, lsl #2
    5424:	00010501 	andeq	r0, r1, r1, lsl #10
    5428:	00000205 	andeq	r0, r0, r5, lsl #4
    542c:	a4030000 	strge	r0, [r3], #-0
    5430:	03050119 	movweq	r0, #20761	; 0x5119
    5434:	06150513 			; <UNDEFINED> instruction: 0x06150513
    5438:	06030501 	streq	r0, [r3], -r1, lsl #10
    543c:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    5440:	06030501 	streq	r0, [r3], -r1, lsl #10
    5444:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    5448:	06030501 	streq	r0, [r3], -r1, lsl #10
    544c:	06140522 	ldreq	r0, [r4], -r2, lsr #10
    5450:	06030501 	streq	r0, [r3], -r1, lsl #10
    5454:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    5458:	06030501 	streq	r0, [r3], -r1, lsl #10
    545c:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    5460:	20060501 	andcs	r0, r6, r1, lsl #10
    5464:	23060505 	movwcs	r0, #25861	; 0x6505
    5468:	03052006 	movweq	r2, #20486	; 0x5006
    546c:	5a5b4e06 	bpl	16d8c8c <_Min_Heap_Size+0x16d848c>
    5470:	13060105 	movwne	r0, #24837	; 0x6105
    5474:	00010220 	andeq	r0, r1, r0, lsr #4
    5478:	01050101 	tsteq	r5, r1, lsl #2
    547c:	00020500 	andeq	r0, r2, r0, lsl #10
    5480:	03000000 	movweq	r0, #0
    5484:	06010ac3 	streq	r0, [r1], -r3, asr #21
    5488:	06030501 	streq	r0, [r3], -r1, lsl #10
    548c:	060c0522 	streq	r0, [ip], -r2, lsr #10
    5490:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    5494:	30060505 	andcc	r0, r6, r5, lsl #10
    5498:	01060805 	tsteq	r6, r5, lsl #16
    549c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    54a0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    54a4:	0105220e 	tsteq	r5, lr, lsl #4
    54a8:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    54ac:	78030605 	stmdavc	r3, {r0, r2, r9, sl}
    54b0:	061a0520 	ldreq	r0, [sl], -r0, lsr #10
    54b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    54b8:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    54bc:	0c052e01 	stceq	14, cr2, [r5], {1}
    54c0:	0e052024 	cdpeq	0, 0, cr2, cr5, cr4, {1}
    54c4:	20207603 	eorcs	r7, r0, r3, lsl #12
    54c8:	01000102 	tsteq	r0, r2, lsl #2
    54cc:	00010501 	andeq	r0, r1, r1, lsl #10
    54d0:	00000205 	andeq	r0, r0, r5, lsl #4
    54d4:	b1030000 	mrslt	r0, (UNDEF: 3)
    54d8:	0305010d 	movweq	r0, #20749	; 0x510d
    54dc:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    54e0:	06050106 	streq	r0, [r5], -r6, lsl #2
    54e4:	2a01053c 	bcs	469dc <_Min_Heap_Size+0x461dc>
    54e8:	42060505 	andmi	r0, r6, #20971520	; 0x1400000
    54ec:	01060805 	tsteq	r6, r5, lsl #16
    54f0:	02001905 	andeq	r1, r0, #81920	; 0x14000
    54f4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    54f8:	0105220e 	tsteq	r5, lr, lsl #4
    54fc:	05202103 	streq	r2, [r0, #-259]!	; 0xfffffefd
    5500:	63030605 	movwvs	r0, #13829	; 0x3605
    5504:	061a052e 	ldreq	r0, [sl], -lr, lsr #10
    5508:	06050501 	streq	r0, [r5], -r1, lsl #10
    550c:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    5510:	06050501 	streq	r0, [r5], -r1, lsl #10
    5514:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    5518:	06050501 	streq	r0, [r5], -r1, lsl #10
    551c:	06080531 			; <UNDEFINED> instruction: 0x06080531
    5520:	06070501 	streq	r0, [r7], -r1, lsl #10
    5524:	06100530 			; <UNDEFINED> instruction: 0x06100530
    5528:	200a0501 	andcs	r0, sl, r1, lsl #10
    552c:	0b031005 	bleq	c9548 <_Min_Heap_Size+0xc8d48>
    5530:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5534:	060c0524 	streq	r0, [ip], -r4, lsr #10
    5538:	06090501 	streq	r0, [r9], -r1, lsl #10
    553c:	01207303 			; <UNDEFINED> instruction: 0x01207303
    5540:	002e3c2e 	eoreq	r3, lr, lr, lsr #24
    5544:	20010402 	andcs	r0, r1, r2, lsl #8
    5548:	01040200 	mrseq	r0, R12_usr
    554c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5550:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    5554:	00010104 	andeq	r0, r1, r4, lsl #2
    5558:	01010402 	tsteq	r1, r2, lsl #8
    555c:	1f050204 	svcne	0x00050204
    5560:	01040200 	mrseq	r0, R12_usr
    5564:	20769303 	rsbscs	r9, r6, r3, lsl #6
    5568:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    556c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    5570:	04020004 	streq	r0, [r2], #-4
    5574:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    5578:	2e060104 	adfcss	f0, f6, f4
    557c:	01040200 	mrseq	r0, R12_usr
    5580:	02002f06 	andeq	r2, r0, #6, 30
    5584:	01060104 	tsteq	r6, r4, lsl #2
    5588:	09050104 	stmdbeq	r5, {r2, r8}
    558c:	01040200 	mrseq	r0, R12_usr
    5590:	0109e803 	tsteq	r9, r3, lsl #16
    5594:	01040200 	mrseq	r0, R12_usr
    5598:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    559c:	02001f05 	andeq	r1, r0, #5, 30
    55a0:	c6030104 	strgt	r0, [r3], -r4, lsl #2
    55a4:	04050176 	streq	r0, [r5], #-374	; 0xfffffe8a
    55a8:	01040200 	mrseq	r0, R12_usr
    55ac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    55b0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    55b4:	20060104 	andcs	r0, r6, r4, lsl #2
    55b8:	01040200 	mrseq	r0, R12_usr
    55bc:	02002f06 	andeq	r2, r0, #6, 30
    55c0:	01060104 	tsteq	r6, r4, lsl #2
    55c4:	09050104 	stmdbeq	r5, {r2, r8}
    55c8:	01040200 	mrseq	r0, R12_usr
    55cc:	0109b503 	tsteq	r9, r3, lsl #10
    55d0:	01040200 	mrseq	r0, R12_usr
    55d4:	030c053c 	movweq	r0, #50492	; 0xc53c
    55d8:	01050110 	tsteq	r5, r0, lsl r1
    55dc:	030e0522 	movweq	r0, #58658	; 0xe522
    55e0:	0220205f 	eoreq	r2, r0, #95	; 0x5f
    55e4:	01010001 	tsteq	r1, r1
    55e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    55ec:	00000002 	andeq	r0, r0, r2
    55f0:	19c70300 	stmibne	r7, {r8, r9}^
    55f4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    55f8:	144b0603 	strbne	r0, [fp], #-1539	; 0xfffff9fd
    55fc:	01061505 	tsteq	r6, r5, lsl #10
    5600:	21060305 	tstcs	r6, r5, lsl #6
    5604:	01061505 	tsteq	r6, r5, lsl #10
    5608:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    560c:	01061405 	tsteq	r6, r5, lsl #8
    5610:	2f060305 	svccs	0x00060305
    5614:	01061205 	tsteq	r6, r5, lsl #4
    5618:	06030520 	streq	r0, [r3], -r0, lsr #10
    561c:	06080531 			; <UNDEFINED> instruction: 0x06080531
    5620:	20230501 	eorcs	r0, r3, r1, lsl #10
    5624:	06030520 	streq	r0, [r3], -r0, lsr #10
    5628:	06080523 	streq	r0, [r8], -r3, lsr #10
    562c:	20270501 	eorcs	r0, r7, r1, lsl #10
    5630:	31060305 	tstcc	r6, r5, lsl #6
    5634:	01060805 	tsteq	r6, r5, lsl #16
    5638:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    563c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    5640:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5644:	03052024 	movweq	r2, #20516	; 0x5024
    5648:	05132306 	ldreq	r2, [r3, #-774]	; 0xfffffcfa
    564c:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    5650:	062e2003 	strteq	r2, [lr], -r3
    5654:	3c20013f 	stfccs	f0, [r0], #-252	; 0xffffff04
    5658:	0514202e 	ldreq	r2, [r4, #-46]	; 0xffffffd2
    565c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    5660:	05052006 	streq	r2, [r5, #-6]
    5664:	01040200 	mrseq	r0, R12_usr
    5668:	02002306 	andeq	r2, r0, #402653184	; 0x18000000
    566c:	00010104 	andeq	r0, r1, r4, lsl #2
    5670:	01010402 	tsteq	r1, r2, lsl #8
    5674:	01040200 	mrseq	r0, R12_usr
    5678:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    567c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5680:	69f50301 	ldmibvs	r5!, {r0, r8, r9}^
    5684:	00050520 	andeq	r0, r5, r0, lsr #10
    5688:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    568c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5690:	00140104 	andseq	r0, r4, r4, lsl #2
    5694:	06010402 	streq	r0, [r1], -r2, lsl #8
    5698:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    569c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    56a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    56a4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    56a8:	04020005 	streq	r0, [r2], #-5
    56ac:	16860301 	strne	r0, [r6], r1, lsl #6
    56b0:	04020001 	streq	r0, [r2], #-1
    56b4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    56b8:	001f0502 	andseq	r0, pc, r2, lsl #10
    56bc:	03010402 	movweq	r0, #5122	; 0x1402
    56c0:	05016aa8 	streq	r6, [r1, #-2728]	; 0xfffff558
    56c4:	04020004 	streq	r0, [r2], #-4
    56c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    56cc:	00140104 	andseq	r0, r4, r4, lsl #2
    56d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    56d4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    56d8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    56dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    56e0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    56e4:	04020005 	streq	r0, [r2], #-5
    56e8:	15d30301 	ldrbne	r0, [r3, #769]	; 0x301
    56ec:	04020001 	streq	r0, [r2], #-1
    56f0:	02002e01 	andeq	r2, r0, #1, 28
    56f4:	01060104 	tsteq	r6, r4, lsl #2
    56f8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    56fc:	00160104 	andseq	r0, r6, r4, lsl #2
    5700:	01010402 	tsteq	r1, r2, lsl #8
    5704:	01040200 	mrseq	r0, R12_usr
    5708:	04020001 	streq	r0, [r2], #-1
    570c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5710:	02001f05 	andeq	r1, r0, #5, 30
    5714:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    5718:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    571c:	01040200 	mrseq	r0, R12_usr
    5720:	00040514 	andeq	r0, r4, r4, lsl r5
    5724:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5728:	01040200 	mrseq	r0, R12_usr
    572c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5730:	2f060104 	svccs	0x00060104
    5734:	01040200 	mrseq	r0, R12_usr
    5738:	01040106 	tsteq	r4, r6, lsl #2
    573c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5740:	8a030104 	bhi	c5b58 <_Min_Heap_Size+0xc5358>
    5744:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    5748:	2e060104 	adfcss	f0, f6, f4
    574c:	1f050204 	svcne	0x00050204
    5750:	01040200 	mrseq	r0, R12_usr
    5754:	016aa403 	cmneq	sl, r3, lsl #8
    5758:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    575c:	00140104 	andseq	r0, r4, r4, lsl #2
    5760:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5764:	01040200 	mrseq	r0, R12_usr
    5768:	02002006 	andeq	r2, r0, #6
    576c:	2f060104 	svccs	0x00060104
    5770:	01040200 	mrseq	r0, R12_usr
    5774:	01040106 	tsteq	r4, r6, lsl #2
    5778:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    577c:	d7030104 	strle	r0, [r3, -r4, lsl #2]
    5780:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    5784:	002e0104 	eoreq	r0, lr, r4, lsl #2
    5788:	06010402 	streq	r0, [r1], -r2, lsl #8
    578c:	04020001 	streq	r0, [r2], #-1
    5790:	02001601 	andeq	r1, r0, #1048576	; 0x100000
    5794:	00010104 	andeq	r0, r1, r4, lsl #2
    5798:	01010402 	tsteq	r1, r2, lsl #8
    579c:	01040200 	mrseq	r0, R12_usr
    57a0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    57a4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    57a8:	69ed0301 	stmibvs	sp!, {r0, r8, r9}^
    57ac:	00050520 	andeq	r0, r5, r0, lsr #10
    57b0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    57b4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    57b8:	00140104 	andseq	r0, r4, r4, lsl #2
    57bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    57c0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    57c4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    57c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    57cc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    57d0:	04020003 	streq	r0, [r2], #-3
    57d4:	168e0301 	strne	r0, [lr], r1, lsl #6
    57d8:	04020001 	streq	r0, [r2], #-1
    57dc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    57e0:	001f0502 	andseq	r0, pc, r2, lsl #10
    57e4:	03010402 	movweq	r0, #5122	; 0x1402
    57e8:	05016aa0 	streq	r6, [r1, #-2720]	; 0xfffff560
    57ec:	04020004 	streq	r0, [r2], #-4
    57f0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    57f4:	00140104 	andseq	r0, r4, r4, lsl #2
    57f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    57fc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5800:	002f0601 	eoreq	r0, pc, r1, lsl #12
    5804:	06010402 	streq	r0, [r1], -r2, lsl #8
    5808:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    580c:	04020003 	streq	r0, [r2], #-3
    5810:	15db0301 	ldrbne	r0, [fp, #769]	; 0x301
    5814:	04020001 	streq	r0, [r2], #-1
    5818:	002e0602 	eoreq	r0, lr, r2, lsl #12
    581c:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    5820:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    5824:	13060204 	movwne	r0, #25092	; 0x6204
    5828:	02040200 	andeq	r0, r4, #0, 4
    582c:	0006023c 	andeq	r0, r6, ip, lsr r2
    5830:	01050101 	tsteq	r5, r1, lsl #2
    5834:	00020500 	andeq	r0, r2, r0, lsl #10
    5838:	03000000 	movweq	r0, #0
    583c:	06010ba1 	streq	r0, [r1], -r1, lsr #23
    5840:	06030501 	streq	r0, [r3], -r1, lsl #10
    5844:	060c0522 	streq	r0, [ip], -r2, lsr #10
    5848:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    584c:	30060505 	andcc	r0, r6, r5, lsl #10
    5850:	01060805 	tsteq	r6, r5, lsl #16
    5854:	02001905 	andeq	r1, r0, #81920	; 0x14000
    5858:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    585c:	0105220e 	tsteq	r5, lr, lsl #4
    5860:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    5864:	78030605 	stmdavc	r3, {r0, r2, r9, sl}
    5868:	061a0520 	ldreq	r0, [sl], -r0, lsr #10
    586c:	06050501 	streq	r0, [r5], -r1, lsl #10
    5870:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    5874:	0c052e01 	stceq	14, cr2, [r5], {1}
    5878:	0e052024 	cdpeq	0, 0, cr2, cr5, cr4, {1}
    587c:	20207603 	eorcs	r7, r0, r3, lsl #12
    5880:	01000102 	tsteq	r0, r2, lsl #2
    5884:	00010501 	andeq	r0, r1, r1, lsl #10
    5888:	00000205 	andeq	r0, r0, r5, lsl #4
    588c:	ed030000 	stc	0, cr0, [r3, #-0]
    5890:	0305010d 	movweq	r0, #20749	; 0x510d
    5894:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    5898:	06050106 	streq	r0, [r5], -r6, lsl #2
    589c:	2a01053c 	bcs	46d94 <_Min_Heap_Size+0x46594>
    58a0:	42060505 	andmi	r0, r6, #20971520	; 0x1400000
    58a4:	01060805 	tsteq	r6, r5, lsl #16
    58a8:	02001905 	andeq	r1, r0, #81920	; 0x14000
    58ac:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    58b0:	0105220e 	tsteq	r5, lr, lsl #4
    58b4:	05202103 	streq	r2, [r0, #-259]!	; 0xfffffefd
    58b8:	63030605 	movwvs	r0, #13829	; 0x3605
    58bc:	061a052e 	ldreq	r0, [sl], -lr, lsr #10
    58c0:	06050501 	streq	r0, [r5], -r1, lsl #10
    58c4:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    58c8:	06050501 	streq	r0, [r5], -r1, lsl #10
    58cc:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    58d0:	06050501 	streq	r0, [r5], -r1, lsl #10
    58d4:	06080531 			; <UNDEFINED> instruction: 0x06080531
    58d8:	06070501 	streq	r0, [r7], -r1, lsl #10
    58dc:	06100530 			; <UNDEFINED> instruction: 0x06100530
    58e0:	200a0501 	andcs	r0, sl, r1, lsl #10
    58e4:	0b031005 	bleq	c9900 <_Min_Heap_Size+0xc9100>
    58e8:	0605052e 	streq	r0, [r5], -lr, lsr #10
    58ec:	060c0524 	streq	r0, [ip], -r4, lsr #10
    58f0:	06090501 	streq	r0, [r9], -r1, lsl #10
    58f4:	01207303 			; <UNDEFINED> instruction: 0x01207303
    58f8:	002e3c2e 	eoreq	r3, lr, lr, lsr #24
    58fc:	20010402 	andcs	r0, r1, r2, lsl #8
    5900:	01040200 	mrseq	r0, R12_usr
    5904:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5908:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    590c:	00010104 	andeq	r0, r1, r4, lsl #2
    5910:	01010402 	tsteq	r1, r2, lsl #8
    5914:	1f050204 	svcne	0x00050204
    5918:	01040200 	mrseq	r0, R12_usr
    591c:	2075d703 	rsbscs	sp, r5, r3, lsl #14
    5920:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5924:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    5928:	04020004 	streq	r0, [r2], #-4
    592c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    5930:	2e060104 	adfcss	f0, f6, f4
    5934:	01040200 	mrseq	r0, R12_usr
    5938:	02002f06 	andeq	r2, r0, #6, 30
    593c:	01060104 	tsteq	r6, r4, lsl #2
    5940:	09050104 	stmdbeq	r5, {r2, r8}
    5944:	01040200 	mrseq	r0, R12_usr
    5948:	010aa403 	tsteq	sl, r3, lsl #8
    594c:	01040200 	mrseq	r0, R12_usr
    5950:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    5954:	02001f05 	andeq	r1, r0, #5, 30
    5958:	8a030104 	bhi	c5d70 <_Min_Heap_Size+0xc5570>
    595c:	04050176 	streq	r0, [r5], #-374	; 0xfffffe8a
    5960:	01040200 	mrseq	r0, R12_usr
    5964:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5968:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    596c:	20060104 	andcs	r0, r6, r4, lsl #2
    5970:	01040200 	mrseq	r0, R12_usr
    5974:	02002f06 	andeq	r2, r0, #6, 30
    5978:	01060104 	tsteq	r6, r4, lsl #2
    597c:	09050104 	stmdbeq	r5, {r2, r8}
    5980:	01040200 	mrseq	r0, R12_usr
    5984:	0109f103 	tsteq	r9, r3, lsl #2	; <UNPREDICTABLE>
    5988:	01040200 	mrseq	r0, R12_usr
    598c:	030c053c 	movweq	r0, #50492	; 0xc53c
    5990:	01050110 	tsteq	r5, r0, lsl r1
    5994:	030e0522 	movweq	r0, #58658	; 0xe522
    5998:	0220205f 	eoreq	r2, r0, #95	; 0x5f
    599c:	01010001 	tsteq	r1, r1
    59a0:	00000ca7 	andeq	r0, r0, r7, lsr #25
    59a4:	02410003 	subeq	r0, r1, #3
    59a8:	01020000 	mrseq	r0, (UNDEF: 2)
    59ac:	000d0efb 	strdeq	r0, [sp], -fp
    59b0:	01010101 	tsteq	r1, r1, lsl #2
    59b4:	01000000 	mrseq	r0, (UNDEF: 0)
    59b8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    59bc:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    59c0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    59c4:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    59c8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    59cc:	5f787834 	svcpl	0x00787834
    59d0:	5f4c4148 	svcpl	0x004c4148
    59d4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    59d8:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    59dc:	63006372 	movwvs	r6, #882	; 0x372
    59e0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    59e4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    59e8:	6f646978 	svcvs	0x00646978
    59ec:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    59f0:	6172676f 	cmnvs	r2, pc, ror #14
    59f4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    59f8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    59fc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    5a00:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    5a04:	6f6e2d6d 	svcvs	0x006e2d6d
    5a08:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5a0c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    5a10:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    5a14:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    5a18:	30312e31 	eorscc	r2, r1, r1, lsr lr
    5a1c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    5a20:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    5a24:	61652d65 	cmnvs	r5, r5, ror #26
    5a28:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    5a2c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5a30:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    5a34:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    5a38:	6300656e 	movwvs	r6, #1390	; 0x56e
    5a3c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    5a40:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    5a44:	6f646978 	svcvs	0x00646978
    5a48:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    5a4c:	6172676f 	cmnvs	r2, pc, ror #14
    5a50:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    5a54:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    5a58:	63675c63 	cmnvs	r7, #25344	; 0x6300
    5a5c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    5a60:	6f6e2d6d 	svcvs	0x006e2d6d
    5a64:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5a68:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    5a6c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    5a70:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    5a74:	30312e31 	eorscc	r2, r1, r1, lsr lr
    5a78:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    5a7c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    5a80:	61652d65 	cmnvs	r5, r5, ror #26
    5a84:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    5a88:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5a8c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    5a90:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    5a94:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    5a98:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    5a9c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    5aa0:	2f534953 	svccs	0x00534953
    5aa4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    5aa8:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    5aac:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    5ab0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    5ab4:	2f787834 	svccs	0x00787834
    5ab8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    5abc:	00656475 	rsbeq	r6, r5, r5, ror r4
    5ac0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 5ac8 <_Min_Heap_Size+0x52c8>
    5ac4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    5ac8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    5acc:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    5ad0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    5ad4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    5ad8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    5adc:	2f726576 	svccs	0x00726576
    5ae0:	00636e49 	rsbeq	r6, r3, r9, asr #28
    5ae4:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    5ae8:	2f65726f 	svccs	0x0065726f
    5aec:	00636e49 	rsbeq	r6, r3, r9, asr #28
    5af0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5af4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5af8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5afc:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    5b00:	632e6363 			; <UNDEFINED> instruction: 0x632e6363
    5b04:	00000100 	andeq	r0, r0, r0, lsl #2
    5b08:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    5b0c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    5b10:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    5b14:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    5b18:	00000200 	andeq	r0, r0, r0, lsl #4
    5b1c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    5b20:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    5b24:	00030068 	andeq	r0, r3, r8, rrx
    5b28:	73797300 	cmnvc	r9, #0, 6
    5b2c:	5f6d6574 	svcpl	0x006d6574
    5b30:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5b34:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5b38:	00682e78 	rsbeq	r2, r8, r8, ror lr
    5b3c:	73000004 	movwvc	r0, #4
    5b40:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5b44:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    5b48:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    5b4c:	00000400 	andeq	r0, r0, r0, lsl #8
    5b50:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5b54:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5b58:	00682e78 	rsbeq	r2, r8, r8, ror lr
    5b5c:	73000004 	movwvc	r0, #4
    5b60:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5b64:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5b68:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5b6c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    5b70:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    5b74:	74730000 	ldrbtvc	r0, [r3], #-0
    5b78:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5b7c:	5f787834 	svcpl	0x00787834
    5b80:	5f6c6168 	svcpl	0x006c6168
    5b84:	5f636372 	svcpl	0x00636372
    5b88:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    5b8c:	00000500 	andeq	r0, r0, r0, lsl #10
    5b90:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5b94:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5b98:	61685f78 	smcvs	34296	; 0x85f8
    5b9c:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    5ba0:	00682e63 	rsbeq	r2, r8, r3, ror #28
    5ba4:	73000005 	movwvc	r0, #5
    5ba8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5bac:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5bb0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5bb4:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    5bb8:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    5bbc:	73000005 	movwvc	r0, #5
    5bc0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5bc4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5bc8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5bcc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    5bd0:	74730000 	ldrbtvc	r0, [r3], #-0
    5bd4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5bd8:	5f787834 	svcpl	0x00787834
    5bdc:	5f6c6168 	svcpl	0x006c6168
    5be0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    5be4:	0600682e 	streq	r6, [r0], -lr, lsr #16
    5be8:	05000000 	streq	r0, [r0, #-0]
    5bec:	02050001 	andeq	r0, r5, #1
    5bf0:	00000000 	andeq	r0, r0, r0
    5bf4:	0101c803 	tsteq	r1, r3, lsl #16
    5bf8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    5bfc:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    5c00:	01010002 	tsteq	r1, r2
    5c04:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c08:	00000002 	andeq	r0, r0, r2
    5c0c:	01db0300 	bicseq	r0, fp, r0, lsl #6
    5c10:	13030501 	movwne	r0, #13569	; 0x3501
    5c14:	06050515 			; <UNDEFINED> instruction: 0x06050515
    5c18:	38010501 	stmdacc	r1, {r0, r8, sl}
    5c1c:	03060305 	movweq	r0, #25349	; 0x6305
    5c20:	053e3c0a 	ldreq	r3, [lr, #-3082]!	; 0xfffff3f6
    5c24:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5c28:	3f062005 	svccc	0x00062005
    5c2c:	01040200 	mrseq	r0, R12_usr
    5c30:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5c34:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    5c38:	0609053e 			; <UNDEFINED> instruction: 0x0609053e
    5c3c:	4a070501 	bmi	1c7048 <_Min_Heap_Size+0x1c6848>
    5c40:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5c44:	052f0104 	streq	r0, [pc, #-260]!	; 5b48 <_Min_Heap_Size+0x5348>
    5c48:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5c4c:	07054901 	streq	r4, [r5, -r1, lsl #18]
    5c50:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    5c54:	04020001 	streq	r0, [r2], #-1
    5c58:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    5c5c:	003c0504 	eorseq	r0, ip, r4, lsl #10
    5c60:	58050402 	stmdapl	r5, {r1, sl}
    5c64:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c68:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    5c6c:	1c051507 	cfstr32ne	mvfx1, [r5], {7}
    5c70:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c74:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5c78:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5c7c:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
    5c80:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5c84:	053f0609 	ldreq	r0, [pc, #-1545]!	; 5683 <_Min_Heap_Size+0x4e83>
    5c88:	0f05010e 	svceq	0x0005010e
    5c8c:	0e050106 	adfeqs	f0, f5, f6
    5c90:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5c94:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5c98:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5c9c:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5ca0:	03053014 	movweq	r3, #20500	; 0x5014
    5ca4:	01040200 	mrseq	r0, R12_usr
    5ca8:	002e6103 	eoreq	r6, lr, r3, lsl #2
    5cac:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5cb0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5cb4:	05410304 	strbeq	r0, [r1, #-772]	; 0xfffffcfc
    5cb8:	3c055b44 			; <UNDEFINED> instruction: 0x3c055b44
    5cbc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    5cc0:	060b053e 			; <UNDEFINED> instruction: 0x060b053e
    5cc4:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    5cc8:	02004e05 	andeq	r4, r0, #5, 28	; 0x50
    5ccc:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5cd0:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    5cd4:	03052001 	movweq	r2, #20481	; 0x5001
    5cd8:	3c2a0306 	stccc	3, cr0, [sl], #-24	; 0xffffffe8
    5cdc:	01061905 	tsteq	r6, r5, lsl #18
    5ce0:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5ce4:	053f3d3f 	ldreq	r3, [pc, #-3391]!	; 4fad <_Min_Heap_Size+0x47ad>
    5ce8:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    5cec:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
    5cf0:	01040200 	mrseq	r0, R12_usr
    5cf4:	003c053d 	eorseq	r0, ip, sp, lsr r5
    5cf8:	49010402 	stmdbmi	r1, {r1, sl}
    5cfc:	03060705 	movweq	r0, #26373	; 0x6705
    5d00:	1c052e12 	stcne	14, cr2, [r5], {18}
    5d04:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5d08:	3f310620 	svccc	0x00310620
    5d0c:	01061505 	tsteq	r6, r5, lsl #10
    5d10:	3f060905 	svccc	0x00060905
    5d14:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    5d18:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5d1c:	0b052e0e 	bleq	15155c <_Min_Heap_Size+0x150d5c>
    5d20:	0f053e06 	svceq	0x00053e06
    5d24:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    5d28:	200d052e 	andcs	r0, sp, lr, lsr #10
    5d2c:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    5d30:	04020007 	streq	r0, [r2], #-7
    5d34:	b8030601 	stmdalt	r3, {r0, r9, sl}
    5d38:	02002e7f 	andeq	r2, r0, #2032	; 0x7f0
    5d3c:	00660404 	rsbeq	r0, r6, r4, lsl #8
    5d40:	58040402 	stmdapl	r4, {r1, sl}
    5d44:	14030905 	strne	r0, [r3], #-2309	; 0xfffff6fb
    5d48:	06150558 			; <UNDEFINED> instruction: 0x06150558
    5d4c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5d50:	010e053f 	tsteq	lr, pc, lsr r5
    5d54:	01060f05 	tsteq	r6, r5, lsl #30
    5d58:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5d5c:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    5d60:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5d64:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    5d68:	30140520 	andscc	r0, r4, r0, lsr #10
    5d6c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5d70:	0a030104 	beq	c6188 <_Min_Heap_Size+0xc5988>
    5d74:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d78:	44056701 	strmi	r6, [r5], #-1793	; 0xfffff8ff
    5d7c:	2e3c056a 	cdpcs	5, 3, cr0, cr12, cr10, {3}
    5d80:	3f060705 	svccc	0x00060705
    5d84:	01060b05 	tsteq	r6, r5, lsl #22
    5d88:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    5d8c:	0402004e 	streq	r0, [r2], #-78	; 0xffffffb2
    5d90:	39053c01 	stmdbcc	r5, {r0, sl, fp, ip, sp}
    5d94:	01040200 	mrseq	r0, R12_usr
    5d98:	06090520 	streq	r0, [r9], -r0, lsr #10
    5d9c:	03030544 	movweq	r0, #13636	; 0x3544
    5da0:	1905822e 	stmdbne	r5, {r1, r2, r3, r5, r9, pc}
    5da4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5da8:	3f3f0620 	svccc	0x003f0620
    5dac:	01061a05 	tsteq	r6, r5, lsl #20
    5db0:	06200705 	strteq	r0, [r0], -r5, lsl #14
    5db4:	13054d23 	movwne	r4, #23843	; 0x5d23
    5db8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5dbc:	0c053f06 	stceq	15, cr3, [r5], {6}
    5dc0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5dc4:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    5dc8:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    5dcc:	01060d05 	tsteq	r6, r5, lsl #26
    5dd0:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5dd4:	1205200b 	andne	r2, r5, #11
    5dd8:	06090530 			; <UNDEFINED> instruction: 0x06090530
    5ddc:	952e5703 	strls	r5, [lr, #-1795]!	; 0xfffff8fd
    5de0:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    5de4:	06090501 	streq	r0, [r9], -r1, lsl #10
    5de8:	010e053f 	tsteq	lr, pc, lsr r5
    5dec:	01060f05 	tsteq	r6, r5, lsl #30
    5df0:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5df4:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    5df8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5dfc:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    5e00:	30140520 	andscc	r0, r4, r0, lsr #10
    5e04:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5e08:	0a030104 	beq	c6220 <_Min_Heap_Size+0xc5a20>
    5e0c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    5e10:	4d661703 	stclmi	7, cr1, [r6, #-12]!
    5e14:	01061305 	tsteq	r6, r5, lsl #6
    5e18:	3f060705 	svccc	0x00060705
    5e1c:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5e20:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5e24:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    5e28:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    5e2c:	1b050106 	blne	14624c <_Min_Heap_Size+0x145a4c>
    5e30:	200b052e 	andcs	r0, fp, lr, lsr #10
    5e34:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    5e38:	05880603 	streq	r0, [r8, #1539]	; 0x603
    5e3c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5e40:	3e062005 	cdpcc	0, 0, cr2, cr6, cr5, {0}
    5e44:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    5e48:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    5e4c:	06080532 			; <UNDEFINED> instruction: 0x06080532
    5e50:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    5e54:	2e013e06 	cdpcs	14, 0, cr3, cr1, cr6, {0}
    5e58:	13204a58 			; <UNDEFINED> instruction: 0x13204a58
    5e5c:	01061505 	tsteq	r6, r5, lsl #10
    5e60:	23060505 	movwcs	r0, #25861	; 0x6505
    5e64:	01060805 	tsteq	r6, r5, lsl #16
    5e68:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    5e6c:	12030605 	andne	r0, r3, #5242880	; 0x500000
    5e70:	0200013c 	andeq	r0, r0, #60, 2
    5e74:	003c0204 	eorseq	r0, ip, r4, lsl #4
    5e78:	2e050402 	cdpcs	4, 0, cr0, cr5, cr2, {0}
    5e7c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5e80:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    5e84:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    5e88:	05140704 	ldreq	r0, [r4, #-1796]	; 0xfffff8fc
    5e8c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    5e90:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    5e94:	04020007 	streq	r0, [r2], #-7
    5e98:	31062007 	tstcc	r6, r7
    5e9c:	01061305 	tsteq	r6, r5, lsl #6
    5ea0:	3f060705 	svccc	0x00060705
    5ea4:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5ea8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5eac:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    5eb0:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    5eb4:	1b050106 	blne	1462d4 <_Min_Heap_Size+0x145ad4>
    5eb8:	200b052e 	andcs	r0, fp, lr, lsr #10
    5ebc:	054c1205 	strbeq	r1, [ip, #-517]	; 0xfffffdfb
    5ec0:	04020005 	streq	r0, [r2], #-5
    5ec4:	2e580302 	cdpcs	3, 5, cr0, cr8, cr2, {0}
    5ec8:	05631605 	strbeq	r1, [r3, #-1541]!	; 0xfffff9fb
    5ecc:	10030607 	andne	r0, r3, r7, lsl #12
    5ed0:	13055b2e 	movwne	r5, #23342	; 0x5b2e
    5ed4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5ed8:	0c053e06 	stceq	14, cr3, [r5], {6}
    5edc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5ee0:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    5ee4:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    5ee8:	01060d05 	tsteq	r6, r5, lsl #26
    5eec:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5ef0:	1205200b 	andne	r2, r5, #11
    5ef4:	00050530 	andeq	r0, r5, r0, lsr r5
    5ef8:	06010402 	streq	r0, [r1], -r2, lsl #8
    5efc:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    5f00:	02006604 	andeq	r6, r0, #4, 12	; 0x400000
    5f04:	05580404 	ldrbeq	r0, [r8, #-1028]	; 0xfffffbfc
    5f08:	58130307 	ldmdapl	r3, {r0, r1, r2, r8, r9}
    5f0c:	01061305 	tsteq	r6, r5, lsl #6
    5f10:	3f060705 	svccc	0x00060705
    5f14:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5f18:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5f1c:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    5f20:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    5f24:	1b050106 	blne	146344 <_Min_Heap_Size+0x145b44>
    5f28:	200b052e 	andcs	r0, fp, lr, lsr #10
    5f2c:	054c1205 	strbeq	r1, [ip, #-517]	; 0xfffffdfb
    5f30:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    5f34:	2e010607 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx7
    5f38:	19060305 	stmdbne	r6, {r0, r2, r8, r9}
    5f3c:	061e053d 			; <UNDEFINED> instruction: 0x061e053d
    5f40:	20060501 	andcs	r0, r6, r1, lsl #10
    5f44:	3f060505 	svccc	0x00060505
    5f48:	01060805 	tsteq	r6, r5, lsl #16
    5f4c:	064a0705 	strbeq	r0, [sl], -r5, lsl #14
    5f50:	0609053e 			; <UNDEFINED> instruction: 0x0609053e
    5f54:	00310601 	eorseq	r0, r1, r1, lsl #12
    5f58:	06010402 	streq	r0, [r1], -r2, lsl #8
    5f5c:	4b3d062e 	blmi	f4781c <_Min_Heap_Size+0xf4701c>
    5f60:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    5f64:	003c0601 	eorseq	r0, ip, r1, lsl #12
    5f68:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    5f6c:	03040200 	movweq	r0, #16896	; 0x4200
    5f70:	4d2f062e 	stcmi	6, cr0, [pc, #-184]!	; 5ec0 <_Min_Heap_Size+0x56c0>
    5f74:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    5f78:	06090501 	streq	r0, [r9], -r1, lsl #10
    5f7c:	010e053f 	tsteq	lr, pc, lsr r5
    5f80:	01060f05 	tsteq	r6, r5, lsl #30
    5f84:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5f88:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    5f8c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5f90:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    5f94:	30140520 	andscc	r0, r4, r0, lsr #10
    5f98:	03060705 	movweq	r0, #26373	; 0x6705
    5f9c:	66062e61 	strvs	r2, [r6], -r1, ror #28
    5fa0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5fa4:	05170104 	ldreq	r0, [r7, #-260]	; 0xfffffefc
    5fa8:	04020009 	streq	r0, [r2], #-9
    5fac:	66090302 	strvs	r0, [r9], -r2, lsl #6
    5fb0:	01040200 	mrseq	r0, R12_usr
    5fb4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5fb8:	02006701 	andeq	r6, r0, #262144	; 0x40000
    5fbc:	00670404 	rsbeq	r0, r7, r4, lsl #8
    5fc0:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    5fc4:	66120306 	ldrvs	r0, [r2], -r6, lsl #6
    5fc8:	15053ff8 	strne	r3, [r5, #-4088]	; 0xfffff008
    5fcc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5fd0:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5fd4:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5fd8:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    5fdc:	3e060b05 	vmlacc.f64	d0, d6, d5
    5fe0:	01060f05 	tsteq	r6, r5, lsl #30
    5fe4:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5fe8:	1405200d 	strne	r2, [r5], #-13
    5fec:	030a0530 	movweq	r0, #42288	; 0xa530
    5ff0:	09052e37 	stmdbeq	r5, {r0, r1, r2, r4, r5, r9, sl, fp, sp}
    5ff4:	2e500306 	cdpcs	3, 5, cr0, cr0, cr6, {0}
    5ff8:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    5ffc:	06090501 	streq	r0, [r9], -r1, lsl #10
    6000:	010e053f 	tsteq	lr, pc, lsr r5
    6004:	01060f05 	tsteq	r6, r5, lsl #30
    6008:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    600c:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    6010:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6014:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    6018:	30140520 	andscc	r0, r4, r0, lsr #10
    601c:	26030a05 	strcs	r0, [r3], -r5, lsl #20
    6020:	0607052e 	streq	r0, [r7], -lr, lsr #10
    6024:	052e6203 	streq	r6, [lr, #-515]!	; 0xfffffdfd
    6028:	06010609 	streq	r0, [r1], -r9, lsl #12
    602c:	06140535 			; <UNDEFINED> instruction: 0x06140535
    6030:	06090501 	streq	r0, [r9], -r1, lsl #10
    6034:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    6038:	0513060e 	ldreq	r0, [r3, #-1550]	; 0xfffff9f2
    603c:	40052e50 	andmi	r2, r5, r0, asr lr
    6040:	300e051f 	andcc	r0, lr, pc, lsl r5
    6044:	052e5605 	streq	r5, [lr, #-1541]!	; 0xfffff9fb
    6048:	4f051f5c 	svcmi	0x00051f5c
    604c:	1f6f0530 	svcne	0x006f0530
    6050:	05680e05 	strbeq	r0, [r8, #-3589]!	; 0xfffff1fb
    6054:	57052e51 	smlsdpl	r5, r1, lr, r2
    6058:	205e0520 	subscs	r0, lr, r0, lsr #10
    605c:	051f6f05 	ldreq	r6, [pc, #-3845]	; 515f <_Min_Heap_Size+0x495f>
    6060:	4f053e0e 	svcmi	0x00053e0e
    6064:	1f7e052e 	svcne	0x007e052e
    6068:	09030a05 	stmdbeq	r3, {r0, r2, r9, fp}
    606c:	030c053c 	movweq	r0, #50492	; 0xc53c
    6070:	052e7daf 	streq	r7, [lr, #-3503]!	; 0xfffff251
    6074:	02d20301 	sbcseq	r0, r2, #67108864	; 0x4000000
    6078:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    607c:	03207dbe 			; <UNDEFINED> instruction: 0x03207dbe
    6080:	0a052e35 	beq	15195c <_Min_Heap_Size+0x15115c>
    6084:	2e028c03 	cdpcs	12, 0, cr8, cr2, cr3, {0}
    6088:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    608c:	2e630310 	mcrcs	3, 3, r0, cr3, cr0, {0}
    6090:	17031205 	strne	r1, [r3, -r5, lsl #4]
    6094:	0202f22e 	andeq	pc, r2, #-536870910	; 0xe0000002
    6098:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    609c:	02050001 	andeq	r0, r5, #1
    60a0:	00000000 	andeq	r0, r0, r0
    60a4:	01068703 	tsteq	r6, r3, lsl #14
    60a8:	03050106 	movweq	r0, #20742	; 0x5106
    60ac:	2f145906 	svccs	0x00145906
    60b0:	01040200 	mrseq	r0, R12_usr
    60b4:	02002006 	andeq	r2, r0, #6
    60b8:	003c0204 	eorseq	r0, ip, r4, lsl #4
    60bc:	3c030402 	cfstrscc	mvf0, [r3], {2}
    60c0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    60c4:	053e063c 	ldreq	r0, [lr, #-1596]!	; 0xfffff9c4
    60c8:	06010605 	streq	r0, [r1], -r5, lsl #12
    60cc:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    60d0:	00200601 	eoreq	r0, r0, r1, lsl #12
    60d4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    60d8:	03040200 	movweq	r0, #16896	; 0x4200
    60dc:	013f063c 	teqeq	pc, ip, lsr r6	; <UNPREDICTABLE>
    60e0:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    60e4:	15204a4a 	strne	r4, [r0, #-2634]!	; 0xfffff5b6
    60e8:	01061905 	tsteq	r6, r5, lsl #18
    60ec:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    60f0:	01061a05 	tsteq	r6, r5, lsl #20
    60f4:	2f060505 	svccs	0x00060505
    60f8:	01061b05 	tsteq	r6, r5, lsl #22
    60fc:	2f060505 	svccs	0x00060505
    6100:	01061a05 	tsteq	r6, r5, lsl #20
    6104:	21060505 	tstcs	r6, r5, lsl #10
    6108:	01061f05 	tsteq	r6, r5, lsl #30
    610c:	21060505 	tstcs	r6, r5, lsl #10
    6110:	054a064d 	strbeq	r0, [sl, #-1613]	; 0xfffff9b3
    6114:	2e200301 	cdpcs	3, 2, cr0, cr0, cr1, {0}
    6118:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    611c:	4d030104 	stfmis	f0, [r3, #-16]
    6120:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6124:	02002e01 	andeq	r2, r0, #1, 28
    6128:	00200104 	eoreq	r0, r0, r4, lsl #2
    612c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6130:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6134:	00050521 	andeq	r0, r5, r1, lsr #10
    6138:	6a040402 	bvs	107148 <_Min_Heap_Size+0x106948>
    613c:	66180306 	ldrvs	r0, [r8], -r6, lsl #6
    6140:	01040200 	mrseq	r0, R12_usr
    6144:	02002006 	andeq	r2, r0, #6
    6148:	003c0204 	eorseq	r0, ip, r4, lsl #4
    614c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    6150:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    6154:	4a062006 	bmi	18e174 <_Min_Heap_Size+0x18d974>
    6158:	0515204a 	ldreq	r2, [r5, #-74]	; 0xffffffb6
    615c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    6160:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    6164:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6168:	052f0605 	streq	r0, [pc, #-1541]!	; 5b6b <_Min_Heap_Size+0x536b>
    616c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6170:	052f0605 	streq	r0, [pc, #-1541]!	; 5b73 <_Min_Heap_Size+0x5373>
    6174:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    6178:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    617c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    6180:	4d210605 	stcmi	6, cr0, [r1, #-20]!	; 0xffffffec
    6184:	01055806 	tsteq	r5, r6, lsl #16
    6188:	00050536 	andeq	r0, r5, r6, lsr r5
    618c:	03040402 	movweq	r0, #17410	; 0x4402
    6190:	0e02206a 	cdpeq	0, 0, cr2, cr2, cr10, {3}
    6194:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6198:	02050001 	andeq	r0, r5, #1
    619c:	00000000 	andeq	r0, r0, r0
    61a0:	0106c903 	tsteq	r6, r3, lsl #18
    61a4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    61a8:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    61ac:	03023d01 	movweq	r3, #11521	; 0x2d01
    61b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    61b4:	02050001 	andeq	r0, r5, #1
    61b8:	00000000 	andeq	r0, r0, r0
    61bc:	0106d203 	tsteq	r6, r3, lsl #4
    61c0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    61c4:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    61c8:	03023d01 	movweq	r3, #11521	; 0x2d01
    61cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    61d0:	02050001 	andeq	r0, r5, #1
    61d4:	00000000 	andeq	r0, r0, r0
    61d8:	0106f503 	tsteq	r6, r3, lsl #10	; <UNPREDICTABLE>
    61dc:	13210305 			; <UNDEFINED> instruction: 0x13210305
    61e0:	060e0515 			; <UNDEFINED> instruction: 0x060e0515
    61e4:	2e150501 	cfmul32cs	mvfx0, mvfx5, mvfx1
    61e8:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
    61ec:	10030607 	andne	r0, r3, r7, lsl #12
    61f0:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    61f4:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    61f8:	2f060705 	svccs	0x00060705
    61fc:	01060a05 	tsteq	r6, r5, lsl #20
    6200:	06200905 	strteq	r0, [r0], -r5, lsl #18
    6204:	0648053f 			; <UNDEFINED> instruction: 0x0648053f
    6208:	2e380501 	cdpcs	5, 3, cr0, cr8, cr1, {0}
    620c:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    6210:	66080182 	strvs	r0, [r8], -r2, lsl #3
    6214:	7b060705 	blvc	187e30 <_Min_Heap_Size+0x187630>
    6218:	01061505 	tsteq	r6, r5, lsl #10
    621c:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    6220:	0c052e4c 	stceq	14, cr2, [r5], {76}	; 0x4c
    6224:	06070520 	streq	r0, [r7], -r0, lsr #10
    6228:	06140522 	ldreq	r0, [r4], -r2, lsr #10
    622c:	06070501 	streq	r0, [r7], -r1, lsl #10
    6230:	1b09052f 	blne	2476f4 <_Min_Heap_Size+0x246ef4>
    6234:	01064805 	tsteq	r6, r5, lsl #16
    6238:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
    623c:	82052e35 	andhi	r2, r5, #848	; 0x350
    6240:	74660801 	strbtvc	r0, [r6], #-2049	; 0xfffff7ff
    6244:	70031405 	andvc	r1, r3, r5, lsl #8
    6248:	03030520 	movweq	r0, #13600	; 0x3520
    624c:	03062e77 	movweq	r2, #28279	; 0x6e77
    6250:	01052026 	tsteq	r5, r6, lsr #32
    6254:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    6258:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    625c:	02050001 	andeq	r0, r5, #1
    6260:	00000000 	andeq	r0, r0, r0
    6264:	0104cf03 	tsteq	r4, r3, lsl #30
    6268:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    626c:	01060505 	tsteq	r6, r5, lsl #10
    6270:	05380105 	ldreq	r0, [r8, #-261]!	; 0xfffffefb
    6274:	0a030603 	beq	c7a88 <_Min_Heap_Size+0xc7288>
    6278:	05354b3c 	ldreq	r4, [r5, #-2876]!	; 0xfffff4c4
    627c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6280:	31064a05 	tstcc	r6, r5, lsl #20
    6284:	06080540 	streq	r0, [r8], -r0, asr #10
    6288:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
    628c:	43060305 	movwmi	r0, #25349	; 0x6305
    6290:	01061905 	tsteq	r6, r5, lsl #18
    6294:	06200505 	strteq	r0, [r0], -r5, lsl #10
    6298:	06070540 	streq	r0, [r7], -r0, asr #10
    629c:	053e0601 	ldreq	r0, [lr, #-1537]!	; 0xfffff9ff
    62a0:	1b055b05 	blne	15cebc <_Min_Heap_Size+0x15c6bc>
    62a4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    62a8:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    62ac:	02005b05 	andeq	r5, r0, #5120	; 0x1400
    62b0:	2e060104 	adfcss	f0, f6, f4
    62b4:	02040200 	andeq	r0, r4, #0, 4
    62b8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    62bc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    62c0:	002e0404 	eoreq	r0, lr, r4, lsl #8
    62c4:	2e050402 	cdpcs	4, 0, cr0, cr5, cr2, {0}
    62c8:	06040200 	streq	r0, [r4], -r0, lsl #4
    62cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    62d0:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    62d4:	062e0804 	strteq	r0, [lr], -r4, lsl #16
    62d8:	7803052f 	stmdavc	r3, {r0, r1, r2, r3, r5, r8, sl}
    62dc:	01061905 	tsteq	r6, r5, lsl #18
    62e0:	06200505 	strteq	r0, [r0], -r5, lsl #10
    62e4:	19053f3e 	stmdbne	r5, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp}
    62e8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    62ec:	060a0520 	streq	r0, [sl], -r0, lsr #10
    62f0:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    62f4:	0501064c 	streq	r0, [r1, #-1612]	; 0xfffff9b4
    62f8:	0705200c 	streq	r2, [r5, -ip]
    62fc:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    6300:	01060a05 	tsteq	r6, r5, lsl #20
    6304:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    6308:	69500605 	ldmdbvs	r0, {r0, r2, r9, sl}^
    630c:	01061105 	tsteq	r6, r5, lsl #2
    6310:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    6314:	05010b05 	streq	r0, [r1, #-2821]	; 0xfffff4fb
    6318:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    631c:	0b054a3f 	bleq	158c20 <_Min_Heap_Size+0x158420>
    6320:	06070520 	streq	r0, [r7], -r0, lsr #10
    6324:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    6328:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    632c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6330:	03054c10 	movweq	r4, #23568	; 0x5c10
    6334:	01040200 	mrseq	r0, R12_usr
    6338:	2e7fad03 	cdpcs	13, 7, cr10, cr15, cr3, {0}
    633c:	01040200 	mrseq	r0, R12_usr
    6340:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6344:	02002001 	andeq	r2, r0, #1
    6348:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    634c:	04020005 	streq	r0, [r2], #-5
    6350:	66230309 	strtvs	r0, [r3], -r9, lsl #6
    6354:	01040200 	mrseq	r0, R12_usr
    6358:	0607056d 	streq	r0, [r7], -sp, ror #10
    635c:	060a056c 	streq	r0, [sl], -ip, ror #10
    6360:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    6364:	053e1005 	ldreq	r1, [lr, #-5]!
    6368:	05360607 	ldreq	r0, [r6, #-1543]!	; 0xfffff9f9
    636c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    6370:	10052e09 	andne	r2, r5, r9, lsl #28
    6374:	0603053e 			; <UNDEFINED> instruction: 0x0603053e
    6378:	052e1c03 	streq	r1, [lr, #-3075]!	; 0xfffff3fd
    637c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6380:	31064a05 	tstcc	r6, r5, lsl #20
    6384:	06080540 	streq	r0, [r8], -r0, asr #10
    6388:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
    638c:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
    6390:	01061905 	tsteq	r6, r5, lsl #18
    6394:	06200505 	strteq	r0, [r0], -r5, lsl #10
    6398:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    639c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    63a0:	3c020402 	cfstrscc	mvf0, [r2], {2}
    63a4:	03040200 	movweq	r0, #16896	; 0x4200
    63a8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    63ac:	3d063c04 	stccc	12, cr3, [r6, #-16]
    63b0:	05780305 	ldrbeq	r0, [r8, #-773]!	; 0xfffffcfb
    63b4:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    63b8:	3e062005 	cdpcc	0, 0, cr2, cr6, cr5, {0}
    63bc:	01040200 	mrseq	r0, R12_usr
    63c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    63c4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    63c8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    63cc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    63d0:	053d063c 	ldreq	r0, [sp, #-1596]!	; 0xfffff9c4
    63d4:	15058603 	strne	r8, [r5, #-1539]	; 0xfffff9fd
    63d8:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    63dc:	2e5b052e 	cdpcs	5, 5, cr0, cr11, cr14, {1}
    63e0:	052e3f05 	streq	r3, [lr, #-3845]!	; 0xfffff0fb
    63e4:	13052e2f 	movwne	r2, #24111	; 0x5e2f
    63e8:	06030520 	streq	r0, [r3], -r0, lsr #10
    63ec:	0a054c31 	beq	1594b8 <_Min_Heap_Size+0x158cb8>
    63f0:	01050106 	tsteq	r5, r6, lsl #2
    63f4:	00050521 	andeq	r0, r5, r1, lsr #10
    63f8:	03050402 	movweq	r0, #21506	; 0x5402
    63fc:	0200206e 	andeq	r2, r0, #110	; 0x6e
    6400:	056d0504 	strbeq	r0, [sp, #-1284]!	; 0xfffffafc
    6404:	7f8c030c 	svcvc	0x008c030c
    6408:	03010566 	movweq	r0, #5478	; 0x1566
    640c:	052000ff 	streq	r0, [r0, #-255]!	; 0xffffff01
    6410:	7f96030e 	svcvc	0x0096030e
    6414:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    6418:	0e052e35 	mcreq	14, 0, r2, cr5, cr5, {1}
    641c:	022e1c03 	eoreq	r1, lr, #768	; 0x300
    6420:	0101000e 	tsteq	r1, lr
    6424:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6428:	0011b002 	andseq	fp, r1, r2
    642c:	07ad0308 	streq	r0, [sp, r8, lsl #6]!
    6430:	13030501 	movwne	r0, #13569	; 0x3501
    6434:	13060105 	movwne	r0, #24837	; 0x6105
    6438:	01000602 	tsteq	r0, r2, lsl #12
    643c:	00010501 	andeq	r0, r1, r1, lsl #10
    6440:	11bc0205 			; <UNDEFINED> instruction: 0x11bc0205
    6444:	b8030800 	stmdalt	r3, {fp}
    6448:	03050107 	movweq	r0, #20743	; 0x5107
    644c:	060b0522 	streq	r0, [fp], -r2, lsr #10
    6450:	2e360501 	cdpcs	5, 3, cr0, cr6, cr1, {0}
    6454:	052e4e05 	streq	r4, [lr, #-3589]!	; 0xfffff1fb
    6458:	01052e31 	tsteq	r5, r1, lsr lr
    645c:	0007022f 	andeq	r0, r7, pc, lsr #4
    6460:	01050101 	tsteq	r5, r1, lsl #2
    6464:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
    6468:	03080011 	movweq	r0, #32785	; 0x8011
    646c:	050107c4 	streq	r0, [r1, #-1988]	; 0xfffff83c
    6470:	0b052203 	bleq	14ec84 <_Min_Heap_Size+0x14e484>
    6474:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    6478:	2e4d052e 	cdpcs	5, 4, cr0, cr13, cr14, {1}
    647c:	052e3005 	streq	r3, [lr, #-5]!
    6480:	07022f01 	streq	r2, [r2, -r1, lsl #30]
    6484:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6488:	02050001 	andeq	r0, r5, #1
    648c:	00000000 	andeq	r0, r0, r0
    6490:	0107d103 	tsteq	r7, r3, lsl #2
    6494:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    6498:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    649c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    64a0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    64a4:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    64a8:	01062105 	tsteq	r6, r5, lsl #2
    64ac:	03060305 	movweq	r0, #25349	; 0x6305
    64b0:	0a053c0c 	beq	1554e8 <_Min_Heap_Size+0x154ce8>
    64b4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    64b8:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    64bc:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    64c0:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
    64c4:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    64c8:	2a052e2c 	bcs	151d80 <_Min_Heap_Size+0x151580>
    64cc:	0603052e 	streq	r0, [r3], -lr, lsr #10
    64d0:	060a0523 	streq	r0, [sl], -r3, lsr #10
    64d4:	20050501 	andcs	r0, r5, r1, lsl #10
    64d8:	21053e06 	tstcs	r5, r6, lsl #28
    64dc:	03050106 	movweq	r0, #20742	; 0x5106
    64e0:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    64e4:	01060a05 	tsteq	r6, r5, lsl #20
    64e8:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    64ec:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    64f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    64f4:	060a0536 			; <UNDEFINED> instruction: 0x060a0536
    64f8:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    64fc:	25053e06 	strcs	r3, [r5, #-3590]	; 0xfffff1fa
    6500:	03050106 	movweq	r0, #20742	; 0x5106
    6504:	34053406 	strcc	r3, [r5], #-1030	; 0xfffffbfa
    6508:	26050106 	strcs	r0, [r5], -r6, lsl #2
    650c:	2e24052e 	cfsh64cs	mvdx0, mvdx4, #30
    6510:	21060305 	tstcs	r6, r5, lsl #6
    6514:	01062f05 	tsteq	r6, r5, lsl #30
    6518:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    651c:	03052e1f 	movweq	r2, #24095	; 0x5e1f
    6520:	30052106 	andcc	r2, r5, r6, lsl #2
    6524:	21050106 	tstcs	r5, r6, lsl #2
    6528:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    652c:	21060305 	tstcs	r6, r5, lsl #6
    6530:	01063205 	tsteq	r6, r5, lsl #4
    6534:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
    6538:	21052e50 	tstcs	r5, r0, asr lr
    653c:	201f052e 	andscs	r0, pc, lr, lsr #10
    6540:	21060305 	tstcs	r6, r5, lsl #6
    6544:	01063005 	tsteq	r6, r5
    6548:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    654c:	01052e1f 	tsteq	r5, pc, lsl lr
    6550:	06080521 	streq	r0, [r8], -r1, lsr #10
    6554:	05204503 	streq	r4, [r0, #-1283]!	; 0xfffffafd
    6558:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    655c:	05052e0a 	streq	r2, [r5, #-3594]	; 0xfffff1f6
    6560:	21053e06 	tstcs	r5, r6, lsl #28
    6564:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6568:	21054e06 	tstcs	r5, r6, lsl #28
    656c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6570:	3c0a0306 	stccc	3, cr0, [sl], {6}
    6574:	01062105 	tsteq	r6, r5, lsl #2
    6578:	03060805 	movweq	r0, #26629	; 0x6805
    657c:	0f053c0a 	svceq	0x00053c0a
    6580:	0a050106 	beq	1469a0 <_Min_Heap_Size+0x1461a0>
    6584:	0605052e 	streq	r0, [r5], -lr, lsr #10
    6588:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    658c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6590:	06210540 	strteq	r0, [r1], -r0, asr #10
    6594:	06050501 	streq	r0, [r5], -r1, lsl #10
    6598:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    659c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    65a0:	0a030605 	beq	c7dbc <_Min_Heap_Size+0xc75bc>
    65a4:	0625053c 			; <UNDEFINED> instruction: 0x0625053c
    65a8:	00060201 	andeq	r0, r6, r1, lsl #4
    65ac:	01050101 	tsteq	r5, r1, lsl #2
    65b0:	00020500 	andeq	r0, r2, r0, lsl #10
    65b4:	03000000 	movweq	r0, #0
    65b8:	050108a0 	streq	r0, [r1, #-2208]	; 0xfffff760
    65bc:	20051403 	andcs	r1, r5, r3, lsl #8
    65c0:	03050106 	movweq	r0, #20742	; 0x5106
    65c4:	33053106 	movwcc	r3, #20742	; 0x5106
    65c8:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    65cc:	2e23052e 	cfsh64cs	mvdx0, mvdx3, #30
    65d0:	23060305 	movwcs	r0, #25349	; 0x6305
    65d4:	01063405 	tsteq	r6, r5, lsl #8
    65d8:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    65dc:	03052e24 	movweq	r2, #24100	; 0x5e24
    65e0:	35052306 	strcc	r2, [r5, #-774]	; 0xfffffcfa
    65e4:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    65e8:	2e250520 	cfsh64cs	mvdx0, mvdx5, #16
    65ec:	23060305 	movwcs	r0, #25349	; 0x6305
    65f0:	01063605 	tsteq	r6, r5, lsl #12
    65f4:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    65f8:	03053c25 	movweq	r3, #23589	; 0x5c25
    65fc:	20052306 	andcs	r2, r5, r6, lsl #6
    6600:	10050106 	andne	r0, r5, r6, lsl #2
    6604:	2e0e052e 	cfsh32cs	mvfx0, mvfx14, #30
    6608:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    660c:	01010005 	tsteq	r1, r5
    6610:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6614:	00000002 	andeq	r0, r0, r2
    6618:	08cb0300 	stmiaeq	fp, {r8, r9}^
    661c:	01021601 	tsteq	r2, r1, lsl #12
    6620:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6624:	02050001 	andeq	r0, r5, #1
    6628:	00000000 	andeq	r0, r0, r0
    662c:	0108ba03 	tsteq	r8, r3, lsl #20
    6630:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
    6634:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    6638:	01052e05 	tsteq	r5, r5, lsl #28
    663c:	06050544 	streq	r0, [r5], -r4, asr #10
    6640:	0105311b 	tsteq	r5, fp, lsl r1
    6644:	04023e06 	streq	r3, [r2], #-3590	; 0xfffff1fa
    6648:	81010100 	mrshi	r0, (UNDEF: 17)
    664c:	03000008 	movweq	r0, #8
    6650:	0001e800 	andeq	lr, r1, r0, lsl #16
    6654:	fb010200 	blx	46e5e <_Min_Heap_Size+0x4665e>
    6658:	01000d0e 	tsteq	r0, lr, lsl #26
    665c:	00010101 	andeq	r0, r1, r1, lsl #2
    6660:	00010000 	andeq	r0, r1, r0
    6664:	2e2e0100 	sufcse	f0, f6, f0
    6668:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    666c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    6670:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    6674:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    6678:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    667c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 6684 <_Min_Heap_Size+0x5e84>
    6680:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6684:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    6688:	3a630063 	bcc	18c681c <_Min_Heap_Size+0x18c601c>
    668c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    6690:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    6694:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    6698:	6f72705c 	svcvs	0x0072705c
    669c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    66a0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    66a4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    66a8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    66ac:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    66b0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    66b4:	61652d65 	cmnvs	r5, r5, ror #26
    66b8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    66bc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    66c0:	31323032 	teqcc	r2, r2, lsr r0
    66c4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    66c8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    66cc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    66d0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    66d4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    66d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    66dc:	616d5c65 	cmnvs	sp, r5, ror #24
    66e0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    66e4:	3a630065 	bcc	18c6880 <_Min_Heap_Size+0x18c6080>
    66e8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    66ec:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    66f0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    66f4:	6f72705c 	svcvs	0x0072705c
    66f8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    66fc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6700:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    6704:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    6708:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    670c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    6710:	61652d65 	cmnvs	r5, r5, ror #26
    6714:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    6718:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    671c:	31323032 	teqcc	r2, r2, lsr r0
    6720:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    6724:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6728:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    672c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6730:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    6734:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6738:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    673c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    6740:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    6744:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    6748:	534d432f 	movtpl	r4, #54063	; 0xd32f
    674c:	442f5349 	strtmi	r5, [pc], #-841	; 6754 <_Min_Heap_Size+0x5f54>
    6750:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    6754:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    6758:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    675c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    6760:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    6764:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6768:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    676c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    6770:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6774:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    6778:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    677c:	5f787834 	svcpl	0x00787834
    6780:	5f4c4148 	svcpl	0x004c4148
    6784:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6788:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    678c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    6790:	6f432f2e 	svcvs	0x00432f2e
    6794:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    6798:	0000636e 	andeq	r6, r0, lr, ror #6
    679c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    67a0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    67a4:	61685f78 	smcvs	34296	; 0x85f8
    67a8:	70675f6c 	rsbvc	r5, r7, ip, ror #30
    67ac:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
    67b0:	00000100 	andeq	r0, r0, r0, lsl #2
    67b4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    67b8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    67bc:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    67c0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    67c4:	00000200 	andeq	r0, r0, r0, lsl #4
    67c8:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    67cc:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    67d0:	00030068 	andeq	r0, r3, r8, rrx
    67d4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    67d8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    67dc:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    67e0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    67e4:	74730000 	ldrbtvc	r0, [r3], #-0
    67e8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    67ec:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    67f0:	00040068 	andeq	r0, r4, r8, rrx
    67f4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    67f8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    67fc:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6800:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 6808 <_Min_Heap_Size+0x6008>
    6804:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    6808:	00000500 	andeq	r0, r0, r0, lsl #10
    680c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6810:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6814:	61685f78 	smcvs	34296	; 0x85f8
    6818:	70675f6c 	rsbvc	r5, r7, ip, ror #30
    681c:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    6820:	00000500 	andeq	r0, r0, r0, lsl #10
    6824:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6828:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    682c:	61685f78 	smcvs	34296	; 0x85f8
    6830:	6f635f6c 	svcvs	0x00635f6c
    6834:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    6838:	00000600 	andeq	r0, r0, r0, lsl #12
    683c:	00010500 	andeq	r0, r1, r0, lsl #10
    6840:	11fc0205 	mvnsne	r0, r5, lsl #4
    6844:	a4030800 	strge	r0, [r3], #-2048	; 0xfffff800
    6848:	01060101 	tsteq	r6, r1, lsl #2
    684c:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    6850:	15131313 	ldrne	r1, [r3, #-787]	; 0xfffffced
    6854:	01040200 	mrseq	r0, R12_usr
    6858:	02003c06 	andeq	r3, r0, #1536	; 0x600
    685c:	004a0204 	subeq	r0, sl, r4, lsl #4
    6860:	4a030402 	bmi	c7870 <_Min_Heap_Size+0xc7070>
    6864:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6868:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    686c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    6870:	004a0604 	subeq	r0, sl, r4, lsl #12
    6874:	4a070402 	bmi	1c7884 <_Min_Heap_Size+0x1c7084>
    6878:	08040200 	stmdaeq	r4, {r9}
    687c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6880:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    6884:	00200904 	eoreq	r0, r0, r4, lsl #18
    6888:	20090402 	andcs	r0, r9, r2, lsl #8
    688c:	02002f06 	andeq	r2, r0, #6, 30
    6890:	3c060204 	sfmcc	f0, 4, [r6], {4}
    6894:	03040200 	movweq	r0, #16896	; 0x4200
    6898:	004b063c 	subeq	r0, fp, ip, lsr r6
    689c:	06010402 	streq	r0, [r1], -r2, lsl #8
    68a0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    68a4:	02002e02 	andeq	r2, r0, #2, 28
    68a8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    68ac:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    68b0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    68b4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    68b8:	02003c06 	andeq	r3, r0, #1536	; 0x600
    68bc:	003c0704 	eorseq	r0, ip, r4, lsl #14
    68c0:	3c080402 	cfstrscc	mvf0, [r8], {2}
    68c4:	09040200 	stmdbeq	r4, {r9}
    68c8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    68cc:	1d053c0a 	stcne	12, cr3, [r5, #-40]	; 0xffffffd8
    68d0:	01040200 	mrseq	r0, R12_usr
    68d4:	2e00c703 	cdpcs	7, 0, cr12, cr0, cr3, {0}
    68d8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    68dc:	b9030b04 	stmdblt	r3, {r2, r8, r9, fp}
    68e0:	09052e7f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    68e4:	58120306 	ldmdapl	r2, {r1, r2, r8, r9}
    68e8:	060e053e 			; <UNDEFINED> instruction: 0x060e053e
    68ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    68f0:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    68f4:	202a0501 	eorcs	r0, sl, r1, lsl #10
    68f8:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    68fc:	052f0609 	streq	r0, [pc, #-1545]!	; 62fb <_Min_Heap_Size+0x5afb>
    6900:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    6904:	0e052023 	cdpeq	0, 0, cr2, cr5, cr3, {1}
    6908:	06090520 	streq	r0, [r9], -r0, lsr #10
    690c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    6910:	06090501 	streq	r0, [r9], -r1, lsl #10
    6914:	060e0523 	streq	r0, [lr], -r3, lsr #10
    6918:	06090501 	streq	r0, [r9], -r1, lsl #10
    691c:	060e0521 	streq	r0, [lr], -r1, lsr #10
    6920:	06090501 	streq	r0, [r9], -r1, lsl #10
    6924:	061d052f 	ldreq	r0, [sp], -pc, lsr #10
    6928:	20330501 	eorscs	r0, r3, r1, lsl #10
    692c:	052e4705 	streq	r4, [lr, #-1797]!	; 0xfffff8fb
    6930:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    6934:	17052106 	strne	r2, [r5, -r6, lsl #2]
    6938:	09050106 	stmdbeq	r5, {r1, r2, r8}
    693c:	01040200 	mrseq	r0, R12_usr
    6940:	002e7503 	eoreq	r7, lr, r3, lsl #10
    6944:	03010402 	movweq	r0, #5122	; 0x1402
    6948:	03065811 	movweq	r5, #26641	; 0x6811
    694c:	0200580d 	andeq	r5, r0, #851968	; 0xd0000
    6950:	2e060104 	adfcss	f0, f6, f4
    6954:	06040200 	streq	r0, [r4], -r0, lsl #4
    6958:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    695c:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
    6960:	002e0b04 	eoreq	r0, lr, r4, lsl #22
    6964:	2e0c0402 	cdpcs	4, 0, cr0, cr12, cr2, {0}
    6968:	0f040200 	svceq	0x00040200
    696c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6970:	02002e12 	andeq	r2, r0, #288	; 0x120
    6974:	002e1404 	eoreq	r1, lr, r4, lsl #8
    6978:	2e170402 	cfmulscs	mvf0, mvf7, mvf2
    697c:	1c040200 	sfmne	f0, 4, [r4], {-0}
    6980:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6984:	02002e1e 	andeq	r2, r0, #480	; 0x1e0
    6988:	062e2104 	strteq	r2, [lr], -r4, lsl #2
    698c:	06240530 			; <UNDEFINED> instruction: 0x06240530
    6990:	200e0501 	andcs	r0, lr, r1, lsl #10
    6994:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    6998:	01061c05 	tsteq	r6, r5, lsl #24
    699c:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
    69a0:	0e052018 	mcreq	0, 0, r2, cr5, cr8, {0}
    69a4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    69a8:	0626052f 	strteq	r0, [r6], -pc, lsr #10
    69ac:	20330501 	eorscs	r0, r3, r1, lsl #10
    69b0:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    69b4:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    69b8:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    69bc:	04020009 	streq	r0, [r2], #-9
    69c0:	1d053722 	stcne	7, cr3, [r5, #-136]	; 0xffffff78
    69c4:	05581703 	ldrbeq	r1, [r8, #-1795]	; 0xfffff8fd
    69c8:	34057412 	strcc	r7, [r5], #-1042	; 0xfffffbee
    69cc:	20040200 	andcs	r0, r4, r0, lsl #4
    69d0:	000e0520 	andeq	r0, lr, r0, lsr #10
    69d4:	20200402 	eorcs	r0, r0, r2, lsl #8
    69d8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    69dc:	21062004 	tstcs	r6, r4
    69e0:	02002805 	andeq	r2, r0, #327680	; 0x50000
    69e4:	01062004 	tsteq	r6, r4
    69e8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    69ec:	4d062004 	stcmi	0, cr2, [r6, #-16]
    69f0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    69f4:	01062004 	tsteq	r6, r4
    69f8:	20040200 	andcs	r0, r4, r0, lsl #4
    69fc:	00090520 	andeq	r0, r9, r0, lsr #10
    6a00:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6a04:	00110521 	andseq	r0, r1, r1, lsr #10
    6a08:	06200402 	strteq	r0, [r0], -r2, lsl #8
    6a0c:	000e0501 	andeq	r0, lr, r1, lsl #10
    6a10:	2e200402 	cdpcs	4, 2, cr0, cr0, cr2, {0}
    6a14:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6a18:	2f062004 	svccs	0x00062004
    6a1c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    6a20:	01062004 	tsteq	r6, r4
    6a24:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    6a28:	06202004 	strteq	r2, [r0], -r4
    6a2c:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    6a30:	06090501 	streq	r0, [r9], -r1, lsl #10
    6a34:	06140530 			; <UNDEFINED> instruction: 0x06140530
    6a38:	06090501 	streq	r0, [r9], -r1, lsl #10
    6a3c:	060e0530 			; <UNDEFINED> instruction: 0x060e0530
    6a40:	06090501 	streq	r0, [r9], -r1, lsl #10
    6a44:	060e0521 	streq	r0, [lr], -r1, lsr #10
    6a48:	06090501 	streq	r0, [r9], -r1, lsl #10
    6a4c:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    6a50:	200b0501 	andcs	r0, fp, r1, lsl #10
    6a54:	10053e06 	andne	r3, r5, r6, lsl #28
    6a58:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6a5c:	14053006 	strne	r3, [r5], #-6
    6a60:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6a64:	0e053006 	cdpeq	0, 0, cr3, cr5, cr6, {0}
    6a68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6a6c:	0e052106 	adfeqs	f2, f5, f6
    6a70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6a74:	16052f06 	strne	r2, [r5], -r6, lsl #30
    6a78:	0b050106 	bleq	146e98 <_Min_Heap_Size+0x146698>
    6a7c:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    6a80:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6a84:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    6a88:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    6a8c:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    6a90:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6a94:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6a98:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6a9c:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6aa0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6aa4:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    6aa8:	01061005 	tsteq	r6, r5
    6aac:	30060905 	andcc	r0, r6, r5, lsl #18
    6ab0:	01061305 	tsteq	r6, r5, lsl #6
    6ab4:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    6ab8:	03060204 	movweq	r0, #25092	; 0x6204
    6abc:	052e7f99 	streq	r7, [lr, #-3993]!	; 0xfffff067
    6ac0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    6ac4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    6ac8:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    6acc:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    6ad0:	04020003 	streq	r0, [r2], #-3
    6ad4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6ad8:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    6adc:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6ae0:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6ae4:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    6ae8:	0505200f 	streq	r2, [r5, #-15]
    6aec:	07053006 	streq	r3, [r5, -r6]
    6af0:	40060106 	andmi	r0, r6, r6, lsl #2
    6af4:	01061505 	tsteq	r6, r5, lsl #10
    6af8:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    6afc:	09052e39 	stmdbeq	r5, {r0, r3, r4, r5, r9, sl, fp, sp}
    6b00:	06070520 	streq	r0, [r7], -r0, lsr #10
    6b04:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    6b08:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6b0c:	0905201b 	stmdbeq	r5, {r0, r1, r3, r4, sp}
    6b10:	4d31062e 	ldcmi	6, cr0, [r1, #-184]!	; 0xffffff48
    6b14:	01060e05 	tsteq	r6, r5, lsl #28
    6b18:	21060905 	tstcs	r6, r5, lsl #18
    6b1c:	01063205 	tsteq	r6, r5, lsl #4
    6b20:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    6b24:	09052e0e 	stmdbeq	r5, {r1, r2, r3, r9, sl, fp, sp}
    6b28:	1c052f06 	stcne	15, cr2, [r5], {6}
    6b2c:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    6b30:	200e0520 	andcs	r0, lr, r0, lsr #10
    6b34:	21060905 	tstcs	r6, r5, lsl #18
    6b38:	01061605 	tsteq	r6, r5, lsl #12
    6b3c:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    6b40:	01061405 	tsteq	r6, r5, lsl #8
    6b44:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    6b48:	07052e09 	streq	r2, [r5, -r9, lsl #28]
    6b4c:	3c0c0306 	stccc	3, cr0, [ip], {6}
    6b50:	01060c05 	tsteq	r6, r5, lsl #24
    6b54:	21060705 	tstcs	r6, r5, lsl #14
    6b58:	01063005 	tsteq	r6, r5
    6b5c:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    6b60:	07052e0c 	streq	r2, [r5, -ip, lsl #28]
    6b64:	1a052f06 	bne	152784 <_Min_Heap_Size+0x151f84>
    6b68:	21050106 	tstcs	r5, r6, lsl #2
    6b6c:	2e2e0520 	cfsh64cs	mvdx0, mvdx14, #16
    6b70:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    6b74:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    6b78:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6b7c:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    6b80:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6b84:	3f062009 	svccc	0x00062009
    6b88:	4a582e01 	bmi	1612394 <_Min_Heap_Size+0x1611b94>
    6b8c:	28051420 	stmdacs	r5, {r5, sl, ip}
    6b90:	0e050106 	adfeqs	f0, f5, f6
    6b94:	06090520 	streq	r0, [r9], -r0, lsr #10
    6b98:	062c054b 	strteq	r0, [ip], -fp, asr #10
    6b9c:	2e200501 	cfsh64cs	mvdx0, mvdx0, #1
    6ba0:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    6ba4:	09052e0e 	stmdbeq	r5, {r1, r2, r3, r9, sl, fp, sp}
    6ba8:	12052f06 	andne	r2, r5, #6, 30
    6bac:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    6bb0:	01040200 	mrseq	r0, R12_usr
    6bb4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6bb8:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6bbc:	004a0504 	subeq	r0, sl, r4, lsl #10
    6bc0:	4a070402 	bmi	1c7bd0 <_Min_Heap_Size+0x1c73d0>
    6bc4:	09040200 	stmdbeq	r4, {r9}
    6bc8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6bcc:	02004a0b 	andeq	r4, r0, #45056	; 0xb000
    6bd0:	584a0d04 	stmdapl	sl, {r2, r8, sl, fp}^
    6bd4:	0105203c 	tsteq	r5, ip, lsr r0
    6bd8:	3c9e2703 	ldccc	7, cr2, [lr], {3}
    6bdc:	01000802 	tsteq	r0, r2, lsl #16
    6be0:	00010501 	andeq	r0, r1, r1, lsl #10
    6be4:	00000205 	andeq	r0, r0, r5, lsl #4
    6be8:	a6030000 	strge	r0, [r3], -r0
    6bec:	01060102 	tsteq	r6, r2, lsl #2
    6bf0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    6bf4:	15131313 	ldrne	r1, [r3, #-787]	; 0xfffffced
    6bf8:	01040200 	mrseq	r0, R12_usr
    6bfc:	02003c06 	andeq	r3, r0, #1536	; 0x600
    6c00:	004a0204 	subeq	r0, sl, r4, lsl #4
    6c04:	4a030402 	bmi	c7c14 <_Min_Heap_Size+0xc7414>
    6c08:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6c0c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c10:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    6c14:	004a0604 	subeq	r0, sl, r4, lsl #12
    6c18:	4a070402 	bmi	1c7c28 <_Min_Heap_Size+0x1c7428>
    6c1c:	08040200 	stmdaeq	r4, {r9}
    6c20:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c24:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    6c28:	002e0904 	eoreq	r0, lr, r4, lsl #18
    6c2c:	20090402 	andcs	r0, r9, r2, lsl #8
    6c30:	02001d05 	andeq	r1, r0, #320	; 0x140
    6c34:	0f030104 	svceq	0x00030104
    6c38:	12052e2e 	andne	r2, r5, #736	; 0x2e0
    6c3c:	0034052e 	eorseq	r0, r4, lr, lsr #10
    6c40:	20200402 	eorcs	r0, r0, r2, lsl #8
    6c44:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6c48:	052e2004 	streq	r2, [lr, #-4]!
    6c4c:	11030607 	tstne	r3, r7, lsl #12
    6c50:	0614052e 	ldreq	r0, [r4], -lr, lsr #10
    6c54:	20380501 	eorscs	r0, r8, r1, lsl #10
    6c58:	05202b05 	streq	r2, [r0, #-2821]!	; 0xfffff4fb
    6c5c:	07053c14 	smladeq	r5, r4, ip, r3
    6c60:	22053f06 	andcs	r3, r5, #6, 30
    6c64:	30050106 	andcc	r0, r5, r6, lsl #2
    6c68:	2e4d0558 	mcrcs	5, 2, r0, cr13, cr8, {2}
    6c6c:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    6c70:	07054a22 	streq	r4, [r5, -r2, lsr #20]
    6c74:	14054d06 	strne	r4, [r5], #-3334	; 0xfffff2fa
    6c78:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6c7c:	16054d06 	strne	r4, [r5], -r6, lsl #26
    6c80:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    6c84:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    6c88:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6c8c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6c90:	57030602 	strpl	r0, [r3, -r2, lsl #12]
    6c94:	0036054a 	eorseq	r0, r6, sl, asr #10
    6c98:	06020402 	streq	r0, [r2], -r2, lsl #8
    6c9c:	00160501 	andseq	r0, r6, r1, lsl #10
    6ca0:	06010402 	streq	r0, [r1], -r2, lsl #8
    6ca4:	00030520 	andeq	r0, r3, r0, lsr #10
    6ca8:	06010402 	streq	r0, [r1], -r2, lsl #8
    6cac:	06050501 	streq	r0, [r5], -r1, lsl #10
    6cb0:	06100531 			; <UNDEFINED> instruction: 0x06100531
    6cb4:	06050501 	streq	r0, [r5], -r1, lsl #10
    6cb8:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    6cbc:	06050501 	streq	r0, [r5], -r1, lsl #10
    6cc0:	06070530 			; <UNDEFINED> instruction: 0x06070530
    6cc4:	053f0601 	ldreq	r0, [pc, #-1537]!	; 66cb <_Min_Heap_Size+0x5ecb>
    6cc8:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    6ccc:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
    6cd0:	28055906 	stmdacs	r5, {r1, r2, r8, fp, ip, lr}
    6cd4:	1c050106 	stfnes	f0, [r5], {6}
    6cd8:	2015052e 	andscs	r0, r5, lr, lsr #10
    6cdc:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    6ce0:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    6ce4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6ce8:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6cec:	02003c01 	andeq	r3, r0, #256	; 0x100
    6cf0:	004a0304 	subeq	r0, sl, r4, lsl #6
    6cf4:	4a050402 	bmi	147d04 <_Min_Heap_Size+0x147504>
    6cf8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6cfc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6d00:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    6d04:	004a0b04 	subeq	r0, sl, r4, lsl #22
    6d08:	4a0d0402 	bmi	347d18 <_Min_Heap_Size+0x347518>
    6d0c:	0609054a 	streq	r0, [r9], -sl, asr #10
    6d10:	061305d9 			; <UNDEFINED> instruction: 0x061305d9
    6d14:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    6d18:	13053d06 	movwne	r3, #23814	; 0x5d06
    6d1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6d20:	14054d06 	strne	r4, [r5], #-3334	; 0xfffff2fa
    6d24:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6d28:	14054b06 	strne	r4, [r5], #-2822	; 0xfffff4fa
    6d2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6d30:	05134d06 	ldreq	r4, [r3, #-3334]	; 0xfffff2fa
    6d34:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    6d38:	9e140301 	cdpls	3, 1, cr0, cr4, cr1, {0}
    6d3c:	00080220 	andeq	r0, r8, r0, lsr #4
    6d40:	01050101 	tsteq	r5, r1, lsl #2
    6d44:	00020500 	andeq	r0, r2, r0, lsl #10
    6d48:	03000000 	movweq	r0, #0
    6d4c:	060102f7 			; <UNDEFINED> instruction: 0x060102f7
    6d50:	06030501 	streq	r0, [r3], -r1, lsl #10
    6d54:	0530152f 	ldreq	r1, [r0, #-1327]!	; 0xfffffad1
    6d58:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    6d5c:	0f052005 	svceq	0x00052005
    6d60:	06030530 			; <UNDEFINED> instruction: 0x06030530
    6d64:	06010526 	streq	r0, [r1], -r6, lsr #10
    6d68:	00030513 	andeq	r0, r3, r3, lsl r5
    6d6c:	03030402 	movweq	r0, #13314	; 0x3402
    6d70:	02002075 	andeq	r2, r0, #117	; 0x75
    6d74:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6d78:	20030402 	andcs	r0, r3, r2, lsl #8
    6d7c:	02440f05 	subeq	r0, r4, #5, 30
    6d80:	01010005 	tsteq	r1, r5
    6d84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6d88:	00000002 	andeq	r0, r0, r2
    6d8c:	039a0300 	orrseq	r0, sl, #0, 6
    6d90:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6d94:	2f3e0603 	svccs	0x003e0603
    6d98:	06050530 			; <UNDEFINED> instruction: 0x06050530
    6d9c:	05220601 	streq	r0, [r2, #-1537]!	; 0xfffff9ff
    6da0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6da4:	03052601 	movweq	r2, #22017	; 0x5601
    6da8:	03040200 	movweq	r0, #16896	; 0x4200
    6dac:	00207503 	eoreq	r7, r0, r3, lsl #10
    6db0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6db4:	03040200 	movweq	r0, #16896	; 0x4200
    6db8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6dbc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6dc0:	05210104 	streq	r0, [r1, #-260]!	; 0xfffffefc
    6dc4:	056e0605 	strbeq	r0, [lr, #-1541]!	; 0xfffff9fb
    6dc8:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    6dcc:	01052011 	tsteq	r5, r1, lsl r0
    6dd0:	00040222 	andeq	r0, r4, r2, lsr #4
    6dd4:	01050101 	tsteq	r5, r1, lsl #2
    6dd8:	00020500 	andeq	r0, r2, r0, lsl #10
    6ddc:	03000000 	movweq	r0, #0
    6de0:	060103b1 			; <UNDEFINED> instruction: 0x060103b1
    6de4:	06030501 	streq	r0, [r3], -r1, lsl #10
    6de8:	0531152f 	ldreq	r1, [r1, #-1327]!	; 0xfffffad1
    6dec:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6df0:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6df4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    6df8:	33052e3b 	movwcc	r2, #24123	; 0x5e3b
    6dfc:	2e0f052e 	cfsh32cs	mvfx0, mvfx15, #30
    6e00:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    6e04:	04020003 	streq	r0, [r2], #-3
    6e08:	20790303 	rsbscs	r0, r9, r3, lsl #6
    6e0c:	03040200 	movweq	r0, #16896	; 0x4200
    6e10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6e14:	06022003 	streq	r2, [r2], -r3
    6e18:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6e1c:	02050001 	andeq	r0, r5, #1
    6e20:	00000000 	andeq	r0, r0, r0
    6e24:	0103ca03 	tsteq	r3, r3, lsl #20
    6e28:	03050106 	movweq	r0, #20742	; 0x5106
    6e2c:	11053d06 	tstne	r5, r6, lsl #26
    6e30:	03050106 	movweq	r0, #20742	; 0x5106
    6e34:	05313f06 	ldreq	r3, [r1, #-3846]!	; 0xfffff0fa
    6e38:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6e3c:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    6e40:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6e44:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    6e48:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6e4c:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    6e50:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6e54:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    6e58:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6e5c:	02052007 	andeq	r2, r5, #7
    6e60:	0b052306 	bleq	14fa80 <_Min_Heap_Size+0x14f280>
    6e64:	04050106 	streq	r0, [r5], #-262	; 0xfffffefa
    6e68:	3e0c0520 	cfsh32cc	mvfx0, mvfx12, #16
    6e6c:	05260105 	streq	r0, [r6, #-261]!	; 0xfffffefb
    6e70:	04020003 	streq	r0, [r2], #-3
    6e74:	2e6a0303 	cdpcs	3, 6, cr0, cr10, cr3, {0}
    6e78:	03040200 	movweq	r0, #16896	; 0x4200
    6e7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6e80:	0c052003 	stceq	0, cr2, [r5], {3}
    6e84:	023c1403 	eorseq	r1, ip, #50331648	; 0x3000000
    6e88:	01010005 	tsteq	r1, r5
    6e8c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6e90:	00000002 	andeq	r0, r0, r2
    6e94:	03fb0300 	mvnseq	r0, #0, 6
    6e98:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    6e9c:	16060105 	strne	r0, [r6], -r5, lsl #2
    6ea0:	01000102 	tsteq	r0, r2, lsl #2
    6ea4:	00010501 	andeq	r0, r1, r1, lsl #10
    6ea8:	00000205 	andeq	r0, r0, r5, lsl #4
    6eac:	ec030000 	stc	0, cr0, [r3], {-0}
    6eb0:	01060103 	tsteq	r6, r3, lsl #2
    6eb4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    6eb8:	01060605 	tsteq	r6, r5, lsl #12
    6ebc:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    6ec0:	05053301 	streq	r3, [r5, #-769]	; 0xfffffcff
    6ec4:	052f1d06 	streq	r1, [pc, #-3334]!	; 61c6 <_Min_Heap_Size+0x59c6>
    6ec8:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    6ecc:	01010004 	tsteq	r1, r4
    6ed0:	00001010 	andeq	r1, r0, r0, lsl r0
    6ed4:	020f0003 	andeq	r0, pc, #3
    6ed8:	01020000 	mrseq	r0, (UNDEF: 2)
    6edc:	000d0efb 	strdeq	r0, [sp], -fp
    6ee0:	01010101 	tsteq	r1, r1, lsl #2
    6ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    6ee8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6eec:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    6ef0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6ef4:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    6ef8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    6efc:	5f787834 	svcpl	0x00787834
    6f00:	5f4c4148 	svcpl	0x004c4148
    6f04:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6f08:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    6f0c:	63006372 	movwvs	r6, #882	; 0x372
    6f10:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    6f14:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    6f18:	6f646978 	svcvs	0x00646978
    6f1c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    6f20:	6172676f 	cmnvs	r2, pc, ror #14
    6f24:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    6f28:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    6f2c:	63675c63 	cmnvs	r7, #25344	; 0x6300
    6f30:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    6f34:	6f6e2d6d 	svcvs	0x006e2d6d
    6f38:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6f3c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    6f40:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    6f44:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    6f48:	30312e31 	eorscc	r2, r1, r1, lsr lr
    6f4c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6f50:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    6f54:	61652d65 	cmnvs	r5, r5, ror #26
    6f58:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    6f5c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6f60:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    6f64:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    6f68:	6300656e 	movwvs	r6, #1390	; 0x56e
    6f6c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    6f70:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    6f74:	6f646978 	svcvs	0x00646978
    6f78:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    6f7c:	6172676f 	cmnvs	r2, pc, ror #14
    6f80:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    6f84:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    6f88:	63675c63 	cmnvs	r7, #25344	; 0x6300
    6f8c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    6f90:	6f6e2d6d 	svcvs	0x006e2d6d
    6f94:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6f98:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    6f9c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    6fa0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    6fa4:	30312e31 	eorscc	r2, r1, r1, lsr lr
    6fa8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6fac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    6fb0:	61652d65 	cmnvs	r5, r5, ror #26
    6fb4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    6fb8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6fbc:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    6fc0:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    6fc4:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    6fc8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6fcc:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    6fd0:	2f534953 	svccs	0x00534953
    6fd4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    6fd8:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    6fdc:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    6fe0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    6fe4:	2f787834 	svccs	0x00787834
    6fe8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    6fec:	00656475 	rsbeq	r6, r5, r5, ror r4
    6ff0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 6ff8 <_Min_Heap_Size+0x67f8>
    6ff4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6ff8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    6ffc:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    7000:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    7004:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    7008:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    700c:	2f726576 	svccs	0x00726576
    7010:	00636e49 	rsbeq	r6, r3, r9, asr #28
    7014:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    7018:	2f65726f 	svccs	0x0065726f
    701c:	00636e49 	rsbeq	r6, r3, r9, asr #28
    7020:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    7024:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7028:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    702c:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 7034 <_Min_Heap_Size+0x6834>
    7030:	632e616d 			; <UNDEFINED> instruction: 0x632e616d
    7034:	00000100 	andeq	r0, r0, r0, lsl #2
    7038:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    703c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    7040:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    7044:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    7048:	00000200 	andeq	r0, r0, r0, lsl #4
    704c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    7050:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    7054:	00030068 	andeq	r0, r3, r8, rrx
    7058:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    705c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7060:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    7064:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    7068:	74730000 	ldrbtvc	r0, [r3], #-0
    706c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    7070:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    7074:	00040068 	andeq	r0, r4, r8, rrx
    7078:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    707c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7080:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7084:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 708c <_Min_Heap_Size+0x688c>
    7088:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    708c:	00000500 	andeq	r0, r0, r0, lsl #10
    7090:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7094:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    7098:	61685f78 	smcvs	34296	; 0x85f8
    709c:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
    70a0:	00682e61 	rsbeq	r2, r8, r1, ror #28
    70a4:	73000005 	movwvc	r0, #5
    70a8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    70ac:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    70b0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    70b4:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    70b8:	00040068 	andeq	r0, r4, r8, rrx
    70bc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    70c0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    70c4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    70c8:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    70cc:	00000500 	andeq	r0, r0, r0, lsl #10
    70d0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    70d4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    70d8:	61685f78 	smcvs	34296	; 0x85f8
    70dc:	6f635f6c 	svcvs	0x00635f6c
    70e0:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    70e4:	00000600 	andeq	r0, r0, r0, lsl #12
    70e8:	00010500 	andeq	r0, r1, r0, lsl #10
    70ec:	00000205 	andeq	r0, r0, r5, lsl #4
    70f0:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    70f4:	01060108 	tsteq	r6, r8, lsl #2
    70f8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    70fc:	01060705 	tsteq	r6, r5, lsl #14
    7100:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    7104:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
    7108:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    710c:	03052018 	movweq	r2, #20504	; 0x5018
    7110:	11052306 	tstne	r5, r6, lsl #6
    7114:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7118:	0c030620 	stceq	6, cr0, [r3], {32}
    711c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    7120:	20190501 	andscs	r0, r9, r1, lsl #10
    7124:	23060505 	movwcs	r0, #25861	; 0x6505
    7128:	01060905 	tsteq	r6, r5, lsl #18
    712c:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    7130:	05052201 	streq	r2, [r5, #-513]	; 0xfffffdff
    7134:	2e720306 	cdpcs	3, 7, cr0, cr2, cr6, {0}
    7138:	01060905 	tsteq	r6, r5, lsl #18
    713c:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    7140:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    7144:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    7148:	0202201a 	andeq	r2, r2, #26
    714c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7150:	02050001 	andeq	r0, r5, #1
    7154:	00000000 	andeq	r0, r0, r0
    7158:	0109a103 	tsteq	r9, r3, lsl #2
    715c:	03050106 	movweq	r0, #20742	; 0x5106
    7160:	2c052106 	stfcss	f2, [r5], {6}
    7164:	37050106 	strcc	r0, [r5, -r6, lsl #2]
    7168:	20400520 	subcs	r0, r0, r0, lsr #10
    716c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    7170:	134d0603 	movtne	r0, #54787	; 0xd603
    7174:	01062905 	tsteq	r6, r5, lsl #18
    7178:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    717c:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    7180:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    7184:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    7188:	0501063a 	streq	r0, [r1, #-1594]	; 0xfffff9c6
    718c:	1d054a51 	vstrne	s8, [r5, #-324]	; 0xfffffebc
    7190:	06030520 	streq	r0, [r3], -r0, lsr #10
    7194:	06010528 	streq	r0, [r1], -r8, lsr #10
    7198:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
    719c:	39053806 	stmdbcc	r5, {r1, r2, fp, ip, sp}
    71a0:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    71a4:	0007024a 	andeq	r0, r7, sl, asr #4
    71a8:	01050101 	tsteq	r5, r1, lsl #2
    71ac:	00020500 	andeq	r0, r2, r0, lsl #10
    71b0:	03000000 	movweq	r0, #0
    71b4:	050109bd 	streq	r0, [r1, #-2493]	; 0xfffff643
    71b8:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
    71bc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    71c0:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    71c4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    71c8:	22062005 	andcs	r2, r6, #5
    71cc:	07056606 	streq	r6, [r5, -r6, lsl #12]
    71d0:	16052406 	strne	r2, [r5], -r6, lsl #8
    71d4:	0a050106 	beq	1475f4 <_Min_Heap_Size+0x146df4>
    71d8:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    71dc:	05203c76 	streq	r3, [r0, #-3190]!	; 0xfffff38a
    71e0:	10030607 	andne	r0, r3, r7, lsl #12
    71e4:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    71e8:	200a0501 	andcs	r0, sl, r1, lsl #10
    71ec:	70031505 	andvc	r1, r3, r5, lsl #10
    71f0:	0805203c 	stmdaeq	r5, {r2, r3, r4, r5, sp}
    71f4:	201d0306 	andscs	r0, sp, r6, lsl #6
    71f8:	01060b05 	tsteq	r6, r5, lsl #22
    71fc:	03060505 	movweq	r0, #25861	; 0x6505
    7200:	07053c1c 	smladeq	r5, ip, ip, r3
    7204:	06160552 			; <UNDEFINED> instruction: 0x06160552
    7208:	200a0501 	andcs	r0, sl, r1, lsl #10
    720c:	bf031505 	svclt	0x00031505
    7210:	05203c7f 	streq	r3, [r0, #-3199]!	; 0xfffff381
    7214:	1f030605 	svcne	0x00030605
    7218:	05740620 	ldrbeq	r0, [r4, #-1568]!	; 0xfffff9e0
    721c:	05270607 	streq	r0, [r7, #-1543]!	; 0xfffff9f9
    7220:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7224:	1505200a 	strne	r2, [r5, #-10]
    7228:	203c5a03 	eorscs	r5, ip, r3, lsl #20
    722c:	03060705 	movweq	r0, #26373	; 0x6705
    7230:	1505202c 	strne	r2, [r5, #-44]	; 0xffffffd4
    7234:	0a050106 	beq	147654 <_Min_Heap_Size+0x146e54>
    7238:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    723c:	05203c54 	streq	r3, [r0, #-3156]!	; 0xfffff3ac
    7240:	200c0310 	andcs	r0, ip, r0, lsl r3
    7244:	05202620 	streq	r2, [r0, #-1568]!	; 0xfffff9e0
    7248:	2011030e 	andscs	r0, r1, lr, lsl #6
    724c:	25100520 	ldrcs	r0, [r0, #-1312]	; 0xfffffae0
    7250:	05202620 	streq	r2, [r0, #-1568]!	; 0xfffff9e0
    7254:	2010030e 	andscs	r0, r0, lr, lsl #6
    7258:	1b050520 	blne	1486e0 <_Min_Heap_Size+0x147ee0>
    725c:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    7260:	0305200a 	movweq	r2, #20490	; 0x500a
    7264:	01052806 	tsteq	r5, r6, lsl #16
    7268:	01021306 	tsteq	r2, r6, lsl #6
    726c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7270:	02050001 	andeq	r0, r5, #1
    7274:	00000000 	andeq	r0, r0, r0
    7278:	0101aa03 	tsteq	r1, r3, lsl #20
    727c:	03050106 	movweq	r0, #20742	; 0x5106
    7280:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    7284:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    7288:	152f0603 	strne	r0, [pc, #-1539]!	; 6c8d <_Min_Heap_Size+0x648d>
    728c:	01060505 	tsteq	r6, r5, lsl #10
    7290:	50060305 	andpl	r0, r6, r5, lsl #6
    7294:	01040200 	mrseq	r0, R12_usr
    7298:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    729c:	003c0204 	eorseq	r0, ip, r4, lsl #4
    72a0:	3c030402 	cfstrscc	mvf0, [r3], {2}
    72a4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    72a8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    72ac:	02003c05 	andeq	r3, r0, #1280	; 0x500
    72b0:	003c0604 	eorseq	r0, ip, r4, lsl #12
    72b4:	3c070402 	cfstrscc	mvf0, [r7], {2}
    72b8:	08040200 	stmdaeq	r4, {r9}
    72bc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    72c0:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    72c4:	003c0a04 	eorseq	r0, ip, r4, lsl #20
    72c8:	3c0b0402 	cfstrscc	mvf0, [fp], {2}
    72cc:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    72d0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    72d4:	02003c0d 	andeq	r3, r0, #3328	; 0xd00
    72d8:	003c0e04 	eorseq	r0, ip, r4, lsl #28
    72dc:	3c0f0402 	cfstrscc	mvf0, [pc], {2}
    72e0:	10040200 	andne	r0, r4, r0, lsl #4
    72e4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    72e8:	2f062e10 	svccs	0x00062e10
    72ec:	01040200 	mrseq	r0, R12_usr
    72f0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    72f4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    72f8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    72fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7300:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7304:	02003c05 	andeq	r3, r0, #1280	; 0x500
    7308:	003c0604 	eorseq	r0, ip, r4, lsl #12
    730c:	3c070402 	cfstrscc	mvf0, [r7], {2}
    7310:	02003d06 	andeq	r3, r0, #384	; 0x180
    7314:	2e060104 	adfcss	f0, f6, f4
    7318:	02040200 	andeq	r0, r4, #0, 4
    731c:	002f062e 	eoreq	r0, pc, lr, lsr #12
    7320:	06010402 	streq	r0, [r1], -r2, lsl #8
    7324:	002f064a 	eoreq	r0, pc, sl, asr #12
    7328:	06010402 	streq	r0, [r1], -r2, lsl #8
    732c:	002f064a 	eoreq	r0, pc, sl, asr #12
    7330:	06010402 	streq	r0, [r1], -r2, lsl #8
    7334:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7338:	3d063c02 	stccc	12, cr3, [r6, #-8]
    733c:	01040200 	mrseq	r0, R12_usr
    7340:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7344:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    7348:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    734c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    7350:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7354:	02002f06 	andeq	r2, r0, #6, 30
    7358:	2e060104 	adfcss	f0, f6, f4
    735c:	02040200 	andeq	r0, r4, #0, 4
    7360:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7364:	3d063c03 	stccc	12, cr3, [r6, #-12]
    7368:	01040200 	mrseq	r0, R12_usr
    736c:	31062e06 	tstcc	r6, r6, lsl #28
    7370:	01061005 	tsteq	r6, r5
    7374:	06200505 	strteq	r0, [r0], -r5, lsl #10
    7378:	02003d22 	andeq	r3, r0, #2176	; 0x880
    737c:	2e060104 	adfcss	f0, f6, f4
    7380:	02040200 	andeq	r0, r4, #0, 4
    7384:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7388:	3d063c03 	stccc	12, cr3, [r6, #-12]
    738c:	01040200 	mrseq	r0, R12_usr
    7390:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7394:	003c0204 	eorseq	r0, ip, r4, lsl #4
    7398:	3c030402 	cfstrscc	mvf0, [r3], {2}
    739c:	40060305 	andmi	r0, r6, r5, lsl #6
    73a0:	01060f05 	tsteq	r6, r5, lsl #30
    73a4:	3f060305 	svccc	0x00060305
    73a8:	5b153c01 	blpl	5563b4 <_Min_Heap_Size+0x555bb4>
    73ac:	05010805 	streq	r0, [r1, #-2053]	; 0xfffff7fb
    73b0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    73b4:	08052018 	stmdaeq	r5, {r3, r4, sp}
    73b8:	06050520 	streq	r0, [r5], -r0, lsr #10
    73bc:	0609053f 			; <UNDEFINED> instruction: 0x0609053f
    73c0:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    73c4:	06200705 	strteq	r0, [r0], -r5, lsl #14
    73c8:	06170531 			; <UNDEFINED> instruction: 0x06170531
    73cc:	06070501 	streq	r0, [r7], -r1, lsl #10
    73d0:	06130531 			; <UNDEFINED> instruction: 0x06130531
    73d4:	06070501 	streq	r0, [r7], -r1, lsl #10
    73d8:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    73dc:	0100ce03 	tsteq	r0, r3, lsl #28
    73e0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    73e4:	8b030804 	blhi	c93fc <_Min_Heap_Size+0xc8bfc>
    73e8:	0200207f 	andeq	r2, r0, #127	; 0x7f
    73ec:	00590304 	subseq	r0, r9, r4, lsl #6
    73f0:	59020402 	stmdbpl	r2, {r1, sl}
    73f4:	02040200 	andeq	r0, r4, #0, 4
    73f8:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    73fc:	02005903 	andeq	r5, r0, #49152	; 0xc000
    7400:	00590304 	subseq	r0, r9, r4, lsl #6
    7404:	59030402 	stmdbpl	r3, {r1, sl}
    7408:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    740c:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    7410:	05055902 	streq	r5, [r5, #-2306]	; 0xfffff6fe
    7414:	01040200 	mrseq	r0, R12_usr
    7418:	0402005d 	streq	r0, [r2], #-93	; 0xffffffa3
    741c:	02005904 	andeq	r5, r0, #4, 18	; 0x10000
    7420:	05590404 	ldrbeq	r0, [r9, #-1028]	; 0xfffffbfc
    7424:	1d030603 	stcne	6, cr0, [r3, #-12]
    7428:	06070558 			; <UNDEFINED> instruction: 0x06070558
    742c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7430:	06070523 	streq	r0, [r7], -r3, lsr #10
    7434:	06030501 	streq	r0, [r3], -r1, lsl #10
    7438:	06150534 			; <UNDEFINED> instruction: 0x06150534
    743c:	20360501 	eorscs	r0, r6, r1, lsl #10
    7440:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    7444:	48052115 	stmdami	r5, {r0, r2, r4, r8, sp}
    7448:	2136051f 	teqcs	r6, pc, lsl r5
    744c:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    7450:	48052115 	stmdami	r5, {r0, r2, r4, r8, sp}
    7454:	2136051f 	teqcs	r6, pc, lsl r5
    7458:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    745c:	48052115 	stmdami	r5, {r0, r2, r4, r8, sp}
    7460:	2136051f 	teqcs	r6, pc, lsl r5
    7464:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    7468:	03051d07 	movweq	r1, #23815	; 0x5d07
    746c:	10052606 	andne	r2, r5, r6, lsl #12
    7470:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7474:	06030520 	streq	r0, [r3], -r0, lsr #10
    7478:	06160535 			; <UNDEFINED> instruction: 0x06160535
    747c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7480:	060d0523 	streq	r0, [sp], -r3, lsr #10
    7484:	20070501 	andcs	r0, r7, r1, lsl #10
    7488:	23060305 	movwcs	r0, #25349	; 0x6305
    748c:	01060705 	tsteq	r6, r5, lsl #14
    7490:	31060305 	tstcc	r6, r5, lsl #6
    7494:	01061405 	tsteq	r6, r5, lsl #8
    7498:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    749c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    74a0:	06010605 	streq	r0, [r1], -r5, lsl #12
    74a4:	06160531 			; <UNDEFINED> instruction: 0x06160531
    74a8:	20090501 	andcs	r0, r9, r1, lsl #10
    74ac:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    74b0:	01061305 	tsteq	r6, r5, lsl #6
    74b4:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    74b8:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    74bc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    74c0:	03053c0a 	movweq	r3, #23562	; 0x5c0a
    74c4:	200e0306 	andcs	r0, lr, r6, lsl #6
    74c8:	01061705 	tsteq	r6, r5, lsl #14
    74cc:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
    74d0:	01062005 	tsteq	r6, r5
    74d4:	3f060305 	svccc	0x00060305
    74d8:	01061d05 	tsteq	r6, r5, lsl #26
    74dc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    74e0:	03052e0e 	movweq	r2, #24078	; 0x5e0e
    74e4:	13052306 	movwne	r2, #21254	; 0x5306
    74e8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    74ec:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    74f0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    74f4:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    74f8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    74fc:	4a030605 	bmi	c8d18 <_Min_Heap_Size+0xc8518>
    7500:	06170574 			; <UNDEFINED> instruction: 0x06170574
    7504:	202d0501 	eorcs	r0, sp, r1, lsl #10
    7508:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    750c:	06202009 	strteq	r2, [r0], -r9
    7510:	05201c03 	streq	r1, [r0, #-3075]!	; 0xfffff3fd
    7514:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7518:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    751c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7520:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    7524:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7528:	7f9c030c 	svcvc	0x009c030c
    752c:	01022020 	tsteq	r2, r0, lsr #32
    7530:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7534:	02050001 	andeq	r0, r5, #1
    7538:	00000000 	andeq	r0, r0, r0
    753c:	0102b503 	tsteq	r2, r3, lsl #10
    7540:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    7544:	01060505 	tsteq	r6, r5, lsl #10
    7548:	052a0105 	streq	r0, [sl, #-261]!	; 0xfffffefb
    754c:	0a030603 	beq	c8d60 <_Min_Heap_Size+0xc8560>
    7550:	060a052e 	streq	r0, [sl], -lr, lsr #10
    7554:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    7558:	06030520 	streq	r0, [r3], -r0, lsr #10
    755c:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    7560:	004a0601 	subeq	r0, sl, r1, lsl #12
    7564:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7568:	03040200 	movweq	r0, #16896	; 0x4200
    756c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7570:	02003c04 	andeq	r3, r0, #4, 24	; 0x400
    7574:	003c0504 	eorseq	r0, ip, r4, lsl #10
    7578:	3c060402 	cfstrscc	mvf0, [r6], {2}
    757c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7580:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7584:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    7588:	004a0904 	subeq	r0, sl, r4, lsl #18
    758c:	3c0a0402 	cfstrscc	mvf0, [sl], {2}
    7590:	0b040200 	bleq	107d98 <_Min_Heap_Size+0x107598>
    7594:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7598:	02003c0c 	andeq	r3, r0, #12, 24	; 0xc00
    759c:	003c0d04 	eorseq	r0, ip, r4, lsl #26
    75a0:	3c0e0402 	cfstrscc	mvf0, [lr], {2}
    75a4:	0f040200 	svceq	0x00040200
    75a8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    75ac:	5b063c10 	blpl	1965f4 <_Min_Heap_Size+0x195df4>
    75b0:	0607055b 			; <UNDEFINED> instruction: 0x0607055b
    75b4:	20180501 	andscs	r0, r8, r1, lsl #10
    75b8:	31060305 	tstcc	r6, r5, lsl #6
    75bc:	01060705 	tsteq	r6, r5, lsl #14
    75c0:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    75c4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    75c8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    75cc:	03052018 	movweq	r2, #20504	; 0x5018
    75d0:	07052306 	streq	r2, [r5, -r6, lsl #6]
    75d4:	18050106 	stmdane	r5, {r1, r2, r8}
    75d8:	06030520 	streq	r0, [r3], -r0, lsr #10
    75dc:	06070523 	streq	r0, [r7], -r3, lsr #10
    75e0:	20180501 	andscs	r0, r8, r1, lsl #10
    75e4:	23060305 	movwcs	r0, #25349	; 0x6305
    75e8:	01060705 	tsteq	r6, r5, lsl #14
    75ec:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    75f0:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    75f4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    75f8:	053f0603 	ldreq	r0, [pc, #-1539]!	; 6ffd <_Min_Heap_Size+0x67fd>
    75fc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    7600:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    7604:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    7608:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    760c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    7610:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    7614:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    7618:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    761c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7620:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    7624:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7628:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    762c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    7630:	0e052016 	mcreq	0, 0, r2, cr5, cr6, {0}
    7634:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7638:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    763c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7640:	060f0523 	streq	r0, [pc], -r3, lsr #10
    7644:	06030501 	streq	r0, [r3], -r1, lsl #10
    7648:	142e0131 	strtne	r0, [lr], #-305	; 0xfffffecf
    764c:	01060a05 	tsteq	r6, r5, lsl #20
    7650:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    7654:	2046030c 	subcs	r0, r6, ip, lsl #6
    7658:	3a030105 	bcc	c7a74 <_Min_Heap_Size+0xc7274>
    765c:	00060220 	andeq	r0, r6, r0, lsr #4
    7660:	01050101 	tsteq	r5, r1, lsl #2
    7664:	00020500 	andeq	r0, r2, r0, lsl #10
    7668:	03000000 	movweq	r0, #0
    766c:	06010397 			; <UNDEFINED> instruction: 0x06010397
    7670:	06030501 	streq	r0, [r3], -r1, lsl #10
    7674:	20061567 	andcs	r1, r6, r7, ror #10
    7678:	0131062e 	teqeq	r1, lr, lsr #12
    767c:	02040200 	andeq	r0, r4, #0, 4
    7680:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    7684:	02003c02 	andeq	r3, r0, #512	; 0x200
    7688:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    768c:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    7690:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    7694:	04020005 	streq	r0, [r2], #-5
    7698:	03063c02 	movweq	r3, #27650	; 0x6c02
    769c:	3c012e11 	stccc	14, cr2, [r1], {17}
    76a0:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    76a4:	23010501 	movwcs	r0, #5377	; 0x1501
    76a8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    76ac:	64030104 	strvs	r0, [r3], #-260	; 0xfffffefc
    76b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    76b4:	02002e01 	andeq	r2, r0, #1, 28
    76b8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    76bc:	05440605 	strbeq	r0, [r4, #-1541]	; 0xfffff9fb
    76c0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    76c4:	053f0605 	ldreq	r0, [pc, #-1541]!	; 70c7 <_Min_Heap_Size+0x68c7>
    76c8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    76cc:	694d0605 	stmdbvs	sp, {r0, r2, r9, sl}^
    76d0:	03061505 	movweq	r1, #25861	; 0x6505
    76d4:	0305586c 	movweq	r5, #22636	; 0x586c
    76d8:	00050234 	andeq	r0, r5, r4, lsr r2
    76dc:	01050101 	tsteq	r5, r1, lsl #2
    76e0:	00020500 	andeq	r0, r2, r0, lsl #10
    76e4:	03000000 	movweq	r0, #0
    76e8:	060103c3 	streq	r0, [r1], -r3, asr #7
    76ec:	06030501 	streq	r0, [r3], -r1, lsl #10
    76f0:	38051567 	stmdacc	r5, {r0, r1, r2, r5, r6, r8, sl, ip}
    76f4:	03050106 	movweq	r0, #20742	; 0x5106
    76f8:	20063106 	andcs	r3, r6, r6, lsl #2
    76fc:	0131062e 	teqeq	r1, lr, lsr #12
    7700:	02040200 	andeq	r0, r4, #0, 4
    7704:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    7708:	02003c02 	andeq	r3, r0, #512	; 0x200
    770c:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    7710:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    7714:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    7718:	04020005 	streq	r0, [r2], #-5
    771c:	03063c02 	movweq	r3, #27650	; 0x6c02
    7720:	3c012e1c 	stccc	14, cr2, [r1], {28}
    7724:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    7728:	24010501 	strcs	r0, [r1], #-1281	; 0xfffffaff
    772c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7730:	58030104 	stmdapl	r3, {r2, r8}
    7734:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7738:	02002e01 	andeq	r2, r0, #1, 28
    773c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    7740:	05440605 	strbeq	r0, [r4, #-1541]	; 0xfffff9fb
    7744:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    7748:	053f0605 	ldreq	r0, [pc, #-1541]!	; 714b <_Min_Heap_Size+0x694b>
    774c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7750:	69310605 	ldmdbvs	r1!, {r0, r2, r9, sl}
    7754:	01061f05 	tsteq	r6, r5, lsl #30
    7758:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    775c:	05052e10 	streq	r2, [r5, #-3600]	; 0xfffff1f0
    7760:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    7764:	19050106 	stmdbne	r5, {r1, r2, r8}
    7768:	06050520 	streq	r0, [r5], -r0, lsr #10
    776c:	060c054c 	streq	r0, [ip], -ip, asr #10
    7770:	20070501 	andcs	r0, r7, r1, lsl #10
    7774:	0b052206 	bleq	14ff94 <_Min_Heap_Size+0x14f794>
    7778:	1b050106 	blne	147b98 <_Min_Heap_Size+0x147398>
    777c:	06050520 	streq	r0, [r5], -r0, lsr #10
    7780:	0615054e 	ldreq	r0, [r5], -lr, asr #10
    7784:	05585e03 	ldrbeq	r5, [r8, #-3587]	; 0xfffff1fd
    7788:	2e090303 	cdpcs	3, 0, cr0, cr9, cr3, {0}
    778c:	01000402 	tsteq	r0, r2, lsl #8
    7790:	00010501 	andeq	r0, r1, r1, lsl #10
    7794:	14e40205 	strbtne	r0, [r4], #517	; 0x205
    7798:	81030800 	tsthi	r3, r0, lsl #16
    779c:	01060104 	tsteq	r6, r4, lsl #2
    77a0:	30060305 	andcc	r0, r6, r5, lsl #6
    77a4:	01063805 	tsteq	r6, r5, lsl #16
    77a8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    77ac:	01061805 	tsteq	r6, r5, lsl #16
    77b0:	30060305 	andcc	r0, r6, r5, lsl #6
    77b4:	01060a05 	tsteq	r6, r5, lsl #20
    77b8:	063c0505 	ldrteq	r0, [ip], -r5, lsl #10
    77bc:	06150530 			; <UNDEFINED> instruction: 0x06150530
    77c0:	06050501 	streq	r0, [r5], -r1, lsl #10
    77c4:	143c0131 	ldrtne	r0, [ip], #-305	; 0xfffffecf
    77c8:	01060c05 	tsteq	r6, r5, lsl #24
    77cc:	2d030105 	stfcss	f0, [r3, #-20]	; 0xffffffec
    77d0:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    77d4:	20580306 	subscs	r0, r8, r6, lsl #6
    77d8:	01060905 	tsteq	r6, r5, lsl #18
    77dc:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    77e0:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    77e4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    77e8:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    77ec:	0d054c06 	stceq	12, cr4, [r5, #-24]	; 0xffffffe8
    77f0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    77f4:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    77f8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    77fc:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    7800:	055b4e06 	ldrbeq	r4, [fp, #-3590]	; 0xfffff1fa
    7804:	1005010a 	andne	r0, r5, sl, lsl #2
    7808:	1a050106 	bne	147c28 <_Min_Heap_Size+0x147428>
    780c:	200a0520 	andcs	r0, sl, r0, lsr #10
    7810:	3f060705 	svccc	0x00060705
    7814:	01060b05 	tsteq	r6, r5, lsl #22
    7818:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    781c:	31062009 	tstcc	r6, r9
    7820:	01061905 	tsteq	r6, r5, lsl #18
    7824:	31060905 	tstcc	r6, r5, lsl #18
    7828:	01061505 	tsteq	r6, r5, lsl #10
    782c:	3f060905 	svccc	0x00060905
    7830:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    7834:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7838:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    783c:	20690301 	rsbcs	r0, r9, r1, lsl #6
    7840:	02002d05 	andeq	r2, r0, #320	; 0x140
    7844:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    7848:	1c030605 	stcne	6, cr0, [r3], {5}
    784c:	061f053c 			; <UNDEFINED> instruction: 0x061f053c
    7850:	20180501 	andscs	r0, r8, r1, lsl #10
    7854:	052e1005 	streq	r1, [lr, #-5]!
    7858:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    785c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    7860:	013f0605 	teqeq	pc, r5, lsl #12
    7864:	1403053c 	strne	r0, [r3], #-1340	; 0xfffffac4
    7868:	01060a05 	tsteq	r6, r5, lsl #20
    786c:	01000102 	tsteq	r0, r2, lsl #2
    7870:	00010501 	andeq	r0, r1, r1, lsl #10
    7874:	15780205 	ldrbne	r0, [r8, #-517]!	; 0xfffffdfb
    7878:	c4030800 	strgt	r0, [r3], #-2048	; 0xfffff800
    787c:	03050104 	movweq	r0, #20740	; 0x5104
    7880:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    7884:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    7888:	15053006 	strne	r3, [r5, #-6]
    788c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7890:	0c052f06 	stceq	15, cr2, [r5], {6}
    7894:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7898:	05250605 	streq	r0, [r5, #-1541]!	; 0xfffff9fb
    789c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    78a0:	053f0605 	ldreq	r0, [pc, #-1541]!	; 72a3 <_Min_Heap_Size+0x6aa3>
    78a4:	0a055b03 	beq	15e4b8 <_Min_Heap_Size+0x15dcb8>
    78a8:	01050106 	tsteq	r5, r6, lsl #2
    78ac:	00010221 	andeq	r0, r1, r1, lsr #4
    78b0:	01050101 	tsteq	r5, r1, lsl #2
    78b4:	00020500 	andeq	r0, r2, r0, lsl #10
    78b8:	03000000 	movweq	r0, #0
    78bc:	060104e2 	streq	r0, [r1], -r2, ror #9
    78c0:	06030501 	streq	r0, [r3], -r1, lsl #10
    78c4:	05131359 	ldreq	r1, [r3, #-857]	; 0xfffffca7
    78c8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    78cc:	152f0603 	strne	r0, [pc, #-1539]!	; 72d1 <_Min_Heap_Size+0x6ad1>
    78d0:	06200514 			; <UNDEFINED> instruction: 0x06200514
    78d4:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    78d8:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    78dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    78e0:	3c012f06 	stccc	15, cr2, [r1], {6}
    78e4:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    78e8:	03010501 	movweq	r0, #5377	; 0x1501
    78ec:	2e2000f1 	mcrcs	0, 1, r0, cr0, cr1, {7}
    78f0:	03060305 	movweq	r0, #25349	; 0x6305
    78f4:	05207f93 	streq	r7, [r0, #-3987]!	; 0xfffff06d
    78f8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    78fc:	06052016 			; <UNDEFINED> instruction: 0x06052016
    7900:	06030520 	streq	r0, [r3], -r0, lsr #10
    7904:	06050543 	streq	r0, [r5], -r3, asr #10
    7908:	053f0601 	ldreq	r0, [pc, #-1537]!	; 730f <_Min_Heap_Size+0x6b0f>
    790c:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    7910:	03052014 	movweq	r2, #20500	; 0x5014
    7914:	24055206 	strcs	r5, [r5], #-518	; 0xfffffdfa
    7918:	03050106 	movweq	r0, #20742	; 0x5106
    791c:	0a052106 	beq	14fd3c <_Min_Heap_Size+0x14f53c>
    7920:	03050106 	movweq	r0, #20742	; 0x5106
    7924:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
    7928:	00370501 	eorseq	r0, r7, r1, lsl #10
    792c:	06010402 	streq	r0, [r1], -r2, lsl #8
    7930:	002e053c 	eoreq	r0, lr, ip, lsr r5
    7934:	20010402 	andcs	r0, r1, r2, lsl #8
    7938:	3f060505 	svccc	0x00060505
    793c:	01060705 	tsteq	r6, r5, lsl #14
    7940:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    7944:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    7948:	01040200 	mrseq	r0, R12_usr
    794c:	002b052e 	eoreq	r0, fp, lr, lsr #10
    7950:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7954:	02001905 	andeq	r1, r0, #81920	; 0x14000
    7958:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    795c:	10030605 	andne	r0, r3, r5, lsl #12
    7960:	060c052e 	streq	r0, [ip], -lr, lsr #10
    7964:	06050501 	streq	r0, [r5], -r1, lsl #10
    7968:	062b0522 	strteq	r0, [fp], -r2, lsr #10
    796c:	20240501 	eorcs	r0, r4, r1, lsl #10
    7970:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    7974:	06170531 			; <UNDEFINED> instruction: 0x06170531
    7978:	06070501 	streq	r0, [r7], -r1, lsl #10
    797c:	0612054d 	ldreq	r0, [r2], -sp, asr #10
    7980:	06050501 	streq	r0, [r5], -r1, lsl #10
    7984:	062b0523 	strteq	r0, [fp], -r3, lsr #10
    7988:	20240501 	eorcs	r0, r4, r1, lsl #10
    798c:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    7990:	06170531 			; <UNDEFINED> instruction: 0x06170531
    7994:	06070501 	streq	r0, [r7], -r1, lsl #10
    7998:	0612054d 	ldreq	r0, [r2], -sp, asr #10
    799c:	06050501 	streq	r0, [r5], -r1, lsl #10
    79a0:	062c0523 	strteq	r0, [ip], -r3, lsr #10
    79a4:	20250501 	eorcs	r0, r5, r1, lsl #10
    79a8:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    79ac:	06170531 			; <UNDEFINED> instruction: 0x06170531
    79b0:	06070501 	streq	r0, [r7], -r1, lsl #10
    79b4:	0612054d 	ldreq	r0, [r2], -sp, asr #10
    79b8:	06050501 	streq	r0, [r5], -r1, lsl #10
    79bc:	2e7fbe03 	cdpcs	14, 7, cr11, cr15, cr3, {0}
    79c0:	01061505 	tsteq	r6, r5, lsl #10
    79c4:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    79c8:	01060c05 	tsteq	r6, r5, lsl #24
    79cc:	06050520 	streq	r0, [r5], -r0, lsr #10
    79d0:	05200c03 	streq	r0, [r0, #-3075]!	; 0xfffff3fd
    79d4:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    79d8:	054a2014 	strbeq	r2, [sl, #-20]	; 0xffffffec
    79dc:	0e030609 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx9
    79e0:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    79e4:	06090501 	streq	r0, [r9], -r1, lsl #10
    79e8:	06150531 			; <UNDEFINED> instruction: 0x06150531
    79ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    79f0:	143c013f 	ldrtne	r0, [ip], #-319	; 0xfffffec1
    79f4:	01061005 	tsteq	r6, r5
    79f8:	03060305 	movweq	r0, #25349	; 0x6305
    79fc:	0a052e23 	beq	153290 <_Min_Heap_Size+0x152a90>
    7a00:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7a04:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    7a08:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7a0c:	03052007 	movweq	r2, #20487	; 0x5007
    7a10:	3c120306 	ldccc	3, cr0, [r2], {6}
    7a14:	01060505 	tsteq	r6, r5, lsl #10
    7a18:	3f053f06 	svccc	0x00053f06
    7a1c:	38050106 	stmdacc	r5, {r1, r2, r8}
    7a20:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    7a24:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    7a28:	01061105 	tsteq	r6, r5, lsl #2
    7a2c:	3f060505 	svccc	0x00060505
    7a30:	0a053c01 	beq	156a3c <_Min_Heap_Size+0x15623c>
    7a34:	07051a06 	streq	r1, [r5, -r6, lsl #20]
    7a38:	2e600306 	cdpcs	3, 6, cr0, cr0, cr6, {0}
    7a3c:	0641053f 			; <UNDEFINED> instruction: 0x0641053f
    7a40:	203a0501 	eorscs	r0, sl, r1, lsl #10
    7a44:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    7a48:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    7a4c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7a50:	013f0607 	teqeq	pc, r7, lsl #12
    7a54:	0e05143c 	cfmvdhreq	mvd5, r1
    7a58:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7a5c:	20120306 	andscs	r0, r2, r6, lsl #6
    7a60:	01062c05 	tsteq	r6, r5, lsl #24
    7a64:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    7a68:	0a052e10 	beq	1532b0 <_Min_Heap_Size+0x152ab0>
    7a6c:	00020223 	andeq	r0, r2, r3, lsr #4
    7a70:	01050101 	tsteq	r5, r1, lsl #2
    7a74:	00020500 	andeq	r0, r2, r0, lsl #10
    7a78:	03000000 	movweq	r0, #0
    7a7c:	060105ea 	streq	r0, [r1], -sl, ror #11
    7a80:	06030501 	streq	r0, [r3], -r1, lsl #10
    7a84:	1105133d 	tstne	r5, sp, lsr r3
    7a88:	03050106 	movweq	r0, #20742	; 0x5106
    7a8c:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    7a90:	0c050106 	stfeqs	f0, [r5], {6}
    7a94:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7a98:	0638054d 	ldrteq	r0, [r8], -sp, asr #10
    7a9c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7aa0:	060a0522 	streq	r0, [sl], -r2, lsr #10
    7aa4:	06030501 	streq	r0, [r3], -r1, lsl #10
    7aa8:	062a0523 	strteq	r0, [sl], -r3, lsr #10
    7aac:	20230501 	eorcs	r0, r3, r1, lsl #10
    7ab0:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    7ab4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    7ab8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    7abc:	3f062e07 	svccc	0x00062e07
    7ac0:	01061b05 	tsteq	r6, r5, lsl #22
    7ac4:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    7ac8:	01062c05 	tsteq	r6, r5, lsl #24
    7acc:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    7ad0:	07052e12 	smladeq	r5, r2, lr, r2
    7ad4:	17052306 	strne	r2, [r5, -r6, lsl #6]
    7ad8:	03050106 	movweq	r0, #20742	; 0x5106
    7adc:	2a054e06 	bcs	15b2fc <_Min_Heap_Size+0x15aafc>
    7ae0:	23050106 	movwcs	r0, #20742	; 0x5106
    7ae4:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    7ae8:	30060505 	andcc	r0, r6, r5, lsl #10
    7aec:	01060805 	tsteq	r6, r5, lsl #16
    7af0:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    7af4:	0612053f 			; <UNDEFINED> instruction: 0x0612053f
    7af8:	06070501 	streq	r0, [r7], -r1, lsl #10
    7afc:	06170523 	ldreq	r0, [r7], -r3, lsr #10
    7b00:	06030501 	streq	r0, [r3], -r1, lsl #10
    7b04:	062b054e 	strteq	r0, [fp], -lr, asr #10
    7b08:	20240501 	eorcs	r0, r4, r1, lsl #10
    7b0c:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    7b10:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    7b14:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    7b18:	3f062e07 	svccc	0x00062e07
    7b1c:	01061205 	tsteq	r6, r5, lsl #4
    7b20:	23060705 	movwcs	r0, #26373	; 0x6705
    7b24:	01061705 	tsteq	r6, r5, lsl #14
    7b28:	4e060305 	cdpmi	3, 0, cr0, cr6, cr5, {0}
    7b2c:	01062a05 	tsteq	r6, r5, lsl #20
    7b30:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    7b34:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    7b38:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    7b3c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7b40:	053f062e 	ldreq	r0, [pc, #-1582]!	; 751a <_Min_Heap_Size+0x6d1a>
    7b44:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7b48:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    7b4c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7b50:	0905201a 	stmdbeq	r5, {r1, r3, r4, sp}
    7b54:	053f0620 	ldreq	r0, [pc, #-1568]!	; 753c <_Min_Heap_Size+0x6d3c>
    7b58:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7b5c:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    7b60:	01061205 	tsteq	r6, r5, lsl #4
    7b64:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    7b68:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    7b6c:	0534060b 	ldreq	r0, [r4, #-1547]!	; 0xfffff9f5
    7b70:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7b74:	2306200d 	movwcs	r2, #24589	; 0x600d
    7b78:	09052006 	stmdbeq	r5, {r1, r2, sp}
    7b7c:	1b053506 	blne	154f9c <_Min_Heap_Size+0x15479c>
    7b80:	0b050106 	bleq	147fa0 <_Min_Heap_Size+0x1477a0>
    7b84:	053f0620 	ldreq	r0, [pc, #-1568]!	; 756c <_Min_Heap_Size+0x6d6c>
    7b88:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7b8c:	054d0609 	strbeq	r0, [sp, #-1545]	; 0xfffff9f7
    7b90:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    7b94:	2306200b 	movwcs	r2, #24587	; 0x600b
    7b98:	03052006 	movweq	r2, #20486	; 0x5006
    7b9c:	2a052606 	bcs	1513bc <_Min_Heap_Size+0x150bbc>
    7ba0:	23050106 	movwcs	r0, #20742	; 0x5106
    7ba4:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    7ba8:	30060505 	andcc	r0, r6, r5, lsl #10
    7bac:	01060805 	tsteq	r6, r5, lsl #16
    7bb0:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    7bb4:	0612053f 			; <UNDEFINED> instruction: 0x0612053f
    7bb8:	06070501 	streq	r0, [r7], -r1, lsl #10
    7bbc:	06250522 	strteq	r0, [r5], -r2, lsr #10
    7bc0:	3c090501 	cfstr32cc	mvfx0, [r9], {1}
    7bc4:	03060705 	movweq	r0, #26373	; 0x6705
    7bc8:	10052e1b 	andne	r2, r5, fp, lsl lr
    7bcc:	1a050106 	bne	147fec <_Min_Heap_Size+0x1477ec>
    7bd0:	20090520 	andcs	r0, r9, r0, lsr #10
    7bd4:	1b053f06 	blne	1577f4 <_Min_Heap_Size+0x156ff4>
    7bd8:	0b050106 	bleq	147ff8 <_Min_Heap_Size+0x1477f8>
    7bdc:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    7be0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7be4:	3106200d 	tstcc	r6, sp
    7be8:	60030905 	andvs	r0, r3, r5, lsl #18
    7bec:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    7bf0:	201d0501 	andscs	r0, sp, r1, lsl #10
    7bf4:	4b060905 	blmi	18a010 <_Min_Heap_Size+0x189810>
    7bf8:	01060d05 	tsteq	r6, r5, lsl #26
    7bfc:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    7c00:	054c0609 	strbeq	r0, [ip, #-1545]	; 0xfffff9f7
    7c04:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    7c08:	2206200b 	andcs	r2, r6, #11
    7c0c:	01060f05 	tsteq	r6, r5, lsl #30
    7c10:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    7c14:	054e0609 	strbeq	r0, [lr, #-1545]	; 0xfffff9f7
    7c18:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    7c1c:	1405201c 	strne	r2, [r5], #-28	; 0xffffffe4
    7c20:	0609052e 	streq	r0, [r9], -lr, lsr #10
    7c24:	06150523 	ldreq	r0, [r5], -r3, lsr #10
    7c28:	06090501 	streq	r0, [r9], -r1, lsl #10
    7c2c:	143c013f 	ldrtne	r0, [ip], #-319	; 0xfffffec1
    7c30:	01061005 	tsteq	r6, r5
    7c34:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    7c38:	30090530 	andcc	r0, r9, r0, lsr r5
    7c3c:	02003905 	andeq	r3, r0, #81920	; 0x14000
    7c40:	03060104 	movweq	r0, #24836	; 0x6104
    7c44:	3105206e 	tstcc	r5, lr, rrx
    7c48:	01040200 	mrseq	r0, R12_usr
    7c4c:	060b0520 	streq	r0, [fp], -r0, lsr #10
    7c50:	053c2303 	ldreq	r2, [ip, #-771]!	; 0xfffffcfd
    7c54:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7c58:	2306200d 	movwcs	r2, #24589	; 0x600d
    7c5c:	05430905 	strbeq	r0, [r3, #-2309]	; 0xfffff6fb
    7c60:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7c64:	3f06200b 	svccc	0x0006200b
    7c68:	01061f05 	tsteq	r6, r5, lsl #30
    7c6c:	4d060b05 	vstrmi	d0, [r6, #-20]	; 0xffffffec
    7c70:	01061705 	tsteq	r6, r5, lsl #14
    7c74:	3f060b05 	svccc	0x00060b05
    7c78:	04020001 	streq	r0, [r2], #-1
    7c7c:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    7c80:	01040200 	mrseq	r0, R12_usr
    7c84:	00100515 	andseq	r0, r0, r5, lsl r5
    7c88:	06010402 	streq	r0, [r1], -r2, lsl #8
    7c8c:	000b0501 	andeq	r0, fp, r1, lsl #10
    7c90:	20010402 	andcs	r0, r1, r2, lsl #8
    7c94:	03052306 	movweq	r2, #21254	; 0x5306
    7c98:	060a0535 			; <UNDEFINED> instruction: 0x060a0535
    7c9c:	20050501 	andcs	r0, r5, r1, lsl #10
    7ca0:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    7ca4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ca8:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    7cac:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    7cb0:	5a3f0607 	bpl	fc94d4 <_Min_Heap_Size+0xfc8cd4>
    7cb4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    7cb8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7cbc:	41062e0c 	tstmi	r6, ip, lsl #28
    7cc0:	01061205 	tsteq	r6, r5, lsl #4
    7cc4:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    7cc8:	3f062007 	svccc	0x00062007
    7ccc:	01061305 	tsteq	r6, r5, lsl #6
    7cd0:	3f060705 	svccc	0x00060705
    7cd4:	04020001 	streq	r0, [r2], #-1
    7cd8:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    7cdc:	01040200 	mrseq	r0, R12_usr
    7ce0:	000c0515 	andeq	r0, ip, r5, lsl r5
    7ce4:	06010402 	streq	r0, [r1], -r2, lsl #8
    7ce8:	00070501 	andeq	r0, r7, r1, lsl #10
    7cec:	20010402 	andcs	r0, r1, r2, lsl #8
    7cf0:	01052306 	tsteq	r5, r6, lsl #6
    7cf4:	022e3106 	eoreq	r3, lr, #-2147483647	; 0x80000001
    7cf8:	01010004 	tsteq	r1, r4
    7cfc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7d00:	00000002 	andeq	r0, r0, r2
    7d04:	07c70300 	strbeq	r0, [r7, r0, lsl #6]
    7d08:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7d0c:	15220603 	strne	r0, [r2, #-1539]!	; 0xfffff9fd
    7d10:	002e0601 	eoreq	r0, lr, r1, lsl #12
    7d14:	06020402 	streq	r0, [r2], -r2, lsl #8
    7d18:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7d1c:	02003c02 	andeq	r3, r0, #512	; 0x200
    7d20:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    7d24:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    7d28:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    7d2c:	04020005 	streq	r0, [r2], #-5
    7d30:	0c053c02 	stceq	12, cr3, [r5], {2}
    7d34:	052e2503 	streq	r2, [lr, #-1283]!	; 0xfffffafd
    7d38:	01240603 			; <UNDEFINED> instruction: 0x01240603
    7d3c:	2e062006 	cdpcs	0, 0, cr2, cr6, cr6, {0}
    7d40:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    7d44:	06050501 	streq	r0, [r5], -r1, lsl #10
    7d48:	05205703 	streq	r5, [r0, #-1795]!	; 0xfffff8fd
    7d4c:	1e057707 	cdpne	7, 0, cr7, cr5, cr7, {0}
    7d50:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7d54:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    7d58:	01750306 	cmneq	r5, r6, lsl #6
    7d5c:	0b030705 	bleq	c9978 <_Min_Heap_Size+0xc9178>
    7d60:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7d64:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    7d68:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7d6c:	71030615 	tstvc	r3, r5, lsl r6
    7d70:	03070501 	movweq	r0, #29953	; 0x7501
    7d74:	2306200f 	movwcs	r2, #24591	; 0x600f
    7d78:	01062005 	tsteq	r6, r5
    7d7c:	21060705 	tstcs	r6, r5, lsl #14
    7d80:	03061505 	movweq	r1, #25861	; 0x6505
    7d84:	0705016d 	streq	r0, [r5, -sp, ror #2]
    7d88:	06201303 	strteq	r1, [r0], -r3, lsl #6
    7d8c:	06240523 	strteq	r0, [r4], -r3, lsr #10
    7d90:	06070501 	streq	r0, [r7], -r1, lsl #10
    7d94:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7d98:	05016903 	streq	r6, [r1, #-2307]	; 0xfffff6fd
    7d9c:	20170307 	andscs	r0, r7, r7, lsl #6
    7da0:	1f052306 	svcne	0x00052306
    7da4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7da8:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    7dac:	01650306 	cmneq	r5, r6, lsl #6
    7db0:	1b030705 	blne	c99cc <_Min_Heap_Size+0xc91cc>
    7db4:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7db8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7dbc:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7dc0:	61030615 	tstvs	r3, r5, lsl r6
    7dc4:	03070501 	movweq	r0, #29953	; 0x7501
    7dc8:	0305201f 	movweq	r2, #20511	; 0x501f
    7dcc:	05206403 	streq	r6, [r0, #-1027]!	; 0xfffffbfd
    7dd0:	202e0301 	eorcs	r0, lr, r1, lsl #6
    7dd4:	01000102 	tsteq	r0, r2, lsl #2
    7dd8:	00010501 	andeq	r0, r1, r1, lsl #10
    7ddc:	00000205 	andeq	r0, r0, r5, lsl #4
    7de0:	85030000 	strhi	r0, [r3, #-0]
    7de4:	01060108 	tsteq	r6, r8, lsl #2
    7de8:	21060305 	tstcs	r6, r5, lsl #6
    7dec:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    7df0:	004a0204 	subeq	r0, sl, r4, lsl #4
    7df4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7df8:	02040200 	andeq	r0, r4, #0, 4
    7dfc:	00210514 	eoreq	r0, r1, r4, lsl r5
    7e00:	06020402 	streq	r0, [r2], -r2, lsl #8
    7e04:	04020001 	streq	r0, [r2], #-1
    7e08:	05052e02 	streq	r2, [r5, #-3586]	; 0xfffff1fe
    7e0c:	02040200 	andeq	r0, r4, #0, 4
    7e10:	030c0520 	movweq	r0, #50464	; 0xc520
    7e14:	03052e2c 	movweq	r2, #24108	; 0x5e2c
    7e18:	3c012406 	cfstrscc	mvf2, [r1], {6}
    7e1c:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    7e20:	06050501 	streq	r0, [r5], -r1, lsl #10
    7e24:	05205003 	streq	r5, [r0, #-3]!
    7e28:	1e058507 	cfsh32ne	mvfx8, mvfx5, #7
    7e2c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7e30:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    7e34:	01750306 	cmneq	r5, r6, lsl #6
    7e38:	0b030705 	bleq	c9a54 <_Min_Heap_Size+0xc9254>
    7e3c:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7e40:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    7e44:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    7e48:	01062005 	tsteq	r6, r5
    7e4c:	2f060705 	svccs	0x00060705
    7e50:	06240523 	strteq	r0, [r4], -r3, lsr #10
    7e54:	06070501 	streq	r0, [r7], -r1, lsl #10
    7e58:	1f05232f 	svcne	0x0005232f
    7e5c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7e60:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    7e64:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7e68:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    7e6c:	01061e05 	tsteq	r6, r5, lsl #28
    7e70:	2f060705 	svccs	0x00060705
    7e74:	01062205 	tsteq	r6, r5, lsl #4
    7e78:	21060705 	tstcs	r6, r5, lsl #14
    7e7c:	01062005 	tsteq	r6, r5
    7e80:	21060705 	tstcs	r6, r5, lsl #14
    7e84:	01062405 	tsteq	r6, r5, lsl #8
    7e88:	21060705 	tstcs	r6, r5, lsl #14
    7e8c:	01061f05 	tsteq	r6, r5, lsl #30
    7e90:	21060705 	tstcs	r6, r5, lsl #14
    7e94:	01061f05 	tsteq	r6, r5, lsl #30
    7e98:	21060705 	tstcs	r6, r5, lsl #14
    7e9c:	03060305 	movweq	r0, #25349	; 0x6305
    7ea0:	0105205b 	qaddeq	r2, fp, r5
    7ea4:	02203503 	eoreq	r3, r0, #12582912	; 0xc00000
    7ea8:	01010001 	tsteq	r1, r1
    7eac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7eb0:	00000002 	andeq	r0, r0, r2
    7eb4:	08da0300 	ldmeq	sl, {r8, r9}^
    7eb8:	13030501 	movwne	r0, #13569	; 0x3501
    7ebc:	01060e05 	tsteq	r6, r5, lsl #28
    7ec0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    7ec4:	01010001 	tsteq	r1, r1
    7ec8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7ecc:	00000002 	andeq	r0, r0, r2
    7ed0:	08e50300 	stmiaeq	r5!, {r8, r9}^
    7ed4:	13030501 	movwne	r0, #13569	; 0x3501
    7ed8:	01060e05 	tsteq	r6, r5, lsl #28
    7edc:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    7ee0:	01010001 	tsteq	r1, r1
    7ee4:	000008ee 	andeq	r0, r0, lr, ror #17
    7ee8:	020b0003 	andeq	r0, fp, #3
    7eec:	01020000 	mrseq	r0, (UNDEF: 2)
    7ef0:	000d0efb 	strdeq	r0, [sp], -fp
    7ef4:	01010101 	tsteq	r1, r1, lsl #2
    7ef8:	01000000 	mrseq	r0, (UNDEF: 0)
    7efc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    7f00:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    7f04:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    7f08:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    7f0c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    7f10:	5f787834 	svcpl	0x00787834
    7f14:	5f4c4148 	svcpl	0x004c4148
    7f18:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    7f1c:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    7f20:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    7f24:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    7f28:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    7f2c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    7f30:	2f534953 	svccs	0x00534953
    7f34:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    7f38:	00656475 	rsbeq	r6, r5, r5, ror r4
    7f3c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 7f44 <_Min_Heap_Size+0x7744>
    7f40:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    7f44:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    7f48:	5349534d 	movtpl	r5, #37709	; 0x934d
    7f4c:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    7f50:	2f656369 	svccs	0x00656369
    7f54:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    7f58:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    7f5c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    7f60:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    7f64:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7f68:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7f6c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7f70:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7f74:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7f78:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7f7c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7f80:	5f6d7261 	svcpl	0x006d7261
    7f84:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7f88:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7f8c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7f90:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7f94:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7f98:	30312d69 	eorscc	r2, r1, r9, ror #26
    7f9c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7fa0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    7fa4:	615c3031 	cmpvs	ip, r1, lsr r0
    7fa8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7fac:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7fb0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    7fb4:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7fb8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7fbc:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    7fc0:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    7fc4:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    7fc8:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    7fcc:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    7fd0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    7fd4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    7fd8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    7fdc:	5f6d7261 	svcpl	0x006d7261
    7fe0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    7fe4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    7fe8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7fec:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7ff0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7ff4:	30312d69 	eorscc	r2, r1, r9, ror #26
    7ff8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    7ffc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8000:	615c3031 	cmpvs	ip, r1, lsr r0
    8004:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8008:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    800c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8010:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8014:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8018:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    801c:	2f2e2e00 	svccs	0x002e2e00
    8020:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8024:	2f737265 	svccs	0x00737265
    8028:	334d5453 	movtcc	r5, #54355	; 0xd453
    802c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    8030:	41485f78 	hvcmi	34296	; 0x85f8
    8034:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    8038:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    803c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8040:	2f2e2e00 	svccs	0x002e2e00
    8044:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    8048:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    804c:	74730000 	ldrbtvc	r0, [r3], #-0
    8050:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8054:	5f787834 	svcpl	0x00787834
    8058:	5f6c6168 	svcpl	0x006c6168
    805c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    8060:	632e7865 			; <UNDEFINED> instruction: 0x632e7865
    8064:	00000100 	andeq	r0, r0, r0, lsl #2
    8068:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    806c:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
    8070:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8074:	6d630000 	stclvs	0, cr0, [r3, #-0]
    8078:	5f736973 	svcpl	0x00736973
    807c:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    8080:	00020068 	andeq	r0, r2, r8, rrx
    8084:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    8088:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    808c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    8090:	0300682e 	movweq	r6, #2094	; 0x82e
    8094:	645f0000 	ldrbvs	r0, [pc], #-0	; 809c <_Min_Heap_Size+0x789c>
    8098:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    809c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 80a4 <_Min_Heap_Size+0x78a4>
    80a0:	73657079 	cmnvc	r5, #121	; 0x79
    80a4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    80a8:	735f0000 	cmpvc	pc, #0
    80ac:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    80b0:	00682e74 	rsbeq	r2, r8, r4, ror lr
    80b4:	73000005 	movwvc	r0, #5
    80b8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    80bc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    80c0:	0300682e 	movweq	r6, #2094	; 0x82e
    80c4:	74730000 	ldrbtvc	r0, [r3], #-0
    80c8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    80cc:	5f787834 	svcpl	0x00787834
    80d0:	5f6c6168 	svcpl	0x006c6168
    80d4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    80d8:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    80dc:	00000600 	andeq	r0, r0, r0, lsl #12
    80e0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    80e4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    80e8:	61685f78 	smcvs	34296	; 0x85f8
    80ec:	6f635f6c 	svcvs	0x00635f6c
    80f0:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    80f4:	00000700 	andeq	r0, r0, r0, lsl #14
    80f8:	00010500 	andeq	r0, r1, r0, lsl #10
    80fc:	15a00205 	strne	r0, [r0, #517]!	; 0x205
    8100:	8d030800 	stchi	8, cr0, [r3, #-0]
    8104:	01060101 	tsteq	r6, r1, lsl #2
    8108:	30060305 	andcc	r0, r6, r5, lsl #6
    810c:	0502043f 	streq	r0, [r2, #-1087]	; 0xfffffbc1
    8110:	0be20316 	bleq	ff888d70 <_estack+0xdf887b38>
    8114:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8118:	0e051413 	cfmvdlreq	mvd5, r1
    811c:	03050106 	movweq	r0, #20742	; 0x5106
    8120:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    8124:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    8128:	052f0603 	streq	r0, [pc, #-1539]!	; 7b2d <_Min_Heap_Size+0x732d>
    812c:	20140623 	andscs	r0, r4, r3, lsr #12
    8130:	052d3e05 	streq	r3, [sp, #-3589]!	; 0xfffff1fb
    8134:	03051f0e 	movweq	r1, #24334	; 0x5f0e
    8138:	0e054d06 	cdpeq	13, 0, cr4, cr5, cr6, {0}
    813c:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    8140:	03010501 	movweq	r0, #5377	; 0x1501
    8144:	05017495 	streq	r7, [r1, #-1173]	; 0xfffffb6b
    8148:	04020003 	streq	r0, [r2], #-3
    814c:	02001c01 	andeq	r1, r0, #256	; 0x100
    8150:	022e0104 	eoreq	r0, lr, #4, 2
    8154:	01010007 	tsteq	r1, r7
    8158:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    815c:	0015dc02 	andseq	sp, r5, r2, lsl #24
    8160:	01a30308 			; <UNDEFINED> instruction: 0x01a30308
    8164:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8168:	154b0603 	strbne	r0, [fp, #-1539]	; 0xfffff9fd
    816c:	0204302f 	andeq	r3, r4, #47	; 0x2f
    8170:	dd031a05 	vstrle	s2, [r3, #-20]	; 0xffffffec
    8174:	0305010b 	movweq	r0, #20747	; 0x510b
    8178:	061a0514 			; <UNDEFINED> instruction: 0x061a0514
    817c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    8180:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    8184:	a3030603 	movwge	r0, #13827	; 0x3603
    8188:	02040174 	andeq	r0, r4, #116, 2
    818c:	98031a05 	stmdals	r3, {r0, r2, r9, fp, ip}
    8190:	0305010d 	movweq	r0, #20749	; 0x510d
    8194:	14131314 	ldrne	r1, [r3], #-788	; 0xfffffcec
    8198:	01061f05 	tsteq	r6, r5, lsl #30
    819c:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    81a0:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    81a4:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    81a8:	0305206d 	movweq	r2, #20589	; 0x506d
    81ac:	1e053e06 	cdpne	14, 0, cr3, cr5, cr6, {0}
    81b0:	2e2e1306 	cdpcs	3, 2, cr1, cr14, cr6, {0}
    81b4:	052e5205 	streq	r5, [lr, #-517]!	; 0xfffffdfb
    81b8:	052e211e 	streq	r2, [lr, #-286]!	; 0xfffffee2
    81bc:	05202d66 	streq	r2, [r0, #-3430]!	; 0xfffff29a
    81c0:	47030616 	smladmi	r3, r6, r6, r0
    81c4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    81c8:	01060605 	tsteq	r6, r5, lsl #12
    81cc:	30060505 	andcc	r0, r6, r5, lsl #10
    81d0:	01063005 	tsteq	r6, r5
    81d4:	202e0520 	eorcs	r0, lr, r0, lsr #10
    81d8:	01044a2e 	tsteq	r4, lr, lsr #20
    81dc:	94030105 	strls	r0, [r3], #-261	; 0xfffffefb
    81e0:	03050173 	movweq	r0, #20851	; 0x5173
    81e4:	01040200 	mrseq	r0, R12_usr
    81e8:	00207a03 	eoreq	r7, r0, r3, lsl #20
    81ec:	20010402 	andcs	r0, r1, r2, lsl #8
    81f0:	01040200 	mrseq	r0, R12_usr
    81f4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    81f8:	02002e01 	andeq	r2, r0, #1, 28
    81fc:	04210104 	strteq	r0, [r1], #-260	; 0xfffffefc
    8200:	036d0502 	cmneq	sp, #8388608	; 0x800000
    8204:	20580da3 	subscs	r0, r8, r3, lsr #27
    8208:	06050520 	streq	r0, [r5], -r0, lsr #10
    820c:	05015203 	streq	r5, [r1, #-515]	; 0xfffffdfd
    8210:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    8214:	05202e30 	streq	r2, [r0, #-3632]!	; 0xfffff1d0
    8218:	042e202e 	strteq	r2, [lr], #-46	; 0xffffffd2
    821c:	03010501 	movweq	r0, #5377	; 0x1501
    8220:	02017390 	andeq	r7, r1, #144, 6	; 0x40000002
    8224:	01010008 	tsteq	r1, r8
    8228:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    822c:	00166802 	andseq	r6, r6, r2, lsl #16
    8230:	01b90308 			; <UNDEFINED> instruction: 0x01b90308
    8234:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8238:	31220603 			; <UNDEFINED> instruction: 0x31220603
    823c:	16050204 	strne	r0, [r5], -r4, lsl #4
    8240:	010bd503 	tsteq	fp, r3, lsl #10
    8244:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8248:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    824c:	13300605 	teqne	r0, #5242880	; 0x500000
    8250:	01065105 	tsteq	r6, r5, lsl #2
    8254:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    8258:	2b05202d 	blcs	150314 <_Min_Heap_Size+0x14fb14>
    825c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    8260:	0401063d 	streq	r0, [r1], #-1597	; 0xfffff9c3
    8264:	03010501 	movweq	r0, #5377	; 0x1501
    8268:	050174a6 	streq	r7, [r1, #-1190]	; 0xfffffb5a
    826c:	04020003 	streq	r0, [r2], #-3
    8270:	02001c01 	andeq	r1, r0, #256	; 0x100
    8274:	022e0104 	eoreq	r0, lr, #4, 2
    8278:	01010008 	tsteq	r1, r8
    827c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8280:	00000002 	andeq	r0, r0, r2
    8284:	01c90300 	biceq	r0, r9, r0, lsl #6
    8288:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    828c:	31220603 			; <UNDEFINED> instruction: 0x31220603
    8290:	16050204 	strne	r0, [r5], -r4, lsl #4
    8294:	010beb03 	tsteq	fp, r3, lsl #22
    8298:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    829c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    82a0:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    82a4:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    82a8:	2d052e22 	stccs	14, cr2, [r5, #-136]	; 0xffffff78
    82ac:	2e2b0520 	cfsh64cs	mvdx0, mvdx11, #16
    82b0:	4b060505 	blmi	1896cc <_Min_Heap_Size+0x188ecc>
    82b4:	1b050304 	blne	148ecc <_Min_Heap_Size+0x1486cc>
    82b8:	0174ce03 	cmneq	r4, r3, lsl #28
    82bc:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    82c0:	03050502 	movweq	r0, #21762	; 0x5502
    82c4:	042e0bb1 	strteq	r0, [lr], #-2993	; 0xfffff44f
    82c8:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    82cc:	050174c2 	streq	r7, [r1, #-1218]	; 0xfffffb3e
    82d0:	2e061403 	cdpcs	4, 0, cr1, cr6, cr3, {0}
    82d4:	01050104 	tsteq	r5, r4, lsl #2
    82d8:	05014c03 	streq	r4, [r1, #-3075]	; 0xfffff3fd
    82dc:	04020003 	streq	r0, [r2], #-3
    82e0:	02001c01 	andeq	r1, r0, #256	; 0x100
    82e4:	022e0104 	eoreq	r0, lr, #4, 2
    82e8:	01010007 	tsteq	r1, r7
    82ec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    82f0:	00000002 	andeq	r0, r0, r2
    82f4:	01d60300 	bicseq	r0, r6, r0, lsl #6
    82f8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    82fc:	22050204 	andcs	r0, r5, #4, 4	; 0x40000000
    8300:	010db903 	tsteq	sp, r3, lsl #18
    8304:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    8308:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    830c:	050172f9 	streq	r7, [r1, #-761]	; 0xfffffd07
    8310:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    8314:	2e0d8703 	cdpcs	7, 0, cr8, cr13, cr3, {0}
    8318:	13062005 	movwne	r2, #24581	; 0x6005
    831c:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
    8320:	0f052d11 	svceq	0x00052d11
    8324:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8328:	05030423 	streq	r0, [r3, #-1059]	; 0xfffffbdd
    832c:	72f4031b 	rscsvc	r0, r4, #1811939328	; 0x6c000000
    8330:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8334:	8c030204 	sfmhi	f0, 4, [r3], {4}
    8338:	05052e0d 	streq	r2, [r5, #-3597]	; 0xfffff1f3
    833c:	1e080514 	mcrne	5, 0, r0, cr8, cr4, {0}
    8340:	01000602 	tsteq	r0, r2, lsl #12
    8344:	00010501 	andeq	r0, r1, r1, lsl #10
    8348:	16980205 	ldrne	r0, [r8], r5, lsl #4
    834c:	e3030800 	movw	r0, #14336	; 0x3800
    8350:	04050101 	streq	r0, [r5], #-257	; 0xfffffeff
    8354:	05020413 	streq	r0, [r2, #-1043]	; 0xfffffbed
    8358:	0e81031a 	mcreq	3, 4, r0, cr1, cr10, {0}
    835c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8360:	01060e05 	tsteq	r6, r5, lsl #28
    8364:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    8368:	05410603 	strbeq	r0, [r1, #-1539]	; 0xfffff9fd
    836c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    8370:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    8374:	7ea80316 	mcrvc	3, 5, r0, cr8, cr6, {0}
    8378:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    837c:	05180505 	ldreq	r0, [r8, #-1285]	; 0xfffffafb
    8380:	4a01062e 	bmi	49c40 <_Min_Heap_Size+0x49440>
    8384:	03060305 	movweq	r0, #25349	; 0x6305
    8388:	050101d1 	streq	r0, [r1, #-465]	; 0xfffffe2f
    838c:	20010612 	andcs	r0, r1, r2, lsl r6
    8390:	21060305 	tstcs	r6, r5, lsl #6
    8394:	01061205 	tsteq	r6, r5, lsl #4
    8398:	31060305 	tstcc	r6, r5, lsl #6
    839c:	01060a05 	tsteq	r6, r5, lsl #20
    83a0:	77030c05 	strvc	r0, [r3, -r5, lsl #24]
    83a4:	01042020 	tsteq	r4, r0, lsr #32
    83a8:	fc030105 	stc2	1, cr0, [r3], {5}
    83ac:	03020171 	movweq	r0, #8561	; 0x2171
    83b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    83b4:	02050001 	andeq	r0, r5, #1
    83b8:	00000000 	andeq	r0, r0, r0
    83bc:	01028003 	tsteq	r2, r3
    83c0:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    83c4:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    83c8:	03050115 	movweq	r0, #20757	; 0x5115
    83cc:	03010414 	movweq	r0, #5140	; 0x1414
    83d0:	0e052e6c 	cdpeq	14, 0, cr2, cr5, cr12, {3}
    83d4:	03050106 	movweq	r0, #20742	; 0x5106
    83d8:	0d055b06 	vstreq	d5, [r5, #-24]	; 0xffffffe8
    83dc:	01050106 	tsteq	r5, r6, lsl #2
    83e0:	0004023d 	andeq	r0, r4, sp, lsr r2
    83e4:	01050101 	tsteq	r5, r1, lsl #2
    83e8:	00020500 	andeq	r0, r2, r0, lsl #10
    83ec:	03000000 	movweq	r0, #0
    83f0:	05010297 	streq	r0, [r1, #-663]	; 0xfffffd69
    83f4:	1b051403 	blne	14d408 <_Min_Heap_Size+0x14cc08>
    83f8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    83fc:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8400:	060e053f 			; <UNDEFINED> instruction: 0x060e053f
    8404:	06030501 	streq	r0, [r3], -r1, lsl #10
    8408:	0503044d 	streq	r0, [r3, #-1101]	; 0xfffffbb3
    840c:	016d031b 	cmneq	sp, fp, lsl r3
    8410:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    8414:	2e120301 	cdpcs	3, 1, cr0, cr2, cr1, {0}
    8418:	1b050304 	blne	149030 <_Min_Heap_Size+0x148830>
    841c:	05016103 	streq	r6, [r1, #-259]	; 0xfffffefd
    8420:	01041403 	tsteq	r4, r3, lsl #8
    8424:	03060105 	movweq	r0, #24837	; 0x6105
    8428:	03022e1e 	movweq	r2, #11806	; 0x2e1e
    842c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8430:	02050001 	andeq	r0, r5, #1
    8434:	00000000 	andeq	r0, r0, r0
    8438:	0102aa03 	tsteq	r2, r3, lsl #20
    843c:	03050106 	movweq	r0, #20742	; 0x5106
    8440:	3f3d3006 	svccc	0x003d3006
    8444:	01061605 	tsteq	r6, r5, lsl #12
    8448:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    844c:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    8450:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    8454:	05052006 	streq	r2, [r5, #-6]
    8458:	003d3106 	eorseq	r3, sp, r6, lsl #2
    845c:	06010402 	streq	r0, [r1], -r2, lsl #8
    8460:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    8464:	2f062e02 	svccs	0x00062e02
    8468:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
    846c:	19055a3d 	stmdbne	r5, {r0, r2, r3, r4, r5, r9, fp, ip, lr}
    8470:	0f050106 	svceq	0x00050106
    8474:	06050520 	streq	r0, [r5], -r0, lsr #10
    8478:	0624053d 			; <UNDEFINED> instruction: 0x0624053d
    847c:	3e052101 	adfccs	f2, f5, f1
    8480:	1f540520 	svcne	0x00540520
    8484:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    8488:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    848c:	1f540530 	svcne	0x00540530
    8490:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    8494:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    8498:	1f540530 	svcne	0x00540530
    849c:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    84a0:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    84a4:	1f540530 	svcne	0x00540530
    84a8:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    84ac:	0f051f54 	svceq	0x00051f54
    84b0:	05207903 	streq	r7, [r0, #-2307]!	; 0xfffff6fd
    84b4:	2e0f0301 	cdpcs	3, 0, cr0, cr15, cr1, {0}
    84b8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    84bc:	5e030104 	adfpls	f0, f3, f4
    84c0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    84c4:	02003c01 	andeq	r3, r0, #256	; 0x100
    84c8:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    84cc:	04020005 	streq	r0, [r2], #-5
    84d0:	02006e01 	andeq	r6, r0, #1, 28
    84d4:	00670304 	rsbeq	r0, r7, r4, lsl #6
    84d8:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    84dc:	01040200 	mrseq	r0, R12_usr
    84e0:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    84e4:	02006701 	andeq	r6, r0, #262144	; 0x40000
    84e8:	00670104 	rsbeq	r0, r7, r4, lsl #2
    84ec:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    84f0:	01040200 	mrseq	r0, R12_usr
    84f4:	0f030667 	svceq	0x00030667
    84f8:	060f0566 	streq	r0, [pc], -r6, ror #10
    84fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    8500:	060f054b 	streq	r0, [pc], -fp, asr #10
    8504:	30010501 	andcc	r0, r1, r1, lsl #10
    8508:	01000502 	tsteq	r0, r2, lsl #10
    850c:	00010501 	andeq	r0, r1, r1, lsl #10
    8510:	00000205 	andeq	r0, r0, r5, lsl #4
    8514:	d6030000 	strle	r0, [r3], -r0
    8518:	03050102 	movweq	r0, #20738	; 0x5102
    851c:	01052113 	tsteq	r5, r3, lsl r1
    8520:	01022106 	tsteq	r2, r6, lsl #2
    8524:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8528:	02050001 	andeq	r0, r5, #1
    852c:	00000000 	andeq	r0, r0, r0
    8530:	0102e003 	tsteq	r2, r3
    8534:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    8538:	031a0502 	tsteq	sl, #8388608	; 0x800000
    853c:	05010aa5 	streq	r0, [r1, #-2725]	; 0xfffff55b
    8540:	1a051403 	bne	14d554 <_Min_Heap_Size+0x14cd54>
    8544:	01040106 	tsteq	r4, r6, lsl #2
    8548:	da030105 	ble	c8964 <_Min_Heap_Size+0xc8164>
    854c:	06022e75 			; <UNDEFINED> instruction: 0x06022e75
    8550:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8554:	02050001 	andeq	r0, r5, #1
    8558:	00000000 	andeq	r0, r0, r0
    855c:	0102fb03 	tsteq	r2, r3, lsl #22	; <UNPREDICTABLE>
    8560:	03050106 	movweq	r0, #20742	; 0x5106
    8564:	20065a06 	andcs	r5, r6, r6, lsl #20
    8568:	02043006 	andeq	r3, r4, #6
    856c:	ac031a05 			; <UNDEFINED> instruction: 0xac031a05
    8570:	0305010b 	movweq	r0, #20747	; 0x510b
    8574:	06060515 			; <UNDEFINED> instruction: 0x06060515
    8578:	06050501 	streq	r0, [r5], -r1, lsl #10
    857c:	061f0530 			; <UNDEFINED> instruction: 0x061f0530
    8580:	40052e01 	andmi	r2, r5, r1, lsl #28
    8584:	1605204a 	strne	r2, [r5], -sl, asr #32
    8588:	012f0306 			; <UNDEFINED> instruction: 0x012f0306
    858c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8590:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    8594:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    8598:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    859c:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    85a0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    85a4:	01062c05 	tsteq	r6, r5, lsl #24
    85a8:	05206d05 	streq	r6, [r0, #-3333]!	; 0xfffff2fb
    85ac:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    85b0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    85b4:	2e2e2e35 	mcrcs	14, 1, r2, cr14, cr5, {1}
    85b8:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    85bc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    85c0:	2e010635 	mcrcs	6, 0, r0, cr1, cr5, {1}
    85c4:	202e1505 	eorcs	r1, lr, r5, lsl #10
    85c8:	01050104 	tsteq	r5, r4, lsl #2
    85cc:	01749703 	cmneq	r4, r3, lsl #14
    85d0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    85d4:	001d0104 	andseq	r0, sp, r4, lsl #2
    85d8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    85dc:	01040200 	mrseq	r0, R12_usr
    85e0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    85e4:	02042e01 	andeq	r2, r4, #1, 28
    85e8:	03060505 	movweq	r0, #25861	; 0x6505
    85ec:	05200bb7 	streq	r0, [r0, #-2999]!	; 0xfffff449
    85f0:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    85f4:	40052e1f 	andmi	r2, r5, pc, lsl lr
    85f8:	6d052e2e 	stcvs	14, cr2, [r5, #-184]	; 0xffffff48
    85fc:	20013203 	andcs	r3, r1, r3, lsl #4
    8600:	01000602 	tsteq	r0, r2, lsl #12
    8604:	00010501 	andeq	r0, r1, r1, lsl #10
    8608:	00000205 	andeq	r0, r0, r5, lsl #4
    860c:	8a030000 	bhi	c8614 <_Min_Heap_Size+0xc7e14>
    8610:	01060103 	tsteq	r6, r3, lsl #2
    8614:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    8618:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    861c:	0ad00316 	beq	ff40927c <_estack+0xdf408044>
    8620:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8624:	01060605 	tsteq	r6, r5, lsl #12
    8628:	30060505 	andcc	r0, r6, r5, lsl #10
    862c:	01065105 	tsteq	r6, r5, lsl #2
    8630:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    8634:	2b05202d 	blcs	1506f0 <_Min_Heap_Size+0x14fef0>
    8638:	01044a2e 	tsteq	r4, lr, lsr #20
    863c:	ad030105 	stfges	f0, [r3, #-20]	; 0xffffffec
    8640:	03050175 	movweq	r0, #20853	; 0x5175
    8644:	01040200 	mrseq	r0, R12_usr
    8648:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    864c:	08023c01 	stmdaeq	r2, {r0, sl, fp, ip, sp}
    8650:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8654:	02050001 	andeq	r0, r5, #1
    8658:	00000000 	andeq	r0, r0, r0
    865c:	01039c03 	tsteq	r3, r3, lsl #24
    8660:	03050106 	movweq	r0, #20742	; 0x5106
    8664:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    8668:	031a0502 	tsteq	sl, #8388608	; 0x800000
    866c:	05010aab 	streq	r0, [r1, #-2731]	; 0xfffff555
    8670:	06051403 	streq	r1, [r5], -r3, lsl #8
    8674:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8678:	36053006 	strcc	r3, [r5], -r6
    867c:	23050106 	movwcs	r0, #20742	; 0x5106
    8680:	4a5b0520 	bmi	16c9b08 <_Min_Heap_Size+0x16c9308>
    8684:	052e6705 	streq	r6, [lr, #-1797]!	; 0xfffff8fb
    8688:	042e2e0c 	strteq	r2, [lr], #-3596	; 0xfffff1f4
    868c:	03010501 	movweq	r0, #5377	; 0x1501
    8690:	050175d2 	streq	r7, [r1, #-1490]	; 0xfffffa2e
    8694:	04020003 	streq	r0, [r2], #-3
    8698:	02001c01 	andeq	r1, r0, #256	; 0x100
    869c:	043c0104 	ldrteq	r0, [ip], #-260	; 0xfffffefc
    86a0:	030b0502 	movweq	r0, #46338	; 0xb502
    86a4:	203c0ab6 	ldrhtcs	r0, [ip], -r6
    86a8:	0a050104 	beq	148ac0 <_Min_Heap_Size+0x1482c0>
    86ac:	0175cd03 	cmneq	r5, r3, lsl #26
    86b0:	01000602 	tsteq	r0, r2, lsl #12
    86b4:	00010501 	andeq	r0, r1, r1, lsl #10
    86b8:	00000205 	andeq	r0, r0, r5, lsl #4
    86bc:	ac030000 	stcge	0, cr0, [r3], {-0}
    86c0:	01060103 	tsteq	r6, r3, lsl #2
    86c4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    86c8:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    86cc:	0abd0316 	beq	fef4932c <_estack+0xdef480f4>
    86d0:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    86d4:	01060605 	tsteq	r6, r5, lsl #12
    86d8:	30060505 	andcc	r0, r6, r5, lsl #10
    86dc:	01065105 	tsteq	r6, r5, lsl #2
    86e0:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    86e4:	2b05202d 	blcs	1507a0 <_Min_Heap_Size+0x14ffa0>
    86e8:	01044a2e 	tsteq	r4, lr, lsr #20
    86ec:	c0030105 	andgt	r0, r3, r5, lsl #2
    86f0:	03050175 	movweq	r0, #20853	; 0x5175
    86f4:	01040200 	mrseq	r0, R12_usr
    86f8:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    86fc:	08023c01 	stmdaeq	r2, {r0, sl, fp, ip, sp}
    8700:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8704:	02050001 	andeq	r0, r5, #1
    8708:	00000000 	andeq	r0, r0, r0
    870c:	0103bd03 	tsteq	r3, r3, lsl #26
    8710:	03050106 	movweq	r0, #20742	; 0x5106
    8714:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    8718:	031a0502 	tsteq	sl, #8388608	; 0x800000
    871c:	05010abd 	streq	r0, [r1, #-2749]	; 0xfffff543
    8720:	06051403 	streq	r1, [r5], -r3, lsl #8
    8724:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8728:	36053006 	strcc	r3, [r5], -r6
    872c:	23050106 	movwcs	r0, #20742	; 0x5106
    8730:	4a5b0520 	bmi	16c9bb8 <_Min_Heap_Size+0x16c93b8>
    8734:	052e6705 	streq	r6, [lr, #-1797]!	; 0xfffff8fb
    8738:	042e2e0c 	strteq	r2, [lr], #-3596	; 0xfffff1f4
    873c:	03010501 	movweq	r0, #5377	; 0x1501
    8740:	050175c0 	streq	r7, [r1, #-1472]	; 0xfffffa40
    8744:	04020003 	streq	r0, [r2], #-3
    8748:	02001c01 	andeq	r1, r0, #256	; 0x100
    874c:	043c0104 	ldrteq	r0, [ip], #-260	; 0xfffffefc
    8750:	030b0502 	movweq	r0, #46338	; 0xb502
    8754:	203c0ac8 	eorscs	r0, ip, r8, asr #21
    8758:	0a050104 	beq	148b70 <_Min_Heap_Size+0x148370>
    875c:	0175bb03 	cmneq	r5, r3, lsl #22
    8760:	01000602 	tsteq	r0, r2, lsl #12
    8764:	00010501 	andeq	r0, r1, r1, lsl #10
    8768:	00000205 	andeq	r0, r0, r5, lsl #4
    876c:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    8770:	01060103 	tsteq	r6, r3, lsl #2
    8774:	30060305 	andcc	r0, r6, r5, lsl #6
    8778:	01040200 	mrseq	r0, R12_usr
    877c:	21062e06 	tstcs	r6, r6, lsl #28
    8780:	01060605 	tsteq	r6, r5, lsl #12
    8784:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    8788:	01061305 	tsteq	r6, r5, lsl #6
    878c:	05680105 	strbeq	r0, [r8, #-261]!	; 0xfffffefb
    8790:	04020003 	streq	r0, [r2], #-3
    8794:	20770302 	rsbscs	r0, r7, r2, lsl #6
    8798:	02040200 	andeq	r0, r4, #0, 4
    879c:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    87a0:	0613053f 			; <UNDEFINED> instruction: 0x0613053f
    87a4:	000a0201 	andeq	r0, sl, r1, lsl #4
    87a8:	01050101 	tsteq	r5, r1, lsl #2
    87ac:	00020500 	andeq	r0, r2, r0, lsl #10
    87b0:	03000000 	movweq	r0, #0
    87b4:	160103e9 	strne	r0, [r1], -r9, ror #7
    87b8:	01000102 	tsteq	r0, r2, lsl #2
    87bc:	00010501 	andeq	r0, r1, r1, lsl #10
    87c0:	00000205 	andeq	r0, r0, r5, lsl #4
    87c4:	e0030000 	and	r0, r3, r0
    87c8:	03050103 	movweq	r0, #20739	; 0x5103
    87cc:	06010521 	streq	r0, [r1], -r1, lsr #10
    87d0:	0001022f 	andeq	r0, r1, pc, lsr #4
    87d4:	05be0101 	ldreq	r0, [lr, #257]!	; 0x101
    87d8:	00030000 	andeq	r0, r3, r0
    87dc:	00000235 	andeq	r0, r0, r5, lsr r2
    87e0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    87e4:	0101000d 	tsteq	r1, sp
    87e8:	00000101 	andeq	r0, r0, r1, lsl #2
    87ec:	00000100 	andeq	r0, r0, r0, lsl #2
    87f0:	2f2e2e01 	svccs	0x002e2e01
    87f4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    87f8:	2f737265 	svccs	0x00737265
    87fc:	334d5453 	movtcc	r5, #54355	; 0xd453
    8800:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    8804:	41485f78 	hvcmi	34296	; 0x85f8
    8808:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    880c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8810:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    8814:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8818:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    881c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8820:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8824:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8828:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    882c:	5f6d7261 	svcpl	0x006d7261
    8830:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8834:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8838:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    883c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8840:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8844:	30312d69 	eorscc	r2, r1, r9, ror #26
    8848:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    884c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8850:	615c3031 	cmpvs	ip, r1, lsr r0
    8854:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8858:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    885c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8860:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8864:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8868:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    886c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    8870:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8874:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8878:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    887c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8880:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8884:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8888:	5f6d7261 	svcpl	0x006d7261
    888c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8890:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8894:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8898:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    889c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    88a0:	30312d69 	eorscc	r2, r1, r9, ror #26
    88a4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    88a8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    88ac:	615c3031 	cmpvs	ip, r1, lsr r0
    88b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    88b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    88b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    88bc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    88c0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    88c4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    88c8:	2f2e2e00 	svccs	0x002e2e00
    88cc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    88d0:	2f737265 	svccs	0x00737265
    88d4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    88d8:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    88dc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    88e0:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    88e4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    88e8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    88ec:	534d432f 	movtpl	r4, #54063	; 0xd32f
    88f0:	442f5349 	strtmi	r5, [pc], #-841	; 88f8 <_Min_Heap_Size+0x80f8>
    88f4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    88f8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    88fc:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    8900:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    8904:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    8908:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    890c:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    8910:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    8914:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8918:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    891c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    8920:	5f787834 	svcpl	0x00787834
    8924:	5f4c4148 	svcpl	0x004c4148
    8928:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    892c:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    8930:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    8934:	6f432f2e 	svcvs	0x00432f2e
    8938:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    893c:	0000636e 	andeq	r6, r0, lr, ror #6
    8940:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8944:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8948:	61685f78 	smcvs	34296	; 0x85f8
    894c:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    8950:	5f000001 	svcpl	0x00000001
    8954:	61666564 	cmnvs	r6, r4, ror #10
    8958:	5f746c75 	svcpl	0x00746c75
    895c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    8960:	00682e73 	rsbeq	r2, r8, r3, ror lr
    8964:	5f000002 	svcpl	0x00000002
    8968:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    896c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    8970:	00000300 	andeq	r0, r0, r0, lsl #6
    8974:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    8978:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
    897c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    8980:	74730000 	ldrbtvc	r0, [r3], #-0
    8984:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8988:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    898c:	00682e78 	rsbeq	r2, r8, r8, ror lr
    8990:	73000005 	movwvc	r0, #5
    8994:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8998:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    899c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    89a0:	74730000 	ldrbtvc	r0, [r3], #-0
    89a4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    89a8:	5f787834 	svcpl	0x00787834
    89ac:	5f6c6168 	svcpl	0x006c6168
    89b0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    89b4:	00060068 	andeq	r0, r6, r8, rrx
    89b8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    89bc:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    89c0:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    89c4:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    89c8:	00000600 	andeq	r0, r0, r0, lsl #12
    89cc:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    89d0:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    89d4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    89d8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    89dc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    89e0:	74730000 	ldrbtvc	r0, [r3], #-0
    89e4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    89e8:	5f787834 	svcpl	0x00787834
    89ec:	5f6c6168 	svcpl	0x006c6168
    89f0:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    89f4:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    89f8:	74730000 	ldrbtvc	r0, [r3], #-0
    89fc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8a00:	5f787834 	svcpl	0x00787834
    8a04:	5f6c6168 	svcpl	0x006c6168
    8a08:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    8a0c:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    8a10:	00000600 	andeq	r0, r0, r0, lsl #12
    8a14:	00010500 	andeq	r0, r1, r0, lsl #10
    8a18:	00000205 	andeq	r0, r0, r5, lsl #4
    8a1c:	db030000 	blle	c8a24 <_Min_Heap_Size+0xc8224>
    8a20:	02160101 	andseq	r0, r6, #1073741824	; 0x40000000
    8a24:	01010001 	tsteq	r1, r1
    8a28:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8a2c:	00000002 	andeq	r0, r0, r2
    8a30:	01e60300 	mvneq	r0, r0, lsl #6
    8a34:	01021601 	tsteq	r2, r1, lsl #12
    8a38:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8a3c:	02050001 	andeq	r0, r5, #1
    8a40:	00000000 	andeq	r0, r0, r0
    8a44:	0101be03 	tsteq	r1, r3, lsl #28
    8a48:	3d220305 	stccc	3, cr0, [r2, #-20]!	; 0xffffffec
    8a4c:	2f222f30 	svccs	0x00222f30
    8a50:	2f222f22 	svccs	0x00222f22
    8a54:	01053123 	tsteq	r5, r3, lsr #2
    8a58:	0a021306 	beq	8d678 <_Min_Heap_Size+0x8ce78>
    8a5c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8a60:	02050001 	andeq	r0, r5, #1
    8a64:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
    8a68:	0101fd03 	tsteq	r1, r3, lsl #26	; <UNPREDICTABLE>
    8a6c:	03050106 	movweq	r0, #20742	; 0x5106
    8a70:	33053006 	movwcc	r3, #20486	; 0x5006
    8a74:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    8a78:	06054a07 	streq	r4, [r5], -r7, lsl #20
    8a7c:	06030566 	streq	r0, [r3], -r6, ror #10
    8a80:	06060526 	streq	r0, [r6], -r6, lsr #10
    8a84:	350c0501 	strcc	r0, [ip, #-1281]	; 0xfffffaff
    8a88:	29060505 	stmdbcs	r6, {r0, r2, r8, sl}
    8a8c:	06100567 	ldreq	r0, [r0], -r7, ror #10
    8a90:	06030501 	streq	r0, [r3], -r1, lsl #10
    8a94:	060a0536 			; <UNDEFINED> instruction: 0x060a0536
    8a98:	030c0501 	movweq	r0, #50433	; 0xc501
    8a9c:	01052e71 	tsteq	r5, r1, ror lr
    8aa0:	20201003 	eorcs	r1, r0, r3
    8aa4:	01000702 	tsteq	r0, r2, lsl #14
    8aa8:	00010501 	andeq	r0, r1, r1, lsl #10
    8aac:	170c0205 	strne	r0, [ip, -r5, lsl #4]
    8ab0:	9d030800 	stcls	8, cr0, [r3, #-0]
    8ab4:	03050101 	movweq	r0, #20737	; 0x5101
    8ab8:	4e4e5c23 	cdpmi	12, 4, cr5, cr14, cr3, {1}
    8abc:	05313f3f 	ldreq	r3, [r1, #-3903]!	; 0xfffff0c1
    8ac0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8ac4:	01010004 	tsteq	r1, r4
    8ac8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8acc:	00174002 	andseq	r4, r7, r2
    8ad0:	02b80308 	adcseq	r0, r8, #8, 6	; 0x20000000
    8ad4:	13030501 	movwne	r0, #13569	; 0x3501
    8ad8:	01060a05 	tsteq	r6, r5, lsl #20
    8adc:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    8ae0:	01010006 	tsteq	r1, r6
    8ae4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8ae8:	00175802 	andseq	r5, r7, r2, lsl #16
    8aec:	02c30308 	sbceq	r0, r3, #8, 6	; 0x20000000
    8af0:	13030501 	movwne	r0, #13569	; 0x3501
    8af4:	01060a05 	tsteq	r6, r5, lsl #20
    8af8:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    8afc:	01010004 	tsteq	r1, r4
    8b00:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8b04:	00000002 	andeq	r0, r0, r2
    8b08:	02cc0300 	sbceq	r0, ip, #0, 6
    8b0c:	13030501 	movwne	r0, #13569	; 0x3501
    8b10:	13060105 	movwne	r0, #24837	; 0x6105
    8b14:	01000602 	tsteq	r0, r2, lsl #12
    8b18:	00010501 	andeq	r0, r1, r1, lsl #10
    8b1c:	00000205 	andeq	r0, r0, r5, lsl #4
    8b20:	d5030000 	strle	r0, [r3, #-0]
    8b24:	01060102 	tsteq	r6, r2, lsl #2
    8b28:	2f060305 	svccs	0x00060305
    8b2c:	02001413 	andeq	r1, r0, #318767104	; 0x13000000
    8b30:	2e060104 	adfcss	f0, f6, f4
    8b34:	02040200 	andeq	r0, r4, #0, 4
    8b38:	0530062e 	ldreq	r0, [r0, #-1582]!	; 0xfffff9d2
    8b3c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    8b40:	15052e06 	strne	r2, [r5, #-3590]	; 0xfffff1fa
    8b44:	06030529 	streq	r0, [r3], -r9, lsr #10
    8b48:	05201703 	streq	r1, [r0, #-1795]!	; 0xfffff8fd
    8b4c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    8b50:	04020003 	streq	r0, [r2], #-3
    8b54:	206b0303 	rsbcs	r0, fp, r3, lsl #6
    8b58:	03040200 	movweq	r0, #16896	; 0x4200
    8b5c:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    8b60:	10051541 	andne	r1, r5, r1, asr #10
    8b64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8b68:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    8b6c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8b70:	08054c06 	stmdaeq	r5, {r1, r2, sl, fp, lr}
    8b74:	07050106 	streq	r0, [r5, -r6, lsl #2]
    8b78:	12053106 	andne	r3, r5, #-2147483647	; 0x80000001
    8b7c:	09020106 	stmdbeq	r2, {r1, r2, r8}
    8b80:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8b84:	02050001 	andeq	r0, r5, #1
    8b88:	00000000 	andeq	r0, r0, r0
    8b8c:	0102f603 	tsteq	r2, r3, lsl #12	; <UNPREDICTABLE>
    8b90:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8b94:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8b98:	01010006 	tsteq	r1, r6
    8b9c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8ba0:	00176402 	andseq	r6, r7, r2, lsl #8
    8ba4:	03860308 	orreq	r0, r6, #8, 6	; 0x20000000
    8ba8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8bac:	052f0603 	streq	r0, [pc, #-1539]!	; 85b1 <_Min_Heap_Size+0x7db1>
    8bb0:	2e010618 	mcrcs	6, 0, r0, cr1, cr8, {0}
    8bb4:	21060305 	tstcs	r6, r5, lsl #6
    8bb8:	06060515 			; <UNDEFINED> instruction: 0x06060515
    8bbc:	06050501 	streq	r0, [r5], -r1, lsl #10
    8bc0:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    8bc4:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    8bc8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    8bcc:	25060104 	strcs	r0, [r6, #-260]	; 0xfffffefc
    8bd0:	02000805 	andeq	r0, r0, #327680	; 0x50000
    8bd4:	05100104 	ldreq	r0, [r0, #-260]	; 0xfffffefc
    8bd8:	0402000a 	streq	r0, [r2], #-10
    8bdc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8be0:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    8be4:	08052e01 	stmdaeq	r5, {r0, r9, sl, fp, sp}
    8be8:	01040200 	mrseq	r0, R12_usr
    8bec:	31010520 	tstcc	r1, r0, lsr #10
    8bf0:	00030220 	andeq	r0, r3, r0, lsr #4
    8bf4:	01050101 	tsteq	r5, r1, lsl #2
    8bf8:	00020500 	andeq	r0, r2, r0, lsl #10
    8bfc:	03000000 	movweq	r0, #0
    8c00:	050103a0 	streq	r0, [r1, #-928]	; 0xfffffc60
    8c04:	11051403 	tstne	r5, r3, lsl #8
    8c08:	01050106 	tsteq	r5, r6, lsl #2
    8c0c:	00010267 	andeq	r0, r1, r7, ror #4
    8c10:	01050101 	tsteq	r5, r1, lsl #2
    8c14:	00020500 	andeq	r0, r2, r0, lsl #10
    8c18:	03000000 	movweq	r0, #0
    8c1c:	050103b0 	streq	r0, [r1, #-944]	; 0xfffffc50
    8c20:	12051403 	andne	r1, r5, #50331648	; 0x3000000
    8c24:	01050106 	tsteq	r5, r6, lsl #2
    8c28:	00010267 	andeq	r0, r1, r7, ror #4
    8c2c:	01050101 	tsteq	r5, r1, lsl #2
    8c30:	00020500 	andeq	r0, r2, r0, lsl #10
    8c34:	03000000 	movweq	r0, #0
    8c38:	050103ba 	streq	r0, [r1, #-954]	; 0xfffffc46
    8c3c:	01051303 	tsteq	r5, r3, lsl #6
    8c40:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    8c44:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8c48:	02050001 	andeq	r0, r5, #1
    8c4c:	00000000 	andeq	r0, r0, r0
    8c50:	0103c303 	tsteq	r3, r3, lsl #6
    8c54:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8c58:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    8c5c:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    8c60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8c64:	02050001 	andeq	r0, r5, #1
    8c68:	00000000 	andeq	r0, r0, r0
    8c6c:	0103cc03 	tsteq	r3, r3, lsl #24
    8c70:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8c74:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    8c78:	06022f01 	streq	r2, [r2], -r1, lsl #30
    8c7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8c80:	02050001 	andeq	r0, r5, #1
    8c84:	00000000 	andeq	r0, r0, r0
    8c88:	0103d503 	tsteq	r3, r3, lsl #10
    8c8c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8c90:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    8c94:	01010003 	tsteq	r1, r3
    8c98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8c9c:	00000002 	andeq	r0, r0, r2
    8ca0:	03de0300 	bicseq	r0, lr, #0, 6
    8ca4:	13030501 	movwne	r0, #13569	; 0x3501
    8ca8:	59060105 	stmdbpl	r6, {r0, r2, r8}
    8cac:	01000302 	tsteq	r0, r2, lsl #6
    8cb0:	00010501 	andeq	r0, r1, r1, lsl #10
    8cb4:	00000205 	andeq	r0, r0, r5, lsl #4
    8cb8:	e7030000 	str	r0, [r3, -r0]
    8cbc:	03050103 	movweq	r0, #20739	; 0x5103
    8cc0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8cc4:	00030259 	andeq	r0, r3, r9, asr r2
    8cc8:	01050101 	tsteq	r5, r1, lsl #2
    8ccc:	00020500 	andeq	r0, r2, r0, lsl #10
    8cd0:	03000000 	movweq	r0, #0
    8cd4:	050103f0 	streq	r0, [r1, #-1008]	; 0xfffffc10
    8cd8:	01051303 	tsteq	r5, r3, lsl #6
    8cdc:	03025906 	movweq	r5, #10502	; 0x2906
    8ce0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8ce4:	02050001 	andeq	r0, r5, #1
    8ce8:	00000000 	andeq	r0, r0, r0
    8cec:	0103f903 	tsteq	r3, r3, lsl #18	; <UNPREDICTABLE>
    8cf0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8cf4:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    8cf8:	01010003 	tsteq	r1, r3
    8cfc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8d00:	00000002 	andeq	r0, r0, r2
    8d04:	04820300 	streq	r0, [r2], #768	; 0x300
    8d08:	13030501 	movwne	r0, #13569	; 0x3501
    8d0c:	59060105 	stmdbpl	r6, {r0, r2, r8}
    8d10:	01000302 	tsteq	r0, r2, lsl #6
    8d14:	00010501 	andeq	r0, r1, r1, lsl #10
    8d18:	00000205 	andeq	r0, r0, r5, lsl #4
    8d1c:	8d030000 	stchi	0, cr0, [r3, #-0]
    8d20:	03050104 	movweq	r0, #20740	; 0x5104
    8d24:	06250513 			; <UNDEFINED> instruction: 0x06250513
    8d28:	4b010501 	blmi	4a134 <_Min_Heap_Size+0x49934>
    8d2c:	01000402 	tsteq	r0, r2, lsl #8
    8d30:	00010501 	andeq	r0, r1, r1, lsl #10
    8d34:	00000205 	andeq	r0, r0, r5, lsl #4
    8d38:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    8d3c:	03050104 	movweq	r0, #20740	; 0x5104
    8d40:	06250513 			; <UNDEFINED> instruction: 0x06250513
    8d44:	4b010501 	blmi	4a150 <_Min_Heap_Size+0x49950>
    8d48:	01000402 	tsteq	r0, r2, lsl #8
    8d4c:	00010501 	andeq	r0, r1, r1, lsl #10
    8d50:	00000205 	andeq	r0, r0, r5, lsl #4
    8d54:	a1030000 	mrsge	r0, (UNDEF: 3)
    8d58:	03050104 	movweq	r0, #20740	; 0x5104
    8d5c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8d60:	00060213 	andeq	r0, r6, r3, lsl r2
    8d64:	01050101 	tsteq	r5, r1, lsl #2
    8d68:	00020500 	andeq	r0, r2, r0, lsl #10
    8d6c:	03000000 	movweq	r0, #0
    8d70:	050104aa 	streq	r0, [r1, #-1194]	; 0xfffffb56
    8d74:	01051303 	tsteq	r5, r3, lsl #6
    8d78:	06021306 	streq	r1, [r2], -r6, lsl #6
    8d7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d80:	02050001 	andeq	r0, r5, #1
    8d84:	00000000 	andeq	r0, r0, r0
    8d88:	0104b303 	tsteq	r4, r3, lsl #6
    8d8c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8d90:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8d94:	01010006 	tsteq	r1, r6
    8d98:	0000026b 	andeq	r0, r0, fp, ror #4
    8d9c:	01850003 	orreq	r0, r5, r3
    8da0:	01020000 	mrseq	r0, (UNDEF: 2)
    8da4:	000d0efb 	strdeq	r0, [sp], -fp
    8da8:	01010101 	tsteq	r1, r1, lsl #2
    8dac:	01000000 	mrseq	r0, (UNDEF: 0)
    8db0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8db4:	6f432f2e 	svcvs	0x00432f2e
    8db8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    8dbc:	63006372 	movwvs	r6, #882	; 0x372
    8dc0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8dc4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8dc8:	6f646978 	svcvs	0x00646978
    8dcc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8dd0:	6172676f 	cmnvs	r2, pc, ror #14
    8dd4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8dd8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8ddc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8de0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8de4:	6f6e2d6d 	svcvs	0x006e2d6d
    8de8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8dec:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8df0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8df4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8df8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8dfc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8e00:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8e04:	61652d65 	cmnvs	r5, r5, ror #26
    8e08:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8e0c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8e10:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    8e14:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    8e18:	6300656e 	movwvs	r6, #1390	; 0x56e
    8e1c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8e20:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8e24:	6f646978 	svcvs	0x00646978
    8e28:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    8e2c:	6172676f 	cmnvs	r2, pc, ror #14
    8e30:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8e34:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8e38:	63675c63 	cmnvs	r7, #25344	; 0x6300
    8e3c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8e40:	6f6e2d6d 	svcvs	0x006e2d6d
    8e44:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8e48:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8e4c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8e50:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8e54:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8e58:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8e5c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8e60:	61652d65 	cmnvs	r5, r5, ror #26
    8e64:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8e68:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8e6c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    8e70:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    8e74:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    8e78:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8e7c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    8e80:	2f534953 	svccs	0x00534953
    8e84:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    8e88:	00656475 	rsbeq	r6, r5, r5, ror r4
    8e8c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8e94 <_Min_Heap_Size+0x8694>
    8e90:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8e94:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    8e98:	5349534d 	movtpl	r5, #37709	; 0x934d
    8e9c:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    8ea0:	2f656369 	svccs	0x00656369
    8ea4:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    8ea8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    8eac:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    8eb0:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8eb4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8eb8:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    8ebc:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    8ec0:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    8ec4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8ec8:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
    8ecc:	00000100 	andeq	r0, r0, r0, lsl #2
    8ed0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    8ed4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8ed8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    8edc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    8ee0:	00000200 	andeq	r0, r0, r0, lsl #4
    8ee4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    8ee8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    8eec:	00030068 	andeq	r0, r3, r8, rrx
    8ef0:	726f6300 	rsbvc	r6, pc, #0, 6
    8ef4:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    8ef8:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    8efc:	73000004 	movwvc	r0, #4
    8f00:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    8f04:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    8f08:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    8f0c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    8f10:	00050068 	andeq	r0, r5, r8, rrx
    8f14:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    8f18:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8f1c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    8f20:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8f24:	05000000 	streq	r0, [r0, #-0]
    8f28:	02050001 	andeq	r0, r5, #1
    8f2c:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
    8f30:	0101a703 	tsteq	r1, r3, lsl #14
    8f34:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    8f38:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    8f3c:	740b0301 	strvc	r0, [fp], #-769	; 0xfffffcff
    8f40:	01000302 	tsteq	r0, r2, lsl #6
    8f44:	00010501 	andeq	r0, r1, r1, lsl #10
    8f48:	00000205 	andeq	r0, r0, r5, lsl #4
    8f4c:	dc030000 	stcle	0, cr0, [r3], {-0}
    8f50:	03050101 	movweq	r0, #20737	; 0x5101
    8f54:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    8f58:	07050106 	streq	r0, [r5, -r6, lsl #2]
    8f5c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8f60:	03070530 	movweq	r0, #30000	; 0x7530
    8f64:	1705581f 	smladne	r5, pc, r8, r5	; <UNPREDICTABLE>
    8f68:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    8f6c:	032f0607 			; <UNDEFINED> instruction: 0x032f0607
    8f70:	17052063 	strne	r2, [r5, -r3, rrx]
    8f74:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    8f78:	052f0607 	streq	r0, [pc, #-1543]!	; 8979 <_Min_Heap_Size+0x8179>
    8f7c:	01200303 			; <UNDEFINED> instruction: 0x01200303
    8f80:	01061c05 	tsteq	r6, r5, lsl #24
    8f84:	052e3405 	streq	r3, [lr, #-1029]!	; 0xfffffbfb
    8f88:	03052e16 	movweq	r2, #24086	; 0x5e16
    8f8c:	13053006 	movwne	r3, #20486	; 0x5006
    8f90:	01050106 	tsteq	r5, r6, lsl #2
    8f94:	0607054b 	streq	r0, [r7], -fp, asr #10
    8f98:	05205f03 	streq	r5, [r0, #-3843]!	; 0xfffff0fd
    8f9c:	20010617 	andcs	r0, r1, r7, lsl r6
    8fa0:	2f060705 	svccs	0x00060705
    8fa4:	06170526 	ldreq	r0, [r7], -r6, lsr #10
    8fa8:	07052001 	streq	r2, [r5, -r1]
    8fac:	11052106 	tstne	r5, r6, lsl #2
    8fb0:	0c050106 	stfeqs	f0, [r5], {6}
    8fb4:	06070520 	streq	r0, [r7], -r0, lsr #10
    8fb8:	060a0530 			; <UNDEFINED> instruction: 0x060a0530
    8fbc:	06090501 	streq	r0, [r9], -r1, lsl #10
    8fc0:	061d053f 			; <UNDEFINED> instruction: 0x061d053f
    8fc4:	3c2c0501 	cfstr32cc	mvfx0, [ip], #-4
    8fc8:	204a0520 	subcs	r0, sl, r0, lsr #10
    8fcc:	052e1005 	streq	r1, [lr, #-5]!
    8fd0:	05360607 	ldreq	r0, [r6, #-1543]!	; 0xfffff9f9
    8fd4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    8fd8:	38052e32 	stmdacc	r5, {r1, r4, r5, r9, sl, fp, sp}
    8fdc:	200c052e 	andcs	r0, ip, lr, lsr #10
    8fe0:	21060705 	tstcs	r6, r5, lsl #14
    8fe4:	01061f05 	tsteq	r6, r5, lsl #30
    8fe8:	202e1705 	eorcs	r1, lr, r5, lsl #14
    8fec:	21060705 	tstcs	r6, r5, lsl #14
    8ff0:	051b0905 	ldreq	r0, [fp, #-2309]	; 0xfffff6fb
    8ff4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    8ff8:	05203c2c 	streq	r3, [r0, #-3116]!	; 0xfffff3d4
    8ffc:	1005204a 	andne	r2, r5, sl, asr #32
    9000:	0c022e2e 	stceq	14, cr2, [r2], {46}	; 0x2e
    9004:	97010100 	strls	r0, [r1, -r0, lsl #2]
    9008:	03000005 	movweq	r0, #5
    900c:	00024e00 	andeq	r4, r2, r0, lsl #28
    9010:	fb010200 	blx	4981a <_Min_Heap_Size+0x4901a>
    9014:	01000d0e 	tsteq	r0, lr, lsl #26
    9018:	00010101 	andeq	r0, r1, r1, lsl #2
    901c:	00010000 	andeq	r0, r1, r0
    9020:	2e2e0100 	sufcse	f0, f6, f0
    9024:	2f2e2e2f 	svccs	0x002e2e2f
    9028:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8f78 <_Min_Heap_Size+0x8778>
    902c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    9030:	2f736c69 	svccs	0x00736c69
    9034:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    9038:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    903c:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    9040:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    9044:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    9048:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    904c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    9050:	2f534953 	svccs	0x00534953
    9054:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    9058:	00656475 	rsbeq	r6, r5, r5, ror r4
    905c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    9060:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    9064:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    9068:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    906c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    9070:	615c6d61 	cmpvs	ip, r1, ror #26
    9074:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    9078:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    907c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    9080:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    9084:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9088:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    908c:	2e30312d 	rsfcssp	f3, f0, #5.0
    9090:	30322d33 	eorscc	r2, r2, r3, lsr sp
    9094:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    9098:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    909c:	6f6e2d6d 	svcvs	0x006e2d6d
    90a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    90a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    90a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    90ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    90b0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    90b4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    90b8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    90bc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    90c0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    90c4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    90c8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    90cc:	615c6d61 	cmpvs	ip, r1, ror #26
    90d0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    90d4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    90d8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    90dc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    90e0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    90e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    90e8:	2e30312d 	rsfcssp	f3, f0, #5.0
    90ec:	30322d33 	eorscc	r2, r2, r3, lsr sp
    90f0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    90f4:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    90f8:	63675c62 	cmnvs	r7, #25088	; 0x6200
    90fc:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    9100:	6f6e2d6d 	svcvs	0x006e2d6d
    9104:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9108:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    910c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    9110:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    9114:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    9118:	63006564 	movwvs	r6, #1380	; 0x564
    911c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    9120:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    9124:	6f646978 	svcvs	0x00646978
    9128:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    912c:	6172676f 	cmnvs	r2, pc, ror #14
    9130:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    9134:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    9138:	63675c63 	cmnvs	r7, #25344	; 0x6300
    913c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    9140:	6f6e2d6d 	svcvs	0x006e2d6d
    9144:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9148:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    914c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    9150:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    9154:	30312e31 	eorscc	r2, r1, r1, lsr lr
    9158:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    915c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9160:	61652d65 	cmnvs	r5, r5, ror #26
    9164:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    9168:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    916c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    9170:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    9174:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    9178:	2f2e2e2f 	svccs	0x002e2e2f
    917c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    9180:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    9184:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    9188:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    918c:	2f706d75 	svccs	0x00706d75
    9190:	00636e69 	rsbeq	r6, r3, r9, ror #28
    9194:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    9198:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    919c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    91a0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    91a4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    91a8:	615c6d61 	cmpvs	ip, r1, ror #26
    91ac:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    91b0:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    91b4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    91b8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    91bc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    91c0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    91c4:	2e30312d 	rsfcssp	f3, f0, #5.0
    91c8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    91cc:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    91d0:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    91d4:	6f6e2d6d 	svcvs	0x006e2d6d
    91d8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    91dc:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    91e0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    91e4:	00656475 	rsbeq	r6, r5, r5, ror r4
    91e8:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    91ec:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    91f0:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    91f4:	00010063 	andeq	r0, r1, r3, rrx
    91f8:	736d6300 	cmnvc	sp, #0, 6
    91fc:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    9200:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    9204:	00000200 	andeq	r0, r0, r0, lsl #4
    9208:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    920c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    9210:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    9214:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    9218:	00000300 	andeq	r0, r0, r0, lsl #6
    921c:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    9220:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    9224:	00000400 	andeq	r0, r0, r0, lsl #8
    9228:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    922c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    9230:	00050068 	andeq	r0, r5, r8, rrx
    9234:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    9238:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    923c:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    9240:	00060068 	andeq	r0, r6, r8, rrx
    9244:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    9248:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    924c:	00000700 	andeq	r0, r0, r0, lsl #14
    9250:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    9254:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    9258:	00003e6e 	andeq	r3, r0, lr, ror #28
    925c:	05000000 	streq	r0, [r0, #-0]
    9260:	02050038 	andeq	r0, r5, #56	; 0x38
    9264:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    9268:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
    926c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9270:	0e052106 	adfeqs	f2, f5, f6
    9274:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9278:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    927c:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
    9280:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9284:	03040200 	movweq	r0, #16896	; 0x4200
    9288:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    928c:	03040200 	movweq	r0, #16896	; 0x4200
    9290:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    9294:	03040200 	movweq	r0, #16896	; 0x4200
    9298:	003d052e 	eorseq	r0, sp, lr, lsr #10
    929c:	06030402 	streq	r0, [r3], -r2, lsl #8
    92a0:	003e0557 	eorseq	r0, lr, r7, asr r5
    92a4:	06030402 	streq	r0, [r3], -r2, lsl #8
    92a8:	00150501 	andseq	r0, r5, r1, lsl #10
    92ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    92b0:	00050520 	andeq	r0, r5, r0, lsr #10
    92b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    92b8:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    92bc:	2f010622 	svccs	0x00010622
    92c0:	2f060505 	svccs	0x00060505
    92c4:	13060105 	movwne	r0, #24837	; 0x6105
    92c8:	0002022e 	andeq	r0, r2, lr, lsr #4
    92cc:	33050101 	movwcc	r0, #20737	; 0x5101
    92d0:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    92d4:	03080017 	movweq	r0, #32791	; 0x8017
    92d8:	050100fe 	streq	r0, [r1, #-254]	; 0xffffff02
    92dc:	0e051605 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx5
    92e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    92e4:	32052f06 	andcc	r2, r5, #6, 30
    92e8:	0e050106 	adfeqs	f0, f5, f6
    92ec:	06050520 	streq	r0, [r5], -r0, lsr #10
    92f0:	0608052f 	streq	r0, [r8], -pc, lsr #10
    92f4:	00260501 	eoreq	r0, r6, r1, lsl #10
    92f8:	3c010402 	cfstrscc	mvf0, [r1], {2}
    92fc:	3f060505 	svccc	0x00060505
    9300:	01060805 	tsteq	r6, r5, lsl #16
    9304:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    9308:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    930c:	05203f0c 	streq	r3, [r0, #-3852]!	; 0xfffff0f4
    9310:	20201b10 	eorcs	r1, r0, r0, lsl fp
    9314:	20202320 	eorcs	r2, r0, r0, lsr #6
    9318:	02230105 	eoreq	r0, r3, #1073741825	; 0x40000001
    931c:	01010001 	tsteq	r1, r1
    9320:	05003605 	streq	r3, [r0, #-1541]	; 0xfffff9fb
    9324:	00180402 	andseq	r0, r8, r2, lsl #8
    9328:	018d0308 	orreq	r0, sp, r8, lsl #6
    932c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    9330:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    9334:	1330062e 	teqne	r0, #48234496	; 0x2e00000
    9338:	3e060105 	adfccs	f0, f6, f5
    933c:	00020220 	andeq	r0, r2, r0, lsr #4
    9340:	1c050101 	stfnes	f0, [r5], {1}
    9344:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
    9348:	03080018 	movweq	r0, #32792	; 0x8018
    934c:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    9350:	1a052105 	bne	15176c <_Min_Heap_Size+0x150f6c>
    9354:	18050106 	stmdane	r5, {r1, r2, r8}
    9358:	06050520 	streq	r0, [r5], -r0, lsr #10
    935c:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    9360:	20180501 	andscs	r0, r8, r1, lsl #10
    9364:	2f060505 	svccs	0x00060505
    9368:	0105684c 	tsteq	r5, ip, asr #16
    936c:	13024c06 	movwne	r4, #11270	; 0x2c06
    9370:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9374:	02050073 	andeq	r0, r5, #115	; 0x73
    9378:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
    937c:	0101d003 	tsteq	r1, r3
    9380:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9384:	13132f06 	tstne	r3, #6, 30
    9388:	01060805 	tsteq	r6, r5, lsl #16
    938c:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    9390:	05580104 	ldrbeq	r0, [r8, #-260]	; 0xfffffefc
    9394:	00230605 	eoreq	r0, r3, r5, lsl #12
    9398:	06010402 	streq	r0, [r1], -r2, lsl #8
    939c:	29090520 	stmdbcs	r9, {r5, r8, sl}
    93a0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    93a4:	36060204 	strcc	r0, [r6], -r4, lsl #4
    93a8:	01040200 	mrseq	r0, R12_usr
    93ac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    93b0:	05200603 	streq	r0, [r0, #-1539]!	; 0xfffff9fd
    93b4:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    93b8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    93bc:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    93c0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    93c4:	2f05200c 	svccs	0x0005200c
    93c8:	01040200 	mrseq	r0, R12_usr
    93cc:	0026052e 	eoreq	r0, r6, lr, lsr #10
    93d0:	20010402 	andcs	r0, r1, r2, lsl #8
    93d4:	32060905 	andcc	r0, r6, #81920	; 0x14000
    93d8:	01060c05 	tsteq	r6, r5, lsl #24
    93dc:	40060905 	andmi	r0, r6, r5, lsl #18
    93e0:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    93e4:	06090501 	streq	r0, [r9], -r1, lsl #10
    93e8:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
    93ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    93f0:	060e0524 	streq	r0, [lr], -r4, lsr #10
    93f4:	06090501 	streq	r0, [r9], -r1, lsl #10
    93f8:	060e053e 			; <UNDEFINED> instruction: 0x060e053e
    93fc:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    9400:	32060905 	andcc	r0, r6, #81920	; 0x14000
    9404:	01061705 	tsteq	r6, r5, lsl #14
    9408:	2f060905 	svccs	0x00060905
    940c:	01060f05 	tsteq	r6, r5, lsl #30
    9410:	21060905 	tstcs	r6, r5, lsl #18
    9414:	01060c05 	tsteq	r6, r5, lsl #24
    9418:	05330105 	ldreq	r0, [r3, #-261]!	; 0xfffffefb
    941c:	3c5a0310 	mrrccc	3, 1, r0, sl, cr0
    9420:	02583f3c 	subseq	r3, r8, #60, 30	; 0xf0
    9424:	01010006 	tsteq	r1, r6
    9428:	05004305 	streq	r4, [r0, #-773]	; 0xfffffcfb
    942c:	0018e802 	andseq	lr, r8, r2, lsl #16
    9430:	01950308 	orrseq	r0, r5, r8, lsl #6
    9434:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    9438:	133d0605 	teqne	sp, #5242880	; 0x500000
    943c:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    9440:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9444:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    9448:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    944c:	16050106 	strne	r0, [r5], -r6, lsl #2
    9450:	06050520 	streq	r0, [r5], -r0, lsr #10
    9454:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    9458:	20160501 	andscs	r0, r6, r1, lsl #10
    945c:	21060505 	tstcs	r6, r5, lsl #10
    9460:	01061805 	tsteq	r6, r5, lsl #16
    9464:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    9468:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    946c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9470:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    9474:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    9478:	16050106 	strne	r0, [r5], -r6, lsl #2
    947c:	06050520 	streq	r0, [r5], -r0, lsr #10
    9480:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    9484:	20160501 	andscs	r0, r6, r1, lsl #10
    9488:	21060505 	tstcs	r6, r5, lsl #10
    948c:	01061805 	tsteq	r6, r5, lsl #16
    9490:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    9494:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    9498:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    949c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    94a0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    94a4:	16050106 	strne	r0, [r5], -r6, lsl #2
    94a8:	06050520 	streq	r0, [r5], -r0, lsr #10
    94ac:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    94b0:	20160501 	andscs	r0, r6, r1, lsl #10
    94b4:	21060505 	tstcs	r6, r5, lsl #10
    94b8:	01061805 	tsteq	r6, r5, lsl #16
    94bc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    94c0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    94c4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    94c8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    94cc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    94d0:	16050106 	strne	r0, [r5], -r6, lsl #2
    94d4:	06050520 	streq	r0, [r5], -r0, lsr #10
    94d8:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    94dc:	20160501 	andscs	r0, r6, r1, lsl #10
    94e0:	21060505 	tstcs	r6, r5, lsl #10
    94e4:	01061805 	tsteq	r6, r5, lsl #16
    94e8:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    94ec:	06220605 	strteq	r0, [r2], -r5, lsl #12
    94f0:	3d2f062e 	stccc	6, cr0, [pc, #-184]!	; 9440 <_Min_Heap_Size+0x8c40>
    94f4:	4b4b4b3d 	blmi	12dc1f0 <_Min_Heap_Size+0x12db9f0>
    94f8:	4b4b4b4b 	blmi	12dc22c <_Min_Heap_Size+0x12dba2c>
    94fc:	4b4b4b4b 	blmi	12dc230 <_Min_Heap_Size+0x12dba30>
    9500:	4b4b4b4b 	blmi	12dc234 <_Min_Heap_Size+0x12dba34>
    9504:	133e3d4b 	teqne	lr, #4800	; 0x12c0
    9508:	01060d05 	tsteq	r6, r5, lsl #26
    950c:	86060505 	strhi	r0, [r6], -r5, lsl #10
    9510:	2f062006 	svccs	0x00062006
    9514:	0610054b 	ldreq	r0, [r0], -fp, asr #10
    9518:	20050501 	andcs	r0, r5, r1, lsl #10
    951c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    9520:	21060304 	tstcs	r6, r4, lsl #6
    9524:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    9528:	05650304 	strbeq	r0, [r5, #-772]!	; 0xfffffcfc
    952c:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    9530:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    9534:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    9538:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    953c:	04020005 	streq	r0, [r2], #-5
    9540:	06010601 	streq	r0, [r1], -r1, lsl #12
    9544:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    9548:	0e053d01 	cdpeq	13, 0, cr3, cr5, cr1, {0}
    954c:	01040200 	mrseq	r0, R12_usr
    9550:	000b0501 	andeq	r0, fp, r1, lsl #10
    9554:	01010402 	tsteq	r1, r2, lsl #8
    9558:	01003102 	tsteq	r0, r2, lsl #2
    955c:	002e0501 	eoreq	r0, lr, r1, lsl #10
    9560:	00000205 	andeq	r0, r0, r5, lsl #4
    9564:	fc030000 	stc2	0, cr0, [r3], {-0}
    9568:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    956c:	05020413 	streq	r0, [r2, #-1043]	; 0xfffffbed
    9570:	06e5031f 	usateq	r0, #5, pc, lsl #6	; <UNPREDICTABLE>
    9574:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    9578:	01062f14 	tsteq	r6, r4, lsl pc
    957c:	01050104 	tsteq	r5, r4, lsl #2
    9580:	01799703 	cmneq	r9, r3, lsl #14
    9584:	01000102 	tsteq	r0, r2, lsl #2
    9588:	002e0501 	eoreq	r0, lr, r1, lsl #10
    958c:	00000205 	andeq	r0, r0, r5, lsl #4
    9590:	80030000 	andhi	r0, r3, r0
    9594:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    9598:	06010513 			; <UNDEFINED> instruction: 0x06010513
    959c:	00040213 	andeq	r0, r4, r3, lsl r2
    95a0:	010b0101 	tsteq	fp, r1, lsl #2
    95a4:	00030000 	andeq	r0, r3, r0
    95a8:	000000ba 	strheq	r0, [r0], -sl
    95ac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    95b0:	0101000d 	tsteq	r1, sp
    95b4:	00000101 	andeq	r0, r0, r1, lsl #2
    95b8:	00000100 	andeq	r0, r0, r0, lsl #2
    95bc:	2f2e2e01 	svccs	0x002e2e01
    95c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    95c4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    95c8:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    95cc:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    95d0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    95d4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    95d8:	70632f70 	rsbvc	r2, r3, r0, ror pc
    95dc:	6f632f75 	svcvs	0x00632f75
    95e0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    95e4:	00346d2d 	eorseq	r6, r4, sp, lsr #26
    95e8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    95ec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    95f0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    95f4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    95f8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    95fc:	615c6d61 	cmpvs	ip, r1, ror #26
    9600:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    9604:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    9608:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    960c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    9610:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9614:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9618:	2e30312d 	rsfcssp	f3, f0, #5.0
    961c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    9620:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    9624:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    9628:	6f6e2d6d 	svcvs	0x006e2d6d
    962c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9630:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    9634:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    9638:	00656475 	rsbeq	r6, r5, r5, ror r4
    963c:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    9640:	682d746c 	stmdavs	sp!, {r2, r3, r5, r6, sl, ip, sp, lr}
    9644:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    9648:	00000100 	andeq	r0, r0, r0, lsl #2
    964c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    9650:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    9654:	00003e6e 	andeq	r3, r0, lr, ror #28
    9658:	74730000 	ldrbtvc	r0, [r3], #-0
    965c:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    9660:	00020068 	andeq	r0, r2, r8, rrx
    9664:	35050000 	strcc	r0, [r5, #-0]
    9668:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
    966c:	0308001a 	movweq	r0, #32794	; 0x801a
    9670:	0106010e 	tsteq	r6, lr, lsl #2
    9674:	2f060505 	svccs	0x00060505
    9678:	2f062006 	svccs	0x00062006
    967c:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    9680:	06090501 	streq	r0, [r9], -r1, lsl #10
    9684:	4005053d 	andmi	r0, r5, sp, lsr r5
    9688:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    968c:	06090501 	streq	r0, [r9], -r1, lsl #10
    9690:	4005053d 	andmi	r0, r5, sp, lsr r5
    9694:	0608053d 			; <UNDEFINED> instruction: 0x0608053d
    9698:	06090501 	streq	r0, [r9], -r1, lsl #10
    969c:	4005053d 	andmi	r0, r5, sp, lsr r5
    96a0:	3d060105 	stfccs	f0, [r6, #-20]	; 0xffffffec
    96a4:	03060905 	movweq	r0, #26885	; 0x6905
    96a8:	50502071 	subspl	r2, r0, r1, ror r0
    96ac:	01001802 	tsteq	r0, r2, lsl #16
    96b0:	00007c01 	andeq	r7, r0, r1, lsl #24
    96b4:	36000300 	strcc	r0, [r0], -r0, lsl #6
    96b8:	02000000 	andeq	r0, r0, #0
    96bc:	0d0efb01 	vstreq	d15, [lr, #-4]
    96c0:	01010100 	mrseq	r0, (UNDEF: 17)
    96c4:	00000001 	andeq	r0, r0, r1
    96c8:	01000001 	tsteq	r0, r1
    96cc:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    96d0:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    96d4:	73000070 	movwvc	r0, #112	; 0x70
    96d8:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    96dc:	735f7075 	cmpvc	pc, #117	; 0x75
    96e0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    96e4:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    96e8:	732e7878 			; <UNDEFINED> instruction: 0x732e7878
    96ec:	00000100 	andeq	r0, r0, r0, lsl #2
    96f0:	02050000 	andeq	r0, r5, #0
    96f4:	08001af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip}
    96f8:	31013c03 	tstcc	r1, r3, lsl #24
    96fc:	21212131 			; <UNDEFINED> instruction: 0x21212131
    9700:	21212321 			; <UNDEFINED> instruction: 0x21212321
    9704:	23212123 			; <UNDEFINED> instruction: 0x23212123
    9708:	23212121 			; <UNDEFINED> instruction: 0x23212121
    970c:	23212321 			; <UNDEFINED> instruction: 0x23212321
    9710:	58032f30 	stmdapl	r3, {r4, r5, r8, r9, sl, fp, sp}
    9714:	2f2f3420 	svccs	0x002f3420
    9718:	2f2e0f03 	svccs	0x002e0f03
    971c:	01000202 	tsteq	r0, r2, lsl #4
    9720:	02050001 	andeq	r0, r5, #1
    9724:	08001b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, ip}
    9728:	0100f103 	tsteq	r0, r3, lsl #2	; <UNPREDICTABLE>
    972c:	01000102 	tsteq	r0, r2, lsl #2
    9730:	00007e01 	andeq	r7, r0, r1, lsl #28
    9734:	4d000300 	stcmi	3, cr0, [r0, #-0]
    9738:	02000000 	andeq	r0, r0, #0
    973c:	0d0efb01 	vstreq	d15, [lr, #-4]
    9740:	01010100 	mrseq	r0, (UNDEF: 17)
    9744:	00000001 	andeq	r0, r0, r1
    9748:	01000001 	tsteq	r0, r1
    974c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    9750:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    9754:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    9758:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    975c:	61662f73 	smcvs	25331	; 0x62f3
    9760:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    9764:	706d7564 	rsbvc	r7, sp, r4, ror #10
    9768:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    976c:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    9770:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    9774:	0000346d 	andeq	r3, r0, sp, ror #8
    9778:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    977c:	63672d74 	cmnvs	r7, #116, 26	; 0x1d00
    9780:	00732e63 	rsbseq	r2, r3, r3, ror #28
    9784:	00000001 	andeq	r0, r0, r1
    9788:	d0020500 	andle	r0, r2, r0, lsl #10
    978c:	03080001 	movweq	r0, #32769	; 0x8001
    9790:	21210119 			; <UNDEFINED> instruction: 0x21210119
    9794:	2f222121 	svccs	0x00222121
    9798:	21212f22 			; <UNDEFINED> instruction: 0x21212f22
    979c:	2f302321 	svccs	0x00302321
    97a0:	21302f21 	teqcs	r0, r1, lsr #30
    97a4:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    97a8:	03302e66 	teqeq	r0, #1632	; 0x660
    97ac:	02022e15 	andeq	r2, r2, #336	; 0x150
    97b0:	Address 0x000097b0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
       4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
  errno = ENOMEM;
       8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
}
       c:	68730074 	ldmdavs	r3!, {r2, r4, r5, r6}^
      10:	2074726f 	rsbscs	r7, r4, pc, ror #4
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      1c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	73655f00 	cmnvc	r5, #0, 30
      24:	6b636174 	blvs	18d85fc <_Min_Heap_Size+0x18d7dfc>
}
      28:	65727000 	ldrbvs	r7, [r2, #-0]!
      2c:	65685f76 	strbvs	r5, [r8, #-3958]!	; 0xfffff08a
      30:	655f7061 	ldrbvs	r7, [pc, #-97]	; ffffffd7 <_estack+0xdfffed9f>
    if (status != HAL_OK)
      34:	6d00646e 	cfstrsvs	mvf6, [r0, #-440]	; 0xfffffe48
      uwTickFreq = prevTickFreq;
      38:	685f7861 	ldmdavs	pc, {r0, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
      3c:	00706165 	rsbseq	r6, r0, r5, ror #2
      40:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
      44:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
      if (pllsource != 0)
      48:	4300745f 	movwmi	r7, #1119	; 0x45f
      4c:	73555c3a 	cmpvc	r5, #14848	; 0x3a00
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
      54:	6f646978 	svcvs	0x00646978
      58:	6f635c6e 	svcvs	0x00635c6e
      5c:	675c6564 	ldrbvs	r6, [ip, -r4, ror #10]
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	75687469 	strbvc	r7, [r8, #-1129]!	; 0xfffffb97
      64:	65715c62 	ldrbvs	r5, [r1, #-3170]!	; 0xfffff39e
      68:	732d756d 			; <UNDEFINED> instruction: 0x732d756d
      SystemCoreClock = pllvco/pllp;
      6c:	6c756d69 	ldclvs	13, cr6, [r5], #-420	; 0xfffffe5c
      70:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
      break;
      74:	616f625c 	cmnvs	pc, ip, asr r2	; <UNPREDICTABLE>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	5c736472 	cfldrdpl	mvd6, [r3], #-456	; 0xfffffe38
      7c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
      80:	30346632 	eorscc	r6, r4, r2, lsr r6
      84:	5c677235 	sfmpl	f7, 2, [r7], #-212	; 0xffffff2c
      88:	00434347 	subeq	r4, r3, r7, asr #6
      8c:	64727470 	ldrbtvs	r7, [r2], #-1136	; 0xfffffb90
      90:	5f666669 	svcpl	0x00666669
      94:	6f6c0074 	svcvs	0x006c0074
      98:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      9c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      a0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      a8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      ac:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff1b4 <_estack+0xdfffdf7c>
      b0:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	2e00745f 	cfmvsrcs	mvf0, r7
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      bc:	6163696c 	cmnvs	r3, ip, ror #18
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      c4:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
      c8:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	4d5f0063 	ldclmi	0, cr0, [pc, #-396]	; ffffff48 <_estack+0xdfffed10>
      d0:	535f6e69 	cmppl	pc, #1680	; 0x690
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	6b636174 	blvs	18d86ac <_Min_Heap_Size+0x18d7eac>
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7a69535f 	bvc	1a54e5c <_Min_Heap_Size+0x1a5465c>
      dc:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
      e0:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
    if (huart->hdmarx != NULL)
      e4:	63206465 			; <UNDEFINED> instruction: 0x63206465
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	00726168 	rsbseq	r6, r2, r8, ror #2
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	72636e69 	rsbvc	r6, r3, #1680	; 0x690
      f0:	735f5f00 	cmpvc	pc, #0, 30
    huart->TxXferCount = 0x00U;
      f4:	5f6b7262 	svcpl	0x006b7262
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	70616568 	rsbvc	r6, r1, r8, ror #10
    huart->gState  = HAL_UART_STATE_READY;
      fc:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    huart->RxState = HAL_UART_STATE_READY;
     100:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff208 <_estack+0xdfffdfd0>
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	6f6e7272 	svcvs	0x006e7272
    HAL_UART_AbortCpltCallback(huart);
     108:	62735f00 	rsbsvs	r5, r3, #0, 30
     10c:	6c006b72 			; <UNDEFINED> instruction: 0x6c006b72
  uint32_t AbortCplt = 0x01U;
     110:	20676e6f 	rsbcs	r6, r7, pc, ror #28
  if (AbortCplt == 0x01U)
     114:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
}
     118:	7300656c 	movwvc	r6, #1388	; 0x56c
     11c:	6b636174 	blvs	18d86f4 <_Min_Heap_Size+0x18d7ef4>
     120:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
     124:	73007469 	movwvc	r7, #1129	; 0x469
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     12c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     130:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     134:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     138:	2e303120 	rsfcssp	f3, f0, f0
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	20312e33 	eorscs	r2, r1, r3, lsr lr
     140:	31323032 	teqcc	r2, r2, lsr r0
     144:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     14c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
     154:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
     15c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	2d20346d 	cfstrscs	mvf3, [r0, #-436]!	; 0xfffffe4c
     164:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
     168:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
     16c:	7570666d 	ldrbvc	r6, [r0, #-1645]!	; 0xfffff993
     170:	7670663d 			; <UNDEFINED> instruction: 0x7670663d
}
     174:	70732d34 	rsbsvc	r2, r3, r4, lsr sp
     178:	3631642d 	ldrtcc	r6, [r1], -sp, lsr #8
     17c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     180:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
}
     184:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
     18c:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     194:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     198:	2d653776 	stclcs	7, cr3, [r5, #-472]!	; 0xfffffe28
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	70662b6d 	rsbvc	r2, r6, sp, ror #22
     1a0:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
     1a8:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
     1ac:	4f2d2032 	svcmi	0x002d2032
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	662d2067 	strtvs	r2, [sp], -r7, rrx
     1b4:	61746164 	cmnvs	r4, r4, ror #2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     1bc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1c0:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     1c8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     1d0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     1d4:	74730073 	ldrbtvc	r0, [r3], #-115	; 0xffffff8d
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	6564725f 	strbvs	r7, [r4, #-607]!	; 0xfffffda1
     1dc:	6c630076 	stclvs	0, cr0, [r3], #-472	; 0xfffffe28
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	5f6b636f 	svcpl	0x006b636f
     1e4:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
     1e8:	6f726976 	svcvs	0x00726976
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	6c5f006e 	mrrcvs	0, 6, r0, pc, cr14	; <UNPREDICTABLE>
     1f0:	6b656573 	blvs	19597c4 <_Min_Heap_Size+0x1958fc4>
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	736d7400 	cmnvc	sp, #0, 8
     1f8:	7475635f 	ldrbtvc	r6, [r5], #-863	; 0xfffffca1
     1fc:	00656d69 	rsbeq	r6, r5, r9, ror #26
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00657663 	rsbeq	r7, r5, r3, ror #12
     208:	735f7674 	cmpvc	pc, #116, 12	; 0x7400000
     20c:	5f006365 	svcpl	0x00006365
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     214:	5f747300 	svcpl	0x00747300
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	6d697463 	cfstrdvs	mvd7, [r9, #-396]!	; 0xfffffe74
     21c:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffff324 <_estack+0xdfffe0ec>
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	5f00766e 	svcpl	0x0000766e
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     228:	72775f00 	rsbsvc	r5, r7, #0, 30
  tmp = hdma->Instance->FCR;
     22c:	00657469 	rsbeq	r7, r5, r9, ror #8
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	645f7473 	ldrbvs	r7, [pc], #-1139	; 238 <_Min_Heap_Size-0x5c8>
  tmp |= hdma->Init.FIFOMode;
     234:	5f007665 	svcpl	0x00007665
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	61747366 	cmnvs	r4, r6, ror #6
    tmp |= hdma->Init.FIFOThreshold;
     23c:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	5f00656c 	svcpl	0x0000656c
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	6c6c696b 			; <UNDEFINED> instruction: 0x6c6c696b
     248:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
  hdma->Instance->FCR = tmp;
     24c:	00745f65 	rsbseq	r5, r4, r5, ror #30
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	656c5f74 	strbvs	r5, [ip, #-3956]!	; 0xfffff08c
     258:	36747361 	ldrbtcc	r7, [r4], -r1, ror #6
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00745f34 	rsbseq	r5, r4, r4, lsr pc
  hdma->State = HAL_DMA_STATE_READY;
     260:	625f7473 	subsvs	r7, pc, #1929379840	; 0x73000000
     264:	69736b6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
  return HAL_OK;
     268:	6900657a 	stmdbvs	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
     26c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     270:	73696c61 	cmnvc	r9, #24832	; 0x6100
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6f6d5f65 	svcvs	0x006d5f65
     278:	6f74696e 	svcvs	0x0074696e
     27c:	61685f72 	smcvs	34290	; 0x85f2
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
        hdma->State = HAL_DMA_STATE_READY;
     284:	74730073 	ldrbtvc	r0, [r3], #-115	; 0xffffff8d
        return HAL_ERROR; 
     288:	6469675f 	strbtvs	r6, [r9], #-1887	; 0xfffff8a1
    return HAL_ERROR;
     28c:	6d5f5f00 	ldclvs	15, cr5, [pc, #-0]	; 294 <_Min_Heap_Size-0x56c>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	5f65646f 	svcpl	0x0065646f
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	2f2e0074 	svccs	0x002e0074
     298:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
      tickstart = HAL_GetTick();
     29c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	2f6e6f69 	svccs	0x006e6f69
     2a4:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
     2a8:	736c6c61 	cmnvc	ip, #24832	; 0x6100
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
     2b0:	635f736d 	cmpvs	pc, #-1275068415	; 0xb4000001
     2b4:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
          return HAL_TIMEOUT;
     2b8:	745f0065 	ldrbvc	r0, [pc], #-101	; 2c0 <_Min_Heap_Size-0x540>
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	73656d69 	cmnvc	r5, #6720	; 0x1a40
     2c0:	6e5f5f00 	cdpvs	15, 5, cr5, cr15, cr0, {0}
     2c4:	6b6e696c 	blvs	1b9a87c <_Min_Heap_Size+0x1b9a07c>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	6e00745f 	cfmvsrvs	mvf0, r7
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	00656d61 	rsbeq	r6, r5, r1, ror #26
     2d0:	6961775f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     2d4:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
      tickstart = HAL_GetTick();
     2d8:	6f6e695f 	svcvs	0x006e695f
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
     2e0:	5f006461 	svcpl	0x00006461
     2e4:	5f6f695f 	svcpl	0x006f695f
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	63746567 	cmnvs	r4, #432013312	; 0x19c00000
     2ec:	00726168 	rsbseq	r6, r2, r8, ror #2
          return HAL_TIMEOUT;
     2f0:	6e5f7674 	mrcvs	6, 2, r7, cr15, cr4, {3}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00636573 	rsbeq	r6, r3, r3, ror r5
     2f8:	6e5f7473 	mrcvs	4, 2, r7, cr15, cr3, {3}
     2fc:	6b6e696c 	blvs	1b9a8b4 <_Min_Heap_Size+0x1b9a0b4>
     300:	706f5f00 	rsbvc	r5, pc, r0, lsl #30
     304:	61006e65 	tstvs	r0, r5, ror #28
     308:	00766772 	rsbseq	r6, r6, r2, ror r7
     30c:	6c625f5f 	stclvs	15, cr5, [r2], #-380	; 0xfffffe84
     310:	7a69736b 	bvc	1a5d0c4 <_Min_Heap_Size+0x1a5c8c4>
      tickstart = HAL_GetTick();
     314:	00745f65 	rsbseq	r5, r4, r5, ror #30
     318:	615f7473 	cmpvs	pc, r3, ror r4	; <UNPREDICTABLE>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	006d6974 	rsbeq	r6, sp, r4, ror r9
     320:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	635f006b 	cmpvs	pc, #107	; 0x6b
     328:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
     32c:	5f747300 	svcpl	0x00747300
     330:	636f6c62 	cmnvs	pc, #25088	; 0x6200
          return HAL_TIMEOUT;
     334:	5f00736b 	svcpl	0x0000736b
    if(pwrclkchanged == SET)
     338:	74617369 	strbtvc	r7, [r1], #-873	; 0xfffffc97
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	73007974 	movwvc	r7, #2420	; 0x974
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	746d5f74 	strbtvc	r5, [sp], #-3956	; 0xfffff08c
     344:	5f006d69 	svcpl	0x00006d69
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	6f6e695f 	svcvs	0x006e695f
     34c:	7400745f 	strvc	r7, [r0], #-1119	; 0xfffffba1
     350:	735f736d 	cmpvc	pc, #-1275068415	; 0xb4000001
     354:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	5f747300 	svcpl	0x00747300
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	00646975 	rsbeq	r6, r4, r5, ror r9
     360:	735f7473 	cmpvc	pc, #1929379840	; 0x73000000
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	00657a69 	rsbeq	r7, r5, r9, ror #20
     368:	735f7473 	cmpvc	pc, #1929379840	; 0x73000000
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0xfffffe90
     370:	5f5f0034 	svcpl	0x005f0034
     374:	705f6f69 	subsvc	r6, pc, r9, ror #30
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	68637475 	stmdavs	r3!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     37c:	44007261 	strmi	r7, [r0], #-609	; 0xfffffd9f
     380:	49617461 	stmdbmi	r1!, {r0, r5, r6, sl, ip, sp, lr}^
     384:	5f007864 	svcpl	0x00007864
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	6b726f66 	blvs	1c9c128 <_Min_Heap_Size+0x1c9b928>
     38c:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
        __HAL_RCC_PLL_DISABLE();
     390:	64697074 	strbtvs	r7, [r9], #-116	; 0xffffff8c
     394:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 39c <_Min_Heap_Size-0x464>
        tickstart = HAL_GetTick();
     398:	745f7665 	ldrbvc	r7, [pc], #-1637	; 3a0 <_Min_Heap_Size-0x460>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	6f5f5f00 	svcvs	0x005f5f00
     3a0:	745f6666 	ldrbvc	r6, [pc], #-1638	; 3a8 <_Min_Heap_Size-0x458>
     3a4:	74617000 	strbtvc	r7, [r1], #-0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	69740068 	ldmdbvs	r4!, {r3, r5, r6}^
     3ac:	7073656d 	rsbsvc	r6, r3, sp, ror #10
            return HAL_TIMEOUT;
     3b0:	5f006365 	svcpl	0x00006365
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
     3b8:	7300745f 	movwvc	r7, #1119	; 0x45f
     3bc:	6f6d5f74 	svcvs	0x006d5f74
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	74006564 	strvc	r6, [r0], #-1380	; 0xfffffa9c
     3c4:	755f736d 	ldrbvc	r7, [pc, #-877]	; 5f <_Min_Heap_Size-0x7a1>
     3c8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     3d0:	6b6e696c 	blvs	1b9a988 <_Min_Heap_Size+0x1b9a188>
     3d4:	625f5f00 	subsvs	r5, pc, #0, 30
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	6e636b6c 	vnmulvs.f64	d22, d3, d28
     3dc:	00745f74 	rsbseq	r5, r4, r4, ror pc
     3e0:	69675f5f 	stmdbvs	r7!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00745f64 	rsbseq	r5, r4, r4, ror #30
     3e8:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     3ec:	4d006674 	stcmi	6, cr6, [r0, #-464]	; 0xfffffe30
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	53555f58 	cmppl	r5, #88, 30	; 0x160
     3f4:	31545241 	cmpcc	r4, r1, asr #4
     3f8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
     400:	41007469 	tstmi	r0, r9, ror #8
     404:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     40c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     410:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     414:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
     418:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
     41c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     420:	67006665 	strvs	r6, [r0, -r5, ror #12]
     424:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
        __HAL_RCC_PLL_ENABLE();
     428:	304d0065 	subcc	r0, sp, r5, rrx
     42c:	44005241 	strmi	r5, [r0], #-577	; 0xfffffdbf
        tickstart = HAL_GetTick();
     430:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     438:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     43c:	41006665 	tstmi	r0, r5, ror #12
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	43314250 	teqmi	r1, #80, 4
     444:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
            return HAL_TIMEOUT;
     448:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
  return HAL_OK;
     44c:	61660072 	smcvs	24578	; 0x6002
        __HAL_RCC_PLL_DISABLE();
     450:	5f746c75 	svcpl	0x00746c75
     454:	706d7564 	rsbvc	r7, sp, r4, ror #10
        tickstart = HAL_GetTick();
     458:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	4c500074 	mrrcmi	0, 7, r0, r0, cr4	; <UNPREDICTABLE>
     460:	6174534c 	cmnvs	r4, ip, asr #6
     464:	50006574 	andpl	r6, r0, r4, ror r5
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	004d4c4c 	subeq	r4, sp, ip, asr #24
     46c:	4e4c4c50 	mcrmi	12, 2, r4, cr12, cr0, {2}
            return HAL_TIMEOUT;
     470:	4c4c5000 	marmi	acc0, r5, ip
  return HAL_OK;
     474:	4c500050 	mrrcmi	0, 5, r0, r0, cr0	; <UNPREDICTABLE>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	5f00514c 	svcpl	0x0000514c
        pll_config = RCC->PLLCFGR;
     47c:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
     484:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00746573 	rsbseq	r6, r4, r3, ror r5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	78525f54 	ldmdavc	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     49c:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     4a0:	70795474 	rsbsvc	r5, r9, r4, ror r4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	70795465 	rsbsvc	r5, r9, r5, ror #8
     4a8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	45534c00 	ldrbmi	r4, [r3, #-3072]	; 0xfffff400
     4b0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	43520065 	cmpmi	r2, #101	; 0x65
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	734f5f43 	movtvc	r5, #65347	; 0xff43
     4bc:	696e4963 	stmdbvs	lr!, {r0, r1, r5, r6, r8, fp, lr}^
  return HAL_OK;
     4c0:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
}
     4c4:	00746375 	rsbseq	r6, r4, r5, ror r3
        return HAL_ERROR;
     4c8:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
        return HAL_ERROR;
     4cc:	65740044 	ldrbvs	r0, [r4, #-68]!	; 0xffffffbc
}
     4d0:	00337473 	eorseq	r7, r3, r3, ror r4
        return HAL_ERROR;
     4d4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
          return HAL_ERROR;
     4d8:	65740034 	ldrbvs	r0, [r4, #-52]!	; 0xffffffcc
     4dc:	00357473 	eorseq	r7, r5, r3, ror r4
     4e0:	5f4c4148 	svcpl	0x004c4148
     4e4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     4e8:	6172545f 	cmnvs	r2, pc, asr r4
     4ec:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
     4f0:	48410074 	stmdami	r1, {r2, r4, r5, r6}^
     4f4:	504c3142 	subpl	r3, ip, r2, asr #2
     4f8:	00524e45 	subseq	r4, r2, r5, asr #28
     4fc:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
     500:	706d6153 	rsbvc	r6, sp, r3, asr r1
     504:	676e696c 	strbvs	r6, [lr, -ip, ror #18]!
     508:	58785400 	ldmdapl	r8!, {sl, ip, lr}^
     50c:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     510:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     514:	41534900 	cmpmi	r3, r0, lsl #18
     518:	43520052 	cmpmi	r2, #82	; 0x52
     51c:	734f5f43 	movtvc	r5, #65347	; 0xff43
     520:	696e4963 	stmdbvs	lr!, {r0, r1, r5, r6, r8, fp, lr}^
     524:	70795474 	rsbsvc	r5, r9, r4, ror r4
     528:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     52c:	42484100 	submi	r4, r8, #0, 2
     530:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     534:	41480052 	qdaddmi	r0, r2, r8
     538:	41555f4c 	cmpmi	r5, ip, asr #30
     53c:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     540:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     544:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     548:	58545f59 	ldmdapl	r4, {r0, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     54c:	0058525f 	subseq	r5, r8, pc, asr r2
     550:	52505447 	subspl	r5, r0, #1191182336	; 0x47000000
     554:	75614200 	strbvc	r4, [r1, #-512]!	; 0xfffffe00
     558:	74615264 	strbtvc	r5, [r1], #-612	; 0xfffffd9c
     55c:	66580065 	ldrbvs	r0, [r8], -r5, rrx
     560:	314d7265 	cmpcc	sp, r5, ror #4
     564:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     568:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     56c:	6b636162 	blvs	18d8afc <_Min_Heap_Size+0x18d82fc>
     570:	52575000 	subspl	r5, r7, #0
     574:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     578:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     57c:	706d7400 	rsbvc	r7, sp, r0, lsl #8
     580:	00676572 	rsbeq	r6, r7, r2, ror r5
     584:	5f4c4148 	svcpl	0x004c4148
     588:	6b636f4c 	blvs	18dc2c0 <_Min_Heap_Size+0x18dbac0>
     58c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     590:	00666544 	rsbeq	r6, r6, r4, asr #10
     594:	5f434352 	svcpl	0x00434352
     598:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     59c:	00666544 	rsbeq	r6, r6, r4, asr #10
     5a0:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     5a4:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
     5a8:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     5ac:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     5b0:	6b636162 	blvs	18d8b40 <_Min_Heap_Size+0x18d8340>
     5b4:	78547000 	ldmdavc	r4, {ip, sp, lr}^
     5b8:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     5bc:	00727450 	rsbseq	r7, r2, r0, asr r4
     5c0:	32425041 	subcc	r5, r2, #65	; 0x41
     5c4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     5c8:	72655000 	rsbvc	r5, r5, #0
     5cc:	49687069 	stmdbmi	r8!, {r0, r3, r5, r6, ip, sp, lr}^
     5d0:	4c00636e 	stcmi	3, cr6, [r0], {110}	; 0x6e
     5d4:	74534953 	ldrbvc	r4, [r3], #-2387	; 0xfffff6ad
     5d8:	00657461 	rsbeq	r7, r5, r1, ror #8
     5dc:	426d654d 	rsbmi	r6, sp, #322961408	; 0x13400000
     5e0:	74737275 	ldrbtvc	r7, [r3], #-629	; 0xfffffd8b
     5e4:	625f5f00 	subsvs	r5, pc, #0, 30
     5e8:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     5ec:	705f6e69 	subsvc	r6, pc, r9, ror #28
     5f0:	00737475 	rsbseq	r7, r3, r5, ror r4
     5f4:	5f4c4148 	svcpl	0x004c4148
     5f8:	5f414d44 	svcpl	0x00414d44
     5fc:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     600:	52455f45 	subpl	r5, r5, #276	; 0x114
     604:	00524f52 	subseq	r4, r2, r2, asr pc
     608:	53495348 	movtpl	r5, #37704	; 0x9348
     60c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     610:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     614:	755f746c 	ldrbvc	r7, [pc, #-1132]	; 1b0 <_Min_Heap_Size-0x650>
     618:	696c616e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
     61c:	745f6e67 	ldrbvc	r6, [pc], #-3687	; 624 <_Min_Heap_Size-0x1dc>
     620:	67676972 			; <UNDEFINED> instruction: 0x67676972
     624:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     628:	61434953 	cmpvs	r3, r3, asr r9
     62c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
     630:	6f697461 	svcvs	0x00697461
     634:	6c61566e 	stclvs	6, cr5, [r1], #-440	; 0xfffffe48
     638:	6d006575 	cfstr32vs	mvfx6, [r0, #-468]	; 0xfffffe2c
     63c:	006e6961 	rsbeq	r6, lr, r1, ror #18
     640:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     644:	73746942 	cmnvc	r4, #1081344	; 0x108000
     648:	4c4c5000 	marmi	acc0, r5, ip
     64c:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     650:	72745300 	rsbsvc	r5, r4, #0, 6
     654:	426d6165 	rsbmi	r6, sp, #1073741849	; 0x40000019
     658:	41657361 	cmnmi	r5, r1, ror #6
     65c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
     660:	42007373 	andmi	r7, r0, #-872415231	; 0xcc000001
     664:	00524146 	subseq	r4, r2, r6, asr #2
     668:	65726150 	ldrbvs	r6, [r2, #-336]!	; 0xfffffeb0
     66c:	4c00746e 	cfstrsmi	mvf7, [r0], {110}	; 0x6e
     670:	006b636f 	rsbeq	r6, fp, pc, ror #6
     674:	5f4c4148 	svcpl	0x004c4148
     678:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     67c:	4154535f 	cmpmi	r4, pc, asr r3
     680:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
     684:	59444145 	stmdbpl	r4, {r0, r2, r6, r8, lr}^
     688:	72694400 	rsbvc	r4, r9, #0, 8
     68c:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     690:	53006e6f 	movwpl	r6, #3695	; 0xe6f
     694:	545f4243 	ldrbpl	r4, [pc], #-579	; 69c <_Min_Heap_Size-0x164>
     698:	00657079 	rsbeq	r7, r5, r9, ror r0
     69c:	616d6468 	cmnvs	sp, r8, ror #8
     6a0:	52007872 	andpl	r7, r0, #7471104	; 0x720000
     6a4:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
     6a8:	6e496b6c 	vmlsvs.f64	d22, d9, d28
     6ac:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
     6b0:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
     6b4:	45534800 	ldrbmi	r4, [r3, #-2048]	; 0xfffff800
     6b8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     6bc:	41480065 	cmpmi	r8, r5, rrx
     6c0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     6c4:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     6c8:	5f455441 	svcpl	0x00455441
     6cc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     6d0:	696c0054 	stmdbvs	ip!, {r2, r4, r6}^
     6d4:	4800656e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, sl, sp, lr}
     6d8:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 6e0 <_Min_Heap_Size-0x120>
     6dc:	4f454d49 	svcmi	0x00454d49
     6e0:	68005455 	stmdavs	r0, {r0, r2, r4, r6, sl, ip, lr}
     6e4:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     6e8:	74530031 	ldrbvc	r0, [r3], #-49	; 0xffffffcf
     6ec:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     6f0:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
     6f4:	41480078 	hvcmi	32776	; 0x8008
     6f8:	4b4f5f4c 	blmi	13d8430 <_Min_Heap_Size+0x13d7c30>
     6fc:	4f545600 	svcmi	0x00545600
     700:	78520052 	ldmdavc	r2, {r1, r4, r6}^
     704:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     708:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     70c:	58785400 	ldmdapl	r8!, {sl, ip, lr}^
     710:	53726566 	cmnpl	r2, #427819008	; 0x19800000
     714:	00657a69 	rsbeq	r7, r5, r9, ror #20
     718:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     71c:	46435332 			; <UNDEFINED> instruction: 0x46435332
     720:	49005247 	stmdbmi	r0, {r0, r1, r2, r6, r9, ip, lr}
     724:	00525343 	subseq	r5, r2, r3, asr #6
     728:	5f4c4148 	svcpl	0x004c4148
     72c:	5f414d44 	svcpl	0x00414d44
     730:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     734:	42415f45 	submi	r5, r1, #276	; 0x114
     738:	0054524f 	subseq	r5, r4, pc, asr #4
     73c:	43524941 	cmpmi	r2, #1064960	; 0x104000
     740:	46440052 			; <UNDEFINED> instruction: 0x46440052
     744:	45005253 	strmi	r5, [r0, #-595]	; 0xfffffdad
     748:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
     74c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
     750:	63734f00 	cmnvs	r3, #0, 30
     754:	616c6c69 	cmnvs	ip, r9, ror #24
     758:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xfffff08c
     75c:	00657079 	rsbeq	r7, r5, r9, ror r0
     760:	41464d4d 	cmpmi	r6, sp, asr #26
     764:	654d0052 	strbvs	r0, [sp, #-82]	; 0xffffffae
     768:	7461446d 	strbtvc	r4, [r1], #-1133	; 0xfffffb93
     76c:	696c4161 	stmdbvs	ip!, {r0, r5, r6, r8, lr}^
     770:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
     774:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
     778:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     77c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     780:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     784:	42504100 	subsmi	r4, r0, #0, 2
     788:	45504c32 	ldrbmi	r4, [r0, #-3122]	; 0xfffff3ce
     78c:	4d00524e 	sfmmi	f5, 4, [r0, #-312]	; 0xfffffec8
     790:	0052464d 	subseq	r4, r2, sp, asr #12
     794:	43424841 	movtmi	r4, #10305	; 0x2841
     798:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
     79c:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
     7a0:	72450072 	subvc	r0, r5, #114	; 0x72
     7a4:	5f726f72 	svcpl	0x00726f72
     7a8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     7ac:	0072656c 	rsbseq	r6, r2, ip, ror #10
     7b0:	5f4c4148 	svcpl	0x004c4148
     7b4:	5f414d44 	svcpl	0x00414d44
     7b8:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     7bc:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     7c0:	00594441 	subseq	r4, r9, r1, asr #8
     7c4:	5f4c4148 	svcpl	0x004c4148
     7c8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     7cc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     7d0:	414d445f 	cmpmi	sp, pc, asr r4
     7d4:	4154535f 	cmpmi	r4, pc, asr r3
     7d8:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     7dc:	00595355 	subseq	r5, r9, r5, asr r3
     7e0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     7e4:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7e8:	657a5f76 	ldrbvs	r5, [sl, #-3958]!	; 0xfffff08a
     7ec:	745f6f72 	ldrbvc	r6, [pc], #-3954	; 7f4 <_Min_Heap_Size-0xc>
     7f0:	67676972 			; <UNDEFINED> instruction: 0x67676972
     7f4:	5f007265 	svcpl	0x00007265
     7f8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     7fc:	61485f54 	cmpvs	r8, r4, asr pc
     800:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     804:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     808:	00666544 	rsbeq	r6, r6, r4, asr #10
     80c:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
     810:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
     814:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
     818:	46430064 	strbmi	r0, [r3], -r4, rrx
     81c:	48005253 	stmdami	r0, {r0, r1, r4, r6, r9, ip, lr}
     820:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
     824:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
     828:	48410044 	stmdami	r1, {r2, r6}^
     82c:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     830:	6e490052 	mcrvs	0, 2, r0, cr9, cr2, {2}
     834:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
     838:	58006563 	stmdapl	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
     83c:	45726566 	ldrbmi	r6, [r2, #-1382]!	; 0xfffffa9a
     840:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
     844:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     848:	6b636162 	blvs	18d8dd8 <_Min_Heap_Size+0x18d85d8>
     84c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     850:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     854:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     858:	5f455441 	svcpl	0x00455441
     85c:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     860:	0058545f 	subseq	r5, r8, pc, asr r4
     864:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     868:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     86c:	64680052 	strbtvs	r0, [r8], #-82	; 0xffffffae
     870:	7874616d 	ldmdavc	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     874:	43435200 	movtmi	r5, #12800	; 0x3200
     878:	6b6c435f 	blvs	1b115fc <_Min_Heap_Size+0x1b10dfc>
     87c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     880:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     884:	00666544 	rsbeq	r6, r6, r4, asr #10
     888:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
     88c:	41007974 	tstmi	r0, r4, ror r9
     890:	52314250 	eorspl	r4, r1, #80, 4
     894:	00525453 	subseq	r5, r2, r3, asr r4
     898:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     89c:	50430032 	subpl	r0, r3, r2, lsr r0
     8a0:	00524341 	subseq	r4, r2, r1, asr #6
     8a4:	69645f5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     8a8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     8ac:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     8b0:	45520071 	ldrbmi	r0, [r2, #-113]	; 0xffffff8f
     8b4:	56524553 			; <UNDEFINED> instruction: 0x56524553
     8b8:	00304445 	eorseq	r4, r0, r5, asr #8
     8bc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     8c0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     8c4:	45520031 	ldrbmi	r0, [r2, #-49]	; 0xffffffcf
     8c8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     8cc:	00324445 	eorseq	r4, r2, r5, asr #8
     8d0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     8d4:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     8d8:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
     8dc:	56524553 			; <UNDEFINED> instruction: 0x56524553
     8e0:	00344445 	eorseq	r4, r4, r5, asr #8
     8e4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     8e8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     8ec:	45520035 	ldrbmi	r0, [r2, #-53]	; 0xffffffcb
     8f0:	56524553 			; <UNDEFINED> instruction: 0x56524553
     8f4:	00364445 	eorseq	r4, r6, r5, asr #8
     8f8:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     8fc:	6148314d 	cmpvs	r8, sp, asr #2
     900:	7043666c 	subvc	r6, r3, ip, ror #12
     904:	6143746c 	cmpvs	r3, ip, ror #8
     908:	61626c6c 	cmnvs	r2, ip, ror #24
     90c:	43006b63 	movwmi	r6, #2915	; 0xb63
     910:	6e6e6168 	powvsez	f6, f6, #0.0
     914:	53006c65 	movwpl	r6, #3173	; 0xc65
     918:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     91c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     920:	414d445f 	cmpmi	sp, pc, asr r4
     924:	6174535f 	cmnvs	r4, pc, asr r3
     928:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
     92c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     930:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     934:	504c3342 	subpl	r3, ip, r2, asr #6
     938:	00524e45 	subseq	r4, r2, r5, asr #28
     93c:	534c4c50 	movtpl	r4, #52304	; 0xcc50
     940:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     944:	5f5f0065 	svcpl	0x005f0065
     948:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     94c:	48005f5f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}
     950:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffd17 <_estack+0xdfffeadf>
     954:	5f545241 	svcpl	0x00545241
     958:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     95c:	52455f45 	subpl	r5, r5, #276	; 0x114
     960:	00524f52 	subseq	r4, r2, r2, asr pc
     964:	32425041 	subcc	r5, r2, #65	; 0x41
     968:	00524e45 	subseq	r4, r2, r5, asr #28
     96c:	33424841 	movtcc	r4, #10305	; 0x2841
     970:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     974:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 97c <_Min_Heap_Size+0x17c>
     978:	485f414d 	ldmdami	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
     97c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     980:	70795465 	rsbsvc	r5, r9, r5, ror #8
     984:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     988:	46494600 	strbmi	r4, [r9], -r0, lsl #12
     98c:	646f4d4f 	strbtvs	r4, [pc], #-3407	; 994 <_Min_Heap_Size+0x194>
     990:	6f570065 	svcvs	0x00570065
     994:	654c6472 	strbvs	r6, [ip, #-1138]	; 0xfffffb8e
     998:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     99c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     9a0:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     9a4:	4100524f 	tstmi	r0, pc, asr #4
     9a8:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     9ac:	2e00524e 	cdpcs	2, 0, cr5, cr0, cr14, {2}
     9b0:	6f432f2e 	svcvs	0x00432f2e
     9b4:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     9b8:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 7f8 <_Min_Heap_Size-0x8>
     9bc:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     9c0:	49460063 	stmdbmi	r6, {r0, r1, r5, r6}^
     9c4:	68544f46 	ldmdavs	r4, {r1, r2, r6, r8, r9, sl, fp, lr}^
     9c8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     9cc:	00646c6f 	rsbeq	r6, r4, pc, ror #24
     9d0:	5f4c4148 	svcpl	0x004c4148
     9d4:	5f434352 	svcpl	0x00434352
     9d8:	4363734f 	cmnmi	r3, #1006632961	; 0x3c000001
     9dc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     9e0:	41480067 	cmpmi	r8, r7, rrx
     9e4:	65445f4c 	strbvs	r5, [r4, #-3916]	; 0xfffff0b4
     9e8:	0079616c 	rsbseq	r6, r9, ip, ror #2
     9ec:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     9f0:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
     9f4:	4800745f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
     9f8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffdbf <_estack+0xdfffeb87>
     9fc:	5f545241 	svcpl	0x00545241
     a00:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     a04:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
     a08:	525f5953 	subspl	r5, pc, #1359872	; 0x14c000
     a0c:	48410058 	stmdami	r1, {r3, r4, r6}^
     a10:	53523242 	cmppl	r2, #536870916	; 0x20000004
     a14:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     a18:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     a1c:	65500063 	ldrbvs	r0, [r0, #-99]	; 0xffffff9d
     a20:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     a24:	73727542 	cmnvc	r2, #276824064	; 0x10800000
     a28:	50410074 	subpl	r0, r1, r4, ror r0
     a2c:	4c433242 	sfmmi	f3, 2, [r3], {66}	; 0x42
     a30:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
     a34:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
     a38:	73795300 	cmnvc	r9, #0, 6
     a3c:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
     a40:	6b636f6c 	blvs	18dc7f8 <_Min_Heap_Size+0x18dbff8>
     a44:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     a48:	00676966 	rsbeq	r6, r7, r6, ror #18
     a4c:	5254444e 	subspl	r4, r4, #1308622848	; 0x4e000000
     a50:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     a54:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     a58:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     a5c:	5f455441 	svcpl	0x00455441
     a60:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     a64:	46410054 			; <UNDEFINED> instruction: 0x46410054
     a68:	44005253 	strmi	r5, [r0], #-595	; 0xfffffdad
     a6c:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     a70:	61657274 	smcvs	22308	; 0x5724
     a74:	79545f6d 	ldmdbvc	r4, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     a78:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     a7c:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     a80:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     a84:	65740052 	ldrbvs	r0, [r4, #-82]!	; 0xffffffae
     a88:	00307473 	eorseq	r7, r0, r3, ror r4
     a8c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     a90:	314d0031 	cmpcc	sp, r1, lsr r0
     a94:	50005241 	andpl	r5, r0, r1, asr #4
     a98:	70697265 	rsbvc	r7, r9, r5, ror #4
     a9c:	74614468 	strbtvc	r4, [r1], #-1128	; 0xfffffb98
     aa0:	696c4161 	stmdbvs	ip!, {r0, r5, r6, r8, lr}^
     aa4:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
     aa8:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
     aac:	5f545241 	svcpl	0x00545241
     ab0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     ab4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     ab8:	00666544 	rsbeq	r6, r6, r4, asr #10
     abc:	47435353 	smlsldmi	r5, r3, r3, r3
     ac0:	41480052 	qdaddmi	r0, r2, r8
     ac4:	41555f4c 	cmpmi	r5, ip, asr #30
     ac8:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
     acc:	70795478 	rsbsvc	r5, r9, r8, ror r4
     ad0:	70795465 	rsbsvc	r5, r9, r5, ror #8
     ad4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     ad8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     adc:	4343525f 	movtmi	r5, #12895	; 0x325f
     ae0:	6f6c435f 	svcvs	0x006c435f
     ae4:	6f436b63 	svcvs	0x00436b63
     ae8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     aec:	43444200 	movtmi	r4, #16896	; 0x4200
     af0:	41480052 	qdaddmi	r0, r2, r8
     af4:	41555f4c 	cmpmi	r5, ip, asr #30
     af8:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     afc:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     b00:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     b04:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     b08:	46774800 	ldrbtmi	r4, [r7], -r0, lsl #16
     b0c:	43776f6c 	cmnmi	r7, #108, 30	; 0x1b0
     b10:	48006c74 	stmdami	r0, {r2, r4, r5, r6, sl, fp, sp, lr}
     b14:	445f4c41 	ldrbmi	r4, [pc], #-3137	; b1c <_Min_Heap_Size+0x31c>
     b18:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     b1c:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     b20:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     b24:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     b28:	78527000 	ldmdavc	r2, {ip, sp, lr}^
     b2c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     b30:	00727450 	rsbseq	r7, r2, r0, asr r4
     b34:	5f434352 	svcpl	0x00434352
     b38:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     b3c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     b40:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     b44:	43006665 	movwmi	r6, #1637	; 0x665
     b48:	6b636f6c 	blvs	18dc900 <_Min_Heap_Size+0x18dc100>
     b4c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     b50:	42484100 	submi	r4, r8, #0, 2
     b54:	524e4531 	subpl	r4, lr, #205520896	; 0xc400000
     b58:	58785200 	ldmdapl	r8!, {r9, ip, lr}^
     b5c:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     b60:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     b64:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     b68:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     b6c:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     b70:	5f455441 	svcpl	0x00455441
     b74:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     b78:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     b7c:	4c4e555f 	cfstr64mi	mvdx5, [lr], {95}	; 0x5f
     b80:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
     b84:	41480044 	cmpmi	r8, r4, asr #32
     b88:	55425f4c 	strbpl	r5, [r2, #-3916]	; 0xfffff0b4
     b8c:	52005953 	andpl	r5, r0, #1359872	; 0x14c000
     b90:	61745378 	cmnvs	r4, r8, ror r3
     b94:	48006574 	stmdami	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
     b98:	00525346 	subseq	r5, r2, r6, asr #6
     b9c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
     ba0:	6f697470 	svcvs	0x00697470
     ba4:	7079546e 	rsbsvc	r5, r9, lr, ror #8
     ba8:	66580065 	ldrbvs	r0, [r8], -r5, rrx
     bac:	62417265 	subvs	r7, r1, #1342177286	; 0x50000006
     bb0:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
     bb4:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     bb8:	006b6361 	rsbeq	r6, fp, r1, ror #6
     bbc:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     bc0:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     bc4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     bc8:	6b636162 	blvs	18d9158 <_Min_Heap_Size+0x18d8958>
     bcc:	5f584d00 	svcpl	0x00584d00
     bd0:	4f495047 	svcmi	0x00495047
     bd4:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     bd8:	59530074 	ldmdbpl	r3, {r2, r4, r5, r6}^
     bdc:	4b4c4353 	blmi	1311930 <_Min_Heap_Size+0x1311130>
     be0:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     be4:	2e006563 	cfsh32cs	mvfx6, mvfx0, #51
     be8:	6f432f2e 	svcvs	0x00432f2e
     bec:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     bf0:	672f6372 			; <UNDEFINED> instruction: 0x672f6372
     bf4:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
     bf8:	70530063 	subsvc	r0, r3, r3, rrx
     bfc:	00646565 	rsbeq	r6, r4, r5, ror #10
     c00:	5f435452 	svcpl	0x00435452
     c04:	50554b57 	subspl	r4, r5, r7, asr fp
     c08:	5152495f 	cmppl	r2, pc, asr r9
     c0c:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     c10:	5f324954 	svcpl	0x00324954
     c14:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c18:	414d4400 	cmpmi	sp, r0, lsl #8
     c1c:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     c20:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     c24:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
     c28:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     c2c:	5f384d49 	svcpl	0x00384d49
     c30:	545f5055 	ldrbpl	r5, [pc], #-85	; c38 <_Min_Heap_Size+0x438>
     c34:	33314d49 	teqcc	r1, #4672	; 0x1240
     c38:	5152495f 	cmppl	r2, pc, asr r9
     c3c:	5047006e 	subpl	r0, r7, lr, rrx
     c40:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     c44:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
     c48:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     c4c:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     c50:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     c54:	61657274 	smcvs	22308	; 0x5724
     c58:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     c5c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c60:	33495053 	movtcc	r5, #36947	; 0x9053
     c64:	5152495f 	cmppl	r2, pc, asr r9
     c68:	4c46006e 	mcrrmi	0, 6, r0, r6, cr14
     c6c:	5f485341 	svcpl	0x00485341
     c70:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c74:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     c78:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     c7c:	43006e51 	movwmi	r6, #3665	; 0xe51
     c80:	5f324e41 	svcpl	0x00324e41
     c84:	5f305852 	svcpl	0x00305852
     c88:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c8c:	41535500 	cmpmi	r3, r0, lsl #10
     c90:	5f365452 	svcpl	0x00365452
     c94:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c98:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     c9c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     ca0:	734d5f54 	movtvc	r5, #57172	; 0xdf54
     ca4:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
     ca8:	50530074 	subspl	r0, r3, r4, ror r0
     cac:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     cb0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     cb4:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     cb8:	4b52425f 	blmi	149163c <_Min_Heap_Size+0x1490e3c>
     cbc:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     cc0:	495f3231 	ldmdbmi	pc, {r0, r4, r5, r9, ip, sp}^	; <UNPREDICTABLE>
     cc4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     cc8:	5f4c4148 	svcpl	0x004c4148
     ccc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     cd0:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
     cd4:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
     cd8:	44007469 	strmi	r7, [r0], #-1129	; 0xfffffb97
     cdc:	5f32414d 	svcpl	0x0032414d
     ce0:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     ce4:	5f356d61 	svcpl	0x00356d61
     ce8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     cec:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     cf0:	52545f31 	subspl	r5, r4, #49, 30	; 0xc4
     cf4:	4f435f47 	svcmi	0x00435f47
     cf8:	49545f4d 	ldmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     cfc:	5f31314d 	svcpl	0x0031314d
     d00:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d04:	73795300 	cmnvc	r9, #0, 6
     d08:	6b636954 	blvs	18db260 <_Min_Heap_Size+0x18daa60>
     d0c:	5152495f 	cmppl	r2, pc, asr r9
     d10:	5355006e 	cmppl	r5, #110	; 0x6e
     d14:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     d18:	5152495f 	cmppl	r2, pc, asr r9
     d1c:	5047006e 	subpl	r0, r7, lr, rrx
     d20:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     d24:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     d28:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     d2c:	44006665 	strmi	r6, [r0], #-1637	; 0xfffff99b
     d30:	5f31414d 	svcpl	0x0031414d
     d34:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     d38:	5f326d61 	svcpl	0x00326d61
     d3c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d40:	414d4400 	cmpmi	sp, r0, lsl #8
     d44:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     d48:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     d4c:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     d50:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     d54:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
     d58:	5f4f4950 	svcpl	0x004f4950
     d5c:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
     d60:	49007469 	stmdbmi	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
     d64:	5f314332 	svcpl	0x00314332
     d68:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     d6c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d70:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     d74:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d78:	4300656c 	movwmi	r6, #1388	; 0x56c
     d7c:	5f324e41 	svcpl	0x00324e41
     d80:	5f454353 	svcpl	0x00454353
     d84:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d88:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     d8c:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     d90:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     d94:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     d98:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     d9c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     da0:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     da4:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
     da8:	5f4f4950 	svcpl	0x004f4950
     dac:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     db0:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     db4:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     db8:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     dbc:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     dc0:	5f344d49 	svcpl	0x00344d49
     dc4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dc8:	41535500 	cmpmi	r3, r0, lsl #10
     dcc:	5f325452 	svcpl	0x00325452
     dd0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dd4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     dd8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     ddc:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
     de0:	49007469 	stmdbmi	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
     de4:	5f314332 	svcpl	0x00314332
     de8:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     dec:	006e5152 	rsbeq	r5, lr, r2, asr r1
     df0:	314d4954 	cmpcc	sp, r4, asr r9
     df4:	5f43435f 	svcpl	0x0043435f
     df8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dfc:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     e00:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     e04:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e08:	314e4143 	cmpcc	lr, r3, asr #2
     e0c:	5f58545f 	svcpl	0x0058545f
     e10:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e14:	414d4400 	cmpmi	sp, r0, lsl #8
     e18:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     e1c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     e20:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     e24:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     e28:	5f384d49 	svcpl	0x00384d49
     e2c:	5f475254 	svcpl	0x00475254
     e30:	5f4d4f43 	svcpl	0x004d4f43
     e34:	314d4954 	cmpcc	sp, r4, asr r9
     e38:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     e3c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     e40:	5f32414d 	svcpl	0x0032414d
     e44:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     e48:	5f376d61 	svcpl	0x00376d61
     e4c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e50:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     e54:	5f53465f 	svcpl	0x0053465f
     e58:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e5c:	6e6f4e00 	cdpvs	14, 6, cr4, cr15, cr0, {0}
     e60:	6b73614d 	blvs	1cd939c <_Min_Heap_Size+0x1cd8b9c>
     e64:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     e68:	5f746e49 	svcpl	0x00746e49
     e6c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e70:	44575700 	ldrbmi	r5, [r7], #-1792	; 0xfffff900
     e74:	52495f47 	subpl	r5, r9, #284	; 0x11c
     e78:	4f006e51 	svcmi	0x00006e51
     e7c:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     e80:	4b575f53 	blmi	15d8bd4 <_Min_Heap_Size+0x15d83d4>
     e84:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     e88:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e8c:	6f6d654d 	svcvs	0x006d654d
     e90:	614d7972 	hvcvs	55186	; 0xd792
     e94:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     e98:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     e9c:	5152495f 	cmppl	r2, pc, asr r9
     ea0:	4154006e 	cmpmi	r4, lr, rrx
     ea4:	535f504d 	cmppl	pc, #77	; 0x4d
     ea8:	504d4154 	subpl	r4, sp, r4, asr r1
     eac:	5152495f 	cmppl	r2, pc, asr r9
     eb0:	4143006e 	cmpmi	r3, lr, rrx
     eb4:	535f314e 	cmppl	pc, #-2147483629	; 0x80000013
     eb8:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
     ebc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ec0:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     ec4:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     ec8:	306d6165 	rsbcc	r6, sp, r5, ror #2
     ecc:	5152495f 	cmppl	r2, pc, asr r9
     ed0:	434c006e 	movtmi	r0, #49262	; 0xc06e
     ed4:	4900524b 	stmdbmi	r0, {r0, r1, r3, r6, r9, ip, lr}
     ed8:	5f324332 	svcpl	0x00324332
     edc:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     ee0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ee4:	4550534f 	ldrbmi	r5, [r0, #-847]	; 0xfffffcb1
     ee8:	00524445 	subseq	r4, r2, r5, asr #8
     eec:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     ef0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     ef4:	5152495f 	cmppl	r2, pc, asr r9
     ef8:	4155006e 	cmpmi	r5, lr, rrx
     efc:	5f355452 	svcpl	0x00355452
     f00:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f04:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     f08:	52425f31 	subpl	r5, r2, #49, 30	; 0xc4
     f0c:	49545f4b 	ldmdbmi	r4, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
     f10:	495f394d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, ip, sp}^	; <UNPREDICTABLE>
     f14:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f18:	374d4954 	smlsldcc	r4, sp, r4, r9
     f1c:	5152495f 	cmppl	r2, pc, asr r9
     f20:	544f006e 	strbpl	r0, [pc], #-110	; f28 <_Min_Heap_Size+0x728>
     f24:	53485f47 	movtpl	r5, #36679	; 0x8f47
     f28:	5152495f 	cmppl	r2, pc, asr r9
     f2c:	5550006e 	ldrbpl	r0, [r0, #-110]	; 0xffffff92
     f30:	00524450 	subseq	r4, r2, r0, asr r4
     f34:	31495053 	qdaddcc	r5, r3, r9
     f38:	5152495f 	cmppl	r2, pc, asr r9
     f3c:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
     f40:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     f44:	5152495f 	cmppl	r2, pc, asr r9
     f48:	5046006e 	subpl	r0, r6, lr, rrx
     f4c:	52495f55 	subpl	r5, r9, #340	; 0x154
     f50:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     f54:	34545241 	ldrbcc	r5, [r4], #-577	; 0xfffffdbf
     f58:	5152495f 	cmppl	r2, pc, asr r9
     f5c:	6c41006e 	mcrrvs	0, 6, r0, r1, cr14
     f60:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     f64:	00657461 	rsbeq	r7, r5, r1, ror #8
     f68:	5f47544f 	svcpl	0x0047544f
     f6c:	575f5346 	ldrbpl	r5, [pc, -r6, asr #6]
     f70:	5f50554b 	svcpl	0x0050554b
     f74:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f78:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     f7c:	495f3449 	ldmdbmi	pc, {r0, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     f80:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f84:	364d4954 			; <UNDEFINED> instruction: 0x364d4954
     f88:	4341445f 	movtmi	r4, #5215	; 0x145f
     f8c:	5152495f 	cmppl	r2, pc, asr r9
     f90:	3249006e 	subcc	r0, r9, #110	; 0x6e
     f94:	455f3243 	ldrbmi	r3, [pc, #-579]	; d59 <_Min_Heap_Size+0x559>
     f98:	52495f56 	subpl	r5, r9, #344	; 0x158
     f9c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     fa0:	5f31414d 	svcpl	0x0031414d
     fa4:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     fa8:	5f316d61 	svcpl	0x00316d61
     fac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fb0:	414d4400 	cmpmi	sp, r0, lsl #8
     fb4:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     fb8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     fbc:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     fc0:	43006e51 	movwmi	r6, #3665	; 0xe51
     fc4:	5f324e41 	svcpl	0x00324e41
     fc8:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     fcc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fd0:	6c6c7550 	cfstr64vs	mvdx7, [ip], #-320	; 0xfffffec0
     fd4:	414d4400 	cmpmi	sp, r0, lsl #8
     fd8:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     fdc:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     fe0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     fe4:	52006e51 	andpl	r6, r0, #1296	; 0x510
     fe8:	415f4354 	cmpmi	pc, r4, asr r3	; <UNPREDICTABLE>
     fec:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
     ff0:	5152495f 	cmppl	r2, pc, asr r9
     ff4:	3249006e 	subcc	r0, r9, #110	; 0x6e
     ff8:	455f3343 	ldrbmi	r3, [pc, #-835]	; cbd <_Min_Heap_Size+0x4bd>
     ffc:	52495f52 	subpl	r5, r9, #328	; 0x148
    1000:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
    1004:	31495458 	cmpcc	r9, r8, asr r4
    1008:	30315f35 	eorscc	r5, r1, r5, lsr pc
    100c:	5152495f 	cmppl	r2, pc, asr r9
    1010:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1014:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    1018:	006e5152 	rsbeq	r5, lr, r2, asr r1
    101c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    1020:	495f3154 	ldmdbmi	pc, {r2, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1024:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1028:	5f4c4148 	svcpl	0x004c4148
    102c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1030:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1034:	6f697250 	svcvs	0x00697250
    1038:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    103c:	474e5200 	strbmi	r5, [lr, -r0, lsl #4]
    1040:	5152495f 	cmppl	r2, pc, asr r9
    1044:	4143006e 	cmpmi	r3, lr, rrx
    1048:	525f324e 	subspl	r3, pc, #-536870908	; 0xe0000004
    104c:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1050:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1054:	5f434441 	svcpl	0x00434441
    1058:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    105c:	44565000 	ldrbmi	r5, [r6], #-0
    1060:	5152495f 	cmppl	r2, pc, asr r9
    1064:	544f006e 	strbpl	r0, [pc], #-110	; 106c <_Min_Heap_Size+0x86c>
    1068:	52455059 	subpl	r5, r5, #89	; 0x59
    106c:	4d534600 	ldclmi	6, cr4, [r3, #-0]
    1070:	52495f43 	subpl	r5, r9, #268	; 0x10c
    1074:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    1078:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    107c:	5f434956 	svcpl	0x00434956
    1080:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    1084:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    1088:	58450051 	stmdapl	r5, {r0, r4, r6}^
    108c:	5f304954 	svcpl	0x00304954
    1090:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1094:	414d4400 	cmpmi	sp, r0, lsl #8
    1098:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    109c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    10a0:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    10a4:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
    10a8:	5f32414d 	svcpl	0x0032414d
    10ac:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    10b0:	5f366d61 	svcpl	0x00366d61
    10b4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    10b8:	62654400 	rsbvs	r4, r5, #0, 8
    10bc:	6f4d6775 	svcvs	0x004d6775
    10c0:	6f74696e 	svcvs	0x0074696e
    10c4:	52495f72 	subpl	r5, r9, #456	; 0x1c8
    10c8:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    10cc:	5f334332 	svcpl	0x00334332
    10d0:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    10d4:	006e5152 	rsbeq	r5, lr, r2, asr r1
    10d8:	5f4c4148 	svcpl	0x004c4148
    10dc:	4349564e 	movtmi	r5, #38478	; 0x964e
    10e0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    10e4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    10e8:	00515249 	subseq	r5, r1, r9, asr #4
    10ec:	5f434352 	svcpl	0x00434352
    10f0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    10f4:	414d4400 	cmpmi	sp, r0, lsl #8
    10f8:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    10fc:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1100:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1104:	42006e51 	andmi	r6, r0, #1296	; 0x510
    1108:	00525253 	subseq	r5, r2, r3, asr r2
    110c:	4f495047 	svcmi	0x00495047
    1110:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1114:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1118:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    111c:	50555f31 	subspl	r5, r5, r1, lsr pc
    1120:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    1124:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
    1128:	006e5152 	rsbeq	r5, lr, r2, asr r1
    112c:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    1130:	2f65726f 	svccs	0x0065726f
    1134:	2f637253 	svccs	0x00637253
    1138:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
    113c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1140:	5f47544f 	svcpl	0x0047544f
    1144:	455f5348 	ldrbmi	r5, [pc, #-840]	; e04 <_Min_Heap_Size+0x604>
    1148:	4f5f3150 	svcmi	0x005f3150
    114c:	495f5455 	ldmdbmi	pc, {r0, r2, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1150:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1154:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
    1158:	41430052 	qdaddmi	r0, r2, r3
    115c:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
    1160:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1164:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1168:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    116c:	5f355f39 	svcpl	0x00355f39
    1170:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1174:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1178:	43435f38 	movtmi	r5, #16184	; 0x3f38
    117c:	5152495f 	cmppl	r2, pc, asr r9
    1180:	4453006e 	ldrbmi	r0, [r3], #-110	; 0xffffff92
    1184:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
    1188:	006e5152 	rsbeq	r5, lr, r2, asr r1
    118c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1190:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1194:	50006e51 	andpl	r6, r0, r1, asr lr
    1198:	53646e65 	cmnpl	r4, #1616	; 0x650
    119c:	52495f56 	subpl	r5, r9, #344	; 0x158
    11a0:	4f006e51 	svcmi	0x00006e51
    11a4:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    11a8:	50455f53 	subpl	r5, r5, r3, asr pc
    11ac:	4e495f31 	mcrmi	15, 2, r5, cr9, cr1, {1}
    11b0:	5152495f 	cmppl	r2, pc, asr r9
    11b4:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    11b8:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
    11bc:	61657274 	smcvs	22308	; 0x5724
    11c0:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    11c4:	006e5152 	rsbeq	r5, lr, r2, asr r1
    11c8:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    11cc:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    11d0:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
    11d4:	5152495f 	cmppl	r2, pc, asr r9
    11d8:	7355006e 	cmpvc	r5, #110	; 0x6e
    11dc:	46656761 	strbtmi	r6, [r5], -r1, ror #14
    11e0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    11e4:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    11e8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    11ec:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    11f0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    11f4:	52495f54 	subpl	r5, r9, #84, 30	; 0x150
    11f8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    11fc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1200:	494d4e00 	stmdbmi	sp, {r9, sl, fp, lr}^
    1204:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    1208:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    120c:	41535500 	cmpmi	r3, r0, lsl #10
    1210:	5f315452 	svcpl	0x00315452
    1214:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    1218:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    121c:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1220:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    1224:	6954636e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    1228:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    122c:	46647261 	strbtmi	r7, [r4], -r1, ror #4
    1230:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1234:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    1238:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    123c:	67654c5f 			; <UNDEFINED> instruction: 0x67654c5f
    1240:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1244:	62654400 	rsbvs	r4, r5, #0, 8
    1248:	6f4d6775 	svcvs	0x004d6775
    124c:	61485f6e 	cmpvs	r8, lr, ror #30
    1250:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1254:	56530072 			; <UNDEFINED> instruction: 0x56530072
    1258:	61485f43 	cmpvs	r8, r3, asr #30
    125c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1260:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
    1264:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    1268:	61485f6b 	cmpvs	r8, fp, ror #30
    126c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1270:	75420072 	strbvc	r0, [r2, #-114]	; 0xffffff8e
    1274:	75614673 	strbvc	r4, [r1, #-1651]!	; 0xfffff98d
    1278:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    127c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    1280:	50007265 	andpl	r7, r0, r5, ror #4
    1284:	53646e65 	cmnpl	r4, #1616	; 0x650
    1288:	61485f56 	cmpvs	r8, r6, asr pc
    128c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1290:	654d0072 	strbvs	r0, [sp, #-114]	; 0xffffff8e
    1294:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
    1298:	5f656761 	svcpl	0x00656761
    129c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    12a0:	0072656c 	rsbseq	r6, r2, ip, ror #10
    12a4:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    12a8:	2f65726f 	svccs	0x0065726f
    12ac:	2f637253 	svccs	0x00637253
    12b0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    12b4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    12b8:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xfffff088
    12bc:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    12c0:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 11c4 <_Min_Heap_Size+0x9c4>
    12c4:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
    12c8:	2e007469 	cdpcs	4, 0, cr7, cr0, cr9, {3}
    12cc:	6f432f2e 	svcvs	0x00432f2e
    12d0:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    12d4:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    12d8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    12dc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    12e0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    12e4:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
    12e8:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    12ec:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    12f0:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    12f4:	43507465 	cmpmi	r0, #1694498816	; 0x65000000
    12f8:	46314b4c 	ldrtmi	r4, [r1], -ip, asr #22
    12fc:	00716572 	rsbseq	r6, r1, r2, ror r5
    1300:	5f4c4148 	svcpl	0x004c4148
    1304:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1308:	475f7845 	ldrbmi	r7, [pc, -r5, asr #16]
    130c:	78527465 	ldmdavc	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1310:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1314:	70795474 	rsbsvc	r5, r9, r4, ror r4
    1318:	41480065 	cmpmi	r8, r5, rrx
    131c:	41555f4c 	cmpmi	r5, ip, asr #30
    1320:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1328 <_Min_Heap_Size+0xb28>
    1324:	6150414d 	cmpvs	r0, sp, asr #2
    1328:	00657375 	rsbeq	r7, r5, r5, ror r3
    132c:	5f4c4148 	svcpl	0x004c4148
    1330:	5f4e494c 	svcpl	0x004e494c
    1334:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
    1338:	61657242 	cmnvs	r5, r2, asr #4
    133c:	6c46006b 	mcrrvs	0, 6, r0, r6, cr11
    1340:	74536761 	ldrbvc	r6, [r3], #-1889	; 0xfffff89f
    1344:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1348:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    134c:	414d445f 	cmpmi	sp, pc, asr r4
    1350:	6f62415f 	svcvs	0x0062415f
    1354:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1358:	41480054 	qdaddmi	r0, r4, r8
    135c:	61485f4c 	cmpvs	r8, ip, asr #30
    1360:	7544666c 	strbvc	r6, [r4, #-1644]	; 0xfffff994
    1364:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    1368:	616e455f 	cmnvs	lr, pc, asr r5
    136c:	54656c62 	strbtpl	r6, [r5], #-3170	; 0xfffff39e
    1370:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1374:	7474696d 	ldrbtvc	r6, [r4], #-2413	; 0xfffff693
    1378:	63007265 	movwvs	r7, #613	; 0x265
    137c:	74693372 	strbtvc	r3, [r9], #-882	; 0xfffffc8e
    1380:	41480073 	hvcmi	32771	; 0x8003
    1384:	41555f4c 	cmpmi	r5, ip, asr #30
    1388:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    138c:	4578525f 	ldrbmi	r5, [r8, #-607]!	; 0xfffffda1
    1390:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1394:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1398:	6b636162 	blvs	18d9928 <_Min_Heap_Size+0x18d9128>
    139c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    13a0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    13a4:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    13a8:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    13ac:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    13b0:	48006576 	stmdami	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    13b4:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 77b <_Min_Heap_Size-0x85>
    13b8:	5f545241 	svcpl	0x00545241
    13bc:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0xfffffab9
    13c0:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    13c4:	61447000 	mrsvs	r7, (UNDEF: 68)
    13c8:	55006174 	strpl	r6, [r0, #-372]	; 0xfffffe8c
    13cc:	5f545241 	svcpl	0x00545241
    13d0:	52646e45 	rsbpl	r6, r4, #1104	; 0x450
    13d4:	61725478 	cmnvs	r2, r8, ror r4
    13d8:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
    13dc:	41550072 	cmpmi	r5, r2, ror r0
    13e0:	455f5452 	ldrbmi	r5, [pc, #-1106]	; f96 <_Min_Heap_Size+0x796>
    13e4:	7854646e 	ldmdavc	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    13e8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    13ec:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
    13f0:	61647000 	cmnvs	r4, r0
    13f4:	62386174 	eorsvs	r6, r8, #116, 2
    13f8:	00737469 	rsbseq	r7, r3, r9, ror #8
    13fc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1400:	414d445f 	cmpmi	sp, pc, asr r4
    1404:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1408:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    140c:	00746c70 	rsbseq	r6, r4, r0, ror ip
    1410:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1414:	414d445f 	cmpmi	sp, pc, asr r4
    1418:	61487854 	cmpvs	r8, r4, asr r8
    141c:	7043666c 	subvc	r6, r3, ip, ror #12
    1420:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    1424:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 142c <_Min_Heap_Size+0xc2c>
    1428:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    142c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1430:	0054495f 	subseq	r4, r4, pc, asr r9
    1434:	5f4c4148 	svcpl	0x004c4148
    1438:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    143c:	6f62415f 	svcvs	0x0062415f
    1440:	65527472 	ldrbvs	r7, [r2, #-1138]	; 0xfffffb8e
    1444:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1448:	6c704365 	ldclvs	3, cr4, [r0], #-404	; 0xfffffe6c
    144c:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1450:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1454:	6c46006b 	mcrrvs	0, 6, r0, r6, cr11
    1458:	70006761 	andvc	r6, r0, r1, ror #14
    145c:	61746164 	cmnvs	r4, r4, ror #2
    1460:	69623631 	stmdbvs	r2!, {r0, r4, r5, r9, sl, ip, sp}^
    1464:	48007374 	stmdami	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1468:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 82f <_Min_Heap_Size+0x2f>
    146c:	5f545241 	svcpl	0x00545241
    1470:	61487852 	cmpvs	r8, r2, asr r8
    1474:	7043666c 	subvc	r6, r3, ip, ror #12
    1478:	6143746c 	cmpvs	r3, ip, ror #8
    147c:	61626c6c 	cmnvs	r2, ip, ror #24
    1480:	54006b63 	strpl	r6, [r0], #-2915	; 0xfffff49d
    1484:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    1488:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    148c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1490:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    1494:	70754466 	rsbsvc	r4, r5, r6, ror #8
    1498:	5f78656c 	svcpl	0x0078656c
    149c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    14a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    14a4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    14a8:	65445f54 	strbvs	r5, [r4, #-3924]	; 0xfffff0ac
    14ac:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    14b0:	6b615700 	blvs	18570b8 <_Min_Heap_Size+0x18568b8>
    14b4:	4d705565 	cfldr64mi	mvdx5, [r0, #-404]!	; 0xfffffe6c
    14b8:	6f687465 	svcvs	0x00687465
    14bc:	72420064 	subvc	r0, r2, #100	; 0x64
    14c0:	446b6165 	strbtmi	r6, [fp], #-357	; 0xfffffe9b
    14c4:	63657465 	cmnvs	r5, #1694498816	; 0x65000000
    14c8:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
    14cc:	00687467 	rsbeq	r7, r8, r7, ror #8
    14d0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    14d4:	6174535f 	cmnvs	r4, pc, asr r3
    14d8:	525f7472 	subspl	r7, pc, #1912602624	; 0x72000000
    14dc:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    14e0:	495f6576 	ldmdbmi	pc, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    14e4:	41550054 	cmpmi	r5, r4, asr r0
    14e8:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    14ec:	6f437465 	svcvs	0x00437465
    14f0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    14f4:	6f624100 	svcvs	0x00624100
    14f8:	70437472 	subvc	r7, r3, r2, ror r4
    14fc:	5500746c 	strpl	r7, [r0, #-1132]	; 0xfffffb94
    1500:	5f545241 	svcpl	0x00545241
    1504:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    1508:	6f624178 	svcvs	0x00624178
    150c:	61437472 	hvcvs	14146	; 0x3742
    1510:	61626c6c 	cmnvs	r2, ip, ror #24
    1514:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1518:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 8df <_Min_Heap_Size+0xdf>
    151c:	5f545241 	svcpl	0x00545241
    1520:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1524:	61725474 	cmnvs	r2, r4, ror r4
    1528:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    152c:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1530:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1534:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1538:	65475f54 	strbvs	r5, [r7, #-3924]	; 0xfffff0ac
    153c:	61745374 	cmnvs	r4, r4, ror r3
    1540:	5f006574 	svcpl	0x00006574
    1544:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    1548:	00575845 	subseq	r5, r7, r5, asr #16
    154c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1550:	414d445f 	cmpmi	sp, pc, asr r4
    1554:	6e4f7852 	mcrvs	8, 2, r7, cr15, cr2, {2}
    1558:	6241796c 	subvs	r7, r1, #108, 18	; 0x1b0000
    155c:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    1560:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1564:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1568:	6f727265 	svcvs	0x00727265
    156c:	616c6672 	smcvs	50786	; 0xc662
    1570:	48007367 	stmdami	r0, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
    1574:	535f4c41 	cmppl	pc, #16640	; 0x4100
    1578:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    157c:	70795473 	rsbsvc	r5, r9, r3, ror r4
    1580:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1584:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1588:	414d445f 	cmpmi	sp, pc, asr r4
    158c:	6f62415f 	svcvs	0x0062415f
    1590:	2e007472 	mcrcs	4, 0, r7, cr0, cr2, {3}
    1594:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1598:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    159c:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    15a0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    15a4:	5f787834 	svcpl	0x00787834
    15a8:	5f4c4148 	svcpl	0x004c4148
    15ac:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    15b0:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    15b4:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    15b8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    15bc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    15c0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    15c4:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    15c8:	00632e74 	rsbeq	r2, r3, r4, ror lr
    15cc:	5f4c4148 	svcpl	0x004c4148
    15d0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15d4:	4378545f 	cmnmi	r8, #1593835520	; 0x5f000000
    15d8:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    15dc:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    15e0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    15e4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15e8:	414d445f 	cmpmi	sp, pc, asr r4
    15ec:	62417854 	subvs	r7, r1, #84, 16	; 0x540000
    15f0:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    15f4:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    15f8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    15fc:	616d6468 	cmnvs	sp, r8, ror #8
    1600:	72736900 	rsbsvc	r6, r3, #0, 18
    1604:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    1608:	41550073 	cmpmi	r5, r3, ror r0
    160c:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1614 <_Min_Heap_Size+0xe14>
    1610:	7245414d 	subvc	r4, r5, #1073741843	; 0x40000013
    1614:	00726f72 	rsbseq	r6, r2, r2, ror pc
    1618:	5f4c4148 	svcpl	0x004c4148
    161c:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1620:	006b6369 	rsbeq	r6, fp, r9, ror #6
    1624:	5f4c4148 	svcpl	0x004c4148
    1628:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    162c:	6f62415f 	svcvs	0x0062415f
    1630:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1634:	41550054 	cmpmi	r5, r4, asr r0
    1638:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1640 <_Min_Heap_Size+0xe40>
    163c:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    1640:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1644:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    1648:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    164c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1650:	65525f54 	ldrbvs	r5, [r2, #-3924]	; 0xfffff0ac
    1654:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1658:	4d445f65 	stclmi	15, cr5, [r4, #-404]	; 0xfffffe6c
    165c:	41480041 	cmpmi	r8, r1, asr #32
    1660:	41555f4c 	cmpmi	r5, ip, asr #30
    1664:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    1668:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    166c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1670:	5f657669 	svcpl	0x00657669
    1674:	52005449 	andpl	r5, r0, #1224736768	; 0x49000000
    1678:	6e654c78 	mcrvs	12, 3, r4, cr5, cr8, {3}
    167c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1680:	6c754d5f 	ldclvs	13, cr4, [r5], #-380	; 0xfffffe84
    1684:	72506974 	subsvc	r6, r0, #116, 18	; 0x1d0000
    1688:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    168c:	5f726f73 	svcpl	0x00726f73
    1690:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1694:	52415500 	subpl	r5, r1, #0, 10
    1698:	61575f54 	cmpvs	r7, r4, asr pc
    169c:	6e4f7469 	cdpvs	4, 4, cr7, cr15, cr9, {3}
    16a0:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    16a4:	69746e55 	ldmdbvs	r4!, {r0, r2, r4, r6, r9, sl, fp, sp, lr}^
    16a8:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	; 0xfffffe50
    16ac:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    16b0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16b4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16b8:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    16bc:	5474726f 	ldrbtpl	r7, [r4], #-623	; 0xfffffd91
    16c0:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    16c4:	4374696d 	cmnmi	r4, #1785856	; 0x1b4000
    16c8:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    16cc:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    16d0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    16d4:	444c5f5f 	strbmi	r5, [ip], #-3935	; 0xfffff0a1
    16d8:	57584552 			; <UNDEFINED> instruction: 0x57584552
    16dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16e0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16e4:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    16e8:	5474726f 	ldrbtpl	r7, [r4], #-623	; 0xfffffd91
    16ec:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    16f0:	0074696d 	rsbseq	r6, r4, sp, ror #18
    16f4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    16f8:	6174535f 	cmnvs	r4, pc, asr r3
    16fc:	525f7472 	subspl	r7, pc, #1912602624	; 0x72000000
    1700:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1704:	445f6576 	ldrbmi	r6, [pc], #-1398	; 170c <_Min_Heap_Size+0xf0c>
    1708:	4800414d 	stmdami	r0, {r0, r2, r3, r6, r8, lr}
    170c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; ad3 <_Min_Heap_Size+0x2d3>
    1710:	45545241 	ldrbmi	r5, [r4, #-577]	; 0xfffffdbf
    1714:	65525f78 	ldrbvs	r5, [r2, #-3960]	; 0xfffff088
    1718:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    171c:	496f5465 	stmdbmi	pc!, {r0, r2, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1720:	5f656c64 	svcpl	0x00656c64
    1724:	5f005449 	svcpl	0x00005449
    1728:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
    172c:	5f343674 	svcpl	0x00343674
    1730:	5f5f0074 	svcpl	0x005f0074
    1734:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    1738:	6c755f69 	ldclvs	15, cr5, [r5], #-420	; 0xfffffe5c
    173c:	6d766964 			; <UNDEFINED> instruction: 0x6d766964
    1740:	4800646f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, sl, sp, lr}
    1744:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; b0b <_Min_Heap_Size+0x30b>
    1748:	5f545241 	svcpl	0x00545241
    174c:	53414d44 	movtpl	r4, #7492	; 0x1d44
    1750:	00706f74 	rsbseq	r6, r0, r4, ror pc
    1754:	5f4c4148 	svcpl	0x004c4148
    1758:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    175c:	6f725069 	svcvs	0x00725069
    1760:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1764:	455f726f 	ldrbmi	r7, [pc, #-623]	; 14fd <_Min_Heap_Size+0xcfd>
    1768:	4d746978 			; <UNDEFINED> instruction: 0x4d746978
    176c:	4d657475 	cfstrdmi	mvd7, [r5, #-468]!	; 0xfffffe2c
    1770:	0065646f 	rsbeq	r6, r5, pc, ror #8
    1774:	72617568 	rsbvc	r7, r1, #104, 10	; 0x1a000000
    1778:	41480074 	hvcmi	32772	; 0x8004
    177c:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1780:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1784:	4c435074 	mcrrmi	0, 7, r5, r3, cr4
    1788:	7246324b 	subvc	r3, r6, #-1342177276	; 0xb0000004
    178c:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    1790:	485f4c41 	ldmdami	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    1794:	44666c61 	strbtmi	r6, [r6], #-3169	; 0xfffff39f
    1798:	656c7075 	strbvs	r7, [ip, #-117]!	; 0xffffff8b
    179c:	6e455f78 	mcrvs	15, 2, r5, cr5, cr8, {3}
    17a0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    17a4:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    17a8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    17ac:	6c637000 	stclvs	0, cr7, [r3], #-0
    17b0:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    17b4:	0031706d 	eorseq	r7, r1, sp, rrx
    17b8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    17bc:	69740032 	ldmdbvs	r4!, {r1, r4, r5}^
    17c0:	74736b63 	ldrbtvc	r6, [r3], #-2915	; 0xfffff49d
    17c4:	00747261 	rsbseq	r7, r4, r1, ror #4
    17c8:	5f4c4148 	svcpl	0x004c4148
    17cc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    17d0:	4378525f 	cmnmi	r8, #-268435451	; 0xf0000005
    17d4:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    17d8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    17dc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    17e0:	725f626e 	subsvc	r6, pc, #-536870906	; 0xe0000006
    17e4:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    17e8:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    17ec:	5f78725f 	svcpl	0x0078725f
    17f0:	61746164 	cmnvs	r4, r4, ror #2
    17f4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    17f8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    17fc:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    1800:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    1804:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    1808:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    180c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1810:	72616d64 	rsbvc	r6, r1, #100, 26	; 0x1900
    1814:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    1818:	48007473 	stmdami	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    181c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; be3 <_Min_Heap_Size+0x3e3>
    1820:	5f545241 	svcpl	0x00545241
    1824:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1828:	00657669 	rsbeq	r7, r5, r9, ror #12
    182c:	5f4c4148 	svcpl	0x004c4148
    1830:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1834:	6172545f 	cmnvs	r2, pc, asr r4
    1838:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    183c:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1840:	52415500 	subpl	r5, r1, #0, 10
    1844:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1848:	6f624141 	svcvs	0x00624141
    184c:	6e4f7472 	mcrvs	4, 2, r7, cr15, cr2, {3}
    1850:	6f727245 	svcvs	0x00727245
    1854:	626e0072 	rsbvs	r0, lr, #114	; 0x72
    1858:	5f78725f 	svcpl	0x0078725f
    185c:	61746164 	cmnvs	r4, r4, ror #2
    1860:	52415500 	subpl	r5, r1, #0, 10
    1864:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1868:	61725441 	cmnvs	r2, r1, asr #8
    186c:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1870:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    1874:	41480074 	hvcmi	32772	; 0x8004
    1878:	41555f4c 	cmpmi	r5, ip, asr #30
    187c:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    1880:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    1884:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1888:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    188c:	445f656c 	ldrbmi	r6, [pc], #-1388	; 1894 <_Min_Heap_Size+0x1094>
    1890:	5500414d 	strpl	r4, [r0, #-333]	; 0xfffffeb3
    1894:	5f545241 	svcpl	0x00545241
    1898:	54646e45 	strbtpl	r6, [r4], #-3653	; 0xfffff1bb
    189c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    18a0:	5f74696d 	svcpl	0x0074696d
    18a4:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    18a8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; c6f <_Min_Heap_Size+0x46f>
    18ac:	5f545241 	svcpl	0x00545241
    18b0:	61487854 	cmpvs	r8, r4, asr r8
    18b4:	7043666c 	subvc	r6, r3, ip, ror #12
    18b8:	6143746c 	cmpvs	r3, ip, ror #8
    18bc:	61626c6c 	cmnvs	r2, ip, ror #24
    18c0:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    18c4:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; c8b <_Min_Heap_Size+0x48b>
    18c8:	5f545241 	svcpl	0x00545241
    18cc:	6f727245 	svcvs	0x00727245
    18d0:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    18d4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    18d8:	4148006b 	cmpmi	r8, fp, rrx
    18dc:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    18e0:	65475f41 	strbvs	r5, [r7, #-3905]	; 0xfffff0bf
    18e4:	72724574 	rsbsvc	r4, r2, #116, 10	; 0x1d000000
    18e8:	4800726f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    18ec:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; cb3 <_Min_Heap_Size+0x4b3>
    18f0:	5f545241 	svcpl	0x00545241
    18f4:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    18f8:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    18fc:	414d445f 	cmpmi	sp, pc, asr r4
    1900:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1904:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1908:	5f784554 	svcpl	0x00784554
    190c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1910:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    1914:	6c64496f 			; <UNDEFINED> instruction: 0x6c64496f
    1918:	41480065 	cmpmi	r8, r5, rrx
    191c:	754d5f4c 	strbvc	r5, [sp, #-3916]	; 0xfffff0b4
    1920:	5069746c 	rsbpl	r7, r9, ip, ror #8
    1924:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    1928:	726f7373 	rsbvc	r7, pc, #-872415231	; 0xcc000001
    192c:	746e455f 	strbtvc	r4, [lr], #-1375	; 0xfffffaa1
    1930:	754d7265 	strbvc	r7, [sp, #-613]	; 0xfffffd9b
    1934:	6f4d6574 	svcvs	0x004d6574
    1938:	55006564 	strpl	r6, [r0, #-1380]	; 0xfffffa9c
    193c:	5f545241 	svcpl	0x00545241
    1940:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    1944:	6c6e4f78 	stclvs	15, cr4, [lr], #-480	; 0xfffffe20
    1948:	6f624179 	svcvs	0x00624179
    194c:	61437472 	hvcvs	14146	; 0x3742
    1950:	61626c6c 	cmnvs	r2, ip, ror #24
    1954:	63006b63 	movwvs	r6, #2915	; 0xb63
    1958:	74693172 	strbtvc	r3, [r9], #-370	; 0xfffffe8e
    195c:	41480073 	hvcmi	32771	; 0x8003
    1960:	41555f4c 	cmpmi	r5, ip, asr #30
    1964:	445f5452 	ldrbmi	r5, [pc], #-1106	; 196c <_Min_Heap_Size+0x116c>
    1968:	6552414d 	ldrbvs	r4, [r2, #-333]	; 0xfffffeb3
    196c:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    1970:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1974:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1978:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    197c:	0074726f 	rsbseq	r7, r4, pc, ror #4
    1980:	5f4c4148 	svcpl	0x004c4148
    1984:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1988:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    198c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1990:	0054495f 	subseq	r4, r4, pc, asr r9
    1994:	5f4c4148 	svcpl	0x004c4148
    1998:	5f4e494c 	svcpl	0x004e494c
    199c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    19a0:	73657200 	cmnvc	r5, #0, 4
    19a4:	00746c75 	rsbseq	r6, r4, r5, ror ip
    19a8:	5f4c4148 	svcpl	0x004c4148
    19ac:	5f434352 	svcpl	0x00434352
    19b0:	43535343 	cmpmi	r3, #201326593	; 0xc000001
    19b4:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    19b8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    19bc:	706c6c70 	rsbvc	r6, ip, r0, ror ip
    19c0:	72777000 	rsbsvc	r7, r7, #0
    19c4:	636b6c63 	cmnvs	fp, #25344	; 0x6300
    19c8:	676e6168 	strbvs	r6, [lr, -r8, ror #2]!
    19cc:	41006465 	tstmi	r0, r5, ror #8
    19d0:	72504250 	subsvc	r4, r0, #80, 4
    19d4:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
    19d8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    19dc:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    19e0:	46005243 	strmi	r5, [r0], -r3, asr #4
    19e4:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    19e8:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    19ec:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    19f0:	414e4500 	cmpmi	lr, r0, lsl #10
    19f4:	00454c42 	subeq	r4, r5, r2, asr #24
    19f8:	4b54504f 	blmi	1515b3c <_Min_Heap_Size+0x151533c>
    19fc:	00525945 	subseq	r5, r2, r5, asr #18
    1a00:	766c6c70 			; <UNDEFINED> instruction: 0x766c6c70
    1a04:	44006f63 	strmi	r6, [r0], #-3939	; 0xfffff09d
    1a08:	42415349 	submi	r5, r1, #603979777	; 0x24000001
    1a0c:	4f00454c 	svcmi	0x0000454c
    1a10:	52435450 	subpl	r5, r3, #80, 8	; 0x50000000
    1a14:	43520031 	cmpmi	r2, #49	; 0x31
    1a18:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1a1c:	7669444f 	strbtvc	r4, [r9], -pc, asr #8
    1a20:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a24:	4343525f 	movtmi	r5, #12895	; 0x325f
    1a28:	616e455f 	cmnvs	lr, pc, asr r5
    1a2c:	43656c62 	cmnmi	r5, #25088	; 0x6200
    1a30:	41005353 	tstmi	r0, r3, asr r3
    1a34:	72504248 	subsvc	r4, r0, #72, 4	; 0x80000004
    1a38:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
    1a3c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1a40:	73797300 	cmnvc	r9, #0, 6
    1a44:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    1a48:	6572666b 	ldrbvs	r6, [r2, #-1643]!	; 0xfffff995
    1a4c:	41480071 	hvcmi	32769	; 0x8001
    1a50:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1a54:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1a58:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1a5c:	53534365 	cmppl	r3, #-1811939327	; 0x94000001
    1a60:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a64:	4343525f 	movtmi	r5, #12895	; 0x325f
    1a68:	4f434d5f 	svcmi	0x00434d5f
    1a6c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1a70:	53006769 	movwpl	r6, #1897	; 0x769
    1a74:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1a78:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
    1a7c:	6f6c4365 	svcvs	0x006c4365
    1a80:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1a84:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    1a88:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
    1a8c:	006b6369 	rsbeq	r6, fp, r9, ror #6
    1a90:	5f6c6c70 	svcpl	0x006c6c70
    1a94:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1a98:	75006769 	strvc	r6, [r0, #-1897]	; 0xfffff897
    1a9c:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    1aa0:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    1aa4:	6c70006f 	ldclvs	0, cr0, [r0], #-444	; 0xfffffe44
    1aa8:	48006d6c 	stmdami	r0, {r2, r3, r5, r6, r8, sl, fp, sp, lr}
    1aac:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1ab0:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1ab4:	79537465 	ldmdbvc	r3, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1ab8:	6f6c4373 	svcvs	0x006c4373
    1abc:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    1ac0:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    1ac4:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1ac8:	445f4343 	ldrbmi	r4, [pc], #-835	; 1ad0 <_Min_Heap_Size+0x12d0>
    1acc:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1ad0:	43520074 	cmpmi	r2, #116	; 0x74
    1ad4:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1ad8:	756f534f 	strbvc	r5, [pc, #-847]!	; 1791 <_Min_Heap_Size+0xf91>
    1adc:	00656372 	rsbeq	r6, r5, r2, ror r3
    1ae0:	5f4c4148 	svcpl	0x004c4148
    1ae4:	5f434352 	svcpl	0x00434352
    1ae8:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    1aec:	6b636f6c 	blvs	18dd8a4 <_Min_Heap_Size+0x18dd0a4>
    1af0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1af4:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    1af8:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1afc:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1b00:	43487465 	movtmi	r7, #33893	; 0x8465
    1b04:	72464b4c 	subvc	r4, r6, #76, 22	; 0x13000
    1b08:	2e007165 	adfcssz	f7, f0, f5
    1b0c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1b10:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1b14:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    1b18:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1b1c:	5f787834 	svcpl	0x00787834
    1b20:	5f4c4148 	svcpl	0x004c4148
    1b24:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1b28:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    1b2c:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1b30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1b34:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1b38:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1b3c:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    1b40:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
    1b44:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 1a40 <_Min_Heap_Size+0x1240>
    1b48:	00784f43 	rsbseq	r4, r8, r3, asr #30
    1b4c:	614c4670 	hvcvs	50272	; 0xc460
    1b50:	636e6574 	cmnvs	lr, #116, 10	; 0x1d000000
    1b54:	41480079 	hvcmi	32777	; 0x8009
    1b58:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1b5c:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1b60:	63734f74 	cmnvs	r3, #116, 30	; 0x1d0
    1b64:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1b68:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    1b6c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1b70:	4e5f4343 	cdpmi	3, 5, cr4, cr15, cr3, {2}
    1b74:	495f494d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1b78:	61485152 	cmpvs	r8, r2, asr r1
    1b7c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b80:	50470072 	subpl	r0, r7, r2, ror r0
    1b84:	505f4f49 	subspl	r4, pc, r9, asr #30
    1b88:	48006e69 	stmdami	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
    1b8c:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1b90:	5f4f4950 	svcpl	0x004f4950
    1b94:	6b636f4c 	blvs	18dd8cc <_Min_Heap_Size+0x18dd0cc>
    1b98:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1b9c:	6f706f69 	svcvs	0x00706f69
    1ba0:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    1ba4:	4d006e6f 	stcmi	14, cr6, [r0, #-444]	; 0xfffffe44
    1ba8:	4d524d45 	ldclmi	13, cr4, [r2, #-276]	; 0xfffffeec
    1bac:	58450050 	stmdapl	r5, {r4, r6}^
    1bb0:	52434954 	subpl	r4, r3, #84, 18	; 0x150000
    1bb4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1bb8:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1bbc:	6f545f4f 	svcvs	0x00545f4f
    1bc0:	656c6767 	strbvs	r6, [ip, #-1895]!	; 0xfffff899
    1bc4:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1bc8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1bcc:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1bd0:	49505f4f 	ldmdbmi	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1bd4:	45535f4e 	ldrbmi	r5, [r3, #-3918]	; 0xfffff0b2
    1bd8:	58450054 	stmdapl	r5, {r2, r4, r6}^
    1bdc:	545f4954 	ldrbpl	r4, [pc], #-2388	; 1be4 <_Min_Heap_Size+0x13e4>
    1be0:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1be4:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1be8:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1bec:	5f4f4950 	svcpl	0x004f4950
    1bf0:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1bf4:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1bf8:	5f4c4148 	svcpl	0x004c4148
    1bfc:	4f495047 	svcmi	0x00495047
    1c00:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1c04:	69506574 	ldmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1c08:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
    1c0c:	00524350 	subseq	r4, r2, r0, asr r3
    1c10:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1c14:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1c18:	50470073 	subpl	r0, r7, r3, ror r0
    1c1c:	505f4f49 	subspl	r4, pc, r9, asr #30
    1c20:	525f4e49 	subspl	r4, pc, #1168	; 0x490
    1c24:	54455345 	strbpl	r5, [r5], #-837	; 0xfffffcbb
    1c28:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c2c:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1c30:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1c34:	435f4954 	cmpmi	pc, #84, 18	; 0x150000
    1c38:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c3c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1c40:	52535446 	subspl	r5, r3, #1174405120	; 0x46000000
    1c44:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c48:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1c4c:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1c50:	495f4954 	ldmdbmi	pc, {r2, r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1c54:	61485152 	cmpvs	r8, r2, asr r1
    1c58:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1c5c:	6f690072 	svcvs	0x00690072
    1c60:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    1c64:	00746e65 	rsbseq	r6, r4, r5, ror #28
    1c68:	43535953 	cmpmi	r3, #1359872	; 0x14c000
    1c6c:	545f4746 	ldrbpl	r4, [pc], #-1862	; 1c74 <_Min_Heap_Size+0x1474>
    1c70:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1c74:	52006665 	andpl	r6, r0, #105906176	; 0x6500000
    1c78:	00525354 	subseq	r5, r2, r4, asr r3
    1c7c:	4f495047 	svcmi	0x00495047
    1c80:	2e2e0078 	mcrcs	0, 1, r0, cr14, cr8, {3}
    1c84:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1c88:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1c8c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1c90:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1c94:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1c98:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1ca0 <_Min_Heap_Size+0x14a0>
    1c9c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1ca0:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1ca4:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1ca8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1cac:	5f787834 	svcpl	0x00787834
    1cb0:	5f6c6168 	svcpl	0x006c6168
    1cb4:	6f697067 	svcvs	0x00697067
    1cb8:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
    1cbc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
    1cc0:	00444556 	subeq	r4, r4, r6, asr r5
    1cc4:	4f495047 	svcmi	0x00495047
    1cc8:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
    1ccc:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1cd0:	57530065 	ldrbpl	r0, [r3, -r5, rrx]
    1cd4:	00524549 	subseq	r4, r2, r9, asr #10
    1cd8:	5f4c4148 	svcpl	0x004c4148
    1cdc:	5f414d44 	svcpl	0x00414d44
    1ce0:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1ce4:	4f42415f 	svcmi	0x0042415f
    1ce8:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    1cec:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1cf0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1cf4:	414d445f 	cmpmi	sp, pc, asr r4
    1cf8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    1cfc:	41480074 	hvcmi	32772	; 0x8004
    1d00:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1d04:	65525f41 	ldrbvs	r5, [r2, #-3905]	; 0xfffff0bf
    1d08:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1d0c:	61437265 	cmpvs	r3, r5, ror #4
    1d10:	61626c6c 	cmnvs	r2, ip, ror #24
    1d14:	52006b63 	andpl	r6, r0, #101376	; 0x18c00
    1d18:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1d1c:	30646576 	rsbcc	r6, r4, r6, ror r5
    1d20:	616c6600 	cmnvs	ip, r0, lsl #12
    1d24:	74694267 	strbtvc	r4, [r9], #-615	; 0xfffffd99
    1d28:	66696873 			; <UNDEFINED> instruction: 0x66696873
    1d2c:	66664f74 	uqsub16vs	r4, r6, r4
    1d30:	00746573 	rsbseq	r6, r4, r3, ror r5
    1d34:	69706d74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1d38:	48007273 	stmdami	r0, {r0, r1, r4, r5, r6, r9, ip, sp, lr}
    1d3c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1d44 <_Min_Heap_Size+0x1544>
    1d40:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1d44:	5f524546 	svcpl	0x00524546
    1d48:	544c5043 	strbpl	r5, [ip], #-67	; 0xffffffbd
    1d4c:	5f42435f 	svcpl	0x0042435f
    1d50:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    1d54:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1d5c <_Min_Heap_Size+0x155c>
    1d58:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    1d5c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1d60:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d64:	414d445f 	cmpmi	sp, pc, asr r4
    1d68:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1d6c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1d70:	5f4c4148 	svcpl	0x004c4148
    1d74:	5f414d44 	svcpl	0x00414d44
    1d78:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1d7c:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    1d80:	435f524f 	cmpmi	pc, #-268435452	; 0xf0000004
    1d84:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1d88:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d8c:	414d445f 	cmpmi	sp, pc, asr r4
    1d90:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1d94:	52545f46 	subspl	r5, r4, #280	; 0x118
    1d98:	46534e41 	ldrbmi	r4, [r3], -r1, asr #28
    1d9c:	44005245 	strmi	r5, [r0], #-581	; 0xfffffdbb
    1da0:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    1da4:	6f437465 	svcvs	0x00437465
    1da8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1dac:	2f2e2e00 	svccs	0x002e2e00
    1db0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1db4:	2f737265 	svccs	0x00737265
    1db8:	334d5453 	movtcc	r5, #54355	; 0xd453
    1dbc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1dc0:	41485f78 	hvcmi	34296	; 0x85f8
    1dc4:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1dc8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1dcc:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1dd0:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1dd4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1dd8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1ddc:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 1de4 <_Min_Heap_Size+0x15e4>
    1de0:	632e616d 			; <UNDEFINED> instruction: 0x632e616d
    1de4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1de8:	414d445f 	cmpmi	sp, pc, asr r4
    1dec:	76654c5f 			; <UNDEFINED> instruction: 0x76654c5f
    1df0:	6f436c65 	svcvs	0x00436c65
    1df4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1df8:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1dfc:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1e00:	41480066 	cmpmi	r8, r6, rrx
    1e04:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e08:	55465f41 	strbpl	r5, [r6, #-3905]	; 0xfffff0bf
    1e0c:	545f4c4c 	ldrbpl	r4, [pc], #-3148	; 1e14 <_Min_Heap_Size+0x1614>
    1e10:	534e4152 	movtpl	r4, #57682	; 0xe152
    1e14:	00524546 	subseq	r4, r2, r6, asr #10
    1e18:	65727473 	ldrbvs	r7, [r2, #-1139]!	; 0xfffffb8d
    1e1c:	6e5f6d61 	cdpvs	13, 5, cr6, cr15, cr1, {3}
    1e20:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1e24:	41480072 	hvcmi	32770	; 0x8002
    1e28:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e2c:	61435f41 	cmpvs	r3, r1, asr #30
    1e30:	61626c6c 	cmnvs	r2, ip, ror #24
    1e34:	44496b63 	strbmi	r6, [r9], #-2915	; 0xfffff49d
    1e38:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1e3c:	00666544 	rsbeq	r6, r6, r4, asr #10
    1e40:	5f4c4148 	svcpl	0x004c4148
    1e44:	5f414d44 	svcpl	0x00414d44
    1e48:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1e4c:	43314d5f 	teqmi	r1, #6080	; 0x17c0
    1e50:	5f544c50 	svcpl	0x00544c50
    1e54:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1e58:	6f430044 	svcvs	0x00430044
    1e5c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1e60:	654c6574 	strbvs	r6, [ip, #-1396]	; 0xfffffa8c
    1e64:	006c6576 	rsbeq	r6, ip, r6, ror r5
    1e68:	52434649 	subpl	r4, r3, #76546048	; 0x4900000
    1e6c:	74734400 	ldrbtvc	r4, [r3], #-1024	; 0xfffffc00
    1e70:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1e74:	00737365 	rsbseq	r7, r3, r5, ror #6
    1e78:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1e7c:	6b636162 	blvs	18da40c <_Min_Heap_Size+0x18d9c0c>
    1e80:	44004449 	strmi	r4, [r0], #-1097	; 0xfffffbb7
    1e84:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1e88:	6b636568 	blvs	18db430 <_Min_Heap_Size+0x18dac30>
    1e8c:	6f666946 	svcvs	0x00666946
    1e90:	61726150 	cmnvs	r2, r0, asr r1
    1e94:	4148006d 	cmpmi	r8, sp, rrx
    1e98:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e9c:	6e555f41 	cdpvs	15, 5, cr5, cr5, cr1, {2}
    1ea0:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1ea4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1ea8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1eac:	6b636162 	blvs	18da43c <_Min_Heap_Size+0x18d9c3c>
    1eb0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1eb4:	414d445f 	cmpmi	sp, pc, asr r4
    1eb8:	5152495f 	cmppl	r2, pc, asr r9
    1ebc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1ec0:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1ec4:	5f4c4148 	svcpl	0x004c4148
    1ec8:	5f414d44 	svcpl	0x00414d44
    1ecc:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1ed0:	4c4c415f 	stfmie	f4, [ip], {95}	; 0x5f
    1ed4:	5f42435f 	svcpl	0x0042435f
    1ed8:	44004449 	strmi	r4, [r0], #-1097	; 0xfffffbb7
    1edc:	425f414d 	subsmi	r4, pc, #1073741843	; 0x40000013
    1ee0:	5f657361 	svcpl	0x00657361
    1ee4:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1ee8:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1eec:	4d440073 	stclmi	0, cr0, [r4, #-460]	; 0xfffffe34
    1ef0:	61435f41 	cmpvs	r3, r1, asr #30
    1ef4:	6142636c 	cmpvs	r2, ip, ror #6
    1ef8:	6e416573 	mcrvs	5, 2, r6, cr1, cr3, {3}
    1efc:	74694264 	strbtvc	r4, [r9], #-612	; 0xfffffd9c
    1f00:	66696873 			; <UNDEFINED> instruction: 0x66696873
    1f04:	41480074 	hvcmi	32772	; 0x8004
    1f08:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1f0c:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1f10:	485f5245 	ldmdami	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
    1f14:	43464c41 	movtmi	r4, #27713	; 0x6c41
    1f18:	5f544c50 	svcpl	0x00544c50
    1f1c:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1f20:	41480044 	cmpmi	r8, r4, asr #32
    1f24:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1f28:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1f2c:	4d5f5245 	lfmmi	f5, 2, [pc, #-276]	; 1e20 <_Min_Heap_Size+0x1620>
    1f30:	4c414831 	mcrrmi	8, 3, r4, r1, cr1
    1f34:	4c504346 	mrrcmi	3, 4, r4, r0, cr6
    1f38:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1f3c:	0044495f 	subeq	r4, r4, pc, asr r9
    1f40:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1f44:	72530074 	subsvc	r0, r3, #116	; 0x74
    1f48:	64644163 	strbtvs	r4, [r4], #-355	; 0xfffffe9d
    1f4c:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1f50:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    1f54:	6e654c61 	cdpvs	12, 6, cr4, cr5, cr1, {3}
    1f58:	00687467 	rsbeq	r7, r8, r7, ror #8
    1f5c:	5f4c4148 	svcpl	0x004c4148
    1f60:	5f414d44 	svcpl	0x00414d44
    1f64:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1f68:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1f6c:	61437000 	mrsvs	r7, (UNDEF: 67)
    1f70:	61626c6c 	cmnvs	r2, ip, ror #24
    1f74:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    1f78:	6f656d69 	svcvs	0x00656d69
    1f7c:	72007475 	andvc	r7, r0, #1962934272	; 0x75000000
    1f80:	00736765 	rsbseq	r6, r3, r5, ror #14
    1f84:	6b73616d 	blvs	1cda540 <_Min_Heap_Size+0x1cd9d40>
    1f88:	6c70635f 	ldclvs	3, cr6, [r0], #-380	; 0xfffffe84
    1f8c:	76656c74 			; <UNDEFINED> instruction: 0x76656c74
    1f90:	48006c65 	stmdami	r0, {r0, r2, r5, r6, sl, fp, sp, lr}
    1f94:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1f9c <_Min_Heap_Size+0x179c>
    1f98:	505f414d 	subspl	r4, pc, sp, asr #2
    1f9c:	466c6c6f 	strbtmi	r6, [ip], -pc, ror #24
    1fa0:	7254726f 	subsvc	r7, r4, #-268435450	; 0xf0000006
    1fa4:	66736e61 	ldrbtvs	r6, [r3], -r1, ror #28
    1fa8:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1fac:	00525043 	subseq	r5, r2, r3, asr #32
    1fb0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1fb4:	46747845 	ldrbtmi	r7, [r4], -r5, asr #16
    1fb8:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    1fbc:	2f2e2e00 	svccs	0x002e2e00
    1fc0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1fc4:	2f737265 	svccs	0x00737265
    1fc8:	334d5453 	movtcc	r5, #54355	; 0xd453
    1fcc:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1fd0:	41485f78 	hvcmi	34296	; 0x85f8
    1fd4:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1fd8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1fdc:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1fe0:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1fe4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1fe8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1fec:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    1ff0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1ff4:	00632e78 	rsbeq	r2, r3, r8, ror lr
    1ff8:	5f4c4148 	svcpl	0x004c4148
    1ffc:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    2000:	5f4b4349 	svcpl	0x004b4349
    2004:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2008:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    200c:	435f4c41 	cmpmi	pc, #16640	; 0x4100
    2010:	4554524f 	ldrbmi	r5, [r4, #-591]	; 0xfffffdb1
    2014:	6c435f58 	mcrrvs	15, 5, r5, r3, cr8
    2018:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0xfffffe9b
    201c:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    2020:	53415200 	movtpl	r5, #4608	; 0x1200
    2024:	33415f52 	movtcc	r5, #8018	; 0x1f52
    2028:	50534900 	subspl	r4, r3, r0, lsl #18
    202c:	73490052 	movtvc	r0, #36946	; 0x9052
    2030:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    2034:	62617265 	rsbvs	r7, r1, #1342177286	; 0x50000006
    2038:	5000656c 	andpl	r6, r0, ip, ror #10
    203c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2040:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    2044:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2048:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    204c:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    2050:	4b434954 	blmi	10d45a8 <_Min_Heap_Size+0x10d3da8>
    2054:	5152495f 	cmppl	r2, pc, asr r9
    2058:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    205c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2060:	5f4c4148 	svcpl	0x004c4148
    2064:	4349564e 	movtmi	r5, #38478	; 0x964e
    2068:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    206c:	65507261 	ldrbvs	r7, [r0, #-609]	; 0xfffffd9f
    2070:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    2074:	51524967 	cmppl	r2, r7, ror #18
    2078:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    207c:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xfffff2a1
    2080:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2084:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2088:	53415200 	movtpl	r5, #4608	; 0x1200
    208c:	31415f52 	cmpcc	r1, r2, asr pc
    2090:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
    2094:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    2098:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 1ed0 <_Min_Heap_Size+0x16d0>
    209c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    20a0:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    20a4:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    20a8:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    20ac:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    20b0:	5f5f0079 	svcpl	0x005f0079
    20b4:	4349564e 	movtmi	r5, #38478	; 0x964e
    20b8:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    20bc:	65507261 	ldrbvs	r7, [r0, #-609]	; 0xfffffd9f
    20c0:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    20c4:	51524967 	cmppl	r2, r7, ror #18
    20c8:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    20cc:	5f434956 	svcpl	0x00434956
    20d0:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    20d4:	65526d65 	ldrbvs	r6, [r2, #-3429]	; 0xfffff29b
    20d8:	00746573 	rsbseq	r6, r4, r3, ror r5
    20dc:	52414252 	subpl	r4, r1, #536870917	; 0x20000005
    20e0:	0031415f 	eorseq	r4, r1, pc, asr r1
    20e4:	52414252 	subpl	r4, r1, #536870917	; 0x20000005
    20e8:	0032415f 	eorseq	r4, r2, pc, asr r1
    20ec:	52414252 	subpl	r4, r1, #536870917	; 0x20000005
    20f0:	0033415f 	eorseq	r4, r3, pc, asr r1
    20f4:	5f55504d 	svcpl	0x0055504d
    20f8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    20fc:	65725000 	ldrbvs	r5, [r2, #-0]!
    2100:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    2104:	6f697250 	svcvs	0x00697250
    2108:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    210c:	73746942 	cmnvc	r4, #1081344	; 0x108000
    2110:	53415200 	movtpl	r5, #4608	; 0x1200
    2114:	32415f52 	subcc	r5, r1, #328	; 0x148
    2118:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
    211c:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2120:	5f6e6f69 	svcpl	0x006e6f69
    2124:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2128:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    212c:	00666544 	rsbeq	r6, r6, r4, asr #10
    2130:	61437349 	cmpvs	r3, r9, asr #6
    2134:	61656863 	cmnvs	r5, r3, ror #16
    2138:	00656c62 	rsbeq	r6, r5, r2, ror #24
    213c:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
    2140:	5f6b6369 	svcpl	0x006b6369
    2144:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    2148:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    214c:	5f434956 	svcpl	0x00434956
    2150:	61736944 	cmnvs	r3, r4, asr #18
    2154:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2158:	48005152 	stmdami	r0, {r1, r4, r6, r8, ip, lr}
    215c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    2160:	5f434956 	svcpl	0x00434956
    2164:	50746547 	rsbspl	r6, r4, r7, asr #10
    2168:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    216c:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    2170:	41480051 	qdaddmi	r0, r1, r8
    2174:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    2178:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    217c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2180:	7365526d 	cmnvc	r5, #-805306362	; 0xd0000006
    2184:	72007465 	andvc	r7, r0, #1694498816	; 0x65000000
    2188:	765f6765 	ldrbvc	r6, [pc], -r5, ror #14
    218c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2190:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
    2194:	70004249 	andvc	r4, r0, r9, asr #4
    2198:	65657250 	strbvs	r7, [r5, #-592]!	; 0xfffffdb0
    219c:	5074706d 	rsbspl	r7, r4, sp, rrx
    21a0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    21a4:	00797469 	rsbseq	r7, r9, r9, ror #8
    21a8:	65636341 	strbvs	r6, [r3, #-833]!	; 0xfffffcbf
    21ac:	65507373 	ldrbvs	r7, [r0, #-883]	; 0xfffffc8d
    21b0:	73696d72 	cmnvc	r9, #7296	; 0x1c80
    21b4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    21b8:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
    21bc:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    21c0:	5f5f0079 	svcpl	0x005f0079
    21c4:	33746e69 	cmncc	r4, #1680	; 0x690
    21c8:	00745f32 	rsbseq	r5, r4, r2, lsr pc
    21cc:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    21d0:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    21d4:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    21d8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    21dc:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    21e0:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    21e4:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    21e8:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    21ec:	5f434956 	svcpl	0x00434956
    21f0:	41746547 	cmnmi	r4, r7, asr #10
    21f4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    21f8:	5f5f0065 	svcpl	0x005f0065
    21fc:	00425344 	subeq	r5, r2, r4, asr #6
    2200:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2204:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2208:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    220c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2210:	70007974 	andvc	r7, r0, r4, ror r9
    2214:	50627553 	rsbpl	r7, r2, r3, asr r5
    2218:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    221c:	00797469 	rsbseq	r7, r9, r9, ror #8
    2220:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2224:	70007265 	andvc	r7, r0, r5, ror #4
    2228:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    222c:	67797469 	ldrbvs	r7, [r9, -r9, ror #8]!
    2230:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2234:	414f4c00 	cmpmi	pc, r0, lsl #24
    2238:	69740044 	ldmdbvs	r4!, {r2, r6}^
    223c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2240:	52424149 	subpl	r4, r2, #1073741842	; 0x40000012
    2244:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    2248:	5f434956 	svcpl	0x00434956
    224c:	50746547 	rsbspl	r6, r4, r7, asr #10
    2250:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2254:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    2258:	5f5f0051 	svcpl	0x005f0051
    225c:	00425349 	subeq	r5, r2, r9, asr #6
    2260:	4349564e 	movtmi	r5, #38478	; 0x964e
    2264:	636e455f 	cmnvs	lr, #398458880	; 0x17c00000
    2268:	5065646f 	rsbpl	r6, r5, pc, ror #8
    226c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2270:	00797469 	rsbseq	r7, r9, r9, ror #8
    2274:	52454349 	subpl	r4, r5, #603979777	; 0x24000001
    2278:	62755300 	rsbsvs	r5, r5, #0, 6
    227c:	6f697250 	svcvs	0x00697250
    2280:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2284:	73746942 	cmnvc	r4, #1081344	; 0x108000
    2288:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    228c:	65445f43 	strbvs	r5, [r4, #-3907]	; 0xfffff0bd
    2290:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    2294:	6f697250 	svcvs	0x00697250
    2298:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    229c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    22a0:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    22a4:	4b434954 	blmi	10d47fc <_Min_Heap_Size+0x10d3ffc>
    22a8:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    22ac:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    22b0:	6944006b 	stmdbvs	r4, {r0, r1, r3, r5, r6}^
    22b4:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    22b8:	65784565 	ldrbvs	r4, [r8, #-1381]!	; 0xfffffa9b
    22bc:	5f5f0063 	svcpl	0x005f0063
    22c0:	00424d44 	subeq	r4, r2, r4, asr #26
    22c4:	52627553 	rsbpl	r7, r2, #348127232	; 0x14c00000
    22c8:	6f696765 	svcvs	0x00696765
    22cc:	7369446e 	cmnvc	r9, #1845493760	; 0x6e000000
    22d0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    22d4:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
    22d8:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    22dc:	545f4349 	ldrbpl	r4, [pc], #-841	; 22e4 <_Min_Heap_Size+0x1ae4>
    22e0:	00657079 	rsbeq	r7, r5, r9, ror r0
    22e4:	5f4c4148 	svcpl	0x004c4148
    22e8:	4349564e 	movtmi	r5, #38478	; 0x964e
    22ec:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    22f0:	6f697250 	svcvs	0x00697250
    22f4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    22f8:	756f7247 	strbvc	r7, [pc, #-583]!	; 20b9 <_Min_Heap_Size+0x18b9>
    22fc:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    2300:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    2304:	5f434956 	svcpl	0x00434956
    2308:	50746553 	rsbspl	r6, r4, r3, asr r5
    230c:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2310:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    2314:	5f5f0051 	svcpl	0x005f0051
    2318:	4349564e 	movtmi	r5, #38478	; 0x964e
    231c:	616e455f 	cmnvs	lr, pc, asr r5
    2320:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2324:	52005152 	andpl	r5, r0, #-2147483628	; 0x80000014
    2328:	00524142 	subseq	r4, r2, r2, asr #2
    232c:	6f697250 	svcvs	0x00697250
    2330:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2334:	756f7247 	strbvc	r7, [pc, #-583]!	; 20f5 <_Min_Heap_Size+0x18f5>
    2338:	706d5470 	rsbvc	r5, sp, r0, ror r4
    233c:	51524900 	cmppl	r2, r0, lsl #18
    2340:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2344:	54006570 	strpl	r6, [r0], #-1392	; 0xfffffa90
    2348:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    234c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2350:	53415200 	movtpl	r5, #4608	; 0x1200
    2354:	41480052 	qdaddmi	r0, r2, r8
    2358:	59535f4c 	ldmdbpl	r3, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    235c:	43495453 	movtmi	r5, #37971	; 0x9453
    2360:	4c435f4b 	mcrrmi	15, 4, r5, r3, cr11
    2364:	756f534b 	strbvc	r5, [pc, #-843]!	; 2021 <_Min_Heap_Size+0x1821>
    2368:	43656372 	cmnmi	r5, #-939524095	; 0xc8000001
    236c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2370:	59540067 	ldmdbpl	r4, {r0, r1, r2, r5, r6}^
    2374:	48004550 	stmdami	r0, {r4, r6, r8, sl, lr}
    2378:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 227c <_Min_Heap_Size+0x1a7c>
    237c:	435f5550 	cmpmi	pc, #80, 10	; 0x14000000
    2380:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2384:	67655267 	strbvs	r5, [r5, -r7, ror #4]!
    2388:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    238c:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
    2390:	5f6b6369 	svcpl	0x006b6369
    2394:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2398:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    239c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    23a0:	5f434956 	svcpl	0x00434956
    23a4:	50746547 	rsbspl	r6, r4, r7, asr #10
    23a8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    23ac:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    23b0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    23b4:	00676e69 	rsbeq	r6, r7, r9, ror #28
    23b8:	5f4c4148 	svcpl	0x004c4148
    23bc:	5f55504d 	svcpl	0x0055504d
    23c0:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    23c4:	4300656c 	movwmi	r6, #1388	; 0x56c
    23c8:	004c5254 	subeq	r5, ip, r4, asr r2
    23cc:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    23d0:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    23d4:	63417465 	movtvs	r7, #5221	; 0x1465
    23d8:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    23dc:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    23e0:	5f434956 	svcpl	0x00434956
    23e4:	50746547 	rsbspl	r6, r4, r7, asr #10
    23e8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    23ec:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    23f0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    23f4:	00676e69 	rsbeq	r6, r7, r9, ror #28
    23f8:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
    23fc:	53734900 	cmnpl	r3, #0, 18
    2400:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    2404:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2408:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    240c:	5f434956 	svcpl	0x00434956
    2410:	50746553 	rsbspl	r6, r4, r3, asr r5
    2414:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2418:	00797469 	rsbseq	r7, r9, r9, ror #8
    241c:	5f4c4148 	svcpl	0x004c4148
    2420:	4349564e 	movtmi	r5, #38478	; 0x964e
    2424:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    2428:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    242c:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2430:	4d005152 	stfmis	f5, [r0, #-328]	; 0xfffffeb8
    2434:	545f5550 	ldrbpl	r5, [pc], #-1360	; 243c <_Min_Heap_Size+0x1c3c>
    2438:	00657079 	rsbeq	r7, r5, r9, ror r0
    243c:	5f4c4148 	svcpl	0x004c4148
    2440:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    2444:	65566c61 	ldrbvs	r6, [r6, #-3169]	; 0xfffff39f
    2448:	6f697372 	svcvs	0x00697372
    244c:	4148006e 	cmpmi	r8, lr, rrx
    2450:	69545f4c 	ldmdbvs	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2454:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    2458:	79547165 	ldmdbvc	r4, {r0, r2, r5, r6, r8, ip, sp, lr}^
    245c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    2460:	69540066 	ldmdbvs	r4, {r1, r2, r5, r6}^
    2464:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
    2468:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    246c:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    2470:	535f4c41 	cmppl	pc, #16640	; 0x4100
    2474:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2478:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    247c:	49007165 	stmdbmi	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    2480:	444f4344 	strbmi	r4, [pc], #-836	; 2488 <_Min_Heap_Size+0x1c88>
    2484:	41480045 	cmpmi	r8, r5, asr #32
    2488:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    248c:	44495574 	strbmi	r5, [r9], #-1396	; 0xfffffa8c
    2490:	48003277 	stmdami	r0, {r0, r1, r2, r4, r5, r6, r9, ip, sp}
    2494:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 249c <_Min_Heap_Size+0x1c9c>
    2498:	434d4742 	movtmi	r4, #55106	; 0xd742
    249c:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    24a0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    24a4:	53474244 	movtpl	r4, #29252	; 0x7244
    24a8:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    24ac:	6f4d7962 	svcvs	0x004d7962
    24b0:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    24b4:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    24b8:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    24bc:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
    24c0:	48006f69 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    24c4:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 24cc <_Min_Heap_Size+0x1ccc>
    24c8:	5f4b4349 	svcpl	0x004b4349
    24cc:	51455246 	cmppl	r5, r6, asr #4
    24d0:	4830315f 	ldmdami	r0!, {r0, r1, r2, r3, r4, r6, r8, ip, sp}
    24d4:	4148005a 	qdaddmi	r0, sl, r8
    24d8:	734d5f4c 	movtvc	r5, #57164	; 0xdf4c
    24dc:	49654470 	stmdbmi	r5!, {r4, r5, r6, sl, lr}^
    24e0:	0074696e 	rsbseq	r6, r4, lr, ror #18
    24e4:	5f4c4148 	svcpl	0x004c4148
    24e8:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    24ec:	445f5543 	ldrbmi	r5, [pc], #-1347	; 24f4 <_Min_Heap_Size+0x1cf4>
    24f0:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    24f4:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    24f8:	656c5347 	strbvs	r5, [ip, #-839]!	; 0xfffffcb9
    24fc:	6f4d7065 	svcvs	0x004d7065
    2500:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    2504:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 250c <_Min_Heap_Size+0x1d0c>
    2508:	5f4b4349 	svcpl	0x004b4349
    250c:	51455246 	cmppl	r5, r6, asr #4
    2510:	3030315f 	eorscc	r3, r0, pc, asr r1
    2514:	48005a48 	stmdami	r0, {r3, r6, r9, fp, ip, lr}
    2518:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2520 <_Min_Heap_Size+0x1d20>
    251c:	434d4742 	movtmi	r4, #55106	; 0xd742
    2520:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    2524:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    2528:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    252c:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    2530:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2534:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2538:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    253c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2540:	69547775 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    2544:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    2548:	75007165 	strvc	r7, [r0, #-357]	; 0xfffffe9b
    254c:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    2550:	4148006b 	cmpmi	r8, fp, rrx
    2554:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2558:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    255c:	5f514552 	svcpl	0x00514552
    2560:	5a484b31 	bpl	121522c <_Min_Heap_Size+0x1214a2c>
    2564:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2568:	4742445f 	smlsldmi	r4, r2, pc, r4	; <UNPREDICTABLE>
    256c:	5f55434d 	svcpl	0x0055434d
    2570:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    2574:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    2578:	6f745347 	svcvs	0x00745347
    257c:	646f4d70 	strbtvs	r4, [pc], #-3440	; 2584 <_Min_Heap_Size+0x1d84>
    2580:	50410065 	subpl	r0, r1, r5, rrx
    2584:	5a463242 	bpl	118ee94 <_Min_Heap_Size+0x118e694>
    2588:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    258c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2590:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    2594:	41480030 	cmpmi	r8, r0, lsr r0
    2598:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    259c:	44495574 	strbmi	r5, [r9], #-1396	; 0xfffffa8c
    25a0:	48003177 	stmdami	r0, {r0, r1, r2, r4, r5, r6, r8, ip, sp}
    25a4:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 25ac <_Min_Heap_Size+0x1dac>
    25a8:	5f4b4349 	svcpl	0x004b4349
    25ac:	51455246 	cmppl	r5, r6, asr #4
    25b0:	4645445f 			; <UNDEFINED> instruction: 0x4645445f
    25b4:	544c5541 	strbpl	r5, [ip], #-1345	; 0xfffffabf
    25b8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    25bc:	7365525f 	cmnvc	r5, #-268435451	; 0xf0000005
    25c0:	54656d75 	strbtpl	r6, [r5], #-3445	; 0xfffff28b
    25c4:	006b6369 	rsbeq	r6, fp, r9, ror #6
    25c8:	31425041 	cmpcc	r2, r1, asr #32
    25cc:	48005a46 	stmdami	r0, {r1, r2, r6, r9, fp, ip, lr}
    25d0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 25d8 <_Min_Heap_Size+0x1dd8>
    25d4:	434d4742 	movtmi	r4, #55106	; 0xd742
    25d8:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    25dc:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    25e0:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    25e4:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    25e8:	4d796264 	lfmmi	f6, 2, [r9, #-400]!	; 0xfffffe70
    25ec:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25f0:	5f4c4148 	svcpl	0x004c4148
    25f4:	70737553 	rsbsvc	r7, r3, r3, asr r5
    25f8:	54646e65 	strbtpl	r6, [r4], #-3685	; 0xfffff19b
    25fc:	006b6369 	rsbeq	r6, fp, r9, ror #6
    2600:	5f4c4148 	svcpl	0x004c4148
    2604:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    2608:	455f5543 	ldrbmi	r5, [pc, #-1347]	; 20cd <_Min_Heap_Size+0x18cd>
    260c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2610:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2614:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    2618:	646f4d70 	strbtvs	r4, [pc], #-3440	; 2620 <_Min_Heap_Size+0x1e20>
    261c:	42440065 	submi	r0, r4, #101	; 0x65
    2620:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2624:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    2628:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    262c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2630:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2634:	49564552 	ldmdbmi	r6, {r1, r4, r6, r8, sl, lr}^
    2638:	41480044 	cmpmi	r8, r4, asr #32
    263c:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    2640:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    2644:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    2648:	72700071 	rsbsvc	r0, r0, #113	; 0x71
    264c:	69547665 	ldmdbvs	r4, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
    2650:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    2654:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    2658:	455f4c41 	ldrbmi	r4, [pc, #-3137]	; 1a1f <_Min_Heap_Size+0x121f>
    265c:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2660:	6d6f4365 	stclvs	3, cr4, [pc, #-404]!	; 24d4 <_Min_Heap_Size+0x1cd4>
    2664:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    2668:	6f697461 	svcvs	0x00697461
    266c:	6c65436e 	stclvs	3, cr4, [r5], #-440	; 0xfffffe48
    2670:	2e2e006c 	cdpcs	0, 2, cr0, cr14, cr12, {3}
    2674:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    2678:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    267c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    2680:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    2684:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2688:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2690 <_Min_Heap_Size+0x1e90>
    268c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2690:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    2694:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    2698:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    269c:	5f787834 	svcpl	0x00787834
    26a0:	2e6c6168 	powcsez	f6, f4, #0.0
    26a4:	41480063 	cmpmi	r8, r3, rrx
    26a8:	69445f4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    26ac:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    26b0:	6d6f4365 	stclvs	3, cr4, [pc, #-404]!	; 2524 <_Min_Heap_Size+0x1d24>
    26b4:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    26b8:	6f697461 	svcvs	0x00697461
    26bc:	6c65436e 	stclvs	3, cr4, [r5], #-440	; 0xfffffe48
    26c0:	4148006c 	cmpmi	r8, ip, rrx
    26c4:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    26c8:	56454474 			; <UNDEFINED> instruction: 0x56454474
    26cc:	2e004449 	cdpcs	4, 0, cr4, cr0, cr9, {2}
    26d0:	6f432f2e 	svcvs	0x00432f2e
    26d4:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    26d8:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    26dc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    26e0:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    26e4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    26e8:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    26ec:	6c700063 	ldclvs	0, cr0, [r0], #-396	; 0xfffffe74
    26f0:	756f736c 	strbvc	r7, [pc, #-876]!	; 238c <_Min_Heap_Size+0x1b8c>
    26f4:	00656372 	rsbeq	r6, r5, r2, ror r3
    26f8:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    26fc:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
    2700:	53007469 	movwpl	r7, #1129	; 0x469
    2704:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2708:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
    270c:	6f6c4365 	svcvs	0x006c4365
    2710:	70556b63 	subsvc	r6, r5, r3, ror #22
    2714:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    2718:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    271c:	00747865 	rsbseq	r7, r4, r5, ror #16
    2720:	6f63706f 	svcvs	0x0063706f
    2724:	695f6564 	ldmdbvs	pc, {r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    2728:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    272c:	5f726f5f 	svcpl	0x00726f5f
    2730:	00786c62 	rsbseq	r6, r8, r2, ror #24
    2734:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2738:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    273c:	5f656d61 	svcpl	0x00656d61
    2740:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
    2744:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    2748:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
    274c:	5f6b6361 	svcpl	0x006b6361
    2750:	6c6c7566 	cfstr64vs	mvdx7, [ip], #-408	; 0xfffffe68
    2754:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    2758:	66007865 	strvs	r7, [r0], -r5, ror #16
    275c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2760:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    2764:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
    2768:	6174735f 	cmnvs	r4, pc, asr r3
    276c:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    2770:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2774:	73735f00 	cmnvc	r3, #0, 30
    2778:	6b636174 	blvs	18dad50 <_Min_Heap_Size+0x18da550>
    277c:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2780:	645f746c 	ldrbvs	r7, [pc], #-1132	; 2788 <_Min_Heap_Size+0x1f88>
    2784:	5f706d75 	svcpl	0x00706d75
    2788:	735f6d62 	cmpvc	pc, #6272	; 0x1880
    278c:	6b636174 	blvs	18dad64 <_Min_Heap_Size+0x18da564>
    2790:	696f705f 	stmdbvs	pc!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    2794:	6600746e 	strvs	r7, [r0], -lr, ror #8
    2798:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    279c:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    27a0:	706f5f70 	rsbvc	r5, pc, r0, ror pc	; <UNPREDICTABLE>
    27a4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    27a8:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    27ac:	645f746c 	ldrbvs	r7, [pc], #-1132	; 27b4 <_Min_Heap_Size+0x1fb4>
    27b0:	5f706d75 	svcpl	0x00706d75
    27b4:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    27b8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    27bc:	696c006b 	stmdbvs	ip!, {r0, r1, r3, r5, r6}^
    27c0:	72656b6e 	rsbvc	r6, r5, #112640	; 0x1b800
    27c4:	61747300 	cmnvs	r4, r0, lsl #6
    27c8:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    27cc:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27d0:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    27d4:	5f6c6175 	svcpl	0x006c6175
    27d8:	706f0074 	rsbvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
    27dc:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    27e0:	706f0031 	rsbvc	r0, pc, r1, lsr r0	; <UNPREDICTABLE>
    27e4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    27e8:	74730032 	ldrbtvc	r0, [r3], #-50	; 0xffffffce
    27ec:	5f6b6361 	svcpl	0x006b6361
    27f0:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    27f4:	616d5f65 	cmnvs	sp, r5, ror #30
    27f8:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
    27fc:	61747300 	cmnvs	r4, r0, lsl #6
    2800:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2804:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2808:	61747300 	cmnvs	r4, r0, lsl #6
    280c:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2810:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2814:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    2818:	5f747065 	svcpl	0x00747065
    281c:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
    2820:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    2824:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
    2828:	5f6b6361 	svcpl	0x006b6361
    282c:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    2830:	6f425f00 	svcvs	0x00425f00
    2834:	2e006c6f 	cdpcs	12, 0, cr6, cr0, cr15, {3}
    2838:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    283c:	2f2e2e2f 	svccs	0x002e2e2f
    2840:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2844:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2848:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    284c:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2850:	2f706d75 	svccs	0x00706d75
    2854:	2f637273 	svccs	0x00637273
    2858:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    285c:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    2860:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
    2864:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
    2868:	00726566 	rsbseq	r6, r2, r6, ror #10
    286c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2870:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2874:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    2878:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    287c:	66007265 	strvs	r7, [r0], -r5, ror #4
    2880:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2884:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    2888:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    288c:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
    2890:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    2894:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
    2898:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 270c <_Min_Heap_Size+0x1f0c>
    289c:	73005053 	movwvc	r5, #83	; 0x53
    28a0:	6b636174 	blvs	18dae78 <_Min_Heap_Size+0x18da678>
    28a4:	6172665f 	cmnvs	r2, pc, asr r6
    28a8:	655f656d 	ldrbvs	r6, [pc, #-1389]	; 2343 <_Min_Heap_Size+0x1b43>
    28ac:	70656378 	rsbvc	r6, r5, r8, ror r3
    28b0:	655f0074 	ldrbvs	r0, [pc, #-116]	; 2844 <_Min_Heap_Size+0x2044>
    28b4:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    28b8:	2f2e2e00 	svccs	0x002e2e00
    28bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    28c0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    28c4:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    28c8:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    28cc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    28d0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    28d4:	70632f70 	rsbvc	r2, r3, r0, ror pc
    28d8:	6f632f75 	svcvs	0x00632f75
    28dc:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    28e0:	2f346d2d 	svccs	0x00346d2d
    28e4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    28e8:	61682d74 	smcvs	33492	; 0x82d4
    28ec:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    28f0:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    28f4:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    28f8:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    28fc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    2900:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    2904:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2908:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    290c:	00732e78 	rsbseq	r2, r3, r8, ror lr
    2910:	20554e47 	subscs	r4, r5, r7, asr #28
    2914:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    2918:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    291c:	2e2e0031 	mcrcs	0, 1, r0, cr14, cr1, {1}
    2920:	2f2e2e2f 	svccs	0x002e2e2f
    2924:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2874 <_Min_Heap_Size+0x2074>
    2928:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    292c:	2f736c69 	svccs	0x00736c69
    2930:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2934:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    2938:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    293c:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    2940:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    2944:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    2948:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    294c:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    2950:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Heap_Size+0x10d0524>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
  errno = ENOMEM;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
}
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    if (status != HAL_OK)
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
      uwTickFreq = prevTickFreq;
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  errno = ENOMEM;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000014 	andeq	r0, r0, r4, lsl r0
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00000000 	andeq	r0, r0, r0
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      1c:	00000048 	andeq	r0, r0, r8, asr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
      24:	00018e02 	andeq	r8, r1, r2, lsl #28
}
      28:	0000000c 	andeq	r0, r0, ip
      2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      30:	7c020001 	stcvc	0, cr0, [r2], {1}
    if (status != HAL_OK)
      34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      uwTickFreq = prevTickFreq;
      38:	0000000c 	andeq	r0, r0, ip
      3c:	00000028 	andeq	r0, r0, r8, lsr #32
      40:	00000000 	andeq	r0, r0, r0
      44:	00000002 	andeq	r0, r0, r2
      if (pllsource != 0)
      48:	0000000c 	andeq	r0, r0, ip
      4c:	00000028 	andeq	r0, r0, r8, lsr #32
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00000000 	andeq	r0, r0, r0
      54:	00000004 	andeq	r0, r0, r4
      58:	00000014 	andeq	r0, r0, r4, lsl r0
      5c:	00000028 	andeq	r0, r0, r8, lsr #32
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00000000 	andeq	r0, r0, r0
      64:	00000010 	andeq	r0, r0, r0, lsl r0
      68:	83080e41 	movwhi	r0, #36417	; 0x8e41
      SystemCoreClock = pllvco/pllp;
      6c:	00018e02 	andeq	r8, r1, r2, lsl #28
      70:	00000014 	andeq	r0, r0, r4, lsl r0
      break;
      74:	00000028 	andeq	r0, r0, r8, lsr #32
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00000000 	andeq	r0, r0, r0
      7c:	0000000c 	andeq	r0, r0, ip
      80:	83080e41 	movwhi	r0, #36417	; 0x8e41
      84:	00018e02 	andeq	r8, r1, r2, lsl #28
      88:	00000018 	andeq	r0, r0, r8, lsl r0
      8c:	00000028 	andeq	r0, r0, r8, lsr #32
      90:	0800060c 	stmdaeq	r0, {r2, r3, r9, sl}
      94:	00000020 	andeq	r0, r0, r0, lsr #32
      98:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
      9c:	86038504 	strhi	r8, [r3], -r4, lsl #10
      a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      a4:	00000018 	andeq	r0, r0, r8, lsl r0
      a8:	00000028 	andeq	r0, r0, r8, lsr #32
      ac:	0800062c 	stmdaeq	r0, {r2, r3, r5, r9, sl}
      b0:	0000001c 	andeq	r0, r0, ip, lsl r0
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	86038504 	strhi	r8, [r3], -r4, lsl #10
      bc:	00018e02 	andeq	r8, r1, r2, lsl #28
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0000000c 	andeq	r0, r0, ip
      c4:	00000028 	andeq	r0, r0, r8, lsr #32
      c8:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	00000006 	andeq	r0, r0, r6
      d0:	0000000c 	andeq	r0, r0, ip
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	00000028 	andeq	r0, r0, r8, lsr #32
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	0800064e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl}
      dc:	0000000a 	andeq	r0, r0, sl
      e0:	0000000c 	andeq	r0, r0, ip
    if (huart->hdmarx != NULL)
      e4:	00000028 	andeq	r0, r0, r8, lsr #32
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	08000658 	stmdaeq	r0, {r3, r4, r6, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	00000004 	andeq	r0, r0, r4
      f0:	0000000c 	andeq	r0, r0, ip
    huart->TxXferCount = 0x00U;
      f4:	00000028 	andeq	r0, r0, r8, lsr #32
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	0800065c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl}
    huart->gState  = HAL_UART_STATE_READY;
      fc:	00000004 	andeq	r0, r0, r4
    huart->RxState = HAL_UART_STATE_READY;
     100:	0000001c 	andeq	r0, r0, ip, lsl r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000028 	andeq	r0, r0, r8, lsr #32
    HAL_UART_AbortCpltCallback(huart);
     108:	00000000 	andeq	r0, r0, r0
     10c:	0000000a 	andeq	r0, r0, sl
  uint32_t AbortCplt = 0x01U;
     110:	810c0e41 	tsthi	ip, r1, asr #28
  if (AbortCplt == 0x01U)
     114:	83028203 	movwhi	r8, #8707	; 0x2203
}
     118:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
     11c:	00000ec1 	andeq	r0, r0, r1, asr #29
     120:	00000014 	andeq	r0, r0, r4, lsl r0
     124:	00000028 	andeq	r0, r0, r8, lsr #32
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	00000000 	andeq	r0, r0, r0
     12c:	00000010 	andeq	r0, r0, r0, lsl r0
     130:	83080e41 	movwhi	r0, #36417	; 0x8e41
     134:	00018e02 	andeq	r8, r1, r2, lsl #28
     138:	00000014 	andeq	r0, r0, r4, lsl r0
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	00000028 	andeq	r0, r0, r8, lsr #32
     140:	00000000 	andeq	r0, r0, r0
     144:	00000010 	andeq	r0, r0, r0, lsl r0
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	83080e41 	movwhi	r0, #36417	; 0x8e41
     14c:	00018e02 	andeq	r8, r1, r2, lsl #28
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	0000000c 	andeq	r0, r0, ip
     154:	00000028 	andeq	r0, r0, r8, lsr #32
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	00000000 	andeq	r0, r0, r0
     15c:	00000006 	andeq	r0, r0, r6
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000028 	andeq	r0, r0, r8, lsr #32
     168:	00000000 	andeq	r0, r0, r0
     16c:	0000000a 	andeq	r0, r0, sl
     170:	00000014 	andeq	r0, r0, r4, lsl r0
}
     174:	00000028 	andeq	r0, r0, r8, lsr #32
     178:	00000000 	andeq	r0, r0, r0
     17c:	00000010 	andeq	r0, r0, r0, lsl r0
     180:	83080e41 	movwhi	r0, #36417	; 0x8e41
}
     184:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	00000014 	andeq	r0, r0, r4, lsl r0
     18c:	00000028 	andeq	r0, r0, r8, lsr #32
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00000000 	andeq	r0, r0, r0
     194:	00000010 	andeq	r0, r0, r0, lsl r0
     198:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	00018e02 	andeq	r8, r1, r2, lsl #28
     1a0:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	00000028 	andeq	r0, r0, r8, lsr #32
     1a8:	00000000 	andeq	r0, r0, r0
     1ac:	00000010 	andeq	r0, r0, r0, lsl r0
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1b4:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	0000000c 	andeq	r0, r0, ip
     1bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     1c0:	7c020001 	stcvc	0, cr0, [r2], {1}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1c8:	00000018 	andeq	r0, r0, r8, lsl r0
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     1d0:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
     1d4:	00000020 	andeq	r0, r0, r0, lsr #32
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     1dc:	100e4101 	andne	r4, lr, r1, lsl #2
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00040e4a 	andeq	r0, r4, sl, asr #28
     1e4:	00000014 	andeq	r0, r0, r4, lsl r0
     1e8:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	00000000 	andeq	r0, r0, r0
     1f0:	00000020 	andeq	r0, r0, r0, lsr #32
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     1fc:	0000001c 	andeq	r0, r0, ip, lsl r0
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	08000680 	stmdaeq	r0, {r7, r9, sl}
     208:	0000004c 	andeq	r0, r0, ip, asr #32
     20c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     214:	180e4101 	stmdane	lr, {r0, r8, lr}
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	000c0e5f 	andeq	r0, ip, pc, asr lr
     21c:	00000014 	andeq	r0, r0, r4, lsl r0
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	080006cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl}
     228:	00000018 	andeq	r0, r0, r8, lsl r0
  tmp = hdma->Instance->FCR;
     22c:	83080e41 	movwhi	r0, #36417	; 0x8e41
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00018e02 	andeq	r8, r1, r2, lsl #28
  tmp |= hdma->Init.FIFOMode;
     234:	00000014 	andeq	r0, r0, r4, lsl r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
    tmp |= hdma->Init.FIFOThreshold;
     23c:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00000018 	andeq	r0, r0, r8, lsl r0
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	83080e41 	movwhi	r0, #36417	; 0x8e41
     248:	00018e02 	andeq	r8, r1, r2, lsl #28
  hdma->Instance->FCR = tmp;
     24c:	00000014 	andeq	r0, r0, r4, lsl r0
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
     258:	00000018 	andeq	r0, r0, r8, lsl r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	83080e41 	movwhi	r0, #36417	; 0x8e41
  hdma->State = HAL_DMA_STATE_READY;
     260:	00018e02 	andeq	r8, r1, r2, lsl #28
     264:	00000014 	andeq	r0, r0, r4, lsl r0
  return HAL_OK;
     268:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     26c:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
     270:	00000018 	andeq	r0, r0, r8, lsl r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	83080e41 	movwhi	r0, #36417	; 0x8e41
     278:	00018e02 	andeq	r8, r1, r2, lsl #28
     27c:	00000014 	andeq	r0, r0, r4, lsl r0
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
        hdma->State = HAL_DMA_STATE_READY;
     284:	0800072c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl}
        return HAL_ERROR; 
     288:	00000018 	andeq	r0, r0, r8, lsl r0
    return HAL_ERROR;
     28c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00018e02 	andeq	r8, r1, r2, lsl #28
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00000014 	andeq	r0, r0, r4, lsl r0
     298:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
      tickstart = HAL_GetTick();
     29c:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00000018 	andeq	r0, r0, r8, lsl r0
     2a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     2a8:	00018e02 	andeq	r8, r1, r2, lsl #28
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	00000014 	andeq	r0, r0, r4, lsl r0
     2b0:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     2b4:	0800075c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl}
          return HAL_TIMEOUT;
     2b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     2c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     2c4:	00000014 	andeq	r0, r0, r4, lsl r0
    FlagStatus       pwrclkchanged = RESET;
     2c8:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
     2d0:	00000018 	andeq	r0, r0, r8, lsl r0
     2d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      tickstart = HAL_GetTick();
     2d8:	00018e02 	andeq	r8, r1, r2, lsl #28
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     2e0:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     2e4:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	000000a4 	andeq	r0, r0, r4, lsr #1
     2ec:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
          return HAL_TIMEOUT;
     2f0:	580e4101 	stmdapl	lr, {r0, r8, lr}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	0e0a4602 	cfmadd32eq	mvax0, mvfx4, mvfx10, mvfx2
     2f8:	000b4204 	andeq	r4, fp, r4, lsl #4
     2fc:	00000014 	andeq	r0, r0, r4, lsl r0
     300:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     304:	080007a0 	stmdaeq	r0, {r5, r7, r8, r9, sl}
     308:	00000014 	andeq	r0, r0, r4, lsl r0
     30c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     310:	00018e02 	andeq	r8, r1, r2, lsl #28
      tickstart = HAL_GetTick();
     314:	0000000c 	andeq	r0, r0, ip
     318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	7c020001 	stcvc	0, cr0, [r2], {1}
     320:	000d0c0e 	andeq	r0, sp, lr, lsl #24
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00000014 	andeq	r0, r0, r4, lsl r0
     328:	00000314 	andeq	r0, r0, r4, lsl r3
     32c:	080007b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl}
     330:	0000004c 	andeq	r0, r0, ip, asr #32
          return HAL_TIMEOUT;
     334:	61100e41 	tstvs	r0, r1, asr #28
    if(pwrclkchanged == SET)
     338:	0000000e 	andeq	r0, r0, lr
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0000000c 	andeq	r0, r0, ip
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     344:	7c020001 	stcvc	0, cr0, [r2], {1}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     34c:	00000014 	andeq	r0, r0, r4, lsl r0
     350:	0000033c 	andeq	r0, r0, ip, lsr r3
     354:	08000800 	stmdaeq	r0, {fp}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00000034 	andeq	r0, r0, r4, lsr r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     360:	00018e02 	andeq	r8, r1, r2, lsl #28
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	0000001c 	andeq	r0, r0, ip, lsl r0
     368:	0000033c 	andeq	r0, r0, ip, lsr r3
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	08000834 	stmdaeq	r0, {r2, r4, r5, fp}
     370:	00000080 	andeq	r0, r0, r0, lsl #1
     374:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	41018e02 	tstmi	r1, r2, lsl #28
     37c:	0a4e280e 	beq	138a3bc <_Min_Heap_Size+0x1389bbc>
     380:	0b41080e 	bleq	10423c0 <_Min_Heap_Size+0x1041bc0>
     384:	00000014 	andeq	r0, r0, r4, lsl r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	0000033c 	andeq	r0, r0, ip, lsr r3
     38c:	00000000 	andeq	r0, r0, r0
        __HAL_RCC_PLL_DISABLE();
     390:	00000034 	andeq	r0, r0, r4, lsr r0
     394:	83080e41 	movwhi	r0, #36417	; 0x8e41
        tickstart = HAL_GetTick();
     398:	00018e02 	andeq	r8, r1, r2, lsl #28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	0000000c 	andeq	r0, r0, ip
     3a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     3a4:	7c020001 	stcvc	0, cr0, [r2], {1}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     3ac:	00000014 	andeq	r0, r0, r4, lsl r0
            return HAL_TIMEOUT;
     3b0:	0000039c 	muleq	r0, ip, r3
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	080008b4 	stmdaeq	r0, {r2, r4, r5, r7, fp}
     3b8:	00000014 	andeq	r0, r0, r4, lsl r0
     3bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     3c4:	00000014 	andeq	r0, r0, r4, lsl r0
     3c8:	0000039c 	muleq	r0, ip, r3
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00000000 	andeq	r0, r0, r0
     3d0:	00000014 	andeq	r0, r0, r4, lsl r0
     3d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00018e02 	andeq	r8, r1, r2, lsl #28
     3dc:	00000014 	andeq	r0, r0, r4, lsl r0
     3e0:	0000039c 	muleq	r0, ip, r3
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
     3e8:	00000014 	andeq	r0, r0, r4, lsl r0
     3ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     3f4:	00000014 	andeq	r0, r0, r4, lsl r0
     3f8:	0000039c 	muleq	r0, ip, r3
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	080008dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp}
     400:	00000014 	andeq	r0, r0, r4, lsl r0
     404:	83080e41 	movwhi	r0, #36417	; 0x8e41
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00018e02 	andeq	r8, r1, r2, lsl #28
     40c:	00000014 	andeq	r0, r0, r4, lsl r0
     410:	0000039c 	muleq	r0, ip, r3
     414:	080008f0 	stmdaeq	r0, {r4, r5, r6, r7, fp}
     418:	00000014 	andeq	r0, r0, r4, lsl r0
     41c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     420:	00018e02 	andeq	r8, r1, r2, lsl #28
     424:	0000000c 	andeq	r0, r0, ip
        __HAL_RCC_PLL_ENABLE();
     428:	0000039c 	muleq	r0, ip, r3
     42c:	08000904 	stmdaeq	r0, {r2, r8, fp}
        tickstart = HAL_GetTick();
     430:	00000002 	andeq	r0, r0, r2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0000000c 	andeq	r0, r0, ip
     438:	0000039c 	muleq	r0, ip, r3
     43c:	08000906 	stmdaeq	r0, {r1, r2, r8, fp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000002 	andeq	r0, r0, r2
     444:	0000000c 	andeq	r0, r0, ip
            return HAL_TIMEOUT;
     448:	0000039c 	muleq	r0, ip, r3
  return HAL_OK;
     44c:	08000908 	stmdaeq	r0, {r3, r8, fp}
        __HAL_RCC_PLL_DISABLE();
     450:	00000002 	andeq	r0, r0, r2
     454:	00000014 	andeq	r0, r0, r4, lsl r0
        tickstart = HAL_GetTick();
     458:	0000039c 	muleq	r0, ip, r3
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0800090a 	stmdaeq	r0, {r1, r3, r8, fp}
     460:	00000008 	andeq	r0, r0, r8
     464:	83080e41 	movwhi	r0, #36417	; 0x8e41
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00018e02 	andeq	r8, r1, r2, lsl #28
     46c:	00000014 	andeq	r0, r0, r4, lsl r0
            return HAL_TIMEOUT;
     470:	0000039c 	muleq	r0, ip, r3
  return HAL_OK;
     474:	08000914 	stmdaeq	r0, {r2, r4, r8, fp}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00000010 	andeq	r0, r0, r0, lsl r0
        pll_config = RCC->PLLCFGR;
     47c:	83080e41 	movwhi	r0, #36417	; 0x8e41
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00018e02 	andeq	r8, r1, r2, lsl #28
     484:	0000000c 	andeq	r0, r0, ip
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	7c020001 	stcvc	0, cr0, [r2], {1}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	000d0c0e 	andeq	r0, sp, lr, lsl #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00000014 	andeq	r0, r0, r4, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00000484 	andeq	r0, r0, r4, lsl #9
     49c:	08000924 	stmdaeq	r0, {r2, r5, r8, fp}
     4a0:	00000038 	andeq	r0, r0, r8, lsr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	57080e41 	strpl	r0, [r8, -r1, asr #28]
     4a8:	0000000e 	andeq	r0, r0, lr
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0000000c 	andeq	r0, r0, ip
     4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	7c020001 	stcvc	0, cr0, [r2], {1}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4bc:	0000000c 	andeq	r0, r0, ip
  return HAL_OK;
     4c0:	000004ac 	andeq	r0, r0, ip, lsr #9
}
     4c4:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
     4c8:	00000020 	andeq	r0, r0, r0, lsr #32
        return HAL_ERROR;
     4cc:	0000000c 	andeq	r0, r0, ip
}
     4d0:	000004ac 	andeq	r0, r0, ip, lsr #9
        return HAL_ERROR;
     4d4:	0800095c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp}
          return HAL_ERROR;
     4d8:	0000005c 	andeq	r0, r0, ip, asr r0
     4dc:	0000000c 	andeq	r0, r0, ip
     4e0:	000004ac 	andeq	r0, r0, ip, lsr #9
     4e4:	080009b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, fp}
     4e8:	00000060 	andeq	r0, r0, r0, rrx
     4ec:	00000018 	andeq	r0, r0, r8, lsl r0
     4f0:	000004ac 	andeq	r0, r0, ip, lsr #9
     4f4:	08000a18 	stmdaeq	r0, {r3, r4, r9, fp}
     4f8:	00000174 	andeq	r0, r0, r4, ror r1
     4fc:	83100e41 	tsthi	r0, #1040	; 0x410
     500:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     504:	00018e02 	andeq	r8, r1, r2, lsl #28
     508:	00000028 	andeq	r0, r0, r8, lsr #32
     50c:	000004ac 	andeq	r0, r0, ip, lsr #9
     510:	08000b8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, fp}
     514:	0000008a 	andeq	r0, r0, sl, lsl #1
     518:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     51c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     520:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     524:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     528:	280e4101 	stmdacs	lr, {r0, r8, lr}
     52c:	1c0e0a7c 			; <UNDEFINED> instruction: 0x1c0e0a7c
     530:	00000b42 	andeq	r0, r0, r2, asr #22
     534:	0000000c 	andeq	r0, r0, ip
     538:	000004ac 	andeq	r0, r0, ip, lsr #9
     53c:	00000000 	andeq	r0, r0, r0
     540:	00000002 	andeq	r0, r0, r2
     544:	0000001c 	andeq	r0, r0, ip, lsl r0
     548:	000004ac 	andeq	r0, r0, ip, lsr #9
     54c:	08000c18 	stmdaeq	r0, {r3, r4, sl, fp}
     550:	0000012c 	andeq	r0, r0, ip, lsr #2
     554:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     558:	02018e02 	andeq	r8, r1, #2, 28
     55c:	c4000e8b 	strgt	r0, [r0], #-3723	; 0xfffff175
     560:	000000ce 	andeq	r0, r0, lr, asr #1
     564:	0000001c 	andeq	r0, r0, ip, lsl r0
     568:	000004ac 	andeq	r0, r0, ip, lsr #9
     56c:	00000000 	andeq	r0, r0, r0
     570:	000000e0 	andeq	r0, r0, r0, ror #1
     574:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
     578:	02018e02 	andeq	r8, r1, #2, 28
     57c:	c4000e66 	strgt	r0, [r0], #-3686	; 0xfffff19a
     580:	000000ce 	andeq	r0, r0, lr, asr #1
     584:	00000020 	andeq	r0, r0, r0, lsr #32
     588:	000004ac 	andeq	r0, r0, ip, lsr #9
     58c:	00000000 	andeq	r0, r0, r0
     590:	000000fc 	strdeq	r0, [r0], -ip
     594:	83100e43 	tsthi	r0, #1072	; 0x430
     598:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     59c:	02018e02 	andeq	r8, r1, #2, 28
     5a0:	c3000e75 	movwgt	r0, #3701	; 0xe75
     5a4:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     5a8:	00000020 	andeq	r0, r0, r0, lsr #32
     5ac:	000004ac 	andeq	r0, r0, ip, lsr #9
     5b0:	00000000 	andeq	r0, r0, r0
     5b4:	00000124 	andeq	r0, r0, r4, lsr #2
     5b8:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     5bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     5c0:	02018e02 	andeq	r8, r1, #2, 28
     5c4:	c4000e87 	strgt	r0, [r0], #-3719	; 0xfffff179
     5c8:	00cec6c5 	sbceq	ip, lr, r5, asr #13
     5cc:	0000000c 	andeq	r0, r0, ip
     5d0:	000004ac 	andeq	r0, r0, ip, lsr #9
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	00000002 	andeq	r0, r0, r2
     5dc:	00000018 	andeq	r0, r0, r8, lsl r0
     5e0:	000004ac 	andeq	r0, r0, ip, lsr #9
     5e4:	00000000 	andeq	r0, r0, r0
     5e8:	00000078 	andeq	r0, r0, r8, ror r0
     5ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     5f0:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
     5f4:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     5f8:	00000028 	andeq	r0, r0, r8, lsr #32
     5fc:	000004ac 	andeq	r0, r0, ip, lsr #9
     600:	08000d44 	stmdaeq	r0, {r2, r6, r8, sl, fp}
     604:	000000cc 	andeq	r0, r0, ip, asr #1
     608:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     60c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     610:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     614:	41018e02 	tstmi	r1, r2, lsl #28
     618:	5f02200e 	svcpl	0x0002200e
     61c:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
     620:	0000000b 	andeq	r0, r0, fp
     624:	00000028 	andeq	r0, r0, r8, lsr #32
     628:	000004ac 	andeq	r0, r0, ip, lsr #9
     62c:	00000000 	andeq	r0, r0, r0
     630:	000000d2 	ldrdeq	r0, [r0], -r2
     634:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     638:	86058506 	strhi	r8, [r5], -r6, lsl #10
     63c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     640:	41018e02 	tstmi	r1, r2, lsl #28
     644:	6202200e 	andvs	r2, r2, #14
     648:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
     64c:	0000000b 	andeq	r0, r0, fp
     650:	0000000c 	andeq	r0, r0, ip
     654:	000004ac 	andeq	r0, r0, ip, lsr #9
     658:	00000000 	andeq	r0, r0, r0
     65c:	00000038 	andeq	r0, r0, r8, lsr r0
     660:	00000018 	andeq	r0, r0, r8, lsl r0
     664:	000004ac 	andeq	r0, r0, ip, lsr #9
     668:	00000000 	andeq	r0, r0, r0
     66c:	00000084 	andeq	r0, r0, r4, lsl #1
     670:	83100e41 	tsthi	r0, #1040	; 0x410
     674:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     678:	00018e02 	andeq	r8, r1, r2, lsl #28
     67c:	0000000c 	andeq	r0, r0, ip
     680:	000004ac 	andeq	r0, r0, ip, lsr #9
     684:	00000000 	andeq	r0, r0, r0
     688:	00000094 	muleq	r0, r4, r0
     68c:	00000014 	andeq	r0, r0, r4, lsl r0
     690:	000004ac 	andeq	r0, r0, ip, lsr #9
     694:	00000000 	andeq	r0, r0, r0
     698:	00000096 	muleq	r0, r6, r0
     69c:	70080e5a 	andvc	r0, r8, sl, asr lr
     6a0:	0000000e 	andeq	r0, r0, lr
     6a4:	00000014 	andeq	r0, r0, r4, lsl r0
     6a8:	000004ac 	andeq	r0, r0, ip, lsr #9
     6ac:	00000000 	andeq	r0, r0, r0
     6b0:	00000084 	andeq	r0, r0, r4, lsl #1
     6b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6bc:	00000028 	andeq	r0, r0, r8, lsr #32
     6c0:	000004ac 	andeq	r0, r0, ip, lsr #9
     6c4:	00000000 	andeq	r0, r0, r0
     6c8:	00000120 	andeq	r0, r0, r0, lsr #2
     6cc:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     6d0:	86068507 	strhi	r8, [r6], -r7, lsl #10
     6d4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     6d8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     6dc:	280e4101 	stmdacs	lr, {r0, r8, lr}
     6e0:	0e0a8902 	vmlaeq.f16	s16, s20, s4	; <UNPREDICTABLE>
     6e4:	000b421c 	andeq	r4, fp, ip, lsl r2
     6e8:	0000000c 	andeq	r0, r0, ip
     6ec:	000004ac 	andeq	r0, r0, ip, lsr #9
     6f0:	00000000 	andeq	r0, r0, r0
     6f4:	00000004 	andeq	r0, r0, r4
     6f8:	00000014 	andeq	r0, r0, r4, lsl r0
     6fc:	000004ac 	andeq	r0, r0, ip, lsr #9
     700:	00000000 	andeq	r0, r0, r0
     704:	000000f2 	strdeq	r0, [r0], -r2
     708:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     70c:	00018e02 	andeq	r8, r1, r2, lsl #28
     710:	00000014 	andeq	r0, r0, r4, lsl r0
     714:	000004ac 	andeq	r0, r0, ip, lsr #9
     718:	00000000 	andeq	r0, r0, r0
     71c:	0000006c 	andeq	r0, r0, ip, rrx
     720:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     724:	00018e02 	andeq	r8, r1, r2, lsl #28
     728:	00000014 	andeq	r0, r0, r4, lsl r0
     72c:	000004ac 	andeq	r0, r0, ip, lsr #9
     730:	00000000 	andeq	r0, r0, r0
     734:	000000a6 	andeq	r0, r0, r6, lsr #1
     738:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     73c:	00018e02 	andeq	r8, r1, r2, lsl #28
     740:	0000000c 	andeq	r0, r0, ip
     744:	000004ac 	andeq	r0, r0, ip, lsr #9
     748:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
     74c:	00000002 	andeq	r0, r0, r2
     750:	00000014 	andeq	r0, r0, r4, lsl r0
     754:	000004ac 	andeq	r0, r0, ip, lsr #9
     758:	00000000 	andeq	r0, r0, r0
     75c:	0000004c 	andeq	r0, r0, ip, asr #32
     760:	83080e41 	movwhi	r0, #36417	; 0x8e41
     764:	00018e02 	andeq	r8, r1, r2, lsl #28
     768:	00000014 	andeq	r0, r0, r4, lsl r0
     76c:	000004ac 	andeq	r0, r0, ip, lsr #9
     770:	08000e12 	stmdaeq	r0, {r1, r4, r9, sl, fp}
     774:	0000001a 	andeq	r0, r0, sl, lsl r0
     778:	83080e41 	movwhi	r0, #36417	; 0x8e41
     77c:	00018e02 	andeq	r8, r1, r2, lsl #28
     780:	0000000c 	andeq	r0, r0, ip
     784:	000004ac 	andeq	r0, r0, ip, lsr #9
     788:	00000000 	andeq	r0, r0, r0
     78c:	00000002 	andeq	r0, r0, r2
     790:	00000014 	andeq	r0, r0, r4, lsl r0
     794:	000004ac 	andeq	r0, r0, ip, lsr #9
     798:	00000000 	andeq	r0, r0, r0
     79c:	0000000a 	andeq	r0, r0, sl
     7a0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7a4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a8:	0000000c 	andeq	r0, r0, ip
     7ac:	000004ac 	andeq	r0, r0, ip, lsr #9
     7b0:	08000e2c 	stmdaeq	r0, {r2, r3, r5, r9, sl, fp}
     7b4:	00000002 	andeq	r0, r0, r2
     7b8:	0000000c 	andeq	r0, r0, ip
     7bc:	000004ac 	andeq	r0, r0, ip, lsr #9
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	00000002 	andeq	r0, r0, r2
     7c8:	0000000c 	andeq	r0, r0, ip
     7cc:	000004ac 	andeq	r0, r0, ip, lsr #9
     7d0:	08000e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp}
     7d4:	00000002 	andeq	r0, r0, r2
     7d8:	00000014 	andeq	r0, r0, r4, lsl r0
     7dc:	000004ac 	andeq	r0, r0, ip, lsr #9
     7e0:	00000000 	andeq	r0, r0, r0
     7e4:	00000058 	andeq	r0, r0, r8, asr r0
     7e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     7f0:	00000014 	andeq	r0, r0, r4, lsl r0
     7f4:	000004ac 	andeq	r0, r0, ip, lsr #9
     7f8:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
     7fc:	00000010 	andeq	r0, r0, r0, lsl r0
     800:	83080e41 	movwhi	r0, #36417	; 0x8e41
     804:	00018e02 	andeq	r8, r1, r2, lsl #28
     808:	0000000c 	andeq	r0, r0, ip
     80c:	000004ac 	andeq	r0, r0, ip, lsr #9
     810:	00000000 	andeq	r0, r0, r0
     814:	00000002 	andeq	r0, r0, r2
     818:	00000018 	andeq	r0, r0, r8, lsl r0
     81c:	000004ac 	andeq	r0, r0, ip, lsr #9
     820:	00000000 	andeq	r0, r0, r0
     824:	00000124 	andeq	r0, r0, r4, lsr #2
     828:	83100e41 	tsthi	r0, #1040	; 0x410
     82c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     830:	00018e02 	andeq	r8, r1, r2, lsl #28
     834:	00000014 	andeq	r0, r0, r4, lsl r0
     838:	000004ac 	andeq	r0, r0, ip, lsr #9
     83c:	00000000 	andeq	r0, r0, r0
     840:	0000002c 	andeq	r0, r0, ip, lsr #32
     844:	83080e41 	movwhi	r0, #36417	; 0x8e41
     848:	00018e02 	andeq	r8, r1, r2, lsl #28
     84c:	00000014 	andeq	r0, r0, r4, lsl r0
     850:	000004ac 	andeq	r0, r0, ip, lsr #9
     854:	00000000 	andeq	r0, r0, r0
     858:	0000002c 	andeq	r0, r0, ip, lsr #32
     85c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     860:	00018e02 	andeq	r8, r1, r2, lsl #28
     864:	0000000c 	andeq	r0, r0, ip
     868:	000004ac 	andeq	r0, r0, ip, lsr #9
     86c:	00000000 	andeq	r0, r0, r0
     870:	00000002 	andeq	r0, r0, r2
     874:	00000014 	andeq	r0, r0, r4, lsl r0
     878:	000004ac 	andeq	r0, r0, ip, lsr #9
     87c:	00000000 	andeq	r0, r0, r0
     880:	00000080 	andeq	r0, r0, r0, lsl #1
     884:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     888:	00018e02 	andeq	r8, r1, r2, lsl #28
     88c:	00000014 	andeq	r0, r0, r4, lsl r0
     890:	000004ac 	andeq	r0, r0, ip, lsr #9
     894:	00000000 	andeq	r0, r0, r0
     898:	00000014 	andeq	r0, r0, r4, lsl r0
     89c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8a0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8a4:	0000000c 	andeq	r0, r0, ip
     8a8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8ac:	00000000 	andeq	r0, r0, r0
     8b0:	00000002 	andeq	r0, r0, r2
     8b4:	00000014 	andeq	r0, r0, r4, lsl r0
     8b8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8bc:	00000000 	andeq	r0, r0, r0
     8c0:	000000bc 	strheq	r0, [r0], -ip
     8c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     8c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8cc:	00000014 	andeq	r0, r0, r4, lsl r0
     8d0:	000004ac 	andeq	r0, r0, ip, lsr #9
     8d4:	00000000 	andeq	r0, r0, r0
     8d8:	00000016 	andeq	r0, r0, r6, lsl r0
     8dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e4:	0000000c 	andeq	r0, r0, ip
     8e8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8ec:	08000e40 	stmdaeq	r0, {r6, r9, sl, fp}
     8f0:	00000002 	andeq	r0, r0, r2
     8f4:	00000024 	andeq	r0, r0, r4, lsr #32
     8f8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8fc:	08000e42 	stmdaeq	r0, {r1, r6, r9, sl, fp}
     900:	000000e6 	andeq	r0, r0, r6, ror #1
     904:	8e040e60 	cdphi	14, 0, cr0, cr4, cr0, {3}
     908:	100e4101 	andne	r4, lr, r1, lsl #2
     90c:	42040e76 	andmi	r0, r4, #1888	; 0x760
     910:	53ce000e 	bicpl	r0, lr, #14
     914:	018e100e 	orreq	r1, lr, lr
     918:	ce000e43 	cdpgt	14, 0, cr0, cr0, cr3, {2}
     91c:	00000020 	andeq	r0, r0, r0, lsr #32
     920:	000004ac 	andeq	r0, r0, ip, lsr #9
     924:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
     928:	00000288 	andeq	r0, r0, r8, lsl #5
     92c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     930:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     934:	180e4101 	stmdane	lr, {r0, r8, lr}
     938:	0c0e0a67 			; <UNDEFINED> instruction: 0x0c0e0a67
     93c:	00000b41 	andeq	r0, r0, r1, asr #22
     940:	00000014 	andeq	r0, r0, r4, lsl r0
     944:	000004ac 	andeq	r0, r0, ip, lsr #9
     948:	00000000 	andeq	r0, r0, r0
     94c:	0000001e 	andeq	r0, r0, lr, lsl r0
     950:	83080e41 	movwhi	r0, #36417	; 0x8e41
     954:	00018e02 	andeq	r8, r1, r2, lsl #28
     958:	00000014 	andeq	r0, r0, r4, lsl r0
     95c:	000004ac 	andeq	r0, r0, ip, lsr #9
     960:	00000000 	andeq	r0, r0, r0
     964:	0000009a 	muleq	r0, sl, r0
     968:	83080e41 	movwhi	r0, #36417	; 0x8e41
     96c:	00018e02 	andeq	r8, r1, r2, lsl #28
     970:	00000014 	andeq	r0, r0, r4, lsl r0
     974:	000004ac 	andeq	r0, r0, ip, lsr #9
     978:	00000000 	andeq	r0, r0, r0
     97c:	00000084 	andeq	r0, r0, r4, lsl #1
     980:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     984:	00018e02 	andeq	r8, r1, r2, lsl #28
     988:	00000014 	andeq	r0, r0, r4, lsl r0
     98c:	000004ac 	andeq	r0, r0, ip, lsr #9
     990:	00000000 	andeq	r0, r0, r0
     994:	00000088 	andeq	r0, r0, r8, lsl #1
     998:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     99c:	00018e02 	andeq	r8, r1, r2, lsl #28
     9a0:	00000014 	andeq	r0, r0, r4, lsl r0
     9a4:	000004ac 	andeq	r0, r0, ip, lsr #9
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	00000088 	andeq	r0, r0, r8, lsl #1
     9b0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b8:	0000000c 	andeq	r0, r0, ip
     9bc:	000004ac 	andeq	r0, r0, ip, lsr #9
     9c0:	00000000 	andeq	r0, r0, r0
     9c4:	00000036 	andeq	r0, r0, r6, lsr r0
     9c8:	0000000c 	andeq	r0, r0, ip
     9cc:	000004ac 	andeq	r0, r0, ip, lsr #9
     9d0:	00000000 	andeq	r0, r0, r0
     9d4:	00000036 	andeq	r0, r0, r6, lsr r0
     9d8:	0000000c 	andeq	r0, r0, ip
     9dc:	000004ac 	andeq	r0, r0, ip, lsr #9
     9e0:	00000000 	andeq	r0, r0, r0
     9e4:	0000000c 	andeq	r0, r0, ip
     9e8:	0000000c 	andeq	r0, r0, ip
     9ec:	000004ac 	andeq	r0, r0, ip, lsr #9
     9f0:	00000000 	andeq	r0, r0, r0
     9f4:	00000004 	andeq	r0, r0, r4
     9f8:	0000000c 	andeq	r0, r0, ip
     9fc:	000004ac 	andeq	r0, r0, ip, lsr #9
     a00:	00000000 	andeq	r0, r0, r0
     a04:	00000036 	andeq	r0, r0, r6, lsr r0
     a08:	00000014 	andeq	r0, r0, r4, lsl r0
     a0c:	000004ac 	andeq	r0, r0, ip, lsr #9
     a10:	00000000 	andeq	r0, r0, r0
     a14:	00000026 	andeq	r0, r0, r6, lsr #32
     a18:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a20:	00000028 	andeq	r0, r0, r8, lsr #32
     a24:	000004ac 	andeq	r0, r0, ip, lsr #9
     a28:	00000000 	andeq	r0, r0, r0
     a2c:	00000066 	andeq	r0, r0, r6, rrx
     a30:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     a34:	41018e02 	tstmi	r1, r2, lsl #28
     a38:	0a45100e 	beq	1144a78 <_Min_Heap_Size+0x1144278>
     a3c:	0b41080e 	bleq	1042a7c <_Min_Heap_Size+0x104227c>
     a40:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     a44:	100e42ce 	andne	r4, lr, lr, asr #5
     a48:	018e0284 	orreq	r0, lr, r4, lsl #5
     a4c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a50:	000004ac 	andeq	r0, r0, ip, lsr #9
     a54:	00000000 	andeq	r0, r0, r0
     a58:	000000a4 	andeq	r0, r0, r4, lsr #1
     a5c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     a60:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     a64:	180e4101 	stmdane	lr, {r0, r8, lr}
     a68:	0c0e4902 			; <UNDEFINED> instruction: 0x0c0e4902
     a6c:	00000014 	andeq	r0, r0, r4, lsl r0
     a70:	000004ac 	andeq	r0, r0, ip, lsr #9
     a74:	00000000 	andeq	r0, r0, r0
     a78:	00000026 	andeq	r0, r0, r6, lsr #32
     a7c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a80:	00018e02 	andeq	r8, r1, r2, lsl #28
     a84:	00000028 	andeq	r0, r0, r8, lsr #32
     a88:	000004ac 	andeq	r0, r0, ip, lsr #9
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	00000066 	andeq	r0, r0, r6, rrx
     a94:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     a98:	41018e02 	tstmi	r1, r2, lsl #28
     a9c:	0a45100e 	beq	1144adc <_Min_Heap_Size+0x11442dc>
     aa0:	0b41080e 	bleq	1042ae0 <_Min_Heap_Size+0x10422e0>
     aa4:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     aa8:	100e42ce 	andne	r4, lr, lr, asr #5
     aac:	018e0284 	orreq	r0, lr, r4, lsl #5
     ab0:	0000000c 	andeq	r0, r0, ip
     ab4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ab8:	7c020001 	stcvc	0, cr0, [r2], {1}
     abc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ac0:	0000000c 	andeq	r0, r0, ip
     ac4:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     ac8:	00000000 	andeq	r0, r0, r0
     acc:	00000004 	andeq	r0, r0, r4
     ad0:	00000034 	andeq	r0, r0, r4, lsr r0
     ad4:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     ad8:	00000000 	andeq	r0, r0, r0
     adc:	000004fc 	strdeq	r0, [r0], -ip
     ae0:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     ae4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ae8:	41018e02 	tstmi	r1, r2, lsl #28
     aec:	5c03180e 	stcpl	8, cr1, [r3], {14}
     af0:	c4000e02 	strgt	r0, [r0], #-3586	; 0xfffff1fe
     af4:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     af8:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     afc:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     b00:	0a46018e 	beq	1181140 <_Min_Heap_Size+0x1180940>
     b04:	0b41100e 	bleq	1044b44 <_Min_Heap_Size+0x1044344>
     b08:	00000020 	andeq	r0, r0, r0, lsr #32
     b0c:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b10:	00000000 	andeq	r0, r0, r0
     b14:	00000118 	andeq	r0, r0, r8, lsl r1
     b18:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     b1c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b20:	41018e02 	tstmi	r1, r2, lsl #28
     b24:	0a7e300e 	beq	1f8cb64 <_Min_Heap_Size+0x1f8c364>
     b28:	0b41100e 	bleq	1044b68 <_Min_Heap_Size+0x1044368>
     b2c:	0000000c 	andeq	r0, r0, ip
     b30:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b34:	00000000 	andeq	r0, r0, r0
     b38:	0000000c 	andeq	r0, r0, ip
     b3c:	0000000c 	andeq	r0, r0, ip
     b40:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b44:	00000000 	andeq	r0, r0, r0
     b48:	0000000c 	andeq	r0, r0, ip
     b4c:	00000014 	andeq	r0, r0, r4, lsl r0
     b50:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b54:	00000000 	andeq	r0, r0, r0
     b58:	000000d4 	ldrdeq	r0, [r0], -r4
     b5c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b60:	00018e02 	andeq	r8, r1, r2, lsl #28
     b64:	0000002c 	andeq	r0, r0, ip, lsr #32
     b68:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b6c:	00000000 	andeq	r0, r0, r0
     b70:	0000021c 	andeq	r0, r0, ip, lsl r2
     b74:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     b78:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b7c:	02018e02 	andeq	r8, r1, #2, 28
     b80:	c4000ef6 	strgt	r0, [r0], #-3830	; 0xfffff10a
     b84:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     b88:	0484100e 	streq	r1, [r4], #14
     b8c:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     b90:	0000018e 	andeq	r0, r0, lr, lsl #3
     b94:	0000000c 	andeq	r0, r0, ip
     b98:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b9c:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
     ba0:	0000000c 	andeq	r0, r0, ip
     ba4:	00000014 	andeq	r0, r0, r4, lsl r0
     ba8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bac:	080011bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, ip}
     bb0:	00000020 	andeq	r0, r0, r0, lsr #32
     bb4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bb8:	00018e02 	andeq	r8, r1, r2, lsl #28
     bbc:	00000014 	andeq	r0, r0, r4, lsl r0
     bc0:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bc4:	080011dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, ip}
     bc8:	00000020 	andeq	r0, r0, r0, lsr #32
     bcc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bd0:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd4:	0000000c 	andeq	r0, r0, ip
     bd8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bdc:	00000000 	andeq	r0, r0, r0
     be0:	000000cc 	andeq	r0, r0, ip, asr #1
     be4:	0000000c 	andeq	r0, r0, ip
     be8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bec:	00000000 	andeq	r0, r0, r0
     bf0:	0000003c 	andeq	r0, r0, ip, lsr r0
     bf4:	0000000c 	andeq	r0, r0, ip
     bf8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bfc:	00000000 	andeq	r0, r0, r0
     c00:	00000002 	andeq	r0, r0, r2
     c04:	00000014 	andeq	r0, r0, r4, lsl r0
     c08:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	00000020 	andeq	r0, r0, r0, lsr #32
     c14:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c18:	00018e02 	andeq	r8, r1, r2, lsl #28
     c1c:	0000000c 	andeq	r0, r0, ip
     c20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c24:	7c020001 	stcvc	0, cr0, [r2], {1}
     c28:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c2c:	00000024 	andeq	r0, r0, r4, lsr #32
     c30:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c34:	080011fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, ip}
     c38:	000002e8 	andeq	r0, r0, r8, ror #5
     c3c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c40:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c44:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c48:	41018e02 	tstmi	r1, r2, lsl #28
     c4c:	6703200e 	strvs	r2, [r3, -lr]
     c50:	00180e01 	andseq	r0, r8, r1, lsl #28
     c54:	0000001c 	andeq	r0, r0, ip, lsl r0
     c58:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c5c:	00000000 	andeq	r0, r0, r0
     c60:	00000184 	andeq	r0, r0, r4, lsl #3
     c64:	83180e41 	tsthi	r8, #1040	; 0x410
     c68:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     c6c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     c70:	00018e02 	andeq	r8, r1, r2, lsl #28
     c74:	00000018 	andeq	r0, r0, r8, lsl r0
     c78:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c7c:	00000000 	andeq	r0, r0, r0
     c80:	00000028 	andeq	r0, r0, r8, lsr #32
     c84:	83100e41 	tsthi	r0, #1040	; 0x410
     c88:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     c8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c90:	00000018 	andeq	r0, r0, r8, lsl r0
     c94:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c98:	00000000 	andeq	r0, r0, r0
     c9c:	00000038 	andeq	r0, r0, r8, lsr r0
     ca0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     ca4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ca8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cac:	00000018 	andeq	r0, r0, r8, lsl r0
     cb0:	00000c1c 	andeq	r0, r0, ip, lsl ip
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	0000002c 	andeq	r0, r0, ip, lsr #32
     cbc:	83100e41 	tsthi	r0, #1040	; 0x410
     cc0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     cc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cc8:	00000020 	andeq	r0, r0, r0, lsr #32
     ccc:	00000c1c 	andeq	r0, r0, ip, lsl ip
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	00000048 	andeq	r0, r0, r8, asr #32
     cd8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     cdc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     ce0:	180e4101 	stmdane	lr, {r0, r8, lr}
     ce4:	0c0e0a56 			; <UNDEFINED> instruction: 0x0c0e0a56
     ce8:	00000b41 	andeq	r0, r0, r1, asr #22
     cec:	0000000c 	andeq	r0, r0, ip
     cf0:	00000c1c 	andeq	r0, r0, ip, lsl ip
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	00000002 	andeq	r0, r0, r2
     cfc:	00000014 	andeq	r0, r0, r4, lsl r0
     d00:	00000c1c 	andeq	r0, r0, ip, lsl ip
     d04:	00000000 	andeq	r0, r0, r0
     d08:	0000001c 	andeq	r0, r0, ip, lsl r0
     d0c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	0000000c 	andeq	r0, r0, ip
     d18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d1c:	7c020001 	stcvc	0, cr0, [r2], {1}
     d20:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d24:	0000001c 	andeq	r0, r0, ip, lsl r0
     d28:	00000d14 	andeq	r0, r0, r4, lsl sp
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	0000002c 	andeq	r0, r0, ip, lsr #32
     d34:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d38:	4f018502 	svcmi	0x00018502
     d3c:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     d40:	000b4100 	andeq	r4, fp, r0, lsl #2
     d44:	00000018 	andeq	r0, r0, r8, lsl r0
     d48:	00000d14 	andeq	r0, r0, r4, lsl sp
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00000044 	andeq	r0, r0, r4, asr #32
     d54:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     d58:	c40a5501 	strgt	r5, [sl], #-1281	; 0xfffffaff
     d5c:	0b41000e 	bleq	1040d9c <_Min_Heap_Size+0x104059c>
     d60:	0000000c 	andeq	r0, r0, ip
     d64:	00000d14 	andeq	r0, r0, r4, lsl sp
     d68:	00000000 	andeq	r0, r0, r0
     d6c:	0000008e 	andeq	r0, r0, lr, lsl #1
     d70:	00000018 	andeq	r0, r0, r8, lsl r0
     d74:	00000d14 	andeq	r0, r0, r4, lsl sp
     d78:	00000000 	andeq	r0, r0, r0
     d7c:	0000028e 	andeq	r0, r0, lr, lsl #5
     d80:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d84:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d88:	00018e02 	andeq	r8, r1, r2, lsl #28
     d8c:	00000020 	andeq	r0, r0, r0, lsr #32
     d90:	00000d14 	andeq	r0, r0, r4, lsl sp
     d94:	00000000 	andeq	r0, r0, r0
     d98:	000000dc 	ldrdeq	r0, [r0], -ip
     d9c:	83100e43 	tsthi	r0, #1072	; 0x430
     da0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     da4:	02018e02 	andeq	r8, r1, #2, 28
     da8:	c3000e64 	movwgt	r0, #3684	; 0xe64
     dac:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     db0:	0000001c 	andeq	r0, r0, ip, lsl r0
     db4:	00000d14 	andeq	r0, r0, r4, lsl sp
     db8:	00000000 	andeq	r0, r0, r0
     dbc:	00000078 	andeq	r0, r0, r8, ror r0
     dc0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     dc4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     dc8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dcc:	00018e02 	andeq	r8, r1, r2, lsl #28
     dd0:	0000001c 	andeq	r0, r0, ip, lsl r0
     dd4:	00000d14 	andeq	r0, r0, r4, lsl sp
     dd8:	00000000 	andeq	r0, r0, r0
     ddc:	00000098 	muleq	r0, r8, r0
     de0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     de4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     de8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dec:	00018e02 	andeq	r8, r1, r2, lsl #28
     df0:	00000018 	andeq	r0, r0, r8, lsl r0
     df4:	00000d14 	andeq	r0, r0, r4, lsl sp
     df8:	080014e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip}
     dfc:	00000094 	muleq	r0, r4, r0
     e00:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     e04:	86038504 	strhi	r8, [r3], -r4, lsl #10
     e08:	00018e02 	andeq	r8, r1, r2, lsl #28
     e0c:	0000000c 	andeq	r0, r0, ip
     e10:	00000d14 	andeq	r0, r0, r4, lsl sp
     e14:	08001578 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, ip}
     e18:	00000026 	andeq	r0, r0, r6, lsr #32
     e1c:	00000020 	andeq	r0, r0, r0, lsr #32
     e20:	00000d14 	andeq	r0, r0, r4, lsl sp
     e24:	00000000 	andeq	r0, r0, r0
     e28:	00000128 	andeq	r0, r0, r8, lsr #2
     e2c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     e30:	86078508 	strhi	r8, [r7], -r8, lsl #10
     e34:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     e38:	8a038904 	bhi	e3250 <_Min_Heap_Size+0xe2a50>
     e3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e40:	00000020 	andeq	r0, r0, r0, lsr #32
     e44:	00000d14 	andeq	r0, r0, r4, lsl sp
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	000001dc 	ldrdeq	r0, [r0], -ip
     e50:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     e54:	86048505 	strhi	r8, [r4], -r5, lsl #10
     e58:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     e5c:	200e4101 	andcs	r4, lr, r1, lsl #2
     e60:	140ee702 	strne	lr, [lr], #-1794	; 0xfffff8fe
     e64:	0000000c 	andeq	r0, r0, ip
     e68:	00000d14 	andeq	r0, r0, r4, lsl sp
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	0000005a 	andeq	r0, r0, sl, asr r0
     e74:	0000000c 	andeq	r0, r0, ip
     e78:	00000d14 	andeq	r0, r0, r4, lsl sp
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	0000006e 	andeq	r0, r0, lr, rrx
     e84:	0000000c 	andeq	r0, r0, ip
     e88:	00000d14 	andeq	r0, r0, r4, lsl sp
     e8c:	00000000 	andeq	r0, r0, r0
     e90:	00000006 	andeq	r0, r0, r6
     e94:	0000000c 	andeq	r0, r0, ip
     e98:	00000d14 	andeq	r0, r0, r4, lsl sp
     e9c:	00000000 	andeq	r0, r0, r0
     ea0:	00000004 	andeq	r0, r0, r4
     ea4:	0000000c 	andeq	r0, r0, ip
     ea8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     eac:	7c020001 	stcvc	0, cr0, [r2], {1}
     eb0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     eb4:	00000014 	andeq	r0, r0, r4, lsl r0
     eb8:	00000ea4 	andeq	r0, r0, r4, lsr #29
     ebc:	080015a0 	stmdaeq	r0, {r5, r7, r8, sl, ip}
     ec0:	0000003c 	andeq	r0, r0, ip, lsr r0
     ec4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ec8:	00018e02 	andeq	r8, r1, r2, lsl #28
     ecc:	00000018 	andeq	r0, r0, r8, lsl r0
     ed0:	00000ea4 	andeq	r0, r0, r4, lsr #29
     ed4:	080015dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip}
     ed8:	0000008c 	andeq	r0, r0, ip, lsl #1
     edc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     ee0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ee4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee8:	00000014 	andeq	r0, r0, r4, lsl r0
     eec:	00000ea4 	andeq	r0, r0, r4, lsr #29
     ef0:	08001668 	stmdaeq	r0, {r3, r5, r6, r9, sl, ip}
     ef4:	00000030 	andeq	r0, r0, r0, lsr r0
     ef8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     efc:	00018e02 	andeq	r8, r1, r2, lsl #28
     f00:	00000014 	andeq	r0, r0, r4, lsl r0
     f04:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	00000038 	andeq	r0, r0, r8, lsr r0
     f10:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f14:	00018e02 	andeq	r8, r1, r2, lsl #28
     f18:	0000000c 	andeq	r0, r0, ip
     f1c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f20:	00000000 	andeq	r0, r0, r0
     f24:	00000024 	andeq	r0, r0, r4, lsr #32
     f28:	0000000c 	andeq	r0, r0, ip
     f2c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f30:	08001698 	stmdaeq	r0, {r3, r4, r7, r9, sl, ip}
     f34:	00000028 	andeq	r0, r0, r8, lsr #32
     f38:	0000000c 	andeq	r0, r0, ip
     f3c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f40:	00000000 	andeq	r0, r0, r0
     f44:	0000001c 	andeq	r0, r0, ip, lsl r0
     f48:	0000000c 	andeq	r0, r0, ip
     f4c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f50:	00000000 	andeq	r0, r0, r0
     f54:	00000020 	andeq	r0, r0, r0, lsr #32
     f58:	00000014 	andeq	r0, r0, r4, lsl r0
     f5c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f60:	00000000 	andeq	r0, r0, r0
     f64:	00000128 	andeq	r0, r0, r8, lsr #2
     f68:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f70:	0000000c 	andeq	r0, r0, ip
     f74:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f78:	00000000 	andeq	r0, r0, r0
     f7c:	00000006 	andeq	r0, r0, r6
     f80:	0000000c 	andeq	r0, r0, ip
     f84:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f88:	00000000 	andeq	r0, r0, r0
     f8c:	00000010 	andeq	r0, r0, r0, lsl r0
     f90:	0000001c 	andeq	r0, r0, ip, lsl r0
     f94:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f98:	00000000 	andeq	r0, r0, r0
     f9c:	0000007c 	andeq	r0, r0, ip, ror r0
     fa0:	83180e41 	tsthi	r8, #1040	; 0x410
     fa4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     fa8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     fac:	00018e02 	andeq	r8, r1, r2, lsl #28
     fb0:	00000014 	andeq	r0, r0, r4, lsl r0
     fb4:	00000ea4 	andeq	r0, r0, r4, lsr #29
     fb8:	00000000 	andeq	r0, r0, r0
     fbc:	00000034 	andeq	r0, r0, r4, lsr r0
     fc0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     fc8:	00000014 	andeq	r0, r0, r4, lsl r0
     fcc:	00000ea4 	andeq	r0, r0, r4, lsr #29
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	0000003c 	andeq	r0, r0, ip, lsr r0
     fd8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fdc:	00018e02 	andeq	r8, r1, r2, lsl #28
     fe0:	00000014 	andeq	r0, r0, r4, lsl r0
     fe4:	00000ea4 	andeq	r0, r0, r4, lsr #29
     fe8:	00000000 	andeq	r0, r0, r0
     fec:	00000034 	andeq	r0, r0, r4, lsr r0
     ff0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ff4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff8:	00000014 	andeq	r0, r0, r4, lsl r0
     ffc:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1000:	00000000 	andeq	r0, r0, r0
    1004:	0000003c 	andeq	r0, r0, ip, lsr r0
    1008:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    100c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1010:	00000014 	andeq	r0, r0, r4, lsl r0
    1014:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1018:	00000000 	andeq	r0, r0, r0
    101c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1020:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1024:	00018e02 	andeq	r8, r1, r2, lsl #28
    1028:	0000000c 	andeq	r0, r0, ip
    102c:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1030:	00000000 	andeq	r0, r0, r0
    1034:	00000002 	andeq	r0, r0, r2
    1038:	00000014 	andeq	r0, r0, r4, lsl r0
    103c:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1040:	00000000 	andeq	r0, r0, r0
    1044:	00000008 	andeq	r0, r0, r8
    1048:	83080e41 	movwhi	r0, #36417	; 0x8e41
    104c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1050:	0000000c 	andeq	r0, r0, ip
    1054:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1058:	7c020001 	stcvc	0, cr0, [r2], {1}
    105c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1060:	0000000c 	andeq	r0, r0, ip
    1064:	00001050 	andeq	r1, r0, r0, asr r0
    1068:	00000000 	andeq	r0, r0, r0
    106c:	00000002 	andeq	r0, r0, r2
    1070:	0000000c 	andeq	r0, r0, ip
    1074:	00001050 	andeq	r1, r0, r0, asr r0
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000002 	andeq	r0, r0, r2
    1080:	00000014 	andeq	r0, r0, r4, lsl r0
    1084:	00001050 	andeq	r1, r0, r0, asr r0
    1088:	00000000 	andeq	r0, r0, r0
    108c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1090:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1094:	00018e02 	andeq	r8, r1, r2, lsl #28
    1098:	00000014 	andeq	r0, r0, r4, lsl r0
    109c:	00001050 	andeq	r1, r0, r0, asr r0
    10a0:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
    10a4:	0000004c 	andeq	r0, r0, ip, asr #32
    10a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    10b0:	00000014 	andeq	r0, r0, r4, lsl r0
    10b4:	00001050 	andeq	r1, r0, r0, asr r0
    10b8:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    10bc:	00000034 	andeq	r0, r0, r4, lsr r0
    10c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    10c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10c8:	0000000c 	andeq	r0, r0, ip
    10cc:	00001050 	andeq	r1, r0, r0, asr r0
    10d0:	08001740 	stmdaeq	r0, {r6, r8, r9, sl, ip}
    10d4:	00000018 	andeq	r0, r0, r8, lsl r0
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	00001050 	andeq	r1, r0, r0, asr r0
    10e0:	08001758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, ip}
    10e4:	0000000c 	andeq	r0, r0, ip
    10e8:	0000000c 	andeq	r0, r0, ip
    10ec:	00001050 	andeq	r1, r0, r0, asr r0
    10f0:	00000000 	andeq	r0, r0, r0
    10f4:	0000000c 	andeq	r0, r0, ip
    10f8:	00000018 	andeq	r0, r0, r8, lsl r0
    10fc:	00001050 	andeq	r1, r0, r0, asr r0
    1100:	00000000 	andeq	r0, r0, r0
    1104:	00000048 	andeq	r0, r0, r8, asr #32
    1108:	83100e41 	tsthi	r0, #1040	; 0x410
    110c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1110:	00018e02 	andeq	r8, r1, r2, lsl #28
    1114:	0000000c 	andeq	r0, r0, ip
    1118:	00001050 	andeq	r1, r0, r0, asr r0
    111c:	00000000 	andeq	r0, r0, r0
    1120:	0000000c 	andeq	r0, r0, ip
    1124:	00000018 	andeq	r0, r0, r8, lsl r0
    1128:	00001050 	andeq	r1, r0, r0, asr r0
    112c:	08001764 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, ip}
    1130:	00000028 	andeq	r0, r0, r8, lsr #32
    1134:	83100e41 	tsthi	r0, #1040	; 0x410
    1138:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    113c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1140:	0000000c 	andeq	r0, r0, ip
    1144:	00001050 	andeq	r1, r0, r0, asr r0
    1148:	00000000 	andeq	r0, r0, r0
    114c:	0000000e 	andeq	r0, r0, lr
    1150:	0000000c 	andeq	r0, r0, ip
    1154:	00001050 	andeq	r1, r0, r0, asr r0
    1158:	00000000 	andeq	r0, r0, r0
    115c:	0000000e 	andeq	r0, r0, lr
    1160:	0000000c 	andeq	r0, r0, ip
    1164:	00001050 	andeq	r1, r0, r0, asr r0
    1168:	00000000 	andeq	r0, r0, r0
    116c:	00000008 	andeq	r0, r0, r8
    1170:	0000000c 	andeq	r0, r0, ip
    1174:	00001050 	andeq	r1, r0, r0, asr r0
    1178:	00000000 	andeq	r0, r0, r0
    117c:	0000000c 	andeq	r0, r0, ip
    1180:	0000000c 	andeq	r0, r0, ip
    1184:	00001050 	andeq	r1, r0, r0, asr r0
    1188:	00000000 	andeq	r0, r0, r0
    118c:	00000010 	andeq	r0, r0, r0, lsl r0
    1190:	0000000c 	andeq	r0, r0, ip
    1194:	00001050 	andeq	r1, r0, r0, asr r0
    1198:	00000000 	andeq	r0, r0, r0
    119c:	00000010 	andeq	r0, r0, r0, lsl r0
    11a0:	0000000c 	andeq	r0, r0, ip
    11a4:	00001050 	andeq	r1, r0, r0, asr r0
    11a8:	00000000 	andeq	r0, r0, r0
    11ac:	00000010 	andeq	r0, r0, r0, lsl r0
    11b0:	0000000c 	andeq	r0, r0, ip
    11b4:	00001050 	andeq	r1, r0, r0, asr r0
    11b8:	00000000 	andeq	r0, r0, r0
    11bc:	00000010 	andeq	r0, r0, r0, lsl r0
    11c0:	0000000c 	andeq	r0, r0, ip
    11c4:	00001050 	andeq	r1, r0, r0, asr r0
    11c8:	00000000 	andeq	r0, r0, r0
    11cc:	00000010 	andeq	r0, r0, r0, lsl r0
    11d0:	0000000c 	andeq	r0, r0, ip
    11d4:	00001050 	andeq	r1, r0, r0, asr r0
    11d8:	00000000 	andeq	r0, r0, r0
    11dc:	00000010 	andeq	r0, r0, r0, lsl r0
    11e0:	0000000c 	andeq	r0, r0, ip
    11e4:	00001050 	andeq	r1, r0, r0, asr r0
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	00000010 	andeq	r0, r0, r0, lsl r0
    11f0:	0000000c 	andeq	r0, r0, ip
    11f4:	00001050 	andeq	r1, r0, r0, asr r0
    11f8:	00000000 	andeq	r0, r0, r0
    11fc:	00000010 	andeq	r0, r0, r0, lsl r0
    1200:	0000000c 	andeq	r0, r0, ip
    1204:	00001050 	andeq	r1, r0, r0, asr r0
    1208:	00000000 	andeq	r0, r0, r0
    120c:	00000010 	andeq	r0, r0, r0, lsl r0
    1210:	0000000c 	andeq	r0, r0, ip
    1214:	00001050 	andeq	r1, r0, r0, asr r0
    1218:	00000000 	andeq	r0, r0, r0
    121c:	0000000c 	andeq	r0, r0, ip
    1220:	0000000c 	andeq	r0, r0, ip
    1224:	00001050 	andeq	r1, r0, r0, asr r0
    1228:	00000000 	andeq	r0, r0, r0
    122c:	0000000c 	andeq	r0, r0, ip
    1230:	0000000c 	andeq	r0, r0, ip
    1234:	00001050 	andeq	r1, r0, r0, asr r0
    1238:	00000000 	andeq	r0, r0, r0
    123c:	0000000c 	andeq	r0, r0, ip
    1240:	0000000c 	andeq	r0, r0, ip
    1244:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1248:	7c020001 	stcvc	0, cr0, [r2], {1}
    124c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1250:	0000000c 	andeq	r0, r0, ip
    1254:	00001240 	andeq	r1, r0, r0, asr #4
    1258:	0800178c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, ip}
    125c:	00000014 	andeq	r0, r0, r4, lsl r0
    1260:	0000000c 	andeq	r0, r0, ip
    1264:	00001240 	andeq	r1, r0, r0, asr #4
    1268:	00000000 	andeq	r0, r0, r0
    126c:	000000a0 	andeq	r0, r0, r0, lsr #1
    1270:	0000000c 	andeq	r0, r0, ip
    1274:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1278:	7c020001 	stcvc	0, cr0, [r2], {1}
    127c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1280:	00000014 	andeq	r0, r0, r4, lsl r0
    1284:	00001270 	andeq	r1, r0, r0, ror r2
    1288:	080017a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, ip}
    128c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1290:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
    1294:	0000000e 	andeq	r0, r0, lr
    1298:	0000000c 	andeq	r0, r0, ip
    129c:	00001270 	andeq	r1, r0, r0, ror r2
    12a0:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    12a4:	00000036 	andeq	r0, r0, r6, lsr r0
    12a8:	00000014 	andeq	r0, r0, r4, lsl r0
    12ac:	00001270 	andeq	r1, r0, r0, ror r2
    12b0:	08001804 	stmdaeq	r0, {r2, fp, ip}
    12b4:	00000018 	andeq	r0, r0, r8, lsl r0
    12b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    12bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12c0:	00000014 	andeq	r0, r0, r4, lsl r0
    12c4:	00001270 	andeq	r1, r0, r0, ror r2
    12c8:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
    12cc:	00000050 	andeq	r0, r0, r0, asr r0
    12d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    12d8:	00000020 	andeq	r0, r0, r0, lsr #32
    12dc:	00001270 	andeq	r1, r0, r0, ror r2
    12e0:	0800186c 	stmdaeq	r0, {r2, r3, r5, r6, fp, ip}
    12e4:	0000007c 	andeq	r0, r0, ip, ror r0
    12e8:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    12ec:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    12f0:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    12f4:	89038804 	stmdbhi	r3, {r2, fp, pc}
    12f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    12fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1300:	00001270 	andeq	r1, r0, r0, ror r2
    1304:	080018e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip}
    1308:	00000184 	andeq	r0, r0, r4, lsl #3
    130c:	83180e41 	tsthi	r8, #1040	; 0x410
    1310:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1314:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1318:	00018e02 	andeq	r8, r1, r2, lsl #28
    131c:	0000000c 	andeq	r0, r0, ip
    1320:	00001270 	andeq	r1, r0, r0, ror r2
    1324:	00000000 	andeq	r0, r0, r0
    1328:	00000006 	andeq	r0, r0, r6
    132c:	0000000c 	andeq	r0, r0, ip
    1330:	00001270 	andeq	r1, r0, r0, ror r2
    1334:	00000000 	andeq	r0, r0, r0
    1338:	00000008 	andeq	r0, r0, r8
    133c:	0000000c 	andeq	r0, r0, ip
    1340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1344:	7c020001 	stcvc	0, cr0, [r2], {1}
    1348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    134c:	00000014 	andeq	r0, r0, r4, lsl r0
    1350:	0000133c 	andeq	r1, r0, ip, lsr r3
    1354:	08001a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp, ip}
    1358:	00000088 	andeq	r0, r0, r8, lsl #1
    135c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1360:	00018e02 	andeq	r8, r1, r2, lsl #28
    1364:	0000000c 	andeq	r0, r0, ip
    1368:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    136c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1370:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1374:	0000000c 	andeq	r0, r0, ip
    1378:	00001364 	andeq	r1, r0, r4, ror #6
    137c:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
    1380:	0000000c 	andeq	r0, r0, ip
    1384:	0000000c 	andeq	r0, r0, ip
    1388:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    138c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1390:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1394:	00000018 	andeq	r0, r0, r8, lsl r0
    1398:	00001384 	andeq	r1, r0, r4, lsl #7
    139c:	08001b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, ip}
    13a0:	00000048 	andeq	r0, r0, r8, asr #32
    13a4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13a8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    13b0:	0000000c 	andeq	r0, r0, ip
    13b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13c0:	0000000c 	andeq	r0, r0, ip
    13c4:	000013b0 			; <UNDEFINED> instruction: 0x000013b0
    13c8:	08001b9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, fp, ip}
    13cc:	00000010 	andeq	r0, r0, r0, lsl r0
    13d0:	0000000c 	andeq	r0, r0, ip
    13d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13d8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13e0:	0000002c 	andeq	r0, r0, ip, lsr #32
    13e4:	000013d0 	ldrdeq	r1, [r0], -r0
    13e8:	00000000 	andeq	r0, r0, r0
    13ec:	00000028 	andeq	r0, r0, r8, lsr #32
    13f0:	810c0e41 	tsthi	ip, r1, asr #28
    13f4:	83028203 	movwhi	r8, #8707	; 0x2203
    13f8:	200e4101 	andcs	r4, lr, r1, lsl #2
    13fc:	048e0584 	streq	r0, [lr], #1412	; 0x584
    1400:	42140e4e 	andsmi	r0, r4, #1248	; 0x4e0
    1404:	0c0ec4ce 	cfstrseq	mvf12, [lr], {206}	; 0xce
    1408:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    140c:	0000000e 	andeq	r0, r0, lr
    1410:	00000030 	andeq	r0, r0, r0, lsr r0
    1414:	000013d0 	ldrdeq	r1, [r0], -r0
    1418:	08001bac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, fp, ip}
    141c:	00000030 	andeq	r0, r0, r0, lsr r0
    1420:	80100e41 	andshi	r0, r0, r1, asr #28
    1424:	82038104 	andhi	r8, r3, #4, 2
    1428:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    142c:	0684200e 	streq	r2, [r4], lr
    1430:	0e4f058e 	cdpeq	5, 4, cr0, cr15, cr14, {4}
    1434:	c4ce4218 	strbgt	r4, [lr], #536	; 0x218
    1438:	c341100e 	movtgt	r1, #4110	; 0x100e
    143c:	0ec0c1c2 	acseqdm	f4, f2
    1440:	00000000 	andeq	r0, r0, r0
    1444:	0000000c 	andeq	r0, r0, ip
    1448:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    144c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1450:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1454:	00000018 	andeq	r0, r0, r8, lsl r0
    1458:	00001444 	andeq	r1, r0, r4, asr #8
    145c:	08001bdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, fp, ip}
    1460:	000000dc 	ldrdeq	r0, [r0], -ip
    1464:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1468:	86038504 	strhi	r8, [r3], -r4, lsl #10
    146c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1470:	0000000c 	andeq	r0, r0, ip
    1474:	00001444 	andeq	r1, r0, r4, asr #8
    1478:	08001cb8 	stmdaeq	r0, {r3, r4, r5, r7, sl, fp, ip}
    147c:	00000010 	andeq	r0, r0, r0, lsl r0
    1480:	0000000c 	andeq	r0, r0, ip
    1484:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1488:	7c020001 	stcvc	0, cr0, [r2], {1}
    148c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1490:	0000001c 	andeq	r0, r0, ip, lsl r0
    1494:	00001480 	andeq	r1, r0, r0, lsl #9
    1498:	08001cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp, ip}
    149c:	000000a4 	andeq	r0, r0, r4, lsr #1
    14a0:	83180e41 	tsthi	r8, #1040	; 0x410
    14a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    14a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    14ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    14b0:	0000000c 	andeq	r0, r0, ip
    14b4:	00001480 	andeq	r1, r0, r0, lsl #9
    14b8:	00000000 	andeq	r0, r0, r0
    14bc:	00000010 	andeq	r0, r0, r0, lsl r0
    14c0:	0000000c 	andeq	r0, r0, ip
    14c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    14cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14d0:	00000018 	andeq	r0, r0, r8, lsl r0
    14d4:	000014c0 	andeq	r1, r0, r0, asr #9
    14d8:	08001d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp, ip}
    14dc:	000000dc 	ldrdeq	r0, [r0], -ip
    14e0:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    14e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14ec:	0000000c 	andeq	r0, r0, ip
    14f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14f4:	7c020001 	stcvc	0, cr0, [r2], {1}
    14f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1500:	000014ec 	andeq	r1, r0, ip, ror #9
    1504:	08001e48 	stmdaeq	r0, {r3, r6, r9, sl, fp, ip}
    1508:	0000010c 	andeq	r0, r0, ip, lsl #2
    150c:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    1510:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1514:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1518:	00018e02 	andeq	r8, r1, r2, lsl #28
    151c:	00000018 	andeq	r0, r0, r8, lsl r0
    1520:	000014ec 	andeq	r1, r0, ip, ror #9
    1524:	08001f54 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl, fp, ip}
    1528:	00000078 	andeq	r0, r0, r8, ror r0
    152c:	83100e41 	tsthi	r0, #1040	; 0x410
    1530:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1534:	00018e02 	andeq	r8, r1, r2, lsl #28
    1538:	0000000c 	andeq	r0, r0, ip
    153c:	000014ec 	andeq	r1, r0, ip, ror #9
    1540:	00000000 	andeq	r0, r0, r0
    1544:	00000024 	andeq	r0, r0, r4, lsr #32
    1548:	0000000c 	andeq	r0, r0, ip
    154c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1550:	7c020001 	stcvc	0, cr0, [r2], {1}
    1554:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1558:	00000014 	andeq	r0, r0, r4, lsl r0
    155c:	00001548 	andeq	r1, r0, r8, asr #10
    1560:	08001fcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, fp, ip}
    1564:	00000048 	andeq	r0, r0, r8, asr #32
    1568:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    156c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1570:	0000000c 	andeq	r0, r0, ip
    1574:	00001548 	andeq	r1, r0, r8, asr #10
    1578:	08002014 	stmdaeq	r0, {r2, r4, sp}
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	00000014 	andeq	r0, r0, r4, lsl r0
    1584:	00001548 	andeq	r1, r0, r8, asr #10
    1588:	00000000 	andeq	r0, r0, r0
    158c:	00000018 	andeq	r0, r0, r8, lsl r0
    1590:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1594:	00018e02 	andeq	r8, r1, r2, lsl #28
    1598:	00000014 	andeq	r0, r0, r4, lsl r0
    159c:	00001548 	andeq	r1, r0, r8, asr #10
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	00000018 	andeq	r0, r0, r8, lsl r0
    15a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    15ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    15b0:	00000018 	andeq	r0, r0, r8, lsl r0
    15b4:	00001548 	andeq	r1, r0, r8, asr #10
    15b8:	08002020 	stmdaeq	r0, {r5, sp}
    15bc:	0000002c 	andeq	r0, r0, ip, lsr #32
    15c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    15c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    15c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15cc:	0000000c 	andeq	r0, r0, ip
    15d0:	00001548 	andeq	r1, r0, r8, asr #10
    15d4:	00000000 	andeq	r0, r0, r0
    15d8:	0000000c 	andeq	r0, r0, ip
    15dc:	0000000c 	andeq	r0, r0, ip
    15e0:	00001548 	andeq	r1, r0, r8, asr #10
    15e4:	0800204c 	stmdaeq	r0, {r2, r3, r6, sp}
    15e8:	0000000c 	andeq	r0, r0, ip
    15ec:	0000000c 	andeq	r0, r0, ip
    15f0:	00001548 	andeq	r1, r0, r8, asr #10
    15f4:	08002058 	stmdaeq	r0, {r3, r4, r6, sp}
    15f8:	0000000c 	andeq	r0, r0, ip
    15fc:	0000000c 	andeq	r0, r0, ip
    1600:	00001548 	andeq	r1, r0, r8, asr #10
    1604:	08002064 	stmdaeq	r0, {r2, r5, r6, sp}
    1608:	0000000c 	andeq	r0, r0, ip
    160c:	0000000c 	andeq	r0, r0, ip
    1610:	00001548 	andeq	r1, r0, r8, asr #10
    1614:	08002070 	stmdaeq	r0, {r4, r5, r6, sp}
    1618:	0000000c 	andeq	r0, r0, ip
    161c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1620:	00001548 	andeq	r1, r0, r8, asr #10
    1624:	0800207c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sp}
    1628:	00000070 	andeq	r0, r0, r0, ror r0
    162c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1630:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1634:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
    1638:	000b4200 	andeq	r4, fp, r0, lsl #4
    163c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1640:	00001548 	andeq	r1, r0, r8, asr #10
    1644:	080020ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sp}
    1648:	0000008c 	andeq	r0, r0, ip, lsl #1
    164c:	83180e41 	tsthi	r8, #1040	; 0x410
    1650:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1654:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1658:	00018e02 	andeq	r8, r1, r2, lsl #28
    165c:	00000018 	andeq	r0, r0, r8, lsl r0
    1660:	00001548 	andeq	r1, r0, r8, asr #10
    1664:	00000000 	andeq	r0, r0, r0
    1668:	0000001c 	andeq	r0, r0, ip, lsl r0
    166c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1670:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1674:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1678:	00000018 	andeq	r0, r0, r8, lsl r0
    167c:	00001548 	andeq	r1, r0, r8, asr #10
    1680:	00000000 	andeq	r0, r0, r0
    1684:	0000001c 	andeq	r0, r0, ip, lsl r0
    1688:	83080e41 	movwhi	r0, #36417	; 0x8e41
    168c:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1690:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1694:	0000000c 	andeq	r0, r0, ip
    1698:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    169c:	7c020001 	stcvc	0, cr0, [r2], {1}
    16a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16a8:	00001694 	muleq	r0, r4, r6
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	0000003a 	andeq	r0, r0, sl, lsr r0
    16b4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    16b8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    16bc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    16c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16c4:	00000020 	andeq	r0, r0, r0, lsr #32
    16c8:	00001694 	muleq	r0, r4, r6
    16cc:	08002178 	stmdaeq	r0, {r3, r4, r5, r6, r8, sp}
    16d0:	0000003e 	andeq	r0, r0, lr, lsr r0
    16d4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    16d8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    16dc:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    16e0:	89038804 	stmdbhi	r3, {r2, fp, pc}
    16e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    16e8:	0000000c 	andeq	r0, r0, ip
    16ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    16f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16f8:	0000000c 	andeq	r0, r0, ip
    16fc:	000016e8 	andeq	r1, r0, r8, ror #13
    1700:	00000000 	andeq	r0, r0, r0
    1704:	00000002 	andeq	r0, r0, r2
    1708:	0000000c 	andeq	r0, r0, ip
    170c:	000016e8 	andeq	r1, r0, r8, ror #13
    1710:	080021b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sp}
    1714:	00000002 	andeq	r0, r0, r2
    1718:	0000000c 	andeq	r0, r0, ip
    171c:	000016e8 	andeq	r1, r0, r8, ror #13
    1720:	00000000 	andeq	r0, r0, r0
    1724:	00000002 	andeq	r0, r0, r2
    1728:	0000000c 	andeq	r0, r0, ip
    172c:	000016e8 	andeq	r1, r0, r8, ror #13
    1730:	00000000 	andeq	r0, r0, r0
    1734:	00000002 	andeq	r0, r0, r2
    1738:	0000000c 	andeq	r0, r0, ip
    173c:	000016e8 	andeq	r1, r0, r8, ror #13
    1740:	00000000 	andeq	r0, r0, r0
    1744:	00000002 	andeq	r0, r0, r2
    1748:	0000000c 	andeq	r0, r0, ip
    174c:	000016e8 	andeq	r1, r0, r8, ror #13
    1750:	080021b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sp}
    1754:	00000002 	andeq	r0, r0, r2
    1758:	0000000c 	andeq	r0, r0, ip
    175c:	000016e8 	andeq	r1, r0, r8, ror #13
    1760:	00000000 	andeq	r0, r0, r0
    1764:	00000004 	andeq	r0, r0, r4
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	000016e8 	andeq	r1, r0, r8, ror #13
    1770:	00000000 	andeq	r0, r0, r0
    1774:	00000004 	andeq	r0, r0, r4
    1778:	0000000c 	andeq	r0, r0, ip
    177c:	000016e8 	andeq	r1, r0, r8, ror #13
    1780:	00000000 	andeq	r0, r0, r0
    1784:	00000002 	andeq	r0, r0, r2
    1788:	0000000c 	andeq	r0, r0, ip
    178c:	000016e8 	andeq	r1, r0, r8, ror #13
    1790:	080021ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, sp}
    1794:	00000002 	andeq	r0, r0, r2
    1798:	0000000c 	andeq	r0, r0, ip
    179c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17a0:	7c020001 	stcvc	0, cr0, [r2], {1}
    17a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17a8:	00000020 	andeq	r0, r0, r0, lsr #32
    17ac:	00001798 	muleq	r0, r8, r7
    17b0:	080021bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sp}
    17b4:	0000004a 	andeq	r0, r0, sl, asr #32
    17b8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    17bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17c0:	45018e02 	strmi	r8, [r1, #-3586]	; 0xfffff1fe
    17c4:	0e5e680e 	cdpeq	8, 5, cr6, cr14, cr14, {0}
    17c8:	00000010 	andeq	r0, r0, r0, lsl r0
    17cc:	00000020 	andeq	r0, r0, r0, lsr #32
    17d0:	00001798 	muleq	r0, r8, r7
    17d4:	08002208 	stmdaeq	r0, {r3, r9, sp}
    17d8:	00000080 	andeq	r0, r0, r0, lsl #1
    17dc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    17e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17e4:	4b018e02 	blmi	64ff4 <_Min_Heap_Size+0x647f4>
    17e8:	41100e0a 	tstmi	r0, sl, lsl #28
    17ec:	0000000b 	andeq	r0, r0, fp
    17f0:	0000000c 	andeq	r0, r0, ip
    17f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17f8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1800:	00000024 	andeq	r0, r0, r4, lsr #32
    1804:	000017f0 	strdeq	r1, [r0], -r0
    1808:	08002288 	stmdaeq	r0, {r3, r7, r9, sp}
    180c:	00000098 	muleq	r0, r8, r0
    1810:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
    1814:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1818:	0e0a5301 	cdpeq	3, 0, cr5, cr10, cr1, {0}
    181c:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
    1820:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1824:	0c0e710b 	stfeqs	f7, [lr], {11}
    1828:	0000000c 	andeq	r0, r0, ip
    182c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1830:	7c020001 	stcvc	0, cr0, [r2], {1}
    1834:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1838:	00000018 	andeq	r0, r0, r8, lsl r0
    183c:	00001828 	andeq	r1, r0, r8, lsr #16
    1840:	08002320 	stmdaeq	r0, {r5, r8, r9, sp}
    1844:	00000040 	andeq	r0, r0, r0, asr #32
    1848:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    184c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1850:	00018e02 	andeq	r8, r1, r2, lsl #28
    1854:	0000001c 	andeq	r0, r0, ip, lsl r0
    1858:	00001828 	andeq	r1, r0, r8, lsr #16
    185c:	08002360 	stmdaeq	r0, {r5, r6, r8, r9, sp}
    1860:	000000e8 	andeq	r0, r0, r8, ror #1
    1864:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1868:	86058506 	strhi	r8, [r5], -r6, lsl #10
    186c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1870:	00018e02 	andeq	r8, r1, r2, lsl #28
    1874:	0000000c 	andeq	r0, r0, ip
    1878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    187c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1880:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1884:	0000001c 	andeq	r0, r0, ip, lsl r0
    1888:	00001874 	andeq	r1, r0, r4, ror r8
    188c:	08002448 	stmdaeq	r0, {r3, r6, sl, sp}
    1890:	0000002e 	andeq	r0, r0, lr, lsr #32
    1894:	84040e44 	strhi	r0, [r4], #-3652	; 0xfffff1bc
    1898:	c40a4901 	strgt	r4, [sl], #-2305	; 0xfffff6ff
    189c:	0b42000e 	bleq	10818dc <_Min_Heap_Size+0x10810dc>
    18a0:	000ec447 	andeq	ip, lr, r7, asr #8
    18a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    18a8:	00001874 	andeq	r1, r0, r4, ror r8
    18ac:	08002476 	stmdaeq	r0, {r1, r2, r4, r5, r6, sl, sp}
    18b0:	00000024 	andeq	r0, r0, r4, lsr #32
    18b4:	83180e41 	tsthi	r8, #1040	; 0x410
    18b8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    18bc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    18c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    18c4:	00000018 	andeq	r0, r0, r8, lsl r0
    18c8:	00001874 	andeq	r1, r0, r4, ror r8
    18cc:	00000000 	andeq	r0, r0, r0
    18d0:	0000001a 	andeq	r0, r0, sl, lsl r0
    18d4:	83100e41 	tsthi	r0, #1040	; 0x410
    18d8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    18dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    18e0:	0000002c 	andeq	r0, r0, ip, lsr #32
    18e4:	00001874 	andeq	r1, r0, r4, ror r8
    18e8:	0800249c 	stmdaeq	r0, {r2, r3, r4, r7, sl, sp}
    18ec:	00000260 	andeq	r0, r0, r0, ror #4
    18f0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    18f4:	86088509 	strhi	r8, [r8], -r9, lsl #10
    18f8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    18fc:	8a048905 	bhi	123d18 <_Min_Heap_Size+0x123518>
    1900:	8e028b03 	vmlahi.f64	d8, d2, d3
    1904:	980e4201 	stmdals	lr, {r0, r9, lr}
    1908:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    190c:	000b4224 	andeq	r4, fp, r4, lsr #4
    1910:	0000000c 	andeq	r0, r0, ip
    1914:	00001874 	andeq	r1, r0, r4, ror r8
    1918:	00000000 	andeq	r0, r0, r0
    191c:	00000014 	andeq	r0, r0, r4, lsl r0
    1920:	0000000c 	andeq	r0, r0, ip
    1924:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1928:	7c020001 	stcvc	0, cr0, [r2], {1}
    192c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1930:	00000020 	andeq	r0, r0, r0, lsr #32
    1934:	00001920 	andeq	r1, r0, r0, lsr #18
    1938:	080026fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl, sp}
    193c:	000000da 	ldrdeq	r0, [r0], -sl
    1940:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1944:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1948:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    194c:	8a038904 	bhi	e3d64 <_Min_Heap_Size+0xe3564>
    1950:	00018e02 	andeq	r8, r1, r2, lsl #28
    1954:	00000028 	andeq	r0, r0, r8, lsr #32
    1958:	00001920 	andeq	r1, r0, r0, lsr #18
    195c:	080027d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, sp}
    1960:	0000024c 	andeq	r0, r0, ip, asr #4
    1964:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    1968:	86078508 	strhi	r8, [r7], -r8, lsl #10
    196c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1970:	8a038904 	bhi	e3d88 <_Min_Heap_Size+0xe3588>
    1974:	02018e02 	andeq	r8, r1, #2, 28
    1978:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    197c:	00000b42 	andeq	r0, r0, r2, asr #22
    1980:	0000000c 	andeq	r0, r0, ip
    1984:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1988:	7c020001 	stcvc	0, cr0, [r2], {1}
    198c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1990:	00000018 	andeq	r0, r0, r8, lsl r0
    1994:	00001980 	andeq	r1, r0, r0, lsl #19
    1998:	08002a24 	stmdaeq	r0, {r2, r5, r9, fp, sp}
    199c:	00000020 	andeq	r0, r0, r0, lsr #32
    19a0:	83100e41 	tsthi	r0, #1040	; 0x410
    19a4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    19a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19b4:	7c020001 	stcvc	0, cr0, [r2], {1}
    19b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19bc:	00000014 	andeq	r0, r0, r4, lsl r0
    19c0:	000019ac 	andeq	r1, r0, ip, lsr #19
    19c4:	08002a44 	stmdaeq	r0, {r2, r6, r9, fp, sp}
    19c8:	00000022 	andeq	r0, r0, r2, lsr #32
    19cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    19d4:	0000000c 	andeq	r0, r0, ip
    19d8:	000019ac 	andeq	r1, r0, ip, lsr #19
    19dc:	00000000 	andeq	r0, r0, r0
    19e0:	00000004 	andeq	r0, r0, r4
    19e4:	00000024 	andeq	r0, r0, r4, lsr #32
    19e8:	000019ac 	andeq	r1, r0, ip, lsr #19
    19ec:	08002a66 	stmdaeq	r0, {r1, r2, r5, r6, r9, fp, sp}
    19f0:	00000038 	andeq	r0, r0, r8, lsr r0
    19f4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    19f8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    19fc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1a00:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    1a04:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1a08:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1a0c:	00000014 	andeq	r0, r0, r4, lsl r0
    1a10:	000019ac 	andeq	r1, r0, ip, lsr #19
    1a14:	08002a9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, fp, sp}
    1a18:	00000024 	andeq	r0, r0, r4, lsr #32
    1a1c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1a20:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019ac 	andeq	r1, r0, ip, lsr #19
    1a2c:	08002ac2 	stmdaeq	r0, {r1, r6, r7, r9, fp, sp}
    1a30:	00000008 	andeq	r0, r0, r8
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a44:	00000018 	andeq	r0, r0, r8, lsl r0
    1a48:	00001a34 	andeq	r1, r0, r4, lsr sl
    1a4c:	08002acc 	stmdaeq	r0, {r2, r3, r6, r7, r9, fp, sp}
    1a50:	00000024 	andeq	r0, r0, r4, lsr #32
    1a54:	83100e41 	tsthi	r0, #1040	; 0x410
    1a58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a60:	0000000c 	andeq	r0, r0, ip
    1a64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a70:	00000018 	andeq	r0, r0, r8, lsl r0
    1a74:	00001a60 	andeq	r1, r0, r0, ror #20
    1a78:	08002af0 	stmdaeq	r0, {r4, r5, r6, r7, r9, fp, sp}
    1a7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1a80:	83100e41 	tsthi	r0, #1040	; 0x410
    1a84:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a88:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a94:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1aa0:	00001a8c 	andeq	r1, r0, ip, lsl #21
    1aa4:	08002b10 	stmdaeq	r0, {r4, r8, r9, fp, sp}
    1aa8:	00000024 	andeq	r0, r0, r4, lsr #32
    1aac:	83100e41 	tsthi	r0, #1040	; 0x410
    1ab0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ab4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ab8:	0000000c 	andeq	r0, r0, ip
    1abc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ac0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ac4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ac8:	00000018 	andeq	r0, r0, r8, lsl r0
    1acc:	00001ab8 			; <UNDEFINED> instruction: 0x00001ab8
    1ad0:	08002b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, sp}
    1ad4:	00000020 	andeq	r0, r0, r0, lsr #32
    1ad8:	83100e41 	tsthi	r0, #1040	; 0x410
    1adc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ae0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ae4:	0000000c 	andeq	r0, r0, ip
    1ae8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aec:	7c020001 	stcvc	0, cr0, [r2], {1}
    1af0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1af4:	00000018 	andeq	r0, r0, r8, lsl r0
    1af8:	00001ae4 	andeq	r1, r0, r4, ror #21
    1afc:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
    1b00:	00000024 	andeq	r0, r0, r4, lsr #32
    1b04:	83100e41 	tsthi	r0, #1040	; 0x410
    1b08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b10:	0000000c 	andeq	r0, r0, ip
    1b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b20:	0000000c 	andeq	r0, r0, ip
    1b24:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b28:	08002b78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, fp, sp}
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	0000000c 	andeq	r0, r0, ip
    1b34:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b38:	08002b84 	stmdaeq	r0, {r2, r7, r8, r9, fp, sp}
    1b3c:	0000000c 	andeq	r0, r0, ip
    1b40:	0000000c 	andeq	r0, r0, ip
    1b44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b48:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b50:	00000018 	andeq	r0, r0, r8, lsl r0
    1b54:	00001b40 	andeq	r1, r0, r0, asr #22
    1b58:	08002b90 	stmdaeq	r0, {r4, r7, r8, r9, fp, sp}
    1b5c:	00000024 	andeq	r0, r0, r4, lsr #32
    1b60:	83100e41 	tsthi	r0, #1040	; 0x410
    1b64:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b68:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b6c:	0000000c 	andeq	r0, r0, ip
    1b70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b74:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b80:	00001b6c 	andeq	r1, r0, ip, ror #22
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	0000001a 	andeq	r0, r0, sl, lsl r0
    1b8c:	83100e41 	tsthi	r0, #1040	; 0x410
    1b90:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b94:	4a018e02 	bmi	653a4 <_Min_Heap_Size+0x64ba4>
    1b98:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1b9c:	0000000e 	andeq	r0, r0, lr
    1ba0:	00000024 	andeq	r0, r0, r4, lsr #32
    1ba4:	00001b6c 	andeq	r1, r0, ip, ror #22
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	000000b8 	strheq	r0, [r0], -r8
    1bb0:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    1bb4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1bb8:	7f018e02 	svcvc	0x00018e02
    1bbc:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1bc0:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1bc4:	0000000b 	andeq	r0, r0, fp
    1bc8:	0000000c 	andeq	r0, r0, ip
    1bcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bd0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bd4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bd8:	00000018 	andeq	r0, r0, r8, lsl r0
    1bdc:	00001bc8 	andeq	r1, r0, r8, asr #23
    1be0:	080002c0 	stmdaeq	r0, {r6, r7, r9}
    1be4:	00000030 	andeq	r0, r0, r0, lsr r0
    1be8:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1bec:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1bf0:	00000010 	andeq	r0, r0, r0, lsl r0
    1bf4:	0000000c 	andeq	r0, r0, ip
    1bf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bfc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c04:	00000020 	andeq	r0, r0, r0, lsr #32
    1c08:	00001bf4 	strdeq	r1, [r0], -r4
    1c0c:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
    1c10:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c14:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1c18:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1c1c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1c20:	8a038904 	bhi	e4038 <_Min_Heap_Size+0xe3838>
    1c24:	00018e02 	andeq	r8, r1, r2, lsl #28
